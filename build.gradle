plugins {
    id "java"
    id "io.freefair.lombok" version "8.10"
    id "com.gradleup.shadow" version "8.3.1"
    id "io.papermc.paperweight.userdev" version "1.7.4" apply false
}

group = "kr.rtuserver"
version = plugin_version

allprojects {
    apply {
        plugin("java")
        plugin("io.freefair.lombok")
        plugin("com.gradleup.shadow")
    }

    repositories {
        mavenCentral()
        maven {
            name = "spigotmc-repo"
            url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
        }
        maven {
            name = "papermc"
            url = "https://repo.papermc.io/repository/maven-public/"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/groups/public/"
        }
        maven {
            url = "https://repo.extendedclip.com/content/repositories/placeholderapi/"
        }
        maven {
            url = "https://mvnrepository.com/artifact/org.projectlombok/lombok"
        }
        maven {
            url = "https://jitpack.io"
        }
        maven {
            url = "https://repo.oraxen.com/releases"
        }
        maven {
            url = "https://repo.dmulloy2.net/repository/public/"
        }
        maven {
            url = "https://repo.viaversion.com"
        }
        maven {
            url = "https://nexus.phoenixdevt.fr/repository/maven-public/"
        }
    }

    dependencies {
        compileOnly "org.quartz-scheduler:quartz:2.5.0-rc1"

        compileOnly "net.kyori:adventure-text-minimessage:4.16.0"
        compileOnly "com.google.code.gson:gson:2.10.1"
        compileOnly "com.google.guava:guava:32.1.2-jre"
        compileOnly "org.apache.commons:commons-lang3:3.14.0"
        compileOnly "org.xerial.snappy:snappy-java:1.1.10.5"
        compileOnly "org.projectlombok:lombok:1.18.32"
        compileOnly "org.slf4j:slf4j-api:2.0.16"

    }

    shadowJar {
        setArchiveClassifier(null)
    }

    java {
        def javaVersion = JavaVersion.toVersion(java_version as Integer)
        sourceCompatibility = javaVersion
        targetCompatibility = javaVersion
        if (JavaVersion.current() < javaVersion) toolchain.languageVersion = JavaLanguageVersion.of(java_version as Integer)
    }

    tasks.withType(JavaCompile).configureEach {
        options.release = java_version as Integer
    }
}

jar {
    finalizedBy shadowJar
}

dependencies {

    implementation project(path: ":Platform:Bukkit")
    implementation project(path: ":Platform:Bungee")
    implementation project(path: ":Platform:Velocity")

    implementation "com.github.Carleslc.Simple-YAML:Simple-Yaml:1.8.4"

    compileOnly "org.projectlombok:lombok:1.18.32"
    annotationProcessor "org.projectlombok:lombok:1.18.32"
}

shadowJar {

    doLast {
        copy {
            from archiveFile.get().asFile into file("$rootDir/builds/plugin")
        }
    }

    setArchiveClassifier(null)
    setArchiveBaseName(plugin_name)
    setArchiveVersion(plugin_version)

    exclude "org/checkerframework/**"
    exclude "org/bouncycastle/**"
    exclude "edu/umd/cs/findbugs/**"
    exclude "javax/**"
    exclude "javassist/**"
    exclude "net/jcip/**"
    exclude "com/google/**"
    exclude "io/netty/**"
    exclude "META-INF/**"
    exclude "classpath.index"

    relocate "io.papermc.lib", "kr.rtuserver.framework.bukkit.api.utility.paper"
    relocate "net.kyori.adventure.platform.bukkit", "kr.rtuserver.framework.bukkit.api.utility.kyori"
}