tiny	2	0	official	mojang+yarn
c	a	com/mojang/math/Axis
	m	(F)Lorg/joml/Quaternionf;	a	lambda$static$5
		p	0		rad
	m	(Lorg/joml/Vector3f;F)Lorg/joml/Quaternionf;	a	lambda$of$6
		p	1		rad
	m	(F)Lorg/joml/Quaternionf;	b	lambda$static$4
		p	0		rad
	m	(F)Lorg/joml/Quaternionf;	c	lambda$static$3
		p	0		rad
	m	(F)Lorg/joml/Quaternionf;	d	lambda$static$2
		p	0		rad
	m	(F)Lorg/joml/Quaternionf;	e	lambda$static$1
		p	0		rad
	m	(F)Lorg/joml/Quaternionf;	f	lambda$static$0
		p	0		rad
	m	(Lorg/joml/Vector3f;)La;	of	of
		p	0		axis
	m	(F)Lorg/joml/Quaternionf;	rotation	rotation
		p	1		rad
	m	(F)Lorg/joml/Quaternionf;	rotationDegrees	rotationDegrees
		p	1		deg
	f	La;	a	XN
	f	La;	b	XP
	f	La;	c	YN
	f	La;	d	YP
	f	La;	e	ZN
	f	La;	f	ZP
c	b	com/mojang/math/Constants
	f	F	a	PI
	f	F	b	RAD_TO_DEG
	f	F	c	DEG_TO_RAD
	f	F	d	EPSILON
c	c	com/mojang/math/Divisor
	m	(II)V	<init>	<init>
		p	1		dividend
		p	2		divisor
	m	(II)Ljava/lang/Iterable;	a	asIterable
		p	0		dividend
		p	1		divisor
	m	(II)Ljava/util/Iterator;	b	lambda$asIterable$0
	f	I	a	denominator
	f	I	b	quotient
	f	I	c	mod
	f	I	d	returnedParts
	f	I	e	remainder
c	d	com/mojang/math/FieldsAreNonnullByDefault
c	e	com/mojang/math/GivensParameters
	m	()Le;	a	inverse
	m	(F)Le;	a	fromPositiveAngle
		p	0		radians
	m	(FF)Le;	a	fromUnnormalized
		p	0		a
		p	1		b
	m	(Lorg/joml/Matrix3f;)Lorg/joml/Matrix3f;	a	aroundX
	m	(Lorg/joml/Quaternionf;)Lorg/joml/Quaternionf;	a	aroundX
	m	()F	b	cos
	m	(Lorg/joml/Matrix3f;)Lorg/joml/Matrix3f;	b	aroundY
	m	(Lorg/joml/Quaternionf;)Lorg/joml/Quaternionf;	b	aroundY
	m	()F	c	sin
	m	(Lorg/joml/Matrix3f;)Lorg/joml/Matrix3f;	c	aroundZ
	m	(Lorg/joml/Quaternionf;)Lorg/joml/Quaternionf;	c	aroundZ
	m	()F	d	sinHalf
	m	()F	e	cosHalf
	f	F	a	sinHalf
	f	F	b	cosHalf
c	f	com/mojang/math/MatrixUtil
	m	(FF)Le;	a	qrGivensQuat
		p	0		a1
		p	1		a2
	m	(FFF)Le;	a	approxGivensQuat
		p	0		a11
		p	1		a12
		p	2		a22
	m	(Lorg/joml/Matrix3f;)Lorg/apache/commons/lang3/tuple/Triple;	a	svdDecompose
		p	0		A
	m	(Lorg/joml/Matrix3f;I)Lorg/joml/Quaternionf;	a	eigenvalueJacobi
	m	(Lorg/joml/Matrix3f;Lorg/joml/Matrix3f;)V	a	similarityTransform
	m	(Lorg/joml/Matrix3f;Lorg/joml/Matrix3f;Lorg/joml/Quaternionf;Lorg/joml/Quaternionf;)V	a	stepJacobi
	m	(Lorg/joml/Matrix4f;F)Lorg/joml/Matrix4f;	a	mulComponentWise
		p	0		matrix
		p	1		scalar
	f	F	a	G
	f	Le;	b	PI_4
c	g	com/mojang/math/MethodsReturnNonnullByDefault
c	h	com/mojang/math/OctahedralGroup
	m	(Ljava/lang/String;ILjava/lang/String;Li;ZZZ)V	<init>	<init>
		p	3		name
		p	4		axisTransformation
		p	5		flipX
		p	6		flipY
		p	7		flipZ
	m	()Lh;	a	inverse
	m	(I)[Lh;	a	lambda$static$5
	m	(Lgz$a;)Z	a	inverts
		p	1		axis
	m	(Lgz;)Lgz;	a	rotate
		p	1		direction
	m	(Lh;)Lh;	a	compose
		p	1		transformation
	m	(Lh;Lh;)Z	a	lambda$static$3
	m	(Lhb;)Lhb;	a	rotate
		p	1		orientation
	m	([[Lh;)V	a	lambda$static$2
	m	()Lorg/joml/Matrix3f;	b	transformation
	m	(Lh;)Lh;	b	lambda$static$4
	m	()Ljava/lang/String;	c	getSerializedName
	m	(Lh;)Lh;	c	lambda$static$1
	m	()Lit/unimi/dsi/fastutil/booleans/BooleanList;	d	packInversions
	m	(Lh;)Lcom/mojang/datafixers/util/Pair;	d	lambda$static$0
	m	()[Lh;	e	$values
	f	Lh;	A	INVERT_Y
	f	Lh;	B	INVERT_Z
	f	Lh;	C	ROT_60_REF_NNN
	f	Lh;	D	ROT_60_REF_NNP
	f	Lh;	E	ROT_60_REF_NPN
	f	Lh;	F	ROT_60_REF_NPP
	f	Lh;	G	ROT_60_REF_PNN
	f	Lh;	H	ROT_60_REF_PNP
	f	Lh;	I	ROT_60_REF_PPN
	f	Lh;	J	ROT_60_REF_PPP
	f	Lh;	K	SWAP_XY
	f	Lh;	L	SWAP_YZ
	f	Lh;	M	SWAP_XZ
	f	Lh;	N	SWAP_NEG_XY
	f	Lh;	O	SWAP_NEG_YZ
	f	Lh;	P	SWAP_NEG_XZ
	f	Lh;	Q	ROT_90_REF_X_NEG
	f	Lh;	R	ROT_90_REF_X_POS
	f	Lh;	S	ROT_90_REF_Y_NEG
	f	Lh;	T	ROT_90_REF_Y_POS
	f	Lh;	U	ROT_90_REF_Z_NEG
	f	Lh;	V	ROT_90_REF_Z_POS
	f	Lorg/joml/Matrix3f;	X	transformation
	f	Ljava/lang/String;	Y	name
	f	Ljava/util/Map;	Z	rotatedDirections
	f	Lh;	a	IDENTITY
	f	Z	aa	invertX
	f	Z	ab	invertY
	f	Z	ac	invertZ
	f	Li;	ad	permutation
	f	[[Lh;	ae	cayleyTable
	f	[Lh;	af	inverseTable
	f	[Lh;	ag	$VALUES
	f	Lh;	b	ROT_180_FACE_XY
	f	Lh;	c	ROT_180_FACE_XZ
	f	Lh;	d	ROT_180_FACE_YZ
	f	Lh;	e	ROT_120_NNN
	f	Lh;	f	ROT_120_NNP
	f	Lh;	g	ROT_120_NPN
	f	Lh;	h	ROT_120_NPP
	f	Lh;	i	ROT_120_PNN
	f	Lh;	j	ROT_120_PNP
	f	Lh;	k	ROT_120_PPN
	f	Lh;	l	ROT_120_PPP
	f	Lh;	m	ROT_180_EDGE_XY_NEG
	f	Lh;	n	ROT_180_EDGE_XY_POS
	f	Lh;	o	ROT_180_EDGE_XZ_NEG
	f	Lh;	p	ROT_180_EDGE_XZ_POS
	f	Lh;	q	ROT_180_EDGE_YZ_NEG
	f	Lh;	r	ROT_180_EDGE_YZ_POS
	f	Lh;	s	ROT_90_X_NEG
	f	Lh;	t	ROT_90_X_POS
	f	Lh;	u	ROT_90_Y_NEG
	f	Lh;	v	ROT_90_Y_POS
	f	Lh;	w	ROT_90_Z_NEG
	f	Lh;	x	ROT_90_Z_POS
	f	Lh;	y	INVERSION
	f	Lh;	z	INVERT_X
c	h$1	com/mojang/math/OctahedralGroup$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction$Axis
c	i	com/mojang/math/SymmetricGroup3
	m	(Ljava/lang/String;IIII)V	<init>	<init>
		p	3		xMapping
		p	4		yMapping
		p	5		zMapping
	m	()Lorg/joml/Matrix3f;	a	transformation
	m	(I)I	a	permutation
		p	1		oldAxis
	m	(Li;)Li;	a	compose
		p	1		transformation
	m	([ILi;)Z	a	lambda$static$0
	m	([[Li;)V	a	lambda$static$1
	m	()[Li;	b	$values
	f	Li;	a	P123
	f	Li;	b	P213
	f	Li;	c	P132
	f	Li;	d	P231
	f	Li;	e	P312
	f	Li;	f	P321
	f	[I	g	permutation
	f	Lorg/joml/Matrix3f;	h	transformation
	f	I	i	ORDER
	f	[[Li;	j	cayleyTable
	f	[Li;	k	$VALUES
c	j	com/mojang/math/Transformation
	m	(Lorg/joml/Matrix4f;)V	<init>	<init>
		p	1		matrix
	m	(Lorg/joml/Vector3f;Lorg/joml/Quaternionf;Lorg/joml/Vector3f;Lorg/joml/Quaternionf;)V	<init>	<init>
		p	1		translation
		p	2		leftRotation
		p	3		scale
		p	4		rightRotation
	m	()Lj;	a	identity
	m	(Lcom/mojang/datafixers/util/Either;)Lj;	a	lambda$static$7
		p	0		either
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
		p	0		instance
	m	(Lj;)Lj;	a	compose
		p	1		other
	m	(Lj;F)Lj;	a	slerp
		p	1		target
		p	2		factor
	m	(Lorg/joml/Vector3f;Lorg/joml/Quaternionf;Lorg/joml/Vector3f;Lorg/joml/Quaternionf;)Lorg/joml/Matrix4f;	a	compose
		p	0		translation
		p	1		leftRotation
		p	2		scale
		p	3		rightRotation
	m	()Lj;	b	inverse
	m	(Lj;)Lj;	b	lambda$static$6
		p	0		affineTransformation
	m	()Lorg/joml/Matrix4f;	c	getMatrix
	m	(Lj;)Lj;	c	lambda$static$5
		p	0		affineTransformation
	m	()Lorg/joml/Vector3f;	d	getTranslation
	m	(Lj;)Lorg/joml/Quaternionf;	d	lambda$static$3
		p	0		affineTransformation
	m	()Lorg/joml/Quaternionf;	e	getLeftRotation
	m	(Lj;)Lorg/joml/Vector3f;	e	lambda$static$2
		p	0		affineTransformation
	m	()Lorg/joml/Vector3f;	f	getScale
	m	(Lj;)Lorg/joml/Quaternionf;	f	lambda$static$1
		p	0		affineTransformation
	m	()Lorg/joml/Quaternionf;	g	getRightRotation
	m	(Lj;)Lorg/joml/Vector3f;	g	lambda$static$0
	m	()V	h	ensureDecomposed
	m	()Lj;	i	lambda$static$8
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcom/mojang/serialization/Codec;	b	EXTENDED_CODEC
	f	Lorg/joml/Matrix4f;	c	matrix
	f	Z	d	decomposed
	f	Lorg/joml/Vector3f;	e	translation
	f	Lorg/joml/Quaternionf;	f	leftRotation
	f	Lorg/joml/Vector3f;	g	scale
	f	Lorg/joml/Quaternionf;	h	rightRotation
	f	Lj;	i	IDENTITY
c	k	com/mojang/math/package-info
c	l	net/minecraft/BlockUtil
	m	(Lclo;Lgt;Lcpi;Lgz;Lcpi;)Ljava/util/Optional;	a	getTopConnectedBlock
		p	0		world
		p	1		pos
		p	2		intermediateBlock
		p	3		direction
		p	4		endBlock
	m	(Lgt;Lgz$a;ILgz$a;ILjava/util/function/Predicate;)Ll$a;	a	getLargestRectangleAround
		p	0		center
		p	1		primaryAxis
		p	2		primaryMaxBlocks
		p	3		secondaryAxis
		p	4		secondaryMaxBlocks
		p	5		predicate
	m	(Ljava/util/function/Predicate;Lgt$a;Lgz;I)I	a	getLimit
		p	0		predicate
		p	1		pos
		p	2		direction
		p	3		max
	m	([I)Lcom/mojang/datafixers/util/Pair;	a	getMaxRectangleLocation
		p	0		heights
c	l$a	net/minecraft/BlockUtil$FoundRectangle
	m	(Lgt;II)V	<init>	<init>
		p	1		lowerLeft
		p	2		width
		p	3		height
	f	Lgt;	a	minCorner
	f	I	b	axis1Size
	f	I	c	axis2Size
c	l$b	net/minecraft/BlockUtil$IntBounds
	m	(II)V	<init>	<init>
		p	1		min
		p	2		max
	f	I	a	min
	f	I	b	max
c	m	net/minecraft/CharPredicate
	m	(C)Z	a	lambda$negate$1
		p	1		c
	m	(Lm;C)Z	a	lambda$or$2
		p	2		c
	m	(Lm;)Lm;	and	and
		p	1		predicate
	m	(Lm;C)Z	b	lambda$and$0
		p	2		c
	m	(Lm;)Lm;	or	or
		p	1		predicate
	m	(C)Z	test	test
		p	1		c
c	n	net/minecraft/ChatFormatting
	m	(Ljava/lang/String;ILjava/lang/String;CILjava/lang/Integer;)V	<init>	<init>
		p	3		name
		p	4		code
		p	5		colorIndex
		p	6		colorValue
	m	(Ljava/lang/String;ILjava/lang/String;CZ)V	<init>	<init>
		p	3		name
		p	4		code
		p	5		modifier
	m	(Ljava/lang/String;ILjava/lang/String;CZILjava/lang/Integer;)V	<init>	<init>
		p	3		name
		p	4		code
		p	5		modifier
		p	6		colorIndex
		p	7		colorValue
	m	()C	a	getChar
	m	(C)Ln;	a	getByCode
		p	0		code
	m	(I)Ln;	a	getById
		p	0		colorIndex
	m	(Ljava/lang/String;)Ljava/lang/String;	a	stripFormatting
		p	0		string
	m	(Ln;)Ln;	a	lambda$static$1
		p	0		f
	m	(ZZ)Ljava/util/Collection;	a	getNames
		p	0		colors
		p	1		modifiers
	m	()I	b	getId
	m	(Ljava/lang/String;)Ln;	b	getByName
		p	0		name
	m	(Ln;)Ljava/lang/String;	b	lambda$static$0
		p	0		f
	m	()Ljava/lang/String;	c	getSerializedName
	m	(Ljava/lang/String;)Ljava/lang/String;	c	cleanName
		p	0		name
	m	()Z	d	isFormat
	m	()Z	e	isColor
	m	()Ljava/lang/Integer;	f	getColor
	m	()Ljava/lang/String;	g	getName
	m	()[Ln;	h	$values
	f	Ljava/lang/String;	A	name
	f	C	B	code
	f	Z	C	isFormat
	f	Ljava/lang/String;	D	toString
	f	I	E	id
	f	Ljava/lang/Integer;	F	color
	f	[Ln;	G	$VALUES
	f	Ln;	a	BLACK
	f	Ln;	b	DARK_BLUE
	f	Ln;	c	DARK_GREEN
	f	Ln;	d	DARK_AQUA
	f	Ln;	e	DARK_RED
	f	Ln;	f	DARK_PURPLE
	f	Ln;	g	GOLD
	f	Ln;	h	GRAY
	f	Ln;	i	DARK_GRAY
	f	Ln;	j	BLUE
	f	Ln;	k	GREEN
	f	Ln;	l	AQUA
	f	Ln;	m	RED
	f	Ln;	n	LIGHT_PURPLE
	f	Ln;	o	YELLOW
	f	Ln;	p	WHITE
	f	Ln;	q	OBFUSCATED
	f	Ln;	r	BOLD
	f	Ln;	s	STRIKETHROUGH
	f	Ln;	t	UNDERLINE
	f	Ln;	u	ITALIC
	f	Ln;	v	RESET
	f	Lcom/mojang/serialization/Codec;	w	CODEC
	f	C	x	PREFIX_CODE
	f	Ljava/util/Map;	y	FORMATTING_BY_NAME
	f	Ljava/util/regex/Pattern;	z	STRIP_FORMATTING_PATTERN
c	o	net/minecraft/CrashReport
	m	(Ljava/lang/String;Ljava/lang/Throwable;)V	<init>	<init>
		p	1		message
		p	2		cause
	m	()Ljava/lang/String;	a	getTitle
	m	(Ljava/io/File;)Z	a	saveToFile
		p	1		file
	m	(Ljava/lang/String;)Lp;	a	addCategory
		p	1		name
	m	(Ljava/lang/String;I)Lp;	a	addCategory
		p	1		name
		p	2		ignoredStackTraceCallCount
	m	(Ljava/lang/StringBuilder;)V	a	getDetails
		p	1		crashReportBuilder
	m	(Ljava/lang/Throwable;Ljava/lang/String;)Lo;	a	forThrowable
		p	0		cause
		p	1		title
	m	()Ljava/lang/Throwable;	b	getException
	m	()Ljava/lang/String;	c	getDetails
	m	()Ljava/lang/String;	d	getExceptionMessage
	m	()Ljava/lang/String;	e	getFriendlyReport
	m	()Ljava/io/File;	f	getSaveFile
	m	()Lab;	g	getSystemReport
	m	()V	h	preload
	m	()Ljava/lang/String;	i	getErrorComment
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/time/format/DateTimeFormatter;	b	DATE_TIME_FORMATTER
	f	Ljava/lang/String;	c	title
	f	Ljava/lang/Throwable;	d	exception
	f	Ljava/util/List;	e	details
	f	Ljava/io/File;	f	saveFile
	f	Z	g	trackingStackTrace
	f	[Ljava/lang/StackTraceElement;	h	uncategorizedStackTrace
	f	Lab;	i	systemReport
c	p	net/minecraft/CrashReportCategory
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		title
	m	()[Ljava/lang/StackTraceElement;	a	getStacktrace
	m	(I)I	a	fillInStackTrace
		p	1		ignoredCallCount
	m	(Lcmk;DDD)Ljava/lang/String;	a	formatLocation
		p	0		world
		p	1		x
		p	3		y
		p	5		z
	m	(Lcmk;III)Ljava/lang/String;	a	formatLocation
		p	0		world
		p	1		x
		p	2		y
		p	3		z
	m	(Lcmk;Lgt;)Ljava/lang/String;	a	formatLocation
		p	0		world
		p	1		pos
	m	(Ljava/lang/StackTraceElement;Ljava/lang/StackTraceElement;)Z	a	validateStackTrace
		p	1		prev
		p	2		next
	m	(Ljava/lang/String;Ljava/lang/Object;)Lp;	a	setDetail
		p	1		name
		p	2		detail
	m	(Ljava/lang/String;Ljava/lang/Throwable;)V	a	setDetailError
		p	1		name
		p	2		throwable
	m	(Ljava/lang/String;Lq;)Lp;	a	setDetail
		p	1		name
		p	2		callable
	m	(Ljava/lang/StringBuilder;)V	a	getDetails
		p	1		crashReportBuilder
	m	(Lp;Lcmk;Lgt;Ldbq;)V	a	populateBlockDetails
		p	0		element
		p	1		world
		p	2		pos
		p	3		state
	m	(I)V	b	trimStacktrace
		p	1		callCount
	m	(Lcmk;Lgt;)Ljava/lang/String;	b	lambda$populateBlockDetails$0
	f	Ljava/lang/String;	a	title
	f	Ljava/util/List;	b	entries
	f	[Ljava/lang/StackTraceElement;	c	stackTrace
c	p$a	net/minecraft/CrashReportCategory$Entry
	m	(Ljava/lang/String;Ljava/lang/Object;)V	<init>	<init>
		p	1		name
		p	2		detail
	m	()Ljava/lang/String;	a	getKey
	m	()Ljava/lang/String;	b	getValue
	f	Ljava/lang/String;	a	key
	f	Ljava/lang/String;	b	value
c	q	net/minecraft/CrashReportDetail
c	r	net/minecraft/DefaultUncaughtExceptionHandler
	m	(Lorg/slf4j/Logger;)V	<init>	<init>
		p	1		logger
	f	Lorg/slf4j/Logger;	a	logger
c	s	net/minecraft/DefaultUncaughtExceptionHandlerWithName
	m	(Lorg/slf4j/Logger;)V	<init>	<init>
		p	1		logger
	f	Lorg/slf4j/Logger;	a	logger
c	t	net/minecraft/DetectedVersion
	m	(Lcom/google/gson/JsonObject;)V	<init>	<init>
		p	1		json
	m	()Lad;	a	tryDetectVersion
	m	(Lajw;)I	a	getPackVersion
		p	1		type
	m	()Ljava/lang/String;	b	getId
	m	()Ljava/lang/String;	c	getName
	m	()Ldxy;	d	getDataVersion
	m	()I	e	getProtocolVersion
	m	()Ljava/util/Date;	f	getBuildTime
	m	()Z	g	isStable
	f	Lad;	a	BUILT_IN
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ljava/lang/String;	c	id
	f	Ljava/lang/String;	d	name
	f	Z	e	stable
	f	Ldxy;	f	worldVersion
	f	I	g	protocolVersion
	f	I	h	resourcePackVersion
	f	I	i	dataPackVersion
	f	Ljava/util/Date;	j	buildTime
c	u	net/minecraft/FieldsAreNonnullByDefault
c	v	net/minecraft/FileUtil
	m	(Ljava/lang/String;)Ljava/lang/String;	a	getFullResourcePath
		p	0		path
	m	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	a	lambda$decomposePath$3
	m	(Ljava/nio/file/Path;)Z	a	isPathNormalized
		p	0		path
	m	(Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	a	findAvailableName
		p	0		path
		p	1		name
		p	2		extension
	m	(Ljava/nio/file/Path;Ljava/util/List;)Ljava/nio/file/Path;	a	resolvePath
		p	0		root
		p	1		paths
	m	([Ljava/lang/String;)V	a	validatePath
		p	0		paths
	m	(Ljava/lang/String;)Ljava/lang/String;	b	normalizeResourcePath
		p	0		path
	m	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	b	lambda$decomposePath$2
	m	(Ljava/nio/file/Path;)Z	b	isPathPortable
		p	0		path
	m	(Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;)Ljava/nio/file/Path;	b	createPathToResource
		p	0		path
		p	1		resourceName
		p	2		extension
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	c	decomposePath
		p	0		path
	m	(Ljava/nio/file/Path;)V	c	createDirectoriesSafe
		p	0		path
	m	(Ljava/lang/String;)Z	d	isValidStrictPathSegment
		p	0		name
	m	(Ljava/lang/String;)Ljava/lang/String;	e	lambda$decomposePath$1
	m	(Ljava/lang/String;)Ljava/lang/String;	f	lambda$decomposePath$0
	f	Ljava/util/regex/Pattern;	a	COPY_COUNTER_PATTERN
	f	I	b	MAX_FILE_NAME
	f	Ljava/util/regex/Pattern;	c	RESERVED_WINDOWS_FILENAMES
	f	Ljava/util/regex/Pattern;	d	STRICT_PATH_SEGMENT_CHECK
c	w	net/minecraft/MethodsReturnNonnullByDefault
c	x	net/minecraft/Optionull
	m	(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;	a	map
		p	0		value
		p	1		mapper
	m	(Ljava/lang/Object;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object;	a	mapOrDefault
		p	0		value
		p	1		mapper
		p	2		other
	m	(Ljava/lang/Object;Ljava/util/function/Function;Ljava/util/function/Supplier;)Ljava/lang/Object;	a	mapOrElse
		p	0		value
		p	1		mapper
		p	2		getter
	m	(Ljava/util/Collection;)Ljava/lang/Object;	a	first
		p	0		collection
	m	(Ljava/util/Collection;Ljava/lang/Object;)Ljava/lang/Object;	a	firstOrDefault
		p	0		collection
		p	1		defaultValue
	m	(Ljava/util/Collection;Ljava/util/function/Supplier;)Ljava/lang/Object;	a	firstOrElse
		p	0		collection
		p	1		getter
	m	([B)Z	a	isNullOrEmpty
		p	0		array
	m	([C)Z	a	isNullOrEmpty
		p	0		array
	m	([D)Z	a	isNullOrEmpty
		p	0		array
	m	([F)Z	a	isNullOrEmpty
		p	0		array
	m	([I)Z	a	isNullOrEmpty
		p	0		array
	m	([J)Z	a	isNullOrEmpty
		p	0		array
	m	([Ljava/lang/Object;)Z	a	isNullOrEmpty
		p	0		array
	m	([S)Z	a	isNullOrEmpty
		p	0		array
	m	([Z)Z	a	isNullOrEmpty
		p	0		array
c	y	net/minecraft/ReportedException
	m	(Lo;)V	<init>	<init>
		p	1		report
	m	()Lo;	a	getReport
	f	Lo;	a	report
c	z	net/minecraft/ResourceLocationException
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		message
	m	(Ljava/lang/String;Ljava/lang/Throwable;)V	<init>	<init>
		p	1		message
		p	2		throwable
c	aa	net/minecraft/SharedConstants
	m	()V	a	tryDetectVersion
	m	(C)Z	a	isAllowedChatCharacter
		p	0		chr
	m	(Lad;)V	a	setVersion
		p	0		gameVersion
	m	(Lclp;)Z	a	debugVoidTerrain
		p	0		pos
	m	(Ljava/lang/String;)Ljava/lang/String;	a	filterText
		p	0		s
	m	(Ljava/lang/String;Z)Ljava/lang/String;	a	filterText
		p	0		s
		p	1		allowLinebreaks
	m	()Lad;	b	getCurrentVersion
	m	()I	c	getProtocolVersion
	m	()V	d	enableDataFixerOptimizations
	f	Z	A	DEBUG_COLLISION
	f	Z	B	DEBUG_SHAPES
	f	Z	C	DEBUG_NEIGHBORSUPDATE
	f	Z	D	DEBUG_STRUCTURES
	f	Z	E	DEBUG_LIGHT
	f	Z	F	DEBUG_WORLDGENATTEMPT
	f	Z	G	DEBUG_SOLID_FACE
	f	Z	H	DEBUG_CHUNKS
	f	Z	I	DEBUG_GAME_EVENT_LISTENERS
	f	Z	J	DEBUG_DUMP_TEXTURE_ATLAS
	f	Z	K	DEBUG_DUMP_INTERPOLATED_TEXTURE_FRAMES
	f	Z	L	DEBUG_STRUCTURE_EDIT_MODE
	f	Z	M	DEBUG_SAVE_STRUCTURES_AS_SNBT
	f	Z	N	DEBUG_SYNCHRONOUS_GL_LOGS
	f	Z	O	DEBUG_VERBOSE_SERVER_EVENTS
	f	Z	P	DEBUG_NAMED_RUNNABLES
	f	Z	Q	DEBUG_GOAL_SELECTOR
	f	Z	R	DEBUG_VILLAGE_SECTIONS
	f	Z	S	DEBUG_BRAIN
	f	Z	T	DEBUG_BEES
	f	Z	U	DEBUG_RAIDS
	f	Z	V	DEBUG_BLOCK_BREAK
	f	Z	W	DEBUG_RESOURCE_LOAD_TIMES
	f	Z	X	DEBUG_MONITOR_TICK_TIMES
	f	Z	Y	DEBUG_KEEP_JIGSAW_BLOCKS_DURING_STRUCTURE_GEN
	f	Z	Z	DEBUG_DONT_SAVE_WORLD
	f	Z	aA	INGAME_DEBUG_OUTPUT
	f	Z	aB	DEBUG_SUBTITLES
	f	I	aC	FAKE_MS_LATENCY
	f	I	aD	FAKE_MS_JITTER
	f	Lio/netty/util/ResourceLeakDetector$Level;	aE	NETTY_LEAK_DETECTION
	f	Z	aF	COMMAND_STACK_TRACES
	f	Z	aG	DEBUG_WORLD_RECREATE
	f	Z	aH	DEBUG_SHOW_SERVER_DEBUG_VALUES
	f	Z	aI	DEBUG_STORE_CHUNK_STACKTRACES
	f	Z	aJ	DEBUG_FEATURE_COUNT
	f	Z	aK	DEBUG_RESOURCE_GENERATION_OVERRIDE
	f	Z	aL	DEBUG_FORCE_TELEMETRY
	f	J	aM	MAXIMUM_TICK_TIME_NANOS
	f	Z	aN	CHECK_DATA_FIXER_SCHEMA
	f	Z	aO	IS_RUNNING_IN_IDE
	f	Ljava/util/Set;	aP	DATA_FIX_TYPES_TO_OPTIMIZE
	f	I	aQ	WORLD_RESOLUTION
	f	I	aR	MAX_CHAT_LENGTH
	f	I	aS	MAX_COMMAND_LENGTH
	f	I	aT	MAX_CHAINED_NEIGHBOR_UPDATES
	f	I	aU	MAX_RENDER_DISTANCE
	f	[C	aV	ILLEGAL_FILE_CHARACTERS
	f	I	aW	TICKS_PER_SECOND
	f	I	aX	TICKS_PER_MINUTE
	f	I	aY	TICKS_PER_GAME_DAY
	f	Z	a	SNAPSHOT
	f	F	aZ	AVERAGE_GAME_TICKS_PER_RANDOM_TICK_PER_BLOCK
	f	Z	aa	DEBUG_LARGE_DRIPSTONE
	f	Z	ab	DEBUG_PACKET_SERIALIZATION
	f	Z	ac	DEBUG_CARVERS
	f	Z	ad	DEBUG_ORE_VEINS
	f	Z	ae	DEBUG_SCULK_CATALYST
	f	Z	af	DEBUG_BYPASS_REALMS_VERSION_CHECK
	f	Z	ag	DEBUG_SOCIAL_INTERACTIONS
	f	Z	ah	DEBUG_VALIDATE_RESOURCE_PATH_CASE
	f	Z	ai	DEBUG_IGNORE_LOCAL_MOB_CAP
	f	Z	aj	DEBUG_SMALL_SPAWN
	f	Z	ak	DEBUG_DISABLE_LIQUID_SPREADING
	f	Z	al	DEBUG_AQUIFERS
	f	Z	am	DEBUG_JFR_PROFILING_ENABLE_LEVEL_LOADING
	f	Z	an	debugGenerateSquareTerrainWithoutNoise
	f	Z	ao	debugGenerateStripedTerrainWithoutNoise
	f	Z	ap	DEBUG_ONLY_GENERATE_HALF_THE_WORLD
	f	Z	aq	DEBUG_DISABLE_FLUID_GENERATION
	f	Z	ar	DEBUG_DISABLE_AQUIFERS
	f	Z	as	DEBUG_DISABLE_SURFACE
	f	Z	at	DEBUG_DISABLE_CARVERS
	f	Z	au	DEBUG_DISABLE_STRUCTURES
	f	Z	av	DEBUG_DISABLE_FEATURES
	f	Z	aw	DEBUG_DISABLE_ORE_VEINS
	f	Z	ax	DEBUG_DISABLE_BLENDING
	f	Z	ay	DEBUG_DISABLE_BELOW_ZERO_RETROGENERATION
	f	I	az	DEFAULT_MINECRAFT_PORT
	f	I	b	WORLD_VERSION
	f	F	ba	AVERAGE_RANDOM_TICKS_PER_BLOCK_PER_MINUTE
	f	F	bb	AVERAGE_RANDOM_TICKS_PER_BLOCK_PER_GAME_DAY
	f	I	bc	SNAPSHOT_PROTOCOL_BIT
	f	Lad;	bd	CURRENT_VERSION
	f	Ljava/lang/String;	c	SERIES
	f	Ljava/lang/String;	d	VERSION_STRING
	f	I	e	RELEASE_NETWORK_PROTOCOL_VERSION
	f	I	f	SNAPSHOT_NETWORK_PROTOCOL_VERSION
	f	I	g	SNBT_NAG_VERSION
	f	Z	h	THROW_ON_TASK_FAILURE
	f	I	i	RESOURCE_PACK_FORMAT
	f	I	j	DATA_PACK_FORMAT
	f	I	k	LANGUAGE_FORMAT
	f	I	l	REPORT_FORMAT_VERSION
	f	Ljava/lang/String;	m	DATA_VERSION_TAG
	f	Z	n	USE_NEW_RENDERSYSTEM
	f	Z	o	MULTITHREADED_RENDERING
	f	Z	p	FIX_TNT_DUPE
	f	Z	q	FIX_SAND_DUPE
	f	Z	r	USE_DEBUG_FEATURES
	f	Z	s	DEBUG_OPEN_INCOMPATIBLE_WORLDS
	f	Z	t	DEBUG_ALLOW_LOW_SIM_DISTANCE
	f	Z	u	DEBUG_HOTKEYS
	f	Z	v	DEBUG_UI_NARRATION
	f	Z	w	DEBUG_RENDER
	f	Z	x	DEBUG_PATHFINDING
	f	Z	y	DEBUG_WATER
	f	Z	z	DEBUG_HEIGHTMAP
c	ab	net/minecraft/SystemReport
	m	()Ljava/lang/String;	a	toLineSeparatedString
	m	(Ljava/lang/String;Ljava/lang/Runnable;)V	a	ignoreErrors
		p	1		name
		p	2		adder
	m	(Ljava/lang/String;Ljava/lang/String;)V	a	setDetail
		p	1		name
		p	2		value
	m	(Ljava/lang/String;Ljava/util/function/Supplier;)V	a	setDetail
		p	1		name
		p	2		valueSupplier
	m	(Ljava/lang/StringBuilder;)V	a	appendToCrashReportString
		p	1		stringBuilder
	m	(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;)V	a	lambda$appendToCrashReportString$20
		p	1		name
		p	2		value
	m	(Ljava/util/List;)V	a	putPhysicalMemory
		p	1		memories
	m	(Ljava/util/Map$Entry;)Ljava/lang/String;	a	lambda$toLineSeparatedString$21
		p	0		entry
	m	(Loshi/SystemInfo;)V	a	putHardware
		p	1		systemInfo
	m	(Loshi/hardware/CentralProcessor$ProcessorIdentifier;)Ljava/lang/String;	a	lambda$putProcessor$16
	m	(Loshi/hardware/CentralProcessor;)V	a	putProcessor
		p	1		centralProcessor
	m	(Loshi/hardware/GlobalMemory;)V	a	putMemory
		p	1		globalMemory
	m	(Loshi/hardware/GraphicsCard;)Ljava/lang/String;	a	lambda$putGraphics$15
	m	(Loshi/hardware/HardwareAbstractionLayer;)V	a	lambda$putHardware$6
	m	(Loshi/hardware/PhysicalMemory;)Ljava/lang/String;	a	lambda$putPhysicalMemory$8
	m	(Loshi/hardware/VirtualMemory;)V	a	putVirtualMemory
		p	1		virtualMemory
	m	()Ljava/lang/String;	b	lambda$new$3
	m	(Ljava/util/List;)V	b	putGraphics
		p	1		graphicsCards
	m	(Loshi/hardware/CentralProcessor;)Ljava/lang/String;	b	lambda$putProcessor$19
	m	(Loshi/hardware/GlobalMemory;)V	b	lambda$putMemory$14
	m	(Loshi/hardware/HardwareAbstractionLayer;)V	b	lambda$putHardware$5
	m	(Loshi/hardware/PhysicalMemory;)Ljava/lang/String;	b	lambda$putPhysicalMemory$7
	m	(Loshi/hardware/VirtualMemory;)Ljava/lang/String;	b	lambda$putVirtualMemory$12
	m	()V	c	lambda$new$2
	m	(Loshi/hardware/CentralProcessor;)Ljava/lang/String;	c	lambda$putProcessor$18
	m	(Loshi/hardware/GlobalMemory;)V	c	lambda$putMemory$13
	m	(Loshi/hardware/HardwareAbstractionLayer;)V	c	lambda$putHardware$4
	m	(Loshi/hardware/VirtualMemory;)Ljava/lang/String;	c	lambda$putVirtualMemory$11
	m	()Ljava/lang/String;	d	lambda$new$1
	m	(Loshi/hardware/CentralProcessor;)Ljava/lang/String;	d	lambda$putProcessor$17
	m	(Loshi/hardware/VirtualMemory;)Ljava/lang/String;	d	lambda$putVirtualMemory$10
	m	()Ljava/lang/String;	e	lambda$new$0
	m	(Loshi/hardware/VirtualMemory;)Ljava/lang/String;	e	lambda$putVirtualMemory$9
	f	J	a	BYTES_PER_MEBIBYTE
	f	J	b	ONE_GIGA
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	Ljava/lang/String;	d	OPERATING_SYSTEM
	f	Ljava/lang/String;	e	JAVA_VERSION
	f	Ljava/lang/String;	f	JAVA_VM_VERSION
	f	Ljava/util/Map;	g	entries
c	ac	net/minecraft/Util
	m	()Ljava/util/stream/Collector;	a	toMap
	m	(I)Ljava/lang/String;	a	lambda$fixedSize$15
	m	(ILjava/lang/String;[Ljava/util/function/BooleanSupplier;)Z	a	runWithRetries
		p	0		retries
		p	1		taskName
		p	2		tasks
	m	(Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;)Lcom/mojang/datafixers/types/Type;	a	fetchChoiceType
		p	0		typeReference
		p	1		id
	m	(Lcom/mojang/serialization/DataResult;Ljava/util/function/Function;)Ljava/lang/Object;	a	getOrThrow
		p	0		result
		p	1		exceptionGetter
	m	(Ldcu;Ljava/lang/Object;)Ljava/lang/String;	a	getPropertyName
		p	0		property
		p	1		value
	m	(Lit/unimi/dsi/fastutil/objects/ObjectArrayList;Lapo;)Ljava/util/List;	a	shuffledCopy
		p	0		list
		p	1		random
	m	(Ljava/io/File;Ljava/io/File;Ljava/io/File;)V	a	safeReplaceFile
		p	0		current
		p	1		newFile
		p	2		backup
	m	(Ljava/io/File;Ljava/io/File;Ljava/io/File;Z)V	a	safeReplaceOrMoveFile
		p	0		current
		p	1		newPath
		p	2		backup
		p	3		noRestoreOnFail
	m	(Ljava/lang/Iterable;Ljava/lang/Object;)Ljava/lang/Object;	a	findNextInIterable
		p	0		iterable
		p	1		object
	m	(Ljava/lang/Object;Ljava/util/function/Consumer;)Ljava/lang/Object;	a	make
		p	0		object
		p	1		initializer
	m	(Ljava/lang/Runnable;)Ljava/lang/Thread;	a	lambda$makeIoExecutor$4
		p	0		runnable
	m	(Ljava/lang/Runnable;Ljava/util/function/Supplier;)Ljava/lang/Runnable;	a	name
		p	0		runnable
		p	1		messageSupplier
	m	(Ljava/lang/String;)V	a	logAndPauseIfInIde
		p	0		message
	m	(Ljava/lang/String;II)I	a	offsetByCodepoints
		p	0		string
		p	1		cursor
		p	2		delta
	m	(Ljava/lang/String;Ladd;)Ljava/lang/String;	a	makeDescriptionId
		p	0		type
		p	1		id
	m	(Ljava/lang/String;Ljava/lang/Runnable;)Ljava/lang/Runnable;	a	wrapThreadWithTaskName
		p	0		activeThreadName
		p	1		task
	m	(Ljava/lang/String;Ljava/lang/Throwable;)V	a	logAndPauseIfInIde
		p	0		message
		p	1		throwable
	m	(Ljava/lang/String;Ljava/util/concurrent/ForkJoinPool;)Ljava/util/concurrent/ForkJoinWorkerThread;	a	lambda$makeExecutor$3
		p	1		forkJoinPool
	m	(Ljava/lang/String;Ljava/util/function/Consumer;)Ljava/util/function/Consumer;	a	prefix
		p	0		prefix
		p	1		consumer
	m	(Ljava/lang/String;Ljava/util/function/Supplier;)Ljava/util/function/Supplier;	a	wrapThreadWithTaskName
		p	0		activeThreadName
		p	1		supplier
	m	(Ljava/lang/String;Lm;)Ljava/lang/String;	a	sanitizeName
		p	0		string
		p	1		predicate
	m	(Ljava/lang/Thread;Ljava/lang/Throwable;)V	a	onThreadException
		p	0		thread
		p	1		t
	m	(Ljava/lang/Throwable;)V	a	throwAsRuntime
		p	0		t
	m	(Ljava/nio/file/Path;)Ljava/util/function/BooleanSupplier;	a	createDeleter
		p	0		path
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/util/function/BooleanSupplier;	a	createRenamer
		p	0		src
		p	1		dest
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/nio/file/Path;)V	a	safeReplaceFile
		p	0		current
		p	1		newPath
		p	2		backup
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/nio/file/Path;Z)V	a	safeReplaceOrMoveFile
		p	0		current
		p	1		newPath
		p	2		backup
		p	3		noRestoreOnFail
	m	(Ljava/nio/file/spi/FileSystemProvider;)Z	a	lambda$static$0
		p	0		fileSystemProvider
	m	(Ljava/util/List;)Ljava/lang/Object;	a	lastOf
		p	0		list
	m	(Ljava/util/List;I)Lcom/mojang/serialization/DataResult;	a	fixedSize
		p	0		list
		p	1		length
	m	(Ljava/util/List;Lapo;)Ljava/lang/Object;	a	getRandom
		p	0		list
		p	1		random
	m	(Ljava/util/List;Ljava/lang/Void;)Ljava/util/List;	a	lambda$fallibleSequence$12
		p	1		void_
	m	(Ljava/util/List;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	a	fallibleSequence
		p	0		futures
		p	1		exceptionHandler
	m	(Ljava/util/List;Ljava/util/function/IntFunction;)Ljava/util/function/ToIntFunction;	a	createIndexLookup
		p	0		values
		p	1		mapCreator
	m	(Ljava/util/List;[Ljava/util/concurrent/CompletableFuture;Ljava/util/function/Consumer;Ljava/util/concurrent/CompletableFuture;)V	a	lambda$fallibleSequence$11
		p	3		future
	m	(Ljava/util/Optional;Ljava/util/function/Consumer;Ljava/lang/Runnable;)Ljava/util/Optional;	a	ifElse
		p	0		optional
		p	1		presentAction
		p	2		elseAction
	m	(Ljava/util/concurrent/CompletableFuture;Ljava/util/List;Ljava/lang/Throwable;)V	a	lambda$sequenceFailFastAndCancel$9
		p	2		throwable
	m	(Ljava/util/concurrent/ExecutorService;)V	a	shutdownExecutor
		p	0		service
	m	(Ljava/util/function/BiFunction;)Ljava/util/function/BiFunction;	a	memoize
		p	0		biFunction
	m	(Ljava/util/function/Consumer;)V	a	setPause
		p	0		missingBreakpointHandler
	m	(Ljava/util/function/Consumer;Ljava/lang/String;Ljava/lang/String;)V	a	lambda$prefix$13
		p	2		string
	m	(Ljava/util/function/Consumer;Ljava/util/List;ILjava/lang/Object;Ljava/lang/Throwable;)V	a	lambda$fallibleSequence$10
		p	3		value
		p	4		throwable
	m	(Ljava/util/function/Function;)Lapv;	a	singleKeyCache
		p	0		mapper
	m	(Ljava/util/function/Function;Ljava/util/function/Predicate;)Ljava/lang/Object;	a	blockUntilDone
		p	0		resultFactory
		p	1		donePredicate
	m	(Ljava/util/function/Supplier;)Ljava/lang/Object;	a	make
		p	0		factory
	m	(Ljava/util/function/Supplier;Ljava/util/function/Supplier;)Ljava/util/function/Supplier;	a	name
		p	0		supplier
		p	1		messageSupplier
	m	(Ljava/util/stream/IntStream;I)Lcom/mojang/serialization/DataResult;	a	fixedSize
		p	0		stream
		p	1		length
	m	(Ljava/util/stream/IntStream;Lapo;)Lit/unimi/dsi/fastutil/ints/IntArrayList;	a	toShuffledList
		p	0		stream
		p	1		random
	m	(Ljava/util/stream/Stream;Lapo;)Ljava/util/List;	a	toShuffledList
		p	0		stream
		p	1		random
	m	(Lm;I)Ljava/lang/String;	a	lambda$sanitizeName$16
		p	1		charCode
	m	([ILapo;)I	a	getRandom
		p	0		array
		p	1		random
	m	([Ljava/lang/Object;Lapo;)Ljava/lang/Object;	a	getRandom
		p	0		array
		p	1		random
	m	([Ljava/util/function/BooleanSupplier;)Z	a	executeInSequence
		p	0		tasks
	m	()J	b	getMillis
	m	(I)Ljava/lang/String;	b	lambda$fixedSize$14
	m	(Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;)Lcom/mojang/datafixers/types/Type;	b	doFetchChoiceType
		p	0		typeReference
		p	1		id
	m	(Lit/unimi/dsi/fastutil/objects/ObjectArrayList;Lapo;)V	b	shuffle
		p	0		list
		p	1		random
	m	(Ljava/lang/Iterable;Ljava/lang/Object;)Ljava/lang/Object;	b	findPreviousInIterable
		p	0		iterable
		p	1		object
	m	(Ljava/lang/String;)Ljava/util/concurrent/ExecutorService;	b	makeExecutor
		p	0		name
	m	(Ljava/lang/String;Ljava/lang/Runnable;)V	b	lambda$wrapThreadWithTaskName$5
	m	(Ljava/lang/String;Ljava/util/function/Supplier;)Ljava/lang/Object;	b	lambda$wrapThreadWithTaskName$6
	m	(Ljava/lang/Throwable;)Ljava/lang/Throwable;	b	pauseInIde
		p	0		t
	m	(Ljava/nio/file/Path;)Ljava/util/function/BooleanSupplier;	b	createFileDeletedCheck
		p	0		path
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/nio/file/Path;)V	b	copyBetweenDirs
		p	0		src
		p	1		dest
		p	2		toCopy
	m	(Ljava/util/List;)Ljava/util/concurrent/CompletableFuture;	b	sequence
		p	0		futures
	m	(Ljava/util/List;Lapo;)Ljava/util/Optional;	b	getRandomSafe
		p	0		list
		p	1		random
	m	(Ljava/util/List;Ljava/lang/Void;)Ljava/util/List;	b	lambda$sequence$8
		p	1		void_
	m	(Ljava/util/function/Function;)Ljava/util/function/Function;	b	memoize
		p	0		function
	m	([Ljava/lang/Object;Lapo;)Ljava/util/List;	b	shuffledCopy
		p	0		array
		p	1		random
	m	()J	c	getNanos
	m	(Ljava/lang/String;)V	c	doPause
		p	0		message
	m	(Ljava/lang/Throwable;)Ljava/lang/String;	c	describeError
		p	0		t
	m	(Ljava/nio/file/Path;)Ljava/util/function/BooleanSupplier;	c	createFileCreatedCheck
		p	0		path
	m	(Ljava/util/List;)Ljava/util/concurrent/CompletableFuture;	c	sequenceFailFast
		p	0		futures
	m	(Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;	c	blockUntilDone
		p	0		resultFactory
	m	()J	d	getEpochMillis
	m	(Ljava/lang/String;)Z	d	lambda$getVmArguments$7
		p	0		runtimeArg
	m	(Ljava/util/List;)Ljava/util/concurrent/CompletableFuture;	d	sequenceFailFastAndCancel
		p	0		futures
	m	()Ljava/lang/String;	e	getFilenameFormattedDateTime
	m	(Ljava/lang/String;)V	e	lambda$static$2
		p	0		message
	m	(Ljava/util/List;)Ljava/util/function/ToIntFunction;	e	createIndexLookup
		p	0		values
	m	()Ljava/util/concurrent/ExecutorService;	f	backgroundExecutor
	m	()Ljava/util/concurrent/ExecutorService;	g	ioPool
	m	()V	h	shutdownExecutors
	m	()Lac$b;	i	getPlatform
	m	()Ljava/util/stream/Stream;	j	getVmArguments
	m	()Lit/unimi/dsi/fastutil/Hash$Strategy;	k	identityStrategy
	m	()V	l	startTimerHackThread
	m	()I	m	getMaxThreads
	m	()Ljava/util/concurrent/ExecutorService;	n	makeIoExecutor
	m	()Ljava/lang/IllegalStateException;	o	lambda$static$1
	f	Laqe$a;	a	timeSource
	f	Lcom/google/common/base/Ticker;	b	TICKER
	f	Ljava/util/UUID;	c	NIL_UUID
	f	Ljava/nio/file/spi/FileSystemProvider;	d	ZIP_FILE_SYSTEM_PROVIDER
	f	Lorg/slf4j/Logger;	e	LOGGER
	f	I	f	DEFAULT_MAX_THREADS
	f	Ljava/lang/String;	g	MAX_THREADS_SYSTEM_PROPERTY
	f	Ljava/util/concurrent/atomic/AtomicInteger;	h	WORKER_COUNT
	f	Ljava/util/concurrent/ExecutorService;	i	BACKGROUND_EXECUTOR
	f	Ljava/util/concurrent/ExecutorService;	j	IO_POOL
	f	Ljava/time/format/DateTimeFormatter;	k	FILENAME_DATE_TIME_FORMATTER
	f	Ljava/util/function/Consumer;	l	thePauser
c	ac$1	net/minecraft/Util$1
c	ac$2	net/minecraft/Util$10
	f	Ljava/util/function/Function;	a	val$function
	f	Ljava/util/Map;	b	cache
c	ac$3	net/minecraft/Util$11
	m	(Ljava/util/function/BiFunction;Lcom/mojang/datafixers/util/Pair;)Ljava/lang/Object;	a	lambda$apply$0
		p	1		pair
	f	Ljava/util/function/BiFunction;	a	val$function
	f	Ljava/util/Map;	b	cache
c	ac$4	net/minecraft/Util$2
c	ac$5	net/minecraft/Util$5
	f	Ljava/nio/file/Path;	a	val$from
	f	Ljava/nio/file/Path;	b	val$to
c	ac$6	net/minecraft/Util$6
	f	Ljava/nio/file/Path;	a	val$target
c	ac$7	net/minecraft/Util$7
	f	Ljava/nio/file/Path;	a	val$target
c	ac$8	net/minecraft/Util$8
	f	Ljava/nio/file/Path;	a	val$target
c	ac$9	net/minecraft/Util$9
c	ac$a	net/minecraft/Util$IdentityStrategy
	m	()[Lac$a;	a	$values
	f	Lac$a;	a	INSTANCE
	f	[Lac$a;	b	$VALUES
c	ac$b	net/minecraft/Util$OS
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()Ljava/lang/String;	a	telemetryName
	m	(Ljava/io/File;)V	a	openFile
		p	1		file
	m	(Ljava/lang/String;)V	a	openUri
		p	1		uri
	m	(Ljava/net/URI;)V	a	openUri
		p	1		uri
	m	(Ljava/net/URL;)V	a	openUrl
		p	1		url
	m	()[Lac$b;	b	$values
	m	(Ljava/net/URL;)[Ljava/lang/String;	b	getOpenUrlArguments
		p	1		url
	m	(Ljava/net/URL;)Ljava/lang/Process;	c	lambda$openUrl$0
	f	Lac$b;	a	LINUX
	f	Lac$b;	b	SOLARIS
	f	Lac$b;	c	WINDOWS
	f	Lac$b;	d	OSX
	f	Lac$b;	e	UNKNOWN
	f	Ljava/lang/String;	f	telemetryName
	f	[Lac$b;	g	$VALUES
c	ac$b$1	net/minecraft/Util$OS$1
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	(Ljava/net/URL;)[Ljava/lang/String;	b	getOpenUrlArguments
		p	1		url
c	ac$b$2	net/minecraft/Util$OS$2
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	(Ljava/net/URL;)[Ljava/lang/String;	b	getOpenUrlArguments
		p	1		url
c	ad	net/minecraft/WorldVersion
	m	(Lajw;)I	a	getPackVersion
		p	1		type
	m	()Ljava/lang/String;	b	getId
	m	()Ljava/lang/String;	c	getName
	m	()Ldxy;	d	getDataVersion
	m	()I	e	getProtocolVersion
	m	()Ljava/util/Date;	f	getBuildTime
	m	()Z	g	isStable
c	ae	net/minecraft/advancements/Advancement
	m	(Ladd;Lae;Lan;Lah;Ljava/util/Map;[[Ljava/lang/String;)V	<init>	<init>
		p	1		id
		p	2		parent
		p	3		display
		p	4		rewards
		p	5		criteria
		p	6		requirements
	m	()Lae$a;	a	deconstruct
	m	(Lae;)Lae;	a	getRoot
		p	0		advancement
	m	(Ltj;Luf;)Luf;	a	lambda$new$0
		p	1		style
	m	()Lae;	b	getParent
	m	(Lae;)V	b	addChild
		p	1		child
	m	()Lae;	c	getRoot
	m	()Lan;	d	getDisplay
	m	()Lah;	e	getRewards
	m	()Ljava/lang/Iterable;	f	getChildren
	m	()Ljava/util/Map;	g	getCriteria
	m	()I	h	getMaxCriteraRequired
	m	()Ladd;	i	getId
	m	()[[Ljava/lang/String;	j	getRequirements
	m	()Ltj;	k	getChatComponent
	f	Lae;	a	parent
	f	Lan;	b	display
	f	Lah;	c	rewards
	f	Ladd;	d	id
	f	Ljava/util/Map;	e	criteria
	f	[[Ljava/lang/String;	f	requirements
	f	Ljava/util/Set;	g	children
	f	Ltj;	h	chatComponent
c	ae$a	net/minecraft/advancements/Advancement$Builder
	m	(Ladd;Lan;Lah;Ljava/util/Map;[[Ljava/lang/String;)V	<init>	<init>
		p	1		parentId
		p	2		display
		p	3		rewards
		p	4		criteria
		p	5		requirements
	m	()Lae$a;	a	advancement
	m	(Ladd;)Lae$a;	a	parent
		p	1		parentId
	m	(Lae;)Lae$a;	a	parent
		p	1		parent
	m	(Lah$a;)Lae$a;	a	rewards
		p	1		builder
	m	(Lah;)Lae$a;	a	rewards
		p	1		rewards
	m	(Lan;)Lae$a;	a	display
		p	1		display
	m	(Lap;)Lae$a;	a	requirements
		p	1		merger
	m	(Lcfv;Ltj;Ltj;Ladd;Lao;ZZZ)Lae$a;	a	display
		p	1		icon
		p	2		title
		p	3		description
		p	4		background
		p	5		frame
		p	6		showToast
		p	7		announceToChat
		p	8		hidden
	m	(Lcmh;Ltj;Ltj;Ladd;Lao;ZZZ)Lae$a;	a	display
		p	1		icon
		p	2		title
		p	3		description
		p	4		background
		p	5		frame
		p	6		showToast
		p	7		announceToChat
		p	8		hidden
	m	(Lcom/google/gson/JsonObject;Lbd;)Lae$a;	a	fromJson
		p	0		obj
		p	1		predicateDeserializer
	m	(Ljava/lang/String;Laj;)Lae$a;	a	addCriterion
		p	1		name
		p	2		criterion
	m	(Ljava/lang/String;Lam;)Lae$a;	a	addCriterion
		p	1		name
		p	2		conditions
	m	(Ljava/util/function/Consumer;Ljava/lang/String;)Lae;	a	save
		p	1		exporter
		p	2		id
	m	(Ljava/util/function/Function;)Z	a	canBuild
		p	1		parentProvider
	m	(Lss;)V	a	serializeToNetwork
		p	1		buf
	m	(Lss;Lan;)V	a	lambda$serializeToNetwork$1
		p	0		buf2
		p	1		display
	m	([[Ljava/lang/String;)Lae$a;	a	requirements
		p	1		requirements
	m	()Lcom/google/gson/JsonObject;	b	serializeToJson
	m	(Ladd;)Lae;	b	build
		p	1		id
	m	(Lss;)Lae$a;	b	fromNetwork
		p	0		buf
	m	()Ljava/util/Map;	c	getCriteria
	m	(Ladd;)Lae;	c	lambda$build$0
		p	0		id
	f	Ladd;	a	parentId
	f	Lae;	b	parent
	f	Lan;	c	display
	f	Lah;	d	rewards
	f	Ljava/util/Map;	e	criteria
	f	[[Ljava/lang/String;	f	requirements
	f	Lap;	g	requirementsStrategy
c	af	net/minecraft/advancements/AdvancementList
	m	()V	a	clear
	m	(Ladd;)Lae;	a	get
		p	1		id
	m	(Lae;)V	a	remove
		p	1		advancement
	m	(Laf$a;)V	a	setListener
		p	1		listener
	m	(Ljava/util/Map;)V	a	add
		p	1		advancements
	m	(Ljava/util/Set;)V	a	remove
		p	1		advancements
	m	()Ljava/lang/Iterable;	b	getRoots
	m	()Ljava/util/Collection;	c	getAllAdvancements
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/Map;	b	advancements
	f	Ljava/util/Set;	c	roots
	f	Ljava/util/Set;	d	tasks
	f	Laf$a;	e	listener
c	af$a	net/minecraft/advancements/AdvancementList$Listener
	m	()V	a	onAdvancementsCleared
	m	(Lae;)V	a	onAddAdvancementRoot
		p	1		root
	m	(Lae;)V	b	onRemoveAdvancementRoot
		p	1		root
	m	(Lae;)V	c	onAddAdvancementTask
		p	1		dependent
	m	(Lae;)V	d	onRemoveAdvancementTask
		p	1		dependent
c	ag	net/minecraft/advancements/AdvancementProgress
	m	(Ljava/util/Map;)V	<init>	<init>
		p	1		criteriaProgresses
	m	()Z	a	isDone
	m	(Lag;)I	a	compareTo
	m	(Ljava/lang/String;)Z	a	grantProgress
		p	1		name
	m	(Ljava/util/Map;[[Ljava/lang/String;)V	a	update
		p	1		criteria
		p	2		requirements
	m	(Ljava/util/Set;Ljava/util/Map$Entry;)Z	a	lambda$update$0
		p	1		progress
	m	(Lss;)V	a	serializeToNetwork
		p	1		buf
	m	(Lss;Lak;)V	a	lambda$serializeToNetwork$1
		p	0		buf
		p	1		progresses
	m	()Z	b	hasProgress
	m	(Ljava/lang/String;)Z	b	revokeProgress
		p	1		name
	m	(Lss;)Lag;	b	fromNetwork
		p	0		buf
	m	()F	c	getPercent
	m	(Ljava/lang/String;)Lak;	c	getCriterion
		p	1		name
	m	()Ljava/lang/String;	d	getProgressText
	m	()Ljava/lang/Iterable;	e	getRemainingCriteria
	m	()Ljava/lang/Iterable;	f	getCompletedCriteria
	m	()Ljava/util/Date;	g	getFirstProgressDate
	m	()I	h	countCompletedRequirements
	f	Ljava/util/Map;	a	criteria
	f	[[Ljava/lang/String;	b	requirements
c	ag$a	net/minecraft/advancements/AdvancementProgress$Serializer
	m	(Lag;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	a	serialize
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lag;	a	deserialize
c	ah	net/minecraft/advancements/AdvancementRewards
	m	(I[Ladd;[Ladd;Ldm$a;)V	<init>	<init>
		p	1		experience
		p	2		loot
		p	3		recipes
		p	4		function
	m	()[Ladd;	a	getRecipes
	m	(Laiq;)V	a	grant
		p	1		player
	m	(Lcom/google/gson/JsonObject;)Lah;	a	deserialize
		p	0		json
	m	(Lnet/minecraft/server/MinecraftServer;Laiq;Ldm;)V	a	lambda$grant$0
		p	2		function
	m	()Lcom/google/gson/JsonElement;	b	serializeToJson
	f	Lah;	a	EMPTY
	f	I	b	experience
	f	[Ladd;	c	loot
	f	[Ladd;	d	recipes
	f	Ldm$a;	e	function
c	ah$a	net/minecraft/advancements/AdvancementRewards$Builder
	m	()Lah;	a	build
	m	(I)Lah$a;	a	experience
		p	0		experience
	m	(Ladd;)Lah$a;	a	loot
		p	0		loot
	m	(I)Lah$a;	b	addExperience
		p	1		experience
	m	(Ladd;)Lah$a;	b	addLootTable
		p	1		loot
	m	(Ladd;)Lah$a;	c	recipe
		p	0		recipe
	m	(Ladd;)Lah$a;	d	addRecipe
		p	1		recipe
	m	(Ladd;)Lah$a;	e	function
		p	0		function
	m	(Ladd;)Lah$a;	f	runs
		p	1		function
	f	I	a	experience
	f	Ljava/util/List;	b	loot
	f	Ljava/util/List;	c	recipes
	f	Ladd;	d	function
c	ai	net/minecraft/advancements/CriteriaTriggers
	m	()Ljava/lang/Iterable;	a	all
	m	(Ladd;)Lal;	a	getCriterion
		p	0		id
	m	(Lal;)Lal;	a	register
		p	0		object
	f	Lbg;	A	EFFECTS_CHANGED
	f	Ldf;	B	USED_TOTEM
	f	Lbf;	C	NETHER_TRAVEL
	f	Lbt;	D	FISHING_ROD_HOOKED
	f	Lax;	E	CHANNELED_LIGHTNING
	f	Lct;	F	SHOT_CROSSBOW
	f	Lca;	G	KILLED_BY_CROSSBOW
	f	Lcq;	H	RAID_WIN
	f	Lcq;	I	BAD_OMEN
	f	Lcv;	J	HONEY_BLOCK_SLIDE
	f	Las;	K	BEE_NEST_DESTROYED
	f	Ldc;	L	TARGET_BLOCK_HIT
	f	Lby;	M	ITEM_USED_ON_BLOCK
	f	Lch;	N	GENERATE_LOOT
	f	Lcl;	O	THROWN_ITEM_PICKED_UP_BY_ENTITY
	f	Lcl;	P	THROWN_ITEM_PICKED_UP_BY_PLAYER
	f	Lco;	Q	PLAYER_INTERACTED_WITH_ENTITY
	f	Lcx;	R	START_RIDING_TRIGGER
	f	Lcf;	S	LIGHTNING_STRIKE
	f	Ldg;	T	USING_ITEM
	f	Lbf;	U	FALL_FROM_HEIGHT
	f	Lbf;	V	RIDE_ENTITY_IN_LAVA_TRIGGER
	f	Lcb;	W	KILL_MOB_NEAR_SCULK_CATALYST
	f	Lby;	X	ALLAY_DROP_ITEM_ON_BLOCK
	f	Lcq;	Y	AVOID_VIBRATION
	f	Ljava/util/Map;	Z	CRITERIA
	f	Lbv;	a	IMPOSSIBLE
	f	Lcb;	b	PLAYER_KILLED_ENTITY
	f	Lcb;	c	ENTITY_KILLED_PLAYER
	f	Lbj;	d	ENTER_BLOCK
	f	Lbw;	e	INVENTORY_CHANGED
	f	Lcr;	f	RECIPE_UNLOCKED
	f	Lcn;	g	PLAYER_HURT_ENTITY
	f	Lbm;	h	ENTITY_HURT_PLAYER
	f	Lbh;	i	ENCHANTED_ITEM
	f	Lbr;	j	FILLED_BUCKET
	f	Lav;	k	BREWED_POTION
	f	Lay;	l	CONSTRUCT_BEACON
	f	Lde;	m	USED_ENDER_EYE
	f	Lcz;	n	SUMMONED_ENTITY
	f	Lau;	o	BRED_ANIMALS
	f	Lcq;	p	LOCATION
	f	Lcq;	q	SLEPT_IN_BED
	f	Lba;	r	CURED_ZOMBIE_VILLAGER
	f	Ldd;	s	TRADE
	f	Lbx;	t	ITEM_DURABILITY_CHANGED
	f	Lcc;	u	LEVITATION
	f	Law;	v	CHANGED_DIMENSION
	f	Lcq;	w	TICK
	f	Ldb;	x	TAME_ANIMAL
	f	Lcm;	y	PLACED_BLOCK
	f	Laz;	z	CONSUME_ITEM
c	aj	net/minecraft/advancements/Criterion
	m	(Lam;)V	<init>	<init>
		p	1		conditions
	m	()Lam;	a	getTrigger
	m	(Lcom/google/gson/JsonObject;Lbd;)Laj;	a	criterionFromJson
		p	0		obj
		p	1		predicateDeserializer
	m	(Ljava/util/Map;Lss;)V	a	serializeToNetwork
		p	0		criteria
		p	1		buf
	m	(Lss;)V	a	serializeToNetwork
		p	1		buf
	m	(Lss;Laj;)V	a	lambda$serializeToNetwork$0
		p	0		buf
		p	1		criterion
	m	()Lcom/google/gson/JsonElement;	b	serializeToJson
	m	(Lcom/google/gson/JsonObject;Lbd;)Ljava/util/Map;	b	criteriaFromJson
		p	0		obj
		p	1		predicateDeserializer
	m	(Lss;)Laj;	b	criterionFromNetwork
		p	0		buf
	m	(Lss;)Ljava/util/Map;	c	criteriaFromNetwork
		p	0		buf
	f	Lam;	a	trigger
c	ak	net/minecraft/advancements/CriterionProgress
	m	()Z	a	isDone
	m	(Ljava/lang/String;)Lak;	a	fromJson
		p	0		datetime
	m	(Lss;)V	a	serializeToNetwork
		p	1		buf
	m	()V	b	grant
	m	(Lss;)Lak;	b	fromNetwork
		p	0		buf
	m	()V	c	revoke
	m	()Ljava/util/Date;	d	getObtained
	m	()Lcom/google/gson/JsonElement;	e	serializeToJson
	f	Ljava/text/SimpleDateFormat;	a	DATE_FORMAT
	f	Ljava/util/Date;	b	obtained
c	al	net/minecraft/advancements/CriterionTrigger
	m	()Ladd;	a	getId
	m	(Ladl;)V	a	removePlayerListeners
		p	1		tracker
	m	(Ladl;Lal$a;)V	a	addPlayerListener
		p	1		manager
		p	2		conditions
	m	(Lcom/google/gson/JsonObject;Lbd;)Lam;	a	createInstance
		p	1		obj
		p	2		predicateDeserializer
	m	(Ladl;Lal$a;)V	b	removePlayerListener
		p	1		manager
		p	2		conditions
c	al$a	net/minecraft/advancements/CriterionTrigger$Listener
	m	(Lam;Lae;Ljava/lang/String;)V	<init>	<init>
		p	1		conditions
		p	2		advancement
		p	3		id
	m	()Lam;	a	getTriggerInstance
	m	(Ladl;)V	a	run
		p	1		tracker
	f	Lam;	a	trigger
	f	Lae;	b	advancement
	f	Ljava/lang/String;	c	criterion
c	am	net/minecraft/advancements/CriterionTriggerInstance
	m	()Ladd;	a	getCriterion
	m	(Lcs;)Lcom/google/gson/JsonObject;	a	serializeToJson
		p	1		predicateSerializer
c	an	net/minecraft/advancements/DisplayInfo
	m	(Lcfv;Ltj;Ltj;Ladd;Lao;ZZZ)V	<init>	<init>
		p	1		icon
		p	2		title
		p	3		description
		p	4		background
		p	5		frame
		p	6		showToast
		p	7		announceToChat
		p	8		hidden
	m	()Ltj;	a	getTitle
	m	(FF)V	a	setLocation
		p	1		x
		p	2		y
	m	(Lcom/google/gson/JsonObject;)Lan;	a	fromJson
		p	0		obj
	m	(Lss;)V	a	serializeToNetwork
		p	1		buf
	m	()Ltj;	b	getDescription
	m	(Lcom/google/gson/JsonObject;)Lcfv;	b	getIcon
		p	0		json
	m	(Lss;)Lan;	b	fromNetwork
		p	0		buf
	m	()Lcfv;	c	getIcon
	m	()Ladd;	d	getBackground
	m	()Lao;	e	getFrame
	m	()F	f	getX
	m	()F	g	getY
	m	()Z	h	shouldShowToast
	m	()Z	i	shouldAnnounceChat
	m	()Z	j	isHidden
	m	()Lcom/google/gson/JsonElement;	k	serializeToJson
	m	()Lcom/google/gson/JsonObject;	l	serializeIcon
	f	Ltj;	a	title
	f	Ltj;	b	description
	f	Lcfv;	c	icon
	f	Ladd;	d	background
	f	Lao;	e	frame
	f	Z	f	showToast
	f	Z	g	announceChat
	f	Z	h	hidden
	f	F	i	x
	f	F	j	y
c	ao	net/minecraft/advancements/FrameType
	m	(Ljava/lang/String;ILjava/lang/String;ILn;)V	<init>	<init>
		p	3		id
		p	4		texV
		p	5		titleFormat
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/lang/String;)Lao;	a	byName
		p	0		name
	m	()I	b	getTexture
	m	()Ln;	c	getChatColor
	m	()Ltj;	d	getDisplayName
	m	()[Lao;	e	$values
	f	Lao;	a	TASK
	f	Lao;	b	CHALLENGE
	f	Lao;	c	GOAL
	f	Ljava/lang/String;	d	name
	f	I	e	texture
	f	Ln;	f	chatColor
	f	Ltj;	g	displayName
	f	[Lao;	h	$VALUES
c	ap	net/minecraft/advancements/RequirementsStrategy
	m	(Ljava/util/Collection;)[[Ljava/lang/String;	a	lambda$static$1
		p	0		criteriaNames
	m	(Ljava/util/Collection;)[[Ljava/lang/String;	b	lambda$static$0
		p	0		criteriaNames
	m	(Ljava/util/Collection;)[[Ljava/lang/String;	createRequirements	createRequirements
		p	1		criteriaNames
	f	Lap;	a	AND
	f	Lap;	b	OR
c	aq	net/minecraft/advancements/TreeNodePosition
	m	(Lae;Laq;Laq;II)V	<init>	<init>
		p	1		advancement
		p	2		parent
		p	3		previousSibling
		p	4		childrenSize
		p	5		depth
	m	()V	a	firstWalk
	m	(F)V	a	thirdWalk
		p	1		deltaRow
	m	(FIF)F	a	secondWalk
		p	1		deltaRow
		p	2		depth
		p	3		minRow
	m	(Lae;)V	a	run
		p	0		root
	m	(Lae;Laq;)Laq;	a	addChild
		p	1		advancement
		p	2		lastChild
	m	(Laq;)Laq;	a	apportion
		p	1		last
	m	(Laq;F)V	a	moveSubtree
		p	1		positioner
		p	2		extraRowDistance
	m	(Laq;Laq;)Laq;	a	getAncestor
	m	()V	b	executeShifts
	m	()Laq;	c	previousOrThread
	m	()Laq;	d	nextOrThread
	m	()V	e	finalizePosition
	f	Lae;	a	advancement
	f	Laq;	b	parent
	f	Laq;	c	previousSibling
	f	I	d	childIndex
	f	Ljava/util/List;	e	children
	f	Laq;	f	ancestor
	f	Laq;	g	thread
	f	I	h	x
	f	F	i	y
	f	F	j	mod
	f	F	k	change
	f	F	l	shift
c	ar	net/minecraft/advancements/critereon/AbstractCriterionTriggerInstance
	m	(Ladd;Lbn$b;)V	<init>	<init>
		p	1		id
		p	2		entity
	m	()Ladd;	a	getCriterion
	m	(Lcs;)Lcom/google/gson/JsonObject;	a	serializeToJson
		p	1		predicateSerializer
	m	()Lbn$b;	b	getPlayerPredicate
	f	Ladd;	a	criterion
	f	Lbn$b;	b	player
c	as	net/minecraft/advancements/critereon/BeeNestDestroyedTrigger
	m	()Ladd;	a	getId
	m	(Ladd;)Lcom/google/gson/JsonSyntaxException;	a	lambda$deserializeBlock$0
	m	(Laiq;Ldbq;Lcfv;I)V	a	trigger
		p	1		player
		p	2		state
		p	3		stack
		p	4		beeCount
	m	(Lcom/google/gson/JsonObject;)Lcpi;	a	deserializeBlock
		p	0		root
	m	(Lcom/google/gson/JsonObject;Lbn$b;Lbd;)Las$a;	a	createInstance
	m	(Ldbq;Lcfv;ILas$a;)Z	a	lambda$trigger$1
		p	3		conditions
	m	(Lcom/google/gson/JsonObject;Lbn$b;Lbd;)Lar;	b	createInstance
		p	1		obj
		p	2		playerPredicate
		p	3		predicateDeserializer
	f	Ladd;	a	ID
c	as$a	net/minecraft/advancements/critereon/BeeNestDestroyedTrigger$TriggerInstance
	m	(Lbn$b;Lcpi;Lbz;Lci$d;)V	<init>	<init>
		p	1		player
		p	2		block
		p	3		item
		p	4		beeCount
	m	(Lcpi;Lbz$a;Lci$d;)Las$a;	a	destroyedBeeNest
		p	0		block
		p	1		itemPredicateBuilder
		p	2		beeCountRange
	m	(Lcs;)Lcom/google/gson/JsonObject;	a	serializeToJson
		p	1		predicateSerializer
	m	(Ldbq;Lcfv;I)Z	a	matches
		p	1		state
		p	2		stack
		p	3		count
	f	Lcpi;	a	block
	f	Lbz;	b	item
	f	Lci$d;	c	numBees
c	at	net/minecraft/advancements/critereon/BlockPredicate
	m	(Lanv;Ljava/util/Set;Lcy;Lck;)V	<init>	<init>
		p	1		tag
		p	2		blocks
		p	3		state
		p	4		nbt
	m	()Lcom/google/gson/JsonElement;	a	serializeToJson
	m	(Ladd;)Lcom/google/gson/JsonSyntaxException;	a	lambda$fromJson$0
		p	0		id
	m	(Laip;Lgt;)Z	a	matches
		p	1		world
		p	2		pos
	m	(Lcom/google/gson/JsonElement;)Lat;	a	fromJson
		p	0		json
	f	Lat;	a	ANY
	f	Lanv;	b	tag
	f	Ljava/util/Set;	c	blocks
	f	Lcy;	d	properties
	f	Lck;	e	nbt
c	at$a	net/minecraft/advancements/critereon/BlockPredicate$Builder
	m	()Lat$a;	a	block
	m	(Lanv;)Lat$a;	a	of
		p	1		tag
	m	(Lcy;)Lat$a;	a	setProperties
		p	1		state
	m	(Ljava/lang/Iterable;)Lat$a;	a	of
		p	1		blocks
	m	(Lre;)Lat$a;	a	hasNbt
		p	1		nbt
	m	([Lcpi;)Lat$a;	a	of
		p	1		blocks
	m	()Lat;	b	build
	f	Ljava/util/Set;	a	blocks
	f	Lanv;	b	tag
	f	Lcy;	c	properties
	f	Lck;	d	nbt
c	au	net/minecraft/advancements/critereon/BredAnimalsTrigger
	m	()Ladd;	a	getId
	m	(Laiq;Lbrj;Lbrj;Lbfc;)V	a	trigger
		p	1		player
		p	2		parent
		p	3		partner
		p	4		child
	m	(Lcom/google/gson/JsonObject;Lbn$b;Lbd;)Lau$a;	a	createInstance
	m	(Ldyr;Ldyr;Ldyr;Lau$a;)Z	a	lambda$trigger$0
		p	3		conditions
	m	(Lcom/google/gson/JsonObject;Lbn$b;Lbd;)Lar;	b	createInstance
		p	1		obj
		p	2		playerPredicate
		p	3		predicateDeserializer
	f	Ladd;	a	ID
c	au$a	net/minecraft/advancements/critereon/BredAnimalsTrigger$TriggerInstance
	m	(Lbn$b;Lbn$b;Lbn$b;Lbn$b;)V	<init>	<init>
		p	1		player
		p	2		parent
		p	3		partner
		p	4		child
	m	(Lbn$a;)Lau$a;	a	bredAnimals
		p	0		child
	m	(Lbn;Lbn;Lbn;)Lau$a;	a	bredAnimals
		p	0		parent
		p	1		partner
		p	2		child
	m	(Lcs;)Lcom/google/gson/JsonObject;	a	serializeToJson
		p	1		predicateSerializer
	m	(Ldyr;Ldyr;Ldyr;)Z	a	matches
		p	1		parentContext
		p	2		partnerContext
		p	3		childContext
	m	()Lau$a;	c	bredAnimals
	f	Lbn$b;	a	parent
	f	Lbn$b;	b	partner
	f	Lbn$b;	c	child
c	av	net/minecraft/advancements/critereon/BrewedPotionTrigger
	m	()Ladd;	a	getId
	m	(Ladd;)Lcom/google/gson/JsonSyntaxException;	a	lambda$createInstance$0
	m	(Laiq;Lchr;)V	a	trigger
		p	1		player
		p	2		potion
	m	(Lchr;Lav$a;)Z	a	lambda$trigger$1
		p	1		conditions
	m	(Lcom/google/gson/JsonObject;Lbn$b;Lbd;)Lav$a;	a	createInstance
	m	(Lcom/google/gson/JsonObject;Lbn$b;Lbd;)Lar;	b	createInstance
		p	1		obj
		p	2		playerPredicate
		p	3		predicateDeserializer
	f	Ladd;	a	ID
c	av$a	net/minecraft/advancements/critereon/BrewedPotionTrigger$TriggerInstance
	m	(Lbn$b;Lchr;)V	<init>	<init>
		p	1		player
		p	2		potion
	m	(Lchr;)Z	a	matches
		p	1		potion
	m	(Lcs;)Lcom/google/gson/JsonObject;	a	serializeToJson
		p	1		predicateSerializer
	m	()Lav$a;	c	brewedPotion
	f	Lchr;	a	potion
c	aw	net/minecraft/advancements/critereon/ChangeDimensionTrigger
	m	()Ladd;	a	getId
	m	(Ladc;Ladc;Law$a;)Z	a	lambda$trigger$0
		p	2		conditions
	m	(Laiq;Ladc;Ladc;)V	a	trigger
		p	1		player
		p	2		from
		p	3		to
	m	(Lcom/google/gson/JsonObject;Lbn$b;Lbd;)Law$a;	a	createInstance
	m	(Lcom/google/gson/JsonObject;Lbn$b;Lbd;)Lar;	b	createInstance
		p	1		obj
		p	2		playerPredicate
		p	3		predicateDeserializer
	f	Ladd;	a	ID
c	aw$a	net/minecraft/advancements/critereon/ChangeDimensionTrigger$TriggerInstance
	m	(Lbn$b;Ladc;Ladc;)V	<init>	<init>
		p	1		player
		p	2		from
		p	3		to
	m	(Ladc;)Law$a;	a	changedDimensionTo
		p	0		to
	m	(Ladc;Ladc;)Law$a;	a	changedDimension
		p	0		from
		p	1		to
	m	(Lcs;)Lcom/google/gson/JsonObject;	a	serializeToJson
		p	1		predicateSerializer
	m	(Ladc;)Law$a;	b	changedDimensionFrom
		p	0		from
	m	(Ladc;Ladc;)Z	b	matches
		p	1		from
		p	2		to
	m	()Law$a;	c	changedDimension
	f	Ladc;	a	from
	f	Ladc;	b	to
c	ax	net/minecraft/advancements/critereon/ChanneledLightningTrigger
	m	()Ladd;	a	getId
	m	(Laiq;Lbfh;)Ldyr;	a	lambda$trigger$0
		p	1		entity
	m	(Laiq;Ljava/util/Collection;)V	a	trigger
		p	1		player
		p	2		victims
	m	(Lcom/google/gson/JsonObject;Lbn$b;Lbd;)Lax$a;	a	createInstance
	m	(Ljava/util/List;Lax$a;)Z	a	lambda$trigger$1
		p	1		conditions
	m	(Lcom/google/gson/JsonObject;Lbn$b;Lbd;)Lar;	b	createInstance
		p	1		obj
		p	2		playerPredicate
		p	3		predicateDeserializer
	f	Ladd;	a	ID
c	ax$a	net/minecraft/advancements/critereon/ChanneledLightningTrigger$TriggerInstance
	m	(Lbn$b;[Lbn$b;)V	<init>	<init>
		p	1		player
		p	2		victims
	m	(I)[Lbn$b;	a	lambda$channeledLightning$0
	m	(Lcs;)Lcom/google/gson/JsonObject;	a	serializeToJson
		p	1		predicateSerializer
	m	(Ljava/util/Collection;)Z	a	matches
		p	1		victims
	m	([Lbn;)Lax$a;	a	channeledLightning
		p	0		victims
	f	[Lbn$b;	a	victims
c	ay	net/minecraft/advancements/critereon/ConstructBeaconTrigger
	m	()Ladd;	a	getId
	m	(ILay$a;)Z	a	lambda$trigger$0
		p	1		conditions
	m	(Laiq;I)V	a	trigger
		p	1		player
		p	2		level
	m	(Lcom/google/gson/JsonObject;Lbn$b;Lbd;)Lay$a;	a	createInstance
	m	(Lcom/google/gson/JsonObject;Lbn$b;Lbd;)Lar;	b	createInstance
		p	1		obj
		p	2		playerPredicate
		p	3		predicateDeserializer
	f	Ladd;	a	ID
c	ay$a	net/minecraft/advancements/critereon/ConstructBeaconTrigger$TriggerInstance
	m	(Lbn$b;Lci$d;)V	<init>	<init>
		p	1		player
		p	2		level
	m	(I)Z	a	matches
		p	1		level
	m	(Lci$d;)Lay$a;	a	constructedBeacon
		p	0		level
	m	(Lcs;)Lcom/google/gson/JsonObject;	a	serializeToJson
		p	1		predicateSerializer
	m	()Lay$a;	c	constructedBeacon
	f	Lci$d;	a	level
c	az	net/minecraft/advancements/critereon/ConsumeItemTrigger
	m	()Ladd;	a	getId
	m	(Laiq;Lcfv;)V	a	trigger
		p	1		player
		p	2		stack
	m	(Lcfv;Laz$a;)Z	a	lambda$trigger$0
		p	1		conditions
	m	(Lcom/google/gson/JsonObject;Lbn$b;Lbd;)Laz$a;	a	createInstance
	m	(Lcom/google/gson/JsonObject;Lbn$b;Lbd;)Lar;	b	createInstance
		p	1		obj
		p	2		playerPredicate
		p	3		predicateDeserializer
	f	Ladd;	a	ID
c	az$a	net/minecraft/advancements/critereon/ConsumeItemTrigger$TriggerInstance
	m	(Lbn$b;Lbz;)V	<init>	<init>
		p	1		player
		p	2		item
	m	(Lbz;)Laz$a;	a	usedItem
		p	0		predicate
	m	(Lcfv;)Z	a	matches
		p	1		stack
	m	(Lcmh;)Laz$a;	a	usedItem
		p	0		item
	m	(Lcs;)Lcom/google/gson/JsonObject;	a	serializeToJson
		p	1		predicateSerializer
	m	()Laz$a;	c	usedItem
	f	Lbz;	a	item
c	ba	net/minecraft/advancements/critereon/CuredZombieVillagerTrigger
	m	()Ladd;	a	getId
	m	(Laiq;Lbwt;Lbxz;)V	a	trigger
		p	1		player
		p	2		zombie
		p	3		villager
	m	(Lcom/google/gson/JsonObject;Lbn$b;Lbd;)Lba$a;	a	createInstance
	m	(Ldyr;Ldyr;Lba$a;)Z	a	lambda$trigger$0
		p	2		conditions
	m	(Lcom/google/gson/JsonObject;Lbn$b;Lbd;)Lar;	b	createInstance
		p	1		obj
		p	2		playerPredicate
		p	3		predicateDeserializer
	f	Ladd;	a	ID
c	ba$a	net/minecraft/advancements/critereon/CuredZombieVillagerTrigger$TriggerInstance
	m	(Lbn$b;Lbn$b;Lbn$b;)V	<init>	<init>
		p	1		player
		p	2		zombie
		p	3		villager
	m	(Lcs;)Lcom/google/gson/JsonObject;	a	serializeToJson
		p	1		predicateSerializer
	m	(Ldyr;Ldyr;)Z	a	matches
		p	1		zombieContext
		p	2		villagerContext
	m	()Lba$a;	c	curedZombieVillager
	f	Lbn$b;	a	zombie
	f	Lbn$b;	b	villager
c	bb	net/minecraft/advancements/critereon/DamagePredicate
	m	(Lci$c;Lci$c;Lbn;Ljava/lang/Boolean;Lbc;)V	<init>	<init>
		p	1		dealt
		p	2		taken
		p	3		sourceEntity
		p	4		blocked
		p	5		type
	m	()Lcom/google/gson/JsonElement;	a	serializeToJson
	m	(Laiq;Lbem;FFZ)Z	a	matches
		p	1		player
		p	2		source
		p	3		dealt
		p	4		taken
		p	5		blocked
	m	(Lcom/google/gson/JsonElement;)Lbb;	a	fromJson
		p	0		json
	f	Lbb;	a	ANY
	f	Lci$c;	b	dealtDamage
	f	Lci$c;	c	takenDamage
	f	Lbn;	d	sourceEntity
	f	Ljava/lang/Boolean;	e	blocked
	f	Lbc;	f	type
c	bb$a	net/minecraft/advancements/critereon/DamagePredicate$Builder
	m	()Lbb$a;	a	damageInstance
	m	(Lbc$a;)Lbb$a;	a	type
		p	1		builder
	m	(Lbc;)Lbb$a;	a	type
		p	1		type
	m	(Lbn;)Lbb$a;	a	sourceEntity
		p	1		sourceEntity
	m	(Lci$c;)Lbb$a;	a	dealtDamage
		p	1		dealt
	m	(Ljava/lang/Boolean;)Lbb$a;	a	blocked
		p	1		blocked
	m	()Lbb;	b	build
	m	(Lci$c;)Lbb$a;	b	takenDamage
		p	1		taken
	f	Lci$c;	a	dealtDamage
	f	Lci$c;	b	takenDamage
	f	Lbn;	c	sourceEntity
	f	Ljava/lang/Boolean;	d	blocked
	f	Lbc;	e	type
c	bc	net/minecraft/advancements/critereon/DamageSourcePredicate
	m	(Ljava/util/List;Lbn;Lbn;)V	<init>	<init>
		p	1		tagPredicates
		p	2		directEntity
		p	3		sourceEntity
	m	()Lcom/google/gson/JsonElement;	a	serializeToJson
	m	(Laip;Lede;Lbem;)Z	a	matches
		p	1		world
		p	2		pos
		p	3		damageSource
	m	(Laiq;Lbem;)Z	a	matches
		p	1		player
		p	2		damageSource
	m	(Lcom/google/gson/JsonElement;)Lbc;	a	fromJson
		p	0		json
	f	Lbc;	a	ANY
	f	Ljava/util/List;	b	tags
	f	Lbn;	c	directEntity
	f	Lbn;	d	sourceEntity
c	bc$a	net/minecraft/advancements/critereon/DamageSourcePredicate$Builder
	m	()Lbc$a;	a	damageType
	m	(Lbn$a;)Lbc$a;	a	direct
		p	1		entity
	m	(Lbn;)Lbc$a;	a	direct
		p	1		entity
	m	(Lda;)Lbc$a;	a	tag
		p	1		tagPredicate
	m	()Lbc;	b	build
	m	(Lbn$a;)Lbc$a;	b	source
		p	1		entity
	m	(Lbn;)Lbc$a;	b	source
		p	1		entity
	f	Lcom/google/common/collect/ImmutableList$Builder;	a	tags
	f	Lbn;	b	directEntity
	f	Lbn;	c	sourceEntity
c	bd	net/minecraft/advancements/critereon/DeserializationContext
	m	(Ladd;Ldyw;)V	<init>	<init>
		p	1		advancementId
		p	2		conditionManager
	m	()Ladd;	a	getAdvancementId
	m	(Ladd;)Ldyu;	a	lambda$deserializeConditions$0
		p	0		tableId
	m	(Lcom/google/gson/JsonArray;Ljava/lang/String;Leax;)[Lebl;	a	deserializeConditions
		p	1		array
		p	2		key
		p	3		contextType
	m	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V	a	lambda$deserializeConditions$1
		p	1		name
		p	2		message
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ladd;	b	id
	f	Ldyw;	c	predicateManager
	f	Lcom/google/gson/Gson;	d	predicateGson
c	be	net/minecraft/advancements/critereon/DistancePredicate
	m	(Lci$c;Lci$c;Lci$c;Lci$c;Lci$c;)V	<init>	<init>
		p	1		x
		p	2		y
		p	3		z
		p	4		horizontal
		p	5		absolute
	m	()Lcom/google/gson/JsonElement;	a	serializeToJson
	m	(DDDDDD)Z	a	matches
		p	1		x0
		p	3		y0
		p	5		z0
		p	7		x1
		p	9		y1
		p	11		z1
	m	(Lci$c;)Lbe;	a	horizontal
		p	0		horizontal
	m	(Lcom/google/gson/JsonElement;)Lbe;	a	fromJson
		p	0		json
	m	(Lci$c;)Lbe;	b	vertical
		p	0		y
	m	(Lci$c;)Lbe;	c	absolute
		p	0		absolute
	f	Lbe;	a	ANY
	f	Lci$c;	b	x
	f	Lci$c;	c	y
	f	Lci$c;	d	z
	f	Lci$c;	e	horizontal
	f	Lci$c;	f	absolute
c	bf	net/minecraft/advancements/critereon/DistanceTrigger
	m	(Ladd;)V	<init>	<init>
		p	1		id
	m	()Ladd;	a	getId
	m	(Laiq;Lede;)V	a	trigger
		p	1		player
		p	2		startPos
	m	(Laiq;Lede;Lede;Lbf$a;)Z	a	lambda$trigger$0
		p	3		conditions
	m	(Lcom/google/gson/JsonObject;Lbn$b;Lbd;)Lbf$a;	a	createInstance
	m	(Lcom/google/gson/JsonObject;Lbn$b;Lbd;)Lar;	b	createInstance
		p	1		obj
		p	2		playerPredicate
		p	3		predicateDeserializer
	f	Ladd;	a	id
c	bf$a	net/minecraft/advancements/critereon/DistanceTrigger$TriggerInstance
	m	(Ladd;Lbn$b;Lcg;Lbe;)V	<init>	<init>
		p	1		id
		p	2		entity
		p	3		startPos
		p	4		distance
	m	(Laip;Lede;Lede;)Z	a	matches
		p	1		world
		p	2		startPos
		p	3		endPos
	m	(Lbe;)Lbf$a;	a	travelledThroughNether
		p	0		distance
	m	(Lbn$a;Lbe;)Lbf$a;	a	rideEntityInLava
		p	0		entity
		p	1		distance
	m	(Lbn$a;Lbe;Lcg;)Lbf$a;	a	fallFromHeight
		p	0		entity
		p	1		distance
		p	2		startPos
	m	(Lcs;)Lcom/google/gson/JsonObject;	a	serializeToJson
		p	1		predicateSerializer
	f	Lcg;	a	startPosition
	f	Lbe;	b	distance
c	bg	net/minecraft/advancements/critereon/EffectsChangedTrigger
	m	()Ladd;	a	getId
	m	(Laiq;Lbfh;)V	a	trigger
		p	1		player
		p	2		source
	m	(Laiq;Ldyr;Lbg$a;)Z	a	lambda$trigger$0
		p	2		conditions
	m	(Lcom/google/gson/JsonObject;Lbn$b;Lbd;)Lbg$a;	a	createInstance
	m	(Lcom/google/gson/JsonObject;Lbn$b;Lbd;)Lar;	b	createInstance
		p	1		obj
		p	2		playerPredicate
		p	3		predicateDeserializer
	f	Ladd;	a	ID
c	bg$a	net/minecraft/advancements/critereon/EffectsChangedTrigger$TriggerInstance
	m	(Lbn$b;Lcj;Lbn$b;)V	<init>	<init>
		p	1		player
		p	2		effects
		p	3		source
	m	(Laiq;Ldyr;)Z	a	matches
		p	1		player
		p	2		context
	m	(Lbn;)Lbg$a;	a	gotEffectsFrom
		p	0		source
	m	(Lcj;)Lbg$a;	a	hasEffects
		p	0		effects
	m	(Lcs;)Lcom/google/gson/JsonObject;	a	serializeToJson
		p	1		predicateSerializer
	f	Lcj;	a	effects
	f	Lbn$b;	b	source
c	bh	net/minecraft/advancements/critereon/EnchantedItemTrigger
	m	()Ladd;	a	getId
	m	(Laiq;Lcfv;I)V	a	trigger
		p	1		player
		p	2		stack
		p	3		levels
	m	(Lcfv;ILbh$a;)Z	a	lambda$trigger$0
		p	2		conditions
	m	(Lcom/google/gson/JsonObject;Lbn$b;Lbd;)Lbh$a;	a	createInstance
	m	(Lcom/google/gson/JsonObject;Lbn$b;Lbd;)Lar;	b	createInstance
		p	1		obj
		p	2		playerPredicate
		p	3		predicateDeserializer
	f	Ladd;	a	ID
c	bh$a	net/minecraft/advancements/critereon/EnchantedItemTrigger$TriggerInstance
	m	(Lbn$b;Lbz;Lci$d;)V	<init>	<init>
		p	1		player
		p	2		item
		p	3		levels
	m	(Lcfv;I)Z	a	matches
		p	1		stack
		p	2		levels
	m	(Lcs;)Lcom/google/gson/JsonObject;	a	serializeToJson
		p	1		predicateSerializer
	m	()Lbh$a;	c	enchantedItem
	f	Lbz;	a	item
	f	Lci$d;	b	levels
c	bi	net/minecraft/advancements/critereon/EnchantmentPredicate
	m	(Lckc;Lci$d;)V	<init>	<init>
		p	1		enchantment
		p	2		levels
	m	()Lcom/google/gson/JsonElement;	a	serializeToJson
	m	(Ladd;)Lcom/google/gson/JsonSyntaxException;	a	lambda$fromJson$0
	m	(Lcom/google/gson/JsonElement;)Lbi;	a	fromJson
		p	0		el
	m	(Ljava/util/Map;)Z	a	containedIn
		p	1		enchantments
	m	(Lcom/google/gson/JsonElement;)[Lbi;	b	fromJsonArray
		p	0		el
	f	Lbi;	a	ANY
	f	[Lbi;	b	NONE
	f	Lckc;	c	enchantment
	f	Lci$d;	d	level
c	bj	net/minecraft/advancements/critereon/EnterBlockTrigger
	m	()Ladd;	a	getId
	m	(Ladd;)Lcom/google/gson/JsonSyntaxException;	a	lambda$deserializeBlock$1
	m	(Laiq;Ldbq;)V	a	trigger
		p	1		player
		p	2		state
	m	(Lcom/google/gson/JsonObject;)Lcpi;	a	deserializeBlock
		p	0		obj
	m	(Lcom/google/gson/JsonObject;Lbn$b;Lbd;)Lbj$a;	a	createInstance
	m	(Lcpi;Ljava/lang/String;)V	a	lambda$createInstance$0
		p	1		name
	m	(Ldbq;Lbj$a;)Z	a	lambda$trigger$2
		p	1		conditions
	m	(Lcom/google/gson/JsonObject;Lbn$b;Lbd;)Lar;	b	createInstance
		p	1		obj
		p	2		playerPredicate
		p	3		predicateDeserializer
	f	Ladd;	a	ID
c	bj$a	net/minecraft/advancements/critereon/EnterBlockTrigger$TriggerInstance
	m	(Lbn$b;Lcpi;Lcy;)V	<init>	<init>
		p	1		player
		p	2		block
		p	3		state
	m	(Lcpi;)Lbj$a;	a	entersBlock
		p	0		block
	m	(Lcs;)Lcom/google/gson/JsonObject;	a	serializeToJson
		p	1		predicateSerializer
	m	(Ldbq;)Z	a	matches
		p	1		state
	f	Lcpi;	a	block
	f	Lcy;	b	state
c	bk	net/minecraft/advancements/critereon/EntityEquipmentPredicate
	m	(Lbz;Lbz;Lbz;Lbz;Lbz;Lbz;)V	<init>	<init>
		p	1		head
		p	2		chest
		p	3		legs
		p	4		feet
		p	5		mainhand
		p	6		offhand
	m	()Lcom/google/gson/JsonElement;	a	serializeToJson
	m	(Lbfh;)Z	a	matches
		p	1		entity
	m	(Lcom/google/gson/JsonElement;)Lbk;	a	fromJson
		p	0		json
	f	Lbk;	a	ANY
	f	Lbk;	b	CAPTAIN
	f	Lbz;	c	head
	f	Lbz;	d	chest
	f	Lbz;	e	legs
	f	Lbz;	f	feet
	f	Lbz;	g	mainhand
	f	Lbz;	h	offhand
c	bk$a	net/minecraft/advancements/critereon/EntityEquipmentPredicate$Builder
	m	()Lbk$a;	a	equipment
	m	(Lbz;)Lbk$a;	a	head
		p	1		head
	m	()Lbk;	b	build
	m	(Lbz;)Lbk$a;	b	chest
		p	1		chest
	m	(Lbz;)Lbk$a;	c	legs
		p	1		legs
	m	(Lbz;)Lbk$a;	d	feet
		p	1		feet
	m	(Lbz;)Lbk$a;	e	mainhand
		p	1		mainhand
	m	(Lbz;)Lbk$a;	f	offhand
		p	1		offhand
	f	Lbz;	a	head
	f	Lbz;	b	chest
	f	Lbz;	c	legs
	f	Lbz;	d	feet
	f	Lbz;	e	mainhand
	f	Lbz;	f	offhand
c	bl	net/minecraft/advancements/critereon/EntityFlagsPredicate
	m	(Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;)V	<init>	<init>
		p	1		isOnFire
		p	2		isSneaking
		p	3		isSprinting
		p	4		isSwimming
		p	5		isBaby
	m	()Lcom/google/gson/JsonElement;	a	serializeToJson
	m	(Lbfh;)Z	a	matches
		p	1		entity
	m	(Lcom/google/gson/JsonElement;)Lbl;	a	fromJson
		p	0		json
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/lang/Boolean;	a	getOptionalBoolean
		p	0		json
		p	1		key
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/Boolean;)V	a	addOptionalBoolean
		p	1		json
		p	2		key
		p	3		value
	f	Lbl;	a	ANY
	f	Ljava/lang/Boolean;	b	isOnFire
	f	Ljava/lang/Boolean;	c	isCrouching
	f	Ljava/lang/Boolean;	d	isSprinting
	f	Ljava/lang/Boolean;	e	isSwimming
	f	Ljava/lang/Boolean;	f	isBaby
c	bl$a	net/minecraft/advancements/critereon/EntityFlagsPredicate$Builder
	m	()Lbl$a;	a	flags
	m	(Ljava/lang/Boolean;)Lbl$a;	a	setOnFire
		p	1		onFire
	m	()Lbl;	b	build
	m	(Ljava/lang/Boolean;)Lbl$a;	b	setCrouching
		p	1		sneaking
	m	(Ljava/lang/Boolean;)Lbl$a;	c	setSprinting
		p	1		sprinting
	m	(Ljava/lang/Boolean;)Lbl$a;	d	setSwimming
		p	1		swimming
	m	(Ljava/lang/Boolean;)Lbl$a;	e	setIsBaby
		p	1		isBaby
	f	Ljava/lang/Boolean;	a	isOnFire
	f	Ljava/lang/Boolean;	b	isCrouching
	f	Ljava/lang/Boolean;	c	isSprinting
	f	Ljava/lang/Boolean;	d	isSwimming
	f	Ljava/lang/Boolean;	e	isBaby
c	bm	net/minecraft/advancements/critereon/EntityHurtPlayerTrigger
	m	()Ladd;	a	getId
	m	(Laiq;Lbem;FFZ)V	a	trigger
		p	1		player
		p	2		source
		p	3		dealt
		p	4		taken
		p	5		blocked
	m	(Laiq;Lbem;FFZLbm$a;)Z	a	lambda$trigger$0
		p	5		conditions
	m	(Lcom/google/gson/JsonObject;Lbn$b;Lbd;)Lbm$a;	a	createInstance
	m	(Lcom/google/gson/JsonObject;Lbn$b;Lbd;)Lar;	b	createInstance
		p	1		obj
		p	2		playerPredicate
		p	3		predicateDeserializer
	f	Ladd;	a	ID
c	bm$a	net/minecraft/advancements/critereon/EntityHurtPlayerTrigger$TriggerInstance
	m	(Lbn$b;Lbb;)V	<init>	<init>
		p	1		player
		p	2		damage
	m	(Laiq;Lbem;FFZ)Z	a	matches
		p	1		player
		p	2		source
		p	3		dealt
		p	4		taken
		p	5		blocked
	m	(Lbb$a;)Lbm$a;	a	entityHurtPlayer
		p	0		damageBuilder
	m	(Lbb;)Lbm$a;	a	entityHurtPlayer
		p	0		predicate
	m	(Lcs;)Lcom/google/gson/JsonObject;	a	serializeToJson
		p	1		predicateSerializer
	m	()Lbm$a;	c	entityHurtPlayer
	f	Lbb;	a	damage
c	bn	net/minecraft/advancements/critereon/EntityPredicate
	m	(Lbp;Lbe;Lcg;Lcg;Lcj;Lck;Lbl;Lbk;Lbo;Lbn;Lbn;Lbn;Ljava/lang/String;)V	<init>	<init>
		p	1		type
		p	2		distance
		p	3		location
		p	4		steppingOn
		p	5		effects
		p	6		nbt
		p	7		flags
		p	8		equipment
		p	9		typeSpecific
		p	10		vehicle
		p	11		passenger
		p	12		targetedEntity
		p	13		team
	m	(Lbp;Lbe;Lcg;Lcg;Lcj;Lck;Lbl;Lbk;Lbo;Ljava/lang/String;)V	<init>	<init>
		p	1		type
		p	2		distance
		p	3		location
		p	4		steppingOn
		p	5		effects
		p	6		nbt
		p	7		flags
		p	8		equipment
		p	9		typeSpecific
		p	10		team
	m	()Lcom/google/gson/JsonElement;	a	serializeToJson
	m	(Laip;Lede;Lbfh;)Z	a	matches
		p	1		world
		p	2		pos
		p	3		entity
	m	(Laiq;Lbfh;)Z	a	matches
		p	1		player
		p	2		entity
	m	(Lcom/google/gson/JsonElement;)Lbn;	a	fromJson
		p	0		json
	m	(Laip;Lede;Lbfh;)Z	b	lambda$matches$0
		p	3		entity
	m	(Laiq;Lbfh;)Ldyr;	b	createContext
		p	0		player
		p	1		target
	f	Lbn;	a	ANY
	f	Lbp;	b	entityType
	f	Lbe;	c	distanceToPlayer
	f	Lcg;	d	location
	f	Lcg;	e	steppingOnLocation
	f	Lcj;	f	effects
	f	Lck;	g	nbt
	f	Lbl;	h	flags
	f	Lbk;	i	equipment
	f	Lbo;	j	subPredicate
	f	Lbn;	k	vehicle
	f	Lbn;	l	passenger
	f	Lbn;	m	targetedEntity
	f	Ljava/lang/String;	n	team
c	bn$a	net/minecraft/advancements/critereon/EntityPredicate$Builder
	m	()Lbn$a;	a	entity
	m	(Lanv;)Lbn$a;	a	of
		p	1		tag
	m	(Lbe;)Lbn$a;	a	distance
		p	1		distance
	m	(Lbfl;)Lbn$a;	a	of
		p	1		type
	m	(Lbk;)Lbn$a;	a	equipment
		p	1		equipment
	m	(Lbl;)Lbn$a;	a	flags
		p	1		flags
	m	(Lbn;)Lbn$a;	a	vehicle
		p	1		vehicle
	m	(Lbo;)Lbn$a;	a	subPredicate
		p	1		typeSpecific
	m	(Lbp;)Lbn$a;	a	entityType
		p	1		type
	m	(Lcg;)Lbn$a;	a	located
		p	1		location
	m	(Lcj;)Lbn$a;	a	effects
		p	1		effects
	m	(Lck;)Lbn$a;	a	nbt
		p	1		nbt
	m	(Ljava/lang/String;)Lbn$a;	a	team
		p	1		team
	m	()Lbn;	b	build
	m	(Lbn;)Lbn$a;	b	passenger
		p	1		passenger
	m	(Lcg;)Lbn$a;	b	steppingOn
		p	1		location
	m	(Lbn;)Lbn$a;	c	targetedEntity
		p	1		targetedEntity
	f	Lbp;	a	entityType
	f	Lbe;	b	distanceToPlayer
	f	Lcg;	c	location
	f	Lcg;	d	steppingOnLocation
	f	Lcj;	e	effects
	f	Lck;	f	nbt
	f	Lbl;	g	flags
	f	Lbk;	h	equipment
	f	Lbo;	i	subPredicate
	f	Lbn;	j	vehicle
	f	Lbn;	k	passenger
	f	Lbn;	l	targetedEntity
	f	Ljava/lang/String;	m	team
c	bn$b	net/minecraft/advancements/critereon/EntityPredicate$Composite
	m	([Lebl;)V	<init>	<init>
		p	1		conditions
	m	(Lbn;)Lbn$b;	a	wrap
		p	0		predicate
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Lbd;)Lbn$b;	a	fromJson
		p	0		root
		p	1		key
		p	2		predicateDeserializer
	m	(Lcs;)Lcom/google/gson/JsonElement;	a	toJson
		p	1		predicateSerializer
	m	(Ldyr;)Z	a	matches
		p	1		context
	m	(Ljava/lang/String;Lbd;Lcom/google/gson/JsonElement;)Lbn$b;	a	fromElement
		p	0		key
		p	1		predicateDeserializer
		p	2		json
	m	([Lbn$b;Lcs;)Lcom/google/gson/JsonElement;	a	toJson
		p	0		predicates
		p	1		predicateSerializer
	m	([Lebl;)Lbn$b;	a	create
		p	0		conditions
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Lbd;)[Lbn$b;	b	fromJsonArray
		p	0		root
		p	1		key
		p	2		predicateDeserializer
	f	Lbn$b;	a	ANY
	f	[Lebl;	b	conditions
	f	Ljava/util/function/Predicate;	c	compositePredicates
c	bo	net/minecraft/advancements/critereon/EntitySubPredicate
	m	()Lcom/google/gson/JsonObject;	a	serializeCustomData
	m	(Lbfh;Laip;Lede;)Z	a	matches
		p	1		entity
		p	2		world
		p	3		pos
	m	(Lbrn;)Lbo;	a	variant
		p	0		variant
	m	(Lbru;)Lbo;	a	variant
		p	0		variant
	m	(Lcom/google/gson/JsonElement;)Lbo;	a	fromJson
		p	0		json
	m	()Lcom/google/gson/JsonElement;	b	serialize
	m	()Lbo$a;	c	type
	f	Lbo;	a	ANY
c	bo$1	net/minecraft/advancements/critereon/EntitySubPredicate$1
	m	()Lcom/google/gson/JsonObject;	a	serializeCustomData
	m	(Lbfh;Laip;Lede;)Z	a	matches
		p	1		entity
		p	2		world
		p	3		pos
	m	()Lbo$a;	c	type
c	bo$a	net/minecraft/advancements/critereon/EntitySubPredicate$Type
	m	(Lcom/google/gson/JsonObject;)Lbo;	deserialize	deserialize
		p	1		json
c	bo$b	net/minecraft/advancements/critereon/EntitySubPredicate$Types
	m	(Lbfh;)Ljava/util/Optional;	a	lambda$static$13
		p	0		entity
	m	(Lcom/google/gson/JsonObject;)Lbo;	a	lambda$static$0
		p	0		json
	m	(Lbfh;)Ljava/util/Optional;	b	lambda$static$12
		p	0		entity
	m	(Lbfh;)Ljava/util/Optional;	c	lambda$static$11
		p	0		entity
	m	(Lbfh;)Ljava/util/Optional;	d	lambda$static$10
		p	0		entity
	m	(Lbfh;)Ljava/util/Optional;	e	lambda$static$9
		p	0		entity
	m	(Lbfh;)Ljava/util/Optional;	f	lambda$static$8
		p	0		entity
	m	(Lbfh;)Ljava/util/Optional;	g	lambda$static$7
		p	0		entity
	m	(Lbfh;)Ljava/util/Optional;	h	lambda$static$6
		p	0		entity
	m	(Lbfh;)Ljava/util/Optional;	i	lambda$static$5
		p	0		entity
	m	(Lbfh;)Ljava/util/Optional;	j	lambda$static$4
		p	0		entity
	m	(Lbfh;)Ljava/util/Optional;	k	lambda$static$3
		p	0		entity
	m	(Lbfh;)Ljava/util/Optional;	l	lambda$static$2
		p	0		entity
	m	(Lbfh;)Ljava/util/Optional;	m	lambda$static$1
		p	0		entity
	f	Lbo$a;	a	ANY
	f	Lbo$a;	b	LIGHTNING
	f	Lbo$a;	c	FISHING_HOOK
	f	Lbo$a;	d	PLAYER
	f	Lbo$a;	e	SLIME
	f	Lbq;	f	CAT
	f	Lbq;	g	FROG
	f	Lbq;	h	AXOLOTL
	f	Lbq;	i	BOAT
	f	Lbq;	j	FOX
	f	Lbq;	k	MOOSHROOM
	f	Lbq;	l	PAINTING
	f	Lbq;	m	RABBIT
	f	Lbq;	n	HORSE
	f	Lbq;	o	LLAMA
	f	Lbq;	p	VILLAGER
	f	Lbq;	q	PARROT
	f	Lbq;	r	TROPICAL_FISH
	f	Lcom/google/common/collect/BiMap;	s	TYPES
c	bp	net/minecraft/advancements/critereon/EntityTypePredicate
	m	()Lcom/google/gson/JsonElement;	a	serializeToJson
	m	(Ladd;)Lcom/google/gson/JsonSyntaxException;	a	lambda$fromJson$0
	m	(Lanv;)Lbp;	a	of
		p	0		tag
	m	(Lbfl;)Z	a	matches
		p	1		type
	m	(Lcom/google/gson/JsonElement;)Lbp;	a	fromJson
		p	0		json
	m	(Lbfl;)Lbp;	b	of
		p	0		type
	f	Lbp;	a	ANY
	f	Lcom/google/common/base/Joiner;	b	COMMA_JOINER
c	bp$1	net/minecraft/advancements/critereon/EntityTypePredicate$1
	m	()Lcom/google/gson/JsonElement;	a	serializeToJson
	m	(Lbfl;)Z	a	matches
		p	1		type
c	bp$a	net/minecraft/advancements/critereon/EntityTypePredicate$TagPredicate
	m	(Lanv;)V	<init>	<init>
		p	1		tag
	m	()Lcom/google/gson/JsonElement;	a	serializeToJson
	m	(Lbfl;)Z	a	matches
		p	1		type
	f	Lanv;	b	tag
c	bp$b	net/minecraft/advancements/critereon/EntityTypePredicate$TypePredicate
	m	(Lbfl;)V	<init>	<init>
		p	1		type
	m	()Lcom/google/gson/JsonElement;	a	serializeToJson
	m	(Lbfl;)Z	a	matches
		p	1		type
	f	Lbfl;	b	type
c	bq	net/minecraft/advancements/critereon/EntityVariantPredicate
	m	(Lcom/mojang/serialization/Codec;Ljava/util/function/Function;)V	<init>	<init>
		p	1		codec
		p	2		variantGetter
	m	()Lbo$a;	a	type
	m	(Lcom/mojang/serialization/Codec;Lcom/google/gson/JsonObject;)Lbo;	a	lambda$new$0
		p	2		json
	m	(Lcom/mojang/serialization/Codec;Ljava/util/function/Function;)Lbq;	a	create
		p	0		codec
		p	1		variantGetter
	m	(Lhq;Ljava/util/function/Function;)Lbq;	a	create
		p	0		registry
		p	1		variantGetter
	m	(Ljava/lang/Object;)Lbo;	a	createPredicate
		p	1		variant
	f	Ljava/lang/String;	a	VARIANT_KEY
	f	Lcom/mojang/serialization/Codec;	b	variantCodec
	f	Ljava/util/function/Function;	c	getter
	f	Lbo$a;	d	type
c	bq$1	net/minecraft/advancements/critereon/EntityVariantPredicate$1
	m	()Lcom/google/gson/JsonObject;	a	serializeCustomData
	m	(Lbfh;Laip;Lede;)Z	a	matches
		p	1		entity
		p	2		world
		p	3		pos
	m	(Ljava/lang/Object;Ljava/lang/Object;)Z	a	lambda$matches$0
		p	1		variant
	m	(Ljava/lang/Object;Ljava/lang/String;)Lcom/google/gson/JsonParseException;	a	lambda$serializeCustomData$1
	m	()Lbo$a;	c	type
	f	Ljava/lang/Object;	b	val$variant
	f	Lbq;	c	this$0
c	br	net/minecraft/advancements/critereon/FilledBucketTrigger
	m	()Ladd;	a	getId
	m	(Laiq;Lcfv;)V	a	trigger
		p	1		player
		p	2		stack
	m	(Lcfv;Lbr$a;)Z	a	lambda$trigger$0
		p	1		conditions
	m	(Lcom/google/gson/JsonObject;Lbn$b;Lbd;)Lbr$a;	a	createInstance
	m	(Lcom/google/gson/JsonObject;Lbn$b;Lbd;)Lar;	b	createInstance
		p	1		obj
		p	2		playerPredicate
		p	3		predicateDeserializer
	f	Ladd;	a	ID
c	br$a	net/minecraft/advancements/critereon/FilledBucketTrigger$TriggerInstance
	m	(Lbn$b;Lbz;)V	<init>	<init>
		p	1		player
		p	2		item
	m	(Lbz;)Lbr$a;	a	filledBucket
		p	0		item
	m	(Lcfv;)Z	a	matches
		p	1		stack
	m	(Lcs;)Lcom/google/gson/JsonObject;	a	serializeToJson
		p	1		predicateSerializer
	f	Lbz;	a	item
c	bs	net/minecraft/advancements/critereon/FishingHookPredicate
	m	(Z)V	<init>	<init>
		p	1		inOpenWater
	m	()Lcom/google/gson/JsonObject;	a	serializeCustomData
	m	(Lbfh;Laip;Lede;)Z	a	matches
		p	1		entity
		p	2		world
		p	3		pos
	m	(Lcom/google/gson/JsonObject;)Lbs;	a	fromJson
		p	0		json
	m	(Z)Lbs;	a	inOpenWater
		p	0		inOpenWater
	m	()Lbo$a;	c	type
	f	Lbs;	b	ANY
	f	Ljava/lang/String;	c	IN_OPEN_WATER_KEY
	f	Z	d	inOpenWater
c	bt	net/minecraft/advancements/critereon/FishingRodHookedTrigger
	m	()Ladd;	a	getId
	m	(Laiq;Lcfv;Lbza;Ljava/util/Collection;)V	a	trigger
		p	1		player
		p	2		rod
		p	3		bobber
		p	4		fishingLoots
	m	(Lcfv;Ldyr;Ljava/util/Collection;Lbt$a;)Z	a	lambda$trigger$0
		p	3		conditions
	m	(Lcom/google/gson/JsonObject;Lbn$b;Lbd;)Lbt$a;	a	createInstance
	m	(Lcom/google/gson/JsonObject;Lbn$b;Lbd;)Lar;	b	createInstance
		p	1		obj
		p	2		playerPredicate
		p	3		predicateDeserializer
	f	Ladd;	a	ID
c	bt$a	net/minecraft/advancements/critereon/FishingRodHookedTrigger$TriggerInstance
	m	(Lbn$b;Lbz;Lbn$b;Lbz;)V	<init>	<init>
		p	1		player
		p	2		rod
		p	3		hookedEntity
		p	4		caughtItem
	m	(Lbz;Lbn;Lbz;)Lbt$a;	a	fishedItem
		p	0		rod
		p	1		bobber
		p	2		item
	m	(Lcfv;Ldyr;Ljava/util/Collection;)Z	a	matches
		p	1		rod
		p	2		hookedEntityContext
		p	3		fishingLoots
	m	(Lcs;)Lcom/google/gson/JsonObject;	a	serializeToJson
		p	1		predicateSerializer
	f	Lbz;	a	rod
	f	Lbn$b;	b	entity
	f	Lbz;	c	item
c	bu	net/minecraft/advancements/critereon/FluidPredicate
	m	(Lanv;Ldwi;Lcy;)V	<init>	<init>
		p	1		tag
		p	2		fluid
		p	3		state
	m	()Lcom/google/gson/JsonElement;	a	serializeToJson
	m	(Laip;Lgt;)Z	a	matches
		p	1		world
		p	2		pos
	m	(Lcom/google/gson/JsonElement;)Lbu;	a	fromJson
		p	0		json
	f	Lbu;	a	ANY
	f	Lanv;	b	tag
	f	Ldwi;	c	fluid
	f	Lcy;	d	properties
c	bu$a	net/minecraft/advancements/critereon/FluidPredicate$Builder
	m	()Lbu$a;	a	fluid
	m	(Lanv;)Lbu$a;	a	of
		p	1		tag
	m	(Lcy;)Lbu$a;	a	setProperties
		p	1		state
	m	(Ldwi;)Lbu$a;	a	of
		p	1		fluid
	m	()Lbu;	b	build
	f	Ldwi;	a	fluid
	f	Lanv;	b	fluids
	f	Lcy;	c	properties
c	bv	net/minecraft/advancements/critereon/ImpossibleTrigger
	m	()Ladd;	a	getId
	m	(Ladl;)V	a	removePlayerListeners
		p	1		tracker
	m	(Ladl;Lal$a;)V	a	addPlayerListener
		p	1		manager
		p	2		conditions
	m	(Lcom/google/gson/JsonObject;Lbd;)Lam;	a	createInstance
		p	1		obj
		p	2		predicateDeserializer
	m	(Ladl;Lal$a;)V	b	removePlayerListener
		p	1		manager
		p	2		conditions
	m	(Lcom/google/gson/JsonObject;Lbd;)Lbv$a;	b	createInstance
	f	Ladd;	a	ID
c	bv$a	net/minecraft/advancements/critereon/ImpossibleTrigger$TriggerInstance
	m	()Ladd;	a	getCriterion
	m	(Lcs;)Lcom/google/gson/JsonObject;	a	serializeToJson
		p	1		predicateSerializer
c	bw	net/minecraft/advancements/critereon/InventoryChangeTrigger
	m	()Ladd;	a	getId
	m	(Laiq;Lbyl;Lcfv;)V	a	trigger
		p	1		player
		p	2		inventory
		p	3		stack
	m	(Laiq;Lbyl;Lcfv;III)V	a	trigger
		p	1		player
		p	2		inventory
		p	3		stack
		p	4		full
		p	5		empty
		p	6		occupied
	m	(Lbyl;Lcfv;IIILbw$a;)Z	a	lambda$trigger$0
		p	5		conditions
	m	(Lcom/google/gson/JsonObject;Lbn$b;Lbd;)Lbw$a;	a	createInstance
	m	(Lcom/google/gson/JsonObject;Lbn$b;Lbd;)Lar;	b	createInstance
		p	1		obj
		p	2		playerPredicate
		p	3		predicateDeserializer
	f	Ladd;	a	ID
c	bw$a	net/minecraft/advancements/critereon/InventoryChangeTrigger$TriggerInstance
	m	(Lbn$b;Lci$d;Lci$d;Lci$d;[Lbz;)V	<init>	<init>
		p	1		player
		p	2		occupied
		p	3		full
		p	4		empty
		p	5		items
	m	(Lbyl;Lcfv;III)Z	a	matches
		p	1		inventory
		p	2		stack
		p	3		full
		p	4		empty
		p	5		occupied
	m	(Lcfv;Lbz;)Z	a	lambda$matches$0
		p	1		item
	m	(Lcs;)Lcom/google/gson/JsonObject;	a	serializeToJson
		p	1		predicateSerializer
	m	([Lbz;)Lbw$a;	a	hasItems
		p	0		items
	m	([Lcmh;)Lbw$a;	a	hasItems
		p	0		items
	f	Lci$d;	a	slotsOccupied
	f	Lci$d;	b	slotsFull
	f	Lci$d;	c	slotsEmpty
	f	[Lbz;	d	predicates
c	bx	net/minecraft/advancements/critereon/ItemDurabilityTrigger
	m	()Ladd;	a	getId
	m	(Laiq;Lcfv;I)V	a	trigger
		p	1		player
		p	2		stack
		p	3		durability
	m	(Lcfv;ILbx$a;)Z	a	lambda$trigger$0
		p	2		conditions
	m	(Lcom/google/gson/JsonObject;Lbn$b;Lbd;)Lbx$a;	a	createInstance
	m	(Lcom/google/gson/JsonObject;Lbn$b;Lbd;)Lar;	b	createInstance
		p	1		obj
		p	2		playerPredicate
		p	3		predicateDeserializer
	f	Ladd;	a	ID
c	bx$a	net/minecraft/advancements/critereon/ItemDurabilityTrigger$TriggerInstance
	m	(Lbn$b;Lbz;Lci$d;Lci$d;)V	<init>	<init>
		p	1		player
		p	2		item
		p	3		durability
		p	4		delta
	m	(Lbn$b;Lbz;Lci$d;)Lbx$a;	a	changedDurability
		p	0		player
		p	1		item
		p	2		durability
	m	(Lbz;Lci$d;)Lbx$a;	a	changedDurability
		p	0		item
		p	1		durability
	m	(Lcfv;I)Z	a	matches
		p	1		stack
		p	2		durability
	m	(Lcs;)Lcom/google/gson/JsonObject;	a	serializeToJson
		p	1		predicateSerializer
	f	Lbz;	a	item
	f	Lci$d;	b	durability
	f	Lci$d;	c	delta
c	by	net/minecraft/advancements/critereon/ItemInteractWithBlockTrigger
	m	(Ladd;)V	<init>	<init>
		p	1		id
	m	()Ladd;	a	getId
	m	(Laiq;Lgt;Lcfv;)V	a	trigger
		p	1		player
		p	2		pos
		p	3		stack
	m	(Lcom/google/gson/JsonObject;Lbn$b;Lbd;)Lby$a;	a	createInstance
	m	(Ldbq;Laiq;Lgt;Lcfv;Lby$a;)Z	a	lambda$trigger$0
		p	4		conditions
	m	(Lcom/google/gson/JsonObject;Lbn$b;Lbd;)Lar;	b	createInstance
		p	1		obj
		p	2		playerPredicate
		p	3		predicateDeserializer
	f	Ladd;	a	id
c	by$a	net/minecraft/advancements/critereon/ItemInteractWithBlockTrigger$TriggerInstance
	m	(Ladd;Lbn$b;Lcg;Lbz;)V	<init>	<init>
		p	1		id
		p	2		entity
		p	3		location
		p	4		item
	m	(Lcg$a;Lbz$a;)Lby$a;	a	itemUsedOnBlock
		p	0		location
		p	1		item
	m	(Lcs;)Lcom/google/gson/JsonObject;	a	serializeToJson
		p	1		predicateSerializer
	m	(Ldbq;Laip;Lgt;Lcfv;)Z	a	matches
		p	1		state
		p	2		world
		p	3		pos
		p	4		stack
	m	(Lcg$a;Lbz$a;)Lby$a;	b	allayDropItemOnBlock
		p	0		location
		p	1		item
	f	Lcg;	a	location
	f	Lbz;	b	item
c	bz	net/minecraft/advancements/critereon/ItemPredicate
	m	(Lanv;Ljava/util/Set;Lci$d;Lci$d;[Lbi;[Lbi;Lchr;Lck;)V	<init>	<init>
		p	1		tag
		p	2		items
		p	3		count
		p	4		durability
		p	5		enchantments
		p	6		storedEnchantments
		p	7		potion
		p	8		nbt
	m	()Lcom/google/gson/JsonElement;	a	serializeToJson
	m	(Ladd;)Lcom/google/gson/JsonSyntaxException;	a	lambda$fromJson$1
		p	0		id
	m	(Lcfv;)Z	a	matches
		p	1		stack
	m	(Lcom/google/gson/JsonElement;)Lbz;	a	fromJson
		p	0		el
	m	(Ladd;)Lcom/google/gson/JsonSyntaxException;	b	lambda$fromJson$0
	m	(Lcom/google/gson/JsonElement;)[Lbz;	b	fromJsonArray
		p	0		el
	f	Lbz;	a	ANY
	f	Lanv;	b	tag
	f	Ljava/util/Set;	c	items
	f	Lci$d;	d	count
	f	Lci$d;	e	durability
	f	[Lbi;	f	enchantments
	f	[Lbi;	g	storedEnchantments
	f	Lchr;	h	potion
	f	Lck;	i	nbt
c	bz$a	net/minecraft/advancements/critereon/ItemPredicate$Builder
	m	()Lbz$a;	a	item
	m	(Lanv;)Lbz$a;	a	of
		p	1		tag
	m	(Lbi;)Lbz$a;	a	hasEnchantment
		p	1		enchantment
	m	(Lchr;)Lbz$a;	a	isPotion
		p	1		potion
	m	(Lci$d;)Lbz$a;	a	withCount
		p	1		count
	m	(Lre;)Lbz$a;	a	hasNbt
		p	1		nbt
	m	([Lcmh;)Lbz$a;	a	of
		p	1		items
	m	()Lbz;	b	build
	m	(Lbi;)Lbz$a;	b	hasStoredEnchantment
		p	1		enchantment
	m	(Lci$d;)Lbz$a;	b	hasDurability
		p	1		durability
	f	Ljava/util/List;	a	enchantments
	f	Ljava/util/List;	b	storedEnchantments
	f	Ljava/util/Set;	c	items
	f	Lanv;	d	tag
	f	Lci$d;	e	count
	f	Lci$d;	f	durability
	f	Lchr;	g	potion
	f	Lck;	h	nbt
c	ca	net/minecraft/advancements/critereon/KilledByCrossbowTrigger
	m	()Ladd;	a	getId
	m	(Laiq;Ljava/util/Collection;)V	a	trigger
		p	1		player
		p	2		piercingKilledEntities
	m	(Lcom/google/gson/JsonObject;Lbn$b;Lbd;)Lca$a;	a	createInstance
	m	(Ljava/util/List;Ljava/util/Set;Lca$a;)Z	a	lambda$trigger$0
		p	2		conditions
	m	(Lcom/google/gson/JsonObject;Lbn$b;Lbd;)Lar;	b	createInstance
		p	1		obj
		p	2		playerPredicate
		p	3		predicateDeserializer
	f	Ladd;	a	ID
c	ca$a	net/minecraft/advancements/critereon/KilledByCrossbowTrigger$TriggerInstance
	m	(Lbn$b;[Lbn$b;Lci$d;)V	<init>	<init>
		p	1		player
		p	2		victims
		p	3		uniqueEntityTypes
	m	(Lci$d;)Lca$a;	a	crossbowKilled
		p	0		uniqueEntityTypes
	m	(Lcs;)Lcom/google/gson/JsonObject;	a	serializeToJson
		p	1		predicateSerializer
	m	(Ljava/util/Collection;I)Z	a	matches
		p	1		victimContexts
		p	2		uniqueEntityTypeCount
	m	([Lbn$a;)Lca$a;	a	crossbowKilled
		p	0		victimPredicates
	f	[Lbn$b;	a	victims
	f	Lci$d;	b	uniqueEntityTypes
c	cb	net/minecraft/advancements/critereon/KilledTrigger
	m	(Ladd;)V	<init>	<init>
		p	1		id
	m	()Ladd;	a	getId
	m	(Laiq;Lbfh;Lbem;)V	a	trigger
		p	1		player
		p	2		entity
		p	3		killingDamage
	m	(Laiq;Ldyr;Lbem;Lcb$a;)Z	a	lambda$trigger$0
		p	3		conditions
	m	(Lcom/google/gson/JsonObject;Lbn$b;Lbd;)Lcb$a;	a	createInstance
	m	(Lcom/google/gson/JsonObject;Lbn$b;Lbd;)Lar;	b	createInstance
		p	1		obj
		p	2		playerPredicate
		p	3		predicateDeserializer
	f	Ladd;	a	id
c	cb$a	net/minecraft/advancements/critereon/KilledTrigger$TriggerInstance
	m	(Ladd;Lbn$b;Lbn$b;Lbc;)V	<init>	<init>
		p	1		id
		p	2		player
		p	3		entity
		p	4		killingBlow
	m	(Laiq;Ldyr;Lbem;)Z	a	matches
		p	1		player
		p	2		killedEntityContext
		p	3		killingBlow
	m	(Lbn$a;)Lcb$a;	a	playerKilledEntity
		p	0		killedEntityPredicateBuilder
	m	(Lbn$a;Lbc$a;)Lcb$a;	a	playerKilledEntity
		p	0		killedEntityPredicateBuilder
		p	1		killingBlowBuilder
	m	(Lbn$a;Lbc;)Lcb$a;	a	playerKilledEntity
		p	0		killedEntityPredicateBuilder
		p	1		damageSourcePredicate
	m	(Lbn;)Lcb$a;	a	playerKilledEntity
		p	0		killedEntityPredicate
	m	(Lbn;Lbc$a;)Lcb$a;	a	playerKilledEntity
		p	0		killedEntityPredicate
		p	1		damageSourcePredicateBuilder
	m	(Lbn;Lbc;)Lcb$a;	a	playerKilledEntity
		p	0		killedEntityPredicate
		p	1		damageSourcePredicate
	m	(Lcs;)Lcom/google/gson/JsonObject;	a	serializeToJson
		p	1		predicateSerializer
	m	(Lbn$a;)Lcb$a;	b	entityKilledPlayer
		p	0		killerEntityPredicateBuilder
	m	(Lbn$a;Lbc$a;)Lcb$a;	b	entityKilledPlayer
		p	0		killerEntityPredicateBuilder
		p	1		damageSourcePredicateBuilder
	m	(Lbn$a;Lbc;)Lcb$a;	b	entityKilledPlayer
		p	0		killerEntityPredicateBuilder
		p	1		damageSourcePredicate
	m	(Lbn;)Lcb$a;	b	entityKilledPlayer
		p	0		killerEntityPredicate
	m	(Lbn;Lbc$a;)Lcb$a;	b	entityKilledPlayer
		p	0		killerEntityPredicate
		p	1		damageSourcePredicateBuilder
	m	(Lbn;Lbc;)Lcb$a;	b	entityKilledPlayer
		p	0		killerEntityPredicate
		p	1		damageSourcePredicate
	m	()Lcb$a;	c	playerKilledEntity
	m	()Lcb$a;	d	playerKilledEntityNearSculkCatalyst
	m	()Lcb$a;	e	entityKilledPlayer
	f	Lbn$b;	a	entityPredicate
	f	Lbc;	b	killingBlow
c	cc	net/minecraft/advancements/critereon/LevitationTrigger
	m	()Ladd;	a	getId
	m	(Laiq;Lede;I)V	a	trigger
		p	1		player
		p	2		startPos
		p	3		duration
	m	(Laiq;Lede;ILcc$a;)Z	a	lambda$trigger$0
		p	3		conditions
	m	(Lcom/google/gson/JsonObject;Lbn$b;Lbd;)Lcc$a;	a	createInstance
	m	(Lcom/google/gson/JsonObject;Lbn$b;Lbd;)Lar;	b	createInstance
		p	1		obj
		p	2		playerPredicate
		p	3		predicateDeserializer
	f	Ladd;	a	ID
c	cc$a	net/minecraft/advancements/critereon/LevitationTrigger$TriggerInstance
	m	(Lbn$b;Lbe;Lci$d;)V	<init>	<init>
		p	1		player
		p	2		distance
		p	3		duration
	m	(Laiq;Lede;I)Z	a	matches
		p	1		player
		p	2		startPos
		p	3		duration
	m	(Lbe;)Lcc$a;	a	levitated
		p	0		distance
	m	(Lcs;)Lcom/google/gson/JsonObject;	a	serializeToJson
		p	1		predicateSerializer
	f	Lbe;	a	distance
	f	Lci$d;	b	duration
c	cd	net/minecraft/advancements/critereon/LightPredicate
	m	(Lci$d;)V	<init>	<init>
		p	1		range
	m	()Lcom/google/gson/JsonElement;	a	serializeToJson
	m	(Laip;Lgt;)Z	a	matches
		p	1		world
		p	2		pos
	m	(Lcom/google/gson/JsonElement;)Lcd;	a	fromJson
		p	0		json
	f	Lcd;	a	ANY
	f	Lci$d;	b	composite
c	cd$a	net/minecraft/advancements/critereon/LightPredicate$Builder
	m	()Lcd$a;	a	light
	m	(Lci$d;)Lcd$a;	a	setComposite
		p	1		light
	m	()Lcd;	b	build
	f	Lci$d;	a	composite
c	ce	net/minecraft/advancements/critereon/LighthingBoltPredicate
	m	(Lci$d;Lbn;)V	<init>	<init>
		p	1		blocksSetOnFire
		p	2		entityStruck
	m	()Lcom/google/gson/JsonObject;	a	serializeCustomData
	m	(Laip;Lede;Lbfh;)Z	a	lambda$matches$0
		p	3		struckEntity
	m	(Lbfh;Laip;Lede;)Z	a	matches
		p	1		entity
		p	2		world
		p	3		pos
	m	(Lci$d;)Lce;	a	blockSetOnFire
		p	0		blocksSetOnFire
	m	(Lcom/google/gson/JsonObject;)Lce;	a	fromJson
		p	0		json
	m	()Lbo$a;	c	type
	f	Ljava/lang/String;	b	BLOCKS_SET_ON_FIRE_KEY
	f	Ljava/lang/String;	c	ENTITY_STRUCK_KEY
	f	Lci$d;	d	blocksSetOnFire
	f	Lbn;	e	entityStruck
c	cf	net/minecraft/advancements/critereon/LightningStrikeTrigger
	m	()Ladd;	a	getId
	m	(Laiq;Lbfh;)Ldyr;	a	lambda$trigger$0
		p	1		bystander
	m	(Laiq;Lbfw;Ljava/util/List;)V	a	trigger
		p	1		player
		p	2		lightning
		p	3		bystanders
	m	(Lcom/google/gson/JsonObject;Lbn$b;Lbd;)Lcf$a;	a	createInstance
	m	(Ldyr;Ljava/util/List;Lcf$a;)Z	a	lambda$trigger$1
		p	2		conditions
	m	(Lcom/google/gson/JsonObject;Lbn$b;Lbd;)Lar;	b	createInstance
		p	1		obj
		p	2		playerPredicate
		p	3		predicateDeserializer
	f	Ladd;	a	ID
c	cf$a	net/minecraft/advancements/critereon/LightningStrikeTrigger$TriggerInstance
	m	(Lbn$b;Lbn$b;Lbn$b;)V	<init>	<init>
		p	1		player
		p	2		lightning
		p	3		bystander
	m	(Lbn;Lbn;)Lcf$a;	a	lighthingStrike
		p	0		lightning
		p	1		bystander
	m	(Lcs;)Lcom/google/gson/JsonObject;	a	serializeToJson
		p	1		predicateSerializer
	m	(Ldyr;Ljava/util/List;)Z	a	matches
		p	1		lightning
		p	2		bystanders
	f	Lbn$b;	a	lightning
	f	Lbn$b;	b	bystander
c	cg	net/minecraft/advancements/critereon/LocationPredicate
	m	(Lci$c;Lci$c;Lci$c;Ladc;Ladc;Ladc;Ljava/lang/Boolean;Lcd;Lat;Lbu;)V	<init>	<init>
		p	1		x
		p	2		y
		p	3		z
		p	4		biome
		p	5		feature
		p	6		dimension
		p	7		smokey
		p	8		light
		p	9		block
		p	10		fluid
	m	()Lcom/google/gson/JsonElement;	a	serializeToJson
	m	(Ladc;)Lcg;	a	inBiome
		p	0		biome
	m	(Ladd;)Ladc;	a	lambda$fromJson$2
	m	(Laip;DDD)Z	a	matches
		p	1		world
		p	2		x
		p	4		y
		p	6		z
	m	(Lci$c;)Lcg;	a	atYLocation
		p	0		y
	m	(Lcom/google/gson/JsonElement;)Lcg;	a	fromJson
		p	0		json
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonElement;)V	a	lambda$serializeToJson$0
		p	1		json
	m	(Ladc;)Lcg;	b	inDimension
		p	0		dimension
	m	(Ladd;)Ladc;	b	lambda$fromJson$1
	m	(Ladc;)Lcg;	c	inStructure
		p	0		feature
	f	Lcg;	a	ANY
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Lci$c;	c	x
	f	Lci$c;	d	y
	f	Lci$c;	e	z
	f	Ladc;	f	biome
	f	Ladc;	g	structure
	f	Ladc;	h	dimension
	f	Ljava/lang/Boolean;	i	smokey
	f	Lcd;	j	light
	f	Lat;	k	block
	f	Lbu;	l	fluid
c	cg$a	net/minecraft/advancements/critereon/LocationPredicate$Builder
	m	()Lcg$a;	a	location
	m	(Ladc;)Lcg$a;	a	setBiome
		p	1		biome
	m	(Lat;)Lcg$a;	a	setBlock
		p	1		block
	m	(Lbu;)Lcg$a;	a	setFluid
		p	1		fluid
	m	(Lcd;)Lcg$a;	a	setLight
		p	1		light
	m	(Lci$c;)Lcg$a;	a	setX
		p	1		x
	m	(Ljava/lang/Boolean;)Lcg$a;	a	setSmokey
		p	1		smokey
	m	()Lcg;	b	build
	m	(Ladc;)Lcg$a;	b	setStructure
		p	1		feature
	m	(Lci$c;)Lcg$a;	b	setY
		p	1		y
	m	(Ladc;)Lcg$a;	c	setDimension
		p	1		dimension
	m	(Lci$c;)Lcg$a;	c	setZ
		p	1		z
	f	Lci$c;	a	x
	f	Lci$c;	b	y
	f	Lci$c;	c	z
	f	Ladc;	d	biome
	f	Ladc;	e	structure
	f	Ladc;	f	dimension
	f	Ljava/lang/Boolean;	g	smokey
	f	Lcd;	h	light
	f	Lat;	i	block
	f	Lbu;	j	fluid
c	ch	net/minecraft/advancements/critereon/LootTableTrigger
	m	()Ladd;	a	getId
	m	(Ladd;Lch$a;)Z	a	lambda$trigger$0
		p	1		conditions
	m	(Laiq;Ladd;)V	a	trigger
		p	1		player
		p	2		id
	m	(Lcom/google/gson/JsonObject;Lbn$b;Lbd;)Lch$a;	a	createInstance
	m	(Lcom/google/gson/JsonObject;Lbn$b;Lbd;)Lar;	b	createInstance
		p	1		obj
		p	2		playerPredicate
		p	3		predicateDeserializer
	f	Ladd;	a	ID
c	ch$a	net/minecraft/advancements/critereon/LootTableTrigger$TriggerInstance
	m	(Lbn$b;Ladd;)V	<init>	<init>
		p	1		entity
		p	2		lootTable
	m	(Ladd;)Lch$a;	a	lootTableUsed
		p	0		lootTable
	m	(Lcs;)Lcom/google/gson/JsonObject;	a	serializeToJson
		p	1		predicateSerializer
	m	(Ladd;)Z	b	matches
		p	1		lootTable
	f	Ladd;	a	lootTable
c	ci	net/minecraft/advancements/critereon/MinMaxBounds
	m	(Ljava/lang/Number;Ljava/lang/Number;)V	<init>	<init>
		p	1		min
		p	2		max
	m	()Ljava/lang/Number;	a	getMin
	m	(Lcom/google/gson/JsonElement;Lci;Ljava/util/function/BiFunction;Lci$a;)Lci;	a	fromJson
		p	0		json
		p	1		fallback
		p	2		asNumber
		p	3		factory
	m	(Lcom/mojang/brigadier/StringReader;)Z	a	isAllowedInputChat
		p	0		reader
	m	(Lcom/mojang/brigadier/StringReader;Lci$b;Ljava/util/function/Function;Ljava/util/function/Supplier;Ljava/util/function/Function;)Lci;	a	fromReader
		p	0		commandReader
		p	1		commandFactory
		p	2		converter
		p	3		exceptionTypeSupplier
		p	4		mapper
	m	(Lcom/mojang/brigadier/StringReader;Ljava/util/function/Function;Ljava/util/function/Supplier;)Ljava/lang/Number;	a	readNumber
		p	0		reader
		p	1		converter
		p	2		exceptionTypeSupplier
	m	(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;	a	optionallyFormat
		p	0		object
		p	1		function
	m	()Ljava/lang/Number;	b	getMax
	m	()Z	c	isAny
	m	()Lcom/google/gson/JsonElement;	d	serializeToJson
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_EMPTY
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_SWAPPED
	f	Ljava/lang/Number;	c	min
	f	Ljava/lang/Number;	d	max
c	ci$a	net/minecraft/advancements/critereon/MinMaxBounds$BoundsFactory
	m	(Ljava/lang/Number;Ljava/lang/Number;)Lci;	create	create
		p	1		min
		p	2		max
c	ci$b	net/minecraft/advancements/critereon/MinMaxBounds$BoundsFromReaderFactory
	m	(Lcom/mojang/brigadier/StringReader;Ljava/lang/Number;Ljava/lang/Number;)Lci;	create	create
		p	1		reader
		p	2		min
		p	3		max
c	ci$c	net/minecraft/advancements/critereon/MinMaxBounds$Doubles
	m	(Ljava/lang/Double;Ljava/lang/Double;)V	<init>	<init>
		p	1		min
		p	2		max
	m	(D)Lci$c;	a	exactly
		p	0		value
	m	(DD)Lci$c;	a	between
		p	0		min
		p	2		max
	m	(Lcom/google/gson/JsonElement;)Lci$c;	a	fromJson
		p	0		element
	m	(Lcom/mojang/brigadier/StringReader;)Lci$c;	a	fromReader
		p	0		reader
	m	(Lcom/mojang/brigadier/StringReader;Ljava/lang/Double;Ljava/lang/Double;)Lci$c;	a	create
		p	0		reader
		p	1		min
		p	2		max
	m	(Lcom/mojang/brigadier/StringReader;Ljava/util/function/Function;)Lci$c;	a	fromReader
		p	0		reader
		p	1		mapper
	m	(Ljava/lang/Double;)Ljava/lang/Double;	a	squareOpt
		p	0		value
	m	(D)Lci$c;	b	atLeast
		p	0		value
	m	(Ljava/lang/Double;)Ljava/lang/Double;	b	lambda$fromReader$0
		p	0		value
	m	(D)Lci$c;	c	atMost
		p	0		value
	m	(D)Z	d	matches
		p	1		value
	m	(D)Z	e	matchesSqr
		p	1		value
	f	Lci$c;	e	ANY
	f	Ljava/lang/Double;	f	minSq
	f	Ljava/lang/Double;	g	maxSq
c	ci$d	net/minecraft/advancements/critereon/MinMaxBounds$Ints
	m	(Ljava/lang/Integer;Ljava/lang/Integer;)V	<init>	<init>
		p	1		min
		p	2		max
	m	(I)Lci$d;	a	exactly
		p	0		value
	m	(II)Lci$d;	a	between
		p	0		min
		p	1		max
	m	(J)Z	a	matchesSqr
		p	1		value
	m	(Lcom/google/gson/JsonElement;)Lci$d;	a	fromJson
		p	0		element
	m	(Lcom/mojang/brigadier/StringReader;)Lci$d;	a	fromReader
		p	0		reader
	m	(Lcom/mojang/brigadier/StringReader;Ljava/lang/Integer;Ljava/lang/Integer;)Lci$d;	a	create
		p	0		reader
		p	1		min
		p	2		max
	m	(Lcom/mojang/brigadier/StringReader;Ljava/util/function/Function;)Lci$d;	a	fromReader
		p	0		reader
		p	1		converter
	m	(Ljava/lang/Integer;)Ljava/lang/Long;	a	squareOpt
		p	0		value
	m	(I)Lci$d;	b	atLeast
		p	0		value
	m	(Ljava/lang/Integer;)Ljava/lang/Integer;	b	lambda$fromReader$0
		p	0		value
	m	(I)Lci$d;	c	atMost
		p	0		value
	m	(I)Z	d	matches
		p	1		value
	f	Lci$d;	e	ANY
	f	Ljava/lang/Long;	f	minSq
	f	Ljava/lang/Long;	g	maxSq
c	cj	net/minecraft/advancements/critereon/MobEffectsPredicate
	m	(Ljava/util/Map;)V	<init>	<init>
		p	1		effects
	m	()Lcj;	a	effects
	m	(Ladd;)Lcom/google/gson/JsonSyntaxException;	a	lambda$fromJson$0
	m	(Lbew;)Lcj;	a	and
		p	1		statusEffect
	m	(Lbew;Lcj$a;)Lcj;	a	and
		p	1		statusEffect
		p	2		data
	m	(Lbfh;)Z	a	matches
		p	1		entity
	m	(Lbfx;)Z	a	matches
		p	1		livingEntity
	m	(Lcom/google/gson/JsonElement;)Lcj;	a	fromJson
		p	0		json
	m	(Ljava/util/Map;)Z	a	matches
		p	1		effects
	m	()Lcom/google/gson/JsonElement;	b	serializeToJson
	f	Lcj;	a	ANY
	f	Ljava/util/Map;	b	effects
c	cj$a	net/minecraft/advancements/critereon/MobEffectsPredicate$MobEffectInstancePredicate
	m	(Lci$d;Lci$d;Ljava/lang/Boolean;Ljava/lang/Boolean;)V	<init>	<init>
		p	1		amplifier
		p	2		duration
		p	3		ambient
		p	4		visible
	m	()Lcom/google/gson/JsonElement;	a	serializeToJson
	m	(Lbey;)Z	a	matches
		p	1		statusEffectInstance
	m	(Lcom/google/gson/JsonObject;)Lcj$a;	a	fromJson
		p	0		json
	f	Lci$d;	a	amplifier
	f	Lci$d;	b	duration
	f	Ljava/lang/Boolean;	c	ambient
	f	Ljava/lang/Boolean;	d	visible
c	ck	net/minecraft/advancements/critereon/NbtPredicate
	m	(Lre;)V	<init>	<init>
		p	1		nbt
	m	()Lcom/google/gson/JsonElement;	a	serializeToJson
	m	(Lbfh;)Z	a	matches
		p	1		entity
	m	(Lcfv;)Z	a	matches
		p	1		stack
	m	(Lcom/google/gson/JsonElement;)Lck;	a	fromJson
		p	0		json
	m	(Lrx;)Z	a	matches
		p	1		element
	m	(Lbfh;)Lre;	b	getEntityTagToCompare
		p	0		entity
	f	Lck;	a	ANY
	f	Lre;	b	tag
c	cl	net/minecraft/advancements/critereon/PickedUpItemTrigger
	m	(Ladd;)V	<init>	<init>
		p	1		id
	m	()Ladd;	a	getId
	m	(Laiq;Lcfv;Lbfh;)V	a	trigger
		p	1		player
		p	2		stack
		p	3		entity
	m	(Laiq;Lcfv;Ldyr;Lcl$a;)Z	a	lambda$trigger$0
		p	3		conditions
	m	(Lcom/google/gson/JsonObject;Lbn$b;Lbd;)Lcl$a;	a	createInstance
	m	(Lcom/google/gson/JsonObject;Lbn$b;Lbd;)Lar;	b	createInstance
		p	1		obj
		p	2		playerPredicate
		p	3		predicateDeserializer
	f	Ladd;	a	id
c	cl$a	net/minecraft/advancements/critereon/PickedUpItemTrigger$TriggerInstance
	m	(Ladd;Lbn$b;Lbz;Lbn$b;)V	<init>	<init>
		p	1		id
		p	2		player
		p	3		item
		p	4		entity
	m	(Laiq;Lcfv;Ldyr;)Z	a	matches
		p	1		player
		p	2		stack
		p	3		entityContext
	m	(Lbn$b;Lbz;Lbn$b;)Lcl$a;	a	thrownItemPickedUpByEntity
		p	0		player
		p	1		item
		p	2		entity
	m	(Lcs;)Lcom/google/gson/JsonObject;	a	serializeToJson
		p	1		predicateSerializer
	m	(Lbn$b;Lbz;Lbn$b;)Lcl$a;	b	thrownItemPickedUpByPlayer
		p	0		player
		p	1		item
		p	2		entity
	f	Lbz;	a	item
	f	Lbn$b;	b	entity
c	cm	net/minecraft/advancements/critereon/PlacedBlockTrigger
	m	()Ladd;	a	getId
	m	(Ladd;)Lcom/google/gson/JsonSyntaxException;	a	lambda$deserializeBlock$1
	m	(Laiq;Lgt;Lcfv;)V	a	trigger
		p	1		player
		p	2		blockPos
		p	3		stack
	m	(Lcom/google/gson/JsonObject;)Lcpi;	a	deserializeBlock
		p	0		obj
	m	(Lcom/google/gson/JsonObject;Lbn$b;Lbd;)Lcm$a;	a	createInstance
	m	(Lcpi;Ljava/lang/String;)V	a	lambda$createInstance$0
		p	1		name
	m	(Ldbq;Lgt;Laiq;Lcfv;Lcm$a;)Z	a	lambda$trigger$2
		p	4		conditions
	m	(Lcom/google/gson/JsonObject;Lbn$b;Lbd;)Lar;	b	createInstance
		p	1		obj
		p	2		playerPredicate
		p	3		predicateDeserializer
	f	Ladd;	a	ID
c	cm$a	net/minecraft/advancements/critereon/PlacedBlockTrigger$TriggerInstance
	m	(Lbn$b;Lcpi;Lcy;Lcg;Lbz;)V	<init>	<init>
		p	1		player
		p	2		block
		p	3		state
		p	4		location
		p	5		item
	m	(Lcpi;)Lcm$a;	a	placedBlock
		p	0		block
	m	(Lcs;)Lcom/google/gson/JsonObject;	a	serializeToJson
		p	1		predicateSerializer
	m	(Ldbq;Lgt;Laip;Lcfv;)Z	a	matches
		p	1		state
		p	2		pos
		p	3		world
		p	4		stack
	f	Lcpi;	a	block
	f	Lcy;	b	state
	f	Lcg;	c	location
	f	Lbz;	d	item
c	cn	net/minecraft/advancements/critereon/PlayerHurtEntityTrigger
	m	()Ladd;	a	getId
	m	(Laiq;Lbfh;Lbem;FFZ)V	a	trigger
		p	1		player
		p	2		entity
		p	3		damage
		p	4		dealt
		p	5		taken
		p	6		blocked
	m	(Laiq;Ldyr;Lbem;FFZLcn$a;)Z	a	lambda$trigger$0
		p	6		conditions
	m	(Lcom/google/gson/JsonObject;Lbn$b;Lbd;)Lcn$a;	a	createInstance
	m	(Lcom/google/gson/JsonObject;Lbn$b;Lbd;)Lar;	b	createInstance
		p	1		obj
		p	2		playerPredicate
		p	3		predicateDeserializer
	f	Ladd;	a	ID
c	cn$a	net/minecraft/advancements/critereon/PlayerHurtEntityTrigger$TriggerInstance
	m	(Lbn$b;Lbb;Lbn$b;)V	<init>	<init>
		p	1		player
		p	2		damage
		p	3		entity
	m	(Laiq;Ldyr;Lbem;FFZ)Z	a	matches
		p	1		player
		p	2		entityContext
		p	3		source
		p	4		dealt
		p	5		taken
		p	6		blocked
	m	(Lbb$a;)Lcn$a;	a	playerHurtEntity
		p	0		damagePredicateBuilder
	m	(Lbb$a;Lbn;)Lcn$a;	a	playerHurtEntity
		p	0		damagePredicateBuilder
		p	1		hurtEntityPredicate
	m	(Lbb;)Lcn$a;	a	playerHurtEntity
		p	0		damagePredicate
	m	(Lbb;Lbn;)Lcn$a;	a	playerHurtEntity
		p	0		damagePredicate
		p	1		hurtEntityPredicate
	m	(Lbn;)Lcn$a;	a	playerHurtEntity
		p	0		hurtEntityPredicate
	m	(Lcs;)Lcom/google/gson/JsonObject;	a	serializeToJson
		p	1		predicateSerializer
	m	()Lcn$a;	c	playerHurtEntity
	f	Lbb;	a	damage
	f	Lbn$b;	b	entity
c	co	net/minecraft/advancements/critereon/PlayerInteractTrigger
	m	()Ladd;	a	getId
	m	(Laiq;Lcfv;Lbfh;)V	a	trigger
		p	1		player
		p	2		stack
		p	3		entity
	m	(Lcfv;Ldyr;Lco$a;)Z	a	lambda$trigger$0
		p	2		conditions
	m	(Lcom/google/gson/JsonObject;Lbn$b;Lbd;)Lco$a;	a	createInstance
	m	(Lcom/google/gson/JsonObject;Lbn$b;Lbd;)Lar;	b	createInstance
		p	1		obj
		p	2		playerPredicate
		p	3		predicateDeserializer
	f	Ladd;	a	ID
c	co$a	net/minecraft/advancements/critereon/PlayerInteractTrigger$TriggerInstance
	m	(Lbn$b;Lbz;Lbn$b;)V	<init>	<init>
		p	1		player
		p	2		item
		p	3		entity
	m	(Lbn$b;Lbz$a;Lbn$b;)Lco$a;	a	itemUsedOnEntity
		p	0		player
		p	1		itemBuilder
		p	2		entity
	m	(Lbz$a;Lbn$b;)Lco$a;	a	itemUsedOnEntity
		p	0		itemBuilder
		p	1		entity
	m	(Lcfv;Ldyr;)Z	a	matches
		p	1		stack
		p	2		context
	m	(Lcs;)Lcom/google/gson/JsonObject;	a	serializeToJson
		p	1		predicateSerializer
	f	Lbz;	a	item
	f	Lbn$b;	b	entity
c	cp	net/minecraft/advancements/critereon/PlayerPredicate
	m	(Lci$d;Lcmf;Ljava/util/Map;Lit/unimi/dsi/fastutil/objects/Object2BooleanMap;Ljava/util/Map;Lbn;)V	<init>	<init>
		p	1		experienceLevel
		p	2		gameMode
		p	3		stats
		p	4		recipes
		p	5		advancements
		p	6		lookingAt
	m	()Lcom/google/gson/JsonObject;	a	serializeCustomData
	m	(Lamy;)Ladd;	a	getStatValueId
		p	0		stat
	m	(Lana;Ladd;)Lamy;	a	getStat
		p	0		type
		p	1		id
	m	(Lbfh;)Z	a	lambda$matches$1
	m	(Lbfh;Laip;Lede;)Z	a	matches
		p	1		entity
		p	2		world
		p	3		pos
	m	(Lcom/google/gson/JsonArray;Lamy;Lci$d;)V	a	lambda$serializeCustomData$2
		p	1		stat
	m	(Lcom/google/gson/JsonObject;)Lcp;	a	fromJson
		p	0		json
	m	(Lcom/google/gson/JsonObject;Ladd;Lcp$c;)V	a	lambda$serializeCustomData$4
		p	1		id
	m	(Lcom/google/gson/JsonObject;Ladd;Ljava/lang/Boolean;)V	a	lambda$serializeCustomData$3
		p	1		id
	m	(Lit/unimi/dsi/fastutil/objects/Object2BooleanMap;Ljava/util/Map$Entry;)V	a	lambda$advancementPredicateFromJson$0
	m	(Lcom/google/gson/JsonElement;)Lcp$c;	b	advancementPredicateFromJson
		p	0		json
	m	()Lbo$a;	c	type
	f	I	b	LOOKING_AT_RANGE
	f	Lci$d;	c	level
	f	Lcmf;	d	gameType
	f	Ljava/util/Map;	e	stats
	f	Lit/unimi/dsi/fastutil/objects/Object2BooleanMap;	f	recipes
	f	Ljava/util/Map;	g	advancements
	f	Lbn;	h	lookingAt
c	cp$a	net/minecraft/advancements/critereon/PlayerPredicate$AdvancementCriterionsPredicate
	m	(Lit/unimi/dsi/fastutil/objects/Object2BooleanMap;)V	<init>	<init>
		p	1		criteria
	m	()Lcom/google/gson/JsonElement;	a	toJson
	m	(Lag;)Z	a	test
	f	Lit/unimi/dsi/fastutil/objects/Object2BooleanMap;	a	criterions
c	cp$b	net/minecraft/advancements/critereon/PlayerPredicate$AdvancementDonePredicate
	m	(Z)V	<init>	<init>
		p	1		done
	m	()Lcom/google/gson/JsonElement;	a	toJson
	m	(Lag;)Z	a	test
	f	Z	a	state
c	cp$c	net/minecraft/advancements/critereon/PlayerPredicate$AdvancementPredicate
	m	()Lcom/google/gson/JsonElement;	a	toJson
c	cp$d	net/minecraft/advancements/critereon/PlayerPredicate$Builder
	m	()Lcp$d;	a	player
	m	(Ladd;Ljava/util/Map;)Lcp$d;	a	checkAdvancementCriterions
		p	1		id
		p	2		criteria
	m	(Ladd;Z)Lcp$d;	a	addRecipe
		p	1		id
		p	2		unlocked
	m	(Lamy;Lci$d;)Lcp$d;	a	addStat
		p	1		stat
		p	2		value
	m	(Lbn;)Lcp$d;	a	setLookingAt
		p	1		lookingAt
	m	(Lci$d;)Lcp$d;	a	setLevel
		p	1		experienceLevel
	m	(Lcmf;)Lcp$d;	a	setGameType
		p	1		gameMode
	m	()Lcp;	b	build
	m	(Ladd;Z)Lcp$d;	b	checkAdvancementDone
		p	1		id
		p	2		done
	f	Lci$d;	a	level
	f	Lcmf;	b	gameType
	f	Ljava/util/Map;	c	stats
	f	Lit/unimi/dsi/fastutil/objects/Object2BooleanMap;	d	recipes
	f	Ljava/util/Map;	e	advancements
	f	Lbn;	f	lookingAt
c	cq	net/minecraft/advancements/critereon/PlayerTrigger
	m	(Ladd;)V	<init>	<init>
		p	1		id
	m	()Ladd;	a	getId
	m	(Laiq;)V	a	trigger
		p	1		player
	m	(Lcom/google/gson/JsonObject;Lbn$b;Lbd;)Lcq$a;	a	createInstance
	m	(Lcq$a;)Z	a	lambda$trigger$0
		p	0		conditions
	m	(Lcom/google/gson/JsonObject;Lbn$b;Lbd;)Lar;	b	createInstance
		p	1		obj
		p	2		playerPredicate
		p	3		predicateDeserializer
	f	Ladd;	a	id
c	cq$a	net/minecraft/advancements/critereon/PlayerTrigger$TriggerInstance
	m	(Ladd;Lbn$b;)V	<init>	<init>
		p	1		id
		p	2		entity
	m	(Lbn;)Lcq$a;	a	located
		p	0		entity
	m	(Lcg;)Lcq$a;	a	located
		p	0		location
	m	(Lcpi;Lcfq;)Lcq$a;	a	walkOnBlockWithEquipment
		p	0		block
		p	1		item
	m	()Lcq$a;	c	sleptInBed
	m	()Lcq$a;	d	raidWon
	m	()Lcq$a;	e	avoidVibration
	m	()Lcq$a;	f	tick
c	cr	net/minecraft/advancements/critereon/RecipeUnlockedTrigger
	m	()Ladd;	a	getId
	m	(Ladd;)Lcr$a;	a	unlocked
		p	0		id
	m	(Laiq;Lciy;)V	a	trigger
		p	1		player
		p	2		recipe
	m	(Lciy;Lcr$a;)Z	a	lambda$trigger$0
		p	1		conditions
	m	(Lcom/google/gson/JsonObject;Lbn$b;Lbd;)Lcr$a;	a	createInstance
	m	(Lcom/google/gson/JsonObject;Lbn$b;Lbd;)Lar;	b	createInstance
		p	1		obj
		p	2		playerPredicate
		p	3		predicateDeserializer
	f	Ladd;	a	ID
c	cr$a	net/minecraft/advancements/critereon/RecipeUnlockedTrigger$TriggerInstance
	m	(Lbn$b;Ladd;)V	<init>	<init>
		p	1		player
		p	2		recipe
	m	(Lciy;)Z	a	matches
		p	1		recipe
	m	(Lcs;)Lcom/google/gson/JsonObject;	a	serializeToJson
		p	1		predicateSerializer
	f	Ladd;	a	recipe
c	cs	net/minecraft/advancements/critereon/SerializationContext
	m	([Lebl;)Lcom/google/gson/JsonElement;	a	serializeConditions
		p	1		conditions
	f	Lcs;	a	INSTANCE
	f	Lcom/google/gson/Gson;	b	predicateGson
c	ct	net/minecraft/advancements/critereon/ShotCrossbowTrigger
	m	()Ladd;	a	getId
	m	(Laiq;Lcfv;)V	a	trigger
		p	1		player
		p	2		stack
	m	(Lcfv;Lct$a;)Z	a	lambda$trigger$0
		p	1		conditions
	m	(Lcom/google/gson/JsonObject;Lbn$b;Lbd;)Lct$a;	a	createInstance
	m	(Lcom/google/gson/JsonObject;Lbn$b;Lbd;)Lar;	b	createInstance
		p	1		obj
		p	2		playerPredicate
		p	3		predicateDeserializer
	f	Ladd;	a	ID
c	ct$a	net/minecraft/advancements/critereon/ShotCrossbowTrigger$TriggerInstance
	m	(Lbn$b;Lbz;)V	<init>	<init>
		p	1		player
		p	2		item
	m	(Lbz;)Lct$a;	a	shotCrossbow
		p	0		itemPredicate
	m	(Lcfv;)Z	a	matches
		p	1		stack
	m	(Lcmh;)Lct$a;	a	shotCrossbow
		p	0		item
	m	(Lcs;)Lcom/google/gson/JsonObject;	a	serializeToJson
		p	1		predicateSerializer
	f	Lbz;	a	item
c	cu	net/minecraft/advancements/critereon/SimpleCriterionTrigger
	m	(Ladl;)V	a	removePlayerListeners
		p	1		tracker
	m	(Ladl;Lal$a;)V	a	addPlayerListener
		p	1		manager
		p	2		conditions
	m	(Laiq;Ljava/util/function/Predicate;)V	a	trigger
		p	1		player
		p	2		predicate
	m	(Lcom/google/gson/JsonObject;Lbd;)Lam;	a	createInstance
		p	1		obj
		p	2		predicateDeserializer
	m	(Ladl;)Ljava/util/Set;	b	lambda$addPlayerListener$0
		p	0		manager
	m	(Ladl;Lal$a;)V	b	removePlayerListener
		p	1		manager
		p	2		conditions
	m	(Lcom/google/gson/JsonObject;Lbd;)Lar;	b	createInstance
	m	(Lcom/google/gson/JsonObject;Lbn$b;Lbd;)Lar;	b	createInstance
		p	1		obj
		p	2		playerPredicate
		p	3		predicateDeserializer
	f	Ljava/util/Map;	a	players
c	cv	net/minecraft/advancements/critereon/SlideDownBlockTrigger
	m	()Ladd;	a	getId
	m	(Ladd;)Lcom/google/gson/JsonSyntaxException;	a	lambda$deserializeBlock$1
	m	(Laiq;Ldbq;)V	a	trigger
		p	1		player
		p	2		state
	m	(Lcom/google/gson/JsonObject;)Lcpi;	a	deserializeBlock
		p	0		root
	m	(Lcom/google/gson/JsonObject;Lbn$b;Lbd;)Lcv$a;	a	createInstance
	m	(Lcpi;Ljava/lang/String;)V	a	lambda$createInstance$0
		p	1		key
	m	(Ldbq;Lcv$a;)Z	a	lambda$trigger$2
		p	1		conditions
	m	(Lcom/google/gson/JsonObject;Lbn$b;Lbd;)Lar;	b	createInstance
		p	1		obj
		p	2		playerPredicate
		p	3		predicateDeserializer
	f	Ladd;	a	ID
c	cv$a	net/minecraft/advancements/critereon/SlideDownBlockTrigger$TriggerInstance
	m	(Lbn$b;Lcpi;Lcy;)V	<init>	<init>
		p	1		player
		p	2		block
		p	3		state
	m	(Lcpi;)Lcv$a;	a	slidesDownBlock
		p	0		block
	m	(Lcs;)Lcom/google/gson/JsonObject;	a	serializeToJson
		p	1		predicateSerializer
	m	(Ldbq;)Z	a	matches
		p	1		state
	f	Lcpi;	a	block
	f	Lcy;	b	state
c	cw	net/minecraft/advancements/critereon/SlimePredicate
	m	(Lci$d;)V	<init>	<init>
		p	1		size
	m	()Lcom/google/gson/JsonObject;	a	serializeCustomData
	m	(Lbfh;Laip;Lede;)Z	a	matches
		p	1		entity
		p	2		world
		p	3		pos
	m	(Lci$d;)Lcw;	a	sized
		p	0		size
	m	(Lcom/google/gson/JsonObject;)Lcw;	a	fromJson
		p	0		json
	m	()Lbo$a;	c	type
	f	Lci$d;	b	size
c	cx	net/minecraft/advancements/critereon/StartRidingTrigger
	m	()Ladd;	a	getId
	m	(Laiq;)V	a	trigger
		p	1		player
	m	(Lcom/google/gson/JsonObject;Lbn$b;Lbd;)Lcx$a;	a	createInstance
	m	(Lcx$a;)Z	a	lambda$trigger$0
		p	0		conditions
	m	(Lcom/google/gson/JsonObject;Lbn$b;Lbd;)Lar;	b	createInstance
		p	1		obj
		p	2		playerPredicate
		p	3		predicateDeserializer
	f	Ladd;	a	ID
c	cx$a	net/minecraft/advancements/critereon/StartRidingTrigger$TriggerInstance
	m	(Lbn$b;)V	<init>	<init>
		p	1		player
	m	(Lbn$a;)Lcx$a;	a	playerStartsRiding
		p	0		player
c	cy	net/minecraft/advancements/critereon/StatePropertiesPredicate
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		conditions
	m	()Lcom/google/gson/JsonElement;	a	serializeToJson
	m	(Lcom/google/gson/JsonElement;)Lcy;	a	fromJson
		p	0		json
	m	(Lcom/google/gson/JsonObject;Lcy$c;)V	a	lambda$serializeToJson$1
		p	1		condition
	m	(Ldbq;)Z	a	matches
		p	1		state
	m	(Ldbr;Ldbs;)Z	a	matches
		p	1		stateManager
		p	2		container
	m	(Ldbr;Ljava/util/function/Consumer;)V	a	checkState
		p	1		factory
		p	2		reporter
	m	(Ldbr;Ljava/util/function/Consumer;Lcy$c;)V	a	lambda$checkState$0
		p	2		condition
	m	(Ldwj;)Z	a	matches
		p	1		state
	m	(Ljava/lang/String;Lcom/google/gson/JsonElement;)Lcy$c;	a	fromJson
		p	0		key
		p	1		json
	m	(Lcom/google/gson/JsonElement;)Ljava/lang/String;	b	getStringOrNull
		p	0		json
	f	Lcy;	a	ANY
	f	Ljava/util/List;	b	properties
c	cy$a	net/minecraft/advancements/critereon/StatePropertiesPredicate$Builder
	m	()Lcy$a;	a	properties
	m	(Ldcu;I)Lcy$a;	a	hasProperty
		p	1		property
		p	2		value
	m	(Ldcu;Ljava/lang/Comparable;)Lcy$a;	a	hasProperty
		p	1		property
		p	2		value
	m	(Ldcu;Ljava/lang/String;)Lcy$a;	a	hasProperty
		p	1		property
		p	2		valueName
	m	(Ldcu;Z)Lcy$a;	a	hasProperty
		p	1		property
		p	2		value
	m	()Lcy;	b	build
	f	Ljava/util/List;	a	matchers
c	cy$b	net/minecraft/advancements/critereon/StatePropertiesPredicate$ExactPropertyMatcher
	m	(Ljava/lang/String;Ljava/lang/String;)V	<init>	<init>
		p	1		key
		p	2		value
	m	()Lcom/google/gson/JsonElement;	a	toJson
	m	(Ldbs;Ldcu;)Z	a	match
		p	1		state
		p	2		property
	f	Ljava/lang/String;	a	value
c	cy$c	net/minecraft/advancements/critereon/StatePropertiesPredicate$PropertyMatcher
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		key
	m	()Lcom/google/gson/JsonElement;	a	toJson
	m	(Ldbr;Ldbs;)Z	a	match
		p	1		stateManager
		p	2		state
	m	(Ldbr;Ljava/util/function/Consumer;)V	a	checkState
		p	1		factory
		p	2		reporter
	m	(Ldbs;Ldcu;)Z	a	match
		p	1		state
		p	2		property
	m	()Ljava/lang/String;	b	getName
	f	Ljava/lang/String;	a	name
c	cy$d	net/minecraft/advancements/critereon/StatePropertiesPredicate$RangedPropertyMatcher
	m	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V	<init>	<init>
		p	1		key
		p	2		min
		p	3		max
	m	()Lcom/google/gson/JsonElement;	a	toJson
	m	(Ldbs;Ldcu;)Z	a	match
		p	1		state
		p	2		property
	f	Ljava/lang/String;	a	minValue
	f	Ljava/lang/String;	b	maxValue
c	cz	net/minecraft/advancements/critereon/SummonedEntityTrigger
	m	()Ladd;	a	getId
	m	(Laiq;Lbfh;)V	a	trigger
		p	1		player
		p	2		entity
	m	(Lcom/google/gson/JsonObject;Lbn$b;Lbd;)Lcz$a;	a	createInstance
	m	(Ldyr;Lcz$a;)Z	a	lambda$trigger$0
		p	1		conditions
	m	(Lcom/google/gson/JsonObject;Lbn$b;Lbd;)Lar;	b	createInstance
		p	1		obj
		p	2		playerPredicate
		p	3		predicateDeserializer
	f	Ladd;	a	ID
c	cz$a	net/minecraft/advancements/critereon/SummonedEntityTrigger$TriggerInstance
	m	(Lbn$b;Lbn$b;)V	<init>	<init>
		p	1		player
		p	2		entity
	m	(Lbn$a;)Lcz$a;	a	summonedEntity
		p	0		summonedEntityPredicateBuilder
	m	(Lcs;)Lcom/google/gson/JsonObject;	a	serializeToJson
		p	1		predicateSerializer
	m	(Ldyr;)Z	a	matches
		p	1		summonedEntityContext
	f	Lbn$b;	a	entity
c	da	net/minecraft/advancements/critereon/TagPredicate
	m	(Lanv;Z)V	<init>	<init>
		p	1		tag
		p	2		expected
	m	()Lcom/google/gson/JsonElement;	a	serializeToJson
	m	(Lanv;)Lda;	a	is
		p	0		tag
	m	(Lcom/google/gson/JsonElement;Ladc;)Lda;	a	fromJson
		p	0		json
		p	1		registry
	m	(Lhd;)Z	a	matches
		p	1		registryEntry
	m	(Lanv;)Lda;	b	isNot
		p	0		tag
	f	Lanv;	a	tag
	f	Z	b	expected
c	db	net/minecraft/advancements/critereon/TameAnimalTrigger
	m	()Ladd;	a	getId
	m	(Laiq;Lbrj;)V	a	trigger
		p	1		player
		p	2		entity
	m	(Lcom/google/gson/JsonObject;Lbn$b;Lbd;)Ldb$a;	a	createInstance
	m	(Ldyr;Ldb$a;)Z	a	lambda$trigger$0
		p	1		conditions
	m	(Lcom/google/gson/JsonObject;Lbn$b;Lbd;)Lar;	b	createInstance
		p	1		obj
		p	2		playerPredicate
		p	3		predicateDeserializer
	f	Ladd;	a	ID
c	db$a	net/minecraft/advancements/critereon/TameAnimalTrigger$TriggerInstance
	m	(Lbn$b;Lbn$b;)V	<init>	<init>
		p	1		player
		p	2		entity
	m	(Lbn;)Ldb$a;	a	tamedAnimal
		p	0		entity
	m	(Lcs;)Lcom/google/gson/JsonObject;	a	serializeToJson
		p	1		predicateSerializer
	m	(Ldyr;)Z	a	matches
		p	1		tamedEntityContext
	m	()Ldb$a;	c	tamedAnimal
	f	Lbn$b;	a	entity
c	dc	net/minecraft/advancements/critereon/TargetBlockTrigger
	m	()Ladd;	a	getId
	m	(Laiq;Lbfh;Lede;I)V	a	trigger
		p	1		player
		p	2		projectile
		p	3		hitPos
		p	4		signalStrength
	m	(Lcom/google/gson/JsonObject;Lbn$b;Lbd;)Ldc$a;	a	createInstance
	m	(Ldyr;Lede;ILdc$a;)Z	a	lambda$trigger$0
		p	3		conditions
	m	(Lcom/google/gson/JsonObject;Lbn$b;Lbd;)Lar;	b	createInstance
		p	1		obj
		p	2		playerPredicate
		p	3		predicateDeserializer
	f	Ladd;	a	ID
c	dc$a	net/minecraft/advancements/critereon/TargetBlockTrigger$TriggerInstance
	m	(Lbn$b;Lci$d;Lbn$b;)V	<init>	<init>
		p	1		player
		p	2		signalStrength
		p	3		projectile
	m	(Lci$d;Lbn$b;)Ldc$a;	a	targetHit
		p	0		signalStrength
		p	1		projectile
	m	(Lcs;)Lcom/google/gson/JsonObject;	a	serializeToJson
		p	1		predicateSerializer
	m	(Ldyr;Lede;I)Z	a	matches
		p	1		projectileContext
		p	2		hitPos
		p	3		signalStrength
	f	Lci$d;	a	signalStrength
	f	Lbn$b;	b	projectile
c	dd	net/minecraft/advancements/critereon/TradeTrigger
	m	()Ladd;	a	getId
	m	(Laiq;Lbxu;Lcfv;)V	a	trigger
		p	1		player
		p	2		merchant
		p	3		stack
	m	(Lcom/google/gson/JsonObject;Lbn$b;Lbd;)Ldd$a;	a	createInstance
	m	(Ldyr;Lcfv;Ldd$a;)Z	a	lambda$trigger$0
		p	2		conditions
	m	(Lcom/google/gson/JsonObject;Lbn$b;Lbd;)Lar;	b	createInstance
		p	1		obj
		p	2		playerPredicate
		p	3		predicateDeserializer
	f	Ladd;	a	ID
c	dd$a	net/minecraft/advancements/critereon/TradeTrigger$TriggerInstance
	m	(Lbn$b;Lbn$b;Lbz;)V	<init>	<init>
		p	1		player
		p	2		villager
		p	3		item
	m	(Lbn$a;)Ldd$a;	a	tradedWithVillager
		p	0		playerPredicate
	m	(Lcs;)Lcom/google/gson/JsonObject;	a	serializeToJson
		p	1		predicateSerializer
	m	(Ldyr;Lcfv;)Z	a	matches
		p	1		merchantContext
		p	2		stack
	m	()Ldd$a;	c	tradedWithVillager
	f	Lbn$b;	a	villager
	f	Lbz;	b	item
c	de	net/minecraft/advancements/critereon/UsedEnderEyeTrigger
	m	()Ladd;	a	getId
	m	(DLde$a;)Z	a	lambda$trigger$0
		p	2		conditions
	m	(Laiq;Lgt;)V	a	trigger
		p	1		player
		p	2		strongholdPos
	m	(Lcom/google/gson/JsonObject;Lbn$b;Lbd;)Lde$a;	a	createInstance
	m	(Lcom/google/gson/JsonObject;Lbn$b;Lbd;)Lar;	b	createInstance
		p	1		obj
		p	2		playerPredicate
		p	3		predicateDeserializer
	f	Ladd;	a	ID
c	de$a	net/minecraft/advancements/critereon/UsedEnderEyeTrigger$TriggerInstance
	m	(Lbn$b;Lci$c;)V	<init>	<init>
		p	1		player
		p	2		distance
	m	(D)Z	a	matches
		p	1		distance
	f	Lci$c;	a	level
c	df	net/minecraft/advancements/critereon/UsedTotemTrigger
	m	()Ladd;	a	getId
	m	(Laiq;Lcfv;)V	a	trigger
		p	1		player
		p	2		stack
	m	(Lcfv;Ldf$a;)Z	a	lambda$trigger$0
		p	1		conditions
	m	(Lcom/google/gson/JsonObject;Lbn$b;Lbd;)Ldf$a;	a	createInstance
	m	(Lcom/google/gson/JsonObject;Lbn$b;Lbd;)Lar;	b	createInstance
		p	1		obj
		p	2		playerPredicate
		p	3		predicateDeserializer
	f	Ladd;	a	ID
c	df$a	net/minecraft/advancements/critereon/UsedTotemTrigger$TriggerInstance
	m	(Lbn$b;Lbz;)V	<init>	<init>
		p	1		player
		p	2		item
	m	(Lbz;)Ldf$a;	a	usedTotem
		p	0		itemPredicate
	m	(Lcfv;)Z	a	matches
		p	1		stack
	m	(Lcmh;)Ldf$a;	a	usedTotem
		p	0		item
	m	(Lcs;)Lcom/google/gson/JsonObject;	a	serializeToJson
		p	1		predicateSerializer
	f	Lbz;	a	item
c	dg	net/minecraft/advancements/critereon/UsingItemTrigger
	m	()Ladd;	a	getId
	m	(Laiq;Lcfv;)V	a	trigger
		p	1		player
		p	2		stack
	m	(Lcfv;Ldg$a;)Z	a	lambda$trigger$0
		p	1		conditions
	m	(Lcom/google/gson/JsonObject;Lbn$b;Lbd;)Ldg$a;	a	createInstance
	m	(Lcom/google/gson/JsonObject;Lbn$b;Lbd;)Lar;	b	createInstance
		p	1		obj
		p	2		playerPredicate
		p	3		predicateDeserializer
	f	Ladd;	a	ID
c	dg$a	net/minecraft/advancements/critereon/UsingItemTrigger$TriggerInstance
	m	(Lbn$b;Lbz;)V	<init>	<init>
		p	1		player
		p	2		item
	m	(Lbn$a;Lbz$a;)Ldg$a;	a	lookingAt
		p	0		player
		p	1		item
	m	(Lcfv;)Z	a	matches
		p	1		stack
	m	(Lcs;)Lcom/google/gson/JsonObject;	a	serializeToJson
		p	1		predicateSerializer
	f	Lbz;	a	item
c	dh	net/minecraft/advancements/critereon/WrappedMinMaxBounds
	m	(Ljava/lang/Float;Ljava/lang/Float;)V	<init>	<init>
		p	1		min
		p	2		max
	m	()Ljava/lang/Float;	a	getMin
	m	(D)Z	a	matchesSqr
		p	1		value
	m	(F)Ldh;	a	exactly
		p	0		value
	m	(FF)Ldh;	a	between
		p	0		min
		p	1		max
	m	(Lcom/google/gson/JsonElement;)Ldh;	a	fromJson
		p	0		json
	m	(Lcom/mojang/brigadier/StringReader;Z)Ldh;	a	fromReader
		p	0		reader
		p	1		allowFloats
	m	(Lcom/mojang/brigadier/StringReader;ZLjava/util/function/Function;)Ldh;	a	fromReader
		p	0		reader
		p	1		allowFloats
		p	2		transform
	m	(Ljava/lang/Float;)Ljava/lang/Float;	a	lambda$fromReader$0
		p	0		value
	m	(Ljava/lang/Float;Ljava/util/function/Function;)Ljava/lang/Float;	a	optionallyFormat
		p	0		value
		p	1		function
	m	()Ljava/lang/Float;	b	getMax
	m	(F)Ldh;	b	atLeast
		p	0		value
	m	(Lcom/mojang/brigadier/StringReader;Z)Ljava/lang/Float;	b	readNumber
		p	0		reader
		p	1		allowFloats
	m	()Lcom/google/gson/JsonElement;	c	serializeToJson
	m	(F)Ldh;	c	atMost
		p	0		value
	m	(Lcom/mojang/brigadier/StringReader;Z)Z	c	isAllowedNumber
		p	0		reader
		p	1		allowFloats
	m	(F)Z	d	matches
		p	1		value
	f	Ldh;	a	ANY
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_INTS_ONLY
	f	Ljava/lang/Float;	c	min
	f	Ljava/lang/Float;	d	max
c	di	net/minecraft/advancements/critereon/package-info
c	dj	net/minecraft/advancements/package-info
c	dk	net/minecraft/commands/BrigadierExceptions
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$16
		p	0		message
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$7
		p	0		found
		p	1		max
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$15
		p	0		symbol
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$6
		p	0		found
		p	1		min
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	c	lambda$static$14
		p	0		value
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	c	lambda$static$5
		p	0		found
		p	1		max
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	d	lambda$static$13
		p	0		value
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	d	lambda$static$4
		p	0		found
		p	1		min
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	e	lambda$static$12
		p	0		value
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	e	lambda$static$3
		p	0		found
		p	1		max
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	f	lambda$static$11
		p	0		value
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	f	lambda$static$2
		p	0		found
		p	1		min
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	g	lambda$static$10
		p	0		value
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	g	lambda$static$1
		p	0		found
		p	1		max
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	h	lambda$static$9
		p	0		character
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	h	lambda$static$0
		p	0		found
		p	1		min
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	i	lambda$static$8
		p	0		expected
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	A	DISPATCHER_PARSE_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	a	DOUBLE_TOO_SMALL
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	b	DOUBLE_TOO_BIG
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	c	FLOAT_TOO_SMALL
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	d	FLOAT_TOO_BIG
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	e	INTEGER_TOO_SMALL
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	f	INTEGER_TOO_BIG
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	g	LONG_TOO_SMALL
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	h	LONG_TOO_BIG
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	i	LITERAL_INCORRECT
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	j	READER_EXPECTED_START_OF_QUOTE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	k	READER_EXPECTED_END_OF_QUOTE
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	l	READER_INVALID_ESCAPE
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	m	READER_INVALID_BOOL
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	n	READER_INVALID_INT
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	o	READER_EXPECTED_INT
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	p	READER_INVALID_LONG
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	q	READER_EXPECTED_LONG
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	r	READER_INVALID_DOUBLE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	s	READER_EXPECTED_DOUBLE
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	t	READER_INVALID_FLOAT
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	u	READER_EXPECTED_FLOAT
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	v	READER_EXPECTED_BOOL
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	w	READER_EXPECTED_SYMBOL
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	x	DISPATCHER_UNKNOWN_COMMAND
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	y	DISPATCHER_UNKNOWN_ARGUMENT
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	z	DISPATCHER_EXPECTED_ARGUMENT_SEPARATOR
c	dl	net/minecraft/commands/CommandBuildContext
	m	(Ladc;)Lhf;	a	holderLookup
		p	1		registryRef
	m	(Lhf$b;Lcau;)Ldl;	a	simple
		p	0		wrapperLookup
		p	1		enabledFeatures
	m	(Lhr;Lcau;)Ldl$a;	a	configurable
		p	0		registryManager
		p	1		enabledFeatures
c	dl$1	net/minecraft/commands/CommandBuildContext$1
	m	(Ladc;)Lhf;	a	holderLookup
		p	1		registryRef
	f	Lhf$b;	a	val$access
	f	Lcau;	b	val$enabledFeatures
c	dl$2	net/minecraft/commands/CommandBuildContext$2
	m	(Ladc;)Lhf;	a	holderLookup
		p	1		registryRef
	m	(Ldl$b;)V	a	missingTagAccessPolicy
		p	1		entryListCreationPolicy
	f	Lhr;	a	val$registryAccess
	f	Lcau;	b	val$enabledFeatures
	f	Ldl$b;	c	missingTagAccessPolicy
c	dl$2$1	net/minecraft/commands/CommandBuildContext$2$1
	m	()Lhf$c;	a	parent
	f	Lhf$c;	a	val$originalLookup
	f	Lhf$c;	b	val$originalTagAddingLookup
	f	Ldl$2;	c	this$0
c	dl$3	net/minecraft/commands/CommandBuildContext$3
	f	[I	a	$SwitchMap$net$minecraft$commands$CommandBuildContext$MissingTagAccessPolicy
c	dl$a	net/minecraft/commands/CommandBuildContext$Configurable
	m	(Ldl$b;)V	a	missingTagAccessPolicy
		p	1		entryListCreationPolicy
c	dl$b	net/minecraft/commands/CommandBuildContext$MissingTagAccessPolicy
	m	()[Ldl$b;	a	$values
	f	Ldl$b;	a	CREATE_NEW
	f	Ldl$b;	b	FAIL
	f	[Ldl$b;	c	$VALUES
c	dm	net/minecraft/commands/CommandFunction
	m	(Ladd;[Ldm$c;)V	<init>	<init>
		p	1		id
		p	2		elements
	m	()Ladd;	a	getId
	m	(Ladd;Lcom/mojang/brigadier/CommandDispatcher;Ldr;Ljava/util/List;)Ldm;	a	fromLines
		p	0		id
		p	1		dispatcher
		p	2		source
		p	3		lines
	m	()[Ldm$c;	b	getEntries
	f	[Ldm$c;	a	entries
	f	Ladd;	b	id
c	dm$a	net/minecraft/commands/CommandFunction$CacheableFunction
	m	(Ladd;)V	<init>	<init>
		p	1		id
	m	(Ldm;)V	<init>	<init>
		p	1		function
	m	()Ladd;	a	getId
	m	(Ladr;)Ljava/util/Optional;	a	get
		p	1		manager
	m	(Ldm;)Ladd;	a	lambda$getId$0
		p	0		f
	f	Ldm$a;	a	NONE
	f	Ladd;	b	id
	f	Z	c	resolved
	f	Ljava/util/Optional;	d	function
c	dm$b	net/minecraft/commands/CommandFunction$CommandEntry
	m	(Lcom/mojang/brigadier/ParseResults;)V	<init>	<init>
		p	1		parsed
	m	(Ladr;Ldr;)I	a	execute
		p	1		manager
		p	2		source
	m	(Ldr;Ldr;)Ldr;	a	lambda$execute$0
		p	1		currentSource
	m	(Ladr;Ldr;Ljava/util/Deque;IILadr$c;)V	execute	execute
		p	1		manager
		p	2		source
		p	3		entries
		p	4		maxChainLength
		p	5		depth
		p	6		tracer
	f	Lcom/mojang/brigadier/ParseResults;	a	parse
c	dm$c	net/minecraft/commands/CommandFunction$Entry
	m	(Ladr;Ldr;Ljava/util/Deque;IILadr$c;)V	execute	execute
		p	1		manager
		p	2		source
		p	3		entries
		p	4		maxChainLength
		p	5		depth
		p	6		tracer
c	dm$d	net/minecraft/commands/CommandFunction$FunctionEntry
	m	(Ldm;)V	<init>	<init>
		p	1		function
	m	(Ladr$c;I)V	a	lambda$execute$1
	m	(Ladr$c;IILjava/util/Deque;Ldr;Ldm;)V	a	lambda$execute$0
		p	5		f
	m	(Ladr;Ldr;Ljava/util/Deque;IILadr$c;)V	execute	execute
		p	1		manager
		p	2		source
		p	3		entries
		p	4		maxChainLength
		p	5		depth
		p	6		tracer
	f	Ldm$a;	a	function
c	dn	net/minecraft/commands/CommandRuntimeException
	m	(Ltj;)V	<init>	<init>
		p	1		message
	m	()Ltj;	a	getComponent
	f	Ltj;	a	message
c	dp	net/minecraft/commands/CommandSigningContext
	m	(Ljava/lang/String;)Lty;	a	getArgument
		p	1		argumentName
	f	Ldp;	a	ANONYMOUS
c	dp$1	net/minecraft/commands/CommandSigningContext$1
	m	(Ljava/lang/String;)Lty;	a	getArgument
		p	1		argumentName
c	dp$a	net/minecraft/commands/CommandSigningContext$SignedArguments
	m	()Ljava/util/Map;	a	arguments
	m	(Ljava/lang/String;)Lty;	a	getArgument
		p	1		argumentName
	f	Ljava/util/Map;	b	arguments
c	dq	net/minecraft/commands/CommandSource
	m	()Z	M_	shouldInformAdmins
	m	(Ltj;)V	a	sendSystemMessage
		p	1		message
	m	()Z	d_	acceptsSuccess
	m	()Z	e_	alwaysAccepts
	m	()Z	j_	acceptsFailure
	f	Ldq;	a	NULL
c	dq$1	net/minecraft/commands/CommandSource$1
	m	()Z	M_	shouldInformAdmins
	m	(Ltj;)V	a	sendSystemMessage
		p	1		message
	m	()Z	d_	acceptsSuccess
	m	()Z	j_	acceptsFailure
c	dr	net/minecraft/commands/CommandSourceStack
	m	(Ldq;Lede;Ledd;Laip;ILjava/lang/String;Ltj;Lnet/minecraft/server/MinecraftServer;Lbfh;)V	<init>	<init>
		p	1		output
		p	2		pos
		p	3		rot
		p	4		world
		p	5		level
		p	6		name
		p	7		displayName
		p	8		server
		p	9		entity
	m	(Ldq;Lede;Ledd;Laip;ILjava/lang/String;Ltj;Lnet/minecraft/server/MinecraftServer;Lbfh;ZLcom/mojang/brigadier/ResultConsumer;Lea$a;Ldp;Laqc;)V	<init>	<init>
		p	1		output
		p	2		pos
		p	3		rot
		p	4		world
		p	5		level
		p	6		name
		p	7		displayName
		p	8		server
		p	9		entity
		p	10		silent
		p	11		consumer
		p	12		entityAnchor
		p	13		signedArguments
		p	14		messageChainTaskQueue
	m	()Ldr;	a	withSuppressedOutput
	m	(I)Ldr;	a	withPermission
		p	1		level
	m	(Ladc;Ldt$a;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/concurrent/CompletableFuture;	a	suggestRegistryElements
		p	1		registryRef
		p	2		suggestedIdType
		p	3		builder
		p	4		context
	m	(Laip;)Ldr;	a	withLevel
		p	1		world
	m	(Laiq;)Z	a	shouldFilterMessageTo
		p	1		recipient
	m	(Laqc;)Ldr;	a	withChatMessageChainer
		p	1		messageChainTaskQueue
	m	(Lbfh;)Ldr;	a	withEntity
		p	1		entity
	m	(Lbfh;Lea$a;)Ldr;	a	facing
		p	1		entity
		p	2		anchor
	m	(Lcom/mojang/brigadier/ResultConsumer;)Ldr;	a	withCallback
		p	1		consumer
	m	(Lcom/mojang/brigadier/ResultConsumer;Ljava/util/function/BinaryOperator;)Ldr;	a	withCallback
		p	1		consumer
		p	2		merger
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/concurrent/CompletableFuture;	a	customSuggestion
		p	1		context
	m	(Lcom/mojang/brigadier/context/CommandContext;ZI)V	a	onCommandComplete
		p	1		context
		p	2		success
		p	3		result
	m	(Ldp;)Ldr;	a	withSigningContext
		p	1		signedArguments
	m	(Ldq;)Ldr;	a	withSource
		p	1		output
	m	(Ldt$a;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lhq;)Ljava/util/concurrent/CompletableFuture;	a	lambda$suggestRegistryElements$1
		p	3		registry
	m	(Lea$a;)Ldr;	a	withAnchor
		p	1		anchor
	m	(Ledd;)Ldr;	a	withRotation
		p	1		rotation
	m	(Lede;)Ldr;	a	withPosition
		p	1		position
	m	(Ltj;)V	a	sendSystemMessage
		p	1		message
	m	(Ltj;Z)V	a	sendSuccess
		p	1		message
		p	2		broadcastToOps
	m	(Ltx;ZLtf$a;)V	a	sendChatMessage
		p	1		message
		p	2		filterMaskEnabled
		p	3		params
	m	()Ltj;	b	getDisplayName
	m	(I)Ldr;	b	withMaximumPermission
		p	1		level
	m	(Lcom/mojang/brigadier/context/CommandContext;ZI)V	b	lambda$new$0
		p	0		context
		p	1		success
		p	2		result
	m	(Lede;)Ldr;	b	facing
		p	1		position
	m	(Ltj;)V	b	sendFailure
		p	1		message
	m	()Ljava/lang/String;	c	getTextName
	m	(I)Z	c	hasPermission
		p	1		level
	m	(Ltj;)V	c	broadcastToAdmins
		p	1		message
	m	()Lede;	d	getPosition
	m	()Laip;	e	getLevel
	m	()Lbfh;	f	getEntity
	m	()Lbfh;	g	getEntityOrException
	m	()Laiq;	h	getPlayerOrException
	m	()Laiq;	i	getPlayer
	m	()Z	j	isPlayer
	m	()Ledd;	k	getRotation
	m	()Lnet/minecraft/server/MinecraftServer;	l	getServer
	m	()Lea$a;	m	getAnchor
	m	()Ldp;	n	getSigningContext
	m	()Laqc;	o	getChatMessageChainer
	m	()Ljava/util/Collection;	p	getOnlinePlayerNames
	m	()Ljava/util/Collection;	q	getAllTeams
	m	()Ljava/util/stream/Stream;	r	getAvailableSounds
	m	()Ljava/util/stream/Stream;	s	getRecipeNames
	m	()Ljava/util/Set;	t	levels
	m	()Lhr;	u	registryAccess
	m	()Lcau;	v	enabledFeatures
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_NOT_PLAYER
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_NOT_ENTITY
	f	Ldq;	c	source
	f	Lede;	d	worldPosition
	f	Laip;	e	level
	f	I	f	permissionLevel
	f	Ljava/lang/String;	g	textName
	f	Ltj;	h	displayName
	f	Lnet/minecraft/server/MinecraftServer;	i	server
	f	Z	j	silent
	f	Lbfh;	k	entity
	f	Lcom/mojang/brigadier/ResultConsumer;	l	consumer
	f	Lea$a;	m	anchor
	f	Ledd;	n	rotation
	f	Ldp;	o	signingContext
	f	Laqc;	p	chatMessageChainer
c	ds	net/minecraft/commands/Commands
	m	(Lds$a;Ldl;)V	<init>	<init>
		p	1		environment
		p	2		commandRegistryAccess
	m	()Lcom/mojang/brigadier/CommandDispatcher;	a	getDispatcher
	m	(Laiq;)V	a	sendCommands
		p	1		player
	m	(Lcom/mojang/brigadier/CommandDispatcher;Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/tree/CommandNode;Ljava/util/Collection;)V	a	lambda$validate$7
		p	1		parent
		p	2		child
		p	3		sibling
		p	4		inputs
	m	(Lcom/mojang/brigadier/ParseResults;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	getParseException
		p	0		parse
	m	(Lcom/mojang/brigadier/ParseResults;Ljava/lang/String;)I	a	performCommand
		p	1		parseResults
		p	2		command
	m	(Lcom/mojang/brigadier/ParseResults;Ljava/util/function/UnaryOperator;)Lcom/mojang/brigadier/ParseResults;	a	mapSource
		p	0		parseResults
		p	1		sourceMapper
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Ljava/lang/String;	a	lambda$validate$9
		p	0		type
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$fillUsableCommands$5
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;ZI)V	a	lambda$new$0
		p	0		context
		p	1		success
		p	2		result
	m	(Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/tree/CommandNode;Ldr;Ljava/util/Map;)V	a	fillUsableCommands
		p	1		tree
		p	2		result
		p	3		source
		p	4		resultNodes
	m	(Ldr;Ljava/lang/String;)I	a	performPrefixedCommand
		p	1		source
		p	2		command
	m	(Lds$b;)Ljava/util/function/Predicate;	a	createValidator
		p	0		parser
	m	(Lds$b;Ljava/lang/String;)Z	a	lambda$createValidator$6
		p	1		string
	m	(Ldt;)Z	a	lambda$fillUsableCommands$4
		p	0		source
	m	(Lhf$b;)Ldl;	a	createValidationContext
		p	0		registryLookup
	m	(Ljava/lang/String;)Lcom/mojang/brigadier/builder/LiteralArgumentBuilder;	a	literal
		p	0		literal
	m	(Ljava/lang/String;Lcom/mojang/brigadier/arguments/ArgumentType;)Lcom/mojang/brigadier/builder/RequiredArgumentBuilder;	a	argument
		p	0		name
		p	1		type
	m	(Ljava/lang/String;Luf;)Luf;	a	lambda$performCommand$2
		p	1		style
	m	(Ltw;Luf;)Luf;	a	lambda$performCommand$3
		p	1		style
	m	()V	b	validate
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Z	b	lambda$validate$8
		p	0		type
	m	(Ljava/lang/String;)Ljava/lang/String;	b	lambda$performCommand$1
	f	I	a	LEVEL_ALL
	f	I	b	LEVEL_MODERATORS
	f	I	c	LEVEL_GAMEMASTERS
	f	I	d	LEVEL_ADMINS
	f	I	e	LEVEL_OWNERS
	f	Lorg/slf4j/Logger;	f	LOGGER
	f	Lcom/mojang/brigadier/CommandDispatcher;	g	dispatcher
c	ds$1	net/minecraft/commands/Commands$1
	m	(Ladc;)Lhf;	a	holderLookup
		p	1		registryRef
	f	Lhf$b;	a	val$registries
c	ds$1$1	net/minecraft/commands/Commands$1$1
	m	(Lds$1;Lhf;Lhf$c;)V	<init>	<init>
		p	2		baseWrapper
	m	(Lanv;)Ljava/util/Optional;	a	get
		p	1		tag
	m	(Lhf$c;Lanv;)Lhh$c;	a	lambda$getOrThrow$0
	m	(Lanv;)Lhh$c;	b	getOrThrow
		p	1		tag
	f	Lhf$c;	a	val$original
	f	Lds$1;	b	this$0
c	ds$a	net/minecraft/commands/Commands$CommandSelection
	m	(Ljava/lang/String;IZZ)V	<init>	<init>
		p	3		integrated
		p	4		dedicated
	m	()[Lds$a;	a	$values
	f	Lds$a;	a	ALL
	f	Lds$a;	b	DEDICATED
	f	Lds$a;	c	INTEGRATED
	f	Z	d	includeIntegrated
	f	Z	e	includeDedicated
	f	[Lds$a;	f	$VALUES
c	ds$b	net/minecraft/commands/Commands$ParseFunction
	m	(Lcom/mojang/brigadier/StringReader;)V	parse	parse
		p	1		reader
c	dt	net/minecraft/commands/SharedSuggestionProvider
	m	(Ladc;Ldt$a;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/concurrent/CompletableFuture;	a	suggestRegistryElements
		p	1		registryRef
		p	2		suggestedIdType
		p	3		builder
		p	4		context
	m	(Ladd;)Ladd;	a	lambda$suggestResource$2
		p	0		id
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/concurrent/CompletableFuture;	a	customSuggestion
		p	1		context
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ladd;)V	a	lambda$suggestResource$3
		p	1		id
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/lang/String;Ladd;)V	a	lambda$suggestResource$1
		p	2		id
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/lang/Object;)V	a	lambda$suggestResource$4
		p	3		object
	m	(Lhq;Ldt$a;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)V	a	suggestRegistryElements
		p	1		registry
		p	2		suggestedIdType
		p	3		builder
	m	(Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	suggestResource
		p	0		candidates
		p	1		builder
	m	(Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;	a	suggestResource
		p	0		candidates
		p	1		builder
		p	2		prefix
	m	(Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;	a	suggestResource
		p	0		candidates
		p	1		builder
		p	2		identifier
		p	3		tooltip
	m	(Ljava/lang/Iterable;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/Consumer;)V	a	filterResources
		p	0		candidates
		p	1		remaining
		p	2		prefix
		p	3		identifier
		p	4		action
	m	(Ljava/lang/Iterable;Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/Consumer;)V	a	filterResources
		p	0		candidates
		p	1		remaining
		p	2		identifier
		p	3		action
	m	(Ljava/lang/String;Ljava/lang/String;)Z	a	matchesSubStr
		p	0		remaining
		p	1		candidate
	m	(Ljava/lang/String;Ljava/util/Collection;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Predicate;)Ljava/util/concurrent/CompletableFuture;	a	suggestCoordinates
		p	0		remaining
		p	1		candidates
		p	2		builder
		p	3		predicate
	m	(Ljava/util/stream/Stream;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	suggestResource
		p	0		candidates
		p	1		builder
	m	(Ljava/util/stream/Stream;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;	a	suggestResource
		p	0		candidates
		p	1		builder
		p	2		prefix
	m	(Ljava/util/stream/Stream;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;	a	suggestResource
		p	0		candidates
		p	1		builder
		p	2		identifier
		p	3		tooltip
	m	([Ljava/lang/String;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	suggest
		p	0		candidates
		p	1		builder
	m	(Ladd;)Ladd;	b	lambda$suggestResource$0
		p	0		id
	m	(Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	b	suggest
		p	0		candidates
		p	1		builder
	m	(Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;	b	suggest
		p	0		candidates
		p	1		builder
		p	2		suggestionText
		p	3		tooltip
	m	(Ljava/lang/String;Ljava/lang/String;)Z	b	lambda$suggest$5
		p	1		candidate
	m	(Ljava/lang/String;Ljava/util/Collection;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Predicate;)Ljava/util/concurrent/CompletableFuture;	b	suggest2DCoordinates
		p	0		remaining
		p	1		candidates
		p	2		builder
		p	3		predicate
	m	(Ljava/util/stream/Stream;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	b	suggest
		p	0		candidates
		p	1		builder
	m	(I)Z	c	hasPermission
		p	1		level
	m	()Ljava/util/Collection;	p	getOnlinePlayerNames
	m	()Ljava/util/Collection;	q	getAllTeams
	m	()Ljava/util/stream/Stream;	r	getAvailableSounds
	m	()Ljava/util/stream/Stream;	s	getRecipeNames
	m	()Ljava/util/Set;	t	levels
	m	()Lhr;	u	registryAccess
	m	()Lcau;	v	enabledFeatures
	m	()Ljava/util/Collection;	w	getCustomTabSugggestions
	m	()Ljava/util/Collection;	x	getSelectedEntities
	m	()Ljava/util/Collection;	y	getRelevantCoordinates
	m	()Ljava/util/Collection;	z	getAbsoluteCoordinates
c	dt$a	net/minecraft/commands/SharedSuggestionProvider$ElementSuggestionType
	m	()Z	a	shouldSuggestTags
	m	()Z	b	shouldSuggestElements
	m	()[Ldt$a;	c	$values
	f	Ldt$a;	a	TAGS
	f	Ldt$a;	b	ELEMENTS
	f	Ldt$a;	c	ALL
	f	[Ldt$a;	d	$VALUES
c	dt$b	net/minecraft/commands/SharedSuggestionProvider$TextCoordinates
	m	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V	<init>	<init>
		p	1		x
		p	2		y
		p	3		z
	f	Ldt$b;	a	DEFAULT_LOCAL
	f	Ldt$b;	b	DEFAULT_GLOBAL
	f	Ljava/lang/String;	c	x
	f	Ljava/lang/String;	d	y
	f	Ljava/lang/String;	e	z
c	du	net/minecraft/commands/arguments/AngleArgument
	m	()Ldu;	a	angle
	m	(Lcom/mojang/brigadier/StringReader;)Ldu$a;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)F	a	getAngle
		p	0		context
		p	1		name
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_NOT_COMPLETE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_INVALID_ANGLE
	f	Ljava/util/Collection;	c	EXAMPLES
c	du$a	net/minecraft/commands/arguments/AngleArgument$SingleAngle
	m	(FZ)V	<init>	<init>
		p	1		angle
		p	2		relative
	m	(Ldr;)F	a	getAngle
		p	1		source
	f	F	a	angle
	f	Z	b	isRelative
c	dv	net/minecraft/commands/arguments/ArgumentSignatures
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()Ljava/util/List;	a	entries
	m	(Ldv$b;Lua$a;)Ldv$a;	a	lambda$signCommand$1
		p	1		argument
	m	(Ljava/lang/String;)Ltu;	a	get
		p	1		argumentName
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lss;Ldv$a;)V	a	lambda$write$0
		p	0		buf2
		p	1		entry
	m	(Lua;Ldv$b;)Ldv;	a	signCommand
		p	0		arguments
		p	1		signer
	f	Ldv;	a	EMPTY
	f	Ljava/util/List;	b	entries
	f	I	c	MAX_ARGUMENT_COUNT
	f	I	d	MAX_ARGUMENT_NAME_LENGTH
c	dv$a	net/minecraft/commands/arguments/ArgumentSignatures$Entry
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()Ljava/lang/String;	a	name
	m	(Lss;)V	a	write
		p	1		buf
	m	()Ltu;	b	signature
	f	Ljava/lang/String;	a	name
	f	Ltu;	b	signature
c	dv$b	net/minecraft/commands/arguments/ArgumentSignatures$Signer
	m	(Ljava/lang/String;)Ltu;	sign	sign
		p	1		value
c	dw	net/minecraft/commands/arguments/ColorArgument
	m	()Ldw;	a	color
	m	(Lcom/mojang/brigadier/StringReader;)Ln;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ln;	a	getColor
		p	0		context
		p	1		name
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		color
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	ERROR_INVALID_VALUE
	f	Ljava/util/Collection;	b	EXAMPLES
c	dx	net/minecraft/commands/arguments/ComponentArgument
	m	()Ldx;	a	textComponent
	m	(Lcom/mojang/brigadier/StringReader;)Ltj;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ltj;	a	getComponent
		p	0		context
		p	1		name
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		text
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	ERROR_INVALID_JSON
	f	Ljava/util/Collection;	b	EXAMPLES
c	dy	net/minecraft/commands/arguments/CompoundTagArgument
	m	()Ldy;	a	compoundTag
	m	(Lcom/mojang/brigadier/StringReader;)Lre;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lre;	a	getCompoundTag
		p	0		context
		p	1		name
	f	Ljava/util/Collection;	a	EXAMPLES
c	dz	net/minecraft/commands/arguments/DimensionArgument
	m	()Ldz;	a	dimension
	m	(Ladc;)Ljava/lang/String;	a	lambda$static$0
		p	0		key
	m	(Lcom/mojang/brigadier/StringReader;)Ladd;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Laip;	a	getDimension
		p	0		context
		p	1		name
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$1
		p	0		id
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_INVALID_VALUE
c	ea	net/minecraft/commands/arguments/EntityAnchorArgument
	m	()Lea;	a	anchor
	m	(Lcom/mojang/brigadier/StringReader;)Lea$a;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lea$a;	a	getAnchor
		p	0		context
		p	1		name
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		name
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_INVALID
c	ea$a	net/minecraft/commands/arguments/EntityAnchorArgument$Anchor
	m	(Ljava/lang/String;ILjava/lang/String;Ljava/util/function/BiFunction;)V	<init>	<init>
		p	3		id
		p	4		offset
	m	()[Lea$a;	a	$values
	m	(Lbfh;)Lede;	a	apply
		p	1		entity
	m	(Ldr;)Lede;	a	apply
		p	1		source
	m	(Lede;Lbfh;)Lede;	a	lambda$static$1
		p	0		pos
		p	1		entity
	m	(Ljava/lang/String;)Lea$a;	a	getByName
		p	0		id
	m	(Ljava/util/HashMap;)V	a	lambda$static$2
		p	0		map
	m	(Lede;Lbfh;)Lede;	b	lambda$static$0
		p	0		pos
		p	1		entity
	f	Lea$a;	a	FEET
	f	Lea$a;	b	EYES
	f	Ljava/util/Map;	c	BY_NAME
	f	Ljava/lang/String;	d	name
	f	Ljava/util/function/BiFunction;	e	transform
	f	[Lea$a;	f	$VALUES
c	eb	net/minecraft/commands/arguments/EntityArgument
	m	(ZZ)V	<init>	<init>
		p	1		singleTarget
		p	2		playersOnly
	m	()Leb;	a	entity
	m	(Lcom/mojang/brigadier/StringReader;)Lfz;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lbfh;	a	getEntity
		p	0		context
		p	1		name
	m	(Ldt;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)V	a	lambda$listSuggestions$0
		p	2		builder
	m	()Leb;	b	entities
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection;	b	getEntities
		p	0		context
		p	1		name
	m	()Leb;	c	player
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection;	c	getOptionalEntities
		p	0		context
		p	1		name
	m	()Leb;	d	players
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection;	d	getOptionalPlayers
		p	0		context
		p	1		name
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Laiq;	e	getPlayer
		p	0		context
		p	1		name
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection;	f	getPlayers
		p	0		context
		p	1		name
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_NOT_SINGLE_ENTITY
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_NOT_SINGLE_PLAYER
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_ONLY_PLAYERS_ALLOWED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	d	NO_ENTITIES_FOUND
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	e	NO_PLAYERS_FOUND
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	f	ERROR_SELECTORS_NOT_ALLOWED
	f	Ljava/util/Collection;	g	EXAMPLES
	f	Z	h	single
	f	Z	i	playersOnly
c	eb$a	net/minecraft/commands/arguments/EntityArgument$Info
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Lgf$a;	a	unpack
		p	1		argumentType
	m	(Leb$a$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Leb$a$a;Lss;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Leb;)Leb$a$a;	a	unpack
		p	1		argumentType
	m	(Lgf$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Lgf$a;Lss;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Lss;)Leb$a$a;	a	deserializeFromNetwork
	m	(Lss;)Lgf$a;	b	deserializeFromNetwork
		p	1		buf
	f	B	a	FLAG_SINGLE
	f	B	b	FLAG_PLAYERS_ONLY
c	eb$a$a	net/minecraft/commands/arguments/EntityArgument$Info$Template
	m	(Leb$a;ZZ)V	<init>	<init>
		p	2		single
		p	3		playersOnly
	m	()Lgf;	a	type
	m	(Ldl;)Leb;	a	instantiate
	m	(Ldl;)Lcom/mojang/brigadier/arguments/ArgumentType;	b	instantiate
		p	1		commandRegistryAccess
	f	Leb$a;	a	this$0
	f	Z	b	single
	f	Z	c	playersOnly
c	ec	net/minecraft/commands/arguments/GameModeArgument
	m	()Lec;	a	gameMode
	m	(Lcom/mojang/brigadier/StringReader;)Lcmf;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lcmf;	a	getGameMode
		p	0		context
		p	1		name
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		gameMode
	f	Ljava/util/Collection;	a	EXAMPLES
	f	[Lcmf;	b	VALUES
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	c	ERROR_INVALID
c	ed	net/minecraft/commands/arguments/GameProfileArgument
	m	()Led;	a	gameProfile
	m	(Lcom/mojang/brigadier/StringReader;)Led$a;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)V	a	lambda$listSuggestions$1
		p	1		builder
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection;	a	getGameProfiles
		p	0		context
		p	1		name
	m	(Ljava/lang/String;Ldr;)Ljava/util/Collection;	a	lambda$parse$0
		p	1		source
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_UNKNOWN_PLAYER
	f	Ljava/util/Collection;	b	EXAMPLES
c	ed$a	net/minecraft/commands/arguments/GameProfileArgument$Result
	m	(Ldr;)Ljava/util/Collection;	getNames	getNames
		p	1		source
c	ed$b	net/minecraft/commands/arguments/GameProfileArgument$SelectorResult
	m	(Lfz;)V	<init>	<init>
		p	1		selector
	m	(Ldr;)Ljava/util/Collection;	getNames	getNames
		p	1		source
	f	Lfz;	a	selector
c	ee	net/minecraft/commands/arguments/HeightmapTypeArgument
	m	()Lee;	a	heightmap
	m	(I)[Ldgz$a;	a	lambda$keptTypes$1
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ldgz$a;	a	getHeightmap
		p	0		context
		p	1		id
	m	(Ljava/lang/String;)Ljava/lang/String;	a	convertId
		p	1		name
	m	()[Ldgz$a;	b	keptTypes
	m	(Ljava/lang/String;)Ljava/lang/String;	b	lambda$static$0
		p	0		name
	f	Lcom/mojang/serialization/Codec;	a	LOWER_CASE_CODEC
c	ef	net/minecraft/commands/arguments/MessageArgument
	m	()Lef;	a	message
	m	(Lcom/mojang/brigadier/StringReader;)Lef$a;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ltj;	a	getMessage
		p	0		context
		p	1		name
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Ljava/util/function/Consumer;)V	a	resolveChatMessage
		p	0		context
		p	1		name
		p	2		callback
	m	(Ldr;Lty;)Ljava/util/concurrent/CompletableFuture;	a	filterPlainText
		p	0		source
		p	1		message
	m	(Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;Lty;Ljava/util/function/Consumer;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	lambda$resolveSignedMessage$1
		p	4		executor
	m	(Ljava/util/concurrent/CompletableFuture;Ljava/util/function/Consumer;Lty;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	lambda$resolveDisguisedMessage$3
		p	3		executor
	m	(Ljava/util/function/Consumer;Ldr;Lty;)V	a	resolveSignedMessage
		p	0		callback
		p	1		source
		p	2		message
	m	(Ljava/util/function/Consumer;Lty;Ltj;)V	a	lambda$resolveDisguisedMessage$2
		p	2		content
	m	(Lty;Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;Ljava/util/function/Consumer;Ljava/lang/Void;)V	a	lambda$resolveSignedMessage$0
		p	4		void_
	m	(Ljava/util/function/Consumer;Ldr;Lty;)V	b	resolveDisguisedMessage
		p	0		callback
		p	1		source
		p	2		message
	f	Ljava/util/Collection;	a	EXAMPLES
c	ef$a	net/minecraft/commands/arguments/MessageArgument$Message
	m	(Ljava/lang/String;[Lef$b;)V	<init>	<init>
		p	1		contents
		p	2		selectors
	m	()Ljava/lang/String;	a	getText
	m	(Lcom/mojang/brigadier/StringReader;Z)Lef$a;	a	parseText
		p	0		reader
		p	1		canUseSelectors
	m	(Ldr;)Ltj;	a	resolveComponent
		p	1		source
	m	(Ldr;Z)Ltj;	a	toComponent
		p	1		source
		p	2		canUseSelectors
	m	()[Lef$b;	b	getParts
	f	Ljava/lang/String;	a	text
	f	[Lef$b;	b	parts
c	ef$b	net/minecraft/commands/arguments/MessageArgument$Part
	m	(IILfz;)V	<init>	<init>
		p	1		start
		p	2		end
		p	3		selector
	m	()I	a	getStart
	m	(Ldr;)Ltj;	a	toComponent
		p	1		source
	m	()I	b	getEnd
	m	()Lfz;	c	getSelector
	f	I	a	start
	f	I	b	end
	f	Lfz;	c	selector
c	eg	net/minecraft/commands/arguments/NbtPathArgument
	m	()Leg;	a	nbtPath
	m	(C)Z	a	isAllowedInUnquotedName
		p	0		c
	m	(Lcom/mojang/brigadier/StringReader;)Leg$g;	a	parse
	m	(Lcom/mojang/brigadier/StringReader;Ljava/lang/String;)Leg$h;	a	readObjectNode
		p	0		reader
		p	1		name
	m	(Lcom/mojang/brigadier/StringReader;Z)Leg$h;	a	parseNode
		p	0		reader
		p	1		root
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Leg$g;	a	getPath
		p	0		context
		p	1		name
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$2
	m	(Lre;)Ljava/util/function/Predicate;	a	createTagPredicate
		p	0		filter
	m	(Lre;Lrx;)Z	a	lambda$createTagPredicate$3
		p	1		nbt
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/String;	b	readUnquotedName
		p	0		reader
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$1
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	c	lambda$static$0
		p	0		path
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_INVALID_NODE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_DATA_TOO_DEEP
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	c	ERROR_NOTHING_FOUND
	f	Ljava/util/Collection;	d	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	e	ERROR_EXPECTED_LIST
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	f	ERROR_INVALID_INDEX
	f	C	g	INDEX_MATCH_START
	f	C	h	INDEX_MATCH_END
	f	C	i	KEY_MATCH_START
	f	C	j	KEY_MATCH_END
	f	C	k	QUOTED_KEY_START
c	eg$a	net/minecraft/commands/arguments/NbtPathArgument$AllElementsNode
	m	()Lrx;	a	createPreferredParentTag
	m	(Lrx;)I	a	removeTag
		p	1		current
	m	(Lrx;Ljava/util/List;)V	a	getTag
		p	1		current
		p	2		results
	m	(Lrx;Ljava/util/function/Supplier;)I	a	setTag
		p	1		current
		p	2		source
	m	(Lrx;Ljava/util/function/Supplier;Ljava/util/List;)V	a	getOrCreateTag
		p	1		current
		p	2		source
		p	3		results
	f	Leg$a;	a	INSTANCE
c	eg$b	net/minecraft/commands/arguments/NbtPathArgument$CompoundChildNode
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		name
	m	()Lrx;	a	createPreferredParentTag
	m	(Lrx;)I	a	removeTag
		p	1		current
	m	(Lrx;Ljava/util/List;)V	a	getTag
		p	1		current
		p	2		results
	m	(Lrx;Ljava/util/function/Supplier;)I	a	setTag
		p	1		current
		p	2		source
	m	(Lrx;Ljava/util/function/Supplier;Ljava/util/List;)V	a	getOrCreateTag
		p	1		current
		p	2		source
		p	3		results
	f	Ljava/lang/String;	a	name
c	eg$c	net/minecraft/commands/arguments/NbtPathArgument$IndexedElementNode
	m	(I)V	<init>	<init>
		p	1		index
	m	()Lrx;	a	createPreferredParentTag
	m	(Lrx;)I	a	removeTag
		p	1		current
	m	(Lrx;Ljava/util/List;)V	a	getTag
		p	1		current
		p	2		results
	m	(Lrx;Ljava/util/function/Supplier;)I	a	setTag
		p	1		current
		p	2		source
	m	(Lrx;Ljava/util/function/Supplier;Ljava/util/List;)V	a	getOrCreateTag
		p	1		current
		p	2		source
		p	3		results
	f	I	a	index
c	eg$d	net/minecraft/commands/arguments/NbtPathArgument$MatchElementNode
	m	(Lre;)V	<init>	<init>
		p	1		filter
	m	()Lrx;	a	createPreferredParentTag
	m	(Ljava/util/List;Lorg/apache/commons/lang3/mutable/MutableBoolean;Lrx;)V	a	lambda$getOrCreateTag$0
		p	2		nbt
	m	(Lrx;)I	a	removeTag
		p	1		current
	m	(Lrx;Ljava/util/List;)V	a	getTag
		p	1		current
		p	2		results
	m	(Lrx;Ljava/util/function/Supplier;)I	a	setTag
		p	1		current
		p	2		source
	m	(Lrx;Ljava/util/function/Supplier;Ljava/util/List;)V	a	getOrCreateTag
		p	1		current
		p	2		source
		p	3		results
	f	Lre;	a	pattern
	f	Ljava/util/function/Predicate;	b	predicate
c	eg$e	net/minecraft/commands/arguments/NbtPathArgument$MatchObjectNode
	m	(Ljava/lang/String;Lre;)V	<init>	<init>
		p	1		name
		p	2		filter
	m	()Lrx;	a	createPreferredParentTag
	m	(Lrx;)I	a	removeTag
		p	1		current
	m	(Lrx;Ljava/util/List;)V	a	getTag
		p	1		current
		p	2		results
	m	(Lrx;Ljava/util/function/Supplier;)I	a	setTag
		p	1		current
		p	2		source
	m	(Lrx;Ljava/util/function/Supplier;Ljava/util/List;)V	a	getOrCreateTag
		p	1		current
		p	2		source
		p	3		results
	f	Ljava/lang/String;	a	name
	f	Lre;	b	pattern
	f	Ljava/util/function/Predicate;	c	predicate
c	eg$f	net/minecraft/commands/arguments/NbtPathArgument$MatchRootObjectNode
	m	(Lre;)V	<init>	<init>
		p	1		filter
	m	()Lrx;	a	createPreferredParentTag
	m	(Lrx;)I	a	removeTag
		p	1		current
	m	(Lrx;Ljava/util/List;)V	a	getTag
		p	1		current
		p	2		results
	m	(Lrx;Ljava/util/function/Supplier;)I	a	setTag
		p	1		current
		p	2		source
	m	(Lrx;Ljava/util/function/Supplier;Ljava/util/List;)V	a	getOrCreateTag
		p	1		current
		p	2		source
		p	3		results
	f	Ljava/util/function/Predicate;	a	predicate
c	eg$g	net/minecraft/commands/arguments/NbtPathArgument$NbtPath
	m	(Ljava/lang/String;[Leg$h;Lit/unimi/dsi/fastutil/objects/Object2IntMap;)V	<init>	<init>
		p	1		string
		p	2		nodes
		p	3		nodeEndIndices
	m	()I	a	estimatePathDepth
	m	(ILre;Ljava/util/List;)I	a	insert
		p	1		index
		p	2		compound
		p	3		elements
	m	(Leg$h;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	createNotFoundException
		p	1		node
	m	(Leg$h;Lorg/apache/commons/lang3/mutable/MutableBoolean;Lrx;Lrx;)Ljava/lang/Integer;	a	lambda$set$2
	m	(Ljava/lang/Integer;Ljava/lang/Integer;)Ljava/lang/Integer;	a	lambda$apply$0
		p	0		a
		p	1		b
	m	(Ljava/util/List;Ljava/util/function/Function;)I	a	apply
		p	0		elements
		p	1		operation
	m	(Lorg/apache/commons/lang3/mutable/MutableBoolean;Lrx;)Lrx;	a	lambda$set$1
	m	(Lrx;)Ljava/util/List;	a	get
		p	1		element
	m	(Lrx;I)Z	a	isTooDeep
		p	0		element
		p	1		depth
	m	(Lrx;Ljava/util/function/Supplier;)Ljava/util/List;	a	getOrCreate
		p	1		element
		p	2		source
	m	(Lrx;Lrx;)I	a	set
		p	1		element
		p	2		source
	m	(Lrx;)I	b	countMatching
		p	1		element
	m	(Lrx;)I	c	remove
		p	1		element
	m	(Lrx;)Ljava/util/List;	d	getOrCreateParents
		p	1		start
	f	Ljava/lang/String;	a	original
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	b	nodeToOriginalPosition
	f	[Leg$h;	c	nodes
c	eg$h	net/minecraft/commands/arguments/NbtPathArgument$Node
	m	()Lrx;	a	createPreferredParentTag
	m	(Ljava/util/List;)Ljava/util/List;	a	get
		p	1		elements
	m	(Ljava/util/List;Ljava/util/function/BiConsumer;)Ljava/util/List;	a	collect
		p	1		elements
		p	2		action
	m	(Ljava/util/List;Ljava/util/function/Supplier;)Ljava/util/List;	a	getOrCreate
		p	1		elements
		p	2		supplier
	m	(Ljava/util/function/Supplier;Lrx;Ljava/util/List;)V	a	lambda$getOrCreate$0
		p	2		current
		p	3		results
	m	(Lrx;)I	a	removeTag
		p	1		current
	m	(Lrx;Ljava/util/List;)V	a	getTag
		p	1		current
		p	2		results
	m	(Lrx;Ljava/util/function/Supplier;)I	a	setTag
		p	1		current
		p	2		source
	m	(Lrx;Ljava/util/function/Supplier;Ljava/util/List;)V	a	getOrCreateTag
		p	1		current
		p	2		source
		p	3		results
c	eh	net/minecraft/commands/arguments/NbtTagArgument
	m	()Leh;	a	nbtTag
	m	(Lcom/mojang/brigadier/StringReader;)Lrx;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lrx;	a	getNbtTag
		p	0		context
		p	1		name
	f	Ljava/util/Collection;	a	EXAMPLES
c	ei	net/minecraft/commands/arguments/ObjectiveArgument
	m	()Lei;	a	objective
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/String;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ledz;	a	getObjective
		p	0		context
		p	1		name
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$1
		p	0		name
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ledz;	b	getWritableObjective
		p	0		context
		p	1		name
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$0
		p	0		name
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_OBJECTIVE_NOT_FOUND
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	c	ERROR_OBJECTIVE_READ_ONLY
c	ej	net/minecraft/commands/arguments/ObjectiveCriteriaArgument
	m	()Lej;	a	criteria
	m	(Lana;Ljava/lang/Object;)Ljava/lang/String;	a	getName
		p	1		stat
		p	2		value
	m	(Lcom/mojang/brigadier/StringReader;)Leef;	a	parse
	m	(Lcom/mojang/brigadier/StringReader;ILjava/lang/String;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$parse$1
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Leef;	a	getCriteria
		p	0		context
		p	1		name
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		name
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	ERROR_INVALID_VALUE
	f	Ljava/util/Collection;	b	EXAMPLES
c	ek	net/minecraft/commands/arguments/OperationArgument
	m	()Lek;	a	operation
	m	(II)I	a	lambda$getSimpleOperation$6
		p	0		a
		p	1		b
	m	(Lcom/mojang/brigadier/StringReader;)Lek$a;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lek$a;	a	getOperation
		p	0		context
		p	1		name
	m	(Leeb;Leeb;)V	a	lambda$getOperation$0
		p	0		a
		p	1		b
	m	(Ljava/lang/String;)Lek$a;	a	getOperation
		p	0		operator
	m	(II)I	b	lambda$getSimpleOperation$5
		p	0		a
		p	1		b
	m	(Ljava/lang/String;)Lek$b;	b	getSimpleOperation
		p	0		operator
	m	(II)I	c	lambda$getSimpleOperation$4
		p	0		a
		p	1		b
	m	(II)I	d	lambda$getSimpleOperation$3
		p	0		a
		p	1		b
	m	(II)I	e	lambda$getSimpleOperation$2
		p	0		a
		p	1		b
	m	(II)I	f	lambda$getSimpleOperation$1
		p	0		a
		p	1		b
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_INVALID_OPERATION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_DIVIDE_BY_ZERO
c	ek$a	net/minecraft/commands/arguments/OperationArgument$Operation
	m	(Leeb;Leeb;)V	apply	apply
		p	1		a
		p	2		b
c	ek$b	net/minecraft/commands/arguments/OperationArgument$SimpleOperation
	m	(II)I	apply	apply
		p	1		a
		p	2		b
	m	(Leeb;Leeb;)V	apply	apply
		p	1		a
		p	2		b
c	el	net/minecraft/commands/arguments/ParticleArgument
	m	(Ldl;)V	<init>	<init>
		p	1		registryAccess
	m	(Ladd;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$readParticleType$1
	m	(Lcom/mojang/brigadier/StringReader;)Lis;	a	parse
	m	(Lcom/mojang/brigadier/StringReader;Lhf;)Lis;	a	readParticle
		p	0		reader
		p	1		registryWrapper
	m	(Lcom/mojang/brigadier/StringReader;Lit;)Lis;	a	readParticle
		p	0		reader
		p	1		type
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lis;	a	getParticle
		p	0		context
		p	1		name
	m	(Ldl;)Lel;	a	particle
		p	0		registryAccess
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		id
	m	(Lcom/mojang/brigadier/StringReader;Lhf;)Lit;	b	readParticleType
		p	0		reader
		p	1		registryWrapper
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	ERROR_UNKNOWN_PARTICLE
	f	Ljava/util/Collection;	b	EXAMPLES
	f	Lhf;	c	particles
c	em	net/minecraft/commands/arguments/RangeArgument
	m	()Lem$b;	a	intRange
	m	()Lem$a;	b	floatRange
c	em$a	net/minecraft/commands/arguments/RangeArgument$Floats
	m	(Lcom/mojang/brigadier/StringReader;)Lci$c;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lci$c;	a	getRange
		p	0		context
		p	1		name
	f	Ljava/util/Collection;	a	EXAMPLES
c	em$b	net/minecraft/commands/arguments/RangeArgument$Ints
	m	(Lcom/mojang/brigadier/StringReader;)Lci$d;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lci$d;	a	getRange
		p	0		context
		p	1		name
	f	Ljava/util/Collection;	a	EXAMPLES
c	en	net/minecraft/commands/arguments/ResourceArgument
	m	(Ldl;Ladc;)V	<init>	<init>
		p	1		registryAccess
		p	2		registryRef
	m	(Ladd;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$parse$3
	m	(Lcom/mojang/brigadier/StringReader;)Lhd$c;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lhd$c;	a	getAttribute
		p	0		context
		p	1		name
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Ladc;)Lhd$c;	a	getResource
		p	0		context
		p	1		name
		p	2		registryRef
	m	(Ldl;Ladc;)Len;	a	resource
		p	0		registryAccess
		p	1		registryRef
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		id
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$1
		p	0		element
		p	1		type
	m	(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$2
		p	0		element
		p	1		type
		p	2		expectedType
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lhd$c;	b	getConfiguredFeature
		p	0		context
		p	1		name
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lhd$c;	c	getStructure
		p	0		context
		p	1		name
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lhd$c;	d	getEntityType
		p	0		context
		p	1		name
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lhd$c;	e	getSummonableEntityType
		p	0		context
		p	1		name
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lhd$c;	f	getMobEffect
		p	0		context
		p	1		name
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lhd$c;	g	getEnchantment
		p	0		context
		p	1		name
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	a	ERROR_UNKNOWN_RESOURCE
	f	Lcom/mojang/brigadier/exceptions/Dynamic3CommandExceptionType;	b	ERROR_INVALID_RESOURCE_TYPE
	f	Ljava/util/Collection;	c	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	d	ERROR_NOT_SUMMONABLE_ENTITY
	f	Ladc;	e	registryKey
	f	Lhf;	f	registryLookup
c	en$a	net/minecraft/commands/arguments/ResourceArgument$Info
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Lgf$a;	a	unpack
		p	1		argumentType
	m	(Len$a$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Len$a$a;Lss;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Len;)Len$a$a;	a	unpack
		p	1		argumentType
	m	(Lgf$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Lgf$a;Lss;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Lss;)Len$a$a;	a	deserializeFromNetwork
	m	(Lss;)Lgf$a;	b	deserializeFromNetwork
		p	1		buf
c	en$a$a	net/minecraft/commands/arguments/ResourceArgument$Info$Template
	m	(Len$a;Ladc;)V	<init>	<init>
		p	2		registryRef
	m	()Lgf;	a	type
	m	(Ldl;)Len;	a	instantiate
	m	(Ldl;)Lcom/mojang/brigadier/arguments/ArgumentType;	b	instantiate
		p	1		commandRegistryAccess
	f	Len$a;	a	this$0
	f	Ladc;	b	registryKey
c	eo	net/minecraft/commands/arguments/ResourceKeyArgument
	m	(Ladc;)V	<init>	<init>
		p	1		registryRef
	m	(Ladc;)Leo;	a	key
		p	0		registryRef
	m	(Lcom/mojang/brigadier/StringReader;)Ladc;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ladc;)Lhq;	a	getRegistry
		p	0		context
		p	1		registryRef
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lhd$c;	a	getConfiguredFeature
		p	0		context
		p	1		name
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Ladc;Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;)Ladc;	a	getRegistryKey
		p	0		context
		p	1		name
		p	2		registryRef
		p	3		invalidException
	m	(Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;Ladc;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$resolveKey$4
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$2
		p	0		id
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lhd$c;	b	getStructure
		p	0		context
		p	1		name
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Ladc;Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;)Lhd$c;	b	resolveKey
		p	0		context
		p	1		name
		p	2		registryRef
		p	3		invalidException
	m	(Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;Ladc;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	b	lambda$getRegistryKey$3
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$1
		p	0		id
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lhd$c;	c	getStructureTemplatePool
		p	0		context
		p	1		name
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	c	lambda$static$0
		p	0		id
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_INVALID_FEATURE
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	c	ERROR_INVALID_STRUCTURE
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	d	ERROR_INVALID_TEMPLATE_POOL
	f	Ladc;	e	registryKey
c	eo$a	net/minecraft/commands/arguments/ResourceKeyArgument$Info
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Lgf$a;	a	unpack
		p	1		argumentType
	m	(Leo$a$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Leo$a$a;Lss;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Leo;)Leo$a$a;	a	unpack
		p	1		argumentType
	m	(Lgf$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Lgf$a;Lss;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Lss;)Leo$a$a;	a	deserializeFromNetwork
	m	(Lss;)Lgf$a;	b	deserializeFromNetwork
		p	1		buf
c	eo$a$a	net/minecraft/commands/arguments/ResourceKeyArgument$Info$Template
	m	(Leo$a;Ladc;)V	<init>	<init>
		p	2		registryRef
	m	()Lgf;	a	type
	m	(Ldl;)Leo;	a	instantiate
	m	(Ldl;)Lcom/mojang/brigadier/arguments/ArgumentType;	b	instantiate
		p	1		commandRegistryAccess
	f	Leo$a;	a	this$0
	f	Ladc;	b	registryKey
c	ep	net/minecraft/commands/arguments/ResourceLocationArgument
	m	()Lep;	a	id
	m	(Ladd;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$getRecipe$4
	m	(Lcom/mojang/brigadier/StringReader;)Ladd;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lae;	a	getAdvancement
		p	0		context
		p	1		argumentName
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$3
		p	0		id
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lciy;	b	getRecipe
		p	0		context
		p	1		argumentName
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$2
		p	0		id
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lebl;	c	getPredicate
		p	0		context
		p	1		argumentName
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	c	lambda$static$1
		p	0		id
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Leac;	d	getItemModifier
		p	0		context
		p	1		argumentName
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	d	lambda$static$0
		p	0		id
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ladd;	e	getId
		p	0		context
		p	1		name
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_UNKNOWN_ADVANCEMENT
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	c	ERROR_UNKNOWN_RECIPE
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	d	ERROR_UNKNOWN_PREDICATE
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	e	ERROR_UNKNOWN_ITEM_MODIFIER
c	eq	net/minecraft/commands/arguments/ResourceOrTagArgument
	m	(Ldl;Ladc;)V	<init>	<init>
		p	1		registryAccess
		p	2		registryRef
	m	(Ladc;Lhd$c;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$getResourceOrTag$2
		p	1		entry
	m	(Ladc;Lhh$c;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$getResourceOrTag$3
		p	1		entryList
	m	(Ladd;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$parse$6
	m	(Lcom/mojang/brigadier/StringReader;)Leq$c;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Ladc;)Leq$c;	a	getResourceOrTag
		p	0		context
		p	1		name
		p	2		registryRef
	m	(Ldl;Ladc;)Leq;	a	resourceOrTag
		p	0		registryRef
		p	1		registryAccess
	m	(Leq$c;Ladc;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$getResourceOrTag$4
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		tag
		p	1		type
	m	(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$1
		p	0		tag
		p	1		type
		p	2		expectedType
	m	(Ladd;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	b	lambda$parse$5
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	b	ERROR_UNKNOWN_TAG
	f	Lcom/mojang/brigadier/exceptions/Dynamic3CommandExceptionType;	c	ERROR_INVALID_TAG_TYPE
	f	Lhf;	d	registryLookup
	f	Ladc;	e	registryKey
c	eq$a	net/minecraft/commands/arguments/ResourceOrTagArgument$Info
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Lgf$a;	a	unpack
		p	1		argumentType
	m	(Leq$a$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Leq$a$a;Lss;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Leq;)Leq$a$a;	a	unpack
		p	1		argumentType
	m	(Lgf$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Lgf$a;Lss;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Lss;)Leq$a$a;	a	deserializeFromNetwork
	m	(Lss;)Lgf$a;	b	deserializeFromNetwork
		p	1		buf
c	eq$a$a	net/minecraft/commands/arguments/ResourceOrTagArgument$Info$Template
	m	(Leq$a;Ladc;)V	<init>	<init>
		p	2		registryRef
	m	()Lgf;	a	type
	m	(Ldl;)Leq;	a	instantiate
	m	(Ldl;)Lcom/mojang/brigadier/arguments/ArgumentType;	b	instantiate
		p	1		commandRegistryAccess
	f	Leq$a;	a	this$0
	f	Ladc;	b	registryKey
c	eq$b	net/minecraft/commands/arguments/ResourceOrTagArgument$ResourceResult
	m	()Lcom/mojang/datafixers/util/Either;	a	unwrap
	m	(Ladc;)Ljava/util/Optional;	a	cast
		p	1		registryRef
	m	(Lhd;)Z	a	test
	m	()Ljava/lang/String;	b	asPrintable
	m	()Lhd$c;	c	value
	f	Lhd$c;	a	value
c	eq$c	net/minecraft/commands/arguments/ResourceOrTagArgument$Result
	m	()Lcom/mojang/datafixers/util/Either;	a	unwrap
	m	(Ladc;)Ljava/util/Optional;	a	cast
		p	1		registryRef
	m	()Ljava/lang/String;	b	asPrintable
c	eq$d	net/minecraft/commands/arguments/ResourceOrTagArgument$TagResult
	m	()Lcom/mojang/datafixers/util/Either;	a	unwrap
	m	(Ladc;)Ljava/util/Optional;	a	cast
		p	1		registryRef
	m	(Lhd;)Z	a	test
	m	()Ljava/lang/String;	b	asPrintable
	m	()Lhh$c;	c	tag
	f	Lhh$c;	a	tag
c	er	net/minecraft/commands/arguments/ResourceOrTagKeyArgument
	m	(Ladc;)V	<init>	<init>
		p	1		registryRef
	m	(Ladc;)Ler;	a	resourceOrTagKey
		p	0		registryRef
	m	(Lcom/mojang/brigadier/StringReader;)Ler$c;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Ladc;Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;)Ler$c;	a	getResourceOrTagKey
		p	0		context
		p	1		name
		p	2		registryRef
		p	3		invalidException
	m	(Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;Ler$c;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$getResourceOrTagKey$0
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Ladc;	b	registryKey
c	er$a	net/minecraft/commands/arguments/ResourceOrTagKeyArgument$Info
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Lgf$a;	a	unpack
		p	1		argumentType
	m	(Ler$a$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Ler$a$a;Lss;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Ler;)Ler$a$a;	a	unpack
		p	1		argumentType
	m	(Lgf$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Lgf$a;Lss;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Lss;)Ler$a$a;	a	deserializeFromNetwork
	m	(Lss;)Lgf$a;	b	deserializeFromNetwork
		p	1		buf
c	er$a$a	net/minecraft/commands/arguments/ResourceOrTagKeyArgument$Info$Template
	m	(Ler$a;Ladc;)V	<init>	<init>
		p	2		registryRef
	m	()Lgf;	a	type
	m	(Ldl;)Ler;	a	instantiate
	m	(Ldl;)Lcom/mojang/brigadier/arguments/ArgumentType;	b	instantiate
		p	1		commandRegistryAccess
	f	Ler$a;	a	this$0
	f	Ladc;	b	registryKey
c	er$b	net/minecraft/commands/arguments/ResourceOrTagKeyArgument$ResourceResult
	m	()Lcom/mojang/datafixers/util/Either;	a	unwrap
	m	(Ladc;)Ljava/util/Optional;	a	cast
		p	1		registryRef
	m	(Lhd;)Z	a	test
	m	()Ljava/lang/String;	b	asPrintable
	m	()Ladc;	c	key
	f	Ladc;	a	key
c	er$c	net/minecraft/commands/arguments/ResourceOrTagKeyArgument$Result
	m	()Lcom/mojang/datafixers/util/Either;	a	unwrap
	m	(Ladc;)Ljava/util/Optional;	a	cast
		p	1		registryRef
	m	()Ljava/lang/String;	b	asPrintable
c	er$d	net/minecraft/commands/arguments/ResourceOrTagKeyArgument$TagResult
	m	()Lcom/mojang/datafixers/util/Either;	a	unwrap
	m	(Ladc;)Ljava/util/Optional;	a	cast
		p	1		registryRef
	m	(Lhd;)Z	a	test
	m	()Ljava/lang/String;	b	asPrintable
	m	()Lanv;	c	key
	f	Lanv;	a	key
c	es	net/minecraft/commands/arguments/ScoreHolderArgument
	m	(Z)V	<init>	<init>
		p	1		multiple
	m	()Les;	a	scoreHolder
	m	(Lcom/mojang/brigadier/StringReader;)Les$b;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$static$1
		p	0		context
		p	1		builder
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/lang/String;	a	getName
		p	0		context
		p	1		name
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Ljava/util/function/Supplier;)Ljava/util/Collection;	a	getNames
		p	0		context
		p	1		name
		p	2		players
	m	(Ldr;Ljava/util/function/Supplier;)Ljava/util/Collection;	a	lambda$parse$2
		p	0		source
		p	1		players
	m	(Ljava/util/Collection;Ldr;Ljava/util/function/Supplier;)Ljava/util/Collection;	a	lambda$parse$3
		p	1		source
		p	2		players
	m	()Les;	b	scoreHolders
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)V	b	lambda$static$0
		p	1		builder
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection;	b	getNames
		p	0		context
		p	1		name
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection;	c	getNamesWithDefaultWildcard
		p	0		context
		p	1		name
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	a	SUGGEST_SCORE_HOLDERS
	f	Ljava/util/Collection;	b	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_NO_RESULTS
	f	Z	d	multiple
c	es$a	net/minecraft/commands/arguments/ScoreHolderArgument$Info
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Lgf$a;	a	unpack
		p	1		argumentType
	m	(Les$a$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Les$a$a;Lss;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Les;)Les$a$a;	a	unpack
		p	1		argumentType
	m	(Lgf$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Lgf$a;Lss;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Lss;)Les$a$a;	a	deserializeFromNetwork
	m	(Lss;)Lgf$a;	b	deserializeFromNetwork
		p	1		buf
	f	B	a	FLAG_MULTIPLE
c	es$a$a	net/minecraft/commands/arguments/ScoreHolderArgument$Info$Template
	m	(Les$a;Z)V	<init>	<init>
		p	2		multiple
	m	()Lgf;	a	type
	m	(Ldl;)Les;	a	instantiate
	m	(Ldl;)Lcom/mojang/brigadier/arguments/ArgumentType;	b	instantiate
		p	1		commandRegistryAccess
	f	Les$a;	a	this$0
	f	Z	b	multiple
c	es$b	net/minecraft/commands/arguments/ScoreHolderArgument$Result
	m	(Ldr;Ljava/util/function/Supplier;)Ljava/util/Collection;	getNames	getNames
		p	1		source
		p	2		players
c	es$c	net/minecraft/commands/arguments/ScoreHolderArgument$SelectorResult
	m	(Lfz;)V	<init>	<init>
		p	1		selector
	m	(Ldr;Ljava/util/function/Supplier;)Ljava/util/Collection;	getNames	getNames
		p	1		source
		p	2		players
	f	Lfz;	a	selector
c	et	net/minecraft/commands/arguments/ScoreboardSlotArgument
	m	()Let;	a	displaySlot
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/Integer;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)I	a	getDisplaySlot
		p	0		context
		p	1		name
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		name
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	ERROR_INVALID_VALUE
	f	Ljava/util/Collection;	b	EXAMPLES
c	eu	net/minecraft/commands/arguments/SignedArgument
c	ev	net/minecraft/commands/arguments/SlotArgument
	m	()Lev;	a	slot
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/Integer;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)I	a	getSlot
		p	0		context
		p	1		name
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		name
	m	(Ljava/util/HashMap;)V	a	lambda$static$1
		p	0		map
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_UNKNOWN_SLOT
	f	Ljava/util/Map;	c	SLOTS
c	ew	net/minecraft/commands/arguments/StringRepresentableArgument
	m	(Lcom/mojang/serialization/Codec;Ljava/util/function/Supplier;)V	<init>	<init>
		p	1		codec
		p	2		valuesSupplier
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/Enum;	a	parse
	m	(Ljava/lang/Object;)Ljava/lang/String;	a	lambda$getExamples$3
		p	0		enum_
	m	(Ljava/lang/String;)Ljava/lang/String;	a	convertId
		p	1		name
	m	(Ljava/lang/Object;)Ljava/lang/String;	b	lambda$listSuggestions$2
		p	0		enum_
	m	(Ljava/lang/String;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	b	lambda$parse$1
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	c	lambda$static$0
		p	0		value
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	ERROR_INVALID_VALUE
	f	Lcom/mojang/serialization/Codec;	b	codec
	f	Ljava/util/function/Supplier;	c	values
c	ex	net/minecraft/commands/arguments/TeamArgument
	m	()Lex;	a	team
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/String;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Leea;	a	getTeam
		p	0		context
		p	1		name
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		name
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_TEAM_NOT_FOUND
c	ey	net/minecraft/commands/arguments/TemplateMirrorArgument
	m	()Lew;	a	templateMirror
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lcua;	a	getMirror
		p	0		context
		p	1		id
c	ez	net/minecraft/commands/arguments/TemplateRotationArgument
	m	()Lez;	a	templateRotation
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lcvq;	a	getRotation
		p	0		context
		p	1		id
c	fa	net/minecraft/commands/arguments/TimeArgument
	m	(I)V	<init>	<init>
		p	1		minimum
	m	()Lfa;	a	time
	m	(I)Lfa;	a	time
		p	0		minimum
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/Integer;	a	parse
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		value
		p	1		minimum
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_INVALID_UNIT
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	c	ERROR_TICK_COUNT_TOO_LOW
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	d	UNITS
	f	I	e	minimum
c	fa$a	net/minecraft/commands/arguments/TimeArgument$Info
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Lgf$a;	a	unpack
		p	1		argumentType
	m	(Lfa$a$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Lfa$a$a;Lss;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Lfa;)Lfa$a$a;	a	unpack
		p	1		argumentType
	m	(Lgf$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Lgf$a;Lss;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Lss;)Lfa$a$a;	a	deserializeFromNetwork
	m	(Lss;)Lgf$a;	b	deserializeFromNetwork
		p	1		buf
c	fa$a$a	net/minecraft/commands/arguments/TimeArgument$Info$Template
	m	(Lfa$a;I)V	<init>	<init>
		p	2		minimum
	m	()Lgf;	a	type
	m	(Ldl;)Lfa;	a	instantiate
	m	(Ldl;)Lcom/mojang/brigadier/arguments/ArgumentType;	b	instantiate
		p	1		commandRegistryAccess
	f	Lfa$a;	a	this$0
	f	I	b	min
c	fb	net/minecraft/commands/arguments/UuidArgument
	m	()Lfb;	a	uuid
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/util/UUID;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/UUID;	a	getUuid
		p	0		context
		p	1		name
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_INVALID_UUID
	f	Ljava/util/Collection;	b	EXAMPLES
	f	Ljava/util/regex/Pattern;	c	ALLOWED_CHARACTERS
c	fc	net/minecraft/commands/arguments/blocks/BlockInput
	m	(Ldbq;Ljava/util/Set;Lre;)V	<init>	<init>
		p	1		state
		p	2		properties
		p	3		data
	m	()Ldbq;	a	getState
	m	(Laip;Lgt;)Z	a	test
		p	1		world
		p	2		pos
	m	(Laip;Lgt;I)Z	a	place
		p	1		world
		p	2		pos
		p	3		flags
	m	(Ldbu;)Z	a	test
	m	()Ljava/util/Set;	b	getDefinedProperties
	f	Ldbq;	a	state
	f	Ljava/util/Set;	b	properties
	f	Lre;	c	tag
c	fd	net/minecraft/commands/arguments/blocks/BlockPredicateArgument
	m	(Ldl;)V	<init>	<init>
		p	1		commandRegistryAccess
	m	(Lcom/mojang/brigadier/StringReader;)Lfd$b;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/function/Predicate;	a	getBlockPredicate
		p	0		context
		p	1		name
	m	(Ldl;)Lfd;	a	blockPredicate
		p	0		commandRegistryAccess
	m	(Lff$a;)Lfd$b;	a	lambda$parse$0
		p	0		result
	m	(Lff$b;)Lfd$b;	a	lambda$parse$1
		p	0		result
	m	(Lhf;Lcom/mojang/brigadier/StringReader;)Lfd$b;	a	parse
		p	0		registryWrapper
		p	1		reader
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lhf;	b	blocks
c	fd$a	net/minecraft/commands/arguments/blocks/BlockPredicateArgument$BlockPredicate
	m	(Ldbq;Ljava/util/Set;Lre;)V	<init>	<init>
		p	1		state
		p	2		properties
		p	3		nbt
	m	()Z	a	requiresNbt
	m	(Ldbu;)Z	a	test
	f	Ldbq;	a	state
	f	Ljava/util/Set;	b	properties
	f	Lre;	c	nbt
c	fd$b	net/minecraft/commands/arguments/blocks/BlockPredicateArgument$Result
	m	()Z	a	requiresNbt
c	fd$c	net/minecraft/commands/arguments/blocks/BlockPredicateArgument$TagPredicate
	m	(Lhh;Ljava/util/Map;Lre;)V	<init>	<init>
		p	1		tag
		p	2		properties
		p	3		nbt
	m	()Z	a	requiresNbt
	m	(Ldbu;)Z	a	test
	f	Lhh;	a	tag
	f	Lre;	b	nbt
	f	Ljava/util/Map;	c	vagueProperties
c	fe	net/minecraft/commands/arguments/blocks/BlockStateArgument
	m	(Ldl;)V	<init>	<init>
		p	1		commandRegistryAccess
	m	(Lcom/mojang/brigadier/StringReader;)Lfc;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lfc;	a	getBlock
		p	0		context
		p	1		name
	m	(Ldl;)Lfe;	a	block
		p	0		commandRegistryAccess
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lhf;	b	blocks
c	ff	net/minecraft/commands/arguments/blocks/BlockStateParser
	m	(Lhf;Lcom/mojang/brigadier/StringReader;ZZ)V	<init>	<init>
		p	1		registryWrapper
		p	2		reader
		p	3		allowTag
		p	4		allowSnbt
	m	()V	a	parse
	m	(I)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$readBlock$6
	m	(ILadd;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$readTag$7
	m	(Ladc;)Ljava/lang/String;	a	lambda$serialize$10
		p	0		key
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	suggestPropertyNameOrEnd
		p	1		builder
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ldcu;)Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;	a	addSuggestions
		p	0		builder
		p	1		property
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;	a	suggestVaguePropertyValue
		p	1		builder
		p	2		name
	m	(Ldbq;)Ljava/lang/String;	a	serialize
		p	0		state
	m	(Ldcu;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$readProperties$8
		p	1		builder
	m	(Ldcu;Ljava/lang/String;I)V	a	setValue
		p	1		property
		p	2		value
		p	3		cursor
	m	(Lhf;Lcom/mojang/brigadier/StringReader;Z)Lff$a;	a	parseForBlock
		p	0		registryWrapper
		p	1		reader
		p	2		allowSnbt
	m	(Lhf;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;ZZ)Ljava/util/concurrent/CompletableFuture;	a	fillSuggestions
		p	0		registryWrapper
		p	1		builder
		p	2		allowTag
		p	3		allowSnbt
	m	(Lhf;Ljava/lang/String;Z)Lff$a;	a	parseForBlock
		p	0		registryWrapper
		p	1		string
		p	2		allowSnbt
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$5
		p	0		tag
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$4
		p	0		block
		p	1		property
	m	(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$3
		p	0		block
		p	1		property
		p	2		value
	m	(Ljava/lang/String;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$readVagueProperties$9
		p	2		builder
	m	(Ljava/lang/StringBuilder;Ldcu;Ljava/lang/Comparable;)V	a	appendProperty
		p	0		builder
		p	1		property
		p	2		value
	m	()Z	b	hasBlockEntity
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	b	suggestVaguePropertyNameOrEnd
		p	1		builder
	m	(Lhf;Lcom/mojang/brigadier/StringReader;Z)Lcom/mojang/datafixers/util/Either;	b	parseForTesting
		p	0		registryWrapper
		p	1		reader
		p	2		allowSnbt
	m	(Lhf;Ljava/lang/String;Z)Lcom/mojang/datafixers/util/Either;	b	parseForTesting
		p	0		registryWrapper
		p	1		string
		p	2		allowSnbt
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$0
		p	0		block
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$2
		p	0		block
		p	1		property
	m	()V	c	readBlock
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	c	suggestPropertyName
		p	1		builder
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	c	lambda$static$1
		p	0		block
		p	1		property
	m	()V	d	readTag
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	d	suggestVaguePropertyName
		p	1		builder
	m	()V	e	readProperties
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	e	suggestOpenNbt
		p	1		builder
	m	()V	f	readVagueProperties
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	f	suggestEquals
		p	1		builder
	m	()V	g	readNbt
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	g	suggestNextPropertyOrEnd
		p	1		builder
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	h	suggestOpenVaguePropertiesOrNbt
		p	1		builder
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	i	suggestOpenPropertiesOrNbt
		p	1		builder
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	j	suggestTag
		p	1		builder
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	k	suggestItem
		p	1		builder
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	l	suggestBlockIdOrTag
		p	1		builder
	f	Ljava/util/function/Function;	A	suggestions
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_NO_TAGS_ALLOWED
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_UNKNOWN_BLOCK
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	c	ERROR_UNKNOWN_PROPERTY
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	d	ERROR_DUPLICATE_PROPERTY
	f	Lcom/mojang/brigadier/exceptions/Dynamic3CommandExceptionType;	e	ERROR_INVALID_VALUE
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	f	ERROR_EXPECTED_VALUE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	g	ERROR_EXPECTED_END_OF_PROPERTIES
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	h	ERROR_UNKNOWN_TAG
	f	C	i	SYNTAX_START_PROPERTIES
	f	C	j	SYNTAX_START_NBT
	f	C	k	SYNTAX_END_PROPERTIES
	f	C	l	SYNTAX_EQUALS
	f	C	m	SYNTAX_PROPERTY_SEPARATOR
	f	C	n	SYNTAX_TAG
	f	Ljava/util/function/Function;	o	SUGGEST_NOTHING
	f	Lhf;	p	blocks
	f	Lcom/mojang/brigadier/StringReader;	q	reader
	f	Z	r	forTesting
	f	Z	s	allowNbt
	f	Ljava/util/Map;	t	properties
	f	Ljava/util/Map;	u	vagueProperties
	f	Ladd;	v	id
	f	Ldbr;	w	definition
	f	Ldbq;	x	state
	f	Lre;	y	nbt
	f	Lhh;	z	tag
c	ff$a	net/minecraft/commands/arguments/blocks/BlockStateParser$BlockResult
	m	()Ldbq;	a	blockState
	m	()Ljava/util/Map;	b	properties
	m	()Lre;	c	nbt
	f	Ldbq;	a	blockState
	f	Ljava/util/Map;	b	properties
	f	Lre;	c	nbt
c	ff$b	net/minecraft/commands/arguments/blocks/BlockStateParser$TagResult
	m	()Lhh;	a	tag
	m	()Ljava/util/Map;	b	vagueProperties
	m	()Lre;	c	nbt
	f	Lhh;	a	tag
	f	Ljava/util/Map;	b	vagueProperties
	f	Lre;	c	nbt
c	fg	net/minecraft/commands/arguments/blocks/package-info
c	fh	net/minecraft/commands/arguments/coordinates/BlockPosArgument
	m	()Lfh;	a	blockPos
	m	(Lcom/mojang/brigadier/StringReader;)Lfj;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Laip;Ljava/lang/String;)Lgt;	a	getLoadedBlockPos
		p	0		context
		p	1		world
		p	2		name
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lgt;	a	getLoadedBlockPos
		p	0		context
		p	1		name
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lgt;	b	getBlockPos
		p	0		context
		p	1		name
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lgt;	c	getSpawnablePos
		p	0		context
		p	1		name
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_NOT_LOADED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_OUT_OF_WORLD
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_OUT_OF_BOUNDS
	f	Ljava/util/Collection;	d	EXAMPLES
c	fi	net/minecraft/commands/arguments/coordinates/ColumnPosArgument
	m	()Lfi;	a	columnPos
	m	(Lcom/mojang/brigadier/StringReader;)Lfj;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Laig;	a	getColumnPos
		p	0		context
		p	1		name
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_NOT_COMPLETE
	f	Ljava/util/Collection;	b	EXAMPLES
c	fj	net/minecraft/commands/arguments/coordinates/Coordinates
	m	()Z	a	isXRelative
	m	(Ldr;)Lede;	a	getPosition
		p	1		source
	m	()Z	b	isYRelative
	m	(Ldr;)Ledd;	b	getRotation
		p	1		source
	m	()Z	c	isZRelative
	m	(Ldr;)Lgt;	c	getBlockPos
		p	1		source
c	fk	net/minecraft/commands/arguments/coordinates/LocalCoordinates
	m	(DDD)V	<init>	<init>
		p	1		x
		p	3		y
		p	5		z
	m	()Z	a	isXRelative
	m	(Lcom/mojang/brigadier/StringReader;)Lfk;	a	parse
		p	0		reader
	m	(Lcom/mojang/brigadier/StringReader;I)D	a	readDouble
		p	0		reader
		p	1		startingCursorPos
	m	(Ldr;)Lede;	a	getPosition
		p	1		source
	m	()Z	b	isYRelative
	m	(Ldr;)Ledd;	b	getRotation
		p	1		source
	m	()Z	c	isZRelative
	f	C	a	PREFIX_LOCAL_COORDINATE
	f	D	b	left
	f	D	c	up
	f	D	d	forwards
c	fl	net/minecraft/commands/arguments/coordinates/RotationArgument
	m	()Lfl;	a	rotation
	m	(Lcom/mojang/brigadier/StringReader;)Lfj;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lfj;	a	getRotation
		p	0		context
		p	1		name
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_NOT_COMPLETE
	f	Ljava/util/Collection;	b	EXAMPLES
c	fm	net/minecraft/commands/arguments/coordinates/SwizzleArgument
	m	()Lfm;	a	swizzle
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/util/EnumSet;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/EnumSet;	a	getSwizzle
		p	0		context
		p	1		name
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_INVALID
c	fn	net/minecraft/commands/arguments/coordinates/Vec2Argument
	m	(Z)V	<init>	<init>
		p	1		centerIntegers
	m	()Lfn;	a	vec2
	m	(Lcom/mojang/brigadier/StringReader;)Lfj;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ledd;	a	getVec2
		p	0		context
		p	1		name
	m	(Z)Lfn;	a	vec2
		p	0		centerIntegers
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_NOT_COMPLETE
	f	Ljava/util/Collection;	b	EXAMPLES
	f	Z	c	centerCorrect
c	fo	net/minecraft/commands/arguments/coordinates/Vec3Argument
	m	(Z)V	<init>	<init>
		p	1		centerIntegers
	m	()Lfo;	a	vec3
	m	(Lcom/mojang/brigadier/StringReader;)Lfj;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lede;	a	getVec3
		p	0		context
		p	1		name
	m	(Z)Lfo;	a	vec3
		p	0		centerIntegers
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lfj;	b	getCoordinates
		p	0		context
		p	1		name
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_NOT_COMPLETE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_MIXED_TYPE
	f	Ljava/util/Collection;	c	EXAMPLES
	f	Z	d	centerCorrect
c	fp	net/minecraft/commands/arguments/coordinates/WorldCoordinate
	m	(ZD)V	<init>	<init>
		p	1		relative
		p	2		value
	m	()Z	a	isRelative
	m	(D)D	a	get
		p	1		offset
	m	(Lcom/mojang/brigadier/StringReader;)Lfp;	a	parseInt
		p	0		reader
	m	(Lcom/mojang/brigadier/StringReader;Z)Lfp;	a	parseDouble
		p	0		reader
		p	1		centerIntegers
	m	(Lcom/mojang/brigadier/StringReader;)Z	b	isRelative
		p	0		reader
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_EXPECTED_DOUBLE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_EXPECTED_INT
	f	C	c	PREFIX_RELATIVE
	f	Z	d	relative
	f	D	e	value
c	fq	net/minecraft/commands/arguments/coordinates/WorldCoordinates
	m	(Lfp;Lfp;Lfp;)V	<init>	<init>
		p	1		x
		p	2		y
		p	3		z
	m	()Z	a	isXRelative
	m	(DDD)Lfq;	a	absolute
		p	0		x
		p	2		y
		p	4		z
	m	(Lcom/mojang/brigadier/StringReader;)Lfq;	a	parseInt
		p	0		reader
	m	(Lcom/mojang/brigadier/StringReader;Z)Lfq;	a	parseDouble
		p	0		reader
		p	1		centerIntegers
	m	(Ldr;)Lede;	a	getPosition
		p	1		source
	m	(Ledd;)Lfq;	a	absolute
		p	0		vec
	m	()Z	b	isYRelative
	m	(Ldr;)Ledd;	b	getRotation
		p	1		source
	m	()Z	c	isZRelative
	m	()Lfq;	d	current
	f	Lfp;	a	x
	f	Lfp;	b	y
	f	Lfp;	c	z
c	fr	net/minecraft/commands/arguments/coordinates/package-info
c	fs	net/minecraft/commands/arguments/item/FunctionArgument
	m	()Lfs;	a	functions
	m	(Ladd;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$getFunction$2
	m	(Lcom/mojang/brigadier/StringReader;)Lfs$a;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ladd;)Ldm;	a	getFunction
		p	0		context
		p	1		id
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection;	a	getFunctions
		p	0		context
		p	1		name
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$1
		p	0		id
	m	(Lcom/mojang/brigadier/context/CommandContext;Ladd;)Ljava/util/Collection;	b	getFunctionTag
		p	0		context
		p	1		id
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lcom/mojang/datafixers/util/Pair;	b	getFunctionOrTag
		p	0		context
		p	1		name
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$0
		p	0		id
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_UNKNOWN_TAG
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	c	ERROR_UNKNOWN_FUNCTION
c	fs$1	net/minecraft/commands/arguments/item/FunctionArgument$1
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection;	a	create
		p	1		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)Lcom/mojang/datafixers/util/Pair;	b	unwrap
		p	1		context
	f	Ladd;	a	val$id
	f	Lfs;	b	this$0
c	fs$2	net/minecraft/commands/arguments/item/FunctionArgument$2
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection;	a	create
		p	1		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)Lcom/mojang/datafixers/util/Pair;	b	unwrap
		p	1		context
	f	Ladd;	a	val$id
	f	Lfs;	b	this$0
c	fs$a	net/minecraft/commands/arguments/item/FunctionArgument$Result
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection;	a	create
		p	1		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)Lcom/mojang/datafixers/util/Pair;	b	unwrap
		p	1		context
c	ft	net/minecraft/commands/arguments/item/ItemArgument
	m	(Ldl;)V	<init>	<init>
		p	1		commandRegistryAccess
	m	(Lcom/mojang/brigadier/StringReader;)Lfu;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lfu;	a	getItem
		p	0		context
		p	1		name
	m	(Ldl;)Lft;	a	item
		p	0		commandRegistryAccess
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lhf;	b	items
c	fu	net/minecraft/commands/arguments/item/ItemInput
	m	(Lhd;Lre;)V	<init>	<init>
		p	1		item
		p	2		nbt
	m	()Lcfq;	a	getItem
	m	(IZ)Lcfv;	a	createItemStack
		p	1		amount
		p	2		checkOverstack
	m	(Lcfv;)Z	a	test
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		item
		p	1		maxCount
	m	()Ljava/lang/String;	b	serialize
	m	()Ljava/lang/String;	c	getItemName
	m	()Ljava/lang/Object;	d	lambda$getItemName$1
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	a	ERROR_STACK_TOO_BIG
	f	Lhd;	b	item
	f	Lre;	c	tag
c	fv	net/minecraft/commands/arguments/item/ItemParser
	m	(Lhf;Lcom/mojang/brigadier/StringReader;Z)V	<init>	<init>
		p	1		registryWrapper
		p	2		reader
		p	3		allowTag
	m	()V	a	readItem
	m	(ILadd;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$readTag$6
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	suggestOpenNbt
		p	1		builder
	m	(Lfv;Lhd;)Lfv$a;	a	lambda$parseForTesting$3
		p	1		item
	m	(Lfv;Lhh;)Lfv$b;	a	lambda$parseForTesting$4
		p	1		tag
	m	(Lhf;Lcom/mojang/brigadier/StringReader;)Lfv$a;	a	parseForItem
		p	0		registryWrapper
		p	1		reader
	m	(Lhf;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Z)Ljava/util/concurrent/CompletableFuture;	a	fillSuggestions
		p	0		registryWrapper
		p	1		builder
		p	2		allowTag
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$1
		p	0		tag
	m	()V	b	readTag
	m	(ILadd;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	b	lambda$readItem$5
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	b	suggestTag
		p	1		builder
	m	(Lhf;Lcom/mojang/brigadier/StringReader;)Lcom/mojang/datafixers/util/Either;	b	parseForTesting
		p	0		registryWrapper
		p	1		reader
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$0
		p	0		id
	m	()V	c	readNbt
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	c	suggestItem
		p	1		builder
	m	()V	d	parse
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	d	suggestItemIdOrTag
		p	1		builder
	m	()Ljava/lang/IllegalStateException;	e	lambda$parseForItem$2
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_NO_TAGS_ALLOWED
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_UNKNOWN_ITEM
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	c	ERROR_UNKNOWN_TAG
	f	C	d	SYNTAX_START_NBT
	f	C	e	SYNTAX_TAG
	f	Ljava/util/function/Function;	f	SUGGEST_NOTHING
	f	Lhf;	g	items
	f	Lcom/mojang/brigadier/StringReader;	h	reader
	f	Z	i	allowTags
	f	Lcom/mojang/datafixers/util/Either;	j	result
	f	Lre;	k	nbt
	f	Ljava/util/function/Function;	l	suggestions
c	fv$a	net/minecraft/commands/arguments/item/ItemParser$ItemResult
	m	()Lhd;	a	item
	m	()Lre;	b	nbt
	f	Lhd;	a	item
	f	Lre;	b	nbt
c	fv$b	net/minecraft/commands/arguments/item/ItemParser$TagResult
	m	()Lhh;	a	tag
	m	()Lre;	b	nbt
	f	Lhh;	a	tag
	f	Lre;	b	nbt
c	fw	net/minecraft/commands/arguments/item/ItemPredicateArgument
	m	(Ldl;)V	<init>	<init>
		p	1		commandRegistryAccess
	m	(Lcom/mojang/brigadier/StringReader;)Lfw$a;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/function/Predicate;	a	getItemPredicate
		p	0		context
		p	1		name
	m	(Ldl;)Lfw;	a	itemPredicate
		p	0		commandRegistryAccess
	m	(Lfv$a;)Lfw$a;	a	lambda$parse$1
		p	0		item
	m	(Lfv$a;Lhd;)Z	a	lambda$parse$0
		p	1		item2
	m	(Lfv$b;)Lfw$a;	a	lambda$parse$2
		p	0		tag
	m	(Ljava/util/function/Predicate;Lcfv;)Z	a	lambda$createResult$4
		p	1		stack
	m	(Ljava/util/function/Predicate;Lre;)Lfw$a;	a	createResult
		p	0		predicate
		p	1		nbt
	m	(Ljava/util/function/Predicate;Lre;Lcfv;)Z	a	lambda$createResult$3
		p	2		stack
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lhf;	b	items
c	fw$a	net/minecraft/commands/arguments/item/ItemPredicateArgument$Result
c	fx	net/minecraft/commands/arguments/item/package-info
c	fy	net/minecraft/commands/arguments/package-info
c	fz	net/minecraft/commands/arguments/selector/EntitySelector
	m	(IZZLjava/util/function/Predicate;Lci$c;Ljava/util/function/Function;Lecz;Ljava/util/function/BiConsumer;ZLjava/lang/String;Ljava/util/UUID;Lbfl;Z)V	<init>	<init>
		p	1		count
		p	2		includesNonPlayers
		p	3		localWorldOnly
		p	4		basePredicate
		p	5		distance
		p	6		positionOffset
		p	7		box
		p	8		sorter
		p	9		senderOnly
		p	10		playerName
		p	11		uuid
		p	12		type
		p	13		usesAt
	m	()I	a	getMaxResults
	m	(Ldr;)Lbfh;	a	findSingleEntity
		p	1		source
	m	(Ldr;Lbfh;)Z	a	lambda$findEntities$1
		p	1		entity
	m	(Lecz;Lbfh;)Z	a	lambda$getPredicate$2
		p	1		entity
	m	(Lede;)Ljava/util/function/Predicate;	a	getPredicate
		p	1		pos
	m	(Lede;Lbfh;)Z	a	lambda$getPredicate$3
		p	2		entity
	m	(Lede;Ljava/util/List;)Ljava/util/List;	a	sortAndLimit
		p	1		pos
		p	2		entities
	m	(Ljava/util/List;)Ltj;	a	joinNames
		p	0		entities
	m	(Ljava/util/List;Laip;Lede;Ljava/util/function/Predicate;)V	a	addEntities
		p	1		entities
		p	2		world
		p	3		pos
		p	4		predicate
	m	()Z	b	includesEntities
	m	(Ldr;)Ljava/util/List;	b	findEntities
		p	1		source
	m	(Lede;Ljava/util/List;)V	b	lambda$static$0
		p	0		pos
		p	1		entities
	m	()Z	c	isSelfSelector
	m	(Ldr;)Laiq;	c	findSinglePlayer
		p	1		source
	m	()Z	d	isWorldLimited
	m	(Ldr;)Ljava/util/List;	d	findPlayers
		p	1		source
	m	()Z	e	usesSelector
	m	(Ldr;)V	e	checkPermissions
		p	1		source
	m	()I	f	getResultLimit
	m	(Ldr;)Ljava/util/List;	f	findEntitiesRaw
		p	1		source
	f	I	a	INFINITE
	f	Ljava/util/function/BiConsumer;	b	ORDER_ARBITRARY
	f	Ldfo;	c	ANY_TYPE
	f	I	d	maxResults
	f	Z	e	includesEntities
	f	Z	f	worldLimited
	f	Ljava/util/function/Predicate;	g	predicate
	f	Lci$c;	h	range
	f	Ljava/util/function/Function;	i	position
	f	Lecz;	j	aabb
	f	Ljava/util/function/BiConsumer;	k	order
	f	Z	l	currentEntity
	f	Ljava/lang/String;	m	playerName
	f	Ljava/util/UUID;	n	entityUUID
	f	Ldfo;	o	type
	f	Z	p	usesSelector
c	fz$1	net/minecraft/commands/arguments/selector/EntitySelector$1
	m	()Ljava/lang/Class;	a	getBaseClass
	m	(Lbfh;)Lbfh;	a	tryCast
		p	1		obj
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	tryCast
		p	1		obj
c	ga	net/minecraft/commands/arguments/selector/EntitySelectorParser
	m	(Lcom/mojang/brigadier/StringReader;)V	<init>	<init>
		p	1		reader
	m	(Lcom/mojang/brigadier/StringReader;Z)V	<init>	<init>
		p	1		reader
		p	2		atAllowed
	m	()Z	A	hasGamemodeNotEquals
	m	()Z	B	hasTeamEquals
	m	()Z	C	hasTeamNotEquals
	m	()V	D	setTypeLimitedInversely
	m	()Z	E	isTypeLimited
	m	()Z	F	isTypeLimitedInversely
	m	()Z	G	hasScores
	m	()Z	H	hasAdvancements
	m	()V	I	finalizePredicates
	m	()Lfz;	a	getSelector
	m	(D)V	a	setX
		p	1		x
	m	(DDD)Lecz;	a	createAabb
		p	1		x
		p	3		y
		p	5		z
	m	(I)V	a	setMaxResults
		p	1		limit
	m	(Lbfh;)Z	a	lambda$finalizePredicates$11
		p	1		entity
	m	(Lbfl;)V	a	limitToType
		p	1		entityType
	m	(Lci$c;)V	a	setDistance
		p	1		distance
	m	(Lci$d;)V	a	setLevel
		p	1		levelRange
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)V	a	fillSelectorSuggestions
		p	0		builder
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	a	fillSuggestions
		p	1		builder
		p	2		consumer
	m	(Ldh;)V	a	setRotX
		p	1		pitchRange
	m	(Ldh;Ljava/util/function/ToDoubleFunction;)Ljava/util/function/Predicate;	a	createRotationPredicate
		p	1		angleRange
		p	2		entityToAngle
	m	(Lede;)Lede;	a	lambda$getSelector$10
		p	1		pos
	m	(Lede;Lbfh;Lbfh;)I	a	lambda$static$4
		p	1		entity1
		p	2		entity2
	m	(Lede;Ljava/util/List;)V	a	lambda$static$6
		p	0		pos
		p	1		entities
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$1
		p	0		option
	m	(Ljava/util/function/BiConsumer;)V	a	setOrder
		p	1		sorter
	m	(Ljava/util/function/BiFunction;)V	a	setSuggestions
		p	1		suggestionProvider
	m	(Ljava/util/function/Predicate;)V	a	addPredicate
		p	1		predicate
	m	(Ljava/util/function/ToDoubleFunction;DDLbfh;)Z	a	lambda$createRotationPredicate$12
		p	5		entity
	m	(Z)V	a	setIncludesEntities
		p	1		includesNonPlayers
	m	()V	b	parseSelector
	m	(D)V	b	setY
		p	1		y
	m	(Lbfh;)Z	b	lambda$new$8
		p	0		entity
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	b	suggestNameOrSelector
		p	1		builder
		p	2		consumer
	m	(Ldh;)V	b	setRotY
		p	1		yawRange
	m	(Lede;)Lede;	b	lambda$getSelector$9
		p	0		pos
	m	(Lede;Lbfh;Lbfh;)I	b	lambda$static$2
		p	1		entity1
		p	2		entity2
	m	(Lede;Ljava/util/List;)V	b	lambda$static$5
		p	0		pos
		p	1		entities
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$0
		p	0		selectorType
	m	(Z)V	b	setHasNameEquals
		p	1		selectsName
	m	()V	c	parseNameOrUUID
	m	(D)V	c	setZ
		p	1		z
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	c	suggestName
		p	1		builder
		p	2		consumer
	m	(Lede;Ljava/util/List;)V	c	lambda$static$3
		p	0		pos
		p	1		entities
	m	(Z)V	c	setHasNameNotEquals
		p	1		excludesName
	m	()V	d	parseOptions
	m	(D)V	d	setDeltaX
		p	1		dx
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	d	suggestSelector
		p	1		builder
		p	2		consumer
	m	(Z)V	d	setLimited
		p	1		hasLimit
	m	()Z	e	shouldInvertValue
	m	(D)V	e	setDeltaY
		p	1		dy
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	e	suggestOpenOptions
		p	1		builder
		p	2		consumer
	m	(Z)V	e	setSorted
		p	1		hasSorter
	m	()Z	f	isTag
	m	(D)V	f	setDeltaZ
		p	1		dz
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	f	suggestOptionsKeyOrClose
		p	1		builder
		p	2		consumer
	m	(Z)V	f	setHasGamemodeEquals
		p	1		selectsGameMode
	m	()Lcom/mojang/brigadier/StringReader;	g	getReader
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	g	suggestOptionsKey
		p	1		builder
		p	2		consumer
	m	(Z)V	g	setHasGamemodeNotEquals
		p	1		excludesGameMode
	m	()V	h	setWorldLimited
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	h	suggestOptionsNextOrClose
		p	1		builder
		p	2		consumer
	m	(Z)V	h	setHasTeamEquals
		p	1		selectsTeam
	m	()Lci$c;	i	getDistance
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	i	suggestEquals
		p	1		builder
		p	2		consumer
	m	(Z)V	i	setHasTeamNotEquals
		p	1		excludesTeam
	m	()Lci$d;	j	getLevel
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	j	lambda$static$7
		p	0		builder
		p	1		consumer
	m	(Z)V	j	setHasScores
		p	1		selectsScores
	m	()Ldh;	k	getRotX
	m	(Z)V	k	setHasAdvancements
		p	1		selectsAdvancements
	m	()Ldh;	l	getRotY
	m	()Ljava/lang/Double;	m	getX
	m	()Ljava/lang/Double;	n	getY
	m	()Ljava/lang/Double;	o	getZ
	m	()Ljava/lang/Double;	p	getDeltaX
	m	()Ljava/lang/Double;	q	getDeltaY
	m	()Ljava/lang/Double;	r	getDeltaZ
	m	()Ljava/util/function/BiConsumer;	s	getOrder
	m	()Lfz;	t	parse
	m	()Z	u	isCurrentEntity
	m	()Z	v	hasNameEquals
	m	()Z	w	hasNameNotEquals
	m	()Z	x	isLimited
	m	()Z	y	isSorted
	m	()Z	z	hasGamemodeEquals
	f	Z	A	worldLimited
	f	Lci$c;	B	distance
	f	Lci$d;	C	level
	f	Ljava/lang/Double;	D	x
	f	Ljava/lang/Double;	E	y
	f	Ljava/lang/Double;	F	z
	f	Ljava/lang/Double;	G	deltaX
	f	Ljava/lang/Double;	H	deltaY
	f	Ljava/lang/Double;	I	deltaZ
	f	Ldh;	J	rotX
	f	Ldh;	K	rotY
	f	Ljava/util/function/Predicate;	L	predicate
	f	Ljava/util/function/BiConsumer;	M	order
	f	Z	N	currentEntity
	f	Ljava/lang/String;	O	playerName
	f	I	P	startPosition
	f	Ljava/util/UUID;	Q	entityUUID
	f	Ljava/util/function/BiFunction;	R	suggestions
	f	Z	S	hasNameEquals
	f	Z	T	hasNameNotEquals
	f	Z	U	isLimited
	f	Z	V	isSorted
	f	Z	W	hasGamemodeEquals
	f	Z	X	hasGamemodeNotEquals
	f	Z	Y	hasTeamEquals
	f	Z	Z	hasTeamNotEquals
	f	C	a	SYNTAX_SELECTOR_START
	f	Lbfl;	aa	type
	f	Z	ab	typeInverse
	f	Z	ac	hasScores
	f	Z	ad	hasAdvancements
	f	Z	ae	usesSelectors
	f	C	b	SYNTAX_OPTIONS_KEY_VALUE_SEPARATOR
	f	C	c	SYNTAX_NOT
	f	C	d	SYNTAX_TAG
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	e	ERROR_INVALID_NAME_OR_UUID
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	f	ERROR_UNKNOWN_SELECTOR_TYPE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	g	ERROR_SELECTORS_NOT_ALLOWED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	h	ERROR_MISSING_SELECTOR_TYPE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	i	ERROR_EXPECTED_END_OF_OPTIONS
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	j	ERROR_EXPECTED_OPTION_VALUE
	f	Ljava/util/function/BiConsumer;	k	ORDER_NEAREST
	f	Ljava/util/function/BiConsumer;	l	ORDER_FURTHEST
	f	Ljava/util/function/BiConsumer;	m	ORDER_RANDOM
	f	Ljava/util/function/BiFunction;	n	SUGGEST_NOTHING
	f	C	o	SYNTAX_OPTIONS_START
	f	C	p	SYNTAX_OPTIONS_END
	f	C	q	SYNTAX_OPTIONS_SEPARATOR
	f	C	r	SELECTOR_NEAREST_PLAYER
	f	C	s	SELECTOR_ALL_PLAYERS
	f	C	t	SELECTOR_RANDOM_PLAYERS
	f	C	u	SELECTOR_CURRENT_ENTITY
	f	C	v	SELECTOR_ALL_ENTITIES
	f	Lcom/mojang/brigadier/StringReader;	w	reader
	f	Z	x	allowSelectors
	f	I	y	maxResults
	f	Z	z	includesEntities
c	gb	net/minecraft/commands/arguments/selector/options/EntitySelectorOptions
	m	(Lga;)Z	A	lambda$bootStrap$21
		p	0		reader
	m	(Lga;)V	B	lambda$bootStrap$20
		p	0		reader
	m	(Lga;)Z	C	lambda$bootStrap$19
		p	0		reader
	m	(Lga;)V	D	lambda$bootStrap$18
		p	0		reader
	m	(Lga;)Z	E	lambda$bootStrap$17
		p	0		reader
	m	(Lga;)V	F	lambda$bootStrap$16
		p	0		reader
	m	(Lga;)Z	G	lambda$bootStrap$15
		p	0		reader
	m	(Lga;)V	H	lambda$bootStrap$14
		p	0		reader
	m	(Lga;)Z	I	lambda$bootStrap$13
		p	0		reader
	m	(Lga;)V	J	lambda$bootStrap$12
		p	0		reader
	m	(Lga;)Z	K	lambda$bootStrap$11
		p	0		reader
	m	(Lga;)V	L	lambda$bootStrap$10
		p	0		reader
	m	(Lga;)Z	M	lambda$bootStrap$9
		p	0		reader
	m	(Lga;)V	N	lambda$bootStrap$8
		p	0		reader
	m	(Lga;)Z	O	lambda$bootStrap$7
		p	0		reader
	m	(Lga;)V	P	lambda$bootStrap$6
		p	0		reader
	m	()V	a	bootStrap
	m	(Ladd;ZLbfh;)Z	a	lambda$bootStrap$61
		p	2		entity
	m	(Lanv;ZLbfh;)Z	a	lambda$bootStrap$41
		p	2		entity
	m	(Lbfl;ZLbfh;)Z	a	lambda$bootStrap$43
		p	2		entity
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	a	lambda$bootStrap$30
		p	0		builder
		p	1		consumer
	m	(Lga;)Z	a	lambda$bootStrap$63
		p	0		reader
	m	(Lga;ILadd;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$bootStrap$42
	m	(Lga;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)V	a	suggestNames
		p	0		reader
		p	1		suggestionBuilder
	m	(Lga;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	a	lambda$bootStrap$40
		p	1		builder
		p	2		consumer
	m	(Lga;Ljava/lang/String;I)Lgb$a;	a	get
		p	0		reader
		p	1		option
		p	2		restoreCursor
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$4
		p	0		entity
	m	(Ljava/lang/String;Lgb$a;Ljava/util/function/Predicate;Ltj;)V	a	register
		p	0		id
		p	1		handler
		p	2		condition
		p	3		description
	m	(Ljava/lang/String;ZLbfh;)Z	a	lambda$bootStrap$46
		p	2		entity
	m	(Ljava/util/Map;Lag;)Z	a	lambda$bootStrap$56
		p	1		advancementProgress
	m	(Ljava/util/Map;Lbfh;)Z	a	lambda$bootStrap$58
		p	1		entity
	m	(Lre;ZLbfh;)Z	a	lambda$bootStrap$49
		p	2		entity
	m	(ZLag;)Z	a	lambda$bootStrap$57
		p	1		advancementProgress
	m	(ZLak;)Z	a	lambda$bootStrap$55
		p	1		criterionProgress
	m	(ZLcmf;Lbfh;)Z	a	lambda$bootStrap$34
		p	2		entity
	m	(Lga;)V	b	lambda$bootStrap$62
		p	0		reader
	m	(Lga;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	b	lambda$bootStrap$33
		p	1		builder
		p	2		consumer
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$3
		p	0		gameMode
	m	(Ljava/lang/String;ZLbfh;)Z	b	lambda$bootStrap$37
		p	2		entity
	m	(Ljava/util/Map;Lbfh;)Z	b	lambda$bootStrap$52
		p	1		entity
	m	(Lga;)Z	c	lambda$bootStrap$60
		p	0		reader
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	c	lambda$static$2
		p	0		sortType
	m	(Ljava/lang/String;ZLbfh;)Z	c	lambda$bootStrap$5
		p	2		reader
	m	(Lga;)V	d	lambda$bootStrap$59
		p	0		reader
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	d	lambda$static$1
		p	0		option
	m	(Lga;)Z	e	lambda$bootStrap$54
		p	0		reader
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	e	lambda$static$0
		p	0		option
	m	(Lga;)V	f	lambda$bootStrap$53
		p	0		reader
	m	(Lga;)Z	g	lambda$bootStrap$51
		p	0		reader
	m	(Lga;)V	h	lambda$bootStrap$50
		p	0		reader
	m	(Lga;)Z	i	lambda$bootStrap$48
		p	0		reader
	m	(Lga;)V	j	lambda$bootStrap$47
		p	0		reader
	m	(Lga;)Z	k	lambda$bootStrap$45
		p	0		reader
	m	(Lga;)V	l	lambda$bootStrap$44
		p	0		reader
	m	(Lga;)Z	m	lambda$bootStrap$39
		p	0		reader
	m	(Lga;)V	n	lambda$bootStrap$38
		p	0		reader
	m	(Lga;)Z	o	lambda$bootStrap$36
		p	0		reader
	m	(Lga;)V	p	lambda$bootStrap$35
		p	0		reader
	m	(Lga;)Z	q	lambda$bootStrap$32
		p	0		reader
	m	(Lga;)V	r	lambda$bootStrap$31
		p	0		reader
	m	(Lga;)Z	s	lambda$bootStrap$29
		p	0		reader
	m	(Lga;)V	t	lambda$bootStrap$28
		p	0		reader
	m	(Lga;)Z	u	lambda$bootStrap$27
		p	0		reader
	m	(Lga;)V	v	lambda$bootStrap$26
		p	0		reader
	m	(Lga;)Z	w	lambda$bootStrap$25
		p	0		reader
	m	(Lga;)V	x	lambda$bootStrap$24
		p	0		reader
	m	(Lga;)Z	y	lambda$bootStrap$23
		p	0		reader
	m	(Lga;)V	z	lambda$bootStrap$22
		p	0		reader
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	ERROR_UNKNOWN_OPTION
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_INAPPLICABLE_OPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_RANGE_NEGATIVE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	d	ERROR_LEVEL_NEGATIVE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	e	ERROR_LIMIT_TOO_SMALL
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	f	ERROR_SORT_UNKNOWN
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	g	ERROR_GAME_MODE_INVALID
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	h	ERROR_ENTITY_TYPE_INVALID
	f	Ljava/util/Map;	i	OPTIONS
c	gb$a	net/minecraft/commands/arguments/selector/options/EntitySelectorOptions$Modifier
	m	(Lga;)V	handle	handle
		p	1		reader
c	gb$b	net/minecraft/commands/arguments/selector/options/EntitySelectorOptions$Option
	m	(Lgb$a;Ljava/util/function/Predicate;Ltj;)V	<init>	<init>
		p	1		handler
		p	2		condition
		p	3		description
	m	()Lgb$a;	a	modifier
	m	()Ljava/util/function/Predicate;	b	canUse
	m	()Ltj;	c	description
	f	Lgb$a;	a	modifier
	f	Ljava/util/function/Predicate;	b	canUse
	f	Ltj;	c	description
c	gc	net/minecraft/commands/arguments/selector/options/package-info
c	gd	net/minecraft/commands/arguments/selector/package-info
c	ge	net/minecraft/commands/package-info
c	gf	net/minecraft/commands/synchronization/ArgumentTypeInfo
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Lgf$a;	a	unpack
		p	1		argumentType
	m	(Lgf$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Lgf$a;Lss;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Lss;)Lgf$a;	b	deserializeFromNetwork
		p	1		buf
c	gf$a	net/minecraft/commands/synchronization/ArgumentTypeInfo$Template
	m	()Lgf;	a	type
	m	(Ldl;)Lcom/mojang/brigadier/arguments/ArgumentType;	b	instantiate
		p	1		commandRegistryAccess
c	gg	net/minecraft/commands/synchronization/ArgumentTypeInfos
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Lgf;	a	byClass
		p	0		argumentType
	m	(Lhq;)Lgf;	a	bootstrap
		p	0		registry
	m	(Lhq;Ljava/lang/String;Ljava/lang/Class;Lgf;)Lgf;	a	register
		p	0		registry
		p	1		id
		p	2		clazz
		p	3		serializer
	m	(Ljava/lang/Class;)Z	a	isClassRecognized
		p	0		clazz
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Lgf$a;	b	unpack
		p	0		argumentType
	m	(Ljava/lang/Class;)Ljava/lang/Class;	b	fixClassType
		p	0		clazz
	f	Ljava/util/Map;	a	BY_CLASS
c	gh	net/minecraft/commands/synchronization/ArgumentUtils
	m	(B)Z	a	numberHasMin
		p	0		flags
	m	(Lcom/google/gson/JsonObject;Lcom/mojang/brigadier/arguments/ArgumentType;)V	a	serializeArgumentToJson
		p	0		json
		p	1		argumentType
	m	(Lcom/google/gson/JsonObject;Lgf$a;)V	a	serializeCap
		p	0		json
		p	1		properties
	m	(Lcom/google/gson/JsonObject;Lgf;Lgf$a;)V	a	serializeCap
		p	0		json
		p	1		serializer
		p	2		properties
	m	(Lcom/mojang/brigadier/CommandDispatcher;Lcom/mojang/brigadier/tree/CommandNode;)Lcom/google/gson/JsonObject;	a	serializeNodeToJson
		p	0		dispatcher
		p	1		rootNode
	m	(Lcom/mojang/brigadier/tree/CommandNode;)Ljava/util/Set;	a	findUsedArgumentTypes
		p	0		rootNode
	m	(Lcom/mojang/brigadier/tree/CommandNode;Ljava/util/Set;Ljava/util/Set;)V	a	findUsedArgumentTypes
		p	0		node
		p	1		usedArgumentTypes
		p	2		visitedNodes
	m	(Ljava/util/Set;Ljava/util/Set;Lcom/mojang/brigadier/tree/CommandNode;)V	a	lambda$findUsedArgumentTypes$0
		p	2		child
	m	(ZZ)I	a	createNumberFlags
		p	0		hasMin
		p	1		hasMax
	m	(B)Z	b	numberHasMax
		p	0		flags
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	B	b	NUMBER_FLAG_MIN
	f	B	c	NUMBER_FLAG_MAX
c	gi	net/minecraft/commands/synchronization/SingletonArgumentInfo
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1		typeSupplier
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Lgf$a;	a	unpack
		p	1		argumentType
	m	(Lgf$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Lgf$a;Lss;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Lgi$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Lgi$a;Lss;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Ljava/util/function/Function;)Lgi;	a	contextAware
		p	0		typeSupplier
	m	(Ljava/util/function/Supplier;)Lgi;	a	contextFree
		p	0		typeSupplier
	m	(Ljava/util/function/Supplier;Ldl;)Lcom/mojang/brigadier/arguments/ArgumentType;	a	lambda$contextFree$0
		p	1		commandRegistryAccess
	m	(Lss;)Lgi$a;	a	deserializeFromNetwork
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Lgi$a;	b	unpack
	m	(Lss;)Lgf$a;	b	deserializeFromNetwork
		p	1		buf
	f	Lgi$a;	a	template
c	gi$a	net/minecraft/commands/synchronization/SingletonArgumentInfo$Template
	m	(Lgi;Ljava/util/function/Function;)V	<init>	<init>
		p	2		typeSupplier
	m	()Lgf;	a	type
	m	(Ldl;)Lcom/mojang/brigadier/arguments/ArgumentType;	b	instantiate
		p	1		commandRegistryAccess
	f	Lgi;	a	this$0
	f	Ljava/util/function/Function;	b	constructor
c	gj	net/minecraft/commands/synchronization/SuggestionProviders
	m	(Ladd;)Lcom/mojang/brigadier/suggestion/SuggestionProvider;	a	getProvider
		p	0		id
	m	(Ladd;Lcom/mojang/brigadier/suggestion/SuggestionProvider;)Lcom/mojang/brigadier/suggestion/SuggestionProvider;	a	register
		p	0		id
		p	1		provider
	m	(Lbfl;)Lcom/mojang/brigadier/Message;	a	lambda$static$4
		p	0		entityType
	m	(Lcom/mojang/brigadier/context/CommandContext;Lbfl;)Z	a	lambda$static$3
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$static$5
		p	0		context
		p	1		builder
	m	(Lcom/mojang/brigadier/suggestion/SuggestionProvider;)Ladd;	a	getName
		p	0		provider
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	b	lambda$static$2
		p	0		context
		p	1		builder
	m	(Lcom/mojang/brigadier/suggestion/SuggestionProvider;)Lcom/mojang/brigadier/suggestion/SuggestionProvider;	b	safelySwap
		p	0		provider
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	c	lambda$static$1
		p	0		context
		p	1		builder
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	d	lambda$static$0
		p	0		context
		p	1		builder
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	a	ASK_SERVER
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	b	ALL_RECIPES
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	c	AVAILABLE_SOUNDS
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	d	SUMMONABLE_ENTITIES
	f	Ljava/util/Map;	e	PROVIDERS_BY_NAME
	f	Ladd;	f	DEFAULT_NAME
c	gj$a	net/minecraft/commands/synchronization/SuggestionProviders$Wrapper
	m	(Ladd;Lcom/mojang/brigadier/suggestion/SuggestionProvider;)V	<init>	<init>
		p	1		id
		p	2		provider
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	a	delegate
	f	Ladd;	b	name
c	gk	net/minecraft/commands/synchronization/brigadier/DoubleArgumentInfo
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Lgf$a;	a	unpack
		p	1		argumentType
	m	(Lcom/mojang/brigadier/arguments/DoubleArgumentType;)Lgk$a;	a	unpack
		p	1		argumentType
	m	(Lgf$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Lgf$a;Lss;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Lgk$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Lgk$a;Lss;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Lss;)Lgk$a;	a	deserializeFromNetwork
	m	(Lss;)Lgf$a;	b	deserializeFromNetwork
		p	1		buf
c	gk$a	net/minecraft/commands/synchronization/brigadier/DoubleArgumentInfo$Template
	m	(Lgk;DD)V	<init>	<init>
		p	2		min
		p	4		max
	m	()Lgf;	a	type
	m	(Ldl;)Lcom/mojang/brigadier/arguments/DoubleArgumentType;	a	instantiate
	m	(Ldl;)Lcom/mojang/brigadier/arguments/ArgumentType;	b	instantiate
		p	1		commandRegistryAccess
	f	Lgk;	a	this$0
	f	D	b	min
	f	D	c	max
c	gl	net/minecraft/commands/synchronization/brigadier/FloatArgumentInfo
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Lgf$a;	a	unpack
		p	1		argumentType
	m	(Lcom/mojang/brigadier/arguments/FloatArgumentType;)Lgl$a;	a	unpack
		p	1		argumentType
	m	(Lgf$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Lgf$a;Lss;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Lgl$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Lgl$a;Lss;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Lss;)Lgl$a;	a	deserializeFromNetwork
	m	(Lss;)Lgf$a;	b	deserializeFromNetwork
		p	1		buf
c	gl$a	net/minecraft/commands/synchronization/brigadier/FloatArgumentInfo$Template
	m	(Lgl;FF)V	<init>	<init>
		p	2		min
		p	3		max
	m	()Lgf;	a	type
	m	(Ldl;)Lcom/mojang/brigadier/arguments/FloatArgumentType;	a	instantiate
	m	(Ldl;)Lcom/mojang/brigadier/arguments/ArgumentType;	b	instantiate
		p	1		commandRegistryAccess
	f	Lgl;	a	this$0
	f	F	b	min
	f	F	c	max
c	gm	net/minecraft/commands/synchronization/brigadier/IntegerArgumentInfo
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Lgf$a;	a	unpack
		p	1		argumentType
	m	(Lcom/mojang/brigadier/arguments/IntegerArgumentType;)Lgm$a;	a	unpack
		p	1		argumentType
	m	(Lgf$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Lgf$a;Lss;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Lgm$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Lgm$a;Lss;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Lss;)Lgm$a;	a	deserializeFromNetwork
	m	(Lss;)Lgf$a;	b	deserializeFromNetwork
		p	1		buf
c	gm$a	net/minecraft/commands/synchronization/brigadier/IntegerArgumentInfo$Template
	m	(Lgm;II)V	<init>	<init>
		p	2		min
		p	3		max
	m	()Lgf;	a	type
	m	(Ldl;)Lcom/mojang/brigadier/arguments/IntegerArgumentType;	a	instantiate
	m	(Ldl;)Lcom/mojang/brigadier/arguments/ArgumentType;	b	instantiate
		p	1		commandRegistryAccess
	f	Lgm;	a	this$0
	f	I	b	min
	f	I	c	max
c	gn	net/minecraft/commands/synchronization/brigadier/LongArgumentInfo
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Lgf$a;	a	unpack
		p	1		argumentType
	m	(Lcom/mojang/brigadier/arguments/LongArgumentType;)Lgn$a;	a	unpack
		p	1		argumentType
	m	(Lgf$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Lgf$a;Lss;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Lgn$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Lgn$a;Lss;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Lss;)Lgn$a;	a	deserializeFromNetwork
	m	(Lss;)Lgf$a;	b	deserializeFromNetwork
		p	1		buf
c	gn$a	net/minecraft/commands/synchronization/brigadier/LongArgumentInfo$Template
	m	(Lgn;JJ)V	<init>	<init>
		p	2		min
		p	4		max
	m	()Lgf;	a	type
	m	(Ldl;)Lcom/mojang/brigadier/arguments/LongArgumentType;	a	instantiate
	m	(Ldl;)Lcom/mojang/brigadier/arguments/ArgumentType;	b	instantiate
		p	1		commandRegistryAccess
	f	Lgn;	a	this$0
	f	J	b	min
	f	J	c	max
c	go	net/minecraft/commands/synchronization/brigadier/StringArgumentSerializer
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Lgf$a;	a	unpack
		p	1		argumentType
	m	(Lcom/mojang/brigadier/arguments/StringArgumentType;)Lgo$a;	a	unpack
		p	1		argumentType
	m	(Lgf$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Lgf$a;Lss;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Lgo$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Lgo$a;Lss;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Lss;)Lgo$a;	a	deserializeFromNetwork
	m	(Lss;)Lgf$a;	b	deserializeFromNetwork
		p	1		buf
c	go$1	net/minecraft/commands/synchronization/brigadier/StringArgumentSerializer$1
	f	[I	a	$SwitchMap$com$mojang$brigadier$arguments$StringArgumentType$StringType
c	go$a	net/minecraft/commands/synchronization/brigadier/StringArgumentSerializer$Template
	m	(Lgo;Lcom/mojang/brigadier/arguments/StringArgumentType$StringType;)V	<init>	<init>
		p	2		type
	m	()Lgf;	a	type
	m	(Ldl;)Lcom/mojang/brigadier/arguments/StringArgumentType;	a	instantiate
	m	(Ldl;)Lcom/mojang/brigadier/arguments/ArgumentType;	b	instantiate
		p	1		commandRegistryAccess
	f	Lgo;	a	this$0
	f	Lcom/mojang/brigadier/arguments/StringArgumentType$StringType;	b	type
c	gp	net/minecraft/commands/synchronization/brigadier/package-info
c	gq	net/minecraft/commands/synchronization/package-info
c	gr	net/minecraft/core/AxisCycle
	m	()Lgr;	a	inverse
	m	(DDDLgz$a;)D	a	cycle
		p	1		x
		p	3		y
		p	5		z
		p	7		axis
	m	(IIILgz$a;)I	a	cycle
		p	1		x
		p	2		y
		p	3		z
		p	4		axis
	m	(Lgz$a;)Lgz$a;	a	cycle
		p	1		axis
	m	(Lgz$a;Lgz$a;)Lgr;	a	between
		p	0		from
		p	1		to
	m	()[Lgr;	b	$values
	f	Lgr;	a	NONE
	f	Lgr;	b	FORWARD
	f	Lgr;	c	BACKWARD
	f	[Lgz$a;	d	AXIS_VALUES
	f	[Lgr;	e	VALUES
	f	[Lgr;	f	$VALUES
c	gr$1	net/minecraft/core/AxisCycle$1
	m	()Lgr;	a	inverse
	m	(DDDLgz$a;)D	a	cycle
		p	1		x
		p	3		y
		p	5		z
		p	7		axis
	m	(IIILgz$a;)I	a	cycle
		p	1		x
		p	2		y
		p	3		z
		p	4		axis
	m	(Lgz$a;)Lgz$a;	a	cycle
		p	1		axis
c	gr$2	net/minecraft/core/AxisCycle$2
	m	()Lgr;	a	inverse
	m	(DDDLgz$a;)D	a	cycle
		p	1		x
		p	3		y
		p	5		z
		p	7		axis
	m	(IIILgz$a;)I	a	cycle
		p	1		x
		p	2		y
		p	3		z
		p	4		axis
	m	(Lgz$a;)Lgz$a;	a	cycle
		p	1		axis
c	gr$3	net/minecraft/core/AxisCycle$3
	m	()Lgr;	a	inverse
	m	(DDDLgz$a;)D	a	cycle
		p	1		x
		p	3		y
		p	5		z
		p	7		axis
	m	(IIILgz$a;)I	a	cycle
		p	1		x
		p	2		y
		p	3		z
		p	4		axis
	m	(Lgz$a;)Lgz$a;	a	cycle
		p	1		axis
c	gs	net/minecraft/core/BlockMath
	m	(Lj;)Lj;	a	blockCenterToCorner
	m	(Lj;Lgz;Ljava/util/function/Supplier;)Lj;	a	getUVLockTransform
	m	(Ljava/util/EnumMap;)V	a	lambda$static$1
		p	0		map
	m	(Lj;)Lj;	b	blockCornerToCenter
	m	(Ljava/util/EnumMap;)V	b	lambda$static$0
		p	0		map
	f	Ljava/util/Map;	a	VANILLA_UV_TRANSFORM_LOCAL_TO_GLOBAL
	f	Ljava/util/Map;	b	VANILLA_UV_TRANSFORM_GLOBAL_TO_LOCAL
	f	Lorg/slf4j/Logger;	c	LOGGER
c	gt	net/minecraft/core/BlockPos
	m	(III)V	<init>	<init>
		p	1		x
		p	2		y
		p	3		z
	m	(Lhy;)V	<init>	<init>
		p	1		pos
	m	()J	a	asLong
	m	(DDD)Lgt;	a	containing
		p	0		x
		p	2		y
		p	4		z
	m	(I)Lgt;	a	multiply
	m	(III)J	a	asLong
		p	0		x
		p	1		y
		p	2		z
	m	(IIIIII)Ljava/util/stream/Stream;	a	betweenClosedStream
		p	0		startX
		p	1		startY
		p	2		startZ
		p	3		endX
		p	4		endY
		p	5		endZ
	m	(IIIIIII)Ljava/util/Iterator;	a	lambda$withinManhattan$4
	m	(IILapo;IIIII)Ljava/util/Iterator;	a	lambda$randomBetweenClosed$3
	m	(J)I	a	getX
		p	0		packedPos
	m	(JIII)J	a	offset
		p	0		value
		p	2		x
		p	3		y
		p	4		z
	m	(JLgz;)J	a	offset
		p	0		value
		p	2		direction
	m	(Lapo;IIIIIII)Ljava/lang/Iterable;	a	randomBetweenClosed
		p	0		random
		p	1		count
		p	2		minX
		p	3		minY
		p	4		minZ
		p	5		maxX
		p	6		maxY
		p	7		maxZ
	m	(Lapo;ILgt;I)Ljava/lang/Iterable;	a	randomInCube
		p	0		random
		p	1		count
		p	2		around
		p	3		range
	m	(Lcvq;)Lgt;	a	rotate
		p	1		rotation
	m	(Ldrh;)Ljava/util/stream/Stream;	a	betweenClosedStream
		p	0		box
	m	(Lecz;)Ljava/util/stream/Stream;	a	betweenClosedStream
		p	0		box
	m	(Lgt;)Ljava/util/stream/IntStream;	a	lambda$static$2
		p	0		pos
	m	(Lgt;III)Ljava/lang/Iterable;	a	withinManhattan
		p	0		center
		p	1		rangeX
		p	2		rangeY
		p	3		rangeZ
	m	(Lgt;IILjava/util/function/Predicate;)Ljava/util/Optional;	a	findClosestMatch
		p	0		pos
		p	1		horizontalRange
		p	2		verticalRange
		p	3		condition
	m	(Lgt;ILgz;Lgz;)Ljava/lang/Iterable;	a	spiralAround
		p	0		center
		p	1		radius
		p	2		firstDirection
		p	3		secondDirection
	m	(Lgt;Lgt;)Ljava/lang/Iterable;	a	betweenClosed
		p	0		start
		p	1		end
	m	(Lgz$a;I)Lgt;	a	relative
	m	(Lgz;)Lgt;	a	relative
	m	(Lgz;I)Lgt;	a	relative
	m	(Lgz;Lgz;Lgt;I)Ljava/util/Iterator;	a	lambda$spiralAround$6
	m	(Lhn;)Lgt;	a	containing
		p	0		pos
	m	(Lhy;)Lgt;	a	offset
	m	(Ljava/util/stream/IntStream;)Lcom/mojang/serialization/DataResult;	a	lambda$static$1
		p	0		stream
	m	([I)Lgt;	a	lambda$static$0
		p	0		values
	m	()Lede;	b	getCenter
	m	(I)Lgt;	b	above
		p	1		distance
	m	(III)Lgt;	b	offset
	m	(IIIIII)Ljava/lang/Iterable;	b	betweenClosed
		p	0		startX
		p	1		startY
		p	2		startZ
		p	3		endX
		p	4		endY
		p	5		endZ
	m	(J)I	b	getY
		p	0		packedPos
	m	(Lgt;III)Ljava/util/stream/Stream;	b	withinManhattanStream
		p	0		center
		p	1		maxX
		p	2		maxY
		p	3		maxZ
	m	(Lgt;Lgt;)Ljava/util/stream/Stream;	b	betweenClosedStream
		p	0		start
		p	1		end
	m	(Lgz$a;I)Lhy;	b	relative
		p	1		axis
		p	2		distance
	m	(Lgz;)Lhy;	b	relative
		p	1		direction
	m	(Lgz;I)Lhy;	b	relative
		p	1		direction
		p	2		distance
	m	(Lhy;)Lgt;	b	subtract
	m	()Lgt;	c	above
	m	(I)Lgt;	c	below
	m	(III)Lhy;	c	offset
		p	1		x
		p	2		y
		p	3		z
	m	(IIIIII)Ljava/util/Iterator;	c	lambda$betweenClosed$5
	m	(J)I	c	getZ
		p	0		packedPos
	m	(Lhy;)Lgt;	c	cross
		p	1		pos
	m	()Lgt;	d	below
	m	(I)Lgt;	d	north
		p	1		distance
	m	(J)Lgt;	d	of
		p	0		packedPos
	m	(Lhy;)Lhy;	d	cross
		p	1		vec
	m	()Lgt;	e	north
	m	(I)Lgt;	e	south
		p	1		distance
	m	(J)J	e	getFlatIndex
		p	0		y
	m	(Lhy;)Lhy;	e	subtract
		p	1		vec
	m	()Lgt;	f	south
	m	(I)Lgt;	f	west
		p	1		distance
	m	(Lhy;)Lhy;	f	offset
		p	1		vec
	m	()Lgt;	g	west
	m	(I)Lgt;	g	east
		p	1		distance
	m	()Lgt;	h	east
	m	(I)Lgt;	h	atY
		p	1		y
	m	()Lgt;	i	immutable
	m	(I)Lhy;	i	east
		p	1		distance
	m	()Lgt$a;	j	mutable
	m	(I)Lhy;	j	west
		p	1		distance
	m	()Lhy;	k	east
	m	(I)Lhy;	k	south
		p	1		distance
	m	()Lhy;	l	west
	m	(I)Lhy;	l	north
		p	1		distance
	m	()Lhy;	m	south
	m	(I)Lhy;	m	below
		p	1		distance
	m	()Lhy;	n	north
	m	(I)Lhy;	n	above
		p	1		distance
	m	()Lhy;	o	below
	m	(I)Lhy;	o	multiply
		p	1		scale
	m	()Lhy;	p	above
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lgt;	b	ZERO
	f	I	c	PACKED_Y_LENGTH
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	I	e	PACKED_X_LENGTH
	f	I	h	PACKED_Z_LENGTH
	f	J	i	PACKED_X_MASK
	f	J	j	PACKED_Y_MASK
	f	J	k	PACKED_Z_MASK
	f	I	l	Y_OFFSET
	f	I	m	Z_OFFSET
	f	I	n	X_OFFSET
c	gt$1	net/minecraft/core/BlockPos$1
	m	()Lgt;	a	computeNext
	f	Lgt$a;	a	nextPos
	f	I	b	counter
	f	I	c	val$limit
	f	I	d	val$minX
	f	Lapo;	e	val$random
	f	I	f	val$width
	f	I	g	val$minY
	f	I	h	val$height
	f	I	i	val$minZ
	f	I	j	val$depth
c	gt$2	net/minecraft/core/BlockPos$2
	m	()Lgt;	a	computeNext
	f	I	a	val$originZ
	f	I	b	val$maxDepth
	f	I	c	val$reachX
	f	I	d	val$reachY
	f	I	e	val$reachZ
	f	I	f	val$originX
	f	I	g	val$originY
	f	Lgt$a;	h	cursor
	f	I	i	currentDepth
	f	I	j	maxX
	f	I	k	maxY
	f	I	l	x
	f	I	m	y
	f	Z	n	zMirror
c	gt$3	net/minecraft/core/BlockPos$3
	m	()Lgt;	a	computeNext
	f	I	a	val$end
	f	I	b	val$width
	f	I	c	val$height
	f	I	d	val$minX
	f	I	e	val$minY
	f	I	f	val$minZ
	f	Lgt$a;	g	cursor
	f	I	h	index
c	gt$4	net/minecraft/core/BlockPos$4
	m	()Lgt$a;	a	computeNext
	f	Lgz;	a	val$firstDirection
	f	Lgz;	b	val$secondDirection
	f	Lgt;	c	val$center
	f	I	d	val$radius
	f	[Lgz;	e	directions
	f	Lgt$a;	f	cursor
	f	I	g	legs
	f	I	h	leg
	f	I	i	legSize
	f	I	j	legIndex
	f	I	k	lastX
	f	I	l	lastY
	f	I	m	lastZ
c	gt$5	net/minecraft/core/BlockPos$5
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$Rotation
	f	[I	b	$SwitchMap$net$minecraft$core$Direction$Axis
c	gt$a	net/minecraft/core/BlockPos$MutableBlockPos
	m	(DDD)V	<init>	<init>
		p	1		x
		p	3		y
		p	5		z
	m	(III)V	<init>	<init>
		p	1		x
		p	2		y
		p	3		z
	m	(I)Lgt;	a	multiply
	m	(Lcvq;)Lgt;	a	rotate
		p	1		rotation
	m	(Lgr;III)Lgt$a;	a	set
		p	1		axis
		p	2		x
		p	3		y
		p	4		z
	m	(Lgz$a;I)Lgt;	a	relative
	m	(Lgz$a;II)Lgt$a;	a	clamp
		p	1		axis
		p	2		min
		p	3		max
	m	(Lgz;I)Lgt;	a	relative
	m	(Lhy;III)Lgt$a;	a	setWithOffset
		p	1		pos
		p	2		x
		p	3		y
		p	4		z
	m	(Lhy;Lgz;)Lgt$a;	a	setWithOffset
		p	1		pos
		p	2		direction
	m	(Lhy;Lhy;)Lgt$a;	a	setWithOffset
		p	1		vec1
		p	2		vec2
	m	(DDD)Lgt$a;	b	set
		p	1		x
		p	3		y
		p	5		z
	m	(III)Lgt;	b	offset
	m	(Lgz$a;I)Lhy;	b	relative
		p	1		axis
		p	2		distance
	m	(Lgz;)Lhy;	b	relative
		p	1		direction
	m	(Lgz;I)Lhy;	b	relative
		p	1		direction
		p	2		distance
	m	(III)Lhy;	c	offset
		p	1		x
		p	2		y
		p	3		z
	m	(Lgz;)Lgt$a;	c	move
		p	1		direction
	m	(Lgz;I)Lgt$a;	c	move
		p	1		direction
		p	2		distance
	m	(III)Lgt$a;	d	set
		p	1		x
		p	2		y
		p	3		z
	m	(Lhy;)Lhy;	d	cross
		p	1		vec
	m	(III)Lgt$a;	e	move
		p	1		dx
		p	2		dy
		p	3		dz
	m	(Lhy;)Lhy;	e	subtract
		p	1		vec
	m	(J)Lgt$a;	f	set
		p	1		pos
	m	(Lhy;)Lhy;	f	offset
		p	1		vec
	m	(Lhy;)Lgt$a;	g	set
		p	1		pos
	m	(Lhy;)Lgt$a;	h	move
		p	1		vec
	m	()Lgt;	i	immutable
	m	(I)Lhy;	i	east
		p	1		distance
	m	(I)Lhy;	j	west
		p	1		distance
	m	()Lhy;	k	east
	m	(I)Lhy;	k	south
		p	1		distance
	m	()Lhy;	l	west
	m	(I)Lhy;	l	north
		p	1		distance
	m	()Lhy;	m	south
	m	(I)Lhy;	m	below
		p	1		distance
	m	()Lhy;	n	north
	m	(I)Lhy;	n	above
		p	1		distance
	m	()Lhy;	o	below
	m	(I)Lhy;	o	multiply
		p	1		scale
	m	()Lhy;	p	above
	m	(I)Lgt$a;	p	setX
	m	(I)Lgt$a;	q	setY
	m	(I)Lgt$a;	r	setZ
	m	(I)Lhy;	s	setZ
		p	1		z
	m	(I)Lhy;	t	setY
		p	1		y
	m	(I)Lhy;	u	setX
		p	1		x
c	gu	net/minecraft/core/BlockSource
	m	()D	a	x
	m	()D	b	y
	m	()D	c	z
	m	()Lgt;	d	getPos
	m	()Ldbq;	e	getBlockState
	m	()Lcze;	f	getEntity
	m	()Laip;	g	getLevel
c	gv	net/minecraft/core/BlockSourceImpl
	m	(Laip;Lgt;)V	<init>	<init>
		p	1		world
		p	2		pos
	m	()D	a	x
	m	()D	b	y
	m	()D	c	z
	m	()Lgt;	d	getPos
	m	()Ldbq;	e	getBlockState
	m	()Lcze;	f	getEntity
	m	()Laip;	g	getLevel
	f	Laip;	a	level
	f	Lgt;	b	pos
c	gw	net/minecraft/core/Cursor3D
	m	(IIIIII)V	<init>	<init>
		p	1		startX
		p	2		startY
		p	3		startZ
		p	4		endX
		p	5		endY
		p	6		endZ
	m	()Z	a	advance
	m	()I	b	nextX
	m	()I	c	nextY
	m	()I	d	nextZ
	m	()I	e	getNextType
	f	I	a	TYPE_INSIDE
	f	I	b	TYPE_FACE
	f	I	c	TYPE_EDGE
	f	I	d	TYPE_CORNER
	f	I	e	originX
	f	I	f	originY
	f	I	g	originZ
	f	I	h	width
	f	I	i	height
	f	I	j	depth
	f	I	k	end
	f	I	l	index
	f	I	m	x
	f	I	n	y
	f	I	o	z
c	gx	net/minecraft/core/DefaultedMappedRegistry
	m	(Ljava/lang/String;Ladc;Lcom/mojang/serialization/Lifecycle;Z)V	<init>	<init>
		p	1		defaultId
		p	2		key
		p	3		lifecycle
		p	4		intrusive
	m	()Ladd;	a	getDefaultKey
	m	(I)Ljava/lang/Object;	a	byId
		p	1		index
	m	(ILadc;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Lhd$c;	a	registerMapping
	m	(Ladd;)Ljava/lang/Object;	a	get
		p	1		id
	m	(Lapo;)Ljava/util/Optional;	a	getRandom
		p	1		random
	m	(Ljava/lang/Object;)I	a	getId
		p	1		value
	m	(ILadc;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Lhd;	b	registerMapping
		p	1		rawId
		p	2		key
		p	3		value
		p	4		lifecycle
	m	(Ladd;)Ljava/util/Optional;	b	getOptional
		p	1		id
	m	(Ljava/lang/Object;)Ladd;	b	getKey
		p	1		value
	m	()Ljava/util/Optional;	v	lambda$getRandom$0
	f	Ladd;	b	defaultKey
	f	Lhd$c;	c	defaultValue
c	gy	net/minecraft/core/DefaultedRegistry
	m	()Ladd;	a	getDefaultKey
	m	(I)Ljava/lang/Object;	a	byId
		p	1		index
	m	(Ladd;)Ljava/lang/Object;	a	get
		p	1		id
	m	(Ljava/lang/Object;)Ladd;	b	getKey
		p	1		value
c	gz	net/minecraft/core/Direction
	m	(Ljava/lang/String;IIIILjava/lang/String;Lgz$b;Lgz$a;Lhy;)V	<init>	<init>
		p	3		id
		p	4		idOpposite
		p	5		idHorizontal
		p	6		name
		p	7		direction
		p	8		axis
		p	9		vector
	m	()Ljava/util/stream/Stream;	a	stream
	m	(D)Lgz;	a	fromYRot
		p	0		rotation
	m	(DDD)Lgz;	a	getNearest
		p	0		x
		p	2		y
		p	4		z
	m	(F)Z	a	isFacingAngle
		p	1		yaw
	m	(FFF)Lgz;	a	getNearest
		p	0		x
		p	1		y
		p	2		z
	m	(I)Lgz;	a	from3DDataValue
		p	0		id
	m	(III)Lgz;	a	fromNormal
		p	0		x
		p	1		y
		p	2		z
	m	(Lapo;)Ljava/util/Collection;	a	allShuffled
		p	0		random
	m	(Lbfh;)[Lgz;	a	orderedByNearest
		p	0		entity
	m	(Lbfh;Lgz$a;)Lgz;	a	getFacingAxis
		p	0		entity
		p	1		axis
	m	(Lgt;)Lgz;	a	fromNormal
		p	0		pos
	m	(Lgz$a;)Lgz;	a	getClockWise
		p	1		axis
	m	(Lgz$a;Lgz$b;)Lgz;	a	fromAxisAndDirection
		p	0		axis
		p	1		direction
	m	(Lgz$b;Lgz$a;)Lgz;	a	get
		p	0		direction
		p	1		axis
	m	(Lgz;)Lcom/mojang/serialization/DataResult;	a	verifyVertical
		p	0		direction
	m	(Lgz;Lgz;)Lgz;	a	lambda$static$7
		p	0		direction1
		p	1		direction2
	m	(Lgz;Lgz;Lgz;)[Lgz;	a	makeDirectionArray
		p	0		first
		p	1		second
		p	2		third
	m	(Ljava/lang/String;)Lgz;	a	byName
		p	0		name
	m	(Lorg/joml/Matrix4f;Lgz;)Lgz;	a	rotate
		p	0		matrix
		p	1		direction
	m	()Lorg/joml/Quaternionf;	b	getRotation
	m	(I)Lgz;	b	from2DDataValue
		p	0		value
	m	(Lapo;)Lgz;	b	getRandom
		p	0		random
	m	(Lgz$a;)Lgz;	b	getCounterClockWise
		p	1		axis
	m	(Lgz;)Lgz;	b	lambda$static$6
	m	()Ljava/lang/String;	c	getSerializedName
	m	(I)[Lgz;	c	lambda$static$4
	m	(Lgz;)Ljava/lang/Long;	c	lambda$static$5
		p	0		direction
	m	()I	d	get3DDataValue
	m	(I)[Lgz;	d	lambda$static$1
	m	(Lgz;)I	d	lambda$static$3
		p	0		direction
	m	()I	e	get2DDataValue
	m	(Lgz;)Z	e	lambda$static$2
		p	0		direction
	m	()Lgz$b;	f	getAxisDirection
	m	(Lgz;)I	f	lambda$static$0
		p	0		direction
	m	()Lgz;	g	getOpposite
	m	()Lgz;	h	getClockWise
	m	()Lgz;	i	getCounterClockWise
	m	()I	j	getStepX
	m	()I	k	getStepY
	m	()I	l	getStepZ
	m	()Lorg/joml/Vector3f;	m	step
	m	()Ljava/lang/String;	n	getName
	m	()Lgz$a;	o	getAxis
	m	()F	p	toYRot
	m	()Lhy;	q	getNormal
	m	()Lgz;	r	getClockWiseX
	m	()Lgz;	s	getCounterClockWiseX
	m	()Lgz;	t	getClockWiseZ
	m	()Lgz;	u	getCounterClockWiseZ
	m	()Ljava/lang/String;	v	lambda$verifyVertical$8
	m	()[Lgz;	w	$values
	f	Lgz;	a	DOWN
	f	Lgz;	b	UP
	f	Lgz;	c	NORTH
	f	Lgz;	d	SOUTH
	f	Lgz;	e	WEST
	f	Lgz;	f	EAST
	f	Laqa$a;	g	CODEC
	f	Lcom/mojang/serialization/Codec;	h	VERTICAL_CODEC
	f	I	i	data3d
	f	I	j	oppositeIndex
	f	I	k	data2d
	f	Ljava/lang/String;	l	name
	f	Lgz$a;	m	axis
	f	Lgz$b;	n	axisDirection
	f	Lhy;	o	normal
	f	[Lgz;	p	VALUES
	f	[Lgz;	q	BY_3D_DATA
	f	[Lgz;	r	BY_2D_DATA
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	s	BY_NORMAL
	f	[Lgz;	t	$VALUES
c	gz$1	net/minecraft/core/Direction$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
	f	[I	b	$SwitchMap$net$minecraft$core$Direction$Axis
c	gz$a	net/minecraft/core/Direction$Axis
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()Ljava/lang/String;	a	getName
	m	(DDD)D	a	choose
		p	1		x
		p	3		y
		p	5		z
	m	(III)I	a	choose
		p	1		x
		p	2		y
		p	3		z
	m	(Lapo;)Lgz$a;	a	getRandom
		p	0		random
	m	(Lgz;)Z	a	test
	m	(Ljava/lang/String;)Lgz$a;	a	byName
		p	0		name
	m	()Z	b	isVertical
	m	()Ljava/lang/String;	c	getSerializedName
	m	()Z	d	isHorizontal
	m	()Lgz$c;	e	getPlane
	m	()[Lgz$a;	f	$values
	f	Lgz$a;	a	X
	f	Lgz$a;	b	Y
	f	Lgz$a;	c	Z
	f	[Lgz$a;	d	VALUES
	f	Laqa$a;	e	CODEC
	f	Ljava/lang/String;	f	name
	f	[Lgz$a;	g	$VALUES
c	gz$a$1	net/minecraft/core/Direction$Axis$1
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	(DDD)D	a	choose
		p	1		x
		p	3		y
		p	5		z
	m	(III)I	a	choose
		p	1		x
		p	2		y
		p	3		z
c	gz$a$2	net/minecraft/core/Direction$Axis$2
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	(DDD)D	a	choose
		p	1		x
		p	3		y
		p	5		z
	m	(III)I	a	choose
		p	1		x
		p	2		y
		p	3		z
c	gz$a$3	net/minecraft/core/Direction$Axis$3
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	(DDD)D	a	choose
		p	1		x
		p	3		y
		p	5		z
	m	(III)I	a	choose
		p	1		x
		p	2		y
		p	3		z
c	gz$b	net/minecraft/core/Direction$AxisDirection
	m	(Ljava/lang/String;IILjava/lang/String;)V	<init>	<init>
		p	3		offset
		p	4		description
	m	()I	a	getStep
	m	()Ljava/lang/String;	b	getName
	m	()Lgz$b;	c	opposite
	m	()[Lgz$b;	d	$values
	f	Lgz$b;	a	POSITIVE
	f	Lgz$b;	b	NEGATIVE
	f	I	c	step
	f	Ljava/lang/String;	d	name
	f	[Lgz$b;	e	$VALUES
c	gz$c	net/minecraft/core/Direction$Plane
	m	(Ljava/lang/String;I[Lgz;[Lgz$a;)V	<init>	<init>
		p	3		facingArray
		p	4		axisArray
	m	()Ljava/util/stream/Stream;	a	stream
	m	(Lapo;)Lgz;	a	getRandomDirection
		p	1		random
	m	(Lgz;)Z	a	test
	m	()[Lgz$c;	b	$values
	m	(Lapo;)Lgz$a;	b	getRandomAxis
		p	1		random
	m	(Lapo;)Ljava/util/List;	c	shuffledCopy
		p	1		random
	f	Lgz$c;	a	HORIZONTAL
	f	Lgz$c;	b	VERTICAL
	f	[Lgz;	c	faces
	f	[Lgz$a;	d	axis
	f	[Lgz$c;	e	$VALUES
c	ha	net/minecraft/core/Direction8
	m	(Ljava/lang/String;I[Lgz;)V	<init>	<init>
		p	3		directions
	m	()Ljava/util/Set;	a	getDirections
	m	()I	b	getStepX
	m	()I	c	getStepZ
	m	()[Lha;	d	$values
	f	Lha;	a	NORTH
	f	Lha;	b	NORTH_EAST
	f	Lha;	c	EAST
	f	Lha;	d	SOUTH_EAST
	f	Lha;	e	SOUTH
	f	Lha;	f	SOUTH_WEST
	f	Lha;	g	WEST
	f	Lha;	h	NORTH_WEST
	f	Ljava/util/Set;	i	directions
	f	Lhy;	j	step
	f	[Lha;	k	$VALUES
c	hb	net/minecraft/core/FrontAndTop
	m	(Ljava/lang/String;ILjava/lang/String;Lgz;Lgz;)V	<init>	<init>
		p	3		name
		p	4		facing
		p	5		rotation
	m	()Lgz;	a	front
	m	(Lgz;Lgz;)Lhb;	a	fromFrontAndTop
		p	0		facing
		p	1		rotation
	m	(Lit/unimi/dsi/fastutil/ints/Int2ObjectOpenHashMap;)V	a	lambda$static$0
		p	0		map
	m	()Lgz;	b	top
	m	(Lgz;Lgz;)I	b	lookupKey
		p	0		facing
		p	1		rotation
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Lhb;	d	$values
	f	Lhb;	a	DOWN_EAST
	f	Lhb;	b	DOWN_NORTH
	f	Lhb;	c	DOWN_SOUTH
	f	Lhb;	d	DOWN_WEST
	f	Lhb;	e	UP_EAST
	f	Lhb;	f	UP_NORTH
	f	Lhb;	g	UP_SOUTH
	f	Lhb;	h	UP_WEST
	f	Lhb;	i	WEST_UP
	f	Lhb;	j	EAST_UP
	f	Lhb;	k	NORTH_UP
	f	Lhb;	l	SOUTH_UP
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	m	LOOKUP_TOP_FRONT
	f	Ljava/lang/String;	n	name
	f	Lgz;	o	top
	f	Lgz;	p	front
	f	[Lhb;	q	$VALUES
c	hc	net/minecraft/core/GlobalPos
	m	(Ladc;Lgt;)V	<init>	<init>
		p	1		dimension
		p	2		pos
	m	()Ladc;	a	dimension
	m	(Ladc;Lgt;)Lhc;	a	of
		p	0		dimension
		p	1		pos
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Lgt;	b	pos
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ladc;	b	dimension
	f	Lgt;	c	pos
c	hd	net/minecraft/core/Holder
	m	()Ljava/lang/Object;	a	value
	m	(Ladc;)Z	a	is
		p	1		key
	m	(Ladd;)Z	a	is
		p	1		id
	m	(Lanv;)Z	a	is
		p	1		tag
	m	(Lhg;)Z	a	canSerializeIn
		p	1		owner
	m	(Ljava/lang/Object;)Lhd;	a	direct
		p	0		value
	m	(Ljava/util/function/Predicate;)Z	a	is
		p	1		predicate
	m	()Z	b	isBound
	m	()Ljava/util/stream/Stream;	c	tags
	m	()Lcom/mojang/datafixers/util/Either;	d	unwrap
	m	()Ljava/util/Optional;	e	unwrapKey
	m	()Lhd$b;	f	kind
c	hd$a	net/minecraft/core/Holder$Direct
	m	()Ljava/lang/Object;	a	value
	m	(Ladc;)Z	a	is
		p	1		key
	m	(Ladd;)Z	a	is
		p	1		id
	m	(Lanv;)Z	a	is
		p	1		tag
	m	(Lhg;)Z	a	canSerializeIn
		p	1		owner
	m	(Ljava/util/function/Predicate;)Z	a	is
		p	1		predicate
	m	()Z	b	isBound
	m	()Ljava/util/stream/Stream;	c	tags
	m	()Lcom/mojang/datafixers/util/Either;	d	unwrap
	m	()Ljava/util/Optional;	e	unwrapKey
	m	()Lhd$b;	f	kind
	f	Ljava/lang/Object;	a	value
c	hd$b	net/minecraft/core/Holder$Kind
	m	()[Lhd$b;	a	$values
	f	Lhd$b;	a	REFERENCE
	f	Lhd$b;	b	DIRECT
	f	[Lhd$b;	c	$VALUES
c	hd$c	net/minecraft/core/Holder$Reference
	m	(Lhd$c$a;Lhg;Ladc;Ljava/lang/Object;)V	<init>	<init>
		p	1		referenceType
		p	2		owner
		p	3		registryKey
		p	4		value
	m	()Ljava/lang/Object;	a	value
	m	(Ladc;)Z	a	is
		p	1		key
	m	(Ladd;)Z	a	is
		p	1		id
	m	(Lanv;)Z	a	is
		p	1		tag
	m	(Lhg;)Z	a	canSerializeIn
		p	1		owner
	m	(Lhg;Ladc;)Lhd$c;	a	createStandAlone
		p	0		owner
		p	1		registryKey
	m	(Lhg;Ljava/lang/Object;)Lhd$c;	a	createIntrusive
		p	0		owner
		p	1		value
	m	(Ljava/util/Collection;)V	a	bindTags
		p	1		tags
	m	(Ljava/util/function/Predicate;)Z	a	is
		p	1		predicate
	m	()Z	b	isBound
	m	(Ladc;)V	b	bindKey
		p	1		registryKey
	m	(Ljava/lang/Object;)V	b	bindValue
		p	1		value
	m	()Ljava/util/stream/Stream;	c	tags
	m	()Lcom/mojang/datafixers/util/Either;	d	unwrap
	m	()Ljava/util/Optional;	e	unwrapKey
	m	()Lhd$b;	f	kind
	m	()Ladc;	g	key
	f	Lhg;	a	owner
	f	Ljava/util/Set;	b	tags
	f	Lhd$c$a;	c	type
	f	Ladc;	d	key
	f	Ljava/lang/Object;	e	value
c	hd$c$a	net/minecraft/core/Holder$Reference$Type
	m	()[Lhd$c$a;	a	$values
	f	Lhd$c$a;	a	STAND_ALONE
	f	Lhd$c$a;	b	INTRUSIVE
	f	[Lhd$c$a;	c	$VALUES
c	he	net/minecraft/core/HolderGetter
	m	(Ladc;)Ljava/util/Optional;	a	get
		p	1		key
	m	(Lanv;)Ljava/util/Optional;	a	get
		p	1		tag
	m	(Ladc;)Lhd$c;	b	getOrThrow
		p	1		key
	m	(Lanv;)Lhh$c;	b	getOrThrow
		p	1		tag
	m	(Ladc;)Ljava/lang/IllegalStateException;	c	lambda$getOrThrow$0
	m	(Lanv;)Ljava/lang/IllegalStateException;	c	lambda$getOrThrow$1
c	he$a	net/minecraft/core/HolderGetter$Provider
	m	(Ladc;)Ljava/util/Optional;	a	lookup
		p	1		registryRef
	m	(Ladc;)Lhe;	b	lookupOrThrow
		p	1		registryRef
	m	(Ladc;)Ljava/lang/IllegalStateException;	c	lambda$lookupOrThrow$0
c	hf	net/minecraft/core/HolderLookup
	m	(Ljava/util/function/Predicate;)Lhf;	a	filterElements
		p	1		filter
	m	()Ljava/util/stream/Stream;	b	listElements
	m	()Ljava/util/stream/Stream;	c	listElementIds
	m	()Ljava/util/stream/Stream;	d	listTags
	m	()Ljava/util/stream/Stream;	e	listTagIds
c	hf$1	net/minecraft/core/HolderLookup$1
	m	(Lhf;Lhf;Ljava/util/function/Predicate;)V	<init>	<init>
		p	2		baseWrapper
	m	(Ladc;)Ljava/util/Optional;	a	get
		p	1		key
	m	(Ljava/util/function/Predicate;Lhd$c;)Z	a	lambda$listElements$1
		p	1		entry
	m	()Ljava/util/stream/Stream;	b	listElements
	m	(Ljava/util/function/Predicate;Lhd$c;)Z	b	lambda$get$0
		p	1		entry
	f	Ljava/util/function/Predicate;	a	val$filter
	f	Lhf;	b	this$0
c	hf$a	net/minecraft/core/HolderLookup$Delegate
	m	(Lhf;)V	<init>	<init>
		p	1		baseWrapper
	m	(Ladc;)Ljava/util/Optional;	a	get
		p	1		key
	m	(Lanv;)Ljava/util/Optional;	a	get
		p	1		tag
	m	()Ljava/util/stream/Stream;	b	listElements
	m	()Ljava/util/stream/Stream;	d	listTags
	f	Lhf;	c	parent
c	hf$b	net/minecraft/core/HolderLookup$Provider
	m	()Lhe$a;	a	asGetterLookup
	m	(Ladc;)Ljava/util/Optional;	a	lookup
		p	1		registryRef
	m	(Lhf$c;)Lhf$c;	a	lambda$create$1
		p	0		wrapper
	m	(Ljava/util/stream/Stream;)Lhf$b;	a	create
		p	0		wrappers
	m	(Ladc;)Lhf$c;	b	lookupOrThrow
		p	1		registryRef
	m	(Ladc;)Ljava/lang/IllegalStateException;	e	lambda$lookupOrThrow$0
c	hf$b$1	net/minecraft/core/HolderLookup$Provider$1
	m	(Ladc;)Ljava/util/Optional;	a	lookup
		p	1		registryRef
	m	(Lhf$c;)Lhe;	a	lambda$lookup$0
		p	0		lookup
	f	Lhf$b;	a	this$0
c	hf$b$2	net/minecraft/core/HolderLookup$Provider$2
	m	(Ladc;)Ljava/util/Optional;	a	lookup
		p	1		registryRef
	f	Ljava/util/Map;	a	val$map
c	hf$c	net/minecraft/core/HolderLookup$RegistryLookup
	m	(Lcau;)Lhf;	a	filterFeatures
		p	1		enabledFeatures
	m	(Lcau;Ljava/lang/Object;)Z	a	lambda$filterFeatures$0
		p	1		feature
	m	()Ladc;	f	key
	m	()Lcom/mojang/serialization/Lifecycle;	g	registryLifecycle
c	hf$c$a	net/minecraft/core/HolderLookup$RegistryLookup$Delegate
	m	()Lhf$c;	a	parent
	m	(Ladc;)Ljava/util/Optional;	a	get
		p	1		key
	m	(Lanv;)Ljava/util/Optional;	a	get
		p	1		tag
	m	()Ljava/util/stream/Stream;	b	listElements
	m	()Ljava/util/stream/Stream;	d	listTags
	m	()Ladc;	f	key
	m	()Lcom/mojang/serialization/Lifecycle;	g	registryLifecycle
c	hg	net/minecraft/core/HolderOwner
	m	(Lhg;)Z	a	canSerializeIn
		p	1		other
c	hh	net/minecraft/core/HolderSet
	m	()Ljava/util/stream/Stream;	a	stream
	m	(I)Lhd;	a	get
		p	1		index
	m	(Lapo;)Ljava/util/Optional;	a	getRandomElement
		p	1		random
	m	(Lhd;)Z	a	contains
		p	1		entry
	m	(Lhg;)Z	a	canSerializeIn
		p	1		owner
	m	(Lhg;Lanv;)Lhh$c;	a	emptyNamed
		p	0		owner
		p	1		tagKey
	m	(Ljava/util/List;)Lhh$a;	a	direct
		p	0		entries
	m	(Ljava/util/function/Function;Ljava/util/List;)Lhh$a;	a	direct
		p	0		mapper
		p	1		values
	m	(Ljava/util/function/Function;[Ljava/lang/Object;)Lhh$a;	a	direct
		p	0		mapper
		p	1		values
	m	([Lhd;)Lhh$a;	a	direct
		p	0		entries
	m	()I	b	size
	m	()Lcom/mojang/datafixers/util/Either;	c	unwrap
	m	()Ljava/util/Optional;	d	unwrapKey
c	hh$a	net/minecraft/core/HolderSet$Direct
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		entries
	m	(Lhd;)Z	a	contains
		p	1		entry
	m	()Lcom/mojang/datafixers/util/Either;	c	unwrap
	m	()Ljava/util/Optional;	d	unwrapKey
	m	()Ljava/util/List;	e	contents
	f	Ljava/util/List;	a	contents
	f	Ljava/util/Set;	b	contentsSet
c	hh$b	net/minecraft/core/HolderSet$ListBacked
	m	()Ljava/util/stream/Stream;	a	stream
	m	(I)Lhd;	a	get
		p	1		index
	m	(Lapo;)Ljava/util/Optional;	a	getRandomElement
		p	1		random
	m	(Lhg;)Z	a	canSerializeIn
		p	1		owner
	m	()I	b	size
	m	()Ljava/util/List;	e	contents
c	hh$c	net/minecraft/core/HolderSet$Named
	m	(Lhg;Lanv;)V	<init>	<init>
		p	1		owner
		p	2		tag
	m	(Lhd;)Z	a	contains
		p	1		entry
	m	(Lhg;)Z	a	canSerializeIn
		p	1		owner
	m	(Ljava/util/List;)V	b	bind
		p	1		entries
	m	()Lcom/mojang/datafixers/util/Either;	c	unwrap
	m	()Ljava/util/Optional;	d	unwrapKey
	m	()Ljava/util/List;	e	contents
	m	()Lanv;	f	key
	f	Lhg;	a	owner
	f	Lanv;	b	key
	f	Ljava/util/List;	c	contents
c	hi	net/minecraft/core/IdMap
	m	(I)Ljava/lang/Object;	a	byId
		p	1		index
	m	(Ljava/lang/Object;)I	a	getId
		p	1		value
	m	()I	b	size
	m	(I)Ljava/lang/Object;	b	byIdOrThrow
		p	1		index
	f	I	a	DEFAULT
c	hj	net/minecraft/core/IdMapper
	m	(I)V	<init>	<init>
		p	1		initialSize
	m	(I)Ljava/lang/Object;	a	byId
		p	1		index
	m	(Ljava/lang/Object;)I	a	getId
		p	1		value
	m	(Ljava/lang/Object;I)V	a	addMapping
		p	1		value
		p	2		id
	m	()I	b	size
	m	(Ljava/lang/Object;)V	b	add
		p	1		value
	m	(I)Z	c	contains
		p	1		index
	f	I	b	nextId
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	c	tToId
	f	Ljava/util/List;	d	idToT
c	hk	net/minecraft/core/LayeredRegistryAccess
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		types
	m	(Ljava/util/List;Ljava/util/List;)V	<init>	<init>
		p	1		types
		p	2		registryManagers
	m	()Lhr$b;	a	compositeAccess
	m	(II)Lhr$b;	a	getCompositeAccessForLayers
		p	1		startIndex
		p	2		endIndex
	m	(Ljava/lang/Object;)Lhr$b;	a	getLayer
		p	1		index
	m	(Ljava/lang/Object;Ljava/util/List;)Lhk;	a	replaceFrom
		p	1		type
		p	2		registryManagers
	m	(Ljava/lang/Object;[Lhr$b;)Lhk;	a	replaceFrom
		p	1		type
		p	2		registryManagers
	m	(Ljava/util/List;)Ljava/util/List;	a	lambda$new$0
	m	(Ljava/util/Map;Lhr$d;)V	a	lambda$collectRegistries$1
		p	1		entry
	m	(Ljava/util/Map;Lhr;)V	a	lambda$collectRegistries$2
		p	1		registryManager
	m	(Ljava/util/stream/Stream;)Ljava/util/Map;	a	collectRegistries
		p	0		registryManagers
	m	(Ljava/lang/Object;)Lhr$b;	b	getAccessForLoading
		p	1		type
	m	(Ljava/lang/Object;)Lhr$b;	c	getAccessFrom
		p	1		type
	m	(Ljava/lang/Object;)I	d	getLayerIndexOrThrow
		p	1		type
	f	Ljava/util/List;	a	keys
	f	Ljava/util/List;	b	values
	f	Lhr$b;	c	composite
c	hl	net/minecraft/core/MappedRegistry
	m	(Ladc;Lcom/mojang/serialization/Lifecycle;)V	<init>	<init>
		p	1		key
		p	2		lifecycle
	m	(Ladc;Lcom/mojang/serialization/Lifecycle;Z)V	<init>	<init>
		p	1		key
		p	2		lifecycle
		p	3		intrusive
	m	()Ljava/util/List;	a	holdersInOrder
	m	(I)Ljava/lang/Object;	a	byId
		p	1		index
	m	(ILadc;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Lhd$c;	a	registerMapping
	m	(Ladc;)Ljava/lang/Object;	a	get
		p	1		key
	m	(Ladc;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Lhd$c;	a	register
		p	1		key
		p	2		entry
		p	3		lifecycle
	m	(Ladd;)Ljava/lang/Object;	a	get
		p	1		id
	m	(Lanv;)Lhh$c;	a	getOrCreateTag
		p	1		tag
	m	(Lapo;)Ljava/util/Optional;	a	getRandom
		p	1		random
	m	(Lhd$c;)Ljava/lang/Object;	a	getValueFromNullable
		p	0		entry
	m	(Lhh$c;)V	a	lambda$resetTags$13
		p	0		entryList
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntOpenCustomHashMap;)V	a	lambda$new$0
		p	0		map
	m	(Ljava/lang/Object;)I	a	getId
		p	1		value
	m	(Ljava/lang/Object;Lhd$c;)V	a	lambda$freeze$5
		p	0		value
		p	1		entry
	m	(Ljava/util/Map$Entry;)Ladd;	a	lambda$freeze$7
	m	(Ljava/util/Map;)V	a	bindTags
		p	1		tagEntries
	m	(Ljava/util/Map;Lanv;Ljava/util/List;)V	a	lambda$bindTags$12
		p	2		tag
		p	3		entries
	m	(Ljava/util/Map;Lhd$c;)V	a	lambda$bindTags$9
		p	1		entry
	m	()I	b	size
	m	(ILadc;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Lhd;	b	registerMapping
		p	1		rawId
		p	2		key
		p	3		value
		p	4		lifecycle
	m	(Ladc;)Ljava/util/Optional;	b	getHolder
		p	1		key
	m	(Lanv;)Ljava/util/Optional;	b	getTag
		p	1		tag
	m	(Lhd$c;)V	b	lambda$resetTags$14
		p	0		entry
	m	(Ljava/lang/Object;)Ladd;	b	getKey
		p	1		value
	m	(Ljava/util/Map$Entry;)Z	b	lambda$freeze$6
		p	0		entry
	m	(Ljava/util/Map;Lanv;Ljava/util/List;)V	b	lambda$bindTags$10
		p	2		tag
		p	3		entries
	m	()Ladc;	c	key
	m	(I)Ljava/util/Optional;	c	getHolder
		p	1		rawId
	m	(Ladc;)Z	c	containsKey
		p	1		key
	m	(Ladd;)Z	c	containsKey
		p	1		id
	m	(Ljava/lang/Object;)Ljava/util/Optional;	c	getResourceKey
		p	1		entry
	m	(Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair;	c	lambda$getTags$4
		p	0		entry
	m	()Lcom/mojang/serialization/Lifecycle;	d	registryLifecycle
	m	(Lanv;)Lhh$c;	d	createTag
		p	1		tag
	m	(Ljava/lang/Object;)Lhd;	d	wrapAsHolder
		p	1		value
	m	()Ljava/util/Set;	e	keySet
	m	(Lanv;)Ljava/lang/String;	e	lambda$bindTags$11
		p	0		tag
	m	(Ljava/lang/Object;)Lcom/mojang/serialization/Lifecycle;	e	lifecycle
		p	1		entry
	m	()Ljava/util/Set;	f	registryKeySet
	m	(Ljava/lang/Object;)Lhd$c;	f	createIntrusiveHolder
		p	1		value
	m	()Ljava/util/Set;	g	entrySet
	m	(Ladc;)V	g	validateWrite
		p	1		key
	m	(Ljava/lang/Object;)Lhd$c;	g	lambda$createIntrusiveHolder$8
		p	1		valuex
	m	()Ljava/util/stream/Stream;	h	holders
	m	(Ladc;)Lhd$c;	h	getOrCreateHolderOrThrow
		p	1		key
	m	()Ljava/util/stream/Stream;	i	getTags
	m	(Ladc;)Lhd$c;	i	lambda$getOrCreateHolderOrThrow$3
		p	1		key2
	m	()Ljava/util/stream/Stream;	j	getTagNames
	m	(Ladc;)Lhd$c;	j	lambda$registerMapping$2
		p	1		key
	m	()Z	k	isEmpty
	m	(Ladc;)Ljava/lang/String;	k	lambda$new$1
	m	()Lhq;	l	freeze
	m	()V	m	resetTags
	m	()Lhe;	n	createRegistrationLookup
	m	()Lhg;	o	holderOwner
	m	()Lhf$c;	p	asLookup
	m	()V	v	validateWrite
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ladc;	c	key
	f	Lit/unimi/dsi/fastutil/objects/ObjectList;	d	byId
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	e	toId
	f	Ljava/util/Map;	f	byLocation
	f	Ljava/util/Map;	g	byKey
	f	Ljava/util/Map;	h	byValue
	f	Ljava/util/Map;	i	lifecycles
	f	Lcom/mojang/serialization/Lifecycle;	j	registryLifecycle
	f	Ljava/util/Map;	k	tags
	f	Z	l	frozen
	f	Ljava/util/Map;	m	unregisteredIntrusiveHolders
	f	Ljava/util/List;	n	holdersInOrder
	f	I	o	nextId
	f	Lhf$c;	p	lookup
c	hl$1	net/minecraft/core/MappedRegistry$1
	m	(Ladc;)Ljava/util/Optional;	a	get
		p	1		key
	m	(Lanv;)Ljava/util/Optional;	a	get
		p	1		tag
	m	()Ljava/util/stream/Stream;	b	listElements
	m	()Ljava/util/stream/Stream;	d	listTags
	m	()Ladc;	f	key
	m	()Lcom/mojang/serialization/Lifecycle;	g	registryLifecycle
	f	Lhl;	a	this$0
c	hl$2	net/minecraft/core/MappedRegistry$2
	m	(Ladc;)Ljava/util/Optional;	a	get
		p	1		key
	m	(Lanv;)Ljava/util/Optional;	a	get
		p	1		tag
	m	(Ladc;)Lhd$c;	b	getOrThrow
		p	1		key
	m	(Lanv;)Lhh$c;	b	getOrThrow
		p	1		tag
	f	Lhl;	a	this$0
c	hm	net/minecraft/core/NonNullList
	m	(Ljava/util/List;Ljava/lang/Object;)V	<init>	<init>
		p	1		delegate
		p	2		initialElement
	m	()Lhm;	a	create
	m	(I)Lhm;	a	createWithCapacity
		p	0		size
	m	(ILjava/lang/Object;)Lhm;	a	withSize
		p	0		size
		p	1		defaultValue
	m	(Ljava/lang/Object;[Ljava/lang/Object;)Lhm;	a	of
		p	0		defaultValue
		p	1		values
	f	Ljava/util/List;	a	list
	f	Ljava/lang/Object;	b	defaultValue
c	hn	net/minecraft/core/Position
	m	()D	a	x
	m	()D	b	y
	m	()D	c	z
c	ho	net/minecraft/core/PositionImpl
	m	(DDD)V	<init>	<init>
		p	1		x
		p	3		y
		p	5		z
	m	()D	a	x
	m	()D	b	y
	m	()D	c	z
	f	D	a	x
	f	D	b	y
	f	D	c	z
c	hp	net/minecraft/core/QuartPos
	m	(I)I	a	fromBlock
		p	0		blockCoord
	m	(I)I	b	quartLocal
	m	(I)I	c	toBlock
		p	0		biomeCoord
	m	(I)I	d	fromSection
		p	0		chunkCoord
	m	(I)I	e	toSection
		p	0		biomeCoord
	f	I	a	BITS
	f	I	b	SIZE
	f	I	c	MASK
	f	I	d	SECTION_TO_QUARTS_BITS
c	hq	net/minecraft/core/Registry
	m	(Ladc;)Ljava/lang/Object;	a	get
		p	1		key
	m	(Ladd;)Ljava/lang/Object;	a	get
		p	1		id
	m	(Lanv;)Lhh$c;	a	getOrCreateTag
		p	1		tag
	m	(Lapo;)Ljava/util/Optional;	a	getRandom
		p	1		random
	m	(Lcom/mojang/serialization/DynamicOps;Ladd;)Ljava/lang/Object;	a	lambda$keys$15
		p	1		id
	m	(Lhd;)Lcom/mojang/serialization/Lifecycle;	a	lambda$holderByNameCodec$14
		p	1		entry
	m	(Lhq;ILjava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;	a	registerMapping
		p	0		registry
		p	1		rawId
		p	2		id
		p	3		entry
	m	(Lhq;Ladc;Ljava/lang/Object;)Ljava/lang/Object;	a	register
		p	0		registry
		p	1		key
		p	2		entry
	m	(Lhq;Ladd;Ljava/lang/Object;)Ljava/lang/Object;	a	register
		p	0		registry
		p	1		id
		p	2		entry
	m	(Lhq;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;	a	register
		p	0		registry
		p	1		id
		p	2		entry
	m	(Ljava/lang/Object;)I	a	getId
		p	1		value
	m	(Ljava/util/Map;)V	a	bindTags
		p	1		tagEntries
	m	(Ladc;)Ljava/util/Optional;	b	getHolder
		p	1		key
	m	(Ladd;)Ljava/util/Optional;	b	getOptional
		p	1		id
	m	(Lanv;)Ljava/util/Optional;	b	getTag
		p	1		tag
	m	(Lhd;)Lcom/mojang/serialization/Lifecycle;	b	lambda$holderByNameCodec$13
		p	1		entry
	m	(Lhq;Ladc;Ljava/lang/Object;)Lhd$c;	b	registerForHolder
	m	(Lhq;Ladd;Ljava/lang/Object;)Lhd$c;	b	registerForHolder
	m	(Ljava/lang/Object;)Ladd;	b	getKey
		p	1		value
	m	()Ladc;	c	key
	m	(I)Ljava/util/Optional;	c	getHolder
		p	1		rawId
	m	(Ladc;)Z	c	containsKey
		p	1		key
	m	(Ladd;)Z	c	containsKey
		p	1		id
	m	(Lanv;)Ljava/lang/Iterable;	c	getTagOrEmpty
		p	1		tag
	m	(Lhd;)Lcom/mojang/serialization/DataResult;	c	lambda$holderByNameCodec$12
		p	1		entry
	m	(Ljava/lang/Object;)Ljava/util/Optional;	c	getResourceKey
		p	1		entry
	m	()Lcom/mojang/serialization/Lifecycle;	d	registryLifecycle
	m	(Ladc;)Ljava/util/Optional;	d	getOptional
		p	1		key
	m	(Ladd;)Lcom/mojang/serialization/DataResult;	d	lambda$holderByNameCodec$9
		p	1		id
	m	(Lhd;)Lcom/mojang/serialization/DataResult;	d	lambda$holderByNameCodec$11
	m	(Ljava/lang/Object;)Lhd;	d	wrapAsHolder
		p	1		value
	m	()Ljava/util/Set;	e	keySet
	m	(Ladc;)Ljava/lang/Object;	e	getOrThrow
		p	1		key
	m	(Ladd;)Lcom/mojang/serialization/DataResult;	e	lambda$holderByNameCodec$8
	m	(Lhd;)Ljava/lang/String;	e	lambda$holderByNameCodec$10
	m	(Ljava/lang/Object;)Lcom/mojang/serialization/Lifecycle;	e	lifecycle
		p	1		entry
	m	()Ljava/util/Set;	f	registryKeySet
	m	(Ladc;)Lhd$c;	f	getHolderOrThrow
		p	1		key
	m	(Ladd;)Ljava/lang/String;	f	lambda$holderByNameCodec$7
	m	(Ljava/lang/Object;)Lhd$c;	f	createIntrusiveHolder
		p	1		value
	m	()Ljava/util/Set;	g	entrySet
	m	(Ladc;)Ljava/lang/IllegalStateException;	g	lambda$getHolderOrThrow$16
	m	(Ladd;)Lcom/mojang/serialization/DataResult;	g	lambda$byNameCodec$2
		p	1		id
	m	(Ljava/lang/Object;)I	g	lambda$byNameCodec$6
		p	1		value
	m	()Ljava/util/stream/Stream;	h	holders
	m	(Ladd;)Lcom/mojang/serialization/DataResult;	h	lambda$byNameCodec$1
	m	(Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	h	lambda$byNameCodec$5
		p	1		value
	m	()Ljava/util/stream/Stream;	i	getTags
	m	(Ladd;)Ljava/lang/String;	i	lambda$byNameCodec$0
	m	(Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	i	lambda$byNameCodec$4
	m	()Ljava/util/stream/Stream;	j	getTagNames
	m	(Ljava/lang/Object;)Ljava/lang/String;	j	lambda$byNameCodec$3
	m	()Lhq;	l	freeze
	m	()V	m	resetTags
	m	()Lhg;	o	holderOwner
	m	()Lhf$c;	p	asLookup
	m	()Lcom/mojang/serialization/Codec;	q	byNameCodec
	m	()Lcom/mojang/serialization/Codec;	r	holderByNameCodec
	m	()Ljava/util/stream/Stream;	s	stream
	m	()Lhi;	t	asHolderIdMap
	m	()Lhf$c;	u	asTagAddingLookup
c	hq$1	net/minecraft/core/Registry$1
	m	(I)Ljava/lang/Object;	a	byId
		p	1		index
	m	(Lhd$c;)Lhd;	a	lambda$iterator$0
		p	0		entry
	m	(Lhd;)I	a	getId
		p	1		value
	m	(Ljava/lang/Object;)I	a	getId
		p	1		value
	m	()I	b	size
	m	(I)Lhd;	c	byId
	f	Lhq;	b	this$0
c	hq$2	net/minecraft/core/Registry$2
	m	()Lhf$c;	a	parent
	m	(Lanv;)Ljava/util/Optional;	a	get
		p	1		tag
	m	(Lanv;)Lhh$c;	b	getOrThrow
		p	1		tag
	f	Lhq;	a	this$0
c	hr	net/minecraft/core/RegistryAccess
	m	(Ladc;)Ljava/util/Optional;	a	lookup
		p	1		registryRef
	m	(Lhq;)Lhr$b;	a	fromRegistryOfRegistries
		p	0		registries
	m	(Lhr$d;)Lcom/mojang/serialization/Lifecycle;	a	lambda$allRegistriesLifecycle$1
		p	0		entry
	m	()Ljava/util/stream/Stream;	b	registries
	m	()Lhr$b;	c	freeze
	m	(Ladc;)Ljava/util/Optional;	c	registry
		p	1		key
	m	()Lcom/mojang/serialization/Lifecycle;	d	allRegistriesLifecycle
	m	(Ladc;)Lhq;	d	registryOrThrow
		p	1		key
	m	(Ladc;)Ljava/lang/IllegalStateException;	f	lambda$registryOrThrow$0
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lhr$b;	b	EMPTY
c	hr$1	net/minecraft/core/RegistryAccess$1
	m	()Ljava/util/stream/Stream;	b	registries
	m	()Lhr$b;	c	freeze
	m	(Ladc;)Ljava/util/Optional;	c	registry
		p	1		key
	f	Lhq;	c	val$registries
c	hr$a	net/minecraft/core/RegistryAccess$1FrozenAccess
	m	(Lhr;Ljava/util/stream/Stream;)V	<init>	<init>
		p	2		entryStream
	f	Lhr;	c	this$0
c	hr$b	net/minecraft/core/RegistryAccess$Frozen
c	hr$c	net/minecraft/core/RegistryAccess$ImmutableRegistryAccess
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		registries
	m	(Ljava/util/Map;)V	<init>	<init>
		p	1		registries
	m	(Ljava/util/stream/Stream;)V	<init>	<init>
		p	1		entryStream
	m	()Ljava/util/stream/Stream;	b	registries
	m	(Lhq;)Lhq;	b	lambda$registry$1
		p	0		registry
	m	(Ladc;)Ljava/util/Optional;	c	registry
		p	1		key
	m	(Lhq;)Lhq;	c	lambda$new$0
		p	0		registry
	f	Ljava/util/Map;	c	registries
c	hr$d	net/minecraft/core/RegistryAccess$RegistryEntry
	m	()Ladc;	a	key
	m	(Ladc;Lhq;)Lhr$d;	a	fromUntyped
		p	0		key
		p	1		value
	m	(Ljava/util/Map$Entry;)Lhr$d;	a	fromMapEntry
		p	0		entry
	m	()Lhq;	b	value
	m	()Lhr$d;	c	freeze
	f	Ladc;	a	key
	f	Lhq;	b	value
c	hs	net/minecraft/core/RegistryCodecs
	m	(Ladc;)Lcom/mojang/serialization/Codec;	a	homogeneousList
		p	0		registryRef
	m	(Ladc;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	homogeneousList
		p	0		registryRef
		p	1		elementCodec
	m	(Ladc;Lcom/mojang/serialization/Codec;Z)Lcom/mojang/serialization/Codec;	a	homogeneousList
		p	0		registryRef
		p	1		elementCodec
		p	2		alwaysSerializeAsList
	m	(Ladc;Lcom/mojang/serialization/Lifecycle;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	networkCodec
		p	0		registryRef
		p	1		lifecycle
		p	2		elementCodec
	m	(Ladc;Lcom/mojang/serialization/Lifecycle;Ljava/util/List;)Lhq;	a	lambda$networkCodec$1
		p	2		entries
	m	(Ladc;Lcom/mojang/serialization/Lifecycle;Ljava/util/Map;)Lhq;	a	lambda$fullCodec$4
		p	2		entries
	m	(Ladc;Lcom/mojang/serialization/MapCodec;)Lcom/mojang/serialization/MapCodec;	a	withNameAndId
		p	0		registryRef
		p	1		elementCodec
	m	(Ladc;Lcom/mojang/serialization/MapCodec;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$withNameAndId$0
		p	2		instance
	m	(Ladc;Z)Lcom/mojang/serialization/Codec;	a	homogeneousList
		p	0		registryRef
		p	1		alwaysSerializeAsList
	m	(Lhq;)Ljava/util/Map;	a	lambda$fullCodec$5
		p	0		registry
	m	(Lhz;Lcom/mojang/serialization/Lifecycle;Ladc;Ljava/lang/Object;)V	a	lambda$fullCodec$3
		p	2		key
		p	3		value
	m	(Ladc;Lcom/mojang/serialization/Lifecycle;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	b	fullCodec
		p	0		registryRef
		p	1		lifecycle
		p	2		elementCodec
	m	(Lhq;)Ljava/util/List;	b	lambda$networkCodec$2
		p	0		registry
c	hs$a	net/minecraft/core/RegistryCodecs$RegistryEntry
	m	(Ladc;ILjava/lang/Object;)V	<init>	<init>
		p	1		key
		p	2		rawId
		p	3		value
	m	()Ladc;	a	key
	m	()I	b	id
	m	()Ljava/lang/Object;	c	value
	f	Ladc;	a	key
	f	I	b	id
	f	Ljava/lang/Object;	c	value
c	ht	net/minecraft/core/RegistrySetBuilder
	m	(Ladc;Lcom/mojang/serialization/Lifecycle;Lht$e;)Lht;	a	add
		p	1		registryRef
		p	2		lifecycle
		p	3		bootstrapFunction
	m	(Ladc;Lht$e;)Lht;	a	add
		p	1		registryRef
		p	2		bootstrapFunction
	m	(Lhf$c;)Lhe;	a	wrapContextLookup
		p	0		wrapper
	m	(Lhr$d;)Lhf$c;	a	lambda$buildPatch$6
		p	0		entry
	m	(Lhr;)Lhf$b;	a	build
		p	1		baseRegistryManager
	m	(Lhr;Lhf$b;)Lhf$b;	a	buildPatch
		p	1		baseRegistryManager
		p	2		wrapperLookup
	m	(Lht$a;Lht$g;)Lht$f;	a	lambda$buildPatch$4
		p	1		info
	m	(Ljava/util/Map;Lht$f;)V	a	lambda$buildPatch$5
		p	1		registry
	m	(Lhr$d;)Lhf$c;	b	lambda$build$1
		p	0		entry
	m	(Lhr;)Lht$a;	b	createState
		p	1		registryManager
	m	(Lht$a;Lht$g;)Lhf$c;	b	lambda$build$2
		p	1		info
	m	(Ljava/util/Map;Lht$f;)V	b	lambda$buildPatch$3
		p	1		registry
	m	(Lht$a;Lht$g;)V	c	lambda$createState$0
		p	1		registry
	f	Ljava/util/List;	a	entries
c	ht$1	net/minecraft/core/RegistrySetBuilder$1
	m	(Lhg;Lhf$c;)V	<init>	<init>
		p	1		entryOwner
	m	(Ladc;)Ljava/util/Optional;	a	get
		p	1		key
	f	Lhf$c;	a	val$original
c	ht$a	net/minecraft/core/RegistrySetBuilder$BuildState
	m	()Loa;	a	bootstapContext
	m	(Ladc;Lhf;)Ljava/util/Optional;	a	lambda$fillMissingHolders$4
		p	1		entryLookup
	m	(Ladc;Lht$d;)V	a	lambda$reportRemainingUnreferencedValues$2
		p	1		key
		p	2		value
	m	(Ladd;)Lht$f;	a	lambda$collectReferencedRegistries$6
		p	0		registry
	m	(Lcom/google/common/collect/ImmutableMap$Builder;Lhr$d;)V	a	lambda$create$0
		p	1		entry
	m	(Lcom/google/common/collect/ImmutableMap$Builder;Lht$h;Ladc;)V	a	lambda$create$1
		p	2		registryRef
	m	(Lhd$c;Ljava/util/Iterator;Lhd$c;)V	a	lambda$fillMissingHolders$5
		p	2		entry
	m	(Lhf$b;)V	a	fillMissingHolders
		p	1		lookup
	m	(Lhf$b;Ladd;)Ljava/util/Optional;	a	lambda$fillMissingHolders$3
		p	1		registryId
	m	(Lhg;)V	a	addOwner
		p	1		owner
	m	(Lhr;Ljava/util/stream/Stream;)Lht$a;	a	create
		p	0		dynamicRegistryManager
		p	1		registryRefs
	m	()V	b	reportRemainingUnreferencedValues
	m	()V	c	throwOnError
	m	()Ljava/util/stream/Stream;	d	collectReferencedRegistries
	m	()Lht$b;	e	owner
	m	()Lht$h;	f	lookup
	m	()Ljava/util/Map;	g	registries
	m	()Ljava/util/Map;	h	registeredValues
	m	()Ljava/util/List;	i	errors
	f	Lht$b;	a	owner
	f	Lht$h;	b	lookup
	f	Ljava/util/Map;	c	registries
	f	Ljava/util/Map;	d	registeredValues
	f	Ljava/util/List;	e	errors
c	ht$a$1	net/minecraft/core/RegistrySetBuilder$BuildState$1
	m	(Ladc;)Lhe;	a	lookup
		p	1		registryRef
	m	(Ladc;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Lhd$c;	a	register
		p	1		key
		p	2		value
		p	3		lifecycle
	f	Lht$a;	a	this$0
c	ht$b	net/minecraft/core/RegistrySetBuilder$CompositeOwner
	m	(Lhg;)Z	a	canSerializeIn
		p	1		other
	m	(Lhg;)V	b	add
		p	1		owner
	f	Ljava/util/Set;	a	owners
c	ht$c	net/minecraft/core/RegistrySetBuilder$EmptyTagLookup
	m	(Lhg;)V	<init>	<init>
		p	1		entryOwner
	m	(Lanv;)Ljava/util/Optional;	a	get
		p	1		tag
	f	Lhg;	b	owner
c	ht$d	net/minecraft/core/RegistrySetBuilder$RegisteredValue
	m	()Ljava/lang/Object;	a	value
	m	()Lcom/mojang/serialization/Lifecycle;	b	lifecycle
	f	Ljava/lang/Object;	a	value
	f	Lcom/mojang/serialization/Lifecycle;	b	lifecycle
c	ht$e	net/minecraft/core/RegistrySetBuilder$RegistryBootstrap
	m	(Loa;)V	run	run
		p	1		registerable
c	ht$f	net/minecraft/core/RegistrySetBuilder$RegistryContents
	m	()Lhf$c;	a	buildAsLookup
	m	()Ladc;	b	key
	m	()Lcom/mojang/serialization/Lifecycle;	c	lifecycle
	m	()Ljava/util/Map;	d	values
	f	Ladc;	a	key
	f	Lcom/mojang/serialization/Lifecycle;	b	lifecycle
	f	Ljava/util/Map;	c	values
c	ht$f$1	net/minecraft/core/RegistrySetBuilder$RegistryContents$1
	m	(Ladc;)Ljava/util/Optional;	a	get
		p	1		key
	m	(Lanv;)Ljava/util/Optional;	a	get
		p	1		tag
	m	(Ljava/util/Map$Entry;)Lhd$c;	a	lambda$$1
		p	1		entry
	m	()Ljava/util/stream/Stream;	b	listElements
	m	(Ljava/util/Map$Entry;)Lhd$c;	b	lambda$$0
	m	()Ljava/util/stream/Stream;	d	listTags
	m	()Ladc;	f	key
	m	()Lcom/mojang/serialization/Lifecycle;	g	registryLifecycle
	f	Lht$f;	a	this$0
	f	Ljava/util/Map;	b	entries
c	ht$g	net/minecraft/core/RegistrySetBuilder$RegistryStub
	m	()Ladc;	a	key
	m	(Lht$a;)Lht$f;	a	collectChanges
		p	1		registries
	m	()Lcom/mojang/serialization/Lifecycle;	b	lifecycle
	m	(Lht$a;)V	b	apply
		p	1		registries
	m	()Lht$e;	c	bootstrap
	f	Ladc;	a	key
	f	Lcom/mojang/serialization/Lifecycle;	b	lifecycle
	f	Lht$e;	c	bootstrap
c	ht$h	net/minecraft/core/RegistrySetBuilder$UniversalLookup
	m	(Lhg;)V	<init>	<init>
		p	1		entryOwner
	m	(Ladc;)Ljava/util/Optional;	a	get
		p	1		key
	m	(Ladc;)Lhd$c;	c	getOrCreate
		p	1		key
	m	(Ladc;)Lhd$c;	d	lambda$getOrCreate$0
		p	1		key2
	f	Ljava/util/Map;	a	holders
c	ht$i	net/minecraft/core/RegistrySetBuilder$ValueAndHolder
	m	()Lht$d;	a	value
	m	()Ljava/util/Optional;	b	holder
	f	Lht$d;	a	value
	f	Ljava/util/Optional;	b	holder
c	hu	net/minecraft/core/RegistrySynchronization
	m	()Lcom/mojang/serialization/Codec;	a	makeNetworkCodec
	m	(Ladc;)Lcom/mojang/serialization/DataResult;	a	getNetworkCodec
		p	0		registryRef
	m	(Ladc;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	lambda$makeNetworkCodec$6
		p	1		codec
	m	(Lcom/google/common/collect/ImmutableMap$Builder;Ladc;Lcom/mojang/serialization/Codec;)V	a	put
		p	0		builder
		p	1		key
		p	2		networkCodec
	m	(Lcom/mojang/serialization/codecs/UnboundedMapCodec;)Lcom/mojang/serialization/Codec;	a	captureMap
		p	0		networkCodec
	m	(Lhk;)Ljava/util/stream/Stream;	a	networkedRegistries
		p	0		combinedRegistries
	m	(Lhq;)Lcom/mojang/serialization/DataResult;	a	lambda$makeNetworkCodec$5
		p	0		registry
	m	(Lhr$d;)Lhq;	a	lambda$captureMap$9
		p	0		entry
	m	(Lhr;)Ljava/util/stream/Stream;	a	ownedNetworkableRegistries
		p	0		dynamicRegistryManager
	m	(Lhu$a;)Lcom/mojang/serialization/Codec;	a	lambda$getNetworkCodec$2
		p	0		info
	m	()Lcom/google/common/collect/ImmutableMap;	b	lambda$static$0
	m	(Ladc;)Lcom/mojang/serialization/DataResult;	b	lambda$makeNetworkCodec$7
		p	0		registryRef
	m	(Lhk;)Ljava/util/stream/Stream;	b	networkSafeRegistries
		p	0		combinedRegistries
	m	(Lhr$d;)Ladc;	b	lambda$captureMap$8
		p	0		entry
	m	(Lhr;)Ljava/util/Map;	b	lambda$captureMap$10
		p	0		registryManager
	m	(Ladc;)Lcom/mojang/serialization/DataResult;	c	lambda$getNetworkCodec$4
	m	(Lhr$d;)Z	c	lambda$ownedNetworkableRegistries$1
		p	0		entry
	m	(Ladc;)Ljava/lang/String;	d	lambda$getNetworkCodec$3
	f	Lcom/mojang/serialization/Codec;	a	NETWORK_CODEC
	f	Ljava/util/Map;	b	NETWORKABLE_REGISTRIES
c	hu$a	net/minecraft/core/RegistrySynchronization$NetworkedRegistryData
	m	()Ladc;	a	key
	m	()Lcom/mojang/serialization/Codec;	b	networkCodec
	f	Ladc;	a	key
	f	Lcom/mojang/serialization/Codec;	b	networkCodec
c	hv	net/minecraft/core/Rotations
	m	(FFF)V	<init>	<init>
		p	1		pitch
		p	2		yaw
		p	3		roll
	m	(Lrk;)V	<init>	<init>
		p	1		serialized
	m	()Lrk;	a	save
	m	()F	b	getX
	m	()F	c	getY
	m	()F	d	getZ
	m	()F	e	getWrappedX
	m	()F	f	getWrappedY
	m	()F	g	getWrappedZ
	f	F	a	x
	f	F	b	y
	f	F	c	z
c	hw	net/minecraft/core/SectionPos
	m	(III)V	<init>	<init>
		p	1		x
		p	2		y
		p	3		z
	m	()I	a	x
	m	(D)I	a	posToSectionCoord
		p	0		coord
	m	(I)I	a	blockToSectionCoord
		p	0		coord
	m	(II)I	a	sectionToBlockCoord
		p	0		chunkCoord
		p	1		offset
	m	(III)Lhw;	a	of
		p	0		x
		p	1		y
		p	2		z
	m	(IIIIII)Ljava/util/stream/Stream;	a	betweenClosedStream
		p	0		minX
		p	1		minY
		p	2		minZ
		p	3		maxX
		p	4		maxY
		p	5		maxZ
	m	(IIILit/unimi/dsi/fastutil/longs/LongConsumer;)V	a	aroundAndAtBlockPos
		p	0		x
		p	1		y
		p	2		z
		p	3		consumer
	m	(J)Lhw;	a	of
		p	0		packed
	m	(JIII)J	a	offset
		p	0		packed
		p	2		x
		p	3		y
		p	4		z
	m	(JLgz;)J	a	offset
		p	0		packed
		p	2		direction
	m	(JLit/unimi/dsi/fastutil/longs/LongConsumer;)V	a	aroundAndAtBlockPos
		p	0		pos
		p	2		consumer
	m	(Lclp;I)Lhw;	a	of
		p	0		chunkPos
		p	1		y
	m	(Lclp;III)Ljava/util/stream/Stream;	a	aroundChunk
		p	0		center
		p	1		radius
		p	2		minY
		p	3		maxY
	m	(Lddn;)Lhw;	a	bottomOf
		p	0		chunk
	m	(Ldfh;)Lhw;	a	of
		p	0		entity
	m	(Lgt;)Lhw;	a	of
		p	0		pos
	m	(Lgt;Lit/unimi/dsi/fastutil/longs/LongConsumer;)V	a	aroundAndAtBlockPos
		p	0		pos
		p	1		consumer
	m	(Lhn;)Lhw;	a	of
		p	0		pos
	m	(Lhw;I)Ljava/util/stream/Stream;	a	cube
		p	0		center
		p	1		radius
	m	(S)I	a	sectionRelativeX
		p	0		packedLocalPos
	m	()I	b	y
	m	(D)I	b	blockToSectionCoord
		p	0		coord
	m	(I)I	b	sectionRelative
		p	0		coord
	m	(III)J	b	asLong
		p	0		x
		p	1		y
		p	2		z
	m	(J)I	b	x
		p	0		packed
	m	(Lgt;)S	b	sectionRelativePos
		p	0		pos
	m	(S)I	b	sectionRelativeY
		p	0		packedLocalPos
	m	()I	c	z
	m	(I)I	c	sectionToBlockCoord
		p	0		sectionCoord
	m	(III)Lhy;	c	offset
		p	1		x
		p	2		y
		p	3		z
	m	(J)I	c	y
		p	0		packed
	m	(Lgt;)J	c	asLong
		p	0		pos
	m	(S)I	c	sectionRelativeZ
		p	0		packedLocalPos
	m	()I	d	minBlockX
	m	(III)Lhw;	d	offset
	m	(J)I	d	z
		p	0		packed
	m	(S)I	d	relativeToBlockX
		p	1		packedLocalPos
	m	()I	e	minBlockY
	m	(J)J	e	blockToSection
		p	0		blockPos
	m	(S)I	e	relativeToBlockY
		p	1		packedLocalPos
	m	()I	f	minBlockZ
	m	(J)J	f	getZeroNode
		p	0		pos
	m	(S)I	f	relativeToBlockZ
		p	1		packedLocalPos
	m	()I	g	maxBlockX
	m	(S)Lgt;	g	relativeToBlockPos
		p	1		packedLocalPos
	m	()I	h	maxBlockY
	m	()I	i	maxBlockZ
	m	()Lgt;	j	origin
	m	()Lgt;	q	center
	m	()Lclp;	r	chunk
	m	()J	s	asLong
	m	()Ljava/util/stream/Stream;	t	blocksInside
	f	I	a	SECTION_BITS
	f	I	b	SECTION_SIZE
	f	I	c	SECTION_MASK
	f	I	d	SECTION_HALF_SIZE
	f	I	e	SECTION_MAX_INDEX
	f	I	h	PACKED_X_LENGTH
	f	I	i	PACKED_Y_LENGTH
	f	I	j	PACKED_Z_LENGTH
	f	J	k	PACKED_X_MASK
	f	J	l	PACKED_Y_MASK
	f	J	m	PACKED_Z_MASK
	f	I	n	Y_OFFSET
	f	I	o	Z_OFFSET
	f	I	p	X_OFFSET
	f	I	q	RELATIVE_X_SHIFT
	f	I	r	RELATIVE_Y_SHIFT
	f	I	s	RELATIVE_Z_SHIFT
c	hw$1	net/minecraft/core/SectionPos$1
	f	Lgw;	a	cursor
	f	I	b	val$minX
	f	I	c	val$minY
	f	I	d	val$minZ
	f	I	e	val$maxX
	f	I	f	val$maxY
	f	I	g	val$maxZ
c	hx	net/minecraft/core/UUIDUtil
	m	(JJ)[I	a	leastMostToIntArray
		p	0		uuidMost
		p	2		uuidLeast
	m	(Lcom/mojang/authlib/GameProfile;)Ljava/util/UUID;	a	getOrCreatePlayerUUID
		p	0		profile
	m	(Lcom/mojang/datafixers/util/Either;)Ljava/util/UUID;	a	lambda$static$8
		p	0		either
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/util/UUID;	a	readUUID
		p	0		dynamic
	m	(Ljava/lang/String;)Ljava/util/UUID;	a	createOfflinePlayerUUID
		p	0		nickname
	m	(Ljava/lang/String;Ljava/lang/IllegalArgumentException;)Ljava/lang/String;	a	lambda$static$4
	m	(Ljava/util/UUID;)[I	a	uuidToIntArray
		p	0		uuid
	m	(Ljava/util/stream/IntStream;)Lcom/mojang/serialization/DataResult;	a	lambda$static$0
		p	0		uuidStream
	m	([I)Ljava/util/UUID;	a	uuidFromIntArray
		p	0		array
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	b	lambda$static$5
		p	0		string
	m	(Ljava/lang/String;Ljava/lang/IllegalArgumentException;)Ljava/lang/String;	b	lambda$static$2
	m	(Ljava/util/UUID;)[B	b	uuidToByteArray
		p	0		uuid
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	c	lambda$static$3
		p	0		string
	m	(Ljava/util/UUID;)Ljava/util/UUID;	c	lambda$static$7
		p	0		uuid
	m	(Ljava/util/UUID;)Ljava/util/UUID;	d	lambda$static$6
		p	0		uuid
	m	(Ljava/util/UUID;)Ljava/util/stream/IntStream;	e	lambda$static$1
		p	0		uuid
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcom/mojang/serialization/Codec;	b	STRING_CODEC
	f	Lcom/mojang/serialization/Codec;	c	AUTHLIB_CODEC
	f	I	d	UUID_BYTES
	f	Ljava/lang/String;	e	UUID_PREFIX_OFFLINE_PLAYER
c	hy	net/minecraft/core/Vec3i
	m	(III)V	<init>	<init>
		p	1		x
		p	2		y
		p	3		z
	m	(ILhy;)Lcom/mojang/serialization/DataResult;	a	lambda$offsetCodec$4
		p	1		vec
	m	(Lgz$a;)I	a	get
		p	1		axis
	m	(Lhn;D)Z	a	closerToCenterThan
		p	1		pos
		p	2		distance
	m	(Lhy;)Ljava/util/stream/IntStream;	a	lambda$static$2
		p	0		vec
	m	(Lhy;D)Z	a	closerThan
		p	1		vec
		p	2		distance
	m	(Ljava/util/stream/IntStream;)Lcom/mojang/serialization/DataResult;	a	lambda$static$1
		p	0		stream
	m	([I)Lhy;	a	lambda$static$0
		p	0		coordinates
	m	(ILhy;)Ljava/lang/String;	b	lambda$offsetCodec$3
	m	(Lgz$a;I)Lhy;	b	relative
		p	1		axis
		p	2		distance
	m	(Lgz;)Lhy;	b	relative
		p	1		direction
	m	(Lgz;I)Lhy;	b	relative
		p	1		direction
		p	2		distance
	m	(Lhn;)D	b	distToCenterSqr
		p	1		pos
	m	(DDD)D	c	distToCenterSqr
		p	1		x
		p	3		y
		p	5		z
	m	(III)Lhy;	c	offset
		p	1		x
		p	2		y
		p	3		z
	m	(DDD)D	d	distToLowCornerSqr
		p	1		x
		p	3		y
		p	5		z
	m	(Lhy;)Lhy;	d	cross
		p	1		vec
	m	(Lhy;)Lhy;	e	subtract
		p	1		vec
	m	(Lhy;)Lhy;	f	offset
		p	1		vec
	m	(I)Lhy;	i	east
		p	1		distance
	m	(Lhy;)I	i	compareTo
	m	(I)Lhy;	j	west
		p	1		distance
	m	(Lhy;)D	j	distSqr
		p	1		vec
	m	()Lhy;	k	east
	m	(I)Lhy;	k	south
		p	1		distance
	m	(Lhy;)I	k	distManhattan
		p	1		vec
	m	()Lhy;	l	west
	m	(I)Lhy;	l	north
		p	1		distance
	m	()Lhy;	m	south
	m	(I)Lhy;	m	below
		p	1		distance
	m	()Lhy;	n	north
	m	(I)Lhy;	n	above
		p	1		distance
	m	()Lhy;	o	below
	m	(I)Lhy;	o	multiply
		p	1		scale
	m	()Lhy;	p	above
	m	(I)Lhy;	s	setZ
		p	1		z
	m	(I)Lhy;	t	setY
		p	1		y
	m	()I	u	getX
	m	(I)Lhy;	u	setX
		p	1		x
	m	()I	v	getY
	m	(I)Lcom/mojang/serialization/Codec;	v	offsetCodec
		p	0		maxAbsValue
	m	()I	w	getZ
	m	()Ljava/lang/String;	x	toShortString
	f	I	a	x
	f	I	b	y
	f	I	c	z
	f	Lcom/mojang/serialization/Codec;	f	CODEC
	f	Lhy;	g	ZERO
c	hz	net/minecraft/core/WritableRegistry
	m	(Ladc;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Lhd$c;	a	register
		p	1		key
		p	2		entry
		p	3		lifecycle
	m	(ILadc;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Lhd;	b	registerMapping
		p	1		rawId
		p	2		key
		p	3		value
		p	4		lifecycle
	m	()Z	k	isEmpty
	m	()Lhe;	n	createRegistrationLookup
c	ia	net/minecraft/core/cauldron/CauldronInteraction
	m	()Lit/unimi/dsi/fastutil/objects/Object2ObjectOpenHashMap;	a	newInteractionMap
	m	(Lcmi;Lgt;Lbym;Lbdx;Lcfv;Ldbq;Lamq;)Lbdy;	a	emptyBucket
		p	0		world
		p	1		pos
		p	2		player
		p	3		hand
		p	4		stack
		p	5		state
		p	6		soundEvent
	m	(Ldbq;)Z	a	lambda$bootStrap$9
		p	0		state
	m	(Ldbq;Lcmi;Lgt;Lbym;Lbdx;Lcfv;)Lbdy;	a	lambda$static$16
		p	0		state
		p	1		world
		p	2		pos
		p	3		player
		p	4		hand
		p	5		stack
	m	(Ldbq;Lcmi;Lgt;Lbym;Lbdx;Lcfv;Lcfv;Ljava/util/function/Predicate;Lamq;)Lbdy;	a	fillBucket
		p	0		state
		p	1		world
		p	2		pos
		p	3		player
		p	4		hand
		p	5		stack
		p	6		output
		p	7		fullPredicate
		p	8		soundEvent
	m	(Lit/unimi/dsi/fastutil/objects/Object2ObjectOpenHashMap;)V	a	lambda$newInteractionMap$1
		p	0		map
	m	(Ljava/util/Map;)V	a	addDefaultInteractions
		p	0		behavior
	m	()V	b	bootStrap
	m	(Ldbq;)Z	b	lambda$bootStrap$7
		p	0		state
	m	(Ldbq;Lcmi;Lgt;Lbym;Lbdx;Lcfv;)Lbdy;	b	lambda$static$15
		p	0		state
		p	1		world
		p	2		pos
		p	3		player
		p	4		hand
		p	5		stack
	m	(Ldbq;)Z	c	lambda$bootStrap$3
		p	0		state
	m	(Ldbq;Lcmi;Lgt;Lbym;Lbdx;Lcfv;)Lbdy;	c	lambda$static$14
		p	0		state
		p	1		world
		p	2		pos
		p	3		player
		p	4		hand
		p	5		stack
	m	(Ldbq;Lcmi;Lgt;Lbym;Lbdx;Lcfv;)Lbdy;	d	lambda$static$13
		p	0		state
		p	1		world
		p	2		pos
		p	3		player
		p	4		hand
		p	5		stack
	m	(Ldbq;Lcmi;Lgt;Lbym;Lbdx;Lcfv;)Lbdy;	e	lambda$static$12
		p	0		state
		p	1		world
		p	2		pos
		p	3		player
		p	4		hand
		p	5		stack
	m	(Ldbq;Lcmi;Lgt;Lbym;Lbdx;Lcfv;)Lbdy;	f	lambda$static$11
		p	0		state
		p	1		world
		p	2		pos
		p	3		player
		p	4		hand
		p	5		stack
	m	(Ldbq;Lcmi;Lgt;Lbym;Lbdx;Lcfv;)Lbdy;	g	lambda$bootStrap$10
		p	0		state
		p	1		world
		p	2		pos
		p	3		player
		p	4		hand
		p	5		stack
	m	(Ldbq;Lcmi;Lgt;Lbym;Lbdx;Lcfv;)Lbdy;	h	lambda$bootStrap$8
		p	0		state
		p	1		world
		p	2		pos
		p	3		player
		p	4		hand
		p	5		stack
	m	(Ldbq;Lcmi;Lgt;Lbym;Lbdx;Lcfv;)Lbdy;	i	lambda$bootStrap$6
		p	0		state
		p	1		world
		p	2		pos
		p	3		player
		p	4		hand
		p	5		stack
	m	(Ldbq;Lcmi;Lgt;Lbym;Lbdx;Lcfv;)Lbdy;	interact	interact
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		stack
	m	(Ldbq;Lcmi;Lgt;Lbym;Lbdx;Lcfv;)Lbdy;	j	lambda$bootStrap$5
		p	0		state
		p	1		world
		p	2		pos
		p	3		player
		p	4		hand
		p	5		stack
	m	(Ldbq;Lcmi;Lgt;Lbym;Lbdx;Lcfv;)Lbdy;	k	lambda$bootStrap$4
		p	0		state
		p	1		world
		p	2		pos
		p	3		player
		p	4		hand
		p	5		stack
	m	(Ldbq;Lcmi;Lgt;Lbym;Lbdx;Lcfv;)Lbdy;	l	lambda$bootStrap$2
		p	0		state
		p	1		world
		p	2		pos
		p	3		player
		p	4		hand
		p	5		stack
	m	(Ldbq;Lcmi;Lgt;Lbym;Lbdx;Lcfv;)Lbdy;	m	lambda$newInteractionMap$0
		p	0		state
		p	1		world
		p	2		pos
		p	3		player
		p	4		hand
		p	5		stack
	f	Ljava/util/Map;	a	EMPTY
	f	Ljava/util/Map;	b	WATER
	f	Ljava/util/Map;	c	LAVA
	f	Ljava/util/Map;	d	POWDER_SNOW
	f	Lia;	e	FILL_WATER
	f	Lia;	f	FILL_LAVA
	f	Lia;	g	FILL_POWDER_SNOW
	f	Lia;	h	SHULKER_BOX
	f	Lia;	i	BANNER
	f	Lia;	j	DYED_ITEM
c	ib	net/minecraft/core/cauldron/package-info
c	ic	net/minecraft/core/dispenser/AbstractProjectileDispenseBehavior
	m	()F	a	getUncertainty
	m	(Lcmi;Lhn;Lcfv;)Lbze;	a	getProjectile
		p	1		world
		p	2		position
		p	3		stack
	m	(Lgu;)V	a	playSound
		p	1		pointer
	m	(Lgu;Lcfv;)Lcfv;	a	execute
		p	1		pointer
		p	2		stack
	m	()F	b	getPower
c	id	net/minecraft/core/dispenser/BoatDispenseItemBehavior
	m	(Lcaf$b;)V	<init>	<init>
		p	1		type
	m	(Lcaf$b;Z)V	<init>	<init>
		p	1		boatType
		p	2		chest
	m	(Lgu;)V	a	playSound
		p	1		pointer
	m	(Lgu;Lcfv;)Lcfv;	a	execute
		p	1		pointer
		p	2		stack
	f	Lie;	c	defaultDispenseItemBehavior
	f	Lcaf$b;	d	type
	f	Z	e	isChestBoat
c	ie	net/minecraft/core/dispenser/DefaultDispenseItemBehavior
	m	(Lcmi;Lcfv;ILgz;Lhn;)V	a	spawnItem
		p	0		world
		p	1		stack
		p	2		speed
		p	3		side
		p	4		pos
	m	(Lgu;)V	a	playSound
		p	1		pointer
	m	(Lgu;Lcfv;)Lcfv;	a	execute
		p	1		pointer
		p	2		stack
	m	(Lgu;Lgz;)V	a	playAnimation
		p	1		pointer
		p	2		side
	m	(Lgu;Lcfv;)Lcfv;	dispense	dispense
		p	1		pointer
		p	2		stack
c	ig	net/minecraft/core/dispenser/DispenseItemBehavior
	m	(Lgu;Lbfh;Lgz;)V	a	setEntityPokingOutOfBlock
		p	0		pointer
		p	1		entity
		p	2		direction
	m	(Lgu;Lcfv;)Lcfv;	a	lambda$static$0
		p	0		pointer
		p	1		stack
	m	()V	c	bootStrap
	m	(Lgu;Lcfv;)Lcfv;	dispense	dispense
		p	1		pointer
		p	2		stack
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lig;	b	NOOP
c	ig$1	net/minecraft/core/dispenser/DispenseItemBehavior$1
	m	(Lcmi;Lhn;Lcfv;)Lbze;	a	getProjectile
		p	1		world
		p	2		position
		p	3		stack
c	ig$2	net/minecraft/core/dispenser/DispenseItemBehavior$10
	m	(Lgu;Lcfv;)Lcfv;	a	execute
		p	1		pointer
		p	2		stack
	m	(Lgz;Lbuv;)V	a	lambda$execute$0
c	ig$3	net/minecraft/core/dispenser/DispenseItemBehavior$11
	m	(Lbfx;)Z	a	lambda$execute$0
		p	0		entity
	m	(Lgu;Lcfv;)Lcfv;	a	execute
		p	1		pointer
		p	2		stack
c	ig$4	net/minecraft/core/dispenser/DispenseItemBehavior$12
	m	(Lbti;)Z	a	lambda$execute$0
		p	0		entity
	m	(Lgu;Lcfv;)Lcfv;	a	execute
		p	1		pointer
		p	2		stack
c	ig$5	net/minecraft/core/dispenser/DispenseItemBehavior$13
	m	(Lbth;)Z	a	lambda$execute$0
		p	0		entity
	m	(Lgu;Lcfv;)Lcfv;	a	execute
		p	1		pointer
		p	2		stack
c	ig$6	net/minecraft/core/dispenser/DispenseItemBehavior$14
	m	(Lgu;)V	a	playSound
		p	1		pointer
	m	(Lgu;Lcfv;)Lcfv;	a	execute
		p	1		pointer
		p	2		stack
c	ig$7	net/minecraft/core/dispenser/DispenseItemBehavior$15
	m	(Lcfv;Lbzh;)V	a	lambda$execute$0
		p	1		entity
	m	(Lgu;)V	a	playSound
		p	1		pointer
	m	(Lgu;Lcfv;)Lcfv;	a	execute
		p	1		pointer
		p	2		stack
c	ig$8	net/minecraft/core/dispenser/DispenseItemBehavior$16
	m	(Lgu;Lcfv;)Lcfv;	a	execute
		p	1		pointer
		p	2		stack
	f	Lie;	c	defaultDispenseItemBehavior
c	ig$9	net/minecraft/core/dispenser/DispenseItemBehavior$17
	m	(Lgu;Lcfv;)Lcfv;	a	execute
		p	1		pointer
		p	2		stack
	f	Lie;	c	defaultDispenseItemBehavior
c	ig$10	net/minecraft/core/dispenser/DispenseItemBehavior$18
	m	(Lgu;Lcfv;)Lcfv;	a	execute
		p	1		pointer
		p	2		stack
c	ig$11	net/minecraft/core/dispenser/DispenseItemBehavior$19
	m	(Lgu;Lcfv;)Lcfv;	a	execute
		p	1		pointer
		p	2		stack
c	ig$12	net/minecraft/core/dispenser/DispenseItemBehavior$2
	m	(Lcmi;Lhn;Lcfv;)Lbze;	a	getProjectile
		p	1		world
		p	2		position
		p	3		stack
c	ig$13	net/minecraft/core/dispenser/DispenseItemBehavior$20
	m	(Lgu;Lcfv;)Lcfv;	a	execute
		p	1		pointer
		p	2		stack
c	ig$14	net/minecraft/core/dispenser/DispenseItemBehavior$21
	m	(Lgu;Lcfv;)Lcfv;	a	execute
		p	1		pointer
		p	2		stack
c	ig$15	net/minecraft/core/dispenser/DispenseItemBehavior$22
	m	(Lgu;Lcfv;)Lcfv;	a	execute
		p	1		pointer
		p	2		stack
c	ig$16	net/minecraft/core/dispenser/DispenseItemBehavior$23
	m	(Lgu;Lcfv;)Lcfv;	a	execute
		p	1		pointer
		p	2		stack
c	ig$17	net/minecraft/core/dispenser/DispenseItemBehavior$24
	m	(Ldbp$a;)Z	a	lambda$execute$0
		p	0		state
	m	(Lgu;Lcfv;)Lcfv;	a	execute
		p	1		pointer
		p	2		stack
	m	(Lgu;Lcfv;Lcfv;)Lcfv;	a	takeLiquid
		p	1		pointer
		p	2		emptyBottleStack
		p	3		filledBottleStack
	f	Lie;	c	defaultDispenseItemBehavior
c	ig$18	net/minecraft/core/dispenser/DispenseItemBehavior$25
	m	(Lgu;Lcfv;)Lcfv;	a	execute
		p	1		pointer
		p	2		stack
c	ig$19	net/minecraft/core/dispenser/DispenseItemBehavior$26
	m	(Lgu;Lcfv;)Lcfv;	a	execute
		p	1		pointer
		p	2		stack
c	ig$20	net/minecraft/core/dispenser/DispenseItemBehavior$27
	m	(Lgu;Lcfv;)Lcfv;	a	execute
		p	1		pointer
		p	2		stack
	f	Lie;	c	defaultDispenseItemBehavior
c	ig$21	net/minecraft/core/dispenser/DispenseItemBehavior$3
	m	(Lcmi;Lhn;Lcfv;)Lbze;	a	getProjectile
		p	1		world
		p	2		position
		p	3		stack
c	ig$22	net/minecraft/core/dispenser/DispenseItemBehavior$4
	m	(Lcfv;Lbzm;)V	a	lambda$getProjectile$0
		p	1		entity
	m	(Lcmi;Lhn;Lcfv;)Lbze;	a	getProjectile
		p	1		world
		p	2		position
		p	3		stack
c	ig$23	net/minecraft/core/dispenser/DispenseItemBehavior$5
	m	(Lcfv;Lbzi;)V	a	lambda$getProjectile$0
		p	1		entity
	m	(Lcmi;Lhn;Lcfv;)Lbze;	a	getProjectile
		p	1		world
		p	2		position
		p	3		stack
c	ig$24	net/minecraft/core/dispenser/DispenseItemBehavior$6
	m	()F	a	getUncertainty
	m	(Lcfv;Lbzo;)V	a	lambda$getProjectile$0
		p	1		entity
	m	(Lcmi;Lhn;Lcfv;)Lbze;	a	getProjectile
		p	1		world
		p	2		position
		p	3		stack
	m	()F	b	getPower
c	ig$25	net/minecraft/core/dispenser/DispenseItemBehavior$7
	m	(Lgu;Lcfv;)Lcfv;	dispense	dispense
		p	1		pointer
		p	2		stack
c	ig$25$1	net/minecraft/core/dispenser/DispenseItemBehavior$7$1
	m	()F	a	getUncertainty
	m	(Lcfv;Lbzp;)V	a	lambda$getProjectile$0
		p	1		entity
	m	(Lcmi;Lhn;Lcfv;)Lbze;	a	getProjectile
		p	1		world
		p	2		position
		p	3		stack
	m	()F	b	getPower
	f	Lig$25;	c	this$0
c	ig$26	net/minecraft/core/dispenser/DispenseItemBehavior$8
	m	(Lgu;Lcfv;)Lcfv;	dispense	dispense
		p	1		pointer
		p	2		stack
c	ig$26$1	net/minecraft/core/dispenser/DispenseItemBehavior$8$1
	m	()F	a	getUncertainty
	m	(Lcfv;Lbzp;)V	a	lambda$getProjectile$0
		p	1		entity
	m	(Lcmi;Lhn;Lcfv;)Lbze;	a	getProjectile
		p	1		world
		p	2		position
		p	3		stack
	m	()F	b	getPower
	f	Lig$26;	c	this$0
c	ig$27	net/minecraft/core/dispenser/DispenseItemBehavior$9
	m	(Lgu;Lcfv;)Lcfv;	a	execute
		p	1		pointer
		p	2		stack
c	ih	net/minecraft/core/dispenser/OptionalDispenseItemBehavior
	m	()Z	a	isSuccess
	m	(Lgu;)V	a	playSound
		p	1		pointer
	m	(Z)V	a	setSuccess
		p	1		success
	f	Z	c	success
c	ii	net/minecraft/core/dispenser/ShearsDispenseItemBehavior
	m	(Laip;Lgt;)Z	a	tryShearBeehive
		p	0		world
		p	1		pos
	m	(Ldbp$a;)Z	a	lambda$tryShearBeehive$0
		p	0		state
	m	(Lgu;Lcfv;)Lcfv;	a	execute
		p	1		pointer
		p	2		stack
	m	(Laip;Lgt;)Z	b	tryShearLivingEntity
		p	0		world
		p	1		pos
c	ij	net/minecraft/core/dispenser/ShulkerBoxDispenseBehavior
	m	(Lgu;Lcfv;)Lcfv;	a	execute
		p	1		pointer
		p	2		stack
	f	Lorg/slf4j/Logger;	c	LOGGER
c	ik	net/minecraft/core/dispenser/package-info
c	il	net/minecraft/core/package-info
c	im	net/minecraft/core/particles/BlockParticleOption
	m	(Lit;Ldbq;)V	<init>	<init>
		p	1		type
		p	2		blockState
	m	()Ljava/lang/String;	a	writeToString
	m	(Lim;)Ldbq;	a	lambda$codec$1
		p	0		effect
	m	(Lit;)Lcom/mojang/serialization/Codec;	a	codec
		p	0		type
	m	(Lit;Ldbq;)Lim;	a	lambda$codec$0
		p	1		state
	m	(Lss;)V	a	writeToNetwork
		p	1		buf
	m	()Lit;	b	getType
	m	()Ldbq;	c	getState
	f	Lis$a;	a	DESERIALIZER
	f	Lit;	b	type
	f	Ldbq;	c	state
c	im$1	net/minecraft/core/particles/BlockParticleOption$1
	m	(Lit;Lcom/mojang/brigadier/StringReader;)Lim;	a	fromCommand
	m	(Lit;Lss;)Lim;	a	fromNetwork
	m	(Lit;Lcom/mojang/brigadier/StringReader;)Lis;	b	fromCommand
		p	1		type
		p	2		reader
	m	(Lit;Lss;)Lis;	b	fromNetwork
		p	1		type
		p	2		buf
c	in	net/minecraft/core/particles/DustColorTransitionOptions
	m	(Lorg/joml/Vector3f;Lorg/joml/Vector3f;F)V	<init>	<init>
		p	1		fromColor
		p	2		toColor
		p	3		scale
	m	()Ljava/lang/String;	a	writeToString
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	(Lin;)Ljava/lang/Float;	a	lambda$static$2
		p	0		effect
	m	(Lss;)V	a	writeToNetwork
		p	1		buf
	m	()Lit;	b	getType
	m	(Lin;)Lorg/joml/Vector3f;	b	lambda$static$1
		p	0		effect
	m	()Lorg/joml/Vector3f;	c	getFromColor
	m	(Lin;)Lorg/joml/Vector3f;	c	lambda$static$0
		p	0		effect
	m	()Lorg/joml/Vector3f;	d	getToColor
	f	Lorg/joml/Vector3f;	a	SCULK_PARTICLE_COLOR
	f	Lin;	b	SCULK_TO_REDSTONE
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Lis$a;	d	DESERIALIZER
	f	Lorg/joml/Vector3f;	i	toColor
c	in$1	net/minecraft/core/particles/DustColorTransitionOptions$1
	m	(Lit;Lcom/mojang/brigadier/StringReader;)Lin;	a	fromCommand
	m	(Lit;Lss;)Lin;	a	fromNetwork
	m	(Lit;Lcom/mojang/brigadier/StringReader;)Lis;	b	fromCommand
		p	1		type
		p	2		reader
	m	(Lit;Lss;)Lis;	b	fromNetwork
		p	1		type
		p	2		buf
c	io	net/minecraft/core/particles/DustParticleOptions
	m	(Lorg/joml/Vector3f;F)V	<init>	<init>
		p	1		color
		p	2		scale
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Lio;)Ljava/lang/Float;	a	lambda$static$1
		p	0		effect
	m	()Lit;	b	getType
	m	(Lio;)Lorg/joml/Vector3f;	b	lambda$static$0
		p	0		effect
	f	Lorg/joml/Vector3f;	a	REDSTONE_PARTICLE_COLOR
	f	Lio;	b	REDSTONE
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Lis$a;	d	DESERIALIZER
c	io$1	net/minecraft/core/particles/DustParticleOptions$1
	m	(Lit;Lcom/mojang/brigadier/StringReader;)Lio;	a	fromCommand
	m	(Lit;Lss;)Lio;	a	fromNetwork
	m	(Lit;Lcom/mojang/brigadier/StringReader;)Lis;	b	fromCommand
		p	1		type
		p	2		reader
	m	(Lit;Lss;)Lis;	b	fromNetwork
		p	1		type
		p	2		buf
c	ip	net/minecraft/core/particles/DustParticleOptionsBase
	m	(Lorg/joml/Vector3f;F)V	<init>	<init>
		p	1		color
		p	2		scale
	m	()Ljava/lang/String;	a	writeToString
	m	(Lcom/mojang/brigadier/StringReader;)Lorg/joml/Vector3f;	a	readVector3f
		p	0		reader
	m	(Lss;)V	a	writeToNetwork
		p	1		buf
	m	(Lss;)Lorg/joml/Vector3f;	b	readVector3f
		p	0		buf
	m	()Lorg/joml/Vector3f;	e	getColor
	m	()F	f	getScale
	f	F	e	MIN_SCALE
	f	F	f	MAX_SCALE
	f	Lorg/joml/Vector3f;	g	color
	f	F	h	scale
c	iq	net/minecraft/core/particles/ItemParticleOption
	m	(Lit;Lcfv;)V	<init>	<init>
		p	1		type
		p	2		stack
	m	()Ljava/lang/String;	a	writeToString
	m	(Liq;)Lcfv;	a	lambda$codec$1
		p	0		effect
	m	(Lit;)Lcom/mojang/serialization/Codec;	a	codec
		p	0		type
	m	(Lit;Lcfv;)Liq;	a	lambda$codec$0
		p	1		stack
	m	(Lss;)V	a	writeToNetwork
		p	1		buf
	m	()Lit;	b	getType
	m	()Lcfv;	c	getItem
	f	Lis$a;	a	DESERIALIZER
	f	Lit;	b	type
	f	Lcfv;	c	itemStack
c	iq$1	net/minecraft/core/particles/ItemParticleOption$1
	m	(Lit;Lcom/mojang/brigadier/StringReader;)Liq;	a	fromCommand
	m	(Lit;Lss;)Liq;	a	fromNetwork
	m	(Lit;Lcom/mojang/brigadier/StringReader;)Lis;	b	fromCommand
		p	1		type
		p	2		reader
	m	(Lit;Lss;)Lis;	b	fromNetwork
		p	1		type
		p	2		buf
c	ir	net/minecraft/core/particles/ParticleGroup
	m	(I)V	<init>	<init>
		p	1		maxCount
	m	()I	a	getLimit
	f	Lir;	a	SPORE_BLOSSOM
	f	I	b	limit
c	is	net/minecraft/core/particles/ParticleOptions
	m	()Ljava/lang/String;	a	writeToString
	m	(Lss;)V	a	writeToNetwork
		p	1		buf
	m	()Lit;	b	getType
c	is$a	net/minecraft/core/particles/ParticleOptions$Deserializer
	m	(Lit;Lcom/mojang/brigadier/StringReader;)Lis;	b	fromCommand
		p	1		type
		p	2		reader
	m	(Lit;Lss;)Lis;	b	fromNetwork
		p	1		type
		p	2		buf
c	it	net/minecraft/core/particles/ParticleType
	m	(ZLis$a;)V	<init>	<init>
		p	1		alwaysShow
		p	2		parametersFactory
	m	()Z	c	getOverrideLimiter
	m	()Lis$a;	d	getDeserializer
	m	()Lcom/mojang/serialization/Codec;	e	codec
	f	Z	a	overrideLimiter
	f	Lis$a;	b	deserializer
c	iu	net/minecraft/core/particles/ParticleTypes
	m	(Lit;)Lcom/mojang/serialization/Codec;	a	lambda$static$4
		p	0		type
	m	(Ljava/lang/String;Z)Lix;	a	register
		p	0		name
		p	1		alwaysShow
	m	(Ljava/lang/String;ZLis$a;Ljava/util/function/Function;)Lit;	a	register
		p	0		name
		p	1		alwaysShow
		p	2		factory
		p	3		codecGetter
	m	(Lit;)Lcom/mojang/serialization/Codec;	b	lambda$static$3
	m	(Lit;)Lcom/mojang/serialization/Codec;	c	lambda$static$2
	m	(Lit;)Lcom/mojang/serialization/Codec;	d	lambda$static$1
	m	(Lit;)Lcom/mojang/serialization/Codec;	e	lambda$static$0
	f	Lix;	A	FIREWORK
	f	Lix;	B	FISHING
	f	Lix;	C	FLAME
	f	Lix;	D	DRIPPING_CHERRY_LEAVES
	f	Lix;	E	FALLING_CHERRY_LEAVES
	f	Lix;	F	LANDING_CHERRY_LEAVES
	f	Lix;	G	SCULK_SOUL
	f	Lit;	H	SCULK_CHARGE
	f	Lix;	I	SCULK_CHARGE_POP
	f	Lix;	J	SOUL_FIRE_FLAME
	f	Lix;	K	SOUL
	f	Lix;	L	FLASH
	f	Lix;	M	HAPPY_VILLAGER
	f	Lix;	N	COMPOSTER
	f	Lix;	O	HEART
	f	Lix;	P	INSTANT_EFFECT
	f	Lit;	Q	ITEM
	f	Lit;	R	VIBRATION
	f	Lix;	S	ITEM_SLIME
	f	Lix;	T	ITEM_SNOWBALL
	f	Lix;	U	LARGE_SMOKE
	f	Lix;	V	LAVA
	f	Lix;	W	MYCELIUM
	f	Lix;	X	NOTE
	f	Lix;	Y	POOF
	f	Lix;	Z	PORTAL
	f	Lix;	aA	DRIPPING_OBSIDIAN_TEAR
	f	Lix;	aB	FALLING_OBSIDIAN_TEAR
	f	Lix;	aC	LANDING_OBSIDIAN_TEAR
	f	Lix;	aD	REVERSE_PORTAL
	f	Lix;	aE	WHITE_ASH
	f	Lix;	aF	SMALL_FLAME
	f	Lix;	aG	SNOWFLAKE
	f	Lix;	aH	DRIPPING_DRIPSTONE_LAVA
	f	Lix;	aI	FALLING_DRIPSTONE_LAVA
	f	Lix;	aJ	DRIPPING_DRIPSTONE_WATER
	f	Lix;	aK	FALLING_DRIPSTONE_WATER
	f	Lix;	aL	GLOW_SQUID_INK
	f	Lix;	a	AMBIENT_ENTITY_EFFECT
	f	Lix;	aM	GLOW
	f	Lix;	aN	WAX_ON
	f	Lix;	aO	WAX_OFF
	f	Lix;	aP	ELECTRIC_SPARK
	f	Lix;	aQ	SCRAPE
	f	Lit;	aR	SHRIEK
	f	Lcom/mojang/serialization/Codec;	aS	CODEC
	f	Lix;	aa	RAIN
	f	Lix;	ab	SMOKE
	f	Lix;	ac	SNEEZE
	f	Lix;	ad	SPIT
	f	Lix;	ae	SQUID_INK
	f	Lix;	af	SWEEP_ATTACK
	f	Lix;	ag	TOTEM_OF_UNDYING
	f	Lix;	ah	UNDERWATER
	f	Lix;	ai	SPLASH
	f	Lix;	aj	WITCH
	f	Lix;	ak	BUBBLE_POP
	f	Lix;	al	CURRENT_DOWN
	f	Lix;	am	BUBBLE_COLUMN_UP
	f	Lix;	an	NAUTILUS
	f	Lix;	ao	DOLPHIN
	f	Lix;	ap	CAMPFIRE_COSY_SMOKE
	f	Lix;	aq	CAMPFIRE_SIGNAL_SMOKE
	f	Lix;	ar	DRIPPING_HONEY
	f	Lix;	as	FALLING_HONEY
	f	Lix;	at	LANDING_HONEY
	f	Lix;	au	FALLING_NECTAR
	f	Lix;	av	FALLING_SPORE_BLOSSOM
	f	Lix;	aw	ASH
	f	Lix;	ax	CRIMSON_SPORE
	f	Lix;	ay	WARPED_SPORE
	f	Lix;	az	SPORE_BLOSSOM_AIR
	f	Lix;	b	ANGRY_VILLAGER
	f	Lit;	c	BLOCK
	f	Lit;	d	BLOCK_MARKER
	f	Lix;	e	BUBBLE
	f	Lix;	f	CLOUD
	f	Lix;	g	CRIT
	f	Lix;	h	DAMAGE_INDICATOR
	f	Lix;	i	DRAGON_BREATH
	f	Lix;	j	DRIPPING_LAVA
	f	Lix;	k	FALLING_LAVA
	f	Lix;	l	LANDING_LAVA
	f	Lix;	m	DRIPPING_WATER
	f	Lix;	n	FALLING_WATER
	f	Lit;	o	DUST
	f	Lit;	p	DUST_COLOR_TRANSITION
	f	Lix;	q	EFFECT
	f	Lix;	r	ELDER_GUARDIAN
	f	Lix;	s	ENCHANTED_HIT
	f	Lix;	t	ENCHANT
	f	Lix;	u	END_ROD
	f	Lix;	v	ENTITY_EFFECT
	f	Lix;	w	EXPLOSION_EMITTER
	f	Lix;	x	EXPLOSION
	f	Lix;	y	SONIC_BOOM
	f	Lit;	z	FALLING_DUST
c	iu$1	net/minecraft/core/particles/ParticleTypes$1
	m	(ZLis$a;Ljava/util/function/Function;)V	<init>	<init>
		p	1		alwaysShow
		p	2		parametersFactory
	m	()Lcom/mojang/serialization/Codec;	e	codec
	f	Ljava/util/function/Function;	a	val$codec
c	iv	net/minecraft/core/particles/SculkChargeParticleOptions
	m	()Ljava/lang/String;	a	writeToString
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Liv;)Ljava/lang/Float;	a	lambda$static$0
		p	0		particleEffect
	m	(Lss;)V	a	writeToNetwork
		p	1		buf
	m	()Lit;	b	getType
	m	()F	c	roll
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lis$a;	b	DESERIALIZER
	f	F	c	roll
c	iv$1	net/minecraft/core/particles/SculkChargeParticleOptions$1
	m	(Lit;Lcom/mojang/brigadier/StringReader;)Liv;	a	fromCommand
	m	(Lit;Lss;)Liv;	a	fromNetwork
	m	(Lit;Lcom/mojang/brigadier/StringReader;)Lis;	b	fromCommand
		p	1		type
		p	2		reader
	m	(Lit;Lss;)Lis;	b	fromNetwork
		p	1		type
		p	2		buf
c	iw	net/minecraft/core/particles/ShriekParticleOption
	m	(I)V	<init>	<init>
		p	1		delay
	m	()Ljava/lang/String;	a	writeToString
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Liw;)Ljava/lang/Integer;	a	lambda$static$0
		p	0		particleEffect
	m	(Lss;)V	a	writeToNetwork
		p	1		buf
	m	()Lit;	b	getType
	m	()I	c	getDelay
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lis$a;	b	DESERIALIZER
	f	I	c	delay
c	iw$1	net/minecraft/core/particles/ShriekParticleOption$1
	m	(Lit;Lcom/mojang/brigadier/StringReader;)Liw;	a	fromCommand
	m	(Lit;Lss;)Liw;	a	fromNetwork
	m	(Lit;Lcom/mojang/brigadier/StringReader;)Lis;	b	fromCommand
		p	1		type
		p	2		reader
	m	(Lit;Lss;)Lis;	b	fromNetwork
		p	1		type
		p	2		buf
c	ix	net/minecraft/core/particles/SimpleParticleType
	m	(Z)V	<init>	<init>
		p	1		alwaysShow
	m	()Ljava/lang/String;	a	writeToString
	m	(Lss;)V	a	writeToNetwork
		p	1		buf
	m	()Lit;	b	getType
	m	()Lcom/mojang/serialization/Codec;	e	codec
	m	()Lix;	f	getType
	f	Lis$a;	a	DESERIALIZER
	f	Lcom/mojang/serialization/Codec;	b	codec
c	ix$1	net/minecraft/core/particles/SimpleParticleType$1
	m	(Lit;Lcom/mojang/brigadier/StringReader;)Lix;	a	fromCommand
	m	(Lit;Lss;)Lix;	a	fromNetwork
	m	(Lit;Lcom/mojang/brigadier/StringReader;)Lis;	b	fromCommand
		p	1		type
		p	2		reader
	m	(Lit;Lss;)Lis;	b	fromNetwork
		p	1		type
		p	2		buf
c	iy	net/minecraft/core/particles/VibrationParticleOption
	m	(Ldge;I)V	<init>	<init>
		p	1		destination
		p	2		arrivalInTicks
	m	()Ljava/lang/String;	a	writeToString
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Liy;)Ljava/lang/Integer;	a	lambda$static$1
		p	0		effect
	m	(Lss;)V	a	writeToNetwork
		p	1		buf
	m	()Lit;	b	getType
	m	(Liy;)Ldge;	b	lambda$static$0
		p	0		effect
	m	()Ldge;	c	getDestination
	m	()I	d	getArrivalInTicks
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lis$a;	b	DESERIALIZER
	f	Ldge;	c	destination
	f	I	d	arrivalInTicks
c	iy$1	net/minecraft/core/particles/VibrationParticleOption$1
	m	(Lit;Lcom/mojang/brigadier/StringReader;)Liy;	a	fromCommand
	m	(Lit;Lss;)Liy;	a	fromNetwork
	m	(Lit;Lcom/mojang/brigadier/StringReader;)Lis;	b	fromCommand
		p	1		type
		p	2		reader
	m	(Lit;Lss;)Lis;	b	fromNetwork
		p	1		type
		p	2		buf
c	iz	net/minecraft/core/particles/package-info
c	ja	net/minecraft/core/registries/BuiltInRegistries
	m	(Lhq;)Lbzx;	A	lambda$static$26
		p	0		registry
	m	(Lhq;)Lbzz;	B	lambda$static$25
		p	0		registry
	m	(Lhq;)Lbqe;	C	lambda$static$24
		p	0		registry
	m	(Lhq;)Lboz;	D	lambda$static$23
		p	0		registry
	m	(Lhq;)Lbyc;	E	lambda$static$22
		p	0		registry
	m	(Lhq;)Lbye;	F	lambda$static$21
		p	0		registry
	m	(Lhq;)Lana;	G	lambda$static$20
		p	0		registry
	m	(Lhq;)Ldgf;	H	lambda$static$19
		p	0		registry
	m	(Lhq;)Lbgz;	I	lambda$static$18
		p	0		registry
	m	(Lhq;)Lcja;	J	lambda$static$17
		p	0		registry
	m	(Lhq;)Lcjb;	K	lambda$static$16
		p	0		registry
	m	(Lhq;)Lccj;	L	lambda$static$15
		p	0		registry
	m	(Lhq;)Lduv;	M	lambda$static$14
		p	0		registry
	m	(Lhq;)Ldvc;	N	lambda$static$13
		p	0		registry
	m	(Lhq;)Ldds;	O	lambda$static$12
		p	0		registry
	m	(Lhq;)Ladd;	P	lambda$static$11
		p	0		registry
	m	(Lhq;)Lczg;	Q	lambda$static$10
		p	0		registry
	m	(Lhq;)Lit;	R	lambda$static$9
		p	0		registry
	m	(Lhq;)Lchr;	S	lambda$static$8
		p	0		registry
	m	(Lhq;)Lcfq;	T	lambda$static$7
		p	0		registry
	m	(Lhq;)Lbfl;	U	lambda$static$6
		p	0		registry
	m	(Lhq;)Lckc;	V	lambda$static$5
		p	0		registry
	m	(Lhq;)Lcpi;	W	lambda$static$4
		p	0		registry
	m	(Lhq;)Lbew;	X	lambda$static$3
		p	0		registry
	m	(Lhq;)Ldwi;	Y	lambda$static$2
		p	0		registry
	m	(Lhq;)Lamq;	Z	lambda$static$1
		p	0		registry
	m	()V	a	bootStrap
	m	(Ladc;Lcom/mojang/serialization/Lifecycle;Lja$a;)Lhq;	a	registerSimple
		p	0		key
		p	1		lifecycle
		p	2		initializer
	m	(Ladc;Lhz;Lja$a;Lcom/mojang/serialization/Lifecycle;)Lhz;	a	internalRegister
		p	0		key
		p	1		registry
		p	2		initializer
		p	3		lifecycle
	m	(Ladc;Lja$a;)Lhq;	a	registerSimple
		p	0		key
		p	1		initializer
	m	(Ladc;Ljava/lang/String;Lcom/mojang/serialization/Lifecycle;Lja$a;)Lgy;	a	registerDefaulted
		p	0		key
		p	1		defaultId
		p	2		lifecycle
		p	3		initializer
	m	(Ladc;Ljava/lang/String;Lja$a;)Lgy;	a	registerDefaulted
		p	0		key
		p	1		defaultId
		p	2		initializer
	m	(Ladd;Ljava/util/function/Supplier;)V	a	lambda$createContents$53
		p	0		id
		p	1		initializer
	m	(Lhq;)V	a	validate
		p	0		registries
	m	(Lhq;Lhq;)V	a	lambda$validate$54
		p	1		registry
	m	(Lja$a;Lhz;)Ljava/lang/Object;	a	lambda$internalRegister$52
	m	(Lhq;)Ldga;	aa	lambda$static$0
		p	0		registry
	m	()V	b	createContents
	m	(Ladc;Ljava/lang/String;Lcom/mojang/serialization/Lifecycle;Lja$a;)Lgy;	b	registerDefaultedWithIntrusiveHolders
		p	0		key
		p	1		defaultId
		p	2		lifecycle
		p	3		initializer
	m	(Ladc;Ljava/lang/String;Lja$a;)Lgy;	b	registerDefaultedWithIntrusiveHolders
		p	0		key
		p	1		defaultId
		p	2		initializer
	m	(Lhq;)Lbru;	b	lambda$static$51
		p	0		registry
	m	()V	c	freeze
	m	(Lhq;)Ldsx;	c	lambda$static$50
		p	0		registry
	m	(Lhq;)Ldvg;	d	lambda$static$49
		p	0		registry
	m	(Lhq;)Ldnj;	e	lambda$static$48
		p	0		registry
	m	(Lhq;)Ldpa;	f	lambda$static$47
		p	0		registry
	m	(Lhq;)Ldog;	g	lambda$static$46
		p	0		registry
	m	(Lhq;)Ldpm;	h	lambda$static$45
		p	0		registry
	m	(Lhq;)Ldnu;	i	lambda$static$44
		p	0		registry
	m	(Lhq;)Ldoj;	j	lambda$static$43
		p	0		registry
	m	(Lhq;)Ldqx;	k	lambda$static$42
		p	0		registry
	m	(Lhq;)Ldry;	l	lambda$static$41
		p	0		registry
	m	(Lhq;)Ldsg;	m	lambda$static$40
		p	0		registry
	m	(Lhq;)Ldsn;	n	lambda$static$39
		p	0		registry
	m	(Lhq;)Ldkd;	o	lambda$static$38
		p	0		registry
	m	(Lhq;)Ldje;	p	lambda$static$37
		p	0		registry
	m	(Lhq;)Ldih;	q	lambda$static$36
		p	0		registry
	m	(Lhq;)Ldpx;	r	lambda$static$35
		p	0		registry
	m	(Lhq;)Lbde;	s	lambda$static$34
		p	0		registry
	m	(Lhq;)Lbdc;	t	lambda$static$33
		p	0		registry
	m	(Lhq;)Lecn;	u	lambda$static$32
		p	0		registry
	m	(Lhq;)Leby;	v	lambda$static$31
		p	0		registry
	m	(Lhq;)Lecf;	w	lambda$static$30
		p	0		registry
	m	(Lhq;)Lebm;	x	lambda$static$29
		p	0		registry
	m	(Lhq;)Lead;	y	lambda$static$28
		p	0		registry
	m	(Lhq;)Ldzk;	z	lambda$static$27
		p	0		registry
	f	Lhq;	A	POINT_OF_INTEREST_TYPE
	f	Lgy;	B	MEMORY_MODULE_TYPE
	f	Lgy;	C	SENSOR_TYPE
	f	Lhq;	D	SCHEDULE
	f	Lhq;	E	ACTIVITY
	f	Lhq;	F	LOOT_POOL_ENTRY_TYPE
	f	Lhq;	G	LOOT_FUNCTION_TYPE
	f	Lhq;	H	LOOT_CONDITION_TYPE
	f	Lhq;	I	LOOT_NUMBER_PROVIDER_TYPE
	f	Lhq;	J	LOOT_NBT_PROVIDER_TYPE
	f	Lhq;	K	LOOT_SCORE_PROVIDER_TYPE
	f	Lhq;	L	FLOAT_PROVIDER_TYPE
	f	Lhq;	M	INT_PROVIDER_TYPE
	f	Lhq;	N	HEIGHT_PROVIDER_TYPE
	f	Lhq;	O	BLOCK_PREDICATE_TYPE
	f	Lhq;	P	CARVER
	f	Lhq;	Q	FEATURE
	f	Lhq;	R	STRUCTURE_PLACEMENT
	f	Lhq;	S	STRUCTURE_PIECE
	f	Lhq;	T	STRUCTURE_TYPE
	f	Lhq;	U	PLACEMENT_MODIFIER_TYPE
	f	Lhq;	V	BLOCKSTATE_PROVIDER_TYPE
	f	Lhq;	W	FOLIAGE_PLACER_TYPE
	f	Lhq;	X	TRUNK_PLACER_TYPE
	f	Lhq;	Y	ROOT_PLACER_TYPE
	f	Lhq;	Z	TREE_DECORATOR_TYPE
	f	Ladd;	a	ROOT_REGISTRY_NAME
	f	Lhq;	aa	FEATURE_SIZE_TYPE
	f	Lhq;	ab	BIOME_SOURCE
	f	Lhq;	ac	CHUNK_GENERATOR
	f	Lhq;	ad	MATERIAL_CONDITION
	f	Lhq;	ae	MATERIAL_RULE
	f	Lhq;	af	DENSITY_FUNCTION_TYPE
	f	Lhq;	ag	STRUCTURE_PROCESSOR
	f	Lhq;	ah	STRUCTURE_POOL_ELEMENT
	f	Lhq;	ai	CAT_VARIANT
	f	Lhq;	aj	FROG_VARIANT
	f	Lhq;	ak	BANNER_PATTERN
	f	Lhq;	al	INSTRUMENT
	f	Lhq;	am	DECORATED_POT_PATTERNS
	f	Lhq;	an	REGISTRY
	f	Lorg/slf4j/Logger;	ao	LOGGER
	f	Ljava/util/Map;	ap	LOADERS
	f	Lhz;	aq	WRITABLE_REGISTRY
	f	Lgy;	b	GAME_EVENT
	f	Lhq;	c	SOUND_EVENT
	f	Lgy;	d	FLUID
	f	Lhq;	e	MOB_EFFECT
	f	Lgy;	f	BLOCK
	f	Lhq;	g	ENCHANTMENT
	f	Lgy;	h	ENTITY_TYPE
	f	Lgy;	i	ITEM
	f	Lgy;	j	POTION
	f	Lhq;	k	PARTICLE_TYPE
	f	Lhq;	l	BLOCK_ENTITY_TYPE
	f	Lgy;	m	PAINTING_VARIANT
	f	Lhq;	n	CUSTOM_STAT
	f	Lgy;	o	CHUNK_STATUS
	f	Lhq;	p	RULE_TEST
	f	Lhq;	q	POS_RULE_TEST
	f	Lhq;	r	MENU
	f	Lhq;	s	RECIPE_TYPE
	f	Lhq;	t	RECIPE_SERIALIZER
	f	Lhq;	u	ATTRIBUTE
	f	Lhq;	v	POSITION_SOURCE_TYPE
	f	Lhq;	w	COMMAND_ARGUMENT_TYPE
	f	Lhq;	x	STAT_TYPE
	f	Lgy;	y	VILLAGER_TYPE
	f	Lgy;	z	VILLAGER_PROFESSION
c	ja$a	net/minecraft/core/registries/BuiltInRegistries$RegistryBootstrap
	m	(Lhq;)Ljava/lang/Object;	run	run
		p	1		registry
c	jb	net/minecraft/core/registries/Registries
	m	(Ladc;)Ladc;	a	levelStemToLevel
		p	0		key
	m	(Ljava/lang/String;)Ladc;	a	createRegistryKey
		p	0		id
	m	(Ladc;)Ladc;	b	levelToLevelStem
		p	0		key
	f	Ladc;	A	INSTRUMENT
	f	Ladc;	B	INT_PROVIDER_TYPE
	f	Ladc;	C	ITEM
	f	Ladc;	D	LOOT_CONDITION_TYPE
	f	Ladc;	E	LOOT_FUNCTION_TYPE
	f	Ladc;	F	LOOT_NBT_PROVIDER_TYPE
	f	Ladc;	G	LOOT_NUMBER_PROVIDER_TYPE
	f	Ladc;	H	LOOT_POOL_ENTRY_TYPE
	f	Ladc;	I	LOOT_SCORE_PROVIDER_TYPE
	f	Ladc;	J	MATERIAL_CONDITION
	f	Ladc;	K	MATERIAL_RULE
	f	Ladc;	L	MEMORY_MODULE_TYPE
	f	Ladc;	M	MENU
	f	Ladc;	N	MOB_EFFECT
	f	Ladc;	O	PAINTING_VARIANT
	f	Ladc;	P	PARTICLE_TYPE
	f	Ladc;	Q	PLACEMENT_MODIFIER_TYPE
	f	Ladc;	R	POINT_OF_INTEREST_TYPE
	f	Ladc;	S	POSITION_SOURCE_TYPE
	f	Ladc;	T	POS_RULE_TEST
	f	Ladc;	U	POTION
	f	Ladc;	V	RECIPE_SERIALIZER
	f	Ladc;	W	RECIPE_TYPE
	f	Ladc;	X	ROOT_PLACER_TYPE
	f	Ladc;	Y	RULE_TEST
	f	Ladc;	Z	SCHEDULE
	f	Ladc;	aA	TEMPLATE_POOL
	f	Ladc;	aB	TRIM_MATERIAL
	f	Ladc;	aC	TRIM_PATTERN
	f	Ladc;	aD	WORLD_PRESET
	f	Ladc;	aE	MULTI_NOISE_BIOME_SOURCE_PARAMETER_LIST
	f	Ladc;	aF	DIMENSION
	f	Ladc;	aG	LEVEL_STEM
	f	Ladc;	a	ACTIVITY
	f	Ladc;	aa	SENSOR_TYPE
	f	Ladc;	ab	SOUND_EVENT
	f	Ladc;	ac	STAT_TYPE
	f	Ladc;	ad	STRUCTURE_PIECE
	f	Ladc;	ae	STRUCTURE_PLACEMENT
	f	Ladc;	af	STRUCTURE_POOL_ELEMENT
	f	Ladc;	ag	STRUCTURE_PROCESSOR
	f	Ladc;	ah	STRUCTURE_TYPE
	f	Ladc;	ai	TREE_DECORATOR_TYPE
	f	Ladc;	aj	TRUNK_PLACER_TYPE
	f	Ladc;	ak	VILLAGER_PROFESSION
	f	Ladc;	al	VILLAGER_TYPE
	f	Ladc;	am	DECORATED_POT_PATTERNS
	f	Ladc;	an	BIOME
	f	Ladc;	ao	CHAT_TYPE
	f	Ladc;	ap	CONFIGURED_CARVER
	f	Ladc;	aq	CONFIGURED_FEATURE
	f	Ladc;	ar	DENSITY_FUNCTION
	f	Ladc;	as	DIMENSION_TYPE
	f	Ladc;	at	FLAT_LEVEL_GENERATOR_PRESET
	f	Ladc;	au	NOISE_SETTINGS
	f	Ladc;	av	NOISE
	f	Ladc;	aw	PLACED_FEATURE
	f	Ladc;	ax	STRUCTURE
	f	Ladc;	ay	PROCESSOR_LIST
	f	Ladc;	az	STRUCTURE_SET
	f	Ladc;	b	ATTRIBUTE
	f	Ladc;	c	BANNER_PATTERN
	f	Ladc;	d	BIOME_SOURCE
	f	Ladc;	e	BLOCK
	f	Ladc;	f	BLOCK_ENTITY_TYPE
	f	Ladc;	g	BLOCK_PREDICATE_TYPE
	f	Ladc;	h	BLOCK_STATE_PROVIDER_TYPE
	f	Ladc;	i	CARVER
	f	Ladc;	j	CAT_VARIANT
	f	Ladc;	k	CHUNK_GENERATOR
	f	Ladc;	l	CHUNK_STATUS
	f	Ladc;	m	COMMAND_ARGUMENT_TYPE
	f	Ladc;	n	CUSTOM_STAT
	f	Ladc;	o	DAMAGE_TYPE
	f	Ladc;	p	DENSITY_FUNCTION_TYPE
	f	Ladc;	q	ENCHANTMENT
	f	Ladc;	r	ENTITY_TYPE
	f	Ladc;	s	FEATURE
	f	Ladc;	t	FEATURE_SIZE_TYPE
	f	Ladc;	u	FLOAT_PROVIDER_TYPE
	f	Ladc;	v	FLUID
	f	Ladc;	w	FOLIAGE_PLACER_TYPE
	f	Ladc;	x	FROG_VARIANT
	f	Ladc;	y	GAME_EVENT
	f	Ladc;	z	HEIGHT_PROVIDER_TYPE
c	jc	net/minecraft/core/registries/package-info
c	jd	net/minecraft/data/BlockFamilies
	m	()Ljava/util/stream/Stream;	a	getAllFamilies
	m	(Lcpi;)Lje$a;	a	familyBuilder
		p	0		baseBlock
	f	Lje;	A	EXPOSED_CUT_COPPER
	f	Lje;	B	WAXED_EXPOSED_COPPER
	f	Lje;	C	WAXED_EXPOSED_CUT_COPPER
	f	Lje;	D	WEATHERED_COPPER
	f	Lje;	E	WEATHERED_CUT_COPPER
	f	Lje;	F	WAXED_WEATHERED_COPPER
	f	Lje;	G	WAXED_WEATHERED_CUT_COPPER
	f	Lje;	H	OXIDIZED_COPPER
	f	Lje;	I	OXIDIZED_CUT_COPPER
	f	Lje;	J	WAXED_OXIDIZED_COPPER
	f	Lje;	K	WAXED_OXIDIZED_CUT_COPPER
	f	Lje;	L	COBBLESTONE
	f	Lje;	M	MOSSY_COBBLESTONE
	f	Lje;	N	DIORITE
	f	Lje;	O	POLISHED_DIORITE
	f	Lje;	P	GRANITE
	f	Lje;	Q	POLISHED_GRANITE
	f	Lje;	R	NETHER_BRICKS
	f	Lje;	S	RED_NETHER_BRICKS
	f	Lje;	T	PRISMARINE
	f	Lje;	U	PURPUR
	f	Lje;	V	PRISMARINE_BRICKS
	f	Lje;	W	DARK_PRISMARINE
	f	Lje;	X	QUARTZ
	f	Lje;	Y	SMOOTH_QUARTZ
	f	Lje;	Z	SANDSTONE
	f	Lje;	a	ACACIA_PLANKS
	f	Lje;	aa	CUT_SANDSTONE
	f	Lje;	ab	SMOOTH_SANDSTONE
	f	Lje;	ac	RED_SANDSTONE
	f	Lje;	ad	CUT_RED_SANDSTONE
	f	Lje;	ae	SMOOTH_RED_SANDSTONE
	f	Lje;	af	STONE
	f	Lje;	ag	STONE_BRICK
	f	Lje;	ah	DEEPSLATE
	f	Lje;	ai	COBBLED_DEEPSLATE
	f	Lje;	aj	POLISHED_DEEPSLATE
	f	Lje;	ak	DEEPSLATE_BRICKS
	f	Lje;	al	DEEPSLATE_TILES
	f	Ljava/util/Map;	am	MAP
	f	Ljava/lang/String;	an	RECIPE_GROUP_PREFIX_WOODEN
	f	Ljava/lang/String;	ao	RECIPE_UNLOCKED_BY_HAS_PLANKS
	f	Lje;	b	CHERRY_PLANKS
	f	Lje;	c	BIRCH_PLANKS
	f	Lje;	d	CRIMSON_PLANKS
	f	Lje;	e	JUNGLE_PLANKS
	f	Lje;	f	OAK_PLANKS
	f	Lje;	g	DARK_OAK_PLANKS
	f	Lje;	h	SPRUCE_PLANKS
	f	Lje;	i	WARPED_PLANKS
	f	Lje;	j	MANGROVE_PLANKS
	f	Lje;	k	BAMBOO_PLANKS
	f	Lje;	l	BAMBOO_MOSAIC
	f	Lje;	m	MUD_BRICKS
	f	Lje;	n	ANDESITE
	f	Lje;	o	POLISHED_ANDESITE
	f	Lje;	p	BLACKSTONE
	f	Lje;	q	POLISHED_BLACKSTONE
	f	Lje;	r	POLISHED_BLACKSTONE_BRICKS
	f	Lje;	s	BRICKS
	f	Lje;	t	END_STONE_BRICKS
	f	Lje;	u	MOSSY_STONE_BRICKS
	f	Lje;	v	COPPER_BLOCK
	f	Lje;	w	CUT_COPPER
	f	Lje;	x	WAXED_COPPER_BLOCK
	f	Lje;	y	WAXED_CUT_COPPER
	f	Lje;	z	EXPOSED_COPPER
c	je	net/minecraft/data/BlockFamily
	m	(Lcpi;)V	<init>	<init>
		p	1		baseBlock
	m	()Lcpi;	a	getBaseBlock
	m	(Lcau;)Z	a	shouldGenerateRecipe
		p	1		enabledFeatures
	m	(Lje$b;)Lcpi;	a	get
		p	1		variant
	m	()Ljava/util/Map;	b	getVariants
	m	()Z	c	shouldGenerateModel
	m	()Ljava/util/Optional;	d	getRecipeGroupPrefix
	m	()Ljava/util/Optional;	e	getRecipeUnlockedBy
	f	Lcpi;	a	baseBlock
	f	Ljava/util/Map;	b	variants
	f	Lcau;	c	requiredFeatures
	f	Z	d	generateModel
	f	Z	e	generateRecipe
	f	Ljava/lang/String;	f	recipeGroupPrefix
	f	Ljava/lang/String;	g	recipeUnlockedBy
c	je$a	net/minecraft/data/BlockFamily$Builder
	m	(Lcpi;)V	<init>	<init>
		p	1		baseBlock
	m	()Lje;	a	getFamily
	m	(Lcpi;)Lje$a;	a	button
		p	1		block
	m	(Lcpi;Lcpi;)Lje$a;	a	sign
		p	1		block
		p	2		wallBlock
	m	(Ljava/lang/String;)Lje$a;	a	recipeGroupPrefix
		p	1		group
	m	([Lcas;)Lje$a;	a	featureLockedBehind
		p	1		features
	m	()Lje$a;	b	dontGenerateModel
	m	(Lcpi;)Lje$a;	b	chiseled
		p	1		block
	m	(Ljava/lang/String;)Lje$a;	b	recipeUnlockedBy
		p	1		unlockCriterionName
	m	()Lje$a;	c	dontGenerateRecipe
	m	(Lcpi;)Lje$a;	c	mosaic
		p	1		block
	m	(Lcpi;)Lje$a;	d	cracked
		p	1		block
	m	(Lcpi;)Lje$a;	e	cut
		p	1		block
	m	(Lcpi;)Lje$a;	f	door
		p	1		block
	m	(Lcpi;)Lje$a;	g	customFence
		p	1		block
	m	(Lcpi;)Lje$a;	h	fence
		p	1		block
	m	(Lcpi;)Lje$a;	i	customFenceGate
		p	1		block
	m	(Lcpi;)Lje$a;	j	fenceGate
		p	1		block
	m	(Lcpi;)Lje$a;	k	slab
		p	1		block
	m	(Lcpi;)Lje$a;	l	stairs
		p	1		block
	m	(Lcpi;)Lje$a;	m	pressurePlate
		p	1		block
	m	(Lcpi;)Lje$a;	n	polished
		p	1		block
	m	(Lcpi;)Lje$a;	o	trapdoor
		p	1		block
	m	(Lcpi;)Lje$a;	p	wall
		p	1		block
	f	Lje;	a	family
c	je$b	net/minecraft/data/BlockFamily$Variant
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()Ljava/lang/String;	a	getName
	m	()[Lje$b;	b	$values
	f	Lje$b;	a	BUTTON
	f	Lje$b;	b	CHISELED
	f	Lje$b;	c	CRACKED
	f	Lje$b;	d	CUT
	f	Lje$b;	e	DOOR
	f	Lje$b;	f	CUSTOM_FENCE
	f	Lje$b;	g	FENCE
	f	Lje$b;	h	CUSTOM_FENCE_GATE
	f	Lje$b;	i	FENCE_GATE
	f	Lje$b;	j	MOSAIC
	f	Lje$b;	k	SIGN
	f	Lje$b;	l	SLAB
	f	Lje$b;	m	STAIRS
	f	Lje$b;	n	PRESSURE_PLATE
	f	Lje$b;	o	POLISHED
	f	Lje$b;	p	TRAPDOOR
	f	Lje$b;	q	WALL
	f	Lje$b;	r	WALL_SIGN
	f	Ljava/lang/String;	s	name
	f	[Lje$b;	t	$VALUES
c	jf	net/minecraft/data/CachedOutput
	m	(Ljava/nio/file/Path;[BLcom/google/common/hash/HashCode;)V	a	lambda$static$0
		p	0		path
		p	1		data
		p	2		hashCode
	m	(Ljava/nio/file/Path;[BLcom/google/common/hash/HashCode;)V	writeIfNeeded	writeIfNeeded
		p	1		path
		p	2		data
		p	3		hashCode
	f	Ljf;	a	NO_CACHE
c	jg	net/minecraft/data/DataGenerator
	m	(Ljava/nio/file/Path;Lad;Z)V	<init>	<init>
		p	1		outputPath
		p	2		gameVersion
		p	3		ignoreCache
	m	()V	a	run
	m	(Lji;Lcom/google/common/base/Stopwatch;Ljava/lang/String;Ljh;)V	a	lambda$run$0
		p	3		name
		p	4		provider
	m	(Z)Ljg$a;	a	getVanillaPack
		p	1		shouldRun
	m	(ZLjava/lang/String;)Ljg$a;	a	getBuiltinDatapack
		p	1		shouldRun
		p	2		packName
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/nio/file/Path;	b	rootOutputFolder
	f	Ljj;	c	vanillaPackOutput
	f	Ljava/util/Set;	d	allProviderIds
	f	Ljava/util/Map;	e	providersToRun
	f	Lad;	f	version
	f	Z	g	alwaysGenerate
c	jg$a	net/minecraft/data/DataGenerator$PackGenerator
	m	(Ljg;ZLjava/lang/String;Ljj;)V	<init>	<init>
		p	2		shouldRun
		p	3		name
		p	4		output
	m	(Ljh$a;)Ljh;	a	addProvider
		p	1		factory
	f	Ljg;	a	this$0
	f	Z	b	toRun
	f	Ljava/lang/String;	c	providerPrefix
	f	Ljj;	d	output
c	jh	net/minecraft/data/DataProvider
	m	()Ljava/lang/String;	a	getName
	m	(Lcom/google/gson/JsonElement;Ljf;Ljava/nio/file/Path;)V	a	lambda$saveStable$2
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;)V	a	lambda$static$0
		p	0		map
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$static$1
		p	0		key
	m	(Ljf;)Ljava/util/concurrent/CompletableFuture;	a	run
		p	1		writer
	m	(Ljf;Lcom/google/gson/JsonElement;Ljava/nio/file/Path;)Ljava/util/concurrent/CompletableFuture;	a	saveStable
		p	0		writer
		p	1		json
		p	2		path
	f	Ljava/util/function/ToIntFunction;	a	FIXED_ORDER_FIELDS
	f	Ljava/util/Comparator;	b	KEY_COMPARATOR
	f	Lorg/slf4j/Logger;	c	LOGGER
c	jh$a	net/minecraft/data/DataProvider$Factory
	m	(Ljj;)Ljh;	create	create
		p	1		output
c	ji	net/minecraft/data/HashCache
	m	(Ljava/nio/file/Path;Ljava/util/Collection;Lad;)V	<init>	<init>
		p	1		root
		p	2		providerNames
		p	3		gameVersion
	m	()V	a	purgeStaleAndWrite
	m	(Ljava/lang/String;)Z	a	shouldRunInThisVersion
		p	1		providerName
	m	(Ljava/lang/String;Lji$d;)Ljava/util/concurrent/CompletableFuture;	a	generateUpdate
		p	1		providerName
		p	2		runner
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;)Lji$b;	a	readCache
		p	0		root
		p	1		dataProviderPath
	m	(Ljava/util/Set;Ljava/lang/String;Lji$b;)V	a	lambda$purgeStaleAndWrite$1
		p	2		providerName
		p	3		cachedData
	m	(Lji$a;Ljava/lang/Object;)Lji$e;	a	lambda$generateUpdate$0
		p	1		void_
	m	(Lji$e;)V	a	applyUpdate
		p	1		runResult
	m	(Lorg/apache/commons/lang3/mutable/MutableInt;Ljava/util/Set;Lorg/apache/commons/lang3/mutable/MutableInt;Ljava/nio/file/Path;)V	a	lambda$purgeStaleAndWrite$2
		p	4		path
	m	(Ljava/lang/String;)Ljava/nio/file/Path;	b	getProviderCachePath
		p	1		providerName
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/lang/String;	b	HEADER_MARKER
	f	Ljava/nio/file/Path;	c	rootDir
	f	Ljava/nio/file/Path;	d	cacheDir
	f	Ljava/lang/String;	e	versionId
	f	Ljava/util/Map;	f	caches
	f	Ljava/util/Set;	g	cachesToWrite
	f	Ljava/util/Set;	h	cachePaths
	f	I	i	initialCount
	f	I	j	writes
c	ji$a	net/minecraft/data/HashCache$CacheUpdater
	m	(Lji;Ljava/lang/String;Ljava/lang/String;Lji$b;)V	<init>	<init>
		p	2		providerName
		p	3		version
		p	4		oldCache
	m	()Lji$e;	a	close
	m	(Ljava/nio/file/Path;Lcom/google/common/hash/HashCode;)Z	a	shouldWrite
		p	1		path
		p	2		hashCode
	m	(Ljava/nio/file/Path;[BLcom/google/common/hash/HashCode;)V	writeIfNeeded	writeIfNeeded
		p	1		path
		p	2		data
		p	3		hashCode
	f	Lji;	b	this$0
	f	Ljava/lang/String;	c	provider
	f	Lji$b;	d	oldCache
	f	Lji$c;	e	newCache
	f	Ljava/util/concurrent/atomic/AtomicInteger;	f	writes
	f	Z	g	closed
c	ji$b	net/minecraft/data/HashCache$ProviderCache
	m	()I	a	count
	m	(Lcom/google/common/collect/ImmutableMap$Builder;Ljava/nio/file/Path;Ljava/lang/String;)V	a	lambda$load$0
		p	2		line
	m	(Ljava/nio/file/Path;)Lcom/google/common/hash/HashCode;	a	get
		p	1		path
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;)Lji$b;	a	load
		p	0		root
		p	1		dataProviderPath
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/lang/String;)V	a	save
		p	1		root
		p	2		dataProviderPath
		p	3		description
	m	()Ljava/lang/String;	b	version
	m	()Lcom/google/common/collect/ImmutableMap;	c	data
	f	Ljava/lang/String;	a	version
	f	Lcom/google/common/collect/ImmutableMap;	b	data
c	ji$c	net/minecraft/data/HashCache$ProviderCacheBuilder
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		version
	m	()Lji$b;	a	build
	m	(Ljava/nio/file/Path;Lcom/google/common/hash/HashCode;)V	a	put
		p	1		path
		p	2		hashCode
	m	()Ljava/lang/String;	b	version
	m	()Ljava/util/concurrent/ConcurrentMap;	c	data
	f	Ljava/lang/String;	a	version
	f	Ljava/util/concurrent/ConcurrentMap;	b	data
c	ji$d	net/minecraft/data/HashCache$UpdateFunction
	m	(Ljf;)Ljava/util/concurrent/CompletableFuture;	update	update
		p	1		writer
c	ji$e	net/minecraft/data/HashCache$UpdateResult
	m	()Ljava/lang/String;	a	providerId
	m	()Lji$b;	b	cache
	m	()I	c	writes
	f	Ljava/lang/String;	a	providerId
	f	Lji$b;	b	cache
	f	I	c	writes
c	jj	net/minecraft/data/PackOutput
	m	(Ljava/nio/file/Path;)V	<init>	<init>
		p	1		path
	m	()Ljava/nio/file/Path;	a	getOutputFolder
	m	(Ljj$b;)Ljava/nio/file/Path;	a	getOutputFolder
		p	1		outputType
	m	(Ljj$b;Ljava/lang/String;)Ljj$a;	a	createPathProvider
		p	1		outputType
		p	2		directoryName
	f	Ljava/nio/file/Path;	a	outputFolder
c	jj$a	net/minecraft/data/PackOutput$PathProvider
	m	(Ljj;Ljj$b;Ljava/lang/String;)V	<init>	<init>
		p	1		dataGenerator
		p	2		outputType
		p	3		directoryName
	m	(Ladd;)Ljava/nio/file/Path;	a	json
		p	1		id
	m	(Ladd;Ljava/lang/String;)Ljava/nio/file/Path;	a	file
		p	1		id
		p	2		fileExtension
	f	Ljava/nio/file/Path;	a	root
	f	Ljava/lang/String;	b	kind
c	jj$b	net/minecraft/data/PackOutput$Target
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		path
	m	()[Ljj$b;	a	$values
	f	Ljj$b;	a	DATA_PACK
	f	Ljj$b;	b	RESOURCE_PACK
	f	Ljj$b;	c	REPORTS
	f	Ljava/lang/String;	d	directory
	f	[Ljj$b;	e	$VALUES
c	jk	net/minecraft/data/advancements/AdvancementProvider
	m	(Ljj;Ljava/util/concurrent/CompletableFuture;Ljava/util/List;)V	<init>	<init>
		p	1		output
		p	2		registryLookupFuture
		p	3		tabGenerators
	m	()Ljava/lang/String;	a	getName
	m	(I)[Ljava/util/concurrent/CompletableFuture;	a	lambda$run$1
	m	(Ljava/util/Set;Ljava/util/List;Ljf;Lae;)V	a	lambda$run$0
		p	4		advancement
	m	(Ljf;)Ljava/util/concurrent/CompletableFuture;	a	run
		p	1		writer
	m	(Ljf;Lhf$b;)Ljava/util/concurrent/CompletionStage;	a	lambda$run$2
		p	2		lookup
	f	Ljj$a;	d	pathProvider
	f	Ljava/util/List;	e	subProviders
	f	Ljava/util/concurrent/CompletableFuture;	f	registries
c	jl	net/minecraft/data/advancements/AdvancementSubProvider
	m	(Lhf$b;Ljava/util/function/Consumer;)V	a	generate
		p	1		lookup
		p	2		exporter
	m	(Ljava/lang/String;)Lae;	a	createPlaceholder
		p	0		id
c	jm	net/minecraft/data/advancements/package-info
c	jn	net/minecraft/data/advancements/packs/UpdateOneTwentyAdventureAdvancements
	m	(Lhf$b;Ljava/util/function/Consumer;)V	a	generate
		p	1		lookup
		p	2		exporter
c	jo	net/minecraft/data/advancements/packs/UpdateOneTwentyHusbandryAdvancements
	m	(Lhf$b;Ljava/util/function/Consumer;)V	a	generate
		p	1		lookup
		p	2		exporter
c	jp	net/minecraft/data/advancements/packs/UpdateOneTwentyVanillaAdvancementProvider
	m	(Ljj;Ljava/util/concurrent/CompletableFuture;)Ljk;	a	create
		p	0		output
		p	1		registryLookupFuture
c	jq	net/minecraft/data/advancements/packs/VanillaAdvancementProvider
	m	(Ljj;Ljava/util/concurrent/CompletableFuture;)Ljk;	a	create
		p	0		output
		p	1		registryLookupFuture
c	jr	net/minecraft/data/advancements/packs/VanillaAdventureAdvancements
	m	(Lae$a;)Lae$a;	a	addMobsToKill
		p	1		builder
	m	(Lae$a;Ljava/util/List;)Lae$a;	a	addBiomes
		p	0		builder
		p	1		biomes
	m	(Lbfl;Lcfq;)Ldg$a;	a	lookAtThroughItem
		p	0		entity
		p	1		item
	m	(Lci$d;Lbn;)Lcf$a;	a	fireCountAndBystander
		p	0		range
		p	1		entity
	m	(Lhf$b;Ljava/util/function/Consumer;)V	a	generate
		p	1		lookup
		p	2		exporter
	m	(Ljava/util/function/Consumer;Lae;Lcnt$a;)V	a	createAdventuringTime
		p	0		exporter
		p	1		parent
		p	2		preset
	f	I	a	DISTANCE_FROM_BOTTOM_TO_TOP
	f	I	b	Y_COORDINATE_AT_TOP
	f	I	c	Y_COORDINATE_AT_BOTTOM
	f	I	d	BEDROCK_THICKNESS
	f	[Lbfl;	e	MOBS_TO_KILL
c	js	net/minecraft/data/advancements/packs/VanillaHusbandryAdvancements
	m	(Lae$a;)Lae$a;	a	addLeashedFrogVariants
		p	1		builder
	m	(Lae$a;Lbfl;)V	a	lambda$addBreedable$2
		p	1		type
	m	(Lae$a;Lhd$c;)V	a	lambda$addLeashedFrogVariants$0
		p	1		variant
	m	(Lae$a;Ljava/util/Map$Entry;)V	a	lambda$addCatVariants$3
	m	(Lae$a;Ljava/util/stream/Stream;Ljava/util/stream/Stream;)Lae$a;	a	addBreedable
		p	0		advancementBuilder
		p	1		breedableAnimals
		p	2		eggLayingAnimals
	m	(Lae;Ljava/util/function/Consumer;Ljava/util/stream/Stream;Ljava/util/stream/Stream;)Lae;	a	createBreedAllAnimalsAdvancement
		p	0		parent
		p	1		exporter
		p	2		breedableAnimals
		p	3		eggLayingAnimals
	m	(Lhf$b;Ljava/util/function/Consumer;)V	a	generate
		p	1		lookup
		p	2		exporter
	m	(Lae$a;)Lae$a;	b	addFood
		p	1		builder
	m	(Lae$a;Lbfl;)V	b	lambda$addBreedable$1
		p	1		type
	m	(Lae$a;)Lae$a;	c	addFishBuckets
		p	1		builder
	m	(Lae$a;)Lae$a;	d	addFish
		p	1		builder
	m	(Lae$a;)Lae$a;	e	addCatVariants
		p	1		builder
	f	Ljava/util/List;	a	BREEDABLE_ANIMALS
	f	Ljava/util/List;	b	INDIRECTLY_BREEDABLE_ANIMALS
	f	[Lcfq;	c	FISH
	f	[Lcfq;	d	FISH_BUCKETS
	f	[Lcfq;	e	EDIBLE_ITEMS
	f	[Lcfq;	f	WAX_SCRAPING_TOOLS
c	jt	net/minecraft/data/advancements/packs/VanillaNetherAdvancements
	m	(Lhf$b;Ljava/util/function/Consumer;)V	a	generate
		p	1		lookup
		p	2		exporter
	f	Lbn$b;	a	DISTRACT_PIGLIN_PLAYER_ARMOR_PREDICATE
c	ju	net/minecraft/data/advancements/packs/VanillaStoryAdvancements
	m	(Lhf$b;Ljava/util/function/Consumer;)V	a	generate
		p	1		lookup
		p	2		exporter
c	jv	net/minecraft/data/advancements/packs/VanillaTheEndAdvancements
	m	(Lhf$b;Ljava/util/function/Consumer;)V	a	generate
		p	1		lookup
		p	2		exporter
c	jw	net/minecraft/data/advancements/packs/package-info
c	jx	net/minecraft/data/info/BiomeParametersDumpReport
	m	(Ljj;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
		p	1		output
		p	2		registryLookupFuture
	m	()Ljava/lang/String;	a	getName
	m	(I)[Ljava/util/concurrent/CompletableFuture;	a	lambda$run$1
	m	(Ladd;)Ljava/nio/file/Path;	a	createPath
		p	1		id
	m	(Ljava/nio/file/Path;Ljava/lang/String;)V	a	lambda$dumpValue$3
		p	1		error
	m	(Ljava/nio/file/Path;Ljf;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/Encoder;Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture;	a	dumpValue
		p	0		path
		p	1		writer
		p	2		ops
		p	3		codec
		p	4		biomeSource
	m	(Ljava/util/List;Ljf;Lcom/mojang/serialization/DynamicOps;Lcnt$a;Lcno$c;)V	a	lambda$run$0
		p	4		preset
		p	5		entries
	m	(Ljf;)Ljava/util/concurrent/CompletableFuture;	a	run
		p	1		writer
	m	(Ljf;Lhf$b;)Ljava/util/concurrent/CompletionStage;	a	lambda$run$2
		p	2		lookup
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	Ljava/nio/file/Path;	e	topPath
	f	Ljava/util/concurrent/CompletableFuture;	f	registries
	f	Lcom/mojang/serialization/MapCodec;	g	ENTRY_CODEC
	f	Lcom/mojang/serialization/Codec;	h	CODEC
c	jy	net/minecraft/data/info/BlockListReport
	m	(Ljj;)V	<init>	<init>
		p	1		output
	m	()Ljava/lang/String;	a	getName
	m	(Ljf;)Ljava/util/concurrent/CompletableFuture;	a	run
		p	1		writer
	f	Ljj;	d	output
c	jz	net/minecraft/data/info/CommandsReport
	m	(Ljj;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
		p	1		output
		p	2		registryLookupFuture
	m	()Ljava/lang/String;	a	getName
	m	(Ljf;)Ljava/util/concurrent/CompletableFuture;	a	run
		p	1		writer
	m	(Ljf;Ljava/nio/file/Path;Lhf$b;)Ljava/util/concurrent/CompletionStage;	a	lambda$run$0
		p	2		lookup
	f	Ljj;	d	output
	f	Ljava/util/concurrent/CompletableFuture;	e	registries
c	ka	net/minecraft/data/info/RegistryDumpReport
	m	(Ljj;)V	<init>	<init>
		p	1		output
	m	()Ljava/lang/String;	a	getName
	m	(Lcom/google/gson/JsonObject;Lhd$c;)V	a	lambda$run$0
		p	1		entry
	m	(Lhq;)Lcom/google/gson/JsonElement;	a	dumpRegistry
		p	0		registry
	m	(Lhq;Lcom/google/gson/JsonObject;Lhd$c;)V	a	lambda$dumpRegistry$1
		p	2		entry
	m	(Ljf;)Ljava/util/concurrent/CompletableFuture;	a	run
		p	1		writer
	f	Ljj;	d	output
c	kb	net/minecraft/data/info/package-info
c	kc	net/minecraft/data/loot/BlockLootSubProvider
	m	(Ljava/util/Set;Lcau;)V	<init>	<init>
		p	1		explosionImmuneItems
		p	2		requiredFeatures
	m	()Ldyu$a;	a	noDrop
	m	(Lcmh;)Ldyu$a;	a	createSingleItemTable
		p	1		drop
	m	(Lcmh;Ldzz;)Ldzz;	a	applyExplosionDecay
		p	1		drop
		p	2		builder
	m	(Lcmh;Lebe;)Lebe;	a	applyExplosionCondition
		p	1		drop
		p	2		builder
	m	(Lcmh;Lecg;)Ldyu$a;	a	createSingleItemTable
		p	1		drop
		p	2		count
	m	(Lcpi;)Ldyu$a;	a	createSlabItemTable
		p	1		drop
	m	(Lcpi;Lcfq;)Ldyu$a;	a	createOreDrop
		p	1		dropWithSilkTouch
		p	2		drop
	m	(Lcpi;Lcfq;Lcfq;Lebl$a;)Ldyu$a;	a	createCropDrops
		p	1		crop
		p	2		product
		p	3		seeds
		p	4		condition
	m	(Lcpi;Lcmh;)Ldyu$a;	a	createSingleItemTableWithSilkTouch
		p	1		dropWithSilkTouch
		p	2		drop
	m	(Lcpi;Lcmh;Lecg;)Ldyu$a;	a	createSingleItemTableWithSilkTouch
		p	1		dropWithSilkTouch
		p	2		drop
		p	3		count
	m	(Lcpi;Lcpi;)Ldyu$a;	a	createDoublePlantWithSeedDrops
		p	1		tallGrass
		p	2		grass
	m	(Lcpi;Lcpi;[F)Ldyu$a;	a	createLeavesDrops
		p	1		leaves
		p	2		drop
		p	3		chance
	m	(Lcpi;Ldcu;Ljava/lang/Comparable;)Ldyu$a;	a	createSinglePropConditionTable
		p	1		drop
		p	2		property
		p	3		value
	m	(Lcpi;Ldyu$a;)V	a	add
		p	1		block
		p	2		lootTable
	m	(Lcpi;Ldzj$a;)Ldyu$a;	a	createSilkTouchDispatchTable
		p	0		drop
		p	1		child
	m	(Lcpi;Lebl$a;)Ldyu$a;	a	createMultifaceBlockDrops
		p	1		drop
		p	2		condition
	m	(Lcpi;Lebl$a;Ldzj$a;)Ldyu$a;	a	createSelfDropDispatchTable
		p	0		drop
		p	1		conditionBuilder
		p	2		child
	m	(Lcpi;Lgz;)Leac$a;	a	lambda$createMultifaceBlockDrops$1
	m	(Lcpi;Ljava/lang/Integer;)Leac$a;	a	lambda$createPetalsDrops$3
		p	1		flowerAmount
	m	(Lcpi;Ljava/util/function/Function;)V	a	add
		p	1		block
		p	2		lootTableFunction
	m	()V	b	generate
	m	(Lcmh;)Ldyu$a;	b	createShearsOnlyDrop
		p	0		drop
	m	(Lcpi;)Ldyu$a;	b	createNameableBlockEntityTable
		p	1		drop
	m	(Lcpi;Lcfq;)Ldyu$a;	b	createStemDrops
		p	1		stem
		p	2		drop
	m	(Lcpi;Lcmh;)Ldyu$a;	b	createMushroomBlockDrop
		p	1		dropWithSilkTouch
		p	2		drop
	m	(Lcpi;Lcpi;)V	b	addNetherVinesDropTable
		p	1		block
		p	2		drop
	m	(Lcpi;Lcpi;[F)Ldyu$a;	b	createOakLeavesDrops
		p	1		leaves
		p	2		drop
		p	3		chance
	m	(Lcpi;Ldzj$a;)Ldyu$a;	b	createShearsDispatchTable
		p	0		drop
		p	1		child
	m	(Lcpi;Ljava/lang/Integer;)Leac$a;	b	lambda$createCandleDrops$2
		p	1		candles
	m	(Lcmh;)Ldyu$a;	c	createSilkTouchOnlyTable
		p	0		drop
	m	(Lcpi;)Ldyu$a;	c	createShulkerBoxDrop
		p	1		drop
	m	(Lcpi;Lcfq;)Ldyu$a;	c	createAttachedStemDrops
		p	1		stem
		p	2		drop
	m	(Lcpi;Lcmh;)V	c	dropOther
		p	1		block
		p	2		drop
	m	(Lcpi;Lcpi;)V	c	otherWhenSilkTouch
		p	1		block
		p	2		drop
	m	(Lcpi;Ldzj$a;)Ldyu$a;	c	createSilkTouchOrShearsDispatchTable
		p	0		drop
		p	1		child
	m	(Lcpi;Ljava/lang/Integer;)Leac$a;	c	lambda$createStemDrops$0
	m	(Lcmh;)Ldyu$a;	d	createPotFlowerItemTable
		p	1		drop
	m	(Lcpi;)Ldyu$a;	d	createCopperOreDrops
		p	1		drop
	m	(Lcpi;)Ldyu$a;	e	createLapisOreDrops
		p	1		drop
	m	(Lcpi;)Ldyu$a;	f	createRedstoneOreDrops
		p	1		drop
	m	(Lcpi;)Ldyu$a;	g	createBannerDrop
		p	1		drop
	m	(Ljava/util/function/BiConsumer;)V	generate	generate
		p	1		exporter
	m	(Lcpi;)Ldyu$a;	h	createBeeNestDrop
		p	0		drop
	m	(Lcpi;)Ldyu$a;	i	createBeeHiveDrop
		p	0		drop
	m	(Lcpi;)Ldyu$a;	j	createCaveVinesDrop
		p	0		drop
	m	(Lcpi;)Ldyu$a;	k	createGrassDrops
		p	1		dropWithShears
	m	(Lcpi;)Ldyu$a;	l	createMangroveLeavesDrops
		p	1		leaves
	m	(Lcpi;)Ldyu$a;	m	createDoublePlantShearsDrop
		p	0		seagrass
	m	(Lcpi;)Ldyu$a;	n	createCandleDrops
		p	1		candle
	m	(Lcpi;)Ldyu$a;	o	createPetalsDrops
		p	1		flowerbed
	m	(Lcpi;)Ldyu$a;	p	createCandleCakeDrops
		p	0		candleCake
	m	(Lcpi;)Ldyu$a;	q	createDoorTable
		p	1		block
	m	(Lcpi;)V	r	dropPottedContents
		p	1		block
	m	(Lcpi;)V	s	dropWhenSilkTouch
		p	1		block
	m	(Lcpi;)V	t	dropSelf
		p	1		block
	m	(Lcpi;)Ldyu$a;	u	lambda$dropPottedContents$4
		p	1		flowerPot
	f	Lebl$a;	a	HAS_SILK_TOUCH
	f	Lebl$a;	b	HAS_NO_SILK_TOUCH
	f	Lebl$a;	c	HAS_SHEARS
	f	[F	d	NORMAL_LEAVES_SAPLING_CHANCES
	f	Lebl$a;	e	HAS_SHEARS_OR_SILK_TOUCH
	f	Lebl$a;	f	HAS_NO_SHEARS_OR_SILK_TOUCH
	f	Ljava/util/Set;	g	explosionResistant
	f	Lcau;	h	enabledFeatures
	f	Ljava/util/Map;	i	map
	f	[F	j	NORMAL_LEAVES_STICK_CHANCES
c	kd	net/minecraft/data/loot/EntityLootSubProvider
	m	(Lcau;)V	<init>	<init>
		p	1		requiredFeatures
	m	(Lcau;Lcau;)V	<init>	<init>
		p	1		requiredFeatures
		p	2		featureSet
	m	()V	a	generate
	m	(Lbfl;)Z	a	canHaveLootTable
		p	0		entityType
	m	(Lbfl;Ladd;Ldyu$a;)V	a	add
		p	1		entityType
		p	2		entityId
		p	3		lootTable
	m	(Lbfl;Ldyu$a;)V	a	add
		p	1		entityType
		p	2		lootTable
	m	(Lbru;)Lebl$a;	a	killedByFrogVariant
		p	1		variant
	m	(Lcmh;)Ldyu$a;	a	createSheepTable
		p	0		item
	m	(Ljava/util/Set;Lhd$c;Ljava/util/function/BiConsumer;Ladd;Ldyu$a;)V	a	lambda$generate$0
		p	3		lootTableId
		p	4		lootTableBuilder
	m	(Ljava/util/Set;Ljava/util/function/BiConsumer;Lhd$c;)V	a	lambda$generate$1
		p	3		entityType
	m	()Lebl$a;	b	killedByFrog
	m	(Lbfl;)Ljava/util/Map;	b	lambda$add$2
		p	0		type
	m	(Ljava/util/function/BiConsumer;)V	generate	generate
		p	1		exporter
	f	Lbn$a;	a	ENTITY_ON_FIRE
	f	Ljava/util/Set;	b	SPECIAL_LOOT_TABLE_TYPES
	f	Lcau;	c	allowed
	f	Lcau;	d	required
	f	Ljava/util/Map;	e	map
c	ke	net/minecraft/data/loot/LootTableProvider
	m	(Ljj;Ljava/util/Set;Ljava/util/List;)V	<init>	<init>
		p	1		output
		p	2		lootTableIds
		p	3		lootTypeGenerators
	m	()Ljava/lang/String;	a	getName
	m	(I)[Ljava/util/concurrent/CompletableFuture;	a	lambda$run$6
	m	(Ladd;)Lebl;	a	lambda$run$2
		p	0		id
	m	(Ldyz;Ladd;Ldyu;)V	a	lambda$run$3
		p	1		id
		p	2		table
	m	(Ljava/lang/String;Ljava/lang/String;)V	a	lambda$run$4
		p	0		name
		p	1		message
	m	(Ljava/util/Map;Lke$a;)V	a	lambda$run$1
		p	1		lootTypeGenerator
	m	(Ljava/util/Map;Lke$a;Ladd;Ldyu$a;)V	a	lambda$run$0
		p	2		id
		p	3		builder
	m	(Ljf;)Ljava/util/concurrent/CompletableFuture;	a	run
		p	1		writer
	m	(Ljf;Ljava/util/Map$Entry;)Ljava/util/concurrent/CompletableFuture;	a	lambda$run$5
		p	2		entry
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	Ljj$a;	e	pathProvider
	f	Ljava/util/Set;	f	requiredTables
	f	Ljava/util/List;	g	subProviders
c	ke$a	net/minecraft/data/loot/LootTableProvider$SubProviderEntry
	m	()Ljava/util/function/Supplier;	a	provider
	m	()Leax;	b	paramSet
	f	Ljava/util/function/Supplier;	a	provider
	f	Leax;	b	paramSet
c	kf	net/minecraft/data/loot/LootTableSubProvider
	m	(Ljava/util/function/BiConsumer;)V	generate	generate
		p	1		exporter
c	kg	net/minecraft/data/loot/package-info
c	kh	net/minecraft/data/loot/packs/UpdateOneTwentyArchaeologyLoot
	m	(Ljava/util/function/BiConsumer;)V	generate	generate
		p	1		exporter
c	ki	net/minecraft/data/loot/packs/UpdateOneTwentyBlockLoot
	m	(Lki;Lcpi;)Ldyu$a;	a	lambda$generate$4
		p	1		block
	m	()V	b	generate
	m	(Lki;Lcpi;)Ldyu$a;	b	lambda$generate$3
		p	1		block
	m	(Lki;Lcpi;)Ldyu$a;	c	lambda$generate$2
		p	1		block
	m	(Lki;Lcpi;)Ldyu$a;	d	lambda$generate$1
		p	1		block
	m	(Lki;Lcpi;)Ldyu$a;	e	lambda$generate$0
		p	1		block
	m	(Lcpi;)Ldyu$a;	u	lambda$generate$5
		p	1		block
c	kj	net/minecraft/data/loot/packs/UpdateOneTwentyBuiltInLootTables
	m	()Ljava/util/Set;	a	all
	m	(Ladd;)Ladd;	a	register
		p	0		id
	m	(Ljava/lang/String;)Ladd;	a	register
		p	0		id
	f	Ladd;	a	DESERT_WELL_ARCHAEOLOGY
	f	Ladd;	b	DESERT_PYRAMID_ARCHAEOLOGY
	f	Ljava/util/Set;	c	LOCATIONS
	f	Ljava/util/Set;	d	IMMUTABLE_LOCATIONS
c	kk	net/minecraft/data/loot/packs/UpdateOneTwentyChestLoot
	m	(Ljava/util/function/BiConsumer;)V	generate	generate
		p	1		exporter
c	kl	net/minecraft/data/loot/packs/UpdateOneTwentyEntityLoot
	m	()V	a	generate
c	km	net/minecraft/data/loot/packs/UpdateOneTwentyFishingLoot
	m	(Ljava/util/function/BiConsumer;)V	generate	generate
		p	1		exporter
c	kn	net/minecraft/data/loot/packs/UpdateOneTwentyLootTableProvider
	m	(Ljj;)Lke;	a	create
		p	0		output
c	ko	net/minecraft/data/loot/packs/VanillaBlockLoot
	m	(Lcpi;)Ldyu$a;	A	lambda$generate$223
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	A	lambda$generate$151
		p	1		block
	m	(Lcpi;)Ldyu$a;	B	lambda$generate$222
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	B	lambda$generate$150
		p	1		block
	m	(Lcpi;)Ldyu$a;	C	lambda$generate$219
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	C	lambda$generate$149
		p	1		block
	m	(Lcpi;)Ldyu$a;	D	lambda$generate$218
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	D	lambda$generate$148
		p	1		block
	m	(Lcpi;)Ldyu$a;	E	lambda$generate$215
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	E	lambda$generate$147
		p	1		block
	m	(Lcpi;)Ldyu$a;	F	lambda$generate$214
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	F	lambda$generate$146
		p	1		block
	m	(Lcpi;)Ldyu$a;	G	lambda$generate$213
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	G	lambda$generate$145
		p	1		block
	m	(Lcpi;)Ldyu$a;	H	lambda$generate$212
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	H	lambda$generate$144
		p	1		block
	m	(Lcpi;)Ldyu$a;	I	lambda$generate$211
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	I	lambda$generate$143
		p	1		block
	m	(Lcpi;)Ldyu$a;	J	lambda$generate$210
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	J	lambda$generate$142
		p	1		block
	m	(Lcpi;)Ldyu$a;	K	lambda$generate$209
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	K	lambda$generate$141
		p	1		block
	m	(Lcpi;)Ldyu$a;	L	lambda$generate$205
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	L	lambda$generate$140
		p	1		block
	m	(Lcpi;)Ldyu$a;	M	lambda$generate$201
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	M	lambda$generate$139
		p	1		block
	m	(Lcpi;)Ldyu$a;	N	lambda$generate$200
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	N	lambda$generate$138
		p	1		block
	m	(Lcpi;)Ldyu$a;	O	lambda$generate$197
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	O	lambda$generate$137
		p	1		block
	m	(Lcpi;)Ldyu$a;	P	lambda$generate$196
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	P	lambda$generate$136
		p	1		block
	m	(Lcpi;)Ldyu$a;	Q	lambda$generate$195
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	Q	lambda$generate$135
		p	1		block
	m	(Lcpi;)Ldyu$a;	R	lambda$generate$194
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	R	lambda$generate$134
		p	1		block
	m	(Lcpi;)Ldyu$a;	S	lambda$generate$193
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	S	lambda$generate$133
		p	1		block
	m	(Lcpi;)Ldyu$a;	T	lambda$generate$190
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	T	lambda$generate$132
		p	1		block
	m	(Lcpi;)Ldyu$a;	U	lambda$generate$189
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	U	lambda$generate$131
		p	1		block
	m	(Lcpi;)Ldyu$a;	V	lambda$generate$188
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	V	lambda$generate$130
		p	1		block
	m	(Lcpi;)Ldyu$a;	W	lambda$generate$187
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	W	lambda$generate$129
		p	1		block
	m	(Lcpi;)Ldyu$a;	X	lambda$generate$186
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	X	lambda$generate$128
		p	1		block
	m	(Lcpi;)Ldyu$a;	Y	lambda$generate$185
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	Y	lambda$generate$127
		p	1		block
	m	(Lcpi;)Ldyu$a;	Z	lambda$generate$184
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	Z	lambda$generate$126
		p	1		block
	m	(Lcpi;Ljava/lang/Integer;)Ldzj$a;	a	lambda$generate$225
	m	(Lko;Lcpi;)Ldyu$a;	a	lambda$generate$221
		p	1		block
	m	(Lcpi;)Ldyu$a;	aA	lambda$generate$94
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	aA	lambda$generate$73
		p	1		block
	m	(Lcpi;)Ldyu$a;	aB	lambda$generate$93
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	aB	lambda$generate$72
		p	1		block
	m	(Lcpi;)Ldyu$a;	aC	lambda$generate$92
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	aC	lambda$generate$71
		p	1		block
	m	(Lcpi;)Ldyu$a;	aD	lambda$generate$91
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	aD	lambda$generate$70
		p	1		block
	m	(Lcpi;)Ldyu$a;	aE	lambda$generate$90
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	aE	lambda$generate$69
		p	1		block
	m	(Lcpi;)Ldyu$a;	aF	lambda$generate$89
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	aF	lambda$generate$68
		p	1		block
	m	(Lcpi;)Ldyu$a;	aG	lambda$generate$88
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	aG	lambda$generate$67
		p	1		block
	m	(Lcpi;)Ldyu$a;	aH	lambda$generate$87
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	aH	lambda$generate$66
		p	1		block
	m	(Lcpi;)Ldyu$a;	aI	lambda$generate$86
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	aI	lambda$generate$65
		p	1		block
	m	(Lcpi;)Ldyu$a;	aJ	lambda$generate$85
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	aJ	lambda$generate$64
		p	1		block
	m	(Lcpi;)Ldyu$a;	aK	lambda$generate$84
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	aK	lambda$generate$63
		p	1		block
	m	(Lcpi;)Ldyu$a;	aL	lambda$generate$83
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	aL	lambda$generate$62
		p	1		block
	m	(Lcpi;)Ldyu$a;	aM	lambda$generate$82
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	aM	lambda$generate$61
		p	1		block
	m	(Lcpi;)Ldyu$a;	aN	lambda$generate$81
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	aN	lambda$generate$60
		p	1		block
	m	(Lcpi;)Ldyu$a;	aO	lambda$generate$16
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	aO	lambda$generate$59
		p	1		block
	m	(Lcpi;)Ldyu$a;	aP	lambda$generate$15
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	aP	lambda$generate$58
		p	1		block
	m	(Lcpi;)Ldyu$a;	aQ	lambda$generate$14
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	aQ	lambda$generate$57
		p	1		block
	m	(Lcpi;)Ldyu$a;	aR	lambda$generate$13
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	aR	lambda$generate$56
		p	1		block
	m	(Lcpi;)Ldyu$a;	aS	lambda$generate$12
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	aS	lambda$generate$55
		p	1		block
	m	(Lcpi;)Ldyu$a;	aT	lambda$generate$11
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	aT	lambda$generate$54
		p	1		block
	m	(Lcpi;)Ldyu$a;	aU	lambda$generate$10
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	aU	lambda$generate$53
		p	1		block
	m	(Lcpi;)Ldyu$a;	aV	lambda$generate$9
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	aV	lambda$generate$52
		p	1		block
	m	(Lcpi;)Ldyu$a;	aW	lambda$generate$8
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	aW	lambda$generate$51
		p	1		block
	m	(Lcpi;)Ldyu$a;	aX	lambda$generate$7
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	aX	lambda$generate$50
		p	1		block
	m	(Lcpi;)Ldyu$a;	aY	lambda$generate$6
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	aY	lambda$generate$49
		p	1		block
	m	(Lcpi;)Ldyu$a;	aZ	lambda$generate$5
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	aZ	lambda$generate$48
		p	1		block
	m	(Lcpi;)Ldyu$a;	aa	lambda$generate$183
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	aa	lambda$generate$125
		p	1		block
	m	(Lcpi;)Ldyu$a;	ab	lambda$generate$182
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	ab	lambda$generate$124
		p	1		block
	m	(Lcpi;)Ldyu$a;	ac	lambda$generate$181
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	ac	lambda$generate$123
		p	1		block
	m	(Lcpi;)Ldyu$a;	ad	lambda$generate$180
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	ad	lambda$generate$122
		p	1		block
	m	(Lcpi;)Ldyu$a;	ae	lambda$generate$179
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	ae	lambda$generate$121
		p	1		block
	m	(Lcpi;)Ldyu$a;	af	lambda$generate$178
	m	(Lko;Lcpi;)Ldyu$a;	af	lambda$generate$120
		p	1		block
	m	(Lcpi;)Ldyu$a;	ag	lambda$generate$177
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	ag	lambda$generate$119
		p	1		block
	m	(Lcpi;)Ldyu$a;	ah	lambda$generate$176
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	ah	lambda$generate$118
		p	1		block
	m	(Lcpi;)Ldyu$a;	ai	lambda$generate$175
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	ai	lambda$generate$117
		p	1		block
	m	(Lcpi;)Ldyu$a;	aj	lambda$generate$174
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	aj	lambda$generate$116
		p	1		block
	m	(Lcpi;)Ldyu$a;	ak	lambda$generate$173
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	ak	lambda$generate$115
		p	1		block
	m	(Lcpi;)Ldyu$a;	al	lambda$generate$172
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	al	lambda$generate$114
		p	1		block
	m	(Lcpi;)Ldyu$a;	am	lambda$generate$171
		p	0		block
	m	(Lko;Lcpi;)Ldyu$a;	am	lambda$generate$113
		p	1		block
	m	(Lcpi;)Ldyu$a;	an	lambda$generate$170
		p	0		block
	m	(Lko;Lcpi;)Ldyu$a;	an	lambda$generate$112
		p	1		block
	m	(Lcpi;)Ldyu$a;	ao	lambda$generate$169
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	ao	lambda$generate$111
		p	1		block
	m	(Lcpi;)Ldyu$a;	ap	lambda$generate$106
		p	0		block
	m	(Lko;Lcpi;)Ldyu$a;	ap	lambda$generate$110
		p	1		block
	m	(Lcpi;)Ldyu$a;	aq	lambda$generate$105
		p	0		block
	m	(Lko;Lcpi;)Ldyu$a;	aq	lambda$generate$109
		p	1		block
	m	(Lcpi;)Ldyu$a;	ar	lambda$generate$104
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	ar	lambda$generate$108
		p	1		block
	m	(Lcpi;)Ldyu$a;	as	lambda$generate$103
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	as	lambda$generate$107
		p	1		block
	m	(Lcpi;)Ldyu$a;	at	lambda$generate$101
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	at	lambda$generate$80
		p	1		block
	m	(Lcpi;)Ldyu$a;	au	lambda$generate$100
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	au	lambda$generate$79
		p	1		block
	m	(Lcpi;)Ldyu$a;	av	lambda$generate$99
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	av	lambda$generate$78
		p	1		block
	m	(Lcpi;)Ldyu$a;	aw	lambda$generate$98
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	aw	lambda$generate$77
		p	1		block
	m	(Lcpi;)Ldyu$a;	ax	lambda$generate$97
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	ax	lambda$generate$76
		p	1		block
	m	(Lcpi;)Ldyu$a;	ay	lambda$generate$96
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	ay	lambda$generate$75
		p	1		block
	m	(Lcpi;)Ldyu$a;	az	lambda$generate$95
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	az	lambda$generate$74
		p	1		block
	m	()V	b	generate
	m	(Lcpi;Ljava/lang/Integer;)Ldzj$a;	b	lambda$generate$224
	m	(Lko;Lcpi;)Ldyu$a;	b	lambda$generate$220
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	bA	lambda$generate$21
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	bB	lambda$generate$20
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	bC	lambda$generate$19
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	bD	lambda$generate$18
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	bE	lambda$generate$17
		p	1		block
	m	(Lcpi;)Ldyu$a;	ba	lambda$generate$4
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	ba	lambda$generate$47
		p	1		block
	m	(Lcpi;)Ldyu$a;	bb	lambda$generate$3
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	bb	lambda$generate$46
		p	1		block
	m	(Lcpi;)Ldyu$a;	bc	lambda$generate$2
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	bc	lambda$generate$45
		p	1		block
	m	(Lcpi;)Ldyu$a;	bd	lambda$generate$1
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	bd	lambda$generate$44
		p	1		block
	m	(Lcpi;)Ldyu$a;	be	lambda$generate$0
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	be	lambda$generate$43
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	bf	lambda$generate$42
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	bg	lambda$generate$41
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	bh	lambda$generate$40
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	bi	lambda$generate$39
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	bj	lambda$generate$38
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	bk	lambda$generate$37
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	bl	lambda$generate$36
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	bm	lambda$generate$35
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	bn	lambda$generate$34
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	bo	lambda$generate$33
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	bp	lambda$generate$32
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	bq	lambda$generate$31
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	br	lambda$generate$30
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	bs	lambda$generate$29
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	bt	lambda$generate$28
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	bu	lambda$generate$27
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	bv	lambda$generate$26
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	bw	lambda$generate$25
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	bx	lambda$generate$24
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	by	lambda$generate$23
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	bz	lambda$generate$22
		p	1		block
	m	(Lcmh;)Ldyu$a;	c	lambda$generate$207
		p	0		block
	m	(Lcpi;Ljava/lang/Integer;)Leac$a;	c	lambda$generate$102
		p	1		pickles
	m	(Lko;Lcpi;)Ldyu$a;	c	lambda$generate$217
		p	1		block
	m	(Lcmh;)Ldyu$a;	d	lambda$generate$206
		p	0		block
	m	(Lko;Lcpi;)Ldyu$a;	d	lambda$generate$216
		p	1		block
	m	(Lcmh;)Ldyu$a;	e	lambda$generate$204
		p	0		block
	m	(Lko;Lcpi;)Ldyu$a;	e	lambda$generate$208
		p	1		block
	m	(Lcmh;)Ldyu$a;	f	lambda$generate$203
		p	0		block
	m	(Lko;Lcpi;)Ldyu$a;	f	lambda$generate$199
		p	1		block
	m	(Lcmh;)Ldyu$a;	g	lambda$generate$202
		p	0		block
	m	(Lko;Lcpi;)Ldyu$a;	g	lambda$generate$198
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	h	lambda$generate$192
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	i	lambda$generate$191
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	j	lambda$generate$168
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	k	lambda$generate$167
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	l	lambda$generate$166
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	m	lambda$generate$165
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	n	lambda$generate$164
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	o	lambda$generate$163
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	p	lambda$generate$162
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	q	lambda$generate$161
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	r	lambda$generate$160
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	s	lambda$generate$159
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	t	lambda$generate$158
		p	1		block
	m	(Lcpi;)Ldyu$a;	u	lambda$generate$231
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	u	lambda$generate$157
		p	1		block
	m	(Lcpi;)Ldyu$a;	v	lambda$generate$230
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	v	lambda$generate$156
		p	1		block
	m	(Lcpi;)Ldyu$a;	w	lambda$generate$229
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	w	lambda$generate$155
		p	1		block
	m	(Lcpi;)Ldyu$a;	x	lambda$generate$228
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	x	lambda$generate$154
		p	1		block
	m	(Lcpi;)Ldyu$a;	y	lambda$generate$227
		p	1		block
	m	(Lko;Lcpi;)Ldyu$a;	y	lambda$generate$153
		p	1		block
	m	(Lcpi;)Ldyu$a;	z	lambda$generate$226
		p	0		block
	m	(Lko;Lcpi;)Ldyu$a;	z	lambda$generate$152
		p	1		block
	f	[F	e	JUNGLE_LEAVES_SAPLING_CHANGES
	f	Ljava/util/Set;	f	EXPLOSION_RESISTANT
c	kp	net/minecraft/data/loot/packs/VanillaChestLoot
	m	()Ldyu$a;	a	shipwreckSupplyLootTable
	m	()Ldyu$a;	b	shipwreckMapLootTable
	m	()Ldyu$a;	c	bastionHoglinStableLootTable
	m	()Ldyu$a;	d	bastionBridgeLootTable
	m	()Ldyu$a;	e	endCityTreasureLootTable
	m	()Ldyu$a;	f	netherBridgeLootTable
	m	()Ldyu$a;	g	bastionTreasureLootTable
	m	(Ljava/util/function/BiConsumer;)V	generate	generate
		p	1		exporter
	m	()Ldyu$a;	h	bastionOtherLootTable
	m	()Ldyu$a;	i	woodlandMansionLootTable
	m	()Ldyu$a;	j	strongholdLibraryLootTable
	m	()Ldyu$a;	k	strongholdCorridorLootTable
	m	()Ldyu$a;	l	ancientCityLootTable
	m	()Ldyu$a;	m	jungleTempleLootTable
	m	()Ldyu$a;	n	shipwreckTreasureLootTable
	m	()Ldyu$a;	o	pillagerOutpostLootTable
	m	()Ldyu$a;	p	desertPyramidLootTable
c	kq	net/minecraft/data/loot/packs/VanillaEntityLoot
	m	()V	a	generate
	m	()Ldyu$a;	c	elderGuardianLootTable
c	kr	net/minecraft/data/loot/packs/VanillaFishingLoot
	m	()Ldyu$a;	a	fishingFishLootTable
	m	(Ljava/util/function/BiConsumer;)V	generate	generate
		p	1		exporter
	f	Lebl$a;	a	IN_JUNGLE
	f	Lebl$a;	b	IN_SPARSE_JUNGLE
	f	Lebl$a;	c	IN_BAMBOO_JUNGLE
c	ks	net/minecraft/data/loot/packs/VanillaGiftLoot
	m	(Ljava/util/function/BiConsumer;)V	generate	generate
		p	1		exporter
c	kt	net/minecraft/data/loot/packs/VanillaLootTableProvider
	m	(Ljj;)Lke;	a	create
		p	0		output
c	ku	net/minecraft/data/loot/packs/VanillaPiglinBarterLoot
	m	(Ljava/util/function/BiConsumer;)V	generate	generate
		p	1		exporter
c	kv	net/minecraft/data/loot/packs/package-info
c	kw	net/minecraft/data/metadata/PackMetadataGenerator
	m	(Ljj;)V	<init>	<init>
		p	1		output
	m	()Ljava/lang/String;	a	getName
	m	(Laki;Ljava/lang/Object;)Lkw;	a	add
		p	1		serializer
		p	2		metadata
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/util/function/Supplier;)V	a	lambda$run$1
		p	1		key
		p	2		jsonSupplier
	m	(Ljf;)Ljava/util/concurrent/CompletableFuture;	a	run
		p	1		writer
	m	(Ljj;Ltj;)Lkw;	a	forFeaturePack
		p	0		output
		p	1		description
	m	(Ljj;Ltj;Lcau;)Lkw;	a	forFeaturePack
		p	0		output
		p	1		description
		p	2		requiredFeatures
	m	(Laki;Ljava/lang/Object;)Lcom/google/gson/JsonElement;	b	lambda$add$0
	f	Ljj;	d	output
	f	Ljava/util/Map;	e	elements
c	kx	net/minecraft/data/metadata/package-info
c	ky	net/minecraft/data/models/BlockModelGenerators
	m	(Ljava/util/function/Consumer;Ljava/util/function/BiConsumer;Ljava/util/function/Consumer;)V	<init>	<init>
		p	1		blockStateCollector
		p	2		modelCollector
		p	3		simpleItemModelExemptionCollector
	m	()V	A	createChorusFlower
	m	(Lcpi;)V	A	createLantern
		p	1		lantern
	m	()V	B	createEndPortalFrame
	m	(Lcpi;)V	B	createNonTemplateHorizontalBlock
		p	1		block
	m	()V	C	createChorusPlant
	m	(Lcpi;)V	C	createMultiface
		p	1		block
	m	()V	D	createComposter
	m	(Lcpi;)V	D	createShulkerBox
		p	1		shulkerBox
	m	()V	E	createAmethystClusters
	m	()V	F	createPointedDripstone
	m	()V	G	createDaylightDetector
	m	()V	H	createLightningRod
	m	()V	I	createFarmland
	m	()V	J	createFire
	m	()V	K	createSoulFire
	m	()V	L	createMuddyMangroveRoots
	m	()V	M	createMangrovePropagule
	m	()V	N	createFrostedIce
	m	()V	O	createGrassBlocks
	m	()V	P	createCocoa
	m	()V	Q	createDirtPath
	m	()V	R	createHopper
	m	()V	S	createIronBars
	m	()V	T	createLever
	m	()V	U	createLilyPad
	m	()V	V	createFrogspawnBlock
	m	()V	W	createNetherPortalBlock
	m	()V	X	createNetherrack
	m	()V	Y	createObserver
	m	()V	Z	createPistons
	m	()V	a	run
	m	(I)Ljava/util/List;	a	createBambooModels
		p	1		age
	m	(ILjava/lang/String;Llp;)Ladd;	a	createTurtleEggModel
		p	1		eggs
		p	2		prefix
		p	3		textures
	m	(Ladd;)[Llh;	a	createRotatedVariants
		p	0		modelId
	m	(Ladd;Ladd;Ladd;Ladd;Ladd;Ladd;Ljava/lang/Boolean;Ldcv;)Llh;	a	lambda$createActiveRail$8
		p	6		on
		p	7		shape
	m	(Ladd;Ladd;Ldcy;)Llh;	a	lambda$createSculkSensor$31
	m	(Ladd;Ladd;Ljava/lang/Boolean;)Llh;	a	lambda$createSculkCatalyst$46
	m	(Ladd;Lcpi;)Lky$a;	a	blockEntityModels
		p	1		modelId
		p	2		particleBlock
	m	(Ladd;Ljava/lang/Integer;)Llh;	a	lambda$createSnowBlocks$33
		p	1		height
	m	(Ladd;Llp;)V	a	lambda$createGrassBlocks$30
		p	1		textures
	m	(Lcfq;)V	a	createSimpleFlatItemModel
		p	1		item
	m	(Lcfq;Ladd;)V	a	delegateItemModel
		p	1		item
		p	2		parentModelId
	m	(Lcgz;)V	a	lambda$run$53
		p	1		item
	m	(Lcpi;)V	a	skipAutoItemBlock
		p	1		block
	m	(Lcpi;II)Ladd;	a	lambda$createCropBlock$13
	m	(Lcpi;Ladd;)V	a	delegateItemModel
		p	1		block
		p	2		parentModelId
	m	(Lcpi;Ladd;Ladd;)Lle;	a	createRotatedVariant
		p	0		block
		p	1		firstModelId
		p	2		secondModelId
	m	(Lcpi;Ladd;Ladd;Ladd;)Llb;	a	createWall
		p	0		wallBlock
		p	1		postModelId
		p	2		lowSideModelId
		p	3		tallSideModelId
	m	(Lcpi;Ladd;Ladd;Ladd;Ladd;Ladd;)Llb;	a	createCustomFence
		p	0		customFenceBlock
		p	1		postModelId
		p	2		northModelId
		p	3		eastModelId
		p	4		southModelId
		p	5		westModelId
	m	(Lcpi;Ladd;Ladd;Ladd;Ladd;Ladd;Ladd;Ladd;Ladd;)Llb;	a	createDoor
		p	0		doorBlock
		p	1		bottomLeftHingeClosedModelId
		p	2		bottomLeftHingeOpenModelId
		p	3		bottomRightHingeClosedModelId
		p	4		bottomRightHingeOpenModelId
		p	5		topLeftHingeClosedModelId
		p	6		topLeftHingeOpenModelId
		p	7		topRightHingeClosedModelId
		p	8		topRightHingeOpenModelId
	m	(Lcpi;Ladd;Ladd;Ladd;Ladd;Z)Llb;	a	createFenceGate
		p	0		fenceGateBlock
		p	1		openModelId
		p	2		closedModelId
		p	3		openWallModelId
		p	4		closedWallModelId
		p	5		uvlock
	m	(Lcpi;Ladd;Llh;)V	a	createGrassLikeBlock
		p	1		topSoil
		p	2		modelId
		p	3		snowyVariant
	m	(Lcpi;Ladd;Llp;)V	a	createPistonVariant
		p	1		piston
		p	2		extendedModelId
		p	3		textures
	m	(Lcpi;Ladd;Llp;Ljava/util/function/BiConsumer;)Llb;	a	createMirroredCubeGenerator
		p	0		block
		p	1		modelId
		p	2		textures
		p	3		modelCollector
	m	(Lcpi;Lcfq;)V	a	createAirLikeBlock
		p	1		block
		p	2		particleSource
	m	(Lcpi;Lcpi;)V	a	createNonTemplateModelBlock
		p	1		block
		p	2		modelReference
	m	(Lcpi;Lcpi;Lcpi;)V	a	createHangingSign
		p	1		strippedLog
		p	2		hangingSign
		p	3		wallHangingSign
	m	(Lcpi;Lcpi;Lcpi;Lcpi;Lcpi;Lcpi;Lcpi;Lcpi;)V	a	createCoral
		p	1		coral
		p	2		deadCoral
		p	3		coralBlock
		p	4		deadCoralBlock
		p	5		coralFan
		p	6		deadCoralFan
		p	7		coralWallFan
		p	8		deadCoralWallFan
	m	(Lcpi;Lcpi;Ljava/util/function/BiFunction;)V	a	createCraftingTableLike
		p	1		block
		p	2		otherTextureSource
		p	3		texturesFactory
	m	(Lcpi;Lcpi;Lky$e;)V	a	createPlant
		p	1		plantBlock
		p	2		flowerPotBlock
		p	3		tintType
	m	(Lcpi;Ldcu;[I)V	a	createCropBlock
		p	1		crop
		p	2		ageProperty
		p	3		ageTextureIndices
	m	(Lcpi;Ljava/lang/String;)V	a	createSimpleFlatItemModel
		p	1		block
		p	2		textureSuffix
	m	(Lcpi;Ljava/lang/String;Lln;Ljava/util/function/Function;)Ladd;	a	createSuffixedVariant
		p	1		block
		p	2		suffix
		p	3		model
		p	4		texturesFactory
	m	(Lcpi;Ljava/util/function/Function;)V	a	createBeeNest
		p	1		beehive
		p	2		texturesFactory
	m	(Lcpi;Lky$e;)V	a	createCrossBlockWithDefaultItem
		p	1		block
		p	2		tintType
	m	(Lcpi;Lky$e;Ldcu;[I)V	a	createCrossBlock
		p	1		block
		p	2		tintType
		p	3		stageProperty
		p	4		stages
	m	(Lcpi;Lky$e;Llp;)V	a	createCrossBlockWithDefaultItem
		p	1		block
		p	2		tintType
		p	3		texture
	m	(Lcpi;Llc$c;)V	a	lambda$createMultiface$45
	m	(Lcpi;Llc$c;Ldci;)V	a	lambda$createMultiface$44
		p	2		property
	m	(Lcpi;Llp;)V	a	createPumpkinVariant
		p	1		block
		p	2		texture
	m	(Lcpi;Llp;Ljava/lang/Integer;)Llh;	a	lambda$createStems$7
	m	(Lcpi;Llp;Ljava/util/function/BiConsumer;)Llb;	a	createPillarBlockUVLocked
		p	0		block
		p	1		textureMap
		p	2		modelCollector
	m	(Lcpi;Llp;Lln;)V	a	createTrivialBlock
		p	1		block
		p	2		textures
		p	3		model
	m	(Lcpi;Llr$a;)V	a	createAxisAlignedPillarBlock
		p	1		block
		p	2		modelFactory
	m	(Lcpi;Llr$a;Llr$a;)V	a	createRotatedPillarWithHorizontalVariant
		p	1		block
		p	2		verticalModelFactory
		p	3		horizontalModelFactory
	m	(Ldci;Ladd;Ladd;)Llf;	a	createBooleanModelDispatch
		p	0		property
		p	1		trueModel
		p	2		falseModel
	m	(Ldcu;Ljava/lang/Comparable;Ladd;Ladd;)Llf;	a	createEmptyOrFullDispatch
		p	0		property
		p	1		fence
		p	2		higherOrEqualModelId
		p	3		lowerModelId
	m	(Lddb;)Llh;	a	lambda$createStructureBlock$34
		p	1		mode
	m	(Lgz;Ldco;)Llh;	a	createPointedDripstoneVariant
		p	1		direction
		p	2		thickness
	m	(Lhb;)Llh;	a	lambda$createJigsaw$51
	m	(Lhb;Llh;)Llh;	a	applyRotation
		p	1		orientation
		p	2		variant
	m	(Ljava/lang/Boolean;Ljava/lang/Boolean;)Llh;	a	lambda$createTripwireHook$36
	m	(Ljava/lang/Comparable;Llh;Llh;Ljava/lang/Comparable;)Llh;	a	lambda$createEmptyOrFullDispatch$12
	m	(Ljava/lang/Integer;)Llh;	a	lambda$createSweetBerryBush$35
		p	1		stage
	m	(Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/Boolean;)Llh;	a	lambda$createRepeater$32
		p	0		tick
		p	1		locked
		p	2		on
	m	(Ljava/lang/Integer;Ljava/lang/Integer;)Ladd;	a	createTurtleEggModel
		p	1		eggs
		p	2		hatch
	m	(Ljava/lang/String;I)Llh;	a	lambda$createBambooModels$10
	m	(Ljava/util/List;Ljava/util/function/UnaryOperator;)Ljava/util/List;	a	wrapModels
		p	0		modelIds
		p	1		processor
	m	(Lje;)V	a	lambda$run$52
		p	1		family
	m	(Lld;Ladd;Lgz;Lli$a;)V	a	lambda$createChiseledBookshelf$47
		p	3		direction
		p	4		rotation
	m	(Lld;Llc$c;Lli$a;)V	a	addSlotStateAndRotationVariants
		p	1		blockStateSupplier
		p	2		facingCondition
		p	3		rotation
	m	(Lld;Llc$c;Lli$a;Ldci;Lln;)V	a	lambda$addSlotStateAndRotationVariants$48
		p	4		property
		p	5		model
	m	(Lld;Llc$c;Lli$a;Ldci;Lln;Z)V	a	addBookSlotModel
		p	1		blockStateSupplier
		p	2		facingCondition
		p	3		rotation
		p	4		property
		p	5		model
		p	6		occupied
	m	(Llf$d;Ldcn;Ladd;Ladd;Ladd;Ladd;)Llf$d;	a	configureDoorHalf
		p	0		variantMap
		p	1		targetHalf
		p	2		leftHingeClosedModelId
		p	3		leftHingeOpenModelId
		p	4		rightHingeClosedModelId
		p	5		rightHingeOpenModelId
	m	(Llh;)Llh;	a	lambda$createSoulFire$28
	m	(Lln;Ljava/lang/String;Llp;Lky$d;)Ladd;	a	lambda$addBookSlotModel$49
		p	4		key
	m	(Llp;)V	a	lambda$new$4
		p	0		textures
	m	(Llp;Ladd;)Llp;	a	lambda$createChorusFlower$16
		p	1		id
	m	(Llr$a;[Lcpi;)V	a	createColoredBlockWithRandomRotations
		p	1		modelFactory
		p	2		blocks
	m	([ILcpi;Lky$e;Ljava/lang/Integer;)Llh;	a	lambda$createCrossBlock$6
	m	([ILit/unimi/dsi/fastutil/ints/Int2ObjectMap;Lcpi;Ljava/lang/Integer;)Llh;	a	lambda$createCropBlock$14
		p	1		age
	m	([Ladd;Ljava/lang/Integer;)Llh;	a	lambda$createRespawnAnchor$50
		p	1		charges
	m	([Lcpi;)V	a	createCampfires
		p	1		blocks
	m	()V	aa	createPistonHeads
	m	()V	ab	createSculkSensor
	m	()V	ac	createSculkShrieker
	m	()V	ad	createScaffolding
	m	()V	ae	createCaveVines
	m	()V	af	createRedstoneLamp
	m	()V	ag	createRedstoneTorch
	m	()V	ah	createRepeater
	m	()V	ai	createSeaPickle
	m	()V	aj	createSnowBlocks
	m	()V	ak	createStonecutter
	m	()V	al	createStructureBlock
	m	()V	am	createSweetBerryBush
	m	()V	an	createTripwire
	m	()V	ao	createTripwireHook
	m	()V	ap	createTurtleEgg
	m	()V	aq	createSculkCatalyst
	m	()V	ar	createChiseledBookshelf
	m	()V	as	createMagmaBlock
	m	()V	at	createInfestedStone
	m	()V	au	createInfestedDeepslate
	m	()V	av	createRespawnAnchor
	m	()V	aw	createJigsaw
	m	()V	ax	createPetrifiedOakSlab
	m	()V	ay	createLightBlock
	m	()Llf;	b	createHorizontalFacingDispatch
	m	(Ladd;)Llh;	b	lambda$static$43
		p	0		model
	m	(Ladd;Llp;)V	b	lambda$createGrassBlocks$29
		p	1		textures
	m	(Lcpi;)V	b	createSimpleFlatItemModel
		p	1		block
	m	(Lcpi;Ladd;)Lle;	b	createRotatedVariant
		p	0		block
		p	1		modelId
	m	(Lcpi;Ladd;Ladd;)Llb;	b	createButton
		p	0		buttonBlock
		p	1		regularModelId
		p	2		pressedModelId
	m	(Lcpi;Ladd;Ladd;Ladd;)Llb;	b	createStairs
		p	0		stairsBlock
		p	1		innerModelId
		p	2		regularModelId
		p	3		outerModelId
	m	(Lcpi;Ladd;Llp;Ljava/util/function/BiConsumer;)Llb;	b	createNorthWestMirroredCubeGenerator
		p	0		block
		p	1		modelId
		p	2		textures
		p	3		modelCollector
	m	(Lcpi;Lcpi;)V	b	createCoralFans
		p	1		coralFanBlock
		p	2		coralWallFanBlock
	m	(Lcpi;Lcpi;Lky$e;)V	b	createGrowingPlant
		p	1		plant
		p	2		plantStem
		p	3		tintType
	m	(Lcpi;Lky$e;)V	b	createCrossBlock
		p	1		block
		p	2		tintType
	m	(Lcpi;Lky$e;Llp;)V	b	createCrossBlock
		p	1		block
		p	2		tintType
		p	3		crossTexture
	m	(Lcpi;Llr$a;)V	b	createHorizontallyRotatedBlock
		p	1		block
		p	2		modelFactory
	m	(Ljava/lang/Integer;)Llh;	b	lambda$createSuspiciousSandBlock$5
		p	1		dustedLevel
	m	(Ljava/lang/Integer;Ljava/lang/Integer;)Ljava/util/List;	b	lambda$createTurtleEgg$37
	m	(Llh;)Llh;	b	lambda$createSoulFire$27
	m	(Llp;)V	b	lambda$new$3
		p	0		textures
	m	(Llp;Ladd;)Llp;	b	lambda$createCommandBlock$9
		p	1		id
	m	(Llr$a;[Lcpi;)V	b	createColoredBlockWithStateRotations
		p	1		modelFactory
		p	2		blocks
	m	()Llf;	c	createHorizontalFacingDispatchAlt
	m	(Ladd;)Llh;	c	lambda$static$42
		p	0		model
	m	(Ladd;Llp;)V	c	lambda$createFurnace$15
		p	1		textures
	m	(Lcpi;)V	c	createRotatedMirroredVariantBlock
		p	1		block
	m	(Lcpi;Ladd;)Lle;	c	createSimpleBlock
		p	0		block
		p	1		modelId
	m	(Lcpi;Ladd;Ladd;)Llb;	c	createFence
		p	0		fenceBlock
		p	1		postModelId
		p	2		sideModelId
	m	(Lcpi;Ladd;Ladd;Ladd;)Llb;	c	createOrientableTrapdoor
		p	0		trapdoorBlock
		p	1		topModelId
		p	2		bottomModelId
		p	3		openModelId
	m	(Lcpi;Ladd;Llp;Ljava/util/function/BiConsumer;)Llb;	c	createMirroredColumnGenerator
		p	0		block
		p	1		modelId
		p	2		textures
		p	3		modelCollector
	m	(Lcpi;Lcpi;)V	c	createStems
		p	1		stemBlock
		p	2		attachedStemBlock
	m	(Lcpi;Lky$e;)V	c	createDoublePlant
		p	1		doubleBlock
		p	2		tintType
	m	(Lcpi;Llr$a;)V	c	createTrivialBlock
		p	1		block
		p	2		modelFactory
	m	(Llh;)Llh;	c	lambda$createSoulFire$26
	m	(Llp;)V	c	lambda$new$2
		p	0		textureMap
	m	()Llf;	d	createTorchHorizontalDispatch
	m	(Ladd;)Llh;	d	lambda$static$41
		p	0		model
	m	(Ladd;Llp;)V	d	lambda$createBarrel$11
	m	(Lcpi;)V	d	createRotatedVariantBlock
		p	1		block
	m	(Lcpi;Ladd;)Llb;	d	createAxisAlignedPillarBlock
		p	0		block
		p	1		modelId
	m	(Lcpi;Ladd;Ladd;)Llb;	d	createRotatedPillarWithHorizontalVariant
		p	0		block
		p	1		verticalModelId
		p	2		horizontalModelId
	m	(Lcpi;Ladd;Ladd;Ladd;)Llb;	d	createTrapdoor
		p	0		trapdoorBlock
		p	1		topModelId
		p	2		bottomModelId
		p	3		openModelId
	m	(Lcpi;Lcpi;)Lky$a;	d	blockEntityModels
		p	1		block
		p	2		particleBlock
	m	(Lcpi;Llr$a;)V	d	createFurnace
		p	1		cooker
		p	2		modelFactory
	m	(Llh;)Llh;	d	lambda$createSoulFire$25
	m	(Llp;)V	d	lambda$new$1
		p	0		textureMap
	m	()Llf;	e	createFacingDispatch
	m	(Ladd;)Llh;	e	lambda$static$40
		p	0		model
	m	(Lcpi;)V	e	createTrivialCube
		p	1		block
	m	(Lcpi;Ladd;)V	e	createAxisAlignedPillarBlockCustomModel
		p	1		block
		p	2		modelId
	m	(Lcpi;Ladd;Ladd;)Llb;	e	createPressurePlate
		p	0		pressurePlateBlock
		p	1		upModelId
		p	2		downModelId
	m	(Lcpi;Ladd;Ladd;Ladd;)Llb;	e	createSlab
		p	0		slabBlock
		p	1		bottomModelId
		p	2		topModelId
		p	3		fullModelId
	m	(Lcpi;Lcpi;)V	e	createFullAndCarpetBlocks
		p	1		wool
		p	2		carpet
	m	(Llh;)Llh;	e	lambda$createSoulFire$24
	m	(Llp;)V	e	lambda$new$0
		p	0		textureMap
	m	()V	f	createSuspiciousSandBlock
	m	(Ladd;)Llh;	f	lambda$static$39
		p	0		model
	m	(Lcpi;)Lky$b;	f	family
		p	1		block
	m	(Lcpi;Ladd;)V	f	createAirLikeBlock
		p	1		block
		p	2		particleSource
	m	(Lcpi;Ladd;Ladd;)V	f	createDoubleBlock
		p	1		block
		p	2		upperHalfModelId
		p	3		lowerHalfModelId
	m	(Lcpi;Lcpi;)V	f	createGlassBlocks
		p	1		glass
		p	2		glassPane
	m	(Llh;)Llh;	f	lambda$createFire$23
	m	()Llf;	g	createRotatedPillar
	m	(Ladd;)Llh;	g	lambda$static$38
		p	0		model
	m	(Lcpi;)V	g	createDoor
		p	1		doorBlock
	m	(Lcpi;Lcpi;)V	g	createWeightedPressurePlate
		p	1		pressurePlate
		p	2		textureSource
	m	(Llh;)Llh;	g	lambda$createFire$22
	m	()V	h	createBigDripLeafBlock
	m	(Ladd;)Llh;	h	lambda$wrapModels$17
		p	0		modelId
	m	(Lcpi;)V	h	createOrientableTrapdoor
		p	1		trapdoorBlock
	m	(Lcpi;Lcpi;)V	h	copyModel
		p	1		modelSource
		p	2		child
	m	(Llh;)Llh;	h	lambda$createFire$21
	m	()V	i	createSunflower
	m	(Lcpi;)V	i	createTrapdoor
		p	1		trapdoorBlock
	m	(Lcpi;Lcpi;)V	i	createNormalTorch
		p	1		torch
		p	2		wallTorch
	m	(Llh;)Llh;	i	lambda$createFire$20
	m	()V	j	createTallSeagrass
	m	(Lcpi;)Lky$f;	j	woodProvider
		p	1		logBlock
	m	(Lcpi;Lcpi;)V	j	createBedItem
		p	1		bed
		p	2		particleSource
	m	(Llh;)Llh;	j	lambda$createFire$19
	m	()V	k	createSmallDripleaf
	m	(Lcpi;)V	k	createNonTemplateModelBlock
		p	1		block
	m	(Lcpi;Lcpi;)V	k	createNetherRoots
		p	1		root
		p	2		pottedRoot
	m	(Llh;)Llh;	k	lambda$createFire$18
	m	()V	l	createBamboo
	m	(Lcpi;)V	l	createPassiveRail
		p	1		rail
	m	(Lcpi;Lcpi;)V	l	createCandleAndCandleCake
		p	1		candle
		p	2		cake
	m	()Llf;	m	createColumnWithFacing
	m	(Lcpi;)V	m	createActiveRail
		p	1		rail
	m	()V	n	createBarrel
	m	(Lcpi;)V	n	createFlowerBed
		p	1		flowerbed
	m	()V	o	createBell
	m	(Lcpi;)V	o	createCommandBlock
		p	1		commandBlock
	m	()V	p	createGrindstone
	m	(Lcpi;)V	p	createAnvil
		p	1		anvil
	m	()V	q	createBookshelf
	m	(Lcpi;)V	q	createAzalea
		p	1		block
	m	()V	r	createRedstoneWire
	m	(Lcpi;)V	r	createPottedAzalea
		p	1		block
	m	()V	s	createComparator
	m	(Lcpi;)V	s	createMushroomBlock
		p	1		mushroomBlock
	m	()V	t	createSmoothStoneSlab
	m	(Lcpi;)V	t	createDispenserBlock
		p	1		block
	m	()V	u	createBrewingStand
	m	(Lcpi;)V	u	createAmethystCluster
		p	1		block
	m	()V	v	createCakeBlock
	m	(Lcpi;)V	v	createNyliumBlock
		p	1		block
	m	()V	w	createCartographyTable
	m	(Lcpi;)V	w	createRotatableColumn
		p	1		block
	m	()V	x	createSmithingTable
	m	(Lcpi;)Ljava/util/List;	x	createFloorFireModels
		p	1		texture
	m	()V	y	createPumpkins
	m	(Lcpi;)Ljava/util/List;	y	createSideFireModels
		p	1		texture
	m	()V	z	createCauldrons
	m	(Lcpi;)Ljava/util/List;	z	createTopFireModels
		p	1		texture
	f	Ljava/util/List;	a	MULTIFACE_GENERATOR
	f	Ljava/util/function/Consumer;	b	blockStateOutput
	f	Ljava/util/function/BiConsumer;	c	modelOutput
	f	Ljava/util/function/Consumer;	d	skippedAutoModelsOutput
	f	Ljava/util/List;	e	nonOrientableTrapdoor
	f	Ljava/util/Map;	f	fullBlockModelCustomGenerators
	f	Ljava/util/Map;	g	texturedModels
	f	Ljava/util/Map;	h	SHAPE_CONSUMERS
	f	Ljava/util/Map;	i	CHISELED_BOOKSHELF_SLOT_MODEL_CACHE
c	ky$1	net/minecraft/data/models/BlockModelGenerators$1
	f	[I	a	$SwitchMap$net$minecraft$core$FrontAndTop
	f	[I	b	$SwitchMap$net$minecraft$world$level$block$state$properties$RailShape
c	ky$a	net/minecraft/data/models/BlockModelGenerators$BlockEntityModelGenerator
	m	(Lky;Ladd;Lcpi;)V	<init>	<init>
		p	2		modelId
		p	3		block
	m	(Lln;[Lcpi;)Lky$a;	a	createWithCustomBlockItemModel
		p	1		model
		p	2		blocks
	m	([Lcpi;)Lky$a;	a	create
		p	1		blocks
	m	([Lcpi;)Lky$a;	b	createWithoutBlockItem
		p	1		blocks
	f	Lky;	a	this$0
	f	Ladd;	b	baseModel
c	ky$b	net/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider
	m	(Lky;Llp;)V	<init>	<init>
		p	2		textures
	m	(Lcpi;)Lky$b;	a	button
		p	1		buttonBlock
	m	(Lcpi;Lln;)Lky$b;	a	fullBlock
		p	1		block
		p	2		model
	m	(Lje$b;Lcpi;)V	a	lambda$generateFor$1
		p	1		variant
		p	2		block
	m	(Lje;)Lky$b;	a	generateFor
		p	1		family
	m	(Lln;Lcpi;)Ladd;	a	getOrCreateModel
		p	1		model
		p	2		block
	m	([Lcpi;)Lky$b;	a	fullBlockCopies
		p	1		blocks
	m	(Lcpi;)Lky$b;	b	wall
		p	1		wallBlock
	m	(Lcpi;Lln;)Ladd;	b	lambda$getOrCreateModel$0
		p	2		newModel
	m	(Lcpi;)Lky$b;	c	customFence
		p	1		customFenceBlock
	m	(Lcpi;)Lky$b;	d	fence
		p	1		fenceBlock
	m	(Lcpi;)Lky$b;	e	customFenceGate
		p	1		customFenceGateBlock
	m	(Lcpi;)Lky$b;	f	fenceGate
		p	1		fenceGateBlock
	m	(Lcpi;)Lky$b;	g	pressurePlate
		p	1		pressurePlateBlock
	m	(Lcpi;)Lky$b;	h	sign
		p	1		signBlock
	m	(Lcpi;)Lky$b;	i	slab
		p	1		block
	m	(Lcpi;)Lky$b;	j	stairs
		p	1		block
	m	(Lcpi;)Lky$b;	k	fullBlockVariant
		p	1		block
	m	(Lcpi;)Lky$b;	l	door
		p	1		block
	m	(Lcpi;)V	m	trapdoor
		p	1		block
	f	Lky;	a	this$0
	f	Llp;	b	mapping
	f	Ljava/util/Map;	c	models
	f	Lje;	d	family
	f	Ladd;	e	fullBlock
c	ky$c	net/minecraft/data/models/BlockModelGenerators$BlockStateGeneratorSupplier
	m	(Lcpi;Ladd;Llp;Ljava/util/function/BiConsumer;)Llb;	create	create
		p	1		block
		p	2		modelId
		p	3		textures
		p	4		modelCollector
c	ky$d	net/minecraft/data/models/BlockModelGenerators$BookSlotModelCacheKey
	m	()Lln;	a	template
	m	()Ljava/lang/String;	b	modelSuffix
	f	Lln;	a	template
	f	Ljava/lang/String;	b	modelSuffix
c	ky$e	net/minecraft/data/models/BlockModelGenerators$TintState
	m	()Lln;	a	getCross
	m	()Lln;	b	getCrossPot
	m	()[Lky$e;	c	$values
	f	Lky$e;	a	TINTED
	f	Lky$e;	b	NOT_TINTED
	f	[Lky$e;	c	$VALUES
c	ky$f	net/minecraft/data/models/BlockModelGenerators$WoodProvider
	m	(Lky;Llp;)V	<init>	<init>
		p	2		textures
	m	(Lcpi;)Lky$f;	a	wood
		p	1		woodBlock
	m	(Lcpi;)Lky$f;	b	log
		p	1		stemBlock
	m	(Lcpi;)Lky$f;	c	logWithHorizontal
		p	1		logBlock
	m	(Lcpi;)Lky$f;	d	logUVLocked
		p	1		bambooBlock
	f	Lky;	a	this$0
	f	Llp;	b	logMapping
c	kz	net/minecraft/data/models/ItemModelGenerators
	m	(Ljava/util/function/BiConsumer;)V	<init>	<init>
		p	1		writer
	m	()V	a	run
	m	(Ladd;Ladd;Ladd;)V	a	generateLayeredItem
		p	1		id
		p	2		layer0
		p	3		layer1
	m	(Ladd;Ladd;Ladd;Ladd;)V	a	generateLayeredItem
		p	1		id
		p	2		layer0
		p	3		layer1
		p	4		layer2
	m	(Ladd;Ljava/lang/String;)Ladd;	a	getItemModelForTrimMaterial
		p	1		id
		p	2		trimMaterialName
	m	(Ladd;Ljava/util/Map;Lcdi;)Lcom/google/gson/JsonObject;	a	generateBaseArmorTrimTemplate
		p	1		id
		p	2		textures
		p	3		armorMaterial
	m	(Lcdh;)V	a	generateArmorTrims
		p	1		armor
	m	(Lcdh;Ladd;Ljava/util/Map;)Lcom/google/gson/JsonObject;	a	lambda$generateArmorTrims$1
		p	2		id
		p	3		textures
	m	(Lcfq;)V	a	generateCompassItem
		p	1		compass
	m	(Lcfq;Lcfq;Lln;)V	a	generateFlatItem
		p	1		item
		p	2		texture
		p	3		model
	m	(Lcfq;Ljava/lang/String;Lln;)V	a	generateFlatItem
		p	1		item
		p	2		suffix
		p	3		model
	m	(Lcfq;Lln;)V	a	generateFlatItem
		p	1		item
		p	2		model
	m	(Lcdh;Ladd;Ljava/util/Map;)Lcom/google/gson/JsonObject;	b	lambda$generateArmorTrims$0
		p	2		id
		p	3		textures
	m	(Lcfq;)V	b	generateClockItem
		p	1		clock
	f	Ladd;	a	TRIM_TYPE_PREDICATE_ID
	f	Ljava/util/List;	b	GENERATED_TRIM_MODELS
	f	Ljava/util/function/BiConsumer;	c	output
c	kz$a	net/minecraft/data/models/ItemModelGenerators$TrimModelData
	m	()Ljava/lang/String;	a	name
	m	(Lcdi;)Ljava/lang/String;	a	name
		p	1		armorMaterial
	m	()F	b	itemModelIndex
	m	()Ljava/util/Map;	c	overrideArmorMaterials
	f	Ljava/lang/String;	a	name
	f	F	b	itemModelIndex
	f	Ljava/util/Map;	c	overrideArmorMaterials
c	la	net/minecraft/data/models/ModelProvider
	m	(Ljj;)V	<init>	<init>
		p	1		output
	m	()Ljava/lang/String;	a	getName
	m	(I)[Ljava/util/concurrent/CompletableFuture;	a	lambda$saveCollection$6
	m	(Lcpi;)Ljava/nio/file/Path;	a	lambda$run$4
		p	1		block
	m	(Ljava/util/Map;Ladd;Ljava/util/function/Supplier;)V	a	lambda$run$1
		p	1		id
		p	2		jsonSupplier
	m	(Ljava/util/Map;Lcpi;)Z	a	lambda$run$2
		p	1		block
	m	(Ljava/util/Map;Llb;)V	a	lambda$run$0
		p	1		blockStateSupplier
	m	(Ljava/util/Set;Ljava/util/Map;Lcpi;)V	a	lambda$run$3
		p	2		block
	m	(Ljava/util/function/Function;Ljf;Ljava/util/Map$Entry;)Ljava/util/concurrent/CompletableFuture;	a	lambda$saveCollection$5
		p	2		entry
	m	(Ljf;)Ljava/util/concurrent/CompletableFuture;	a	run
		p	1		writer
	m	(Ljf;Ljava/util/Map;Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;	a	saveCollection
		p	1		cache
		p	2		models
		p	3		pathGetter
	f	Ljj$a;	d	blockStatePathProvider
	f	Ljj$a;	e	modelPathProvider
c	lb	net/minecraft/data/models/blockstates/BlockStateGenerator
	m	()Lcpi;	a	getBlock
c	lc	net/minecraft/data/models/blockstates/Condition
	m	()Llc$c;	a	condition
	m	(Ldbr;)V	a	validate
		p	1		stateManager
	m	([Llc;)Llc;	a	and
		p	0		conditions
	m	([Llc;)Llc;	b	or
		p	0		conditions
c	lc$a	net/minecraft/data/models/blockstates/Condition$CompositeCondition
	m	(Llc$b;Ljava/util/List;)V	<init>	<init>
		p	1		operator
		p	2		components
	m	(Ldbr;)V	a	validate
		p	1		stateManager
	m	(Ldbr;Llc;)V	a	lambda$validate$0
		p	1		component
	m	()Lcom/google/gson/JsonElement;	b	get
	f	Llc$b;	a	operation
	f	Ljava/util/List;	b	subconditions
c	lc$b	net/minecraft/data/models/blockstates/Condition$Operation
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()[Llc$b;	a	$values
	f	Llc$b;	a	AND
	f	Llc$b;	b	OR
	f	Ljava/lang/String;	c	id
	f	[Llc$b;	d	$VALUES
c	lc$c	net/minecraft/data/models/blockstates/Condition$TerminalCondition
	m	(Lcom/google/gson/JsonObject;Ldcu;Ljava/lang/String;)V	a	lambda$get$0
		p	1		property
		p	2		value
	m	(Ldbr;)V	a	validate
		p	1		stateManager
	m	(Ldbr;Ldcu;)Z	a	lambda$validate$1
		p	1		property
	m	(Ldcu;Ljava/lang/Comparable;)Llc$c;	a	term
		p	1		property
		p	2		value
	m	(Ldcu;Ljava/lang/Comparable;[Ljava/lang/Comparable;)Llc$c;	a	term
		p	1		property
		p	2		value
		p	3		otherValues
	m	(Ldcu;Ljava/lang/String;)V	a	putValue
		p	1		property
		p	2		value
	m	(Ldcu;Ljava/util/stream/Stream;)Ljava/lang/String;	a	joinValues
		p	0		property
		p	1		valueStream
	m	()Lcom/google/gson/JsonElement;	b	get
	m	(Ldcu;Ljava/lang/Comparable;)Llc$c;	b	negatedTerm
		p	1		property
		p	2		value
	m	(Ldcu;Ljava/lang/Comparable;[Ljava/lang/Comparable;)Llc$c;	b	negatedTerm
		p	1		property
		p	2		value
		p	3		otherValues
	m	(Ldcu;Ljava/lang/Comparable;[Ljava/lang/Comparable;)Ljava/lang/String;	c	getTerm
		p	0		property
		p	1		value
		p	2		otherValues
	f	Ljava/util/Map;	a	terms
c	ld	net/minecraft/data/models/blockstates/MultiPartGenerator
	m	(Lcpi;)V	<init>	<init>
		p	1		block
	m	()Lcpi;	a	getBlock
	m	(Lcpi;)Lld;	a	multiPart
		p	0		block
	m	(Ldbr;Lld$b;)V	a	lambda$get$0
		p	1		multipart
	m	(Ljava/util/List;)Lld;	a	with
		p	1		variants
	m	(Llc;Ljava/util/List;)Lld;	a	with
		p	1		condition
		p	2		variants
	m	(Llc;Llh;)Lld;	a	with
		p	1		condition
		p	2		variant
	m	(Llc;[Llh;)Lld;	a	with
		p	1		condition
		p	2		variants
	m	(Llh;)Lld;	a	with
		p	1		variant
	m	()Lcom/google/gson/JsonElement;	b	get
	f	Lcpi;	a	block
	f	Ljava/util/List;	b	parts
c	ld$a	net/minecraft/data/models/blockstates/MultiPartGenerator$ConditionalEntry
	m	(Llc;Ljava/util/List;)V	<init>	<init>
		p	1		when
		p	2		variants
	m	(Lcom/google/gson/JsonObject;)V	a	decorate
		p	1		json
	m	(Ldbr;)V	a	validate
		p	1		stateManager
	f	Llc;	a	condition
c	ld$b	net/minecraft/data/models/blockstates/MultiPartGenerator$Entry
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		variants
	m	()Lcom/google/gson/JsonElement;	a	get
	m	(Lcom/google/gson/JsonObject;)V	a	decorate
		p	1		json
	m	(Ldbr;)V	a	validate
		p	1		stateManager
	f	Ljava/util/List;	a	variants
c	le	net/minecraft/data/models/blockstates/MultiVariantGenerator
	m	(Lcpi;Ljava/util/List;)V	<init>	<init>
		p	1		block
		p	2		variants
	m	()Lcpi;	a	getBlock
	m	(Lcom/google/common/collect/ImmutableList$Builder;Llh;Llh;)V	a	lambda$mergeVariants$5
		p	2		rightVariant
	m	(Lcom/mojang/datafixers/util/Pair;Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair;	a	lambda$get$1
		p	1		entry
	m	(Lcpi;)Lle;	a	multiVariant
		p	0		block
	m	(Lcpi;Llh;)Lle;	a	multiVariant
		p	0		block
		p	1		variant
	m	(Lcpi;[Llh;)Lle;	a	multiVariant
		p	0		block
		p	1		variants
	m	(Ldcu;)V	a	lambda$with$0
		p	1		property
	m	(Ljava/util/List;Lcom/google/common/collect/ImmutableList$Builder;Llh;)V	a	lambda$mergeVariants$6
		p	2		leftVariant
	m	(Ljava/util/List;Ljava/util/List;)Ljava/util/List;	a	mergeVariants
		p	0		left
		p	1		right
	m	(Ljava/util/Map;Lcom/google/gson/JsonObject;)V	a	lambda$get$4
		p	1		json
	m	(Ljava/util/Map;Lcom/mojang/datafixers/util/Pair;)V	a	lambda$get$3
		p	1		pair
	m	(Llf;)Lle;	a	with
		p	1		map
	m	()Lcom/google/gson/JsonElement;	b	get
	m	(Ljava/util/Map;Lcom/mojang/datafixers/util/Pair;)Ljava/util/stream/Stream;	b	lambda$get$2
		p	1		pair
	f	Lcpi;	a	block
	f	Ljava/util/List;	b	baseVariants
	f	Ljava/util/Set;	c	seenProperties
	f	Ljava/util/List;	d	declaredPropertySets
c	lf	net/minecraft/data/models/blockstates/PropertyDispatch
	m	()Ljava/util/Map;	a	getEntries
	m	(Ldcu;)Llf$a;	a	property
		p	0		property
	m	(Ldcu;Ldcu;)Llf$b;	a	properties
		p	0		first
		p	1		second
	m	(Ldcu;Ldcu;Ldcu;)Llf$c;	a	properties
		p	0		first
		p	1		second
		p	2		third
	m	(Ldcu;Ldcu;Ldcu;Ldcu;)Llf$d;	a	properties
		p	0		first
		p	1		second
		p	2		third
		p	3		fourth
	m	(Ldcu;Ldcu;Ldcu;Ldcu;Ldcu;)Llf$e;	a	properties
		p	0		first
		p	1		second
		p	2		third
		p	3		fourth
		p	4		fifth
	m	(Ldcu;Llg;)Ljava/util/stream/Stream;	a	lambda$verifyComplete$0
		p	1		propertiesMap
	m	(Llg;)Z	a	lambda$verifyComplete$1
		p	1		propertiesMap
	m	(Llg;Ljava/util/List;)V	a	putValue
		p	1		condition
		p	2		possibleVariants
	m	()Ljava/util/List;	b	getDefinedProperties
	m	()V	c	verifyComplete
	f	Ljava/util/Map;	a	values
c	lf$a	net/minecraft/data/models/blockstates/PropertyDispatch$C1
	m	(Ldcu;)V	<init>	<init>
		p	1		property
	m	(Ljava/lang/Comparable;Ljava/util/List;)Llf$a;	a	select
		p	1		value
		p	2		variants
	m	(Ljava/lang/Comparable;Llh;)Llf$a;	a	select
		p	1		value
		p	2		variant
	m	(Ljava/util/function/Function;)Llf;	a	generate
		p	1		variantFactory
	m	(Ljava/util/function/Function;Ljava/lang/Comparable;)V	a	lambda$generateList$1
		p	2		value
	m	()Ljava/util/List;	b	getDefinedProperties
	m	(Ljava/util/function/Function;)Llf;	b	generateList
		p	1		variantFactory
	m	(Ljava/util/function/Function;Ljava/lang/Comparable;)V	b	lambda$generate$0
		p	2		value
	f	Ldcu;	a	property1
c	lf$b	net/minecraft/data/models/blockstates/PropertyDispatch$C2
	m	(Ldcu;Ldcu;)V	<init>	<init>
		p	1		first
		p	2		second
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/util/List;)Llf$b;	a	select
		p	1		firstValue
		p	2		secondValue
		p	3		variants
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Llh;)Llf$b;	a	select
		p	1		firstValue
		p	2		secondValue
		p	3		variant
	m	(Ljava/lang/Comparable;Ljava/util/function/BiFunction;Ljava/lang/Comparable;)V	a	lambda$generateList$2
		p	3		secondValue
	m	(Ljava/util/function/BiFunction;)Llf;	a	generate
		p	1		variantFactory
	m	(Ljava/util/function/BiFunction;Ljava/lang/Comparable;)V	a	lambda$generateList$3
		p	2		firstValue
	m	()Ljava/util/List;	b	getDefinedProperties
	m	(Ljava/lang/Comparable;Ljava/util/function/BiFunction;Ljava/lang/Comparable;)V	b	lambda$generate$0
		p	3		secondValue
	m	(Ljava/util/function/BiFunction;)Llf;	b	generateList
		p	1		variantsFactory
	m	(Ljava/util/function/BiFunction;Ljava/lang/Comparable;)V	b	lambda$generate$1
		p	2		firstValue
	f	Ldcu;	a	property1
	f	Ldcu;	b	property2
c	lf$c	net/minecraft/data/models/blockstates/PropertyDispatch$C3
	m	(Ldcu;Ldcu;Ldcu;)V	<init>	<init>
		p	1		first
		p	2		second
		p	3		third
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/util/List;)Llf$c;	a	select
		p	1		firstValue
		p	2		secondValue
		p	3		thirdValue
		p	4		variants
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Llh;)Llf$c;	a	select
		p	1		firstValue
		p	2		secondValue
		p	3		thirdValue
		p	4		variant
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Llf$h;Ljava/lang/Comparable;)V	a	lambda$generateList$3
		p	4		thirdValue
	m	(Ljava/lang/Comparable;Llf$h;Ljava/lang/Comparable;)V	a	lambda$generateList$4
		p	3		secondValue
	m	(Llf$h;)Llf;	a	generate
		p	1		variantFactory
	m	(Llf$h;Ljava/lang/Comparable;)V	a	lambda$generateList$5
		p	2		firstValue
	m	()Ljava/util/List;	b	getDefinedProperties
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Llf$h;Ljava/lang/Comparable;)V	b	lambda$generate$0
		p	4		thirdValue
	m	(Ljava/lang/Comparable;Llf$h;Ljava/lang/Comparable;)V	b	lambda$generate$1
		p	3		secondValue
	m	(Llf$h;)Llf;	b	generateList
		p	1		variantFactory
	m	(Llf$h;Ljava/lang/Comparable;)V	b	lambda$generate$2
		p	2		firstValue
	f	Ldcu;	a	property1
	f	Ldcu;	b	property2
	f	Ldcu;	c	property3
c	lf$d	net/minecraft/data/models/blockstates/PropertyDispatch$C4
	m	(Ldcu;Ldcu;Ldcu;Ldcu;)V	<init>	<init>
		p	1		first
		p	2		second
		p	3		third
		p	4		fourth
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/util/List;)Llf$d;	a	select
		p	1		firstValue
		p	2		secondValue
		p	3		thirdValue
		p	4		fourthValue
		p	5		variants
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Llh;)Llf$d;	a	select
		p	1		firstValue
		p	2		secondValue
		p	3		thirdValue
		p	4		fourthValue
		p	5		variant
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Llf$g;Ljava/lang/Comparable;)V	a	lambda$generateList$4
		p	5		fourthValue
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Llf$g;Ljava/lang/Comparable;)V	a	lambda$generateList$5
		p	4		thirdValue
	m	(Ljava/lang/Comparable;Llf$g;Ljava/lang/Comparable;)V	a	lambda$generateList$6
		p	3		secondValue
	m	(Llf$g;)Llf;	a	generate
		p	1		variantFactory
	m	(Llf$g;Ljava/lang/Comparable;)V	a	lambda$generateList$7
		p	2		firstValue
	m	()Ljava/util/List;	b	getDefinedProperties
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Llf$g;Ljava/lang/Comparable;)V	b	lambda$generate$0
		p	5		fourthValue
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Llf$g;Ljava/lang/Comparable;)V	b	lambda$generate$1
		p	4		thirdValue
	m	(Ljava/lang/Comparable;Llf$g;Ljava/lang/Comparable;)V	b	lambda$generate$2
		p	3		secondValue
	m	(Llf$g;)Llf;	b	generateList
		p	1		variantFactory
	m	(Llf$g;Ljava/lang/Comparable;)V	b	lambda$generate$3
		p	2		firstValue
	f	Ldcu;	a	property1
	f	Ldcu;	b	property2
	f	Ldcu;	c	property3
	f	Ldcu;	d	property4
c	lf$e	net/minecraft/data/models/blockstates/PropertyDispatch$C5
	m	(Ldcu;Ldcu;Ldcu;Ldcu;Ldcu;)V	<init>	<init>
		p	1		first
		p	2		second
		p	3		third
		p	4		fourth
		p	5		fifth
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/util/List;)Llf$e;	a	select
		p	1		firstValue
		p	2		secondValue
		p	3		thirdValue
		p	4		fourthValue
		p	5		fifthValue
		p	6		variants
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Llh;)Llf$e;	a	select
		p	1		firstValue
		p	2		secondValue
		p	3		thirdValue
		p	4		fourthValue
		p	5		fifthValue
		p	6		variant
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Llf$f;Ljava/lang/Comparable;)V	a	lambda$generateList$5
		p	6		fifthValue
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Llf$f;Ljava/lang/Comparable;)V	a	lambda$generateList$6
		p	5		fourthValue
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Llf$f;Ljava/lang/Comparable;)V	a	lambda$generateList$7
		p	4		thirdValue
	m	(Ljava/lang/Comparable;Llf$f;Ljava/lang/Comparable;)V	a	lambda$generateList$8
		p	3		secondValue
	m	(Llf$f;)Llf;	a	generate
		p	1		variantFactory
	m	(Llf$f;Ljava/lang/Comparable;)V	a	lambda$generateList$9
		p	2		firstValue
	m	()Ljava/util/List;	b	getDefinedProperties
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Llf$f;Ljava/lang/Comparable;)V	b	lambda$generate$0
		p	6		fifthValue
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Llf$f;Ljava/lang/Comparable;)V	b	lambda$generate$1
		p	5		fourthValue
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Llf$f;Ljava/lang/Comparable;)V	b	lambda$generate$2
		p	4		thirdValue
	m	(Ljava/lang/Comparable;Llf$f;Ljava/lang/Comparable;)V	b	lambda$generate$3
		p	3		secondValue
	m	(Llf$f;)Llf;	b	generateList
		p	1		variantFactory
	m	(Llf$f;Ljava/lang/Comparable;)V	b	lambda$generate$4
		p	2		firstValue
	f	Ldcu;	a	property1
	f	Ldcu;	b	property2
	f	Ldcu;	c	property3
	f	Ldcu;	d	property4
	f	Ldcu;	e	property5
c	lf$f	net/minecraft/data/models/blockstates/PropertyDispatch$PentaFunction
	m	(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;	apply	apply
		p	1		one
		p	2		two
		p	3		three
		p	4		four
		p	5		five
c	lf$g	net/minecraft/data/models/blockstates/PropertyDispatch$QuadFunction
	m	(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;	apply	apply
		p	1		one
		p	2		two
		p	3		three
		p	4		four
c	lf$h	net/minecraft/data/models/blockstates/PropertyDispatch$TriFunction
	m	(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;	apply	apply
		p	1		one
		p	2		two
		p	3		three
c	lg	net/minecraft/data/models/blockstates/Selector
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		values
	m	()Llg;	a	empty
	m	(Ldcu$a;)Llg;	a	extend
		p	1		value
	m	(Llg;)Llg;	a	extend
		p	1		propertiesMap
	m	([Ldcu$a;)Llg;	a	of
		p	0		values
	m	()Ljava/lang/String;	b	getKey
	m	(Ldcu$a;)Ljava/lang/String;	b	lambda$static$0
		p	0		value
	f	Llg;	a	EMPTY
	f	Ljava/util/Comparator;	b	COMPARE_BY_NAME
	f	Ljava/util/List;	c	values
c	lh	net/minecraft/data/models/blockstates/Variant
	m	()Llh;	a	variant
	m	(Lcom/google/gson/JsonArray;Llh;)V	a	lambda$convertList$1
		p	1		variant
	m	(Lcom/google/gson/JsonObject;Llj$a;)V	a	lambda$get$0
		p	1		value
	m	(Ljava/util/List;)Lcom/google/gson/JsonElement;	a	convertList
		p	0		variants
	m	(Llh;Llh;)Llh;	a	merge
		p	0		first
		p	1		second
	m	(Llj;Ljava/lang/Object;)Llh;	a	with
		p	1		key
		p	2		value
	m	()Lcom/google/gson/JsonElement;	b	get
	f	Ljava/util/Map;	a	values
c	li	net/minecraft/data/models/blockstates/VariantProperties
	m	(Ladd;)Lcom/google/gson/JsonElement;	a	lambda$static$2
		p	0		id
	m	(Lli$a;)Lcom/google/gson/JsonElement;	a	lambda$static$1
		p	0		rotation
	m	(Lli$a;)Lcom/google/gson/JsonElement;	b	lambda$static$0
		p	0		rotation
	f	Llj;	a	X_ROT
	f	Llj;	b	Y_ROT
	f	Llj;	c	MODEL
	f	Llj;	d	UV_LOCK
	f	Llj;	e	WEIGHT
c	li$a	net/minecraft/data/models/blockstates/VariantProperties$Rotation
	m	(Ljava/lang/String;II)V	<init>	<init>
		p	3		degrees
	m	()[Lli$a;	a	$values
	f	Lli$a;	a	R0
	f	Lli$a;	b	R90
	f	Lli$a;	c	R180
	f	Lli$a;	d	R270
	f	I	e	value
	f	[Lli$a;	f	$VALUES
c	lj	net/minecraft/data/models/blockstates/VariantProperty
	m	(Ljava/lang/String;Ljava/util/function/Function;)V	<init>	<init>
		p	1		key
		p	2		writer
	m	(Ljava/lang/Object;)Llj$a;	a	withValue
		p	1		value
	f	Ljava/lang/String;	a	key
	f	Ljava/util/function/Function;	b	serializer
c	lj$a	net/minecraft/data/models/blockstates/VariantProperty$Value
	m	(Llj;Ljava/lang/Object;)V	<init>	<init>
		p	2		value
	m	()Llj;	a	getKey
	m	(Lcom/google/gson/JsonObject;)V	a	addToVariant
		p	1		json
	f	Llj;	a	this$0
	f	Ljava/lang/Object;	b	value
c	lk	net/minecraft/data/models/blockstates/package-info
c	ll	net/minecraft/data/models/model/DelegatedModel
	m	(Ladd;)V	<init>	<init>
		p	1		parent
	m	()Lcom/google/gson/JsonElement;	a	get
	f	Ladd;	a	parent
c	lm	net/minecraft/data/models/model/ModelLocationUtils
	m	(Lcfq;)Ladd;	a	getModelLocation
		p	0		item
	m	(Lcfq;Ljava/lang/String;)Ladd;	a	getModelLocation
		p	0		item
		p	1		suffix
	m	(Lcpi;)Ladd;	a	getModelLocation
		p	0		block
	m	(Lcpi;Ljava/lang/String;)Ladd;	a	getModelLocation
		p	0		block
		p	1		suffix
	m	(Ljava/lang/String;)Ladd;	a	decorateBlockModelLocation
		p	0		name
	m	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	a	lambda$getModelLocation$1
		p	1		path
	m	(Ljava/lang/String;)Ladd;	b	decorateItemModelLocation
		p	0		name
	m	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	b	lambda$getModelLocation$0
		p	1		path
c	ln	net/minecraft/data/models/model/ModelTemplate
	m	(Ljava/util/Optional;Ljava/util/Optional;[Llq;)V	<init>	<init>
		p	1		parent
		p	2		variant
		p	3		requiredTextureKeys
	m	(Ladd;Ljava/util/Map;)Lcom/google/gson/JsonObject;	a	createBaseTemplate
		p	1		id
		p	2		textures
	m	(Ladd;Llp;Ljava/util/function/BiConsumer;)Ladd;	a	create
		p	1		id
		p	2		textures
		p	3		modelCollector
	m	(Ladd;Llp;Ljava/util/function/BiConsumer;Lln$a;)Ladd;	a	create
		p	1		id
		p	2		textures
		p	3		modelCollector
		p	4		jsonFactory
	m	(Lcom/google/gson/JsonObject;Ladd;)V	a	lambda$createBaseTemplate$1
	m	(Lcom/google/gson/JsonObject;Llq;Ladd;)V	a	lambda$createBaseTemplate$2
		p	1		textureKey
		p	2		texture
	m	(Lcpi;Ljava/lang/String;Llp;Ljava/util/function/BiConsumer;)Ladd;	a	createWithSuffix
		p	1		block
		p	2		suffix
		p	3		textures
		p	4		modelCollector
	m	(Lcpi;Llp;Ljava/util/function/BiConsumer;)Ladd;	a	create
		p	1		block
		p	2		textures
		p	3		modelCollector
	m	(Lln$a;Ladd;Ljava/util/Map;)Lcom/google/gson/JsonElement;	a	lambda$create$0
	m	(Llp;)Ljava/util/Map;	a	createMap
		p	1		textures
	m	(Lcpi;Ljava/lang/String;Llp;Ljava/util/function/BiConsumer;)Ladd;	b	createWithOverride
		p	1		block
		p	2		suffix
		p	3		textures
		p	4		modelCollector
	f	Ljava/util/Optional;	a	model
	f	Ljava/util/Set;	b	requiredSlots
	f	Ljava/util/Optional;	c	suffix
c	ln$a	net/minecraft/data/models/model/ModelTemplate$JsonFactory
	m	(Ladd;Ljava/util/Map;)Lcom/google/gson/JsonObject;	create	create
		p	1		id
		p	2		textures
c	lo	net/minecraft/data/models/model/ModelTemplates
	m	(I)[Lln;	a	lambda$static$1
	m	(Ljava/lang/String;Ljava/lang/String;[Llq;)Lln;	a	create
		p	0		parent
		p	1		variant
		p	2		requiredTextureKeys
	m	(Ljava/lang/String;[Llq;)Lln;	a	create
		p	0		parent
		p	1		requiredTextureKeys
	m	([Llq;)Lln;	a	create
		p	0		requiredTextureKeys
	m	(I)Lln;	b	lambda$static$0
		p	0		stage
	m	(Ljava/lang/String;[Llq;)Lln;	b	createItem
		p	0		parent
		p	1		requiredTextureKeys
	f	Lln;	A	DOOR_TOP_RIGHT_OPEN
	f	Lln;	B	CUSTOM_FENCE_POST
	f	Lln;	C	CUSTOM_FENCE_SIDE_NORTH
	f	Lln;	D	CUSTOM_FENCE_SIDE_EAST
	f	Lln;	E	CUSTOM_FENCE_SIDE_SOUTH
	f	Lln;	F	CUSTOM_FENCE_SIDE_WEST
	f	Lln;	G	CUSTOM_FENCE_INVENTORY
	f	Lln;	H	FENCE_POST
	f	Lln;	I	FENCE_SIDE
	f	Lln;	J	FENCE_INVENTORY
	f	Lln;	K	WALL_POST
	f	Lln;	L	WALL_LOW_SIDE
	f	Lln;	M	WALL_TALL_SIDE
	f	Lln;	N	WALL_INVENTORY
	f	Lln;	O	CUSTOM_FENCE_GATE_CLOSED
	f	Lln;	P	CUSTOM_FENCE_GATE_OPEN
	f	Lln;	Q	CUSTOM_FENCE_GATE_WALL_CLOSED
	f	Lln;	R	CUSTOM_FENCE_GATE_WALL_OPEN
	f	Lln;	S	FENCE_GATE_CLOSED
	f	Lln;	T	FENCE_GATE_OPEN
	f	Lln;	U	FENCE_GATE_WALL_CLOSED
	f	Lln;	V	FENCE_GATE_WALL_OPEN
	f	Lln;	W	PRESSURE_PLATE_UP
	f	Lln;	X	PRESSURE_PLATE_DOWN
	f	Lln;	Y	PARTICLE_ONLY
	f	Lln;	Z	SLAB_BOTTOM
	f	Lln;	aA	CORAL_WALL_FAN
	f	Lln;	aB	GLAZED_TERRACOTTA
	f	Lln;	aC	CHORUS_FLOWER
	f	Lln;	aD	DAYLIGHT_DETECTOR
	f	Lln;	aE	STAINED_GLASS_PANE_NOSIDE
	f	Lln;	aF	STAINED_GLASS_PANE_NOSIDE_ALT
	f	Lln;	aG	STAINED_GLASS_PANE_POST
	f	Lln;	aH	STAINED_GLASS_PANE_SIDE
	f	Lln;	aI	STAINED_GLASS_PANE_SIDE_ALT
	f	Lln;	aJ	COMMAND_BLOCK
	f	Lln;	aK	CHISELED_BOOKSHELF_SLOT_TOP_LEFT
	f	Lln;	aL	CHISELED_BOOKSHELF_SLOT_TOP_MID
	f	Lln;	a	CUBE
	f	Lln;	aM	CHISELED_BOOKSHELF_SLOT_TOP_RIGHT
	f	Lln;	aN	CHISELED_BOOKSHELF_SLOT_BOTTOM_LEFT
	f	Lln;	aO	CHISELED_BOOKSHELF_SLOT_BOTTOM_MID
	f	Lln;	aP	CHISELED_BOOKSHELF_SLOT_BOTTOM_RIGHT
	f	Lln;	aQ	ANVIL
	f	[Lln;	aR	STEMS
	f	Lln;	aS	ATTACHED_STEM
	f	Lln;	aT	CROP
	f	Lln;	aU	FARMLAND
	f	Lln;	aV	FIRE_FLOOR
	f	Lln;	aW	FIRE_SIDE
	f	Lln;	aX	FIRE_SIDE_ALT
	f	Lln;	aY	FIRE_UP
	f	Lln;	aZ	FIRE_UP_ALT
	f	Lln;	aa	SLAB_TOP
	f	Lln;	ab	LEAVES
	f	Lln;	ac	STAIRS_STRAIGHT
	f	Lln;	ad	STAIRS_INNER
	f	Lln;	ae	STAIRS_OUTER
	f	Lln;	af	TRAPDOOR_TOP
	f	Lln;	ag	TRAPDOOR_BOTTOM
	f	Lln;	ah	TRAPDOOR_OPEN
	f	Lln;	ai	ORIENTABLE_TRAPDOOR_TOP
	f	Lln;	aj	ORIENTABLE_TRAPDOOR_BOTTOM
	f	Lln;	ak	ORIENTABLE_TRAPDOOR_OPEN
	f	Lln;	al	POINTED_DRIPSTONE
	f	Lln;	am	CROSS
	f	Lln;	an	TINTED_CROSS
	f	Lln;	ao	FLOWER_POT_CROSS
	f	Lln;	ap	TINTED_FLOWER_POT_CROSS
	f	Lln;	aq	RAIL_FLAT
	f	Lln;	ar	RAIL_CURVED
	f	Lln;	as	RAIL_RAISED_NE
	f	Lln;	at	RAIL_RAISED_SW
	f	Lln;	au	CARPET
	f	Lln;	av	FLOWERBED_1
	f	Lln;	aw	FLOWERBED_2
	f	Lln;	ax	FLOWERBED_3
	f	Lln;	ay	FLOWERBED_4
	f	Lln;	az	CORAL_FAN
	f	Lln;	bA	BANNER_INVENTORY
	f	Lln;	bB	SKULL_INVENTORY
	f	Lln;	bC	CANDLE
	f	Lln;	bD	TWO_CANDLES
	f	Lln;	bE	THREE_CANDLES
	f	Lln;	bF	FOUR_CANDLES
	f	Lln;	bG	CANDLE_CAKE
	f	Lln;	bH	SCULK_SHRIEKER
	f	Lln;	b	CUBE_DIRECTIONAL
	f	Lln;	ba	CAMPFIRE
	f	Lln;	bb	LANTERN
	f	Lln;	bc	HANGING_LANTERN
	f	Lln;	bd	TORCH
	f	Lln;	be	WALL_TORCH
	f	Lln;	bf	PISTON
	f	Lln;	bg	PISTON_HEAD
	f	Lln;	bh	PISTON_HEAD_SHORT
	f	Lln;	bi	SEAGRASS
	f	Lln;	bj	TURTLE_EGG
	f	Lln;	bk	TWO_TURTLE_EGGS
	f	Lln;	bl	THREE_TURTLE_EGGS
	f	Lln;	bm	FOUR_TURTLE_EGGS
	f	Lln;	bn	SINGLE_FACE
	f	Lln;	bo	CAULDRON_LEVEL1
	f	Lln;	bp	CAULDRON_LEVEL2
	f	Lln;	bq	CAULDRON_FULL
	f	Lln;	br	AZALEA
	f	Lln;	bs	POTTED_AZALEA
	f	Lln;	bt	FLAT_ITEM
	f	Lln;	bu	FLAT_HANDHELD_ITEM
	f	Lln;	bv	FLAT_HANDHELD_ROD_ITEM
	f	Lln;	bw	TWO_LAYERED_ITEM
	f	Lln;	bx	THREE_LAYERED_ITEM
	f	Lln;	by	SHULKER_BOX_INVENTORY
	f	Lln;	bz	BED_INVENTORY
	f	Lln;	c	CUBE_ALL
	f	Lln;	d	CUBE_MIRRORED_ALL
	f	Lln;	e	CUBE_NORTH_WEST_MIRRORED_ALL
	f	Lln;	f	CUBE_COLUMN_UV_LOCKED_X
	f	Lln;	g	CUBE_COLUMN_UV_LOCKED_Y
	f	Lln;	h	CUBE_COLUMN_UV_LOCKED_Z
	f	Lln;	i	CUBE_COLUMN
	f	Lln;	j	CUBE_COLUMN_HORIZONTAL
	f	Lln;	k	CUBE_COLUMN_MIRRORED
	f	Lln;	l	CUBE_TOP
	f	Lln;	m	CUBE_BOTTOM_TOP
	f	Lln;	n	CUBE_ORIENTABLE
	f	Lln;	o	CUBE_ORIENTABLE_TOP_BOTTOM
	f	Lln;	p	CUBE_ORIENTABLE_VERTICAL
	f	Lln;	q	BUTTON
	f	Lln;	r	BUTTON_PRESSED
	f	Lln;	s	BUTTON_INVENTORY
	f	Lln;	t	DOOR_BOTTOM_LEFT
	f	Lln;	u	DOOR_BOTTOM_LEFT_OPEN
	f	Lln;	v	DOOR_BOTTOM_RIGHT
	f	Lln;	w	DOOR_BOTTOM_RIGHT_OPEN
	f	Lln;	x	DOOR_TOP_LEFT
	f	Lln;	y	DOOR_TOP_LEFT_OPEN
	f	Lln;	z	DOOR_TOP_RIGHT
c	lp	net/minecraft/data/models/model/TextureMapping
	m	(Lcpi;)Llp;	A	orientableCubeOnlyTop
		p	0		block
	m	(Lcpi;)Llp;	B	orientableCubeSameEnds
		p	0		block
	m	(Lcpi;)Llp;	C	top
		p	0		top
	m	(Lcpi;)Llp;	D	campfire
		p	0		block
	m	(Lcpi;)Llp;	E	layer0
		p	0		block
	m	(Lcpi;)Ladd;	F	getBlockTexture
		p	0		block
	m	()Ljava/util/stream/Stream;	a	getForced
	m	(Ladd;)Llp;	a	defaultTexture
		p	0		id
	m	(Ladd;Ladd;)Llp;	a	column
		p	0		side
		p	1		end
	m	(Ladd;Ladd;Ladd;)Llp;	a	layered
		p	0		layer0
		p	1		layer1
		p	2		layer2
	m	(Lcfq;)Llp;	a	particleFromItem
		p	0		item
	m	(Lcfq;Ljava/lang/String;)Ladd;	a	getItemTexture
		p	0		item
		p	1		suffix
	m	(Lcpi;)Llp;	a	cube
		p	0		block
	m	(Lcpi;Lcpi;)Llp;	a	attachedStem
		p	0		stem
		p	1		upper
	m	(Lcpi;Ljava/lang/String;)Ladd;	a	getBlockTexture
		p	0		block
		p	1		suffix
	m	(Lcpi;Z)Llp;	a	candleCake
		p	0		block
		p	1		lit
	m	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	a	lambda$getItemTexture$1
		p	1		path
	m	(Llq;)Ladd;	a	get
		p	1		key
	m	(Llq;Ladd;)Llp;	a	put
		p	1		key
		p	2		id
	m	(Llq;Llq;)Llp;	a	copySlot
		p	1		parent
		p	2		child
	m	(Z)Llp;	a	sculkShrieker
		p	0		canSummon
	m	(Ladd;)Llp;	b	cube
		p	0		id
	m	(Ladd;Ladd;)Llp;	b	door
		p	0		top
		p	1		bottom
	m	(Lcfq;)Llp;	b	layer0
		p	0		item
	m	(Lcpi;)Llp;	b	defaultTexture
		p	0		block
	m	(Lcpi;Lcpi;)Llp;	b	pane
		p	0		block
		p	1		top
	m	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	b	lambda$getBlockTexture$0
		p	1		path
	m	(Llq;Ladd;)Llp;	b	putForced
		p	1		key
		p	2		id
	m	(Llq;Llq;)Llp;	b	copyForced
		p	1		parent
		p	2		child
	m	(Ladd;)Llp;	c	cross
		p	0		id
	m	(Ladd;Ladd;)Llp;	c	layered
		p	0		layer0
		p	1		layer1
	m	(Lcfq;)Ladd;	c	getItemTexture
		p	0		item
	m	(Lcpi;)Llp;	c	cross
		p	0		block
	m	(Lcpi;Lcpi;)Llp;	c	craftingTable
		p	0		block
		p	1		bottom
	m	(Llq;Ladd;)Llp;	c	copyAndUpdate
		p	1		key
		p	2		id
	m	(Ladd;)Llp;	d	plant
		p	0		id
	m	(Lcpi;)Llp;	d	plant
		p	0		block
	m	(Lcpi;Lcpi;)Llp;	d	fletchingTable
		p	0		frontTopSideBlock
		p	1		downBlock
	m	(Llq;Ladd;)Llp;	d	singleSlot
		p	0		key
		p	1		id
	m	(Ladd;)Llp;	e	rail
		p	0		id
	m	(Lcpi;)Llp;	e	rail
		p	0		block
	m	(Ladd;)Llp;	f	wool
		p	0		id
	m	(Lcpi;)Llp;	f	wool
		p	0		block
	m	(Ladd;)Llp;	g	crop
		p	0		id
	m	(Lcpi;)Llp;	g	flowerbed
		p	0		block
	m	(Ladd;)Llp;	h	particle
		p	0		id
	m	(Lcpi;)Llp;	h	stem
		p	0		block
	m	(Ladd;)Llp;	i	torch
		p	0		id
	m	(Lcpi;)Llp;	i	pattern
		p	0		block
	m	(Ladd;)Llp;	j	cauldron
		p	0		content
	m	(Lcpi;)Llp;	j	fan
		p	0		block
	m	(Ladd;)Llp;	k	layer0
		p	0		id
	m	(Lcpi;)Llp;	k	column
		p	0		block
	m	(Lcpi;)Llp;	l	cubeTop
		p	0		block
	m	(Lcpi;)Llp;	m	logColumn
		p	0		block
	m	(Lcpi;)Llp;	n	fence
		p	0		block
	m	(Lcpi;)Llp;	o	customParticle
		p	0		block
	m	(Lcpi;)Llp;	p	cubeBottomTop
		p	0		block
	m	(Lcpi;)Llp;	q	cubeBottomTopWithWall
		p	0		block
	m	(Lcpi;)Llp;	r	columnWithWall
		p	0		block
	m	(Lcpi;)Llp;	s	door
		p	0		block
	m	(Lcpi;)Llp;	t	particle
		p	0		block
	m	(Lcpi;)Llp;	u	fire0
		p	0		block
	m	(Lcpi;)Llp;	v	fire1
		p	0		block
	m	(Lcpi;)Llp;	w	lantern
		p	0		block
	m	(Lcpi;)Llp;	x	torch
		p	0		block
	m	(Lcpi;)Llp;	y	commandBlock
		p	0		block
	m	(Lcpi;)Llp;	z	orientableCube
		p	0		block
	f	Ljava/util/Map;	a	slots
	f	Ljava/util/Set;	b	forcedSlots
c	lq	net/minecraft/data/models/model/TextureSlot
	m	(Ljava/lang/String;Llq;)V	<init>	<init>
		p	1		name
		p	2		parent
	m	()Ljava/lang/String;	a	getId
	m	(Ljava/lang/String;)Llq;	a	create
		p	0		name
	m	(Ljava/lang/String;Llq;)Llq;	a	create
		p	0		name
		p	1		parent
	m	()Llq;	b	getParent
	f	Llq;	A	CROP
	f	Llq;	B	DIRT
	f	Llq;	C	FIRE
	f	Llq;	D	LANTERN
	f	Llq;	E	PLATFORM
	f	Llq;	F	UNSTICKY
	f	Llq;	G	TORCH
	f	Llq;	H	LAYER0
	f	Llq;	I	LAYER1
	f	Llq;	J	LAYER2
	f	Llq;	K	LIT_LOG
	f	Llq;	L	CANDLE
	f	Llq;	M	INSIDE
	f	Llq;	N	CONTENT
	f	Llq;	O	INNER_TOP
	f	Llq;	P	FLOWERBED
	f	Ljava/lang/String;	Q	id
	f	Llq;	R	parent
	f	Llq;	a	ALL
	f	Llq;	b	TEXTURE
	f	Llq;	c	PARTICLE
	f	Llq;	d	END
	f	Llq;	e	BOTTOM
	f	Llq;	f	TOP
	f	Llq;	g	FRONT
	f	Llq;	h	BACK
	f	Llq;	i	SIDE
	f	Llq;	j	NORTH
	f	Llq;	k	SOUTH
	f	Llq;	l	EAST
	f	Llq;	m	WEST
	f	Llq;	n	UP
	f	Llq;	o	DOWN
	f	Llq;	p	CROSS
	f	Llq;	q	PLANT
	f	Llq;	r	WALL
	f	Llq;	s	RAIL
	f	Llq;	t	WOOL
	f	Llq;	u	PATTERN
	f	Llq;	v	PANE
	f	Llq;	w	EDGE
	f	Llq;	x	FAN
	f	Llq;	y	STEM
	f	Llq;	z	UPPER_STEM
c	lr	net/minecraft/data/models/model/TexturedModel
	m	(Llp;Lln;)V	<init>	<init>
		p	1		textures
		p	2		model
	m	()Lln;	a	getTemplate
	m	(Ladd;)Llr;	a	createAllSame
		p	0		id
	m	(Lcpi;Ljava/lang/String;Ljava/util/function/BiConsumer;)Ladd;	a	createWithSuffix
		p	1		block
		p	2		suffix
		p	3		writer
	m	(Lcpi;Ljava/util/function/BiConsumer;)Ladd;	a	create
		p	1		block
		p	2		writer
	m	(Ljava/util/function/Consumer;)Llr;	a	updateTextures
		p	1		texturesConsumer
	m	(Ljava/util/function/Function;Lln;)Llr$a;	a	createDefault
		p	0		texturesGetter
		p	1		model
	m	(Ljava/util/function/Function;Lln;Lcpi;)Llr;	a	lambda$createDefault$0
		p	2		block
	m	()Llp;	b	getMapping
	f	Lln;	A	template
	f	Llr$a;	a	CUBE
	f	Llr$a;	b	CUBE_MIRRORED
	f	Llr$a;	c	COLUMN
	f	Llr$a;	d	COLUMN_HORIZONTAL
	f	Llr$a;	e	CUBE_TOP_BOTTOM
	f	Llr$a;	f	CUBE_TOP
	f	Llr$a;	g	ORIENTABLE_ONLY_TOP
	f	Llr$a;	h	ORIENTABLE
	f	Llr$a;	i	CARPET
	f	Llr$a;	j	FLOWERBED_1
	f	Llr$a;	k	FLOWERBED_2
	f	Llr$a;	l	FLOWERBED_3
	f	Llr$a;	m	FLOWERBED_4
	f	Llr$a;	n	GLAZED_TERRACOTTA
	f	Llr$a;	o	CORAL_FAN
	f	Llr$a;	p	PARTICLE_ONLY
	f	Llr$a;	q	ANVIL
	f	Llr$a;	r	LEAVES
	f	Llr$a;	s	LANTERN
	f	Llr$a;	t	HANGING_LANTERN
	f	Llr$a;	u	SEAGRASS
	f	Llr$a;	v	COLUMN_ALT
	f	Llr$a;	w	COLUMN_HORIZONTAL_ALT
	f	Llr$a;	x	TOP_BOTTOM_WITH_WALL
	f	Llr$a;	y	COLUMN_WITH_WALL
	f	Llp;	z	mapping
c	lr$a	net/minecraft/data/models/model/TexturedModel$Provider
	m	(Ljava/util/function/Consumer;Lcpi;)Llr;	a	lambda$updateTexture$0
		p	2		block
	m	(Lcpi;Ljava/util/function/BiConsumer;)Ladd;	create	create
		p	1		block
		p	2		writer
	m	(Lcpi;Ljava/lang/String;Ljava/util/function/BiConsumer;)Ladd;	createWithSuffix	createWithSuffix
		p	1		block
		p	2		suffix
		p	3		writer
	m	(Lcpi;)Llr;	get	get
		p	1		block
	m	(Ljava/util/function/Consumer;)Llr$a;	updateTexture	updateTexture
		p	1		consumer
c	ls	net/minecraft/data/models/model/package-info
c	lt	net/minecraft/data/models/package-info
c	lu	net/minecraft/data/package-info
c	lv	net/minecraft/data/recipes/CraftingRecipeBuilder
	m	(Llz;)Lcin;	a	determineBookCategory
		p	0		category
c	lv$1	net/minecraft/data/recipes/CraftingRecipeBuilder$1
	f	[I	a	$SwitchMap$net$minecraft$data$recipes$RecipeCategory
c	lv$a	net/minecraft/data/recipes/CraftingRecipeBuilder$CraftingResult
	m	(Lcin;)V	<init>	<init>
		p	1		craftingCategory
	m	(Lcom/google/gson/JsonObject;)V	a	serializeRecipeData
		p	1		json
	f	Lcin;	a	category
c	lw	net/minecraft/data/recipes/FinishedRecipe
	m	()Lcom/google/gson/JsonObject;	a	serializeRecipe
	m	(Lcom/google/gson/JsonObject;)V	a	serializeRecipeData
		p	1		json
	m	()Ladd;	b	getId
	m	()Lcja;	c	getType
	m	()Lcom/google/gson/JsonObject;	d	serializeAdvancement
	m	()Ladd;	e	getAdvancementId
c	lx	net/minecraft/data/recipes/LegacyUpgradeRecipeBuilder
	m	(Lcja;Lciu;Lciu;Llz;Lcfq;)V	<init>	<init>
		p	1		serializer
		p	2		base
		p	3		addition
		p	4		category
		p	5		result
	m	(Ladd;)V	a	ensureValid
		p	1		recipeId
	m	(Lciu;Lciu;Llz;Lcfq;)Llx;	a	smithing
		p	0		base
		p	1		addition
		p	2		category
		p	3		result
	m	(Ljava/lang/String;Lam;)Llx;	a	unlocks
		p	1		criterionName
		p	2		conditions
	m	(Ljava/util/function/Consumer;Ladd;)V	a	save
		p	1		exporter
		p	2		recipeId
	m	(Ljava/util/function/Consumer;Ljava/lang/String;)V	a	save
		p	1		exporter
		p	2		recipeId
	f	Lciu;	a	base
	f	Lciu;	b	addition
	f	Llz;	c	category
	f	Lcfq;	d	result
	f	Lae$a;	e	advancement
	f	Lcja;	f	type
c	lx$a	net/minecraft/data/recipes/LegacyUpgradeRecipeBuilder$Result
	m	(Ladd;Lcja;Lciu;Lciu;Lcfq;Lae$a;Ladd;)V	<init>	<init>
		p	1		recipeId
		p	2		serializer
		p	3		base
		p	4		addition
		p	5		result
		p	6		advancementBuilder
		p	7		advancementId
	m	(Lcom/google/gson/JsonObject;)V	a	serializeRecipeData
		p	1		json
	m	()Ladd;	b	getId
	m	()Lcja;	c	getType
	m	()Lcom/google/gson/JsonObject;	d	serializeAdvancement
	m	()Ladd;	e	getAdvancementId
	f	Ladd;	a	id
	f	Lciu;	b	base
	f	Lciu;	c	addition
	f	Lcfq;	d	result
	f	Lae$a;	e	advancement
	f	Ladd;	f	advancementId
	f	Lcja;	g	type
c	ly	net/minecraft/data/recipes/RecipeBuilder
	m	()Lcfq;	a	getResult
	m	(Lcmh;)Ladd;	a	getDefaultRecipeId
		p	0		item
	m	(Ljava/lang/String;)Lly;	a	group
		p	1		group
	m	(Ljava/lang/String;Lam;)Lly;	a	unlockedBy
		p	1		name
		p	2		conditions
	m	(Ljava/util/function/Consumer;)V	a	save
		p	1		exporter
	m	(Ljava/util/function/Consumer;Ladd;)V	a	save
		p	1		exporter
		p	2		recipeId
	m	(Ljava/util/function/Consumer;Ljava/lang/String;)V	a	save
		p	1		exporter
		p	2		recipePath
	f	Ladd;	a	ROOT_RECIPE_ADVANCEMENT
c	lz	net/minecraft/data/recipes/RecipeCategory
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()Ljava/lang/String;	a	getFolderName
	m	()[Llz;	b	$values
	f	Llz;	a	BUILDING_BLOCKS
	f	Llz;	b	DECORATIONS
	f	Llz;	c	REDSTONE
	f	Llz;	d	TRANSPORTATION
	f	Llz;	e	TOOLS
	f	Llz;	f	COMBAT
	f	Llz;	g	FOOD
	f	Llz;	h	BREWING
	f	Llz;	i	MISC
	f	Ljava/lang/String;	j	recipeFolderName
	f	[Llz;	k	$VALUES
c	ma	net/minecraft/data/recipes/RecipeProvider
	m	(Ljj;)V	<init>	<init>
		p	1		output
	m	()Ljava/lang/String;	a	getName
	m	(I)[Ljava/util/concurrent/CompletableFuture;	a	lambda$run$1
	m	(Lanv;)Lbw$a;	a	has
		p	0		tag
	m	(Lcau;Lje;)Z	a	lambda$generateForEnabledBlockFamilies$2
		p	1		family
	m	(Lci$d;Lcmh;)Lbw$a;	a	has
		p	0		count
		p	1		item
	m	(Lcmh;)Lbw$a;	a	has
		p	0		item
	m	(Lcmh;Lciu;)Lly;	a	doorBuilder
		p	0		output
		p	1		input
	m	(Lcmh;Lcmh;)Ljava/lang/String;	a	getConversionRecipeName
		p	0		to
		p	1		from
	m	(Lcpi;)Lbj$a;	a	insideOf
		p	0		block
	m	(Ljava/util/Set;Ljava/util/List;Ljf;Llw;)V	a	lambda$run$0
		p	4		jsonProvider
	m	(Ljava/util/function/Consumer;)V	a	buildRecipes
		p	1		exporter
	m	(Ljava/util/function/Consumer;Lcau;)V	a	generateForEnabledBlockFamilies
		p	0		exporter
		p	1		enabledFeatures
	m	(Ljava/util/function/Consumer;Lcfq;)V	a	trimSmithing
		p	0		exporter
		p	1		template
	m	(Ljava/util/function/Consumer;Lcfq;Llz;Lcfq;)V	a	legacyNetheriteSmithing
		p	0		exporter
		p	1		input
		p	2		category
		p	3		result
	m	(Ljava/util/function/Consumer;Lcja;Ljava/util/List;Llz;Lcmh;FILjava/lang/String;Ljava/lang/String;)V	a	oreCooking
		p	0		exporter
		p	1		serializer
		p	2		inputs
		p	3		category
		p	4		output
		p	5		experience
		p	6		cookingTime
		p	7		group
		p	8		method
	m	(Ljava/util/function/Consumer;Lcmh;Lanv;)V	a	copySmithingTemplate
		p	0		exporter
		p	1		template
		p	2		resource
	m	(Ljava/util/function/Consumer;Lcmh;Lanv;I)V	a	planksFromLog
		p	0		exporter
		p	1		output
		p	2		input
		p	3		count
	m	(Ljava/util/function/Consumer;Lcmh;Lcmh;)V	a	woodFromLogs
		p	0		exporter
		p	1		output
		p	2		input
	m	(Ljava/util/function/Consumer;Lcmh;Lcmh;Ljava/lang/String;)V	a	oneToOneConversionRecipe
		p	0		exporter
		p	1		output
		p	2		input
		p	3		group
	m	(Ljava/util/function/Consumer;Lcmh;Lcmh;Ljava/lang/String;I)V	a	oneToOneConversionRecipe
		p	0		exporter
		p	1		output
		p	2		input
		p	3		group
		p	4		outputCount
	m	(Ljava/util/function/Consumer;Lcpi;Lcpi;)V	a	lambda$waxRecipes$4
		p	1		input
		p	2		output
	m	(Ljava/util/function/Consumer;Ljava/lang/String;Lcja;I)V	a	cookRecipes
		p	0		exporter
		p	1		cooker
		p	2		serializer
		p	3		cookingTime
	m	(Ljava/util/function/Consumer;Ljava/lang/String;Lcja;ILcmh;Lcmh;F)V	a	simpleCookingRecipe
		p	0		exporter
		p	1		cooker
		p	2		serializer
		p	3		cookingTime
		p	4		input
		p	5		output
		p	6		experience
	m	(Ljava/util/function/Consumer;Ljava/util/List;Llz;Lcmh;FILjava/lang/String;)V	a	oreSmelting
		p	0		exporter
		p	1		inputs
		p	2		category
		p	3		output
		p	4		experience
		p	5		cookingTime
		p	6		group
	m	(Ljava/util/function/Consumer;Lje;)V	a	generateRecipes
		p	0		exporter
		p	1		family
	m	(Ljava/util/function/Consumer;Llz;Lcmh;Lcmh;)V	a	twoByTwoPacker
		p	0		exporter
		p	1		category
		p	2		output
		p	3		input
	m	(Ljava/util/function/Consumer;Llz;Lcmh;Lcmh;I)V	a	stonecutterResultFromBase
		p	0		exporter
		p	1		category
		p	2		output
		p	3		input
		p	4		count
	m	(Ljava/util/function/Consumer;Llz;Lcmh;Lcmh;Ljava/lang/String;)V	a	threeByThreePacker
		p	0		exporter
		p	1		category
		p	2		output
		p	3		input
		p	4		criterionName
	m	(Ljava/util/function/Consumer;Llz;Lcmh;Llz;Lcmh;)V	a	nineBlockStorageRecipes
		p	0		exporter
		p	1		reverseCategory
		p	2		baseItem
		p	3		compactingCategory
		p	4		compactItem
	m	(Ljava/util/function/Consumer;Llz;Lcmh;Llz;Lcmh;Ljava/lang/String;Ljava/lang/String;)V	a	nineBlockStorageRecipesWithCustomPacking
		p	0		exporter
		p	1		reverseCategory
		p	2		baseItem
		p	3		compactingCategory
		p	4		compactItem
		p	5		compactingId
		p	6		compactingGroup
	m	(Ljava/util/function/Consumer;Llz;Lcmh;Llz;Lcmh;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V	a	nineBlockStorageRecipes
		p	0		exporter
		p	1		reverseCategory
		p	2		baseItem
		p	3		compactingCategory
		p	4		compactItem
		p	5		compactingId
		p	6		compactingGroup
		p	7		reverseId
		p	8		reverseGroup
	m	(Lje;Ljava/util/function/Consumer;Lje$b;Lcpi;)V	a	lambda$generateRecipes$7
		p	2		variant
		p	3		block
	m	(Lje;Lje$b;)Lcpi;	a	getBaseBlock
		p	0		family
		p	1		variant
	m	(Ljf;)Ljava/util/concurrent/CompletableFuture;	a	run
		p	1		writer
	m	(Ljf;Ladd;Lae$a;)Ljava/util/concurrent/CompletableFuture;	a	buildAdvancement
		p	1		cache
		p	2		advancementId
		p	3		advancementBuilder
	m	(Lly;Lje$b;Ljava/lang/String;)V	a	lambda$generateRecipes$5
		p	2		group
	m	(Llz;Lcmh;Lciu;)Lly;	a	slabBuilder
		p	0		category
		p	1		output
		p	2		input
	m	([Lbz;)Lbw$a;	a	inventoryTrigger
		p	0		predicates
	m	(Lcmh;)Ljava/lang/String;	b	getHasName
		p	0		item
	m	(Lcmh;Lciu;)Lly;	b	stairBuilder
		p	0		output
		p	1		input
	m	(Lcmh;Lcmh;)Lly;	b	lambda$static$22
		p	0		output
		p	1		input
	m	(Ljava/util/function/Consumer;)V	b	waxRecipes
		p	0		exporter
	m	(Ljava/util/function/Consumer;Lcfq;Llz;Lcfq;)V	b	netheriteSmithing
		p	0		exporter
		p	1		input
		p	2		category
		p	3		result
	m	(Ljava/util/function/Consumer;Lcmh;Lanv;I)V	b	planksFromLogs
		p	0		exporter
		p	1		output
		p	2		input
		p	3		count
	m	(Ljava/util/function/Consumer;Lcmh;Lcmh;)V	b	woodenBoat
		p	0		exporter
		p	1		output
		p	2		input
	m	(Ljava/util/function/Consumer;Ljava/util/List;Llz;Lcmh;FILjava/lang/String;)V	b	oreBlasting
		p	0		exporter
		p	1		inputs
		p	2		category
		p	3		output
		p	4		experience
		p	5		cookingTime
		p	6		group
	m	(Ljava/util/function/Consumer;Lje;)V	b	lambda$generateForEnabledBlockFamilies$3
		p	1		family
	m	(Ljava/util/function/Consumer;Llz;Lcmh;Lcmh;)V	b	threeByThreePacker
		p	0		exporter
		p	1		category
		p	2		output
		p	3		input
	m	(Ljava/util/function/Consumer;Llz;Lcmh;Llz;Lcmh;Ljava/lang/String;Ljava/lang/String;)V	b	nineBlockStorageRecipesRecipesWithCustomUnpacking
		p	0		exporter
		p	1		reverseCategory
		p	2		baseItem
		p	3		compactingCategory
		p	4		compactItem
		p	5		reverseId
		p	6		reverseGroup
	m	(Llz;Lcmh;Lciu;)Lmb;	b	chiseledBuilder
		p	0		category
		p	1		output
		p	2		input
	m	(Lcmh;)Ljava/lang/String;	c	getItemName
		p	0		item
	m	(Lcmh;Lciu;)Lly;	c	buttonBuilder
		p	0		output
		p	1		input
	m	(Lcmh;Lcmh;)Lly;	c	lambda$static$21
		p	0		output
		p	1		input
	m	(Ljava/util/function/Consumer;Lcmh;Lcmh;)V	c	chestBoat
		p	0		exporter
		p	1		output
		p	2		input
	m	(Ljava/util/function/Consumer;Llz;Lcmh;Lcmh;)V	c	slab
		p	0		exporter
		p	1		category
		p	2		output
		p	3		input
	m	(Llz;Lcmh;Lciu;)Lly;	c	pressurePlateBuilder
		p	0		category
		p	1		output
		p	2		input
	m	(Lcmh;)Ljava/lang/String;	d	getSimpleRecipeName
		p	0		item
	m	(Lcmh;Lciu;)Lly;	d	fenceBuilder
		p	0		output
		p	1		input
	m	(Lcmh;Lcmh;)Lly;	d	lambda$static$20
		p	0		output
		p	1		input
	m	(Ljava/util/function/Consumer;Lcmh;Lcmh;)V	d	pressurePlate
		p	0		exporter
		p	1		output
		p	2		input
	m	(Ljava/util/function/Consumer;Llz;Lcmh;Lcmh;)V	d	wall
		p	0		exporter
		p	1		category
		p	2		output
		p	3		input
	m	(Llz;Lcmh;Lciu;)Lly;	d	wallBuilder
		p	0		category
		p	1		output
		p	2		input
	m	(Lcmh;)Ljava/lang/String;	e	getSmeltingRecipeName
		p	0		item
	m	(Lcmh;Lciu;)Lly;	e	fenceGateBuilder
		p	0		output
		p	1		input
	m	(Lcmh;Lcmh;)Lly;	e	lambda$static$19
		p	0		output
		p	1		input
	m	(Ljava/util/function/Consumer;Lcmh;Lcmh;)V	e	hangingSign
		p	0		exporter
		p	1		output
		p	2		input
	m	(Ljava/util/function/Consumer;Llz;Lcmh;Lcmh;)V	e	polished
		p	0		exporter
		p	1		category
		p	2		output
		p	3		input
	m	(Llz;Lcmh;Lciu;)Lly;	e	polishedBuilder
		p	0		category
		p	1		output
		p	2		input
	m	(Lcmh;)Ljava/lang/String;	f	getBlastingRecipeName
		p	0		item
	m	(Lcmh;Lciu;)Lly;	f	trapdoorBuilder
		p	0		output
		p	1		input
	m	(Lcmh;Lcmh;)Lly;	f	lambda$static$18
		p	0		output
		p	1		input
	m	(Ljava/util/function/Consumer;Lcmh;Lcmh;)V	f	coloredWoolFromWhiteWoolAndDye
		p	0		exporter
		p	1		output
		p	2		input
	m	(Ljava/util/function/Consumer;Llz;Lcmh;Lcmh;)V	f	cut
		p	0		exporter
		p	1		category
		p	2		output
		p	3		input
	m	(Llz;Lcmh;Lciu;)Lmb;	f	cutBuilder
		p	0		category
		p	1		output
		p	2		input
	m	(Lcmh;)Ljava/lang/String;	g	lambda$generateRecipes$6
	m	(Lcmh;Lciu;)Lly;	g	signBuilder
		p	0		output
		p	1		input
	m	(Lcmh;Lcmh;)Lly;	g	lambda$static$17
		p	0		output
		p	1		input
	m	(Ljava/util/function/Consumer;Lcmh;Lcmh;)V	g	carpet
		p	0		exporter
		p	1		output
		p	2		input
	m	(Ljava/util/function/Consumer;Llz;Lcmh;Lcmh;)V	g	chiseled
		p	0		exporter
		p	1		category
		p	2		output
		p	3		input
	m	(Lcmh;Lcmh;)Lly;	h	lambda$static$16
		p	0		output
		p	1		input
	m	(Ljava/util/function/Consumer;Lcmh;Lcmh;)V	h	coloredCarpetFromWhiteCarpetAndDye
		p	0		exporter
		p	1		output
		p	2		input
	m	(Ljava/util/function/Consumer;Llz;Lcmh;Lcmh;)V	h	mosaicBuilder
		p	0		exporter
		p	1		category
		p	2		output
		p	3		input
	m	(Lcmh;Lcmh;)Lly;	i	lambda$static$15
		p	0		output
		p	1		input
	m	(Ljava/util/function/Consumer;Lcmh;Lcmh;)V	i	bedFromPlanksAndWool
		p	0		exporter
		p	1		output
		p	2		input
	m	(Ljava/util/function/Consumer;Llz;Lcmh;Lcmh;)V	i	stonecutterResultFromBase
		p	0		exporter
		p	1		category
		p	2		output
		p	3		input
	m	(Lcmh;Lcmh;)Lly;	j	lambda$static$14
	m	(Ljava/util/function/Consumer;Lcmh;Lcmh;)V	j	bedFromWhiteBedAndDye
		p	0		exporter
		p	1		output
		p	2		input
	m	(Lcmh;Lcmh;)Lly;	k	lambda$static$13
		p	0		output
		p	1		input
	m	(Ljava/util/function/Consumer;Lcmh;Lcmh;)V	k	banner
		p	0		exporter
		p	1		output
		p	2		input
	m	(Lcmh;Lcmh;)Lly;	l	lambda$static$12
		p	0		output
		p	1		input
	m	(Ljava/util/function/Consumer;Lcmh;Lcmh;)V	l	stainedGlassFromGlassAndDye
		p	0		exporter
		p	1		output
		p	2		input
	m	(Lcmh;Lcmh;)Lly;	m	lambda$static$11
		p	0		output
		p	1		input
	m	(Ljava/util/function/Consumer;Lcmh;Lcmh;)V	m	stainedGlassPaneFromStainedGlass
		p	0		exporter
		p	1		output
		p	2		input
	m	(Lcmh;Lcmh;)Lly;	n	lambda$static$10
	m	(Ljava/util/function/Consumer;Lcmh;Lcmh;)V	n	stainedGlassPaneFromGlassPaneAndDye
		p	0		exporter
		p	1		output
		p	2		input
	m	(Lcmh;Lcmh;)Lly;	o	lambda$static$9
		p	0		output
		p	1		input
	m	(Ljava/util/function/Consumer;Lcmh;Lcmh;)V	o	coloredTerracottaFromTerracottaAndDye
		p	0		exporter
		p	1		output
		p	2		input
	m	(Lcmh;Lcmh;)Lly;	p	lambda$static$8
		p	0		output
		p	1		input
	m	(Ljava/util/function/Consumer;Lcmh;Lcmh;)V	p	concretePowder
		p	0		exporter
		p	1		output
		p	2		input
	m	(Ljava/util/function/Consumer;Lcmh;Lcmh;)V	q	candle
		p	0		exporter
		p	1		output
		p	2		input
	m	(Ljava/util/function/Consumer;Lcmh;Lcmh;)V	r	copySmithingTemplate
		p	0		exporter
		p	1		template
		p	2		resource
	m	(Ljava/util/function/Consumer;Lcmh;Lcmh;)V	s	smeltingResultFromBase
		p	0		exporter
		p	1		output
		p	2		input
	f	Ljj$a;	d	recipePathProvider
	f	Ljj$a;	e	advancementPathProvider
	f	Ljava/util/Map;	f	SHAPE_BUILDERS
c	mb	net/minecraft/data/recipes/ShapedRecipeBuilder
	m	(Llz;Lcmh;I)V	<init>	<init>
		p	2		output
		p	3		count
	m	()Lcfq;	a	getResult
	m	(Ladd;)V	a	ensureValid
		p	1		recipeId
	m	(Ljava/lang/Character;Lanv;)Lmb;	a	define
		p	1		c
		p	2		tag
	m	(Ljava/lang/Character;Lciu;)Lmb;	a	define
		p	1		c
		p	2		ingredient
	m	(Ljava/lang/Character;Lcmh;)Lmb;	a	define
		p	1		c
		p	2		itemProvider
	m	(Ljava/lang/String;)Lly;	a	group
		p	1		group
	m	(Ljava/lang/String;Lam;)Lly;	a	unlockedBy
		p	1		name
		p	2		conditions
	m	(Ljava/util/function/Consumer;Ladd;)V	a	save
		p	1		exporter
		p	2		recipeId
	m	(Llz;Lcmh;)Lmb;	a	shaped
		p	0		category
		p	1		output
	m	(Llz;Lcmh;I)Lmb;	a	shaped
		p	0		category
		p	1		output
		p	2		count
	m	(Z)Lmb;	a	showNotification
	m	(Ljava/lang/String;)Lmb;	b	pattern
		p	1		patternStr
	m	(Ljava/lang/String;Lam;)Lmb;	b	unlockedBy
	m	(Ljava/lang/String;)Lmb;	c	group
	f	Llz;	b	category
	f	Lcfq;	c	result
	f	I	d	count
	f	Ljava/util/List;	e	rows
	f	Ljava/util/Map;	f	key
	f	Lae$a;	g	advancement
	f	Ljava/lang/String;	h	group
	f	Z	i	showNotification
c	mb$a	net/minecraft/data/recipes/ShapedRecipeBuilder$Result
	m	(Ladd;Lcfq;ILjava/lang/String;Lcin;Ljava/util/List;Ljava/util/Map;Lae$a;Ladd;Z)V	<init>	<init>
		p	1		recipeId
		p	2		output
		p	3		resultCount
		p	4		group
		p	5		craftingCategory
		p	6		pattern
		p	7		inputs
		p	8		advancementBuilder
		p	9		advancementId
	m	(Lcom/google/gson/JsonObject;)V	a	serializeRecipeData
		p	1		json
	m	()Ladd;	b	getId
	m	()Lcja;	c	getType
	m	()Lcom/google/gson/JsonObject;	d	serializeAdvancement
	m	()Ladd;	e	getAdvancementId
	f	Ladd;	a	id
	f	Lcfq;	b	result
	f	I	c	count
	f	Ljava/lang/String;	d	group
	f	Ljava/util/List;	e	pattern
	f	Ljava/util/Map;	f	key
	f	Lae$a;	g	advancement
	f	Ladd;	h	advancementId
	f	Z	i	showNotification
c	mc	net/minecraft/data/recipes/ShapelessRecipeBuilder
	m	(Llz;Lcmh;I)V	<init>	<init>
		p	1		category
		p	2		output
		p	3		count
	m	()Lcfq;	a	getResult
	m	(Ladd;)V	a	ensureValid
		p	1		recipeId
	m	(Lanv;)Lmc;	a	requires
		p	1		tag
	m	(Lciu;)Lmc;	a	requires
		p	1		ingredient
	m	(Lciu;I)Lmc;	a	requires
		p	1		ingredient
		p	2		size
	m	(Lcmh;I)Lmc;	a	requires
		p	1		itemProvider
		p	2		size
	m	(Ljava/lang/String;)Lly;	a	group
		p	1		group
	m	(Ljava/lang/String;Lam;)Lly;	a	unlockedBy
		p	1		name
		p	2		conditions
	m	(Ljava/util/function/Consumer;Ladd;)V	a	save
		p	1		exporter
		p	2		recipeId
	m	(Llz;Lcmh;)Lmc;	a	shapeless
		p	0		category
		p	1		output
	m	(Llz;Lcmh;I)Lmc;	a	shapeless
		p	0		category
		p	1		output
		p	2		count
	m	(Lcmh;)Lmc;	b	requires
		p	1		itemProvider
	m	(Ljava/lang/String;)Lmc;	b	group
	m	(Ljava/lang/String;Lam;)Lmc;	b	unlockedBy
	f	Llz;	b	category
	f	Lcfq;	c	result
	f	I	d	count
	f	Ljava/util/List;	e	ingredients
	f	Lae$a;	f	advancement
	f	Ljava/lang/String;	g	group
c	mc$a	net/minecraft/data/recipes/ShapelessRecipeBuilder$Result
	m	(Ladd;Lcfq;ILjava/lang/String;Lcin;Ljava/util/List;Lae$a;Ladd;)V	<init>	<init>
		p	1		recipeId
		p	2		output
		p	3		outputCount
		p	4		group
		p	5		craftingCategory
		p	6		inputs
		p	7		advancementBuilder
		p	8		advancementId
	m	(Lcom/google/gson/JsonObject;)V	a	serializeRecipeData
		p	1		json
	m	()Ladd;	b	getId
	m	()Lcja;	c	getType
	m	()Lcom/google/gson/JsonObject;	d	serializeAdvancement
	m	()Ladd;	e	getAdvancementId
	f	Ladd;	a	id
	f	Lcfq;	b	result
	f	I	c	count
	f	Ljava/lang/String;	d	group
	f	Ljava/util/List;	e	ingredients
	f	Lae$a;	f	advancement
	f	Ladd;	g	advancementId
c	md	net/minecraft/data/recipes/SimpleCookingRecipeBuilder
	m	(Llz;Lcim;Lcmh;Lciu;FILcja;)V	<init>	<init>
		p	1		category
		p	2		cookingCategory
		p	3		output
		p	4		input
		p	5		experience
		p	6		cookingTime
		p	7		serializer
	m	()Lcfq;	a	getResult
	m	(Ladd;)V	a	ensureValid
		p	1		recipeId
	m	(Lciu;Llz;Lcmh;FI)Lmd;	a	campfireCooking
		p	0		input
		p	1		category
		p	2		output
		p	3		experience
		p	4		cookingTime
	m	(Lciu;Llz;Lcmh;FILcja;)Lmd;	a	generic
		p	0		input
		p	1		category
		p	2		output
		p	3		experience
		p	4		cookingTime
		p	5		serializer
	m	(Lcja;Lcmh;)Lcim;	a	determineRecipeCategory
		p	0		serializer
		p	1		output
	m	(Ljava/lang/String;)Lly;	a	group
		p	1		group
	m	(Ljava/lang/String;Lam;)Lly;	a	unlockedBy
		p	1		name
		p	2		conditions
	m	(Ljava/util/function/Consumer;Ladd;)V	a	save
		p	1		exporter
		p	2		recipeId
	m	(Lciu;Llz;Lcmh;FI)Lmd;	b	blasting
		p	0		input
		p	1		category
		p	2		output
		p	3		experience
		p	4		cookingTime
	m	(Lcmh;)Lcim;	b	determineSmeltingRecipeCategory
		p	0		output
	m	(Ljava/lang/String;)Lmd;	b	group
	m	(Ljava/lang/String;Lam;)Lmd;	b	unlockedBy
	m	(Lciu;Llz;Lcmh;FI)Lmd;	c	smelting
		p	0		input
		p	1		category
		p	2		output
		p	3		experience
		p	4		cookingTime
	m	(Lcmh;)Lcim;	c	determineBlastingRecipeCategory
		p	0		output
	m	(Lciu;Llz;Lcmh;FI)Lmd;	d	smoking
		p	0		input
		p	1		category
		p	2		output
		p	3		experience
		p	4		cookingTime
	f	Llz;	b	category
	f	Lcim;	c	bookCategory
	f	Lcfq;	d	result
	f	Lciu;	e	ingredient
	f	F	f	experience
	f	I	g	cookingTime
	f	Lae$a;	h	advancement
	f	Ljava/lang/String;	i	group
	f	Lcja;	j	serializer
c	md$a	net/minecraft/data/recipes/SimpleCookingRecipeBuilder$Result
	m	(Ladd;Ljava/lang/String;Lcim;Lciu;Lcfq;FILae$a;Ladd;Lcja;)V	<init>	<init>
		p	1		recipeId
		p	2		group
		p	3		category
		p	4		input
		p	5		result
		p	6		experience
		p	7		cookingTime
		p	8		advancementBuilder
		p	9		advancementId
		p	10		serializer
	m	(Lcom/google/gson/JsonObject;)V	a	serializeRecipeData
		p	1		json
	m	()Ladd;	b	getId
	m	()Lcja;	c	getType
	m	()Lcom/google/gson/JsonObject;	d	serializeAdvancement
	m	()Ladd;	e	getAdvancementId
	f	Ladd;	a	id
	f	Ljava/lang/String;	b	group
	f	Lcim;	c	category
	f	Lciu;	d	ingredient
	f	Lcfq;	e	result
	f	F	f	experience
	f	I	g	cookingTime
	f	Lae$a;	h	advancement
	f	Ladd;	i	advancementId
	f	Lcja;	j	serializer
c	me	net/minecraft/data/recipes/SingleItemRecipeBuilder
	m	(Llz;Lcja;Lciu;Lcmh;I)V	<init>	<init>
		p	1		category
		p	2		serializer
		p	3		input
		p	4		output
		p	5		count
	m	()Lcfq;	a	getResult
	m	(Ladd;)V	a	ensureValid
		p	1		recipeId
	m	(Lciu;Llz;Lcmh;)Lme;	a	stonecutting
		p	0		input
		p	1		category
		p	2		output
	m	(Lciu;Llz;Lcmh;I)Lme;	a	stonecutting
		p	0		input
		p	1		category
		p	2		output
		p	3		count
	m	(Ljava/lang/String;)Lly;	a	group
		p	1		group
	m	(Ljava/lang/String;Lam;)Lly;	a	unlockedBy
		p	1		name
		p	2		conditions
	m	(Ljava/util/function/Consumer;Ladd;)V	a	save
		p	1		exporter
		p	2		recipeId
	m	(Ljava/lang/String;)Lme;	b	group
	m	(Ljava/lang/String;Lam;)Lme;	b	unlockedBy
	f	Llz;	b	category
	f	Lcfq;	c	result
	f	Lciu;	d	ingredient
	f	I	e	count
	f	Lae$a;	f	advancement
	f	Ljava/lang/String;	g	group
	f	Lcja;	h	type
c	me$a	net/minecraft/data/recipes/SingleItemRecipeBuilder$Result
	m	(Ladd;Lcja;Ljava/lang/String;Lciu;Lcfq;ILae$a;Ladd;)V	<init>	<init>
		p	1		recipeId
		p	2		serializer
		p	3		group
		p	4		input
		p	5		output
		p	6		outputCount
		p	7		advancementBuilder
		p	8		advancementId
	m	(Lcom/google/gson/JsonObject;)V	a	serializeRecipeData
		p	1		json
	m	()Ladd;	b	getId
	m	()Lcja;	c	getType
	m	()Lcom/google/gson/JsonObject;	d	serializeAdvancement
	m	()Ladd;	e	getAdvancementId
	f	Ladd;	a	id
	f	Ljava/lang/String;	b	group
	f	Lciu;	c	ingredient
	f	Lcfq;	d	result
	f	I	e	count
	f	Lae$a;	f	advancement
	f	Ladd;	g	advancementId
	f	Lcja;	h	type
c	mf	net/minecraft/data/recipes/SmithingTransformRecipeBuilder
	m	(Lcja;Lciu;Lciu;Lciu;Llz;Lcfq;)V	<init>	<init>
		p	1		serializer
		p	2		template
		p	3		base
		p	4		addition
		p	5		category
		p	6		result
	m	(Ladd;)V	a	ensureValid
		p	1		recipeId
	m	(Lciu;Lciu;Lciu;Llz;Lcfq;)Lmf;	a	smithing
		p	0		template
		p	1		base
		p	2		addition
		p	3		category
		p	4		result
	m	(Ljava/lang/String;Lam;)Lmf;	a	unlocks
		p	1		name
		p	2		conditions
	m	(Ljava/util/function/Consumer;Ladd;)V	a	save
		p	1		exporter
		p	2		recipeId
	m	(Ljava/util/function/Consumer;Ljava/lang/String;)V	a	save
		p	1		exporter
		p	2		recipeId
	f	Lciu;	a	template
	f	Lciu;	b	base
	f	Lciu;	c	addition
	f	Llz;	d	category
	f	Lcfq;	e	result
	f	Lae$a;	f	advancement
	f	Lcja;	g	type
c	mf$a	net/minecraft/data/recipes/SmithingTransformRecipeBuilder$Result
	m	(Lcom/google/gson/JsonObject;)V	a	serializeRecipeData
		p	1		json
	m	()Ladd;	b	getId
	m	()Lcja;	c	getType
	m	()Lcom/google/gson/JsonObject;	d	serializeAdvancement
	m	()Ladd;	e	getAdvancementId
	m	()Ladd;	f	id
	m	()Lcja;	g	type
	m	()Lciu;	h	template
	m	()Lciu;	i	base
	m	()Lciu;	j	addition
	m	()Lcfq;	k	result
	m	()Lae$a;	l	advancement
	m	()Ladd;	m	advancementId
	f	Ladd;	a	id
	f	Lcja;	b	type
	f	Lciu;	c	template
	f	Lciu;	d	base
	f	Lciu;	e	addition
	f	Lcfq;	f	result
	f	Lae$a;	g	advancement
	f	Ladd;	h	advancementId
c	mg	net/minecraft/data/recipes/SmithingTrimRecipeBuilder
	m	(Lcja;Llz;Lciu;Lciu;Lciu;)V	<init>	<init>
		p	1		serializer
		p	2		category
		p	3		template
		p	4		base
		p	5		addition
	m	(Ladd;)V	a	ensureValid
		p	1		recipeId
	m	(Lciu;Lciu;Lciu;Llz;)Lmg;	a	smithingTrim
		p	0		template
		p	1		base
		p	2		addition
		p	3		category
	m	(Ljava/lang/String;Lam;)Lmg;	a	unlocks
		p	1		name
		p	2		conditions
	m	(Ljava/util/function/Consumer;Ladd;)V	a	save
		p	1		exporter
		p	2		recipeId
	m	(Ljava/util/function/Consumer;Ljava/lang/String;)V	a	save
		p	1		exporter
		p	2		recipeId
	f	Llz;	a	category
	f	Lciu;	b	template
	f	Lciu;	c	base
	f	Lciu;	d	addition
	f	Lae$a;	e	advancement
	f	Lcja;	f	type
c	mg$a	net/minecraft/data/recipes/SmithingTrimRecipeBuilder$Result
	m	(Lcom/google/gson/JsonObject;)V	a	serializeRecipeData
		p	1		json
	m	()Ladd;	b	getId
	m	()Lcja;	c	getType
	m	()Lcom/google/gson/JsonObject;	d	serializeAdvancement
	m	()Ladd;	e	getAdvancementId
	m	()Ladd;	f	id
	m	()Lcja;	g	type
	m	()Lciu;	h	template
	m	()Lciu;	i	base
	m	()Lciu;	j	addition
	m	()Lae$a;	k	advancement
	m	()Ladd;	l	advancementId
	f	Ladd;	a	id
	f	Lcja;	b	type
	f	Lciu;	c	template
	f	Lciu;	d	base
	f	Lciu;	e	addition
	f	Lae$a;	f	advancement
	f	Ladd;	g	advancementId
c	mh	net/minecraft/data/recipes/SpecialRecipeBuilder
	m	(Lcja;)V	<init>	<init>
		p	1		serializer
	m	(Lcja;)Lmh;	a	special
		p	0		serializer
	m	(Ljava/util/function/Consumer;Ljava/lang/String;)V	a	save
		p	1		exporter
		p	2		recipeId
	f	Lcja;	a	serializer
c	mh$1	net/minecraft/data/recipes/SpecialRecipeBuilder$1
	m	(Lmh;Lcin;Ljava/lang/String;)V	<init>	<init>
		p	2		craftingCategory
	m	()Ladd;	b	getId
	m	()Lcja;	c	getType
	m	()Lcom/google/gson/JsonObject;	d	serializeAdvancement
	m	()Ladd;	e	getAdvancementId
	f	Ljava/lang/String;	a	val$id
	f	Lmh;	b	this$0
c	mi	net/minecraft/data/recipes/package-info
c	mj	net/minecraft/data/recipes/packs/BundleRecipeProvider
	m	(Ljj;)V	<init>	<init>
		p	1		output
	m	(Ljava/util/function/Consumer;)V	a	buildRecipes
		p	1		exporter
c	mk	net/minecraft/data/recipes/packs/UpdateOneTwentyRecipeProvider
	m	(Ljj;)V	<init>	<init>
		p	1		output
	m	(Ljava/util/function/Consumer;)V	a	buildRecipes
		p	1		exporter
c	ml	net/minecraft/data/recipes/packs/VanillaRecipeProvider
	m	(Ljj;)V	<init>	<init>
		p	1		output
	m	(Ljava/util/function/Consumer;)V	a	buildRecipes
		p	1		exporter
	m	(Ljf;)Ljava/util/concurrent/CompletableFuture;	a	run
		p	1		writer
	f	Lcom/google/common/collect/ImmutableList;	d	COAL_SMELTABLES
	f	Lcom/google/common/collect/ImmutableList;	e	IRON_SMELTABLES
	f	Lcom/google/common/collect/ImmutableList;	f	COPPER_SMELTABLES
	f	Lcom/google/common/collect/ImmutableList;	g	GOLD_SMELTABLES
	f	Lcom/google/common/collect/ImmutableList;	h	DIAMOND_SMELTABLES
	f	Lcom/google/common/collect/ImmutableList;	i	LAPIS_SMELTABLES
	f	Lcom/google/common/collect/ImmutableList;	j	REDSTONE_SMELTABLES
	f	Lcom/google/common/collect/ImmutableList;	k	EMERALD_SMELTABLES
c	mm	net/minecraft/data/recipes/packs/package-info
c	mn	net/minecraft/data/registries/RegistriesDatapackGenerator
	m	(Ljj;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
		p	1		output
		p	2		registryLookupFuture
	m	()Ljava/lang/String;	a	getName
	m	(I)[Ljava/util/concurrent/CompletableFuture;	a	lambda$dumpRegistryCap$4
	m	(Ladc;Ljf;Lcom/mojang/serialization/DynamicOps;Lacy$b;Lhf$c;)Ljava/util/concurrent/CompletableFuture;	a	lambda$dumpRegistryCap$5
		p	5		wrapper
	m	(Ljava/nio/file/Path;Ljava/lang/String;)V	a	lambda$dumpValue$6
		p	1		error
	m	(Ljava/nio/file/Path;Ljf;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/Encoder;Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture;	a	dumpValue
		p	0		path
		p	1		cache
		p	2		json
		p	3		encoder
		p	4		value
	m	(Ljf;)Ljava/util/concurrent/CompletableFuture;	a	run
		p	1		writer
	m	(Ljf;Lhf$b;)Ljava/util/concurrent/CompletionStage;	a	lambda$run$2
		p	2		lookup
	m	(Ljf;Lhf$b;Lcom/mojang/serialization/DynamicOps;Lacy$b;)Ljava/util/Optional;	a	dumpRegistryCap
		p	1		writer
		p	2		lookup
		p	3		ops
		p	4		registry
	m	(Ljj$a;Ljf;Lcom/mojang/serialization/DynamicOps;Lacy$b;Lhd$c;)Ljava/util/concurrent/CompletableFuture;	a	lambda$dumpRegistryCap$3
		p	4		entry
	m	(I)[Ljava/util/concurrent/CompletableFuture;	b	lambda$run$1
	m	(Ljf;Lhf$b;Lcom/mojang/serialization/DynamicOps;Lacy$b;)Ljava/util/stream/Stream;	b	lambda$run$0
		p	4		entry
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	Ljj;	e	output
	f	Ljava/util/concurrent/CompletableFuture;	f	registries
c	mo	net/minecraft/data/registries/UpdateOneTwentyRegistries
	m	(Lhf$b;)Lhf$b;	a	lambda$createLookup$0
		p	0		wrapperLookup
	m	(Ljava/util/concurrent/CompletableFuture;)Ljava/util/concurrent/CompletableFuture;	a	createLookup
		p	0		registriesFuture
	f	Lht;	a	BUILDER
c	mp	net/minecraft/data/registries/VanillaRegistries
	m	()Lhf$b;	a	createLookup
	m	(Ldqt;)Z	a	validatePlacedFeature
		p	0		placedFeature
	m	(Lhd$c;Ldqt;)V	a	lambda$validateThatAllBiomeFeaturesHaveBiomeFilter$1
		p	1		value
	m	(Lhe;Ladd;Ladc;)V	a	lambda$validateThatAllBiomeFeaturesHaveBiomeFilter$0
		p	2		key
	m	(Lhe;Ladd;Lhd$c;Lhd;)V	a	lambda$validateThatAllBiomeFeaturesHaveBiomeFilter$2
		p	3		placedFeature
	m	(Lhe;Lhd$c;)V	a	lambda$validateThatAllBiomeFeaturesHaveBiomeFilter$3
		p	1		biome
	m	(Lhe;Lhf;)V	a	validateThatAllBiomeFeaturesHaveBiomeFilter
		p	0		placedFeatureLookup
		p	1		biomeLookup
	m	(Lhf$b;)V	a	validateThatAllBiomeFeaturesHaveBiomeFilter
		p	0		wrapperLookup
	f	Lht;	a	BUILDER
c	mq	net/minecraft/data/registries/package-info
c	mr	net/minecraft/data/structures/NbtToSnbt
	m	(Ljj;Ljava/util/Collection;)V	<init>	<init>
		p	1		output
		p	2		paths
	m	()Ljava/lang/String;	a	getName
	m	(I)[Ljava/util/concurrent/CompletableFuture;	a	lambda$run$6
	m	(Ljava/nio/file/Path;)Z	a	lambda$run$0
		p	0		path
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/lang/String;	a	getName
		p	0		inputPath
		p	1		filePath
	m	(Ljava/nio/file/Path;Ljf;Ljava/nio/file/Path;)Ljava/util/concurrent/CompletableFuture;	a	lambda$run$4
	m	(Ljava/util/concurrent/CompletableFuture;)Ljava/util/concurrent/CompletionStage;	a	lambda$run$5
		p	0		future
	m	(Ljf;)Ljava/util/concurrent/CompletableFuture;	a	run
		p	1		writer
	m	(Ljf;Ljava/nio/file/Path;Ljava/lang/String;)V	a	writeSnbt
		p	0		writer
		p	1		path
		p	2		content
	m	(Ljf;Ljava/nio/file/Path;Ljava/lang/String;Ljava/nio/file/Path;)Ljava/nio/file/Path;	a	convertStructure
		p	0		writer
		p	1		inputPath
		p	2		filename
		p	3		outputPath
	m	(Ljf;Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/util/concurrent/CompletableFuture;	a	lambda$run$2
		p	3		path
	m	(I)[Ljava/util/concurrent/CompletableFuture;	b	lambda$run$3
	m	(Ljf;Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/nio/file/Path;)V	b	lambda$run$1
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	Ljava/lang/Iterable;	e	inputFolders
	f	Ljj;	f	output
c	ms	net/minecraft/data/structures/SnbtToNbt
	m	(Ljj;Ljava/lang/Iterable;)V	<init>	<init>
		p	1		output
		p	2		paths
	m	()Ljava/lang/String;	a	getName
	m	(I)[Ljava/util/concurrent/CompletableFuture;	a	lambda$run$3
	m	(Ljava/lang/String;Lre;)Lre;	a	applyFilters
		p	1		key
		p	2		compound
	m	(Ljava/nio/file/Path;)Z	a	lambda$run$0
		p	0		path
	m	(Ljava/nio/file/Path;Ljava/lang/String;)Lms$c;	a	readStructure
		p	1		path
		p	2		name
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/lang/String;	a	getName
		p	1		root
		p	2		file
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;Ljf;Ljava/nio/file/Path;)V	a	lambda$run$1
	m	(Ljava/nio/file/Path;Ljf;Ljava/nio/file/Path;)Ljava/util/concurrent/CompletableFuture;	a	lambda$run$4
	m	(Ljava/nio/file/Path;Ljf;Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/util/concurrent/CompletableFuture;	a	lambda$run$2
		p	4		path
	m	(Ljava/util/concurrent/CompletableFuture;)Ljava/util/concurrent/CompletionStage;	a	lambda$run$5
		p	0		future
	m	(Ljf;)Ljava/util/concurrent/CompletableFuture;	a	run
		p	1		writer
	m	(Ljf;Lms$c;Ljava/nio/file/Path;)V	a	storeStructureIfChanged
		p	1		cache
		p	2		data
		p	3		root
	m	(Lms$a;)Lms;	a	addFilter
		p	1		tweaker
	f	Ljava/nio/file/Path;	d	DUMP_SNBT_TO
	f	Lorg/slf4j/Logger;	e	LOGGER
	f	Ljj;	f	output
	f	Ljava/lang/Iterable;	g	inputFolders
	f	Ljava/util/List;	h	filters
c	ms$a	net/minecraft/data/structures/SnbtToNbt$Filter
	m	(Ljava/lang/String;Lre;)Lre;	apply	apply
		p	1		name
		p	2		nbt
c	ms$b	net/minecraft/data/structures/SnbtToNbt$StructureConversionException
	m	(Ljava/nio/file/Path;Ljava/lang/Throwable;)V	<init>	<init>
		p	1		path
		p	2		cause
c	ms$c	net/minecraft/data/structures/SnbtToNbt$TaskResult
	m	(Ljava/lang/String;[BLjava/lang/String;Lcom/google/common/hash/HashCode;)V	<init>	<init>
		p	1		name
		p	2		bytes
		p	3		snbtContent
	m	()Ljava/lang/String;	a	name
	m	()[B	b	payload
	m	()Ljava/lang/String;	c	snbtPayload
	m	()Lcom/google/common/hash/HashCode;	d	hash
	f	Ljava/lang/String;	a	name
	f	[B	b	payload
	f	Ljava/lang/String;	c	snbtPayload
	f	Lcom/google/common/hash/HashCode;	d	hash
c	mt	net/minecraft/data/structures/StructureUpdater
	m	(Ljava/lang/String;Lre;)Lre;	a	update
		p	0		name
		p	1		nbt
	m	(Ljava/lang/String;Lre;)Lre;	apply	apply
		p	1		name
		p	2		nbt
	f	Lorg/slf4j/Logger;	a	LOGGER
c	mu	net/minecraft/data/structures/package-info
c	mv	net/minecraft/data/tags/BannerPatternTagsProvider
	m	(Ljj;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
		p	1		dataGenerator
		p	2		registryLookupFuture
	m	(Lhf$b;)V	a	addTags
		p	1		lookup
c	mw	net/minecraft/data/tags/BiomeTagsProvider
	m	(Ljj;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
		p	1		output
		p	2		registryLookupFuture
	m	(Lhf$b;)V	a	addTags
		p	1		lookup
c	mx	net/minecraft/data/tags/CatVariantTagsProvider
	m	(Ljj;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
		p	1		output
		p	2		registryLookupFuture
	m	(Lhf$b;)V	a	addTags
		p	1		lookup
c	my	net/minecraft/data/tags/DamageTypeTagsProvider
	m	(Ljj;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
		p	1		output
		p	2		maxChainedNeighborUpdates
	m	(Lhf$b;)V	a	addTags
		p	1		lookup
c	mz	net/minecraft/data/tags/EntityTypeTagsProvider
	m	(Ljj;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
		p	1		output
		p	2		registryLookupFuture
	m	(Lbfl;)Ladc;	a	lambda$new$0
		p	0		entityType
	m	(Lhf$b;)V	a	addTags
		p	1		lookup
c	na	net/minecraft/data/tags/FlatLevelGeneratorPresetTagsProvider
	m	(Ljj;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
		p	1		output
		p	2		registryLookupFuture
	m	(Lhf$b;)V	a	addTags
		p	1		lookup
c	nb	net/minecraft/data/tags/FluidTagsProvider
	m	(Ljj;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
		p	1		output
		p	2		registryLookupFuture
	m	(Ldwi;)Ladc;	a	lambda$new$0
		p	0		fluid
	m	(Lhf$b;)V	a	addTags
		p	1		lookup
c	nc	net/minecraft/data/tags/GameEventTagsProvider
	m	(Ljj;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
		p	1		output
		p	2		registryLookupFuture
	m	(Ldga;)Ladc;	a	lambda$new$0
		p	0		gameEvent
	m	(Lhf$b;)V	a	addTags
		p	1		lookup
	f	[Ldga;	d	VIBRATIONS_EXCEPT_FLAP
c	nd	net/minecraft/data/tags/InstrumentTagsProvider
	m	(Ljj;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
		p	1		output
		p	2		registryLookupFuture
	m	(Lhf$b;)V	a	addTags
		p	1		lookup
c	ne	net/minecraft/data/tags/IntrinsicHolderTagsProvider
	m	(Ljj;Ladc;Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;Ljava/util/function/Function;)V	<init>	<init>
		p	1		output
		p	2		registryRef
		p	3		registryLookupFuture
		p	4		parentTagLookupFuture
		p	5		valueToKey
	m	(Ljj;Ladc;Ljava/util/concurrent/CompletableFuture;Ljava/util/function/Function;)V	<init>	<init>
		p	1		output
		p	2		registryRef
		p	3		registryLookupFuture
		p	4		valueToKey
	m	(Lanv;)Lne$a;	a	tag
	m	(Lanv;)Lnj$b;	b	tag
		p	1		tag
	f	Ljava/util/function/Function;	d	keyExtractor
c	ne$a	net/minecraft/data/tags/IntrinsicHolderTagsProvider$IntrinsicTagAppender
	m	(Lans;Ljava/util/function/Function;)V	<init>	<init>
		p	1		builder
		p	2		valueToKey
	m	(Lanv;)Lne$a;	a	addTag
	m	(Ljava/lang/Object;)Lne$a;	a	add
		p	1		value
	m	([Ljava/lang/Object;)Lne$a;	a	add
		p	1		values
	m	(Lanv;)Lnj$b;	b	addTag
		p	1		identifiedTag
	f	Ljava/util/function/Function;	a	keyExtractor
c	nf	net/minecraft/data/tags/ItemTagsProvider
	m	(Ljj;Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
		p	1		output
		p	2		registryLookupFuture
		p	3		blockTagLookupFuture
	m	(Ljj;Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
		p	1		output
		p	2		registryLookupFuture
		p	3		parentTagLookupFuture
		p	4		blockTagLookupFuture
	m	(Lanv;Lanv;)V	a	copy
		p	1		blockTag
		p	2		itemTag
	m	(Lcfq;)Ladc;	a	lambda$new$1
		p	0		item
	m	(Lhf$b;Lnj$c;)Lhf$b;	a	lambda$createContentsProvider$4
		p	1		lookup
		p	2		blockTags
	m	(Lnj$c;Lanv;Lanv;)V	a	lambda$createContentsProvider$3
		p	2		blockTag
		p	3		itemTag
	m	()Ljava/util/concurrent/CompletableFuture;	b	createContentsProvider
	m	(Lcfq;)Ladc;	b	lambda$new$0
		p	0		item
	m	(Lanv;)Ljava/lang/IllegalStateException;	d	lambda$createContentsProvider$2
	f	Ljava/util/concurrent/CompletableFuture;	d	blockTags
	f	Ljava/util/Map;	g	tagsToCopy
c	ng	net/minecraft/data/tags/PaintingVariantTagsProvider
	m	(Ljj;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
		p	1		output
		p	2		registryLookupFuture
	m	(Lhf$b;)V	a	addTags
		p	1		lookup
c	nh	net/minecraft/data/tags/PoiTypeTagsProvider
	m	(Ljj;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
		p	1		output
		p	2		registryLookupFuture
	m	(Lhf$b;)V	a	addTags
		p	1		lookup
c	ni	net/minecraft/data/tags/StructureTagsProvider
	m	(Ljj;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
		p	1		output
		p	2		registryLookupFuture
	m	(Lhf$b;)V	a	addTags
		p	1		lookup
c	nj	net/minecraft/data/tags/TagsProvider
	m	(Ljj;Ladc;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
		p	1		output
		p	2		registryRef
		p	3		registryLookupFuture
	m	(Ljj;Ladc;Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
		p	1		output
		p	2		registryRef
		p	3		registryLookupFuture
		p	4		parentTagLookupFuture
	m	()Ljava/lang/String;	a	getName
	m	(I)[Ljava/util/concurrent/CompletableFuture;	a	lambda$run$6
	m	(Ladd;)Lans;	a	lambda$getOrCreateRawBuilder$8
		p	0		id
	m	(Lanv;)Ljava/util/Optional;	a	lambda$contentsGetter$9
		p	1		tag
	m	(Lhf$b;)V	a	addTags
		p	1		lookup
	m	(Lhf$b;Lnj$c;)Lnj$a;	a	lambda$run$1
		p	0		lookup
		p	1		parent
	m	(Lhf$c;Ladd;)Z	a	lambda$run$2
		p	2		id
	m	(Ljava/lang/Void;)Lnj$c;	a	lambda$contentsGetter$10
		p	1		void_
	m	(Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lant;)Z	a	lambda$run$4
		p	2		tagEntry
	m	(Ljava/util/function/Predicate;Ljava/util/function/Predicate;Ljf;Ljava/util/Map$Entry;)Ljava/util/concurrent/CompletableFuture;	a	lambda$run$5
		p	4		entry
	m	(Ljf;)Ljava/util/concurrent/CompletableFuture;	a	run
		p	1		writer
	m	(Ljf;Lnj$a;)Ljava/util/concurrent/CompletionStage;	a	lambda$run$7
		p	2		info
	m	(Lnj$a;Ladd;)Z	a	lambda$run$3
		p	2		id
	m	()Ljava/util/concurrent/CompletableFuture;	b	createContentsProvider
	m	(Lanv;)Lnj$b;	b	tag
		p	1		tag
	m	(Lhf$b;)Lhf$b;	b	lambda$createContentsProvider$11
		p	1		lookup
	m	()Ljava/util/concurrent/CompletableFuture;	c	contentsGetter
	m	(Lanv;)Lans;	c	getOrCreateRawBuilder
		p	1		tag
	m	(Lhf$b;)Lhf$b;	c	lambda$run$0
		p	1		registryLookupFuture
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	Ljj$a;	e	pathProvider
	f	Ladc;	f	registryKey
	f	Ljava/util/concurrent/CompletableFuture;	g	lookupProvider
	f	Ljava/util/concurrent/CompletableFuture;	h	contentsDone
	f	Ljava/util/concurrent/CompletableFuture;	i	parentProvider
	f	Ljava/util/Map;	j	builders
c	nj$a	net/minecraft/data/tags/TagsProvider$1CombinedData
	m	()Lhf$b;	a	contents
	m	()Lnj$c;	b	parent
	f	Lhf$b;	a	contents
	f	Lnj$c;	b	parent
c	nj$b	net/minecraft/data/tags/TagsProvider$TagAppender
	m	(Lans;)V	<init>	<init>
		p	1		builder
	m	(Ladc;)Lnj$b;	a	add
		p	1		key
	m	(Ladd;)Lnj$b;	a	addOptional
		p	1		id
	m	([Ladc;)Lnj$b;	a	add
		p	1		keys
	m	(Ladd;)Lnj$b;	b	addOptionalTag
		p	1		id
	m	(Lanv;)Lnj$b;	b	addTag
		p	1		identifiedTag
	f	Lans;	a	builder
c	nj$c	net/minecraft/data/tags/TagsProvider$TagLookup
	m	(Lanv;)Ljava/util/Optional;	a	lambda$empty$0
		p	0		tag
	m	(Lanv;)Z	contains	contains
		p	1		tag
c	nk	net/minecraft/data/tags/UpdateOneTwentyBiomeTagsProvider
	m	(Ljj;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
		p	1		output
		p	2		registryLookupFuture
	m	(Lhf$b;)V	a	addTags
		p	1		lookup
c	nl	net/minecraft/data/tags/UpdateOneTwentyBlockTagsProvider
	m	(Ljj;Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
		p	1		output
		p	2		registryLookupFuture
		p	3		parentTagLookupFuture
	m	(Lcpi;)Ladc;	a	lambda$new$0
		p	0		block
	m	(Lhf$b;)V	a	addTags
		p	1		lookup
c	nm	net/minecraft/data/tags/UpdateOneTwentyItemTagsProvider
	m	(Ljj;Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
		p	1		output
		p	2		registryLookupFuture
		p	3		parentTagLookupFuture
		p	4		blockTagLookupFuture
	m	(Lhf$b;)V	a	addTags
		p	1		lookup
c	nn	net/minecraft/data/tags/VanillaBlockTagsProvider
	m	(Ljj;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
		p	1		output
		p	2		registryLookupFuture
	m	(Lcpi;)Ladc;	a	lambda$new$0
		p	0		block
	m	(Lhf$b;)V	a	addTags
		p	1		lookup
c	no	net/minecraft/data/tags/VanillaItemTagsProvider
	m	(Ljj;Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
		p	1		output
		p	2		registryLookupFuture
		p	3		blockTagLookupFuture
	m	(Lhf$b;)V	a	addTags
		p	1		lookup
c	np	net/minecraft/data/tags/WorldPresetTagsProvider
	m	(Ljj;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
		p	1		output
		p	2		registryLookupFuture
	m	(Lhf$b;)V	a	addTags
		p	1		lookup
c	nq	net/minecraft/data/tags/package-info
c	nr	net/minecraft/data/worldgen/AncientCityStructurePieces
	m	(Loa;)V	a	bootstrap
		p	0		poolRegisterable
	f	Ladc;	a	START
c	ns	net/minecraft/data/worldgen/AncientCityStructurePools
	m	(Loa;)V	a	bootstrap
		p	0		poolRegisterable
c	nt	net/minecraft/data/worldgen/BastionBridgePools
	m	(Loa;)V	a	bootstrap
		p	0		poolRegisterable
c	nu	net/minecraft/data/worldgen/BastionHoglinStablePools
	m	(Loa;)V	a	bootstrap
		p	0		poolRegisterable
c	nv	net/minecraft/data/worldgen/BastionHousingUnitsPools
	m	(Loa;)V	a	bootstrap
		p	0		poolRegisterable
c	nw	net/minecraft/data/worldgen/BastionPieces
	m	(Loa;)V	a	bootstrap
		p	0		poolRegisterable
	f	Ladc;	a	START
c	nx	net/minecraft/data/worldgen/BastionSharedPools
	m	(Loa;)V	a	bootstrap
		p	0		poolRegisterable
c	ny	net/minecraft/data/worldgen/BastionTreasureRoomPools
	m	(Loa;)V	a	bootstrap
		p	0		poolRegisterable
c	nz	net/minecraft/data/worldgen/BiomeDefaultFeatures
	m	(Lcng$a;)V	A	addLushCavesVegetationFeatures
		p	0		builder
	m	(Lcng$a;)V	B	addLushCavesSpecialOres
		p	0		builder
	m	(Lcng$a;)V	C	addMountainTrees
		p	0		builder
	m	(Lcng$a;)V	D	addMountainForestTrees
		p	0		builder
	m	(Lcng$a;)V	E	addJungleTrees
		p	0		builder
	m	(Lcng$a;)V	F	addSparseJungleTrees
		p	0		builder
	m	(Lcng$a;)V	G	addBadlandsTrees
		p	0		builder
	m	(Lcng$a;)V	H	addSnowyTrees
		p	0		builder
	m	(Lcng$a;)V	I	addJungleGrass
		p	0		builder
	m	(Lcng$a;)V	J	addSavannaGrass
		p	0		builder
	m	(Lcng$a;)V	K	addShatteredSavannaGrass
		p	0		builder
	m	(Lcng$a;)V	L	addSavannaExtraGrass
		p	0		builder
	m	(Lcng$a;)V	M	addBadlandGrass
		p	0		builder
	m	(Lcng$a;)V	N	addForestFlowers
		p	0		builder
	m	(Lcng$a;)V	O	addForestGrass
		p	0		builder
	m	(Lcng$a;)V	P	addSwampVegetation
		p	0		builder
	m	(Lcng$a;)V	Q	addMangroveSwampVegetation
		p	0		builder
	m	(Lcng$a;)V	R	addMushroomFieldVegetation
		p	0		builder
	m	(Lcng$a;)V	S	addPlainVegetation
		p	0		builder
	m	(Lcng$a;)V	T	addDesertVegetation
		p	0		builder
	m	(Lcng$a;)V	U	addGiantTaigaVegetation
		p	0		builder
	m	(Lcng$a;)V	V	addDefaultFlowers
		p	0		builder
	m	(Lcng$a;)V	W	addCherryGroveVegetation
		p	0		builder
	m	(Lcng$a;)V	X	addMeadowVegetation
		p	0		builder
	m	(Lcng$a;)V	Y	addWarmFlowers
		p	0		builder
	m	(Lcng$a;)V	Z	addDefaultGrass
		p	0		builder
	m	(Lcng$a;)V	a	addDefaultCarversAndLakes
		p	0		builder
	m	(Lcng$a;Z)V	a	addDefaultOres
		p	0		builder
		p	1		largeCopperOreBlob
	m	(Lcnr$a;)V	a	farmAnimals
		p	0		builder
	m	(Lcnr$a;II)V	a	warmOceanSpawns
		p	0		builder
		p	1		squidWeight
		p	2		squidMinGroupSize
	m	(Lcnr$a;III)V	a	oceanSpawns
		p	0		builder
		p	1		squidWeight
		p	2		squidMaxGroupSize
		p	3		codWeight
	m	(Lcnr$a;IIIZ)V	a	monsters
		p	0		builder
		p	1		zombieWeight
		p	2		zombieVillagerWeight
		p	3		skeletonWeight
		p	4		drowned
	m	(Lcng$a;)V	aa	addTaigaGrass
		p	0		builder
	m	(Lcng$a;)V	ab	addPlainGrass
		p	0		builder
	m	(Lcng$a;)V	ac	addDefaultMushrooms
		p	0		builder
	m	(Lcng$a;)V	ad	addDefaultExtraVegetation
		p	0		builder
	m	(Lcng$a;)V	ae	addBadlandExtraVegetation
		p	0		builder
	m	(Lcng$a;)V	af	addJungleMelons
		p	0		builder
	m	(Lcng$a;)V	ag	addSparseJungleMelons
		p	0		builder
	m	(Lcng$a;)V	ah	addJungleVines
		p	0		builder
	m	(Lcng$a;)V	ai	addDesertExtraVegetation
		p	0		builder
	m	(Lcng$a;)V	aj	addSwampExtraVegetation
		p	0		builder
	m	(Lcng$a;)V	ak	addDesertExtraDecoration
		p	0		builder
	m	(Lcng$a;)V	al	addFossilDecoration
		p	0		builder
	m	(Lcng$a;)V	am	addColdOceanExtraVegetation
		p	0		builder
	m	(Lcng$a;)V	an	addDefaultSeagrass
		p	0		builder
	m	(Lcng$a;)V	ao	addLukeWarmKelp
		p	0		builder
	m	(Lcng$a;)V	ap	addDefaultSprings
		p	0		builder
	m	(Lcng$a;)V	aq	addFrozenSprings
		p	0		builder
	m	(Lcng$a;)V	ar	addIcebergs
		p	0		builder
	m	(Lcng$a;)V	as	addBlueIce
		p	0		builder
	m	(Lcng$a;)V	at	addSurfaceFreezing
		p	0		builder
	m	(Lcng$a;)V	au	addNetherDefaultOres
		p	0		builder
	m	(Lcng$a;)V	av	addAncientDebris
		p	0		builder
	m	(Lcng$a;)V	aw	addDefaultCrystalFormations
		p	0		builder
	m	(Lcng$a;)V	b	addDefaultMonsterRoom
		p	0		builder
	m	(Lcnr$a;)V	b	caveSpawns
		p	0		builder
	m	(Lcng$a;)V	c	addDefaultUndergroundVariety
		p	0		builder
	m	(Lcnr$a;)V	c	commonSpawns
		p	0		builder
	m	(Lcng$a;)V	d	addDripstone
		p	0		builder
	m	(Lcnr$a;)V	d	plainsSpawns
		p	0		builder
	m	(Lcng$a;)V	e	addSculk
		p	0		builder
	m	(Lcnr$a;)V	e	snowySpawns
		p	0		builder
	m	(Lcng$a;)V	f	addDefaultOres
		p	0		builder
	m	(Lcnr$a;)V	f	desertSpawns
		p	0		builder
	m	(Lcng$a;)V	g	addExtraGold
		p	0		builder
	m	(Lcnr$a;)V	g	dripstoneCavesSpawns
		p	0		builder
	m	(Lcng$a;)V	h	addExtraEmeralds
		p	0		builder
	m	(Lcnr$a;)V	h	mooshroomSpawns
		p	0		builder
	m	(Lcng$a;)V	i	addInfestedStone
		p	0		builder
	m	(Lcnr$a;)V	i	baseJungleSpawns
		p	0		builder
	m	(Lcng$a;)V	j	addDefaultSoftDisks
		p	0		builder
	m	(Lcnr$a;)V	j	endSpawns
		p	0		builder
	m	(Lcng$a;)V	k	addSwampClayDisk
		p	0		builder
	m	(Lcng$a;)V	l	addMangroveSwampDisks
		p	0		builder
	m	(Lcng$a;)V	m	addMossyStoneBlock
		p	0		builder
	m	(Lcng$a;)V	n	addFerns
		p	0		builder
	m	(Lcng$a;)V	o	addRareBerryBushes
		p	0		builder
	m	(Lcng$a;)V	p	addCommonBerryBushes
		p	0		builder
	m	(Lcng$a;)V	q	addLightBambooVegetation
		p	0		builder
	m	(Lcng$a;)V	r	addBambooVegetation
		p	0		builder
	m	(Lcng$a;)V	s	addTaigaTrees
		p	0		builder
	m	(Lcng$a;)V	t	addGroveTrees
		p	0		builder
	m	(Lcng$a;)V	u	addWaterTrees
		p	0		builder
	m	(Lcng$a;)V	v	addBirchTrees
		p	0		builder
	m	(Lcng$a;)V	w	addOtherBirchTrees
		p	0		builder
	m	(Lcng$a;)V	x	addTallBirchTrees
		p	0		builder
	m	(Lcng$a;)V	y	addSavannaTrees
		p	0		builder
	m	(Lcng$a;)V	z	addShatteredSavannaTrees
		p	0		builder
c	oa	net/minecraft/data/worldgen/BootstapContext
	m	(Ladc;)Lhe;	a	lookup
		p	1		registryRef
	m	(Ladc;Ljava/lang/Object;)Lhd$c;	a	register
		p	1		key
		p	2		value
	m	(Ladc;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Lhd$c;	a	register
		p	1		key
		p	2		value
		p	3		lifecycle
c	ob	net/minecraft/data/worldgen/Carvers
	m	(Ljava/lang/String;)Ladc;	a	createKey
		p	0		id
	m	(Loa;)V	a	bootstrap
		p	0		carverRegisterable
	f	Ladc;	a	CAVE
	f	Ladc;	b	CAVE_EXTRA_UNDERGROUND
	f	Ladc;	c	CANYON
	f	Ladc;	d	NETHER_CAVE
c	oc	net/minecraft/data/worldgen/DesertVillagePools
	m	(Loa;)V	a	bootstrap
		p	0		poolRegisterable
	f	Ladc;	a	START
	f	Ladc;	b	TERMINATORS_KEY
	f	Ladc;	c	ZOMBIE_TERMINATORS_KEY
c	od	net/minecraft/data/worldgen/DimensionTypes
	m	(Loa;)V	a	bootstrap
		p	0		dimensionTypeRegisterable
c	oe	net/minecraft/data/worldgen/NoiseData
	m	(Loa;)V	a	bootstrap
		p	0		noiseParametersRegisterable
	m	(Loa;ILadc;Ladc;Ladc;Ladc;)V	a	registerBiomeNoises
		p	0		noiseParametersRegisterable
		p	1		octaveOffset
		p	2		temperatureKey
		p	3		vegetationKey
		p	4		continentalnessKey
		p	5		erosionKey
	m	(Loa;Ladc;ID[D)V	a	register
		p	0		noiseParametersRegisterable
		p	1		key
		p	2		firstOctave
		p	3		firstAmplitude
		p	5		amplitudes
	f	Ldvo$a;	a	DEFAULT_SHIFT
c	of	net/minecraft/data/worldgen/PillagerOutpostPools
	m	(Loa;)V	a	bootstrap
		p	0		poolRegisterable
	f	Ladc;	a	START
c	og	net/minecraft/data/worldgen/PlainVillagePools
	m	(Loa;)V	a	bootstrap
		p	0		poolRegisterable
	f	Ladc;	a	START
	f	Ladc;	b	TERMINATORS_KEY
c	oh	net/minecraft/data/worldgen/Pools
	m	(Ljava/lang/String;)Ladc;	a	createKey
		p	0		id
	m	(Loa;)V	a	bootstrap
		p	0		structurePoolsRegisterable
	m	(Loa;Ljava/lang/String;Ldsy;)V	a	register
		p	0		structurePoolsRegisterable
		p	1		id
		p	2		pool
	f	Ladc;	a	EMPTY
c	oi	net/minecraft/data/worldgen/ProcessorLists
	m	(Ljava/lang/String;)Ladc;	a	createKey
		p	0		id
	m	(Loa;)V	a	bootstrap
		p	0		processorListRegisterable
	m	(Loa;Ladc;Ljava/util/List;)V	a	register
		p	0		processorListRegisterable
		p	1		key
		p	2		processors
	f	Ladc;	A	ROOF
	f	Ladc;	B	HIGH_WALL
	f	Ladc;	C	HIGH_RAMPART
	f	Ladc;	D	FOSSIL_ROT
	f	Ladc;	E	FOSSIL_COAL
	f	Ladc;	F	FOSSIL_DIAMONDS
	f	Ladc;	G	ANCIENT_CITY_START_DEGRADATION
	f	Ladc;	H	ANCIENT_CITY_GENERIC_DEGRADATION
	f	Ladc;	I	ANCIENT_CITY_WALLS_DEGRADATION
	f	Ladc;	J	EMPTY
	f	Ladc;	a	ZOMBIE_PLAINS
	f	Ladc;	b	ZOMBIE_SAVANNA
	f	Ladc;	c	ZOMBIE_SNOWY
	f	Ladc;	d	ZOMBIE_TAIGA
	f	Ladc;	e	ZOMBIE_DESERT
	f	Ladc;	f	MOSSIFY_10_PERCENT
	f	Ladc;	g	MOSSIFY_20_PERCENT
	f	Ladc;	h	MOSSIFY_70_PERCENT
	f	Ladc;	i	STREET_PLAINS
	f	Ladc;	j	STREET_SAVANNA
	f	Ladc;	k	STREET_SNOWY_OR_TAIGA
	f	Ladc;	l	FARM_PLAINS
	f	Ladc;	m	FARM_SAVANNA
	f	Ladc;	n	FARM_SNOWY
	f	Ladc;	o	FARM_TAIGA
	f	Ladc;	p	FARM_DESERT
	f	Ladc;	q	OUTPOST_ROT
	f	Ladc;	r	BOTTOM_RAMPART
	f	Ladc;	s	TREASURE_ROOMS
	f	Ladc;	t	HOUSING
	f	Ladc;	u	SIDE_WALL_DEGRADATION
	f	Ladc;	v	STABLE_DEGRADATION
	f	Ladc;	w	BASTION_GENERIC_DEGRADATION
	f	Ladc;	x	RAMPART_DEGRADATION
	f	Ladc;	y	ENTRANCE_REPLACEMENT
	f	Ladc;	z	BRIDGE
c	oj	net/minecraft/data/worldgen/SavannaVillagePools
	m	(Loa;)V	a	bootstrap
		p	0		poolRegisterable
	f	Ladc;	a	START
	f	Ladc;	b	TERMINATORS_KEY
	f	Ladc;	c	ZOMBIE_TERMINATORS_KEY
c	ok	net/minecraft/data/worldgen/SnowyVillagePools
	m	(Loa;)V	a	bootstrap
		p	0		poolRegisterable
	f	Ladc;	a	START
	f	Ladc;	b	TERMINATORS_KEY
c	ol	net/minecraft/data/worldgen/StructureSets
	m	(Loa;)V	a	bootstrap
		p	0		structureSetRegisterable
c	om	net/minecraft/data/worldgen/Structures
	m	(Lbga;)Ldrw;	a	lambda$bootstrap$1
	m	(Lhh;Ldgv$b;Ldsa;)Ldrp$c;	a	structure
		p	0		biomes
		p	1		featureStep
		p	2		terrainAdaptation
	m	(Lhh;Ldsa;)Ldrp$c;	a	structure
		p	0		biomes
		p	1		terrainAdaptation
	m	(Lhh;Ljava/util/Map;Ldgv$b;Ldsa;)Ldrp$c;	a	structure
		p	0		biomes
		p	1		spawns
		p	2		featureStep
		p	3		terrainAdaptation
	m	(Loa;)V	a	bootstrap
		p	0		structureRegisterable
	m	(Lbga;)Lbga;	b	lambda$bootstrap$0
c	on	net/minecraft/data/worldgen/SurfaceRuleData
	m	()Ldhq$o;	a	overworld
	m	(D)Ldhq$f;	a	surfaceNoiseAbove
		p	0		min
	m	(I)[Ldhq$o;	a	lambda$overworldLike$0
	m	(Lcpi;)Ldhq$o;	a	makeStateRule
		p	0		block
	m	(ZZZ)Ldhq$o;	a	overworldLike
		p	0		surface
		p	1		bedrockRoof
		p	2		bedrockFloor
	m	()Ldhq$o;	b	nether
	m	()Ldhq$o;	c	end
	m	()Ldhq$o;	d	air
	f	Ldhq$o;	A	SOUL_SAND
	f	Ldhq$o;	B	SOUL_SOIL
	f	Ldhq$o;	C	BASALT
	f	Ldhq$o;	D	BLACKSTONE
	f	Ldhq$o;	E	WARPED_WART_BLOCK
	f	Ldhq$o;	F	WARPED_NYLIUM
	f	Ldhq$o;	G	NETHER_WART_BLOCK
	f	Ldhq$o;	H	CRIMSON_NYLIUM
	f	Ldhq$o;	I	ENDSTONE
	f	Ldhq$o;	a	AIR
	f	Ldhq$o;	b	BEDROCK
	f	Ldhq$o;	c	WHITE_TERRACOTTA
	f	Ldhq$o;	d	ORANGE_TERRACOTTA
	f	Ldhq$o;	e	TERRACOTTA
	f	Ldhq$o;	f	RED_SAND
	f	Ldhq$o;	g	RED_SANDSTONE
	f	Ldhq$o;	h	STONE
	f	Ldhq$o;	i	DEEPSLATE
	f	Ldhq$o;	j	DIRT
	f	Ldhq$o;	k	PODZOL
	f	Ldhq$o;	l	COARSE_DIRT
	f	Ldhq$o;	m	MYCELIUM
	f	Ldhq$o;	n	GRASS_BLOCK
	f	Ldhq$o;	o	CALCITE
	f	Ldhq$o;	p	GRAVEL
	f	Ldhq$o;	q	SAND
	f	Ldhq$o;	r	SANDSTONE
	f	Ldhq$o;	s	PACKED_ICE
	f	Ldhq$o;	t	SNOW_BLOCK
	f	Ldhq$o;	u	MUD
	f	Ldhq$o;	v	POWDER_SNOW
	f	Ldhq$o;	w	ICE
	f	Ldhq$o;	x	WATER
	f	Ldhq$o;	y	LAVA
	f	Ldhq$o;	z	NETHERRACK
c	oo	net/minecraft/data/worldgen/TaigaVillagePools
	m	(Loa;)V	a	bootstrap
		p	0		poolRegisterable
	f	Ladc;	a	START
	f	Ladc;	b	TERMINATORS_KEY
c	op	net/minecraft/data/worldgen/TerrainProvider
	m	(F)F	a	calculateMountainRidgeZeroContinentalnessPoint
	m	(FFF)F	a	mountainContinentalness
	m	(FFFF)F	a	calculateSlope
	m	(Laqg;FFFFFFLaqg;)Laon;	a	ridgeSpline
		p	0		ridgesFolded
		p	1		continentalness
		p	7		amplifier
	m	(Laqg;FLaqg;)Laon;	a	buildWeirdnessJaggednessSpline
		p	0		ridges
		p	2		amplifier
	m	(Laqg;FZLaqg;)Laon;	a	buildMountainRidgeSplineWithPoints
		p	0		ridgesFolded
		p	3		amplifier
	m	(Laqg;Laqg;FFFFFFZZLaqg;)Laon;	a	buildErosionOffsetSpline
		p	0		erosion
		p	1		ridgesFolded
		p	2		continentalness
		p	10		amplifier
	m	(Laqg;Laqg;FFLaqg;)Laon;	a	buildRidgeJaggednessSpline
		p	0		ridges
		p	1		ridgesFolded
		p	4		amplifier
	m	(Laqg;Laqg;Laqg;FFFFLaqg;)Laon;	a	buildErosionJaggednessSpline
		p	0		erosion
		p	1		ridges
		p	2		ridgesFolded
		p	7		amplifier
	m	(Laqg;Laqg;Laqg;FZLaqg;)Laon;	a	getErosionFactor
		p	0		erosion
		p	1		ridges
		p	2		ridgesFolded
		p	5		amplifier
	m	(Laqg;Laqg;Laqg;Laqg;Z)Laon;	a	overworldFactor
		p	0		continents
		p	1		erosion
		p	2		ridges
		p	3		ridgesFolded
		p	4		amplified
	m	(Laqg;Laqg;Laqg;Z)Laon;	a	overworldOffset
		p	0		continents
		p	1		erosion
		p	2		ridgesFolded
		p	3		amplified
	m	(F)F	b	lambda$static$2
		p	0		value
	m	(Laqg;Laqg;Laqg;Laqg;Z)Laon;	b	overworldJaggedness
		p	0		continents
		p	1		erosion
		p	2		ridges
		p	3		ridgesFolded
		p	4		amplified
	m	(F)F	c	lambda$static$1
		p	0		value
	m	(F)F	d	lambda$static$0
		p	0		value
	f	F	a	DEEP_OCEAN_CONTINENTALNESS
	f	F	b	OCEAN_CONTINENTALNESS
	f	F	c	PLAINS_CONTINENTALNESS
	f	F	d	BEACH_CONTINENTALNESS
	f	Laqg;	e	NO_TRANSFORM
	f	Laqg;	f	AMPLIFIED_OFFSET
	f	Laqg;	g	AMPLIFIED_FACTOR
	f	Laqg;	h	AMPLIFIED_JAGGEDNESS
c	oq	net/minecraft/data/worldgen/VillagePools
	m	(Loa;)V	a	bootstrap
		p	0		poolRegisterable
c	or	net/minecraft/data/worldgen/biome/BiomeData
	m	(Loa;)V	a	bootstrap
		p	0		biomeRegisterable
	m	(Loa;)V	b	nextUpdate
		p	0		biomeRegisterable
c	os	net/minecraft/data/worldgen/biome/EndBiomes
	m	(Lcng$a;)Lcnf;	a	baseEndBiome
		p	0		builder
	m	(Lhe;Lhe;)Lcnf;	a	endBarrens
		p	0		featureLookup
		p	1		carverLookup
	m	(Lhe;Lhe;)Lcnf;	b	theEnd
		p	0		featureLookup
		p	1		carverLookup
	m	(Lhe;Lhe;)Lcnf;	c	endMidlands
		p	0		featureLookup
		p	1		carverLookup
	m	(Lhe;Lhe;)Lcnf;	d	endHighlands
		p	0		featureLookup
		p	1		carverLookup
	m	(Lhe;Lhe;)Lcnf;	e	smallEndIslands
		p	0		featureLookup
		p	1		carverLookup
c	ot	net/minecraft/data/worldgen/biome/NetherBiomes
	m	(Lhe;Lhe;)Lcnf;	a	netherWastes
		p	0		featureLookup
		p	1		carverLookup
	m	(Lhe;Lhe;)Lcnf;	b	soulSandValley
		p	0		featureLookup
		p	1		carverLookup
	m	(Lhe;Lhe;)Lcnf;	c	basaltDeltas
		p	0		featureLookup
		p	1		carverLookup
	m	(Lhe;Lhe;)Lcnf;	d	crimsonForest
		p	0		featureLookup
		p	1		carverLookup
	m	(Lhe;Lhe;)Lcnf;	e	warpedForest
		p	0		featureLookup
		p	1		carverLookup
c	ou	net/minecraft/data/worldgen/biome/OverworldBiomes
	m	(F)I	a	calculateSkyColor
		p	0		temperature
	m	(Lcng$a;)V	a	globalOverworldGeneration
		p	0		generationSettings
	m	(Lcnr$a;IILcng$a;)Lcnf;	a	baseOcean
		p	0		spawnSettings
		p	1		waterColor
		p	2		waterFogColor
		p	3		generationSettings
	m	(Lhe;Lhe;)Lcnf;	a	sparseJungle
		p	0		featureLookup
		p	1		carverLookup
	m	(Lhe;Lhe;FZZZLcnr$a;)Lcnf;	a	baseJungle
		p	0		featureLookup
		p	1		carverLookup
		p	2		depth
		p	3		bamboo
		p	4		sparse
		p	5		unmodified
		p	6		spawnSettings
	m	(Lhe;Lhe;Z)Lcnf;	a	oldGrowthTaiga
		p	0		featureLookup
		p	1		carverLookup
		p	2		spruce
	m	(Lhe;Lhe;ZZ)Lcnf;	a	savanna
		p	0		featureLookup
		p	1		carverLookup
		p	2		windswept
		p	3		plateau
	m	(Lhe;Lhe;ZZZ)Lcnf;	a	plains
		p	0		featureLookup
		p	1		carverLookup
		p	2		sunflower
		p	3		snowy
		p	4		iceSpikes
	m	(ZFFIILjava/lang/Integer;Ljava/lang/Integer;Lcnr$a;Lcng$a;Lamo;)Lcnf;	a	biome
		p	0		precipitation
		p	1		temperature
		p	2		downfall
		p	3		waterColor
		p	4		waterFogColor
		p	5		grassColor
		p	6		foliageColor
		p	7		spawnSettings
		p	8		generationSettings
		p	9		music
	m	(ZFFLcnr$a;Lcng$a;Lamo;)Lcnf;	a	biome
		p	0		precipitation
		p	1		temperature
		p	2		downfall
		p	3		spawnSettings
		p	4		generationSettings
		p	5		music
	m	(Lhe;Lhe;)Lcnf;	b	jungle
		p	0		featureLookup
		p	1		carverLookup
	m	(Lhe;Lhe;Z)Lcnf;	b	windsweptHills
		p	0		featureLookup
		p	1		carverLookup
		p	2		forest
	m	(Lhe;Lhe;ZZ)Lcnf;	b	beach
		p	0		featureLookup
		p	1		carverLookup
		p	2		snowy
		p	3		stony
	m	(Lhe;Lhe;ZZZ)Lcnf;	b	forest
		p	0		featureLookup
		p	1		carverLookup
		p	2		birch
		p	3		oldGrowth
		p	4		flower
	m	(Lhe;Lhe;)Lcnf;	c	bambooJungle
		p	0		featureLookup
		p	1		carverLookup
	m	(Lhe;Lhe;Z)Lcnf;	c	badlands
		p	0		featureLookup
		p	1		carverLookup
		p	2		plateau
	m	(Lhe;Lhe;)Lcnf;	d	desert
		p	0		featureLookup
		p	1		carverLookup
	m	(Lhe;Lhe;Z)Lcnf;	d	coldOcean
		p	0		featureLookup
		p	1		carverLookup
		p	2		deep
	m	(Lhe;Lhe;)Lcnf;	e	mushroomFields
		p	0		featureLookup
		p	1		carverLookup
	m	(Lhe;Lhe;Z)Lcnf;	e	ocean
		p	0		featureLookup
		p	1		carverLookup
		p	2		deep
	m	(Lhe;Lhe;)Lcnf;	f	warmOcean
		p	0		featureLookup
		p	1		carverLookup
	m	(Lhe;Lhe;Z)Lcnf;	f	lukeWarmOcean
		p	0		featureLookup
		p	1		carverLookup
		p	2		deep
	m	(Lhe;Lhe;)Lcnf;	g	darkForest
		p	0		featureLookup
		p	1		carverLookup
	m	(Lhe;Lhe;Z)Lcnf;	g	frozenOcean
		p	0		featureLookup
		p	1		carverLookup
		p	2		deep
	m	(Lhe;Lhe;)Lcnf;	h	swamp
		p	0		featureLookup
		p	1		carverLookup
	m	(Lhe;Lhe;Z)Lcnf;	h	taiga
		p	0		featureLookup
		p	1		carverLookup
		p	2		snowy
	m	(Lhe;Lhe;)Lcnf;	i	mangroveSwamp
		p	0		featureLookup
		p	1		carverLookup
	m	(Lhe;Lhe;Z)Lcnf;	i	river
		p	0		featureLookup
		p	1		carverLookup
		p	2		frozen
	m	(Lhe;Lhe;)Lcnf;	j	theVoid
		p	0		featureLookup
		p	1		carverLookup
	m	(Lhe;Lhe;Z)Lcnf;	j	meadowOrCherryGrove
		p	0		featureLookup
		p	1		carverLookup
		p	2		cherryGrove
	m	(Lhe;Lhe;)Lcnf;	k	frozenPeaks
		p	0		featureLookup
		p	1		carverLookup
	m	(Lhe;Lhe;)Lcnf;	l	jaggedPeaks
		p	0		featureLookup
		p	1		carverLookup
	m	(Lhe;Lhe;)Lcnf;	m	stonyPeaks
		p	0		featureLookup
		p	1		carverLookup
	m	(Lhe;Lhe;)Lcnf;	n	snowySlopes
		p	0		featureLookup
		p	1		carverLookup
	m	(Lhe;Lhe;)Lcnf;	o	grove
		p	0		featureLookup
		p	1		carverLookup
	m	(Lhe;Lhe;)Lcnf;	p	lushCaves
		p	0		featureLookup
		p	1		carverLookup
	m	(Lhe;Lhe;)Lcnf;	q	dripstoneCaves
		p	0		featureLookup
		p	1		carverLookup
	m	(Lhe;Lhe;)Lcnf;	r	deepDark
		p	0		featureLookup
		p	1		carverLookup
	m	(Lhe;Lhe;)Lcng$a;	s	baseOceanGeneration
		p	0		featureLookup
		p	1		carverLookup
	f	I	a	NORMAL_WATER_COLOR
	f	I	b	NORMAL_WATER_FOG_COLOR
	f	I	c	OVERWORLD_FOG_COLOR
	f	Lamo;	d	NORMAL_MUSIC
c	ov	net/minecraft/data/worldgen/biome/package-info
c	ow	net/minecraft/data/worldgen/features/AquaticFeatures
	m	(Loa;)V	a	bootstrap
		p	0		featureRegisterable
	f	Ladc;	a	SEAGRASS_SHORT
	f	Ladc;	b	SEAGRASS_SLIGHTLY_LESS_SHORT
	f	Ladc;	c	SEAGRASS_MID
	f	Ladc;	d	SEAGRASS_TALL
	f	Ladc;	e	SEA_PICKLE
	f	Ladc;	f	SEAGRASS_SIMPLE
	f	Ladc;	g	KELP
	f	Ladc;	h	WARM_OCEAN_VEGETATION
c	ox	net/minecraft/data/worldgen/features/CaveFeatures
	m	()Lhd;	a	makeSmallDripleaf
	m	(Lgz;)Lhd;	a	makeDripleaf
		p	0		direction
	m	(Loa;)V	a	bootstrap
		p	0		featureRegisterable
	f	Ladc;	a	MONSTER_ROOM
	f	Ladc;	b	FOSSIL_COAL
	f	Ladc;	c	FOSSIL_DIAMONDS
	f	Ladc;	d	DRIPSTONE_CLUSTER
	f	Ladc;	e	LARGE_DRIPSTONE
	f	Ladc;	f	POINTED_DRIPSTONE
	f	Ladc;	g	UNDERWATER_MAGMA
	f	Ladc;	h	GLOW_LICHEN
	f	Ladc;	i	ROOTED_AZALEA_TREE
	f	Ladc;	j	CAVE_VINE
	f	Ladc;	k	CAVE_VINE_IN_MOSS
	f	Ladc;	l	MOSS_VEGETATION
	f	Ladc;	m	MOSS_PATCH
	f	Ladc;	n	MOSS_PATCH_BONEMEAL
	f	Ladc;	o	DRIPLEAF
	f	Ladc;	p	CLAY_WITH_DRIPLEAVES
	f	Ladc;	q	CLAY_POOL_WITH_DRIPLEAVES
	f	Ladc;	r	LUSH_CAVES_CLAY
	f	Ladc;	s	MOSS_PATCH_CEILING
	f	Ladc;	t	SPORE_BLOSSOM
	f	Ladc;	u	AMETHYST_GEODE
	f	Ladc;	v	SCULK_PATCH_DEEP_DARK
	f	Ladc;	w	SCULK_PATCH_ANCIENT_CITY
	f	Ladc;	x	SCULK_VEIN
c	oy	net/minecraft/data/worldgen/features/EndFeatures
	m	(Loa;)V	a	bootstrap
		p	0		featureRegisterable
	f	Ladc;	a	END_SPIKE
	f	Ladc;	b	END_GATEWAY_RETURN
	f	Ladc;	c	END_GATEWAY_DELAYED
	f	Ladc;	d	CHORUS_PLANT
	f	Ladc;	e	END_ISLAND
c	oz	net/minecraft/data/worldgen/features/FeatureUtils
	m	(ILhd;)Ldmu;	a	simpleRandomPatchConfiguration
		p	0		tries
		p	1		feature
	m	(Ldkd;Ldmh;)Ldmu;	a	simplePatchConfiguration
		p	0		feature
		p	1		config
	m	(Ldkd;Ldmh;Ljava/util/List;)Ldmu;	a	simplePatchConfiguration
		p	0		feature
		p	1		config
		p	2		predicateBlocks
	m	(Ldkd;Ldmh;Ljava/util/List;I)Ldmu;	a	simplePatchConfiguration
		p	0		feature
		p	1		config
		p	2		predicateBlocks
		p	3		tries
	m	(Ljava/lang/String;)Ladc;	a	createKey
		p	0		id
	m	(Ljava/util/List;)Ldig;	a	simplePatchPredicate
		p	0		validGround
	m	(Loa;)V	a	bootstrap
		p	0		featureRegisterable
	m	(Loa;Ladc;Ldkd;)V	a	register
		p	0		registerable
		p	1		key
		p	2		feature
	m	(Loa;Ladc;Ldkd;Ldmh;)V	a	register
		p	0		registerable
		p	1		key
		p	2		feature
		p	3		config
c	pa	net/minecraft/data/worldgen/features/MiscOverworldFeatures
	m	(Loa;)V	a	bootstrap
		p	0		featureRegisterable
	f	Ladc;	a	ICE_SPIKE
	f	Ladc;	b	ICE_PATCH
	f	Ladc;	c	FOREST_ROCK
	f	Ladc;	d	ICEBERG_PACKED
	f	Ladc;	e	ICEBERG_BLUE
	f	Ladc;	f	BLUE_ICE
	f	Ladc;	g	LAKE_LAVA
	f	Ladc;	h	DISK_CLAY
	f	Ladc;	i	DISK_GRAVEL
	f	Ladc;	j	DISK_SAND
	f	Ladc;	k	FREEZE_TOP_LAYER
	f	Ladc;	l	DISK_GRASS
	f	Ladc;	m	BONUS_CHEST
	f	Ladc;	n	VOID_START_PLATFORM
	f	Ladc;	o	DESERT_WELL
	f	Ladc;	p	SPRING_LAVA_OVERWORLD
	f	Ladc;	q	SPRING_LAVA_FROZEN
	f	Ladc;	r	SPRING_WATER
c	pb	net/minecraft/data/worldgen/features/NetherFeatures
	m	(Loa;)V	a	bootstrap
		p	0		featureRegisterable
	f	Ladc;	a	DELTA
	f	Ladc;	b	SMALL_BASALT_COLUMNS
	f	Ladc;	c	LARGE_BASALT_COLUMNS
	f	Ladc;	d	BASALT_BLOBS
	f	Ladc;	e	BLACKSTONE_BLOBS
	f	Ladc;	f	GLOWSTONE_EXTRA
	f	Ladc;	g	CRIMSON_FOREST_VEGETATION
	f	Ladc;	h	CRIMSON_FOREST_VEGETATION_BONEMEAL
	f	Ladc;	i	WARPED_FOREST_VEGETION
	f	Ladc;	j	WARPED_FOREST_VEGETATION_BONEMEAL
	f	Ladc;	k	NETHER_SPROUTS
	f	Ladc;	l	NETHER_SPROUTS_BONEMEAL
	f	Ladc;	m	TWISTING_VINES
	f	Ladc;	n	TWISTING_VINES_BONEMEAL
	f	Ladc;	o	WEEPING_VINES
	f	Ladc;	p	PATCH_CRIMSON_ROOTS
	f	Ladc;	q	BASALT_PILLAR
	f	Ladc;	r	SPRING_LAVA_NETHER
	f	Ladc;	s	SPRING_NETHER_CLOSED
	f	Ladc;	t	SPRING_NETHER_OPEN
	f	Ladc;	u	PATCH_FIRE
	f	Ladc;	v	PATCH_SOUL_FIRE
c	pc	net/minecraft/data/worldgen/features/OreFeatures
	m	(Loa;)V	a	bootstrap
		p	0		featureRegisterable
	f	Ladc;	A	ORE_ANCIENT_DEBRIS_LARGE
	f	Ladc;	B	ORE_ANCIENT_DEBRIS_SMALL
	f	Ladc;	C	ORE_COPPPER_SMALL
	f	Ladc;	D	ORE_COPPER_LARGE
	f	Ladc;	E	ORE_CLAY
	f	Ladc;	a	ORE_MAGMA
	f	Ladc;	b	ORE_SOUL_SAND
	f	Ladc;	c	ORE_NETHER_GOLD
	f	Ladc;	d	ORE_QUARTZ
	f	Ladc;	e	ORE_GRAVEL_NETHER
	f	Ladc;	f	ORE_BLACKSTONE
	f	Ladc;	g	ORE_DIRT
	f	Ladc;	h	ORE_GRAVEL
	f	Ladc;	i	ORE_GRANITE
	f	Ladc;	j	ORE_DIORITE
	f	Ladc;	k	ORE_ANDESITE
	f	Ladc;	l	ORE_TUFF
	f	Ladc;	m	ORE_COAL
	f	Ladc;	n	ORE_COAL_BURIED
	f	Ladc;	o	ORE_IRON
	f	Ladc;	p	ORE_IRON_SMALL
	f	Ladc;	q	ORE_GOLD
	f	Ladc;	r	ORE_GOLD_BURIED
	f	Ladc;	s	ORE_REDSTONE
	f	Ladc;	t	ORE_DIAMOND_SMALL
	f	Ladc;	u	ORE_DIAMOND_LARGE
	f	Ladc;	v	ORE_DIAMOND_BURIED
	f	Ladc;	w	ORE_LAPIS
	f	Ladc;	x	ORE_LAPIS_BURIED
	f	Ladc;	y	ORE_INFESTED
	f	Ladc;	z	ORE_EMERALD
c	pd	net/minecraft/data/worldgen/features/PileFeatures
	m	(Loa;)V	a	bootstrap
		p	0		featureRegisterable
	f	Ladc;	a	PILE_HAY
	f	Ladc;	b	PILE_MELON
	f	Ladc;	c	PILE_SNOW
	f	Ladc;	d	PILE_ICE
	f	Ladc;	e	PILE_PUMPKIN
c	pe	net/minecraft/data/worldgen/features/TreeFeatures
	m	()Ldnd$a;	a	createOak
	m	(Lcpi;Lcpi;IIII)Ldnd$a;	a	createStraightBlobTree
		p	0		log
		p	1		leaves
		p	2		baseHeight
		p	3		firstRandomHeight
		p	4		secondRandomHeight
		p	5		radius
	m	(Loa;)V	a	bootstrap
		p	0		featureRegisterable
	m	()Ldnd$a;	b	createBirch
	m	()Ldnd$a;	c	createSuperBirch
	m	()Ldnd$a;	d	createJungleTree
	m	()Ldnd$a;	e	createFancyOak
	m	()Ldnd$a;	f	cherry
	f	Ladc;	A	OAK_BEES_0002
	f	Ladc;	B	OAK_BEES_002
	f	Ladc;	C	OAK_BEES_005
	f	Ladc;	D	BIRCH_BEES_0002
	f	Ladc;	E	BIRCH_BEES_002
	f	Ladc;	F	BIRCH_BEES_005
	f	Ladc;	G	FANCY_OAK_BEES_0002
	f	Ladc;	H	FANCY_OAK_BEES_002
	f	Ladc;	I	FANCY_OAK_BEES_005
	f	Ladc;	J	FANCY_OAK_BEES
	f	Ladc;	K	CHERRY_BEES_005
	f	Ladc;	a	CRIMSON_FUNGUS
	f	Ladc;	b	CRIMSON_FUNGUS_PLANTED
	f	Ladc;	c	WARPED_FUNGUS
	f	Ladc;	d	WARPED_FUNGUS_PLANTED
	f	Ladc;	e	HUGE_BROWN_MUSHROOM
	f	Ladc;	f	HUGE_RED_MUSHROOM
	f	Ladc;	g	OAK
	f	Ladc;	h	DARK_OAK
	f	Ladc;	i	BIRCH
	f	Ladc;	j	ACACIA
	f	Ladc;	k	SPRUCE
	f	Ladc;	l	PINE
	f	Ladc;	m	JUNGLE_TREE
	f	Ladc;	n	FANCY_OAK
	f	Ladc;	o	JUNGLE_TREE_NO_VINE
	f	Ladc;	p	MEGA_JUNGLE_TREE
	f	Ladc;	q	MEGA_SPRUCE
	f	Ladc;	r	MEGA_PINE
	f	Ladc;	s	SUPER_BIRCH_BEES_0002
	f	Ladc;	t	SUPER_BIRCH_BEES
	f	Ladc;	u	SWAMP_OAK
	f	Ladc;	v	JUNGLE_BUSH
	f	Ladc;	w	AZALEA_TREE
	f	Ladc;	x	MANGROVE
	f	Ladc;	y	TALL_MANGROVE
	f	Ladc;	z	CHERRY
c	pf	net/minecraft/data/worldgen/features/VegetationFeatures
	m	(Ldoi;I)Ldmu;	a	grassPatch
		p	0		block
		p	1		tries
	m	(Loa;)V	a	bootstrap
		p	0		featureRegisterable
	f	Ladc;	A	DARK_FOREST_VEGETATION
	f	Ladc;	B	TREES_FLOWER_FOREST
	f	Ladc;	C	MEADOW_TREES
	f	Ladc;	D	TREES_TAIGA
	f	Ladc;	E	TREES_GROVE
	f	Ladc;	F	TREES_SAVANNA
	f	Ladc;	G	BIRCH_TALL
	f	Ladc;	H	TREES_WINDSWEPT_HILLS
	f	Ladc;	I	TREES_WATER
	f	Ladc;	J	TREES_BIRCH_AND_OAK
	f	Ladc;	K	TREES_PLAINS
	f	Ladc;	L	TREES_SPARSE_JUNGLE
	f	Ladc;	M	TREES_OLD_GROWTH_SPRUCE_TAIGA
	f	Ladc;	N	TREES_OLD_GROWTH_PINE_TAIGA
	f	Ladc;	O	TREES_JUNGLE
	f	Ladc;	P	BAMBOO_VEGETATION
	f	Ladc;	Q	MUSHROOM_ISLAND_VEGETATION
	f	Ladc;	R	MANGROVE_VEGETATION
	f	Ladc;	a	BAMBOO_NO_PODZOL
	f	Ladc;	b	BAMBOO_SOME_PODZOL
	f	Ladc;	c	VINES
	f	Ladc;	d	PATCH_BROWN_MUSHROOM
	f	Ladc;	e	PATCH_RED_MUSHROOM
	f	Ladc;	f	PATCH_SUNFLOWER
	f	Ladc;	g	PATCH_PUMPKIN
	f	Ladc;	h	PATCH_BERRY_BUSH
	f	Ladc;	i	PATCH_TAIGA_GRASS
	f	Ladc;	j	PATCH_GRASS
	f	Ladc;	k	PATCH_GRASS_JUNGLE
	f	Ladc;	l	SINGLE_PIECE_OF_GRASS
	f	Ladc;	m	PATCH_DEAD_BUSH
	f	Ladc;	n	PATCH_MELON
	f	Ladc;	o	PATCH_WATERLILY
	f	Ladc;	p	PATCH_TALL_GRASS
	f	Ladc;	q	PATCH_LARGE_FERN
	f	Ladc;	r	PATCH_CACTUS
	f	Ladc;	s	PATCH_SUGAR_CANE
	f	Ladc;	t	FLOWER_DEFAULT
	f	Ladc;	u	FLOWER_FLOWER_FOREST
	f	Ladc;	v	FLOWER_SWAMP
	f	Ladc;	w	FLOWER_PLAIN
	f	Ladc;	x	FLOWER_MEADOW
	f	Ladc;	y	FLOWER_CHERRY
	f	Ladc;	z	FOREST_FLOWERS
c	pg	net/minecraft/data/worldgen/features/package-info
c	ph	net/minecraft/data/worldgen/package-info
c	pi	net/minecraft/data/worldgen/placement/AquaticPlacements
	m	(I)Ljava/util/List;	a	seagrassPlacement
		p	0		count
	m	(Loa;)V	a	bootstrap
		p	0		featureRegisterable
	f	Ladc;	a	SEAGRASS_WARM
	f	Ladc;	b	SEAGRASS_NORMAL
	f	Ladc;	c	SEAGRASS_COLD
	f	Ladc;	d	SEAGRASS_RIVER
	f	Ladc;	e	SEAGRASS_SWAMP
	f	Ladc;	f	SEAGRASS_DEEP_WARM
	f	Ladc;	g	SEAGRASS_DEEP
	f	Ladc;	h	SEAGRASS_DEEP_COLD
	f	Ladc;	i	SEAGRASS_SIMPLE
	f	Ladc;	j	SEA_PICKLE
	f	Ladc;	k	KELP_COLD
	f	Ladc;	l	KELP_WARM
	f	Ladc;	m	WARM_OCEAN_VEGETATION
c	pj	net/minecraft/data/worldgen/placement/CavePlacements
	m	(Loa;)V	a	bootstrap
		p	0		featureRegisterable
	f	Ladc;	a	MONSTER_ROOM
	f	Ladc;	b	MONSTER_ROOM_DEEP
	f	Ladc;	c	FOSSIL_UPPER
	f	Ladc;	d	FOSSIL_LOWER
	f	Ladc;	e	DRIPSTONE_CLUSTER
	f	Ladc;	f	LARGE_DRIPSTONE
	f	Ladc;	g	POINTED_DRIPSTONE
	f	Ladc;	h	UNDERWATER_MAGMA
	f	Ladc;	i	GLOW_LICHEN
	f	Ladc;	j	ROOTED_AZALEA_TREE
	f	Ladc;	k	CAVE_VINES
	f	Ladc;	l	LUSH_CAVES_VEGETATION
	f	Ladc;	m	LUSH_CAVES_CLAY
	f	Ladc;	n	LUSH_CAVES_CEILING_VEGETATION
	f	Ladc;	o	SPORE_BLOSSOM
	f	Ladc;	p	CLASSIC_VINES
	f	Ladc;	q	AMETHYST_GEODE
	f	Ladc;	r	SCULK_PATCH_DEEP_DARK
	f	Ladc;	s	SCULK_PATCH_ANCIENT_CITY
	f	Ladc;	t	SCULK_VEIN
c	pk	net/minecraft/data/worldgen/placement/EndPlacements
	m	(Loa;)V	a	bootstrap
		p	0		featureRegisterable
	f	Ladc;	a	END_SPIKE
	f	Ladc;	b	END_GATEWAY_RETURN
	f	Ladc;	c	CHORUS_PLANT
	f	Ladc;	d	END_ISLAND_DECORATED
c	pl	net/minecraft/data/worldgen/placement/MiscOverworldPlacements
	m	(Loa;)V	a	bootstrap
		p	0		featureRegisterable
	f	Ladc;	a	ICE_SPIKE
	f	Ladc;	b	ICE_PATCH
	f	Ladc;	c	FOREST_ROCK
	f	Ladc;	d	ICEBERG_PACKED
	f	Ladc;	e	ICEBERG_BLUE
	f	Ladc;	f	BLUE_ICE
	f	Ladc;	g	LAKE_LAVA_UNDERGROUND
	f	Ladc;	h	LAKE_LAVA_SURFACE
	f	Ladc;	i	DISK_CLAY
	f	Ladc;	j	DISK_GRAVEL
	f	Ladc;	k	DISK_SAND
	f	Ladc;	l	DISK_GRASS
	f	Ladc;	m	FREEZE_TOP_LAYER
	f	Ladc;	n	VOID_START_PLATFORM
	f	Ladc;	o	DESERT_WELL
	f	Ladc;	p	SPRING_LAVA
	f	Ladc;	q	SPRING_LAVA_FROZEN
	f	Ladc;	r	SPRING_WATER
c	pm	net/minecraft/data/worldgen/placement/NetherPlacements
	m	(Loa;)V	a	bootstrap
		p	0		featureRegisterable
	f	Ladc;	a	DELTA
	f	Ladc;	b	SMALL_BASALT_COLUMNS
	f	Ladc;	c	LARGE_BASALT_COLUMNS
	f	Ladc;	d	BASALT_BLOBS
	f	Ladc;	e	BLACKSTONE_BLOBS
	f	Ladc;	f	GLOWSTONE_EXTRA
	f	Ladc;	g	GLOWSTONE
	f	Ladc;	h	CRIMSON_FOREST_VEGETATION
	f	Ladc;	i	WARPED_FOREST_VEGETATION
	f	Ladc;	j	NETHER_SPROUTS
	f	Ladc;	k	TWISTING_VINES
	f	Ladc;	l	WEEPING_VINES
	f	Ladc;	m	PATCH_CRIMSON_ROOTS
	f	Ladc;	n	BASALT_PILLAR
	f	Ladc;	o	SPRING_DELTA
	f	Ladc;	p	SPRING_CLOSED
	f	Ladc;	q	SPRING_CLOSED_DOUBLE
	f	Ladc;	r	SPRING_OPEN
	f	Ladc;	s	PATCH_SOUL_FIRE
	f	Ladc;	t	PATCH_FIRE
c	pn	net/minecraft/data/worldgen/placement/OrePlacements
	m	(ILdqw;)Ljava/util/List;	a	commonOrePlacement
		p	0		count
		p	1		heightModifier
	m	(Ldqw;Ldqw;)Ljava/util/List;	a	orePlacement
		p	0		countModifier
		p	1		heightModifier
	m	(Loa;)V	a	bootstrap
		p	0		featureRegisterable
	m	(ILdqw;)Ljava/util/List;	b	rareOrePlacement
		p	0		chance
		p	1		heightModifier
	f	Ladc;	A	ORE_REDSTONE_LOWER
	f	Ladc;	B	ORE_DIAMOND
	f	Ladc;	C	ORE_DIAMOND_LARGE
	f	Ladc;	D	ORE_DIAMOND_BURIED
	f	Ladc;	E	ORE_LAPIS
	f	Ladc;	F	ORE_LAPIS_BURIED
	f	Ladc;	G	ORE_INFESTED
	f	Ladc;	H	ORE_EMERALD
	f	Ladc;	I	ORE_ANCIENT_DEBRIS_LARGE
	f	Ladc;	J	ORE_ANCIENT_DEBRIS_SMALL
	f	Ladc;	K	ORE_COPPER
	f	Ladc;	L	ORE_COPPER_LARGE
	f	Ladc;	M	ORE_CLAY
	f	Ladc;	a	ORE_MAGMA
	f	Ladc;	b	ORE_SOUL_SAND
	f	Ladc;	c	ORE_GOLD_DELTAS
	f	Ladc;	d	ORE_QUARTZ_DELTAS
	f	Ladc;	e	ORE_GOLD_NETHER
	f	Ladc;	f	ORE_QUARTZ_NETHER
	f	Ladc;	g	ORE_GRAVEL_NETHER
	f	Ladc;	h	ORE_BLACKSTONE
	f	Ladc;	i	ORE_DIRT
	f	Ladc;	j	ORE_GRAVEL
	f	Ladc;	k	ORE_GRANITE_UPPER
	f	Ladc;	l	ORE_GRANITE_LOWER
	f	Ladc;	m	ORE_DIORITE_UPPER
	f	Ladc;	n	ORE_DIORITE_LOWER
	f	Ladc;	o	ORE_ANDESITE_UPPER
	f	Ladc;	p	ORE_ANDESITE_LOWER
	f	Ladc;	q	ORE_TUFF
	f	Ladc;	r	ORE_COAL_UPPER
	f	Ladc;	s	ORE_COAL_LOWER
	f	Ladc;	t	ORE_IRON_UPPER
	f	Ladc;	u	ORE_IRON_MIDDLE
	f	Ladc;	v	ORE_IRON_SMALL
	f	Ladc;	w	ORE_GOLD_EXTRA
	f	Ladc;	x	ORE_GOLD
	f	Ladc;	y	ORE_GOLD_LOWER
	f	Ladc;	z	ORE_REDSTONE
c	po	net/minecraft/data/worldgen/placement/PlacementUtils
	m	()Ldqv;	a	isEmpty
	m	(IFI)Ldqw;	a	countExtra
		p	0		count
		p	1		extraChance
		p	2		extraCount
	m	(Lcpi;)Ldqi;	a	filteredByBlockSurvival
		p	0		block
	m	(Ldkd;Ldmh;)Lhd;	a	onlyWhenEmpty
		p	0		feature
		p	1		featureConfig
	m	(Ldkd;Ldmh;Ldig;)Lhd;	a	filtered
		p	0		feature
		p	1		featureConfig
		p	2		predicate
	m	(Ldkd;Ldmh;[Ldqw;)Lhd;	a	inlinePlaced
		p	0		feature
		p	1		featureConfig
		p	2		modifiers
	m	(Lhd;[Ldqw;)Lhd;	a	inlinePlaced
		p	0		feature
		p	1		modifiers
	m	(Ljava/lang/String;)Ladc;	a	createKey
		p	0		id
	m	(Loa;)V	a	bootstrap
		p	0		featureRegisterable
	m	(Loa;Ladc;Lhd;Ljava/util/List;)V	a	register
		p	0		featureRegisterable
		p	1		key
		p	2		feature
		p	3		modifiers
	m	(Loa;Ladc;Lhd;[Ldqw;)V	a	register
		p	0		featureRegisterable
		p	1		key
		p	2		feature
		p	3		modifiers
	f	Ldqw;	a	HEIGHTMAP
	f	Ldqw;	b	HEIGHTMAP_TOP_SOLID
	f	Ldqw;	c	HEIGHTMAP_WORLD_SURFACE
	f	Ldqw;	d	HEIGHTMAP_OCEAN_FLOOR
	f	Ldqw;	e	FULL_RANGE
	f	Ldqw;	f	RANGE_10_10
	f	Ldqw;	g	RANGE_8_8
	f	Ldqw;	h	RANGE_4_4
	f	Ldqw;	i	RANGE_BOTTOM_TO_MAX_TERRAIN_HEIGHT
c	pp	net/minecraft/data/worldgen/placement/TreePlacements
	m	(Loa;)V	a	bootstrap
		p	0		featureRegisterable
	f	Ladc;	A	FANCY_OAK_BEES_002
	f	Ladc;	B	FANCY_OAK_BEES
	f	Ladc;	C	CHERRY_BEES_005
	f	Ladc;	a	CRIMSON_FUNGI
	f	Ladc;	b	WARPED_FUNGI
	f	Ladc;	c	OAK_CHECKED
	f	Ladc;	d	DARK_OAK_CHECKED
	f	Ladc;	e	BIRCH_CHECKED
	f	Ladc;	f	ACACIA_CHECKED
	f	Ladc;	g	SPRUCE_CHECKED
	f	Ladc;	h	MANGROVE_CHECKED
	f	Ladc;	i	CHERRY_CHECKED
	f	Ladc;	j	PINE_ON_SNOW
	f	Ladc;	k	SPRUCE_ON_SNOW
	f	Ladc;	l	PINE_CHECKED
	f	Ladc;	m	JUNGLE_TREE_CHECKED
	f	Ladc;	n	FANCY_OAK_CHECKED
	f	Ladc;	o	MEGA_JUNGLE_TREE_CHECKED
	f	Ladc;	p	MEGA_SPRUCE_CHECKED
	f	Ladc;	q	MEGA_PINE_CHECKED
	f	Ladc;	r	TALL_MANGROVE_CHECKED
	f	Ladc;	s	JUNGLE_BUSH
	f	Ladc;	t	SUPER_BIRCH_BEES_0002
	f	Ladc;	u	SUPER_BIRCH_BEES
	f	Ladc;	v	OAK_BEES_0002
	f	Ladc;	w	OAK_BEES_002
	f	Ladc;	x	BIRCH_BEES_0002_PLACED
	f	Ladc;	y	BIRCH_BEES_002
	f	Ladc;	z	FANCY_OAK_BEES_0002
c	pq	net/minecraft/data/worldgen/placement/VegetationPlacements
	m	(I)Ljava/util/List;	a	worldSurfaceSquaredWithCount
		p	0		count
	m	(ILdqw;)Ljava/util/List;	a	getMushroomPlacement
		p	0		chance
		p	1		modifier
	m	(Ldqw;)Ljava/util/List;	a	treePlacement
		p	0		modifier
	m	(Ldqw;Lcpi;)Ljava/util/List;	a	treePlacement
		p	0		modifier
		p	1		block
	m	(Loa;)V	a	bootstrap
		p	0		featureRegisterable
	m	(Ldqw;)Lcom/google/common/collect/ImmutableList$Builder;	b	treePlacementBase
		p	0		countModifier
	f	Ladc;	A	PATCH_CACTUS_DECORATED
	f	Ladc;	B	PATCH_SUGAR_CANE_SWAMP
	f	Ladc;	C	PATCH_SUGAR_CANE_DESERT
	f	Ladc;	D	PATCH_SUGAR_CANE_BADLANDS
	f	Ladc;	E	PATCH_SUGAR_CANE
	f	Ladc;	F	BROWN_MUSHROOM_NETHER
	f	Ladc;	G	RED_MUSHROOM_NETHER
	f	Ladc;	H	BROWN_MUSHROOM_NORMAL
	f	Ladc;	I	RED_MUSHROOM_NORMAL
	f	Ladc;	J	BROWN_MUSHROOM_TAIGA
	f	Ladc;	K	RED_MUSHROOM_TAIGA
	f	Ladc;	L	BROWN_MUSHROOM_OLD_GROWTH
	f	Ladc;	M	RED_MUSHROOM_OLD_GROWTH
	f	Ladc;	N	BROWN_MUSHROOM_SWAMP
	f	Ladc;	O	RED_MUSHROOM_SWAMP
	f	Ladc;	P	FLOWER_WARM
	f	Ladc;	Q	FLOWER_DEFAULT
	f	Ladc;	R	FLOWER_FLOWER_FOREST
	f	Ladc;	S	FLOWER_SWAMP
	f	Ladc;	T	FLOWER_PLAINS
	f	Ladc;	U	FLOWER_MEADOW
	f	Ladc;	V	FLOWER_CHERRY
	f	Ladc;	W	TREES_PLAINS
	f	Ladc;	X	DARK_FOREST_VEGETATION
	f	Ladc;	Y	FLOWER_FOREST_FLOWERS
	f	Ladc;	Z	FOREST_FLOWERS
	f	Ladc;	a	BAMBOO_LIGHT
	f	Ladc;	aa	TREES_FLOWER_FOREST
	f	Ladc;	ab	TREES_MEADOW
	f	Ladc;	ac	TREES_CHERRY
	f	Ladc;	ad	TREES_TAIGA
	f	Ladc;	ae	TREES_GROVE
	f	Ladc;	af	TREES_BADLANDS
	f	Ladc;	ag	TREES_SNOWY
	f	Ladc;	ah	TREES_SWAMP
	f	Ladc;	ai	TREES_WINDSWEPT_SAVANNA
	f	Ladc;	aj	TREES_SAVANNA
	f	Ladc;	ak	BIRCH_TALL
	f	Ladc;	al	TREES_BIRCH
	f	Ladc;	am	TREES_WINDSWEPT_FOREST
	f	Ladc;	an	TREES_WINDSWEPT_HILLS
	f	Ladc;	ao	TREES_WATER
	f	Ladc;	ap	TREES_BIRCH_AND_OAK
	f	Ladc;	aq	TREES_SPARSE_JUNGLE
	f	Ladc;	ar	TREES_OLD_GROWTH_SPRUCE_TAIGA
	f	Ladc;	as	TREES_OLD_GROWTH_PINE_TAIGA
	f	Ladc;	at	TREES_JUNGLE
	f	Ladc;	au	BAMBOO_VEGETATION
	f	Ladc;	av	MUSHROOM_ISLAND_VEGETATION
	f	Ladc;	aw	TREES_MANGROVE
	f	Ldqw;	ax	TREE_THRESHOLD
	f	Ladc;	b	BAMBOO
	f	Ladc;	c	VINES
	f	Ladc;	d	PATCH_SUNFLOWER
	f	Ladc;	e	PATCH_PUMPKIN
	f	Ladc;	f	PATCH_GRASS_PLAIN
	f	Ladc;	g	PATCH_GRASS_FOREST
	f	Ladc;	h	PATCH_GRASS_BADLANDS
	f	Ladc;	i	PATCH_GRASS_SAVANNA
	f	Ladc;	j	PATCH_GRASS_NORMAL
	f	Ladc;	k	PATCH_GRASS_TAIGA_2
	f	Ladc;	l	PATCH_GRASS_TAIGA
	f	Ladc;	m	PATCH_GRASS_JUNGLE
	f	Ladc;	n	GRASS_BONEMEAL
	f	Ladc;	o	PATCH_DEAD_BUSH_2
	f	Ladc;	p	PATCH_DEAD_BUSH
	f	Ladc;	q	PATCH_DEAD_BUSH_BADLANDS
	f	Ladc;	r	PATCH_MELON
	f	Ladc;	s	PATCH_MELON_SPARSE
	f	Ladc;	t	PATCH_BERRY_COMMON
	f	Ladc;	u	PATCH_BERRY_RARE
	f	Ladc;	v	PATCH_WATERLILY
	f	Ladc;	w	PATCH_TALL_GRASS_2
	f	Ladc;	x	PATCH_TALL_GRASS
	f	Ladc;	y	PATCH_LARGE_FERN
	f	Ladc;	z	PATCH_CACTUS_DESERT
c	pr	net/minecraft/data/worldgen/placement/VillagePlacements
	m	(Loa;)V	a	bootstrap
		p	0		featureRegisterable
	f	Ladc;	a	PILE_HAY_VILLAGE
	f	Ladc;	b	PILE_MELON_VILLAGE
	f	Ladc;	c	PILE_SNOW_VILLAGE
	f	Ladc;	d	PILE_ICE_VILLAGE
	f	Ladc;	e	PILE_PUMPKIN_VILLAGE
	f	Ladc;	f	OAK_VILLAGE
	f	Ladc;	g	ACACIA_VILLAGE
	f	Ladc;	h	SPRUCE_VILLAGE
	f	Ladc;	i	PINE_VILLAGE
	f	Ladc;	j	PATCH_CACTUS_VILLAGE
	f	Ladc;	k	FLOWER_PLAIN_VILLAGE
	f	Ladc;	l	PATCH_TAIGA_GRASS_VILLAGE
	f	Ladc;	m	PATCH_BERRY_BUSH_VILLAGE
c	ps	net/minecraft/data/worldgen/placement/package-info
c	pt	net/minecraft/gametest/framework/AfterBatch
	m	()Ljava/lang/String;	a	batch
c	pu	net/minecraft/gametest/framework/BeforeBatch
	m	()Ljava/lang/String;	a	batch
c	pv	net/minecraft/gametest/framework/ExhaustedAttemptsException
	m	(IILqe;)V	<init>	<init>
		p	1		attempts
		p	2		successes
		p	3		test
c	pw	net/minecraft/gametest/framework/GameTest
	m	()I	a	timeoutTicks
	m	()Ljava/lang/String;	b	batch
	m	()I	c	rotationSteps
	m	()Z	d	required
	m	()Ljava/lang/String;	e	template
	m	()J	f	setupTicks
	m	()I	g	attempts
	m	()I	h	requiredSuccesses
c	px	net/minecraft/gametest/framework/GameTestAssertException
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		message
c	py	net/minecraft/gametest/framework/GameTestAssertPosException
	m	(Ljava/lang/String;Lgt;Lgt;J)V	<init>	<init>
		p	1		message
		p	2		pos
		p	3		relativePos
		p	4		tick
	m	()Ljava/lang/String;	a	getMessageToShowAtBlock
	m	()Lgt;	b	getRelativePos
	m	()Lgt;	c	getAbsolutePos
	f	Lgt;	a	absolutePos
	f	Lgt;	b	relativePos
	f	J	c	tick
c	pz	net/minecraft/gametest/framework/GameTestBatch
	m	(Ljava/lang/String;Ljava/util/Collection;Ljava/util/function/Consumer;Ljava/util/function/Consumer;)V	<init>	<init>
		p	1		id
		p	2		testFunctions
		p	3		beforeBatchConsumer
		p	4		afterBatchConsumer
	m	()Ljava/lang/String;	a	getName
	m	(Laip;)V	a	runBeforeBatchFunction
		p	1		world
	m	()Ljava/util/Collection;	b	getTestFunctions
	m	(Laip;)V	b	runAfterBatchFunction
		p	1		world
	f	Ljava/lang/String;	a	DEFAULT_BATCH_NAME
	f	Ljava/lang/String;	b	name
	f	Ljava/util/Collection;	c	testFunctions
	f	Ljava/util/function/Consumer;	d	beforeBatchFunction
	f	Ljava/util/function/Consumer;	e	afterBatchFunction
c	qa	net/minecraft/gametest/framework/GameTestBatchRunner
	m	(Ljava/util/Collection;Lgt;Lcvq;Laip;Lqk;I)V	<init>	<init>
		p	1		batches
		p	2		pos
		p	3		rotation
		p	4		world
		p	5		testManager
		p	6		sizeZ
	m	()Ljava/util/List;	a	getTestInfos
	m	(I)V	a	runBatch
		p	1		index
	m	(Lcom/mojang/datafixers/util/Pair;)Ljava/util/stream/Stream;	a	lambda$new$2
		p	0		batch
	m	(Lcvq;Laip;Lpz;)Lcom/mojang/datafixers/util/Pair;	a	lambda$new$1
		p	2		batch
	m	(Lcvq;Laip;Lqv;)Lqe;	a	lambda$new$0
		p	2		testFunction
	m	(Ljava/util/Collection;)Ljava/util/Map;	a	createStructuresForBatch
		p	1		gameTests
	m	(Ljava/util/Map;Lqe;)V	a	lambda$runBatch$3
		p	2		gameTest
	m	()V	b	start
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lgt;	b	firstTestNorthWestCorner
	f	Laip;	c	level
	f	Lqk;	d	testTicker
	f	I	e	testsPerRow
	f	Ljava/util/List;	f	allTestInfos
	f	Ljava/util/List;	g	batches
	f	Lgt$a;	h	nextTestNorthWestCorner
c	qa$1	net/minecraft/gametest/framework/GameTestBatchRunner$1
	m	()V	a	testCompleted
	m	(Lqe;)V	a	testStructureLoaded
		p	1		test
	m	(Lqe;)V	b	testPassed
		p	1		test
	m	(Lqe;)V	c	testFailed
		p	1		test
	f	Lqp;	a	val$currentBatchTracker
	f	Lpz;	b	val$currentBatch
	f	I	c	val$batchIndex
	f	Lqa;	d	this$0
c	qb	net/minecraft/gametest/framework/GameTestEvent
	m	(Ljava/lang/Long;Ljava/lang/Runnable;)V	<init>	<init>
		p	1		duration
		p	2		task
	m	(JLjava/lang/Runnable;)Lqb;	a	create
		p	0		duration
		p	2		task
	m	(Ljava/lang/Runnable;)Lqb;	a	create
		p	0		task
	f	Ljava/lang/Long;	a	expectedDelay
	f	Ljava/lang/Runnable;	b	assertion
c	qc	net/minecraft/gametest/framework/GameTestGenerator
c	qd	net/minecraft/gametest/framework/GameTestHelper
	m	(Lqe;)V	<init>	<init>
		p	1		test
	m	()Laip;	a	getLevel
	m	(I)V	a	setDayTime
		p	1		timeOfDay
	m	(III)V	a	pressButton
		p	1		x
		p	2		y
		p	3		z
	m	(IIILcpi;)V	a	setBlock
		p	1		x
		p	2		y
		p	3		z
		p	4		block
	m	(IIILdbq;)V	a	setBlock
		p	1		x
		p	2		y
		p	3		z
		p	4		state
	m	(ILjava/lang/Runnable;)V	a	succeedOnTickWhen
		p	1		duration
		p	2		runnable
	m	(JLgt;)V	a	assertAtTickTimeContainerEmpty
		p	1		delay
		p	3		pos
	m	(JLgt;Lcfq;)V	a	assertAtTickTimeContainerContains
		p	1		delay
		p	3		pos
		p	4		item
	m	(JLjava/lang/Runnable;)V	a	runAtTickTime
		p	1		tick
		p	3		runnable
	m	(Lbfh;)Z	a	lambda$killAllEntities$0
		p	0		entity
	m	(Lbfh;III)V	a	assertEntityInstancePresent
		p	1		entity
		p	2		x
		p	3		y
		p	4		z
	m	(Lbfh;Lbfh;)Z	a	lambda$assertEntityInstancePresent$12
		p	1		e
	m	(Lbfh;Lgt;)V	a	assertEntityInstancePresent
		p	1		entity
		p	2		pos
	m	(Lbfh;Lgt;Lgt;)Lpy;	a	lambda$assertEntityInstancePresent$13
	m	(Lbfh;Ljava/util/function/Function;Ljava/lang/String;Ljava/lang/Object;)V	a	assertEntityProperty
		p	1		entity
		p	2		propertyGetter
		p	3		propertyName
		p	4		expectedValue
	m	(Lbfh;Ljava/util/function/Predicate;Ljava/lang/String;)V	a	assertEntityProperty
		p	1		entity
		p	2		predicate
		p	3		testName
	m	(Lbfl;)V	a	assertEntityPresent
		p	1		type
	m	(Lbfl;DDD)V	a	assertEntityTouching
		p	1		type
		p	2		x
		p	4		y
		p	6		z
	m	(Lbfl;FFF)Lbfh;	a	spawn
		p	1		type
		p	2		x
		p	3		y
		p	4		z
	m	(Lbfl;III)Lbfh;	a	spawn
		p	1		type
		p	2		x
		p	3		y
		p	4		z
	m	(Lbfl;Lede;)Lbfh;	a	spawn
		p	1		type
		p	2		pos
	m	(Lbfl;Lede;Lede;)V	a	assertEntityPresent
		p	1		type
		p	2		pos1
		p	3		pos2
	m	(Lbfl;Lgt;)Lbfh;	a	spawn
		p	1		type
		p	2		pos
	m	(Lbfl;Lgt;D)V	a	assertEntityPresent
		p	1		type
		p	2		pos
		p	3		radius
	m	(Lbfl;Lgt;ID)V	a	assertEntitiesPresent
		p	1		type
		p	2		pos
		p	3		amount
		p	4		radius
	m	(Lbfx;)Lbfx;	a	makeAboutToDrown
		p	1		entity
	m	(Lbfz;Lgt;F)Lqi;	a	walkTo
		p	1		entity
		p	2		pos
		p	3		speed
	m	(Lbym;Lcfv;Lgt;Lgz;)V	a	placeAt
		p	1		player
		p	2		stack
		p	3		pos
		p	4		direction
	m	(Lcfq;FFF)Lbvf;	a	spawnItem
		p	1		item
		p	2		x
		p	3		y
		p	4		z
	m	(Lcfq;Lcfv;)Z	a	lambda$assertEntityInventoryContains$17
		p	1		stack
	m	(Lcfq;Lgt;)Lbvf;	a	spawnItem
		p	1		item
		p	2		pos
	m	(Lcfq;Lgt;D)V	a	assertItemEntityPresent
		p	1		item
		p	2		pos
		p	3		radius
	m	(Lcfq;Lgt;DI)V	a	assertItemEntityCountIs
		p	1		item
		p	2		pos
		p	3		radius
		p	5		amount
	m	(Lcpi;III)V	a	assertBlockPresent
		p	1		block
		p	2		x
		p	3		y
		p	4		z
	m	(Lcpi;Lgt;)V	a	assertBlockPresent
		p	1		block
		p	2		pos
	m	(Ldbq;)Z	a	lambda$pressButton$2
		p	0		state
	m	(Ldbq;Lcpi;Lcpi;)Z	a	lambda$assertBlockPresent$5
		p	2		block1
	m	(Ldgz$a;II)I	a	getHeight
		p	1		heightmap
		p	2		x
		p	3		z
	m	(Ldrh;Lgt;)V	a	assertSameBlockStates
		p	1		checkedBlockBox
		p	2		correctStatePos
	m	(Lede;)Lede;	a	absoluteVec
		p	1		pos
	m	(Lede;Lbfh;)Z	a	lambda$assertEntityNotTouching$15
		p	1		entity
	m	(Lgt;)Ldbq;	a	getBlockState
		p	1		pos
	m	(Lgt;J)V	a	pulseRedstone
		p	1		pos
		p	2		delay
	m	(Lgt;Lbfl;Lcfq;)V	a	assertEntityIsHolding
		p	1		pos
		p	2		entityType
		p	3		item
	m	(Lgt;Lbfl;Ljava/util/function/Function;Ljava/lang/Object;)V	a	assertEntityData
		p	1		pos
		p	2		type
		p	3		entityDataGetter
		p	4		data
	m	(Lgt;Lbym;)V	a	useBlock
		p	1		pos
		p	2		player
	m	(Lgt;Lbym;Leda;)V	a	useBlock
		p	1		pos
		p	2		player
		p	3		result
	m	(Lgt;Lcfq;)V	a	assertContainerContains
		p	1		pos
		p	2		item
	m	(Lgt;Lcpi;)V	a	setBlock
		p	1		pos
		p	2		block
	m	(Lgt;Lcpi;Lcpi;)Z	a	lambda$assertBlockNotPresent$6
		p	3		block1
	m	(Lgt;Ldbq;)V	a	setBlock
		p	1		pos
		p	2		state
	m	(Lgt;Ldcu;Ljava/lang/Comparable;)V	a	assertBlockProperty
		p	1		pos
		p	2		property
		p	3		value
	m	(Lgt;Ldcu;Ljava/util/function/Predicate;Ljava/lang/String;)V	a	assertBlockProperty
		p	1		pos
		p	2		property
		p	3		predicate
		p	4		errorMessage
	m	(Lgt;Ldrh;Lgt;)V	a	lambda$assertSameBlockStates$18
		p	3		checkedPos
	m	(Lgt;Lgt;)V	a	assertSameBlockState
		p	1		checkedPos
		p	2		correctStatePos
	m	(Lgt;Ljava/util/function/Predicate;Ljava/lang/String;)V	a	assertBlock
		p	1		pos
		p	2		predicate
		p	3		errorMessage
	m	(Lgt;Ljava/util/function/Predicate;Ljava/util/function/Supplier;)V	a	assertBlock
		p	1		pos
		p	2		predicate
		p	3		errorMessageSupplier
	m	(Ljava/lang/Object;)Z	a	lambda$assertEntityInventoryContains$16
		p	0		entity
	m	(Ljava/lang/Runnable;)V	a	succeedIf
		p	1		runnable
	m	(Ljava/lang/Runnable;J)V	a	lambda$onEachTick$26
		p	2		tick
	m	(Ljava/lang/String;)V	a	fail
		p	1		message
	m	(Ljava/lang/String;Lbfh;)V	a	fail
		p	1		message
		p	2		entity
	m	(Ljava/lang/String;Lgt;)V	a	fail
		p	1		message
		p	2		pos
	m	(Ljava/util/function/Consumer;)V	a	forEveryBlockInStructure
		p	1		posConsumer
	m	(Ljava/util/function/Predicate;Ldbq;)Z	a	lambda$assertBlock$9
		p	1		state
	m	(Ljava/util/function/Predicate;Ldcu;Ldbq;)Z	a	lambda$assertBlockProperty$10
		p	2		state
	m	(ZLjava/lang/String;)V	a	assertTrue
		p	1		condition
		p	2		message
	m	()V	b	killAllEntities
	m	(III)V	b	pullLever
		p	1		x
		p	2		y
		p	3		z
	m	(JLjava/lang/Runnable;)V	b	runAfterDelay
		p	1		ticks
		p	3		runnable
	m	(Lbfl;)V	b	assertEntityNotPresent
		p	1		type
	m	(Lbfl;DDD)V	b	assertEntityNotTouching
		p	1		type
		p	2		x
		p	4		y
		p	6		z
	m	(Lbfl;FFF)Lbfz;	b	spawnWithNoFreeWill
		p	1		type
		p	2		x
		p	3		y
		p	4		z
	m	(Lbfl;III)Lbfz;	b	spawnWithNoFreeWill
		p	1		type
		p	2		x
		p	3		y
		p	4		z
	m	(Lbfl;Lede;)Lbfz;	b	spawnWithNoFreeWill
		p	1		type
		p	2		pos
	m	(Lbfl;Lgt;)Lbfz;	b	spawnWithNoFreeWill
		p	1		type
		p	2		pos
	m	(Lbfl;Lgt;D)Ljava/util/List;	b	getEntities
		p	1		type
		p	2		pos
		p	3		radius
	m	(Lbfz;Lgt;F)V	b	lambda$walkTo$1
	m	(Lcfq;Lgt;D)V	b	assertItemEntityNotPresent
		p	1		item
		p	2		pos
		p	3		radius
	m	(Lcpi;III)V	b	assertBlockNotPresent
		p	1		block
		p	2		x
		p	3		y
		p	4		z
	m	(Lcpi;Lgt;)V	b	assertBlockNotPresent
		p	1		block
		p	2		pos
	m	(Lede;)Lede;	b	relativeVec
		p	1		pos
	m	(Lede;Lbfh;)Z	b	lambda$assertEntityTouching$14
		p	1		entity
	m	(Lgt;)Lcze;	b	getBlockEntity
		p	1		pos
	m	(Lgt;Lbfl;Lcfq;)V	b	assertEntityInventoryContains
		p	1		pos
		p	2		entityType
		p	3		item
	m	(Lgt;Lbfl;Ljava/util/function/Function;Ljava/lang/Object;)V	b	succeedWhenEntityData
		p	1		pos
		p	2		type
		p	3		entityDataGetter
		p	4		data
	m	(Lgt;Lbym;Leda;)V	b	continuouslyUse
		p	1		pos
		p	2		player
		p	3		result
	m	(Lgt;Lcfq;)V	b	lambda$assertAtTickTimeContainerContains$19
	m	(Lgt;Ljava/util/function/Predicate;Ljava/util/function/Supplier;)V	b	assertBlockState
		p	1		pos
		p	2		predicate
		p	3		errorMessageSupplier
	m	(Ljava/lang/Runnable;)V	b	succeedWhen
		p	1		runnable
	m	(Ljava/lang/Runnable;J)V	b	lambda$failIfEver$25
		p	2		tick
	m	(Ljava/lang/String;)Ljava/lang/String;	b	lambda$assertBlockProperty$11
	m	()Lbym;	c	makeMockSurvivalPlayer
	m	(Lbfl;III)V	c	assertEntityPresent
		p	1		type
		p	2		x
		p	3		y
		p	4		z
	m	(Lbfl;Lgt;)V	c	assertEntityPresent
		p	1		type
		p	2		pos
	m	(Lcpi;III)V	c	succeedWhenBlockPresent
		p	1		block
		p	2		x
		p	3		y
		p	4		z
	m	(Lcpi;Lgt;)V	c	succeedWhenBlockPresent
		p	1		block
		p	2		pos
	m	(Lgt;)V	c	pressButton
		p	1		pos
	m	(Lgt;Lbfl;Ljava/util/function/Function;Ljava/lang/Object;)V	c	lambda$succeedWhenEntityData$21
	m	(Ljava/lang/Runnable;)V	c	failIf
		p	1		task
	m	(Ljava/lang/String;)Ljava/lang/String;	c	lambda$assertBlock$8
	m	()Lbym;	d	makeMockPlayer
	m	(Lbfl;III)V	d	assertEntityNotPresent
		p	1		type
		p	2		x
		p	3		y
		p	4		z
	m	(Lbfl;Lgt;)V	d	assertEntityNotPresent
		p	1		type
		p	2		pos
	m	(Lcpi;Lgt;)V	d	lambda$succeedWhenBlockPresent$7
	m	(Lgt;)V	d	useBlock
		p	1		pos
	m	(Ljava/lang/Runnable;)V	d	failIfEver
		p	1		task
	m	()V	e	setNight
	m	(Lbfl;III)V	e	succeedWhenEntityPresent
		p	1		type
		p	2		x
		p	3		y
		p	4		z
	m	(Lbfl;Lgt;)V	e	succeedWhenEntityPresent
		p	1		type
		p	2		pos
	m	(Lgt;)V	e	pullLever
		p	1		pos
	m	(Ljava/lang/Runnable;)V	e	onEachTick
		p	1		runnable
	m	()V	f	succeed
	m	(Lbfl;III)V	f	succeedWhenEntityNotPresent
		p	1		type
		p	2		x
		p	3		y
		p	4		z
	m	(Lbfl;Lgt;)V	f	succeedWhenEntityNotPresent
		p	1		type
		p	2		pos
	m	(Lgt;)V	f	destroyBlock
		p	1		pos
	m	()Lqi;	g	startSequence
	m	(Lbfl;Lgt;)V	g	lambda$succeedWhenEntityNotPresent$23
	m	(Lgt;)V	g	assertContainerEmpty
		p	1		pos
	m	()J	h	getTick
	m	(Lbfl;Lgt;)V	h	lambda$succeedWhenEntityPresent$22
	m	(Lgt;)V	h	randomTick
		p	1		pos
	m	()V	i	ensureSingleFinalCheck
	m	(Lgt;)Lgt;	i	absolutePos
		p	1		pos
	m	()Lecz;	j	getBounds
	m	(Lgt;)Lgt;	j	relativePos
		p	1		pos
	m	()Lecz;	k	getRelativeBounds
	m	(Lgt;)V	k	lambda$assertAtTickTimeContainerEmpty$20
	m	()Ljava/lang/Exception;	l	lambda$failIf$24
	m	(Lgt;)V	l	lambda$pulseRedstone$4
	m	()Ljava/lang/String;	m	lambda$pressButton$3
	f	Lqe;	a	testInfo
	f	Z	b	finalCheckAdded
c	qd$1	net/minecraft/gametest/framework/GameTestHelper$1
	m	(Lqd;Lcmi;Lgt;FLcom/mojang/authlib/GameProfile;)V	<init>	<init>
		p	2		world
		p	3		pos
		p	4		yaw
		p	5		gameProfile
	m	()Z	F_	isSpectator
	m	()Z	f	isCreative
	f	Lqd;	b	this$0
c	qd$2	net/minecraft/gametest/framework/GameTestHelper$2
	m	(Lqd;Lcmi;Lgt;FLcom/mojang/authlib/GameProfile;)V	<init>	<init>
		p	2		world
		p	3		pos
		p	4		yaw
		p	5		gameProfile
	m	()Z	F_	isSpectator
	m	()Z	f	isCreative
	m	()Z	g	isLocalPlayer
	f	Lqd;	b	this$0
c	qe	net/minecraft/gametest/framework/GameTestInfo
	m	(Lqv;Lcvq;Laip;)V	<init>	<init>
		p	1		testFunction
		p	2		rotation
		p	3		world
	m	()V	A	tickInternal
	m	()V	B	startTest
	m	()Ldao;	C	getStructureBlockEntity
	m	()V	D	finish
	m	()V	a	startExecution
	m	(JLjava/lang/Runnable;)V	a	setRunAtTickTime
		p	1		tick
		p	3		runnable
	m	(Lgt;)V	a	setStructureBlockPos
		p	1		pos
	m	(Lgt;I)V	a	spawnStructure
		p	1		pos
	m	(Ljava/lang/Throwable;)V	a	fail
		p	1		throwable
	m	(Lqf;)V	a	addListener
		p	1		listener
	m	(Lqi;)V	a	lambda$tickInternal$3
		p	1		runner
	m	()V	b	tick
	m	(Lqf;)V	b	lambda$spawnStructure$4
		p	1		listener
	m	(Lqi;)V	b	lambda$tickInternal$2
		p	1		runner
	m	()Ljava/lang/String;	c	getTestName
	m	(Lqf;)V	c	lambda$tick$1
		p	1		listener
	m	()Lgt;	d	getStructureBlockPos
	m	(Lqf;)V	d	lambda$tick$0
		p	1		listener
	m	()Lhy;	e	getStructureSize
	m	()Lecz;	f	getStructureBounds
	m	()Laip;	g	getLevel
	m	()Z	h	hasSucceeded
	m	()Z	i	hasFailed
	m	()Z	j	hasStarted
	m	()Z	k	isDone
	m	()J	l	getRunTime
	m	()V	m	succeed
	m	()Ljava/lang/Throwable;	n	getError
	m	()V	o	clearStructure
	m	()J	p	getTick
	m	()Lqi;	q	createSequence
	m	()Z	r	isRequired
	m	()Z	s	isOptional
	m	()Ljava/lang/String;	t	getStructureName
	m	()Lcvq;	u	getRotation
	m	()Lqv;	v	getTestFunction
	m	()I	w	getTimeoutTicks
	m	()Z	x	isFlaky
	m	()I	y	maxAttempts
	m	()I	z	requiredSuccesses
	f	Lqv;	a	testFunction
	f	Lgt;	b	structureBlockPos
	f	Laip;	c	level
	f	Ljava/util/Collection;	d	listeners
	f	I	e	timeoutTicks
	f	Ljava/util/Collection;	f	sequences
	f	Lit/unimi/dsi/fastutil/objects/Object2LongMap;	g	runAtTickTimeMap
	f	J	h	startTick
	f	J	i	tickCount
	f	Z	j	started
	f	Lcom/google/common/base/Stopwatch;	k	timer
	f	Z	l	done
	f	Lcvq;	m	rotation
	f	Ljava/lang/Throwable;	n	error
	f	Ldao;	o	structureBlockEntity
c	qf	net/minecraft/gametest/framework/GameTestListener
	m	(Lqe;)V	a	testStructureLoaded
		p	1		test
	m	(Lqe;)V	b	testPassed
		p	1		test
	m	(Lqe;)V	c	testFailed
		p	1		test
c	qg	net/minecraft/gametest/framework/GameTestRegistry
	m	()Ljava/util/Collection;	a	getAllTestFunctions
	m	(Ljava/lang/Class;)V	a	register
		p	0		testClass
	m	(Ljava/lang/String;)Ljava/util/Collection;	a	getTestFunctionsForClassName
		p	0		testClass
	m	(Ljava/lang/String;Lqv;)Z	a	lambda$findTestFunction$1
		p	1		testFunction
	m	(Ljava/lang/reflect/Method;)V	a	register
		p	0		method
	m	(Ljava/lang/reflect/Method;Ljava/lang/Class;Ljava/util/function/Function;Ljava/util/Map;)V	a	registerBatchFunction
		p	0		method
		p	1		clazz
		p	2		batchIdFunction
		p	3		batchConsumerMap
	m	(Ljava/lang/reflect/Method;Ljava/lang/Object;)V	a	lambda$turnMethodIntoConsumer$2
		p	1		args
	m	(Lqv;)V	a	rememberFailedTest
		p	0		testFunction
	m	(Lqv;Ljava/lang/String;)Z	a	isTestFunctionPartOfClass
		p	0		testFunction
		p	1		testClass
	m	()Ljava/util/Collection;	b	getAllTestClassNames
	m	(Ljava/lang/String;)Z	b	isTestClass
		p	0		testClass
	m	(Ljava/lang/String;Lqv;)Z	b	lambda$getTestFunctionsForClassName$0
		p	1		testFunction
	m	(Ljava/lang/reflect/Method;)Ljava/util/Collection;	b	useTestGeneratorMethod
		p	0		method
	m	()Ljava/util/Collection;	c	getLastFailedTests
	m	(Ljava/lang/String;)Ljava/util/function/Consumer;	c	getBeforeBatchFunction
		p	0		batchId
	m	(Ljava/lang/reflect/Method;)Lqv;	c	turnMethodIntoTestFunction
		p	0		method
	m	()V	d	forgetFailedTests
	m	(Ljava/lang/String;)Ljava/util/function/Consumer;	d	getAfterBatchFunction
		p	0		batchId
	m	(Ljava/lang/reflect/Method;)Ljava/util/function/Consumer;	d	turnMethodIntoConsumer
		p	0		method
	m	(Ljava/lang/String;)Ljava/util/Optional;	e	findTestFunction
		p	0		structurePath
	m	(Ljava/lang/String;)Lqv;	f	getTestFunction
		p	0		structurePath
	f	Ljava/util/Collection;	a	TEST_FUNCTIONS
	f	Ljava/util/Set;	b	TEST_CLASS_NAMES
	f	Ljava/util/Map;	c	BEFORE_BATCH_FUNCTIONS
	f	Ljava/util/Map;	d	AFTER_BATCH_FUNCTIONS
	f	Ljava/util/Collection;	e	LAST_FAILED_TESTS
c	qh	net/minecraft/gametest/framework/GameTestRunner
	m	(Laip;)V	a	clearMarkers
		p	0		world
	m	(Laip;Lgt;)V	a	lambda$clearAllTests$3
		p	1		pos
	m	(Laip;Lgt;Lqk;I)V	a	clearAllTests
		p	0		world
		p	1		pos
		p	2		testManager
		p	3		radius
	m	(Ljava/lang/String;Lorg/apache/commons/lang3/mutable/MutableInt;Ljava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/util/List;)Lpz;	a	lambda$groupTestsIntoBatches$0
		p	4		testFunctions
	m	(Ljava/util/Collection;)Ljava/util/Collection;	a	groupTestsIntoBatches
		p	0		testFunctions
	m	(Ljava/util/Collection;Lgt;Lcvq;Laip;Lqk;I)Ljava/util/Collection;	a	runTestBatches
		p	0		batches
		p	1		pos
		p	2		rotation
		p	3		world
		p	4		testManager
		p	5		sizeZ
	m	(Ljava/util/Map$Entry;)Ljava/util/stream/Stream;	a	lambda$groupTestsIntoBatches$1
		p	0		entry
	m	(Lqe;Lgt;Lqk;)V	a	runTest
		p	0		test
		p	1		pos
		p	2		testManager
	m	(Laip;Lgt;)Z	b	lambda$clearAllTests$2
		p	1		pos
	m	(Ljava/util/Collection;Lgt;Lcvq;Laip;Lqk;I)Ljava/util/Collection;	b	runTests
		p	0		testFunctions
		p	1		pos
		p	2		rotation
		p	3		world
		p	4		testManager
		p	5		sizeZ
	f	I	a	PADDING_AROUND_EACH_STRUCTURE
	f	I	b	SPACE_BETWEEN_COLUMNS
	f	I	c	SPACE_BETWEEN_ROWS
	f	I	d	DEFAULT_TESTS_PER_ROW
	f	I	e	MAX_TESTS_PER_BATCH
c	qi	net/minecraft/gametest/framework/GameTestSequence
	m	(Lqe;)V	<init>	<init>
		p	1		gameTest
	m	()V	a	thenSucceed
	m	(I)Lqi;	a	thenIdle
		p	1		minDuration
	m	(ILjava/lang/Runnable;)Lqi;	a	thenExecuteAfter
		p	1		minDuration
		p	2		task
	m	(J)V	a	tickAndContinue
		p	1		tick
	m	(JLjava/lang/Runnable;)Lqi;	a	thenWaitUntil
		p	1		duration
		p	3		task
	m	(Ljava/lang/Runnable;)Lqi;	a	thenWaitUntil
		p	1		task
	m	(Ljava/util/function/Supplier;)V	a	thenFail
		p	1		exceptionSupplier
	m	(Lqi$a;)V	a	lambda$thenTrigger$5
	m	()Lqi$a;	b	thenTrigger
	m	(ILjava/lang/Runnable;)Lqi;	b	thenExecuteFor
		p	1		minDuration
		p	2		task
	m	(J)V	b	tickAndFailIfNotComplete
		p	1		tick
	m	(Ljava/lang/Runnable;)Lqi;	b	thenExecute
		p	1		task
	m	(Ljava/util/function/Supplier;)V	b	lambda$thenFail$4
	m	()V	c	lambda$thenIdle$0
	m	(ILjava/lang/Runnable;)V	c	lambda$thenExecuteFor$3
	m	(J)V	c	tick
		p	1		tick
	m	(Ljava/lang/Runnable;)V	c	executeWithoutFail
		p	1		task
	m	(ILjava/lang/Runnable;)V	d	lambda$thenExecuteAfter$2
	m	(Ljava/lang/Runnable;)V	d	lambda$thenExecute$1
	f	Lqe;	a	parent
	f	Ljava/util/List;	b	events
	f	J	c	lastTick
c	qi$a	net/minecraft/gametest/framework/GameTestSequence$Condition
	m	()V	a	assertTriggeredThisTick
	m	(J)V	a	trigger
		p	1		tick
	f	Lqi;	a	this$0
	f	J	b	NOT_TRIGGERED
	f	J	c	triggerTime
c	qj	net/minecraft/gametest/framework/GameTestServer
	m	(Ljava/lang/Thread;Ldye$c;Laks;Ladx;Ljava/util/Collection;Lgt;)V	<init>	<init>
		p	1		serverThread
		p	2		session
		p	3		dataPackManager
		p	4		saveLoader
		p	5		batches
		p	6		pos
	m	()Z	M_	shouldInformAdmins
	m	(Lab;)Lab;	a	fillServerSystemReport
		p	1		details
	m	(Ladw$c;Lcmm;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	lambda$create$2
	m	(Lcme;)V	a	lambda$static$0
		p	0		gameRules
	m	(Lcmm;Ladw$a;)Ladw$b;	a	lambda$create$1
	m	(Lcom/mojang/authlib/GameProfile;)Z	a	isSingleplayerOwner
		p	1		profile
	m	(Ljava/lang/Thread;Ldye$c;Laks;Ljava/util/Collection;Lgt;)Lqj;	a	create
		p	0		thread
		p	1		session
		p	2		resourcePackManager
		p	3		batches
		p	4		pos
	m	(Ljava/util/function/BooleanSupplier;)V	a	tickServer
		p	1		shouldKeepTicking
	m	(Lo;)V	a	onServerCrash
		p	1		report
	m	(Lqe;)V	a	lambda$tickServer$4
		p	0		test
	m	(Laip;)V	b	startTests
		p	1		world
	m	(Lqe;)V	b	lambda$tickServer$3
		p	0		test
	m	()Z	bh	haveTestsStarted
	m	()Z	e	initServer
	m	()V	g	onServerExit
	m	()Z	h	isHardcore
	m	()I	i	getOperatorUserPermissionLevel
	m	()V	i_	waitUntilNextTick
	m	()I	j	getFunctionCompilationLevel
	m	()Z	k	shouldRconBroadcast
	m	()Z	l	isDedicatedServer
	m	()I	m	getRateLimitPacketsPerSecond
	m	()Z	n	isEpollEnabled
	m	()Z	o	isCommandBlockEnabled
	m	()Z	p	isPublished
	f	Lorg/slf4j/Logger;	n	LOGGER
	f	I	o	PROGRESS_REPORT_INTERVAL
	f	Ladu;	p	NO_SERVICES
	f	Ljava/util/List;	q	testBatches
	f	Lgt;	r	spawnPos
	f	Lcme;	s	TEST_GAME_RULES
	f	Ldhx;	t	WORLD_OPTIONS
	f	Lqp;	u	testTracker
c	qj$1	net/minecraft/gametest/framework/GameTestServer$1
	m	(Lqj;Lnet/minecraft/server/MinecraftServer;Lhk;Ldyh;I)V	<init>	<init>
		p	2		server
		p	3		registryManager
		p	4		saveHandler
		p	5		maxPlayers
	f	Lqj;	a	this$0
c	qk	net/minecraft/gametest/framework/GameTestTicker
	m	()V	a	clear
	m	(Lqe;)V	a	add
		p	1		test
	m	()V	b	tick
	f	Lqk;	a	SINGLETON
	f	Ljava/util/Collection;	b	testInfos
c	ql	net/minecraft/gametest/framework/GameTestTimeoutException
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		message
c	qm	net/minecraft/gametest/framework/GlobalTestReporter
	m	()V	a	finish
	m	(Lqe;)V	a	onTestFailed
		p	0		test
	m	(Lqx;)V	a	replaceWith
		p	0		listener
	m	(Lqe;)V	b	onTestSuccess
		p	0		test
	f	Lqx;	a	DELEGATE
c	qn	net/minecraft/gametest/framework/JUnitLikeTestReporter
	m	(Ljava/io/File;)V	<init>	<init>
		p	1		file
	m	()V	a	finish
	m	(Ljava/io/File;)V	a	save
		p	1		file
	m	(Lqe;)V	a	onTestFailed
		p	1		test
	m	(Lqe;Ljava/lang/String;)Lorg/w3c/dom/Element;	a	createTestCase
		p	1		test
		p	2		name
	m	(Lqe;)V	b	onTestSuccess
		p	1		test
	f	Lorg/w3c/dom/Document;	a	document
	f	Lorg/w3c/dom/Element;	b	testSuite
	f	Lcom/google/common/base/Stopwatch;	c	stopwatch
	f	Ljava/io/File;	d	destination
c	qo	net/minecraft/gametest/framework/LogTestReporter
	m	(Lqe;)V	a	onTestFailed
		p	1		test
	m	(Lqe;)V	b	onTestSuccess
		p	1		test
	f	Lorg/slf4j/Logger;	a	LOGGER
c	qp	net/minecraft/gametest/framework/MultipleTestTracker
	m	(Ljava/util/Collection;)V	<init>	<init>
		p	1		tests
	m	()I	a	getFailedRequiredCount
	m	(Ljava/lang/StringBuffer;Lqe;)V	a	lambda$getProgressBar$1
		p	1		test
	m	(Ljava/util/function/Consumer;)V	a	addFailureListener
		p	1		onFailed
	m	(Lqe;)V	a	addTestToTrack
		p	1		test
	m	(Lqf;)V	a	addListener
		p	1		listener
	m	(Lqf;Lqe;)V	a	lambda$addListener$0
		p	1		test
	m	()I	b	getFailedOptionalCount
	m	()I	c	getDoneCount
	m	()Z	d	hasFailedRequired
	m	()Z	e	hasFailedOptional
	m	()Ljava/util/Collection;	f	getFailedRequired
	m	()Ljava/util/Collection;	g	getFailedOptional
	m	()I	h	getTotalCount
	m	()Z	i	isDone
	m	()Ljava/lang/String;	j	getProgressBar
	f	C	a	NOT_STARTED_TEST_CHAR
	f	C	b	ONGOING_TEST_CHAR
	f	C	c	SUCCESSFUL_TEST_CHAR
	f	C	d	FAILED_OPTIONAL_TEST_CHAR
	f	C	e	FAILED_REQUIRED_TEST_CHAR
	f	Ljava/util/Collection;	f	tests
	f	Ljava/util/Collection;	g	listeners
c	qp$1	net/minecraft/gametest/framework/MultipleTestTracker$1
	m	(Lqe;)V	a	testStructureLoaded
		p	1		test
	m	(Lqe;)V	b	testPassed
		p	1		test
	m	(Lqe;)V	c	testFailed
		p	1		test
	f	Ljava/util/function/Consumer;	a	val$listener
	f	Lqp;	b	this$0
c	qq	net/minecraft/gametest/framework/ReportGameListener
	m	(Lqe;Lqk;Lgt;)V	<init>	<init>
		p	1		test
		p	2		testManager
		p	3		pos
	m	()V	a	rerunTest
	m	(Laip;Lgt;Ljava/lang/String;)V	a	showRedBox
		p	0		world
		p	1		pos
		p	2		message
	m	(Laip;Ln;Ljava/lang/String;)V	a	say
		p	0		world
		p	1		formatting
		p	2		message
	m	(Laiq;)Z	a	lambda$say$1
		p	0		player
	m	(Ljava/lang/String;Ln;Laiq;)V	a	lambda$say$2
		p	2		player
	m	(Ljava/lang/String;ZLjava/lang/String;)Lcfv;	a	createBook
		p	0		text
		p	1		required
		p	2		output
	m	(Ljava/lang/StringBuffer;Ljava/lang/String;)V	a	lambda$createBook$0
		p	1		line
	m	(Lqe;)V	a	testStructureLoaded
		p	1		test
	m	(Lqe;Lcpi;)V	a	spawnBeacon
		p	0		test
		p	1		block
	m	(Lqe;Ljava/lang/String;)V	a	reportPassed
		p	0		test
		p	1		output
	m	(Lqe;Ljava/lang/Throwable;)V	a	reportFailure
		p	0		test
		p	1		output
	m	(Lqe;)V	b	testPassed
		p	1		test
	m	(Lqe;Ljava/lang/String;)V	b	visualizePassedTest
		p	0		test
		p	1		output
	m	(Lqe;Ljava/lang/Throwable;)V	b	visualizeFailedTest
		p	0		test
		p	1		output
	m	(Lqe;)V	c	testFailed
		p	1		test
	m	(Lqe;Ljava/lang/String;)V	c	spawnLectern
		p	0		test
		p	1		output
	f	I	a	attempts
	f	I	b	successes
	f	Lqe;	c	originalTestInfo
	f	Lqk;	d	testTicker
	f	Lgt;	e	structurePos
c	qr	net/minecraft/gametest/framework/StructureUtils
	m	(I)Lcvq;	a	getRotationForRotationSteps
		p	0		steps
	m	(ILaip;Lgt;)V	a	lambda$clearSpaceForStructure$2
		p	2		pos
	m	(ILgt;Laip;)V	a	clearBlock
		p	0		altitude
		p	1		pos
		p	2		world
	m	(Lbfh;)Z	a	lambda$clearSpaceForStructure$3
		p	0		entity
	m	(Lcvq;)I	a	getRotationStepsForRotation
		p	0		rotation
	m	(Ldao;)Lecz;	a	getStructureBounds
		p	0		structureBlockEntity
	m	(Ldrh;ILaip;)V	a	clearSpaceForStructure
		p	0		area
		p	1		altitude
		p	2		world
	m	(Lgt;ILaip;)Ljava/util/Optional;	a	findStructureBlockContainingPos
		p	0		pos
		p	1		radius
		p	2		world
	m	(Lgt;Laip;)V	a	forceLoadChunks
		p	0		pos
		p	1		world
	m	(Lgt;Laip;Lgt;)Z	a	lambda$findStructureBlockContainingPos$4
		p	2		structureBlockPos
	m	(Lgt;Lgt;)I	a	lambda$findNearestStructureBlock$5
		p	1		pos
	m	(Lgt;Lgt;Laip;)Z	a	doesStructureContain
		p	0		structureBlockPos
		p	1		pos
		p	2		world
	m	(Lgt;Lgt;Lcvq;Laip;)V	a	addCommandBlockAndButtonToStartTest
		p	0		pos
		p	1		relativePos
		p	2		rotation
		p	3		world
	m	(Lgt;Lhy;Lcvq;)Ldrh;	a	getStructureBoundingBox
		p	0		pos
		p	1		relativePos
		p	2		rotation
	m	(Ljava/lang/String;Laip;)Ldvh;	a	getStructureTemplate
		p	0		templateId
		p	1		world
	m	(Ljava/lang/String;Lgt;Lcvq;ILaip;Z)Ldao;	a	spawnStructure
		p	0		templateName
		p	1		pos
		p	2		rotation
		p	4		world
	m	(Ljava/lang/String;Lgt;Lcvq;Laip;Z)Ldao;	a	createStructureBlock
		p	0		name
		p	1		pos
		p	2		rotation
		p	3		world
	m	(Ljava/lang/String;Lgt;Lhy;Lcvq;Laip;)V	a	createNewEmptyStructureBlock
		p	0		testName
		p	1		pos
		p	2		relativePos
		p	3		rotation
		p	4		world
	m	(Ljava/nio/file/Path;)Lre;	a	tryLoadStructure
		p	0		path
	m	([Ljava/lang/String;)V	a	main
		p	0		args
	m	(Ldao;)Ldrh;	b	getStructureBoundingBox
		p	0		structureBlockEntity
	m	(Lgt;ILaip;)Lgt;	b	findNearestStructureBlock
		p	0		pos
		p	1		radius
		p	2		world
	m	(Ljava/nio/file/Path;)V	b	lambda$main$1
		p	0		path
	m	(Lgt;ILaip;)Ljava/util/Collection;	c	findStructureBlocks
		p	0		pos
		p	1		radius
		p	2		world
	m	(Ljava/nio/file/Path;)Z	c	lambda$main$0
		p	0		path
	f	Ljava/lang/String;	a	DEFAULT_TEST_STRUCTURES_DIR
	f	Ljava/lang/String;	b	testStructuresDir
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	I	d	HOW_MANY_CHUNKS_TO_LOAD_IN_EACH_DIRECTION_OF_STRUCTURE
c	qr$1	net/minecraft/gametest/framework/StructureUtils$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$Rotation
c	qs	net/minecraft/gametest/framework/TeamcityTestReporter
	m	(Lqe;)V	a	onTestFailed
		p	1		test
	m	(Lqe;)V	b	onTestSuccess
		p	1		test
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lcom/google/common/escape/Escaper;	b	ESCAPER
c	qt	net/minecraft/gametest/framework/TestClassNameArgument
	m	()Lqt;	a	testClassName
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/String;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/lang/String;	a	getTestClassName
		p	0		context
		p	1		name
	f	Ljava/util/Collection;	a	EXAMPLES
c	qu	net/minecraft/gametest/framework/TestCommand
	m	(Laip;Lgt;Lqp;)V	a	runTest
		p	0		world
		p	1		pos
		p	2		tests
	m	(Laip;Ljava/lang/String;Ln;)V	a	say
		p	0		world
		p	1		message
		p	2		formatting
	m	(Laip;Lqp;)V	a	showTestSummaryIfAllDone
		p	0		world
		p	1		tests
	m	(Laip;Lqp;Lgt;)V	a	lambda$runAllNearbyTests$24
		p	2		pos
	m	(Laiq;)Z	a	lambda$say$26
		p	0		player
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$23
		p	0		context
	m	(Ldr;)I	a	runNearbyTest
		p	0		source
	m	(Ldr;I)I	a	clearAllTests
		p	0		source
		p	1		radius
	m	(Ldr;II)I	a	runAllTests
		p	0		source
		p	1		rotationSteps
		p	2		sizeZ
	m	(Ldr;Ljava/lang/String;)I	a	showPos
		p	0		source
		p	1		variableName
	m	(Ldr;Ljava/lang/String;II)I	a	runAllTestsInClass
		p	0		source
		p	1		testClass
		p	2		rotationSteps
		p	3		sizeZ
	m	(Ldr;Ljava/lang/String;III)I	a	createNewStructure
		p	0		source
		p	1		testName
		p	2		x
		p	3		y
		p	4		z
	m	(Ldr;Ljava/util/Collection;II)V	a	runTests
		p	0		source
		p	1		testFunctions
		p	2		rotationSteps
	m	(Ldr;Lqv;I)I	a	runTest
		p	0		source
		p	1		testFunction
		p	2		rotationSteps
	m	(Ldr;ZII)I	a	runLastFailedTests
		p	0		source
		p	1		requiredOnly
		p	2		rotationSteps
		p	3		sizeZ
	m	(Ln;Ljava/lang/String;Laiq;)V	a	lambda$say$27
		p	2		player
	m	(Lqe;)V	a	lambda$runTests$25
		p	0		test
	m	(Lqv;Laip;)V	a	runTestPreparation
		p	0		testFunction
		p	1		world
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$22
		p	0		context
	m	(Ldr;)I	b	runAllNearbyTests
		p	0		source
	m	(Ldr;Ljava/lang/String;)V	b	say
		p	0		source
		p	1		message
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$21
		p	0		context
	m	(Ldr;)I	c	exportNearestTestStructure
		p	0		source
	m	(Ldr;Ljava/lang/String;)I	c	exportTestStructure
		p	0		source
		p	1		testName
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$20
		p	0		context
	m	(Ldr;Ljava/lang/String;)I	d	importTestStructure
		p	0		source
		p	1		testName
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$19
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$18
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$17
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	h	lambda$register$16
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	i	lambda$register$15
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	j	lambda$register$14
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	k	lambda$register$13
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	l	lambda$register$12
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	m	lambda$register$11
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	n	lambda$register$10
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	o	lambda$register$9
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	p	lambda$register$8
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	q	lambda$register$7
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	r	lambda$register$6
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	s	lambda$register$5
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	t	lambda$register$4
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	u	lambda$register$3
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	v	lambda$register$2
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	w	lambda$register$1
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	x	lambda$register$0
		p	0		context
	f	I	a	DEFAULT_CLEAR_RADIUS
	f	I	b	MAX_CLEAR_RADIUS
	f	I	c	STRUCTURE_BLOCK_NEARBY_SEARCH_RADIUS
	f	I	d	STRUCTURE_BLOCK_FULL_SEARCH_RADIUS
	f	I	e	TEST_POS_Z_OFFSET_FROM_PLAYER
	f	I	f	SHOW_POS_DURATION_MS
	f	I	g	DEFAULT_X_SIZE
	f	I	h	DEFAULT_Y_SIZE
	f	I	i	DEFAULT_Z_SIZE
c	qu$a	net/minecraft/gametest/framework/TestCommand$TestSummaryDisplayer
	m	(Laip;Lqp;)V	<init>	<init>
		p	1		world
		p	2		tests
	m	(Lqe;)V	a	testStructureLoaded
		p	1		test
	m	(Lqe;)V	b	testPassed
		p	1		test
	m	(Lqe;)V	c	testFailed
		p	1		test
	f	Laip;	a	level
	f	Lqp;	b	tracker
c	qv	net/minecraft/gametest/framework/TestFunction
	m	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;IJZLjava/util/function/Consumer;)V	<init>	<init>
		p	1		batchId
		p	2		templatePath
		p	3		templateName
		p	4		tickLimit
		p	5		duration
		p	7		required
		p	8		starter
	m	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcvq;IJZIILjava/util/function/Consumer;)V	<init>	<init>
		p	1		batchId
		p	2		templatePath
		p	3		templateName
		p	4		rotation
		p	5		tickLimit
		p	6		duration
		p	8		required
		p	9		requiredSuccesses
		p	10		maxAttempts
		p	11		starter
	m	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcvq;IJZLjava/util/function/Consumer;)V	<init>	<init>
		p	1		batchId
		p	2		templatePath
		p	3		templateName
		p	4		rotation
		p	5		tickLimit
		p	6		duration
		p	8		required
		p	9		starter
	m	()Ljava/lang/String;	a	getTestName
	m	(Lqd;)V	a	run
		p	1		context
	m	()Ljava/lang/String;	b	getStructureName
	m	()I	c	getMaxTicks
	m	()Z	d	isRequired
	m	()Ljava/lang/String;	e	getBatchName
	m	()J	f	getSetupTicks
	m	()Lcvq;	g	getRotation
	m	()Z	h	isFlaky
	m	()I	i	getMaxAttempts
	m	()I	j	getRequiredSuccesses
	f	Ljava/lang/String;	a	batchName
	f	Ljava/lang/String;	b	testName
	f	Ljava/lang/String;	c	structureName
	f	Z	d	required
	f	I	e	maxAttempts
	f	I	f	requiredSuccesses
	f	Ljava/util/function/Consumer;	g	function
	f	I	h	maxTicks
	f	J	i	setupTicks
	f	Lcvq;	j	rotation
c	qw	net/minecraft/gametest/framework/TestFunctionArgument
	m	()Lqw;	a	testFunctionArgument
	m	(Lcom/mojang/brigadier/StringReader;)Lqv;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lqv;	a	getTestFunction
		p	0		context
		p	1		name
	f	Ljava/util/Collection;	a	EXAMPLES
c	qx	net/minecraft/gametest/framework/TestReporter
	m	()V	a	finish
	m	(Lqe;)V	a	onTestFailed
		p	1		test
	m	(Lqe;)V	b	onTestSuccess
		p	1		test
c	qy	net/minecraft/gametest/framework/package-info
c	qz	net/minecraft/locale/Language
	m	()Lqz;	a	getInstance
	m	(Ljava/io/InputStream;Ljava/util/function/BiConsumer;)V	a	loadFromJson
		p	0		inputStream
		p	1		entryConsumer
	m	(Ljava/lang/String;)Ljava/lang/String;	a	getOrDefault
		p	1		key
	m	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	a	getOrDefault
		p	1		key
		p	2		fallback
	m	(Ljava/util/List;)Ljava/util/List;	a	getVisualOrder
		p	1		texts
	m	(Lqz;)V	a	inject
		p	0		language
	m	(Ltn;)Laov;	a	getVisualOrder
		p	1		text
	m	()Z	b	isDefaultRightToLeft
	m	(Ljava/lang/String;)Z	b	has
		p	1		key
	m	()Lqz;	c	loadDefault
	f	Ljava/lang/String;	a	DEFAULT
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Lcom/google/gson/Gson;	c	GSON
	f	Ljava/util/regex/Pattern;	d	UNSUPPORTED_FORMAT_PATTERN
	f	Lqz;	e	instance
c	qz$1	net/minecraft/locale/Language$1
	m	(Laow;Luf;Ljava/lang/String;)Ljava/util/Optional;	a	lambda$getVisualOrder$0
		p	1		style
		p	2		string
	m	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	a	getOrDefault
		p	1		key
		p	2		fallback
	m	(Ltn;)Laov;	a	getVisualOrder
		p	1		text
	m	(Ltn;Laow;)Z	a	lambda$getVisualOrder$1
		p	1		visitor
	m	()Z	b	isDefaultRightToLeft
	m	(Ljava/lang/String;)Z	b	has
		p	1		key
	f	Ljava/util/Map;	b	val$storage
c	ra	net/minecraft/locale/package-info
c	rb	net/minecraft/nbt/ByteArrayTag
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		value
	m	([B)V	<init>	<init>
		p	1		value
	m	()I	a	sizeInBytes
	m	(I)Lrc;	a	get
	m	(ILrc;)Lrc;	a	set
	m	(ILrx;)Z	a	setTag
		p	1		index
		p	2		element
	m	(Ljava/io/DataOutput;)V	a	write
		p	1		output
	m	(Ljava/util/List;)[B	a	toArray
		p	0		list
	m	(Lru;)Lru$b;	a	accept
		p	1		visitor
	m	(Lsb;)V	a	accept
		p	1		visitor
	m	()B	b	getId
	m	(I)Lrc;	b	remove
	m	(ILrc;)V	b	add
	m	(ILrx;)Z	b	addTag
		p	1		index
		p	2		element
	m	()Lrz;	c	getType
	m	(I)Lrx;	c	remove
	m	(ILrx;)V	c	add
	m	()Lrx;	d	copy
	m	(ILrx;)Lrx;	d	set
	m	()[B	e	getAsByteArray
	m	()B	f	getElementType
	f	Lrz;	a	TYPE
	f	I	b	SELF_SIZE_IN_BYTES
	f	[B	c	data
c	rb$1	net/minecraft/nbt/ByteArrayTag$1
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/io/DataInput;)V	a	skip
		p	1		input
	m	(Ljava/io/DataInput;ILrn;)Lrb;	a	load
	m	(Ljava/io/DataInput;Lru;)Lru$b;	a	parse
		p	1		input
		p	2		visitor
	m	()Ljava/lang/String;	b	getPrettyName
	m	(Ljava/io/DataInput;ILrn;)Lrx;	b	load
		p	1		input
		p	2		depth
		p	3		tracker
c	rc	net/minecraft/nbt/ByteTag
	m	(B)V	<init>	<init>
		p	1		value
	m	()I	a	sizeInBytes
	m	(B)Lrc;	a	valueOf
		p	0		value
	m	(Ljava/io/DataOutput;)V	a	write
		p	1		output
	m	(Lru;)Lru$b;	a	accept
		p	1		visitor
	m	(Lsb;)V	a	accept
		p	1		visitor
	m	(Z)Lrc;	a	valueOf
		p	0		value
	m	()B	b	getId
	m	()Lrz;	c	getType
	m	()Lrx;	d	copy
	m	()Lrc;	e	copy
	m	()J	f	getAsLong
	m	()I	g	getAsInt
	m	()S	h	getAsShort
	m	()B	i	getAsByte
	m	()D	j	getAsDouble
	m	()F	k	getAsFloat
	m	()Ljava/lang/Number;	l	getAsNumber
	f	Lrz;	a	TYPE
	f	Lrc;	b	ZERO
	f	Lrc;	c	ONE
	f	I	w	SELF_SIZE_IN_BYTES
	f	B	x	data
c	rc$1	net/minecraft/nbt/ByteTag$1
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/io/DataInput;ILrn;)Lrc;	a	load
	m	(Ljava/io/DataInput;Lru;)Lru$b;	a	parse
		p	1		input
		p	2		visitor
	m	()Ljava/lang/String;	b	getPrettyName
	m	(Ljava/io/DataInput;ILrn;)Lrx;	b	load
		p	1		input
		p	2		depth
		p	3		tracker
	m	()I	c	size
	m	()Z	d	isValue
c	rc$a	net/minecraft/nbt/ByteTag$Cache
	f	[Lrc;	a	cache
c	rd	net/minecraft/nbt/CollectionTag
	m	(ILrx;)Z	a	setTag
		p	1		index
		p	2		element
	m	(ILrx;)Z	b	addTag
		p	1		index
		p	2		element
	m	(I)Lrx;	c	remove
	m	(ILrx;)V	c	add
	m	(ILrx;)Lrx;	d	set
	m	()B	f	getElementType
c	re	net/minecraft/nbt/CompoundTag
	m	(Ljava/util/Map;)V	<init>	<init>
		p	1		entries
	m	()I	a	sizeInBytes
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/DataResult;	a	lambda$static$1
	m	(Ljava/io/DataInput;Lrn;)B	a	readNamedTagType
		p	0		input
		p	1		tracker
	m	(Ljava/io/DataOutput;)V	a	write
		p	1		output
	m	(Ljava/lang/String;)Ljava/util/UUID;	a	getUUID
		p	1		key
	m	(Ljava/lang/String;B)V	a	putByte
		p	1		key
		p	2		value
	m	(Ljava/lang/String;D)V	a	putDouble
		p	1		key
		p	2		value
	m	(Ljava/lang/String;F)V	a	putFloat
		p	1		key
		p	2		value
	m	(Ljava/lang/String;I)V	a	putInt
		p	1		key
		p	2		value
	m	(Ljava/lang/String;J)V	a	putLong
		p	1		key
		p	2		value
	m	(Ljava/lang/String;Ljava/lang/String;)V	a	putString
		p	1		key
		p	2		value
	m	(Ljava/lang/String;Ljava/util/List;)V	a	putByteArray
		p	1		key
		p	2		value
	m	(Ljava/lang/String;Ljava/util/UUID;)V	a	putUUID
		p	1		key
		p	2		value
	m	(Ljava/lang/String;Lrx;)Lrx;	a	put
		p	1		key
		p	2		element
	m	(Ljava/lang/String;Lrx;Ljava/io/DataOutput;)V	a	writeNamedTag
		p	0		key
		p	1		element
		p	2		output
	m	(Ljava/lang/String;Lrz;Ljava/lang/ClassCastException;)Lo;	a	createReport
		p	1		key
		p	2		reader
		p	3		exception
	m	(Ljava/lang/String;S)V	a	putShort
		p	1		key
		p	2		value
	m	(Ljava/lang/String;Z)V	a	putBoolean
		p	1		key
		p	2		value
	m	(Ljava/lang/String;[B)V	a	putByteArray
		p	1		key
		p	2		value
	m	(Ljava/lang/String;[I)V	a	putIntArray
		p	1		key
		p	2		value
	m	(Ljava/lang/String;[J)V	a	putLongArray
		p	1		key
		p	2		value
	m	(Lre;)Lre;	a	merge
		p	1		source
	m	(Lru;)Lru$b;	a	accept
		p	1		visitor
	m	(Lrx;)Ljava/lang/String;	a	lambda$static$0
	m	(Lrz;Ljava/lang/String;Ljava/io/DataInput;ILrn;)Lrx;	a	readNamedTagData
		p	0		reader
		p	1		key
		p	2		input
		p	3		depth
		p	4		tracker
	m	(Lsb;)V	a	accept
		p	1		visitor
	m	()B	b	getId
	m	(Ljava/io/DataInput;Lrn;)Ljava/lang/String;	b	readNamedTagName
		p	0		input
		p	1		tracker
	m	(Ljava/lang/String;)Z	b	hasUUID
		p	1		key
	m	(Ljava/lang/String;I)Z	b	contains
		p	1		key
		p	2		type
	m	(Ljava/lang/String;Ljava/util/List;)V	b	putIntArray
		p	1		key
		p	2		value
	m	(Lre;)Lcom/mojang/serialization/Dynamic;	b	lambda$static$2
		p	0		nbt
	m	()Lrz;	c	getType
	m	(Ljava/lang/String;)Lrx;	c	get
		p	1		key
	m	(Ljava/lang/String;I)Lrk;	c	getList
		p	1		key
		p	2		type
	m	(Ljava/lang/String;Ljava/util/List;)V	c	putLongArray
		p	1		key
		p	2		value
	m	()Lrx;	d	copy
	m	(Ljava/lang/String;)B	d	getTagType
		p	1		key
	m	()Ljava/util/Set;	e	getAllKeys
	m	(Ljava/lang/String;)Z	e	contains
		p	1		key
	m	()I	f	size
	m	(Ljava/lang/String;)B	f	getByte
		p	1		key
	m	()Z	g	isEmpty
	m	(Ljava/lang/String;)S	g	getShort
		p	1		key
	m	()Lre;	h	copy
	m	(Ljava/lang/String;)I	h	getInt
		p	1		key
	m	()Ljava/util/Map;	i	entries
	m	(Ljava/lang/String;)J	i	getLong
		p	1		key
	m	(Ljava/lang/String;)F	j	getFloat
		p	1		key
	m	(Ljava/lang/String;)D	k	getDouble
		p	1		key
	m	(Ljava/lang/String;)Ljava/lang/String;	l	getString
		p	1		key
	m	(Ljava/lang/String;)[B	m	getByteArray
		p	1		key
	m	(Ljava/lang/String;)[I	n	getIntArray
		p	1		key
	m	(Ljava/lang/String;)[J	o	getLongArray
		p	1		key
	m	(Ljava/lang/String;)Lre;	p	getCompound
		p	1		key
	m	(Ljava/lang/String;)Z	q	getBoolean
		p	1		key
	m	(Ljava/lang/String;)V	r	remove
		p	1		key
	m	(Ljava/lang/String;)Ljava/lang/String;	s	lambda$createReport$3
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lrz;	b	TYPE
	f	I	c	SELF_SIZE_IN_BYTES
	f	I	w	MAP_ENTRY_SIZE_IN_BYTES
	f	Ljava/util/Map;	x	tags
c	re$1	net/minecraft/nbt/CompoundTag$1
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/io/DataInput;)V	a	skip
		p	1		input
	m	(Ljava/io/DataInput;ILrn;)Lre;	a	load
	m	(Ljava/io/DataInput;Lru;)Lru$b;	a	parse
		p	1		input
		p	2		visitor
	m	()Ljava/lang/String;	b	getPrettyName
	m	(Ljava/io/DataInput;ILrn;)Lrx;	b	load
		p	1		input
		p	2		depth
		p	3		tracker
c	re$2	net/minecraft/nbt/CompoundTag$2
	f	[I	a	$SwitchMap$net$minecraft$nbt$StreamTagVisitor$EntryResult
	f	[I	b	$SwitchMap$net$minecraft$nbt$StreamTagVisitor$ValueResult
c	rf	net/minecraft/nbt/DoubleTag
	m	(D)V	<init>	<init>
		p	1		value
	m	()I	a	sizeInBytes
	m	(D)Lrf;	a	valueOf
		p	0		value
	m	(Ljava/io/DataOutput;)V	a	write
		p	1		output
	m	(Lru;)Lru$b;	a	accept
		p	1		visitor
	m	(Lsb;)V	a	accept
		p	1		visitor
	m	()B	b	getId
	m	()Lrz;	c	getType
	m	()Lrx;	d	copy
	m	()Lrf;	e	copy
	m	()J	f	getAsLong
	m	()I	g	getAsInt
	m	()S	h	getAsShort
	m	()B	i	getAsByte
	m	()D	j	getAsDouble
	m	()F	k	getAsFloat
	m	()Ljava/lang/Number;	l	getAsNumber
	f	Lrf;	a	ZERO
	f	Lrz;	b	TYPE
	f	I	c	SELF_SIZE_IN_BYTES
	f	D	w	data
c	rf$1	net/minecraft/nbt/DoubleTag$1
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/io/DataInput;ILrn;)Lrf;	a	load
	m	(Ljava/io/DataInput;Lru;)Lru$b;	a	parse
		p	1		input
		p	2		visitor
	m	()Ljava/lang/String;	b	getPrettyName
	m	(Ljava/io/DataInput;ILrn;)Lrx;	b	load
		p	1		input
		p	2		depth
		p	3		tracker
	m	()I	c	size
	m	()Z	d	isValue
c	rg	net/minecraft/nbt/EndTag
	m	()I	a	sizeInBytes
	m	(Ljava/io/DataOutput;)V	a	write
		p	1		output
	m	(Lru;)Lru$b;	a	accept
		p	1		visitor
	m	(Lsb;)V	a	accept
		p	1		visitor
	m	()B	b	getId
	m	()Lrz;	c	getType
	m	()Lrx;	d	copy
	m	()Lrg;	e	copy
	f	Lrz;	a	TYPE
	f	Lrg;	b	INSTANCE
	f	I	c	SELF_SIZE_IN_BYTES
c	rg$1	net/minecraft/nbt/EndTag$1
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/io/DataInput;)V	a	skip
		p	1		input
	m	(Ljava/io/DataInput;I)V	a	skip
		p	1		input
		p	2		count
	m	(Ljava/io/DataInput;ILrn;)Lrg;	a	load
	m	(Ljava/io/DataInput;Lru;)Lru$b;	a	parse
		p	1		input
		p	2		visitor
	m	()Ljava/lang/String;	b	getPrettyName
	m	(Ljava/io/DataInput;ILrn;)Lrx;	b	load
		p	1		input
		p	2		depth
		p	3		tracker
	m	()Z	d	isValue
c	rh	net/minecraft/nbt/FloatTag
	m	(F)V	<init>	<init>
		p	1		value
	m	()I	a	sizeInBytes
	m	(F)Lrh;	a	valueOf
		p	0		value
	m	(Ljava/io/DataOutput;)V	a	write
		p	1		output
	m	(Lru;)Lru$b;	a	accept
		p	1		visitor
	m	(Lsb;)V	a	accept
		p	1		visitor
	m	()B	b	getId
	m	()Lrz;	c	getType
	m	()Lrx;	d	copy
	m	()Lrh;	e	copy
	m	()J	f	getAsLong
	m	()I	g	getAsInt
	m	()S	h	getAsShort
	m	()B	i	getAsByte
	m	()D	j	getAsDouble
	m	()F	k	getAsFloat
	m	()Ljava/lang/Number;	l	getAsNumber
	f	Lrh;	a	ZERO
	f	Lrz;	b	TYPE
	f	I	c	SELF_SIZE_IN_BYTES
	f	F	w	data
c	rh$1	net/minecraft/nbt/FloatTag$1
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/io/DataInput;ILrn;)Lrh;	a	load
	m	(Ljava/io/DataInput;Lru;)Lru$b;	a	parse
		p	1		input
		p	2		visitor
	m	()Ljava/lang/String;	b	getPrettyName
	m	(Ljava/io/DataInput;ILrn;)Lrx;	b	load
		p	1		input
		p	2		depth
		p	3		tracker
	m	()I	c	size
	m	()Z	d	isValue
c	ri	net/minecraft/nbt/IntArrayTag
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		value
	m	([I)V	<init>	<init>
		p	1		value
	m	()I	a	sizeInBytes
	m	(I)Lrj;	a	get
	m	(ILrj;)Lrj;	a	set
	m	(ILrx;)Z	a	setTag
		p	1		index
		p	2		element
	m	(Ljava/io/DataOutput;)V	a	write
		p	1		output
	m	(Ljava/util/List;)[I	a	toArray
		p	0		list
	m	(Lru;)Lru$b;	a	accept
		p	1		visitor
	m	(Lsb;)V	a	accept
		p	1		visitor
	m	()B	b	getId
	m	(I)Lrj;	b	remove
	m	(ILrj;)V	b	add
	m	(ILrx;)Z	b	addTag
		p	1		index
		p	2		element
	m	()Lrz;	c	getType
	m	(I)Lrx;	c	remove
	m	(ILrx;)V	c	add
	m	()Lrx;	d	copy
	m	(ILrx;)Lrx;	d	set
	m	()Lri;	e	copy
	m	()B	f	getElementType
	m	()[I	g	getAsIntArray
	f	Lrz;	a	TYPE
	f	I	b	SELF_SIZE_IN_BYTES
	f	[I	c	data
c	ri$1	net/minecraft/nbt/IntArrayTag$1
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/io/DataInput;)V	a	skip
		p	1		input
	m	(Ljava/io/DataInput;ILrn;)Lri;	a	load
	m	(Ljava/io/DataInput;Lru;)Lru$b;	a	parse
		p	1		input
		p	2		visitor
	m	()Ljava/lang/String;	b	getPrettyName
	m	(Ljava/io/DataInput;ILrn;)Lrx;	b	load
		p	1		input
		p	2		depth
		p	3		tracker
c	rj	net/minecraft/nbt/IntTag
	m	(I)V	<init>	<init>
		p	1		value
	m	()I	a	sizeInBytes
	m	(I)Lrj;	a	valueOf
		p	0		value
	m	(Ljava/io/DataOutput;)V	a	write
		p	1		output
	m	(Lru;)Lru$b;	a	accept
		p	1		visitor
	m	(Lsb;)V	a	accept
		p	1		visitor
	m	()B	b	getId
	m	()Lrz;	c	getType
	m	()Lrx;	d	copy
	m	()Lrj;	e	copy
	m	()J	f	getAsLong
	m	()I	g	getAsInt
	m	()S	h	getAsShort
	m	()B	i	getAsByte
	m	()D	j	getAsDouble
	m	()F	k	getAsFloat
	m	()Ljava/lang/Number;	l	getAsNumber
	f	Lrz;	a	TYPE
	f	I	b	SELF_SIZE_IN_BYTES
	f	I	c	data
c	rj$1	net/minecraft/nbt/IntTag$1
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/io/DataInput;ILrn;)Lrj;	a	load
	m	(Ljava/io/DataInput;Lru;)Lru$b;	a	parse
		p	1		input
		p	2		visitor
	m	()Ljava/lang/String;	b	getPrettyName
	m	(Ljava/io/DataInput;ILrn;)Lrx;	b	load
		p	1		input
		p	2		depth
		p	3		tracker
	m	()I	c	size
	m	()Z	d	isValue
c	rj$a	net/minecraft/nbt/IntTag$Cache
	f	[Lrj;	a	cache
	f	I	b	HIGH
	f	I	c	LOW
c	rk	net/minecraft/nbt/ListTag
	m	(Ljava/util/List;B)V	<init>	<init>
		p	1		list
		p	2		type
	m	()I	a	sizeInBytes
	m	(I)Lre;	a	getCompound
		p	1		index
	m	(ILrx;)Z	a	setTag
		p	1		index
		p	2		element
	m	(Ljava/io/DataOutput;)V	a	write
		p	1		output
	m	(Lru;)Lru$b;	a	accept
		p	1		visitor
	m	(Lrx;)Z	a	updateType
		p	1		element
	m	(Lsb;)V	a	accept
		p	1		visitor
	m	()B	b	getId
	m	(I)Lrk;	b	getList
		p	1		index
	m	(ILrx;)Z	b	addTag
		p	1		index
		p	2		element
	m	()Lrz;	c	getType
	m	(I)Lrx;	c	remove
	m	(ILrx;)V	c	add
	m	()Lrx;	d	copy
	m	(I)S	d	getShort
		p	1		index
	m	(ILrx;)Lrx;	d	set
	m	()Lrk;	e	copy
	m	(I)I	e	getInt
		p	1		index
	m	()B	f	getElementType
	m	(I)[I	f	getIntArray
		p	1		index
	m	()V	g	updateTypeAfterRemove
	m	(I)[J	g	getLongArray
		p	1		index
	m	(I)D	h	getDouble
		p	1		index
	m	(I)F	i	getFloat
		p	1		index
	m	(I)Ljava/lang/String;	j	getString
		p	1		index
	m	(I)Lrx;	k	get
	f	Lrz;	a	TYPE
	f	I	b	SELF_SIZE_IN_BYTES
	f	Ljava/util/List;	c	list
	f	B	w	type
c	rk$1	net/minecraft/nbt/ListTag$1
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/io/DataInput;)V	a	skip
		p	1		input
	m	(Ljava/io/DataInput;ILrn;)Lrk;	a	load
	m	(Ljava/io/DataInput;Lru;)Lru$b;	a	parse
		p	1		input
		p	2		visitor
	m	()Ljava/lang/String;	b	getPrettyName
	m	(Ljava/io/DataInput;ILrn;)Lrx;	b	load
		p	1		input
		p	2		depth
		p	3		tracker
c	rk$2	net/minecraft/nbt/ListTag$2
	f	[I	a	$SwitchMap$net$minecraft$nbt$StreamTagVisitor$ValueResult
	f	[I	b	$SwitchMap$net$minecraft$nbt$StreamTagVisitor$EntryResult
c	rl	net/minecraft/nbt/LongArrayTag
	m	(Lit/unimi/dsi/fastutil/longs/LongSet;)V	<init>	<init>
		p	1		value
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		value
	m	([J)V	<init>	<init>
		p	1		value
	m	()I	a	sizeInBytes
	m	(I)Lrm;	a	get
	m	(ILrm;)Lrm;	a	set
	m	(ILrx;)Z	a	setTag
		p	1		index
		p	2		element
	m	(Ljava/io/DataOutput;)V	a	write
		p	1		output
	m	(Ljava/util/List;)[J	a	toArray
		p	0		list
	m	(Lru;)Lru$b;	a	accept
		p	1		visitor
	m	(Lsb;)V	a	accept
		p	1		visitor
	m	()B	b	getId
	m	(I)Lrm;	b	remove
	m	(ILrm;)V	b	add
	m	(ILrx;)Z	b	addTag
		p	1		index
		p	2		element
	m	()Lrz;	c	getType
	m	(I)Lrx;	c	remove
	m	(ILrx;)V	c	add
	m	()Lrx;	d	copy
	m	(ILrx;)Lrx;	d	set
	m	()Lrl;	e	copy
	m	()B	f	getElementType
	m	()[J	g	getAsLongArray
	f	Lrz;	a	TYPE
	f	I	b	SELF_SIZE_IN_BYTES
	f	[J	c	data
c	rl$1	net/minecraft/nbt/LongArrayTag$1
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/io/DataInput;)V	a	skip
		p	1		input
	m	(Ljava/io/DataInput;ILrn;)Lrl;	a	load
	m	(Ljava/io/DataInput;Lru;)Lru$b;	a	parse
		p	1		input
		p	2		visitor
	m	()Ljava/lang/String;	b	getPrettyName
	m	(Ljava/io/DataInput;ILrn;)Lrx;	b	load
		p	1		input
		p	2		depth
		p	3		tracker
c	rm	net/minecraft/nbt/LongTag
	m	(J)V	<init>	<init>
		p	1		value
	m	()I	a	sizeInBytes
	m	(J)Lrm;	a	valueOf
		p	0		value
	m	(Ljava/io/DataOutput;)V	a	write
		p	1		output
	m	(Lru;)Lru$b;	a	accept
		p	1		visitor
	m	(Lsb;)V	a	accept
		p	1		visitor
	m	()B	b	getId
	m	()Lrz;	c	getType
	m	()Lrx;	d	copy
	m	()Lrm;	e	copy
	m	()J	f	getAsLong
	m	()I	g	getAsInt
	m	()S	h	getAsShort
	m	()B	i	getAsByte
	m	()D	j	getAsDouble
	m	()F	k	getAsFloat
	m	()Ljava/lang/Number;	l	getAsNumber
	f	Lrz;	a	TYPE
	f	I	b	SELF_SIZE_IN_BYTES
	f	J	c	data
c	rm$1	net/minecraft/nbt/LongTag$1
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/io/DataInput;ILrn;)Lrm;	a	load
	m	(Ljava/io/DataInput;Lru;)Lru$b;	a	parse
		p	1		input
		p	2		visitor
	m	()Ljava/lang/String;	b	getPrettyName
	m	(Ljava/io/DataInput;ILrn;)Lrx;	b	load
		p	1		input
		p	2		depth
		p	3		tracker
	m	()I	c	size
	m	()Z	d	isValue
c	rm$a	net/minecraft/nbt/LongTag$Cache
	f	[Lrm;	a	cache
	f	I	b	HIGH
	f	I	c	LOW
c	rn	net/minecraft/nbt/NbtAccounter
	m	(J)V	<init>	<init>
		p	1		maxBytes
	m	()J	a	getUsage
	m	(J)V	a	accountBytes
		p	1		bytes
	f	Lrn;	a	UNLIMITED
	f	J	b	quota
	f	J	c	usage
c	rn$1	net/minecraft/nbt/NbtAccounter$1
	m	(J)V	<init>	<init>
		p	1		maxBytes
	m	(J)V	a	accountBytes
		p	1		bytes
c	ro	net/minecraft/nbt/NbtIo
	m	(Ljava/io/DataInput;)Lre;	a	read
		p	0		input
	m	(Ljava/io/DataInput;ILrn;)Lrx;	a	readUnnamedTag
		p	0		input
		p	1		depth
		p	2		tracker
	m	(Ljava/io/DataInput;Lrn;)Lre;	a	read
		p	0		input
		p	1		tracker
	m	(Ljava/io/DataInput;Lru;)V	a	parse
		p	0		input
		p	1		scanner
	m	(Ljava/io/File;)Lre;	a	readCompressed
		p	0		file
	m	(Ljava/io/File;Lru;)V	a	parseCompressed
		p	0		file
		p	1		scanner
	m	(Ljava/io/InputStream;)Lre;	a	readCompressed
		p	0		stream
	m	(Ljava/io/InputStream;Lru;)V	a	parseCompressed
		p	0		stream
		p	1		scanner
	m	(Lre;Ljava/io/DataOutput;)V	a	write
		p	0		nbt
		p	1		output
	m	(Lre;Ljava/io/File;)V	a	writeCompressed
		p	0		nbt
		p	1		file
	m	(Lre;Ljava/io/OutputStream;)V	a	writeCompressed
		p	0		nbt
		p	1		stream
	m	(Lrx;Ljava/io/DataOutput;)V	a	writeUnnamedTag
		p	0		nbt
		p	1		output
	m	(Ljava/io/File;)Lre;	b	read
		p	0		file
	m	(Ljava/io/InputStream;)Ljava/io/DataInputStream;	b	createDecompressorStream
		p	0		stream
	m	(Lre;Ljava/io/File;)V	b	write
		p	0		nbt
		p	1		file
c	ro$1	net/minecraft/nbt/NbtIo$1
	f	[I	a	$SwitchMap$net$minecraft$nbt$StreamTagVisitor$ValueResult
c	rp	net/minecraft/nbt/NbtOps
	m	()Lrx;	a	empty
	m	(B)Lrx;	a	createByte
	m	(D)Lrx;	a	createDouble
	m	(F)Lrx;	a	createFloat
	m	(I)Lrx;	a	createInt
	m	(J)Lrx;	a	createLong
	m	(Lcom/mojang/serialization/DynamicOps;Lrx;)Ljava/lang/Object;	a	convertTo
	m	(Ljava/lang/Number;)Lrx;	a	createNumeric
	m	(Ljava/lang/String;)Lrx;	a	createString
	m	(Ljava/lang/String;Ljava/lang/String;)Z	a	lambda$remove$28
		p	1		k
	m	(Ljava/nio/ByteBuffer;)Lrx;	a	createByteList
	m	(Ljava/util/List;)Ljava/lang/String;	a	lambda$mergeToMap$14
	m	(Ljava/util/List;Lre;Lcom/mojang/datafixers/util/Pair;)V	a	lambda$mergeToMap$13
		p	0		entry
		p	2		pair
	m	(Ljava/util/List;Lrp$f;)Lcom/mojang/serialization/DataResult;	a	lambda$mergeToList$5
		p	1		merger
	m	(Ljava/util/function/BiConsumer;Lre;Ljava/lang/String;)V	a	lambda$getMapEntries$17
		p	3		key
	m	(Ljava/util/function/Consumer;Lrx;)V	a	lambda$getList$25
		p	1		nbt
	m	(Ljava/util/stream/IntStream;)Lrx;	a	createIntList
	m	(Ljava/util/stream/LongStream;)Lrx;	a	createLongList
	m	(Ljava/util/stream/Stream;)Lrx;	a	createMap
	m	(Lre;)Lrx;	a	tryUnwrap
		p	0		nbt
	m	(Lre;Lcom/mojang/datafixers/util/Pair;)V	a	lambda$createMap$21
		p	1		entry
	m	(Lre;Ljava/lang/String;)Lcom/mojang/datafixers/util/Pair;	a	lambda$getMapValues$15
		p	2		key
	m	(Lre;Ljava/util/function/BiConsumer;)V	a	lambda$getMapEntries$18
		p	2		entryConsumer
	m	(Lre;Lre;Ljava/lang/String;)V	a	lambda$remove$29
		p	2		k
	m	(Lrk;Ljava/util/function/Consumer;)V	a	lambda$getList$26
		p	1		consumer
	m	(Lrx;)Lcom/mojang/serialization/DataResult;	a	getNumberValue
	m	(Lrx;Lcom/mojang/serialization/MapLike;)Lcom/mojang/serialization/DataResult;	a	mergeToMap
	m	(Lrx;Ljava/lang/String;)Lrx;	a	remove
	m	(Lrx;Ljava/util/List;)Lcom/mojang/serialization/DataResult;	a	mergeToList
	m	(Lrx;Lrp$f;)Lcom/mojang/serialization/DataResult;	a	lambda$mergeToList$2
		p	1		merger
	m	(Lrx;Lrx;)Lcom/mojang/serialization/DataResult;	a	mergeToList
	m	(Lrx;Lrx;Lrx;)Lcom/mojang/serialization/DataResult;	a	mergeToMap
	m	(S)Lrx;	a	createShort
	m	(Z)Lrx;	a	createBoolean
	m	()Ljava/lang/String;	b	lambda$getStream$24
	m	(Ljava/util/stream/Stream;)Lrx;	b	createList
	m	(Lre;Lre;Ljava/lang/String;)V	b	lambda$mergeToMap$12
		p	2		key
	m	(Lrx;)Lcom/mojang/serialization/DataResult;	b	getStringValue
	m	()Ljava/lang/String;	c	lambda$getStringValue$1
	m	(Lre;Lre;Ljava/lang/String;)V	c	lambda$mergeToMap$10
		p	2		key
	m	(Lrx;)Lcom/mojang/serialization/DataResult;	c	getMapValues
	m	()Ljava/lang/String;	d	lambda$getNumberValue$0
	m	(Lrx;)Lcom/mojang/serialization/DataResult;	d	getMapEntries
	m	(Lrx;)Lcom/mojang/serialization/DataResult;	e	getMap
	m	(Lrx;)Lcom/mojang/serialization/DataResult;	f	getStream
	m	(Lrx;)Lcom/mojang/serialization/DataResult;	g	getList
	m	(Lrx;)Lcom/mojang/serialization/DataResult;	h	getByteBuffer
	m	(Lrx;)Lcom/mojang/serialization/DataResult;	i	getIntStream
	m	(Lrx;)Lcom/mojang/serialization/DataResult;	j	getLongStream
	m	(Lrx;)Ljava/util/Optional;	k	createCollector
		p	0		nbt
	m	(Lrx;)Ljava/lang/String;	l	lambda$getList$27
	m	(Lrx;)Lrx;	m	lambda$getStream$23
		p	0		nbt
	m	(Lrx;)Lrx;	n	lambda$getStream$22
		p	0		nbt
	m	(Lrx;)Ljava/lang/String;	o	lambda$getMap$20
	m	(Lrx;)Ljava/lang/String;	p	lambda$getMapEntries$19
	m	(Lrx;)Ljava/lang/String;	q	lambda$getMapValues$16
	m	(Lrx;)Ljava/lang/String;	r	lambda$mergeToMap$11
	m	(Lrx;)Ljava/lang/String;	s	lambda$mergeToMap$9
	m	(Lrx;)Ljava/lang/String;	t	lambda$mergeToMap$8
	m	(Lrx;)Lcom/mojang/serialization/DataResult;	u	lambda$mergeToList$7
	m	(Lrx;)Ljava/lang/String;	v	lambda$mergeToList$6
	m	(Lrx;)Lcom/mojang/serialization/DataResult;	w	lambda$mergeToList$4
	m	(Lrx;)Ljava/lang/String;	x	lambda$mergeToList$3
	f	Lrp;	a	INSTANCE
	f	Ljava/lang/String;	b	WRAPPER_MARKER
c	rp$1	net/minecraft/nbt/NbtOps$1
	m	(Ljava/lang/String;)Lrx;	a	get
	m	(Lre;Ljava/lang/String;)Lcom/mojang/datafixers/util/Pair;	a	lambda$entries$0
		p	2		key
	m	(Lrx;)Lrx;	a	get
	f	Lre;	a	val$tag
	f	Lrp;	b	this$0
c	rp$a	net/minecraft/nbt/NbtOps$ByteListCollector
	m	(B)V	<init>	<init>
		p	1		value
	m	([B)V	<init>	<init>
		p	1		values
	m	()Lrx;	a	result
	m	(Lrx;)Lrp$f;	a	accept
		p	1		nbt
	f	Lit/unimi/dsi/fastutil/bytes/ByteArrayList;	a	values
c	rp$b	net/minecraft/nbt/NbtOps$HeterogenousListCollector
	m	(Lit/unimi/dsi/fastutil/bytes/ByteArrayList;)V	<init>	<init>
		p	1		list
	m	(Lit/unimi/dsi/fastutil/ints/IntArrayList;)V	<init>	<init>
		p	1		list
	m	(Lit/unimi/dsi/fastutil/longs/LongArrayList;)V	<init>	<init>
		p	1		list
	m	(Ljava/util/Collection;)V	<init>	<init>
		p	1		nbts
	m	()Lrx;	a	result
	m	(B)V	a	lambda$new$1
		p	1		value
	m	(I)V	a	lambda$new$0
		p	1		value
	m	(J)V	a	lambda$new$2
		p	1		value
	m	(Lre;)Z	a	isWrapper
		p	0		nbt
	m	(Lrx;)Lrp$f;	a	accept
		p	1		nbt
	m	(Lrx;)Lrx;	b	wrapIfNeeded
		p	0		value
	m	(Lrx;)Lre;	c	wrapElement
		p	0		value
	f	Lrk;	a	result
c	rp$c	net/minecraft/nbt/NbtOps$HomogenousListCollector
	m	(Lrk;)V	<init>	<init>
		p	1		nbt
	m	(Lrx;)V	<init>	<init>
		p	1		nbt
	m	()Lrx;	a	result
	m	(Lrx;)Lrp$f;	a	accept
		p	1		nbt
	f	Lrk;	a	result
c	rp$d	net/minecraft/nbt/NbtOps$InitialListCollector
	m	()Lrx;	a	result
	m	(Lrx;)Lrp$f;	a	accept
		p	1		nbt
	f	Lrp$d;	a	INSTANCE
c	rp$e	net/minecraft/nbt/NbtOps$IntListCollector
	m	(I)V	<init>	<init>
		p	1		value
	m	([I)V	<init>	<init>
		p	1		values
	m	()Lrx;	a	result
	m	(Lrx;)Lrp$f;	a	accept
		p	1		nbt
	f	Lit/unimi/dsi/fastutil/ints/IntArrayList;	a	values
c	rp$f	net/minecraft/nbt/NbtOps$ListCollector
	m	()Lrx;	a	result
	m	(Ljava/lang/Iterable;)Lrp$f;	a	acceptAll
		p	1		nbts
	m	(Ljava/util/stream/Stream;)Lrp$f;	a	acceptAll
		p	1		nbts
	m	(Lrx;)Lrp$f;	a	accept
		p	1		nbt
c	rp$g	net/minecraft/nbt/NbtOps$LongListCollector
	m	(J)V	<init>	<init>
		p	1		value
	m	([J)V	<init>	<init>
		p	1		values
	m	()Lrx;	a	result
	m	(Lrx;)Lrp$f;	a	accept
		p	1		nbt
	f	Lit/unimi/dsi/fastutil/longs/LongArrayList;	a	values
c	rp$h	net/minecraft/nbt/NbtOps$NbtRecordBuilder
	m	()Lre;	a	initBuilder
	m	(Ljava/lang/String;Lrx;Lre;)Lre;	a	append
	m	(Lre;Lrx;)Lcom/mojang/serialization/DataResult;	a	build
	m	(Lrx;)Ljava/lang/String;	a	lambda$build$0
	f	Lrp;	a	this$0
c	rq	net/minecraft/nbt/NbtUtils
	m	(ILjava/lang/StringBuilder;)Ljava/lang/StringBuilder;	a	indent
		p	0		depth
		p	1		stringBuilder
	m	(Ldbq;)Lre;	a	writeBlockState
		p	0		state
	m	(Ldbs;Ldcu;Ljava/lang/String;Lre;Lre;)Ldbs;	a	setValueHelper
		p	0		state
		p	1		property
		p	2		key
		p	3		properties
		p	4		root
	m	(Ldcu;Ljava/lang/Comparable;)Ljava/lang/String;	a	getName
		p	0		property
		p	1		value
	m	(Ldwj;)Lre;	a	writeFluidState
		p	0		state
	m	(Lgt;)Lre;	a	writeBlockPos
		p	0		pos
	m	(Lhe;Lre;)Ldbq;	a	readBlockState
		p	0		blockLookup
		p	1		nbt
	m	(Ljava/lang/String;)Lre;	a	snbtToStructure
		p	0		string
	m	(Ljava/lang/StringBuilder;Lrx;IZ)Ljava/lang/StringBuilder;	a	prettyPrint
		p	0		stringBuilder
		p	1		nbt
		p	2		depth
		p	3		withArrayContents
	m	(Ljava/util/Map;Lre;)Lrk;	a	lambda$unpackStructureTemplate$10
		p	1		nbt
	m	(Ljava/util/UUID;)Lri;	a	createUUID
		p	0		uuid
	m	(Lre;)Lcom/mojang/authlib/GameProfile;	a	readGameProfile
		p	0		nbt
	m	(Lre;I)Lre;	a	addDataVersion
		p	0		nbt
		p	1		dataVersion
	m	(Lre;Lcom/mojang/authlib/GameProfile;)Lre;	a	writeGameProfile
		p	0		nbt
		p	1		profile
	m	(Lre;Ljava/lang/String;)Ljava/lang/String;	a	lambda$packBlockState$11
		p	1		key
	m	(Lre;Ljava/lang/String;Ljava/lang/String;)V	a	lambda$unpackBlockState$12
		p	2		property
	m	(Lrk;)D	a	lambda$static$5
		p	0		nbt
	m	(Lrk;Lre;)V	a	lambda$packStructureTemplate$9
		p	1		nbt
	m	(Lrk;Lrk;Lrk;)V	a	lambda$packStructureTemplate$6
		p	2		nbt
	m	(Lrx;)Ljava/util/UUID;	a	loadUUID
		p	0		element
	m	(Lrx;Lrx;Z)Z	a	compareNbt
		p	0		standard
		p	1		subject
		p	2		ignoreListOrder
	m	(Lrx;Z)Ljava/lang/String;	a	prettyPrint
		p	0		nbt
		p	1		withArrayContents
	m	(Ljava/lang/String;)Lre;	b	unpackBlockState
		p	0		string
	m	(Lre;)Lgt;	b	readBlockPos
		p	0		nbt
	m	(Lre;I)I	b	getDataVersion
		p	0		nbt
		p	1		fallback
	m	(Lrk;)D	b	lambda$static$4
		p	0		nbt
	m	(Lrx;)Ljava/lang/String;	b	prettyPrint
		p	0		nbt
	m	(Lre;)Ljava/lang/String;	c	structureToSnbt
		p	0		compound
	m	(Lrk;)D	c	lambda$static$3
		p	0		nbt
	m	(Lrx;)Ltj;	c	toPrettyComponent
		p	0		element
	m	(Lre;)Lre;	d	packStructureTemplate
		p	0		compound
	m	(Lrk;)I	d	lambda$static$2
		p	0		nbt
	m	(Lre;)Lre;	e	unpackStructureTemplate
		p	0		compound
	m	(Lrk;)I	e	lambda$static$1
		p	0		nbt
	m	(Lre;)Ljava/lang/String;	f	packBlockState
		p	0		compound
	m	(Lrk;)I	f	lambda$static$0
		p	0		nbt
	m	(Lre;)Lre;	g	addCurrentDataVersion
		p	0		nbt
	m	(Lre;)Lrk;	h	lambda$packStructureTemplate$8
		p	0		nbt
	m	(Lre;)Lrk;	i	lambda$packStructureTemplate$7
		p	0		nbt
	f	Ljava/lang/String;	a	SNBT_DATA_TAG
	f	Ljava/util/Comparator;	b	YXZ_LISTTAG_INT_COMPARATOR
	f	Ljava/util/Comparator;	c	YXZ_LISTTAG_DOUBLE_COMPARATOR
	f	C	d	PROPERTIES_START
	f	C	e	PROPERTIES_END
	f	Ljava/lang/String;	f	ELEMENT_SEPARATOR
	f	C	g	KEY_VALUE_SEPARATOR
	f	Lcom/google/common/base/Splitter;	h	COMMA_SPLITTER
	f	Lcom/google/common/base/Splitter;	i	COLON_SPLITTER
	f	Lorg/slf4j/Logger;	j	LOGGER
	f	I	k	INDENT
	f	I	l	NOT_FOUND
c	rr	net/minecraft/nbt/NumericTag
	m	()J	f	getAsLong
	m	()I	g	getAsInt
	m	()S	h	getAsShort
	m	()B	i	getAsByte
	m	()D	j	getAsDouble
	m	()F	k	getAsFloat
	m	()Ljava/lang/Number;	l	getAsNumber
c	rs	net/minecraft/nbt/ShortTag
	m	(S)V	<init>	<init>
		p	1		value
	m	()I	a	sizeInBytes
	m	(Ljava/io/DataOutput;)V	a	write
		p	1		output
	m	(Lru;)Lru$b;	a	accept
		p	1		visitor
	m	(Lsb;)V	a	accept
		p	1		visitor
	m	(S)Lrs;	a	valueOf
		p	0		value
	m	()B	b	getId
	m	()Lrz;	c	getType
	m	()Lrx;	d	copy
	m	()Lrs;	e	copy
	m	()J	f	getAsLong
	m	()I	g	getAsInt
	m	()S	h	getAsShort
	m	()B	i	getAsByte
	m	()D	j	getAsDouble
	m	()F	k	getAsFloat
	m	()Ljava/lang/Number;	l	getAsNumber
	f	Lrz;	a	TYPE
	f	I	b	SELF_SIZE_IN_BYTES
	f	S	c	data
c	rs$1	net/minecraft/nbt/ShortTag$1
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/io/DataInput;ILrn;)Lrs;	a	load
	m	(Ljava/io/DataInput;Lru;)Lru$b;	a	parse
		p	1		input
		p	2		visitor
	m	()Ljava/lang/String;	b	getPrettyName
	m	(Ljava/io/DataInput;ILrn;)Lrx;	b	load
		p	1		input
		p	2		depth
		p	3		tracker
	m	()I	c	size
	m	()Z	d	isValue
c	rs$a	net/minecraft/nbt/ShortTag$Cache
	f	[Lrs;	a	cache
	f	I	b	HIGH
	f	I	c	LOW
c	rt	net/minecraft/nbt/SnbtPrinterTagVisitor
	m	(Ljava/lang/String;ILjava/util/List;)V	<init>	<init>
		p	1		prefix
		p	2		indentationLevel
		p	3		pathParts
	m	()Ljava/lang/String;	a	pathString
	m	(Ljava/lang/String;)Ljava/lang/String;	a	handleEscapePretty
		p	0		name
	m	(Ljava/util/HashMap;)V	a	lambda$static$0
		p	0		map
	m	(Lrb;)V	a	visitByteArray
		p	1		element
	m	(Lrc;)V	a	visitByte
		p	1		element
	m	(Lre;)V	a	visitCompound
		p	1		compound
	m	(Lrf;)V	a	visitDouble
		p	1		element
	m	(Lrg;)V	a	visitEnd
		p	1		element
	m	(Lrh;)V	a	visitFloat
		p	1		element
	m	(Lri;)V	a	visitIntArray
		p	1		element
	m	(Lrj;)V	a	visitInt
		p	1		element
	m	(Lrk;)V	a	visitList
		p	1		element
	m	(Lrl;)V	a	visitLongArray
		p	1		element
	m	(Lrm;)V	a	visitLong
		p	1		element
	m	(Lrs;)V	a	visitShort
		p	1		element
	m	(Lrv;)V	a	visitString
		p	1		element
	m	(Lrx;)Ljava/lang/String;	a	visit
		p	1		element
	m	()V	b	popPath
	m	(Ljava/lang/String;)V	b	pushPath
		p	1		part
	m	(Lre;)Ljava/util/List;	b	getKeys
		p	1		compound
	f	Ljava/util/Map;	a	KEY_ORDER
	f	Ljava/util/Set;	b	NO_INDENTATION
	f	Ljava/util/regex/Pattern;	c	SIMPLE_VALUE
	f	Ljava/lang/String;	d	NAME_VALUE_SEPARATOR
	f	Ljava/lang/String;	e	ELEMENT_SEPARATOR
	f	Ljava/lang/String;	f	LIST_OPEN
	f	Ljava/lang/String;	g	LIST_CLOSE
	f	Ljava/lang/String;	h	LIST_TYPE_SEPARATOR
	f	Ljava/lang/String;	i	ELEMENT_SPACING
	f	Ljava/lang/String;	j	STRUCT_OPEN
	f	Ljava/lang/String;	k	STRUCT_CLOSE
	f	Ljava/lang/String;	l	NEWLINE
	f	Ljava/lang/String;	m	indentation
	f	I	n	depth
	f	Ljava/util/List;	o	path
	f	Ljava/lang/String;	p	result
c	ru	net/minecraft/nbt/StreamTagVisitor
	m	()Lru$b;	a	visitEnd
	m	(B)Lru$b;	a	visit
		p	1		value
	m	(D)Lru$b;	a	visit
		p	1		value
	m	(F)Lru$b;	a	visit
		p	1		value
	m	(I)Lru$b;	a	visit
		p	1		value
	m	(J)Lru$b;	a	visit
		p	1		value
	m	(Ljava/lang/String;)Lru$b;	a	visit
		p	1		value
	m	(Lrz;)Lru$a;	a	visitEntry
		p	1		type
	m	(Lrz;I)Lru$b;	a	visitList
		p	1		entryType
		p	2		length
	m	(Lrz;Ljava/lang/String;)Lru$a;	a	visitEntry
		p	1		type
		p	2		key
	m	(S)Lru$b;	a	visit
		p	1		value
	m	([B)Lru$b;	a	visit
		p	1		value
	m	([I)Lru$b;	a	visit
		p	1		value
	m	([J)Lru$b;	a	visit
		p	1		value
	m	()Lru$b;	b	visitContainerEnd
	m	(Lrz;)Lru$b;	b	visitRootEntry
		p	1		rootType
	m	(Lrz;I)Lru$a;	b	visitElement
		p	1		type
		p	2		index
c	ru$a	net/minecraft/nbt/StreamTagVisitor$EntryResult
	m	()[Lru$a;	a	$values
	f	Lru$a;	a	ENTER
	f	Lru$a;	b	SKIP
	f	Lru$a;	c	BREAK
	f	Lru$a;	d	HALT
	f	[Lru$a;	e	$VALUES
c	ru$b	net/minecraft/nbt/StreamTagVisitor$ValueResult
	m	()[Lru$b;	a	$values
	f	Lru$b;	a	CONTINUE
	f	Lru$b;	b	BREAK
	f	Lru$b;	c	HALT
	f	[Lru$b;	d	$VALUES
c	rv	net/minecraft/nbt/StringTag
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		value
	m	()I	a	sizeInBytes
	m	(Ljava/io/DataInput;)V	a	skipString
		p	0		input
	m	(Ljava/io/DataOutput;)V	a	write
		p	1		output
	m	(Ljava/lang/String;)Lrv;	a	valueOf
		p	0		value
	m	(Lru;)Lru$b;	a	accept
		p	1		visitor
	m	(Lsb;)V	a	accept
		p	1		visitor
	m	()B	b	getId
	m	(Ljava/lang/String;)Ljava/lang/String;	b	quoteAndEscape
		p	0		value
	m	()Lrz;	c	getType
	m	()Lrx;	d	copy
	m	()Lrv;	e	copy
	m	()Ljava/lang/String;	f_	getAsString
	f	Ljava/lang/String;	A	data
	f	Lrz;	a	TYPE
	f	I	b	SELF_SIZE_IN_BYTES
	f	Lrv;	c	EMPTY
	f	C	w	DOUBLE_QUOTE
	f	C	x	SINGLE_QUOTE
	f	C	y	ESCAPE
	f	C	z	NOT_SET
c	rv$1	net/minecraft/nbt/StringTag$1
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/io/DataInput;)V	a	skip
		p	1		input
	m	(Ljava/io/DataInput;ILrn;)Lrv;	a	load
	m	(Ljava/io/DataInput;Lru;)Lru$b;	a	parse
		p	1		input
		p	2		visitor
	m	()Ljava/lang/String;	b	getPrettyName
	m	(Ljava/io/DataInput;ILrn;)Lrx;	b	load
		p	1		input
		p	2		depth
		p	3		tracker
	m	()Z	d	isValue
c	rw	net/minecraft/nbt/StringTagVisitor
	m	(Ljava/lang/String;)Ljava/lang/String;	a	handleEscape
		p	0		name
	m	(Lrb;)V	a	visitByteArray
		p	1		element
	m	(Lrc;)V	a	visitByte
		p	1		element
	m	(Lre;)V	a	visitCompound
		p	1		compound
	m	(Lrf;)V	a	visitDouble
		p	1		element
	m	(Lrg;)V	a	visitEnd
		p	1		element
	m	(Lrh;)V	a	visitFloat
		p	1		element
	m	(Lri;)V	a	visitIntArray
		p	1		element
	m	(Lrj;)V	a	visitInt
		p	1		element
	m	(Lrk;)V	a	visitList
		p	1		element
	m	(Lrl;)V	a	visitLongArray
		p	1		element
	m	(Lrm;)V	a	visitLong
		p	1		element
	m	(Lrs;)V	a	visitShort
		p	1		element
	m	(Lrv;)V	a	visitString
		p	1		element
	m	(Lrx;)Ljava/lang/String;	a	visit
		p	1		element
	f	Ljava/util/regex/Pattern;	a	SIMPLE_VALUE
	f	Ljava/lang/StringBuilder;	b	builder
c	rx	net/minecraft/nbt/Tag
	m	()I	a	sizeInBytes
	m	(Ljava/io/DataOutput;)V	a	write
		p	1		output
	m	(Lru;)Lru$b;	a	accept
		p	1		visitor
	m	(Lsb;)V	a	accept
		p	1		visitor
	m	()B	b	getId
	m	(Lru;)V	b	acceptAsRoot
		p	1		visitor
	m	()Lrz;	c	getType
	m	()Lrx;	d	copy
	m	()Ljava/lang/String;	f_	getAsString
	f	I	d	OBJECT_HEADER
	f	I	e	ARRAY_HEADER
	f	I	f	OBJECT_REFERENCE
	f	I	g	STRING_SIZE
	f	B	h	TAG_END
	f	B	i	TAG_BYTE
	f	B	j	TAG_SHORT
	f	B	k	TAG_INT
	f	B	l	TAG_LONG
	f	B	m	TAG_FLOAT
	f	B	n	TAG_DOUBLE
	f	B	o	TAG_BYTE_ARRAY
	f	B	p	TAG_STRING
	f	B	q	TAG_LIST
	f	B	r	TAG_COMPOUND
	f	B	s	TAG_INT_ARRAY
	f	B	t	TAG_LONG_ARRAY
	f	B	u	TAG_ANY_NUMERIC
	f	I	v	MAX_DEPTH
c	ry	net/minecraft/nbt/TagParser
	m	(Lcom/mojang/brigadier/StringReader;)V	<init>	<init>
		p	1		reader
	m	()Lre;	a	readSingleStruct
	m	(C)V	a	expect
		p	1		c
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$2
		p	0		type
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$1
		p	0		receivedType
		p	1		expectedType
	m	(Ljava/lang/String;)Lre;	a	parseTag
		p	0		string
	m	(Lrz;Lrz;)Ljava/util/List;	a	readArray
		p	1		arrayTypeReader
		p	2		typeReader
	m	()Ljava/lang/String;	b	readKey
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$0
		p	0		receivedType
		p	1		expectedType
	m	(Ljava/lang/String;)Lrx;	b	type
		p	1		input
	m	()Lrx;	c	readTypedValue
	m	()Lrx;	d	readValue
	m	()Lrx;	e	readList
	m	()Lre;	f	readStruct
	m	()Lrx;	g	readListTag
	m	()Lrx;	h	readArrayTag
	m	()Z	i	hasElementSeparator
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_TRAILING_DATA
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_EXPECTED_KEY
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_EXPECTED_VALUE
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	d	ERROR_INSERT_MIXED_LIST
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	e	ERROR_INSERT_MIXED_ARRAY
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	f	ERROR_INVALID_ARRAY
	f	C	g	ELEMENT_SEPARATOR
	f	C	h	NAME_VALUE_SEPARATOR
	f	C	i	LIST_OPEN
	f	C	j	LIST_CLOSE
	f	C	k	STRUCT_CLOSE
	f	C	l	STRUCT_OPEN
	f	Ljava/util/regex/Pattern;	m	DOUBLE_PATTERN_NOSUFFIX
	f	Ljava/util/regex/Pattern;	n	DOUBLE_PATTERN
	f	Ljava/util/regex/Pattern;	o	FLOAT_PATTERN
	f	Ljava/util/regex/Pattern;	p	BYTE_PATTERN
	f	Ljava/util/regex/Pattern;	q	LONG_PATTERN
	f	Ljava/util/regex/Pattern;	r	SHORT_PATTERN
	f	Ljava/util/regex/Pattern;	s	INT_PATTERN
	f	Lcom/mojang/brigadier/StringReader;	t	reader
c	rz	net/minecraft/nbt/TagType
	m	()Ljava/lang/String;	a	getName
	m	(I)Lrz;	a	createInvalid
		p	0		type
	m	(Ljava/io/DataInput;)V	a	skip
		p	1		input
	m	(Ljava/io/DataInput;I)V	a	skip
		p	1		input
		p	2		count
	m	(Ljava/io/DataInput;Lru;)Lru$b;	a	parse
		p	1		input
		p	2		visitor
	m	()Ljava/lang/String;	b	getPrettyName
	m	(Ljava/io/DataInput;ILrn;)Lrx;	b	load
		p	1		input
		p	2		depth
		p	3		tracker
	m	(Ljava/io/DataInput;Lru;)V	b	parseRoot
		p	1		input
		p	2		visitor
	m	()Z	d	isValue
c	rz$1	net/minecraft/nbt/TagType$1
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/io/DataInput;)V	a	skip
		p	1		input
	m	(Ljava/io/DataInput;I)V	a	skip
		p	1		input
		p	2		count
	m	(Ljava/io/DataInput;ILrn;)Lrg;	a	load
	m	(Ljava/io/DataInput;Lru;)Lru$b;	a	parse
		p	1		input
		p	2		visitor
	m	()Ljava/lang/String;	b	getPrettyName
	m	(Ljava/io/DataInput;ILrn;)Lrx;	b	load
		p	1		input
		p	2		depth
		p	3		tracker
	m	()Ljava/io/IOException;	c	createException
	f	I	a	val$id
c	rz$2	net/minecraft/nbt/TagType$2
	f	[I	a	$SwitchMap$net$minecraft$nbt$StreamTagVisitor$ValueResult
c	rz$a	net/minecraft/nbt/TagType$StaticSize
	m	(Ljava/io/DataInput;)V	a	skip
		p	1		input
	m	(Ljava/io/DataInput;I)V	a	skip
		p	1		input
		p	2		count
	m	()I	c	size
c	rz$b	net/minecraft/nbt/TagType$VariableSize
	m	(Ljava/io/DataInput;I)V	a	skip
		p	1		input
		p	2		count
c	sa	net/minecraft/nbt/TagTypes
	m	(I)Lrz;	a	getType
		p	0		id
	f	[Lrz;	a	TYPES
c	sb	net/minecraft/nbt/TagVisitor
	m	(Lrb;)V	a	visitByteArray
		p	1		element
	m	(Lrc;)V	a	visitByte
		p	1		element
	m	(Lre;)V	a	visitCompound
		p	1		compound
	m	(Lrf;)V	a	visitDouble
		p	1		element
	m	(Lrg;)V	a	visitEnd
		p	1		element
	m	(Lrh;)V	a	visitFloat
		p	1		element
	m	(Lri;)V	a	visitIntArray
		p	1		element
	m	(Lrj;)V	a	visitInt
		p	1		element
	m	(Lrk;)V	a	visitList
		p	1		element
	m	(Lrl;)V	a	visitLongArray
		p	1		element
	m	(Lrm;)V	a	visitLong
		p	1		element
	m	(Lrs;)V	a	visitShort
		p	1		element
	m	(Lrv;)V	a	visitString
		p	1		element
c	sc	net/minecraft/nbt/TextComponentTagVisitor
	m	(Ljava/lang/String;I)V	<init>	<init>
		p	1		prefix
		p	2		indentationLevel
	m	(Ljava/lang/String;)Ltj;	a	handleEscapePretty
		p	0		name
	m	(Lrb;)V	a	visitByteArray
		p	1		element
	m	(Lrc;)V	a	visitByte
		p	1		element
	m	(Lre;)V	a	visitCompound
		p	1		compound
	m	(Lrf;)V	a	visitDouble
		p	1		element
	m	(Lrg;)V	a	visitEnd
		p	1		element
	m	(Lrh;)V	a	visitFloat
		p	1		element
	m	(Lri;)V	a	visitIntArray
		p	1		element
	m	(Lrj;)V	a	visitInt
		p	1		element
	m	(Lrk;)V	a	visitList
		p	1		element
	m	(Lrl;)V	a	visitLongArray
		p	1		element
	m	(Lrm;)V	a	visitLong
		p	1		element
	m	(Lrs;)V	a	visitShort
		p	1		element
	m	(Lrv;)V	a	visitString
		p	1		element
	m	(Lrx;)Ltj;	a	visit
		p	1		element
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	I	b	INLINE_LIST_THRESHOLD
	f	Lit/unimi/dsi/fastutil/bytes/ByteCollection;	c	INLINE_ELEMENT_TYPES
	f	Ln;	d	SYNTAX_HIGHLIGHTING_KEY
	f	Ln;	e	SYNTAX_HIGHLIGHTING_STRING
	f	Ln;	f	SYNTAX_HIGHLIGHTING_NUMBER
	f	Ln;	g	SYNTAX_HIGHLIGHTING_NUMBER_TYPE
	f	Ljava/util/regex/Pattern;	h	SIMPLE_VALUE
	f	Ljava/lang/String;	i	NAME_VALUE_SEPARATOR
	f	Ljava/lang/String;	j	ELEMENT_SEPARATOR
	f	Ljava/lang/String;	k	LIST_OPEN
	f	Ljava/lang/String;	l	LIST_CLOSE
	f	Ljava/lang/String;	m	LIST_TYPE_SEPARATOR
	f	Ljava/lang/String;	n	ELEMENT_SPACING
	f	Ljava/lang/String;	o	STRUCT_OPEN
	f	Ljava/lang/String;	p	STRUCT_CLOSE
	f	Ljava/lang/String;	q	NEWLINE
	f	Ljava/lang/String;	r	indentation
	f	I	s	depth
	f	Ltj;	t	result
c	sd	net/minecraft/nbt/package-info
c	se	net/minecraft/nbt/visitors/CollectFields
	m	([Lsg;)V	<init>	<init>
		p	1		queries
	m	(Lrz;)Lru$a;	a	visitEntry
		p	1		type
	m	(Lrz;Ljava/lang/String;)Lru$a;	a	visitEntry
		p	1		type
		p	2		key
	m	()Lru$b;	b	visitContainerEnd
	m	(Lrz;)Lru$b;	b	visitRootEntry
		p	1		rootType
	m	()I	c	getMissingFieldCount
	f	I	a	fieldsToGetCount
	f	Ljava/util/Set;	b	wantedTypes
	f	Ljava/util/Deque;	c	stack
c	sf	net/minecraft/nbt/visitors/CollectToTag
	m	()Lru$b;	a	visitEnd
	m	(B)Lru$b;	a	visit
		p	1		value
	m	(D)Lru$b;	a	visit
		p	1		value
	m	(F)Lru$b;	a	visit
		p	1		value
	m	(I)Lru$b;	a	visit
		p	1		value
	m	(J)Lru$b;	a	visit
		p	1		value
	m	(Ljava/lang/String;)Lru$b;	a	visit
		p	1		value
	m	(Lre;Lrx;)V	a	lambda$visitRootEntry$1
		p	2		nbt
	m	(Lrx;)V	a	appendEntry
		p	1		nbt
	m	(Lrz;)Lru$a;	a	visitEntry
		p	1		type
	m	(Lrz;I)Lru$b;	a	visitList
		p	1		entryType
		p	2		length
	m	(Lrz;Ljava/lang/String;)Lru$a;	a	visitEntry
		p	1		type
		p	2		key
	m	(S)Lru$b;	a	visit
		p	1		value
	m	([B)Lru$b;	a	visit
		p	1		value
	m	([I)Lru$b;	a	visit
		p	1		value
	m	([J)Lru$b;	a	visit
		p	1		value
	m	()Lru$b;	b	visitContainerEnd
	m	(Lre;Lrx;)V	b	lambda$enterContainerIfNeeded$0
		p	2		nbt
	m	(Lrx;)V	b	lambda$visitRootEntry$2
		p	1		nbt
	m	(Lrz;)Lru$b;	b	visitRootEntry
		p	1		rootType
	m	(Lrz;I)Lru$a;	b	visitElement
		p	1		type
		p	2		index
	m	(Lrz;)V	c	enterContainerIfNeeded
		p	1		type
	m	()Lrx;	d	getResult
	m	()I	e	depth
	f	Ljava/lang/String;	a	lastId
	f	Lrx;	b	rootTag
	f	Ljava/util/Deque;	c	consumerStack
c	sg	net/minecraft/nbt/visitors/FieldSelector
	m	(Ljava/lang/String;Ljava/lang/String;Lrz;Ljava/lang/String;)V	<init>	<init>
		p	1		path1
		p	2		path2
		p	3		type
		p	4		key
	m	(Ljava/lang/String;Lrz;Ljava/lang/String;)V	<init>	<init>
		p	1		path
		p	2		type
		p	3		key
	m	(Lrz;Ljava/lang/String;)V	<init>	<init>
		p	1		type
		p	2		key
	m	()Ljava/util/List;	a	path
	m	()Lrz;	b	type
	m	()Ljava/lang/String;	c	name
	f	Ljava/util/List;	a	path
	f	Lrz;	b	type
	f	Ljava/lang/String;	c	name
c	sh	net/minecraft/nbt/visitors/FieldTree
	m	(I)V	<init>	<init>
		p	1		depth
	m	()Lsh;	a	createRoot
	m	(Ljava/lang/String;)Lsh;	a	lambda$addEntry$0
		p	1		path
	m	(Lrz;Ljava/lang/String;)Z	a	isSelected
		p	1		type
		p	2		key
	m	(Lsg;)V	a	addEntry
		p	1		query
	m	()I	b	depth
	m	()Ljava/util/Map;	c	selectedFields
	m	()Ljava/util/Map;	d	fieldsToRecurse
	f	I	a	depth
	f	Ljava/util/Map;	b	selectedFields
	f	Ljava/util/Map;	c	fieldsToRecurse
c	si	net/minecraft/nbt/visitors/SkipAll
	m	()Lru$b;	a	visitEnd
	m	(B)Lru$b;	a	visit
		p	1		value
	m	(D)Lru$b;	a	visit
		p	1		value
	m	(F)Lru$b;	a	visit
		p	1		value
	m	(I)Lru$b;	a	visit
		p	1		value
	m	(J)Lru$b;	a	visit
		p	1		value
	m	(Ljava/lang/String;)Lru$b;	a	visit
		p	1		value
	m	(Lrz;)Lru$a;	a	visitEntry
		p	1		type
	m	(Lrz;I)Lru$b;	a	visitList
		p	1		entryType
		p	2		length
	m	(Lrz;Ljava/lang/String;)Lru$a;	a	visitEntry
		p	1		type
		p	2		key
	m	(S)Lru$b;	a	visit
		p	1		value
	m	([B)Lru$b;	a	visit
		p	1		value
	m	([I)Lru$b;	a	visit
		p	1		value
	m	([J)Lru$b;	a	visit
		p	1		value
	m	()Lru$b;	b	visitContainerEnd
	m	(Lrz;)Lru$b;	b	visitRootEntry
		p	1		rootType
	m	(Lrz;I)Lru$a;	b	visitElement
		p	1		type
		p	2		index
	f	Lsi;	a	INSTANCE
c	si$1	net/minecraft/nbt/visitors/SkipAll$1
c	sj	net/minecraft/nbt/visitors/SkipFields
	m	([Lsg;)V	<init>	<init>
		p	1		excludedQueries
	m	(Lrz;Ljava/lang/String;)Lru$a;	a	visitEntry
		p	1		type
		p	2		key
	m	()Lru$b;	b	visitContainerEnd
	f	Ljava/util/Deque;	a	stack
c	sk	net/minecraft/nbt/visitors/package-info
c	sl	net/minecraft/network/CipherBase
	m	(Ljavax/crypto/Cipher;)V	<init>	<init>
		p	1		cipher
	m	(Lio/netty/buffer/ByteBuf;)[B	a	bufToByte
		p	1		buf
	m	(Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V	a	encipher
		p	1		buf
		p	2		result
	m	(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;)Lio/netty/buffer/ByteBuf;	a	decipher
		p	1		context
		p	2		buf
	f	Ljavax/crypto/Cipher;	a	cipher
	f	[B	b	heapIn
	f	[B	c	heapOut
c	sm	net/minecraft/network/CipherDecoder
	m	(Ljavax/crypto/Cipher;)V	<init>	<init>
		p	1		cipher
	m	(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Ljava/util/List;)V	a	decode
	f	Lsl;	a	cipher
c	sn	net/minecraft/network/CipherEncoder
	m	(Ljavax/crypto/Cipher;)V	<init>	<init>
		p	1		cipher
	m	(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V	a	encode
	f	Lsl;	a	cipher
c	so	net/minecraft/network/CompressionDecoder
	m	(IZ)V	<init>	<init>
		p	1		compressionThreshold
		p	2		rejectsBadPackets
	m	(IZ)V	a	setThreshold
		p	1		compressionThreshold
		p	2		rejectsBadPackets
	f	I	a	MAXIMUM_COMPRESSED_LENGTH
	f	I	b	MAXIMUM_UNCOMPRESSED_LENGTH
	f	Ljava/util/zip/Inflater;	c	inflater
	f	I	d	threshold
	f	Z	e	validateDecompressed
c	sp	net/minecraft/network/CompressionEncoder
	m	(I)V	<init>	<init>
		p	1		compressionThreshold
	m	()I	a	getThreshold
	m	(I)V	a	setThreshold
		p	1		compressionThreshold
	m	(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V	a	encode
	f	[B	a	encodeBuf
	f	Ljava/util/zip/Deflater;	b	deflater
	f	I	c	threshold
c	sq	net/minecraft/network/Connection
	m	(Lvc;)V	<init>	<init>
		p	1		side
	m	()V	a	tick
	m	(IZ)V	a	setupCompression
		p	1		compressionThreshold
		p	2		rejectsBadPackets
	m	(Lio/netty/channel/ChannelHandlerContext;Lvb;)V	a	channelRead0
	m	(Lio/netty/channel/ChannelPipeline;Lvc;)V	a	configureSerialization
		p	0		pipeline
		p	1		side
	m	(Ljava/net/InetSocketAddress;Z)Lsq;	a	connectToServer
		p	0		address
		p	1		useEpoll
	m	(Ljava/net/SocketAddress;)Lsq;	a	connectToLocalServer
		p	0		address
	m	(Ljavax/crypto/Cipher;Ljavax/crypto/Cipher;)V	a	setEncryptionKey
		p	1		decryptionCipher
		p	2		encryptionCipher
	m	(Lorg/slf4j/Marker;)V	a	lambda$static$2
		p	0		marker
	m	(Lsr;)V	a	setProtocol
		p	1		state
	m	(Lsx;)V	a	setListener
		p	1		listener
	m	(Lsy;Lio/netty/util/concurrent/Future;)V	a	lambda$doSendPacket$8
		p	2		future
	m	(Ltj;)V	a	disconnect
		p	1		disconnectReason
	m	(Lvb;)V	a	send
		p	1		packet
	m	(Lvb;Lsx;)V	a	genericsFtw
		p	0		packet
		p	1		listener
	m	(Lvb;Lsy;)V	a	send
		p	1		packet
		p	2		callbacks
	m	(Lvb;Lsy;Lsr;Lsr;)V	a	doSendPacket
		p	1		packet
		p	2		callbacks
		p	3		packetState
		p	4		currentState
	m	()V	b	tickSecond
	m	(Lorg/slf4j/Marker;)V	b	lambda$static$1
		p	0		marker
	m	(Ltj;)V	b	lambda$exceptionCaught$6
	m	(Lvb;Lsy;)V	b	sendPacket
		p	1		packet
		p	2		callbacks
	m	(Lvb;Lsy;Lsr;Lsr;)V	b	lambda$sendPacket$7
	m	()Ljava/net/SocketAddress;	c	getRemoteAddress
	m	(Lorg/slf4j/Marker;)V	c	lambda$static$0
		p	0		marker
	m	()Z	d	isMemoryConnection
	m	()Lvc;	e	getReceiving
	m	()Lvc;	f	getSending
	m	()Z	g	isEncrypted
	m	()Z	h	isConnected
	m	()Z	i	isConnecting
	m	()Lsx;	j	getPacketListener
	m	()Ltj;	k	getDisconnectedReason
	m	()V	l	setReadOnly
	m	()V	m	handleDisconnection
	m	()F	n	getAverageReceivedPackets
	m	()F	o	getAverageSentPackets
	m	()Lsr;	p	getCurrentProtocol
	m	()V	q	flushQueue
	m	()Lio/netty/channel/DefaultEventLoopGroup;	r	lambda$static$5
	m	()Lio/netty/channel/epoll/EpollEventLoopGroup;	s	lambda$static$4
	m	()Lio/netty/channel/nio/NioEventLoopGroup;	t	lambda$static$3
	f	Lorg/slf4j/Marker;	a	ROOT_MARKER
	f	Lorg/slf4j/Marker;	b	PACKET_MARKER
	f	Lorg/slf4j/Marker;	c	PACKET_RECEIVED_MARKER
	f	Lorg/slf4j/Marker;	d	PACKET_SENT_MARKER
	f	Lio/netty/util/AttributeKey;	e	ATTRIBUTE_PROTOCOL
	f	Lape;	f	NETWORK_WORKER_GROUP
	f	Lape;	g	NETWORK_EPOLL_WORKER_GROUP
	f	Lape;	h	LOCAL_WORKER_GROUP
	f	F	i	AVERAGE_PACKETS_SMOOTHING
	f	Lorg/slf4j/Logger;	j	LOGGER
	f	Lvc;	k	receiving
	f	Ljava/util/Queue;	l	queue
	f	Lio/netty/channel/Channel;	m	channel
	f	Ljava/net/SocketAddress;	n	address
	f	Lsx;	o	packetListener
	f	Ltj;	p	disconnectedReason
	f	Z	q	encrypted
	f	Z	r	disconnectionHandled
	f	I	s	receivedPackets
	f	I	t	sentPackets
	f	F	u	averageReceivedPackets
	f	F	v	averageSentPackets
	f	I	w	tickCount
	f	Z	x	handlingFault
c	sq$1	net/minecraft/network/Connection$1
	f	Lsq;	a	val$connection
c	sq$2	net/minecraft/network/Connection$2
	f	Lsq;	a	val$connection
c	sq$a	net/minecraft/network/Connection$PacketHolder
	m	(Lvb;Lsy;)V	<init>	<init>
		p	1		packet
		p	2		callbacks
	f	Lvb;	a	packet
	f	Lsy;	b	listener
c	sr	net/minecraft/network/ConnectionProtocol
	m	(Ljava/lang/String;IILsr$b;)V	<init>	<init>
		p	3		id
		p	4		initializer
	m	()I	a	getId
	m	(I)Lsr;	a	getById
		p	0		id
	m	(Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;Ljava/lang/Class;Ljava/lang/Integer;)V	a	lambda$getPacketsByIds$0
		p	0		clazz
		p	1		packetId
	m	(Lsr;Ljava/lang/Class;)V	a	lambda$static$1
		p	1		packetClass
	m	(Lsr;Lvc;Lsr$a;)V	a	lambda$static$2
		p	1		side
		p	2		handler
	m	(Lvb;)Lsr;	a	getProtocolForPacket
		p	0		handler
	m	(Lvc;)Lva;	a	getBundlerInfo
		p	1		side
	m	(Lvc;ILss;)Lvb;	a	createPacket
		p	1		side
		p	2		packetId
		p	3		buf
	m	(Lvc;Lvb;)I	a	getPacketId
		p	1		side
		p	2		packet
	m	()Lsr$b;	b	protocol
	m	(Lvc;)Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	b	getPacketsByIds
		p	1		side
	m	()[Lsr;	c	$values
	f	Lsr;	a	HANDSHAKING
	f	Lsr;	b	PLAY
	f	Lsr;	c	STATUS
	f	Lsr;	d	LOGIN
	f	I	e	NOT_REGISTERED
	f	I	f	MIN_PROTOCOL_ID
	f	I	g	MAX_PROTOCOL_ID
	f	[Lsr;	h	LOOKUP
	f	Ljava/util/Map;	i	PROTOCOL_BY_PACKET
	f	I	j	id
	f	Ljava/util/Map;	k	flows
	f	[Lsr;	l	$VALUES
c	sr$a	net/minecraft/network/ConnectionProtocol$PacketSet
	m	()Lva;	a	bundlerInfo
	m	(ILss;)Lvb;	a	createPacket
		p	1		id
		p	2		buf
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;)V	a	lambda$new$0
		p	0		map
	m	(Ljava/lang/Class;)I	a	getId
		p	1		packet
	m	(Ljava/lang/Class;Ljava/util/function/Function;)Lsr$a;	a	addPacket
		p	1		type
		p	2		packetFactory
	m	(Ljava/util/function/Consumer;)V	a	listAllPackets
		p	1		consumer
	m	(Luy;Lss;)Luy;	a	lambda$withBundlePacket$1
		p	1		buf
	m	(Ljava/lang/Class;)Z	b	lambda$listAllPackets$2
		p	0		type
	m	(Ljava/lang/Class;Ljava/util/function/Function;)Lsr$a;	b	withBundlePacket
		p	1		bundlePacketType
		p	2		bundleFunction
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	b	classToId
	f	Ljava/util/List;	c	idToDeserializer
	f	Lva;	d	bundlerInfo
	f	Ljava/util/Set;	e	extraClasses
c	sr$b	net/minecraft/network/ConnectionProtocol$ProtocolBuilder
	m	(Lvc;Lsr$a;)Lsr$b;	a	addFlow
		p	1		side
		p	2		handler
	f	Ljava/util/Map;	a	flows
c	ss	net/minecraft/network/FriendlyByteBuf
	m	(Lio/netty/buffer/ByteBuf;)V	<init>	<init>
		p	1		parent
	m	()Lcom/mojang/authlib/properties/PropertyMap;	A	readGameProfileProperties
	m	()Lcom/mojang/authlib/properties/Property;	B	readProperty
	m	()Lit/unimi/dsi/fastutil/ints/IntList;	a	readIntIdList
	m	(I)I	a	getVarIntSize
		p	0		value
	m	(ILjava/util/function/IntFunction;I)Ljava/lang/Object;	a	lambda$limitValue$4
		p	2		value
	m	(J)I	a	getVarLongSize
		p	0		value
	m	(Ladc;)Ladc;	a	readResourceKey
		p	1		registryRef
	m	(Ladd;)Lss;	a	writeResourceLocation
		p	1		id
	m	(Lcfv;)Lss;	a	writeItem
		p	1		stack
	m	(Lclp;)Lss;	a	writeChunkPos
		p	1		pos
	m	(Lcom/mojang/authlib/GameProfile;)V	a	writeGameProfile
		p	1		gameProfile
	m	(Lcom/mojang/authlib/properties/Property;)V	a	writeProperty
		p	1		property
	m	(Lcom/mojang/authlib/properties/PropertyMap;)V	a	writeGameProfileProperties
		p	1		propertyMap
	m	(Lcom/mojang/authlib/properties/PropertyMap;Lss;)V	a	lambda$readGameProfileProperties$8
		p	2		buf
	m	(Lcom/mojang/datafixers/util/Either;Lss$b;Lss$b;)V	a	writeEither
		p	1		either
		p	2		leftWriter
		p	3		rightWriter
	m	(Lcom/mojang/serialization/Codec;)Ljava/lang/Object;	a	readJsonWithCodec
		p	1		codec
	m	(Lcom/mojang/serialization/Codec;Ljava/lang/Object;)V	a	writeJsonWithCodec
		p	1		codec
		p	2		value
	m	(Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/Codec;)Ljava/lang/Object;	a	readWithCodec
		p	1		ops
		p	2		codec
	m	(Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/Codec;Ljava/lang/Object;)V	a	writeWithCodec
		p	1		ops
		p	2		codec
		p	3		value
	m	(Leda;)V	a	writeBlockHitResult
		p	1		hitResult
	m	(Lgt;)Lss;	a	writeBlockPos
		p	1		pos
	m	(Lhc;)V	a	writeGlobalPos
		p	1		pos
	m	(Lhi;)Ljava/lang/Object;	a	readById
		p	1		registry
	m	(Lhi;Lhd;Lss$b;)V	a	writeId
		p	1		registryEntries
		p	2		entry
		p	3		writer
	m	(Lhi;Ljava/lang/Object;)V	a	writeId
		p	1		registry
		p	2		value
	m	(Lhi;Lss$a;)Lhd;	a	readById
		p	1		registryEntries
		p	2		reader
	m	(Lhw;)Lss;	a	writeSectionPos
		p	1		pos
	m	(Lit/unimi/dsi/fastutil/ints/IntList;)V	a	writeIntIdList
		p	1		list
	m	(Ljava/lang/Class;)Ljava/util/EnumSet;	a	readEnumSet
		p	1		type
	m	(Ljava/lang/Enum;)Lss;	a	writeEnum
		p	1		instance
	m	(Ljava/lang/Object;Ljava/lang/String;)Lio/netty/handler/codec/EncoderException;	a	lambda$writeJsonWithCodec$3
		p	1		error
	m	(Ljava/lang/Object;Lss$b;)V	a	writeNullable
		p	1		value
		p	2		writer
	m	(Ljava/lang/String;)Lss;	a	writeUtf
		p	1		string
	m	(Ljava/lang/String;I)Lss;	a	writeUtf
		p	1		string
		p	2		maxLength
	m	(Ljava/security/PublicKey;)Lss;	a	writePublicKey
		p	1		publicKey
	m	(Ljava/time/Instant;)V	a	writeInstant
		p	1		instant
	m	(Ljava/util/BitSet;)V	a	writeBitSet
		p	1		bitSet
	m	(Ljava/util/BitSet;I)V	a	writeFixedBitSet
		p	1		bitSet
		p	2		size
	m	(Ljava/util/Collection;Lss$b;)V	a	writeCollection
		p	1		collection
		p	2		writer
	m	(Ljava/util/Date;)Lss;	a	writeDate
		p	1		date
	m	(Ljava/util/EnumSet;Ljava/lang/Class;)V	a	writeEnumSet
		p	1		enumSet
		p	2		type
	m	(Ljava/util/Map;Lss$b;Lss$b;)V	a	writeMap
		p	1		map
		p	2		keyWriter
		p	3		valueWriter
	m	(Ljava/util/Optional;Lss$b;)V	a	writeOptional
		p	1		value
		p	2		writer
	m	(Ljava/util/UUID;)Lss;	a	writeUUID
		p	1		uuid
	m	(Ljava/util/function/Consumer;)V	a	readWithCount
		p	1		consumer
	m	(Ljava/util/function/IntFunction;I)Ljava/util/function/IntFunction;	a	limitValue
		p	0		applier
		p	1		max
	m	(Ljava/util/function/IntFunction;Lss$a;)Ljava/util/Collection;	a	readCollection
		p	1		collectionFactory
		p	2		reader
	m	(Ljava/util/function/IntFunction;Lss$a;Lss$a;)Ljava/util/Map;	a	readMap
		p	1		mapFactory
		p	2		keyReader
		p	3		valueReader
	m	(Lorg/joml/Quaternionf;)V	a	writeQuaternion
		p	1		quaternionf
	m	(Lorg/joml/Vector3f;)V	a	writeVector3f
		p	1		vector3f
	m	(Lre;)Lss;	a	writeNbt
		p	1		compound
	m	(Lre;Ljava/lang/String;)Lio/netty/handler/codec/DecoderException;	a	lambda$readWithCodec$0
		p	1		error
	m	(Lrn;)Lre;	a	readNbt
		p	1		sizeTracker
	m	(Lss$a;)Ljava/util/List;	a	readList
		p	1		reader
	m	(Lss$a;Lss$a;)Ljava/util/Map;	a	readMap
		p	1		keyReader
		p	2		valueReader
	m	(Lss$b;Ljava/lang/Object;)V	a	lambda$writeEither$7
		p	2		object
	m	(Lss$b;Lss$b;Ljava/lang/Object;Ljava/lang/Object;)V	a	lambda$writeMap$5
		p	3		key
		p	4		value
	m	(Ltj;)Lss;	a	writeComponent
		p	1		text
	m	([B)Lss;	a	writeByteArray
		p	1		array
	m	([I)Lss;	a	writeVarIntArray
		p	1		array
	m	([J)Lss;	a	writeLongArray
		p	1		array
	m	([JI)[J	a	readLongArray
		p	1		toArray
		p	2		maxSize
	m	()[B	b	readByteArray
	m	(I)[B	b	readByteArray
		p	1		maxSize
	m	(J)Lss;	b	writeVarLong
		p	1		value
	m	(Ladc;)V	b	writeResourceKey
		p	1		key
	m	(Ljava/lang/Class;)Ljava/lang/Enum;	b	readEnum
		p	1		enumClass
	m	(Ljava/lang/Object;Ljava/lang/String;)Lio/netty/handler/codec/EncoderException;	b	lambda$writeWithCodec$1
		p	1		error
	m	(Ljava/lang/String;)Lio/netty/handler/codec/DecoderException;	b	lambda$readJsonWithCodec$2
		p	0		error
	m	(Lss$a;)Ljava/util/Optional;	b	readOptional
		p	1		reader
	m	(Lss$a;Lss$a;)Lcom/mojang/datafixers/util/Either;	b	readEither
		p	1		leftReader
		p	2		rightReader
	m	(Lss$b;Ljava/lang/Object;)V	b	lambda$writeEither$6
		p	2		object
	m	([J)[J	b	readLongArray
		p	1		toArray
	m	()[I	c	readVarIntArray
	m	(I)[I	c	readVarIntArray
		p	1		maxSize
	m	(Lss$a;)Ljava/lang/Object;	c	readNullable
		p	1		reader
	m	()[J	d	readLongArray
	m	(I)Lss;	d	writeVarInt
		p	1		value
	m	()[B	e	accessByteBufWithCorrectSize
	m	(I)Ljava/lang/String;	e	readUtf
		p	1		maxLength
	m	()Lgt;	f	readBlockPos
	m	(I)Ljava/util/BitSet;	f	readFixedBitSet
		p	1		size
	m	()Lclp;	g	readChunkPos
	m	(I)I	g	getMaxEncodedUtfLength
		p	0		decodedLength
	m	()Lhw;	h	readSectionPos
	m	()Lhc;	i	readGlobalPos
	m	()Lorg/joml/Vector3f;	j	readVector3f
	m	()Lorg/joml/Quaternionf;	k	readQuaternion
	m	()Ltj;	l	readComponent
	m	()I	m	readVarInt
	m	()J	n	readVarLong
	m	()Ljava/util/UUID;	o	readUUID
	m	()Lre;	p	readNbt
	m	()Lre;	q	readAnySizeNbt
	m	()Lcfv;	r	readItem
	m	()Ljava/lang/String;	s	readUtf
	m	()Ladd;	t	readResourceLocation
	m	()Ljava/util/Date;	u	readDate
	m	()Ljava/time/Instant;	v	readInstant
	m	()Ljava/security/PublicKey;	w	readPublicKey
	m	()Leda;	x	readBlockHitResult
	m	()Ljava/util/BitSet;	y	readBitSet
	m	()Lcom/mojang/authlib/GameProfile;	z	readGameProfile
	f	I	a	DEFAULT_NBT_QUOTA
	f	S	b	MAX_STRING_LENGTH
	f	I	c	MAX_COMPONENT_STRING_LENGTH
	f	I	d	MAX_VARINT_SIZE
	f	I	e	MAX_VARLONG_SIZE
	f	Lio/netty/buffer/ByteBuf;	f	source
	f	I	g	PUBLIC_KEY_SIZE
	f	I	h	MAX_PUBLIC_KEY_HEADER_SIZE
	f	I	i	MAX_PUBLIC_KEY_LENGTH
	f	Lcom/google/gson/Gson;	j	GSON
c	ss$1	net/minecraft/network/FriendlyByteBuf$1
	f	[I	a	$SwitchMap$net$minecraft$core$Holder$Kind
c	ss$a	net/minecraft/network/FriendlyByteBuf$Reader
	m	(Lss;)Ljava/util/Optional;	a	lambda$asOptional$0
		p	1		buf
c	ss$b	net/minecraft/network/FriendlyByteBuf$Writer
	m	(Lss;Ljava/util/Optional;)V	a	lambda$asOptional$0
		p	1		buf
		p	2		value
c	st	net/minecraft/network/PacketBundlePacker
	m	(Lvc;)V	<init>	<init>
		p	1		side
	m	(Lio/netty/channel/ChannelHandlerContext;Lvb;Ljava/util/List;)V	a	decode
	f	Lva$a;	a	currentBundler
	f	Lva;	b	infoForCurrentBundler
	f	Lvc;	c	flow
c	su	net/minecraft/network/PacketBundleUnpacker
	m	(Lvc;)V	<init>	<init>
		p	1		side
	m	(Lio/netty/channel/ChannelHandlerContext;Lvb;Ljava/util/List;)V	a	encode
	f	Lvc;	a	flow
c	sv	net/minecraft/network/PacketDecoder
	m	(Lvc;)V	<init>	<init>
		p	1		side
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lvc;	b	flow
c	sw	net/minecraft/network/PacketEncoder
	m	(Lvc;)V	<init>	<init>
		p	1		side
	m	(Lio/netty/channel/ChannelHandlerContext;Lvb;Lio/netty/buffer/ByteBuf;)V	a	encode
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lvc;	b	flow
c	sx	net/minecraft/network/PacketListener
	m	()Z	a	isAcceptingMessages
	m	(Ltj;)V	a	onDisconnect
		p	1		reason
	m	()Z	b	shouldPropagateHandlingExceptions
c	sy	net/minecraft/network/PacketSendListener
	m	()V	a	onSuccess
	m	(Ljava/lang/Runnable;)Lsy;	a	thenRun
		p	0		runnable
	m	(Ljava/util/function/Supplier;)Lsy;	a	exceptionallySend
		p	0		failurePacket
	m	()Lvb;	b	onFailure
c	sy$1	net/minecraft/network/PacketSendListener$1
	m	()V	a	onSuccess
	m	()Lvb;	b	onFailure
	f	Ljava/lang/Runnable;	a	val$runnable
c	sy$2	net/minecraft/network/PacketSendListener$2
	m	()Lvb;	b	onFailure
	f	Ljava/util/function/Supplier;	a	val$handler
c	sz	net/minecraft/network/RateKickingConnection
	m	(I)V	<init>	<init>
		p	1		rateLimit
	m	()V	b	tickSecond
	m	()V	p	lambda$tickSecond$0
	f	Lorg/slf4j/Logger;	i	LOGGER
	f	Ltj;	j	EXCEED_REASON
	f	I	k	rateLimitPacketsPerSecond
c	ta	net/minecraft/network/SkipPacketException
	m	(Ljava/lang/Throwable;)V	<init>	<init>
		p	1		cause
c	tb	net/minecraft/network/TickablePacketListener
	m	()V	c	tick
c	tc	net/minecraft/network/Varint21FrameDecoder
c	td	net/minecraft/network/Varint21LengthFieldPrepender
	m	(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V	a	encode
	f	I	a	MAX_BYTES
c	te	net/minecraft/network/chat/ChatDecorator
	m	(Laiq;Ltj;)Ljava/util/concurrent/CompletableFuture;	a	lambda$static$0
		p	0		sender
		p	1		message
	m	(Laiq;Ltj;)Ljava/util/concurrent/CompletableFuture;	decorate	decorate
		p	1		sender
		p	2		message
	f	Lte;	a	PLAIN
c	tf	net/minecraft/network/chat/ChatType
	m	()Ltg;	a	chat
	m	(Ladc;Lbfh;)Ltf$a;	a	bind
		p	0		typeKey
		p	1		entity
	m	(Ladc;Ldr;)Ltf$a;	a	bind
		p	0		typeKey
		p	1		source
	m	(Ladc;Lhr;Ltj;)Ltf$a;	a	bind
		p	0		typeKey
		p	1		registryManager
		p	2		name
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ljava/lang/String;)Ladc;	a	create
		p	0		id
	m	(Loa;)V	a	bootstrap
		p	0		messageTypeRegisterable
	m	(Ltj;)Ltf$a;	a	bind
		p	1		name
	m	()Ltg;	b	narration
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ltg;	b	DEFAULT_CHAT_DECORATION
	f	Ladc;	c	CHAT
	f	Ladc;	d	SAY_COMMAND
	f	Ladc;	e	MSG_COMMAND_INCOMING
	f	Ladc;	f	MSG_COMMAND_OUTGOING
	f	Ladc;	g	TEAM_MSG_COMMAND_INCOMING
	f	Ladc;	h	TEAM_MSG_COMMAND_OUTGOING
	f	Ladc;	i	EMOTE_COMMAND
	f	Ltg;	j	chat
	f	Ltg;	k	narration
c	tf$a	net/minecraft/network/chat/ChatType$Bound
	m	(Ltf;Ltj;)V	<init>	<init>
		p	1		type
		p	2		name
	m	()Ltf;	a	chatType
	m	(Lhr;)Ltf$b;	a	toNetwork
		p	1		registryManager
	m	(Ltj;)Ltj;	a	decorate
		p	1		content
	m	()Ltj;	b	name
	m	(Ltj;)Ltj;	b	decorateNarration
		p	1		content
	m	()Ltj;	c	targetName
	m	(Ltj;)Ltf$a;	c	withTargetName
		p	1		targetName
	f	Ltf;	a	chatType
	f	Ltj;	b	name
	f	Ltj;	c	targetName
c	tf$b	net/minecraft/network/chat/ChatType$BoundNetwork
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()I	a	chatType
	m	(Lhr;)Ljava/util/Optional;	a	resolve
		p	1		registryManager
	m	(Lss;)V	a	write
		p	1		buf
	m	(Ltf;)Ltf$a;	a	lambda$resolve$0
		p	1		type
	m	()Ltj;	b	name
	m	()Ltj;	c	targetName
	f	I	a	chatType
	f	Ltj;	b	name
	f	Ltj;	c	targetName
c	tg	net/minecraft/network/chat/ChatTypeDecoration
	m	()Ljava/lang/String;	a	translationKey
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ljava/lang/String;)Ltg;	a	withSender
		p	0		translationKey
	m	(Ltj;Ltf$a;)Ltj;	a	decorate
		p	1		content
		p	2		params
	m	()Ljava/util/List;	b	parameters
	m	(Ljava/lang/String;)Ltg;	b	incomingDirectMessage
		p	0		translationKey
	m	(Ltj;Ltf$a;)[Ltj;	b	resolveParameters
		p	1		content
		p	2		params
	m	()Luf;	c	style
	m	(Ljava/lang/String;)Ltg;	c	outgoingDirectMessage
		p	0		translationKey
	m	(Ljava/lang/String;)Ltg;	d	teamMessage
		p	0		translationKey
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/lang/String;	b	translationKey
	f	Ljava/util/List;	c	parameters
	f	Luf;	d	style
c	tg$a	net/minecraft/network/chat/ChatTypeDecoration$Parameter
	m	(Ljava/lang/String;ILjava/lang/String;Ltg$a$a;)V	<init>	<init>
		p	3		name
		p	4		selector
	m	()[Ltg$a;	a	$values
	m	(Ltj;Ltf$a;)Ltj;	a	select
		p	1		content
		p	2		params
	m	(Ltj;Ltf$a;)Ltj;	b	lambda$static$2
		p	0		content
		p	1		params
	m	()Ljava/lang/String;	c	getSerializedName
	m	(Ltj;Ltf$a;)Ltj;	c	lambda$static$1
		p	0		content
		p	1		params
	m	(Ltj;Ltf$a;)Ltj;	d	lambda$static$0
		p	0		content
		p	1		params
	f	Ltg$a;	a	SENDER
	f	Ltg$a;	b	TARGET
	f	Ltg$a;	c	CONTENT
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	Ljava/lang/String;	e	name
	f	Ltg$a$a;	f	selector
	f	[Ltg$a;	g	$VALUES
c	tg$a$a	net/minecraft/network/chat/ChatTypeDecoration$Parameter$Selector
	m	(Ltj;Ltf$a;)Ltj;	select	select
		p	1		content
		p	2		params
c	th	net/minecraft/network/chat/ClickEvent
	m	(Lth$a;Ljava/lang/String;)V	<init>	<init>
		p	1		action
		p	2		value
	m	()Lth$a;	a	getAction
	m	()Ljava/lang/String;	b	getValue
	f	Lth$a;	a	action
	f	Ljava/lang/String;	b	value
c	th$a	net/minecraft/network/chat/ClickEvent$Action
	m	(Ljava/lang/String;ILjava/lang/String;Z)V	<init>	<init>
		p	3		name
		p	4		userDefinable
	m	()Z	a	isAllowedFromServer
	m	(Ljava/lang/String;)Lth$a;	a	getByName
		p	0		name
	m	(Lth$a;)Lth$a;	a	lambda$static$0
		p	0		a
	m	()Ljava/lang/String;	b	getName
	m	()[Lth$a;	c	$values
	f	Lth$a;	a	OPEN_URL
	f	Lth$a;	b	OPEN_FILE
	f	Lth$a;	c	RUN_COMMAND
	f	Lth$a;	d	SUGGEST_COMMAND
	f	Lth$a;	e	CHANGE_PAGE
	f	Lth$a;	f	COPY_TO_CLIPBOARD
	f	Ljava/util/Map;	g	LOOKUP
	f	Z	h	allowFromServer
	f	Ljava/lang/String;	i	name
	f	[Lth$a;	j	$VALUES
c	ti	net/minecraft/network/chat/CommonComponents
	m	()Ltw;	a	space
	m	(J)Ltw;	a	days
		p	0		days
	m	(Ljava/util/Collection;)Ltj;	a	joinLines
		p	0		texts
	m	(Ltj;Ltj;)Ltw;	a	optionNameValue
		p	0		text
		p	1		value
	m	(Ltj;Z)Ltw;	a	optionStatus
		p	0		text
		p	1		value
	m	(Z)Ltj;	a	optionStatus
		p	0		on
	m	([Ltj;)Ltw;	a	joinForNarration
		p	0		sentences
	m	(J)Ltw;	b	hours
		p	0		hours
	m	([Ltj;)Ltj;	b	joinLines
		p	0		texts
	m	(J)Ltw;	c	minutes
		p	0		minutes
	f	Ltj;	a	EMPTY
	f	Ltj;	b	OPTION_ON
	f	Ltj;	c	OPTION_OFF
	f	Ltj;	d	GUI_DONE
	f	Ltj;	e	GUI_CANCEL
	f	Ltj;	f	GUI_YES
	f	Ltj;	g	GUI_NO
	f	Ltj;	h	GUI_PROCEED
	f	Ltj;	i	GUI_CONTINUE
	f	Ltj;	j	GUI_BACK
	f	Ltj;	k	GUI_TO_TITLE
	f	Ltj;	l	GUI_ACKNOWLEDGE
	f	Ltj;	m	CONNECT_FAILED
	f	Ltj;	n	NEW_LINE
	f	Ltj;	o	NARRATION_SEPARATOR
	f	Ltj;	p	ELLIPSIS
	f	Ltj;	q	SPACE
c	tj	net/minecraft/network/chat/Component
	m	()Luf;	a	getStyle
	m	(I)Ljava/lang/String;	a	getString
		p	1		length
	m	(ILjava/lang/StringBuilder;Ljava/lang/String;)Ljava/util/Optional;	a	lambda$getString$0
		p	2		string
	m	(Ljava/lang/String;)Ltj;	a	nullToEmpty
		p	0		string
	m	(Ljava/lang/String;Ljava/lang/String;)Ltw;	a	translatableWithFallback
		p	0		key
		p	1		fallback
	m	(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)Ltw;	a	translatableWithFallback
		p	0		key
		p	1		fallback
		p	2		args
	m	(Ljava/lang/String;Ljava/util/Optional;)Ltw;	a	selector
		p	0		pattern
		p	1		separator
	m	(Ljava/lang/String;ZLjava/util/Optional;Luk;)Ltw;	a	nbt
		p	0		rawPath
		p	1		interpret
		p	2		separator
		p	3		dataSource
	m	(Ljava/lang/String;[Ljava/lang/Object;)Ltw;	a	translatable
		p	0		key
		p	1		args
	m	(Ljava/util/List;Luf;Ljava/lang/String;)Ljava/util/Optional;	a	lambda$toFlatList$1
		p	1		styleOverride
		p	2		text
	m	(Ltj;)Z	a	contains
		p	1		text
	m	(Ltn$a;)Ljava/util/Optional;	a	visit
		p	1		visitor
	m	(Ltn$b;Luf;)Ljava/util/Optional;	a	visit
		p	1		styledVisitor
		p	2		style
	m	(Luf;)Ljava/util/List;	a	toFlatList
		p	1		style
	m	()Ltk;	b	getContents
	m	(Ljava/lang/String;)Ltw;	b	literal
		p	0		string
	m	(Ljava/lang/String;Ljava/lang/String;)Ltw;	b	score
		p	0		name
		p	1		objective
	m	()Ljava/util/List;	c	getSiblings
	m	(Ljava/lang/String;)Ltw;	c	translatable
		p	0		key
	m	()Ltw;	d	plainCopy
	m	(Ljava/lang/String;)Ltw;	d	keybind
		p	0		string
	m	()Ltw;	e	copy
	m	()Laov;	f	getVisualOrderText
	m	()Ljava/util/List;	g	toFlatList
	m	()Ltw;	h	empty
c	tj$a	net/minecraft/network/chat/Component$Serializer
	m	()Ljava/lang/reflect/Field;	a	lambda$static$2
	m	(Lcom/google/gson/JsonElement;)Ltw;	a	fromJson
		p	0		json
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ltw;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonSerializationContext;Ltj;)V	a	lambda$serializeSeparator$3
		p	3		separator
	m	(Lcom/google/gson/JsonSerializationContext;Lcom/google/gson/JsonObject;Ljava/util/Optional;)V	a	serializeSeparator
		p	1		context
		p	2		json
		p	3		separator
	m	(Lcom/google/gson/stream/JsonReader;)I	a	getPos
		p	0		reader
	m	(Lcom/mojang/brigadier/StringReader;)Ltw;	a	fromJson
		p	0		reader
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	unwrapTextArgument
		p	0		text
	m	(Ljava/lang/String;)Ltw;	a	fromJson
		p	0		json
	m	(Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Ljava/util/Optional;	a	parseSeparator
		p	1		type
		p	2		context
		p	3		json
	m	(Ltj;)Ljava/lang/String;	a	toJson
		p	0		text
	m	(Ltj;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	a	serialize
	m	(Luf;Lcom/google/gson/JsonObject;Lcom/google/gson/JsonSerializationContext;)V	a	serializeStyle
		p	1		style
		p	2		json
		p	3		context
	m	()Ljava/lang/reflect/Field;	b	lambda$static$1
	m	(Ljava/lang/String;)Ltw;	b	fromJsonLenient
		p	0		json
	m	(Ltj;)Ljava/lang/String;	b	toStableJson
		p	0		text
	m	()Lcom/google/gson/Gson;	c	lambda$static$0
	m	(Ltj;)Lcom/google/gson/JsonElement;	c	toJsonTree
		p	0		text
	f	Lcom/google/gson/Gson;	a	GSON
	f	Ljava/lang/reflect/Field;	b	JSON_READER_POS
	f	Ljava/lang/reflect/Field;	c	JSON_READER_LINESTART
c	tk	net/minecraft/network/chat/ComponentContents
	m	(Ldr;Lbfh;I)Ltw;	a	resolve
		p	1		source
		p	2		sender
		p	3		depth
	m	(Ltn$a;)Ljava/util/Optional;	a	visit
		p	1		visitor
	m	(Ltn$b;Luf;)Ljava/util/Optional;	a	visit
		p	1		visitor
		p	2		style
	f	Ltk;	a	EMPTY
c	tk$1	net/minecraft/network/chat/ComponentContents$1
c	tl	net/minecraft/network/chat/ComponentUtils
	m	(Lcom/mojang/authlib/GameProfile;)Ltj;	a	getDisplayName
		p	0		profile
	m	(Lcom/mojang/brigadier/Message;)Ltj;	a	fromMessage
		p	0		message
	m	(Ldr;Ljava/util/Optional;Lbfh;I)Ljava/util/Optional;	a	updateForEntity
		p	0		source
		p	1		text
		p	2		sender
		p	3		depth
	m	(Ldr;Ltj;Lbfh;I)Ltw;	a	updateForEntity
		p	0		source
		p	1		text
		p	2		sender
		p	3		depth
	m	(Ldr;Luf;Lbfh;I)Luf;	a	resolveStyle
		p	0		source
		p	1		style
		p	2		sender
		p	3		depth
	m	(Ljava/lang/String;)Ltw;	a	copyOnClickText
		p	0		string
	m	(Ljava/lang/String;Luf;)Luf;	a	lambda$copyOnClickText$1
		p	1		style
	m	(Ljava/util/Collection;)Ltj;	a	formatList
		p	0		strings
	m	(Ljava/util/Collection;Ljava/util/Optional;Ljava/util/function/Function;)Ltw;	a	formatList
		p	0		elements
		p	1		separator
		p	2		transformer
	m	(Ljava/util/Collection;Ljava/util/function/Function;)Ltj;	a	formatAndSortList
		p	0		elements
		p	1		transformer
	m	(Ljava/util/Collection;Ltj;)Ltj;	a	formatList
		p	0		texts
		p	1		separator
	m	(Ljava/util/Collection;Ltj;Ljava/util/function/Function;)Ltw;	a	formatList
		p	0		elements
		p	1		separator
		p	2		transformer
	m	(Ltj;)Ltw;	a	wrapInSquareBrackets
		p	0		text
	m	(Ltw;Luf;)Ltw;	a	mergeStyles
		p	0		text
		p	1		style
	m	(Ljava/lang/String;)Ltj;	b	lambda$formatList$0
		p	0		string
	m	(Ljava/util/Collection;Ljava/util/function/Function;)Ltj;	b	formatList
		p	0		elements
		p	1		transformer
	m	(Ltj;)Z	b	isTranslationResolvable
		p	0		text
	f	Ljava/lang/String;	a	DEFAULT_SEPARATOR_TEXT
	f	Ltj;	b	DEFAULT_SEPARATOR
	f	Ltj;	c	DEFAULT_NO_STYLE_SEPARATOR
c	tm	net/minecraft/network/chat/FilterMask
	m	(I)V	<init>	<init>
		p	1		length
	m	(Ljava/util/BitSet;)V	<init>	<init>
		p	1		mask
	m	(Ljava/util/BitSet;Ltm$a;)V	<init>	<init>
		p	1		mask
		p	2		status
	m	()Z	a	isEmpty
	m	(I)V	a	setFiltered
		p	1		index
	m	(Ljava/lang/String;)Ljava/lang/String;	a	apply
		p	1		raw
	m	(Lss;)Ltm;	a	read
		p	0		buf
	m	(Lss;Ltm;)V	a	write
		p	0		buf
		p	1		mask
	m	()Z	b	isFullyFiltered
	m	(Ljava/lang/String;)Ltj;	b	applyWithFormatting
		p	1		message
	m	()Ltm$a;	c	type
	m	()Ljava/util/BitSet;	d	mask
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ltm;	b	FULLY_FILTERED
	f	Ltm;	c	PASS_THROUGH
	f	Luf;	d	FILTERED_STYLE
	f	Lcom/mojang/serialization/Codec;	e	PASS_THROUGH_CODEC
	f	Lcom/mojang/serialization/Codec;	f	FULLY_FILTERED_CODEC
	f	Lcom/mojang/serialization/Codec;	g	PARTIALLY_FILTERED_CODEC
	f	C	h	HASH
	f	Ljava/util/BitSet;	i	mask
	f	Ltm$a;	j	type
c	tm$1	net/minecraft/network/chat/FilterMask$1
	f	[I	a	$SwitchMap$net$minecraft$network$chat$FilterMask$Type
c	tm$a	net/minecraft/network/chat/FilterMask$Type
	m	(Ljava/lang/String;ILjava/lang/String;Ljava/util/function/Supplier;)V	<init>	<init>
		p	3		id
		p	4		codecSupplier
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	()Lcom/mojang/serialization/Codec;	b	lambda$static$2
	m	()Ljava/lang/String;	c	getSerializedName
	m	()Lcom/mojang/serialization/Codec;	d	lambda$static$1
	m	()Lcom/mojang/serialization/Codec;	e	lambda$static$0
	m	()[Ltm$a;	f	$values
	f	Ltm$a;	a	PASS_THROUGH
	f	Ltm$a;	b	FULLY_FILTERED
	f	Ltm$a;	c	PARTIALLY_FILTERED
	f	Ljava/lang/String;	d	serializedName
	f	Ljava/util/function/Supplier;	e	codec
	f	[Ltm$a;	f	$VALUES
c	tn	net/minecraft/network/chat/FormattedText
	m	(Ljava/lang/String;Luf;)Ltn;	a	of
		p	0		string
		p	1		style
	m	(Ljava/lang/StringBuilder;Ljava/lang/String;)Ljava/util/Optional;	a	lambda$getString$0
		p	1		string
	m	(Ljava/util/List;)Ltn;	a	composite
		p	0		visitables
	m	(Ltn$a;)Ljava/util/Optional;	a	visit
		p	1		visitor
	m	(Ltn$b;Luf;)Ljava/util/Optional;	a	visit
		p	1		styledVisitor
		p	2		style
	m	([Ltn;)Ltn;	a	composite
		p	0		visitables
	m	(Ljava/lang/String;)Ltn;	e	of
		p	0		string
	f	Ljava/util/Optional;	a	STOP_ITERATION
	f	Ltn;	b	EMPTY
c	tn$1	net/minecraft/network/chat/FormattedText$1
	m	(Ltn$a;)Ljava/util/Optional;	a	visit
		p	1		visitor
	m	(Ltn$b;Luf;)Ljava/util/Optional;	a	visit
		p	1		styledVisitor
		p	2		style
c	tn$2	net/minecraft/network/chat/FormattedText$2
	m	(Ltn$a;)Ljava/util/Optional;	a	visit
		p	1		visitor
	m	(Ltn$b;Luf;)Ljava/util/Optional;	a	visit
		p	1		styledVisitor
		p	2		style
	f	Ljava/lang/String;	c	val$text
c	tn$3	net/minecraft/network/chat/FormattedText$3
	m	(Ltn$a;)Ljava/util/Optional;	a	visit
		p	1		visitor
	m	(Ltn$b;Luf;)Ljava/util/Optional;	a	visit
		p	1		styledVisitor
		p	2		style
	f	Ljava/lang/String;	c	val$text
	f	Luf;	d	val$style
c	tn$4	net/minecraft/network/chat/FormattedText$4
	m	(Ltn$a;)Ljava/util/Optional;	a	visit
		p	1		visitor
	m	(Ltn$b;Luf;)Ljava/util/Optional;	a	visit
		p	1		styledVisitor
		p	2		style
	f	Ljava/util/List;	c	val$parts
c	tn$a	net/minecraft/network/chat/FormattedText$ContentConsumer
	m	(Ljava/lang/String;)Ljava/util/Optional;	accept	accept
		p	1		asString
c	tn$b	net/minecraft/network/chat/FormattedText$StyledContentConsumer
	m	(Luf;Ljava/lang/String;)Ljava/util/Optional;	accept	accept
		p	1		style
		p	2		asString
c	to	net/minecraft/network/chat/HoverEvent
	m	(Lto$a;Ljava/lang/Object;)V	<init>	<init>
		p	1		action
		p	2		contents
	m	()Lto$a;	a	getAction
	m	(Lcom/google/gson/JsonObject;)Lto;	a	deserialize
		p	0		json
	m	(Lto$a;)Ljava/lang/Object;	a	getValue
		p	1		action
	m	()Lcom/google/gson/JsonObject;	b	serialize
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lto$a;	b	action
	f	Ljava/lang/Object;	c	value
c	to$a	net/minecraft/network/chat/HoverEvent$Action
	m	(Ljava/lang/String;ZLjava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;)V	<init>	<init>
		p	1		name
		p	2		parsable
		p	3		deserializer
		p	4		serializer
		p	5		legacyDeserializer
	m	()Z	a	isAllowedFromServer
	m	(Lcom/google/gson/JsonElement;)Lto;	a	deserialize
		p	1		contents
	m	(Ljava/lang/Object;)Lcom/google/gson/JsonElement;	a	serializeArg
		p	1		contents
	m	(Ljava/lang/String;)Lto$a;	a	getByName
		p	0		name
	m	(Ltj;)Lto;	a	deserializeFromLegacy
		p	1		value
	m	(Lto$a;)Lto$a;	a	lambda$static$0
		p	0		action
	m	()Ljava/lang/String;	b	getName
	m	(Ljava/lang/Object;)Ljava/lang/Object;	b	cast
		p	1		o
	f	Lto$a;	a	SHOW_TEXT
	f	Lto$a;	b	SHOW_ITEM
	f	Lto$a;	c	SHOW_ENTITY
	f	Ljava/util/Map;	d	LOOKUP
	f	Ljava/lang/String;	e	name
	f	Z	f	allowFromServer
	f	Ljava/util/function/Function;	g	argDeserializer
	f	Ljava/util/function/Function;	h	argSerializer
	f	Ljava/util/function/Function;	i	legacyArgDeserializer
c	to$b	net/minecraft/network/chat/HoverEvent$EntityTooltipInfo
	m	(Lbfl;Ljava/util/UUID;Ltj;)V	<init>	<init>
		p	1		entityType
		p	2		uuid
		p	3		name
	m	()Lcom/google/gson/JsonElement;	a	serialize
	m	(Lcom/google/gson/JsonElement;)Lto$b;	a	create
		p	0		json
	m	(Ltj;)Lto$b;	a	create
		p	0		text
	m	()Ljava/util/List;	b	getTooltipLines
	f	Lbfl;	a	type
	f	Ljava/util/UUID;	b	id
	f	Ltj;	c	name
	f	Ljava/util/List;	d	linesCache
c	to$c	net/minecraft/network/chat/HoverEvent$ItemStackInfo
	m	(Lcfq;ILre;)V	<init>	<init>
		p	1		item
		p	2		count
		p	3		nbt
	m	(Lcfv;)V	<init>	<init>
		p	1		stack
	m	()Lcfv;	a	getItemStack
	m	(Lcom/google/gson/JsonElement;)Lto$c;	a	create
		p	0		json
	m	(Ltj;)Lto$c;	a	create
		p	0		text
	m	()Lcom/google/gson/JsonElement;	b	serialize
	f	Lcfq;	a	item
	f	I	b	count
	f	Lre;	c	tag
	f	Lcfv;	d	itemStack
c	tp	net/minecraft/network/chat/LastSeenMessages
	m	()Ljava/util/List;	a	entries
	m	(Lapr$a;)V	a	updateSignature
		p	1		updater
	m	(Ltv;)Ltp$a;	a	pack
		p	1		storage
	m	(Ltv;Ltu;)Ltu$a;	a	lambda$pack$0
		p	1		signature
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ltp;	b	EMPTY
	f	I	c	LAST_SEEN_MESSAGES_MAX_LENGTH
	f	Ljava/util/List;	d	entries
c	tp$a	net/minecraft/network/chat/LastSeenMessages$Packed
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()Ljava/util/List;	a	entries
	m	(Lss;)V	a	write
		p	1		buf
	m	(Ltv;)Ljava/util/Optional;	a	unpack
		p	1		storage
	f	Ltp$a;	a	EMPTY
	f	Ljava/util/List;	b	entries
c	tp$b	net/minecraft/network/chat/LastSeenMessages$Update
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()I	a	offset
	m	(Lss;)V	a	write
		p	1		buf
	m	()Ljava/util/BitSet;	b	acknowledged
	f	I	a	offset
	f	Ljava/util/BitSet;	b	acknowledged
c	tq	net/minecraft/network/chat/LastSeenMessagesTracker
	m	(I)V	<init>	<init>
		p	1		size
	m	()I	a	getAndClearOffset
	m	(Lts;)V	a	addEntry
		p	1		message
	m	(Ltu;)V	a	ignorePending
		p	1		signature
	m	(Ltu;Z)Z	a	addPending
		p	1		signature
		p	2		displayed
	m	()Ltq$a;	b	generateAndApplyUpdate
	m	()I	c	offset
	f	[Lts;	a	trackedMessages
	f	I	b	tail
	f	I	c	offset
	f	Ltu;	d	lastTrackedMessage
c	tq$a	net/minecraft/network/chat/LastSeenMessagesTracker$Update
	m	()Ltp;	a	lastSeen
	m	()Ltp$b;	b	update
	f	Ltp;	a	lastSeen
	f	Ltp$b;	b	update
c	tr	net/minecraft/network/chat/LastSeenMessagesValidator
	m	(I)V	<init>	<init>
		p	1		size
	m	()I	a	trackedMessagesCount
	m	(I)Z	a	applyOffset
		p	1		index
	m	(Ltp$b;)Ljava/util/Optional;	a	applyUpdate
		p	1		acknowledgment
	m	(Ltu;)V	a	addPending
		p	1		signature
	f	I	a	lastSeenCount
	f	Lit/unimi/dsi/fastutil/objects/ObjectList;	b	trackedMessages
	f	Ltu;	c	lastPendingMessage
c	ts	net/minecraft/network/chat/LastSeenTrackedEntry
	m	()Lts;	a	acknowledge
	m	()Ltu;	b	signature
	m	()Z	c	pending
	f	Ltu;	a	signature
	f	Z	b	pending
c	tt	net/minecraft/network/chat/LocalChatSession
	m	()Ltz;	a	asRemote
	m	(Lbyo;)Ltt;	a	create
		p	0		keyPair
	m	(Ljava/util/UUID;)Luc$c;	a	createMessageEncoder
		p	1		sender
	m	()Ljava/util/UUID;	b	sessionId
	m	()Lbyo;	c	keyPair
	f	Ljava/util/UUID;	a	sessionId
	f	Lbyo;	b	keyPair
c	tu	net/minecraft/network/chat/MessageSignature
	m	()Ljava/nio/ByteBuffer;	a	asByteBuffer
	m	(Laps;Lapr;)Z	a	verify
		p	1		verifier
		p	2		updatable
	m	(Lss;)Ltu;	a	read
		p	0		buf
	m	(Lss;Ltu;)V	a	write
		p	0		buf
		p	1		signature
	m	(Ltv;)Ltu$a;	a	pack
		p	1		storage
	m	()[B	b	bytes
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	BYTES
	f	[B	c	bytes
c	tu$a	net/minecraft/network/chat/MessageSignature$Packed
	m	(I)V	<init>	<init>
		p	1		id
	m	(Ltu;)V	<init>	<init>
		p	1		signature
	m	()I	a	id
	m	(Lss;)Ltu$a;	a	read
		p	0		buf
	m	(Lss;Ltu$a;)V	a	write
		p	0		buf
		p	1		indexed
	m	(Ltv;)Ljava/util/Optional;	a	unpack
		p	1		storage
	m	()Ltu;	b	fullSignature
	f	I	a	FULL_SIGNATURE
	f	I	b	id
	f	Ltu;	c	fullSignature
c	tv	net/minecraft/network/chat/MessageSignatureCache
	m	(I)V	<init>	<init>
		p	1		maxEntries
	m	()Ltv;	a	createDefault
	m	(I)Ltu;	a	unpack
		p	1		index
	m	(Ljava/util/ArrayDeque;)V	a	push
		p	1		deque
	m	(Ljava/util/List;)V	a	push
		p	1		signatures
	m	(Ltu;)I	a	pack
		p	1		signature
	m	(Lty;)V	a	push
		p	1		message
	f	I	a	NOT_FOUND
	f	I	b	DEFAULT_CAPACITY
	f	[Ltu;	c	entries
c	tw	net/minecraft/network/chat/MutableComponent
	m	(Ltk;Ljava/util/List;Luf;)V	<init>	<init>
		p	1		content
		p	2		siblings
		p	3		style
	m	()Luf;	a	getStyle
	m	(Ljava/util/function/UnaryOperator;)Ltw;	a	withStyle
		p	1		styleUpdater
	m	(Ln;)Ltw;	a	withStyle
		p	1		formatting
	m	(Ltk;)Ltw;	a	create
		p	0		content
	m	([Ln;)Ltw;	a	withStyle
		p	1		formattings
	m	()Ltk;	b	getContents
	m	(Ltj;)Ltw;	b	append
		p	1		text
	m	(Luf;)Ltw;	b	setStyle
		p	1		style
	m	()Ljava/util/List;	c	getSiblings
	m	(Luf;)Ltw;	c	withStyle
		p	1		styleOverride
	m	()Laov;	f	getVisualOrderText
	m	(Ljava/lang/String;)Ltw;	f	append
		p	1		text
	f	Ltk;	c	contents
	f	Ljava/util/List;	d	siblings
	f	Luf;	e	style
	f	Laov;	f	visualOrderText
	f	Lqz;	g	decomposedWith
c	tx	net/minecraft/network/chat/OutgoingChatMessage
	m	()Ltj;	a	content
	m	(Laiq;ZLtf$a;)V	a	sendToPlayer
		p	1		sender
		p	2		filterMaskEnabled
		p	3		params
	m	(Lty;)Ltx;	a	create
		p	0		message
c	tx$a	net/minecraft/network/chat/OutgoingChatMessage$Disguised
	m	()Ltj;	a	content
	m	(Laiq;ZLtf$a;)V	a	sendToPlayer
		p	1		sender
		p	2		filterMaskEnabled
		p	3		params
	f	Ltj;	a	content
c	tx$b	net/minecraft/network/chat/OutgoingChatMessage$Player
	m	(Lty;)V	<init>	<init>
		p	1		message
	m	()Ltj;	a	content
	m	(Laiq;ZLtf$a;)V	a	sendToPlayer
		p	1		sender
		p	2		filterMaskEnabled
		p	3		params
	m	()Lty;	b	message
	f	Lty;	a	message
c	ty	net/minecraft/network/chat/PlayerChatMessage
	m	()Lty;	a	removeUnsignedContent
	m	(Lapr$a;)V	a	lambda$verify$4
		p	1		updater
	m	(Lapr$a;Lud;Lub;)V	a	updateSignature
		p	0		updater
		p	1		link
		p	2		body
	m	(Laps;)Z	a	verify
		p	1		verifier
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	(Ljava/lang/String;)Lty;	a	system
		p	0		content
	m	(Ljava/time/Instant;)Z	a	hasExpiredServer
		p	1		currentTime
	m	(Ljava/util/UUID;)Z	a	hasSignatureFrom
		p	1		sender
	m	(Ljava/util/UUID;Ljava/lang/String;)Lty;	a	unsigned
		p	0		sender
		p	1		content
	m	(Ltj;)Lty;	a	withUnsignedContent
		p	1		unsignedContent
	m	(Ltm;)Lty;	a	filter
		p	1		filterMask
	m	(Lty;)Ljava/util/Optional;	a	lambda$static$1
		p	0		message
	m	(Lud;Ljava/util/Optional;Lub;Ljava/util/Optional;Ltm;)Lty;	a	lambda$static$2
		p	0		link
		p	1		signature
		p	2		signedBody
		p	3		unsignedContent
		p	4		filterMask
	m	(Z)Lty;	a	filter
		p	1		enabled
	m	()Ljava/lang/String;	b	signedContent
	m	(Ljava/time/Instant;)Z	b	hasExpiredClient
		p	1		currentTime
	m	(Lty;)Ljava/util/Optional;	b	lambda$static$0
		p	0		message
	m	()Ltj;	c	decoratedContent
	m	()Ljava/time/Instant;	d	timeStamp
	m	()J	e	salt
	m	()Ljava/util/UUID;	f	sender
	m	()Z	g	isSystem
	m	()Z	h	hasSignature
	m	()Z	i	isFullyFiltered
	m	()Lud;	j	link
	m	()Ltu;	k	signature
	m	()Lub;	l	signedBody
	m	()Ltj;	m	unsignedContent
	m	()Ltm;	n	filterMask
	m	()Ltj;	o	lambda$decoratedContent$5
	f	Lcom/mojang/serialization/MapCodec;	a	MAP_CODEC
	f	Ljava/time/Duration;	b	MESSAGE_EXPIRES_AFTER_SERVER
	f	Ljava/time/Duration;	c	MESSAGE_EXPIRES_AFTER_CLIENT
	f	Lud;	d	link
	f	Ltu;	e	signature
	f	Lub;	f	signedBody
	f	Ltj;	g	unsignedContent
	f	Ltm;	h	filterMask
	f	Ljava/util/UUID;	i	SYSTEM_SENDER
c	tz	net/minecraft/network/chat/RemoteChatSession
	m	()Lue;	a	createMessageValidator
	m	(Ljava/util/UUID;)Luc$b;	a	createMessageDecoder
		p	1		sender
	m	()Ltz$a;	b	asData
	m	()Ljava/util/UUID;	c	sessionId
	m	()Lbyp;	d	profilePublicKey
	f	Ljava/util/UUID;	a	sessionId
	f	Lbyp;	b	profilePublicKey
c	tz$a	net/minecraft/network/chat/RemoteChatSession$Data
	m	()Ljava/util/UUID;	a	sessionId
	m	(Lcom/mojang/authlib/GameProfile;Laps;Ljava/time/Duration;)Ltz;	a	validate
		p	1		gameProfile
		p	2		servicesSignatureVerifier
		p	3		gracePeriod
	m	(Lss;)Ltz$a;	a	read
		p	0		buf
	m	(Lss;Ltz$a;)V	a	write
		p	0		buf
		p	1		serialized
	m	()Lbyp$a;	b	profilePublicKey
	f	Ljava/util/UUID;	a	sessionId
	f	Lbyp$a;	b	profilePublicKey
c	ua	net/minecraft/network/chat/SignableCommand
	m	()Ljava/util/List;	a	arguments
	m	(Lcom/mojang/brigadier/ParseResults;)Lua;	a	of
		p	0		parseResults
	m	(Ljava/lang/String;Lcom/mojang/brigadier/context/CommandContextBuilder;)Ljava/util/List;	a	collectArguments
		p	0		argumentName
		p	1		builder
	f	Ljava/util/List;	a	arguments
c	ua$a	net/minecraft/network/chat/SignableCommand$Argument
	m	()Ljava/lang/String;	a	name
	m	()Lcom/mojang/brigadier/tree/ArgumentCommandNode;	b	node
	m	()Ljava/lang/String;	c	value
	f	Lcom/mojang/brigadier/tree/ArgumentCommandNode;	a	node
	f	Ljava/lang/String;	b	value
c	ub	net/minecraft/network/chat/SignedMessageBody
	m	()Ljava/lang/String;	a	content
	m	(Lapr$a;)V	a	updateSignature
		p	1		updater
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ljava/lang/String;)Lub;	a	unsigned
		p	0		content
	m	(Ltv;)Lub$a;	a	pack
		p	1		storage
	m	()Ljava/time/Instant;	b	timeStamp
	m	()J	c	salt
	m	()Ltp;	d	lastSeen
	f	Lcom/mojang/serialization/MapCodec;	a	MAP_CODEC
	f	Ljava/lang/String;	b	content
	f	Ljava/time/Instant;	c	timeStamp
	f	J	d	salt
	f	Ltp;	e	lastSeen
c	ub$a	net/minecraft/network/chat/SignedMessageBody$Packed
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()Ljava/lang/String;	a	content
	m	(Lss;)V	a	write
		p	1		buf
	m	(Ltp;)Lub;	a	lambda$unpack$0
		p	1		lastSeenMessages
	m	(Ltv;)Ljava/util/Optional;	a	unpack
		p	1		storage
	m	()Ljava/time/Instant;	b	timeStamp
	m	()J	c	salt
	m	()Ltp$a;	d	lastSeen
	f	Ljava/lang/String;	a	content
	f	Ljava/time/Instant;	b	timeStamp
	f	J	c	salt
	f	Ltp$a;	d	lastSeen
c	uc	net/minecraft/network/chat/SignedMessageChain
	m	(Ljava/util/UUID;Ljava/util/UUID;)V	<init>	<init>
		p	1		sender
		p	2		sessionId
	m	()Lud;	a	advanceLink
	m	(Lapt;)Luc$c;	a	encoder
		p	1		signer
	m	(Lapt;Lub;)Ltu;	a	lambda$encoder$1
		p	2		body
	m	(Lbyp;)Luc$b;	a	decoder
		p	1		playerPublicKey
	m	(Lbyp;Laps;Ltu;Lub;)Lty;	a	lambda$decoder$2
		p	3		signature
		p	4		body
	m	(Lud;Lub;Lapr$a;)V	a	lambda$encoder$0
		p	2		updatable
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lud;	b	nextLink
c	uc$a	net/minecraft/network/chat/SignedMessageChain$DecodeException
	m	(Ltj;Z)V	<init>	<init>
		p	1		message
		p	2		shouldDisconnect
	m	()Z	a	shouldDisconnect
	f	Z	a	shouldDisconnect
c	uc$b	net/minecraft/network/chat/SignedMessageChain$Decoder
	m	(Ljava/util/UUID;Ltu;Lub;)Lty;	a	lambda$unsigned$1
		p	1		signature
		p	2		body
	m	(Ltu;Lub;)Lty;	a	lambda$static$0
		p	0		signature
		p	1		body
	m	(Ltu;Lub;)Lty;	unpack	unpack
		p	1		signature
		p	2		body
	m	(Ljava/util/UUID;)Luc$b;	unsigned	unsigned
		p	0		uuid
	f	Luc$b;	a	REJECT_ALL
c	uc$c	net/minecraft/network/chat/SignedMessageChain$Encoder
	m	(Lub;)Ltu;	a	lambda$static$0
		p	0		body
	m	(Lub;)Ltu;	pack	pack
		p	1		body
	f	Luc$c;	a	UNSIGNED
c	ud	net/minecraft/network/chat/SignedMessageLink
	m	()Lud;	a	advance
	m	(Lapr$a;)V	a	updateSignature
		p	1		updater
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ljava/util/UUID;)Lud;	a	unsigned
		p	0		sender
	m	(Ljava/util/UUID;Ljava/util/UUID;)Lud;	a	root
		p	0		sender
		p	1		sessionId
	m	(Lud;)Z	a	isDescendantOf
		p	1		preceding
	m	()I	b	index
	m	()Ljava/util/UUID;	c	sender
	m	()Ljava/util/UUID;	d	sessionId
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	index
	f	Ljava/util/UUID;	c	sender
	f	Ljava/util/UUID;	d	sessionId
c	ue	net/minecraft/network/chat/SignedMessageValidator
	m	(Lty;)Z	a	lambda$static$1
		p	0		message
	m	(Lty;)Z	b	lambda$static$0
		p	0		message
	m	(Lty;)Z	updateAndValidate	updateAndValidate
		p	1		message
	f	Lue;	a	ACCEPT_UNSIGNED
	f	Lue;	b	REJECT_ALL
c	ue$a	net/minecraft/network/chat/SignedMessageValidator$KeyBased
	m	(Laps;)V	<init>	<init>
		p	1		signatureVerifier
	m	(Lty;)Z	a	validateChain
		p	1		message
	m	(Lty;)Z	updateAndValidate	updateAndValidate
		p	1		message
	f	Laps;	c	validator
	f	Lty;	d	lastMessage
	f	Z	e	isChainValid
c	uf	net/minecraft/network/chat/Style
	m	(Luh;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Lth;Lto;Ljava/lang/String;Ladd;)V	<init>	<init>
		p	1		color
		p	2		bold
		p	3		italic
		p	4		underlined
		p	5		strikethrough
		p	6		obfuscated
		p	7		clickEvent
		p	8		hoverEvent
		p	9		insertion
		p	10		font
	m	()Luh;	a	getColor
	m	(I)Luf;	a	withColor
		p	1		rgbColor
	m	(Ladd;)Luf;	a	withFont
		p	1		font
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$8
		p	0		instance
	m	(Ljava/lang/Boolean;)Luf;	a	withBold
		p	1		bold
	m	(Ljava/lang/String;)Luf;	a	withInsertion
		p	1		insertion
	m	(Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)Luf;	a	create
		p	0		color
		p	1		bold
		p	2		italic
		p	3		underlined
		p	4		strikethrough
		p	5		obfuscated
		p	6		insertion
		p	7		font
	m	(Ln;)Luf;	a	withColor
		p	1		color
	m	(Lth;)Luf;	a	withClickEvent
		p	1		clickEvent
	m	(Lto;)Luf;	a	withHoverEvent
		p	1		hoverEvent
	m	(Luf;)Luf;	a	applyTo
		p	1		parent
	m	(Luh;)Luf;	a	withColor
		p	1		color
	m	([Ln;)Luf;	a	applyFormats
		p	1		formattings
	m	()Z	b	isBold
	m	(Ljava/lang/Boolean;)Luf;	b	withItalic
		p	1		italic
	m	(Ln;)Luf;	b	applyFormat
		p	1		formatting
	m	(Luf;)Ljava/util/Optional;	b	lambda$static$7
		p	0		style
	m	()Z	c	isItalic
	m	(Ljava/lang/Boolean;)Luf;	c	withUnderlined
		p	1		underline
	m	(Ln;)Luf;	c	applyLegacyFormat
		p	1		formatting
	m	(Luf;)Ljava/util/Optional;	c	lambda$static$6
		p	0		style
	m	()Z	d	isStrikethrough
	m	(Ljava/lang/Boolean;)Luf;	d	withStrikethrough
		p	1		strikethrough
	m	(Luf;)Ljava/util/Optional;	d	lambda$static$5
		p	0		style
	m	()Z	e	isUnderlined
	m	(Ljava/lang/Boolean;)Luf;	e	withObfuscated
		p	1		obfuscated
	m	(Luf;)Ljava/util/Optional;	e	lambda$static$4
		p	0		style
	m	()Z	f	isObfuscated
	m	(Luf;)Ljava/util/Optional;	f	lambda$static$3
		p	0		style
	m	()Z	g	isEmpty
	m	(Luf;)Ljava/util/Optional;	g	lambda$static$2
		p	0		style
	m	()Lth;	h	getClickEvent
	m	(Luf;)Ljava/util/Optional;	h	lambda$static$1
		p	0		style
	m	()Lto;	i	getHoverEvent
	m	(Luf;)Ljava/util/Optional;	i	lambda$static$0
		p	0		style
	m	()Ljava/lang/String;	j	getInsertion
	m	()Ladd;	k	getFont
	f	Luf;	a	EMPTY
	f	Lcom/mojang/serialization/Codec;	b	FORMATTING_CODEC
	f	Ladd;	c	DEFAULT_FONT
	f	Luh;	d	color
	f	Ljava/lang/Boolean;	e	bold
	f	Ljava/lang/Boolean;	f	italic
	f	Ljava/lang/Boolean;	g	underlined
	f	Ljava/lang/Boolean;	h	strikethrough
	f	Ljava/lang/Boolean;	i	obfuscated
	f	Lth;	j	clickEvent
	f	Lto;	k	hoverEvent
	f	Ljava/lang/String;	l	insertion
	f	Ladd;	m	font
c	uf$1	net/minecraft/network/chat/Style$1
	f	[I	a	$SwitchMap$net$minecraft$ChatFormatting
c	uf$a	net/minecraft/network/chat/Style$1Collector
	m	()V	a	prependSeparator
	m	(Ljava/lang/String;Ljava/lang/Boolean;)V	a	addFlagString
		p	1		key
		p	2		value
	m	(Ljava/lang/String;Ljava/lang/Object;)V	a	addValueString
		p	1		key
		p	2		value
	f	Ljava/lang/StringBuilder;	a	val$result
	f	Luf;	b	this$0
	f	Z	c	isNotFirst
c	uf$b	net/minecraft/network/chat/Style$Serializer
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Luf;	a	deserialize
	m	(Lcom/google/gson/JsonObject;)Ladd;	a	getFont
		p	0		root
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/lang/Boolean;	a	getOptionalFlag
		p	0		root
		p	1		key
	m	(Luf;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	a	serialize
	m	(Lcom/google/gson/JsonObject;)Lto;	b	getHoverEvent
		p	0		root
	m	(Lcom/google/gson/JsonObject;)Lth;	c	getClickEvent
		p	0		root
	m	(Lcom/google/gson/JsonObject;)Ljava/lang/String;	d	getInsertion
		p	0		root
	m	(Lcom/google/gson/JsonObject;)Luh;	e	getTextColor
		p	0		root
c	ug	net/minecraft/network/chat/SubStringSource
	m	(Ljava/lang/String;Ljava/util/List;Lit/unimi/dsi/fastutil/ints/Int2IntFunction;)V	<init>	<init>
		p	1		string
		p	2		styles
		p	3		reverser
	m	()Ljava/lang/String;	a	getPlainText
	m	(I)I	a	lambda$create$0
		p	0		codePoint
	m	(IIZ)Ljava/util/List;	a	substring
		p	1		start
		p	2		length
		p	3		reverse
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$create$1
		p	0		string
	m	(Ljava/lang/StringBuilder;Ljava/util/List;ILuf;I)Z	a	lambda$create$2
		p	2		charIndex
		p	3		style
		p	4		codePoint
	m	(Ljava/lang/StringBuilder;Ljava/util/List;Luf;Ljava/lang/String;)Ljava/util/Optional;	a	lambda$create$3
		p	2		style
		p	3		text
	m	(Ltn;)Lug;	a	create
		p	0		visitable
	m	(Ltn;Lit/unimi/dsi/fastutil/ints/Int2IntFunction;Ljava/util/function/UnaryOperator;)Lug;	a	create
		p	0		visitable
		p	1		reverser
		p	2		shaper
	f	Ljava/lang/String;	a	plainText
	f	Ljava/util/List;	b	charStyles
	f	Lit/unimi/dsi/fastutil/ints/Int2IntFunction;	c	reverseCharModifier
c	uh	net/minecraft/network/chat/TextColor
	m	(I)V	<init>	<init>
		p	1		rgb
	m	(ILjava/lang/String;)V	<init>	<init>
		p	1		rgb
		p	2		name
	m	()I	a	getValue
	m	(I)Luh;	a	fromRgb
		p	0		rgb
	m	(Ljava/lang/String;)Luh;	a	parseColor
		p	0		name
	m	(Ln;)Luh;	a	fromLegacyFormat
		p	0		formatting
	m	(Luh;)Ljava/lang/String;	a	lambda$static$3
		p	0		textColor
	m	()Ljava/lang/String;	b	serialize
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	b	lambda$static$1
		p	0		color
	m	(Ln;)Luh;	b	lambda$static$2
		p	0		formatting
	m	()Ljava/lang/String;	c	formatValue
	m	()Ljava/lang/String;	d	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/lang/String;	b	CUSTOM_COLOR_PREFIX
	f	Ljava/util/Map;	c	LEGACY_FORMAT_TO_COLOR
	f	Ljava/util/Map;	d	NAMED_COLORS
	f	I	e	value
	f	Ljava/lang/String;	f	name
c	ui	net/minecraft/network/chat/ThrowingComponent
	m	(Ltj;)V	<init>	<init>
		p	1		messageText
	m	(Ltj;Ljava/lang/Throwable;)V	<init>	<init>
		p	1		messageText
		p	2		cause
	m	()Ltj;	b	getComponent
	f	Ltj;	a	component
c	uj	net/minecraft/network/chat/contents/BlockDataSource
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		rawPath
	m	(Ljava/lang/String;Lfj;)V	<init>	<init>
		p	1		rawPath
	m	()Ljava/lang/String;	a	posPattern
	m	(Ljava/lang/String;)Lfj;	a	compilePos
		p	0		string
	m	()Lfj;	b	compiledPos
	m	(Ldr;)Ljava/util/stream/Stream;	getData	getData
		p	1		source
	f	Ljava/lang/String;	a	posPattern
	f	Lfj;	b	compiledPos
c	uk	net/minecraft/network/chat/contents/DataSource
	m	(Ldr;)Ljava/util/stream/Stream;	getData	getData
		p	1		source
c	ul	net/minecraft/network/chat/contents/EntityDataSource
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		rawPath
	m	(Ljava/lang/String;Lfz;)V	<init>	<init>
		p	1		rawPath
	m	()Ljava/lang/String;	a	selectorPattern
	m	(Ljava/lang/String;)Lfz;	a	compileSelector
		p	0		rawSelector
	m	()Lfz;	b	compiledSelector
	m	(Ldr;)Ljava/util/stream/Stream;	getData	getData
		p	1		source
	f	Ljava/lang/String;	a	selectorPattern
	f	Lfz;	b	compiledSelector
c	um	net/minecraft/network/chat/contents/KeybindContents
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		key
	m	()Ljava/lang/String;	a	getName
	m	(Ltn$a;)Ljava/util/Optional;	a	visit
		p	1		visitor
	m	(Ltn$b;Luf;)Ljava/util/Optional;	a	visit
		p	1		visitor
		p	2		style
	m	()Ltj;	b	getNestedComponent
	f	Ljava/lang/String;	b	name
	f	Ljava/util/function/Supplier;	c	nameResolver
c	un	net/minecraft/network/chat/contents/KeybindResolver
	m	(Ljava/lang/String;)Ljava/util/function/Supplier;	a	lambda$static$1
		p	0		key
	m	(Ljava/util/function/Function;)V	a	setKeyResolver
		p	0		factory
	m	(Ljava/lang/String;)Ltj;	b	lambda$static$0
	f	Ljava/util/function/Function;	a	keyResolver
c	uo	net/minecraft/network/chat/contents/LiteralContents
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		string
	m	()Ljava/lang/String;	a	text
	m	(Ltn$a;)Ljava/util/Optional;	a	visit
		p	1		visitor
	m	(Ltn$b;Luf;)Ljava/util/Optional;	a	visit
		p	1		visitor
		p	2		style
	f	Ljava/lang/String;	b	text
c	up	net/minecraft/network/chat/contents/NbtContents
	m	(Ljava/lang/String;Leg$g;ZLjava/util/Optional;Luk;)V	<init>	<init>
		p	1		rawPath
		p	2		path
		p	3		interpret
		p	4		separator
		p	5		dataSource
	m	(Ljava/lang/String;ZLjava/util/Optional;Luk;)V	<init>	<init>
		p	1		rawPath
		p	2		interpret
		p	3		separator
		p	4		dataSource
	m	()Ljava/lang/String;	a	getNbtPath
	m	(Ldr;Lbfh;I)Ltw;	a	resolve
		p	1		source
		p	2		sender
		p	3		depth
	m	(Ldr;Lbfh;ILjava/lang/String;)Ljava/util/stream/Stream;	a	lambda$resolve$1
		p	3		text
	m	(Ljava/lang/String;)Leg$g;	a	compileNbtPath
		p	0		rawPath
	m	(Ljava/util/stream/Stream;)Ltw;	a	lambda$resolve$5
	m	(Ljava/util/stream/Stream;Ltw;)Ltw;	a	lambda$resolve$4
		p	1		text
	m	(Lre;)Ljava/util/stream/Stream;	a	lambda$resolve$0
		p	1		nbt
	m	(Ltj;Ltw;Ltw;)Ltw;	a	lambda$resolve$2
		p	1		accumulator
		p	2		current
	m	(Ltw;Ltw;Ltw;)Ltw;	a	lambda$resolve$3
		p	1		accumulator
		p	2		current
	m	()Z	b	isInterpreting
	m	()Ljava/util/Optional;	c	getSeparator
	m	()Luk;	d	getDataSource
	f	Leg$g;	b	compiledNbtPath
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	Z	d	interpreting
	f	Ljava/util/Optional;	e	separator
	f	Ljava/lang/String;	f	nbtPathPattern
	f	Luk;	g	dataSource
c	uq	net/minecraft/network/chat/contents/ScoreContents
	m	(Ljava/lang/String;Ljava/lang/String;)V	<init>	<init>
		p	1		name
		p	2		objective
	m	()Ljava/lang/String;	a	getName
	m	(Ldr;)Ljava/lang/String;	a	findTargetName
		p	1		source
	m	(Ldr;Lbfh;I)Ltw;	a	resolve
		p	1		source
		p	2		sender
		p	3		depth
	m	(Ljava/lang/String;)Lfz;	a	parseSelector
		p	0		name
	m	(Ljava/lang/String;Ldr;)Ljava/lang/String;	a	getScore
		p	1		playerName
		p	2		source
	m	()Lfz;	b	getSelector
	m	()Ljava/lang/String;	c	getObjective
	f	Ljava/lang/String;	b	SCORER_PLACEHOLDER
	f	Ljava/lang/String;	c	name
	f	Lfz;	d	selector
	f	Ljava/lang/String;	e	objective
c	ur	net/minecraft/network/chat/contents/SelectorContents
	m	(Ljava/lang/String;Ljava/util/Optional;)V	<init>	<init>
		p	1		pattern
		p	2		separator
	m	()Ljava/lang/String;	a	getPattern
	m	(Ldr;Lbfh;I)Ltw;	a	resolve
		p	1		source
		p	2		sender
		p	3		depth
	m	(Ljava/lang/String;)Lfz;	a	parseSelector
		p	0		pattern
	m	(Ltn$a;)Ljava/util/Optional;	a	visit
		p	1		visitor
	m	(Ltn$b;Luf;)Ljava/util/Optional;	a	visit
		p	1		visitor
		p	2		style
	m	()Lfz;	b	getSelector
	m	()Ljava/util/Optional;	c	getSeparator
	f	Ljava/util/Optional;	b	separator
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	Ljava/lang/String;	d	pattern
	f	Lfz;	e	selector
c	us	net/minecraft/network/chat/contents/StorageDataSource
	m	()Ladd;	a	id
	m	(Ldr;)Ljava/util/stream/Stream;	getData	getData
		p	1		source
	f	Ladd;	a	id
c	ut	net/minecraft/network/chat/contents/TranslatableContents
	m	(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)V	<init>	<init>
		p	1		key
		p	2		fallback
		p	3		args
	m	()Ljava/lang/String;	a	getKey
	m	(I)Ltn;	a	getArgument
		p	1		index
	m	(Ldr;Lbfh;I)Ltw;	a	resolve
		p	1		source
		p	2		sender
		p	3		depth
	m	(Ljava/lang/String;Ljava/util/function/Consumer;)V	a	decomposeTemplate
		p	1		translation
		p	2		partsConsumer
	m	(Ltn$a;)Ljava/util/Optional;	a	visit
		p	1		visitor
	m	(Ltn$b;Luf;)Ljava/util/Optional;	a	visit
		p	1		visitor
		p	2		style
	m	()Ljava/lang/String;	b	getFallback
	m	()[Ljava/lang/Object;	c	getArgs
	m	()V	d	decompose
	f	[Ljava/lang/Object;	b	NO_ARGS
	f	Ltn;	c	TEXT_PERCENT
	f	Ltn;	d	TEXT_NULL
	f	Ljava/lang/String;	e	key
	f	Ljava/lang/String;	f	fallback
	f	[Ljava/lang/Object;	g	args
	f	Lqz;	h	decomposedWith
	f	Ljava/util/List;	i	decomposedParts
	f	Ljava/util/regex/Pattern;	j	FORMAT_PATTERN
c	uu	net/minecraft/network/chat/contents/TranslatableFormatException
	m	(Lut;I)V	<init>	<init>
		p	1		text
		p	2		index
	m	(Lut;Ljava/lang/String;)V	<init>	<init>
		p	1		text
		p	2		message
	m	(Lut;Ljava/lang/Throwable;)V	<init>	<init>
		p	1		text
		p	2		cause
c	uv	net/minecraft/network/chat/contents/package-info
c	uw	net/minecraft/network/chat/package-info
c	ux	net/minecraft/network/package-info
c	uy	net/minecraft/network/protocol/BundleDelimiterPacket
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
c	uz	net/minecraft/network/protocol/BundlePacket
	m	(Ljava/lang/Iterable;)V	<init>	<init>
		p	1		packets
	m	()Ljava/lang/Iterable;	a	subPackets
	m	(Lss;)V	a	write
		p	1		buf
	f	Ljava/lang/Iterable;	a	packets
c	va	net/minecraft/network/protocol/BundlerInfo
	m	(Ljava/lang/Class;Ljava/util/function/Function;Luy;)Lva;	a	createForPacket
		p	0		bundlePacketType
		p	1		bundleFunction
		p	2		splitter
	m	(Lvb;)Lva$a;	a	startPacketBundling
		p	1		splitter
	m	(Lvb;Ljava/util/function/Consumer;)V	a	unbundlePacket
		p	1		packet
		p	2		consumer
	f	Lio/netty/util/AttributeKey;	a	BUNDLER_PROVIDER
	f	I	b	BUNDLE_SIZE_LIMIT
	f	Lva;	c	EMPTY
c	va$1	net/minecraft/network/protocol/BundlerInfo$1
	m	(Lvb;)Lva$a;	a	startPacketBundling
		p	1		splitter
	m	(Lvb;Ljava/util/function/Consumer;)V	a	unbundlePacket
		p	1		packet
		p	2		consumer
c	va$2	net/minecraft/network/protocol/BundlerInfo$2
	m	(Lvb;)Lva$a;	a	startPacketBundling
		p	1		splitter
	m	(Lvb;Ljava/util/function/Consumer;)V	a	unbundlePacket
		p	1		packet
		p	2		consumer
	f	Ljava/lang/Class;	d	val$bundlePacketCls
	f	Luy;	e	val$delimiterPacket
	f	Ljava/util/function/Function;	f	val$constructor
c	va$2$1	net/minecraft/network/protocol/BundlerInfo$2$1
	m	(Lvb;)Lvb;	a	addPacket
		p	1		packet
	f	Lva$2;	a	this$0
	f	Ljava/util/List;	b	bundlePackets
c	va$a	net/minecraft/network/protocol/BundlerInfo$Bundler
	m	(Lvb;)Lvb;	a	addPacket
		p	1		packet
c	va$b	net/minecraft/network/protocol/BundlerInfo$Provider
	m	(Lvc;)Lva;	a	getBundlerInfo
		p	1		side
c	vb	net/minecraft/network/protocol/Packet
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	()Z	b	isSkippable
c	vc	net/minecraft/network/protocol/PacketFlow
	m	()Lvc;	a	getOpposite
	m	()[Lvc;	b	$values
	f	Lvc;	a	SERVERBOUND
	f	Lvc;	b	CLIENTBOUND
	f	[Lvc;	c	$VALUES
c	vd	net/minecraft/network/protocol/PacketUtils
	m	(Lsx;Lvb;)V	a	lambda$ensureRunningOnSameThread$0
	m	(Lvb;Lsx;Laip;)V	a	ensureRunningOnSameThread
		p	0		packet
		p	1		listener
		p	2		world
	m	(Lvb;Lsx;Lbco;)V	a	ensureRunningOnSameThread
		p	0		packet
		p	1		listener
		p	2		engine
	f	Lorg/slf4j/Logger;	a	LOGGER
c	ve	net/minecraft/network/protocol/game/ClientGamePacketListener
	m	(Lvf;)V	a	handleAddEntity
		p	1		packet
	m	(Lvg;)V	a	handleAddExperienceOrb
		p	1		packet
	m	(Lvh;)V	a	handleAddPlayer
		p	1		packet
	m	(Lvi;)V	a	handleAnimate
		p	1		packet
	m	(Lvj;)V	a	handleAwardStats
		p	1		packet
	m	(Lvk;)V	a	handleBlockChangedAck
		p	1		packet
	m	(Lvl;)V	a	handleBlockDestruction
		p	1		packet
	m	(Lvm;)V	a	handleBlockEntityData
		p	1		packet
	m	(Lvn;)V	a	handleBlockEvent
		p	1		packet
	m	(Lvo;)V	a	handleBlockUpdate
		p	1		packet
	m	(Lvp;)V	a	handleBossUpdate
		p	1		packet
	m	(Lvq;)V	a	handleBundlePacket
		p	1		packet
	m	(Lvr;)V	a	handleChangeDifficulty
		p	1		packet
	m	(Lvs;)V	a	handleChunksBiomes
		p	1		packet
	m	(Lvt;)V	a	handleTitlesClear
		p	1		packet
	m	(Lvu;)V	a	handleCommandSuggestions
		p	1		packet
	m	(Lvv;)V	a	handleCommands
		p	1		packet
	m	(Lvw;)V	a	handleContainerClose
		p	1		packet
	m	(Lvx;)V	a	handleContainerContent
		p	1		packet
	m	(Lvy;)V	a	handleContainerSetData
		p	1		packet
	m	(Lvz;)V	a	handleContainerSetSlot
		p	1		packet
	m	(Lwa;)V	a	handleItemCooldown
		p	1		packet
	m	(Lwb;)V	a	handleCustomChatCompletions
		p	1		packet
	m	(Lwc;)V	a	handleCustomPayload
		p	1		packet
	m	(Lwd;)V	a	handleDamageEvent
		p	1		packet
	m	(Lwe;)V	a	handleDeleteChat
		p	1		packet
	m	(Lwf;)V	a	handleDisconnect
		p	1		packet
	m	(Lwg;)V	a	handleDisguisedChat
		p	1		packet
	m	(Lwh;)V	a	handleEntityEvent
		p	1		packet
	m	(Lwi;)V	a	handleExplosion
		p	1		packet
	m	(Lwj;)V	a	handleForgetLevelChunk
		p	1		packet
	m	(Lwk;)V	a	handleGameEvent
		p	1		packet
	m	(Lwl;)V	a	handleHorseScreenOpen
		p	1		packet
	m	(Lwm;)V	a	handleHurtAnimation
		p	1		packet
	m	(Lwn;)V	a	handleInitializeBorder
		p	1		packet
	m	(Lwo;)V	a	handleKeepAlive
		p	1		packet
	m	(Lwq;)V	a	handleLevelChunkWithLight
		p	1		packet
	m	(Lwr;)V	a	handleLevelEvent
		p	1		packet
	m	(Lws;)V	a	handleParticleEvent
		p	1		packet
	m	(Lwt;)V	a	handleLightUpdatePacket
		p	1		packet
	m	(Lwv;)V	a	handleLogin
		p	1		packet
	m	(Lww;)V	a	handleMapItemData
		p	1		packet
	m	(Lwx;)V	a	handleMerchantOffers
		p	1		packet
	m	(Lwy;)V	a	handleMoveEntity
		p	1		packet
	m	(Lwz;)V	a	handleMoveVehicle
		p	1		packet
	m	(Lxa;)V	a	handleOpenBook
		p	1		packet
	m	(Lxb;)V	a	handleOpenScreen
		p	1		packet
	m	(Lxc;)V	a	handleOpenSignEditor
		p	1		packet
	m	(Lxd;)V	a	handlePing
		p	1		packet
	m	(Lxe;)V	a	handlePlaceRecipe
		p	1		packet
	m	(Lxf;)V	a	handlePlayerAbilities
		p	1		packet
	m	(Lxg;)V	a	handlePlayerChat
		p	1		packet
	m	(Lxh;)V	a	handlePlayerCombatEnd
		p	1		packet
	m	(Lxi;)V	a	handlePlayerCombatEnter
		p	1		packet
	m	(Lxj;)V	a	handlePlayerCombatKill
		p	1		packet
	m	(Lxk;)V	a	handlePlayerInfoRemove
		p	1		packet
	m	(Lxl;)V	a	handlePlayerInfoUpdate
		p	1		packet
	m	(Lxm;)V	a	handleLookAt
		p	1		packet
	m	(Lxn;)V	a	handleMovePlayer
		p	1		packet
	m	(Lxo;)V	a	handleAddOrRemoveRecipes
		p	1		packet
	m	(Lxp;)V	a	handleRemoveEntities
		p	1		packet
	m	(Lxq;)V	a	handleRemoveMobEffect
		p	1		packet
	m	(Lxr;)V	a	handleResourcePack
		p	1		packet
	m	(Lxs;)V	a	handleRespawn
		p	1		packet
	m	(Lxt;)V	a	handleRotateMob
		p	1		packet
	m	(Lxu;)V	a	handleChunkBlocksUpdate
		p	1		packet
	m	(Lxv;)V	a	handleSelectAdvancementsTab
		p	1		packet
	m	(Lxw;)V	a	handleServerData
		p	1		packet
	m	(Lxx;)V	a	setActionBarText
		p	1		packet
	m	(Lxy;)V	a	handleSetBorderCenter
		p	1		packet
	m	(Lxz;)V	a	handleSetBorderLerpSize
		p	1		packet
	m	(Lya;)V	a	handleSetBorderSize
		p	1		packet
	m	(Lyb;)V	a	handleSetBorderWarningDelay
		p	1		packet
	m	(Lyc;)V	a	handleSetBorderWarningDistance
		p	1		packet
	m	(Lyd;)V	a	handleSetCamera
		p	1		packet
	m	(Lye;)V	a	handleSetCarriedItem
		p	1		packet
	m	(Lyf;)V	a	handleSetChunkCacheCenter
		p	1		packet
	m	(Lyg;)V	a	handleSetChunkCacheRadius
		p	1		packet
	m	(Lyh;)V	a	handleSetSpawn
		p	1		packet
	m	(Lyi;)V	a	handleSetDisplayObjective
		p	1		packet
	m	(Lyj;)V	a	handleSetEntityData
		p	1		packet
	m	(Lyk;)V	a	handleEntityLinkPacket
		p	1		packet
	m	(Lyl;)V	a	handleSetEntityMotion
		p	1		packet
	m	(Lym;)V	a	handleSetEquipment
		p	1		packet
	m	(Lyn;)V	a	handleSetExperience
		p	1		packet
	m	(Lyo;)V	a	handleSetHealth
		p	1		packet
	m	(Lyp;)V	a	handleAddObjective
		p	1		packet
	m	(Lyq;)V	a	handleSetEntityPassengersPacket
		p	1		packet
	m	(Lyr;)V	a	handleSetPlayerTeamPacket
		p	1		packet
	m	(Lys;)V	a	handleSetScore
		p	1		packet
	m	(Lyt;)V	a	handleSetSimulationDistance
		p	1		packet
	m	(Lyu;)V	a	setSubtitleText
		p	1		packet
	m	(Lyv;)V	a	handleSetTime
		p	1		packet
	m	(Lyw;)V	a	setTitleText
		p	1		packet
	m	(Lyx;)V	a	setTitlesAnimation
		p	1		packet
	m	(Lyy;)V	a	handleSoundEntityEvent
		p	1		packet
	m	(Lyz;)V	a	handleSoundEvent
		p	1		packet
	m	(Lza;)V	a	handleStopSoundEvent
		p	1		packet
	m	(Lzb;)V	a	handleSystemChat
		p	1		packet
	m	(Lzc;)V	a	handleTabListCustomisation
		p	1		packet
	m	(Lzd;)V	a	handleTagQueryPacket
		p	1		packet
	m	(Lze;)V	a	handleTakeItemEntity
		p	1		packet
	m	(Lzf;)V	a	handleTeleportEntity
		p	1		packet
	m	(Lzg;)V	a	handleUpdateAdvancementsPacket
		p	1		packet
	m	(Lzh;)V	a	handleUpdateAttributes
		p	1		packet
	m	(Lzi;)V	a	handleEnabledFeatures
		p	1		packet
	m	(Lzj;)V	a	handleUpdateMobEffect
		p	1		packet
	m	(Lzk;)V	a	handleUpdateRecipes
		p	1		packet
	m	(Lzl;)V	a	handleUpdateTags
		p	1		packet
c	vf	net/minecraft/network/protocol/game/ClientboundAddEntityPacket
	m	(ILjava/util/UUID;DDDFFLbfl;ILede;D)V	<init>	<init>
		p	1		id
		p	2		uuid
		p	3		x
		p	5		y
		p	7		z
		p	9		pitch
		p	10		yaw
		p	11		entityType
		p	12		entityData
		p	13		velocity
		p	14		headYaw
	m	(Lbfh;)V	<init>	<init>
		p	1		entity
	m	(Lbfh;I)V	<init>	<init>
		p	1		entity
		p	2		entityData
	m	(Lbfh;ILgt;)V	<init>	<init>
		p	1		entity
		p	2		entityData
		p	3		pos
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()I	a	getId
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	m	()Ljava/util/UUID;	c	getUUID
	m	()Lbfl;	d	getType
	m	()D	e	getX
	m	()D	f	getY
	m	()D	g	getZ
	m	()D	h	getXa
	m	()D	i	getYa
	m	()D	j	getZa
	m	()F	k	getXRot
	m	()F	l	getYRot
	m	()F	m	getYHeadRot
	m	()I	n	getData
	f	D	a	MAGICAL_QUANTIZATION
	f	D	b	LIMIT
	f	I	c	id
	f	Ljava/util/UUID;	d	uuid
	f	Lbfl;	e	type
	f	D	f	x
	f	D	g	y
	f	D	h	z
	f	I	i	xa
	f	I	j	ya
	f	I	k	za
	f	B	l	xRot
	f	B	m	yRot
	f	B	n	yHeadRot
	f	I	o	data
c	vg	net/minecraft/network/protocol/game/ClientboundAddExperienceOrbPacket
	m	(Lbfn;)V	<init>	<init>
		p	1		experienceOrbEntity
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()I	a	getId
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	m	()D	c	getX
	m	()D	d	getY
	m	()D	e	getZ
	m	()I	f	getValue
	f	I	a	id
	f	D	b	x
	f	D	c	y
	f	D	d	z
	f	I	e	value
c	vh	net/minecraft/network/protocol/game/ClientboundAddPlayerPacket
	m	(Lbym;)V	<init>	<init>
		p	1		player
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()I	a	getEntityId
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	m	()Ljava/util/UUID;	c	getPlayerId
	m	()D	d	getX
	m	()D	e	getY
	m	()D	f	getZ
	m	()B	g	getyRot
	m	()B	h	getxRot
	f	I	a	entityId
	f	Ljava/util/UUID;	b	playerId
	f	D	c	x
	f	D	d	y
	f	D	e	z
	f	B	f	yRot
	f	B	g	xRot
c	vi	net/minecraft/network/protocol/game/ClientboundAnimatePacket
	m	(Lbfh;I)V	<init>	<init>
		p	1		entity
		p	2		animationId
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()I	a	getId
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	m	()I	c	getAction
	f	I	a	SWING_MAIN_HAND
	f	I	b	WAKE_UP
	f	I	c	SWING_OFF_HAND
	f	I	d	CRITICAL_HIT
	f	I	e	MAGIC_CRITICAL_HIT
	f	I	f	id
	f	I	g	action
c	vj	net/minecraft/network/protocol/game/ClientboundAwardStatsPacket
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntMap;)V	<init>	<init>
		p	1		stats
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()Ljava/util/Map;	a	getStats
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lss;Lamy;)V	a	writeStatCap
		p	0		buf
		p	1		stat
	m	(Lss;Lana;)Lamy;	a	readStatCap
		p	0		buf
		p	1		statType
	m	(Lss;Lss;)Lamy;	a	lambda$new$0
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	a	stats
c	vk	net/minecraft/network/protocol/game/ClientboundBlockChangedAckPacket
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()I	a	sequence
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	f	I	a	sequence
c	vl	net/minecraft/network/protocol/game/ClientboundBlockDestructionPacket
	m	(ILgt;I)V	<init>	<init>
		p	1		entityId
		p	2		pos
		p	3		progress
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()I	a	getId
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	m	()Lgt;	c	getPos
	m	()I	d	getProgress
	f	I	a	id
	f	Lgt;	b	pos
	f	I	c	progress
c	vm	net/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket
	m	(Lgt;Lczg;Lre;)V	<init>	<init>
		p	1		pos
		p	2		blockEntityType
		p	3		nbt
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()Lgt;	a	getPos
	m	(Lcze;)Lvm;	a	create
		p	0		blockEntity
	m	(Lcze;Ljava/util/function/Function;)Lvm;	a	create
		p	0		blockEntity
		p	1		nbtGetter
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	m	()Lczg;	c	getType
	m	()Lre;	d	getTag
	f	Lgt;	a	pos
	f	Lczg;	b	type
	f	Lre;	c	tag
c	vn	net/minecraft/network/protocol/game/ClientboundBlockEventPacket
	m	(Lgt;Lcpi;II)V	<init>	<init>
		p	1		pos
		p	2		block
		p	3		type
		p	4		data
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()Lgt;	a	getPos
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	m	()I	c	getB0
	m	()I	d	getB1
	m	()Lcpi;	e	getBlock
	f	Lgt;	a	pos
	f	I	b	b0
	f	I	c	b1
	f	Lcpi;	d	block
c	vo	net/minecraft/network/protocol/game/ClientboundBlockUpdatePacket
	m	(Lclo;Lgt;)V	<init>	<init>
		p	1		world
		p	2		pos
	m	(Lgt;Ldbq;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()Ldbq;	a	getBlockState
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	m	()Lgt;	c	getPos
	f	Lgt;	a	pos
	f	Ldbq;	b	blockState
c	vp	net/minecraft/network/protocol/game/ClientboundBossEventPacket
	m	(Ljava/util/UUID;Lvp$c;)V	<init>	<init>
		p	1		uuid
		p	2		action
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	(Lbdo;)Lvp;	a	createAddPacket
		p	0		bar
	m	(Ljava/util/UUID;)Lvp;	a	createRemovePacket
		p	0		uuid
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	m	(Lvp$b;)V	a	dispatch
		p	1		consumer
	m	(ZZZ)I	a	encodeProperties
		p	0		darkenSky
		p	1		dragonMusic
		p	2		thickenFog
	m	(Lbdo;)Lvp;	b	createUpdateProgressPacket
		p	0		bar
	m	(Lbdo;)Lvp;	c	createUpdateNamePacket
		p	0		bar
	m	(Lbdo;)Lvp;	d	createUpdateStylePacket
		p	0		bar
	m	(Lbdo;)Lvp;	e	createUpdatePropertiesPacket
		p	0		bar
	f	I	a	FLAG_DARKEN
	f	I	b	FLAG_MUSIC
	f	I	c	FLAG_FOG
	f	Ljava/util/UUID;	d	id
	f	Lvp$c;	e	operation
	f	Lvp$c;	f	REMOVE_OPERATION
c	vp$1	net/minecraft/network/protocol/game/ClientboundBossEventPacket$1
	m	()Lvp$d;	a	getType
	m	(Ljava/util/UUID;Lvp$b;)V	a	dispatch
		p	1		uuid
		p	2		consumer
	m	(Lss;)V	a	write
		p	1		buf
c	vp$a	net/minecraft/network/protocol/game/ClientboundBossEventPacket$AddOperation
	m	(Lbdo;)V	<init>	<init>
		p	1		bar
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()Lvp$d;	a	getType
	m	(Ljava/util/UUID;Lvp$b;)V	a	dispatch
		p	1		uuid
		p	2		consumer
	m	(Lss;)V	a	write
		p	1		buf
	f	Ltj;	a	name
	f	F	b	progress
	f	Lbdo$a;	c	color
	f	Lbdo$b;	d	overlay
	f	Z	e	darkenScreen
	f	Z	f	playMusic
	f	Z	g	createWorldFog
c	vp$b	net/minecraft/network/protocol/game/ClientboundBossEventPacket$Handler
	m	(Ljava/util/UUID;)V	a	remove
		p	1		uuid
	m	(Ljava/util/UUID;F)V	a	updateProgress
		p	1		uuid
		p	2		percent
	m	(Ljava/util/UUID;Lbdo$a;Lbdo$b;)V	a	updateStyle
		p	1		id
		p	2		color
		p	3		style
	m	(Ljava/util/UUID;Ltj;)V	a	updateName
		p	1		uuid
		p	2		name
	m	(Ljava/util/UUID;Ltj;FLbdo$a;Lbdo$b;ZZZ)V	a	add
		p	1		uuid
		p	2		name
		p	3		percent
		p	4		color
		p	5		style
		p	6		darkenSky
		p	7		dragonMusic
		p	8		thickenFog
	m	(Ljava/util/UUID;ZZZ)V	a	updateProperties
		p	1		uuid
		p	2		darkenSky
		p	3		dragonMusic
		p	4		thickenFog
c	vp$c	net/minecraft/network/protocol/game/ClientboundBossEventPacket$Operation
	m	()Lvp$d;	a	getType
	m	(Ljava/util/UUID;Lvp$b;)V	a	dispatch
		p	1		uuid
		p	2		consumer
	m	(Lss;)V	a	write
		p	1		buf
c	vp$d	net/minecraft/network/protocol/game/ClientboundBossEventPacket$OperationType
	m	(Ljava/lang/String;ILjava/util/function/Function;)V	<init>	<init>
		p	3		parser
	m	()[Lvp$d;	a	$values
	m	(Lss;)Lvp$c;	a	lambda$static$0
		p	0		buf
	f	Lvp$d;	a	ADD
	f	Lvp$d;	b	REMOVE
	f	Lvp$d;	c	UPDATE_PROGRESS
	f	Lvp$d;	d	UPDATE_NAME
	f	Lvp$d;	e	UPDATE_STYLE
	f	Lvp$d;	f	UPDATE_PROPERTIES
	f	Ljava/util/function/Function;	g	reader
	f	[Lvp$d;	h	$VALUES
c	vp$e	net/minecraft/network/protocol/game/ClientboundBossEventPacket$UpdateNameOperation
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	(Ltj;)V	<init>	<init>
		p	1		name
	m	()Lvp$d;	a	getType
	m	(Ljava/util/UUID;Lvp$b;)V	a	dispatch
		p	1		uuid
		p	2		consumer
	m	(Lss;)V	a	write
		p	1		buf
	f	Ltj;	a	name
c	vp$f	net/minecraft/network/protocol/game/ClientboundBossEventPacket$UpdateProgressOperation
	m	(F)V	<init>	<init>
		p	1		percent
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()Lvp$d;	a	getType
	m	(Ljava/util/UUID;Lvp$b;)V	a	dispatch
		p	1		uuid
		p	2		consumer
	m	(Lss;)V	a	write
		p	1		buf
	f	F	a	progress
c	vp$g	net/minecraft/network/protocol/game/ClientboundBossEventPacket$UpdatePropertiesOperation
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	(ZZZ)V	<init>	<init>
		p	1		darkenSky
		p	2		dragonMusic
		p	3		thickenFog
	m	()Lvp$d;	a	getType
	m	(Ljava/util/UUID;Lvp$b;)V	a	dispatch
		p	1		uuid
		p	2		consumer
	m	(Lss;)V	a	write
		p	1		buf
	f	Z	a	darkenScreen
	f	Z	b	playMusic
	f	Z	c	createWorldFog
c	vp$h	net/minecraft/network/protocol/game/ClientboundBossEventPacket$UpdateStyleOperation
	m	(Lbdo$a;Lbdo$b;)V	<init>	<init>
		p	1		color
		p	2		style
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()Lvp$d;	a	getType
	m	(Ljava/util/UUID;Lvp$b;)V	a	dispatch
		p	1		uuid
		p	2		consumer
	m	(Lss;)V	a	write
		p	1		buf
	f	Lbdo$a;	a	color
	f	Lbdo$b;	b	overlay
c	vq	net/minecraft/network/protocol/game/ClientboundBundlePacket
	m	(Ljava/lang/Iterable;)V	<init>	<init>
		p	1		packets
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
c	vr	net/minecraft/network/protocol/game/ClientboundChangeDifficultyPacket
	m	(Lbdv;Z)V	<init>	<init>
		p	1		difficulty
		p	2		difficultyLocked
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()Z	a	isLocked
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	m	()Lbdv;	c	getDifficulty
	f	Lbdv;	a	difficulty
	f	Z	b	locked
c	vs	net/minecraft/network/protocol/game/ClientboundChunksBiomesPacket
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()Ljava/util/List;	a	chunkBiomeData
	m	(Ljava/util/List;)Lvs;	a	forChunks
		p	0		chunks
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lss;Lvs$a;)V	a	lambda$write$0
		p	0		buf
		p	1		data
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	f	Ljava/util/List;	a	chunkBiomeData
	f	I	b	TWO_MEGABYTES
c	vs$a	net/minecraft/network/protocol/game/ClientboundChunksBiomesPacket$ChunkBiomeData
	m	(Lddy;)V	<init>	<init>
		p	1		chunk
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()Lss;	a	getReadBuffer
	m	(Lddy;)I	a	calculateChunkSize
		p	0		chunk
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lss;Lddy;)V	a	extractChunkData
		p	0		buf
		p	1		chunk
	m	()Lclp;	b	pos
	m	()[B	c	buffer
	m	()Lio/netty/buffer/ByteBuf;	d	getWriteBuffer
	f	Lclp;	a	pos
	f	[B	b	buffer
c	vt	net/minecraft/network/protocol/game/ClientboundClearTitlesPacket
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	(Z)V	<init>	<init>
		p	1		reset
	m	()Z	a	shouldResetTimes
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	f	Z	a	resetTimes
c	vu	net/minecraft/network/protocol/game/ClientboundCommandSuggestionsPacket
	m	(ILcom/mojang/brigadier/suggestion/Suggestions;)V	<init>	<init>
		p	1		completionId
		p	2		suggestions
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()I	a	getId
	m	(Lcom/mojang/brigadier/context/StringRange;Lss;)Lcom/mojang/brigadier/suggestion/Suggestion;	a	lambda$new$0
		p	1		buf2
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lss;Lcom/mojang/brigadier/Message;)V	a	lambda$write$1
		p	0		buf3
		p	1		tooltip
	m	(Lss;Lcom/mojang/brigadier/suggestion/Suggestion;)V	a	lambda$write$2
		p	0		buf2
		p	1		suggestion
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	m	()Lcom/mojang/brigadier/suggestion/Suggestions;	c	getSuggestions
	f	I	a	id
	f	Lcom/mojang/brigadier/suggestion/Suggestions;	b	suggestions
c	vv	net/minecraft/network/protocol/game/ClientboundCommandsPacket
	m	(Lcom/mojang/brigadier/tree/RootCommandNode;)V	<init>	<init>
		p	1		rootNode
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	(Lcom/mojang/brigadier/tree/CommandNode;Lit/unimi/dsi/fastutil/objects/Object2IntMap;)Lvv$b;	a	createEntry
		p	0		node
		p	1		nodes
	m	(Lcom/mojang/brigadier/tree/RootCommandNode;)Lit/unimi/dsi/fastutil/objects/Object2IntMap;	a	enumerateNodes
		p	0		commandTree
	m	(Ldl;)Lcom/mojang/brigadier/tree/RootCommandNode;	a	getRoot
		p	1		commandRegistryAccess
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntMap;)Ljava/util/List;	a	createEntries
		p	0		nodes
	m	(Ljava/util/List;)V	a	validateEntries
		p	0		nodeDatas
	m	(Ljava/util/List;Ljava/util/function/BiPredicate;)V	a	validateEntries
		p	0		nodeDatas
		p	1		validator
	m	(Ljava/util/function/BiPredicate;Ljava/util/List;Lit/unimi/dsi/fastutil/ints/IntSet;I)Z	a	lambda$validateEntries$1
		p	0		index
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lss;B)Lvv$e;	a	read
		p	0		buf
		p	1		flags
	m	(Lss;Lvv$b;)V	a	lambda$write$0
		p	0		buf2
		p	1		node
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	m	(Lss;)Lvv$b;	b	readNode
		p	0		buf
	f	B	a	MASK_TYPE
	f	B	b	FLAG_EXECUTABLE
	f	B	c	FLAG_REDIRECT
	f	B	d	FLAG_CUSTOM_SUGGESTIONS
	f	B	e	TYPE_ROOT
	f	B	f	TYPE_LITERAL
	f	B	g	TYPE_ARGUMENT
	f	I	h	rootIndex
	f	Ljava/util/List;	i	entries
c	vv$a	net/minecraft/network/protocol/game/ClientboundCommandsPacket$ArgumentNodeStub
	m	(Lcom/mojang/brigadier/tree/ArgumentCommandNode;)V	<init>	<init>
		p	1		node
	m	(Ljava/lang/String;Lgf$a;Ladd;)V	<init>	<init>
		p	1		name
		p	2		properties
		p	3		id
	m	(Lcom/mojang/brigadier/suggestion/SuggestionProvider;)Ladd;	a	getSuggestionId
		p	0		provider
	m	(Ldl;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	build
		p	1		commandRegistryAccess
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lss;Lgf$a;)V	a	serializeCap
		p	0		buf
		p	1		properties
	m	(Lss;Lgf;Lgf$a;)V	a	serializeCap
		p	0		buf
		p	1		serializer
		p	2		properties
	f	Ljava/lang/String;	a	id
	f	Lgf$a;	b	argumentType
	f	Ladd;	c	suggestionId
c	vv$b	net/minecraft/network/protocol/game/ClientboundCommandsPacket$Entry
	m	(Lvv$e;II[I)V	<init>	<init>
		p	1		suggestableNode
		p	2		flags
		p	3		redirectNodeIndex
		p	4		childNodeIndices
	m	(Lit/unimi/dsi/fastutil/ints/IntSet;)Z	a	canBuild
		p	1		indices
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lit/unimi/dsi/fastutil/ints/IntSet;)Z	b	canResolve
		p	1		indices
	f	Lvv$e;	a	stub
	f	I	b	flags
	f	I	c	redirect
	f	[I	d	children
c	vv$c	net/minecraft/network/protocol/game/ClientboundCommandsPacket$LiteralNodeStub
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		literal
	m	(Ldl;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	build
		p	1		commandRegistryAccess
	m	(Lss;)V	a	write
		p	1		buf
	f	Ljava/lang/String;	a	id
c	vv$d	net/minecraft/network/protocol/game/ClientboundCommandsPacket$NodeResolver
	m	(Ldl;Ljava/util/List;)V	<init>	<init>
		p	1		commandRegistryAccess
		p	2		nodeDatas
	m	(I)Lcom/mojang/brigadier/tree/CommandNode;	a	resolve
		p	1		index
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$resolve$0
		p	0		context
	f	Ldl;	a	context
	f	Ljava/util/List;	b	entries
	f	Ljava/util/List;	c	nodes
c	vv$e	net/minecraft/network/protocol/game/ClientboundCommandsPacket$NodeStub
	m	(Ldl;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	build
		p	1		commandRegistryAccess
	m	(Lss;)V	a	write
		p	1		buf
c	vw	net/minecraft/network/protocol/game/ClientboundContainerClosePacket
	m	(I)V	<init>	<init>
		p	1		syncId
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()I	a	getContainerId
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	f	I	a	containerId
c	vx	net/minecraft/network/protocol/game/ClientboundContainerSetContentPacket
	m	(IILhm;Lcfv;)V	<init>	<init>
		p	1		syncId
		p	2		revision
		p	3		contents
		p	4		cursorStack
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()I	a	getContainerId
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	m	()Ljava/util/List;	c	getItems
	m	()Lcfv;	d	getCarriedItem
	m	()I	e	getStateId
	f	I	a	containerId
	f	I	b	stateId
	f	Ljava/util/List;	c	items
	f	Lcfv;	d	carriedItem
c	vy	net/minecraft/network/protocol/game/ClientboundContainerSetDataPacket
	m	(III)V	<init>	<init>
		p	1		syncId
		p	2		propertyId
		p	3		value
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()I	a	getContainerId
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	m	()I	c	getId
	m	()I	d	getValue
	f	I	a	containerId
	f	I	b	id
	f	I	c	value
c	vz	net/minecraft/network/protocol/game/ClientboundContainerSetSlotPacket
	m	(IIILcfv;)V	<init>	<init>
		p	1		syncId
		p	2		revision
		p	3		slot
		p	4		stack
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()I	a	getContainerId
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	m	()I	c	getSlot
	m	()Lcfv;	d	getItem
	m	()I	e	getStateId
	f	I	a	CARRIED_ITEM
	f	I	b	PLAYER_INVENTORY
	f	I	c	containerId
	f	I	d	stateId
	f	I	e	slot
	f	Lcfv;	f	itemStack
c	wa	net/minecraft/network/protocol/game/ClientboundCooldownPacket
	m	(Lcfq;I)V	<init>	<init>
		p	1		item
		p	2		cooldown
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()Lcfq;	a	getItem
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	m	()I	c	getDuration
	f	Lcfq;	a	item
	f	I	b	duration
c	wb	net/minecraft/network/protocol/game/ClientboundCustomChatCompletionsPacket
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()Lwb$a;	a	action
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	m	()Ljava/util/List;	c	entries
	f	Lwb$a;	a	action
	f	Ljava/util/List;	b	entries
c	wb$a	net/minecraft/network/protocol/game/ClientboundCustomChatCompletionsPacket$Action
	m	()[Lwb$a;	a	$values
	f	Lwb$a;	a	ADD
	f	Lwb$a;	b	REMOVE
	f	Lwb$a;	c	SET
	f	[Lwb$a;	d	$VALUES
c	wc	net/minecraft/network/protocol/game/ClientboundCustomPayloadPacket
	m	(Ladd;Lss;)V	<init>	<init>
		p	1		channel
		p	2		data
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()Ladd;	a	getIdentifier
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	m	()Lss;	c	getData
	f	Ladd;	a	BRAND
	f	Ladd;	b	DEBUG_PATHFINDING_PACKET
	f	Ladd;	c	DEBUG_NEIGHBORSUPDATE_PACKET
	f	Ladd;	d	DEBUG_STRUCTURES_PACKET
	f	Ladd;	e	DEBUG_WORLDGENATTEMPT_PACKET
	f	Ladd;	f	DEBUG_POI_TICKET_COUNT_PACKET
	f	Ladd;	g	DEBUG_POI_ADDED_PACKET
	f	Ladd;	h	DEBUG_POI_REMOVED_PACKET
	f	Ladd;	i	DEBUG_VILLAGE_SECTIONS
	f	Ladd;	j	DEBUG_GOAL_SELECTOR
	f	Ladd;	k	DEBUG_BRAIN
	f	Ladd;	l	DEBUG_BEE
	f	Ladd;	m	DEBUG_HIVE
	f	Ladd;	n	DEBUG_GAME_TEST_ADD_MARKER
	f	Ladd;	o	DEBUG_GAME_TEST_CLEAR
	f	Ladd;	p	DEBUG_RAIDS
	f	Ladd;	q	DEBUG_GAME_EVENT
	f	Ladd;	r	DEBUG_GAME_EVENT_LISTENER
	f	I	s	MAX_PAYLOAD_SIZE
	f	Ladd;	t	identifier
	f	Lss;	u	data
c	wd	net/minecraft/network/protocol/game/ClientboundDamageEventPacket
	m	(Lbfh;Lbem;)V	<init>	<init>
		p	1		entity
		p	2		damageSource
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()I	a	entityId
	m	(Lcmi;)Lbem;	a	getSource
		p	1		world
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lss;I)V	a	writeOptionalEntityId
		p	0		buf
		p	1		value
	m	(Lss;Lede;)V	a	lambda$write$1
		p	0		buf
		p	1		pos
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	m	(Lss;)I	b	readOptionalEntityId
		p	0		buf
	m	()I	c	sourceTypeId
	m	(Lss;)Lede;	c	lambda$new$0
		p	0		pos
	m	()I	d	sourceCauseId
	m	()I	e	sourceDirectId
	m	()Ljava/util/Optional;	f	sourcePosition
	f	I	a	entityId
	f	I	b	sourceTypeId
	f	I	c	sourceCauseId
	f	I	d	sourceDirectId
	f	Ljava/util/Optional;	e	sourcePosition
c	we	net/minecraft/network/protocol/game/ClientboundDeleteChatPacket
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()Ltu$a;	a	messageSignature
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	f	Ltu$a;	a	messageSignature
c	wf	net/minecraft/network/protocol/game/ClientboundDisconnectPacket
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	(Ltj;)V	<init>	<init>
		p	1		reason
	m	()Ltj;	a	getReason
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	f	Ltj;	a	reason
c	wg	net/minecraft/network/protocol/game/ClientboundDisguisedChatPacket
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()Ltj;	a	message
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	m	()Z	b	isSkippable
	m	()Ltf$b;	c	chatType
	f	Ltj;	a	message
	f	Ltf$b;	b	chatType
c	wh	net/minecraft/network/protocol/game/ClientboundEntityEventPacket
	m	(Lbfh;B)V	<init>	<init>
		p	1		entity
		p	2		status
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()B	a	getEventId
	m	(Lcmi;)Lbfh;	a	getEntity
		p	1		world
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	f	I	a	entityId
	f	B	b	eventId
c	wi	net/minecraft/network/protocol/game/ClientboundExplodePacket
	m	(DDDFLjava/util/List;Lede;)V	<init>	<init>
		p	1		x
		p	3		y
		p	5		z
		p	7		radius
		p	8		affectedBlocks
		p	9		playerVelocity
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()F	a	getKnockbackX
	m	(IIILss;)Lgt;	a	lambda$new$0
		p	3		buf2
	m	(IIILss;Lgt;)V	a	lambda$write$1
		p	3		buf2
		p	4		pos
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	m	()F	c	getKnockbackY
	m	()F	d	getKnockbackZ
	m	()D	e	getX
	m	()D	f	getY
	m	()D	g	getZ
	m	()F	h	getPower
	m	()Ljava/util/List;	i	getToBlow
	f	D	a	x
	f	D	b	y
	f	D	c	z
	f	F	d	power
	f	Ljava/util/List;	e	toBlow
	f	F	f	knockbackX
	f	F	g	knockbackY
	f	F	h	knockbackZ
c	wj	net/minecraft/network/protocol/game/ClientboundForgetLevelChunkPacket
	m	(II)V	<init>	<init>
		p	1		x
		p	2		z
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()I	a	getX
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	m	()I	c	getZ
	f	I	a	x
	f	I	b	z
c	wk	net/minecraft/network/protocol/game/ClientboundGameEventPacket
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	(Lwk$a;F)V	<init>	<init>
		p	1		reason
		p	2		value
	m	()Lwk$a;	a	getEvent
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	m	()F	c	getParam
	f	Lwk$a;	a	NO_RESPAWN_BLOCK_AVAILABLE
	f	Lwk$a;	b	START_RAINING
	f	Lwk$a;	c	STOP_RAINING
	f	Lwk$a;	d	CHANGE_GAME_MODE
	f	Lwk$a;	e	WIN_GAME
	f	Lwk$a;	f	DEMO_EVENT
	f	Lwk$a;	g	ARROW_HIT_PLAYER
	f	Lwk$a;	h	RAIN_LEVEL_CHANGE
	f	Lwk$a;	i	THUNDER_LEVEL_CHANGE
	f	Lwk$a;	j	PUFFER_FISH_STING
	f	Lwk$a;	k	GUARDIAN_ELDER_EFFECT
	f	Lwk$a;	l	IMMEDIATE_RESPAWN
	f	I	m	DEMO_PARAM_INTRO
	f	I	n	DEMO_PARAM_HINT_1
	f	I	o	DEMO_PARAM_HINT_2
	f	I	p	DEMO_PARAM_HINT_3
	f	I	q	DEMO_PARAM_HINT_4
	f	Lwk$a;	r	event
	f	F	s	param
c	wk$a	net/minecraft/network/protocol/game/ClientboundGameEventPacket$Type
	m	(I)V	<init>	<init>
		p	1		id
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	a	TYPES
	f	I	b	id
c	wl	net/minecraft/network/protocol/game/ClientboundHorseScreenOpenPacket
	m	(III)V	<init>	<init>
		p	1		syncId
		p	2		slotCount
		p	3		horseId
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()I	a	getContainerId
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	m	()I	c	getSize
	m	()I	d	getEntityId
	f	I	a	containerId
	f	I	b	size
	f	I	c	entityId
c	wm	net/minecraft/network/protocol/game/ClientboundHurtAnimationPacket
	m	(Lbfx;)V	<init>	<init>
		p	1		entity
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()I	a	id
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	m	()F	c	yaw
	f	I	a	id
	f	F	b	yaw
c	wn	net/minecraft/network/protocol/game/ClientboundInitializeBorderPacket
	m	(Lddi;)V	<init>	<init>
		p	1		worldBorder
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()D	a	getNewCenterX
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	m	()D	c	getNewCenterZ
	m	()D	d	getNewSize
	m	()D	e	getOldSize
	m	()J	f	getLerpTime
	m	()I	g	getNewAbsoluteMaxSize
	m	()I	h	getWarningTime
	m	()I	i	getWarningBlocks
	f	D	a	newCenterX
	f	D	b	newCenterZ
	f	D	c	oldSize
	f	D	d	newSize
	f	J	e	lerpTime
	f	I	f	newAbsoluteMaxSize
	f	I	g	warningBlocks
	f	I	h	warningTime
c	wo	net/minecraft/network/protocol/game/ClientboundKeepAlivePacket
	m	(J)V	<init>	<init>
		p	1		id
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()J	a	getId
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	f	J	a	id
c	wp	net/minecraft/network/protocol/game/ClientboundLevelChunkPacketData
	m	(Lddy;)V	<init>	<init>
		p	1		chunk
	m	(Lss;II)V	<init>	<init>
		p	1		buf
		p	2		x
		p	3		z
	m	()Lss;	a	getReadBuffer
	m	(II)Ljava/util/function/Consumer;	a	getBlockEntitiesTagsConsumer
		p	1		x
		p	2		z
	m	(IILwp$b;)V	a	lambda$getBlockEntitiesTagsConsumer$1
		p	3		visitor
	m	(Lddy;)I	a	calculateChunkSize
		p	0		chunk
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lss;Lddy;)V	a	extractChunkData
		p	0		buf
		p	1		chunk
	m	(Lss;Lwp$a;)V	a	lambda$write$0
		p	0		buf2
		p	1		entry
	m	(Lwp$b;II)V	a	getBlockEntitiesTags
		p	1		consumer
		p	2		x
		p	3		z
	m	()Lre;	b	getHeightmaps
	m	()Lio/netty/buffer/ByteBuf;	c	getWriteBuffer
	f	I	a	TWO_MEGABYTES
	f	Lre;	b	heightmaps
	f	[B	c	buffer
	f	Ljava/util/List;	d	blockEntitiesData
c	wp$a	net/minecraft/network/protocol/game/ClientboundLevelChunkPacketData$BlockEntityInfo
	m	(IILczg;Lre;)V	<init>	<init>
		p	1		localXz
		p	2		y
		p	3		type
		p	4		nbt
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	(Lcze;)Lwp$a;	a	create
		p	0		blockEntity
	m	(Lss;)V	a	write
		p	1		buf
	f	I	a	packedXZ
	f	I	b	y
	f	Lczg;	c	type
	f	Lre;	d	tag
c	wp$b	net/minecraft/network/protocol/game/ClientboundLevelChunkPacketData$BlockEntityTagOutput
	m	(Lgt;Lczg;Lre;)V	accept	accept
		p	1		pos
		p	2		type
		p	3		nbt
c	wq	net/minecraft/network/protocol/game/ClientboundLevelChunkWithLightPacket
	m	(Lddy;Ldwa;Ljava/util/BitSet;Ljava/util/BitSet;Z)V	<init>	<init>
		p	1		chunk
		p	2		lightProvider
		p	3		skyBits
		p	4		blockBits
		p	5		nonEdge
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()I	a	getX
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	m	()I	c	getZ
	m	()Lwp;	d	getChunkData
	m	()Lwu;	e	getLightData
	f	I	a	x
	f	I	b	z
	f	Lwp;	c	chunkData
	f	Lwu;	d	lightData
c	wr	net/minecraft/network/protocol/game/ClientboundLevelEventPacket
	m	(ILgt;IZ)V	<init>	<init>
		p	1		eventId
		p	2		pos
		p	3		data
		p	4		global
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()Z	a	isGlobalEvent
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	m	()I	c	getType
	m	()I	d	getData
	m	()Lgt;	e	getPos
	f	I	a	type
	f	Lgt;	b	pos
	f	I	c	data
	f	Z	d	globalEvent
c	ws	net/minecraft/network/protocol/game/ClientboundLevelParticlesPacket
	m	(Lis;ZDDDFFFFI)V	<init>	<init>
		p	1		parameters
		p	2		longDistance
		p	3		x
		p	5		y
		p	7		z
		p	9		offsetX
		p	10		offsetY
		p	11		offsetZ
		p	12		speed
		p	13		count
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()Z	a	isOverrideLimiter
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lss;Lit;)Lis;	a	readParticle
		p	1		buf
		p	2		type
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	m	()D	c	getX
	m	()D	d	getY
	m	()D	e	getZ
	m	()F	f	getXDist
	m	()F	g	getYDist
	m	()F	h	getZDist
	m	()F	i	getMaxSpeed
	m	()I	j	getCount
	m	()Lis;	k	getParticle
	f	D	a	x
	f	D	b	y
	f	D	c	z
	f	F	d	xDist
	f	F	e	yDist
	f	F	f	zDist
	f	F	g	maxSpeed
	f	I	h	count
	f	Z	i	overrideLimiter
	f	Lis;	j	particle
c	wt	net/minecraft/network/protocol/game/ClientboundLightUpdatePacket
	m	(Lclp;Ldwa;Ljava/util/BitSet;Ljava/util/BitSet;Z)V	<init>	<init>
		p	1		chunkPos
		p	2		lightProvider
		p	3		skyBits
		p	4		blockBits
		p	5		nonEdge
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()I	a	getX
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	m	()I	c	getZ
	m	()Lwu;	d	getLightData
	f	I	a	x
	f	I	b	z
	f	Lwu;	c	lightData
c	wu	net/minecraft/network/protocol/game/ClientboundLightUpdatePacketData
	m	(Lclp;Ldwa;Ljava/util/BitSet;Ljava/util/BitSet;Z)V	<init>	<init>
		p	1		pos
		p	2		lightProvider
		p	3		skyBits
		p	4		blockBits
		p	5		nonEdge
	m	(Lss;II)V	<init>	<init>
		p	1		buf
		p	2		x
		p	3		y
	m	()Ljava/util/BitSet;	a	getSkyYMask
	m	(Lclp;Ldwa;Lcmr;ILjava/util/BitSet;Ljava/util/BitSet;Ljava/util/List;)V	a	prepareSectionData
		p	1		pos
		p	2		lightProvider
		p	3		type
		p	4		y
		p	5		initialized
		p	6		uninitialized
		p	7		nibbles
	m	(Lss;)V	a	write
		p	1		buf
	m	()Ljava/util/BitSet;	b	getEmptySkyYMask
	m	(Lss;)[B	b	lambda$new$1
		p	0		b
	m	()Ljava/util/List;	c	getSkyUpdates
	m	(Lss;)[B	c	lambda$new$0
		p	0		b
	m	()Ljava/util/BitSet;	d	getBlockYMask
	m	()Ljava/util/BitSet;	e	getEmptyBlockYMask
	m	()Ljava/util/List;	f	getBlockUpdates
	m	()Z	g	getTrustEdges
	f	Ljava/util/BitSet;	a	skyYMask
	f	Ljava/util/BitSet;	b	blockYMask
	f	Ljava/util/BitSet;	c	emptySkyYMask
	f	Ljava/util/BitSet;	d	emptyBlockYMask
	f	Ljava/util/List;	e	skyUpdates
	f	Ljava/util/List;	f	blockUpdates
	f	Z	g	trustEdges
c	wv	net/minecraft/network/protocol/game/ClientboundLoginPacket
	m	(IZLcmf;Lcmf;Ljava/util/Set;Lhr$b;Ladc;Ladc;JIIIZZZZLjava/util/Optional;)V	<init>	<init>
		p	1		playerEntityId
		p	3		previousGameMode
		p	11		maxPlayers
		p	12		chunkLoadDistance
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()I	a	playerId
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	m	(Lss;)Ladc;	b	lambda$new$0
		p	0		b
	m	()Z	c	hardcore
	m	()Lcmf;	d	gameType
	m	()Lcmf;	e	previousGameType
	m	()Ljava/util/Set;	f	levels
	m	()Lhr$b;	g	registryHolder
	m	()Ladc;	h	dimensionType
	m	()Ladc;	i	dimension
	m	()J	j	seed
	m	()I	k	maxPlayers
	m	()I	l	chunkRadius
	m	()I	m	simulationDistance
	m	()Z	n	reducedDebugInfo
	m	()Z	o	showDeathScreen
	m	()Z	p	isDebug
	m	()Z	q	isFlat
	m	()Ljava/util/Optional;	r	lastDeathLocation
	f	I	a	playerId
	f	Z	b	hardcore
	f	Lcmf;	c	gameType
	f	Lcmf;	d	previousGameType
	f	Ljava/util/Set;	e	levels
	f	Lhr$b;	f	registryHolder
	f	Ladc;	g	dimensionType
	f	Ladc;	h	dimension
	f	J	i	seed
	f	I	j	maxPlayers
	f	I	k	chunkRadius
	f	I	l	simulationDistance
	f	Z	m	reducedDebugInfo
	f	Z	n	showDeathScreen
	f	Z	o	isDebug
	f	Z	p	isFlat
	f	Ljava/util/Optional;	q	lastDeathLocation
	f	Ladb;	r	BUILTIN_CONTEXT_OPS
c	ww	net/minecraft/network/protocol/game/ClientboundMapItemDataPacket
	m	(IBZLjava/util/Collection;Ldxu$b;)V	<init>	<init>
		p	1		id
		p	2		scale
		p	3		locked
		p	4		icons
		p	5		updateData
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()I	a	getMapId
	m	(Ldxu;)V	a	applyToMap
		p	1		mapState
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lss;Ldxr;)V	a	lambda$write$2
		p	0		b
		p	1		icon
	m	(Lss;Ljava/util/List;)V	a	lambda$write$3
		p	0		buf2
		p	1		icons
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	m	(Lss;)Ljava/util/List;	b	lambda$new$1
		p	0		buf2
	m	()B	c	getScale
	m	(Lss;)Ldxr;	c	lambda$new$0
		p	0		buf3
	m	()Z	d	isLocked
	f	I	a	mapId
	f	B	b	scale
	f	Z	c	locked
	f	Ljava/util/List;	d	decorations
	f	Ldxu$b;	e	colorPatch
c	wx	net/minecraft/network/protocol/game/ClientboundMerchantOffersPacket
	m	(ILclh;IIZZ)V	<init>	<init>
		p	1		syncId
		p	2		recipes
		p	3		levelProgress
		p	4		experience
		p	5		leveled
		p	6		refreshable
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()I	a	getContainerId
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	m	()Lclh;	c	getOffers
	m	()I	d	getVillagerLevel
	m	()I	e	getVillagerXp
	m	()Z	f	showProgress
	m	()Z	g	canRestock
	f	I	a	containerId
	f	Lclh;	b	offers
	f	I	c	villagerLevel
	f	I	d	villagerXp
	f	Z	e	showProgress
	f	Z	f	canRestock
c	wy	net/minecraft/network/protocol/game/ClientboundMoveEntityPacket
	m	(ISSSBBZZZ)V	<init>	<init>
		p	1		entityId
		p	2		deltaX
		p	3		deltaY
		p	4		deltaZ
		p	5		yaw
		p	6		pitch
		p	7		onGround
		p	8		rotate
		p	9		positionChanged
	m	()S	a	getXa
	m	(Lcmi;)Lbfh;	a	getEntity
		p	1		world
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	m	()S	c	getYa
	m	()S	d	getZa
	m	()B	e	getyRot
	m	()B	f	getxRot
	m	()Z	g	hasRotation
	m	()Z	h	hasPosition
	m	()Z	i	isOnGround
	f	I	a	entityId
	f	S	b	xa
	f	S	c	ya
	f	S	d	za
	f	B	e	yRot
	f	B	f	xRot
	f	Z	g	onGround
	f	Z	h	hasRot
	f	Z	i	hasPos
c	wy$a	net/minecraft/network/protocol/game/ClientboundMoveEntityPacket$Pos
	m	(ISSSZ)V	<init>	<init>
		p	1		entityId
		p	2		deltaX
		p	3		deltaY
		p	4		deltaZ
		p	5		onGround
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lss;)Lwy$a;	b	read
		p	0		buf
c	wy$b	net/minecraft/network/protocol/game/ClientboundMoveEntityPacket$PosRot
	m	(ISSSBBZ)V	<init>	<init>
		p	1		entityId
		p	2		deltaX
		p	3		deltaY
		p	4		deltaZ
		p	5		yaw
		p	6		pitch
		p	7		onGround
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lss;)Lwy$b;	b	read
		p	0		buf
c	wy$c	net/minecraft/network/protocol/game/ClientboundMoveEntityPacket$Rot
	m	(IBBZ)V	<init>	<init>
		p	1		entityId
		p	2		yaw
		p	3		pitch
		p	4		onGround
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lss;)Lwy$c;	b	read
		p	0		buf
c	wz	net/minecraft/network/protocol/game/ClientboundMoveVehiclePacket
	m	(Lbfh;)V	<init>	<init>
		p	1		entity
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()D	a	getX
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	m	()D	c	getY
	m	()D	d	getZ
	m	()F	e	getYRot
	m	()F	f	getXRot
	f	D	a	x
	f	D	b	y
	f	D	c	z
	f	F	d	yRot
	f	F	e	xRot
c	xa	net/minecraft/network/protocol/game/ClientboundOpenBookPacket
	m	(Lbdx;)V	<init>	<init>
		p	1		hand
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()Lbdx;	a	getHand
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	f	Lbdx;	a	hand
c	xb	net/minecraft/network/protocol/game/ClientboundOpenScreenPacket
	m	(ILccj;Ltj;)V	<init>	<init>
		p	1		syncId
		p	2		type
		p	3		name
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()I	a	getContainerId
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	m	()Lccj;	c	getType
	m	()Ltj;	d	getTitle
	f	I	a	containerId
	f	Lccj;	b	type
	f	Ltj;	c	title
c	xc	net/minecraft/network/protocol/game/ClientboundOpenSignEditorPacket
	m	(Lgt;)V	<init>	<init>
		p	1		pos
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()Lgt;	a	getPos
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	f	Lgt;	a	pos
c	xd	net/minecraft/network/protocol/game/ClientboundPingPacket
	m	(I)V	<init>	<init>
		p	1		parameter
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()I	a	getId
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	f	I	a	id
c	xe	net/minecraft/network/protocol/game/ClientboundPlaceGhostRecipePacket
	m	(ILciy;)V	<init>	<init>
		p	1		syncId
		p	2		recipe
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()Ladd;	a	getRecipe
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	m	()I	c	getContainerId
	f	I	a	containerId
	f	Ladd;	b	recipe
c	xf	net/minecraft/network/protocol/game/ClientboundPlayerAbilitiesPacket
	m	(Lbyj;)V	<init>	<init>
		p	1		abilities
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()Z	a	isInvulnerable
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	m	()Z	c	isFlying
	m	()Z	d	canFly
	m	()Z	e	canInstabuild
	m	()F	f	getFlyingSpeed
	m	()F	g	getWalkingSpeed
	f	I	a	FLAG_INVULNERABLE
	f	I	b	FLAG_FLYING
	f	I	c	FLAG_CAN_FLY
	f	I	d	FLAG_INSTABUILD
	f	Z	e	invulnerable
	f	Z	f	isFlying
	f	Z	g	canFly
	f	Z	h	instabuild
	f	F	i	flyingSpeed
	f	F	j	walkingSpeed
c	xg	net/minecraft/network/protocol/game/ClientboundPlayerChatPacket
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()Ljava/util/UUID;	a	sender
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	m	()Z	b	isSkippable
	m	()I	c	index
	m	()Ltu;	d	signature
	m	()Lub$a;	e	body
	m	()Ltj;	f	unsignedContent
	m	()Ltm;	g	filterMask
	m	()Ltf$b;	h	chatType
	f	Ljava/util/UUID;	a	sender
	f	I	b	index
	f	Ltu;	c	signature
	f	Lub$a;	d	body
	f	Ltj;	e	unsignedContent
	f	Ltm;	f	filterMask
	f	Ltf$b;	g	chatType
c	xh	net/minecraft/network/protocol/game/ClientboundPlayerCombatEndPacket
	m	(II)V	<init>	<init>
		p	1		attackerId
		p	2		timeSinceLastAttack
	m	(Lbej;)V	<init>	<init>
		p	1		damageTracker
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	f	I	a	killerId
	f	I	b	duration
c	xi	net/minecraft/network/protocol/game/ClientboundPlayerCombatEnterPacket
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
c	xj	net/minecraft/network/protocol/game/ClientboundPlayerCombatKillPacket
	m	(IILtj;)V	<init>	<init>
		p	1		entityId
		p	2		killerId
		p	3		message
	m	(Lbej;Ltj;)V	<init>	<init>
		p	1		damageTracker
		p	2		message
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()I	a	getKillerId
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	m	()Z	b	isSkippable
	m	()I	c	getPlayerId
	m	()Ltj;	d	getMessage
	f	I	a	playerId
	f	I	b	killerId
	f	Ltj;	c	message
c	xk	net/minecraft/network/protocol/game/ClientboundPlayerInfoRemovePacket
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()Ljava/util/List;	a	profileIds
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	f	Ljava/util/List;	a	profileIds
c	xl	net/minecraft/network/protocol/game/ClientboundPlayerInfoUpdatePacket
	m	(Ljava/util/EnumSet;Ljava/util/Collection;)V	<init>	<init>
		p	1		actions
		p	2		players
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	(Lxl$a;Laiq;)V	<init>	<init>
		p	1		action
		p	2		player
	m	()Ljava/util/EnumSet;	a	actions
	m	(Ljava/util/Collection;)Lxl;	a	createPlayerInitializing
		p	0		players
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lss;Lxl$b;)V	a	lambda$write$1
		p	1		buf2
		p	2		entry
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	m	(Lss;)Lxl$b;	b	lambda$new$0
		p	1		buf2
	m	()Ljava/util/List;	c	entries
	m	()Ljava/util/List;	d	newEntries
	f	Ljava/util/EnumSet;	a	actions
	f	Ljava/util/List;	b	entries
c	xl$a	net/minecraft/network/protocol/game/ClientboundPlayerInfoUpdatePacket$Action
	m	(Ljava/lang/String;ILxl$a$a;Lxl$a$b;)V	<init>	<init>
		p	3		reader
		p	4		writer
	m	()[Lxl$a;	a	$values
	m	(Lss;Lxl$b;)V	a	lambda$static$11
		p	0		buf
		p	1		entry
	m	(Lxl$c;Lss;)V	a	lambda$static$10
		p	0		serialized
		p	1		buf
	m	(Lss;Lxl$b;)V	b	lambda$static$9
		p	0		buf
		p	1		entry
	m	(Lxl$c;Lss;)V	b	lambda$static$8
		p	0		serialized
		p	1		buf
	m	(Lss;Lxl$b;)V	c	lambda$static$7
		p	0		buf
		p	1		entry
	m	(Lxl$c;Lss;)V	c	lambda$static$6
		p	0		serialized
		p	1		buf
	m	(Lss;Lxl$b;)V	d	lambda$static$5
		p	0		buf
		p	1		entry
	m	(Lxl$c;Lss;)V	d	lambda$static$4
		p	0		serialized
		p	1		buf
	m	(Lss;Lxl$b;)V	e	lambda$static$3
		p	0		buf
		p	1		entry
	m	(Lxl$c;Lss;)V	e	lambda$static$2
		p	0		serialized
		p	1		buf
	m	(Lss;Lxl$b;)V	f	lambda$static$1
		p	0		buf
		p	1		entry
	m	(Lxl$c;Lss;)V	f	lambda$static$0
		p	0		serialized
		p	1		buf
	f	Lxl$a;	a	ADD_PLAYER
	f	Lxl$a;	b	INITIALIZE_CHAT
	f	Lxl$a;	c	UPDATE_GAME_MODE
	f	Lxl$a;	d	UPDATE_LISTED
	f	Lxl$a;	e	UPDATE_LATENCY
	f	Lxl$a;	f	UPDATE_DISPLAY_NAME
	f	Lxl$a$a;	g	reader
	f	Lxl$a$b;	h	writer
	f	[Lxl$a;	i	$VALUES
c	xl$a$a	net/minecraft/network/protocol/game/ClientboundPlayerInfoUpdatePacket$Action$Reader
	m	(Lxl$c;Lss;)V	read	read
		p	1		serialized
		p	2		buf
c	xl$a$b	net/minecraft/network/protocol/game/ClientboundPlayerInfoUpdatePacket$Action$Writer
	m	(Lss;Lxl$b;)V	write	write
		p	1		buf
		p	2		entry
c	xl$b	net/minecraft/network/protocol/game/ClientboundPlayerInfoUpdatePacket$Entry
	m	(Laiq;)V	<init>	<init>
		p	1		player
	m	()Ljava/util/UUID;	a	profileId
	m	()Lcom/mojang/authlib/GameProfile;	b	profile
	m	()Z	c	listed
	m	()I	d	latency
	m	()Lcmf;	e	gameMode
	m	()Ltj;	f	displayName
	m	()Ltz$a;	g	chatSession
	f	Ljava/util/UUID;	a	profileId
	f	Lcom/mojang/authlib/GameProfile;	b	profile
	f	Z	c	listed
	f	I	d	latency
	f	Lcmf;	e	gameMode
	f	Ltj;	f	displayName
	f	Ltz$a;	g	chatSession
c	xl$c	net/minecraft/network/protocol/game/ClientboundPlayerInfoUpdatePacket$EntryBuilder
	m	(Ljava/util/UUID;)V	<init>	<init>
		p	1		profileId
	m	()Lxl$b;	a	build
	f	Ljava/util/UUID;	a	profileId
	f	Lcom/mojang/authlib/GameProfile;	b	profile
	f	Z	c	listed
	f	I	d	latency
	f	Lcmf;	e	gameMode
	f	Ltj;	f	displayName
	f	Ltz$a;	g	chatSession
c	xm	net/minecraft/network/protocol/game/ClientboundPlayerLookAtPacket
	m	(Lea$a;DDD)V	<init>	<init>
		p	1		selfAnchor
		p	2		targetX
		p	4		targetY
		p	6		targetZ
	m	(Lea$a;Lbfh;Lea$a;)V	<init>	<init>
		p	1		selfAnchor
		p	2		entity
		p	3		targetAnchor
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()Lea$a;	a	getFromAnchor
	m	(Lcmi;)Lede;	a	getPosition
		p	1		world
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	f	D	a	x
	f	D	b	y
	f	D	c	z
	f	I	d	entity
	f	Lea$a;	e	fromAnchor
	f	Lea$a;	f	toAnchor
	f	Z	g	atEntity
c	xn	net/minecraft/network/protocol/game/ClientboundPlayerPositionPacket
	m	(DDDFFLjava/util/Set;I)V	<init>	<init>
		p	1		x
		p	3		y
		p	5		z
		p	7		yaw
		p	8		pitch
		p	9		flags
		p	10		teleportId
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()D	a	getX
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	m	()D	c	getY
	m	()D	d	getZ
	m	()F	e	getYRot
	m	()F	f	getXRot
	m	()I	g	getId
	m	()Ljava/util/Set;	h	getRelativeArguments
	f	D	a	x
	f	D	b	y
	f	D	c	z
	f	F	d	yRot
	f	F	e	xRot
	f	Ljava/util/Set;	f	relativeArguments
	f	I	g	id
c	xo	net/minecraft/network/protocol/game/ClientboundRecipePacket
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	(Lxo$a;Ljava/util/Collection;Ljava/util/Collection;Lamv;)V	<init>	<init>
		p	1		action
		p	2		recipeIdsToChange
		p	3		recipeIdsToInit
		p	4		options
	m	()Ljava/util/List;	a	getRecipes
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	m	()Ljava/util/List;	c	getHighlights
	m	()Lamv;	d	getBookSettings
	m	()Lxo$a;	e	getState
	f	Lxo$a;	a	state
	f	Ljava/util/List;	b	recipes
	f	Ljava/util/List;	c	toHighlight
	f	Lamv;	d	bookSettings
c	xo$a	net/minecraft/network/protocol/game/ClientboundRecipePacket$State
	m	()[Lxo$a;	a	$values
	f	Lxo$a;	a	INIT
	f	Lxo$a;	b	ADD
	f	Lxo$a;	c	REMOVE
	f	[Lxo$a;	d	$VALUES
c	xp	net/minecraft/network/protocol/game/ClientboundRemoveEntitiesPacket
	m	(Lit/unimi/dsi/fastutil/ints/IntList;)V	<init>	<init>
		p	1		entityIds
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	([I)V	<init>	<init>
		p	1		entityIds
	m	()Lit/unimi/dsi/fastutil/ints/IntList;	a	getEntityIds
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	f	Lit/unimi/dsi/fastutil/ints/IntList;	a	entityIds
c	xq	net/minecraft/network/protocol/game/ClientboundRemoveMobEffectPacket
	m	(ILbew;)V	<init>	<init>
		p	1		entityId
		p	2		effectType
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()Lbew;	a	getEffect
	m	(Lcmi;)Lbfh;	a	getEntity
		p	1		world
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	f	I	a	entityId
	f	Lbew;	b	effect
c	xr	net/minecraft/network/protocol/game/ClientboundResourcePackPacket
	m	(Ljava/lang/String;Ljava/lang/String;ZLtj;)V	<init>	<init>
		p	1		url
		p	2		hash
		p	3		required
		p	4		prompt
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()Ljava/lang/String;	a	getUrl
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	m	()Ljava/lang/String;	c	getHash
	m	()Z	d	isRequired
	m	()Ltj;	e	getPrompt
	f	I	a	MAX_HASH_LENGTH
	f	Ljava/lang/String;	b	url
	f	Ljava/lang/String;	c	hash
	f	Z	d	required
	f	Ltj;	e	prompt
c	xs	net/minecraft/network/protocol/game/ClientboundRespawnPacket
	m	(Ladc;Ladc;JLcmf;Lcmf;ZZBLjava/util/Optional;)V	<init>	<init>
		p	1		dimensionType
		p	2		dimension
		p	3		sha256Seed
		p	5		gameMode
		p	6		previousGameMode
		p	7		debugWorld
		p	8		flatWorld
		p	9		flag
		p	10		lastDeathPos
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()Ladc;	a	getDimensionType
	m	(B)Z	a	shouldKeep
		p	1		flag
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	m	()Ladc;	c	getDimension
	m	()J	d	getSeed
	m	()Lcmf;	e	getPlayerGameType
	m	()Lcmf;	f	getPreviousPlayerGameType
	m	()Z	g	isDebug
	m	()Z	h	isFlat
	m	()Ljava/util/Optional;	i	getLastDeathLocation
	f	B	a	KEEP_ATTRIBUTES
	f	B	b	KEEP_ENTITY_DATA
	f	B	c	KEEP_ALL_DATA
	f	Ladc;	d	dimensionType
	f	Ladc;	e	dimension
	f	J	f	seed
	f	Lcmf;	g	playerGameType
	f	Lcmf;	h	previousPlayerGameType
	f	Z	i	isDebug
	f	Z	j	isFlat
	f	B	k	dataToKeep
	f	Ljava/util/Optional;	l	lastDeathLocation
c	xt	net/minecraft/network/protocol/game/ClientboundRotateHeadPacket
	m	(Lbfh;B)V	<init>	<init>
		p	1		entity
		p	2		headYaw
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()B	a	getYHeadRot
	m	(Lcmi;)Lbfh;	a	getEntity
		p	1		world
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	f	I	a	entityId
	f	B	b	yHeadRot
c	xu	net/minecraft/network/protocol/game/ClientboundSectionBlocksUpdatePacket
	m	(Lhw;Lit/unimi/dsi/fastutil/shorts/ShortSet;Lddz;Z)V	<init>	<init>
		p	1		sectionPos
		p	2		positions
		p	3		section
		p	4		noLightingUpdates
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()Z	a	shouldSuppressLightUpdates
	m	(Ljava/util/function/BiConsumer;)V	a	runUpdates
		p	1		visitor
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	f	I	a	POS_IN_SECTION_BITS
	f	Lhw;	b	sectionPos
	f	[S	c	positions
	f	[Ldbq;	d	states
	f	Z	e	suppressLightUpdates
c	xv	net/minecraft/network/protocol/game/ClientboundSelectAdvancementsTabPacket
	m	(Ladd;)V	<init>	<init>
		p	1		tabId
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()Ladd;	a	getTab
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	f	Ladd;	a	tab
c	xw	net/minecraft/network/protocol/game/ClientboundServerDataPacket
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	(Ltj;Ljava/util/Optional;Z)V	<init>	<init>
		p	1		description
		p	2		favicon
		p	3		previewsChat
	m	()Ltj;	a	getMotd
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	m	()Ljava/util/Optional;	c	getIconBytes
	m	()Z	d	enforcesSecureChat
	f	Ltj;	a	motd
	f	Ljava/util/Optional;	b	iconBytes
	f	Z	c	enforcesSecureChat
c	xx	net/minecraft/network/protocol/game/ClientboundSetActionBarTextPacket
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	(Ltj;)V	<init>	<init>
		p	1		message
	m	()Ltj;	a	getText
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	f	Ltj;	a	text
c	xy	net/minecraft/network/protocol/game/ClientboundSetBorderCenterPacket
	m	(Lddi;)V	<init>	<init>
		p	1		worldBorder
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()D	a	getNewCenterZ
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	m	()D	c	getNewCenterX
	f	D	a	newCenterX
	f	D	b	newCenterZ
c	xz	net/minecraft/network/protocol/game/ClientboundSetBorderLerpSizePacket
	m	(Lddi;)V	<init>	<init>
		p	1		worldBorder
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()D	a	getOldSize
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	m	()D	c	getNewSize
	m	()J	d	getLerpTime
	f	D	a	oldSize
	f	D	b	newSize
	f	J	c	lerpTime
c	ya	net/minecraft/network/protocol/game/ClientboundSetBorderSizePacket
	m	(Lddi;)V	<init>	<init>
		p	1		worldBorder
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()D	a	getSize
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	f	D	a	size
c	yb	net/minecraft/network/protocol/game/ClientboundSetBorderWarningDelayPacket
	m	(Lddi;)V	<init>	<init>
		p	1		worldBorder
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()I	a	getWarningDelay
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	f	I	a	warningDelay
c	yc	net/minecraft/network/protocol/game/ClientboundSetBorderWarningDistancePacket
	m	(Lddi;)V	<init>	<init>
		p	1		worldBorder
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()I	a	getWarningBlocks
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	f	I	a	warningBlocks
c	yd	net/minecraft/network/protocol/game/ClientboundSetCameraPacket
	m	(Lbfh;)V	<init>	<init>
		p	1		entity
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	(Lcmi;)Lbfh;	a	getEntity
		p	1		world
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	f	I	a	cameraId
c	ye	net/minecraft/network/protocol/game/ClientboundSetCarriedItemPacket
	m	(I)V	<init>	<init>
		p	1		slot
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()I	a	getSlot
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	f	I	a	slot
c	yf	net/minecraft/network/protocol/game/ClientboundSetChunkCacheCenterPacket
	m	(II)V	<init>	<init>
		p	1		x
		p	2		z
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()I	a	getX
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	m	()I	c	getZ
	f	I	a	x
	f	I	b	z
c	yg	net/minecraft/network/protocol/game/ClientboundSetChunkCacheRadiusPacket
	m	(I)V	<init>	<init>
		p	1		distance
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()I	a	getRadius
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	f	I	a	radius
c	yh	net/minecraft/network/protocol/game/ClientboundSetDefaultSpawnPositionPacket
	m	(Lgt;F)V	<init>	<init>
		p	1		pos
		p	2		angle
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()Lgt;	a	getPos
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	m	()F	c	getAngle
	f	Lgt;	a	pos
	f	F	b	angle
c	yi	net/minecraft/network/protocol/game/ClientboundSetDisplayObjectivePacket
	m	(ILedz;)V	<init>	<init>
		p	1		slot
		p	2		objective
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()I	a	getSlot
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	m	()Ljava/lang/String;	c	getObjectiveName
	f	I	a	slot
	f	Ljava/lang/String;	b	objectiveName
c	yj	net/minecraft/network/protocol/game/ClientboundSetEntityDataPacket
	m	(ILjava/util/List;)V	<init>	<init>
		p	1		id
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()I	a	id
	m	(Ljava/util/List;Lss;)V	a	pack
		p	0		trackedValues
		p	1		buf
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	m	(Lss;)Ljava/util/List;	b	unpack
		p	0		buf
	m	()Ljava/util/List;	c	packedItems
	f	I	a	EOF_MARKER
	f	I	b	id
	f	Ljava/util/List;	c	packedItems
c	yk	net/minecraft/network/protocol/game/ClientboundSetEntityLinkPacket
	m	(Lbfh;Lbfh;)V	<init>	<init>
		p	1		attachedEntity
		p	2		holdingEntity
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()I	a	getSourceId
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	m	()I	c	getDestId
	f	I	a	sourceId
	f	I	b	destId
c	yl	net/minecraft/network/protocol/game/ClientboundSetEntityMotionPacket
	m	(ILede;)V	<init>	<init>
		p	1		id
		p	2		velocity
	m	(Lbfh;)V	<init>	<init>
		p	1		entity
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()I	a	getId
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	m	()I	c	getXa
	m	()I	d	getYa
	m	()I	e	getZa
	f	I	a	id
	f	I	b	xa
	f	I	c	ya
	f	I	d	za
c	ym	net/minecraft/network/protocol/game/ClientboundSetEquipmentPacket
	m	(ILjava/util/List;)V	<init>	<init>
		p	1		id
		p	2		equipmentList
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()I	a	getEntity
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	m	()Ljava/util/List;	c	getSlots
	f	B	a	CONTINUE_MASK
	f	I	b	entity
	f	Ljava/util/List;	c	slots
c	yn	net/minecraft/network/protocol/game/ClientboundSetExperiencePacket
	m	(FII)V	<init>	<init>
		p	1		barProgress
		p	2		experienceLevel
		p	3		experience
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()F	a	getExperienceProgress
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	m	()I	c	getTotalExperience
	m	()I	d	getExperienceLevel
	f	F	a	experienceProgress
	f	I	b	totalExperience
	f	I	c	experienceLevel
c	yo	net/minecraft/network/protocol/game/ClientboundSetHealthPacket
	m	(FIF)V	<init>	<init>
		p	1		health
		p	2		food
		p	3		saturation
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()F	a	getHealth
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	m	()I	c	getFood
	m	()F	d	getSaturation
	f	F	a	health
	f	I	b	food
	f	F	c	saturation
c	yp	net/minecraft/network/protocol/game/ClientboundSetObjectivePacket
	m	(Ledz;I)V	<init>	<init>
		p	1		objective
		p	2		mode
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()Ljava/lang/String;	a	getObjectiveName
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	m	()Ltj;	c	getDisplayName
	m	()I	d	getMethod
	m	()Leef$a;	e	getRenderType
	f	I	a	METHOD_ADD
	f	I	b	METHOD_REMOVE
	f	I	c	METHOD_CHANGE
	f	Ljava/lang/String;	d	objectiveName
	f	Ltj;	e	displayName
	f	Leef$a;	f	renderType
	f	I	g	method
c	yq	net/minecraft/network/protocol/game/ClientboundSetPassengersPacket
	m	(Lbfh;)V	<init>	<init>
		p	1		entity
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()[I	a	getPassengers
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	m	()I	c	getVehicle
	f	I	a	vehicle
	f	[I	b	passengers
c	yr	net/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket
	m	(Ljava/lang/String;ILjava/util/Optional;Ljava/util/Collection;)V	<init>	<init>
		p	1		teamName
		p	2		packetType
		p	3		team
		p	4		playerNames
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()Lyr$a;	a	getPlayerAction
	m	(I)Z	a	shouldHavePlayerList
		p	0		packetType
	m	(Leea;)Lyr;	a	createRemovePacket
		p	0		team
	m	(Leea;Ljava/lang/String;Lyr$a;)Lyr;	a	createPlayerPacket
		p	0		team
		p	1		playerName
		p	2		operation
	m	(Leea;Z)Lyr;	a	createAddOrModifyPacket
		p	0		team
		p	1		updatePlayers
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	m	(I)Z	b	shouldHaveParameters
		p	0		packetType
	m	()Lyr$a;	c	getTeamAction
	m	()Ljava/lang/String;	d	getName
	m	()Ljava/util/Collection;	e	getPlayers
	m	()Ljava/util/Optional;	f	getParameters
	m	()Ljava/lang/IllegalStateException;	g	lambda$write$0
	f	I	a	METHOD_ADD
	f	I	b	METHOD_REMOVE
	f	I	c	METHOD_CHANGE
	f	I	d	METHOD_JOIN
	f	I	e	METHOD_LEAVE
	f	I	f	MAX_VISIBILITY_LENGTH
	f	I	g	MAX_COLLISION_LENGTH
	f	I	h	method
	f	Ljava/lang/String;	i	name
	f	Ljava/util/Collection;	j	players
	f	Ljava/util/Optional;	k	parameters
c	yr$a	net/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket$Action
	m	()[Lyr$a;	a	$values
	f	Lyr$a;	a	ADD
	f	Lyr$a;	b	REMOVE
	f	[Lyr$a;	c	$VALUES
c	yr$b	net/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket$Parameters
	m	(Leea;)V	<init>	<init>
		p	1		team
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()Ltj;	a	getDisplayName
	m	(Lss;)V	a	write
		p	1		buf
	m	()I	b	getOptions
	m	()Ln;	c	getColor
	m	()Ljava/lang/String;	d	getNametagVisibility
	m	()Ljava/lang/String;	e	getCollisionRule
	m	()Ltj;	f	getPlayerPrefix
	m	()Ltj;	g	getPlayerSuffix
	f	Ltj;	a	displayName
	f	Ltj;	b	playerPrefix
	f	Ltj;	c	playerSuffix
	f	Ljava/lang/String;	d	nametagVisibility
	f	Ljava/lang/String;	e	collisionRule
	f	Ln;	f	color
	f	I	g	options
c	ys	net/minecraft/network/protocol/game/ClientboundSetScorePacket
	m	(Ladt$a;Ljava/lang/String;Ljava/lang/String;I)V	<init>	<init>
		p	1		mode
		p	2		objectiveName
		p	3		playerName
		p	4		score
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()Ljava/lang/String;	a	getOwner
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	m	()Ljava/lang/String;	c	getObjectiveName
	m	()I	d	getScore
	m	()Ladt$a;	e	getMethod
	f	Ljava/lang/String;	a	owner
	f	Ljava/lang/String;	b	objectiveName
	f	I	c	score
	f	Ladt$a;	d	method
c	yt	net/minecraft/network/protocol/game/ClientboundSetSimulationDistancePacket
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()I	a	simulationDistance
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	f	I	a	simulationDistance
c	yu	net/minecraft/network/protocol/game/ClientboundSetSubtitleTextPacket
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	(Ltj;)V	<init>	<init>
		p	1		subtitle
	m	()Ltj;	a	getText
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	f	Ltj;	a	text
c	yv	net/minecraft/network/protocol/game/ClientboundSetTimePacket
	m	(JJZ)V	<init>	<init>
		p	1		time
		p	3		timeOfDay
		p	5		doDaylightCycle
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()J	a	getGameTime
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	m	()J	c	getDayTime
	f	J	a	gameTime
	f	J	b	dayTime
c	yw	net/minecraft/network/protocol/game/ClientboundSetTitleTextPacket
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	(Ltj;)V	<init>	<init>
		p	1		title
	m	()Ltj;	a	getText
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	f	Ltj;	a	text
c	yx	net/minecraft/network/protocol/game/ClientboundSetTitlesAnimationPacket
	m	(III)V	<init>	<init>
		p	1		fadeInTicks
		p	2		stayTicks
		p	3		fadeOutTicks
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()I	a	getFadeIn
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	m	()I	c	getStay
	m	()I	d	getFadeOut
	f	I	a	fadeIn
	f	I	b	stay
	f	I	c	fadeOut
c	yy	net/minecraft/network/protocol/game/ClientboundSoundEntityPacket
	m	(Lhd;Lams;Lbfh;FFJ)V	<init>	<init>
		p	1		sound
		p	2		category
		p	3		entity
		p	4		volume
		p	5		pitch
		p	6		seed
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()Lhd;	a	getSound
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lss;Lamq;)V	a	lambda$write$0
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	m	()Lams;	c	getSource
	m	()I	d	getId
	m	()F	e	getVolume
	m	()F	f	getPitch
	m	()J	g	getSeed
	f	Lhd;	a	sound
	f	Lams;	b	source
	f	I	c	id
	f	F	d	volume
	f	F	e	pitch
	f	J	f	seed
c	yz	net/minecraft/network/protocol/game/ClientboundSoundPacket
	m	(Lhd;Lams;DDDFFJ)V	<init>	<init>
		p	1		sound
		p	2		category
		p	3		x
		p	5		y
		p	7		z
		p	9		volume
		p	10		pitch
		p	11		seed
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()Lhd;	a	getSound
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lss;Lamq;)V	a	lambda$write$0
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	m	()Lams;	c	getSource
	m	()D	d	getX
	m	()D	e	getY
	m	()D	f	getZ
	m	()F	g	getVolume
	m	()F	h	getPitch
	m	()J	i	getSeed
	f	F	a	LOCATION_ACCURACY
	f	Lhd;	b	sound
	f	Lams;	c	source
	f	I	d	x
	f	I	e	y
	f	I	f	z
	f	F	g	volume
	f	F	h	pitch
	f	J	i	seed
c	za	net/minecraft/network/protocol/game/ClientboundStopSoundPacket
	m	(Ladd;Lams;)V	<init>	<init>
		p	1		soundId
		p	2		category
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()Ladd;	a	getName
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	m	()Lams;	c	getSource
	f	I	a	HAS_SOURCE
	f	I	b	HAS_SOUND
	f	Ladd;	c	name
	f	Lams;	d	source
c	zb	net/minecraft/network/protocol/game/ClientboundSystemChatPacket
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()Ltj;	a	content
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	m	()Z	b	isSkippable
	m	()Z	c	overlay
	f	Ltj;	a	content
	f	Z	b	overlay
c	zc	net/minecraft/network/protocol/game/ClientboundTabListPacket
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	(Ltj;Ltj;)V	<init>	<init>
		p	1		header
		p	2		footer
	m	()Ltj;	a	getHeader
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	m	()Ltj;	c	getFooter
	f	Ltj;	a	header
	f	Ltj;	b	footer
c	zd	net/minecraft/network/protocol/game/ClientboundTagQueryPacket
	m	(ILre;)V	<init>	<init>
		p	1		transactionId
		p	2		nbt
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()I	a	getTransactionId
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	m	()Z	b	isSkippable
	m	()Lre;	c	getTag
	f	I	a	transactionId
	f	Lre;	b	tag
c	ze	net/minecraft/network/protocol/game/ClientboundTakeItemEntityPacket
	m	(III)V	<init>	<init>
		p	1		entityId
		p	2		collectorId
		p	3		stackAmount
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()I	a	getItemId
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	m	()I	c	getPlayerId
	m	()I	d	getAmount
	f	I	a	itemId
	f	I	b	playerId
	f	I	c	amount
c	zf	net/minecraft/network/protocol/game/ClientboundTeleportEntityPacket
	m	(Lbfh;)V	<init>	<init>
		p	1		entity
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()I	a	getId
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	m	()D	c	getX
	m	()D	d	getY
	m	()D	e	getZ
	m	()B	f	getyRot
	m	()B	g	getxRot
	m	()Z	h	isOnGround
	f	I	a	id
	f	D	b	x
	f	D	c	y
	f	D	d	z
	f	B	e	yRot
	f	B	f	xRot
	f	Z	g	onGround
c	zg	net/minecraft/network/protocol/game/ClientboundUpdateAdvancementsPacket
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	(ZLjava/util/Collection;Ljava/util/Set;Ljava/util/Map;)V	<init>	<init>
		p	1		clearCurrent
		p	2		toEarn
		p	3		toRemove
		p	4		toSetProgress
	m	()Ljava/util/Map;	a	getAdded
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lss;Lae$a;)V	a	lambda$write$0
		p	0		buf2
		p	1		task
	m	(Lss;Lag;)V	a	lambda$write$1
		p	0		buf2
		p	1		progress
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	m	()Ljava/util/Set;	c	getRemoved
	m	()Ljava/util/Map;	d	getProgress
	m	()Z	e	shouldReset
	f	Z	a	reset
	f	Ljava/util/Map;	b	added
	f	Ljava/util/Set;	c	removed
	f	Ljava/util/Map;	d	progress
c	zh	net/minecraft/network/protocol/game/ClientboundUpdateAttributesPacket
	m	(ILjava/util/Collection;)V	<init>	<init>
		p	1		entityId
		p	2		attributes
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()I	a	getEntityId
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lss;Lbhc;)V	a	lambda$write$2
		p	0		buf3
		p	1		modifier
	m	(Lss;Lzh$a;)V	a	lambda$write$3
		p	0		buf2
		p	1		attribute
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	m	(Lss;)Lzh$a;	b	lambda$new$1
		p	0		buf2
	m	()Ljava/util/List;	c	getValues
	m	(Lss;)Lbhc;	c	lambda$new$0
		p	0		modifiers
	f	I	a	entityId
	f	Ljava/util/List;	b	attributes
c	zh$a	net/minecraft/network/protocol/game/ClientboundUpdateAttributesPacket$AttributeSnapshot
	m	(Lbgz;DLjava/util/Collection;)V	<init>	<init>
		p	1		attribute
		p	2		baseValue
		p	4		modifiers
	m	()Lbgz;	a	getAttribute
	m	()D	b	getBase
	m	()Ljava/util/Collection;	c	getModifiers
	f	Lbgz;	a	attribute
	f	D	b	base
	f	Ljava/util/Collection;	c	modifiers
c	zi	net/minecraft/network/protocol/game/ClientboundUpdateEnabledFeaturesPacket
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()Ljava/util/Set;	a	features
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	f	Ljava/util/Set;	a	features
c	zj	net/minecraft/network/protocol/game/ClientboundUpdateMobEffectPacket
	m	(ILbey;)V	<init>	<init>
		p	1		entityId
		p	2		effect
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()I	a	getEntityId
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lss;Lbey$a;)V	a	lambda$write$1
		p	0		buf2
		p	1		factorCalculationData
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	m	(Lss;)Lbey$a;	b	lambda$new$0
		p	0		buf2
	m	()Lbew;	c	getEffect
	m	()B	d	getEffectAmplifier
	m	()I	e	getEffectDurationTicks
	m	()Z	f	isEffectVisible
	m	()Z	g	isEffectAmbient
	m	()Z	h	effectShowsIcon
	m	()Lbey$a;	i	getFactorData
	f	I	a	FLAG_AMBIENT
	f	I	b	FLAG_VISIBLE
	f	I	c	FLAG_SHOW_ICON
	f	I	d	entityId
	f	Lbew;	e	effect
	f	B	f	effectAmplifier
	f	I	g	effectDurationTicks
	f	B	h	flags
	f	Lbey$a;	i	factorData
c	zk	net/minecraft/network/protocol/game/ClientboundUpdateRecipesPacket
	m	(Ljava/util/Collection;)V	<init>	<init>
		p	1		recipes
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()Ljava/util/List;	a	getRecipes
	m	(Ladd;)Ljava/lang/IllegalArgumentException;	a	lambda$fromNetwork$0
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lss;Lciy;)V	a	toNetwork
		p	0		buf
		p	1		recipe
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	m	(Lss;)Lciy;	b	fromNetwork
		p	0		buf
	f	Ljava/util/List;	a	recipes
c	zl	net/minecraft/network/protocol/game/ClientboundUpdateTagsPacket
	m	(Ljava/util/Map;)V	<init>	<init>
		p	1		groups
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()Ljava/util/Map;	a	getTags
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lss;Ladc;)V	a	lambda$write$1
		p	0		buf
		p	1		registryKey
	m	(Lss;Lany$a;)V	a	lambda$write$2
		p	0		buf
		p	1		serializedGroup
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lve;)V	a	handle
		p	1		listener
	m	(Lss;)Ladc;	b	lambda$new$0
		p	0		buf
	f	Ljava/util/Map;	a	tags
c	zm	net/minecraft/network/protocol/game/DebugEntityNameGenerator
	m	(Lapo;[Ljava/lang/String;)Ljava/lang/String;	a	getRandomString
		p	0		random
		p	1		options
	m	(Lbfh;)Ljava/lang/String;	a	getEntityName
		p	0		entity
	m	(Ljava/util/UUID;)Ljava/lang/String;	a	getEntityName
		p	0		uuid
	m	(Ljava/util/UUID;)Lapo;	b	getRandom
		p	0		uuid
	f	[Ljava/lang/String;	a	NAMES_FIRST_PART
	f	[Ljava/lang/String;	b	NAMES_SECOND_PART
c	zn	net/minecraft/network/protocol/game/DebugPackets
	m	(Ladc;)Ljava/lang/String;	a	lambda$sendPoiAddedPacket$2
	m	(Laip;)V	a	sendGameTestClearPacket
		p	0		world
	m	(Laip;Lbqy;)V	a	lambda$sendPoiPacketsForChunk$1
		p	0		world
		p	1		poi
	m	(Laip;Lclp;)V	a	sendPoiPacketsForChunk
		p	0		world
		p	1		pos
	m	(Laip;Lgt;)V	a	sendPoiAddedPacket
		p	0		world
		p	1		pos
	m	(Laip;Lgt;Ljava/lang/String;II)V	a	sendGameTestAddMarker
		p	0		world
		p	1		pos
		p	2		message
		p	3		color
		p	4		duration
	m	(Laip;Ljava/lang/Object;)Ljava/lang/String;	a	getShortDescription
		p	0		world
		p	1		object
	m	(Laip;Ljava/util/Collection;)V	a	sendRaids
		p	0		server
		p	1		raids
	m	(Laip;Lss;Ladd;)V	a	sendPacketToAllPlayers
		p	0		world
		p	1		buf
		p	2		channel
	m	(Lbfx;)V	a	sendEntityBrain
		p	0		living
	m	(Lbfx;J)Ljava/util/List;	a	getMemoryDescriptions
		p	0		entity
		p	1		currentTime
	m	(Lbfx;Lss;)V	a	writeBrain
		p	0		entity
		p	1		buf
	m	(Lbrk;)V	a	sendBeeInfo
		p	0		bee
	m	(Lcmi;Lbfz;Lbmu;)V	a	sendGoalSelector
		p	0		world
		p	1		mob
		p	2		goalSelector
	m	(Lcmi;Lbfz;Ldwz;F)V	a	sendPathFindingPacket
		p	0		world
		p	1		mob
		p	2		path
		p	3		nodeReachProximity
	m	(Lcmi;Ldga;Lede;)V	a	sendGameEventInfo
		p	0		world
		p	1		event
		p	2		pos
	m	(Lcmi;Ldgc;)V	a	sendGameEventListenerInfo
		p	0		world
		p	1		eventListener
	m	(Lcmi;Lgt;)V	a	sendNeighborsUpdatePacket
		p	0		world
		p	1		pos
	m	(Lcmi;Lgt;Ldbq;Lczb;)V	a	sendHiveInfo
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Lcnb;Ldrx;)V	a	sendStructurePacket
		p	0		world
		p	1		structureStart
	m	(Lhd;)Z	a	lambda$sendPoiPacketsForChunk$0
	m	(Ljava/util/List;Ljava/lang/String;Lbow;Ljava/lang/Integer;)V	a	lambda$writeBrain$9
		p	2		type
		p	3		value
	m	(Ljava/util/List;Ljava/util/UUID;Lit/unimi/dsi/fastutil/objects/Object2IntMap;)V	a	lambda$writeBrain$10
		p	1		uuid
		p	2		gossips
	m	(Lss;Lboh;)V	a	lambda$sendGoalSelector$3
		p	0		buf
		p	1		goal
	m	(Lss;Lbzt;)V	a	lambda$sendRaids$4
		p	0		buf
		p	1		raid
	m	(Lss;Lbzx;)V	a	lambda$writeBrain$7
		p	0		buf2
		p	1		activity
	m	(Lss;Ldwz;)V	a	lambda$writeBrain$6
		p	0		buf2
		p	1		path
	m	(Lss;Ljava/lang/String;)V	a	lambda$writeBrain$8
		p	0		buf2
		p	1		memory
	m	(Laip;Lgt;)V	b	sendPoiRemovedPacket
		p	0		world
		p	1		pos
	m	(Lss;Ldwz;)V	b	lambda$sendBeeInfo$5
	m	(Laip;Lgt;)V	c	sendPoiTicketCountPacket
		p	0		world
		p	1		pos
	m	(Laip;Lgt;)V	d	sendVillageSectionsPacket
		p	0		world
		p	1		pos
	f	Lorg/slf4j/Logger;	a	LOGGER
c	zo	net/minecraft/network/protocol/game/ServerGamePacketListener
	m	(Laaa;)V	a	handleContainerButtonClick
		p	1		packet
	m	(Laab;)V	a	handleContainerClick
		p	1		packet
	m	(Laac;)V	a	handleContainerClose
		p	1		packet
	m	(Laad;)V	a	handleCustomPayload
		p	1		packet
	m	(Laae;)V	a	handleEditBook
		p	1		packet
	m	(Laaf;)V	a	handleEntityTagQuery
		p	1		packet
	m	(Laag;)V	a	handleInteract
		p	1		packet
	m	(Laah;)V	a	handleJigsawGenerate
		p	1		packet
	m	(Laai;)V	a	handleKeepAlive
		p	1		packet
	m	(Laaj;)V	a	handleLockDifficulty
		p	1		packet
	m	(Laak;)V	a	handleMovePlayer
		p	1		packet
	m	(Laal;)V	a	handleMoveVehicle
		p	1		packet
	m	(Laam;)V	a	handlePaddleBoat
		p	1		packet
	m	(Laan;)V	a	handlePickItem
		p	1		packet
	m	(Laao;)V	a	handlePlaceRecipe
		p	1		packet
	m	(Laap;)V	a	handlePlayerAbilities
		p	1		packet
	m	(Laaq;)V	a	handlePlayerAction
		p	1		packet
	m	(Laar;)V	a	handlePlayerCommand
		p	1		packet
	m	(Laas;)V	a	handlePlayerInput
		p	1		packet
	m	(Laat;)V	a	handlePong
		p	1		packet
	m	(Laau;)V	a	handleRecipeBookChangeSettingsPacket
		p	1		packet
	m	(Laav;)V	a	handleRecipeBookSeenRecipePacket
		p	1		packet
	m	(Laaw;)V	a	handleRenameItem
		p	1		packet
	m	(Laax;)V	a	handleResourcePackResponse
		p	1		packet
	m	(Laay;)V	a	handleSeenAdvancements
		p	1		packet
	m	(Laaz;)V	a	handleSelectTrade
		p	1		packet
	m	(Laba;)V	a	handleSetBeaconPacket
		p	1		packet
	m	(Labb;)V	a	handleSetCarriedItem
		p	1		packet
	m	(Labc;)V	a	handleSetCommandBlock
		p	1		packet
	m	(Labd;)V	a	handleSetCommandMinecart
		p	1		packet
	m	(Labe;)V	a	handleSetCreativeModeSlot
		p	1		packet
	m	(Labf;)V	a	handleSetJigsawBlock
		p	1		packet
	m	(Labg;)V	a	handleSetStructureBlock
		p	1		packet
	m	(Labh;)V	a	handleSignUpdate
		p	1		packet
	m	(Labi;)V	a	handleAnimate
		p	1		packet
	m	(Labj;)V	a	handleTeleportToEntityPacket
		p	1		packet
	m	(Labk;)V	a	handleUseItemOn
		p	1		packet
	m	(Labl;)V	a	handleUseItem
		p	1		packet
	m	(Lzq;)V	a	handleAcceptTeleportPacket
		p	1		packet
	m	(Lzr;)V	a	handleBlockEntityTagQuery
		p	1		packet
	m	(Lzs;)V	a	handleChangeDifficulty
		p	1		packet
	m	(Lzt;)V	a	handleChatAck
		p	1		packet
	m	(Lzu;)V	a	handleChatCommand
		p	1		packet
	m	(Lzv;)V	a	handleChat
		p	1		packet
	m	(Lzw;)V	a	handleChatSessionUpdate
		p	1		packet
	m	(Lzx;)V	a	handleClientCommand
		p	1		packet
	m	(Lzy;)V	a	handleClientInformation
		p	1		packet
	m	(Lzz;)V	a	handleCustomCommandSuggestions
		p	1		packet
c	zp	net/minecraft/network/protocol/game/ServerPacketListener
	m	()Z	b	shouldPropagateHandlingExceptions
c	zq	net/minecraft/network/protocol/game/ServerboundAcceptTeleportationPacket
	m	(I)V	<init>	<init>
		p	1		teleportId
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()I	a	getId
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lzo;)V	a	handle
		p	1		listener
	f	I	a	id
c	zr	net/minecraft/network/protocol/game/ServerboundBlockEntityTagQuery
	m	(ILgt;)V	<init>	<init>
		p	1		transactionId
		p	2		pos
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()I	a	getTransactionId
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lzo;)V	a	handle
		p	1		listener
	m	()Lgt;	c	getPos
	f	I	a	transactionId
	f	Lgt;	b	pos
c	zs	net/minecraft/network/protocol/game/ServerboundChangeDifficultyPacket
	m	(Lbdv;)V	<init>	<init>
		p	1		difficulty
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()Lbdv;	a	getDifficulty
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lzo;)V	a	handle
		p	1		listener
	f	Lbdv;	a	difficulty
c	zt	net/minecraft/network/protocol/game/ServerboundChatAckPacket
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()I	a	offset
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lzo;)V	a	handle
		p	1		listener
	f	I	a	offset
c	zu	net/minecraft/network/protocol/game/ServerboundChatCommandPacket
	m	(Ljava/lang/String;Ljava/time/Instant;JLdv;Ltp$b;)V	<init>	<init>
		p	2		timestamp
		p	3		salt
		p	5		argumentSignatures
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()Ljava/lang/String;	a	command
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lzo;)V	a	handle
		p	1		listener
	m	()Ljava/time/Instant;	c	timeStamp
	m	()J	d	salt
	m	()Ldv;	e	argumentSignatures
	m	()Ltp$b;	f	lastSeenMessages
	f	Ljava/lang/String;	a	command
	f	Ljava/time/Instant;	b	timeStamp
	f	J	c	salt
	f	Ldv;	d	argumentSignatures
	f	Ltp$b;	e	lastSeenMessages
c	zv	net/minecraft/network/protocol/game/ServerboundChatPacket
	m	(Ljava/lang/String;Ljava/time/Instant;JLtu;Ltp$b;)V	<init>	<init>
		p	2		timestamp
		p	3		salt
		p	5		signature
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()Ljava/lang/String;	a	message
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lzo;)V	a	handle
		p	1		listener
	m	()Ljava/time/Instant;	c	timeStamp
	m	()J	d	salt
	m	()Ltu;	e	signature
	m	()Ltp$b;	f	lastSeenMessages
	f	Ljava/lang/String;	a	message
	f	Ljava/time/Instant;	b	timeStamp
	f	J	c	salt
	f	Ltu;	d	signature
	f	Ltp$b;	e	lastSeenMessages
c	zw	net/minecraft/network/protocol/game/ServerboundChatSessionUpdatePacket
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()Ltz$a;	a	chatSession
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lzo;)V	a	handle
		p	1		listener
	f	Ltz$a;	a	chatSession
c	zx	net/minecraft/network/protocol/game/ServerboundClientCommandPacket
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	(Lzx$a;)V	<init>	<init>
		p	1		mode
	m	()Lzx$a;	a	getAction
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lzo;)V	a	handle
		p	1		listener
	f	Lzx$a;	a	action
c	zx$a	net/minecraft/network/protocol/game/ServerboundClientCommandPacket$Action
	m	()[Lzx$a;	a	$values
	f	Lzx$a;	a	PERFORM_RESPAWN
	f	Lzx$a;	b	REQUEST_STATS
	f	[Lzx$a;	c	$VALUES
c	zy	net/minecraft/network/protocol/game/ServerboundClientInformationPacket
	m	(Ljava/lang/String;ILbyk;ZILbfr;ZZ)V	<init>	<init>
		p	1		language
		p	2		viewDistance
		p	3		chatVisibility
		p	4		chatColors
		p	5		modelBitMask
		p	6		mainArm
		p	7		filterText
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()Ljava/lang/String;	a	language
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lzo;)V	a	handle
		p	1		listener
	m	()I	c	viewDistance
	m	()Lbyk;	d	chatVisibility
	m	()Z	e	chatColors
	m	()I	f	modelCustomisation
	m	()Lbfr;	g	mainHand
	m	()Z	h	textFilteringEnabled
	m	()Z	i	allowsListing
	f	I	a	MAX_LANGUAGE_LENGTH
	f	Ljava/lang/String;	b	language
	f	I	c	viewDistance
	f	Lbyk;	d	chatVisibility
	f	Z	e	chatColors
	f	I	f	modelCustomisation
	f	Lbfr;	g	mainHand
	f	Z	h	textFilteringEnabled
	f	Z	i	allowsListing
c	zz	net/minecraft/network/protocol/game/ServerboundCommandSuggestionPacket
	m	(ILjava/lang/String;)V	<init>	<init>
		p	1		completionId
		p	2		partialCommand
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()I	a	getId
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lzo;)V	a	handle
		p	1		listener
	m	()Ljava/lang/String;	c	getCommand
	f	I	a	id
	f	Ljava/lang/String;	b	command
c	aaa	net/minecraft/network/protocol/game/ServerboundContainerButtonClickPacket
	m	(II)V	<init>	<init>
		p	1		syncId
		p	2		buttonId
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()I	a	getContainerId
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lzo;)V	a	handle
		p	1		listener
	m	()I	c	getButtonId
	f	I	a	containerId
	f	I	b	buttonId
c	aab	net/minecraft/network/protocol/game/ServerboundContainerClickPacket
	m	(IIIILcbm;Lcfv;Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;)V	<init>	<init>
		p	1		syncId
		p	2		revision
		p	3		slot
		p	4		button
		p	5		actionType
		p	6		stack
		p	7		modifiedStacks
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()I	a	getContainerId
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lzo;)V	a	handle
		p	1		listener
	m	(Lss;)Ljava/lang/Integer;	b	lambda$new$0
		p	0		buf
	m	()I	c	getSlotNum
	m	()I	d	getButtonNum
	m	()Lcfv;	e	getCarriedItem
	m	()Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	f	getChangedSlots
	m	()Lcbm;	g	getClickType
	m	()I	h	getStateId
	f	I	a	MAX_SLOT_COUNT
	f	I	b	containerId
	f	I	c	stateId
	f	I	d	slotNum
	f	I	e	buttonNum
	f	Lcbm;	f	clickType
	f	Lcfv;	g	carriedItem
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	h	changedSlots
c	aac	net/minecraft/network/protocol/game/ServerboundContainerClosePacket
	m	(I)V	<init>	<init>
		p	1		syncId
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()I	a	getContainerId
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lzo;)V	a	handle
		p	1		listener
	f	I	a	containerId
c	aad	net/minecraft/network/protocol/game/ServerboundCustomPayloadPacket
	m	(Ladd;Lss;)V	<init>	<init>
		p	1		channel
		p	2		data
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()Ladd;	a	getIdentifier
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lzo;)V	a	handle
		p	1		listener
	m	()Lss;	c	getData
	f	Ladd;	a	BRAND
	f	I	b	MAX_PAYLOAD_SIZE
	f	Ladd;	c	identifier
	f	Lss;	d	data
c	aae	net/minecraft/network/protocol/game/ServerboundEditBookPacket
	m	(ILjava/util/List;Ljava/util/Optional;)V	<init>	<init>
		p	1		slot
		p	2		pages
		p	3		title
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()Ljava/util/List;	a	getPages
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lss;Ljava/lang/String;)V	a	lambda$write$3
		p	0		buf2
		p	1		title
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lzo;)V	a	handle
		p	1		listener
	m	(Lss;)Ljava/lang/String;	b	lambda$new$1
		p	0		buf2
	m	(Lss;Ljava/lang/String;)V	b	lambda$write$2
		p	0		buf2
		p	1		page
	m	()Ljava/util/Optional;	c	getTitle
	m	(Lss;)Ljava/lang/String;	c	lambda$new$0
		p	0		buf2
	m	()I	d	getSlot
	f	I	a	MAX_BYTES_PER_CHAR
	f	I	b	TITLE_MAX_CHARS
	f	I	c	PAGE_MAX_CHARS
	f	I	d	MAX_PAGES_COUNT
	f	I	e	slot
	f	Ljava/util/List;	f	pages
	f	Ljava/util/Optional;	g	title
c	aaf	net/minecraft/network/protocol/game/ServerboundEntityTagQuery
	m	(II)V	<init>	<init>
		p	1		transactionId
		p	2		entityId
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()I	a	getTransactionId
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lzo;)V	a	handle
		p	1		listener
	m	()I	c	getEntityId
	f	I	a	transactionId
	f	I	b	entityId
c	aag	net/minecraft/network/protocol/game/ServerboundInteractPacket
	m	(IZLaag$a;)V	<init>	<init>
		p	1		entityId
		p	2		playerSneaking
		p	3		type
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()Z	a	isUsingSecondaryAction
	m	(Laag$c;)V	a	dispatch
		p	1		handler
	m	(Laip;)Lbfh;	a	getTarget
		p	1		world
	m	(Lbfh;Z)Laag;	a	createAttackPacket
		p	0		entity
		p	1		playerSneaking
	m	(Lbfh;ZLbdx;)Laag;	a	createInteractionPacket
		p	0		entity
		p	1		playerSneaking
		p	2		hand
	m	(Lbfh;ZLbdx;Lede;)Laag;	a	createInteractionPacket
		p	0		entity
		p	1		playerSneaking
		p	2		hand
		p	3		pos
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lzo;)V	a	handle
		p	1		listener
	f	I	a	entityId
	f	Laag$a;	b	action
	f	Z	c	usingSecondaryAction
	f	Laag$a;	d	ATTACK_ACTION
c	aag$1	net/minecraft/network/protocol/game/ServerboundInteractPacket$1
	m	()Laag$b;	a	getType
	m	(Laag$c;)V	a	dispatch
		p	1		handler
	m	(Lss;)V	a	write
		p	1		buf
c	aag$a	net/minecraft/network/protocol/game/ServerboundInteractPacket$Action
	m	()Laag$b;	a	getType
	m	(Laag$c;)V	a	dispatch
		p	1		handler
	m	(Lss;)V	a	write
		p	1		buf
c	aag$b	net/minecraft/network/protocol/game/ServerboundInteractPacket$ActionType
	m	(Ljava/lang/String;ILjava/util/function/Function;)V	<init>	<init>
		p	3		handlerGetter
	m	()[Laag$b;	a	$values
	m	(Lss;)Laag$a;	a	lambda$static$0
		p	0		buf
	f	Laag$b;	a	INTERACT
	f	Laag$b;	b	ATTACK
	f	Laag$b;	c	INTERACT_AT
	f	Ljava/util/function/Function;	d	reader
	f	[Laag$b;	e	$VALUES
c	aag$c	net/minecraft/network/protocol/game/ServerboundInteractPacket$Handler
	m	()V	a	onAttack
	m	(Lbdx;)V	a	onInteraction
		p	1		hand
	m	(Lbdx;Lede;)V	a	onInteraction
		p	1		hand
		p	2		pos
c	aag$d	net/minecraft/network/protocol/game/ServerboundInteractPacket$InteractionAction
	m	(Lbdx;)V	<init>	<init>
		p	1		hand
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()Laag$b;	a	getType
	m	(Laag$c;)V	a	dispatch
		p	1		handler
	m	(Lss;)V	a	write
		p	1		buf
	f	Lbdx;	a	hand
c	aag$e	net/minecraft/network/protocol/game/ServerboundInteractPacket$InteractionAtLocationAction
	m	(Lbdx;Lede;)V	<init>	<init>
		p	1		hand
		p	2		pos
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()Laag$b;	a	getType
	m	(Laag$c;)V	a	dispatch
		p	1		handler
	m	(Lss;)V	a	write
		p	1		buf
	f	Lbdx;	a	hand
	f	Lede;	b	location
c	aah	net/minecraft/network/protocol/game/ServerboundJigsawGeneratePacket
	m	(Lgt;IZ)V	<init>	<init>
		p	1		pos
		p	2		maxDepth
		p	3		keepJigsaws
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()Lgt;	a	getPos
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lzo;)V	a	handle
		p	1		listener
	m	()I	c	levels
	m	()Z	d	keepJigsaws
	f	Lgt;	a	pos
	f	I	b	levels
	f	Z	c	keepJigsaws
c	aai	net/minecraft/network/protocol/game/ServerboundKeepAlivePacket
	m	(J)V	<init>	<init>
		p	1		id
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()J	a	getId
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lzo;)V	a	handle
		p	1		listener
	f	J	a	id
c	aaj	net/minecraft/network/protocol/game/ServerboundLockDifficultyPacket
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	(Z)V	<init>	<init>
		p	1		difficultyLocked
	m	()Z	a	isLocked
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lzo;)V	a	handle
		p	1		listener
	f	Z	a	locked
c	aak	net/minecraft/network/protocol/game/ServerboundMovePlayerPacket
	m	(DDDFFZZZ)V	<init>	<init>
		p	1		x
		p	3		y
		p	5		z
		p	7		yaw
		p	8		pitch
		p	9		onGround
		p	10		changePosition
		p	11		changeLook
	m	()Z	a	isOnGround
	m	(D)D	a	getX
		p	1		currentX
	m	(F)F	a	getYRot
		p	1		currentYaw
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lzo;)V	a	handle
		p	1		listener
	m	(D)D	b	getY
		p	1		currentY
	m	(F)F	b	getXRot
		p	1		currentPitch
	m	()Z	c	hasPosition
	m	(D)D	c	getZ
		p	1		currentZ
	m	()Z	d	hasRotation
	f	D	a	x
	f	D	b	y
	f	D	c	z
	f	F	d	yRot
	f	F	e	xRot
	f	Z	f	onGround
	f	Z	g	hasPos
	f	Z	h	hasRot
c	aak$a	net/minecraft/network/protocol/game/ServerboundMovePlayerPacket$Pos
	m	(DDDZ)V	<init>	<init>
		p	1		x
		p	3		y
		p	5		z
		p	7		onGround
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lss;)Laak$a;	b	read
		p	0		buf
c	aak$b	net/minecraft/network/protocol/game/ServerboundMovePlayerPacket$PosRot
	m	(DDDFFZ)V	<init>	<init>
		p	1		x
		p	3		y
		p	5		z
		p	7		yaw
		p	8		pitch
		p	9		onGround
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lss;)Laak$b;	b	read
		p	0		buf
c	aak$c	net/minecraft/network/protocol/game/ServerboundMovePlayerPacket$Rot
	m	(FFZ)V	<init>	<init>
		p	1		yaw
		p	2		pitch
		p	3		onGround
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lss;)Laak$c;	b	read
		p	0		buf
c	aak$d	net/minecraft/network/protocol/game/ServerboundMovePlayerPacket$StatusOnly
	m	(Z)V	<init>	<init>
		p	1		onGround
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lss;)Laak$d;	b	read
		p	0		buf
c	aal	net/minecraft/network/protocol/game/ServerboundMoveVehiclePacket
	m	(Lbfh;)V	<init>	<init>
		p	1		entity
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()D	a	getX
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lzo;)V	a	handle
		p	1		listener
	m	()D	c	getY
	m	()D	d	getZ
	m	()F	e	getYRot
	m	()F	f	getXRot
	f	D	a	x
	f	D	b	y
	f	D	c	z
	f	F	d	yRot
	f	F	e	xRot
c	aam	net/minecraft/network/protocol/game/ServerboundPaddleBoatPacket
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	(ZZ)V	<init>	<init>
		p	1		leftPaddling
		p	2		rightPaddling
	m	()Z	a	getLeft
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lzo;)V	a	handle
		p	1		listener
	m	()Z	c	getRight
	f	Z	a	left
	f	Z	b	right
c	aan	net/minecraft/network/protocol/game/ServerboundPickItemPacket
	m	(I)V	<init>	<init>
		p	1		slot
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()I	a	getSlot
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lzo;)V	a	handle
		p	1		listener
	f	I	a	slot
c	aao	net/minecraft/network/protocol/game/ServerboundPlaceRecipePacket
	m	(ILciy;Z)V	<init>	<init>
		p	1		syncId
		p	2		recipe
		p	3		craftAll
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()I	a	getContainerId
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lzo;)V	a	handle
		p	1		listener
	m	()Ladd;	c	getRecipe
	m	()Z	d	isShiftDown
	f	I	a	containerId
	f	Ladd;	b	recipe
	f	Z	c	shiftDown
c	aap	net/minecraft/network/protocol/game/ServerboundPlayerAbilitiesPacket
	m	(Lbyj;)V	<init>	<init>
		p	1		abilities
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()Z	a	isFlying
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lzo;)V	a	handle
		p	1		listener
	f	I	a	FLAG_FLYING
	f	Z	b	isFlying
c	aaq	net/minecraft/network/protocol/game/ServerboundPlayerActionPacket
	m	(Laaq$a;Lgt;Lgz;)V	<init>	<init>
		p	1		action
		p	2		pos
		p	3		direction
	m	(Laaq$a;Lgt;Lgz;I)V	<init>	<init>
		p	1		action
		p	2		pos
		p	3		direction
		p	4		sequence
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()Lgt;	a	getPos
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lzo;)V	a	handle
		p	1		listener
	m	()Lgz;	c	getDirection
	m	()Laaq$a;	d	getAction
	m	()I	e	getSequence
	f	Lgt;	a	pos
	f	Lgz;	b	direction
	f	Laaq$a;	c	action
	f	I	d	sequence
c	aaq$a	net/minecraft/network/protocol/game/ServerboundPlayerActionPacket$Action
	m	()[Laaq$a;	a	$values
	f	Laaq$a;	a	START_DESTROY_BLOCK
	f	Laaq$a;	b	ABORT_DESTROY_BLOCK
	f	Laaq$a;	c	STOP_DESTROY_BLOCK
	f	Laaq$a;	d	DROP_ALL_ITEMS
	f	Laaq$a;	e	DROP_ITEM
	f	Laaq$a;	f	RELEASE_USE_ITEM
	f	Laaq$a;	g	SWAP_ITEM_WITH_OFFHAND
	f	[Laaq$a;	h	$VALUES
c	aar	net/minecraft/network/protocol/game/ServerboundPlayerCommandPacket
	m	(Lbfh;Laar$a;)V	<init>	<init>
		p	1		entity
		p	2		mode
	m	(Lbfh;Laar$a;I)V	<init>	<init>
		p	1		entity
		p	2		mode
		p	3		mountJumpHeight
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()I	a	getId
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lzo;)V	a	handle
		p	1		listener
	m	()Laar$a;	c	getAction
	m	()I	d	getData
	f	I	a	id
	f	Laar$a;	b	action
	f	I	c	data
c	aar$a	net/minecraft/network/protocol/game/ServerboundPlayerCommandPacket$Action
	m	()[Laar$a;	a	$values
	f	Laar$a;	a	PRESS_SHIFT_KEY
	f	Laar$a;	b	RELEASE_SHIFT_KEY
	f	Laar$a;	c	STOP_SLEEPING
	f	Laar$a;	d	START_SPRINTING
	f	Laar$a;	e	STOP_SPRINTING
	f	Laar$a;	f	START_RIDING_JUMP
	f	Laar$a;	g	STOP_RIDING_JUMP
	f	Laar$a;	h	OPEN_INVENTORY
	f	Laar$a;	i	START_FALL_FLYING
	f	[Laar$a;	j	$VALUES
c	aas	net/minecraft/network/protocol/game/ServerboundPlayerInputPacket
	m	(FFZZ)V	<init>	<init>
		p	1		sideways
		p	2		forward
		p	3		jumping
		p	4		sneaking
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()F	a	getXxa
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lzo;)V	a	handle
		p	1		listener
	m	()F	c	getZza
	m	()Z	d	isJumping
	m	()Z	e	isShiftKeyDown
	f	I	a	FLAG_JUMPING
	f	I	b	FLAG_SHIFT_KEY_DOWN
	f	F	c	xxa
	f	F	d	zza
	f	Z	e	isJumping
	f	Z	f	isShiftKeyDown
c	aat	net/minecraft/network/protocol/game/ServerboundPongPacket
	m	(I)V	<init>	<init>
		p	1		parameter
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()I	a	getId
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lzo;)V	a	handle
		p	1		listener
	f	I	a	id
c	aau	net/minecraft/network/protocol/game/ServerboundRecipeBookChangeSettingsPacket
	m	(Lccp;ZZ)V	<init>	<init>
		p	1		category
		p	2		guiOpen
		p	3		filteringCraftable
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()Lccp;	a	getBookType
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lzo;)V	a	handle
		p	1		listener
	m	()Z	c	isOpen
	m	()Z	d	isFiltering
	f	Lccp;	a	bookType
	f	Z	b	isOpen
	f	Z	c	isFiltering
c	aav	net/minecraft/network/protocol/game/ServerboundRecipeBookSeenRecipePacket
	m	(Lciy;)V	<init>	<init>
		p	1		recipe
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()Ladd;	a	getRecipe
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lzo;)V	a	handle
		p	1		listener
	f	Ladd;	a	recipe
c	aaw	net/minecraft/network/protocol/game/ServerboundRenameItemPacket
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		name
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()Ljava/lang/String;	a	getName
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lzo;)V	a	handle
		p	1		listener
	f	Ljava/lang/String;	a	name
c	aax	net/minecraft/network/protocol/game/ServerboundResourcePackPacket
	m	(Laax$a;)V	<init>	<init>
		p	1		status
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()Laax$a;	a	getAction
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lzo;)V	a	handle
		p	1		listener
	f	Laax$a;	a	action
c	aax$a	net/minecraft/network/protocol/game/ServerboundResourcePackPacket$Action
	m	()[Laax$a;	a	$values
	f	Laax$a;	a	SUCCESSFULLY_LOADED
	f	Laax$a;	b	DECLINED
	f	Laax$a;	c	FAILED_DOWNLOAD
	f	Laax$a;	d	ACCEPTED
	f	[Laax$a;	e	$VALUES
c	aay	net/minecraft/network/protocol/game/ServerboundSeenAdvancementsPacket
	m	(Laay$a;Ladd;)V	<init>	<init>
		p	1		action
		p	2		tab
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()Laay;	a	closedScreen
	m	(Lae;)Laay;	a	openedTab
		p	0		advancement
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lzo;)V	a	handle
		p	1		listener
	m	()Laay$a;	c	getAction
	m	()Ladd;	d	getTab
	f	Laay$a;	a	action
	f	Ladd;	b	tab
c	aay$a	net/minecraft/network/protocol/game/ServerboundSeenAdvancementsPacket$Action
	m	()[Laay$a;	a	$values
	f	Laay$a;	a	OPENED_TAB
	f	Laay$a;	b	CLOSED_SCREEN
	f	[Laay$a;	c	$VALUES
c	aaz	net/minecraft/network/protocol/game/ServerboundSelectTradePacket
	m	(I)V	<init>	<init>
		p	1		tradeId
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()I	a	getItem
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lzo;)V	a	handle
		p	1		listener
	f	I	a	item
c	aba	net/minecraft/network/protocol/game/ServerboundSetBeaconPacket
	m	(Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
		p	1		primaryEffectId
		p	2		secondaryEffectId
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()Ljava/util/Optional;	a	getPrimary
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lss;Lbew;)V	a	lambda$write$3
		p	0		buf2
		p	1		secondaryEffectId
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lzo;)V	a	handle
		p	1		listener
	m	(Lss;)Lbew;	b	lambda$new$1
		p	0		buf2
	m	(Lss;Lbew;)V	b	lambda$write$2
		p	0		buf2
		p	1		primaryEffectId
	m	()Ljava/util/Optional;	c	getSecondary
	m	(Lss;)Lbew;	c	lambda$new$0
		p	0		buf2
	f	Ljava/util/Optional;	a	primary
	f	Ljava/util/Optional;	b	secondary
c	abb	net/minecraft/network/protocol/game/ServerboundSetCarriedItemPacket
	m	(I)V	<init>	<init>
		p	1		selectedSlot
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()I	a	getSlot
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lzo;)V	a	handle
		p	1		listener
	f	I	a	slot
c	abc	net/minecraft/network/protocol/game/ServerboundSetCommandBlockPacket
	m	(Lgt;Ljava/lang/String;Lczm$a;ZZZ)V	<init>	<init>
		p	1		pos
		p	2		command
		p	3		type
		p	4		trackOutput
		p	5		conditional
		p	6		alwaysActive
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()Lgt;	a	getPos
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lzo;)V	a	handle
		p	1		listener
	m	()Ljava/lang/String;	c	getCommand
	m	()Z	d	isTrackOutput
	m	()Z	e	isConditional
	m	()Z	f	isAutomatic
	m	()Lczm$a;	g	getMode
	f	I	a	FLAG_TRACK_OUTPUT
	f	I	b	FLAG_CONDITIONAL
	f	I	c	FLAG_AUTOMATIC
	f	Lgt;	d	pos
	f	Ljava/lang/String;	e	command
	f	Z	f	trackOutput
	f	Z	g	conditional
	f	Z	h	automatic
	f	Lczm$a;	i	mode
c	abd	net/minecraft/network/protocol/game/ServerboundSetCommandMinecartPacket
	m	(ILjava/lang/String;Z)V	<init>	<init>
		p	1		entityId
		p	2		command
		p	3		trackOutput
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()Ljava/lang/String;	a	getCommand
	m	(Lcmi;)Lclj;	a	getCommandBlock
		p	1		world
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lzo;)V	a	handle
		p	1		listener
	m	()Z	c	isTrackOutput
	f	I	a	entity
	f	Ljava/lang/String;	b	command
	f	Z	c	trackOutput
c	abe	net/minecraft/network/protocol/game/ServerboundSetCreativeModeSlotPacket
	m	(ILcfv;)V	<init>	<init>
		p	1		slot
		p	2		stack
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()I	a	getSlotNum
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lzo;)V	a	handle
		p	1		listener
	m	()Lcfv;	c	getItem
	f	I	a	slotNum
	f	Lcfv;	b	itemStack
c	abf	net/minecraft/network/protocol/game/ServerboundSetJigsawBlockPacket
	m	(Lgt;Ladd;Ladd;Ladd;Ljava/lang/String;Ldab$a;)V	<init>	<init>
		p	1		pos
		p	2		name
		p	3		target
		p	4		pool
		p	5		finalState
		p	6		jointType
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()Lgt;	a	getPos
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lzo;)V	a	handle
		p	1		listener
	m	()Ladd;	c	getName
	m	()Ladd;	d	getTarget
	m	()Ladd;	e	getPool
	m	()Ljava/lang/String;	f	getFinalState
	m	()Ldab$a;	g	getJoint
	f	Lgt;	a	pos
	f	Ladd;	b	name
	f	Ladd;	c	target
	f	Ladd;	d	pool
	f	Ljava/lang/String;	e	finalState
	f	Ldab$a;	f	joint
c	abg	net/minecraft/network/protocol/game/ServerboundSetStructureBlockPacket
	m	(Lgt;Ldao$a;Lddb;Ljava/lang/String;Lgt;Lhy;Lcua;Lcvq;Ljava/lang/String;ZZZFJ)V	<init>	<init>
		p	1		pos
		p	2		action
		p	3		mode
		p	4		templateName
		p	5		offset
		p	6		size
		p	7		mirror
		p	8		rotation
		p	9		metadata
		p	10		ignoreEntities
		p	11		showAir
		p	12		showBoundingBox
		p	13		integrity
		p	14		seed
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()Lgt;	a	getPos
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lzo;)V	a	handle
		p	1		listener
	m	()Ldao$a;	c	getUpdateType
	m	()Lddb;	d	getMode
	m	()Ljava/lang/String;	e	getName
	m	()Lgt;	f	getOffset
	m	()Lhy;	g	getSize
	m	()Lcua;	h	getMirror
	m	()Lcvq;	i	getRotation
	m	()Ljava/lang/String;	j	getData
	m	()Z	k	isIgnoreEntities
	m	()Z	l	isShowAir
	m	()Z	m	isShowBoundingBox
	m	()F	n	getIntegrity
	m	()J	o	getSeed
	f	I	a	FLAG_IGNORE_ENTITIES
	f	I	b	FLAG_SHOW_AIR
	f	I	c	FLAG_SHOW_BOUNDING_BOX
	f	Lgt;	d	pos
	f	Ldao$a;	e	updateType
	f	Lddb;	f	mode
	f	Ljava/lang/String;	g	name
	f	Lgt;	h	offset
	f	Lhy;	i	size
	f	Lcua;	j	mirror
	f	Lcvq;	k	rotation
	f	Ljava/lang/String;	l	data
	f	Z	m	ignoreEntities
	f	Z	n	showAir
	f	Z	o	showBoundingBox
	f	F	p	integrity
	f	J	q	seed
c	abh	net/minecraft/network/protocol/game/ServerboundSignUpdatePacket
	m	(Lgt;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V	<init>	<init>
		p	1		pos
		p	2		line1
		p	3		line2
		p	4		line3
		p	5		line4
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()Lgt;	a	getPos
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lzo;)V	a	handle
		p	1		listener
	m	()[Ljava/lang/String;	c	getLines
	f	I	a	MAX_STRING_LENGTH
	f	Lgt;	b	pos
	f	[Ljava/lang/String;	c	lines
c	abi	net/minecraft/network/protocol/game/ServerboundSwingPacket
	m	(Lbdx;)V	<init>	<init>
		p	1		hand
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()Lbdx;	a	getHand
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lzo;)V	a	handle
		p	1		listener
	f	Lbdx;	a	hand
c	abj	net/minecraft/network/protocol/game/ServerboundTeleportToEntityPacket
	m	(Ljava/util/UUID;)V	<init>	<init>
		p	1		targetUuid
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	(Laip;)Lbfh;	a	getEntity
		p	1		world
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lzo;)V	a	handle
		p	1		listener
	f	Ljava/util/UUID;	a	uuid
c	abk	net/minecraft/network/protocol/game/ServerboundUseItemOnPacket
	m	(Lbdx;Leda;I)V	<init>	<init>
		p	1		hand
		p	2		blockHitResult
		p	3		sequence
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()Lbdx;	a	getHand
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lzo;)V	a	handle
		p	1		listener
	m	()Leda;	c	getHitResult
	m	()I	d	getSequence
	f	Leda;	a	blockHit
	f	Lbdx;	b	hand
	f	I	c	sequence
c	abl	net/minecraft/network/protocol/game/ServerboundUseItemPacket
	m	(Lbdx;I)V	<init>	<init>
		p	1		hand
		p	2		sequence
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()Lbdx;	a	getHand
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lzo;)V	a	handle
		p	1		listener
	m	()I	c	getSequence
	f	Lbdx;	a	hand
	f	I	b	sequence
c	abm	net/minecraft/network/protocol/game/VecDeltaCodec
	m	(D)J	a	encode
		p	0		value
	m	(J)D	a	decode
		p	0		value
	m	(JJJ)Lede;	a	decode
		p	1		x
		p	3		y
		p	5		z
	m	(Lede;)J	a	encodeX
		p	1		pos
	m	(Lede;)J	b	encodeY
		p	1		pos
	m	(Lede;)J	c	encodeZ
		p	1		pos
	m	(Lede;)Lede;	d	delta
		p	1		pos
	m	(Lede;)V	e	setBase
		p	1		pos
	f	D	a	TRUNCATION_STEPS
	f	Lede;	b	base
c	abn	net/minecraft/network/protocol/game/package-info
c	abo	net/minecraft/network/protocol/handshake/ClientIntentionPacket
	m	(Ljava/lang/String;ILsr;)V	<init>	<init>
		p	1		address
		p	2		port
		p	3		intendedState
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()Lsr;	a	getIntention
	m	(Labp;)V	a	handle
		p	1		listener
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	()I	c	getProtocolVersion
	m	()Ljava/lang/String;	d	getHostName
	m	()I	e	getPort
	f	I	a	MAX_HOST_LENGTH
	f	I	b	protocolVersion
	f	Ljava/lang/String;	c	hostName
	f	I	d	port
	f	Lsr;	e	intention
c	abp	net/minecraft/network/protocol/handshake/ServerHandshakePacketListener
	m	(Labo;)V	a	handleIntention
		p	1		packet
c	abq	net/minecraft/network/protocol/handshake/package-info
c	abr	net/minecraft/network/protocol/login/ClientLoginPacketListener
	m	(Labs;)V	a	handleCustomQuery
		p	1		packet
	m	(Labt;)V	a	handleGameProfile
		p	1		packet
	m	(Labu;)V	a	handleHello
		p	1		packet
	m	(Labv;)V	a	handleCompression
		p	1		packet
	m	(Labw;)V	a	handleDisconnect
		p	1		packet
c	abs	net/minecraft/network/protocol/login/ClientboundCustomQueryPacket
	m	(ILadd;Lss;)V	<init>	<init>
		p	1		queryId
		p	2		channel
		p	3		payload
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()I	a	getTransactionId
	m	(Labr;)V	a	handle
		p	1		listener
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	()Ladd;	c	getIdentifier
	m	()Lss;	d	getData
	f	I	a	MAX_PAYLOAD_SIZE
	f	I	b	transactionId
	f	Ladd;	c	identifier
	f	Lss;	d	data
c	abt	net/minecraft/network/protocol/login/ClientboundGameProfilePacket
	m	(Lcom/mojang/authlib/GameProfile;)V	<init>	<init>
		p	1		profile
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()Lcom/mojang/authlib/GameProfile;	a	getGameProfile
	m	(Labr;)V	a	handle
		p	1		listener
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	f	Lcom/mojang/authlib/GameProfile;	a	gameProfile
c	abu	net/minecraft/network/protocol/login/ClientboundHelloPacket
	m	(Ljava/lang/String;[B[B)V	<init>	<init>
		p	1		serverId
		p	2		publicKey
		p	3		nonce
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()Ljava/lang/String;	a	getServerId
	m	(Labr;)V	a	handle
		p	1		listener
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	()Ljava/security/PublicKey;	c	getPublicKey
	m	()[B	d	getChallenge
	f	Ljava/lang/String;	a	serverId
	f	[B	b	publicKey
	f	[B	c	challenge
c	abv	net/minecraft/network/protocol/login/ClientboundLoginCompressionPacket
	m	(I)V	<init>	<init>
		p	1		compressionThreshold
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()I	a	getCompressionThreshold
	m	(Labr;)V	a	handle
		p	1		listener
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	f	I	a	compressionThreshold
c	abw	net/minecraft/network/protocol/login/ClientboundLoginDisconnectPacket
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	(Ltj;)V	<init>	<init>
		p	1		reason
	m	()Ltj;	a	getReason
	m	(Labr;)V	a	handle
		p	1		listener
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	f	Ltj;	a	reason
c	abx	net/minecraft/network/protocol/login/ServerLoginPacketListener
	m	(Laby;)V	a	handleCustomQueryPacket
		p	1		packet
	m	(Labz;)V	a	handleHello
		p	1		packet
	m	(Laca;)V	a	handleKey
		p	1		packet
c	aby	net/minecraft/network/protocol/login/ServerboundCustomQueryPacket
	m	(ILss;)V	<init>	<init>
		p	1		queryId
		p	2		response
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()I	a	getTransactionId
	m	(Labx;)V	a	handle
		p	1		listener
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lss;Lss;)V	a	lambda$write$1
		p	0		buf2
		p	1		response
	m	(Lsx;)V	a	handle
		p	1		listener
	m	(Lss;)Lss;	b	lambda$new$0
		p	0		buf2
	m	()Lss;	c	getData
	f	I	a	MAX_PAYLOAD_SIZE
	f	I	b	transactionId
	f	Lss;	c	data
c	abz	net/minecraft/network/protocol/login/ServerboundHelloPacket
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()Ljava/lang/String;	a	name
	m	(Labx;)V	a	handle
		p	1		listener
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	()Ljava/util/Optional;	c	profileId
	f	Ljava/lang/String;	a	name
	f	Ljava/util/Optional;	b	profileId
c	aca	net/minecraft/network/protocol/login/ServerboundKeyPacket
	m	(Ljavax/crypto/SecretKey;Ljava/security/PublicKey;[B)V	<init>	<init>
		p	1		secretKey
		p	2		publicKey
		p	3		nonce
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	(Labx;)V	a	handle
		p	1		listener
	m	(Ljava/security/PrivateKey;)Ljavax/crypto/SecretKey;	a	getSecretKey
		p	1		privateKey
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	m	([BLjava/security/PrivateKey;)Z	a	isChallengeValid
		p	1		nonce
		p	2		privateKey
	f	[B	a	keybytes
	f	[B	b	encryptedChallenge
c	acb	net/minecraft/network/protocol/login/package-info
c	acc	net/minecraft/network/protocol/package-info
c	acd	net/minecraft/network/protocol/status/ClientStatusPacketListener
	m	(Lace;)V	a	handlePongResponse
		p	1		packet
	m	(Lacf;)V	a	handleStatusResponse
		p	1		packet
c	ace	net/minecraft/network/protocol/status/ClientboundPongResponsePacket
	m	(J)V	<init>	<init>
		p	1		startTime
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()J	a	getTime
	m	(Lacd;)V	a	handle
		p	1		listener
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	f	J	a	time
c	acf	net/minecraft/network/protocol/status/ClientboundStatusResponsePacket
	m	(Lacg;)V	<init>	<init>
		p	1		metadata
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()Lacg;	a	status
	m	(Lacd;)V	a	handle
		p	1		listener
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	f	Lacg;	a	status
c	acg	net/minecraft/network/protocol/status/ServerStatus
	m	()Ltj;	a	description
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Ljava/util/Optional;	b	players
	m	()Ljava/util/Optional;	c	version
	m	()Ljava/util/Optional;	d	favicon
	m	()Z	e	enforcesSecureChat
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ltj;	b	description
	f	Ljava/util/Optional;	c	players
	f	Ljava/util/Optional;	d	version
	f	Ljava/util/Optional;	e	favicon
	f	Z	f	enforcesSecureChat
c	acg$a	net/minecraft/network/protocol/status/ServerStatus$Favicon
	m	()[B	a	iconBytes
	m	(Lacg$a;)Ljava/lang/String;	a	lambda$static$3
		p	0		iconBytes
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	a	lambda$static$2
		p	0		uri
	m	()Ljava/lang/String;	b	lambda$static$1
	m	()Ljava/lang/String;	c	lambda$static$0
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	[B	d	iconBytes
	f	Ljava/lang/String;	e	PREFIX
c	acg$b	net/minecraft/network/protocol/status/ServerStatus$Players
	m	(IILjava/util/List;)V	<init>	<init>
		p	1		max
		p	2		online
	m	()I	a	max
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	()I	b	online
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$0
		p	0		instance
	m	()Ljava/util/List;	c	sample
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	max
	f	I	c	online
	f	Ljava/util/List;	d	sample
	f	Lcom/mojang/serialization/Codec;	e	PROFILE_CODEC
c	acg$c	net/minecraft/network/protocol/status/ServerStatus$Version
	m	(Ljava/lang/String;I)V	<init>	<init>
		p	1		gameVersion
		p	2		protocolVersion
	m	()Lacg$c;	a	current
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Ljava/lang/String;	b	name
	m	()I	c	protocol
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/lang/String;	b	name
	f	I	c	protocol
c	ach	net/minecraft/network/protocol/status/ServerStatusPacketListener
	m	(Laci;)V	a	handlePingRequest
		p	1		packet
	m	(Lacj;)V	a	handleStatusRequest
		p	1		packet
c	aci	net/minecraft/network/protocol/status/ServerboundPingRequestPacket
	m	(J)V	<init>	<init>
		p	1		startTime
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()J	a	getTime
	m	(Lach;)V	a	handle
		p	1		listener
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
	f	J	a	time
c	acj	net/minecraft/network/protocol/status/ServerboundStatusRequestPacket
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	(Lach;)V	a	handle
		p	1		listener
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lsx;)V	a	handle
		p	1		listener
c	ack	net/minecraft/network/protocol/status/package-info
c	acl	net/minecraft/network/syncher/EntityDataAccessor
	m	(ILacm;)V	<init>	<init>
		p	1		id
		p	2		dataType
	m	()I	a	getId
	m	()Lacm;	b	getSerializer
	f	I	a	id
	f	Lacm;	b	serializer
c	acm	net/minecraft/network/syncher/EntityDataSerializer
	m	(I)Lacl;	a	createAccessor
		p	1		id
	m	(Lhi;)Lacm;	a	simpleId
		p	0		registry
	m	(Lhi;Lss;)Ljava/lang/Object;	a	lambda$simpleId$2
		p	1		buf
	m	(Lhi;Lss;Ljava/lang/Object;)V	a	lambda$simpleId$1
		p	1		buf
		p	2		value
	m	(Ljava/lang/Class;)Lacm;	a	simpleEnum
		p	0		enum_
	m	(Ljava/lang/Class;Lss;)Ljava/lang/Enum;	a	lambda$simpleEnum$0
		p	1		buf
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	copy
		p	1		value
	m	(Lss$b;Lss$a;)Lacm;	a	simple
		p	0		writer
		p	1		reader
	m	(Lss;)Ljava/lang/Object;	a	read
		p	1		buf
	m	(Lss;Ljava/lang/Object;)V	a	write
		p	1		buf
		p	2		value
	m	(Lss$b;Lss$a;)Lacm;	b	optional
		p	0		writer
		p	1		reader
c	acm$1	net/minecraft/network/syncher/EntityDataSerializer$1
	m	(Lss;)Ljava/lang/Object;	a	read
		p	1		buf
	m	(Lss;Ljava/lang/Object;)V	a	write
		p	1		buf
		p	2		value
	f	Lss$b;	a	val$writer
	f	Lss$a;	b	val$reader
c	acm$a	net/minecraft/network/syncher/EntityDataSerializer$ForValueType
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	copy
		p	1		value
c	acn	net/minecraft/network/syncher/EntityDataSerializers
	m	(I)Lacm;	a	getSerializer
		p	0		id
	m	(Lacm;)V	a	registerSerializer
		p	0		handler
	m	(Lss;Ljava/lang/Byte;)V	a	lambda$static$0
		p	0		buf
		p	1		byte_
	m	(Lacm;)I	b	getSerializedId
		p	0		handler
	f	Lacm;	A	VECTOR3
	f	Lacm;	B	QUATERNION
	f	Laoi;	C	SERIALIZERS
	f	Lacm;	a	BYTE
	f	Lacm;	b	INT
	f	Lacm;	c	LONG
	f	Lacm;	d	FLOAT
	f	Lacm;	e	STRING
	f	Lacm;	f	COMPONENT
	f	Lacm;	g	OPTIONAL_COMPONENT
	f	Lacm;	h	ITEM_STACK
	f	Lacm;	i	BLOCK_STATE
	f	Lacm;	j	OPTIONAL_BLOCK_STATE
	f	Lacm;	k	BOOLEAN
	f	Lacm;	l	PARTICLE
	f	Lacm;	m	ROTATIONS
	f	Lacm;	n	BLOCK_POS
	f	Lacm;	o	OPTIONAL_BLOCK_POS
	f	Lacm;	p	DIRECTION
	f	Lacm;	q	OPTIONAL_UUID
	f	Lacm;	r	OPTIONAL_GLOBAL_POS
	f	Lacm;	s	COMPOUND_TAG
	f	Lacm;	t	VILLAGER_DATA
	f	Lacm;	u	OPTIONAL_UNSIGNED_INT
	f	Lacm;	v	POSE
	f	Lacm;	w	CAT_VARIANT
	f	Lacm;	x	FROG_VARIANT
	f	Lacm;	y	PAINTING_VARIANT
	f	Lacm;	z	SNIFFER_STATE
c	acn$1	net/minecraft/network/syncher/EntityDataSerializers$1
	m	(Lcfv;)Lcfv;	a	copy
		p	1		value
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	copy
		p	1		value
	m	(Lss;)Ljava/lang/Object;	a	read
		p	1		buf
	m	(Lss;Lcfv;)V	a	write
		p	1		buf
		p	2		value
	m	(Lss;Ljava/lang/Object;)V	a	write
		p	1		buf
		p	2		value
	m	(Lss;)Lcfv;	b	read
c	acn$2	net/minecraft/network/syncher/EntityDataSerializers$2
	m	(Lss;)Ljava/lang/Object;	a	read
		p	1		buf
	m	(Lss;Ljava/lang/Object;)V	a	write
		p	1		buf
		p	2		value
	m	(Lss;Ljava/util/Optional;)V	a	write
		p	1		buf
		p	2		value
	m	(Lss;)Ljava/util/Optional;	b	read
c	acn$3	net/minecraft/network/syncher/EntityDataSerializers$3
	m	(Lss;)Ljava/lang/Object;	a	read
		p	1		buf
	m	(Lss;Lis;)V	a	write
		p	1		buf
		p	2		value
	m	(Lss;Lit;)Lis;	a	readParticle
		p	1		buf
		p	2		type
	m	(Lss;Ljava/lang/Object;)V	a	write
		p	1		buf
		p	2		value
	m	(Lss;)Lis;	b	read
c	acn$4	net/minecraft/network/syncher/EntityDataSerializers$4
	m	(Lss;)Ljava/lang/Object;	a	read
		p	1		buf
	m	(Lss;Lhv;)V	a	write
		p	1		buf
		p	2		value
	m	(Lss;Ljava/lang/Object;)V	a	write
		p	1		buf
		p	2		value
	m	(Lss;)Lhv;	b	read
c	acn$5	net/minecraft/network/syncher/EntityDataSerializers$5
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	copy
		p	1		value
	m	(Lre;)Lre;	a	copy
		p	1		value
	m	(Lss;)Ljava/lang/Object;	a	read
		p	1		buf
	m	(Lss;Ljava/lang/Object;)V	a	write
		p	1		buf
		p	2		value
	m	(Lss;Lre;)V	a	write
		p	1		buf
		p	2		value
	m	(Lss;)Lre;	b	read
c	acn$6	net/minecraft/network/syncher/EntityDataSerializers$6
	m	(Lss;)Ljava/lang/Object;	a	read
		p	1		buf
	m	(Lss;Lbya;)V	a	write
		p	1		buf
		p	2		value
	m	(Lss;Ljava/lang/Object;)V	a	write
		p	1		buf
		p	2		value
	m	(Lss;)Lbya;	b	read
c	acn$7	net/minecraft/network/syncher/EntityDataSerializers$7
	m	(Lss;)Ljava/lang/Object;	a	read
		p	1		buf
	m	(Lss;Ljava/lang/Object;)V	a	write
		p	1		buf
		p	2		value
	m	(Lss;Ljava/util/OptionalInt;)V	a	write
		p	1		buf
		p	2		value
	m	(Lss;)Ljava/util/OptionalInt;	b	read
c	aco	net/minecraft/network/syncher/SynchedEntityData
	m	(Lbfh;)V	<init>	<init>
		p	1		trackedEntity
	m	()Z	a	isDirty
	m	(Lacl;)Ljava/lang/Object;	a	get
		p	1		data
	m	(Lacl;Ljava/lang/Object;)V	a	define
		p	1		key
		p	2		initialValue
	m	(Lacl;Ljava/lang/Object;Z)V	a	set
		p	1		key
		p	2		value
		p	3		force
	m	(Laco$a;Laco$b;)V	a	assignValue
		p	1		to
		p	2		from
	m	(Ljava/lang/Class;Lacm;)Lacl;	a	defineId
		p	0		entityClass
		p	1		dataHandler
	m	(Ljava/util/List;)V	a	assignValues
		p	1		entries
	m	()Ljava/util/List;	b	packDirty
	m	(Lacl;)Laco$a;	b	getItem
		p	1		key
	m	(Lacl;Ljava/lang/Object;)V	b	set
		p	1		key
		p	2		value
	m	()Ljava/util/List;	c	getNonDefaultValues
	m	(Lacl;Ljava/lang/Object;)V	c	createDataItem
		p	1		key
		p	2		value
	m	()Z	d	isEmpty
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	b	ENTITY_ID_POOL
	f	I	c	MAX_ID_VALUE
	f	Lbfh;	d	entity
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	e	itemsById
	f	Ljava/util/concurrent/locks/ReadWriteLock;	f	lock
	f	Z	g	isDirty
c	aco$a	net/minecraft/network/syncher/SynchedEntityData$DataItem
	m	(Lacl;Ljava/lang/Object;)V	<init>	<init>
		p	1		data
		p	2		value
	m	()Lacl;	a	getAccessor
	m	(Ljava/lang/Object;)V	a	setValue
		p	1		value
	m	(Z)V	a	setDirty
		p	1		dirty
	m	()Ljava/lang/Object;	b	getValue
	m	()Z	c	isDirty
	m	()Z	d	isSetToDefault
	m	()Laco$b;	e	value
	f	Lacl;	a	accessor
	f	Ljava/lang/Object;	b	value
	f	Ljava/lang/Object;	c	initialValue
	f	Z	d	dirty
c	aco$b	net/minecraft/network/syncher/SynchedEntityData$DataValue
	m	()I	a	id
	m	(Lacl;Ljava/lang/Object;)Laco$b;	a	create
		p	0		data
		p	1		value
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lss;I)Laco$b;	a	read
		p	0		buf
		p	1		id
	m	(Lss;ILacm;)Laco$b;	a	read
		p	0		buf
		p	1		id
		p	2		handler
	m	()Lacm;	b	serializer
	m	()Ljava/lang/Object;	c	value
	f	I	a	id
	f	Lacm;	b	serializer
	f	Ljava/lang/Object;	c	value
c	acp	net/minecraft/network/syncher/package-info
c	acq	net/minecraft/obfuscate/package-info
c	acr	net/minecraft/package-info
c	acs	net/minecraft/recipebook/PlaceRecipe
	m	(IIILciy;Ljava/util/Iterator;I)V	a	placeRecipe
		p	1		gridWidth
		p	2		gridHeight
		p	3		gridOutputSlot
		p	4		recipe
		p	5		inputs
		p	6		amount
	m	(Ljava/util/Iterator;IIII)V	a	addItemToSlot
		p	1		inputs
		p	2		slot
		p	3		amount
		p	4		gridX
		p	5		gridY
c	act	net/minecraft/recipebook/ServerPlaceRecipe
	m	(Lcco;)V	<init>	<init>
		p	1		handler
	m	()V	a	clearGrid
	m	(Laiq;Lciy;Z)V	a	recipeClicked
		p	1		entity
		p	2		recipe
		p	3		craftAll
	m	(Lccw;Lcfv;)V	a	moveItemToGrid
		p	1		slot
		p	2		stack
	m	(Lciy;Z)V	a	handleRecipeClicked
		p	1		recipe
		p	2		craftAll
	m	(Ljava/util/Iterator;IIII)V	a	addItemToSlot
		p	1		inputs
		p	2		slot
		p	3		amount
		p	4		gridX
		p	5		gridY
	m	(ZIZ)I	a	getStackSize
		p	1		craftAll
		p	2		limit
		p	3		recipeInCraftingSlots
	m	()Z	b	testClearGrid
	m	()I	c	getAmountOfFreeSlotsInInventory
	f	Lbyq;	a	stackedContents
	f	Lbyl;	b	inventory
	f	Lcco;	c	menu
	f	Lorg/slf4j/Logger;	d	LOGGER
c	acu	net/minecraft/recipebook/package-info
c	acv	net/minecraft/resources/DelegatingOps
	m	(Lcom/mojang/serialization/DynamicOps;)V	<init>	<init>
		p	1		delegate
	f	Lcom/mojang/serialization/DynamicOps;	a	delegate
c	acw	net/minecraft/resources/FileToIdConverter
	m	(Ljava/lang/String;Ljava/lang/String;)V	<init>	<init>
		p	1		directoryName
		p	2		fileExtension
	m	(Ladd;)Ladd;	a	idToFile
		p	1		id
	m	(Lalh;)Ljava/util/Map;	a	listMatchingResources
		p	1		resourceManager
	m	(Ljava/lang/String;)Lacw;	a	json
		p	0		directoryName
	m	(Ladd;)Ladd;	b	fileToId
		p	1		path
	m	(Lalh;)Ljava/util/Map;	b	listMatchingResourceStacks
		p	1		resourceManager
	m	(Ladd;)Z	c	lambda$listMatchingResourceStacks$1
		p	1		path
	m	(Ladd;)Z	d	lambda$listMatchingResources$0
		p	1		path
	f	Ljava/lang/String;	a	prefix
	f	Ljava/lang/String;	b	extension
c	acx	net/minecraft/resources/HolderSetCodec
	m	(Ladc;Lcom/mojang/serialization/Codec;Z)V	<init>	<init>
		p	1		registry
		p	2		entryCodec
		p	3		alwaysSerializeAsList
	m	(Ladc;Lcom/mojang/serialization/Codec;Z)Lcom/mojang/serialization/Codec;	a	create
		p	0		registryRef
		p	1		entryCodec
		p	2		alwaysSerializeAsList
	m	(Lcom/mojang/datafixers/util/Either;)Ljava/util/List;	a	lambda$homogenousList$1
		p	0		either
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/serialization/DataResult;	a	lambda$decodeWithoutRegistry$7
		p	0		pair
	m	(Lcom/mojang/serialization/Codec;Z)Lcom/mojang/serialization/Codec;	a	homogenousList
		p	0		entryCodec
		p	1		alwaysSerializeAsList
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	decodeWithoutRegistry
		p	1		ops
		p	2		input
	m	(Lhd;)Ljava/lang/String;	a	lambda$decodeWithoutRegistry$6
	m	(Lhe;Lcom/mojang/datafixers/util/Either;)Lhh;	a	lambda$decode$3
		p	1		either
	m	(Lhe;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$decode$4
		p	1		pair
	m	(Lhh;)Ljava/lang/String;	a	lambda$encode$5
	m	(Lhh;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	encode
	m	(Ljava/util/List;)Lcom/mojang/datafixers/util/Either;	a	lambda$homogenousList$2
		p	0		entries
	m	(Lhh;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	b	encodeWithoutRegistry
		p	1		entryList
		p	2		ops
		p	3		prefix
	m	(Ljava/util/List;)Ljava/util/List;	b	lambda$homogenousList$0
		p	0		entries
	f	Ladc;	a	registryKey
	f	Lcom/mojang/serialization/Codec;	b	elementCodec
	f	Lcom/mojang/serialization/Codec;	c	homogenousListCodec
	f	Lcom/mojang/serialization/Codec;	d	registryAwareCodec
c	acy	net/minecraft/resources/RegistryDataLoader
	m	(Ladb$b;Lalh;Ladc;Lhz;Lcom/mojang/serialization/Decoder;Ljava/util/Map;)V	a	loadRegistryContents
		p	0		registryInfoGetter
		p	1		resourceManager
		p	2		registryRef
		p	3		newRegistry
		p	4		decoder
		p	5		exceptions
	m	(Ladd;)Ljava/lang/String;	a	registryDirPath
		p	0		id
	m	(Lalh;Ladb$b;Lcom/mojang/datafixers/util/Pair;)V	a	lambda$load$1
		p	2		loader
	m	(Lalh;Lhr;Ljava/util/List;)Lhr$b;	a	load
		p	0		resourceManager
		p	1		baseRegistryManager
		p	2		entries
	m	(Lhq;)Ladb$a;	a	createInfoForContextRegistry
		p	0		registry
	m	(Lhr;Ljava/util/List;)Ladb$b;	a	createContext
		p	0		baseRegistryManager
		p	1		additionalRegistries
	m	(Lhz;)Ladb$a;	a	createInfoForNewRegistry
		p	0		registry
	m	(Ljava/io/PrintWriter;Ljava/util/Map$Entry;)V	a	lambda$logErrors$8
		p	1		entry
	m	(Ljava/lang/String;)V	a	lambda$loadRegistryContents$9
		p	0		error
	m	(Ljava/util/Map$Entry;)Ladd;	a	lambda$logErrors$6
		p	0		entry
	m	(Ljava/util/Map;)V	a	logErrors
		p	0		exceptions
	m	(Ljava/util/Map;Lacy$b;)Lcom/mojang/datafixers/util/Pair;	a	lambda$load$0
		p	1		entry
	m	(Ljava/util/Map;Lcom/mojang/datafixers/util/Pair;)V	a	lambda$createContext$4
		p	1		pair
	m	(Ljava/util/Map;Lhr$d;)V	a	lambda$createContext$3
		p	1		entry
	m	(Ljava/io/PrintWriter;Ljava/util/Map$Entry;)V	b	lambda$logErrors$7
		p	1		elementEntry
	m	(Ljava/util/Map$Entry;)Ladd;	b	lambda$logErrors$5
		p	0		entry
	m	(Ljava/util/Map;Lcom/mojang/datafixers/util/Pair;)V	b	lambda$load$2
		p	1		loader
	f	Ljava/util/List;	a	WORLDGEN_REGISTRIES
	f	Ljava/util/List;	b	DIMENSION_REGISTRIES
	f	Lorg/slf4j/Logger;	c	LOGGER
c	acy$1	net/minecraft/resources/RegistryDataLoader$1
	m	(Ladc;)Ljava/util/Optional;	a	lookup
		p	1		registryRef
	f	Ljava/util/Map;	a	val$result
c	acy$a	net/minecraft/resources/RegistryDataLoader$Loader
	m	(Lalh;Ladb$b;)V	load	load
		p	1		resourceManager
		p	2		registryInfoGetter
c	acy$b	net/minecraft/resources/RegistryDataLoader$RegistryData
	m	()Ladc;	a	key
	m	(Lcom/mojang/serialization/Lifecycle;Ljava/util/Map;)Lcom/mojang/datafixers/util/Pair;	a	create
		p	1		lifecycle
		p	2		exceptions
	m	(Lhz;Ljava/util/Map;Lalh;Ladb$b;)V	a	lambda$create$0
		p	3		resourceManager
		p	4		registryInfoGetter
	m	()Lcom/mojang/serialization/Codec;	b	elementCodec
	f	Ladc;	a	key
	f	Lcom/mojang/serialization/Codec;	b	elementCodec
c	acz	net/minecraft/resources/RegistryFileCodec
	m	(Ladc;Lcom/mojang/serialization/Codec;Z)V	<init>	<init>
		p	1		registryRef
		p	2		elementCodec
		p	3		allowInlineDefinitions
	m	()Ljava/lang/String;	a	lambda$decode$4
	m	(Ladc;)Lcom/mojang/serialization/DataResult;	a	lambda$decode$7
	m	(Ladc;Lcom/mojang/serialization/Codec;)Lacz;	a	create
		p	0		registryRef
		p	1		elementCodec
	m	(Ladc;Lcom/mojang/serialization/Codec;Z)Lacz;	a	create
		p	0		registryRef
		p	1		elementCodec
		p	2		allowInlineDefinitions
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$decode$9
		p	0		pair
	m	(Lcom/mojang/datafixers/util/Pair;Lhd$c;)Lcom/mojang/datafixers/util/Pair;	a	lambda$decode$8
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;Ladc;)Lcom/mojang/serialization/DataResult;	a	lambda$encode$1
		p	2		key
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	lambda$encode$2
		p	3		value
	m	(Lhd;)Ljava/lang/String;	a	lambda$encode$0
	m	(Lhd;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	encode
	m	()Ljava/lang/String;	b	lambda$decode$3
	m	(Ladc;)Ljava/lang/String;	b	lambda$decode$6
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	b	lambda$decode$5
		p	0		pair
	f	Ladc;	a	registryKey
	f	Lcom/mojang/serialization/Codec;	b	elementCodec
	f	Z	c	allowInline
c	ada	net/minecraft/resources/RegistryFixedCodec
	m	(Ladc;)V	<init>	<init>
		p	1		registry
	m	()Ljava/lang/String;	a	lambda$decode$9
	m	(Ladc;)Lada;	a	create
		p	0		registry
	m	(Ladd;)Lcom/mojang/serialization/DataResult;	a	lambda$decode$6
	m	(Lcom/mojang/datafixers/util/Pair;Lhd$c;)Lcom/mojang/datafixers/util/Pair;	a	lambda$decode$7
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;Ladc;)Lcom/mojang/serialization/DataResult;	a	lambda$encode$1
		p	2		registryKey
	m	(Lhd;)Ljava/lang/String;	a	lambda$encode$0
	m	(Lhd;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	encode
	m	(Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	lambda$encode$3
		p	1		value
	m	(Ljava/util/Optional;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/serialization/DataResult;	a	lambda$decode$8
		p	2		pair
	m	()Ljava/lang/String;	b	lambda$encode$4
	m	(Ladd;)Ljava/lang/String;	b	lambda$decode$5
	m	()Ljava/lang/String;	c	lambda$encode$2
	f	Ladc;	a	registryKey
c	adb	net/minecraft/resources/RegistryOps
	m	(Lcom/mojang/serialization/DynamicOps;Ladb$b;)V	<init>	<init>
		p	1		delegate
		p	2		registryInfoGetter
	m	()Ljava/lang/String;	a	lambda$retrieveElement$9
	m	(Ladb$a;)Lcom/mojang/serialization/DataResult;	a	lambda$retrieveGetter$0
		p	0		info
	m	(Ladb$b;)Ladb$b;	a	memoizeLookup
		p	0		registryInfoGetter
	m	(Ladc;)Ljava/util/Optional;	a	owner
		p	1		registryRef
	m	(Ladc;Ladb$a;)Ljava/util/Optional;	a	lambda$retrieveElement$6
		p	1		info
	m	(Ladc;Ladc;Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/DataResult;	a	lambda$retrieveElement$10
		p	2		ops
	m	(Ladc;Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/DataResult;	a	lambda$retrieveGetter$4
		p	1		ops
	m	(Lcom/mojang/serialization/DynamicOps;Ladb$b;)Ladb;	a	create
		p	0		delegate
		p	1		registryInfoGetter
	m	(Lcom/mojang/serialization/DynamicOps;Lhf$b;)Ladb;	a	create
		p	0		delegate
		p	1		wrapperLookup
	m	(Ljava/lang/Object;)Lhd$c;	a	lambda$retrieveElement$11
		p	0		object
	m	()Ljava/lang/String;	b	lambda$retrieveGetter$3
	m	(Ladc;)Ljava/util/Optional;	b	getter
		p	1		registryRef
	m	(Ljava/lang/Object;)Lhe;	b	lambda$retrieveGetter$5
		p	0		object
	m	(Ladc;)Lcom/mojang/serialization/codecs/RecordCodecBuilder;	c	retrieveGetter
		p	0		registryRef
	m	(Ladc;)Lcom/mojang/serialization/codecs/RecordCodecBuilder;	d	retrieveElement
		p	0		key
	m	(Ladc;)Lcom/mojang/serialization/DataResult;	e	lambda$retrieveElement$8
	m	(Ladc;)Ljava/lang/String;	f	lambda$retrieveElement$7
	m	(Ladc;)Lcom/mojang/serialization/DataResult;	g	lambda$retrieveGetter$2
	m	(Ladc;)Ljava/lang/String;	h	lambda$retrieveGetter$1
	f	Ladb$b;	b	lookupProvider
c	adb$1	net/minecraft/resources/RegistryOps$1
	m	(Ladc;)Ljava/util/Optional;	a	lookup
		p	1		registryRef
	f	Ladb$b;	a	val$original
	f	Ljava/util/Map;	b	lookups
c	adb$2	net/minecraft/resources/RegistryOps$2
	m	(Ladc;)Ljava/util/Optional;	a	lookup
		p	1		registryRef
	m	(Lhf$c;)Ladb$a;	a	lambda$lookup$0
		p	0		wrapper
	f	Lhf$b;	a	val$lookupProvider
c	adb$a	net/minecraft/resources/RegistryOps$RegistryInfo
	m	()Lhg;	a	owner
	m	()Lhe;	b	getter
	m	()Lcom/mojang/serialization/Lifecycle;	c	elementsLifecycle
	f	Lhg;	a	owner
	f	Lhe;	b	getter
	f	Lcom/mojang/serialization/Lifecycle;	c	elementsLifecycle
c	adb$b	net/minecraft/resources/RegistryOps$RegistryInfoLookup
	m	(Ladc;)Ljava/util/Optional;	a	lookup
		p	1		registryRef
c	adc	net/minecraft/resources/ResourceKey
	m	(Ladd;Ladd;)V	<init>	<init>
		p	1		registry
		p	2		value
	m	()Ladd;	a	location
	m	(Ladc$a;)Ladc;	a	lambda$create$1
		p	0		pair
	m	(Ladc;)Lcom/mojang/serialization/Codec;	a	codec
		p	0		registry
	m	(Ladc;Ladd;)Ladc;	a	create
		p	0		registry
		p	1		value
	m	(Ladd;)Ladc;	a	createRegistryKey
		p	0		registry
	m	(Ladd;Ladd;)Ladc;	a	create
		p	0		registry
		p	1		value
	m	()Ladd;	b	registry
	m	(Ladc;)Z	b	isFor
		p	1		registry
	m	(Ladc;Ladd;)Ladc;	b	lambda$codec$0
		p	1		id
	m	(Ladc;)Ljava/util/Optional;	c	cast
		p	1		registryRef
	f	Ljava/util/concurrent/ConcurrentMap;	a	VALUES
	f	Ladd;	b	registryName
	f	Ladd;	c	location
c	adc$a	net/minecraft/resources/ResourceKey$InternKey
	m	()Ladd;	a	registry
	m	()Ladd;	b	location
	f	Ladd;	a	registry
	f	Ladd;	b	location
c	add	net/minecraft/resources/ResourceLocation
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		id
	m	(Ljava/lang/String;Ljava/lang/String;)V	<init>	<init>
		p	1		namespace
		p	2		path
	m	(Ljava/lang/String;Ljava/lang/String;Ladd$a;)V	<init>	<init>
		p	1		namespace
		p	2		path
		p	3		extraData
	m	([Ljava/lang/String;)V	<init>	<init>
		p	1		id
	m	()Ljava/lang/String;	a	getPath
	m	(C)Z	a	isAllowedInResourceLocation
		p	0		c
	m	(Ladd;)I	a	compareTo
	m	(Lcom/mojang/brigadier/StringReader;)Ladd;	a	read
		p	0		reader
	m	(Ljava/lang/String;)Ladd;	a	tryParse
		p	0		id
	m	(Ljava/lang/String;C)Ladd;	a	of
		p	0		id
		p	1		delimiter
	m	(Ljava/lang/String;Ljava/lang/String;)Ladd;	a	tryBuild
		p	0		namespace
		p	1		path
	m	(Ljava/lang/String;Lz;)Ljava/lang/String;	a	lambda$read$0
	m	(Ljava/util/function/UnaryOperator;)Ladd;	a	withPath
		p	1		pathFunction
	m	()Ljava/lang/String;	b	getNamespace
	m	(C)Z	b	validPathChar
		p	0		character
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	b	read
		p	0		id
	m	(Ljava/lang/String;C)[Ljava/lang/String;	b	decompose
		p	0		id
		p	1		delimiter
	m	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	b	toLanguageKey
		p	1		prefix
		p	2		suffix
	m	()Ljava/lang/String;	c	toDebugFileName
	m	(C)Z	c	validNamespaceChar
		p	0		character
	m	(Ljava/lang/String;)Ladd;	c	withPath
		p	1		path
	m	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	c	assertValidNamespace
		p	0		namespace
		p	1		path
	m	()Ljava/lang/String;	d	toLanguageKey
	m	(Ljava/lang/String;)Ladd;	d	withPrefix
		p	1		prefix
	m	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	d	assertValidPath
		p	0		namespace
		p	1		path
	m	()Ljava/lang/String;	e	toShortLanguageKey
	m	(Ljava/lang/String;)Ladd;	e	withSuffix
		p	1		suffix
	m	(Ljava/lang/String;)Ljava/lang/String;	f	toLanguageKey
		p	1		prefix
	m	(Ljava/lang/String;)Z	g	isValidResourceLocation
		p	0		id
	m	(Ljava/lang/String;)Z	h	isValidPath
		p	0		path
	m	(Ljava/lang/String;)Z	i	isValidNamespace
		p	0		namespace
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	C	b	NAMESPACE_SEPARATOR
	f	Ljava/lang/String;	c	DEFAULT_NAMESPACE
	f	Ljava/lang/String;	d	REALMS_NAMESPACE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	e	ERROR_INVALID
	f	Ljava/lang/String;	f	namespace
	f	Ljava/lang/String;	g	path
c	add$a	net/minecraft/resources/ResourceLocation$Dummy
c	add$b	net/minecraft/resources/ResourceLocation$Serializer
	m	(Ladd;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	a	serialize
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ladd;	a	deserialize
c	ade	net/minecraft/resources/package-info
c	adf	net/minecraft/server/Bootstrap
	m	()V	a	bootStrap
	m	(Ladd;)Ljava/lang/String;	a	lambda$getMissingTranslations$1
		p	0		stat
	m	(Ljava/lang/Iterable;Ljava/util/function/Function;Ljava/util/Set;)V	a	checkTranslations
		p	0		registry
		p	1		keyExtractor
		p	2		translationKeys
	m	(Ljava/lang/String;)V	a	realStdoutPrintln
		p	0		str
	m	(Ljava/util/Set;)V	a	checkGameruleTranslations
		p	0		translations
	m	(Ljava/util/function/Function;Lqz;Ljava/util/Set;Ljava/lang/Object;)V	a	lambda$checkTranslations$0
		p	3		object
	m	(Ljava/util/function/Supplier;)V	a	checkBootstrapCalled
		p	0		callerGetter
	m	()Ljava/util/Set;	b	getMissingTranslations
	m	(Ljava/lang/String;)V	b	lambda$validate$3
		p	0		key
	m	(Ljava/util/function/Supplier;)Ljava/lang/RuntimeException;	b	createBootstrapException
		p	0		callerGetter
	m	()V	c	validate
	m	()V	d	wrapStreams
	m	()Ljava/lang/String;	e	lambda$validate$2
	f	Ljava/io/PrintStream;	a	STDOUT
	f	Z	b	isBootstrapped
	f	Lorg/slf4j/Logger;	c	LOGGER
c	adf$1	net/minecraft/server/Bootstrap$1
	m	(Lcme$e;Lcme$f;)V	a	visit
		p	1		key
		p	2		type
	f	Lqz;	a	val$language
	f	Ljava/util/Set;	b	val$missing
c	adg	net/minecraft/server/ChainedJsonException
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		message
	m	(Ljava/lang/String;Ljava/lang/Throwable;)V	<init>	<init>
		p	1		message
		p	2		cause
	m	(Ljava/lang/Exception;)Ladg;	a	forException
		p	0		cause
	m	(Ljava/lang/String;)V	a	prependJsonKey
		p	1		key
	m	(Ljava/lang/String;)V	b	setFilenameAndFlush
		p	1		fileName
	f	Ljava/util/List;	a	entries
	f	Ljava/lang/String;	b	message
c	adg$a	net/minecraft/server/ChainedJsonException$Entry
	m	()Ljava/lang/String;	a	getFilename
	m	(Ljava/lang/String;)V	a	addJsonKey
		p	1		key
	m	()Ljava/lang/String;	b	getJsonKeys
	f	Ljava/lang/String;	a	filename
	f	Ljava/util/List;	b	jsonKeys
c	adh	net/minecraft/server/ConsoleInput
	m	(Ljava/lang/String;Ldr;)V	<init>	<init>
		p	1		command
		p	2		commandSource
	f	Ljava/lang/String;	a	msg
	f	Ldr;	b	source
c	adi	net/minecraft/server/DebugLoggedPrintStream
	m	(Ljava/lang/String;Ljava/io/OutputStream;)V	<init>	<init>
		p	1		name
		p	2		out
	m	(Ljava/lang/String;)V	a	logLine
		p	1		message
	f	Lorg/slf4j/Logger;	b	LOGGER
c	adj	net/minecraft/server/Eula
	m	(Ljava/nio/file/Path;)V	<init>	<init>
		p	1		eulaFile
	m	()Z	a	hasAgreedToEULA
	m	()Z	b	readFile
	m	()V	c	saveDefaults
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/nio/file/Path;	b	file
	f	Z	c	agreed
c	adk	net/minecraft/server/LoggedPrintStream
	m	(Ljava/lang/String;Ljava/io/OutputStream;)V	<init>	<init>
		p	1		name
		p	2		out
	m	(Ljava/lang/String;)V	a	logLine
		p	1		message
	f	Ljava/lang/String;	a	name
	f	Lorg/slf4j/Logger;	b	LOGGER
c	adl	net/minecraft/server/PlayerAdvancements
	m	(Lcom/mojang/datafixers/DataFixer;Lalu;Ladp;Ljava/nio/file/Path;Laiq;)V	<init>	<init>
		p	1		dataFixer
		p	2		playerManager
		p	3		advancementLoader
		p	4		filePath
		p	5		owner
	m	()V	a	stopListening
	m	(Ladp;)V	a	reload
		p	1		advancementLoader
	m	(Ladp;Ljava/util/Map$Entry;)V	a	lambda$load$0
	m	(Lae;)V	a	setSelectedTab
		p	1		advancement
	m	(Lae;Lag;)V	a	startProgress
		p	1		advancement
		p	2		progress
	m	(Lae;Ljava/lang/String;)Z	a	award
		p	1		advancement
		p	2		criterionName
	m	(Lae;Ljava/util/Set;Ljava/util/Set;)V	a	updateTreeVisibility
		p	1		root
		p	2		added
		p	3		removed
	m	(Laiq;)V	a	setPlayer
		p	1		owner
	m	(Ljava/util/Set;Ljava/util/Set;Lae;Z)V	a	lambda$updateTreeVisibility$2
		p	3		advancement
		p	4		displayed
	m	()V	b	save
	m	(Ladp;)V	b	registerListeners
		p	1		advancementLoader
	m	(Lae;)Lag;	b	getOrStartProgress
		p	1		advancement
	m	(Lae;Ljava/lang/String;)Z	b	revoke
		p	1		advancement
		p	2		criterionName
	m	(Laiq;)V	b	flushDirty
		p	1		player
	m	(Ladp;)V	c	checkForAutomaticTriggers
		p	1		advancementLoader
	m	(Lae;)V	c	markForVisibilityUpdate
		p	1		advancement
	m	(Ladp;)V	d	load
		p	1		advancementLoader
	m	(Lae;)V	d	registerListeners
		p	1		advancement
	m	(Lae;)V	e	unregisterListeners
		p	1		advancement
	m	(Lae;)Z	f	lambda$updateTreeVisibility$1
		p	1		advancement
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lcom/google/gson/Gson;	b	GSON
	f	Lcom/google/gson/reflect/TypeToken;	c	TYPE_TOKEN
	f	Lcom/mojang/datafixers/DataFixer;	d	dataFixer
	f	Lalu;	e	playerList
	f	Ljava/nio/file/Path;	f	playerSavePath
	f	Ljava/util/Map;	g	progress
	f	Ljava/util/Set;	h	visible
	f	Ljava/util/Set;	i	progressChanged
	f	Ljava/util/Set;	j	rootsToUpdate
	f	Laiq;	k	player
	f	Lae;	l	lastSelectedTab
	f	Z	m	isFirstPacket
c	adl$1	net/minecraft/server/PlayerAdvancements$1
c	adm	net/minecraft/server/RegistryLayer
	m	()Lhk;	a	createRegistryAccess
	m	()[Ladm;	b	$values
	f	Ladm;	a	STATIC
	f	Ladm;	b	WORLDGEN
	f	Ladm;	c	DIMENSIONS
	f	Ladm;	d	RELOADABLE
	f	Ljava/util/List;	e	VALUES
	f	Lhr$b;	f	STATIC_ACCESS
	f	[Ladm;	g	$VALUES
c	adn	net/minecraft/server/ReloadableServerResources
	m	(Lhr$b;Lcau;Lds$a;I)V	<init>	<init>
		p	1		dynamicRegistryManager
		p	2		enabledFeatures
		p	3		environment
		p	4		functionPermissionLevel
	m	()Ladq;	a	getFunctionLibrary
	m	(Ladc;Ljava/util/Map$Entry;)Lanv;	a	lambda$updateRegistryTags$3
		p	1		entry
	m	(Ladn;Ljava/lang/Object;)Ladn;	a	lambda$loadResources$1
		p	1		void_
	m	(Ladn;Ljava/lang/Object;Ljava/lang/Throwable;)V	a	lambda$loadResources$0
		p	1		void_
		p	2		throwable
	m	(Lalh;Lhr$b;Lcau;Lds$a;ILjava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	loadResources
		p	0		manager
		p	1		dynamicRegistryManager
		p	2		enabledFeatures
		p	3		environment
		p	4		functionPermissionLevel
		p	5		prepareExecutor
		p	6		applyExecutor
	m	(Lhr;)V	a	updateRegistryTags
		p	1		dynamicRegistryManager
	m	(Lhr;Lanx$a;)V	a	updateRegistryTags
		p	0		dynamicRegistryManager
		p	1		tags
	m	(Ljava/util/Map$Entry;)Ljava/util/List;	a	lambda$updateRegistryTags$4
		p	0		entry
	m	()Ldyw;	b	getPredicateManager
	m	(Lhr;Lanx$a;)V	b	lambda$updateRegistryTags$2
		p	1		tags
	m	()Ldyv;	c	getLootTables
	m	()Ldyq;	d	getItemModifierManager
	m	()Lciz;	e	getRecipeManager
	m	()Lds;	f	getCommands
	m	()Ladp;	g	getAdvancements
	m	()Ljava/util/List;	h	listeners
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/concurrent/CompletableFuture;	b	DATA_RELOAD_INITIAL_TASK
	f	Ldl$a;	c	commandBuildContext
	f	Lds;	d	commands
	f	Lciz;	e	recipes
	f	Lanx;	f	tagManager
	f	Ldyw;	g	predicateManager
	f	Ldyv;	h	lootTables
	f	Ldyq;	i	itemModifierManager
	f	Ladp;	j	advancements
	f	Ladq;	k	functionLibrary
c	ado	net/minecraft/server/RunningOnDifferentThreadException
	f	Lado;	a	RUNNING_ON_DIFFERENT_THREAD
c	adp	net/minecraft/server/ServerAdvancementManager
	m	(Ldyw;)V	<init>	<init>
		p	1		conditionManager
	m	()Ljava/util/Collection;	a	getAllAdvancements
	m	(Ladd;)Lae;	a	getAdvancement
		p	1		id
	m	(Ljava/lang/Object;Lalh;Lbao;)V	a	apply
		p	1		prepared
		p	2		manager
		p	3		profiler
	m	(Ljava/util/Map;Ladd;Lcom/google/gson/JsonElement;)V	a	lambda$apply$0
		p	2		id
		p	3		json
	m	(Ljava/util/Map;Lalh;Lbao;)V	a	apply
		p	1		prepared
		p	2		manager
		p	3		profiler
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lcom/google/gson/Gson;	b	GSON
	f	Laf;	c	advancements
	f	Ldyw;	d	predicateManager
c	adq	net/minecraft/server/ServerFunctionLibrary
	m	(ILcom/mojang/brigadier/CommandDispatcher;)V	<init>	<init>
		p	1		level
		p	2		commandDispatcher
	m	()Ljava/util/Map;	a	getFunctions
	m	(Ladd;)Ljava/util/Optional;	a	getFunction
		p	1		id
	m	(Ladd;Lcom/google/common/collect/ImmutableMap$Builder;Ldm;Ljava/lang/Throwable;)Ljava/lang/Object;	a	lambda$reload$5
		p	2		function
		p	3		ex
	m	(Lalb$a;Lalh;Lbao;Lbao;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	reload
		p	1		synchronizer
		p	2		manager
		p	3		prepareProfiler
		p	4		applyProfiler
		p	5		prepareExecutor
		p	6		applyExecutor
	m	(Lalf;)Ljava/util/List;	a	readLines
		p	0		resource
	m	(Lalh;)Ljava/util/Map;	a	lambda$reload$1
	m	(Lcom/google/common/collect/ImmutableMap$Builder;Ladd;Ljava/util/concurrent/CompletableFuture;)V	a	lambda$reload$6
		p	1		id
		p	2		functionFuture
	m	(Lcom/mojang/datafixers/util/Pair;)V	a	lambda$reload$7
		p	1		intermediate
	m	(Ljava/util/Map$Entry;Ladd;Ldr;)Ldm;	a	lambda$reload$2
	m	(Ljava/util/Map;Ljava/lang/Void;Ljava/lang/Throwable;)Ljava/util/Map;	a	lambda$reload$3
		p	1		unused
		p	2		ex
	m	(Ljava/util/concurrent/Executor;Ljava/util/Map;)Ljava/util/concurrent/CompletionStage;	a	lambda$reload$4
		p	2		functions
	m	()Ljava/lang/Iterable;	b	getAvailableTags
	m	(Ladd;)Ljava/util/Collection;	b	getTag
		p	1		id
	m	(Lalh;)Ljava/util/Map;	b	lambda$reload$0
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lacw;	b	LISTER
	f	Ljava/util/Map;	c	functions
	f	Lanw;	d	tagsLoader
	f	Ljava/util/Map;	e	tags
	f	I	f	functionCompilationLevel
	f	Lcom/mojang/brigadier/CommandDispatcher;	g	dispatcher
c	adr	net/minecraft/server/ServerFunctionManager
	m	(Lnet/minecraft/server/MinecraftServer;Ladq;)V	<init>	<init>
		p	1		server
		p	2		loader
	m	()I	a	getCommandLimit
	m	(Ladd;)Ljava/util/Optional;	a	get
		p	1		id
	m	(Ladq;)V	a	replaceLibrary
		p	1		loader
	m	(Ldm;Ldr;)I	a	execute
		p	1		function
		p	2		source
	m	(Ldm;Ldr;Ladr$c;)I	a	execute
		p	1		function
		p	2		source
		p	3		tracer
	m	(Ljava/util/Collection;Ladd;)V	a	executeTagFunctions
		p	1		functions
		p	2		label
	m	()Lcom/mojang/brigadier/CommandDispatcher;	b	getDispatcher
	m	(Ladd;)Ljava/util/Collection;	b	getTag
		p	1		id
	m	(Ladq;)V	b	postReload
		p	1		loader
	m	()V	c	tick
	m	()Ldr;	d	getGameLoopSender
	m	()Ljava/lang/Iterable;	e	getFunctionNames
	m	()Ljava/lang/Iterable;	f	getTagNames
	f	Ltj;	a	NO_RECURSIVE_TRACES
	f	Ladd;	b	TICK_FUNCTION_TAG
	f	Ladd;	c	LOAD_FUNCTION_TAG
	f	Lnet/minecraft/server/MinecraftServer;	d	server
	f	Ladr$a;	e	context
	f	Ljava/util/List;	f	ticking
	f	Z	g	postReload
	f	Ladq;	h	library
c	adr$a	net/minecraft/server/ServerFunctionManager$ExecutionContext
	m	(Ladr;Ladr$c;)V	<init>	<init>
		p	2		tracer
	m	(Ldm;Ldr;)V	a	delayFunctionCall
		p	1		function
		p	2		source
	m	(Ljava/lang/String;)V	a	reportError
		p	1		message
	m	(Ldm;Ldr;)I	b	runTopCommand
		p	1		function
		p	2		source
	f	Ladr;	a	this$0
	f	I	b	depth
	f	Ladr$c;	c	tracer
	f	Ljava/util/Deque;	d	commandQueue
	f	Ljava/util/List;	e	nestedCalls
c	adr$b	net/minecraft/server/ServerFunctionManager$QueuedCommand
	m	(Ldr;ILdm$c;)V	<init>	<init>
		p	1		source
		p	2		depth
		p	3		element
	m	(Ladr;Ljava/util/Deque;ILadr$c;)V	a	execute
		p	1		manager
		p	2		entries
		p	3		maxChainLength
		p	4		tracer
	f	Ldr;	a	sender
	f	I	b	depth
	f	Ldm$c;	c	entry
c	adr$c	net/minecraft/server/ServerFunctionManager$TraceCallbacks
	m	(ILadd;I)V	a	onCall
		p	1		depth
		p	2		function
		p	3		size
	m	(ILjava/lang/String;)V	a	onCommand
		p	1		depth
		p	2		command
	m	(ILjava/lang/String;I)V	a	onReturn
		p	1		depth
		p	2		command
		p	3		result
	m	(ILjava/lang/String;)V	b	onError
		p	1		depth
		p	2		message
c	ads	net/minecraft/server/ServerInterface
	m	()Ljava/lang/String;	G	getServerVersion
	m	()I	H	getPlayerCount
	m	()I	I	getMaxPlayers
	m	()[Ljava/lang/String;	J	getPlayerNames
	m	()Lahr;	a	getProperties
	m	(Ljava/lang/String;)Ljava/lang/String;	a	runCommand
		p	1		command
	m	()Ljava/lang/String;	b	getServerIp
	m	()I	d	getServerPort
	m	()Ljava/lang/String;	f	getServerName
	m	()Ljava/lang/String;	q	getLevelIdName
	m	()Ljava/lang/String;	s	getPluginNames
c	adt	net/minecraft/server/ServerScoreboard
	m	(Lnet/minecraft/server/MinecraftServer;)V	<init>	<init>
		p	1		server
	m	()V	a	setDirty
	m	(ILedz;)V	a	setDisplayObjective
		p	1		slot
		p	2		objective
	m	(Ledz;)V	a	onObjectiveAdded
		p	1		objective
	m	(Leea;)V	a	onTeamAdded
		p	1		team
	m	(Leeb;)V	a	onScoreChanged
		p	1		score
	m	(Ljava/lang/Runnable;)V	a	addDirtyListener
		p	1		listener
	m	(Ljava/lang/String;)V	a	onPlayerRemoved
		p	1		playerName
	m	(Ljava/lang/String;Ledz;)V	a	onPlayerScoreRemoved
		p	1		playerName
		p	2		objective
	m	(Ljava/lang/String;Leea;)Z	a	addPlayerToTeam
		p	1		playerName
		p	2		team
	m	(Lre;)Leed;	a	createData
		p	1		nbt
	m	()Leed;	b	createData
	m	(Ledz;)V	b	onObjectiveChanged
		p	1		objective
	m	(Leea;)V	b	onTeamChanged
		p	1		team
	m	(Ljava/lang/String;Leea;)V	b	removePlayerFromTeam
		p	1		playerName
		p	2		team
	m	(Ledz;)V	c	onObjectiveRemoved
		p	1		objective
	m	(Leea;)V	c	onTeamRemoved
		p	1		team
	m	(Ledz;)Ljava/util/List;	d	getStartTrackingPackets
		p	1		objective
	m	(Ledz;)V	e	startTrackingObjective
		p	1		objective
	m	(Ledz;)Ljava/util/List;	f	getStopTrackingPackets
		p	1		objective
	m	(Ledz;)V	g	stopTrackingObjective
		p	1		objective
	m	(Ledz;)I	h	getObjectiveDisplaySlotCount
		p	1		objective
	f	Lnet/minecraft/server/MinecraftServer;	g	server
	f	Ljava/util/Set;	h	trackedObjectives
	f	Ljava/util/List;	i	dirtyListeners
c	adt$a	net/minecraft/server/ServerScoreboard$Method
	m	()[Ladt$a;	a	$values
	f	Ladt$a;	a	CHANGE
	f	Ladt$a;	b	REMOVE
	f	[Ladt$a;	c	$VALUES
c	adu	net/minecraft/server/Services
	m	()Lcom/mojang/authlib/minecraft/MinecraftSessionService;	a	sessionService
	m	(Lcom/mojang/authlib/yggdrasil/YggdrasilAuthenticationService;Ljava/io/File;)Ladu;	a	create
		p	0		authenticationService
		p	1		rootDirectory
	m	()Laps;	b	serviceSignatureValidator
	m	()Lcom/mojang/authlib/GameProfileRepository;	c	profileRepository
	m	()Lalq;	d	profileCache
	f	Lcom/mojang/authlib/minecraft/MinecraftSessionService;	a	sessionService
	f	Laps;	b	serviceSignatureValidator
	f	Lcom/mojang/authlib/GameProfileRepository;	c	profileRepository
	f	Lalq;	d	profileCache
	f	Ljava/lang/String;	e	USERID_CACHE_FILE
c	adv	net/minecraft/server/TickTask
	m	(ILjava/lang/Runnable;)V	<init>	<init>
		p	1		creationTicks
		p	2		runnable
	m	()I	a	getTick
	f	I	a	tick
	f	Ljava/lang/Runnable;	b	runnable
c	adw	net/minecraft/server/WorldLoader
	m	(Ladw$c;Ladw$f;Ladw$e;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	load
		p	0		serverConfig
		p	1		loadContextSupplier
		p	2		saveApplierFactory
		p	3		prepareExecutor
		p	4		applyExecutor
	m	(Lakx;Ladn;Ljava/lang/Throwable;)V	a	lambda$load$0
		p	1		dataPackContents
		p	2		throwable
	m	(Lalh;Lhk;Ladm;Ljava/util/List;)Lhr$b;	a	loadLayer
		p	0		resourceManager
		p	1		combinedDynamicRegistries
		p	2		type
		p	3		entries
	m	(Lhr$b;Ladw$e;Lakx;Lhk;Ladw$b;Ladn;)Ljava/lang/Object;	a	lambda$load$1
		p	5		dataPackContents
	m	(Lalh;Lhk;Ladm;Ljava/util/List;)Lhk;	b	loadAndReplaceLayer
		p	0		resourceManager
		p	1		combinedDynamicRegistries
		p	2		type
		p	3		entries
	f	Lorg/slf4j/Logger;	a	LOGGER
c	adw$a	net/minecraft/server/WorldLoader$DataLoadContext
	m	()Lalh;	a	resources
	m	()Lcna;	b	dataConfiguration
	m	()Lhr$b;	c	datapackWorldgen
	m	()Lhr$b;	d	datapackDimensions
	f	Lalh;	a	resources
	f	Lcna;	b	dataConfiguration
	f	Lhr$b;	c	datapackWorldgen
	f	Lhr$b;	d	datapackDimensions
c	adw$b	net/minecraft/server/WorldLoader$DataLoadOutput
	m	()Ljava/lang/Object;	a	cookie
	m	()Lhr$b;	b	finalDimensions
	f	Ljava/lang/Object;	a	cookie
	f	Lhr$b;	b	finalDimensions
c	adw$c	net/minecraft/server/WorldLoader$InitConfig
	m	()Ladw$d;	a	packConfig
	m	()Lds$a;	b	commandSelection
	m	()I	c	functionCompilationLevel
	f	Ladw$d;	a	packConfig
	f	Lds$a;	b	commandSelection
	f	I	c	functionCompilationLevel
c	adw$d	net/minecraft/server/WorldLoader$PackConfig
	m	()Lcom/mojang/datafixers/util/Pair;	a	createResourceManager
	m	()Laks;	b	packRepository
	m	()Lcna;	c	initialDataConfig
	m	()Z	d	safeMode
	m	()Z	e	initMode
	f	Laks;	a	packRepository
	f	Lcna;	b	initialDataConfig
	f	Z	c	safeMode
	f	Z	d	initMode
c	adw$e	net/minecraft/server/WorldLoader$ResultFactory
	m	(Lakx;Ladn;Lhk;Ljava/lang/Object;)Ljava/lang/Object;	create	create
		p	1		resourceManager
		p	2		dataPackContents
		p	3		combinedDynamicRegistries
		p	4		loadContext
c	adw$f	net/minecraft/server/WorldLoader$WorldDataSupplier
	m	(Ladw$a;)Ladw$b;	get	get
		p	1		context
c	adx	net/minecraft/server/WorldStem
	m	()Lakx;	a	resourceManager
	m	()Ladn;	b	dataPackResources
	m	()Lhk;	c	registries
	m	()Ldyk;	d	worldData
	f	Lakx;	a	resourceManager
	f	Ladn;	b	dataPackResources
	f	Lhk;	c	registries
	f	Ldyk;	d	worldData
c	ady	net/minecraft/server/advancements/AdvancementVisibilityEvaluator
	m	(Lae;Lit/unimi/dsi/fastutil/Stack;Ljava/util/function/Predicate;Lady$a;)Z	a	evaluateVisibility
		p	0		advancement
		p	1		statuses
		p	2		donePredicate
		p	3		consumer
	m	(Lae;Ljava/util/function/Predicate;Lady$a;)V	a	evaluateVisibility
		p	0		advancement
		p	1		donePredicate
		p	2		consumer
	m	(Lae;Z)Lady$b;	a	evaluateVisibilityRule
		p	0		advancement
		p	1		force
	m	(Lit/unimi/dsi/fastutil/Stack;)Z	a	evaluateVisiblityForUnfinishedNode
		p	0		statuses
	f	I	a	VISIBILITY_DEPTH
c	ady$a	net/minecraft/server/advancements/AdvancementVisibilityEvaluator$Output
	m	(Lae;Z)V	accept	accept
		p	1		advancement
		p	2		shouldDisplay
c	ady$b	net/minecraft/server/advancements/AdvancementVisibilityEvaluator$VisibilityRule
	m	()[Lady$b;	a	$values
	f	Lady$b;	a	SHOW
	f	Lady$b;	b	HIDE
	f	Lady$b;	c	NO_CHANGE
	f	[Lady$b;	d	$VALUES
c	adz	net/minecraft/server/advancements/package-info
c	aea	net/minecraft/server/bossevents/CustomBossEvent
	m	(Ladd;Ltj;)V	<init>	<init>
		p	1		id
		p	2		displayName
	m	()Ladd;	a	getTextId
	m	(I)V	a	setValue
		p	1		value
	m	(Laiq;)V	a	addPlayer
		p	1		player
	m	(Ljava/util/Collection;)Z	a	setPlayers
		p	1		players
	m	(Ljava/util/UUID;)V	a	addOfflinePlayer
		p	1		uuid
	m	(Lre;Ladd;)Laea;	a	load
		p	0		nbt
		p	1		id
	m	(Luf;)Luf;	a	lambda$getDisplayName$0
		p	1		style
	m	()V	b	removeAllPlayers
	m	(I)V	b	setMax
		p	1		maxValue
	m	(Laiq;)V	b	removePlayer
		p	1		player
	m	()I	c	getValue
	m	(Laiq;)V	c	onPlayerConnect
		p	1		player
	m	()I	d	getMax
	m	(Laiq;)V	d	onPlayerDisconnect
		p	1		player
	m	()Ltj;	e	getDisplayName
	m	()Lre;	f	save
	f	Ladd;	h	id
	f	Ljava/util/Set;	i	players
	f	I	j	value
	f	I	k	max
c	aeb	net/minecraft/server/bossevents/CustomBossEvents
	m	()Ljava/util/Collection;	a	getIds
	m	(Ladd;)Laea;	a	get
		p	1		id
	m	(Ladd;Ltj;)Laea;	a	create
		p	1		id
		p	2		displayName
	m	(Laea;)V	a	remove
		p	1		bossBar
	m	(Laiq;)V	a	onPlayerConnect
		p	1		player
	m	(Lre;)V	a	load
		p	1		nbt
	m	()Ljava/util/Collection;	b	getEvents
	m	(Laiq;)V	b	onPlayerDisconnect
		p	1		player
	m	()Lre;	c	save
	f	Ljava/util/Map;	a	events
c	aec	net/minecraft/server/bossevents/package-info
c	aed	net/minecraft/server/chase/ChaseClient
	m	(Ljava/lang/String;ILnet/minecraft/server/MinecraftServer;)V	<init>	<init>
		p	1		ip
		p	2		port
		p	3		minecraftServer
	m	()V	a	start
	m	(Laed$a;)V	a	lambda$handleTeleport$0
		p	1		pos
	m	(Ljava/lang/String;)V	a	handleMessage
		p	1		message
	m	(Ljava/util/Scanner;)V	a	handleTeleport
		p	1		scanner
	m	()V	b	stop
	m	(Ljava/lang/String;)V	b	executeCommand
		p	1		command
	m	(Ljava/util/Scanner;)Ljava/util/Optional;	b	parseTarget
		p	1		scanner
	m	()V	c	run
	m	(Ljava/lang/String;)V	c	lambda$executeCommand$1
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	I	b	RECONNECT_INTERVAL_SECONDS
	f	Ljava/lang/String;	c	serverHost
	f	I	d	serverPort
	f	Lnet/minecraft/server/MinecraftServer;	e	server
	f	Z	f	wantsToRun
	f	Ljava/net/Socket;	g	socket
	f	Ljava/lang/Thread;	h	thread
c	aed$a	net/minecraft/server/chase/ChaseClient$TeleportTarget
	m	(Ladc;Lede;Ledd;)V	<init>	<init>
		p	1		dimension
		p	2		pos
		p	3		rot
	m	()Ladc;	a	level
	m	()Lede;	b	pos
	m	()Ledd;	c	rot
	f	Ladc;	a	level
	f	Lede;	b	pos
	f	Ledd;	c	rot
c	aee	net/minecraft/server/chase/ChaseServer
	m	(Ljava/lang/String;ILalu;I)V	<init>	<init>
		p	1		ip
		p	2		port
		p	3		playerManager
		p	4		interval
	m	()V	a	start
	m	(Ljava/net/Socket;[B)V	a	lambda$runSender$0
	m	()V	b	stop
	m	()V	c	runSender
	m	()V	d	runAcceptor
	m	()Laee$a;	e	getPlayerPosition
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/lang/String;	b	serverBindAddress
	f	I	c	serverPort
	f	Lalu;	d	playerList
	f	I	e	broadcastIntervalMs
	f	Z	f	wantsToRun
	f	Ljava/net/ServerSocket;	g	serverSocket
	f	Ljava/util/concurrent/CopyOnWriteArrayList;	h	clientSockets
c	aee$a	net/minecraft/server/chase/ChaseServer$PlayerPosition
	m	()Ljava/lang/String;	a	dimensionName
	m	()D	b	x
	m	()D	c	y
	m	()D	d	z
	m	()F	e	yRot
	m	()F	f	xRot
	m	()Ljava/lang/String;	g	format
	f	Ljava/lang/String;	a	dimensionName
	f	D	b	x
	f	D	c	y
	f	D	d	z
	f	F	e	yRot
	f	F	f	xRot
c	aef	net/minecraft/server/chase/package-info
c	aeg	net/minecraft/server/commands/AdvancementCommands
	m	(Lae;Laeg$b;)Ljava/util/List;	a	getAdvancements
		p	0		advancement
		p	1		selection
	m	(Lae;Ljava/util/List;)V	a	addChildren
		p	0		parent
		p	1		childList
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$15
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$register$10
		p	0		context
		p	1		builder
	m	(Ldr;)Z	a	lambda$register$1
		p	0		source
	m	(Ldr;Ljava/util/Collection;Laeg$a;Lae;Ljava/lang/String;)I	a	performCriterion
		p	0		source
		p	1		targets
		p	2		operation
		p	3		advancement
		p	4		criterion
	m	(Ldr;Ljava/util/Collection;Laeg$a;Ljava/util/Collection;)I	a	perform
		p	0		source
		p	1		targets
		p	2		operation
		p	3		selection
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$14
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	b	lambda$register$3
		p	0		context
		p	1		builder
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$13
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	c	lambda$static$0
		p	0		context
		p	1		builder
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$12
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$11
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$9
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$8
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	h	lambda$register$7
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	i	lambda$register$6
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	j	lambda$register$5
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	k	lambda$register$4
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	l	lambda$register$2
		p	0		context
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	a	SUGGEST_ADVANCEMENTS
c	aeg$a	net/minecraft/server/commands/AdvancementCommands$Action
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()Ljava/lang/String;	a	getKey
	m	(Laiq;Lae;)Z	a	perform
		p	1		player
		p	2		advancement
	m	(Laiq;Lae;Ljava/lang/String;)Z	a	performCriterion
		p	1		player
		p	2		advancement
		p	3		criterion
	m	(Laiq;Ljava/lang/Iterable;)I	a	perform
		p	1		player
		p	2		advancements
	m	()[Laeg$a;	b	$values
	f	Laeg$a;	a	GRANT
	f	Laeg$a;	b	REVOKE
	f	Ljava/lang/String;	c	key
	f	[Laeg$a;	d	$VALUES
c	aeg$a$1	net/minecraft/server/commands/AdvancementCommands$Action$1
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	(Laiq;Lae;)Z	a	perform
		p	1		player
		p	2		advancement
	m	(Laiq;Lae;Ljava/lang/String;)Z	a	performCriterion
		p	1		player
		p	2		advancement
		p	3		criterion
c	aeg$a$2	net/minecraft/server/commands/AdvancementCommands$Action$2
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	(Laiq;Lae;)Z	a	perform
		p	1		player
		p	2		advancement
	m	(Laiq;Lae;Ljava/lang/String;)Z	a	performCriterion
		p	1		player
		p	2		advancement
		p	3		criterion
c	aeg$b	net/minecraft/server/commands/AdvancementCommands$Mode
	m	(Ljava/lang/String;IZZ)V	<init>	<init>
		p	3		before
		p	4		after
	m	()[Laeg$b;	a	$values
	f	Laeg$b;	a	ONLY
	f	Laeg$b;	b	THROUGH
	f	Laeg$b;	c	FROM
	f	Laeg$b;	d	UNTIL
	f	Laeg$b;	e	EVERYTHING
	f	Z	f	parents
	f	Z	g	children
	f	[Laeg$b;	h	$VALUES
c	aeh	net/minecraft/server/commands/AttributeCommand
	m	(Lbfh;)Lbfx;	a	getLivingEntity
		p	0		entity
	m	(Lbfh;Lhd;)Lbha;	a	getAttributeInstance
		p	0		entity
		p	1		attribute
	m	(Lcom/mojang/brigadier/CommandDispatcher;Ldl;)V	a	register
		p	0		dispatcher
		p	1		registryAccess
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$15
		p	0		context
	m	(Ldr;)Z	a	lambda$register$4
		p	0		source
	m	(Ldr;Lbfh;Lhd;D)I	a	getAttributeValue
		p	0		source
		p	1		target
		p	2		attribute
		p	3		multiplier
	m	(Ldr;Lbfh;Lhd;Ljava/util/UUID;)I	a	removeModifier
		p	0		source
		p	1		target
		p	2		attribute
		p	3		uuid
	m	(Ldr;Lbfh;Lhd;Ljava/util/UUID;D)I	a	getAttributeModifier
		p	0		source
		p	1		target
		p	2		attribute
		p	3		uuid
		p	4		multiplier
	m	(Ldr;Lbfh;Lhd;Ljava/util/UUID;Ljava/lang/String;DLbhc$a;)I	a	addModifier
		p	0		source
		p	1		target
		p	2		attribute
		p	3		uuid
		p	4		name
		p	5		value
		p	7		operation
	m	(Lhd;)Ltj;	a	getAttributeDescription
		p	0		attribute
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		name
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$1
		p	0		entityName
		p	1		attributeName
	m	(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$3
		p	0		entityName
		p	1		attributeName
		p	2		uuid
	m	(Lbfh;Lhd;)Lbfx;	b	getEntityWithAttribute
		p	0		entity
		p	1		attribute
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$14
		p	0		context
	m	(Ldr;Lbfh;Lhd;D)I	b	getAttributeBase
		p	0		source
		p	1		target
		p	2		attribute
		p	3		multiplier
	m	(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$2
		p	0		entityName
		p	1		attributeName
		p	2		uuid
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$13
		p	0		context
	m	(Ldr;Lbfh;Lhd;D)I	c	setAttributeBase
		p	0		source
		p	1		target
		p	2		attribute
		p	3		value
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$12
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$11
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$10
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$9
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	h	lambda$register$8
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	i	lambda$register$7
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	j	lambda$register$6
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	k	lambda$register$5
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	ERROR_NOT_LIVING_ENTITY
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	b	ERROR_NO_SUCH_ATTRIBUTE
	f	Lcom/mojang/brigadier/exceptions/Dynamic3CommandExceptionType;	c	ERROR_NO_SUCH_MODIFIER
	f	Lcom/mojang/brigadier/exceptions/Dynamic3CommandExceptionType;	d	ERROR_MODIFIER_ALREADY_PRESENT
c	aei	net/minecraft/server/commands/BanIpCommands
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
		p	0		context
	m	(Ldr;)Z	a	lambda$register$0
		p	0		source
	m	(Ldr;Ljava/lang/String;Ltj;)I	a	banIpOrName
		p	0		source
		p	1		target
		p	2		reason
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$1
		p	0		context
	m	(Ldr;Ljava/lang/String;Ltj;)I	b	banIp
		p	0		source
		p	1		targetIp
		p	2		reason
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_INVALID_IP
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_ALREADY_BANNED
c	aej	net/minecraft/server/commands/BanListCommands
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$3
		p	0		context
	m	(Ldr;)Z	a	lambda$register$0
		p	0		source
	m	(Ldr;Ljava/util/Collection;)I	a	showList
		p	0		source
		p	1		targets
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$2
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$1
		p	0		context
c	aek	net/minecraft/server/commands/BanPlayerCommands
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
		p	0		context
	m	(Ldr;)Z	a	lambda$register$0
		p	0		source
	m	(Ldr;Ljava/util/Collection;Ltj;)I	a	banPlayers
		p	0		source
		p	1		targets
		p	2		reason
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$1
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_ALREADY_BANNED
c	ael	net/minecraft/server/commands/BossBarCommands
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)Laea;	a	getBossBar
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$static$2
		p	0		context
		p	1		builder
	m	(Ldr;)I	a	listBars
		p	0		source
	m	(Ldr;Ladd;Ltj;)I	a	createBar
		p	0		source
		p	1		name
		p	2		displayName
	m	(Ldr;Laea;)I	a	getValue
		p	0		source
		p	1		bossBar
	m	(Ldr;Laea;I)I	a	setValue
		p	0		source
		p	1		bossBar
		p	2		value
	m	(Ldr;Laea;Lbdo$a;)I	a	setColor
		p	0		source
		p	1		bossBar
		p	2		color
	m	(Ldr;Laea;Lbdo$b;)I	a	setStyle
		p	0		source
		p	1		bossBar
		p	2		style
	m	(Ldr;Laea;Ljava/util/Collection;)I	a	setPlayers
		p	0		source
		p	1		bossBar
		p	2		players
	m	(Ldr;Laea;Ltj;)I	a	setName
		p	0		source
		p	1		bossBar
		p	2		name
	m	(Ldr;Laea;Z)I	a	setVisible
		p	0		source
		p	1		bossBar
		p	2		visible
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$1
		p	0		name
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$28
		p	0		context
	m	(Ldr;)Z	b	lambda$register$3
		p	0		source
	m	(Ldr;Laea;)I	b	getMax
		p	0		source
		p	1		bossBar
	m	(Ldr;Laea;I)I	b	setMax
		p	0		source
		p	1		bossBar
		p	2		value
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$0
		p	0		name
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$27
		p	0		context
	m	(Ldr;Laea;)I	c	getVisible
		p	0		source
		p	1		bossBar
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$26
		p	0		context
	m	(Ldr;Laea;)I	d	getPlayers
		p	0		source
		p	1		bossBar
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$25
		p	0		context
	m	(Ldr;Laea;)I	e	removeBar
		p	0		source
		p	1		bossBar
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$24
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$23
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	h	lambda$register$22
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	i	lambda$register$21
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	j	lambda$register$20
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	k	lambda$register$19
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	l	lambda$register$18
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	m	lambda$register$17
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	n	lambda$register$16
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	o	lambda$register$15
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	p	lambda$register$14
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	q	lambda$register$13
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	r	lambda$register$12
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	s	lambda$register$11
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	t	lambda$register$10
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	u	lambda$register$9
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	v	lambda$register$8
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	w	lambda$register$7
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	x	lambda$register$6
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	y	lambda$register$5
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	z	lambda$register$4
		p	0		context
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	a	SUGGEST_BOSS_BAR
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_ALREADY_EXISTS
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	c	ERROR_DOESNT_EXIST
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	d	ERROR_NO_PLAYER_CHANGE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	e	ERROR_NO_NAME_CHANGE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	f	ERROR_NO_COLOR_CHANGE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	g	ERROR_NO_STYLE_CHANGE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	h	ERROR_NO_VALUE_CHANGE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	i	ERROR_NO_MAX_CHANGE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	j	ERROR_ALREADY_HIDDEN
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	k	ERROR_ALREADY_VISIBLE
c	aem	net/minecraft/server/commands/ChaseCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$6
		p	0		context
	m	(Ldr;)I	a	stop
		p	0		source
	m	(Ldr;Ljava/lang/String;I)I	a	lead
		p	0		source
		p	1		ip
		p	2		port
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$5
		p	0		context
	m	(Ldr;)Z	b	alreadyRunning
		p	0		source
	m	(Ldr;Ljava/lang/String;I)I	b	follow
		p	0		source
		p	1		ip
		p	2		port
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$4
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$3
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$2
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$1
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$0
		p	0		context
	f	Lcom/google/common/collect/BiMap;	a	DIMENSION_NAMES
	f	Ljava/lang/String;	b	DEFAULT_CONNECT_HOST
	f	Ljava/lang/String;	c	DEFAULT_BIND_ADDRESS
	f	I	d	DEFAULT_PORT
	f	I	e	BROADCAST_INTERVAL_MS
	f	Laee;	f	chaseServer
	f	Laed;	g	chaseClient
c	aen	net/minecraft/server/commands/ClearInventoryCommands
	m	(Lcfv;)Z	a	lambda$register$5
		p	0		stack
	m	(Lcom/mojang/brigadier/CommandDispatcher;Ldl;)V	a	register
		p	0		dispatcher
		p	1		commandRegistryAccess
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$8
		p	0		context
	m	(Ldr;)Z	a	lambda$register$2
		p	0		source
	m	(Ldr;Ljava/util/Collection;Ljava/util/function/Predicate;I)I	a	clearInventory
		p	0		source
		p	1		targets
		p	2		item
		p	3		maxCount
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$1
		p	0		playerCount
	m	(Lcfv;)Z	b	lambda$register$3
		p	0		stack
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$7
		p	0		context
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$0
		p	0		playerName
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$6
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$4
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	ERROR_SINGLE
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_MULTIPLE
c	aeo	net/minecraft/server/commands/CloneCommands
	m	(Laeo$b;Laeo$b;Laeo$b;Laeo$b;Lcom/mojang/brigadier/builder/ArgumentBuilder;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	wrapWithCloneMode
		p	0		beginPosGetter
		p	1		endPosGetter
		p	2		destinationPosGetter
		p	3		filterGetter
		p	4		builder
	m	(Laeo$b;Laeo$b;Laeo$b;Laeo$b;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$wrapWithCloneMode$22
		p	4		context
	m	(Laeo$b;Laeo$b;Laeo$b;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$destinationAndModeSuffix$19
		p	3		context
	m	(Laeo$b;Lcom/mojang/brigadier/context/CommandContext;)Laeo$c;	a	lambda$destinationAndModeSuffix$9
		p	1		context
	m	(Lcom/mojang/brigadier/CommandDispatcher;Ldl;)V	a	register
		p	0		dispatcher
		p	1		commandRegistryAccess
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/function/Predicate;	a	lambda$destinationAndModeSuffix$18
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Laip;Ljava/lang/String;)Laeo$c;	a	getLoadedDimensionAndPosition
		p	0		context
		p	1		world
		p	2		name
	m	(Ldbu;)Z	a	lambda$destinationAndModeSuffix$14
	m	(Ldl;Laeo$b;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	beginEndDestinationAndModeSuffix
		p	0		commandRegistryAccess
		p	1		worldGetter
	m	(Ldl;Laeo$b;Laeo$b;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	destinationAndModeSuffix
		p	0		commandRegistryAccess
		p	1		sourceWorldGetter
		p	2		targetWorldGetter
	m	(Ldr;)Z	a	lambda$register$2
		p	0		source
	m	(Ldr;Laeo$c;Laeo$c;Laeo$c;Ljava/util/function/Predicate;Laeo$d;)I	a	clone
		p	0		source
		p	1		begin
		p	2		end
		p	3		destination
		p	4		filter
		p	5		mode
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		maxCount
		p	1		count
	m	(Laeo$b;Laeo$b;Laeo$b;Laeo$b;Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$wrapWithCloneMode$21
		p	4		context
	m	(Laeo$b;Laeo$b;Laeo$b;Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$destinationAndModeSuffix$17
		p	3		context
	m	(Laeo$b;Lcom/mojang/brigadier/context/CommandContext;)Laeo$c;	b	lambda$destinationAndModeSuffix$8
		p	1		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/function/Predicate;	b	lambda$destinationAndModeSuffix$16
		p	0		context
	m	(Ldbu;)Z	b	lambda$destinationAndModeSuffix$12
	m	(Laeo$b;Laeo$b;Laeo$b;Laeo$b;Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$wrapWithCloneMode$20
		p	4		context
	m	(Laeo$b;Laeo$b;Laeo$b;Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$destinationAndModeSuffix$15
		p	3		context
	m	(Laeo$b;Lcom/mojang/brigadier/context/CommandContext;)Laeo$c;	c	lambda$destinationAndModeSuffix$7
		p	1		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/function/Predicate;	c	lambda$destinationAndModeSuffix$13
		p	0		context
	m	(Ldbu;)Z	c	lambda$destinationAndModeSuffix$10
	m	(Laeo$b;Laeo$b;Laeo$b;Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$destinationAndModeSuffix$11
		p	3		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)Laip;	d	lambda$beginEndDestinationAndModeSuffix$6
		p	0		context
	m	(Ldbu;)Z	d	lambda$static$1
		p	0		pos
	m	(Lcom/mojang/brigadier/context/CommandContext;)Laip;	e	lambda$beginEndDestinationAndModeSuffix$5
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)Laip;	f	lambda$register$4
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)Laip;	g	lambda$register$3
		p	0		context
	f	Ljava/util/function/Predicate;	a	FILTER_AIR
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_OVERLAP
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	c	ERROR_AREA_TOO_LARGE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	d	ERROR_FAILED
c	aeo$a	net/minecraft/server/commands/CloneCommands$CloneBlockInfo
	m	(Lgt;Ldbq;Lre;)V	<init>	<init>
		p	1		pos
		p	2		state
		p	3		blockEntityNbt
	f	Lgt;	a	pos
	f	Ldbq;	b	state
	f	Lre;	c	tag
c	aeo$b	net/minecraft/server/commands/CloneCommands$CommandFunction
	m	(Ljava/lang/Object;)Ljava/lang/Object;	apply	apply
		p	1		value
c	aeo$c	net/minecraft/server/commands/CloneCommands$DimensionAndPosition
	m	()Laip;	a	dimension
	m	()Lgt;	b	position
	f	Laip;	a	dimension
	f	Lgt;	b	position
c	aeo$d	net/minecraft/server/commands/CloneCommands$Mode
	m	(Ljava/lang/String;IZ)V	<init>	<init>
		p	3		allowsOverlap
	m	()Z	a	canOverlap
	m	()[Laeo$d;	b	$values
	f	Laeo$d;	a	FORCE
	f	Laeo$d;	b	MOVE
	f	Laeo$d;	c	NORMAL
	f	Z	d	canOverlap
	f	[Laeo$d;	e	$VALUES
c	aep	net/minecraft/server/commands/DamageCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;Ldl;)V	a	register
		p	0		dispatcher
		p	1		registryAccess
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$5
		p	0		context
	m	(Ldr;)Z	a	lambda$register$0
		p	0		source
	m	(Ldr;Lbfh;FLbem;)I	a	damage
		p	0		source
		p	1		target
		p	2		amount
		p	3		damageSource
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$4
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$3
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$2
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$1
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_INVULNERABLE
c	aeq	net/minecraft/server/commands/DataPackCommand
	m	(Lakq;)Ltj;	a	lambda$listEnabledPacks$25
		p	0		profile
	m	(Lcau;Lakq;)Z	a	lambda$static$5
		p	1		profile
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$22
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$static$7
		p	0		context
		p	1		builder
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Z)Lakq;	a	getPack
		p	0		context
		p	1		name
		p	2		enable
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Lakq;)V	a	lambda$register$14
		p	1		profiles
		p	2		profile
	m	(Ldr;)I	a	listPacks
		p	0		source
	m	(Ldr;Lakq;)I	a	disablePack
		p	0		source
		p	1		container
	m	(Ldr;Lakq;Laeq$a;)I	a	enablePack
		p	0		source
		p	1		container
		p	2		packAdder
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$2
		p	0		name
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$3
		p	0		name
		p	1		flags
	m	(Ljava/util/Collection;Lcau;Lakq;)Z	a	lambda$listAvailablePacks$23
		p	2		profile
	m	(Ljava/util/Collection;Ljava/lang/String;)Z	a	lambda$static$6
		p	1		name
	m	(Ljava/util/List;Lakq;)V	a	lambda$register$17
		p	0		profiles
		p	1		profile
	m	(Lakq;)Ltj;	b	lambda$listAvailablePacks$24
		p	0		profile
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$21
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	b	lambda$static$4
		p	0		context
		p	1		builder
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Lakq;)V	b	lambda$register$12
		p	1		profiles
		p	2		profile
	m	(Ldr;)I	b	listAvailablePacks
		p	0		source
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$1
		p	0		name
	m	(Ljava/util/List;Lakq;)V	b	lambda$register$10
		p	0		profiles
		p	1		profile
	m	(Lakq;)Lakq;	c	lambda$register$9
		p	0		profile
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$20
		p	0		context
	m	(Ldr;)I	c	listEnabledPacks
		p	0		source
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	c	lambda$static$0
		p	0		name
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$19
		p	0		context
	m	(Ldr;)Z	d	lambda$register$8
		p	0		source
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$18
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$16
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$15
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	h	lambda$register$13
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	i	lambda$register$11
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	ERROR_UNKNOWN_PACK
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_PACK_ALREADY_ENABLED
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	c	ERROR_PACK_ALREADY_DISABLED
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	d	ERROR_PACK_FEATURES_NOT_ENABLED
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	e	SELECTED_PACKS
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	f	UNSELECTED_PACKS
c	aeq$a	net/minecraft/server/commands/DataPackCommand$Inserter
	m	(Ljava/util/List;Lakq;)V	apply	apply
		p	1		profiles
		p	2		profile
c	aer	net/minecraft/server/commands/DeOpCommands
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$register$1
		p	0		context
		p	1		builder
	m	(Ldr;)Z	a	lambda$register$0
		p	0		source
	m	(Ldr;Ljava/util/Collection;)I	a	deopPlayers
		p	0		source
		p	1		targets
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_NOT_OP
c	aes	net/minecraft/server/commands/DebugCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$4
		p	0		context
	m	(Ldr;)I	a	start
		p	0		source
	m	(Ldr;Ljava/util/Collection;)I	a	traceFunction
		p	0		source
		p	1		functions
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$2
		p	0		context
	m	(Ldr;)I	b	stop
		p	0		source
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$1
		p	0		context
	m	(Ldr;)Z	c	lambda$register$3
	m	(Ldr;)Z	d	lambda$register$0
		p	0		source
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_NOT_RUNNING
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_ALREADY_RUNNING
c	aes$a	net/minecraft/server/commands/DebugCommand$Tracer
	m	(Ljava/io/PrintWriter;)V	<init>	<init>
		p	1		writer
	m	()Z	M_	shouldInformAdmins
	m	(I)V	a	indentAndSave
		p	1		width
	m	(ILadd;I)V	a	onCall
		p	1		depth
		p	2		function
		p	3		size
	m	(ILjava/lang/String;)V	a	onCommand
		p	1		depth
		p	2		command
	m	(ILjava/lang/String;I)V	a	onReturn
		p	1		depth
		p	2		command
		p	3		result
	m	(Ltj;)V	a	sendSystemMessage
		p	1		message
	m	(I)V	b	printIndent
		p	1		width
	m	(ILjava/lang/String;)V	b	onError
		p	1		depth
		p	2		message
	m	()Z	d_	acceptsSuccess
	m	()V	e	newLine
	m	()Z	e_	alwaysAccepts
	m	()Z	j_	acceptsFailure
	f	I	b	INDENT_OFFSET
	f	Ljava/io/PrintWriter;	c	output
	f	I	d	lastIndent
	f	Z	e	waitingForResult
c	aet	net/minecraft/server/commands/DebugMobSpawningCommand
	m	(Lbga;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$1
		p	1		context
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Ldr;)Z	a	lambda$register$0
		p	0		source
	m	(Ldr;Lbga;Lgt;)I	a	spawnMobs
		p	0		source
		p	1		group
		p	2		pos
c	aeu	net/minecraft/server/commands/DebugPathCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$1
		p	0		context
	m	(Ldr;)Z	a	lambda$register$0
		p	0		source
	m	(Ldr;Lgt;)I	a	fillBlocks
		p	0		source
		p	1		pos
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_NOT_MOB
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_NO_PATH
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_NOT_COMPLETE
c	aev	net/minecraft/server/commands/DefaultGameModeCommands
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$1
	m	(Ldr;)Z	a	lambda$register$0
		p	0		source
	m	(Ldr;Lcmf;)I	a	setMode
		p	0		source
		p	1		defaultGameMode
c	aew	net/minecraft/server/commands/DifficultyCommand
	m	(Lbdv;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$1
		p	1		context
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$3
		p	0		context
	m	(Ldr;)Z	a	lambda$register$2
		p	0		source
	m	(Ldr;Lbdv;)I	a	setDifficulty
		p	0		source
		p	1		difficulty
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		difficulty
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	ERROR_ALREADY_DIFFICULT
c	aex	net/minecraft/server/commands/EffectCommands
	m	(Lcom/mojang/brigadier/CommandDispatcher;Ldl;)V	a	register
		p	0		dispatcher
		p	1		registryAccess
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$10
		p	0		context
	m	(Ldr;)Z	a	lambda$register$0
		p	0		source
	m	(Ldr;Ljava/util/Collection;)I	a	clearEffects
		p	0		source
		p	1		targets
	m	(Ldr;Ljava/util/Collection;Lhd;)I	a	clearEffect
		p	0		source
		p	1		targets
		p	2		statusEffect
	m	(Ldr;Ljava/util/Collection;Lhd;Ljava/lang/Integer;IZ)I	a	giveEffect
		p	0		source
		p	1		targets
		p	2		statusEffect
		p	3		seconds
		p	4		amplifier
		p	5		showParticles
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$9
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$8
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$7
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$6
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$5
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$4
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	h	lambda$register$3
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	i	lambda$register$2
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	j	lambda$register$1
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_GIVE_FAILED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_CLEAR_EVERYTHING_FAILED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_CLEAR_SPECIFIC_FAILED
c	aey	net/minecraft/server/commands/EmoteCommands
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$1
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lty;)V	a	lambda$register$0
		p	1		message
c	aez	net/minecraft/server/commands/EnchantCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;Ldl;)V	a	register
		p	0		dispatcher
		p	1		registryAccess
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$6
		p	0		context
	m	(Ldr;)Z	a	lambda$register$4
		p	0		source
	m	(Ldr;Ljava/util/Collection;Lhd;I)I	a	enchant
		p	0		source
		p	1		targets
		p	2		enchantment
		p	3		level
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$2
		p	0		itemName
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$3
		p	0		level
		p	1		maxLevel
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$5
		p	0		context
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$1
		p	0		entityName
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	c	lambda$static$0
		p	0		entityName
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	ERROR_NOT_LIVING_ENTITY
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_NO_ITEM
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	c	ERROR_INCOMPATIBLE
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	d	ERROR_LEVEL_TOO_HIGH
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	e	ERROR_NOTHING_HAPPENED
c	afa	net/minecraft/server/commands/ExecuteCommand
	m	(Lafa$a;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$createNumericConditionalHandler$60
		p	1		context
	m	(Lahj;Leg$g;)I	a	checkMatchingData
		p	0		object
		p	1		path
	m	(Lahj;ZLeg$g;Ljava/util/function/IntFunction;Lcom/mojang/brigadier/context/CommandContext;ZI)V	a	lambda$storeData$38
		p	4		context
		p	5		success
		p	6		result
	m	(Lahk$c;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$addConditionals$57
		p	1		context
	m	(Lahk$c;ZLcom/mojang/brigadier/context/CommandContext;)Ldr;	a	lambda$wrapStores$34
		p	2		context
	m	(Laip;Lgt;)Z	a	isChunkLoaded
		p	0		world
		p	1		pos
	m	(Laip;Lgt;Lgt;Lgt;Z)Ljava/util/OptionalInt;	a	checkRegions
		p	0		world
		p	1		start
		p	2		end
		p	3		destination
		p	4		masked
	m	(Lbfh;)Ljava/util/stream/Stream;	a	lambda$createRelationOperations$78
		p	0		entity
	m	(Lcom/mojang/brigadier/CommandDispatcher;Ldl;)V	a	register
		p	0		dispatcher
		p	1		commandRegistryAccess
	m	(Lcom/mojang/brigadier/ResultConsumer;Lcom/mojang/brigadier/ResultConsumer;)Lcom/mojang/brigadier/ResultConsumer;	a	lambda$static$3
		p	0		consumer
		p	1		consumer2
	m	(Lcom/mojang/brigadier/ResultConsumer;Lcom/mojang/brigadier/ResultConsumer;Lcom/mojang/brigadier/context/CommandContext;ZI)V	a	lambda$static$2
		p	2		context
		p	3		success
		p	4		result
	m	(Lcom/mojang/brigadier/context/CommandContext;)Z	a	lambda$addConditionals$55
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;I)Lrx;	a	lambda$wrapStores$33
		p	1		result
	m	(Lcom/mojang/brigadier/context/CommandContext;Lci$d;)Z	a	checkScore
		p	0		context
		p	1		range
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$static$4
		p	0		context
		p	1		builder
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/util/function/BiPredicate;)Z	a	checkScore
		p	0		context
		p	1		condition
	m	(Lcom/mojang/brigadier/context/CommandContext;Z)I	a	checkIfRegions
		p	0		context
		p	1		masked
	m	(Lcom/mojang/brigadier/context/CommandContext;ZZ)Ljava/util/Collection;	a	expect
		p	0		context
		p	1		positive
		p	2		value
	m	(Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/builder/ArgumentBuilder;ZLafa$b;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	addConditional
		p	0		root
		p	1		builder
		p	2		positive
		p	3		condition
	m	(Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/builder/ArgumentBuilder;ZZ)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	addIfBlocksConditional
		p	0		root
		p	1		builder
		p	2		positive
		p	3		masked
	m	(Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/builder/LiteralArgumentBuilder;)Lcom/mojang/brigadier/builder/LiteralArgumentBuilder;	a	createRelationOperations
		p	0		node
		p	1		builder
	m	(Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/builder/LiteralArgumentBuilder;ZLdl;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	addConditionals
		p	0		root
		p	1		argumentBuilder
		p	2		positive
		p	3		commandRegistryAccess
	m	(Lcom/mojang/brigadier/tree/CommandNode;ZLahk$c;Lcom/mojang/brigadier/builder/ArgumentBuilder;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	lambda$addConditionals$58
		p	3		builder
	m	(Lcom/mojang/brigadier/tree/LiteralCommandNode;Lahk$c;ZLcom/mojang/brigadier/builder/ArgumentBuilder;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	lambda$wrapStores$35
		p	3		builder
	m	(Lcom/mojang/brigadier/tree/LiteralCommandNode;Lcom/mojang/brigadier/builder/LiteralArgumentBuilder;Z)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	wrapStores
		p	0		node
		p	1		builder
		p	2		requestResult
	m	(Ldr;)Z	a	lambda$register$6
		p	0		source
	m	(Ldr;Laea;ZZ)Ldr;	a	storeValue
		p	0		source
		p	1		bossBar
		p	2		storeInValue
		p	3		requestResult
	m	(Ldr;Lahj;Leg$g;Ljava/util/function/IntFunction;Z)Ldr;	a	storeData
		p	0		source
		p	1		object
		p	2		path
		p	3		nbtSetter
		p	4		requestResult
	m	(Ldr;Lbfh;)Ljava/util/List;	a	lambda$expandOneToOneEntityRelation$67
		p	1		entity
	m	(Ldr;Lebl;)Z	a	checkCustomPredicate
		p	0		source
		p	1		condition
	m	(Ldr;Lhd$c;)Ldr;	a	spawnEntityAndRedirect
		p	0		source
		p	1		entityType
	m	(Ldr;Ljava/util/Collection;Ledz;Z)Ldr;	a	storeValue
		p	0		source
		p	1		targets
		p	2		objective
		p	3		requestResult
	m	(Ljava/lang/Integer;Ljava/lang/Integer;)Z	a	lambda$addConditionals$50
		p	0		a
		p	1		b
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$1
		p	0		count
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		maxCount
		p	1		count
	m	(Ljava/util/Collection;Leec;Ledz;ZLcom/mojang/brigadier/context/CommandContext;ZI)V	a	lambda$storeValue$36
		p	4		context
		p	5		success
		p	6		result
	m	(Ljava/util/function/Function;)Lcom/mojang/brigadier/RedirectModifier;	a	expandOneToOneEntityRelation
		p	0		function
	m	(Ljava/util/function/Function;Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection;	a	lambda$expandOneToManyEntityRelation$70
		p	1		context
	m	(ZLafa$a;)Lcom/mojang/brigadier/Command;	a	createNumericConditionalHandler
		p	0		positive
		p	1		condition
	m	(ZLafa$b;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$addConditional$62
		p	2		context
	m	(ZLahk$c;Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection;	a	lambda$addConditionals$56
		p	2		context
	m	(ZLcom/mojang/brigadier/context/CommandContext;)I	a	lambda$addIfBlocksConditional$65
		p	1		context
	m	(ZZLaea;Lcom/mojang/brigadier/context/CommandContext;ZI)V	a	lambda$storeValue$37
		p	3		context
		p	4		success
		p	5		result
	m	(ZZLcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection;	a	lambda$addIfBlocksConditional$63
		p	2		context
	m	(Lafa$a;Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$createNumericConditionalHandler$59
		p	1		context
	m	(Lahk$c;ZLcom/mojang/brigadier/context/CommandContext;)Ldr;	b	lambda$wrapStores$32
		p	2		context
	m	(Lbfh;)Ljava/util/Optional;	b	lambda$createRelationOperations$77
		p	0		entity
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$addConditionals$54
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;I)Lrx;	b	lambda$wrapStores$31
		p	1		result
	m	(Lcom/mojang/brigadier/context/CommandContext;Z)I	b	checkUnlessRegions
		p	0		context
		p	1		masked
	m	(Ldr;)Z	b	lambda$register$5
		p	0		source
	m	(Ljava/lang/Integer;Ljava/lang/Integer;)Z	b	lambda$addConditionals$48
		p	0		a
		p	1		b
	m	(Ljava/util/function/Function;)Lcom/mojang/brigadier/RedirectModifier;	b	expandOneToManyEntityRelation
		p	0		function
	m	(Ljava/util/function/Function;Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection;	b	lambda$expandOneToOneEntityRelation$68
		p	1		context
	m	(ZLafa$b;Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection;	b	lambda$addConditional$61
		p	2		context
	m	(ZLcom/mojang/brigadier/context/CommandContext;)I	b	lambda$addIfBlocksConditional$64
		p	1		context
	m	(Lahk$c;ZLcom/mojang/brigadier/context/CommandContext;)Ldr;	c	lambda$wrapStores$30
		p	2		context
	m	(Lbfh;)Ljava/util/Optional;	c	lambda$createRelationOperations$76
		p	0		entity
	m	(Lcom/mojang/brigadier/context/CommandContext;)Z	c	lambda$addConditionals$52
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;I)Lrx;	c	lambda$wrapStores$29
		p	1		result
	m	(Lcom/mojang/brigadier/context/CommandContext;Z)Ljava/util/OptionalInt;	c	checkRegions
		p	0		context
		p	1		masked
	m	(Ljava/lang/Integer;Ljava/lang/Integer;)Z	c	lambda$addConditionals$46
		p	0		a
		p	1		b
	m	(ZLcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection;	c	lambda$addConditionals$53
		p	1		context
	m	(Lahk$c;ZLcom/mojang/brigadier/context/CommandContext;)Ldr;	d	lambda$wrapStores$28
		p	2		context
	m	(Lbfh;)Ljava/util/Optional;	d	lambda$createRelationOperations$75
		p	0		entity
	m	(Lcom/mojang/brigadier/context/CommandContext;)Z	d	lambda$addConditionals$51
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;I)Lrx;	d	lambda$wrapStores$27
		p	1		result
	m	(Ljava/lang/Integer;Ljava/lang/Integer;)Z	d	lambda$addConditionals$44
		p	0		a
		p	1		b
	m	(ZLcom/mojang/brigadier/context/CommandContext;)Ldr;	d	lambda$wrapStores$22
		p	1		context
	m	(Lahk$c;ZLcom/mojang/brigadier/context/CommandContext;)Ldr;	e	lambda$wrapStores$26
		p	2		context
	m	(Lbfh;)Ljava/util/Optional;	e	lambda$createRelationOperations$74
		p	0		entity
	m	(Lcom/mojang/brigadier/context/CommandContext;)Z	e	lambda$addConditionals$49
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;I)Lrx;	e	lambda$wrapStores$25
		p	1		result
	m	(ZLcom/mojang/brigadier/context/CommandContext;)Ldr;	e	lambda$wrapStores$21
		p	1		context
	m	(Lahk$c;ZLcom/mojang/brigadier/context/CommandContext;)Ldr;	f	lambda$wrapStores$24
		p	2		context
	m	(Lbfh;)Ljava/util/Optional;	f	lambda$createRelationOperations$73
		p	0		entity
	m	(Lcom/mojang/brigadier/context/CommandContext;)Z	f	lambda$addConditionals$47
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;I)Lrx;	f	lambda$wrapStores$23
		p	1		result
	m	(ZLcom/mojang/brigadier/context/CommandContext;)Ldr;	f	lambda$wrapStores$20
		p	1		context
	m	(Lbfh;)Ljava/util/Optional;	g	lambda$createRelationOperations$72
		p	0		entity
	m	(Lcom/mojang/brigadier/context/CommandContext;)Z	g	lambda$addConditionals$45
		p	0		context
	m	(Lbfh;)Ljava/util/Optional;	h	lambda$createRelationOperations$71
		p	0		entity
	m	(Lcom/mojang/brigadier/context/CommandContext;)Z	h	lambda$addConditionals$43
		p	0		context
	m	(Lbfh;)Z	i	lambda$expandOneToManyEntityRelation$69
		p	0		entity
	m	(Lcom/mojang/brigadier/context/CommandContext;)Z	i	lambda$addConditionals$42
		p	0		context
	m	(Lbfh;)Z	j	lambda$expandOneToOneEntityRelation$66
		p	0		entity
	m	(Lcom/mojang/brigadier/context/CommandContext;)Z	j	lambda$addConditionals$41
	m	(Lcom/mojang/brigadier/context/CommandContext;)Z	k	lambda$addConditionals$40
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)Z	l	lambda$addConditionals$39
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ldr;	m	lambda$register$19
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ldr;	n	lambda$register$18
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ldr;	o	lambda$register$17
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ldr;	p	lambda$register$16
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ldr;	q	lambda$register$15
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection;	r	lambda$register$14
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection;	s	lambda$register$13
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ldr;	t	lambda$register$12
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ldr;	u	lambda$register$11
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection;	v	lambda$register$10
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ldr;	w	lambda$register$9
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection;	x	lambda$register$8
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection;	y	lambda$register$7
		p	0		context
	f	I	a	MAX_TEST_AREA
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	b	ERROR_AREA_TOO_LARGE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_CONDITIONAL_FAILED
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	d	ERROR_CONDITIONAL_FAILED_COUNT
	f	Ljava/util/function/BinaryOperator;	e	CALLBACK_CHAINER
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	f	SUGGEST_PREDICATE
c	afa$a	net/minecraft/server/commands/ExecuteCommand$CommandNumericPredicate
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	test	test
		p	1		context
c	afa$b	net/minecraft/server/commands/ExecuteCommand$CommandPredicate
	m	(Lcom/mojang/brigadier/context/CommandContext;)Z	test	test
		p	1		context
c	afb	net/minecraft/server/commands/ExperienceCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$8
		p	0		context
	m	(Ldr;)Z	a	lambda$register$9
		p	0		source
	m	(Ldr;Laiq;Lafb$a;)I	a	queryExperience
		p	0		source
		p	1		player
		p	2		component
	m	(Ldr;Ljava/util/Collection;ILafb$a;)I	a	addExperience
		p	0		source
		p	1		targets
		p	2		amount
		p	3		component
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$7
		p	0		context
	m	(Ldr;)Z	b	lambda$register$0
		p	0		source
	m	(Ldr;Ljava/util/Collection;ILafb$a;)I	b	setExperience
		p	0		source
		p	1		targets
		p	2		amount
		p	3		component
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$6
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$5
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$4
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$3
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$2
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	h	lambda$register$1
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_SET_POINTS_INVALID
c	afb$a	net/minecraft/server/commands/ExperienceCommand$Type
	m	(Ljava/lang/String;ILjava/lang/String;Ljava/util/function/BiConsumer;Ljava/util/function/BiPredicate;Ljava/util/function/ToIntFunction;)V	<init>	<init>
		p	3		name
		p	4		adder
		p	5		setter
		p	6		getter
	m	()[Lafb$a;	a	$values
	m	(Laiq;)I	a	lambda$static$3
		p	0		player
	m	(Laiq;Ljava/lang/Integer;)Z	a	lambda$static$2
		p	0		player
		p	1		level
	m	(Laiq;)I	b	lambda$static$1
		p	0		player
	m	(Laiq;Ljava/lang/Integer;)Z	b	lambda$static$0
		p	0		player
		p	1		xp
	f	Lafb$a;	a	POINTS
	f	Lafb$a;	b	LEVELS
	f	Ljava/util/function/BiConsumer;	c	add
	f	Ljava/util/function/BiPredicate;	d	set
	f	Ljava/lang/String;	e	name
	f	Ljava/util/function/ToIntFunction;	f	query
	f	[Lafb$a;	g	$VALUES
c	afc	net/minecraft/server/commands/FillBiomeCommand
	m	(I)I	a	quantize
		p	0		coordinate
	m	(Lcom/mojang/brigadier/CommandDispatcher;Ldl;)V	a	register
		p	0		dispatcher
		p	1		commandRegistryAccess
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$4
		p	0		context
	m	(Lddn;Ldrh;Ljava/util/function/Predicate;Lorg/apache/commons/lang3/mutable/MutableInt;Lhd;IIILcno$f;)Lhd;	a	lambda$makeResolver$5
		p	5		x
		p	6		y
		p	7		z
		p	8		noise
	m	(Ldr;)Z	a	lambda$register$1
		p	0		source
	m	(Ldr;Lgt;Lgt;Lhd$c;Ljava/util/function/Predicate;)I	a	fill
		p	0		source
		p	1		from
		p	2		to
		p	3		biome
		p	4		filter
	m	(Lgt;)Lgt;	a	quantize
		p	0		pos
	m	(Lhd;)Z	a	lambda$register$2
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		maximum
		p	1		specified
	m	(Lorg/apache/commons/lang3/mutable/MutableInt;Lddn;Ldrh;Lhd;Ljava/util/function/Predicate;)Lcni;	a	makeResolver
		p	0		counter
		p	1		chunk
		p	2		box
		p	3		biome
		p	4		filter
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$3
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_NOT_LOADED
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	b	ERROR_VOLUME_TOO_LARGE
c	afd	net/minecraft/server/commands/FillCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;Ldl;)V	a	register
		p	0		dispatcher
		p	1		commandRegistryAccess
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$9
		p	0		context
	m	(Ldbu;)Z	a	lambda$register$5
		p	0		pos
	m	(Ldr;)Z	a	lambda$register$1
		p	0		source
	m	(Ldr;Ldrh;Lfc;Lafd$a;Ljava/util/function/Predicate;)I	a	fillBlocks
		p	0		source
		p	1		range
		p	2		block
		p	3		mode
		p	4		filter
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		maxCount
		p	1		count
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$8
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$7
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$6
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$4
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$3
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$2
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	a	ERROR_AREA_TOO_LARGE
	f	Lfc;	b	HOLLOW_CORE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_FAILED
c	afd$a	net/minecraft/server/commands/FillCommand$Mode
	m	(Ljava/lang/String;ILagm$a;)V	<init>	<init>
		p	3		filter
	m	()[Lafd$a;	a	$values
	m	(Ldrh;Lgt;Lfc;Laip;)Lfc;	a	lambda$static$3
		p	0		range
		p	1		pos
		p	2		block
		p	3		world
	m	(Ldrh;Lgt;Lfc;Laip;)Lfc;	b	lambda$static$2
		p	0		range
		p	1		pos
		p	2		block
		p	3		world
	m	(Ldrh;Lgt;Lfc;Laip;)Lfc;	c	lambda$static$1
		p	0		range
		p	1		pos
		p	2		block
		p	3		world
	m	(Ldrh;Lgt;Lfc;Laip;)Lfc;	d	lambda$static$0
		p	0		range
		p	1		pos
		p	2		block
		p	3		world
	f	Lafd$a;	a	REPLACE
	f	Lafd$a;	b	OUTLINE
	f	Lafd$a;	c	HOLLOW
	f	Lafd$a;	d	DESTROY
	f	Lagm$a;	e	filter
	f	[Lafd$a;	f	$VALUES
c	afe	net/minecraft/server/commands/ForceLoadCommand
	m	(Laip;J)V	a	lambda$removeAll$10
		p	1		chunkPos
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$9
		p	0		context
	m	(Ldr;)I	a	listForceLoad
		p	0		source
	m	(Ldr;Laig;)I	a	queryForceLoad
		p	0		source
		p	1		pos
	m	(Ldr;Laig;Laig;Z)I	a	changeForceLoad
		p	0		source
		p	1		from
		p	2		to
		p	3		forceLoaded
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$1
		p	0		chunkPos
		p	1		registryKey
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$8
		p	0		context
	m	(Ldr;)I	b	removeAll
		p	0		source
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$0
		p	0		maxCount
		p	1		count
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$7
		p	0		context
	m	(Ldr;)Z	c	lambda$register$2
		p	0		source
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$6
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$5
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$4
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$3
		p	0		context
	f	I	a	MAX_CHUNK_LIMIT
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	b	ERROR_TOO_MANY_CHUNKS
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	c	ERROR_NOT_TICKING
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	d	ERROR_ALL_ADDED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	e	ERROR_NONE_REMOVED
c	aff	net/minecraft/server/commands/FunctionCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$static$0
		p	0		context
		p	1		builder
	m	(Ldr;)Z	a	lambda$register$1
		p	0		source
	m	(Ldr;Ljava/util/Collection;)I	a	runFunction
		p	0		source
		p	1		functions
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	a	SUGGEST_FUNCTION
c	afg	net/minecraft/server/commands/GameModeCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/util/Collection;Lcmf;)I	a	setMode
		p	0		context
		p	1		targets
		p	2		gameMode
	m	(Ldr;)Z	a	lambda$register$0
		p	0		source
	m	(Ldr;Laiq;Lcmf;)V	a	logGamemodeChange
		p	0		source
		p	1		player
		p	2		gameMode
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$1
	f	I	a	PERMISSION_LEVEL
c	afh	net/minecraft/server/commands/GameRuleCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcme$e;)I	a	setRule
		p	0		context
		p	1		key
	m	(Ldr;)Z	a	lambda$register$0
		p	0		source
	m	(Ldr;Lcme$e;)I	a	queryRule
		p	0		source
		p	1		key
c	afh$1	net/minecraft/server/commands/GameRuleCommand$1
	m	(Lcme$e;Lcme$f;)V	a	visit
		p	1		key
		p	2		type
	m	(Lcme$e;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$visit$1
		p	1		context
	m	(Lcme$e;Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$visit$0
		p	1		context
	f	Lcom/mojang/brigadier/builder/LiteralArgumentBuilder;	a	val$base
c	afi	net/minecraft/server/commands/GiveCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;Ldl;)V	a	register
		p	0		dispatcher
		p	1		commandRegistryAccess
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
		p	0		context
	m	(Ldr;)Z	a	lambda$register$0
		p	0		source
	m	(Ldr;Lfu;Ljava/util/Collection;I)I	a	giveItem
		p	0		source
		p	1		item
		p	2		targets
		p	3		count
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$1
		p	0		context
	f	I	a	MAX_ALLOWED_ITEMSTACKS
c	afj	net/minecraft/server/commands/HelpCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/CommandDispatcher;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$1
		p	1		context
	m	(Lcom/mojang/brigadier/CommandDispatcher;Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$0
		p	1		context
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_FAILED
c	afk	net/minecraft/server/commands/ItemCommands
	m	(Lbfh;I)Lcfv;	a	getEntityItem
		p	0		entity
		p	1		slotId
	m	(Lcom/mojang/brigadier/CommandDispatcher;Ldl;)V	a	register
		p	0		dispatcher
		p	1		commandRegistryAccess
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$21
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$static$6
		p	0		context
		p	1		builder
	m	(Ldr;)Z	a	lambda$register$7
		p	0		source
	m	(Ldr;Lbfh;ILgt;I)I	a	entityToBlock
		p	0		source
		p	1		sourceEntity
		p	2		sourceSlot
		p	3		pos
		p	4		slot
	m	(Ldr;Lbfh;ILgt;ILeac;)I	a	entityToBlock
		p	0		source
		p	1		sourceEntity
		p	2		sourceSlot
		p	3		pos
		p	4		slot
		p	5		modifier
	m	(Ldr;Lbfh;ILjava/util/Collection;I)I	a	entityToEntities
		p	0		source
		p	1		sourceEntity
		p	2		sourceSlot
		p	3		targets
		p	4		slot
	m	(Ldr;Lbfh;ILjava/util/Collection;ILeac;)I	a	entityToEntities
		p	0		source
		p	1		sourceEntity
		p	2		sourceSlot
		p	3		targets
		p	4		slot
		p	5		modifier
	m	(Ldr;Leac;Lcfv;)Lcfv;	a	applyModifier
		p	0		source
		p	1		modifier
		p	2		stack
	m	(Ldr;Lgt;I)Lcfv;	a	getBlockItem
		p	0		source
		p	1		pos
		p	2		slotId
	m	(Ldr;Lgt;ILcfv;)I	a	setBlockItem
		p	0		source
		p	1		pos
		p	2		slot
		p	3		stack
	m	(Ldr;Lgt;ILeac;)I	a	modifyBlockItem
		p	0		source
		p	1		pos
		p	2		slot
		p	3		modifier
	m	(Ldr;Lgt;ILgt;I)I	a	blockToBlock
		p	0		source
		p	1		sourcePos
		p	2		sourceSlot
		p	3		pos
		p	4		slot
	m	(Ldr;Lgt;ILgt;ILeac;)I	a	blockToBlock
		p	0		source
		p	1		sourcePos
		p	2		sourceSlot
		p	3		pos
		p	4		slot
		p	5		modifier
	m	(Ldr;Lgt;ILjava/util/Collection;I)I	a	blockToEntities
		p	0		source
		p	1		sourcePos
		p	2		sourceSlot
		p	3		targets
		p	4		slot
	m	(Ldr;Lgt;ILjava/util/Collection;ILeac;)I	a	blockToEntities
		p	0		source
		p	1		sourcePos
		p	2		sourceSlot
		p	3		targets
		p	4		slot
		p	5		modifier
	m	(Ldr;Lgt;Lcom/mojang/brigadier/exceptions/Dynamic3CommandExceptionType;)Lbdr;	a	getContainer
		p	0		source
		p	1		pos
		p	2		exception
	m	(Ldr;Ljava/util/Collection;ILcfv;)I	a	setEntityItem
		p	0		source
		p	1		targets
		p	2		slot
		p	3		stack
	m	(Ldr;Ljava/util/Collection;ILeac;)I	a	modifyEntityItem
		p	0		source
		p	1		targets
		p	2		slot
		p	3		modifier
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$4
		p	0		slot
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$5
		p	0		itemName
		p	1		slot
	m	(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$1
		p	0		x
		p	1		y
		p	2		z
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$20
		p	0		context
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$3
		p	0		slot
	m	(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$0
		p	0		x
		p	1		y
		p	2		z
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$19
		p	0		context
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	c	lambda$static$2
		p	0		slot
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$18
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$17
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$16
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$15
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	h	lambda$register$14
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	i	lambda$register$13
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	j	lambda$register$12
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	k	lambda$register$11
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	l	lambda$register$10
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	m	lambda$register$9
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	n	lambda$register$8
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/Dynamic3CommandExceptionType;	a	ERROR_TARGET_NOT_A_CONTAINER
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_TARGET_INAPPLICABLE_SLOT
	f	Lcom/mojang/brigadier/exceptions/Dynamic3CommandExceptionType;	c	ERROR_SOURCE_NOT_A_CONTAINER
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	d	ERROR_SOURCE_INAPPLICABLE_SLOT
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	e	ERROR_TARGET_NO_CHANGES
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	f	ERROR_TARGET_NO_CHANGES_KNOWN_ITEM
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	g	SUGGEST_MODIFIER
c	afl	net/minecraft/server/commands/JfrCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$3
		p	0		context
	m	(Ldr;)I	a	startJfr
		p	0		source
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		message
	m	(Ljava/nio/file/Path;Luf;)Luf;	a	lambda$stopJfr$4
		p	1		style
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$2
		p	0		context
	m	(Ldr;)I	b	stopJfr
		p	0		source
	m	(Ldr;)Z	c	lambda$register$1
		p	0		source
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	START_FAILED
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	DUMP_FAILED
c	afm	net/minecraft/server/commands/KickCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
		p	0		context
	m	(Ldr;)Z	a	lambda$register$0
		p	0		source
	m	(Ldr;Ljava/util/Collection;Ltj;)I	a	kickPlayers
		p	0		source
		p	1		targets
		p	2		reason
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$1
		p	0		context
c	afn	net/minecraft/server/commands/KillCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
		p	0		context
	m	(Ldr;)Z	a	lambda$register$0
		p	0		source
	m	(Ldr;Ljava/util/Collection;)I	a	kill
		p	0		source
		p	1		targets
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$1
		p	0		context
c	afo	net/minecraft/server/commands/ListPlayersCommand
	m	(Laiq;)Ltj;	a	lambda$listPlayersWithUuids$2
		p	0		player
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$1
		p	0		context
	m	(Ldr;)I	a	listPlayers
		p	0		source
	m	(Ldr;Ljava/util/function/Function;)I	a	format
		p	0		source
		p	1		nameProvider
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$0
		p	0		context
	m	(Ldr;)I	b	listPlayersWithUuids
		p	0		source
c	afp	net/minecraft/server/commands/LocateCommand
	m	(IIII)F	a	dist
		p	0		x1
		p	1		y1
		p	2		x2
		p	3		y2
	m	(Ladc;)Ljava/lang/String;	a	lambda$showLocateResult$14
		p	0		key
	m	(Lcom/mojang/brigadier/CommandDispatcher;Ldl;)V	a	register
		p	0		dispatcher
		p	1		registryAccess
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$7
		p	0		context
	m	(Lcom/mojang/datafixers/util/Pair;)Ljava/lang/String;	a	getElementName
		p	0		result
	m	(Lcom/mojang/datafixers/util/Pair;Lanv;)Ljava/lang/String;	a	lambda$showLocateResult$15
		p	1		key
	m	(Ldr;)Z	a	lambda$register$4
		p	0		source
	m	(Ldr;Leq$c;)I	a	locateBiome
		p	0		source
		p	1		predicate
	m	(Ldr;Leq$c;Lgt;Lcom/mojang/datafixers/util/Pair;Ljava/lang/String;ZLjava/time/Duration;)I	a	showLocateResult
		p	0		source
		p	1		predicate
		p	2		currentPos
		p	3		result
		p	4		successMessage
		p	5		includeY
		p	6		timeTaken
	m	(Ldr;Ler$c;)I	a	locateStructure
		p	0		source
		p	1		predicate
	m	(Ldr;Ler$c;Lgt;Lcom/mojang/datafixers/util/Pair;Ljava/lang/String;ZLjava/time/Duration;)I	a	showLocateResult
		p	0		source
		p	1		structure
		p	2		currentPos
		p	3		result
		p	4		successMessage
		p	5		includeY
		p	6		timeTaken
	m	(Ldr;Lgt;Lcom/mojang/datafixers/util/Pair;Ljava/lang/String;ZLjava/lang/String;Ljava/time/Duration;)I	a	showLocateResult
		p	0		source
		p	1		currentPos
		p	2		result
		p	3		successMessage
		p	4		includeY
		p	5		entryString
		p	6		timeTaken
	m	(Leq$c;Lcom/mojang/datafixers/util/Pair;Lhh$c;)Ljava/lang/String;	a	lambda$showLocateResult$13
		p	2		tag
	m	(Leq$c;Lhd$c;)Ljava/lang/String;	a	lambda$showLocateResult$12
		p	1		entry
	m	(Ler$c;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$locateStructure$10
	m	(Ler$c;Lhq;)Ljava/util/Optional;	a	getHolders
		p	0		predicate
		p	1		structureRegistry
	m	(Lgt;Ljava/lang/String;Luf;)Luf;	a	lambda$showLocateResult$16
		p	2		style
	m	(Lhd;)Lhh$a;	a	lambda$getHolders$8
		p	0		entry
	m	(Lhq;Ladc;)Ljava/util/Optional;	a	lambda$getHolders$9
		p	1		key
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$3
		p	0		id
	m	(Ladc;)Ljava/lang/String;	b	lambda$getElementName$11
		p	0		key
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$6
		p	0		context
	m	(Ldr;Leq$c;)I	b	locatePoi
		p	0		source
		p	1		predicate
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$2
		p	0		id
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$5
		p	0		context
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	c	lambda$static$1
		p	0		id
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	d	lambda$static$0
		p	0		id
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_STRUCTURE_NOT_FOUND
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	c	ERROR_STRUCTURE_INVALID
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	d	ERROR_BIOME_NOT_FOUND
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	e	ERROR_POI_NOT_FOUND
	f	I	f	MAX_STRUCTURE_SEARCH_RADIUS
	f	I	g	MAX_BIOME_SEARCH_RADIUS
	f	I	h	BIOME_SAMPLE_RESOLUTION_HORIZONTAL
	f	I	i	BIOME_SAMPLE_RESOLUTION_VERTICAL
	f	I	j	POI_SEARCH_RADIUS
c	afq	net/minecraft/server/commands/LootCommand
	m	(Lafq$b;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$13
		p	1		context
	m	(Laip;Lede;Lcfv;)V	a	lambda$dropInWorld$22
		p	2		stack
	m	(Lbdr;Lcfv;)Z	a	distributeToContainer
		p	0		inventory
		p	1		stack
	m	(Lbfh;Ljava/util/List;IILjava/util/List;)V	a	setSlots
		p	0		entity
		p	1		stacks
		p	2		slot
		p	3		stackCount
		p	4		addedStacks
	m	(Lcfv;Lcfv;)Z	a	canMergeItems
		p	0		first
		p	1		second
	m	(Lcom/mojang/brigadier/CommandDispatcher;Ldl;)V	a	register
		p	0		dispatcher
		p	1		commandRegistryAccess
	m	(Lcom/mojang/brigadier/builder/ArgumentBuilder;Lafq$c;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	addTargets
		p	0		rootArgument
		p	1		sourceConstructor
	m	(Lcom/mojang/brigadier/context/CommandContext;Ladd;Lafq$b;)I	a	dropChestLoot
		p	0		context
		p	1		lootTable
		p	2		constructor
	m	(Lcom/mojang/brigadier/context/CommandContext;Ladd;Ldyr;Lafq$b;)I	a	drop
		p	0		context
		p	1		lootTable
		p	2		lootContext
		p	3		constructor
	m	(Lcom/mojang/brigadier/context/CommandContext;Ladd;Lgt;Lcfv;Lafq$b;)I	a	dropFishingLoot
		p	0		context
		p	1		lootTable
		p	2		pos
		p	3		stack
		p	4		constructor
	m	(Lcom/mojang/brigadier/context/CommandContext;Lbfh;Lafq$b;)I	a	dropKillLoot
		p	0		context
		p	1		entity
		p	2		constructor
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$static$0
		p	0		context
		p	1		builder
	m	(Lcom/mojang/brigadier/context/CommandContext;Lgt;Lcfv;Lafq$b;)I	a	dropBlockLoot
		p	0		context
		p	1		pos
		p	2		stack
		p	3		constructor
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Lafq$a;)I	a	lambda$addTargets$21
		p	0		context
		p	1		stacks
		p	2		messageSender
	m	(Ldl;Lcom/mojang/brigadier/builder/ArgumentBuilder;Lafq$b;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	lambda$register$14
		p	1		builder
		p	2		constructor
	m	(Ldr;)Z	a	lambda$register$3
		p	0		source
	m	(Ldr;Ladd;Ljava/util/List;)V	a	lambda$dropKillLoot$24
		p	2		stacks
	m	(Ldr;Lbfm;)Lcfv;	a	getSourceHandItem
		p	0		source
		p	1		slot
	m	(Ldr;Ldbq;Ljava/util/List;)V	a	lambda$dropBlockLoot$23
		p	2		stacks
	m	(Ldr;Lede;Ljava/util/List;Lafq$a;)I	a	dropInWorld
		p	0		source
		p	1		pos
		p	2		stacks
		p	3		messageSender
	m	(Ldr;Lgt;)Lbdr;	a	getContainer
		p	0		source
		p	1		pos
	m	(Ldr;Lgt;IILjava/util/List;Lafq$a;)I	a	blockReplace
		p	0		source
		p	1		targetPos
		p	2		slot
		p	3		stackCount
		p	4		stacks
		p	5		messageSender
	m	(Ldr;Lgt;Ljava/util/List;Lafq$a;)I	a	blockDistribute
		p	0		source
		p	1		targetPos
		p	2		stacks
		p	3		messageSender
	m	(Ldr;Ljava/util/List;)V	a	callback
		p	0		source
		p	1		stacks
	m	(Ldr;Ljava/util/List;Ladd;)V	a	callback
		p	0		source
		p	1		stacks
		p	2		lootTable
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$2
		p	0		entityName
	m	(Ljava/util/Collection;IILjava/util/List;Lafq$a;)I	a	entityReplace
		p	0		targets
		p	1		slot
		p	2		stackCount
		p	3		stacks
		p	4		messageSender
	m	(Ljava/util/Collection;Ljava/util/List;Lafq$a;)I	a	playerGive
		p	0		players
		p	1		stacks
		p	2		messageSender
	m	(Lafq$b;Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$12
		p	1		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Lafq$a;)I	b	lambda$addTargets$20
		p	0		context
		p	1		stacks
		p	2		messageSender
	m	(Ldr;Ljava/util/List;)V	b	lambda$drop$25
		p	1		stacks
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$1
		p	0		entityName
	m	(Lafq$b;Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$11
		p	1		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Lafq$a;)I	c	lambda$addTargets$19
		p	0		context
		p	1		stacks
		p	2		messageSender
	m	(Lafq$b;Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$10
		p	1		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Lafq$a;)I	d	lambda$addTargets$18
		p	0		context
		p	1		stacks
		p	2		messageSender
	m	(Lafq$b;Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$9
		p	1		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Lafq$a;)I	e	lambda$addTargets$17
		p	0		context
		p	1		stacks
		p	2		messageSender
	m	(Lafq$b;Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$8
		p	1		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Lafq$a;)I	f	lambda$addTargets$16
		p	0		context
		p	1		stacks
		p	2		messageSender
	m	(Lafq$b;Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$7
		p	1		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Lafq$a;)I	g	lambda$addTargets$15
		p	0		context
		p	1		stacks
		p	2		messageSender
	m	(Lafq$b;Lcom/mojang/brigadier/context/CommandContext;)I	h	lambda$register$6
		p	1		context
	m	(Lafq$b;Lcom/mojang/brigadier/context/CommandContext;)I	i	lambda$register$5
		p	1		context
	m	(Lafq$b;Lcom/mojang/brigadier/context/CommandContext;)I	j	lambda$register$4
		p	1		context
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	a	SUGGEST_LOOT_TABLE
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_NO_HELD_ITEMS
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	c	ERROR_NO_LOOT_TABLE
c	afq$a	net/minecraft/server/commands/LootCommand$Callback
	m	(Ljava/util/List;)V	accept	accept
		p	1		items
c	afq$b	net/minecraft/server/commands/LootCommand$DropConsumer
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Lafq$a;)I	accept	accept
		p	1		context
		p	2		items
		p	3		messageSender
c	afq$c	net/minecraft/server/commands/LootCommand$TailProvider
	m	(Lcom/mojang/brigadier/builder/ArgumentBuilder;Lafq$b;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	construct	construct
		p	1		builder
		p	2		target
c	afr	net/minecraft/server/commands/MsgCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$1
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/util/Collection;Lty;)V	a	lambda$register$0
		p	2		message
	m	(Ldr;Ljava/util/Collection;Lty;)V	a	sendMessage
		p	0		source
		p	1		targets
		p	2		message
c	afs	net/minecraft/server/commands/OpCommand
	m	(Laiq;)Ljava/lang/String;	a	lambda$register$2
		p	0		player
	m	(Lalu;Laiq;)Z	a	lambda$register$1
		p	1		player
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$4
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$register$3
		p	0		context
		p	1		builder
	m	(Ldr;)Z	a	lambda$register$0
		p	0		source
	m	(Ldr;Ljava/util/Collection;)I	a	opPlayers
		p	0		source
		p	1		targets
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_ALREADY_OP
c	aft	net/minecraft/server/commands/PardonCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$register$1
		p	0		context
		p	1		builder
	m	(Ldr;)Z	a	lambda$register$0
		p	0		source
	m	(Ldr;Ljava/util/Collection;)I	a	pardonPlayers
		p	0		source
		p	1		targets
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_NOT_BANNED
c	afu	net/minecraft/server/commands/PardonIpCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$register$1
		p	0		context
		p	1		builder
	m	(Ldr;)Z	a	lambda$register$0
		p	0		source
	m	(Ldr;Ljava/lang/String;)I	a	unban
		p	0		source
		p	1		target
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_INVALID
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_NOT_BANNED
c	afv	net/minecraft/server/commands/ParticleCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;Ldl;)V	a	register
		p	0		dispatcher
		p	1		registryAccess
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$7
		p	0		context
	m	(Ldr;)Z	a	lambda$register$0
		p	0		source
	m	(Ldr;Lis;Lede;Lede;FIZLjava/util/Collection;)I	a	sendParticles
		p	0		source
		p	1		parameters
		p	2		pos
		p	3		delta
		p	4		speed
		p	5		count
		p	6		force
		p	7		viewers
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$6
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$5
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$4
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$3
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$2
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$1
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_FAILED
c	afw	net/minecraft/server/commands/PerfCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
		p	0		context
	m	(Ldr;)I	a	startProfilingDedicatedServer
		p	0		source
	m	(Ldr;Lban;)V	a	whenStopped
		p	0		source
		p	1		result
	m	(Ldr;Ljava/nio/file/Path;Lnet/minecraft/server/MinecraftServer;)V	a	saveResults
		p	0		source
		p	1		tempProfilingDirectory
		p	2		server
	m	(Ldr;Lnet/minecraft/server/MinecraftServer;Ljava/nio/file/Path;)V	a	lambda$startProfilingDedicatedServer$4
		p	2		dumpDirectory
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$1
		p	0		context
	m	(Ldr;)I	b	stopProfilingDedicatedServer
		p	0		source
	m	(Ldr;Lban;)V	b	lambda$startProfilingDedicatedServer$3
		p	1		result
	m	(Ldr;)Z	c	lambda$register$0
		p	0		source
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_NOT_RUNNING
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_ALREADY_RUNNING
c	afx	net/minecraft/server/commands/PlaceCommand
	m	(Laip;Lclp;)Z	a	lambda$checkLoaded$17
		p	1		pos
	m	(Laip;Lclp;Lclp;)V	a	checkLoaded
		p	0		world
		p	1		pos1
		p	2		pos2
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$14
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$static$1
		p	0		context
		p	1		builder
	m	(Ldr;)Z	a	lambda$register$2
		p	0		source
	m	(Ldr;Ladd;Lgt;Lcvq;Lcua;FI)I	a	placeTemplate
		p	0		source
		p	1		id
		p	2		pos
		p	3		rotation
		p	4		mirror
		p	5		integrity
		p	6		seed
	m	(Ldr;Lhd$c;Lgt;)I	a	placeFeature
		p	0		source
		p	1		feature
		p	2		pos
	m	(Ldr;Lhd;Ladd;ILgt;)I	a	placeJigsaw
		p	0		source
		p	1		structurePool
		p	2		id
		p	3		maxDepth
		p	4		pos
	m	(Ldrx;Laip;Lddo;Lclp;)V	a	lambda$placeStructure$16
		p	3		chunkPos
	m	(Lhd;)Z	a	lambda$placeStructure$15
		p	0		biome
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		id
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$13
		p	0		context
	m	(Ldr;Lhd$c;Lgt;)I	b	placeStructure
		p	0		source
		p	1		structure
		p	2		pos
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$12
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$11
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$10
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$9
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$8
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	h	lambda$register$7
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	i	lambda$register$6
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	j	lambda$register$5
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	k	lambda$register$4
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	l	lambda$register$3
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_FEATURE_FAILED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_JIGSAW_FAILED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_STRUCTURE_FAILED
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	d	ERROR_TEMPLATE_INVALID
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	e	ERROR_TEMPLATE_FAILED
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	f	SUGGEST_TEMPLATES
c	afy	net/minecraft/server/commands/PlaySoundCommand
	m	(Lams;)Lcom/mojang/brigadier/builder/LiteralArgumentBuilder;	a	source
		p	0		category
	m	(Lams;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$source$5
		p	1		context
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Ldr;)Z	a	lambda$register$0
		p	0		source
	m	(Ldr;Ljava/util/Collection;Ladd;Lams;Lede;FFF)I	a	playSound
		p	0		source
		p	1		targets
		p	2		sound
		p	3		category
		p	4		pos
		p	5		volume
		p	6		pitch
		p	7		minVolume
	m	(Lams;Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$source$4
		p	1		context
	m	(Lams;Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$source$3
		p	1		context
	m	(Lams;Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$source$2
		p	1		context
	m	(Lams;Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$source$1
		p	1		context
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_TOO_FAR
c	afz	net/minecraft/server/commands/PublishCommand
	m	(I)Ltw;	a	getSuccessMessage
		p	0		port
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$5
		p	0		context
	m	(Ldr;)Z	a	lambda$register$1
		p	0		source
	m	(Ldr;IZLcmf;)I	a	publish
		p	0		source
		p	1		port
		p	2		allowCommands
		p	3		gameMode
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		port
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$4
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$3
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$2
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_FAILED
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_ALREADY_PUBLISHED
c	aga	net/minecraft/server/commands/RaidCommand
	m	(Laiq;)Lbzt;	a	getRaid
		p	0		player
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$7
		p	0		context
	m	(Ldr;)I	a	glow
		p	0		source
	m	(Ldr;I)I	a	setBadOmenLevel
		p	0		source
		p	1		level
	m	(Ldr;Ltj;)I	a	playSound
		p	0		source
		p	1		type
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$6
		p	0		context
	m	(Ldr;)I	b	spawnLeader
		p	0		source
	m	(Ldr;I)I	b	start
		p	0		source
		p	1		level
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$5
		p	0		context
	m	(Ldr;)I	c	stop
		p	0		source
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$4
		p	0		context
	m	(Ldr;)I	d	check
		p	0		source
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$3
		p	0		context
	m	(Ldr;)Z	e	lambda$register$0
		p	0		source
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$2
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$1
		p	0		context
c	agb	net/minecraft/server/commands/RecipeCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$4
		p	0		context
	m	(Ldr;)Z	a	lambda$register$0
		p	0		source
	m	(Ldr;Ljava/util/Collection;Ljava/util/Collection;)I	a	giveRecipes
		p	0		source
		p	1		targets
		p	2		recipes
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$3
		p	0		context
	m	(Ldr;Ljava/util/Collection;Ljava/util/Collection;)I	b	takeRecipes
		p	0		source
		p	1		targets
		p	2		recipes
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$2
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$1
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_GIVE_FAILED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_TAKE_FAILED
c	agc	net/minecraft/server/commands/ReloadCommand
	m	(Laks;Ldyk;Ljava/util/Collection;)Ljava/util/Collection;	a	discoverNewPacks
		p	0		dataPackManager
		p	1		saveProperties
		p	2		enabledDataPacks
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
		p	0		context
	m	(Ldr;)Z	a	lambda$register$1
		p	0		source
	m	(Ldr;Ljava/lang/Throwable;)Ljava/lang/Void;	a	lambda$reloadPacks$0
		p	1		throwable
	m	(Ljava/util/Collection;Ldr;)V	a	reloadPacks
		p	0		dataPacks
		p	1		source
	f	Lorg/slf4j/Logger;	a	LOGGER
c	agd	net/minecraft/server/commands/ResetChunksCommand
	m	()Lcom/mojang/datafixers/util/Unit;	a	lambda$resetChunks$4
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$3
		p	0		context
	m	(Lddn;)V	a	lambda$resetChunks$6
		p	0		chunk
	m	(Ldds;Lbcr;Laip;Lain;Ljava/util/List;Lcom/mojang/datafixers/util/Unit;)Ljava/util/concurrent/CompletionStage;	a	lambda$resetChunks$8
		p	5		unit
	m	(Ldds;Lcom/mojang/datafixers/util/Either;)Lcom/mojang/datafixers/util/Unit;	a	lambda$resetChunks$7
		p	1		either
	m	(Ldr;)Z	a	lambda$register$0
		p	0		source
	m	(Ldr;IZ)I	a	resetChunks
		p	0		source
		p	1		radius
		p	2		skipOldChunks
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$2
		p	0		context
	m	(Lddn;)Ljava/util/concurrent/CompletableFuture;	b	lambda$resetChunks$5
		p	0		chunk
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$1
		p	0		context
	f	Lorg/slf4j/Logger;	a	LOGGER
c	age	net/minecraft/server/commands/RideCommand
	m	(Lbfh;Lbfh;)Z	a	lambda$mount$6
		p	1		passenger
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$5
		p	0		context
	m	(Ldr;)Z	a	lambda$register$3
		p	0		source
	m	(Ldr;Lbfh;)I	a	dismount
		p	0		source
		p	1		rider
	m	(Ldr;Lbfh;Lbfh;)I	a	mount
		p	0		source
		p	1		rider
		p	2		vehicle
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		entity
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$2
		p	0		rider
		p	1		vehicle
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$4
		p	0		context
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$1
		p	0		rider
		p	1		vehicle
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	ERROR_NOT_RIDING
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	b	ERROR_ALREADY_RIDING
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	c	ERROR_MOUNT_FAILED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	d	ERROR_MOUNTING_PLAYER
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	e	ERROR_MOUNTING_LOOP
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	f	ERROR_WRONG_DIMENSION
c	agf	net/minecraft/server/commands/SaveAllCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
		p	0		context
	m	(Ldr;)Z	a	lambda$register$0
		p	0		source
	m	(Ldr;Z)I	a	saveAll
		p	0		source
		p	1		flush
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$1
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_FAILED
c	agg	net/minecraft/server/commands/SaveOffCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$1
		p	0		context
	m	(Ldr;)Z	a	lambda$register$0
		p	0		source
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_ALREADY_OFF
c	agh	net/minecraft/server/commands/SaveOnCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$1
		p	0		context
	m	(Ldr;)Z	a	lambda$register$0
		p	0		source
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_ALREADY_ON
c	agi	net/minecraft/server/commands/SayCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lty;)V	a	lambda$register$1
		p	1		message
	m	(Ldr;)Z	a	lambda$register$0
		p	0		source
c	agj	net/minecraft/server/commands/ScheduleCommand
	m	(Ladd;ZLecw;JLdr;ILdm;)V	a	lambda$schedule$7
		p	7		function2
	m	(Ladd;ZLecw;JLdr;ILjava/util/Collection;)V	a	lambda$schedule$8
		p	7		functions
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$6
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$static$1
		p	0		context
		p	1		builder
	m	(Ldr;)Z	a	lambda$register$2
		p	0		source
	m	(Ldr;Lcom/mojang/datafixers/util/Pair;IZ)I	a	schedule
		p	0		source
		p	1		function
		p	2		time
		p	3		replace
	m	(Ldr;Ljava/lang/String;)I	a	remove
		p	0		source
		p	1		eventName
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		eventName
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$5
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$4
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$3
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_SAME_TICK
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_CANT_REMOVE
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	c	SUGGEST_SCHEDULE
c	agk	net/minecraft/server/commands/ScoreboardCommand
	m	()Lcom/mojang/brigadier/builder/LiteralArgumentBuilder;	a	createRenderTypeModify
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$19
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$register$17
		p	0		context
		p	1		builder
	m	(Ldr;)I	a	listTrackedPlayers
		p	0		source
	m	(Ldr;I)I	a	clearDisplaySlot
		p	0		source
		p	1		slot
	m	(Ldr;ILedz;)I	a	setDisplaySlot
		p	0		source
		p	1		slot
		p	2		objective
	m	(Ldr;Ledz;)I	a	removeObjective
		p	0		source
		p	1		objective
	m	(Ldr;Ledz;Leef$a;)I	a	setRenderType
		p	0		source
		p	1		objective
		p	2		type
	m	(Ldr;Ledz;Ltj;)I	a	setDisplayName
		p	0		source
		p	1		objective
		p	2		displayName
	m	(Ldr;Ljava/lang/String;)I	a	listTrackedPlayerScores
		p	0		source
		p	1		target
	m	(Ldr;Ljava/lang/String;Ledz;)I	a	getScore
		p	0		source
		p	1		target
		p	2		objective
	m	(Ldr;Ljava/lang/String;Leef;Ltj;)I	a	addObjective
		p	0		source
		p	1		objective
		p	2		criteria
		p	3		displayName
	m	(Ldr;Ljava/util/Collection;)I	a	resetScores
		p	0		source
		p	1		targets
	m	(Ldr;Ljava/util/Collection;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	suggestTriggers
		p	0		source
		p	1		targets
		p	2		builder
	m	(Ldr;Ljava/util/Collection;Ledz;)I	a	enableTrigger
		p	0		source
		p	1		targets
		p	2		objective
	m	(Ldr;Ljava/util/Collection;Ledz;I)I	a	setScore
		p	0		source
		p	1		targets
		p	2		objective
		p	3		score
	m	(Ldr;Ljava/util/Collection;Ledz;Lek$a;Ljava/util/Collection;Ledz;)I	a	performOperation
		p	0		source
		p	1		targets
		p	2		targetObjective
		p	3		operation
		p	4		sources
		p	5		sourceObjectives
	m	(Leef$a;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$createRenderTypeModify$20
		p	1		context
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		objective
		p	1		target
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$18
		p	0		context
	m	(Ldr;)I	b	listObjectives
		p	0		source
	m	(Ldr;Ljava/util/Collection;Ledz;)I	b	resetScore
		p	0		source
		p	1		targets
		p	2		objective
	m	(Ldr;Ljava/util/Collection;Ledz;I)I	b	addScore
		p	0		source
		p	1		targets
		p	2		objective
		p	3		score
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$16
		p	0		context
	m	(Ldr;)Z	c	lambda$register$1
		p	0		source
	m	(Ldr;Ljava/util/Collection;Ledz;I)I	c	removeScore
		p	0		source
		p	1		targets
		p	2		objective
		p	3		score
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$15
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$14
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$13
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$12
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	h	lambda$register$11
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	i	lambda$register$10
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	j	lambda$register$9
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	k	lambda$register$8
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	l	lambda$register$7
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	m	lambda$register$6
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	n	lambda$register$5
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	o	lambda$register$4
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	p	lambda$register$3
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	q	lambda$register$2
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_OBJECTIVE_ALREADY_EXISTS
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_DISPLAY_SLOT_ALREADY_EMPTY
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_DISPLAY_SLOT_ALREADY_SET
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	d	ERROR_TRIGGER_ALREADY_ENABLED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	e	ERROR_NOT_TRIGGER
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	f	ERROR_NO_VALUE
c	agl	net/minecraft/server/commands/SeedCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;Z)V	a	register
		p	0		dispatcher
		p	1		dedicated
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$1
		p	0		context
	m	(ZLdr;)Z	a	lambda$register$0
		p	1		source
c	agm	net/minecraft/server/commands/SetBlockCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;Ldl;)V	a	register
		p	0		dispatcher
		p	1		commandRegistryAccess
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$5
		p	0		context
	m	(Ldbu;)Z	a	lambda$register$3
		p	0		pos
	m	(Ldr;)Z	a	lambda$register$0
		p	0		source
	m	(Ldr;Lgt;Lfc;Lagm$b;Ljava/util/function/Predicate;)I	a	setBlock
		p	0		source
		p	1		pos
		p	2		block
		p	3		mode
		p	4		condition
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$4
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$2
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$1
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_FAILED
c	agm$a	net/minecraft/server/commands/SetBlockCommand$Filter
	m	(Ldrh;Lgt;Lfc;Laip;)Lfc;	filter	filter
		p	1		box
		p	2		pos
		p	3		block
		p	4		world
c	agm$b	net/minecraft/server/commands/SetBlockCommand$Mode
	m	()[Lagm$b;	a	$values
	f	Lagm$b;	a	REPLACE
	f	Lagm$b;	b	DESTROY
	f	[Lagm$b;	c	$VALUES
c	agn	net/minecraft/server/commands/SetPlayerIdleTimeoutCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$1
		p	0		context
	m	(Ldr;)Z	a	lambda$register$0
		p	0		source
	m	(Ldr;I)I	a	setIdleTimeout
		p	0		source
		p	1		minutes
c	ago	net/minecraft/server/commands/SetSpawnCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$4
		p	0		context
	m	(Ldr;)Z	a	lambda$register$0
		p	0		source
	m	(Ldr;Ljava/util/Collection;Lgt;F)I	a	setSpawn
		p	0		source
		p	1		targets
		p	2		pos
		p	3		angle
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$3
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$2
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$1
		p	0		context
c	agp	net/minecraft/server/commands/SetWorldSpawnCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$3
		p	0		context
	m	(Ldr;)Z	a	lambda$register$0
		p	0		source
	m	(Ldr;Lgt;F)I	a	setSpawn
		p	0		source
		p	1		pos
		p	2		angle
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$2
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$1
		p	0		context
c	agq	net/minecraft/server/commands/SpawnArmorTrimsCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
		p	0		context
	m	(Ldr;)Z	a	lambda$register$1
		p	0		source
	m	(Ldr;Lbym;)I	a	spawnArmorTrims
		p	0		source
		p	1		player
	m	(Lhm;Lhq;Lhq;Lchz;Lchx;)V	a	lambda$spawnArmorTrims$5
		p	4		material
	m	(Lhq;Lchx;)Ljava/lang/Integer;	a	lambda$spawnArmorTrims$4
		p	1		material
	m	(Lhq;Lchz;)Ljava/lang/Integer;	a	lambda$spawnArmorTrims$3
		p	1		pattern
	m	(Lhq;Lhm;Lhq;Lchz;)V	a	lambda$spawnArmorTrims$6
		p	3		pattern
	m	(Ljava/util/HashMap;)V	a	lambda$static$0
		p	0		map
	f	Ljava/util/Map;	a	MATERIAL_AND_SLOT_TO_ITEM
	f	Ljava/util/List;	b	VANILLA_TRIM_PATTERNS
	f	Ljava/util/List;	c	VANILLA_TRIM_MATERIALS
	f	Ljava/util/function/ToIntFunction;	d	TRIM_PATTERN_ORDER
	f	Ljava/util/function/ToIntFunction;	e	TRIM_MATERIAL_ORDER
c	agr	net/minecraft/server/commands/SpectateCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$4
		p	0		context
	m	(Ldr;)Z	a	lambda$register$1
		p	0		source
	m	(Ldr;Lbfh;Laiq;)I	a	spectate
		p	0		source
		p	1		entity
		p	2		player
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		playerName
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$3
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$2
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_SELF
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_NOT_SPECTATOR
c	ags	net/minecraft/server/commands/SpreadPlayersCommand
	m	(Lapo;IDDDD)[Lags$a;	a	createInitialPositions
		p	0		random
		p	1		count
		p	2		minX
		p	4		minZ
		p	6		maxX
		p	8		maxZ
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$5
		p	0		context
	m	(Ldr;)Z	a	lambda$register$3
		p	0		source
	m	(Ldr;Ledd;FFIZLjava/util/Collection;)I	a	spreadPlayers
		p	0		source
		p	1		center
		p	2		spreadDistance
		p	3		maxRange
		p	4		maxY
		p	5		respectTeams
		p	6		players
	m	(Ledd;DLaip;Lapo;DDDDI[Lags$a;Z)V	a	spreadPositions
		p	0		center
		p	1		spreadDistance
		p	3		world
		p	4		random
		p	5		minX
		p	7		minZ
		p	9		maxX
		p	11		maxZ
		p	13		maxY
		p	14		piles
		p	15		respectTeams
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$2
		p	0		maxY
		p	1		worldBottomY
	m	(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$1
		p	0		pilesCount
		p	1		x
		p	2		z
		p	3		maxSpreadDistance
	m	(Ljava/util/Collection;)I	a	getNumberOfTeams
		p	0		entities
	m	(Ljava/util/Collection;Laip;[Lags$a;IZ)D	a	setPlayerPositions
		p	0		entities
		p	1		world
		p	2		piles
		p	3		maxY
		p	4		respectTeams
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$4
		p	0		context
	m	(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$0
		p	0		pilesCount
		p	1		x
		p	2		z
		p	3		maxSpreadDistance
	f	I	a	MAX_ITERATION_COUNT
	f	Lcom/mojang/brigadier/exceptions/Dynamic4CommandExceptionType;	b	ERROR_FAILED_TO_SPREAD_TEAMS
	f	Lcom/mojang/brigadier/exceptions/Dynamic4CommandExceptionType;	c	ERROR_FAILED_TO_SPREAD_ENTITIES
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	d	ERROR_INVALID_MAX_HEIGHT
c	ags$a	net/minecraft/server/commands/SpreadPlayersCommand$Position
	m	()V	a	normalize
	m	(DDDD)Z	a	clamp
		p	1		minX
		p	3		minZ
		p	5		maxX
		p	7		maxZ
	m	(Lags$a;)D	a	dist
		p	1		other
	m	(Lapo;DDDD)V	a	randomize
		p	1		random
		p	2		minX
		p	4		minZ
		p	6		maxX
		p	8		maxZ
	m	(Lclo;I)I	a	getSpawnY
		p	1		blockView
		p	2		maxY
	m	()D	b	getLength
	m	(Lags$a;)V	b	moveAway
		p	1		other
	m	(Lclo;I)Z	b	isSafe
		p	1		world
		p	2		maxY
	f	D	a	x
	f	D	b	z
c	agt	net/minecraft/server/commands/StopCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$1
		p	0		context
	m	(Ldr;)Z	a	lambda$register$0
		p	0		source
c	agu	net/minecraft/server/commands/StopSoundCommand
	m	(Lams;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$3
		p	1		context
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$1
		p	0		context
	m	(Ldr;)Z	a	lambda$register$4
		p	0		source
	m	(Ldr;Ljava/util/Collection;Lams;Ladd;)I	a	stopSound
		p	0		source
		p	1		targets
		p	2		category
		p	3		sound
	m	(Lams;Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$2
		p	1		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$0
		p	0		context
c	agv	net/minecraft/server/commands/SummonCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;Ldl;)V	a	register
		p	0		dispatcher
		p	1		registryAccess
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$3
		p	0		context
	m	(Ldr;)Z	a	lambda$register$0
		p	0		source
	m	(Ldr;Lhd$c;Lede;Lre;Z)Lbfh;	a	createEntity
		p	0		source
		p	1		entityType
		p	2		pos
		p	3		nbt
		p	4		initialize
	m	(Lede;Lbfh;)Lbfh;	a	lambda$createEntity$4
		p	1		entity
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$2
		p	0		context
	m	(Ldr;Lhd$c;Lede;Lre;Z)I	b	spawnEntity
		p	0		source
		p	1		entityType
		p	2		pos
		p	3		nbt
		p	4		initialize
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$1
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_FAILED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_DUPLICATE_UUID
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	INVALID_POSITION
c	agw	net/minecraft/server/commands/TagCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$4
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$register$2
		p	0		context
		p	1		builder
	m	(Ldr;)Z	a	lambda$register$0
		p	0		source
	m	(Ldr;Ljava/util/Collection;)I	a	listTags
		p	0		source
		p	1		targets
	m	(Ldr;Ljava/util/Collection;Ljava/lang/String;)I	a	addTag
		p	0		source
		p	1		targets
		p	2		tag
	m	(Ljava/util/Collection;)Ljava/util/Collection;	a	getTags
		p	0		entities
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$3
		p	0		context
	m	(Ldr;Ljava/util/Collection;Ljava/lang/String;)I	b	removeTag
		p	0		source
		p	1		targets
		p	2		tag
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$1
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_ADD_FAILED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_REMOVE_FAILED
c	agx	net/minecraft/server/commands/TeamCommand
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	A	lambda$register$1
		p	0		context
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$27
		p	0		context
	m	(Ldr;)I	a	listTeams
		p	0		source
	m	(Ldr;Leea;)I	a	emptyTeam
		p	0		source
		p	1		team
	m	(Ldr;Leea;Leee$a;)I	a	setCollision
		p	0		source
		p	1		team
		p	2		collisionRule
	m	(Ldr;Leea;Leee$b;)I	a	setNametagVisibility
		p	0		source
		p	1		team
		p	2		visibility
	m	(Ldr;Leea;Ljava/util/Collection;)I	a	joinTeam
		p	0		source
		p	1		team
		p	2		members
	m	(Ldr;Leea;Ln;)I	a	setColor
		p	0		source
		p	1		team
		p	2		color
	m	(Ldr;Leea;Ltj;)I	a	setDisplayName
		p	0		source
		p	1		team
		p	2		displayName
	m	(Ldr;Leea;Z)I	a	setFriendlySight
		p	0		source
		p	1		team
		p	2		allowed
	m	(Ldr;Ljava/lang/String;)I	a	createTeam
		p	0		source
		p	1		team
	m	(Ldr;Ljava/lang/String;Ltj;)I	a	createTeam
		p	0		source
		p	1		team
		p	2		displayName
	m	(Ldr;Ljava/util/Collection;)I	a	leaveTeam
		p	0		source
		p	1		members
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$26
		p	0		context
	m	(Ldr;)Z	b	lambda$register$0
		p	0		source
	m	(Ldr;Leea;)I	b	deleteTeam
		p	0		source
		p	1		team
	m	(Ldr;Leea;Leee$b;)I	b	setDeathMessageVisibility
		p	0		source
		p	1		team
		p	2		visibility
	m	(Ldr;Leea;Ltj;)I	b	setPrefix
		p	0		source
		p	1		team
		p	2		prefix
	m	(Ldr;Leea;Z)I	b	setFriendlyFire
		p	0		source
		p	1		team
		p	2		allowed
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$25
		p	0		context
	m	(Ldr;Leea;)I	c	listMembers
		p	0		source
		p	1		team
	m	(Ldr;Leea;Ltj;)I	c	setSuffix
		p	0		source
		p	1		team
		p	2		suffix
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$24
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$23
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$22
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$21
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	h	lambda$register$20
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	i	lambda$register$19
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	j	lambda$register$18
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	k	lambda$register$17
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	l	lambda$register$16
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	m	lambda$register$15
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	n	lambda$register$14
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	o	lambda$register$13
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	p	lambda$register$12
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	q	lambda$register$11
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	r	lambda$register$10
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	s	lambda$register$9
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	t	lambda$register$8
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	u	lambda$register$7
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	v	lambda$register$6
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	w	lambda$register$5
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	x	lambda$register$4
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	y	lambda$register$3
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	z	lambda$register$2
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_TEAM_ALREADY_EXISTS
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_TEAM_ALREADY_EMPTY
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_TEAM_ALREADY_NAME
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	d	ERROR_TEAM_ALREADY_COLOR
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	e	ERROR_TEAM_ALREADY_FRIENDLYFIRE_ENABLED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	f	ERROR_TEAM_ALREADY_FRIENDLYFIRE_DISABLED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	g	ERROR_TEAM_ALREADY_FRIENDLYINVISIBLES_ENABLED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	h	ERROR_TEAM_ALREADY_FRIENDLYINVISIBLES_DISABLED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	i	ERROR_TEAM_NAMETAG_VISIBLITY_UNCHANGED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	j	ERROR_TEAM_DEATH_MESSAGE_VISIBLITY_UNCHANGED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	k	ERROR_TEAM_COLLISION_UNCHANGED
c	agy	net/minecraft/server/commands/TeamMsgCommand
	m	(Lbfh;Leea;Laiq;)Z	a	lambda$register$0
		p	2		player
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
		p	0		context
	m	(Ldr;Lbfh;Leea;Ljava/util/List;Lty;)V	a	sendMessage
		p	0		source
		p	1		entity
		p	2		team
		p	3		recipients
		p	4		message
	m	(Ldr;Lbfh;Leea;Ljava/util/List;Lty;)V	b	lambda$register$1
		p	4		message
	f	Luf;	a	SUGGEST_STYLE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_NOT_ON_TEAM
c	agz	net/minecraft/server/commands/TeleportCommand
	m	(D)Ljava/lang/String;	a	formatDouble
		p	0		d
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$8
		p	0		context
	m	(Ldr;)Z	a	lambda$register$9
		p	0		source
	m	(Ldr;Lbfh;Laip;DDDLjava/util/Set;FFLagz$a;)V	a	performTeleport
		p	0		source
		p	1		target
		p	2		world
		p	3		x
		p	5		y
		p	7		z
		p	9		movementFlags
		p	10		yaw
		p	11		pitch
		p	12		facingLocation
	m	(Ldr;Ljava/util/Collection;Laip;Lfj;Lfj;Lagz$a;)I	a	teleportToPos
		p	0		source
		p	1		targets
		p	2		world
		p	3		location
		p	4		rotation
		p	5		facingLocation
	m	(Ldr;Ljava/util/Collection;Lbfh;)I	a	teleportToEntity
		p	0		source
		p	1		targets
		p	2		destination
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$7
		p	0		context
	m	(Ldr;)Z	b	lambda$register$0
		p	0		source
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$6
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$5
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$4
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$3
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$2
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	h	lambda$register$1
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	INVALID_POSITION
c	agz$a	net/minecraft/server/commands/TeleportCommand$LookAt
	m	(Lbfh;Lea$a;)V	<init>	<init>
		p	1		target
		p	2		targetAnchor
	m	(Lede;)V	<init>	<init>
		p	1		targetPos
	m	(Ldr;Lbfh;)V	a	perform
		p	1		source
		p	2		entity
	f	Lede;	a	position
	f	Lbfh;	b	entity
	f	Lea$a;	c	anchor
c	aha	net/minecraft/server/commands/TellRawCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$1
		p	0		context
	m	(Ldr;)Z	a	lambda$register$0
		p	0		source
c	ahb	net/minecraft/server/commands/TimeCommand
	m	(Laip;)I	a	getDayTime
		p	0		world
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$9
		p	0		context
	m	(Ldr;)Z	a	lambda$register$0
		p	0		source
	m	(Ldr;I)I	a	setTime
		p	0		source
		p	1		time
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$8
		p	0		context
	m	(Ldr;I)I	b	addTime
		p	0		source
		p	1		time
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$7
		p	0		context
	m	(Ldr;I)I	c	queryTime
		p	0		source
		p	1		time
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$6
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$5
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$4
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$3
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	h	lambda$register$2
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	i	lambda$register$1
		p	0		context
c	ahc	net/minecraft/server/commands/TitleCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$6
		p	0		context
	m	(Ldr;)Z	a	lambda$register$0
		p	0		source
	m	(Ldr;Ljava/util/Collection;)I	a	clearTitle
		p	0		source
		p	1		targets
	m	(Ldr;Ljava/util/Collection;III)I	a	setTimes
		p	0		source
		p	1		targets
		p	2		fadeIn
		p	3		stay
		p	4		fadeOut
	m	(Ldr;Ljava/util/Collection;Ltj;Ljava/lang/String;Ljava/util/function/Function;)I	a	showTitle
		p	0		source
		p	1		targets
		p	2		title
		p	3		titleType
		p	4		constructor
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$5
		p	0		context
	m	(Ldr;Ljava/util/Collection;)I	b	resetTitle
		p	0		source
		p	1		targets
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$4
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$3
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$2
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$1
		p	0		context
c	ahd	net/minecraft/server/commands/TriggerCommand
	m	(Laiq;Ledz;)Leeb;	a	getScore
		p	0		player
		p	1		objective
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$3
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$register$0
		p	0		context
		p	1		builder
	m	(Ldr;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	suggestObjectives
		p	0		source
		p	1		builder
	m	(Ldr;Leeb;)I	a	simpleTrigger
		p	0		source
		p	1		score
	m	(Ldr;Leeb;I)I	a	addValue
		p	0		source
		p	1		score
		p	2		value
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$2
		p	0		context
	m	(Ldr;Leeb;I)I	b	setValue
		p	0		source
		p	1		score
		p	2		value
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$1
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_NOT_PRIMED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_INVALID_OBJECTIVE
c	ahe	net/minecraft/server/commands/WardenSpawnTrackerCommand
	m	(ILbxs;)V	a	lambda$setWarningLevel$3
		p	1		warningManager
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
		p	0		context
	m	(Ldr;)Z	a	lambda$register$0
		p	0		source
	m	(Ldr;Ljava/util/Collection;)I	a	resetTracker
		p	0		source
		p	1		players
	m	(Ldr;Ljava/util/Collection;I)I	a	setWarningLevel
		p	0		source
		p	1		players
		p	2		warningCount
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$1
		p	0		context
c	ahf	net/minecraft/server/commands/WeatherCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$6
		p	0		context
	m	(Ldr;)Z	a	lambda$register$0
		p	0		source
	m	(Ldr;I)I	a	setClear
		p	0		source
		p	1		duration
	m	(Ldr;ILbdd;)I	a	getDuration
		p	0		source
		p	1		duration
		p	2		provider
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$5
		p	0		context
	m	(Ldr;I)I	b	setRain
		p	0		source
		p	1		duration
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$4
		p	0		context
	m	(Ldr;I)I	c	setThunder
		p	0		source
		p	1		duration
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$3
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$2
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$1
		p	0		context
	f	I	a	DEFAULT_TIME
c	ahg	net/minecraft/server/commands/WhitelistCommand
	m	(Laiq;)Ljava/lang/String;	a	lambda$register$5
		p	0		player
	m	(Lalu;Laiq;)Z	a	lambda$register$4
		p	1		player
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$10
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$register$8
		p	0		context
		p	1		builder
	m	(Ldr;)I	a	reload
		p	0		source
	m	(Ldr;Ljava/util/Collection;)I	a	addPlayers
		p	0		source
		p	1		targets
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$9
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	b	lambda$register$6
		p	0		context
		p	1		builder
	m	(Ldr;)I	b	enableWhitelist
		p	0		source
	m	(Ldr;Ljava/util/Collection;)I	b	removePlayers
		p	0		source
		p	1		targets
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$7
		p	0		context
	m	(Ldr;)I	c	disableWhitelist
		p	0		source
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$3
		p	0		context
	m	(Ldr;)I	d	showList
		p	0		source
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$2
		p	0		context
	m	(Ldr;)Z	e	lambda$register$0
		p	0		source
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$1
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_ALREADY_ENABLED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_ALREADY_DISABLED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_ALREADY_WHITELISTED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	d	ERROR_NOT_WHITELISTED
c	ahh	net/minecraft/server/commands/WorldBorderCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$10
		p	0		context
	m	(Ldr;)I	a	getSize
		p	0		source
	m	(Ldr;DJ)I	a	setSize
		p	0		source
		p	1		distance
		p	3		time
	m	(Ldr;F)I	a	setDamageBuffer
		p	0		source
		p	1		distance
	m	(Ldr;I)I	a	setWarningTime
		p	0		source
		p	1		time
	m	(Ldr;Ledd;)I	a	setCenter
		p	0		source
		p	1		pos
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$9
		p	0		context
	m	(Ldr;)Z	b	lambda$register$0
		p	0		source
	m	(Ldr;F)I	b	setDamageAmount
		p	0		source
		p	1		damagePerBlock
	m	(Ldr;I)I	b	setWarningDistance
		p	0		source
		p	1		distance
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$8
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$7
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$6
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$5
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$4
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	h	lambda$register$3
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	i	lambda$register$2
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	j	lambda$register$1
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_SAME_CENTER
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_SAME_SIZE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_TOO_SMALL
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	d	ERROR_TOO_BIG
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	e	ERROR_TOO_FAR_OUT
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	f	ERROR_SAME_WARNING_TIME
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	g	ERROR_SAME_WARNING_DISTANCE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	h	ERROR_SAME_DAMAGE_BUFFER
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	i	ERROR_SAME_DAMAGE_AMOUNT
c	ahi	net/minecraft/server/commands/data/BlockDataAccessor
	m	(Lcze;Lgt;)V	<init>	<init>
		p	1		blockEntity
		p	2		pos
	m	()Lre;	a	getData
	m	(Leg$g;DI)Ltj;	a	getPrintSuccess
		p	1		path
		p	2		scale
		p	4		result
	m	(Ljava/lang/String;)Lahk$c;	a	lambda$static$0
		p	0		argumentName
	m	(Lre;)V	a	setData
		p	1		nbt
	m	(Lrx;)Ltj;	a	getPrintSuccess
		p	1		element
	m	()Ltj;	b	getModifiedSuccess
	f	Ljava/util/function/Function;	a	PROVIDER
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_NOT_A_BLOCK_ENTITY
	f	Lcze;	c	entity
	f	Lgt;	d	pos
c	ahi$1	net/minecraft/server/commands/data/BlockDataAccessor$1
	m	(Lcom/mojang/brigadier/builder/ArgumentBuilder;Ljava/util/function/Function;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	wrap
		p	1		argument
		p	2		argumentAdder
	m	(Lcom/mojang/brigadier/context/CommandContext;)Lahj;	a	access
		p	1		context
	f	Ljava/lang/String;	a	val$argPrefix
c	ahj	net/minecraft/server/commands/data/DataAccessor
	m	()Lre;	a	getData
	m	(Leg$g;DI)Ltj;	a	getPrintSuccess
		p	1		path
		p	2		scale
		p	4		result
	m	(Lre;)V	a	setData
		p	1		nbt
	m	(Lrx;)Ltj;	a	getPrintSuccess
		p	1		element
	m	()Ltj;	b	getModifiedSuccess
c	ahk	net/minecraft/server/commands/data/DataCommands
	m	(Lahk$c;Lahk$a;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	lambda$decorateModification$36
		p	1		modifier
	m	(Lahk$c;Lahk$a;Lahk$c;Lcom/mojang/brigadier/builder/ArgumentBuilder;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	lambda$decorateModification$33
		p	3		builder
	m	(Lahk$c;Lahk$a;Lahk$c;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$decorateModification$32
		p	3		context
	m	(Lahk$c;Lahk$a;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$decorateModification$35
		p	2		context
	m	(Lahk$c;Lahk$c;Lahk$a;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	lambda$decorateModification$34
		p	2		operation
	m	(Lahk$c;Lcom/mojang/brigadier/builder/ArgumentBuilder;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	lambda$register$14
		p	1		builder
	m	(Lahk$c;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$13
		p	1		context
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/builder/ArgumentBuilder;Lahk$b;)V	a	lambda$register$20
		p	0		builder
		p	1		modifier
	m	(Lcom/mojang/brigadier/context/CommandContext;Lahk$c;)Ljava/util/List;	a	getSingletonSource
		p	0		context
		p	1		objectType
	m	(Lcom/mojang/brigadier/context/CommandContext;Lahk$c;Lahk$a;Ljava/util/List;)I	a	manipulateData
		p	0		context
		p	1		objectType
		p	2		modifier
		p	3		elements
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/lang/String;	a	lambda$decorateModification$31
		p	1		value
	m	(Lcom/mojang/brigadier/context/CommandContext;Lre;Leg$g;Ljava/util/List;)I	a	lambda$register$19
		p	0		context
		p	1		element
		p	2		path
		p	3		elements
	m	(Ldr;)Z	a	lambda$register$6
		p	0		source
	m	(Ldr;Lahj;)I	a	getData
		p	0		source
		p	1		object
	m	(Ldr;Lahj;Leg$g;)I	a	removeData
		p	0		source
		p	1		object
		p	2		path
	m	(Ldr;Lahj;Leg$g;D)I	a	getNumeric
		p	0		source
		p	1		object
		p	2		path
		p	3		scale
	m	(Ldr;Lahj;Lre;)I	a	mergeData
		p	0		source
		p	1		object
		p	2		nbt
	m	(Leg$g;Lahj;)Lrx;	a	getSingleTag
		p	0		path
		p	1		object
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$3
		p	0		nbt
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$decorateModification$27
		p	0		value
	m	(Ljava/util/List;Ljava/util/function/Function;)Ljava/util/List;	a	stringifyTagList
		p	0		list
		p	1		function
	m	(Ljava/util/function/BiConsumer;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	decorateModification
		p	0		subArgumentAdder
	m	(Ljava/util/function/BiConsumer;Lahk$c;Lcom/mojang/brigadier/builder/ArgumentBuilder;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	lambda$decorateModification$37
		p	2		builder
	m	(Ljava/util/function/Function;)Lahk$c;	a	lambda$static$5
		p	0		factory
	m	(Lrx;)Ljava/lang/String;	a	getAsText
		p	0		nbt
	m	(Lahk$c;Lahk$a;Lahk$c;Lcom/mojang/brigadier/builder/ArgumentBuilder;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	b	lambda$decorateModification$23
		p	3		builder
	m	(Lahk$c;Lahk$a;Lahk$c;Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$decorateModification$30
		p	3		context
	m	(Lahk$c;Lahk$c;Lahk$a;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	b	lambda$decorateModification$24
		p	2		operation
	m	(Lahk$c;Lcom/mojang/brigadier/builder/ArgumentBuilder;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	b	lambda$register$12
		p	1		builder
	m	(Lahk$c;Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$11
		p	1		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lahk$c;)Ljava/util/List;	b	resolveSourcePath
		p	0		context
		p	1		objectType
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/lang/String;	b	lambda$decorateModification$29
		p	1		value
	m	(Lcom/mojang/brigadier/context/CommandContext;Lre;Leg$g;Ljava/util/List;)I	b	lambda$register$18
		p	0		context
		p	1		sourceNbt
		p	2		path
		p	3		elements
	m	(Ldr;Lahj;Leg$g;)I	b	getData
		p	0		source
		p	1		object
		p	2		path
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$2
		p	0		nbt
	m	(Ljava/lang/String;)Ljava/lang/String;	b	lambda$decorateModification$25
		p	0		value
	m	(Ljava/util/function/Function;)Lahk$c;	b	lambda$static$4
		p	0		factory
	m	(Lahk$c;Lahk$a;Lahk$c;Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$decorateModification$28
		p	3		context
	m	(Lahk$c;Lcom/mojang/brigadier/builder/ArgumentBuilder;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	c	lambda$register$8
		p	1		builder
	m	(Lahk$c;Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$10
		p	1		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lre;Leg$g;Ljava/util/List;)I	c	lambda$register$17
		p	0		context
		p	2		path
		p	3		elements
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	c	lambda$static$1
		p	0		path
	m	(Lahk$c;Lahk$a;Lahk$c;Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$decorateModification$26
		p	3		context
	m	(Lahk$c;Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$9
		p	1		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lre;Leg$g;Ljava/util/List;)I	d	lambda$register$16
		p	0		context
		p	2		path
		p	3		elements
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	d	lambda$static$0
		p	0		path
	m	(Lahk$c;Lahk$a;Lahk$c;Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$decorateModification$22
		p	3		context
	m	(Lahk$c;Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$7
		p	1		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lre;Leg$g;Ljava/util/List;)I	e	lambda$register$15
		p	0		context
		p	1		sourceNbt
		p	2		path
		p	3		elements
	m	(Lahk$c;Lahk$a;Lahk$c;Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$decorateModification$21
		p	3		context
	f	Ljava/util/List;	a	ALL_PROVIDERS
	f	Ljava/util/List;	b	TARGET_PROVIDERS
	f	Ljava/util/List;	c	SOURCE_PROVIDERS
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	d	ERROR_MERGE_UNCHANGED
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	e	ERROR_GET_NOT_NUMBER
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	f	ERROR_GET_NON_EXISTENT
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	g	ERROR_MULTIPLE_TAGS
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	h	ERROR_EXPECTED_OBJECT
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	i	ERROR_EXPECTED_VALUE
c	ahk$a	net/minecraft/server/commands/data/DataCommands$DataManipulator
	m	(Lcom/mojang/brigadier/context/CommandContext;Lre;Leg$g;Ljava/util/List;)I	modify	modify
		p	1		context
		p	2		sourceNbt
		p	3		path
		p	4		elements
c	ahk$b	net/minecraft/server/commands/data/DataCommands$DataManipulatorDecorator
	m	(Lahk$a;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	create	create
		p	1		modifier
c	ahk$c	net/minecraft/server/commands/data/DataCommands$DataProvider
	m	(Lcom/mojang/brigadier/builder/ArgumentBuilder;Ljava/util/function/Function;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	wrap
		p	1		argument
		p	2		argumentAdder
	m	(Lcom/mojang/brigadier/context/CommandContext;)Lahj;	a	access
		p	1		context
c	ahl	net/minecraft/server/commands/data/EntityDataAccessor
	m	(Lbfh;)V	<init>	<init>
		p	1		entity
	m	()Lre;	a	getData
	m	(Leg$g;DI)Ltj;	a	getPrintSuccess
		p	1		path
		p	2		scale
		p	4		result
	m	(Ljava/lang/String;)Lahk$c;	a	lambda$static$0
		p	0		argumentName
	m	(Lre;)V	a	setData
		p	1		nbt
	m	(Lrx;)Ltj;	a	getPrintSuccess
		p	1		element
	m	()Ltj;	b	getModifiedSuccess
	f	Ljava/util/function/Function;	a	PROVIDER
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_NO_PLAYERS
	f	Lbfh;	c	entity
c	ahl$1	net/minecraft/server/commands/data/EntityDataAccessor$1
	m	(Lcom/mojang/brigadier/builder/ArgumentBuilder;Ljava/util/function/Function;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	wrap
		p	1		argument
		p	2		argumentAdder
	m	(Lcom/mojang/brigadier/context/CommandContext;)Lahj;	a	access
		p	1		context
	f	Ljava/lang/String;	a	val$arg
c	ahm	net/minecraft/server/commands/data/StorageDataAccessor
	m	(Ldxx;Ladd;)V	<init>	<init>
		p	1		storage
		p	2		id
	m	()Lre;	a	getData
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ldxx;	a	getGlobalTags
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$static$0
		p	0		context
		p	1		builder
	m	(Leg$g;DI)Ltj;	a	getPrintSuccess
		p	1		path
		p	2		scale
		p	4		result
	m	(Ljava/lang/String;)Lahk$c;	a	lambda$static$1
		p	0		argumentName
	m	(Lre;)V	a	setData
		p	1		nbt
	m	(Lrx;)Ltj;	a	getPrintSuccess
		p	1		element
	m	()Ltj;	b	getModifiedSuccess
	f	Ljava/util/function/Function;	a	PROVIDER
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	b	SUGGEST_STORAGE
	f	Ldxx;	c	storage
	f	Ladd;	d	id
c	ahm$1	net/minecraft/server/commands/data/StorageDataAccessor$1
	m	(Lcom/mojang/brigadier/builder/ArgumentBuilder;Ljava/util/function/Function;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	wrap
		p	1		argument
		p	2		argumentAdder
	m	(Lcom/mojang/brigadier/context/CommandContext;)Lahj;	a	access
		p	1		context
	f	Ljava/lang/String;	a	val$arg
c	ahn	net/minecraft/server/commands/data/package-info
c	aho	net/minecraft/server/commands/package-info
c	ahp	net/minecraft/server/dedicated/DedicatedPlayerList
	m	(Lahq;Lhk;Ldyh;)V	<init>	<init>
		p	1		server
		p	2		tracker
		p	3		saveHandler
	m	()V	A	loadOps
	m	()V	B	saveOps
	m	()V	C	loadWhiteList
	m	()V	D	saveWhiteList
	m	()V	a	reloadWhiteList
	m	(Lcom/mojang/authlib/GameProfile;)V	a	op
		p	1		profile
	m	(Z)V	a	setUsingWhiteList
		p	1		whitelistEnabled
	m	()Lahq;	b	getServer
	m	(Lcom/mojang/authlib/GameProfile;)V	b	deop
		p	1		profile
	m	()Lnet/minecraft/server/MinecraftServer;	c	getServer
	m	(Lcom/mojang/authlib/GameProfile;)Z	c	isWhiteListed
		p	1		profile
	m	(Lcom/mojang/authlib/GameProfile;)Z	d	canBypassPlayerLimit
		p	1		profile
	m	()V	w	saveIpBanList
	m	()V	x	saveUserBanList
	m	()V	y	loadIpBanList
	m	()V	z	loadUserBanList
	f	Lorg/slf4j/Logger;	a	LOGGER
c	ahq	net/minecraft/server/dedicated/DedicatedServer
	m	(Ljava/lang/Thread;Ldye$c;Laks;Ladx;Lahs;Lcom/mojang/datafixers/DataFixer;Ladu;Laiz;)V	<init>	<init>
		p	1		serverThread
		p	2		session
		p	3		dataPackManager
		p	4		saveLoader
		p	5		propertiesLoader
		p	6		dataFixer
		p	7		apiServices
		p	8		worldGenerationProgressListenerFactory
	m	()Z	B	isNetherEnabled
	m	()Z	M_	shouldInformAdmins
	m	()Z	Q	isSpawningMonsters
	m	()Ljava/util/Optional;	S	getServerResourcePack
	m	()Z	W	isSpawningAnimals
	m	()Z	X	areNpcsEnabled
	m	()Lahr;	a	getProperties
	m	(ILahr;)Lahr;	a	lambda$setPlayerIdleTimeout$2
		p	2		serverPropertiesHandler
	m	(Lab;)Lab;	a	fillServerSystemReport
		p	1		details
	m	(Laip;Lgt;Lbym;)Z	a	isUnderSpawnProtection
		p	1		world
		p	2		pos
		p	3		player
	m	(Laiq;)Lajn;	a	createTextFilterForPlayer
		p	1		player
	m	(Lcom/mojang/authlib/GameProfile;)Z	a	isSingleplayerOwner
		p	1		profile
	m	(Ljava/lang/String;)Ljava/lang/String;	a	runCommand
		p	1		command
	m	(Ljava/lang/String;Ldr;)V	a	handleConsoleInput
		p	1		command
		p	2		commandSource
	m	(Ljava/nio/file/Path;)V	a	dumpServerProperties
		p	1		file
	m	(ZLahr;)Lahr;	a	lambda$storeUsingWhiteList$4
		p	2		serverPropertiesHandler
	m	()Z	aU	forceSynchronousWrites
	m	()Lcmf;	aZ	getForcedGameType
	m	()Lalu;	ac	getPlayerList
	m	()Z	af	hasGui
	m	()I	ah	getSpawnProtectionRadius
	m	()Z	ai	repliesToStatus
	m	()Z	aj	hidesOnlinePlayers
	m	()I	as	getAbsoluteMaxWorldSize
	m	()I	av	getCompressionThreshold
	m	()Z	aw	enforceSecureProfile
	m	()Ljava/lang/String;	b	getServerIp
	m	(I)I	b	getScaledTrackingDistance
		p	1		initialDistance
	m	(Ljava/util/function/BooleanSupplier;)V	b	tickChildren
		p	1		shouldKeepTicking
	m	()I	bf	getMaxChainedNeighborUpdates
	m	()V	bh	handleConsoleInputs
	m	()Lahp;	bi	getPlayerList
	m	()V	bj	showGui
	m	()Z	bk	convertOldUsers
	m	()J	bl	getMaxTickLength
	m	()V	bu	waitForRetry
	m	()Ljava/lang/String;	bv	lambda$fillServerSystemReport$1
	m	()Ljava/lang/String;	bw	lambda$fillServerSystemReport$0
	m	(I)V	c	setPlayerIdleTimeout
		p	1		playerIdleTimeout
	m	()I	d	getServerPort
	m	()Z	e	initServer
	m	(Ljava/lang/String;)V	e	lambda$runCommand$3
	m	()Ljava/lang/String;	f	getServerName
	m	()V	g	onServerExit
	m	()Z	h	isHardcore
	m	()I	i	getOperatorUserPermissionLevel
	m	(Z)V	i	storeUsingWhiteList
		p	1		useWhitelist
	m	()I	j	getFunctionCompilationLevel
	m	()Z	k	shouldRconBroadcast
	m	()Z	l	isDedicatedServer
	m	()I	m	getRateLimitPacketsPerSecond
	m	()Z	n	isEpollEnabled
	m	()Z	o	isCommandBlockEnabled
	m	()Z	p	isPublished
	m	()Ljava/lang/String;	q	getLevelIdName
	m	()V	r	forceDifficulty
	m	()Ljava/lang/String;	s	getPluginNames
	m	()V	t	stopServer
	f	Lorg/slf4j/Logger;	n	LOGGER
	f	I	o	CONVERSION_RETRY_DELAY_MS
	f	I	p	CONVERSION_RETRIES
	f	Ljava/util/List;	q	consoleInput
	f	Lamk;	r	queryThreadGs4
	f	Lamh;	s	rconConsoleSource
	f	Lamm;	t	rconThread
	f	Lahs;	u	settings
	f	Lahw;	v	gui
	f	Lajo;	w	textFilterClient
c	ahq$1	net/minecraft/server/dedicated/DedicatedServer$1
	f	Lahq;	a	this$0
c	ahr	net/minecraft/server/dedicated/DedicatedServerProperties
	m	(Ljava/util/Properties;)V	<init>	<init>
		p	1		properties
	m	(Lhr;)Ldhu;	a	createDimensions
		p	1		dynamicRegistry
	m	(Lhr;Ljava/util/Properties;)Lahr;	a	reload
	m	(Ljava/lang/Integer;)Ljava/lang/Integer;	a	lambda$new$1
		p	0		percentage
	m	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Ljava/util/Optional;	a	getServerPackInfo
		p	0		url
		p	1		sha1
		p	2		hash
		p	3		required
		p	4		prompt
	m	(Ljava/lang/String;Ljava/util/function/Consumer;)V	a	lambda$getFeatures$4
		p	0		id
		p	1		consumer
	m	(Ljava/nio/file/Path;)Lahr;	a	fromFile
		p	0		path
	m	(Lhr;Ljava/util/Properties;)Lahu;	b	reload
		p	1		registryManager
		p	2		properties
	m	(Ljava/lang/Integer;)Ljava/lang/Integer;	b	lambda$new$0
		p	0		maxWorldSize
	m	(Ljava/lang/String;Ljava/lang/String;)Lclw;	b	getDatapackConfig
		p	0		enabled
		p	1		disabled
	m	(Ljava/lang/String;)Ltj;	c	parseResourcePackPrompt
		p	0		prompt
	m	(Ljava/lang/String;)Lcau;	d	getFeatures
		p	0		featureFlags
	m	(Ljava/lang/String;)Ljava/lang/String;	e	lambda$new$3
		p	0		type
	m	(Ljava/lang/String;)Lcom/google/gson/JsonObject;	f	lambda$new$2
		p	0		generatorSettings
	f	I	A	opPermissionLevel
	f	I	B	functionPermissionLevel
	f	J	C	maxTickTime
	f	I	D	maxChainedNeighborUpdates
	f	I	E	rateLimitPacketsPerSecond
	f	I	F	viewDistance
	f	I	G	simulationDistance
	f	I	H	maxPlayers
	f	I	I	networkCompressionThreshold
	f	Z	J	broadcastRconToOps
	f	Z	K	broadcastConsoleToOps
	f	I	L	maxWorldSize
	f	Z	M	syncChunkWrites
	f	Z	N	enableJmxMonitoring
	f	Z	O	enableStatus
	f	Z	P	hideOnlinePlayers
	f	I	Q	entityBroadcastRangePercentage
	f	Ljava/lang/String;	R	textFilteringConfig
	f	Ljava/util/Optional;	S	serverResourcePackInfo
	f	Lclw;	T	initialDataPackConfiguration
	f	Lahu$a;	U	playerIdleTimeout
	f	Lahu$a;	V	whiteList
	f	Z	W	enforceSecureProfile
	f	Ldhx;	X	worldOptions
	f	Lorg/slf4j/Logger;	Z	LOGGER
	f	Z	a	onlineMode
	f	Ljava/util/regex/Pattern;	aa	SHA1
	f	Lcom/google/common/base/Splitter;	ab	COMMA_SPLITTER
	f	Lahr$a;	ac	worldDimensionData
	f	Z	b	preventProxyConnections
	f	Ljava/lang/String;	c	serverIp
	f	Z	d	spawnAnimals
	f	Z	e	spawnNpcs
	f	Z	f	pvp
	f	Z	g	allowFlight
	f	Ljava/lang/String;	h	motd
	f	Z	i	forceGameMode
	f	Z	j	enforceWhitelist
	f	Lbdv;	k	difficulty
	f	Lcmf;	l	gamemode
	f	Ljava/lang/String;	m	levelName
	f	I	n	serverPort
	f	Ljava/lang/Boolean;	o	announcePlayerAchievements
	f	Z	p	enableQuery
	f	I	q	queryPort
	f	Z	r	enableRcon
	f	I	s	rconPort
	f	Ljava/lang/String;	t	rconPassword
	f	Z	u	hardcore
	f	Z	v	allowNether
	f	Z	w	spawnMonsters
	f	Z	x	useNativeTransport
	f	Z	y	enableCommandBlock
	f	I	z	spawnProtection
c	ahr$a	net/minecraft/server/dedicated/DedicatedServerProperties$WorldDimensionData
	m	()Lcom/google/gson/JsonObject;	a	generatorSettings
	m	(Ladd;)Ladc;	a	lambda$create$2
		p	0		levelTypeId
	m	(Lhd$c;)Lhd$c;	a	lambda$create$4
	m	(Lhq;)Ljava/util/Optional;	a	lambda$create$0
	m	(Lhr;)Ldhu;	a	create
		p	1		dynamicRegistryManager
	m	()Ljava/lang/String;	b	levelType
	m	()Ljava/util/Optional;	c	lambda$create$3
	m	()Ljava/lang/IllegalStateException;	d	lambda$create$1
	f	Lcom/google/gson/JsonObject;	a	generatorSettings
	f	Ljava/lang/String;	b	levelType
	f	Ljava/util/Map;	c	LEGACY_PRESET_NAMES
c	ahs	net/minecraft/server/dedicated/DedicatedServerSettings
	m	(Ljava/nio/file/Path;)V	<init>	<init>
		p	1		path
	m	()Lahr;	a	getProperties
	m	(Ljava/util/function/UnaryOperator;)Lahs;	a	update
		p	1		applier
	m	()V	b	forceSave
	f	Ljava/nio/file/Path;	a	source
	f	Lahr;	b	properties
c	aht	net/minecraft/server/dedicated/ServerWatchdog
	m	(Lahq;)V	<init>	<init>
		p	1		server
	m	()V	a	exit
	m	(Laip;)Ljava/lang/String;	a	lambda$run$1
		p	0		world
	m	()Ljava/lang/String;	b	lambda$run$2
	m	()Ljava/lang/String;	c	lambda$run$0
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	J	b	MAX_SHUTDOWN_TIME
	f	I	c	SHUTDOWN_STATUS
	f	Lahq;	d	server
	f	J	e	maxTickTime
c	aht$1	net/minecraft/server/dedicated/ServerWatchdog$1
	f	Laht;	a	this$0
c	ahu	net/minecraft/server/dedicated/Settings
	m	(Ljava/util/Properties;)V	<init>	<init>
		p	1		properties
	m	()Ljava/util/Properties;	a	cloneProperties
	m	(Ljava/lang/String;)Ljava/lang/String;	a	getLegacyString
		p	1		key
	m	(Ljava/lang/String;I)I	a	get
		p	1		key
		p	2		fallback
	m	(Ljava/lang/String;J)J	a	get
		p	1		key
		p	2		fallback
	m	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	a	get
		p	1		key
		p	2		fallback
	m	(Ljava/lang/String;Ljava/util/function/Function;)Ljava/lang/Object;	a	getLegacy
		p	1		key
		p	2		stringifier
	m	(Ljava/lang/String;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object;	a	get
		p	1		key
		p	2		parser
		p	3		fallback
	m	(Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object;	a	get
		p	1		key
		p	2		parser
		p	3		stringifier
		p	4		fallback
	m	(Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/UnaryOperator;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object;	a	get
		p	1		key
		p	2		parser
		p	3		parsedTransformer
		p	4		stringifier
		p	5		fallback
	m	(Ljava/lang/String;Ljava/util/function/UnaryOperator;I)I	a	get
		p	1		key
		p	2		transformer
		p	3		fallback
	m	(Ljava/lang/String;Z)Z	a	get
		p	1		key
		p	2		fallback
	m	(Ljava/util/function/Function;)Ljava/util/function/Function;	a	wrapNumberDeserializer
		p	0		parser
	m	(Ljava/util/function/Function;Ljava/lang/String;)Ljava/lang/Number;	a	lambda$wrapNumberDeserializer$0
		p	1		string
	m	(Ljava/util/function/Function;Ljava/util/function/UnaryOperator;Ljava/lang/String;)Ljava/lang/Object;	a	lambda$get$2
		p	2		value
	m	(Ljava/util/function/IntFunction;Ljava/util/function/Function;)Ljava/util/function/Function;	a	dispatchNumberOrString
		p	0		intParser
		p	1		fallbackParser
	m	(Ljava/util/function/IntFunction;Ljava/util/function/Function;Ljava/lang/String;)Ljava/lang/Object;	a	lambda$dispatchNumberOrString$1
		p	2		string
	m	(Lhr;Ljava/util/Properties;)Lahu;	b	reload
		p	1		registryManager
		p	2		properties
	m	(Ljava/lang/String;)Ljava/lang/Boolean;	b	getLegacyBoolean
		p	1		key
	m	(Ljava/lang/String;I)Lahu$a;	b	getMutable
		p	1		key
		p	2		fallback
	m	(Ljava/lang/String;Ljava/util/function/Function;Ljava/lang/Object;)Lahu$a;	b	getMutable
		p	1		key
		p	2		parser
		p	3		fallback
	m	(Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/lang/Object;)Lahu$a;	b	getMutable
		p	1		key
		p	2		parser
		p	3		stringifier
		p	4		fallback
	m	(Ljava/lang/String;Z)Lahu$a;	b	getMutable
		p	1		key
		p	2		fallback
	m	(Ljava/nio/file/Path;)Ljava/util/Properties;	b	loadFromFile
		p	0		path
	m	(Ljava/lang/String;)Ljava/lang/String;	c	getStringRaw
		p	1		key
	m	(Ljava/nio/file/Path;)V	c	store
		p	1		path
	f	Ljava/util/Properties;	Y	properties
	f	Lorg/slf4j/Logger;	a	LOGGER
c	ahu$a	net/minecraft/server/dedicated/Settings$MutableValue
	m	(Lahu;Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/Function;)V	<init>	<init>
		p	2		key
		p	3		value
		p	4		stringifier
	m	(Lhr;Ljava/lang/Object;)Lahu;	a	update
		p	1		registryManager
		p	2		value
	f	Lahu;	a	this$0
	f	Ljava/lang/String;	b	key
	f	Ljava/lang/Object;	c	value
	f	Ljava/util/function/Function;	d	serializer
c	ahv	net/minecraft/server/dedicated/package-info
c	ahw	net/minecraft/server/gui/MinecraftServerGui
	m	(Lahq;)V	<init>	<init>
		p	1		server
	m	()V	a	start
	m	(Lahq;)Lahw;	a	showFrameFor
		p	0		server
	m	(Ljava/lang/Runnable;)V	a	addFinalizer
		p	1		task
	m	(Ljavax/swing/JTextArea;Ljavax/swing/JScrollPane;)V	a	lambda$buildChatPanel$1
	m	(Ljavax/swing/JTextArea;Ljavax/swing/JScrollPane;Ljava/lang/String;)V	a	print
		p	1		textArea
		p	2		scrollPane
		p	3		message
	m	(Ljavax/swing/JTextField;Ljava/awt/event/ActionEvent;)V	a	lambda$buildChatPanel$0
		p	2		event
	m	()V	b	close
	m	(Ljavax/swing/JTextArea;Ljavax/swing/JScrollPane;Ljava/lang/String;)V	b	lambda$print$2
	m	()Ljavax/swing/JComponent;	c	buildInfoPanel
	m	()Ljavax/swing/JComponent;	d	buildPlayerPanel
	m	()Ljavax/swing/JComponent;	e	buildChatPanel
	m	()V	f	runFinalizers
	f	Ljava/awt/Font;	a	MONOSPACED
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ljava/lang/String;	c	TITLE
	f	Ljava/lang/String;	d	SHUTDOWN_TITLE
	f	Lahq;	e	server
	f	Ljava/lang/Thread;	f	logAppenderThread
	f	Ljava/util/Collection;	g	finalizers
	f	Ljava/util/concurrent/atomic/AtomicBoolean;	h	isClosing
c	ahw$1	net/minecraft/server/gui/MinecraftServerGui$1
	f	Lahw;	a	val$gui
	f	Ljavax/swing/JFrame;	b	val$frame
	f	Lahq;	c	val$server
c	ahw$2	net/minecraft/server/gui/MinecraftServerGui$2
	f	Lahw;	a	this$0
c	ahx	net/minecraft/server/gui/PlayerListComponent
	m	(Lnet/minecraft/server/MinecraftServer;)V	<init>	<init>
		p	1		server
	m	()V	a	tick
	f	Lnet/minecraft/server/MinecraftServer;	a	server
	f	I	b	tickCount
c	ahy	net/minecraft/server/gui/StatsComponent
	m	(Lnet/minecraft/server/MinecraftServer;)V	<init>	<init>
		p	1		server
	m	()V	a	close
	m	(Ljava/awt/event/ActionEvent;)V	a	lambda$new$1
		p	1		event
	m	(Ljava/text/DecimalFormat;)V	a	lambda$static$0
	m	([J)D	a	getAverage
		p	1		values
	m	()V	b	tick
	f	Ljava/text/DecimalFormat;	a	DECIMAL_FORMAT
	f	[I	b	values
	f	I	c	vp
	f	[Ljava/lang/String;	d	msgs
	f	Lnet/minecraft/server/MinecraftServer;	e	server
	f	Ljavax/swing/Timer;	f	timer
c	ahz	net/minecraft/server/gui/package-info
c	aia	net/minecraft/server/level/BlockDestructionProgress
	m	(ILgt;)V	<init>	<init>
		p	1		breakingEntityId
		p	2		pos
	m	()I	a	getId
	m	(I)V	a	setProgress
		p	1		stage
	m	(Laia;)I	a	compareTo
	m	()Lgt;	b	getPos
	m	(I)V	b	updateTick
		p	1		lastUpdateTick
	m	()I	c	getProgress
	m	()I	d	getUpdatedRenderTick
	f	I	a	id
	f	Lgt;	b	pos
	f	I	c	progress
	f	I	d	updatedRenderTick
c	aib	net/minecraft/server/level/ChunkHolder
	m	(Lclp;ILcmk;Ldwa;Laib$d;Laib$e;)V	<init>	<init>
		p	1		pos
		p	2		level
		p	3		world
		p	4		lightingProvider
		p	5		levelUpdateListener
		p	6		playersWatchingChunkProvider
	m	()Ljava/util/concurrent/CompletableFuture;	a	getTickingChunkFuture
	m	(I)V	a	setTicketLevel
		p	1		level
	m	(Laic;Laib$c;)V	a	demoteFullChunk
	m	(Laic;Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/Executor;Laib$c;)V	a	scheduleFullChunkPromotion
	m	(Laic;Ljava/util/concurrent/Executor;)V	a	updateFutures
		p	1		chunkStorage
	m	(Lcmi;Lgt;)V	a	broadcastBlockEntity
		p	1		world
		p	2		pos
	m	(Lcmi;Lgt;Ldbq;)V	a	broadcastBlockEntityIfNeeded
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcmr;I)V	a	sectionLightChanged
		p	1		lightType
		p	2		y
	m	(Lddn;)Lddn;	a	lambda$updateChunkToSave$3
	m	(Lddn;Laib$a;)Lddn;	a	lambda$updateChunkToSave$4
	m	(Lddn;Lcom/mojang/datafixers/util/Either;)Lddn;	a	lambda$updateChunkToSave$5
	m	(Lddn;Ljava/lang/Object;)Lddn;	a	lambda$addSaveDependency$2
	m	(Ldds;)Ljava/util/concurrent/CompletableFuture;	a	getFutureIfPresentUnchecked
		p	1		leastStatus
	m	(Ldds;Laic;)Ljava/util/concurrent/CompletableFuture;	a	getOrScheduleFuture
		p	1		targetStatus
		p	2		chunkStorage
	m	(Lddx;)V	a	replaceProtoChunk
		p	1		chunk
	m	(Lddy;)V	a	broadcastChanges
		p	1		chunk
	m	(Lgt;)V	a	blockChanged
		p	1		pos
	m	(Ljava/lang/String;Ljava/util/concurrent/CompletableFuture;)V	a	addSaveDependency
		p	1		thenDesc
		p	2		then
	m	(Ljava/util/concurrent/CompletableFuture;Lcom/mojang/datafixers/util/Either;)V	a	lambda$scheduleFullChunkPromotion$8
	m	(Ljava/util/concurrent/CompletableFuture;Lddy;)V	a	lambda$scheduleFullChunkPromotion$7
	m	(Ljava/util/concurrent/CompletableFuture;Ljava/lang/String;)V	a	updateChunkToSave
		p	1		then
		p	2		thenDesc
	m	(Lvb;Laiq;)V	a	lambda$broadcast$1
		p	1		player
	m	(Lvb;Z)V	a	broadcast
		p	1		packet
		p	2		onlyOnWatchDistanceEdge
	m	()Ljava/util/concurrent/CompletableFuture;	b	getEntityTickingChunkFuture
	m	(I)Ldds;	b	getStatus
		p	0		level
	m	(Laic;Laib$c;)V	b	lambda$scheduleFullChunkPromotion$6
	m	(Lcmi;Lgt;Ldbq;)V	b	lambda$broadcastChanges$0
		p	2		pos
		p	3		state
	m	(Ldds;)Ljava/util/concurrent/CompletableFuture;	b	getFutureIfPresent
		p	1		leastStatus
	m	()Ljava/util/concurrent/CompletableFuture;	c	getFullChunkFuture
	m	(I)Laib$c;	c	getFullChunkStatus
		p	0		distance
	m	()Lddy;	d	getTickingChunk
	m	(I)V	d	setQueueLevel
		p	1		level
	m	()Lddy;	e	getFullChunk
	m	()Ldds;	f	getLastAvailableStatus
	m	()Lddn;	g	getLastAvailable
	m	()Ljava/util/concurrent/CompletableFuture;	h	getChunkToSave
	m	()Laib$c;	i	getFullStatus
	m	()Lclp;	j	getPos
	m	()I	k	getTicketLevel
	m	()I	l	getQueueLevel
	m	()Z	m	wasAccessibleSinceLastSave
	m	()V	n	refreshAccessibility
	m	()Ljava/util/List;	o	getAllFutures
	f	Z	A	wasAccessibleSinceLastSave
	f	Z	B	resendLight
	f	Ljava/util/concurrent/CompletableFuture;	C	pendingFullStateConfirmation
	f	Lcom/mojang/datafixers/util/Either;	a	UNLOADED_CHUNK
	f	Ljava/util/concurrent/CompletableFuture;	b	UNLOADED_CHUNK_FUTURE
	f	Lcom/mojang/datafixers/util/Either;	c	UNLOADED_LEVEL_CHUNK
	f	Lcom/mojang/datafixers/util/Either;	d	NOT_DONE_YET
	f	Ljava/util/concurrent/CompletableFuture;	e	UNLOADED_LEVEL_CHUNK_FUTURE
	f	Ljava/util/List;	f	CHUNK_STATUSES
	f	[Laib$c;	g	FULL_CHUNK_STATUSES
	f	I	h	BLOCKS_BEFORE_RESEND_FUDGE
	f	Ljava/util/concurrent/atomic/AtomicReferenceArray;	i	futures
	f	Lcmk;	j	levelHeightAccessor
	f	Ljava/util/concurrent/CompletableFuture;	k	fullChunkFuture
	f	Ljava/util/concurrent/CompletableFuture;	l	tickingChunkFuture
	f	Ljava/util/concurrent/CompletableFuture;	m	entityTickingChunkFuture
	f	Ljava/util/concurrent/CompletableFuture;	n	chunkToSave
	f	Laoo;	o	chunkToSaveHistory
	f	I	p	oldTicketLevel
	f	I	q	ticketLevel
	f	I	r	queueLevel
	f	Lclp;	s	pos
	f	Z	t	hasChangedSections
	f	[Lit/unimi/dsi/fastutil/shorts/ShortSet;	u	changedBlocksPerSection
	f	Ljava/util/BitSet;	v	blockChangedLightSectionFilter
	f	Ljava/util/BitSet;	w	skyChangedLightSectionFilter
	f	Ldwa;	x	lightEngine
	f	Laib$d;	y	onLevelChange
	f	Laib$e;	z	playerProvider
c	aib$1	net/minecraft/server/level/ChunkHolder$1
	f	Laib;	a	this$0
c	aib$a	net/minecraft/server/level/ChunkHolder$ChunkLoadingFailure
	f	Laib$a;	b	UNLOADED
c	aib$a$1	net/minecraft/server/level/ChunkHolder$ChunkLoadingFailure$1
c	aib$b	net/minecraft/server/level/ChunkHolder$ChunkSaveDebug
	m	(Ljava/lang/Thread;Ljava/util/concurrent/CompletableFuture;Ljava/lang/String;)V	<init>	<init>
		p	1		thread
		p	2		action
		p	3		actionDesc
	f	Ljava/lang/Thread;	a	thread
	f	Ljava/util/concurrent/CompletableFuture;	b	future
	f	Ljava/lang/String;	c	source
c	aib$c	net/minecraft/server/level/ChunkHolder$FullChunkStatus
	m	()[Laib$c;	a	$values
	m	(Laib$c;)Z	a	isOrAfter
		p	1		levelType
	f	Laib$c;	a	INACCESSIBLE
	f	Laib$c;	b	BORDER
	f	Laib$c;	c	TICKING
	f	Laib$c;	d	ENTITY_TICKING
	f	[Laib$c;	e	$VALUES
c	aib$d	net/minecraft/server/level/ChunkHolder$LevelChangeListener
	m	(Lclp;Ljava/util/function/IntSupplier;ILjava/util/function/IntConsumer;)V	onLevelChange	onLevelChange
		p	1		pos
		p	2		levelGetter
		p	3		targetLevel
		p	4		levelSetter
c	aib$e	net/minecraft/server/level/ChunkHolder$PlayerProvider
	m	(Lclp;Z)Ljava/util/List;	a	getPlayers
		p	1		chunkPos
		p	2		onlyOnWatchDistanceEdge
c	aic	net/minecraft/server/level/ChunkMap
	m	(Laip;Ldye$c;Lcom/mojang/datafixers/DataFixer;Ldvi;Ljava/util/concurrent/Executor;Lbco;Ldea;Lddo;Laiy;Ldfg;Ljava/util/function/Supplier;IZ)V	<init>	<init>
		p	1		world
		p	2		session
		p	3		dataFixer
		p	4		structureTemplateManager
		p	5		executor
		p	6		mainThreadExecutor
		p	7		chunkProvider
		p	8		chunkGenerator
		p	9		worldGenerationProgressListener
		p	10		chunkStatusChangeListener
		p	11		persistentStateManagerFactory
		p	12		viewDistance
		p	13		dsync
	m	()Lddo;	a	generator
	m	(I)V	a	setViewDistance
		p	1		watchDistance
	m	(IIIII)Z	a	isChunkInRange
		p	0		x1
		p	1		z1
		p	2		x2
		p	3		z2
		p	4		distance
	m	(IIILjava/util/List;)Lcom/mojang/datafixers/util/Either;	a	lambda$getChunkRangeFuture$3
		p	4		chunks
	m	(J)Laib;	a	getUpdatingChunkIfPresent
		p	1		pos
	m	(JILaib;I)Laib;	a	updateChunkScheduling
		p	1		pos
		p	3		level
		p	4		holder
	m	(JLaib;)V	a	scheduleUnload
		p	1		pos
		p	3		holder
	m	(Laib$a;)Ljava/lang/String;	a	lambda$printFuture$54
		p	0		unloaded
	m	(Laib;)Ljava/util/concurrent/CompletableFuture;	a	prepareTickingChunk
		p	1		holder
	m	(Laib;Lcom/mojang/datafixers/util/Either;)Lcom/mojang/datafixers/util/Either;	a	lambda$protoChunkToFullChunk$33
		p	2		either
	m	(Laib;Lddn;)Lddn;	a	lambda$protoChunkToFullChunk$32
		p	2		protoChunk
	m	(Laib;Ldds;)Ljava/util/concurrent/CompletableFuture;	a	schedule
		p	1		holder
		p	2		requiredStatus
	m	(Laib;Ljava/lang/Runnable;)V	a	lambda$prepareAccessibleChunk$47
		p	2		task
	m	(Laib;Ljava/lang/Void;Ljava/lang/Throwable;)V	a	lambda$scheduleUnload$14
		p	1		void_
		p	2		throwable
	m	(Laib;Ljava/util/concurrent/CompletableFuture;JLddn;)V	a	lambda$scheduleUnload$13
		p	5		chunk
	m	(Laip;Ljava/util/List;)V	a	postLoadProtoChunk
		p	0		world
		p	1		nbt
	m	(Laiq;)V	a	move
		p	1		player
	m	(Laiq;Lclp;)Z	a	playerIsCloseEnoughForSpawning
		p	1		player
		p	2		pos
	m	(Laiq;Lclp;Lorg/apache/commons/lang3/mutable/MutableObject;ZZ)V	a	updateChunkTracking
		p	1		player
		p	2		pos
		p	3		packet
		p	4		oldWithinViewDistance
		p	5		newWithinViewDistance
	m	(Laiq;Ljava/util/List;)V	a	lambda$resendBiomesForChunks$57
		p	0		player
		p	1		chunks
	m	(Laiq;Lorg/apache/commons/lang3/mutable/MutableObject;Lddy;)V	a	playerLoadedChunk
		p	1		player
		p	2		cachedDataPacket
		p	3		chunk
	m	(Laiq;Z)V	a	updatePlayerStatus
		p	1		player
		p	2		added
	m	(Lbfh;)V	a	addEntity
		p	1		entity
	m	(Lbfh;Lvb;)V	a	broadcast
		p	1		entity
		p	2		packet
	m	(Lclp;)Ljava/lang/String;	a	getChunkDebugData
		p	1		chunkPos
	m	(Lclp;ILjava/util/function/IntFunction;)Ljava/util/concurrent/CompletableFuture;	a	getChunkRangeFuture
		p	1		centerChunk
		p	2		margin
		p	3		distanceToStatus
	m	(Lclp;ILorg/apache/commons/lang3/mutable/MutableObject;Laiq;)V	a	lambda$setViewDistance$48
		p	4		player
	m	(Lclp;Laib$a;)Ljava/util/concurrent/CompletableFuture;	a	lambda$scheduleChunkGeneration$26
		p	2		unloaded
	m	(Lclp;Laib$c;)V	a	onFullChunkStatusChange
		p	1		chunkPos
		p	2		levelType
	m	(Lclp;Laib;Ldds;Ljava/util/concurrent/Executor;Lcom/mojang/datafixers/util/Either;)Ljava/util/concurrent/CompletionStage;	a	lambda$scheduleChunkGeneration$27
		p	5		either
	m	(Lclp;Laib;Ldds;Ljava/util/concurrent/Executor;Ljava/util/List;)Ljava/util/concurrent/CompletableFuture;	a	lambda$scheduleChunkGeneration$25
		p	5		chunks
	m	(Lclp;Lbfh;)D	a	euclideanDistanceSquared
		p	0		pos
		p	1		entity
	m	(Lclp;Lcom/mojang/datafixers/util/Either;)V	a	lambda$prepareTickingChunk$43
		p	2		either
	m	(Lclp;Ldds$a;)B	a	markPosition
		p	1		pos
		p	2		type
	m	(Lclp;Lddy;)V	a	lambda$prepareTickingChunk$42
		p	2		chunk
	m	(Lclp;Ljava/lang/Throwable;)Lcom/mojang/datafixers/util/Either;	a	lambda$scheduleChunkLoad$19
		p	2		throwable
	m	(Lclp;Ljava/util/Optional;)Lcom/mojang/datafixers/util/Either;	a	lambda$scheduleChunkLoad$18
		p	2		nbt
	m	(Lclp;Z)Ljava/util/List;	a	getPlayers
		p	1		chunkPos
		p	2		onlyOnWatchDistanceEdge
	m	(Lcom/google/gson/JsonElement;)Lcom/mojang/serialization/DataResult;	a	lambda$debugReloadGenerator$0
		p	0		json
	m	(Lcom/mojang/datafixers/util/Either;)Lcom/mojang/datafixers/util/Either;	a	lambda$prepareAccessibleChunk$46
		p	0		either
	m	(Lddn;)Z	a	save
		p	1		chunk
	m	(Lddo;)V	a	lambda$debugReloadGenerator$1
		p	1		chunkGenerator
	m	(Ldds;)Ljava/lang/String;	a	lambda$scheduleChunkGeneration$21
	m	(Ldds;I)Ldds;	a	getDependencyStatus
		p	1		centerChunkTargetStatus
		p	2		distance
	m	(Lddy;)Ljava/lang/String;	a	lambda$printFuture$53
		p	0		chunk
	m	(Ldeh;Lddy;)V	a	lambda$protoChunkToFullChunk$30
		p	2		chunk
	m	(Ljava/io/Writer;)V	a	dumpChunks
		p	1		writer
	m	(Ljava/lang/IllegalStateException;Ljava/lang/String;)Ly;	a	debugFuturesAndCreateReportedException
		p	1		exception
		p	2		details
	m	(Ljava/lang/StringBuilder;Laib;)V	a	lambda$debugFuturesAndCreateReportedException$5
		p	1		chunkHolder
	m	(Ljava/lang/StringBuilder;Laib;Lcom/mojang/datafixers/util/Pair;)V	a	lambda$debugFuturesAndCreateReportedException$4
		p	2		pair
	m	(Ljava/lang/Throwable;Lclp;)Lcom/mojang/datafixers/util/Either;	a	handleChunkLoadFailure
		p	1		throwable
		p	2		chunkPos
	m	(Ljava/util/List;)V	a	resendBiomesForChunks
		p	1		chunks
	m	(Ljava/util/Optional;)Ljava/util/Optional;	a	lambda$readChunk$55
		p	1		nbt
	m	(Ljava/util/concurrent/CompletableFuture;)Ljava/lang/String;	a	printFuture
		p	0		future
	m	(Ljava/util/function/BooleanSupplier;)V	a	tick
		p	1		shouldKeepTicking
	m	(Lo;)V	a	lambda$scheduleChunkGeneration$24
	m	(Lorg/apache/commons/lang3/mutable/MutableBoolean;Lddn;)V	a	lambda$saveAllChunks$11
		p	1		chunk
	m	(Lorg/apache/commons/lang3/mutable/MutableObject;Lddy;Laiq;)V	a	lambda$prepareTickingChunk$41
		p	3		player
	m	(Z)V	a	saveAllChunks
		p	1		flush
	m	()Lddp;	b	generatorState
	m	(I)Ldds;	b	lambda$prepareTickingChunk$35
	m	(IIIII)Z	b	isChunkOnRangeBorder
		p	0		x1
		p	1		z1
		p	2		x2
		p	3		z2
		p	4		distance
	m	(J)Laib;	b	getVisibleChunkIfPresent
		p	1		pos
	m	(Laib;)Ljava/util/concurrent/CompletableFuture;	b	prepareAccessibleChunk
		p	1		holder
	m	(Laib;Lddn;)Ljava/util/concurrent/CompletableFuture;	b	lambda$scheduleChunkGeneration$23
		p	2		chunk
	m	(Laib;Ldds;)Ljava/util/concurrent/CompletableFuture;	b	scheduleChunkGeneration
		p	1		holder
		p	2		requiredStatus
	m	(Laib;Ljava/lang/Runnable;)V	b	lambda$prepareTickingChunk$44
		p	2		task
	m	(Laiq;)Z	b	skipPlayer
		p	1		player
	m	(Lbfh;)V	b	removeEntity
		p	1		entity
	m	(Lbfh;Lvb;)V	b	broadcastAndSend
		p	1		entity
		p	2		packet
	m	(Lclp;)Ljava/util/concurrent/CompletableFuture;	b	prepareEntityTickingChunk
		p	1		pos
	m	(Lclp;Ljava/util/Optional;)Ljava/util/Optional;	b	lambda$scheduleChunkLoad$17
		p	1		nbt
	m	(Lclp;Lre;)Z	b	lambda$scheduleChunkLoad$16
		p	1		nbt2
	m	(Lcom/mojang/datafixers/util/Either;)Lcom/mojang/datafixers/util/Either;	b	lambda$prepareTickingChunk$40
		p	1		either
	m	(Lddn;)Ljava/util/Optional;	b	lambda$dumpChunks$49
		p	0		chunk
	m	(Ldds;I)Ldds;	b	lambda$scheduleChunkGeneration$20
		p	2		distance
	m	(Lddy;)Ljava/lang/Integer;	b	lambda$dumpChunks$52
		p	0		chunk
	m	(Ljava/util/List;)Lddy;	b	lambda$prepareAccessibleChunk$45
		p	0		chunks
	m	(Ljava/util/function/BooleanSupplier;)V	b	processUnloads
		p	1		shouldKeepTicking
	m	(Lre;)Z	b	isChunkDataValid
		p	0		nbt
	m	()Ldhn;	c	randomState
	m	(I)Ldds;	c	lambda$prepareEntityTickingChunk$6
		p	0		distance
	m	(J)Ljava/util/function/IntSupplier;	c	getChunkQueueLevel
		p	1		pos
	m	(Laib;)Ljava/util/concurrent/CompletableFuture;	c	protoChunkToFullChunk
		p	1		chunkHolder
	m	(Laib;Lddn;)Ljava/util/concurrent/CompletableFuture;	c	lambda$schedule$15
		p	2		chunk
	m	(Laib;Ljava/lang/Runnable;)V	c	lambda$prepareTickingChunk$38
		p	2		task
	m	(Laiq;)Lhw;	c	updatePlayerPos
		p	1		player
	m	(Lclp;)V	c	releaseLightTicket
		p	1		pos
	m	(Lcom/mojang/datafixers/util/Either;)Lcom/mojang/datafixers/util/Either;	c	lambda$prepareTickingChunk$37
	m	(Lddn;)Z	c	lambda$saveAllChunks$10
		p	0		chunk
	m	(Lddy;)Ljava/lang/Integer;	c	lambda$dumpChunks$51
		p	0		chunk
	m	(Ljava/util/List;)Lddy;	c	lambda$prepareTickingChunk$36
	m	(Lre;)Lre;	c	upgradeChunkTag
		p	1		nbt
	m	()V	d	debugReloadGenerator
	m	(J)I	d	lambda$getChunkQueueLevel$2
	m	(Laib;)Z	d	saveChunkIfNeeded
		p	1		chunkHolder
	m	(Laib;Ljava/lang/Runnable;)V	d	lambda$protoChunkToFullChunk$34
		p	2		task
	m	(Laiq;)Ljava/util/List;	d	lambda$resendBiomesForChunks$56
		p	0		player
	m	(Lclp;)Z	d	anyPlayerCloseEnoughForSpawning
		p	1		pos
	m	(Lcom/mojang/datafixers/util/Either;)Lcom/mojang/datafixers/util/Either;	d	lambda$prepareEntityTickingChunk$8
		p	0		either
	m	(Lddy;)Ljava/lang/Integer;	d	lambda$dumpChunks$50
		p	0		chunk
	m	(Ljava/util/List;)Lddy;	d	lambda$prepareEntityTickingChunk$7
		p	0		chunks
	m	()Lais;	e	getLightEngine
	m	(Laib;)Laib$c;	e	lambda$protoChunkToFullChunk$31
	m	(Laib;Ljava/lang/Runnable;)V	e	lambda$scheduleChunkGeneration$22
		p	2		task
	m	(Lclp;)Ljava/util/List;	e	getPlayersCloseForSpawning
		p	1		pos
	m	(Lddy;)V	e	lambda$prepareTickingChunk$39
		p	1		chunk
	m	()Z	f	hasWork
	m	(Laib;)Lddn;	f	lambda$saveAllChunks$9
		p	1		chunkHolder
	m	()Z	g	promoteChunkMap
	m	(Lclp;)Ljava/util/concurrent/CompletableFuture;	g	scheduleChunkLoad
		p	1		pos
	m	()I	h	getTickingGenerated
	m	(Lclp;)Lddn;	h	createEmptyChunk
		p	1		chunkPos
	m	()I	i	size
	m	(Lclp;)V	i	markPositionReplaceable
		p	1		pos
	m	()Laii;	j	getDistanceManager
	m	(Lclp;)Z	j	isExistingChunkFull
		p	1		pos
	m	()Ljava/lang/Iterable;	k	getChunks
	m	(Lclp;)Ljava/util/concurrent/CompletableFuture;	k	readChunk
		p	1		chunkPos
	m	()V	l	tick
	m	(Lclp;)Ljava/lang/String;	l	lambda$releaseLightTicket$29
	m	()Lbqx;	m	getPoiManager
	m	(Lclp;)V	m	lambda$releaseLightTicket$28
	m	()Ljava/lang/String;	n	getStorageName
	m	()Z	q	lambda$saveAllChunks$12
	f	Z	A	modified
	f	Laie;	B	queueSorter
	f	Lbcq;	C	worldgenMailbox
	f	Lbcq;	D	mainThreadMailbox
	f	Laiy;	E	progressListener
	f	Ldfg;	F	chunkStatusListener
	f	Laic$a;	G	distanceManager
	f	Ljava/util/concurrent/atomic/AtomicInteger;	H	tickingGenerated
	f	Ldvi;	I	structureTemplateManager
	f	Ljava/lang/String;	J	storageName
	f	Laij;	K	playerMap
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	L	entityMap
	f	Lit/unimi/dsi/fastutil/longs/Long2ByteMap;	M	chunkTypeCache
	f	Lit/unimi/dsi/fastutil/longs/Long2LongMap;	N	chunkSaveCooldowns
	f	Ljava/util/Queue;	O	unloadQueue
	f	I	P	viewDistance
	f	I	a	MAX_VIEW_DISTANCE
	f	I	b	MAX_CHUNK_DISTANCE
	f	I	c	FORCED_TICKET_LEVEL
	f	B	f	CHUNK_TYPE_REPLACEABLE
	f	B	g	CHUNK_TYPE_UNKNOWN
	f	B	h	CHUNK_TYPE_FULL
	f	Lorg/slf4j/Logger;	i	LOGGER
	f	I	j	CHUNK_SAVED_PER_TICK
	f	I	k	CHUNK_SAVED_EAGERLY_PER_TICK
	f	I	l	EAGER_CHUNK_SAVE_COOLDOWN_IN_MILLIS
	f	I	m	MIN_VIEW_DISTANCE
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectLinkedOpenHashMap;	n	updatingChunkMap
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectLinkedOpenHashMap;	o	visibleChunkMap
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectLinkedOpenHashMap;	p	pendingUnloads
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	q	entitiesInLevel
	f	Laip;	r	level
	f	Lais;	s	lightEngine
	f	Lbco;	t	mainThreadExecutor
	f	Lddo;	u	generator
	f	Ldhn;	v	randomState
	f	Lddp;	w	chunkGeneratorState
	f	Ljava/util/function/Supplier;	x	overworldDataStorage
	f	Lbqx;	y	poiManager
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	z	toDrop
c	aic$1	net/minecraft/server/level/ChunkMap$1
	f	Lclp;	a	val$k
	f	Laic;	c	this$0
c	aic$2	net/minecraft/server/level/ChunkMap$2
	f	I	a	val$startX
	f	I	c	val$finalI
	f	I	d	val$range
	f	I	e	val$startZ
	f	Lcom/mojang/datafixers/util/Either;	f	val$either
	f	Laic;	g	this$0
c	aic$a	net/minecraft/server/level/ChunkMap$DistanceManager
	m	(Laic;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)V	<init>	<init>
		p	2		workerExecutor
		p	3		mainThreadExecutor
	m	(J)Z	a	isChunkToRemove
		p	1		pos
	m	(JILaib;I)Laib;	a	updateChunkScheduling
		p	1		pos
		p	3		level
		p	4		holder
	m	(J)Laib;	b	getChunk
		p	1		pos
	f	Laic;	a	this$0
c	aic$b	net/minecraft/server/level/ChunkMap$TrackedEntity
	m	(Laic;Lbfh;IIZ)V	<init>	<init>
		p	2		entity
		p	3		maxDistance
		p	4		tickInterval
		p	5		alwaysUpdateVelocity
	m	()V	a	broadcastRemoved
	m	(I)I	a	scaledRange
		p	1		initialDistance
	m	(Laiq;)V	a	removePlayer
		p	1		player
	m	(Ljava/util/List;)V	a	updatePlayers
		p	1		players
	m	(Lvb;)V	a	broadcast
		p	1		packet
	m	()I	b	getEffectiveRange
	m	(Laiq;)V	b	updatePlayer
		p	1		player
	m	(Lvb;)V	b	broadcastAndSend
		p	1		packet
	f	Laic;	a	this$0
	f	Laio;	b	serverEntity
	f	Lbfh;	c	entity
	f	I	d	range
	f	Lhw;	e	lastSectionPos
	f	Ljava/util/Set;	f	seenBy
c	aid	net/minecraft/server/level/ChunkTaskPriorityQueue
	m	(Ljava/lang/String;I)V	<init>	<init>
		p	1		name
		p	2		maxSize
	m	()Ljava/util/stream/Stream;	a	pop
	m	(I)Lit/unimi/dsi/fastutil/longs/Long2ObjectLinkedOpenHashMap;	a	lambda$new$0
	m	(ILclp;I)V	a	resortChunkTasks
		p	1		fromLevel
		p	2		pos
		p	3		toLevel
	m	(J)Ljava/lang/Runnable;	a	acquire
		p	1		pos
	m	(JLjava/util/Optional;)Lcom/mojang/datafixers/util/Either;	a	lambda$pop$6
	m	(JZ)V	a	release
		p	1		pos
		p	3		removeElement
	m	(Ljava/util/Optional;)Z	a	lambda$release$3
	m	(Ljava/util/Optional;JI)V	a	submit
		p	1		element
		p	2		pos
		p	4		level
	m	()Z	b	hasWork
	m	(J)Lcom/mojang/datafixers/util/Either;	b	lambda$pop$5
	m	()Lit/unimi/dsi/fastutil/longs/LongSet;	c	getAcquired
	m	(J)V	c	lambda$acquire$4
	m	(J)Ljava/util/List;	d	lambda$submit$2
	m	(J)Ljava/util/List;	e	lambda$resortChunkTasks$1
	f	I	a	PRIORITY_LEVEL_COUNT
	f	Ljava/util/List;	b	taskQueue
	f	I	c	firstQueue
	f	Ljava/lang/String;	d	name
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	e	acquired
	f	I	f	maxTasks
c	aie	net/minecraft/server/level/ChunkTaskPriorityQueueSorter
	m	(Ljava/util/List;Ljava/util/concurrent/Executor;I)V	<init>	<init>
		p	1		actors
		p	2		executor
		p	3		maxQueues
	m	()Z	a	hasWork
	m	(I)[Ljava/util/concurrent/CompletableFuture;	a	lambda$pollTask$15
	m	(ILbcq;)Laid;	a	lambda$new$0
		p	1		actor
	m	(ILclp;ILaid;)V	a	lambda$onLevelChange$9
		p	3		queue
	m	(Laib;Ljava/lang/Runnable;)Laie$a;	a	message
		p	0		holder
		p	1		task
	m	(Laib;Ljava/util/function/Function;)Laie$a;	a	message
		p	0		holder
		p	1		taskFunction
	m	(Laid;Lbcq;)V	a	pollTask
		p	1		queue
		p	2		actor
	m	(Laid;Lbcq;Ljava/lang/Void;)V	a	lambda$pollTask$16
	m	(Lbcq;)Lbcq;	a	getReleaseProcessor
		p	1		executor
	m	(Lbcq;JLjava/lang/Runnable;Z)V	a	release
		p	1		actor
		p	2		chunkPos
		p	4		callback
		p	5		clearTask
	m	(Lbcq;JZLjava/lang/Runnable;)V	a	lambda$release$11
	m	(Lbcq;Laie$b;)V	a	lambda$getReleaseProcessor$6
		p	2		message
	m	(Lbcq;Lbcq;)Lbct$b;	a	lambda$getReleaseProcessor$8
		p	2		yield
	m	(Lbcq;Lbcq;Z)V	a	lambda$getProcessor$4
	m	(Lbcq;Lcom/mojang/datafixers/util/Either;)Ljava/util/concurrent/CompletableFuture;	a	lambda$pollTask$14
		p	1		executeOrAddBlocking
	m	(Lbcq;Ljava/util/function/Function;JLjava/util/function/IntSupplier;Z)V	a	submit
		p	1		actor
		p	2		task
		p	3		chunkPos
		p	5		lastLevelUpdatedToProvider
		p	6		addBlocker
	m	(Lbcq;Ljava/util/function/IntSupplier;JLjava/util/function/Function;Z)V	a	lambda$submit$12
	m	(Lbcq;Z)Lbcq;	a	getProcessor
		p	1		executor
		p	2		addBlocker
	m	(Lbcq;ZLaie$a;)V	a	lambda$getProcessor$3
		p	3		task
	m	(Lbcq;ZLbcq;)Lbct$b;	a	lambda$getProcessor$5
		p	3		yield
	m	(Ljava/lang/Long;)Ljava/lang/String;	a	lambda$getDebugStatus$18
		p	0		pos
	m	(Ljava/lang/Runnable;)Ljava/util/concurrent/CompletableFuture;	a	lambda$pollTask$13
		p	0		addBlocking
	m	(Ljava/lang/Runnable;JLjava/util/function/IntSupplier;)Laie$a;	a	message
		p	0		task
		p	1		pos
		p	3		lastLevelUpdatedToProvider
	m	(Ljava/lang/Runnable;JZ)Laie$b;	a	release
		p	0		task
		p	1		pos
		p	3		removeTask
	m	(Ljava/lang/Runnable;Lbcq;)Ljava/lang/Runnable;	a	lambda$message$2
		p	1		yield
	m	(Ljava/util/Map$Entry;)Ljava/lang/String;	a	lambda$getDebugStatus$19
		p	0		entry
	m	(Ljava/util/function/Function;JLjava/util/function/IntSupplier;)Laie$a;	a	message
		p	0		taskFunction
		p	1		pos
		p	3		lastLevelUpdatedToProvider
	m	(Ljava/util/function/IntSupplier;Lclp;ILjava/util/function/IntConsumer;)V	a	lambda$onLevelChange$10
	m	()Ljava/lang/String;	b	getDebugStatus
	m	(Laid;Lbcq;)V	b	lambda$pollTask$17
	m	(Lbcq;)Laid;	b	getQueue
		p	1		actor
	m	(Lbcq;Lbcq;)V	b	lambda$getReleaseProcessor$7
	m	(Ljava/lang/Runnable;Lbcq;)V	b	lambda$message$1
	m	(Lclp;Ljava/util/function/IntSupplier;ILjava/util/function/IntConsumer;)V	onLevelChange	onLevelChange
		p	1		pos
		p	2		levelGetter
		p	3		targetLevel
		p	4		levelSetter
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/Map;	b	queues
	f	Ljava/util/Set;	c	sleeping
	f	Lbcr;	d	mailbox
c	aie$a	net/minecraft/server/level/ChunkTaskPriorityQueueSorter$Message
	m	(Ljava/util/function/Function;JLjava/util/function/IntSupplier;)V	<init>	<init>
		p	1		taskFunction
		p	2		pos
		p	4		lastLevelUpdatedToProvider
	f	Ljava/util/function/Function;	a	task
	f	J	b	pos
	f	Ljava/util/function/IntSupplier;	c	level
c	aie$b	net/minecraft/server/level/ChunkTaskPriorityQueueSorter$Release
	m	(Ljava/lang/Runnable;JZ)V	<init>	<init>
		p	1		callback
		p	2		pos
		p	4		removeTask
	f	Ljava/lang/Runnable;	a	task
	f	J	b	pos
	f	Z	c	clearQueue
c	aif	net/minecraft/server/level/ChunkTracker
	m	(III)V	<init>	<init>
		p	1		levelCount
		p	2		expectedLevelSize
		p	3		expectedTotalSize
	m	(J)Z	a	isSource
		p	1		id
	m	(JIZ)V	a	checkNeighborsAfterUpdate
		p	1		id
		p	3		level
		p	4		decrease
	m	(JJI)I	a	getComputedLevel
		p	1		id
		p	3		excludedId
		p	5		maxLevel
	m	(J)I	b	getLevelFromSource
		p	1		id
	m	(JIZ)V	b	update
		p	1		chunkPos
		p	3		distance
		p	4		decrease
	m	(JJI)I	b	computeLevelFromNeighbor
		p	1		sourceId
		p	3		targetId
		p	5		level
c	aig	net/minecraft/server/level/ColumnPos
	m	()Lclp;	a	toChunkPos
	m	(II)J	a	asLong
		p	0		x
		p	1		z
	m	(J)I	a	getX
		p	0		packed
	m	()J	b	toLong
	m	(J)I	b	getZ
		p	0		packed
	m	()I	c	x
	m	()I	d	z
	f	I	a	x
	f	I	b	z
	f	J	c	COORD_BITS
	f	J	d	COORD_MASK
c	aih	net/minecraft/server/level/DemoMode
	m	(Laiq;)V	<init>	<init>
		p	1		player
	m	()V	a	tick
	m	(Laiq;Lcmi;Lcfv;Lbdx;)Lbdy;	a	useItem
		p	1		player
		p	2		world
		p	3		stack
		p	4		hand
	m	(Laiq;Lcmi;Lcfv;Lbdx;Leda;)Lbdy;	a	useItemOn
		p	1		player
		p	2		world
		p	3		stack
		p	4		hand
		p	5		hitResult
	m	(Lgt;Laaq$a;Lgz;II)V	a	handleBlockBreakAction
		p	1		pos
		p	2		action
		p	3		direction
		p	4		worldHeight
		p	5		sequence
	m	()V	f	outputDemoReminder
	f	I	a	DEMO_DAYS
	f	I	b	TOTAL_PLAY_TICKS
	f	Z	e	displayedIntro
	f	Z	f	demoHasEnded
	f	I	g	demoEndedReminder
	f	I	h	gameModeTicks
c	aii	net/minecraft/server/level/DistanceManager
	m	(Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)V	<init>	<init>
		p	1		workerExecutor
		p	2		mainThreadExecutor
	m	()V	a	purgeStaleTickets
	m	(I)V	a	updatePlayerTickets
		p	1		viewDistance
	m	(J)Z	a	isChunkToRemove
		p	1		pos
	m	(JILaib;I)Laib;	a	updateChunkScheduling
		p	1		pos
		p	3		level
		p	4		holder
	m	(JLait;)V	a	addTicket
		p	1		position
		p	3		ticket
	m	(JLcom/mojang/datafixers/util/Either;)V	a	lambda$runAllUpdates$4
		p	3		either
	m	(Laic;)Z	a	runAllUpdates
		p	1		chunkStorage
	m	(Laic;Laib;)V	a	lambda$runAllUpdates$0
		p	2		holder
	m	(Lait;)Z	a	lambda$runAllUpdates$1
		p	0		ticket
	m	(Laiu;Lclp;ILjava/lang/Object;)V	a	addTicket
		p	1		type
		p	2		pos
		p	3		level
		p	4		argument
	m	(Lapx;)I	a	getTicketLevelAt
		p	0		tickets
	m	(Lclp;Z)V	a	updateChunkForced
		p	1		pos
		p	2		forced
	m	(Lhw;Laiq;)V	a	addPlayer
		p	1		pos
		p	2		player
	m	(Ljava/lang/String;)V	a	dumpTickets
		p	1		path
	m	()I	b	getNaturalSpawnChunkCount
	m	(I)V	b	updateSimulationDistance
		p	1		simulationDistance
	m	(J)Laib;	b	getChunk
		p	1		pos
	m	(JLait;)V	b	removeTicket
		p	1		pos
		p	3		ticket
	m	(Laiu;Lclp;ILjava/lang/Object;)V	b	removeTicket
		p	1		type
		p	2		pos
		p	3		level
		p	4		argument
	m	(Lhw;Laiq;)V	b	removePlayer
		p	1		pos
		p	2		player
	m	()Ljava/lang/String;	c	getDebugStatus
	m	(J)Z	c	inEntityTickingRange
		p	1		chunkPos
	m	(Laiu;Lclp;ILjava/lang/Object;)V	c	addRegionTicket
		p	1		type
		p	2		pos
		p	3		radius
		p	4		argument
	m	()Laiv;	d	tickingTracker
	m	(J)Z	d	inBlockTickingRange
		p	1		chunkPos
	m	(Laiu;Lclp;ILjava/lang/Object;)V	d	removeRegionTicket
		p	1		type
		p	2		pos
		p	3		radius
		p	4		argument
	m	()V	e	removeTicketsOnClosing
	m	(J)Ljava/lang/String;	e	getTicketDebugString
		p	1		pos
	m	()Z	f	hasTickets
	m	(J)Z	f	hasPlayersNearby
		p	1		chunkPos
	m	()I	g	getPlayerTicketLevel
	m	(J)Lapx;	g	getTickets
		p	1		position
	m	()V	h	lambda$runAllUpdates$2
	m	(J)Lit/unimi/dsi/fastutil/objects/ObjectSet;	h	lambda$addPlayer$6
		p	0		sectionPos
	m	(J)Lapx;	i	lambda$getTickets$5
		p	0		pos
	m	(J)V	j	lambda$runAllUpdates$3
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	I	b	ENTITY_TICKING_RANGE
	f	I	c	PLAYER_TICKET_LEVEL
	f	I	d	INITIAL_TICKET_LIST_CAPACITY
	f	I	e	ENTITY_TICKING_LEVEL_THRESHOLD
	f	I	f	BLOCK_TICKING_LEVEL_THRESHOLD
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	g	playersPerChunk
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap;	h	tickets
	f	Laii$a;	i	ticketTracker
	f	Laii$b;	j	naturalSpawnChunkCounter
	f	Laiv;	k	tickingTicketsTracker
	f	Laii$c;	l	playerTicketManager
	f	Ljava/util/Set;	m	chunksToUpdateFutures
	f	Laie;	n	ticketThrottler
	f	Lbcq;	o	ticketThrottlerInput
	f	Lbcq;	p	ticketThrottlerReleaser
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	q	ticketsToRelease
	f	Ljava/util/concurrent/Executor;	r	mainThreadExecutor
	f	J	s	ticketTickCounter
	f	I	t	simulationDistance
c	aii$a	net/minecraft/server/level/DistanceManager$ChunkTicketTracker
	m	(I)I	a	runDistanceUpdates
		p	1		distance
	m	(JI)V	a	setLevel
		p	1		id
		p	3		level
	m	(J)I	b	getLevelFromSource
		p	1		id
	m	(J)I	c	getLevel
		p	1		id
	f	Laii;	a	this$0
c	aii$b	net/minecraft/server/level/DistanceManager$FixedPlayerDistanceChunkTracker
	m	(Laii;I)V	<init>	<init>
		p	2		maxDistance
	m	()V	a	runAllUpdates
	m	(JI)V	a	setLevel
		p	1		id
		p	3		level
	m	(JII)V	a	onLevelChange
		p	1		pos
		p	3		oldDistance
		p	4		distance
	m	(Ljava/lang/String;)V	a	dumpChunks
		p	1		path
	m	(J)I	b	getLevelFromSource
		p	1		id
	m	(J)I	c	getLevel
		p	1		id
	m	(J)Z	d	havePlayer
		p	1		chunkPos
	f	Lit/unimi/dsi/fastutil/longs/Long2ByteMap;	a	chunks
	f	I	b	maxDistance
	f	Laii;	c	this$0
c	aii$c	net/minecraft/server/level/DistanceManager$PlayerTicketTracker
	m	(Laii;I)V	<init>	<init>
		p	1		maxDistance
	m	()V	a	runAllUpdates
	m	(I)V	a	updateViewDistance
		p	1		watchDistance
	m	(JII)V	a	onLevelChange
		p	1		pos
		p	3		oldDistance
		p	4		distance
	m	(JIZZ)V	a	onLevelChange
		p	1		pos
		p	3		distance
		p	4		oldWithinViewDistance
		p	5		withinViewDistance
	m	(JLait;)V	a	lambda$onLevelChange$5
	m	(JI)V	b	lambda$runAllUpdates$7
		p	3		level
	m	(JLait;)V	b	lambda$onLevelChange$4
	m	(I)Z	c	haveTicketFor
		p	1		distance
	m	(JLait;)V	c	lambda$onLevelChange$2
	m	()V	d	lambda$onLevelChange$0
	m	(I)I	d	lambda$onLevelChange$3
	m	(J)I	d	lambda$runAllUpdates$6
	m	(JLait;)V	d	lambda$onLevelChange$1
	f	Laii;	d	this$0
	f	I	e	viewDistance
	f	Lit/unimi/dsi/fastutil/longs/Long2IntMap;	f	queueLevels
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	g	toUpdate
c	aij	net/minecraft/server/level/PlayerMap
	m	(J)Ljava/util/Set;	a	getPlayers
	m	(JJLaiq;)V	a	updatePlayer
		p	1		prevPos
		p	3		currentPos
		p	5		player
	m	(JLaiq;)V	a	removePlayer
		p	3		player
	m	(JLaiq;Z)V	a	addPlayer
		p	3		player
		p	4		watchDisabled
	m	(Laiq;)V	a	ignorePlayer
		p	1		player
	m	(Laiq;)V	b	unIgnorePlayer
		p	1		player
	m	(Laiq;)Z	c	ignoredOrUnknown
		p	1		player
	m	(Laiq;)Z	d	ignored
		p	1		player
	f	Lit/unimi/dsi/fastutil/objects/Object2BooleanMap;	a	players
c	aik	net/minecraft/server/level/PlayerRespawnLogic
	m	(Laip;II)Lgt;	a	getOverworldRespawnPos
		p	0		world
		p	1		x
		p	2		z
	m	(Laip;Lclp;)Lgt;	a	getSpawnPosInChunk
		p	0		world
		p	1		chunkPos
c	ail	net/minecraft/server/level/SectionTracker
	m	(III)V	<init>	<init>
		p	1		levelCount
		p	2		expectedLevelSize
		p	3		expectedTotalSize
	m	(J)Z	a	isSource
		p	1		id
	m	(JIZ)V	a	checkNeighborsAfterUpdate
		p	1		id
		p	3		level
		p	4		decrease
	m	(JJI)I	a	getComputedLevel
		p	1		id
		p	3		excludedId
		p	5		maxLevel
	m	(J)I	b	getLevelFromSource
		p	1		id
	m	(JIZ)V	b	update
		p	1		id
		p	3		level
		p	4		decrease
	m	(JJI)I	b	computeLevelFromNeighbor
		p	1		sourceId
		p	3		targetId
		p	5		level
c	aim	net/minecraft/server/level/ServerBossEvent
	m	(Ltj;Lbdo$a;Lbdo$b;)V	<init>	<init>
		p	1		displayName
		p	2		color
		p	3		style
	m	(F)V	a	setProgress
		p	1		percent
	m	(Laiq;)V	a	addPlayer
		p	1		player
	m	(Lbdo$a;)V	a	setColor
		p	1		color
	m	(Lbdo$b;)V	a	setOverlay
		p	1		style
	m	(Ljava/util/function/Function;)V	a	broadcast
		p	1		bossBarToPacketFunction
	m	(Ltj;)V	a	setName
		p	1		name
	m	(Z)Lbdo;	a	setDarkenScreen
		p	1		darkenSky
	m	()V	b	removeAllPlayers
	m	(Laiq;)V	b	removePlayer
		p	1		player
	m	(Z)Lbdo;	b	setPlayBossMusic
		p	1		dragonMusic
	m	(Z)Lbdo;	c	setCreateWorldFog
		p	1		thickenFog
	m	(Z)V	d	setVisible
		p	1		visible
	m	()Z	g	isVisible
	m	()Ljava/util/Collection;	h	getPlayers
	f	Ljava/util/Set;	h	players
	f	Ljava/util/Set;	i	unmodifiablePlayers
	f	Z	j	visible
c	ain	net/minecraft/server/level/ServerChunkCache
	m	(Laip;Ldye$c;Lcom/mojang/datafixers/DataFixer;Ldvi;Ljava/util/concurrent/Executor;Lddo;IIZLaiy;Ldfg;Ljava/util/function/Supplier;)V	<init>	<init>
		p	1		world
		p	2		session
		p	3		dataFixer
		p	4		structureTemplateManager
		p	5		workerExecutor
		p	6		chunkGenerator
		p	7		viewDistance
		p	8		simulationDistance
		p	9		dsync
		p	10		worldGenerationProgressListener
		p	11		chunkStatusChangeListener
		p	12		persistentStateManagerFactory
	m	()Lais;	a	getLightEngine
	m	(I)V	a	setViewDistance
		p	1		watchDistance
	m	(II)Lddy;	a	getChunkNow
		p	1		chunkX
		p	2		chunkZ
	m	(IILdds;Z)Lddn;	a	getChunk
		p	1		x
		p	2		z
		p	3		leastStatus
		p	4		create
	m	(J)Z	a	isPositionTicking
		p	1		pos
	m	(JLddn;Ldds;)V	a	storeInCache
		p	1		pos
		p	3		chunk
		p	4		status
	m	(JLjava/util/function/Consumer;)V	a	getFullChunk
		p	1		pos
		p	3		chunkConsumer
	m	(Laib;I)Z	a	chunkAbsent
		p	1		holder
		p	2		maxLevel
	m	(Lain$a;)V	a	lambda$tickChunks$5
		p	0		chunk
	m	(Laiq;)V	a	move
		p	1		player
	m	(Laiu;Lclp;ILjava/lang/Object;)V	a	addRegionTicket
		p	1		ticketType
		p	2		pos
		p	3		radius
		p	4		argument
	m	(Lbfh;)V	a	removeEntity
		p	1		entity
	m	(Lbfh;Lvb;)V	a	broadcastAndSend
		p	1		entity
		p	2		packet
	m	(Lclp;)Ljava/lang/String;	a	getChunkDebugData
		p	1		pos
	m	(Lclp;Z)V	a	updateChunkForced
		p	1		pos
		p	2		forced
	m	(Lcmr;Lhw;)V	a	onLightUpdate
		p	1		type
		p	2		pos
	m	(Lddn;)Lddn;	a	lambda$getChunk$1
		p	0		chunk
	m	(Lgt;)V	a	blockChanged
		p	1		pos
	m	(Lhw;Lcmr;)V	a	lambda$onLightUpdate$6
	m	(Ljava/util/concurrent/CompletableFuture;)Ljava/util/concurrent/CompletionStage;	a	lambda$getChunkFuture$4
	m	(Ljava/util/function/BooleanSupplier;Z)V	a	tick
		p	1		shouldKeepTicking
		p	2		tickChunks
	m	(Z)V	a	save
		p	1		flush
	m	(ZLaib$a;)Lddn;	a	lambda$getChunk$2
		p	1		unloaded
	m	(ZZ)V	a	setSpawnSettings
		p	1		spawnMonsters
		p	2		spawnAnimals
	m	()I	b	getTickingGenerated
	m	(I)V	b	setSimulationDistance
		p	1		simulationDistance
	m	(II)Z	b	hasChunk
		p	1		x
		p	2		z
	m	(IILdds;Z)Ljava/util/concurrent/CompletableFuture;	b	getChunkFuture
		p	1		chunkX
		p	2		chunkZ
		p	3		leastStatus
		p	4		create
	m	(J)Laib;	b	getVisibleChunkIfPresent
		p	1		pos
	m	(Laiu;Lclp;ILjava/lang/Object;)V	b	removeRegionTicket
		p	1		ticketType
		p	2		pos
		p	3		radius
		p	4		argument
	m	(Lbfh;)V	b	addEntity
		p	1		entity
	m	(Lbfh;Lvb;)V	b	broadcast
		p	1		entity
		p	2		packet
	m	()Lcmi;	c	getLevel
	m	(II)Lclo;	c	getChunkForLighting
		p	1		chunkX
		p	2		chunkZ
	m	(IILdds;Z)Ljava/util/concurrent/CompletableFuture;	c	getChunkFutureMainThread
		p	1		chunkX
		p	2		chunkZ
		p	3		leastStatus
		p	4		create
	m	()Z	d	pollTask
	m	(IILdds;Z)Ljava/util/concurrent/CompletableFuture;	d	lambda$getChunkFuture$3
	m	()Ljava/lang/String;	e	gatherStats
	m	(IILdds;Z)Lddn;	e	lambda$getChunk$0
	m	()I	f	getPendingTasksCount
	m	()Lddo;	g	getGenerator
	m	()Lddp;	h	getGeneratorState
	m	()Ldhn;	i	randomState
	m	()I	j	getLoadedChunksCount
	m	()Ldya;	k	getDataStorage
	m	()Lbqx;	l	getPoiManager
	m	()Ldem;	m	chunkScanner
	m	()Lcmt$d;	n	getLastSpawnState
	m	()V	o	removeTicketsOnClosing
	m	()Ldwa;	p	getLightEngine
	m	()Lclo;	q	getLevel
	m	()V	r	clearCache
	m	()Z	s	runDistanceManagerUpdates
	m	()V	t	tickChunks
	f	Laic;	a	chunkMap
	f	Ljava/util/List;	b	CHUNK_STATUSES
	f	Laii;	c	distanceManager
	f	Laip;	d	level
	f	Ljava/lang/Thread;	e	mainThread
	f	Lais;	f	lightEngine
	f	Lain$b;	g	mainThreadProcessor
	f	Ldya;	h	dataStorage
	f	J	i	lastInhabitedUpdate
	f	Z	j	spawnEnemies
	f	Z	k	spawnFriendlies
	f	I	l	CACHE_SIZE
	f	[J	m	lastChunkPos
	f	[Ldds;	n	lastChunkStatus
	f	[Lddn;	o	lastChunk
	f	Lcmt$d;	p	lastSpawnState
c	ain$a	net/minecraft/server/level/ServerChunkCache$ChunkAndHolder
	m	()Lddy;	a	chunk
	m	()Laib;	b	holder
	f	Lddy;	a	chunk
	f	Laib;	b	holder
c	ain$b	net/minecraft/server/level/ServerChunkCache$MainThreadExecutor
	m	(Lain;Lcmi;)V	<init>	<init>
		p	2		world
	m	()Z	at	scheduleExecutables
	m	()Ljava/lang/Thread;	au	getRunningThread
	m	(Ljava/lang/Runnable;)V	d	doRunTask
		p	1		task
	m	(Ljava/lang/Runnable;)Z	e	shouldRun
		p	1		task
	m	(Ljava/lang/Runnable;)Ljava/lang/Runnable;	f	wrapRunnable
		p	1		runnable
	m	()Z	x	pollTask
	f	Lain;	a	this$0
c	aio	net/minecraft/server/level/ServerEntity
	m	(Laip;Lbfh;IZLjava/util/function/Consumer;)V	<init>	<init>
		p	1		world
		p	2		entity
		p	3		tickInterval
		p	4		alwaysUpdateVelocity
		p	5		receiver
	m	()V	a	sendChanges
	m	(Laiq;)V	a	removePairing
		p	1		player
	m	(Ljava/util/List;Lbfh;)Z	a	lambda$changedPassengers$2
		p	1		passenger
	m	(Ljava/util/List;Ljava/util/List;)Ljava/util/stream/Stream;	a	changedPassengers
		p	1		passengers
		p	2		lastPassengers
	m	(Ljava/util/function/Consumer;)V	a	sendPairingData
		p	1		sender
	m	(Lvb;)V	a	broadcastAndSend
		p	1		packet
	m	()V	b	sendDirtyEntityData
	m	(Laiq;)V	b	addPairing
		p	1		player
	m	(Ljava/util/List;Lbfh;)Z	b	lambda$changedPassengers$1
		p	1		passenger
	m	(Ljava/util/List;Lbfh;)V	c	lambda$sendChanges$0
		p	1		passenger
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	I	b	TOLERANCE_LEVEL_ROTATION
	f	Laip;	c	level
	f	Lbfh;	d	entity
	f	I	e	updateInterval
	f	Z	f	trackDelta
	f	Ljava/util/function/Consumer;	g	broadcast
	f	Labm;	h	positionCodec
	f	I	i	yRotp
	f	I	j	xRotp
	f	I	k	yHeadRotp
	f	Lede;	l	ap
	f	I	m	tickCount
	f	I	n	teleportDelay
	f	Ljava/util/List;	o	lastPassengers
	f	Z	p	wasRiding
	f	Z	q	wasOnGround
	f	Ljava/util/List;	r	trackedDataValues
c	aip	net/minecraft/server/level/ServerLevel
	m	(Lnet/minecraft/server/MinecraftServer;Ljava/util/concurrent/Executor;Ldye$c;Ldyj;Ladc;Ldfa;Laiy;ZJLjava/util/List;Z)V	<init>	<init>
		p	1		server
		p	2		workerExecutor
		p	3		session
		p	4		properties
		p	5		worldKey
		p	6		dimensionOptions
		p	7		worldGenerationProgressListener
		p	8		debugWorld
		p	9		seed
		p	11		spawners
		p	12		shouldTickTime
	m	()J	A	getSeed
	m	()Ldfc;	B	dragonFight
	m	()Laip;	C	getLevel
	m	()Ljava/lang/String;	D	getWatchdogStats
	m	()Ldfq;	E	getEntities
	m	(Lgt;)Ljava/util/Optional;	E	findLightningRod
		p	1		pos
	m	()Ljava/lang/String;	F	gatherChunkSourceStats
	m	(Lgt;)V	F	lambda$onBlockStateChange$12
	m	()Lcau;	G	enabledFeatures
	m	(Lgt;)Lgt;	G	lambda$findLightningRod$7
		p	0		pos
	m	()Leec;	H	getScoreboard
	m	(Lgt;)Z	H	lambda$findLightningRod$6
		p	1		pos
	m	()Lddr;	I	getChunkSource
	m	()Leel;	J	getFluidTicks
	m	()Leel;	K	getBlockTicks
	m	()Lcmz;	a	structureManager
	m	(I)Lbfh;	a	getEntity
		p	1		id
	m	(III)Lhd;	a	getUncachedNoiseBiome
		p	1		biomeX
		p	2		biomeY
		p	3		biomeZ
	m	(IIZ)Z	a	setChunkForced
		p	1		x
		p	2		z
		p	3		forced
	m	(IIZZ)V	a	setWeatherParameters
		p	1		clearDuration
		p	2		rainDuration
		p	3		raining
		p	4		thundering
	m	(ILgt;I)V	a	destroyBlockProgress
		p	1		entityId
		p	2		pos
		p	3		progress
	m	(J)Z	a	shouldTickBlocksAt
		p	1		chunkPos
	m	(Laip;)V	a	makeObsidianPlatform
		p	0		world
	m	(Laip;Lgt;)V	a	lambda$makeObsidianPlatform$20
		p	1		pos
	m	(Laiq;)V	a	addDuringCommandTeleport
		p	1		player
	m	(Laiq;Lbfh$c;)V	a	removePlayerImmediately
		p	1		player
		p	2		reason
	m	(Laiq;Lis;ZDDDIDDDD)Z	a	sendParticles
		p	1		viewer
		p	2		particle
		p	3		force
		p	4		x
		p	6		y
		p	8		z
		p	10		count
		p	11		deltaX
		p	13		deltaY
		p	15		deltaZ
		p	17		speed
	m	(Laiq;ZDDDLvb;)Z	a	sendParticles
		p	1		player
		p	2		force
		p	3		x
		p	5		y
		p	7		z
		p	9		packet
	m	(Lanv;Lgt;IZ)Lgt;	a	findNearestMapStructure
		p	1		structureTag
		p	2		pos
		p	3		radius
		p	4		skipReferencedStructures
	m	(Lapn;ZZ)V	a	save
		p	1		progressListener
		p	2		flush
		p	3		savingDisabled
	m	(Lbao;Lbfh;)V	a	lambda$tick$3
		p	2		entity
	m	(Lbfh;)V	a	tickNonPassenger
		p	1		entity
	m	(Lbfh;B)V	a	broadcastEntityEvent
		p	1		entity
		p	2		status
	m	(Lbfh;Lbem;)V	a	broadcastDamageEvent
		p	1		entity
		p	2		damageSource
	m	(Lbfh;Lbem;Lcmb;DDDFZLcmi$a;)Lcma;	a	explode
		p	1		entity
		p	2		damageSource
		p	3		behavior
		p	4		x
		p	6		y
		p	8		z
		p	10		power
		p	11		createFire
		p	12		explosionSourceType
	m	(Lbfh;Lbfh;)V	a	tickPassenger
		p	1		vehicle
		p	2		passenger
	m	(Lbfx;)Z	a	lambda$findLightningTargetAround$8
		p	1		entity
	m	(Lbqu;Lbfh;Lbgm;)V	a	onReputationEvent
		p	1		interaction
		p	2		entity
		p	3		observer
	m	(Lbym;DDDLhd;Lams;FFJ)V	a	playSeededSound
		p	1		except
		p	2		x
		p	4		y
		p	6		z
		p	8		sound
		p	9		category
		p	10		volume
		p	11		pitch
		p	12		seed
	m	(Lbym;ILgt;I)V	a	levelEvent
		p	1		player
		p	2		eventId
		p	3		pos
		p	4		data
	m	(Lbym;Lbfh;Lhd;Lams;FFJ)V	a	playSeededSound
		p	1		except
		p	2		entity
		p	3		sound
		p	4		category
		p	5		volume
		p	6		pitch
		p	7		seed
	m	(Lbym;Lgt;)Z	a	mayInteract
		p	1		player
		p	2		pos
	m	(Lcln;)Z	a	doBlockEvent
		p	1		event
	m	(Lclp;)Z	a	isNaturalSpawningAllowed
		p	1		pos
	m	(Ldbq;Lgt;Lcpi;Lgt;Z)V	a	neighborChanged
		p	1		state
		p	2		pos
		p	3		sourceBlock
		p	4		sourcePos
		p	5		notify
	m	(Lddn;)V	a	onStructureStartsAvailable
		p	1		chunk
	m	(Lddy;)V	a	unload
		p	1		chunk
	m	(Lddy;I)V	a	tickChunk
		p	1		chunk
		p	2		randomTickSpeed
	m	(Ldfo;Ljava/util/function/Predicate;)Ljava/util/List;	a	getEntities
		p	1		filter
		p	2		predicate
	m	(Ldfo;Ljava/util/function/Predicate;Ljava/util/List;)V	a	getEntities
		p	1		filter
		p	2		predicate
		p	3		result
	m	(Ldfo;Ljava/util/function/Predicate;Ljava/util/List;I)V	a	getEntities
		p	1		filter
		p	2		predicate
		p	3		result
		p	4		limit
	m	(Ldga;Lede;Ldga$a;)V	a	gameEvent
		p	1		event
		p	2		emitterPos
		p	3		emitter
	m	(Ldrh;)V	a	clearBlockEvents
		p	1		box
	m	(Ldrh;Lcln;)Z	a	lambda$clearBlockEvents$16
		p	1		event
	m	(Lgt;)Lgt;	a	findLightningTargetAround
		p	1		pos
	m	(Lgt;F)V	a	setDefaultSpawnPos
		p	1		pos
		p	2		angle
	m	(Lgt;I)Z	a	isCloseToVillage
		p	1		pos
		p	2		maxDistance
	m	(Lgt;Lcpi;)V	a	updateNeighborsAt
		p	1		pos
		p	2		sourceBlock
	m	(Lgt;Lcpi;II)V	a	blockEvent
		p	1		pos
		p	2		block
		p	3		type
		p	4		data
	m	(Lgt;Lcpi;Lgt;)V	a	neighborChanged
		p	1		pos
		p	2		sourceBlock
		p	3		sourcePos
	m	(Lgt;Lcpi;Lgz;)V	a	updateNeighborsAtExceptFromFacing
		p	1		pos
		p	2		sourceBlock
		p	3		direction
	m	(Lgt;Ldbq;Ldbq;)V	a	onBlockStateChange
		p	1		pos
		p	2		oldBlock
		p	3		newBlock
	m	(Lgt;Ldbq;Ldbq;I)V	a	sendBlockUpdated
		p	1		pos
		p	2		oldState
		p	3		newState
		p	4		flags
	m	(Lgt;Ldwi;)V	a	tickFluid
		p	1		pos
		p	2		fluid
	m	(Lgt;Lhd;)V	a	lambda$onBlockStateChange$15
		p	2		newPoiType
	m	(Lgz;Z)F	a	getShade
		p	1		direction
		p	2		shaded
	m	(Lhd;)Z	a	lambda$findLightningRod$5
		p	0		poiType
	m	(Lhw;)Z	a	isVillage
		p	1		sectionPos
	m	(Lis;DDDIDDDD)I	a	sendParticles
		p	1		particle
		p	2		x
		p	4		y
		p	6		z
		p	8		count
		p	9		deltaX
		p	11		deltaY
		p	13		deltaZ
		p	15		speed
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntMap$Entry;)Ljava/lang/String;	a	lambda$getTypeCount$18
	m	(Ljava/io/Writer;)V	a	dumpBlockEntityTickers
		p	1		writer
	m	(Ljava/io/Writer;Ljava/lang/Iterable;)V	a	dumpEntities
		p	0		writer
		p	1		entities
	m	(Ljava/lang/Iterable;Ljava/util/function/Function;)Ljava/lang/String;	a	getTypeCount
		p	0		items
		p	1		classifier
	m	(Ljava/lang/String;)Ldxu;	a	getMapData
		p	1		id
	m	(Ljava/lang/String;Ldxu;)V	a	setMapData
		p	1		id
		p	2		state
	m	(Ljava/nio/file/Path;)V	a	saveDebugReport
		p	1		path
	m	(Ljava/util/UUID;)Lbfh;	a	getEntity
		p	1		uuid
	m	(Ljava/util/function/BooleanSupplier;)V	a	tick
		p	1		shouldKeepTicking
	m	(Ljava/util/function/Predicate;)Ljava/util/List;	a	getPlayers
		p	1		predicate
	m	(Ljava/util/function/Predicate;I)Ljava/util/List;	a	getPlayers
		p	1		predicate
		p	2		limit
	m	(Ljava/util/function/Predicate;Lgt;III)Lcom/mojang/datafixers/util/Pair;	a	findClosestBiome3d
		p	1		predicate
		p	2		pos
		p	3		radius
		p	4		horizontalBlockCheckInterval
		p	5		verticalBlockCheckInterval
	m	(Ljava/util/function/Predicate;Ljava/util/List;ILbfh;)Laob$a;	a	lambda$getEntities$11
		p	3		entity
	m	(Ljava/util/stream/Stream;)V	a	addLegacyChunkEntities
		p	1		entities
	m	(Lnet/minecraft/server/MinecraftServer;)Ldya;	a	lambda$new$0
	m	(Lre;)Lbzv;	a	lambda$new$1
		p	1		nbt
	m	(ZZ)V	a	tickCustomSpawners
		p	1		spawnMonsters
		p	2		spawnAnimals
	m	()V	ao	wakeUpAllPlayers
	m	()V	ap	announceSleepStatus
	m	()V	aq	advanceWeatherCycle
	m	()V	ar	resetWeatherCycle
	m	()V	as	saveLevelData
	m	()V	at	runBlockEvents
	m	()Lbzv;	au	lambda$new$2
	m	()V	b	tickTime
	m	(I)Lbfh;	b	getEntityOrPart
		p	1		id
	m	(ILgt;I)V	b	globalLevelEvent
		p	1		eventId
		p	2		pos
		p	3		data
	m	(J)V	b	setDayTime
		p	1		timeOfDay
	m	(Laip;Lgt;)V	b	lambda$makeObsidianPlatform$19
		p	1		pos
	m	(Laiq;)V	b	addDuringPortalTeleport
		p	1		player
	m	(Lbfh;)Z	b	addFreshEntity
		p	1		entity
	m	(Lddn;)V	b	lambda$onStructureStartsAvailable$21
	m	(Lddy;)V	b	startTickingChunk
		p	1		chunk
	m	(Lgt;)Z	b	isVillage
		p	1		pos
	m	(Lgt;Lcpi;)V	b	blockUpdated
		p	1		pos
		p	2		block
	m	(Lgt;Lhd;)V	b	lambda$onBlockStateChange$14
	m	(Lhw;)I	b	sectionsToVillage
		p	1		pos
	m	(Ljava/util/stream/Stream;)V	b	addWorldGenChunkEntities
		p	1		entities
	m	()Z	c	isHandlingTick
	m	(J)Z	c	areEntitiesLoaded
		p	1		chunkPos
	m	(Laiq;)V	c	addNewPlayer
		p	1		player
	m	(Lbfh;)Z	c	addWithUUID
		p	1		entity
	m	(Lgt;)Lbzt;	c	getRaidAt
		p	1		pos
	m	(Lgt;Lhd;)V	c	lambda$onBlockStateChange$13
		p	2		oldPoiType
	m	()Z	d	canSleepThroughNights
	m	(J)Z	d	isPositionTickingWithEntitiesLoaded
		p	1		chunkPos
	m	(Laiq;)V	d	addRespawnedPlayer
		p	1		player
	m	(Lbfh;)V	d	addDuringTeleport
		p	1		entity
	m	(Lgt;)Z	d	isRaided
		p	1		pos
	m	(Lgt;Lcpi;)V	d	tickBlock
		p	1		pos
		p	2		block
	m	()V	e	updateSleepingPlayerList
	m	(Laiq;)V	e	addPlayer
		p	1		player
	m	(Lbfh;)Z	e	tryAddFreshEntityWithPassengers
		p	1		entity
	m	(Lgt;)Z	e	isPositionEntityTicking
		p	1		pos
	m	()Ladt;	f	getScoreboard
	m	(Laiq;)V	f	lambda$wakeUpAllPlayers$4
		p	0		player
	m	(Lgt;)Z	f	isNaturalSpawningAllowed
		p	1		pos
	m	()V	g	resetEmptyTime
	m	()Ljava/util/List;	h	getDragons
	m	()Laiq;	i	getRandomPlayer
	m	(Lbfh;)Z	i	shouldDiscardEntity
		p	1		entity
	m	()I	j	getLogicalHeight
	m	(Lbfh;)Z	j	addEntity
		p	1		entity
	m	()Lain;	k	getChunkSource
	m	(Lbfh;)Ljava/lang/String;	k	lambda$getWatchdogStats$17
		p	0		entity
	m	()Leem;	l	getBlockTicks
	m	(Lbfh;)Ljava/lang/String;	l	lambda$tickPassenger$10
	m	()Leem;	m	getFluidTicks
	m	(Lbfh;)Ljava/lang/String;	m	lambda$tickNonPassenger$9
	m	()Lnet/minecraft/server/MinecraftServer;	n	getServer
	m	()Ldxg;	o	getPortalForcer
	m	()Ldvi;	p	getStructureManager
	m	()Lciz;	q	getRecipeManager
	m	()Z	r	noSave
	m	()Ldya;	s	getDataStorage
	m	()I	t	getFreeMapId
	m	()Lit/unimi/dsi/fastutil/longs/LongSet;	u	getForcedChunks
	m	()Ljava/util/List;	v	players
	m	()Lbqx;	w	getPoiManager
	m	()Lbzv;	x	getRaids
	m	()Ljava/lang/Iterable;	y	getAllEntities
	m	()Z	z	isFlat
	f	Lbdd;	C	THUNDER_DELAY
	f	Lorg/slf4j/Logger;	D	LOGGER
	f	I	E	EMPTY_TIME_NO_TICK
	f	I	F	MAX_SCHEDULED_TICKS_PER_TICK
	f	Ljava/util/List;	G	players
	f	Lain;	H	chunkSource
	f	Lnet/minecraft/server/MinecraftServer;	I	server
	f	Ldyj;	J	serverLevelData
	f	Ldfn;	K	entityTickList
	f	Ldfs;	L	entityManager
	f	Ldgb;	M	gameEventDispatcher
	f	Lalx;	N	sleepStatus
	f	I	O	emptyTime
	f	Ldxg;	P	portalForcer
	f	Leem;	Q	blockTicks
	f	Leem;	R	fluidTicks
	f	Ljava/util/Set;	S	navigatingMobs
	f	Z	T	isUpdatingNavigations
	f	Lit/unimi/dsi/fastutil/objects/ObjectLinkedOpenHashSet;	U	blockEvents
	f	Ljava/util/List;	V	blockEventsToReschedule
	f	Z	W	handlingTick
	f	Ljava/util/List;	X	customSpawners
	f	Ldfc;	Y	dragonFight
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	Z	dragonParts
	f	Lgt;	a	END_SPAWN_POINT
	f	Lcmz;	aa	structureManager
	f	Ldrq;	ab	structureCheck
	f	Z	ac	tickTime
	f	Lbdd;	b	RAIN_DELAY
	f	Lbdd;	c	RAIN_DURATION
	f	Lbdd;	d	THUNDER_DURATION
	f	Z	e	noSave
	f	Lbzv;	f	raids
c	aip$a	net/minecraft/server/level/ServerLevel$EntityCallbacks
	m	(Lbfh;)V	a	onCreated
	m	(Ljava/lang/Object;)V	a	onSectionChange
		p	1		entity
	m	(Lbfh;)V	b	onDestroyed
	m	(Ljava/lang/Object;)V	b	onTrackingEnd
		p	1		entity
	m	(Lbfh;)V	c	onTickingStart
	m	(Ljava/lang/Object;)V	c	onTrackingStart
		p	1		entity
	m	(Lbfh;)V	d	onTickingEnd
		p	1		entity
	m	(Ljava/lang/Object;)V	d	onTickingEnd
		p	1		entity
	m	(Lbfh;)V	e	onTrackingStart
	m	(Ljava/lang/Object;)V	e	onTickingStart
		p	1		entity
	m	(Lbfh;)V	f	onTrackingEnd
	m	(Ljava/lang/Object;)V	f	onDestroyed
		p	1		entity
	m	(Lbfh;)V	g	onSectionChange
	m	(Ljava/lang/Object;)V	g	onCreated
		p	1		entity
	f	Laip;	a	this$0
c	aiq	net/minecraft/server/level/ServerPlayer
	m	(Lnet/minecraft/server/MinecraftServer;Laip;Lcom/mojang/authlib/GameProfile;)V	<init>	<init>
		p	1		server
		p	2		world
		p	3		profile
	m	()Lbyk;	A	getChatVisibility
	m	()I	B	getPermissionLevel
	m	()V	C	resetLastActionTime
	m	()Lamx;	D	getStats
	m	()Lamw;	E	getRecipeBook
	m	()V	E_	onEnterCombat
	m	()V	F	updateInvisibilityStatus
	m	()Z	F_	isSpectator
	m	()Lbfh;	G	getCamera
	m	()V	H	processPortalCooldown
	m	()J	I	getLastActionTime
	m	()Ltj;	J	getTabListDisplayName
	m	()Z	K	isChangingDimension
	m	()V	L	hasChangedDimension
	m	()Ladl;	M	getAdvancements
	m	()Lgt;	N	getRespawnPosition
	m	()F	O	getRespawnAngle
	m	()Ladc;	P	getRespawnDimension
	m	()Z	Q	isRespawnForced
	m	()Lhw;	R	getLastSectionPos
	m	()Lvb;	S	getAddEntityPacket
	m	()Lajn;	T	getTextFilter
	m	()Z	U	isTextFilteringEnabled
	m	()Z	V	allowsListing
	m	()Ljava/util/Optional;	W	getWardenSpawnTracker
	m	()Ltz;	X	getChatSession
	m	()Lcmi;	Y	getLevel
	m	()V	Y_	completeUsingItem
	m	(DD)V	a	indicateDamage
		p	1		deltaX
		p	3		deltaZ
	m	(DDD)V	a	dismountTo
		p	1		destX
		p	3		destY
		p	5		destZ
	m	(DZ)V	a	doCheckFallDamage
		p	1		heightDifference
		p	3		onGround
	m	(DZLdbq;Lgt;)V	a	checkFallDamage
		p	1		heightDifference
		p	3		onGround
		p	4		state
		p	5		landedPosition
	m	(FFZZ)V	a	setPlayerInput
		p	1		sidewaysSpeed
		p	2		forwardSpeed
		p	3		jumping
		p	4		sneaking
	m	(I)V	a	setExperiencePoints
		p	1		points
	m	(ILclh;IIZZ)V	a	sendMerchantOffers
		p	1		syncId
		p	2		offers
		p	3		levelProgress
		p	4		experience
		p	5		leveled
		p	6		refreshable
	m	(ILeeb;)V	a	lambda$awardStat$10
		p	1		score
	m	(Lacg;)V	a	sendServerStatus
		p	1		metadata
	m	(Ladc;Lgt;FZZ)V	a	setRespawnPosition
		p	1		dimension
		p	2		pos
		p	3		angle
		p	4		forced
		p	5		sendMessage
	m	(Laip;)Ldxh;	a	findDimensionEntryPoint
		p	1		destination
	m	(Laip;DDDFF)V	a	teleportTo
		p	1		targetWorld
		p	2		x
		p	4		y
		p	6		z
		p	8		yaw
		p	9		pitch
	m	(Laip;DDDLjava/util/Set;FF)Z	a	teleportTo
		p	1		world
		p	2		destX
		p	4		destY
		p	6		destZ
		p	8		flags
		p	9		yaw
		p	10		pitch
	m	(Laip;Lgt;)V	a	createEndPlatform
		p	1		world
		p	2		centerPos
	m	(Laip;Lgt;ZLddi;)Ljava/util/Optional;	a	getExitPortal
		p	1		destWorld
		p	2		destPos
		p	3		destIsNether
		p	4		worldBorder
	m	(Laiq;)Z	a	broadcastToPlayer
		p	1		spectator
	m	(Laiq;Z)V	a	restoreFrom
		p	1		oldPlayer
		p	2		alive
	m	(Lamq;Lams;FF)V	a	playNotifySound
		p	1		event
		p	2		category
		p	3		volume
		p	4		pitch
	m	(Lamy;)V	a	resetStat
		p	1		stat
	m	(Lamy;I)V	a	awardStat
		p	1		stat
		p	2		amount
	m	(Laqi;)V	a	lambda$startSleepInBed$9
		p	1		unit
	m	(Lbdx;)V	a	swing
		p	1		hand
	m	(Lbeb;)Ljava/util/OptionalInt;	a	openMenu
		p	1		factory
	m	(Lbem;)V	a	die
		p	1		damageSource
	m	(Lbem;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbey;)V	a	onEffectRemoved
		p	1		effect
	m	(Lbey;Lbfh;)V	a	onEffectAdded
		p	1		effect
		p	2		source
	m	(Lbey;ZLbfh;)V	a	onEffectUpdated
		p	1		effect
		p	2		reapplyEffect
		p	3		source
	m	(Lbfh;)V	a	crit
		p	1		target
	m	(Lbfh;I)V	a	take
		p	1		item
		p	2		count
	m	(Lbfh;ILbem;)V	a	awardKillScore
		p	1		entityKilled
		p	2		score
		p	3		damageSource
	m	(Lbfz;)V	a	lambda$tellNeutralMobsThatIDied$7
		p	1		entity
	m	(Lbti;Lbdr;)V	a	openHorseInventory
		p	1		horse
		p	2		inventory
	m	(Lbvf;)V	a	onItemPickup
		p	1		item
	m	(Lbwa;)Z	a	lambda$startSleepInBed$8
		p	1		entity
	m	(Lbxs;)V	a	lambda$readAdditionalSaveData$0
		p	1		sculkShriekerWarningManager
	m	(Lbyl;I)V	a	lambda$drop$12
		p	2		index
	m	(Lbym;)Z	a	canHarmPlayer
		p	1		player
	m	(Lcbd;)V	a	initMenu
		p	1		screenHandler
	m	(Lcfv;)V	a	updateUsingItem
		p	1		stack
	m	(Lcfv;I)V	a	onEnchantmentPerformed
		p	1		enchantedItem
		p	2		experienceLevels
	m	(Lcfv;Lbdx;)V	a	openItemGui
		p	1		book
		p	2		hand
	m	(Lcfv;ZZ)Lbvf;	a	drop
		p	1		stack
		p	2		throwRandomly
		p	3		retainOwnership
	m	(Lclp;)V	a	untrackChunk
		p	1		chunkPos
	m	(Lclp;Lvb;)V	a	trackChunk
		p	1		chunkPos
		p	2		chunkDataPacket
	m	(Lcmf;)Z	a	setGameMode
		p	1		gameMode
	m	(Lcmi;Lgt;)Z	a	mayInteract
		p	1		world
		p	2		pos
	m	(Lczm;)V	a	openCommandBlock
		p	1		commandBlock
	m	(Ldak;)V	a	openTextEdit
		p	1		sign
	m	(Ldbq;)V	a	onInsideBlock
		p	1		state
	m	(Lea$a;Lbfh;Lea$a;)V	a	lookAt
		p	1		anchorPoint
		p	2		targetEntity
		p	3		targetAnchor
	m	(Lea$a;Lede;)V	a	lookAt
		p	1		anchorPoint
		p	2		target
	m	(Leef;I)V	a	updateScoreForCriteria
		p	1		criterion
		p	2		score
	m	(Lgt;)Lcom/mojang/datafixers/util/Either;	a	startSleepInBed
		p	1		pos
	m	(Lgt;Lgz;)Z	a	bedInRange
		p	1		pos
		p	2		direction
	m	(Lhw;)V	a	setLastSectionPos
		p	1		section
	m	(Ljava/lang/String;Ljava/lang/String;ZLtj;)V	a	sendTexturePack
		p	1		url
		p	2		hash
		p	3		required
		p	4		resourcePackPrompt
	m	(Ljava/lang/String;Ljava/lang/String;[Leef;)V	a	handleTeamKill
		p	1		playerName
		p	2		team
		p	3		criterions
	m	(Ljava/util/Collection;)I	a	awardRecipes
		p	1		recipes
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lre;Ljava/lang/String;)Lcmf;	a	readPlayerMode
		p	0		nbt
		p	1		key
	m	(Lre;Lrx;)V	a	lambda$addAdditionalSaveData$2
		p	1		encoded
	m	(Ltj;)V	a	sendSystemMessage
		p	1		message
	m	(Ltj;Luf;)Luf;	a	lambda$die$4
		p	1		style
	m	(Ltj;Z)V	a	displayClientMessage
		p	1		message
		p	2		overlay
	m	(Ltx;ZLtf$a;)V	a	sendChatMessage
		p	1		message
		p	2		filterMaskEnabled
		p	3		params
	m	(Ltz;)V	a	setChatSession
		p	1		session
	m	(Lzy;)V	a	updateOptions
		p	1		packet
	m	(Z)Z	a	drop
		p	1		entireStack
	m	(ZZ)V	a	stopSleepInBed
		p	1		skipSleepTimer
		p	2		updateSleepingPlayers
	m	([Ladd;)V	a	awardRecipesByKey
		p	1		ids
	m	(DDD)V	b	teleportTo
		p	1		destX
		p	3		destY
		p	5		destZ
	m	(I)V	b	setExperienceLevels
		p	1		level
	m	(ILeeb;)V	b	lambda$updateScoreForCriteria$3
		p	1		score
	m	(Laip;)Lbfh;	b	changeDimension
		p	1		destination
	m	(Laiq;)Z	b	shouldFilterMessageTo
		p	1		player
	m	(Lbem;)Z	b	isInvulnerableTo
		p	1		damageSource
	m	(Lbfh;)V	b	magicCrit
		p	1		target
	m	(Lbfz;)Z	b	lambda$tellNeutralMobsThatIDied$6
		p	0		entity
	m	(Lcmf;)Lcmf;	b	calculateGameModeForNewPlayer
		p	1		backupGameMode
	m	(Lgt;)V	b	startSleeping
		p	1		pos
	m	(Lgt;Lgz;)Z	b	bedBlocked
		p	1		pos
		p	2		direction
	m	(Ljava/util/Collection;)I	b	resetRecipes
		p	1		recipes
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lre;Lrx;)V	b	lambda$addAdditionalSaveData$1
		p	1		encoded
	m	(Ltj;Z)V	b	sendSystemMessage
		p	1		message
		p	2		overlay
	m	(DDD)V	c	teleportRelative
		p	1		offsetX
		p	3		offsetY
		p	5		offsetZ
	m	(I)V	c	giveExperienceLevels
		p	1		levels
	m	(Laip;)V	c	setLevel
		p	1		world
	m	(Lbfh;)V	c	setCamera
		p	1		entity
	m	(Lgt;)V	c	onChangedBlock
		p	1		pos
	m	(Lre;)V	c	loadGameTypes
		p	1		nbt
	m	(Ltj;)Lvb;	c	lambda$sendSystemMessage$11
	m	(DDD)V	d	moveTo
		p	1		x
		p	3		y
		p	5		z
	m	(I)V	d	giveExperiencePoints
		p	1		experience
	m	(Laip;)V	d	fudgeSpawnLocation
		p	1		world
	m	(Lbfh;)V	d	attack
		p	1		target
	m	(Ltj;)Lvb;	d	lambda$die$5
	m	(Laip;)V	e	triggerDimensionChangeTriggers
		p	1		origin
	m	()Z	f	isCreative
	m	(Lgt;)Z	g	isReachableBedBlock
		p	1		pos
	m	()V	gj	tellNeutralMobsThatIDied
	m	()Z	gk	isPvpAllowed
	m	()V	gl	nextContainerCounter
	m	()Z	gm	acceptsChatMessages
	m	()V	h	initInventoryMenu
	m	()V	j	onLeaveCombat
	m	()Lcfr;	k	createItemCooldowns
	m	(Lre;)V	k	storeGameTypes
		p	1		nbt
	m	()V	l	tick
	m	()V	m	doTick
	m	()V	n	resetFallDistance
	m	()V	o	trackStartFallingPosition
	m	()V	p	trackEnteredOrExitedLavaOnVehicle
	m	()V	q	closeContainer
	m	()V	r	doCloseContainer
	m	()V	s	disconnect
	m	()Z	t	hasDisconnected
	m	(I)I	t	getCoprime
		p	1		horizontalSpawnArea
	m	()V	u	resetSentInfo
	m	(Z)Z	v	acceptsSystemMessages
		p	1		overlay
	m	()V	w	onUpdateAbilities
	m	()Laip;	x	getLevel
	m	()Ljava/lang/String;	y	getIpAddress
	m	()Z	z	canChatInColor
	f	Laji;	b	connection
	f	Z	cA	canChatColor
	f	J	cB	lastActionTime
	f	Lbfh;	cC	camera
	f	Z	cD	isChangingDimension
	f	Z	cE	seenCredits
	f	Lamw;	cF	recipeBook
	f	Lede;	cG	levitationStartPos
	f	I	cH	levitationStartTime
	f	Z	cI	disconnected
	f	Lede;	cJ	startingToFallPosition
	f	Lede;	cK	enteredNetherPosition
	f	Lede;	cL	enteredLavaOnVehiclePosition
	f	Lnet/minecraft/server/MinecraftServer;	c	server
	f	Lhw;	cM	lastSectionPos
	f	Ladc;	cN	respawnDimension
	f	Lgt;	cO	respawnPosition
	f	Z	cP	respawnForced
	f	F	cQ	respawnAngle
	f	Lajn;	cR	textFilter
	f	Z	cS	textFilteringEnabled
	f	Z	cT	allowsListing
	f	Lbxs;	cU	wardenSpawnTracker
	f	Lcbq;	cV	containerSynchronizer
	f	Lcbp;	cW	containerListener
	f	Ltz;	cX	chatSession
	f	I	cY	containerCounter
	f	Lorg/slf4j/Logger;	cj	LOGGER
	f	I	ck	NEUTRAL_MOB_DEATH_NOTIFICATION_RADII_XZ
	f	I	cl	NEUTRAL_MOB_DEATH_NOTIFICATION_RADII_Y
	f	Ladl;	cm	advancements
	f	Lamx;	cn	stats
	f	F	co	lastRecordedHealthAndAbsorption
	f	I	cp	lastRecordedFoodLevel
	f	I	cq	lastRecordedAirLevel
	f	I	cr	lastRecordedArmor
	f	I	cs	lastRecordedLevel
	f	I	ct	lastRecordedExperience
	f	F	cu	lastSentHealth
	f	I	cv	lastSentFood
	f	Z	cw	lastFoodSaturationZero
	f	I	cx	lastSentExp
	f	I	cy	spawnInvulnerableTime
	f	Lbyk;	cz	chatVisibility
	f	Lair;	d	gameMode
	f	I	e	latency
	f	Z	f	wonGame
c	aiq$1	net/minecraft/server/level/ServerPlayer$1
	m	(Lcbd;II)V	a	sendDataChange
		p	1		handler
		p	2		property
		p	3		value
	m	(Lcbd;ILcfv;)V	a	sendSlotChange
		p	1		handler
		p	2		slot
		p	3		stack
	m	(Lcbd;Lcfv;)V	a	sendCarriedChange
		p	1		handler
		p	2		stack
	m	(Lcbd;Lhm;Lcfv;[I)V	a	sendInitialData
		p	1		handler
		p	2		stacks
		p	3		cursorStack
		p	4		properties
	m	(Lcbd;II)V	b	broadcastDataValue
		p	1		handler
		p	2		property
		p	3		value
	f	Laiq;	a	this$0
c	aiq$2	net/minecraft/server/level/ServerPlayer$2
	m	(Lcbd;II)V	a	dataChanged
		p	1		handler
		p	2		property
		p	3		value
	m	(Lcbd;ILcfv;)V	a	slotChanged
		p	1		handler
		p	2		slotId
		p	3		stack
	f	Laiq;	a	this$0
c	air	net/minecraft/server/level/ServerPlayerGameMode
	m	(Laiq;)V	<init>	<init>
		p	1		player
	m	()V	a	tick
	m	(Laip;)V	a	setLevel
		p	1		world
	m	(Laiq;Lcmi;Lcfv;Lbdx;)Lbdy;	a	useItem
		p	1		player
		p	2		world
		p	3		stack
		p	4		hand
	m	(Laiq;Lcmi;Lcfv;Lbdx;Leda;)Lbdy;	a	useItemOn
		p	1		player
		p	2		world
		p	3		stack
		p	4		hand
		p	5		hitResult
	m	(Lcmf;)Z	a	changeGameModeForPlayer
		p	1		gameMode
	m	(Lcmf;Lcmf;)V	a	setGameModeForPlayer
		p	1		gameMode
		p	2		previousGameMode
	m	(Ldbq;Lgt;I)F	a	incrementDestroyProgress
		p	1		state
		p	2		pos
		p	3		failedStartMiningTime
	m	(Lgt;)Z	a	destroyBlock
		p	1		pos
	m	(Lgt;ILjava/lang/String;)V	a	destroyAndAck
		p	1		pos
		p	2		sequence
		p	3		reason
	m	(Lgt;Laaq$a;Lgz;II)V	a	handleBlockBreakAction
		p	1		pos
		p	2		action
		p	3		direction
		p	4		worldHeight
		p	5		sequence
	m	(Lgt;ZILjava/lang/String;)V	a	debugLogging
		p	1		pos
		p	2		success
		p	3		sequence
		p	4		reason
	m	()Lcmf;	b	getGameModeForPlayer
	m	()Lcmf;	c	getPreviousGameModeForPlayer
	m	()Z	d	isSurvival
	m	()Z	e	isCreative
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lcmf;	b	gameModeForPlayer
	f	Laip;	c	level
	f	Laiq;	d	player
	f	Lcmf;	e	previousGameModeForPlayer
	f	Z	f	isDestroyingBlock
	f	I	g	destroyProgressStart
	f	Lgt;	h	destroyPos
	f	I	i	gameTicks
	f	Z	j	hasDelayedDestroy
	f	Lgt;	k	delayedDestroyPos
	f	I	l	delayedTickStart
	f	I	m	lastSentState
c	ais	net/minecraft/server/level/ThreadedLevelLightEngine
	m	(Ldea;Laic;ZLbcr;Lbcq;)V	<init>	<init>
		p	1		chunkProvider
		p	2		chunkStorage
		p	3		hasBlockLight
		p	4		processor
		p	5		executor
	m	()V	a	tryScheduleUpdate
	m	(I)V	a	setTaskPerBatch
		p	1		taskBatchSize
	m	(IILais$a;Ljava/lang/Runnable;)V	a	addTask
		p	1		x
		p	2		z
		p	3		stage
		p	4		task
	m	(IILjava/util/function/IntSupplier;Lais$a;Ljava/lang/Runnable;)V	a	addTask
		p	1		x
		p	2		z
		p	3		completedLevelSupplier
		p	4		stage
		p	5		task
	m	(IZZ)I	a	runUpdates
		p	2		doSkylight
		p	3		skipEdgeLightPropagation
	m	(Lais$a;Ljava/lang/Runnable;)V	a	lambda$addTask$13
	m	(Lclp;)V	a	updateChunkStatus
		p	1		pos
	m	(Lclp;Lddn;)Lddn;	a	lambda$retainData$17
	m	(Lclp;Ljava/lang/Runnable;)V	a	lambda$lightChunk$24
	m	(Lclp;Z)V	a	enableLightSources
		p	1		pos
		p	2		retainData
	m	(Lcmr;Lhw;Lddt;Z)V	a	queueSectionData
		p	1		lightType
		p	2		pos
		p	3		nibbles
		p	4		nonEdge
	m	(Lddn;)Ljava/util/concurrent/CompletableFuture;	a	retainData
		p	1		chunk
	m	(Lddn;Lclp;)Lddn;	a	lambda$lightChunk$23
	m	(Lddn;Lclp;Z)V	a	lambda$lightChunk$21
	m	(Lddn;Lgt;)V	a	lambda$lightChunk$20
		p	2		pos
	m	(Lddn;Z)Ljava/util/concurrent/CompletableFuture;	a	lightChunk
		p	1		chunk
		p	2		excludeBlocks
	m	(Lgt;)V	a	checkBlock
		p	1		pos
	m	(Lgt;I)V	a	onBlockEmissionIncrease
		p	1		pos
		p	2		level
	m	(Lhw;)Ljava/lang/String;	a	lambda$queueSectionData$12
	m	(Lhw;Z)V	a	updateSectionStatus
		p	1		pos
		p	2		notReady
	m	(Lclp;)Ljava/lang/String;	b	lambda$retainData$18
	m	(Lclp;Ljava/lang/Runnable;)V	b	lambda$retainData$19
		p	2		task
	m	(Lclp;Z)V	b	retainData
		p	1		pos
		p	2		retainData
	m	(Lcmr;Lhw;Lddt;Z)V	b	lambda$queueSectionData$11
	m	(Lgt;)Ljava/lang/String;	b	lambda$checkBlock$1
	m	(Lhw;Z)Ljava/lang/String;	b	lambda$updateSectionStatus$7
	m	(Lclp;)Ljava/lang/String;	c	lambda$retainData$16
	m	(Lclp;Z)Ljava/lang/String;	c	lambda$lightChunk$22
	m	(Lgt;)V	c	lambda$checkBlock$0
	m	(Lhw;Z)V	c	lambda$updateSectionStatus$6
	m	(Lclp;)Ljava/lang/String;	d	lambda$updateChunkStatus$4
	m	(Lclp;Z)V	d	lambda$retainData$15
	m	()V	e	runUpdate
	m	(Lclp;)V	e	lambda$updateChunkStatus$3
	m	(Lclp;Z)Ljava/lang/String;	e	lambda$enableLightSources$9
	m	()V	f	lambda$tryScheduleUpdate$25
	m	(Lclp;Z)V	f	lambda$enableLightSources$8
	m	()I	g	lambda$retainData$14
	m	()I	h	lambda$queueSectionData$10
	m	()I	i	lambda$updateSectionStatus$5
	m	()I	j	lambda$updateChunkStatus$2
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	Lbcr;	e	taskMailbox
	f	Lit/unimi/dsi/fastutil/objects/ObjectList;	f	lightTasks
	f	Laic;	g	chunkMap
	f	Lbcq;	h	sorterMailbox
	f	I	i	taskPerBatch
	f	Ljava/util/concurrent/atomic/AtomicBoolean;	j	scheduled
c	ais$a	net/minecraft/server/level/ThreadedLevelLightEngine$TaskType
	m	()[Lais$a;	a	$values
	f	Lais$a;	a	PRE_UPDATE
	f	Lais$a;	b	POST_UPDATE
	f	[Lais$a;	c	$VALUES
c	ait	net/minecraft/server/level/Ticket
	m	(Laiu;ILjava/lang/Object;)V	<init>	<init>
		p	1		type
		p	2		level
		p	3		argument
	m	()Laiu;	a	getType
	m	(J)V	a	setCreatedTick
		p	1		tickCreated
	m	(Lait;)I	a	compareTo
	m	()I	b	getTicketLevel
	m	(J)Z	b	timedOut
		p	1		currentTick
	f	Laiu;	a	type
	f	I	b	ticketLevel
	f	Ljava/lang/Object;	c	key
	f	J	d	createdTick
c	aiu	net/minecraft/server/level/TicketType
	m	(Ljava/lang/String;Ljava/util/Comparator;J)V	<init>	<init>
		p	1		name
		p	2		argumentComparator
		p	3		expiryTicks
	m	()Ljava/util/Comparator;	a	getComparator
	m	(Laqi;Laqi;)I	a	lambda$static$1
		p	0		a
		p	1		b
	m	(Ljava/lang/String;Ljava/util/Comparator;)Laiu;	a	create
		p	0		name
		p	1		argumentComparator
	m	(Ljava/lang/String;Ljava/util/Comparator;I)Laiu;	a	create
		p	0		name
		p	1		argumentComparator
		p	2		expiryTicks
	m	()J	b	timeout
	m	(Laqi;Laqi;)I	b	lambda$static$0
		p	0		a
		p	1		b
	f	Laiu;	a	START
	f	Laiu;	b	DRAGON
	f	Laiu;	c	PLAYER
	f	Laiu;	d	FORCED
	f	Laiu;	e	LIGHT
	f	Laiu;	f	PORTAL
	f	Laiu;	g	POST_TELEPORT
	f	Laiu;	h	UNKNOWN
	f	Ljava/lang/String;	i	name
	f	Ljava/util/Comparator;	j	comparator
	f	J	k	timeout
c	aiv	net/minecraft/server/level/TickingTracker
	m	()V	a	runAllUpdates
	m	(I)V	a	replacePlayerTicketsLevel
		p	1		level
	m	(JI)V	a	setLevel
		p	1		id
		p	3		level
	m	(JLait;)V	a	addTicket
		p	1		pos
		p	3		ticket
	m	(Laiu;Lclp;ILjava/lang/Object;)V	a	addTicket
		p	1		type
		p	2		pos
		p	3		level
		p	4		argument
	m	(Lapx;)I	a	getTicketLevelAt
		p	1		ticket
	m	(Lclp;)I	a	getLevel
		p	1		pos
	m	(J)I	b	getLevelFromSource
		p	1		id
	m	(JLait;)V	b	removeTicket
		p	1		pos
		p	3		ticket
	m	(Laiu;Lclp;ILjava/lang/Object;)V	b	removeTicket
		p	1		type
		p	2		pos
		p	3		level
		p	4		argument
	m	(J)I	c	getLevel
		p	1		id
	m	(J)Ljava/lang/String;	d	getTicketDebugString
		p	1		pos
	m	(J)Lapx;	g	getTickets
		p	1		pos
	m	(J)Lapx;	h	lambda$getTickets$0
		p	0		p
	f	Lit/unimi/dsi/fastutil/longs/Long2ByteMap;	a	chunks
	f	I	b	INITIAL_TICKET_LIST_CAPACITY
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap;	c	tickets
c	aiw	net/minecraft/server/level/WorldGenRegion
	m	(Laip;Ljava/util/List;Ldds;I)V	<init>	<init>
		p	1		world
		p	2		chunks
		p	3		status
		p	4		placementRadius
	m	()J	A	getSeed
	m	()Laip;	C	getLevel
	m	()Lcau;	G	enabledFeatures
	m	()Lddr;	I	getChunkSource
	m	()Leel;	J	getFluidTicks
	m	()Leel;	K	getBlockTicks
	m	()Lclp;	a	getCenter
	m	(DDDDLjava/util/function/Predicate;)Lbym;	a	getNearestPlayer
		p	1		x
		p	3		y
		p	5		z
		p	7		maxDistance
		p	9		targetPredicate
	m	(II)Lddn;	a	getChunk
		p	1		chunkX
		p	2		chunkZ
	m	(III)Lhd;	a	getUncachedNoiseBiome
		p	1		biomeX
		p	2		biomeY
		p	3		biomeZ
	m	(IILdds;Z)Lddn;	a	getChunk
		p	1		chunkX
		p	2		chunkZ
		p	3		leastStatus
		p	4		create
	m	(Lbfh;Lecz;Ljava/util/function/Predicate;)Ljava/util/List;	a	getEntities
		p	1		except
		p	2		box
		p	3		predicate
	m	(Lbym;ILgt;I)V	a	levelEvent
		p	1		player
		p	2		eventId
		p	3		pos
		p	4		data
	m	(Lbym;Lgt;Lamq;Lams;FF)V	a	playSound
		p	1		except
		p	2		pos
		p	3		sound
		p	4		category
		p	5		volume
		p	6		pitch
	m	(Lclp;I)Z	a	isOldChunkAround
		p	1		chunkPos
		p	2		checkRadius
	m	(Ldfo;Lecz;Ljava/util/function/Predicate;)Ljava/util/List;	a	getEntities
		p	1		filter
		p	2		box
		p	3		predicate
	m	(Ldga;Lede;Ldga$a;)V	a	gameEvent
		p	1		event
		p	2		emitterPos
		p	3		emitter
	m	(Ldgz$a;II)I	a	getHeight
		p	1		heightmap
		p	2		x
		p	3		z
	m	(Lgt;Ldbq;II)Z	a	setBlock
		p	1		pos
		p	2		state
		p	3		flags
		p	4		maxUpdateDepth
	m	(Lgt;Ljava/util/function/Predicate;)Z	a	isStateAtPosition
		p	1		pos
		p	2		state
	m	(Lgt;Z)Z	a	removeBlock
		p	1		pos
		p	2		move
	m	(Lgt;ZLbfh;I)Z	a	destroyBlock
		p	1		pos
		p	2		drop
		p	3		breakingEntity
		p	4		maxUpdateDepth
	m	(Lgz;Z)F	a	getShade
		p	1		direction
		p	2		shaded
	m	(Lis;DDDDDD)V	a	addParticle
		p	1		parameters
		p	2		x
		p	4		y
		p	6		z
		p	8		velocityX
		p	10		velocityY
		p	12		velocityZ
	m	(Ljava/util/function/Supplier;)V	a	setCurrentlyGenerating
		p	1		structureName
	m	(Lgt;)Ldbq;	a_	getBlockState
		p	1		pos
	m	(II)Z	b	hasChunk
		p	1		chunkX
		p	2		chunkZ
	m	(Lbfh;)Z	b	addFreshEntity
		p	1		entity
	m	(Lgt;Ljava/util/function/Predicate;)Z	b	isFluidAtPosition
		p	1		pos
		p	2		state
	m	(Lgt;)Ldwj;	b_	getFluidState
		p	1		pos
	m	(Lgt;)Lcze;	c_	getBlockEntity
		p	1		pos
	m	(Lgt;)Lbdw;	d_	getCurrentDifficultyAt
		p	1		pos
	m	(Lgt;)Z	e_	ensureCanWrite
		p	1		pos
	m	(Lgt;)V	f	markPosForPostprocessing
		p	1		pos
	m	(Lgt;)Lees;	j	lambda$new$1
		p	1		pos
	m	(Lgt;)Lees;	k	lambda$new$0
		p	1		pos
	m	()Z	k_	isClientSide
	m	()Ldwa;	l_	getLightEngine
	m	()I	m_	getSeaLevel
	m	()Lnet/minecraft/server/MinecraftServer;	n	getServer
	m	()Ldyb;	n_	getLevelData
	m	()I	o_	getSkyDarken
	m	()Lddi;	p_	getWorldBorder
	m	()Ldez;	q_	dimensionType
	m	()Lapo;	r_	getRandom
	m	()Lcnh;	s_	getBiomeManager
	m	()J	t_	nextSubTickCount
	m	()Lhr;	u_	registryAccess
	m	()Ljava/util/List;	v	players
	m	()I	v_	getMinBuildHeight
	m	()I	w_	getHeight
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/List;	b	cache
	f	Lddn;	c	center
	f	I	d	size
	f	Laip;	e	level
	f	J	f	seed
	f	Ldyb;	g	levelData
	f	Lapo;	h	random
	f	Ldez;	i	dimensionType
	f	Leeu;	j	blockTicks
	f	Leeu;	k	fluidTicks
	f	Lcnh;	l	biomeManager
	f	Lclp;	m	firstPos
	f	Lclp;	n	lastPos
	f	Lcmz;	o	structureManager
	f	Ldds;	p	generatingStatus
	f	I	q	writeRadiusCutoff
	f	Ljava/util/function/Supplier;	r	currentlyGenerating
	f	Ljava/util/concurrent/atomic/AtomicLong;	s	subTickCount
	f	Ladd;	t	WORLDGEN_REGION_RANDOM
c	aix	net/minecraft/server/level/package-info
c	aiy	net/minecraft/server/level/progress/ChunkProgressListener
	m	()V	a	start
	m	(Lclp;)V	a	updateSpawnPos
		p	1		spawnPos
	m	(Lclp;Ldds;)V	a	onStatusChange
		p	1		pos
		p	2		status
	m	()V	b	stop
c	aiz	net/minecraft/server/level/progress/ChunkProgressListenerFactory
	m	(I)Laiy;	create	create
		p	1		radius
c	aja	net/minecraft/server/level/progress/LoggerChunkProgressListener
	m	(I)V	<init>	<init>
		p	1		radius
	m	()V	a	start
	m	(Lclp;)V	a	updateSpawnPos
		p	1		spawnPos
	m	(Lclp;Ldds;)V	a	onStatusChange
		p	1		pos
		p	2		status
	m	()V	b	stop
	m	()I	c	getProgress
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	I	b	maxCount
	f	I	c	count
	f	J	d	startTime
	f	J	e	nextTickTime
c	ajb	net/minecraft/server/level/progress/ProcessorChunkProgressListener
	m	(Laiy;Ljava/util/concurrent/Executor;)V	<init>	<init>
		p	1		progressListener
		p	2		executor
	m	()V	a	start
	m	(Laiy;Ljava/util/concurrent/Executor;)Lajb;	a	createStarted
		p	0		progressListener
		p	1		executor
	m	(Lclp;)V	a	updateSpawnPos
		p	1		spawnPos
	m	(Lclp;Ldds;)V	a	onStatusChange
		p	1		pos
		p	2		status
	m	()V	b	stop
	m	(Lclp;)V	b	lambda$updateSpawnPos$0
	m	(Lclp;Ldds;)V	b	lambda$onStatusChange$1
	f	Laiy;	a	delegate
	f	Lbcr;	b	mailbox
c	ajc	net/minecraft/server/level/progress/StoringChunkProgressListener
	m	(I)V	<init>	<init>
		p	1		radius
	m	()V	a	start
	m	(II)Ldds;	a	getStatus
		p	1		x
		p	2		z
	m	(Lclp;)V	a	updateSpawnPos
		p	1		spawnPos
	m	(Lclp;Ldds;)V	a	onStatusChange
		p	1		pos
		p	2		status
	m	()V	b	stop
	m	()I	c	getFullDiameter
	m	()I	d	getDiameter
	m	()I	e	getProgress
	f	Laja;	a	delegate
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap;	b	statuses
	f	Lclp;	c	spawnPos
	f	I	d	fullDiameter
	f	I	e	radius
	f	I	f	diameter
	f	Z	g	started
c	ajd	net/minecraft/server/level/progress/package-info
c	aje	net/minecraft/server/network/FilteredText
	m	()Ljava/lang/String;	a	filtered
	m	(Ljava/lang/String;)Laje;	a	passThrough
		p	0		raw
	m	()Ljava/lang/String;	b	filteredOrEmpty
	m	(Ljava/lang/String;)Laje;	b	fullyFiltered
		p	0		raw
	m	()Z	c	isFiltered
	m	()Ljava/lang/String;	d	raw
	m	()Ltm;	e	mask
	f	Laje;	a	EMPTY
	f	Ljava/lang/String;	b	raw
	f	Ltm;	c	mask
c	ajf	net/minecraft/server/network/LegacyQueryHandler
	m	(Lajh;)V	<init>	<init>
		p	1		networkIo
	m	(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;)V	a	sendFlushAndClose
		p	1		ctx
		p	2		buf
	m	(Ljava/lang/String;)Lio/netty/buffer/ByteBuf;	a	createReply
		p	1		s
	f	I	a	FAKE_PROTOCOL_VERSION
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Lajh;	c	serverConnectionListener
c	ajg	net/minecraft/server/network/MemoryServerHandshakePacketListenerImpl
	m	(Lnet/minecraft/server/MinecraftServer;Lsq;)V	<init>	<init>
		p	1		server
		p	2		connection
	m	()Z	a	isAcceptingMessages
	m	(Labo;)V	a	handleIntention
		p	1		packet
	m	(Ltj;)V	a	onDisconnect
		p	1		reason
	f	Lnet/minecraft/server/MinecraftServer;	a	server
	f	Lsq;	b	connection
c	ajh	net/minecraft/server/network/ServerConnectionListener
	m	(Lnet/minecraft/server/MinecraftServer;)V	<init>	<init>
		p	1		server
	m	()Ljava/net/SocketAddress;	a	startMemoryChannel
	m	(Ljava/net/InetAddress;I)V	a	startTcpServerListener
		p	1		address
		p	2		port
	m	(Lsq;Ltj;)V	a	lambda$tick$2
	m	()V	b	stop
	m	()V	c	tick
	m	()Lnet/minecraft/server/MinecraftServer;	d	getServer
	m	()Ljava/util/List;	e	getConnections
	m	()Lio/netty/channel/epoll/EpollEventLoopGroup;	f	lambda$static$1
	m	()Lio/netty/channel/nio/NioEventLoopGroup;	g	lambda$static$0
	f	Lape;	a	SERVER_EVENT_GROUP
	f	Lape;	b	SERVER_EPOLL_EVENT_GROUP
	f	Z	c	running
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	Lnet/minecraft/server/MinecraftServer;	e	server
	f	Ljava/util/List;	f	channels
	f	Ljava/util/List;	g	connections
c	ajh$1	net/minecraft/server/network/ServerConnectionListener$1
	f	Lajh;	a	this$0
c	ajh$2	net/minecraft/server/network/ServerConnectionListener$2
	f	Lajh;	a	this$0
c	ajh$a	net/minecraft/server/network/ServerConnectionListener$LatencySimulator
	m	(II)V	<init>	<init>
		p	1		baseDelay
		p	2		extraDelay
	m	(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;)V	a	delayDownstream
		p	1		ctx
		p	2		msg
	m	(Lio/netty/util/Timeout;)V	a	onTimeout
		p	1		timeout
	f	Lio/netty/util/Timer;	a	TIMER
	f	I	b	delay
	f	I	c	jitter
	f	Ljava/util/List;	d	queuedMessages
c	ajh$a$a	net/minecraft/server/network/ServerConnectionListener$LatencySimulator$DelayedMessage
	m	(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;)V	<init>	<init>
		p	1		context
		p	2		message
	f	Lio/netty/channel/ChannelHandlerContext;	a	ctx
	f	Ljava/lang/Object;	b	msg
c	aji	net/minecraft/server/network/ServerGamePacketListenerImpl
	m	(Lnet/minecraft/server/MinecraftServer;Lsq;Laiq;)V	<init>	<init>
		p	1		server
		p	2		connection
		p	3		player
	m	()Z	a	isAcceptingMessages
	m	(D)D	a	clampHorizontal
		p	0		d
	m	(DDDFF)V	a	teleport
		p	1		x
		p	3		y
		p	5		z
		p	7		yaw
		p	8		pitch
	m	(DDDFFLjava/util/Set;)V	a	teleport
		p	1		x
		p	3		y
		p	5		z
		p	7		yaw
		p	8		pitch
	m	(I)V	a	ackBlockChangesUpTo
		p	1		sequence
	m	(ILjava/util/List;)V	a	lambda$handleEditBook$4
		p	2		texts
	m	(Laaa;)V	a	handleContainerButtonClick
		p	1		packet
	m	(Laab;)V	a	handleContainerClick
		p	1		packet
	m	(Laac;)V	a	handleContainerClose
		p	1		packet
	m	(Laad;)V	a	handleCustomPayload
		p	1		packet
	m	(Laae;)V	a	handleEditBook
		p	1		packet
	m	(Laaf;)V	a	handleEntityTagQuery
		p	1		packet
	m	(Laag;)V	a	handleInteract
		p	1		packet
	m	(Laah;)V	a	handleJigsawGenerate
		p	1		packet
	m	(Laai;)V	a	handleKeepAlive
		p	1		packet
	m	(Laaj;)V	a	handleLockDifficulty
		p	1		packet
	m	(Laak;)V	a	handleMovePlayer
		p	1		packet
	m	(Laal;)V	a	handleMoveVehicle
		p	1		packet
	m	(Laam;)V	a	handlePaddleBoat
		p	1		packet
	m	(Laan;)V	a	handlePickItem
		p	1		packet
	m	(Laao;)V	a	handlePlaceRecipe
		p	1		packet
	m	(Laao;Lciy;)V	a	lambda$handlePlaceRecipe$13
		p	2		recipe
	m	(Laap;)V	a	handlePlayerAbilities
		p	1		packet
	m	(Laaq;)V	a	handlePlayerAction
		p	1		packet
	m	(Laar;)V	a	handlePlayerCommand
		p	1		packet
	m	(Laas;)V	a	handlePlayerInput
		p	1		packet
	m	(Laat;)V	a	handlePong
		p	1		packet
	m	(Laau;)V	a	handleRecipeBookChangeSettingsPacket
		p	1		packet
	m	(Laav;)V	a	handleRecipeBookSeenRecipePacket
		p	1		packet
	m	(Laaw;)V	a	handleRenameItem
		p	1		packet
	m	(Laax;)V	a	handleResourcePackResponse
		p	1		packet
	m	(Laay;)V	a	handleSeenAdvancements
		p	1		packet
	m	(Laaz;)V	a	handleSelectTrade
		p	1		packet
	m	(Laba;)V	a	handleSetBeaconPacket
		p	1		packet
	m	(Labb;)V	a	handleSetCarriedItem
		p	1		packet
	m	(Labc;)V	a	handleSetCommandBlock
		p	1		packet
	m	(Labd;)V	a	handleSetCommandMinecart
		p	1		packet
	m	(Labe;)V	a	handleSetCreativeModeSlot
		p	1		packet
	m	(Labf;)V	a	handleSetJigsawBlock
		p	1		packet
	m	(Labg;)V	a	handleSetStructureBlock
		p	1		packet
	m	(Labh;)V	a	handleSignUpdate
		p	1		packet
	m	(Labh;Ljava/util/List;)V	a	updateSignText
		p	1		packet
		p	2		signText
	m	(Labi;)V	a	handleAnimate
		p	1		packet
	m	(Labj;)V	a	handleTeleportToEntityPacket
		p	1		packet
	m	(Labk;)V	a	handleUseItemOn
		p	1		packet
	m	(Labl;)V	a	handleUseItem
		p	1		packet
	m	(Laiq;Lcfv;)Z	a	wasBlockPlacementAttempt
		p	0		player
		p	1		stack
	m	(Laje;Ljava/util/List;I)V	a	signBook
		p	1		title
		p	2		pages
		p	3		slotId
	m	(Lbfh;)Z	a	noBlocksAround
		p	1		entity
	m	(Lcml;Lecz;)Z	a	isPlayerCollidingWithAnythingNew
		p	1		world
		p	2		box
	m	(Ldp;Ldr;)Ldr;	a	lambda$performChatCommand$12
		p	1		source
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	lambda$filterTextPacket$1
		p	1		filtered
	m	(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/util/concurrent/CompletableFuture;	a	filterTextPacket
		p	1		text
		p	2		filterer
	m	(Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;	a	filterTextPacket
		p	1		text
	m	(Ljava/lang/String;Ljava/time/Instant;Ltp$b;)Ljava/util/Optional;	a	tryHandleChat
		p	1		message
		p	2		timestamp
		p	3		acknowledgment
	m	(Ljava/time/Instant;)Z	a	updateChatOrder
		p	1		timestamp
	m	(Ljava/util/List;)Ljava/util/concurrent/CompletableFuture;	a	filterTextPacket
		p	1		texts
	m	(Ljava/util/List;I)V	a	updateBookContents
		p	1		pages
		p	2		slotId
	m	(Ljava/util/List;Ljava/util/function/UnaryOperator;Lcfv;)V	a	updateBookPages
		p	1		messages
		p	2		postProcessor
		p	3		book
	m	(Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;Lty;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	lambda$handleChat$9
		p	4		executor
	m	(Ljava/util/function/UnaryOperator;Laje;)Lrv;	a	lambda$updateBookPages$6
		p	1		message
	m	(Ltj;)V	a	onDisconnect
		p	1		reason
	m	(Ltj;Ltf$a;)V	a	sendDisguisedChatMessage
		p	1		message
		p	2		params
	m	(Ltp$b;)Ljava/util/Optional;	a	unpackAndApplyLastSeen
		p	1		acknowledgment
	m	(Lty;)V	a	addPendingMessage
		p	1		message
	m	(Lty;Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;Ljava/lang/Void;)V	a	lambda$handleChat$8
		p	4		void_
	m	(Lty;Ltf$a;)V	a	sendPlayerChatMessage
		p	1		message
		p	2		params
	m	(Ltz;)V	a	resetPlayerChatState
		p	1		session
	m	(Ltz;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	lambda$resetPlayerChatState$15
		p	2		executor
	m	(Luc$a;)V	a	handleMessageDecodeFailure
		p	1		exception
	m	(Lvb;)V	a	send
		p	1		packet
	m	(Lvb;Lsy;)V	a	send
		p	1		packet
		p	2		callbacks
	m	(Lzq;)V	a	handleAcceptTeleportPacket
		p	1		packet
	m	(Lzr;)V	a	handleBlockEntityTagQuery
		p	1		packet
	m	(Lzs;)V	a	handleChangeDifficulty
		p	1		packet
	m	(Lzt;)V	a	handleChatAck
		p	1		packet
	m	(Lzu;)V	a	handleChatCommand
		p	1		packet
	m	(Lzu;Ljava/util/Optional;)V	a	lambda$handleChatCommand$11
	m	(Lzu;Ltp;)V	a	performChatCommand
		p	1		packet
		p	2		lastSeenMessages
	m	(Lzu;Lua;Ltp;)Ljava/util/Map;	a	collectSignedArguments
		p	1		packet
		p	2		arguments
		p	3		lastSeenMessages
	m	(Lzv;)V	a	handleChat
		p	1		packet
	m	(Lzv;Ljava/util/Optional;)V	a	lambda$handleChat$10
	m	(Lzv;Ltp;)Lty;	a	getSignedMessage
		p	1		packet
		p	2		lastSeenMessages
	m	(Lzw;)V	a	handleChatSessionUpdate
		p	1		packet
	m	(Lzx;)V	a	handleClientCommand
		p	1		packet
	m	(Lzy;)V	a	handleClientInformation
		p	1		packet
	m	(Lzz;)V	a	handleCustomCommandSuggestions
		p	1		packet
	m	(Lzz;Lcom/mojang/brigadier/suggestion/Suggestions;)V	a	lambda$handleCustomCommandSuggestions$2
		p	2		suggestions
	m	(D)D	b	clampVertical
		p	0		d
	m	(DDDFF)Z	b	containsInvalidValues
		p	0		x
		p	2		y
		p	4		z
		p	6		yaw
		p	7		pitch
	m	(ILjava/util/List;)V	b	lambda$handleEditBook$3
		p	2		texts
	m	(Labh;Ljava/util/List;)V	b	lambda$handleSignUpdate$14
		p	2		texts
	m	(Ljava/lang/String;)Lcom/mojang/brigadier/ParseResults;	b	parseCommand
		p	1		command
	m	(Ltj;)V	b	disconnect
		p	1		reason
	m	(Lty;)V	b	broadcastChatMessage
		p	1		message
	m	(Lvb;)Ljava/lang/String;	b	lambda$send$7
	m	()V	c	tick
	m	(Ljava/lang/String;)Z	c	isChatMessageIllegal
		p	0		message
	m	(Ltj;)V	c	lambda$disconnect$0
	m	()V	d	resetPosition
	m	(Ljava/lang/String;)Ljava/lang/String;	d	lambda$signBook$5
		p	0		text
	m	()Ljava/net/SocketAddress;	e	getRemoteAddress
	m	()Laiq;	f	getPlayer
	m	()Z	g	isSingleplayerOwner
	m	()V	h	detectRateSpam
	f	D	A	vehicleLastGoodX
	f	D	B	vehicleLastGoodY
	f	D	C	vehicleLastGoodZ
	f	Lede;	D	awaitingPositionFromClient
	f	I	E	awaitingTeleport
	f	I	F	awaitingTeleportTime
	f	Z	G	clientIsFloating
	f	I	H	aboveGroundTickCount
	f	Z	I	clientVehicleIsFloating
	f	I	J	aboveGroundVehicleTickCount
	f	I	K	receivedMovePacketCount
	f	I	L	knownMovePacketCount
	f	Ljava/util/concurrent/atomic/AtomicReference;	M	lastChatTimeStamp
	f	Ltz;	N	chatSession
	f	Luc$b;	O	signedMessageDecoder
	f	Ltr;	P	lastSeenMessages
	f	Ltv;	Q	messageSignatureCache
	f	Laoy;	R	chatMessageChain
	f	D	a	MAX_INTERACTION_DISTANCE
	f	Laiq;	b	player
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	I	d	LATENCY_CHECK_INTERVAL
	f	I	e	NO_BLOCK_UPDATES_TO_ACK
	f	I	f	TRACKED_MESSAGE_DISCONNECT_THRESHOLD
	f	Ltj;	g	CHAT_VALIDATION_FAILED
	f	Lsq;	h	connection
	f	Lnet/minecraft/server/MinecraftServer;	i	server
	f	I	j	tickCount
	f	I	k	ackBlockChangesUpTo
	f	J	l	keepAliveTime
	f	Z	m	keepAlivePending
	f	J	n	keepAliveChallenge
	f	I	o	chatSpamTickCount
	f	I	p	dropSpamTickCount
	f	D	q	firstGoodX
	f	D	r	firstGoodY
	f	D	s	firstGoodZ
	f	D	t	lastGoodX
	f	D	u	lastGoodY
	f	D	v	lastGoodZ
	f	Lbfh;	w	lastVehicle
	f	D	x	vehicleFirstGoodX
	f	D	y	vehicleFirstGoodY
	f	D	z	vehicleFirstGoodZ
c	aji$1	net/minecraft/server/network/ServerGamePacketListenerImpl$1
	m	()V	a	onAttack
	m	(Lbdx;)V	a	onInteraction
		p	1		hand
	m	(Lbdx;Laji$a;)V	a	performInteraction
		p	1		hand
		p	2		action
	m	(Lbdx;Lede;)V	a	onInteraction
		p	1		hand
		p	2		pos
	m	(Lede;Laiq;Lbfh;Lbdx;)Lbdy;	a	lambda$onInteraction$0
		p	1		player
		p	2		entity
		p	3		hand
	f	Laip;	a	val$level
	f	Lbfh;	b	val$target
	f	Laji;	c	this$0
c	aji$2	net/minecraft/server/network/ServerGamePacketListenerImpl$2
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$entity$CommandBlockEntity$Mode
	f	[I	b	$SwitchMap$net$minecraft$network$protocol$game$ServerboundPlayerActionPacket$Action
	f	[I	c	$SwitchMap$net$minecraft$network$protocol$game$ServerboundPlayerCommandPacket$Action
	f	[I	d	$SwitchMap$net$minecraft$network$protocol$game$ServerboundClientCommandPacket$Action
c	aji$a	net/minecraft/server/network/ServerGamePacketListenerImpl$EntityInteraction
	m	(Laiq;Lbfh;Lbdx;)Lbdy;	run	run
		p	1		player
		p	2		entity
		p	3		hand
c	ajj	net/minecraft/server/network/ServerHandshakePacketListenerImpl
	m	(Lnet/minecraft/server/MinecraftServer;Lsq;)V	<init>	<init>
		p	1		server
		p	2		connection
	m	()Z	a	isAcceptingMessages
	m	(Labo;)V	a	handleIntention
		p	1		packet
	m	(Ltj;)V	a	onDisconnect
		p	1		reason
	f	Ltj;	a	IGNORE_STATUS_REASON
	f	Lnet/minecraft/server/MinecraftServer;	b	server
	f	Lsq;	c	connection
c	ajj$1	net/minecraft/server/network/ServerHandshakePacketListenerImpl$1
	f	[I	a	$SwitchMap$net$minecraft$network$ConnectionProtocol
c	ajk	net/minecraft/server/network/ServerLoginPacketListenerImpl
	m	(Lnet/minecraft/server/MinecraftServer;Lsq;)V	<init>	<init>
		p	1		server
		p	2		connection
	m	()Z	a	isAcceptingMessages
	m	(I)Z	a	lambda$isValidUsername$1
		p	0		c
	m	(Laby;)V	a	handleCustomQueryPacket
		p	1		packet
	m	(Labz;)V	a	handleHello
		p	1		packet
	m	(Laca;)V	a	handleKey
		p	1		packet
	m	(Laiq;)V	a	placeNewPlayer
		p	1		player
	m	(Lcom/mojang/authlib/GameProfile;)Lcom/mojang/authlib/GameProfile;	a	createFakeProfile
		p	1		profile
	m	(Ljava/lang/String;)Z	a	isValidUsername
		p	0		name
	m	(Ltj;)V	a	onDisconnect
		p	1		reason
	m	(Ltj;)V	b	disconnect
		p	1		reason
	m	()V	c	tick
	m	()V	d	handleAcceptedLogin
	m	()Ljava/lang/String;	e	getUserName
	m	()V	f	lambda$handleAcceptedLogin$0
	f	Ljava/util/concurrent/atomic/AtomicInteger;	a	UNIQUE_THREAD_ID
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	I	c	MAX_TICKS_BEFORE_LOGIN
	f	Lapo;	d	RANDOM
	f	[B	e	challenge
	f	Lnet/minecraft/server/MinecraftServer;	f	server
	f	Lsq;	g	connection
	f	Lajk$a;	h	state
	f	I	i	tick
	f	Lcom/mojang/authlib/GameProfile;	j	gameProfile
	f	Ljava/lang/String;	k	serverId
	f	Laiq;	l	delayedAcceptPlayer
c	ajk$1	net/minecraft/server/network/ServerLoginPacketListenerImpl$1
	m	()Ljava/net/InetAddress;	a	getAddress
	f	Ljava/lang/String;	a	val$digest
	f	Lajk;	b	this$0
c	ajk$a	net/minecraft/server/network/ServerLoginPacketListenerImpl$State
	m	()[Lajk$a;	a	$values
	f	Lajk$a;	a	HELLO
	f	Lajk$a;	b	KEY
	f	Lajk$a;	c	AUTHENTICATING
	f	Lajk$a;	d	NEGOTIATING
	f	Lajk$a;	e	READY_TO_ACCEPT
	f	Lajk$a;	f	DELAY_ACCEPT
	f	Lajk$a;	g	ACCEPTED
	f	[Lajk$a;	h	$VALUES
c	ajl	net/minecraft/server/network/ServerPlayerConnection
	m	(Lvb;)V	a	send
		p	1		packet
	m	()Laiq;	f	getPlayer
c	ajm	net/minecraft/server/network/ServerStatusPacketListenerImpl
	m	(Lacg;Lsq;)V	<init>	<init>
		p	1		metadata
		p	2		connection
	m	()Z	a	isAcceptingMessages
	m	(Laci;)V	a	handlePingRequest
		p	1		packet
	m	(Lacj;)V	a	handleStatusRequest
		p	1		packet
	m	(Ltj;)V	a	onDisconnect
		p	1		reason
	f	Ltj;	a	DISCONNECT_REASON
	f	Lacg;	b	status
	f	Lsq;	c	connection
	f	Z	d	hasRequestedStatus
c	ajn	net/minecraft/server/network/TextFilter
	m	()V	a	join
	m	(Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;	a	processStreamMessage
		p	1		text
	m	(Ljava/util/List;)Ljava/util/concurrent/CompletableFuture;	a	processMessageBundle
		p	1		texts
	m	()V	b	leave
	f	Lajn;	a	DUMMY
c	ajn$1	net/minecraft/server/network/TextFilter$1
	m	()V	a	join
	m	(Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;	a	processStreamMessage
		p	1		text
	m	(Ljava/util/List;)Ljava/util/concurrent/CompletableFuture;	a	processMessageBundle
		p	1		texts
	m	()V	b	leave
c	ajo	net/minecraft/server/network/TextFilterClient
	m	(Ljava/net/URL;Lajo$c;Ljava/net/URL;Lajo$b;Ljava/net/URL;Lajo$b;Ljava/lang/String;Lajo$a;I)V	<init>	<init>
		p	1		chatEndpoint
		p	2		messageEncoder
		p	3		joinEndpoint
		p	4		joinEncoder
		p	5		leaveEndpoint
		p	6		leaveEncoder
		p	7		apiKey
		p	8		ignorer
		p	9		parallelism
	m	(ILjava/lang/String;Ljava/lang/String;Lcom/mojang/authlib/GameProfile;Ljava/lang/String;)Lcom/google/gson/JsonObject;	a	lambda$createFromConfig$2
		p	3		profile
		p	4		message
	m	(Lajo$b;Lcom/mojang/authlib/GameProfile;Ljava/net/URL;)V	a	lambda$processJoinOrLeave$4
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	a	getEndpointFromConfig
		p	0		json
		p	1		key
		p	2		fallback
	m	(Lcom/google/gson/JsonObject;Ljava/net/URL;)Lcom/google/gson/JsonObject;	a	processRequestResponse
		p	1		payload
		p	2		endpoint
	m	(Lcom/mojang/authlib/GameProfile;)Lajn;	a	createContext
		p	1		gameProfile
	m	(Lcom/mojang/authlib/GameProfile;Ljava/lang/String;Lajo$a;)Laje;	a	lambda$requestMessageProcessing$5
	m	(Lcom/mojang/authlib/GameProfile;Ljava/lang/String;Lajo$a;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	requestMessageProcessing
		p	1		gameProfile
		p	2		message
		p	3		ignorer
		p	4		executor
	m	(Lcom/mojang/authlib/GameProfile;Ljava/net/URL;Lajo$b;Ljava/util/concurrent/Executor;)V	a	processJoinOrLeave
		p	1		gameProfile
		p	2		endpoint
		p	3		profileEncoder
		p	4		executor
	m	(Ljava/io/InputStream;)V	a	drainStream
		p	1		inputStream
	m	(Ljava/lang/Runnable;)Ljava/lang/Thread;	a	lambda$static$0
		p	0		runnable
	m	(Ljava/lang/String;)Lajo;	a	createFromConfig
		p	0		config
	m	(Ljava/lang/String;Lcom/google/gson/JsonArray;Lajo$a;)Ltm;	a	parseMask
		p	1		message
		p	2		mask
		p	3		ignorer
	m	(Ljava/lang/String;Ljava/lang/String;Lcom/mojang/authlib/GameProfile;)Lcom/google/gson/JsonObject;	a	lambda$createFromConfig$1
		p	2		profile
	m	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/mojang/authlib/GameProfile;Ljava/lang/String;)Lcom/google/gson/JsonObject;	a	lambda$createFromConfig$3
		p	3		profile
		p	4		message
	m	(Ljava/net/URI;Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/String;)Ljava/net/URL;	a	getEndpoint
		p	0		root
		p	1		endpoints
		p	2		key
		p	3		fallback
	m	(Lcom/google/gson/JsonObject;Ljava/net/URL;)V	b	processRequest
		p	1		payload
		p	2		endpoint
	m	(Lcom/google/gson/JsonObject;Ljava/net/URL;)Ljava/net/HttpURLConnection;	c	makeRequest
		p	1		payload
		p	2		endpoint
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/concurrent/atomic/AtomicInteger;	b	WORKER_COUNT
	f	Ljava/util/concurrent/ThreadFactory;	c	THREAD_FACTORY
	f	Ljava/lang/String;	d	DEFAULT_ENDPOINT
	f	Ljava/net/URL;	e	chatEndpoint
	f	Lajo$c;	f	chatEncoder
	f	Ljava/net/URL;	g	joinEndpoint
	f	Lajo$b;	h	joinEncoder
	f	Ljava/net/URL;	i	leaveEndpoint
	f	Lajo$b;	j	leaveEncoder
	f	Ljava/lang/String;	k	authKey
	f	Lajo$a;	l	chatIgnoreStrategy
	f	Ljava/util/concurrent/ExecutorService;	m	workerPool
c	ajo$a	net/minecraft/server/network/TextFilterClient$IgnoreStrategy
	m	(ILjava/lang/String;I)Z	a	lambda$ignoreOverThreshold$2
		p	1		hashes
		p	2		hashesSize
	m	(Ljava/lang/String;I)Z	a	lambda$static$1
		p	0		hashes
		p	1		hashesSize
	m	(Ljava/lang/String;I)Z	b	lambda$static$0
		p	0		hashes
		p	1		hashesSize
	m	(I)Lajo$a;	ignoreOverThreshold	ignoreOverThreshold
		p	0		hashesToDrop
	m	(I)Lajo$a;	select	select
		p	0		hashesToDrop
	m	(Ljava/lang/String;I)Z	shouldIgnore	shouldIgnore
		p	1		hashes
		p	2		hashesSize
	f	Lajo$a;	a	NEVER_IGNORE
	f	Lajo$a;	b	IGNORE_FULLY_FILTERED
c	ajo$b	net/minecraft/server/network/TextFilterClient$JoinOrLeaveEncoder
	m	(Lcom/mojang/authlib/GameProfile;)Lcom/google/gson/JsonObject;	encode	encode
		p	1		gameProfile
c	ajo$c	net/minecraft/server/network/TextFilterClient$MessageEncoder
	m	(Lcom/mojang/authlib/GameProfile;Ljava/lang/String;)Lcom/google/gson/JsonObject;	encode	encode
		p	1		gameProfile
		p	2		message
c	ajo$d	net/minecraft/server/network/TextFilterClient$PlayerContext
	m	(Lajo;Lcom/mojang/authlib/GameProfile;)V	<init>	<init>
		p	2		gameProfile
	m	()V	a	join
	m	(Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;	a	processStreamMessage
		p	1		text
	m	(Ljava/lang/Throwable;)Ljava/util/List;	a	lambda$processMessageBundle$1
		p	0		throwable
	m	(Ljava/util/List;)Ljava/util/concurrent/CompletableFuture;	a	processMessageBundle
		p	1		texts
	m	()V	b	leave
	m	(Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;	b	lambda$processMessageBundle$0
		p	1		text
	f	Lajo;	b	this$0
	f	Lcom/mojang/authlib/GameProfile;	c	profile
	f	Ljava/util/concurrent/Executor;	d	streamExecutor
c	ajo$e	net/minecraft/server/network/TextFilterClient$RequestFailedException
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		message
c	ajp	net/minecraft/server/network/package-info
c	ajq	net/minecraft/server/package-info
c	ajr	net/minecraft/server/packs/AbstractPackResources
	m	(Ljava/lang/String;Z)V	<init>	<init>
		p	1		name
		p	2		alwaysStable
	m	()Ljava/lang/String;	a	packId
	m	(Lakh;)Ljava/lang/Object;	a	getMetadataSection
		p	1		metaReader
	m	(Lakh;Ljava/io/InputStream;)Ljava/lang/Object;	a	getMetadataFromStream
		p	0		metaReader
		p	1		inputStream
	m	()Z	b	isBuiltin
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/lang/String;	d	name
	f	Z	e	isBuiltin
c	ajs	net/minecraft/server/packs/BuiltInMetadata
	m	(Ljava/util/Map;)V	<init>	<init>
		p	1		values
	m	()Lajs;	a	of
	m	(Lakh;)Ljava/lang/Object;	a	get
		p	1		reader
	m	(Lakh;Ljava/lang/Object;)Lajs;	a	of
		p	0		reader
		p	1		value
	m	(Lakh;Ljava/lang/Object;Lakh;Ljava/lang/Object;)Lajs;	a	of
		p	0		reader
		p	1		value
		p	2		reader2
		p	3		value2
	f	Lajs;	a	EMPTY
	f	Ljava/util/Map;	b	values
c	ajt	net/minecraft/server/packs/FeatureFlagsMetadataSection
	m	()Lcau;	a	flags
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	f	Laki;	a	TYPE
	f	Lcau;	b	flags
	f	Lcom/mojang/serialization/Codec;	c	CODEC
c	aju	net/minecraft/server/packs/FilePackResources
	m	(Ljava/lang/String;Ljava/io/File;Z)V	<init>	<init>
		p	1		name
		p	2		backingZipFile
		p	3		alwaysStable
	m	(Lajw;)Ljava/util/Set;	a	getNamespaces
		p	1		type
	m	(Lajw;Ladd;)Lakz;	a	getResource
		p	1		type
		p	2		id
	m	(Lajw;Ljava/lang/String;Ljava/lang/String;Lajv$a;)V	a	listResources
		p	1		type
		p	2		namespace
		p	3		prefix
		p	4		consumer
	m	(Ljava/lang/String;)Lakz;	a	getResource
		p	1		path
	m	([Ljava/lang/String;)Lakz;	a	getRootResource
		p	1		segments
	m	(Lajw;Ladd;)Ljava/lang/String;	b	getPathFromLocation
		p	0		type
		p	1		id
	m	()Ljava/util/zip/ZipFile;	c	getOrCreateZipFile
	f	Lcom/google/common/base/Splitter;	a	SPLITTER
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	Ljava/io/File;	e	file
	f	Ljava/util/zip/ZipFile;	f	zipFile
	f	Z	g	failedToLoad
c	ajv	net/minecraft/server/packs/PackResources
	m	()Ljava/lang/String;	a	packId
	m	(Lajw;)Ljava/util/Set;	a	getNamespaces
		p	1		type
	m	(Lajw;Ladd;)Lakz;	a	getResource
		p	1		type
		p	2		id
	m	(Lajw;Ljava/lang/String;Ljava/lang/String;Lajv$a;)V	a	listResources
		p	1		type
		p	2		namespace
		p	3		prefix
		p	4		consumer
	m	(Lakh;)Ljava/lang/Object;	a	getMetadataSection
		p	1		metaReader
	m	([Ljava/lang/String;)Lakz;	a	getRootResource
		p	1		segments
	m	()Z	b	isBuiltin
	f	Ljava/lang/String;	b	METADATA_EXTENSION
	f	Ljava/lang/String;	c	PACK_META
c	ajv$a	net/minecraft/server/packs/PackResources$ResourceOutput
c	ajw	net/minecraft/server/packs/PackType
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()Ljava/lang/String;	a	getDirectory
	m	()[Lajw;	b	$values
	f	Lajw;	a	CLIENT_RESOURCES
	f	Lajw;	b	SERVER_DATA
	f	Ljava/lang/String;	c	directory
	f	[Lajw;	d	$VALUES
c	ajx	net/minecraft/server/packs/PathPackResources
	m	(Ljava/lang/String;Ljava/nio/file/Path;Z)V	<init>	<init>
		p	1		name
		p	2		root
		p	3		alwaysStable
	m	(Ladd;Lcom/mojang/serialization/DataResult$PartialResult;)Lakz;	a	lambda$getResource$1
		p	1		result
	m	(Ladd;Ljava/nio/file/Path;)Lakz;	a	getResource
		p	0		id
		p	1		path
	m	(Lajw;)Ljava/util/Set;	a	getNamespaces
		p	1		type
	m	(Lajw;Ladd;)Lakz;	a	getResource
		p	1		type
		p	2		id
	m	(Lajw;Ljava/lang/String;Lajv$a;Ljava/util/List;)V	a	lambda$listResources$2
		p	4		prefixSegments
	m	(Lajw;Ljava/lang/String;Ljava/lang/String;Lajv$a;)V	a	listResources
		p	1		type
		p	2		namespace
		p	3		prefix
		p	4		consumer
	m	(Ljava/lang/String;Lcom/mojang/serialization/DataResult$PartialResult;)V	a	lambda$listResources$3
		p	1		result
	m	(Ljava/lang/String;Ljava/nio/file/Path;Ljava/util/List;Lajv$a;)V	a	listPath
		p	0		namespace
		p	1		path
		p	2		prefixSegments
		p	3		consumer
	m	(Ljava/nio/file/Path;)Z	a	validatePath
		p	0		path
	m	(Ljava/nio/file/Path;Ljava/lang/String;Lajv$a;Ljava/nio/file/Path;)V	a	lambda$listPath$5
		p	3		foundPath
	m	(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Z	a	lambda$listPath$4
		p	0		path2
		p	1		attributes
	m	(Ljava/nio/file/Path;Ljava/util/List;)Lakz;	a	lambda$getResource$0
		p	1		segments
	m	([Ljava/lang/String;)Lakz;	a	getRootResource
		p	1		segments
	m	(Ljava/nio/file/Path;)Lakz;	b	returnFileIfExists
		p	0		path
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lcom/google/common/base/Joiner;	d	PATH_JOINER
	f	Ljava/nio/file/Path;	e	root
c	ajy	net/minecraft/server/packs/VanillaPackResources
	m	(Lajs;Ljava/util/Set;Ljava/util/List;Ljava/util/Map;)V	<init>	<init>
		p	1		metadata
		p	2		namespaces
		p	3		rootPaths
		p	4		namespacePaths
	m	()Ljava/lang/String;	a	packId
	m	(Ladd;)Ljava/util/Optional;	a	lambda$asProvider$7
		p	1		name
	m	(Ladd;Lajw;Ljava/util/List;)Lakz;	a	lambda$getResource$4
		p	3		segments
	m	(Ladd;Lajw;Ljava/util/function/Consumer;Ljava/util/List;)V	a	lambda$listRawPaths$0
		p	4		segments
	m	(Ladd;Lcom/mojang/serialization/DataResult$PartialResult;)Lakz;	a	lambda$getResource$5
		p	1		result
	m	(Lajv$a;Ljava/lang/String;Ljava/nio/file/Path;Ljava/util/List;)V	a	getResources
		p	0		consumer
		p	1		namespace
		p	2		root
		p	3		prefixSegments
	m	(Lajw;)Ljava/util/Set;	a	getNamespaces
		p	1		type
	m	(Lajw;Ladd;)Lakz;	a	getResource
		p	1		type
		p	2		id
	m	(Lajw;Ladd;Ljava/util/function/Consumer;)V	a	listRawPaths
		p	1		type
		p	2		path
		p	3		consumer
	m	(Lajw;Lajv$a;Ljava/lang/String;Ljava/util/List;)V	a	lambda$listResources$2
		p	4		segments
	m	(Lajw;Ljava/lang/String;Ljava/lang/String;Lajv$a;)V	a	listResources
		p	1		type
		p	2		namespace
		p	3		prefix
		p	4		consumer
	m	(Lakh;)Ljava/lang/Object;	a	getMetadataSection
		p	1		metaReader
	m	(Lakz;)Lalf;	a	lambda$asProvider$6
		p	1		stream
	m	(Ljava/lang/String;Lcom/mojang/serialization/DataResult$PartialResult;)V	a	lambda$listResources$3
		p	1		result
	m	([Ljava/lang/String;)Lakz;	a	getRootResource
		p	1		segments
	m	()Z	b	isBuiltin
	m	(Ladd;Lcom/mojang/serialization/DataResult$PartialResult;)V	b	lambda$listRawPaths$1
		p	1		result
	m	()Lalk;	c	asProvider
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lajs;	d	metadata
	f	Ljava/util/Set;	e	namespaces
	f	Ljava/util/List;	f	rootPaths
	f	Ljava/util/Map;	g	pathsForType
c	ajz	net/minecraft/server/packs/VanillaPackResourcesBuilder
	m	()Lajz;	a	pushJarResources
	m	(Lajs;)Lajz;	a	setMetadata
		p	1		metadataMap
	m	(Lajw;)Ljava/util/Set;	a	lambda$pushPathForType$2
		p	0		type2
	m	(Lajw;Ljava/lang/Class;)Lajz;	a	pushClasspathResources
		p	1		type
		p	2		clazz
	m	(Lajw;Ljava/nio/file/Path;)Lajz;	a	pushAssetPath
		p	1		type
		p	2		path
	m	(Lajz;)V	a	lambda$static$0
		p	0		builder
	m	(Ljava/net/URI;)Ljava/nio/file/Path;	a	safeGetPath
		p	0		uri
	m	(Ljava/nio/file/Path;)Lajz;	a	pushUniversalPath
		p	1		root
	m	(Ljava/util/Collection;)Ljava/util/List;	a	copyAndReverse
		p	0		paths
	m	([Ljava/lang/String;)Lajz;	a	exposeNamespace
		p	1		namespaces
	m	()Lajz;	b	applyDevelopmentConfig
	m	(Lajw;Ljava/nio/file/Path;)V	b	pushPathForType
		p	1		type
		p	2		path
	m	(Ljava/nio/file/Path;)Z	b	validateDirPath
		p	1		path
	m	()Lajy;	c	build
	m	(Lajw;Ljava/nio/file/Path;)V	c	lambda$pushJarResources$3
		p	1		type
		p	2		path
	m	(Ljava/nio/file/Path;)V	c	pushRootPath
		p	1		path
	m	()Lcom/google/common/collect/ImmutableMap;	d	lambda$static$1
	f	Ljava/util/function/Consumer;	a	developmentConfig
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ljava/util/Map;	c	ROOT_DIR_BY_TYPE
	f	Ljava/util/Set;	d	rootPaths
	f	Ljava/util/Map;	e	pathsForType
	f	Lajs;	f	metadata
	f	Ljava/util/Set;	g	namespaces
c	aka	net/minecraft/server/packs/linkfs/DummyFileAttributes
	f	Ljava/nio/file/attribute/FileTime;	a	EPOCH
c	akb	net/minecraft/server/packs/linkfs/LinkFSFileStore
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		name
	f	Ljava/lang/String;	a	name
c	akc	net/minecraft/server/packs/linkfs/LinkFSPath
	m	(Lake;Ljava/lang/String;Lakc;Lakf;)V	<init>	<init>
		p	1		fileSystem
		p	2		name
		p	3		parent
		p	4		file
	m	()Lake;	a	getFileSystem
	m	(I)Lakc;	a	getName
	m	(II)Lakc;	a	subpath
	m	(Lakc;Ljava/lang/String;)Lakc;	a	createRelativePath
		p	1		path
		p	2		name
	m	(Lakf;)Z	a	isRelativeOrMissing
		p	0		file
	m	(Ljava/lang/String;)Lakc;	a	resolveName
		p	1		name
	m	(Ljava/nio/file/Path;)Lakc;	a	resolve
	m	(Ljava/util/List;)Lakc;	a	resolve
		p	1		paths
	m	([Ljava/nio/file/LinkOption;)Lakc;	a	toRealPath
	m	()Lakc;	b	getRoot
	m	(Ljava/nio/file/Path;)Lakc;	b	relativize
	m	()Lakc;	c	getFileName
	m	(Ljava/nio/file/Path;)Lakc;	c	toLinkPath
		p	1		path
	m	()Lakc;	d	getParent
	m	()Lakc;	e	normalize
	m	()Lakc;	f	toAbsolutePath
	m	()Z	g	exists
	m	()Ljava/nio/file/Path;	h	getTargetPath
	m	()Lakf$a;	i	getDirectoryContents
	m	()Ljava/nio/file/attribute/BasicFileAttributeView;	j	getBasicAttributeView
	m	()Ljava/nio/file/attribute/BasicFileAttributes;	k	getBasicAttributes
	m	()Ljava/util/List;	l	pathToRoot
	m	()Z	m	hasRealContents
	m	()Ljava/lang/String;	n	pathToString
	f	Ljava/nio/file/attribute/BasicFileAttributes;	a	DIRECTORY_ATTRIBUTES
	f	Ljava/nio/file/attribute/BasicFileAttributes;	b	FILE_ATTRIBUTES
	f	Ljava/util/Comparator;	c	PATH_COMPARATOR
	f	Ljava/lang/String;	d	name
	f	Lake;	e	fileSystem
	f	Lakc;	f	parent
	f	Ljava/util/List;	g	pathToRoot
	f	Ljava/lang/String;	h	pathString
	f	Lakf;	i	pathContents
c	akc$1	net/minecraft/server/packs/linkfs/LinkFSPath$1
c	akc$2	net/minecraft/server/packs/linkfs/LinkFSPath$2
c	akc$3	net/minecraft/server/packs/linkfs/LinkFSPath$3
	f	Lakc;	a	this$0
c	akd	net/minecraft/server/packs/linkfs/LinkFSProvider
	m	(Ljava/nio/file/Path;)Lakc;	a	toLinkPath
		p	0		path
	f	Ljava/lang/String;	a	SCHEME
c	akd$1	net/minecraft/server/packs/linkfs/LinkFSProvider$1
	m	(Lakc;)Ljava/nio/file/Path;	a	lambda$iterator$1
		p	0		child
	m	(Ljava/nio/file/DirectoryStream$Filter;Lakc;)Z	a	lambda$iterator$0
		p	1		child
	f	Lakf$a;	a	val$directoryContents
	f	Ljava/nio/file/DirectoryStream$Filter;	b	val$filter
	f	Lakd;	c	this$0
c	akd$2	net/minecraft/server/packs/linkfs/LinkFSProvider$2
	f	[I	a	$SwitchMap$java$nio$file$AccessMode
c	ake	net/minecraft/server/packs/linkfs/LinkFileSystem
	m	(Ljava/lang/String;Lake$b;)V	<init>	<init>
		p	1		name
		p	2		root
	m	()Ljava/nio/file/FileStore;	a	store
	m	(Lake$b;Lake;Ljava/lang/String;Lakc;)Lakc;	a	buildPath
		p	0		root
		p	1		fileSystem
		p	2		name
		p	3		parent
	m	(Lit/unimi/dsi/fastutil/objects/Object2ObjectOpenHashMap;Lake;Lakc;Ljava/lang/String;Lake$b;)V	a	lambda$buildPath$1
		p	3		directoryName
		p	4		directory
	m	(Lit/unimi/dsi/fastutil/objects/Object2ObjectOpenHashMap;Lake;Lakc;Ljava/lang/String;Ljava/nio/file/Path;)V	a	lambda$buildPath$0
		p	3		fileName
		p	4		path
	m	()Lakc;	b	rootPath
	m	()Lake$a;	c	builder
	f	Ljava/lang/String;	a	PATH_SEPARATOR
	f	Ljava/util/Set;	b	VIEWS
	f	Lcom/google/common/base/Splitter;	c	PATH_SPLITTER
	f	Ljava/nio/file/FileStore;	d	store
	f	Ljava/nio/file/spi/FileSystemProvider;	e	provider
	f	Lakc;	f	root
c	ake$a	net/minecraft/server/packs/linkfs/LinkFileSystem$Builder
	m	(Ljava/lang/String;)Ljava/nio/file/FileSystem;	a	build
		p	1		name
	m	(Ljava/util/List;Ljava/lang/String;Ljava/nio/file/Path;)Lake$a;	a	put
		p	1		directories
		p	2		name
		p	3		path
	m	(Ljava/util/List;Ljava/nio/file/Path;)Lake$a;	a	put
		p	1		directories
		p	2		path
	m	(Ljava/lang/String;)Lake$b;	b	lambda$put$0
		p	0		directory
	f	Lake$b;	a	root
c	ake$b	net/minecraft/server/packs/linkfs/LinkFileSystem$DirectoryEntry
	m	()Ljava/util/Map;	a	children
	m	()Ljava/util/Map;	b	files
	f	Ljava/util/Map;	a	children
	f	Ljava/util/Map;	b	files
c	akf	net/minecraft/server/packs/linkfs/PathContents
	f	Lakf;	a	MISSING
	f	Lakf;	b	RELATIVE
c	akf$1	net/minecraft/server/packs/linkfs/PathContents$1
c	akf$2	net/minecraft/server/packs/linkfs/PathContents$2
c	akf$a	net/minecraft/server/packs/linkfs/PathContents$DirectoryContents
	m	()Ljava/util/Map;	a	children
	f	Ljava/util/Map;	c	children
c	akf$b	net/minecraft/server/packs/linkfs/PathContents$FileContents
	m	()Ljava/nio/file/Path;	a	contents
	f	Ljava/nio/file/Path;	c	contents
c	akg	net/minecraft/server/packs/linkfs/package-info
c	akh	net/minecraft/server/packs/metadata/MetadataSectionSerializer
	m	()Ljava/lang/String;	a	getMetadataSectionName
	m	(Lcom/google/gson/JsonObject;)Ljava/lang/Object;	a	fromJson
		p	1		json
c	aki	net/minecraft/server/packs/metadata/MetadataSectionType
	m	(Ljava/lang/Object;)Lcom/google/gson/JsonObject;	a	toJson
		p	1		metadata
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Laki;	a	fromCodec
		p	0		key
		p	1		codec
c	aki$1	net/minecraft/server/packs/metadata/MetadataSectionType$1
	m	()Ljava/lang/String;	a	getMetadataSectionName
	m	(Lcom/google/gson/JsonObject;)Ljava/lang/Object;	a	fromJson
		p	1		json
	m	(Ljava/lang/Object;)Lcom/google/gson/JsonObject;	a	toJson
		p	1		metadata
	m	(Ljava/lang/String;)V	a	lambda$toJson$1
		p	0		error
	m	(Ljava/lang/String;)V	b	lambda$fromJson$0
		p	0		error
	f	Ljava/lang/String;	a	val$name
	f	Lcom/mojang/serialization/Codec;	b	val$codec
c	akj	net/minecraft/server/packs/metadata/pack/PackMetadataSection
	m	(Ltj;I)V	<init>	<init>
		p	1		description
		p	2		format
	m	()Ltj;	a	getDescription
	m	()I	b	getPackFormat
	f	Laki;	a	TYPE
	f	Ltj;	b	description
	f	I	c	packFormat
c	akk	net/minecraft/server/packs/metadata/pack/PackMetadataSectionSerializer
	m	()Ljava/lang/String;	a	getMetadataSectionName
	m	(Lakj;)Lcom/google/gson/JsonObject;	a	toJson
		p	1		metadata
	m	(Lcom/google/gson/JsonObject;)Ljava/lang/Object;	a	fromJson
		p	1		json
	m	(Ljava/lang/Object;)Lcom/google/gson/JsonObject;	a	toJson
		p	1		metadata
	m	(Lcom/google/gson/JsonObject;)Lakj;	b	fromJson
c	akl	net/minecraft/server/packs/metadata/pack/package-info
c	akm	net/minecraft/server/packs/metadata/package-info
c	akn	net/minecraft/server/packs/package-info
c	ako	net/minecraft/server/packs/repository/BuiltInPackSource
	m	(Lajw;Lajy;Ladd;)V	<init>	<init>
		p	1		type
		p	2		resourcePack
		p	3		id
	m	()Lajy;	a	getVanillaPack
	m	(Lajv;)Lakq;	a	createVanillaPack
		p	1		pack
	m	(Lakq$c;Ljava/lang/String;)Lakq;	a	lambda$discoverPacksInPath$2
		p	2		name
	m	(Ljava/lang/String;)Ltj;	a	getPackTitle
		p	1		id
	m	(Ljava/lang/String;Lakq$c;Ltj;)Lakq;	a	createBuiltinPack
		p	1		name
		p	2		packFactory
		p	3		displayName
	m	(Ljava/nio/file/Path;)Ljava/lang/String;	a	pathToId
		p	0		path
	m	(Ljava/nio/file/Path;Ljava/util/function/BiConsumer;)V	a	discoverPacksInPath
		p	1		namespacedPath
		p	2		consumer
	m	(Ljava/util/function/BiConsumer;)V	a	populatePackList
		p	1		consumer
	m	(Ljava/util/function/BiConsumer;Ljava/nio/file/Path;)V	a	lambda$populatePackList$1
		p	2		namespacedPath
	m	(Ljava/util/function/BiConsumer;Ljava/nio/file/Path;Lakq$c;)V	a	lambda$discoverPacksInPath$3
		p	2		profilePath
		p	3		factory
	m	(Ljava/util/function/Consumer;)V	a	loadPacks
		p	1		profileAdder
	m	(Ljava/util/function/Consumer;Ljava/lang/String;Ljava/util/function/Function;)V	a	lambda$listBundledPacks$0
		p	1		fileName
		p	2		packFactory
	m	(Ljava/util/function/Consumer;)V	b	listBundledPacks
		p	1		consumer
	f	Ljava/lang/String;	a	VANILLA_ID
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Lajw;	c	packType
	f	Lajy;	d	vanillaPack
	f	Ladd;	e	packDir
c	akp	net/minecraft/server/packs/repository/FolderRepositorySource
	m	(Ljava/nio/file/Path;Lajw;Lakt;)V	<init>	<init>
		p	1		packsDir
		p	2		type
		p	3		source
	m	(Ljava/io/File;ZLjava/lang/String;)Lajv;	a	lambda$detectPackResources$2
		p	2		name
	m	(Ljava/nio/file/Path;)Ljava/lang/String;	a	nameFromPath
		p	0		path
	m	(Ljava/nio/file/Path;Z)Lakq$c;	a	detectPackResources
		p	0		path
		p	1		alwaysStable
	m	(Ljava/nio/file/Path;ZLjava/lang/String;)Lajv;	a	lambda$detectPackResources$1
		p	2		name
	m	(Ljava/nio/file/Path;ZLjava/util/function/BiConsumer;)V	a	discoverPacks
		p	0		packsDir
		p	1		alwaysStable
		p	2		consumer
	m	(Ljava/util/function/Consumer;)V	a	loadPacks
		p	1		profileAdder
	m	(Ljava/util/function/Consumer;Ljava/nio/file/Path;Lakq$c;)V	a	lambda$loadPacks$0
		p	2		path
		p	3		packFactory
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/nio/file/Path;	b	folder
	f	Lajw;	c	packType
	f	Lakt;	d	packSource
c	akq	net/minecraft/server/packs/repository/Pack
	m	(Ljava/lang/String;ZLakq$c;Ltj;Lakq$a;Lakr;Lakq$b;ZLakt;)V	<init>	<init>
		p	1		name
		p	2		alwaysEnabled
		p	3		packFactory
		p	4		displayName
		p	5		metadata
		p	6		compatibility
		p	7		position
		p	8		pinned
		p	9		source
	m	()Ltj;	a	getTitle
	m	(Ljava/lang/String;Lakq$c;)Lakq$a;	a	readPackInfo
		p	0		name
		p	1		packFactory
	m	(Ljava/lang/String;Ltj;ZLakq$c;Lajw;Lakq$b;Lakt;)Lakq;	a	readMetaAndCreate
		p	0		name
		p	1		displayName
		p	2		alwaysEnabled
		p	3		packFactory
		p	4		type
		p	5		position
		p	6		source
	m	(Ljava/lang/String;Ltj;ZLakq$c;Lakq$a;Lajw;Lakq$b;ZLakt;)Lakq;	a	create
		p	0		name
		p	1		displayName
		p	2		alwaysEnabled
		p	3		packFactory
		p	4		metadata
		p	5		type
		p	6		position
		p	7		pinned
		p	8		source
	m	(Z)Ltj;	a	getChatLink
		p	1		enabled
	m	(ZLuf;)Luf;	a	lambda$getChatLink$0
		p	2		style
	m	()Ltj;	b	getDescription
	m	()Lakr;	c	getCompatibility
	m	()Lcau;	d	getRequestedFeatures
	m	()Lajv;	e	open
	m	()Ljava/lang/String;	f	getId
	m	()Z	g	isRequired
	m	()Z	h	isFixedPosition
	m	()Lakq$b;	i	getDefaultPosition
	m	()Lakt;	j	getPackSource
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/lang/String;	b	id
	f	Lakq$c;	c	resources
	f	Ltj;	d	title
	f	Ltj;	e	description
	f	Lakr;	f	compatibility
	f	Lcau;	g	requestedFeatures
	f	Lakq$b;	h	defaultPosition
	f	Z	i	required
	f	Z	j	fixedPosition
	f	Lakt;	k	packSource
c	akq$a	net/minecraft/server/packs/repository/Pack$Info
	m	()Ltj;	a	description
	m	(Lajw;)Lakr;	a	compatibility
		p	1		type
	m	()I	b	format
	m	()Lcau;	c	requestedFeatures
	f	Ltj;	a	description
	f	I	b	format
	f	Lcau;	c	requestedFeatures
c	akq$b	net/minecraft/server/packs/repository/Pack$Position
	m	()Lakq$b;	a	opposite
	m	(Ljava/util/List;Ljava/lang/Object;Ljava/util/function/Function;Z)I	a	insert
		p	1		items
		p	2		item
		p	3		profileGetter
		p	4		listInverted
	m	()[Lakq$b;	b	$values
	f	Lakq$b;	a	TOP
	f	Lakq$b;	b	BOTTOM
	f	[Lakq$b;	c	$VALUES
c	akq$c	net/minecraft/server/packs/repository/Pack$ResourcesSupplier
	m	(Ljava/lang/String;)Lajv;	open	open
		p	1		name
c	akr	net/minecraft/server/packs/repository/PackCompatibility
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		translationSuffix
	m	()Z	a	isCompatible
	m	(ILajw;)Lakr;	a	forFormat
		p	0		packVersion
		p	1		type
	m	()Ltj;	b	getDescription
	m	()Ltj;	c	getConfirmation
	m	()[Lakr;	d	$values
	f	Lakr;	a	TOO_OLD
	f	Lakr;	b	TOO_NEW
	f	Lakr;	c	COMPATIBLE
	f	Ltj;	d	description
	f	Ltj;	e	confirmation
	f	[Lakr;	f	$VALUES
c	aks	net/minecraft/server/packs/repository/PackRepository
	m	([Laku;)V	<init>	<init>
		p	1		providers
	m	()V	a	reload
	m	(Ljava/lang/String;)Z	a	addPack
		p	1		profile
	m	(Ljava/util/Collection;)V	a	setSelected
		p	1		enabled
	m	(Ljava/util/Map;Lakq;)V	a	lambda$discoverAvailable$0
		p	1		profile
	m	()Ljava/util/Collection;	b	getAvailableIds
	m	(Ljava/lang/String;)Z	b	removePack
		p	1		profile
	m	(Ljava/util/Collection;)Ljava/util/List;	b	rebuildSelected
		p	1		enabledNames
	m	()Ljava/util/Collection;	c	getAvailablePacks
	m	(Ljava/lang/String;)Lakq;	c	getPack
		p	1		name
	m	(Ljava/util/Collection;)Ljava/util/stream/Stream;	c	getAvailablePacks
		p	1		names
	m	()Ljava/util/Collection;	d	getSelectedIds
	m	(Ljava/lang/String;)Z	d	isAvailable
		p	1		name
	m	()Lcau;	e	getRequestedFeatureFlags
	m	()Ljava/util/Collection;	f	getSelectedPacks
	m	()Ljava/util/List;	g	openAllSelected
	m	()Ljava/util/Map;	h	discoverAvailable
	f	Ljava/util/Set;	a	sources
	f	Ljava/util/Map;	b	available
	f	Ljava/util/List;	c	selected
c	akt	net/minecraft/server/packs/repository/PackSource
	m	()Z	a	shouldAddAutomatically
	m	(Ljava/lang/String;)Ljava/util/function/UnaryOperator;	a	decorateWithSource
		p	0		translationKey
	m	(Ljava/util/function/UnaryOperator;Z)Lakt;	a	create
		p	0		sourceTextSupplier
		p	1		canBeEnabledLater
	m	(Ltj;)Ltj;	a	decorate
		p	1		packName
	m	(Ltj;Ltj;)Ltj;	a	lambda$decorateWithSource$0
		p	1		name
	f	Ljava/util/function/UnaryOperator;	a	NO_DECORATION
	f	Lakt;	b	DEFAULT
	f	Lakt;	c	BUILT_IN
	f	Lakt;	d	FEATURE
	f	Lakt;	e	WORLD
	f	Lakt;	f	SERVER
c	akt$1	net/minecraft/server/packs/repository/PackSource$1
	m	()Z	a	shouldAddAutomatically
	m	(Ltj;)Ltj;	a	decorate
		p	1		packName
	f	Ljava/util/function/UnaryOperator;	g	val$decorator
	f	Z	h	val$addAutomatically
c	aku	net/minecraft/server/packs/repository/RepositorySource
	m	(Ljava/util/function/Consumer;)V	a	loadPacks
		p	1		profileAdder
c	akv	net/minecraft/server/packs/repository/ServerPacksSource
	m	(Lajv;)Lakq;	a	createVanillaPack
		p	1		pack
	m	(Lajv;Ljava/lang/String;)Lajv;	a	lambda$createVanillaPack$0
		p	1		name
	m	(Ldye$c;)Laks;	a	createPackRepository
		p	0		session
	m	(Ljava/lang/String;)Ltj;	a	getPackTitle
		p	1		id
	m	(Ljava/lang/String;Lakq$c;Ltj;)Lakq;	a	createBuiltinPack
		p	1		name
		p	2		packFactory
		p	3		displayName
	m	(Ljava/nio/file/Path;)Laks;	a	createPackRepository
		p	0		dataPacksPath
	m	()Lajy;	b	createVanillaPackSource
	f	Lakj;	b	VERSION_METADATA_SECTION
	f	Lajt;	c	FEATURE_FLAGS_METADATA_SECTION
	f	Lajs;	d	BUILT_IN_METADATA
	f	Ltj;	e	VANILLA_NAME
	f	Ladd;	f	PACKS_DIR
c	akw	net/minecraft/server/packs/repository/package-info
c	akx	net/minecraft/server/packs/resources/CloseableResourceManager
c	aky	net/minecraft/server/packs/resources/FallbackResourceManager
	m	(Lajw;Ljava/lang/String;)V	<init>	<init>
		p	1		type
		p	2		namespace
	m	()Ljava/util/Set;	a	getNamespaces
	m	(Ladd;)Ljava/util/List;	a	getResourceStack
		p	1		id
	m	(Ladd;I)Lakz;	a	createStackMetadataFinder
		p	1		id
		p	2		index
	m	(Ladd;Lajv;Lakz;)Lakz;	a	wrapForDebug
		p	0		id
		p	1		pack
		p	2		supplier
	m	(Lajv;)V	a	push
		p	1		pack
	m	(Lajv;Ladd;)Lalj;	a	lambda$getResourceStack$1
	m	(Lajv;Ladd;Lakz;Lakz;)Lalf;	a	createResource
		p	0		pack
		p	1		id
		p	2		supplier
		p	3		metadataSupplier
	m	(Lajv;Ljava/util/function/Predicate;)V	a	push
		p	1		pack
		p	2		filter
	m	(Laky$d;)Lajv;	a	lambda$listPacks$7
		p	0		pack
	m	(Laky$d;Ljava/lang/String;Ljava/util/function/Predicate;Ljava/util/Map;)V	a	listPackResources
		p	1		pack
		p	2		startingPath
		p	3		allowedPathPredicate
		p	4		idToEntryList
	m	(Laky$d;Ljava/util/Map;)V	a	applyPackFiltersToExistingResources
		p	0		pack
		p	1		idToEntryList
	m	(Lakz;)Lakz;	a	convertToMetadata
		p	0		supplier
	m	(Lakz;Ladd;Lajv;)Ljava/io/InputStream;	a	lambda$wrapForDebug$0
	m	(Ljava/lang/String;Lajv;Ljava/util/function/Predicate;)V	a	pushInternal
		p	1		name
		p	2		underlyingPack
		p	3		filter
	m	(Ljava/lang/String;Ljava/util/function/Predicate;)V	a	pushFilterOnly
		p	1		name
		p	2		filter
	m	(Ljava/util/Map;Ljava/util/Map;Ladd;Laky$a;)V	a	lambda$listResources$3
		p	2		id
		p	3		result
	m	(Ljava/util/function/Predicate;Ljava/util/Map;Lajv;ILjava/util/Map;Ladd;Lakz;)V	a	lambda$listResources$2
		p	5		id
		p	6		supplier
	m	(Ljava/util/function/Predicate;Ljava/util/Map;Lajv;Ladd;Lakz;)V	a	lambda$listPackResources$6
		p	3		id
		p	4		supplier
	m	()Ljava/util/stream/Stream;	b	listPacks
	m	(Ladd;)Z	b	isMetadata
		p	0		id
	m	(Ladd;I)Lalj;	b	lambda$createStackMetadataFinder$4
	m	(Lakz;)Lalj;	b	parseMetadata
		p	0		supplier
	m	(Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map;	b	listResources
		p	1		startingPath
		p	2		allowedPathPredicate
	m	(Ladd;)Ladd;	c	getResourceLocationFromMetadata
		p	0		id
	m	(Lakz;)Lalj;	c	lambda$convertToMetadata$5
	m	(Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map;	c	listResourceStacks
		p	1		startingPath
		p	2		allowedPathPredicate
	m	(Ladd;)Ladd;	d	getMetadataLocation
		p	0		id
	m	(Ladd;)Ljava/util/Optional;	getResource	getResource
		p	1		id
	f	Ljava/util/List;	a	fallbacks
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Lajw;	c	type
	f	Ljava/lang/String;	d	namespace
c	aky$a	net/minecraft/server/packs/resources/FallbackResourceManager$1ResourceWithSourceAndIndex
	m	()Lajv;	a	packResources
	m	()Lakz;	b	resource
	m	()I	c	packIndex
	f	Lajv;	a	packResources
	f	Lakz;	b	resource
	f	I	c	packIndex
c	aky$b	net/minecraft/server/packs/resources/FallbackResourceManager$EntryStack
	m	(Ladd;)V	<init>	<init>
		p	1		id
	m	()Ladd;	a	fileLocation
	m	()Ladd;	b	metadataLocation
	m	()Ljava/util/List;	c	fileSources
	m	()Ljava/util/Map;	d	metaSources
	f	Ladd;	a	fileLocation
	f	Ladd;	b	metadataLocation
	f	Ljava/util/List;	c	fileSources
	f	Ljava/util/Map;	d	metaSources
c	aky$c	net/minecraft/server/packs/resources/FallbackResourceManager$LeakedResourceWarningInputStream
	m	(Ljava/io/InputStream;Ladd;Ljava/lang/String;)V	<init>	<init>
		p	1		parent
		p	2		id
		p	3		packName
	m	(Ljava/lang/Exception;Ladd;Ljava/lang/String;)Ljava/lang/String;	a	lambda$new$0
	f	Ljava/util/function/Supplier;	a	message
	f	Z	b	closed
c	aky$d	net/minecraft/server/packs/resources/FallbackResourceManager$PackEntry
	m	()Ljava/lang/String;	a	name
	m	(Ladd;)Z	a	isFiltered
		p	1		id
	m	(Ljava/util/Collection;)V	a	filterAll
		p	1		ids
	m	()Lajv;	b	resources
	m	()Ljava/util/function/Predicate;	c	filter
	f	Ljava/lang/String;	a	name
	f	Lajv;	b	resources
	f	Ljava/util/function/Predicate;	c	filter
c	aky$e	net/minecraft/server/packs/resources/FallbackResourceManager$ResourceWithSource
	m	()Lajv;	a	source
	m	()Lakz;	b	resource
	f	Lajv;	a	source
	f	Lakz;	b	resource
c	akz	net/minecraft/server/packs/resources/IoSupplier
	m	(Ljava/nio/file/Path;)Ljava/io/InputStream;	a	lambda$create$0
	m	(Ljava/util/zip/ZipFile;Ljava/util/zip/ZipEntry;)Ljava/io/InputStream;	a	lambda$create$1
	m	(Ljava/nio/file/Path;)Lakz;	create	create
		p	0		path
	m	(Ljava/util/zip/ZipFile;Ljava/util/zip/ZipEntry;)Lakz;	create	create
		p	0		zipFile
		p	1		zipEntry
c	ala	net/minecraft/server/packs/resources/MultiPackResourceManager
	m	(Lajw;Ljava/util/List;)V	<init>	<init>
		p	1		type
		p	2		packs
	m	()Ljava/util/Set;	a	getNamespaces
	m	(Ladd;)Ljava/util/List;	a	getResourceStack
		p	1		id
	m	(Lajv;)Lalg;	a	getPackFilterSection
		p	1		pack
	m	(Lajw;Lajv;)Ljava/util/stream/Stream;	a	lambda$new$0
		p	1		pack
	m	(Lalg;Ladd;)Z	a	lambda$new$1
		p	1		id
	m	(Ljava/lang/String;)V	a	checkTrailingDirectoryPath
		p	0		startingPath
	m	()Ljava/util/stream/Stream;	b	listPacks
	m	(Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map;	b	listResources
		p	1		startingPath
		p	2		allowedPathPredicate
	m	(Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map;	c	listResourceStacks
		p	1		startingPath
		p	2		allowedPathPredicate
	m	(Ladd;)Ljava/util/Optional;	getResource	getResource
		p	1		id
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/Map;	b	namespacedManagers
	f	Ljava/util/List;	c	packs
c	alb	net/minecraft/server/packs/resources/PreparableReloadListener
	m	(Lalb$a;Lalh;Lbao;Lbao;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	reload
		p	1		synchronizer
		p	2		manager
		p	3		prepareProfiler
		p	4		applyProfiler
		p	5		prepareExecutor
		p	6		applyExecutor
	m	()Ljava/lang/String;	c	getName
c	alb$a	net/minecraft/server/packs/resources/PreparableReloadListener$PreparationBarrier
	m	(Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture;	a	wait
		p	1		preparedObject
c	alc	net/minecraft/server/packs/resources/ProfiledReloadInstance
	m	(Lalh;Ljava/util/List;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
		p	1		manager
		p	2		reloaders
		p	3		prepareExecutor
		p	4		applyExecutor
		p	5		initialStage
	m	(Lalb;Lbah;Lbah;Ljava/util/concurrent/atomic/AtomicLong;Ljava/util/concurrent/atomic/AtomicLong;Ljava/lang/Void;)Lalc$a;	a	lambda$new$6
		p	5		dummy
	m	(Ljava/lang/Runnable;Ljava/util/concurrent/atomic/AtomicLong;)V	a	lambda$new$4
	m	(Ljava/util/List;)Ljava/util/List;	a	finish
		p	1		summaries
	m	(Ljava/util/concurrent/Executor;Lalb$a;Lalh;Lalb;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	lambda$new$7
		p	1		synchronizer
		p	2		resourceManager
		p	3		reloader
		p	4		prepare
		p	5		apply
	m	(Ljava/util/concurrent/Executor;Ljava/util/concurrent/atomic/AtomicLong;Ljava/lang/Runnable;)V	a	lambda$new$5
		p	2		application
	m	(Ljava/lang/Runnable;Ljava/util/concurrent/atomic/AtomicLong;)V	b	lambda$new$2
	m	(Ljava/util/concurrent/Executor;Ljava/util/concurrent/atomic/AtomicLong;Ljava/lang/Runnable;)V	b	lambda$new$3
		p	2		preparation
	m	()I	e	lambda$new$1
	m	()I	f	lambda$new$0
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	Lcom/google/common/base/Stopwatch;	d	total
c	alc$a	net/minecraft/server/packs/resources/ProfiledReloadInstance$State
	m	(Ljava/lang/String;Lban;Lban;Ljava/util/concurrent/atomic/AtomicLong;Ljava/util/concurrent/atomic/AtomicLong;)V	<init>	<init>
		p	1		name
		p	2		prepareProfile
		p	3		applyProfile
		p	4		prepareTimeMs
		p	5		applyTimeMs
	f	Ljava/lang/String;	a	name
	f	Lban;	b	preparationResult
	f	Lban;	c	reloadResult
	f	Ljava/util/concurrent/atomic/AtomicLong;	d	preparationNanos
	f	Ljava/util/concurrent/atomic/AtomicLong;	e	reloadNanos
c	ald	net/minecraft/server/packs/resources/ReloadInstance
	m	()Ljava/util/concurrent/CompletableFuture;	a	done
	m	()F	b	getActualProgress
	m	()Z	c	isDone
	m	()V	d	checkExceptions
c	ale	net/minecraft/server/packs/resources/ReloadableResourceManager
	m	(Lajw;)V	<init>	<init>
		p	1		type
	m	()Ljava/util/Set;	a	getNamespaces
	m	(Ladd;)Ljava/util/List;	a	getResourceStack
		p	1		id
	m	(Lalb;)V	a	registerReloadListener
		p	1		reloader
	m	(Ljava/util/List;)Ljava/lang/Object;	a	lambda$createReload$0
	m	(Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/CompletableFuture;Ljava/util/List;)Lald;	a	createReload
		p	1		prepareExecutor
		p	2		applyExecutor
		p	3		initialStage
		p	4		packs
	m	()Ljava/util/stream/Stream;	b	listPacks
	m	(Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map;	b	listResources
		p	1		startingPath
		p	2		allowedPathPredicate
	m	(Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map;	c	listResourceStacks
		p	1		startingPath
		p	2		allowedPathPredicate
	m	(Ladd;)Ljava/util/Optional;	getResource	getResource
		p	1		id
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lakx;	b	resources
	f	Ljava/util/List;	c	listeners
	f	Lajw;	d	type
c	alf	net/minecraft/server/packs/resources/Resource
	m	(Lajv;Lakz;)V	<init>	<init>
		p	1		pack
		p	2		inputSupplier
	m	(Lajv;Lakz;Lakz;)V	<init>	<init>
		p	1		pack
		p	2		inputSupplier
		p	3		metadataSupplier
	m	()Lajv;	a	source
	m	()Ljava/lang/String;	b	sourcePackId
	m	()Z	c	isBuiltin
	m	()Ljava/io/InputStream;	d	open
	m	()Ljava/io/BufferedReader;	e	openAsReader
	m	()Lalj;	f	metadata
	f	Lajv;	a	source
	f	Lakz;	b	streamSupplier
	f	Lakz;	c	metadataSupplier
	f	Lalj;	d	cachedMetadata
c	alg	net/minecraft/server/packs/resources/ResourceFilterSection
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		blocks
	m	(Lalg;)Ljava/util/List;	a	lambda$static$0
		p	0		filter
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Ljava/lang/String;)Z	a	isNamespaceFiltered
		p	1		namespace
	m	(Ljava/lang/String;Lapp;)Z	a	lambda$isPathFiltered$3
		p	1		block
	m	(Ljava/lang/String;)Z	b	isPathFiltered
		p	1		namespace
	m	(Ljava/lang/String;Lapp;)Z	b	lambda$isNamespaceFiltered$2
		p	1		block
	f	Laki;	a	TYPE
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Ljava/util/List;	c	blockList
c	alh	net/minecraft/server/packs/resources/ResourceManager
	m	()Ljava/util/Set;	a	getNamespaces
	m	(Ladd;)Ljava/util/List;	a	getResourceStack
		p	1		id
	m	()Ljava/util/stream/Stream;	b	listPacks
	m	(Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map;	b	listResources
		p	1		startingPath
		p	2		allowedPathPredicate
	m	(Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map;	c	listResourceStacks
		p	1		startingPath
		p	2		allowedPathPredicate
c	alh$a	net/minecraft/server/packs/resources/ResourceManager$Empty
	m	()Ljava/util/Set;	a	getNamespaces
	m	(Ladd;)Ljava/util/List;	a	getResourceStack
		p	1		id
	m	()Ljava/util/stream/Stream;	b	listPacks
	m	(Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map;	b	listResources
		p	1		startingPath
		p	2		allowedPathPredicate
	m	()[Lalh$a;	c	$values
	m	(Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map;	c	listResourceStacks
		p	1		startingPath
		p	2		allowedPathPredicate
	m	(Ladd;)Ljava/util/Optional;	getResource	getResource
		p	1		id
	f	Lalh$a;	a	INSTANCE
	f	[Lalh$a;	b	$VALUES
c	ali	net/minecraft/server/packs/resources/ResourceManagerReloadListener
	m	(Lalb$a;Lalh;Lbao;Lbao;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	reload
		p	1		synchronizer
		p	2		manager
		p	3		prepareProfiler
		p	4		applyProfiler
		p	5		prepareExecutor
		p	6		applyExecutor
	m	(Lalh;)V	a	onResourceManagerReload
		p	1		manager
	m	(Lbao;Lalh;)V	a	lambda$reload$0
c	alj	net/minecraft/server/packs/resources/ResourceMetadata
	m	()Lalj;	a	lambda$static$0
	m	(Lakh;)Ljava/util/Optional;	a	getSection
		p	1		reader
	m	(Ljava/io/InputStream;)Lalj;	a	fromJsonStream
		p	0		stream
	f	Lalj;	a	EMPTY
	f	Lakz;	b	EMPTY_SUPPLIER
c	alj$1	net/minecraft/server/packs/resources/ResourceMetadata$1
	m	(Lakh;)Ljava/util/Optional;	a	getSection
		p	1		reader
c	alj$2	net/minecraft/server/packs/resources/ResourceMetadata$2
	m	(Lakh;)Ljava/util/Optional;	a	getSection
		p	1		reader
	f	Lcom/google/gson/JsonObject;	c	val$metadata
c	alk	net/minecraft/server/packs/resources/ResourceProvider
	m	(Ljava/util/Map;Ladd;)Ljava/util/Optional;	a	lambda$fromMap$1
		p	1		id
	m	(Ladd;)Ljava/io/FileNotFoundException;	b	lambda$getResourceOrThrow$0
	m	(Ljava/util/Map;)Lalk;	fromMap	fromMap
		p	0		map
	m	(Ladd;)Ljava/util/Optional;	getResource	getResource
		p	1		id
	m	(Ladd;)Lalf;	getResourceOrThrow	getResourceOrThrow
		p	1		id
	m	(Ladd;)Ljava/io/InputStream;	open	open
		p	1		id
	m	(Ladd;)Ljava/io/BufferedReader;	openAsReader	openAsReader
		p	1		id
c	all	net/minecraft/server/packs/resources/SimpleJsonResourceReloadListener
	m	(Lcom/google/gson/Gson;Ljava/lang/String;)V	<init>	<init>
		p	1		gson
		p	2		dataType
	m	(Lalh;Lbao;)Ljava/util/Map;	a	prepare
	m	(Lalh;Lbao;)Ljava/lang/Object;	b	prepare
		p	1		manager
		p	2		profiler
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lcom/google/gson/Gson;	b	gson
	f	Ljava/lang/String;	c	directory
c	alm	net/minecraft/server/packs/resources/SimplePreparableReloadListener
	m	(Lalb$a;Lalh;Lbao;Lbao;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	reload
		p	1		synchronizer
		p	2		manager
		p	3		prepareProfiler
		p	4		applyProfiler
		p	5		prepareExecutor
		p	6		applyExecutor
	m	(Lalh;Lbao;)Ljava/lang/Object;	a	lambda$reload$0
	m	(Lalh;Lbao;Ljava/lang/Object;)V	a	lambda$reload$1
		p	3		prepared
	m	(Ljava/lang/Object;Lalh;Lbao;)V	a	apply
		p	1		prepared
		p	2		manager
		p	3		profiler
	m	(Lalh;Lbao;)Ljava/lang/Object;	b	prepare
		p	1		manager
		p	2		profiler
c	aln	net/minecraft/server/packs/resources/SimpleReloadInstance
	m	(Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Lalh;Ljava/util/List;Laln$a;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
		p	1		prepareExecutor
		p	2		applyExecutor
		p	3		manager
		p	4		reloaders
		p	5		factory
		p	6		initialStage
	m	()Ljava/util/concurrent/CompletableFuture;	a	done
	m	(Lalh;Ljava/util/List;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/CompletableFuture;)Laln;	a	of
		p	0		manager
		p	1		reloaders
		p	2		prepareExecutor
		p	3		applyExecutor
		p	4		initialStage
	m	(Lalh;Ljava/util/List;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/CompletableFuture;Z)Lald;	a	create
		p	0		manager
		p	1		reloaders
		p	2		prepareExecutor
		p	3		applyExecutor
		p	4		initialStage
		p	5		profiled
	m	(Ljava/lang/Runnable;)V	a	lambda$new$3
	m	(Ljava/util/concurrent/Executor;Lalb$a;Lalh;Lalb;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	lambda$of$0
		p	1		synchronizer
		p	2		resourceManager
		p	3		reloader
		p	4		prepare
		p	5		apply
	m	(Ljava/util/concurrent/Executor;Ljava/lang/Runnable;)V	a	lambda$new$4
		p	2		application
	m	()F	b	getActualProgress
	m	(Ljava/lang/Runnable;)V	b	lambda$new$1
	m	(Ljava/util/concurrent/Executor;Ljava/lang/Runnable;)V	b	lambda$new$2
		p	2		preparation
	f	Ljava/util/concurrent/CompletableFuture;	a	allPreparations
	f	Ljava/util/concurrent/CompletableFuture;	b	allDone
	f	I	c	PREPARATION_PROGRESS_WEIGHT
	f	I	d	EXTRA_RELOAD_PROGRESS_WEIGHT
	f	I	e	LISTENER_PROGRESS_WEIGHT
	f	Ljava/util/Set;	f	preparingListeners
	f	I	g	listenerCount
	f	I	h	startedReloads
	f	I	i	finishedReloads
	f	Ljava/util/concurrent/atomic/AtomicInteger;	j	startedTaskCounter
	f	Ljava/util/concurrent/atomic/AtomicInteger;	k	doneTaskCounter
c	aln$1	net/minecraft/server/packs/resources/SimpleReloadInstance$1
	m	(Lalb;)V	a	lambda$wait$0
	m	(Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture;	a	wait
		p	1		preparedObject
	m	(Ljava/lang/Object;Laqi;Ljava/lang/Object;)Ljava/lang/Object;	a	lambda$wait$1
	f	Ljava/util/concurrent/Executor;	a	val$mainThreadExecutor
	f	Lalb;	b	val$listener
	f	Ljava/util/concurrent/CompletableFuture;	c	val$previousTask
	f	Laln;	d	this$0
c	aln$a	net/minecraft/server/packs/resources/SimpleReloadInstance$StateFactory
	m	(Lalb$a;Lalh;Lalb;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	create	create
		p	1		synchronizer
		p	2		manager
		p	3		reloader
		p	4		prepareExecutor
		p	5		applyExecutor
c	alo	net/minecraft/server/packs/resources/package-info
c	alp	net/minecraft/server/players/BanListEntry
	m	(Ljava/lang/Object;Lcom/google/gson/JsonObject;)V	<init>	<init>
		p	1		key
		p	2		json
	m	(Ljava/lang/Object;Ljava/util/Date;Ljava/lang/String;Ljava/util/Date;Ljava/lang/String;)V	<init>	<init>
		p	1		key
		p	2		creationDate
		p	3		source
		p	4		expiryDate
		p	5		reason
	m	()Ljava/util/Date;	a	getCreated
	m	(Lcom/google/gson/JsonObject;)V	a	serialize
		p	1		json
	m	()Ljava/lang/String;	b	getSource
	m	()Ljava/util/Date;	c	getExpires
	m	()Ljava/lang/String;	d	getReason
	m	()Ltj;	e	getDisplayName
	m	()Z	f	hasExpired
	f	Ljava/text/SimpleDateFormat;	a	DATE_FORMAT
	f	Ljava/lang/String;	b	EXPIRES_NEVER
	f	Ljava/util/Date;	c	created
	f	Ljava/lang/String;	d	source
	f	Ljava/util/Date;	e	expires
	f	Ljava/lang/String;	f	reason
c	alq	net/minecraft/server/players/GameProfileCache
	m	(Lcom/mojang/authlib/GameProfileRepository;Ljava/io/File;)V	<init>	<init>
		p	1		profileRepository
		p	2		cacheFile
	m	()V	a	clearExecutor
	m	(I)Ljava/util/stream/Stream;	a	getTopMRUProfiles
		p	1		limit
	m	(Lalq$a;)V	a	safeAdd
		p	1		entry
	m	(Lalq$a;Ljava/text/DateFormat;)Lcom/google/gson/JsonElement;	a	writeGameProfile
		p	0		entry
		p	1		dateFormat
	m	(Lcom/google/gson/JsonArray;Ljava/text/DateFormat;Lalq$a;)V	a	lambda$save$5
		p	2		entry
	m	(Lcom/google/gson/JsonElement;Ljava/text/DateFormat;)Ljava/util/Optional;	a	readGameProfile
		p	0		json
		p	1		dateFormat
	m	(Lcom/mojang/authlib/GameProfile;)V	a	add
		p	1		profile
	m	(Lcom/mojang/authlib/GameProfileRepository;Ljava/lang/String;)Ljava/util/Optional;	a	lookupGameProfile
		p	0		repository
		p	1		name
	m	(Ljava/lang/String;)Ljava/util/Optional;	a	get
		p	1		name
	m	(Ljava/lang/String;Ljava/util/Optional;Ljava/lang/Throwable;)V	a	lambda$getAsync$2
		p	2		profile
		p	3		throwable
	m	(Ljava/lang/String;Ljava/util/function/Consumer;)V	a	getAsync
		p	1		username
		p	2		consumer
	m	(Ljava/text/DateFormat;Ljava/util/List;Lcom/google/gson/JsonElement;)V	a	lambda$load$4
		p	2		json
	m	(Ljava/util/UUID;)Ljava/util/Optional;	a	get
		p	1		uuid
	m	(Ljava/util/concurrent/Executor;)V	a	setExecutor
		p	1		executor
	m	(Ljava/util/function/Consumer;Ljava/util/Optional;Ljava/lang/Throwable;)V	a	lambda$getAsync$3
		p	1		profile
		p	2		throwable
	m	(Z)V	a	setUsesAuthentication
		p	0		value
	m	()Ljava/util/List;	b	load
	m	(Ljava/lang/String;)Ljava/util/Optional;	b	lambda$getAsync$1
	m	(Ljava/util/function/Consumer;Ljava/util/Optional;Ljava/lang/Throwable;)V	b	lambda$getAsync$0
		p	1		profile
		p	2		throwable
	m	()V	c	save
	m	()Z	d	usesAuthentication
	m	()J	e	getNextOperation
	m	()Ljava/text/DateFormat;	f	createDateFormat
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	I	b	GAMEPROFILES_MRU_LIMIT
	f	I	c	GAMEPROFILES_EXPIRATION_MONTHS
	f	Z	d	usesAuthentication
	f	Ljava/util/Map;	e	profilesByName
	f	Ljava/util/Map;	f	profilesByUUID
	f	Ljava/util/Map;	g	requests
	f	Lcom/mojang/authlib/GameProfileRepository;	h	profileRepository
	f	Lcom/google/gson/Gson;	i	gson
	f	Ljava/io/File;	j	file
	f	Ljava/util/concurrent/atomic/AtomicLong;	k	operationCount
	f	Ljava/util/concurrent/Executor;	l	executor
c	alq$1	net/minecraft/server/players/GameProfileCache$1
	f	Ljava/util/concurrent/atomic/AtomicReference;	a	val$result
c	alq$a	net/minecraft/server/players/GameProfileCache$GameProfileInfo
	m	(Lcom/mojang/authlib/GameProfile;Ljava/util/Date;)V	<init>	<init>
		p	1		profile
		p	2		expirationDate
	m	()Lcom/mojang/authlib/GameProfile;	a	getProfile
	m	(J)V	a	setLastAccess
		p	1		lastAccessed
	m	()Ljava/util/Date;	b	getExpirationDate
	m	()J	c	getLastAccess
	f	Lcom/mojang/authlib/GameProfile;	a	profile
	f	Ljava/util/Date;	b	expirationDate
	f	J	c	lastAccess
c	alr	net/minecraft/server/players/IpBanList
	m	(Ljava/io/File;)V	<init>	<init>
		p	1		file
	m	(Lcom/google/gson/JsonObject;)Laly;	a	createEntry
		p	1		json
	m	(Ljava/lang/String;)Z	a	isBanned
		p	1		ip
	m	(Ljava/net/SocketAddress;)Z	a	isBanned
		p	1		ip
	m	(Ljava/net/SocketAddress;)Lals;	b	get
		p	1		address
	m	(Ljava/net/SocketAddress;)Ljava/lang/String;	c	getIpFromAddress
		p	1		address
c	als	net/minecraft/server/players/IpBanListEntry
	m	(Lcom/google/gson/JsonObject;)V	<init>	<init>
		p	1		json
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		ip
	m	(Ljava/lang/String;Ljava/util/Date;Ljava/lang/String;Ljava/util/Date;Ljava/lang/String;)V	<init>	<init>
		p	1		ip
		p	2		created
		p	3		source
		p	4		expiry
		p	5		reason
	m	(Lcom/google/gson/JsonObject;)V	a	serialize
		p	1		json
	m	(Lcom/google/gson/JsonObject;)Ljava/lang/String;	b	createIpInfo
		p	0		json
	m	()Ltj;	e	getDisplayName
c	alt	net/minecraft/server/players/OldUsersConverter
	m	()Z	a	areOldUserlistsRemoved
	m	(I)[Ljava/lang/String;	a	lambda$lookupPlayers$1
	m	(Lahq;)Z	a	convertPlayers
		p	0		minecraftServer
	m	(Ljava/io/File;)V	a	ensureDirectoryExists
		p	0		directory
	m	(Ljava/io/File;Ljava/util/Map;)Ljava/util/List;	a	readOldListFormat
		p	0		file
		p	1		valueMap
	m	(Ljava/lang/String;)Z	a	lambda$lookupPlayers$0
		p	0		playerName
	m	(Ljava/lang/String;Ljava/util/Date;)Ljava/util/Date;	a	parseDate
		p	0		dateString
		p	1		fallback
	m	(Lnet/minecraft/server/MinecraftServer;)Z	a	convertUserBanlist
		p	0		server
	m	(Lnet/minecraft/server/MinecraftServer;Ljava/lang/String;)Ljava/util/UUID;	a	convertMobOwnerIfNecessary
		p	0		server
		p	1		name
	m	(Lnet/minecraft/server/MinecraftServer;Ljava/util/Collection;Lcom/mojang/authlib/ProfileLookupCallback;)V	a	lookupPlayers
		p	0		server
		p	1		bannedPlayers
		p	2		callback
	m	(Ljava/io/File;)V	b	renameOldFile
		p	0		file
	m	(Lnet/minecraft/server/MinecraftServer;)Z	b	convertIpBanlist
		p	0		server
	m	(Lnet/minecraft/server/MinecraftServer;)Z	c	convertOpsList
		p	0		server
	m	(Lnet/minecraft/server/MinecraftServer;)Z	d	convertWhiteList
		p	0		server
	m	(Lnet/minecraft/server/MinecraftServer;)Z	e	serverReadyAfterUserconversion
		p	0		server
	m	(Lnet/minecraft/server/MinecraftServer;)Z	f	areOldPlayersConverted
		p	0		server
	m	(Lnet/minecraft/server/MinecraftServer;)Ljava/io/File;	g	getWorldPlayersDirectory
		p	0		server
	f	Ljava/io/File;	a	OLD_IPBANLIST
	f	Ljava/io/File;	b	OLD_USERBANLIST
	f	Ljava/io/File;	c	OLD_OPLIST
	f	Ljava/io/File;	d	OLD_WHITELIST
	f	Lorg/slf4j/Logger;	e	LOGGER
c	alt$1	net/minecraft/server/players/OldUsersConverter$1
	f	Lnet/minecraft/server/MinecraftServer;	a	val$server
	f	Ljava/util/Map;	b	val$userMap
	f	Lama;	c	val$bans
c	alt$2	net/minecraft/server/players/OldUsersConverter$2
	f	Lnet/minecraft/server/MinecraftServer;	a	val$server
	f	Lalv;	b	val$opsList
c	alt$3	net/minecraft/server/players/OldUsersConverter$3
	f	Lnet/minecraft/server/MinecraftServer;	a	val$server
	f	Lamc;	b	val$whitelist
c	alt$4	net/minecraft/server/players/OldUsersConverter$4
	f	Lnet/minecraft/server/MinecraftServer;	a	val$server
	f	Ljava/util/List;	b	val$profiles
c	alt$5	net/minecraft/server/players/OldUsersConverter$5
	m	(Lcom/mojang/authlib/GameProfile;)Ljava/lang/String;	a	getFileNameForProfile
		p	1		profile
	m	(Ljava/io/File;Ljava/lang/String;Ljava/lang/String;)V	a	movePlayerFile
		p	1		playerDataFolder
		p	2		fileName
		p	3		uuid
	f	Lahq;	a	val$server
	f	Ljava/io/File;	b	val$worldNewPlayerDirectory
	f	Ljava/io/File;	c	val$unknownPlayerDirectory
	f	Ljava/io/File;	d	val$worldPlayerDirectory
	f	[Ljava/lang/String;	e	val$names
c	alt$a	net/minecraft/server/players/OldUsersConverter$ConversionError
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		message
	m	(Ljava/lang/String;Ljava/lang/Throwable;)V	<init>	<init>
		p	1		message
		p	2		cause
c	alu	net/minecraft/server/players/PlayerList
	m	(Lnet/minecraft/server/MinecraftServer;Lhk;Ldyh;I)V	<init>	<init>
		p	1		server
		p	2		registryManager
		p	3		saveHandler
		p	4		maxPlayers
	m	()V	a	reloadWhiteList
	m	(I)V	a	setViewDistance
		p	1		viewDistance
	m	(Ladt;Laiq;)V	a	updateEntireScoreboard
		p	1		scoreboard
		p	2		player
	m	(Laip;)V	a	addWorldborderListener
		p	1		world
	m	(Laip;Lbfh;)Lbfh;	a	lambda$placeNewPlayer$1
		p	1		vehicle
	m	(Laiq;)Lre;	a	load
		p	1		player
	m	(Laiq;I)V	a	sendPlayerPermissionLevel
		p	1		player
		p	2		permissionLevel
	m	(Laiq;Laip;)V	a	sendLevelInfo
		p	1		player
		p	2		world
	m	(Laiq;Lnet/minecraft/server/MinecraftServer$b;)V	a	lambda$placeNewPlayer$0
		p	1		properties
	m	(Laiq;Z)Laiq;	a	respawn
		p	1		player
		p	2		alive
	m	(Lbfh;)V	a	lambda$remove$2
		p	0		entity
	m	(Lbym;)Lamx;	a	getPlayerStats
		p	1		player
	m	(Lbym;DDDDLadc;Lvb;)V	a	broadcast
		p	1		player
		p	2		x
		p	4		y
		p	6		z
		p	8		distance
		p	10		worldKey
		p	11		packet
	m	(Lbym;Ltj;)V	a	broadcastSystemToTeam
		p	1		source
		p	2		message
	m	(Lcom/mojang/authlib/GameProfile;)V	a	op
		p	1		profile
	m	(Ljava/lang/String;)Laiq;	a	getPlayerByName
		p	1		name
	m	(Ljava/net/SocketAddress;Lcom/mojang/authlib/GameProfile;)Ltj;	a	canPlayerLogin
		p	1		address
		p	2		profile
	m	(Ljava/util/UUID;)Laiq;	a	getPlayer
		p	1		uuid
	m	(Lsq;Laiq;)V	a	placeNewPlayer
		p	1		connection
		p	2		player
	m	(Ltj;Laiq;)Ltj;	a	lambda$broadcastSystemMessage$3
		p	1		player
	m	(Ltj;Ljava/util/function/Function;Z)V	a	broadcastSystemMessage
		p	1		message
		p	2		playerMessageFactory
		p	3		overlay
	m	(Ltj;Z)V	a	broadcastSystemMessage
		p	1		message
		p	2		overlay
	m	(Lty;)Z	a	verifyChatTrusted
		p	1		message
	m	(Lty;Laiq;Ltf$a;)V	a	broadcastChatMessage
		p	1		message
		p	2		sender
		p	3		params
	m	(Lty;Ldr;Ltf$a;)V	a	broadcastChatMessage
		p	1		message
		p	2		source
		p	3		params
	m	(Lty;Ljava/util/function/Predicate;Laiq;Ltf$a;)V	a	broadcastChatMessage
		p	1		message
		p	2		shouldSendFiltered
		p	3		sender
		p	4		params
	m	(Lvb;)V	a	broadcastAll
		p	1		packet
	m	(Lvb;Ladc;)V	a	broadcastAll
		p	1		packet
		p	2		dimension
	m	(Z)V	a	setUsingWhiteList
		p	1		whitelistEnabled
	m	(I)V	b	setSimulationDistance
		p	1		simulationDistance
	m	(Laiq;)V	b	save
		p	1		player
	m	(Lbym;Ltj;)V	b	broadcastSystemToAllExceptTeam
		p	1		source
		p	2		message
	m	(Lcom/mojang/authlib/GameProfile;)V	b	deop
		p	1		profile
	m	(Ljava/lang/String;)Ljava/util/List;	b	getPlayersWithAddress
		p	1		ip
	m	(Z)V	b	setAllowCheatsForAllPlayers
		p	1		cheatsAllowed
	m	()Lnet/minecraft/server/MinecraftServer;	c	getServer
	m	(Laiq;)V	c	remove
		p	1		player
	m	(Lcom/mojang/authlib/GameProfile;)Z	c	isWhiteListed
		p	1		profile
	m	()V	d	tick
	m	(Laiq;)V	d	sendPlayerPermissionLevel
		p	1		player
	m	(Lcom/mojang/authlib/GameProfile;)Z	d	canBypassPlayerLimit
		p	1		profile
	m	()[Ljava/lang/String;	e	getPlayerNamesArray
	m	(Laiq;)V	e	sendAllPlayerInfo
		p	1		player
	m	(Lcom/mojang/authlib/GameProfile;)Laiq;	e	getPlayerForLogin
		p	1		profile
	m	()Lama;	f	getBans
	m	(Laiq;)Ladl;	f	getPlayerAdvancements
		p	1		player
	m	(Lcom/mojang/authlib/GameProfile;)Z	f	isOp
		p	1		profile
	m	()Lalr;	g	getIpBans
	m	()V	h	saveAll
	m	()Lamc;	i	getWhiteList
	m	()[Ljava/lang/String;	j	getWhiteListNames
	m	()Lalv;	k	getOps
	m	()[Ljava/lang/String;	l	getOpNames
	m	()I	m	getPlayerCount
	m	()I	n	getMaxPlayers
	m	()Z	o	isUsingWhitelist
	m	()I	p	getViewDistance
	m	()I	q	getSimulationDistance
	m	()Lre;	r	getSingleplayerData
	m	()V	s	removeAll
	m	()Ljava/util/List;	t	getPlayers
	m	()V	u	reloadResources
	m	()Z	v	isAllowCheatsForAllPlayers
	f	I	A	sendAllPlayerInfoIn
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/io/File;	b	USERBANLIST_FILE
	f	Ljava/io/File;	c	IPBANLIST_FILE
	f	Ljava/io/File;	d	OPLIST_FILE
	f	Ljava/io/File;	e	WHITELIST_FILE
	f	Ltj;	f	CHAT_FILTERED_FULL
	f	I	g	maxPlayers
	f	I	h	SEND_PLAYER_INFO_INTERVAL
	f	Ljava/text/SimpleDateFormat;	i	BAN_DATE_FORMAT
	f	Lnet/minecraft/server/MinecraftServer;	j	server
	f	Ljava/util/List;	k	players
	f	Ljava/util/Map;	l	playersByUUID
	f	Lama;	m	bans
	f	Lalr;	n	ipBans
	f	Lalv;	o	ops
	f	Lamc;	p	whitelist
	f	Ljava/util/Map;	q	stats
	f	Ljava/util/Map;	r	advancements
	f	Ldyh;	s	playerIo
	f	Z	t	doWhiteList
	f	Lhk;	u	registries
	f	Lhr$b;	v	synchronizedRegistries
	f	I	w	viewDistance
	f	I	x	simulationDistance
	f	Z	y	allowCheatsForAllPlayers
	f	Z	z	ALLOW_LOGOUTIVATOR
c	alu$1	net/minecraft/server/players/PlayerList$1
	m	(Lddi;D)V	a	onBorderSizeSet
		p	1		border
		p	2		size
	m	(Lddi;DD)V	a	onBorderCenterSet
		p	1		border
		p	2		centerX
		p	4		centerZ
	m	(Lddi;DDJ)V	a	onBorderSizeLerping
		p	1		border
		p	2		fromSize
		p	4		toSize
		p	6		time
	m	(Lddi;I)V	a	onBorderSetWarningTime
		p	1		border
		p	2		warningTime
	m	(Lddi;D)V	b	onBorderSetDamagePerBlock
		p	1		border
		p	2		damagePerBlock
	m	(Lddi;I)V	b	onBorderSetWarningBlocks
		p	1		border
		p	2		warningBlockDistance
	m	(Lddi;D)V	c	onBorderSetDamageSafeZOne
		p	1		border
		p	2		safeZoneRadius
	f	Lalu;	a	this$0
c	alv	net/minecraft/server/players/ServerOpList
	m	(Ljava/io/File;)V	<init>	<init>
		p	1		file
	m	()[Ljava/lang/String;	a	getUserList
	m	(I)[Ljava/lang/String;	a	lambda$getUserList$0
	m	(Lcom/google/gson/JsonObject;)Laly;	a	createEntry
		p	1		json
	m	(Lcom/mojang/authlib/GameProfile;)Z	a	canBypassPlayerLimit
		p	1		profile
	m	(Ljava/lang/Object;)Ljava/lang/String;	a	getKeyForUser
		p	1		profile
	m	(Lcom/mojang/authlib/GameProfile;)Ljava/lang/String;	b	getKeyForUser
c	alw	net/minecraft/server/players/ServerOpListEntry
	m	(Lcom/google/gson/JsonObject;)V	<init>	<init>
		p	1		json
	m	(Lcom/mojang/authlib/GameProfile;IZ)V	<init>	<init>
		p	1		profile
		p	2		permissionLevel
		p	3		bypassPlayerLimit
	m	()I	a	getLevel
	m	(Lcom/google/gson/JsonObject;)V	a	serialize
		p	1		json
	m	()Z	b	getBypassesPlayerLimit
	m	(Lcom/google/gson/JsonObject;)Lcom/mojang/authlib/GameProfile;	b	createGameProfile
		p	0		json
	f	I	a	level
	f	Z	b	bypassesPlayerLimit
c	alx	net/minecraft/server/players/SleepStatus
	m	()V	a	removeAllSleepers
	m	(I)Z	a	areEnoughSleeping
		p	1		percentage
	m	(ILjava/util/List;)Z	a	areEnoughDeepSleeping
		p	1		percentage
		p	2		players
	m	(Ljava/util/List;)Z	a	update
		p	1		players
	m	()I	b	amountSleeping
	m	(I)I	b	sleepersNeeded
		p	1		percentage
	f	I	a	activePlayers
	f	I	b	sleepingPlayers
c	aly	net/minecraft/server/players/StoredUserEntry
	m	(Ljava/lang/Object;)V	<init>	<init>
		p	1		key
	m	(Lcom/google/gson/JsonObject;)V	a	serialize
		p	1		json
	m	()Z	f	hasExpired
	m	()Ljava/lang/Object;	g	getUser
	f	Ljava/lang/Object;	a	user
c	alz	net/minecraft/server/players/StoredUserList
	m	(Ljava/io/File;)V	<init>	<init>
		p	1		file
	m	()[Ljava/lang/String;	a	getUserList
	m	(Laly;)V	a	add
		p	1		entry
	m	(Lcom/google/gson/JsonObject;)Laly;	a	createEntry
		p	1		json
	m	(Ljava/lang/Object;)Ljava/lang/String;	a	getKeyForUser
		p	1		profile
	m	()Ljava/io/File;	b	getFile
	m	(Laly;)V	b	remove
		p	1		entry
	m	(Ljava/lang/Object;)Laly;	b	get
		p	1		key
	m	()Z	c	isEmpty
	m	(Laly;)Lcom/google/gson/JsonObject;	c	lambda$save$0
		p	0		entry
	m	(Ljava/lang/Object;)V	c	remove
		p	1		key
	m	()Ljava/util/Collection;	d	getEntries
	m	(Ljava/lang/Object;)Z	d	contains
	m	()V	e	save
	m	()V	f	load
	m	()V	g	removeExpired
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lcom/google/gson/Gson;	b	GSON
	f	Ljava/io/File;	c	file
	f	Ljava/util/Map;	d	map
c	ama	net/minecraft/server/players/UserBanList
	m	(Ljava/io/File;)V	<init>	<init>
		p	1		file
	m	()[Ljava/lang/String;	a	getUserList
	m	(I)[Ljava/lang/String;	a	lambda$getUserList$0
	m	(Lcom/google/gson/JsonObject;)Laly;	a	createEntry
		p	1		json
	m	(Lcom/mojang/authlib/GameProfile;)Z	a	isBanned
		p	1		profile
	m	(Ljava/lang/Object;)Ljava/lang/String;	a	getKeyForUser
		p	1		profile
	m	(Lcom/mojang/authlib/GameProfile;)Ljava/lang/String;	b	getKeyForUser
c	amb	net/minecraft/server/players/UserBanListEntry
	m	(Lcom/google/gson/JsonObject;)V	<init>	<init>
		p	1		json
	m	(Lcom/mojang/authlib/GameProfile;)V	<init>	<init>
		p	1		profile
	m	(Lcom/mojang/authlib/GameProfile;Ljava/util/Date;Ljava/lang/String;Ljava/util/Date;Ljava/lang/String;)V	<init>	<init>
		p	1		profile
		p	2		created
		p	3		source
		p	4		expiry
		p	5		reason
	m	(Lcom/google/gson/JsonObject;)V	a	serialize
		p	1		json
	m	(Lcom/google/gson/JsonObject;)Lcom/mojang/authlib/GameProfile;	b	createGameProfile
		p	0		json
	m	()Ltj;	e	getDisplayName
c	amc	net/minecraft/server/players/UserWhiteList
	m	(Ljava/io/File;)V	<init>	<init>
		p	1		file
	m	()[Ljava/lang/String;	a	getUserList
	m	(I)[Ljava/lang/String;	a	lambda$getUserList$0
	m	(Lcom/google/gson/JsonObject;)Laly;	a	createEntry
		p	1		json
	m	(Lcom/mojang/authlib/GameProfile;)Z	a	isWhiteListed
		p	1		profile
	m	(Ljava/lang/Object;)Ljava/lang/String;	a	getKeyForUser
		p	1		profile
	m	(Lcom/mojang/authlib/GameProfile;)Ljava/lang/String;	b	getKeyForUser
c	amd	net/minecraft/server/players/UserWhiteListEntry
	m	(Lcom/google/gson/JsonObject;)V	<init>	<init>
		p	1		json
	m	(Lcom/mojang/authlib/GameProfile;)V	<init>	<init>
		p	1		profile
	m	(Lcom/google/gson/JsonObject;)V	a	serialize
		p	1		json
	m	(Lcom/google/gson/JsonObject;)Lcom/mojang/authlib/GameProfile;	b	createGameProfile
		p	0		json
c	ame	net/minecraft/server/players/package-info
c	amf	net/minecraft/server/rcon/NetworkDataOutputStream
	m	(I)V	<init>	<init>
		p	1		size
	m	()[B	a	toByteArray
	m	(F)V	a	writeFloat
		p	1		value
	m	(I)V	a	write
		p	1		value
	m	(Ljava/lang/String;)V	a	writeString
		p	1		value
	m	(S)V	a	writeShort
		p	1		value
	m	([B)V	a	writeBytes
		p	1		values
	m	()V	b	reset
	m	(I)V	b	writeInt
		p	1		value
	f	Ljava/io/ByteArrayOutputStream;	a	outputStream
	f	Ljava/io/DataOutputStream;	b	dataOutputStream
c	amg	net/minecraft/server/rcon/PktUtils
	m	(B)Ljava/lang/String;	a	toHexString
		p	0		b
	m	([BI)I	a	intFromByteArray
		p	0		buf
		p	1		start
	m	([BII)Ljava/lang/String;	a	stringFromByteArray
		p	0		buf
	m	([BII)I	b	intFromByteArray
		p	0		buf
		p	1		start
		p	2		limit
	m	([BII)I	c	intFromNetworkByteArray
		p	0		buf
		p	1		start
		p	2		limit
	f	I	a	MAX_PACKET_SIZE
	f	[C	b	HEX_CHAR
c	amh	net/minecraft/server/rcon/RconConsoleSource
	m	(Lnet/minecraft/server/MinecraftServer;)V	<init>	<init>
		p	1		server
	m	()Z	M_	shouldInformAdmins
	m	(Ltj;)V	a	sendSystemMessage
		p	1		message
	m	()Z	d_	acceptsSuccess
	m	()V	e	prepareForCommand
	m	()Ljava/lang/String;	f	getCommandResponse
	m	()Ldr;	g	createCommandSourceStack
	m	()Z	j_	acceptsFailure
	f	Ljava/lang/String;	b	RCON
	f	Ltj;	c	RCON_COMPONENT
	f	Ljava/lang/StringBuffer;	d	buffer
	f	Lnet/minecraft/server/MinecraftServer;	e	server
c	ami	net/minecraft/server/rcon/package-info
c	amj	net/minecraft/server/rcon/thread/GenericThread
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		description
	m	()Z	a	start
	m	()V	b	stop
	m	()Z	c	isRunning
	f	Z	a	running
	f	Ljava/lang/String;	b	name
	f	Ljava/lang/Thread;	c	thread
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	Ljava/util/concurrent/atomic/AtomicInteger;	e	UNIQUE_THREAD_ID
	f	I	f	MAX_STOP_WAIT
c	amk	net/minecraft/server/rcon/thread/QueryThreadGs4
	m	(Lads;I)V	<init>	<init>
		p	1		server
		p	2		queryPort
	m	()Z	a	start
	m	(JLamk$a;)Z	a	lambda$pruneChallenges$0
		p	2		query
	m	(Lads;)Lamk;	a	create
		p	0		server
	m	(Ljava/lang/Exception;)V	a	recoverSocketError
		p	1		e
	m	(Ljava/net/DatagramPacket;)Z	a	processPacket
		p	1		packet
	m	(Ljava/net/SocketAddress;)[B	a	getIdentBytes
		p	1		address
	m	([BLjava/net/DatagramPacket;)V	a	sendTo
		p	1		buf
		p	2		packet
	m	(Ljava/net/DatagramPacket;)[B	b	buildRuleResponse
		p	1		packet
	m	(Ljava/net/DatagramPacket;)Ljava/lang/Boolean;	c	validChallenge
		p	1		packet
	m	()V	d	pruneChallenges
	m	(Ljava/net/DatagramPacket;)V	d	sendChallenge
		p	1		packet
	m	()Z	e	initSocket
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	Ljava/lang/String;	e	GAME_TYPE
	f	Ljava/lang/String;	f	GAME_ID
	f	J	g	CHALLENGE_CHECK_INTERVAL
	f	J	h	RESPONSE_CACHE_TIME
	f	J	i	lastChallengeCheck
	f	I	j	port
	f	I	k	serverPort
	f	I	l	maxPlayers
	f	Ljava/lang/String;	m	serverName
	f	Ljava/lang/String;	n	worldName
	f	Ljava/net/DatagramSocket;	o	socket
	f	[B	p	buffer
	f	Ljava/lang/String;	q	hostIp
	f	Ljava/lang/String;	r	serverIp
	f	Ljava/util/Map;	s	validChallenges
	f	Lamf;	t	rulesResponse
	f	J	u	lastRulesResponse
	f	Lads;	v	serverInterface
c	amk$a	net/minecraft/server/rcon/thread/QueryThreadGs4$RequestChallenge
	m	(Ljava/net/DatagramPacket;)V	<init>	<init>
		p	1		packet
	m	()I	a	getChallenge
	m	(J)Ljava/lang/Boolean;	a	before
		p	1		lastQueryTime
	m	()[B	b	getChallengeBytes
	m	()[B	c	getIdentBytes
	m	()Ljava/lang/String;	d	getIdent
	f	J	a	time
	f	I	b	challenge
	f	[B	c	identBytes
	f	[B	d	challengeBytes
	f	Ljava/lang/String;	e	ident
c	aml	net/minecraft/server/rcon/thread/RconClient
	m	(Lads;Ljava/lang/String;Ljava/net/Socket;)V	<init>	<init>
		p	1		server
		p	2		password
		p	3		socket
	m	(IILjava/lang/String;)V	a	send
		p	1		sessionToken
		p	2		responseType
		p	3		message
	m	(ILjava/lang/String;)V	a	sendCmdResponse
		p	1		sessionToken
		p	2		message
	m	()V	b	stop
	m	()V	d	sendAuthFailure
	m	()V	e	closeSocket
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	I	e	SERVERDATA_AUTH
	f	I	f	SERVERDATA_EXECCOMMAND
	f	I	g	SERVERDATA_RESPONSE_VALUE
	f	I	h	SERVERDATA_AUTH_RESPONSE
	f	I	i	SERVERDATA_AUTH_FAILURE
	f	Z	j	authed
	f	Ljava/net/Socket;	k	client
	f	[B	l	buf
	f	Ljava/lang/String;	m	rconPassword
	f	Lads;	n	serverInterface
c	amm	net/minecraft/server/rcon/thread/RconThread
	m	(Lads;Ljava/net/ServerSocket;Ljava/lang/String;)V	<init>	<init>
		p	1		server
		p	2		listener
		p	3		password
	m	(Lads;)Lamm;	a	create
		p	0		server
	m	(Laml;)Z	a	lambda$clearClients$0
		p	0		client
	m	(Ljava/net/ServerSocket;)V	a	closeSocket
		p	1		socket
	m	()V	b	stop
	m	()V	d	clearClients
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	Ljava/net/ServerSocket;	e	socket
	f	Ljava/lang/String;	f	rconPassword
	f	Ljava/util/List;	g	clients
	f	Lads;	h	serverInterface
c	amn	net/minecraft/server/rcon/thread/package-info
c	amo	net/minecraft/sounds/Music
	m	(Lhd;IIZ)V	<init>	<init>
		p	1		sound
		p	2		minDelay
		p	3		maxDelay
		p	4		replaceCurrentMusic
	m	()Lhd;	a	getEvent
	m	(Lamo;)Ljava/lang/Boolean;	a	lambda$static$3
		p	0		sound
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
		p	0		instance
	m	()I	b	getMinDelay
	m	(Lamo;)Ljava/lang/Integer;	b	lambda$static$2
		p	0		sound
	m	()I	c	getMaxDelay
	m	(Lamo;)Ljava/lang/Integer;	c	lambda$static$1
		p	0		sound
	m	()Z	d	replaceCurrentMusic
	m	(Lamo;)Lhd;	d	lambda$static$0
		p	0		sound
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lhd;	b	event
	f	I	c	minDelay
	f	I	d	maxDelay
	f	Z	e	replaceCurrentMusic
c	amp	net/minecraft/sounds/Musics
	m	(Lhd;)Lamo;	a	createGameMusic
		p	0		sound
	f	Lamo;	a	MENU
	f	Lamo;	b	CREATIVE
	f	Lamo;	c	CREDITS
	f	Lamo;	d	END_BOSS
	f	Lamo;	e	END
	f	Lamo;	f	UNDER_WATER
	f	Lamo;	g	GAME
	f	I	h	ONE_SECOND
	f	I	i	THIRTY_SECONDS
	f	I	j	TEN_MINUTES
	f	I	k	TWENTY_MINUTES
	f	I	l	FIVE_MINUTES
c	amq	net/minecraft/sounds/SoundEvent
	m	(Ladd;FZ)V	<init>	<init>
		p	1		id
		p	2		distanceToTravel
		p	3		useStaticDistance
	m	()Ladd;	a	getLocation
	m	(F)F	a	getRange
		p	1		volume
	m	(Ladd;)Lamq;	a	createVariableRangeEvent
		p	0		id
	m	(Ladd;F)Lamq;	a	createFixedRangeEvent
		p	0		id
		p	1		distanceToTravel
	m	(Ladd;Ljava/lang/Float;)Lamq;	a	lambda$create$1
	m	(Ladd;Ljava/util/Optional;)Lamq;	a	create
		p	0		id
		p	1		distanceToTravel
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	(Lss;)V	a	writeToNetwork
		p	1		buf
	m	()Ljava/util/Optional;	b	fixedRange
	m	(Ladd;)Lamq;	b	lambda$create$2
	m	(Lss;)Lamq;	b	readFromNetwork
		p	0		buf
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	F	c	DEFAULT_RANGE
	f	Ladd;	d	location
	f	F	e	range
	f	Z	f	newSystem
c	amr	net/minecraft/sounds/SoundEvents
	m	()Lcom/google/common/collect/ImmutableList;	a	registerGoatHornSoundVariants
	m	(I)Lhd$c;	a	lambda$registerGoatHornSoundVariants$0
		p	0		variant
	m	(Ladd;)Lamq;	a	register
		p	0		id
	m	(Ladd;Ladd;)Lamq;	a	register
		p	0		id
		p	1		soundId
	m	(Ladd;Ladd;F)Lhd;	a	register
		p	0		id
		p	1		soundId
		p	2		distanceToTravel
	m	(Ljava/lang/String;)Lamq;	a	register
		p	0		id
	m	(Ladd;)Lhd$c;	b	registerForHolder
		p	0		id
	m	(Ladd;Ladd;)Lhd$c;	b	registerForHolder
		p	0		id
		p	1		soundId
	m	(Ljava/lang/String;)Lhd$c;	b	registerForHolder
		p	0		id
	f	Lamq;	AA	ZOMBIE_DEATH
	f	Lamq;	AB	ZOMBIE_DESTROY_EGG
	f	Lamq;	AC	ZOMBIE_HORSE_AMBIENT
	f	Lamq;	AD	ZOMBIE_HORSE_DEATH
	f	Lamq;	AE	ZOMBIE_HORSE_HURT
	f	Lamq;	AF	ZOMBIE_HURT
	f	Lamq;	AG	ZOMBIE_INFECT
	f	Lamq;	AH	ZOMBIFIED_PIGLIN_AMBIENT
	f	Lamq;	AI	ZOMBIFIED_PIGLIN_ANGRY
	f	Lamq;	AJ	ZOMBIFIED_PIGLIN_DEATH
	f	Lamq;	AK	ZOMBIFIED_PIGLIN_HURT
	f	Lamq;	AL	ZOMBIE_STEP
	f	Lamq;	A	AMBIENT_UNDERWATER_LOOP_ADDITIONS
	f	Lamq;	AM	ZOMBIE_VILLAGER_AMBIENT
	f	Lamq;	AN	ZOMBIE_VILLAGER_CONVERTED
	f	Lamq;	AO	ZOMBIE_VILLAGER_CURE
	f	Lamq;	AP	ZOMBIE_VILLAGER_DEATH
	f	Lamq;	AQ	ZOMBIE_VILLAGER_HURT
	f	Lamq;	AR	ZOMBIE_VILLAGER_STEP
	f	Lamq;	Aa	WOODEN_TRAPDOOR_OPEN
	f	Lamq;	Ab	WOODEN_BUTTON_CLICK_OFF
	f	Lamq;	Ac	WOODEN_BUTTON_CLICK_ON
	f	Lamq;	Ad	WOODEN_PRESSURE_PLATE_CLICK_OFF
	f	Lamq;	Ae	WOODEN_PRESSURE_PLATE_CLICK_ON
	f	Lamq;	Af	WOOD_BREAK
	f	Lamq;	Ag	WOOD_FALL
	f	Lamq;	Ah	WOOD_HIT
	f	Lamq;	Ai	WOOD_PLACE
	f	Lamq;	Aj	WOOD_STEP
	f	Lamq;	Ak	WOOL_BREAK
	f	Lamq;	Al	WOOL_FALL
	f	Lamq;	Am	WOOL_HIT
	f	Lamq;	An	WOOL_PLACE
	f	Lamq;	Ao	WOOL_STEP
	f	Lamq;	Ap	ZOGLIN_AMBIENT
	f	Lamq;	Aq	ZOGLIN_ANGRY
	f	Lamq;	Ar	ZOGLIN_ATTACK
	f	Lamq;	As	ZOGLIN_DEATH
	f	Lamq;	At	ZOGLIN_HURT
	f	Lamq;	Au	ZOGLIN_STEP
	f	Lamq;	Av	ZOMBIE_AMBIENT
	f	Lamq;	Aw	ZOMBIE_ATTACK_WOODEN_DOOR
	f	Lamq;	Ax	ZOMBIE_ATTACK_IRON_DOOR
	f	Lamq;	Ay	ZOMBIE_BREAK_WOODEN_DOOR
	f	Lamq;	Az	ZOMBIE_CONVERTED_TO_DROWNED
	f	Lamq;	B	AMBIENT_UNDERWATER_LOOP_ADDITIONS_RARE
	f	Lamq;	C	AMBIENT_UNDERWATER_LOOP_ADDITIONS_ULTRA_RARE
	f	Lamq;	D	AMETHYST_BLOCK_BREAK
	f	Lamq;	E	AMETHYST_BLOCK_CHIME
	f	Lamq;	F	AMETHYST_BLOCK_FALL
	f	Lamq;	G	AMETHYST_BLOCK_HIT
	f	Lamq;	H	AMETHYST_BLOCK_PLACE
	f	Lamq;	I	AMETHYST_BLOCK_STEP
	f	Lamq;	J	AMETHYST_CLUSTER_BREAK
	f	Lamq;	K	AMETHYST_CLUSTER_FALL
	f	Lamq;	L	AMETHYST_CLUSTER_HIT
	f	Lamq;	M	AMETHYST_CLUSTER_PLACE
	f	Lamq;	N	AMETHYST_CLUSTER_STEP
	f	Lamq;	O	ANCIENT_DEBRIS_BREAK
	f	Lamq;	P	ANCIENT_DEBRIS_STEP
	f	Lamq;	Q	ANCIENT_DEBRIS_PLACE
	f	Lamq;	R	ANCIENT_DEBRIS_HIT
	f	Lamq;	S	ANCIENT_DEBRIS_FALL
	f	Lamq;	T	ANVIL_BREAK
	f	Lamq;	U	ANVIL_DESTROY
	f	Lamq;	V	ANVIL_FALL
	f	Lamq;	W	ANVIL_HIT
	f	Lamq;	X	ANVIL_LAND
	f	Lamq;	Y	ANVIL_PLACE
	f	Lamq;	Z	ANVIL_STEP
	f	Lamq;	aA	AXOLOTL_SWIM
	f	Lamq;	aB	AZALEA_BREAK
	f	Lamq;	aC	AZALEA_FALL
	f	Lamq;	aD	AZALEA_HIT
	f	Lamq;	aE	AZALEA_PLACE
	f	Lamq;	aF	AZALEA_STEP
	f	Lamq;	aG	AZALEA_LEAVES_BREAK
	f	Lamq;	aH	AZALEA_LEAVES_FALL
	f	Lamq;	aI	AZALEA_LEAVES_HIT
	f	Lamq;	aJ	AZALEA_LEAVES_PLACE
	f	Lamq;	aK	AZALEA_LEAVES_STEP
	f	Lamq;	aL	BAMBOO_BREAK
	f	Lamq;	a	ALLAY_AMBIENT_WITH_ITEM
	f	Lamq;	aM	BAMBOO_FALL
	f	Lamq;	aN	BAMBOO_HIT
	f	Lamq;	aO	BAMBOO_PLACE
	f	Lamq;	aP	BAMBOO_STEP
	f	Lamq;	aQ	BAMBOO_SAPLING_BREAK
	f	Lamq;	aR	BAMBOO_SAPLING_HIT
	f	Lamq;	aS	BAMBOO_SAPLING_PLACE
	f	Lamq;	aT	BAMBOO_WOOD_BREAK
	f	Lamq;	aU	BAMBOO_WOOD_FALL
	f	Lamq;	aV	BAMBOO_WOOD_HIT
	f	Lamq;	aW	BAMBOO_WOOD_PLACE
	f	Lamq;	aX	BAMBOO_WOOD_STEP
	f	Lamq;	aY	BAMBOO_WOOD_DOOR_CLOSE
	f	Lamq;	aZ	BAMBOO_WOOD_DOOR_OPEN
	f	Lamq;	aa	ANVIL_USE
	f	Lamq;	ab	ARMOR_EQUIP_CHAIN
	f	Lamq;	ac	ARMOR_EQUIP_DIAMOND
	f	Lamq;	ad	ARMOR_EQUIP_ELYTRA
	f	Lamq;	ae	ARMOR_EQUIP_GENERIC
	f	Lamq;	af	ARMOR_EQUIP_GOLD
	f	Lamq;	ag	ARMOR_EQUIP_IRON
	f	Lamq;	ah	ARMOR_EQUIP_LEATHER
	f	Lamq;	ai	ARMOR_EQUIP_NETHERITE
	f	Lamq;	aj	ARMOR_EQUIP_TURTLE
	f	Lamq;	ak	ARMOR_STAND_BREAK
	f	Lamq;	al	ARMOR_STAND_FALL
	f	Lamq;	am	ARMOR_STAND_HIT
	f	Lamq;	an	ARMOR_STAND_PLACE
	f	Lamq;	ao	ARROW_HIT
	f	Lamq;	ap	ARROW_HIT_PLAYER
	f	Lamq;	aq	ARROW_SHOOT
	f	Lamq;	ar	AXE_STRIP
	f	Lamq;	as	AXE_SCRAPE
	f	Lamq;	at	AXE_WAX_OFF
	f	Lamq;	au	AXOLOTL_ATTACK
	f	Lamq;	av	AXOLOTL_DEATH
	f	Lamq;	aw	AXOLOTL_HURT
	f	Lamq;	ax	AXOLOTL_IDLE_AIR
	f	Lamq;	ay	AXOLOTL_IDLE_WATER
	f	Lamq;	az	AXOLOTL_SPLASH
	f	Lamq;	bA	BEE_LOOP_AGGRESSIVE
	f	Lamq;	bB	BEE_LOOP
	f	Lamq;	bC	BEE_STING
	f	Lamq;	bD	BEE_POLLINATE
	f	Lamq;	bE	BEEHIVE_DRIP
	f	Lamq;	bF	BEEHIVE_ENTER
	f	Lamq;	bG	BEEHIVE_EXIT
	f	Lamq;	bH	BEEHIVE_SHEAR
	f	Lamq;	bI	BEEHIVE_WORK
	f	Lamq;	bJ	BELL_BLOCK
	f	Lamq;	bK	BELL_RESONATE
	f	Lamq;	bL	BIG_DRIPLEAF_BREAK
	f	Lamq;	b	ALLAY_AMBIENT_WITHOUT_ITEM
	f	Lamq;	bM	BIG_DRIPLEAF_FALL
	f	Lamq;	bN	BIG_DRIPLEAF_HIT
	f	Lamq;	bO	BIG_DRIPLEAF_PLACE
	f	Lamq;	bP	BIG_DRIPLEAF_STEP
	f	Lamq;	bQ	BLAZE_AMBIENT
	f	Lamq;	bR	BLAZE_BURN
	f	Lamq;	bS	BLAZE_DEATH
	f	Lamq;	bT	BLAZE_HURT
	f	Lamq;	bU	BLAZE_SHOOT
	f	Lamq;	bV	BOAT_PADDLE_LAND
	f	Lamq;	bW	BOAT_PADDLE_WATER
	f	Lamq;	bX	BONE_BLOCK_BREAK
	f	Lamq;	bY	BONE_BLOCK_FALL
	f	Lamq;	bZ	BONE_BLOCK_HIT
	f	Lamq;	ba	BAMBOO_WOOD_TRAPDOOR_CLOSE
	f	Lamq;	bb	BAMBOO_WOOD_TRAPDOOR_OPEN
	f	Lamq;	bc	BAMBOO_WOOD_BUTTON_CLICK_OFF
	f	Lamq;	bd	BAMBOO_WOOD_BUTTON_CLICK_ON
	f	Lamq;	be	BAMBOO_WOOD_PRESSURE_PLATE_CLICK_OFF
	f	Lamq;	bf	BAMBOO_WOOD_PRESSURE_PLATE_CLICK_ON
	f	Lamq;	bg	BAMBOO_WOOD_FENCE_GATE_CLOSE
	f	Lamq;	bh	BAMBOO_WOOD_FENCE_GATE_OPEN
	f	Lamq;	bi	BARREL_CLOSE
	f	Lamq;	bj	BARREL_OPEN
	f	Lamq;	bk	BASALT_BREAK
	f	Lamq;	bl	BASALT_STEP
	f	Lamq;	bm	BASALT_PLACE
	f	Lamq;	bn	BASALT_HIT
	f	Lamq;	bo	BASALT_FALL
	f	Lamq;	bp	BAT_AMBIENT
	f	Lamq;	bq	BAT_DEATH
	f	Lamq;	br	BAT_HURT
	f	Lamq;	bs	BAT_LOOP
	f	Lamq;	bt	BAT_TAKEOFF
	f	Lamq;	bu	BEACON_ACTIVATE
	f	Lamq;	bv	BEACON_AMBIENT
	f	Lamq;	bw	BEACON_DEACTIVATE
	f	Lamq;	bx	BEACON_POWER_SELECT
	f	Lamq;	by	BEE_DEATH
	f	Lamq;	bz	BEE_HURT
	f	Lamq;	cA	BUCKET_FILL_LAVA
	f	Lamq;	cB	BUCKET_FILL_POWDER_SNOW
	f	Lamq;	cC	BUCKET_FILL_TADPOLE
	f	Lamq;	cD	BUNDLE_DROP_CONTENTS
	f	Lamq;	cE	BUNDLE_INSERT
	f	Lamq;	cF	BUNDLE_REMOVE_ONE
	f	Lamq;	cG	CAKE_ADD_CANDLE
	f	Lamq;	cH	CALCITE_BREAK
	f	Lamq;	cI	CALCITE_STEP
	f	Lamq;	cJ	CALCITE_PLACE
	f	Lamq;	cK	CALCITE_HIT
	f	Lamq;	cL	CALCITE_FALL
	f	Lamq;	c	ALLAY_DEATH
	f	Lamq;	cM	CAMEL_AMBIENT
	f	Lamq;	cN	CAMEL_DASH
	f	Lamq;	cO	CAMEL_DASH_READY
	f	Lamq;	cP	CAMEL_DEATH
	f	Lamq;	cQ	CAMEL_EAT
	f	Lamq;	cR	CAMEL_HURT
	f	Lamq;	cS	CAMEL_SADDLE
	f	Lamq;	cT	CAMEL_SIT
	f	Lamq;	cU	CAMEL_STAND
	f	Lamq;	cV	CAMEL_STEP
	f	Lamq;	cW	CAMEL_STEP_SAND
	f	Lamq;	cX	CAMPFIRE_CRACKLE
	f	Lamq;	cY	CANDLE_AMBIENT
	f	Lamq;	cZ	CANDLE_BREAK
	f	Lamq;	ca	BONE_BLOCK_PLACE
	f	Lamq;	cb	BONE_BLOCK_STEP
	f	Lamq;	cc	BONE_MEAL_USE
	f	Lamq;	cd	BOOK_PAGE_TURN
	f	Lamq;	ce	BOOK_PUT
	f	Lamq;	cf	BLASTFURNACE_FIRE_CRACKLE
	f	Lamq;	cg	BOTTLE_EMPTY
	f	Lamq;	ch	BOTTLE_FILL
	f	Lamq;	ci	BOTTLE_FILL_DRAGONBREATH
	f	Lamq;	cj	BREWING_STAND_BREW
	f	Lamq;	ck	BRUSH_BRUSHING
	f	Lamq;	cl	BRUSH_BRUSH_SAND_COMPLETED
	f	Lamq;	cm	BUBBLE_COLUMN_BUBBLE_POP
	f	Lamq;	cn	BUBBLE_COLUMN_UPWARDS_AMBIENT
	f	Lamq;	co	BUBBLE_COLUMN_UPWARDS_INSIDE
	f	Lamq;	cp	BUBBLE_COLUMN_WHIRLPOOL_AMBIENT
	f	Lamq;	cq	BUBBLE_COLUMN_WHIRLPOOL_INSIDE
	f	Lamq;	cr	BUCKET_EMPTY
	f	Lamq;	cs	BUCKET_EMPTY_AXOLOTL
	f	Lamq;	ct	BUCKET_EMPTY_FISH
	f	Lamq;	cu	BUCKET_EMPTY_LAVA
	f	Lamq;	cv	BUCKET_EMPTY_POWDER_SNOW
	f	Lamq;	cw	BUCKET_EMPTY_TADPOLE
	f	Lamq;	cx	BUCKET_FILL
	f	Lamq;	cy	BUCKET_FILL_AXOLOTL
	f	Lamq;	cz	BUCKET_FILL_FISH
	f	Lamq;	dA	CHERRY_WOOD_FALL
	f	Lamq;	dB	CHERRY_WOOD_HIT
	f	Lamq;	dC	CHERRY_WOOD_PLACE
	f	Lamq;	dD	CHERRY_WOOD_STEP
	f	Lamq;	dE	CHERRY_SAPLING_BREAK
	f	Lamq;	dF	CHERRY_SAPLING_FALL
	f	Lamq;	dG	CHERRY_SAPLING_HIT
	f	Lamq;	dH	CHERRY_SAPLING_PLACE
	f	Lamq;	dI	CHERRY_SAPLING_STEP
	f	Lamq;	dJ	CHERRY_LEAVES_BREAK
	f	Lamq;	dK	CHERRY_LEAVES_FALL
	f	Lamq;	dL	CHERRY_LEAVES_HIT
	f	Lamq;	d	ALLAY_HURT
	f	Lamq;	dM	CHERRY_LEAVES_PLACE
	f	Lamq;	dN	CHERRY_LEAVES_STEP
	f	Lamq;	dO	CHERRY_WOOD_HANGING_SIGN_STEP
	f	Lamq;	dP	CHERRY_WOOD_HANGING_SIGN_BREAK
	f	Lamq;	dQ	CHERRY_WOOD_HANGING_SIGN_FALL
	f	Lamq;	dR	CHERRY_WOOD_HANGING_SIGN_HIT
	f	Lamq;	dS	CHERRY_WOOD_HANGING_SIGN_PLACE
	f	Lamq;	dT	CHERRY_WOOD_DOOR_CLOSE
	f	Lamq;	dU	CHERRY_WOOD_DOOR_OPEN
	f	Lamq;	dV	CHERRY_WOOD_TRAPDOOR_CLOSE
	f	Lamq;	dW	CHERRY_WOOD_TRAPDOOR_OPEN
	f	Lamq;	dX	CHERRY_WOOD_BUTTON_CLICK_OFF
	f	Lamq;	dY	CHERRY_WOOD_BUTTON_CLICK_ON
	f	Lamq;	dZ	CHERRY_WOOD_PRESSURE_PLATE_CLICK_OFF
	f	Lamq;	da	CANDLE_EXTINGUISH
	f	Lamq;	db	CANDLE_FALL
	f	Lamq;	dc	CANDLE_HIT
	f	Lamq;	dd	CANDLE_PLACE
	f	Lamq;	de	CANDLE_STEP
	f	Lamq;	df	CAT_AMBIENT
	f	Lamq;	dg	CAT_STRAY_AMBIENT
	f	Lamq;	dh	CAT_DEATH
	f	Lamq;	di	CAT_EAT
	f	Lamq;	dj	CAT_HISS
	f	Lamq;	dk	CAT_BEG_FOR_FOOD
	f	Lamq;	dl	CAT_HURT
	f	Lamq;	dm	CAT_PURR
	f	Lamq;	dn	CAT_PURREOW
	f	Lamq;	do	CAVE_VINES_BREAK
	f	Lamq;	dp	CAVE_VINES_FALL
	f	Lamq;	dq	CAVE_VINES_HIT
	f	Lamq;	dr	CAVE_VINES_PLACE
	f	Lamq;	ds	CAVE_VINES_STEP
	f	Lamq;	dt	CAVE_VINES_PICK_BERRIES
	f	Lamq;	du	CHAIN_BREAK
	f	Lamq;	dv	CHAIN_FALL
	f	Lamq;	dw	CHAIN_HIT
	f	Lamq;	dx	CHAIN_PLACE
	f	Lamq;	dy	CHAIN_STEP
	f	Lamq;	dz	CHERRY_WOOD_BREAK
	f	Lamq;	eA	COD_HURT
	f	Lamq;	eB	COMPARATOR_CLICK
	f	Lamq;	eC	COMPOSTER_EMPTY
	f	Lamq;	eD	COMPOSTER_FILL
	f	Lamq;	eE	COMPOSTER_FILL_SUCCESS
	f	Lamq;	eF	COMPOSTER_READY
	f	Lamq;	eG	CONDUIT_ACTIVATE
	f	Lamq;	eH	CONDUIT_AMBIENT
	f	Lamq;	eI	CONDUIT_AMBIENT_SHORT
	f	Lamq;	eJ	CONDUIT_ATTACK_TARGET
	f	Lamq;	eK	CONDUIT_DEACTIVATE
	f	Lamq;	eL	COPPER_BREAK
	f	Lamq;	e	ALLAY_ITEM_GIVEN
	f	Lamq;	eM	COPPER_STEP
	f	Lamq;	eN	COPPER_PLACE
	f	Lamq;	eO	COPPER_HIT
	f	Lamq;	eP	COPPER_FALL
	f	Lamq;	eQ	CORAL_BLOCK_BREAK
	f	Lamq;	eR	CORAL_BLOCK_FALL
	f	Lamq;	eS	CORAL_BLOCK_HIT
	f	Lamq;	eT	CORAL_BLOCK_PLACE
	f	Lamq;	eU	CORAL_BLOCK_STEP
	f	Lamq;	eV	COW_AMBIENT
	f	Lamq;	eW	COW_DEATH
	f	Lamq;	eX	COW_HURT
	f	Lamq;	eY	COW_MILK
	f	Lamq;	eZ	COW_STEP
	f	Lamq;	ea	CHERRY_WOOD_PRESSURE_PLATE_CLICK_ON
	f	Lamq;	eb	CHERRY_WOOD_FENCE_GATE_CLOSE
	f	Lamq;	ec	CHERRY_WOOD_FENCE_GATE_OPEN
	f	Lamq;	ed	CHEST_CLOSE
	f	Lamq;	ee	CHEST_LOCKED
	f	Lamq;	ef	CHEST_OPEN
	f	Lamq;	eg	CHICKEN_AMBIENT
	f	Lamq;	eh	CHICKEN_DEATH
	f	Lamq;	ei	CHICKEN_EGG
	f	Lamq;	ej	CHICKEN_HURT
	f	Lamq;	ek	CHICKEN_STEP
	f	Lamq;	el	CHISELED_BOOKSHELF_BREAK
	f	Lamq;	em	CHISELED_BOOKSHELF_FALL
	f	Lamq;	en	CHISELED_BOOKSHELF_HIT
	f	Lamq;	eo	CHISELED_BOOKSHELF_INSERT
	f	Lamq;	ep	CHISELED_BOOKSHELF_INSERT_ENCHANTED
	f	Lamq;	eq	CHISELED_BOOKSHELF_STEP
	f	Lamq;	er	CHISELED_BOOKSHELF_PICKUP
	f	Lamq;	es	CHISELED_BOOKSHELF_PICKUP_ENCHANTED
	f	Lamq;	et	CHISELED_BOOKSHELF_PLACE
	f	Lamq;	eu	CHORUS_FLOWER_DEATH
	f	Lamq;	ev	CHORUS_FLOWER_GROW
	f	Lamq;	ew	CHORUS_FRUIT_TELEPORT
	f	Lamq;	ex	COD_AMBIENT
	f	Lamq;	ey	COD_DEATH
	f	Lamq;	ez	COD_FLOP
	f	Lamq;	fA	DEEPSLATE_HIT
	f	Lamq;	fB	DEEPSLATE_PLACE
	f	Lamq;	fC	DEEPSLATE_STEP
	f	Lamq;	fD	DEEPSLATE_TILES_BREAK
	f	Lamq;	fE	DEEPSLATE_TILES_FALL
	f	Lamq;	fF	DEEPSLATE_TILES_HIT
	f	Lamq;	fG	DEEPSLATE_TILES_PLACE
	f	Lamq;	fH	DEEPSLATE_TILES_STEP
	f	Lamq;	fI	DISPENSER_DISPENSE
	f	Lamq;	fJ	DISPENSER_FAIL
	f	Lamq;	fK	DISPENSER_LAUNCH
	f	Lamq;	fL	DOLPHIN_AMBIENT
	f	Lamq;	f	ALLAY_ITEM_TAKEN
	f	Lamq;	fM	DOLPHIN_AMBIENT_WATER
	f	Lamq;	fN	DOLPHIN_ATTACK
	f	Lamq;	fO	DOLPHIN_DEATH
	f	Lamq;	fP	DOLPHIN_EAT
	f	Lamq;	fQ	DOLPHIN_HURT
	f	Lamq;	fR	DOLPHIN_JUMP
	f	Lamq;	fS	DOLPHIN_PLAY
	f	Lamq;	fT	DOLPHIN_SPLASH
	f	Lamq;	fU	DOLPHIN_SWIM
	f	Lamq;	fV	DONKEY_AMBIENT
	f	Lamq;	fW	DONKEY_ANGRY
	f	Lamq;	fX	DONKEY_CHEST
	f	Lamq;	fY	DONKEY_DEATH
	f	Lamq;	fZ	DONKEY_EAT
	f	Lamq;	fa	CREEPER_DEATH
	f	Lamq;	fb	CREEPER_HURT
	f	Lamq;	fc	CREEPER_PRIMED
	f	Lamq;	fd	CROP_BREAK
	f	Lamq;	fe	CROP_PLANTED
	f	Lamq;	ff	CROSSBOW_HIT
	f	Lamq;	fg	CROSSBOW_LOADING_END
	f	Lamq;	fh	CROSSBOW_LOADING_MIDDLE
	f	Lamq;	fi	CROSSBOW_LOADING_START
	f	Lamq;	fj	CROSSBOW_QUICK_CHARGE_1
	f	Lamq;	fk	CROSSBOW_QUICK_CHARGE_2
	f	Lamq;	fl	CROSSBOW_QUICK_CHARGE_3
	f	Lamq;	fm	CROSSBOW_SHOOT
	f	Lamq;	fn	DECORATED_POT_BREAK
	f	Lamq;	fo	DECORATED_POT_FALL
	f	Lamq;	fp	DECORATED_POT_HIT
	f	Lamq;	fq	DECORATED_POT_STEP
	f	Lamq;	fr	DECORATED_POT_PLACE
	f	Lamq;	fs	DECORATED_POT_SHATTER
	f	Lamq;	ft	DEEPSLATE_BRICKS_BREAK
	f	Lamq;	fu	DEEPSLATE_BRICKS_FALL
	f	Lamq;	fv	DEEPSLATE_BRICKS_HIT
	f	Lamq;	fw	DEEPSLATE_BRICKS_PLACE
	f	Lamq;	fx	DEEPSLATE_BRICKS_STEP
	f	Lamq;	fy	DEEPSLATE_BREAK
	f	Lamq;	fz	DEEPSLATE_FALL
	f	Lamq;	gA	DROWNED_SWIM
	f	Lamq;	gB	DYE_USE
	f	Lamq;	gC	EGG_THROW
	f	Lamq;	gD	ELDER_GUARDIAN_AMBIENT
	f	Lamq;	gE	ELDER_GUARDIAN_AMBIENT_LAND
	f	Lamq;	gF	ELDER_GUARDIAN_CURSE
	f	Lamq;	gG	ELDER_GUARDIAN_DEATH
	f	Lamq;	gH	ELDER_GUARDIAN_DEATH_LAND
	f	Lamq;	gI	ELDER_GUARDIAN_FLOP
	f	Lamq;	gJ	ELDER_GUARDIAN_HURT
	f	Lamq;	gK	ELDER_GUARDIAN_HURT_LAND
	f	Lamq;	gL	ELYTRA_FLYING
	f	Lamq;	g	ALLAY_THROW
	f	Lamq;	gM	ENCHANTMENT_TABLE_USE
	f	Lamq;	gN	ENDER_CHEST_CLOSE
	f	Lamq;	gO	ENDER_CHEST_OPEN
	f	Lamq;	gP	ENDER_DRAGON_AMBIENT
	f	Lamq;	gQ	ENDER_DRAGON_DEATH
	f	Lamq;	gR	DRAGON_FIREBALL_EXPLODE
	f	Lamq;	gS	ENDER_DRAGON_FLAP
	f	Lamq;	gT	ENDER_DRAGON_GROWL
	f	Lamq;	gU	ENDER_DRAGON_HURT
	f	Lamq;	gV	ENDER_DRAGON_SHOOT
	f	Lamq;	gW	ENDER_EYE_DEATH
	f	Lamq;	gX	ENDER_EYE_LAUNCH
	f	Lamq;	gY	ENDERMAN_AMBIENT
	f	Lamq;	gZ	ENDERMAN_DEATH
	f	Lamq;	ga	DONKEY_HURT
	f	Lamq;	gb	DRIPSTONE_BLOCK_BREAK
	f	Lamq;	gc	DRIPSTONE_BLOCK_STEP
	f	Lamq;	gd	DRIPSTONE_BLOCK_PLACE
	f	Lamq;	ge	DRIPSTONE_BLOCK_HIT
	f	Lamq;	gf	DRIPSTONE_BLOCK_FALL
	f	Lamq;	gg	POINTED_DRIPSTONE_BREAK
	f	Lamq;	gh	POINTED_DRIPSTONE_STEP
	f	Lamq;	gi	POINTED_DRIPSTONE_PLACE
	f	Lamq;	gj	POINTED_DRIPSTONE_HIT
	f	Lamq;	gk	POINTED_DRIPSTONE_FALL
	f	Lamq;	gl	POINTED_DRIPSTONE_LAND
	f	Lamq;	gm	POINTED_DRIPSTONE_DRIP_LAVA
	f	Lamq;	gn	POINTED_DRIPSTONE_DRIP_WATER
	f	Lamq;	go	POINTED_DRIPSTONE_DRIP_LAVA_INTO_CAULDRON
	f	Lamq;	gp	POINTED_DRIPSTONE_DRIP_WATER_INTO_CAULDRON
	f	Lamq;	gq	BIG_DRIPLEAF_TILT_DOWN
	f	Lamq;	gr	BIG_DRIPLEAF_TILT_UP
	f	Lamq;	gs	DROWNED_AMBIENT
	f	Lamq;	gt	DROWNED_AMBIENT_WATER
	f	Lamq;	gu	DROWNED_DEATH
	f	Lamq;	gv	DROWNED_DEATH_WATER
	f	Lamq;	gw	DROWNED_HURT
	f	Lamq;	gx	DROWNED_HURT_WATER
	f	Lamq;	gy	DROWNED_SHOOT
	f	Lamq;	gz	DROWNED_STEP
	f	Lamq;	hA	FIREWORK_ROCKET_BLAST
	f	Lamq;	hB	FIREWORK_ROCKET_BLAST_FAR
	f	Lamq;	hC	FIREWORK_ROCKET_LARGE_BLAST
	f	Lamq;	hD	FIREWORK_ROCKET_LARGE_BLAST_FAR
	f	Lamq;	hE	FIREWORK_ROCKET_LAUNCH
	f	Lamq;	hF	FIREWORK_ROCKET_SHOOT
	f	Lamq;	hG	FIREWORK_ROCKET_TWINKLE
	f	Lamq;	hH	FIREWORK_ROCKET_TWINKLE_FAR
	f	Lamq;	hI	FIRE_AMBIENT
	f	Lamq;	hJ	FIRE_EXTINGUISH
	f	Lamq;	hK	FISH_SWIM
	f	Lamq;	hL	FISHING_BOBBER_RETRIEVE
	f	Lhd$c;	h	AMBIENT_CAVE
	f	Lamq;	hM	FISHING_BOBBER_SPLASH
	f	Lamq;	hN	FISHING_BOBBER_THROW
	f	Lamq;	hO	FLINTANDSTEEL_USE
	f	Lamq;	hP	FLOWERING_AZALEA_BREAK
	f	Lamq;	hQ	FLOWERING_AZALEA_FALL
	f	Lamq;	hR	FLOWERING_AZALEA_HIT
	f	Lamq;	hS	FLOWERING_AZALEA_PLACE
	f	Lamq;	hT	FLOWERING_AZALEA_STEP
	f	Lamq;	hU	FOX_AGGRO
	f	Lamq;	hV	FOX_AMBIENT
	f	Lamq;	hW	FOX_BITE
	f	Lamq;	hX	FOX_DEATH
	f	Lamq;	hY	FOX_EAT
	f	Lamq;	hZ	FOX_HURT
	f	Lamq;	ha	ENDERMAN_HURT
	f	Lamq;	hb	ENDERMAN_SCREAM
	f	Lamq;	hc	ENDERMAN_STARE
	f	Lamq;	hd	ENDERMAN_TELEPORT
	f	Lamq;	he	ENDERMITE_AMBIENT
	f	Lamq;	hf	ENDERMITE_DEATH
	f	Lamq;	hg	ENDERMITE_HURT
	f	Lamq;	hh	ENDERMITE_STEP
	f	Lamq;	hi	ENDER_PEARL_THROW
	f	Lamq;	hj	END_GATEWAY_SPAWN
	f	Lamq;	hk	END_PORTAL_FRAME_FILL
	f	Lamq;	hl	END_PORTAL_SPAWN
	f	Lamq;	hm	EVOKER_AMBIENT
	f	Lamq;	hn	EVOKER_CAST_SPELL
	f	Lamq;	ho	EVOKER_CELEBRATE
	f	Lamq;	hp	EVOKER_DEATH
	f	Lamq;	hq	EVOKER_FANGS_ATTACK
	f	Lamq;	hr	EVOKER_HURT
	f	Lamq;	hs	EVOKER_PREPARE_ATTACK
	f	Lamq;	ht	EVOKER_PREPARE_SUMMON
	f	Lamq;	hu	EVOKER_PREPARE_WOLOLO
	f	Lamq;	hv	EXPERIENCE_BOTTLE_THROW
	f	Lamq;	hw	EXPERIENCE_ORB_PICKUP
	f	Lamq;	hx	FENCE_GATE_CLOSE
	f	Lamq;	hy	FENCE_GATE_OPEN
	f	Lamq;	hz	FIRECHARGE_USE
	f	Lamq;	iA	FROG_LONG_JUMP
	f	Lamq;	iB	FROG_STEP
	f	Lamq;	iC	FROG_TONGUE
	f	Lamq;	iD	ROOTS_BREAK
	f	Lamq;	iE	ROOTS_STEP
	f	Lamq;	iF	ROOTS_PLACE
	f	Lamq;	iG	ROOTS_HIT
	f	Lamq;	iH	ROOTS_FALL
	f	Lamq;	iI	FURNACE_FIRE_CRACKLE
	f	Lamq;	iJ	GENERIC_BIG_FALL
	f	Lamq;	iK	GENERIC_BURN
	f	Lamq;	iL	GENERIC_DEATH
	f	Lhd$c;	i	AMBIENT_BASALT_DELTAS_ADDITIONS
	f	Lamq;	iM	GENERIC_DRINK
	f	Lamq;	iN	GENERIC_EAT
	f	Lamq;	iO	GENERIC_EXPLODE
	f	Lamq;	iP	GENERIC_EXTINGUISH_FIRE
	f	Lamq;	iQ	GENERIC_HURT
	f	Lamq;	iR	GENERIC_SMALL_FALL
	f	Lamq;	iS	GENERIC_SPLASH
	f	Lamq;	iT	GENERIC_SWIM
	f	Lamq;	iU	GHAST_AMBIENT
	f	Lamq;	iV	GHAST_DEATH
	f	Lamq;	iW	GHAST_HURT
	f	Lamq;	iX	GHAST_SCREAM
	f	Lamq;	iY	GHAST_SHOOT
	f	Lamq;	iZ	GHAST_WARN
	f	Lamq;	ia	FOX_SCREECH
	f	Lamq;	ib	FOX_SLEEP
	f	Lamq;	ic	FOX_SNIFF
	f	Lamq;	id	FOX_SPIT
	f	Lamq;	ie	FOX_TELEPORT
	f	Lamq;	if	SUSPICIOUS_SAND_BREAK
	f	Lamq;	ig	SUSPICIOUS_SAND_STEP
	f	Lamq;	ih	SUSPICIOUS_SAND_PLACE
	f	Lamq;	ii	SUSPICIOUS_SAND_HIT
	f	Lamq;	ij	SUSPICIOUS_SAND_FALL
	f	Lamq;	ik	FROGLIGHT_BREAK
	f	Lamq;	il	FROGLIGHT_FALL
	f	Lamq;	im	FROGLIGHT_HIT
	f	Lamq;	in	FROGLIGHT_PLACE
	f	Lamq;	io	FROGLIGHT_STEP
	f	Lamq;	ip	FROGSPAWNSTEP
	f	Lamq;	iq	FROGSPAWN_BREAK
	f	Lamq;	ir	FROGSPAWN_FALL
	f	Lamq;	is	FROGSPAWN_HATCH
	f	Lamq;	it	FROGSPAWN_HIT
	f	Lamq;	iu	FROGSPAWN_PLACE
	f	Lamq;	iv	FROG_AMBIENT
	f	Lamq;	iw	FROG_DEATH
	f	Lamq;	ix	FROG_EAT
	f	Lamq;	iy	FROG_HURT
	f	Lamq;	iz	FROG_LAY_SPAWN
	f	Lamq;	jA	GOAT_PREPARE_RAM
	f	Lamq;	jB	GOAT_RAM_IMPACT
	f	Lamq;	jC	GOAT_HORN_BREAK
	f	Lamq;	jD	GOAT_HORN_PLAY
	f	Lamq;	jE	GOAT_SCREAMING_AMBIENT
	f	Lamq;	jF	GOAT_SCREAMING_DEATH
	f	Lamq;	jG	GOAT_SCREAMING_EAT
	f	Lamq;	jH	GOAT_SCREAMING_HURT
	f	Lamq;	jI	GOAT_SCREAMING_LONG_JUMP
	f	Lamq;	jJ	GOAT_SCREAMING_MILK
	f	Lamq;	jK	GOAT_SCREAMING_PREPARE_RAM
	f	Lamq;	jL	GOAT_SCREAMING_RAM_IMPACT
	f	Lhd$c;	j	AMBIENT_BASALT_DELTAS_LOOP
	f	Lamq;	jM	GOAT_SCREAMING_HORN_BREAK
	f	Lamq;	jN	GOAT_STEP
	f	Lamq;	jO	GRASS_BREAK
	f	Lamq;	jP	GRASS_FALL
	f	Lamq;	jQ	GRASS_HIT
	f	Lamq;	jR	GRASS_PLACE
	f	Lamq;	jS	GRASS_STEP
	f	Lamq;	jT	GRAVEL_BREAK
	f	Lamq;	jU	GRAVEL_FALL
	f	Lamq;	jV	GRAVEL_HIT
	f	Lamq;	jW	GRAVEL_PLACE
	f	Lamq;	jX	GRAVEL_STEP
	f	Lamq;	jY	GRINDSTONE_USE
	f	Lamq;	jZ	GROWING_PLANT_CROP
	f	Lamq;	ja	GILDED_BLACKSTONE_BREAK
	f	Lamq;	jb	GILDED_BLACKSTONE_FALL
	f	Lamq;	jc	GILDED_BLACKSTONE_HIT
	f	Lamq;	jd	GILDED_BLACKSTONE_PLACE
	f	Lamq;	je	GILDED_BLACKSTONE_STEP
	f	Lamq;	jf	GLASS_BREAK
	f	Lamq;	jg	GLASS_FALL
	f	Lamq;	jh	GLASS_HIT
	f	Lamq;	ji	GLASS_PLACE
	f	Lamq;	jj	GLASS_STEP
	f	Lamq;	jk	GLOW_INK_SAC_USE
	f	Lamq;	jl	GLOW_ITEM_FRAME_ADD_ITEM
	f	Lamq;	jm	GLOW_ITEM_FRAME_BREAK
	f	Lamq;	jn	GLOW_ITEM_FRAME_PLACE
	f	Lamq;	jo	GLOW_ITEM_FRAME_REMOVE_ITEM
	f	Lamq;	jp	GLOW_ITEM_FRAME_ROTATE_ITEM
	f	Lamq;	jq	GLOW_SQUID_AMBIENT
	f	Lamq;	jr	GLOW_SQUID_DEATH
	f	Lamq;	js	GLOW_SQUID_HURT
	f	Lamq;	jt	GLOW_SQUID_SQUIRT
	f	Lamq;	ju	GOAT_AMBIENT
	f	Lamq;	jv	GOAT_DEATH
	f	Lamq;	jw	GOAT_EAT
	f	Lamq;	jx	GOAT_HURT
	f	Lamq;	jy	GOAT_LONG_JUMP
	f	Lamq;	jz	GOAT_MILK
	f	Lamq;	kA	BAMBOO_WOOD_HANGING_SIGN_HIT
	f	Lamq;	kB	BAMBOO_WOOD_HANGING_SIGN_PLACE
	f	Lamq;	kC	HOE_TILL
	f	Lamq;	kD	HOGLIN_AMBIENT
	f	Lamq;	kE	HOGLIN_ANGRY
	f	Lamq;	kF	HOGLIN_ATTACK
	f	Lamq;	kG	HOGLIN_CONVERTED_TO_ZOMBIFIED
	f	Lamq;	kH	HOGLIN_DEATH
	f	Lamq;	kI	HOGLIN_HURT
	f	Lamq;	kJ	HOGLIN_RETREAT
	f	Lamq;	kK	HOGLIN_STEP
	f	Lamq;	kL	HONEY_BLOCK_BREAK
	f	Lhd$c;	k	AMBIENT_BASALT_DELTAS_MOOD
	f	Lamq;	kM	HONEY_BLOCK_FALL
	f	Lamq;	kN	HONEY_BLOCK_HIT
	f	Lamq;	kO	HONEY_BLOCK_PLACE
	f	Lamq;	kP	HONEY_BLOCK_SLIDE
	f	Lamq;	kQ	HONEY_BLOCK_STEP
	f	Lamq;	kR	HONEYCOMB_WAX_ON
	f	Lamq;	kS	HONEY_DRINK
	f	I	kT	GOAT_HORN_VARIANT_COUNT
	f	Lcom/google/common/collect/ImmutableList;	kU	GOAT_HORN_SOUND_VARIANTS
	f	Lamq;	kV	HORSE_AMBIENT
	f	Lamq;	kW	HORSE_ANGRY
	f	Lamq;	kX	HORSE_ARMOR
	f	Lamq;	kY	HORSE_BREATHE
	f	Lamq;	kZ	HORSE_DEATH
	f	Lamq;	ka	GUARDIAN_AMBIENT
	f	Lamq;	kb	GUARDIAN_AMBIENT_LAND
	f	Lamq;	kc	GUARDIAN_ATTACK
	f	Lamq;	kd	GUARDIAN_DEATH
	f	Lamq;	ke	GUARDIAN_DEATH_LAND
	f	Lamq;	kf	GUARDIAN_FLOP
	f	Lamq;	kg	GUARDIAN_HURT
	f	Lamq;	kh	GUARDIAN_HURT_LAND
	f	Lamq;	ki	HANGING_ROOTS_BREAK
	f	Lamq;	kj	HANGING_ROOTS_FALL
	f	Lamq;	kk	HANGING_ROOTS_HIT
	f	Lamq;	kl	HANGING_ROOTS_PLACE
	f	Lamq;	km	HANGING_ROOTS_STEP
	f	Lamq;	kn	HANGING_SIGN_STEP
	f	Lamq;	ko	HANGING_SIGN_BREAK
	f	Lamq;	kp	HANGING_SIGN_FALL
	f	Lamq;	kq	HANGING_SIGN_HIT
	f	Lamq;	kr	HANGING_SIGN_PLACE
	f	Lamq;	ks	NETHER_WOOD_HANGING_SIGN_STEP
	f	Lamq;	kt	NETHER_WOOD_HANGING_SIGN_BREAK
	f	Lamq;	ku	NETHER_WOOD_HANGING_SIGN_FALL
	f	Lamq;	kv	NETHER_WOOD_HANGING_SIGN_HIT
	f	Lamq;	kw	NETHER_WOOD_HANGING_SIGN_PLACE
	f	Lamq;	kx	BAMBOO_WOOD_HANGING_SIGN_STEP
	f	Lamq;	ky	BAMBOO_WOOD_HANGING_SIGN_BREAK
	f	Lamq;	kz	BAMBOO_WOOD_HANGING_SIGN_FALL
	f	Lamq;	lA	INK_SAC_USE
	f	Lamq;	lB	IRON_DOOR_CLOSE
	f	Lamq;	lC	IRON_DOOR_OPEN
	f	Lamq;	lD	IRON_GOLEM_ATTACK
	f	Lamq;	lE	IRON_GOLEM_DAMAGE
	f	Lamq;	lF	IRON_GOLEM_DEATH
	f	Lamq;	lG	IRON_GOLEM_HURT
	f	Lamq;	lH	IRON_GOLEM_REPAIR
	f	Lamq;	lI	IRON_GOLEM_STEP
	f	Lamq;	lJ	IRON_TRAPDOOR_CLOSE
	f	Lamq;	lK	IRON_TRAPDOOR_OPEN
	f	Lamq;	lL	ITEM_FRAME_ADD_ITEM
	f	Lhd$c;	l	AMBIENT_CRIMSON_FOREST_ADDITIONS
	f	Lamq;	lM	ITEM_FRAME_BREAK
	f	Lamq;	lN	ITEM_FRAME_PLACE
	f	Lamq;	lO	ITEM_FRAME_REMOVE_ITEM
	f	Lamq;	lP	ITEM_FRAME_ROTATE_ITEM
	f	Lamq;	lQ	ITEM_BREAK
	f	Lamq;	lR	ITEM_PICKUP
	f	Lamq;	lS	LADDER_BREAK
	f	Lamq;	lT	LADDER_FALL
	f	Lamq;	lU	LADDER_HIT
	f	Lamq;	lV	LADDER_PLACE
	f	Lamq;	lW	LADDER_STEP
	f	Lamq;	lX	LANTERN_BREAK
	f	Lamq;	lY	LANTERN_FALL
	f	Lamq;	lZ	LANTERN_HIT
	f	Lamq;	la	HORSE_EAT
	f	Lamq;	lb	HORSE_GALLOP
	f	Lamq;	lc	HORSE_HURT
	f	Lamq;	ld	HORSE_JUMP
	f	Lamq;	le	HORSE_LAND
	f	Lamq;	lf	HORSE_SADDLE
	f	Lamq;	lg	HORSE_STEP
	f	Lamq;	lh	HORSE_STEP_WOOD
	f	Lamq;	li	HOSTILE_BIG_FALL
	f	Lamq;	lj	HOSTILE_DEATH
	f	Lamq;	lk	HOSTILE_HURT
	f	Lamq;	ll	HOSTILE_SMALL_FALL
	f	Lamq;	lm	HOSTILE_SPLASH
	f	Lamq;	ln	HOSTILE_SWIM
	f	Lamq;	lo	HUSK_AMBIENT
	f	Lamq;	lp	HUSK_CONVERTED_TO_ZOMBIE
	f	Lamq;	lq	HUSK_DEATH
	f	Lamq;	lr	HUSK_HURT
	f	Lamq;	ls	HUSK_STEP
	f	Lamq;	lt	ILLUSIONER_AMBIENT
	f	Lamq;	lu	ILLUSIONER_CAST_SPELL
	f	Lamq;	lv	ILLUSIONER_DEATH
	f	Lamq;	lw	ILLUSIONER_HURT
	f	Lamq;	lx	ILLUSIONER_MIRROR_MOVE
	f	Lamq;	ly	ILLUSIONER_PREPARE_BLINDNESS
	f	Lamq;	lz	ILLUSIONER_PREPARE_MIRROR
	f	Lamq;	mA	LODESTONE_HIT
	f	Lamq;	mB	LODESTONE_FALL
	f	Lamq;	mC	LODESTONE_COMPASS_LOCK
	f	Lamq;	mD	MAGMA_CUBE_DEATH
	f	Lamq;	mE	MAGMA_CUBE_HURT
	f	Lamq;	mF	MAGMA_CUBE_HURT_SMALL
	f	Lamq;	mG	MAGMA_CUBE_JUMP
	f	Lamq;	mH	MAGMA_CUBE_SQUISH
	f	Lamq;	mI	MAGMA_CUBE_SQUISH_SMALL
	f	Lamq;	mJ	MANGROVE_ROOTS_BREAK
	f	Lamq;	mK	MANGROVE_ROOTS_FALL
	f	Lamq;	mL	MANGROVE_ROOTS_HIT
	f	Lhd$c;	m	AMBIENT_CRIMSON_FOREST_LOOP
	f	Lamq;	mM	MANGROVE_ROOTS_PLACE
	f	Lamq;	mN	MANGROVE_ROOTS_STEP
	f	Lamq;	mO	MEDIUM_AMETHYST_BUD_BREAK
	f	Lamq;	mP	MEDIUM_AMETHYST_BUD_PLACE
	f	Lamq;	mQ	METAL_BREAK
	f	Lamq;	mR	METAL_FALL
	f	Lamq;	mS	METAL_HIT
	f	Lamq;	mT	METAL_PLACE
	f	Lamq;	mU	METAL_PRESSURE_PLATE_CLICK_OFF
	f	Lamq;	mV	METAL_PRESSURE_PLATE_CLICK_ON
	f	Lamq;	mW	METAL_STEP
	f	Lamq;	mX	MINECART_INSIDE_UNDERWATER
	f	Lamq;	mY	MINECART_INSIDE
	f	Lamq;	mZ	MINECART_RIDING
	f	Lamq;	ma	LANTERN_PLACE
	f	Lamq;	mb	LANTERN_STEP
	f	Lamq;	mc	LARGE_AMETHYST_BUD_BREAK
	f	Lamq;	md	LARGE_AMETHYST_BUD_PLACE
	f	Lamq;	me	LAVA_AMBIENT
	f	Lamq;	mf	LAVA_EXTINGUISH
	f	Lamq;	mg	LAVA_POP
	f	Lamq;	mh	LEASH_KNOT_BREAK
	f	Lamq;	mi	LEASH_KNOT_PLACE
	f	Lamq;	mj	LEVER_CLICK
	f	Lamq;	mk	LIGHTNING_BOLT_IMPACT
	f	Lamq;	ml	LIGHTNING_BOLT_THUNDER
	f	Lamq;	mm	LINGERING_POTION_THROW
	f	Lamq;	mn	LLAMA_AMBIENT
	f	Lamq;	mo	LLAMA_ANGRY
	f	Lamq;	mp	LLAMA_CHEST
	f	Lamq;	mq	LLAMA_DEATH
	f	Lamq;	mr	LLAMA_EAT
	f	Lamq;	ms	LLAMA_HURT
	f	Lamq;	mt	LLAMA_SPIT
	f	Lamq;	mu	LLAMA_STEP
	f	Lamq;	mv	LLAMA_SWAG
	f	Lamq;	mw	MAGMA_CUBE_DEATH_SMALL
	f	Lamq;	mx	LODESTONE_BREAK
	f	Lamq;	my	LODESTONE_STEP
	f	Lamq;	mz	LODESTONE_PLACE
	f	Lamq;	nA	MUD_BRICKS_FALL
	f	Lamq;	nB	MUD_BRICKS_HIT
	f	Lamq;	nC	MUD_BRICKS_PLACE
	f	Lamq;	nD	MUD_BRICKS_STEP
	f	Lamq;	nE	MUDDY_MANGROVE_ROOTS_BREAK
	f	Lamq;	nF	MUDDY_MANGROVE_ROOTS_FALL
	f	Lamq;	nG	MUDDY_MANGROVE_ROOTS_HIT
	f	Lamq;	nH	MUDDY_MANGROVE_ROOTS_PLACE
	f	Lamq;	nI	MUDDY_MANGROVE_ROOTS_STEP
	f	Lamq;	nJ	MULE_AMBIENT
	f	Lamq;	nK	MULE_ANGRY
	f	Lamq;	nL	MULE_CHEST
	f	Lhd$c;	n	AMBIENT_CRIMSON_FOREST_MOOD
	f	Lamq;	nM	MULE_DEATH
	f	Lamq;	nN	MULE_EAT
	f	Lamq;	nO	MULE_HURT
	f	Lhd$c;	nP	MUSIC_CREATIVE
	f	Lhd$c;	nQ	MUSIC_CREDITS
	f	Lamq;	nR	MUSIC_DISC_5
	f	Lamq;	nS	MUSIC_DISC_11
	f	Lamq;	nT	MUSIC_DISC_13
	f	Lamq;	nU	MUSIC_DISC_BLOCKS
	f	Lamq;	nV	MUSIC_DISC_CAT
	f	Lamq;	nW	MUSIC_DISC_CHIRP
	f	Lamq;	nX	MUSIC_DISC_FAR
	f	Lamq;	nY	MUSIC_DISC_MALL
	f	Lamq;	nZ	MUSIC_DISC_MELLOHI
	f	Lamq;	na	MOOSHROOM_CONVERT
	f	Lamq;	nb	MOOSHROOM_EAT
	f	Lamq;	nc	MOOSHROOM_MILK
	f	Lamq;	nd	MOOSHROOM_MILK_SUSPICIOUSLY
	f	Lamq;	ne	MOOSHROOM_SHEAR
	f	Lamq;	nf	MOSS_CARPET_BREAK
	f	Lamq;	ng	MOSS_CARPET_FALL
	f	Lamq;	nh	MOSS_CARPET_HIT
	f	Lamq;	ni	MOSS_CARPET_PLACE
	f	Lamq;	nj	MOSS_CARPET_STEP
	f	Lamq;	nk	PINK_PETALS_BREAK
	f	Lamq;	nl	PINK_PETALS_FALL
	f	Lamq;	nm	PINK_PETALS_HIT
	f	Lamq;	nn	PINK_PETALS_PLACE
	f	Lamq;	no	PINK_PETALS_STEP
	f	Lamq;	np	MOSS_BREAK
	f	Lamq;	nq	MOSS_FALL
	f	Lamq;	nr	MOSS_HIT
	f	Lamq;	ns	MOSS_PLACE
	f	Lamq;	nt	MOSS_STEP
	f	Lamq;	nu	MUD_BREAK
	f	Lamq;	nv	MUD_FALL
	f	Lamq;	nw	MUD_HIT
	f	Lamq;	nx	MUD_PLACE
	f	Lamq;	ny	MUD_STEP
	f	Lamq;	nz	MUD_BRICKS_BREAK
	f	Lhd$c;	oA	MUSIC_BIOME_STONY_PEAKS
	f	Lhd$c;	oB	MUSIC_BIOME_WARPED_FOREST
	f	Lhd$c;	oC	MUSIC_UNDER_WATER
	f	Lamq;	oD	NETHER_BRICKS_BREAK
	f	Lamq;	oE	NETHER_BRICKS_STEP
	f	Lamq;	oF	NETHER_BRICKS_PLACE
	f	Lamq;	oG	NETHER_BRICKS_HIT
	f	Lamq;	oH	NETHER_BRICKS_FALL
	f	Lamq;	oI	NETHER_WART_BREAK
	f	Lamq;	oJ	NETHER_WART_PLANTED
	f	Lamq;	oK	NETHER_WOOD_BREAK
	f	Lamq;	oL	NETHER_WOOD_FALL
	f	Lhd$c;	o	AMBIENT_NETHER_WASTES_ADDITIONS
	f	Lamq;	oM	NETHER_WOOD_HIT
	f	Lamq;	oN	NETHER_WOOD_PLACE
	f	Lamq;	oO	NETHER_WOOD_STEP
	f	Lamq;	oP	NETHER_WOOD_DOOR_CLOSE
	f	Lamq;	oQ	NETHER_WOOD_DOOR_OPEN
	f	Lamq;	oR	NETHER_WOOD_TRAPDOOR_CLOSE
	f	Lamq;	oS	NETHER_WOOD_TRAPDOOR_OPEN
	f	Lamq;	oT	NETHER_WOOD_BUTTON_CLICK_OFF
	f	Lamq;	oU	NETHER_WOOD_BUTTON_CLICK_ON
	f	Lamq;	oV	NETHER_WOOD_PRESSURE_PLATE_CLICK_OFF
	f	Lamq;	oW	NETHER_WOOD_PRESSURE_PLATE_CLICK_ON
	f	Lamq;	oX	NETHER_WOOD_FENCE_GATE_CLOSE
	f	Lamq;	oY	NETHER_WOOD_FENCE_GATE_OPEN
	f	Lamq;	oZ	EMPTY
	f	Lamq;	oa	MUSIC_DISC_PIGSTEP
	f	Lamq;	ob	MUSIC_DISC_STAL
	f	Lamq;	oc	MUSIC_DISC_STRAD
	f	Lamq;	od	MUSIC_DISC_WAIT
	f	Lamq;	oe	MUSIC_DISC_WARD
	f	Lamq;	of	MUSIC_DISC_OTHERSIDE
	f	Lhd$c;	og	MUSIC_DRAGON
	f	Lhd$c;	oh	MUSIC_END
	f	Lhd$c;	oi	MUSIC_GAME
	f	Lhd$c;	oj	MUSIC_MENU
	f	Lhd$c;	ok	MUSIC_BIOME_BASALT_DELTAS
	f	Lhd$c;	ol	MUSIC_BIOME_CRIMSON_FOREST
	f	Lhd$c;	om	MUSIC_BIOME_DEEP_DARK
	f	Lhd$c;	on	MUSIC_BIOME_DRIPSTONE_CAVES
	f	Lhd$c;	oo	MUSIC_BIOME_GROVE
	f	Lhd$c;	op	MUSIC_BIOME_JAGGED_PEAKS
	f	Lhd$c;	oq	MUSIC_BIOME_LUSH_CAVES
	f	Lhd$c;	or	MUSIC_BIOME_SWAMP
	f	Lhd$c;	os	MUSIC_BIOME_JUNGLE_AND_FOREST
	f	Lhd$c;	ot	MUSIC_BIOME_OLD_GROWTH_TAIGA
	f	Lhd$c;	ou	MUSIC_BIOME_MEADOW
	f	Lhd$c;	ov	MUSIC_BIOME_CHERRY_GROVE
	f	Lhd$c;	ow	MUSIC_BIOME_NETHER_WASTES
	f	Lhd$c;	ox	MUSIC_BIOME_FROZEN_PEAKS
	f	Lhd$c;	oy	MUSIC_BIOME_SNOWY_SLOPES
	f	Lhd$c;	oz	MUSIC_BIOME_SOUL_SAND_VALLEY
	f	Lamq;	pA	WEEPING_VINES_STEP
	f	Lamq;	pB	WEEPING_VINES_PLACE
	f	Lamq;	pC	WEEPING_VINES_HIT
	f	Lamq;	pD	WEEPING_VINES_FALL
	f	Lamq;	pE	WART_BLOCK_BREAK
	f	Lamq;	pF	WART_BLOCK_STEP
	f	Lamq;	pG	WART_BLOCK_PLACE
	f	Lamq;	pH	WART_BLOCK_HIT
	f	Lamq;	pI	WART_BLOCK_FALL
	f	Lamq;	pJ	NETHERITE_BLOCK_BREAK
	f	Lamq;	pK	NETHERITE_BLOCK_STEP
	f	Lamq;	pL	NETHERITE_BLOCK_PLACE
	f	Lhd$c;	p	AMBIENT_NETHER_WASTES_LOOP
	f	Lamq;	pM	NETHERITE_BLOCK_HIT
	f	Lamq;	pN	NETHERITE_BLOCK_FALL
	f	Lamq;	pO	NETHERRACK_BREAK
	f	Lamq;	pP	NETHERRACK_STEP
	f	Lamq;	pQ	NETHERRACK_PLACE
	f	Lamq;	pR	NETHERRACK_HIT
	f	Lamq;	pS	NETHERRACK_FALL
	f	Lhd$c;	pT	NOTE_BLOCK_BASEDRUM
	f	Lhd$c;	pU	NOTE_BLOCK_BASS
	f	Lhd$c;	pV	NOTE_BLOCK_BELL
	f	Lhd$c;	pW	NOTE_BLOCK_CHIME
	f	Lhd$c;	pX	NOTE_BLOCK_FLUTE
	f	Lhd$c;	pY	NOTE_BLOCK_GUITAR
	f	Lhd$c;	pZ	NOTE_BLOCK_HARP
	f	Lamq;	pa	PACKED_MUD_BREAK
	f	Lamq;	pb	PACKED_MUD_FALL
	f	Lamq;	pc	PACKED_MUD_HIT
	f	Lamq;	pd	PACKED_MUD_PLACE
	f	Lamq;	pe	PACKED_MUD_STEP
	f	Lamq;	pf	STEM_BREAK
	f	Lamq;	pg	STEM_STEP
	f	Lamq;	ph	STEM_PLACE
	f	Lamq;	pi	STEM_HIT
	f	Lamq;	pj	STEM_FALL
	f	Lamq;	pk	NYLIUM_BREAK
	f	Lamq;	pl	NYLIUM_STEP
	f	Lamq;	pm	NYLIUM_PLACE
	f	Lamq;	pn	NYLIUM_HIT
	f	Lamq;	po	NYLIUM_FALL
	f	Lamq;	pp	NETHER_SPROUTS_BREAK
	f	Lamq;	pq	NETHER_SPROUTS_STEP
	f	Lamq;	pr	NETHER_SPROUTS_PLACE
	f	Lamq;	ps	NETHER_SPROUTS_HIT
	f	Lamq;	pt	NETHER_SPROUTS_FALL
	f	Lamq;	pu	FUNGUS_BREAK
	f	Lamq;	pv	FUNGUS_STEP
	f	Lamq;	pw	FUNGUS_PLACE
	f	Lamq;	px	FUNGUS_HIT
	f	Lamq;	py	FUNGUS_FALL
	f	Lamq;	pz	WEEPING_VINES_BREAK
	f	Lamq;	qA	PANDA_CANT_BREED
	f	Lamq;	qB	PANDA_AGGRESSIVE_AMBIENT
	f	Lamq;	qC	PANDA_WORRIED_AMBIENT
	f	Lamq;	qD	PANDA_HURT
	f	Lamq;	qE	PANDA_BITE
	f	Lamq;	qF	PARROT_AMBIENT
	f	Lamq;	qG	PARROT_DEATH
	f	Lamq;	qH	PARROT_EAT
	f	Lamq;	qI	PARROT_FLY
	f	Lamq;	qJ	PARROT_HURT
	f	Lamq;	qK	PARROT_IMITATE_BLAZE
	f	Lamq;	qL	PARROT_IMITATE_CREEPER
	f	Lhd$c;	q	AMBIENT_NETHER_WASTES_MOOD
	f	Lamq;	qM	PARROT_IMITATE_DROWNED
	f	Lamq;	qN	PARROT_IMITATE_ELDER_GUARDIAN
	f	Lamq;	qO	PARROT_IMITATE_ENDER_DRAGON
	f	Lamq;	qP	PARROT_IMITATE_ENDERMITE
	f	Lamq;	qQ	PARROT_IMITATE_EVOKER
	f	Lamq;	qR	PARROT_IMITATE_GHAST
	f	Lamq;	qS	PARROT_IMITATE_GUARDIAN
	f	Lamq;	qT	PARROT_IMITATE_HOGLIN
	f	Lamq;	qU	PARROT_IMITATE_HUSK
	f	Lamq;	qV	PARROT_IMITATE_ILLUSIONER
	f	Lamq;	qW	PARROT_IMITATE_MAGMA_CUBE
	f	Lamq;	qX	PARROT_IMITATE_PHANTOM
	f	Lamq;	qY	PARROT_IMITATE_PIGLIN
	f	Lamq;	qZ	PARROT_IMITATE_PIGLIN_BRUTE
	f	Lhd$c;	qa	NOTE_BLOCK_HAT
	f	Lhd$c;	qb	NOTE_BLOCK_PLING
	f	Lhd$c;	qc	NOTE_BLOCK_SNARE
	f	Lhd$c;	qd	NOTE_BLOCK_XYLOPHONE
	f	Lhd$c;	qe	NOTE_BLOCK_IRON_XYLOPHONE
	f	Lhd$c;	qf	NOTE_BLOCK_COW_BELL
	f	Lhd$c;	qg	NOTE_BLOCK_DIDGERIDOO
	f	Lhd$c;	qh	NOTE_BLOCK_BIT
	f	Lhd$c;	qi	NOTE_BLOCK_BANJO
	f	Lhd$c;	qj	NOTE_BLOCK_IMITATE_ZOMBIE
	f	Lhd$c;	qk	NOTE_BLOCK_IMITATE_SKELETON
	f	Lhd$c;	ql	NOTE_BLOCK_IMITATE_CREEPER
	f	Lhd$c;	qm	NOTE_BLOCK_IMITATE_ENDER_DRAGON
	f	Lhd$c;	qn	NOTE_BLOCK_IMITATE_WITHER_SKELETON
	f	Lhd$c;	qo	NOTE_BLOCK_IMITATE_PIGLIN
	f	Lamq;	qp	OCELOT_HURT
	f	Lamq;	qq	OCELOT_AMBIENT
	f	Lamq;	qr	OCELOT_DEATH
	f	Lamq;	qs	PAINTING_BREAK
	f	Lamq;	qt	PAINTING_PLACE
	f	Lamq;	qu	PANDA_PRE_SNEEZE
	f	Lamq;	qv	PANDA_SNEEZE
	f	Lamq;	qw	PANDA_AMBIENT
	f	Lamq;	qx	PANDA_DEATH
	f	Lamq;	qy	PANDA_EAT
	f	Lamq;	qz	PANDA_STEP
	f	Lamq;	rA	PIG_HURT
	f	Lamq;	rB	PIG_SADDLE
	f	Lamq;	rC	PIG_STEP
	f	Lamq;	rD	PIGLIN_ADMIRING_ITEM
	f	Lamq;	rE	PIGLIN_AMBIENT
	f	Lamq;	rF	PIGLIN_ANGRY
	f	Lamq;	rG	PIGLIN_CELEBRATE
	f	Lamq;	rH	PIGLIN_DEATH
	f	Lamq;	rI	PIGLIN_JEALOUS
	f	Lamq;	rJ	PIGLIN_HURT
	f	Lamq;	rK	PIGLIN_RETREAT
	f	Lamq;	rL	PIGLIN_STEP
	f	Lhd$c;	r	AMBIENT_SOUL_SAND_VALLEY_ADDITIONS
	f	Lamq;	rM	PIGLIN_CONVERTED_TO_ZOMBIFIED
	f	Lamq;	rN	PIGLIN_BRUTE_AMBIENT
	f	Lamq;	rO	PIGLIN_BRUTE_ANGRY
	f	Lamq;	rP	PIGLIN_BRUTE_DEATH
	f	Lamq;	rQ	PIGLIN_BRUTE_HURT
	f	Lamq;	rR	PIGLIN_BRUTE_STEP
	f	Lamq;	rS	PIGLIN_BRUTE_CONVERTED_TO_ZOMBIFIED
	f	Lamq;	rT	PILLAGER_AMBIENT
	f	Lamq;	rU	PILLAGER_CELEBRATE
	f	Lamq;	rV	PILLAGER_DEATH
	f	Lamq;	rW	PILLAGER_HURT
	f	Lamq;	rX	PISTON_CONTRACT
	f	Lamq;	rY	PISTON_EXTEND
	f	Lamq;	rZ	PLAYER_ATTACK_CRIT
	f	Lamq;	ra	PARROT_IMITATE_PILLAGER
	f	Lamq;	rb	PARROT_IMITATE_RAVAGER
	f	Lamq;	rc	PARROT_IMITATE_SHULKER
	f	Lamq;	rd	PARROT_IMITATE_SILVERFISH
	f	Lamq;	re	PARROT_IMITATE_SKELETON
	f	Lamq;	rf	PARROT_IMITATE_SLIME
	f	Lamq;	rg	PARROT_IMITATE_SPIDER
	f	Lamq;	rh	PARROT_IMITATE_STRAY
	f	Lamq;	ri	PARROT_IMITATE_VEX
	f	Lamq;	rj	PARROT_IMITATE_VINDICATOR
	f	Lamq;	rk	PARROT_IMITATE_WARDEN
	f	Lamq;	rl	PARROT_IMITATE_WITCH
	f	Lamq;	rm	PARROT_IMITATE_WITHER
	f	Lamq;	rn	PARROT_IMITATE_WITHER_SKELETON
	f	Lamq;	ro	PARROT_IMITATE_ZOGLIN
	f	Lamq;	rp	PARROT_IMITATE_ZOMBIE
	f	Lamq;	rq	PARROT_IMITATE_ZOMBIE_VILLAGER
	f	Lamq;	rr	PARROT_STEP
	f	Lamq;	rs	PHANTOM_AMBIENT
	f	Lamq;	rt	PHANTOM_BITE
	f	Lamq;	ru	PHANTOM_DEATH
	f	Lamq;	rv	PHANTOM_FLAP
	f	Lamq;	rw	PHANTOM_HURT
	f	Lamq;	rx	PHANTOM_SWOOP
	f	Lamq;	ry	PIG_AMBIENT
	f	Lamq;	rz	PIG_DEATH
	f	Lamq;	sA	POLISHED_DEEPSLATE_FALL
	f	Lamq;	sB	POLISHED_DEEPSLATE_HIT
	f	Lamq;	sC	POLISHED_DEEPSLATE_PLACE
	f	Lamq;	sD	POLISHED_DEEPSLATE_STEP
	f	Lamq;	sE	PORTAL_AMBIENT
	f	Lamq;	sF	PORTAL_TRAVEL
	f	Lamq;	sG	PORTAL_TRIGGER
	f	Lamq;	sH	POWDER_SNOW_BREAK
	f	Lamq;	sI	POWDER_SNOW_FALL
	f	Lamq;	sJ	POWDER_SNOW_HIT
	f	Lamq;	sK	POWDER_SNOW_PLACE
	f	Lamq;	sL	POWDER_SNOW_STEP
	f	Lhd$c;	s	AMBIENT_SOUL_SAND_VALLEY_LOOP
	f	Lamq;	sM	PUFFER_FISH_AMBIENT
	f	Lamq;	sN	PUFFER_FISH_BLOW_OUT
	f	Lamq;	sO	PUFFER_FISH_BLOW_UP
	f	Lamq;	sP	PUFFER_FISH_DEATH
	f	Lamq;	sQ	PUFFER_FISH_FLOP
	f	Lamq;	sR	PUFFER_FISH_HURT
	f	Lamq;	sS	PUFFER_FISH_STING
	f	Lamq;	sT	PUMPKIN_CARVE
	f	Lamq;	sU	RABBIT_AMBIENT
	f	Lamq;	sV	RABBIT_ATTACK
	f	Lamq;	sW	RABBIT_DEATH
	f	Lamq;	sX	RABBIT_HURT
	f	Lamq;	sY	RABBIT_JUMP
	f	Lhd$c;	sZ	RAID_HORN
	f	Lamq;	sa	PLAYER_ATTACK_KNOCKBACK
	f	Lamq;	sb	PLAYER_ATTACK_NODAMAGE
	f	Lamq;	sc	PLAYER_ATTACK_STRONG
	f	Lamq;	sd	PLAYER_ATTACK_SWEEP
	f	Lamq;	se	PLAYER_ATTACK_WEAK
	f	Lamq;	sf	PLAYER_BIG_FALL
	f	Lamq;	sg	PLAYER_BREATH
	f	Lamq;	sh	PLAYER_BURP
	f	Lamq;	si	PLAYER_DEATH
	f	Lamq;	sj	PLAYER_HURT
	f	Lamq;	sk	PLAYER_HURT_DROWN
	f	Lamq;	sl	PLAYER_HURT_FREEZE
	f	Lamq;	sm	PLAYER_HURT_ON_FIRE
	f	Lamq;	sn	PLAYER_HURT_SWEET_BERRY_BUSH
	f	Lamq;	so	PLAYER_LEVELUP
	f	Lamq;	sp	PLAYER_SMALL_FALL
	f	Lamq;	sq	PLAYER_SPLASH
	f	Lamq;	sr	PLAYER_SPLASH_HIGH_SPEED
	f	Lamq;	ss	PLAYER_SWIM
	f	Lamq;	st	POLAR_BEAR_AMBIENT
	f	Lamq;	su	POLAR_BEAR_AMBIENT_BABY
	f	Lamq;	sv	POLAR_BEAR_DEATH
	f	Lamq;	sw	POLAR_BEAR_HURT
	f	Lamq;	sx	POLAR_BEAR_STEP
	f	Lamq;	sy	POLAR_BEAR_WARNING
	f	Lamq;	sz	POLISHED_DEEPSLATE_BREAK
	f	Lamq;	tA	ROOTED_DIRT_PLACE
	f	Lamq;	tB	ROOTED_DIRT_STEP
	f	Lamq;	tC	SALMON_AMBIENT
	f	Lamq;	tD	SALMON_DEATH
	f	Lamq;	tE	SALMON_FLOP
	f	Lamq;	tF	SALMON_HURT
	f	Lamq;	tG	SAND_BREAK
	f	Lamq;	tH	SAND_FALL
	f	Lamq;	tI	SAND_HIT
	f	Lamq;	tJ	SAND_PLACE
	f	Lamq;	tK	SAND_STEP
	f	Lamq;	tL	SCAFFOLDING_BREAK
	f	Lhd$c;	t	AMBIENT_SOUL_SAND_VALLEY_MOOD
	f	Lamq;	tM	SCAFFOLDING_FALL
	f	Lamq;	tN	SCAFFOLDING_HIT
	f	Lamq;	tO	SCAFFOLDING_PLACE
	f	Lamq;	tP	SCAFFOLDING_STEP
	f	Lamq;	tQ	SCULK_BLOCK_SPREAD
	f	Lamq;	tR	SCULK_BLOCK_CHARGE
	f	Lamq;	tS	SCULK_BLOCK_BREAK
	f	Lamq;	tT	SCULK_BLOCK_FALL
	f	Lamq;	tU	SCULK_BLOCK_HIT
	f	Lamq;	tV	SCULK_BLOCK_PLACE
	f	Lamq;	tW	SCULK_BLOCK_STEP
	f	Lamq;	tX	SCULK_CATALYST_BLOOM
	f	Lamq;	tY	SCULK_CATALYST_BREAK
	f	Lamq;	tZ	SCULK_CATALYST_FALL
	f	Lamq;	ta	RAVAGER_AMBIENT
	f	Lamq;	tb	RAVAGER_ATTACK
	f	Lamq;	tc	RAVAGER_CELEBRATE
	f	Lamq;	td	RAVAGER_DEATH
	f	Lamq;	te	RAVAGER_HURT
	f	Lamq;	tf	RAVAGER_STEP
	f	Lamq;	tg	RAVAGER_STUNNED
	f	Lamq;	th	RAVAGER_ROAR
	f	Lamq;	ti	NETHER_GOLD_ORE_BREAK
	f	Lamq;	tj	NETHER_GOLD_ORE_FALL
	f	Lamq;	tk	NETHER_GOLD_ORE_HIT
	f	Lamq;	tl	NETHER_GOLD_ORE_PLACE
	f	Lamq;	tm	NETHER_GOLD_ORE_STEP
	f	Lamq;	tn	NETHER_ORE_BREAK
	f	Lamq;	to	NETHER_ORE_FALL
	f	Lamq;	tp	NETHER_ORE_HIT
	f	Lamq;	tq	NETHER_ORE_PLACE
	f	Lamq;	tr	NETHER_ORE_STEP
	f	Lamq;	ts	REDSTONE_TORCH_BURNOUT
	f	Lamq;	tt	RESPAWN_ANCHOR_AMBIENT
	f	Lamq;	tu	RESPAWN_ANCHOR_CHARGE
	f	Lhd$c;	tv	RESPAWN_ANCHOR_DEPLETE
	f	Lamq;	tw	RESPAWN_ANCHOR_SET_SPAWN
	f	Lamq;	tx	ROOTED_DIRT_BREAK
	f	Lamq;	ty	ROOTED_DIRT_FALL
	f	Lamq;	tz	ROOTED_DIRT_HIT
	f	Lamq;	uA	SHIELD_BLOCK
	f	Lamq;	uB	SHIELD_BREAK
	f	Lamq;	uC	SHROOMLIGHT_BREAK
	f	Lamq;	uD	SHROOMLIGHT_STEP
	f	Lamq;	uE	SHROOMLIGHT_PLACE
	f	Lamq;	uF	SHROOMLIGHT_HIT
	f	Lamq;	uG	SHROOMLIGHT_FALL
	f	Lamq;	uH	SHOVEL_FLATTEN
	f	Lamq;	uI	SHULKER_AMBIENT
	f	Lamq;	uJ	SHULKER_BOX_CLOSE
	f	Lamq;	uK	SHULKER_BOX_OPEN
	f	Lamq;	uL	SHULKER_BULLET_HIT
	f	Lhd$c;	u	AMBIENT_WARPED_FOREST_ADDITIONS
	f	Lamq;	uM	SHULKER_BULLET_HURT
	f	Lamq;	uN	SHULKER_CLOSE
	f	Lamq;	uO	SHULKER_DEATH
	f	Lamq;	uP	SHULKER_HURT
	f	Lamq;	uQ	SHULKER_HURT_CLOSED
	f	Lamq;	uR	SHULKER_OPEN
	f	Lamq;	uS	SHULKER_SHOOT
	f	Lamq;	uT	SHULKER_TELEPORT
	f	Lamq;	uU	SILVERFISH_AMBIENT
	f	Lamq;	uV	SILVERFISH_DEATH
	f	Lamq;	uW	SILVERFISH_HURT
	f	Lamq;	uX	SILVERFISH_STEP
	f	Lamq;	uY	SKELETON_AMBIENT
	f	Lamq;	uZ	SKELETON_CONVERTED_TO_STRAY
	f	Lamq;	ua	SCULK_CATALYST_HIT
	f	Lamq;	ub	SCULK_CATALYST_PLACE
	f	Lamq;	uc	SCULK_CATALYST_STEP
	f	Lamq;	ud	SCULK_CLICKING
	f	Lamq;	ue	SCULK_CLICKING_STOP
	f	Lamq;	uf	SCULK_SENSOR_BREAK
	f	Lamq;	ug	SCULK_SENSOR_FALL
	f	Lamq;	uh	SCULK_SENSOR_HIT
	f	Lamq;	ui	SCULK_SENSOR_PLACE
	f	Lamq;	uj	SCULK_SENSOR_STEP
	f	Lamq;	uk	SCULK_SHRIEKER_BREAK
	f	Lamq;	ul	SCULK_SHRIEKER_FALL
	f	Lamq;	um	SCULK_SHRIEKER_HIT
	f	Lamq;	un	SCULK_SHRIEKER_PLACE
	f	Lamq;	uo	SCULK_SHRIEKER_SHRIEK
	f	Lamq;	up	SCULK_SHRIEKER_STEP
	f	Lamq;	uq	SCULK_VEIN_BREAK
	f	Lamq;	ur	SCULK_VEIN_FALL
	f	Lamq;	us	SCULK_VEIN_HIT
	f	Lamq;	ut	SCULK_VEIN_PLACE
	f	Lamq;	uu	SCULK_VEIN_STEP
	f	Lamq;	uv	SHEEP_AMBIENT
	f	Lamq;	uw	SHEEP_DEATH
	f	Lamq;	ux	SHEEP_HURT
	f	Lamq;	uy	SHEEP_SHEAR
	f	Lamq;	uz	SHEEP_STEP
	f	Lamq;	vA	SMALL_DRIPLEAF_HIT
	f	Lamq;	vB	SMALL_DRIPLEAF_PLACE
	f	Lamq;	vC	SMALL_DRIPLEAF_STEP
	f	Lamq;	vD	SOUL_SAND_BREAK
	f	Lamq;	vE	SOUL_SAND_STEP
	f	Lamq;	vF	SOUL_SAND_PLACE
	f	Lamq;	vG	SOUL_SAND_HIT
	f	Lamq;	vH	SOUL_SAND_FALL
	f	Lamq;	vI	SOUL_SOIL_BREAK
	f	Lamq;	vJ	SOUL_SOIL_STEP
	f	Lamq;	vK	SOUL_SOIL_PLACE
	f	Lamq;	vL	SOUL_SOIL_HIT
	f	Lhd$c;	v	AMBIENT_WARPED_FOREST_LOOP
	f	Lamq;	vM	SOUL_SOIL_FALL
	f	Lamq;	vN	SOUL_ESCAPE
	f	Lamq;	vO	SPORE_BLOSSOM_BREAK
	f	Lamq;	vP	SPORE_BLOSSOM_FALL
	f	Lamq;	vQ	SPORE_BLOSSOM_HIT
	f	Lamq;	vR	SPORE_BLOSSOM_PLACE
	f	Lamq;	vS	SPORE_BLOSSOM_STEP
	f	Lamq;	vT	STRIDER_AMBIENT
	f	Lamq;	vU	STRIDER_HAPPY
	f	Lamq;	vV	STRIDER_RETREAT
	f	Lamq;	vW	STRIDER_DEATH
	f	Lamq;	vX	STRIDER_HURT
	f	Lamq;	vY	STRIDER_STEP
	f	Lamq;	vZ	STRIDER_STEP_LAVA
	f	Lamq;	va	SKELETON_DEATH
	f	Lamq;	vb	SKELETON_HORSE_AMBIENT
	f	Lamq;	vc	SKELETON_HORSE_DEATH
	f	Lamq;	vd	SKELETON_HORSE_HURT
	f	Lamq;	ve	SKELETON_HORSE_SWIM
	f	Lamq;	vf	SKELETON_HORSE_AMBIENT_WATER
	f	Lamq;	vg	SKELETON_HORSE_GALLOP_WATER
	f	Lamq;	vh	SKELETON_HORSE_JUMP_WATER
	f	Lamq;	vi	SKELETON_HORSE_STEP_WATER
	f	Lamq;	vj	SKELETON_HURT
	f	Lamq;	vk	SKELETON_SHOOT
	f	Lamq;	vl	SKELETON_STEP
	f	Lamq;	vm	SLIME_ATTACK
	f	Lamq;	vn	SLIME_DEATH
	f	Lamq;	vo	SLIME_HURT
	f	Lamq;	vp	SLIME_JUMP
	f	Lamq;	vq	SLIME_SQUISH
	f	Lamq;	vr	SLIME_BLOCK_BREAK
	f	Lamq;	vs	SLIME_BLOCK_FALL
	f	Lamq;	vt	SLIME_BLOCK_HIT
	f	Lamq;	vu	SLIME_BLOCK_PLACE
	f	Lamq;	vv	SLIME_BLOCK_STEP
	f	Lamq;	vw	SMALL_AMETHYST_BUD_BREAK
	f	Lamq;	vx	SMALL_AMETHYST_BUD_PLACE
	f	Lamq;	vy	SMALL_DRIPLEAF_BREAK
	f	Lamq;	vz	SMALL_DRIPLEAF_FALL
	f	Lamq;	wA	SNOW_GOLEM_SHOOT
	f	Lamq;	wB	SNOW_GOLEM_SHEAR
	f	Lamq;	wC	SNOW_HIT
	f	Lamq;	wD	SNOW_PLACE
	f	Lamq;	wE	SNOW_STEP
	f	Lamq;	wF	SPIDER_AMBIENT
	f	Lamq;	wG	SPIDER_DEATH
	f	Lamq;	wH	SPIDER_HURT
	f	Lamq;	wI	SPIDER_STEP
	f	Lamq;	wJ	SPLASH_POTION_BREAK
	f	Lamq;	wK	SPLASH_POTION_THROW
	f	Lamq;	wL	SPYGLASS_USE
	f	Lhd$c;	w	AMBIENT_WARPED_FOREST_MOOD
	f	Lamq;	wM	SPYGLASS_STOP_USING
	f	Lamq;	wN	SQUID_AMBIENT
	f	Lamq;	wO	SQUID_DEATH
	f	Lamq;	wP	SQUID_HURT
	f	Lamq;	wQ	SQUID_SQUIRT
	f	Lamq;	wR	STONE_BREAK
	f	Lamq;	wS	STONE_BUTTON_CLICK_OFF
	f	Lamq;	wT	STONE_BUTTON_CLICK_ON
	f	Lamq;	wU	STONE_FALL
	f	Lamq;	wV	STONE_HIT
	f	Lamq;	wW	STONE_PLACE
	f	Lamq;	wX	STONE_PRESSURE_PLATE_CLICK_OFF
	f	Lamq;	wY	STONE_PRESSURE_PLATE_CLICK_ON
	f	Lamq;	wZ	STONE_STEP
	f	Lamq;	wa	STRIDER_EAT
	f	Lamq;	wb	STRIDER_SADDLE
	f	Lamq;	wc	SLIME_DEATH_SMALL
	f	Lamq;	wd	SLIME_HURT_SMALL
	f	Lamq;	we	SLIME_JUMP_SMALL
	f	Lamq;	wf	SLIME_SQUISH_SMALL
	f	Lamq;	wg	SMITHING_TABLE_USE
	f	Lamq;	wh	SMOKER_SMOKE
	f	Lamq;	wi	SNIFFER_STEP
	f	Lamq;	wj	SNIFFER_EAT
	f	Lamq;	wk	SNIFFER_IDLE
	f	Lamq;	wl	SNIFFER_HURT
	f	Lamq;	wm	SNIFFER_DEATH
	f	Lamq;	wn	SNIFFER_DROP_SEED
	f	Lamq;	wo	SNIFFER_SCENTING
	f	Lamq;	wp	SNIFFER_SNIFFING
	f	Lamq;	wq	SNIFFER_SEARCHING
	f	Lamq;	wr	SNIFFER_DIGGING
	f	Lamq;	ws	SNIFFER_DIGGING_STOP
	f	Lamq;	wt	SNIFFER_HAPPY
	f	Lamq;	wu	SNOWBALL_THROW
	f	Lamq;	wv	SNOW_BREAK
	f	Lamq;	ww	SNOW_FALL
	f	Lamq;	wx	SNOW_GOLEM_AMBIENT
	f	Lamq;	wy	SNOW_GOLEM_DEATH
	f	Lamq;	wz	SNOW_GOLEM_HURT
	f	Lamq;	xA	TROPICAL_FISH_AMBIENT
	f	Lamq;	xB	TROPICAL_FISH_DEATH
	f	Lamq;	xC	TROPICAL_FISH_FLOP
	f	Lamq;	xD	TROPICAL_FISH_HURT
	f	Lamq;	xE	TUFF_BREAK
	f	Lamq;	xF	TUFF_STEP
	f	Lamq;	xG	TUFF_PLACE
	f	Lamq;	xH	TUFF_HIT
	f	Lamq;	xI	TUFF_FALL
	f	Lamq;	xJ	TURTLE_AMBIENT_LAND
	f	Lamq;	xK	TURTLE_DEATH
	f	Lamq;	xL	TURTLE_DEATH_BABY
	f	Lamq;	x	AMBIENT_UNDERWATER_ENTER
	f	Lamq;	xM	TURTLE_EGG_BREAK
	f	Lamq;	xN	TURTLE_EGG_CRACK
	f	Lamq;	xO	TURTLE_EGG_HATCH
	f	Lamq;	xP	TURTLE_HURT
	f	Lamq;	xQ	TURTLE_HURT_BABY
	f	Lamq;	xR	TURTLE_LAY_EGG
	f	Lamq;	xS	TURTLE_SHAMBLE
	f	Lamq;	xT	TURTLE_SHAMBLE_BABY
	f	Lamq;	xU	TURTLE_SWIM
	f	Lhd$c;	xV	UI_BUTTON_CLICK
	f	Lamq;	xW	UI_LOOM_SELECT_PATTERN
	f	Lamq;	xX	UI_LOOM_TAKE_RESULT
	f	Lamq;	xY	UI_CARTOGRAPHY_TABLE_TAKE_RESULT
	f	Lamq;	xZ	UI_STONECUTTER_TAKE_RESULT
	f	Lamq;	xa	STRAY_AMBIENT
	f	Lamq;	xb	STRAY_DEATH
	f	Lamq;	xc	STRAY_HURT
	f	Lamq;	xd	STRAY_STEP
	f	Lamq;	xe	SWEET_BERRY_BUSH_BREAK
	f	Lamq;	xf	SWEET_BERRY_BUSH_PLACE
	f	Lamq;	xg	SWEET_BERRY_BUSH_PICK_BERRIES
	f	Lamq;	xh	TADPOLE_DEATH
	f	Lamq;	xi	TADPOLE_FLOP
	f	Lamq;	xj	TADPOLE_GROW_UP
	f	Lamq;	xk	TADPOLE_HURT
	f	Lamq;	xl	THORNS_HIT
	f	Lamq;	xm	TNT_PRIMED
	f	Lamq;	xn	TOTEM_USE
	f	Lamq;	xo	TRIDENT_HIT
	f	Lamq;	xp	TRIDENT_HIT_GROUND
	f	Lamq;	xq	TRIDENT_RETURN
	f	Lamq;	xr	TRIDENT_RIPTIDE_1
	f	Lamq;	xs	TRIDENT_RIPTIDE_2
	f	Lamq;	xt	TRIDENT_RIPTIDE_3
	f	Lamq;	xu	TRIDENT_THROW
	f	Lamq;	xv	TRIDENT_THUNDER
	f	Lamq;	xw	TRIPWIRE_ATTACH
	f	Lamq;	xx	TRIPWIRE_CLICK_OFF
	f	Lamq;	xy	TRIPWIRE_CLICK_ON
	f	Lamq;	xz	TRIPWIRE_DETACH
	f	Lamq;	yA	VILLAGER_WORK_TOOLSMITH
	f	Lamq;	yB	VILLAGER_WORK_WEAPONSMITH
	f	Lamq;	yC	VINDICATOR_AMBIENT
	f	Lamq;	yD	VINDICATOR_CELEBRATE
	f	Lamq;	yE	VINDICATOR_DEATH
	f	Lamq;	yF	VINDICATOR_HURT
	f	Lamq;	yG	VINE_BREAK
	f	Lamq;	yH	VINE_FALL
	f	Lamq;	yI	VINE_HIT
	f	Lamq;	yJ	VINE_PLACE
	f	Lamq;	yK	VINE_STEP
	f	Lamq;	yL	LILY_PAD_PLACE
	f	Lamq;	y	AMBIENT_UNDERWATER_EXIT
	f	Lamq;	yM	WANDERING_TRADER_AMBIENT
	f	Lamq;	yN	WANDERING_TRADER_DEATH
	f	Lamq;	yO	WANDERING_TRADER_DISAPPEARED
	f	Lamq;	yP	WANDERING_TRADER_DRINK_MILK
	f	Lamq;	yQ	WANDERING_TRADER_DRINK_POTION
	f	Lamq;	yR	WANDERING_TRADER_HURT
	f	Lamq;	yS	WANDERING_TRADER_NO
	f	Lamq;	yT	WANDERING_TRADER_REAPPEARED
	f	Lamq;	yU	WANDERING_TRADER_TRADE
	f	Lamq;	yV	WANDERING_TRADER_YES
	f	Lamq;	yW	WARDEN_AGITATED
	f	Lamq;	yX	WARDEN_AMBIENT
	f	Lamq;	yY	WARDEN_ANGRY
	f	Lamq;	yZ	WARDEN_ATTACK_IMPACT
	f	Lamq;	ya	UI_STONECUTTER_SELECT_RECIPE
	f	Lamq;	yb	UI_TOAST_CHALLENGE_COMPLETE
	f	Lamq;	yc	UI_TOAST_IN
	f	Lamq;	yd	UI_TOAST_OUT
	f	Lamq;	ye	VEX_AMBIENT
	f	Lamq;	yf	VEX_CHARGE
	f	Lamq;	yg	VEX_DEATH
	f	Lamq;	yh	VEX_HURT
	f	Lamq;	yi	VILLAGER_AMBIENT
	f	Lamq;	yj	VILLAGER_CELEBRATE
	f	Lamq;	yk	VILLAGER_DEATH
	f	Lamq;	yl	VILLAGER_HURT
	f	Lamq;	ym	VILLAGER_NO
	f	Lamq;	yn	VILLAGER_TRADE
	f	Lamq;	yo	VILLAGER_YES
	f	Lamq;	yp	VILLAGER_WORK_ARMORER
	f	Lamq;	yq	VILLAGER_WORK_BUTCHER
	f	Lamq;	yr	VILLAGER_WORK_CARTOGRAPHER
	f	Lamq;	ys	VILLAGER_WORK_CLERIC
	f	Lamq;	yt	VILLAGER_WORK_FARMER
	f	Lamq;	yu	VILLAGER_WORK_FISHERMAN
	f	Lamq;	yv	VILLAGER_WORK_FLETCHER
	f	Lamq;	yw	VILLAGER_WORK_LEATHERWORKER
	f	Lamq;	yx	VILLAGER_WORK_LIBRARIAN
	f	Lamq;	yy	VILLAGER_WORK_MASON
	f	Lamq;	yz	VILLAGER_WORK_SHEPHERD
	f	Lamq;	zA	WITCH_DEATH
	f	Lamq;	zB	WITCH_DRINK
	f	Lamq;	zC	WITCH_HURT
	f	Lamq;	zD	WITCH_THROW
	f	Lamq;	zE	WITHER_AMBIENT
	f	Lamq;	zF	WITHER_BREAK_BLOCK
	f	Lamq;	zG	WITHER_DEATH
	f	Lamq;	zH	WITHER_HURT
	f	Lamq;	zI	WITHER_SHOOT
	f	Lamq;	zJ	WITHER_SKELETON_AMBIENT
	f	Lamq;	zK	WITHER_SKELETON_DEATH
	f	Lamq;	zL	WITHER_SKELETON_HURT
	f	Lamq;	z	AMBIENT_UNDERWATER_LOOP
	f	Lamq;	zM	WITHER_SKELETON_STEP
	f	Lamq;	zN	WITHER_SPAWN
	f	Lamq;	zO	WOLF_AMBIENT
	f	Lamq;	zP	WOLF_DEATH
	f	Lamq;	zQ	WOLF_GROWL
	f	Lamq;	zR	WOLF_HOWL
	f	Lamq;	zS	WOLF_HURT
	f	Lamq;	zT	WOLF_PANT
	f	Lamq;	zU	WOLF_SHAKE
	f	Lamq;	zV	WOLF_STEP
	f	Lamq;	zW	WOLF_WHINE
	f	Lamq;	zX	WOODEN_DOOR_CLOSE
	f	Lamq;	zY	WOODEN_DOOR_OPEN
	f	Lamq;	zZ	WOODEN_TRAPDOOR_CLOSE
	f	Lamq;	za	WARDEN_DEATH
	f	Lamq;	zb	WARDEN_DIG
	f	Lamq;	zc	WARDEN_EMERGE
	f	Lamq;	zd	WARDEN_HEARTBEAT
	f	Lamq;	ze	WARDEN_HURT
	f	Lamq;	zf	WARDEN_LISTENING
	f	Lamq;	zg	WARDEN_LISTENING_ANGRY
	f	Lamq;	zh	WARDEN_NEARBY_CLOSE
	f	Lamq;	zi	WARDEN_NEARBY_CLOSER
	f	Lamq;	zj	WARDEN_NEARBY_CLOSEST
	f	Lamq;	zk	WARDEN_ROAR
	f	Lamq;	zl	WARDEN_SNIFF
	f	Lamq;	zm	WARDEN_SONIC_BOOM
	f	Lamq;	zn	WARDEN_SONIC_CHARGE
	f	Lamq;	zo	WARDEN_STEP
	f	Lamq;	zp	WARDEN_TENDRIL_CLICKS
	f	Lamq;	zq	WATER_AMBIENT
	f	Lamq;	zr	WEATHER_RAIN
	f	Lamq;	zs	WEATHER_RAIN_ABOVE
	f	Lamq;	zt	WET_GRASS_BREAK
	f	Lamq;	zu	WET_GRASS_FALL
	f	Lamq;	zv	WET_GRASS_HIT
	f	Lamq;	zw	WET_GRASS_PLACE
	f	Lamq;	zx	WET_GRASS_STEP
	f	Lamq;	zy	WITCH_AMBIENT
	f	Lamq;	zz	WITCH_CELEBRATE
c	ams	net/minecraft/sounds/SoundSource
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()Ljava/lang/String;	a	getName
	m	()[Lams;	b	$values
	f	Lams;	a	MASTER
	f	Lams;	b	MUSIC
	f	Lams;	c	RECORDS
	f	Lams;	d	WEATHER
	f	Lams;	e	BLOCKS
	f	Lams;	f	HOSTILE
	f	Lams;	g	NEUTRAL
	f	Lams;	h	PLAYERS
	f	Lams;	i	AMBIENT
	f	Lams;	j	VOICE
	f	Ljava/lang/String;	k	name
	f	[Lams;	l	$VALUES
c	amt	net/minecraft/sounds/package-info
c	amu	net/minecraft/stats/RecipeBook
	m	()Lamv;	a	getBookSettings
	m	(Ladd;)V	a	add
		p	1		id
	m	(Lamu;)V	a	copyOverData
		p	1		book
	m	(Lamv;)V	a	setBookSettings
		p	1		options
	m	(Lcco;)Z	a	isFiltering
		p	1		handler
	m	(Lccp;)Z	a	isOpen
		p	1		category
	m	(Lccp;Z)V	a	setOpen
		p	1		category
		p	2		open
	m	(Lccp;ZZ)V	a	setBookSetting
		p	1		category
		p	2		guiOpen
		p	3		filteringCraftable
	m	(Lciy;)V	a	add
		p	1		recipe
	m	(Ladd;)Z	b	contains
		p	1		id
	m	(Lccp;)Z	b	isFiltering
		p	1		category
	m	(Lccp;Z)V	b	setFiltering
		p	1		category
		p	2		filteringCraftable
	m	(Lciy;)Z	b	contains
		p	1		recipe
	m	(Ladd;)V	c	remove
		p	1		id
	m	(Lciy;)V	c	remove
		p	1		recipe
	m	(Ladd;)V	d	addHighlight
		p	1		id
	m	(Lciy;)Z	d	willHighlight
		p	1		recipe
	m	(Lciy;)V	e	removeHighlight
		p	1		recipe
	m	(Lciy;)V	f	addHighlight
		p	1		recipe
	f	Ljava/util/Set;	a	known
	f	Ljava/util/Set;	b	highlight
	f	Lamv;	c	bookSettings
c	amv	net/minecraft/stats/RecipeBookSettings
	m	(Ljava/util/Map;)V	<init>	<init>
		p	1		categoryOptions
	m	()Lamv;	a	copy
	m	(Lamv;)V	a	replaceFrom
		p	1		other
	m	(Lccp;)Z	a	isOpen
		p	1		category
	m	(Lccp;Z)V	a	setOpen
		p	1		category
		p	2		open
	m	(Ljava/util/EnumMap;)V	a	lambda$new$0
		p	0		categoryOptions
	m	(Lre;)Lamv;	a	read
		p	0		nbt
	m	(Lre;Lccp;Lcom/mojang/datafixers/util/Pair;)V	a	lambda$write$2
		p	2		category
		p	3		pair
	m	(Lre;Ljava/util/Map;Lccp;Lcom/mojang/datafixers/util/Pair;)V	a	lambda$read$1
		p	2		category
		p	3		pair
	m	(Lss;)Lamv;	a	read
		p	0		buf
	m	(Lccp;)Z	b	isFiltering
		p	1		category
	m	(Lccp;Z)V	b	setFiltering
		p	1		category
		p	2		filtering
	m	(Lre;)V	b	write
		p	1		nbt
	m	(Lss;)V	b	write
		p	1		buf
	f	Ljava/util/Map;	a	TAG_FIELDS
	f	Ljava/util/Map;	b	states
c	amv$a	net/minecraft/stats/RecipeBookSettings$TypeSettings
	m	(ZZ)V	<init>	<init>
		p	1		guiOpen
		p	2		filteringCraftable
	m	()Lamv$a;	a	copy
	f	Z	a	open
	f	Z	b	filtering
c	amw	net/minecraft/stats/ServerRecipeBook
	m	(Laiq;)V	a	sendInitialRecipeBook
		p	1		player
	m	(Ljava/util/Collection;Laiq;)I	a	addRecipes
		p	1		recipes
		p	2		player
	m	(Lre;Lciz;)V	a	fromNbt
		p	1		nbt
		p	2		recipeManager
	m	(Lrk;Ljava/util/function/Consumer;Lciz;)V	a	loadRecipes
		p	1		list
		p	2		handler
		p	3		recipeManager
	m	(Lxo$a;Laiq;Ljava/util/List;)V	a	sendRecipes
		p	1		action
		p	2		player
		p	3		recipeIds
	m	()Lre;	b	toNbt
	m	(Ljava/util/Collection;Laiq;)I	b	removeRecipes
		p	1		recipes
		p	2		player
	f	Ljava/lang/String;	c	RECIPE_BOOK_TAG
	f	Lorg/slf4j/Logger;	d	LOGGER
c	amx	net/minecraft/stats/ServerStatsCounter
	m	(Lnet/minecraft/server/MinecraftServer;Ljava/io/File;)V	<init>	<init>
		p	1		server
		p	2		file
	m	()V	a	save
	m	(Laiq;)V	a	sendStats
		p	1		player
	m	(Lana;)Lcom/google/gson/JsonObject;	a	lambda$toJson$4
		p	0		statType
	m	(Lana;Ljava/lang/String;)Ljava/util/Optional;	a	getStat
		p	1		type
		p	2		id
	m	(Lbym;Lamy;I)V	a	setValue
		p	1		player
		p	2		stat
		p	3		value
	m	(Lcom/google/gson/JsonObject;)Lre;	a	fromJson
		p	0		json
	m	(Lcom/mojang/datafixers/DataFixer;Ljava/lang/String;)V	a	parseLocal
		p	1		dataFixer
		p	2		json
	m	(Ljava/lang/String;)V	a	lambda$parseLocal$3
	m	(Lre;Ljava/lang/String;Lamy;)V	a	lambda$parseLocal$0
		p	3		id
	m	(Lre;Ljava/lang/String;Lana;)V	a	lambda$parseLocal$2
		p	3		statType
	m	()Ljava/lang/String;	b	toJson
	m	(Lamy;)Ladd;	b	getKey
		p	0		stat
	m	(Ljava/lang/String;)V	b	lambda$parseLocal$1
	m	()V	c	markAllDirty
	m	()Ljava/util/Set;	d	getDirty
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Lnet/minecraft/server/MinecraftServer;	c	server
	f	Ljava/io/File;	d	file
	f	Ljava/util/Set;	e	dirty
c	amy	net/minecraft/stats/Stat
	m	(Lana;Ljava/lang/Object;Lamz;)V	<init>	<init>
		p	1		type
		p	2		value
		p	3		formatter
	m	()Lana;	a	getType
	m	(I)Ljava/lang/String;	a	format
		p	1		value
	m	(Ladd;)Ljava/lang/String;	a	locationToKey
		p	0		id
	m	(Lana;Ljava/lang/Object;)Ljava/lang/String;	a	buildName
		p	0		type
		p	1		value
	m	()Ljava/lang/Object;	b	getValue
	f	Lamz;	n	formatter
	f	Ljava/lang/Object;	o	value
	f	Lana;	p	type
c	amz	net/minecraft/stats/StatFormatter
	m	(I)Ljava/lang/String;	a	lambda$static$3
		p	0		ticks
	m	(Ljava/text/DecimalFormat;)V	a	lambda$static$0
		p	0		decimalFormat
	m	(I)Ljava/lang/String;	b	lambda$static$2
		p	0		cm
	m	(I)Ljava/lang/String;	c	lambda$static$1
		p	0		i
	m	(I)Ljava/lang/String;	format	format
		p	1		value
	f	Ljava/text/DecimalFormat;	a	DECIMAL_FORMAT
	f	Lamz;	b	DEFAULT
	f	Lamz;	c	DIVIDE_BY_TEN
	f	Lamz;	d	DISTANCE
	f	Lamz;	e	TIME
c	ana	net/minecraft/stats/StatType
	m	(Lhq;)V	<init>	<init>
		p	1		registry
	m	()Lhq;	a	getRegistry
	m	(Lamz;Ljava/lang/Object;)Lamy;	a	lambda$get$0
		p	2		value
	m	(Ljava/lang/Object;)Z	a	contains
		p	1		key
	m	(Ljava/lang/Object;Lamz;)Lamy;	a	get
		p	1		key
		p	2		formatter
	m	()Ljava/lang/String;	b	getTranslationKey
	m	(Ljava/lang/Object;)Lamy;	b	get
		p	1		key
	m	()Ltj;	c	getDisplayName
	f	Lhq;	a	registry
	f	Ljava/util/Map;	b	map
	f	Ltj;	c	displayName
c	anb	net/minecraft/stats/Stats
	m	(Ljava/lang/String;Lamz;)Ladd;	a	makeCustomStat
		p	0		id
		p	1		formatter
	m	(Ljava/lang/String;Lhq;)Lana;	a	makeRegistryStatType
		p	0		id
		p	1		registry
	f	Ladd;	A	HORSE_ONE_CM
	f	Ladd;	B	AVIATE_ONE_CM
	f	Ladd;	C	SWIM_ONE_CM
	f	Ladd;	D	STRIDER_ONE_CM
	f	Ladd;	E	JUMP
	f	Ladd;	F	DROP
	f	Ladd;	G	DAMAGE_DEALT
	f	Ladd;	H	DAMAGE_DEALT_ABSORBED
	f	Ladd;	I	DAMAGE_DEALT_RESISTED
	f	Ladd;	J	DAMAGE_TAKEN
	f	Ladd;	K	DAMAGE_BLOCKED_BY_SHIELD
	f	Ladd;	L	DAMAGE_ABSORBED
	f	Ladd;	M	DAMAGE_RESISTED
	f	Ladd;	N	DEATHS
	f	Ladd;	O	MOB_KILLS
	f	Ladd;	P	ANIMALS_BRED
	f	Ladd;	Q	PLAYER_KILLS
	f	Ladd;	R	FISH_CAUGHT
	f	Ladd;	S	TALKED_TO_VILLAGER
	f	Ladd;	T	TRADED_WITH_VILLAGER
	f	Ladd;	U	EAT_CAKE_SLICE
	f	Ladd;	V	FILL_CAULDRON
	f	Ladd;	W	USE_CAULDRON
	f	Ladd;	X	CLEAN_ARMOR
	f	Ladd;	Y	CLEAN_BANNER
	f	Ladd;	Z	CLEAN_SHULKER_BOX
	f	Ladd;	aA	RAID_TRIGGER
	f	Ladd;	aB	RAID_WIN
	f	Ladd;	aC	INTERACT_WITH_ANVIL
	f	Ladd;	aD	INTERACT_WITH_GRINDSTONE
	f	Ladd;	aE	TARGET_HIT
	f	Ladd;	aF	INTERACT_WITH_SMITHING_TABLE
	f	Lana;	a	BLOCK_MINED
	f	Ladd;	aa	INTERACT_WITH_BREWINGSTAND
	f	Ladd;	ab	INTERACT_WITH_BEACON
	f	Ladd;	ac	INSPECT_DROPPER
	f	Ladd;	ad	INSPECT_HOPPER
	f	Ladd;	ae	INSPECT_DISPENSER
	f	Ladd;	af	PLAY_NOTEBLOCK
	f	Ladd;	ag	TUNE_NOTEBLOCK
	f	Ladd;	ah	POT_FLOWER
	f	Ladd;	ai	TRIGGER_TRAPPED_CHEST
	f	Ladd;	aj	OPEN_ENDERCHEST
	f	Ladd;	ak	ENCHANT_ITEM
	f	Ladd;	al	PLAY_RECORD
	f	Ladd;	am	INTERACT_WITH_FURNACE
	f	Ladd;	an	INTERACT_WITH_CRAFTING_TABLE
	f	Ladd;	ao	OPEN_CHEST
	f	Ladd;	ap	SLEEP_IN_BED
	f	Ladd;	aq	OPEN_SHULKER_BOX
	f	Ladd;	ar	OPEN_BARREL
	f	Ladd;	as	INTERACT_WITH_BLAST_FURNACE
	f	Ladd;	at	INTERACT_WITH_SMOKER
	f	Ladd;	au	INTERACT_WITH_LECTERN
	f	Ladd;	av	INTERACT_WITH_CAMPFIRE
	f	Ladd;	aw	INTERACT_WITH_CARTOGRAPHY_TABLE
	f	Ladd;	ax	INTERACT_WITH_LOOM
	f	Ladd;	ay	INTERACT_WITH_STONECUTTER
	f	Ladd;	az	BELL_RING
	f	Lana;	b	ITEM_CRAFTED
	f	Lana;	c	ITEM_USED
	f	Lana;	d	ITEM_BROKEN
	f	Lana;	e	ITEM_PICKED_UP
	f	Lana;	f	ITEM_DROPPED
	f	Lana;	g	ENTITY_KILLED
	f	Lana;	h	ENTITY_KILLED_BY
	f	Lana;	i	CUSTOM
	f	Ladd;	j	LEAVE_GAME
	f	Ladd;	k	PLAY_TIME
	f	Ladd;	l	TOTAL_WORLD_TIME
	f	Ladd;	m	TIME_SINCE_DEATH
	f	Ladd;	n	TIME_SINCE_REST
	f	Ladd;	o	CROUCH_TIME
	f	Ladd;	p	WALK_ONE_CM
	f	Ladd;	q	CROUCH_ONE_CM
	f	Ladd;	r	SPRINT_ONE_CM
	f	Ladd;	s	WALK_ON_WATER_ONE_CM
	f	Ladd;	t	FALL_ONE_CM
	f	Ladd;	u	CLIMB_ONE_CM
	f	Ladd;	v	FLY_ONE_CM
	f	Ladd;	w	WALK_UNDER_WATER_ONE_CM
	f	Ladd;	x	MINECART_ONE_CM
	f	Ladd;	y	BOAT_ONE_CM
	f	Ladd;	z	PIG_ONE_CM
c	anc	net/minecraft/stats/StatsCounter
	m	(Lamy;)I	a	getValue
		p	1		stat
	m	(Lana;Ljava/lang/Object;)I	a	getValue
		p	1		type
		p	2		stat
	m	(Lbym;Lamy;I)V	a	setValue
		p	1		player
		p	2		stat
		p	3		value
	m	(Lbym;Lamy;I)V	b	increment
		p	1		player
		p	2		stat
		p	3		value
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	a	stats
c	and	net/minecraft/stats/package-info
c	ane	net/minecraft/tags/BannerPatternTags
	m	(Ljava/lang/String;)Lanv;	a	create
		p	0		id
	f	Lanv;	a	NO_ITEM_REQUIRED
	f	Lanv;	b	PATTERN_ITEM_FLOWER
	f	Lanv;	c	PATTERN_ITEM_CREEPER
	f	Lanv;	d	PATTERN_ITEM_SKULL
	f	Lanv;	e	PATTERN_ITEM_MOJANG
	f	Lanv;	f	PATTERN_ITEM_GLOBE
	f	Lanv;	g	PATTERN_ITEM_PIGLIN
c	anf	net/minecraft/tags/BiomeTags
	m	(Ljava/lang/String;)Lanv;	a	create
		p	0		id
	f	Lanv;	A	HAS_RUINED_PORTAL_JUNGLE
	f	Lanv;	B	HAS_RUINED_PORTAL_OCEAN
	f	Lanv;	C	HAS_RUINED_PORTAL_SWAMP
	f	Lanv;	D	HAS_RUINED_PORTAL_MOUNTAIN
	f	Lanv;	E	HAS_RUINED_PORTAL_STANDARD
	f	Lanv;	F	HAS_SHIPWRECK_BEACHED
	f	Lanv;	G	HAS_SHIPWRECK
	f	Lanv;	H	HAS_STRONGHOLD
	f	Lanv;	I	HAS_SWAMP_HUT
	f	Lanv;	J	HAS_VILLAGE_DESERT
	f	Lanv;	K	HAS_VILLAGE_PLAINS
	f	Lanv;	L	HAS_VILLAGE_SAVANNA
	f	Lanv;	M	HAS_VILLAGE_SNOWY
	f	Lanv;	N	HAS_VILLAGE_TAIGA
	f	Lanv;	O	HAS_WOODLAND_MANSION
	f	Lanv;	P	HAS_NETHER_FORTRESS
	f	Lanv;	Q	HAS_NETHER_FOSSIL
	f	Lanv;	R	HAS_BASTION_REMNANT
	f	Lanv;	S	HAS_ANCIENT_CITY
	f	Lanv;	T	HAS_RUINED_PORTAL_NETHER
	f	Lanv;	U	HAS_END_CITY
	f	Lanv;	V	REQUIRED_OCEAN_MONUMENT_SURROUNDING
	f	Lanv;	W	MINESHAFT_BLOCKING
	f	Lanv;	X	PLAYS_UNDERWATER_MUSIC
	f	Lanv;	Y	HAS_CLOSER_WATER_FOG
	f	Lanv;	Z	WATER_ON_MAP_OUTLINES
	f	Lanv;	a	IS_DEEP_OCEAN
	f	Lanv;	aa	PRODUCES_CORALS_FROM_BONEMEAL
	f	Lanv;	ab	INCREASED_FIRE_BURNOUT
	f	Lanv;	ac	SNOW_GOLEM_MELTS
	f	Lanv;	ad	WITHOUT_ZOMBIE_SIEGES
	f	Lanv;	ae	WITHOUT_PATROL_SPAWNS
	f	Lanv;	af	WITHOUT_WANDERING_TRADER_SPAWNS
	f	Lanv;	ag	SPAWNS_COLD_VARIANT_FROGS
	f	Lanv;	ah	SPAWNS_WARM_VARIANT_FROGS
	f	Lanv;	ai	SPAWNS_GOLD_RABBITS
	f	Lanv;	aj	SPAWNS_WHITE_RABBITS
	f	Lanv;	ak	REDUCED_WATER_AMBIENT_SPAWNS
	f	Lanv;	al	ALLOWS_TROPICAL_FISH_SPAWNS_AT_ANY_HEIGHT
	f	Lanv;	am	POLAR_BEARS_SPAWN_ON_ALTERNATE_BLOCKS
	f	Lanv;	an	MORE_FREQUENT_DROWNED_SPAWNS
	f	Lanv;	ao	ALLOWS_SURFACE_SLIME_SPAWNS
	f	Lanv;	ap	SPAWNS_SNOW_FOXES
	f	Lanv;	b	IS_OCEAN
	f	Lanv;	c	IS_BEACH
	f	Lanv;	d	IS_RIVER
	f	Lanv;	e	IS_MOUNTAIN
	f	Lanv;	f	IS_BADLANDS
	f	Lanv;	g	IS_HILL
	f	Lanv;	h	IS_TAIGA
	f	Lanv;	i	IS_JUNGLE
	f	Lanv;	j	IS_FOREST
	f	Lanv;	k	IS_SAVANNA
	f	Lanv;	l	IS_OVERWORLD
	f	Lanv;	m	IS_NETHER
	f	Lanv;	n	IS_END
	f	Lanv;	o	STRONGHOLD_BIASED_TO
	f	Lanv;	p	HAS_BURIED_TREASURE
	f	Lanv;	q	HAS_DESERT_PYRAMID
	f	Lanv;	r	HAS_IGLOO
	f	Lanv;	s	HAS_JUNGLE_TEMPLE
	f	Lanv;	t	HAS_MINESHAFT
	f	Lanv;	u	HAS_MINESHAFT_MESA
	f	Lanv;	v	HAS_OCEAN_MONUMENT
	f	Lanv;	w	HAS_OCEAN_RUIN_COLD
	f	Lanv;	x	HAS_OCEAN_RUIN_WARM
	f	Lanv;	y	HAS_PILLAGER_OUTPOST
	f	Lanv;	z	HAS_RUINED_PORTAL_DESERT
c	ang	net/minecraft/tags/BlockTags
	m	(Ljava/lang/String;)Lanv;	a	create
		p	0		id
	f	Lanv;	A	MANGROVE_LOGS
	f	Lanv;	B	CRIMSON_STEMS
	f	Lanv;	C	WARPED_STEMS
	f	Lanv;	D	BAMBOO_BLOCKS
	f	Lanv;	E	WART_BLOCKS
	f	Lanv;	F	BANNERS
	f	Lanv;	G	SAND
	f	Lanv;	H	SMELTS_TO_GLASS
	f	Lanv;	I	STAIRS
	f	Lanv;	J	SLABS
	f	Lanv;	K	WALLS
	f	Lanv;	L	ANVIL
	f	Lanv;	M	RAILS
	f	Lanv;	N	LEAVES
	f	Lanv;	O	TRAPDOORS
	f	Lanv;	P	SMALL_FLOWERS
	f	Lanv;	Q	BEDS
	f	Lanv;	R	FENCES
	f	Lanv;	S	TALL_FLOWERS
	f	Lanv;	T	FLOWERS
	f	Lanv;	U	PIGLIN_REPELLENTS
	f	Lanv;	V	GOLD_ORES
	f	Lanv;	W	IRON_ORES
	f	Lanv;	X	DIAMOND_ORES
	f	Lanv;	Y	REDSTONE_ORES
	f	Lanv;	Z	LAPIS_ORES
	f	Lanv;	aA	DRAGON_TRANSPARENT
	f	Lanv;	aB	WITHER_IMMUNE
	f	Lanv;	aC	WITHER_SUMMON_BASE_BLOCKS
	f	Lanv;	aD	BEEHIVES
	f	Lanv;	aE	CROPS
	f	Lanv;	aF	BEE_GROWABLES
	f	Lanv;	aG	PORTALS
	f	Lanv;	aH	FIRE
	f	Lanv;	aI	NYLIUM
	f	Lanv;	aJ	BEACON_BASE_BLOCKS
	f	Lanv;	aK	SOUL_SPEED_BLOCKS
	f	Lanv;	aL	WALL_POST_OVERRIDE
	f	Lanv;	a	WOOL
	f	Lanv;	aM	CLIMBABLE
	f	Lanv;	aN	FALL_DAMAGE_RESETTING
	f	Lanv;	aO	SHULKER_BOXES
	f	Lanv;	aP	HOGLIN_REPELLENTS
	f	Lanv;	aQ	SOUL_FIRE_BASE_BLOCKS
	f	Lanv;	aR	STRIDER_WARM_BLOCKS
	f	Lanv;	aS	CAMPFIRES
	f	Lanv;	aT	GUARDED_BY_PIGLINS
	f	Lanv;	aU	PREVENT_MOB_SPAWNING_INSIDE
	f	Lanv;	aV	FENCE_GATES
	f	Lanv;	aW	UNSTABLE_BOTTOM_CENTER
	f	Lanv;	aX	MUSHROOM_GROW_BLOCK
	f	Lanv;	aY	INFINIBURN_OVERWORLD
	f	Lanv;	aZ	INFINIBURN_NETHER
	f	Lanv;	aa	COAL_ORES
	f	Lanv;	ab	EMERALD_ORES
	f	Lanv;	ac	COPPER_ORES
	f	Lanv;	ad	CANDLES
	f	Lanv;	ae	DIRT
	f	Lanv;	af	TERRACOTTA
	f	Lanv;	ag	COMPLETES_FIND_TREE_TUTORIAL
	f	Lanv;	ah	FLOWER_POTS
	f	Lanv;	ai	ENDERMAN_HOLDABLE
	f	Lanv;	aj	ICE
	f	Lanv;	ak	VALID_SPAWN
	f	Lanv;	al	IMPERMEABLE
	f	Lanv;	am	UNDERWATER_BONEMEALS
	f	Lanv;	an	CORAL_BLOCKS
	f	Lanv;	ao	WALL_CORALS
	f	Lanv;	ap	CORAL_PLANTS
	f	Lanv;	aq	CORALS
	f	Lanv;	ar	BAMBOO_PLANTABLE_ON
	f	Lanv;	as	STANDING_SIGNS
	f	Lanv;	at	WALL_SIGNS
	f	Lanv;	au	SIGNS
	f	Lanv;	av	CEILING_HANGING_SIGNS
	f	Lanv;	aw	WALL_HANGING_SIGNS
	f	Lanv;	ax	ALL_HANGING_SIGNS
	f	Lanv;	ay	ALL_SIGNS
	f	Lanv;	az	DRAGON_IMMUNE
	f	Lanv;	bA	NEEDS_IRON_TOOL
	f	Lanv;	bB	NEEDS_STONE_TOOL
	f	Lanv;	bC	FEATURES_CANNOT_REPLACE
	f	Lanv;	bD	LAVA_POOL_STONE_CANNOT_REPLACE
	f	Lanv;	bE	GEODE_INVALID_BLOCKS
	f	Lanv;	bF	FROG_PREFER_JUMP_TO
	f	Lanv;	bG	SCULK_REPLACEABLE
	f	Lanv;	bH	SCULK_REPLACEABLE_WORLD_GEN
	f	Lanv;	bI	ANCIENT_CITY_REPLACEABLE
	f	Lanv;	bJ	ANIMALS_SPAWNABLE_ON
	f	Lanv;	bK	AXOLOTLS_SPAWNABLE_ON
	f	Lanv;	bL	GOATS_SPAWNABLE_ON
	f	Lanv;	b	PLANKS
	f	Lanv;	bM	MOOSHROOMS_SPAWNABLE_ON
	f	Lanv;	bN	PARROTS_SPAWNABLE_ON
	f	Lanv;	bO	POLAR_BEARS_SPAWNABLE_ON_ALTERNATE
	f	Lanv;	bP	RABBITS_SPAWNABLE_ON
	f	Lanv;	bQ	FOXES_SPAWNABLE_ON
	f	Lanv;	bR	WOLVES_SPAWNABLE_ON
	f	Lanv;	bS	FROGS_SPAWNABLE_ON
	f	Lanv;	bT	AZALEA_GROWS_ON
	f	Lanv;	bU	REPLACEABLE_PLANTS
	f	Lanv;	bV	CONVERTABLE_TO_MUD
	f	Lanv;	bW	MANGROVE_LOGS_CAN_GROW_THROUGH
	f	Lanv;	bX	MANGROVE_ROOTS_CAN_GROW_THROUGH
	f	Lanv;	bY	DEAD_BUSH_MAY_PLACE_ON
	f	Lanv;	bZ	SNAPS_GOAT_HORN
	f	Lanv;	ba	INFINIBURN_END
	f	Lanv;	bb	BASE_STONE_OVERWORLD
	f	Lanv;	bc	STONE_ORE_REPLACEABLES
	f	Lanv;	bd	DEEPSLATE_ORE_REPLACEABLES
	f	Lanv;	be	BASE_STONE_NETHER
	f	Lanv;	bf	OVERWORLD_CARVER_REPLACEABLES
	f	Lanv;	bg	NETHER_CARVER_REPLACEABLES
	f	Lanv;	bh	CANDLE_CAKES
	f	Lanv;	bi	CAULDRONS
	f	Lanv;	bj	CRYSTAL_SOUND_BLOCKS
	f	Lanv;	bk	INSIDE_STEP_SOUND_BLOCKS
	f	Lanv;	bl	OCCLUDES_VIBRATION_SIGNALS
	f	Lanv;	bm	DAMPENS_VIBRATIONS
	f	Lanv;	bn	DRIPSTONE_REPLACEABLE
	f	Lanv;	bo	CAVE_VINES
	f	Lanv;	bp	MOSS_REPLACEABLE
	f	Lanv;	bq	LUSH_GROUND_REPLACEABLE
	f	Lanv;	br	AZALEA_ROOT_REPLACEABLE
	f	Lanv;	bs	SMALL_DRIPLEAF_PLACEABLE
	f	Lanv;	bt	BIG_DRIPLEAF_PLACEABLE
	f	Lanv;	bu	SNOW
	f	Lanv;	bv	MINEABLE_WITH_AXE
	f	Lanv;	bw	MINEABLE_WITH_HOE
	f	Lanv;	bx	MINEABLE_WITH_PICKAXE
	f	Lanv;	by	MINEABLE_WITH_SHOVEL
	f	Lanv;	bz	NEEDS_DIAMOND_TOOL
	f	Lanv;	c	STONE_BRICKS
	f	Lanv;	ca	SNOW_LAYER_CANNOT_SURVIVE_ON
	f	Lanv;	cb	SNOW_LAYER_CAN_SURVIVE_ON
	f	Lanv;	cc	INVALID_SPAWN_INSIDE
	f	Lanv;	cd	SNIFFER_DIGGABLE_BLOCK
	f	Lanv;	d	WOODEN_BUTTONS
	f	Lanv;	e	BUTTONS
	f	Lanv;	f	WOOL_CARPETS
	f	Lanv;	g	WOODEN_DOORS
	f	Lanv;	h	WOODEN_STAIRS
	f	Lanv;	i	WOODEN_SLABS
	f	Lanv;	j	WOODEN_FENCES
	f	Lanv;	k	PRESSURE_PLATES
	f	Lanv;	l	WOODEN_PRESSURE_PLATES
	f	Lanv;	m	STONE_PRESSURE_PLATES
	f	Lanv;	n	WOODEN_TRAPDOORS
	f	Lanv;	o	DOORS
	f	Lanv;	p	SAPLINGS
	f	Lanv;	q	LOGS_THAT_BURN
	f	Lanv;	r	OVERWORLD_NATURAL_LOGS
	f	Lanv;	s	LOGS
	f	Lanv;	t	DARK_OAK_LOGS
	f	Lanv;	u	OAK_LOGS
	f	Lanv;	v	BIRCH_LOGS
	f	Lanv;	w	ACACIA_LOGS
	f	Lanv;	x	CHERRY_LOGS
	f	Lanv;	y	JUNGLE_LOGS
	f	Lanv;	z	SPRUCE_LOGS
c	anh	net/minecraft/tags/CatVariantTags
	m	(Ljava/lang/String;)Lanv;	a	create
		p	0		id
	f	Lanv;	a	DEFAULT_SPAWNS
	f	Lanv;	b	FULL_MOON_SPAWNS
c	ani	net/minecraft/tags/DamageTypeTags
	m	(Ljava/lang/String;)Lanv;	a	create
		p	0		id
	f	Lanv;	a	DAMAGES_HELMET
	f	Lanv;	b	BYPASSES_ARMOR
	f	Lanv;	c	BYPASSES_SHIELD
	f	Lanv;	d	BYPASSES_INVULNERABILITY
	f	Lanv;	e	BYPASSES_COOLDOWN
	f	Lanv;	f	BYPASSES_EFFECTS
	f	Lanv;	g	BYPASSES_RESISTANCE
	f	Lanv;	h	BYPASSES_ENCHANTMENTS
	f	Lanv;	i	IS_FIRE
	f	Lanv;	j	IS_PROJECTILE
	f	Lanv;	k	WITCH_RESISTANT_TO
	f	Lanv;	l	IS_EXPLOSION
	f	Lanv;	m	IS_FALL
	f	Lanv;	n	IS_DROWNING
	f	Lanv;	o	IS_FREEZING
	f	Lanv;	p	IS_LIGHTNING
	f	Lanv;	q	NO_ANGER
	f	Lanv;	r	NO_IMPACT
	f	Lanv;	s	ALWAYS_MOST_SIGNIFICANT_FALL
	f	Lanv;	t	WITHER_IMMUNE_TO
	f	Lanv;	u	IGNITES_ARMOR_STANDS
	f	Lanv;	v	BURNS_ARMOR_STANDS
	f	Lanv;	w	AVOIDS_GUARDIAN_THORNS
	f	Lanv;	x	ALWAYS_TRIGGERS_SILVERFISH
	f	Lanv;	y	ALWAYS_HURTS_ENDER_DRAGONS
c	anj	net/minecraft/tags/EntityTypeTags
	m	(Ljava/lang/String;)Lanv;	a	create
		p	0		id
	f	Lanv;	a	SKELETONS
	f	Lanv;	b	RAIDERS
	f	Lanv;	c	BEEHIVE_INHABITORS
	f	Lanv;	d	ARROWS
	f	Lanv;	e	IMPACT_PROJECTILES
	f	Lanv;	f	POWDER_SNOW_WALKABLE_MOBS
	f	Lanv;	g	AXOLOTL_ALWAYS_HOSTILES
	f	Lanv;	h	AXOLOTL_HUNT_TARGETS
	f	Lanv;	i	FREEZE_IMMUNE_ENTITY_TYPES
	f	Lanv;	j	FREEZE_HURTS_EXTRA_TYPES
	f	Lanv;	k	FROG_FOOD
	f	Lanv;	l	FALL_DAMAGE_IMMUNE
	f	Lanv;	m	DISMOUNTS_UNDERWATER
c	ank	net/minecraft/tags/FlatLevelGeneratorPresetTags
	m	(Ljava/lang/String;)Lanv;	a	create
		p	0		id
	f	Lanv;	a	VISIBLE
c	anl	net/minecraft/tags/FluidTags
	m	(Ljava/lang/String;)Lanv;	a	create
		p	0		id
	f	Lanv;	a	WATER
	f	Lanv;	b	LAVA
c	anm	net/minecraft/tags/GameEventTags
	m	(Ljava/lang/String;)Lanv;	a	create
		p	0		id
	f	Lanv;	a	VIBRATIONS
	f	Lanv;	b	WARDEN_CAN_LISTEN
	f	Lanv;	c	SHRIEKER_CAN_LISTEN
	f	Lanv;	d	IGNORE_VIBRATIONS_SNEAKING
	f	Lanv;	e	ALLAY_CAN_LISTEN
c	ann	net/minecraft/tags/InstrumentTags
	m	(Ljava/lang/String;)Lanv;	a	create
		p	0		id
	f	Lanv;	a	REGULAR_GOAT_HORNS
	f	Lanv;	b	SCREAMING_GOAT_HORNS
	f	Lanv;	c	GOAT_HORNS
c	ano	net/minecraft/tags/ItemTags
	m	(Ljava/lang/String;)Lanv;	a	bind
		p	0		id
	f	Lanv;	A	WARPED_STEMS
	f	Lanv;	B	BAMBOO_BLOCKS
	f	Lanv;	C	WART_BLOCKS
	f	Lanv;	D	BANNERS
	f	Lanv;	E	SAND
	f	Lanv;	F	SMELTS_TO_GLASS
	f	Lanv;	G	STAIRS
	f	Lanv;	H	SLABS
	f	Lanv;	I	WALLS
	f	Lanv;	J	ANVIL
	f	Lanv;	K	RAILS
	f	Lanv;	L	LEAVES
	f	Lanv;	M	TRAPDOORS
	f	Lanv;	N	SMALL_FLOWERS
	f	Lanv;	O	BEDS
	f	Lanv;	P	FENCES
	f	Lanv;	Q	TALL_FLOWERS
	f	Lanv;	R	FLOWERS
	f	Lanv;	S	PIGLIN_REPELLENTS
	f	Lanv;	T	PIGLIN_LOVED
	f	Lanv;	U	IGNORED_BY_PIGLIN_BABIES
	f	Lanv;	V	PIGLIN_FOOD
	f	Lanv;	W	FOX_FOOD
	f	Lanv;	X	GOLD_ORES
	f	Lanv;	Y	IRON_ORES
	f	Lanv;	Z	DIAMOND_ORES
	f	Lanv;	aA	DAMPENS_VIBRATIONS
	f	Lanv;	aB	CLUSTER_MAX_HARVESTABLES
	f	Lanv;	aC	COMPASSES
	f	Lanv;	aD	HANGING_SIGNS
	f	Lanv;	aE	CREEPER_IGNITERS
	f	Lanv;	aF	NOTE_BLOCK_TOP_INSTRUMENTS
	f	Lanv;	aG	TRIMMABLE_ARMOR
	f	Lanv;	aH	TRIM_MATERIALS
	f	Lanv;	aI	TRIM_TEMPLATES
	f	Lanv;	aJ	SNIFFER_FOOD
	f	Lanv;	aK	DECORATED_POT_SHARDS
	f	Lanv;	aL	SWORDS
	f	Lanv;	a	WOOL
	f	Lanv;	aM	AXES
	f	Lanv;	aN	HOES
	f	Lanv;	aO	PICKAXES
	f	Lanv;	aP	SHOVELS
	f	Lanv;	aQ	TOOLS
	f	Lanv;	aR	BREAKS_DECORATED_POTS
	f	Lanv;	aa	REDSTONE_ORES
	f	Lanv;	ab	LAPIS_ORES
	f	Lanv;	ac	COAL_ORES
	f	Lanv;	ad	EMERALD_ORES
	f	Lanv;	ae	COPPER_ORES
	f	Lanv;	af	NON_FLAMMABLE_WOOD
	f	Lanv;	ag	SOUL_FIRE_BASE_BLOCKS
	f	Lanv;	ah	CANDLES
	f	Lanv;	ai	DIRT
	f	Lanv;	aj	TERRACOTTA
	f	Lanv;	ak	COMPLETES_FIND_TREE_TUTORIAL
	f	Lanv;	al	BOATS
	f	Lanv;	am	CHEST_BOATS
	f	Lanv;	an	FISHES
	f	Lanv;	ao	SIGNS
	f	Lanv;	ap	MUSIC_DISCS
	f	Lanv;	aq	CREEPER_DROP_MUSIC_DISCS
	f	Lanv;	ar	COALS
	f	Lanv;	as	ARROWS
	f	Lanv;	at	LECTERN_BOOKS
	f	Lanv;	au	BOOKSHELF_BOOKS
	f	Lanv;	av	BEACON_PAYMENT_ITEMS
	f	Lanv;	aw	STONE_TOOL_MATERIALS
	f	Lanv;	ax	STONE_CRAFTING_MATERIALS
	f	Lanv;	ay	FREEZE_IMMUNE_WEARABLES
	f	Lanv;	az	AXOLOTL_TEMPT_ITEMS
	f	Lanv;	b	PLANKS
	f	Lanv;	c	STONE_BRICKS
	f	Lanv;	d	WOODEN_BUTTONS
	f	Lanv;	e	BUTTONS
	f	Lanv;	f	WOOL_CARPETS
	f	Lanv;	g	WOODEN_DOORS
	f	Lanv;	h	WOODEN_STAIRS
	f	Lanv;	i	WOODEN_SLABS
	f	Lanv;	j	WOODEN_FENCES
	f	Lanv;	k	FENCE_GATES
	f	Lanv;	l	WOODEN_PRESSURE_PLATES
	f	Lanv;	m	WOODEN_TRAPDOORS
	f	Lanv;	n	DOORS
	f	Lanv;	o	SAPLINGS
	f	Lanv;	p	LOGS_THAT_BURN
	f	Lanv;	q	LOGS
	f	Lanv;	r	DARK_OAK_LOGS
	f	Lanv;	s	OAK_LOGS
	f	Lanv;	t	BIRCH_LOGS
	f	Lanv;	u	ACACIA_LOGS
	f	Lanv;	v	CHERRY_LOGS
	f	Lanv;	w	JUNGLE_LOGS
	f	Lanv;	x	SPRUCE_LOGS
	f	Lanv;	y	MANGROVE_LOGS
	f	Lanv;	z	CRIMSON_STEMS
c	anp	net/minecraft/tags/PaintingVariantTags
	m	(Ljava/lang/String;)Lanv;	a	create
		p	0		id
	f	Lanv;	a	PLACEABLE
c	anq	net/minecraft/tags/PoiTypeTags
	m	(Ljava/lang/String;)Lanv;	a	create
		p	0		id
	f	Lanv;	a	ACQUIRABLE_JOB_SITE
	f	Lanv;	b	VILLAGE
	f	Lanv;	c	BEE_HOME
c	anr	net/minecraft/tags/StructureTags
	m	(Ljava/lang/String;)Lanv;	a	create
		p	0		id
	f	Lanv;	a	EYE_OF_ENDER_LOCATED
	f	Lanv;	b	DOLPHIN_LOCATED
	f	Lanv;	c	ON_WOODLAND_EXPLORER_MAPS
	f	Lanv;	d	ON_OCEAN_EXPLORER_MAPS
	f	Lanv;	e	ON_TREASURE_MAPS
	f	Lanv;	f	CATS_SPAWN_IN
	f	Lanv;	g	CATS_SPAWN_AS_BLACK
	f	Lanv;	h	VILLAGE
	f	Lanv;	i	MINESHAFT
	f	Lanv;	j	SHIPWRECK
	f	Lanv;	k	RUINED_PORTAL
	f	Lanv;	l	OCEAN_RUIN
c	ans	net/minecraft/tags/TagBuilder
	m	()Lans;	a	create
	m	(Ladd;)Lans;	a	addElement
		p	1		id
	m	(Lant;)Lans;	a	add
		p	1		entry
	m	()Ljava/util/List;	b	build
	m	(Ladd;)Lans;	b	addOptionalElement
		p	1		id
	m	(Ladd;)Lans;	c	addTag
		p	1		id
	m	(Ladd;)Lans;	d	addOptionalTag
		p	1		id
	f	Ljava/util/List;	a	entries
c	ant	net/minecraft/tags/TagEntry
	m	(Ladd;ZZ)V	<init>	<init>
		p	1		id
		p	2		tag
		p	3		required
	m	(Laor$d;Z)V	<init>	<init>
		p	1		id
		p	2		required
	m	()Laor$d;	a	elementOrTag
	m	(Ladd;)Lant;	a	element
		p	0		id
	m	(Lant$a;Ljava/util/function/Consumer;)Z	a	build
		p	1		valueGetter
		p	2		idConsumer
	m	(Lant;)Lcom/mojang/datafixers/util/Either;	a	lambda$static$5
		p	0		entry
	m	(Laor$d;)Lant;	a	lambda$static$2
		p	0		id
	m	(Lcom/mojang/datafixers/util/Either;)Lant;	a	lambda$static$4
		p	0		either
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Ljava/util/function/Consumer;)V	a	visitRequiredDependencies
		p	1		idConsumer
	m	(Ljava/util/function/Predicate;Ljava/util/function/Predicate;)Z	a	verifyIfPresent
		p	1		directEntryPredicate
		p	2		tagEntryPredicate
	m	(Ladd;)Lant;	b	optionalElement
		p	0		id
	m	(Lant;)Lant;	b	lambda$static$3
		p	0		entry
	m	(Ljava/util/function/Consumer;)V	b	visitOptionalDependencies
		p	1		idConsumer
	m	(Ladd;)Lant;	c	tag
		p	0		id
	m	(Lant;)Ljava/lang/Boolean;	c	lambda$static$0
		p	0		entry
	m	(Ladd;)Lant;	d	optionalTag
		p	0		id
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcom/mojang/serialization/Codec;	b	FULL_CODEC
	f	Ladd;	c	id
	f	Z	d	tag
	f	Z	e	required
c	ant$a	net/minecraft/tags/TagEntry$Lookup
	m	(Ladd;)Ljava/lang/Object;	a	element
		p	1		id
	m	(Ladd;)Ljava/util/Collection;	b	tag
		p	1		id
c	anu	net/minecraft/tags/TagFile
	m	()Ljava/util/List;	a	entries
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Z	b	replace
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/List;	b	entries
	f	Z	c	replace
c	anv	net/minecraft/tags/TagKey
	m	()Ladc;	a	registry
	m	(Ladc;)Lcom/mojang/serialization/Codec;	a	codec
		p	0		registry
	m	(Ladc;Ladd;)Lanv;	a	create
		p	0		registry
		p	1		id
	m	(Ladc;Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	a	lambda$hashedCodec$3
		p	1		string
	m	(Lanv;)Ljava/lang/String;	a	lambda$hashedCodec$4
		p	0		string
	m	()Ladd;	b	location
	m	(Ladc;)Lcom/mojang/serialization/Codec;	b	hashedCodec
		p	0		registry
	m	(Ladc;Ladd;)Lanv;	b	lambda$hashedCodec$1
		p	1		id
	m	()Ljava/lang/String;	c	lambda$hashedCodec$2
	m	(Ladc;)Z	c	isFor
		p	1		registryRef
	m	(Ladc;Ladd;)Lanv;	c	lambda$codec$0
		p	1		id
	m	(Ladc;)Ljava/util/Optional;	d	cast
		p	1		registryRef
	f	Ladc;	a	registry
	f	Ladd;	b	location
	f	Lcom/google/common/collect/Interner;	c	VALUES
c	anw	net/minecraft/tags/TagLoader
	m	(Ljava/util/function/Function;Ljava/lang/String;)V	<init>	<init>
		p	1		registryGetter
		p	2		dataType
	m	(Ladd;)Ljava/util/List;	a	lambda$load$0
		p	0		id
	m	(Ladd;Ljava/util/Collection;)V	a	lambda$build$10
		p	1		missingReferences
	m	(Lalh;)Ljava/util/Map;	a	load
		p	1		resourceManager
	m	(Lant$a;Ljava/util/List;)Lcom/mojang/datafixers/util/Either;	a	build
		p	1		valueGetter
		p	2		entries
	m	(Lant$a;Ljava/util/Map;Ladd;Ljava/util/List;)V	a	lambda$build$12
		p	3		tagId2
		p	4		entries
	m	(Lcom/google/common/collect/Multimap;Ladd;Ladd;)Z	a	isCyclic
		p	0		referencedTagIdsByTagId
		p	1		tagId
		p	2		referencedTagId
	m	(Lcom/google/common/collect/Multimap;Ladd;Lanw$a;)V	a	lambda$build$8
		p	2		entry
	m	(Lcom/google/common/collect/Multimap;Ladd;Ljava/util/List;)V	a	lambda$build$9
		p	1		tagId
		p	2		entries
	m	(Ljava/util/List;Ljava/lang/String;Lant;)V	a	lambda$load$1
		p	2		entry
	m	(Ljava/util/Map;)Ljava/util/Map;	a	build
		p	1		tags
	m	(Ljava/util/Map;Ladd;Ljava/util/Collection;)V	a	lambda$build$11
		p	2		resolvedEntries
	m	(Ljava/util/Map;Lcom/google/common/collect/Multimap;Ljava/util/Set;Ladd;Ljava/util/function/BiConsumer;)V	a	visitDependenciesAndElement
		p	0		tags
		p	1		referencedTagIdsByTagId
		p	2		alreadyResolved
		p	3		tagId
		p	4		resolver
	m	(Ljava/util/Map;Lcom/google/common/collect/Multimap;Ljava/util/Set;Lant$a;Ljava/util/Map;Ladd;)V	a	lambda$build$13
		p	6		tagId
	m	(Ljava/util/Map;Lcom/google/common/collect/Multimap;Ljava/util/Set;Ljava/util/function/BiConsumer;Ladd;)V	a	lambda$visitDependenciesAndElement$2
		p	4		resolvedTagId
	m	(Lalh;)Ljava/util/Map;	b	loadAndBuild
		p	1		manager
	m	(Lcom/google/common/collect/Multimap;Ladd;Ladd;)V	b	addDependencyIfNotCyclic
		p	0		referencedTagIdsByTagId
		p	1		tagId
		p	2		referencedTagId
	m	(Lcom/google/common/collect/Multimap;Ladd;Lanw$a;)V	b	lambda$build$5
		p	2		entry
	m	(Lcom/google/common/collect/Multimap;Ladd;Ljava/util/List;)V	b	lambda$build$6
		p	1		tagId
		p	2		entries
	m	(Lcom/google/common/collect/Multimap;Ladd;Ladd;)V	c	lambda$build$7
		p	2		referencedTagId
	m	(Lcom/google/common/collect/Multimap;Ladd;Ladd;)V	d	lambda$build$4
		p	2		referencedTagId
	m	(Lcom/google/common/collect/Multimap;Ladd;Ladd;)Z	e	lambda$isCyclic$3
		p	2		id
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/function/Function;	b	idToValue
	f	Ljava/lang/String;	c	directory
c	anw$1	net/minecraft/tags/TagLoader$1
	m	(Ladd;)Ljava/lang/Object;	a	element
		p	1		id
	m	(Ladd;)Ljava/util/Collection;	b	tag
		p	1		id
	f	Ljava/util/Map;	a	val$newTags
	f	Lanw;	b	this$0
c	anw$a	net/minecraft/tags/TagLoader$EntryWithSource
	m	(Lant;Ljava/lang/String;)V	<init>	<init>
		p	2		source
	m	()Lant;	a	entry
	m	()Ljava/lang/String;	b	source
	f	Lant;	a	entry
	f	Ljava/lang/String;	b	source
c	anx	net/minecraft/tags/TagManager
	m	(Lhr;)V	<init>	<init>
		p	1		registryManager
	m	()Ljava/util/List;	a	getResult
	m	(I)[Ljava/util/concurrent/CompletableFuture;	a	lambda$reload$1
	m	(Ladc;)Ljava/lang/String;	a	getTagDir
		p	0		registry
	m	(Ladc;Lanw;Lalh;)Lanx$a;	a	lambda$createLoader$4
	m	(Lalb$a;Lalh;Lbao;Lbao;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	reload
		p	1		synchronizer
		p	2		manager
		p	3		prepareProfiler
		p	4		applyProfiler
		p	5		prepareExecutor
		p	6		applyExecutor
	m	(Lalh;Ljava/util/concurrent/Executor;Lhr$d;)Ljava/util/concurrent/CompletableFuture;	a	createLoader
		p	1		resourceManager
		p	2		prepareExecutor
		p	3		requirement
	m	(Lhq;Ladc;Ladd;)Ljava/util/Optional;	a	lambda$createLoader$3
		p	2		id
	m	(Ljava/util/List;Ljava/lang/Void;)V	a	lambda$reload$2
		p	2		void_
	m	(Lalh;Ljava/util/concurrent/Executor;Lhr$d;)Ljava/util/concurrent/CompletableFuture;	b	lambda$reload$0
		p	3		registry
	f	Ljava/util/Map;	a	CUSTOM_REGISTRY_DIRECTORIES
	f	Lhr;	b	registryAccess
	f	Ljava/util/List;	c	results
c	anx$a	net/minecraft/tags/TagManager$LoadResult
	m	()Ladc;	a	key
	m	()Ljava/util/Map;	b	tags
	f	Ladc;	a	key
	f	Ljava/util/Map;	b	tags
c	any	net/minecraft/tags/TagNetworkSerialization
	m	(Ladc;Lhq;Lany$a;Lany$b;)V	a	deserializeTagsFromNetwork
		p	0		registryKey
		p	1		registry
		p	2		serialized
		p	3		loader
	m	(Ladc;Lhq;Lany$b;Ladd;Lit/unimi/dsi/fastutil/ints/IntList;)V	a	lambda$deserializeTagsFromNetwork$3
		p	3		tagId
		p	4		rawIds
	m	(Lcom/mojang/datafixers/util/Pair;)Z	a	lambda$serializeTagsToNetwork$1
		p	0		pair
	m	(Lhk;)Ljava/util/Map;	a	serializeTagsToNetwork
		p	0		dynamicRegistryManager
	m	(Lhq;)Lany$a;	a	serializeToNetwork
		p	0		registry
	m	(Lhq;Ljava/util/Map;Lcom/mojang/datafixers/util/Pair;)V	a	lambda$serializeToNetwork$2
		p	2		pair
	m	(Lhr$d;)Lcom/mojang/datafixers/util/Pair;	a	lambda$serializeTagsToNetwork$0
		p	0		registry
c	any$a	net/minecraft/tags/TagNetworkSerialization$NetworkPayload
	m	(Ljava/util/Map;)V	<init>	<init>
		p	1		contents
	m	()Z	a	isEmpty
	m	(Lss;)V	a	write
		p	1		buf
	m	(Lss;)Lany$a;	b	read
		p	0		buf
	f	Ljava/util/Map;	a	tags
c	any$b	net/minecraft/tags/TagNetworkSerialization$TagOutput
	m	(Lanv;Ljava/util/List;)V	accept	accept
		p	1		tag
		p	2		entries
c	anz	net/minecraft/tags/WorldPresetTags
	m	(Ljava/lang/String;)Lanv;	a	create
		p	0		id
	f	Lanv;	a	NORMAL
	f	Lanv;	b	EXTENDED
c	aoa	net/minecraft/tags/package-info
c	aob	net/minecraft/util/AbortableIterationConsumer
	m	(Ljava/util/function/Consumer;Ljava/lang/Object;)Laob$a;	a	lambda$forConsumer$0
		p	1		value
	m	(Ljava/lang/Object;)Laob$a;	accept	accept
		p	1		value
	m	(Ljava/util/function/Consumer;)Laob;	forConsumer	forConsumer
		p	0		consumer
c	aob$a	net/minecraft/util/AbortableIterationConsumer$Continuation
	m	()Z	a	shouldAbort
	m	()[Laob$a;	b	$values
	f	Laob$a;	a	CONTINUE
	f	Laob$a;	b	ABORT
	f	[Laob$a;	c	$VALUES
c	aoc	net/minecraft/util/BitStorage
	m	()[J	a	getRaw
	m	(I)I	a	get
		p	1		index
	m	(II)I	a	getAndSet
		p	1		index
		p	2		value
	m	(Ljava/util/function/IntConsumer;)V	a	getAll
		p	1		action
	m	([I)V	a	unpack
	m	()I	b	getSize
	m	(II)V	b	set
		p	1		index
		p	2		value
	m	()I	c	getBits
	m	()Laoc;	d	copy
c	aod	net/minecraft/util/Brightness
	m	()I	a	pack
	m	(I)Laod;	a	unpack
		p	0		packed
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()I	b	block
	m	()I	c	sky
	f	Lcom/mojang/serialization/Codec;	a	LIGHT_VALUE_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Laod;	c	FULL_BRIGHT
	f	I	d	block
	f	I	e	sky
c	aoe	net/minecraft/util/ByIdMap
	m	(I[Ljava/lang/Object;Ljava/lang/Object;I)Ljava/lang/Object;	a	lambda$continuous$1
		p	3		index
	m	(Ljava/util/function/IntFunction;Ljava/lang/Object;I)Ljava/lang/Object;	a	lambda$sparse$0
		p	2		index
	m	(Ljava/util/function/ToIntFunction;[Ljava/lang/Object;)Ljava/util/function/IntFunction;	a	createMap
		p	0		valueToIdFunction
		p	1		values
	m	(Ljava/util/function/ToIntFunction;[Ljava/lang/Object;Laoe$a;)Ljava/util/function/IntFunction;	a	continuous
		p	0		valueToIdFunction
		p	1		values
		p	2		outOfBoundsHandling
	m	(Ljava/util/function/ToIntFunction;[Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/function/IntFunction;	a	sparse
		p	0		valueToIdFunction
		p	1		values
		p	2		fallback
	m	([Ljava/lang/Object;II)Ljava/lang/Object;	a	lambda$continuous$3
		p	2		index
	m	(Ljava/util/function/ToIntFunction;[Ljava/lang/Object;)[Ljava/lang/Object;	b	createSortedArray
		p	0		valueToIndexFunction
		p	1		values
	m	([Ljava/lang/Object;II)Ljava/lang/Object;	b	lambda$continuous$2
		p	2		index
c	aoe$1	net/minecraft/util/ByIdMap$1
	f	[I	a	$SwitchMap$net$minecraft$util$ByIdMap$OutOfBoundsStrategy
c	aoe$a	net/minecraft/util/ByIdMap$OutOfBoundsStrategy
	m	()[Laoe$a;	a	$values
	f	Laoe$a;	a	ZERO
	f	Laoe$a;	b	WRAP
	f	Laoe$a;	c	CLAMP
	f	[Laoe$a;	d	$VALUES
c	aof	net/minecraft/util/ClassInstanceMultiMap
	m	(Ljava/lang/Class;)V	<init>	<init>
		p	1		elementType
	m	()Ljava/util/List;	a	getAllInstances
	m	(Ljava/lang/Class;)Ljava/util/Collection;	a	find
		p	1		type
	m	(Ljava/lang/Class;)Ljava/util/List;	b	lambda$find$0
		p	1		typeClass
	f	Ljava/util/Map;	a	byClass
	f	Ljava/lang/Class;	b	baseClass
	f	Ljava/util/List;	c	allInstances
c	aog	net/minecraft/util/CommonColors
	f	I	a	WHITE
	f	I	b	BLACK
	f	I	c	RED
c	aoh	net/minecraft/util/CommonLinks
	m	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	a	extendRealms
		p	0		subscriptionId
		p	1		profileId
	m	(Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;	a	extendRealms
		p	0		subscriptionId
		p	1		profileId
		p	2		trial
	f	Ljava/lang/String;	a	GDPR
	f	Ljava/lang/String;	b	EULA
	f	Ljava/lang/String;	c	ATTRIBUTION
	f	Ljava/lang/String;	d	LICENSES
	f	Ljava/lang/String;	e	BUY_MINECRAFT_JAVA
	f	Ljava/lang/String;	f	ACCOUNT_SETTINGS
	f	Ljava/lang/String;	g	SNAPSHOT_FEEDBACK
	f	Ljava/lang/String;	h	RELEASE_FEEDBACK
	f	Ljava/lang/String;	i	SNAPSHOT_BUGS_FEEDBACK
	f	Ljava/lang/String;	j	ACCESSIBILITY_HELP
	f	Ljava/lang/String;	k	REPORTING_HELP
	f	Ljava/lang/String;	l	SUSPENSION_HELP
	f	Ljava/lang/String;	m	BLOCKING_HELP
	f	Ljava/lang/String;	n	START_REALMS_TRIAL
	f	Ljava/lang/String;	o	BUY_REALMS
	f	Ljava/lang/String;	p	REALMS_TERMS
	f	Ljava/lang/String;	q	REALMS_CONTENT_CREATION
	f	Ljava/lang/String;	r	REALMS_UPDATE_MOJANG_ACCOUNT
c	aoi	net/minecraft/util/CrudeIncrementalIntIdentityHashBiMap
	m	(I)V	<init>	<init>
		p	1		size
	m	([Ljava/lang/Object;[I[Ljava/lang/Object;II)V	<init>	<init>
		p	1		values
		p	2		ids
		p	3		idToValues
		p	4		nextId
		p	5		size
	m	()V	a	clear
	m	(I)Ljava/lang/Object;	a	byId
		p	1		index
	m	(Ljava/lang/Object;)I	a	getId
		p	1		value
	m	(Ljava/lang/Object;I)V	a	addMapping
		p	1		value
		p	2		id
	m	()I	b	size
	m	(Ljava/lang/Object;)Z	b	contains
		p	1		value
	m	(Ljava/lang/Object;I)I	b	indexOf
		p	1		value
		p	2		id
	m	()Laoi;	c	copy
	m	(I)Laoi;	c	create
		p	0		expectedSize
	m	(Ljava/lang/Object;)I	c	add
		p	1		value
	m	()I	d	nextId
	m	(I)Z	d	contains
		p	1		index
	m	(Ljava/lang/Object;)I	d	hash
		p	1		value
	m	(I)I	e	getValue
		p	1		index
	m	(I)V	f	grow
		p	1		newSize
	m	(I)I	g	findEmpty
		p	1		size
	f	I	b	NOT_FOUND
	f	Ljava/lang/Object;	c	EMPTY_SLOT
	f	F	d	LOADFACTOR
	f	[Ljava/lang/Object;	e	keys
	f	[I	f	values
	f	[Ljava/lang/Object;	g	byId
	f	I	h	nextId
	f	I	i	size
c	aoj	net/minecraft/util/Crypt
	m	()Ljavax/crypto/SecretKey;	a	generateSecretKey
	m	(ILjava/lang/String;Ljava/security/Key;)Ljavax/crypto/Cipher;	a	setupCipher
		p	0		opMode
		p	1		algorithm
		p	2		key
	m	(ILjava/security/Key;)Ljavax/crypto/Cipher;	a	getCipher
		p	0		opMode
		p	1		key
	m	(ILjava/security/Key;[B)[B	a	cipherData
		p	0		opMode
		p	1		key
		p	2		data
	m	(Ljava/lang/String;)Ljava/security/PrivateKey;	a	stringToPemRsaPrivateKey
		p	0		key
	m	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Laoj$a;)Ljava/security/Key;	a	rsaStringToKey
		p	0		key
		p	1		prefix
		p	2		suffix
		p	3		decoder
	m	(Ljava/lang/String;Ljava/security/PublicKey;Ljavax/crypto/SecretKey;)[B	a	digestData
		p	0		baseServerId
		p	1		publicKey
		p	2		secretKey
	m	(Ljava/security/Key;[B)[B	a	encryptUsingKey
		p	0		key
		p	1		data
	m	(Ljava/security/PrivateKey;)Ljava/lang/String;	a	pemRsaPrivateKeyToString
		p	0		key
	m	(Ljava/security/PrivateKey;[B)Ljavax/crypto/SecretKey;	a	decryptByteToSecretKey
		p	0		privateKey
		p	1		encryptedSecretKey
	m	(Ljava/security/PublicKey;)Ljava/lang/String;	a	rsaPublicKeyToString
		p	0		key
	m	([B)Ljava/security/PublicKey;	a	byteToPublicKey
		p	0		key
	m	([[B)[B	a	digestData
		p	0		bytes
	m	()Ljava/security/KeyPair;	b	generateKeyPair
	m	(Ljava/lang/String;)Ljava/security/PublicKey;	b	stringToRsaPublicKey
		p	0		key
	m	(Ljava/security/Key;[B)[B	b	decryptUsingKey
		p	0		key
		p	1		data
	m	([B)Ljava/security/PrivateKey;	b	byteToPrivateKey
		p	0		key
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	c	lambda$static$1
		p	0		key
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	d	lambda$static$0
		p	0		key
	f	Ljava/lang/String;	a	SIGNING_ALGORITHM
	f	I	b	SIGNATURE_BYTES
	f	Ljava/lang/String;	c	RSA_PUBLIC_KEY_HEADER
	f	Ljava/lang/String;	d	MIME_LINE_SEPARATOR
	f	Ljava/util/Base64$Encoder;	e	MIME_ENCODER
	f	Lcom/mojang/serialization/Codec;	f	PUBLIC_KEY_CODEC
	f	Lcom/mojang/serialization/Codec;	g	PRIVATE_KEY_CODEC
	f	Ljava/lang/String;	h	SYMMETRIC_ALGORITHM
	f	I	i	SYMMETRIC_BITS
	f	Ljava/lang/String;	j	ASYMMETRIC_ALGORITHM
	f	I	k	ASYMMETRIC_BITS
	f	Ljava/lang/String;	l	BYTE_ENCODING
	f	Ljava/lang/String;	m	HASH_ALGORITHM
	f	Ljava/lang/String;	n	PEM_RSA_PRIVATE_KEY_HEADER
	f	Ljava/lang/String;	o	PEM_RSA_PRIVATE_KEY_FOOTER
	f	Ljava/lang/String;	p	RSA_PUBLIC_KEY_FOOTER
c	aoj$a	net/minecraft/util/Crypt$ByteArrayToKeyFunction
	m	([B)Ljava/security/Key;	apply	apply
		p	1		key
c	aoj$b	net/minecraft/util/Crypt$SaltSignaturePair
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()Z	a	isValid
	m	(Lss;Laoj$b;)V	a	write
		p	0		buf
		p	1		signatureData
	m	()[B	b	saltAsBytes
	m	()J	c	salt
	m	()[B	d	signature
	f	Laoj$b;	a	EMPTY
	f	J	b	salt
	f	[B	c	signature
c	aoj$c	net/minecraft/util/Crypt$SaltSupplier
	m	()J	a	getLong
	f	Ljava/security/SecureRandom;	a	secureRandom
c	aok	net/minecraft/util/CryptException
	m	(Ljava/lang/Throwable;)V	<init>	<init>
		p	1		throwable
c	aol	net/minecraft/util/CsvOutput
	m	(Ljava/io/Writer;Ljava/util/List;)V	<init>	<init>
		p	1		writer
		p	2		columns
	m	()Laol$a;	a	builder
	m	(Ljava/lang/Object;)Ljava/lang/String;	a	getStringValue
		p	0		o
	m	(Ljava/util/stream/Stream;)V	a	writeLine
		p	1		columns
	m	([Ljava/lang/Object;)V	a	writeRow
		p	1		columns
	f	Ljava/lang/String;	a	LINE_SEPARATOR
	f	Ljava/lang/String;	b	FIELD_SEPARATOR
	f	Ljava/io/Writer;	c	output
	f	I	d	columnCount
c	aol$a	net/minecraft/util/CsvOutput$Builder
	m	(Ljava/io/Writer;)Laol;	a	build
		p	1		writer
	m	(Ljava/lang/String;)Laol$a;	a	addColumn
		p	1		name
	f	Ljava/util/List;	a	headers
c	aom	net/minecraft/util/CubicSampler
	m	(Lede;Laom$a;)Lede;	a	gaussianSampleVec3
		p	0		pos
		p	1		rgbFetcher
	f	I	a	GAUSSIAN_SAMPLE_RADIUS
	f	I	b	GAUSSIAN_SAMPLE_BREADTH
	f	[D	c	GAUSSIAN_SAMPLE_KERNEL
c	aom$a	net/minecraft/util/CubicSampler$Vec3Fetcher
	m	(III)Lede;	fetch	fetch
		p	1		x
		p	2		y
		p	3		z
c	aon	net/minecraft/util/CubicSpline
	m	()Ljava/lang/String;	a	parityString
	m	(F)Laon;	a	constant
		p	0		value
	m	(FLaon;F)Laon$a;	a	lambda$codec$0
		p	0		location
		p	1		value
		p	2		derivative
	m	(Laon$d;)Laon;	a	mapAll
		p	1		visitor
	m	(Laon$e;)Ljava/lang/Record;	a	lambda$codec$6
		p	0		spline
	m	(Laon$e;I)Laon$a;	a	lambda$codec$2
		p	1		index
	m	(Laon;)Lcom/mojang/datafixers/util/Either;	a	lambda$codec$8
		p	0		spline
	m	(Laqg;)Laon$b;	a	builder
		p	0		locationFunction
	m	(Laqg;Laqg;)Laon$b;	a	builder
		p	0		locationFunction
		p	1		amplifier
	m	(Laqg;Ljava/util/List;)Laon$e;	a	lambda$codec$4
		p	0		locationFunction
		p	1		splines
	m	(Lcom/mojang/datafixers/util/Either;)Laon;	a	lambda$codec$7
		p	0		either
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	codec
		p	0		locationFunctionCodec
	m	(Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$codec$5
		p	2		instance
	m	(Lorg/apache/commons/lang3/mutable/MutableObject;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$codec$1
		p	1		instance
	m	(Laon$e;)Ljava/util/List;	b	lambda$codec$3
		p	0		spline
c	aon$a	net/minecraft/util/CubicSpline$1Point
	m	()F	a	location
	m	()Laon;	b	value
	m	()F	c	derivative
	f	F	a	location
	f	Laon;	b	value
	f	F	c	derivative
c	aon$b	net/minecraft/util/CubicSpline$Builder
	m	(Laqg;)V	<init>	<init>
		p	1		locationFunction
	m	(Laqg;Laqg;)V	<init>	<init>
		p	1		locationFunction
		p	2		amplifier
	m	()Laon;	a	build
	m	(FF)Laon$b;	a	addPoint
		p	1		location
		p	2		value
	m	(FFF)Laon$b;	a	addPoint
		p	1		location
		p	2		value
		p	3		derivative
	m	(FLaon;)Laon$b;	a	addPoint
		p	1		location
		p	2		value
	m	(FLaon;F)Laon$b;	a	addPoint
		p	1		location
		p	2		value
		p	3		derivative
	f	Laqg;	a	coordinate
	f	Laqg;	b	valueTransformer
	f	Lit/unimi/dsi/fastutil/floats/FloatList;	c	locations
	f	Ljava/util/List;	d	values
	f	Lit/unimi/dsi/fastutil/floats/FloatList;	e	derivatives
c	aon$c	net/minecraft/util/CubicSpline$Constant
	m	(F)V	<init>	<init>
		p	1		value
	m	()Ljava/lang/String;	a	parityString
	m	(Laon$d;)Laon;	a	mapAll
		p	1		visitor
	m	(Ljava/lang/Object;)F	a	apply
		p	1		x
	m	()F	b	minValue
	m	()F	c	maxValue
	m	()F	d	value
	f	F	b	value
c	aon$d	net/minecraft/util/CubicSpline$CoordinateVisitor
	m	(Ljava/lang/Object;)Ljava/lang/Object;	visit	visit
		p	1		value
c	aon$e	net/minecraft/util/CubicSpline$Multipoint
	m	()Ljava/lang/String;	a	parityString
	m	(D)Ljava/lang/String;	a	lambda$toString$2
		p	0		value
	m	(F[FF[FI)F	a	linearExtend
	m	(F[FI)Z	a	lambda$findIntervalStart$0
	m	(Laon$d;)Laon;	a	mapAll
		p	1		visitor
	m	(Laon$d;Laon;)Laon;	a	lambda$mapAll$3
		p	1		value
	m	(Laqg;[FLjava/util/List;[F)Laon$e;	a	create
		p	0		locationFunction
		p	1		locations
		p	2		values
		p	3		derivatives
	m	(Ljava/lang/Object;)F	a	apply
		p	1		x
	m	([F)Ljava/lang/String;	a	toString
		p	1		values
	m	([FF)I	a	findIntervalStart
	m	([FI)D	a	lambda$toString$1
		p	1		index
	m	([FLjava/util/List;[F)V	a	validateSizes
	m	()F	b	minValue
	m	()F	c	maxValue
	m	()Laqg;	d	coordinate
	m	()[F	e	locations
	m	()Ljava/util/List;	f	values
	m	()[F	g	derivatives
	f	Laqg;	b	coordinate
	f	[F	c	locations
	f	Ljava/util/List;	d	values
	f	[F	e	derivatives
	f	F	f	minValue
	f	F	g	maxValue
c	aoo	net/minecraft/util/DebugBuffer
	m	(I)V	<init>	<init>
		p	1		maxSize
	m	()Ljava/util/List;	a	dump
	m	(Ljava/lang/Object;)V	a	push
		p	1		value
	f	Ljava/util/concurrent/atomic/AtomicReferenceArray;	a	data
	f	Ljava/util/concurrent/atomic/AtomicInteger;	b	index
c	aop	net/minecraft/util/DirectoryLock
	m	(Ljava/nio/channels/FileChannel;Ljava/nio/channels/FileLock;)V	<init>	<init>
		p	1		channel
		p	2		lock
	m	()Z	a	isValid
	m	(Ljava/nio/file/Path;)Laop;	a	create
		p	0		path
	m	(Ljava/nio/file/Path;)Z	b	isLocked
		p	0		path
	f	Ljava/lang/String;	a	LOCK_FILE
	f	Ljava/nio/channels/FileChannel;	b	lockFile
	f	Ljava/nio/channels/FileLock;	c	lock
	f	Ljava/nio/ByteBuffer;	d	DUMMY
c	aop$a	net/minecraft/util/DirectoryLock$LockException
	m	(Ljava/nio/file/Path;Ljava/lang/String;)V	<init>	<init>
		p	1		path
		p	2		message
	m	(Ljava/nio/file/Path;)Laop$a;	a	alreadyLocked
		p	0		path
c	aoq	net/minecraft/util/ExceptionCollector
	m	()V	a	throwIfPresent
	m	(Ljava/lang/Throwable;)V	a	add
		p	1		throwable
	f	Ljava/lang/Throwable;	a	result
c	aor	net/minecraft/util/ExtraCodecs
	m	()Ljava/lang/String;	a	lambda$static$82
	m	(FFLjava/util/function/Function;)Lcom/mojang/serialization/Codec;	a	floatRangeMinExclusiveWithMessage
		p	0		min
		p	1		max
		p	2		messageFactory
	m	(FFLjava/util/function/Function;Ljava/lang/Float;)Lcom/mojang/serialization/DataResult;	a	lambda$floatRangeMinExclusiveWithMessage$48
		p	3		value
	m	(II)Lcom/mojang/serialization/Codec;	a	intRange
		p	0		min
		p	1		max
	m	(IILjava/lang/Integer;)Ljava/lang/String;	a	lambda$intRange$46
		p	2		value
	m	(IILjava/lang/String;)Lcom/mojang/serialization/DataResult;	a	lambda$sizeLimitedString$86
		p	2		string
	m	(IILjava/util/function/Function;)Lcom/mojang/serialization/Codec;	a	intRangeWithMessage
		p	0		min
		p	1		max
		p	2		messageFactory
	m	(IILjava/util/function/Function;Ljava/lang/Integer;)Lcom/mojang/serialization/DataResult;	a	lambda$intRangeWithMessage$43
		p	3		value
	m	(Ladd;)Laor$d;	a	lambda$static$63
		p	0		id
	m	(Lcom/google/gson/JsonElement;)Lcom/mojang/serialization/DataResult;	a	lambda$static$2
		p	0		element
	m	(Lcom/mojang/authlib/GameProfile;)Lcom/mojang/serialization/DataResult;	a	mapGameProfileToIdName
		p	0		profile
	m	(Lcom/mojang/authlib/GameProfile;Lcom/mojang/authlib/properties/PropertyMap;)Lcom/mojang/authlib/GameProfile;	a	lambda$static$80
		p	0		profile
		p	1		properties
	m	(Lcom/mojang/authlib/GameProfile;Ljava/lang/String;Lcom/mojang/authlib/properties/Property;)V	a	lambda$static$79
		p	1		key
		p	2		property
	m	(Lcom/mojang/authlib/properties/Property;)Ljava/util/Optional;	a	lambda$static$69
		p	0		property
	m	(Lcom/mojang/authlib/properties/PropertyMap;)Lcom/mojang/datafixers/util/Either;	a	lambda$static$76
		p	0		properties
	m	(Lcom/mojang/authlib/properties/PropertyMap;Ljava/lang/String;Ljava/util/List;)V	a	lambda$static$72
		p	1		key
		p	2		values
	m	(Lcom/mojang/authlib/properties/PropertyMap;Ljava/util/List;)V	a	lambda$static$74
		p	1		properties
	m	(Lcom/mojang/authlib/properties/PropertyMap;Ljava/util/Map;)V	a	lambda$static$73
		p	1		map
	m	(Lcom/mojang/datafixers/util/Either;)Lcom/mojang/authlib/properties/PropertyMap;	a	lambda$static$75
		p	0		either
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/serialization/DataResult;	a	mapIdNameToGameProfile
		p	0		pair
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	nonEmptyList
		p	0		originalCodec
	m	(Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	xor
		p	0		first
		p	1		second
	m	(Lcom/mojang/serialization/Codec;Ljava/lang/String;Ljava/lang/String;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$intervalCodec$22
		p	3		instance
	m	(Lcom/mojang/serialization/Codec;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/BiFunction;Ljava/util/function/Function;Ljava/util/function/Function;)Lcom/mojang/serialization/Codec;	a	intervalCodec
		p	0		codec
		p	1		leftFieldName
		p	2		rightFieldName
		p	3		combineFunction
		p	4		leftFunction
		p	5		rightFunction
	m	(Lcom/mojang/serialization/Codec;Ljava/util/function/Function;)Lcom/mojang/serialization/Codec;	a	validate
		p	0		codec
		p	1		validator
	m	(Lcom/mojang/serialization/Codec;Ljava/util/function/Function;Ljava/util/function/Function;)Lcom/mojang/serialization/Codec;	a	overrideLifecycle
		p	0		originalCodec
		p	1		entryLifecycleGetter
		p	2		lifecycleGetter
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/google/gson/JsonElement;	a	lambda$static$0
		p	0		dynamic
	m	(Lcom/mojang/serialization/MapCodec;)Lcom/mojang/serialization/MapCodec;	a	asOptionalLong
		p	0		codec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$81
		p	0		instance
	m	(Lhh;)Lcom/mojang/serialization/DataResult;	a	lambda$nonEmptyHolderSet$53
		p	0		entryList
	m	(Ljava/lang/Float;)Ljava/lang/String;	a	lambda$static$49
		p	0		v
	m	(Ljava/lang/Integer;)Ljava/lang/String;	a	lambda$static$45
		p	0		v
	m	(Ljava/lang/Object;)Lcom/mojang/serialization/Codec$ResultFunction;	a	orElsePartial
		p	0		object
	m	(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/String;	a	lambda$ensureHomogenous$54
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	a	lambda$static$83
		p	0		string
	m	(Ljava/lang/String;III)Ljava/lang/String;	a	lambda$sizeLimitedString$85
	m	(Ljava/lang/String;Ljava/lang/String;Ljava/util/Optional;)Lcom/mojang/authlib/properties/Property;	a	lambda$static$70
		p	0		key
		p	1		value
		p	2		signature
	m	(Ljava/lang/String;Ljava/util/regex/PatternSyntaxException;)Ljava/lang/String;	a	lambda$static$56
	m	(Ljava/time/format/DateTimeFormatter;)Lcom/mojang/serialization/Codec;	a	instantCodec
		p	0		formatter
	m	(Ljava/time/format/DateTimeFormatter;Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	a	lambda$instantCodec$58
		p	1		dateTimeString
	m	(Ljava/util/BitSet;)Ljava/util/stream/LongStream;	a	lambda$static$68
		p	0		set
	m	(Ljava/util/List;)Lcom/mojang/serialization/DataResult;	a	lambda$nonEmptyList$51
		p	0		list
	m	(Ljava/util/Optional;)Ljava/lang/String;	a	lambda$static$78
		p	0		optional
	m	(Ljava/util/OptionalLong;)Ljava/util/Optional;	a	lambda$static$66
		p	0		optionalLong
	m	(Ljava/util/function/BiFunction;Lcom/mojang/datafixers/util/Either;)Lcom/mojang/serialization/DataResult;	a	lambda$intervalCodec$29
		p	1		either
	m	(Ljava/util/function/BiFunction;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/serialization/DataResult;	a	lambda$intervalCodec$23
		p	1		pair
	m	(Ljava/util/function/BiFunction;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	lambda$intervalCodec$28
		p	1		object
	m	(Ljava/util/function/BiFunction;Ljava/util/List;)Lcom/mojang/serialization/DataResult;	a	lambda$intervalCodec$20
		p	1		list
	m	(Ljava/util/function/Function;)Lcom/mojang/serialization/MapCodec;	a	retrieveContext
		p	0		retriever
	m	(Ljava/util/function/Function;Ljava/lang/Float;)Ljava/lang/String;	a	lambda$floatRangeMinExclusiveWithMessage$47
	m	(Ljava/util/function/Function;Ljava/lang/Integer;)Ljava/lang/String;	a	lambda$intRangeWithMessage$42
	m	(Ljava/util/function/Function;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	lambda$stringResolverCodec$41
		p	1		element
	m	(Ljava/util/function/Function;Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	a	lambda$stringResolverCodec$38
		p	1		id
	m	(Ljava/util/function/Function;Ljava/util/Collection;)Lcom/mojang/serialization/DataResult;	a	lambda$ensureHomogenous$55
		p	1		collection
	m	(Ljava/util/function/Function;Ljava/util/function/Function;)Lcom/mojang/serialization/Codec;	a	stringResolverCodec
		p	0		elementToId
		p	1		idToElement
	m	(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/lang/Object;)Lcom/mojang/datafixers/util/Either;	a	lambda$intervalCodec$30
		p	2		pair
	m	(Ljava/util/function/IntFunction;Ljava/lang/Integer;)Lcom/mojang/serialization/DataResult;	a	lambda$idResolverCodec$33
		p	1		rawId
	m	(Ljava/util/function/Supplier;)Lcom/mojang/serialization/Codec;	a	lazyInitializedCodec
		p	0		supplier
	m	(Ljava/util/function/ToIntFunction;ILjava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	lambda$idResolverCodec$35
		p	2		element
	m	(Ljava/util/function/ToIntFunction;Ljava/util/function/IntFunction;I)Lcom/mojang/serialization/Codec;	a	idResolverCodec
		p	0		elementToRawId
		p	1		rawIdToElement
		p	2		errorRawId
	m	(Ljava/util/stream/LongStream;)Ljava/util/BitSet;	a	lambda$static$67
		p	0		stream
	m	(Lorg/joml/AxisAngle4f;)Lorg/joml/Vector3f;	a	lambda$static$11
		p	0		axisAngle
	m	(Lorg/joml/Matrix4f;)Ljava/util/List;	a	lambda$static$18
		p	0		matrix4f
	m	(Lorg/joml/Quaternionf;)Lorg/joml/Quaternionf;	a	lambda$static$14
		p	0		quaternion
	m	(Lorg/joml/Vector3f;)Ljava/util/List;	a	lambda$static$6
		p	0		vec3f
	m	(Ltj;)Lcom/mojang/serialization/DataResult;	a	lambda$static$3
		p	0		text
	m	([B)Ljava/lang/String;	a	lambda$static$61
		p	0		data
	m	()Ljava/lang/String;	b	lambda$static$59
	m	(II)Lcom/mojang/serialization/Codec;	b	sizeLimitedString
		p	0		minLength
		p	1		maxLength
	m	(Ladd;)Laor$d;	b	lambda$static$62
		p	0		id
	m	(Lcom/google/gson/JsonElement;)Lcom/mojang/serialization/Dynamic;	b	lambda$static$1
		p	0		element
	m	(Lcom/mojang/datafixers/util/Either;)Ljava/lang/Object;	b	lambda$intervalCodec$27
		p	0		either
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	b	nonEmptyHolderSet
		p	0		originalCodec
	m	(Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	b	orCompressed
		p	0		uncompressedCodec
		p	1		compressedCodec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$71
		p	0		instance
	m	(Ljava/lang/Integer;)Ljava/lang/String;	b	lambda$static$44
		p	0		v
	m	(Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	b	lambda$stringResolverCodec$40
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	b	lambda$static$64
		p	0		tagEntry
	m	(Ljava/lang/String;III)Ljava/lang/String;	b	lambda$sizeLimitedString$84
	m	(Ljava/util/List;)Lcom/mojang/serialization/DataResult;	b	lambda$static$17
		p	0		list
	m	(Ljava/util/Optional;)Ljava/util/UUID;	b	lambda$static$77
		p	0		optional
	m	(Ljava/util/function/BiFunction;Ljava/util/List;)Lcom/mojang/serialization/DataResult;	b	lambda$intervalCodec$19
		p	1		list
	m	(Ljava/util/function/Function;)Ljava/util/function/Function;	b	ensureHomogenous
		p	0		typeGetter
	m	(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/lang/Object;)Lcom/mojang/datafixers/util/Pair;	b	lambda$intervalCodec$24
		p	2		pair
	m	(Lorg/joml/AxisAngle4f;)Ljava/lang/Float;	b	lambda$static$10
		p	0		axisAngle
	m	(Lorg/joml/Quaternionf;)Lorg/joml/Quaternionf;	b	lambda$static$13
		p	0		quaternion
	m	()Ljava/lang/String;	c	lambda$nonEmptyHolderSet$52
	m	(Lcom/mojang/datafixers/util/Either;)Lorg/joml/Quaternionf;	c	lambda$static$15
		p	0		either
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	c	catchDecoderException
		p	0		codec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	c	lambda$static$12
		p	0		instance
	m	(Ljava/lang/Integer;)Lcom/mojang/serialization/DataResult;	c	lambda$idResolverCodec$32
	m	(Ljava/lang/Object;)Ljava/lang/String;	c	lambda$stringResolverCodec$39
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	c	lambda$static$60
		p	0		encoded
	m	(Ljava/util/List;)Lorg/joml/Matrix4f;	c	lambda$static$16
		p	0		list
	m	(Ljava/util/Optional;)Ljava/util/OptionalLong;	c	lambda$static$65
		p	0		optional
	m	(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/util/List;	c	lambda$intervalCodec$21
		p	2		pair
	m	(Lorg/joml/Quaternionf;)Ljava/util/List;	c	lambda$static$9
		p	0		quaternion
	m	()Ljava/lang/String;	d	lambda$nonEmptyList$50
	m	(Ljava/lang/Integer;)Ljava/lang/String;	d	lambda$idResolverCodec$31
	m	(Ljava/lang/Object;)Ljava/lang/String;	d	lambda$idResolverCodec$34
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	d	lambda$static$57
		p	0		pattern
	m	(Ljava/util/List;)Lcom/mojang/serialization/DataResult;	d	lambda$static$8
		p	0		list
	m	(Ljava/lang/Object;)Ljava/lang/Object;	e	lambda$intervalCodec$26
		p	0		object
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	e	lambda$stringResolverCodec$37
	m	(Ljava/util/List;)Lorg/joml/Quaternionf;	e	lambda$static$7
		p	0		list
	m	(Ljava/lang/Object;)Ljava/lang/Object;	f	lambda$intervalCodec$25
		p	0		object
	m	(Ljava/lang/String;)Ljava/lang/String;	f	lambda$stringResolverCodec$36
	m	(Ljava/util/List;)Lcom/mojang/serialization/DataResult;	f	lambda$static$5
		p	0		list
	m	(Ljava/util/List;)Lorg/joml/Vector3f;	g	lambda$static$4
		p	0		list
	f	Lcom/mojang/serialization/Codec;	a	JSON
	f	Lcom/mojang/serialization/Codec;	b	COMPONENT
	f	Lcom/mojang/serialization/Codec;	c	VECTOR3F
	f	Lcom/mojang/serialization/Codec;	d	QUATERNIONF_COMPONENTS
	f	Lcom/mojang/serialization/Codec;	e	AXISANGLE4F
	f	Lcom/mojang/serialization/Codec;	f	QUATERNIONF
	f	Lcom/mojang/serialization/Codec;	g	MATRIX4F
	f	Lcom/mojang/serialization/Codec;	h	NON_NEGATIVE_INT
	f	Lcom/mojang/serialization/Codec;	i	POSITIVE_INT
	f	Lcom/mojang/serialization/Codec;	j	POSITIVE_FLOAT
	f	Lcom/mojang/serialization/Codec;	k	PATTERN
	f	Lcom/mojang/serialization/Codec;	l	INSTANT_ISO8601
	f	Lcom/mojang/serialization/Codec;	m	BASE64_STRING
	f	Lcom/mojang/serialization/Codec;	n	TAG_OR_ELEMENT_ID
	f	Ljava/util/function/Function;	o	toOptionalLong
	f	Ljava/util/function/Function;	p	fromOptionalLong
	f	Lcom/mojang/serialization/Codec;	q	BIT_SET
	f	Lcom/mojang/serialization/Codec;	r	PROPERTY_MAP
	f	Lcom/mojang/serialization/Codec;	s	GAME_PROFILE
	f	Lcom/mojang/serialization/Codec;	t	NON_EMPTY_STRING
	f	Lcom/mojang/serialization/Codec;	u	PROPERTY
c	aor$1	net/minecraft/util/ExtraCodecs$1
	m	(Lorg/apache/commons/lang3/mutable/MutableObject;)Ljava/lang/String;	a	lambda$apply$0
	f	Ljava/lang/Object;	a	val$value
c	aor$2	net/minecraft/util/ExtraCodecs$2
	f	Lcom/mojang/serialization/Codec;	a	val$compressed
	f	Lcom/mojang/serialization/Codec;	b	val$normal
c	aor$3	net/minecraft/util/ExtraCodecs$3
	m	(Lcom/mojang/serialization/DataResult;Ljava/util/function/Function;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/serialization/DataResult;	a	lambda$apply$0
		p	2		pair
	f	Ljava/util/function/Function;	a	val$decodeLifecycle
	f	Ljava/util/function/Function;	b	val$encodeLifecycle
c	aor$4	net/minecraft/util/ExtraCodecs$4
	m	(Ljava/lang/Object;Ljava/lang/Exception;)Ljava/lang/String;	a	lambda$decode$0
	f	Lcom/mojang/serialization/Codec;	a	val$codec
c	aor$a	net/minecraft/util/ExtraCodecs$1ContextRetrievalCodec
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1		retriever
	f	Ljava/util/function/Function;	a	val$getter
c	aor$b	net/minecraft/util/ExtraCodecs$EitherCodec
	m	(Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		first
		p	2		second
	m	(Lcom/mojang/datafixers/util/Either;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	encode
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$decode$1
		p	0		pair
	m	(Lcom/mojang/datafixers/util/Pair;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$decode$2
		p	0		pair
		p	1		pair2
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	lambda$encode$4
		p	3		right
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	b	lambda$decode$0
		p	0		pair
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	b	lambda$encode$3
		p	3		left
	f	Lcom/mojang/serialization/Codec;	a	first
	f	Lcom/mojang/serialization/Codec;	b	second
c	aor$c	net/minecraft/util/ExtraCodecs$LazyInitializedCodec
	m	()Ljava/util/function/Supplier;	a	delegate
	f	Ljava/util/function/Supplier;	a	delegate
c	aor$d	net/minecraft/util/ExtraCodecs$TagOrElementLocation
	m	()Ladd;	a	id
	m	()Z	b	tag
	m	()Ljava/lang/String;	c	decoratedId
	f	Ladd;	a	id
	f	Z	b	tag
c	aor$e	net/minecraft/util/ExtraCodecs$XorCodec
	m	(Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		first
		p	2		second
	m	(Lcom/mojang/datafixers/util/Either;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	encode
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$decode$1
		p	0		pair
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	lambda$encode$4
		p	3		right
	m	(Ljava/util/Optional;Ljava/util/Optional;)Ljava/lang/String;	a	lambda$decode$2
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	b	lambda$decode$0
		p	0		pair
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	b	lambda$encode$3
		p	3		left
	f	Lcom/mojang/serialization/Codec;	a	first
	f	Lcom/mojang/serialization/Codec;	b	second
c	aos	net/minecraft/util/FastBufferedInputStream
	m	(Ljava/io/InputStream;)V	<init>	<init>
		p	1		stream
	m	(Ljava/io/InputStream;I)V	<init>	<init>
		p	1		stream
		p	2		size
	m	()I	a	bytesInBuffer
	m	()V	b	fill
	f	I	a	DEFAULT_BUFFER_SIZE
	f	Ljava/io/InputStream;	b	in
	f	[B	c	buffer
	f	I	d	limit
	f	I	e	position
c	aot	net/minecraft/util/FastColor
c	aot$a	net/minecraft/util/FastColor$ABGR32
	m	(I)I	a	alpha
		p	0		abgr
	m	(II)I	a	color
		p	0		alpha
		p	1		bgr
	m	(IIII)I	a	color
		p	0		a
		p	1		b
		p	2		g
		p	3		r
	m	(I)I	b	red
		p	0		abgr
	m	(I)I	c	green
		p	0		abgr
	m	(I)I	d	blue
		p	0		abgr
	m	(I)I	e	transparent
		p	0		abgr
	m	(I)I	f	opaque
		p	0		abgr
c	aot$b	net/minecraft/util/FastColor$ARGB32
	m	(FII)I	a	lerp
		p	0		delta
		p	1		start
		p	2		end
	m	(I)I	a	alpha
		p	0		argb
	m	(II)I	a	multiply
		p	0		first
		p	1		second
	m	(IIII)I	a	color
		p	0		alpha
		p	1		red
		p	2		green
		p	3		blue
	m	(I)I	b	red
		p	0		argb
	m	(I)I	c	green
		p	0		argb
	m	(I)I	d	blue
		p	0		argb
c	aou	net/minecraft/util/FileZipper
	m	(Ljava/nio/file/Path;)V	<init>	<init>
		p	1		file
	m	(Ljava/nio/file/Path;)V	a	add
		p	1		source
	m	(Ljava/nio/file/Path;Ljava/io/File;)V	a	add
		p	1		target
		p	2		source
	m	(Ljava/nio/file/Path;Ljava/lang/String;)V	a	add
		p	1		target
		p	2		content
	m	(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Z	a	lambda$add$0
		p	0		path
		p	1		attributes
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/nio/file/Path;	b	outputFile
	f	Ljava/nio/file/Path;	c	tempFile
	f	Ljava/nio/file/FileSystem;	d	fs
c	aov	net/minecraft/util/FormattedCharSequence
	m	(Laov;Laov;Laow;)Z	a	lambda$fromPair$7
		p	2		visitor
	m	(Laow;)Z	a	lambda$static$0
		p	0		visitor
	m	(Laow;Lit/unimi/dsi/fastutil/ints/Int2IntFunction;ILuf;I)Z	a	lambda$decorateOutput$6
		p	2		charIndex
		p	3		style
		p	4		charPoint
	m	(Ljava/lang/String;Luf;Laow;)Z	a	lambda$backward$4
		p	2		visitor
	m	(Ljava/lang/String;Luf;Lit/unimi/dsi/fastutil/ints/Int2IntFunction;Laow;)Z	a	lambda$backward$5
		p	3		visitor
	m	(Ljava/util/List;Laow;)Z	a	lambda$fromList$8
		p	1		visitor
	m	(Luf;ILaow;)Z	a	lambda$codepoint$1
		p	2		visitor
	m	(Laow;)Z	accept	accept
		p	1		visitor
	m	(Ljava/lang/String;Luf;Laow;)Z	b	lambda$forward$2
		p	2		visitor
	m	(Ljava/lang/String;Luf;Lit/unimi/dsi/fastutil/ints/Int2IntFunction;Laow;)Z	b	lambda$forward$3
		p	3		visitor
	m	(Ljava/lang/String;Luf;)Laov;	backward	backward
		p	0		string
		p	1		style
	m	(Ljava/lang/String;Luf;Lit/unimi/dsi/fastutil/ints/Int2IntFunction;)Laov;	backward	backward
		p	0		string
		p	1		style
		p	2		codePointMapper
	m	(ILuf;)Laov;	codepoint	codepoint
		p	0		codePoint
		p	1		style
	m	(Laov;)Laov;	composite	composite
		p	0		text
	m	(Laov;Laov;)Laov;	composite	composite
		p	0		first
		p	1		second
	m	(Ljava/util/List;)Laov;	composite	composite
		p	0		texts
	m	([Laov;)Laov;	composite	composite
		p	0		texts
	m	(Laow;Lit/unimi/dsi/fastutil/ints/Int2IntFunction;)Laow;	decorateOutput	decorateOutput
		p	0		visitor
		p	1		codePointMapper
	m	(Ljava/lang/String;Luf;)Laov;	forward	forward
		p	0		string
		p	1		style
	m	(Ljava/lang/String;Luf;Lit/unimi/dsi/fastutil/ints/Int2IntFunction;)Laov;	forward	forward
		p	0		string
		p	1		style
		p	2		codePointMapper
	m	(Ljava/util/List;)Laov;	fromList	fromList
		p	0		texts
	m	(Laov;Laov;)Laov;	fromPair	fromPair
		p	0		text1
		p	1		text2
	f	Laov;	a	EMPTY
c	aow	net/minecraft/util/FormattedCharSink
	m	(ILuf;I)Z	accept	accept
		p	1		index
		p	2		style
		p	3		codePoint
c	aox	net/minecraft/util/FrameTimer
	m	()I	a	getLogStart
	m	(I)J	a	getAverageDuration
		p	1		offset
	m	(II)I	a	scaleAverageDurationTo
		p	1		offset
	m	(J)V	a	logFrameDuration
		p	1		time
	m	(JII)I	a	scaleSampleTo
		p	1		sample
		p	3		destScale
		p	4		srcScale
	m	()I	b	getLogEnd
	m	(I)I	b	wrapIndex
		p	1		index
	m	()[J	c	getLog
	f	I	a	LOGGING_LENGTH
	f	[J	b	loggedTimes
	f	I	c	logStart
	f	I	d	logLength
	f	I	e	logEnd
c	aoy	net/minecraft/util/FutureChain
	m	(Ljava/util/concurrent/Executor;)V	<init>	<init>
		p	1		executor
	m	(Laqc$a;Ljava/lang/Object;)Ljava/util/concurrent/CompletionStage;	a	lambda$append$1
		p	2		object
	m	(Ljava/lang/Throwable;)Ljava/lang/Object;	a	lambda$append$2
		p	0		throwable
	m	(Ljava/util/concurrent/Executor;Ljava/lang/Runnable;)V	a	lambda$new$0
		p	2		runnable
	m	(Laqc$a;)V	append	append
		p	1		future
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ljava/util/concurrent/CompletableFuture;	c	head
	f	Ljava/util/concurrent/Executor;	d	checkedExecutor
	f	Z	e	closed
c	aoz	net/minecraft/util/Graph
	m	(Ljava/util/Map;Ljava/util/Set;Ljava/util/Set;Ljava/util/function/Consumer;Ljava/lang/Object;)Z	a	depthFirstSearch
		p	0		successors
		p	1		visited
		p	2		visiting
		p	3		reversedOrderConsumer
		p	4		now
c	apa	net/minecraft/util/GsonHelper
	m	(Lcom/google/gson/Gson;Ljava/io/Reader;Lcom/google/gson/reflect/TypeToken;)Ljava/lang/Object;	a	fromJson
		p	0		gson
		p	1		reader
		p	2		typeToken
	m	(Lcom/google/gson/Gson;Ljava/io/Reader;Lcom/google/gson/reflect/TypeToken;Z)Ljava/lang/Object;	a	fromNullableJson
		p	0		gson
		p	1		reader
		p	2		typeToken
		p	3		lenient
	m	(Lcom/google/gson/Gson;Ljava/io/Reader;Ljava/lang/Class;)Ljava/lang/Object;	a	fromJson
		p	0		gson
		p	1		reader
		p	2		type
	m	(Lcom/google/gson/Gson;Ljava/io/Reader;Ljava/lang/Class;Z)Ljava/lang/Object;	a	fromNullableJson
		p	0		gson
		p	1		reader
		p	2		type
		p	3		lenient
	m	(Lcom/google/gson/Gson;Ljava/lang/String;Lcom/google/gson/reflect/TypeToken;)Ljava/lang/Object;	a	fromNullableJson
		p	0		gson
		p	1		content
		p	2		typeToken
	m	(Lcom/google/gson/Gson;Ljava/lang/String;Lcom/google/gson/reflect/TypeToken;Z)Ljava/lang/Object;	a	fromNullableJson
		p	0		gson
		p	1		content
		p	2		typeToken
		p	3		lenient
	m	(Lcom/google/gson/Gson;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;	a	fromJson
		p	0		gson
		p	1		content
		p	2		type
	m	(Lcom/google/gson/Gson;Ljava/lang/String;Ljava/lang/Class;Z)Ljava/lang/Object;	a	fromJson
		p	0		gson
		p	1		content
		p	2		type
		p	3		lenient
	m	(Lcom/google/gson/JsonElement;)Z	a	isStringValue
		p	0		element
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)Ljava/lang/String;	a	convertToString
		p	0		element
		p	1		name
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;Lcom/google/gson/JsonDeserializationContext;Ljava/lang/Class;)Ljava/lang/Object;	a	convertToObject
		p	0		element
		p	1		name
		p	2		context
		p	3		type
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Z	a	isStringValue
		p	0		object
		p	1		element
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;B)B	a	getAsByte
		p	0		object
		p	1		element
		p	2		defaultByte
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;C)C	a	getAsCharacter
		p	0		object
		p	1		element
		p	2		defaultChar
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;D)D	a	getAsDouble
		p	0		object
		p	1		element
		p	2		defaultDouble
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;F)F	a	getAsFloat
		p	0		object
		p	1		element
		p	2		defaultFloat
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;I)I	a	getAsInt
		p	0		object
		p	1		element
		p	2		defaultInt
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;J)J	a	getAsLong
		p	0		object
		p	1		element
		p	2		defaultLong
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Lcfq;)Lcfq;	a	getAsItem
		p	0		object
		p	1		key
		p	2		defaultItem
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Lcom/google/gson/JsonArray;)Lcom/google/gson/JsonArray;	a	getAsJsonArray
		p	0		object
		p	1		name
		p	2		defaultArray
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Lcom/google/gson/JsonDeserializationContext;Ljava/lang/Class;)Ljava/lang/Object;	a	getAsObject
		p	0		object
		p	1		element
		p	2		context
		p	3		type
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Lcom/google/gson/JsonObject;)Lcom/google/gson/JsonObject;	a	getAsJsonObject
		p	0		object
		p	1		element
		p	2		defaultObject
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/Object;Lcom/google/gson/JsonDeserializationContext;Ljava/lang/Class;)Ljava/lang/Object;	a	getAsObject
		p	0		object
		p	1		element
		p	2		defaultValue
		p	3		context
		p	4		type
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	a	getAsString
		p	0		object
		p	1		element
		p	2		defaultStr
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/math/BigDecimal;)Ljava/math/BigDecimal;	a	getAsBigDecimal
		p	0		object
		p	1		element
		p	2		defaultBigDecimal
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/math/BigInteger;)Ljava/math/BigInteger;	a	getAsBigInteger
		p	0		object
		p	1		element
		p	2		defaultBigInteger
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;S)S	a	getAsShort
		p	0		object
		p	1		element
		p	2		defaultShort
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Z)Z	a	getAsBoolean
		p	0		object
		p	1		element
		p	2		defaultBoolean
	m	(Lcom/google/gson/stream/JsonWriter;Lcom/google/gson/JsonElement;Ljava/util/Comparator;)V	a	writeValue
		p	0		writer
		p	1		json
		p	2		comparator
	m	(Ljava/io/Reader;)Lcom/google/gson/JsonObject;	a	parse
		p	0		reader
	m	(Ljava/io/Reader;Z)Lcom/google/gson/JsonObject;	a	parse
		p	0		reader
		p	1		lenient
	m	(Ljava/lang/String;)Lcom/google/gson/JsonObject;	a	parse
		p	0		content
	m	(Ljava/lang/String;Ljava/lang/String;)Lcom/google/gson/JsonSyntaxException;	a	lambda$convertToItem$0
	m	(Ljava/lang/String;Z)Lcom/google/gson/JsonObject;	a	parse
		p	0		content
		p	1		lenient
	m	(Ljava/util/Collection;Ljava/util/Comparator;)Ljava/util/Collection;	a	sortByKeyIfNeeded
		p	0		entries
		p	1		comparator
	m	(Lcom/google/gson/Gson;Ljava/io/Reader;Lcom/google/gson/reflect/TypeToken;Z)Ljava/lang/Object;	b	fromJson
		p	0		gson
		p	1		reader
		p	2		typeToken
		p	3		lenient
	m	(Lcom/google/gson/Gson;Ljava/io/Reader;Ljava/lang/Class;Z)Ljava/lang/Object;	b	fromJson
		p	0		gson
		p	1		reader
		p	2		type
		p	3		lenient
	m	(Lcom/google/gson/Gson;Ljava/lang/String;Ljava/lang/Class;Z)Ljava/lang/Object;	b	fromNullableJson
		p	0		gson
		p	1		content
		p	2		type
		p	3		lenient
	m	(Lcom/google/gson/JsonElement;)Z	b	isNumberValue
		p	0		element
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)Lcfq;	b	convertToItem
		p	0		element
		p	1		name
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Z	b	isNumberValue
		p	0		object
		p	1		element
	m	(Ljava/io/Reader;)Lcom/google/gson/JsonArray;	b	parseArray
		p	0		reader
	m	(Ljava/lang/String;)Lcom/google/gson/JsonArray;	b	parseArray
		p	0		content
	m	(Lcom/google/gson/JsonElement;)Z	c	isBooleanValue
		p	0		object
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)Z	c	convertToBoolean
		p	0		element
		p	1		name
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Z	c	isBooleanValue
		p	0		object
		p	1		element
	m	(Lcom/google/gson/JsonElement;)Ljava/lang/String;	d	getType
		p	0		element
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)D	d	convertToDouble
		p	0		object
		p	1		name
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Z	d	isArrayNode
		p	0		object
		p	1		element
	m	(Lcom/google/gson/JsonElement;)Ljava/lang/String;	e	toStableString
		p	0		json
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)F	e	convertToFloat
		p	0		element
		p	1		name
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Z	e	isObjectNode
		p	0		object
		p	1		element
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)J	f	convertToLong
		p	0		element
		p	1		name
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Z	f	isValidPrimitive
		p	0		object
		p	1		element
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)I	g	convertToInt
		p	0		element
		p	1		name
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Z	g	isValidNode
		p	0		object
		p	1		element
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)B	h	convertToByte
		p	0		element
		p	1		name
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/lang/String;	h	getAsString
		p	0		object
		p	1		element
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)C	i	convertToCharacter
		p	0		element
		p	1		name
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Lcfq;	i	getAsItem
		p	0		object
		p	1		key
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)Ljava/math/BigDecimal;	j	convertToBigDecimal
		p	0		element
		p	1		name
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Z	j	getAsBoolean
		p	0		object
		p	1		element
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)Ljava/math/BigInteger;	k	convertToBigInteger
		p	0		element
		p	1		name
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)D	k	getAsDouble
		p	0		object
		p	1		element
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)S	l	convertToShort
		p	0		element
		p	1		name
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)F	l	getAsFloat
		p	0		object
		p	1		element
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)Lcom/google/gson/JsonObject;	m	convertToJsonObject
		p	0		element
		p	1		name
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)J	m	getAsLong
		p	0		object
		p	1		name
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)Lcom/google/gson/JsonArray;	n	convertToJsonArray
		p	0		element
		p	1		name
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)I	n	getAsInt
		p	0		object
		p	1		element
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)B	o	getAsByte
		p	0		object
		p	1		element
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)C	p	getAsCharacter
		p	0		object
		p	1		element
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/math/BigDecimal;	q	getAsBigDecimal
		p	0		object
		p	1		element
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/math/BigInteger;	r	getAsBigInteger
		p	0		object
		p	1		element
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)S	s	getAsShort
		p	0		object
		p	1		element
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Lcom/google/gson/JsonObject;	t	getAsJsonObject
		p	0		object
		p	1		element
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Lcom/google/gson/JsonArray;	u	getAsJsonArray
		p	0		object
		p	1		element
	f	Lcom/google/gson/Gson;	a	GSON
c	apb	net/minecraft/util/HttpUtil
	m	()I	a	getAvailablePort
	m	(I)Z	a	isPortAvailable
		p	0		port
	m	(Lapn;Ljava/net/URL;Ljava/net/Proxy;Ljava/util/Map;Ljava/io/File;I)Ljava/lang/Object;	a	lambda$downloadTo$0
	m	(Ljava/io/File;Ljava/net/URL;Ljava/util/Map;ILapn;Ljava/net/Proxy;)Ljava/util/concurrent/CompletableFuture;	a	downloadTo
		p	0		file
		p	1		url
		p	2		headers
		p	3		maxFileSize
		p	4		progressListener
		p	5		proxy
	f	Lcom/google/common/util/concurrent/ListeningExecutorService;	a	DOWNLOAD_EXECUTOR
	f	Lorg/slf4j/Logger;	b	LOGGER
c	apc	net/minecraft/util/InclusiveRange
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;)V	<init>	<init>
		p	1		minInclusive
		p	2		maxInclusive
	m	()Ljava/lang/Comparable;	a	minInclusive
	m	(Lapc;)Z	a	contains
		p	1		other
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	codec
		p	0		elementCodec
	m	(Lcom/mojang/serialization/Codec;Ljava/lang/Comparable;Ljava/lang/Comparable;)Lcom/mojang/serialization/Codec;	a	codec
		p	0		codec
		p	1		minInclusive
		p	2		maxInclusive
	m	(Ljava/lang/Comparable;)Z	a	isValueInRange
		p	1		value
	m	(Ljava/lang/Comparable;Lapc;)Ljava/lang/String;	a	lambda$codec$1
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;)Lcom/mojang/serialization/DataResult;	a	create
		p	0		minInclusive
		p	1		maxInclusive
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Lapc;)Lcom/mojang/serialization/DataResult;	a	lambda$codec$2
		p	2		range
	m	()Ljava/lang/Comparable;	b	maxInclusive
	m	(Ljava/lang/Comparable;Lapc;)Ljava/lang/String;	b	lambda$codec$0
	m	()Ljava/lang/String;	c	lambda$create$3
	f	Lcom/mojang/serialization/Codec;	a	INT
	f	Ljava/lang/Comparable;	b	minInclusive
	f	Ljava/lang/Comparable;	c	maxInclusive
c	apd	net/minecraft/util/KeyDispatchDataCodec
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Lcom/mojang/serialization/Codec;)Lapd;	a	of
		p	0		codec
	m	(Lcom/mojang/serialization/MapCodec;)Lapd;	a	of
		p	0		mapCodec
	f	Lcom/mojang/serialization/Codec;	a	codec
c	ape	net/minecraft/util/LazyLoadedValue
	m	(Ljava/util/function/Supplier;)V	<init>	<init>
		p	1		delegate
	m	()Ljava/lang/Object;	a	get
	f	Ljava/util/function/Supplier;	a	factory
c	apf	net/minecraft/util/LinearCongruentialGenerator
	m	(JJ)J	a	next
		p	0		seed
		p	2		salt
	f	J	a	MULTIPLIER
	f	J	b	INCREMENT
c	apg	net/minecraft/util/LowerCaseEnumTypeAdapterFactory
	m	(Ljava/lang/Object;)Ljava/lang/String;	a	toLowercase
		p	1		o
c	apg$1	net/minecraft/util/LowerCaseEnumTypeAdapterFactory$1
	f	Ljava/util/Map;	a	val$lowercaseToConstant
	f	Lapg;	b	this$0
c	aph	net/minecraft/util/MemoryReserve
	m	()V	a	allocate
	m	()V	b	release
	f	[B	a	reserve
c	api	net/minecraft/util/ModCheck
	m	()Z	a	shouldReportAsModified
	m	(Lapi;)Lapi;	a	merge
		p	1		brand
	m	(Ljava/lang/String;Ljava/util/function/Supplier;Ljava/lang/String;Ljava/lang/Class;)Lapi;	a	identify
		p	0		vanillaBrand
		p	1		brandSupplier
		p	2		environment
		p	3		clazz
	m	()Ljava/lang/String;	b	fullDescription
	m	()Lapi$a;	c	confidence
	m	()Ljava/lang/String;	d	description
	f	Lapi$a;	a	confidence
	f	Ljava/lang/String;	b	description
c	api$a	net/minecraft/util/ModCheck$Confidence
	m	(Ljava/lang/String;ILjava/lang/String;Z)V	<init>	<init>
		p	3		description
		p	4		modded
	m	()[Lapi$a;	a	$values
	f	Lapi$a;	a	PROBABLY_NOT
	f	Lapi$a;	b	VERY_LIKELY
	f	Lapi$a;	c	DEFINITELY
	f	Ljava/lang/String;	d	description
	f	Z	e	shouldReportAsModified
	f	[Lapi$a;	f	$VALUES
c	apj	net/minecraft/util/Mth
	m	()Ljava/util/UUID;	a	createInsecureUUID
	m	(D)I	a	floor
		p	0		value
	m	(DD)D	a	absMax
		p	0		a
		p	2		b
	m	(DDD)D	a	clamp
		p	0		value
		p	2		min
		p	4		max
	m	(DDDDD)D	a	clampedMap
		p	0		value
		p	2		oldStart
		p	4		oldEnd
		p	6		newStart
		p	8		newEnd
	m	(DDDDDD)D	a	lerp2
		p	0		deltaX
		p	2		deltaY
		p	4		x0y0
		p	6		x1y0
		p	8		x0y1
		p	10		x1y1
	m	(DDDDDDDDDDD)D	a	lerp3
		p	0		deltaX
		p	2		deltaY
		p	4		deltaZ
		p	6		x0y0z0
		p	8		x1y0z0
		p	10		x0y1z0
		p	12		x1y1z0
		p	14		x0y0z1
		p	16		x1y0z1
		p	18		x0y1z1
		p	20		x1y1z1
	m	(DI)I	a	quantize
		p	0		a
		p	2		b
	m	(F)F	a	sin
		p	0		value
	m	(FF)Z	a	equal
		p	0		a
		p	1		b
	m	(FFF)F	a	clamp
		p	0		value
		p	1		min
		p	2		max
	m	(FFFFF)F	a	catmullrom
		p	0		delta
		p	1		p0
		p	2		p1
		p	3		p2
		p	4		p3
	m	(FII)I	a	lerpInt
		p	0		delta
		p	1		start
		p	2		end
	m	(I)I	a	abs
		p	0		value
	m	(II)I	a	floorDiv
		p	0		dividend
		p	1		divisor
	m	(III)I	a	clamp
		p	0		value
		p	1		min
		p	2		max
	m	(IIII)Ljava/util/stream/IntStream;	a	outFromOrigin
		p	0		seed
		p	1		lowerBound
		p	2		upperBound
		p	3		steps
	m	(IIIII)I	a	lambda$outFromOrigin$2
		p	4		i
	m	(IILjava/util/function/IntPredicate;)I	a	binarySearch
		p	0		min
		p	1		max
		p	2		predicate
	m	(J)J	a	square
		p	0		n
	m	(Lapo;)Ljava/util/UUID;	a	createInsecureUUID
		p	0		random
	m	(Lapo;DD)D	a	nextDouble
		p	0		random
		p	1		min
		p	3		max
	m	(Lapo;FF)F	a	nextFloat
		p	0		random
		p	1		min
		p	2		max
	m	(Lapo;II)I	a	nextInt
		p	0		random
		p	1		min
		p	2		max
	m	(Lede;Lede;Lecz;)Z	a	rayIntersectsAABB
	m	(Lhy;)J	a	getSeed
		p	0		vec
	m	(Ljava/lang/String;I)I	a	getInt
		p	0		string
		p	1		fallback
	m	([F)V	a	lambda$static$0
		p	0		sineTable
	m	(D)J	b	lfloor
		p	0		value
	m	(DD)Z	b	equal
		p	0		a
		p	2		b
	m	(DDD)D	b	clampedLerp
		p	0		start
		p	2		end
		p	4		delta
	m	(DDDDD)D	b	map
		p	0		value
		p	2		oldStart
		p	4		oldEnd
		p	6		newStart
		p	8		newEnd
	m	(F)F	b	cos
		p	0		value
	m	(FF)F	b	positiveModulo
		p	0		dividend
		p	1		divisor
	m	(FFF)F	b	clampedLerp
		p	0		start
		p	1		end
		p	2		delta
	m	(FFFFF)F	b	clampedMap
		p	0		value
		p	1		oldStart
		p	2		oldEnd
		p	3		newStart
		p	4		newEnd
	m	(I)I	b	wrapDegrees
		p	0		degrees
	m	(II)I	b	positiveModulo
		p	0		dividend
		p	1		divisor
	m	(III)J	b	getSeed
		p	0		x
		p	1		y
		p	2		z
	m	(IIII)Z	b	lambda$outFromOrigin$1
		p	3		i
	m	(Lapo;FF)F	b	randomBetween
		p	0		random
		p	1		min
		p	2		max
	m	(Lapo;II)I	b	randomBetweenInclusive
		p	0		random
		p	1		min
		p	2		max
	m	(D)I	c	ceil
		p	0		value
	m	(DD)D	c	positiveModulo
		p	0		dividend
		p	2		divisor
	m	(DDD)D	c	inverseLerp
		p	0		value
		p	2		start
		p	4		end
	m	(F)F	c	sqrt
		p	0		value
	m	(FF)F	c	degreesDifference
		p	0		start
		p	1		end
	m	(FFF)F	c	rotateIfNecessary
		p	0		value
		p	1		mean
		p	2		delta
	m	(FFFFF)F	c	map
		p	0		value
		p	1		oldStart
		p	2		oldEnd
		p	3		newStart
		p	4		newEnd
	m	(I)I	c	smallestEncompassingPowerOfTwo
		p	0		value
	m	(II)Z	c	isMultipleOf
		p	0		a
		p	1		b
	m	(III)Ljava/util/stream/IntStream;	c	outFromOrigin
		p	0		seed
		p	1		lowerBound
		p	2		upperBound
	m	(Lapo;FF)F	c	normal
		p	0		random
		p	1		mean
		p	2		deviation
	m	(D)D	d	wrapDegrees
		p	0		degrees
	m	(DD)D	d	atan2
		p	0		y
		p	2		x
	m	(DDD)D	d	lerp
		p	0		delta
		p	2		start
		p	4		end
	m	(F)I	d	floor
		p	0		value
	m	(FF)F	d	degreesDifferenceAbs
		p	0		first
		p	1		second
	m	(FFF)F	d	approach
		p	0		from
		p	1		to
		p	2		step
	m	(I)Z	d	isPowerOfTwo
		p	0		value
	m	(II)I	d	roundToward
		p	0		value
		p	1		divisor
	m	(D)D	e	frac
		p	0		value
	m	(DD)D	e	lengthSquared
		p	0		a
		p	2		b
	m	(DDD)D	e	lengthSquared
		p	0		a
		p	2		b
		p	4		c
	m	(F)F	e	abs
		p	0		value
	m	(FF)F	e	triangleWave
		p	0		value
		p	1		maxDeviation
	m	(FFF)F	e	approachDegrees
		p	0		from
		p	1		to
		p	2		step
	m	(I)I	e	ceillog2
		p	0		value
	m	(II)I	e	positiveCeilDiv
		p	0		a
		p	1		b
	m	(D)D	f	invSqrt
		p	0		x
	m	(DD)D	f	length
		p	0		a
		p	2		b
	m	(DDD)D	f	length
		p	0		a
		p	2		b
		p	4		c
	m	(F)I	f	ceil
		p	0		value
	m	(FFF)I	f	color
		p	0		r
		p	1		g
		p	2		b
	m	(I)I	f	log2
		p	0		value
	m	(D)D	g	fastInvSqrt
		p	0		x
	m	(F)F	g	wrapDegrees
		p	0		degrees
	m	(FFF)F	g	inverseLerp
		p	0		value
		p	1		start
		p	2		end
	m	(I)I	g	murmurHash3Mixer
		p	0		value
	m	(D)D	h	smoothstep
		p	0		value
	m	(F)F	h	frac
		p	0		value
	m	(FFF)I	h	hsvToRgb
		p	0		hue
		p	1		saturation
		p	2		value
	m	(I)I	h	square
		p	0		n
	m	(D)D	i	smoothstepDerivative
		p	0		value
	m	(F)F	i	invSqrt
		p	0		x
	m	(FFF)F	i	lerp
		p	0		delta
		p	1		start
		p	2		end
	m	(D)I	j	sign
		p	0		value
	m	(F)F	j	fastInvCubeRoot
		p	0		x
	m	(FFF)F	j	rotLerp
		p	0		delta
		p	1		start
		p	2		end
	m	(D)D	k	square
		p	0		n
	m	(F)F	k	square
		p	0		n
	m	(D)D	l	wobble
	f	F	a	PI
	f	F	b	HALF_PI
	f	F	c	TWO_PI
	f	F	d	DEG_TO_RAD
	f	F	e	RAD_TO_DEG
	f	F	f	EPSILON
	f	F	g	SQRT_OF_TWO
	f	J	h	UUID_VERSION
	f	J	i	UUID_VERSION_TYPE_4
	f	J	j	UUID_VARIANT
	f	J	k	UUID_VARIANT_2
	f	F	l	SIN_SCALE
	f	[F	m	SIN
	f	Lapo;	n	RANDOM
	f	[I	o	MULTIPLY_DE_BRUIJN_BIT_POSITION
	f	D	p	ONE_SIXTH
	f	I	q	FRAC_EXP
	f	I	r	LUT_SIZE
	f	D	s	FRAC_BIAS
	f	[D	t	ASIN_TAB
	f	[D	u	COS_TAB
c	apk	net/minecraft/util/NativeModuleLister
	m	()Ljava/util/List;	a	listModules
	m	(Lapk$a;)Ljava/lang/String;	a	lambda$addCrashSection$1
		p	0		moduleName
	m	(Lcom/sun/jna/Pointer;Ljava/lang/String;Lcom/sun/jna/ptr/IntByReference;)Lcom/sun/jna/Pointer;	a	queryVersionValue
		p	0		pointer
		p	1		path
		p	2		lengthPointer
	m	(Ljava/lang/String;)Ljava/util/Optional;	a	tryGetVersion
		p	0		path
	m	(Ljava/lang/String;II)Ljava/lang/String;	a	langTableKey
		p	0		key
		p	1		languageId
		p	2		codePage
	m	(Lp;)V	a	addCrashSection
		p	0		section
	m	([I)Ljava/util/OptionalInt;	a	findLangAndCodepage
		p	0		indices
	m	()Ljava/lang/String;	b	lambda$addCrashSection$2
	m	(Lapk$a;)Ljava/lang/String;	b	lambda$addCrashSection$0
		p	0		module
	m	(Lcom/sun/jna/Pointer;Ljava/lang/String;Lcom/sun/jna/ptr/IntByReference;)Ljava/lang/String;	b	queryVersionString
		p	0		pointer
		p	1		path
		p	2		lengthPointer
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	I	b	LANG_MASK
	f	I	c	DEFAULT_LANG
	f	I	d	CODEPAGE_MASK
	f	I	e	DEFAULT_CODEPAGE
c	apk$a	net/minecraft/util/NativeModuleLister$NativeModuleInfo
	m	(Ljava/lang/String;Ljava/util/Optional;)V	<init>	<init>
		p	1		path
		p	2		info
	m	(Lapk$b;)Ljava/lang/String;	a	lambda$toString$0
		p	1		info
	f	Ljava/lang/String;	a	name
	f	Ljava/util/Optional;	b	version
c	apk$b	net/minecraft/util/NativeModuleLister$NativeModuleVersion
	m	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V	<init>	<init>
		p	1		fileDescription
		p	2		fileVersion
		p	3		companyName
	f	Ljava/lang/String;	a	description
	f	Ljava/lang/String;	b	version
	f	Ljava/lang/String;	c	company
c	apl	net/minecraft/util/OptionEnum
	m	()I	a	getId
	m	()Ljava/lang/String;	b	getKey
	m	()Ltj;	c	getCaption
c	apm	net/minecraft/util/ParticleUtils
	m	(Lapo;)Lede;	a	getRandomSpeedRanges
		p	0		random
	m	(Lcmi;)Lede;	a	lambda$spawnParticlesOnBlockFaces$0
	m	(Lcmi;Lgt;Lapo;Lis;)V	a	spawnParticleBelow
		p	0		world
		p	1		pos
		p	2		random
		p	3		effect
	m	(Lcmi;Lgt;Lgz;Lis;Lede;D)V	a	spawnParticleOnFace
		p	0		world
		p	1		pos
		p	2		direction
		p	3		effect
		p	4		velocity
		p	5		offsetMultiplier
	m	(Lcmi;Lgt;Lis;Lbdd;)V	a	spawnParticlesOnBlockFaces
		p	0		world
		p	1		pos
		p	2		effect
		p	3		count
	m	(Lcmi;Lgt;Lis;Lbdd;Lgz;Ljava/util/function/Supplier;D)V	a	spawnParticlesOnBlockFace
		p	0		world
		p	1		pos
		p	2		effect
		p	3		count
		p	4		direction
		p	5		velocity
		p	6		offsetMultiplier
	m	(Lgz$a;Lcmi;Lgt;DLis;Lbdj;)V	a	spawnParticlesAlongAxis
		p	0		axis
		p	1		world
		p	2		pos
		p	3		variance
		p	5		effect
		p	6		range
c	apn	net/minecraft/util/ProgressListener
	m	()V	a	stop
	m	(I)V	a	progressStagePercentage
		p	1		percentage
	m	(Ltj;)V	a	progressStartNoAbort
		p	1		title
	m	(Ltj;)V	b	progressStart
		p	1		title
	m	(Ltj;)V	c	progressStage
		p	1		task
c	apo	net/minecraft/util/RandomSource
	m	()Lapo;	a	create
	m	(DD)D	a	triangle
		p	1		mode
		p	3		deviation
	m	(I)I	a	nextInt
		p	1		bound
	m	(II)I	a	nextIntBetweenInclusive
		p	1		min
		p	2		max
	m	(J)Lapo;	a	create
		p	0		seed
	m	()Lapo;	b	createThreadSafe
	m	(I)V	b	consumeCount
		p	1		count
	m	(II)I	b	nextInt
		p	1		min
		p	2		max
	m	(J)V	b	setSeed
		p	1		seed
	m	()Lapo;	c	createNewThreadLocalInstance
	m	()Lapo;	d	fork
	m	()Ldhm;	e	forkPositional
	m	()I	f	nextInt
	m	()J	g	nextLong
	m	()Z	h	nextBoolean
	m	()F	i	nextFloat
	m	()D	j	nextDouble
	m	()D	k	nextGaussian
	f	D	a	GAUSSIAN_SPREAD_FACTOR
c	app	net/minecraft/util/ResourceLocationPattern
	m	(Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
		p	1		namespace
		p	2		path
	m	()Ljava/util/function/Predicate;	a	namespacePredicate
	m	(Ladd;)Z	a	lambda$new$5
		p	1		id
	m	(Lapp;)Ljava/util/Optional;	a	lambda$static$1
		p	0		entry
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Ljava/lang/String;)Z	a	lambda$new$4
		p	0		path_
	m	()Ljava/util/function/Predicate;	b	pathPredicate
	m	(Lapp;)Ljava/util/Optional;	b	lambda$static$0
		p	0		entry
	m	(Ljava/lang/String;)Z	b	lambda$new$3
		p	0		namespace_
	m	()Ljava/util/function/Predicate;	c	locationPredicate
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Optional;	b	namespacePattern
	f	Ljava/util/function/Predicate;	c	namespacePredicate
	f	Ljava/util/Optional;	d	pathPattern
	f	Ljava/util/function/Predicate;	e	pathPredicate
	f	Ljava/util/function/Predicate;	f	locationPredicate
c	apq	net/minecraft/util/SegmentedAnglePrecision
	m	(I)V	<init>	<init>
		p	1		precision
	m	()I	a	getMask
	m	(F)I	a	fromDegreesWithTurns
		p	1		degrees
	m	(I)F	a	toDegreesWithTurns
		p	1		rotation
	m	(II)Z	a	isSameAxis
	m	(Lgz;)I	a	fromDirection
		p	1		direction
	m	(F)I	b	fromDegrees
		p	1		degrees
	m	(I)F	b	toDegrees
		p	1		rotation
	m	(I)I	c	normalize
		p	1		rotationBits
	f	I	a	mask
	f	I	b	precision
	f	F	c	degreeToAngle
	f	F	d	angleToDegree
c	apr	net/minecraft/util/SignatureUpdater
	m	(Lapr$a;)V	update	update
		p	1		updater
c	apr$a	net/minecraft/util/SignatureUpdater$Output
	m	([B)V	update	update
		p	1		data
c	aps	net/minecraft/util/SignatureValidator
	m	(Lapr;[B)Z	a	lambda$static$0
		p	0		updatable
		p	1		signatureData
	m	(Lapr;[BLjava/security/Signature;)Z	a	verifySignature
		p	0		updatable
		p	1		signatureData
		p	2		signature
	m	(Lcom/mojang/authlib/yggdrasil/ServicesKeyInfo;)Laps;	a	from
		p	0		servicesKeyInfo
	m	(Lcom/mojang/authlib/yggdrasil/ServicesKeyInfo;Lapr;[B)Z	a	lambda$from$3
		p	1		updatable
		p	2		signatureData
	m	(Ljava/lang/String;Ljava/security/PublicKey;Lapr;[B)Z	a	lambda$from$2
		p	2		updatable
		p	3		signatureData
	m	(Ljava/security/PublicKey;Ljava/lang/String;)Laps;	a	from
		p	0		publicKey
		p	1		algorithm
	m	([BLapr$a;)V	a	lambda$validate$1
		p	1		updater
	m	([B[B)Z	a	validate
		p	1		signedData
		p	2		signatureData
	m	(Lapr;[B)Z	validate	validate
		p	1		updatable
		p	2		signatureData
	f	Laps;	a	NO_VALIDATION
	f	Lorg/slf4j/Logger;	b	LOGGER
c	apt	net/minecraft/util/Signer
	m	(Ljava/lang/String;Ljava/security/PrivateKey;Lapr;)[B	a	lambda$from$1
		p	2		updatable
	m	(Ljava/security/PrivateKey;Ljava/lang/String;)Lapt;	a	from
		p	0		privateKey
		p	1		algorithm
	m	([B)[B	a	sign
		p	1		data
	m	([BLapr$a;)V	a	lambda$sign$0
		p	1		updater
	m	(Lapr;)[B	sign	sign
		p	1		updatable
	f	Lorg/slf4j/Logger;	a	LOGGER
c	apu	net/minecraft/util/SimpleBitStorage
	m	(II)V	<init>	<init>
		p	1		elementBits
		p	2		size
	m	(II[I)V	<init>	<init>
		p	1		elementBits
		p	2		size
		p	3		data
	m	(II[J)V	<init>	<init>
		p	1		elementBits
		p	2		size
		p	3		data
	m	()[J	a	getRaw
	m	(I)I	a	get
		p	1		index
	m	(II)I	a	getAndSet
		p	1		index
		p	2		value
	m	(Ljava/util/function/IntConsumer;)V	a	getAll
		p	1		action
	m	([I)V	a	unpack
	m	()I	b	getSize
	m	(I)I	b	cellIndex
		p	1		index
	m	(II)V	b	set
		p	1		index
		p	2		value
	m	()I	c	getBits
	m	()Laoc;	d	copy
	f	[I	a	MAGIC
	f	[J	b	data
	f	I	c	bits
	f	J	d	mask
	f	I	e	size
	f	I	f	valuesPerLong
	f	I	g	divideMul
	f	I	h	divideAdd
	f	I	i	divideShift
c	apu$a	net/minecraft/util/SimpleBitStorage$InitializationException
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		message
c	apv	net/minecraft/util/SingleKeyCache
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1		mapper
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	getValue
		p	1		input
	f	Ljava/util/function/Function;	a	computeValue
	f	Ljava/lang/Object;	b	cacheKey
	f	Ljava/lang/Object;	c	cachedValue
c	apw	net/minecraft/util/SmoothDouble
	m	()V	a	reset
	m	(DD)D	a	getNewDeltaValue
		p	1		original
		p	3		smoother
	f	D	a	targetValue
	f	D	b	remainingValue
	f	D	c	lastAmount
c	apx	net/minecraft/util/SortedArraySet
	m	(ILjava/util/Comparator;)V	<init>	<init>
		p	1		initialCapacity
		p	2		comparator
	m	()Lapx;	a	create
	m	(I)Lapx;	a	create
		p	0		initialCapacity
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	addOrGet
		p	1		object
	m	(Ljava/lang/Object;I)V	a	addInternal
		p	1		object
		p	2		index
	m	(Ljava/util/Comparator;)Lapx;	a	create
		p	0		comparator
	m	(Ljava/util/Comparator;I)Lapx;	a	create
		p	0		comparator
		p	1		initialCapacity
	m	([Ljava/lang/Object;)[Ljava/lang/Object;	a	castRawArray
		p	0		array
	m	()Ljava/lang/Object;	b	first
	m	(I)I	b	getInsertionPosition
		p	0		binarySearchResult
	m	(Ljava/lang/Object;)Ljava/lang/Object;	b	get
		p	1		object
	m	()Ljava/lang/Object;	c	last
	m	(I)V	c	grow
		p	1		minCapacity
	m	(Ljava/lang/Object;)I	c	findIndex
		p	1		object
	m	(I)V	d	removeInternal
		p	1		index
	m	(I)Ljava/lang/Object;	e	getInternal
		p	1		index
	f	I	a	DEFAULT_INITIAL_CAPACITY
	f	Ljava/util/Comparator;	b	comparator
	f	[Ljava/lang/Object;	c	contents
	f	I	d	size
c	apx$a	net/minecraft/util/SortedArraySet$ArrayIterator
	f	Lapx;	a	this$0
	f	I	b	index
	f	I	c	last
c	apy	net/minecraft/util/SpawnUtil
	m	(Laip;ILgt$a;Lapy$a;)Z	a	moveToPossibleSpawnPosition
		p	0		world
		p	1		verticalRange
		p	2		pos
		p	3		requirements
	m	(Lbfl;Lbgb;Laip;Lgt;IIILapy$a;)Ljava/util/Optional;	a	trySpawnMob
		p	0		entityType
		p	1		reason
		p	2		world
		p	3		pos
		p	4		tries
		p	5		horizontalRange
		p	6		verticalRange
		p	7		requirements
c	apy$a	net/minecraft/util/SpawnUtil$Strategy
	m	(Laip;Lgt;Ldbq;Lgt;Ldbq;)Z	a	lambda$static$1
		p	0		world
		p	1		pos
		p	2		state
		p	3		abovePos
		p	4		aboveState
	m	(Laip;Lgt;Ldbq;Lgt;Ldbq;)Z	b	lambda$static$0
		p	0		world
		p	1		pos
		p	2		state
		p	3		abovePos
		p	4		aboveState
	m	(Laip;Lgt;Ldbq;Lgt;Ldbq;)Z	canSpawnOn	canSpawnOn
		p	1		world
		p	2		pos
		p	3		state
		p	4		abovePos
		p	5		aboveState
	f	Lapy$a;	a	LEGACY_IRON_GOLEM
	f	Lapy$a;	b	ON_TOP_OF_COLLIDER
c	apz	net/minecraft/util/StringDecomposer
	m	(Laow;Luf;Ljava/lang/String;)Ljava/util/Optional;	a	lambda$iterateFormatted$0
		p	1		style
		p	2		string
	m	(Ljava/lang/String;)Ljava/lang/String;	a	filterBrokenSurrogates
		p	0		text
	m	(Ljava/lang/String;ILuf;Laow;)Z	a	iterateFormatted
		p	0		text
		p	1		startIndex
		p	2		style
		p	3		visitor
	m	(Ljava/lang/String;ILuf;Luf;Laow;)Z	a	iterateFormatted
		p	0		text
		p	1		startIndex
		p	2		startingStyle
		p	3		resetStyle
		p	4		visitor
	m	(Ljava/lang/String;Luf;Laow;)Z	a	iterate
		p	0		text
		p	1		style
		p	2		visitor
	m	(Ljava/lang/StringBuilder;ILuf;I)Z	a	lambda$getPlainText$2
		p	1		index
		p	2		style
		p	3		codePoint
	m	(Ltn;)Ljava/lang/String;	a	getPlainText
		p	0		text
	m	(Ltn;Luf;Laow;)Z	a	iterateFormatted
		p	0		text
		p	1		style
		p	2		visitor
	m	(Luf;Laow;IC)Z	a	feedChar
		p	0		style
		p	1		visitor
		p	2		index
		p	3		c
	m	(Ljava/lang/String;Luf;Laow;)Z	b	iterateBackwards
		p	0		text
		p	1		style
		p	2		visitor
	m	(Ljava/lang/StringBuilder;ILuf;I)Z	b	lambda$filterBrokenSurrogates$1
		p	1		index
		p	2		style
		p	3		codePoint
	m	(Ljava/lang/String;Luf;Laow;)Z	c	iterateFormatted
		p	0		text
		p	1		style
		p	2		visitor
	f	C	a	REPLACEMENT_CHAR
	f	Ljava/util/Optional;	b	STOP_ITERATION
c	aqa	net/minecraft/util/StringRepresentable
	m	(Ljava/lang/Enum;)Ljava/lang/Enum;	a	lambda$fromEnumWithMapping$2
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$fromEnum$0
		p	0		id
	m	(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/Enum;	a	lambda$fromEnumWithMapping$3
		p	1		id
	m	(Ljava/util/function/Function;Ljava/lang/Enum;)Ljava/lang/String;	a	lambda$fromEnumWithMapping$1
		p	1		enum_
	m	(Ljava/util/function/Supplier;)Laqa$a;	a	fromEnum
		p	0		enumValues
	m	(Ljava/util/function/Supplier;Ljava/util/function/Function;)Laqa$a;	a	fromEnumWithMapping
		p	0		enumValues
		p	1		valueNameTransformer
	m	([Laqa;)Lcom/mojang/serialization/Keyable;	a	keys
		p	0		values
	m	([Ljava/lang/Enum;Ljava/util/function/Function;Ljava/lang/String;)Ljava/lang/Enum;	a	lambda$fromEnumWithMapping$4
		p	2		id
	m	()Ljava/lang/String;	c	getSerializedName
	f	I	W	PRE_BUILT_MAP_THRESHOLD
c	aqa$1	net/minecraft/util/StringRepresentable$1
	f	[Laqa;	a	val$values
c	aqa$a	net/minecraft/util/StringRepresentable$EnumCodec
	m	([Ljava/lang/Enum;Ljava/util/function/Function;)V	<init>	<init>
		p	1		values
		p	2		idToIdentifiable
	m	(Ljava/lang/Enum;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	encode
	m	(Ljava/lang/Object;)I	a	lambda$new$1
		p	0		enum_
	m	(Ljava/lang/String;)Ljava/lang/Enum;	a	byName
		p	1		id
	m	(Ljava/lang/String;Ljava/lang/Enum;)Ljava/lang/Enum;	a	byName
		p	1		id
		p	2		fallback
	m	([Ljava/lang/Enum;I)Ljava/lang/Enum;	a	lambda$new$2
		p	1		ordinal
	m	(Ljava/lang/Object;)Ljava/lang/String;	b	lambda$new$0
		p	0		identifiable
	f	Lcom/mojang/serialization/Codec;	a	codec
	f	Ljava/util/function/Function;	b	resolver
c	aqb	net/minecraft/util/StringUtil
	m	(I)Ljava/lang/String;	a	formatTickDuration
		p	0		ticks
	m	(Ljava/lang/String;)Ljava/lang/String;	a	stripColor
		p	0		text
	m	(Ljava/lang/String;IZ)Ljava/lang/String;	a	truncateStringIfNecessary
		p	0		text
		p	1		maxLength
		p	2		addEllipsis
	m	(Ljava/lang/String;)Z	b	isNullOrEmpty
		p	0		text
	m	(Ljava/lang/String;)I	c	lineCount
		p	0		text
	m	(Ljava/lang/String;)Z	d	endsWithNewLine
		p	0		text
	m	(Ljava/lang/String;)Ljava/lang/String;	e	trimChatMessage
		p	0		text
	f	Ljava/util/regex/Pattern;	a	STRIP_COLOR_PATTERN
	f	Ljava/util/regex/Pattern;	b	LINE_PATTERN
	f	Ljava/util/regex/Pattern;	c	LINE_END_PATTERN
c	aqc	net/minecraft/util/TaskChainer
	m	(Ljava/lang/Throwable;)Ljava/lang/Object;	a	lambda$immediate$0
		p	0		throwable
	m	(Ljava/util/concurrent/Executor;Laqc$a;)V	a	lambda$immediate$1
		p	1		future
	m	(Laqc$a;)V	append	append
		p	1		future
	m	(Ljava/util/concurrent/Executor;)Laqc;	immediate	immediate
		p	0		executor
	f	Lorg/slf4j/Logger;	a	LOGGER
c	aqc$a	net/minecraft/util/TaskChainer$DelayedTask
	m	(Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	submit	submit
		p	1		executor
c	aqd	net/minecraft/util/ThreadingDetector
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		name
	m	()V	a	checkAndLock
	m	(Ljava/lang/String;Ljava/lang/Thread;)Ly;	a	makeThreadingException
		p	0		message
		p	1		thread
	m	(Ljava/lang/Thread;)Ljava/lang/String;	a	stackTrace
	m	()V	b	checkAndUnlock
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/lang/String;	b	name
	f	Ljava/util/concurrent/Semaphore;	c	lock
	f	Ljava/util/concurrent/locks/Lock;	d	stackTraceLock
	f	Ljava/lang/Thread;	e	threadThatFailedToAcquire
	f	Ly;	f	fullException
c	aqe	net/minecraft/util/TimeSource
	m	(Ljava/util/concurrent/TimeUnit;)J	get	get
		p	1		timeUnit
c	aqe$a	net/minecraft/util/TimeSource$NanoTimeSource
	m	(Ljava/util/concurrent/TimeUnit;)J	get	get
		p	1		timeUnit
c	aqf	net/minecraft/util/TimeUtil
	m	(II)Lbdj;	a	rangeOfSeconds
		p	0		min
		p	1		max
	f	J	a	NANOSECONDS_PER_SECOND
	f	J	b	NANOSECONDS_PER_MILLISECOND
c	aqg	net/minecraft/util/ToFloatFunction
	m	(F)F	a	lambda$static$0
		p	0		value
	m	(Lit/unimi/dsi/fastutil/floats/Float2FloatFunction;)Laqg;	a	createUnlimited
		p	0		delegate
	m	(Ljava/lang/Object;)F	a	apply
		p	1		x
	m	(Ljava/util/function/Function;)Laqg;	a	comap
		p	1		before
	m	()F	b	minValue
	m	()F	c	maxValue
	f	Laqg;	a	IDENTITY
c	aqg$1	net/minecraft/util/ToFloatFunction$1
	m	(Ljava/lang/Float;)F	a	apply
		p	1		x
	m	(Ljava/lang/Object;)F	a	apply
		p	1		x
	m	()F	b	minValue
	m	()F	c	maxValue
	f	Lit/unimi/dsi/fastutil/floats/Float2FloatFunction;	b	val$function
c	aqg$2	net/minecraft/util/ToFloatFunction$2
	m	(Ljava/lang/Object;)F	a	apply
		p	1		x
	m	()F	b	minValue
	m	()F	c	maxValue
	f	Laqg;	b	val$outer
	f	Ljava/util/function/Function;	c	val$function
	f	Laqg;	d	this$0
c	aqh	net/minecraft/util/Tuple
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	<init>	<init>
		p	1		left
		p	2		right
	m	()Ljava/lang/Object;	a	getA
	m	(Ljava/lang/Object;)V	a	setA
		p	1		left
	m	()Ljava/lang/Object;	b	getB
	m	(Ljava/lang/Object;)V	b	setB
		p	1		right
c	aqi	net/minecraft/util/Unit
	m	()[Laqi;	a	$values
	f	Laqi;	a	INSTANCE
	f	[Laqi;	b	$VALUES
c	aqj	net/minecraft/util/VisibleForDebug
c	aqk	net/minecraft/util/ZeroBitStorage
	m	(I)V	<init>	<init>
		p	1		size
	m	()[J	a	getRaw
	m	(I)I	a	get
		p	1		index
	m	(II)I	a	getAndSet
		p	1		index
		p	2		value
	m	(Ljava/util/function/IntConsumer;)V	a	getAll
		p	1		action
	m	([I)V	a	unpack
	m	()I	b	getSize
	m	(II)V	b	set
		p	1		index
		p	2		value
	m	()I	c	getBits
	m	()Laoc;	d	copy
	f	[J	a	RAW
	f	I	b	size
c	aql	net/minecraft/util/datafix/DataFixTypes
	m	(Ljava/lang/String;ILcom/mojang/datafixers/DSL$TypeReference;)V	<init>	<init>
		p	3		typeReference
	m	()I	a	currentVersion
	m	(Lcom/mojang/datafixers/DataFixer;Lcom/mojang/serialization/Dynamic;I)Lcom/mojang/serialization/Dynamic;	a	updateToCurrentVersion
		p	1		dataFixer
		p	2		dynamic
		p	3		oldVersion
	m	(Lcom/mojang/datafixers/DataFixer;Lcom/mojang/serialization/Dynamic;II)Lcom/mojang/serialization/Dynamic;	a	update
		p	1		dataFixer
		p	2		dynamic
		p	3		oldVersion
		p	4		newVersion
	m	(Lcom/mojang/datafixers/DataFixer;Lre;I)Lre;	a	updateToCurrentVersion
		p	1		dataFixer
		p	2		nbt
		p	3		oldVersion
	m	(Lcom/mojang/datafixers/DataFixer;Lre;II)Lre;	a	update
		p	1		dataFixer
		p	2		nbt
		p	3		oldVersion
		p	4		newVersion
	m	()[Laql;	b	$values
	f	Laql;	a	LEVEL
	f	Laql;	b	PLAYER
	f	Laql;	c	CHUNK
	f	Laql;	d	HOTBAR
	f	Laql;	e	OPTIONS
	f	Laql;	f	STRUCTURE
	f	Laql;	g	STATS
	f	Laql;	h	SAVED_DATA
	f	Laql;	i	ADVANCEMENTS
	f	Laql;	j	POI_CHUNK
	f	Laql;	k	WORLD_GEN_SETTINGS
	f	Laql;	l	ENTITY_CHUNK
	f	Ljava/util/Set;	m	TYPES_FOR_LEVEL_LIST
	f	Lcom/mojang/datafixers/DSL$TypeReference;	n	type
	f	[Laql;	o	$VALUES
c	aqm	net/minecraft/util/datafix/DataFixers
	m	()Lcom/mojang/datafixers/DataFixer;	a	getDataFixer
	m	(Lcom/google/common/collect/ImmutableMap;Ljava/lang/String;)Ljava/lang/String;	a	lambda$addFixers$4
	m	(Lcom/mojang/datafixers/DataFixerBuilder;)V	a	addFixers
		p	0		builder
	m	(Lit/unimi/dsi/fastutil/ints/Int2ObjectOpenHashMap;)V	a	lambda$addFixers$5
		p	0		frogVariants
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$addFixers$2
		p	0		id
	m	(Ljava/lang/String;Ljava/lang/String;)Ljava/util/function/UnaryOperator;	a	createRenamer
		p	0		old
		p	1		current
	m	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	a	lambda$createRenamer$8
		p	2		string
	m	(Ljava/util/Map;)Ljava/util/function/UnaryOperator;	a	createRenamer
		p	0		replacements
	m	(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/String;	a	lambda$createRenamer$7
		p	1		string
	m	(Ljava/util/Set;)Lcom/mojang/datafixers/DataFixer;	a	createFixerUpper
		p	0		requiredTypes
	m	(Lit/unimi/dsi/fastutil/ints/Int2ObjectOpenHashMap;)V	b	lambda$addFixers$3
		p	0		catVariants
	m	(Ljava/lang/String;)Ljava/lang/String;	b	lambda$addFixers$1
		p	0		id
	m	(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/String;	b	lambda$addFixers$6
	m	(Ljava/lang/String;)Ljava/lang/String;	c	lambda$addFixers$0
		p	0		id
	f	I	a	BLENDING_VERSION
	f	Ljava/util/function/BiFunction;	b	SAME
	f	Ljava/util/function/BiFunction;	c	SAME_NAMESPACED
	f	Lcom/mojang/datafixers/DataFixer;	d	dataFixer
c	aqm$1	net/minecraft/util/datafix/DataFixers$1
	m	(Lcom/mojang/datafixers/schemas/Schema;ZLjava/lang/String;Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
		p	3		name
		p	4		type
		p	5		choiceName
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
c	aqm$2	net/minecraft/util/datafix/DataFixers$2
	m	(Lcom/mojang/datafixers/schemas/Schema;ZLjava/lang/String;Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
		p	3		name
		p	4		type
		p	5		choiceName
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
c	aqn	net/minecraft/util/datafix/PackedBitStorage
	m	(II)V	<init>	<init>
		p	1		unitSize
		p	2		length
	m	(II[J)V	<init>	<init>
		p	1		unitSize
		p	2		length
		p	3		array
	m	()[J	a	getRaw
	m	(I)I	a	get
		p	1		index
	m	(II)V	a	set
		p	1		index
		p	2		value
	m	()I	b	getBits
	f	I	a	BIT_TO_LONG_SHIFT
	f	[J	b	data
	f	I	c	bits
	f	J	d	mask
	f	I	e	size
c	aqo	net/minecraft/util/datafix/fixes/AbstractArrowPickupFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	updateProjectiles
		p	1		typed
	m	(Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/Typed;	a	updateEntity
		p	1		typed
		p	2		choiceName
		p	3		updater
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	updatePickup
		p	0		arrowData
	m	(Ljava/util/function/Function;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$updateEntity$0
		p	1		t
c	aqp	net/minecraft/util/datafix/fixes/AbstractPoiSectionFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)V	<init>	<init>
		p	1		schema
		p	2		name
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$cap$2
		p	1		pair
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	cap
		p	1		dynamic
	m	(Lcom/mojang/serialization/Dynamic;Ljava/util/stream/Stream;)Lcom/mojang/serialization/Dynamic;	a	lambda$processSectionRecords$4
		p	2		dynamics
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$makeRule$1
		p	1		ops
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	a	processRecords
		p	1		dynamics
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	b	lambda$makeRule$0
		p	1		pair
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	processSection
		p	1		dynamic
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	processSectionRecords
		p	1		dynamic
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$cap$3
		p	1		sections
	f	Ljava/lang/String;	a	name
c	aqq	net/minecraft/util/datafix/fixes/AbstractUUIDFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Lcom/mojang/datafixers/DSL$TypeReference;)V	<init>	<init>
		p	1		outputSchema
		p	2		typeReference
	m	(Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/Typed;	a	updateNamedChoice
		p	1		typed
		p	2		name
		p	3		updater
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/util/Optional;	a	createUUIDFromML
	m	(Lcom/mojang/serialization/Dynamic;JJ)Ljava/util/Optional;	a	createUUIDTag
		p	1		mostBits
		p	3		leastBits
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Ljava/util/Optional;	a	lambda$createUUIDFromString$4
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Ljava/util/Optional;	a	createUUIDFromString
		p	1		key
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional;	a	replaceUUIDString
		p	1		oldKey
		p	2		newKey
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$replaceUUIDMLTag$2
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$replaceUUIDLeastMost$3
	m	(Ljava/util/function/Function;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$updateNamedChoice$0
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional;	b	replaceUUIDMLTag
		p	1		oldKey
		p	2		newKey
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$replaceUUIDString$1
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional;	c	replaceUUIDLeastMost
		p	1		oldKey
		p	2		newKey
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional;	d	createUUIDFromLongs
		p	1		mostBitsKey
		p	2		leastBitsKey
	f	Lcom/mojang/datafixers/DSL$TypeReference;	a	typeReference
c	aqr	net/minecraft/util/datafix/fixes/AddFlagIfNotPresentFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;Z)V	<init>	<init>
		p	1		schema
		p	2		typeReference
		p	3		key
		p	4		value
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$makeRule$0
	f	Ljava/lang/String;	a	name
	f	Z	b	flagValue
	f	Ljava/lang/String;	c	flagKey
	f	Lcom/mojang/datafixers/DSL$TypeReference;	d	typeReference
c	aqs	net/minecraft/util/datafix/fixes/AddNewChoices
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Lcom/mojang/datafixers/DSL$TypeReference;)V	<init>	<init>
		p	1		outputSchema
		p	2		name
		p	3		types
	m	(Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$cap$0
	m	(Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$cap$1
	m	(Ljava/lang/String;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;)Lcom/mojang/datafixers/TypeRewriteRule;	a	cap
		p	1		name
		p	2		inputChoiceType
		p	3		outputChoiceType
	f	Ljava/lang/String;	a	name
	f	Lcom/mojang/datafixers/DSL$TypeReference;	b	type
c	aqt	net/minecraft/util/datafix/fixes/AdvancementsFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$new$0
	f	Ljava/util/Map;	a	RENAMES
c	aqu	net/minecraft/util/datafix/fixes/AdvancementsRenameFix
	m	(Lcom/mojang/datafixers/schemas/Schema;ZLjava/lang/String;Ljava/util/function/Function;)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
		p	3		name
		p	4		renamer
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$3
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$2
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
	f	Ljava/lang/String;	a	name
	f	Ljava/util/function/Function;	b	renamer
c	aqv	net/minecraft/util/datafix/fixes/AttributesRename
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fixItemStackTag
		p	0		typed
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixName
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$fixName$1
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	a	lambda$fixEntity$7
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	fixEntity
		p	0		typed
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fixEntity$9
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	b	lambda$fixItemStackTag$3
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$fixEntity$8
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$fixEntity$6
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	e	lambda$fixItemStackTag$5
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	f	lambda$fixItemStackTag$4
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	g	lambda$fixItemStackTag$2
	f	Ljava/util/Map;	a	RENAMES
c	aqw	net/minecraft/util/datafix/fixes/BedItemColorFix
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
c	aqx	net/minecraft/util/datafix/fixes/BiomeFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	f	Ljava/util/Map;	a	BIOMES
c	aqy	net/minecraft/util/datafix/fixes/BitStorageAlignFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(II[J)[J	a	addPadding
		p	0		maxValue
		p	1		elementBits
		p	2		elements
	m	(ILcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$updateSections$8
		p	1		sectionDynamic
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
		p	5		chunk
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	updateSections
		p	0		levelSectionsFinder
		p	1		sectionFinder
		p	2		paletteFinder
		p	3		level
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$updateSections$10
		p	2		levelSection
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$updateSections$9
		p	1		section
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	updateHeightmaps
		p	1		fixedLevel
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$updateHeightmaps$5
		p	0		levelDynamic
	m	(Lcom/mojang/serialization/Dynamic;ILcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$updateSections$7
		p	2		statesDynamic
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$updateHeightmaps$3
		p	1		heightmap
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$updateHeightmaps$4
		p	1		heightmapsDynamic
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;II)Lcom/mojang/serialization/Dynamic;	a	updateBitStorage
		p	0		sectionDynamic
		p	1		statesDynamic
		p	2		maxValue
		p	3		elementBits
	m	(Ljava/util/List;)Ljava/lang/Integer;	a	lambda$updateSections$6
		p	0		palette
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$makeRule$0
		p	4		level
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$updateHeightmaps$2
		p	1		heightmapDynamic
	f	I	a	BIT_TO_LONG_SHIFT
	f	I	b	SECTION_WIDTH
	f	I	c	SECTION_HEIGHT
	f	I	d	SECTION_SIZE
	f	I	e	HEIGHTMAP_BITS
	f	I	f	HEIGHTMAP_SIZE
c	aqz	net/minecraft/util/datafix/fixes/BlendingDataFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		schema
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
		p	0		typed
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
		p	0		chunk
	m	(Lcom/mojang/serialization/Dynamic;II)Lcom/mojang/serialization/Dynamic;	a	updateBlendingData
		p	0		dynamic
		p	1		height
		p	2		minY
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/OptionalDynamic;)Lcom/mojang/serialization/Dynamic;	a	updateChunkTag
		p	0		chunk
		p	1		context
	f	Ljava/lang/String;	a	name
	f	Ljava/util/Set;	b	STATUSES_TO_SKIP_BLENDING
c	ara	net/minecraft/util/datafix/fixes/BlendingDataRemoveFromNetherEndFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		schema
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
		p	0		typed
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
		p	0		chunk
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/OptionalDynamic;)Lcom/mojang/serialization/Dynamic;	a	updateChunkTag
		p	0		chunk
		p	1		context
c	arb	net/minecraft/util/datafix/fixes/BlockEntityBannerColorFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	a	lambda$fixTag$3
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fixTag$4
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$fixTag$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$fixTag$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	e	lambda$fixTag$0
c	arc	net/minecraft/util/datafix/fixes/BlockEntityBlockStateFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	()Ljava/lang/IllegalStateException;	a	lambda$fix$1
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
	m	()Ljava/lang/IllegalStateException;	b	lambda$fix$0
c	ard	net/minecraft/util/datafix/fixes/BlockEntityCustomNameToComponentFix
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
c	are	net/minecraft/util/datafix/fixes/BlockEntityIdFix
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$2
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$makeRule$3
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$makeRule$1
	m	(Ljava/util/HashMap;)V	a	lambda$static$0
		p	0		map
	f	Ljava/util/Map;	a	ID_MAP
c	arf	net/minecraft/util/datafix/fixes/BlockEntityJukeboxFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	()Ljava/lang/IllegalStateException;	a	lambda$fix$0
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
c	arg	net/minecraft/util/datafix/fixes/BlockEntityKeepPacked
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
c	arh	net/minecraft/util/datafix/fixes/BlockEntityShulkerBoxColorFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fix$0
c	ari	net/minecraft/util/datafix/fixes/BlockEntitySignTextStrictJsonFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fix$0
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	a	updateLine
		p	2		lineName
	f	Lcom/google/gson/Gson;	a	GSON
c	ari$1	net/minecraft/util/datafix/fixes/BlockEntitySignTextStrictJsonFix$1
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ltw;	a	deserialize
c	arj	net/minecraft/util/datafix/fixes/BlockEntityUUIDFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$updateSkull$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	updateSkull
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	updateConduit
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$updateSkull$1
c	ark	net/minecraft/util/datafix/fixes/BlockNameFlatteningFix
	m	(Lcom/mojang/datafixers/util/Either;)Ljava/lang/String;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$2
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$makeRule$3
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$makeRule$0
c	arl	net/minecraft/util/datafix/fixes/BlockRenameFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)V	<init>	<init>
		p	1		oldSchema
		p	2		name
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$3
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/DataFix;	a	create
		p	0		oldSchema
		p	1		name
		p	2		rename
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$2
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$makeRule$1
	m	(Ljava/lang/String;)Ljava/lang/String;	a	fixBlock
		p	1		oldName
	f	Ljava/lang/String;	a	name
c	arl$1	net/minecraft/util/datafix/fixes/BlockRenameFix$1
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Function;)V	<init>	<init>
		p	1		oldSchema
		p	2		name
	m	(Ljava/lang/String;)Ljava/lang/String;	a	fixBlock
		p	1		oldName
	f	Ljava/util/function/Function;	a	val$fixBlock
c	arm	net/minecraft/util/datafix/fixes/BlockRenameFixWithJigsaw
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)V	<init>	<init>
		p	1		oldSchema
		p	2		name
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/DSL$TypeReference;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$4
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$3
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$2
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/DataFix;	b	create
		p	0		oldSchema
		p	1		name
		p	2		rename
	m	(Ljava/lang/String;)Ljava/lang/String;	b	lambda$makeRule$0
	f	Ljava/lang/String;	a	name
c	arm$1	net/minecraft/util/datafix/fixes/BlockRenameFixWithJigsaw$1
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Function;)V	<init>	<init>
		p	1		oldSchema
		p	2		name
	m	(Ljava/lang/String;)Ljava/lang/String;	a	fixBlock
		p	1		oldName
	f	Ljava/util/function/Function;	a	val$fixBlock
c	arn	net/minecraft/util/datafix/fixes/BlockStateData
	m	()V	a	bootstrap0
	m	(I)Ljava/lang/String;	a	upgradeBlock
		p	0		stateId
	m	(ILjava/lang/String;[Ljava/lang/String;)V	a	register
		p	0		oldId
		p	1		newStateStr
		p	2		oldStateStrings
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	upgradeBlockStateTag
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;)V	a	lambda$static$1
	m	(Ljava/lang/String;)Ljava/lang/String;	a	upgradeBlock
		p	0		oldBlockName
	m	()V	b	bootstrap1
	m	(I)Lcom/mojang/serialization/Dynamic;	b	getTag
		p	0		stateId
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;)V	b	lambda$static$0
	m	(Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	b	parse
		p	0		stateStr
	m	()V	c	bootstrap2
	m	()V	d	bootstrap3
	m	()V	e	bootstrap4
	m	()V	f	bootstrap5
	m	()V	g	bootstrap6
	m	()V	h	bootstrap7
	m	()V	i	bootstrap8
	m	()V	j	bootstrap9
	m	()V	k	bootstrap10
	m	()V	l	bootstrap11
	m	()V	m	bootstrap12
	m	()V	n	bootstrap13
	m	()V	o	bootstrap14
	m	()V	p	bootstrap15
	m	()V	q	finalizeMaps
	f	Ljava/lang/String;	a	FILTER_ME
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	[Lcom/mojang/serialization/Dynamic;	c	MAP
	f	[Lcom/mojang/serialization/Dynamic;	d	BLOCK_DEFAULTS
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	e	ID_BY_OLD
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	f	ID_BY_OLD_NAME
c	aro	net/minecraft/util/datafix/fixes/BlockStateStructureTemplateFix
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
c	arp	net/minecraft/util/datafix/fixes/CatTypeFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
c	arq	net/minecraft/util/datafix/fixes/CauldronRenameFix
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fix
c	arr	net/minecraft/util/datafix/fixes/CavesAndCliffsRenames
	f	Lcom/google/common/collect/ImmutableMap;	a	RENAMES
c	ars	net/minecraft/util/datafix/fixes/ChunkBedBlockEntityInjecterFix
	m	()Ljava/lang/IllegalStateException;	a	lambda$cap$3
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$cap$5
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/templates/List$ListType;)Lcom/mojang/datafixers/TypeRewriteRule;	a	cap
		p	1		level
		p	2		blockEntities
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$cap$0
	m	(Lcom/mojang/serialization/Dynamic;IIIIJ)Ljava/util/Map;	a	lambda$cap$2
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$cap$1
	m	(Ljava/util/List;Lcom/mojang/datafixers/types/Type;Lcom/mojang/serialization/Dynamic;Ljava/util/Map;)V	a	lambda$cap$4
c	art	net/minecraft/util/datafix/fixes/ChunkBiomeFix
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
c	aru	net/minecraft/util/datafix/fixes/ChunkDeleteIgnoredLightDataFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		schema
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
c	arv	net/minecraft/util/datafix/fixes/ChunkHeightAndBiomeFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		schema
	m	()Ljava/lang/IllegalStateException;	a	lambda$makeRule$7
	m	(I)I	a	ceillog2
		p	0		value
	m	(IILcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$updateCarvingMasks$21
		p	3		mask
	m	(J)J	a	lambda$getFixedHeightmap$23
		p	0		entry
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$11
		p	5		chunk
	m	(Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$10
		p	4		level
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	shiftUpgradeData
		p	0		upgradeData
	m	(Lcom/mojang/serialization/Dynamic;II)Lcom/mojang/serialization/Dynamic;	a	updateCarvingMasks
		p	0		level
		p	1		sectionsPerChunk
		p	2		oldBottomSectionY
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	makePalettedContainer
		p	0		palette
		p	1		data
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;Ljava/util/List;)Lcom/mojang/serialization/Dynamic;	a	padPaletteEntries
	m	(Lcom/mojang/serialization/Dynamic;Lit/unimi/dsi/fastutil/ints/Int2IntFunction;)Lcom/mojang/serialization/Dynamic;	a	makeBiomeContainer
		p	0		level
		p	1		biomeGetter
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/Integer;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeBiomeContainer$24
		p	1		rawBiomeId
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	a	addPaddingEntries
		p	0		level
		p	1		key
	m	(Lcom/mojang/serialization/Dynamic;Ljava/util/Set;)Lcom/mojang/serialization/Dynamic;	a	predictChunkStatusBeforeSurface
		p	1		level
		p	2		blocks
	m	(Lcom/mojang/serialization/Dynamic;ZILorg/apache/commons/lang3/mutable/MutableBoolean;)[Lcom/mojang/serialization/Dynamic;	a	getBiomeContainers
		p	0		level
		p	1		overworld
		p	3		heightAlreadyUpdated
	m	(Lcom/mojang/serialization/Dynamic;ZZZLjava/util/function/Supplier;)Lcom/mojang/serialization/Dynamic;	a	updateChunkTag
		p	0		level
		p	1		overworld
		p	2		heightAlreadyUpdated
		p	3		atNoiseStatus
	m	(Ljava/util/Map;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)V	a	lambda$shiftUpgradeData$18
		p	1		key
		p	2		value
	m	(Ljava/util/Map;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;Ljava/lang/Integer;)V	a	lambda$shiftUpgradeData$17
		p	3		index
	m	(Ljava/util/Map;Ljava/util/Map;)V	a	lambda$shiftUpgradeData$19
		p	1		indicesMap
	m	(Ljava/util/Set;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$predictChunkStatusBeforeSurface$12
		p	1		status
	m	(Ljava/util/Set;Lcom/mojang/serialization/Dynamic;I[Lcom/mojang/serialization/Dynamic;Lit/unimi/dsi/fastutil/ints/IntSet;Lorg/apache/commons/lang3/mutable/MutableObject;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$6
	m	(Ljava/util/Set;Lcom/mojang/serialization/Dynamic;I[Lcom/mojang/serialization/Dynamic;Lorg/apache/commons/lang3/mutable/MutableObject;Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$8
		p	7		sections
	m	(Ljava/util/Set;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Ljava/util/Optional;	a	lambda$makeRule$4
	m	(ZLjava/util/Set;Lorg/apache/commons/lang3/mutable/MutableBoolean;Ljava/lang/String;Lorg/apache/commons/lang3/mutable/MutableObject;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$9
		p	6		level2
	m	([II)I	a	getOldBiome
		p	0		is
		p	1		index
	m	([III)I	a	lambda$getBiomeContainers$14
		p	2		sectionY
	m	()Ljava/lang/IllegalStateException;	b	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	updateHeightmaps
		p	0		level
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	makeOptimizedPalettedContainer
	m	([II)I	b	lambda$getBiomeContainers$16
		p	1		sectionY
	m	([III)I	b	lambda$getBiomeContainers$13
		p	2		sectionY
	m	()Lary$a;	c	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	getFixedHeightmap
		p	0		heightmap
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$makeRule$3
	m	([II)I	c	lambda$getBiomeContainers$15
		p	1		sectionY
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	makePalettedContainer
		p	0		palette
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	e	lambda$updateHeightmaps$22
		p	0		heightmaps
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	f	lambda$shiftUpgradeData$20
		p	0		indices
	m	(Lcom/mojang/serialization/Dynamic;)Lary$a;	g	lambda$makeRule$5
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/lang/String;	h	lambda$makeRule$2
	f	Ljava/lang/String;	a	DATAFIXER_CONTEXT_TAG
	f	I	b	BLOCKS_PER_SECTION
	f	Ljava/lang/String;	c	DEFAULT_BIOME
	f	Ljava/lang/String;	d	NAME
	f	I	e	OLD_SECTION_COUNT
	f	I	f	NEW_SECTION_COUNT
	f	I	g	NEW_MIN_SECTION_Y
	f	I	h	LONGS_PER_SECTION
	f	I	i	HEIGHTMAP_BITS
	f	J	j	HEIGHTMAP_MASK
	f	I	k	HEIGHTMAP_OFFSET
	f	[Ljava/lang/String;	l	HEIGHTMAP_TYPES
	f	Ljava/util/Set;	m	STATUS_IS_OR_AFTER_SURFACE
	f	Ljava/util/Set;	n	STATUS_IS_OR_AFTER_NOISE
	f	Ljava/util/Set;	o	BLOCKS_BEFORE_FEATURE_STATUS
	f	I	p	BIOME_CONTAINER_LAYER_SIZE
	f	I	q	BIOME_CONTAINER_SIZE
	f	I	r	BIOME_CONTAINER_TOP_LAYER_OFFSET
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	s	BIOMES_BY_ID
c	arw	net/minecraft/util/datafix/fixes/ChunkLightRemoveFix
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
c	arx	net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix
	m	(Laoi;Lcom/mojang/serialization/Dynamic;)I	a	idFor
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/lang/String;	a	getName
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Ljava/lang/String;	a	getProperty
	m	(Lit/unimi/dsi/fastutil/ints/Int2ObjectOpenHashMap;)V	a	lambda$static$4
		p	0		map
	m	(Ljava/util/HashMap;)V	a	lambda$static$6
		p	0		map
	m	(Ljava/util/Map;ILjava/lang/String;)V	a	addBeds
		p	0		out
		p	2		color
	m	(Ljava/util/Map;ILjava/lang/String;Ljava/lang/String;)V	a	mapSkull
		p	0		out
		p	2		mob
		p	3		block
	m	(Ljava/util/Map;Ljava/lang/String;I)V	a	mapDoor
		p	0		out
		p	1		name
	m	(ZZZZ)I	a	getSideMask
		p	0		west
		p	1		east
		p	2		north
		p	3		south
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	fix
	m	(Ljava/util/HashMap;)V	b	lambda$static$5
		p	0		map
	m	(Ljava/util/Map;ILjava/lang/String;)V	b	addBanners
		p	0		out
		p	2		color
	m	(Ljava/util/HashMap;)V	c	lambda$static$3
		p	0		map
	m	(Ljava/util/HashMap;)V	d	lambda$static$2
		p	0		map
	m	(Ljava/util/HashMap;)V	e	lambda$static$1
		p	0		map
	m	(Ljava/util/HashMap;)V	f	lambda$static$0
		p	0		map
	f	Ljava/util/Map;	A	BED_BLOCK_MAP
	f	Ljava/util/Map;	B	BANNER_BLOCK_MAP
	f	Lcom/mojang/serialization/Dynamic;	C	AIR
	f	I	D	SIZE
	f	I	a	NORTH_WEST_MASK
	f	I	b	WEST_MASK
	f	I	c	SOUTH_WEST_MASK
	f	I	d	SOUTH_MASK
	f	I	e	SOUTH_EAST_MASK
	f	I	f	EAST_MASK
	f	I	g	NORTH_EAST_MASK
	f	I	h	NORTH_MASK
	f	Lorg/slf4j/Logger;	i	LOGGER
	f	Ljava/util/BitSet;	j	VIRTUAL
	f	Ljava/util/BitSet;	k	FIX
	f	Lcom/mojang/serialization/Dynamic;	l	PUMPKIN
	f	Lcom/mojang/serialization/Dynamic;	m	SNOWY_PODZOL
	f	Lcom/mojang/serialization/Dynamic;	n	SNOWY_GRASS
	f	Lcom/mojang/serialization/Dynamic;	o	SNOWY_MYCELIUM
	f	Lcom/mojang/serialization/Dynamic;	p	UPPER_SUNFLOWER
	f	Lcom/mojang/serialization/Dynamic;	q	UPPER_LILAC
	f	Lcom/mojang/serialization/Dynamic;	r	UPPER_TALL_GRASS
	f	Lcom/mojang/serialization/Dynamic;	s	UPPER_LARGE_FERN
	f	Lcom/mojang/serialization/Dynamic;	t	UPPER_ROSE_BUSH
	f	Lcom/mojang/serialization/Dynamic;	u	UPPER_PEONY
	f	Ljava/util/Map;	v	FLOWER_POT_MAP
	f	Ljava/util/Map;	w	SKULL_MAP
	f	Ljava/util/Map;	x	DOOR_MAP
	f	Ljava/util/Map;	y	NOTE_BLOCK_MAP
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	z	DYE_COLOR_MAP
c	arx$1	net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$1
	f	[I	a	$SwitchMap$net$minecraft$util$datafix$fixes$ChunkPalettedStorageFix$Direction$Axis
c	arx$a	net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$DataLayer
	m	(I)Z	a	isFirst
		p	1		index
	m	(III)I	a	get
		p	1		x
		p	2		y
	m	(I)I	b	getPosition
		p	1		index
	f	I	a	SIZE
	f	I	b	NIBBLE_SIZE
	f	[B	c	data
c	arx$b	net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Direction
	m	(Ljava/lang/String;ILarx$b$b;Larx$b$a;)V	<init>	<init>
		p	3		direction
	m	()Larx$b$b;	a	getAxisDirection
	m	()Larx$b$a;	b	getAxis
	m	()[Larx$b;	c	$values
	f	Larx$b;	a	DOWN
	f	Larx$b;	b	UP
	f	Larx$b;	c	NORTH
	f	Larx$b;	d	SOUTH
	f	Larx$b;	e	WEST
	f	Larx$b;	f	EAST
	f	Larx$b$a;	g	axis
	f	Larx$b$b;	h	axisDirection
	f	[Larx$b;	i	$VALUES
c	arx$b$a	net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Direction$Axis
	m	()[Larx$b$a;	a	$values
	f	Larx$b$a;	a	X
	f	Larx$b$a;	b	Y
	f	Larx$b$a;	c	Z
	f	[Larx$b$a;	d	$VALUES
c	arx$b$b	net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Direction$AxisDirection
	m	()I	a	getStep
	m	()[Larx$b$b;	b	$values
	f	Larx$b$b;	a	POSITIVE
	f	Larx$b$b;	b	NEGATIVE
	f	I	c	step
	f	[Larx$b$b;	d	$VALUES
c	arx$c	net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Section
	m	()Lcom/mojang/serialization/Dynamic;	a	write
	m	(I)Lcom/mojang/serialization/Dynamic;	a	getBlock
		p	1		index
	m	(II)V	a	addFix
		p	1		section
		p	2		index
	m	(ILcom/mojang/serialization/Dynamic;)V	a	setBlock
		p	1		pos
	m	(Ljava/nio/ByteBuffer;)Larx$a;	a	lambda$upgrade$1
	m	(I)I	b	upgrade
		p	1		sidesToUpgrade
	m	(Ljava/nio/ByteBuffer;)Larx$a;	b	lambda$upgrade$0
	f	I	a	y
	f	Laoi;	b	palette
	f	Ljava/util/List;	c	listTag
	f	Lcom/mojang/serialization/Dynamic;	d	section
	f	Z	e	hasData
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	f	toFix
	f	Lit/unimi/dsi/fastutil/ints/IntList;	g	update
	f	Ljava/util/Set;	h	seen
	f	[I	i	buffer
c	arx$d	net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$UpgradeChunk
	m	()Lcom/mojang/serialization/Dynamic;	a	write
	m	(I)Lcom/mojang/serialization/Dynamic;	a	getBlock
	m	(ILarx$b;)I	a	relative
		p	1		direction
	m	(ILcom/mojang/serialization/Dynamic;)V	a	setBlock
	m	(Lcom/mojang/serialization/Dynamic;)V	a	lambda$new$2
	m	(Ljava/util/stream/Stream;)V	a	lambda$new$3
	m	(I)Lcom/mojang/serialization/Dynamic;	b	getBlockEntity
	m	(Lcom/mojang/serialization/Dynamic;)V	b	lambda$new$0
	m	(Ljava/util/stream/Stream;)V	b	lambda$new$1
	m	(I)Lcom/mojang/serialization/Dynamic;	c	removeBlockEntity
	m	(I)Larx$c;	d	getSection
	f	I	a	sides
	f	[Larx$c;	b	sections
	f	Lcom/mojang/serialization/Dynamic;	c	level
	f	I	d	x
	f	I	e	z
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	f	blockEntities
c	ary	net/minecraft/util/datafix/fixes/ChunkProtoTickListFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		schema
	m	(BLcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$9
	m	(I)Z	a	lambda$makeTickList$14
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$12
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$11
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lorg/apache/commons/lang3/mutable/MutableInt;Lcom/mojang/datafixers/OpticFinder;Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)V	a	lambda$makeRule$7
	m	(Lcom/mojang/datafixers/OpticFinder;Lorg/apache/commons/lang3/mutable/MutableInt;Lcom/mojang/datafixers/OpticFinder;Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)V	a	lambda$makeRule$6
	m	(Lcom/mojang/datafixers/Typed;)Ljava/util/List;	a	lambda$makeRule$3
	m	(Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/OpticFinder;)Lary$a;	a	lambda$makeRule$4
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/lang/String;	a	getBlock
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$10
	m	(Lcom/mojang/serialization/Dynamic;Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;BIILjava/lang/String;Ljava/util/function/Function;)Lcom/mojang/serialization/Dynamic;	a	makeTickList
	m	(Lcom/mojang/serialization/Dynamic;Ljava/util/function/Supplier;IIIILjava/util/function/Function;)Lcom/mojang/serialization/Dynamic;	a	createTick
	m	(Lcom/mojang/serialization/Dynamic;Ljava/util/function/Supplier;IIILjava/util/function/Function;I)Lcom/mojang/serialization/Dynamic;	a	lambda$makeTickList$15
	m	(Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;ILcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)V	a	lambda$makeRule$5
	m	(BLcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$makeRule$8
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/lang/String;	b	getLiquid
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;)I	c	lambda$makeTickList$13
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/util/List;	d	lambda$makeRule$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	e	lambda$makeRule$1
	f	I	a	SECTION_WIDTH
	f	Lcom/google/common/collect/ImmutableSet;	b	ALWAYS_WATERLOGGED
c	ary$a	net/minecraft/util/datafix/fixes/ChunkProtoTickListFix$PoorMansPalettedContainer
	m	()Ljava/util/List;	a	palette
	m	(III)Lcom/mojang/serialization/Dynamic;	a	get
	m	()[J	b	data
	m	(III)I	b	getIndex
	f	J	a	SIZE_BITS
	f	Ljava/util/List;	b	palette
	f	[J	c	data
	f	I	d	bits
	f	J	e	mask
	f	I	f	valuesPerLong
c	arz	net/minecraft/util/datafix/fixes/ChunkRenamesFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		schema
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	appendChunkName
	m	(Lcom/mojang/datafixers/Typed;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	mergeRemainders
	m	(Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/datafixers/Typed;	a	renameField
		p	1		oldKey
		p	2		newKey
	m	(Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/lang/String;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/Typed;	a	renameFieldHelper
		p	1		oldKey
		p	2		newKey
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/MapLike;)Lcom/mojang/serialization/DataResult;	a	lambda$mergeRemainders$4
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/Dynamic;	a	lambda$mergeRemainders$5
	m	(Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$renameField$3
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$makeRule$0
c	asa	net/minecraft/util/datafix/fixes/ChunkStatusFix
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
c	asb	net/minecraft/util/datafix/fixes/ChunkStatusFix2
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
	f	Ljava/util/Map;	a	RENAMES_AND_DOWNGRADES
c	asc	net/minecraft/util/datafix/fixes/ChunkStructuresTemplateRenameFix
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixChildren
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fixChildren$2
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$fixChildren$1
	f	Lcom/google/common/collect/ImmutableMap;	a	RENAMES
c	asd	net/minecraft/util/datafix/fixes/ChunkToProtochunkFix
	m	(I)Lit/unimi/dsi/fastutil/shorts/ShortArrayList;	a	lambda$repackTicks$3
	m	(III)S	a	packOffsetCoordinates
		p	0		x
		p	1		y
		p	2		z
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixChunkData
	m	(Lcom/mojang/serialization/Dynamic;I)Lcom/mojang/serialization/Dynamic;	a	lambda$repackTicks$5
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$repackBiomes$2
	m	(Lcom/mojang/serialization/Dynamic;Lit/unimi/dsi/fastutil/shorts/ShortList;)Lcom/mojang/serialization/Dynamic;	a	lambda$repackTicks$6
	m	(Lcom/mojang/serialization/Dynamic;Ljava/nio/ByteBuffer;)Lcom/mojang/serialization/Dynamic;	a	lambda$repackBiomes$1
	m	(Lcom/mojang/serialization/Dynamic;Ljava/util/stream/Stream;)Lcom/mojang/serialization/Dynamic;	a	lambda$repackTicks$7
	m	(Ljava/util/List;Lcom/mojang/serialization/Dynamic;)V	a	lambda$repackTicks$4
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	repackBiomes
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	repackTicks
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$makeRule$0
	f	I	a	NUM_SECTIONS
c	ase	net/minecraft/util/datafix/fixes/ColorlessShulkerEntityFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fix$0
c	asf	net/minecraft/util/datafix/fixes/CriteriaRenameFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/UnaryOperator;)V	<init>	<init>
		p	1		schema
		p	2		description
		p	3		advancementId
		p	4		renamer
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
		p	1		typed
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$fixAdvancements$3
		p	1		pair
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixAdvancements
		p	1		advancements
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixAdvancements$1
		p	2		keyString
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fixAdvancements$5
		p	1		advancement
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$fixAdvancements$4
		p	1		criteria
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$fixAdvancements$2
		p	1		key
	f	Ljava/lang/String;	a	name
	f	Ljava/lang/String;	b	advancementId
	f	Ljava/util/function/UnaryOperator;	c	conversions
c	asg	net/minecraft/util/datafix/fixes/DyeItemRenameFix
	f	Ljava/util/Map;	a	RENAMED_IDS
c	ash	net/minecraft/util/datafix/fixes/EffectDurationFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixEffect
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixEffect$3
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	fix
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	updateEntity
	f	Ljava/util/Set;	a	ITEM_TYPES
c	asi	net/minecraft/util/datafix/fixes/EntityArmorStandSilentFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
c	asj	net/minecraft/util/datafix/fixes/EntityBlockStateFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		schema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	updateFallingBlock
		p	1		fallingBlock
	m	(Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/datafixers/Typed;	a	updateBlockToBlockState
		p	1		entity
		p	2		oldIdKey
		p	3		oldDataKey
		p	4		newStateKey
	m	(Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/Typed;	a	updateEntity
		p	1		entity
		p	2		entityId
		p	3		function
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$3
		p	1		projectile
	m	(Lcom/mojang/datafixers/util/Pair;)Ljava/lang/Integer;	a	lambda$updateFallingBlock$7
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/lang/Integer;	a	lambda$updateFallingBlock$8
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/util/Either;)Lcom/mojang/datafixers/util/Either;	a	lambda$updateFallingBlock$10
		p	1		state
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/util/Unit;)Ljava/lang/Integer;	a	lambda$updateFallingBlock$9
		p	1		unit
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$updateBlockToBlockState$12
		p	2		state
	m	(Ljava/lang/Integer;)Ljava/lang/Integer;	a	lambda$updateBlockToBlockState$11
		p	0		id
	m	(Ljava/lang/String;)I	a	getBlockId
		p	0		blockId
	m	(Ljava/util/HashMap;)V	a	lambda$static$0
		p	0		map
	m	(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$5
		p	4		entity
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$makeRule$4
		p	1		enderman
	m	(Ljava/lang/Integer;)Ljava/lang/Integer;	b	lambda$updateFallingBlock$6
		p	0		id
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	c	lambda$makeRule$2
		p	1		arrow
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	d	lambda$makeRule$1
		p	1		minecart
	f	Ljava/util/Map;	a	MAP
c	ask	net/minecraft/util/datafix/fixes/EntityCatSplitFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair;	a	getNewNameAndTag
		p	1		choice
c	asl	net/minecraft/util/datafix/fixes/EntityCodSalmonFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Ljava/lang/String;)Ljava/lang/String;	a	rename
		p	1		oldName
	f	Ljava/util/Map;	a	RENAMED_IDS
	f	Ljava/util/Map;	b	RENAMED_EGG_IDS
c	asm	net/minecraft/util/datafix/fixes/EntityCustomNameToComponentFix
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTagCustomName
c	asn	net/minecraft/util/datafix/fixes/EntityElderGuardianSplitFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair;	a	getNewNameAndTag
		p	1		choice
c	aso	net/minecraft/util/datafix/fixes/EntityEquipmentToArmorAndHandFix
	m	()Ljava/lang/IllegalStateException;	a	lambda$cap$0
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$cap$2
	m	(Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/TypeRewriteRule;	a	cap
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$cap$1
c	asp	net/minecraft/util/datafix/fixes/EntityGoatMissingStateFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		schema
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fix$0
c	asq	net/minecraft/util/datafix/fixes/EntityHealthFix
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
	f	Ljava/util/Set;	a	ENTITIES
c	asr	net/minecraft/util/datafix/fixes/EntityHorseSaddleFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
c	ass	net/minecraft/util/datafix/fixes/EntityHorseSplitFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	()Ljava/lang/IllegalStateException;	a	lambda$fix$0
	m	(Ljava/lang/String;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/util/Pair;	a	fix
		p	1		choice
c	ast	net/minecraft/util/datafix/fixes/EntityIdFix
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$2
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$makeRule$3
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$makeRule$1
	m	(Ljava/util/HashMap;)V	a	lambda$static$0
		p	0		map
	f	Ljava/util/Map;	a	ID_MAP
c	asu	net/minecraft/util/datafix/fixes/EntityItemFrameDirectionFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(B)B	a	direction2dTo3d
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
c	asv	net/minecraft/util/datafix/fixes/EntityMinecartIdentifiersFix
	m	()Ljava/lang/IllegalStateException;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$makeRule$3
	m	(Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/DataResult;	a	lambda$makeRule$0
	f	Ljava/util/List;	a	MINECART_BY_ID
c	asw	net/minecraft/util/datafix/fixes/EntityPaintingFieldsRenameFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		schema
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
		p	1		dynamic
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	a	renameField
		p	1		dynamic
		p	2		oldKey
		p	3		newKey
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$renameField$0
		p	3		value
c	asx	net/minecraft/util/datafix/fixes/EntityPaintingItemFrameDirectionFix
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$5
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$4
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$3
	m	(Lcom/mojang/serialization/Dynamic;ZZ)Lcom/mojang/serialization/Dynamic;	a	doFix
		p	2		isPainting
		p	3		isItemFrame
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$makeRule$0
	f	[[I	a	DIRECTIONS
c	asy	net/minecraft/util/datafix/fixes/EntityPaintingMotiveFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
	m	(Ljava/util/HashMap;)V	a	lambda$static$0
		p	0		map
	f	Ljava/util/Map;	a	MAP
c	asz	net/minecraft/util/datafix/fixes/EntityProjectileOwnerFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(JJ)[I	a	createUUIDArray
		p	0		most
		p	2		least
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	updateProjectiles
	m	(Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/Typed;	a	updateEntity
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	updateOwnerArrow
	m	(Lcom/mojang/serialization/Dynamic;JJ)Lcom/mojang/serialization/Dynamic;	a	setUUID
		p	2		most
		p	4		least
	m	(Ljava/util/function/Function;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$updateEntity$0
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	updateOwnerLlamaSpit
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	updateItemPotion
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	updateOwnerThrowable
c	ata	net/minecraft/util/datafix/fixes/EntityPufferfishRenameFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Ljava/lang/String;)Ljava/lang/String;	a	rename
		p	1		oldName
	f	Ljava/util/Map;	a	RENAMED_IDS
c	atb	net/minecraft/util/datafix/fixes/EntityRavagerRenameFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Ljava/lang/String;)Ljava/lang/String;	a	rename
		p	1		oldName
	f	Ljava/util/Map;	a	RENAMED_IDS
c	atc	net/minecraft/util/datafix/fixes/EntityRedundantChanceTagsFix
	m	(ILjava/util/List;)Ljava/lang/Boolean;	a	lambda$isZeroList$3
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
	m	(Lcom/mojang/serialization/OptionalDynamic;I)Z	a	isZeroList
	m	(Ljava/lang/Float;)Z	a	lambda$isZeroList$2
	f	Lcom/mojang/serialization/Codec;	a	FLOAT_LIST_CODEC
c	atd	net/minecraft/util/datafix/fixes/EntityRenameFix
	m	(Ljava/lang/String;Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		name
		p	2		outputSchema
		p	3		changesType
	m	(Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$0
	m	(Ljava/lang/Object;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/Typed;	a	getEntity
	m	(Ljava/lang/String;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/util/Pair;	a	fix
		p	1		choice
	f	Ljava/lang/String;	a	name
c	ate	net/minecraft/util/datafix/fixes/EntityRidingToPassengersFix
	m	()Ljava/lang/IllegalStateException;	a	lambda$cap$4
	m	(Lcom/mojang/datafixers/schemas/Schema;Lcom/mojang/datafixers/schemas/Schema;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/TypeRewriteRule;	a	cap
		p	1		inputSchema
		p	2		outputSchema
		p	3		inputEntityTreeType
		p	4		outputEntityTreeType
		p	5		inputEntityType
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$cap$6
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$cap$5
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Either;	a	lambda$cap$2
	m	()Ljava/lang/IllegalStateException;	b	lambda$cap$3
	m	()Ljava/lang/IllegalStateException;	c	lambda$cap$1
	m	()Ljava/lang/IllegalStateException;	d	lambda$cap$0
c	atf	net/minecraft/util/datafix/fixes/EntityShulkerColorFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
c	atg	net/minecraft/util/datafix/fixes/EntityShulkerRotationFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/lang/Double;	b	lambda$fixTag$0
c	ath	net/minecraft/util/datafix/fixes/EntitySkeletonSplitFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair;	a	getNewNameAndTag
		p	1		choice
c	ati	net/minecraft/util/datafix/fixes/EntityStringUuidFix
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
c	atj	net/minecraft/util/datafix/fixes/EntityTheRenameningFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Ljava/lang/String;)Ljava/lang/String;	a	rename
		p	1		oldName
	f	Ljava/util/Map;	a	RENAMED_IDS
	f	Ljava/util/Map;	b	RENAMED_BLOCKS
	f	Ljava/util/Map;	c	RENAMED_ITEMS
	f	Ljava/lang/String;	d	MINECRAFT_BRED
c	atk	net/minecraft/util/datafix/fixes/EntityTippedArrowFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Ljava/lang/String;)Ljava/lang/String;	a	rename
		p	1		oldName
c	atl	net/minecraft/util/datafix/fixes/EntityUUIDFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$updateProjectile$14
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	updateLivingEntity
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$updateLivingEntity$13
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	updateEntityUUID
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$updateLivingEntity$11
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	updatePiglin
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$updateFox$8
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	e	updateEvokerFangs
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	e	lambda$updateFox$7
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	f	updateZombieVillager
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	g	updateAreaEffectCloud
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	h	updateShulkerBullet
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	i	updateItem
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	j	updateFox
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	k	updateHurtBy
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	l	updateAnimalOwner
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	m	updateAnimal
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	n	updateMob
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	o	updateProjectile
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	p	lambda$updateLivingEntity$12
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	q	lambda$updateLivingEntity$10
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	r	lambda$updateMob$9
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	s	lambda$updateFox$6
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	t	lambda$updateFox$5
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	u	lambda$updatePiglin$4
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	v	lambda$updatePiglin$3
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	w	lambda$updatePiglin$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	x	lambda$updatePiglin$1
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ljava/util/Set;	c	ABSTRACT_HORSES
	f	Ljava/util/Set;	d	TAMEABLE_ANIMALS
	f	Ljava/util/Set;	e	ANIMALS
	f	Ljava/util/Set;	f	MOBS
	f	Ljava/util/Set;	g	LIVING_ENTITIES
	f	Ljava/util/Set;	h	PROJECTILES
c	atm	net/minecraft/util/datafix/fixes/EntityVariantFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/IntFunction;)V	<init>	<init>
		p	1		schema
		p	2		name
		p	4		entityId
		p	5		variantKey
		p	6		variantIntToId
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fix$5
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/Number;)Lcom/mojang/serialization/Dynamic;	a	lambda$fix$3
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/serialization/Dynamic;	a	updateAndRename
	m	(Lcom/mojang/serialization/Dynamic;Ljava/util/function/Function;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;	a	lambda$updateAndRename$2
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;Ljava/lang/String;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object;	a	lambda$updateAndRename$1
	m	(Ljava/util/function/Function;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Ljava/lang/Object;	a	lambda$updateAndRename$0
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fix$4
	f	Ljava/lang/String;	a	fieldName
	f	Ljava/util/function/IntFunction;	b	idConversions
c	atn	net/minecraft/util/datafix/fixes/EntityWolfColorFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fixTag$0
c	ato	net/minecraft/util/datafix/fixes/EntityZombieSplitFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair;	a	getNewNameAndTag
		p	1		choice
c	atp	net/minecraft/util/datafix/fixes/EntityZombieVillagerTypeFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(I)I	a	getVillagerProfession
		p	1		type
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
	f	I	a	PROFESSION_MAX
	f	Lapo;	b	RANDOM
c	atq	net/minecraft/util/datafix/fixes/EntityZombifiedPiglinRenameFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Ljava/lang/String;)Ljava/lang/String;	a	rename
		p	1		oldName
	f	Ljava/util/Map;	a	RENAMED_IDS
c	atr	net/minecraft/util/datafix/fixes/FilteredBooksFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		schema
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixItemStackTag
		p	1		dynamic
	m	(Ljava/lang/String;)Z	a	lambda$new$0
		p	0		itemId
c	ats	net/minecraft/util/datafix/fixes/FilteredSignsFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		schema
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fix$0
		p	0		blockEntity
c	att	net/minecraft/util/datafix/fixes/ForcePoiRebuild
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$cap$3
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	cap
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	b	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$cap$4
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$cap$2
c	atu	net/minecraft/util/datafix/fixes/FurnaceRecipeFix
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$cap$3
	m	(Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/TypeRewriteRule;	a	cap
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	updateFurnaceContents
	m	(Lcom/mojang/datafixers/types/Type;Ljava/util/List;ILcom/mojang/serialization/Dynamic;)V	a	lambda$updateFurnaceContents$5
	m	(Ljava/util/List;ILcom/mojang/datafixers/util/Pair;)V	a	lambda$updateFurnaceContents$4
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$cap$2
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	c	lambda$cap$1
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	d	lambda$cap$0
c	atv	net/minecraft/util/datafix/fixes/GoatHornIdFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		schema
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixItemStackTag
		p	1		dynamic
	m	(Ljava/lang/String;)Z	a	lambda$new$0
		p	0		itemId
	f	[Ljava/lang/String;	a	INSTRUMENTS
c	atw	net/minecraft/util/datafix/fixes/GossipUUIDFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)V	<init>	<init>
		p	1		outputSchema
		p	2		choiceType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fix$3
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	a	lambda$fix$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fix$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$fix$0
c	atx	net/minecraft/util/datafix/fixes/HeightmapRenamingFix
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fix
c	aty	net/minecraft/util/datafix/fixes/IglooMetadataRemovalFix
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	a	lambda$removeIglooPieces$3
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	removeIglooPieces
	m	(Ljava/util/stream/Stream;)Ljava/lang/Boolean;	b	lambda$fixTag$1
	m	(Lcom/mojang/serialization/Dynamic;)Z	c	isIglooPiece
	m	(Lcom/mojang/serialization/Dynamic;)Z	d	lambda$removeIglooPieces$2
c	atz	net/minecraft/util/datafix/fixes/ItemBannerColorFix
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
c	aua	net/minecraft/util/datafix/fixes/ItemCustomNameToComponentFix
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
c	aub	net/minecraft/util/datafix/fixes/ItemIdFix
	m	(I)Ljava/lang/String;	a	getItem
		p	0		id
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$4
	m	(Lcom/mojang/datafixers/util/Either;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$3
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$2
	m	(Lit/unimi/dsi/fastutil/ints/Int2ObjectOpenHashMap;)V	a	lambda$static$0
		p	0		map
	m	(Ljava/lang/Integer;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$1
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	a	ITEM_NAMES
c	auc	net/minecraft/util/datafix/fixes/ItemLoreFix
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$4
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$3
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixLoreList$5
	m	(Ljava/lang/String;)Ljava/lang/String;	a	fixLoreEntry
		p	0		string
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	a	fixLoreList
		p	0		nbt
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$makeRule$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$makeRule$0
c	aud	net/minecraft/util/datafix/fixes/ItemPotionFix
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	([Ljava/lang/String;)V	a	lambda$static$0
	f	Ljava/lang/String;	a	DEFAULT
	f	I	b	SPLASH
	f	[Ljava/lang/String;	c	POTIONS
c	aue	net/minecraft/util/datafix/fixes/ItemRemoveBlockEntityTagFix
	m	(Lcom/mojang/datafixers/schemas/Schema;ZLjava/util/Set;)V	<init>	<init>
		p	1		schema
		p	2		changesType
		p	3		itemIds
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
		p	4		typed
	f	Ljava/util/Set;	a	items
c	auf	net/minecraft/util/datafix/fixes/ItemRenameFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)V	<init>	<init>
		p	1		outputSchema
		p	2		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/DataFix;	a	create
		p	0		outputSchema
		p	1		name
		p	2		rename
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$0
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$makeRule$1
	m	(Ljava/lang/String;)Ljava/lang/String;	a	fixItem
		p	1		input
	f	Ljava/lang/String;	a	name
c	auf$1	net/minecraft/util/datafix/fixes/ItemRenameFix$1
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Function;)V	<init>	<init>
		p	1		outputSchema
		p	2		name
	m	(Ljava/lang/String;)Ljava/lang/String;	a	fixItem
		p	1		input
	f	Ljava/util/function/Function;	a	val$fixItem
c	aug	net/minecraft/util/datafix/fixes/ItemShulkerBoxColorFix
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
	f	[Ljava/lang/String;	a	NAMES_BY_COLOR
c	auh	net/minecraft/util/datafix/fixes/ItemSpawnEggFix
	m	()Ljava/lang/IllegalStateException;	a	lambda$makeRule$5
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$6
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Ljava/util/Optional;	a	lambda$makeRule$3
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/DataResult;	a	lambda$makeRule$4
	m	([Ljava/lang/String;)V	a	lambda$static$0
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Ljava/util/Optional;	b	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Ljava/util/Optional;	c	lambda$makeRule$1
	f	[Ljava/lang/String;	a	ID_TO_ENTITY
c	aui	net/minecraft/util/datafix/fixes/ItemStackEnchantmentNamesFix
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
	m	(Lit/unimi/dsi/fastutil/ints/Int2ObjectOpenHashMap;)V	a	lambda$static$0
		p	0		map
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	a	lambda$fixTag$6
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fixTag$7
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	b	lambda$fixTag$4
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$fixTag$5
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$fixTag$3
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	a	MAP
c	auj	net/minecraft/util/datafix/fixes/ItemStackMapIdFix
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
c	auk	net/minecraft/util/datafix/fixes/ItemStackSpawnEggFix
	m	(Lcom/mojang/datafixers/schemas/Schema;ZLjava/lang/String;)V	<init>	<init>
		p	1		schema
		p	2		changesType
		p	3		spawnEggId
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
		p	5		stack
	m	(Ljava/util/HashMap;)V	a	lambda$static$0
		p	0		map
	f	Ljava/lang/String;	a	itemType
	f	Ljava/util/Map;	b	MAP
c	aul	net/minecraft/util/datafix/fixes/ItemStackTagFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Predicate;)V	<init>	<init>
		p	1		schema
		p	2		name
		p	3		itemIdPredicate
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
		p	3		typed
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
		p	1		nbt
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixItemStackTag
		p	1		dynamic
	f	Ljava/lang/String;	a	name
	f	Ljava/util/function/Predicate;	b	idFilter
c	aum	net/minecraft/util/datafix/fixes/ItemStackTheFlatteningFix
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$static$1
	m	(Ljava/lang/String;I)Ljava/lang/String;	a	updateItem
		p	0		originalName
		p	1		damage
	m	(Ljava/util/HashMap;)V	a	lambda$static$0
		p	0		map
	f	Ljava/util/Map;	a	MAP
	f	Ljava/util/Set;	b	IDS
	f	Ljava/util/Set;	c	DAMAGE_IDS
c	aun	net/minecraft/util/datafix/fixes/ItemStackUUIDFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$3
	m	(Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/util/Pair;)Ljava/lang/Boolean;	a	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$updateAttributeModifiers$5
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	updateAttributeModifiers
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	updateSkullOwner
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$updateSkullOwner$6
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	e	lambda$updateAttributeModifiers$4
c	auo	net/minecraft/util/datafix/fixes/ItemWaterPotionFix
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
c	aup	net/minecraft/util/datafix/fixes/ItemWrittenBookPagesStrictJsonFix
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$4
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$3
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixTag$2
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	a	lambda$fixTag$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fixTag$0
c	auq	net/minecraft/util/datafix/fixes/JigsawPropertiesFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
c	aur	net/minecraft/util/datafix/fixes/JigsawRotationFix
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fix
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fix$0
	f	Ljava/util/Map;	a	RENAMES
c	aus	net/minecraft/util/datafix/fixes/LeavesFix
	m	(I)I	a	getX
	m	(III)I	a	getIndex
	m	(Laus$a;)Laus$a;	a	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$7
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$6
	m	(Lcom/mojang/datafixers/OpticFinder;[ILcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$4
	m	(Lcom/mojang/datafixers/Typed;)Laus$a;	a	lambda$makeRule$1
	m	(Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$3
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;)V	a	lambda$static$0
		p	0		map
	m	(ZZZZ)I	a	getSideMask
	m	([ILcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$5
	m	(I)I	b	getY
	m	(I)I	c	getZ
	f	I	a	NORTH_WEST_MASK
	f	I	b	WEST_MASK
	f	I	c	SOUTH_WEST_MASK
	f	I	d	SOUTH_MASK
	f	I	e	SOUTH_EAST_MASK
	f	I	f	EAST_MASK
	f	I	g	NORTH_EAST_MASK
	f	I	h	NORTH_MASK
	f	[[I	i	DIRECTIONS
	f	I	j	DECAY_DISTANCE
	f	I	k	SIZE_BITS
	f	I	l	SIZE
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	m	LEAVES
	f	Ljava/util/Set;	n	LOGS
c	aus$a	net/minecraft/util/datafix/fixes/LeavesFix$LeavesSection
	m	()Z	a	skippable
	m	(I)Z	a	isLog
	m	(III)V	a	setDistance
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;ZI)Lcom/mojang/serialization/Dynamic;	a	makeLeafTag
	m	(I)Z	b	isLeaf
	m	(I)I	d	getDistance
	f	Ljava/lang/String;	h	PERSISTENT
	f	Ljava/lang/String;	i	DECAYABLE
	f	Ljava/lang/String;	j	DISTANCE
	f	Lit/unimi/dsi/fastutil/ints/IntSet;	k	leaveIds
	f	Lit/unimi/dsi/fastutil/ints/IntSet;	l	logIds
	f	Lit/unimi/dsi/fastutil/ints/Int2IntMap;	m	stateToIdMap
c	aus$b	net/minecraft/util/datafix/fixes/LeavesFix$Section
	m	()Z	a	skippable
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	write
	m	(Lcom/mojang/serialization/Dynamic;)V	a	readStorage
	m	(Ljava/lang/String;ZI)I	a	getStateId
		p	1		leafBlockName
		p	2		persistent
	m	(Ljava/util/List;)Ljava/util/List;	a	lambda$new$0
	m	()Z	b	isSkippable
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair;	b	lambda$write$2
	m	()I	c	getIndex
	m	(I)I	c	getBlock
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$write$1
	f	Ljava/lang/String;	a	BLOCK_STATES_TAG
	f	Ljava/lang/String;	b	NAME_TAG
	f	Ljava/lang/String;	c	PROPERTIES_TAG
	f	Lcom/mojang/datafixers/OpticFinder;	d	paletteFinder
	f	Ljava/util/List;	e	palette
	f	I	f	index
	f	Laqn;	g	storage
	f	Lcom/mojang/datafixers/types/Type;	h	blockStateType
c	aut	net/minecraft/util/datafix/fixes/LevelDataGeneratorOptionsFix
	m	()Ljava/lang/IllegalStateException;	a	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$3
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/DataResult;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/DynamicOps;Lcom/mojang/datafixers/util/Pair;)Ljava/lang/Object;	a	lambda$convert$4
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair;	a	lambda$convert$6
	m	(Ljava/lang/String;)Lcom/mojang/datafixers/util/Pair;	a	getLayerInfoFromString
		p	0		layer
	m	(Ljava/lang/String;Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic;	a	convert
		p	0		generatorOptions
	m	(Ljava/util/HashMap;)V	a	lambda$static$0
		p	0		map
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair;	b	lambda$convert$5
	m	(Ljava/lang/String;)Ljava/util/List;	b	getLayersInfoFromString
		p	0		layers
	f	Ljava/util/Map;	a	MAP
	f	Ljava/lang/String;	b	GENERATOR_OPTIONS
c	auu	net/minecraft/util/datafix/fixes/LevelFlatGeneratorInfoFix
	m	(Lcom/google/common/base/Splitter;ILjava/lang/String;)Ljava/lang/String;	a	lambda$fixString$2
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fix
	m	(Ljava/lang/String;)Ljava/lang/String;	a	fixString
		p	1		generatorOptions
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fix$1
	f	Ljava/lang/String;	a	DEFAULT
	f	Ljava/lang/String;	b	GENERATOR_OPTIONS
	f	Lcom/google/common/base/Splitter;	c	SPLITTER
	f	Lcom/google/common/base/Splitter;	d	LAYER_SPLITTER
	f	Lcom/google/common/base/Splitter;	e	OLD_AMOUNT_SPLITTER
	f	Lcom/google/common/base/Splitter;	f	AMOUNT_SPLITTER
	f	Lcom/google/common/base/Splitter;	g	BLOCK_SPLITTER
c	auv	net/minecraft/util/datafix/fixes/LevelUUIDFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$updateCustomBossEvents$11
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$updateCustomBossEvents$9
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	b	lambda$updateDragonFight$5
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	updateWanderingTrader
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	updateDragonFight
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	updateCustomBossEvents
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	e	lambda$updateCustomBossEvents$12
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	f	lambda$updateCustomBossEvents$10
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	g	lambda$updateCustomBossEvents$8
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	h	lambda$updateCustomBossEvents$7
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	i	lambda$updateDragonFight$6
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	j	lambda$updateDragonFight$4
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	k	lambda$updateDragonFight$3
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	l	lambda$makeRule$0
	f	Lorg/slf4j/Logger;	b	LOGGER
c	auw	net/minecraft/util/datafix/fixes/MapIdFix
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
c	auy	net/minecraft/util/datafix/fixes/MemoryExpiryDataFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)V	<init>	<init>
		p	1		outputSchema
		p	2		choiceName
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	updateMemoryEntry
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	updateBrain
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	updateMemories
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	wrapMemoryValue
c	auz	net/minecraft/util/datafix/fixes/MissingDimensionFix
	m	(Lcom/mojang/datafixers/FieldFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/templates/CompoundList$CompoundListType;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/types/templates/CompoundList$CompoundListType;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/types/templates/CompoundList$CompoundListType;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/Type;	a	flatType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	recreateSettings
	m	(Ljava/lang/String;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/types/Type;	a	fields
	m	(Ljava/lang/String;Lcom/mojang/datafixers/types/Type;Ljava/lang/String;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/types/Type;	a	optionalFields
	m	(Ljava/lang/String;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/types/Type;	b	optionalFields
c	ava	net/minecraft/util/datafix/fixes/MobSpawnerEntityIdentifiersFix
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fix
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fix$0
c	avb	net/minecraft/util/datafix/fixes/NamedEntityFix
	m	(Lcom/mojang/datafixers/schemas/Schema;ZLjava/lang/String;Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
		p	3		name
		p	4		type
		p	5		choiceName
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
	f	Ljava/lang/String;	a	name
	f	Ljava/lang/String;	b	entityName
	f	Lcom/mojang/datafixers/DSL$TypeReference;	c	type
c	avc	net/minecraft/util/datafix/fixes/NewVillageFix
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$cap$10
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$cap$9
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$cap$8
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$cap$4
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$cap$13
	m	(Lcom/mojang/datafixers/types/templates/CompoundList$CompoundListType;)Lcom/mojang/datafixers/TypeRewriteRule;	a	cap
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$cap$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$cap$12
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$cap$5
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$cap$1
	m	(Ljava/util/List;)Ljava/util/List;	a	lambda$cap$3
	m	(Lcom/mojang/datafixers/util/Pair;)Z	b	lambda$cap$0
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$cap$11
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$cap$7
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$cap$6
c	avd	net/minecraft/util/datafix/fixes/ObjectiveDisplayNameFix
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$3
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$2
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$1
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$makeRule$0
c	ave	net/minecraft/util/datafix/fixes/ObjectiveRenderTypeFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
		p	0		typed
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
		p	0		objective
	m	(Ljava/lang/String;)Ljava/lang/String;	a	getRenderType
		p	0		oldName
c	avf	net/minecraft/util/datafix/fixes/OminousBannerBlockEntityRenameFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
c	avg	net/minecraft/util/datafix/fixes/OminousBannerRenameFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		schema
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixItemStackTag
		p	1		dynamic
	m	(Ljava/lang/String;)Z	a	lambda$new$0
		p	0		itemId
c	avh	net/minecraft/util/datafix/fixes/OptionsAccessibilityOnboardFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		schema
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
		p	0		typed
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
		p	0		options
c	avi	net/minecraft/util/datafix/fixes/OptionsAddTextBackgroundFix
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
	m	(Ljava/lang/String;)D	a	calculateBackground
		p	1		chatOpacity
c	avj	net/minecraft/util/datafix/fixes/OptionsAmbientOcclusionFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
	m	(Ljava/lang/String;)Ljava/lang/String;	a	updateValue
		p	0		oldValue
c	avk	net/minecraft/util/datafix/fixes/OptionsForceVBOFix
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
c	avl	net/minecraft/util/datafix/fixes/OptionsKeyLwjgl3Fix
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$4
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$3
	m	(Lcom/mojang/serialization/Dynamic;Ljava/util/Map;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$2
	m	(Lit/unimi/dsi/fastutil/ints/Int2ObjectOpenHashMap;)V	a	lambda$static$0
		p	0		map
	m	(Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$1
	f	Ljava/lang/String;	a	KEY_UNKNOWN
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	b	MAP
c	avm	net/minecraft/util/datafix/fixes/OptionsKeyTranslationFix
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$3
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$2
	m	(Lcom/mojang/serialization/Dynamic;Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;Ljava/util/Map;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$1
c	avn	net/minecraft/util/datafix/fixes/OptionsLowerCaseLanguageFix
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
c	avo	net/minecraft/util/datafix/fixes/OptionsProgrammerArtFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		schema
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
		p	1		typed
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixList
		p	1		option
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixList$2
		p	1		value
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$makeRule$0
		p	1		options
c	avp	net/minecraft/util/datafix/fixes/OptionsRenameFieldFix
	m	(Lcom/mojang/datafixers/schemas/Schema;ZLjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
		p	3		name
		p	4		oldName
		p	5		newName
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
	f	Ljava/lang/String;	a	fixName
	f	Ljava/lang/String;	b	fieldFrom
	f	Ljava/lang/String;	c	fieldTo
c	avq	net/minecraft/util/datafix/fixes/OverreachingTickFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		schema
	m	(IILcom/mojang/serialization/Dynamic;)Z	a	lambda$extractOverreachingTicks$2
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;IILjava/util/Optional;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	a	extractOverreachingTicks
	m	(Ljava/util/Optional;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
c	avr	net/minecraft/util/datafix/fixes/PlayerUUIDFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$3
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$makeRule$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$makeRule$0
c	avs	net/minecraft/util/datafix/fixes/PoiTypeRemoveFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Predicate;)V	<init>	<init>
		p	1		schema
		p	2		name
		p	3		removePredicate
	m	(Lcom/mojang/serialization/Dynamic;)Z	a	shouldKeepRecord
		p	1		dynamic
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	a	processRecords
		p	1		dynamics
	f	Ljava/util/function/Predicate;	a	typesToKeep
c	avt	net/minecraft/util/datafix/fixes/PoiTypeRenameFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Function;)V	<init>	<init>
		p	1		schema
		p	2		name
		p	3		renamer
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$processRecords$1
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	a	processRecords
		p	1		dynamics
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$processRecords$0
	f	Ljava/util/function/Function;	a	renamer
c	avu	net/minecraft/util/datafix/fixes/RecipesFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$new$0
	f	Ljava/util/Map;	a	RECIPES
c	avv	net/minecraft/util/datafix/fixes/RecipesRenameFix
	m	(Lcom/mojang/datafixers/schemas/Schema;ZLjava/lang/String;Ljava/util/function/Function;)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
		p	3		name
		p	4		renamer
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$0
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$makeRule$1
	f	Ljava/lang/String;	a	name
	f	Ljava/util/function/Function;	b	renamer
c	avw	net/minecraft/util/datafix/fixes/RecipesRenameningFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$new$0
	f	Ljava/util/Map;	a	RECIPES
c	avx	net/minecraft/util/datafix/fixes/RedstoneWireConnectionsFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	updateRedstoneConnections
	m	(Ljava/lang/String;)Z	a	isConnected
	m	(Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$updateRedstoneConnections$4
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$updateRedstoneConnections$5
	m	(Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$updateRedstoneConnections$3
	m	(Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$updateRedstoneConnections$2
	m	(Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$updateRedstoneConnections$1
c	avy	net/minecraft/util/datafix/fixes/References
	m	()Ljava/lang/String;	A	lambda$static$0
	m	()Ljava/lang/String;	a	lambda$static$26
	m	()Ljava/lang/String;	b	lambda$static$25
	m	()Ljava/lang/String;	c	lambda$static$24
	m	()Ljava/lang/String;	d	lambda$static$23
	m	()Ljava/lang/String;	e	lambda$static$22
	m	()Ljava/lang/String;	f	lambda$static$21
	m	()Ljava/lang/String;	g	lambda$static$20
	m	()Ljava/lang/String;	h	lambda$static$19
	m	()Ljava/lang/String;	i	lambda$static$18
	m	()Ljava/lang/String;	j	lambda$static$17
	m	()Ljava/lang/String;	k	lambda$static$16
	m	()Ljava/lang/String;	l	lambda$static$15
	m	()Ljava/lang/String;	m	lambda$static$14
	m	()Ljava/lang/String;	n	lambda$static$13
	m	()Ljava/lang/String;	o	lambda$static$12
	m	()Ljava/lang/String;	p	lambda$static$11
	m	()Ljava/lang/String;	q	lambda$static$10
	m	()Ljava/lang/String;	r	lambda$static$9
	m	()Ljava/lang/String;	s	lambda$static$8
	m	()Ljava/lang/String;	t	lambda$static$7
	m	()Ljava/lang/String;	u	lambda$static$6
	m	()Ljava/lang/String;	v	lambda$static$5
	m	()Ljava/lang/String;	w	lambda$static$4
	m	()Ljava/lang/String;	x	lambda$static$3
	m	()Ljava/lang/String;	y	lambda$static$2
	m	()Ljava/lang/String;	z	lambda$static$1
	f	Lcom/mojang/datafixers/DSL$TypeReference;	A	WORLD_GEN_SETTINGS
	f	Lcom/mojang/datafixers/DSL$TypeReference;	a	LEVEL
	f	Lcom/mojang/datafixers/DSL$TypeReference;	b	PLAYER
	f	Lcom/mojang/datafixers/DSL$TypeReference;	c	CHUNK
	f	Lcom/mojang/datafixers/DSL$TypeReference;	d	HOTBAR
	f	Lcom/mojang/datafixers/DSL$TypeReference;	e	OPTIONS
	f	Lcom/mojang/datafixers/DSL$TypeReference;	f	STRUCTURE
	f	Lcom/mojang/datafixers/DSL$TypeReference;	g	STATS
	f	Lcom/mojang/datafixers/DSL$TypeReference;	h	SAVED_DATA
	f	Lcom/mojang/datafixers/DSL$TypeReference;	i	ADVANCEMENTS
	f	Lcom/mojang/datafixers/DSL$TypeReference;	j	POI_CHUNK
	f	Lcom/mojang/datafixers/DSL$TypeReference;	k	ENTITY_CHUNK
	f	Lcom/mojang/datafixers/DSL$TypeReference;	l	BLOCK_ENTITY
	f	Lcom/mojang/datafixers/DSL$TypeReference;	m	ITEM_STACK
	f	Lcom/mojang/datafixers/DSL$TypeReference;	n	BLOCK_STATE
	f	Lcom/mojang/datafixers/DSL$TypeReference;	o	ENTITY_NAME
	f	Lcom/mojang/datafixers/DSL$TypeReference;	p	ENTITY_TREE
	f	Lcom/mojang/datafixers/DSL$TypeReference;	q	ENTITY
	f	Lcom/mojang/datafixers/DSL$TypeReference;	r	BLOCK_NAME
	f	Lcom/mojang/datafixers/DSL$TypeReference;	s	ITEM_NAME
	f	Lcom/mojang/datafixers/DSL$TypeReference;	t	GAME_EVENT_NAME
	f	Lcom/mojang/datafixers/DSL$TypeReference;	u	UNTAGGED_SPAWNER
	f	Lcom/mojang/datafixers/DSL$TypeReference;	v	STRUCTURE_FEATURE
	f	Lcom/mojang/datafixers/DSL$TypeReference;	w	OBJECTIVE
	f	Lcom/mojang/datafixers/DSL$TypeReference;	x	TEAM
	f	Lcom/mojang/datafixers/DSL$TypeReference;	y	RECIPE
	f	Lcom/mojang/datafixers/DSL$TypeReference;	z	BIOME
c	avz	net/minecraft/util/datafix/fixes/RemoveGolemGossipFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixValue
		p	0		villagerData
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixValue$1
	m	(Lcom/mojang/serialization/Dynamic;)Z	b	lambda$fixValue$0
c	awa	net/minecraft/util/datafix/fixes/RenameBiomesFix
	m	(Lcom/mojang/datafixers/schemas/Schema;ZLjava/lang/String;Ljava/util/Map;)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
		p	3		name
		p	4		changes
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$makeRule$2
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$makeRule$0
	f	Ljava/lang/String;	a	name
	f	Ljava/util/Map;	b	biomes
c	awb	net/minecraft/util/datafix/fixes/RenamedCoralFansFix
	f	Ljava/util/Map;	a	RENAMED_IDS
c	awc	net/minecraft/util/datafix/fixes/RenamedCoralFix
	f	Ljava/util/Map;	a	RENAMED_IDS
c	awd	net/minecraft/util/datafix/fixes/ReorganizePoi
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	cap
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$makeRule$1
c	awe	net/minecraft/util/datafix/fixes/SavedDataFeaturePoolElementFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(I)Ljava/lang/String;	a	lambda$get$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixFeature
		p	0		feature
	m	(Lcom/mojang/serialization/Dynamic;[Ljava/lang/String;)Lcom/mojang/serialization/OptionalDynamic;	a	get
		p	0		root
		p	1		pathParts
	m	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional;	a	getReplacement
		p	0		type
		p	1		name
		p	2		stateProviderType
		p	3		stateProviderStateName
		p	4		stateProviderFirstEntryName
		p	5		foliagePlacerType
		p	6		leavesProviderStateName
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	a	updateChildren
		p	0		children
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	fixTag
		p	0		structureFeature
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	updateChildren
		p	0		children
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$updateChildren$1
		p	0		child
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	e	lambda$updateChildren$0
		p	0		poolElement
	f	Ljava/util/regex/Pattern;	a	INDEX_PATTERN
	f	Ljava/util/Set;	b	PIECE_TYPE
	f	Ljava/util/Set;	c	FEATURES
c	awf	net/minecraft/util/datafix/fixes/SavedDataUUIDFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$7
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$makeRule$6
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$makeRule$5
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$makeRule$4
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$makeRule$3
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	e	lambda$makeRule$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	f	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	g	lambda$makeRule$0
	f	Lorg/slf4j/Logger;	b	LOGGER
c	awg	net/minecraft/util/datafix/fixes/SimpleEntityRenameFix
	m	(Ljava/lang/String;Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		name
		p	2		outputSchema
		p	3		changesType
	m	(Ljava/lang/String;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/util/Pair;	a	fix
		p	1		choice
	m	(Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair;	a	getNewNameAndTag
		p	1		choice
c	awh	net/minecraft/util/datafix/fixes/SimpleRenameFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;Ljava/util/Map;)V	<init>	<init>
		p	1		schema
		p	3		name
		p	4		renames
	m	(Lcom/mojang/datafixers/schemas/Schema;Lcom/mojang/datafixers/DSL$TypeReference;Ljava/util/Map;)V	<init>	<init>
		p	1		schema
		p	3		renames
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$makeRule$2
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$makeRule$0
	f	Ljava/lang/String;	a	fixerName
	f	Ljava/util/Map;	b	nameMapping
	f	Lcom/mojang/datafixers/DSL$TypeReference;	c	typeReference
c	awi	net/minecraft/util/datafix/fixes/SimplestEntityRenameFix
	m	(Ljava/lang/String;Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		name
		p	2		outputSchema
		p	3		changesType
	m	(Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Ljava/lang/String;)Ljava/lang/String;	a	lambda$makeRule$0
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$3
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$makeRule$4
	m	(Ljava/lang/String;)Ljava/lang/String;	a	rename
		p	1		oldName
	f	Ljava/lang/String;	a	name
c	awj	net/minecraft/util/datafix/fixes/SpawnerDataFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		schema
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	wrapEntityToSpawnData
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/datafixers/util/Pair;	a	lambda$wrapSpawnPotentialsToWeightedEntries$3
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	wrapSpawnPotentialsToWeightedEntries
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	c	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	d	lambda$makeRule$0
c	awk	net/minecraft/util/datafix/fixes/StatsCounterFix
	m	()Ljava/lang/IllegalStateException;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
	m	(Ljava/lang/String;)Ljava/lang/String;	a	upgradeItem
	m	(Ljava/lang/String;)Ljava/lang/String;	b	upgradeBlock
	f	Ljava/util/Set;	a	SKIP
	f	Ljava/util/Map;	b	CUSTOM_MAP
	f	Ljava/lang/String;	c	BLOCK_KEY
	f	Ljava/lang/String;	d	NEW_BLOCK_KEY
	f	Ljava/util/Map;	e	ITEM_KEYS
	f	Ljava/util/Map;	f	ENTITY_KEYS
	f	Ljava/util/Map;	g	ENTITIES
	f	Ljava/lang/String;	h	NEW_CUSTOM_KEY
c	awl	net/minecraft/util/datafix/fixes/StatsRenameFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/Map;)V	<init>	<init>
		p	1		outputSchema
		p	2		name
		p	3		replacements
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	a	createCriteriaRule
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$createStatRule$8
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$createStatRule$7
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$createStatRule$6
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$createStatRule$5
		p	1		old
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	b	createStatRule
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$createCriteriaRule$4
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$createCriteriaRule$3
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$createCriteriaRule$2
	m	(Ljava/lang/String;)Ljava/lang/String;	b	lambda$createCriteriaRule$1
		p	1		old
	m	()Ljava/lang/IllegalStateException;	c	lambda$createCriteriaRule$0
	f	Ljava/lang/String;	a	name
	f	Ljava/util/Map;	b	renames
c	awm	net/minecraft/util/datafix/fixes/StriderGravityFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
c	awn	net/minecraft/util/datafix/fixes/StructureReferenceCountFix
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	setCountToAtLeastOne
	m	(Ljava/lang/Integer;)Z	a	lambda$setCountToAtLeastOne$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$setCountToAtLeastOne$2
c	awo	net/minecraft/util/datafix/fixes/StructureSettingsFlattenFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		schema
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	fixDimension
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixStructures
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$fixStructures$5
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixStructures$4
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixStructures$6
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fixDimension$3
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$fixDimension$2
c	awp	net/minecraft/util/datafix/fixes/StructuresBecomeConfiguredFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		schema
	m	(Lawp$a;Lit/unimi/dsi/fastutil/objects/Object2IntArrayMap;Lcom/mojang/serialization/Dynamic;)V	a	lambda$guessConfiguration$9
	m	(Lcom/mojang/datafixers/util/Pair;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair;	a	updateStart
	m	(Lcom/mojang/datafixers/util/Pair;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$updateReference$7
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fix
	m	(Lcom/mojang/serialization/Dynamic;Lawp$a;)Ljava/util/Optional;	a	guessConfiguration
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$updateReferences$6
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	updateStarts
	m	(Ljava/util/List;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)V	a	lambda$updateReferences$5
	m	(Lawp$a;Lit/unimi/dsi/fastutil/objects/Object2IntArrayMap;Lcom/mojang/serialization/Dynamic;)V	b	lambda$guessConfiguration$8
	m	(Lcom/mojang/datafixers/util/Pair;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair;	b	updateReference
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	b	lambda$updateStarts$4
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	updateReferences
	m	(Ljava/util/List;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)V	b	lambda$updateStarts$3
	m	(Lcom/mojang/datafixers/util/Pair;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	findUpdatedStructureType
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$fix$2
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$fix$1
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	e	lambda$fix$0
	f	Ljava/util/Map;	a	CONVERSION_MAP
c	awp$a	net/minecraft/util/datafix/fixes/StructuresBecomeConfiguredFix$Conversion
	m	()Ljava/util/Map;	a	biomeMapping
	m	(Lcom/google/common/collect/ImmutableMap$Builder;Ljava/util/Map$Entry;Ljava/lang/String;)V	a	lambda$unpack$0
	m	(Ljava/lang/String;)Lawp$a;	a	trivial
		p	0		mapping
	m	(Ljava/util/Map;)Ljava/util/Map;	a	unpack
		p	0		biomeMapping
	m	(Ljava/util/Map;Ljava/lang/String;)Lawp$a;	a	biomeMapped
		p	0		biomeMapping
		p	1		fallback
	m	()Ljava/lang/String;	b	fallback
	f	Ljava/util/Map;	a	biomeMapping
	f	Ljava/lang/String;	b	fallback
c	awq	net/minecraft/util/datafix/fixes/TeamDisplayNameFix
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$3
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$2
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$makeRule$4
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$makeRule$0
c	awr	net/minecraft/util/datafix/fixes/TrappedChestBlockEntityFix
	m	(IILit/unimi/dsi/fastutil/ints/IntSet;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$5
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$4
	m	(Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;IILit/unimi/dsi/fastutil/ints/IntSet;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$3
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$1
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$makeRule$0
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	I	b	SIZE
	f	S	c	SIZE_BITS
c	awr$a	net/minecraft/util/datafix/fixes/TrappedChestBlockEntityFix$TrappedChestSection
	m	()Z	a	skippable
	m	(I)Z	a	isTrappedChest
		p	1		index
	f	Lit/unimi/dsi/fastutil/ints/IntSet;	h	chestIds
c	aws	net/minecraft/util/datafix/fixes/VariantRenameFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;Ljava/util/Map;)V	<init>	<init>
		p	1		schema
		p	2		name
		p	3		type
		p	4		choiceName
		p	5		oldToNewNames
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fix$2
		p	1		dynamic
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	a	lambda$fix$0
		p	2		variantName
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fix$1
		p	1		variant
	f	Ljava/util/Map;	a	renames
c	awt	net/minecraft/util/datafix/fixes/VillagerDataFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)V	<init>	<init>
		p	1		outputSchema
		p	2		entity
	m	(II)Ljava/lang/String;	a	upgradeData
		p	0		professionId
		p	1		careerId
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
c	awu	net/minecraft/util/datafix/fixes/VillagerFollowRangeFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixValue
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixValue$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fixValue$0
	f	D	a	ORIGINAL_VALUE
	f	D	b	NEW_BASE_VALUE
c	awv	net/minecraft/util/datafix/fixes/VillagerRebuildLevelAndXpFix
	m	(I)I	a	getMinXpPerLevel
		p	0		level
	m	(ILcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$addXpFromLevel$6
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Ljava/lang/Integer;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$3
	m	(Lcom/mojang/datafixers/Typed;I)Lcom/mojang/datafixers/Typed;	a	addLevel
	m	(ILcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$addLevel$5
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Ljava/util/Optional;	b	lambda$makeRule$0
	m	(Lcom/mojang/datafixers/Typed;I)Lcom/mojang/datafixers/Typed;	b	addXpFromLevel
	m	(ILcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$addLevel$4
	f	I	a	TRADES_PER_LEVEL
	f	[I	b	LEVEL_XP_THRESHOLDS
c	aww	net/minecraft/util/datafix/fixes/VillagerTradeFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Ljava/util/function/Function;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$fix$3
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Ljava/util/function/Function;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$fix$2
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	updateItemStack
	m	(Lcom/mojang/datafixers/OpticFinder;Ljava/util/function/Function;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$fix$1
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$updateItemStack$5
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$updateItemStack$4
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$fix$0
c	awx	net/minecraft/util/datafix/fixes/WallPropertyFix
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	upgradeBlockStateTag
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	a	fixWallProperty
	m	(Ljava/lang/String;)Ljava/lang/String;	a	mapProperty
		p	0		value
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$upgradeBlockStateTag$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$fixWallProperty$1
	f	Ljava/util/Set;	a	WALL_BLOCKS
c	awy	net/minecraft/util/datafix/fixes/WeaponSmithChestLootTableFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fix$0
		p	0		dynamic
c	awz	net/minecraft/util/datafix/fixes/WorldGenSettingsDisallowOldCustomWorldsFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		schema
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$4
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$3
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/DataResult;	a	lambda$makeRule$2
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)V	a	lambda$makeRule$0
	m	(Ljava/util/Map;)Ljava/util/Map;	a	lambda$makeRule$1
c	axa	net/minecraft/util/datafix/fixes/WorldGenSettingsFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(JLcom/mojang/serialization/DynamicLike;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	noise
	m	(Lcom/google/common/collect/ImmutableMap$Builder;Lcom/mojang/serialization/DynamicOps;Ljava/lang/String;)V	a	lambda$fix$6
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fix
	m	(Lcom/mojang/serialization/Dynamic;J)Lcom/mojang/serialization/Dynamic;	a	defaultOverworld
	m	(Lcom/mojang/serialization/Dynamic;JLcom/mojang/serialization/Dynamic;Z)Ljava/lang/Object;	a	vanillaLevels
	m	(Lcom/mojang/serialization/Dynamic;JZZ)Lcom/mojang/serialization/Dynamic;	a	vanillaBiomeSource
	m	(Lcom/mojang/serialization/Dynamic;Lorg/apache/commons/lang3/mutable/MutableBoolean;Lorg/apache/commons/lang3/mutable/MutableInt;Lorg/apache/commons/lang3/mutable/MutableInt;Lorg/apache/commons/lang3/mutable/MutableInt;Ljava/util/Map;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)V	a	lambda$fixFlatStructures$7
	m	(Lcom/mojang/serialization/Dynamic;Lorg/apache/commons/lang3/mutable/MutableBoolean;Lorg/apache/commons/lang3/mutable/MutableInt;Lorg/apache/commons/lang3/mutable/MutableInt;Lorg/apache/commons/lang3/mutable/MutableInt;Ljava/util/Map;Ljava/util/Map;)V	a	lambda$fixFlatStructures$8
	m	(Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/OptionalDynamic;)Ljava/util/Map;	a	fixFlatStructures
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/util/Map$Entry;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixFlatStructures$12
	m	(Lcom/mojang/serialization/OptionalDynamic;Ljava/util/Map$Entry;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixFlatStructures$11
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$fix$1
	m	(Ljava/lang/String;I)I	a	getInt
	m	(Ljava/lang/String;II)I	a	getInt
	m	(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;I)V	a	setSpacing
	m	(Ljava/util/Optional;Lcom/mojang/serialization/Dynamic;)Ljava/util/Optional;	a	lambda$fix$2
	m	(Lorg/apache/commons/lang3/mutable/MutableBoolean;Lorg/apache/commons/lang3/mutable/MutableInt;Lorg/apache/commons/lang3/mutable/MutableInt;Lorg/apache/commons/lang3/mutable/MutableInt;Ljava/util/Map;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)V	a	lambda$fixFlatStructures$9
	m	(Lorg/apache/commons/lang3/mutable/MutableBoolean;Lorg/apache/commons/lang3/mutable/MutableInt;Lorg/apache/commons/lang3/mutable/MutableInt;Lorg/apache/commons/lang3/mutable/MutableInt;Ljava/util/Map;Ljava/util/Map;)V	a	lambda$fixFlatStructures$10
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/util/Optional;	b	lambda$fix$5
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$fix$4
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$fix$3
	f	Ljava/lang/String;	a	VILLAGE
	f	Ljava/lang/String;	b	DESERT_PYRAMID
	f	Ljava/lang/String;	c	IGLOO
	f	Ljava/lang/String;	d	JUNGLE_TEMPLE
	f	Ljava/lang/String;	e	SWAMP_HUT
	f	Ljava/lang/String;	f	PILLAGER_OUTPOST
	f	Ljava/lang/String;	g	END_CITY
	f	Ljava/lang/String;	h	WOODLAND_MANSION
	f	Ljava/lang/String;	i	OCEAN_MONUMENT
	f	Lcom/google/common/collect/ImmutableMap;	j	DEFAULTS
c	axa$a	net/minecraft/util/datafix/fixes/WorldGenSettingsFix$StructureFeatureConfiguration
	m	(III)V	<init>	<init>
		p	1		spacing
		p	2		separation
		p	3		salt
	m	(Laxa$a;)Ljava/lang/Integer;	a	lambda$static$2
	m	(Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic;	a	serialize
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	(Laxa$a;)Ljava/lang/Integer;	b	lambda$static$1
	m	(Laxa$a;)Ljava/lang/Integer;	c	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	spacing
	f	I	c	separation
	f	I	d	salt
c	axb	net/minecraft/util/datafix/fixes/WorldGenSettingsHeightAndBiomeFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		schema
	m	()Ljava/lang/IllegalStateException;	a	lambda$makeRule$7
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$9
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	updateLayers
	m	(ZLorg/apache/commons/lang3/mutable/MutableBoolean;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$2
	m	(ZZLcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$8
	m	(ZZLcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$6
	m	()Ljava/lang/IllegalStateException;	b	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$makeRule$4
	m	(ZZLcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$makeRule$5
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$makeRule$3
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$makeRule$0
	f	Ljava/lang/String;	a	WAS_PREVIOUSLY_INCREASED_KEY
	f	Ljava/lang/String;	b	NAME
c	axc	net/minecraft/util/datafix/fixes/WriteAndReadFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Lcom/mojang/datafixers/DSL$TypeReference;)V	<init>	<init>
		p	1		outputSchema
		p	2		name
		p	3		type
	f	Ljava/lang/String;	a	name
	f	Lcom/mojang/datafixers/DSL$TypeReference;	b	type
c	axd	net/minecraft/util/datafix/fixes/ZombieVillagerRebuildXpFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fix$0
c	axe	net/minecraft/util/datafix/fixes/package-info
c	axf	net/minecraft/util/datafix/package-info
c	axg	net/minecraft/util/datafix/schemas/NamespacedSchema
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	()Lcom/mojang/datafixers/types/Type;	a	namespacedString
	m	(Ljava/lang/String;)Ljava/lang/String;	a	ensureNamespaced
		p	0		id
	f	Lcom/mojang/serialization/codecs/PrimitiveCodec;	a	NAMESPACED_STRING_CODEC
	f	Lcom/mojang/datafixers/types/Type;	b	NAMESPACED_STRING
c	axg$1	net/minecraft/util/datafix/schemas/NamespacedSchema$1
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/String;)Ljava/lang/Object;	a	write
c	axh	net/minecraft/util/datafix/schemas/V100
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	equipment
		p	0		schema
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$3
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerMob
		p	0		schema
		p	1		map
		p	2		entityId
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerTypes$4
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerEntities$2
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerMob$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerEntities$1
		p	1		name
c	axi	net/minecraft/util/datafix/schemas/V102
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$0
c	axj	net/minecraft/util/datafix/schemas/V1022
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$0
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$2
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerTypes$1
c	axk	net/minecraft/util/datafix/schemas/V106
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$0
c	axl	net/minecraft/util/datafix/schemas/V107
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
c	axm	net/minecraft/util/datafix/schemas/V1125
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$0
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerTypes$2
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerTypes$1
c	axn	net/minecraft/util/datafix/schemas/V135
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$1
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerTypes$0
c	axo	net/minecraft/util/datafix/schemas/V143
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
c	axp	net/minecraft/util/datafix/schemas/V1451
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerBlockEntities$0
c	axq	net/minecraft/util/datafix/schemas/V1451_1
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$0
c	axr	net/minecraft/util/datafix/schemas/V1451_2
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerBlockEntities$0
		p	1		name
c	axs	net/minecraft/util/datafix/schemas/V1451_3
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$11
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$0
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerEntities$10
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerEntities$9
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	d	lambda$registerEntities$8
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	e	lambda$registerEntities$7
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	f	lambda$registerEntities$6
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	g	lambda$registerEntities$5
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	h	lambda$registerEntities$4
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	i	lambda$registerEntities$3
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	j	lambda$registerEntities$2
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	k	lambda$registerEntities$1
c	axt	net/minecraft/util/datafix/schemas/V1451_4
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerTypes$0
c	axu	net/minecraft/util/datafix/schemas/V1451_5
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
c	axv	net/minecraft/util/datafix/schemas/V1451_6
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	a	createCriterionTypes
		p	0		schema
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/function/Supplier;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$1
	m	(Ljava/util/Map;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$2
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$createCriterionTypes$7
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$createCriterionTypes$5
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$createCriterionTypes$6
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$createCriterionTypes$4
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	d	lambda$createCriterionTypes$3
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	e	lambda$registerTypes$0
	f	Ljava/lang/String;	b	SPECIAL_OBJECTIVE_MARKER
	f	Lcom/mojang/datafixers/types/templates/Hook$HookFunction;	c	UNPACK_OBJECTIVE_ID
	f	Lcom/mojang/datafixers/types/templates/Hook$HookFunction;	d	REPACK_OBJECTIVE_ID
c	axv$1	net/minecraft/util/datafix/schemas/V1451_6$1
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/serialization/Dynamic;	a	lambda$apply$1
		p	1		pair
	m	(Ljava/lang/String;)Lcom/mojang/datafixers/util/Pair;	a	lambda$apply$0
		p	0		criteriaName
c	axv$2	net/minecraft/util/datafix/schemas/V1451_6$2
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$apply$1
		p	1		criteriaName
	m	(Ljava/lang/String;)Ljava/lang/String;	a	packWithDot
		p	1		id
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Ljava/util/Optional;	b	lambda$apply$0
		p	2		criteriaType
c	axw	net/minecraft/util/datafix/schemas/V1460
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$46
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerBlockEntities$26
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerMob
		p	0		schema
		p	1		map
		p	2		entityId
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/function/Supplier;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$39
	m	(Ljava/util/Map;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$41
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerTypes$45
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerTypes$43
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerBlockEntities$25
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	b	registerInventory
		p	0		schema
		p	1		map
		p	2		name
	m	(Ljava/util/Map;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerTypes$32
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerTypes$44
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerTypes$42
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerBlockEntities$24
		p	1		name
	m	(Ljava/util/Map;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerTypes$30
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	d	lambda$registerTypes$37
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	d	lambda$registerTypes$40
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	d	lambda$registerEntities$23
		p	1		name
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	e	lambda$registerTypes$36
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	e	lambda$registerTypes$38
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	e	lambda$registerEntities$22
		p	1		name
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	f	lambda$registerTypes$27
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	f	lambda$registerTypes$35
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	f	lambda$registerEntities$21
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	g	lambda$registerTypes$34
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	g	lambda$registerEntities$20
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	h	lambda$registerTypes$33
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	h	lambda$registerEntities$19
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	i	lambda$registerTypes$31
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	i	lambda$registerEntities$18
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	j	lambda$registerTypes$29
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	j	lambda$registerEntities$17
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	k	lambda$registerTypes$28
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	k	lambda$registerEntities$16
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	l	lambda$registerInventory$1
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	l	lambda$registerEntities$15
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	m	lambda$registerMob$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	m	lambda$registerEntities$14
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	n	lambda$registerEntities$13
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	o	lambda$registerEntities$12
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	p	lambda$registerEntities$11
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	q	lambda$registerEntities$10
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	r	lambda$registerEntities$9
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	s	lambda$registerEntities$8
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	t	lambda$registerEntities$7
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	u	lambda$registerEntities$6
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	v	lambda$registerEntities$5
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	w	lambda$registerEntities$4
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	x	lambda$registerEntities$3
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	y	lambda$registerEntities$2
		p	1		name
c	axx	net/minecraft/util/datafix/schemas/V1466
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$0
c	axy	net/minecraft/util/datafix/schemas/V1470
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerMob$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$1
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerMob
		p	0		schema
		p	1		map
		p	2		entityId
c	axz	net/minecraft/util/datafix/schemas/V1481
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
c	aya	net/minecraft/util/datafix/schemas/V1483
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
c	ayb	net/minecraft/util/datafix/schemas/V1486
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
c	ayc	net/minecraft/util/datafix/schemas/V1510
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
c	ayd	net/minecraft/util/datafix/schemas/V1800
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$1
		p	1		name
c	aye	net/minecraft/util/datafix/schemas/V1801
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$0
c	ayf	net/minecraft/util/datafix/schemas/V1904
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$0
c	ayg	net/minecraft/util/datafix/schemas/V1906
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerInventory$1
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerBlockEntities$0
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerInventory
		p	0		schema
		p	1		map
		p	2		name
c	ayh	net/minecraft/util/datafix/schemas/V1909
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
c	ayi	net/minecraft/util/datafix/schemas/V1920
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerInventory$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerInventory
		p	0		schema
		p	1		map
		p	2		name
c	ayj	net/minecraft/util/datafix/schemas/V1928
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	equipment
		p	0		schema
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerMob
		p	0		schema
		p	1		map
		p	2		entityId
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerMob$0
c	ayk	net/minecraft/util/datafix/schemas/V1929
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$1
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerEntities$0
		p	1		name
c	ayl	net/minecraft/util/datafix/schemas/V1931
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$0
c	aym	net/minecraft/util/datafix/schemas/V2100
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerBlockEntities$1
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerMob
		p	0		schema
		p	1		entityTypes
		p	2		name
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerMob$0
c	ayn	net/minecraft/util/datafix/schemas/V2501
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerFurnace$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerFurnace
		p	0		schema
		p	1		map
		p	2		name
c	ayo	net/minecraft/util/datafix/schemas/V2502
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$0
c	ayp	net/minecraft/util/datafix/schemas/V2505
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$0
c	ayq	net/minecraft/util/datafix/schemas/V2509
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$0
c	ayr	net/minecraft/util/datafix/schemas/V2519
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$0
c	ays	net/minecraft/util/datafix/schemas/V2522
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$0
c	ayt	net/minecraft/util/datafix/schemas/V2551
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$5
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerTypes$4
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerTypes$3
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	d	lambda$registerTypes$2
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	e	lambda$registerTypes$1
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	f	lambda$registerTypes$0
c	ayu	net/minecraft/util/datafix/schemas/V2568
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$0
c	ayv	net/minecraft/util/datafix/schemas/V2571
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$0
c	ayw	net/minecraft/util/datafix/schemas/V2684
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerBlockEntities$1
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerTypes$0
c	ayx	net/minecraft/util/datafix/schemas/V2686
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$0
c	ayy	net/minecraft/util/datafix/schemas/V2688
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$1
c	ayz	net/minecraft/util/datafix/schemas/V2704
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$0
c	aza	net/minecraft/util/datafix/schemas/V2707
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
c	azb	net/minecraft/util/datafix/schemas/V2831
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$0
c	azc	net/minecraft/util/datafix/schemas/V2832
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$6
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerTypes$5
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerTypes$4
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	d	lambda$registerTypes$3
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	e	lambda$registerTypes$2
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	f	lambda$registerTypes$1
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	g	lambda$registerTypes$0
c	azd	net/minecraft/util/datafix/schemas/V2842
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$0
c	aze	net/minecraft/util/datafix/schemas/V3076
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
c	azf	net/minecraft/util/datafix/schemas/V3078
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerBlockEntities$1
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerMob
		p	0		schema
		p	1		map
		p	2		entityId
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerMob$0
c	azg	net/minecraft/util/datafix/schemas/V3081
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$0
c	azh	net/minecraft/util/datafix/schemas/V3082
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$0
		p	1		string
c	azi	net/minecraft/util/datafix/schemas/V3083
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerMob$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerMob
		p	0		schema
		p	1		map
		p	2		name
c	azj	net/minecraft/util/datafix/schemas/V3202
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
c	azk	net/minecraft/util/datafix/schemas/V3203
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$0
c	azl	net/minecraft/util/datafix/schemas/V3204
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerBlockEntities$0
c	azm	net/minecraft/util/datafix/schemas/V3325
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$1
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerEntities$0
c	azn	net/minecraft/util/datafix/schemas/V3326
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$0
c	azo	net/minecraft/util/datafix/schemas/V3327
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerBlockEntities$1
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerBlockEntities$0
c	azp	net/minecraft/util/datafix/schemas/V3328
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
c	azq	net/minecraft/util/datafix/schemas/V501
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$0
c	azr	net/minecraft/util/datafix/schemas/V700
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$0
c	azs	net/minecraft/util/datafix/schemas/V701
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerMob$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerMob
		p	0		schema
		p	1		map
		p	2		entityId
c	azt	net/minecraft/util/datafix/schemas/V702
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerMob$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerMob
		p	0		schema
		p	1		map
		p	2		entityId
c	azu	net/minecraft/util/datafix/schemas/V703
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$4
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerEntities$3
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerEntities$2
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	d	lambda$registerEntities$1
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	e	lambda$registerEntities$0
c	azv	net/minecraft/util/datafix/schemas/V704
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	()Lcom/google/common/collect/ImmutableMap;	a	lambda$static$6
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$5
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerBlockEntities$3
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerInventory
		p	0		schema
		p	1		map
		p	2		blockEntityId
	m	(Ljava/util/Map;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$4
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerInventory$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerBlockEntities$2
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerBlockEntities$1
		p	1		name
	f	Ljava/util/Map;	a	ITEM_TO_BLOCKENTITY
	f	Lcom/mojang/datafixers/types/templates/Hook$HookFunction;	b	ADD_NAMES
c	azv$1	net/minecraft/util/datafix/schemas/V704$1
c	azw	net/minecraft/util/datafix/schemas/V705
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$25
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$23
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerMob
		p	0		schema
		p	1		map
		p	2		entityId
	m	(Ljava/util/Map;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$24
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerThrowableProjectile$1
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerEntities$22
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	b	registerThrowableProjectile
		p	0		schema
		p	1		map
		p	2		entityId
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerMob$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerEntities$21
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	d	lambda$registerEntities$20
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	e	lambda$registerEntities$19
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	f	lambda$registerEntities$18
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	g	lambda$registerEntities$17
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	h	lambda$registerEntities$16
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	i	lambda$registerEntities$15
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	j	lambda$registerEntities$14
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	k	lambda$registerEntities$13
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	l	lambda$registerEntities$12
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	m	lambda$registerEntities$11
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	n	lambda$registerEntities$10
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	o	lambda$registerEntities$9
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	p	lambda$registerEntities$8
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	q	lambda$registerEntities$7
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	r	lambda$registerEntities$6
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	s	lambda$registerEntities$5
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	t	lambda$registerEntities$4
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	u	lambda$registerEntities$3
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	v	lambda$registerEntities$2
		p	1		name
	f	Lcom/mojang/datafixers/types/templates/Hook$HookFunction;	b	ADD_NAMES
c	azw$1	net/minecraft/util/datafix/schemas/V705$1
c	azx	net/minecraft/util/datafix/schemas/V808
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerInventory$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerInventory
		p	0		schema
		p	1		map
		p	2		blockEntityId
c	azy	net/minecraft/util/datafix/schemas/V99
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$30
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	equipment
		p	0		schema
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerBlockEntities$21
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerMob
		p	0		schema
		p	1		map
		p	2		entityId
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$addNames$35
		p	2		entityTag
	m	(Lcom/mojang/serialization/Dynamic;Ljava/util/Map;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$addNames$34
		p	2		blockEntityTag
	m	(Lcom/mojang/serialization/Dynamic;Ljava/util/Map;Ljava/lang/String;)Ljava/lang/Object;	a	addNames
		p	0		stack
		p	1		renames
		p	2		newArmorStandId
	m	(Lcom/mojang/serialization/Dynamic;Ljava/util/Map;Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$addNames$36
		p	3		tag
	m	(Ljava/util/HashMap;)V	a	lambda$static$33
		p	0		map
	m	(Ljava/util/Map;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$27
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerTypes$29
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerTypes$32
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerBlockEntities$20
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	b	registerThrowableProjectile
		p	0		schema
		p	1		map
		p	2		entityId
	m	(Ljava/util/Map;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerTypes$24
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerTypes$26
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerTypes$31
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerBlockEntities$19
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	c	registerMinecart
		p	0		schema
		p	1		map
		p	2		entityId
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	d	lambda$registerTypes$28
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	d	lambda$registerEntities$18
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	d	registerInventory
		p	0		schema
		p	1		map
		p	2		entityId
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	e	lambda$registerTypes$25
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	e	lambda$registerEntities$17
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	f	lambda$registerTypes$23
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	f	lambda$registerEntities$16
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	g	lambda$registerTypes$22
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	g	lambda$registerEntities$15
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	h	lambda$registerEntities$14
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	h	lambda$registerEntities$13
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	i	lambda$registerEntities$12
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	i	lambda$registerEntities$11
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	j	lambda$registerInventory$3
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	j	lambda$registerEntities$10
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	k	lambda$registerMinecart$2
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	k	lambda$registerEntities$9
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	l	lambda$registerThrowableProjectile$1
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	l	lambda$registerEntities$8
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	m	lambda$registerMob$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	m	lambda$registerEntities$7
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	n	lambda$registerEntities$6
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	o	lambda$registerEntities$5
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	p	lambda$registerEntities$4
		p	1		name
	f	Lcom/mojang/datafixers/types/templates/Hook$HookFunction;	a	ADD_NAMES
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ljava/util/Map;	c	ITEM_TO_BLOCKENTITY
c	azy$1	net/minecraft/util/datafix/schemas/V99$1
c	azz	net/minecraft/util/datafix/schemas/package-info
c	baa	net/minecraft/util/eventlog/EventLogDirectory
	m	(Ljava/nio/file/Path;Ljava/lang/String;)V	<init>	<init>
		p	1		directory
		p	2		extension
	m	()Lbaa$d;	a	listFiles
	m	(Ljava/nio/channels/ReadableByteChannel;Ljava/nio/file/Path;)V	a	writeCompressed
		p	0		source
		p	1		outputPath
	m	(Ljava/nio/file/Path;)Lbaa$b;	a	parseFile
		p	1		path
	m	(Ljava/nio/file/Path;Ljava/lang/String;)Lbaa;	a	open
		p	0		directory
		p	1		extension
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;)V	a	tryCompress
		p	0		from
		p	1		to
	m	(Ljava/time/LocalDate;)Lbaa$e;	a	createNewFile
		p	1		date
	m	(Ljava/nio/file/Path;)Z	b	lambda$listFiles$0
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	I	b	COMPRESS_BUFFER_SIZE
	f	Ljava/lang/String;	c	COMPRESSED_EXTENSION
	f	Ljava/nio/file/Path;	d	root
	f	Ljava/lang/String;	e	extension
c	baa$a	net/minecraft/util/eventlog/EventLogDirectory$CompressedFile
	m	()Ljava/io/Reader;	a	openReader
	m	()Lbaa$a;	b	compress
	m	()Ljava/nio/file/Path;	c	path
	m	()Lbaa$c;	d	id
	f	Ljava/nio/file/Path;	a	path
	f	Lbaa$c;	b	id
c	baa$b	net/minecraft/util/eventlog/EventLogDirectory$File
	m	()Ljava/io/Reader;	a	openReader
	m	()Lbaa$a;	b	compress
	m	()Ljava/nio/file/Path;	c	path
	m	()Lbaa$c;	d	id
c	baa$c	net/minecraft/util/eventlog/EventLogDirectory$FileId
	m	()Ljava/time/LocalDate;	a	date
	m	(Ljava/lang/String;)Lbaa$c;	a	parse
		p	0		fileName
	m	()I	b	index
	m	(Ljava/lang/String;)Ljava/lang/String;	b	toFileName
		p	1		extension
	f	Ljava/time/LocalDate;	a	date
	f	I	b	index
	f	Ljava/time/format/DateTimeFormatter;	c	DATE_FORMATTER
c	baa$d	net/minecraft/util/eventlog/EventLogDirectory$FileList
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		logs
	m	()Lbaa$d;	a	compressAll
	m	(ILjava/time/LocalDate;Lbaa$b;)Z	a	lambda$prune$0
		p	2		log
	m	(Ljava/time/LocalDate;I)Lbaa$d;	a	prune
		p	1		currentDate
		p	2		retentionDays
	m	()Ljava/util/stream/Stream;	b	stream
	m	()Ljava/util/Set;	c	ids
	f	Ljava/util/List;	a	files
c	baa$e	net/minecraft/util/eventlog/EventLogDirectory$RawFile
	m	()Ljava/io/Reader;	a	openReader
	m	()Lbaa$a;	b	compress
	m	()Ljava/nio/file/Path;	c	path
	m	()Lbaa$c;	d	id
	m	()Ljava/nio/channels/FileChannel;	e	openChannel
	f	Ljava/nio/file/Path;	a	path
	f	Lbaa$c;	b	id
c	bab	net/minecraft/util/eventlog/JsonEventLog
	m	(Lcom/mojang/serialization/Codec;Ljava/nio/channels/FileChannel;)V	<init>	<init>
		p	1		codec
		p	2		channel
	m	()Lbac;	a	openReader
	m	(Lcom/mojang/serialization/Codec;Ljava/nio/file/Path;)Lbab;	a	open
		p	0		codec
		p	1		path
	m	(Ljava/lang/Object;)V	a	write
		p	1		object
	m	()V	b	releaseReference
	f	Lcom/google/gson/Gson;	a	GSON
	f	Lcom/mojang/serialization/Codec;	b	codec
	f	Ljava/nio/channels/FileChannel;	c	channel
	f	Ljava/util/concurrent/atomic/AtomicInteger;	d	referenceCount
c	bab$1	net/minecraft/util/eventlog/JsonEventLog$1
	m	()Ljava/lang/Object;	a	next
	f	Lbac;	a	val$reader
	f	Lbab;	b	this$0
	f	J	c	position
c	bac	net/minecraft/util/eventlog/JsonEventLogReader
	m	()Ljava/lang/Object;	a	next
	m	(Lcom/mojang/serialization/Codec;Ljava/io/Reader;)Lbac;	a	create
		p	0		codec
		p	1		reader
c	bac$1	net/minecraft/util/eventlog/JsonEventLogReader$1
	m	()Ljava/lang/Object;	a	next
	f	Lcom/google/gson/stream/JsonReader;	a	val$jsonReader
	f	Lcom/mojang/serialization/Codec;	b	val$codec
c	bad	net/minecraft/util/eventlog/package-info
c	bae	net/minecraft/util/monitoring/jmx/MinecraftServerStatistics
	m	(Lnet/minecraft/server/MinecraftServer;)V	<init>	<init>
		p	1		server
	m	()F	a	getAverageTickTime
	m	(I)[Ljavax/management/MBeanAttributeInfo;	a	lambda$new$1
	m	(Lbae$a;)Ljavax/management/Attribute;	a	lambda$getAttributes$2
		p	0		entry
	m	(Lnet/minecraft/server/MinecraftServer;)V	a	registerJmxMonitoring
		p	0		server
	m	()[J	b	getTickTimes
	m	(Lbae$a;)Ljava/lang/String;	b	lambda$new$0
		p	0		entry
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lnet/minecraft/server/MinecraftServer;	b	server
	f	Ljavax/management/MBeanInfo;	c	mBeanInfo
	f	Ljava/util/Map;	d	attributeDescriptionByName
c	bae$a	net/minecraft/util/monitoring/jmx/MinecraftServerStatistics$AttributeDescription
	m	(Ljava/lang/String;Ljava/util/function/Supplier;Ljava/lang/String;Ljava/lang/Class;)V	<init>	<init>
		p	1		name
		p	2		getter
		p	3		description
		p	4		type
	m	()Ljavax/management/MBeanAttributeInfo;	a	asMBeanAttributeInfo
	f	Ljava/lang/String;	a	name
	f	Ljava/util/function/Supplier;	b	getter
	f	Ljava/lang/String;	c	description
	f	Ljava/lang/Class;	d	type
c	baf	net/minecraft/util/monitoring/jmx/package-info
c	bag	net/minecraft/util/package-info
c	bah	net/minecraft/util/profiling/ActiveProfiler
	m	(Ljava/util/function/LongSupplier;Ljava/util/function/IntSupplier;Z)V	<init>	<init>
		p	1		timeGetter
		p	2		tickGetter
		p	3		checkTimeout
	m	()V	a	startTick
	m	(J)Ljava/lang/Object;	a	lambda$pop$2
	m	(Lbbs;)V	a	markForCharting
		p	1		type
	m	(Ljava/lang/String;)V	a	push
		p	1		location
	m	(Ljava/lang/String;I)V	a	incrementCounter
		p	1		marker
		p	2		num
	m	(Ljava/util/function/Supplier;)V	a	push
		p	1		locationGetter
	m	(Ljava/util/function/Supplier;I)V	a	incrementCounter
		p	1		markerGetter
		p	2		num
	m	()V	b	endTick
	m	(Ljava/lang/String;)V	b	popPush
		p	1		location
	m	(Ljava/util/function/Supplier;)V	b	popPush
		p	1		locationGetter
	m	()V	c	pop
	m	(Ljava/lang/String;)Lbah$a;	c	getEntry
		p	1		name
	m	()Lban;	d	getResults
	m	()Ljava/util/Set;	e	getChartedPaths
	m	(Ljava/lang/String;)Lbah$a;	e	lambda$getCurrentEntry$3
		p	0		k
	m	()Lbah$a;	f	getCurrentEntry
	m	()Ljava/lang/Object;	g	lambda$pop$1
	m	()Ljava/lang/Object;	h	lambda$endTick$0
	f	J	a	WARNING_TIME_NANOS
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	Ljava/util/List;	d	paths
	f	Lit/unimi/dsi/fastutil/longs/LongList;	e	startTimes
	f	Ljava/util/Map;	f	entries
	f	Ljava/util/function/IntSupplier;	g	getTickTime
	f	Ljava/util/function/LongSupplier;	h	getRealTime
	f	J	i	startTimeNano
	f	I	j	startTimeTicks
	f	Ljava/lang/String;	k	path
	f	Z	l	started
	f	Lbah$a;	m	currentEntry
	f	Z	n	warn
	f	Ljava/util/Set;	o	chartedPaths
c	bah$a	net/minecraft/util/profiling/ActiveProfiler$PathEntry
	m	()J	a	getDuration
	m	()J	b	getMaxDuration
	m	()J	c	getCount
	m	()Lit/unimi/dsi/fastutil/objects/Object2LongMap;	d	getCounters
	f	J	a	maxDuration
	f	J	b	minDuration
	f	J	c	accumulatedDuration
	f	J	d	count
	f	Lit/unimi/dsi/fastutil/objects/Object2LongOpenHashMap;	e	counters
c	bai	net/minecraft/util/profiling/ContinuousProfiler
	m	(Ljava/util/function/LongSupplier;Ljava/util/function/IntSupplier;)V	<init>	<init>
		p	1		timeGetter
		p	2		tickGetter
	m	()Z	a	isEnabled
	m	()V	b	disable
	m	()V	c	enable
	m	()Lbao;	d	getFiller
	m	()Lban;	e	getResults
	f	Ljava/util/function/LongSupplier;	a	realTime
	f	Ljava/util/function/IntSupplier;	b	tickCount
	f	Lbam;	c	profiler
c	baj	net/minecraft/util/profiling/EmptyProfileResults
	m	()J	a	getStartTimeNano
	m	(Ljava/lang/String;)Ljava/util/List;	a	getTimes
		p	1		parentPath
	m	(Ljava/nio/file/Path;)Z	a	saveResults
		p	1		path
	m	()I	b	getStartTimeTicks
	m	()J	c	getEndTimeNano
	m	()I	d	getEndTimeTicks
	m	()Ljava/lang/String;	e	getProfilerResults
	f	Lbaj;	a	EMPTY
c	bak	net/minecraft/util/profiling/FilledProfileResults
	m	(Ljava/util/Map;JIJI)V	<init>	<init>
		p	1		locationInfos
		p	2		startTime
		p	4		startTick
		p	5		endTime
		p	7		endTick
	m	()J	a	getStartTimeNano
	m	(IILjava/lang/StringBuilder;Ljava/util/Map$Entry;)V	a	lambda$appendCounterResults$5
		p	4		entry
	m	(ILjava/lang/String;Lbak$a;ILjava/lang/StringBuilder;)V	a	appendCounterResults
		p	1		depth
		p	2		name
		p	3		info
		p	4		tickSpan
		p	5		sb
	m	(ILjava/lang/String;Ljava/lang/StringBuilder;)V	a	appendProfilerResults
		p	1		level
		p	2		name
		p	3		sb
	m	(JI)Ljava/lang/String;	a	getProfilerResults
		p	1		timeSpan
		p	3		tickSpan
	m	(Lbak$a;)J	a	lambda$static$0
	m	(Ljava/lang/String;)Ljava/util/List;	a	getTimes
		p	1		parentPath
	m	(Ljava/lang/String;Ljava/lang/String;)Z	a	isDirectChild
		p	0		parent
		p	1		path
	m	(Ljava/lang/StringBuilder;I)Ljava/lang/StringBuilder;	a	indentLine
		p	0		sb
		p	1		size
	m	(Ljava/lang/StringBuilder;ILjava/lang/String;Lbak$a;)V	a	lambda$appendCounters$6
		p	3		name
		p	4		info
	m	(Ljava/lang/StringBuilder;ILjava/lang/String;Ljava/lang/Long;)V	a	lambda$appendProfilerResults$4
		p	3		marker
		p	4		count
	m	(Ljava/nio/file/Path;)Z	a	saveResults
		p	1		path
	m	(Ljava/util/Map;Ljava/lang/String;Lbap;)V	a	lambda$getCounterValues$3
		p	1		location
		p	2		info
	m	(Ljava/util/Map;Ljava/lang/StringBuilder;I)V	a	appendCounters
		p	1		counters
		p	2		sb
		p	3		tickSpan
	m	(Ljava/util/Map;Ljava/util/List;Ljava/lang/String;Ljava/lang/Long;)V	a	lambda$getCounterValues$2
		p	2		marker
		p	3		count
	m	()I	b	getStartTimeTicks
	m	()J	c	getEndTimeNano
	m	(Ljava/lang/String;)Lbap;	c	getEntry
		p	1		path
	m	()I	d	getEndTimeTicks
	m	(Ljava/lang/String;)Lbak$a;	d	lambda$getCounterValues$1
		p	0		k
	m	()Ljava/lang/String;	e	getProfilerResults
	m	()I	f	getTickDuration
	m	()Ljava/util/Map;	h	getCounterValues
	m	()Ljava/lang/String;	i	getComment
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lbap;	b	EMPTY
	f	Lcom/google/common/base/Splitter;	c	SPLITTER
	f	Ljava/util/Comparator;	e	COUNTER_ENTRY_COMPARATOR
	f	Ljava/util/Map;	f	entries
	f	J	g	startTimeNano
	f	I	h	startTimeTicks
	f	J	i	endTimeNano
	f	I	j	endTimeTicks
	f	I	k	tickDuration
c	bak$1	net/minecraft/util/profiling/FilledProfileResults$1
	m	()J	a	getDuration
	m	()J	b	getMaxDuration
	m	()J	c	getCount
	m	()Lit/unimi/dsi/fastutil/objects/Object2LongMap;	d	getCounters
c	bak$a	net/minecraft/util/profiling/FilledProfileResults$CounterCollector
	m	(Ljava/lang/String;)Lbak$a;	a	lambda$addValue$0
		p	0		k
	m	(Ljava/util/Iterator;J)V	a	addValue
		p	1		pathIterator
		p	2		time
	f	J	a	selfValue
	f	J	b	totalValue
	f	Ljava/util/Map;	c	children
c	bal	net/minecraft/util/profiling/InactiveProfiler
	m	()V	a	startTick
	m	(Lbbs;)V	a	markForCharting
		p	1		type
	m	(Ljava/lang/String;)V	a	push
		p	1		location
	m	(Ljava/lang/String;I)V	a	incrementCounter
		p	1		marker
		p	2		num
	m	(Ljava/util/function/Supplier;)V	a	push
		p	1		locationGetter
	m	(Ljava/util/function/Supplier;I)V	a	incrementCounter
		p	1		markerGetter
		p	2		num
	m	()V	b	endTick
	m	(Ljava/lang/String;)V	b	popPush
		p	1		location
	m	(Ljava/util/function/Supplier;)V	b	popPush
		p	1		locationGetter
	m	()V	c	pop
	m	(Ljava/lang/String;)Lbah$a;	c	getEntry
		p	1		name
	m	()Lban;	d	getResults
	m	()Ljava/util/Set;	e	getChartedPaths
	f	Lbal;	a	INSTANCE
c	bam	net/minecraft/util/profiling/ProfileCollector
	m	(Ljava/lang/String;)Lbah$a;	c	getEntry
		p	1		name
	m	()Lban;	d	getResults
	m	()Ljava/util/Set;	e	getChartedPaths
c	ban	net/minecraft/util/profiling/ProfileResults
	m	()J	a	getStartTimeNano
	m	(Ljava/lang/String;)Ljava/util/List;	a	getTimes
		p	1		parentPath
	m	(Ljava/nio/file/Path;)Z	a	saveResults
		p	1		path
	m	()I	b	getStartTimeTicks
	m	(Ljava/lang/String;)Ljava/lang/String;	b	demanglePath
		p	0		path
	m	()J	c	getEndTimeNano
	m	()I	d	getEndTimeTicks
	m	()Ljava/lang/String;	e	getProfilerResults
	m	()I	f	getTickDuration
	m	()J	g	getNanoDuration
	f	C	d	PATH_SEPARATOR
c	bao	net/minecraft/util/profiling/ProfilerFiller
	m	()V	a	startTick
	m	(Lbao;Lbao;)Lbao;	a	tee
		p	0		a
		p	1		b
	m	(Lbbs;)V	a	markForCharting
		p	1		type
	m	(Ljava/lang/String;)V	a	push
		p	1		location
	m	(Ljava/lang/String;I)V	a	incrementCounter
		p	1		marker
		p	2		num
	m	(Ljava/util/function/Supplier;)V	a	push
		p	1		locationGetter
	m	(Ljava/util/function/Supplier;I)V	a	incrementCounter
		p	1		markerGetter
		p	2		num
	m	()V	b	endTick
	m	(Ljava/lang/String;)V	b	popPush
		p	1		location
	m	(Ljava/util/function/Supplier;)V	b	popPush
		p	1		locationGetter
	m	()V	c	pop
	m	(Ljava/util/function/Supplier;)V	c	incrementCounter
		p	1		markerGetter
	m	(Ljava/lang/String;)V	d	incrementCounter
		p	1		marker
	f	Ljava/lang/String;	b	ROOT
c	bao$1	net/minecraft/util/profiling/ProfilerFiller$1
	m	()V	a	startTick
	m	(Lbbs;)V	a	markForCharting
		p	1		type
	m	(Ljava/lang/String;)V	a	push
		p	1		location
	m	(Ljava/lang/String;I)V	a	incrementCounter
		p	1		marker
		p	2		num
	m	(Ljava/util/function/Supplier;)V	a	push
		p	1		locationGetter
	m	(Ljava/util/function/Supplier;I)V	a	incrementCounter
		p	1		markerGetter
		p	2		num
	m	()V	b	endTick
	m	(Ljava/lang/String;)V	b	popPush
		p	1		location
	m	(Ljava/util/function/Supplier;)V	b	popPush
		p	1		locationGetter
	m	()V	c	pop
	f	Lbao;	a	val$first
	f	Lbao;	c	val$second
c	bap	net/minecraft/util/profiling/ProfilerPathEntry
	m	()J	a	getDuration
	m	()J	b	getMaxDuration
	m	()J	c	getCount
	m	()Lit/unimi/dsi/fastutil/objects/Object2LongMap;	d	getCounters
c	baq	net/minecraft/util/profiling/ResultField
	m	(Ljava/lang/String;DDJ)V	<init>	<init>
		p	1		name
		p	2		parentUsagePercentage
		p	4		totalUsagePercentage
		p	6		visitCount
	m	()I	a	getColor
	m	(Lbaq;)I	a	compareTo
	f	D	a	percentage
	f	D	b	globalPercentage
	f	J	c	count
	f	Ljava/lang/String;	d	name
c	bar	net/minecraft/util/profiling/SingleTickProfiler
	m	(Ljava/util/function/LongSupplier;Ljava/lang/String;J)V	<init>	<init>
		p	1		timeGetter
		p	2		filename
		p	3		overtime
	m	()Lbao;	a	startTick
	m	(Lbao;Lbar;)Lbao;	a	decorateFiller
		p	0		profiler
		p	1		monitor
	m	(Ljava/lang/String;)Lbar;	a	createTickProfiler
		p	0		name
	m	()V	b	endTick
	m	()I	c	lambda$startTick$0
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/function/LongSupplier;	b	realTime
	f	J	c	saveThreshold
	f	I	d	tick
	f	Ljava/io/File;	e	location
	f	Lbam;	f	profiler
c	bas	net/minecraft/util/profiling/jfr/Environment
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()Ljava/lang/String;	a	getDescription
	m	(Lnet/minecraft/server/MinecraftServer;)Lbas;	a	from
		p	0		server
	m	()[Lbas;	b	$values
	f	Lbas;	a	CLIENT
	f	Lbas;	b	SERVER
	f	Ljava/lang/String;	c	description
	f	[Lbas;	d	$VALUES
c	bat	net/minecraft/util/profiling/jfr/JfrProfiler
	m	()Lbat;	a	getInstance
	m	(F)V	a	onServerTick
		p	1		tickTime
	m	(IILjava/net/SocketAddress;I)V	a	onPacketReceived
		p	1		protocolId
		p	2		packetId
		p	3		remoteAddress
		p	4		bytes
	m	(Lbas;)Z	a	start
		p	1		instanceType
	m	(Lbas;Ljava/lang/String;Ljdk/jfr/Recording;)V	a	lambda$start$2
		p	2		recording
	m	(Lclp;Ladc;Ljava/lang/String;)Lbax;	a	onChunkGenerate
		p	1		chunkPos
		p	2		world
		p	3		targetStatus
	m	(Ljava/io/Reader;Lbas;)Z	a	start
		p	1		reader
		p	2		instanceType
	m	(Ljava/net/SocketAddress;)Lnet/minecraft/util/profiling/jfr/event/NetworkSummaryEvent$b;	a	networkStatFor
		p	1		address
	m	()Ljava/nio/file/Path;	b	stop
	m	(IILjava/net/SocketAddress;I)V	b	onPacketSent
		p	1		protocolId
		p	2		packetId
		p	3		remoteAddress
		p	4		bytes
	m	()Z	c	isRunning
	m	()Z	d	isAvailable
	m	()Lbax;	e	onWorldLoadedStarted
	m	()V	f	setupSummaryListener
	m	()V	g	lambda$new$1
	m	()V	h	lambda$new$0
	f	Ljava/lang/String;	a	ROOT_CATEGORY
	f	Ljava/lang/String;	b	WORLD_GEN_CATEGORY
	f	Ljava/lang/String;	c	TICK_CATEGORY
	f	Ljava/lang/String;	d	NETWORK_CATEGORY
	f	Lorg/slf4j/Logger;	f	LOGGER
	f	Ljava/util/List;	g	CUSTOM_EVENTS
	f	Ljava/lang/String;	h	FLIGHT_RECORDER_CONFIG
	f	Ljava/time/format/DateTimeFormatter;	i	DATE_TIME_FORMATTER
	f	Lbat;	j	INSTANCE
	f	Ljdk/jfr/Recording;	k	recording
	f	F	l	currentAverageTickTime
	f	Ljava/util/Map;	m	networkTrafficByAddress
c	bat$1	net/minecraft/util/profiling/jfr/JfrProfiler$1
	m	()V	a	lambda$$0
	f	Lbaw;	a	summaryReporter
	f	Lbat;	b	this$0
c	bau	net/minecraft/util/profiling/jfr/JvmProfiler
	m	(F)V	a	onServerTick
		p	1		tickTime
	m	(IILjava/net/SocketAddress;I)V	a	onPacketReceived
		p	1		protocolId
		p	2		packetId
		p	3		remoteAddress
		p	4		bytes
	m	(Lbas;)Z	a	start
		p	1		instanceType
	m	(Lclp;Ladc;Ljava/lang/String;)Lbax;	a	onChunkGenerate
		p	1		chunkPos
		p	2		world
		p	3		targetStatus
	m	()Ljava/nio/file/Path;	b	stop
	m	(IILjava/net/SocketAddress;I)V	b	onPacketSent
		p	1		protocolId
		p	2		packetId
		p	3		remoteAddress
		p	4		bytes
	m	()Z	c	isRunning
	m	()Z	d	isAvailable
	m	()Lbax;	e	onWorldLoadedStarted
	f	Lbau;	e	INSTANCE
c	bau$a	net/minecraft/util/profiling/jfr/JvmProfiler$NoOpProfiler
	m	()V	a	lambda$static$0
	m	(F)V	a	onServerTick
		p	1		tickTime
	m	(IILjava/net/SocketAddress;I)V	a	onPacketReceived
		p	1		protocolId
		p	2		packetId
		p	3		remoteAddress
		p	4		bytes
	m	(Lbas;)Z	a	start
		p	1		instanceType
	m	(Lclp;Ladc;Ljava/lang/String;)Lbax;	a	onChunkGenerate
		p	1		chunkPos
		p	2		world
		p	3		targetStatus
	m	()Ljava/nio/file/Path;	b	stop
	m	(IILjava/net/SocketAddress;I)V	b	onPacketSent
		p	1		protocolId
		p	2		packetId
		p	3		remoteAddress
		p	4		bytes
	m	()Z	c	isRunning
	m	()Z	d	isAvailable
	m	()Lbax;	e	onWorldLoadedStarted
	f	Lbax;	a	noOpCommit
	f	Lorg/slf4j/Logger;	b	LOGGER
c	bav	net/minecraft/util/profiling/jfr/Percentiles
	m	(Ljava/util/Map;)Ljava/util/Map;	a	sorted
		p	0		map
	m	(Ljava/util/Map;Lit/unimi/dsi/fastutil/ints/Int2DoubleRBTreeMap;)V	a	lambda$sorted$0
		p	1		reversedMap
	m	([D)Ljava/util/Map;	a	evaluate
		p	0		values
	m	([J)Ljava/util/Map;	a	evaluate
		p	0		values
	f	Lcom/google/common/math/Quantiles$ScaleAndIndexes;	a	DEFAULT_INDEXES
c	baw	net/minecraft/util/profiling/jfr/SummaryReporter
	m	(Ljava/lang/Runnable;)V	<init>	<init>
		p	1		stopCallback
	m	()Ljava/lang/String;	a	lambda$recordingStopped$3
	m	(Ljava/nio/file/Path;)V	a	recordingStopped
		p	1		dumpPath
	m	(Ljava/util/function/Supplier;)V	a	infoWithFallback
		p	0		logSupplier
	m	(Ljava/util/function/Supplier;Ljava/lang/Throwable;)V	a	warnWithFallback
		p	0		logSupplier
		p	1		throwable
	m	()Ljava/lang/String;	b	lambda$recordingStopped$1
	m	(Ljava/nio/file/Path;)Ljava/lang/String;	b	lambda$recordingStopped$2
	m	(Ljava/nio/file/Path;)Ljava/lang/String;	c	lambda$recordingStopped$0
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/lang/Runnable;	b	onDeregistration
c	bax	net/minecraft/util/profiling/jfr/callback/ProfiledDuration
c	bay	net/minecraft/util/profiling/jfr/callback/package-info
c	baz	net/minecraft/util/profiling/jfr/event/PacketEvent
	m	(IILjava/net/SocketAddress;I)V	<init>	<init>
		p	1		protocolId
		p	2		packetId
		p	3		remoteAddress
		p	4		bytes
c	baz$a	net/minecraft/util/profiling/jfr/event/PacketEvent$Fields
	f	Ljava/lang/String;	a	REMOTE_ADDRESS
	f	Ljava/lang/String;	b	PROTOCOL_ID
	f	Ljava/lang/String;	c	PACKET_ID
	f	Ljava/lang/String;	d	BYTES
c	bba	net/minecraft/util/profiling/jfr/event/package-info
c	bbb	net/minecraft/util/profiling/jfr/package-info
c	bbc	net/minecraft/util/profiling/jfr/parse/JfrStatsParser
	m	(Ljava/util/stream/Stream;)V	<init>	<init>
		p	1		events
	m	()Lbbd;	a	results
	m	(Lbbl$b;)Lbbc$a;	a	lambda$incrementPacket$1
		p	0		packet
	m	(Ljava/nio/file/Path;)Lbbd;	a	parse
		p	0		path
	m	(Ljava/time/Duration;Ljava/util/Map;)Lbbl;	a	collectPacketStats
		p	0		duration
		p	1		packetsToCounter
	m	(Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair;	a	lambda$collectPacketStats$2
		p	0		entry
	m	(Ljava/util/stream/Stream;)V	a	capture
		p	1		events
	m	(Ljdk/jfr/consumer/RecordedEvent;)V	a	lambda$capture$0
		p	1		event
	m	(Ljdk/jfr/consumer/RecordedEvent;ILjava/util/Map;)V	a	incrementPacket
		p	1		event
		p	2		bytes
		p	3		packetsToCounter
	m	(Ljdk/jfr/consumer/RecordedEvent;Ljava/util/List;Ljava/lang/String;)V	a	appendFileIO
		p	1		event
		p	2		samples
		p	3		bytesKey
	f	Ljava/time/Instant;	a	recordingStarted
	f	Ljava/time/Instant;	b	recordingEnded
	f	Ljava/util/List;	c	chunkGenStats
	f	Ljava/util/List;	d	cpuLoadStat
	f	Ljava/util/Map;	e	receivedPackets
	f	Ljava/util/Map;	f	sentPackets
	f	Ljava/util/List;	g	fileWrites
	f	Ljava/util/List;	h	fileReads
	f	I	i	garbageCollections
	f	Ljava/time/Duration;	j	gcTotalDuration
	f	Ljava/util/List;	k	gcHeapStats
	f	Ljava/util/List;	l	threadAllocationStats
	f	Ljava/util/List;	m	tickTimes
	f	Ljava/time/Duration;	n	worldCreationDuration
c	bbc$1	net/minecraft/util/profiling/jfr/parse/JfrStatsParser$1
	m	()Ljdk/jfr/consumer/RecordedEvent;	a	next
	f	Ljdk/jfr/consumer/RecordingFile;	a	val$recordingFile
c	bbc$a	net/minecraft/util/profiling/jfr/parse/JfrStatsParser$MutableCountAndSize
	m	()Lbbl$a;	a	toCountAndSize
	m	(I)V	a	increment
		p	1		bytes
	f	J	a	count
	f	J	b	totalSize
c	bbd	net/minecraft/util/profiling/jfr/parse/JfrStatsResult
	m	()Ljava/util/List;	a	chunkGenSummary
	m	(Lcom/mojang/datafixers/util/Pair;)Ljava/time/Duration;	a	lambda$chunkGenSummary$1
		p	0		pair
	m	(Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair;	a	lambda$chunkGenSummary$0
		p	0		entry
	m	()Ljava/lang/String;	b	asJson
	m	()Ljava/time/Instant;	c	recordingStarted
	m	()Ljava/time/Instant;	d	recordingEnded
	m	()Ljava/time/Duration;	e	recordingDuration
	m	()Ljava/time/Duration;	f	worldCreationDuration
	m	()Ljava/util/List;	g	tickTimes
	m	()Ljava/util/List;	h	cpuLoadStats
	m	()Lbbk$a;	i	heapSummary
	m	()Lbbm$a;	j	threadAllocationSummary
	m	()Lbbl;	k	receivedPacketsSummary
	m	()Lbbl;	l	sentPacketsSummary
	m	()Lbbj$a;	m	fileWrites
	m	()Lbbj$a;	n	fileReads
	m	()Ljava/util/List;	o	chunkGenStats
	f	Ljava/time/Instant;	a	recordingStarted
	f	Ljava/time/Instant;	b	recordingEnded
	f	Ljava/time/Duration;	c	recordingDuration
	f	Ljava/time/Duration;	d	worldCreationDuration
	f	Ljava/util/List;	e	tickTimes
	f	Ljava/util/List;	f	cpuLoadStats
	f	Lbbk$a;	g	heapSummary
	f	Lbbm$a;	h	threadAllocationSummary
	f	Lbbl;	i	receivedPacketsSummary
	f	Lbbl;	j	sentPacketsSummary
	f	Lbbj$a;	k	fileWrites
	f	Lbbj$a;	l	fileReads
	f	Ljava/util/List;	m	chunkGenStats
c	bbe	net/minecraft/util/profiling/jfr/parse/package-info
c	bbf	net/minecraft/util/profiling/jfr/serialize/JfrResultJsonSerializer
	m	(Lbbd;)Ljava/lang/String;	a	format
		p	1		profile
	m	(Lbbh;)Lcom/google/gson/JsonElement;	a	lambda$chunkGen$4
		p	0		sample
	m	(Lbbj$a;)Lcom/google/gson/JsonElement;	a	fileIoSummary
		p	1		statistics
	m	(Lbbk$a;)Lcom/google/gson/JsonElement;	a	heap
		p	1		statistics
	m	(Lbbl;)Lcom/google/gson/JsonElement;	a	packets
		p	1		statistics
	m	(Lbbm$a;)Lcom/google/gson/JsonElement;	a	threadAllocations
		p	1		statistics
	m	(Lbbn;)D	a	lambda$serverTicks$7
		p	0		sample
	m	(Lcom/google/gson/JsonArray;Lcom/mojang/datafixers/util/Pair;)V	a	lambda$packets$10
		p	1		pair
	m	(Lcom/google/gson/JsonArray;Ljava/lang/String;Ljava/lang/Double;)V	a	lambda$threadAllocations$6
		p	1		threadName
		p	2		allocation
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonArray;)V	a	lambda$chunkGen$1
		p	1		json
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonObject;)V	a	lambda$chunkGen$2
		p	1		json
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Integer;Ljava/lang/Double;)V	a	lambda$serverTicks$8
		p	1		quantile
		p	2		value
	m	(Lcom/mojang/datafixers/util/Pair;)D	a	lambda$chunkGen$0
		p	0		pair
	m	(Ljava/lang/String;Ljava/lang/Double;Lcom/google/gson/JsonObject;)V	a	lambda$threadAllocations$5
		p	2		json
	m	(Ljava/util/List;)Lcom/google/gson/JsonElement;	a	chunkGen
		p	1		statistics
	m	(Ljava/util/List;Ljava/util/function/ToDoubleFunction;)Lcom/google/gson/JsonObject;	a	lambda$cpu$11
		p	0		samples
		p	1		valueGetter
	m	(Lbbd;)Lcom/google/gson/JsonElement;	b	fileIO
		p	1		profile
	m	(Lcom/google/gson/JsonArray;Lcom/mojang/datafixers/util/Pair;)V	b	lambda$fileIoSummary$9
		p	1		pair
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Integer;Ljava/lang/Double;)V	b	lambda$chunkGen$3
		p	1		quantile
		p	2		value
	m	(Ljava/util/List;)Lcom/google/gson/JsonElement;	b	serverTicks
		p	1		samples
	m	(Lbbd;)Lcom/google/gson/JsonElement;	c	network
		p	1		profile
	m	(Ljava/util/List;)Lcom/google/gson/JsonElement;	c	cpu
		p	1		samples
	f	Lcom/google/gson/Gson;	a	gson
	f	Ljava/lang/String;	b	BYTES_PER_SECOND
	f	Ljava/lang/String;	c	COUNT
	f	Ljava/lang/String;	d	DURATION_NANOS_TOTAL
	f	Ljava/lang/String;	e	TOTAL_BYTES
	f	Ljava/lang/String;	f	COUNT_PER_SECOND
c	bbg	net/minecraft/util/profiling/jfr/serialize/package-info
c	bbh	net/minecraft/util/profiling/jfr/stats/ChunkGenStat
	m	(Ljava/time/Duration;Lclp;Laig;Ldds;Ljava/lang/String;)V	<init>	<init>
		p	1		duration
	m	()Ljava/time/Duration;	a	duration
	m	(Ljdk/jfr/consumer/RecordedEvent;)Lbbh;	a	from
		p	0		event
	m	()Lclp;	b	chunkPos
	m	()Laig;	c	worldPos
	m	()Ldds;	d	status
	m	()Ljava/lang/String;	e	level
	f	Ljava/time/Duration;	a	duration
	f	Lclp;	b	chunkPos
	f	Laig;	c	worldPos
	f	Ldds;	d	status
	f	Ljava/lang/String;	e	level
c	bbi	net/minecraft/util/profiling/jfr/stats/CpuLoadStat
	m	()D	a	jvm
	m	(Ljdk/jfr/consumer/RecordedEvent;)Lbbi;	a	from
		p	0		event
	m	()D	b	userJvm
	m	()D	c	system
	f	D	a	jvm
	f	D	b	userJvm
	f	D	c	system
c	bbj	net/minecraft/util/profiling/jfr/stats/FileIOStat
	m	()Ljava/time/Duration;	a	duration
	m	(Lbbj;)J	a	lambda$summary$3
		p	0		sample
	m	(Ljava/time/Duration;Ljava/util/List;)Lbbj$a;	a	summary
		p	0		duration
		p	1		samples
	m	(Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair;	a	lambda$summary$4
		p	0		entry
	m	()Ljava/lang/String;	b	path
	m	(Lbbj;)Ljava/lang/String;	b	lambda$summary$2
		p	0		sample
	m	()J	c	bytes
	m	(Lbbj;)Z	c	lambda$summary$1
		p	0		sample
	m	(Lbbj;)J	d	lambda$summary$0
		p	0		sample
	f	Ljava/time/Duration;	a	duration
	f	Ljava/lang/String;	b	path
	f	J	c	bytes
c	bbj$a	net/minecraft/util/profiling/jfr/stats/FileIOStat$Summary
	m	()J	a	totalBytes
	m	()D	b	bytesPerSecond
	m	()J	c	counts
	m	()D	d	countsPerSecond
	m	()Ljava/time/Duration;	e	timeSpentInIO
	m	()Ljava/util/List;	f	topTenContributorsByTotalBytes
	f	J	a	totalBytes
	f	D	b	bytesPerSecond
	f	J	c	counts
	f	D	d	countsPerSecond
	f	Ljava/time/Duration;	e	timeSpentInIO
	f	Ljava/util/List;	f	topTenContributorsByTotalBytes
c	bbk	net/minecraft/util/profiling/jfr/stats/GcHeapStat
	m	()Ljava/time/Instant;	a	timestamp
	m	(Lbbk;)Lbbk$b;	a	lambda$calculateAllocationRatePerSecond$0
	m	(Ljava/time/Duration;Ljava/util/List;Ljava/time/Duration;I)Lbbk$a;	a	summary
		p	0		duration
		p	1		samples
		p	2		gcDuration
		p	3		count
	m	(Ljava/util/List;)D	a	calculateAllocationRatePerSecond
		p	0		samples
	m	(Ljdk/jfr/consumer/RecordedEvent;)Lbbk;	a	from
		p	0		event
	m	()J	b	heapUsed
	m	()Lbbk$b;	c	timing
	f	Ljava/time/Instant;	a	timestamp
	f	J	b	heapUsed
	f	Lbbk$b;	c	timing
c	bbk$a	net/minecraft/util/profiling/jfr/stats/GcHeapStat$Summary
	m	()F	a	gcOverHead
	m	()Ljava/time/Duration;	b	duration
	m	()Ljava/time/Duration;	c	gcTotalDuration
	m	()I	d	totalGCs
	m	()D	e	allocationRateBytesPerSecond
	f	Ljava/time/Duration;	a	duration
	f	Ljava/time/Duration;	b	gcTotalDuration
	f	I	c	totalGCs
	f	D	d	allocationRateBytesPerSecond
c	bbk$b	net/minecraft/util/profiling/jfr/stats/GcHeapStat$Timing
	m	()[Lbbk$b;	a	$values
	f	Lbbk$b;	a	BEFORE_GC
	f	Lbbk$b;	b	AFTER_GC
	f	[Lbbk$b;	c	$VALUES
c	bbl	net/minecraft/util/profiling/jfr/stats/NetworkPacketSummary
	m	(Ljava/time/Duration;Ljava/util/List;)V	<init>	<init>
		p	1		duration
		p	2		packetsToStatistics
	m	()D	a	getCountsPerSecond
	m	()D	b	getSizePerSecond
	m	()J	c	getTotalCount
	m	()J	d	getTotalSize
	m	()Ljava/util/List;	e	largestSizeContributors
	m	()Lbbl$a;	f	lambda$new$0
	f	Lbbl$a;	a	totalPacketCountAndSize
	f	Ljava/util/List;	b	largestSizeContributors
	f	Ljava/time/Duration;	c	recordingDuration
c	bbl$a	net/minecraft/util/profiling/jfr/stats/NetworkPacketSummary$PacketCountAndSize
	m	()J	a	totalCount
	m	(Lbbl$a;)Lbbl$a;	a	add
		p	1		statistics
	m	()J	b	totalSize
	f	J	a	totalCount
	f	J	b	totalSize
	f	Ljava/util/Comparator;	c	SIZE_THEN_COUNT
c	bbl$b	net/minecraft/util/profiling/jfr/stats/NetworkPacketSummary$PacketIdentification
	m	()Ljava/lang/String;	a	packetName
	m	(Lcom/google/common/collect/ImmutableMap$Builder;Lvc;Lsr;Ljava/lang/Integer;Ljava/lang/Class;)V	a	lambda$static$0
		p	3		packetId
		p	4		clazz
	m	(Ljdk/jfr/consumer/RecordedEvent;)Lbbl$b;	a	from
		p	0		event
	m	()Lvc;	b	direction
	m	()I	c	protocolId
	m	()I	d	packetId
	f	Lvc;	a	direction
	f	I	b	protocolId
	f	I	c	packetId
	f	Ljava/util/Map;	d	PACKET_NAME_BY_ID
c	bbm	net/minecraft/util/profiling/jfr/stats/ThreadAllocationStat
	m	()Ljava/time/Instant;	a	timestamp
	m	(Lbbm;)Ljava/lang/String;	a	lambda$summary$0
		p	0		sample
	m	(Ljava/util/List;)Lbbm$a;	a	summary
		p	0		samples
	m	(Ljava/util/Map;Ljava/lang/String;Ljava/util/List;)V	a	lambda$summary$1
		p	1		threadName
		p	2		groupedSamples
	m	(Ljdk/jfr/consumer/RecordedEvent;)Lbbm;	a	from
		p	0		event
	m	()Ljava/lang/String;	b	threadName
	m	()J	c	totalBytes
	f	Ljava/time/Instant;	a	timestamp
	f	Ljava/lang/String;	b	threadName
	f	J	c	totalBytes
	f	Ljava/lang/String;	d	UNKNOWN_THREAD
c	bbm$a	net/minecraft/util/profiling/jfr/stats/ThreadAllocationStat$Summary
	m	()Ljava/util/Map;	a	allocationsPerSecondByThread
	f	Ljava/util/Map;	a	allocationsPerSecondByThread
c	bbn	net/minecraft/util/profiling/jfr/stats/TickTimeStat
	m	()Ljava/time/Instant;	a	timestamp
	m	(Ljdk/jfr/consumer/RecordedEvent;)Lbbn;	a	from
		p	0		event
	m	()Ljava/time/Duration;	b	currentAverage
	f	Ljava/time/Instant;	a	timestamp
	f	Ljava/time/Duration;	b	currentAverage
c	bbo	net/minecraft/util/profiling/jfr/stats/TimeStamped
	m	()Ljava/time/Instant;	a	getTimestamp
c	bbp	net/minecraft/util/profiling/jfr/stats/TimedStat
	m	()Ljava/time/Duration;	a	duration
c	bbq	net/minecraft/util/profiling/jfr/stats/TimedStatSummary
	m	()Lbbp;	a	fastest
	m	(Lbbp;)J	a	lambda$summary$0
		p	0		sample
	m	(Ljava/util/List;)Lbbq;	a	summary
		p	0		samples
	m	()Lbbp;	b	slowest
	m	()Lbbp;	c	secondSlowest
	m	()I	d	count
	m	()Ljava/util/Map;	e	percentilesNanos
	m	()Ljava/time/Duration;	f	totalDuration
	f	Lbbp;	a	fastest
	f	Lbbp;	b	slowest
	f	Lbbp;	c	secondSlowest
	f	I	d	count
	f	Ljava/util/Map;	e	percentilesNanos
	f	Ljava/time/Duration;	f	totalDuration
c	bbr	net/minecraft/util/profiling/jfr/stats/package-info
c	bbs	net/minecraft/util/profiling/metrics/MetricCategory
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()Ljava/lang/String;	a	getDescription
	m	()[Lbbs;	b	$values
	f	Lbbs;	a	PATH_FINDING
	f	Lbbs;	b	EVENT_LOOPS
	f	Lbbs;	c	MAIL_BOXES
	f	Lbbs;	d	TICK_LOOP
	f	Lbbs;	e	JVM
	f	Lbbs;	f	CHUNK_RENDERING
	f	Lbbs;	g	CHUNK_RENDERING_DISPATCHING
	f	Lbbs;	h	CPU
	f	Lbbs;	i	GPU
	f	Ljava/lang/String;	j	description
	f	[Lbbs;	k	$VALUES
c	bbt	net/minecraft/util/profiling/metrics/MetricSampler
	m	(Ljava/lang/String;Lbbs;Ljava/util/function/DoubleSupplier;Ljava/lang/Runnable;Lbbt$c;)V	<init>	<init>
		p	1		name
		p	2		type
		p	3		retriever
		p	4		startAction
		p	5		deviationChecker
	m	()V	a	onStartTick
	m	(I)V	a	onEndTick
		p	1		tick
	m	(Ljava/lang/String;Lbbs;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Lbbt;	a	create
		p	0		name
		p	1		type
		p	2		context
		p	3		retriever
	m	(Ljava/lang/String;Lbbs;Ljava/util/function/DoubleSupplier;)Lbbt;	a	create
		p	0		name
		p	1		type
		p	2		retriever
	m	(Ljava/lang/String;Lbbs;Ljava/util/function/ToDoubleFunction;Ljava/lang/Object;)Lbbt$a;	a	builder
		p	0		name
		p	1		type
		p	2		retriever
		p	3		context
	m	()V	b	onFinished
	m	()Ljava/util/function/DoubleSupplier;	c	getSampler
	m	()Ljava/lang/String;	d	getName
	m	()Lbbs;	e	getCategory
	m	()Lbbt$b;	f	result
	m	()Z	g	triggersThreshold
	m	()V	h	verifyRunning
	f	Lbbt$c;	a	thresholdTest
	f	Ljava/lang/String;	b	name
	f	Lbbs;	c	category
	f	Ljava/util/function/DoubleSupplier;	d	sampler
	f	Lio/netty/buffer/ByteBuf;	e	ticks
	f	Lio/netty/buffer/ByteBuf;	f	values
	f	Z	g	isRunning
	f	Ljava/lang/Runnable;	h	beforeTick
	f	D	i	currentValue
c	bbt$a	net/minecraft/util/profiling/metrics/MetricSampler$MetricSamplerBuilder
	m	(Ljava/lang/String;Lbbs;Ljava/util/function/ToDoubleFunction;Ljava/lang/Object;)V	<init>	<init>
		p	1		name
		p	2		type
		p	3		timeFunction
		p	4		context
	m	()Lbbt;	a	build
	m	(Lbbt$c;)Lbbt$a;	a	withThresholdAlert
		p	1		deviationChecker
	m	(Ljava/util/function/Consumer;)Lbbt$a;	a	withBeforeTick
		p	1		action
	m	(Ljava/util/function/ToDoubleFunction;Ljava/lang/Object;)D	a	lambda$new$0
	m	(Ljava/util/function/Consumer;)V	b	lambda$withBeforeTick$1
	f	Ljava/lang/String;	a	name
	f	Lbbs;	b	category
	f	Ljava/util/function/DoubleSupplier;	c	sampler
	f	Ljava/lang/Object;	d	context
	f	Ljava/lang/Runnable;	e	beforeTick
	f	Lbbt$c;	f	thresholdTest
c	bbt$b	net/minecraft/util/profiling/metrics/MetricSampler$SamplerResult
	m	(IILit/unimi/dsi/fastutil/ints/Int2DoubleMap;)V	<init>	<init>
		p	1		startTick
		p	2		endTick
		p	3		values
	m	()I	a	getFirstTick
	m	(I)D	a	valueAtTick
		p	1		tick
	m	()I	b	getLastTick
	f	Lit/unimi/dsi/fastutil/ints/Int2DoubleMap;	a	recording
	f	I	b	firstTick
	f	I	c	lastTick
c	bbt$c	net/minecraft/util/profiling/metrics/MetricSampler$ThresholdTest
	m	(D)Z	test	test
		p	1		value
c	bbt$d	net/minecraft/util/profiling/metrics/MetricSampler$ValueIncreasedByPercentage
	m	(F)V	<init>	<init>
		p	1		threshold
	m	(D)Z	test	test
		p	1		value
	f	F	a	percentageIncreaseThreshold
	f	D	b	previousValue
c	bbu	net/minecraft/util/profiling/metrics/MetricsRegistry
	m	()Ljava/util/List;	a	getRegisteredSamplers
	m	(Lbbw;)V	a	add
		p	1		executor
	m	(Ljava/util/Map$Entry;)Lbbt;	a	lambda$aggregateDuplicates$1
		p	0		entry
	m	(Ljava/util/Map;)Ljava/util/List;	a	aggregateDuplicates
		p	0		samplers
	m	(Lbbw;)Ljava/util/stream/Stream;	b	lambda$getRegisteredSamplers$0
		p	0		executor
	f	Lbbu;	a	INSTANCE
	f	Ljava/util/WeakHashMap;	b	measuredInstances
c	bbu$a	net/minecraft/util/profiling/metrics/MetricsRegistry$AggregatedMetricSampler
	m	(Ljava/lang/String;Ljava/util/List;)V	<init>	<init>
		p	1		id
		p	2		delegates
	m	(DLbbt;)Z	a	lambda$thresholdTest$2
		p	2		sampler
	m	(Ljava/util/List;)Lbbt$c;	a	thresholdTest
		p	0		delegates
	m	(Ljava/util/List;D)Z	a	lambda$thresholdTest$3
		p	1		value
	m	(Ljava/util/List;)V	b	beforeTick
		p	0		samplers
	m	(Ljava/util/List;)D	c	averageValueFromDelegates
		p	0		samplers
	m	(Ljava/util/List;)V	d	lambda$new$1
	m	(Ljava/util/List;)D	e	lambda$new$0
	f	Ljava/util/List;	b	delegates
c	bbv	net/minecraft/util/profiling/metrics/MetricsSamplerProvider
	m	(Ljava/util/function/Supplier;)Ljava/util/Set;	a	samplers
		p	1		profilerSupplier
c	bbw	net/minecraft/util/profiling/metrics/ProfilerMeasured
	m	()Ljava/util/List;	bm	profiledMetrics
c	bbx	net/minecraft/util/profiling/metrics/package-info
c	bby	net/minecraft/util/profiling/metrics/profiling/ActiveMetricsRecorder
	m	(Lbbv;Ljava/util/function/LongSupplier;Ljava/util/concurrent/Executor;Lbce;Ljava/util/function/Consumer;Ljava/util/function/Consumer;)V	<init>	<init>
		p	1		samplerSource
		p	2		timeGetter
		p	3		dumpExecutor
		p	4		dumper
		p	5		resultConsumer
		p	6		dumpConsumer
	m	()V	a	end
	m	(Lban;)V	a	scheduleSaveResults
		p	1		result
	m	(Lbbt;)Ljava/util/List;	a	lambda$endTick$3
		p	0		s
	m	(Lbbv;Ljava/util/function/LongSupplier;Ljava/util/concurrent/Executor;Lbce;Ljava/util/function/Consumer;Ljava/util/function/Consumer;)Lbby;	a	createStarted
		p	0		source
		p	1		timeGetter
		p	2		dumpExecutor
		p	3		dumper
		p	4		resultConsumer
		p	5		dumpConsumer
	m	(Ljava/util/Collection;)V	a	cleanup
		p	1		samplers
	m	(Ljava/util/HashSet;Lban;)V	a	lambda$scheduleSaveResults$5
	m	(Ljava/util/function/Consumer;)V	a	registerGlobalCompletionCallback
		p	0		consumer
	m	()V	b	cancel
	m	()V	c	startTick
	m	()V	d	endTick
	m	()Z	e	isRecording
	m	()Lbao;	f	getProfiler
	m	()V	g	verifyStarted
	m	()I	h	lambda$endTick$4
	m	()Lbam;	i	lambda$startTick$2
	m	()I	j	lambda$new$1
	m	()I	k	lambda$new$0
	f	I	a	PROFILING_MAX_DURATION_SECONDS
	f	Ljava/util/function/Consumer;	b	globalOnReportFinished
	f	Ljava/util/Map;	c	deviationsBySampler
	f	Lbai;	d	taskProfiler
	f	Ljava/util/concurrent/Executor;	e	ioExecutor
	f	Lbce;	f	metricsPersister
	f	Ljava/util/function/Consumer;	g	onProfilingEnd
	f	Ljava/util/function/Consumer;	h	onReportFinished
	f	Lbbv;	i	metricsSamplerProvider
	f	Ljava/util/function/LongSupplier;	j	wallTimeSource
	f	J	k	deadlineNano
	f	I	l	currentTick
	f	Lbam;	m	singleTickProfiler
	f	Z	n	killSwitch
	f	Ljava/util/Set;	o	thisTickSamplers
c	bbz	net/minecraft/util/profiling/metrics/profiling/InactiveMetricsRecorder
	m	()V	a	end
	m	()V	b	cancel
	m	()V	c	startTick
	m	()V	d	endTick
	m	()Z	e	isRecording
	m	()Lbao;	f	getProfiler
	f	Lbca;	a	INSTANCE
c	bca	net/minecraft/util/profiling/metrics/profiling/MetricsRecorder
	m	()V	a	end
	m	()V	b	cancel
	m	()V	c	startTick
	m	()V	d	endTick
	m	()Z	e	isRecording
	m	()Lbao;	f	getProfiler
c	bcb	net/minecraft/util/profiling/metrics/profiling/ProfilerSamplerAdapter
	m	(Ljava/util/function/Supplier;)Ljava/util/Set;	a	newSamplersFoundInProfiler
		p	1		profilerSupplier
	m	(Ljava/util/function/Supplier;Ljava/lang/String;)D	a	lambda$samplerForProfilingPath$2
	m	(Ljava/util/function/Supplier;Ljava/lang/String;Lbbs;)Lbbt;	a	samplerForProfilingPath
		p	0		profilerSupplier
		p	1		id
		p	2		type
	m	(Ljava/util/function/Supplier;Lorg/apache/commons/lang3/tuple/Pair;)Lbbt;	a	lambda$newSamplersFoundInProfiler$1
		p	1		target
	m	(Lorg/apache/commons/lang3/tuple/Pair;)Z	a	lambda$newSamplersFoundInProfiler$0
		p	1		target
	f	Ljava/util/Set;	a	previouslyFoundSamplerNames
c	bcc	net/minecraft/util/profiling/metrics/profiling/ServerMetricsSamplersProvider
	m	(Ljava/util/function/LongSupplier;Z)V	<init>	<init>
		p	1		nanoTimeSupplier
		p	2		includeSystem
	m	()Ljava/util/Set;	a	runtimeIndependentSamplers
	m	(Lbcc$a;I)Lbbt;	a	lambda$runtimeIndependentSamplers$1
		p	1		index
	m	(Lcom/google/common/base/Stopwatch;)D	a	lambda$tickTimeSampler$3
		p	0		watch
	m	(Ljava/util/function/LongSupplier;)Lbbt;	a	tickTimeSampler
		p	0		nanoTimeSupplier
	m	(Ljava/util/function/Supplier;)Ljava/util/Set;	a	samplers
		p	1		profilerSupplier
	m	()D	b	lambda$runtimeIndependentSamplers$2
	m	(Lbcc$a;I)D	b	lambda$runtimeIndependentSamplers$0
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/Set;	b	samplers
	f	Lbcb;	c	samplerFactory
c	bcc$1	net/minecraft/util/profiling/metrics/profiling/ServerMetricsSamplersProvider$1
	f	Ljava/util/function/LongSupplier;	a	val$timeSource
c	bcc$a	net/minecraft/util/profiling/metrics/profiling/ServerMetricsSamplersProvider$CpuStats
	m	(I)D	a	loadForCpu
		p	1		index
	f	I	a	nrOfCpus
	f	Loshi/SystemInfo;	b	systemInfo
	f	Loshi/hardware/CentralProcessor;	c	processor
	f	[[J	d	previousCpuLoadTick
	f	[D	e	currentLoad
	f	J	f	lastPollMs
c	bcd	net/minecraft/util/profiling/metrics/profiling/package-info
c	bce	net/minecraft/util/profiling/metrics/storage/MetricsPersister
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		type
	m	(I)[Ljava/lang/String;	a	lambda$saveCategory$2
	m	(ILbbt$b;)Ljava/lang/String;	a	lambda$saveCategory$1
		p	1		data
	m	(Lban;Ljava/nio/file/Path;)V	a	saveProfilingTaskExecutionResult
		p	1		result
		p	2		directory
	m	(Lbbs;Ljava/util/List;Ljava/nio/file/Path;)V	a	saveCategory
		p	1		type
		p	2		samplers
		p	3		directory
	m	(Ljava/nio/file/Path;Lbbs;Ljava/util/List;)V	a	lambda$saveMetrics$0
		p	2		type
		p	3		sampler
	m	(Ljava/time/format/DateTimeFormatter;Ljava/nio/file/Path;Lbbt;Lbcf;)V	a	lambda$saveDeviations$3
		p	3		deviation
	m	(Ljava/time/format/DateTimeFormatter;Ljava/nio/file/Path;Lbbt;Ljava/util/List;)V	a	lambda$saveDeviations$4
		p	2		sampler
		p	3		sampleDeviations
	m	(Ljava/util/Map;Ljava/nio/file/Path;)V	a	saveDeviations
		p	1		deviations
		p	2		deviationsDirectory
	m	(Ljava/util/Set;Ljava/nio/file/Path;)V	a	saveMetrics
		p	1		samplers
		p	2		directory
	m	(Ljava/util/Set;Ljava/util/Map;Lban;)Ljava/nio/file/Path;	a	saveReports
		p	1		samplers
		p	2		deviations
		p	3		result
	f	Ljava/nio/file/Path;	a	PROFILING_RESULTS_DIR
	f	Ljava/lang/String;	b	METRICS_DIR_NAME
	f	Ljava/lang/String;	c	DEVIATIONS_DIR_NAME
	f	Ljava/lang/String;	d	PROFILING_RESULT_FILENAME
	f	Lorg/slf4j/Logger;	e	LOGGER
	f	Ljava/lang/String;	f	rootFolderName
c	bcf	net/minecraft/util/profiling/metrics/storage/RecordedDeviation
	m	(Ljava/time/Instant;ILban;)V	<init>	<init>
		p	1		instant
		p	2		ticks
		p	3		result
	f	Ljava/time/Instant;	a	timestamp
	f	I	b	tick
	f	Lban;	c	profilerResultAtTick
c	bcg	net/minecraft/util/profiling/metrics/storage/package-info
c	bch	net/minecraft/util/profiling/package-info
c	bci	net/minecraft/util/random/SimpleWeightedRandomList
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		entries
	m	()Lbci$a;	a	builder
	m	(Lapo;)Ljava/util/Optional;	a	getRandomValue
		p	1		random
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	wrappedCodecAllowingEmpty
		p	0		dataCodec
	m	(Ljava/lang/Object;)Lbci;	a	single
		p	0		object
	m	()Lbci;	b	empty
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	b	wrappedCodec
		p	0		dataCodec
c	bci$a	net/minecraft/util/random/SimpleWeightedRandomList$Builder
	m	()Lbci;	a	build
	m	(Ljava/lang/Object;I)Lbci$a;	a	add
		p	1		object
		p	2		weight
	f	Lcom/google/common/collect/ImmutableList$Builder;	a	result
c	bcj	net/minecraft/util/random/Weight
	m	(I)V	<init>	<init>
		p	1		weight
	m	()I	a	asInt
	m	(I)Lbcj;	a	of
		p	0		weight
	m	(I)V	b	validateWeight
		p	0		weight
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lbcj;	b	ONE
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	I	d	value
c	bck	net/minecraft/util/random/WeightedEntry
	m	()Lbcj;	a	getWeight
	m	(Ljava/lang/Object;I)Lbck$b;	a	wrap
		p	0		data
		p	1		weight
c	bck$a	net/minecraft/util/random/WeightedEntry$IntrusiveBase
	m	(I)V	<init>	<init>
		p	1		weight
	m	(Lbcj;)V	<init>	<init>
		p	1		weight
	m	()Lbcj;	a	getWeight
	f	Lbcj;	a	weight
c	bck$b	net/minecraft/util/random/WeightedEntry$Wrapper
	m	(Ljava/lang/Object;Lbcj;)V	<init>	<init>
		p	1		data
		p	2		weight
	m	()Lbcj;	a	getWeight
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	codec
		p	0		dataCodec
	m	(Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$codec$0
		p	1		instance
	m	()Ljava/lang/Object;	b	getData
	f	Ljava/lang/Object;	a	data
	f	Lbcj;	b	weight
c	bcl	net/minecraft/util/random/WeightedRandom
	m	(Lapo;Ljava/util/List;)Ljava/util/Optional;	a	getRandomItem
		p	0		random
		p	1		pool
	m	(Lapo;Ljava/util/List;I)Ljava/util/Optional;	a	getRandomItem
		p	0		random
		p	1		pool
		p	2		totalWeight
	m	(Ljava/util/List;)I	a	getTotalWeight
		p	0		pool
	m	(Ljava/util/List;I)Ljava/util/Optional;	a	getWeightedItem
		p	0		pool
		p	1		totalWeight
c	bcm	net/minecraft/util/random/WeightedRandomList
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		entries
	m	(Ljava/util/List;)Lbcm;	a	create
		p	0		entries
	m	([Lbck;)Lbcm;	a	create
		p	0		entries
	m	(Lapo;)Ljava/util/Optional;	b	getRandom
		p	1		random
	m	()Lbcm;	c	create
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	c	codec
		p	0		entryCodec
	m	()Z	d	isEmpty
	m	()Ljava/util/List;	e	unwrap
	f	I	a	totalWeight
	f	Lcom/google/common/collect/ImmutableList;	b	items
c	bcn	net/minecraft/util/random/package-info
c	bco	net/minecraft/util/thread/BlockableEventLoop
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		name
	m	(Ljava/lang/Object;)V	a	tell
		p	1		message
	m	(Ljava/lang/Runnable;)Ljava/util/concurrent/CompletableFuture;	a	submitAsync
		p	1		runnable
	m	(Ljava/util/function/Supplier;)Ljava/util/concurrent/CompletableFuture;	a	submit
		p	1		task
	m	()Z	at	scheduleExecutables
	m	()Ljava/lang/Thread;	au	getRunningThread
	m	(Ljava/lang/Runnable;)Ljava/lang/Void;	b	lambda$submitAsync$0
	m	()Ljava/util/List;	bm	profiledMetrics
	m	()Z	bn	isSameThread
	m	()I	bo	getPendingTasksCount
	m	()Ljava/lang/String;	bp	name
	m	()V	bq	dropAllTasks
	m	()V	br	runAllTasks
	m	()V	bs	waitForTasks
	m	(Ljava/lang/Runnable;)V	c	executeIfPossible
		p	1		runnable
	m	(Ljava/util/function/BooleanSupplier;)V	c	managedBlock
		p	1		stopCondition
	m	(Ljava/lang/Runnable;)V	d	doRunTask
		p	1		task
	m	(Ljava/lang/Runnable;)Z	e	shouldRun
		p	1		task
	m	(Ljava/lang/Runnable;)Ljava/lang/Runnable;	f	wrapRunnable
		p	1		runnable
	m	(Ljava/lang/Runnable;)Ljava/util/concurrent/CompletableFuture;	g	submit
		p	1		task
	m	(Ljava/lang/Runnable;)V	h	executeBlocking
		p	1		runnable
	m	(Ljava/lang/Runnable;)V	i	tell
	m	()Z	x	pollTask
	f	Ljava/lang/String;	b	name
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	Ljava/util/Queue;	d	pendingRunnables
	f	I	e	blockingCount
c	bcp	net/minecraft/util/thread/NamedThreadFactory
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		name
	m	(Ljava/lang/Runnable;Ljava/lang/Thread;Ljava/lang/Throwable;)V	a	lambda$newThread$0
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/lang/ThreadGroup;	b	group
	f	Ljava/util/concurrent/atomic/AtomicInteger;	c	threadNumber
	f	Ljava/lang/String;	d	namePrefix
c	bcq	net/minecraft/util/thread/ProcessorHandle
	m	(Ljava/lang/Object;)V	a	tell
		p	1		message
	m	(Ljava/lang/String;Ljava/util/function/Consumer;)Lbcq;	a	of
		p	0		name
		p	1		action
	m	(Ljava/util/concurrent/CompletableFuture;Lcom/mojang/datafixers/util/Either;)V	a	lambda$askEither$0
	m	(Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;	b	ask
		p	1		messageProvider
	m	()Ljava/lang/String;	bp	name
	m	(Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;	c	askEither
		p	1		messageProvider
c	bcq$1	net/minecraft/util/thread/ProcessorHandle$1
	m	(Ljava/lang/Object;)V	a	tell
		p	1		message
	m	()Ljava/lang/String;	bp	name
	f	Ljava/lang/String;	a	val$name
	f	Ljava/util/function/Consumer;	b	val$tell
c	bcr	net/minecraft/util/thread/ProcessorMailbox
	m	(Lbct;Ljava/util/concurrent/Executor;Ljava/lang/String;)V	<init>	<init>
		p	1		queue
		p	2		executor
		p	3		name
	m	()V	a	runAll
	m	(I)Z	a	lambda$runAll$1
		p	0		runCount
	m	(Lit/unimi/dsi/fastutil/ints/Int2BooleanFunction;)I	a	pollUntil
		p	1		condition
	m	(Ljava/lang/Object;)V	a	tell
		p	1		message
	m	(Ljava/util/concurrent/Executor;Ljava/lang/String;)Lbcr;	a	create
		p	0		executor
		p	1		name
	m	()I	b	size
	m	(I)Z	b	lambda$run$0
		p	0		runCount
	m	()Ljava/util/List;	bm	profiledMetrics
	m	()Ljava/lang/String;	bp	name
	m	()Z	c	hasWork
	m	()Z	d	setAsScheduled
	m	()V	e	setAsIdle
	m	()Z	f	canBeScheduled
	m	()Z	g	shouldProcess
	m	()Z	h	pollTask
	m	()V	i	registerForExecution
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	I	b	CLOSED_BIT
	f	I	c	SCHEDULED_BIT
	f	Ljava/util/concurrent/atomic/AtomicInteger;	d	status
	f	Lbct;	e	queue
	f	Ljava/util/concurrent/Executor;	f	dispatcher
	f	Ljava/lang/String;	g	name
c	bcs	net/minecraft/util/thread/ReentrantBlockableEventLoop
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		name
	m	()Z	at	scheduleExecutables
	m	()Z	bt	runningTask
	m	(Ljava/lang/Runnable;)V	d	doRunTask
		p	1		task
	f	I	b	reentrantCount
c	bct	net/minecraft/util/thread/StrictQueue
	m	()Ljava/lang/Object;	a	pop
	m	(Ljava/lang/Object;)Z	a	push
		p	1		message
	m	()Z	b	isEmpty
	m	()I	c	size
c	bct$a	net/minecraft/util/thread/StrictQueue$FixedPriorityQueue
	m	(I)V	<init>	<init>
		p	1		priorityCount
	m	()Ljava/lang/Object;	a	pop
	m	(Lbct$b;)Z	a	push
		p	1		message
	m	(Ljava/lang/Object;)Z	a	push
		p	1		message
	m	()Z	b	isEmpty
	m	()I	c	size
	m	()Ljava/lang/Runnable;	d	pop
	f	[Ljava/util/Queue;	a	queues
	f	Ljava/util/concurrent/atomic/AtomicInteger;	b	size
c	bct$b	net/minecraft/util/thread/StrictQueue$IntRunnable
	m	(ILjava/lang/Runnable;)V	<init>	<init>
		p	1		priority
		p	2		runnable
	m	()I	a	getPriority
	f	I	a	priority
	f	Ljava/lang/Runnable;	b	task
c	bct$c	net/minecraft/util/thread/StrictQueue$QueueStrictQueue
	m	(Ljava/util/Queue;)V	<init>	<init>
		p	1		queue
	m	()Ljava/lang/Object;	a	pop
	m	(Ljava/lang/Object;)Z	a	push
		p	1		message
	m	()Z	b	isEmpty
	m	()I	c	size
	f	Ljava/util/Queue;	a	queue
c	bcu	net/minecraft/util/thread/package-info
c	bcv	net/minecraft/util/valueproviders/BiasedToBottomInt
	m	(II)V	<init>	<init>
		p	1		min
		p	2		max
	m	()I	a	getMinValue
	m	(II)Lbcv;	a	of
		p	0		min
		p	1		max
	m	(Lapo;)I	a	sample
		p	1		random
	m	(Lbcv;)Lcom/mojang/serialization/DataResult;	a	lambda$static$4
		p	0		provider
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	()I	b	getMaxValue
	m	(Lbcv;)Ljava/lang/String;	b	lambda$static$3
	m	()Lbde;	c	getType
	m	(Lbcv;)Ljava/lang/Integer;	c	lambda$static$1
		p	0		provider
	m	(Lbcv;)Ljava/lang/Integer;	d	lambda$static$0
		p	0		provider
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	minInclusive
	f	I	f	maxInclusive
c	bcw	net/minecraft/util/valueproviders/ClampedInt
	m	(Lbdd;II)V	<init>	<init>
		p	1		source
		p	2		min
		p	3		max
	m	()I	a	getMinValue
	m	(Lapo;)I	a	sample
		p	1		random
	m	(Lbcw;)Lcom/mojang/serialization/DataResult;	a	lambda$static$5
		p	0		provider
	m	(Lbdd;II)Lbcw;	a	of
		p	0		source
		p	1		min
		p	2		max
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	()I	b	getMaxValue
	m	(Lbcw;)Ljava/lang/String;	b	lambda$static$4
	m	()Lbde;	c	getType
	m	(Lbcw;)Ljava/lang/Integer;	c	lambda$static$2
		p	0		provider
	m	(Lbcw;)Ljava/lang/Integer;	d	lambda$static$1
		p	0		provider
	m	(Lbcw;)Lbdd;	e	lambda$static$0
		p	0		provider
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lbdd;	b	source
	f	I	f	minInclusive
	f	I	g	maxInclusive
c	bcx	net/minecraft/util/valueproviders/ClampedNormalFloat
	m	(FFFF)V	<init>	<init>
		p	1		mean
		p	2		deviation
		p	3		min
		p	4		max
	m	()F	a	getMinValue
	m	(FFFF)Lbcx;	a	of
		p	0		mean
		p	1		deviation
		p	2		min
		p	3		max
	m	(Lapo;)F	a	sample
		p	1		random
	m	(Lapo;FFFF)F	a	sample
		p	0		random
		p	1		mean
		p	2		deviation
		p	3		min
		p	4		max
	m	(Lbcx;)Lcom/mojang/serialization/DataResult;	a	lambda$static$6
		p	0		provider
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
		p	0		instance
	m	()F	b	getMaxValue
	m	(Lbcx;)Ljava/lang/String;	b	lambda$static$5
	m	()Lbdc;	c	getType
	m	(Lbcx;)Ljava/lang/Float;	c	lambda$static$3
		p	0		provider
	m	(Lbcx;)Ljava/lang/Float;	d	lambda$static$2
		p	0		provider
	m	(Lbcx;)Ljava/lang/Float;	e	lambda$static$1
		p	0		provider
	m	(Lbcx;)Ljava/lang/Float;	f	lambda$static$0
		p	0		provider
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	F	b	mean
	f	F	d	deviation
	f	F	e	min
	f	F	f	max
c	bcy	net/minecraft/util/valueproviders/ClampedNormalInt
	m	(FFII)V	<init>	<init>
		p	1		mean
		p	2		deviation
		p	3		min
		p	4		max
	m	()I	a	getMinValue
	m	(FFII)Lbcy;	a	of
		p	0		mean
		p	1		deviation
		p	2		min
		p	3		max
	m	(Lapo;)I	a	sample
		p	1		random
	m	(Lapo;FFFF)I	a	sample
		p	0		random
		p	1		mean
		p	2		deviation
		p	3		min
		p	4		max
	m	(Lbcy;)Lcom/mojang/serialization/DataResult;	a	lambda$static$6
		p	0		provider
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
		p	0		instance
	m	()I	b	getMaxValue
	m	(Lbcy;)Ljava/lang/String;	b	lambda$static$5
	m	()Lbde;	c	getType
	m	(Lbcy;)Ljava/lang/Integer;	c	lambda$static$3
		p	0		provider
	m	(Lbcy;)Ljava/lang/Integer;	d	lambda$static$2
		p	0		provider
	m	(Lbcy;)Ljava/lang/Float;	e	lambda$static$1
		p	0		provider
	m	(Lbcy;)Ljava/lang/Float;	f	lambda$static$0
		p	0		provider
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	F	b	mean
	f	F	f	deviation
	f	I	g	min_inclusive
	f	I	h	max_inclusive
c	bcz	net/minecraft/util/valueproviders/ConstantFloat
	m	(F)V	<init>	<init>
		p	1		value
	m	()F	a	getMinValue
	m	(F)Lbcz;	a	of
		p	0		value
	m	(Lapo;)F	a	sample
		p	1		random
	m	(Lbcz;)Lcom/mojang/datafixers/util/Either;	a	lambda$static$4
		p	0		provider
	m	(Lcom/mojang/datafixers/util/Either;)Lbcz;	a	lambda$static$3
		p	0		either
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	()F	b	getMaxValue
	m	(Lbcz;)Lbcz;	b	lambda$static$2
		p	0		provider
	m	()Lbdc;	c	getType
	m	(Lbcz;)Ljava/lang/Float;	c	lambda$static$0
		p	0		provider
	m	()F	d	getValue
	f	Lbcz;	a	ZERO
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	F	d	value
c	bda	net/minecraft/util/valueproviders/ConstantInt
	m	(I)V	<init>	<init>
		p	1		value
	m	()I	a	getMinValue
	m	(I)Lbda;	a	of
		p	0		value
	m	(Lapo;)I	a	sample
		p	1		random
	m	(Lbda;)Lcom/mojang/datafixers/util/Either;	a	lambda$static$4
		p	0		provider
	m	(Lcom/mojang/datafixers/util/Either;)Lbda;	a	lambda$static$3
		p	0		either
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	()I	b	getMaxValue
	m	(Lbda;)Lbda;	b	lambda$static$2
		p	0		provider
	m	()Lbde;	c	getType
	m	(Lbda;)Ljava/lang/Integer;	c	lambda$static$0
		p	0		provider
	m	()I	d	getValue
	f	Lbda;	a	ZERO
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	I	f	value
c	bdb	net/minecraft/util/valueproviders/FloatProvider
	m	()F	a	getMinValue
	m	(FF)Lcom/mojang/serialization/Codec;	a	codec
		p	0		min
		p	1		max
	m	(FFLbdb;)Lcom/mojang/serialization/DataResult;	a	lambda$codec$5
		p	2		provider
	m	(FLbdb;)Ljava/lang/String;	a	lambda$codec$4
	m	(Lbdb;)Lcom/mojang/datafixers/util/Either;	a	lambda$static$2
		p	0		provider
	m	(Lcom/mojang/datafixers/util/Either;)Lbdb;	a	lambda$static$1
		p	0		either
	m	()F	b	getMaxValue
	m	(FLbdb;)Ljava/lang/String;	b	lambda$codec$3
	m	(Lbdb;)Lbdb;	b	lambda$static$0
		p	0		provider
	m	()Lbdc;	c	getType
	f	Lcom/mojang/serialization/Codec;	a	CONSTANT_OR_DISPATCH_CODEC
	f	Lcom/mojang/serialization/Codec;	c	CODEC
c	bdc	net/minecraft/util/valueproviders/FloatProviderType
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	lambda$register$0
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lbdc;	a	register
		p	0		id
		p	1		codec
	f	Lbdc;	a	CONSTANT
	f	Lbdc;	b	UNIFORM
	f	Lbdc;	c	CLAMPED_NORMAL
	f	Lbdc;	d	TRAPEZOID
c	bdd	net/minecraft/util/valueproviders/IntProvider
	m	()I	a	getMinValue
	m	(IILbdd;)Lcom/mojang/serialization/DataResult;	a	lambda$codec$5
		p	2		provider
	m	(IILcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	codec
		p	0		min
		p	1		max
		p	2		providerCodec
	m	(ILbdd;)Ljava/lang/String;	a	lambda$codec$4
	m	(Lapo;)I	a	sample
		p	1		random
	m	(Lbdd;)Lcom/mojang/datafixers/util/Either;	a	lambda$static$2
		p	0		provider
	m	(Lcom/mojang/datafixers/util/Either;)Lbdd;	a	lambda$static$1
		p	0		either
	m	()I	b	getMaxValue
	m	(II)Lcom/mojang/serialization/Codec;	b	codec
		p	0		min
		p	1		max
	m	(ILbdd;)Ljava/lang/String;	b	lambda$codec$3
	m	(Lbdd;)Lbdd;	b	lambda$static$0
		p	0		provider
	m	()Lbde;	c	getType
	f	Lcom/mojang/serialization/Codec;	a	CONSTANT_OR_DISPATCH_CODEC
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Lcom/mojang/serialization/Codec;	d	NON_NEGATIVE_CODEC
	f	Lcom/mojang/serialization/Codec;	e	POSITIVE_CODEC
c	bde	net/minecraft/util/valueproviders/IntProviderType
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	lambda$register$0
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lbde;	a	register
		p	0		id
		p	1		codec
	f	Lbde;	a	CONSTANT
	f	Lbde;	b	UNIFORM
	f	Lbde;	c	BIASED_TO_BOTTOM
	f	Lbde;	d	CLAMPED
	f	Lbde;	e	WEIGHTED_LIST
	f	Lbde;	f	CLAMPED_NORMAL
c	bdf	net/minecraft/util/valueproviders/MultipliedFloats
	m	([Lbdg;)V	<init>	<init>
		p	1		multipliers
	m	(Lapo;)F	a	sample
		p	1		random
	f	[Lbdg;	a	values
c	bdg	net/minecraft/util/valueproviders/SampledFloat
	m	(Lapo;)F	a	sample
		p	1		random
c	bdh	net/minecraft/util/valueproviders/TrapezoidFloat
	m	(FFF)V	<init>	<init>
		p	1		min
		p	2		max
		p	3		plateau
	m	()F	a	getMinValue
	m	(FFF)Lbdh;	a	of
		p	0		min
		p	1		max
		p	2		plateau
	m	(Lapo;)F	a	sample
		p	1		random
	m	(Lbdh;)Lcom/mojang/serialization/DataResult;	a	lambda$static$6
		p	0		provider
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	()F	b	getMaxValue
	m	(Lbdh;)Ljava/lang/String;	b	lambda$static$5
	m	()Lbdc;	c	getType
	m	(Lbdh;)Ljava/lang/String;	c	lambda$static$4
	m	(Lbdh;)Ljava/lang/Float;	d	lambda$static$2
		p	0		provider
	m	(Lbdh;)Ljava/lang/Float;	e	lambda$static$1
		p	0		provider
	m	(Lbdh;)Ljava/lang/Float;	f	lambda$static$0
		p	0		provider
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	F	b	min
	f	F	d	max
	f	F	e	plateau
c	bdi	net/minecraft/util/valueproviders/UniformFloat
	m	(FF)V	<init>	<init>
		p	1		min
		p	2		max
	m	()F	a	getMinValue
	m	(Lapo;)F	a	sample
		p	1		random
	m	(Lbdi;)Lcom/mojang/serialization/DataResult;	a	lambda$static$4
		p	0		provider
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	()F	b	getMaxValue
	m	(FF)Lbdi;	b	of
		p	0		min
		p	1		max
	m	(Lbdi;)Ljava/lang/String;	b	lambda$static$3
	m	()Lbdc;	c	getType
	m	(Lbdi;)Ljava/lang/Float;	c	lambda$static$1
		p	0		provider
	m	(Lbdi;)Ljava/lang/Float;	d	lambda$static$0
		p	0		provider
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	F	b	minInclusive
	f	F	d	maxExclusive
c	bdj	net/minecraft/util/valueproviders/UniformInt
	m	(II)V	<init>	<init>
		p	1		min
		p	2		max
	m	()I	a	getMinValue
	m	(II)Lbdj;	a	of
		p	0		min
		p	1		max
	m	(Lapo;)I	a	sample
		p	1		random
	m	(Lbdj;)Lcom/mojang/serialization/DataResult;	a	lambda$static$4
		p	0		provider
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	()I	b	getMaxValue
	m	(Lbdj;)Ljava/lang/String;	b	lambda$static$3
	m	()Lbde;	c	getType
	m	(Lbdj;)Ljava/lang/Integer;	c	lambda$static$1
		p	0		provider
	m	(Lbdj;)Ljava/lang/Integer;	d	lambda$static$0
		p	0		provider
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	minInclusive
	f	I	f	maxInclusive
c	bdk	net/minecraft/util/valueproviders/WeightedListInt
	m	(Lbci;)V	<init>	<init>
		p	1		weightedList
	m	()I	a	getMinValue
	m	(Lapo;)I	a	sample
		p	1		random
	m	(Lbdk;)Lbci;	a	lambda$static$0
		p	0		provider
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	()I	b	getMaxValue
	m	()Lbde;	c	getType
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lbci;	b	distribution
	f	I	f	minValue
	f	I	g	maxValue
c	bdl	net/minecraft/util/valueproviders/package-info
c	bdm	net/minecraft/util/worldupdate/WorldUpgrader
	m	(Ldye$c;Lcom/mojang/datafixers/DataFixer;Lhq;Z)V	<init>	<init>
		p	1		session
		p	2		dataFixer
		p	3		dimensionOptionsRegistry
		p	4		eraseCache
	m	()V	a	cancel
	m	(Ladc;)F	a	dimensionProgress
		p	1		world
	m	(Ljava/io/File;Ljava/lang/String;)Z	a	lambda$getAllChunkPos$2
		p	0		directory
		p	1		name
	m	(Ljava/lang/Thread;Ljava/lang/Throwable;)V	a	lambda$new$0
		p	1		thread
		p	2		throwable
	m	()Z	b	isFinished
	m	(Ladc;)Ljava/util/List;	b	getAllChunkPos
		p	1		world
	m	()Ljava/util/Set;	c	levels
	m	()F	d	getProgress
	m	()I	e	getTotalChunks
	m	()I	f	getConverted
	m	()I	g	getSkipped
	m	()Ltj;	h	getStatus
	m	()V	i	work
	m	()Ldya;	j	lambda$work$1
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/concurrent/ThreadFactory;	b	THREAD_FACTORY
	f	Lhq;	c	dimensions
	f	Ljava/util/Set;	d	levels
	f	Z	e	eraseCache
	f	Ldye$c;	f	levelStorage
	f	Ljava/lang/Thread;	g	thread
	f	Lcom/mojang/datafixers/DataFixer;	h	dataFixer
	f	Z	i	running
	f	Z	j	finished
	f	F	k	progress
	f	I	l	totalChunks
	f	I	m	converted
	f	I	n	skipped
	f	Lit/unimi/dsi/fastutil/objects/Object2FloatMap;	o	progressMap
	f	Ltj;	p	status
	f	Ljava/util/regex/Pattern;	q	REGEX
	f	Ldya;	r	overworldDataStorage
c	bdn	net/minecraft/util/worldupdate/package-info
c	bdo	net/minecraft/world/BossEvent
	m	(Ljava/util/UUID;Ltj;Lbdo$a;Lbdo$b;)V	<init>	<init>
		p	1		uuid
		p	2		name
		p	3		color
		p	4		style
	m	(F)V	a	setProgress
		p	1		percent
	m	(Lbdo$a;)V	a	setColor
		p	1		color
	m	(Lbdo$b;)V	a	setOverlay
		p	1		style
	m	(Ltj;)V	a	setName
		p	1		name
	m	(Z)Lbdo;	a	setDarkenScreen
		p	1		darkenSky
	m	(Z)Lbdo;	b	setPlayBossMusic
		p	1		dragonMusic
	m	(Z)Lbdo;	c	setCreateWorldFog
		p	1		thickenFog
	m	()Ljava/util/UUID;	i	getId
	m	()Ltj;	j	getName
	m	()F	k	getProgress
	m	()Lbdo$a;	l	getColor
	m	()Lbdo$b;	m	getOverlay
	m	()Z	n	shouldDarkenScreen
	m	()Z	o	shouldPlayBossMusic
	m	()Z	p	shouldCreateWorldFog
	f	Ltj;	a	name
	f	F	b	progress
	f	Lbdo$a;	c	color
	f	Lbdo$b;	d	overlay
	f	Z	e	darkenScreen
	f	Z	f	playBossMusic
	f	Z	g	createWorldFog
	f	Ljava/util/UUID;	h	id
c	bdo$a	net/minecraft/world/BossEvent$BossBarColor
	m	(Ljava/lang/String;ILjava/lang/String;Ln;)V	<init>	<init>
		p	3		name
		p	4		format
	m	()Ln;	a	getFormatting
	m	(Ljava/lang/String;)Lbdo$a;	a	byName
		p	0		name
	m	()Ljava/lang/String;	b	getName
	m	()[Lbdo$a;	c	$values
	f	Lbdo$a;	a	PINK
	f	Lbdo$a;	b	BLUE
	f	Lbdo$a;	c	RED
	f	Lbdo$a;	d	GREEN
	f	Lbdo$a;	e	YELLOW
	f	Lbdo$a;	f	PURPLE
	f	Lbdo$a;	g	WHITE
	f	Ljava/lang/String;	h	name
	f	Ln;	i	formatting
	f	[Lbdo$a;	j	$VALUES
c	bdo$b	net/minecraft/world/BossEvent$BossBarOverlay
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/lang/String;)Lbdo$b;	a	byName
		p	0		name
	m	()[Lbdo$b;	b	$values
	f	Lbdo$b;	a	PROGRESS
	f	Lbdo$b;	b	NOTCHED_6
	f	Lbdo$b;	c	NOTCHED_10
	f	Lbdo$b;	d	NOTCHED_12
	f	Lbdo$b;	e	NOTCHED_20
	f	Ljava/lang/String;	f	name
	f	[Lbdo$b;	g	$VALUES
c	bdp	net/minecraft/world/Clearable
	m	()V	a	clearContent
	m	(Ljava/lang/Object;)V	a_	tryClear
		p	0		o
c	bdq	net/minecraft/world/CompoundContainer
	m	(Lbdr;Lbdr;)V	<init>	<init>
		p	1		first
		p	2		second
	m	()V	a	clearContent
	m	(I)Lcfv;	a	getItem
		p	1		slot
	m	(II)Lcfv;	a	removeItem
		p	1		slot
		p	2		amount
	m	(ILcfv;)V	a	setItem
		p	1		slot
		p	2		stack
	m	(Lbdr;)Z	a	contains
		p	1		inventory
	m	(Lbym;)Z	a	stillValid
		p	1		player
	m	()Z	aa_	isEmpty
	m	()I	ab_	getMaxStackSize
	m	()I	b	getContainerSize
	m	(I)Lcfv;	b	removeItemNoUpdate
		p	1		slot
	m	(ILcfv;)Z	b	canPlaceItem
		p	1		slot
		p	2		stack
	m	(Lbym;)V	c	stopOpen
		p	1		player
	m	(Lbym;)V	d_	startOpen
		p	1		player
	m	()V	e	setChanged
	f	Lbdr;	c	container1
	f	Lbdr;	d	container2
c	bdr	net/minecraft/world/Container
	m	(I)Lcfv;	a	getItem
		p	1		slot
	m	(II)Lcfv;	a	removeItem
		p	1		slot
		p	2		amount
	m	(ILcfv;)V	a	setItem
		p	1		slot
		p	2		stack
	m	(Lbdr;ILcfv;)Z	a	canTakeItem
		p	1		hopperInventory
		p	2		slot
		p	3		stack
	m	(Lbym;)Z	a	stillValid
		p	1		player
	m	(Lcze;Lbym;)Z	a	stillValidBlockEntity
		p	0		blockEntity
		p	1		player
	m	(Lcze;Lbym;I)Z	a	stillValidBlockEntity
		p	0		blockEntity
		p	1		player
		p	2		range
	m	(Ljava/util/Set;)Z	a	hasAnyOf
		p	1		items
	m	(Ljava/util/Set;Lcfv;)Z	a	lambda$hasAnyOf$0
		p	1		stack
	m	(Lcfq;)I	a_	countItem
		p	1		item
	m	(Ljava/util/function/Predicate;)Z	a_	hasAnyMatching
		p	1		predicate
	m	()Z	aa_	isEmpty
	m	()I	ab_	getMaxStackSize
	m	()I	b	getContainerSize
	m	(I)Lcfv;	b	removeItemNoUpdate
		p	1		slot
	m	(ILcfv;)Z	b	canPlaceItem
		p	1		slot
		p	2		stack
	m	(Lbym;)V	c	stopOpen
		p	1		player
	m	(Lbym;)V	d_	startOpen
		p	1		player
	m	()V	e	setChanged
	f	I	k_	LARGE_MAX_STACK_SIZE
	f	I	l_	DEFAULT_DISTANCE_LIMIT
c	bds	net/minecraft/world/ContainerHelper
	m	(Lbdr;Ljava/util/function/Predicate;IZ)I	a	clearOrCountMatchingItems
		p	0		inventory
		p	1		shouldRemove
		p	2		maxCount
		p	3		dryRun
	m	(Lcfv;Ljava/util/function/Predicate;IZ)I	a	clearOrCountMatchingItems
		p	0		stack
		p	1		shouldRemove
		p	2		maxCount
		p	3		dryRun
	m	(Ljava/util/List;I)Lcfv;	a	takeItem
		p	0		stacks
		p	1		slot
	m	(Ljava/util/List;II)Lcfv;	a	removeItem
		p	0		stacks
		p	1		slot
		p	2		amount
	m	(Lre;Lhm;)Lre;	a	saveAllItems
		p	0		nbt
		p	1		stacks
	m	(Lre;Lhm;Z)Lre;	a	saveAllItems
		p	0		nbt
		p	1		stacks
		p	2		setIfEmpty
	m	(Lre;Lhm;)V	b	loadAllItems
		p	0		nbt
		p	1		stacks
c	bdt	net/minecraft/world/ContainerListener
	m	(Lbdr;)V	a	containerChanged
		p	1		sender
c	bdu	net/minecraft/world/Containers
	m	(Lcmi;DDDLbdr;)V	a	dropContents
		p	0		world
		p	1		x
		p	3		y
		p	5		z
		p	7		inventory
	m	(Lcmi;DDDLcfv;)V	a	dropItemStack
		p	0		world
		p	1		x
		p	3		y
		p	5		z
		p	7		stack
	m	(Lcmi;Lbfh;Lbdr;)V	a	dropContents
		p	0		world
		p	1		entity
		p	2		inventory
	m	(Lcmi;Lgt;Lbdr;)V	a	dropContents
		p	0		world
		p	1		pos
		p	2		inventory
	m	(Lcmi;Lgt;Lcfv;)V	a	lambda$dropContents$0
		p	2		stack
	m	(Lcmi;Lgt;Lhm;)V	a	dropContents
		p	0		world
		p	1		pos
		p	2		stacks
c	bdv	net/minecraft/world/Difficulty
	m	(Ljava/lang/String;IILjava/lang/String;)V	<init>	<init>
		p	3		id
		p	4		name
	m	()I	a	getId
	m	(I)Lbdv;	a	byId
		p	0		id
	m	(Ljava/lang/String;)Lbdv;	a	byName
		p	0		name
	m	()Ltj;	b	getDisplayName
	m	()Ljava/lang/String;	c	getSerializedName
	m	()Ltj;	d	getInfo
	m	()Ljava/lang/String;	e	getKey
	m	()[Lbdv;	f	$values
	f	Lbdv;	a	PEACEFUL
	f	Lbdv;	b	EASY
	f	Lbdv;	c	NORMAL
	f	Lbdv;	d	HARD
	f	Laqa$a;	e	CODEC
	f	Ljava/util/function/IntFunction;	f	BY_ID
	f	I	g	id
	f	Ljava/lang/String;	h	key
	f	[Lbdv;	i	$VALUES
c	bdw	net/minecraft/world/DifficultyInstance
	m	(Lbdv;JJF)V	<init>	<init>
		p	1		difficulty
		p	2		timeOfDay
		p	4		inhabitedTime
		p	6		moonSize
	m	()Lbdv;	a	getDifficulty
	m	(F)Z	a	isHarderThan
		p	1		difficulty
	m	(Lbdv;JJF)F	a	calculateDifficulty
		p	1		difficulty
		p	2		timeOfDay
		p	4		inhabitedTime
		p	6		moonSize
	m	()F	b	getEffectiveDifficulty
	m	()Z	c	isHard
	m	()F	d	getSpecialMultiplier
	f	F	a	DIFFICULTY_TIME_GLOBAL_OFFSET
	f	F	b	MAX_DIFFICULTY_TIME_GLOBAL
	f	F	c	MAX_DIFFICULTY_TIME_LOCAL
	f	Lbdv;	d	base
	f	F	e	effectiveDifficulty
c	bdx	net/minecraft/world/InteractionHand
	m	()[Lbdx;	a	$values
	f	Lbdx;	a	MAIN_HAND
	f	Lbdx;	b	OFF_HAND
	f	[Lbdx;	c	$VALUES
c	bdy	net/minecraft/world/InteractionResult
	m	()Z	a	consumesAction
	m	(Z)Lbdy;	a	sidedSuccess
		p	0		swingHand
	m	()Z	b	shouldSwing
	m	()Z	c	shouldAwardStats
	m	()[Lbdy;	d	$values
	f	Lbdy;	a	SUCCESS
	f	Lbdy;	b	CONSUME
	f	Lbdy;	c	CONSUME_PARTIAL
	f	Lbdy;	d	PASS
	f	Lbdy;	e	FAIL
	f	[Lbdy;	f	$VALUES
c	bdz	net/minecraft/world/InteractionResultHolder
	m	(Lbdy;Ljava/lang/Object;)V	<init>	<init>
		p	1		result
		p	2		value
	m	()Lbdy;	a	getResult
	m	(Ljava/lang/Object;)Lbdz;	a	success
		p	0		data
	m	(Ljava/lang/Object;Z)Lbdz;	a	sidedSuccess
		p	0		data
		p	1		swingHand
	m	()Ljava/lang/Object;	b	getObject
	m	(Ljava/lang/Object;)Lbdz;	b	consume
		p	0		data
	m	(Ljava/lang/Object;)Lbdz;	c	pass
		p	0		data
	m	(Ljava/lang/Object;)Lbdz;	d	fail
		p	0		data
	f	Lbdy;	a	result
	f	Ljava/lang/Object;	b	object
c	bea	net/minecraft/world/LockCode
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		key
	m	(Lcfv;)Z	a	unlocksWith
		p	1		stack
	m	(Lre;)V	a	addToTag
		p	1		nbt
	m	(Lre;)Lbea;	b	fromTag
		p	0		nbt
	f	Lbea;	a	NO_LOCK
	f	Ljava/lang/String;	b	TAG_LOCK
	f	Ljava/lang/String;	c	key
c	beb	net/minecraft/world/MenuProvider
	m	()Ltj;	G_	getDisplayName
c	bec	net/minecraft/world/Nameable
	m	()Ltj;	G_	getDisplayName
	m	()Ltj;	Z	getName
	m	()Z	aa	hasCustomName
	m	()Ltj;	ab	getCustomName
c	bed	net/minecraft/world/SimpleContainer
	m	(I)V	<init>	<init>
		p	1		size
	m	([Lcfv;)V	<init>	<init>
		p	1		items
	m	()V	a	clearContent
	m	(I)Lcfv;	a	getItem
		p	1		slot
	m	(II)Lcfv;	a	removeItem
		p	1		slot
		p	2		amount
	m	(ILcfv;)V	a	setItem
		p	1		slot
		p	2		stack
	m	(Lbdt;)V	a	addListener
		p	1		listener
	m	(Lbym;)Z	a	stillValid
		p	1		player
	m	(Lbyq;)V	a	fillStackedContents
		p	1		finder
	m	(Lcfq;I)Lcfv;	a	removeItemType
		p	1		item
		p	2		count
	m	(Lcfv;)Lcfv;	a	addItem
		p	1		stack
	m	(Lcfv;Lcfv;)V	a	moveItemsBetweenStacks
		p	1		source
		p	2		target
	m	(Lrk;)V	a	fromTag
		p	1		nbtList
	m	()Z	aa_	isEmpty
	m	()I	b	getContainerSize
	m	(I)Lcfv;	b	removeItemNoUpdate
		p	1		slot
	m	(Lbdt;)V	b	removeListener
		p	1		listener
	m	(Lcfv;)Z	b	canAddItem
		p	1		stack
	m	(Lcfv;)V	c	moveItemToEmptySlots
		p	1		stack
	m	(Lcfv;)V	d	moveItemToOccupiedSlotsWithSameType
		p	1		stack
	m	()V	e	setChanged
	m	(Lcfv;)Z	e	lambda$toString$1
		p	0		stack
	m	()Ljava/util/List;	f	removeAllItems
	m	(Lcfv;)Z	f	lambda$removeAllItems$0
		p	0		stack
	m	()Lrk;	g	createTag
	f	I	c	size
	f	Lhm;	d	items
	f	Ljava/util/List;	e	listeners
c	bee	net/minecraft/world/SimpleMenuProvider
	m	(Lcci;Ltj;)V	<init>	<init>
		p	1		baseFactory
		p	2		name
	m	()Ltj;	G_	getDisplayName
	m	(ILbyl;Lbym;)Lcbd;	createMenu	createMenu
		p	1		syncId
		p	2		playerInventory
		p	3		player
	f	Ltj;	a	title
	f	Lcci;	b	menuConstructor
c	bef	net/minecraft/world/WorldlyContainer
	m	(ILcfv;Lgz;)Z	a	canPlaceItemThroughFace
		p	1		slot
		p	2		stack
		p	3		dir
	m	(Lgz;)[I	a	getSlotsForFace
		p	1		side
	m	(ILcfv;Lgz;)Z	b	canTakeItemThroughFace
		p	1		slot
		p	2		stack
		p	3		dir
c	beg	net/minecraft/world/WorldlyContainerHolder
	m	(Ldbq;Lcmj;Lgt;)Lbef;	a	getContainer
		p	1		state
		p	2		world
		p	3		pos
c	beh	net/minecraft/world/damagesource/CombatEntry
	m	(Lbem;IFFLjava/lang/String;F)V	<init>	<init>
		p	1		damageSource
		p	2		entityAge
		p	3		entityOriginalHealth
		p	4		damage
		p	5		fallDeathSuffix
		p	6		fallDistance
	m	()Lbem;	a	getSource
	m	()I	b	getTime
	m	()F	c	getDamage
	m	()F	d	getHealthBeforeDamage
	m	()F	e	getHealthAfterDamage
	m	()Z	f	isCombatRelated
	m	()Ljava/lang/String;	g	getLocation
	m	()Ltj;	h	getAttackerName
	m	()Lbfh;	i	getAttacker
	m	()F	j	getFallDistance
	f	Lbem;	a	source
	f	I	b	time
	f	F	c	damage
	f	F	d	health
	f	Ljava/lang/String;	e	location
	f	F	f	fallDistance
c	bei	net/minecraft/world/damagesource/CombatRules
	m	(FF)F	a	getDamageAfterMagicAbsorb
		p	0		damageDealt
		p	1		protection
	m	(FFF)F	a	getDamageAfterAbsorb
		p	0		damage
		p	1		armor
		p	2		armorToughness
	f	F	a	MAX_ARMOR
	f	F	b	ARMOR_PROTECTION_DIVIDER
	f	F	c	BASE_ARMOR_TOUGHNESS
	f	F	d	MIN_ARMOR_RATIO
	f	I	e	NUM_ARMOR_ITEMS
c	bej	net/minecraft/world/damagesource/CombatTracker
	m	(Lbfx;)V	<init>	<init>
		p	1		entity
	m	()V	a	prepareForDamage
	m	(Lbeh;)Ljava/lang/String;	a	getFallLocation
		p	1		damageRecord
	m	(Lbem;FF)V	a	recordDamage
		p	1		damageSource
		p	2		originalHealth
		p	3		damage
	m	()Ltj;	b	getDeathMessage
	m	()Lbfx;	c	getKiller
	m	()Z	d	isTakingDamage
	m	()Z	e	isInCombat
	m	()I	f	getCombatDuration
	m	()V	g	recheckStatus
	m	()Lbfx;	h	getMob
	m	()Lbeh;	i	getLastEntry
	m	()I	j	getKillerId
	m	()Lbeh;	k	getMostSignificantFall
	m	()V	l	resetPreparedStatus
	f	I	a	RESET_DAMAGE_STATUS_TIME
	f	I	b	RESET_COMBAT_STATUS_TIME
	f	Luf;	c	INTENTIONAL_GAME_DESIGN_STYLE
	f	Ljava/util/List;	d	entries
	f	Lbfx;	e	mob
	f	I	f	lastDamageTime
	f	I	g	combatStartTime
	f	I	h	combatEndTime
	f	Z	i	inCombat
	f	Z	j	takingDamage
	f	Ljava/lang/String;	k	nextLocation
c	bek	net/minecraft/world/damagesource/DamageEffects
	m	(Ljava/lang/String;ILjava/lang/String;Lamq;)V	<init>	<init>
		p	3		id
		p	4		sound
	m	()Lamq;	a	sound
	m	()[Lbek;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lbek;	a	HURT
	f	Lbek;	b	THORNS
	f	Lbek;	c	DROWNING
	f	Lbek;	d	BURNING
	f	Lbek;	e	POKING
	f	Lbek;	f	FREEZING
	f	Lcom/mojang/serialization/Codec;	g	CODEC
	f	Ljava/lang/String;	h	id
	f	Lamq;	i	sound
	f	[Lbek;	j	$VALUES
c	bel	net/minecraft/world/damagesource/DamageScaling
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		id
	m	()[Lbel;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lbel;	a	NEVER
	f	Lbel;	b	WHEN_CAUSED_BY_LIVING_NON_PLAYER
	f	Lbel;	c	ALWAYS
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	Ljava/lang/String;	e	id
	f	[Lbel;	f	$VALUES
c	bem	net/minecraft/world/damagesource/DamageSource
	m	(Lhd;)V	<init>	<init>
		p	1		type
	m	(Lhd;Lbfh;)V	<init>	<init>
		p	1		type
		p	2		attacker
	m	(Lhd;Lbfh;Lbfh;)V	<init>	<init>
		p	1		type
		p	2		source
		p	3		attacker
	m	(Lhd;Lbfh;Lbfh;Lede;)V	<init>	<init>
		p	1		type
		p	2		source
		p	3		attacker
		p	4		position
	m	(Lhd;Lede;)V	<init>	<init>
		p	1		type
		p	2		position
	m	()F	a	getFoodExhaustion
	m	(Ladc;)Z	a	is
		p	1		typeKey
	m	(Lanv;)Z	a	is
		p	1		tag
	m	(Lbfx;)Ltj;	a	getLocalizedDeathMessage
		p	1		killed
	m	()Z	b	isIndirect
	m	()Lbfh;	c	getDirectEntity
	m	()Lbfh;	d	getEntity
	m	()Ljava/lang/String;	e	getMsgId
	m	()Z	f	scalesWithDifficulty
	m	()Z	g	isCreativePlayer
	m	()Lede;	h	getSourcePosition
	m	()Lede;	i	sourcePositionRaw
	m	()Lbeo;	j	type
	m	()Lhd;	k	typeHolder
	f	Lhd;	a	type
	f	Lbfh;	b	causingEntity
	f	Lbfh;	c	directEntity
	f	Lede;	d	damageSourcePosition
c	bem$1	net/minecraft/world/damagesource/DamageSource$1
	f	[I	a	$SwitchMap$net$minecraft$world$damagesource$DamageScaling
c	ben	net/minecraft/world/damagesource/DamageSources
	m	(Lhr;)V	<init>	<init>
		p	1		registryManager
	m	()Lbem;	a	inFire
	m	(Ladc;)Lbem;	a	source
		p	1		key
	m	(Ladc;Lbfh;)Lbem;	a	source
		p	1		key
		p	2		attacker
	m	(Ladc;Lbfh;Lbfh;)Lbem;	a	source
		p	1		key
		p	2		source
		p	3		attacker
	m	(Lbfh;)Lbem;	a	fallingBlock
		p	1		attacker
	m	(Lbfh;Lbfh;)Lbem;	a	trident
		p	1		source
		p	2		attacker
	m	(Lbfh;Lbfx;)Lbem;	a	mobProjectile
		p	1		source
		p	2		attacker
	m	(Lbfx;)Lbem;	a	sting
		p	1		attacker
	m	(Lbym;)Lbem;	a	playerAttack
		p	1		attacker
	m	(Lbys;Lbfh;)Lbem;	a	arrow
		p	1		source
		p	2		attacker
	m	(Lbyy;Lbfh;)Lbem;	a	fireball
		p	1		source
		p	2		attacker
	m	(Lbyz;Lbfh;)Lbem;	a	fireworks
		p	1		source
		p	2		attacker
	m	(Lbzr;Lbfh;)Lbem;	a	witherSkull
		p	1		source
		p	2		attacker
	m	(Lcma;)Lbem;	a	explosion
		p	1		explosion
	m	(Lede;)Lbem;	a	badRespawnPointExplosion
		p	1		position
	m	()Lbem;	b	lightningBolt
	m	(Lbfh;)Lbem;	b	anvil
		p	1		attacker
	m	(Lbfh;Lbfh;)Lbem;	b	thrown
		p	1		source
		p	2		attacker
	m	(Lbfx;)Lbem;	b	mobAttack
		p	1		attacker
	m	()Lbem;	c	onFire
	m	(Lbfh;)Lbem;	c	fallingStalactite
		p	1		attacker
	m	(Lbfh;Lbfh;)Lbem;	c	indirectMagic
		p	1		source
		p	2		attacker
	m	(Lbfx;)Lbem;	c	noAggroMobAttack
		p	1		attacker
	m	()Lbem;	d	lava
	m	(Lbfh;)Lbem;	d	thorns
		p	1		attacker
	m	(Lbfh;Lbfh;)Lbem;	d	explosion
		p	1		source
		p	2		attacker
	m	()Lbem;	e	hotFloor
	m	(Lbfh;)Lbem;	e	sonicBoom
		p	1		attacker
	m	()Lbem;	f	inWall
	m	()Lbem;	g	cramming
	m	()Lbem;	h	drown
	m	()Lbem;	i	starve
	m	()Lbem;	j	cactus
	m	()Lbem;	k	fall
	m	()Lbem;	l	flyIntoWall
	m	()Lbem;	m	outOfWorld
	m	()Lbem;	n	generic
	m	()Lbem;	o	magic
	m	()Lbem;	p	wither
	m	()Lbem;	q	dragonBreath
	m	()Lbem;	r	dryOut
	m	()Lbem;	s	sweetBerryBush
	m	()Lbem;	t	freeze
	m	()Lbem;	u	stalagmite
	f	Lhq;	a	damageTypes
	f	Lbem;	b	inFire
	f	Lbem;	c	lightningBolt
	f	Lbem;	d	onFire
	f	Lbem;	e	lava
	f	Lbem;	f	hotFloor
	f	Lbem;	g	inWall
	f	Lbem;	h	cramming
	f	Lbem;	i	drown
	f	Lbem;	j	starve
	f	Lbem;	k	cactus
	f	Lbem;	l	fall
	f	Lbem;	m	flyIntoWall
	f	Lbem;	n	outOfWorld
	f	Lbem;	o	generic
	f	Lbem;	p	magic
	f	Lbem;	q	wither
	f	Lbem;	r	dragonBreath
	f	Lbem;	s	dryOut
	f	Lbem;	t	sweetBerryBush
	f	Lbem;	u	freeze
	f	Lbem;	v	stalagmite
c	beo	net/minecraft/world/damagesource/DamageType
	m	(Ljava/lang/String;F)V	<init>	<init>
		p	1		msgId
		p	2		exhaustion
	m	(Ljava/lang/String;FLbek;)V	<init>	<init>
		p	1		msgId
		p	2		exhaustion
		p	3		effects
	m	(Ljava/lang/String;Lbel;F)V	<init>	<init>
		p	1		msgId
		p	2		scaling
		p	3		exhaustion
	m	(Ljava/lang/String;Lbel;FLbek;)V	<init>	<init>
		p	1		msgId
		p	2		scaling
		p	3		exhaustion
		p	4		effects
	m	()Ljava/lang/String;	a	msgId
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Lbel;	b	scaling
	m	()F	c	exhaustion
	m	()Lbek;	d	effects
	m	()Lbeq;	e	deathMessageType
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/lang/String;	b	msgId
	f	Lbel;	c	scaling
	f	F	d	exhaustion
	f	Lbek;	e	effects
	f	Lbeq;	f	deathMessageType
c	bep	net/minecraft/world/damagesource/DamageTypes
	m	(Loa;)V	a	bootstrap
		p	0		damageTypeRegisterable
	f	Ladc;	A	MOB_ATTACK_NO_AGGRO
	f	Ladc;	B	PLAYER_ATTACK
	f	Ladc;	C	ARROW
	f	Ladc;	D	TRIDENT
	f	Ladc;	E	MOB_PROJECTILE
	f	Ladc;	F	FIREWORKS
	f	Ladc;	G	FIREBALL
	f	Ladc;	H	UNATTRIBUTED_FIREBALL
	f	Ladc;	I	WITHER_SKULL
	f	Ladc;	J	THROWN
	f	Ladc;	K	INDIRECT_MAGIC
	f	Ladc;	L	THORNS
	f	Ladc;	M	EXPLOSION
	f	Ladc;	N	PLAYER_EXPLOSION
	f	Ladc;	O	SONIC_BOOM
	f	Ladc;	P	BAD_RESPAWN_POINT
	f	Ladc;	a	IN_FIRE
	f	Ladc;	b	LIGHTNING_BOLT
	f	Ladc;	c	ON_FIRE
	f	Ladc;	d	LAVA
	f	Ladc;	e	HOT_FLOOR
	f	Ladc;	f	IN_WALL
	f	Ladc;	g	CRAMMING
	f	Ladc;	h	DROWN
	f	Ladc;	i	STARVE
	f	Ladc;	j	CACTUS
	f	Ladc;	k	FALL
	f	Ladc;	l	FLY_INTO_WALL
	f	Ladc;	m	OUT_OF_WORLD
	f	Ladc;	n	GENERIC
	f	Ladc;	o	MAGIC
	f	Ladc;	p	WITHER
	f	Ladc;	q	DRAGON_BREATH
	f	Ladc;	r	DRY_OUT
	f	Ladc;	s	SWEET_BERRY_BUSH
	f	Ladc;	t	FREEZE
	f	Ladc;	u	STALAGMITE
	f	Ladc;	v	FALLING_BLOCK
	f	Ladc;	w	FALLING_ANVIL
	f	Ladc;	x	FALLING_STALACTITE
	f	Ladc;	y	STING
	f	Ladc;	z	MOB_ATTACK
c	beq	net/minecraft/world/damagesource/DeathMessageType
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		id
	m	()[Lbeq;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lbeq;	a	DEFAULT
	f	Lbeq;	b	FALL_VARIANTS
	f	Lbeq;	c	INTENTIONAL_GAME_DESIGN
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	Ljava/lang/String;	e	id
	f	[Lbeq;	f	$VALUES
c	ber	net/minecraft/world/damagesource/package-info
c	bes	net/minecraft/world/effect/AbsoptionMobEffect
	m	(Lbex;I)V	<init>	<init>
		p	1		category
		p	2		color
	m	(Lbfx;Lbhb;I)V	a	removeAttributeModifiers
		p	1		entity
		p	2		attributes
		p	3		amplifier
	m	(Lbfx;Lbhb;I)V	b	addAttributeModifiers
		p	1		entity
		p	2		attributes
		p	3		amplifier
c	bet	net/minecraft/world/effect/AttackDamageMobEffect
	m	(Lbex;ID)V	<init>	<init>
		p	1		category
		p	2		color
		p	3		modifier
	m	(ILbhc;)D	a	getAttributeModifierValue
		p	1		amplifier
		p	2		modifier
	f	D	a	multiplier
c	beu	net/minecraft/world/effect/HealthBoostMobEffect
	m	(Lbex;I)V	<init>	<init>
		p	1		category
		p	2		color
	m	(Lbfx;Lbhb;I)V	a	removeAttributeModifiers
		p	1		entity
		p	2		attributes
		p	3		amplifier
c	bev	net/minecraft/world/effect/InstantenousMobEffect
	m	(Lbex;I)V	<init>	<init>
		p	1		category
		p	2		color
	m	()Z	a	isInstantenous
	m	(II)Z	a	isDurationEffectTick
		p	1		duration
		p	2		amplifier
c	bew	net/minecraft/world/effect/MobEffect
	m	(Lbex;I)V	<init>	<init>
		p	1		category
		p	2		color
	m	()Z	a	isInstantenous
	m	(I)Lbew;	a	byId
		p	0		rawId
	m	(II)Z	a	isDurationEffectTick
		p	1		duration
		p	2		amplifier
	m	(ILbhc;)D	a	getAttributeModifierValue
		p	1		amplifier
		p	2		modifier
	m	(Lbew;)I	a	getId
		p	0		type
	m	(Lbfh;Lbfh;Lbfx;ID)V	a	applyInstantenousEffect
		p	1		source
		p	2		attacker
		p	3		target
		p	4		amplifier
		p	5		proximity
	m	(Lbfx;I)V	a	applyEffectTick
		p	1		entity
		p	2		amplifier
	m	(Lbfx;Lbhb;I)V	a	removeAttributeModifiers
		p	1		entity
		p	2		attributes
		p	3		amplifier
	m	(Lbgz;Ljava/lang/String;DLbhc$a;)Lbew;	a	addAttributeModifier
		p	1		attribute
		p	2		uuid
		p	3		amount
		p	5		operation
	m	(Ljava/util/function/Supplier;)Lbew;	a	setFactorDataFactory
		p	1		factorCalculationDataSupplier
	m	()Ljava/util/Optional;	b	createFactorData
	m	(Lbew;)I	b	getIdFromNullable
		p	0		type
	m	(Lbfx;Lbhb;I)V	b	addAttributeModifiers
		p	1		entity
		p	2		attributes
		p	3		amplifier
	m	()Ljava/lang/String;	c	getOrCreateDescriptionId
	m	()Ljava/lang/String;	d	getDescriptionId
	m	()Ltj;	e	getDisplayName
	m	()Lbex;	f	getCategory
	m	()I	g	getColor
	m	()Ljava/util/Map;	h	getAttributeModifiers
	m	()Z	i	isBeneficial
	m	()Lbey$a;	j	lambda$new$0
	f	Ljava/util/Map;	a	attributeModifiers
	f	Lbex;	b	category
	f	I	c	color
	f	Ljava/lang/String;	d	descriptionId
	f	Ljava/util/function/Supplier;	e	factorDataFactory
c	bex	net/minecraft/world/effect/MobEffectCategory
	m	(Ljava/lang/String;ILn;)V	<init>	<init>
		p	3		format
	m	()Ln;	a	getTooltipFormatting
	m	()[Lbex;	b	$values
	f	Lbex;	a	BENEFICIAL
	f	Lbex;	b	HARMFUL
	f	Lbex;	c	NEUTRAL
	f	Ln;	d	tooltipFormatting
	f	[Lbex;	e	$VALUES
c	bey	net/minecraft/world/effect/MobEffectInstance
	m	(Lbew;)V	<init>	<init>
		p	1		type
	m	(Lbew;I)V	<init>	<init>
		p	1		type
		p	2		duration
	m	(Lbew;II)V	<init>	<init>
		p	1		type
		p	2		duration
		p	3		amplifier
	m	(Lbew;IIZZ)V	<init>	<init>
		p	1		type
		p	2		duration
		p	3		amplifier
		p	4		ambient
		p	5		visible
	m	(Lbew;IIZZZ)V	<init>	<init>
		p	1		type
		p	2		duration
		p	3		amplifier
		p	4		ambient
		p	5		showParticles
		p	6		showIcon
	m	(Lbew;IIZZZLbey;Ljava/util/Optional;)V	<init>	<init>
		p	1		type
		p	2		duration
		p	3		amplifier
		p	4		ambient
		p	5		showParticles
		p	6		showIcon
		p	7		hiddenEffect
		p	8		factorCalculationData
	m	(Lbey;)V	<init>	<init>
		p	1		instance
	m	()Ljava/util/Optional;	a	getFactorData
	m	(I)Z	a	endsWithin
		p	1		duration
	m	(Lbew;Lre;)Lbey;	a	loadSpecifiedEffect
		p	0		type
		p	1		nbt
	m	(Lbey$a;)V	a	lambda$tick$0
		p	1		factorCalculationData
	m	(Lbey;)V	a	setDetailsFrom
		p	1		that
	m	(Lbfx;)V	a	applyEffect
		p	1		entity
	m	(Lbfx;Ljava/lang/Runnable;)Z	a	tick
		p	1		entity
		p	2		overwriteCallback
	m	(Lit/unimi/dsi/fastutil/ints/Int2IntFunction;)I	a	mapDuration
		p	1		mapper
	m	(Lre;)Lre;	a	save
		p	1		nbt
	m	(Lre;Lbey$a;)V	a	lambda$writeDetailsTo$3
		p	1		factorCalculationData
	m	(Lre;Lrx;)V	a	lambda$writeDetailsTo$2
		p	1		factorCalculationDataNbt
	m	()Z	b	isInfiniteDuration
	m	(I)I	b	lambda$tickDownDuration$1
		p	0		duration
	m	(Lbey;)Z	b	update
		p	1		that
	m	(Lre;)Lbey;	b	load
		p	0		nbt
	m	()Lbew;	c	getEffect
	m	(Lbey;)I	c	compareTo
	m	(Lre;)V	c	writeDetailsTo
		p	1		nbt
	m	()I	d	getDuration
	m	(Lbey;)Z	d	isShorterDurationThan
		p	1		effect
	m	()I	e	getAmplifier
	m	()Z	f	isAmbient
	m	()Z	g	isVisible
	m	()Z	h	showIcon
	m	()Ljava/lang/String;	i	getDescriptionId
	m	()Z	j	hasRemainingDuration
	m	()I	k	tickDownDuration
	m	()Ljava/lang/String;	l	describeDuration
	f	I	a	INFINITE_DURATION
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Lbew;	c	effect
	f	I	d	duration
	f	I	e	amplifier
	f	Z	f	ambient
	f	Z	g	visible
	f	Z	h	showIcon
	f	Lbey;	i	hiddenEffect
	f	Ljava/util/Optional;	j	factorData
c	bey$a	net/minecraft/world/effect/MobEffectInstance$FactorData
	m	(I)V	<init>	<init>
		p	1		paddingDuration
	m	(IFFFIFZ)V	<init>	<init>
		p	1		paddingDuration
		p	2		factorStart
		p	3		factorTarget
		p	4		factorCurrent
		p	5		effectChangedTimestamp
		p	6		factorPreviousFrame
		p	7		hadEffectLastTick
	m	(Lbey$a;)Ljava/lang/Boolean;	a	lambda$static$6
		p	0		data
	m	(Lbey;)V	a	tick
		p	1		effect
	m	(Lbfx;F)F	a	getFactor
		p	1		entity
		p	2		tickDelta
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$7
		p	0		instance
	m	(Lbey$a;)Ljava/lang/Float;	b	lambda$static$5
		p	0		data
	m	(Lbey$a;)Ljava/lang/Integer;	c	lambda$static$4
		p	0		data
	m	(Lbey$a;)Ljava/lang/Float;	d	lambda$static$3
		p	0		data
	m	(Lbey$a;)Ljava/lang/Float;	e	lambda$static$2
		p	0		data
	m	(Lbey$a;)Ljava/lang/Float;	f	lambda$static$1
		p	0		data
	m	(Lbey$a;)Ljava/lang/Integer;	g	lambda$static$0
		p	0		data
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	paddingDuration
	f	F	c	factorStart
	f	F	d	factorTarget
	f	F	e	factorCurrent
	f	I	f	ticksActive
	f	F	g	factorPreviousFrame
	f	Z	h	hadEffectLastTick
c	bez	net/minecraft/world/effect/MobEffectUtil
	m	(Laip;Lbfh;Lede;DLbey;I)Ljava/util/List;	a	addEffectToPlayersAround
		p	0		world
		p	1		entity
		p	2		origin
		p	3		range
		p	5		statusEffectInstance
		p	6		duration
	m	(Lbey;F)Ltj;	a	formatDuration
		p	0		effect
		p	1		multiplier
	m	(Lbey;Lbfh;Laiq;)V	a	lambda$addEffectToPlayersAround$1
		p	2		player
	m	(Lbfh;Lede;DLbew;Lbey;ILaiq;)Z	a	lambda$addEffectToPlayersAround$0
		p	7		player
	m	(Lbfx;)Z	a	hasDigSpeed
		p	0		entity
	m	(Lbfx;)I	b	getDigSpeedAmplification
		p	0		entity
	m	(Lbfx;)Z	c	hasWaterBreathing
		p	0		entity
c	bfa	net/minecraft/world/effect/MobEffects
	m	()Lbey$a;	a	lambda$static$0
	m	(ILjava/lang/String;Lbew;)Lbew;	a	register
		p	0		rawId
		p	1		id
		p	2		entry
	f	Lbew;	A	UNLUCK
	f	Lbew;	B	SLOW_FALLING
	f	Lbew;	C	CONDUIT_POWER
	f	Lbew;	D	DOLPHINS_GRACE
	f	Lbew;	E	BAD_OMEN
	f	Lbew;	F	HERO_OF_THE_VILLAGE
	f	Lbew;	G	DARKNESS
	f	I	H	DARKNESS_EFFECT_FACTOR_PADDING_DURATION_TICKS
	f	Lbew;	a	MOVEMENT_SPEED
	f	Lbew;	b	MOVEMENT_SLOWDOWN
	f	Lbew;	c	DIG_SPEED
	f	Lbew;	d	DIG_SLOWDOWN
	f	Lbew;	e	DAMAGE_BOOST
	f	Lbew;	f	HEAL
	f	Lbew;	g	HARM
	f	Lbew;	h	JUMP
	f	Lbew;	i	CONFUSION
	f	Lbew;	j	REGENERATION
	f	Lbew;	k	DAMAGE_RESISTANCE
	f	Lbew;	l	FIRE_RESISTANCE
	f	Lbew;	m	WATER_BREATHING
	f	Lbew;	n	INVISIBILITY
	f	Lbew;	o	BLINDNESS
	f	Lbew;	p	NIGHT_VISION
	f	Lbew;	q	HUNGER
	f	Lbew;	r	WEAKNESS
	f	Lbew;	s	POISON
	f	Lbew;	t	WITHER
	f	Lbew;	u	HEALTH_BOOST
	f	Lbew;	v	ABSORPTION
	f	Lbew;	w	SATURATION
	f	Lbew;	x	GLOWING
	f	Lbew;	y	LEVITATION
	f	Lbew;	z	LUCK
c	bfa$1	net/minecraft/world/effect/MobEffects$1
	m	(Lbex;I)V	<init>	<init>
		p	1		category
		p	2		color
	m	(II)Z	a	isDurationEffectTick
		p	1		duration
		p	2		amplifier
	m	(Lbfx;I)V	a	applyEffectTick
		p	1		entity
		p	2		amplifier
c	bfb	net/minecraft/world/effect/package-info
c	bfc	net/minecraft/world/entity/AgeableMob
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()Z	O_	canBreed
	m	(IZ)V	a	ageUp
		p	1		age
		p	2		overGrow
	m	(Lacl;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Laip;Lbfc;)Lbfc;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lcmx;Lbdw;Lbgb;Lbgr;Lre;)Lbgr;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Z)V	a	setBaby
		p	1		baby
	m	()V	a_	defineSynchedData
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()V	b_	aiStep
	m	(I)V	b_	ageUp
		p	1		age
	m	(I)V	c_	setAge
		p	1		age
	m	(I)I	d_	getSpeedUpSecondsWhenFeeding
		p	0		breedingAge
	m	()I	h	getAge
	m	()V	m	ageBoundaryReached
	m	()Z	y_	isBaby
	f	I	b	BABY_START_AGE
	f	Lacl;	bS	DATA_BABY_ID
	f	I	bT	FORCED_AGE_PARTICLE_TICKS
	f	I	c	age
	f	I	d	forcedAge
	f	I	e	forcedAgeTimer
c	bfc$a	net/minecraft/world/entity/AgeableMob$AgeableMobGroupData
	m	(F)V	<init>	<init>
		p	1		babyChance
	m	(Z)V	<init>	<init>
		p	1		babyAllowed
	m	(ZF)V	<init>	<init>
		p	1		babyAllowed
		p	2		babyChance
	m	()I	a	getGroupSize
	m	()V	b	increaseGroupSizeByOne
	m	()Z	c	isShouldSpawnBaby
	m	()F	d	getBabySpawnChance
	f	I	a	groupSize
	f	Z	b	shouldSpawnBaby
	f	F	c	babySpawnChance
c	bfd	net/minecraft/world/entity/AnimationState
	m	()V	a	stop
	m	(FF)V	a	updateTime
		p	1		animationProgress
		p	2		speedMultiplier
	m	(I)V	a	start
		p	1		age
	m	(Ljava/util/function/Consumer;)V	a	ifStarted
		p	1		consumer
	m	(ZI)V	a	animateWhen
		p	1		running
		p	2		age
	m	()J	b	getAccumulatedTime
	m	(I)V	b	startIfStopped
		p	1		age
	m	()Z	c	isStarted
	f	J	a	STOPPED
	f	J	b	lastTime
	f	J	c	accumulatedTime
c	bfe	net/minecraft/world/entity/AreaEffectCloud
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcmi;DDD)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
	m	()Ldwp;	C_	getPistonPushReaction
	m	(F)V	a	setRadius
		p	1		radius
	m	(I)V	a	setFixedColor
		p	1		rgb
	m	(Lacl;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Lbey;)V	a	addEffect
		p	1		effect
	m	(Lbfx;)V	a	setOwner
		p	1		owner
	m	(Lbgj;)Lbfi;	a	getDimensions
		p	1		pose
	m	(Lchr;)V	a	setPotion
		p	1		potion
	m	(Lis;)V	a	setParticle
		p	1		particle
	m	(Ljava/util/Map$Entry;)Z	a	lambda$tick$0
		p	1		entry
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Z)V	a	setWaiting
		p	1		waiting
	m	()V	a_	defineSynchedData
	m	(F)V	b	setRadiusOnUse
		p	1		radiusOnUse
	m	(I)V	b	setDuration
		p	1		duration
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(F)V	c	setRadiusPerTick
		p	1		radiusGrowth
	m	(I)V	c	setDurationOnUse
		p	1		durationOnUse
	m	()V	c_	refreshDimensions
	m	(I)V	d	setWaitTime
		p	1		waitTime
	m	()F	h	getRadius
	m	()I	i	getColor
	m	()Lis;	j	getParticle
	m	()Z	k	isWaiting
	m	()V	l	tick
	m	(I)I	l	lambda$tick$1
	m	()I	m	getDuration
	m	()F	o	getRadiusOnUse
	m	()F	p	getRadiusPerTick
	m	()I	q	getDurationOnUse
	m	()I	r	getWaitTime
	m	()Lbfx;	s	getOwner
	m	()Lchr;	t	getPotion
	m	()Lbfh;	v	getOwner
	m	()V	w	updateColor
	f	F	aC	radiusPerTick
	f	Lbfx;	aD	owner
	f	Ljava/util/UUID;	aE	ownerUUID
	f	F	b	DEFAULT_WIDTH
	f	F	c	HEIGHT
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	I	e	TIME_BETWEEN_APPLICATIONS
	f	Lacl;	f	DATA_RADIUS
	f	Lacl;	g	DATA_COLOR
	f	Lacl;	h	DATA_WAITING
	f	Lacl;	i	DATA_PARTICLE
	f	F	j	MAX_RADIUS
	f	F	k	MINIMAL_RADIUS
	f	F	l	DEFAULT_RADIUS
	f	Lchr;	m	potion
	f	Ljava/util/List;	n	effects
	f	Ljava/util/Map;	o	victims
	f	I	p	duration
	f	I	q	waitTime
	f	I	r	reapplicationDelay
	f	Z	s	fixedColor
	f	I	t	durationOnUse
	f	F	u	radiusOnUse
c	bff	net/minecraft/world/entity/Attackable
	m	()Lbfx;	L_	getLastAttacker
c	bfg	net/minecraft/world/entity/Display
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()Lecz;	A_	getBoundingBoxForCulling
	m	()I	B_	getTeamColor
	m	()Ldwp;	C_	getPistonPushReaction
	m	()Lvb;	S	getAddEntityPacket
	m	(D)Z	a	shouldRenderAtSqrDistance
		p	1		distance
	m	(F)Lj;	a	transformation
		p	1		delta
	m	(FLaco;)V	a	lambda$new$0
		p	1		value
		p	2		dataTracker
	m	(Lacl;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Laco;)Lj;	a	createTransformation
		p	0		dataTracker
	m	(Laod;)V	a	setBrightnessOverride
		p	1		brightness
	m	(Lbfg$a;)V	a	setBillboardConstraints
		p	1		billboardMode
	m	(Lcom/mojang/datafixers/util/Pair;)V	a	lambda$readAdditionalSaveData$3
		p	1		pair
	m	(Lj;)V	a	setTransformation
		p	1		transformation
	m	(Ljava/util/List;)V	a	onSyncedDataUpdated
		p	1		dataEntries
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lre;Lrx;)V	a	lambda$addAdditionalSaveData$6
		p	1		brightness
	m	()V	a_	defineSynchedData
	m	(F)F	b	getShadowRadius
		p	1		delta
	m	(I)V	b	setInterpolationDuration
		p	1		interpolationDuration
	m	(Lcom/mojang/datafixers/util/Pair;)V	b	lambda$readAdditionalSaveData$2
		p	1		pair
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lre;Lrx;)V	b	lambda$addAdditionalSaveData$5
		p	1		billboard
	m	(F)F	c	getShadowStrength
		p	1		delta
	m	(I)V	c	setInterpolationDelay
		p	1		startInterpolation
	m	(Lcom/mojang/datafixers/util/Pair;)V	c	lambda$readAdditionalSaveData$1
		p	1		pair
	m	(Lre;Lrx;)V	c	lambda$addAdditionalSaveData$4
		p	1		transformations
	m	(F)F	d	calculateInterpolationProgress
		p	1		delta
	m	(I)V	d	setGlowColorOverride
		p	1		glowColorOverride
	m	(DDD)V	e	setPos
		p	1		x
		p	3		y
		p	5		z
	m	(F)V	e	setXRot
		p	1		pitch
	m	(F)V	f	setYRot
		p	1		yaw
	m	(F)V	g	setViewRange
		p	1		viewRange
	m	(F)V	h	setShadowRadius
		p	1		shadowRadius
	m	()Lorg/joml/Quaternionf;	i	orientation
	m	()Lbfg$a;	j	getBillboardConstraints
	m	()I	k	getPackedBrightnessOverride
	m	()V	l	tick
	m	()I	o	getInterpolationDuration
	m	()I	p	getInterpolationDelay
	m	()Laod;	q	getBrightnessOverride
	m	()F	r	getViewRange
	m	()F	s	getShadowRadius
	m	()F	t	getShadowStrength
	m	()F	v	getWidth
	m	()I	w	getGlowColorOverride
	m	(F)V	w	setShadowStrength
		p	1		shadowStrength
	m	()F	x	getHeight
	m	(F)V	x	setWidth
		p	1		width
	m	()V	y	updateCulling
	m	(F)V	y	setHeight
		p	1		height
	m	()V	z	updateOrientation
	f	Lacl;	aC	DATA_RIGHT_ROTATION_ID
	f	Lacl;	aD	DATA_BILLBOARD_RENDER_CONSTRAINTS_ID
	f	Lacl;	aE	DATA_BRIGHTNESS_OVERRIDE_ID
	f	Lacl;	aF	DATA_VIEW_RANGE_ID
	f	Lacl;	aG	DATA_SHADOW_RADIUS_ID
	f	Lacl;	aH	DATA_SHADOW_STRENGTH_ID
	f	Lacl;	aI	DATA_WIDTH_ID
	f	Lacl;	aJ	DATA_HEIGHT_ID
	f	Lacl;	aK	DATA_GLOW_COLOR_OVERRIDE_ID
	f	F	aL	INITIAL_SHADOW_RADIUS
	f	F	aM	INITIAL_SHADOW_STRENGTH
	f	I	aN	NO_GLOW_COLOR_OVERRIDE
	f	Lbfg$e;	aO	transformation
	f	Lbfg$d;	aP	shadowRadius
	f	Lbfg$d;	aQ	shadowStrength
	f	Lorg/joml/Quaternionf;	aR	orientation
	f	J	aS	interpolationStartClientTick
	f	F	aT	lastProgress
	f	Lecz;	aU	cullingBoundingBox
	f	Z	aV	updateInterpolators
	f	Z	aW	updateTime
	f	I	b	NO_BRIGHTNESS_OVERRIDE
	f	Ljava/lang/String;	c	TAG_INTERPOLATION_DURATION
	f	Ljava/lang/String;	d	TAG_START_INTERPOLATION
	f	Ljava/lang/String;	e	TAG_TRANSFORMATION
	f	Ljava/lang/String;	f	TAG_BILLBOARD
	f	Ljava/lang/String;	g	TAG_BRIGHTNESS
	f	Ljava/lang/String;	h	TAG_VIEW_RANGE
	f	Ljava/lang/String;	i	TAG_SHADOW_RADIUS
	f	Ljava/lang/String;	j	TAG_SHADOW_STRENGTH
	f	Ljava/lang/String;	k	TAG_WIDTH
	f	Ljava/lang/String;	l	TAG_HEIGHT
	f	Ljava/lang/String;	m	TAG_GLOW_COLOR_OVERRIDE
	f	Lbfg$i;	n	interpolators
	f	Lorg/slf4j/Logger;	o	LOGGER
	f	F	p	INITIAL_UPDATE_PROGRESS
	f	Lacl;	q	DATA_INTERPOLATION_START_DELTA_TICKS_ID
	f	Lacl;	r	DATA_INTERPOLATION_DURATION_ID
	f	Lacl;	s	DATA_TRANSLATION_ID
	f	Lacl;	t	DATA_SCALE_ID
	f	Lacl;	u	DATA_LEFT_ROTATION_ID
c	bfg$1	net/minecraft/world/entity/Display$1
	m	(Lbfg;Lj;)V	<init>	<init>
		p	2		value
	m	(FLj;Lj;)Lj;	a	interpolate
		p	1		delta
		p	2		start
		p	3		end
	m	(FLjava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;	a	interpolate
		p	1		delta
		p	2		start
		p	3		end
	f	Lbfg;	a	this$0
c	bfg$2	net/minecraft/world/entity/Display$2
	f	[I	a	$SwitchMap$net$minecraft$world$entity$Display$TextDisplay$Align
c	bfg$a	net/minecraft/world/entity/Display$BillboardConstraints
	m	(Ljava/lang/String;IBLjava/lang/String;)V	<init>	<init>
		p	3		index
		p	4		name
	m	()B	a	getId
	m	()[Lbfg$a;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lbfg$a;	a	FIXED
	f	Lbfg$a;	b	VERTICAL
	f	Lbfg$a;	c	HORIZONTAL
	f	Lbfg$a;	d	CENTER
	f	Lcom/mojang/serialization/Codec;	e	CODEC
	f	Ljava/util/function/IntFunction;	f	BY_ID
	f	B	g	id
	f	Ljava/lang/String;	h	name
	f	[Lbfg$a;	i	$VALUES
c	bfg$b	net/minecraft/world/entity/Display$BlockDisplay
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(Ldbq;)V	b	setBlockState
		p	1		state
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Ldbq;	o	getBlockState
	f	Ljava/lang/String;	o	TAG_BLOCK_STATE
	f	Lacl;	p	DATA_BLOCK_STATE_ID
c	bfg$c	net/minecraft/world/entity/Display$ColorInterpolator
	m	(I)V	<init>	<init>
		p	1		value
	m	(FII)I	a	interpolate
		p	1		delta
		p	2		start
		p	3		end
c	bfg$d	net/minecraft/world/entity/Display$FloatInterpolator
	m	(F)V	<init>	<init>
		p	1		value
	m	(F)F	a	get
		p	1		delta
	m	(FFF)F	a	interpolate
		p	1		delta
		p	2		start
		p	3		end
	m	(F)Ljava/lang/Float;	b	getGeneric
	m	(F)Ljava/lang/Object;	c	getGeneric
		p	1		value
c	bfg$e	net/minecraft/world/entity/Display$GenericInterpolator
	m	(Ljava/lang/Object;)V	<init>	<init>
		p	1		value
	m	(F)Ljava/lang/Object;	a	get
		p	1		delta
	m	(FLjava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;	a	interpolate
		p	1		delta
		p	2		start
		p	3		end
	m	(F)Ljava/lang/Object;	c	getGeneric
		p	1		value
c	bfg$f	net/minecraft/world/entity/Display$IntInterpolator
	m	(I)V	<init>	<init>
		p	1		value
	m	(F)I	a	get
		p	1		value
	m	(FII)I	a	interpolate
		p	1		delta
		p	2		start
		p	3		end
	m	(F)Ljava/lang/Integer;	b	getGeneric
	m	(F)Ljava/lang/Object;	c	getGeneric
		p	1		value
c	bfg$g	net/minecraft/world/entity/Display$IntepolatorUpdater
	m	(FLaco;)V	update	update
		p	1		value
		p	2		dataTracker
c	bfg$h	net/minecraft/world/entity/Display$Interpolator
	m	(Ljava/lang/Object;)V	<init>	<init>
		p	1		value
	m	(FLjava/lang/Object;)V	a	updateValue
		p	1		prevValue
		p	2		value
	m	(F)Ljava/lang/Object;	c	getGeneric
		p	1		value
	f	Ljava/lang/Object;	b	lastValue
	f	Ljava/lang/Object;	c	currentValue
c	bfg$i	net/minecraft/world/entity/Display$InterpolatorSet
	m	(FLaco;)V	a	updateValues
		p	1		value
		p	2		dataTracker
	m	(I)Z	a	shouldTriggerUpdate
		p	1		id
	m	(Lacl;Lbfg$h;)V	a	addEntry
		p	1		data
		p	2		interpolator
	m	(Lbfg$h;Lacl;FLaco;)V	a	lambda$addEntry$0
		p	2		value
		p	3		dataTracker
	m	(Ljava/util/Set;Lbfg$g;)V	a	addEntry
		p	1		dataSet
		p	2		updater
	f	Lit/unimi/dsi/fastutil/ints/IntSet;	a	interpolatedData
	f	Ljava/util/List;	b	updaters
c	bfg$j	net/minecraft/world/entity/Display$ItemDisplay
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcfs;)V	a	setItemTransform
		p	1		transformationMode
	m	(Lcfv;)V	a	setItemStack
		p	1		stack
	m	(Lcom/mojang/datafixers/util/Pair;)V	a	lambda$readAdditionalSaveData$0
		p	1		mode
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lre;Lrx;)V	a	lambda$addAdditionalSaveData$1
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(I)Lbgq;	a_	getSlot
		p	1		mappedIndex
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Lcfv;	o	getItemStack
	m	()Lcfs;	p	getItemTransform
	f	Ljava/lang/String;	o	TAG_ITEM
	f	Ljava/lang/String;	p	TAG_ITEM_DISPLAY
	f	Lacl;	q	DATA_ITEM_STACK_ID
	f	Lacl;	r	DATA_ITEM_DISPLAY_ID
	f	Lbgq;	s	slot
c	bfg$j$1	net/minecraft/world/entity/Display$ItemDisplay$1
	m	()Lcfv;	a	get
	m	(Lcfv;)Z	a	set
		p	1		stack
	f	Lbfg$j;	a	this$0
c	bfg$k	net/minecraft/world/entity/Display$TextDisplay
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(B)Lbfg$k$a;	a	getAlign
		p	0		flags
	m	(BLre;Ljava/lang/String;B)B	a	loadFlag
		p	0		flags
		p	1		nbt
		p	2		nbtKey
		p	3		flag
	m	(FLaco;)V	a	lambda$new$0
		p	1		value
		p	2		dataTracker
	m	(Lacl;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Lbfg$k$d;)Lbfg$k$b;	a	cacheDisplay
		p	1		splitter
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lre;Lrx;)V	a	lambda$addAdditionalSaveData$1
	m	()V	a_	defineSynchedData
	m	(BLre;Ljava/lang/String;B)V	b	storeFlag
		p	0		flags
		p	1		nbt
		p	2		nbtKey
		p	3		flag
	m	(I)V	b	setLineWidth
		p	1		lineWidth
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(B)V	c	setTextOpacity
		p	1		textOpacity
	m	(I)V	c	setBackgroundColor
		p	1		background
	m	(Ltj;)V	c	setText
		p	1		text
	m	(B)V	d	setFlags
		p	1		flags
	m	(F)B	g	getTextOpacity
		p	1		delta
	m	(F)I	h	getBackgroundColor
		p	1		delta
	m	()Ltj;	o	getText
	m	()I	p	getLineWidth
	m	()B	q	getFlags
	m	()B	r	getTextOpacity
	m	()I	s	getBackgroundColor
	f	Ljava/lang/String;	aC	TAG_LINE_WIDTH
	f	Ljava/lang/String;	aD	TAG_TEXT_OPACITY
	f	Ljava/lang/String;	aE	TAG_BACKGROUND_COLOR
	f	Ljava/lang/String;	aF	TAG_SHADOW
	f	Ljava/lang/String;	aG	TAG_SEE_THROUGH
	f	Ljava/lang/String;	aH	TAG_USE_DEFAULT_BACKGROUND
	f	Ljava/lang/String;	aI	TAG_ALIGNMENT
	f	B	aJ	INITIAL_TEXT_OPACITY
	f	Lacl;	aK	DATA_TEXT_ID
	f	Lacl;	aL	DATA_LINE_WIDTH_ID
	f	Lacl;	aM	DATA_BACKGROUND_COLOR_ID
	f	Lacl;	aN	DATA_TEXT_OPACITY_ID
	f	Lacl;	aO	DATA_STYLE_FLAGS_ID
	f	Lbfg$f;	aP	textOpacity
	f	Lbfg$f;	aQ	backgroundColor
	f	Lbfg$k$b;	aR	clientDisplayCache
	f	Ljava/lang/String;	o	TAG_TEXT
	f	B	p	FLAG_SHADOW
	f	B	q	FLAG_SEE_THROUGH
	f	B	r	FLAG_USE_DEFAULT_BACKGROUND
	f	B	s	FLAG_ALIGN_LEFT
	f	B	t	FLAG_ALIGN_RIGHT
	f	I	u	INITIAL_BACKGROUND
c	bfg$k$a	net/minecraft/world/entity/Display$TextDisplay$Align
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()[Lbfg$k$a;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lbfg$k$a;	a	CENTER
	f	Lbfg$k$a;	b	LEFT
	f	Lbfg$k$a;	c	RIGHT
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	Ljava/lang/String;	e	name
	f	[Lbfg$k$a;	f	$VALUES
c	bfg$k$b	net/minecraft/world/entity/Display$TextDisplay$CachedInfo
	m	()Ljava/util/List;	a	lines
	m	()I	b	width
	f	Ljava/util/List;	a	lines
	f	I	b	width
c	bfg$k$c	net/minecraft/world/entity/Display$TextDisplay$CachedLine
	m	()Laov;	a	contents
	m	()I	b	width
	f	Laov;	a	contents
	f	I	b	width
c	bfg$k$d	net/minecraft/world/entity/Display$TextDisplay$LineSplitter
	m	(Ltj;I)Lbfg$k$b;	split	split
		p	1		text
		p	2		lineWidth
c	bfh	net/minecraft/world/entity/Entity
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()Lecz;	A_	getBoundingBoxForCulling
	m	()I	B	getPermissionLevel
	m	()I	B_	getTeamColor
	m	()Ldwp;	C_	getPistonPushReaction
	m	()Z	F_	isSpectator
	m	()Ltj;	G_	getDisplayName
	m	()V	H	processPortalCooldown
	m	()Z	M_	shouldInformAdmins
	m	()Lvb;	S	getAddEntityPacket
	m	()Lcmi;	Y	getLevel
	m	()Ltj;	Z	getName
	m	(D)Z	a	shouldRenderAtSqrDistance
		p	1		distance
	m	(DDD)V	a	dismountTo
		p	1		destX
		p	3		destY
		p	5		destZ
	m	(DDDFF)V	a	absMoveTo
		p	1		x
		p	3		y
		p	5		z
		p	7		yaw
		p	8		pitch
	m	(DDDFFIZ)V	a	lerpTo
		p	1		x
		p	3		y
		p	5		z
		p	7		yaw
		p	8		pitch
		p	9		interpolationSteps
		p	10		interpolate
	m	(DDF)Lede;	a	getCollisionHorizontalEscapeVector
		p	0		vehicleWidth
		p	2		passengerWidth
		p	4		passengerYaw
	m	(DFZ)Ledc;	a	pick
		p	1		maxDistance
		p	3		tickDelta
		p	4		includeFluids
	m	(DZLdbq;Lgt;)V	a	checkFallDamage
		p	1		heightDifference
		p	3		onGround
		p	4		state
		p	5		landedPosition
	m	(F)Lgt;	a	getOnPos
		p	1		offset
	m	(FF)V	a	setRot
		p	1		yaw
		p	2		pitch
	m	(FFLbem;)Z	a	causeFallDamage
		p	1		fallDistance
		p	2		damageMultiplier
		p	3		damageSource
	m	(FI)V	a	lerpHeadTo
		p	1		yaw
		p	2		interpolationSteps
	m	(FLede;)V	a	moveRelative
		p	1		speed
		p	2		movementInput
	m	(Lacl;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Laip;)Ldxh;	a	findDimensionEntryPoint
		p	1		destination
	m	(Laip;DDDLjava/util/Set;FF)Z	a	teleportTo
		p	1		world
		p	2		destX
		p	4		destY
		p	6		destZ
		p	8		flags
		p	9		yaw
		p	10		pitch
	m	(Laip;Lbfw;)V	a	thunderHit
		p	1		world
		p	2		lightning
	m	(Laip;Lbfx;)Z	a	wasKilled
		p	1		world
		p	2		other
	m	(Laip;Lgt;ZLddi;)Ljava/util/Optional;	a	getExitPortal
		p	1		destWorld
		p	2		destPos
		p	3		destIsNether
		p	4		worldBorder
	m	(Laip;Ll$a;)Ldxh;	a	lambda$findDimensionEntryPoint$6
		p	2		rect
	m	(Laiq;)Z	a	broadcastToPlayer
		p	1		spectator
	m	(Lamq;)V	a	playSound
		p	1		event
	m	(Lamq;FF)V	a	playSound
		p	1		sound
		p	2		volume
		p	3		pitch
	m	(Lanv;)Z	a	isEyeInFluid
		p	1		fluidTag
	m	(Lanv;D)Z	a	updateFluidHeightAndDoFluidPushing
		p	1		tag
		p	2		speed
	m	(Lbem;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbfh$c;)V	a	remove
		p	1		reason
	m	(Lbfh;)Z	a	lambda$hasExactlyOnePlayerPassenger$15
		p	0		entity
	m	(Lbfh;D)Z	a	closerThan
		p	1		entity
		p	2		radius
	m	(Lbfh;DD)Z	a	closerThan
		p	1		entity
		p	2		horizontalRadius
		p	4		verticalRadius
	m	(Lbfh;ILbem;)V	a	awardKillScore
		p	1		entityKilled
		p	2		score
		p	3		damageSource
	m	(Lbfh;Lbfh$a;)V	a	positionRider
		p	1		passenger
		p	2		positionUpdater
	m	(Lbfh;Lbfh;)Z	a	lambda$removePassenger$4
		p	1		entity
	m	(Lbfh;Lede;Lecz;Lcmi;Ljava/util/List;)Lede;	a	collideBoundingBox
		p	0		entity
		p	1		movement
		p	2		entityBoundingBox
		p	3		world
		p	4		collisions
	m	(Lbfh;Z)Z	a	startRiding
		p	1		entity
		p	2		force
	m	(Lbfi;Lede;)V	a	lambda$refreshDimensions$13
		p	2		pos
	m	(Lbfm;Lcfv;)V	a	setItemSlot
		p	1		slot
		p	2		stack
	m	(Lbfx;Lbfh;)V	a	doEnchantDamageEffects
		p	1		attacker
		p	2		target
	m	(Lbgd;Lede;)V	a	move
		p	1		movementType
		p	2		movement
	m	(Lbgj;)Lbfi;	a	getDimensions
		p	1		pose
	m	(Lbgj;Lbfi;)F	a	getEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lbym;Lbdx;)Lbdy;	a	interact
		p	1		player
		p	2		hand
	m	(Lbym;Lede;Lbdx;)Lbdy;	a	interactAt
		p	1		player
		p	2		hitPos
		p	3		hand
	m	(Lcfq;)Lede;	a	getHandHoldingItemAngle
		p	1		item
	m	(Lcfv;F)Lbvf;	a	spawnAtLocation
		p	1		stack
		p	2		yOffset
	m	(Lcma;Lclo;Lgt;Ldbq;F)Z	a	shouldBlockExplode
		p	1		explosion
		p	2		world
		p	3		pos
		p	4		state
		p	5		explosionPower
	m	(Lcma;Lclo;Lgt;Ldbq;Ldwj;F)F	a	getBlockExplosionResistance
		p	1		explosion
		p	2		world
		p	3		pos
		p	4		blockState
		p	5		fluidState
		p	6		max
	m	(Lcmh;)Lbvf;	a	spawnAtLocation
		p	1		item
	m	(Lcmh;I)Lbvf;	a	spawnAtLocation
		p	1		item
		p	2		yOffset
	m	(Lcmi;Lgt;)Z	a	mayInteract
		p	1		world
		p	2		pos
	m	(Lcua;)F	a	mirror
		p	1		mirror
	m	(Lcvq;)F	a	rotate
		p	1		rotation
	m	(Ldbq;)V	a	onInsideBlock
		p	1		state
	m	(Ldbq;Lede;)V	a	makeStuckInBlock
		p	1		state
		p	2		multiplier
	m	(Ldbq;Lgt;)Z	a	lambda$findDimensionEntryPoint$5
		p	2		pos
	m	(Ldfi;)V	a	setLevelCallback
		p	1		changeListener
	m	(Ldga;)V	a	gameEvent
		p	1		event
	m	(Ldga;Lbfh;)V	a	gameEvent
		p	1		event
		p	2		entity
	m	(Lea$a;Lede;)V	a	lookAt
		p	1		anchorPoint
		p	2		target
	m	(Lecz;)V	a	setBoundingBox
		p	1		boundingBox
	m	(Lecz;Lgt;)Z	a	lambda$isInWall$1
		p	2		pos
	m	(Lede;)V	a	setPos
		p	1		pos
	m	(Lede;FF)Lede;	a	getInputVector
		p	0		movementInput
		p	1		speed
		p	2		yaw
	m	(Lede;Lbgd;)Lede;	a	maybeBackOffFromEdge
		p	1		movement
		p	2		type
	m	(Lede;Lecz;Ljava/util/List;)Lede;	a	collideWithShapes
		p	0		movement
		p	1		entityBoundingBox
		p	2		collisions
	m	(Leee;)Z	a	isAlliedTo
		p	1		team
	m	(Lgt;FF)V	a	moveTo
		p	1		pos
		p	2		yaw
		p	3		pitch
	m	(Lgt;Ldbq;)Z	a	isColliding
		p	1		pos
		p	2		state
	m	(Lgz$a;D)D	a	applyPistonMovementRestriction
		p	1		axis
		p	2		offsetFactor
	m	(Lgz$a;Ll$a;)Lede;	a	getRelativePortalPosition
		p	1		portalAxis
		p	2		portalRect
	m	(Ljava/lang/String;)Z	a	addTag
		p	1		tag
	m	(Ljava/util/List;)V	a	onSyncedDataUpdated
		p	1		dataEntries
	m	(Ljava/util/function/BiConsumer;)V	a	updateDynamicGameEventListener
		p	1		callback
	m	(Ljava/util/function/Predicate;)Z	a	hasPassenger
		p	1		predicate
	m	(Lp;)V	a	fillCrashReportCategory
		p	1		section
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Ltj;)V	a	sendSystemMessage
		p	1		message
	m	(Luf;)Luf;	a	lambda$getDisplayName$11
		p	1		style
	m	(Lvf;)V	a	recreateFromPacket
		p	1		packet
	m	([D)Lrk;	a	newDoubleList
		p	1		values
	m	([F)Lrk;	a	newFloatList
		p	1		values
	m	()V	aA	extinguishFire
	m	()V	aB	processFlappingMovement
	m	()Lgt;	aC	getOnPosLegacy
	m	()Lgt;	aD	getOnPos
	m	()F	aE	getBlockJumpFactor
	m	()F	aF	getBlockSpeedFactor
	m	()Lgt;	aG	getBlockPosBelowThatAffectsMyMovement
	m	()F	aH	nextStep
	m	()Lamq;	aI	getSwimSound
	m	()Lamq;	aJ	getSwimSplashSound
	m	()Lamq;	aK	getSwimHighSpeedSplashSound
	m	()V	aL	checkInsideBlocks
	m	()V	aM	onFlap
	m	()Z	aN	isFlapping
	m	()Z	aO	isSilent
	m	()Z	aP	isNoGravity
	m	()Lbfh$b;	aQ	getMovementEmission
	m	()Z	aR	dampensVibrations
	m	()Z	aS	fireImmune
	m	()Z	aT	isInWater
	m	()Z	aU	isInWaterOrRain
	m	()Z	aV	isInWaterRainOrBubble
	m	()Z	aW	isInWaterOrBubble
	m	()Z	aX	isUnderWater
	m	()V	aY	updateSwimming
	m	()Z	aZ	updateInWaterStateAndDoFluidPushing
	m	()V	a_	defineSynchedData
	m	(I)Lbgq;	a_	getSlot
		p	1		mappedIndex
	m	(Ljava/util/UUID;)V	a_	setUUID
		p	1		uuid
	m	(Z)V	a_	setSharedFlagOnFire
		p	1		onFire
	m	()Z	aa	hasCustomName
	m	()Ltj;	ab	getCustomName
	m	()V	ac	unRide
	m	()Labm;	ad	getPositionCodec
	m	()Lbfl;	ae	getType
	m	()I	af	getId
	m	()Ljava/util/Set;	ag	getTags
	m	()V	ah	kill
	m	()V	ai	discard
	m	()Laco;	aj	getEntityData
	m	()V	ak	onClientRemoval
	m	()Lbgj;	al	getPose
	m	()Lecz;	am	makeBoundingBox
	m	()V	an	reapplyPosition
	m	()V	ao	baseTick
	m	()V	ap	checkOutOfWorld
	m	()V	aq	setPortalCooldown
	m	()Z	ar	isOnPortalCooldown
	m	()I	as	getPortalWaitTime
	m	()V	at	lavaHurt
	m	()I	au	getRemainingFireTicks
	m	()V	av	clearFire
	m	()V	aw	outOfWorld
	m	()Z	ax	isOnGround
	m	()V	ay	tryCheckInsideBlocks
	m	()V	az	playEntityOnFireExtinguishedSound
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	(D)V	b	setViewScale
		p	0		value
	m	(DD)V	b	turn
		p	1		cursorDeltaX
		p	3		cursorDeltaY
	m	(DDD)V	b	teleportTo
		p	1		destX
		p	3		destY
		p	5		destZ
	m	(DDDFF)V	b	moveTo
		p	1		x
		p	3		y
		p	5		z
		p	7		yaw
		p	8		pitch
	m	(FF)Lede;	b	calculateViewVector
		p	1		pitch
		p	2		yaw
	m	(IZ)V	b	setSharedFlag
		p	1		index
		p	2		value
	m	(Laip;)Lbfh;	b	changeDimension
		p	1		destination
	m	(Lanv;)D	b	getFluidHeight
		p	1		fluid
	m	(Lbem;)Z	b	isInvulnerableTo
		p	1		damageSource
	m	(Lbfh$c;)V	b	setRemoved
		p	1		reason
	m	(Lbfh;)V	b	lambda$teleportTo$12
		p	0		entity
	m	(Lbfx;)Lede;	b	getDismountLocationForPassenger
		p	1		passenger
	m	(Lbgj;)V	b	setPose
		p	1		pose
	m	(Lcfv;)Lbvf;	b	spawnAtLocation
		p	1		stack
	m	(Ldbq;)V	b	playAmethystStepSound
		p	1		state
	m	(Lecz;)Z	b	isFree
		p	1		box
	m	(Lede;)Z	b	isHorizontalCollisionMinor
		p	1		adjustedMovement
	m	(Lgt;Ldbq;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Ljava/lang/String;)Z	b	removeTag
		p	1		tag
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Ltj;)V	b	setCustomName
		p	1		name
	m	()Z	bA	couldAcceptPassenger
	m	()F	bB	getPickRadius
	m	()Lede;	bC	getLookAngle
	m	()Ledd;	bD	getRotationVector
	m	()Lede;	bE	getForward
	m	()V	bF	handleNetherPortal
	m	()I	bG	getDimensionChangingDelay
	m	()Ljava/lang/Iterable;	bH	getHandSlots
	m	()Ljava/lang/Iterable;	bI	getArmorSlots
	m	()Ljava/lang/Iterable;	bJ	getAllSlots
	m	()Z	bK	isOnFire
	m	()Z	bL	isPassenger
	m	()Z	bM	isVehicle
	m	()Z	bN	dismountsUnderwater
	m	()Z	bO	isShiftKeyDown
	m	()Z	bP	isSteppingCarefully
	m	()Z	bQ	isSuppressingBounce
	m	()Z	bR	isDiscrete
	m	()Z	bS	isDescending
	m	()Z	bT	isCrouching
	m	()Z	bU	isSprinting
	m	()Z	bV	isSwimming
	m	()Z	bW	isVisuallySwimming
	m	()Z	bX	isVisuallyCrawling
	m	()Z	bY	hasGlowingTag
	m	()Z	bZ	isCurrentlyGlowing
	m	(Lbym;)V	b_	playerTouch
		p	1		player
	m	()V	ba	updateInWaterStateAndDoWaterCurrentPushing
	m	()V	bb	doWaterSplashEffect
	m	()Ldbq;	bc	getBlockStateOnLegacy
	m	()Ldbq;	bd	getBlockStateOn
	m	()Z	be	canSpawnSprintParticle
	m	()V	bf	spawnSprintParticle
	m	()Z	bg	isInLava
	m	()F	bh	getLightLevelDependentMagicValue
	m	()V	bi	setOldPosAndRot
	m	()V	bj	markHurt
	m	()Lede;	bk	getEyePosition
	m	()Z	bl	canBeHitByProjectile
	m	()Z	bm	isPickable
	m	()Z	bn	isPushable
	m	()Z	bo	repositionEntityAfterLoad
	m	()Ljava/lang/String;	bp	getEncodeId
	m	()Z	bq	isAlive
	m	()Z	br	isInWall
	m	()Z	bs	canBeCollidedWith
	m	()V	bt	rideTick
	m	()D	bu	getMyRidingOffset
	m	()D	bv	getPassengersRidingOffset
	m	()Z	bw	showVehicleHealth
	m	()V	bx	ejectPassengers
	m	()V	by	removeVehicle
	m	()V	bz	stopRiding
	m	(D)D	c	getX
		p	1		widthScale
	m	(DDD)V	c	teleportRelative
		p	1		offsetX
		p	3		offsetY
		p	5		offsetZ
	m	(FF)Lede;	c	calculateUpVector
		p	1		pitch
		p	2		yaw
	m	(Laiq;)V	c	startSeenByPlayer
		p	1		player
	m	(Lbem;)V	c	handleDamageEvent
		p	1		damageSource
	m	(Lbfh;)V	c	lambda$startRiding$3
		p	0		player
	m	(Lbgj;)Z	c	hasPose
		p	1		pose
	m	(Ldbq;)Z	c	lambda$move$0
		p	0		state
	m	(Lede;)Lede;	c	limitPistonMovement
		p	1		movement
	m	(Ltj;)Ltj;	c	removeAction
		p	0		textComponent
	m	(Z)V	c	setOnGround
		p	1		onGround
	m	()Lgz;	cA	getDirection
	m	()Lgz;	cB	getMotionDirection
	m	()Lto;	cC	createHoverEvent
	m	()Lecz;	cD	getBoundingBox
	m	()F	cE	getEyeHeight
	m	()Lede;	cF	getLeashOffset
	m	()Lcmi;	cG	getCommandSenderWorld
	m	()Lnet/minecraft/server/MinecraftServer;	cH	getServer
	m	()Z	cI	ignoreExplosion
	m	()Z	cJ	onlyOpCanSetNbt
	m	()Lbfx;	cK	getControllingPassenger
	m	()Z	cL	hasControllingPassenger
	m	()Ljava/util/List;	cM	getPassengers
	m	()Lbfh;	cN	getFirstPassenger
	m	()Ljava/util/stream/Stream;	cO	getSelfAndPassengers
	m	()Ljava/util/stream/Stream;	cP	getPassengersAndSelf
	m	()Ljava/lang/Iterable;	cQ	getIndirectPassengers
	m	()Z	cR	hasExactlyOnePlayerPassenger
	m	()Lbfh;	cS	getRootVehicle
	m	()Z	cT	isControlledByLocalInstance
	m	()Z	cU	isEffectiveAi
	m	()Lbfh;	cV	getVehicle
	m	()Lbfh;	cW	getControlledVehicle
	m	()Lams;	cX	getSoundSource
	m	()I	cY	getFireImmuneTicks
	m	()Ldr;	cZ	createCommandSourceStack
	m	()V	c_	refreshDimensions
	m	()Z	ca	isInvisible
	m	()Leee;	cb	getTeam
	m	()I	cc	getMaxAirSupply
	m	()I	cd	getAirSupply
	m	()I	ce	getTicksFrozen
	m	()F	cf	getPercentFrozen
	m	()Z	cg	isFullyFrozen
	m	()I	ch	getTicksRequiredToFreeze
	m	()V	ci	checkSlowFallDistance
	m	()Ltj;	cj	getTypeName
	m	()F	ck	getYHeadRot
	m	()Z	cl	isAttackable
	m	()Z	cm	isInvulnerable
	m	()V	cn	removeAfterChangingDimensions
	m	()Z	co	canChangeDimensions
	m	()I	cp	getMaxFallDistance
	m	()Z	cq	isIgnoringBlockTriggers
	m	()Z	cr	displayFireAnimation
	m	()Ljava/util/UUID;	cs	getUUID
	m	()Ljava/lang/String;	ct	getStringUUID
	m	()Ljava/lang/String;	cu	getScoreboardName
	m	()Z	cv	isPushedByFluid
	m	()D	cw	getViewScale
	m	()Z	cx	isCustomNameVisible
	m	()Z	cy	shouldShowName
	m	()V	cz	fixupDimensions
	m	(D)D	d	getRandomX
		p	1		widthScale
	m	(DDD)V	d	moveTo
		p	1		x
		p	3		y
		p	5		z
	m	(Laiq;)V	d	stopSeenByPlayer
		p	1		player
	m	(Lbfh;)Z	d	lambda$startRiding$2
		p	0		passenger
	m	(Lbgj;)Z	d	canEnterPose
		p	1		pose
	m	(Lbym;)Z	d	isInvisibleTo
		p	1		player
	m	(Lede;)V	d	moveTo
		p	1		pos
	m	(Lgt;)V	d	handleInsidePortal
		p	1		pos
	m	(Lre;)Z	d	saveAsPassenger
		p	1		nbt
	m	(Z)V	d	setSilent
		p	1		silent
	m	()F	dA	maxUpStep
	m	()Z	dB	isRemoved
	m	()Lbfh$c;	dC	getRemovalReason
	m	()V	dD	unsetRemoved
	m	()Z	dE	shouldBeSaved
	m	()Z	dF	isAlwaysTicking
	m	()Lben;	dG	damageSources
	m	()Z	d_	acceptsSuccess
	m	()Z	da	touchingUnloadedChunk
	m	()D	db	getFluidJumpThreshold
	m	()F	dc	getBbWidth
	m	()F	dd	getBbHeight
	m	()Lede;	de	position
	m	()Lede;	df	trackingPosition
	m	()Lgt;	dg	blockPosition
	m	()Ldbq;	dh	getFeetBlockState
	m	()Lclp;	di	chunkPosition
	m	()Lede;	dj	getDeltaMovement
	m	()I	dk	getBlockX
	m	()D	dl	getX
	m	()I	dm	getBlockY
	m	()D	dn	getY
	m	()D	do	getRandomY
	m	()D	dp	getEyeY
	m	()I	dq	getBlockZ
	m	()D	dr	getZ
	m	()V	ds	checkDespawn
	m	()Lcfv;	dt	getPickResult
	m	()Z	du	canFreeze
	m	()Z	dv	isFreezing
	m	()F	dw	getYRot
	m	()F	dx	getVisualRotationYInDegrees
	m	()F	dy	getXRot
	m	()Z	dz	canSprint
	m	(D)D	e	getY
		p	1		heightScale
	m	(DDD)V	e	setPos
		p	1		x
		p	3		y
		p	5		z
	m	(F)V	e	setXRot
		p	1		pitch
	m	(I)V	e	setId
		p	1		id
	m	(Lbfh;)F	e	distanceTo
		p	1		entity
	m	(Lbgj;)Lecz;	e	getBoundingBoxForPose
		p	1		pos
	m	(Lede;)D	e	distanceToSqr
		p	1		vector
	m	(Lre;)Z	e	save
		p	1		nbt
	m	(Z)V	e	setNoGravity
		p	1		noGravity
	m	(D)D	f	getZ
		p	1		widthScale
	m	(DDD)V	f	syncPacketPositionCodec
		p	1		x
		p	3		y
		p	5		z
	m	(F)V	f	setYRot
		p	1		yaw
	m	(I)V	f	setSecondsOnFire
		p	1		seconds
	m	(Lbfh;)D	f	distanceToSqr
		p	1		entity
	m	(Lbgj;)F	f	getEyeHeight
		p	1		pose
	m	(Lede;)V	f	setDeltaMovement
		p	1		velocity
	m	(Lre;)Lre;	f	saveWithoutId
		p	1		nbt
	m	(Z)V	f	setShiftKeyDown
		p	1		sneaking
	m	(D)D	g	getRandomZ
		p	1		widthScale
	m	(DDD)Z	g	isFree
		p	1		offsetX
		p	3		offsetY
		p	5		offsetZ
	m	(I)V	g	setRemainingFireTicks
		p	1		fireTicks
	m	(Lbfh;)V	g	push
		p	1		entity
	m	(Lede;)V	g	addDeltaMovement
		p	1		velocity
	m	(Lre;)V	g	load
		p	1		nbt
	m	(Z)V	g	setSprinting
		p	1		sprinting
	m	(DDD)V	h	absMoveTo
		p	1		x
		p	3		y
		p	5		z
	m	(I)Z	h	getSharedFlag
		p	1		index
	m	(Lbfh;)Z	h	canCollideWith
		p	1		other
	m	(Lede;)Lede;	h	collide
		p	1		movement
	m	(Z)V	h	setSwimming
		p	1		swimming
	m	(DDD)D	i	distanceToSqr
		p	1		x
		p	3		y
		p	5		z
	m	(F)V	i	playSwimSound
		p	1		volume
	m	(I)V	i	setAirSupply
		p	1		air
	m	(Lbfh;)V	i	positionRider
		p	1		passenger
	m	(Z)V	i	setGlowingTag
		p	1		glowing
	m	()Z	j	isInRain
	m	(DDD)V	j	push
		p	1		deltaX
		p	3		deltaY
		p	5		deltaZ
	m	(F)Lede;	j	getViewVector
		p	1		tickDelta
	m	(I)V	j	setTicksFrozen
		p	1		frozenTicks
	m	(Lbfh;)V	j	onPassengerTurned
		p	1		passenger
	m	(Z)V	j	setInvisible
		p	1		invisible
	m	()Z	j_	acceptsFailure
	m	()Z	k	isInBubbleColumn
	m	(DDD)Z	k	shouldRender
		p	1		cameraX
		p	3		cameraY
		p	5		cameraZ
	m	(F)F	k	getViewXRot
		p	1		tickDelta
	m	(I)Z	k	hasPermissions
		p	1		permissionLevel
	m	(Lbfh;)Z	k	startRiding
		p	1		entity
	m	(Z)V	k	onAboveBubbleCol
		p	1		drag
	m	()V	l	tick
	m	(DDD)V	l	lerpMotion
		p	1		x
		p	3		y
		p	5		z
	m	(F)F	l	getViewYRot
		p	1		tickDelta
	m	(Lbfh;)Z	l	canRide
		p	1		entity
	m	(Z)V	l	onInsideBubbleColumn
		p	1		drag
	m	(DDD)V	m	moveTowardsClosestSpace
		p	1		x
		p	3		y
		p	5		z
	m	(F)Lede;	m	getUpVector
		p	1		tickDelta
	m	(Lbfh;)V	m	addPassenger
		p	1		passenger
	m	(Z)V	m	setInvulnerable
		p	1		invulnerable
	m	()V	n	resetFallDistance
	m	(DDD)V	n	teleportToWithTicket
		p	1		destX
		p	3		destY
		p	5		destZ
	m	(F)Lede;	n	getEyePosition
		p	1		tickDelta
	m	(Lbfh;)V	n	removePassenger
		p	1		passenger
	m	(Z)V	n	setCustomNameVisible
		p	1		visible
	m	()V	o	updateFluidOnEyes
	m	(DDD)V	o	setDeltaMovement
		p	1		x
		p	3		y
		p	5		z
	m	(F)Lede;	o	getLightProbePosition
		p	1		tickDelta
	m	(Lbfh;)Z	o	canAddPassenger
		p	1		passenger
	m	(Z)V	o	setIsInPowderSnow
		p	1		inPowderSnow
	m	()Ljava/util/stream/Stream;	p	getIndirectPassengersStream
	m	(DDD)V	p	setPosRaw
		p	1		x
		p	3		y
		p	5		z
	m	(F)Lede;	p	getPosition
		p	1		delta
	m	(Lbfh;)Z	p	isAlliedTo
		p	1		other
	m	()Ljava/util/Iterator;	q	lambda$getIndirectPassengers$14
	m	(F)V	q	animateHurt
		p	1		yaw
	m	(Lbfh;)Z	q	is
		p	1		entity
	m	(F)V	r	setYHeadRot
		p	1		headYaw
	m	(Lbfh;)Z	r	skipAttackInteraction
		p	1		attacker
	m	()Ljava/lang/String;	s	lambda$fillCrashReportCategory$10
	m	(F)V	s	setYBodyRot
		p	1		bodyYaw
	m	(Lbfh;)V	s	copyPosition
		p	1		entity
	m	()Ljava/lang/String;	t	lambda$fillCrashReportCategory$9
	m	(F)Lede;	t	getLeashOffset
		p	1		tickDelta
	m	(Lbfh;)V	t	restoreFrom
		p	1		original
	m	(F)Lede;	u	getRopeHoldPosition
		p	1		delta
	m	(Lbfh;)Z	u	hasPassenger
		p	1		passenger
	m	(F)V	v	setMaxUpStep
		p	1		stepHeight
	m	(Lbfh;)Z	v	isPassengerOfSameVehicle
		p	1		entity
	m	(Lbfh;)Z	w	hasIndirectPassenger
		p	1		passenger
	m	()Ljava/lang/String;	x	lambda$fillCrashReportCategory$8
	m	()Ljava/lang/String;	y	lambda$fillCrashReportCategory$7
	f	D	A	DELTA_AFFECTED_BY_BLOCKS_BELOW
	f	F	B	BREATHING_DISTANCE_BELOW_EYES
	f	I	C	BASE_TICKS_REQUIRED_TO_FREEZE
	f	I	D	FREEZE_HURT_FREQUENCY
	f	Ljava/lang/String;	E	UUID_TAG
	f	Z	F	blocksBuilding
	f	I	G	boardingCooldown
	f	Lcmi;	H	level
	f	D	I	xo
	f	D	J	yo
	f	D	K	zo
	f	F	L	yRotO
	f	F	M	xRotO
	f	Z	N	onGround
	f	Z	O	horizontalCollision
	f	Z	P	verticalCollision
	f	Z	Q	verticalCollisionBelow
	f	Z	R	minorHorizontalCollision
	f	Z	S	hurtMarked
	f	Lede;	T	stuckSpeedMultiplier
	f	F	U	DEFAULT_BB_WIDTH
	f	F	V	DEFAULT_BB_HEIGHT
	f	F	W	walkDistO
	f	F	X	walkDist
	f	F	Y	moveDist
	f	F	Z	flyDist
	f	Z	aA	wasInPowderSnow
	f	Z	aB	wasOnFire
	f	Lclp;	aC	chunkPosition
	f	Lede;	aD	deltaMovement
	f	F	aE	yRot
	f	F	aF	xRot
	f	Lecz;	aG	bb
	f	Lbfh$c;	aH	removalReason
	f	F	aI	nextStep
	f	F	aJ	maxUpStep
	f	I	aK	remainingFireTicks
	f	Ljava/util/Set;	aL	fluidOnEyes
	f	I	aM	FLAG_SHIFT_KEY_DOWN
	f	I	aN	FLAG_SPRINTING
	f	I	aO	FLAG_SWIMMING
	f	I	aP	FLAG_INVISIBLE
	f	Lacl;	aQ	DATA_AIR_SUPPLY_ID
	f	Lacl;	aR	DATA_CUSTOM_NAME
	f	Lacl;	aS	DATA_CUSTOM_NAME_VISIBLE
	f	Lacl;	aT	DATA_SILENT
	f	Lacl;	aU	DATA_NO_GRAVITY
	f	Lacl;	aV	DATA_TICKS_FROZEN
	f	Ldfi;	aW	levelCallback
	f	Labm;	aX	packetPositionCodec
	f	I	aY	portalCooldown
	f	Z	aZ	invulnerable
	f	F	aa	fallDistance
	f	D	ab	xOld
	f	D	ac	yOld
	f	D	ad	zOld
	f	Z	ae	noPhysics
	f	Lapo;	af	random
	f	I	ag	tickCount
	f	Z	ah	wasTouchingWater
	f	Lit/unimi/dsi/fastutil/objects/Object2DoubleMap;	ai	fluidHeight
	f	Z	aj	wasEyeInWater
	f	I	ak	invulnerableTime
	f	Z	al	firstTick
	f	Laco;	am	entityData
	f	Lacl;	an	DATA_SHARED_FLAGS_ID
	f	I	ao	FLAG_ONFIRE
	f	I	ap	FLAG_GLOWING
	f	I	aq	FLAG_FALL_FLYING
	f	Lacl;	ar	DATA_POSE
	f	Z	as	noCulling
	f	Z	at	hasImpulse
	f	Z	au	isInsidePortal
	f	I	av	portalTime
	f	Lgt;	aw	portalEntrancePos
	f	Ljava/util/UUID;	ax	uuid
	f	Ljava/lang/String;	ay	stringUUID
	f	Z	az	isInPowderSnow
	f	Z	ba	hasGlowingTag
	f	Ljava/util/Set;	bb	tags
	f	[D	bc	pistonDeltas
	f	J	bd	pistonDeltasGameTime
	f	Lbfi;	be	dimensions
	f	F	bf	eyeHeight
	f	F	bg	crystalSoundIntensity
	f	I	bh	lastCrystalSoundPlayTick
	f	Z	bi	hasVisualFire
	f	Ldbq;	bj	feetBlockState
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	Ljava/util/concurrent/atomic/AtomicInteger;	d	ENTITY_COUNTER
	f	Ljava/util/List;	e	EMPTY_LIST
	f	Lecz;	k	INITIAL_AABB
	f	D	l	WATER_FLOW_SCALE
	f	D	m	LAVA_FAST_FLOW_SCALE
	f	D	n	LAVA_SLOW_FLOW_SCALE
	f	D	o	viewScale
	f	Lbfl;	p	type
	f	I	q	id
	f	Lcom/google/common/collect/ImmutableList;	r	passengers
	f	Lbfh;	s	vehicle
	f	Lede;	t	position
	f	Lgt;	u	blockPosition
	f	Ljava/lang/String;	v	ID_TAG
	f	Ljava/lang/String;	w	PASSENGERS_TAG
	f	I	x	BOARDING_COOLDOWN
	f	I	y	TOTAL_AIR_SUPPLY
	f	I	z	MAX_ENTITY_TAG_COUNT
c	bfh$1	net/minecraft/world/entity/Entity$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$Rotation
	f	[I	b	$SwitchMap$net$minecraft$world$level$block$Mirror
c	bfh$a	net/minecraft/world/entity/Entity$MoveFunction
	m	(Lbfh;DDD)V	accept	accept
		p	1		entity
		p	2		x
		p	4		y
		p	6		z
c	bfh$b	net/minecraft/world/entity/Entity$MovementEmission
	m	(Ljava/lang/String;IZZ)V	<init>	<init>
		p	3		sounds
		p	4		events
	m	()Z	a	emitsAnything
	m	()Z	b	emitsEvents
	m	()Z	c	emitsSounds
	m	()[Lbfh$b;	d	$values
	f	Lbfh$b;	a	NONE
	f	Lbfh$b;	b	SOUNDS
	f	Lbfh$b;	c	EVENTS
	f	Lbfh$b;	d	ALL
	f	Z	e	sounds
	f	Z	f	events
	f	[Lbfh$b;	g	$VALUES
c	bfh$c	net/minecraft/world/entity/Entity$RemovalReason
	m	(Ljava/lang/String;IZZ)V	<init>	<init>
		p	3		destroy
		p	4		save
	m	()Z	a	shouldDestroy
	m	()Z	b	shouldSave
	m	()[Lbfh$c;	c	$values
	f	Lbfh$c;	a	KILLED
	f	Lbfh$c;	b	DISCARDED
	f	Lbfh$c;	c	UNLOADED_TO_CHUNK
	f	Lbfh$c;	d	UNLOADED_WITH_PLAYER
	f	Lbfh$c;	e	CHANGED_DIMENSION
	f	Z	f	destroy
	f	Z	g	save
	f	[Lbfh$c;	h	$VALUES
c	bfi	net/minecraft/world/entity/EntityDimensions
	m	(FFZ)V	<init>	<init>
		p	1		width
		p	2		height
		p	3		fixed
	m	(DDD)Lecz;	a	makeBoundingBox
		p	1		x
		p	3		y
		p	5		z
	m	(F)Lbfi;	a	scale
		p	1		ratio
	m	(FF)Lbfi;	a	scale
		p	1		widthRatio
		p	2		heightRatio
	m	(Lede;)Lecz;	a	makeBoundingBox
		p	1		pos
	m	(FF)Lbfi;	b	scalable
		p	0		width
		p	1		height
	m	(FF)Lbfi;	c	fixed
		p	0		width
		p	1		height
	f	F	a	width
	f	F	b	height
	f	Z	c	fixed
c	bfj	net/minecraft/world/entity/EntityEvent
	f	B	A	PERMISSION_LEVEL_OWNERS
	f	B	B	ATTACK_BLOCKED
	f	B	C	SHIELD_DISABLED
	f	B	D	FISHING_ROD_REEL_IN
	f	B	E	ARMORSTAND_WOBBLE
	f	B	F	STOP_OFFER_FLOWER
	f	B	G	TALISMAN_ACTIVATE
	f	B	H	DOLPHIN_LOOKING_FOR_TREASURE
	f	B	I	RAVAGER_STUNNED
	f	B	J	TRUSTING_FAILED
	f	B	K	TRUSTING_SUCCEEDED
	f	B	L	VILLAGER_SWEAT
	f	B	M	BAD_OMEN_TRIGGERED
	f	B	N	FOX_EAT
	f	B	O	TELEPORT
	f	B	P	MAINHAND_BREAK
	f	B	Q	OFFHAND_BREAK
	f	B	R	HEAD_BREAK
	f	B	S	CHEST_BREAK
	f	B	T	LEGS_BREAK
	f	B	U	FEET_BREAK
	f	B	V	HONEY_SLIDE
	f	B	W	HONEY_JUMP
	f	B	X	SWAP_HANDS
	f	B	Y	CANCEL_SHAKE_WETNESS
	f	B	Z	START_RAM
	f	B	a	JUMP
	f	B	aa	END_RAM
	f	B	ab	POOF
	f	B	ac	TENDRILS_SHIVER
	f	B	ad	SONIC_CHARGE
	f	B	ae	SNIFFER_DIGGING_SOUND
	f	B	b	DEATH
	f	B	c	START_ATTACKING
	f	B	d	STOP_ATTACKING
	f	B	e	TAMING_FAILED
	f	B	f	TAMING_SUCCEEDED
	f	B	g	SHAKE_WETNESS
	f	B	h	USE_ITEM_COMPLETE
	f	B	i	EAT_GRASS
	f	B	j	OFFER_FLOWER
	f	B	k	LOVE_HEARTS
	f	B	l	VILLAGER_ANGRY
	f	B	m	VILLAGER_HAPPY
	f	B	n	WITCH_HAT_MAGIC
	f	B	o	ZOMBIE_CONVERTING
	f	B	p	FIREWORKS_EXPLODE
	f	B	q	IN_LOVE_HEARTS
	f	B	r	SQUID_ANIM_SYNCH
	f	B	s	SILVERFISH_MERGE_ANIM
	f	B	t	GUARDIAN_ATTACK_SOUND
	f	B	u	REDUCED_DEBUG_INFO
	f	B	v	FULL_DEBUG_INFO
	f	B	w	PERMISSION_LEVEL_ALL
	f	B	x	PERMISSION_LEVEL_MODERATORS
	f	B	y	PERMISSION_LEVEL_GAMEMASTERS
	f	B	z	PERMISSION_LEVEL_ADMINS
c	bfk	net/minecraft/world/entity/EntitySelector
	m	(DDDD)Ljava/util/function/Predicate;	a	withinDistance
		p	0		x
		p	2		y
		p	4		z
		p	6		max
	m	(DDDDLbfh;)Z	a	lambda$withinDistance$5
		p	8		entity
	m	(Lbfh;)Ljava/util/function/Predicate;	a	pushableBy
		p	0		entity
	m	(Lbfh;Lbfh;)Z	a	lambda$notRiding$7
		p	1		testedEntity
	m	(Lbfh;Leee;Leee$a;Lbfh;)Z	a	lambda$pushableBy$6
		p	3		entity
	m	(Lbfh;)Ljava/util/function/Predicate;	b	notRiding
		p	0		entity
	m	(Lbfh;)Z	c	lambda$static$4
		p	0		entity
	m	(Lbfh;)Z	d	lambda$static$3
		p	0		entity
	m	(Lbfh;)Z	e	lambda$static$2
		p	0		entity
	m	(Lbfh;)Z	f	lambda$static$1
		p	0		entity
	m	(Lbfh;)Z	g	lambda$static$0
		p	0		entity
	f	Ljava/util/function/Predicate;	a	ENTITY_STILL_ALIVE
	f	Ljava/util/function/Predicate;	b	LIVING_ENTITY_STILL_ALIVE
	f	Ljava/util/function/Predicate;	c	ENTITY_NOT_BEING_RIDDEN
	f	Ljava/util/function/Predicate;	d	CONTAINER_ENTITY_SELECTOR
	f	Ljava/util/function/Predicate;	e	NO_CREATIVE_OR_SPECTATOR
	f	Ljava/util/function/Predicate;	f	NO_SPECTATORS
	f	Ljava/util/function/Predicate;	g	CAN_BE_COLLIDED_WITH
c	bfk$a	net/minecraft/world/entity/EntitySelector$MobCanWearArmorEntitySelector
	m	(Lcfv;)V	<init>	<init>
		p	1		stack
	m	(Lbfh;)Z	a	test
	f	Lcfv;	a	itemStack
c	bfl	net/minecraft/world/entity/EntityType
	m	(Lbfl$b;Lbga;ZZZZLcom/google/common/collect/ImmutableSet;Lbfi;IILcau;)V	<init>	<init>
		p	1		factory
		p	2		spawnGroup
		p	3		saveable
		p	4		summonable
		p	5		fireImmune
		p	6		spawnableFarFromPlayer
		p	7		canSpawnInside
		p	8		dimensions
		p	9		maxTrackDistance
		p	10		trackTickInterval
		p	11		requiredFeatures
	m	()Ljava/lang/Class;	a	getBaseClass
	m	(DDD)Lecz;	a	getAABB
		p	1		feetX
		p	3		feetY
		p	5		feetZ
	m	(Laip;Lbym;Lre;Lbfh;)V	a	lambda$appendCustomEntityStackConfig$3
		p	3		entity
	m	(Laip;Lcfv;Lbym;)Ljava/util/function/Consumer;	a	createDefaultStackConfig
		p	0		world
		p	1		stack
		p	2		player
	m	(Laip;Lcfv;Lbym;Lgt;Lbgb;ZZ)Lbfh;	a	spawn
		p	1		world
		p	2		stack
		p	3		player
		p	4		pos
		p	5		spawnReason
		p	6		alignPosition
		p	7		invertY
	m	(Laip;Lgt;Lbgb;)Lbfh;	a	spawn
		p	1		world
		p	2		pos
		p	3		reason
	m	(Laip;Lre;Ljava/util/function/Consumer;Lgt;Lbgb;ZZ)Lbfh;	a	spawn
		p	1		world
		p	2		itemNbt
		p	3		afterConsumer
		p	4		pos
		p	5		reason
		p	6		alignPosition
		p	7		invertY
	m	(Lanv;)Z	a	is
		p	1		tag
	m	(Lbfh;)Lbfh;	a	tryCast
		p	1		obj
	m	(Lbfl;)Ladd;	a	getKey
		p	0		type
	m	(Lcfv;Lbfh;)V	a	lambda$appendCustomNameConfig$2
		p	1		entity
	m	(Lcmi;)Lbfh;	a	create
		p	1		world
	m	(Lcmi;Lbfl;)Lbfh;	a	lambda$create$4
		p	1		entityType
	m	(Lcmi;Lbym;Lbfh;Lre;)V	a	updateCustomEntityTag
		p	0		world
		p	1		player
		p	2		entity
		p	3		itemNbt
	m	(Lcml;Lgt;ZLecz;)D	a	getYOffset
		p	0		world
		p	1		pos
		p	2		invertY
		p	3		boundingBox
	m	(Ldbq;)Z	a	isBlockDangerous
		p	1		state
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	tryCast
		p	1		obj
	m	(Ljava/lang/String;)Ljava/util/Optional;	a	byString
		p	0		id
	m	(Ljava/lang/String;Lbfl$a;)Lbfl;	a	register
		p	0		id
		p	1		type
	m	(Ljava/util/List;Lcmi;)Ljava/util/stream/Stream;	a	loadEntitiesRecursive
		p	0		entityNbtList
		p	1		world
	m	(Ljava/util/function/Consumer;Laip;Lcfv;Lbym;)Ljava/util/function/Consumer;	a	appendDefaultStackConfig
		p	0		chained
		p	1		world
		p	2		stack
		p	3		player
	m	(Ljava/util/function/Consumer;Lcfv;)Ljava/util/function/Consumer;	a	appendCustomNameConfig
		p	0		chained
		p	1		stack
	m	(Lre;)Ljava/util/Optional;	a	by
		p	0		nbt
	m	(Lre;Lbfh;)V	a	lambda$create$5
		p	1		entity
	m	(Lre;Lcmi;)Ljava/util/Optional;	a	create
		p	0		nbt
		p	1		world
	m	(Lre;Lcmi;Ljava/util/function/Function;)Lbfh;	a	loadEntityRecursive
		p	0		nbt
		p	1		world
		p	2		entityProcessor
	m	(Lre;Lcmi;Ljava/util/function/Function;Lbfh;)Lbfh;	a	lambda$loadEntityRecursive$7
		p	3		entity
	m	()Z	b	canSerialize
	m	(Laip;Lre;Ljava/util/function/Consumer;Lgt;Lbgb;ZZ)Lbfh;	b	create
		p	1		world
		p	2		itemNbt
		p	3		afterConsumer
		p	4		pos
		p	5		reason
		p	6		alignPosition
		p	7		invertY
	m	(Lbfh;)V	b	lambda$createDefaultStackConfig$1
		p	0		entity
	m	(Ljava/util/function/Consumer;Laip;Lcfv;Lbym;)Ljava/util/function/Consumer;	b	appendCustomEntityStackConfig
		p	0		chained
		p	1		world
		p	2		stack
		p	3		player
	m	(Lre;)V	b	lambda$create$6
	m	(Lre;Lcmi;)Ljava/util/Optional;	b	loadStaticEntity
		p	0		nbt
		p	1		world
	m	()Z	c	canSummon
	m	(Lbfh;)V	c	lambda$spawn$0
		p	0		entity
	m	()Z	d	fireImmune
	m	()Z	e	canSpawnFarFromPlayer
	m	()Lbga;	f	getCategory
	m	()Ljava/lang/String;	g	getDescriptionId
	m	()Ltj;	h	getDescription
	m	()Ljava/lang/String;	i	toShortString
	m	()Ladd;	j	getDefaultLootTable
	m	()F	k	getWidth
	m	()F	l	getHeight
	m	()Lcau;	m	requiredFeatures
	m	()Lbfi;	n	getDimensions
	m	()I	o	clientTrackingRange
	m	()I	p	updateInterval
	m	()Z	q	trackDeltas
	m	()Lhd$c;	r	builtInRegistryHolder
	f	Lbfl;	A	ELDER_GUARDIAN
	f	Lbfl;	B	END_CRYSTAL
	f	Lbfl;	C	ENDER_DRAGON
	f	Lbfl;	D	ENDER_PEARL
	f	Lbfl;	E	ENDERMAN
	f	Lbfl;	F	ENDERMITE
	f	Lbfl;	G	EVOKER
	f	Lbfl;	H	EVOKER_FANGS
	f	Lbfl;	I	EXPERIENCE_BOTTLE
	f	Lbfl;	J	EXPERIENCE_ORB
	f	Lbfl;	K	EYE_OF_ENDER
	f	Lbfl;	L	FALLING_BLOCK
	f	Lbfl;	M	FIREWORK_ROCKET
	f	Lbfl;	N	FOX
	f	Lbfl;	O	FROG
	f	Lbfl;	P	FURNACE_MINECART
	f	Lbfl;	Q	GHAST
	f	Lbfl;	R	GIANT
	f	Lbfl;	S	GLOW_ITEM_FRAME
	f	Lbfl;	T	GLOW_SQUID
	f	Lbfl;	U	GOAT
	f	Lbfl;	V	GUARDIAN
	f	Lbfl;	W	HOGLIN
	f	Lbfl;	X	HOPPER_MINECART
	f	Lbfl;	Y	HORSE
	f	Lbfl;	Z	HUSK
	f	Lbfl;	aA	POTION
	f	Lbfl;	aB	PUFFERFISH
	f	Lbfl;	aC	RABBIT
	f	Lbfl;	aD	RAVAGER
	f	Lbfl;	aE	SALMON
	f	Lbfl;	aF	SHEEP
	f	Lbfl;	aG	SHULKER
	f	Lbfl;	aH	SHULKER_BULLET
	f	Lbfl;	aI	SILVERFISH
	f	Lbfl;	aJ	SKELETON
	f	Lbfl;	aK	SKELETON_HORSE
	f	Lbfl;	aL	SLIME
	f	Ljava/lang/String;	a	ENTITY_TAG
	f	Lbfl;	aM	SMALL_FIREBALL
	f	Lbfl;	aN	SNIFFER
	f	Lbfl;	aO	SNOW_GOLEM
	f	Lbfl;	aP	SNOWBALL
	f	Lbfl;	aQ	SPAWNER_MINECART
	f	Lbfl;	aR	SPECTRAL_ARROW
	f	Lbfl;	aS	SPIDER
	f	Lbfl;	aT	SQUID
	f	Lbfl;	aU	STRAY
	f	Lbfl;	aV	STRIDER
	f	Lbfl;	aW	TADPOLE
	f	Lbfl;	aX	TEXT_DISPLAY
	f	Lbfl;	aY	TNT
	f	Lbfl;	aZ	TNT_MINECART
	f	Lbfl;	aa	ILLUSIONER
	f	Lbfl;	ab	INTERACTION
	f	Lbfl;	ac	IRON_GOLEM
	f	Lbfl;	ad	ITEM
	f	Lbfl;	ae	ITEM_DISPLAY
	f	Lbfl;	af	ITEM_FRAME
	f	Lbfl;	ag	FIREBALL
	f	Lbfl;	ah	LEASH_KNOT
	f	Lbfl;	ai	LIGHTNING_BOLT
	f	Lbfl;	aj	LLAMA
	f	Lbfl;	ak	LLAMA_SPIT
	f	Lbfl;	al	MAGMA_CUBE
	f	Lbfl;	am	MARKER
	f	Lbfl;	an	MINECART
	f	Lbfl;	ao	MOOSHROOM
	f	Lbfl;	ap	MULE
	f	Lbfl;	aq	OCELOT
	f	Lbfl;	ar	PAINTING
	f	Lbfl;	as	PANDA
	f	Lbfl;	at	PARROT
	f	Lbfl;	au	PHANTOM
	f	Lbfl;	av	PIG
	f	Lbfl;	aw	PIGLIN
	f	Lbfl;	ax	PIGLIN_BRUTE
	f	Lbfl;	ay	PILLAGER
	f	Lbfl;	az	POLAR_BEAR
	f	Lbfl$b;	bA	factory
	f	Lbga;	bB	category
	f	Lcom/google/common/collect/ImmutableSet;	bC	immuneTo
	f	Z	bD	serialize
	f	Z	bE	summon
	f	Z	bF	fireImmune
	f	Z	bG	canSpawnFarFromPlayer
	f	I	bH	clientTrackingRange
	f	I	bI	updateInterval
	f	Ljava/lang/String;	bJ	descriptionId
	f	Ltj;	bK	description
	f	Ladd;	bL	lootTable
	f	Lbfl;	b	ALLAY
	f	Lbfi;	bM	dimensions
	f	Lcau;	bN	requiredFeatures
	f	Lbfl;	ba	TRADER_LLAMA
	f	Lbfl;	bb	TRIDENT
	f	Lbfl;	bc	TROPICAL_FISH
	f	Lbfl;	bd	TURTLE
	f	Lbfl;	be	VEX
	f	Lbfl;	bf	VILLAGER
	f	Lbfl;	bg	VINDICATOR
	f	Lbfl;	bh	WANDERING_TRADER
	f	Lbfl;	bi	WARDEN
	f	Lbfl;	bj	WITCH
	f	Lbfl;	bk	WITHER
	f	Lbfl;	bl	WITHER_SKELETON
	f	Lbfl;	bm	WITHER_SKULL
	f	Lbfl;	bn	WOLF
	f	Lbfl;	bo	ZOGLIN
	f	Lbfl;	bp	ZOMBIE
	f	Lbfl;	bq	ZOMBIE_HORSE
	f	Lbfl;	br	ZOMBIE_VILLAGER
	f	Lbfl;	bs	ZOMBIFIED_PIGLIN
	f	Lbfl;	bt	PLAYER
	f	Lbfl;	bu	FISHING_BOBBER
	f	Lorg/slf4j/Logger;	bw	LOGGER
	f	Lhd$c;	bx	builtInRegistryHolder
	f	F	by	MAGIC_HORSE_WIDTH
	f	I	bz	DISPLAY_TRACKING_RANGE
	f	Lbfl;	c	AREA_EFFECT_CLOUD
	f	Lbfl;	d	ARMOR_STAND
	f	Lbfl;	e	ARROW
	f	Lbfl;	f	AXOLOTL
	f	Lbfl;	g	BAT
	f	Lbfl;	h	BEE
	f	Lbfl;	i	BLAZE
	f	Lbfl;	j	BLOCK_DISPLAY
	f	Lbfl;	k	BOAT
	f	Lbfl;	l	CAMEL
	f	Lbfl;	m	CAT
	f	Lbfl;	n	CAVE_SPIDER
	f	Lbfl;	o	CHEST_BOAT
	f	Lbfl;	p	CHEST_MINECART
	f	Lbfl;	q	CHICKEN
	f	Lbfl;	r	COD
	f	Lbfl;	s	COMMAND_BLOCK_MINECART
	f	Lbfl;	t	COW
	f	Lbfl;	u	CREEPER
	f	Lbfl;	v	DOLPHIN
	f	Lbfl;	w	DONKEY
	f	Lbfl;	x	DRAGON_FIREBALL
	f	Lbfl;	y	DROWNED
	f	Lbfl;	z	EGG
c	bfl$1	net/minecraft/world/entity/EntityType$1
	m	(Lcmi;Ljava/util/function/Consumer;Lrx;)V	a	lambda$tryAdvance$1
		p	2		nbt
	m	(Ljava/util/function/Consumer;Lbfh;)Lbfh;	a	lambda$tryAdvance$0
		p	1		entity
	f	Ljava/util/Spliterator;	a	val$tagSpliterator
	f	Lcmi;	b	val$level
	f	Ljava/util/List;	c	val$entities
c	bfl$a	net/minecraft/world/entity/EntityType$Builder
	m	(Lbfl$b;Lbga;)V	<init>	<init>
		p	1		factory
		p	2		spawnGroup
	m	()Lbfl$a;	a	noSummon
	m	(FF)Lbfl$a;	a	sized
		p	1		width
		p	2		height
	m	(I)Lbfl$a;	a	clientTrackingRange
		p	1		maxTrackingRange
	m	(Lbfl$b;Lbga;)Lbfl$a;	a	of
		p	0		factory
		p	1		spawnGroup
	m	(Lbfl;Lcmi;)Lbfh;	a	lambda$createNothing$0
		p	0		type
		p	1		world
	m	(Lbga;)Lbfl$a;	a	createNothing
		p	0		spawnGroup
	m	(Ljava/lang/String;)Lbfl;	a	build
		p	1		id
	m	([Lcas;)Lbfl$a;	a	requiredFeatures
		p	1		features
	m	([Lcpi;)Lbfl$a;	a	immuneTo
		p	1		blocks
	m	()Lbfl$a;	b	noSave
	m	(I)Lbfl$a;	b	updateInterval
		p	1		trackingTickInterval
	m	()Lbfl$a;	c	fireImmune
	m	()Lbfl$a;	d	canSpawnFarFromPlayer
	f	Lbfl$b;	a	factory
	f	Lbga;	b	category
	f	Lcom/google/common/collect/ImmutableSet;	c	immuneTo
	f	Z	d	serialize
	f	Z	e	summon
	f	Z	f	fireImmune
	f	Z	g	canSpawnFarFromPlayer
	f	I	h	clientTrackingRange
	f	I	i	updateInterval
	f	Lbfi;	j	dimensions
	f	Lcau;	k	requiredFeatures
c	bfl$b	net/minecraft/world/entity/EntityType$EntityFactory
	m	(Lbfl;Lcmi;)Lbfh;	create	create
		p	1		type
		p	2		world
c	bfm	net/minecraft/world/entity/EquipmentSlot
	m	(Ljava/lang/String;ILbfm$a;IILjava/lang/String;)V	<init>	<init>
		p	3		type
		p	4		entityId
		p	5		armorStandId
		p	6		name
	m	()Lbfm$a;	a	getType
	m	(I)I	a	getIndex
		p	1		offset
	m	(Lbfm$a;I)Lbfm;	a	byTypeAndIndex
		p	0		type
		p	1		index
	m	(Ljava/lang/String;)Lbfm;	a	byName
		p	0		name
	m	()I	b	getIndex
	m	()I	c	getFilterFlag
	m	()Ljava/lang/String;	d	getName
	m	()Z	e	isArmor
	m	()[Lbfm;	f	$values
	f	Lbfm;	a	MAINHAND
	f	Lbfm;	b	OFFHAND
	f	Lbfm;	c	FEET
	f	Lbfm;	d	LEGS
	f	Lbfm;	e	CHEST
	f	Lbfm;	f	HEAD
	f	Lbfm$a;	g	type
	f	I	h	index
	f	I	i	filterFlag
	f	Ljava/lang/String;	j	name
	f	[Lbfm;	k	$VALUES
c	bfm$a	net/minecraft/world/entity/EquipmentSlot$Type
	m	()[Lbfm$a;	a	$values
	f	Lbfm$a;	a	HAND
	f	Lbfm$a;	b	ARMOR
	f	[Lbfm$a;	c	$VALUES
c	bfn	net/minecraft/world/entity/ExperienceOrb
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcmi;DDDI)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
		p	8		amount
	m	()Lvb;	S	getAddEntityPacket
	m	(IILbfn;)Z	a	lambda$tryMergeToExisting$0
		p	2		orb
	m	(Laip;Lede;I)V	a	award
		p	0		world
		p	1		pos
		p	2		amount
	m	(Lbem;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbfn;)Z	a	canMerge
		p	1		other
	m	(Lbfn;II)Z	a	canMerge
		p	0		orb
		p	1		seed
		p	2		amount
	m	(Lbym;I)I	a	repairPlayerItems
		p	1		player
		p	2		amount
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()Lbfh$b;	aQ	getMovementEmission
	m	()V	a_	defineSynchedData
	m	(I)I	b	getExperienceValue
		p	0		value
	m	(Laip;Lede;I)Z	b	tryMergeToExisting
		p	0		world
		p	1		pos
		p	2		amount
	m	(Lbfn;)V	b	merge
		p	1		other
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lbym;)V	b_	playerTouch
		p	1		player
	m	()V	bb	doWaterSplashEffect
	m	(I)I	c	durabilityToXp
		p	1		repairAmount
	m	()Lams;	cX	getSoundSource
	m	()Z	cl	isAttackable
	m	(I)I	d	xpToDurability
		p	1		experienceAmount
	m	()I	i	getValue
	m	()I	j	getIcon
	m	()V	k	scanForEntities
	m	()V	l	tick
	m	()V	o	setUnderwaterMovement
	f	I	b	LIFETIME
	f	I	c	ENTITY_SCAN_PERIOD
	f	I	d	MAX_FOLLOW_DIST
	f	I	e	ORB_GROUPS_PER_AREA
	f	D	f	ORB_MERGE_DISTANCE
	f	I	g	age
	f	I	h	health
	f	I	i	value
	f	I	j	count
	f	Lbym;	k	followingPlayer
c	bfo	net/minecraft/world/entity/FlyingMob
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(DZLdbq;Lgt;)V	a	checkFallDamage
		p	1		heightDifference
		p	3		onGround
		p	4		state
		p	5		landedPosition
	m	(Lede;)V	h	travel
		p	1		movementInput
	m	()Z	z_	onClimbable
c	bfp	net/minecraft/world/entity/GlowSquid
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lbem;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbfl;Lcmx;Lbgb;Lgt;Lapo;)Z	a	checkGlowSquideSpawnRules
		p	0		type
		p	1		world
		p	2		reason
		p	3		pos
		p	4		random
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()V	b_	aiStep
	m	(I)V	c	setDarkTicks
		p	1		ticks
	m	(Lbem;)Lamq;	d	getHurtSound
		p	1		source
	m	()Lis;	q	getInkParticle
	m	()Lamq;	r	getSquirtSound
	m	()Lamq;	s	getAmbientSound
	m	()I	w	getDarkTicksRemaining
	m	()Lamq;	x_	getDeathSound
	f	Lacl;	bW	DATA_DARK_TICKS_REMAINING
c	bfq	net/minecraft/world/entity/HasCustomInventoryScreen
	m	(Lbym;)V	b	openCustomInventoryScreen
		p	1		player
c	bfr	net/minecraft/world/entity/HumanoidArm
	m	(Ljava/lang/String;IILjava/lang/String;)V	<init>	<init>
		p	3		id
		p	4		translationKey
	m	()I	a	getId
	m	()Ljava/lang/String;	b	getKey
	m	()Lbfr;	d	getOpposite
	m	()[Lbfr;	e	$values
	f	Lbfr;	a	LEFT
	f	Lbfr;	b	RIGHT
	f	I	c	id
	f	Ljava/lang/String;	d	name
	f	[Lbfr;	e	$VALUES
c	bfs	net/minecraft/world/entity/Interaction
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()Ldwp;	C_	getPistonPushReaction
	m	()Lbfx;	L_	getLastAttacker
	m	()Lbfx;	P_	getTarget
	m	(F)V	a	setWidth
		p	1		width
	m	(Lacl;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Lbgj;)Lbfi;	a	getDimensions
		p	1		pose
	m	(Lbym;Lbdx;)Lbdy;	a	interact
		p	1		player
		p	2		hand
	m	(Lcom/mojang/datafixers/util/Pair;)V	a	lambda$readAdditionalSaveData$1
		p	1		pair
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lre;Lrx;)V	a	lambda$addAdditionalSaveData$3
	m	(Z)V	a	setResponse
		p	1		response
	m	()V	a_	defineSynchedData
	m	()Lecz;	am	makeBoundingBox
	m	(F)V	b	setHeight
		p	1		height
	m	(Lcom/mojang/datafixers/util/Pair;)V	b	lambda$readAdditionalSaveData$0
		p	1		pair
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lre;Lrx;)V	b	lambda$addAdditionalSaveData$2
	m	()Z	bl	canBeHitByProjectile
	m	()Z	bm	isPickable
	m	()F	j	getWidth
	m	()F	k	getHeight
	m	()V	l	tick
	m	()Z	o	getResponse
	m	()Lbfi;	p	getDimensions
	m	(Lbfh;)Z	r	skipAttackInteraction
		p	1		attacker
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Lacl;	c	DATA_WIDTH_ID
	f	Lacl;	d	DATA_HEIGHT_ID
	f	Lacl;	e	DATA_RESPONSE_ID
	f	Ljava/lang/String;	f	TAG_WIDTH
	f	Ljava/lang/String;	g	TAG_HEIGHT
	f	Ljava/lang/String;	h	TAG_ATTACK
	f	Ljava/lang/String;	i	TAG_INTERACTION
	f	Ljava/lang/String;	j	TAG_RESPONSE
	f	Lbfs$a;	k	attack
	f	Lbfs$a;	l	interaction
c	bfs$a	net/minecraft/world/entity/Interaction$PlayerAction
	m	()Ljava/util/UUID;	a	player
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()J	b	timestamp
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/UUID;	b	player
	f	J	c	timestamp
c	bft	net/minecraft/world/entity/ItemBasedSteering
	m	(Laco;Lacl;Lacl;)V	<init>	<init>
		p	1		dataTracker
		p	2		boostTime
		p	3		saddled
	m	()V	a	onSynced
	m	(Lapo;)Z	a	boost
		p	1		random
	m	(Lre;)V	a	addAdditionalSaveData
		p	1		nbt
	m	(Z)V	a	setSaddle
		p	1		saddled
	m	()V	b	tickBoost
	m	(Lre;)V	b	readAdditionalSaveData
		p	1		nbt
	m	()F	c	boostFactor
	m	()Z	d	hasSaddle
	m	()I	e	boostTimeTotal
	f	I	a	MIN_BOOST_TIME
	f	I	b	MAX_BOOST_TIME
	f	Laco;	c	entityData
	f	Lacl;	d	boostTimeAccessor
	f	Lacl;	e	hasSaddleAccessor
	f	Z	f	boosting
	f	I	g	boostTime
c	bfu	net/minecraft/world/entity/ItemSteerable
	m	()Z	a	boost
c	bfv	net/minecraft/world/entity/LerpingModel
	m	()Ljava/util/Map;	a	getModelRotationValues
c	bfw	net/minecraft/world/entity/LightningBolt
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(D)Z	a	shouldRenderAtSqrDistance
		p	1		distance
	m	(Lbfh;)Z	a	lambda$tick$0
	m	(Lcmi;Lgt;Ldbq;)V	a	lambda$randomStepCleaningCopper$2
		p	2		state
	m	(Lcmi;Lgt;Lgt$a;I)V	a	randomWalkCleaningCopper
		p	0		world
		p	1		pos
		p	2		mutablePos
		p	3		count
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Z)V	a	setVisualOnly
		p	1		cosmetic
	m	()V	a_	defineSynchedData
	m	(I)V	b	spawnFire
		p	1		spreadAttempts
	m	(Laiq;)V	b	setCause
		p	1		channeler
	m	(Lcmi;Lgt;)V	b	clearCopperOnLightningStrike
		p	0		world
		p	1		pos
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lcmi;Lgt;)Ljava/util/Optional;	c	randomStepCleaningCopper
		p	0		world
		p	1		pos
	m	()Lams;	cX	getSoundSource
	m	(Laiq;)Z	e	lambda$tick$1
	m	()Laiq;	i	getCause
	m	()I	j	getBlocksSetOnFire
	m	()Ljava/util/stream/Stream;	k	getHitEntities
	m	()V	l	tick
	m	()V	o	powerLightningRod
	m	()Lgt;	p	getStrikePosition
	f	J	b	seed
	f	I	c	START_LIFE
	f	D	d	DAMAGE_RADIUS
	f	D	e	DETECTION_RADIUS
	f	I	f	life
	f	I	g	flashes
	f	Z	h	visualOnly
	f	Laiq;	i	cause
	f	Ljava/util/Set;	j	hitEntities
	f	I	k	blocksSetOnFire
c	bfx	net/minecraft/world/entity/LivingEntity
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()Ljava/util/Map;	A	collectEquipmentChanges
	m	(Lbfh;)V	A	doPush
		p	1		entity
	m	()Lecz;	A_	getBoundingBoxForCulling
	m	(Lbfh;)Z	B	hasLineOfSight
		p	1		entity
	m	()V	C	updateFallFlying
	m	()V	D	updatingUsingItem
	m	()Z	E	shouldTriggerItemUseEffects
	m	()V	E_	onEnterCombat
	m	()V	F	updateInvisibilityStatus
	m	()V	G	updateSwimAmount
	m	()Z	I	checkBedExists
	m	()Lbfx;	L_	getLastAttacker
	m	()V	Y_	completeUsingItem
	m	(DD)V	a	indicateDamage
		p	1		deltaX
		p	3		deltaZ
	m	(DDDFFIZ)V	a	lerpTo
		p	1		x
		p	3		y
		p	5		z
		p	7		yaw
		p	8		pitch
		p	9		interpolationSteps
		p	10		interpolate
	m	(DDDZ)Z	a	randomTeleport
		p	1		x
		p	3		y
		p	5		z
		p	7		particleEffects
	m	(DZLdbq;Lgt;)V	a	checkFallDamage
		p	1		heightDifference
		p	3		onGround
		p	4		state
		p	5		landedPosition
	m	(DZLede;)Lede;	a	getFluidFallingAdjustedMovement
		p	1		gravity
		p	3		falling
		p	4		motion
	m	(F)F	a	getSwimAmount
		p	1		tickDelta
	m	(FFLbem;)Z	a	causeFallDamage
		p	1		fallDistance
		p	2		damageMultiplier
		p	3		damageSource
	m	(FI)V	a	lerpHeadTo
		p	1		yaw
		p	2		interpolationSteps
	m	(Lacl;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Lbdx;)V	a	swing
		p	1		hand
	m	(Lbdx;Lcfv;)V	a	setItemInHand
		p	1		hand
		p	2		stack
	m	(Lbdx;Z)V	a	swing
		p	1		hand
		p	2		fromServerPlayer
	m	(Lbem;)V	a	die
		p	1		damageSource
	m	(Lbem;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbem;IZ)V	a	dropCustomDeathLoot
		p	1		source
		p	2		lootingMultiplier
		p	3		allowDrops
	m	(Lbem;Z)V	a	dropFromLootTable
		p	1		source
		p	2		causedByPlayer
	m	(Lbew;)Z	a	hasEffect
		p	1		effect
	m	(Lbey;)V	a	onEffectRemoved
		p	1		effect
	m	(Lbey;Lbfh;)V	a	onEffectAdded
		p	1		effect
		p	2		source
	m	(Lbey;ZLbfh;)V	a	onEffectUpdated
		p	1		effect
		p	2		reapplyEffect
		p	3		source
	m	(Lbfh$c;)V	a	remove
		p	1		reason
	m	(Lbfh;)V	a	dismountVehicle
		p	1		vehicle
	m	(Lbfh;I)V	a	take
		p	1		item
		p	2		count
	m	(Lbfl;)Z	a	canAttackType
		p	1		type
	m	(Lbfm;)Z	a	doesEmitEquipEvent
		p	1		slot
	m	(Lbfm;Lcfv;)V	a	setItemSlot
		p	1		slot
		p	2		stack
	m	(Lbfm;Lcfv;Lcfv;)V	a	onEquipItem
		p	1		slot
		p	2		oldStack
		p	3		newStack
	m	(Lbfx;)V	a	setLastHurtByMob
		p	1		attacker
	m	(Lbfx;Lbfm;)Lbgq;	a	createEquipmentSlotAccess
		p	0		entity
		p	1		slot
	m	(Lbfx;Lbqk;)Z	a	canAttack
		p	1		entity
		p	2		predicate
	m	(Lbfx;Lede;)V	a	tickRidden
		p	1		controllingPassenger
		p	2		movementInput
	m	(Lbgj;)Lbfi;	a	getDimensions
		p	1		pose
	m	(Lbgj;Lbfi;)F	a	getEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lbgz;)Lbha;	a	getAttribute
		p	1		attribute
	m	(Lbvf;)V	a	onItemPickup
		p	1		item
	m	(Lcfq;Lcfv;)Z	a	lambda$isHolding$4
		p	1		stack
	m	(Lcfv;)V	a	updateUsingItem
		p	1		stack
	m	(Lcfv;I)V	a	spawnItemParticles
		p	1		stack
		p	2		count
	m	(Lcfv;Lcfv;)Z	a	equipmentHasChanged
		p	1		stack
		p	2		stack2
	m	(Lcfv;Lcmi;Lbfx;)V	a	addEatEffect
		p	1		stack
		p	2		world
		p	3		targetEntity
	m	(Lcmi;Lcfv;)Lcfv;	a	eat
		p	1		world
		p	2		stack
	m	(Lcom/mojang/serialization/Dynamic;)Lbgy;	a	makeBrain
		p	1		dynamic
	m	(Ldwj;)Z	a	canStandOnFluid
		p	1		state
	m	(Lea$a;Lede;)V	a	lookAt
		p	1		anchorPoint
		p	2		target
	m	(Lecz;Lecz;)V	a	checkAutoSpinAttack
		p	1		a
		p	2		b
	m	(Lede;F)Lede;	a	handleRelativeFrictionAndCalculateMovement
		p	1		movementInput
		p	2		slipperiness
	m	(Lgt;)V	a	setPosToBed
		p	1		pos
	m	(Lgt;Z)V	a	setRecordPlayingNearby
		p	1		songPosition
		p	2		playing
	m	(Lgz$a;Ll$a;)Lede;	a	getRelativePortalPosition
		p	1		portalAxis
		p	2		portalRect
	m	(Lhd;)D	a	getAttributeValue
		p	1		attribute
	m	(Ljava/util/List;Lbfm;Lcfv;)V	a	lambda$handleEquipmentChanges$5
		p	2		slot
		p	3		stack
	m	(Ljava/util/Map;)V	a	handleHandSwap
		p	1		equipmentChanges
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lre;Lgt;)V	a	lambda$addAdditionalSaveData$1
		p	1		pos
	m	(Lre;Lrx;)V	a	lambda$addAdditionalSaveData$2
		p	1		brain
	m	(Lvf;)V	a	recreateFromPacket
		p	1		packet
	m	(ZLbem;)Ldyr$a;	a	createLootContext
		p	1		causedByPlayer
		p	2		source
	m	()F	aF	getBlockSpeedFactor
	m	()V	a_	defineSynchedData
	m	(I)Lbgq;	a_	getSlot
		p	1		mappedIndex
	m	()V	ah	kill
	m	()V	ao	baseTick
	m	()V	aw	outOfWorld
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	(F)V	b	heal
		p	1		amount
	m	(Lbdx;)Lcfv;	b	getItemInHand
		p	1		hand
	m	(Lbem;F)V	b	hurtArmor
		p	1		source
		p	2		amount
	m	(Lbew;)Lbey;	b	getEffect
		p	1		effect
	m	(Lbey;)Z	b	addEffect
		p	1		effect
	m	(Lbey;Lbfh;)Z	b	addEffect
		p	1		effect
		p	2		source
	m	(Lbfm;)Z	b	hasItemInSlot
		p	1		slot
	m	(Lbfm;Lcfv;)V	b	setLastArmorItem
		p	1		slot
		p	2		armor
	m	(Lbfx;Lede;)Lede;	b	getRiddenInput
		p	1		controllingPassenger
		p	2		movementInput
	m	(Lbgj;Lbfi;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lbgz;)D	b	getAttributeValue
		p	1		attribute
	m	(Lcfq;)Z	b	isHolding
		p	1		item
	m	(Lcfv;I)V	b	triggerItemUseEffects
		p	1		stack
		p	2		particleCount
	m	(Ldbq;)Z	b	shouldRemoveSoulSpeed
		p	1		landingState
	m	(Lgt;)V	b	startSleeping
		p	1		pos
	m	(Lhd;)D	b	getAttributeBaseValue
		p	1		attribute
	m	(Ljava/util/Map;)V	b	handleEquipmentChanges
		p	1		equipmentChanges
	m	(Ljava/util/function/Predicate;)Z	b	isHolding
		p	1		predicate
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Ljava/lang/Iterable;	bI	getArmorSlots
	m	()Z	bW	isVisuallySwimming
	m	()Z	bZ	isCurrentlyGlowing
	m	()V	b_	aiStep
	m	()Z	bm	isPickable
	m	()Z	bn	isPushable
	m	()Z	bq	isAlive
	m	()Z	br	isInWall
	m	()V	bt	rideTick
	m	()V	bz	stopRiding
	m	(F)V	c	setHealth
		p	1		health
	m	(IZ)V	c	setLivingEntityFlag
		p	1		mask
		p	2		value
	m	(Lanv;)V	c	jumpInLiquid
		p	1		fluid
	m	(Lbdx;)V	c	startUsingItem
		p	1		hand
	m	(Lbem;)V	c	handleDamageEvent
		p	1		damageSource
	m	(Lbem;F)V	c	hurtHelmet
		p	1		source
		p	2		amount
	m	(Lbew;)Lbey;	c	removeEffectNoUpdate
		p	1		type
	m	(Lbey;)Z	c	canBeAffected
		p	1		effect
	m	(Lbey;Lbfh;)V	c	forceAddEffect
		p	1		effect
		p	2		source
	m	(Lbfm;)Lcfv;	c	getItemBySlot
		p	1		slot
	m	(Lbfm;Lcfv;)V	c	setLastHandItem
		p	1		slot
		p	2		stack
	m	(Lbfx;)Z	c	canAttack
		p	1		target
	m	(Lbfx;Lede;)V	c	travelRidden
		p	1		controllingPassenger
		p	2		movementInput
	m	(Lbgz;)D	c	getAttributeBaseValue
		p	1		attribute
	m	(Lbym;)V	c	setLastHurtByPlayer
		p	1		attacking
	m	(Lcfv;)Lamq;	c	getDrinkingSound
		p	1		stack
	m	(Lgt;)V	c	onChangedBlock
		p	1		pos
	m	(Lgt;Ldbq;)Z	c	trapdoorUsableAsLadder
		p	1		pos
		p	2		state
	m	(Ljava/util/Collection;)Z	c	areAllEffectsAmbient
		p	0		effects
	m	(Z)V	c	setOnGround
		p	1		onGround
	m	()F	ck	getYHeadRot
	m	()Z	co	canChangeDimensions
	m	()Z	cy	shouldShowName
	m	(F)V	d	hurtCurrentlyUsedShield
		p	1		amount
	m	(FF)I	d	calculateFallDamage
		p	1		fallDistance
		p	2		damageMultiplier
	m	(I)Lamq;	d	getFallDamageSound
		p	1		distance
	m	(Lbdx;)V	d	broadcastBreakEvent
		p	1		hand
	m	(Lbem;)Lamq;	d	getHurtSound
		p	1		source
	m	(Lbem;F)F	d	getDamageAfterArmorAbsorb
		p	1		source
		p	2		amount
	m	(Lbew;)Z	d	removeEffect
		p	1		type
	m	(Lbey;)V	d	lambda$tickEffects$3
	m	(Lbfm;)V	d	broadcastBreakEvent
		p	1		slot
	m	(Lbfm;Lcfv;)Z	d	lambda$createEquipmentSlotAccess$10
		p	1		stack
	m	(Lbfx;)V	d	blockUsingShield
		p	1		attacker
	m	(Lcfv;)Lamq;	d	getEatingSound
		p	1		stack
	m	()F	dA	maxUpStep
	m	()Lbgy;	dH	getBrain
	m	()Lbgy$b;	dI	brainProvider
	m	()Lbhd$a;	dJ	createLivingAttributes
	m	()Z	dK	canBreatheUnderwater
	m	()Z	dL	canSpawnSoulSpeedParticle
	m	()V	dM	spawnSoulSpeedParticle
	m	()Z	dN	onSoulSpeedBlock
	m	()V	dO	removeSoulSpeed
	m	()V	dP	tryAddSoulSpeed
	m	()V	dQ	removeFrost
	m	()V	dR	tryAddFrost
	m	()F	dS	getScale
	m	()Z	dT	isAffectedByFluids
	m	()V	dU	tickDeath
	m	()Z	dV	shouldDropExperience
	m	()Z	dW	shouldDropLoot
	m	()I	dX	getExperienceReward
	m	()Z	dY	isAlwaysExperienceDropper
	m	()Lapo;	dZ	getRandom
	m	()Z	du	canFreeze
	m	()F	dx	getVisualRotationYInDegrees
	m	(FF)F	e	tickHeadTurn
		p	1		bodyRotation
		p	2		headRotation
	m	(Lbem;)V	e	playHurtSound
		p	1		source
	m	(Lbem;F)F	e	getDamageAfterMagicAbsorb
		p	1		source
		p	2		amount
	m	(Lbfm;)Lcfv;	e	getLastArmorItem
		p	1		slot
	m	(Lbfx;)V	e	blockedByShield
		p	1		target
	m	(Lcfv;)V	e	verifyEquippedItem
		p	1		stack
	m	(Lgt;)V	e	setSleepingPos
		p	1		pos
	m	()V	eA	playBlockFallSound
	m	()I	eB	getArmorValue
	m	()Lbej;	eC	getCombatTracker
	m	()Lbfx;	eD	getKillCredit
	m	()F	eE	getMaxHealth
	m	()I	eF	getArrowCount
	m	()I	eG	getStingerCount
	m	()V	eH	updateSwingTime
	m	()Lbhb;	eI	getAttributes
	m	()Lbgc;	eJ	getMobType
	m	()Lcfv;	eK	getMainHandItem
	m	()Lcfv;	eL	getOffhandItem
	m	()F	eM	getArmorCoverPercentage
	m	()F	eN	getSoundVolume
	m	()F	eO	getVoicePitch
	m	()Z	eP	isImmobile
	m	()F	eQ	getJumpPower
	m	()D	eR	getJumpBoostPower
	m	()V	eS	jumpFromGround
	m	()V	eT	goDownInWater
	m	()F	eU	getWaterSlowDown
	m	()F	eV	getFlyingSpeed
	m	()F	eW	getSpeed
	m	()Z	eX	isSensitiveToWater
	m	()V	eY	serverAiStep
	m	()V	eZ	pushEntities
	m	()Lbfx;	ea	getLastHurtByMob
	m	()I	eb	getLastHurtByMobTimestamp
	m	()Lbfx;	ec	getLastHurtMob
	m	()I	ed	getLastHurtMobTimestamp
	m	()I	ee	getNoActionTime
	m	()Z	ef	shouldDiscardFriction
	m	()V	eg	tickEffects
	m	()Z	eh	canBeSeenAsEnemy
	m	()Z	ei	canBeSeenByAnyone
	m	()V	ej	removeEffectParticles
	m	()Z	ek	removeAllEffects
	m	()Ljava/util/Collection;	el	getActiveEffects
	m	()Ljava/util/Map;	em	getActiveEffectsMap
	m	()Z	en	isInvertedHealAndHarm
	m	()F	eo	getHealth
	m	()Z	ep	isDeadOrDying
	m	()Lbem;	eq	getLastDamageSource
	m	()V	er	dropEquipment
	m	()V	es	dropExperience
	m	()Ladd;	et	getLootTable
	m	()V	eu	skipDropExperience
	m	()Z	ev	wasExperienceConsumed
	m	()Lede;	ew	getMeleeAttackReferencePosition
	m	()F	ex	getHurtDir
	m	()Lbfx$a;	ey	getFallSounds
	m	()Ljava/util/Optional;	ez	getLastClimbablePos
	m	(Lbem;)Z	f	isDamageSourceBlocked
		p	1		source
	m	(Lbem;F)V	f	actuallyHurt
		p	1		source
		p	2		amount
	m	(Lbfm;)Lcfv;	f	getLastHandItem
		p	1		slot
	m	(Lbfx;)V	f	createWitherRose
		p	1		adversary
	m	(Lcfv;)Z	f	canTakeItem
		p	1		stack
	m	(Lgt;)V	f	lambda$stopSleeping$9
		p	1		pos
	m	()Z	fa	isAutoSpinAttack
	m	()F	fb	getAbsorptionAmount
	m	()V	fc	updateEffectVisibility
	m	()Lbfr;	fd	getMainArm
	m	()Z	fe	isUsingItem
	m	()Lbdx;	ff	getUsedItemHand
	m	()Lcfv;	fg	getUseItem
	m	()I	fh	getUseItemRemainingTicks
	m	()I	fi	getTicksUsingItem
	m	()V	fj	releaseUsingItem
	m	()V	fk	stopUsingItem
	m	()Z	fl	isBlocking
	m	()Z	fm	isSuppressingSlidingDownLadder
	m	()Z	fn	isFallFlying
	m	()I	fo	getFallFlyingTicks
	m	()Z	fp	isAffectedByPotions
	m	()Z	fq	attackable
	m	()Lcom/google/common/collect/ImmutableList;	fr	getDismountPoses
	m	()Ljava/util/Optional;	fs	getSleepingPos
	m	()V	ft	clearSleepingPos
	m	()Z	fu	isSleeping
	m	()V	fv	stopSleeping
	m	()Lgz;	fw	getBedOrientation
	m	()Z	fx	canDisableShield
	m	(F)V	g	updateWalkAnimation
		p	1		posDelta
	m	(Lbem;)V	g	dropAllDeathLoot
		p	1		source
	m	(Lbfh;)V	g	push
		p	1		entity
	m	(Lbfm;)B	g	entityEventForEquipmentBreak
		p	0		slot
	m	(Lbfx;)F	g	getRiddenSpeed
		p	1		controllingPassenger
	m	(Lbgj;)Lecz;	g	getLocalBoundsForPose
		p	1		pose
	m	(Lcfv;)Lcfv;	g	getProjectile
		p	1		stack
	m	(Lgt;)Lede;	g	lambda$stopSleeping$8
	m	(Z)V	g	setSprinting
		p	1		sprinting
	m	(F)V	h	setSpeed
		p	1		movementSpeed
	m	(Lbem;)Z	h	checkTotemDeathProtection
		p	1		source
	m	(Lbfx;)V	h	doAutoAttackOnTouch
		p	1		target
	m	(Lcfv;)Lbfm;	h	getEquipmentSlotForItem
		p	0		stack
	m	(Lede;)V	h	travel
		p	1		movementInput
	m	(Lgt;)Ljava/lang/Boolean;	h	lambda$checkBedExists$7
		p	1		pos
	m	(Lbfx;)V	i	lambda$updateFallFlying$6
		p	0		player
	m	(Lcfv;)V	i	breakItem
		p	1		stack
	m	(Lede;)Lede;	i	resetForwardDirectionOfRelativePortalPosition
		p	0		pos
	m	()V	j	onLeaveCombat
	m	(Lbfx;)V	j	lambda$tryAddSoulSpeed$0
		p	0		player
	m	(Lede;)Lede;	j	handleOnClimbable
		p	1		motion
	m	()V	l	tick
	m	(F)F	l	getViewYRot
		p	1		tickDelta
	m	(I)I	l	decreaseAirSupply
		p	1		air
	m	(I)I	m	increaseAirSupply
		p	1		air
	m	(I)V	n	setNoActionTime
		p	1		despawnCounter
	m	(I)V	o	setArrowCount
		p	1		stuckArrowCount
	m	(I)V	p	setStingerCount
		p	1		stingerCount
	m	(Z)V	p	setDiscardFriction
		p	1		noDrag
	m	()V	q	updateGlowingStatus
	m	(DDD)V	q	knockback
		p	1		strength
		p	3		x
		p	5		z
	m	(F)V	q	animateHurt
		p	1		yaw
	m	(I)Lbfm;	q	getEquipmentSlot
		p	0		slotId
	m	(Z)V	q	calculateEntityAnimation
		p	1		flutter
	m	(F)V	r	setYHeadRot
		p	1		headYaw
	m	(Z)V	r	setJumping
		p	1		jumping
	m	()I	s	getCurrentSwingDuration
	m	(F)V	s	setYBodyRot
		p	1		bodyYaw
	m	(F)F	w	getAttackAnim
		p	1		tickDelta
	m	()V	x	makePoofParticles
	m	(F)V	x	setAbsorptionAmount
		p	1		amount
	m	(Lbfh;)V	x	setLastHurtMob
		p	1		target
	m	()Lamq;	x_	getDeathSound
	m	()V	y	swapHandItems
	m	(F)F	y	getFrictionInfluencedSpeed
		p	1		slipperiness
	m	(Lbfh;)D	y	getVisibilityPercent
		p	1		entity
	m	()Z	y_	isBaby
	m	()V	z	detectEquipmentUpdates
	m	(Lbfh;)Z	z	doHurtTarget
		p	1		target
	m	()Z	z_	onClimbable
	f	Lbfi;	aC	SLEEPING_DIMENSIONS
	f	F	aD	EXTRA_RENDER_CULLING_SIZE_WITH_BIG_HAT
	f	Z	aE	swinging
	f	Lbdx;	aF	swingingArm
	f	I	aG	swingTime
	f	I	aH	removeArrowTime
	f	I	aI	removeStingerTime
	f	I	aJ	hurtTime
	f	I	aK	hurtDuration
	f	I	aL	deathTime
	f	F	aM	oAttackAnim
	f	F	aN	attackAnim
	f	I	aO	attackStrengthTicker
	f	Lbgx;	aP	walkAnimation
	f	I	aQ	invulnerableDuration
	f	F	aR	timeOffs
	f	F	aS	rotA
	f	F	aT	yBodyRot
	f	F	aU	yBodyRotO
	f	F	aV	yHeadRot
	f	F	aW	yHeadRotO
	f	Lbym;	aX	lastHurtByPlayer
	f	I	aY	lastHurtByPlayerTime
	f	Z	aZ	dead
	f	I	bA	DAMAGE_SOURCE_TIMEOUT
	f	I	bB	WAIT_TICKS_BEFORE_ITEM_USE_EFFECTS
	f	I	bC	TICKS_PER_ELYTRA_FREE_FALL_EVENT
	f	I	bD	FREE_FALL_EVENTS_PER_ELYTRA_BREAK
	f	D	bE	MAX_LINE_OF_SIGHT_TEST_RANGE
	f	Lacl;	bF	DATA_HEALTH_ID
	f	Lacl;	bG	DATA_EFFECT_COLOR_ID
	f	Lacl;	bH	DATA_EFFECT_AMBIENCE_ID
	f	Lacl;	bI	DATA_ARROW_COUNT_ID
	f	Lacl;	bJ	DATA_STINGER_COUNT_ID
	f	Lacl;	bK	SLEEPING_POS_ID
	f	I	bL	MAX_HEAD_ROTATION_RELATIVE_TO_BODY
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Lbhb;	bM	attributes
	f	Lbej;	bN	combatTracker
	f	Ljava/util/Map;	bO	activeEffects
	f	Lhm;	bP	lastHandItemStacks
	f	Lhm;	bQ	lastArmorItemStacks
	f	Z	bR	discardFriction
	f	Z	bS	effectsDirty
	f	Lbfx;	bT	lastHurtByMob
	f	I	bU	lastHurtByMobTimestamp
	f	Lbfx;	bV	lastHurtMob
	f	I	bW	lastHurtMobTimestamp
	f	F	bX	speed
	f	I	bY	noJumpDelay
	f	F	bZ	absorptionAmount
	f	I	ba	noActionTime
	f	F	bb	oRun
	f	F	bc	run
	f	F	bd	animStep
	f	F	be	animStepO
	f	F	bf	rotOffs
	f	I	bg	deathScore
	f	F	bh	lastHurt
	f	Z	bi	jumping
	f	F	bj	xxa
	f	F	bk	yya
	f	F	bl	zza
	f	I	bm	lerpSteps
	f	D	bn	lerpX
	f	D	bo	lerpY
	f	D	bp	lerpZ
	f	D	bq	lerpYRot
	f	D	br	lerpXRot
	f	D	bs	lyHeadRot
	f	I	bt	lerpHeadSteps
	f	Lcfv;	bu	useItem
	f	I	bv	useItemRemaining
	f	I	bw	fallFlyTicks
	f	I	bx	autoSpinAttackTicks
	f	Lbgy;	by	brain
	f	Lbhc;	bz	SPEED_MODIFIER_SPRINTING
	f	Ljava/util/UUID;	c	SPEED_MODIFIER_SPRINTING_UUID
	f	Lgt;	ca	lastPos
	f	Ljava/util/Optional;	cb	lastClimbablePos
	f	Lbem;	cc	lastDamageSource
	f	J	cd	lastDamageStamp
	f	F	ce	swimAmount
	f	F	cf	swimAmountO
	f	Z	cg	skipDropExperience
	f	Ljava/util/UUID;	d	SPEED_MODIFIER_SOUL_SPEED_UUID
	f	Ljava/util/UUID;	e	SPEED_MODIFIER_POWDER_SNOW_UUID
	f	I	g	HAND_SLOTS
	f	I	h	ARMOR_SLOTS
	f	I	i	EQUIPMENT_SLOT_OFFSET
	f	I	j	ARMOR_SLOT_OFFSET
	f	I	k	SWING_DURATION
	f	I	l	PLAYER_HURT_EXPERIENCE_TIME
	f	D	m	MIN_MOVEMENT_DISTANCE
	f	D	n	DEFAULT_BASE_GRAVITY
	f	I	o	DEATH_DURATION
	f	I	p	USE_ITEM_INTERVAL
	f	I	q	LIVING_ENTITY_FLAG_IS_USING
	f	I	r	LIVING_ENTITY_FLAG_OFF_HAND
	f	I	s	LIVING_ENTITY_FLAG_SPIN_ATTACK
	f	Lacl;	t	DATA_LIVING_ENTITY_FLAGS
	f	F	u	DEFAULT_EYE_HEIGHT
c	bfx$1	net/minecraft/world/entity/LivingEntity$1
	f	[I	a	$SwitchMap$net$minecraft$world$entity$EquipmentSlot$Type
	f	[I	b	$SwitchMap$net$minecraft$world$entity$EquipmentSlot
c	bfx$a	net/minecraft/world/entity/LivingEntity$Fallsounds
	m	()Lamq;	a	small
	m	()Lamq;	b	big
	f	Lamq;	a	small
	f	Lamq;	b	big
c	bfy	net/minecraft/world/entity/Marker
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()Ldwp;	C_	getPistonPushReaction
	m	()Lvb;	S	getAddEntityPacket
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Z	bA	couldAcceptPassenger
	m	()V	l	tick
	m	(Lbfh;)V	m	addPassenger
		p	1		passenger
	m	(Lbfh;)Z	o	canAddPassenger
		p	1		passenger
	f	Ljava/lang/String;	b	DATA_TAG
	f	Lre;	c	data
c	bfz	net/minecraft/world/entity/Mob
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()Lblr;	A	createBodyControl
	m	(F)V	A	setXxa
		p	1		sidewaysSpeed
	m	()Lblv;	C	getLookControl
	m	()Lblw;	D	getMoveControl
	m	()Lblu;	E	getJumpControl
	m	()Lbph;	G	getNavigation
	m	()Lbqc;	I	getSensing
	m	()V	J	ate
	m	()I	K	getAmbientSoundInterval
	m	()V	L	playAmbientSound
	m	()V	M	spawnAnim
	m	()V	N	updateControlFlags
	m	()Ladd;	O	getDefaultLootTable
	m	()Lhy;	P	getPickupReach
	m	()Lbfx;	P_	getTarget
	m	()Z	Q	requiresCustomPersistence
	m	()Z	R	shouldDespawnInPeaceful
	m	()V	T	sendDebugPackets
	m	()V	U	customServerAiStep
	m	()I	V	getMaxHeadXRot
	m	()I	W	getMaxHeadYRot
	m	()I	X	getHeadRotSpeed
	m	(FFF)F	a	rotlerp
		p	1		from
		p	2		to
		p	3		max
	m	(Lapo;F)V	a	enchantSpawnedWeapon
		p	1		random
		p	2		power
	m	(Lapo;FLbfm;)V	a	enchantSpawnedArmor
		p	1		random
		p	2		power
		p	3		slot
	m	(Lapo;Lbdw;)V	a	populateDefaultEquipmentSlots
		p	1		random
		p	2		localDifficulty
	m	(Lbem;IZ)V	a	dropCustomDeathLoot
		p	1		source
		p	2		lootingMultiplier
		p	3		allowDrops
	m	(Lbem;Z)V	a	dropFromLootTable
		p	1		source
		p	2		causedByPlayer
	m	(Lbfh;FF)V	a	lookAt
		p	1		targetEntity
		p	2		maxYawChange
		p	3		maxPitchChange
	m	(Lbfh;Z)Z	a	startRiding
		p	1		entity
		p	2		force
	m	(Lbfl;)Z	a	canAttackType
		p	1		type
	m	(Lbfl;Lcmj;Lbgb;Lgt;Lapo;)Z	a	checkMobSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	(Lbfl;Z)Lbfz;	a	convertTo
		p	1		entityType
		p	2		keepEquipment
	m	(Lbfm;F)V	a	setDropChance
		p	1		slot
		p	2		chance
	m	(Lbfm;I)Lcfq;	a	getEquipmentForSlot
		p	0		equipmentSlot
		p	1		equipmentLevel
	m	(Lbfm;Lcfv;)V	a	setItemSlot
		p	1		slot
		p	2		stack
	m	(Lbmt;)Z	a	lambda$removeFreeWill$3
		p	0		goal
	m	(Lbym;)Z	a	canBeLeashed
		p	1		player
	m	(Lbym;Lbdx;)Lbdy;	a	interact
		p	1		player
		p	2		hand
	m	(Lbym;Lbfz;)V	a	onOffspringSpawnedFromEgg
		p	1		player
		p	2		child
	m	(Lbym;Lcfv;Lcfv;)V	a	maybeDisableShield
		p	1		player
		p	2		mobStack
		p	3		playerStack
	m	(Lcgl;)Z	a	canFireProjectileWeapon
		p	1		weapon
	m	(Lcmi;)Lbph;	a	createNavigation
		p	1		world
	m	(Lcmj;Lbgb;)Z	a	checkSpawnRules
		p	1		world
		p	2		spawnReason
	m	(Lcml;)Z	a	checkSpawnObstruction
		p	1		world
	m	(Lcmx;Lbdw;Lbgb;Lbgr;Lre;)Lbgr;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Ldwv;)F	a	getPathfindingMalus
		p	1		nodeType
	m	(Ldwv;F)V	a	setPathfindingMalus
		p	1		nodeType
		p	2		penalty
	m	(Lgt;)Z	a	isWithinRestriction
		p	1		pos
	m	(Lgt;I)V	a	restrictTo
		p	1		target
		p	2		range
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Z)V	a	setBaby
		p	1		baby
	m	(ZLbem;)Ldyr$a;	a	createLootContext
		p	1		causedByPlayer
		p	2		source
	m	(ZZ)V	a	dropLeash
		p	1		sendPacket
		p	2		dropItem
	m	()V	a_	defineSynchedData
	m	()V	ao	baseTick
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	(Lapo;Lbdw;)V	b	populateDefaultEquipmentEnchantments
		p	1		random
		p	2		localDifficulty
	m	(Lbfh;Z)V	b	setLeashedTo
		p	1		entity
		p	2		sendPacket
	m	(Lbfm;Lcfv;)V	b	setItemSlotAndDropWhenKilled
		p	1		slot
		p	2		stack
	m	(Lbvf;)V	b	pickUpItem
		p	1		item
	m	(Lbym;Lbdx;)Lbdy;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lbym;Lbfz;)V	b	lambda$checkAndHandleImportantInteractions$2
		p	2		entity
	m	(Lcfv;Lcfv;)Z	b	canReplaceCurrentItem
		p	1		newStack
		p	2		oldStack
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Ljava/lang/Iterable;	bH	getHandSlots
	m	()Ljava/lang/Iterable;	bI	getArmorSlots
	m	()V	b_	aiStep
	m	(Lanv;)V	c	jumpInLiquid
		p	1		fluid
	m	(Lbfm;)Lcfv;	c	getItemBySlot
		p	1		slot
	m	(Lbym;Lbdx;)Lbdy;	c	checkAndHandleImportantInteractions
		p	1		player
		p	2		hand
	m	(Lcfv;Lcfv;)Z	c	canReplaceEqualItem
		p	1		newStack
		p	2		oldStack
	m	(Ljava/lang/String;)Z	c	lambda$canReplaceEqualItem$1
		p	0		key
	m	(Ljava/util/function/Predicate;)V	c	removeAllGoals
		p	1		predicate
	m	()Lbfx;	cK	getControllingPassenger
	m	()Z	cU	isEffectiveAi
	m	()V	cn	removeAfterChangingDimensions
	m	()I	cp	getMaxFallDistance
	m	(I)Z	d	isMaxGroupSizeReached
		p	1		count
	m	(Ljava/lang/String;)Z	d	lambda$canReplaceEqualItem$0
		p	0		key
	m	()I	dX	getExperienceReward
	m	()V	ds	checkDespawn
	m	()Lcfv;	dt	getPickResult
	m	(FF)F	e	tickHeadTurn
		p	1		bodyRotation
		p	2		headRotation
	m	(Lbem;)V	e	playHurtSound
		p	1		source
	m	(Lbfm;)V	e	setGuaranteedDrop
		p	1		slot
	m	()V	eY	serverAiStep
	m	()Ladd;	et	getLootTable
	m	(Lbfm;)F	f	getEquipmentDropChance
		p	1		slot
	m	(Lcfv;)Z	f	canTakeItem
		p	1		stack
	m	()Z	fA	canPickUpLoot
	m	()Z	fB	isPersistenceRequired
	m	()Z	fC	isWithinRestriction
	m	()Lgt;	fD	getRestrictCenter
	m	()F	fE	getRestrictRadius
	m	()V	fF	clearRestriction
	m	()Z	fG	hasRestriction
	m	()V	fH	tickLeash
	m	()Z	fI	isLeashed
	m	()Lbfh;	fJ	getLeashHolder
	m	()Z	fK	isNoAi
	m	()Z	fL	isLeftHanded
	m	()Z	fM	isAggressive
	m	()Z	fN	isSunBurnTick
	m	()V	fO	removeFreeWill
	m	()V	fP	restoreLeashFromSave
	m	()Lbfr;	fd	getMainArm
	m	()I	fy	getMaxSpawnClusterSize
	m	()V	fz	setPersistenceRequired
	m	(D)Z	h	removeWhenFarAway
		p	1		distanceSquared
	m	(F)V	h	setSpeed
		p	1		movementSpeed
	m	(Lbfx;)V	i	setTarget
		p	1		target
	m	(Lcfv;)Lcfv;	i	equipItemIfPossible
		p	1		stack
	m	(Lbfx;)D	j	getMeleeAttackRangeSqr
		p	1		target
	m	(Lcfv;)Z	j	canHoldItem
		p	1		stack
	m	(Lbfx;)D	k	getPerceivedTargetDistanceSquareForMeleeAttack
		p	1		target
	m	(Lcfv;)Z	k	wantsToPickUp
		p	1		stack
	m	()V	l	tick
	m	(Lbfx;)Z	l	isWithinMeleeAttackRange
		p	1		entity
	m	(Lcfv;)V	m	lambda$removeAfterChangingDimensions$4
		p	0		stack
	m	()V	q	resetAmbientSoundTime
	m	(I)V	q	setDelayedLeashHolderId
		p	1		id
	m	()Lamq;	s	getAmbientSound
	m	(Z)V	s	setCanPickUpLoot
		p	1		canPickUpLoot
	m	(Z)V	t	setNoAi
		p	1		aiDisabled
	m	(Z)V	u	setLeftHanded
		p	1		leftHanded
	m	(Z)V	v	setAggressive
		p	1		attacking
	m	()V	x	registerGoals
	m	()Lbhd$a;	y	createMobAttributes
	m	(F)V	y	setZza
		p	1		forwardSpeed
	m	()Z	z	shouldPassengersInheritMalus
	m	(F)V	z	setYya
		p	1		upwardSpeed
	m	(Lbfh;)Z	z	doHurtTarget
		p	1		target
	f	F	bA	MAX_PICKUP_LOOT_CHANCE
	f	F	bB	MAX_ENCHANTED_ARMOR_CHANCE
	f	F	bC	MAX_ENCHANTED_WEAPON_CHANCE
	f	Ljava/lang/String;	bD	LEASH_TAG
	f	F	bE	DEFAULT_EQUIPMENT_DROP_CHANCE
	f	I	bF	PRESERVE_ITEM_DROP_CHANCE
	f	I	bG	UPDATE_GOAL_SELECTOR_EVERY_N_TICKS
	f	I	bH	ambientSoundTime
	f	I	bI	xpReward
	f	Lblv;	bJ	lookControl
	f	Lblw;	bK	moveControl
	f	Lblu;	bL	jumpControl
	f	Lacl;	b	DATA_MOB_FLAGS_ID
	f	Lbph;	bM	navigation
	f	Lbmu;	bN	goalSelector
	f	Lbmu;	bO	targetSelector
	f	[F	bP	handDropChances
	f	[F	bQ	armorDropChances
	f	Lhy;	bR	ITEM_PICKUP_REACH
	f	Lblr;	bS	bodyRotationControl
	f	Lbfx;	bT	target
	f	Lbqc;	bU	sensing
	f	Lhm;	bV	handItems
	f	Lhm;	bW	armorItems
	f	Z	bX	canPickUpLoot
	f	Z	bY	persistenceRequired
	f	Ljava/util/Map;	bZ	pathfindingMalus
	f	F	bz	MAX_WEARING_ARMOR_CHANCE
	f	I	c	MOB_FLAG_NO_AI
	f	Ladd;	ca	lootTable
	f	J	cb	lootTableSeed
	f	Lbfh;	cc	leashHolder
	f	I	cd	delayedLeashHolderId
	f	Lre;	ce	leashInfoTag
	f	Lgt;	cf	restrictCenter
	f	F	cg	restrictRadius
	f	I	d	MOB_FLAG_LEFTHANDED
	f	I	e	MOB_FLAG_AGGRESSIVE
	f	I	f	PICKUP_REACH
c	bfz$1	net/minecraft/world/entity/Mob$1
	f	[I	a	$SwitchMap$net$minecraft$world$entity$EquipmentSlot$Type
	f	[I	b	$SwitchMap$net$minecraft$world$entity$EquipmentSlot
c	bga	net/minecraft/world/entity/MobCategory
	m	(Ljava/lang/String;ILjava/lang/String;IZZI)V	<init>	<init>
		p	3		name
		p	4		spawnCap
		p	5		peaceful
		p	6		rare
		p	7		immediateDespawnRange
	m	()Ljava/lang/String;	a	getName
	m	()I	b	getMaxInstancesPerChunk
	m	()Ljava/lang/String;	c	getSerializedName
	m	()Z	d	isFriendly
	m	()Z	e	isPersistent
	m	()I	f	getDespawnDistance
	m	()I	g	getNoDespawnDistance
	m	()[Lbga;	h	$values
	f	Lbga;	a	MONSTER
	f	Lbga;	b	CREATURE
	f	Lbga;	c	AMBIENT
	f	Lbga;	d	AXOLOTLS
	f	Lbga;	e	UNDERGROUND_WATER_CREATURE
	f	Lbga;	f	WATER_CREATURE
	f	Lbga;	g	WATER_AMBIENT
	f	Lbga;	h	MISC
	f	Lcom/mojang/serialization/Codec;	i	CODEC
	f	I	j	max
	f	Z	k	isFriendly
	f	Z	l	isPersistent
	f	Ljava/lang/String;	m	name
	f	I	n	noDespawnDistance
	f	I	o	despawnDistance
	f	[Lbga;	p	$VALUES
c	bgb	net/minecraft/world/entity/MobSpawnType
	m	()[Lbgb;	a	$values
	f	Lbgb;	a	NATURAL
	f	Lbgb;	b	CHUNK_GENERATION
	f	Lbgb;	c	SPAWNER
	f	Lbgb;	d	STRUCTURE
	f	Lbgb;	e	BREEDING
	f	Lbgb;	f	MOB_SUMMONED
	f	Lbgb;	g	JOCKEY
	f	Lbgb;	h	EVENT
	f	Lbgb;	i	CONVERSION
	f	Lbgb;	j	REINFORCEMENT
	f	Lbgb;	k	TRIGGERED
	f	Lbgb;	l	BUCKET
	f	Lbgb;	m	SPAWN_EGG
	f	Lbgb;	n	COMMAND
	f	Lbgb;	o	DISPENSER
	f	Lbgb;	p	PATROL
	f	[Lbgb;	q	$VALUES
c	bgc	net/minecraft/world/entity/MobType
	f	Lbgc;	a	UNDEFINED
	f	Lbgc;	b	UNDEAD
	f	Lbgc;	c	ARTHROPOD
	f	Lbgc;	d	ILLAGER
	f	Lbgc;	e	WATER
c	bgd	net/minecraft/world/entity/MoverType
	m	()[Lbgd;	a	$values
	f	Lbgd;	a	SELF
	f	Lbgd;	b	PLAYER
	f	Lbgd;	c	PISTON
	f	Lbgd;	d	SHULKER_BOX
	f	Lbgd;	e	SHULKER
	f	[Lbgd;	f	$VALUES
c	bge	net/minecraft/world/entity/NeutralMob
	m	()V	N_	stopBeingAngry
	m	()Lbfx;	P_	getTarget
	m	()Z	R_	isAngry
	m	()V	S_	forgetCurrentTargetAndRefreshUniversalAnger
	m	()I	a	getRemainingPersistentAngerTime
	m	(I)V	a	setRemainingPersistentAngerTime
		p	1		angerTime
	m	(Laip;Z)V	a	updatePersistentAnger
		p	1		world
		p	2		angerPersistent
	m	(Lbfx;)V	a	setLastHurtByMob
		p	1		attacker
	m	(Lcmi;Lre;)V	a	readPersistentAngerSaveData
		p	1		world
		p	2		nbt
	m	(Ljava/util/UUID;)V	a	setPersistentAngerTarget
		p	1		angryAt
	m	(Lbfx;)Z	a_	isAngryAt
		p	1		entity
	m	(Lbym;)V	a_	playerDied
		p	1		player
	m	()Ljava/util/UUID;	b	getPersistentAngerTarget
	m	(Lcmi;)Z	b	isAngryAtAllPlayers
		p	1		world
	m	()V	c	startPersistentAngerTimer
	m	(Lbfx;)Z	c	canAttack
		p	1		target
	m	(Lbym;)V	c	setLastHurtByPlayer
		p	1		attacking
	m	(Lre;)V	c	addPersistentAngerSaveData
		p	1		nbt
	m	()Lbfx;	ea	getLastHurtByMob
	m	(Lbfx;)V	i	setTarget
		p	1		target
	f	Ljava/lang/String;	a_	TAG_ANGER_TIME
	f	Ljava/lang/String;	b_	TAG_ANGRY_AT
c	bgf	net/minecraft/world/entity/OwnableEntity
	m	()Lbfx;	H_	getOwner
	m	()Ljava/util/UUID;	T_	getOwnerUUID
	m	()Lclz;	e	getLevel
c	bgg	net/minecraft/world/entity/PathfinderMob
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(F)V	B	onLeashDistance
		p	1		leashLength
	m	(Lcmj;Lbgb;)Z	a	checkSpawnRules
		p	1		world
		p	2		spawnReason
	m	(Lgt;Lcml;)F	a	getWalkTargetValue
		p	1		pos
		p	2		world
	m	(Lgt;)F	f	getWalkTargetValue
		p	1		pos
	m	()V	fH	tickLeash
	m	()Z	fP	isPathFinding
	m	()Z	fQ	shouldStayCloseToLeashHolder
	m	()D	fR	followLeashSpeed
	f	F	bR	DEFAULT_WALK_TARGET_VALUE
c	bgh	net/minecraft/world/entity/PlayerRideable
c	bgi	net/minecraft/world/entity/PlayerRideableJumping
	m	()I	V_	getJumpCooldown
	m	()Z	a	canJump
	m	()V	b	handleStopJump
	m	(I)V	b	onPlayerJump
		p	1		strength
	m	(I)V	c	handleStartJump
		p	1		height
c	bgj	net/minecraft/world/entity/Pose
	m	()[Lbgj;	a	$values
	f	Lbgj;	a	STANDING
	f	Lbgj;	b	FALL_FLYING
	f	Lbgj;	c	SLEEPING
	f	Lbgj;	d	SWIMMING
	f	Lbgj;	e	SPIN_ATTACK
	f	Lbgj;	f	CROUCHING
	f	Lbgj;	g	LONG_JUMPING
	f	Lbgj;	h	DYING
	f	Lbgj;	i	CROAKING
	f	Lbgj;	j	USING_TONGUE
	f	Lbgj;	k	SITTING
	f	Lbgj;	l	ROARING
	f	Lbgj;	m	SNIFFING
	f	Lbgj;	n	EMERGING
	f	Lbgj;	o	DIGGING
	f	[Lbgj;	p	$VALUES
c	bgk	net/minecraft/world/entity/PowerableMob
	m	()Z	a	isPowered
c	bgl	net/minecraft/world/entity/RelativeMovement
	m	(Ljava/lang/String;II)V	<init>	<init>
		p	3		shift
	m	()I	a	getMask
	m	(I)Ljava/util/Set;	a	unpack
		p	0		mask
	m	(Ljava/util/Set;)I	a	pack
		p	0		flags
	m	()[Lbgl;	b	$values
	m	(I)Z	b	isSet
		p	1		mask
	f	Lbgl;	a	X
	f	Lbgl;	b	Y
	f	Lbgl;	c	Z
	f	Lbgl;	d	Y_ROT
	f	Lbgl;	e	X_ROT
	f	Ljava/util/Set;	f	ALL
	f	Ljava/util/Set;	g	ROTATION
	f	I	h	bit
	f	[Lbgl;	i	$VALUES
c	bgm	net/minecraft/world/entity/ReputationEventHandler
	m	(Lbqu;Lbfh;)V	a	onReputationEventFrom
		p	1		interaction
		p	2		entity
c	bgn	net/minecraft/world/entity/RiderShieldingMount
	m	()D	d	getRiderShieldingHeight
c	bgo	net/minecraft/world/entity/Saddleable
	m	()Lamq;	Q_	getSaddleSoundEvent
	m	(Lams;)V	a	equipSaddle
		p	1		sound
	m	()Z	g	isSaddleable
	m	()Z	i	isSaddled
c	bgp	net/minecraft/world/entity/Shearable
	m	()Z	a	readyForShearing
	m	(Lams;)V	a	shear
		p	1		shearedSoundCategory
c	bgq	net/minecraft/world/entity/SlotAccess
	m	()Lcfv;	a	get
	m	(Lbdr;I)Lbgq;	a	forContainer
		p	0		inventory
		p	1		index
	m	(Lbdr;ILjava/util/function/Predicate;)Lbgq;	a	forContainer
		p	0		inventory
		p	1		index
		p	2		stackFilter
	m	(Lbfx;Lbfm;)Lbgq;	a	forEquipmentSlot
		p	0		entity
		p	1		slot
	m	(Lbfx;Lbfm;Ljava/util/function/Predicate;)Lbgq;	a	forEquipmentSlot
		p	0		entity
		p	1		slot
		p	2		filter
	m	(Lcfv;)Z	a	set
		p	1		stack
	m	(Lcfv;)Z	b	lambda$forEquipmentSlot$1
		p	0		stack
	m	(Lcfv;)Z	c	lambda$forContainer$0
		p	0		stack
	f	Lbgq;	b	NULL
c	bgq$1	net/minecraft/world/entity/SlotAccess$1
	m	()Lcfv;	a	get
	m	(Lcfv;)Z	a	set
		p	1		stack
c	bgq$2	net/minecraft/world/entity/SlotAccess$2
	m	()Lcfv;	a	get
	m	(Lcfv;)Z	a	set
		p	1		stack
	f	Lbdr;	a	val$inventory
	f	I	c	val$id
	f	Ljava/util/function/Predicate;	d	val$validator
c	bgq$3	net/minecraft/world/entity/SlotAccess$3
	m	()Lcfv;	a	get
	m	(Lcfv;)Z	a	set
		p	1		stack
	f	Lbfx;	a	val$entity
	f	Lbfm;	c	val$slot
	f	Ljava/util/function/Predicate;	d	val$validator
c	bgr	net/minecraft/world/entity/SpawnGroupData
c	bgs	net/minecraft/world/entity/SpawnPlacements
	m	(Lbfl;)Lbgs$c;	a	getPlacementType
		p	0		type
	m	(Lbfl;Lbgs$c;Ldgz$a;Lbgs$b;)V	a	register
		p	0		type
		p	1		location
		p	2		heightmapType
		p	3		predicate
	m	(Lbfl;Lcmx;Lbgb;Lgt;Lapo;)Z	a	checkSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	(Lbfl;)Ldgz$a;	b	getHeightmapType
		p	0		type
	f	Ljava/util/Map;	a	DATA_BY_TYPE
c	bgs$a	net/minecraft/world/entity/SpawnPlacements$Data
	m	(Ldgz$a;Lbgs$c;Lbgs$b;)V	<init>	<init>
		p	1		heightmapType
		p	2		location
		p	3		predicate
	f	Ldgz$a;	a	heightMap
	f	Lbgs$c;	b	placement
	f	Lbgs$b;	c	predicate
c	bgs$b	net/minecraft/world/entity/SpawnPlacements$SpawnPredicate
	m	(Lbfl;Lcmx;Lbgb;Lgt;Lapo;)Z	test	test
		p	1		type
		p	2		world
		p	3		spawnReason
		p	4		pos
		p	5		random
c	bgs$c	net/minecraft/world/entity/SpawnPlacements$Type
	m	(Ljava/lang/String;I)V	<init>	<init>
		p	1		name
		p	2		id
	m	()[Lbgs$c;	a	$values
	f	Lbgs$c;	a	ON_GROUND
	f	Lbgs$c;	b	IN_WATER
	f	Lbgs$c;	c	NO_RESTRICTIONS
	f	Lbgs$c;	d	IN_LAVA
	f	[Lbgs$c;	e	$VALUES
c	bgt	net/minecraft/world/entity/TamableAnimal
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()Ljava/util/UUID;	T_	getOwnerUUID
	m	(Lbem;)V	a	die
		p	1		damageSource
	m	(Lbfx;Lbfx;)Z	a	wantsToAttack
		p	1		target
		p	2		owner
	m	(Lbym;)Z	a	canBeLeashed
		p	1		player
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	(Ljava/util/UUID;)V	b	setOwnerUUID
		p	1		uuid
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lbfx;)Z	c	canAttack
		p	1		target
	m	()Leee;	cb	getTeam
	m	()Lclz;	e	getLevel
	m	(Lbym;)V	e	tame
		p	1		player
	m	()Z	fS	isOrderedToSit
	m	(Lbfx;)Z	m	isOwnedBy
		p	1		entity
	m	(Lbfh;)Z	p	isAlliedTo
		p	1		other
	m	()Z	q	isTame
	m	()V	r	reassessTameGoals
	m	()Z	w	isInSittingPose
	m	(Z)V	w	spawnTamingParticles
		p	1		positive
	m	(Z)V	x	setTame
		p	1		tamed
	m	(Z)V	y	setInSittingPose
		p	1		inSittingPose
	m	(Z)V	z	setOrderedToSit
		p	1		sitting
	f	Lacl;	bS	DATA_FLAGS_ID
	f	Lacl;	bT	DATA_OWNERUUID_ID
	f	Z	bV	orderedToSit
c	bgu	net/minecraft/world/entity/Targeting
	m	()Lbfx;	P_	getTarget
c	bgv	net/minecraft/world/entity/TraceableEntity
	m	()Lbfh;	v	getOwner
c	bgw	net/minecraft/world/entity/VariantHolder
	m	(Ljava/lang/Object;)V	a	setVariant
		p	1		variant
	m	()Ljava/lang/Object;	c	getVariant
c	bgx	net/minecraft/world/entity/WalkAnimationState
	m	()F	a	speed
	m	(F)V	a	setSpeed
		p	1		speed
	m	(FF)V	a	update
		p	1		speed
		p	2		multiplier
	m	()F	b	position
	m	(F)F	b	speed
		p	1		tickDelta
	m	()Z	c	isMoving
	m	(F)F	c	position
		p	1		tickDelta
	f	F	a	speedOld
	f	F	b	speed
	f	F	c	position
c	bgy	net/minecraft/world/entity/ai/Brain
	m	(Ljava/util/Collection;Ljava/util/Collection;Lcom/google/common/collect/ImmutableList;Ljava/util/function/Supplier;)V	<init>	<init>
		p	1		memories
		p	2		sensors
		p	3		memoryEntries
		p	4		codecSupplier
	m	()V	a	clearMemories
	m	(ILcom/google/common/collect/ImmutableList;)Lcom/google/common/collect/ImmutableList;	a	createPriorityPairs
		p	1		begin
		p	2		tasks
	m	(JJ)V	a	updateActivityFromSchedule
		p	1		timeOfDay
		p	3		time
	m	(Laip;Lbfx;)V	a	tick
		p	1		world
		p	2		entity
	m	(Lboz;)Z	a	hasMemoryValue
		p	1		type
	m	(Lboz;Lbpa;)Z	a	checkMemory
		p	1		type
		p	2		state
	m	(Lboz;Ljava/lang/Object;)V	a	setMemory
		p	1		type
		p	2		value
	m	(Lboz;Ljava/lang/Object;J)V	a	setMemoryWithExpiry
		p	1		type
		p	2		value
		p	3		expiry
	m	(Lboz;Ljava/util/Optional;)V	a	setMemory
		p	1		type
		p	2		value
	m	(Lbzx;)V	a	setActiveActivityIfPossible
		p	1		activity
	m	(Lbzx;ILcom/google/common/collect/ImmutableList;)V	a	addActivity
		p	1		activity
		p	2		begin
		p	3		list
	m	(Lbzx;ILcom/google/common/collect/ImmutableList;Lboz;)V	a	addActivityAndRemoveMemoryWhenStopped
		p	1		activity
		p	2		begin
		p	3		tasks
		p	4		memoryType
	m	(Lbzx;Lcom/google/common/collect/ImmutableList;)V	a	addActivity
		p	1		activity
		p	2		indexedTasks
	m	(Lbzx;Lcom/google/common/collect/ImmutableList;Ljava/util/Set;)V	a	addActivityWithConditions
		p	1		activity
		p	2		indexedTasks
		p	3		requiredMemories
	m	(Lbzx;Lcom/google/common/collect/ImmutableList;Ljava/util/Set;Ljava/util/Set;)V	a	addActivityAndRemoveMemoriesWhenStopped
		p	1		activity
		p	2		indexedTasks
		p	3		requiredMemories
		p	4		forgettingMemories
	m	(Lbzz;)V	a	setSchedule
		p	1		schedule
	m	(Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/DataResult;	a	serializeStart
		p	1		ops
	m	(Ljava/lang/Integer;)Ljava/util/Map;	a	lambda$addActivityAndRemoveMemoriesWhenStopped$3
		p	0		index
	m	(Ljava/lang/Object;)Z	a	isEmptyCollection
		p	1		value
	m	(Ljava/lang/Object;Ljava/lang/Object;)Z	a	lambda$isMemoryValue$2
		p	1		memoryValue
	m	(Ljava/util/Collection;Ljava/util/Collection;)Lbgy$b;	a	provider
		p	0		memoryModules
		p	1		sensors
	m	(Ljava/util/List;)V	a	setActiveActivityToFirstValid
		p	1		activities
	m	(Ljava/util/Map$Entry;)Lbgy$a;	a	lambda$memories$0
		p	0		entry
	m	(Ljava/util/Set;)V	a	setCoreActivities
		p	1		coreActivities
	m	()Ljava/util/Map;	b	getMemories
	m	(Laip;Lbfx;)V	b	stopAll
		p	1		world
		p	2		entity
	m	(Lboz;)V	b	eraseMemory
		p	1		type
	m	(Lboz;Ljava/lang/Object;)Z	b	isMemoryValue
		p	1		type
		p	2		value
	m	(Lboz;Ljava/util/Optional;)V	b	setMemoryInternal
		p	1		type
		p	2		memory
	m	(Lbzx;)V	b	setDefaultActivity
		p	1		activity
	m	(Ljava/util/Collection;Ljava/util/Collection;)Lcom/mojang/serialization/Codec;	b	codec
		p	0		memoryModules
		p	1		sensors
	m	()Lbzz;	c	getSchedule
	m	(Laip;Lbfx;)V	c	tickSensors
		p	1		world
		p	2		entity
	m	(Lboz;)Ljava/util/Optional;	c	getMemory
		p	1		type
	m	(Lbzx;)Z	c	isActive
		p	1		activity
	m	()Ljava/util/Set;	d	getActiveActivities
	m	(Laip;Lbfx;)V	d	startEachNonRunningBehavior
		p	1		world
		p	2		entity
	m	(Lboz;)Ljava/util/Optional;	d	getMemoryInternal
		p	1		type
	m	(Lbzx;)V	d	setActiveActivity
		p	1		except
	m	()Ljava/util/List;	e	getRunningBehaviors
	m	(Laip;Lbfx;)V	e	tickEachRunningBehavior
		p	1		world
		p	2		entity
	m	(Lboz;)J	e	getTimeUntilExpiry
		p	1		type
	m	(Lbzx;)V	e	eraseMemoriesForOtherActivitesThan
		p	1		except
	m	()V	f	useDefaultActivity
	m	(Lboz;)V	f	lambda$clearMemories$1
		p	1		type
	m	(Lbzx;)Z	f	activityRequirementsAreMet
		p	1		activity
	m	()Ljava/util/Optional;	g	getActiveNonCoreActivity
	m	(Lbzx;)Ljava/util/Set;	g	lambda$addActivityAndRemoveMemoriesWhenStopped$4
		p	0		activity2
	m	()V	h	removeAllBehaviors
	m	()Lbgy;	i	copyWithoutBehaviors
	m	()Ljava/util/stream/Stream;	j	memories
	m	()V	k	forgetOutdatedMemories
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/function/Supplier;	b	codec
	f	I	c	SCHEDULE_UPDATE_DELAY
	f	Ljava/util/Map;	d	memories
	f	Ljava/util/Map;	e	sensors
	f	Ljava/util/Map;	f	availableBehaviorsByPriority
	f	Lbzz;	g	schedule
	f	Ljava/util/Map;	h	activityRequirements
	f	Ljava/util/Map;	i	activityMemoriesToEraseWhenStopped
	f	Ljava/util/Set;	j	coreActivities
	f	Ljava/util/Set;	k	activeActivities
	f	Lbzx;	l	defaultActivity
	f	J	m	lastScheduleUpdate
c	bgy$1	net/minecraft/world/entity/ai/Brain$1
	m	(Lbgy;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/RecordBuilder;)Lcom/mojang/serialization/RecordBuilder;	a	encode
	m	(Lboz;)Lcom/mojang/serialization/DataResult;	a	lambda$captureRead$6
	m	(Lboz;Lboy;)Lbgy$a;	a	lambda$captureRead$8
		p	1		data
	m	(Lboz;Lcom/mojang/serialization/Codec;)Ladd;	a	lambda$keys$0
		p	1		codec
	m	(Lboz;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	captureRead
		p	1		memoryType
		p	2		ops
		p	3		value
	m	(Lcom/mojang/serialization/DynamicOps;Ladd;)Ljava/lang/Object;	a	lambda$keys$2
		p	1		id
	m	(Lcom/mojang/serialization/DynamicOps;Lcom/mojang/datafixers/util/Pair;Lboz;)Lcom/mojang/serialization/DataResult;	a	lambda$decode$3
		p	3		memoryType
	m	(Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/RecordBuilder;Lbgy$a;)V	a	lambda$encode$9
		p	2		entry
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/DataResult;	a	lambda$captureRead$7
		p	2		codec
	m	(Lcom/mojang/serialization/DynamicOps;Lorg/apache/commons/lang3/mutable/MutableObject;Lcom/mojang/datafixers/util/Pair;)V	a	lambda$decode$4
		p	3		pair
	m	(Lboz;)Ljava/lang/String;	b	lambda$captureRead$5
	m	(Lboz;)Ljava/util/stream/Stream;	c	lambda$keys$1
		p	0		memoryType
	f	Ljava/util/Collection;	a	val$memoryTypes
	f	Ljava/util/Collection;	b	val$sensorTypes
	f	Lorg/apache/commons/lang3/mutable/MutableObject;	c	val$codecReference
c	bgy$a	net/minecraft/world/entity/ai/Brain$MemoryValue
	m	(Lboz;Ljava/util/Optional;)V	<init>	<init>
		p	1		type
		p	2		data
	m	(Lbgy;)V	a	setMemoryInternal
		p	1		brain
	m	(Lboz;Ljava/util/Optional;)Lbgy$a;	a	createUnchecked
		p	0		type
		p	1		data
	m	(Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/RecordBuilder;)V	a	serialize
		p	1		ops
		p	2		builder
	m	(Lcom/mojang/serialization/RecordBuilder;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/Codec;)V	a	lambda$serialize$1
		p	3		codec
	m	(Lcom/mojang/serialization/RecordBuilder;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/Codec;Lboy;)V	a	lambda$serialize$0
		p	4		data
	f	Lboz;	a	type
	f	Ljava/util/Optional;	b	value
c	bgy$b	net/minecraft/world/entity/ai/Brain$Provider
	m	(Ljava/util/Collection;Ljava/util/Collection;)V	<init>	<init>
		p	1		memoryModules
		p	2		sensors
	m	()Lbgy;	a	lambda$makeBrain$1
	m	(Lcom/mojang/serialization/Dynamic;)Lbgy;	a	makeBrain
		p	1		data
	m	()Lcom/mojang/serialization/Codec;	b	lambda$makeBrain$0
	f	Ljava/util/Collection;	a	memoryTypes
	f	Ljava/util/Collection;	b	sensorTypes
	f	Lcom/mojang/serialization/Codec;	c	codec
c	bgz	net/minecraft/world/entity/ai/attributes/Attribute
	m	(Ljava/lang/String;D)V	<init>	<init>
		p	1		translationKey
		p	2		fallback
	m	()D	a	getDefaultValue
	m	(D)D	a	sanitizeValue
		p	1		value
	m	(Z)Lbgz;	a	setSyncable
		p	1		tracked
	m	()Z	b	isClientSyncable
	m	()Ljava/lang/String;	c	getDescriptionId
	f	I	a	MAX_NAME_LENGTH
	f	D	b	defaultValue
	f	Z	c	syncable
	f	Ljava/lang/String;	d	descriptionId
c	bha	net/minecraft/world/entity/ai/attributes/AttributeInstance
	m	(Lbgz;Ljava/util/function/Consumer;)V	<init>	<init>
		p	1		type
		p	2		updateCallback
	m	()Lbgz;	a	getAttribute
	m	(D)V	a	setBaseValue
		p	1		baseValue
	m	(Lbha;)V	a	replaceFrom
		p	1		other
	m	(Lbhc$a;)Ljava/util/Set;	a	getModifiers
		p	1		operation
	m	(Lbhc$a;Ljava/util/Set;)V	a	lambda$replaceFrom$1
		p	1		operation
		p	2		modifiers
	m	(Lbhc;)Z	a	hasModifier
		p	1		modifier
	m	(Ljava/util/UUID;)Lbhc;	a	getModifier
		p	1		uuid
	m	(Lre;)V	a	load
		p	1		nbt
	m	()D	b	getBaseValue
	m	(Lbhc$a;)Ljava/util/Collection;	b	getModifiersOrEmpty
		p	1		operation
	m	(Lbhc;)V	b	addTransientModifier
		p	1		modifier
	m	(Ljava/util/UUID;)V	b	removeModifier
		p	1		uuid
	m	()Ljava/util/Set;	c	getModifiers
	m	(Lbhc$a;)Ljava/util/Set;	c	lambda$getModifiers$0
		p	0		operation
	m	(Lbhc;)V	c	addPermanentModifier
		p	1		modifier
	m	(Ljava/util/UUID;)Z	c	removePermanentModifier
		p	1		uuid
	m	()V	d	setDirty
	m	(Lbhc;)V	d	removeModifier
		p	1		modifier
	m	()V	e	removeModifiers
	m	(Lbhc;)V	e	addModifier
		p	1		modifier
	m	()D	f	getValue
	m	()Lre;	g	save
	m	()D	h	calculateValue
	f	Lbgz;	a	attribute
	f	Ljava/util/Map;	b	modifiersByOperation
	f	Ljava/util/Map;	c	modifierById
	f	Ljava/util/Set;	d	permanentModifiers
	f	D	e	baseValue
	f	Z	f	dirty
	f	D	g	cachedValue
	f	Ljava/util/function/Consumer;	h	onDirty
c	bhb	net/minecraft/world/entity/ai/attributes/AttributeMap
	m	(Lbhd;)V	<init>	<init>
		p	1		defaultAttributes
	m	()Ljava/util/Set;	a	getDirtyAttributes
	m	(Lbgz;)Lbha;	a	getInstance
		p	1		attribute
	m	(Lbgz;Lbhc;)V	a	lambda$addTransientAttributeModifiers$3
		p	1		attribute
		p	2		attributeModifier
	m	(Lbgz;Ljava/util/Collection;)V	a	lambda$removeAttributeModifiers$2
		p	1		attribute
		p	2		modifiers
	m	(Lbgz;Ljava/util/UUID;)Z	a	hasModifier
		p	1		attribute
		p	2		uuid
	m	(Lbha;)V	a	onAttributeModified
		p	1		instance
	m	(Lbhb;)V	a	assignValues
		p	1		other
	m	(Lcom/google/common/collect/Multimap;)V	a	removeAttributeModifiers
		p	1		attributeModifiers
	m	(Lhd;)Lbha;	a	getInstance
		p	1		attribute
	m	(Lhd;Ljava/util/UUID;)Z	a	hasModifier
		p	1		attribute
		p	2		uuid
	m	(Ljava/lang/String;)V	a	lambda$load$6
	m	(Lre;Lbgz;)V	a	lambda$load$5
		p	2		attribute
	m	(Lrk;)V	a	load
		p	1		nbt
	m	()Ljava/util/Collection;	b	getSyncableAttributes
	m	(Lbgz;)Z	b	hasAttribute
		p	1		attribute
	m	(Lbgz;Ljava/util/UUID;)D	b	getModifierValue
		p	1		attribute
		p	2		uuid
	m	(Lbha;)V	b	lambda$assignValues$4
		p	1		attributeInstance
	m	(Lcom/google/common/collect/Multimap;)V	b	addTransientAttributeModifiers
		p	1		attributeModifiers
	m	(Lhd;)Z	b	hasAttribute
		p	1		attribute
	m	(Lhd;Ljava/util/UUID;)D	b	getModifierValue
		p	1		attribute
		p	2		uuid
	m	()Lrk;	c	save
	m	(Lbgz;)D	c	getValue
		p	1		attribute
	m	(Lbha;)Z	c	lambda$getSyncableAttributes$0
		p	0		attribute
	m	(Lbgz;)D	d	getBaseValue
		p	1		attribute
	m	(Lbgz;)Lbha;	e	lambda$getInstance$1
		p	1		attribute
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/Map;	b	attributes
	f	Ljava/util/Set;	c	dirtyAttributes
	f	Lbhd;	d	supplier
c	bhc	net/minecraft/world/entity/ai/attributes/AttributeModifier
	m	(Ljava/lang/String;DLbhc$a;)V	<init>	<init>
		p	1		name
		p	2		value
		p	4		operation
	m	(Ljava/util/UUID;Ljava/lang/String;DLbhc$a;)V	<init>	<init>
		p	1		uuid
		p	2		name
		p	3		value
		p	5		operation
	m	(Ljava/util/UUID;Ljava/util/function/Supplier;DLbhc$a;)V	<init>	<init>
		p	1		uuid
		p	2		nameGetter
		p	3		value
		p	5		operation
	m	()Ljava/util/UUID;	a	getId
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$new$1
	m	(Lre;)Lbhc;	a	load
		p	0		nbt
	m	()Ljava/lang/String;	b	getName
	m	(Ljava/lang/String;)Ljava/lang/String;	b	lambda$new$0
	m	()Lbhc$a;	c	getOperation
	m	()D	d	getAmount
	m	()Lre;	e	save
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	D	b	amount
	f	Lbhc$a;	c	operation
	f	Ljava/util/function/Supplier;	d	nameGetter
	f	Ljava/util/UUID;	e	id
c	bhc$a	net/minecraft/world/entity/ai/attributes/AttributeModifier$Operation
	m	(Ljava/lang/String;II)V	<init>	<init>
		p	3		id
	m	()I	a	toValue
	m	(I)Lbhc$a;	a	fromValue
		p	0		id
	m	()[Lbhc$a;	b	$values
	f	Lbhc$a;	a	ADDITION
	f	Lbhc$a;	b	MULTIPLY_BASE
	f	Lbhc$a;	c	MULTIPLY_TOTAL
	f	[Lbhc$a;	d	OPERATIONS
	f	I	e	value
	f	[Lbhc$a;	f	$VALUES
c	bhd	net/minecraft/world/entity/ai/attributes/AttributeSupplier
	m	(Ljava/util/Map;)V	<init>	<init>
		p	1		instances
	m	()Lbhd$a;	a	builder
	m	(Lbgz;)D	a	getValue
		p	1		attribute
	m	(Lbgz;Ljava/util/UUID;)D	a	getModifierValue
		p	1		attribute
		p	2		uuid
	m	(Ljava/util/function/Consumer;Lbgz;)Lbha;	a	createInstance
		p	1		updateCallback
		p	2		attribute
	m	(Lbgz;)D	b	getBaseValue
		p	1		attribute
	m	(Lbgz;Ljava/util/UUID;)Z	b	hasModifier
		p	1		type
		p	2		uuid
	m	(Lbgz;)Z	c	hasAttribute
		p	1		type
	m	(Lbgz;)Lbha;	d	getAttributeInstance
		p	1		attribute
	f	Ljava/util/Map;	a	instances
c	bhd$a	net/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder
	m	()Lbhd;	a	build
	m	(Lbgz;)Lbhd$a;	a	add
		p	1		attribute
	m	(Lbgz;D)Lbhd$a;	a	add
		p	1		attribute
		p	2		baseValue
	m	(Lbgz;Lbha;)V	a	lambda$create$0
		p	2		attribute
	m	(Lbgz;)Lbha;	b	create
		p	1		attribute
	f	Ljava/util/Map;	a	builder
	f	Z	b	instanceFrozen
c	bhe	net/minecraft/world/entity/ai/attributes/Attributes
	m	(Ljava/lang/String;Lbgz;)Lbgz;	a	register
		p	0		id
		p	1		attribute
	f	Lbgz;	a	MAX_HEALTH
	f	Lbgz;	b	FOLLOW_RANGE
	f	Lbgz;	c	KNOCKBACK_RESISTANCE
	f	Lbgz;	d	MOVEMENT_SPEED
	f	Lbgz;	e	FLYING_SPEED
	f	Lbgz;	f	ATTACK_DAMAGE
	f	Lbgz;	g	ATTACK_KNOCKBACK
	f	Lbgz;	h	ATTACK_SPEED
	f	Lbgz;	i	ARMOR
	f	Lbgz;	j	ARMOR_TOUGHNESS
	f	Lbgz;	k	LUCK
	f	Lbgz;	l	SPAWN_REINFORCEMENTS_CHANCE
	f	Lbgz;	m	JUMP_STRENGTH
c	bhf	net/minecraft/world/entity/ai/attributes/DefaultAttributes
	m	()V	a	validate
	m	(Ladd;)V	a	lambda$validate$2
		p	0		id
	m	(Lbfl;)Lbhd;	a	getSupplier
		p	0		type
	m	(Lbfl;)Z	b	hasSupplier
		p	0		type
	m	(Lbfl;)Z	c	lambda$validate$1
		p	0		entityType
	m	(Lbfl;)Z	d	lambda$validate$0
		p	0		entityType
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/Map;	b	SUPPLIERS
c	bhg	net/minecraft/world/entity/ai/attributes/RangedAttribute
	m	(Ljava/lang/String;DDD)V	<init>	<init>
		p	1		translationKey
		p	2		fallback
		p	4		min
		p	6		max
	m	(D)D	a	sanitizeValue
		p	1		value
	m	()D	d	getMinValue
	m	()D	e	getMaxValue
	f	D	b	minValue
	f	D	c	maxValue
c	bhh	net/minecraft/world/entity/ai/attributes/package-info
c	bhi	net/minecraft/world/entity/ai/behavior/AcquirePoi
	m	(JLit/unimi/dsi/fastutil/longs/Long2ObjectMap$Entry;)Z	a	lambda$create$0
		p	2		entry
	m	(Laip;JJ)Lbhi$a;	a	lambda$create$5
	m	(Laip;Lbgg;Ljava/lang/Byte;)V	a	lambda$create$3
		p	2		status
	m	(Lbfz;Ljava/util/Set;)Ldwz;	a	findPathToPois
		p	0		entity
		p	1		pois
	m	(Lbiz;Lblc;)Lble;	a	lambda$create$9
		p	1		poiPos
	m	(Lboz;Lbiz;Lblb$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$10
		p	2		context
	m	(Lboz;ZLorg/apache/commons/lang3/mutable/MutableLong;Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;Ljava/util/function/Predicate;Ljava/util/Optional;Lblb$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$8
		p	0		context
	m	(Lbqx;Ljava/util/function/Predicate;Lgt;Lblc;Laip;Ljava/util/Optional;Lbgg;Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;Lhd;)V	a	lambda$create$4
		p	8		poiType
	m	(Lgt;Lhd;Lgt;)Z	a	lambda$create$2
	m	(Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;JLgt;)Z	a	lambda$create$1
		p	3		pos
	m	(Ljava/util/function/Predicate;Lboz;Lboz;ZLjava/util/Optional;)Lbhq;	a	create
		p	0		poiPredicate
		p	1		poiPosModule
		p	2		potentialPoiPosModule
		p	3		onlyRunIfChild
		p	4		entityStatus
	m	(Ljava/util/function/Predicate;Lboz;ZLjava/util/Optional;)Lbhq;	a	create
		p	0		poiPredicate
		p	1		poiPosModule
		p	2		onlyRunIfChild
		p	3		entityStatus
	m	(ZLorg/apache/commons/lang3/mutable/MutableLong;Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;Ljava/util/function/Predicate;Lblc;Ljava/util/Optional;Laip;Lbgg;J)Z	a	lambda$create$6
		p	6		world
		p	7		entity
		p	8		time
	m	(ZLorg/apache/commons/lang3/mutable/MutableLong;Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;Ljava/util/function/Predicate;Ljava/util/Optional;Lblc;)Lble;	a	lambda$create$7
		p	5		queryResult
	f	I	a	SCAN_RANGE
c	bhi$a	net/minecraft/world/entity/ai/behavior/AcquirePoi$JitteredLinearRetry
	m	(Lapo;J)V	<init>	<init>
		p	1		random
		p	2		time
	m	(J)V	a	markAttempt
		p	1		time
	m	(J)Z	b	isStillValid
		p	1		time
	m	(J)Z	c	shouldRetry
		p	1		time
	f	I	a	MIN_INTERVAL_INCREASE
	f	I	b	MAX_INTERVAL_INCREASE
	f	I	c	MAX_RETRY_PATHFINDING_INTERVAL
	f	Lapo;	d	random
	f	J	e	previousAttemptTimestamp
	f	J	f	nextScheduledAttemptTimestamp
	f	I	g	currentDelay
c	bhj	net/minecraft/world/entity/ai/behavior/AnimalMakeLove
	m	(Lbfl;F)V	<init>	<init>
		p	1		targetType
		p	2		speed
	m	(Laip;Lbfx;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laip;Lbfx;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbrj;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laip;Lbrj;J)V	a	start
	m	(Lbrj;)Lbrj;	a	getBreedTarget
		p	1		animal
	m	(Lbrj;Lbfx;)Z	a	lambda$findValidBreedPartner$0
		p	2		entity
	m	(Laip;Lbfx;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbrj;J)Z	b	canStillUse
	m	(Lbrj;)Z	b	hasBreedTargetOfRightType
		p	1		animal
	m	(Laip;Lbfx;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbrj;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Lbrj;)Ljava/util/Optional;	c	findValidBreedPartner
		p	1		animal
	m	(Laip;Lbfx;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbrj;J)V	d	stop
	f	I	c	BREED_RANGE
	f	I	d	MIN_DURATION
	f	I	e	MAX_DURATION
	f	Lbfl;	f	partnerType
	f	F	g	speedModifier
	f	J	h	spawnChildAtTime
c	bhk	net/minecraft/world/entity/ai/behavior/AnimalPanic
	m	(F)V	<init>	<init>
		p	1		speed
	m	(FLjava/util/function/Predicate;)V	<init>	<init>
		p	1		speed
		p	2		predicate
	m	(Laip;Lbfx;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laip;Lbfx;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbgg;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laip;Lbgg;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lbgg;)Z	a	lambda$static$0
		p	0		entity
	m	(Lbgg;Laip;)Lede;	a	getPanicPos
		p	1		entity
		p	2		world
	m	(Lclo;Lbfh;)Ljava/util/Optional;	a	lookForWater
		p	1		world
		p	2		entity
	m	(Lclo;Lgt;)Z	a	lambda$lookForWater$1
		p	1		pos
	m	(Laip;Lbfx;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbgg;J)V	b	start
	m	(Laip;Lbfx;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbgg;J)V	c	stop
	m	(Laip;Lbfx;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbgg;J)V	d	tick
	f	I	c	PANIC_MIN_DURATION
	f	I	d	PANIC_MAX_DURATION
	f	I	e	PANIC_DISTANCE_HORIZONTAL
	f	I	f	PANIC_DISTANCE_VERTICAL
	f	Ljava/util/function/Predicate;	g	DEFAULT_SHOULD_PANIC_PREDICATE
	f	F	h	speedMultiplier
	f	Ljava/util/function/Predicate;	i	shouldPanic
c	bhl	net/minecraft/world/entity/ai/behavior/AssignProfessionFromJobSite
	m	()Lbhq;	a	create
	m	(Lblb$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$6
		p	0		context
	m	(Lblb$b;Lblc;Lblc;)Lble;	a	lambda$create$5
		p	1		potentialJobSite
		p	2		jobSite
	m	(Lblb$b;Lblc;Lblc;Laip;Lbxz;J)Z	a	lambda$create$4
		p	3		world
		p	4		entity
		p	5		time
	m	(Lbxz;Laip;Lbyc;)V	a	lambda$create$3
		p	2		profession
	m	(Lhc;Laip;)Ljava/util/Optional;	a	lambda$create$0
		p	1		jobSiteWorld
	m	(Lhd;)Ljava/util/Optional;	a	lambda$create$2
		p	0		poiType
	m	(Lhd;Lbyc;)Z	a	lambda$create$1
		p	1		profession
c	bhm	net/minecraft/world/entity/ai/behavior/BabyFollowAdult
	m	(FLbfx;)Ljava/lang/Float;	a	lambda$create$0
		p	1		entity
	m	(Lbdj;F)Lbiz;	a	create
		p	0		executionRange
		p	1		speed
	m	(Lbdj;Ljava/util/function/Function;)Lbiz;	a	create
		p	0		executionRange
		p	1		speed
	m	(Lbdj;Ljava/util/function/Function;Lblb$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$3
		p	2		context
	m	(Lblb$b;Lbdj;Ljava/util/function/Function;Lblc;Lblc;Lblc;)Lble;	a	lambda$create$2
		p	3		nearestVisibleAdult
		p	4		lookTarget
		p	5		walkTarget
	m	(Lblb$b;Lblc;Lbdj;Ljava/util/function/Function;Lblc;Lblc;Laip;Lbfc;J)Z	a	lambda$create$1
		p	6		world
		p	7		entity
		p	8		time
c	bhn	net/minecraft/world/entity/ai/behavior/BackUpIfTooClose
	m	(IF)Lbiz;	a	create
		p	0		distance
		p	1		forwardMovement
	m	(IFLblb$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
		p	2		context
	m	(Lblb$b;IFLblc;Lblc;Lblc;Lblc;)Lble;	a	lambda$create$1
		p	3		walkTarget
		p	4		lookTarget
		p	5		attackTarget
		p	6		visibleMobs
	m	(Lblb$b;Lblc;ILblc;Lblc;FLaip;Lbfz;J)Z	a	lambda$create$0
		p	6		world
		p	7		entity
		p	8		time
c	bho	net/minecraft/world/entity/ai/behavior/BecomePassiveIfMemoryPresent
	m	(ILblc;Lblc;Lblc;)Lble;	a	lambda$create$2
		p	1		attackTarget
		p	2		pacified
		p	3		requiredMemoryResult
	m	(Lblc;ILblc;Laip;Lbfx;J)Z	a	lambda$create$1
		p	3		world
		p	4		entity
		p	5		time
	m	(Lboz;)Ljava/lang/String;	a	lambda$create$0
	m	(Lboz;I)Lbhq;	a	create
		p	0		requiredMemory
		p	1		duration
	m	(Lboz;ILblb$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$3
		p	2		context
c	bhp	net/minecraft/world/entity/ai/behavior/Behavior
	m	(Ljava/util/Map;)V	<init>	<init>
		p	1		requiredMemoryState
	m	(Ljava/util/Map;I)V	<init>	<init>
		p	1		requiredMemoryState
		p	2		runTime
	m	(Ljava/util/Map;II)V	<init>	<init>
		p	1		requiredMemoryState
		p	2		minRunTime
		p	3		maxRunTime
	m	()Lbhp$a;	a	getStatus
	m	(J)Z	a	timedOut
		p	1		time
	m	(Laip;Lbfx;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laip;Lbfx;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lbfx;)Z	a	hasRequiredMemories
		p	1		entity
	m	()Ljava/lang/String;	b	debugString
	m	(Laip;Lbfx;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbfx;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbfx;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbfx;J)Z	e	tryStart
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbfx;J)V	f	tickOrStop
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbfx;J)V	g	doStop
		p	1		world
		p	2		entity
		p	3		time
	f	I	a	DEFAULT_DURATION
	f	Ljava/util/Map;	b	entryCondition
	f	Lbhp$a;	c	status
	f	J	d	endTimestamp
	f	I	e	minDuration
	f	I	f	maxDuration
c	bhp$a	net/minecraft/world/entity/ai/behavior/Behavior$Status
	m	()[Lbhp$a;	a	$values
	f	Lbhp$a;	a	STOPPED
	f	Lbhp$a;	b	RUNNING
	f	[Lbhp$a;	c	$VALUES
c	bhq	net/minecraft/world/entity/ai/behavior/BehaviorControl
	m	()Lbhp$a;	a	getStatus
	m	()Ljava/lang/String;	b	debugString
	m	(Laip;Lbfx;J)Z	e	tryStart
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbfx;J)V	f	tickOrStop
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbfx;J)V	g	doStop
		p	1		world
		p	2		entity
		p	3		time
c	bhr	net/minecraft/world/entity/ai/behavior/BehaviorUtils
	m	(Laip;ILhw;)Z	a	lambda$findSectionClosestToVillage$2
		p	2		sectionPos
	m	(Laip;Lhw;I)Lhw;	a	findSectionClosestToVillage
		p	0		world
		p	1		center
		p	2		radius
	m	(Lbfh;)Lbfx;	a	lambda$getLivingEntityFromUUIDMemory$4
		p	0		target
	m	(Lbfl;Lbfx;)Z	a	lambda$targetIsValid$0
		p	1		entity
	m	(Lbfx;)Z	a	isBreeding
		p	0		entity
	m	(Lbfx;Lbfh;FI)V	a	setWalkAndLookTargetMemories
		p	0		entity
		p	1		target
		p	2		speed
		p	3		completionRange
	m	(Lbfx;Lbfx;)V	a	lookAtEntity
		p	0		entity
		p	1		target
	m	(Lbfx;Lbfx;D)Z	a	isOtherTargetMuchFurtherAwayThanCurrentAttackTarget
		p	0		source
		p	1		target
		p	2		extraDistance
	m	(Lbfx;Lbfx;F)V	a	lockGazeAndWalkToEachOther
		p	0		first
		p	1		second
		p	2		speed
	m	(Lbfx;Lbfx;Lbfx;)Lbfx;	a	getTargetNearestMe
		p	0		source
		p	1		first
		p	2		second
	m	(Lbfx;Lbjc;FI)V	a	setWalkAndLookTargetMemories
		p	0		entity
		p	1		target
		p	2		speed
		p	3		completionRange
	m	(Lbfx;Lboz;)Ljava/util/Optional;	a	getLivingEntityFromUUIDMemory
		p	0		entity
		p	1		uuidMemoryModule
	m	(Lbfx;Lcfv;Lede;)V	a	throwItem
		p	0		entity
		p	1		stack
		p	2		targetLocation
	m	(Lbfx;Lcfv;Lede;Lede;F)V	a	throwItem
		p	0		entity
		p	1		stack
		p	2		targetLocation
		p	3		velocityFactor
		p	4		yOffset
	m	(Lbfx;Lgt;FI)V	a	setWalkAndLookTargetMemories
		p	0		entity
		p	1		target
		p	2		speed
		p	3		completionRange
	m	(Lbfx;Ljava/util/Optional;Lbfx;)Lbfx;	a	getNearestTarget
		p	0		source
		p	1		first
		p	2		second
	m	(Lbfx;Ljava/util/UUID;)Lbfh;	a	lambda$getLivingEntityFromUUIDMemory$3
		p	1		uuid
	m	(Lbfz;Lbfx;I)Z	a	isWithinAttackRange
		p	0		mob
		p	1		target
		p	2		rangedWeaponReachReduction
	m	(Lbgg;II)Lede;	a	getRandomSwimmablePos
		p	0		entity
		p	1		horizontalRange
		p	2		verticalRange
	m	(Lbgy;Lbfx;)Z	a	entityIsVisible
		p	0		brain
		p	1		target
	m	(Lbgy;Lboz;Lbfl;)Z	a	targetIsValid
		p	0		brain
		p	1		memoryModuleType
		p	2		entityType
	m	(Lbgy;Lboz;Ljava/util/function/Predicate;)Z	a	targetIsValid
		p	0		brain
		p	1		memoryType
		p	2		filter
	m	(Lbfx;Lbfx;)Z	b	canSee
		p	0		source
		p	1		target
	m	(Lbfx;Lbfx;F)V	b	setWalkAndLookTargetMemoriesToEachOther
		p	0		first
		p	1		second
		p	2		speed
	m	(Lbgy;Lbfx;)Z	b	lambda$targetIsValid$1
		p	1		target
	m	(Lbfx;Lbfx;)V	c	lookAtEachOther
		p	0		first
		p	1		second
c	bhs	net/minecraft/world/entity/ai/behavior/BlockPosTracker
	m	(Lede;)V	<init>	<init>
		p	1		pos
	m	(Lgt;)V	<init>	<init>
		p	1		blockPos
	m	()Lede;	a	currentPosition
	m	(Lbfx;)Z	a	isVisibleBy
		p	1		entity
	m	()Lgt;	b	currentBlockPosition
	f	Lgt;	a	blockPos
	f	Lede;	b	centerPosition
c	bht	net/minecraft/world/entity/ai/behavior/CelebrateVillagersSurvivedRaid
	m	(II)V	<init>	<init>
		p	1		minRunTime
		p	2		maxRunTime
	m	(Laip;Lbfx;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laip;Lbfx;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbxz;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laip;Lbxz;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lcel;I)Lcfv;	a	getFirework
		p	1		color
		p	2		flight
	m	(Laip;Lbfx;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbxz;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbfx;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbxz;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	f	Lbzt;	c	currentRaid
c	bhu	net/minecraft/world/entity/ai/behavior/CopyMemoryWithExpiry
	m	(Lboz;Lboz;Ljava/util/function/Predicate;Lbdj;Lblb$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
		p	4		context
	m	(Ljava/util/function/Predicate;Lblb$b;Lbdj;Lblc;Lblc;)Lble;	a	lambda$create$1
		p	3		source
		p	4		target
	m	(Ljava/util/function/Predicate;Lblc;Lblb$b;Lblc;Lbdj;Laip;Lbfx;J)Z	a	lambda$create$0
		p	5		world
		p	6		entity
		p	7		time
	m	(Ljava/util/function/Predicate;Lboz;Lboz;Lbdj;)Lbhq;	a	create
		p	0		runPredicate
		p	1		sourceType
		p	2		targetType
		p	3		expiry
c	bhv	net/minecraft/world/entity/ai/behavior/CountDownCooldownTicks
	m	(Lboz;)V	<init>	<init>
		p	1		moduleType
	m	(J)Z	a	timedOut
		p	1		time
	m	(Laip;Lbfx;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbfx;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Lbfx;)Ljava/util/Optional;	b	getCooldownTickMemory
		p	1		entity
	m	(Laip;Lbfx;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	f	Lboz;	c	cooldownTicks
c	bhw	net/minecraft/world/entity/ai/behavior/Croak
	m	(Laip;Lbfx;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laip;Lbfx;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbsy;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laip;Lbsy;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbfx;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbsy;J)V	b	start
	m	(Laip;Lbfx;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbsy;J)V	c	stop
	m	(Laip;Lbfx;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbsy;J)V	d	tick
	f	I	c	CROAK_TICKS
	f	I	d	TIME_OUT_DURATION
	f	I	e	croakCounter
c	bhx	net/minecraft/world/entity/ai/behavior/CrossbowAttack
	m	(Laip;Lbfx;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laip;Lbfx;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbfz;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laip;Lbfz;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lbfz;Lbfx;)V	a	crossbowAttack
		p	1		entity
		p	2		target
	m	(Laip;Lbfx;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbfz;J)V	b	tick
	m	(Lbfx;)Lbfx;	b	getAttackTarget
		p	0		entity
	m	(Lbfz;Lbfx;)V	b	lookAtTarget
		p	1		entity
		p	2		target
	m	(Laip;Lbfx;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbfz;J)V	c	stop
	f	I	c	TIMEOUT
	f	I	d	attackDelay
	f	Lbhx$a;	e	crossbowState
c	bhx$a	net/minecraft/world/entity/ai/behavior/CrossbowAttack$CrossbowState
	m	()[Lbhx$a;	a	$values
	f	Lbhx$a;	a	UNCHARGED
	f	Lbhx$a;	b	CHARGING
	f	Lbhx$a;	c	CHARGED
	f	Lbhx$a;	d	READY_TO_ATTACK
	f	[Lbhx$a;	e	$VALUES
c	bhy	net/minecraft/world/entity/ai/behavior/DismountOrSkipMounting
	m	(ILjava/util/function/BiPredicate;)Lbhq;	a	create
		p	0		range
		p	1		alternativeRideCondition
	m	(ILjava/util/function/BiPredicate;Lblb$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
		p	2		context
	m	(Lbfx;Lbfh;I)Z	a	isVehicleValid
		p	0		entity
		p	1		vehicle
		p	2		range
	m	(Lblb$b;ILjava/util/function/BiPredicate;Lblc;)Lble;	a	lambda$create$1
		p	3		rideTarget
	m	(Lblb$b;Lblc;ILjava/util/function/BiPredicate;Laip;Lbfx;J)Z	a	lambda$create$0
		p	4		world
		p	5		entity
		p	6		time
c	bhz	net/minecraft/world/entity/ai/behavior/DoNothing
	m	(II)V	<init>	<init>
		p	1		minRunTime
		p	2		maxRunTime
	m	()Lbhp$a;	a	getStatus
	m	()Ljava/lang/String;	b	debugString
	m	(Laip;Lbfx;J)Z	e	tryStart
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbfx;J)V	f	tickOrStop
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbfx;J)V	g	doStop
		p	1		world
		p	2		entity
		p	3		time
	f	I	a	minDuration
	f	I	b	maxDuration
	f	Lbhp$a;	c	status
	f	J	d	endTimestamp
c	bia	net/minecraft/world/entity/ai/behavior/EntityTracker
	m	(Lbfh;Z)V	<init>	<init>
		p	1		entity
		p	2		useEyeHeight
	m	()Lede;	a	currentPosition
	m	(Lbfx;)Z	a	isVisibleBy
		p	1		entity
	m	()Lgt;	b	currentBlockPosition
	m	()Lbfh;	c	getEntity
	f	Lbfh;	a	entity
	f	Z	b	trackEyeHeight
c	bib	net/minecraft/world/entity/ai/behavior/EraseMemoryIf
	m	(Lboz;Ljava/util/function/Predicate;Lblb$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
		p	2		context
	m	(Ljava/util/function/Predicate;Lblc;)Lble;	a	lambda$create$1
		p	1		queryResult
	m	(Ljava/util/function/Predicate;Lblc;Laip;Lbfx;J)Z	a	lambda$create$0
		p	2		world
		p	3		entity
		p	4		time
	m	(Ljava/util/function/Predicate;Lboz;)Lbhq;	a	create
		p	0		condition
		p	1		memory
c	bic	net/minecraft/world/entity/ai/behavior/FollowTemptation
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1		speed
	m	(J)Z	a	timedOut
		p	1		time
	m	(Laip;Lbfx;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbgg;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lbgg;)F	a	getSpeedModifier
		p	1		entity
	m	(Laip;Lbfx;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbgg;J)V	b	start
	m	(Lbgg;)Ljava/util/Optional;	b	getTemptingPlayer
		p	1		entity
	m	()Lcom/google/common/collect/ImmutableMap;	c	lambda$new$0
	m	(Laip;Lbfx;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbgg;J)V	c	stop
	m	(Laip;Lbfx;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbgg;J)V	d	tick
	f	I	c	TEMPTATION_COOLDOWN
	f	D	d	CLOSE_ENOUGH_DIST
	f	Ljava/util/function/Function;	e	speedModifier
c	bid	net/minecraft/world/entity/ai/behavior/GateBehavior
	m	(Ljava/util/Map;Ljava/util/Set;Lbid$a;Lbid$b;Ljava/util/List;)V	<init>	<init>
		p	1		requiredMemoryState
		p	2		memoriesToForgetWhenStopped
		p	3		order
		p	4		runMode
		p	5		tasks
	m	()Lbhp$a;	a	getStatus
	m	(Laip;Lbfx;JLbhq;)V	a	lambda$doStop$5
		p	4		task
	m	(Lbfx;)Z	a	hasRequiredMemories
		p	1		entity
	m	(Lbhq;)Z	a	lambda$toString$6
		p	0		task
	m	(Lcom/mojang/datafixers/util/Pair;)V	a	lambda$new$0
		p	1		task
	m	()Ljava/lang/String;	b	debugString
	m	(Laip;Lbfx;JLbhq;)V	b	lambda$tickOrStop$2
		p	4		task
	m	(Lbhq;)Z	b	lambda$doStop$4
		p	0		task
	m	(Lbhq;)Z	c	lambda$tickOrStop$3
		p	0		task
	m	(Lbhq;)Z	d	lambda$tickOrStop$1
		p	0		task
	m	(Laip;Lbfx;J)Z	e	tryStart
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbfx;J)V	f	tickOrStop
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbfx;J)V	g	doStop
		p	1		world
		p	2		entity
		p	3		time
	f	Ljava/util/Map;	a	entryCondition
	f	Ljava/util/Set;	b	exitErasedMemories
	f	Lbid$a;	c	orderPolicy
	f	Lbid$b;	d	runningPolicy
	f	Lbjx;	e	behaviors
	f	Lbhp$a;	f	status
c	bid$a	net/minecraft/world/entity/ai/behavior/GateBehavior$OrderPolicy
	m	(Ljava/lang/String;ILjava/util/function/Consumer;)V	<init>	<init>
		p	3		listModifier
	m	()[Lbid$a;	a	$values
	m	(Lbjx;)V	a	apply
		p	1		list
	m	(Lbjx;)V	b	lambda$static$0
		p	0		list
	f	Lbid$a;	a	ORDERED
	f	Lbid$a;	b	SHUFFLED
	f	Ljava/util/function/Consumer;	c	consumer
	f	[Lbid$a;	d	$VALUES
c	bid$b	net/minecraft/world/entity/ai/behavior/GateBehavior$RunningPolicy
	m	()[Lbid$b;	a	$values
	m	(Ljava/util/stream/Stream;Laip;Lbfx;J)V	a	apply
		p	1		tasks
		p	2		world
		p	3		entity
		p	4		time
	f	Lbid$b;	a	RUN_ONE
	f	Lbid$b;	b	TRY_ALL
	f	[Lbid$b;	c	$VALUES
c	bid$b$1	net/minecraft/world/entity/ai/behavior/GateBehavior$RunningPolicy$1
	m	(Laip;Lbfx;JLbhq;)Z	a	lambda$apply$1
		p	4		task
	m	(Lbhq;)Z	a	lambda$apply$0
		p	0		task
	m	(Ljava/util/stream/Stream;Laip;Lbfx;J)V	a	apply
		p	1		tasks
		p	2		world
		p	3		entity
		p	4		time
c	bid$b$2	net/minecraft/world/entity/ai/behavior/GateBehavior$RunningPolicy$2
	m	(Laip;Lbfx;JLbhq;)V	a	lambda$apply$1
		p	4		task
	m	(Lbhq;)Z	a	lambda$apply$0
		p	0		task
	m	(Ljava/util/stream/Stream;Laip;Lbfx;J)V	a	apply
		p	1		tasks
		p	2		world
		p	3		entity
		p	4		time
c	bie	net/minecraft/world/entity/ai/behavior/GiveGiftToHero
	m	(I)V	<init>	<init>
		p	1		delay
	m	(Laip;)I	a	calculateTimeUntilNextGift
		p	0		world
	m	(Laip;Lbfx;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laip;Lbfx;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbxz;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laip;Lbxz;J)V	a	start
	m	(Lbxz;)Ljava/util/List;	a	getItemToThrow
		p	1		villager
	m	(Lbxz;Lbfx;)V	a	throwGift
		p	1		villager
		p	2		recipient
	m	(Lbxz;Lbym;)Z	a	isWithinThrowingDistance
		p	1		villager
		p	2		player
	m	(Lbym;)Z	a	isHero
		p	1		player
	m	(Ljava/util/HashMap;)V	a	lambda$static$0
		p	0		gifts
	m	(Laip;Lbfx;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbxz;J)Z	b	canStillUse
	m	(Lbxz;)Z	b	isHeroVisible
		p	1		villager
	m	(Laip;Lbfx;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbxz;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Lbxz;)Ljava/util/Optional;	c	getNearestTargetableHero
		p	1		villager
	m	(Laip;Lbfx;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbxz;J)V	d	stop
	f	I	c	THROW_GIFT_AT_DISTANCE
	f	I	d	MIN_TIME_BETWEEN_GIFTS
	f	I	e	MAX_TIME_BETWEEN_GIFTS
	f	I	f	TIME_TO_DELAY_FOR_HEAD_TO_FINISH_TURNING
	f	Ljava/util/Map;	g	GIFTS
	f	F	h	SPEED_MODIFIER
	f	I	i	timeUntilNextGift
	f	Z	j	giftGivenDuringThisRun
	f	J	k	timeSinceStart
c	bif	net/minecraft/world/entity/ai/behavior/GoAndGiveItemsToTarget
	m	(Ljava/util/function/Function;FI)V	<init>	<init>
		p	1		lookTargetFunction
		p	2		speed
		p	3		runTime
	m	(Laip;Lbfx;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laip;Lbfx;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lbfx;Lbjc;)V	a	lambda$start$0
		p	2		target
	m	(Lbfx;Lcfv;Lede;)V	a	throwItem
		p	0		entity
		p	1		stack
		p	2		target
	m	(Lbjc;)Lede;	a	getThrowPosition
		p	0		target
	m	(Lbjc;Lcfv;Laiq;)V	a	triggerDropItemOnBlock
		p	1		target
		p	2		stack
		p	3		player
	m	(Lbfx;)Z	b	canThrowItemToTarget
		p	1		entity
	m	(Lbjc;Lcfv;Laiq;)V	b	lambda$tick$1
		p	3		player
	m	(Laip;Lbfx;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbfx;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
	f	I	c	CLOSE_ENOUGH_DISTANCE_TO_TARGET
	f	I	d	ITEM_PICKUP_COOLDOWN_AFTER_THROWING
	f	Ljava/util/function/Function;	e	targetPositionGetter
	f	F	f	speedModifier
c	big	net/minecraft/world/entity/ai/behavior/GoToClosestVillage
	m	(FI)Lbhq;	a	create
		p	0		speed
		p	1		completionRange
	m	(FILblb$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$3
		p	2		context
	m	(FILblc;)Lble;	a	lambda$create$2
		p	2		walkTarget
	m	(Lblc;FILaip;Lbxz;J)Z	a	lambda$create$1
		p	3		world
		p	4		entity
		p	5		time
	m	(Lbqx;Lgt;)D	a	lambda$create$0
		p	1		pos
c	bih	net/minecraft/world/entity/ai/behavior/GoToPotentialJobSite
	m	(F)V	<init>	<init>
		p	1		speed
	m	(Laip;Lbfx;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laip;Lbfx;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbxz;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laip;Lbxz;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lhc;)V	a	lambda$stop$2
		p	1		pos
	m	(Lbzx;)Ljava/lang/Boolean;	a	lambda$checkExtraStartConditions$0
		p	0		activity
	m	(Lhd;)Z	a	lambda$stop$1
		p	0		poiType
	m	(Laip;Lbfx;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbxz;J)V	b	tick
	m	(Laip;Lbfx;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbxz;J)V	c	stop
	f	F	c	speedModifier
	f	I	d	TICKS_UNTIL_TIMEOUT
c	bii	net/minecraft/world/entity/ai/behavior/GoToTargetLocation
	m	(Lapo;)I	a	getRandomOffset
		p	0		random
	m	(Lbfz;Lgt;)Lgt;	a	getNearbyPos
		p	0		mob
		p	1		pos
	m	(Lblb$b;IFLblc;Lblc;Lblc;Lblc;)Lble;	a	lambda$create$1
		p	3		pos
		p	4		attackTarget
		p	5		walkTarget
		p	6		lookTarget
	m	(Lblb$b;Lblc;IFLaip;Lbfz;J)Z	a	lambda$create$0
		p	4		world
		p	5		entity
		p	6		time
	m	(Lboz;IF)Lbiz;	a	create
		p	0		posModule
		p	1		completionRange
		p	2		speed
	m	(Lboz;IFLblb$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
		p	3		context
c	bij	net/minecraft/world/entity/ai/behavior/GoToWantedItem
	m	(FZI)Lbhq;	a	create
		p	0		speed
		p	1		requiresWalkTarget
		p	2		radius
	m	(Lbfx;)Z	a	lambda$create$0
		p	0		entity
	m	(Lblb$b;Lblc;Lblc;Ljava/util/function/Predicate;IFLblc;Lblc;Laip;Lbfx;J)Z	a	lambda$create$1
		p	8		world
		p	9		entity
		p	10		time
	m	(Lblb$b;Ljava/util/function/Predicate;IFLblc;Lblc;Lblc;Lblc;)Lble;	a	lambda$create$2
		p	4		lookTarget
		p	5		walkTarget
		p	6		nearestVisibleWantedItem
		p	7		itemPickupCooldownTicks
	m	(Ljava/util/function/Predicate;FZI)Lbhq;	a	create
		p	0		startCondition
		p	1		speed
		p	2		requiresWalkTarget
		p	3		radius
	m	(ZLjava/util/function/Predicate;IFLblb$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$3
		p	4		context
c	bik	net/minecraft/world/entity/ai/behavior/HarvestFarmland
	m	(Laip;)Lgt;	a	getValidFarmland
		p	1		world
	m	(Laip;Lbfx;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laip;Lbfx;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbxz;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laip;Lbxz;J)V	a	start
	m	(Lgt;Laip;)Z	a	validPos
		p	1		pos
		p	2		world
	m	(Laip;Lbfx;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbxz;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbfx;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbxz;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbfx;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbxz;J)Z	d	canStillUse
	f	F	c	SPEED_MODIFIER
	f	I	d	HARVEST_DURATION
	f	Lgt;	e	aboveFarmlandPos
	f	J	f	nextOkStartTime
	f	I	g	timeWorkedSoFar
	f	Ljava/util/List;	h	validFarmlandAroundVillager
c	bil	net/minecraft/world/entity/ai/behavior/InsideBrownianWalk
	m	(F)Lbhq;	a	create
		p	0		speed
	m	(FLblb$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$6
		p	1		context
	m	(FLblc;)Lble;	a	lambda$create$5
		p	1		walkTarget
	m	(Laip;Lbgg;Lgt;)Z	a	lambda$create$2
		p	2		pos
	m	(Laip;Lgt;)Z	a	lambda$create$0
		p	1		pos
	m	(Lblc;FLaip;Lbgg;J)Z	a	lambda$create$4
		p	2		world
		p	3		entity
		p	4		time
	m	(Lblc;FLgt;)V	a	lambda$create$3
		p	2		pos
	m	(Laip;Lbgg;Lgt;)Z	b	lambda$create$1
		p	2		pos
c	bim	net/minecraft/world/entity/ai/behavior/InteractWith
	m	(Lbfl;ILboz;FI)Lbhq;	a	of
		p	0		type
		p	1		maxDistance
		p	2		targetModule
		p	3		speed
		p	4		completionRange
	m	(Lbfl;ILjava/util/function/Predicate;Ljava/util/function/Predicate;Lboz;FI)Lbhq;	a	of
		p	0		type
		p	1		maxDistance
		p	2		entityPredicate
		p	3		targetPredicate
		p	4		targetModule
		p	5		speed
		p	6		completionRange
	m	(Lbfl;Ljava/util/function/Predicate;Lbfx;)Z	a	lambda$of$2
		p	2		entity
	m	(Lbfx;)Z	a	lambda$of$1
		p	0		entity
	m	(Lbfx;ILjava/util/function/Predicate;Lbfx;)Z	a	lambda$of$3
		p	3		target
	m	(Lblb$b;Lblc;Ljava/util/function/Predicate;Ljava/util/function/Predicate;ILblc;Lblc;Lblc;FILaip;Lbfx;J)Z	a	lambda$of$5
		p	10		world
		p	11		entity
		p	12		time
	m	(Lblb$b;Ljava/util/function/Predicate;Ljava/util/function/Predicate;IFILblc;Lblc;Lblc;Lblc;)Lble;	a	lambda$of$6
		p	6		targetValue
		p	7		lookTarget
		p	8		walkTarget
		p	9		visibleMobs
	m	(Lblc;Lblc;Lblc;FILbfx;)V	a	lambda$of$4
		p	5		target
	m	(Lboz;Ljava/util/function/Predicate;Ljava/util/function/Predicate;IFILblb$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$of$7
		p	6		context
	m	(Lbfx;)Z	b	lambda$of$0
		p	0		entity
c	bin	net/minecraft/world/entity/ai/behavior/InteractWithDoor
	m	()Lbhq;	a	create
	m	(Laip;Lbfx;Ldwx;Ldwx;Lblb$b;Lblc;Ljava/util/Set;)V	a	lambda$create$2
		p	6		doors
	m	(Laip;Lbfx;Ldwx;Ldwx;Ljava/util/Set;Ljava/util/Optional;)V	a	closeDoorsThatIHaveOpenedOrPassedThrough
		p	0		world
		p	1		entity
		p	2		lastNode
		p	3		currentNode
		p	4		doors
		p	5		otherMobs
	m	(Laip;Lbfx;Lhc;)Z	a	isDoorTooFarAway
		p	0		world
		p	1		entity
		p	2		doorPos
	m	(Lbfx;Lbfx;)Z	a	lambda$areOtherMobsComingThroughDoor$7
		p	1		mob
	m	(Lbfx;Lgt;Ljava/util/Optional;)Z	a	areOtherMobsComingThroughDoor
		p	0		entity
		p	1		pos
		p	2		otherMobs
	m	(Lbgy;Lgt;)Z	a	isMobComingThroughDoor
		p	0		brain
		p	1		pos
	m	(Lblb$b;Lblc;Lblc;Lorg/apache/commons/lang3/mutable/MutableObject;Lorg/apache/commons/lang3/mutable/MutableInt;Lblc;Laip;Lbfx;J)Z	a	lambda$create$3
		p	6		world
		p	7		entity
		p	8		time
	m	(Lblb$b;Lorg/apache/commons/lang3/mutable/MutableObject;Lorg/apache/commons/lang3/mutable/MutableInt;Lblc;Lblc;Lblc;)Lble;	a	lambda$create$4
		p	3		path
		p	4		doorsToClose
		p	5		mobs
	m	(Lblc;Ljava/util/Optional;Laip;Lgt;)Ljava/util/Optional;	a	rememberDoorToClose
		p	0		queryResult
		p	1		doors
		p	2		world
		p	3		pos
	m	(Ldbp$a;)Z	a	lambda$closeDoorsThatIHaveOpenedOrPassedThrough$6
		p	0		state
	m	(Lgt;Lbfx;)Z	a	lambda$areOtherMobsComingThroughDoor$9
		p	1		mob
	m	(Lhc;Lblc;)Ljava/util/Set;	a	lambda$rememberDoorToClose$11
	m	(Lhc;Ljava/util/Set;)Ljava/util/Set;	a	lambda$rememberDoorToClose$10
		p	1		doorSet
	m	(Lorg/apache/commons/lang3/mutable/MutableObject;Lorg/apache/commons/lang3/mutable/MutableInt;Lblb$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$5
		p	2		context
	m	(Ldbp$a;)Z	b	lambda$create$1
		p	0		state
	m	(Lgt;Lbfx;)Z	b	lambda$areOtherMobsComingThroughDoor$8
		p	1		mob
	m	(Ldbp$a;)Z	c	lambda$create$0
		p	0		state
	f	I	a	COOLDOWN_BEFORE_RERUNNING_IN_SAME_NODE
	f	D	b	SKIP_CLOSING_DOOR_IF_FURTHER_AWAY_THAN
	f	D	c	MAX_DISTANCE_TO_HOLD_DOOR_OPEN_FOR_OTHER_MOBS
c	bio	net/minecraft/world/entity/ai/behavior/JumpOnBed
	m	(F)V	<init>	<init>
		p	1		walkSpeed
	m	(J)Z	a	timedOut
		p	1		time
	m	(Laip;Lbfx;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laip;Lbfx;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbfz;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laip;Lbfz;J)V	a	start
	m	(Laip;Lbfz;Lgt;)V	a	lambda$start$0
		p	3		pos
	m	(Laip;Lgt;)Z	a	isBed
		p	1		world
		p	2		pos
	m	(Lbfz;)Ljava/util/Optional;	a	getNearestBed
		p	1		mob
	m	(Lbfz;Lgt;)V	a	startWalkingTowardsBed
		p	1		mob
		p	2		pos
	m	(Laip;Lbfx;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbfz;)Z	b	nearBed
		p	1		world
		p	2		mob
	m	(Laip;Lbfz;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbfx;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbfz;)Z	c	onOrOverBed
		p	1		world
		p	2		mob
	m	(Laip;Lbfz;J)Z	c	canStillUse
	m	(Laip;Lbfx;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbfz;)Z	d	onBedSurface
		p	1		world
		p	2		mob
	m	(Laip;Lbfz;J)V	d	tick
	m	(Laip;Lbfz;)Z	e	tiredOfWalking
		p	1		world
		p	2		mob
	m	(Laip;Lbfz;)Z	f	tiredOfJumping
		p	1		world
		p	2		mob
	f	I	c	MAX_TIME_TO_REACH_BED
	f	I	d	MIN_JUMPS
	f	I	e	MAX_JUMPS
	f	I	f	COOLDOWN_BETWEEN_JUMPS
	f	F	g	speedModifier
	f	Lgt;	h	targetBed
	f	I	i	remainingTimeToReachBed
	f	I	j	remainingJumps
	f	I	k	remainingCooldownUntilNextJump
c	bip	net/minecraft/world/entity/ai/behavior/LocateHidingPlace
	m	(IFI)Lbiz;	a	create
		p	0		maxDistance
		p	1		walkSpeed
		p	2		preferredDistance
	m	(IIFLblb$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$10
		p	3		context
	m	(IILblb$b;FLblc;Lblc;Lblc;Lblc;Lblc;Lblc;Lblc;)Lble;	a	lambda$create$9
		p	4		walkTarget
		p	5		home
		p	6		hidingPlace
		p	7		path
		p	8		lookTarget
		p	9		breedTarget
		p	10		interactionTarget
	m	(IILblb$b;Lblc;Lblc;Lblc;Lblc;Lblc;Lblc;Lblc;FLaip;Lbfx;J)Z	a	lambda$create$8
		p	11		world
		p	12		entity
		p	13		time
	m	(Laip;Lbfx;I)Ljava/util/Optional;	a	lambda$create$5
	m	(Lbfx;ILgt;)Z	a	lambda$create$2
		p	2		pos
	m	(Lblb$b;Lblc;)Ljava/util/Optional;	a	lambda$create$6
	m	(Lblc;Lblc;Lblc;Lblc;Lblc;Laip;Lbfx;ILblc;FLgt;)V	a	lambda$create$7
		p	10		pos
	m	(Lgt;)Z	a	lambda$create$4
		p	0		pos
	m	(Lhd;)Z	a	lambda$create$3
		p	0		poiType
	m	(Lgt;)Z	b	lambda$create$1
		p	0		pos
	m	(Lhd;)Z	b	lambda$create$0
		p	0		poiType
c	biq	net/minecraft/world/entity/ai/behavior/LongJumpMidJump
	m	(Lbdj;Lamq;)V	<init>	<init>
		p	1		cooldownRange
		p	2		sound
	m	(Laip;Lbfx;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbfz;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbfx;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbfz;J)V	b	start
	m	(Laip;Lbfz;J)V	c	stop
	m	(Laip;Lbfx;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
	f	I	c	TIME_OUT_DURATION
	f	Lbdj;	d	timeBetweenLongJumps
	f	Lamq;	e	landingSound
c	bir	net/minecraft/world/entity/ai/behavior/LongJumpToPreferredBlock
	m	(Lbdj;IIFLjava/util/function/Function;Lanv;FLjava/util/function/BiPredicate;)V	<init>	<init>
		p	1		cooldownRange
		p	2		verticalRange
		p	3		horizontalRange
		p	4		maxRange
		p	5		entityToSound
		p	6		favoredBlocks
		p	7		biasChance
		p	8		jumpToPredicate
	m	(Laip;)Ljava/util/Optional;	a	getJumpCandidate
		p	1		world
	m	(Laip;Lbfz;J)V	a	start
	m	(Laip;Lbfx;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
	f	Lanv;	m	preferredBlockTag
	f	F	n	preferredBlocksChance
	f	Ljava/util/List;	o	notPrefferedJumpCandidates
	f	Z	p	currentlyWantingPreferredOnes
c	bis	net/minecraft/world/entity/ai/behavior/LongJumpToRandomPos
	m	(Lbdj;IIFLjava/util/function/Function;)V	<init>	<init>
		p	1		cooldownRange
		p	2		verticalRange
		p	3		horizontalRange
		p	4		maxRange
		p	5		entityToSound
	m	(Lbdj;IIFLjava/util/function/Function;Ljava/util/function/BiPredicate;)V	<init>	<init>
		p	1		cooldownRange
		p	2		verticalRange
		p	3		horizontalRange
		p	4		maxRange
		p	5		entityToSound
		p	6		jumpToPredicate
	m	(Laip;)Ljava/util/Optional;	a	getJumpCandidate
		p	1		world
	m	(Laip;Lbfx;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laip;Lbfx;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbfz;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laip;Lbfz;J)V	a	start
	m	(Laip;Lbfz;Lgt;)Z	a	isAcceptableLandingPosition
		p	1		world
		p	2		entity
		p	3		pos
	m	(Lbfz;Lbfi;Lede;Lede;)Z	a	isClearTransition
		p	1		entity
		p	2		dimensions
	m	(Lbfz;Lede;)Lede;	a	calculateOptimalJumpVector
		p	1		entity
		p	2		pos
	m	(Lbfz;Lede;I)Lede;	a	calculateJumpVectorForAngle
		p	1		entity
		p	2		pos
		p	3		range
	m	(Lbfz;Lgt;)Z	a	defaultAcceptableLandingSpot
		p	0		entity
		p	1		pos
	m	(Lgt;Lgt;)Lbis$a;	a	lambda$start$1
	m	(Laip;Lbfz;J)Z	b	canStillUse
	m	(Lgt;Lgt;)Z	b	lambda$start$0
	m	(Laip;Lbfx;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbfz;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbfx;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbfz;J)V	d	pickCandidate
		p	1		world
		p	2		entity
		p	3		time
	f	I	c	FIND_JUMP_TRIES
	f	I	d	MIN_PATHFIND_DISTANCE_TO_VALID_JUMP
	f	I	e	maxLongJumpHeight
	f	I	f	maxLongJumpWidth
	f	F	g	maxJumpVelocity
	f	Ljava/util/List;	h	jumpCandidates
	f	Ljava/util/Optional;	i	initialPosition
	f	Lede;	j	chosenJump
	f	I	k	findJumpTries
	f	J	l	prepareJumpStart
	f	I	m	PREPARE_JUMP_DURATION
	f	I	n	TIME_OUT_DURATION
	f	Ljava/util/List;	o	ALLOWED_ANGLES
	f	Lbdj;	p	timeBetweenLongJumps
	f	Ljava/util/function/Function;	q	getJumpSound
	f	Ljava/util/function/BiPredicate;	r	acceptableLandingSpot
c	bis$a	net/minecraft/world/entity/ai/behavior/LongJumpToRandomPos$PossibleJump
	m	(Lgt;I)V	<init>	<init>
		p	1		pos
		p	2		weight
	m	()Lgt;	b	getJumpTarget
	f	Lgt;	a	jumpTarget
c	bit	net/minecraft/world/entity/ai/behavior/LookAndFollowTradingPlayerSink
	m	(F)V	<init>	<init>
		p	1		speed
	m	(J)Z	a	timedOut
		p	1		time
	m	(Laip;Lbfx;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laip;Lbfx;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbxz;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laip;Lbxz;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lbxz;)V	a	followPlayer
		p	1		villager
	m	(Laip;Lbfx;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbxz;J)V	b	start
	m	(Laip;Lbfx;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbxz;J)V	c	stop
	m	(Laip;Lbfx;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbxz;J)V	d	tick
	f	F	c	speedModifier
c	biu	net/minecraft/world/entity/ai/behavior/LookAtTargetSink
	m	(II)V	<init>	<init>
		p	1		minRunTime
		p	2		maxRunTime
	m	(Laip;Lbfx;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbfz;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lbfz;Lbjc;)V	a	lambda$tick$1
		p	1		lookTarget
	m	(Laip;Lbfx;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbfz;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Lbfz;Lbjc;)Z	b	lambda$canStillUse$0
		p	1		lookTarget
	m	(Laip;Lbfx;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbfz;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
c	biv	net/minecraft/world/entity/ai/behavior/MeleeAttack
	m	(I)Lbiz;	a	create
		p	0		cooldown
	m	(ILblb$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
		p	1		context
	m	(Lbfz;)Z	a	isHoldingUsableProjectileWeapon
		p	0		mob
	m	(Lbfz;Lcfv;)Z	a	lambda$isHoldingUsableProjectileWeapon$3
		p	1		stack
	m	(Lblb$b;ILblc;Lblc;Lblc;Lblc;)Lble;	a	lambda$create$1
		p	2		lookTarget
		p	3		attackTarget
		p	4		attackCoolingDown
		p	5		visibleMobs
	m	(Lblb$b;Lblc;Lblc;Lblc;Lblc;ILaip;Lbfz;J)Z	a	lambda$create$0
		p	6		world
		p	7		entity
		p	8		time
c	biw	net/minecraft/world/entity/ai/behavior/Mount
	m	(F)Lbhq;	a	create
		p	0		speed
	m	(FLblb$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
		p	1		context
	m	(Lblb$b;FLblc;Lblc;Lblc;)Lble;	a	lambda$create$1
		p	2		lookTarget
		p	3		walkTarget
		p	4		rideTarget
	m	(Lblb$b;Lblc;Lblc;Lblc;FLaip;Lbfx;J)Z	a	lambda$create$0
		p	5		world
		p	6		entity
		p	7		time
	f	I	a	CLOSE_ENOUGH_TO_START_RIDING_DIST
c	bix	net/minecraft/world/entity/ai/behavior/MoveToSkySeeingSpot
	m	(F)Lbiz;	a	create
		p	0		speed
	m	(FLblb$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$3
		p	1		context
	m	(FLblc;)Lble;	a	lambda$create$2
		p	1		walkTarget
	m	(Laip;Lbfx;)Lede;	a	getOutdoorPosition
		p	0		world
		p	1		entity
	m	(Laip;Lbfx;Lgt;)Z	a	hasNoBlocksAbove
		p	0		world
		p	1		entity
		p	2		pos
	m	(Lblc;FLaip;Lbfx;J)Z	a	lambda$create$1
		p	2		world
		p	3		entity
		p	4		time
	m	(Lblc;FLede;)V	a	lambda$create$0
		p	2		pos
c	biy	net/minecraft/world/entity/ai/behavior/MoveToTargetSink
	m	(II)V	<init>	<init>
		p	1		minRunTime
		p	2		maxRunTime
	m	(Laip;Lbfx;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laip;Lbfx;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbfz;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laip;Lbfz;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lbfz;Lbpc;)Z	a	reachedTarget
		p	1		entity
		p	2		walkTarget
	m	(Lbfz;Lbpc;J)Z	a	tryComputePath
		p	1		entity
		p	2		walkTarget
		p	3		time
	m	(Laip;Lbfx;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbfz;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbfx;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbfz;J)V	c	start
	m	(Laip;Lbfx;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbfz;J)V	d	tick
	f	I	c	MAX_COOLDOWN_BEFORE_RETRYING
	f	I	d	remainingCooldown
	f	Ldwz;	e	path
	f	Lgt;	f	lastTargetPos
	f	F	g	speedModifier
c	biz	net/minecraft/world/entity/ai/behavior/OneShot
	m	()Lbhp$a;	a	getStatus
	m	()Ljava/lang/String;	b	debugString
	m	(Laip;Lbfx;J)Z	e	tryStart
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbfx;J)V	f	tickOrStop
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbfx;J)V	g	doStop
		p	1		world
		p	2		entity
		p	3		time
	f	Lbhp$a;	a	status
c	bja	net/minecraft/world/entity/ai/behavior/PlayTagWithOtherKids
	m	()Lbhq;	a	create
	m	(Lbfx;)Lbfx;	a	whoAreYouChasing
		p	0		baby
	m	(Lbfx;Lbfx;)Z	a	isFriendChasingMe
		p	0		entity
		p	1		baby
	m	(Lbfx;Ljava/lang/Integer;)Ljava/lang/Integer;	a	lambda$checkHowManyChasersEachFriendHas$6
		p	0		target
		p	1		count
	m	(Lbgg;Lbfx;)Z	a	lambda$create$0
		p	1		baby
	m	(Lblb$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$4
		p	0		context
	m	(Lblb$b;Lblc;Lblc;Lblc;Lblc;)Lble;	a	lambda$create$3
		p	1		visibleVillagerBabies
		p	2		walkTarget
		p	3		lookTarget
		p	4		interactionTarget
	m	(Lblb$b;Lblc;Lblc;Lblc;Lblc;Laip;Lbgg;J)Z	a	lambda$create$2
		p	5		world
		p	6		entity
		p	7		time
	m	(Lblc;Lblc;Lblc;Lbfx;)V	a	chaseKid
		p	0		interactionTarget
		p	1		lookTarget
		p	2		walkTarget
		p	3		baby
	m	(Ljava/util/List;)Ljava/util/Optional;	a	findSomeoneBeingChased
		p	0		babies
	m	(Ljava/util/Map$Entry;)Z	a	lambda$findSomeoneBeingChased$5
		p	0		entry
	m	(Ljava/util/Map;Lbfx;)V	a	lambda$checkHowManyChasersEachFriendHas$7
		p	1		baby
	m	(Lbfx;)Z	b	isChasingSomeone
		p	0		baby
	m	(Lbfx;Lbfx;)Z	b	lambda$isFriendChasingMe$8
		p	1		target
	m	(Lblc;Lblc;Lblc;Lbfx;)V	b	lambda$create$1
		p	3		baby
	m	(Ljava/util/List;)Ljava/util/Map;	b	checkHowManyChasersEachFriendHas
		p	0		babies
	f	I	a	MAX_FLEE_XZ_DIST
	f	I	b	MAX_FLEE_Y_DIST
	f	F	c	FLEE_SPEED_MODIFIER
	f	F	d	CHASE_SPEED_MODIFIER
	f	I	e	MAX_CHASERS_PER_TARGET
	f	I	f	AVERAGE_WAIT_TIME_BETWEEN_RUNS
c	bjb	net/minecraft/world/entity/ai/behavior/PoiCompetitorScan
	m	()Lbhq;	a	create
	m	(Lbfx;)Lbxz;	a	lambda$create$1
		p	0		villager
	m	(Lblb$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$6
		p	0		context
	m	(Lblb$b;Lblc;Lblc;)Lble;	a	lambda$create$5
		p	1		jobSite
		p	2		mobs
	m	(Lblb$b;Lblc;Lblc;Laip;Lbxz;J)Z	a	lambda$create$4
		p	3		world
		p	4		entity
		p	5		time
	m	(Lblb$b;Lblc;Lbxz;Lhc;Lhd;)V	a	lambda$create$3
		p	4		poiType
	m	(Lbxz;Lbfx;)Z	a	lambda$create$0
		p	1		mob
	m	(Lbxz;Lbxz;)Lbxz;	a	selectWinner
		p	0		first
		p	1		second
	m	(Lhc;Lhd;Lbxz;)Z	a	competesForSameJobsite
		p	0		pos
		p	1		poiType
		p	2		villager
	m	(Lhd;Lbyc;)Z	a	hasMatchingProfession
		p	0		poiType
		p	1		profession
	m	(Lhc;Lhd;Lbxz;)Z	b	lambda$create$2
		p	2		villager
c	bjc	net/minecraft/world/entity/ai/behavior/PositionTracker
	m	()Lede;	a	currentPosition
	m	(Lbfx;)Z	a	isVisibleBy
		p	1		entity
	m	()Lgt;	b	currentBlockPosition
c	bjd	net/minecraft/world/entity/ai/behavior/PrepareRamNearestTarget
	m	(Ljava/util/function/ToIntFunction;IIFLbqk;ILjava/util/function/Function;)V	<init>	<init>
		p	1		cooldownFactory
		p	2		minDistance
		p	3		maxDistance
		p	4		speed
		p	5		targetPredicate
		p	6		prepareTime
		p	7		soundFactory
	m	(Laip;Lbfx;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbgg;J)V	a	start
	m	(Lbfx;Lgt;)Lbjd$a;	a	lambda$chooseRamPosition$4
		p	1		start
	m	(Lbgg;Lbfx;)Ljava/util/Optional;	a	calculateRammingStartPosition
		p	1		entity
		p	2		target
	m	(Lbgg;Lbpb;)Ljava/util/Optional;	a	lambda$start$1
		p	2		mob
	m	(Lbgg;Lgt;)Z	a	isWalkableBlock
		p	1		entity
		p	2		target
	m	(Lbph;Lgt;)Z	a	lambda$calculateRammingStartPosition$3
		p	1		start
	m	(Lgt;Lgt;)Lede;	a	getEdgeOfBlock
		p	1		start
		p	2		end
	m	(Laip;Lbfx;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbgg;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Lbgg;Lbfx;)V	b	chooseRamPosition
		p	1		entity
		p	2		target
	m	(Laip;Lbfx;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbgg;J)Z	c	canStillUse
	m	(Lbgg;Lbfx;)V	c	lambda$start$2
		p	2		mob
	m	(Laip;Lbfx;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbgg;J)V	d	tick
	m	(Lbgg;Lbfx;)Z	d	lambda$start$0
		p	2		mob
	f	I	c	TIME_OUT_DURATION
	f	Ljava/util/function/ToIntFunction;	d	getCooldownOnFail
	f	I	e	minRamDistance
	f	I	f	maxRamDistance
	f	F	g	walkSpeed
	f	Lbqk;	h	ramTargeting
	f	I	i	ramPrepareTime
	f	Ljava/util/function/Function;	j	getPrepareRamSound
	f	Ljava/util/Optional;	k	reachedRamPositionTimestamp
	f	Ljava/util/Optional;	l	ramCandidate
c	bjd$a	net/minecraft/world/entity/ai/behavior/PrepareRamNearestTarget$RamCandidate
	m	(Lgt;Lgt;Lbfx;)V	<init>	<init>
		p	1		start
		p	2		end
		p	3		entity
	m	()Lgt;	a	getStartPosition
	m	()Lgt;	b	getTargetPosition
	m	()Lbfx;	c	getTarget
	f	Lgt;	a	startPosition
	f	Lgt;	b	targetPosition
	f	Lbfx;	c	target
c	bje	net/minecraft/world/entity/ai/behavior/RamTarget
	m	(Ljava/util/function/Function;Lbqk;FLjava/util/function/ToDoubleFunction;Ljava/util/function/Function;Ljava/util/function/Function;)V	<init>	<init>
		p	1		cooldownRangeFactory
		p	2		targetPredicate
		p	3		speed
		p	4		strengthMultiplierFactory
		p	5		impactSoundFactory
		p	6		hornBreakSoundFactory
	m	(Laip;Lbfx;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laip;Lbfx;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbte;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laip;Lbte;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbte;)V	b	finishRam
		p	1		world
		p	2		goat
	m	(Laip;Lbte;J)V	b	start
	m	(Laip;Lbfx;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbte;)Z	c	hasRammedHornBreakingBlock
		p	1		world
		p	2		goat
	m	(Laip;Lbte;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbfx;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
	f	I	c	TIME_OUT_DURATION
	f	F	d	RAM_SPEED_FORCE_FACTOR
	f	Ljava/util/function/Function;	e	getTimeBetweenRams
	f	Lbqk;	f	ramTargeting
	f	F	g	speed
	f	Ljava/util/function/ToDoubleFunction;	h	getKnockbackForce
	f	Lede;	i	ramDirection
	f	Ljava/util/function/Function;	j	getImpactSound
	f	Ljava/util/function/Function;	k	getHornBreakSound
c	bjf	net/minecraft/world/entity/ai/behavior/RandomLookAround
	m	(Lbdd;FFF)V	<init>	<init>
		p	1		cooldown
		p	2		maxYaw
		p	3		minPitch
		p	4		maxPitch
	m	(Laip;Lbfz;J)V	a	start
	m	(Laip;Lbfx;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
	f	Lbdd;	c	interval
	f	F	d	maxYaw
	f	F	e	minPitch
	f	F	f	pitchRange
c	bjg	net/minecraft/world/entity/ai/behavior/RandomStroll
	m	(F)Lbiz;	a	stroll
		p	0		speed
	m	(FII)Lbhq;	a	stroll
		p	0		speed
		p	1		horizontalRadius
		p	2		verticalRadius
	m	(FLede;)Lbpc;	a	lambda$strollFlyOrSwim$7
		p	1		pos
	m	(FLjava/util/function/Function;Ljava/util/function/Predicate;)Lbiz;	a	strollFlyOrSwim
		p	0		speed
		p	1		targetGetter
		p	2		shouldRun
	m	(FZ)Lbiz;	a	stroll
		p	0		speed
		p	1		strollInsideWater
	m	(IILbgg;)Lede;	a	lambda$stroll$3
		p	2		entity
	m	(Lbgg;)Lede;	a	getTargetSwimPos
		p	0		entity
	m	(Lbgg;II)Lede;	a	getTargetFlyPos
		p	0		entity
		p	1		horizontalRadius
		p	2		verticalRadius
	m	(Ljava/util/function/Predicate;Ljava/util/function/Function;FLblb$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$strollFlyOrSwim$10
		p	3		context
	m	(Ljava/util/function/Predicate;Ljava/util/function/Function;FLblc;)Lble;	a	lambda$strollFlyOrSwim$9
		p	3		walkTarget
	m	(Ljava/util/function/Predicate;Ljava/util/function/Function;Lblc;FLaip;Lbgg;J)Z	a	lambda$strollFlyOrSwim$8
		p	4		world
		p	5		entity
		p	6		time
	m	(F)Lbhq;	b	fly
		p	0		speed
	m	(Lbgg;)Z	b	lambda$fly$6
		p	0		entity
	m	(F)Lbhq;	c	swim
		p	0		speed
	m	(Lbgg;)Lede;	c	lambda$fly$5
		p	0		entity
	m	(Lbgg;)Z	d	lambda$stroll$4
		p	0		entity
	m	(Lbgg;)Z	e	lambda$stroll$2
		p	0		entity
	m	(Lbgg;)Z	f	lambda$stroll$1
		p	0		entity
	m	(Lbgg;)Lede;	g	lambda$stroll$0
		p	0		entity
	f	I	a	MAX_XZ_DIST
	f	I	b	MAX_Y_DIST
	f	[[I	c	SWIM_XY_DISTANCE_TIERS
c	bjh	net/minecraft/world/entity/ai/behavior/ReactToBell
	m	()Lbhq;	a	create
	m	(Laip;Lbfx;J)Z	a	lambda$create$0
		p	0		world
		p	1		entity
		p	2		time
	m	(Lblb$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
		p	0		context
	m	(Lblc;)Lble;	a	lambda$create$1
		p	0		heardBellTime
c	bji	net/minecraft/world/entity/ai/behavior/ResetProfession
	m	()Lbhq;	a	create
	m	(Laip;Lbxz;J)Z	a	lambda$create$0
		p	0		world
		p	1		entity
		p	2		time
	m	(Lblb$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
		p	0		context
	m	(Lblc;)Lble;	a	lambda$create$1
		p	0		jobSite
c	bjj	net/minecraft/world/entity/ai/behavior/ResetRaidStatus
	m	()Lbhq;	a	create
	m	(Laip;Lbfx;J)Z	a	lambda$create$0
		p	0		world
		p	1		entity
		p	2		time
	m	(Lblb$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$1
		p	0		context
c	bjk	net/minecraft/world/entity/ai/behavior/RingBell
	m	()Lbhq;	a	create
	m	(Lblb$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
		p	0		context
	m	(Lblb$b;Lblc;)Lble;	a	lambda$create$1
		p	1		meetingPoint
	m	(Lblb$b;Lblc;Laip;Lbfx;J)Z	a	lambda$create$0
		p	2		world
		p	3		entity
		p	4		time
	f	I	a	RING_BELL_FROM_DISTANCE
	f	F	b	BELL_RING_CHANCE
c	bjl	net/minecraft/world/entity/ai/behavior/RunOne
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		tasks
	m	(Ljava/util/Map;Ljava/util/List;)V	<init>	<init>
		p	1		requiredMemoryState
		p	2		tasks
c	bjm	net/minecraft/world/entity/ai/behavior/SetClosestHomeAsWalkTarget
	m	(F)Lbhq;	a	create
		p	0		speed
	m	(Lhd;)Z	a	lambda$create$2
		p	0		poiType
	m	(Lit/unimi/dsi/fastutil/longs/Long2LongMap;Lorg/apache/commons/lang3/mutable/MutableInt;Lorg/apache/commons/lang3/mutable/MutableLong;Lgt;)Z	a	lambda$create$1
		p	3		pos
	m	(Lorg/apache/commons/lang3/mutable/MutableLong;Lit/unimi/dsi/fastutil/longs/Long2LongMap$Entry;)Z	a	lambda$create$3
		p	1		entry
	m	(Lorg/apache/commons/lang3/mutable/MutableLong;Lit/unimi/dsi/fastutil/longs/Long2LongMap;FLblb$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$6
		p	0		context
	m	(Lorg/apache/commons/lang3/mutable/MutableLong;Lit/unimi/dsi/fastutil/longs/Long2LongMap;FLblc;Lblc;)Lble;	a	lambda$create$5
		p	3		walkTarget
		p	4		home
	m	(Lorg/apache/commons/lang3/mutable/MutableLong;Lit/unimi/dsi/fastutil/longs/Long2LongMap;Lblc;FLaip;Lbgg;J)Z	a	lambda$create$4
		p	4		world
		p	5		entity
		p	6		time
	m	(Lhd;)Z	b	lambda$create$0
		p	0		poiType
	f	I	a	CACHE_TIMEOUT
	f	I	b	BATCH_SIZE
	f	I	c	RATE
	f	I	d	OK_DISTANCE_SQR
c	bjn	net/minecraft/world/entity/ai/behavior/SetEntityLookTarget
	m	(F)Lbiz;	a	create
		p	0		maxDistance
	m	(Lbfl;F)Lbiz;	a	create
		p	0		type
		p	1		maxDistance
	m	(Lbfl;Lbfx;)Z	a	lambda$create$1
		p	1		entity
	m	(Lbfx;)Z	a	lambda$create$2
		p	0		entity
	m	(Lbfx;FLbfx;)Z	a	lambda$create$3
		p	2		target
	m	(Lbga;F)Lbhq;	a	create
		p	0		spawnGroup
		p	1		maxDistance
	m	(Lbga;Lbfx;)Z	a	lambda$create$0
		p	1		entity
	m	(Lblb$b;Lblc;Ljava/util/function/Predicate;FLblc;Laip;Lbfx;J)Z	a	lambda$create$4
		p	5		world
		p	6		entity
		p	7		time
	m	(Lblb$b;Ljava/util/function/Predicate;FLblc;Lblc;)Lble;	a	lambda$create$5
		p	3		lookTarget
		p	4		visibleMobs
	m	(Ljava/util/function/Predicate;F)Lbiz;	a	create
		p	0		predicate
		p	1		maxDistance
	m	(Ljava/util/function/Predicate;FLblb$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$6
		p	2		context
c	bjo	net/minecraft/world/entity/ai/behavior/SetEntityLookTargetSometimes
	m	(FLbdj;)Lbhq;	a	create
		p	0		maxDistance
		p	1		interval
	m	(FLbdj;Ljava/util/function/Predicate;)Lbhq;	a	create
		p	0		maxDistance
		p	1		interval
		p	2		predicate
	m	(Lbfl;FLbdj;)Lbhq;	a	create
		p	0		type
		p	1		maxDistance
		p	2		interval
	m	(Lbfl;Lbfx;)Z	a	lambda$create$1
		p	1		entity
	m	(Lbfx;)Z	a	lambda$create$0
		p	0		entity
	m	(Lbfx;FLbfx;)Z	a	lambda$create$2
		p	2		entity
	m	(Lblb$b;Lblc;Ljava/util/function/Predicate;FLbjo$a;Lblc;Laip;Lbfx;J)Z	a	lambda$create$3
		p	6		world
		p	7		entity
		p	8		time
	m	(Lblb$b;Ljava/util/function/Predicate;FLbjo$a;Lblc;Lblc;)Lble;	a	lambda$create$4
		p	4		lookTarget
		p	5		visibleMobs
	m	(Ljava/util/function/Predicate;FLbjo$a;Lblb$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$5
		p	3		context
c	bjo$a	net/minecraft/world/entity/ai/behavior/SetEntityLookTargetSometimes$Ticker
	m	(Lbdj;)V	<init>	<init>
		p	1		interval
	m	(Lapo;)Z	a	tickDownAndCheck
		p	1		random
	f	Lbdj;	a	interval
	f	I	b	ticksUntilNextStart
c	bjp	net/minecraft/world/entity/ai/behavior/SetHiddenState
	m	(II)Lbhq;	a	create
		p	0		maxHiddenSeconds
		p	1		distance
	m	(Lblb$b;Lblc;Lorg/apache/commons/lang3/mutable/MutableInt;ILblc;ILaip;Lbfx;J)Z	a	lambda$create$0
		p	6		world
		p	7		entity
		p	8		time
	m	(Lblb$b;Lorg/apache/commons/lang3/mutable/MutableInt;IILblc;Lblc;)Lble;	a	lambda$create$1
		p	4		hidingPlace
		p	5		heardBellTime
	m	(Lorg/apache/commons/lang3/mutable/MutableInt;IILblb$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
		p	3		context
	f	I	a	HIDE_TIMEOUT
c	bjq	net/minecraft/world/entity/ai/behavior/SetLookAndInteract
	m	(ILbfl;Lblb$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$3
		p	2		context
	m	(Lbfl;I)Lbhq;	a	create
		p	0		type
		p	1		maxDistance
	m	(Lbfx;ILbfl;Lbfx;)Z	a	lambda$create$0
		p	3		target
	m	(Lblb$b;ILbfl;Lblc;Lblc;Lblc;)Lble;	a	lambda$create$2
		p	3		lookTarget
		p	4		interactionTarget
		p	5		visibleMobs
	m	(Lblb$b;Lblc;ILbfl;Lblc;Lblc;Laip;Lbfx;J)Z	a	lambda$create$1
		p	6		world
		p	7		entity
		p	8		time
c	bjr	net/minecraft/world/entity/ai/behavior/SetRaidStatus
	m	()Lbhq;	a	create
	m	(Laip;Lbfx;J)Z	a	lambda$create$0
		p	0		world
		p	1		entity
		p	2		time
	m	(Lblb$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$1
		p	0		context
c	bjs	net/minecraft/world/entity/ai/behavior/SetWalkTargetAwayFrom
	m	(Lblb$b;Lblc;ZLjava/util/function/Function;Lblc;IFLaip;Lbgg;J)Z	a	lambda$create$0
		p	7		world
		p	8		entity
		p	9		time
	m	(Lblb$b;ZLjava/util/function/Function;IFLblc;Lblc;)Lble;	a	lambda$create$1
		p	5		walkTarget
		p	6		posSource
	m	(Lboz;FIZ)Lbhq;	a	pos
		p	0		posModule
		p	1		speed
		p	2		range
		p	3		requiresWalkTarget
	m	(Lboz;FIZLjava/util/function/Function;)Lbiz;	a	create
		p	0		posSource
		p	1		speed
		p	2		range
		p	3		requiresWalkTarget
		p	4		posGetter
	m	(Lboz;ZLjava/util/function/Function;IFLblb$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
		p	5		context
	m	(Lboz;FIZ)Lbiz;	b	entity
		p	0		entityModule
		p	1		speed
		p	2		range
		p	3		requiresWalkTarget
c	bjt	net/minecraft/world/entity/ai/behavior/SetWalkTargetFromAttackTargetIfTargetOutOfReach
	m	(F)Lbhq;	a	create
		p	0		speed
	m	(FLbfx;)Ljava/lang/Float;	a	lambda$create$0
		p	1		entity
	m	(Lblb$b;Lblc;Lblc;Lblc;Lblc;Ljava/util/function/Function;Laip;Lbfz;J)Z	a	lambda$create$1
		p	6		world
		p	7		entity
		p	8		time
	m	(Lblb$b;Ljava/util/function/Function;Lblc;Lblc;Lblc;Lblc;)Lble;	a	lambda$create$2
		p	2		walkTarget
		p	3		lookTarget
		p	4		attackTarget
		p	5		visibleMobs
	m	(Ljava/util/function/Function;)Lbhq;	a	create
		p	0		speed
	m	(Ljava/util/function/Function;Lblb$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$3
		p	1		context
	f	I	a	PROJECTILE_ATTACK_RANGE_BUFFER
c	bju	net/minecraft/world/entity/ai/behavior/SetWalkTargetFromBlockMemory
	m	(Lblb$b;ILboz;IFILblc;Lblc;Lblc;)Lble;	a	lambda$create$1
		p	6		cantReachWalkTargetSince
		p	7		walkTarget
		p	8		destinationResult
	m	(Lblb$b;Lblc;Lblc;ILboz;ILblc;FILaip;Lbxz;J)Z	a	lambda$create$0
		p	9		world
		p	10		entity
		p	11		time
	m	(Lboz;FIII)Lbiz;	a	create
		p	0		destination
		p	1		speed
		p	2		completionRange
		p	3		maxDistance
		p	4		maxRunTime
	m	(Lboz;IIFILblb$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
		p	5		context
c	bjv	net/minecraft/world/entity/ai/behavior/SetWalkTargetFromLookTarget
	m	(FI)Lbiz;	a	create
		p	0		speed
		p	1		completionRange
	m	(FLbfx;)Ljava/lang/Float;	a	lambda$create$1
		p	1		entity
	m	(Lbfx;)Z	a	lambda$create$0
		p	0		entity
	m	(Ljava/util/function/Predicate;Lblb$b;Ljava/util/function/Function;ILblc;Lblc;)Lble;	a	lambda$create$3
		p	4		walkTarget
		p	5		lookTarget
	m	(Ljava/util/function/Predicate;Lblc;Lblb$b;Lblc;Ljava/util/function/Function;ILaip;Lbfx;J)Z	a	lambda$create$2
		p	6		world
		p	7		entity
		p	8		time
	m	(Ljava/util/function/Predicate;Ljava/util/function/Function;I)Lbiz;	a	create
		p	0		predicate
		p	1		speed
		p	2		completionRange
	m	(Ljava/util/function/Predicate;Ljava/util/function/Function;ILblb$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$4
		p	3		context
c	bjw	net/minecraft/world/entity/ai/behavior/ShowTradesToPlayer
	m	(II)V	<init>	<init>
		p	1		minRunTime
		p	2		maxRunTime
	m	(Laip;Lbfx;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laip;Lbfx;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbxz;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laip;Lbxz;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lbfx;Lbxz;)V	a	findItemsToDisplay
		p	1		customer
		p	2		villager
	m	(Lbxz;)V	a	displayFirstItem
		p	1		villager
	m	(Lbxz;Lcfv;)V	a	displayAsHeldItem
		p	0		villager
		p	1		stack
	m	(Lclg;)Z	a	playerItemStackMatchesCostOfOffer
		p	1		offer
	m	(Laip;Lbfx;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbxz;J)V	b	start
	m	(Lbxz;)V	b	updateDisplayItems
		p	1		villager
	m	(Laip;Lbfx;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbxz;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Lbxz;)V	c	clearHeldItem
		p	0		villager
	m	(Laip;Lbfx;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbxz;J)V	d	stop
	m	(Lbxz;)Lbfx;	d	lookAtTarget
		p	1		villager
	m	(Lbxz;)V	e	displayCyclingItems
		p	1		villager
	f	I	c	MAX_LOOK_TIME
	f	I	d	STARTING_LOOK_TIME
	f	Lcfv;	e	playerItemStack
	f	Ljava/util/List;	f	displayItems
	f	I	g	cycleCounter
	f	I	h	displayIndex
	f	I	i	lookTime
c	bjx	net/minecraft/world/entity/ai/behavior/ShufflingList
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		list
	m	()Lbjx;	a	shuffle
	m	(Lbjx$a;)V	a	lambda$shuffle$1
		p	1		entry
	m	(Lbjx;)Ljava/util/List;	a	lambda$codec$0
		p	0		weightedList
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	codec
		p	0		codec
	m	(Ljava/lang/Object;I)Lbjx;	a	add
		p	1		data
		p	2		weight
	m	()Ljava/util/stream/Stream;	b	stream
	f	Ljava/util/List;	a	entries
	f	Lapo;	b	random
c	bjx$a	net/minecraft/world/entity/ai/behavior/ShufflingList$WeightedEntry
	m	(Ljava/lang/Object;I)V	<init>	<init>
		p	1		data
		p	2		weight
	m	()Ljava/lang/Object;	a	getData
	m	(F)V	a	setRandom
		p	1		random
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	codec
		p	0		codec
	m	()I	b	getWeight
	m	()D	c	getRandWeight
	f	Ljava/lang/Object;	a	data
	f	I	b	weight
	f	D	c	randWeight
c	bjx$a$1	net/minecraft/world/entity/ai/behavior/ShufflingList$WeightedEntry$1
	m	(Lbjx$a;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	encode
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/Object;)Lbjx$a;	a	lambda$decode$0
		p	1		data
	m	(Lcom/mojang/serialization/DynamicOps;Lbjx$a;)Lcom/mojang/datafixers/util/Pair;	a	lambda$decode$1
		p	1		entry
	f	Lcom/mojang/serialization/Codec;	a	val$elementCodec
c	bjy	net/minecraft/world/entity/ai/behavior/SleepInBed
	m	(J)Z	a	timedOut
		p	1		time
	m	(Laip;Lbfx;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laip;Lbfx;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbfx;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbfx;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
	f	I	c	COOLDOWN_AFTER_BEING_WOKEN
	f	J	d	nextOkStartTime
c	bjz	net/minecraft/world/entity/ai/behavior/SocializeAtBell
	m	()Lbiz;	a	create
	m	(Lbfx;)Z	a	lambda$create$0
		p	0		target
	m	(Lbfx;Lbfx;)Z	a	lambda$create$1
		p	1		target
	m	(Lblb$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$5
		p	0		context
	m	(Lblb$b;Lblc;Lblc;Lblc;Lblc;Lblc;)Lble;	a	lambda$create$4
		p	1		walkTarget
		p	2		lookTarget
		p	3		meetingPoint
		p	4		visibleMobs
		p	5		interactionTarget
	m	(Lblb$b;Lblc;Lblc;Lblc;Lblc;Lblc;Laip;Lbfx;J)Z	a	lambda$create$3
		p	6		world
		p	7		entity
		p	8		time
	m	(Lblc;Lblc;Lblc;Lbfx;)V	a	lambda$create$2
		p	3		target
	f	F	a	SPEED_MODIFIER
c	bka	net/minecraft/world/entity/ai/behavior/StartAttacking
	m	(Lbfz;)Z	a	lambda$create$0
		p	0		entity
	m	(Ljava/util/function/Function;)Lbhq;	a	create
		p	0		targetGetter
	m	(Ljava/util/function/Predicate;Ljava/util/function/Function;)Lbhq;	a	create
		p	0		startCondition
		p	1		targetGetter
	m	(Ljava/util/function/Predicate;Ljava/util/function/Function;Lblb$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$3
		p	2		context
	m	(Ljava/util/function/Predicate;Ljava/util/function/Function;Lblc;Lblc;)Lble;	a	lambda$create$2
		p	2		attackTarget
		p	3		cantReachWalkTargetSince
	m	(Ljava/util/function/Predicate;Ljava/util/function/Function;Lblc;Lblc;Laip;Lbfz;J)Z	a	lambda$create$1
		p	4		world
		p	5		entity
		p	6		time
c	bkb	net/minecraft/world/entity/ai/behavior/StartCelebratingIfTargetDead
	m	(ILjava/util/function/BiPredicate;)Lbhq;	a	create
		p	0		celebrationDuration
		p	1		predicate
	m	(Lblb$b;Lblc;Ljava/util/function/BiPredicate;Lblc;ILblc;Lblc;Laip;Lbfx;J)Z	a	lambda$create$0
		p	7		world
		p	8		entity
		p	9		time
	m	(Lblb$b;Ljava/util/function/BiPredicate;ILblc;Lblc;Lblc;Lblc;)Lble;	a	lambda$create$1
		p	3		attackTarget
		p	4		angryAt
		p	5		celebrateLocation
		p	6		dancing
	m	(Ljava/util/function/BiPredicate;ILblb$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
		p	2		context
c	bkc	net/minecraft/world/entity/ai/behavior/StayCloseToTarget
	m	(Ljava/util/function/Function;Ljava/util/function/Predicate;IFILblb$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
		p	5		context
	m	(Ljava/util/function/Function;Ljava/util/function/Predicate;IFILblc;Lblc;)Lble;	a	lambda$create$1
		p	5		lookTarget
		p	6		walkTarget
	m	(Ljava/util/function/Function;Ljava/util/function/Predicate;IIF)Lbhq;	a	create
		p	0		lookTargetFunction
		p	1		predicate
		p	2		completionRange
		p	3		searchRange
		p	4		speed
	m	(Ljava/util/function/Function;Ljava/util/function/Predicate;ILblc;Lblc;FILaip;Lbfx;J)Z	a	lambda$create$0
		p	7		world
		p	8		entity
		p	9		time
c	bkd	net/minecraft/world/entity/ai/behavior/StopAttackingIfTargetInvalid
	m	()Lbhq;	a	create
	m	(Lbfx;)Z	a	lambda$create$2
		p	0		entity
	m	(Lbfx;Ljava/util/Optional;)Z	a	isTiredOfTryingToReachTarget
	m	(Lbfz;Lbfx;)V	a	lambda$create$3
		p	0		entity
		p	1		target
	m	(Lblb$b;Lblc;ZLblc;Ljava/util/function/Predicate;Ljava/util/function/BiConsumer;Laip;Lbfz;J)Z	a	lambda$create$4
		p	6		world
		p	7		entity
		p	8		time
	m	(Lblb$b;ZLjava/util/function/Predicate;Ljava/util/function/BiConsumer;Lblc;Lblc;)Lble;	a	lambda$create$5
		p	4		attackTarget
		p	5		cantReachWalkTargetSince
	m	(Ljava/util/function/BiConsumer;)Lbhq;	a	create
		p	0		forgetCallback
	m	(Ljava/util/function/Predicate;)Lbhq;	a	create
		p	0		alternativeCondition
	m	(Ljava/util/function/Predicate;Ljava/util/function/BiConsumer;Z)Lbhq;	a	create
		p	0		alternativeCondition
		p	1		forgetCallback
		p	2		shouldForgetIfTargetUnreachable
	m	(ZLjava/util/function/Predicate;Ljava/util/function/BiConsumer;Lblb$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$6
		p	3		context
	m	(Lbfx;)Z	b	lambda$create$0
		p	0		entity
	m	(Lbfz;Lbfx;)V	b	lambda$create$1
		p	0		entity
		p	1		target
	f	I	a	TIMEOUT_TO_GET_WITHIN_ATTACK_RANGE
c	bke	net/minecraft/world/entity/ai/behavior/StopBeingAngryIfTargetDead
	m	()Lbhq;	a	create
	m	(Laip;Lbfx;)Z	a	lambda$create$1
		p	1		target
	m	(Lbfh;)Lbfx;	a	lambda$create$0
		p	0		target
	m	(Lblb$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$5
		p	0		context
	m	(Lblb$b;Lblc;)Lble;	a	lambda$create$4
		p	1		angryAt
	m	(Lblb$b;Lblc;Laip;Lbfx;J)Z	a	lambda$create$3
		p	2		world
		p	3		entity
		p	4		time
	m	(Lblc;Lbfx;)V	a	lambda$create$2
		p	1		target
c	bkf	net/minecraft/world/entity/ai/behavior/StrollAroundPoi
	m	(FLede;)Lbpc;	a	lambda$create$0
		p	1		targetPos
	m	(Lblb$b;ILorg/apache/commons/lang3/mutable/MutableLong;FLblc;Lblc;)Lble;	a	lambda$create$2
		p	4		walkTarget
		p	5		pos
	m	(Lblb$b;Lblc;ILorg/apache/commons/lang3/mutable/MutableLong;Lblc;FLaip;Lbgg;J)Z	a	lambda$create$1
		p	6		world
		p	7		entity
		p	8		time
	m	(Lboz;FI)Lbiz;	a	create
		p	0		posModule
		p	1		walkSpeed
		p	2		maxDistance
	m	(Lboz;ILorg/apache/commons/lang3/mutable/MutableLong;FLblb$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$3
		p	4		context
	f	I	a	MIN_TIME_BETWEEN_STROLLS
	f	I	b	STROLL_MAX_XZ_DIST
	f	I	c	STROLL_MAX_Y_DIST
c	bkg	net/minecraft/world/entity/ai/behavior/StrollToPoi
	m	(Lblb$b;ILorg/apache/commons/lang3/mutable/MutableLong;FILblc;Lblc;)Lble;	a	lambda$create$1
		p	5		walkTarget
		p	6		pos
	m	(Lblb$b;Lblc;ILorg/apache/commons/lang3/mutable/MutableLong;Lblc;FILaip;Lbgg;J)Z	a	lambda$create$0
		p	7		world
		p	8		entity
		p	9		time
	m	(Lboz;FII)Lbhq;	a	create
		p	0		posModule
		p	1		walkSpeed
		p	2		completionRange
		p	3		maxDistance
	m	(Lboz;ILorg/apache/commons/lang3/mutable/MutableLong;FILblb$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
		p	5		context
c	bkh	net/minecraft/world/entity/ai/behavior/StrollToPoiList
	m	(Lblb$b;ILorg/apache/commons/lang3/mutable/MutableLong;FILblc;Lblc;Lblc;)Lble;	a	lambda$create$1
		p	5		walkTarget
		p	6		secondary
		p	7		primary
	m	(Lblb$b;Lblc;Lblc;ILorg/apache/commons/lang3/mutable/MutableLong;Lblc;FILaip;Lbxz;J)Z	a	lambda$create$0
		p	8		world
		p	9		entity
		p	10		time
	m	(Lboz;FIILboz;)Lbhq;	a	create
		p	0		secondaryPositions
		p	1		speed
		p	2		completionRange
		p	3		primaryPositionActivationDistance
		p	4		primaryPosition
	m	(Lboz;Lboz;ILorg/apache/commons/lang3/mutable/MutableLong;FILblb$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
		p	6		context
c	bki	net/minecraft/world/entity/ai/behavior/Swim
	m	(F)V	<init>	<init>
		p	1		chance
	m	(Laip;Lbfx;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laip;Lbfx;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbfz;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laip;Lbfz;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbfz;J)V	b	tick
	m	(Laip;Lbfx;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	f	F	c	chance
c	bkj	net/minecraft/world/entity/ai/behavior/TradeWithVillager
	m	(Laip;Lbfx;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laip;Lbfx;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbxz;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laip;Lbxz;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lbxz;Lbxz;)Ljava/util/Set;	a	figureOutWhatIAmWillingToTrade
		p	0		entity
		p	1		target
	m	(Lbxz;Ljava/util/Set;Lbfx;)V	a	throwHalfStack
		p	0		villager
		p	1		validItems
		p	2		target
	m	(Lcom/google/common/collect/ImmutableSet;Lcfq;)Z	a	lambda$figureOutWhatIAmWillingToTrade$0
		p	1		item
	m	(Laip;Lbfx;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbxz;J)V	b	start
	m	(Laip;Lbfx;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbxz;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbfx;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbxz;J)V	d	stop
	f	I	c	INTERACT_DIST_SQR
	f	F	d	SPEED_MODIFIER
	f	Ljava/util/Set;	e	trades
c	bkk	net/minecraft/world/entity/ai/behavior/TriggerGate
	m	(Lbid$a;Lbjx;Lbid$b;Laip;Lbfx;J)Z	a	lambda$triggerGate$1
		p	3		world
		p	4		entity
		p	5		time
	m	(Lbid$a;Lbjx;Lbid$b;Lblb$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$triggerGate$2
		p	3		context
	m	(Lbjx;Lcom/mojang/datafixers/util/Pair;)V	a	lambda$triggerGate$0
		p	1		task
	m	(Ljava/util/List;)Lbiz;	a	triggerOneShuffled
		p	0		weightedTasks
	m	(Ljava/util/List;Lbid$a;Lbid$b;)Lbiz;	a	triggerGate
		p	0		weightedTasks
		p	1		order
		p	2		runMode
c	bkl	net/minecraft/world/entity/ai/behavior/TryFindLand
	m	(IF)Lbhq;	a	create
		p	0		range
		p	1		speed
	m	(Lorg/apache/commons/lang3/mutable/MutableLong;IFLblb$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
		p	3		context
	m	(Lorg/apache/commons/lang3/mutable/MutableLong;IFLblc;Lblc;Lblc;)Lble;	a	lambda$create$1
		p	3		attackTarget
		p	4		walkTarget
		p	5		lookTarget
	m	(Lorg/apache/commons/lang3/mutable/MutableLong;ILblc;Lblc;FLaip;Lbgg;J)Z	a	lambda$create$0
		p	5		world
		p	6		entity
		p	7		time
	f	I	a	COOLDOWN_TICKS
c	bkm	net/minecraft/world/entity/ai/behavior/TryFindLandNearWater
	m	(IF)Lbhq;	a	create
		p	0		range
		p	1		speed
	m	(Lorg/apache/commons/lang3/mutable/MutableLong;IFLblb$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
		p	3		context
	m	(Lorg/apache/commons/lang3/mutable/MutableLong;IFLblc;Lblc;Lblc;)Lble;	a	lambda$create$1
		p	3		attackTarget
		p	4		walkTarget
		p	5		lookTarget
	m	(Lorg/apache/commons/lang3/mutable/MutableLong;ILblc;Lblc;FLaip;Lbgg;J)Z	a	lambda$create$0
		p	5		world
		p	6		entity
		p	7		time
c	bkn	net/minecraft/world/entity/ai/behavior/TryFindWater
	m	(IF)Lbhq;	a	create
		p	0		range
		p	1		speed
	m	(Lorg/apache/commons/lang3/mutable/MutableLong;IFLblb$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
		p	3		context
	m	(Lorg/apache/commons/lang3/mutable/MutableLong;IFLblc;Lblc;Lblc;)Lble;	a	lambda$create$1
		p	3		attackTarget
		p	4		walkTarget
		p	5		lookTarget
	m	(Lorg/apache/commons/lang3/mutable/MutableLong;ILblc;Lblc;FLaip;Lbgg;J)Z	a	lambda$create$0
		p	5		world
		p	6		entity
		p	7		time
c	bko	net/minecraft/world/entity/ai/behavior/TryLaySpawnOnWaterNearLand
	m	(Lcpi;)Lbhq;	a	create
		p	0		frogSpawn
	m	(Lcpi;Lblb$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
		p	1		context
	m	(Lcpi;Lblc;Laip;Lbfx;J)Z	a	lambda$create$0
		p	2		world
		p	3		entity
		p	4		time
	m	(Lcpi;Lblc;Lblc;Lblc;)Lble;	a	lambda$create$1
		p	1		attackTarget
		p	2		walkTarget
		p	3		isPregnant
c	bkp	net/minecraft/world/entity/ai/behavior/UpdateActivityFromSchedule
	m	()Lbhq;	a	create
	m	(Laip;Lbfx;J)Z	a	lambda$create$0
		p	0		world
		p	1		entity
		p	2		time
	m	(Lblb$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$1
		p	0		context
c	bkq	net/minecraft/world/entity/ai/behavior/UseBonemeal
	m	(Laip;Lbfx;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laip;Lbfx;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbxz;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laip;Lbxz;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lbxz;)V	a	setCurrentCropAsTarget
		p	1		villager
	m	(Lbxz;Lgt;)V	a	lambda$setCurrentCropAsTarget$0
		p	1		pos
	m	(Lgt;Laip;)Z	a	validPos
		p	1		pos
		p	2		world
	m	(Laip;Lbfx;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbxz;)Ljava/util/Optional;	b	pickNextTarget
		p	1		world
		p	2		entity
	m	(Laip;Lbxz;J)V	b	start
	m	(Laip;Lbfx;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbxz;J)V	c	stop
	m	(Laip;Lbfx;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbxz;J)V	d	tick
	f	I	c	BONEMEALING_DURATION
	f	J	d	nextWorkCycleTime
	f	J	e	lastBonemealingSession
	f	I	f	timeWorkedSoFar
	f	Ljava/util/Optional;	g	cropPos
c	bkr	net/minecraft/world/entity/ai/behavior/ValidateNearbyPoi
	m	(Laip;Lgt;Lbfx;)Z	a	bedIsOccupied
		p	0		world
		p	1		pos
		p	2		entity
	m	(Lblb$b;Lblc;Ljava/util/function/Predicate;Laip;Lbfx;J)Z	a	lambda$create$0
		p	3		world
		p	4		entity
		p	5		time
	m	(Lblb$b;Ljava/util/function/Predicate;Lblc;)Lble;	a	lambda$create$1
		p	2		poiPos
	m	(Lboz;Ljava/util/function/Predicate;Lblb$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
		p	2		context
	m	(Ljava/util/function/Predicate;Lboz;)Lbhq;	a	create
		p	0		poiTypePredicate
		p	1		poiPosModule
	f	I	a	MAX_DISTANCE
c	bks	net/minecraft/world/entity/ai/behavior/VillageBoundRandomStroll
	m	(F)Lbiz;	a	create
		p	0		walkSpeed
	m	(FII)Lbiz;	a	create
		p	0		walkSpeed
		p	1		horizontalRange
		p	2		verticalRange
	m	(FLede;)Lbpc;	a	lambda$create$0
		p	1		pos
	m	(IIFLblb$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$3
		p	3		context
	m	(IIFLblc;)Lble;	a	lambda$create$2
		p	3		walkTarget
	m	(IILblc;FLaip;Lbgg;J)Z	a	lambda$create$1
		p	4		world
		p	5		entity
		p	6		time
	f	I	a	MAX_XZ_DIST
	f	I	b	MAX_Y_DIST
c	bkt	net/minecraft/world/entity/ai/behavior/VillagerCalmDown
	m	()Lbhq;	a	create
	m	(Lbfx;Lbfx;)Z	a	lambda$create$0
		p	1		hurtBy
	m	(Lblb$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$3
		p	0		context
	m	(Lblb$b;Lblc;Lblc;Lblc;)Lble;	a	lambda$create$2
		p	1		hurtBy
		p	2		hurtByEntity
		p	3		nearestHostile
	m	(Lblb$b;Lblc;Lblc;Lblc;Laip;Lbfx;J)Z	a	lambda$create$1
		p	4		world
		p	5		entity
		p	6		time
	f	I	a	SAFE_DISTANCE_FROM_DANGER
c	bku	net/minecraft/world/entity/ai/behavior/VillagerGoalPackages
	m	()Lcom/mojang/datafixers/util/Pair;	a	getFullLookBehavior
	m	(F)Lcom/google/common/collect/ImmutableList;	a	getPlayPackage
		p	0		speed
	m	(Laip;Lbfx;)Z	a	raidExistsAndActive
		p	0		world
		p	1		entity
	m	(Lbyc;F)Lcom/google/common/collect/ImmutableList;	a	getCorePackage
		p	0		profession
		p	1		speed
	m	(Lhd;)Z	a	lambda$getMeetPackage$3
		p	0		poiType
	m	()Lcom/mojang/datafixers/util/Pair;	b	getMinimalLookBehavior
	m	(Laip;Lbfx;)Z	b	raidExistsAndNotVictory
		p	0		world
		p	1		entity
	m	(Lbyc;F)Lcom/google/common/collect/ImmutableList;	b	getWorkPackage
		p	0		profession
		p	1		speed
	m	(Lhd;)Z	b	lambda$getRestPackage$2
		p	0		poiType
	m	(Lbyc;F)Lcom/google/common/collect/ImmutableList;	c	getRestPackage
		p	0		profession
		p	1		speed
	m	(Lhd;)Z	c	lambda$getCorePackage$1
		p	0		poiType
	m	(Lbyc;F)Lcom/google/common/collect/ImmutableList;	d	getMeetPackage
		p	0		profession
		p	1		speed
	m	(Lhd;)Z	d	lambda$getCorePackage$0
		p	0		poiType
	m	(Lbyc;F)Lcom/google/common/collect/ImmutableList;	e	getIdlePackage
		p	0		profession
		p	1		speed
	m	(Lbyc;F)Lcom/google/common/collect/ImmutableList;	f	getPanicPackage
		p	0		profession
		p	1		speed
	m	(Lbyc;F)Lcom/google/common/collect/ImmutableList;	g	getPreRaidPackage
		p	0		profession
		p	1		speed
	m	(Lbyc;F)Lcom/google/common/collect/ImmutableList;	h	getRaidPackage
		p	0		profession
		p	1		speed
	m	(Lbyc;F)Lcom/google/common/collect/ImmutableList;	i	getHidePackage
		p	0		profession
		p	1		speed
	f	F	a	STROLL_SPEED_MODIFIER
c	bkv	net/minecraft/world/entity/ai/behavior/VillagerMakeLove
	m	(Laip;Lbfx;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laip;Lbfx;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbxz;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laip;Lbxz;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbxz;Lbxz;)V	a	tryToGiveBirth
		p	1		world
		p	2		first
		p	3		second
	m	(Laip;Lbxz;Lgt;)V	a	giveBedToChild
		p	1		world
		p	2		child
		p	3		pos
	m	(Lbfc;)Z	a	lambda$isBreedingPossible$0
	m	(Lbxz;)Z	a	isBreedingPossible
		p	1		villager
	m	(Lbxz;Lgt;Lhd;)Z	a	canReach
		p	1		villager
		p	2		pos
		p	3		poiType
	m	(Lbxz;Lhd;Lgt;)Z	a	lambda$takeVacantBed$2
		p	2		poiType
		p	3		pos
	m	(Lhd;)Z	a	lambda$takeVacantBed$1
		p	0		poiType
	m	(Laip;Lbfx;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbxz;)Ljava/util/Optional;	b	takeVacantBed
		p	1		world
		p	2		villager
	m	(Laip;Lbxz;J)V	b	start
	m	(Laip;Lbxz;Lbxz;)Ljava/util/Optional;	b	breed
		p	1		world
		p	2		parent
		p	3		partner
	m	(Laip;Lbfx;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbxz;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbfx;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbxz;J)V	d	stop
	f	I	c	INTERACT_DIST_SQR
	f	F	d	SPEED_MODIFIER
	f	J	e	birthTimestamp
c	bkw	net/minecraft/world/entity/ai/behavior/VillagerPanicTrigger
	m	(Laip;Lbfx;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbxz;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbxz;J)V	b	start
	m	(Lbfx;)Z	b	hasHostile
		p	0		entity
	m	(Laip;Lbfx;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbxz;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Lbfx;)Z	c	isHurt
		p	0		entity
	m	(Laip;Lbfx;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
c	bkx	net/minecraft/world/entity/ai/behavior/WakeUp
	m	()Lbhq;	a	create
	m	(Laip;Lbfx;J)Z	a	lambda$create$0
		p	0		world
		p	1		entity
		p	2		time
	m	(Lblb$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$1
		p	0		context
c	bky	net/minecraft/world/entity/ai/behavior/WorkAtComposter
	m	(Laip;Lbxz;)V	a	useWorkstation
		p	1		world
		p	2		entity
	m	(Laip;Lbxz;Lhc;Ldbq;)V	a	compostItems
		p	1		world
		p	2		entity
		p	3		pos
		p	4		composterState
	m	(Laip;Ldbq;Lgt;Ldbq;)V	a	spawnComposterFillEffects
		p	1		world
		p	2		oldState
		p	3		pos
		p	4		newState
	m	(Lbxz;)V	a	makeBread
		p	1		entity
	f	Ljava/util/List;	c	COMPOSTABLE_ITEMS
c	bkz	net/minecraft/world/entity/ai/behavior/WorkAtPoi
	m	(Laip;Lbfx;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laip;Lbfx;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbxz;)V	a	useWorkstation
		p	1		world
		p	2		entity
	m	(Laip;Lbxz;J)V	a	start
	m	(Lbgy;Lhc;)V	a	lambda$start$0
		p	1		pos
	m	(Laip;Lbxz;)Z	b	checkExtraStartConditions
	m	(Laip;Lbxz;J)Z	b	canStillUse
	m	(Laip;Lbfx;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
	f	I	c	CHECK_COOLDOWN
	f	D	d	DISTANCE
	f	J	e	lastCheck
c	bla	net/minecraft/world/entity/ai/behavior/YieldJobSite
	m	(F)Lbhq;	a	create
		p	0		speed
	m	(FLblb$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$6
		p	1		context
	m	(Lbfx;)Lbxz;	a	lambda$create$1
		p	0		villager
	m	(Lbgg;Lgt;Lbra;)Z	a	canReachPos
		p	0		entity
		p	1		pos
		p	2		poiType
	m	(Lblb$b;FLblc;Lblc;Lblc;Lblc;Lblc;)Lble;	a	lambda$create$5
		p	2		potentialJobSite
		p	3		jobSite
		p	4		mobs
		p	5		walkTarget
		p	6		lookTarget
	m	(Lblb$b;Lblc;Lblc;Lblc;Lblc;FLaip;Lbxz;J)Z	a	lambda$create$4
		p	6		world
		p	7		entity
		p	8		time
	m	(Lblc;Lblc;Lblc;Lgt;FLaip;Lbxz;)V	a	lambda$create$3
		p	6		villager
	m	(Lbxz;Lbfx;)Z	a	lambda$create$0
		p	1		mob
	m	(Lhd;Lbxz;Lgt;)Z	a	nearbyWantsJobsite
		p	0		poiType
		p	1		villager
		p	2		pos
	m	(Ljava/util/Optional;Lgt;Lbxz;)Z	a	lambda$create$2
		p	2		villager
c	blb	net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder
	m	(Lblb$e;)V	<init>	<init>
		p	1		function
	m	()Lblb$b;	a	instance
	m	(Lblb$e;)Lblb;	a	create
		p	0		function
	m	(Lble;Lble;)Lbiz;	a	sequence
		p	0		predicate
		p	1		task
	m	(Lble;Lble;Lblb$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$sequence$1
		p	2		context
	m	(Lble;Lcom/mojang/datafixers/util/Unit;)Lble;	a	lambda$sequence$0
		p	1		unit
	m	(Lcom/mojang/datafixers/kinds/App;)Lblb;	a	unbox
		p	0		app
	m	(Ljava/util/function/BiPredicate;)Lbiz;	a	triggerIf
		p	0		predicate
	m	(Ljava/util/function/BiPredicate;Laip;Lbfx;J)Z	a	lambda$triggerIf$4
		p	1		world
		p	2		entity
		p	3		time
	m	(Ljava/util/function/BiPredicate;Lblb$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$triggerIf$5
		p	1		context
	m	(Ljava/util/function/Function;)Lbiz;	a	create
		p	0		creator
	m	(Ljava/util/function/Predicate;)Lbiz;	a	triggerIf
		p	0		predicate
	m	(Ljava/util/function/Predicate;Laip;Lbfx;J)Z	a	lambda$triggerIf$2
		p	1		world
		p	2		entity
		p	3		time
	m	(Ljava/util/function/Predicate;Lbiz;)Lbiz;	a	triggerIf
		p	0		predicate
		p	1		task
	m	(Ljava/util/function/Predicate;Lblb$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$triggerIf$3
		p	1		context
	m	(Lcom/mojang/datafixers/kinds/App;)Lblb$e;	b	get
		p	0		app
	f	Lblb$e;	a	trigger
c	blb$1	net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$1
	m	()Ljava/lang/String;	b	debugString
	m	(Laip;Lbfx;J)Z	trigger	trigger
		p	1		world
		p	2		entity
		p	3		time
	f	Lblb$e;	a	val$resolvedBuilder
c	blb$a	net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$Constant
	m	(Ljava/lang/Object;)V	<init>	<init>
		p	1		value
	m	(Ljava/lang/Object;Ljava/util/function/Supplier;)V	<init>	<init>
		p	1		value
		p	2		nameSupplier
	m	(Ljava/lang/Object;)Ljava/lang/String;	a	lambda$new$0
c	blb$a$1	net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$Constant$1
	m	()Ljava/lang/String;	a	debugString
	m	(Laip;Lbfx;J)Ljava/lang/Object;	a	tryTrigger
		p	1		world
		p	2		entity
		p	3		time
	f	Ljava/lang/Object;	a	val$a
	f	Ljava/util/function/Supplier;	b	val$debugString
c	blb$b	net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$Instance
	m	(Lblc;)Ljava/util/Optional;	a	tryGet
		p	1		result
	m	(Lble;)Lblb;	a	ifTriggered
		p	1		runnable
	m	(Lboz;)Lblb;	a	registered
		p	1		type
	m	(Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;)Lcom/mojang/datafixers/kinds/App;	a	lambda$lift1$0
		p	2		app2
	m	(Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;)Lblb;	a	ap2
	m	(Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;)Lblb;	a	ap3
	m	(Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;)Lblb;	a	ap4
	m	(Ljava/lang/Object;)Lblb;	a	point
	m	(Ljava/util/function/Function;Lcom/mojang/datafixers/kinds/App;)Lblb;	a	map
	m	(Ljava/util/function/Supplier;Ljava/lang/Object;)Lblb;	a	point
		p	1		nameSupplier
		p	2		value
	m	(Lblc;)Ljava/lang/Object;	b	get
		p	1		result
	m	(Lboz;)Lblb;	b	present
		p	1		type
	m	(Lboz;)Lblb;	c	absent
		p	1		type
c	blb$b$1	net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$Instance$1
	m	()Ljava/lang/String;	a	debugString
	m	(Laip;Lbfx;J)Ljava/lang/Object;	a	tryTrigger
		p	1		world
		p	2		entity
		p	3		time
	f	Lblb$e;	a	val$aTrigger
	f	Lblb$e;	b	val$fTrigger
	f	Lblb$b;	c	this$0
c	blb$b$2	net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$Instance$2
	m	()Ljava/lang/String;	a	debugString
	m	(Laip;Lbfx;J)Ljava/lang/Object;	a	tryTrigger
		p	1		world
		p	2		entity
		p	3		time
	f	Lblb$e;	a	val$tTrigger
	f	Ljava/util/function/Function;	b	val$func
	f	Lblb$b;	c	this$0
c	blb$b$3	net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$Instance$3
	m	()Ljava/lang/String;	a	debugString
	m	(Laip;Lbfx;J)Ljava/lang/Object;	a	tryTrigger
		p	1		world
		p	2		entity
		p	3		time
	f	Lblb$e;	a	val$aTrigger
	f	Lblb$e;	b	val$bTrigger
	f	Lblb$e;	c	val$fTrigger
	f	Lblb$b;	d	this$0
c	blb$b$4	net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$Instance$4
	m	()Ljava/lang/String;	a	debugString
	m	(Laip;Lbfx;J)Ljava/lang/Object;	a	tryTrigger
		p	1		world
		p	2		entity
		p	3		time
	f	Lblb$e;	a	val$t1Trigger
	f	Lblb$e;	b	val$t2Trigger
	f	Lblb$e;	c	val$t3Trigger
	f	Lblb$e;	d	val$fTrigger
	f	Lblb$b;	e	this$0
c	blb$b$5	net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$Instance$5
	m	()Ljava/lang/String;	a	debugString
	m	(Laip;Lbfx;J)Ljava/lang/Object;	a	tryTrigger
		p	1		world
		p	2		entity
		p	3		time
	f	Lblb$e;	a	val$t1Trigger
	f	Lblb$e;	b	val$t2Trigger
	f	Lblb$e;	c	val$t3Trigger
	f	Lblb$e;	d	val$t4Trigger
	f	Lblb$e;	e	val$fTrigger
	f	Lblb$b;	f	this$0
c	blb$b$a	net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$Instance$Mu
c	blb$c	net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$Mu
c	blb$d	net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$PureMemory
	m	(Lbld;)V	<init>	<init>
		p	1		query
c	blb$d$1	net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$PureMemory$1
	m	()Ljava/lang/String;	a	debugString
	m	(Laip;Lbfx;J)Ljava/lang/Object;	a	tryTrigger
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbfx;J)Lblc;	b	tryTrigger
	f	Lbld;	a	val$condition
c	blb$e	net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$TriggerWithResult
	m	()Ljava/lang/String;	a	debugString
	m	(Laip;Lbfx;J)Ljava/lang/Object;	a	tryTrigger
		p	1		world
		p	2		entity
		p	3		time
c	blb$f	net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$TriggerWrapper
	m	(Lble;)V	<init>	<init>
		p	1		taskRunnable
c	blb$f$1	net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$TriggerWrapper$1
	m	()Ljava/lang/String;	a	debugString
	m	(Laip;Lbfx;J)Ljava/lang/Object;	a	tryTrigger
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbfx;J)Lcom/mojang/datafixers/util/Unit;	b	tryTrigger
	f	Lble;	a	val$dependentTrigger
c	blc	net/minecraft/world/entity/ai/behavior/declarative/MemoryAccessor
	m	(Lbgy;Lboz;Lcom/mojang/datafixers/kinds/App;)V	<init>	<init>
		p	1		brain
		p	2		memory
		p	3		value
	m	()Lcom/mojang/datafixers/kinds/App;	a	value
	m	(Ljava/lang/Object;)V	a	set
		p	1		value
	m	(Ljava/lang/Object;J)V	a	setWithExpiry
		p	1		value
		p	2		expiry
	m	(Ljava/util/Optional;)V	a	setOrErase
		p	1		value
	m	()V	b	erase
	f	Lbgy;	a	brain
	f	Lboz;	b	memoryType
	f	Lcom/mojang/datafixers/kinds/App;	c	value
c	bld	net/minecraft/world/entity/ai/behavior/declarative/MemoryCondition
	m	()Lboz;	a	memory
	m	(Lbgy;Ljava/util/Optional;)Lblc;	a	createAccessor
		p	1		brain
		p	2		value
	m	()Lbpa;	b	condition
c	bld$a	net/minecraft/world/entity/ai/behavior/declarative/MemoryCondition$Absent
	m	()Lboz;	a	memory
	m	(Lbgy;Ljava/util/Optional;)Lblc;	a	createAccessor
		p	1		brain
		p	2		value
	m	()Lbpa;	b	condition
	f	Lboz;	a	memory
c	bld$b	net/minecraft/world/entity/ai/behavior/declarative/MemoryCondition$Present
	m	()Lboz;	a	memory
	m	(Lbgy;Ljava/util/Optional;)Lblc;	a	createAccessor
		p	1		brain
		p	2		value
	m	()Lbpa;	b	condition
	f	Lboz;	a	memory
c	bld$c	net/minecraft/world/entity/ai/behavior/declarative/MemoryCondition$Registered
	m	()Lboz;	a	memory
	m	(Lbgy;Ljava/util/Optional;)Lblc;	a	createAccessor
		p	1		brain
		p	2		value
	m	()Lbpa;	b	condition
	f	Lboz;	a	memory
c	ble	net/minecraft/world/entity/ai/behavior/declarative/Trigger
	m	(Laip;Lbfx;J)Z	trigger	trigger
		p	1		world
		p	2		entity
		p	3		time
c	blf	net/minecraft/world/entity/ai/behavior/declarative/package-info
c	blg	net/minecraft/world/entity/ai/behavior/package-info
c	blh	net/minecraft/world/entity/ai/behavior/warden/Digging
	m	(I)V	<init>	<init>
		p	1		duration
	m	(Laip;Lbfx;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laip;Lbfx;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbxq;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laip;Lbxq;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbfx;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbxq;J)V	b	start
	m	(Laip;Lbxq;J)V	c	stop
	m	(Laip;Lbfx;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
c	bli	net/minecraft/world/entity/ai/behavior/warden/Emerging
	m	(I)V	<init>	<init>
		p	1		duration
	m	(Laip;Lbfx;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbxq;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbfx;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbxq;J)V	b	start
	m	(Laip;Lbxq;J)V	c	stop
	m	(Laip;Lbfx;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
c	blj	net/minecraft/world/entity/ai/behavior/warden/ForceUnmount
	m	(Laip;Lbfx;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laip;Lbfx;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
c	blk	net/minecraft/world/entity/ai/behavior/warden/Roar
	m	(Laip;Lbfx;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbxq;J)V	a	start
	m	(Laip;Lbfx;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbxq;J)Z	b	canStillUse
	m	(Laip;Lbfx;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbxq;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbfx;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbxq;J)V	d	stop
	f	I	c	TICKS_BEFORE_PLAYING_ROAR_SOUND
	f	I	d	ROAR_ANGER_INCREASE
c	bll	net/minecraft/world/entity/ai/behavior/warden/SetRoarTarget
	m	(Ljava/util/function/Function;)Lbhq;	a	create
		p	0		targetFinder
	m	(Ljava/util/function/Function;Lblb$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
		p	1		context
	m	(Ljava/util/function/Function;Lblc;Lblc;Laip;Lbxq;J)Z	a	lambda$create$0
		p	3		world
		p	4		entity
		p	5		time
	m	(Ljava/util/function/Function;Lblc;Lblc;Lblc;)Lble;	a	lambda$create$1
		p	1		roarTarget
		p	2		attackTarget
		p	3		cantReachWalkTargetSince
c	blm	net/minecraft/world/entity/ai/behavior/warden/SetWardenLookTarget
	m	()Lbhq;	a	create
	m	(Lblb$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$3
		p	0		context
	m	(Lblb$b;Lblc;)Ljava/util/Optional;	a	lambda$create$0
	m	(Lblb$b;Lblc;Lblc;Lblc;Laip;Lbfx;J)Z	a	lambda$create$1
		p	4		world
		p	5		entity
		p	6		time
	m	(Lblb$b;Lblc;Lblc;Lblc;Lblc;)Lble;	a	lambda$create$2
		p	1		lookTarget
		p	2		disturbanceLocation
		p	3		roarTarget
		p	4		attackTarget
c	bln	net/minecraft/world/entity/ai/behavior/warden/Sniffing
	m	(I)V	<init>	<init>
		p	1		runTime
	m	(Laip;Lbfx;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbxq;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lbxq;Lbfx;)V	a	lambda$stop$0
		p	1		target
	m	(Laip;Lbfx;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbxq;J)V	b	start
	m	(Laip;Lbxq;J)V	c	stop
	m	(Laip;Lbfx;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
	f	D	c	ANGER_FROM_SNIFFING_MAX_DISTANCE_XZ
	f	D	d	ANGER_FROM_SNIFFING_MAX_DISTANCE_Y
c	blo	net/minecraft/world/entity/ai/behavior/warden/SonicBoom
	m	(Laip;Lbfx;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laip;Lbfx;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbxq;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laip;Lbxq;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lbfx;I)V	a	setCooldown
		p	0		warden
		p	1		cooldown
	m	(Lbxq;Laip;Lbfx;)V	a	lambda$tick$2
		p	2		target
	m	(Lbxq;Lbfx;)Z	a	lambda$tick$1
		p	1		target
	m	(Laip;Lbfx;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbxq;J)V	b	start
	m	(Lbxq;Lbfx;)V	b	lambda$tick$0
		p	1		target
	m	(Laip;Lbfx;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbxq;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbfx;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbxq;J)V	d	stop
	f	I	c	COOLDOWN
	f	I	d	DISTANCE_XZ
	f	I	e	DISTANCE_Y
	f	D	f	KNOCKBACK_VERTICAL
	f	D	g	KNOCKBACK_HORIZONTAL
	f	I	h	TICKS_BEFORE_PLAYING_SOUND
	f	I	i	DURATION
c	blp	net/minecraft/world/entity/ai/behavior/warden/TryToSniff
	m	()Lbhq;	a	create
	m	(Lblb$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
		p	0		context
	m	(Lblc;Lblc;Lblc;Laip;Lbfx;J)Z	a	lambda$create$0
		p	3		world
		p	4		entity
		p	5		time
	m	(Lblc;Lblc;Lblc;Lblc;Lblc;)Lble;	a	lambda$create$1
		p	0		isSniffing
		p	1		walkTarget
		p	2		sniffCooldown
		p	3		nearestAttackable
		p	4		disturbanceLocation
	f	Lbdd;	a	SNIFF_COOLDOWN
c	blq	net/minecraft/world/entity/ai/behavior/warden/package-info
c	blr	net/minecraft/world/entity/ai/control/BodyRotationControl
	m	(Lbfz;)V	<init>	<init>
		p	1		entity
	m	()V	a	clientTick
	m	()V	b	rotateBodyIfNecessary
	m	()V	c	rotateHeadIfNecessary
	m	()V	d	rotateHeadTowardsFront
	m	()Z	e	notCarryingMobPassengers
	m	()Z	f	isMoving
	f	Lbfz;	a	mob
	f	I	b	HEAD_STABLE_ANGLE
	f	I	c	DELAY_UNTIL_STARTING_TO_FACE_FORWARD
	f	I	d	HOW_LONG_IT_TAKES_TO_FACE_FORWARD
	f	I	e	headStableTime
	f	F	f	lastStableYHeadRot
c	bls	net/minecraft/world/entity/ai/control/Control
c	blt	net/minecraft/world/entity/ai/control/FlyingMoveControl
	m	(Lbfz;IZ)V	<init>	<init>
		p	1		entity
		p	2		maxPitchChange
		p	3		noGravity
	m	()V	a	tick
	f	I	l	maxTurn
	f	Z	m	hoversInPlace
c	blu	net/minecraft/world/entity/ai/control/JumpControl
	m	(Lbfz;)V	<init>	<init>
		p	1		entity
	m	()V	a	jump
	m	()V	b	tick
	f	Z	a	jump
	f	Lbfz;	b	mob
c	blv	net/minecraft/world/entity/ai/control/LookControl
	m	(Lbfz;)V	<init>	<init>
		p	1		entity
	m	()V	a	tick
	m	(DDD)V	a	setLookAt
		p	1		x
		p	3		y
		p	5		z
	m	(DDDFF)V	a	setLookAt
		p	1		x
		p	3		y
		p	5		z
		p	7		maxYawChange
		p	8		maxPitchChange
	m	(FFF)F	a	rotateTowards
		p	1		from
		p	2		to
		p	3		max
	m	(Lbfh;)V	a	setLookAt
		p	1		entity
	m	(Lbfh;FF)V	a	setLookAt
		p	1		entity
		p	2		maxYawChange
		p	3		maxPitchChange
	m	(Lede;)V	a	setLookAt
		p	1		direction
	m	(Ljava/lang/Float;)V	a	lambda$tick$1
		p	1		pitch
	m	()V	b	clampHeadRotationToBody
	m	(Lbfh;)D	b	getWantedY
		p	0		entity
	m	(Ljava/lang/Float;)V	b	lambda$tick$0
		p	1		yaw
	m	()Z	c	resetXRotOnTick
	m	()Z	d	isLookingAtTarget
	m	()D	e	getWantedX
	m	()D	f	getWantedY
	m	()D	g	getWantedZ
	m	()Ljava/util/Optional;	h	getXRotD
	m	()Ljava/util/Optional;	i	getYRotD
	f	Lbfz;	a	mob
	f	F	b	yMaxRotSpeed
	f	F	c	xMaxRotAngle
	f	I	d	lookAtCooldown
	f	D	e	wantedX
	f	D	f	wantedY
	f	D	g	wantedZ
c	blw	net/minecraft/world/entity/ai/control/MoveControl
	m	(Lbfz;)V	<init>	<init>
		p	1		entity
	m	()V	a	tick
	m	(DDDD)V	a	setWantedPosition
		p	1		x
		p	3		y
		p	5		z
		p	7		speed
	m	(FF)V	a	strafe
		p	1		forward
		p	2		sideways
	m	(FFF)F	a	rotlerp
		p	1		from
		p	2		to
		p	3		max
	m	()Z	b	hasWanted
	m	(FF)Z	b	isWalkable
		p	1		x
		p	2		z
	m	()D	c	getSpeedModifier
	m	()D	d	getWantedX
	m	()D	e	getWantedY
	m	()D	f	getWantedZ
	f	F	a	MIN_SPEED
	f	F	b	MIN_SPEED_SQR
	f	I	c	MAX_TURN
	f	Lbfz;	d	mob
	f	D	e	wantedX
	f	D	f	wantedY
	f	D	g	wantedZ
	f	D	h	speedModifier
	f	F	i	strafeForwards
	f	F	j	strafeRight
	f	Lblw$a;	k	operation
c	blw$a	net/minecraft/world/entity/ai/control/MoveControl$Operation
	m	()[Lblw$a;	a	$values
	f	Lblw$a;	a	WAIT
	f	Lblw$a;	b	MOVE_TO
	f	Lblw$a;	c	STRAFE
	f	Lblw$a;	d	JUMPING
	f	[Lblw$a;	e	$VALUES
c	blx	net/minecraft/world/entity/ai/control/SmoothSwimmingLookControl
	m	(Lbfz;I)V	<init>	<init>
		p	1		entity
		p	2		yawAdjustThreshold
	m	()V	a	tick
	m	(Ljava/lang/Float;)V	a	lambda$tick$1
		p	1		pitch
	m	(Ljava/lang/Float;)V	b	lambda$tick$0
		p	1		yaw
	f	I	h	maxYRotFromCenter
	f	I	i	HEAD_TILT_X
	f	I	j	HEAD_TILT_Y
c	bly	net/minecraft/world/entity/ai/control/SmoothSwimmingMoveControl
	m	(Lbfz;IIFFZ)V	<init>	<init>
		p	1		entity
		p	2		pitchChange
		p	3		yawChange
		p	4		speedInWater
		p	5		speedInAir
		p	6		buoyant
	m	()V	a	tick
	m	(F)F	a	getTurningSpeedFactor
	f	F	l	FULL_SPEED_TURN_THRESHOLD
	f	F	m	STOP_TURN_THRESHOLD
	f	I	n	maxTurnX
	f	I	o	maxTurnY
	f	F	p	inWaterSpeedModifier
	f	F	q	outsideWaterSpeedModifier
	f	Z	r	applyGravity
c	blz	net/minecraft/world/entity/ai/control/package-info
c	bma	net/minecraft/world/entity/ai/goal/AvoidEntityGoal
	m	(Lbgg;Ljava/lang/Class;FDD)V	<init>	<init>
		p	1		mob
		p	2		fleeFromType
		p	3		distance
		p	4		slowSpeed
		p	6		fastSpeed
	m	(Lbgg;Ljava/lang/Class;FDDLjava/util/function/Predicate;)V	<init>	<init>
		p	1		fleeingEntity
		p	2		classToFleeFrom
		p	3		fleeDistance
		p	4		fleeSlowSpeed
		p	6		fleeFastSpeed
		p	8		inclusionSelector
	m	(Lbgg;Ljava/lang/Class;Ljava/util/function/Predicate;FDDLjava/util/function/Predicate;)V	<init>	<init>
		p	1		mob
		p	2		fleeFromType
		p	3		extraInclusionSelector
		p	4		distance
		p	5		slowSpeed
		p	7		fastSpeed
		p	9		inclusionSelector
	m	()Z	a	canUse
	m	(Lbfx;)Z	a	lambda$canUse$2
	m	()Z	b	canContinueToUse
	m	(Lbfx;)Z	b	lambda$new$1
	m	()V	c	start
	m	(Lbfx;)Z	c	lambda$new$0
	m	()V	d	stop
	m	()V	e	tick
	f	Lbgg;	a	mob
	f	Lbfx;	b	toAvoid
	f	F	c	maxDist
	f	Ldwz;	d	path
	f	Lbph;	e	pathNav
	f	Ljava/lang/Class;	f	avoidClass
	f	Ljava/util/function/Predicate;	g	avoidPredicate
	f	Ljava/util/function/Predicate;	h	predicateOnAvoidEntity
	f	D	i	walkSpeedModifier
	f	D	j	sprintSpeedModifier
	f	Lbqk;	k	avoidEntityTargeting
c	bmb	net/minecraft/world/entity/ai/goal/BegGoal
	m	(Lbsm;F)V	<init>	<init>
		p	1		wolf
		p	2		begDistance
	m	()Z	a	canUse
	m	(Lbym;)Z	a	playerHoldingInteresting
		p	1		player
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lbsm;	a	wolf
	f	Lbym;	b	player
	f	Lcmi;	c	level
	f	F	d	lookDistance
	f	I	e	lookTime
	f	Lbqk;	f	begTargeting
c	bmc	net/minecraft/world/entity/ai/goal/BoatGoals
	m	()[Lbmc;	a	$values
	f	Lbmc;	a	GO_TO_BOAT
	f	Lbmc;	b	GO_IN_BOAT_DIRECTION
	f	[Lbmc;	c	$VALUES
c	bmd	net/minecraft/world/entity/ai/goal/BreakDoorGoal
	m	(Lbfz;ILjava/util/function/Predicate;)V	<init>	<init>
		p	1		mob
		p	2		maxProgress
		p	3		difficultySufficientPredicate
	m	(Lbfz;Ljava/util/function/Predicate;)V	<init>	<init>
		p	1		mob
		p	2		difficultySufficientPredicate
	m	()Z	a	canUse
	m	(Lbdv;)Z	a	isValidDifficulty
		p	1		difficulty
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	m	()I	f	getDoorBreakTime
	f	I	a	breakTime
	f	I	b	lastBreakProgress
	f	I	c	doorBreakTime
	f	I	g	DEFAULT_DOOR_BREAK_TIME
	f	Ljava/util/function/Predicate;	h	validDifficulties
c	bme	net/minecraft/world/entity/ai/goal/BreathAirGoal
	m	(Lbgg;)V	<init>	<init>
		p	1		mob
	m	()Z	I_	isInterruptable
	m	()Z	a	canUse
	m	(Lcml;Lgt;)Z	a	givesAir
		p	1		world
		p	2		pos
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	e	tick
	m	()V	h	findAirPosition
	f	Lbgg;	a	mob
c	bmf	net/minecraft/world/entity/ai/goal/BreedGoal
	m	(Lbrj;D)V	<init>	<init>
		p	1		animal
		p	2		speed
	m	(Lbrj;DLjava/lang/Class;)V	<init>	<init>
		p	1		animal
		p	2		speed
		p	4		entityClass
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	d	stop
	m	()V	e	tick
	m	()V	g	breed
	m	()Lbrj;	h	getFreePartner
	f	Lbrj;	a	animal
	f	Lcmi;	b	level
	f	Lbrj;	c	partner
	f	Lbqk;	d	PARTNER_TARGETING
	f	Ljava/lang/Class;	e	partnerClass
	f	I	f	loveTime
	f	D	g	speedModifier
c	bmg	net/minecraft/world/entity/ai/goal/CatLieOnBedGoal
	m	(Lbrm;DI)V	<init>	<init>
		p	1		cat
		p	2		speed
		p	4		range
	m	()Z	a	canUse
	m	(Lbgg;)I	a	nextStartTick
		p	1		mob
	m	(Lcml;Lgt;)Z	a	isValidTarget
		p	1		world
		p	2		pos
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lbrm;	g	cat
c	bmh	net/minecraft/world/entity/ai/goal/CatSitOnBlockGoal
	m	(Lbrm;D)V	<init>	<init>
		p	1		cat
		p	2		speed
	m	()Z	a	canUse
	m	(Lcml;Lgt;)Z	a	isValidTarget
		p	1		world
		p	2		pos
	m	(Ldbp$a;)Z	a	lambda$isValidTarget$1
		p	0		state
	m	(Ldce;)Ljava/lang/Boolean;	a	lambda$isValidTarget$0
		p	0		part
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lbrm;	g	cat
c	bmi	net/minecraft/world/entity/ai/goal/ClimbOnTopOfPowderSnowGoal
	m	(Lbfz;Lcmi;)V	<init>	<init>
		p	1		entity
		p	2		world
	m	()Z	J_	requiresUpdateEveryTick
	m	()Z	a	canUse
	m	()V	e	tick
	f	Lbfz;	a	mob
	f	Lcmi;	b	level
c	bmj	net/minecraft/world/entity/ai/goal/DolphinJumpGoal
	m	(Lbrr;I)V	<init>	<init>
		p	1		dolphin
		p	2		chance
	m	()Z	I_	isInterruptable
	m	()Z	a	canUse
	m	(Lgt;III)Z	a	waterIsClear
		p	1		pos
		p	2		offsetX
		p	3		offsetZ
		p	4		multiplier
	m	()Z	b	canContinueToUse
	m	(Lgt;III)Z	b	surfaceIsClear
		p	1		pos
		p	2		offsetX
		p	3		offsetZ
		p	4		multiplier
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	[I	a	STEPS_TO_CHECK
	f	Lbrr;	b	dolphin
	f	I	c	interval
	f	Z	d	breached
c	bmk	net/minecraft/world/entity/ai/goal/DoorInteractGoal
	m	(Lbfz;)V	<init>	<init>
		p	1		mob
	m	()Z	J_	requiresUpdateEveryTick
	m	()Z	a	canUse
	m	(Z)V	a	setOpen
		p	1		open
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	e	tick
	m	()Z	h	isOpen
	f	Z	a	passed
	f	F	b	doorOpenDirX
	f	F	c	doorOpenDirZ
	f	Lbfz;	d	mob
	f	Lgt;	e	doorPos
	f	Z	f	hasDoor
c	bml	net/minecraft/world/entity/ai/goal/EatBlockGoal
	m	(Lbfz;)V	<init>	<init>
		p	1		mob
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	m	()I	h	getEatAnimationTick
	f	I	a	EAT_ANIMATION_TICKS
	f	Ljava/util/function/Predicate;	b	IS_TALL_GRASS
	f	Lbfz;	c	mob
	f	Lcmi;	d	level
	f	I	e	eatAnimationTick
c	bmm	net/minecraft/world/entity/ai/goal/FleeSunGoal
	m	(Lbgg;D)V	<init>	<init>
		p	1		mob
		p	2		speed
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()Z	h	setWantedPos
	m	()Lede;	i	getHidePos
	f	Lbgg;	a	mob
	f	D	b	wantedX
	f	D	c	wantedY
	f	D	d	wantedZ
	f	D	e	speedModifier
	f	Lcmi;	f	level
c	bmn	net/minecraft/world/entity/ai/goal/FloatGoal
	m	(Lbfz;)V	<init>	<init>
		p	1		mob
	m	()Z	J_	requiresUpdateEveryTick
	m	()Z	a	canUse
	m	()V	e	tick
	f	Lbfz;	a	mob
c	bmo	net/minecraft/world/entity/ai/goal/FollowBoatGoal
	m	(Lbgg;)V	<init>	<init>
		p	1		mob
	m	()Z	I_	isInterruptable
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	I	a	timeToRecalcPath
	f	Lbgg;	b	mob
	f	Lbym;	c	following
	f	Lbmc;	d	currentGoal
c	bmp	net/minecraft/world/entity/ai/goal/FollowFlockLeaderGoal
	m	(Lbri;)V	<init>	<init>
		p	1		fish
	m	()Z	a	canUse
	m	(Lbri;)I	a	nextStartTick
		p	1		fish
	m	()Z	b	canContinueToUse
	m	(Lbri;)Z	b	lambda$canUse$1
		p	0		fish
	m	()V	c	start
	m	(Lbri;)Z	c	lambda$canUse$0
		p	0		fish
	m	()V	d	stop
	m	()V	e	tick
	f	I	a	INTERVAL_TICKS
	f	Lbri;	b	mob
	f	I	c	timeToRecalcPath
	f	I	d	nextStartTick
c	bmq	net/minecraft/world/entity/ai/goal/FollowMobGoal
	m	(Lbfz;DFF)V	<init>	<init>
		p	1		mob
		p	2		speed
		p	4		minDistance
		p	5		maxDistance
	m	()Z	a	canUse
	m	(Lbfz;Lbfz;)Z	a	lambda$new$0
		p	1		target
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lbfz;	a	mob
	f	Ljava/util/function/Predicate;	b	followPredicate
	f	Lbfz;	c	followingMob
	f	D	d	speedModifier
	f	Lbph;	e	navigation
	f	I	f	timeToRecalcPath
	f	F	g	stopDistance
	f	F	h	oldWaterCost
	f	F	i	areaSize
c	bmr	net/minecraft/world/entity/ai/goal/FollowOwnerGoal
	m	(Lbgt;DFFZ)V	<init>	<init>
		p	1		tameable
		p	2		speed
		p	4		minDistance
		p	5		maxDistance
		p	6		leavesAllowed
	m	()Z	a	canUse
	m	(II)I	a	randomIntInclusive
		p	1		min
		p	2		max
	m	(III)Z	a	maybeTeleportTo
		p	1		x
		p	2		y
		p	3		z
	m	(Lgt;)Z	a	canTeleportTo
		p	1		pos
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	m	()Z	h	unableToMove
	m	()V	i	teleportToOwner
	f	I	a	TELEPORT_WHEN_DISTANCE_IS
	f	I	b	MIN_HORIZONTAL_DISTANCE_FROM_PLAYER_WHEN_TELEPORTING
	f	I	c	MAX_HORIZONTAL_DISTANCE_FROM_PLAYER_WHEN_TELEPORTING
	f	I	d	MAX_VERTICAL_DISTANCE_FROM_PLAYER_WHEN_TELEPORTING
	f	Lbgt;	e	tamable
	f	Lbfx;	f	owner
	f	Lcml;	g	level
	f	D	h	speedModifier
	f	Lbph;	i	navigation
	f	I	j	timeToRecalcPath
	f	F	k	stopDistance
	f	F	l	startDistance
	f	F	m	oldWaterCost
	f	Z	n	canFly
c	bms	net/minecraft/world/entity/ai/goal/FollowParentGoal
	m	(Lbrj;D)V	<init>	<init>
		p	1		animal
		p	2		speed
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	I	a	HORIZONTAL_SCAN_RANGE
	f	I	b	VERTICAL_SCAN_RANGE
	f	I	c	DONT_FOLLOW_IF_CLOSER_THAN
	f	Lbrj;	d	animal
	f	Lbrj;	e	parent
	f	D	f	speedModifier
	f	I	g	timeToRecalcPath
c	bmt	net/minecraft/world/entity/ai/goal/Goal
	m	()Z	I_	isInterruptable
	m	()Z	J_	requiresUpdateEveryTick
	m	()Z	a	canUse
	m	(I)I	a	adjustedTickDelay
		p	1		ticks
	m	(Ljava/util/EnumSet;)V	a	setFlags
		p	1		controls
	m	()Z	b	canContinueToUse
	m	(I)I	b	reducedTickDelay
		p	0		serverTicks
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	m	()Ljava/util/EnumSet;	j	getFlags
	f	Ljava/util/EnumSet;	a	flags
c	bmt$a	net/minecraft/world/entity/ai/goal/Goal$Flag
	m	()[Lbmt$a;	a	$values
	f	Lbmt$a;	a	MOVE
	f	Lbmt$a;	b	LOOK
	f	Lbmt$a;	c	JUMP
	f	Lbmt$a;	d	TARGET
	f	[Lbmt$a;	e	$VALUES
c	bmu	net/minecraft/world/entity/ai/goal/GoalSelector
	m	(Ljava/util/function/Supplier;)V	<init>	<init>
		p	1		profiler
	m	()V	a	tick
	m	(I)V	a	setNewGoalRate
		p	1		timeInterval
	m	(ILbmt;)V	a	addGoal
		p	1		priority
		p	2		goal
	m	(Lbmt$a;)V	a	disableControlFlag
		p	1		control
	m	(Lbmt$a;Z)V	a	setControlFlag
		p	1		control
		p	2		enabled
	m	(Lbmt;)V	a	removeGoal
		p	1		goal
	m	(Lbmt;Lboh;)Z	a	lambda$removeGoal$2
	m	(Lboh;Ljava/util/EnumSet;)Z	a	goalContainsAnyFlags
		p	0		goal
		p	1		controls
	m	(Lboh;Ljava/util/Map;)Z	a	goalCanBeReplacedForAllFlags
		p	0		goal
		p	1		goalsByControl
	m	(Ljava/util/function/Predicate;)V	a	removeAllGoals
		p	1		predicate
	m	(Ljava/util/function/Predicate;Lboh;)Z	a	lambda$removeAllGoals$0
		p	1		goal
	m	(Z)V	a	tickRunningGoals
		p	1		tickAll
	m	()Ljava/util/Set;	b	getAvailableGoals
	m	(Lbmt$a;)V	b	enableControlFlag
		p	1		control
	m	(Lbmt;Lboh;)Z	b	lambda$removeGoal$1
	m	()Ljava/util/stream/Stream;	c	getRunningGoals
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lboh;	b	NO_GOAL
	f	Ljava/util/Map;	c	lockedFlags
	f	Ljava/util/Set;	d	availableGoals
	f	Ljava/util/function/Supplier;	e	profiler
	f	Ljava/util/EnumSet;	f	disabledFlags
	f	I	g	tickCount
	f	I	h	newGoalRate
c	bmu$1	net/minecraft/world/entity/ai/goal/GoalSelector$1
	m	()Z	a	canUse
c	bmu$2	net/minecraft/world/entity/ai/goal/GoalSelector$2
	m	(ILbmt;)V	<init>	<init>
		p	1		priority
		p	2		goal
	m	()Z	h	isRunning
c	bmv	net/minecraft/world/entity/ai/goal/GolemRandomStrollInVillageGoal
	m	(Lbgg;D)V	<init>	<init>
		p	1		entity
		p	2		speed
	m	(Laip;Lhw;)Z	a	lambda$getRandomVillageSection$0
		p	1		sectionPos
	m	(Lbxz;)Z	a	doesVillagerWantGolem
		p	1		villager
	m	(Lhd;)Z	a	lambda$getRandomPoiWithinSection$1
	m	(Lhw;)Lgt;	a	getRandomPoiWithinSection
		p	1		pos
	m	()Lede;	h	getPosition
	m	()Lede;	k	getPositionTowardsAnywhere
	m	()Lede;	l	getPositionTowardsVillagerWhoWantsGolem
	m	()Lede;	m	getPositionTowardsPoi
	m	()Lhw;	n	getRandomVillageSection
	f	I	i	POI_SECTION_SCAN_RADIUS
	f	I	j	VILLAGER_SCAN_RADIUS
	f	I	k	RANDOM_POS_XY_DISTANCE
	f	I	l	RANDOM_POS_Y_DISTANCE
c	bmw	net/minecraft/world/entity/ai/goal/InteractGoal
	m	(Lbfz;Ljava/lang/Class;F)V	<init>	<init>
		p	1		mob
		p	2		targetType
		p	3		range
	m	(Lbfz;Ljava/lang/Class;FF)V	<init>	<init>
		p	1		mob
		p	2		targetType
		p	3		range
		p	4		chance
c	bmx	net/minecraft/world/entity/ai/goal/JumpGoal
c	bmy	net/minecraft/world/entity/ai/goal/LandOnOwnersShoulderGoal
	m	(Lbsg;)V	<init>	<init>
		p	1		tameable
	m	()Z	I_	isInterruptable
	m	()Z	a	canUse
	m	()V	c	start
	m	()V	e	tick
	f	Lbsg;	a	entity
	f	Laiq;	b	owner
	f	Z	c	isSittingOnShoulder
c	bmz	net/minecraft/world/entity/ai/goal/LeapAtTargetGoal
	m	(Lbfz;F)V	<init>	<init>
		p	1		mob
		p	2		velocity
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	f	Lbfz;	a	mob
	f	Lbfx;	b	target
	f	F	c	yd
c	bna	net/minecraft/world/entity/ai/goal/LlamaFollowCaravanGoal
	m	(Lbtl;D)V	<init>	<init>
		p	1		llama
		p	2		speed
	m	()Z	a	canUse
	m	(Lbfh;)Z	a	lambda$canUse$0
		p	0		entity
	m	(Lbtl;I)Z	a	firstIsLeashed
		p	1		llama
		p	2		length
	m	()Z	b	canContinueToUse
	m	()V	d	stop
	m	()V	e	tick
	f	Lbtl;	a	llama
	f	D	b	speedModifier
	f	I	c	CARAVAN_LIMIT
	f	I	d	distCheckCounter
c	bnb	net/minecraft/world/entity/ai/goal/LookAtPlayerGoal
	m	(Lbfz;Ljava/lang/Class;F)V	<init>	<init>
		p	1		mob
		p	2		targetType
		p	3		range
	m	(Lbfz;Ljava/lang/Class;FF)V	<init>	<init>
		p	1		mob
		p	2		targetType
		p	3		range
		p	4		chance
	m	(Lbfz;Ljava/lang/Class;FFZ)V	<init>	<init>
		p	1		mob
		p	2		targetType
		p	3		range
		p	4		chance
		p	5		lookForward
	m	()Z	a	canUse
	m	(Lbfx;)Z	a	lambda$canUse$1
	m	(Lbfz;Lbfx;)Z	a	lambda$new$0
		p	1		entity
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	F	a	DEFAULT_PROBABILITY
	f	Lbfz;	b	mob
	f	Lbfh;	c	lookAt
	f	F	d	lookDistance
	f	F	e	probability
	f	Ljava/lang/Class;	f	lookAtType
	f	Lbqk;	g	lookAtContext
	f	I	h	lookTime
	f	Z	i	onlyHorizontal
c	bnc	net/minecraft/world/entity/ai/goal/LookAtTradingPlayerGoal
	m	(Lbxu;)V	<init>	<init>
		p	1		merchant
	m	()Z	a	canUse
	f	Lbxu;	h	villager
c	bnd	net/minecraft/world/entity/ai/goal/MeleeAttackGoal
	m	(Lbgg;DZ)V	<init>	<init>
		p	1		mob
		p	2		speed
		p	4		pauseWhenMobIdle
	m	()Z	J_	requiresUpdateEveryTick
	m	()Z	a	canUse
	m	(Lbfx;)D	a	getAttackReachSqr
		p	1		entity
	m	(Lbfx;D)V	a	checkAndPerformAttack
		p	1		target
		p	2		squaredDistance
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	m	()V	h	resetAttackCooldown
	m	()Z	i	isTimeToAttack
	m	()I	k	getTicksUntilNextAttack
	m	()I	l	getAttackInterval
	f	Lbgg;	a	mob
	f	D	b	speedModifier
	f	Z	c	followingTargetEvenIfNotSeen
	f	Ldwz;	d	path
	f	D	e	pathedTargetX
	f	D	f	pathedTargetY
	f	D	g	pathedTargetZ
	f	I	h	ticksUntilNextPathRecalculation
	f	I	i	ticksUntilNextAttack
	f	I	j	attackInterval
	f	J	k	lastCanUseCheck
	f	J	l	COOLDOWN_BETWEEN_CAN_USE_CHECKS
c	bne	net/minecraft/world/entity/ai/goal/MoveBackToVillageGoal
	m	(Lbgg;DZ)V	<init>	<init>
		p	1		entity
		p	2		speed
		p	4		canDespawn
	m	()Z	a	canUse
	m	()Lede;	h	getPosition
	f	I	i	MAX_XZ_DIST
	f	I	j	MAX_Y_DIST
c	bnf	net/minecraft/world/entity/ai/goal/MoveThroughVillageGoal
	m	(Lbgg;DZILjava/util/function/BooleanSupplier;)V	<init>	<init>
		p	1		entity
		p	2		speed
		p	4		requiresNighttime
		p	5		distance
		p	6		doorPassingThroughGetter
	m	()Z	a	canUse
	m	(Laip;Lgt;Lgt;)D	a	lambda$canUse$2
		p	3		pos
	m	(Lgt;)Z	a	hasNotVisited
		p	1		pos
	m	(Lgt;Lgt;)Ljava/lang/Double;	a	lambda$canUse$1
	m	(Lhd;)Z	a	lambda$canUse$3
		p	0		poiType
	m	()Z	b	canContinueToUse
	m	(Lhd;)Z	b	lambda$canUse$0
		p	0		poiType
	m	()V	c	start
	m	()V	d	stop
	m	()V	h	updateVisited
	f	Lbgg;	a	mob
	f	D	b	speedModifier
	f	Ldwz;	c	path
	f	Lgt;	d	poiPos
	f	Z	e	onlyAtNight
	f	Ljava/util/List;	f	visited
	f	I	g	distanceToPoi
	f	Ljava/util/function/BooleanSupplier;	h	canDealWithDoors
c	bng	net/minecraft/world/entity/ai/goal/MoveToBlockGoal
	m	(Lbgg;DI)V	<init>	<init>
		p	1		mob
		p	2		speed
		p	4		range
	m	(Lbgg;DII)V	<init>	<init>
		p	1		mob
		p	2		speed
		p	4		range
		p	5		maxYDifference
	m	()Z	J_	requiresUpdateEveryTick
	m	()Z	a	canUse
	m	(Lbgg;)I	a	nextStartTick
		p	1		mob
	m	(Lcml;Lgt;)Z	a	isValidTarget
		p	1		world
		p	2		pos
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	e	tick
	m	()V	h	moveMobToBlock
	m	()D	i	acceptedDistance
	m	()Lgt;	k	getMoveToTarget
	m	()Z	l	shouldRecalculatePath
	m	()Z	m	isReachedTarget
	m	()Z	n	findNearestBlock
	f	Lbgg;	a	mob
	f	D	b	speedModifier
	f	I	c	nextStartTick
	f	I	d	tryTicks
	f	Lgt;	e	blockPos
	f	I	f	verticalSearchStart
	f	I	g	GIVE_UP_TICKS
	f	I	h	STAY_TICKS
	f	I	i	INTERVAL_TICKS
	f	I	j	maxStayTicks
	f	Z	k	reachedTarget
	f	I	l	searchRange
	f	I	m	verticalSearchRange
c	bnh	net/minecraft/world/entity/ai/goal/MoveTowardsRestrictionGoal
	m	(Lbgg;D)V	<init>	<init>
		p	1		mob
		p	2		speed
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	f	Lbgg;	a	mob
	f	D	b	wantedX
	f	D	c	wantedY
	f	D	d	wantedZ
	f	D	e	speedModifier
c	bni	net/minecraft/world/entity/ai/goal/MoveTowardsTargetGoal
	m	(Lbgg;DF)V	<init>	<init>
		p	1		mob
		p	2		speed
		p	4		maxDistance
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	f	Lbgg;	a	mob
	f	Lbfx;	b	target
	f	D	c	wantedX
	f	D	d	wantedY
	f	D	e	wantedZ
	f	D	f	speedModifier
	f	F	g	within
c	bnj	net/minecraft/world/entity/ai/goal/OcelotAttackGoal
	m	(Lbfz;)V	<init>	<init>
		p	1		mob
	m	()Z	J_	requiresUpdateEveryTick
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	d	stop
	m	()V	e	tick
	f	Lbfz;	a	mob
	f	Lbfx;	b	target
	f	I	c	attackTime
c	bnk	net/minecraft/world/entity/ai/goal/OfferFlowerGoal
	m	(Lbrv;)V	<init>	<init>
		p	1		golem
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	I	a	OFFER_TICKS
	f	Lbqk;	b	OFFER_TARGER_CONTEXT
	f	Lbrv;	c	golem
	f	Lbxz;	d	villager
	f	I	e	tick
c	bnl	net/minecraft/world/entity/ai/goal/OpenDoorGoal
	m	(Lbfz;Z)V	<init>	<init>
		p	1		mob
		p	2		delayedClose
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Z	a	closeDoor
	f	I	b	forgetTime
c	bnm	net/minecraft/world/entity/ai/goal/PanicGoal
	m	(Lbgg;D)V	<init>	<init>
		p	1		mob
		p	2		speed
	m	()Z	a	canUse
	m	(Lclo;Lbfh;I)Lgt;	a	lookForWater
		p	1		world
		p	2		entity
		p	3		rangeX
	m	(Lclo;Lgt;)Z	a	lambda$lookForWater$0
		p	1		pos
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()Z	h	shouldPanic
	m	()Z	i	findRandomPosition
	m	()Z	k	isRunning
	f	I	a	WATER_CHECK_DISTANCE_VERTICAL
	f	Lbgg;	b	mob
	f	D	c	speedModifier
	f	D	d	posX
	f	D	e	posY
	f	D	f	posZ
	f	Z	g	isRunning
c	bnn	net/minecraft/world/entity/ai/goal/PathfindToRaidGoal
	m	(Lbzu;)V	<init>	<init>
		p	1		actor
	m	()Z	a	canUse
	m	(Lbzt;)V	a	recruitNearby
		p	1		raid
	m	(Lbzt;Lbzu;)Z	a	lambda$recruitNearby$0
		p	1		raider
	m	()Z	b	canContinueToUse
	m	()V	e	tick
	f	I	a	RECRUITMENT_SEARCH_TICK_DELAY
	f	F	b	SPEED_MODIFIER
	f	Lbzu;	c	mob
	f	I	d	recruitmentTick
c	bno	net/minecraft/world/entity/ai/goal/RandomLookAroundGoal
	m	(Lbfz;)V	<init>	<init>
		p	1		mob
	m	()Z	J_	requiresUpdateEveryTick
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	e	tick
	f	Lbfz;	a	mob
	f	D	b	relX
	f	D	c	relZ
	f	I	d	lookTime
c	bnp	net/minecraft/world/entity/ai/goal/RandomStandGoal
	m	(Lbti;)V	<init>	<init>
		p	1		entity
	m	()Z	J_	requiresUpdateEveryTick
	m	()Z	a	canUse
	m	(Lbti;)V	a	resetStandInterval
		p	1		entity
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	h	playStandSound
	f	Lbti;	a	horse
	f	I	b	nextStand
c	bnq	net/minecraft/world/entity/ai/goal/RandomStrollGoal
	m	(Lbgg;D)V	<init>	<init>
		p	1		mob
		p	2		speed
	m	(Lbgg;DI)V	<init>	<init>
		p	1		mob
		p	2		speed
		p	4		chance
	m	(Lbgg;DIZ)V	<init>	<init>
		p	1		entity
		p	2		speed
		p	4		chance
		p	5		canDespawn
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	(I)V	c	setInterval
		p	1		chance
	m	()V	d	stop
	m	()Lede;	h	getPosition
	m	()V	i	trigger
	f	I	a	DEFAULT_INTERVAL
	f	Lbgg;	b	mob
	f	D	c	wantedX
	f	D	d	wantedY
	f	D	e	wantedZ
	f	D	f	speedModifier
	f	I	g	interval
	f	Z	h	forceTrigger
	f	Z	i	checkNoActionTime
c	bnr	net/minecraft/world/entity/ai/goal/RandomSwimmingGoal
	m	(Lbgg;DI)V	<init>	<init>
		p	1		mob
		p	2		speed
		p	4		chance
	m	()Lede;	h	getPosition
c	bns	net/minecraft/world/entity/ai/goal/RangedAttackGoal
	m	(Lbwe;DIF)V	<init>	<init>
		p	1		mob
		p	2		mobSpeed
		p	4		intervalTicks
		p	5		maxShootRange
	m	(Lbwe;DIIF)V	<init>	<init>
		p	1		mob
		p	2		mobSpeed
		p	4		minIntervalTicks
		p	5		maxIntervalTicks
		p	6		maxShootRange
	m	()Z	J_	requiresUpdateEveryTick
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	d	stop
	m	()V	e	tick
	f	Lbfz;	a	mob
	f	Lbwe;	b	rangedAttackMob
	f	Lbfx;	c	target
	f	I	d	attackTime
	f	D	e	speedModifier
	f	I	f	seeTime
	f	I	g	attackIntervalMin
	f	I	h	attackIntervalMax
	f	F	i	attackRadius
	f	F	j	attackRadiusSqr
c	bnt	net/minecraft/world/entity/ai/goal/RangedBowAttackGoal
	m	(Lbwa;DIF)V	<init>	<init>
		p	1		actor
		p	2		speed
		p	4		attackInterval
		p	5		range
	m	()Z	J_	requiresUpdateEveryTick
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	(I)V	c	setMinAttackInterval
		p	1		attackInterval
	m	()V	d	stop
	m	()V	e	tick
	m	()Z	h	isHoldingBow
	f	Lbwa;	a	mob
	f	D	b	speedModifier
	f	I	c	attackIntervalMin
	f	F	d	attackRadiusSqr
	f	I	e	attackTime
	f	I	f	seeTime
	f	Z	g	strafingClockwise
	f	Z	h	strafingBackwards
	f	I	i	strafingTime
c	bnu	net/minecraft/world/entity/ai/goal/RangedCrossbowAttackGoal
	m	(Lbwa;DF)V	<init>	<init>
		p	1		actor
		p	2		speed
		p	4		range
	m	()Z	J_	requiresUpdateEveryTick
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	d	stop
	m	()V	e	tick
	m	()Z	h	isHoldingCrossbow
	m	()Z	i	isValidTarget
	m	()Z	k	canRun
	f	Lbdj;	a	PATHFINDING_DELAY_RANGE
	f	Lbwa;	b	mob
	f	Lbnu$a;	c	crossbowState
	f	D	d	speedModifier
	f	F	e	attackRadiusSqr
	f	I	f	seeTime
	f	I	g	attackDelay
	f	I	h	updatePathDelay
c	bnu$a	net/minecraft/world/entity/ai/goal/RangedCrossbowAttackGoal$CrossbowState
	m	()[Lbnu$a;	a	$values
	f	Lbnu$a;	a	UNCHARGED
	f	Lbnu$a;	b	CHARGING
	f	Lbnu$a;	c	CHARGED
	f	Lbnu$a;	d	READY_TO_ATTACK
	f	[Lbnu$a;	e	$VALUES
c	bnv	net/minecraft/world/entity/ai/goal/RemoveBlockGoal
	m	(Lcpi;Lbgg;DI)V	<init>	<init>
		p	1		targetBlock
		p	2		mob
		p	3		speed
		p	5		maxYDifference
	m	()Z	a	canUse
	m	(Lcmi;Lgt;)V	a	playBreakSound
		p	1		world
		p	2		pos
	m	(Lcmj;Lgt;)V	a	playDestroyProgressSound
		p	1		world
		p	2		pos
	m	(Lcml;Lgt;)Z	a	isValidTarget
		p	1		world
		p	2		pos
	m	(Lgt;Lclo;)Lgt;	a	getPosWithBlock
		p	1		pos
		p	2		world
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lcpi;	g	blockToRemove
	f	Lbfz;	h	removerMob
	f	I	i	ticksSinceReachedGoal
	f	I	j	WAIT_AFTER_BLOCK_FOUND
c	bnw	net/minecraft/world/entity/ai/goal/RestrictSunGoal
	m	(Lbgg;)V	<init>	<init>
		p	1		mob
	m	()Z	a	canUse
	m	()V	c	start
	m	()V	d	stop
	f	Lbgg;	a	mob
c	bnx	net/minecraft/world/entity/ai/goal/RunAroundLikeCrazyGoal
	m	(Lbti;D)V	<init>	<init>
		p	1		horse
		p	2		speed
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	e	tick
	f	Lbti;	a	horse
	f	D	b	speedModifier
	f	D	c	posX
	f	D	d	posY
	f	D	e	posZ
c	bny	net/minecraft/world/entity/ai/goal/SitWhenOrderedToGoal
	m	(Lbgt;)V	<init>	<init>
		p	1		tameable
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	f	Lbgt;	a	mob
c	bnz	net/minecraft/world/entity/ai/goal/StrollThroughVillageGoal
	m	(Lbgg;I)V	<init>	<init>
		p	1		mob
		p	2		searchRange
	m	()Z	a	canUse
	m	(Laip;Lgt;)D	a	lambda$canUse$0
	m	()Z	b	canContinueToUse
	m	()V	e	tick
	m	()V	h	moveRandomly
	f	I	a	DISTANCE_THRESHOLD
	f	Lbgg;	b	mob
	f	I	c	interval
	f	Lgt;	d	wantedPos
c	boa	net/minecraft/world/entity/ai/goal/SwellGoal
	m	(Lbvm;)V	<init>	<init>
		p	1		creeper
	m	()Z	J_	requiresUpdateEveryTick
	m	()Z	a	canUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lbvm;	a	creeper
	f	Lbfx;	b	target
c	bob	net/minecraft/world/entity/ai/goal/TemptGoal
	m	(Lbgg;DLciu;Z)V	<init>	<init>
		p	1		entity
		p	2		speed
		p	4		food
		p	5		canBeScared
	m	()Z	a	canUse
	m	(Lbfx;)Z	a	shouldFollow
		p	1		entity
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	m	()Z	h	canScare
	m	()Z	i	isRunning
	f	Lbgg;	a	mob
	f	Lbym;	b	player
	f	Lbqk;	c	TEMP_TARGETING
	f	Lbqk;	d	targetingConditions
	f	D	e	speedModifier
	f	D	f	px
	f	D	g	py
	f	D	h	pz
	f	D	i	pRotX
	f	D	j	pRotY
	f	I	k	calmDown
	f	Z	l	isRunning
	f	Lciu;	m	items
	f	Z	n	canScare
c	boc	net/minecraft/world/entity/ai/goal/TradeWithPlayerGoal
	m	(Lbxu;)V	<init>	<init>
		p	1		merchant
	m	()Z	a	canUse
	m	()V	c	start
	m	()V	d	stop
	f	Lbxu;	a	mob
c	bod	net/minecraft/world/entity/ai/goal/TryFindWaterGoal
	m	(Lbgg;)V	<init>	<init>
		p	1		mob
	m	()Z	a	canUse
	m	()V	c	start
	f	Lbgg;	a	mob
c	boe	net/minecraft/world/entity/ai/goal/UseItemGoal
	m	(Lbfz;Lcfv;Lamq;Ljava/util/function/Predicate;)V	<init>	<init>
		p	1		actor
		p	2		item
		p	3		sound
		p	4		condition
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	f	Lbfz;	a	mob
	f	Lcfv;	b	item
	f	Ljava/util/function/Predicate;	c	canUseSelector
	f	Lamq;	d	finishUsingSound
c	bof	net/minecraft/world/entity/ai/goal/WaterAvoidingRandomFlyingGoal
	m	(Lbgg;D)V	<init>	<init>
		p	1		mob
		p	2		speed
	m	()Lede;	h	getPosition
c	bog	net/minecraft/world/entity/ai/goal/WaterAvoidingRandomStrollGoal
	m	(Lbgg;D)V	<init>	<init>
		p	1		mob
		p	2		speed
	m	(Lbgg;DF)V	<init>	<init>
		p	1		mob
		p	2		speed
		p	4		probability
	m	()Lede;	h	getPosition
	f	F	i	PROBABILITY
	f	F	j	probability
c	boh	net/minecraft/world/entity/ai/goal/WrappedGoal
	m	(ILbmt;)V	<init>	<init>
		p	1		priority
		p	2		goal
	m	()Z	I_	isInterruptable
	m	()Z	J_	requiresUpdateEveryTick
	m	()Z	a	canUse
	m	(I)I	a	adjustedTickDelay
		p	1		ticks
	m	(Lboh;)Z	a	canBeReplacedBy
		p	1		goal
	m	(Ljava/util/EnumSet;)V	a	setFlags
		p	1		controls
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	m	()Z	h	isRunning
	m	()I	i	getPriority
	m	()Ljava/util/EnumSet;	j	getFlags
	m	()Lbmt;	k	getGoal
	f	Lbmt;	a	goal
	f	I	b	priority
	f	Z	c	isRunning
c	boi	net/minecraft/world/entity/ai/goal/ZombieAttackGoal
	m	(Lbwt;DZ)V	<init>	<init>
		p	1		zombie
		p	2		speed
		p	4		pauseWhenMobIdle
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lbwt;	b	zombie
	f	I	c	raiseArmTicks
c	boj	net/minecraft/world/entity/ai/goal/package-info
c	bok	net/minecraft/world/entity/ai/goal/target/DefendVillageTargetGoal
	m	(Lbrv;)V	<init>	<init>
		p	1		golem
	m	()Z	a	canUse
	m	()V	c	start
	f	Lbrv;	a	golem
	f	Lbfx;	b	potentialTarget
	f	Lbqk;	c	attackTargeting
c	bol	net/minecraft/world/entity/ai/goal/target/HurtByTargetGoal
	m	(Lbgg;[Ljava/lang/Class;)V	<init>	<init>
		p	1		mob
		p	2		noRevengeTypes
	m	()Z	a	canUse
	m	(Lbfz;Lbfx;)V	a	alertOther
		p	1		mob
		p	2		target
	m	([Ljava/lang/Class;)Lbol;	a	setAlertOthers
		p	1		noHelpTypes
	m	()V	c	start
	m	()V	h	alertOthers
	f	Lbqk;	a	HURT_BY_TARGETING
	f	I	b	ALERT_RANGE_Y
	f	Z	c	alertSameType
	f	I	d	timestamp
	f	[Ljava/lang/Class;	i	toIgnoreDamage
	f	[Ljava/lang/Class;	j	toIgnoreAlert
c	bom	net/minecraft/world/entity/ai/goal/target/NearestAttackableTargetGoal
	m	(Lbfz;Ljava/lang/Class;IZZLjava/util/function/Predicate;)V	<init>	<init>
		p	1		mob
		p	2		targetClass
		p	3		reciprocalChance
		p	4		checkVisibility
		p	5		checkCanNavigate
		p	6		targetPredicate
	m	(Lbfz;Ljava/lang/Class;Z)V	<init>	<init>
		p	1		mob
		p	2		targetClass
		p	3		checkVisibility
	m	(Lbfz;Ljava/lang/Class;ZLjava/util/function/Predicate;)V	<init>	<init>
		p	1		mob
		p	2		targetClass
		p	3		checkVisibility
		p	4		targetPredicate
	m	(Lbfz;Ljava/lang/Class;ZZ)V	<init>	<init>
		p	1		mob
		p	2		targetClass
		p	3		checkVisibility
		p	4		checkCanNavigate
	m	()Z	a	canUse
	m	(D)Lecz;	a	getTargetSearchArea
		p	1		distance
	m	(Lbfx;)V	a	setTarget
		p	1		targetEntity
	m	(Lbfx;)Z	b	lambda$findTarget$0
	m	()V	c	start
	m	()V	h	findTarget
	f	Ljava/lang/Class;	a	targetType
	f	I	b	randomInterval
	f	Lbfx;	c	target
	f	Lbqk;	d	targetConditions
	f	I	i	DEFAULT_RANDOM_INTERVAL
c	bon	net/minecraft/world/entity/ai/goal/target/NearestAttackableWitchTargetGoal
	m	(Lbzu;Ljava/lang/Class;IZZLjava/util/function/Predicate;)V	<init>	<init>
		p	1		actor
		p	2		targetEntityClass
		p	3		reciprocalChance
		p	4		checkVisibility
		p	5		checkCanNavigate
		p	6		targetPredicate
	m	()Z	a	canUse
	m	(Z)V	a	setCanAttack
		p	1		enabled
	f	Z	i	canAttack
c	boo	net/minecraft/world/entity/ai/goal/target/NearestHealableRaiderTargetGoal
	m	(Lbzu;Ljava/lang/Class;ZLjava/util/function/Predicate;)V	<init>	<init>
		p	1		raider
		p	2		targetEntityClass
		p	3		checkVisibility
		p	4		targetPredicate
	m	()Z	a	canUse
	m	()V	c	start
	m	()I	i	getCooldown
	m	()V	k	decrementCooldown
	f	I	i	DEFAULT_COOLDOWN
	f	I	j	cooldown
c	bop	net/minecraft/world/entity/ai/goal/target/NonTameRandomTargetGoal
	m	(Lbgt;Ljava/lang/Class;ZLjava/util/function/Predicate;)V	<init>	<init>
		p	1		tameable
		p	2		targetClass
		p	3		checkVisibility
		p	4		targetPredicate
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	f	Lbgt;	i	tamableMob
c	boq	net/minecraft/world/entity/ai/goal/target/OwnerHurtByTargetGoal
	m	(Lbgt;)V	<init>	<init>
		p	1		tameable
	m	()Z	a	canUse
	m	()V	c	start
	f	Lbgt;	a	tameAnimal
	f	Lbfx;	b	ownerLastHurtBy
	f	I	c	timestamp
c	bor	net/minecraft/world/entity/ai/goal/target/OwnerHurtTargetGoal
	m	(Lbgt;)V	<init>	<init>
		p	1		tameable
	m	()Z	a	canUse
	m	()V	c	start
	f	Lbgt;	a	tameAnimal
	f	Lbfx;	b	ownerLastHurt
	f	I	c	timestamp
c	bos	net/minecraft/world/entity/ai/goal/target/ResetUniversalAngerTargetGoal
	m	(Lbfz;Z)V	<init>	<init>
		p	1		mob
		p	2		triggerOthers
	m	()Z	a	canUse
	m	(Lbfz;)Lbge;	a	lambda$start$1
		p	0		entity
	m	(Lbfz;)Z	b	lambda$start$0
		p	1		entity
	m	()V	c	start
	m	()Z	h	wasHurtByPlayer
	m	()Ljava/util/List;	i	getNearbyMobsOfSameType
	f	I	a	ALERT_RANGE_Y
	f	Lbfz;	b	mob
	f	Z	c	alertOthersOfSameType
	f	I	d	lastHurtByPlayerTimestamp
c	bot	net/minecraft/world/entity/ai/goal/target/TargetGoal
	m	(Lbfz;Z)V	<init>	<init>
		p	1		mob
		p	2		checkVisibility
	m	(Lbfz;ZZ)V	<init>	<init>
		p	1		mob
		p	2		checkVisibility
		p	3		checkNavigable
	m	(Lbfx;)Z	a	canReach
		p	1		entity
	m	(Lbfx;Lbqk;)Z	a	canAttack
		p	1		target
		p	2		targetPredicate
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	(I)Lbot;	c	setUnseenMemoryTicks
		p	1		time
	m	()V	d	stop
	m	()D	l	getFollowDistance
	f	I	a	EMPTY_REACH_CACHE
	f	I	b	CAN_REACH_CACHE
	f	I	c	CANT_REACH_CACHE
	f	Z	d	mustReach
	f	Lbfz;	e	mob
	f	Z	f	mustSee
	f	Lbfx;	g	targetMob
	f	I	h	unseenMemoryTicks
	f	I	i	reachCache
	f	I	j	reachCacheTime
	f	I	k	unseenTicks
c	bou	net/minecraft/world/entity/ai/goal/target/package-info
c	bov	net/minecraft/world/entity/ai/gossip/GossipContainer
	m	()Ljava/util/Map;	a	getGossipEntries
	m	(II)I	a	mergeValuesForTransfer
		p	0		left
		p	1		right
	m	(Lapo;I)Ljava/util/Collection;	a	selectGossipsForTransfer
		p	1		random
		p	2		count
	m	(Lbov$b;)V	a	lambda$update$9
		p	1		entry
	m	(Lbov;Lapo;I)V	a	transferFrom
		p	1		from
		p	2		random
		p	3		count
	m	(Lbow;)V	a	remove
		p	1		type
	m	(Lbow;II)I	a	mergeValuesForAddition
		p	1		type
		p	2		left
		p	3		right
	m	(Lbow;Ljava/util/function/DoublePredicate;)J	a	getCountForType
		p	1		type
		p	2		predicate
	m	(Lcom/mojang/datafixers/util/Pair;)Ljava/util/stream/Stream;	a	lambda$update$8
	m	(Lcom/mojang/serialization/Dynamic;)V	a	update
		p	1		dynamic
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/lang/Object;	a	store
		p	1		ops
	m	(Ljava/lang/String;)V	a	lambda$update$7
		p	0		error
	m	(Ljava/util/Map$Entry;)Ljava/util/stream/Stream;	a	lambda$unpack$1
		p	0		entry
	m	(Ljava/util/Map;Ljava/util/UUID;)V	a	lambda$getGossipEntries$0
		p	2		uuid
	m	(Ljava/util/UUID;)Lbov$a;	a	getOrCreate
		p	1		target
	m	(Ljava/util/UUID;Lbow;)V	a	remove
		p	1		target
		p	2		type
	m	(Ljava/util/UUID;Lbow;I)V	a	add
		p	1		target
		p	2		type
		p	3		value
	m	(Ljava/util/UUID;Ljava/util/function/Predicate;)I	a	getReputation
		p	1		target
		p	2		gossipTypeFilter
	m	(Ljava/util/function/DoublePredicate;Lbow;Lbov$a;)Z	a	lambda$getCountForType$4
		p	2		reputation
	m	()V	b	decay
	m	(Lbov$b;)V	b	lambda$transferFrom$3
		p	1		gossip
	m	(Lbow;II)I	b	lambda$add$5
		p	2		left
		p	3		right
	m	(Ljava/lang/String;)V	b	lambda$store$6
		p	0		error
	m	(Ljava/util/UUID;)Lbov$a;	b	lambda$getOrCreate$2
		p	0		uuid
	m	(Ljava/util/UUID;Lbow;I)V	b	remove
		p	1		target
		p	2		type
		p	3		value
	m	()Ljava/util/stream/Stream;	c	unpack
	f	I	a	DISCARD_THRESHOLD
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ljava/util/Map;	c	gossips
c	bov$a	net/minecraft/world/entity/ai/gossip/GossipContainer$EntityGossips
	m	()V	a	decay
	m	(Lbow;)V	a	makeSureValueIsntTooLowOrTooHigh
		p	1		gossipType
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntMap$Entry;)I	a	lambda$weightedValue$1
		p	0		entry
	m	(Ljava/util/UUID;)Ljava/util/stream/Stream;	a	unpack
		p	1		target
	m	(Ljava/util/UUID;Lit/unimi/dsi/fastutil/objects/Object2IntMap$Entry;)Lbov$b;	a	lambda$unpack$2
		p	1		entry
	m	(Ljava/util/function/Predicate;)I	a	weightedValue
		p	1		gossipTypeFilter
	m	(Ljava/util/function/Predicate;Lit/unimi/dsi/fastutil/objects/Object2IntMap$Entry;)Z	a	lambda$weightedValue$0
		p	1		entry
	m	()Z	b	isEmpty
	m	(Lbow;)V	b	remove
		p	1		gossipType
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	a	entries
c	bov$b	net/minecraft/world/entity/ai/gossip/GossipContainer$GossipEntry
	m	(Ljava/util/UUID;Lbow;I)V	<init>	<init>
		p	1		target
		p	2		type
		p	3		value
	m	()I	a	weightedValue
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Ljava/util/UUID;	b	target
	m	()Lbow;	c	type
	m	()I	d	value
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcom/mojang/serialization/Codec;	b	LIST_CODEC
	f	Ljava/util/UUID;	c	target
	f	Lbow;	d	type
	f	I	e	value
c	bow	net/minecraft/world/entity/ai/gossip/GossipType
	m	(Ljava/lang/String;ILjava/lang/String;IIII)V	<init>	<init>
		p	3		key
		p	4		multiplier
		p	5		maxReputation
		p	6		decay
		p	7		shareDecrement
	m	()[Lbow;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lbow;	a	MAJOR_NEGATIVE
	f	Lbow;	b	MINOR_NEGATIVE
	f	Lbow;	c	MINOR_POSITIVE
	f	Lbow;	d	MAJOR_POSITIVE
	f	Lbow;	e	TRADING
	f	I	f	REPUTATION_CHANGE_PER_EVENT
	f	I	g	REPUTATION_CHANGE_PER_EVERLASTING_MEMORY
	f	I	h	REPUTATION_CHANGE_PER_TRADE
	f	Ljava/lang/String;	i	id
	f	I	j	weight
	f	I	k	max
	f	I	l	decayPerDay
	f	I	m	decayPerTransfer
	f	Lcom/mojang/serialization/Codec;	n	CODEC
	f	[Lbow;	o	$VALUES
c	box	net/minecraft/world/entity/ai/gossip/package-info
c	boy	net/minecraft/world/entity/ai/memory/ExpirableValue
	m	(Ljava/lang/Object;J)V	<init>	<init>
		p	1		value
		p	2		expiry
	m	()V	a	tick
	m	(Lboy;)Ljava/util/Optional;	a	lambda$codec$1
		p	0		memory
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	codec
		p	0		codec
	m	(Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$codec$3
		p	1		instance
	m	(Ljava/lang/Object;)Lboy;	a	of
		p	0		value
	m	(Ljava/lang/Object;J)Lboy;	a	of
		p	0		value
		p	1		expiry
	m	(Ljava/lang/Object;Ljava/util/Optional;)Lboy;	a	lambda$codec$2
		p	0		value
		p	1		expiry
	m	()J	b	getTimeToLive
	m	(Lboy;)Ljava/lang/Object;	b	lambda$codec$0
		p	0		memory
	m	()Ljava/lang/Object;	c	getValue
	m	()Z	d	hasExpired
	m	()Z	e	canExpire
	f	Ljava/lang/Object;	a	value
	f	J	b	timeToLive
c	boz	net/minecraft/world/entity/ai/memory/MemoryModuleType
	m	(Ljava/util/Optional;)V	<init>	<init>
		p	1		codec
	m	()Ljava/util/Optional;	a	getCodec
	m	(Ljava/lang/String;)Lboz;	a	register
		p	0		id
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lboz;	a	register
		p	0		id
		p	1		codec
	f	Lboz;	A	NEAREST_HOSTILE
	f	Lboz;	B	NEAREST_ATTACKABLE
	f	Lboz;	C	HIDING_PLACE
	f	Lboz;	D	HEARD_BELL_TIME
	f	Lboz;	E	CANT_REACH_WALK_TARGET_SINCE
	f	Lboz;	F	GOLEM_DETECTED_RECENTLY
	f	Lboz;	G	LAST_SLEPT
	f	Lboz;	H	LAST_WOKEN
	f	Lboz;	I	LAST_WORKED_AT_POI
	f	Lboz;	J	NEAREST_VISIBLE_ADULT
	f	Lboz;	K	NEAREST_VISIBLE_WANTED_ITEM
	f	Lboz;	L	NEAREST_VISIBLE_NEMESIS
	f	Lboz;	M	PLAY_DEAD_TICKS
	f	Lboz;	N	TEMPTING_PLAYER
	f	Lboz;	O	TEMPTATION_COOLDOWN_TICKS
	f	Lboz;	P	GAZE_COOLDOWN_TICKS
	f	Lboz;	Q	IS_TEMPTED
	f	Lboz;	R	LONG_JUMP_COOLDOWN_TICKS
	f	Lboz;	S	LONG_JUMP_MID_JUMP
	f	Lboz;	T	HAS_HUNTING_COOLDOWN
	f	Lboz;	U	RAM_COOLDOWN_TICKS
	f	Lboz;	V	RAM_TARGET
	f	Lboz;	W	IS_IN_WATER
	f	Lboz;	X	IS_PREGNANT
	f	Lboz;	Y	IS_PANICKING
	f	Lboz;	Z	UNREACHABLE_TONGUE_TARGETS
	f	Lboz;	aA	IS_SNIFFING
	f	Lboz;	aB	IS_EMERGING
	f	Lboz;	aC	ROAR_SOUND_DELAY
	f	Lboz;	aD	DIG_COOLDOWN
	f	Lboz;	aE	ROAR_SOUND_COOLDOWN
	f	Lboz;	aF	SNIFF_COOLDOWN
	f	Lboz;	aG	TOUCH_COOLDOWN
	f	Lboz;	aH	VIBRATION_COOLDOWN
	f	Lboz;	aI	SONIC_BOOM_COOLDOWN
	f	Lboz;	aJ	SONIC_BOOM_SOUND_COOLDOWN
	f	Lboz;	aK	SONIC_BOOM_SOUND_DELAY
	f	Lboz;	aL	LIKED_PLAYER
	f	Lboz;	a	DUMMY
	f	Lboz;	aM	LIKED_NOTEBLOCK_POSITION
	f	Lboz;	aN	LIKED_NOTEBLOCK_COOLDOWN_TICKS
	f	Lboz;	aO	ITEM_PICKUP_COOLDOWN_TICKS
	f	Lboz;	aP	SNIFFER_EXPLORED_POSITIONS
	f	Lboz;	aQ	SNIFFER_SNIFFING_TARGET
	f	Lboz;	aR	SNIFFER_DIGGING
	f	Lboz;	aS	SNIFFER_HAPPY
	f	Ljava/util/Optional;	aT	codec
	f	Lboz;	aa	ANGRY_AT
	f	Lboz;	ab	UNIVERSAL_ANGER
	f	Lboz;	ac	ADMIRING_ITEM
	f	Lboz;	ad	TIME_TRYING_TO_REACH_ADMIRE_ITEM
	f	Lboz;	ae	DISABLE_WALK_TO_ADMIRE_ITEM
	f	Lboz;	af	ADMIRING_DISABLED
	f	Lboz;	ag	HUNTED_RECENTLY
	f	Lboz;	ah	CELEBRATE_LOCATION
	f	Lboz;	ai	DANCING
	f	Lboz;	aj	NEAREST_VISIBLE_HUNTABLE_HOGLIN
	f	Lboz;	ak	NEAREST_VISIBLE_BABY_HOGLIN
	f	Lboz;	al	NEAREST_TARGETABLE_PLAYER_NOT_WEARING_GOLD
	f	Lboz;	am	NEARBY_ADULT_PIGLINS
	f	Lboz;	an	NEAREST_VISIBLE_ADULT_PIGLINS
	f	Lboz;	ao	NEAREST_VISIBLE_ADULT_HOGLINS
	f	Lboz;	ap	NEAREST_VISIBLE_ADULT_PIGLIN
	f	Lboz;	aq	NEAREST_VISIBLE_ZOMBIFIED
	f	Lboz;	ar	VISIBLE_ADULT_PIGLIN_COUNT
	f	Lboz;	as	VISIBLE_ADULT_HOGLIN_COUNT
	f	Lboz;	at	NEAREST_PLAYER_HOLDING_WANTED_ITEM
	f	Lboz;	au	ATE_RECENTLY
	f	Lboz;	av	NEAREST_REPELLENT
	f	Lboz;	aw	PACIFIED
	f	Lboz;	ax	ROAR_TARGET
	f	Lboz;	ay	DISTURBANCE_LOCATION
	f	Lboz;	az	RECENT_PROJECTILE
	f	Lboz;	b	HOME
	f	Lboz;	c	JOB_SITE
	f	Lboz;	d	POTENTIAL_JOB_SITE
	f	Lboz;	e	MEETING_POINT
	f	Lboz;	f	SECONDARY_JOB_SITE
	f	Lboz;	g	NEAREST_LIVING_ENTITIES
	f	Lboz;	h	NEAREST_VISIBLE_LIVING_ENTITIES
	f	Lboz;	i	VISIBLE_VILLAGER_BABIES
	f	Lboz;	j	NEAREST_PLAYERS
	f	Lboz;	k	NEAREST_VISIBLE_PLAYER
	f	Lboz;	l	NEAREST_VISIBLE_ATTACKABLE_PLAYER
	f	Lboz;	m	WALK_TARGET
	f	Lboz;	n	LOOK_TARGET
	f	Lboz;	o	ATTACK_TARGET
	f	Lboz;	p	ATTACK_COOLING_DOWN
	f	Lboz;	q	INTERACTION_TARGET
	f	Lboz;	r	BREED_TARGET
	f	Lboz;	s	RIDE_TARGET
	f	Lboz;	t	PATH
	f	Lboz;	u	INTERACTABLE_DOORS
	f	Lboz;	v	DOORS_TO_CLOSE
	f	Lboz;	w	NEAREST_BED
	f	Lboz;	x	HURT_BY
	f	Lboz;	y	HURT_BY_ENTITY
	f	Lboz;	z	AVOID_TARGET
c	bpa	net/minecraft/world/entity/ai/memory/MemoryStatus
	m	()[Lbpa;	a	$values
	f	Lbpa;	a	VALUE_PRESENT
	f	Lbpa;	b	VALUE_ABSENT
	f	Lbpa;	c	REGISTERED
	f	[Lbpa;	d	$VALUES
c	bpb	net/minecraft/world/entity/ai/memory/NearestVisibleLivingEntities
	m	(Lbfx;Ljava/util/List;)V	<init>	<init>
		p	1		owner
		p	2		entities
	m	()Lbpb;	a	empty
	m	(Lbfx;)Z	a	contains
		p	1		entity
	m	(Lbfx;Lbfx;)Z	a	lambda$new$1
		p	1		entity
	m	(Lit/unimi/dsi/fastutil/objects/Object2BooleanOpenHashMap;Ljava/util/function/Predicate;Lbfx;)Z	a	lambda$new$2
		p	2		entity
	m	(Ljava/util/function/Predicate;)Ljava/util/Optional;	a	findClosest
		p	1		predicate
	m	(Ljava/util/function/Predicate;Lbfx;)Z	a	lambda$find$4
		p	2		entity
	m	(Lbfx;)Z	b	lambda$new$0
		p	0		entity
	m	(Ljava/util/function/Predicate;)Ljava/lang/Iterable;	b	findAll
		p	1		predicate
	m	(Ljava/util/function/Predicate;Lbfx;)Z	b	lambda$findAll$3
		p	2		entity
	m	(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;	c	find
		p	1		predicate
	m	(Ljava/util/function/Predicate;)Z	d	contains
		p	1		predicate
	f	Lbpb;	a	EMPTY
	f	Ljava/util/List;	b	nearbyEntities
	f	Ljava/util/function/Predicate;	c	lineOfSightTest
c	bpc	net/minecraft/world/entity/ai/memory/WalkTarget
	m	(Lbfh;FI)V	<init>	<init>
		p	1		entity
		p	2		speed
		p	3		completionRange
	m	(Lbjc;FI)V	<init>	<init>
		p	1		lookTarget
		p	2		speed
		p	3		completionRange
	m	(Lede;FI)V	<init>	<init>
		p	1		pos
		p	2		speed
		p	3		completionRange
	m	(Lgt;FI)V	<init>	<init>
		p	1		pos
		p	2		speed
		p	3		completionRange
	m	()Lbjc;	a	getTarget
	m	()F	b	getSpeedModifier
	m	()I	c	getCloseEnoughDist
	f	Lbjc;	a	target
	f	F	b	speedModifier
	f	I	c	closeEnoughDist
c	bpd	net/minecraft/world/entity/ai/memory/package-info
c	bpe	net/minecraft/world/entity/ai/navigation/AmphibiousPathNavigation
	m	(Lbfz;Lcmi;)V	<init>	<init>
		p	2		world
	m	()Z	a	canUpdatePath
	m	(I)Ldxb;	a	createPathFinder
		p	1		range
	m	(Lede;)D	a	getGroundY
		p	1		pos
	m	(Lede;Lede;)Z	a	canMoveDirectly
		p	1		origin
		p	2		target
	m	(Lgt;)Z	a	isStableDestination
		p	1		pos
	m	(Z)V	a	setCanFloat
		p	1		canSwim
	m	()Lede;	b	getTempMobPos
c	bpf	net/minecraft/world/entity/ai/navigation/FlyingPathNavigation
	m	(Lbfz;Lcmi;)V	<init>	<init>
		p	1		entity
		p	2		world
	m	()Z	a	canUpdatePath
	m	(I)Ldxb;	a	createPathFinder
		p	1		range
	m	(Lbfh;I)Ldwz;	a	createPath
		p	1		entity
		p	2		distance
	m	(Lede;Lede;)Z	a	canMoveDirectly
		p	1		origin
		p	2		target
	m	(Lgt;)Z	a	isStableDestination
		p	1		pos
	m	()Lede;	b	getTempMobPos
	m	(Z)V	b	setCanOpenDoors
		p	1		canPathThroughDoors
	m	()V	c	tick
	m	(Z)V	c	setCanPassDoors
		p	1		canEnterOpenDoors
	m	()Z	d	canPassDoors
	m	()Z	e	canOpenDoors
c	bpg	net/minecraft/world/entity/ai/navigation/GroundPathNavigation
	m	(Lbfz;Lcmi;)V	<init>	<init>
		p	1		entity
		p	2		world
	m	()V	K_	trimPath
	m	()Z	a	canUpdatePath
	m	(I)Ldxb;	a	createPathFinder
		p	1		range
	m	(Lbfh;I)Ldwz;	a	createPath
		p	1		entity
		p	2		distance
	m	(Ldwv;)Z	a	hasValidPathType
		p	1		pathType
	m	(Lgt;I)Ldwz;	a	createPath
		p	1		target
		p	2		distance
	m	()Lede;	b	getTempMobPos
	m	(Z)V	b	setCanOpenDoors
		p	1		canPathThroughDoors
	m	(Z)V	c	setCanPassDoors
		p	1		canEnterOpenDoors
	m	(Z)V	d	setAvoidSun
		p	1		avoidSunlight
	m	()Z	e	canPassDoors
	m	(Z)V	e	setCanWalkOverFences
		p	1		canWalkOverFences
	m	()Z	f	canOpenDoors
	m	()I	t	getSurfaceY
	f	Z	p	avoidSun
c	bph	net/minecraft/world/entity/ai/navigation/PathNavigation
	m	(Lbfz;Lcmi;)V	<init>	<init>
		p	1		entity
		p	2		world
	m	()V	K_	trimPath
	m	()Z	a	canUpdatePath
	m	(D)V	a	setSpeedModifier
		p	1		speed
	m	(DDDD)Z	a	moveTo
		p	1		x
		p	3		y
		p	5		z
		p	7		speed
	m	(DDDI)Ldwz;	a	createPath
		p	1		x
		p	3		y
		p	5		z
		p	7		distance
	m	(F)V	a	setMaxVisitedNodesMultiplier
		p	1		rangeMultiplier
	m	(I)Ldxb;	a	createPathFinder
		p	1		range
	m	(Lbfh;D)Z	a	moveTo
		p	1		entity
		p	2		speed
	m	(Lbfh;I)Ldwz;	a	createPath
		p	1		entity
		p	2		distance
	m	(Lbfz;Lede;Lede;Z)Z	a	isClearForMovementBetween
		p	0		entity
		p	1		startPos
		p	2		entityPos
		p	3		includeFluids
	m	(Ldwz;D)Z	a	moveTo
		p	1		path
		p	2		speed
	m	(Lede;)D	a	getGroundY
		p	1		pos
	m	(Lede;Lede;)Z	a	canMoveDirectly
		p	1		origin
		p	2		target
	m	(Lgt;)Z	a	isStableDestination
		p	1		pos
	m	(Lgt;I)Ldwz;	a	createPath
		p	1		target
		p	2		distance
	m	(Lgt;II)Ldwz;	a	createPath
		p	1		target
		p	2		minDistance
		p	3		maxDistance
	m	(Ljava/util/Set;I)Ldwz;	a	createPath
		p	1		positions
		p	2		distance
	m	(Ljava/util/Set;IZI)Ldwz;	a	createPath
		p	1		positions
		p	2		range
		p	3		useHeadPos
		p	4		distance
	m	(Ljava/util/Set;IZIF)Ldwz;	a	createPath
		p	1		positions
		p	2		range
		p	3		useHeadPos
		p	4		distance
		p	5		followRange
	m	(Ljava/util/stream/Stream;I)Ldwz;	a	createPath
		p	1		positions
		p	2		distance
	m	(Z)V	a	setCanFloat
		p	1		canSwim
	m	()Lede;	b	getTempMobPos
	m	(Ldwv;)Z	b	canCutCorner
		p	1		nodeType
	m	(Lede;)V	b	doStuckDetection
		p	1		currentPos
	m	(Lgt;)Z	b	shouldRecomputePath
		p	1		pos
	m	()V	c	tick
	m	(Lede;)Z	c	shouldTargetNextNodeInDirection
		p	1		currentPos
	m	()V	e	timeoutPath
	m	()V	f	resetStuckTimeout
	m	()V	g	resetMaxVisitedNodesMultiplier
	m	()Lgt;	h	getTargetPos
	m	()V	i	recomputePath
	m	()Ldwz;	j	getPath
	m	()V	k	followThePath
	m	()Z	l	isDone
	m	()Z	m	isInProgress
	m	()V	n	stop
	m	()Z	o	isInLiquid
	m	()Ldwy;	p	getNodeEvaluator
	m	()Z	q	canFloat
	m	()F	r	getMaxDistanceToWaypoint
	m	()Z	s	isStuck
	f	Lbfz;	a	mob
	f	Lcmi;	b	level
	f	Ldwz;	c	path
	f	D	d	speedModifier
	f	I	e	tick
	f	I	f	lastStuckCheck
	f	Lede;	g	lastStuckCheckPos
	f	Lhy;	h	timeoutCachedNode
	f	J	i	timeoutTimer
	f	J	j	lastTimeoutCheck
	f	D	k	timeoutLimit
	f	F	l	maxDistanceToWaypoint
	f	Z	m	hasDelayedRecomputation
	f	J	n	timeLastRecompute
	f	Ldwy;	o	nodeEvaluator
	f	I	p	MAX_TIME_RECOMPUTE
	f	I	q	STUCK_CHECK_INTERVAL
	f	F	r	STUCK_THRESHOLD_DISTANCE_FACTOR
	f	Lgt;	s	targetPos
	f	I	t	reachRange
	f	F	u	maxVisitedNodesMultiplier
	f	Ldxb;	v	pathFinder
	f	Z	w	isStuck
c	bpi	net/minecraft/world/entity/ai/navigation/WallClimberNavigation
	m	(Lbfz;Lcmi;)V	<init>	<init>
		p	1		entity
		p	2		world
	m	(Lbfh;D)Z	a	moveTo
		p	1		entity
		p	2		speed
	m	(Lbfh;I)Ldwz;	a	createPath
		p	1		entity
		p	2		distance
	m	(Lgt;I)Ldwz;	a	createPath
		p	1		target
		p	2		distance
	m	()V	c	tick
	f	Lgt;	p	pathToPosition
c	bpj	net/minecraft/world/entity/ai/navigation/WaterBoundPathNavigation
	m	(Lbfz;Lcmi;)V	<init>	<init>
		p	1		entity
		p	2		world
	m	()Z	a	canUpdatePath
	m	(I)Ldxb;	a	createPathFinder
		p	1		range
	m	(Lede;)D	a	getGroundY
		p	1		pos
	m	(Lede;Lede;)Z	a	canMoveDirectly
		p	1		origin
		p	2		target
	m	(Lgt;)Z	a	isStableDestination
		p	1		pos
	m	(Z)V	a	setCanFloat
		p	1		canSwim
	m	()Lede;	b	getTempMobPos
	f	Z	p	allowBreaching
c	bpk	net/minecraft/world/entity/ai/navigation/package-info
c	bpl	net/minecraft/world/entity/ai/package-info
c	bpm	net/minecraft/world/entity/ai/sensing/AdultSensor
	m	()Ljava/util/Set;	a	requires
	m	(Laip;Lbfc;)V	a	doTick
		p	1		world
		p	2		entity
	m	(Laip;Lbfx;)V	a	doTick
		p	1		world
		p	2		entity
	m	(Lbfc;Lbfx;)Z	a	lambda$setNearestVisibleAdult$1
	m	(Lbfc;Lbpb;)V	a	setNearestVisibleAdult
		p	1		entity
	m	(Lbfc;Lbpb;)V	b	lambda$doTick$0
c	bpn	net/minecraft/world/entity/ai/sensing/AxolotlAttackablesSensor
	m	(Lbfx;Lbfx;)Z	a	isMatchingEntity
		p	1		entity
		p	2		target
	m	()Lboz;	b	getMemory
	m	(Lbfx;)Z	b	isHostileTarget
		p	1		axolotl
	m	(Lbfx;Lbfx;)Z	e	isHuntTarget
		p	1		axolotl
		p	2		target
	m	(Lbfx;Lbfx;)Z	f	isClose
		p	1		axolotl
		p	2		target
	f	F	a	TARGET_DETECTION_DISTANCE
c	bpo	net/minecraft/world/entity/ai/sensing/DummySensor
	m	()Ljava/util/Set;	a	requires
	m	(Laip;Lbfx;)V	a	doTick
		p	1		world
		p	2		entity
c	bpp	net/minecraft/world/entity/ai/sensing/FrogAttackablesSensor
	m	(Lbfx;Lbfx;)Z	a	isMatchingEntity
		p	1		entity
		p	2		target
	m	()Lboz;	b	getMemory
	m	(Lbfx;Lbfx;)Z	e	isUnreachableAttackTarget
		p	1		entity
		p	2		target
	f	F	a	TARGET_DETECTION_DISTANCE
c	bpq	net/minecraft/world/entity/ai/sensing/GolemSensor
	m	(I)V	<init>	<init>
		p	1		senseInterval
	m	()Ljava/util/Set;	a	requires
	m	(Laip;Lbfx;)V	a	doTick
		p	1		world
		p	2		entity
	m	(Lbfx;)V	a	checkForNearbyGolem
		p	0		entity
	m	(Lbfx;)V	b	golemDetected
		p	0		entity
	m	(Lbfx;)Z	c	lambda$checkForNearbyGolem$0
	f	I	a	GOLEM_SCAN_RATE
	f	I	c	MEMORY_TIME_TO_LIVE
c	bpr	net/minecraft/world/entity/ai/sensing/HoglinSpecificSensor
	m	()Ljava/util/Set;	a	requires
	m	(Laip;Lbfx;)V	a	doTick
		p	1		world
		p	2		entity
	m	(Laip;Lbww;)V	a	doTick
		p	1		world
		p	2		entity
	m	(Laip;Lgt;)Z	a	lambda$findNearestRepellent$1
		p	1		pos
	m	(Lbfx;)Z	a	lambda$doTick$0
	m	(Laip;Lbww;)Ljava/util/Optional;	b	findNearestRepellent
		p	1		world
		p	2		hoglin
c	bps	net/minecraft/world/entity/ai/sensing/HurtBySensor
	m	()Ljava/util/Set;	a	requires
	m	(Laip;Lbfx;)V	a	doTick
		p	1		world
		p	2		entity
	m	(Laip;Lbgy;Lbfx;)V	a	lambda$doTick$0
c	bpt	net/minecraft/world/entity/ai/sensing/IsInWaterSensor
	m	()Ljava/util/Set;	a	requires
	m	(Laip;Lbfx;)V	a	doTick
		p	1		world
		p	2		entity
c	bpu	net/minecraft/world/entity/ai/sensing/NearestBedSensor
	m	()Ljava/util/Set;	a	requires
	m	(Laip;Lbfx;)V	a	doTick
		p	1		world
		p	2		entity
	m	(Laip;Lbfz;)V	a	doTick
		p	1		world
		p	2		entity
	m	(Lgt;)Z	a	lambda$doTick$0
		p	1		pos
	m	(Lhd;)Z	a	lambda$doTick$1
	m	(Lit/unimi/dsi/fastutil/longs/Long2LongMap$Entry;)Z	a	lambda$doTick$2
	f	I	a	CACHE_TIMEOUT
	f	I	c	BATCH_SIZE
	f	I	d	RATE
	f	Lit/unimi/dsi/fastutil/longs/Long2LongMap;	e	batchCache
	f	I	f	triedCount
	f	J	g	lastUpdate
c	bpv	net/minecraft/world/entity/ai/sensing/NearestItemSensor
	m	()Ljava/util/Set;	a	requires
	m	(Laip;Lbfx;)V	a	doTick
		p	1		world
		p	2		entity
	m	(Laip;Lbfz;)V	a	doTick
		p	1		world
		p	2		entity
	m	(Lbfz;Lbvf;)Z	a	lambda$doTick$2
		p	1		itemEntity
	m	(Lbvf;)Z	a	lambda$doTick$0
		p	0		itemEntity
	m	(Lbfz;Lbvf;)Z	b	lambda$doTick$1
		p	1		itemEntity
	f	I	a	MAX_DISTANCE_TO_WANTED_ITEM
	f	J	c	XZ_RANGE
	f	J	d	Y_RANGE
c	bpw	net/minecraft/world/entity/ai/sensing/NearestLivingEntitySensor
	m	()Ljava/util/Set;	a	requires
	m	(Laip;Lbfx;)V	a	doTick
		p	1		world
		p	2		entity
	m	(Lbfx;Lbfx;)Z	a	lambda$doTick$0
		p	1		e
	m	()I	b	radiusXZ
	m	()I	c	radiusY
c	bpx	net/minecraft/world/entity/ai/sensing/NearestVisibleLivingEntitySensor
	m	()Ljava/util/Set;	a	requires
	m	(Laip;Lbfx;)V	a	doTick
		p	1		world
		p	2		entity
	m	(Lbfx;)Ljava/util/Optional;	a	getVisibleEntities
		p	1		entity
	m	(Lbfx;Lbfx;)Z	a	isMatchingEntity
		p	1		entity
		p	2		target
	m	(Lbfx;Lbpb;)Ljava/util/Optional;	a	lambda$getNearestEntity$1
	m	()Lboz;	b	getMemory
	m	(Lbfx;)Ljava/util/Optional;	b	getNearestEntity
		p	1		entity
	m	(Lbfx;Lbfx;)Z	e	lambda$getNearestEntity$0
c	bpy	net/minecraft/world/entity/ai/sensing/PiglinBruteSpecificSensor
	m	()Ljava/util/Set;	a	requires
	m	(Laip;Lbfx;)V	a	doTick
		p	1		world
		p	2		entity
	m	(Lbfx;)Z	a	lambda$doTick$0
c	bpz	net/minecraft/world/entity/ai/sensing/PiglinSpecificSensor
	m	()Ljava/util/Set;	a	requires
	m	(Laip;Lbfx;)V	a	doTick
		p	1		world
		p	2		entity
	m	(Laip;Lgt;)Z	a	isValidRepellent
		p	0		world
		p	1		pos
	m	(Lbfx;)Z	a	lambda$doTick$0
	m	(Laip;Lgt;)Z	b	lambda$findNearestRepellent$1
		p	1		pos
	m	(Laip;Lbfx;)Ljava/util/Optional;	c	findNearestRepellent
		p	0		world
		p	1		entity
c	bqa	net/minecraft/world/entity/ai/sensing/PlayerSensor
	m	()Ljava/util/Set;	a	requires
	m	(Laip;Lbfx;)V	a	doTick
		p	1		world
		p	2		entity
	m	(Lbfx;Laiq;)Z	a	lambda$doTick$0
		p	1		player
	m	(Lbfx;Lbym;)Z	a	lambda$doTick$2
		p	1		player
	m	(Lbfx;Lbym;)Z	b	lambda$doTick$1
		p	1		player
c	bqb	net/minecraft/world/entity/ai/sensing/SecondaryPoiSensor
	m	()Ljava/util/Set;	a	requires
	m	(Laip;Lbfx;)V	a	doTick
		p	1		world
		p	2		entity
	m	(Laip;Lbxz;)V	a	doTick
		p	1		world
		p	2		entity
	f	I	a	SCAN_RATE
c	bqc	net/minecraft/world/entity/ai/sensing/Sensing
	m	(Lbfz;)V	<init>	<init>
		p	1		owner
	m	()V	a	tick
	m	(Lbfh;)Z	a	hasLineOfSight
		p	1		entity
	f	Lbfz;	a	mob
	f	Lit/unimi/dsi/fastutil/ints/IntSet;	b	seen
	f	Lit/unimi/dsi/fastutil/ints/IntSet;	c	unseen
c	bqd	net/minecraft/world/entity/ai/sensing/Sensor
	m	(I)V	<init>	<init>
		p	1		senseInterval
	m	()Ljava/util/Set;	a	requires
	m	(Laip;Lbfx;)V	a	doTick
		p	1		world
		p	2		entity
	m	(Laip;Lbfx;)V	b	tick
		p	1		world
		p	2		entity
	m	(Lbfx;Lbfx;)Z	b	isEntityTargetable
		p	0		entity
		p	1		target
	m	(Lbfx;Lbfx;)Z	c	isEntityAttackable
		p	0		entity
		p	1		target
	m	(Lbfx;Lbfx;)Z	d	isEntityAttackableIgnoringLineOfSight
		p	0		entity
		p	1		target
	f	Lapo;	a	RANDOM
	f	I	b	TARGETING_RANGE
	f	I	c	DEFAULT_SCAN_RATE
	f	Lbqk;	d	TARGET_CONDITIONS
	f	Lbqk;	e	TARGET_CONDITIONS_IGNORE_INVISIBILITY_TESTING
	f	Lbqk;	f	ATTACK_TARGET_CONDITIONS
	f	Lbqk;	g	ATTACK_TARGET_CONDITIONS_IGNORE_INVISIBILITY_TESTING
	f	Lbqk;	h	ATTACK_TARGET_CONDITIONS_IGNORE_LINE_OF_SIGHT
	f	Lbqk;	i	ATTACK_TARGET_CONDITIONS_IGNORE_INVISIBILITY_AND_LINE_OF_SIGHT
	f	I	j	scanRate
	f	J	k	timeToTick
c	bqe	net/minecraft/world/entity/ai/sensing/SensorType
	m	(Ljava/util/function/Supplier;)V	<init>	<init>
		p	1		factory
	m	()Lbqd;	a	create
	m	(Ljava/lang/String;Ljava/util/function/Supplier;)Lbqe;	a	register
		p	0		id
		p	1		factory
	m	()Lbqf;	b	lambda$static$3
	m	()Lbqf;	c	lambda$static$2
	m	()Lbqf;	d	lambda$static$1
	m	()Lbqf;	e	lambda$static$0
	f	Lbqe;	a	DUMMY
	f	Lbqe;	b	NEAREST_ITEMS
	f	Lbqe;	c	NEAREST_LIVING_ENTITIES
	f	Lbqe;	d	NEAREST_PLAYERS
	f	Lbqe;	e	NEAREST_BED
	f	Lbqe;	f	HURT_BY
	f	Lbqe;	g	VILLAGER_HOSTILES
	f	Lbqe;	h	VILLAGER_BABIES
	f	Lbqe;	i	SECONDARY_POIS
	f	Lbqe;	j	GOLEM_DETECTED
	f	Lbqe;	k	PIGLIN_SPECIFIC_SENSOR
	f	Lbqe;	l	PIGLIN_BRUTE_SPECIFIC_SENSOR
	f	Lbqe;	m	HOGLIN_SPECIFIC_SENSOR
	f	Lbqe;	n	NEAREST_ADULT
	f	Lbqe;	o	AXOLOTL_ATTACKABLES
	f	Lbqe;	p	AXOLOTL_TEMPTATIONS
	f	Lbqe;	q	GOAT_TEMPTATIONS
	f	Lbqe;	r	FROG_TEMPTATIONS
	f	Lbqe;	s	CAMEL_TEMPTATIONS
	f	Lbqe;	t	FROG_ATTACKABLES
	f	Lbqe;	u	IS_IN_WATER
	f	Lbqe;	v	WARDEN_ENTITY_SENSOR
	f	Ljava/util/function/Supplier;	w	factory
c	bqf	net/minecraft/world/entity/ai/sensing/TemptingSensor
	m	(Lciu;)V	<init>	<init>
		p	1		ingredient
	m	()Ljava/util/Set;	a	requires
	m	(Laip;Lbfx;)V	a	doTick
		p	1		world
		p	2		entity
	m	(Laip;Lbgg;)V	a	doTick
		p	1		world
		p	2		entity
	m	(Lbgg;Laiq;)Z	a	lambda$doTick$2
	m	(Lbym;)Z	a	playerHoldingTemptation
		p	1		player
	m	(Lcfv;)Z	a	isTemptation
		p	1		stack
	m	(Lbgg;Laiq;)Z	b	lambda$doTick$1
		p	1		player
	m	(Lbgg;Laiq;)Z	c	lambda$doTick$0
		p	1		player
	f	I	a	TEMPTATION_RANGE
	f	Lbqk;	c	TEMPT_TARGETING
	f	Lciu;	d	temptations
c	bqg	net/minecraft/world/entity/ai/sensing/VillagerBabiesSensor
	m	()Ljava/util/Set;	a	requires
	m	(Laip;Lbfx;)V	a	doTick
		p	1		world
		p	2		entity
	m	(Lbfx;)Ljava/util/List;	a	getNearestVillagerBabies
		p	1		entities
	m	(Lbfx;)Z	b	isVillagerBaby
		p	1		entity
	m	(Lbfx;)Lbpb;	c	getVisibleEntities
		p	1		entity
c	bqh	net/minecraft/world/entity/ai/sensing/VillagerHostilesSensor
	m	(Lbfx;Lbfx;)Z	a	isMatchingEntity
		p	1		entity
		p	2		target
	m	()Lboz;	b	getMemory
	m	(Lbfx;)Z	b	isHostile
		p	1		entity
	m	(Lbfx;Lbfx;)Z	e	isClose
		p	1		villager
		p	2		target
	f	Lcom/google/common/collect/ImmutableMap;	a	ACCEPTABLE_DISTANCE_FROM_HOSTILES
c	bqi	net/minecraft/world/entity/ai/sensing/WardenEntitySensor
	m	()Ljava/util/Set;	a	requires
	m	(Laip;Lbfx;)V	a	doTick
		p	1		world
		p	2		entity
	m	(Laip;Lbxq;)V	a	doTick
		p	1		world
		p	2		entity
	m	(Lbfx;)Z	a	lambda$doTick$1
	m	(Lbxq;)V	a	lambda$doTick$4
	m	(Lbxq;Lbfx;)V	a	lambda$doTick$3
		p	1		entity
	m	(Lbxq;Ljava/util/function/Predicate;)Ljava/util/Optional;	a	getClosest
		p	0		warden
		p	1		targetPredicate
	m	()I	b	radiusXZ
	m	(Lbfx;)Z	b	lambda$doTick$0
		p	0		entity
	m	(Lbxq;)Ljava/util/Optional;	b	lambda$doTick$2
	m	()I	c	radiusY
c	bqj	net/minecraft/world/entity/ai/sensing/package-info
c	bqk	net/minecraft/world/entity/ai/targeting/TargetingConditions
	m	(Z)V	<init>	<init>
		p	1		attackable
	m	()Lbqk;	a	forCombat
	m	(D)Lbqk;	a	range
		p	1		baseMaxDistance
	m	(Lbfx;Lbfx;)Z	a	test
		p	1		baseEntity
		p	2		targetEntity
	m	(Ljava/util/function/Predicate;)Lbqk;	a	selector
		p	1		predicate
	m	()Lbqk;	b	forNonCombat
	m	()Lbqk;	c	copy
	m	()Lbqk;	d	ignoreLineOfSight
	m	()Lbqk;	e	ignoreInvisibilityTesting
	f	Lbqk;	a	DEFAULT
	f	D	b	MIN_VISIBILITY_DISTANCE_FOR_INVISIBLE_TARGET
	f	Z	c	isCombat
	f	D	d	range
	f	Z	e	checkLineOfSight
	f	Z	f	testInvisible
	f	Ljava/util/function/Predicate;	g	selector
c	bql	net/minecraft/world/entity/ai/targeting/package-info
c	bqm	net/minecraft/world/entity/ai/util/AirAndWaterRandomPos
	m	(Lbgg;IIIDDD)Lede;	a	getPos
		p	0		entity
		p	1		horizontalRange
		p	2		verticalRange
		p	3		startHeight
		p	4		directionX
		p	6		directionZ
		p	8		rangeAngle
	m	(Lbgg;IIIDDDZ)Lgt;	a	generateRandomPos
		p	0		entity
		p	1		horizontalRange
		p	2		verticalRange
		p	3		startHeight
		p	4		directionX
		p	6		directionZ
		p	8		rangeAngle
		p	10		posTargetInRange
	m	(Lbgg;Lgt;)Z	a	lambda$generateRandomPos$1
		p	1		pos
	m	(Lbgg;IIIDDDZ)Lgt;	b	lambda$getPos$0
c	bqn	net/minecraft/world/entity/ai/util/AirRandomPos
	m	(Lbgg;IIILede;D)Lede;	a	getPosTowards
		p	0		entity
		p	1		horizontalRange
		p	2		verticalRange
		p	3		startHeight
		p	4		direction
		p	5		angleRange
	m	(Lbgg;IIILede;DZ)Lgt;	a	lambda$getPosTowards$0
c	bqo	net/minecraft/world/entity/ai/util/DefaultRandomPos
	m	(Lbgg;II)Lede;	a	getPos
		p	0		entity
		p	1		horizontalRange
		p	2		verticalRange
	m	(Lbgg;IILede;)Lede;	a	getPosAway
		p	0		entity
		p	1		horizontalRange
		p	2		verticalRange
		p	3		start
	m	(Lbgg;IILede;D)Lede;	a	getPosTowards
		p	0		entity
		p	1		horizontalRange
		p	2		verticalRange
		p	3		end
		p	4		angleRange
	m	(Lbgg;IILede;DZ)Lgt;	a	lambda$getPosTowards$1
	m	(Lbgg;IILede;Z)Lgt;	a	lambda$getPosAway$2
	m	(Lbgg;IIZ)Lgt;	a	lambda$getPos$0
	m	(Lbgg;IZLgt;)Lgt;	a	generateRandomPosTowardDirection
		p	0		entity
		p	1		horizontalRange
		p	2		posTargetInRange
		p	3		fuzz
c	bqp	net/minecraft/world/entity/ai/util/GoalUtils
	m	(Lbfz;)Z	a	hasGroundPathNavigation
		p	0		entity
	m	(Lbgg;I)Z	a	mobRestricted
		p	0		entity
		p	1		extraDistance
	m	(Lbgg;Lgt;)Z	a	isWater
		p	0		entity
		p	1		pos
	m	(Lbph;Lgt;)Z	a	isNotStable
		p	0		navigation
		p	1		pos
	m	(Lgt;Lbgg;)Z	a	isOutsideLimits
		p	0		pos
		p	1		entity
	m	(ZLbgg;Lgt;)Z	a	isRestricted
		p	0		posTargetInRange
		p	1		entity
		p	2		pos
	m	(Lbgg;Lgt;)Z	b	hasMalus
		p	0		entity
		p	1		pos
	m	(Lbgg;Lgt;)Z	c	isSolid
		p	0		entity
		p	1		pos
c	bqq	net/minecraft/world/entity/ai/util/HoverRandomPos
	m	(Lbgg;IIDDFII)Lede;	a	getPos
		p	0		entity
		p	1		horizontalRange
		p	2		verticalRange
		p	3		x
		p	5		z
		p	7		angle
		p	8		maxAboveSolid
		p	9		minAboveSolid
	m	(Lbgg;IIDDFZII)Lgt;	a	lambda$getPos$1
	m	(Lbgg;Lgt;)Z	a	lambda$getPos$0
		p	1		pos
c	bqr	net/minecraft/world/entity/ai/util/LandRandomPos
	m	(Lbgg;II)Lede;	a	getPos
		p	0		entity
		p	1		horizontalRange
		p	2		verticalRange
	m	(Lbgg;IILede;)Lede;	a	getPosTowards
		p	0		entity
		p	1		horizontalRange
		p	2		verticalRange
		p	3		end
	m	(Lbgg;IILede;Z)Lede;	a	getPosInDirection
		p	0		entity
		p	1		horizontalRange
		p	2		verticalRange
		p	3		direction
		p	4		posTargetInRange
	m	(Lbgg;IILjava/util/function/ToDoubleFunction;)Lede;	a	getPos
		p	0		entity
		p	1		horizontalRange
		p	2		verticalRange
		p	3		scorer
	m	(Lbgg;IIZ)Lgt;	a	lambda$getPos$0
	m	(Lbgg;IZLgt;)Lgt;	a	generateRandomPosTowardDirection
		p	0		entity
		p	1		horizontalRange
		p	2		posTargetInRange
		p	3		relativeInRangePos
	m	(Lbgg;Lgt;)Lgt;	a	movePosUpOutOfSolid
		p	0		entity
		p	1		pos
	m	(Lbgg;IILede;)Lede;	b	getPosAway
		p	0		entity
		p	1		horizontalRange
		p	2		verticalRange
		p	3		start
	m	(Lbgg;IILede;Z)Lgt;	b	lambda$getPosInDirection$1
	m	(Lbgg;Lgt;)Z	b	lambda$movePosUpOutOfSolid$2
		p	1		currentPos
c	bqs	net/minecraft/world/entity/ai/util/RandomPos
	m	(Lapo;II)Lgt;	a	generateRandomDirection
		p	0		random
		p	1		horizontalRange
		p	2		verticalRange
	m	(Lapo;IIIDDD)Lgt;	a	generateRandomDirectionWithinRadians
		p	0		random
		p	1		horizontalRange
		p	2		verticalRange
		p	3		startHeight
		p	4		directionX
		p	6		directionZ
		p	8		angleRange
	m	(Lbgg;ILapo;Lgt;)Lgt;	a	generateRandomPosTowardDirection
		p	0		entity
		p	1		horizontalRange
		p	2		random
		p	3		fuzz
	m	(Lbgg;Ljava/util/function/Supplier;)Lede;	a	generateRandomPos
		p	0		entity
		p	1		factory
	m	(Lgt;IILjava/util/function/Predicate;)Lgt;	a	moveUpToAboveSolid
		p	0		pos
		p	1		extraAbove
		p	2		max
		p	3		condition
	m	(Lgt;ILjava/util/function/Predicate;)Lgt;	a	moveUpOutOfSolid
		p	0		pos
		p	1		maxY
		p	2		condition
	m	(Ljava/util/function/Supplier;Ljava/util/function/ToDoubleFunction;)Lede;	a	generateRandomPos
		p	0		factory
		p	1		scorer
	f	I	a	RANDOM_POS_ATTEMPTS
c	bqt	net/minecraft/world/entity/ai/util/package-info
c	bqu	net/minecraft/world/entity/ai/village/ReputationEventType
	m	(Ljava/lang/String;)Lbqu;	a	register
		p	0		key
	f	Lbqu;	a	ZOMBIE_VILLAGER_CURED
	f	Lbqu;	b	GOLEM_KILLED
	f	Lbqu;	c	VILLAGER_HURT
	f	Lbqu;	d	VILLAGER_KILLED
	f	Lbqu;	e	TRADE
c	bqu$1	net/minecraft/world/entity/ai/village/ReputationEventType$1
	f	Ljava/lang/String;	f	val$name
c	bqv	net/minecraft/world/entity/ai/village/VillageSiege
	m	(Laip;)Z	a	tryToSetupSiege
		p	1		world
	m	(Laip;Lgt;)Lede;	a	findRandomSpawnPos
		p	1		world
		p	2		pos
	m	(Laip;ZZ)I	a	tick
		p	1		world
		p	2		spawnMonsters
		p	3		spawnAnimals
	m	(Laip;)V	b	trySpawn
		p	1		world
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Z	b	hasSetupSiege
	f	Lbqv$a;	c	siegeState
	f	I	d	zombiesToSpawn
	f	I	e	nextSpawnTime
	f	I	f	spawnX
	f	I	g	spawnY
	f	I	h	spawnZ
c	bqv$a	net/minecraft/world/entity/ai/village/VillageSiege$State
	m	()[Lbqv$a;	a	$values
	f	Lbqv$a;	a	SIEGE_CAN_ACTIVATE
	f	Lbqv$a;	b	SIEGE_TONIGHT
	f	Lbqv$a;	c	SIEGE_DONE
	f	[Lbqv$a;	d	$VALUES
c	bqw	net/minecraft/world/entity/ai/village/package-info
c	bqx	net/minecraft/world/entity/ai/village/poi/PoiManager
	m	(Ljava/nio/file/Path;Lcom/mojang/datafixers/DataFixer;ZLhr;Lcmk;)V	<init>	<init>
		p	1		path
		p	2		dataFixer
		p	3		dsync
		p	4		registryManager
		p	5		world
	m	(J)V	a	setDirty
		p	1		pos
	m	(Ladc;Lgt;)Z	a	existsAtPosition
		p	1		type
		p	2		pos
	m	(Ladc;Lhd;)Z	a	lambda$existsAtPosition$1
		p	1		entry
	m	(Lbqy;)Lgt;	a	lambda$take$15
		p	0		poi
	m	(Lbqz;)Ljava/lang/Boolean;	a	lambda$isVillageCenter$23
		p	0		poiSet
	m	(Lclp;Lddz;)V	a	checkConsistencyWithBlocks
		p	1		chunkPos
		p	2		chunkSection
	m	(Lclp;Ljava/lang/Integer;)Ljava/util/Optional;	a	lambda$getInChunk$5
	m	(Lcml;Lclp;)V	a	lambda$ensureLoadedAndValid$33
	m	(Lcml;Lgt;I)V	a	ensureLoadedAndValid
		p	1		world
		p	2		pos
		p	3		radius
	m	(Lcom/mojang/datafixers/util/Pair;)Lclp;	a	lambda$ensureLoadedAndValid$31
	m	(Lddz;)Z	a	mayHavePoi
		p	0		chunkSection
	m	(Lddz;Lhw;)V	a	lambda$checkConsistencyWithBlocks$26
	m	(Lddz;Lhw;Lbqz;)V	a	lambda$checkConsistencyWithBlocks$25
		p	3		poiSet
	m	(Lddz;Lhw;Ljava/util/function/BiConsumer;)V	a	updateFromSection
		p	1		chunkSection
		p	2		sectionPos
		p	3		populator
	m	(Lddz;Ljava/util/function/BiConsumer;Lgt;)V	a	lambda$updateFromSection$28
		p	2		pos
	m	(Lgt;)V	a	remove
		p	1		pos
	m	(Lgt;ILbqy;)Z	a	lambda$getInRange$4
		p	2		poi
	m	(Lgt;Lbqy;)D	a	lambda$findClosestWithType$11
		p	1		poi
	m	(Lgt;Lbqz;)Ljava/lang/Integer;	a	lambda$getFreeTickets$21
		p	1		poiSet
	m	(Lgt;Lcom/mojang/datafixers/util/Pair;)D	a	lambda$findAllClosestFirstWithType$9
	m	(Lgt;Lgt;)D	a	lambda$findClosest$13
	m	(Lgt;Lhd;)V	a	add
		p	1		pos
		p	2		type
	m	(Lgt;Ljava/util/function/Predicate;)Z	a	exists
		p	1		pos
		p	2		predicate
	m	(Lgt;Ljava/util/function/Predicate;Lbqz;)Ljava/lang/Boolean;	a	lambda$exists$19
		p	2		poiSet
	m	(Lhd;)Z	a	lambda$isVillageCenter$22
		p	0		entry
	m	(Lhw;)I	a	sectionsToVillage
		p	1		pos
	m	(Ljava/util/function/BiConsumer;Lgt;Lhd;)V	a	lambda$updateFromSection$27
		p	2		poiType
	m	(Ljava/util/function/BiPredicate;Lbqy;)Z	a	lambda$take$14
		p	1		poi
	m	(Ljava/util/function/BooleanSupplier;)V	a	tick
		p	1		shouldKeepTicking
	m	(Ljava/util/function/Predicate;Lbqx$b;Lclp;)Ljava/util/stream/Stream;	a	lambda$getInSquare$2
		p	3		chunkPos
	m	(Ljava/util/function/Predicate;Lbqx$b;Ljava/util/Optional;)Ljava/util/stream/Stream;	a	lambda$getInChunk$6
	m	(Ljava/util/function/Predicate;Lbqy;)Z	a	lambda$getRandom$16
		p	1		poi
	m	(Ljava/util/function/Predicate;Lclp;Lbqx$b;)Ljava/util/stream/Stream;	a	getInChunk
		p	1		typePredicate
		p	2		chunkPos
		p	3		occupationStatus
	m	(Ljava/util/function/Predicate;Lgt;ILbqx$b;)J	a	getCountInRange
		p	1		typePredicate
		p	2		pos
		p	3		radius
		p	4		occupationStatus
	m	(Ljava/util/function/Predicate;Ljava/util/function/BiPredicate;Lgt;I)Ljava/util/Optional;	a	take
		p	1		typePredicate
		p	3		pos
		p	4		radius
	m	(Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lbqx$b;Lgt;ILapo;)Ljava/util/Optional;	a	getRandom
		p	1		typePredicate
		p	2		positionPredicate
		p	3		occupationStatus
		p	4		pos
		p	5		radius
		p	6		random
	m	(Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lgt;ILbqx$b;)Ljava/util/stream/Stream;	a	findAll
		p	1		typePredicate
		p	2		posPredicate
		p	3		pos
		p	4		radius
		p	5		occupationStatus
	m	(J)V	b	onSectionLoad
		p	1		pos
	m	(Lbqy;)Lcom/mojang/datafixers/util/Pair;	b	lambda$findClosestWithType$12
		p	0		poi
	m	(Lclp;)Z	b	lambda$ensureLoadedAndValid$32
		p	1		chunkPos
	m	(Lcom/mojang/datafixers/util/Pair;)Z	b	lambda$ensureLoadedAndValid$30
	m	(Lddz;Lhw;Ljava/util/function/BiConsumer;)V	b	lambda$checkConsistencyWithBlocks$24
		p	3		populator
	m	(Lgt;)Z	b	release
		p	1		pos
	m	(Lgt;ILbqy;)Z	b	lambda$getInSquare$3
		p	2		poi
	m	(Lgt;Lbqz;)Ljava/util/Optional;	b	lambda$getType$20
		p	1		poiSet
	m	(Lgt;Lgt;)D	b	lambda$findClosest$10
	m	(Lhw;)Lcom/mojang/datafixers/util/Pair;	b	lambda$ensureLoadedAndValid$29
		p	1		sectionPos
	m	(Ljava/util/function/Predicate;Lbqy;)Z	b	lambda$findAllWithType$7
		p	1		poi
	m	(Ljava/util/function/Predicate;Lgt;ILbqx$b;)Ljava/util/stream/Stream;	b	getInSquare
		p	1		typePredicate
		p	2		pos
		p	3		radius
		p	4		occupationStatus
	m	(Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lgt;ILbqx$b;)Ljava/util/stream/Stream;	b	findAllWithType
		p	1		typePredicate
		p	2		posPredicate
		p	3		pos
		p	4		radius
		p	5		occupationStatus
	m	(Lbqy;)Lcom/mojang/datafixers/util/Pair;	c	lambda$findAllWithType$8
		p	0		poi
	m	(Lgt;)Ljava/util/Optional;	c	getType
		p	1		pos
	m	(Lgt;Lbqz;)Ljava/lang/Boolean;	c	lambda$release$17
		p	1		poiSet
	m	(Ljava/util/function/Predicate;Lgt;ILbqx$b;)Ljava/util/stream/Stream;	c	getInRange
		p	1		typePredicate
		p	2		pos
		p	3		radius
		p	4		occupationStatus
	m	(Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lgt;ILbqx$b;)Ljava/util/stream/Stream;	c	findAllClosestFirstWithType
		p	1		typePredicate
		p	2		posPredicate
		p	3		pos
		p	4		radius
		p	5		occupationStatus
	m	(Lgt;)I	d	getFreeTickets
		p	1		pos
	m	(Lgt;Lbqz;)V	d	lambda$remove$0
		p	1		poiSet
	m	(Ljava/util/function/Predicate;Lgt;ILbqx$b;)Ljava/util/Optional;	d	findClosest
		p	1		typePredicate
		p	2		pos
		p	3		radius
		p	4		occupationStatus
	m	(Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lgt;ILbqx$b;)Ljava/util/Optional;	d	find
		p	1		typePredicate
		p	2		posPredicate
		p	3		pos
		p	4		radius
		p	5		occupationStatus
	m	(Lgt;)Ljava/lang/IllegalStateException;	e	lambda$release$18
	m	(Ljava/util/function/Predicate;Lgt;ILbqx$b;)Ljava/util/Optional;	e	findClosestWithType
		p	1		typePredicate
		p	2		pos
		p	3		radius
		p	4		occupationStatus
	m	(Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lgt;ILbqx$b;)Ljava/util/Optional;	e	findClosest
		p	1		typePredicate
		p	2		posPredicate
		p	3		pos
		p	4		radius
		p	5		occupationStatus
	m	(J)Z	g	isVillageCenter
		p	1		pos
	f	I	a	MAX_VILLAGE_DISTANCE
	f	I	b	VILLAGE_SECTION_SIZE
	f	Lbqx$a;	d	distanceTracker
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	e	loadedChunks
c	bqx$a	net/minecraft/world/entity/ai/village/poi/PoiManager$DistanceTracker
	m	()V	a	runAllUpdates
	m	(JI)V	a	setLevel
		p	1		id
		p	3		level
	m	(J)I	b	getLevelFromSource
		p	1		id
	m	(J)I	c	getLevel
		p	1		id
	f	Lbqx;	a	this$0
	f	Lit/unimi/dsi/fastutil/longs/Long2ByteMap;	b	levels
c	bqx$b	net/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy
	m	(Ljava/lang/String;ILjava/util/function/Predicate;)V	<init>	<init>
		p	3		predicate
	m	()Ljava/util/function/Predicate;	a	getTest
	m	(Lbqy;)Z	a	lambda$static$0
		p	0		poi
	m	()[Lbqx$b;	b	$values
	f	Lbqx$b;	a	HAS_SPACE
	f	Lbqx$b;	b	IS_OCCUPIED
	f	Lbqx$b;	c	ANY
	f	Ljava/util/function/Predicate;	d	test
	f	[Lbqx$b;	e	$VALUES
c	bqy	net/minecraft/world/entity/ai/village/poi/PoiRecord
	m	(Lgt;Lhd;ILjava/lang/Runnable;)V	<init>	<init>
		p	1		pos
		p	2		type
		p	3		freeTickets
		p	4		updateListener
	m	(Lgt;Lhd;Ljava/lang/Runnable;)V	<init>	<init>
		p	1		pos
		p	2		type
		p	3		updateListener
	m	()I	a	getFreeTickets
	m	(Lbqy;)Ljava/lang/Integer;	a	lambda$codec$2
		p	0		poi
	m	(Ljava/lang/Runnable;)Lcom/mojang/serialization/Codec;	a	codec
		p	0		updateListener
	m	(Ljava/lang/Runnable;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$codec$3
		p	1		instance
	m	()Z	b	acquireTicket
	m	(Lbqy;)Lhd;	b	lambda$codec$1
		p	0		poi
	m	()Z	c	releaseTicket
	m	(Lbqy;)Lgt;	c	lambda$codec$0
		p	0		poi
	m	()Z	d	hasSpace
	m	()Z	e	isOccupied
	m	()Lgt;	f	getPos
	m	()Lhd;	g	getPoiType
	f	Lgt;	a	pos
	f	Lhd;	b	poiType
	f	I	c	freeTickets
	f	Ljava/lang/Runnable;	d	setDirty
c	bqz	net/minecraft/world/entity/ai/village/poi/PoiSection
	m	(Ljava/lang/Runnable;)V	<init>	<init>
		p	1		updateListener
	m	(Ljava/lang/Runnable;ZLjava/util/List;)V	<init>	<init>
		p	1		updateListener
		p	2		valid
		p	3		pois
	m	()Z	a	isValid
	m	(Ladc;)Ljava/lang/String;	a	lambda$add$6
		p	0		key
	m	(Lbqy;)Z	a	add
		p	1		poi
	m	(Lbqz;)Ljava/util/List;	a	lambda$codec$1
		p	0		poiSet
	m	(Lgt;)V	a	remove
		p	1		pos
	m	(Lgt;Lhd;)V	a	add
		p	1		pos
		p	2		type
	m	(Lgt;Lhd;S)Lbqy;	a	lambda$refresh$8
	m	(Lgt;Ljava/util/function/Predicate;)Z	a	exists
		p	1		pos
		p	2		predicate
	m	(Lhd;)Ljava/util/Set;	a	lambda$add$7
		p	0		type
	m	(Lit/unimi/dsi/fastutil/shorts/Short2ObjectMap;Lgt;Lhd;)V	a	lambda$refresh$9
		p	2		pos
	m	(Ljava/lang/Runnable;)Lcom/mojang/serialization/Codec;	a	codec
		p	0		updateListener
	m	(Ljava/lang/Runnable;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$codec$2
		p	1		instance
	m	(Ljava/util/Map$Entry;)Ljava/util/stream/Stream;	a	lambda$getRecords$5
		p	0		entry
	m	(Ljava/util/function/Consumer;)V	a	refresh
		p	1		updater
	m	(Ljava/util/function/Predicate;Lbqx$b;)Ljava/util/stream/Stream;	a	getRecords
		p	1		predicate
		p	2		occupationStatus
	m	(Ljava/util/function/Predicate;Ljava/util/Map$Entry;)Z	a	lambda$getRecords$4
		p	1		entry
	m	()V	b	clear
	m	(Lbqz;)Ljava/lang/Boolean;	b	lambda$codec$0
		p	0		poiSet
	m	(Lgt;)I	b	getFreeTickets
		p	1		pos
	m	(Ljava/lang/Runnable;)Lbqz;	b	lambda$codec$3
	m	(Lgt;)Z	c	release
		p	1		pos
	m	(Lgt;)Ljava/util/Optional;	d	getType
		p	1		pos
	m	(Lgt;)Ljava/util/Optional;	e	getPoiRecord
		p	1		pos
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lit/unimi/dsi/fastutil/shorts/Short2ObjectMap;	b	records
	f	Ljava/util/Map;	c	byType
	f	Ljava/lang/Runnable;	d	setDirty
	f	Z	e	isValid
c	bra	net/minecraft/world/entity/ai/village/poi/PoiType
	m	()Ljava/util/Set;	a	matchingStates
	m	(Ldbq;)Z	a	is
		p	1		state
	m	(Lhd;)Z	a	lambda$static$0
		p	0		type
	m	()I	b	maxTickets
	m	()I	c	validRange
	f	Ljava/util/function/Predicate;	a	NONE
	f	Ljava/util/Set;	b	matchingStates
	f	I	c	maxTickets
	f	I	d	validRange
c	brb	net/minecraft/world/entity/ai/village/poi/PoiTypes
	m	(Lcpi;)Ljava/util/Set;	a	getBlockStates
		p	0		block
	m	(Ldbq;)Ljava/util/Optional;	a	forState
		p	0		state
	m	(Lhd;Ldbq;)V	a	lambda$registerBlockStates$3
		p	1		state
	m	(Lhd;Ljava/util/Set;)V	a	registerBlockStates
		p	0		poiTypeEntry
		p	1		states
	m	(Lhq;)Lbra;	a	bootstrap
		p	0		registry
	m	(Lhq;Ladc;Ljava/util/Set;II)Lbra;	a	register
		p	0		registry
		p	1		key
		p	2		states
		p	3		ticketCount
		p	4		searchDistance
	m	(Ljava/lang/String;)Ladc;	a	createKey
		p	0		id
	m	(Lcpi;)Ljava/util/stream/Stream;	b	lambda$static$2
	m	(Ldbq;)Z	b	hasPoi
		p	0		state
	m	(Lcpi;)Ljava/util/stream/Stream;	c	lambda$static$0
	m	(Ldbq;)Z	c	lambda$static$1
	f	Ladc;	a	ARMORER
	f	Ladc;	b	BUTCHER
	f	Ladc;	c	CARTOGRAPHER
	f	Ladc;	d	CLERIC
	f	Ladc;	e	FARMER
	f	Ladc;	f	FISHERMAN
	f	Ladc;	g	FLETCHER
	f	Ladc;	h	LEATHERWORKER
	f	Ladc;	i	LIBRARIAN
	f	Ladc;	j	MASON
	f	Ladc;	k	SHEPHERD
	f	Ladc;	l	TOOLSMITH
	f	Ladc;	m	WEAPONSMITH
	f	Ladc;	n	HOME
	f	Ladc;	o	MEETING
	f	Ladc;	p	BEEHIVE
	f	Ladc;	q	BEE_NEST
	f	Ladc;	r	NETHER_PORTAL
	f	Ladc;	s	LODESTONE
	f	Ladc;	t	LIGHTNING_ROD
	f	Ljava/util/Set;	u	BEDS
	f	Ljava/util/Set;	v	CAULDRONS
	f	Ljava/util/Map;	w	TYPE_BY_STATE
c	brc	net/minecraft/world/entity/ai/village/poi/package-info
c	brd	net/minecraft/world/entity/ambient/AmbientCreature
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lbym;)Z	a	canBeLeashed
		p	1		player
c	bre	net/minecraft/world/entity/ambient/Bat
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lbfh;)V	A	doPush
		p	1		entity
	m	()V	U	customServerAiStep
	m	(DZLdbq;Lgt;)V	a	checkFallDamage
		p	1		heightDifference
		p	3		onGround
		p	4		state
		p	5		landedPosition
	m	(Lbem;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()Z	aN	isFlapping
	m	()Lbfh$b;	aQ	getMovementEmission
	m	()V	a_	defineSynchedData
	m	(Lbfl;Lcmj;Lbgb;Lgt;Lapo;)Z	b	checkBatSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	(Lbgj;Lbfi;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Z	bn	isPushable
	m	()Z	cq	isIgnoringBlockTriggers
	m	(Lbem;)Lamq;	d	getHurtSound
		p	1		source
	m	()F	eN	getSoundVolume
	m	()F	eO	getVoicePitch
	m	()V	eZ	pushEntities
	m	()V	l	tick
	m	()Lbhd$a;	q	createAttributes
	m	()Z	r	isResting
	m	()Lamq;	s	getAmbientSound
	m	()Z	w	isHalloween
	m	(Z)V	w	setResting
		p	1		roosting
	m	()Lamq;	x_	getDeathSound
	f	F	b	FLAP_DEGREES_PER_TICK
	f	Lbqk;	bR	BAT_RESTING_TARGETING
	f	Lgt;	bS	targetPosition
	f	I	c	TICKS_PER_FLAP
	f	Lacl;	d	DATA_ID_FLAGS
	f	I	e	FLAG_RESTING
c	brf	net/minecraft/world/entity/ambient/package-info
c	brg	net/minecraft/world/entity/animal/AbstractFish
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()Z	Q	requiresCustomPersistence
	m	(Lcmi;)Lbph;	a	createNavigation
		p	1		world
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()Lamq;	aI	getSwimSound
	m	()V	a_	defineSynchedData
	m	(Lbgj;Lbfi;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lbym;Lbdx;)Lbdy;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lgt;Ldbq;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()V	b_	aiStep
	m	(Lre;)V	c	loadFromBucketTag
		p	1		nbt
	m	()Z	fS	canRandomSwim
	m	()Lamq;	fT	getFlopSound
	m	()I	fy	getMaxSpawnClusterSize
	m	(D)Z	h	removeWhenFarAway
		p	1		distanceSquared
	m	(Lede;)V	h	travel
		p	1		movementInput
	m	(Lcfv;)V	l	saveToBucketTag
		p	1		stack
	m	()Lbhd$a;	q	createAttributes
	m	()Z	r	fromBucket
	m	()Lamq;	w	getPickupSound
	m	(Z)V	w	setFromBucket
		p	1		fromBucket
	m	()V	x	registerGoals
	f	Lacl;	b	FROM_BUCKET
c	brg$a	net/minecraft/world/entity/animal/AbstractFish$FishMoveControl
	m	(Lbrg;)V	<init>	<init>
		p	1		owner
	m	()V	a	tick
	f	Lbrg;	l	fish
c	brg$b	net/minecraft/world/entity/animal/AbstractFish$FishSwimGoal
	m	(Lbrg;)V	<init>	<init>
		p	1		fish
	m	()Z	a	canUse
	f	Lbrg;	i	fish
c	brh	net/minecraft/world/entity/animal/AbstractGolem
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()I	K	getAmbientSoundInterval
	m	(Lbem;)Lamq;	d	getHurtSound
		p	1		source
	m	(D)Z	h	removeWhenFarAway
		p	1		distanceSquared
	m	()Lamq;	s	getAmbientSound
	m	()Lamq;	x_	getDeathSound
c	bri	net/minecraft/world/entity/animal/AbstractSchoolingFish
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lbri;)Lbri;	a	startFollowing
		p	1		groupLeader
	m	(Lcmx;Lbdw;Lbgb;Lbgr;Lre;)Lbgr;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Ljava/util/stream/Stream;)V	a	addFollowers
		p	1		fish
	m	(Lbri;)V	b	lambda$addFollowers$1
		p	1		fish
	m	(Lbri;)Z	c	lambda$addFollowers$0
		p	1		fish
	m	()Z	fS	canRandomSwim
	m	()I	fU	getMaxSchoolSize
	m	()Z	fV	isFollower
	m	()V	fW	stopFollowing
	m	()Z	fX	canBeFollowed
	m	()Z	fY	hasFollowers
	m	()Z	fZ	inRangeOfLeader
	m	()I	fy	getMaxSpawnClusterSize
	m	()V	ga	pathToLeader
	m	()V	gb	addFollower
	m	()V	gc	removeFollower
	m	()V	l	tick
	m	()V	x	registerGoals
	f	Lbri;	b	leader
	f	I	c	schoolSize
c	bri$a	net/minecraft/world/entity/animal/AbstractSchoolingFish$SchoolSpawnGroupData
	m	(Lbri;)V	<init>	<init>
		p	1		leader
	f	Lbri;	a	leader
c	brj	net/minecraft/world/entity/animal/Animal
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()I	K	getAmbientSoundInterval
	m	()V	U	customServerAiStep
	m	(Laip;Lbrj;)V	a	spawnChildFromBreeding
		p	1		world
		p	2		other
	m	(Lbem;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbrj;)Z	a	canMate
		p	1		other
	m	(Lbym;Lbdx;Lcfv;)V	a	usePlayerItem
		p	1		player
		p	2		hand
		p	3		stack
	m	(Lcll;Lgt;)Z	a	isBrightEnoughToSpawn
		p	0		world
		p	1		pos
	m	(Lgt;Lcml;)F	a	getWalkTargetValue
		p	1		pos
		p	2		world
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	(Lbfl;Lcmj;Lbgb;Lgt;Lapo;)Z	b	checkAnimalSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	(Lbym;Lbdx;)Lbdy;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()V	b_	aiStep
	m	()D	bu	getMyRidingOffset
	m	()I	dX	getExperienceReward
	m	(Lbym;)V	f	setInLove
		p	1		player
	m	()Z	fT	canFallInLove
	m	()I	fU	getInLoveTime
	m	()Laiq;	fV	getLoveCause
	m	()Z	fW	isInLove
	m	()V	fX	resetLove
	m	(D)Z	h	removeWhenFarAway
		p	1		distanceSquared
	m	(Lcfv;)Z	m	isFood
		p	1		stack
	m	(I)V	r	setInLoveTime
		p	1		loveTicks
	f	I	bS	inLove
	f	Ljava/util/UUID;	bT	loveCause
	f	I	bU	PARENT_AGE_AFTER_BREEDING
c	brk	net/minecraft/world/entity/animal/Bee
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lbrk;)Lapo;	A	access$2600
	m	(Lbrk;)Lapo;	B	access$2700
	m	(F)F	C	getRollAmount
		p	1		tickDelta
	m	(Lbrk;)Lapo;	C	access$2800
	m	()V	T	sendDebugPackets
	m	()V	U	customServerAiStep
	m	()I	a	getRemainingPersistentAngerTime
	m	(DZLdbq;Lgt;)V	a	checkFallDamage
		p	1		heightDifference
		p	3		onGround
		p	4		state
		p	5		landedPosition
	m	(I)V	a	setRemainingPersistentAngerTime
		p	1		angerTime
	m	(Laip;Lbfc;)Lbfc;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lbem;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbrk;)Lbph;	a	access$000
	m	(Lcmi;)Lbph;	a	createNavigation
		p	1		world
	m	(Lcmi;DDDDDLis;)V	a	spawnFluidParticle
		p	1		world
		p	2		lastX
		p	4		x
		p	6		lastZ
		p	8		z
		p	10		y
		p	12		effect
	m	(Lgt;Lcml;)F	a	getWalkTargetValue
		p	1		pos
		p	2		world
	m	(Ljava/util/UUID;)V	a	setPersistentAngerTarget
		p	1		angryAt
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()Z	aN	isFlapping
	m	()V	a_	defineSynchedData
	m	()Ljava/util/UUID;	b	getPersistentAngerTarget
	m	(Laip;Lbfc;)Lbrk;	b	getBreedOffspring
	m	(Lbgj;Lbfi;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lbrk;)Lapo;	b	access$100
	m	(Lgt;I)Z	b	closerThan
		p	1		pos
		p	2		distance
	m	(Lgt;Ldbq;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()V	b_	aiStep
	m	()V	c	startPersistentAngerTimer
	m	(Lanv;)V	c	jumpInLiquid
		p	1		fluid
	m	(Lbrk;)Lbph;	c	access$200
	m	()Lede;	cF	getLeashOffset
	m	(IZ)V	d	setFlag
		p	1		bit
		p	2		value
	m	(Lbem;)Lamq;	d	getHurtSound
		p	1		source
	m	(Lbrk;)Lbph;	d	access$300
	m	(Lbrk;)Lbph;	e	access$400
	m	()Lbgc;	eJ	getMobType
	m	()F	eN	getSoundVolume
	m	(Lbrk;)Lbph;	f	access$500
	m	()Ljava/util/List;	fS	getBlacklistedHives
	m	()V	fY	resetTicksWithoutNectarSinceExitingHive
	m	()Z	fZ	hasHive
	m	(Lbrk;)Lbph;	g	access$600
	m	(Lgt;)V	g	setSavedFlowerPos
		p	1		flowerPos
	m	()Lgt;	ga	getHivePos
	m	()Lbmu;	gb	getGoalSelector
	m	()Z	gc	hasNectar
	m	()Z	gd	hasStung
	m	()Lbhd$a;	ge	createAttributes
	m	()Z	gf	isFlying
	m	()V	gg	dropOffNectar
	m	()Z	gh	isTiredOfLookingForNectar
	m	()Z	gi	wantsToEnterHive
	m	()V	gj	updateRollAmount
	m	()Z	gk	isHiveNearFire
	m	()I	gl	getCropsGrownSincePollination
	m	()V	gm	resetNumCropsGrownSincePollination
	m	()V	gn	incrementNumCropsGrownSincePollination
	m	()Z	go	isHiveValid
	m	()Z	gp	isRolling
	m	(Lbrk;)Lbph;	h	access$700
	m	(Lgt;)V	h	pathfindRandomlyTowards
		p	1		pos
	m	(Lbrk;)Lbph;	i	access$800
	m	(Lgt;)Z	i	doesHiveHaveSpace
		p	1		pos
	m	(Lbrk;)Lbph;	j	access$900
	m	(Lgt;)Z	j	isTooFarAway
		p	1		pos
	m	(Lbrk;)Lbph;	k	access$1000
	m	(Lgt;)Z	k	isFlowerValid
		p	1		pos
	m	()V	l	tick
	m	(Lbrk;)Lbph;	l	access$1100
	m	(Lbrk;)Lbph;	m	access$1200
	m	(Lcfv;)Z	m	isFood
		p	1		stack
	m	(Lbrk;)Lbph;	n	access$1300
	m	(Lbrk;)Lbph;	o	access$1400
	m	(Lbrk;)Lbph;	p	access$1500
	m	()Lgt;	q	getSavedFlowerPos
	m	(Lbrk;)Lbph;	q	access$1600
	m	()Z	r	hasSavedFlowerPos
	m	(Lbrk;)Lbph;	r	access$1700
	m	()Lamq;	s	getAmbientSound
	m	(I)V	s	setStayOutOfHiveCountdown
		p	1		cannotEnterHiveTicks
	m	(Lbrk;)Lbph;	s	access$1800
	m	(I)Z	t	getFlag
		p	1		location
	m	(Lbrk;)Lapo;	t	access$1900
	m	(Lbrk;)Lapo;	u	access$2000
	m	(Lbrk;)Lbph;	v	access$2100
	m	()I	w	getTravellingTicks
	m	(Lbrk;)Lapo;	w	access$2200
	m	(Z)V	w	setHasNectar
		p	1		hasNectar
	m	()V	x	registerGoals
	m	(Lbrk;)Lbph;	x	access$2300
	m	(Z)V	x	setHasStung
		p	1		hasStung
	m	()Lamq;	x_	getDeathSound
	m	(Lbrk;)Lapo;	y	access$2400
	m	(Z)V	y	setRolling
		p	1		nearTarget
	m	(Lbfh;)Z	z	doHurtTarget
		p	1		target
	m	(Lbrk;)Lapo;	z	access$2500
	f	F	bS	FLAP_DEGREES_PER_TICK
	f	I	bT	TICKS_PER_FLAP
	f	Ljava/lang/String;	bV	TAG_CROPS_GROWN_SINCE_POLLINATION
	f	Ljava/lang/String;	bW	TAG_CANNOT_ENTER_HIVE_TICKS
	f	Ljava/lang/String;	bX	TAG_TICKS_SINCE_POLLINATION
	f	Ljava/lang/String;	bY	TAG_HAS_STUNG
	f	Ljava/lang/String;	bZ	TAG_HAS_NECTAR
	f	I	cA	COOLDOWN_BEFORE_LOCATING_NEW_HIVE
	f	I	cB	remainingCooldownBeforeLocatingNewHive
	f	I	cC	COOLDOWN_BEFORE_LOCATING_NEW_FLOWER
	f	I	cD	remainingCooldownBeforeLocatingNewFlower
	f	Lgt;	cE	savedFlowerPos
	f	Lgt;	cF	hivePos
	f	Lbrk$k;	cG	beePollinateGoal
	f	Lbrk$e;	cH	goToHiveGoal
	f	Lbrk$f;	cI	goToKnownFlowerGoal
	f	I	cJ	underWaterTicks
	f	Ljava/lang/String;	ca	TAG_FLOWER_POS
	f	Ljava/lang/String;	cb	TAG_HIVE_POS
	f	Lacl;	cc	DATA_FLAGS_ID
	f	Lacl;	cd	DATA_REMAINING_ANGER_TIME
	f	I	ce	FLAG_ROLL
	f	I	cf	FLAG_HAS_STUNG
	f	I	cg	FLAG_HAS_NECTAR
	f	I	ch	STING_DEATH_COUNTDOWN
	f	I	ci	TICKS_BEFORE_GOING_TO_KNOWN_FLOWER
	f	I	cj	TICKS_WITHOUT_NECTAR_BEFORE_GOING_HOME
	f	I	ck	MIN_ATTACK_DIST
	f	I	cl	MAX_CROPS_GROWABLE
	f	I	cm	POISON_SECONDS_NORMAL
	f	I	cn	POISON_SECONDS_HARD
	f	I	co	TOO_FAR_DISTANCE
	f	I	cp	HIVE_CLOSE_ENOUGH_DISTANCE
	f	I	cq	PATHFIND_TO_HIVE_WHEN_CLOSER_THAN
	f	I	cr	HIVE_SEARCH_DISTANCE
	f	Lbdj;	cs	PERSISTENT_ANGER_TIME
	f	Ljava/util/UUID;	ct	persistentAngerTarget
	f	F	cu	rollAmount
	f	F	cv	rollAmountO
	f	I	cw	timeSinceSting
	f	I	cx	ticksWithoutNectarSinceExitingHive
	f	I	cy	stayOutOfHiveCountdown
	f	I	cz	numCropsGrownSincePollination
c	brk$1	net/minecraft/world/entity/animal/Bee$1
	m	(Lbrk;Lbfz;Lcmi;)V	<init>	<init>
		p	2		entity
		p	3		world
	m	(Lgt;)Z	a	isStableDestination
		p	1		pos
	m	()V	c	tick
	f	Lbrk;	p	this$0
c	brk$a	net/minecraft/world/entity/animal/Bee$BaseBeeGoal
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()Z	h	canBeeUse
	m	()Z	i	canBeeContinueToUse
	f	Lbrk;	a	this$0
c	brk$b	net/minecraft/world/entity/animal/Bee$BeeAttackGoal
	m	(Lbrk;Lbgg;DZ)V	<init>	<init>
		p	2		mob
		p	3		speed
		p	5		pauseWhenMobIdle
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	f	Lbrk;	b	this$0
c	brk$c	net/minecraft/world/entity/animal/Bee$BeeBecomeAngryTargetGoal
	m	(Lbrk;)V	<init>	<init>
		p	1		bee
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()Z	i	beeCanTarget
c	brk$d	net/minecraft/world/entity/animal/Bee$BeeEnterHiveGoal
	m	()V	c	start
	m	()Z	h	canBeeUse
	m	()Z	i	canBeeContinueToUse
	f	Lbrk;	b	this$0
c	brk$e	net/minecraft/world/entity/animal/Bee$BeeGoToHiveGoal
	m	()Z	a	canUse
	m	(Lgt;)Z	a	pathfindDirectlyTowards
		p	1		pos
	m	()Z	b	canContinueToUse
	m	(Lgt;)Z	b	isTargetBlacklisted
		p	1		pos
	m	()V	c	start
	m	(Lgt;)V	c	blacklistTarget
		p	1		pos
	m	()V	d	stop
	m	(Lgt;)Z	d	hasReachedTarget
		p	1		pos
	m	()V	e	tick
	m	()Z	h	canBeeUse
	m	()Z	i	canBeeContinueToUse
	m	()V	k	clearBlacklist
	m	()V	l	dropAndBlacklistHive
	m	()V	m	dropHive
	f	I	b	MAX_TRAVELLING_TICKS
	f	Lbrk;	c	this$0
	f	I	d	travellingTicks
	f	I	e	MAX_BLACKLISTED_TARGETS
	f	Ljava/util/List;	f	blacklistedTargets
	f	Ldwz;	g	lastPath
	f	I	h	TICKS_BEFORE_HIVE_DROP
	f	I	i	ticksStuck
c	brk$f	net/minecraft/world/entity/animal/Bee$BeeGoToKnownFlowerGoal
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	m	()Z	h	canBeeUse
	m	()Z	i	canBeeContinueToUse
	m	()Z	k	wantsToGoToKnownFlower
	f	Lbrk;	b	this$0
	f	I	c	MAX_TRAVELLING_TICKS
	f	I	d	travellingTicks
c	brk$g	net/minecraft/world/entity/animal/Bee$BeeGrowCropGoal
	m	()V	e	tick
	m	()Z	h	canBeeUse
	m	()Z	i	canBeeContinueToUse
	f	I	b	GROW_CHANCE
	f	Lbrk;	c	this$0
c	brk$h	net/minecraft/world/entity/animal/Bee$BeeHurtByOtherGoal
	m	(Lbrk;Lbrk;)V	<init>	<init>
		p	2		bee
	m	(Lbfz;Lbfx;)V	a	alertOther
		p	1		mob
		p	2		target
	m	()Z	b	canContinueToUse
	f	Lbrk;	a	this$0
c	brk$i	net/minecraft/world/entity/animal/Bee$BeeLocateHiveGoal
	m	(Lgt;Lgt;)D	a	lambda$findNearbyHivesWithSpace$1
	m	(Lhd;)Z	a	lambda$findNearbyHivesWithSpace$0
		p	0		poiType
	m	()V	c	start
	m	()Z	h	canBeeUse
	m	()Z	i	canBeeContinueToUse
	m	()Ljava/util/List;	k	findNearbyHivesWithSpace
	f	Lbrk;	b	this$0
c	brk$j	net/minecraft/world/entity/animal/Bee$BeeLookControl
	m	(Lbrk;Lbfz;)V	<init>	<init>
		p	2		entity
	m	()V	a	tick
	m	()Z	c	resetXRotOnTick
	f	Lbrk;	h	this$0
c	brk$k	net/minecraft/world/entity/animal/Bee$BeePollinateGoal
	m	()Z	J_	requiresUpdateEveryTick
	m	(Ldbq;)Z	a	lambda$new$0
		p	0		state
	m	(Ljava/util/function/Predicate;D)Ljava/util/Optional;	a	findNearestBlock
		p	1		predicate
		p	2		searchDistance
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	m	()Z	h	canBeeUse
	m	()Z	i	canBeeContinueToUse
	m	()Z	k	hasPollinatedLongEnough
	m	()Z	l	isPollinating
	m	()V	m	stopPollinating
	m	()V	n	setWantedPos
	m	()F	o	getOffset
	m	()Ljava/util/Optional;	p	findNearbyFlower
	f	Lbrk;	b	this$0
	f	I	c	MIN_POLLINATION_TICKS
	f	I	d	MIN_FIND_FLOWER_RETRY_COOLDOWN
	f	I	e	MAX_FIND_FLOWER_RETRY_COOLDOWN
	f	Ljava/util/function/Predicate;	f	VALID_POLLINATION_BLOCKS
	f	D	g	ARRIVAL_THRESHOLD
	f	I	h	POSITION_CHANGE_CHANCE
	f	F	i	SPEED_MODIFIER
	f	F	j	HOVER_HEIGHT_WITHIN_FLOWER
	f	F	k	HOVER_POS_OFFSET
	f	I	l	successfulPollinatingTicks
	f	I	m	lastSoundPlayedTick
	f	Z	n	pollinating
	f	Lede;	o	hoverPos
	f	I	p	pollinatingTicks
	f	I	q	MAX_POLLINATING_TICKS
c	brk$l	net/minecraft/world/entity/animal/Bee$BeeWanderGoal
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()Lede;	h	findPos
	f	Lbrk;	a	this$0
	f	I	b	WANDER_THRESHOLD
c	brl	net/minecraft/world/entity/animal/Bucketable
	m	(Lbfz;Lcfv;)V	a	saveDefaultDataToBucketTag
		p	0		entity
		p	1		stack
	m	(Lbfz;Lre;)V	a	loadDefaultDataFromBucketTag
		p	0		entity
		p	1		nbt
	m	(Lbym;Lbdx;Lbfx;)Ljava/util/Optional;	a	bucketMobPickup
		p	0		player
		p	1		hand
		p	2		entity
	m	()Lcfv;	b	getBucketItemStack
	m	(Lre;)V	c	loadFromBucketTag
		p	1		nbt
	m	(Lcfv;)V	l	saveToBucketTag
		p	1		stack
	m	()Z	r	fromBucket
	m	()Lamq;	w	getPickupSound
	m	(Z)V	w	setFromBucket
		p	1		fromBucket
c	brm	net/minecraft/world/entity/animal/Cat
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Z)V	A	setLying
		p	1		sleeping
	m	(Z)V	B	setRelaxStateOne
		p	1		headDown
	m	(F)F	C	getLieDownAmount
		p	1		tickDelta
	m	(F)F	D	getLieDownAmountTail
		p	1		tickDelta
	m	(F)F	E	getRelaxStateOneAmount
		p	1		tickDelta
	m	()I	K	getAmbientSoundInterval
	m	()V	U	customServerAiStep
	m	(Laip;Lbfc;)Lbfc;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lbrj;)Z	a	canMate
		p	1		other
	m	(Lbrn;)V	a	setVariant
		p	1		variant
	m	(Lbym;Lbdx;Lcfv;)V	a	usePlayerItem
		p	1		player
		p	2		hand
		p	3		stack
	m	(Lcel;)V	a	setCollarColor
		p	1		color
	m	(Lcmx;Lbdw;Lbgb;Lbgr;Lre;)Lbgr;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lcmx;Lhh$c;)Ljava/util/Optional;	a	lambda$finalizeSpawn$0
		p	1		list
	m	(Ljava/lang/Object;)V	a	setVariant
		p	1		variant
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(Laip;Lbfc;)Lbrm;	b	getBreedOffspring
	m	(Lbgj;Lbfi;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lbym;Lbdx;)Lbdy;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Z	bP	isSteppingCarefully
	m	()Ljava/lang/Object;	c	getVariant
	m	(Lhd;)V	c	lambda$finalizeSpawn$1
		p	1		variant
	m	(Lbem;)Lamq;	d	getHurtSound
		p	1		source
	m	()Ladd;	fY	getResourceLocation
	m	()Lbrn;	fZ	getVariant
	m	()Z	ga	isLying
	m	()Z	gb	isRelaxStateOne
	m	()Lcel;	gc	getCollarColor
	m	()V	gd	hiss
	m	()Lbhd$a;	ge	createAttributes
	m	()F	gf	getAttackDamage
	m	()V	gg	handleLieDown
	m	()V	gh	updateLieDownAmount
	m	()V	gi	updateRelaxStateOneAmount
	m	(D)Z	h	removeWhenFarAway
		p	1		distanceSquared
	m	()V	l	tick
	m	(Lcfv;)Z	m	isFood
		p	1		stack
	m	()V	r	reassessTameGoals
	m	()Lamq;	s	getAmbientSound
	m	()V	x	registerGoals
	m	()Lamq;	x_	getDeathSound
	m	(Lbfh;)Z	z	doHurtTarget
		p	1		target
	f	D	bV	TEMPT_SPEED_MOD
	f	D	bW	WALK_SPEED_MOD
	f	D	bX	SPRINT_SPEED_MOD
	f	Lciu;	bY	TEMPT_INGREDIENT
	f	Lacl;	bZ	DATA_VARIANT_ID
	f	Lacl;	ca	IS_LYING
	f	Lacl;	cb	RELAX_STATE_ONE
	f	Lacl;	cc	DATA_COLLAR_COLOR
	f	Lbrm$a;	cd	avoidPlayersGoal
	f	Lbob;	ce	temptGoal
	f	F	cf	lieDownAmount
	f	F	cg	lieDownAmountO
	f	F	ch	lieDownAmountTail
	f	F	ci	lieDownAmountOTail
	f	F	cj	relaxStateOneAmount
	f	F	ck	relaxStateOneAmountO
c	brm$a	net/minecraft/world/entity/animal/Cat$CatAvoidEntityGoal
	m	(Lbrm;Ljava/lang/Class;FDD)V	<init>	<init>
		p	1		cat
		p	2		fleeFromType
		p	3		distance
		p	4		slowSpeed
		p	6		fastSpeed
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	f	Lbrm;	i	cat
c	brm$b	net/minecraft/world/entity/animal/Cat$CatRelaxOnOwnerGoal
	m	(Lbrm;)V	<init>	<init>
		p	1		cat
	m	()Z	a	canUse
	m	(Lgt;)Lgt;	a	lambda$canUse$1
	m	(Lgt;Lgz;)Lgt;	a	lambda$canUse$0
		p	1		direction
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	m	()Z	h	spaceIsOccupied
	m	()V	i	giveMorningGift
	f	Lbrm;	a	cat
	f	Lbym;	b	ownerPlayer
	f	Lgt;	c	goalPos
	f	I	d	onBedTicks
c	brm$c	net/minecraft/world/entity/animal/Cat$CatTemptGoal
	m	(Lbrm;DLciu;Z)V	<init>	<init>
		p	1		cat
		p	2		speed
		p	4		food
		p	5		canBeScared
	m	()Z	a	canUse
	m	()V	e	tick
	m	()Z	h	canScare
	f	Lbym;	c	selectedPlayer
	f	Lbrm;	d	cat
c	brn	net/minecraft/world/entity/animal/CatVariant
	m	()Ladd;	a	texture
	m	(Lhq;)Lbrn;	a	bootstrap
		p	0		registry
	m	(Lhq;Ladc;Ljava/lang/String;)Lbrn;	a	register
		p	0		registry
		p	1		key
		p	2		textureId
	m	(Ljava/lang/String;)Ladc;	a	createKey
		p	0		id
	f	Ladc;	a	TABBY
	f	Ladc;	b	BLACK
	f	Ladc;	c	RED
	f	Ladc;	d	SIAMESE
	f	Ladc;	e	BRITISH_SHORTHAIR
	f	Ladc;	f	CALICO
	f	Ladc;	g	PERSIAN
	f	Ladc;	h	RAGDOLL
	f	Ladc;	i	WHITE
	f	Ladc;	j	JELLIE
	f	Ladc;	k	ALL_BLACK
	f	Ladd;	l	texture
c	bro	net/minecraft/world/entity/animal/Chicken
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Laip;Lbfc;)Lbfc;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	aM	onFlap
	m	()Z	aN	isFlapping
	m	(Laip;Lbfc;)Lbro;	b	getBreedOffspring
	m	(Lbgj;Lbfi;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lgt;Ldbq;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()V	b_	aiStep
	m	(Lbem;)Lamq;	d	getHurtSound
		p	1		source
	m	()I	dX	getExperienceReward
	m	(D)Z	h	removeWhenFarAway
		p	1		distanceSquared
	m	(Lbfh;)V	i	positionRider
		p	1		passenger
	m	(Lcfv;)Z	m	isFood
		p	1		stack
	m	()Lbhd$a;	q	createAttributes
	m	()Z	r	isChickenJockey
	m	()Lamq;	s	getAmbientSound
	m	(Z)V	w	setChickenJockey
		p	1		hasJockey
	m	()V	x	registerGoals
	m	()Lamq;	x_	getDeathSound
	f	F	bS	flap
	f	F	bT	flapSpeed
	f	F	bV	oFlapSpeed
	f	F	bW	oFlap
	f	F	bX	flapping
	f	I	bY	eggTime
	f	Z	bZ	isChickenJockey
	f	Lciu;	ca	FOOD_ITEMS
	f	F	cb	nextFlap
c	brp	net/minecraft/world/entity/animal/Cod
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()Lcfv;	b	getBucketItemStack
	m	(Lbem;)Lamq;	d	getHurtSound
		p	1		source
	m	()Lamq;	fT	getFlopSound
	m	()Lamq;	s	getAmbientSound
	m	()Lamq;	x_	getDeathSound
c	brq	net/minecraft/world/entity/animal/Cow
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Laip;Lbfc;)Lbfc;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Laip;Lbfc;)Lbrq;	b	getBreedOffspring
	m	(Lbgj;Lbfi;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lbym;Lbdx;)Lbdy;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lgt;Ldbq;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lbem;)Lamq;	d	getHurtSound
		p	1		source
	m	()F	eN	getSoundVolume
	m	()Lbhd$a;	q	createAttributes
	m	()Lamq;	s	getAmbientSound
	m	()V	x	registerGoals
	m	()Lamq;	x_	getDeathSound
c	brr	net/minecraft/world/entity/animal/Dolphin
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()I	V	getMaxHeadXRot
	m	()I	W	getMaxHeadYRot
	m	(Lbrr;)Lapo;	a	access$000
	m	(Lbym;)Z	a	canBeLeashed
		p	1		player
	m	(Lcmi;)Lbph;	a	createNavigation
		p	1		world
	m	(Lcmx;Lbdw;Lbgb;Lbgr;Lre;)Lbgr;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lis;)V	a	addParticlesAroundSelf
		p	1		parameters
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()Lamq;	aI	getSwimSound
	m	()Lamq;	aJ	getSwimSplashSound
	m	()V	a_	defineSynchedData
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	(I)V	b	handleAirSupply
		p	1		air
	m	(Lbgj;Lbfi;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lbrr;)Lapo;	b	access$100
	m	(Lbvf;)V	b	pickUpItem
		p	1		item
	m	(Lbym;Lbdx;)Lbdy;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(I)V	c	setMoisntessLevel
		p	1		moistness
	m	(Lbrr;)Lapo;	c	access$200
	m	(Lbvf;)Z	c	lambda$static$0
		p	0		item
	m	()I	cc	getMaxAirSupply
	m	(Lbem;)Lamq;	d	getHurtSound
		p	1		source
	m	()Z	dK	canBreatheUnderwater
	m	(Lcfv;)Z	f	canTakeItem
		p	1		stack
	m	()Lbhd$a;	fS	createAttributes
	m	()Z	fT	closeToNextPos
	m	(Lgt;)V	g	setTreasurePos
		p	1		treasurePos
	m	(Lede;)V	h	travel
		p	1		movementInput
	m	()V	l	tick
	m	(Lbfh;)Z	l	canRide
		p	1		entity
	m	(I)I	m	increaseAirSupply
		p	1		air
	m	()Lgt;	q	getTreasurePos
	m	()Z	r	gotFish
	m	()Lamq;	s	getAmbientSound
	m	()I	w	getMoistnessLevel
	m	(Z)V	w	setGotFish
		p	1		hasFish
	m	()V	x	registerGoals
	m	()Lamq;	x_	getDeathSound
	m	(Lbfh;)Z	z	doHurtTarget
		p	1		target
	f	I	b	TOTAL_AIR_SUPPLY
	f	Lacl;	bS	MOISTNESS_LEVEL
	f	Lbqk;	bT	SWIM_WITH_PLAYER_TARGETING
	f	I	bU	TOTAL_MOISTNESS_LEVEL
	f	Ljava/util/function/Predicate;	c	ALLOWED_ITEMS
	f	Lacl;	d	TREASURE_POS
	f	Lacl;	e	GOT_FISH
c	brr$a	net/minecraft/world/entity/animal/Dolphin$DolphinSwimToTreasureGoal
	m	(Lbrr;)V	<init>	<init>
		p	1		dolphin
	m	()Z	I_	isInterruptable
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lbrr;	a	dolphin
	f	Z	b	stuck
c	brr$b	net/minecraft/world/entity/animal/Dolphin$DolphinSwimWithPlayerGoal
	m	(Lbrr;D)V	<init>	<init>
		p	1		dolphin
		p	2		speed
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lbrr;	a	dolphin
	f	D	b	speedModifier
	f	Lbym;	c	player
c	brr$c	net/minecraft/world/entity/animal/Dolphin$PlayWithItemsGoal
	m	()Z	a	canUse
	m	(Lcfv;)V	a	drop
		p	1		stack
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lbrr;	a	this$0
	f	I	b	cooldown
c	brs	net/minecraft/world/entity/animal/FlyingAnimal
	m	()Z	gf	isFlying
c	brt	net/minecraft/world/entity/animal/Fox
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Z)V	A	setFaceplanted
		p	1		walking
	m	(Z)V	B	setDefending
		p	1		aggressive
	m	(F)F	C	getHeadRollAngle
		p	1		tickDelta
	m	(Z)V	C	setSleeping
		p	1		sleeping
	m	(F)F	D	getCrouchAmount
		p	1		tickDelta
	m	()V	L	playAmbientSound
	m	(Laip;Lbfc;)Lbfc;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lapo;Lbdw;)V	a	populateDefaultEquipmentSlots
		p	1		random
		p	2		localDifficulty
	m	(Lbfh;)Z	a	lambda$static$3
		p	0		entity
	m	(Lbrt$v;)V	a	setVariant
		p	1		variant
	m	(Lbrt;)Z	a	access$000
	m	(Lbrt;Lbfx;)Z	a	isPathClear
		p	0		fox
		p	1		chasedEntity
	m	(Lbym;Lbdx;Lcfv;)V	a	usePlayerItem
		p	1		player
		p	2		hand
		p	3		stack
	m	(Lbym;Lbfz;)V	a	onOffspringSpawnedFromEgg
		p	1		player
		p	2		child
	m	(Lcmx;Lbdw;Lbgb;Lbgr;Lre;)Lbgr;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Ljava/lang/Object;)V	a	setVariant
		p	1		variant
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	(Laip;Lbfc;)Lbrt;	b	getBreedOffspring
	m	(Lbfh;)Z	b	lambda$static$2
		p	0		entity
	m	(Lbgj;Lbfi;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lbrt;)Lapo;	b	access$100
	m	(Lbvf;)V	b	pickUpItem
		p	1		item
	m	(Ljava/util/UUID;)V	b	addTrustedUUID
		p	1		uuid
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Z	bT	isCrouching
	m	()V	b_	aiStep
	m	()Ljava/lang/Object;	c	getVariant
	m	(Lbfh;)Z	c	lambda$static$1
		p	0		entity
	m	(Lbfl;Lcmj;Lbgb;Lgt;Lapo;)Z	c	checkFoxSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	(Lbrt;)Lapo;	c	access$200
	m	(Lbvf;)Z	c	lambda$static$0
		p	0		item
	m	(Ljava/util/UUID;)Z	c	trusts
		p	1		uuid
	m	()Lede;	cF	getLeashOffset
	m	(FF)I	d	calculateFallDamage
		p	1		fallDistance
		p	2		damageMultiplier
	m	(IZ)V	d	setFlag
		p	1		mask
		p	2		value
	m	(Lbem;)Lamq;	d	getHurtSound
		p	1		source
	m	(Lbrt;)Lapo;	d	access$300
	m	(Lcfv;)Lamq;	d	getEatingSound
		p	1		stack
	m	(Lbrt;)Z	e	access$400
	m	()Z	eP	isImmobile
	m	(Lbrt;)Z	f	access$500
	m	(Lcfv;)Z	f	canTakeItem
		p	1		stack
	m	()Z	fS	isFaceplanted
	m	()Z	fY	isPouncing
	m	()Z	fZ	isJumping
	m	()Z	fu	isSleeping
	m	(Lbem;)V	g	dropAllDeathLoot
		p	1		source
	m	()Z	ga	isFullyCrouched
	m	()Z	gb	isInterested
	m	()V	gc	setTargetGoals
	m	()Ljava/util/List;	gd	getTrustedUUIDs
	m	()Z	ge	isDefending
	m	()V	gf	wakeUp
	m	()V	gg	clearStates
	m	()Z	gh	canMove
	m	(Lbfx;)V	i	setTarget
		p	1		target
	m	(Lcfv;)Z	j	canHoldItem
		p	1		stack
	m	()V	l	tick
	m	(Lcfv;)Z	l	canEat
		p	1		stack
	m	(Lbfx;)Z	m	lambda$registerGoals$9
		p	1		entity
	m	(Lcfv;)Z	m	isFood
		p	1		stack
	m	(Lbfx;)Z	n	lambda$registerGoals$8
		p	1		entity
	m	(Lcfv;)V	n	spitOutItem
		p	1		stack
	m	(Lbfx;)Z	o	lambda$registerGoals$7
		p	1		entity
	m	(Lcfv;)V	o	dropItemStack
		p	1		stack
	m	(Lbfx;)Z	p	lambda$registerGoals$6
		p	1		entity
	m	()Lbhd$a;	q	createAttributes
	m	(Lbfx;)Z	q	lambda$registerGoals$5
		p	0		entity
	m	()Lbrt$v;	r	getVariant
	m	(Lbfx;)Z	r	lambda$registerGoals$4
		p	0		entity
	m	()Lamq;	s	getAmbientSound
	m	(I)Z	s	getFlag
		p	1		bitmask
	m	()Z	w	isSitting
	m	(Z)V	w	setSitting
		p	1		sitting
	m	()V	x	registerGoals
	m	(Z)V	x	setIsPouncing
		p	1		chasing
	m	()Lamq;	x_	getDeathSound
	m	(Z)V	y	setIsCrouching
		p	1		crouching
	m	(Z)V	z	setIsInterested
		p	1		rollingHead
	f	I	bS	FLAG_CROUCHING
	f	I	bT	FLAG_INTERESTED
	f	I	bV	FLAG_POUNCING
	f	Lacl;	bW	DATA_TYPE_ID
	f	Lacl;	bX	DATA_FLAGS_ID
	f	I	bY	FLAG_SITTING
	f	I	bZ	FLAG_SLEEPING
	f	I	ca	FLAG_FACEPLANTED
	f	I	cb	FLAG_DEFENDING
	f	Lacl;	cc	DATA_TRUSTED_ID_0
	f	Lacl;	cd	DATA_TRUSTED_ID_1
	f	Ljava/util/function/Predicate;	ce	ALLOWED_ITEMS
	f	Ljava/util/function/Predicate;	cf	TRUSTED_TARGET_SELECTOR
	f	Ljava/util/function/Predicate;	cg	STALKABLE_PREY
	f	Ljava/util/function/Predicate;	ch	AVOID_PLAYERS
	f	I	ci	MIN_TICKS_BEFORE_EAT
	f	Lbmt;	cj	landTargetGoal
	f	Lbmt;	ck	turtleEggTargetGoal
	f	Lbmt;	cl	fishTargetGoal
	f	F	cm	interestedAngle
	f	F	cn	interestedAngleO
	f	F	co	crouchAmount
	f	F	cp	crouchAmountO
	f	I	cq	ticksSinceEaten
c	brt$a	net/minecraft/world/entity/animal/Fox$DefendTrustedTargetGoal
	m	(Lbrt;Ljava/lang/Class;ZZLjava/util/function/Predicate;)V	<init>	<init>
		p	2		targetEntityClass
		p	3		checkVisibility
		p	4		checkCanNavigate
		p	5		targetPredicate
	m	()Z	a	canUse
	m	()V	c	start
	f	Lbrt;	i	this$0
	f	Lbfx;	j	trustedLastHurtBy
	f	Lbfx;	k	trustedLastHurt
	f	I	l	timestamp
c	brt$b	net/minecraft/world/entity/animal/Fox$FaceplantGoal
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	I	a	countdown
	f	Lbrt;	b	this$0
c	brt$c	net/minecraft/world/entity/animal/Fox$FoxAlertableEntitiesSelector
	m	(Lbfx;)Z	a	test
	f	Lbrt;	a	this$0
c	brt$d	net/minecraft/world/entity/animal/Fox$FoxBehaviorGoal
	m	()Z	h	hasShelter
	m	()Z	i	alertable
	f	Lbrt;	a	this$0
	f	Lbqk;	b	alertableTargeting
c	brt$e	net/minecraft/world/entity/animal/Fox$FoxBreedGoal
	m	(Lbrt;D)V	<init>	<init>
		p	2		chance
	m	()V	c	start
	m	()V	g	breed
	f	Lbrt;	d	this$0
c	brt$f	net/minecraft/world/entity/animal/Fox$FoxEatBerriesGoal
	m	(Lbrt;DII)V	<init>	<init>
		p	2		speed
		p	4		range
		p	5		maxYDifference
	m	()Z	a	canUse
	m	(Lcml;Lgt;)Z	a	isValidTarget
		p	1		world
		p	2		pos
	m	(Ldbq;)V	a	pickGlowBerry
		p	1		state
	m	(Ldbq;)V	b	pickSweetBerries
		p	1		state
	m	()V	c	start
	m	()V	e	tick
	m	()D	i	acceptedDistance
	m	()Z	l	shouldRecalculatePath
	m	()V	o	onReachedTarget
	f	I	g	ticksWaited
	f	Lbrt;	h	this$0
	f	I	i	WAIT_TICKS
c	brt$g	net/minecraft/world/entity/animal/Fox$FoxFloatGoal
	m	(Lbrt;)V	<init>	<init>
		p	1		mob
	m	()Z	a	canUse
	m	()V	c	start
	f	Lbrt;	a	this$0
c	brt$h	net/minecraft/world/entity/animal/Fox$FoxFollowParentGoal
	m	(Lbrt;Lbrt;D)V	<init>	<init>
		p	2		fox
		p	3		speed
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	f	Lbrt;	d	this$0
	f	Lbrt;	e	fox
c	brt$i	net/minecraft/world/entity/animal/Fox$FoxGroupData
	m	(Lbrt$v;)V	<init>	<init>
		p	1		type
	f	Lbrt$v;	a	type
c	brt$j	net/minecraft/world/entity/animal/Fox$FoxLookAtPlayerGoal
	m	(Lbrt;Lbfz;Ljava/lang/Class;F)V	<init>	<init>
		p	2		fox
		p	3		targetType
		p	4		range
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	f	Lbrt;	h	this$0
c	brt$k	net/minecraft/world/entity/animal/Fox$FoxLookControl
	m	(Lbrt;)V	<init>	<init>
		p	1		entity
	m	()V	a	tick
	m	()Z	c	resetXRotOnTick
	f	Lbrt;	h	this$0
c	brt$l	net/minecraft/world/entity/animal/Fox$FoxMeleeAttackGoal
	m	(Lbrt;DZ)V	<init>	<init>
		p	2		speed
		p	4		pauseWhenIdle
	m	()Z	a	canUse
	m	(Lbfx;D)V	a	checkAndPerformAttack
		p	1		target
		p	2		squaredDistance
	m	()V	c	start
	f	Lbrt;	b	this$0
c	brt$m	net/minecraft/world/entity/animal/Fox$FoxMoveControl
	m	(Lbrt;)V	<init>	<init>
		p	1		entity
	m	()V	a	tick
	f	Lbrt;	l	this$0
c	brt$n	net/minecraft/world/entity/animal/Fox$FoxPanicGoal
	m	(Lbrt;D)V	<init>	<init>
		p	2		speed
	m	()Z	h	shouldPanic
	f	Lbrt;	h	this$0
c	brt$o	net/minecraft/world/entity/animal/Fox$FoxPounceGoal
	m	()Z	I_	isInterruptable
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lbrt;	a	this$0
c	brt$p	net/minecraft/world/entity/animal/Fox$FoxSearchForItemsGoal
	m	()Z	a	canUse
	m	()V	c	start
	m	()V	e	tick
	f	Lbrt;	a	this$0
c	brt$q	net/minecraft/world/entity/animal/Fox$FoxStrollThroughVillageGoal
	m	(Lbrt;II)V	<init>	<init>
		p	2		unused
		p	3		searchRange
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()Z	h	canFoxMove
	f	Lbrt;	a	this$0
c	brt$r	net/minecraft/world/entity/animal/Fox$PerchAndSearchGoal
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	m	()V	k	resetLook
	f	Lbrt;	b	this$0
	f	D	c	relX
	f	D	d	relZ
	f	I	e	lookTime
	f	I	f	looksRemaining
c	brt$s	net/minecraft/world/entity/animal/Fox$SeekShelterGoal
	m	(Lbrt;D)V	<init>	<init>
		p	2		speed
	m	()Z	a	canUse
	m	()V	c	start
	f	Lbrt;	b	this$0
	f	I	c	interval
c	brt$t	net/minecraft/world/entity/animal/Fox$SleepGoal
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()Z	k	canSleep
	f	Lbrt;	b	this$0
	f	I	c	WAIT_TIME_BEFORE_SLEEP
	f	I	d	countdown
c	brt$u	net/minecraft/world/entity/animal/Fox$StalkPreyGoal
	m	()Z	a	canUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lbrt;	a	this$0
c	brt$v	net/minecraft/world/entity/animal/Fox$Type
	m	(Ljava/lang/String;IILjava/lang/String;)V	<init>	<init>
		p	3		id
		p	4		key
	m	()I	a	getId
	m	(I)Lbrt$v;	a	byId
		p	0		id
	m	(Lhd;)Lbrt$v;	a	byBiome
		p	0		biome
	m	(Ljava/lang/String;)Lbrt$v;	a	byName
		p	0		name
	m	()[Lbrt$v;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lbrt$v;	a	RED
	f	Lbrt$v;	b	SNOW
	f	Laqa$a;	c	CODEC
	f	Ljava/util/function/IntFunction;	d	BY_ID
	f	I	e	id
	f	Ljava/lang/String;	f	name
	f	[Lbrt$v;	g	$VALUES
c	bru	net/minecraft/world/entity/animal/FrogVariant
	m	()Ladd;	a	texture
	m	(Ljava/lang/String;Ljava/lang/String;)Lbru;	a	register
		p	0		id
		p	1		textureId
	f	Lbru;	a	TEMPERATE
	f	Lbru;	b	WARM
	f	Lbru;	c	COLD
	f	Ladd;	d	texture
c	brv	net/minecraft/world/entity/animal/IronGolem
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lbfh;)V	A	doPush
		p	1		entity
	m	()I	a	getRemainingPersistentAngerTime
	m	(I)V	a	setRemainingPersistentAngerTime
		p	1		angerTime
	m	(Lbem;)V	a	die
		p	1		damageSource
	m	(Lbem;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbfl;)Z	a	canAttackType
		p	1		type
	m	(Lcml;)Z	a	checkSpawnObstruction
		p	1		world
	m	(Ljava/util/UUID;)V	a	setPersistentAngerTarget
		p	1		angryAt
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	()Ljava/util/UUID;	b	getPersistentAngerTarget
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	(Lbym;Lbdx;)Lbdy;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lgt;Ldbq;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()V	b_	aiStep
	m	()V	c	startPersistentAngerTimer
	m	()Lede;	cF	getLeashOffset
	m	(Lbem;)Lamq;	d	getHurtSound
		p	1		source
	m	()I	fS	getOfferFlowerTick
	m	()Z	fT	isPlayerCreated
	m	()F	fU	getAttackDamage
	m	(I)I	l	decreaseAirSupply
		p	1		air
	m	(Lbfx;)Z	m	lambda$registerGoals$0
		p	0		entity
	m	()Lbhd$a;	q	createAttributes
	m	()Lbrv$a;	r	getCrackiness
	m	()I	w	getAttackAnimationTick
	m	(Z)V	w	offerFlower
		p	1		lookingAtVillager
	m	()V	x	registerGoals
	m	(Z)V	x	setPlayerCreated
		p	1		playerCreated
	m	()Lamq;	x_	getDeathSound
	m	(Lbfh;)Z	z	doHurtTarget
		p	1		target
	f	I	bS	offerFlowerTick
	f	Lbdj;	bT	PERSISTENT_ANGER_TIME
	f	I	bU	remainingPersistentAngerTime
	f	Ljava/util/UUID;	bV	persistentAngerTarget
	f	Lacl;	c	DATA_FLAGS_ID
	f	I	d	IRON_INGOT_HEAL_AMOUNT
	f	I	e	attackAnimationTick
c	brv$a	net/minecraft/world/entity/animal/IronGolem$Crackiness
	m	(Ljava/lang/String;IF)V	<init>	<init>
		p	3		maxHealthFraction
	m	()[Lbrv$a;	a	$values
	m	(F)Lbrv$a;	a	byFraction
		p	0		healthFraction
	m	(Lbrv$a;)D	a	lambda$static$0
	f	Lbrv$a;	a	NONE
	f	Lbrv$a;	b	LOW
	f	Lbrv$a;	c	MEDIUM
	f	Lbrv$a;	d	HIGH
	f	Ljava/util/List;	e	BY_DAMAGE
	f	F	f	fraction
	f	[Lbrv$a;	g	$VALUES
c	brw	net/minecraft/world/entity/animal/MushroomCow
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()Z	a	readyForShearing
	m	(Laip;Lbfc;)Lbfc;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Laip;Lbfw;)V	a	thunderHit
		p	1		world
		p	2		lightning
	m	(Lams;)V	a	shear
		p	1		shearedSoundCategory
	m	(Lbdx;Lbym;)V	a	lambda$mobInteract$0
		p	1		player
	m	(Lbrw$a;)V	a	setVariant
		p	1		variant
	m	(Lbrw;)Lbrw$a;	a	getOffspringType
		p	1		mooshroom
	m	(Lgt;Lcml;)F	a	getWalkTargetValue
		p	1		pos
		p	2		world
	m	(Ljava/lang/Object;)V	a	setVariant
		p	1		variant
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(Laip;Lbfc;)Lbrq;	b	getBreedOffspring
	m	(Lbym;Lbdx;)Lbdy;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Ljava/lang/Object;	c	getVariant
	m	(Laip;Lbfc;)Lbrw;	c	getBreedOffspring
	m	(Lbfl;Lcmj;Lbgb;Lgt;Lapo;)Z	c	checkMushroomSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	(Lcfv;)Ljava/util/Optional;	l	getEffectFromItemStack
		p	1		flower
	m	()Lbrw$a;	r	getVariant
	f	Lacl;	bS	DATA_TYPE
	f	I	bT	MUTATE_CHANCE
	f	Lbew;	bV	effect
	f	I	bW	effectDuration
	f	Ljava/util/UUID;	bX	lastLightningBoltUUID
c	brw$a	net/minecraft/world/entity/animal/MushroomCow$MushroomType
	m	(Ljava/lang/String;ILjava/lang/String;Ldbq;)V	<init>	<init>
		p	3		name
		p	4		mushroom
	m	()Ldbq;	a	getBlockState
	m	(Ljava/lang/String;)Lbrw$a;	a	byType
		p	0		name
	m	()[Lbrw$a;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lbrw$a;	a	RED
	f	Lbrw$a;	b	BROWN
	f	Laqa$a;	c	CODEC
	f	Ljava/lang/String;	d	type
	f	Ldbq;	e	blockState
	f	[Lbrw$a;	f	$VALUES
c	brx	net/minecraft/world/entity/animal/Ocelot
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()I	K	getAmbientSoundInterval
	m	()V	U	customServerAiStep
	m	(Laip;Lbfc;)Lbfc;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lcml;)Z	a	checkSpawnObstruction
		p	1		world
	m	(Lcmx;Lbdw;Lbgb;Lbgr;Lre;)Lbgr;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	(Laip;Lbfc;)Lbrx;	b	getBreedOffspring
	m	(Lbym;Lbdx;)Lbdy;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Z	bP	isSteppingCarefully
	m	(Lbfl;Lcmj;Lbgb;Lgt;Lapo;)Z	c	checkOcelotSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	()Lede;	cF	getLeashOffset
	m	(Lbem;)Lamq;	d	getHurtSound
		p	1		source
	m	()F	fS	getAttackDamage
	m	(D)Z	h	removeWhenFarAway
		p	1		distanceSquared
	m	(Lcfv;)Z	m	isFood
		p	1		stack
	m	()Lbhd$a;	q	createAttributes
	m	()V	r	reassessTrustingGoals
	m	()Lamq;	s	getAmbientSound
	m	()Z	w	isTrusting
	m	(Z)V	w	setTrusting
		p	1		trusting
	m	()V	x	registerGoals
	m	(Z)V	x	spawnTrustingParticles
		p	1		positive
	m	()Lamq;	x_	getDeathSound
	m	(Lbfh;)Z	z	doHurtTarget
		p	1		target
	f	D	bS	CROUCH_SPEED_MOD
	f	D	bT	WALK_SPEED_MOD
	f	D	bV	SPRINT_SPEED_MOD
	f	Lciu;	bW	TEMPT_INGREDIENT
	f	Lacl;	bX	DATA_TRUSTING
	f	Lbrx$a;	bY	ocelotAvoidPlayersGoal
	f	Lbrx$b;	bZ	temptGoal
c	brx$a	net/minecraft/world/entity/animal/Ocelot$OcelotAvoidEntityGoal
	m	(Lbrx;Ljava/lang/Class;FDD)V	<init>	<init>
		p	1		ocelot
		p	2		fleeFromType
		p	3		distance
		p	4		slowSpeed
		p	6		fastSpeed
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	f	Lbrx;	i	ocelot
c	brx$b	net/minecraft/world/entity/animal/Ocelot$OcelotTemptGoal
	m	(Lbrx;DLciu;Z)V	<init>	<init>
		p	1		ocelot
		p	2		speed
		p	4		food
		p	5		canBeScared
	m	()Z	h	canScare
	f	Lbrx;	c	ocelot
c	bry	net/minecraft/world/entity/animal/Panda
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Z)V	A	roll
		p	1		playing
	m	(F)F	C	getSitAmount
		p	1		tickDelta
	m	(F)F	D	getLieOnBackAmount
		p	1		tickDelta
	m	(F)F	E	getRollAmount
		p	1		tickDelta
	m	(Laip;Lbfc;)Lbfc;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lbem;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbry$a;)V	a	setMainGene
		p	1		gene
	m	(Lbry;)Z	a	access$000
	m	(Lbry;Lbry;)V	a	setGeneFromParents
		p	1		mother
		p	2		father
	m	(Lbym;)Z	a	canBeLeashed
		p	1		player
	m	(Lcmx;Lbdw;Lbgb;Lbgr;Lre;)Lbgr;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(Lbry$a;)V	b	setHiddenGene
		p	1		gene
	m	(Lbry;)Lapo;	b	access$100
	m	(Lbvf;)V	b	pickUpItem
		p	1		item
	m	(Lbym;Lbdx;)Lbdy;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lgt;Ldbq;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lbry;)Lapo;	c	access$200
	m	(Lbvf;)Z	c	lambda$static$0
		p	0		item
	m	(IZ)V	d	setFlag
		p	1		mask
		p	2		value
	m	(Lbem;)Lamq;	d	getHurtSound
		p	1		source
	m	(Lbry;)Lapo;	d	access$300
	m	(Lbry;)Lapo;	e	access$400
	m	(Lbry;)Lapo;	f	access$500
	m	(Lcfv;)Z	f	canTakeItem
		p	1		stack
	m	()Z	fM	isAggressive
	m	()Z	fS	isOnBack
	m	()Z	fY	isEating
	m	()I	fZ	getSneezeCounter
	m	(Lbry;)Lapo;	g	access$600
	m	()Lbry$a;	ga	getMainGene
	m	()Lbry$a;	gb	getHiddenGene
	m	()Z	gc	isRolling
	m	()Lbhd$a;	gd	createAttributes
	m	()Lbry$a;	ge	getVariant
	m	()Z	gf	isLazy
	m	()Z	gg	isWorried
	m	()Z	gh	isPlayful
	m	()Z	gi	isBrown
	m	()Z	gj	isWeak
	m	()Z	gk	isScared
	m	()V	gl	setAttributes
	m	()Z	gm	canPerformAction
	m	()I	gn	getEatCounter
	m	()V	go	handleEating
	m	()V	gp	addEatingParticles
	m	()V	gq	updateSitAmount
	m	()V	gr	updateOnBackAnimation
	m	()V	gs	updateRollAmount
	m	()V	gt	handleRoll
	m	()V	gu	afterSneeze
	m	()Lbry$a;	gv	getOneOfGenesRandomly
	m	()V	gw	tryToSit
	m	(Lbry;)Lapo;	h	access$700
	m	(Lbry;)Lapo;	i	access$800
	m	(Lbry;)Lapo;	j	access$900
	m	(Lbry;)Lapo;	k	access$1000
	m	()V	l	tick
	m	(Lbry;)Lapo;	l	access$1100
	m	(Lcfv;)Z	l	isFoodOrCake
		p	1		stack
	m	(Lcfv;)Z	m	isFood
		p	1		stack
	m	()I	q	getUnhappyCounter
	m	()Z	r	isSneezing
	m	()Lamq;	s	getAmbientSound
	m	(I)V	s	setUnhappyCounter
		p	1		askForBambooTicks
	m	(I)V	t	setSneezeCounter
		p	1		sneezeProgress
	m	(I)V	u	setEatCounter
		p	1		eatingTicks
	m	(I)Z	v	getFlag
		p	1		bitmask
	m	()Z	w	isSitting
	m	(Z)V	w	sit
		p	1		sitting
	m	()V	x	registerGoals
	m	(Z)V	x	setOnBack
		p	1		lyingOnBack
	m	()Lamq;	x_	getDeathSound
	m	(Z)V	y	eat
		p	1		eating
	m	(Lbfh;)Z	z	doHurtTarget
		p	1		target
	m	(Z)V	z	sneeze
		p	1		sneezing
	f	I	bS	TOTAL_ROLL_STEPS
	f	I	bT	rollCounter
	f	Lacl;	bV	UNHAPPY_COUNTER
	f	Lacl;	bW	SNEEZE_COUNTER
	f	Lacl;	bX	EAT_COUNTER
	f	Lacl;	bY	MAIN_GENE_ID
	f	Lacl;	bZ	HIDDEN_GENE_ID
	f	Lacl;	ca	DATA_ID_FLAGS
	f	Lbqk;	cb	BREED_TARGETING
	f	I	cc	FLAG_SNEEZE
	f	I	cd	FLAG_ROLL
	f	I	ce	FLAG_SIT
	f	I	cf	FLAG_ON_BACK
	f	I	cg	EAT_TICK_INTERVAL
	f	I	ch	TOTAL_UNHAPPY_TIME
	f	Z	ci	gotBamboo
	f	Z	cj	didBite
	f	Lede;	ck	rollDelta
	f	F	cl	sitAmount
	f	F	cm	sitAmountO
	f	F	cn	onBackAmount
	f	F	co	onBackAmountO
	f	F	cp	rollAmount
	f	F	cq	rollAmountO
	f	Lbry$g;	cr	lookAtPlayerGoal
	f	Ljava/util/function/Predicate;	cs	PANDA_ITEMS
c	bry$a	net/minecraft/world/entity/animal/Panda$Gene
	m	(Ljava/lang/String;IILjava/lang/String;Z)V	<init>	<init>
		p	3		id
		p	4		name
		p	5		recessive
	m	()I	a	getId
	m	(I)Lbry$a;	a	byId
		p	0		id
	m	(Lapo;)Lbry$a;	a	getRandom
		p	0		random
	m	(Lbry$a;Lbry$a;)Lbry$a;	a	getVariantFromGenes
		p	0		mainGene
		p	1		hiddenGene
	m	(Ljava/lang/String;)Lbry$a;	a	byName
		p	0		name
	m	()Z	b	isRecessive
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Lbry$a;	d	$values
	f	Lbry$a;	a	NORMAL
	f	Lbry$a;	b	LAZY
	f	Lbry$a;	c	WORRIED
	f	Lbry$a;	d	PLAYFUL
	f	Lbry$a;	e	BROWN
	f	Lbry$a;	f	WEAK
	f	Lbry$a;	g	AGGRESSIVE
	f	Laqa$a;	h	CODEC
	f	Ljava/util/function/IntFunction;	i	BY_ID
	f	I	j	MAX_GENE
	f	I	k	id
	f	Ljava/lang/String;	l	name
	f	Z	m	isRecessive
	f	[Lbry$a;	n	$VALUES
c	bry$b	net/minecraft/world/entity/animal/Panda$PandaAttackGoal
	m	(Lbry;DZ)V	<init>	<init>
		p	1		panda
		p	2		speed
		p	4		pauseWhenMobIdle
	m	()Z	a	canUse
	f	Lbry;	b	panda
c	bry$c	net/minecraft/world/entity/animal/Panda$PandaAvoidGoal
	m	(Lbry;Ljava/lang/Class;FDD)V	<init>	<init>
		p	1		panda
		p	2		fleeFromType
		p	3		distance
		p	4		slowSpeed
		p	6		fastSpeed
	m	()Z	a	canUse
	f	Lbry;	i	panda
c	bry$d	net/minecraft/world/entity/animal/Panda$PandaBreedGoal
	m	(Lbry;D)V	<init>	<init>
		p	1		panda
		p	2		chance
	m	()Z	a	canUse
	m	()Z	h	canFindBamboo
	f	Lbry;	d	panda
	f	I	e	unhappyCooldown
c	bry$e	net/minecraft/world/entity/animal/Panda$PandaHurtByTargetGoal
	m	(Lbry;[Ljava/lang/Class;)V	<init>	<init>
		p	1		panda
		p	2		noRevengeTypes
	m	(Lbfz;Lbfx;)V	a	alertOther
		p	1		mob
		p	2		target
	m	()Z	b	canContinueToUse
	f	Lbry;	a	panda
c	bry$f	net/minecraft/world/entity/animal/Panda$PandaLieOnBackGoal
	m	(Lbry;)V	<init>	<init>
		p	1		panda
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	f	Lbry;	a	panda
	f	I	b	cooldown
c	bry$g	net/minecraft/world/entity/animal/Panda$PandaLookAtPlayerGoal
	m	(Lbry;Ljava/lang/Class;F)V	<init>	<init>
		p	1		panda
		p	2		targetType
		p	3		range
	m	()Z	a	canUse
	m	(Lbfx;)V	a	setTarget
		p	1		target
	m	()Z	b	canContinueToUse
	m	(Lbfx;)Z	b	lambda$canUse$0
	m	()V	e	tick
	f	Lbry;	h	panda
c	bry$h	net/minecraft/world/entity/animal/Panda$PandaMoveControl
	m	(Lbry;)V	<init>	<init>
		p	1		panda
	m	()V	a	tick
	f	Lbry;	l	panda
c	bry$i	net/minecraft/world/entity/animal/Panda$PandaPanicGoal
	m	(Lbry;D)V	<init>	<init>
		p	1		panda
		p	2		speed
	m	()Z	b	canContinueToUse
	m	()Z	h	shouldPanic
	f	Lbry;	h	panda
c	bry$j	net/minecraft/world/entity/animal/Panda$PandaRollGoal
	m	(Lbry;)V	<init>	<init>
		p	1		panda
	m	()Z	I_	isInterruptable
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	f	Lbry;	a	panda
c	bry$k	net/minecraft/world/entity/animal/Panda$PandaSitGoal
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lbry;	a	this$0
	f	I	b	cooldown
c	bry$l	net/minecraft/world/entity/animal/Panda$PandaSneezeGoal
	m	(Lbry;)V	<init>	<init>
		p	1		panda
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	f	Lbry;	a	panda
c	brz	net/minecraft/world/entity/animal/Parrot
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lbfh;)V	A	doPush
		p	1		entity
	m	(DZLdbq;Lgt;)V	a	checkFallDamage
		p	1		heightDifference
		p	3		onGround
		p	4		state
		p	5		landedPosition
	m	(Laip;Lbfc;)Lbfc;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lapo;)F	a	getPitch
		p	0		random
	m	(Lbem;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbrj;)Z	a	canMate
		p	1		other
	m	(Lbrz$b;)V	a	setVariant
		p	1		variant
	m	(Lcmi;)Lbph;	a	createNavigation
		p	1		world
	m	(Lcmi;Lapo;)Lamq;	a	getAmbient
		p	0		world
		p	1		random
	m	(Lcmi;Lbfh;)Z	a	imitateNearbyMobs
		p	0		world
		p	1		parrot
	m	(Lcmx;Lbdw;Lbgb;Lbgr;Lre;)Lbgr;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lgt;Z)V	a	setRecordPlayingNearby
		p	1		songPosition
		p	2		playing
	m	(Ljava/lang/Object;)V	a	setVariant
		p	1		variant
	m	(Ljava/util/HashMap;)V	a	lambda$static$0
		p	0		map
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	aM	onFlap
	m	()Z	aN	isFlapping
	m	()V	a_	defineSynchedData
	m	(Lbfl;)Lamq;	b	getImitatedSound
		p	0		imitate
	m	(Lbgj;Lbfi;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lbym;Lbdx;)Lbdy;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lgt;Ldbq;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()V	b_	aiStep
	m	()Z	bn	isPushable
	m	()Ljava/lang/Object;	c	getVariant
	m	(Lbfl;Lcmj;Lbgb;Lgt;Lapo;)Z	c	checkParrotSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	()Lede;	cF	getLeashOffset
	m	()Lams;	cX	getSoundSource
	m	(Lbem;)Lamq;	d	getHurtSound
		p	1		source
	m	()F	eO	getVoicePitch
	m	()Lbhd$a;	fY	createAttributes
	m	()Z	fZ	isPartyParrot
	m	()Lbrz$b;	ga	getVariant
	m	()V	gc	calculateFlapping
	m	()Z	gf	isFlying
	m	(Lcfv;)Z	m	isFood
		p	1		stack
	m	()Lamq;	s	getAmbientSound
	m	()V	x	registerGoals
	m	()Lamq;	x_	getDeathSound
	m	()Z	y_	isBaby
	m	(Lbfh;)Z	z	doHurtTarget
		p	1		target
	f	F	bV	flap
	f	F	bW	flapSpeed
	f	F	bX	oFlapSpeed
	f	F	bY	oFlap
	f	Lacl;	bZ	DATA_VARIANT_ID
	f	Ljava/util/function/Predicate;	ca	NOT_PARROT_PREDICATE
	f	Lcfq;	cb	POISONOUS_FOOD
	f	Ljava/util/Set;	cc	TAME_FOOD
	f	Ljava/util/Map;	cd	MOB_SOUND_MAP
	f	F	ce	flapping
	f	F	cf	nextFlap
	f	Z	cg	partyParrot
	f	Lgt;	ch	jukebox
c	brz$1	net/minecraft/world/entity/animal/Parrot$1
	m	(Lbfz;)Z	a	test
c	brz$a	net/minecraft/world/entity/animal/Parrot$ParrotWanderGoal
	m	(Lbgg;D)V	<init>	<init>
		p	1		mob
		p	2		speed
	m	()Lede;	h	getPosition
	m	()Lede;	k	getTreePos
c	brz$b	net/minecraft/world/entity/animal/Parrot$Variant
	m	(Ljava/lang/String;IILjava/lang/String;)V	<init>	<init>
		p	3		id
		p	4		name
	m	()I	a	getId
	m	(I)Lbrz$b;	a	byId
		p	0		index
	m	()[Lbrz$b;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lbrz$b;	a	RED_BLUE
	f	Lbrz$b;	b	BLUE
	f	Lbrz$b;	c	GREEN
	f	Lbrz$b;	d	YELLOW_BLUE
	f	Lbrz$b;	e	GRAY
	f	Lcom/mojang/serialization/Codec;	f	CODEC
	f	Ljava/util/function/IntFunction;	g	BY_ID
	f	I	h	id
	f	Ljava/lang/String;	i	name
	f	[Lbrz$b;	j	$VALUES
c	bsa	net/minecraft/world/entity/animal/Pig
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()Z	a	boost
	m	(Lacl;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Laip;Lbfc;)Lbfc;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Laip;Lbfw;)V	a	thunderHit
		p	1		world
		p	2		lightning
	m	(Lams;)V	a	equipSaddle
		p	1		sound
	m	(Lbfx;Lede;)V	a	tickRidden
		p	1		controllingPassenger
		p	2		movementInput
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(Laip;Lbfc;)Lbsa;	b	getBreedOffspring
	m	(Lbfx;)Lede;	b	getDismountLocationForPassenger
		p	1		passenger
	m	(Lbfx;Lede;)Lede;	b	getRiddenInput
		p	1		controllingPassenger
		p	2		movementInput
	m	(Lbym;Lbdx;)Lbdy;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lgt;Ldbq;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Lede;	cF	getLeashOffset
	m	()Lbfx;	cK	getControllingPassenger
	m	(Lbem;)Lamq;	d	getHurtSound
		p	1		source
	m	()V	er	dropEquipment
	m	()Z	g	isSaddleable
	m	(Lbfx;)F	g	getRiddenSpeed
		p	1		controllingPassenger
	m	()Z	i	isSaddled
	m	(Lcfv;)Z	m	isFood
		p	1		stack
	m	()Lbhd$a;	q	createAttributes
	m	()Lamq;	s	getAmbientSound
	m	()V	x	registerGoals
	m	()Lamq;	x_	getDeathSound
	f	Lacl;	bS	DATA_SADDLE_ID
	f	Lacl;	bT	DATA_BOOST_TIME
	f	Lciu;	bV	FOOD_ITEMS
	f	Lbft;	bW	steering
c	bsb	net/minecraft/world/entity/animal/PolarBear
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(F)F	C	getStandingAnimationScale
		p	1		tickDelta
	m	()I	a	getRemainingPersistentAngerTime
	m	(I)V	a	setRemainingPersistentAngerTime
		p	1		angerTime
	m	(Laip;Lbfc;)Lbfc;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lbgj;)Lbfi;	a	getDimensions
		p	1		pose
	m	(Lcmx;Lbdw;Lbgb;Lbgr;Lre;)Lbgr;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Ljava/util/UUID;)V	a	setPersistentAngerTarget
		p	1		angryAt
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	()Ljava/util/UUID;	b	getPersistentAngerTarget
	m	(Lgt;Ldbq;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()V	c	startPersistentAngerTimer
	m	(Lbfl;Lcmj;Lbgb;Lgt;Lapo;)Z	c	checkPolarBearSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	(Lbem;)Lamq;	d	getHurtSound
		p	1		source
	m	()F	eU	getWaterSlowDown
	m	()V	l	tick
	m	(Lcfv;)Z	m	isFood
		p	1		stack
	m	()Lbhd$a;	q	createAttributes
	m	()V	r	playWarningSound
	m	()Lamq;	s	getAmbientSound
	m	()Z	w	isStanding
	m	(Z)V	w	setStanding
		p	1		warning
	m	()V	x	registerGoals
	m	()Lamq;	x_	getDeathSound
	m	(Lbfh;)Z	z	doHurtTarget
		p	1		target
	f	Lacl;	bS	DATA_STANDING_ID
	f	F	bT	STAND_ANIMATION_TICKS
	f	F	bV	clientSideStandAnimationO
	f	F	bW	clientSideStandAnimation
	f	I	bX	warningSoundTicks
	f	Lbdj;	bY	PERSISTENT_ANGER_TIME
	f	I	bZ	remainingPersistentAngerTime
	f	Ljava/util/UUID;	ca	persistentAngerTarget
c	bsb$a	net/minecraft/world/entity/animal/PolarBear$PolarBearAttackPlayersGoal
	m	(Lbsb;)V	<init>	<init>
		p	1		mob
	m	()Z	a	canUse
	m	()D	l	getFollowDistance
	f	Lbsb;	i	this$0
c	bsb$b	net/minecraft/world/entity/animal/PolarBear$PolarBearHurtByTargetGoal
	m	(Lbsb;)V	<init>	<init>
		p	1		mob
	m	(Lbfz;Lbfx;)V	a	alertOther
		p	1		mob
		p	2		target
	m	()V	c	start
	f	Lbsb;	a	this$0
c	bsb$c	net/minecraft/world/entity/animal/PolarBear$PolarBearMeleeAttackGoal
	m	(Lbsb;)V	<init>	<init>
		p	1		mob
	m	(Lbfx;)D	a	getAttackReachSqr
		p	1		entity
	m	(Lbfx;D)V	a	checkAndPerformAttack
		p	1		target
		p	2		squaredDistance
	m	()V	d	stop
	f	Lbsb;	b	this$0
c	bsb$d	net/minecraft/world/entity/animal/PolarBear$PolarBearPanicGoal
	m	(Lbsb;)V	<init>	<init>
		p	1		mob
	m	()Z	h	shouldPanic
	f	Lbsb;	h	this$0
c	bsc	net/minecraft/world/entity/animal/Pufferfish
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lacl;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Lbfz;)V	a	touch
		p	1		mob
	m	(Lbgj;)Lbfi;	a	getDimensions
		p	1		pose
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	()Lcfv;	b	getBucketItemStack
	m	(Lbfz;)Z	b	lambda$aiStep$1
		p	1		entity
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()V	b_	aiStep
	m	(Lbym;)V	b_	playerTouch
		p	1		player
	m	(I)V	c	setPuffState
		p	1		puffState
	m	(Lbem;)Lamq;	d	getHurtSound
		p	1		source
	m	()Lamq;	fT	getFlopSound
	m	()I	fU	getPuffState
	m	()V	l	tick
	m	(Lbfx;)Z	m	lambda$static$0
		p	0		entity
	m	(I)F	r	getScale
		p	0		puffState
	m	()Lamq;	s	getAmbientSound
	m	()V	x	registerGoals
	m	()Lamq;	x_	getDeathSound
	f	I	b	STATE_SMALL
	f	I	bS	inflateCounter
	f	I	bT	deflateTimer
	f	Ljava/util/function/Predicate;	bU	SCARY_MOB
	f	Lbqk;	bV	targetingConditions
	f	I	c	STATE_MID
	f	I	d	STATE_FULL
	f	Lacl;	e	PUFF_STATE
c	bsc$a	net/minecraft/world/entity/animal/Pufferfish$PufferfishPuffGoal
	m	(Lbsc;)V	<init>	<init>
		p	1		pufferfish
	m	()Z	a	canUse
	m	(Lbfx;)Z	a	lambda$canUse$0
	m	()V	c	start
	m	()V	d	stop
	f	Lbsc;	a	fish
c	bsd	net/minecraft/world/entity/animal/Rabbit
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(F)F	C	getJumpCompletion
		p	1		delta
	m	()V	U	customServerAiStep
	m	(Laip;Lbfc;)Lbfc;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lbsd$h;)V	a	setVariant
		p	1		variant
	m	(Lbsd;)Z	a	access$000
	m	(Lcmj;Lgt;)Lbsd$h;	a	getRandomRabbitVariant
		p	0		world
		p	1		pos
	m	(Lcmx;Lbdw;Lbgb;Lbgr;Lre;)Lbgr;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Ljava/lang/Object;)V	a	setVariant
		p	1		variant
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	(Laip;Lbfc;)Lbsd;	b	getBreedOffspring
	m	(Lbsd;)Z	b	access$100
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()V	b_	aiStep
	m	()Z	be	canSpawnSprintParticle
	m	()Ljava/lang/Object;	c	getVariant
	m	(DD)V	c	facePoint
		p	1		x
		p	3		z
	m	(Lbfl;Lcmj;Lbgb;Lgt;Lapo;)Z	c	checkRabbitSpawnRules
		p	0		entity
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	(Lbsd;)Lblu;	c	access$200
	m	()Lede;	cF	getLeashOffset
	m	()Lams;	cX	getSoundSource
	m	(Lbem;)Lamq;	d	getHurtSound
		p	1		source
	m	()F	eQ	getJumpPower
	m	()V	eS	jumpFromGround
	m	()Lbsd$h;	fS	getVariant
	m	()V	fY	enableJumpControl
	m	()V	fZ	disableJumpControl
	m	()V	ga	setLandingDelay
	m	()V	gb	checkLandingDelay
	m	()Z	gc	wantsMoreFood
	m	(D)V	i	setSpeedModifier
		p	1		speed
	m	(Lcfv;)Z	l	isTemptingItem
		p	0		stack
	m	(Lcfv;)Z	m	isFood
		p	1		stack
	m	()V	q	startJumping
	m	()Lbhd$a;	r	createAttributes
	m	(Z)V	r	setJumping
		p	1		jumping
	m	()Lamq;	s	getAmbientSound
	m	()Lamq;	w	getJumpSound
	m	()V	x	registerGoals
	m	()Lamq;	x_	getDeathSound
	m	(Lbfh;)Z	z	doHurtTarget
		p	1		target
	f	D	bS	STROLL_SPEED_MOD
	f	D	bT	BREED_SPEED_MOD
	f	D	bV	FOLLOW_SPEED_MOD
	f	D	bW	FLEE_SPEED_MOD
	f	D	bX	ATTACK_SPEED_MOD
	f	I	bY	EVIL_ATTACK_POWER
	f	I	bZ	EVIL_ARMOR_VALUE
	f	Lacl;	ca	DATA_TYPE_ID
	f	Ladd;	cb	KILLER_BUNNY
	f	I	cc	MORE_CARROTS_DELAY
	f	I	cd	jumpTicks
	f	I	ce	jumpDuration
	f	Z	cf	wasOnGround
	f	I	cg	jumpDelayTicks
	f	I	ch	moreCarrotTicks
c	bsd$a	net/minecraft/world/entity/animal/Rabbit$EvilRabbitAttackGoal
	m	(Lbsd;)V	<init>	<init>
		p	1		rabbit
	m	(Lbfx;)D	a	getAttackReachSqr
		p	1		entity
c	bsd$b	net/minecraft/world/entity/animal/Rabbit$RabbitAvoidEntityGoal
	m	(Lbsd;Ljava/lang/Class;FDD)V	<init>	<init>
		p	1		rabbit
		p	2		fleeFromType
		p	3		distance
		p	4		slowSpeed
		p	6		fastSpeed
	m	()Z	a	canUse
	f	Lbsd;	i	rabbit
c	bsd$c	net/minecraft/world/entity/animal/Rabbit$RabbitGroupData
	m	(Lbsd$h;)V	<init>	<init>
		p	1		type
	f	Lbsd$h;	a	variant
c	bsd$d	net/minecraft/world/entity/animal/Rabbit$RabbitJumpControl
	m	(Lbsd;)V	<init>	<init>
		p	1		rabbit
	m	(Z)V	a	setCanJump
		p	1		canJump
	m	()V	b	tick
	m	()Z	c	wantJump
	m	()Z	d	canJump
	f	Lbsd;	b	rabbit
	f	Z	c	canJump
c	bsd$e	net/minecraft/world/entity/animal/Rabbit$RabbitMoveControl
	m	(Lbsd;)V	<init>	<init>
		p	1		owner
	m	()V	a	tick
	m	(DDDD)V	a	setWantedPosition
		p	1		x
		p	3		y
		p	5		z
		p	7		speed
	f	Lbsd;	l	rabbit
	f	D	m	nextJumpSpeed
c	bsd$f	net/minecraft/world/entity/animal/Rabbit$RabbitPanicGoal
	m	(Lbsd;D)V	<init>	<init>
		p	1		rabbit
		p	2		speed
	m	()V	e	tick
	f	Lbsd;	h	rabbit
c	bsd$g	net/minecraft/world/entity/animal/Rabbit$RaidGardenGoal
	m	(Lbsd;)V	<init>	<init>
		p	1		rabbit
	m	()Z	a	canUse
	m	(Lcml;Lgt;)Z	a	isValidTarget
		p	1		world
		p	2		pos
	m	()Z	b	canContinueToUse
	m	()V	e	tick
	f	Lbsd;	g	rabbit
	f	Z	h	wantsToRaid
	f	Z	i	canRaid
c	bsd$h	net/minecraft/world/entity/animal/Rabbit$Variant
	m	(Ljava/lang/String;IILjava/lang/String;)V	<init>	<init>
		p	3		id
		p	4		name
	m	()I	a	id
	m	(I)Lbsd$h;	a	byId
		p	0		id
	m	()[Lbsd$h;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lbsd$h;	a	BROWN
	f	Lbsd$h;	b	WHITE
	f	Lbsd$h;	c	BLACK
	f	Lbsd$h;	d	WHITE_SPLOTCHED
	f	Lbsd$h;	e	GOLD
	f	Lbsd$h;	f	SALT
	f	Lbsd$h;	g	EVIL
	f	Lcom/mojang/serialization/Codec;	h	CODEC
	f	Ljava/util/function/IntFunction;	i	BY_ID
	f	I	j	id
	f	Ljava/lang/String;	k	name
	f	[Lbsd$h;	l	$VALUES
c	bse	net/minecraft/world/entity/animal/Salmon
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()Lcfv;	b	getBucketItemStack
	m	(Lbem;)Lamq;	d	getHurtSound
		p	1		source
	m	()Lamq;	fT	getFlopSound
	m	()I	fU	getMaxSchoolSize
	m	()Lamq;	s	getAmbientSound
	m	()Lamq;	x_	getDeathSound
c	bsf	net/minecraft/world/entity/animal/Sheep
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(F)F	C	getHeadEatPositionScale
		p	1		delta
	m	(F)F	D	getHeadEatAngleScale
		p	1		delta
	m	()V	J	ate
	m	()Ladd;	O	getDefaultLootTable
	m	()V	U	customServerAiStep
	m	()Z	a	readyForShearing
	m	(Laip;Lbfc;)Lbfc;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lams;)V	a	shear
		p	1		shearedSoundCategory
	m	(Lapo;)Lcel;	a	getRandomSheepColor
		p	0		random
	m	(Lbdx;Lbym;)V	a	lambda$mobInteract$2
		p	1		player
	m	(Lbrj;Lbrj;)Lcel;	a	getOffspringColor
		p	1		firstParent
		p	2		secondParent
	m	(Lcbr;Lcio;)Lcfv;	a	lambda$getOffspringColor$3
		p	2		recipe
	m	(Lcel;)[F	a	getColorArray
		p	0		dyeColor
	m	(Lcel;Lcel;)Lcbr;	a	makeContainer
		p	0		firstColor
		p	1		secondColor
	m	(Lcmx;Lbdw;Lbgb;Lbgr;Lre;)Lbgr;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Ljava/util/EnumMap;)V	a	lambda$static$0
		p	0		map
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	(Laip;Lbfc;)Lbsf;	b	getBreedOffspring
	m	(Lbgj;Lbfi;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lbym;Lbdx;)Lbdy;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lcel;)V	b	setColor
		p	1		color
	m	(Lcel;Lcel;)Lcel;	b	lambda$getOffspringColor$4
	m	(Lgt;Ldbq;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()V	b_	aiStep
	m	(Lcel;)[F	c	createSheepColor
		p	0		color
	m	(Lbem;)Lamq;	d	getHurtSound
		p	1		source
	m	(Lcel;)Lcel;	d	lambda$static$1
		p	0		color
	m	()Lbhd$a;	q	createAttributes
	m	()Lcel;	r	getColor
	m	()Lamq;	s	getAmbientSound
	m	()Z	w	isSheared
	m	(Z)V	w	setSheared
		p	1		sheared
	m	()V	x	registerGoals
	m	()Lamq;	x_	getDeathSound
	f	I	bS	EAT_ANIMATION_TICKS
	f	Lacl;	bT	DATA_WOOL_ID
	f	Ljava/util/Map;	bV	ITEM_BY_DYE
	f	Ljava/util/Map;	bW	COLORARRAY_BY_COLOR
	f	I	bX	eatAnimationTick
	f	Lbml;	bY	eatBlockGoal
c	bsf$1	net/minecraft/world/entity/animal/Sheep$1
	m	(Lccj;I)V	<init>	<init>
		p	1		type
		p	2		syncId
	m	(Lbym;)Z	a	stillValid
		p	1		player
	m	(Lbym;I)Lcfv;	a	quickMoveStack
		p	1		player
		p	2		slot
c	bsf$2	net/minecraft/world/entity/animal/Sheep$2
	f	[I	a	$SwitchMap$net$minecraft$world$item$DyeColor
c	bsg	net/minecraft/world/entity/animal/ShoulderRidingEntity
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Laiq;)Z	b	setEntityOnShoulder
		p	1		player
	m	()Z	gb	canSitOnShoulder
	m	()V	l	tick
	f	I	bV	RIDE_COOLDOWN
	f	I	bW	rideCooldownCounter
c	bsh	net/minecraft/world/entity/animal/SnowGolem
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()Z	a	readyForShearing
	m	(Lams;)V	a	shear
		p	1		shearedSoundCategory
	m	(Lbdx;Lbym;)V	a	lambda$mobInteract$1
		p	1		player
	m	(Lbfx;F)V	a	performRangedAttack
		p	1		target
		p	2		pullProgress
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(Lbgj;Lbfi;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lbym;Lbdx;)Lbdy;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()V	b_	aiStep
	m	()Lede;	cF	getLeashOffset
	m	(Lbem;)Lamq;	d	getHurtSound
		p	1		source
	m	()Z	eX	isSensitiveToWater
	m	(Lbfx;)Z	m	lambda$registerGoals$0
		p	0		entity
	m	()Lbhd$a;	q	createAttributes
	m	()Z	r	hasPumpkin
	m	()Lamq;	s	getAmbientSound
	m	(Z)V	w	setPumpkin
		p	1		hasPumpkin
	m	()V	x	registerGoals
	m	()Lamq;	x_	getDeathSound
	f	Lacl;	b	DATA_PUMPKIN_ID
	f	B	c	PUMPKIN_FLAG
	f	F	d	EYE_HEIGHT
c	bsi	net/minecraft/world/entity/animal/Squid
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(FFF)V	a	setMovementVector
		p	1		x
		p	2		y
		p	3		z
	m	(Lbem;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbsi;)Z	a	access$000
	m	(Lbym;)Z	a	canBeLeashed
		p	1		player
	m	()Lbfh$b;	aQ	getMovementEmission
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	(Lbgj;Lbfi;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	()V	b_	aiStep
	m	(Lbem;)Lamq;	d	getHurtSound
		p	1		source
	m	()F	eN	getSoundVolume
	m	()Lbhd$a;	fS	createAttributes
	m	()Z	fT	hasMovementVector
	m	(Lede;)V	h	travel
		p	1		movementInput
	m	(Lede;)Lede;	j	rotateVector
		p	1		shootVector
	m	()Lis;	q	getInkParticle
	m	()Lamq;	r	getSquirtSound
	m	()Lamq;	s	getAmbientSound
	m	()V	w	spawnInk
	m	()V	x	registerGoals
	m	()Lamq;	x_	getDeathSound
	f	F	b	xBodyRot
	f	F	bS	tentacleMovement
	f	F	bT	oldTentacleMovement
	f	F	bU	tentacleAngle
	f	F	bV	oldTentacleAngle
	f	F	bW	speed
	f	F	bX	tentacleSpeed
	f	F	bY	rotateSpeed
	f	F	bZ	tx
	f	F	c	xBodyRotO
	f	F	ca	ty
	f	F	cb	tz
	f	F	d	zBodyRot
	f	F	e	zBodyRotO
c	bsi$a	net/minecraft/world/entity/animal/Squid$SquidFleeGoal
	m	()Z	J_	requiresUpdateEveryTick
	m	()Z	a	canUse
	m	()V	c	start
	m	()V	e	tick
	f	Lbsi;	a	this$0
	f	F	b	SQUID_FLEE_SPEED
	f	F	c	SQUID_FLEE_MIN_DISTANCE
	f	F	d	SQUID_FLEE_MAX_DISTANCE
	f	I	e	fleeTicks
c	bsi$b	net/minecraft/world/entity/animal/Squid$SquidRandomMovementGoal
	m	(Lbsi;Lbsi;)V	<init>	<init>
		p	2		squid
	m	()Z	a	canUse
	m	()V	e	tick
	f	Lbsi;	a	this$0
	f	Lbsi;	b	squid
c	bsj	net/minecraft/world/entity/animal/TropicalFish
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lbsj$b;)V	a	setVariant
		p	1		variant
	m	(Lbsj$b;Lcel;Lcel;)I	a	packVariant
		p	0		variety
		p	1		baseColor
		p	2		patternColor
	m	(Lcmx;Lbdw;Lbgb;Lbgr;Lre;)Lbgr;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Ljava/lang/Object;)V	a	setVariant
		p	1		variant
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	()Lcfv;	b	getBucketItemStack
	m	(Lbfl;Lcmj;Lbgb;Lgt;Lapo;)Z	b	checkTropicalFishSpawnRules
		p	0		type
		p	1		world
		p	2		reason
		p	3		pos
		p	4		random
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Ljava/lang/Object;	c	getVariant
	m	(I)Ljava/lang/String;	c	getPredefinedName
		p	0		variant
	m	(I)Z	d	isMaxGroupSizeReached
		p	1		count
	m	(Lbem;)Lamq;	d	getHurtSound
		p	1		source
	m	()Lamq;	fT	getFlopSound
	m	()Lcel;	gb	getBaseColor
	m	()Lcel;	gc	getPatternColor
	m	()Lbsj$b;	gd	getVariant
	m	()I	ge	getPackedVariant
	m	(Lcfv;)V	l	saveToBucketTag
		p	1		stack
	m	(I)Lcel;	r	getBaseColor
		p	0		variant
	m	()Lamq;	s	getAmbientSound
	m	(I)Lcel;	s	getPatternColor
		p	0		variant
	m	(I)Lbsj$b;	t	getPattern
		p	0		variant
	m	(I)V	u	setPackedVariant
		p	1		variant
	m	()Lamq;	x_	getDeathSound
	f	Ljava/lang/String;	b	BUCKET_VARIANT_TAG
	f	Ljava/util/List;	c	COMMON_VARIANTS
	f	Lacl;	d	DATA_ID_TYPE_VARIANT
	f	Z	e	isSchool
c	bsj$a	net/minecraft/world/entity/animal/TropicalFish$Base
	m	(Ljava/lang/String;II)V	<init>	<init>
		p	3		id
	m	()[Lbsj$a;	a	$values
	f	Lbsj$a;	a	SMALL
	f	Lbsj$a;	b	LARGE
	f	I	c	id
	f	[Lbsj$a;	d	$VALUES
c	bsj$b	net/minecraft/world/entity/animal/TropicalFish$Pattern
	m	(Ljava/lang/String;ILjava/lang/String;Lbsj$a;I)V	<init>	<init>
		p	3		name
		p	4		size
		p	5		id
	m	()Lbsj$a;	a	base
	m	(I)Lbsj$b;	a	byId
		p	0		id
	m	()I	b	getPackedId
	m	()Ljava/lang/String;	c	getSerializedName
	m	()Ltj;	d	displayName
	m	()[Lbsj$b;	e	$values
	f	Lbsj$b;	a	KOB
	f	Lbsj$b;	b	SUNSTREAK
	f	Lbsj$b;	c	SNOOPER
	f	Lbsj$b;	d	DASHER
	f	Lbsj$b;	e	BRINELY
	f	Lbsj$b;	f	SPOTTY
	f	Lbsj$b;	g	FLOPPER
	f	Lbsj$b;	h	STRIPEY
	f	Lbsj$b;	i	GLITTER
	f	Lbsj$b;	j	BLOCKFISH
	f	Lbsj$b;	k	BETTY
	f	Lbsj$b;	l	CLAYFISH
	f	Lcom/mojang/serialization/Codec;	m	CODEC
	f	Ljava/util/function/IntFunction;	n	BY_ID
	f	Ljava/lang/String;	o	name
	f	Ltj;	p	displayName
	f	Lbsj$a;	q	base
	f	I	r	packedId
	f	[Lbsj$b;	s	$VALUES
c	bsj$c	net/minecraft/world/entity/animal/TropicalFish$TropicalFishGroupData
	m	(Lbsj;Lbsj$d;)V	<init>	<init>
		p	1		leader
		p	2		variant
	f	Lbsj$d;	b	variant
c	bsj$d	net/minecraft/world/entity/animal/TropicalFish$Variant
	m	()I	a	getPackedId
	m	()Lbsj$b;	b	pattern
	m	()Lcel;	c	baseColor
	m	()Lcel;	d	patternColor
	f	Lbsj$b;	a	pattern
	f	Lcel;	b	baseColor
	f	Lcel;	c	patternColor
c	bsk	net/minecraft/world/entity/animal/Turtle
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()I	K	getAmbientSoundInterval
	m	(Laip;Lbfc;)Lbfc;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Laip;Lbfw;)V	a	thunderHit
		p	1		world
		p	2		lightning
	m	(Lbsk;)Lapo;	a	access$000
	m	(Lbym;)Z	a	canBeLeashed
		p	1		player
	m	(Lcmi;)Lbph;	a	createNavigation
		p	1		world
	m	(Lcmx;Lbdw;Lbgb;Lbgr;Lre;)Lbgr;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lgt;Lcml;)F	a	getWalkTargetValue
		p	1		pos
		p	2		world
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()F	aH	nextStep
	m	()Lamq;	aI	getSwimSound
	m	()V	a_	defineSynchedData
	m	(Lbsk;)Lapo;	b	access$100
	m	(Lgt;Ldbq;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()V	b_	aiStep
	m	(Lbfl;Lcmj;Lbgb;Lgt;Lapo;)Z	c	checkTurtleSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	(Lbsk;)Z	c	access$200
	m	()Z	cv	isPushedByFluid
	m	(Lbem;)Lamq;	d	getHurtSound
		p	1		source
	m	()Z	dK	canBreatheUnderwater
	m	()F	dS	getScale
	m	()Lbgc;	eJ	getMobType
	m	()Lgt;	fS	getHomePos
	m	()Z	fT	canFallInLove
	m	()Lgt;	fY	getTravelPos
	m	()Z	fZ	isGoingHome
	m	(Lgt;)V	g	setHomePos
		p	1		pos
	m	()Z	ga	isTravelling
	m	(Lede;)V	h	travel
		p	1		movementInput
	m	(Lgt;)V	h	setTravelPos
		p	1		pos
	m	(F)V	i	playSwimSound
		p	1		volume
	m	()V	m	ageBoundaryReached
	m	(Lbfx;)Z	m	lambda$static$0
		p	0		entity
	m	(Lcfv;)Z	m	isFood
		p	1		stack
	m	()Z	q	hasEgg
	m	()Z	r	isLayingEgg
	m	()Lamq;	s	getAmbientSound
	m	()Lbhd$a;	w	createAttributes
	m	(Z)V	w	setHasEgg
		p	1		hasEgg
	m	()V	x	registerGoals
	m	(Z)V	x	setLayingEgg
		p	1		diggingSand
	m	()Lamq;	x_	getDeathSound
	m	(Z)V	y	setGoingHome
		p	1		landBound
	m	(Z)V	z	setTravelling
		p	1		traveling
	f	Lciu;	bS	FOOD_ITEMS
	f	Ljava/util/function/Predicate;	bT	BABY_ON_LAND_SELECTOR
	f	Lacl;	bV	HOME_POS
	f	Lacl;	bW	HAS_EGG
	f	Lacl;	bX	LAYING_EGG
	f	Lacl;	bY	TRAVEL_POS
	f	Lacl;	bZ	GOING_HOME
	f	Lacl;	ca	TRAVELLING
	f	I	cb	layEggCounter
c	bsk$a	net/minecraft/world/entity/animal/Turtle$TurtleBreedGoal
	m	(Lbsk;D)V	<init>	<init>
		p	1		turtle
		p	2		speed
	m	()Z	a	canUse
	m	()V	g	breed
	f	Lbsk;	d	turtle
c	bsk$b	net/minecraft/world/entity/animal/Turtle$TurtleGoHomeGoal
	m	(Lbsk;D)V	<init>	<init>
		p	1		turtle
		p	2		speed
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lbsk;	a	turtle
	f	D	b	speedModifier
	f	Z	c	stuck
	f	I	d	closeToHomeTryTicks
	f	I	e	GIVE_UP_TICKS
c	bsk$c	net/minecraft/world/entity/animal/Turtle$TurtleGoToWaterGoal
	m	(Lbsk;D)V	<init>	<init>
		p	1		turtle
		p	2		speed
	m	()Z	a	canUse
	m	(Lcml;Lgt;)Z	a	isValidTarget
		p	1		world
		p	2		pos
	m	()Z	b	canContinueToUse
	m	()Z	l	shouldRecalculatePath
	f	I	g	GIVE_UP_TICKS
	f	Lbsk;	h	turtle
c	bsk$d	net/minecraft/world/entity/animal/Turtle$TurtleLayEggGoal
	m	(Lbsk;D)V	<init>	<init>
		p	1		turtle
		p	2		speed
	m	()Z	a	canUse
	m	(Lcml;Lgt;)Z	a	isValidTarget
		p	1		world
		p	2		pos
	m	()Z	b	canContinueToUse
	m	()V	e	tick
	f	Lbsk;	g	turtle
c	bsk$e	net/minecraft/world/entity/animal/Turtle$TurtleMoveControl
	m	(Lbsk;)V	<init>	<init>
		p	1		turtle
	m	()V	a	tick
	m	()V	g	updateSpeed
	f	Lbsk;	l	turtle
c	bsk$f	net/minecraft/world/entity/animal/Turtle$TurtlePanicGoal
	m	(Lbsk;D)V	<init>	<init>
		p	1		turtle
		p	2		speed
	m	()Z	a	canUse
c	bsk$g	net/minecraft/world/entity/animal/Turtle$TurtlePathNavigation
	m	(Lbsk;Lcmi;)V	<init>	<init>
		p	1		owner
		p	2		world
	m	(Lgt;)Z	a	isStableDestination
		p	1		pos
c	bsk$h	net/minecraft/world/entity/animal/Turtle$TurtleRandomStrollGoal
	m	(Lbsk;DI)V	<init>	<init>
		p	1		turtle
		p	2		speed
		p	4		chance
	m	()Z	a	canUse
	f	Lbsk;	i	turtle
c	bsk$i	net/minecraft/world/entity/animal/Turtle$TurtleTravelGoal
	m	(Lbsk;D)V	<init>	<init>
		p	1		turtle
		p	2		speed
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lbsk;	a	turtle
	f	D	b	speedModifier
	f	Z	c	stuck
c	bsl	net/minecraft/world/entity/animal/WaterAnimal
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()I	K	getAmbientSoundInterval
	m	(Lbym;)Z	a	canBeLeashed
		p	1		player
	m	(Lcml;)Z	a	checkSpawnObstruction
		p	1		world
	m	()V	ao	baseTick
	m	(I)V	b	handleAirSupply
		p	1		air
	m	(Lbfl;Lcmj;Lbgb;Lgt;Lapo;)Z	c	checkSurfaceWaterAnimalSpawnRules
		p	0		type
		p	1		world
		p	2		reason
		p	3		pos
		p	4		random
	m	()Z	cv	isPushedByFluid
	m	()Z	dK	canBreatheUnderwater
	m	()I	dX	getExperienceReward
	m	()Lbgc;	eJ	getMobType
c	bsm	net/minecraft/world/entity/animal/Wolf
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Z)V	A	setIsInterested
		p	1		begging
	m	(F)F	C	getWetShade
		p	1		tickDelta
	m	(F)F	D	getHeadRollAngle
		p	1		tickDelta
	m	()I	V	getMaxHeadXRot
	m	()I	a	getRemainingPersistentAngerTime
	m	(I)V	a	setRemainingPersistentAngerTime
		p	1		angerTime
	m	(Laip;Lbfc;)Lbfc;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lbem;)V	a	die
		p	1		damageSource
	m	(Lbem;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbfx;Lbfx;)Z	a	wantsToAttack
		p	1		target
		p	2		owner
	m	(Lbrj;)Z	a	canMate
		p	1		other
	m	(Lbsm;)Lapo;	a	access$000
	m	(Lbym;)Z	a	canBeLeashed
		p	1		player
	m	(Lcel;)V	a	setCollarColor
		p	1		color
	m	(Ljava/util/UUID;)V	a	setPersistentAngerTarget
		p	1		angryAt
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	()Ljava/util/UUID;	b	getPersistentAngerTarget
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	(Laip;Lbfc;)Lbsm;	b	getBreedOffspring
	m	(Lbgj;Lbfi;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lbym;Lbdx;)Lbdy;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lgt;Ldbq;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()V	b_	aiStep
	m	()V	c	startPersistentAngerTimer
	m	(Lbfl;Lcmj;Lbgb;Lgt;Lapo;)Z	c	checkWolfSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	()Lede;	cF	getLeashOffset
	m	(Lbem;)Lamq;	d	getHurtSound
		p	1		source
	m	()F	eN	getSoundVolume
	m	(FF)F	f	getBodyRollAngle
		p	1		tickDelta
	m	()Lbhd$a;	fY	createAttributes
	m	()Z	fZ	isWet
	m	()I	fy	getMaxSpawnClusterSize
	m	()F	ga	getTailAngle
	m	()Lcel;	gb	getCollarColor
	m	()Z	gc	isInterested
	m	()V	gd	cancelShake
	m	()V	l	tick
	m	(Lcfv;)Z	m	isFood
		p	1		stack
	m	(Lbfx;)Z	n	lambda$static$0
		p	0		entity
	m	()Lamq;	s	getAmbientSound
	m	()V	x	registerGoals
	m	(Z)V	x	setTame
		p	1		tamed
	m	()Lamq;	x_	getDeathSound
	m	(Lbfh;)Z	z	doHurtTarget
		p	1		target
	f	Ljava/util/function/Predicate;	bV	PREY_SELECTOR
	f	Lacl;	bW	DATA_INTERESTED_ID
	f	Lacl;	bX	DATA_COLLAR_COLOR
	f	Lacl;	bY	DATA_REMAINING_ANGER_TIME
	f	F	bZ	START_HEALTH
	f	F	ca	TAME_HEALTH
	f	F	cb	interestedAngle
	f	F	cc	interestedAngleO
	f	Z	cd	isWet
	f	Z	ce	isShaking
	f	F	cf	shakeAnim
	f	F	cg	shakeAnimO
	f	Lbdj;	ch	PERSISTENT_ANGER_TIME
	f	Ljava/util/UUID;	ci	persistentAngerTarget
c	bsm$a	net/minecraft/world/entity/animal/Wolf$WolfAvoidEntityGoal
	m	(Lbsm;Lbsm;Ljava/lang/Class;FDD)V	<init>	<init>
		p	2		wolf
		p	3		fleeFromType
		p	4		distance
		p	5		slowSpeed
		p	7		fastSpeed
	m	()Z	a	canUse
	m	(Lbtl;)Z	a	avoidLlama
		p	1		llama
	m	()V	c	start
	m	()V	e	tick
	f	Lbsm;	i	this$0
	f	Lbsm;	j	wolf
c	bsm$b	net/minecraft/world/entity/animal/Wolf$WolfPanicGoal
	m	(Lbsm;D)V	<init>	<init>
		p	2		speed
	m	()Z	h	shouldPanic
	f	Lbsm;	h	this$0
c	bsn	net/minecraft/world/entity/animal/allay/Allay
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(F)F	C	getHoldingItemAnimationProgress
	m	(F)F	D	getSpinningProgress
	m	()Lhy;	P	getPickupReach
	m	()V	T	sendDebugPackets
	m	()V	U	customServerAiStep
	m	(DZLdbq;Lgt;)V	a	checkFallDamage
		p	1		heightDifference
		p	3		onGround
		p	4		state
		p	5		landedPosition
	m	(Lbem;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbym;Lcfv;)V	a	removeInteractionItem
		p	1		player
		p	2		stack
	m	(Lcfv;Lcfv;)Z	a	equipmentHasChanged
		p	1		stack
		p	2		stack2
	m	(Lcmi;)Lbph;	a	createNavigation
		p	1		world
	m	(Lcom/mojang/serialization/Dynamic;)Lbgy;	a	makeBrain
		p	1		dynamic
	m	(Ldgi;)V	a	lambda$readAdditionalSaveData$1
	m	(Ljava/util/function/BiConsumer;)V	a	updateDynamicGameEventListener
		p	1		callback
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lre;Lrx;)V	a	lambda$addAdditionalSaveData$0
	m	()Z	aN	isFlapping
	m	()V	a_	defineSynchedData
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	(Lbgj;Lbfi;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lbvf;)V	b	pickUpItem
		p	1		item
	m	(Lbym;Lbdx;)Lbdy;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lgt;Ldbq;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lgt;Z)V	b	setJukeboxPlaying
		p	1		jukeboxPos
		p	2		playing
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()V	b_	aiStep
	m	()D	bu	getMyRidingOffset
	m	()Lede;	cF	getLeashOffset
	m	(Lbem;)Lamq;	d	getHurtSound
		p	1		source
	m	(Lcfv;Lcfv;)Z	d	allayConsidersItemEqual
		p	1		stack
		p	2		stack2
	m	()Lbgy;	dH	getBrain
	m	()Lbgy$b;	dI	brainProvider
	m	(Lcfv;Lcfv;)Z	e	hasNonMatchingPotion
		p	1		stack
		p	2		stack2
	m	()F	eN	getSoundVolume
	m	()V	er	dropEquipment
	m	(Lcfv;)Z	f	canTakeItem
		p	1		stack
	m	()Z	fA	canPickUpLoot
	m	()Z	fQ	shouldStayCloseToLeashHolder
	m	()Z	fS	isDancing
	m	()Z	fT	isPanicking
	m	()Z	fU	isSpinning
	m	()Z	fV	isOnPickupCooldown
	m	()Z	fW	shouldStopDancing
	m	()V	fX	updateDuplicationCooldown
	m	()V	fY	duplicateAllay
	m	()V	fZ	resetDuplicationCooldown
	m	()Z	ga	canDuplicate
	m	()V	gb	spawnHeartParticle
	m	(D)Z	h	removeWhenFarAway
		p	1		distanceSquared
	m	(Lede;)V	h	travel
		p	1		movementInput
	m	(Lcfv;)Z	k	wantsToPickUp
		p	1		stack
	m	()V	l	tick
	m	(Lcfv;)Z	l	isDuplicationItem
		p	1		stack
	m	()Lbhd$a;	q	createAttributes
	m	()Z	r	hasItemInHand
	m	()Lamq;	s	getAmbientSound
	m	()Lbed;	w	getInventory
	m	(Z)V	w	setDancing
		p	1		dancing
	m	()Lamq;	x_	getDeathSound
	f	Lcom/google/common/collect/ImmutableList;	b	SENSOR_TYPES
	f	I	bS	VIBRATION_EVENT_LISTENER_RANGE
	f	Lhy;	bT	ITEM_PICKUP_REACH
	f	I	bU	LIFTING_ITEM_ANIMATION_DURATION
	f	F	bV	DANCING_LOOP_DURATION
	f	F	bW	SPINNING_ANIMATION_DURATION
	f	Lciu;	bX	DUPLICATION_ITEM
	f	I	bY	DUPLICATION_COOLDOWN_TICKS
	f	I	bZ	NUM_OF_DUPLICATION_HEARTS
	f	Lcom/google/common/collect/ImmutableList;	c	MEMORY_TYPES
	f	D	ca	RIDING_OFFSET
	f	Lacl;	cb	DATA_DANCING
	f	Lacl;	cc	DATA_CAN_DUPLICATE
	f	Ldfx;	cd	dynamicVibrationListener
	f	Ldgi$a;	ce	vibrationListenerConfig
	f	Ldfx;	cf	dynamicJukeboxListener
	f	Lbed;	cg	inventory
	f	Lgt;	ch	jukeboxPos
	f	J	ci	duplicationCooldown
	f	F	cj	holdingItemAnimationTicks
	f	F	ck	holdingItemAnimationTicks0
	f	F	cl	dancingAnimationTicks
	f	F	cm	spinningAnimationTicks
	f	F	cn	spinningAnimationTicks0
	f	Lcom/google/common/collect/ImmutableList;	d	THROW_SOUND_PITCHES
	f	Lorg/slf4j/Logger;	e	LOGGER
c	bsn$a	net/minecraft/world/entity/animal/allay/Allay$AllayVibrationListenerConfig
	m	()Lanv;	a	getListenableEvents
	m	(Laip;Ldgc;Lgt;Ldga;Lbfh;Lbfh;F)V	a	onSignalReceive
		p	1		world
		p	2		listener
		p	3		pos
		p	4		event
		p	5		entity
		p	6		sourceEntity
		p	7		distance
	m	(Laip;Ldgc;Lgt;Ldga;Ldga$a;)Z	a	shouldListen
		p	1		world
		p	2		listener
		p	3		pos
		p	4		event
		p	5		emitter
	f	Lbsn;	a	this$0
c	bsn$b	net/minecraft/world/entity/animal/allay/Allay$JukeboxListener
	m	(Lbsn;Ldge;I)V	<init>	<init>
		p	2		positionSource
		p	3		range
	m	()Ldge;	a	getListenerSource
	m	(Laip;Ldga;Ldga$a;Lede;)Z	a	handleGameEvent
		p	1		world
		p	2		event
		p	3		emitter
		p	4		emitterPos
	m	()I	b	getListenerRadius
	f	Lbsn;	a	this$0
	f	Ldge;	b	listenerSource
	f	I	c	listenerRadius
c	bso	net/minecraft/world/entity/animal/allay/AllayAi
	m	(Laiq;)Lbjc;	a	lambda$getLikedPlayerPositionTracker$1
		p	0		player
	m	(Lbfx;)Ljava/util/Optional;	a	getLikedPlayer
		p	0		allay
	m	(Lbfx;Lbgy;Lhc;)Z	a	shouldDepositItemsAtLikedNoteblock
		p	0		allay
		p	1		brain
		p	2		pos
	m	(Lbfx;Lgt;)V	a	hearNoteblock
		p	0		allay
		p	1		pos
	m	(Lbgy;)Lbgy;	a	makeBrain
		p	0		brain
	m	(Lbsn;)V	a	updateActivity
		p	0		allay
	m	(Lbfx;)Ljava/util/Optional;	b	getItemDepositPosition
		p	0		allay
	m	(Lbgy;)V	b	initCoreActivity
		p	0		brain
	m	(Lbsn;)Z	b	lambda$initIdleActivity$0
		p	0		allay
	m	(Lbfx;)Z	c	hasWantedItem
		p	0		entity
	m	(Lbgy;)V	c	initIdleActivity
		p	0		brain
	m	(Lbfx;)Ljava/util/Optional;	d	getLikedPlayerPositionTracker
		p	0		allay
	f	F	a	SPEED_MULTIPLIER_WHEN_IDLING
	f	F	b	SPEED_MULTIPLIER_WHEN_FOLLOWING_DEPOSIT_TARGET
	f	F	c	SPEED_MULTIPLIER_WHEN_RETRIEVING_ITEM
	f	F	d	SPEED_MULTIPLIER_WHEN_PANICKING
	f	I	e	CLOSE_ENOUGH_TO_TARGET
	f	I	f	TOO_FAR_FROM_TARGET
	f	I	g	MAX_LOOK_DISTANCE
	f	I	h	MIN_WAIT_DURATION
	f	I	i	MAX_WAIT_DURATION
	f	I	j	TIME_TO_FORGET_NOTEBLOCK
	f	I	k	DISTANCE_TO_WANTED_ITEM
	f	I	l	GIVE_ITEM_TIMEOUT_DURATION
c	bsp	net/minecraft/world/entity/animal/allay/package-info
c	bsq	net/minecraft/world/entity/animal/axolotl/Axolotl
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	L	playAmbientSound
	m	()Z	Q	requiresCustomPersistence
	m	()V	T	sendDebugPackets
	m	()V	U	customServerAiStep
	m	()I	V	getMaxHeadXRot
	m	()I	W	getMaxHeadYRot
	m	()Ljava/util/Map;	a	getModelRotationValues
	m	(Laip;Lbfc;)Lbfc;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lapo;)Z	a	useRareVariant
		p	0		random
	m	(Lbem;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbfl;Lcmx;Lbgb;Lgt;Lapo;)Z	a	checkAxolotlSpawnRules
		p	0		type
		p	1		world
		p	2		reason
		p	3		pos
		p	4		random
	m	(Lbsq$d;)V	a	setVariant
		p	1		variant
	m	(Lbsq;Lbfx;)V	a	onStopAttacking
		p	0		axolotl
		p	1		entity
	m	(Lbym;)Z	a	canBeLeashed
		p	1		player
	m	(Lbym;Lbdx;Lcfv;)V	a	usePlayerItem
		p	1		player
		p	2		hand
		p	3		stack
	m	(Lcmi;)Lbph;	a	createNavigation
		p	1		world
	m	(Lcml;)Z	a	checkSpawnObstruction
		p	1		world
	m	(Lcmx;Lbdw;Lbgb;Lbgr;Lre;)Lbgr;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lcom/mojang/serialization/Dynamic;)Lbgy;	a	makeBrain
		p	1		dynamic
	m	(Lgt;Lcml;)F	a	getWalkTargetValue
		p	1		pos
		p	2		world
	m	(Ljava/lang/Object;)V	a	setVariant
		p	1		variant
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()Lamq;	aI	getSwimSound
	m	()Lamq;	aJ	getSwimSplashSound
	m	()V	a_	defineSynchedData
	m	()V	ao	baseTick
	m	()Lcfv;	b	getBucketItemStack
	m	(Lbgj;Lbfi;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lbym;Lbdx;)Lbdy;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Ljava/lang/Object;	c	getVariant
	m	(Lre;)V	c	loadFromBucketTag
		p	1		nbt
	m	()I	cc	getMaxAirSupply
	m	()Z	cv	isPushedByFluid
	m	(Lbem;)Lamq;	d	getHurtSound
		p	1		source
	m	()Lbgy;	dH	getBrain
	m	()Lbgy$b;	dI	brainProvider
	m	()Z	dK	canBreatheUnderwater
	m	(Lbym;)V	e	applySupportingEffects
		p	1		player
	m	()Lbgc;	eJ	getMobType
	m	()Z	eh	canBeSeenAsEnemy
	m	()Lbsq$d;	fS	getVariant
	m	()Z	fY	isPlayingDead
	m	()Lbhd$a;	fZ	createAttributes
	m	(D)Z	h	removeWhenFarAway
		p	1		distanceSquared
	m	(Lede;)V	h	travel
		p	1		movementInput
	m	(Lbfx;)D	j	getMeleeAttackRangeSqr
		p	1		target
	m	(Lcfv;)V	l	saveToBucketTag
		p	1		stack
	m	(Lcfv;)Z	m	isFood
		p	1		stack
	m	()V	q	rehydrate
	m	()Z	r	fromBucket
	m	()Lamq;	s	getAmbientSound
	m	(I)V	s	handleAirSupply
		p	1		air
	m	()Lamq;	w	getPickupSound
	m	(Z)V	w	setFromBucket
		p	1		fromBucket
	m	(Z)V	x	setPlayingDead
		p	1		playingDead
	m	()Lamq;	x_	getDeathSound
	m	(Lbfh;)Z	z	doHurtTarget
		p	1		target
	f	I	bS	TOTAL_PLAYDEAD_TIME
	f	Lcom/google/common/collect/ImmutableList;	bT	SENSOR_TYPES
	f	Lcom/google/common/collect/ImmutableList;	bV	MEMORY_TYPES
	f	D	bW	PLAYER_REGEN_DETECTION_RANGE
	f	I	bX	RARE_VARIANT_CHANCE
	f	Ljava/lang/String;	bY	VARIANT_TAG
	f	Lacl;	bZ	DATA_VARIANT
	f	Lacl;	ca	DATA_PLAYING_DEAD
	f	Lacl;	cb	FROM_BUCKET
	f	I	cc	AXOLOTL_TOTAL_AIR_SUPPLY
	f	I	cd	REHYDRATE_AIR_SUPPLY
	f	I	ce	REGEN_BUFF_MAX_DURATION
	f	Ljava/util/Map;	cf	modelRotationValues
	f	I	cg	REGEN_BUFF_BASE_DURATION
c	bsq$a	net/minecraft/world/entity/animal/axolotl/Axolotl$AxolotlGroupData
	m	([Lbsq$d;)V	<init>	<init>
		p	1		variants
	m	(Lapo;)Lbsq$d;	a	getVariant
		p	1		random
	f	[Lbsq$d;	a	types
c	bsq$b	net/minecraft/world/entity/animal/axolotl/Axolotl$AxolotlLookControl
	m	(Lbsq;Lbsq;I)V	<init>	<init>
		p	2		axolotl
		p	3		yawAdjustThreshold
	m	()V	a	tick
	f	Lbsq;	h	this$0
c	bsq$c	net/minecraft/world/entity/animal/axolotl/Axolotl$AxolotlMoveControl
	m	(Lbsq;)V	<init>	<init>
		p	1		axolotl
	m	()V	a	tick
	f	Lbsq;	l	axolotl
c	bsq$d	net/minecraft/world/entity/animal/axolotl/Axolotl$Variant
	m	(Ljava/lang/String;IILjava/lang/String;Z)V	<init>	<init>
		p	3		id
		p	4		name
		p	5		natural
	m	()I	a	getId
	m	(I)Lbsq$d;	a	byId
		p	0		id
	m	(Lapo;)Lbsq$d;	a	getCommonSpawnVariant
		p	0		random
	m	(Lapo;Z)Lbsq$d;	a	getSpawnVariant
		p	0		random
		p	1		natural
	m	(ZLbsq$d;)Z	a	lambda$getSpawnVariant$0
		p	1		variant
	m	()Ljava/lang/String;	b	getName
	m	(I)[Lbsq$d;	b	lambda$getSpawnVariant$1
	m	(Lapo;)Lbsq$d;	b	getRareSpawnVariant
		p	0		random
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Lbsq$d;	d	$values
	f	Lbsq$d;	a	LUCY
	f	Lbsq$d;	b	WILD
	f	Lbsq$d;	c	GOLD
	f	Lbsq$d;	d	CYAN
	f	Lbsq$d;	e	BLUE
	f	Lcom/mojang/serialization/Codec;	f	CODEC
	f	Ljava/util/function/IntFunction;	g	BY_ID
	f	I	h	id
	f	Ljava/lang/String;	i	name
	f	Z	j	common
	f	[Lbsq$d;	k	$VALUES
c	bsr	net/minecraft/world/entity/animal/axolotl/AxolotlAi
	m	()Lciu;	a	getTemptations
	m	(Lbfx;)Z	a	canSetWalkTargetFromLookTarget
		p	0		entity
	m	(Lbgy;)Lbgy;	a	makeBrain
		p	0		brain
	m	(Lbsq;)V	a	updateActivity
		p	0		axolotl
	m	(Lbfx;)F	b	getSpeedModifierChasing
		p	0		entity
	m	(Lbgy;)V	b	initPlayDeadActivity
		p	0		brain
	m	(Lbsq;)Ljava/util/Optional;	b	findNearestValidAttackTarget
		p	0		axolotl
	m	(Lbfx;)F	c	getSpeedModifierFollowingAdult
		p	0		entity
	m	(Lbgy;)V	c	initFightActivity
		p	0		brain
	m	(Lbfx;)F	d	getSpeedModifier
		p	0		entity
	m	(Lbgy;)V	d	initCoreActivity
		p	0		brain
	m	(Lbgy;)V	e	initIdleActivity
		p	0		brain
	f	Lbdj;	a	ADULT_FOLLOW_RANGE
	f	F	b	SPEED_MULTIPLIER_WHEN_MAKING_LOVE
	f	F	c	SPEED_MULTIPLIER_ON_LAND
	f	F	d	SPEED_MULTIPLIER_WHEN_IDLING_IN_WATER
	f	F	e	SPEED_MULTIPLIER_WHEN_CHASING_IN_WATER
	f	F	f	SPEED_MULTIPLIER_WHEN_FOLLOWING_ADULT_IN_WATER
c	bss	net/minecraft/world/entity/animal/axolotl/PlayDead
	m	(Laip;Lbfx;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laip;Lbfx;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbsq;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laip;Lbsq;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbsq;J)V	b	start
	m	(Laip;Lbfx;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
c	bst	net/minecraft/world/entity/animal/axolotl/ValidatePlayDead
	m	()Lbhq;	a	create
	m	(Lblb$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
		p	0		context
	m	(Lblb$b;Lblc;Lblc;)Lble;	a	lambda$create$1
		p	1		playDeadTicks
		p	2		hurtByEntity
	m	(Lblb$b;Lblc;Lblc;Laip;Lbfx;J)Z	a	lambda$create$0
		p	3		world
		p	4		entity
		p	5		time
c	bsu	net/minecraft/world/entity/animal/axolotl/package-info
c	bsv	net/minecraft/world/entity/animal/camel/Camel
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()Lblr;	A	createBodyControl
	m	(F)V	B	onLeashDistance
		p	1		leashLength
	m	()Lamq;	Q_	getSaddleSoundEvent
	m	()V	T	sendDebugPackets
	m	()V	U	customServerAiStep
	m	()I	V_	getJumpCooldown
	m	()I	W	getMaxHeadYRot
	m	()Z	a	canJump
	m	(J)V	a	resetLastPoseChangeTick
		p	1		lastPoseTick
	m	(Lacl;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Laip;Lbfc;)Lbfc;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lbfh;)V	a	clampRotation
		p	1		passenger
	m	(Lbfh;F)V	a	clampHeadRotationToBody
		p	1		entity
		p	2		range
	m	(Lbfx;Lede;)V	a	tickRidden
		p	1		controllingPassenger
		p	2		movementInput
	m	(Lbgj;)Lbfi;	a	getDimensions
		p	1		pose
	m	(Lbrj;)Z	a	canMate
		p	1		other
	m	(Lbym;Lcfv;)Z	a	handleEating
		p	1		player
		p	2		item
	m	(Lcmx;Lbdw;Lbgb;Lbgr;Lre;)Lbgr;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lcom/mojang/serialization/Dynamic;)Lbgy;	a	makeBrain
		p	1		dynamic
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(ZF)D	a	getBodyAnchorAnimationYOffset
	m	()V	a_	defineSynchedData
	m	()V	b	handleStopJump
	m	(FLede;)V	b	executeRidersJump
		p	1		strength
		p	2		movementInput
	m	(I)V	b	onPlayerJump
		p	1		strength
	m	(J)V	b	resetLastPoseChangeTickToFullStand
		p	1		time
	m	(Laip;Lbfc;)Lbsv;	b	getBreedOffspring
	m	(Lbfx;Lede;)Lede;	b	getRiddenInput
		p	1		controllingPassenger
		p	2		movementInput
	m	(Lbgj;Lbfi;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lbym;)V	b	openCustomInventoryScreen
		p	1		player
	m	(Lbym;Lbdx;)Lbdy;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lgt;Ldbq;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()D	bv	getPassengersRidingOffset
	m	(I)V	c	handleStartJump
		p	1		height
	m	()Lbfx;	cK	getControllingPassenger
	m	()D	d	getRiderShieldingHeight
	m	(Lbem;)Lamq;	d	getHurtSound
		p	1		source
	m	()Lbgy$b;	dI	brainProvider
	m	()Z	dz	canSprint
	m	(Lbem;F)V	f	actuallyHurt
		p	1		source
		p	2		amount
	m	()Z	fS	isPanicking
	m	()Z	fY	canPerformRearing
	m	()Lamq;	fZ	getEatingSound
	m	(F)V	g	updateWalkAnimation
		p	1		posDelta
	m	(Lbfx;)F	g	getRiddenSpeed
		p	1		controllingPassenger
	m	()V	gE	setupAnimationStates
	m	()Z	gF	isVisuallySittingDown
	m	()Z	ga	isCamelSitting
	m	()Z	gb	isCamelVisuallySitting
	m	()Z	gc	isInPoseTransition
	m	()V	gd	sitDown
	m	()V	ge	standUp
	m	()V	gf	standUpPanic
	m	()J	gg	getPoseTime
	m	()Z	gh	isTamed
	m	(Lede;)V	h	travel
		p	1		movementInput
	m	(Lbfh;)V	i	positionRider
		p	1		passenger
	m	(Lbfh;)V	j	onPassengerTurned
		p	1		passenger
	m	()V	l	tick
	m	(Lbfx;)Ledd;	m	getRiddenRotation
		p	1		controllingPassenger
	m	(Lcfv;)Z	m	isFood
		p	1		stack
	m	(Lbfh;)Z	o	canAddPassenger
		p	1		passenger
	m	()Lbhd$a;	q	createAttributes
	m	()Z	r	refuseToMove
	m	()Lamq;	s	getAmbientSound
	m	(F)Lede;	t	getLeashOffset
		p	1		tickDelta
	m	()Z	w	isDashing
	m	(Z)V	w	setDashing
		p	1		dashing
	m	()V	x	registerGoals
	m	()Lamq;	x_	getDeathSound
	f	Lciu;	bS	TEMPTATION_ITEM
	f	I	bT	DASH_COOLDOWN_TICKS
	f	I	bV	MAX_HEAD_Y_ROT
	f	Lacl;	bW	DASH
	f	Lacl;	bX	LAST_POSE_CHANGE_TICK
	f	Lbfd;	bY	sitAnimationState
	f	Lbfd;	bZ	sitPoseAnimationState
	f	Lbfi;	cA	SITTING_DIMENSIONS
	f	I	cB	dashCooldown
	f	I	cC	idleAnimationTimeout
	f	Lbfd;	ca	sitUpAnimationState
	f	Lbfd;	cb	idleAnimationState
	f	Lbfd;	cc	dashAnimationState
	f	F	ct	RUNNING_SPEED_BONUS
	f	F	cu	DASH_VERTICAL_MOMENTUM
	f	F	cv	DASH_HORIZONTAL_MOMENTUM
	f	I	cw	SITDOWN_DURATION_TICKS
	f	I	cx	STANDUP_DURATION_TICKS
	f	I	cy	IDLE_MINIMAL_DURATION_TICKS
	f	F	cz	SITTING_HEIGHT_DIFFERENCE
c	bsv$a	net/minecraft/world/entity/animal/camel/Camel$CamelBodyRotationControl
	m	(Lbsv;Lbsv;)V	<init>	<init>
		p	2		camel
	m	()V	a	clientTick
	f	Lbsv;	a	this$0
c	bsv$b	net/minecraft/world/entity/animal/camel/Camel$CamelMoveControl
	m	(Lbsv;)V	<init>	<init>
		p	1		entity
	m	()V	a	tick
	f	Lbsv;	l	this$0
c	bsw	net/minecraft/world/entity/animal/camel/CamelAi
	m	()Lbgy$b;	a	brainProvider
	m	(Lbfx;)Ljava/lang/Float;	a	lambda$initIdleActivity$0
		p	0		entity
	m	(Lbgy;)Lbgy;	a	makeBrain
		p	0		brain
	m	(Lbsv;)V	a	updateActivity
		p	0		camel
	m	(Lbsv;Lapo;)V	a	initMemories
		p	0		camel
		p	1		random
	m	()Lciu;	b	getTemptations
	m	(Lbgy;)V	b	initCoreActivity
		p	0		brain
	m	(Lbgy;)V	c	initIdleActivity
		p	0		brain
	f	F	a	SPEED_MULTIPLIER_WHEN_PANICKING
	f	F	b	SPEED_MULTIPLIER_WHEN_IDLING
	f	F	c	SPEED_MULTIPLIER_WHEN_TEMPTED
	f	F	d	SPEED_MULTIPLIER_WHEN_FOLLOWING_ADULT
	f	F	e	SPEED_MULTIPLIER_WHEN_MAKING_LOVE
	f	Lbdj;	f	ADULT_FOLLOW_RANGE
	f	Lcom/google/common/collect/ImmutableList;	g	SENSOR_TYPES
	f	Lcom/google/common/collect/ImmutableList;	h	MEMORY_TYPES
c	bsw$a	net/minecraft/world/entity/animal/camel/CamelAi$CamelPanic
	m	(F)V	<init>	<init>
		p	1		speed
	m	(Laip;Lbgg;J)V	b	start
	m	(Laip;Lbfx;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
c	bsw$b	net/minecraft/world/entity/animal/camel/CamelAi$RandomSitting
	m	(I)V	<init>	<init>
		p	1		lastPoseSecondsDelta
	m	(Laip;Lbfx;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laip;Lbsv;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laip;Lbsv;J)V	a	start
	m	(Laip;Lbfx;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
	f	I	c	minimalPoseTicks
c	bsx	net/minecraft/world/entity/animal/camel/package-info
c	bsy	net/minecraft/world/entity/animal/frog/Frog
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	T	sendDebugPackets
	m	()V	U	customServerAiStep
	m	()I	W	getMaxHeadYRot
	m	()I	X	getHeadRotSpeed
	m	(Lacl;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Laip;Lbfc;)Lbfc;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Laip;Lbrj;)V	a	spawnChildFromBreeding
		p	1		world
		p	2		other
	m	(Lbfh;)V	a	setTongueTarget
		p	1		entity
	m	(Lbru;)V	a	setVariant
		p	1		variant
	m	(Lcmi;)Lbph;	a	createNavigation
		p	1		world
	m	(Lcmx;Lbdw;Lbgb;Lbgr;Lre;)Lbgr;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lcom/mojang/serialization/Dynamic;)Lbgy;	a	makeBrain
		p	1		dynamic
	m	(Ljava/lang/Object;)V	a	setVariant
		p	1		variant
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Z)V	a	setBaby
		p	1		baby
	m	()V	a_	defineSynchedData
	m	(Lgt;Ldbq;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Ljava/lang/Object;	c	getVariant
	m	(Lbfl;Lcmj;Lbgb;Lgt;Lapo;)Z	c	checkFrogSpawnRules
		p	0		type
		p	1		world
		p	2		reason
		p	3		pos
		p	4		random
	m	()Z	cv	isPushedByFluid
	m	(FF)I	d	calculateFallDamage
		p	1		fallDistance
		p	2		damageMultiplier
	m	(Lbem;)Lamq;	d	getHurtSound
		p	1		source
	m	()Lbgy;	dH	getBrain
	m	()Lbgy$b;	dI	brainProvider
	m	()Z	dK	canBreatheUnderwater
	m	()Lbhd$a;	fS	createAttributes
	m	(F)V	g	updateWalkAnimation
		p	1		posDelta
	m	(Lede;)V	h	travel
		p	1		movementInput
	m	()V	l	tick
	m	(Lbfx;)Z	m	canEat
		p	0		entity
	m	(Lcfv;)Z	m	isFood
		p	1		stack
	m	()V	q	eraseTongueTarget
	m	()Ljava/util/Optional;	r	getTongueTarget
	m	()Lamq;	s	getAmbientSound
	m	()Lbru;	w	getVariant
	m	()Lamq;	x_	getDeathSound
	m	()Z	y_	isBaby
	f	Lciu;	bS	TEMPTATION_ITEM
	f	Lcom/google/common/collect/ImmutableList;	bT	SENSOR_TYPES
	f	Lcom/google/common/collect/ImmutableList;	bV	MEMORY_TYPES
	f	Ljava/lang/String;	bW	VARIANT_KEY
	f	Lbfd;	bX	jumpAnimationState
	f	Lbfd;	bY	croakAnimationState
	f	Lbfd;	bZ	tongueAnimationState
	f	Lbfd;	ca	swimIdleAnimationState
	f	Lacl;	cb	DATA_VARIANT_ID
	f	Lacl;	cc	DATA_TONGUE_TARGET_ID
	f	I	cd	FROG_FALL_DAMAGE_REDUCTION
c	bsy$a	net/minecraft/world/entity/animal/frog/Frog$FrogLookControl
	m	(Lbsy;Lbfz;)V	<init>	<init>
		p	2		entity
	m	()Z	c	resetXRotOnTick
	f	Lbsy;	h	this$0
c	bsy$b	net/minecraft/world/entity/animal/frog/Frog$FrogNodeEvaluator
	m	(Z)V	<init>	<init>
		p	1		penalizeDeepWater
	m	()Ldwx;	a	getStart
	m	(Lclo;III)Ldwv;	a	getBlockPathType
		p	1		world
		p	2		x
		p	3		y
		p	4		z
	f	Lgt$a;	m	belowPos
c	bsy$c	net/minecraft/world/entity/animal/frog/Frog$FrogPathNavigation
	m	(Lbsy;Lcmi;)V	<init>	<init>
		p	1		frog
		p	2		world
	m	(I)Ldxb;	a	createPathFinder
		p	1		range
	m	(Ldwv;)Z	b	canCutCorner
		p	1		nodeType
c	bsz	net/minecraft/world/entity/animal/frog/FrogAi
	m	()Lciu;	a	getTemptations
	m	(Lbfx;)Ljava/lang/Float;	a	lambda$initSwimActivity$2
		p	0		frog
	m	(Lbfz;Lgt;)Z	a	isAcceptableLandingSpot
		p	0		frog
		p	1		pos
	m	(Lbgy;)Lbgy;	a	makeBrain
		p	0		brain
	m	(Lbsy;)V	a	updateActivity
		p	0		frog
	m	(Lbsy;Lapo;)V	a	initMemories
		p	0		frog
		p	1		random
	m	(Lbfx;)Ljava/lang/Float;	b	lambda$initIdleActivity$0
		p	0		frog
	m	(Lbgy;)V	b	initCoreActivity
		p	0		brain
	m	(Lbsy;)Z	b	canAttack
		p	0		frog
	m	(Lbgy;)V	c	initIdleActivity
		p	0		brain
	m	(Lbsy;)Lamq;	c	lambda$initJumpActivity$5
		p	0		frog
	m	(Lbgy;)V	d	initSwimActivity
		p	0		brain
	m	(Lbsy;)Ljava/util/Optional;	d	lambda$initLaySpawnActivity$4
		p	0		frog
	m	(Lbgy;)V	e	initLaySpawnActivity
		p	0		brain
	m	(Lbsy;)Ljava/util/Optional;	e	lambda$initSwimActivity$3
		p	0		frog
	m	(Lbgy;)V	f	initJumpActivity
		p	0		brain
	m	(Lbsy;)Ljava/util/Optional;	f	lambda$initIdleActivity$1
		p	0		frog
	m	(Lbgy;)V	g	initTongueActivity
		p	0		brain
	f	F	a	SPEED_MULTIPLIER_WHEN_PANICKING
	f	F	b	SPEED_MULTIPLIER_WHEN_MAKING_LOVE
	f	F	c	SPEED_MULTIPLIER_WHEN_IDLING
	f	F	d	SPEED_MULTIPLIER_ON_LAND
	f	F	e	SPEED_MULTIPLIER_IN_WATER
	f	Lbdj;	f	TIME_BETWEEN_LONG_JUMPS
	f	I	g	MAX_LONG_JUMP_HEIGHT
	f	I	h	MAX_LONG_JUMP_WIDTH
	f	F	i	MAX_JUMP_VELOCITY
	f	F	j	SPEED_MULTIPLIER_WHEN_TEMPTED
c	bta	net/minecraft/world/entity/animal/frog/ShootTongue
	m	(Lamq;Lamq;)V	<init>	<init>
		p	1		tongueSound
		p	2		eatSound
	m	(Laip;Lbfx;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laip;Lbfx;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbsy;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laip;Lbsy;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lbsy;Lbfx;)Z	a	canPathfindToTarget
		p	1		entity
		p	2		target
	m	(Laip;Lbfx;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbsy;)V	b	eatEntity
		p	1		world
		p	2		frog
	m	(Laip;Lbsy;J)V	b	start
	m	(Lbsy;Lbfx;)V	b	addUnreachableTargetToMemory
		p	1		entity
		p	2		target
	m	(Laip;Lbfx;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbsy;J)V	c	stop
	m	(Laip;Lbfx;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbsy;J)V	d	tick
	f	I	c	TIME_OUT_DURATION
	f	I	d	CATCH_ANIMATION_DURATION
	f	I	e	TONGUE_ANIMATION_DURATION
	f	I	f	UNREACHABLE_TONGUE_TARGETS_COOLDOWN_DURATION
	f	I	g	MAX_UNREACHBLE_TONGUE_TARGETS_IN_MEMORY
	f	F	h	EATING_DISTANCE
	f	F	i	EATING_MOVEMENT_FACTOR
	f	I	j	eatAnimationTimer
	f	I	k	calculatePathCounter
	f	Lamq;	l	tongueSound
	f	Lamq;	m	eatSound
	f	Lede;	n	itemSpawnPos
	f	Lbta$a;	o	state
c	bta$1	net/minecraft/world/entity/animal/frog/ShootTongue$1
	f	[I	a	$SwitchMap$net$minecraft$world$entity$animal$frog$ShootTongue$State
c	bta$a	net/minecraft/world/entity/animal/frog/ShootTongue$State
	m	()[Lbta$a;	a	$values
	f	Lbta$a;	a	MOVE_TO_TARGET
	f	Lbta$a;	b	CATCH_ANIMATION
	f	Lbta$a;	c	EAT_ANIMATION
	f	Lbta$a;	d	DONE
	f	[Lbta$a;	e	$VALUES
c	btb	net/minecraft/world/entity/animal/frog/Tadpole
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	T	sendDebugPackets
	m	()V	U	customServerAiStep
	m	(Lbym;Lcfv;)V	a	feed
		p	1		player
		p	2		stack
	m	(Lcmi;)Lbph;	a	createNavigation
		p	1		world
	m	(Lcom/mojang/serialization/Dynamic;)Lbgy;	a	makeBrain
		p	1		dynamic
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()Lcfv;	b	getBucketItemStack
	m	(Lbym;Lbdx;)Lbdy;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lbym;Lcfv;)V	b	usePlayerItem
		p	1		player
		p	2		stack
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()V	b_	aiStep
	m	(I)V	c	ageUp
		p	1		seconds
	m	(Lre;)V	c	loadFromBucketTag
		p	1		nbt
	m	(Lbem;)Lamq;	d	getHurtSound
		p	1		source
	m	()Lbgy;	dH	getBrain
	m	()Lbgy$b;	dI	brainProvider
	m	()Z	dV	shouldDropExperience
	m	()Lamq;	fT	getFlopSound
	m	()Lbhd$a;	fU	createAttributes
	m	()I	fV	getAge
	m	()V	fW	ageUp
	m	()I	fX	getTicksLeftUntilAdult
	m	(Lcfv;)V	l	saveToBucketTag
		p	1		stack
	m	(Lcfv;)Z	m	isFood
		p	1		stack
	m	()Z	r	fromBucket
	m	(I)V	r	setAge
		p	1		tadpoleAge
	m	()Lamq;	s	getAmbientSound
	m	()Lamq;	w	getPickupSound
	m	(Z)V	w	setFromBucket
		p	1		fromBucket
	m	()Lamq;	x_	getDeathSound
	f	I	b	ticksToBeFrog
	f	Lcom/google/common/collect/ImmutableList;	bS	MEMORY_TYPES
	f	I	bT	age
	f	F	c	HITBOX_WIDTH
	f	F	d	HITBOX_HEIGHT
	f	Lcom/google/common/collect/ImmutableList;	e	SENSOR_TYPES
c	btc	net/minecraft/world/entity/animal/frog/TadpoleAi
	m	(Lbfx;)Ljava/lang/Float;	a	lambda$initIdleActivity$0
	m	(Lbgy;)Lbgy;	a	makeBrain
		p	0		brain
	m	(Lbtb;)V	a	updateActivity
		p	0		tadpole
	m	(Lbgy;)V	b	initCoreActivity
		p	0		brain
	m	(Lbgy;)V	c	initIdleActivity
		p	0		brain
	f	F	a	SPEED_MULTIPLIER_WHEN_PANICKING
	f	F	b	SPEED_MULTIPLIER_WHEN_IDLING_IN_WATER
	f	F	c	SPEED_MULTIPLIER_WHEN_TEMPTED
c	btd	net/minecraft/world/entity/animal/frog/package-info
c	bte	net/minecraft/world/entity/animal/goat/Goat
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	T	sendDebugPackets
	m	()V	U	customServerAiStep
	m	()I	W	getMaxHeadYRot
	m	(Laip;Lbfc;)Lbfc;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lbgj;)Lbfi;	a	getDimensions
		p	1		pose
	m	(Lcmx;Lbdw;Lbgb;Lbgr;Lre;)Lbgr;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lcom/mojang/serialization/Dynamic;)Lbgy;	a	makeBrain
		p	1		dynamic
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	(Laip;Lbfc;)Lbte;	b	getBreedOffspring
	m	(Lbym;Lbdx;)Lbdy;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lgt;Ldbq;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()V	b_	aiStep
	m	(Lbfl;Lcmj;Lbgb;Lgt;Lapo;)Z	c	checkGoatSpawnRules
		p	0		entityType
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	(FF)I	d	calculateFallDamage
		p	1		fallDistance
		p	2		damageMultiplier
	m	(Lbem;)Lamq;	d	getHurtSound
		p	1		source
	m	(Lcfv;)Lamq;	d	getEatingSound
		p	1		stack
	m	()Lbgy;	dH	getBrain
	m	()Lbgy$b;	dI	brainProvider
	m	()Z	fS	hasLeftHorn
	m	()Z	fY	hasRightHorn
	m	()Z	fZ	dropHorn
	m	()V	ga	addHorns
	m	()V	gb	removeHorns
	m	()Z	gc	isScreamingGoat
	m	()F	gd	getRammingXHeadRot
	m	()V	m	ageBoundaryReached
	m	()Lcfv;	q	createHorn
	m	()Lbhd$a;	r	createAttributes
	m	(F)V	r	setYHeadRot
		p	1		headYaw
	m	()Lamq;	s	getAmbientSound
	m	()Lamq;	w	getMilkingSound
	m	(Z)V	w	setScreamingGoat
		p	1		screaming
	m	()Lamq;	x_	getDeathSound
	f	Lbfi;	bS	LONG_JUMPING_DIMENSIONS
	f	Lcom/google/common/collect/ImmutableList;	bT	SENSOR_TYPES
	f	Lcom/google/common/collect/ImmutableList;	bV	MEMORY_TYPES
	f	I	bW	GOAT_FALL_DAMAGE_REDUCTION
	f	D	bX	GOAT_SCREAMING_CHANCE
	f	D	bY	UNIHORN_CHANCE
	f	I	bZ	ADULT_ATTACK_DAMAGE
	f	I	ca	BABY_ATTACK_DAMAGE
	f	Lacl;	cb	DATA_IS_SCREAMING_GOAT
	f	Lacl;	cc	DATA_HAS_LEFT_HORN
	f	Lacl;	cd	DATA_HAS_RIGHT_HORN
	f	Z	ce	isLoweringHead
	f	I	cf	lowerHeadTick
c	btf	net/minecraft/world/entity/animal/goat/GoatAi
	m	()Lciu;	a	getTemptations
	m	(Lbfx;)Ljava/lang/Float;	a	lambda$initIdleActivity$1
		p	0		goat
	m	(Lbgy;)Lbgy;	a	makeBrain
		p	0		brain
	m	(Lbte;)V	a	updateActivity
		p	0		goat
	m	(Lbte;Lapo;)V	a	initMemories
		p	0		goat
		p	1		random
	m	(Lbfx;)Z	b	lambda$static$0
		p	0		entity
	m	(Lbgy;)V	b	initCoreActivity
		p	0		brain
	m	(Lbte;)Lamq;	b	lambda$initRamActivity$8
		p	0		goat
	m	(Lbgy;)V	c	initIdleActivity
		p	0		brain
	m	(Lbte;)I	c	lambda$initRamActivity$7
		p	0		goat
	m	(Lbgy;)V	d	initLongJumpActivity
		p	0		brain
	m	(Lbte;)Lamq;	d	lambda$initRamActivity$6
		p	0		goat
	m	(Lbgy;)V	e	initRamActivity
		p	0		brain
	m	(Lbte;)Lamq;	e	lambda$initRamActivity$5
		p	0		goat
	m	(Lbte;)D	f	lambda$initRamActivity$4
		p	0		goat
	m	(Lbte;)Lbdj;	g	lambda$initRamActivity$3
		p	0		goat
	m	(Lbte;)Lamq;	h	lambda$initLongJumpActivity$2
		p	0		goat
	f	I	a	RAM_PREPARE_TIME
	f	I	b	RAM_MAX_DISTANCE
	f	I	c	MAX_LONG_JUMP_HEIGHT
	f	I	d	MAX_LONG_JUMP_WIDTH
	f	F	e	MAX_JUMP_VELOCITY
	f	I	f	RAM_MIN_DISTANCE
	f	F	g	ADULT_RAM_KNOCKBACK_FORCE
	f	F	h	BABY_RAM_KNOCKBACK_FORCE
	f	Lbdj;	i	ADULT_FOLLOW_RANGE
	f	F	j	SPEED_MULTIPLIER_WHEN_MAKING_LOVE
	f	F	k	SPEED_MULTIPLIER_WHEN_IDLING
	f	F	l	SPEED_MULTIPLIER_WHEN_FOLLOWING_ADULT
	f	F	m	SPEED_MULTIPLIER_WHEN_TEMPTED
	f	F	n	SPEED_MULTIPLIER_WHEN_PANICKING
	f	F	o	SPEED_MULTIPLIER_WHEN_PREPARING_TO_RAM
	f	Lbdj;	p	TIME_BETWEEN_LONG_JUMPS
	f	Lbdj;	q	TIME_BETWEEN_RAMS
	f	Lbdj;	r	TIME_BETWEEN_RAMS_SCREAMER
	f	Lbqk;	s	RAM_TARGET_CONDITIONS
	f	F	t	SPEED_MULTIPLIER_WHEN_RAMMING
c	btg	net/minecraft/world/entity/animal/goat/package-info
c	bth	net/minecraft/world/entity/animal/horse/AbstractChestedHorse
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()I	U_	getInventorySize
	m	(Lapo;)V	a	randomizeAttributes
		p	1		random
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(I)Lbgq;	a_	getSlot
		p	1		mappedIndex
	m	(Lbym;Lbdx;)Lbdy;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()D	bv	getPassengersRidingOffset
	m	(Lbym;Lcfv;)V	d	equipChest
		p	1		player
		p	2		chest
	m	()V	er	dropEquipment
	m	()V	fS	playChestEquipsSound
	m	()I	ga	getInventoryColumns
	m	()Lbhd$a;	q	createBaseChestedHorseAttributes
	m	()Z	r	hasChest
	m	(Z)V	w	setChest
		p	1		hasChest
	f	I	bS	INV_CHEST_COUNT
	f	Lacl;	bT	DATA_ID_CHEST
c	bth$1	net/minecraft/world/entity/animal/horse/AbstractChestedHorse$1
	m	()Lcfv;	a	get
	m	(Lcfv;)Z	a	set
		p	1		stack
	f	Lbth;	a	this$0
c	bti	net/minecraft/world/entity/animal/horse/AbstractHorse
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Z)V	A	setEating
		p	1		eatingGrass
	m	(F)V	B	onLeashDistance
		p	1		leashLength
	m	(Z)V	B	setStanding
		p	1		angry
	m	(F)F	C	getEatAnim
		p	1		tickDelta
	m	(Z)V	C	spawnTamingParticles
		p	1		positive
	m	(F)F	D	getStandAnim
		p	1		tickDelta
	m	(F)F	E	getMouthAnim
		p	1		tickDelta
	m	()I	K	getAmbientSoundInterval
	m	()Ljava/util/UUID;	T_	getOwnerUUID
	m	()I	U_	getInventorySize
	m	()Z	a	canJump
	m	(DDDDLapo;)D	a	createOffspringAttribute
		p	0		parentBase
		p	2		otherParentBase
		p	4		min
		p	6		max
		p	8		random
	m	(FFLbem;)Z	a	causeFallDamage
		p	1		fallDistance
		p	2		damageMultiplier
		p	3		damageSource
	m	(ILjava/util/function/Predicate;)Lbgq;	a	createEquipmentSlotAccess
		p	1		slot
		p	2		predicate
	m	(Laip;Lbfc;)Lbfc;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lams;)V	a	equipSaddle
		p	1		sound
	m	(Lapo;)V	a	randomizeAttributes
		p	1		random
	m	(Lbdr;)V	a	containerChanged
		p	1		sender
	m	(Lbem;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbfc;Lbti;)V	a	setOffspringAttributes
		p	1		other
		p	2		child
	m	(Lbfc;Lbti;Lbgz;DD)V	a	setOffspringAttribute
		p	1		other
		p	2		child
		p	3		attribute
		p	4		min
		p	6		max
	m	(Lbfx;Lede;)V	a	tickRidden
		p	1		controllingPassenger
		p	2		movementInput
	m	(Lbrj;)Z	a	canMate
		p	1		other
	m	(Lbym;Lcfv;)Z	a	handleEating
		p	1		player
		p	2		item
	m	(Lcmx;Lbdw;Lbgb;Lbgr;Lre;)Lbgr;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lcwq;)V	a	playGallopSound
		p	1		group
	m	(Lede;Lbfx;)Lede;	a	getDismountLocationInDirection
		p	1		offset
		p	2		passenger
	m	(Ljava/util/function/DoubleSupplier;)D	a	generateJumpStrength
		p	0		randomDoubleGetter
	m	(Ljava/util/function/IntUnaryOperator;)F	a	generateMaxHealth
		p	0		randomIntGetter
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(I)Lbgq;	a_	getSlot
		p	1		mappedIndex
	m	()V	b	handleStopJump
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	(FLede;)V	b	executeRidersJump
		p	1		strength
		p	2		movementInput
	m	(I)V	b	onPlayerJump
		p	1		strength
	m	(Lbdr;)Z	b	hasInventoryChanged
		p	1		inventory
	m	(Lbfx;)Lede;	b	getDismountLocationForPassenger
		p	1		passenger
	m	(Lbfx;Lede;)Lede;	b	getRiddenInput
		p	1		controllingPassenger
		p	2		movementInput
	m	(Lbgj;Lbfi;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lbym;)V	b	openCustomInventoryScreen
		p	1		player
	m	(Lbym;Lbdx;)Lbdy;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lbym;Lcfv;)V	b	equipArmor
		p	1		player
		p	2		stack
	m	(Lgt;Ldbq;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Ljava/util/UUID;)V	b	setOwnerUUID
		p	1		ownerUuid
	m	(Ljava/util/function/DoubleSupplier;)D	b	generateSpeed
		p	0		randomDoubleGetter
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()V	b_	aiStep
	m	()Z	bn	isPushable
	m	(I)V	c	handleStartJump
		p	1		height
	m	(Lbym;Lcfv;)Lbdy;	c	fedFood
		p	1		player
		p	2		stack
	m	()Lbfx;	cK	getControllingPassenger
	m	(FF)I	d	calculateFallDamage
		p	1		fallDistance
		p	2		damageMultiplier
	m	(IZ)V	d	setFlag
		p	1		bitmask
		p	2		flag
	m	()Lclz;	e	getLevel
	m	(Lbym;)V	e	doPlayerRide
		p	1		player
	m	()F	eN	getSoundVolume
	m	()Z	eP	isImmobile
	m	()V	er	dropEquipment
	m	()V	fS	openMouth
	m	()Z	fY	canPerformRearing
	m	()Lamq;	fZ	getEatingSound
	m	()I	fy	getMaxSpawnClusterSize
	m	()Z	g	isSaddleable
	m	(Lbfx;)F	g	getRiddenSpeed
		p	1		controllingPassenger
	m	(Lbym;)Z	g	tameWithName
		p	1		player
	m	()Z	gA	canParent
	m	()Z	gB	canWearArmor
	m	()Z	gC	isWearingArmor
	m	()I	gD	getAmbientStandInterval
	m	()D	ga	lambda$static$3
	m	()D	gb	lambda$static$2
	m	()D	gc	lambda$static$1
	m	()D	gd	lambda$static$0
	m	()Z	gh	isTamed
	m	()V	gi	addBehaviourGoals
	m	()Z	gj	isJumping
	m	()Z	gk	isEating
	m	()Z	gl	isStanding
	m	()Z	gm	isBred
	m	()I	gn	getTemper
	m	()V	go	createInventory
	m	()V	gp	updateContainerEquipment
	m	()D	gq	getCustomJump
	m	()Lamq;	gr	getAngrySound
	m	()Lbhd$a;	gs	createBaseHorseAttributes
	m	()I	gt	getMaxTemper
	m	()V	gu	followMommy
	m	()Z	gv	canEatGrass
	m	()Lamq;	gw	getAmbientStandSound
	m	()V	gx	standIfPossible
	m	()V	gy	makeMad
	m	()V	gz	playJumpSound
	m	()Z	i	isSaddled
	m	(Lbfh;)V	i	positionRider
		p	1		passenger
	m	()V	l	tick
	m	(Lcfv;)Z	l	isArmor
		p	1		item
	m	(Lbfx;)Ledd;	m	getRiddenRotation
		p	1		controllingPassenger
	m	(Lcfv;)Z	m	isFood
		p	1		stack
	m	(Lbfx;)Z	n	lambda$static$6
		p	0		entity
	m	(Lcfv;)Z	n	lambda$getSlot$8
		p	1		stack
	m	(Lcfv;)Z	o	lambda$getSlot$7
		p	0		stack
	m	()V	q	eating
	m	()V	r	moveTail
	m	(I)Z	s	getFlag
		p	1		bitmask
	m	(I)V	t	setTemper
		p	1		temper
	m	(I)I	u	modifyTemper
		p	1		difference
	m	(I)I	v	lambda$static$5
		p	0		max
	m	(I)I	w	lambda$static$4
		p	0		max
	m	()V	x	registerGoals
	m	(Z)V	x	setTamed
		p	1		tame
	m	(Z)V	y	setIsJumping
		p	1		inAir
	m	(Z)V	z	setBred
		p	1		bred
	m	()Z	z_	onClimbable
	f	F	bS	MIN_MOVEMENT_SPEED
	f	F	bT	MAX_MOVEMENT_SPEED
	f	F	bV	MIN_JUMP_STRENGTH
	f	F	bW	MAX_JUMP_STRENGTH
	f	F	bX	MIN_HEALTH
	f	F	bY	MAX_HEALTH
	f	F	bZ	BACKWARDS_MOVE_SPEED_FACTOR
	f	I	cA	FLAG_OPEN_MOUTH
	f	I	cB	eatingCounter
	f	I	cC	mouthCounter
	f	I	cD	standCounter
	f	F	cE	eatAnim
	f	F	cF	eatAnimO
	f	F	cG	standAnim
	f	F	cH	standAnimO
	f	F	cI	mouthAnim
	f	F	cJ	mouthAnimO
	f	Ljava/util/UUID;	cK	owner
	f	F	ca	SIDEWAYS_MOVE_SPEED_FACTOR
	f	Ljava/util/function/Predicate;	cb	PARENT_HORSE_SELECTOR
	f	Lbqk;	cc	MOMMY_TARGETING
	f	I	cd	EQUIPMENT_SLOT_OFFSET
	f	I	ce	CHEST_SLOT_OFFSET
	f	I	cf	INVENTORY_SLOT_OFFSET
	f	D	cg	BREEDING_CROSS_FACTOR
	f	I	ch	INV_SLOT_SADDLE
	f	I	ci	INV_SLOT_ARMOR
	f	I	cj	INV_BASE_COUNT
	f	I	ck	tailCounter
	f	I	cl	sprintCounter
	f	Z	cm	isJumping
	f	Lbed;	cn	inventory
	f	I	co	temper
	f	F	cp	playerJumpPendingScale
	f	Z	cq	allowStandSliding
	f	Z	cr	canGallop
	f	I	cs	gallopSoundCounter
	f	Lciu;	ct	FOOD_ITEMS
	f	Lacl;	cu	DATA_ID_FLAGS
	f	I	cv	FLAG_TAME
	f	I	cw	FLAG_SADDLE
	f	I	cx	FLAG_BRED
	f	I	cy	FLAG_EATING
	f	I	cz	FLAG_STANDING
c	bti$1	net/minecraft/world/entity/animal/horse/AbstractHorse$1
	m	()Lcfv;	a	get
	m	(Lcfv;)Z	a	set
		p	1		stack
	f	I	a	val$slot
	f	Ljava/util/function/Predicate;	c	val$check
	f	Lbti;	d	this$0
c	btj	net/minecraft/world/entity/animal/horse/Donkey
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Laip;Lbfc;)Lbfc;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lbrj;)Z	a	canMate
		p	1		other
	m	(Lbem;)Lamq;	d	getHurtSound
		p	1		source
	m	()Lamq;	fZ	getEatingSound
	m	()Lamq;	gr	getAngrySound
	m	()Lamq;	s	getAmbientSound
	m	()Lamq;	x_	getDeathSound
c	btk	net/minecraft/world/entity/animal/horse/Horse
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Laip;Lbfc;)Lbfc;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lapo;)V	a	randomizeAttributes
		p	1		random
	m	(Lbdr;)V	a	containerChanged
		p	1		sender
	m	(Lbrj;)Z	a	canMate
		p	1		other
	m	(Lbtr;)V	a	setVariant
		p	1		variant
	m	(Lbtr;Lbtm;)V	a	setVariantAndMarkings
		p	1		color
		p	2		marking
	m	(Lcmx;Lbdw;Lbgb;Lbgr;Lre;)Lbgr;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lcwq;)V	a	playGallopSound
		p	1		group
	m	(Ljava/lang/Object;)V	a	setVariant
		p	1		variant
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(Lbym;Lbdx;)Lbdy;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Ljava/lang/Object;	c	getVariant
	m	(Lbem;)Lamq;	d	getHurtSound
		p	1		source
	m	()Lbtm;	fS	getMarkings
	m	()Lamq;	fZ	getEatingSound
	m	()Z	gB	canWearArmor
	m	()I	ga	getTypeVariant
	m	()V	gp	updateContainerEquipment
	m	()Lamq;	gr	getAngrySound
	m	(Lcfv;)Z	l	isArmor
		p	1		item
	m	(Lcfv;)V	n	setArmor
		p	1		stack
	m	(Lcfv;)V	o	setArmorEquipment
		p	1		stack
	m	()Lcfv;	q	getArmor
	m	()Lbtr;	r	getVariant
	m	()Lamq;	s	getAmbientSound
	m	(I)V	v	setTypeVariant
		p	1		variant
	m	()Lamq;	x_	getDeathSound
	f	Ljava/util/UUID;	bS	ARMOR_MODIFIER_UUID
	f	Lacl;	bT	DATA_ID_TYPE_VARIANT
c	btk$a	net/minecraft/world/entity/animal/horse/Horse$HorseGroupData
	m	(Lbtr;)V	<init>	<init>
		p	1		color
	f	Lbtr;	a	variant
c	btl	net/minecraft/world/entity/animal/horse/Llama
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Z)V	D	setDidSpit
		p	1		spit
	m	()I	U_	getInventorySize
	m	(FFLbem;)Z	a	causeFallDamage
		p	1		fallDistance
		p	2		damageMultiplier
		p	3		damageSource
	m	(Laip;Lbfc;)Lbfc;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lbdr;)V	a	containerChanged
		p	1		sender
	m	(Lbfx;F)V	a	performRangedAttack
		p	1		target
		p	2		pullProgress
	m	(Lbrj;)Z	a	canMate
		p	1		other
	m	(Lbtl$d;)V	a	setVariant
		p	1		variant
	m	(Lbtl;)V	a	joinCaravan
		p	1		llama
	m	(Lbym;Lcfv;)Z	a	handleEating
		p	1		player
		p	2		item
	m	(Lcel;)V	a	setSwag
		p	1		color
	m	(Lcmx;Lbdw;Lbgb;Lbgr;Lre;)Lbgr;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Ljava/lang/Object;)V	a	setVariant
		p	1		variant
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(Laip;Lbfc;)Lbtl;	b	getBreedOffspring
	m	(Lapo;)V	b	setRandomStrength
		p	1		random
	m	(Lgt;Ldbq;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()D	bv	getPassengersRidingOffset
	m	()Ljava/lang/Object;	c	getVariant
	m	()Lede;	cF	getLeashOffset
	m	()Lbfx;	cK	getControllingPassenger
	m	(Lbem;)Lamq;	d	getHurtSound
		p	1		source
	m	()Z	eP	isImmobile
	m	()D	fR	followLeashSpeed
	m	()V	fS	playChestEquipsSound
	m	()Z	fY	canPerformRearing
	m	()Lamq;	fZ	getEatingSound
	m	()Z	g	isSaddleable
	m	()Z	gB	canWearArmor
	m	()Z	gC	isWearingArmor
	m	()V	gE	leaveCaravan
	m	()Z	gF	hasCaravanTail
	m	()Z	gG	inCaravan
	m	()Lbtl;	gH	getCaravanHead
	m	()I	ga	getInventoryColumns
	m	()Z	gb	isTraderLlama
	m	()I	gc	getStrength
	m	()Lbhd$a;	gd	createAttributes
	m	()Lbtl$d;	ge	getVariant
	m	()Lcel;	gf	getSwag
	m	()Lbtl;	gg	makeNewLlama
	m	()V	gp	updateContainerEquipment
	m	()Lamq;	gr	getAngrySound
	m	()I	gt	getMaxTemper
	m	()V	gu	followMommy
	m	()Z	gv	canEatGrass
	m	(Lbfh;)V	i	positionRider
		p	1		passenger
	m	(Lcfv;)Z	l	isArmor
		p	1		item
	m	(Lcfv;)Z	m	isFood
		p	1		stack
	m	(Lbfx;)V	n	spit
		p	1		target
	m	(Lcfv;)Lcel;	n	getDyeColor
		p	0		color
	m	()Lamq;	s	getAmbientSound
	m	(I)V	v	setStrength
		p	1		strength
	m	()V	x	registerGoals
	m	()Lamq;	x_	getDeathSound
	f	I	bT	MAX_STRENGTH
	f	Lciu;	bV	FOOD_ITEMS
	f	Lacl;	bW	DATA_STRENGTH_ID
	f	Lacl;	bX	DATA_SWAG_ID
	f	Lacl;	bY	DATA_VARIANT_ID
	f	Z	bZ	didSpit
	f	Lbtl;	ca	caravanHead
	f	Lbtl;	cb	caravanTail
c	btl$a	net/minecraft/world/entity/animal/horse/Llama$LlamaAttackWolfGoal
	m	(Lbtl;)V	<init>	<init>
		p	1		llama
	m	(Lbfx;)Z	b	lambda$new$0
		p	0		wolf
	m	()D	l	getFollowDistance
c	btl$b	net/minecraft/world/entity/animal/horse/Llama$LlamaGroupData
	m	(Lbtl$d;)V	<init>	<init>
		p	1		variant
	f	Lbtl$d;	a	variant
c	btl$c	net/minecraft/world/entity/animal/horse/Llama$LlamaHurtByTargetGoal
	m	(Lbtl;)V	<init>	<init>
		p	1		llama
	m	()Z	b	canContinueToUse
c	btl$d	net/minecraft/world/entity/animal/horse/Llama$Variant
	m	(Ljava/lang/String;IILjava/lang/String;)V	<init>	<init>
		p	3		id
		p	4		name
	m	()I	a	getId
	m	(I)Lbtl$d;	a	byId
		p	0		id
	m	()[Lbtl$d;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lbtl$d;	a	CREAMY
	f	Lbtl$d;	b	WHITE
	f	Lbtl$d;	c	BROWN
	f	Lbtl$d;	d	GRAY
	f	Lcom/mojang/serialization/Codec;	e	CODEC
	f	Ljava/util/function/IntFunction;	f	BY_ID
	f	I	g	id
	f	Ljava/lang/String;	h	name
	f	[Lbtl$d;	i	$VALUES
c	btm	net/minecraft/world/entity/animal/horse/Markings
	m	(Ljava/lang/String;II)V	<init>	<init>
		p	3		id
	m	()I	a	getId
	m	(I)Lbtm;	a	byId
		p	0		index
	m	()[Lbtm;	b	$values
	f	Lbtm;	a	NONE
	f	Lbtm;	b	WHITE
	f	Lbtm;	c	WHITE_FIELD
	f	Lbtm;	d	WHITE_DOTS
	f	Lbtm;	e	BLACK_DOTS
	f	Ljava/util/function/IntFunction;	f	BY_ID
	f	I	g	id
	f	[Lbtm;	h	$VALUES
c	btn	net/minecraft/world/entity/animal/horse/Mule
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Laip;Lbfc;)Lbfc;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lbem;)Lamq;	d	getHurtSound
		p	1		source
	m	()V	fS	playChestEquipsSound
	m	()Lamq;	fZ	getEatingSound
	m	()Lamq;	gr	getAngrySound
	m	()Lamq;	s	getAmbientSound
	m	()Lamq;	x_	getDeathSound
c	bto	net/minecraft/world/entity/animal/horse/SkeletonHorse
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Laip;Lbfc;)Lbfc;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lapo;)V	a	randomizeAttributes
		p	1		random
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()Lamq;	aI	getSwimSound
	m	(Lbym;Lbdx;)Lbdy;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()V	b_	aiStep
	m	()D	bv	getPassengersRidingOffset
	m	(Lbem;)Lamq;	d	getHurtSound
		p	1		source
	m	()Lbgc;	eJ	getMobType
	m	()F	eU	getWaterSlowDown
	m	()V	gi	addBehaviourGoals
	m	()V	gz	playJumpSound
	m	(F)V	i	playSwimSound
		p	1		volume
	m	()Lbhd$a;	q	createAttributes
	m	()Z	r	isTrap
	m	()Lamq;	s	getAmbientSound
	m	(Z)V	w	setTrap
		p	1		trapped
	m	()Lamq;	x_	getDeathSound
	f	Lbtp;	bS	skeletonTrapGoal
	f	I	bT	TRAP_MAX_LIFE
	f	Z	bV	isTrap
	f	I	bW	trapTime
c	btp	net/minecraft/world/entity/animal/horse/SkeletonTrapGoal
	m	(Lbto;)V	<init>	<init>
		p	1		skeletonHorse
	m	()Z	a	canUse
	m	(Lbdw;)Lbti;	a	createHorse
		p	1		localDifficulty
	m	(Lbdw;Lbti;)Lbwi;	a	createSkeleton
		p	1		localDifficulty
		p	2		vehicle
	m	(Lcfv;)Lcfv;	a	disenchant
		p	1		stack
	m	()V	e	tick
	f	Lbto;	a	horse
c	btq	net/minecraft/world/entity/animal/horse/TraderLlama
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcmx;Lbdw;Lbgb;Lbgr;Lre;)Lbgr;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()V	b_	aiStep
	m	(Lbym;)V	e	doPlayerRide
		p	1		player
	m	()V	gI	maybeDespawn
	m	()Z	gJ	canDespawn
	m	()Z	gK	isLeashedToWanderingTrader
	m	()Z	gL	isLeashedToSomethingOtherThanTheWanderingTrader
	m	()Z	gb	isTraderLlama
	m	()Lbtl;	gg	makeNewLlama
	m	(I)V	v	setDespawnDelay
		p	1		despawnDelay
	m	()V	x	registerGoals
	f	I	bT	despawnDelay
c	btq$a	net/minecraft/world/entity/animal/horse/TraderLlama$TraderLlamaDefendWanderingTraderGoal
	m	(Lbtl;)V	<init>	<init>
		p	1		llama
	m	()Z	a	canUse
	m	()V	c	start
	f	Lbtl;	a	llama
	f	Lbfx;	b	ownerLastHurtBy
	f	I	c	timestamp
c	btr	net/minecraft/world/entity/animal/horse/Variant
	m	(Ljava/lang/String;IILjava/lang/String;)V	<init>	<init>
		p	3		id
		p	4		name
	m	()I	a	getId
	m	(I)Lbtr;	a	byId
		p	0		id
	m	()[Lbtr;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lbtr;	a	WHITE
	f	Lbtr;	b	CREAMY
	f	Lbtr;	c	CHESTNUT
	f	Lbtr;	d	BROWN
	f	Lbtr;	e	BLACK
	f	Lbtr;	f	GRAY
	f	Lbtr;	g	DARK_BROWN
	f	Lcom/mojang/serialization/Codec;	h	CODEC
	f	Ljava/util/function/IntFunction;	i	BY_ID
	f	I	j	id
	f	Ljava/lang/String;	k	name
	f	[Lbtr;	l	$VALUES
c	bts	net/minecraft/world/entity/animal/horse/ZombieHorse
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Laip;Lbfc;)Lbfc;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lapo;)V	a	randomizeAttributes
		p	1		random
	m	(Lbym;Lbdx;)Lbdy;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lbem;)Lamq;	d	getHurtSound
		p	1		source
	m	()Lbgc;	eJ	getMobType
	m	()V	gi	addBehaviourGoals
	m	()Lbhd$a;	q	createAttributes
	m	()Lamq;	s	getAmbientSound
	m	()Lamq;	x_	getDeathSound
c	btt	net/minecraft/world/entity/animal/horse/package-info
c	btu	net/minecraft/world/entity/animal/package-info
c	btv	net/minecraft/world/entity/animal/sniffer/Sniffer
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()Lecz;	A_	getBoundingBoxForCulling
	m	()V	T	sendDebugPackets
	m	()V	U	customServerAiStep
	m	()I	W	getMaxHeadYRot
	m	(Lacl;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Laip;Lbfc;)Lbfc;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lbfd;)Lbtv;	a	emitDiggingParticles
		p	1		diggingAnimationState
	m	(Lbrj;)Z	a	canMate
		p	1		other
	m	(Lbtv$a;)Lbtv;	a	transitionTo
		p	1		state
	m	(Lcom/mojang/serialization/Dynamic;)Lbgy;	a	makeBrain
		p	1		dynamic
	m	(Z)V	a	setBaby
		p	1		baby
	m	(Lbgj;Lbfi;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lbtv$a;)Lbtv;	b	setState
		p	1		state
	m	(Lbym;Lbdx;)Lbdy;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lgt;Ldbq;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lbem;)Lamq;	d	getHurtSound
		p	1		source
	m	(Lcfv;)Lamq;	d	getEatingSound
		p	1		stack
	m	()Lbgy;	dH	getBrain
	m	()Lbgy$b;	dI	brainProvider
	m	()V	eS	jumpFromGround
	m	()Ljava/util/Optional;	fS	calculateDigPosition
	m	()Z	fY	canDig
	m	()Z	fZ	isMoving
	m	(Lgt;)Z	g	canDig
		p	1		pos
	m	()Z	ga	isMovingInWater
	m	()Z	gb	isMovingOnLand
	m	()Lgt;	gc	getHeadPosition
	m	()Lbtv$a;	gd	getState
	m	()V	ge	resetAnimations
	m	()Lbtv;	gf	onDiggingStart
	m	()V	gg	dropSeed
	m	()Ljava/util/stream/Stream;	gh	getExploredPositions
	m	()V	gi	playSearchingSound
	m	(Lgt;)Lbtv;	h	storeExploredPosition
		p	1		pos
	m	()V	l	tick
	m	(Lbfh;)Z	l	canRide
		p	1		entity
	m	(Lcfv;)Z	m	isFood
		p	1		stack
	m	()Lbhd$a;	q	createAttributes
	m	()Z	r	isPanicking
	m	()Lamq;	s	getAmbientSound
	m	(I)Lede;	s	lambda$calculateDigPosition$0
	m	()Z	w	canPlayDiggingSound
	m	(Z)Lbtv;	w	onDiggingComplete
		p	1		explored
	m	()Lamq;	x_	getDeathSound
	f	Lbfd;	bS	walkingAnimationState
	f	Lbfd;	bT	panicAnimationState
	f	Lbfd;	bV	feelingHappyAnimationState
	f	Lbfd;	bW	scentingAnimationState
	f	Lbfd;	bX	sniffingAnimationState
	f	Lbfd;	bY	searchingAnimationState
	f	Lbfd;	bZ	diggingAnimationState
	f	Lbfd;	ca	risingAnimationState
	f	I	cb	DIGGING_PARTICLES_DELAY_TICKS
	f	I	cc	DIGGING_PARTICLES_DURATION_TICKS
	f	I	cd	DIGGING_PARTICLES_AMOUNT
	f	I	ce	DIGGING_DROP_SEED_OFFSET_TICKS
	f	I	cf	SNIFFING_PROXIMITY_DISTANCE
	f	I	cg	SNIFFER_BABY_AGE_TICKS
	f	Lacl;	ch	DATA_STATE
	f	Lacl;	ci	DATA_DROP_SEED_AT_TICK
c	btv$1	net/minecraft/world/entity/animal/sniffer/Sniffer$1
	f	[I	a	$SwitchMap$net$minecraft$world$entity$animal$sniffer$Sniffer$State
c	btv$a	net/minecraft/world/entity/animal/sniffer/Sniffer$State
	m	()[Lbtv$a;	a	$values
	f	Lbtv$a;	a	IDLING
	f	Lbtv$a;	b	FEELING_HAPPY
	f	Lbtv$a;	c	SCENTING
	f	Lbtv$a;	d	SNIFFING
	f	Lbtv$a;	e	SEARCHING
	f	Lbtv$a;	f	DIGGING
	f	Lbtv$a;	g	RISING
	f	[Lbtv$a;	h	$VALUES
c	btw	net/minecraft/world/entity/animal/sniffer/SnifferAi
	m	(Lbgy;)Lbgy;	a	makeBrain
		p	0		brain
	m	(Lbtv;)V	a	updateActivity
		p	0		sniffer
	m	(Lbgy;)V	b	initCoreActivity
		p	0		brain
	m	(Lbgy;)V	c	initSniffingActivity
		p	0		brain
	m	(Lbgy;)V	d	initDigActivity
		p	0		brain
	m	(Lbgy;)V	e	initIdleActivity
		p	0		brain
	f	Ljava/util/List;	a	SENSOR_TYPES
	f	Ljava/util/List;	b	MEMORY_TYPES
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	I	d	MAX_LOOK_DISTANCE
	f	I	e	SNIFFING_COOLDOWN_TICKS
	f	F	f	SPEED_MULTIPLIER_WHEN_IDLING
	f	F	g	SPEED_MULTIPLIER_WHEN_PANICKING
	f	F	h	SPEED_MULTIPLIER_WHEN_SNIFFING
c	btw$1	net/minecraft/world/entity/animal/sniffer/SnifferAi$1
	m	(F)V	<init>	<init>
		p	1		speed
	m	(Laip;Lbgg;J)V	b	start
	m	(Laip;Lbfx;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
c	btw$a	net/minecraft/world/entity/animal/sniffer/SnifferAi$Digging
	m	(II)V	<init>	<init>
		p	1		minRunTime
		p	2		maxRunTime
	m	(Laip;Lbfx;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laip;Lbfx;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbtv;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laip;Lbtv;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbfx;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbtv;J)V	b	start
	m	(Laip;Lbtv;J)V	c	stop
	m	(Laip;Lbfx;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
c	btw$b	net/minecraft/world/entity/animal/sniffer/SnifferAi$FeelingHappy
	m	(II)V	<init>	<init>
		p	1		minRunTime
		p	2		maxRunTime
	m	(Laip;Lbfx;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbtv;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbfx;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbtv;J)V	b	start
	m	(Laip;Lbtv;J)V	c	stop
	m	(Laip;Lbfx;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
c	btw$c	net/minecraft/world/entity/animal/sniffer/SnifferAi$FinishedDigging
	m	(I)V	<init>	<init>
		p	1		runTime
	m	(Laip;Lbfx;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laip;Lbfx;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbtv;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laip;Lbtv;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbfx;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbtv;J)V	b	start
	m	(Laip;Lbtv;J)V	c	stop
	m	(Laip;Lbfx;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
c	btw$d	net/minecraft/world/entity/animal/sniffer/SnifferAi$Scenting
	m	(II)V	<init>	<init>
		p	1		minRunTime
		p	2		maxRunTime
	m	(Laip;Lbfx;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbtv;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbfx;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbtv;J)V	b	start
	m	(Laip;Lbtv;J)V	c	stop
	m	(Laip;Lbfx;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
c	btw$e	net/minecraft/world/entity/animal/sniffer/SnifferAi$Searching
	m	(Laip;Lbfx;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laip;Lbfx;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbtv;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laip;Lbtv;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbfx;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbtv;J)V	b	start
	m	(Laip;Lbtv;J)V	c	stop
	m	(Laip;Lbfx;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
c	btw$f	net/minecraft/world/entity/animal/sniffer/SnifferAi$Sniffing
	m	(II)V	<init>	<init>
		p	1		minRunTime
		p	2		maxRunTime
	m	(Laip;Lbfx;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laip;Lbfx;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbtv;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laip;Lbtv;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lbtv;Lgt;)V	a	lambda$stop$0
		p	1		pos
	m	(Laip;Lbfx;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Laip;Lbtv;J)V	b	start
	m	(Laip;Lbtv;J)V	c	stop
	m	(Laip;Lbfx;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
c	btx	net/minecraft/world/entity/boss/EnderDragonPart
	m	(Lbtz;Ljava/lang/String;FF)V	<init>	<init>
		p	1		owner
		p	2		name
		p	3		width
		p	4		height
	m	()Lvb;	S	getAddEntityPacket
	m	(Lbem;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbgj;)Lbfi;	a	getDimensions
		p	1		pose
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Z	bm	isPickable
	m	()Z	dE	shouldBeSaved
	m	()Lcfv;	dt	getPickResult
	m	(Lbfh;)Z	q	is
		p	1		entity
	f	Lbtz;	b	parentMob
	f	Ljava/lang/String;	c	name
	f	Lbfi;	d	size
c	bty	net/minecraft/world/entity/boss/enderdragon/EndCrystal
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcmi;DDD)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
	m	(D)Z	a	shouldRenderAtSqrDistance
		p	1		distance
	m	(Lbem;)V	a	onDestroyedBy
		p	1		source
	m	(Lbem;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lgt;)V	a	setBeamTarget
		p	1		beamTarget
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Z)V	a	setShowBottom
		p	1		showBottom
	m	()Lbfh$b;	aQ	getMovementEmission
	m	()V	a_	defineSynchedData
	m	()V	ah	kill
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Z	bm	isPickable
	m	()Lcfv;	dt	getPickResult
	m	()Lgt;	i	getBeamTarget
	m	()Z	j	showsBottom
	m	()V	l	tick
	f	I	b	time
	f	Lacl;	c	DATA_BEAM_TARGET
	f	Lacl;	d	DATA_SHOW_BOTTOM
c	btz	net/minecraft/world/entity/boss/enderdragon/EnderDragon
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	2		world
	m	(F)Lede;	B	getHeadLookVector
		p	1		tickDelta
	m	(IF)[D	a	getLatencyPos
		p	1		segmentNumber
		p	2		tickDelta
	m	(IILdwx;)Ldwz;	a	findPath
		p	1		from
		p	2		to
		p	3		pathNode
	m	(I[D[D)F	a	getHeadPartYOffset
		p	1		segmentOffset
		p	2		segment1
		p	3		segment2
	m	(Lacl;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Lbem;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbtx;DDD)V	a	tickPart
		p	1		enderDragonPart
		p	2		dx
		p	4		dy
		p	6		dz
	m	(Lbtx;Lbem;F)Z	a	hurt
		p	1		part
		p	2		source
		p	3		amount
	m	(Lbty;Lgt;Lbem;)V	a	onCrystalDestroyed
		p	1		endCrystal
		p	2		pos
		p	3		source
	m	(Ldwx;Ldwx;)Ldwz;	a	reconstructPath
		p	1		unused
		p	2		node
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lvf;)V	a	recreateFromPacket
		p	1		packet
	m	()V	aM	onFlap
	m	()Z	aN	isFlapping
	m	()V	a_	defineSynchedData
	m	()V	ah	kill
	m	(Lbey;Lbfh;)Z	b	addEffect
		p	1		effect
		p	2		source
	m	(Lecz;)Z	b	checkWalls
		p	1		box
	m	(Ljava/util/List;)V	b	knockBack
		p	1		entities
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()V	b_	aiStep
	m	()Z	bm	isPickable
	m	()D	bv	getPassengersRidingOffset
	m	(Lbfx;)Z	c	canAttack
		p	1		target
	m	(Ljava/util/List;)V	c	hurt
		p	1		entities
	m	()Lams;	cX	getSoundSource
	m	()Z	co	canChangeDimensions
	m	(Lbem;)Lamq;	d	getHurtSound
		p	1		source
	m	()V	dU	tickDeath
	m	()V	ds	checkDespawn
	m	()F	eN	getSoundVolume
	m	()Lbuq;	fP	getPhaseManager
	m	()Ldfc;	fQ	getDragonFight
	m	()F	fR	getHeadYOffset
	m	()V	fS	checkCrystals
	m	(Lbem;F)Z	g	reallyHurt
		p	1		source
		p	2		amount
	m	(D)F	i	rotWrap
		p	1		yawDegrees
	m	(Lbfh;)Z	l	canRide
		p	1		entity
	m	()Lbhd$a;	q	createAttributes
	m	()I	r	findClosestNode
	m	(DDD)I	r	findClosestNode
		p	1		x
		p	3		y
		p	5		z
	m	()Lamq;	s	getAmbientSound
	m	()[Lbtx;	w	getSubEntities
	f	Lacl;	b	DATA_PHASE
	f	F	bR	oFlapTime
	f	F	bS	flapTime
	f	Z	bT	inWall
	f	I	bU	dragonDeathTime
	f	F	bV	yRotA
	f	Lbty;	bW	nearestCrystal
	f	Lorg/slf4j/Logger;	bX	LOGGER
	f	Lbqk;	bY	CRYSTAL_DESTROY_TARGETING
	f	I	bZ	GROWL_INTERVAL_MIN
	f	[[D	c	positions
	f	I	ca	GROWL_INTERVAL_MAX
	f	F	cb	SITTING_ALLOWED_DAMAGE_PERCENTAGE
	f	Ljava/lang/String;	cc	DRAGON_DEATH_TIME_KEY
	f	Ljava/lang/String;	cd	DRAGON_PHASE_KEY
	f	[Lbtx;	ce	subEntities
	f	Lbtx;	cf	neck
	f	Lbtx;	cg	body
	f	Lbtx;	ch	tail1
	f	Lbtx;	ci	tail2
	f	Lbtx;	cj	tail3
	f	Lbtx;	ck	wing1
	f	Lbtx;	cl	wing2
	f	Ldfc;	cm	dragonFight
	f	Lbuq;	cn	phaseManager
	f	I	co	growlTime
	f	F	cp	sittingDamageReceived
	f	[Ldwx;	cq	nodes
	f	[I	cr	nodeAdjacency
	f	Ldwu;	cs	openSet
	f	I	d	posPointer
	f	Lbtx;	e	head
c	bua	net/minecraft/world/entity/boss/enderdragon/package-info
c	bub	net/minecraft/world/entity/boss/enderdragon/phases/AbstractDragonPhaseInstance
	m	(Lbtz;)V	<init>	<init>
		p	1		dragon
	m	()Z	a	isSitting
	m	(Lbem;F)F	a	onHurt
		p	1		damageSource
		p	2		damage
	m	(Lbty;Lgt;Lbem;Lbym;)V	a	onCrystalDestroyed
		p	1		crystal
		p	2		pos
		p	3		source
		p	4		player
	m	()V	b	doClientTick
	m	()V	c	doServerTick
	m	()V	d	begin
	m	()V	e	end
	m	()F	f	getFlySpeed
	m	()Lede;	g	getFlyTargetLocation
	m	()F	h	getTurnSpeed
	f	Lbtz;	a	dragon
c	buc	net/minecraft/world/entity/boss/enderdragon/phases/AbstractDragonSittingPhase
	m	(Lbtz;)V	<init>	<init>
		p	1		dragon
	m	()Z	a	isSitting
	m	(Lbem;F)F	a	onHurt
		p	1		damageSource
		p	2		damage
c	bud	net/minecraft/world/entity/boss/enderdragon/phases/DragonChargePlayerPhase
	m	(Lbtz;)V	<init>	<init>
		p	1		dragon
	m	(Lede;)V	a	setTarget
		p	1		pathTarget
	m	()V	c	doServerTick
	m	()V	d	begin
	m	()F	f	getFlySpeed
	m	()Lede;	g	getFlyTargetLocation
	m	()Lbup;	i	getPhase
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	I	c	CHARGE_RECOVERY_TIME
	f	Lede;	d	targetLocation
	f	I	e	timeSinceCharge
c	bue	net/minecraft/world/entity/boss/enderdragon/phases/DragonDeathPhase
	m	(Lbtz;)V	<init>	<init>
		p	1		dragon
	m	()V	b	doClientTick
	m	()V	c	doServerTick
	m	()V	d	begin
	m	()F	f	getFlySpeed
	m	()Lede;	g	getFlyTargetLocation
	m	()Lbup;	i	getPhase
	f	Lede;	b	targetLocation
	f	I	c	time
c	buf	net/minecraft/world/entity/boss/enderdragon/phases/DragonHoldingPatternPhase
	m	(Lbtz;)V	<init>	<init>
		p	1		dragon
	m	(Lbty;Lgt;Lbem;Lbym;)V	a	onCrystalDestroyed
		p	1		crystal
		p	2		pos
		p	3		source
		p	4		player
	m	(Lbym;)V	a	strafePlayer
		p	1		player
	m	()V	c	doServerTick
	m	()V	d	begin
	m	()Lede;	g	getFlyTargetLocation
	m	()Lbup;	i	getPhase
	m	()V	j	findNewTarget
	m	()V	k	navigateToNextPathNode
	f	Lbqk;	b	NEW_TARGET_TARGETING
	f	Ldwz;	c	currentPath
	f	Lede;	d	targetLocation
	f	Z	e	clockwise
c	bug	net/minecraft/world/entity/boss/enderdragon/phases/DragonHoverPhase
	m	(Lbtz;)V	<init>	<init>
		p	1		dragon
	m	()Z	a	isSitting
	m	()V	c	doServerTick
	m	()V	d	begin
	m	()F	f	getFlySpeed
	m	()Lede;	g	getFlyTargetLocation
	m	()Lbup;	i	getPhase
	f	Lede;	b	targetLocation
c	buh	net/minecraft/world/entity/boss/enderdragon/phases/DragonLandingApproachPhase
	m	(Lbtz;)V	<init>	<init>
		p	1		dragon
	m	()V	c	doServerTick
	m	()V	d	begin
	m	()Lede;	g	getFlyTargetLocation
	m	()Lbup;	i	getPhase
	m	()V	j	findNewTarget
	m	()V	k	navigateToNextPathNode
	f	Lbqk;	b	NEAR_EGG_TARGETING
	f	Ldwz;	c	currentPath
	f	Lede;	d	targetLocation
c	bui	net/minecraft/world/entity/boss/enderdragon/phases/DragonLandingPhase
	m	(Lbtz;)V	<init>	<init>
		p	1		dragon
	m	()V	b	doClientTick
	m	()V	c	doServerTick
	m	()V	d	begin
	m	()F	f	getFlySpeed
	m	()Lede;	g	getFlyTargetLocation
	m	()F	h	getTurnSpeed
	m	()Lbup;	i	getPhase
	f	Lede;	b	targetLocation
c	buj	net/minecraft/world/entity/boss/enderdragon/phases/DragonPhaseInstance
	m	()Z	a	isSitting
	m	(Lbem;F)F	a	onHurt
		p	1		damageSource
		p	2		damage
	m	(Lbty;Lgt;Lbem;Lbym;)V	a	onCrystalDestroyed
		p	1		crystal
		p	2		pos
		p	3		source
		p	4		player
	m	()V	b	doClientTick
	m	()V	c	doServerTick
	m	()V	d	begin
	m	()V	e	end
	m	()F	f	getFlySpeed
	m	()Lede;	g	getFlyTargetLocation
	m	()F	h	getTurnSpeed
	m	()Lbup;	i	getPhase
c	buk	net/minecraft/world/entity/boss/enderdragon/phases/DragonSittingAttackingPhase
	m	(Lbtz;)V	<init>	<init>
		p	1		dragon
	m	()V	b	doClientTick
	m	()V	c	doServerTick
	m	()V	d	begin
	m	()Lbup;	i	getPhase
	f	I	b	ROAR_DURATION
	f	I	c	attackingTicks
c	bul	net/minecraft/world/entity/boss/enderdragon/phases/DragonSittingFlamingPhase
	m	(Lbtz;)V	<init>	<init>
		p	1		dragon
	m	()V	b	doClientTick
	m	()V	c	doServerTick
	m	()V	d	begin
	m	()V	e	end
	m	()Lbup;	i	getPhase
	m	()V	j	resetFlameCount
	f	I	b	FLAME_DURATION
	f	I	c	SITTING_FLAME_ATTACKS_COUNT
	f	I	d	WARMUP_TIME
	f	I	e	flameTicks
	f	I	f	flameCount
	f	Lbfe;	g	flame
c	bum	net/minecraft/world/entity/boss/enderdragon/phases/DragonSittingScanningPhase
	m	(Lbtz;)V	<init>	<init>
		p	1		dragon
	m	(Lbtz;Lbfx;)Z	a	lambda$new$0
		p	1		player
	m	()V	c	doServerTick
	m	()V	d	begin
	m	()Lbup;	i	getPhase
	f	I	b	SITTING_SCANNING_IDLE_TICKS
	f	I	c	SITTING_ATTACK_Y_VIEW_RANGE
	f	I	d	SITTING_ATTACK_VIEW_RANGE
	f	I	e	SITTING_CHARGE_VIEW_RANGE
	f	Lbqk;	f	CHARGE_TARGETING
	f	Lbqk;	g	scanTargeting
	f	I	h	scanningTime
c	bun	net/minecraft/world/entity/boss/enderdragon/phases/DragonStrafePlayerPhase
	m	(Lbtz;)V	<init>	<init>
		p	1		dragon
	m	(Lbfx;)V	a	setTarget
		p	1		targetEntity
	m	()V	c	doServerTick
	m	()V	d	begin
	m	()Lede;	g	getFlyTargetLocation
	m	()Lbup;	i	getPhase
	m	()V	j	findNewTarget
	m	()V	k	navigateToNextPathNode
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	I	c	FIREBALL_CHARGE_AMOUNT
	f	I	d	fireballCharge
	f	Ldwz;	e	currentPath
	f	Lede;	f	targetLocation
	f	Lbfx;	g	attackTarget
	f	Z	h	holdingPatternClockwise
c	buo	net/minecraft/world/entity/boss/enderdragon/phases/DragonTakeoffPhase
	m	(Lbtz;)V	<init>	<init>
		p	1		dragon
	m	()V	c	doServerTick
	m	()V	d	begin
	m	()Lede;	g	getFlyTargetLocation
	m	()Lbup;	i	getPhase
	m	()V	j	findNewTarget
	m	()V	k	navigateToNextPathNode
	f	Z	b	firstTick
	f	Ldwz;	c	currentPath
	f	Lede;	d	targetLocation
c	bup	net/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase
	m	(ILjava/lang/Class;Ljava/lang/String;)V	<init>	<init>
		p	1		id
		p	2		phaseClass
		p	3		name
	m	()Ljava/lang/reflect/Constructor;	a	getConstructor
	m	(I)Lbup;	a	getById
		p	0		id
	m	(Lbtz;)Lbuj;	a	createInstance
		p	1		dragon
	m	(Ljava/lang/Class;Ljava/lang/String;)Lbup;	a	create
		p	0		phaseClass
		p	1		name
	m	()I	b	getId
	m	()I	c	getCount
	f	Lbup;	a	HOLDING_PATTERN
	f	Lbup;	b	STRAFE_PLAYER
	f	Lbup;	c	LANDING_APPROACH
	f	Lbup;	d	LANDING
	f	Lbup;	e	TAKEOFF
	f	Lbup;	f	SITTING_FLAMING
	f	Lbup;	g	SITTING_SCANNING
	f	Lbup;	h	SITTING_ATTACKING
	f	Lbup;	i	CHARGING_PLAYER
	f	Lbup;	j	DYING
	f	Lbup;	k	HOVERING
	f	[Lbup;	l	phases
	f	Ljava/lang/Class;	m	instanceClass
	f	I	n	id
	f	Ljava/lang/String;	o	name
c	buq	net/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhaseManager
	m	(Lbtz;)V	<init>	<init>
		p	1		dragon
	m	()Lbuj;	a	getCurrentPhase
	m	(Lbup;)V	a	setPhase
		p	1		type
	m	(Lbup;)Lbuj;	b	getPhase
		p	1		type
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lbtz;	b	dragon
	f	[Lbuj;	c	phases
	f	Lbuj;	d	currentPhase
c	bur	net/minecraft/world/entity/boss/enderdragon/phases/package-info
c	bus	net/minecraft/world/entity/boss/package-info
c	but	net/minecraft/world/entity/boss/wither/WitherBoss
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	U	customServerAiStep
	m	()Z	a	isPowered
	m	(FFF)F	a	rotlerp
		p	1		prevAngle
		p	2		desiredAngle
		p	3		maxDifference
	m	(IDDDZ)V	a	performRangedAttack
		p	1		headIndex
		p	2		targetX
		p	4		targetY
		p	6		targetZ
		p	8		charged
	m	(II)V	a	setAlternativeTarget
		p	1		headIndex
		p	2		id
	m	(ILbfx;)V	a	performRangedAttack
		p	1		headIndex
		p	2		target
	m	(Lbem;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbem;IZ)V	a	dropCustomDeathLoot
		p	1		source
		p	2		lootingMultiplier
		p	3		allowDrops
	m	(Lbfx;F)V	a	performRangedAttack
		p	1		target
		p	2		pullProgress
	m	(Lcmi;)Lbph;	a	createNavigation
		p	1		world
	m	(Ldbq;Lede;)V	a	makeStuckInBlock
		p	1		state
		p	2		multiplier
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(I)F	b	getHeadYRot
		p	1		headIndex
	m	(Lbey;Lbfh;)Z	b	addEffect
		p	1		effect
		p	2		source
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Ltj;)V	b	setCustomName
		p	1		name
	m	()V	b_	aiStep
	m	(I)F	c	getHeadXRot
		p	1		headIndex
	m	(Laiq;)V	c	startSeenByPlayer
		p	1		player
	m	(Lbey;)Z	c	canBeAffected
		p	1		effect
	m	(Ldbq;)Z	c	canDestroy
		p	0		block
	m	()Z	co	canChangeDimensions
	m	(Laiq;)V	d	stopSeenByPlayer
		p	1		player
	m	(Lbem;)Lamq;	d	getHurtSound
		p	1		source
	m	()V	ds	checkDespawn
	m	()Lbgc;	eJ	getMobType
	m	(Lbfh;)Z	l	canRide
		p	1		entity
	m	(Lbfx;)Z	m	lambda$static$0
		p	0		entity
	m	()V	q	makeInvulnerable
	m	()Lbhd$a;	r	createAttributes
	m	(I)V	r	setInvulnerableTicks
		p	1		ticks
	m	()Lamq;	s	getAmbientSound
	m	(I)I	s	getAlternativeTarget
		p	1		headIndex
	m	(I)D	t	getHeadX
		p	1		headIndex
	m	(I)D	u	getHeadY
		p	1		headIndex
	m	(I)D	v	getHeadZ
		p	1		headIndex
	m	()I	w	getInvulnerableTicks
	m	()V	x	registerGoals
	m	()Lamq;	x_	getDeathSound
	f	Lacl;	b	DATA_TARGET_A
	f	Lacl;	bS	DATA_ID_INV
	f	I	bT	INVULNERABLE_TICKS
	f	[F	bU	xRotHeads
	f	[F	bV	yRotHeads
	f	[F	bW	xRotOHeads
	f	[F	bX	yRotOHeads
	f	[I	bY	nextHeadUpdate
	f	[I	bZ	idleHeadUpdates
	f	Lacl;	c	DATA_TARGET_B
	f	I	ca	destroyBlocksTick
	f	Laim;	cb	bossEvent
	f	Ljava/util/function/Predicate;	cc	LIVING_ENTITY_SELECTOR
	f	Lbqk;	cd	TARGETING_CONDITIONS
	f	Lacl;	d	DATA_TARGET_C
	f	Ljava/util/List;	e	DATA_TARGETS
c	but$a	net/minecraft/world/entity/boss/wither/WitherBoss$WitherDoNothingGoal
	m	()Z	a	canUse
	f	Lbut;	a	this$0
c	buu	net/minecraft/world/entity/boss/wither/package-info
c	buv	net/minecraft/world/entity/decoration/ArmorStand
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcmi;DDD)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
	m	()Lhv;	A	getRightArmPose
	m	(Lbfh;)V	A	doPush
		p	1		entity
	m	()Lhv;	C	getLeftLegPose
	m	()Ldwp;	C_	getPistonPushReaction
	m	()Lhv;	D	getRightLegPose
	m	()Z	E	hasPhysics
	m	()V	F	updateInvisibilityStatus
	m	()Lre;	G	writePose
	m	()V	I	showBreakingParticles
	m	()V	J	playBrokenSound
	m	(BIZ)B	a	setBit
		p	1		value
		p	2		bitField
		p	3		set
	m	(D)Z	a	shouldRenderAtSqrDistance
		p	1		distance
	m	(Lacl;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Laip;Lbfw;)V	a	thunderHit
		p	1		world
		p	2		lightning
	m	(Lbem;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbfh;)Z	a	lambda$static$0
		p	0		entity
	m	(Lbfm;Lcfv;)V	a	setItemSlot
		p	1		slot
		p	2		stack
	m	(Lbgj;)Lbfi;	a	getDimensions
		p	1		pose
	m	(Lbym;Lbfm;Lcfv;Lbdx;)Z	a	swapItem
		p	1		player
		p	2		slot
		p	3		stack
		p	4		hand
	m	(Lbym;Lede;Lbdx;)Lbdy;	a	interactAt
		p	1		player
		p	2		hitPos
		p	3		hand
	m	(Lhv;)V	a	setHeadPose
		p	1		angle
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Z)V	a	setShowArms
		p	1		showArms
	m	()V	a_	defineSynchedData
	m	()V	ah	kill
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	(Lbgj;Lbfi;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lhv;)V	b	setBodyPose
		p	1		angle
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Ljava/lang/Iterable;	bH	getHandSlots
	m	()Ljava/lang/Iterable;	bI	getArmorSlots
	m	()Z	bm	isPickable
	m	()Z	bn	isPushable
	m	()D	bu	getMyRidingOffset
	m	(Lbfm;)Lcfv;	c	getItemBySlot
		p	1		slot
	m	(Lhv;)V	c	setLeftArmPose
		p	1		angle
	m	(Lre;)V	c	readPose
		p	1		nbt
	m	()Z	cI	ignoreExplosion
	m	()Z	cU	isEffectiveAi
	m	()V	c_	refreshDimensions
	m	(Lbem;)Lamq;	d	getHurtSound
		p	1		source
	m	(Lhv;)V	d	setRightArmPose
		p	1		angle
	m	()Lcfv;	dt	getPickResult
	m	(FF)F	e	tickHeadTurn
		p	1		bodyRotation
		p	2		headRotation
	m	(Lbfm;)Z	e	isDisabled
		p	1		slot
	m	(Lhv;)V	e	setLeftLegPose
		p	1		angle
	m	()V	eZ	pushEntities
	m	()Z	ei	canBeSeenByAnyone
	m	()Lbfx$a;	ey	getFallSounds
	m	(Lcfv;)Z	f	canTakeItem
		p	1		stack
	m	(Lhv;)V	f	setRightLegPose
		p	1		angle
	m	()Lbfr;	fd	getMainArm
	m	()Z	fp	isAffectedByPotions
	m	()Z	fq	attackable
	m	(Lbem;F)V	g	causeDamage
		p	1		damageSource
		p	2		amount
	m	(Lbem;)V	h	brokenByPlayer
		p	1		damageSource
	m	(Lede;)V	h	travel
		p	1		movementInput
	m	(Lbem;)V	i	brokenByAnything
		p	1		damageSource
	m	(Lede;)Lbfm;	j	getClickedSlot
		p	1		hitPos
	m	(Z)V	j	setInvisible
		p	1		invisible
	m	()V	l	tick
	m	(F)Lede;	o	getLightProbePosition
		p	1		tickDelta
	m	()Z	q	isSmall
	m	()Z	r	isShowArms
	m	(F)V	r	setYHeadRot
		p	1		headYaw
	m	(Lbfh;)Z	r	skipAttackInteraction
		p	1		attacker
	m	()Z	s	isNoBasePlate
	m	(F)V	s	setYBodyRot
		p	1		bodyYaw
	m	(Z)V	s	setNoBasePlate
		p	1		hideBasePlate
	m	(Z)V	t	setSmall
		p	1		small
	m	(Z)V	u	setMarker
		p	1		marker
	m	(Z)Lbfi;	v	getDimensionsMarker
		p	1		marker
	m	()Z	w	isMarker
	m	()Lhv;	x	getHeadPose
	m	()Lamq;	x_	getDeathSound
	m	()Lhv;	y	getBodyPose
	m	()Z	y_	isBaby
	m	()Lhv;	z	getLeftArmPose
	f	I	bA	CLIENT_FLAG_MARKER
	f	Lacl;	bB	DATA_CLIENT_FLAGS
	f	Lacl;	bC	DATA_HEAD_POSE
	f	Lacl;	bD	DATA_BODY_POSE
	f	Lacl;	bE	DATA_LEFT_ARM_POSE
	f	Lacl;	bF	DATA_RIGHT_ARM_POSE
	f	Lacl;	bG	DATA_LEFT_LEG_POSE
	f	Lacl;	bH	DATA_RIGHT_LEG_POSE
	f	I	b	WOBBLE_TIME
	f	J	bI	lastHit
	f	Z	bJ	ENABLE_ARMS
	f	Lhv;	bK	DEFAULT_HEAD_POSE
	f	Lhv;	bL	DEFAULT_BODY_POSE
	f	Lhv;	bM	DEFAULT_LEFT_ARM_POSE
	f	Lhv;	bN	DEFAULT_RIGHT_ARM_POSE
	f	Lhv;	bO	DEFAULT_LEFT_LEG_POSE
	f	Lhv;	bP	DEFAULT_RIGHT_LEG_POSE
	f	Lbfi;	bQ	MARKER_DIMENSIONS
	f	Lbfi;	bR	BABY_DIMENSIONS
	f	D	bS	FEET_OFFSET
	f	D	bT	CHEST_OFFSET
	f	D	bU	LEGS_OFFSET
	f	D	bV	HEAD_OFFSET
	f	Ljava/util/function/Predicate;	bW	RIDABLE_MINECARTS
	f	Lhm;	bX	handItems
	f	Lhm;	bY	armorItems
	f	Z	bZ	invisible
	f	I	bz	CLIENT_FLAG_NO_BASEPLATE
	f	I	c	DISABLE_TAKING_OFFSET
	f	I	ca	disabledSlots
	f	Lhv;	cb	headPose
	f	Lhv;	cc	bodyPose
	f	Lhv;	cd	leftArmPose
	f	Lhv;	ce	rightArmPose
	f	Lhv;	cf	leftLegPose
	f	Lhv;	cg	rightLegPose
	f	I	d	DISABLE_PUTTING_OFFSET
	f	I	e	CLIENT_FLAG_SMALL
	f	I	f	CLIENT_FLAG_SHOW_ARMS
c	buv$1	net/minecraft/world/entity/decoration/ArmorStand$1
	f	[I	a	$SwitchMap$net$minecraft$world$entity$EquipmentSlot$Type
c	buw	net/minecraft/world/entity/decoration/GlowItemFrame
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcmi;Lgt;Lgz;)V	<init>	<init>
		p	1		world
		p	2		pos
		p	3		facing
	m	()Lamq;	i	getRemoveItemSound
	m	()Lamq;	j	getBreakSound
	m	()Lamq;	k	getPlaceSound
	m	()Lamq;	o	getAddItemSound
	m	()Lamq;	p	getRotateItemSound
	m	()Lcfv;	q	getFrameItemStack
c	bux	net/minecraft/world/entity/decoration/HangingEntity
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lbfl;Lcmi;Lgt;)V	<init>	<init>
		p	1		type
		p	2		world
		p	3		pos
	m	(Laip;Lbfw;)V	a	thunderHit
		p	1		world
		p	2		lightning
	m	(Lbem;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbfh;)V	a	dropItem
		p	1		entity
	m	(Lbgd;Lede;)V	a	move
		p	1		movementType
		p	2		movement
	m	(Lcfv;F)Lbvf;	a	spawnAtLocation
		p	1		stack
		p	2		yOffset
	m	(Lcua;)F	a	mirror
		p	1		mirror
	m	(Lcvq;)F	a	rotate
		p	1		rotation
	m	(Lgz;)V	a	setDirection
		p	1		facing
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(I)D	b	offs
	m	(Lbfh;)Z	b	lambda$static$0
		p	0		entity
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Z	bm	isPickable
	m	()Z	bo	repositionEntityAfterLoad
	m	()Lgz;	cA	getDirection
	m	()V	c_	refreshDimensions
	m	(DDD)V	e	setPos
		p	1		x
		p	3		y
		p	5		z
	m	(DDD)V	j	push
		p	1		deltaX
		p	3		deltaY
		p	5		deltaZ
	m	()V	l	tick
	m	()V	r	recalculateBoundingBox
	m	(Lbfh;)Z	r	skipAttackInteraction
		p	1		attacker
	m	()Z	s	survives
	m	()I	t	getWidth
	m	()I	v	getHeight
	m	()V	w	playPlacementSound
	m	()Lgt;	x	getPos
	f	Ljava/util/function/Predicate;	b	HANGING_ENTITY
	f	Lgt;	c	pos
	f	Lgz;	d	direction
	f	Lorg/slf4j/Logger;	e	LOGGER
	f	I	f	checkInterval
c	bux$1	net/minecraft/world/entity/decoration/HangingEntity$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$Rotation
c	buy	net/minecraft/world/entity/decoration/ItemFrame
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lbfl;Lcmi;Lgt;Lgz;)V	<init>	<init>
		p	1		type
		p	2		world
		p	3		pos
		p	4		facing
	m	(Lcmi;Lgt;Lgz;)V	<init>	<init>
		p	1		world
		p	2		pos
		p	3		facing
	m	()Z	A	hasFramedMap
	m	()I	C	getRotation
	m	()I	D	getAnalogOutput
	m	()Lvb;	S	getAddEntityPacket
	m	(D)Z	a	shouldRenderAtSqrDistance
		p	1		distance
	m	(IZ)V	a	setRotation
		p	1		value
		p	2		updateComparators
	m	(Lacl;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Lbem;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbfh;)V	a	dropItem
		p	1		entity
	m	(Lbgd;Lede;)V	a	move
		p	1		movementType
		p	2		movement
	m	(Lbgj;Lbfi;)F	a	getEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lbym;Lbdx;)Lbdy;	a	interact
		p	1		player
		p	2		hand
	m	(Lcfv;)V	a	setItem
		p	1		stack
	m	(Lcfv;Z)V	a	setItem
		p	1		value
		p	2		update
	m	(Lgz;)V	a	setDirection
		p	1		facing
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lvf;)V	a	recreateFromPacket
		p	1		packet
	m	()V	a_	defineSynchedData
	m	(I)Lbgq;	a_	getSlot
		p	1		mappedIndex
	m	()V	ah	kill
	m	(I)V	b	setRotation
		p	1		value
	m	(Lbfh;Z)V	b	dropItem
		p	1		entity
		p	2		alwaysDrop
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()F	bB	getPickRadius
	m	(I)V	c	lambda$removeFramedMap$0
	m	(Lcfv;)V	c	removeFramedMap
	m	(Lcfv;)V	d	onItemChanged
		p	1		stack
	m	()Lcfv;	dt	getPickResult
	m	()F	dx	getVisualRotationYInDegrees
	m	()Lamq;	i	getRemoveItemSound
	m	()Lamq;	j	getBreakSound
	m	(DDD)V	j	push
		p	1		deltaX
		p	3		deltaY
		p	5		deltaZ
	m	()Lamq;	k	getPlaceSound
	m	()Lamq;	o	getAddItemSound
	m	()Lamq;	p	getRotateItemSound
	m	()Lcfv;	q	getFrameItemStack
	m	()V	r	recalculateBoundingBox
	m	()Z	s	survives
	m	()I	t	getWidth
	m	()I	v	getHeight
	m	()V	w	playPlacementSound
	m	()Lcfv;	y	getItem
	m	()Ljava/util/OptionalInt;	z	getFramedMapId
	f	I	e	NUM_ROTATIONS
	f	Lorg/slf4j/Logger;	f	LOGGER
	f	Lacl;	g	DATA_ITEM
	f	Lacl;	h	DATA_ROTATION
	f	F	i	dropChance
	f	Z	j	fixed
c	buy$1	net/minecraft/world/entity/decoration/ItemFrame$1
	m	()Lcfv;	a	get
	m	(Lcfv;)Z	a	set
		p	1		stack
	f	Lbuy;	a	this$0
c	buy$2	net/minecraft/world/entity/decoration/ItemFrame$2
	f	[I	a	$SwitchMap$net$minecraft$core$Direction$Axis
c	buz	net/minecraft/world/entity/decoration/LeashFenceKnotEntity
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcmi;Lgt;)V	<init>	<init>
		p	1		world
		p	2		pos
	m	()Lvb;	S	getAddEntityPacket
	m	(D)Z	a	shouldRenderAtSqrDistance
		p	1		distance
	m	(Lbfh;)V	a	dropItem
		p	1		entity
	m	(Lbgj;Lbfi;)F	a	getEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lbym;Lbdx;)Lbdy;	a	interact
		p	1		player
		p	2		hand
	m	(Lgz;)V	a	setDirection
		p	1		facing
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lcmi;Lgt;)Lbuz;	b	getOrCreateKnot
		p	0		world
		p	1		pos
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Lcfv;	dt	getPickResult
	m	()V	r	recalculateBoundingBox
	m	()Z	s	survives
	m	()I	t	getWidth
	m	(F)Lede;	u	getRopeHoldPosition
		p	1		delta
	m	()I	v	getHeight
	m	()V	w	playPlacementSound
	f	D	e	OFFSET_Y
c	bva	net/minecraft/world/entity/decoration/Painting
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcmi;Lgt;)V	<init>	<init>
		p	1		world
		p	2		pos
	m	(Lcmi;Lgt;Lgz;Lhd;)V	<init>	<init>
		p	1		world
		p	2		pos
		p	3		direction
		p	4		variant
	m	()Lvb;	S	getAddEntityPacket
	m	(DDDFFIZ)V	a	lerpTo
		p	1		x
		p	3		y
		p	5		z
		p	7		yaw
		p	8		pitch
		p	9		interpolationSteps
		p	10		interpolate
	m	(ILhd;)Z	a	lambda$create$1
		p	1		variant
	m	(Lacl;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Ladd;)Ladc;	a	lambda$loadVariant$2
		p	0		id
	m	(Lbfh;)V	a	dropItem
		p	1		entity
	m	(Lbva;Lhd;)Z	a	lambda$create$0
		p	1		variant
	m	(Lcmi;Lgt;Lgz;)Ljava/util/Optional;	a	create
		p	0		world
		p	1		pos
		p	2		facing
	m	(Lhd;)V	a	setVariant
		p	1		variant
	m	(Ljava/lang/Object;)V	a	setVariant
		p	1		variant
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lre;Lhd;)V	a	storeVariant
		p	0		nbt
		p	1		variant
	m	(Lvf;)V	a	recreateFromPacket
		p	1		packet
	m	()V	a_	defineSynchedData
	m	(DDDFF)V	b	moveTo
		p	1		x
		p	3		y
		p	5		z
		p	7		yaw
		p	8		pitch
	m	(Lhd;)I	b	variantArea
		p	0		variant
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Ljava/lang/Object;	c	getVariant
	m	(Lre;)Ljava/util/Optional;	c	loadVariant
		p	0		nbt
	m	()Lede;	df	trackingPosition
	m	()Lcfv;	dt	getPickResult
	m	()Lhd;	i	getVariant
	m	()Lhd;	j	getDefaultVariant
	m	()I	t	getWidth
	m	()I	v	getHeight
	m	()V	w	playPlacementSound
	f	Ljava/lang/String;	e	VARIANT_TAG
	f	Lacl;	f	DATA_PAINTING_VARIANT_ID
	f	Ladc;	g	DEFAULT_VARIANT
c	bvb	net/minecraft/world/entity/decoration/PaintingVariant
	m	(II)V	<init>	<init>
		p	1		width
		p	2		height
	m	()I	a	getWidth
	m	()I	b	getHeight
	f	I	a	width
	f	I	b	height
c	bvc	net/minecraft/world/entity/decoration/PaintingVariants
	m	(Lhq;)Lbvb;	a	bootstrap
		p	0		registry
	m	(Ljava/lang/String;)Ladc;	a	create
		p	0		id
	f	Ladc;	A	EARTH
	f	Ladc;	B	WIND
	f	Ladc;	C	WATER
	f	Ladc;	D	FIRE
	f	Ladc;	a	KEBAB
	f	Ladc;	b	AZTEC
	f	Ladc;	c	ALBAN
	f	Ladc;	d	AZTEC2
	f	Ladc;	e	BOMB
	f	Ladc;	f	PLANT
	f	Ladc;	g	WASTELAND
	f	Ladc;	h	POOL
	f	Ladc;	i	COURBET
	f	Ladc;	j	SEA
	f	Ladc;	k	SUNSET
	f	Ladc;	l	CREEBET
	f	Ladc;	m	WANDERER
	f	Ladc;	n	GRAHAM
	f	Ladc;	o	MATCH
	f	Ladc;	p	BUST
	f	Ladc;	q	STAGE
	f	Ladc;	r	VOID
	f	Ladc;	s	SKULL_AND_ROSES
	f	Ladc;	t	WITHER
	f	Ladc;	u	FIGHTERS
	f	Ladc;	v	POINTER
	f	Ladc;	w	PIGSCENE
	f	Ladc;	x	BURNING_SKULL
	f	Ladc;	y	SKELETON
	f	Ladc;	z	DONKEY_KONG
c	bvd	net/minecraft/world/entity/decoration/package-info
c	bve	net/minecraft/world/entity/item/FallingBlockEntity
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcmi;DDDLdbq;)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
		p	8		block
	m	()Lvb;	S	getAddEntityPacket
	m	(FFLbem;)Z	a	causeFallDamage
		p	1		fallDistance
		p	2		damageMultiplier
		p	3		damageSource
	m	(Lbem;FLbfh;)V	a	lambda$causeFallDamage$0
		p	2		entity
	m	(Lcmi;Lgt;Ldbq;)Lbve;	a	fall
		p	0		world
		p	1		pos
		p	2		state
	m	(Lcpi;Lgt;)V	a	callOnBrokenAfterFall
		p	1		block
		p	2		pos
	m	(Lgt;)V	a	setStartPos
		p	1		pos
	m	(Lp;)V	a	fillCrashReportCategory
		p	1		section
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lvf;)V	a	recreateFromPacket
		p	1		packet
	m	()Lbfh$b;	aQ	getMovementEmission
	m	()V	a_	defineSynchedData
	m	(FI)V	b	setHurtsEntities
		p	1		fallHurtAmount
		p	2		fallHurtMax
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Z	bm	isPickable
	m	()Z	cJ	onlyOpCanSetNbt
	m	()Ltj;	cj	getTypeName
	m	()Z	cl	isAttackable
	m	()Z	cr	displayFireAnimation
	m	()Lgt;	i	getStartPos
	m	()V	j	disableDrop
	m	()Ldbq;	k	getBlockState
	m	()V	l	tick
	f	I	b	time
	f	Z	c	dropItem
	f	Lre;	d	blockData
	f	Lacl;	e	DATA_START_POS
	f	Lorg/slf4j/Logger;	f	LOGGER
	f	Ldbq;	g	blockState
	f	Z	h	cancelDrop
	f	Z	i	hurtEntities
	f	I	j	fallDamageMax
	f	F	k	fallDamagePerDistance
c	bvf	net/minecraft/world/entity/item/ItemEntity
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lbvf;)V	<init>	<init>
		p	1		entity
	m	(Lcmi;DDDLcfv;)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
		p	8		stack
	m	(Lcmi;DDDLcfv;DDD)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
		p	8		stack
		p	9		velocityX
		p	11		velocityY
		p	13		velocityZ
	m	()Z	A	isMergable
	m	()Ltj;	Z	getName
	m	(F)F	a	getSpin
		p	1		tickDelta
	m	(Lacl;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Lbem;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbvf;)V	a	tryToMerge
		p	1		other
	m	(Lbvf;Lcfv;Lbvf;Lcfv;)V	a	merge
		p	0		targetEntity
		p	1		targetStack
		p	2		sourceEntity
		p	3		sourceStack
	m	(Lbvf;Lcfv;Lcfv;)V	a	merge
		p	0		targetEntity
		p	1		stack1
		p	2		stack2
	m	(Lcfv;)V	a	setItem
		p	1		stack
	m	(Lcfv;Lcfv;)Z	a	areMergable
		p	0		stack1
		p	1		stack2
	m	(Lcfv;Lcfv;I)Lcfv;	a	merge
		p	0		stack1
		p	1		stack2
		p	2		maxCount
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()Lbfh$b;	aQ	getMovementEmission
	m	()Z	aR	dampensVibrations
	m	()Z	aS	fireImmune
	m	()V	a_	defineSynchedData
	m	(I)V	b	setPickUpDelay
		p	1		pickupDelay
	m	(Laip;)Lbfh;	b	changeDimension
		p	1		destination
	m	(Lbvf;)Z	b	lambda$mergeWithNeighbours$0
		p	1		otherItemEntity
	m	(Ljava/util/UUID;)V	b	setTarget
		p	1		owner
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lbym;)V	b_	playerTouch
		p	1		player
	m	(Ljava/util/UUID;)V	c	setThrower
		p	1		thrower
	m	()Lams;	cX	getSoundSource
	m	()Z	cl	isAttackable
	m	()F	dx	getVisualRotationYInDegrees
	m	()Lcfv;	i	getItem
	m	()I	j	getAge
	m	()V	k	setDefaultPickUpDelay
	m	()V	l	tick
	m	()V	o	setNoPickUpDelay
	m	()V	p	setNeverPickUp
	m	()Z	q	hasPickUpDelay
	m	()V	r	setUnlimitedLifetime
	m	()V	s	setExtendedLifetime
	m	()V	t	makeFakeItem
	m	()Lbfh;	v	getOwner
	m	()Lbvf;	w	copy
	m	()V	x	setUnderwaterMovement
	m	()V	y	setUnderLavaMovement
	m	()V	z	mergeWithNeighbours
	f	F	b	bobOffs
	f	Lacl;	c	DATA_ITEM
	f	I	d	LIFETIME
	f	I	e	INFINITE_PICKUP_DELAY
	f	I	f	INFINITE_LIFETIME
	f	I	g	age
	f	I	h	pickupDelay
	f	I	i	health
	f	Ljava/util/UUID;	j	thrower
	f	Ljava/util/UUID;	k	target
c	bvg	net/minecraft/world/entity/item/PrimedTnt
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcmi;DDDLbfx;)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
		p	8		igniter
	m	(Lbgj;Lbfi;)F	a	getEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()Lbfh$b;	aQ	getMovementEmission
	m	()V	a_	defineSynchedData
	m	(I)V	b	setFuse
		p	1		fuse
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Z	bm	isPickable
	m	()Lbfx;	i	getOwner
	m	()I	j	getFuse
	m	()V	k	explode
	m	()V	l	tick
	m	()Lbfh;	v	getOwner
	f	Lacl;	b	DATA_FUSE_ID
	f	I	c	DEFAULT_FUSE_TIME
	f	Lbfx;	d	owner
c	bvh	net/minecraft/world/entity/item/package-info
c	bvi	net/minecraft/world/entity/monster/AbstractIllager
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lbfx;)Z	c	canAttack
		p	1		target
	m	()Lbgc;	eJ	getMobType
	m	()Lbvi$a;	q	getArmPose
	m	()V	x	registerGoals
c	bvi$a	net/minecraft/world/entity/monster/AbstractIllager$IllagerArmPose
	m	()[Lbvi$a;	a	$values
	f	Lbvi$a;	a	CROSSED
	f	Lbvi$a;	b	ATTACKING
	f	Lbvi$a;	c	SPELLCASTING
	f	Lbvi$a;	d	BOW_AND_ARROW
	f	Lbvi$a;	e	CROSSBOW_HOLD
	f	Lbvi$a;	f	CROSSBOW_CHARGE
	f	Lbvi$a;	g	CELEBRATING
	f	Lbvi$a;	h	NEUTRAL
	f	[Lbvi$a;	i	$VALUES
c	bvi$b	net/minecraft/world/entity/monster/AbstractIllager$RaiderOpenDoorGoal
	m	(Lbvi;Lbzu;)V	<init>	<init>
		p	2		raider
	m	()Z	a	canUse
	f	Lbvi;	a	this$0
c	bvj	net/minecraft/world/entity/monster/AbstractSkeleton
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lapo;Lbdw;)V	a	populateDefaultEquipmentSlots
		p	1		random
		p	2		localDifficulty
	m	(Lbfm;Lcfv;)V	a	setItemSlot
		p	1		slot
		p	2		stack
	m	(Lbfx;F)V	a	performRangedAttack
		p	1		target
		p	2		pullProgress
	m	(Lcgl;)Z	a	canFireProjectileWeapon
		p	1		weapon
	m	(Lcmx;Lbdw;Lbgb;Lbgr;Lre;)Lbgr;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lbgj;Lbfi;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lcfv;F)Lbys;	b	getArrow
		p	1		arrow
		p	2		damageModifier
	m	(Lgt;Ldbq;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	()V	b_	aiStep
	m	()V	bt	rideTick
	m	()D	bu	getMyRidingOffset
	m	()Lbgc;	eJ	getMobType
	m	()Z	fS	isShaking
	m	()Lbhd$a;	q	createAttributes
	m	()Lamq;	r	getStepSound
	m	()V	w	reassessWeaponGoal
	m	()V	x	registerGoals
	f	Lbnt;	b	bowGoal
	f	Lbnd;	c	meleeGoal
c	bvj$1	net/minecraft/world/entity/monster/AbstractSkeleton$1
	m	(Lbvj;Lbgg;DZ)V	<init>	<init>
		p	2		mob
		p	3		speed
		p	5		pauseWhenMobIdle
	m	()V	c	start
	m	()V	d	stop
	f	Lbvj;	b	this$0
c	bvk	net/minecraft/world/entity/monster/Blaze
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	U	customServerAiStep
	m	()V	a_	defineSynchedData
	m	()Z	bK	isOnFire
	m	()V	b_	aiStep
	m	()F	bh	getLightLevelDependentMagicValue
	m	(Lbem;)Lamq;	d	getHurtSound
		p	1		source
	m	()Z	eX	isSensitiveToWater
	m	()Lbhd$a;	q	createAttributes
	m	()Z	r	isCharged
	m	()Lamq;	s	getAmbientSound
	m	(Z)V	w	setCharged
		p	1		fireActive
	m	()V	x	registerGoals
	m	()Lamq;	x_	getDeathSound
	f	F	b	allowedHeightOffset
	f	I	c	nextHeightOffsetChangeTick
	f	Lacl;	d	DATA_FLAGS_ID
c	bvk$a	net/minecraft/world/entity/monster/Blaze$BlazeAttackGoal
	m	(Lbvk;)V	<init>	<init>
		p	1		blaze
	m	()Z	J_	requiresUpdateEveryTick
	m	()Z	a	canUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	m	()D	h	getFollowDistance
	f	Lbvk;	a	blaze
	f	I	b	attackStep
	f	I	c	attackTime
	f	I	d	lastSeen
c	bvl	net/minecraft/world/entity/monster/CaveSpider
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcmx;Lbdw;Lbgb;Lbgr;Lre;)Lbgr;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lbgj;Lbfi;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	()Lbhd$a;	q	createCaveSpider
	m	(Lbfh;)Z	z	doHurtTarget
		p	1		target
c	bvm	net/minecraft/world/entity/monster/Creeper
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(F)F	C	getSwelling
		p	1		timeDelta
	m	()Z	a	isPowered
	m	(FFLbem;)Z	a	causeFallDamage
		p	1		fallDistance
		p	2		damageMultiplier
		p	3		damageSource
	m	(Laip;Lbfw;)V	a	thunderHit
		p	1		world
		p	2		lightning
	m	(Lbdx;Lbym;)V	a	lambda$mobInteract$0
		p	1		player
	m	(Lbem;IZ)V	a	dropCustomDeathLoot
		p	1		source
		p	2		lootingMultiplier
		p	3		allowDrops
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(I)V	b	setSwellDir
		p	1		fuseSpeed
	m	(Lbym;Lbdx;)Lbdy;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()I	cp	getMaxFallDistance
	m	(Lbem;)Lamq;	d	getHurtSound
		p	1		source
	m	()V	fS	ignite
	m	()Z	fT	canDropMobsSkull
	m	()V	fU	increaseDroppedSkulls
	m	()V	fV	explodeCreeper
	m	()V	fW	spawnLingeringCloud
	m	(Lbfx;)V	i	setTarget
		p	1		target
	m	()V	l	tick
	m	()Lbhd$a;	q	createAttributes
	m	()I	r	getSwellDir
	m	()Z	w	isIgnited
	m	()V	x	registerGoals
	m	()Lamq;	x_	getDeathSound
	m	(Lbfh;)Z	z	doHurtTarget
		p	1		target
	f	Lacl;	b	DATA_SWELL_DIR
	f	I	bS	swell
	f	I	bT	maxSwell
	f	I	bU	explosionRadius
	f	I	bV	droppedSkulls
	f	Lacl;	c	DATA_IS_POWERED
	f	Lacl;	d	DATA_IS_IGNITED
	f	I	e	oldSwell
c	bvn	net/minecraft/world/entity/monster/CrossbowAttackMob
	m	()Lbfx;	P_	getTarget
	m	()V	a	onCrossbowAttackPerformed
	m	(Lbfx;Lbfx;Lbze;FF)V	a	shootCrossbowProjectile
		p	1		entity
		p	2		target
		p	3		projectile
		p	4		multishotSpray
		p	5		speed
	m	(Lbfx;Lcfv;Lbze;F)V	a	shootCrossbowProjectile
		p	1		target
		p	2		crossbow
		p	3		projectile
		p	4		multiShotSpray
	m	(Lbfx;Lede;F)Lorg/joml/Vector3f;	a	getProjectileShotVector
		p	1		entity
		p	2		positionDelta
		p	3		multishotSpray
	m	(Lbfx;F)V	b	performCrossbowAttack
		p	1		entity
		p	2		speed
	m	(Z)V	b	setChargingCrossbow
		p	1		charging
c	bvo	net/minecraft/world/entity/monster/Drowned
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lapo;Lbdw;)V	a	populateDefaultEquipmentSlots
		p	1		random
		p	2		localDifficulty
	m	(Lbfl;Lcmx;Lbgb;Lgt;Lapo;)Z	a	checkDrownedSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	(Lbfx;F)V	a	performRangedAttack
		p	1		target
		p	2		pullProgress
	m	(Lbvo;)Z	a	access$100
	m	(Lbvo;Lbph;)Lbph;	a	access$002
	m	(Lcmj;Lgt;)Z	a	isDeepEnoughToSpawn
		p	0		world
		p	1		pos
	m	(Lcml;)Z	a	checkSpawnObstruction
		p	1		world
	m	(Lcmx;Lbdw;Lbgb;Lbgr;Lre;)Lbgr;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	()Lamq;	aI	getSwimSound
	m	()V	aY	updateSwimming
	m	(Lcfv;Lcfv;)Z	b	canReplaceCurrentItem
		p	1		newStack
		p	2		oldStack
	m	()Z	bW	isVisuallySwimming
	m	()Z	cv	isPushedByFluid
	m	(Lbem;)Lamq;	d	getHurtSound
		p	1		source
	m	()Lcfv;	fS	getSkull
	m	()Z	fT	convertsInWater
	m	()Z	fU	closeToNextPos
	m	()Z	gc	wantsToSwim
	m	(Lede;)V	h	travel
		p	1		movementInput
	m	(Lbfx;)Z	m	okTarget
		p	1		target
	m	()V	q	addBehaviourGoals
	m	()Z	r	supportsBreakDoorGoal
	m	()Lamq;	s	getAmbientSound
	m	()Lamq;	w	getStepSound
	m	(Z)V	w	setSearchingForLand
		p	1		targetingUnderwater
	m	()Lamq;	x_	getDeathSound
	f	F	b	NAUTILUS_SHELL_CHANCE
	f	Z	bW	searchingForLand
	f	Lbpj;	c	waterNavigation
	f	Lbpg;	d	groundNavigation
c	bvo$a	net/minecraft/world/entity/monster/Drowned$DrownedAttackGoal
	m	(Lbvo;DZ)V	<init>	<init>
		p	1		drowned
		p	2		speed
		p	4		pauseWhenMobIdle
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	f	Lbvo;	b	drowned
c	bvo$b	net/minecraft/world/entity/monster/Drowned$DrownedGoToBeachGoal
	m	(Lbvo;D)V	<init>	<init>
		p	1		drowned
		p	2		speed
	m	()Z	a	canUse
	m	(Lcml;Lgt;)Z	a	isValidTarget
		p	1		world
		p	2		pos
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	f	Lbvo;	g	drowned
c	bvo$c	net/minecraft/world/entity/monster/Drowned$DrownedGoToWaterGoal
	m	(Lbgg;D)V	<init>	<init>
		p	1		mob
		p	2		speed
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()Lede;	h	getWaterPos
	f	Lbgg;	a	mob
	f	D	b	wantedX
	f	D	c	wantedY
	f	D	d	wantedZ
	f	D	e	speedModifier
	f	Lcmi;	f	level
c	bvo$d	net/minecraft/world/entity/monster/Drowned$DrownedMoveControl
	m	(Lbvo;)V	<init>	<init>
		p	1		drowned
	m	()V	a	tick
	f	Lbvo;	l	drowned
c	bvo$e	net/minecraft/world/entity/monster/Drowned$DrownedSwimUpGoal
	m	(Lbvo;DI)V	<init>	<init>
		p	1		drowned
		p	2		speed
		p	4		minY
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lbvo;	a	drowned
	f	D	b	speedModifier
	f	I	c	seaLevel
	f	Z	d	stuck
c	bvo$f	net/minecraft/world/entity/monster/Drowned$DrownedTridentAttackGoal
	m	(Lbwe;DIF)V	<init>	<init>
		p	1		mob
		p	2		mobSpeed
		p	4		intervalTicks
		p	5		maxShootRange
	m	()Z	a	canUse
	m	()V	c	start
	m	()V	d	stop
	f	Lbvo;	a	drowned
c	bvp	net/minecraft/world/entity/monster/ElderGuardian
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	U	customServerAiStep
	m	(Laiq;)V	b	lambda$customServerAiStep$0
	m	(Lbem;)Lamq;	d	getHurtSound
		p	1		source
	m	()Lbhd$a;	q	createAttributes
	m	()I	r	getAttackDuration
	m	()Lamq;	s	getAmbientSound
	m	()Lamq;	w	getFlopSound
	m	()Lamq;	x_	getDeathSound
	f	F	b	ELDER_SIZE_SCALE
	f	I	bS	EFFECT_RADIUS
	f	I	bT	EFFECT_DURATION
	f	I	bU	EFFECT_AMPLIFIER
	f	I	bV	EFFECT_DISPLAY_LIMIT
	f	I	e	EFFECT_INTERVAL
c	bvq	net/minecraft/world/entity/monster/EnderMan
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()Z	Q	requiresCustomPersistence
	m	()V	U	customServerAiStep
	m	()I	a	getRemainingPersistentAngerTime
	m	(I)V	a	setRemainingPersistentAngerTime
		p	1		angerTime
	m	(Lacl;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Lbem;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbem;IZ)V	a	dropCustomDeathLoot
		p	1		source
		p	2		lootingMultiplier
		p	3		allowDrops
	m	(Lbem;Lbzp;F)Z	a	hurtWithCleanWater
		p	1		source
		p	2		potion
		p	3		amount
	m	(Lbfh;)Z	a	teleportTowards
		p	1		entity
	m	(Ljava/util/UUID;)V	a	setPersistentAngerTarget
		p	1		angryAt
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	()Ljava/util/UUID;	b	getPersistentAngerTarget
	m	(Lbgj;Lbfi;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()V	b_	aiStep
	m	()V	c	startPersistentAngerTimer
	m	(Ldbq;)V	c	setCarriedBlock
		p	1		state
	m	(Lbem;)Lamq;	d	getHurtSound
		p	1		source
	m	()Z	eX	isSensitiveToWater
	m	(Lbym;)Z	f	isLookingAtMe
		p	1		player
	m	()Ldbq;	fS	getCarriedBlock
	m	()Z	fT	isCreepy
	m	()Z	fU	hasBeenStaredAt
	m	()V	fV	setBeingStaredAt
	m	(Lbfx;)V	i	setTarget
		p	1		target
	m	()Lbhd$a;	q	createAttributes
	m	()V	r	playStareSound
	m	(DDD)Z	r	teleport
		p	1		x
		p	3		y
		p	5		z
	m	()Lamq;	s	getAmbientSound
	m	()Z	w	teleport
	m	()V	x	registerGoals
	m	()Lamq;	x_	getDeathSound
	f	I	bS	MIN_DEAGGRESSION_TIME
	f	Lacl;	bT	DATA_CARRY_STATE
	f	Lacl;	bU	DATA_CREEPY
	f	Lacl;	bV	DATA_STARED_AT
	f	I	bW	lastStareSound
	f	I	bX	targetChangeTime
	f	Lbdj;	bY	PERSISTENT_ANGER_TIME
	f	I	bZ	remainingPersistentAngerTime
	f	Ljava/util/UUID;	c	SPEED_MODIFIER_ATTACKING_UUID
	f	Ljava/util/UUID;	ca	persistentAngerTarget
	f	Lbhc;	d	SPEED_MODIFIER_ATTACKING
	f	I	e	DELAY_BETWEEN_CREEPY_STARE_SOUND
c	bvq$a	net/minecraft/world/entity/monster/EnderMan$EndermanFreezeWhenLookedAt
	m	(Lbvq;)V	<init>	<init>
		p	1		enderman
	m	()Z	a	canUse
	m	()V	c	start
	m	()V	e	tick
	f	Lbvq;	a	enderman
	f	Lbfx;	b	target
c	bvq$b	net/minecraft/world/entity/monster/EnderMan$EndermanLeaveBlockGoal
	m	(Lbvq;)V	<init>	<init>
		p	1		enderman
	m	()Z	a	canUse
	m	(Lcmi;Lgt;Ldbq;Ldbq;Ldbq;Lgt;)Z	a	canPlaceBlock
		p	1		world
		p	2		posAbove
		p	3		carriedState
		p	4		stateAbove
		p	5		state
		p	6		pos
	m	()V	e	tick
	f	Lbvq;	a	enderman
c	bvq$c	net/minecraft/world/entity/monster/EnderMan$EndermanLookForPlayerGoal
	m	(Lbvq;Ljava/util/function/Predicate;)V	<init>	<init>
		p	1		enderman
		p	2		targetPredicate
	m	()Z	a	canUse
	m	(Lbvq;Lbfx;)Z	a	lambda$new$0
		p	1		playerEntity
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lbvq;	i	enderman
	f	Lbym;	j	pendingTarget
	f	I	k	aggroTime
	f	I	l	teleportTime
	f	Lbqk;	m	startAggroTargetConditions
	f	Lbqk;	n	continueAggroTargetConditions
	f	Ljava/util/function/Predicate;	o	isAngerInducing
c	bvq$d	net/minecraft/world/entity/monster/EnderMan$EndermanTakeBlockGoal
	m	(Lbvq;)V	<init>	<init>
		p	1		enderman
	m	()Z	a	canUse
	m	()V	e	tick
	f	Lbvq;	a	enderman
c	bvr	net/minecraft/world/entity/monster/Endermite
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()Lbfh$b;	aQ	getMovementEmission
	m	(Lbfl;Lcmj;Lbgb;Lgt;Lapo;)Z	b	checkEndermiteSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
	m	(Lbgj;Lbfi;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lgt;Ldbq;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()V	b_	aiStep
	m	()D	bu	getMyRidingOffset
	m	(Lbem;)Lamq;	d	getHurtSound
		p	1		source
	m	()Lbgc;	eJ	getMobType
	m	()V	l	tick
	m	()Lbhd$a;	q	createAttributes
	m	()Lamq;	s	getAmbientSound
	m	(F)V	s	setYBodyRot
		p	1		bodyYaw
	m	()V	x	registerGoals
	m	()Lamq;	x_	getDeathSound
	f	I	b	MAX_LIFE
	f	I	c	life
c	bvs	net/minecraft/world/entity/monster/Enemy
	f	I	d_	XP_REWARD_NONE
	f	I	e_	XP_REWARD_SMALL
	f	I	f_	XP_REWARD_MEDIUM
	f	I	g_	XP_REWARD_LARGE
	f	I	h_	XP_REWARD_HUGE
	f	I	i_	XP_REWARD_BOSS
c	bvt	net/minecraft/world/entity/monster/Evoker
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	U	customServerAiStep
	m	()Lamq;	X_	getCelebrateSound
	m	(IZ)V	a	applyRaidBuffs
		p	1		wave
		p	2		unused
	m	(Lbsf;)V	a	setWololoTarget
		p	1		wololoTarget
	m	(Lbvt;)Lapo;	a	access$000
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(Lbvt;)Lapo;	b	access$100
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lbvt;)Lapo;	c	access$200
	m	(Lbem;)Lamq;	d	getHurtSound
		p	1		source
	m	(Lbvt;)Lapo;	d	access$300
	m	(Lbvt;)Lapo;	e	access$400
	m	()Lamq;	fS	getCastingSoundEvent
	m	()Lbsf;	gl	getWololoTarget
	m	(Lbfh;)Z	p	isAlliedTo
		p	1		other
	m	()Lbhd$a;	r	createAttributes
	m	()Lamq;	s	getAmbientSound
	m	()V	x	registerGoals
	m	()Lamq;	x_	getDeathSound
	f	Lbsf;	e	wololoTarget
c	bvt$a	net/minecraft/world/entity/monster/Evoker$EvokerAttackSpellGoal
	m	(DDDDFI)V	a	createSpellEntity
		p	1		x
		p	3		z
		p	5		maxY
		p	7		y
		p	9		yaw
		p	10		warmup
	m	()I	h	getCastingTime
	m	()I	i	getCastingInterval
	m	()V	k	performSpellCasting
	m	()Lamq;	l	getSpellPrepareSound
	m	()Lbwk$a;	m	getSpell
	f	Lbvt;	a	this$0
c	bvt$b	net/minecraft/world/entity/monster/Evoker$EvokerCastingSpellGoal
	m	()V	e	tick
	f	Lbvt;	a	this$0
c	bvt$c	net/minecraft/world/entity/monster/Evoker$EvokerSummonSpellGoal
	m	()Z	a	canUse
	m	()I	h	getCastingTime
	m	()I	i	getCastingInterval
	m	()V	k	performSpellCasting
	m	()Lamq;	l	getSpellPrepareSound
	m	()Lbwk$a;	m	getSpell
	f	Lbvt;	a	this$0
	f	Lbqk;	e	vexCountTargeting
c	bvt$d	net/minecraft/world/entity/monster/Evoker$EvokerWololoSpellGoal
	m	()Z	a	canUse
	m	(Lbfx;)Z	a	lambda$new$0
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	m	()I	h	getCastingTime
	m	()I	i	getCastingInterval
	m	()V	k	performSpellCasting
	m	()Lamq;	l	getSpellPrepareSound
	m	()Lbwk$a;	m	getSpell
	m	()I	n	getCastWarmupTime
	f	Lbvt;	a	this$0
	f	Lbqk;	e	wololoTargeting
c	bvu	net/minecraft/world/entity/monster/Ghast
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()Z	R	shouldDespawnInPeaceful
	m	(Lbem;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(Lbem;)Z	b	isInvulnerableTo
		p	1		damageSource
	m	(Lbfl;Lcmj;Lbgb;Lgt;Lapo;)Z	b	checkGhastSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	(Lbgj;Lbfi;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Lams;	cX	getSoundSource
	m	(Lbem;)Lamq;	d	getHurtSound
		p	1		source
	m	()F	eN	getSoundVolume
	m	()I	fy	getMaxSpawnClusterSize
	m	(Lbem;)Z	h	isReflectedFireball
		p	0		damageSource
	m	(Lbfx;)Z	m	lambda$registerGoals$0
		p	1		entity
	m	()Z	q	isCharging
	m	()I	r	getExplosionPower
	m	()Lamq;	s	getAmbientSound
	m	()Lbhd$a;	w	createAttributes
	m	(Z)V	w	setCharging
		p	1		shooting
	m	()V	x	registerGoals
	m	()Lamq;	x_	getDeathSound
	f	Lacl;	b	DATA_IS_CHARGING
	f	I	c	explosionPower
c	bvu$a	net/minecraft/world/entity/monster/Ghast$GhastLookGoal
	m	(Lbvu;)V	<init>	<init>
		p	1		ghast
	m	()Z	J_	requiresUpdateEveryTick
	m	()Z	a	canUse
	m	()V	e	tick
	f	Lbvu;	a	ghast
c	bvu$b	net/minecraft/world/entity/monster/Ghast$GhastMoveControl
	m	(Lbvu;)V	<init>	<init>
		p	1		ghast
	m	()V	a	tick
	m	(Lede;I)Z	a	canReach
		p	1		direction
		p	2		steps
	f	Lbvu;	l	ghast
	f	I	m	floatDuration
c	bvu$c	net/minecraft/world/entity/monster/Ghast$GhastShootFireballGoal
	m	(Lbvu;)V	<init>	<init>
		p	1		ghast
	m	()Z	J_	requiresUpdateEveryTick
	m	()Z	a	canUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	I	a	chargeTime
	f	Lbvu;	b	ghast
c	bvu$d	net/minecraft/world/entity/monster/Ghast$RandomFloatAroundGoal
	m	(Lbvu;)V	<init>	<init>
		p	1		ghast
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	f	Lbvu;	a	ghast
c	bvv	net/minecraft/world/entity/monster/Giant
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lgt;Lcml;)F	a	getWalkTargetValue
		p	1		pos
		p	2		world
	m	(Lbgj;Lbfi;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	()Lbhd$a;	q	createAttributes
c	bvw	net/minecraft/world/entity/monster/Guardian
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(F)F	C	getTailAnimation
		p	1		tickDelta
	m	(F)F	D	getSpikesAnimation
		p	1		tickDelta
	m	(F)F	E	getAttackAnimationScale
		p	1		tickDelta
	m	()I	K	getAmbientSoundInterval
	m	()I	V	getMaxHeadXRot
	m	(Lacl;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Lbem;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lcmi;)Lbph;	a	createNavigation
		p	1		world
	m	(Lcml;)Z	a	checkSpawnObstruction
		p	1		world
	m	(Lgt;Lcml;)F	a	getWalkTargetValue
		p	1		pos
		p	2		world
	m	()Lbfh$b;	aQ	getMovementEmission
	m	()V	a_	defineSynchedData
	m	(I)V	b	setActiveAttackTarget
		p	1		entityId
	m	(Lbfl;Lcmj;Lbgb;Lgt;Lapo;)Z	b	checkGuardianSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	(Lbgj;Lbfi;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	()V	b_	aiStep
	m	(Lbem;)Lamq;	d	getHurtSound
		p	1		source
	m	()Z	dK	canBreatheUnderwater
	m	()Lbgc;	eJ	getMobType
	m	()Lbhd$a;	fS	createAttributes
	m	()Z	fT	isMoving
	m	()Z	fU	hasActiveAttackTarget
	m	()Lbfx;	fV	getActiveAttackTarget
	m	()F	fW	getClientSideAttackTime
	m	(Lede;)V	h	travel
		p	1		movementInput
	m	()I	r	getAttackDuration
	m	()Lamq;	s	getAmbientSound
	m	()Lamq;	w	getFlopSound
	m	(Z)V	w	setMoving
		p	1		retracted
	m	()V	x	registerGoals
	m	()Lamq;	x_	getDeathSound
	f	Lacl;	b	DATA_ID_MOVING
	f	F	bS	clientSideTailAnimation
	f	F	bT	clientSideTailAnimationO
	f	F	bU	clientSideTailAnimationSpeed
	f	F	bV	clientSideSpikesAnimation
	f	F	bW	clientSideSpikesAnimationO
	f	Lbfx;	bX	clientSideCachedAttackTarget
	f	I	bY	clientSideAttackTime
	f	Z	bZ	clientSideTouchedGround
	f	I	c	ATTACK_TIME
	f	Lbnq;	d	randomStrollGoal
	f	Lacl;	e	DATA_ID_ATTACK_TARGET
c	bvw$a	net/minecraft/world/entity/monster/Guardian$GuardianAttackGoal
	m	(Lbvw;)V	<init>	<init>
		p	1		guardian
	m	()Z	J_	requiresUpdateEveryTick
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lbvw;	a	guardian
	f	I	b	attackTime
	f	Z	c	elder
c	bvw$b	net/minecraft/world/entity/monster/Guardian$GuardianAttackSelector
	m	(Lbvw;)V	<init>	<init>
		p	1		owner
	m	(Lbfx;)Z	a	test
	f	Lbvw;	a	guardian
c	bvw$c	net/minecraft/world/entity/monster/Guardian$GuardianMoveControl
	m	(Lbvw;)V	<init>	<init>
		p	1		guardian
	m	()V	a	tick
	f	Lbvw;	l	guardian
c	bvx	net/minecraft/world/entity/monster/Husk
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()Z	W_	isSunSensitive
	m	(Lbfl;Lcmx;Lbgb;Lgt;Lapo;)Z	a	checkHuskSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	(Lbem;)Lamq;	d	getHurtSound
		p	1		source
	m	()Lcfv;	fS	getSkull
	m	()Z	fT	convertsInWater
	m	()V	fV	doUnderWaterConversion
	m	()Lamq;	s	getAmbientSound
	m	()Lamq;	w	getStepSound
	m	()Lamq;	x_	getDeathSound
	m	(Lbfh;)Z	z	doHurtTarget
		p	1		target
c	bvy	net/minecraft/world/entity/monster/Illusioner
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()Lecz;	A_	getBoundingBoxForCulling
	m	(F)[Lede;	C	getIllusionOffsets
		p	1		tickDelta
	m	()Lamq;	X_	getCelebrateSound
	m	(IZ)V	a	applyRaidBuffs
		p	1		wave
		p	2		unused
	m	(Lbfx;F)V	a	performRangedAttack
		p	1		target
		p	2		pullProgress
	m	(Lcmx;Lbdw;Lbgb;Lbgr;Lre;)Lbgr;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	()V	a_	defineSynchedData
	m	()V	b_	aiStep
	m	(Lbem;)Lamq;	d	getHurtSound
		p	1		source
	m	()Lamq;	fS	getCastingSoundEvent
	m	(Lbfh;)Z	p	isAlliedTo
		p	1		other
	m	()Lbvi$a;	q	getArmPose
	m	()Lbhd$a;	r	createAttributes
	m	()Lamq;	s	getAmbientSound
	m	()V	x	registerGoals
	m	()Lamq;	x_	getDeathSound
	f	I	bS	ILLUSION_TRANSITION_TICKS
	f	I	bT	ILLUSION_SPREAD
	f	I	bU	clientSideIllusionTicks
	f	[[Lede;	bV	clientSideIllusionOffsets
	f	I	e	NUM_ILLUSIONS
c	bvy$a	net/minecraft/world/entity/monster/Illusioner$IllusionerBlindnessSpellGoal
	m	()Z	a	canUse
	m	()V	c	start
	m	()I	h	getCastingTime
	m	()I	i	getCastingInterval
	m	()V	k	performSpellCasting
	m	()Lamq;	l	getSpellPrepareSound
	m	()Lbwk$a;	m	getSpell
	f	Lbvy;	a	this$0
	f	I	e	lastTargetId
c	bvy$b	net/minecraft/world/entity/monster/Illusioner$IllusionerMirrorSpellGoal
	m	()Z	a	canUse
	m	()I	h	getCastingTime
	m	()I	i	getCastingInterval
	m	()V	k	performSpellCasting
	m	()Lamq;	l	getSpellPrepareSound
	m	()Lbwk$a;	m	getSpell
	f	Lbvy;	a	this$0
c	bvz	net/minecraft/world/entity/monster/MagmaCube
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(IZ)V	a	setSize
		p	1		size
		p	2		heal
	m	(Lcml;)Z	a	checkSpawnObstruction
		p	1		world
	m	(Lbfl;Lcmj;Lbgb;Lgt;Lapo;)Z	b	checkMagmaCubeSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	()Z	bK	isOnFire
	m	()F	bh	getLightLevelDependentMagicValue
	m	(Lanv;)V	c	jumpInLiquid
		p	1		fluid
	m	(Lbem;)Lamq;	d	getHurtSound
		p	1		source
	m	()V	eS	jumpFromGround
	m	()V	fP	decreaseSquish
	m	()Z	fQ	isDealsDamage
	m	()F	fR	getAttackDamage
	m	()Lamq;	fS	getSquishSound
	m	()Lamq;	fT	getJumpSound
	m	()Lbhd$a;	q	createAttributes
	m	()Lis;	r	getParticleType
	m	()I	w	getJumpDelay
	m	()Lamq;	x_	getDeathSound
c	bwa	net/minecraft/world/entity/monster/Monster
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()Z	R	shouldDespawnInPeaceful
	m	(Lcmx;Lgt;Lapo;)Z	a	isDarkEnoughToSpawn
		p	0		world
		p	1		pos
		p	2		random
	m	(Lgt;Lcml;)F	a	getWalkTargetValue
		p	1		pos
		p	2		world
	m	()Lamq;	aI	getSwimSound
	m	()Lamq;	aJ	getSwimSplashSound
	m	(Lbfl;Lcmx;Lbgb;Lgt;Lapo;)Z	b	checkMonsterSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	()V	b_	aiStep
	m	(Lbfl;Lcmj;Lbgb;Lgt;Lapo;)Z	c	checkAnyLightMonsterSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	()Lams;	cX	getSoundSource
	m	(Lbem;)Lamq;	d	getHurtSound
		p	1		source
	m	()Z	dV	shouldDropExperience
	m	()Z	dW	shouldDropLoot
	m	(Lbym;)Z	e	isPreventingPlayerRest
		p	1		player
	m	()Lbfx$a;	ey	getFallSounds
	m	()V	fX	updateNoActionTime
	m	()Lbhd$a;	fY	createMonsterAttributes
	m	(Lcfv;)Lcfv;	g	getProjectile
		p	1		stack
	m	()Lamq;	x_	getDeathSound
c	bwb	net/minecraft/world/entity/monster/PatrollingMonster
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcmx;Lbdw;Lbgb;Lbgr;Lre;)Lbgr;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lbfl;Lcmj;Lbgb;Lgt;Lapo;)Z	b	checkPatrollingMonsterSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()D	bu	getMyRidingOffset
	m	()Z	fT	canBeLeader
	m	()Lgt;	fU	getPatrolTarget
	m	()Z	fV	hasPatrolTarget
	m	()Z	fW	isPatrolLeader
	m	()Z	fZ	canJoinPatrol
	m	(Lgt;)V	g	setPatrolTarget
		p	1		targetPos
	m	()V	ga	findPatrolTarget
	m	()Z	gb	isPatrolling
	m	(D)Z	h	removeWhenFarAway
		p	1		distanceSquared
	m	(Z)V	w	setPatrolLeader
		p	1		patrolLeader
	m	()V	x	registerGoals
	m	(Z)V	x	setPatrolling
		p	1		patrolling
	f	Lgt;	b	patrolTarget
	f	Z	c	patrolLeader
	f	Z	d	patrolling
c	bwb$a	net/minecraft/world/entity/monster/PatrollingMonster$LongDistancePatrolGoal
	m	(Lbwb;DD)V	<init>	<init>
		p	1		entity
		p	2		leaderSpeed
		p	4		followSpeed
	m	()Z	a	canUse
	m	(Lbwb;)Z	a	lambda$findPatrolCompanions$0
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	m	()Ljava/util/List;	h	findPatrolCompanions
	m	()Z	i	moveRandomly
	f	I	a	NAVIGATION_FAILED_COOLDOWN
	f	Lbwb;	b	mob
	f	D	c	speedModifier
	f	D	d	leaderSpeedModifier
	f	J	e	cooldownUntil
c	bwc	net/minecraft/world/entity/monster/Phantom
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()Lblr;	A	createBodyControl
	m	()Z	R	shouldDespawnInPeaceful
	m	()V	U	customServerAiStep
	m	(D)Z	a	shouldRenderAtSqrDistance
		p	1		distance
	m	(Lacl;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Lbfl;)Z	a	canAttackType
		p	1		type
	m	(Lbgj;)Lbfi;	a	getDimensions
		p	1		pose
	m	(Lbwc;)Lapo;	a	access$000
	m	(Lcmx;Lbdw;Lbgb;Lbgr;Lre;)Lbgr;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()Z	aN	isFlapping
	m	()V	a_	defineSynchedData
	m	(I)V	b	setPhantomSize
		p	1		size
	m	(Lbgj;Lbfi;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lbwc;)Lapo;	b	access$100
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()V	b_	aiStep
	m	()D	bv	getPassengersRidingOffset
	m	(Lbwc;)Lapo;	c	access$200
	m	()Lams;	cX	getSoundSource
	m	(Lbem;)Lamq;	d	getHurtSound
		p	1		source
	m	(Lbwc;)Lapo;	d	access$300
	m	(Lbwc;)Lapo;	e	access$400
	m	()Lbgc;	eJ	getMobType
	m	()F	eN	getSoundVolume
	m	(Lbwc;)Lapo;	f	access$500
	m	(Lbwc;)Lapo;	g	access$600
	m	(Lbwc;)Lapo;	h	access$700
	m	(Lbwc;)Lapo;	i	access$800
	m	(Lbwc;)Lapo;	j	access$900
	m	(Lbwc;)Lapo;	k	access$1000
	m	()V	l	tick
	m	(Lbwc;)Lapo;	l	access$1100
	m	()I	q	getPhantomSize
	m	()I	r	getUniqueFlapTickOffset
	m	()Lamq;	s	getAmbientSound
	m	()V	w	updatePhantomSizeInfo
	m	()V	x	registerGoals
	m	()Lamq;	x_	getDeathSound
	f	F	b	FLAP_DEGREES_PER_TICK
	f	Lgt;	bR	anchorPoint
	f	Lbwc$a;	bS	attackPhase
	f	I	c	TICKS_PER_FLAP
	f	Lacl;	d	ID_SIZE
	f	Lede;	e	moveTargetPoint
c	bwc$a	net/minecraft/world/entity/monster/Phantom$AttackPhase
	m	()[Lbwc$a;	a	$values
	f	Lbwc$a;	a	CIRCLE
	f	Lbwc$a;	b	SWOOP
	f	[Lbwc$a;	c	$VALUES
c	bwc$b	net/minecraft/world/entity/monster/Phantom$PhantomAttackPlayerTargetGoal
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	f	Lbwc;	a	this$0
	f	Lbqk;	b	attackTargeting
	f	I	c	nextScanTick
c	bwc$c	net/minecraft/world/entity/monster/Phantom$PhantomAttackStrategyGoal
	m	()Z	a	canUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	m	()V	h	setAnchorAboveTarget
	f	Lbwc;	a	this$0
	f	I	b	nextSweepTick
c	bwc$d	net/minecraft/world/entity/monster/Phantom$PhantomBodyRotationControl
	m	(Lbwc;Lbfz;)V	<init>	<init>
		p	2		entity
	m	()V	a	clientTick
	f	Lbwc;	a	this$0
c	bwc$e	net/minecraft/world/entity/monster/Phantom$PhantomCircleAroundAnchorGoal
	m	()Z	a	canUse
	m	()V	c	start
	m	()V	e	tick
	m	()V	i	selectNext
	f	Lbwc;	a	this$0
	f	F	c	angle
	f	F	d	distance
	f	F	e	height
	f	F	f	clockwise
c	bwc$f	net/minecraft/world/entity/monster/Phantom$PhantomLookControl
	m	(Lbwc;Lbfz;)V	<init>	<init>
		p	2		entity
	m	()V	a	tick
	f	Lbwc;	h	this$0
c	bwc$g	net/minecraft/world/entity/monster/Phantom$PhantomMoveControl
	m	(Lbwc;Lbfz;)V	<init>	<init>
		p	2		owner
	m	()V	a	tick
	f	Lbwc;	l	this$0
	f	F	m	speed
c	bwc$h	net/minecraft/world/entity/monster/Phantom$PhantomMoveTargetGoal
	m	()Z	h	touchingTarget
	f	Lbwc;	b	this$0
c	bwc$i	net/minecraft/world/entity/monster/Phantom$PhantomSweepAttackGoal
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lbwc;	a	this$0
	f	I	c	CAT_SEARCH_TICK_DELAY
	f	Z	d	isScaredOfCat
	f	I	e	catSearchTick
c	bwd	net/minecraft/world/entity/monster/Pillager
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()Lamq;	X_	getCelebrateSound
	m	()V	a	onCrossbowAttackPerformed
	m	(IZ)V	a	applyRaidBuffs
		p	1		wave
		p	2		unused
	m	(Lapo;F)V	a	enchantSpawnedWeapon
		p	1		random
		p	2		power
	m	(Lapo;Lbdw;)V	a	populateDefaultEquipmentSlots
		p	1		random
		p	2		localDifficulty
	m	(Lbfx;F)V	a	performRangedAttack
		p	1		target
		p	2		pullProgress
	m	(Lbfx;Lcfv;Lbze;F)V	a	shootCrossbowProjectile
		p	1		target
		p	2		crossbow
		p	3		projectile
		p	4		multiShotSpray
	m	(Lcgl;)Z	a	canFireProjectileWeapon
		p	1		weapon
	m	(Lcmx;Lbdw;Lbgb;Lbgr;Lre;)Lbgr;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lgt;Lcml;)F	a	getWalkTargetValue
		p	1		pos
		p	2		world
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(I)Lbgq;	a_	getSlot
		p	1		mappedIndex
	m	(Lbvf;)V	b	pickUpItem
		p	1		item
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Z)V	b	setChargingCrossbow
		p	1		charging
	m	(Lbem;)Lamq;	d	getHurtSound
		p	1		source
	m	()Z	fS	isChargingCrossbow
	m	()I	fy	getMaxSpawnClusterSize
	m	(Lcfv;)Z	l	wantsItem
		p	1		stack
	m	(Lbfh;)Z	p	isAlliedTo
		p	1		other
	m	()Lbvi$a;	q	getArmPose
	m	()Lbhd$a;	r	createAttributes
	m	()Lamq;	s	getAmbientSound
	m	()Lbed;	w	getInventory
	m	()V	x	registerGoals
	m	()Lamq;	x_	getDeathSound
	f	Lacl;	b	IS_CHARGING_CROSSBOW
	f	I	bS	SLOT_OFFSET
	f	F	bT	CROSSBOW_POWER
	f	Lbed;	bU	inventory
	f	I	e	INVENTORY_SIZE
c	bwe	net/minecraft/world/entity/monster/RangedAttackMob
	m	(Lbfx;F)V	a	performRangedAttack
		p	1		target
		p	2		pullProgress
c	bwf	net/minecraft/world/entity/monster/Ravager
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lbfh;)Z	B	hasLineOfSight
		p	1		entity
	m	()V	N	updateControlFlags
	m	()I	W	getMaxHeadYRot
	m	()Lamq;	X_	getCelebrateSound
	m	(IZ)V	a	applyRaidBuffs
		p	1		wave
		p	2		unused
	m	(Lbfh;)V	a	strongKnockback
		p	1		entity
	m	(Lcml;)Z	a	checkSpawnObstruction
		p	1		world
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	(Lbfh;)Z	b	lambda$static$0
		p	0		entity
	m	(Lgt;Ldbq;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()V	b_	aiStep
	m	()D	bv	getPassengersRidingOffset
	m	()Lbfx;	cK	getControllingPassenger
	m	(Lbem;)Lamq;	d	getHurtSound
		p	1		source
	m	(Lbfx;)V	e	blockedByShield
		p	1		target
	m	()Z	eP	isImmobile
	m	()I	fS	getStunnedTick
	m	()Z	fT	canBeLeader
	m	()I	gc	getRoarTick
	m	()V	gd	stunEffect
	m	()V	ge	roar
	m	(Lbfx;)Z	m	lambda$registerGoals$1
		p	0		entity
	m	()Lbhd$a;	q	createAttributes
	m	()I	r	getAttackTick
	m	()Lamq;	s	getAmbientSound
	m	()V	x	registerGoals
	m	()Lamq;	x_	getDeathSound
	m	(Lbfh;)Z	z	doHurtTarget
		p	1		target
	f	I	b	STUN_DURATION
	f	D	bS	BASE_MOVEMENT_SPEED
	f	D	bT	ATTACK_MOVEMENT_SPEED
	f	I	bU	STUNNED_COLOR
	f	D	bV	STUNNED_COLOR_BLUE
	f	D	bW	STUNNED_COLOR_GREEN
	f	D	bX	STUNNED_COLOR_RED
	f	I	bY	ATTACK_DURATION
	f	I	bZ	attackTick
	f	I	ca	stunnedTick
	f	I	cb	roarTick
	f	Ljava/util/function/Predicate;	e	NO_RAVAGER_AND_ALIVE
c	bwf$a	net/minecraft/world/entity/monster/Ravager$RavagerMeleeAttackGoal
	m	(Lbwf;)V	<init>	<init>
		p	1		mob
	m	(Lbfx;)D	a	getAttackReachSqr
		p	1		entity
	f	Lbwf;	b	this$0
c	bwg	net/minecraft/world/entity/monster/Shulker
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()Lblr;	A	createBodyControl
	m	(F)F	C	getClientPeekAmount
		p	1		delta
	m	(F)Ljava/util/Optional;	D	getRenderPosition
		p	1		tickDelta
	m	(F)F	E	getPhysicalPeek
		p	0		openProgress
	m	()V	L	playAmbientSound
	m	()I	V	getMaxHeadXRot
	m	()I	W	getMaxHeadYRot
	m	(DDDFFIZ)V	a	lerpTo
		p	1		x
		p	3		y
		p	5		z
		p	7		yaw
		p	8		pitch
		p	9		interpolationSteps
		p	10		interpolate
	m	(Lacl;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Lbem;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbfh;)Z	a	lambda$onPeekAmountChange$1
	m	(Lbfh;Z)Z	a	startRiding
		p	1		entity
		p	2		force
	m	(Lbgd;Lede;)V	a	move
		p	1		movementType
		p	2		movement
	m	(Lbwg;)Lapo;	a	access$000
	m	(Lcel;)Ljava/lang/Byte;	a	lambda$setVariant$2
		p	0		color
	m	(Lcmx;Lbdw;Lbgb;Lbgr;Lre;)Lbgr;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lgt;Lgz;)Z	a	canStayAt
		p	1		pos
		p	2		direction
	m	(Lgz;)V	a	setAttachFace
		p	1		face
	m	(Lgz;F)Lecz;	a	getProgressAabb
		p	0		direction
		p	1		extraLength
	m	(Lgz;FF)Lecz;	a	getProgressDeltaAabb
		p	0		direction
		p	1		prevExtraLength
		p	2		extraLength
	m	(Ljava/lang/Object;)V	a	setVariant
		p	1		variant
	m	(Ljava/util/Optional;)V	a	setVariant
		p	1		variant
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lvf;)V	a	recreateFromPacket
		p	1		packet
	m	()Lbfh$b;	aQ	getMovementEmission
	m	()V	a_	defineSynchedData
	m	()Lecz;	am	makeBoundingBox
	m	(I)V	b	setRawPeekAmount
		p	1		peekAmount
	m	(Lbgj;Lbfi;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lbwg;)Lapo;	b	access$100
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()F	bB	getPickRadius
	m	()Z	bs	canBeCollidedWith
	m	()D	bu	getMyRidingOffset
	m	()V	bz	stopRiding
	m	()Ljava/lang/Object;	c	getVariant
	m	(Lbwg;)Lapo;	c	access$200
	m	()Lams;	cX	getSoundSource
	m	(Lbem;)Lamq;	d	getHurtSound
		p	1		source
	m	(Lbwg;)Lapo;	d	access$300
	m	()Lede;	dj	getDeltaMovement
	m	(DDD)V	e	setPos
		p	1		x
		p	3		y
		p	5		z
	m	(Lbwg;)Lapo;	e	access$400
	m	(Lede;)V	f	setDeltaMovement
		p	1		velocity
	m	()Ljava/util/Optional;	fS	getVariant
	m	()Lcel;	fT	getColor
	m	()V	fU	findNewAttachment
	m	()Z	fV	updatePeekAmount
	m	()V	fW	onPeekAmountChange
	m	()Z	fX	isClosed
	m	()V	fY	hitByShulkerBullet
	m	()I	fZ	getRawPeekAmount
	m	(Lbfh;)V	g	push
		p	1		entity
	m	(Lgt;)Lgz;	g	findAttachableSurface
		p	1		pos
	m	()Lorg/joml/Vector3f;	ga	lambda$static$0
	m	(Lgt;)Z	h	isPositionBlocked
		p	1		pos
	m	()V	l	tick
	m	()Lbhd$a;	q	createAttributes
	m	()Z	r	teleportSomewhere
	m	()Lamq;	s	getAmbientSound
	m	()Lgz;	w	getAttachFace
	m	()V	x	registerGoals
	m	()Lamq;	x_	getDeathSound
	f	Lacl;	b	DATA_ATTACH_FACE_ID
	f	Lbhc;	bS	COVERED_ARMOR_MODIFIER
	f	I	bT	TELEPORT_STEPS
	f	B	bU	NO_COLOR
	f	B	bV	DEFAULT_COLOR
	f	I	bW	MAX_TELEPORT_DISTANCE
	f	I	bX	OTHER_SHULKER_SCAN_RADIUS
	f	I	bY	OTHER_SHULKER_LIMIT
	f	F	bZ	PEEK_PER_TICK
	f	Lacl;	c	DATA_PEEK_ID
	f	Lorg/joml/Vector3f;	ca	FORWARD
	f	F	cb	currentPeekAmountO
	f	F	cc	currentPeekAmount
	f	Lgt;	cd	clientOldAttachPosition
	f	I	ce	clientSideTeleportInterpolation
	f	F	cf	MAX_LID_OPEN
	f	Lacl;	d	DATA_COLOR_ID
	f	Ljava/util/UUID;	e	COVERED_ARMOR_MODIFIER_UUID
c	bwg$a	net/minecraft/world/entity/monster/Shulker$ShulkerAttackGoal
	m	()Z	J_	requiresUpdateEveryTick
	m	()Z	a	canUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lbwg;	a	this$0
	f	I	b	attackTime
c	bwg$b	net/minecraft/world/entity/monster/Shulker$ShulkerBodyRotationControl
	m	(Lbfz;)V	<init>	<init>
		p	1		entity
	m	()V	a	clientTick
c	bwg$c	net/minecraft/world/entity/monster/Shulker$ShulkerDefenseAttackGoal
	m	(Lbwg;)V	<init>	<init>
		p	1		shulker
	m	()Z	a	canUse
	m	(D)Lecz;	a	getTargetSearchArea
		p	1		distance
	m	(Lbfx;)Z	b	lambda$new$0
		p	0		entity
c	bwg$d	net/minecraft/world/entity/monster/Shulker$ShulkerLookControl
	m	(Lbwg;Lbfz;)V	<init>	<init>
		p	2		entity
	m	()V	b	clampHeadRotationToBody
	m	()Ljava/util/Optional;	h	getXRotD
	m	()Ljava/util/Optional;	i	getYRotD
	f	Lbwg;	h	this$0
c	bwg$e	net/minecraft/world/entity/monster/Shulker$ShulkerNearestAttackGoal
	m	(Lbwg;Lbwg;)V	<init>	<init>
		p	2		shulker
	m	()Z	a	canUse
	m	(D)Lecz;	a	getTargetSearchArea
		p	1		distance
	f	Lbwg;	i	this$0
c	bwg$f	net/minecraft/world/entity/monster/Shulker$ShulkerPeekGoal
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lbwg;	a	this$0
	f	I	b	peekTime
c	bwh	net/minecraft/world/entity/monster/Silverfish
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lbem;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lgt;Lcml;)F	a	getWalkTargetValue
		p	1		pos
		p	2		world
	m	()Lbfh$b;	aQ	getMovementEmission
	m	(Lbfl;Lcmj;Lbgb;Lgt;Lapo;)Z	b	checkSilverfishSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	(Lbgj;Lbfi;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lgt;Ldbq;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	()D	bu	getMyRidingOffset
	m	(Lbem;)Lamq;	d	getHurtSound
		p	1		source
	m	()Lbgc;	eJ	getMobType
	m	()V	l	tick
	m	()Lbhd$a;	q	createAttributes
	m	()Lamq;	s	getAmbientSound
	m	(F)V	s	setYBodyRot
		p	1		bodyYaw
	m	()V	x	registerGoals
	m	()Lamq;	x_	getDeathSound
	f	Lbwh$b;	b	friendsGoal
c	bwh$a	net/minecraft/world/entity/monster/Silverfish$SilverfishMergeWithStoneGoal
	m	(Lbwh;)V	<init>	<init>
		p	1		silverfish
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	f	Lgz;	i	selectedDirection
	f	Z	j	doMerge
c	bwh$b	net/minecraft/world/entity/monster/Silverfish$SilverfishWakeUpFriendsGoal
	m	(Lbwh;)V	<init>	<init>
		p	1		silverfish
	m	()Z	a	canUse
	m	()V	e	tick
	m	()V	h	notifyHurt
	f	Lbwh;	a	silverfish
	f	I	b	lookForFriends
c	bwi	net/minecraft/world/entity/monster/Skeleton
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lbem;IZ)V	a	dropCustomDeathLoot
		p	1		source
		p	2		lootingMultiplier
		p	3		allowDrops
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(I)V	b	startFreezeConversion
		p	1		time
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lbem;)Lamq;	d	getHurtSound
		p	1		source
	m	()Z	du	canFreeze
	m	()Z	fS	isShaking
	m	()Z	fT	isFreezeConverting
	m	()V	fU	doFreezeConversion
	m	()V	l	tick
	m	()Lamq;	r	getStepSound
	m	()Lamq;	s	getAmbientSound
	m	(Z)V	w	setFreezeConverting
		p	1		converting
	m	()Lamq;	x_	getDeathSound
	f	Ljava/lang/String;	b	CONVERSION_TAG
	f	I	bS	conversionTime
	f	I	c	TOTAL_CONVERSION_TIME
	f	Lacl;	d	DATA_STRAY_CONVERSION_ID
	f	I	e	inPowderSnowTime
c	bwj	net/minecraft/world/entity/monster/Slime
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()Z	R	shouldDespawnInPeaceful
	m	()I	V	getMaxHeadXRot
	m	(IZ)V	a	setSize
		p	1		size
		p	2		heal
	m	(Lacl;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Lbfh$c;)V	a	remove
		p	1		reason
	m	(Lbgj;)Lbfi;	a	getDimensions
		p	1		pose
	m	(Lbwj;)Z	a	access$000
	m	(Lcmx;Lbdw;Lbgb;Lbgr;Lre;)Lbgr;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	()Lbfl;	ae	getType
	m	(Lbgj;Lbfi;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lbym;)V	b_	playerTouch
		p	1		player
	m	(Lbfl;Lcmj;Lbgb;Lgt;Lapo;)Z	c	checkSlimeSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	()V	c_	refreshDimensions
	m	(Lbem;)Lamq;	d	getHurtSound
		p	1		source
	m	()F	eN	getSoundVolume
	m	()V	eS	jumpFromGround
	m	()V	fP	decreaseSquish
	m	()Z	fQ	isDealsDamage
	m	()F	fR	getAttackDamage
	m	()Lamq;	fS	getSquishSound
	m	()Lamq;	fT	getJumpSound
	m	()I	fU	getSize
	m	()Z	fV	isTiny
	m	()Z	fW	doPlayJumpSound
	m	(Lbfh;)V	g	push
		p	1		entity
	m	()V	l	tick
	m	(Lbfx;)V	m	dealDamage
		p	1		target
	m	(Lbfx;)Z	n	lambda$registerGoals$0
	m	()F	q	getSoundPitch
	m	()Lis;	r	getParticleType
	m	()I	w	getJumpDelay
	m	()V	x	registerGoals
	m	()Lamq;	x_	getDeathSound
	f	I	b	MIN_SIZE
	f	F	bR	oSquish
	f	Lacl;	bS	ID_SIZE
	f	Z	bT	wasOnGround
	f	I	c	MAX_SIZE
	f	F	d	targetSquish
	f	F	e	squish
c	bwj$a	net/minecraft/world/entity/monster/Slime$SlimeAttackGoal
	m	(Lbwj;)V	<init>	<init>
		p	1		slime
	m	()Z	J_	requiresUpdateEveryTick
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	e	tick
	f	Lbwj;	a	slime
	f	I	b	growTiredTimer
c	bwj$b	net/minecraft/world/entity/monster/Slime$SlimeFloatGoal
	m	(Lbwj;)V	<init>	<init>
		p	1		slime
	m	()Z	J_	requiresUpdateEveryTick
	m	()Z	a	canUse
	m	()V	e	tick
	f	Lbwj;	a	slime
c	bwj$c	net/minecraft/world/entity/monster/Slime$SlimeKeepOnJumpingGoal
	m	(Lbwj;)V	<init>	<init>
		p	1		slime
	m	()Z	a	canUse
	m	()V	e	tick
	f	Lbwj;	a	slime
c	bwj$d	net/minecraft/world/entity/monster/Slime$SlimeMoveControl
	m	(Lbwj;)V	<init>	<init>
		p	1		slime
	m	()V	a	tick
	m	(D)V	a	setWantedMovement
		p	1		speed
	m	(FZ)V	a	setDirection
		p	1		targetYaw
		p	2		jumpOften
	f	F	l	yRot
	f	I	m	jumpDelay
	f	Lbwj;	n	slime
	f	Z	o	isAggressive
c	bwj$e	net/minecraft/world/entity/monster/Slime$SlimeRandomDirectionGoal
	m	(Lbwj;)V	<init>	<init>
		p	1		slime
	m	()Z	a	canUse
	m	()V	e	tick
	f	Lbwj;	a	slime
	f	F	b	chosenDegrees
	f	I	c	nextRandomizeTime
c	bwk	net/minecraft/world/entity/monster/SpellcasterIllager
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	U	customServerAiStep
	m	(Lbwk$a;)V	a	setIsCastingSpell
		p	1		spell
	m	(Lbwk;)Lbph;	a	access$000
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Lamq;	fS	getCastingSoundEvent
	m	()Z	gc	isCastingSpell
	m	()Lbwk$a;	gd	getCurrentSpell
	m	()I	ge	getSpellCastingTime
	m	()V	l	tick
	m	()Lbvi$a;	q	getArmPose
	f	I	b	spellCastingTickCount
	f	Lbwk$a;	bS	currentSpell
	f	Lacl;	e	DATA_SPELL_CASTING_ID
c	bwk$a	net/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell
	m	(Ljava/lang/String;IIDDD)V	<init>	<init>
		p	3		id
		p	4		particleVelocityX
		p	6		particleVelocityY
		p	8		particleVelocityZ
	m	()[Lbwk$a;	a	$values
	m	(I)Lbwk$a;	a	byId
		p	0		id
	m	(Lbwk$a;)I	a	lambda$static$0
		p	0		spell
	f	Lbwk$a;	a	NONE
	f	Lbwk$a;	b	SUMMON_VEX
	f	Lbwk$a;	c	FANGS
	f	Lbwk$a;	d	WOLOLO
	f	Lbwk$a;	e	DISAPPEAR
	f	Lbwk$a;	f	BLINDNESS
	f	Ljava/util/function/IntFunction;	g	BY_ID
	f	I	h	id
	f	[D	i	spellColor
	f	[Lbwk$a;	j	$VALUES
c	bwk$b	net/minecraft/world/entity/monster/SpellcasterIllager$SpellcasterCastingSpellGoal
	m	()Z	a	canUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lbwk;	b	this$0
c	bwk$c	net/minecraft/world/entity/monster/SpellcasterIllager$SpellcasterUseSpellGoal
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	e	tick
	m	()I	h	getCastingTime
	m	()I	i	getCastingInterval
	m	()V	k	performSpellCasting
	m	()Lamq;	l	getSpellPrepareSound
	m	()Lbwk$a;	m	getSpell
	m	()I	n	getCastWarmupTime
	f	I	b	attackWarmupDelay
	f	I	c	nextAttackTickCount
	f	Lbwk;	d	this$0
c	bwl	net/minecraft/world/entity/monster/Spider
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcmi;)Lbph;	a	createNavigation
		p	1		world
	m	(Lcmx;Lbdw;Lbgb;Lbgr;Lre;)Lbgr;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Ldbq;Lede;)V	a	makeStuckInBlock
		p	1		state
		p	2		multiplier
	m	()V	a_	defineSynchedData
	m	(Lbgj;Lbfi;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lgt;Ldbq;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	()D	bv	getPassengersRidingOffset
	m	(Lbey;)Z	c	canBeAffected
		p	1		effect
	m	(Lbem;)Lamq;	d	getHurtSound
		p	1		source
	m	()Lbgc;	eJ	getMobType
	m	()V	l	tick
	m	()Lbhd$a;	r	createAttributes
	m	()Lamq;	s	getAmbientSound
	m	()Z	w	isClimbing
	m	(Z)V	w	setClimbing
		p	1		climbing
	m	()V	x	registerGoals
	m	()Lamq;	x_	getDeathSound
	m	()Z	z_	onClimbable
	f	Lacl;	b	DATA_FLAGS_ID
	f	F	c	SPIDER_SPECIAL_EFFECT_CHANCE
c	bwl$a	net/minecraft/world/entity/monster/Spider$SpiderAttackGoal
	m	(Lbwl;)V	<init>	<init>
		p	1		spider
	m	()Z	a	canUse
	m	(Lbfx;)D	a	getAttackReachSqr
		p	1		entity
	m	()Z	b	canContinueToUse
c	bwl$b	net/minecraft/world/entity/monster/Spider$SpiderEffectsGroupData
	m	(Lapo;)V	a	setRandomEffect
		p	1		random
	f	Lbew;	a	effect
c	bwl$c	net/minecraft/world/entity/monster/Spider$SpiderTargetGoal
	m	(Lbwl;Ljava/lang/Class;)V	<init>	<init>
		p	1		spider
		p	2		targetEntityClass
	m	()Z	a	canUse
c	bwm	net/minecraft/world/entity/monster/Stray
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lbfl;Lcmx;Lbgb;Lgt;Lapo;)Z	a	checkStraySpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	(Lcfv;F)Lbys;	b	getArrow
		p	1		arrow
		p	2		damageModifier
	m	(Lbem;)Lamq;	d	getHurtSound
		p	1		source
	m	()Lamq;	r	getStepSound
	m	()Lamq;	s	getAmbientSound
	m	()Lamq;	x_	getDeathSound
c	bwn	net/minecraft/world/entity/monster/Strider
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()Z	a	boost
	m	(DZLdbq;Lgt;)V	a	checkFallDamage
		p	1		heightDifference
		p	3		onGround
		p	4		state
		p	5		landedPosition
	m	(Lacl;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Laip;Lbfc;)Lbfc;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lams;)V	a	equipSaddle
		p	1		sound
	m	(Lbfx;Lede;)V	a	tickRidden
		p	1		controllingPassenger
		p	2		movementInput
	m	(Lcmi;)Lbph;	a	createNavigation
		p	1		world
	m	(Lcml;)Z	a	checkSpawnObstruction
		p	1		world
	m	(Lcmx;Lbdw;Lbfz;Lbgr;)Lbgr;	a	spawnJockey
		p	1		world
		p	2		difficulty
		p	3		rider
		p	4		entityData
	m	(Lcmx;Lbdw;Lbgb;Lbgr;Lre;)Lbgr;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Ldwj;)Z	a	canStandOnFluid
		p	1		state
	m	(Lgt;Lcml;)F	a	getWalkTargetValue
		p	1		pos
		p	2		world
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()F	aH	nextStep
	m	()V	a_	defineSynchedData
	m	(Laip;Lbfc;)Lbwn;	b	getBreedOffspring
	m	(Lbfx;)Lede;	b	getDismountLocationForPassenger
		p	1		passenger
	m	(Lbfx;Lede;)Lede;	b	getRiddenInput
		p	1		controllingPassenger
		p	2		movementInput
	m	(Lbym;Lbdx;)Lbdy;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lgt;Ldbq;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Z	bK	isOnFire
	m	()D	bv	getPassengersRidingOffset
	m	(Lbfl;Lcmj;Lbgb;Lgt;Lapo;)Z	c	checkStriderSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	()Lede;	cF	getLeashOffset
	m	()Lbfx;	cK	getControllingPassenger
	m	(Lbem;)Lamq;	d	getHurtSound
		p	1		source
	m	()Z	eX	isSensitiveToWater
	m	()V	er	dropEquipment
	m	()Z	fS	isBeingTempted
	m	()V	fY	floatStrider
	m	()Z	g	isSaddleable
	m	(Lbfx;)F	g	getRiddenSpeed
		p	1		controllingPassenger
	m	()Z	i	isSaddled
	m	()V	l	tick
	m	(Lcfv;)Z	m	isFood
		p	1		stack
	m	(Lbfh;)Z	o	canAddPassenger
		p	1		passenger
	m	()Z	q	isSuffocating
	m	()Lbhd$a;	r	createAttributes
	m	()Lamq;	s	getAmbientSound
	m	()Z	w	isPanicking
	m	(Z)V	w	setSuffocating
		p	1		cold
	m	()V	x	registerGoals
	m	()Lamq;	x_	getDeathSound
	m	()Z	z	shouldPassengersInheritMalus
	f	Ljava/util/UUID;	bS	SUFFOCATING_MODIFIER_UUID
	f	Lbhc;	bT	SUFFOCATING_MODIFIER
	f	F	bV	SUFFOCATE_STEERING_MODIFIER
	f	F	bW	STEERING_MODIFIER
	f	Lciu;	bX	FOOD_ITEMS
	f	Lciu;	bY	TEMPT_ITEMS
	f	Lacl;	bZ	DATA_BOOST_TIME
	f	Lacl;	ca	DATA_SUFFOCATING
	f	Lacl;	cb	DATA_SADDLE_ID
	f	Lbft;	cc	steering
	f	Lbob;	cd	temptGoal
	f	Lbnm;	ce	panicGoal
c	bwn$a	net/minecraft/world/entity/monster/Strider$StriderGoToLavaGoal
	m	(Lbwn;D)V	<init>	<init>
		p	1		strider
		p	2		speed
	m	()Z	a	canUse
	m	(Lcml;Lgt;)Z	a	isValidTarget
		p	1		world
		p	2		pos
	m	()Z	b	canContinueToUse
	m	()Lgt;	k	getMoveToTarget
	m	()Z	l	shouldRecalculatePath
	f	Lbwn;	g	strider
c	bwn$b	net/minecraft/world/entity/monster/Strider$StriderPathNavigation
	m	(Lbwn;Lcmi;)V	<init>	<init>
		p	1		entity
		p	2		world
	m	(I)Ldxb;	a	createPathFinder
		p	1		range
	m	(Ldwv;)Z	a	hasValidPathType
		p	1		pathType
	m	(Lgt;)Z	a	isStableDestination
		p	1		pos
c	bwo	net/minecraft/world/entity/monster/Vex
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(IZ)V	a	setVexFlag
		p	1		mask
		p	2		value
	m	(Lapo;Lbdw;)V	a	populateDefaultEquipmentSlots
		p	1		random
		p	2		localDifficulty
	m	(Lbfz;)V	a	setOwner
		p	1		owner
	m	(Lbgd;Lede;)V	a	move
		p	1		movementType
		p	2		movement
	m	(Lbwo;)Lapo;	a	access$000
	m	(Lcmx;Lbdw;Lbgb;Lbgr;Lre;)Lbgr;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()Z	aN	isFlapping
	m	()V	a_	defineSynchedData
	m	(I)V	b	setLimitedLife
		p	1		lifeTicks
	m	(Lbgj;Lbfi;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lbwo;)Lblw;	b	access$100
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()F	bh	getLightLevelDependentMagicValue
	m	()D	bu	getMyRidingOffset
	m	(I)Z	c	getVexFlag
		p	1		mask
	m	(Lbwo;)Lblw;	c	access$200
	m	(Lbem;)Lamq;	d	getHurtSound
		p	1		source
	m	(Lbwo;)Lapo;	d	access$300
	m	(Lbwo;)Lapo;	e	access$400
	m	(Lbwo;)Lapo;	f	access$500
	m	()Z	fS	isCharging
	m	(Lbwo;)Lapo;	g	access$600
	m	(Lgt;)V	g	setBoundOrigin
		p	1		bounds
	m	(Lbwo;)Lblw;	h	access$700
	m	()V	l	tick
	m	()Lbhd$a;	q	createAttributes
	m	()Lbfz;	r	getOwner
	m	()Lamq;	s	getAmbientSound
	m	()Lbfh;	v	getOwner
	m	()Lgt;	w	getBoundOrigin
	m	(Z)V	w	setIsCharging
		p	1		charging
	m	()V	x	registerGoals
	m	()Lamq;	x_	getDeathSound
	f	F	b	FLAP_DEGREES_PER_TICK
	f	D	bS	RIDING_OFFSET
	f	Lbfz;	bT	owner
	f	Lgt;	bU	boundOrigin
	f	Z	bV	hasLimitedLife
	f	I	bW	limitedLifeTicks
	f	I	c	TICKS_PER_FLAP
	f	Lacl;	d	DATA_FLAGS_ID
	f	I	e	FLAG_IS_CHARGING
c	bwo$a	net/minecraft/world/entity/monster/Vex$VexChargeAttackGoal
	m	()Z	J_	requiresUpdateEveryTick
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lbwo;	a	this$0
c	bwo$b	net/minecraft/world/entity/monster/Vex$VexCopyOwnerTargetGoal
	m	(Lbwo;Lbgg;)V	<init>	<init>
		p	2		mob
	m	()Z	a	canUse
	m	()V	c	start
	f	Lbwo;	a	this$0
	f	Lbqk;	b	copyOwnerTargeting
c	bwo$c	net/minecraft/world/entity/monster/Vex$VexMoveControl
	m	(Lbwo;Lbwo;)V	<init>	<init>
		p	2		owner
	m	()V	a	tick
	f	Lbwo;	l	this$0
c	bwo$d	net/minecraft/world/entity/monster/Vex$VexRandomMoveGoal
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	e	tick
	f	Lbwo;	a	this$0
c	bwp	net/minecraft/world/entity/monster/Vindicator
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	U	customServerAiStep
	m	()Lamq;	X_	getCelebrateSound
	m	(IZ)V	a	applyRaidBuffs
		p	1		wave
		p	2		unused
	m	(Lapo;Lbdw;)V	a	populateDefaultEquipmentSlots
		p	1		random
		p	2		localDifficulty
	m	(Lbdv;)Z	a	lambda$static$0
		p	0		difficulty
	m	(Lbwp;)Lapo;	a	access$000
	m	(Lcmx;Lbdw;Lbgb;Lbgr;Lre;)Lbgr;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Ltj;)V	b	setCustomName
		p	1		name
	m	(Lbem;)Lamq;	d	getHurtSound
		p	1		source
	m	(Lbfh;)Z	p	isAlliedTo
		p	1		other
	m	()Lbvi$a;	q	getArmPose
	m	()Lbhd$a;	r	createAttributes
	m	()Lamq;	s	getAmbientSound
	m	()V	x	registerGoals
	m	()Lamq;	x_	getDeathSound
	f	Ljava/lang/String;	b	TAG_JOHNNY
	f	Z	bS	isJohnny
	f	Ljava/util/function/Predicate;	e	DOOR_BREAKING_PREDICATE
c	bwp$a	net/minecraft/world/entity/monster/Vindicator$VindicatorBreakDoorGoal
	m	(Lbfz;)V	<init>	<init>
		p	1		mob
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
c	bwp$b	net/minecraft/world/entity/monster/Vindicator$VindicatorJohnnyAttackGoal
	m	(Lbwp;)V	<init>	<init>
		p	1		vindicator
	m	()Z	a	canUse
	m	()V	c	start
c	bwp$c	net/minecraft/world/entity/monster/Vindicator$VindicatorMeleeAttackGoal
	m	(Lbwp;Lbwp;)V	<init>	<init>
		p	2		vindicator
	m	(Lbfx;)D	a	getAttackReachSqr
		p	1		entity
	f	Lbwp;	b	this$0
c	bwq	net/minecraft/world/entity/monster/Witch
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()Lamq;	X_	getCelebrateSound
	m	(IZ)V	a	applyRaidBuffs
		p	1		wave
		p	2		unused
	m	(Lbfx;F)V	a	performRangedAttack
		p	1		target
		p	2		pullProgress
	m	()V	a_	defineSynchedData
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	(Lbgj;Lbfi;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	()V	b_	aiStep
	m	(Lbem;)Lamq;	d	getHurtSound
		p	1		source
	m	(Lbem;F)F	e	getDamageAfterMagicAbsorb
		p	1		source
		p	2		amount
	m	()Z	fT	canBeLeader
	m	(Lbfx;)Z	m	lambda$registerGoals$0
		p	1		entity
	m	()Z	q	isDrinkingPotion
	m	()Lbhd$a;	r	createAttributes
	m	()Lamq;	s	getAmbientSound
	m	()V	x	registerGoals
	m	()Lamq;	x_	getDeathSound
	m	(Z)V	y	setUsingItem
		p	1		drinking
	f	Ljava/util/UUID;	b	SPEED_MODIFIER_DRINKING_UUID
	f	Lacl;	bS	DATA_USING_ITEM
	f	I	bT	usingTime
	f	Lboo;	bU	healRaidersGoal
	f	Lbon;	bV	attackPlayersGoal
	f	Lbhc;	e	SPEED_MODIFIER_DRINKING
c	bwr	net/minecraft/world/entity/monster/WitherSkeleton
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lapo;Lbdw;)V	a	populateDefaultEquipmentSlots
		p	1		random
		p	2		localDifficulty
	m	(Lbem;IZ)V	a	dropCustomDeathLoot
		p	1		source
		p	2		lootingMultiplier
		p	3		allowDrops
	m	(Lcmx;Lbdw;Lbgb;Lbgr;Lre;)Lbgr;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lapo;Lbdw;)V	b	populateDefaultEquipmentEnchantments
		p	1		random
		p	2		localDifficulty
	m	(Lbgj;Lbfi;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lcfv;F)Lbys;	b	getArrow
		p	1		arrow
		p	2		damageModifier
	m	(Lbey;)Z	c	canBeAffected
		p	1		effect
	m	(Lbem;)Lamq;	d	getHurtSound
		p	1		source
	m	()Lamq;	r	getStepSound
	m	()Lamq;	s	getAmbientSound
	m	()V	x	registerGoals
	m	()Lamq;	x_	getDeathSound
	m	(Lbfh;)Z	z	doHurtTarget
		p	1		target
c	bws	net/minecraft/world/entity/monster/Zoglin
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	T	sendDebugPackets
	m	()V	U	customServerAiStep
	m	(Lacl;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Lbem;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbgy;)V	a	initCoreActivity
		p	0		brain
	m	(Lbym;)Z	a	canBeLeashed
		p	1		player
	m	(Lcom/mojang/serialization/Dynamic;)Lbgy;	a	makeBrain
		p	1		dynamic
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Z)V	a	setBaby
		p	1		baby
	m	()V	a_	defineSynchedData
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	(Lbgy;)V	b	initIdleActivity
		p	0		brain
	m	(Lgt;Ldbq;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()V	b_	aiStep
	m	()D	bv	getPassengersRidingOffset
	m	(Lbgy;)V	c	initFightActivity
		p	0		brain
	m	(Lbem;)Lamq;	d	getHurtSound
		p	1		source
	m	()Lbgy;	dH	getBrain
	m	()Lbgy$b;	dI	brainProvider
	m	(Lbfx;)V	e	blockedByShield
		p	1		target
	m	()Lbgc;	eJ	getMobType
	m	()I	fS	getAttackAnimationRemainingTicks
	m	()V	fT	playAngrySound
	m	()Ljava/util/Optional;	fU	findNearestValidAttackTarget
	m	(Lbfx;)Z	m	isTargetable
		p	1		entity
	m	(Lbfx;)V	n	setAttackTarget
		p	1		entity
	m	()Lbhd$a;	q	createAttributes
	m	()Z	r	isAdult
	m	()Lamq;	s	getAmbientSound
	m	()V	w	updateActivity
	m	()Lamq;	x_	getDeathSound
	m	()Z	y_	isBaby
	m	(Lbfh;)Z	z	doHurtTarget
		p	1		target
	f	Lcom/google/common/collect/ImmutableList;	b	SENSOR_TYPES
	f	I	bS	ATTACK_KNOCKBACK
	f	F	bT	KNOCKBACK_RESISTANCE
	f	I	bU	ATTACK_DAMAGE
	f	F	bV	BABY_ATTACK_DAMAGE
	f	I	bW	ATTACK_INTERVAL
	f	I	bX	BABY_ATTACK_INTERVAL
	f	I	bY	ATTACK_DURATION
	f	F	bZ	MOVEMENT_SPEED_WHEN_FIGHTING
	f	Lcom/google/common/collect/ImmutableList;	c	MEMORY_TYPES
	f	F	ca	SPEED_MULTIPLIER_WHEN_IDLING
	f	I	cb	attackAnimationRemainingTicks
	f	Lacl;	d	DATA_BABY_ID
	f	I	e	MAX_HEALTH
c	bwt	net/minecraft/world/entity/monster/Zombie
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcmi;)V	<init>	<init>
		p	1		world
	m	(F)V	C	handleAttributes
		p	1		chanceMultiplier
	m	()Z	W_	isSunSensitive
	m	(Lacl;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Laip;Lbfx;)Z	a	wasKilled
		p	1		world
		p	2		other
	m	(Lapo;)Z	a	getSpawnAsBabyOdds
		p	0		random
	m	(Lapo;Lbdw;)V	a	populateDefaultEquipmentSlots
		p	1		random
		p	2		localDifficulty
	m	(Lbdv;)Z	a	lambda$static$0
		p	0		difficulty
	m	(Lbem;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbem;IZ)V	a	dropCustomDeathLoot
		p	1		source
		p	2		lootingMultiplier
		p	3		allowDrops
	m	(Lbwt;)Lapo;	a	access$000
	m	(Lcmx;Lbdw;Lbgb;Lbgr;Lre;)Lbgr;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Z)V	a	setBaby
		p	1		baby
	m	()V	a_	defineSynchedData
	m	(I)V	b	startUnderWaterConversion
		p	1		ticksUntilWaterConversion
	m	(Lbfl;)V	b	convertToZombieType
		p	1		entityType
	m	(Lbgj;Lbfi;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lgt;Ldbq;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()V	b_	aiStep
	m	()D	bu	getMyRidingOffset
	m	(Lbem;)Lamq;	d	getHurtSound
		p	1		source
	m	()I	dX	getExperienceReward
	m	()Lbgc;	eJ	getMobType
	m	()Lcfv;	fS	getSkull
	m	()Z	fT	convertsInWater
	m	()V	fV	doUnderWaterConversion
	m	()Lbhd$a;	fW	createAttributes
	m	()Z	fZ	isUnderWaterConverting
	m	()Z	ga	canBreakDoors
	m	()V	gb	randomizeReinforcementsChance
	m	(Lcfv;)Z	j	canHoldItem
		p	1		stack
	m	(Lcfv;)Z	k	wantsToPickUp
		p	1		stack
	m	()V	l	tick
	m	()V	q	addBehaviourGoals
	m	()Z	r	supportsBreakDoorGoal
	m	()Lamq;	s	getAmbientSound
	m	()Lamq;	w	getStepSound
	m	()V	x	registerGoals
	m	(Z)V	x	setCanBreakDoors
		p	1		canBreakDoors
	m	()Lamq;	x_	getDeathSound
	m	()Z	y_	isBaby
	m	(Lbfh;)Z	z	doHurtTarget
		p	1		target
	f	Ljava/util/UUID;	b	SPEED_MODIFIER_BABY_UUID
	f	I	bS	REINFORCEMENT_ATTEMPTS
	f	I	bT	REINFORCEMENT_RANGE_MAX
	f	I	bU	REINFORCEMENT_RANGE_MIN
	f	F	bV	BABY_EYE_HEIGHT_ADJUSTMENT
	f	Lacl;	bW	DATA_SPECIAL_TYPE_ID
	f	Lacl;	bX	DATA_DROWNED_CONVERSION_ID
	f	F	bY	BREAK_DOOR_CHANCE
	f	Ljava/util/function/Predicate;	bZ	DOOR_BREAKING_PREDICATE
	f	Lbhc;	c	SPEED_MODIFIER_BABY
	f	Lbmd;	ca	breakDoorGoal
	f	Z	cb	canBreakDoors
	f	I	cc	inWaterTime
	f	I	cd	conversionTime
	f	Lacl;	d	DATA_BABY_ID
	f	F	e	ZOMBIE_LEADER_CHANCE
c	bwt$a	net/minecraft/world/entity/monster/Zombie$ZombieAttackTurtleEggGoal
	m	(Lbwt;Lbgg;DI)V	<init>	<init>
		p	2		mob
		p	3		speed
		p	5		maxYDifference
	m	(Lcmi;Lgt;)V	a	playBreakSound
		p	1		world
		p	2		pos
	m	(Lcmj;Lgt;)V	a	playDestroyProgressSound
		p	1		world
		p	2		pos
	m	()D	i	acceptedDistance
	f	Lbwt;	g	this$0
c	bwt$b	net/minecraft/world/entity/monster/Zombie$ZombieGroupData
	m	(ZZ)V	<init>	<init>
		p	1		baby
		p	2		tryChickenJockey
	f	Z	a	isBaby
	f	Z	b	canSpawnJockey
c	bwu	net/minecraft/world/entity/monster/ZombieVillager
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lbya;)V	a	setVillagerData
		p	1		villagerData
	m	(Lcmx;Lbdw;Lbgb;Lbgr;Lre;)Lbgr;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lhd$c;)V	a	lambda$new$0
		p	1		profession
	m	(Ljava/util/UUID;I)V	a	startConverting
		p	1		uuid
		p	2		delay
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lre;Lrx;)V	a	lambda$addAdditionalSaveData$1
	m	(Lrx;)V	a	setGossips
		p	1		gossipData
	m	()V	a_	defineSynchedData
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	(I)V	b	setVillagerXp
		p	1		xp
	m	(Lbym;Lbdx;)Lbdy;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Laip;)V	c	finishConversion
		p	1		world
	m	(Lre;)V	c	setTradeOffers
		p	1		offerData
	m	(Lbem;)Lamq;	d	getHurtSound
		p	1		source
	m	()F	eO	getVoicePitch
	m	()Lcfv;	fS	getSkull
	m	()Z	fT	convertsInWater
	m	()Z	gc	isConverting
	m	()Lbya;	gd	getVillagerData
	m	()I	ge	getVillagerXp
	m	()I	gf	getConversionProgress
	m	(D)Z	h	removeWhenFarAway
		p	1		distanceSquared
	m	()V	l	tick
	m	()Lamq;	s	getAmbientSound
	m	()Lamq;	w	getStepSound
	m	()Lamq;	x_	getDeathSound
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	I	bW	VILLAGER_CONVERSION_WAIT_MIN
	f	I	bX	VILLAGER_CONVERSION_WAIT_MAX
	f	I	bY	MAX_SPECIAL_BLOCKS_COUNT
	f	I	bZ	SPECIAL_BLOCK_RADIUS
	f	Lacl;	c	DATA_CONVERTING_ID
	f	I	ca	villagerConversionTime
	f	Ljava/util/UUID;	cb	conversionStarter
	f	Lrx;	cc	gossips
	f	Lre;	cd	tradeOffers
	f	I	ce	villagerXp
	f	Lacl;	d	DATA_VILLAGER_DATA
c	bwv	net/minecraft/world/entity/monster/ZombifiedPiglin
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	U	customServerAiStep
	m	()I	a	getRemainingPersistentAngerTime
	m	(I)V	a	setRemainingPersistentAngerTime
		p	1		angerTime
	m	(Lapo;Lbdw;)V	a	populateDefaultEquipmentSlots
		p	1		random
		p	2		localDifficulty
	m	(Lbwv;)V	a	lambda$alertOthers$3
		p	1		zombifiedPiglin
	m	(Lcml;)Z	a	checkSpawnObstruction
		p	1		world
	m	(Ljava/util/UUID;)V	a	setPersistentAngerTarget
		p	1		angryAt
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()Ljava/util/UUID;	b	getPersistentAngerTarget
	m	(Lbfl;Lcmj;Lbgb;Lgt;Lapo;)Z	b	checkZombifiedPiglinSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	(Lbgj;Lbfi;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lbwv;)Z	b	lambda$alertOthers$2
		p	1		zombifiedPiglin
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()D	bu	getMyRidingOffset
	m	()V	c	startPersistentAngerTimer
	m	(Lbwv;)Z	c	lambda$alertOthers$1
		p	0		zombifiedPiglin
	m	(Lbem;)Lamq;	d	getHurtSound
		p	1		source
	m	(Lbwv;)Z	d	lambda$alertOthers$0
		p	1		zombifiedPiglin
	m	(Lbym;)Z	e	isPreventingPlayerRest
		p	1		player
	m	()Lcfv;	fS	getSkull
	m	()Z	fT	convertsInWater
	m	()V	gb	randomizeReinforcementsChance
	m	()Lbhd$a;	gc	createAttributes
	m	()V	gd	maybePlayFirstAngerSound
	m	()V	ge	maybeAlertOthers
	m	()V	gf	alertOthers
	m	()V	gg	playAngerSound
	m	(Lbfx;)V	i	setTarget
		p	1		target
	m	(Lcfv;)Z	k	wantsToPickUp
		p	1		stack
	m	()V	q	addBehaviourGoals
	m	()Lamq;	s	getAmbientSound
	m	()Lamq;	x_	getDeathSound
	f	Lbdj;	bW	FIRST_ANGER_SOUND_DELAY
	f	I	bX	playFirstAngerSoundIn
	f	Lbdj;	bY	PERSISTENT_ANGER_TIME
	f	I	bZ	remainingPersistentAngerTime
	f	Ljava/util/UUID;	c	SPEED_MODIFIER_ATTACKING_UUID
	f	Ljava/util/UUID;	ca	persistentAngerTarget
	f	I	cb	ALERT_RANGE_Y
	f	Lbdj;	cc	ALERT_INTERVAL
	f	I	cd	ticksUntilNextAlert
	f	F	ce	ZOMBIFIED_PIGLIN_EYE_HEIGHT
	f	F	cf	ZOMBIFIED_PIGLIN_BABY_EYE_HEIGHT_ADJUSTMENT
	f	Lbhc;	d	SPEED_MODIFIER_ATTACKING
c	bww	net/minecraft/world/entity/monster/hoglin/Hoglin
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	T	sendDebugPackets
	m	()V	U	customServerAiStep
	m	(Laip;Lbfc;)Lbfc;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lbem;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbym;)Z	a	canBeLeashed
		p	1		player
	m	(Lcmx;Lbdw;Lbgb;Lbgr;Lre;)Lbgr;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lcom/mojang/serialization/Dynamic;)Lbgy;	a	makeBrain
		p	1		dynamic
	m	(Lgt;Lcml;)F	a	getWalkTargetValue
		p	1		pos
		p	2		world
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()Lamq;	aI	getSwimSound
	m	()Lamq;	aJ	getSwimSplashSound
	m	()V	a_	defineSynchedData
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	(Lamq;)V	b	playSoundEvent
		p	1		sound
	m	(Lbym;Lbdx;)Lbdy;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lgt;Ldbq;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()V	b_	aiStep
	m	()D	bv	getPassengersRidingOffset
	m	(Laip;)V	c	finishConversion
		p	1		word
	m	(Lbfl;Lcmj;Lbgb;Lgt;Lapo;)Z	c	checkHoglinSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	()Lams;	cX	getSoundSource
	m	(Lbem;)Lamq;	d	getHurtSound
		p	1		source
	m	()Lbgy;	dH	getBrain
	m	()Lbgy$b;	dI	brainProvider
	m	()Z	dV	shouldDropExperience
	m	()I	dX	getExperienceReward
	m	(Lbfx;)V	e	blockedByShield
		p	1		target
	m	()I	fS	getAttackAnimationRemainingTicks
	m	()Z	fT	canFallInLove
	m	()Z	fY	canBeHunted
	m	()Z	fZ	isImmuneToZombification
	m	(D)Z	h	removeWhenFarAway
		p	1		distanceSquared
	m	()V	m	ageBoundaryReached
	m	(Lcfv;)Z	m	isFood
		p	1		stack
	m	()Lbhd$a;	q	createAttributes
	m	()Z	r	isAdult
	m	()Lamq;	s	getAmbientSound
	m	()Z	w	isConverting
	m	(Z)V	w	setImmuneToZombification
		p	1		immuneToZombification
	m	(Z)V	x	setCannotBeHunted
		p	1		cannotBeHunted
	m	()Lamq;	x_	getDeathSound
	m	(Lbfh;)Z	z	doHurtTarget
		p	1		target
	f	Lcom/google/common/collect/ImmutableList;	bS	SENSOR_TYPES
	f	Lcom/google/common/collect/ImmutableList;	bT	MEMORY_TYPES
	f	Lacl;	bV	DATA_IMMUNE_TO_ZOMBIFICATION
	f	F	bW	PROBABILITY_OF_SPAWNING_AS_BABY
	f	I	bX	MAX_HEALTH
	f	F	bY	MOVEMENT_SPEED_WHEN_FIGHTING
	f	I	bZ	ATTACK_KNOCKBACK
	f	F	ca	KNOCKBACK_RESISTANCE
	f	I	cb	ATTACK_DAMAGE
	f	F	cc	BABY_ATTACK_DAMAGE
	f	I	cd	CONVERSION_TIME
	f	I	ce	attackAnimationRemainingTicks
	f	I	cf	timeInOverworld
	f	Z	cg	cannotBeHunted
c	bwx	net/minecraft/world/entity/monster/hoglin/HoglinAi
	m	()Lbjl;	a	createIdleMovementBehaviors
	m	(Lbfx;Lbww;)V	a	lambda$broadcastAttackTarget$1
		p	1		hoglin
	m	(Lbgy;)Lbgy;	a	makeBrain
		p	0		brain
	m	(Lbww;)V	a	updateActivity
		p	0		hoglin
	m	(Lbww;Lbfx;)V	a	onHitTarget
		p	0		hoglin
		p	1		target
	m	(Lbww;Lbzx;)Lamq;	a	getSoundForActivity
		p	0		hoglin
		p	1		activity
	m	(Lbww;Lgt;)Z	a	isPosNearNearestRepellent
		p	0		hoglin
		p	1		pos
	m	(Lbfx;Lbww;)V	b	lambda$broadcastRetreat$0
		p	1		hoglin
	m	(Lbgy;)V	b	initCoreActivity
		p	0		brain
	m	(Lbww;)Ljava/util/Optional;	b	getSoundForCurrentActivity
		p	0		hoglin
	m	(Lbww;Lbfx;)V	b	wasHurtBy
		p	0		hoglin
		p	1		attacker
	m	(Lbww;Lbzx;)Lamq;	b	lambda$getSoundForCurrentActivity$2
		p	1		activity
	m	(Lbgy;)V	c	initIdleActivity
		p	0		brain
	m	(Lbww;)Z	c	isPacified
		p	0		hoglin
	m	(Lbww;Lbfx;)V	c	broadcastRetreat
		p	0		hoglin
		p	1		target
	m	(Lbgy;)V	d	initFightActivity
		p	0		brain
	m	(Lbww;)Ljava/util/Optional;	d	findNearestValidAttackTarget
		p	0		hoglin
	m	(Lbww;Lbfx;)V	d	retreatFromNearestTarget
		p	0		hoglin
		p	1		target
	m	(Lbgy;)V	e	initRetreatActivity
		p	0		brain
	m	(Lbww;)Z	e	wantsToStopFleeing
		p	0		hoglin
	m	(Lbww;Lbfx;)V	e	setAvoidTarget
		p	0		hoglin
		p	1		target
	m	(Lbww;)Z	f	piglinsOutnumberHoglins
		p	0		hoglin
	m	(Lbww;Lbfx;)V	f	maybeRetaliate
		p	0		hoglin
		p	1		target
	m	(Lbww;)Ljava/util/List;	g	getVisibleAdultHoglins
		p	0		hoglin
	m	(Lbww;Lbfx;)V	g	setAttackTarget
		p	0		hoglin
		p	1		target
	m	(Lbww;)Z	h	isNearRepellent
		p	0		hoglin
	m	(Lbww;Lbfx;)V	h	broadcastAttackTarget
		p	0		hoglin
		p	1		target
	m	(Lbww;)Z	i	isBreeding
		p	0		hoglin
	m	(Lbww;Lbfx;)V	i	setAttackTargetIfCloserThanCurrent
		p	0		hoglin
		p	1		targetCandidate
	f	I	a	REPELLENT_DETECTION_RANGE_HORIZONTAL
	f	I	b	REPELLENT_DETECTION_RANGE_VERTICAL
	f	Lbdj;	c	RETREAT_DURATION
	f	I	d	ATTACK_DURATION
	f	I	e	DESIRED_DISTANCE_FROM_PIGLIN_WHEN_IDLING
	f	I	f	DESIRED_DISTANCE_FROM_PIGLIN_WHEN_RETREATING
	f	I	g	ATTACK_INTERVAL
	f	I	h	BABY_ATTACK_INTERVAL
	f	I	i	REPELLENT_PACIFY_TIME
	f	Lbdj;	j	ADULT_FOLLOW_RANGE
	f	F	k	SPEED_MULTIPLIER_WHEN_AVOIDING_REPELLENT
	f	F	l	SPEED_MULTIPLIER_WHEN_RETREATING
	f	F	m	SPEED_MULTIPLIER_WHEN_MAKING_LOVE
	f	F	n	SPEED_MULTIPLIER_WHEN_IDLING
	f	F	o	SPEED_MULTIPLIER_WHEN_FOLLOWING_ADULT
c	bwy	net/minecraft/world/entity/monster/hoglin/HoglinBase
	m	(Lbfx;Lbfx;)Z	a	hurtAndThrowTarget
		p	0		attacker
		p	1		target
	m	(Lbfx;Lbfx;)V	b	throwTarget
		p	0		attacker
		p	1		target
	m	()I	fS	getAttackAnimationRemainingTicks
	f	I	j_	ATTACK_ANIMATION_DURATION
c	bwz	net/minecraft/world/entity/monster/hoglin/package-info
c	bxa	net/minecraft/world/entity/monster/package-info
c	bxb	net/minecraft/world/entity/monster/piglin/AbstractPiglin
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	L	playAmbientSound
	m	()Lbfx;	P_	getTarget
	m	()V	T	sendDebugPackets
	m	()V	U	customServerAiStep
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(Lbgj;Lbfi;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()D	bu	getMyRidingOffset
	m	(Laip;)V	c	finishConversion
		p	1		world
	m	()Z	fS	isConverting
	m	()Z	fT	isAdult
	m	()Lbxe;	fU	getArmPose
	m	()Z	fV	isHoldingMeleeWeapon
	m	()V	fW	playConvertedSound
	m	()Z	q	canHunt
	m	()Z	r	isImmuneToZombification
	m	()V	w	applyOpenDoorsAbility
	m	(Z)V	w	setImmuneToZombification
		p	1		immuneToZombification
	f	Lacl;	b	DATA_IMMUNE_TO_ZOMBIFICATION
	f	I	c	CONVERSION_TIME
	f	F	d	PIGLIN_EYE_HEIGHT
	f	I	e	timeInOverworld
c	bxc	net/minecraft/world/entity/monster/piglin/Piglin
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()Z	R	shouldDespawnInPeaceful
	m	()V	U	customServerAiStep
	m	()V	a	onCrossbowAttackPerformed
	m	(Lacl;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Lapo;Lbdw;)V	a	populateDefaultEquipmentSlots
		p	1		random
		p	2		localDifficulty
	m	(Lbem;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbem;IZ)V	a	dropCustomDeathLoot
		p	1		source
		p	2		lootingMultiplier
		p	3		allowDrops
	m	(Lbfh;Z)Z	a	startRiding
		p	1		entity
		p	2		force
	m	(Lbfm;Lcfv;Lapo;)V	a	maybeWearArmor
		p	1		slot
		p	2		stack
		p	3		random
	m	(Lbfx;F)V	a	performRangedAttack
		p	1		target
		p	2		pullProgress
	m	(Lbfx;Lcfv;Lbze;F)V	a	shootCrossbowProjectile
		p	1		target
		p	2		crossbow
		p	3		projectile
		p	4		multiShotSpray
	m	(Lcgl;)Z	a	canFireProjectileWeapon
		p	1		weapon
	m	(Lcmx;Lbdw;Lbgb;Lbgr;Lre;)Lbgr;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lcom/mojang/serialization/Dynamic;)Lbgy;	a	makeBrain
		p	1		dynamic
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Z)V	a	setBaby
		p	1		baby
	m	()V	a_	defineSynchedData
	m	(Lamq;)V	b	playSoundEvent
		p	1		sound
	m	(Lbfh;I)Lbfh;	b	getTopPassenger
		p	1		entity
		p	2		maxLevel
	m	(Lbfl;Lcmj;Lbgb;Lgt;Lapo;)Z	b	checkPiglinSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	(Lbgj;Lbfi;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lbvf;)V	b	pickUpItem
		p	1		item
	m	(Lbym;Lbdx;)Lbdy;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lcfv;Lcfv;)Z	b	canReplaceCurrentItem
		p	1		newStack
		p	2		oldStack
	m	(Lgt;Ldbq;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Z)V	b	setChargingCrossbow
		p	1		charging
	m	()D	bv	getPassengersRidingOffset
	m	(Laip;)V	c	finishConversion
		p	1		world
	m	(Lbem;)Lamq;	d	getHurtSound
		p	1		source
	m	()Lbgy;	dH	getBrain
	m	()Lbgy$b;	dI	brainProvider
	m	()I	dX	getExperienceReward
	m	()Lbxe;	fU	getArmPose
	m	()V	fW	playConvertedSound
	m	()Lbhd$a;	fZ	createAttributes
	m	()Z	ga	isDancing
	m	()Lcfv;	gb	createSpawnWeapon
	m	()Z	gc	isChargingCrossbow
	m	(D)Z	h	removeWhenFarAway
		p	1		distanceSquared
	m	(Lcfv;)Z	k	wantsToPickUp
		p	1		stack
	m	(Lcfv;)Lcfv;	l	addToInventory
		p	1		stack
	m	(Lcfv;)Z	m	canAddToInventory
		p	1		stack
	m	(Lcfv;)V	n	holdInMainHand
		p	1		stack
	m	(Lcfv;)V	o	holdInOffHand
		p	1		stack
	m	(Lcfv;)Z	p	canReplaceCurrentItem
		p	1		stack
	m	()Z	q	canHunt
	m	()Lamq;	s	getAmbientSound
	m	()Lbed;	w	getInventory
	m	(Z)V	x	setDancing
		p	1		dancing
	m	()Lamq;	x_	getDeathSound
	m	(Z)V	y	setCannotHunt
		p	1		cannotHunt
	m	()Z	y_	isBaby
	f	Lcom/google/common/collect/ImmutableList;	bS	SENSOR_TYPES
	f	Lcom/google/common/collect/ImmutableList;	bT	MEMORY_TYPES
	f	Lacl;	bU	DATA_BABY_ID
	f	Lacl;	bV	DATA_IS_CHARGING_CROSSBOW
	f	Lacl;	bW	DATA_IS_DANCING
	f	Ljava/util/UUID;	bX	SPEED_MODIFIER_BABY_UUID
	f	Lbhc;	bY	SPEED_MODIFIER_BABY
	f	I	bZ	MAX_HEALTH
	f	F	ca	MOVEMENT_SPEED_WHEN_FIGHTING
	f	I	cb	ATTACK_DAMAGE
	f	F	cc	CROSSBOW_POWER
	f	F	cd	CHANCE_OF_WEARING_EACH_ARMOUR_ITEM
	f	I	ce	MAX_PASSENGERS_ON_ONE_HOGLIN
	f	F	cf	PROBABILITY_OF_SPAWNING_AS_BABY
	f	F	cg	BABY_EYE_HEIGHT_ADJUSTMENT
	f	D	ch	PROBABILITY_OF_SPAWNING_WITH_CROSSBOW_INSTEAD_OF_SWORD
	f	Lbed;	ci	inventory
	f	Z	cj	cannotHunt
c	bxd	net/minecraft/world/entity/monster/piglin/PiglinAi
	m	()Lcom/google/common/collect/ImmutableList;	a	createLookBehaviors
	m	(Lbfl;)Z	a	isZombified
		p	0		entityType
	m	(Lbfx;)Z	a	isWearingGold
		p	0		entity
	m	(Lbfx;Lbfx;)Z	a	wantsToDance
		p	0		piglin
		p	1		target
	m	(Lbfx;Lbgy;Lbfx;)V	a	lambda$wasHurtBy$6
		p	2		avoiding
	m	(Lbfx;Lbxb;)V	a	lambda$broadcastRetreat$13
		p	1		piglin
	m	(Lbgy;)V	a	initCoreActivity
		p	0		piglin
	m	(Lbjo$a;Lbfx;)Z	a	lambda$babySometimesRideBabyHoglin$8
		p	1		entity
	m	(Lbvf;)Lcfv;	a	removeOneItemFromItemEntity
		p	0		stack
	m	(Lbxb;)V	a	broadcastUniversalAnger
		p	0		piglin
	m	(Lbxb;Lbfx;)V	a	maybeRetaliate
		p	0		piglin
		p	1		target
	m	(Lbxb;Lbym;)V	a	lambda$broadcastUniversalAnger$10
		p	1		player
	m	(Lbxc;)V	a	updateActivity
		p	0		piglin
	m	(Lbxc;Lapo;)V	a	initMemories
		p	0		piglin
		p	1		random
	m	(Lbxc;Lbfh;)Z	a	wantsToStopRiding
		p	0		piglin
		p	1		ridden
	m	(Lbxc;Lbfx;)V	a	wasHurtBy
		p	0		piglin
		p	1		attacker
	m	(Lbxc;Lbgy;)Lbgy;	a	makeBrain
		p	0		piglin
		p	1		brain
	m	(Lbxc;Lbvf;)V	a	pickUpItem
		p	0		piglin
		p	1		drop
	m	(Lbxc;Lbym;Lbdx;)Lbdy;	a	mobInteract
		p	0		piglin
		p	1		player
		p	2		hand
	m	(Lbxc;Lbym;Ljava/util/List;)V	a	throwItemsTowardPlayer
		p	0		piglin
		p	1		player
		p	2		items
	m	(Lbxc;Lbzx;)Lamq;	a	getSoundForActivity
		p	0		piglin
		p	1		activity
	m	(Lbxc;Lcfv;)Z	a	wantsToPickup
		p	0		piglin
		p	1		stack
	m	(Lbxc;Ljava/util/List;)V	a	throwItems
		p	0		piglin
		p	1		items
	m	(Lbxc;Ljava/util/List;Lede;)V	a	throwItemsTowardPos
		p	0		piglin
		p	1		items
		p	2		pos
	m	(Lbxc;Z)V	a	stopHoldingOffHandItem
		p	0		piglin
		p	1		barter
	m	(Lbym;Lbxc;)V	a	lambda$angerNearbyPiglins$5
		p	1		piglin
	m	(Lbym;Z)V	a	angerNearbyPiglins
		p	0		player
		p	1		blockOpen
	m	(Lcfv;)Z	a	isLovedItem
		p	0		stack
	m	(ZLbym;Lbxc;)Z	a	lambda$angerNearbyPiglins$4
		p	2		piglin
	m	()Lbjl;	b	createIdleLookBehaviors
	m	(Lbfx;)Z	b	isPlayerHoldingLovedItem
		p	0		target
	m	(Lbfx;Lbfx;)Z	b	lambda$isNearestValidAttackTarget$3
		p	1		preferredTarget
	m	(Lbfx;Lbxb;)V	b	lambda$broadcastAngerTarget$9
		p	1		nearbyPiglin
	m	(Lbgy;)V	b	initIdleActivity
		p	0		piglin
	m	(Lbxb;)Ljava/util/Optional;	b	getNearestVisibleTargetablePlayer
		p	0		piglin
	m	(Lbxb;Lbfx;)V	b	broadcastAngerTarget
		p	0		piglin
		p	1		target
	m	(Lbxc;)V	b	cancelAdmiring
		p	0		piglin
	m	(Lbxc;Lbfx;)Z	b	isNearestValidAttackTarget
		p	0		piglin
		p	1		target
	m	(Lbxc;Lbgy;)V	b	initFightActivity
		p	0		piglin
		p	1		brain
	m	(Lbxc;Lbzx;)Lamq;	b	lambda$getSoundForCurrentActivity$7
		p	1		activity
	m	(Lbxc;Lcfv;)Z	b	canAdmire
		p	0		piglin
		p	1		nearbyItems
	m	(Lbxc;Ljava/util/List;)V	b	throwItemsTowardRandomPos
		p	0		piglin
		p	1		items
	m	(Lcfv;)Z	b	isBarterCurrency
		p	0		stack
	m	()Lbjl;	c	createIdleMovementBehaviors
	m	(Lbfx;)Z	c	hasCrossbow
		p	0		piglin
	m	(Lbgy;)V	c	initCelebrateActivity
		p	0		brain
	m	(Lbxb;)V	c	dontKillAnyMoreHoglinsForAWhile
		p	0		piglin
	m	(Lbxb;Lbfx;)V	c	setAngerTarget
		p	0		piglin
		p	1		target
	m	(Lbxc;)Ljava/util/Optional;	c	getSoundForCurrentActivity
		p	0		piglin
	m	(Lbxc;Lbfx;)V	c	broadcastRetreat
		p	0		piglin
		p	1		target
	m	(Lbxc;Lcfv;)V	c	holdInOffhand
		p	0		piglin
		p	1		stack
	m	(Lcfv;)Z	c	isFood
		p	0		stack
	m	()Lbhq;	d	avoidRepellent
	m	(Lbfx;)V	d	admireGoldItem
		p	0		entity
	m	(Lbgy;)V	d	initAdmireItemActivity
		p	0		brain
	m	(Lbxb;)Z	d	isIdle
		p	0		piglin
	m	(Lbxb;Lbfx;)V	d	setAngerTargetToNearestTargetablePlayerIfFound
		p	0		piglin
		p	1		player
	m	(Lbxc;)Ljava/util/List;	d	getVisibleAdultPiglins
		p	0		piglin
	m	(Lbxc;Lbfx;)V	d	retreatFromNearestTarget
		p	0		piglin
		p	1		target
	m	(Lbxc;Lcfv;)V	d	putInInventory
		p	0		piglin
		p	1		stack
	m	()Lbhq;	e	babyAvoidNemesis
	m	(Lbfx;)Z	e	seesPlayerHoldingLovedItem
		p	0		entity
	m	(Lbgy;)V	e	initRetreatActivity
		p	0		brain
	m	(Lbxb;)Ljava/util/List;	e	getAdultPiglins
		p	0		piglin
	m	(Lbxb;Lbfx;)V	e	setAngerTargetIfCloserThanCurrent
		p	0		piglin
		p	1		target
	m	(Lbxc;)Ljava/util/Optional;	e	getAvoidTarget
		p	0		piglin
	m	(Lbxc;Lbfx;)V	e	setAvoidTargetAndDontHuntForAWhile
		p	0		piglin
		p	1		target
	m	()Lbhq;	f	avoidZombified
	m	(Lbfx;)Z	f	doesntSeeAnyPlayerHoldingLovedItem
		p	0		piglin
	m	(Lbgy;)V	f	initRideHoglinActivity
		p	0		brain
	m	(Lbxb;)Ljava/util/Optional;	f	getAngerTarget
		p	0		piglin
	m	(Lbxc;)Z	f	isBabyRidingBaby
		p	0		piglin
	m	(Lbxc;Lbfx;)Z	f	lambda$initFightActivity$0
		p	1		target
	m	()Lbhq;	g	babySometimesRideBabyHoglin
	m	(Lbfx;)Z	g	wasHurtRecently
		p	0		piglin
	m	(Lbxb;)Z	g	lambda$broadcastRetreat$12
		p	0		nearbyVisiblePiglin
	m	(Lbxc;)Ljava/util/List;	g	getBarterResponseItems
		p	0		piglin
	m	(Lbxb;)V	h	lambda$broadcastUniversalAnger$11
		p	0		nearbyPiglin
	m	(Lbxc;)Z	h	isNearZombified
		p	0		piglin
	m	(Lbxc;)Ljava/util/Optional;	i	findNearestValidAttackTarget
		p	0		piglin
	m	(Lbxc;)Z	j	isNearAvoidTarget
		p	0		piglin
	m	(Lbxc;)V	k	stopWalking
		p	0		piglin
	m	(Lbxc;)Z	l	wantsToStopFleeing
		p	0		piglin
	m	(Lbxc;)Z	m	piglinsEqualOrOutnumberHoglins
		p	0		piglin
	m	(Lbxc;)Z	n	hoglinsOutnumberPiglins
		p	0		piglins
	m	(Lbxc;)V	o	eat
		p	0		piglin
	m	(Lbxc;)Lede;	p	getRandomNearbyPos
		p	0		piglin
	m	(Lbxc;)Z	q	hasEatenRecently
		p	0		piglin
	m	(Lbxc;)Z	r	isAdmiringItem
		p	0		entity
	m	(Lbxc;)Z	s	isNearRepellent
		p	0		piglin
	m	(Lbxc;)Z	t	isAdmiringDisabled
		p	0		piglin
	m	(Lbxc;)Z	u	isHoldingItemInOffHand
		p	0		piglin
	m	(Lbxc;)Z	v	isNotHoldingLovedItemInOffHand
		p	0		piglin
	m	(Lbxc;)Z	w	lambda$initRideHoglinActivity$2
	m	(Lbxc;)Z	x	lambda$initCelebrateActivity$1
		p	0		piglin
	f	Lbdj;	A	AVOID_ZOMBIFIED_DURATION
	f	Lbdj;	B	BABY_AVOID_NEMESIS_DURATION
	f	F	C	PROBABILITY_OF_CELEBRATION_DANCE
	f	F	D	SPEED_MULTIPLIER_WHEN_AVOIDING
	f	F	E	SPEED_MULTIPLIER_WHEN_RETREATING
	f	F	F	SPEED_MULTIPLIER_WHEN_MOUNTING
	f	F	G	SPEED_MULTIPLIER_WHEN_GOING_TO_WANTED_ITEM
	f	F	H	SPEED_MULTIPLIER_WHEN_GOING_TO_CELEBRATE_LOCATION
	f	F	I	SPEED_MULTIPLIER_WHEN_DANCING
	f	F	J	SPEED_MULTIPLIER_WHEN_IDLING
	f	I	a	REPELLENT_DETECTION_RANGE_HORIZONTAL
	f	I	b	REPELLENT_DETECTION_RANGE_VERTICAL
	f	Lcfq;	c	BARTERING_ITEM
	f	Lbdj;	d	TIME_BETWEEN_HUNTS
	f	I	e	PLAYER_ANGER_RANGE
	f	I	f	ANGER_DURATION
	f	I	g	ADMIRE_DURATION
	f	I	h	MAX_DISTANCE_TO_WALK_TO_ITEM
	f	I	i	MAX_TIME_TO_WALK_TO_ITEM
	f	I	j	HOW_LONG_TIME_TO_DISABLE_ADMIRE_WALKING_IF_CANT_REACH_ITEM
	f	I	k	CELEBRATION_TIME
	f	I	l	BABY_FLEE_DURATION_AFTER_GETTING_HIT
	f	I	m	HIT_BY_PLAYER_MEMORY_TIMEOUT
	f	I	n	MAX_WALK_DISTANCE_TO_START_RIDING
	f	Lbdj;	o	RIDE_START_INTERVAL
	f	Lbdj;	p	RIDE_DURATION
	f	Lbdj;	q	RETREAT_DURATION
	f	I	r	MELEE_ATTACK_COOLDOWN
	f	I	s	EAT_COOLDOWN
	f	I	t	DESIRED_DISTANCE_FROM_ENTITY_WHEN_AVOIDING
	f	I	u	MAX_LOOK_DIST
	f	I	v	MAX_LOOK_DIST_FOR_PLAYER_HOLDING_LOVED_ITEM
	f	I	w	INTERACTION_RANGE
	f	I	x	MIN_DESIRED_DIST_FROM_TARGET_WHEN_HOLDING_CROSSBOW
	f	F	y	SPEED_WHEN_STRAFING_BACK_FROM_TARGET
	f	I	z	DESIRED_DISTANCE_FROM_ZOMBIFIED
c	bxe	net/minecraft/world/entity/monster/piglin/PiglinArmPose
	m	()[Lbxe;	a	$values
	f	Lbxe;	a	ATTACKING_WITH_MELEE_WEAPON
	f	Lbxe;	b	CROSSBOW_HOLD
	f	Lbxe;	c	CROSSBOW_CHARGE
	f	Lbxe;	d	ADMIRING_ITEM
	f	Lbxe;	e	DANCING
	f	Lbxe;	f	DEFAULT
	f	[Lbxe;	g	$VALUES
c	bxf	net/minecraft/world/entity/monster/piglin/PiglinBrute
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	U	customServerAiStep
	m	(Lapo;Lbdw;)V	a	populateDefaultEquipmentSlots
		p	1		random
		p	2		localDifficulty
	m	(Lbem;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lcmx;Lbdw;Lbgb;Lbgr;Lre;)Lbgr;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lcom/mojang/serialization/Dynamic;)Lbgy;	a	makeBrain
		p	1		dynamic
	m	(Lgt;Ldbq;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lbem;)Lamq;	d	getHurtSound
		p	1		source
	m	()Lbgy;	dH	getBrain
	m	()Lbgy$b;	dI	brainProvider
	m	()Lbxe;	fU	getArmPose
	m	()V	fW	playConvertedSound
	m	()V	fZ	playAngrySound
	m	(Lcfv;)Z	k	wantsToPickUp
		p	1		stack
	m	()Z	q	canHunt
	m	()Lamq;	s	getAmbientSound
	m	()Lbhd$a;	w	createAttributes
	m	()Lamq;	x_	getDeathSound
	f	Lcom/google/common/collect/ImmutableList;	bS	SENSOR_TYPES
	f	Lcom/google/common/collect/ImmutableList;	bT	MEMORY_TYPES
	f	I	bU	MAX_HEALTH
	f	F	bV	MOVEMENT_SPEED_WHEN_FIGHTING
	f	I	bW	ATTACK_DAMAGE
c	bxg	net/minecraft/world/entity/monster/piglin/PiglinBruteAi
	m	()Lbjl;	a	createIdleLookBehaviors
	m	(Lbfx;Lbfx;)Z	a	lambda$isNearestValidAttackTarget$1
		p	1		target
	m	(Lbxb;)Ljava/util/Optional;	a	findNearestValidAttackTarget
		p	0		piglin
	m	(Lbxb;Lbfx;)Z	a	isNearestValidAttackTarget
		p	0		piglin
		p	1		entity
	m	(Lbxb;Lboz;)Ljava/util/Optional;	a	getTargetIfWithinRange
		p	0		piglin
		p	1		targetMemoryModule
	m	(Lbxf;)V	a	initMemories
		p	0		piglinBrute
	m	(Lbxf;Lbfx;)V	a	wasHurtBy
		p	0		piglinBrute
		p	1		target
	m	(Lbxf;Lbgy;)Lbgy;	a	makeBrain
		p	0		piglinBrute
		p	1		brain
	m	(Lbxf;Lbzx;)V	a	lambda$playActivitySound$3
		p	1		activity
	m	()Lbjl;	b	createIdleMovementBehaviors
	m	(Lbxb;Lbfx;)Z	b	lambda$getTargetIfWithinRange$2
		p	1		target
	m	(Lbxf;)V	b	updateActivity
		p	0		piglinBrute
	m	(Lbxf;Lbfx;)V	b	setAngerTarget
		p	0		piglinBrute
		p	1		target
	m	(Lbxf;Lbgy;)V	b	initCoreActivity
		p	0		piglinBrute
		p	1		brain
	m	(Lbxf;)V	c	maybePlayActivitySound
		p	0		piglinBrute
	m	(Lbxf;Lbfx;)Z	c	lambda$initFightActivity$0
		p	1		entity
	m	(Lbxf;Lbgy;)V	c	initIdleActivity
		p	0		piglinBrute
		p	1		brain
	m	(Lbxf;)V	d	playActivitySound
		p	0		piglinBrute
	m	(Lbxf;Lbgy;)V	d	initFightActivity
		p	0		piglinBrute
		p	1		brain
	f	I	a	ANGER_DURATION
	f	I	b	MELEE_ATTACK_COOLDOWN
	f	D	c	ACTIVITY_SOUND_LIKELIHOOD_PER_TICK
	f	I	d	MAX_LOOK_DIST
	f	I	e	INTERACTION_RANGE
	f	D	f	TARGETING_RANGE
	f	F	g	SPEED_MULTIPLIER_WHEN_IDLING
	f	I	h	HOME_CLOSE_ENOUGH_DISTANCE
	f	I	i	HOME_TOO_FAR_DISTANCE
	f	I	j	HOME_STROLL_AROUND_DISTANCE
c	bxh	net/minecraft/world/entity/monster/piglin/RememberIfHoglinWasKilled
	m	()Lbhq;	a	create
	m	(Lblb$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
		p	0		context
	m	(Lblb$b;Lblc;Lblc;)Lble;	a	lambda$create$1
		p	1		attackTarget
		p	2		huntedRecently
	m	(Lblb$b;Lblc;Lblc;Laip;Lbfx;J)Z	a	lambda$create$0
		p	3		world
		p	4		entity
		p	5		time
c	bxi	net/minecraft/world/entity/monster/piglin/StartAdmiringItemIfSeen
	m	(I)Lbhq;	a	create
		p	0		duration
	m	(ILblb$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
		p	1		context
	m	(Lblb$b;ILblc;Lblc;Lblc;Lblc;)Lble;	a	lambda$create$1
		p	2		nearestVisibleWantedItem
		p	3		admiringItem
		p	4		admiringDisabled
		p	5		disableWalkToAdmireItem
	m	(Lblb$b;Lblc;Lblc;ILaip;Lbfx;J)Z	a	lambda$create$0
		p	4		world
		p	5		entity
		p	6		time
c	bxj	net/minecraft/world/entity/monster/piglin/StartHuntingHoglin
	m	()Lbiz;	a	create
	m	(Lblb$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$4
		p	0		context
	m	(Lblb$b;Lblc;Lblc;Laip;Lbxc;J)Z	a	lambda$create$2
		p	3		world
		p	4		entity
		p	5		time
	m	(Lblb$b;Lblc;Lblc;Lblc;Lblc;)Lble;	a	lambda$create$3
		p	1		nearestVisibleHuntableHoglin
		p	2		angryAt
		p	3		huntedRecently
		p	4		nearestVisibleAdultPiglins
	m	(Lbxb;)Z	a	hasHuntedRecently
		p	0		piglin
	m	(Ljava/util/List;)V	a	lambda$create$1
		p	0		piglin
	m	(Ljava/util/List;)Ljava/lang/Boolean;	b	lambda$create$0
		p	0		piglin
c	bxk	net/minecraft/world/entity/monster/piglin/StopAdmiringIfItemTooFarAway
	m	(I)Lbhq;	a	create
		p	0		range
	m	(ILblb$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
		p	1		context
	m	(Lblb$b;ILblc;Lblc;)Lble;	a	lambda$create$1
		p	2		admiringItem
		p	3		nearestVisibleWantedItem
	m	(Lblb$b;Lblc;ILblc;Laip;Lbfx;J)Z	a	lambda$create$0
		p	4		world
		p	5		entity
		p	6		time
c	bxl	net/minecraft/world/entity/monster/piglin/StopAdmiringIfTiredOfTryingToReachItem
	m	(II)Lbhq;	a	create
		p	0		cooldown
		p	1		timeLimit
	m	(IILblb$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
		p	2		context
	m	(Lblb$b;IILblc;Lblc;Lblc;Lblc;)Lble;	a	lambda$create$1
		p	3		admiringItem
		p	4		nearestVisibleWantedItem
		p	5		timeTryingToReachAdmireItem
		p	6		disableWalkToAdmireItem
	m	(Lblb$b;Lblc;ILblc;Lblc;ILaip;Lbfx;J)Z	a	lambda$create$0
		p	6		world
		p	7		entity
		p	8		time
c	bxm	net/minecraft/world/entity/monster/piglin/StopHoldingItemIfNoLongerAdmiring
	m	()Lbhq;	a	create
	m	(Laip;Lbxc;J)Z	a	lambda$create$0
		p	0		world
		p	1		entity
		p	2		time
	m	(Lblb$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
		p	0		context
	m	(Lblc;)Lble;	a	lambda$create$1
		p	0		admiringItem
c	bxn	net/minecraft/world/entity/monster/piglin/package-info
c	bxo	net/minecraft/world/entity/monster/warden/AngerLevel
	m	(Ljava/lang/String;IILamq;Lamq;)V	<init>	<init>
		p	3		threshold
		p	4		sound
		p	5		listeningSound
	m	()I	a	getMinimumAnger
	m	(I)Lbxo;	a	byAnger
		p	0		anger
	m	(Lbxo;Lbxo;)I	a	lambda$static$0
		p	0		a
		p	1		b
	m	([Lbxo;)V	a	lambda$static$1
		p	0		values
	m	()Lamq;	b	getAmbientSound
	m	()Lamq;	c	getListeningSound
	m	()Z	d	isAngry
	m	()[Lbxo;	e	$values
	f	Lbxo;	a	CALM
	f	Lbxo;	b	AGITATED
	f	Lbxo;	c	ANGRY
	f	[Lbxo;	d	SORTED_LEVELS
	f	I	e	minimumAnger
	f	Lamq;	f	ambientSound
	f	Lamq;	g	listeningSound
	f	[Lbxo;	h	$VALUES
c	bxp	net/minecraft/world/entity/monster/warden/AngerManagement
	m	(Ljava/util/function/Predicate;Ljava/util/List;)V	<init>	<init>
		p	1		suspectPredicate
		p	2		suspectUuidsToAngerLevel
	m	()Ljava/util/Optional;	a	getActiveEntity
	m	(ILbfh;Ljava/lang/Integer;)Ljava/lang/Integer;	a	lambda$increaseAnger$6
		p	1		suspect
		p	2		anger
	m	(Laip;)V	a	convertFromUuids
		p	1		world
	m	(Laip;Ljava/util/function/Predicate;)V	a	tick
		p	1		world
		p	2		suspectPredicate
	m	(Lbfh;)V	a	clearAnger
		p	1		entity
	m	(Lbfh;I)I	a	increaseAnger
		p	1		entity
		p	2		amount
	m	(Lcom/mojang/datafixers/util/Pair;)V	a	lambda$new$3
		p	1		suspect
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntMap$Entry;)Lcom/mojang/datafixers/util/Pair;	a	lambda$createUuidAngerPairs$5
		p	0		suspect
	m	(Ljava/util/function/Predicate;)Lcom/mojang/serialization/Codec;	a	codec
		p	0		suspectPredicate
	m	(Ljava/util/function/Predicate;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$codec$2
		p	1		instance
	m	(Ljava/util/function/Predicate;Ljava/util/List;)Lbxp;	a	lambda$codec$1
		p	1		suspectUuidsToAngerLevel
	m	()Ljava/util/List;	b	createUuidAngerPairs
	m	(Lbfh;)I	b	getActiveAnger
		p	1		entity
	m	()V	c	sortAndUpdateHighestAnger
	m	(Lbfh;)Lbfx;	c	lambda$getActiveEntity$8
		p	0		suspect
	m	()Lbfh;	d	getTopSuspect
	m	(Lbfh;)Z	d	lambda$getActiveEntity$7
		p	0		suspect
	m	(Lbfh;)Lcom/mojang/datafixers/util/Pair;	e	lambda$createUuidAngerPairs$4
		p	1		suspect
	f	I	a	CONVERSION_DELAY
	f	I	b	MAX_ANGER
	f	Ljava/util/ArrayList;	c	suspects
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	d	angerBySuspect
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	e	angerByUuid
	f	I	f	DEFAULT_ANGER_DECREASE
	f	I	g	conversionDelay
	f	I	h	highestAnger
	f	Lcom/mojang/serialization/Codec;	i	SUSPECT_ANGER_PAIR
	f	Ljava/util/function/Predicate;	j	filter
	f	Lbxp$a;	k	suspectSorter
c	bxp$1	net/minecraft/world/entity/monster/warden/AngerManagement$1
	f	[I	a	$SwitchMap$net$minecraft$world$entity$Entity$RemovalReason
c	bxp$a	net/minecraft/world/entity/monster/warden/AngerManagement$Sorter
	m	()Lbxp;	a	angerManagement
	m	(Lbfh;Lbfh;)I	a	compare
	f	Lbxp;	a	angerManagement
c	bxq	net/minecraft/world/entity/monster/warden/Warden
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lbfh;)V	A	doPush
		p	1		entity
	m	(F)F	C	getTendrilAnimation
		p	1		tickDelta
	m	(F)F	D	getHeartAnimation
		p	1		tickDelta
	m	()Lbfx;	P_	getTarget
	m	()Lvb;	S	getAddEntityPacket
	m	()V	T	sendDebugPackets
	m	()V	U	customServerAiStep
	m	()Lanv;	a	getListenableEvents
	m	(Lacl;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Laip;Ldgc;Lgt;Ldga;Lbfh;Lbfh;F)V	a	onSignalReceive
		p	1		world
		p	2		listener
		p	3		pos
		p	4		event
		p	5		entity
		p	6		sourceEntity
		p	7		distance
	m	(Laip;Ldgc;Lgt;Ldga;Ldga$a;)Z	a	shouldListen
		p	1		world
		p	2		listener
		p	3		pos
		p	4		event
		p	5		emitter
	m	(Laip;Lede;Lbfh;I)V	a	applyDarknessAround
		p	0		world
		p	1		pos
		p	2		entity
		p	3		range
	m	(Lbem;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbfd;)V	a	clientDiggingParticles
		p	1		animationState
	m	(Lbfh;)Z	a	canTargetEntity
		p	1		entity
	m	(Lbfh;IZ)V	a	increaseAngerAt
		p	1		entity
		p	2		amount
		p	3		listening
	m	(Lbgj;)Lbfi;	a	getDimensions
		p	1		pose
	m	(Lbxp;)V	a	lambda$readAdditionalSaveData$2
		p	1		angerManager
	m	(Lcmi;)Lbph;	a	createNavigation
		p	1		world
	m	(Lcml;)Z	a	checkSpawnObstruction
		p	1		world
	m	(Lcmx;Lbdw;Lbgb;Lbgr;Lre;)Lbgr;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lcom/mojang/serialization/Dynamic;)Lbgy;	a	makeBrain
		p	1		dynamic
	m	(Ldgi;)V	a	lambda$readAdditionalSaveData$3
	m	(Lgt;Lcml;)F	a	getWalkTargetValue
		p	1		pos
		p	2		world
	m	(Ljava/util/function/BiConsumer;)V	a	updateDynamicGameEventListener
		p	1		callback
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lre;Lrx;)V	a	lambda$addAdditionalSaveData$1
	m	(Lvf;)V	a	recreateFromPacket
		p	1		packet
	m	()F	aH	nextStep
	m	()Z	aR	dampensVibrations
	m	()V	a_	defineSynchedData
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	(Lbem;)Z	b	isInvulnerableTo
		p	1		damageSource
	m	(Lbfh;)V	b	clearAnger
		p	1		entity
	m	(Lgt;Ldbq;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lre;Lrx;)V	b	lambda$addAdditionalSaveData$0
		p	1		angerNbt
	m	()Z	bn	isPushable
	m	(Lbfh;)V	c	increaseAngerAt
		p	1		entity
	m	()Z	cI	ignoreExplosion
	m	(Lbem;)Lamq;	d	getHurtSound
		p	1		source
	m	()Lbgy;	dH	getBrain
	m	()F	eN	getSoundVolume
	m	()Lbxo;	fS	getAngerLevel
	m	()Ljava/util/Optional;	fT	getEntityAngryAt
	m	()Lbxp;	fU	getAngerManagement
	m	()Z	fV	isDiggingOrEmerging
	m	()V	fW	syncClientAngerLevel
	m	()I	fZ	getHeartBeatDelay
	m	()Z	fx	canDisableShield
	m	()V	ga	playListeningSound
	m	()I	gb	getActiveAnger
	m	(D)Z	h	removeWhenFarAway
		p	1		distanceSquared
	m	()V	l	tick
	m	(Lbfh;)Z	l	canRide
		p	1		entity
	m	(Lbfx;)V	m	setAttackTarget
		p	1		target
	m	()Lbhd$a;	q	createAttributes
	m	()I	r	getClientAngerLevel
	m	()Lamq;	s	getAmbientSound
	m	()Z	w	canTriggerAvoidVibration
	m	()Lamq;	x_	getDeathSound
	m	(Lbfh;)Z	z	doHurtTarget
		p	1		target
	f	Lbfd;	b	roarAnimationState
	f	Lbfd;	bS	attackAnimationState
	f	Lbfd;	bT	sonicBoomAnimationState
	f	Lorg/slf4j/Logger;	bU	LOGGER
	f	I	bV	GAME_EVENT_LISTENER_RANGE
	f	I	bW	VIBRATION_COOLDOWN_TICKS
	f	I	bX	TIME_TO_USE_MELEE_UNTIL_SONIC_BOOM
	f	I	bY	MAX_HEALTH
	f	F	bZ	MOVEMENT_SPEED_WHEN_FIGHTING
	f	Lbfd;	c	sniffAnimationState
	f	F	ca	KNOCKBACK_RESISTANCE
	f	F	cb	ATTACK_KNOCKBACK
	f	I	cc	ATTACK_DAMAGE
	f	Lacl;	cd	CLIENT_ANGER_LEVEL
	f	I	ce	DARKNESS_DISPLAY_LIMIT
	f	I	cf	DARKNESS_DURATION
	f	I	cg	DARKNESS_RADIUS
	f	I	ch	DARKNESS_INTERVAL
	f	I	ci	ANGERMANAGEMENT_TICK_DELAY
	f	I	cj	DEFAULT_ANGER
	f	I	ck	PROJECTILE_ANGER
	f	I	cl	ON_HURT_ANGER_BOOST
	f	I	cm	RECENT_PROJECTILE_TICK_THRESHOLD
	f	I	cn	TOUCH_COOLDOWN_TICKS
	f	I	co	DIGGING_PARTICLES_AMOUNT
	f	F	cp	DIGGING_PARTICLES_DURATION
	f	F	cq	DIGGING_PARTICLES_OFFSET
	f	I	cr	PROJECTILE_ANGER_DISTANCE
	f	I	cs	tendrilAnimation
	f	I	ct	tendrilAnimationO
	f	I	cu	heartAnimation
	f	I	cv	heartAnimationO
	f	Ldfx;	cw	dynamicGameEventListener
	f	Lbxp;	cx	angerManagement
	f	Lbfd;	d	emergeAnimationState
	f	Lbfd;	e	diggingAnimationState
c	bxq$1	net/minecraft/world/entity/monster/warden/Warden$1
	m	(Lbxq;Lbfz;Lcmi;)V	<init>	<init>
		p	2		entity
		p	3		world
	m	(I)Ldxb;	a	createPathFinder
		p	1		range
	f	Lbxq;	p	this$0
c	bxq$1$1	net/minecraft/world/entity/monster/warden/Warden$1$1
	m	(Lbxq$1;Ldwy;I)V	<init>	<init>
		p	2		pathNodeMaker
		p	3		range
	m	(Ldwx;Ldwx;)F	a	distance
		p	1		a
		p	2		b
	f	Lbxq$1;	a	this$1
c	bxq$2	net/minecraft/world/entity/monster/warden/Warden$2
	f	[I	a	$SwitchMap$net$minecraft$world$entity$Pose
c	bxr	net/minecraft/world/entity/monster/warden/WardenAi
	m	(Lbfx;)V	a	setDigCooldown
		p	0		warden
	m	(Lbfx;Lbfx;)Z	a	lambda$isTarget$5
		p	1		entity
	m	(Lbgy;)V	a	initCoreActivity
		p	0		brain
	m	(Lblb$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		context
	m	(Lblb$b;Lblc;)Lble;	a	lambda$static$1
		p	1		digCooldown
	m	(Lblb$b;Lblc;Laip;Lbxq;J)Z	a	lambda$static$0
		p	2		world
		p	3		entity
		p	4		time
	m	(Lbxq;)V	a	updateActivity
		p	0		warden
	m	(Lbxq;Lbfx;)Z	a	isTarget
		p	0		warden
		p	1		entity
	m	(Lbxq;Lbgy;)V	a	initFightActivity
		p	0		warden
		p	1		brain
	m	(Lbxq;Lcom/mojang/serialization/Dynamic;)Lbgy;	a	makeBrain
		p	0		warden
		p	1		dynamic
	m	(Lbxq;Lgt;)V	a	setDisturbanceLocation
		p	0		warden
		p	1		pos
	m	(Lbgy;)V	b	initEmergeActivity
		p	0		brain
	m	(Lbxq;Lbfx;)V	b	onTargetInvalid
		p	0		warden
		p	1		suspect
	m	(Lbgy;)V	c	initDiggingActivity
		p	0		brain
	m	(Lbxq;Lbfx;)Z	c	lambda$initFightActivity$4
		p	1		entity
	m	(Lbgy;)V	d	initIdleActivity
		p	0		brain
	m	(Lbxq;Lbfx;)Z	d	lambda$initFightActivity$3
		p	1		entity
	m	(Lbgy;)V	e	initInvestigateActivity
		p	0		brain
	m	(Lbgy;)V	f	initSniffingActivity
		p	0		brain
	m	(Lbgy;)V	g	initRoarActivity
		p	0		brain
	f	I	a	EMERGE_DURATION
	f	I	b	ROAR_DURATION
	f	I	c	DIGGING_COOLDOWN
	f	F	d	SPEED_MULTIPLIER_WHEN_IDLING
	f	F	e	SPEED_MULTIPLIER_WHEN_INVESTIGATING
	f	F	f	SPEED_MULTIPLIER_WHEN_FIGHTING
	f	I	g	MELEE_ATTACK_COOLDOWN
	f	I	h	DIGGING_DURATION
	f	I	i	SNIFFING_DURATION
	f	I	j	DISTURBANCE_LOCATION_EXPIRY_TIME
	f	Ljava/util/List;	k	SENSOR_TYPES
	f	Ljava/util/List;	l	MEMORY_TYPES
	f	Lbhq;	m	DIG_COOLDOWN_SETTER
c	bxs	net/minecraft/world/entity/monster/warden/WardenSpawnTracker
	m	(III)V	<init>	<init>
		p	1		ticksSinceLastWarning
		p	2		warningLevel
		p	3		cooldownTicks
	m	()V	a	tick
	m	(I)V	a	setWarningLevel
		p	1		warningLevel
	m	(Laip;Lgt;)Z	a	hasNearbyWarden
		p	0		world
		p	1		pos
	m	(Laip;Lgt;Laiq;)Ljava/util/OptionalInt;	a	tryWarn
		p	0		world
		p	1		pos
		p	2		player
	m	(Laiq;)Ljava/util/stream/Stream;	a	lambda$tryWarn$5
		p	0		player
	m	(Lbxs;)V	a	copyData
		p	1		other
	m	(Lbxs;Laiq;)V	a	lambda$tryWarn$7
		p	1		nearbyPlayer
	m	(Lbxs;Lbxs;)V	a	lambda$tryWarn$6
		p	1		warningManager
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	(Lede;Laiq;)Z	a	lambda$getNearbyPlayers$8
		p	1		player
	m	()V	b	reset
	m	(Laip;Lgt;)Ljava/util/List;	b	getNearbyPlayers
		p	0		world
		p	1		pos
	m	(Laiq;)Z	b	lambda$tryWarn$4
		p	0		nearbyPlayer
	m	(Lbxs;)Ljava/lang/Integer;	b	lambda$static$2
		p	0		manager
	m	()I	c	getWarningLevel
	m	(Lbxs;)Ljava/lang/Integer;	c	lambda$static$1
		p	0		manager
	m	()Z	d	onCooldown
	m	(Lbxs;)Ljava/lang/Integer;	d	lambda$static$0
		p	0		manager
	m	()V	e	increaseWarningLevel
	m	()V	f	decreaseWarningLevel
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	MAX_WARNING_LEVEL
	f	D	c	PLAYER_SEARCH_RADIUS
	f	I	d	WARNING_CHECK_DIAMETER
	f	I	e	DECREASE_WARNING_LEVEL_EVERY_INTERVAL
	f	I	f	WARNING_LEVEL_INCREASE_COOLDOWN
	f	I	g	ticksSinceLastWarning
	f	I	h	warningLevel
	f	I	i	cooldownTicks
c	bxt	net/minecraft/world/entity/monster/warden/package-info
c	bxu	net/minecraft/world/entity/npc/AbstractVillager
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lbem;)V	a	die
		p	1		damageSource
	m	(Lbym;)Z	a	canBeLeashed
		p	1		player
	m	(Lclg;)V	a	notifyTrade
		p	1		offer
	m	(Lclh;)V	a	overrideOffers
		p	1		offers
	m	(Lclh;[Lbyd$f;I)V	a	addOffersFromItemListings
		p	1		recipeList
		p	2		pool
		p	3		count
	m	(Lcmx;Lbdw;Lbgb;Lbgr;Lre;)Lbgr;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lis;)V	a	addParticlesAroundSelf
		p	1		parameters
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(I)Lbgq;	a_	getSlot
		p	1		mappedIndex
	m	(Laip;)Lbfh;	b	changeDimension
		p	1		destination
	m	(Lbgj;Lbfi;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lclg;)V	b	rewardTradeXp
		p	1		offer
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lbym;)V	e	setTradingPlayer
		p	1		customer
	m	()Lbym;	fS	getTradingPlayer
	m	()Z	fT	isTrading
	m	()Lclh;	fU	getOffers
	m	()Z	fV	showProgressBar
	m	()Lamq;	fW	getNotifyTradeSound
	m	()V	fX	playCelebrateSound
	m	()V	fY	stopTrading
	m	()V	fZ	updateTrades
	m	()Z	ga	isClientSide
	m	(Lcfv;)V	l	notifyTradeUpdated
		p	1		stack
	m	()I	q	getUnhappyCounter
	m	()I	r	getVillagerXp
	m	(I)V	r	setUnhappyCounter
		p	1		ticks
	m	(I)V	s	overrideXp
		p	1		experience
	m	(F)Lede;	u	getRopeHoldPosition
		p	1		delta
	m	()Lbed;	w	getInventory
	m	(Z)Lamq;	w	getTradeUpdatedSound
		p	1		sold
	f	I	bS	VILLAGER_SLOT_OFFSET
	f	Lclh;	bT	offers
	f	Lacl;	bU	DATA_UNHAPPY_COUNTER
	f	I	bV	VILLAGER_INVENTORY_SIZE
	f	Lbym;	bW	tradingPlayer
	f	Lbed;	bX	inventory
c	bxv	net/minecraft/world/entity/npc/CatSpawner
	m	(Laip;Lgt;)I	a	spawnInVillage
		p	1		world
		p	2		pos
	m	(Laip;ZZ)I	a	tick
		p	1		world
		p	2		spawnMonsters
		p	3		spawnAnimals
	m	(Lgt;Laip;)I	a	spawnCat
		p	1		pos
		p	2		world
	m	(Lhd;)Z	a	lambda$spawnInVillage$0
		p	0		entry
	m	(Laip;Lgt;)I	b	spawnInHut
		p	1		world
		p	2		pos
	f	I	a	TICK_DELAY
	f	I	b	nextTick
c	bxw	net/minecraft/world/entity/npc/ClientSideMerchant
	m	(Lbym;)V	<init>	<init>
		p	1		player
	m	(Lclg;)V	a	notifyTrade
		p	1		offer
	m	(Lclh;)V	a	overrideOffers
		p	1		offers
	m	(Lbym;)V	e	setTradingPlayer
		p	1		customer
	m	()Lbym;	fS	getTradingPlayer
	m	()Lclh;	fU	getOffers
	m	()Z	fV	showProgressBar
	m	()Lamq;	fW	getNotifyTradeSound
	m	()Z	ga	isClientSide
	m	(Lcfv;)V	l	notifyTradeUpdated
		p	1		stack
	m	()I	r	getVillagerXp
	m	(I)V	s	overrideXp
		p	1		experience
	f	Lbym;	a	source
	f	Lclh;	b	offers
	f	I	c	xp
c	bxx	net/minecraft/world/entity/npc/InventoryCarrier
	m	(Lbfz;Lbxx;Lbvf;)V	a	pickUpItem
		p	0		entity
		p	1		inventoryOwner
		p	2		item
	m	(Lre;)V	a_	writeInventoryToTag
		p	1		nbt
	m	(Lre;)V	c	readInventoryFromTag
		p	1		nbt
	m	()Lbed;	w	getInventory
	f	Ljava/lang/String;	c_	TAG_INVENTORY
c	bxy	net/minecraft/world/entity/npc/Npc
c	bxz	net/minecraft/world/entity/npc/Villager
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		entityType
		p	2		world
	m	(Lbfl;Lcmi;Lbye;)V	<init>	<init>
		p	1		entityType
		p	2		world
		p	3		type
	m	()Z	O_	canBreed
	m	()V	T	sendDebugPackets
	m	()V	U	customServerAiStep
	m	(J)Z	a	wantsToSpawnGolem
		p	1		time
	m	(JLbxz;)Z	a	lambda$spawnGolemIfNeeded$9
		p	2		villager
	m	(Laip;JI)V	a	spawnGolemIfNeeded
		p	1		world
		p	2		time
		p	4		requiredCount
	m	(Laip;Lbfc;)Lbfc;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Laip;Lbfh;Lbfx;)V	a	lambda$tellWitnessesThatIWasMurdered$5
		p	2		observer
	m	(Laip;Lbfw;)V	a	thunderHit
		p	1		world
		p	2		lightning
	m	(Laip;Lbxz;J)V	a	gossip
		p	1		world
		p	2		villager
		p	3		time
	m	(Lbed;Ljava/util/Map$Entry;)I	a	lambda$countFoodPointsInInventory$8
		p	1		item
	m	(Lbem;)V	a	die
		p	1		damageSource
	m	(Lbfh;)V	a	tellWitnessesThatIWasMurdered
		p	1		killer
	m	(Lbfx;)V	a	setLastHurtByMob
		p	1		attacker
	m	(Lbgy;)V	a	registerBrainGoals
		p	1		brain
	m	(Lbow;)Z	a	lambda$getPlayerReputation$7
		p	0		gossipType
	m	(Lboz;)V	a	releasePoi
		p	1		pos
	m	(Lbqu;Lbfh;)V	a	onReputationEventFrom
		p	1		interaction
		p	2		entity
	m	(Lbxz;Lhd;)Z	a	lambda$static$3
		p	0		villager
	m	(Lbya;)V	a	setVillagerData
		p	1		villagerData
	m	(Lcmx;Lbdw;Lbgb;Lbgr;Lre;)Lbgr;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lcom/mojang/serialization/Dynamic;)Lbgy;	a	makeBrain
		p	1		dynamic
	m	(Lnet/minecraft/server/MinecraftServer;Lboz;Lhc;)V	a	lambda$releasePoi$6
		p	3		pos
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lre;Lrx;)V	a	lambda$addAdditionalSaveData$4
	m	(Lrx;)V	a	setGossips
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	(J)Z	b	golemSpawnConditionsMet
		p	1		worldTime
	m	(Laip;Lbfc;)Lbxz;	b	getBreedOffspring
	m	(Lbvf;)V	b	pickUpItem
		p	1		item
	m	(Lbxz;Lhd;)Z	b	lambda$static$2
		p	0		villager
	m	(Lbym;Lbdx;)Lbdy;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lclg;)V	b	rewardTradeXp
		p	1		offer
	m	(Lclh;)V	b	setOffers
		p	1		offers
	m	(Lgt;)V	b	startSleeping
		p	1		pos
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Laip;)V	c	refreshBrain
		p	1		world
	m	(Lbxz;Lhd;)Z	c	lambda$static$1
		p	0		villager
	m	()Ltj;	cj	getTypeName
	m	(Lbem;)Lamq;	d	getHurtSound
		p	1		source
	m	(Lbxz;Lhd;)Z	d	lambda$static$0
		p	0		villager
	m	()Lbgy;	dH	getBrain
	m	()Lbgy$b;	dI	brainProvider
	m	(Lbym;)V	e	setTradingPlayer
		p	1		customer
	m	(Lbym;)I	f	getPlayerReputation
		p	1		player
	m	()V	fY	stopTrading
	m	()V	fZ	updateTrades
	m	()V	fv	stopSleeping
	m	(Lbym;)V	g	startTrading
		p	1		customer
	m	()I	gA	countFoodPointsInInventory
	m	()V	gB	maybeDecayGossip
	m	()V	gC	resetNumberOfRestocks
	m	()Z	ga	isClientSide
	m	()Lbhd$a;	gb	createAttributes
	m	()Z	gc	assignProfessionWhenSpawned
	m	()Lbya;	gd	getVillagerData
	m	()Z	ge	canRestock
	m	()V	gf	restock
	m	()Z	gg	shouldRestock
	m	()V	gh	playWorkSound
	m	()Z	gi	isChasing
	m	()V	gj	eatAndDigestFood
	m	()Z	gk	hasExcessFood
	m	()Z	gl	wantsMoreFood
	m	()Z	gm	hasFarmSeeds
	m	()Lbov;	gn	getGossips
	m	()V	go	setUnhappy
	m	()V	gp	resetSpecialPrices
	m	()V	gq	resendOffersToTradingPlayer
	m	()Z	gr	needsToRestock
	m	()Z	gs	allowedToRestock
	m	()V	gt	catchUpDemand
	m	()V	gu	updateDemand
	m	()V	gv	releaseAllPois
	m	()Z	gw	hungry
	m	()V	gx	eatUntilFull
	m	()Z	gy	shouldIncreaseLevel
	m	()V	gz	increaseMerchantCareer
	m	(D)Z	h	removeWhenFarAway
		p	1		distanceSquared
	m	(Lbym;)V	h	updateSpecialPrices
		p	1		player
	m	(Lcfv;)Z	k	wantsToPickUp
		p	1		stack
	m	()V	l	tick
	m	()V	m	ageBoundaryReached
	m	()I	r	getVillagerXp
	m	()Lamq;	s	getAmbientSound
	m	(I)V	t	setVillagerXp
		p	1		experience
	m	(I)V	u	digestFood
		p	1		amount
	m	(Z)V	x	setChasing
	m	()Lamq;	x_	getDeathSound
	f	I	bU	BREEDING_FOOD_THRESHOLD
	f	Ljava/util/Map;	bV	FOOD_POINTS
	f	F	bW	SPEED_MODIFIER
	f	Ljava/util/Map;	bX	POI_MEMORIES
	f	Lorg/slf4j/Logger;	bY	LOGGER
	f	Lacl;	bZ	DATA_VILLAGER_DATA
	f	I	ca	TRADES_PER_LEVEL
	f	Ljava/util/Set;	cb	WANTED_ITEMS
	f	I	cc	MAX_GOSSIP_TOPICS
	f	I	cd	GOSSIP_COOLDOWN
	f	I	ce	GOSSIP_DECAY_INTERVAL
	f	I	cf	REPUTATION_CHANGE_PER_EVENT
	f	I	cg	HOW_FAR_AWAY_TO_TALK_TO_OTHER_VILLAGERS_ABOUT_GOLEMS
	f	I	ch	HOW_MANY_VILLAGERS_NEED_TO_AGREE_TO_SPAWN_A_GOLEM
	f	J	ci	TIME_SINCE_SLEEPING_FOR_GOLEM_SPAWNING
	f	I	cj	updateMerchantTimer
	f	Z	ck	increaseProfessionLevelOnUpdate
	f	Lbym;	cl	lastTradedPlayer
	f	Z	cm	chasing
	f	I	cn	foodLevel
	f	Lbov;	co	gossips
	f	J	cp	lastGossipTime
	f	J	cq	lastGossipDecayTime
	f	I	cr	villagerXp
	f	J	cs	lastRestockGameTime
	f	I	ct	numberOfRestocksToday
	f	J	cu	lastRestockCheckDayTime
	f	Z	cv	assignProfessionWhenSpawned
	f	Lcom/google/common/collect/ImmutableList;	cw	MEMORY_TYPES
	f	Lcom/google/common/collect/ImmutableList;	cx	SENSOR_TYPES
c	bya	net/minecraft/world/entity/npc/VillagerData
	m	(Lbye;Lbyc;I)V	<init>	<init>
		p	1		type
		p	2		profession
		p	3		level
	m	()Lbye;	a	getType
	m	(I)Lbya;	a	setLevel
		p	1		level
	m	(Lbya;)Ljava/lang/Integer;	a	lambda$static$4
	m	(Lbyc;)Lbya;	a	setProfession
		p	1		profession
	m	(Lbye;)Lbya;	a	setType
		p	1		type
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$5
		p	0		instance
	m	()Lbyc;	b	getProfession
	m	(I)I	b	getMinXpPerLevel
		p	0		level
	m	(Lbya;)Lbyc;	b	lambda$static$3
	m	()I	c	getLevel
	m	(I)I	c	getMaxXpPerLevel
		p	0		level
	m	(Lbya;)Lbye;	c	lambda$static$1
	m	()Lbyc;	d	lambda$static$2
	m	(I)Z	d	canLevelUp
		p	0		level
	m	()Lbye;	e	lambda$static$0
	f	I	a	MIN_VILLAGER_LEVEL
	f	I	b	MAX_VILLAGER_LEVEL
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	[I	d	NEXT_LEVEL_XP_THRESHOLDS
	f	Lbye;	e	type
	f	Lbyc;	f	profession
	f	I	g	level
c	byb	net/minecraft/world/entity/npc/VillagerDataHolder
	m	()Lbye;	a	getVariant
	m	(Lbya;)V	a	setVillagerData
		p	1		villagerData
	m	(Lbye;)V	a	setVariant
		p	1		variant
	m	(Ljava/lang/Object;)V	a	setVariant
		p	1		variant
	m	()Ljava/lang/Object;	c	getVariant
	m	()Lbya;	gd	getVillagerData
c	byc	net/minecraft/world/entity/npc/VillagerProfession
	m	(Ljava/lang/String;Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lcom/google/common/collect/ImmutableSet;Lcom/google/common/collect/ImmutableSet;Lamq;)V	<init>	<init>
		p	1		id
	m	()Ljava/lang/String;	a	name
	m	(Ladc;Lhd;)Z	a	lambda$register$4
		p	1		entry
	m	(Lhd;)Z	a	lambda$static$0
		p	0		poiType
	m	(Ljava/lang/String;Ladc;Lamq;)Lbyc;	a	register
		p	0		id
		p	1		heldWorkstation
		p	2		workSound
	m	(Ljava/lang/String;Ladc;Lcom/google/common/collect/ImmutableSet;Lcom/google/common/collect/ImmutableSet;Lamq;)Lbyc;	a	register
		p	0		id
		p	1		heldWorkstation
		p	2		gatherableItems
		p	3		secondaryJobSites
		p	4		workSound
	m	(Ljava/lang/String;Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lamq;)Lbyc;	a	register
		p	0		id
		p	1		heldWorkstation
		p	2		acquirableWorkstation
		p	3		workSound
	m	(Ljava/lang/String;Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lcom/google/common/collect/ImmutableSet;Lcom/google/common/collect/ImmutableSet;Lamq;)Lbyc;	a	register
		p	0		id
		p	1		heldWorkstation
		p	2		acquirableWorkstation
		p	3		gatherableItems
		p	4		secondaryJobSites
		p	5		workSound
	m	()Ljava/util/function/Predicate;	b	heldJobSite
	m	(Ladc;Lhd;)Z	b	lambda$register$3
		p	1		entry
	m	()Ljava/util/function/Predicate;	c	acquirableJobSite
	m	(Ladc;Lhd;)Z	c	lambda$register$2
		p	1		entry
	m	()Lcom/google/common/collect/ImmutableSet;	d	requestedItems
	m	(Ladc;Lhd;)Z	d	lambda$register$1
		p	1		entry
	m	()Lcom/google/common/collect/ImmutableSet;	e	secondaryPoi
	m	()Lamq;	f	workSound
	f	Ljava/util/function/Predicate;	a	ALL_ACQUIRABLE_JOBS
	f	Lbyc;	b	NONE
	f	Lbyc;	c	ARMORER
	f	Lbyc;	d	BUTCHER
	f	Lbyc;	e	CARTOGRAPHER
	f	Lbyc;	f	CLERIC
	f	Lbyc;	g	FARMER
	f	Lbyc;	h	FISHERMAN
	f	Lbyc;	i	FLETCHER
	f	Lbyc;	j	LEATHERWORKER
	f	Lbyc;	k	LIBRARIAN
	f	Lbyc;	l	MASON
	f	Lbyc;	m	NITWIT
	f	Lbyc;	n	SHEPHERD
	f	Lbyc;	o	TOOLSMITH
	f	Lbyc;	p	WEAPONSMITH
	f	Ljava/lang/String;	q	name
	f	Ljava/util/function/Predicate;	r	heldJobSite
	f	Ljava/util/function/Predicate;	s	acquirableJobSite
	f	Lcom/google/common/collect/ImmutableSet;	t	requestedItems
	f	Lcom/google/common/collect/ImmutableSet;	u	secondaryPoi
	f	Lamq;	v	workSound
c	byd	net/minecraft/world/entity/npc/VillagerTrades
	m	(Lcom/google/common/collect/ImmutableMap;)Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	a	toIntMap
		p	0		map
	m	(Ljava/util/HashMap;)V	a	lambda$static$0
		p	0		map
	f	Ljava/util/Map;	a	TRADES
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	b	WANDERING_TRADER_TRADES
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	c	WANDERING_TRADER_TRADES_1_20
	f	I	d	DEFAULT_SUPPLY
	f	I	e	COMMON_ITEMS_SUPPLY
	f	I	f	UNCOMMON_ITEMS_SUPPLY
	f	I	g	XP_LEVEL_1_SELL
	f	I	h	XP_LEVEL_1_BUY
	f	I	i	XP_LEVEL_2_SELL
	f	I	j	XP_LEVEL_2_BUY
	f	I	k	XP_LEVEL_3_SELL
	f	I	l	XP_LEVEL_3_BUY
	f	I	m	XP_LEVEL_4_SELL
	f	I	n	XP_LEVEL_4_BUY
	f	I	o	XP_LEVEL_5_TRADE
	f	F	p	LOW_TIER_PRICE_MULTIPLIER
	f	F	q	HIGH_TIER_PRICE_MULTIPLIER
c	byd$a	net/minecraft/world/entity/npc/VillagerTrades$DyedArmorForEmeralds
	m	(Lcfq;I)V	<init>	<init>
		p	1		item
		p	2		price
	m	(Lcfq;III)V	<init>	<init>
		p	1		item
		p	2		price
		p	3		maxUses
		p	4		experience
	m	(Lapo;)Lcem;	a	getRandomDye
		p	0		random
	m	(Lbfh;Lapo;)Lclg;	a	getOffer
		p	1		entity
		p	2		random
	f	Lcfq;	a	item
	f	I	b	value
	f	I	c	maxUses
	f	I	d	villagerXp
c	byd$b	net/minecraft/world/entity/npc/VillagerTrades$EmeraldForItems
	m	(Lcmh;III)V	<init>	<init>
		p	1		item
		p	2		price
		p	3		maxUses
		p	4		experience
	m	(Lbfh;Lapo;)Lclg;	a	getOffer
		p	1		entity
		p	2		random
	f	Lcfq;	a	item
	f	I	b	cost
	f	I	c	maxUses
	f	I	d	villagerXp
	f	F	e	priceMultiplier
c	byd$c	net/minecraft/world/entity/npc/VillagerTrades$EmeraldsForVillagerTypeItem
	m	(IIILjava/util/Map;)V	<init>	<init>
		p	1		count
		p	2		maxUses
		p	3		experience
		p	4		map
	m	(Lbfh;Lapo;)Lclg;	a	getOffer
		p	1		entity
		p	2		random
	m	(Lbye;)V	a	lambda$new$1
		p	0		villagerType
	m	(Ljava/util/Map;Lbye;)Z	a	lambda$new$0
		p	1		villagerType
	f	Ljava/util/Map;	a	trades
	f	I	b	cost
	f	I	c	maxUses
	f	I	d	villagerXp
c	byd$d	net/minecraft/world/entity/npc/VillagerTrades$EnchantBookForEmeralds
	m	(I)V	<init>	<init>
		p	1		experience
	m	(Lbfh;Lapo;)Lclg;	a	getOffer
		p	1		entity
		p	2		random
	f	I	a	villagerXp
c	byd$e	net/minecraft/world/entity/npc/VillagerTrades$EnchantedItemForEmeralds
	m	(Lcfq;III)V	<init>	<init>
		p	1		item
		p	2		basePrice
		p	3		maxUses
		p	4		experience
	m	(Lcfq;IIIF)V	<init>	<init>
		p	1		item
		p	2		basePrice
		p	3		maxUses
		p	4		experience
		p	5		multiplier
	m	(Lbfh;Lapo;)Lclg;	a	getOffer
		p	1		entity
		p	2		random
	f	Lcfv;	a	itemStack
	f	I	b	baseEmeraldCost
	f	I	c	maxUses
	f	I	d	villagerXp
	f	F	e	priceMultiplier
c	byd$f	net/minecraft/world/entity/npc/VillagerTrades$ItemListing
	m	(Lbfh;Lapo;)Lclg;	a	getOffer
		p	1		entity
		p	2		random
c	byd$g	net/minecraft/world/entity/npc/VillagerTrades$ItemsAndEmeraldsToItems
	m	(Lcmh;IILcfq;III)V	<init>	<init>
		p	1		item
		p	2		secondCount
		p	3		price
		p	4		sellItem
		p	5		sellCount
		p	6		maxUses
		p	7		experience
	m	(Lcmh;ILcfq;III)V	<init>	<init>
		p	1		item
		p	2		secondCount
		p	3		sellItem
		p	4		sellCount
		p	5		maxUses
		p	6		experience
	m	(Lbfh;Lapo;)Lclg;	a	getOffer
		p	1		entity
		p	2		random
	f	Lcfv;	a	fromItem
	f	I	b	fromCount
	f	I	c	emeraldCost
	f	Lcfv;	d	toItem
	f	I	e	toCount
	f	I	f	maxUses
	f	I	g	villagerXp
	f	F	h	priceMultiplier
c	byd$h	net/minecraft/world/entity/npc/VillagerTrades$ItemsForEmeralds
	m	(Lcfq;III)V	<init>	<init>
		p	1		item
		p	2		price
		p	3		count
		p	4		experience
	m	(Lcfq;IIII)V	<init>	<init>
		p	1		item
		p	2		price
		p	3		count
		p	4		maxUses
		p	5		experience
	m	(Lcfv;IIII)V	<init>	<init>
		p	1		stack
		p	2		price
		p	3		count
		p	4		maxUses
		p	5		experience
	m	(Lcfv;IIIIF)V	<init>	<init>
		p	1		stack
		p	2		price
		p	3		count
		p	4		maxUses
		p	5		experience
		p	6		multiplier
	m	(Lcpi;IIII)V	<init>	<init>
		p	1		block
		p	2		price
		p	3		count
		p	4		maxUses
		p	5		experience
	m	(Lbfh;Lapo;)Lclg;	a	getOffer
		p	1		entity
		p	2		random
	f	Lcfv;	a	itemStack
	f	I	b	emeraldCost
	f	I	c	numberOfItems
	f	I	d	maxUses
	f	I	e	villagerXp
	f	F	f	priceMultiplier
c	byd$i	net/minecraft/world/entity/npc/VillagerTrades$SuspiciousStewForEmerald
	m	(Lbew;II)V	<init>	<init>
		p	1		effect
		p	2		duration
		p	3		experience
	m	(Lbfh;Lapo;)Lclg;	a	getOffer
		p	1		entity
		p	2		random
	f	Lbew;	a	effect
	f	I	b	duration
	f	I	c	xp
	f	F	d	priceMultiplier
c	byd$j	net/minecraft/world/entity/npc/VillagerTrades$TippedArrowForItemsAndEmeralds
	m	(Lcfq;ILcfq;IIII)V	<init>	<init>
		p	1		arrow
		p	2		secondCount
		p	3		tippedArrow
		p	4		sellCount
		p	5		price
		p	6		maxUses
		p	7		experience
	m	(Lbfh;Lapo;)Lclg;	a	getOffer
		p	1		entity
		p	2		random
	m	(Lchr;)Z	a	lambda$getOffer$0
		p	0		potion
	f	Lcfv;	a	toItem
	f	I	b	toCount
	f	I	c	emeraldCost
	f	I	d	maxUses
	f	I	e	villagerXp
	f	Lcfq;	f	fromItem
	f	I	g	fromCount
	f	F	h	priceMultiplier
c	byd$k	net/minecraft/world/entity/npc/VillagerTrades$TreasureMapForEmeralds
	m	(ILanv;Ljava/lang/String;Ldxr$a;II)V	<init>	<init>
		p	1		price
		p	2		structure
		p	3		nameKey
		p	4		iconType
		p	5		maxUses
		p	6		experience
	m	(Lbfh;Lapo;)Lclg;	a	getOffer
		p	1		entity
		p	2		random
	f	I	a	emeraldCost
	f	Lanv;	b	destination
	f	Ljava/lang/String;	c	displayName
	f	Ldxr$a;	d	destinationType
	f	I	e	maxUses
	f	I	f	villagerXp
c	bye	net/minecraft/world/entity/npc/VillagerType
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		name
	m	(Lhd;)Lbye;	a	byBiome
		p	0		biomeEntry
	m	(Ljava/lang/String;)Lbye;	a	register
		p	0		id
	m	(Ljava/util/HashMap;)V	a	lambda$static$0
		p	0		map
	f	Lbye;	a	DESERT
	f	Lbye;	b	JUNGLE
	f	Lbye;	c	PLAINS
	f	Lbye;	d	SAVANNA
	f	Lbye;	e	SNOW
	f	Lbye;	f	SWAMP
	f	Lbye;	g	TAIGA
	f	Ljava/lang/String;	h	name
	f	Ljava/util/Map;	i	BY_BIOME
c	byf	net/minecraft/world/entity/npc/WanderingTrader
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Laip;Lbfc;)Lbfc;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lbyf;)Lbph;	a	access$000
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lbyf;)Lbph;	b	access$100
	m	(Lbym;Lbdx;)Lbdy;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lclg;)V	b	rewardTradeXp
		p	1		offer
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()V	b_	aiStep
	m	(Lbyf;)Lbph;	c	access$200
	m	(Lcfv;)Lamq;	c	getDrinkingSound
		p	1		stack
	m	(Lbem;)Lamq;	d	getHurtSound
		p	1		source
	m	(Lbyf;)Lbph;	d	access$300
	m	(Lbyf;)Z	e	lambda$registerGoals$1
		p	1		wanderingTrader
	m	(Lbyf;)Z	f	lambda$registerGoals$0
		p	1		wanderingTrader
	m	()Z	fV	showProgressBar
	m	()Lamq;	fW	getNotifyTradeSound
	m	()V	fZ	updateTrades
	m	(Lgt;)V	g	setWanderTarget
		p	1		wanderTarget
	m	()I	gb	getDespawnDelay
	m	()V	gc	maybeDespawn
	m	()Lgt;	gd	getWanderTarget
	m	(D)Z	h	removeWhenFarAway
		p	1		distanceSquared
	m	()Lamq;	s	getAmbientSound
	m	(I)V	t	setDespawnDelay
		p	1		despawnDelay
	m	(Z)Lamq;	w	getTradeUpdatedSound
		p	1		sold
	m	()V	x	registerGoals
	m	()Lamq;	x_	getDeathSound
	f	I	bU	NUMBER_OF_TRADE_OFFERS
	f	Lgt;	bV	wanderTarget
	f	I	bW	despawnDelay
c	byf$a	net/minecraft/world/entity/npc/WanderingTrader$WanderToPositionGoal
	m	(Lbyf;Lbyf;DD)V	<init>	<init>
		p	2		trader
		p	3		proximityDistance
		p	5		speed
	m	()Z	a	canUse
	m	(Lgt;D)Z	a	isTooFarAway
		p	1		pos
		p	2		proximityDistance
	m	()V	d	stop
	m	()V	e	tick
	f	Lbyf;	a	trader
	f	D	b	stopDistance
	f	D	c	speedModifier
	f	Lbyf;	d	this$0
c	byg	net/minecraft/world/entity/npc/WanderingTraderSpawner
	m	(Ldyj;)V	<init>	<init>
		p	1		properties
	m	(Laip;)Z	a	spawn
		p	1		world
	m	(Laip;Lbyf;I)V	a	tryToSpawnLlamaFor
		p	1		world
		p	2		wanderingTrader
		p	3		range
	m	(Laip;ZZ)I	a	tick
		p	1		world
		p	2		spawnMonsters
		p	3		spawnAnimals
	m	(Lclo;Lgt;)Z	a	hasEnoughSpace
		p	1		world
		p	2		pos
	m	(Lcml;Lgt;I)Lgt;	a	findSpawnPositionNear
		p	1		world
		p	2		pos
		p	3		range
	m	(Lgt;)Z	a	lambda$spawn$1
		p	0		pos
	m	(Lhd;)Z	a	lambda$spawn$0
		p	0		poiType
	f	I	a	DEFAULT_SPAWN_DELAY
	f	I	b	DEFAULT_TICK_DELAY
	f	I	c	MIN_SPAWN_CHANCE
	f	I	d	MAX_SPAWN_CHANCE
	f	I	e	SPAWN_CHANCE_INCREASE
	f	I	f	SPAWN_ONE_IN_X_CHANCE
	f	I	g	NUMBER_OF_SPAWN_ATTEMPTS
	f	Lapo;	h	random
	f	Ldyj;	i	serverLevelData
	f	I	j	tickDelay
	f	I	k	spawnDelay
	f	I	l	spawnChance
c	byh	net/minecraft/world/entity/npc/package-info
c	byi	net/minecraft/world/entity/package-info
c	byj	net/minecraft/world/entity/player/Abilities
	m	()F	a	getFlyingSpeed
	m	(F)V	a	setFlyingSpeed
		p	1		flySpeed
	m	(Lre;)V	a	addSaveData
		p	1		nbt
	m	()F	b	getWalkingSpeed
	m	(F)V	b	setWalkingSpeed
		p	1		walkSpeed
	m	(Lre;)V	b	loadSaveData
		p	1		nbt
	f	Z	a	invulnerable
	f	Z	b	flying
	f	Z	c	mayfly
	f	Z	d	instabuild
	f	Z	e	mayBuild
	f	F	f	flyingSpeed
	f	F	g	walkingSpeed
c	byk	net/minecraft/world/entity/player/ChatVisiblity
	m	(Ljava/lang/String;IILjava/lang/String;)V	<init>	<init>
		p	3		id
		p	4		translationKey
	m	()I	a	getId
	m	(I)Lbyk;	a	byId
		p	0		id
	m	()Ljava/lang/String;	b	getKey
	m	()[Lbyk;	d	$values
	f	Lbyk;	a	FULL
	f	Lbyk;	b	SYSTEM
	f	Lbyk;	c	HIDDEN
	f	Ljava/util/function/IntFunction;	d	BY_ID
	f	I	e	id
	f	Ljava/lang/String;	f	key
	f	[Lbyk;	g	$VALUES
c	byl	net/minecraft/world/entity/player/Inventory
	m	(Lbym;)V	<init>	<init>
		p	1		player
	m	()Ltj;	Z	getName
	m	()V	a	clearContent
	m	(D)V	a	swapPaint
		p	1		scrollAmount
	m	(I)Lcfv;	a	getItem
		p	1		slot
	m	(II)Lcfv;	a	removeItem
		p	1		slot
		p	2		amount
	m	(ILbym;)V	a	lambda$hurtArmor$1
		p	1		player
	m	(ILcfv;)V	a	setItem
		p	1		slot
		p	2		stack
	m	(Lanv;)Z	a	contains
		p	1		tag
	m	(Lbem;F[I)V	a	hurtArmor
		p	1		damageSource
		p	2		amount
		p	3		slots
	m	(Lbyl;)V	a	replaceWith
		p	1		other
	m	(Lbym;)Z	a	stillValid
		p	1		player
	m	(Lbyq;)V	a	fillStackedContents
		p	1		finder
	m	(Lcfv;)V	a	setPickedItem
		p	1		stack
	m	(Lcfv;Lcfv;)Z	a	hasRemainingSpaceForItem
		p	1		existingStack
		p	2		stack
	m	(Lcfv;Z)V	a	placeItemBackInInventory
		p	1		stack
		p	2		notifiesClient
	m	(Ldbq;)F	a	getDestroySpeed
		p	1		block
	m	(Ljava/util/function/Predicate;ILbdr;)I	a	clearOrCountMatchingItems
		p	1		shouldRemove
		p	2		maxCount
		p	3		craftingInventory
	m	(Lrk;)Lrk;	a	save
		p	1		nbtList
	m	(Z)Lcfv;	a	removeFromSelected
		p	1		entireStack
	m	()Z	aa_	isEmpty
	m	()I	b	getContainerSize
	m	(I)Lcfv;	b	removeItemNoUpdate
		p	1		slot
	m	(Lcfv;)I	b	findSlotMatchingItem
		p	1		stack
	m	(Lrk;)V	b	load
		p	1		nbtList
	m	(I)V	c	pickSlot
		p	1		slot
	m	(ILcfv;)Z	c	add
		p	1		slot
		p	2		stack
	m	(Lcfv;)I	c	findSlotMatchingUnusedItem
		p	1		stack
	m	(I)Z	d	isHotbarSlot
		p	0		slot
	m	(ILcfv;)I	d	addResource
		p	1		slot
		p	2		stack
	m	(Lcfv;)I	d	getSlotWithRemainingSpace
		p	1		stack
	m	()V	e	setChanged
	m	(I)Lcfv;	e	getArmor
		p	1		slot
	m	(Lcfv;)Z	e	add
		p	1		stack
	m	()Lcfv;	f	getSelected
	m	(Lcfv;)V	f	placeItemBackInInventory
		p	1		stack
	m	()I	g	getSelectionSize
	m	(Lcfv;)V	g	removeItem
		p	1		stack
	m	()I	h	getFreeSlot
	m	(Lcfv;)Z	h	contains
		p	1		stack
	m	()I	i	getSuitableHotbarSlot
	m	(Lcfv;)I	i	addResource
		p	1		stack
	m	()V	j	tick
	m	(Lcfv;)Ljava/lang/String;	j	lambda$add$0
	m	()V	k	dropAll
	m	()I	l	getTimesChanged
	f	I	c	POP_TIME_DURATION
	f	I	d	INVENTORY_SIZE
	f	I	e	SLOT_OFFHAND
	f	I	f	NOT_FOUND_INDEX
	f	[I	g	ALL_ARMOR_SLOTS
	f	[I	h	HELMET_SLOT_ONLY
	f	Lhm;	i	items
	f	Lhm;	j	armor
	f	Lhm;	k	offhand
	f	I	l	selected
	f	Lbym;	m	player
	f	I	n	SELECTION_SIZE
	f	Ljava/util/List;	o	compartments
	f	I	p	timesChanged
c	bym	net/minecraft/world/entity/player/Player
	m	(Lcmi;Lgt;FLcom/mojang/authlib/GameProfile;)V	<init>	<init>
		p	1		world
		p	2		pos
		p	3		yaw
		p	4		gameProfile
	m	(Lbfh;)V	C	lambda$respawnEntityOnShoulder$5
		p	1		entity
	m	()Z	F_	isSpectator
	m	()Ltj;	G_	getDisplayName
	m	()Z	U	isTextFilteringEnabled
	m	()Ljava/util/Optional;	W	getWardenSpawnTracker
	m	()Ltj;	Z	getName
	m	(FFLbem;)Z	a	causeFallDamage
		p	1		fallDistance
		p	2		damageMultiplier
		p	3		damageSource
	m	(ILclh;IIZZ)V	a	sendMerchantOffers
		p	1		syncId
		p	2		offers
		p	3		levelProgress
		p	4		experience
		p	5		leveled
		p	6		refreshable
	m	(Ladd;)V	a	awardStat
		p	1		stat
	m	(Ladd;I)V	a	awardStat
		p	1		stat
		p	2		amount
	m	(Laip;Lbfx;)Z	a	wasKilled
		p	1		world
		p	2		other
	m	(Laip;Lgt;FZZ)Ljava/util/Optional;	a	findRespawnPositionAndUseSpawnBlock
		p	0		world
		p	1		pos
		p	2		angle
		p	3		forced
		p	4		alive
	m	(Lamq;FF)V	a	playSound
		p	1		sound
		p	2		volume
		p	3		pitch
	m	(Lamq;Lams;FF)V	a	playNotifySound
		p	1		event
		p	2		category
		p	3		volume
		p	4		pitch
	m	(Lamy;)V	a	resetStat
		p	1		stat
	m	(Lamy;I)V	a	awardStat
		p	1		stat
		p	2		amount
	m	(Lbdx;Lbym;)V	a	lambda$hurtCurrentlyUsedShield$4
		p	1		player
	m	(Lbeb;)Ljava/util/OptionalInt;	a	openMenu
		p	1		factory
	m	(Lbem;)V	a	die
		p	1		damageSource
	m	(Lbem;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbfh$c;)V	a	remove
		p	1		reason
	m	(Lbfh;)V	a	crit
		p	1		target
	m	(Lbfh;Lbdx;)Lbdy;	a	interactOn
		p	1		entity
		p	2		hand
	m	(Lbfm;)Z	a	doesEmitEquipEvent
		p	1		slot
	m	(Lbfm;Lcfv;)V	a	setItemSlot
		p	1		slot
		p	2		stack
	m	(Lbfr;)V	a	setMainArm
		p	1		arm
	m	(Lbgj;)Lbfi;	a	getDimensions
		p	1		pose
	m	(Lbti;Lbdr;)V	a	openHorseInventory
		p	1		horse
		p	2		inventory
	m	(Lbym;)Z	a	canHarmPlayer
		p	1		player
	m	(Lbyn;)Z	a	isModelPartShown
		p	1		modelPart
	m	(Lcfv;I)V	a	onEnchantmentPerformed
		p	1		enchantedItem
		p	2		experienceLevels
	m	(Lcfv;Lbdx;)V	a	openItemGui
		p	1		book
		p	2		hand
	m	(Lcfv;Lcfv;Lcbl;)V	a	updateTutorialInventoryAction
		p	1		cursorStack
		p	2		slotStack
		p	3		clickType
	m	(Lcfv;Z)Lbvf;	a	drop
		p	1		stack
		p	2		retainOwnership
	m	(Lcfv;ZZ)Lbvf;	a	drop
		p	1		stack
		p	2		throwRandomly
		p	3		retainOwnership
	m	(Lclj;)V	a	openMinecartCommandBlock
		p	1		commandBlockExecutor
	m	(Lcmi;Lcfv;)Lcfv;	a	eat
		p	1		world
		p	2		stack
	m	(Lcmi;Lgt;Lcmf;)Z	a	blockActionRestricted
		p	1		world
		p	2		pos
		p	3		gameMode
	m	(Lczm;)V	a	openCommandBlock
		p	1		commandBlock
	m	(Ldab;)V	a	openJigsawBlock
		p	1		jigsaw
	m	(Ldak;)V	a	openTextEdit
		p	1		sign
	m	(Ldao;)V	a	openStructureBlock
		p	1		structureBlock
	m	(Ldbq;Lede;)V	a	makeStuckInBlock
		p	1		state
		p	2		multiplier
	m	(Lede;Lbgd;)Lede;	a	maybeBackOffFromEdge
		p	1		movement
		p	2		type
	m	(Lgt;)Lcom/mojang/datafixers/util/Either;	a	startSleepInBed
		p	1		pos
	m	(Lgt;Lgz;Lcfv;)Z	a	mayUseItemAt
		p	1		pos
		p	2		facing
		p	3		stack
	m	(Lhc;)Ljava/util/Optional;	a	lambda$addAdditionalSaveData$2
	m	(Lis;)V	a	addParticlesAroundSelf
		p	1		parameters
	m	(Ljava/lang/String;Luf;)Luf;	a	lambda$decorateDisplayNameComponent$6
		p	2		style
	m	(Ljava/util/Collection;)I	a	awardRecipes
		p	1		recipes
	m	(Ljava/util/Optional;)V	a	setLastDeathLocation
		p	1		lastDeathPos
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lre;Lrx;)V	a	lambda$addAdditionalSaveData$3
	m	(Ltj;Z)V	a	displayClientMessage
		p	1		message
		p	2		overlay
	m	(Ltw;)Ltw;	a	decorateDisplayNameComponent
		p	1		component
	m	(ZZ)V	a	stopSleepInBed
		p	1		skipSleepTimer
		p	2		updateSleepingPlayers
	m	([Ladd;)V	a	awardRecipesByKey
		p	1		ids
	m	()F	aF	getBlockSpeedFactor
	m	()Lamq;	aI	getSwimSound
	m	()Lamq;	aJ	getSwimSplashSound
	m	()Lamq;	aK	getSwimHighSpeedSplashSound
	m	()Lbfh$b;	aQ	getMovementEmission
	m	()V	aY	updateSwimming
	m	()V	a_	defineSynchedData
	m	(I)Lbgq;	a_	getSlot
		p	1		mappedIndex
	m	()I	as	getPortalWaitTime
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	(Lamy;)V	b	awardStat
		p	1		stat
	m	(Lbem;)Z	b	isInvulnerableTo
		p	1		damageSource
	m	(Lbem;F)V	b	hurtArmor
		p	1		source
		p	2		amount
	m	(Lbfh;)V	b	magicCrit
		p	1		target
	m	(Lbfl;)V	b	lambda$playShoulderEntityAmbientSound$1
	m	(Lbgj;Lbfi;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Ldbq;)Z	b	shouldRemoveSoulSpeed
		p	1		landingState
	m	(Ljava/util/Collection;)I	b	resetRecipes
		p	1		recipes
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()I	bG	getDimensionChangingDelay
	m	()Ljava/lang/Iterable;	bH	getHandSlots
	m	()Ljava/lang/Iterable;	bI	getArmorSlots
	m	()Z	bV	isSwimming
	m	()V	b_	aiStep
	m	()V	bb	doWaterSplashEffect
	m	()Z	bl	canBeHitByProjectile
	m	()V	bt	rideTick
	m	()D	bu	getMyRidingOffset
	m	()V	by	removeVehicle
	m	(I)V	c	giveExperienceLevels
		p	1		levels
	m	(Lbem;F)V	c	hurtHelmet
		p	1		source
		p	2		amount
	m	(Lbfh;)V	c	touch
		p	1		entity
	m	(Lbfl;)Z	c	lambda$playShoulderEntityAmbientSound$0
		p	0		entityType
	m	(Lbfm;)Lcfv;	c	getItemBySlot
		p	1		slot
	m	(Ldbq;)F	c	getDestroySpeed
		p	1		block
	m	(Lre;)V	c	playShoulderEntityAmbientSound
		p	1		entityNbt
	m	()Lams;	cX	getSoundSource
	m	()I	cY	getFireImmuneTicks
	m	()Ljava/lang/String;	cu	getScoreboardName
	m	()Z	cv	isPushedByFluid
	m	()Z	cy	shouldShowName
	m	(F)V	d	hurtCurrentlyUsedShield
		p	1		amount
	m	(I)V	d	giveExperiencePoints
		p	1		experience
	m	(Lbem;)Lamq;	d	getHurtSound
		p	1		source
	m	(Lbfh;)V	d	attack
		p	1		target
	m	(Lbfx;)V	d	blockUsingShield
		p	1		attacker
	m	(Ldbq;)Z	d	hasCorrectToolForDrops
		p	1		state
	m	()Z	dE	shouldBeSaved
	m	()Z	dF	isAlwaysTicking
	m	()Z	dN	onSoulSpeedBlock
	m	()Z	dT	isAffectedByFluids
	m	()I	dX	getExperienceReward
	m	()Z	dY	isAlwaysExperienceDropper
	m	()Z	dz	canSprint
	m	()Z	eP	isImmobile
	m	()V	eS	jumpFromGround
	m	()F	eV	getFlyingSpeed
	m	()F	eW	getSpeed
	m	()V	eY	serverAiStep
	m	()Z	eh	canBeSeenAsEnemy
	m	()V	er	dropEquipment
	m	()F	ex	getHurtDir
	m	()Lbfx$a;	ey	getFallSounds
	m	()Z	f	isCreative
	m	(Lbem;F)V	f	actuallyHurt
		p	1		source
		p	2		amount
	m	(Lcfv;)Z	f	canTakeItem
		p	1		stack
	m	(Lgt;)Z	f	freeAt
		p	1		pos
	m	()Z	fA	wantsToStopRiding
	m	()Z	fB	isStayingOnGroundSurface
	m	()Z	fC	updateIsUnderwater
	m	()V	fD	updatePlayerPose
	m	()I	fE	getScore
	m	()V	fF	destroyVanishingCursedItems
	m	()V	fG	sweepAttack
	m	()V	fH	respawn
	m	()Lcom/mojang/authlib/GameProfile;	fI	getGameProfile
	m	()Lbyl;	fJ	getInventory
	m	()Lbyj;	fK	getAbilities
	m	()Z	fL	hasContainerOpen
	m	()Z	fM	isSleepingLongEnough
	m	()I	fN	getSleepTimer
	m	()Z	fO	tryToStartFallFlying
	m	()V	fP	startFallFlying
	m	()V	fQ	stopFallFlying
	m	()I	fR	getEnchantmentSeed
	m	()I	fS	getXpNeededForNextLevel
	m	()Lcaz;	fT	getFoodData
	m	()Z	fU	isHurt
	m	()Z	fV	mayBuild
	m	()Lccn;	fW	getEnderChestInventory
	m	()V	fX	removeEntitiesOnShoulder
	m	()Leec;	fY	getScoreboard
	m	()Z	fZ	isReducedDebugInfo
	m	()F	fb	getAbsorptionAmount
	m	()Lbfr;	fd	getMainArm
	m	()Lcom/google/common/collect/ImmutableList;	fr	getDismountPoses
	m	()V	fv	stopSleeping
	m	()Lbhd$a;	fy	createAttributes
	m	()Z	fz	isSecondaryUseActive
	m	()Z	g	isLocalPlayer
	m	(I)V	g	setRemainingFireTicks
		p	1		fireTicks
	m	(Lcfv;)Lcfv;	g	getProjectile
		p	1		stack
	m	()Lre;	ga	getShoulderEntityLeft
	m	()Lre;	gb	getShoulderEntityRight
	m	()F	gc	getCurrentItemAttackStrengthDelay
	m	()V	gd	resetAttackStrengthTicker
	m	()Lcfr;	ge	getCooldowns
	m	()F	gf	getLuck
	m	()Z	gg	canUseGameMasterBlocks
	m	()Z	gh	isScoping
	m	()Ljava/util/Optional;	gi	getLastDeathLocation
	m	(Lbfx;)V	h	doAutoAttackOnTouch
		p	1		target
	m	(Lede;)V	h	travel
		p	1		movementInput
	m	(Lre;)Z	h	setEntityOnShoulder
		p	1		entityNbt
	m	(Lcfv;)Z	i	addItem
		p	1		stack
	m	(Lre;)V	i	setShoulderEntityLeft
		p	1		entityNbt
	m	(Lre;)V	j	setShoulderEntityRight
		p	1		entityNbt
	m	()Lcfr;	k	createItemCooldowns
	m	(Lre;)V	k	respawnEntityOnShoulder
		p	1		entityNbt
	m	()V	l	tick
	m	()V	q	closeContainer
	m	(F)V	q	animateHurt
		p	1		yaw
	m	(I)V	q	setScore
		p	1		score
	m	()V	r	doCloseContainer
	m	(DDD)V	r	checkMovementStatistics
		p	1		dx
		p	3		dy
		p	5		dz
	m	(I)V	r	increaseScore
		p	1		score
	m	()V	s	turtleHelmetTick
	m	(DDD)V	s	checkRidingStatistics
		p	1		dx
		p	3		dy
		p	5		dz
	m	(I)V	s	startAutoSpinAttack
		p	1		riptideTicks
	m	(Z)V	s	disableShield
		p	1		sprinting
	m	(Z)Z	t	canEat
		p	1		ignoreHunger
	m	(F)Lede;	u	getRopeHoldPosition
		p	1		delta
	m	(Z)V	u	setReducedDebugInfo
		p	1		reducedDebugInfo
	m	()V	w	onUpdateAbilities
	m	()V	x	moveCloak
	m	(F)V	x	setAbsorptionAmount
		p	1		amount
	m	()Lamq;	x_	getDeathSound
	m	()Z	y	isAboveGround
	m	(F)V	y	causeFoodExhaustion
		p	1		exhaustion
	m	(F)F	z	getAttackStrengthScale
		p	1		baseTime
	f	I	bA	MAX_HEALTH
	f	I	bB	SLEEP_DURATION
	f	I	bC	WAKE_UP_DURATION
	f	I	bD	ENDER_SLOT_OFFSET
	f	F	bE	CROUCH_BB_HEIGHT
	f	F	bF	SWIMMING_BB_WIDTH
	f	F	bG	SWIMMING_BB_HEIGHT
	f	F	bH	DEFAULT_EYE_HEIGHT
	f	Lbfi;	bI	STANDING_DIMENSIONS
	f	Lacl;	bJ	DATA_PLAYER_MODE_CUSTOMISATION
	f	Lacl;	bK	DATA_PLAYER_MAIN_HAND
	f	Lacl;	bL	DATA_SHOULDER_LEFT
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Lacl;	bM	DATA_SHOULDER_RIGHT
	f	Lccn;	bN	enderChestInventory
	f	Lccc;	bO	inventoryMenu
	f	Lcbd;	bP	containerMenu
	f	Lcaz;	bQ	foodData
	f	I	bR	jumpTriggerTime
	f	F	bS	oBob
	f	F	bT	bob
	f	I	bU	takeXpDelay
	f	D	bV	xCloakO
	f	D	bW	yCloakO
	f	D	bX	zCloakO
	f	D	bY	xCloak
	f	D	bZ	yCloak
	f	I	bz	MAX_NAME_LENGTH
	f	Ljava/util/Map;	c	POSES
	f	D	ca	zCloak
	f	Z	cb	wasUnderwater
	f	I	cc	experienceLevel
	f	I	cd	totalExperience
	f	F	ce	experienceProgress
	f	I	cf	enchantmentSeed
	f	F	cg	defaultFlySpeed
	f	Lbza;	ch	fishing
	f	F	ci	hurtDir
	f	J	cj	timeEntitySatOnShoulder
	f	Lbyl;	ck	inventory
	f	I	cl	sleepCounter
	f	Lbyj;	cm	abilities
	f	I	cn	lastLevelUpTime
	f	Lcom/mojang/authlib/GameProfile;	co	gameProfile
	f	Z	cp	reducedDebugInfo
	f	Lcfv;	cq	lastItemInMainHand
	f	Lcfr;	cr	cooldowns
	f	Ljava/util/Optional;	cs	lastDeathLocation
	f	I	d	FLY_ACHIEVEMENT_SPEED
	f	Lacl;	e	DATA_PLAYER_ABSORPTION_ID
	f	Lacl;	f	DATA_SCORE_ID
c	bym$1	net/minecraft/world/entity/player/Player$1
	f	[I	a	$SwitchMap$net$minecraft$world$entity$Pose
c	bym$a	net/minecraft/world/entity/player/Player$BedSleepingProblem
	m	(Ljava/lang/String;ILtj;)V	<init>	<init>
		p	3		message
	m	()Ltj;	a	getMessage
	m	()[Lbym$a;	b	$values
	f	Lbym$a;	a	NOT_POSSIBLE_HERE
	f	Lbym$a;	b	NOT_POSSIBLE_NOW
	f	Lbym$a;	c	TOO_FAR_AWAY
	f	Lbym$a;	d	OBSTRUCTED
	f	Lbym$a;	e	OTHER_PROBLEM
	f	Lbym$a;	f	NOT_SAFE
	f	Ltj;	g	message
	f	[Lbym$a;	h	$VALUES
c	byn	net/minecraft/world/entity/player/PlayerModelPart
	m	(Ljava/lang/String;IILjava/lang/String;)V	<init>	<init>
		p	3		id
		p	4		name
	m	()I	a	getMask
	m	()I	b	getBit
	m	()Ljava/lang/String;	c	getId
	m	()Ltj;	d	getName
	m	()[Lbyn;	e	$values
	f	Lbyn;	a	CAPE
	f	Lbyn;	b	JACKET
	f	Lbyn;	c	LEFT_SLEEVE
	f	Lbyn;	d	RIGHT_SLEEVE
	f	Lbyn;	e	LEFT_PANTS_LEG
	f	Lbyn;	f	RIGHT_PANTS_LEG
	f	Lbyn;	g	HAT
	f	I	h	bit
	f	I	i	mask
	f	Ljava/lang/String;	j	id
	f	Ltj;	k	name
	f	[Lbyn;	l	$VALUES
c	byo	net/minecraft/world/entity/player/ProfileKeyPair
	m	()Z	a	dueRefresh
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Ljava/security/PrivateKey;	b	privateKey
	m	()Lbyp;	c	publicKey
	m	()Ljava/time/Instant;	d	refreshedAfter
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/security/PrivateKey;	b	privateKey
	f	Lbyp;	c	publicKey
	f	Ljava/time/Instant;	d	refreshedAfter
c	byp	net/minecraft/world/entity/player/ProfilePublicKey
	m	()Laps;	a	createSignatureValidator
	m	(Laps;Ljava/util/UUID;Lbyp$a;Ljava/time/Duration;)Lbyp;	a	createValidated
		p	0		servicesSignatureVerifier
		p	1		playerUuid
		p	2		publicKeyData
		p	3		gracePeriod
	m	()Lbyp$a;	b	data
	f	Ltj;	a	EXPIRED_PROFILE_PUBLIC_KEY
	f	Ljava/time/Duration;	b	EXPIRY_GRACE_PERIOD
	f	Lcom/mojang/serialization/Codec;	c	TRUSTED_CODEC
	f	Lbyp$a;	d	data
	f	Ltj;	e	INVALID_SIGNATURE
c	byp$a	net/minecraft/world/entity/player/ProfilePublicKey$Data
	m	(Lss;)V	<init>	<init>
		p	1		buf
	m	()Z	a	hasExpired
	m	(Laps;Ljava/util/UUID;)Z	a	validateSignature
		p	1		servicesSignatureVerifier
		p	2		playerUuid
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ljava/time/Duration;)Z	a	hasExpired
		p	1		gracePeriod
	m	(Ljava/util/UUID;)[B	a	signedPayload
		p	1		playerUuid
	m	(Lss;)V	a	write
		p	1		buf
	m	()Ljava/time/Instant;	b	expiresAt
	m	()Ljava/security/PublicKey;	c	key
	m	()[B	d	keySignature
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/time/Instant;	b	expiresAt
	f	Ljava/security/PublicKey;	c	key
	f	[B	d	keySignature
	f	I	e	MAX_KEY_SIGNATURE_SIZE
c	byp$b	net/minecraft/world/entity/player/ProfilePublicKey$ValidationException
	m	(Ltj;)V	<init>	<init>
		p	1		messageText
c	byq	net/minecraft/world/entity/player/StackedContents
	m	()V	a	clear
	m	(I)Lcfv;	a	fromStackingIndex
		p	0		itemId
	m	(II)I	a	take
		p	1		itemId
		p	2		count
	m	(Lcfv;)V	a	accountSimpleStack
		p	1		stack
	m	(Lcfv;I)V	a	accountStack
		p	1		stack
		p	2		maxCount
	m	(Lciy;ILit/unimi/dsi/fastutil/ints/IntList;)I	a	getBiggestCraftableStack
		p	1		recipe
		p	2		limit
		p	3		output
	m	(Lciy;Lit/unimi/dsi/fastutil/ints/IntList;)Z	a	canCraft
		p	1		recipe
		p	2		output
	m	(Lciy;Lit/unimi/dsi/fastutil/ints/IntList;I)Z	a	canCraft
		p	1		recipe
		p	2		output
		p	3		multiplier
	m	(I)Z	b	has
		p	1		itemId
	m	(II)V	b	put
		p	1		itemId
		p	2		count
	m	(Lcfv;)V	b	accountStack
		p	1		stack
	m	(Lciy;Lit/unimi/dsi/fastutil/ints/IntList;)I	b	getBiggestCraftableStack
		p	1		recipe
		p	2		output
	m	(Lcfv;)I	c	getStackingIndex
		p	0		stack
	f	Lit/unimi/dsi/fastutil/ints/Int2IntMap;	a	contents
	f	I	b	EMPTY
c	byq$a	net/minecraft/world/entity/player/StackedContents$RecipePicker
	m	(Lbyq;Lciy;)V	<init>	<init>
		p	2		recipe
	m	()[I	a	getUniqueAvailableIngredientItems
	m	(I)Z	a	dfs
		p	1		multiplier
	m	(ILit/unimi/dsi/fastutil/ints/IntList;)Z	a	tryPick
		p	1		multiplier
		p	2		output
	m	(ZI)V	a	visit
		p	1		reversed
		p	2		itemId
	m	(ZII)Z	a	hasConnection
		p	1		reversed
		p	2		itemIndex
		p	3		ingredientIndex
	m	()I	b	getMinIngredientCount
	m	(I)Z	b	isSatisfied
		p	1		itemId
	m	(ILit/unimi/dsi/fastutil/ints/IntList;)I	b	tryPickAll
		p	1		minimum
		p	2		output
	m	(ZI)Z	b	hasVisited
		p	1		reversed
		p	2		itemId
	m	(ZII)Z	b	hasResidual
		p	1		reversed
		p	2		itemIndex
		p	3		ingredientIndex
	m	(I)V	c	setSatisfied
		p	1		itemId
	m	(ZI)I	c	getVisitedIndex
		p	1		reversed
		p	2		itemId
	m	(ZII)V	c	toggleResidual
		p	1		reversed
		p	2		itemIndex
		p	3		ingredientIndex
	m	(I)I	d	getSatisfiedIndex
		p	1		itemId
	m	(ZII)I	d	getIndex
		p	1		reversed
		p	2		itemIndex
		p	3		ingredientIndex
	f	Lbyq;	a	this$0
	f	Lciy;	b	recipe
	f	Ljava/util/List;	c	ingredients
	f	I	d	ingredientCount
	f	[I	e	items
	f	I	f	itemCount
	f	Ljava/util/BitSet;	g	data
	f	Lit/unimi/dsi/fastutil/ints/IntList;	h	path
c	byr	net/minecraft/world/entity/player/package-info
c	bys	net/minecraft/world/entity/projectile/AbstractArrow
	m	(Lbfl;DDDLcmi;)V	<init>	<init>
		p	1		type
		p	2		x
		p	4		y
		p	6		z
		p	8		world
	m	(Lbfl;Lbfx;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		owner
		p	3		world
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	C	startFalling
	m	()V	D	resetPiercedEntities
	m	(B)V	a	setPierceLevel
		p	1		level
	m	(D)Z	a	shouldRenderAtSqrDistance
		p	1		distance
	m	(DDDFFIZ)V	a	lerpTo
		p	1		x
		p	3		y
		p	5		z
		p	7		yaw
		p	8		pitch
		p	9		interpolationSteps
		p	10		interpolate
	m	(IZ)V	a	setFlag
		p	1		index
		p	2		flag
	m	(Lbfh;)Z	a	canHitEntity
		p	1		entity
	m	(Lbfx;)V	a	doPostHurtEffects
		p	1		target
	m	(Lbfx;F)V	a	setEnchantmentEffectsFromEntity
		p	1		entity
		p	2		damageModifier
	m	(Lbgd;Lede;)V	a	move
		p	1		movementType
		p	2		movement
	m	(Lbgj;Lbfi;)F	a	getEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lbym;)Z	a	tryPickup
		p	1		player
	m	(Leda;)V	a	onHitBlock
		p	1		blockHitResult
	m	(Ledb;)V	a	onHitEntity
		p	1		entityHitResult
	m	(Lede;Lede;)Ledb;	a	findHitEntity
		p	1		currentPosition
		p	2		nextPosition
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Z)V	a	setCritArrow
		p	1		critical
	m	()Lbfh$b;	aQ	getMovementEmission
	m	()V	a_	defineSynchedData
	m	(I)V	b	setKnockback
		p	1		punch
	m	(Lamq;)V	b	setSoundEvent
		p	1		sound
	m	(Lbfh;)V	b	setOwner
		p	1		entity
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lbym;)V	b_	playerTouch
		p	1		player
	m	(DDDFF)V	c	shoot
		p	1		x
		p	3		y
		p	5		z
		p	7		speed
		p	8		divergence
	m	()Z	cl	isAttackable
	m	(D)V	h	setBaseDamage
		p	1		damage
	m	()V	i	tickDespawn
	m	()Lamq;	j	getDefaultHitGroundSoundEvent
	m	()Lamq;	k	getHitGroundSoundEvent
	m	()V	l	tick
	m	(DDD)V	l	lerpMotion
		p	1		x
		p	3		y
		p	5		z
	m	()Lcfv;	o	getPickupItem
	m	()D	p	getBaseDamage
	m	(Z)V	p	setNoPhysics
		p	1		noClip
	m	()I	q	getKnockback
	m	(Z)V	q	setShotFromCrossbow
		p	1		shotFromCrossbow
	m	()Z	r	isCritArrow
	m	()Z	s	shotFromCrossbow
	m	()B	t	getPierceLevel
	m	()F	w	getWaterInertia
	m	()Z	x	isNoPhysics
	m	()Z	y	shouldFall
	f	Z	b	inGround
	f	I	c	inGroundTime
	f	Lbys$a;	d	pickup
	f	I	e	shakeTime
	f	D	f	ARROW_BASE_DAMAGE
	f	Lacl;	g	ID_FLAGS
	f	Lacl;	h	PIERCE_LEVEL
	f	I	i	FLAG_CRIT
	f	I	j	FLAG_NOPHYSICS
	f	I	k	FLAG_CROSSBOW
	f	Ldbq;	l	lastState
	f	I	m	life
	f	D	n	baseDamage
	f	I	o	knockback
	f	Lamq;	p	soundEvent
	f	Lit/unimi/dsi/fastutil/ints/IntOpenHashSet;	q	piercingIgnoreEntityIds
	f	Ljava/util/List;	r	piercedAndKilledEntities
c	bys$1	net/minecraft/world/entity/projectile/AbstractArrow$1
	f	[I	a	$SwitchMap$net$minecraft$world$entity$projectile$AbstractArrow$Pickup
c	bys$a	net/minecraft/world/entity/projectile/AbstractArrow$Pickup
	m	()[Lbys$a;	a	$values
	m	(I)Lbys$a;	a	byOrdinal
		p	0		ordinal
	f	Lbys$a;	a	DISALLOWED
	f	Lbys$a;	b	ALLOWED
	f	Lbys$a;	c	CREATIVE_ONLY
	f	[Lbys$a;	d	$VALUES
c	byt	net/minecraft/world/entity/projectile/AbstractHurtingProjectile
	m	(Lbfl;DDDDDDLcmi;)V	<init>	<init>
		p	1		type
		p	2		x
		p	4		y
		p	6		z
		p	8		directionX
		p	10		directionY
		p	12		directionZ
		p	14		world
	m	(Lbfl;Lbfx;DDDLcmi;)V	<init>	<init>
		p	1		type
		p	2		owner
		p	3		directionX
		p	5		directionY
		p	7		directionZ
		p	9		world
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()Lvb;	S	getAddEntityPacket
	m	()Z	Z_	shouldBurn
	m	(D)Z	a	shouldRenderAtSqrDistance
		p	1		distance
	m	(Lbem;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbfh;)Z	a	canHitEntity
		p	1		entity
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lvf;)V	a	recreateFromPacket
		p	1		packet
	m	()V	a_	defineSynchedData
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()F	bB	getPickRadius
	m	()F	bh	getLightLevelDependentMagicValue
	m	()Z	bm	isPickable
	m	()Lis;	j	getTrailParticle
	m	()F	k	getInertia
	m	()V	l	tick
	f	D	b	xPower
	f	D	c	yPower
	f	D	d	zPower
c	byu	net/minecraft/world/entity/projectile/Arrow
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcmi;DDD)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
	m	(Lcmi;Lbfx;)V	<init>	<init>
		p	1		world
		p	2		owner
	m	()V	C	updateColor
	m	(Lbey;)V	a	addEffect
		p	1		effect
	m	(Lbfx;)V	a	doPostHurtEffects
		p	1		target
	m	(Lcfv;)V	a	setEffectsFromItem
		p	1		stack
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(I)V	c	makeParticle
		p	1		amount
	m	(Lcfv;)I	c	getCustomColor
		p	0		stack
	m	(I)V	d	setFixedColor
		p	1		color
	m	()V	l	tick
	m	(I)I	l	lambda$doPostHurtEffects$0
	m	()Lcfv;	o	getPickupItem
	m	()I	y	getColor
	f	I	f	EXPOSED_POTION_DECAY_TIME
	f	I	g	NO_EFFECT_COLOR
	f	Lacl;	h	ID_EFFECT_COLOR
	f	B	i	EVENT_POTION_PUFF
	f	Lchr;	j	potion
	f	Ljava/util/Set;	k	effects
	f	Z	l	fixedColor
c	byv	net/minecraft/world/entity/projectile/DragonFireball
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcmi;Lbfx;DDD)V	<init>	<init>
		p	1		world
		p	2		owner
		p	3		directionX
		p	5		directionY
		p	7		directionZ
	m	()Z	Z_	shouldBurn
	m	(Lbem;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Ledc;)V	a	onHit
		p	1		hitResult
	m	()Z	bm	isPickable
	m	()Lis;	j	getTrailParticle
	f	F	e	SPLASH_RANGE
c	byw	net/minecraft/world/entity/projectile/EvokerFangs
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcmi;DDDFILbfx;)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
		p	8		yaw
		p	9		warmup
		p	10		owner
	m	(F)F	a	getAnimationProgress
		p	1		tickDelta
	m	(Lbfx;)V	a	setOwner
		p	1		owner
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lbfx;)V	c	dealDamageTo
		p	1		target
	m	()Lbfx;	i	getOwner
	m	()V	l	tick
	m	()Lbfh;	v	getOwner
	f	I	b	ATTACK_DURATION
	f	I	c	LIFE_OFFSET
	f	I	d	ATTACK_TRIGGER_TICKS
	f	I	e	warmupDelayTicks
	f	Z	f	sentSpikeEvent
	f	I	g	lifeTicks
	f	Z	h	clientSideAttackStarted
	f	Lbfx;	i	owner
	f	Ljava/util/UUID;	j	ownerUUID
c	byx	net/minecraft/world/entity/projectile/EyeOfEnder
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcmi;DDD)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
	m	(D)Z	a	shouldRenderAtSqrDistance
		p	1		distance
	m	(Lcfv;)V	a	setItem
		p	1		stack
	m	(Lgt;)V	a	signalTo
		p	1		pos
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()F	bh	getLightLevelDependentMagicValue
	m	(Lcfv;)V	c	lambda$setItem$0
		p	0		stack
	m	()Z	cl	isAttackable
	m	()Lcfv;	i	getItem
	m	()Lcfv;	j	getItemRaw
	m	()V	l	tick
	m	(DDD)V	l	lerpMotion
		p	1		x
		p	3		y
		p	5		z
	f	Lacl;	b	DATA_ITEM_STACK
	f	D	c	tx
	f	D	d	ty
	f	D	e	tz
	f	I	f	life
	f	Z	g	surviveAfterDeath
c	byy	net/minecraft/world/entity/projectile/Fireball
	m	(Lbfl;DDDDDDLcmi;)V	<init>	<init>
		p	1		type
		p	2		x
		p	4		y
		p	6		z
		p	8		directionX
		p	10		directionY
		p	12		directionZ
		p	14		world
	m	(Lbfl;Lbfx;DDDLcmi;)V	<init>	<init>
		p	1		type
		p	2		owner
		p	3		directionX
		p	5		directionY
		p	7		directionZ
		p	9		world
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcfv;)V	a	setItem
		p	1		stack
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lcfv;)V	c	lambda$setItem$0
		p	0		stack
	m	()Lcfv;	i	getItem
	m	()Lcfv;	o	getItemRaw
	f	Lacl;	e	DATA_ITEM_STACK
c	byz	net/minecraft/world/entity/projectile/FireworkRocketEntity
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcmi;DDDLcfv;)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
		p	8		stack
	m	(Lcmi;Lbfh;DDDLcfv;)V	<init>	<init>
		p	1		world
		p	2		entity
		p	3		x
		p	5		y
		p	7		z
		p	9		stack
	m	(Lcmi;Lcfv;DDDZ)V	<init>	<init>
		p	1		world
		p	2		stack
		p	3		x
		p	5		y
		p	7		z
		p	9		shotAtAngle
	m	(Lcmi;Lcfv;Lbfh;DDDZ)V	<init>	<init>
		p	1		world
		p	2		stack
		p	3		entity
		p	4		x
		p	6		y
		p	8		z
		p	10		shotAtAngle
	m	(Lcmi;Lcfv;Lbfx;)V	<init>	<init>
		p	1		world
		p	2		stack
		p	3		shooter
	m	(D)Z	a	shouldRenderAtSqrDistance
		p	1		distance
	m	(Leda;)V	a	onHitBlock
		p	1		blockHitResult
	m	(Ledb;)V	a	onHitEntity
		p	1		entityHitResult
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	(I)V	b	lambda$tick$0
		p	1		id
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Z	cl	isAttackable
	m	()Lcfv;	i	getItem
	m	()Z	j	isShotAtAngle
	m	()V	k	explode
	m	(DDD)Z	k	shouldRender
		p	1		cameraX
		p	3		cameraY
		p	5		cameraZ
	m	()V	l	tick
	m	()Z	o	hasExplosion
	m	()V	p	dealExplosionDamage
	m	()Z	q	isAttachedToEntity
	f	Lacl;	b	DATA_ID_FIREWORKS_ITEM
	f	Lacl;	c	DATA_ATTACHED_TO_TARGET
	f	Lacl;	d	DATA_SHOT_AT_ANGLE
	f	I	e	life
	f	I	f	lifetime
	f	Lbfx;	g	attachedToEntity
c	bza	net/minecraft/world/entity/projectile/FishingHook
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lbfl;Lcmi;II)V	<init>	<init>
		p	1		type
		p	2		world
		p	3		luckOfTheSeaLevel
		p	4		lureLevel
	m	(Lbym;Lcmi;II)V	<init>	<init>
		p	1		thrower
		p	2		world
		p	3		luckOfTheSeaLevel
		p	4		lureLevel
	m	()Lvb;	S	getAddEntityPacket
	m	(D)Z	a	shouldRenderAtSqrDistance
		p	1		distance
	m	(DDDFFIZ)V	a	lerpTo
		p	1		x
		p	3		y
		p	5		z
		p	7		yaw
		p	8		pitch
		p	9		interpolationSteps
		p	10		interpolate
	m	(Lacl;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Lbfh$c;)V	a	remove
		p	1		reason
	m	(Lbfh;)Z	a	canHitEntity
		p	1		entity
	m	(Lbym;)Z	a	shouldStopFishing
		p	1		player
	m	(Lbza$b;Lbza$b;)Lbza$b;	a	lambda$getOpenWaterTypeForArea$0
	m	(Lbza;)V	a	updateOwnerInfo
		p	1		fishingBobber
	m	(Lcfv;)I	a	retrieve
		p	1		usedItem
	m	(Leda;)V	a	onHitBlock
		p	1		blockHitResult
	m	(Ledb;)V	a	onHitEntity
		p	1		entityHitResult
	m	(Lgt;)V	a	catchingFish
		p	1		pos
	m	(Lgt;Lgt;)Lbza$b;	a	getOpenWaterTypeForArea
		p	1		start
		p	2		end
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lvf;)V	a	recreateFromPacket
		p	1		packet
	m	()Lbfh$b;	aQ	getMovementEmission
	m	()V	a_	defineSynchedData
	m	()V	ak	onClientRemoval
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	(Lbfh;)V	b	setOwner
		p	1		entity
	m	(Lgt;)Z	b	calculateOpenWater
		p	1		pos
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lbfh;)V	c	pullEntity
		p	1		entity
	m	(Lgt;)Lbza$b;	c	getOpenWaterTypeForBlock
		p	1		pos
	m	()Z	co	canChangeDimensions
	m	()Z	i	isOpenWaterFishing
	m	()Lbym;	j	getPlayerOwner
	m	()Lbfh;	k	getHookedIn
	m	()V	l	tick
	m	()V	o	checkCollision
	m	(Lbfh;)V	x	setHookedEntity
		p	1		entity
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Lapo;	c	syncronizedRandom
	f	Z	d	biting
	f	I	e	outOfWaterTime
	f	I	f	MAX_OUT_OF_WATER_TIME
	f	Lacl;	g	DATA_HOOKED_ENTITY
	f	Lacl;	h	DATA_BITING
	f	I	i	life
	f	I	j	nibble
	f	I	k	timeUntilLured
	f	I	l	timeUntilHooked
	f	F	m	fishAngle
	f	Z	n	openWater
	f	Lbfh;	o	hookedIn
	f	Lbza$a;	p	currentState
	f	I	q	luck
	f	I	r	lureSpeed
c	bza$1	net/minecraft/world/entity/projectile/FishingHook$1
	f	[I	a	$SwitchMap$net$minecraft$world$entity$projectile$FishingHook$OpenWaterType
c	bza$a	net/minecraft/world/entity/projectile/FishingHook$FishHookState
	m	()[Lbza$a;	a	$values
	f	Lbza$a;	a	FLYING
	f	Lbza$a;	b	HOOKED_IN_ENTITY
	f	Lbza$a;	c	BOBBING
	f	[Lbza$a;	d	$VALUES
c	bza$b	net/minecraft/world/entity/projectile/FishingHook$OpenWaterType
	m	()[Lbza$b;	a	$values
	f	Lbza$b;	a	ABOVE_WATER
	f	Lbza$b;	b	INSIDE_WATER
	f	Lbza$b;	c	INVALID
	f	[Lbza$b;	d	$VALUES
c	bzb	net/minecraft/world/entity/projectile/ItemSupplier
	m	()Lcfv;	i	getItem
c	bzc	net/minecraft/world/entity/projectile/LargeFireball
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcmi;Lbfx;DDDI)V	<init>	<init>
		p	1		world
		p	2		owner
		p	3		velocityX
		p	5		velocityY
		p	7		velocityZ
		p	9		explosionPower
	m	(Ledb;)V	a	onHitEntity
		p	1		entityHitResult
	m	(Ledc;)V	a	onHit
		p	1		hitResult
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	f	I	e	explosionPower
c	bzd	net/minecraft/world/entity/projectile/LlamaSpit
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcmi;Lbtl;)V	<init>	<init>
		p	1		world
		p	2		owner
	m	(Leda;)V	a	onHitBlock
		p	1		blockHitResult
	m	(Ledb;)V	a	onHitEntity
		p	1		entityHitResult
	m	(Lvf;)V	a	recreateFromPacket
		p	1		packet
	m	()V	a_	defineSynchedData
	m	()V	l	tick
c	bze	net/minecraft/world/entity/projectile/Projectile
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	A	updateRotation
	m	()Lvb;	S	getAddEntityPacket
	m	(Lbfh;)Z	a	canHitEntity
		p	1		entity
	m	(Lbfh;FFFFF)V	a	shootFromRotation
		p	1		shooter
		p	2		pitch
		p	3		yaw
		p	4		roll
		p	5		speed
		p	6		divergence
	m	(Lcmi;Lgt;)Z	a	mayInteract
		p	1		world
		p	2		pos
	m	(Leda;)V	a	onHitBlock
		p	1		blockHitResult
	m	(Ledb;)V	a	onHitEntity
		p	1		entityHitResult
	m	(Ledc;)V	a	onHit
		p	1		hitResult
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lvf;)V	a	recreateFromPacket
		p	1		packet
	m	(Lbfh;)V	b	setOwner
		p	1		entity
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(DDDFF)V	c	shoot
		p	1		x
		p	3		y
		p	5		z
		p	7		speed
		p	8		divergence
	m	(Lbfh;)Z	c	lambda$checkLeftOwner$0
		p	0		entity
	m	(FF)F	d	lerpRotation
		p	0		prevRot
		p	1		newRot
	m	(Lbfh;)Z	d	ownedBy
		p	1		entity
	m	()Z	j	checkLeftOwner
	m	()V	l	tick
	m	(DDD)V	l	lerpMotion
		p	1		x
		p	3		y
		p	5		z
	m	()Lbfh;	v	getOwner
	m	()Lbfh;	z	getEffectSource
	f	Ljava/util/UUID;	b	ownerUUID
	f	Lbfh;	c	cachedOwner
	f	Z	d	leftOwner
	f	Z	e	hasBeenShot
c	bzf	net/minecraft/world/entity/projectile/ProjectileUtil
	m	(Lbfh;F)V	a	rotateTowardsMovement
		p	0		entity
		p	1		delta
	m	(Lbfh;Lede;Lede;Lecz;Ljava/util/function/Predicate;D)Ledb;	a	getEntityHitResult
		p	0		entity
		p	1		min
		p	2		max
		p	3		box
		p	4		predicate
	m	(Lbfh;Ljava/util/function/Predicate;)Ledc;	a	getHitResult
		p	0		entity
		p	1		predicate
	m	(Lbfx;Lcfq;)Lbdx;	a	getWeaponHoldingHand
		p	0		entity
		p	1		item
	m	(Lbfx;Lcfv;F)Lbys;	a	getMobArrow
		p	0		entity
		p	1		stack
		p	2		damageModifier
	m	(Lcmi;Lbfh;Lede;Lede;Lecz;Ljava/util/function/Predicate;)Ledb;	a	getEntityHitResult
		p	0		world
		p	1		entity
		p	2		min
		p	3		max
		p	4		box
		p	5		predicate
	m	(Lcmi;Lbfh;Lede;Lede;Lecz;Ljava/util/function/Predicate;F)Ledb;	a	getEntityHitResult
		p	0		world
		p	1		entity
		p	2		min
		p	3		max
		p	4		box
		p	5		predicate
c	bzg	net/minecraft/world/entity/projectile/ShulkerBullet
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcmi;Lbfx;Lbfh;Lgz$a;)V	<init>	<init>
		p	1		world
		p	2		owner
		p	3		target
		p	4		axis
	m	(D)Z	a	shouldRenderAtSqrDistance
		p	1		distance
	m	(Lbem;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbfh;)Z	a	canHitEntity
		p	1		entity
	m	(Leda;)V	a	onHitBlock
		p	1		blockHitResult
	m	(Ledb;)V	a	onHitEntity
		p	1		entityHitResult
	m	(Ledc;)V	a	onHit
		p	1		hitResult
	m	(Lgz$a;)V	a	selectNextMoveDirection
		p	1		axis
	m	(Lgz;)V	a	setMoveDirection
		p	1		direction
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lvf;)V	a	recreateFromPacket
		p	1		packet
	m	()V	a_	defineSynchedData
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Z	bK	isOnFire
	m	()F	bh	getLightLevelDependentMagicValue
	m	()Z	bm	isPickable
	m	()Lams;	cX	getSoundSource
	m	()V	ds	checkDespawn
	m	()Lgz;	i	getMoveDirection
	m	()V	j	destroy
	m	()V	l	tick
	f	D	b	SPEED
	f	Lbfh;	c	finalTarget
	f	Lgz;	d	currentMoveDirection
	f	I	e	flightSteps
	f	D	f	targetDeltaX
	f	D	g	targetDeltaY
	f	D	h	targetDeltaZ
	f	Ljava/util/UUID;	i	targetId
c	bzh	net/minecraft/world/entity/projectile/SmallFireball
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcmi;DDDDDD)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
		p	8		velocityX
		p	10		velocityY
		p	12		velocityZ
	m	(Lcmi;Lbfx;DDD)V	<init>	<init>
		p	1		world
		p	2		owner
		p	3		velocityX
		p	5		velocityY
		p	7		velocityZ
	m	(Lbem;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Leda;)V	a	onHitBlock
		p	1		blockHitResult
	m	(Ledb;)V	a	onHitEntity
		p	1		entityHitResult
	m	(Ledc;)V	a	onHit
		p	1		hitResult
	m	()Z	bm	isPickable
c	bzi	net/minecraft/world/entity/projectile/Snowball
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcmi;DDD)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
	m	(Lcmi;Lbfx;)V	<init>	<init>
		p	1		world
		p	2		owner
	m	(Ledb;)V	a	onHitEntity
		p	1		entityHitResult
	m	(Ledc;)V	a	onHit
		p	1		hitResult
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	()Lcfq;	j	getDefaultItem
	m	()Lis;	p	getParticle
c	bzj	net/minecraft/world/entity/projectile/SpectralArrow
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcmi;DDD)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
	m	(Lcmi;Lbfx;)V	<init>	<init>
		p	1		world
		p	2		owner
	m	(Lbfx;)V	a	doPostHurtEffects
		p	1		target
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()V	l	tick
	m	()Lcfv;	o	getPickupItem
	f	I	f	duration
c	bzk	net/minecraft/world/entity/projectile/ThrowableItemProjectile
	m	(Lbfl;DDDLcmi;)V	<init>	<init>
		p	1		type
		p	2		x
		p	4		y
		p	6		z
		p	8		world
	m	(Lbfl;Lbfx;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		owner
		p	3		world
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcfv;)V	a	setItem
		p	1		item
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lcfv;)V	c	lambda$setItem$0
		p	0		stack
	m	()Lcfv;	i	getItem
	m	()Lcfq;	j	getDefaultItem
	m	()Lcfv;	k	getItemRaw
	f	Lacl;	b	DATA_ITEM_STACK
c	bzl	net/minecraft/world/entity/projectile/ThrowableProjectile
	m	(Lbfl;DDDLcmi;)V	<init>	<init>
		p	1		type
		p	2		x
		p	4		y
		p	6		z
		p	8		world
	m	(Lbfl;Lbfx;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		owner
		p	3		world
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(D)Z	a	shouldRenderAtSqrDistance
		p	1		distance
	m	()V	l	tick
	m	()F	o	getGravity
c	bzm	net/minecraft/world/entity/projectile/ThrownEgg
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcmi;DDD)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
	m	(Lcmi;Lbfx;)V	<init>	<init>
		p	1		world
		p	2		owner
	m	(Ledb;)V	a	onHitEntity
		p	1		entityHitResult
	m	(Ledc;)V	a	onHit
		p	1		hitResult
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	()Lcfq;	j	getDefaultItem
c	bzn	net/minecraft/world/entity/projectile/ThrownEnderpearl
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcmi;Lbfx;)V	<init>	<init>
		p	1		world
		p	2		owner
	m	(Ledb;)V	a	onHitEntity
		p	1		entityHitResult
	m	(Ledc;)V	a	onHit
		p	1		hitResult
	m	(Laip;)Lbfh;	b	changeDimension
		p	1		destination
	m	()Lcfq;	j	getDefaultItem
	m	()V	l	tick
c	bzo	net/minecraft/world/entity/projectile/ThrownExperienceBottle
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcmi;DDD)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
	m	(Lcmi;Lbfx;)V	<init>	<init>
		p	1		world
		p	2		owner
	m	(Ledc;)V	a	onHit
		p	1		hitResult
	m	()Lcfq;	j	getDefaultItem
	m	()F	o	getGravity
c	bzp	net/minecraft/world/entity/projectile/ThrownPotion
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcmi;DDD)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
	m	(Lcmi;Lbfx;)V	<init>	<init>
		p	1		world
		p	2		owner
	m	(DI)I	a	lambda$applySplash$1
	m	(Lbfx;)Z	a	lambda$static$0
		p	0		entity
	m	(Lcfv;Lchr;)V	a	makeAreaOfEffectCloud
		p	1		stack
		p	2		potion
	m	(Leda;)V	a	onHitBlock
		p	1		blockHitResult
	m	(Ledc;)V	a	onHit
		p	1		hitResult
	m	(Lgt;)V	a	dowseFire
		p	1		pos
	m	(Ljava/util/List;Lbfh;)V	a	applySplash
		p	1		statusEffects
		p	2		entity
	m	()Lcfq;	j	getDefaultItem
	m	()F	o	getGravity
	m	()V	p	applyWater
	m	()Z	q	isLingering
	f	D	b	SPLASH_RANGE
	f	Ljava/util/function/Predicate;	c	WATER_SENSITIVE_OR_ON_FIRE
	f	D	d	SPLASH_RANGE_SQ
c	bzq	net/minecraft/world/entity/projectile/ThrownTrident
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcmi;Lbfx;Lcfv;)V	<init>	<init>
		p	1		world
		p	2		owner
		p	3		stack
	m	()Z	C	isChanneling
	m	()Z	D	isAcceptibleReturnOwner
	m	(Lbym;)Z	a	tryPickup
		p	1		player
	m	(Ledb;)V	a	onHitEntity
		p	1		entityHitResult
	m	(Lede;Lede;)Ledb;	a	findHitEntity
		p	1		currentPosition
		p	2		nextPosition
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lbym;)V	b_	playerTouch
		p	1		player
	m	()V	i	tickDespawn
	m	()Lamq;	j	getDefaultHitGroundSoundEvent
	m	(DDD)Z	k	shouldRender
		p	1		cameraX
		p	3		cameraY
		p	5		cameraZ
	m	()V	l	tick
	m	()Lcfv;	o	getPickupItem
	m	()F	w	getWaterInertia
	m	()Z	y	isFoil
	f	I	f	clientSideReturnTridentTickCount
	f	Lacl;	g	ID_LOYALTY
	f	Lacl;	h	ID_FOIL
	f	Lcfv;	i	tridentItem
	f	Z	j	dealtDamage
c	bzr	net/minecraft/world/entity/projectile/WitherSkull
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcmi;Lbfx;DDD)V	<init>	<init>
		p	1		world
		p	2		owner
		p	3		directionX
		p	5		directionY
		p	7		directionZ
	m	()Z	Z_	shouldBurn
	m	(Lbem;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lcma;Lclo;Lgt;Ldbq;Ldwj;F)F	a	getBlockExplosionResistance
		p	1		explosion
		p	2		world
		p	3		pos
		p	4		blockState
		p	5		fluidState
		p	6		max
	m	(Ledb;)V	a	onHitEntity
		p	1		entityHitResult
	m	(Ledc;)V	a	onHit
		p	1		hitResult
	m	(Z)V	a	setDangerous
		p	1		charged
	m	()V	a_	defineSynchedData
	m	()Z	bK	isOnFire
	m	()Z	bm	isPickable
	m	()F	k	getInertia
	m	()Z	o	isDangerous
	f	Lacl;	e	DATA_DANGEROUS
c	bzs	net/minecraft/world/entity/projectile/package-info
c	bzt	net/minecraft/world/entity/raid/Raid
	m	(ILaip;Lgt;)V	<init>	<init>
		p	1		id
		p	2		world
		p	3		pos
	m	(Laip;Lre;)V	<init>	<init>
		p	1		world
		p	2		nbt
	m	()Z	A	hasMoreWaves
	m	()Z	B	isFinalWave
	m	()Z	C	hasBonusWave
	m	()Z	D	hasSpawnedBonusWave
	m	()Z	E	shouldSpawnBonusGroup
	m	()V	F	updateRaiders
	m	()Z	G	shouldSpawnGroup
	m	()V	H	setDirty
	m	()Z	a	isOver
	m	(I)V	a	setBadOmenLevel
		p	1		badOmenLevel
	m	(II)Lgt;	a	findRandomSpawnPos
		p	1		proximity
		p	2		tries
	m	(ILbzu;)V	a	setLeader
		p	1		wave
		p	2		entity
	m	(ILbzu;Lgt;Z)V	a	joinRaid
		p	1		wave
		p	2		raider
		p	3		pos
		p	4		existing
	m	(ILbzu;Z)Z	a	addWaveMob
		p	1		wave
		p	2		entity
		p	3		countHealth
	m	(Laiq;)Z	a	lambda$validPlayer$0
		p	1		player
	m	(Lbdv;)I	a	getNumGroups
		p	1		difficulty
	m	(Lbfh;)V	a	addHeroOfTheVillage
		p	1		entity
	m	(Lbym;)V	a	absorbBadOmen
		p	1		player
	m	(Lbzt$b;IZ)I	a	getDefaultNumSpawns
		p	1		member
		p	2		wave
		p	3		extra
	m	(Lbzt$b;Lapo;ILbdw;Z)I	a	getPotentialBonusSpawns
		p	1		member
		p	2		random
		p	3		wave
		p	4		localDifficulty
		p	5		extra
	m	(Lbzu;Z)V	a	removeFromRaid
		p	1		entity
		p	2		countHealth
	m	(Lgt;)V	a	playSound
		p	1		pos
	m	(Ljava/lang/Integer;)Ljava/util/Set;	a	lambda$addWaveMob$2
		p	0		wave
	m	(Lre;)Lre;	a	save
		p	1		nbt
	m	()Z	b	isBetweenWaves
	m	(I)Lbzu;	b	getLeader
		p	1		wave
	m	(ILbzu;)Z	b	addWaveMob
		p	1		wave
		p	2		entity
	m	(Lgt;)V	b	spawnGroup
		p	1		pos
	m	()Z	c	hasFirstWaveSpawned
	m	(I)V	c	removeLeader
		p	1		wave
	m	(Lgt;)V	c	setCenter
		p	1		center
	m	()Z	d	isStopped
	m	(I)Ljava/util/Optional;	d	getValidSpawnPos
		p	1		proximity
	m	(Lgt;)D	d	lambda$moveRaidCenterToNearbyVillageSection$1
		p	1		pos
	m	()Z	e	isVictory
	m	()Z	f	isLoss
	m	()F	g	getTotalHealth
	m	()Ljava/util/Set;	h	getAllRaiders
	m	()Lcmi;	i	getLevel
	m	()Z	j	isStarted
	m	()I	k	getGroupsSpawned
	m	()I	l	getMaxBadOmenLevel
	m	()I	m	getBadOmenLevel
	m	()V	n	stop
	m	()V	o	tick
	m	()V	p	updateBossbar
	m	()F	q	getHealthOfLivingRaiders
	m	()I	r	getTotalRaidersAlive
	m	()Lcfv;	s	getLeaderBannerInstance
	m	()Lgt;	t	getCenter
	m	()I	u	getId
	m	()Z	v	isActive
	m	()F	w	getEnchantOdds
	m	()Ljava/util/function/Predicate;	x	validPlayer
	m	()V	y	updatePlayers
	m	()V	z	moveRaidCenterToNearbyVillageSection
	f	Ljava/util/Map;	A	groupToLeaderMap
	f	Ljava/util/Map;	B	groupRaiderMap
	f	Ljava/util/Set;	C	heroesOfTheVillage
	f	J	D	ticksActive
	f	Lgt;	E	center
	f	Laip;	F	level
	f	Z	G	started
	f	I	H	id
	f	F	I	totalHealth
	f	I	J	badOmenLevel
	f	Z	K	active
	f	I	L	groupsSpawned
	f	Laim;	M	raidEvent
	f	I	N	postRaidTicks
	f	I	O	raidCooldownTicks
	f	Lapo;	P	random
	f	I	Q	numGroups
	f	Lbzt$a;	R	status
	f	I	S	celebrationTicks
	f	Ljava/util/Optional;	T	waveSpawnPos
	f	I	a	VILLAGE_RADIUS_BUFFER
	f	I	b	MAX_NO_ACTION_TIME
	f	I	c	MAX_CELEBRATION_TICKS
	f	I	d	TICKS_PER_DAY
	f	I	e	DEFAULT_MAX_BAD_OMEN_LEVEL
	f	I	f	VALID_RAID_RADIUS_SQR
	f	I	g	RAID_REMOVAL_THRESHOLD_SQR
	f	I	h	SECTION_RADIUS_FOR_FINDING_NEW_VILLAGE_CENTER
	f	I	i	ATTEMPT_RAID_FARTHEST
	f	I	j	ATTEMPT_RAID_CLOSE
	f	I	k	ATTEMPT_RAID_INSIDE
	f	I	l	VILLAGE_SEARCH_RADIUS
	f	I	m	RAID_TIMEOUT_TICKS
	f	I	n	NUM_SPAWN_ATTEMPTS
	f	Ljava/lang/String;	o	OMINOUS_BANNER_PATTERN_NAME
	f	Ljava/lang/String;	p	RAIDERS_REMAINING
	f	I	q	POST_RAID_TICK_LIMIT
	f	I	r	DEFAULT_PRE_RAID_TICKS
	f	I	s	OUTSIDE_RAID_BOUNDS_TIMEOUT
	f	I	t	LOW_MOB_THRESHOLD
	f	Ltj;	u	RAID_NAME_COMPONENT
	f	Ltj;	v	VICTORY
	f	Ltj;	w	DEFEAT
	f	Ltj;	x	RAID_BAR_VICTORY_COMPONENT
	f	Ltj;	y	RAID_BAR_DEFEAT_COMPONENT
	f	I	z	HERO_OF_THE_VILLAGE_DURATION
c	bzt$1	net/minecraft/world/entity/raid/Raid$1
	f	[I	a	$SwitchMap$net$minecraft$world$entity$raid$Raid$RaiderType
	f	[I	b	$SwitchMap$net$minecraft$world$Difficulty
c	bzt$a	net/minecraft/world/entity/raid/Raid$RaidStatus
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/lang/String;)Lbzt$a;	a	getByName
		p	0		name
	m	()[Lbzt$a;	b	$values
	f	Lbzt$a;	a	ONGOING
	f	Lbzt$a;	b	VICTORY
	f	Lbzt$a;	c	LOSS
	f	Lbzt$a;	d	STOPPED
	f	[Lbzt$a;	e	VALUES
	f	[Lbzt$a;	f	$VALUES
c	bzt$b	net/minecraft/world/entity/raid/Raid$RaiderType
	m	(Ljava/lang/String;ILbfl;[I)V	<init>	<init>
		p	3		type
		p	4		countInWave
	m	()[Lbzt$b;	a	$values
	f	Lbzt$b;	a	VINDICATOR
	f	Lbzt$b;	b	EVOKER
	f	Lbzt$b;	c	PILLAGER
	f	Lbzt$b;	d	WITCH
	f	Lbzt$b;	e	RAVAGER
	f	[Lbzt$b;	f	VALUES
	f	Lbfl;	g	entityType
	f	[I	h	spawnsPerWaveBeforeBonus
	f	[Lbzt$b;	i	$VALUES
c	bzu	net/minecraft/world/entity/raid/Raider
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Z)V	A	setCelebrating
		p	1		celebrating
	m	()Z	Q	requiresCustomPersistence
	m	()Lamq;	X_	getCelebrateSound
	m	(IZ)V	a	applyRaidBuffs
		p	1		wave
		p	2		unused
	m	(Lbem;)V	a	die
		p	1		damageSource
	m	(Lbem;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbzt;)V	a	setCurrentRaid
		p	1		raid
	m	(Lbzu;)Lapo;	a	access$000
	m	(Lcmx;Lbdw;Lbgb;Lbgr;Lre;)Lbgr;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(I)V	b	setWave
		p	1		wave
	m	(Lbvf;)V	b	pickUpItem
		p	1		item
	m	(Lbzu;)F	b	access$100
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()V	b_	aiStep
	m	(I)V	c	setTicksOutsideRaid
		p	1		outOfRaidCounter
	m	(Lbvf;)Z	c	lambda$static$0
		p	0		itemEntity
	m	(Lbzu;)Lapo;	c	access$200
	m	(Lbzu;)Z	d	access$300
	m	(Lbzu;)Lapo;	e	access$400
	m	(Lbzu;)Lapo;	f	access$500
	m	()V	fX	updateNoActionTime
	m	()Z	fZ	canJoinPatrol
	m	()Z	gf	canJoinRaid
	m	()Lbzt;	gg	getCurrentRaid
	m	()Z	gh	hasActiveRaid
	m	()I	gi	getWave
	m	()Z	gj	isCelebrating
	m	()I	gk	getTicksOutsideRaid
	m	(D)Z	h	removeWhenFarAway
		p	1		distanceSquared
	m	()V	x	registerGoals
	m	(Z)V	z	setCanJoinRaid
		p	1		ableToJoinRaid
	f	Ljava/util/function/Predicate;	b	ALLOWED_ITEMS
	f	Z	bS	canJoinRaid
	f	I	bT	ticksOutsideRaid
	f	Lacl;	c	IS_CELEBRATING
	f	Lbzt;	d	raid
	f	I	e	wave
c	bzu$a	net/minecraft/world/entity/raid/Raider$HoldGroundAttackGoal
	m	(Lbzu;Lbvi;F)V	<init>	<init>
		p	2		illager
		p	3		distance
	m	()Z	J_	requiresUpdateEveryTick
	m	()Z	a	canUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lbqk;	a	shoutTargeting
	f	Lbzu;	b	this$0
	f	Lbzu;	c	mob
	f	F	d	hostileRadiusSqr
c	bzu$b	net/minecraft/world/entity/raid/Raider$ObtainRaidLeaderBannerGoal
	m	(Lbzu;Lbzu;)V	<init>	<init>
		p	2		actor
	m	()Z	a	canUse
	m	()V	e	tick
	f	Lbzu;	a	this$0
	f	Lbzu;	b	mob
c	bzu$c	net/minecraft/world/entity/raid/Raider$RaiderCelebration
	m	(Lbzu;Lbzu;)V	<init>	<init>
		p	2		raider
	m	()Z	a	canUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lbzu;	a	this$0
	f	Lbzu;	b	mob
c	bzu$d	net/minecraft/world/entity/raid/Raider$RaiderMoveThroughVillageGoal
	m	(Lbzu;DI)V	<init>	<init>
		p	1		raider
		p	2		speed
		p	4		distance
	m	()Z	a	canUse
	m	(Lgt;)Z	a	hasNotVisited
		p	1		pos
	m	(Lhd;)Z	a	lambda$hasSuitablePoi$0
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	m	()Z	h	isValidRaid
	m	()Z	i	hasSuitablePoi
	m	()V	k	updateVisited
	f	Lbzu;	a	raider
	f	D	b	speedModifier
	f	Lgt;	c	poiPos
	f	Ljava/util/List;	d	visited
	f	I	e	distanceToPoi
	f	Z	f	stuck
c	bzv	net/minecraft/world/entity/raid/Raids
	m	(Laip;)V	<init>	<init>
		p	1		world
	m	()V	a	tick
	m	(I)Lbzt;	a	get
		p	1		id
	m	(Laip;Lgt;)Lbzt;	a	getOrCreateRaid
		p	1		world
		p	2		pos
	m	(Laip;Lre;)Lbzv;	a	load
		p	0		world
		p	1		nbt
	m	(Laiq;)Lbzt;	a	createOrExtendRaid
		p	1		player
	m	(Lbzu;Lbzt;)Z	a	canJoinRaid
		p	0		raider
		p	1		raid
	m	(Lgt;I)Lbzt;	a	getNearbyRaid
		p	1		pos
		p	2		searchDistance
	m	(Lhd;)Ljava/lang/String;	a	getFileId
		p	0		dimensionTypeEntry
	m	(Lre;)Lre;	a	save
		p	1		nbt
	m	(Lhd;)Z	b	lambda$createOrExtendRaid$0
		p	0		poiType
	m	()I	d	getUniqueId
	f	Ljava/lang/String;	a	RAID_FILE_ID
	f	Ljava/util/Map;	b	raidMap
	f	Laip;	c	level
	f	I	d	nextAvailableID
	f	I	e	tick
c	bzw	net/minecraft/world/entity/raid/package-info
c	bzx	net/minecraft/world/entity/schedule/Activity
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		id
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/lang/String;)Lbzx;	a	register
		p	0		id
	f	Ljava/lang/String;	A	name
	f	I	B	hashCode
	f	Lbzx;	a	CORE
	f	Lbzx;	b	IDLE
	f	Lbzx;	c	WORK
	f	Lbzx;	d	PLAY
	f	Lbzx;	e	REST
	f	Lbzx;	f	MEET
	f	Lbzx;	g	PANIC
	f	Lbzx;	h	RAID
	f	Lbzx;	i	PRE_RAID
	f	Lbzx;	j	HIDE
	f	Lbzx;	k	FIGHT
	f	Lbzx;	l	CELEBRATE
	f	Lbzx;	m	ADMIRE_ITEM
	f	Lbzx;	n	AVOID
	f	Lbzx;	o	RIDE
	f	Lbzx;	p	PLAY_DEAD
	f	Lbzx;	q	LONG_JUMP
	f	Lbzx;	r	RAM
	f	Lbzx;	s	TONGUE
	f	Lbzx;	t	SWIM
	f	Lbzx;	u	LAY_SPAWN
	f	Lbzx;	v	SNIFF
	f	Lbzx;	w	INVESTIGATE
	f	Lbzx;	x	ROAR
	f	Lbzx;	y	EMERGE
	f	Lbzx;	z	DIG
c	bzy	net/minecraft/world/entity/schedule/Keyframe
	m	(IF)V	<init>	<init>
		p	1		startTime
		p	2		priority
	m	()I	a	getTimeStamp
	m	()F	b	getValue
	f	I	a	timeStamp
	f	F	b	value
c	bzz	net/minecraft/world/entity/schedule/Schedule
	m	(I)Lbzx;	a	getActivityAt
		p	1		time
	m	(ILjava/util/Map$Entry;)D	a	lambda$getActivityAt$1
		p	1		rule
	m	(Lbzx;)V	a	ensureTimelineExistsFor
		p	1		activity
	m	(Lbzx;Ljava/util/Map$Entry;)Z	a	lambda$getAllTimelinesExceptFor$0
		p	1		rule
	m	(Ljava/lang/String;)Lcaa;	a	register
		p	0		id
	m	(Lbzx;)Lcab;	b	getTimelineFor
		p	1		activity
	m	(Lbzx;)Ljava/util/List;	c	getAllTimelinesExceptFor
		p	1		activity
	f	I	a	WORK_START_TIME
	f	I	b	TOTAL_WORK_TIME
	f	Lbzz;	c	EMPTY
	f	Lbzz;	d	SIMPLE
	f	Lbzz;	e	VILLAGER_BABY
	f	Lbzz;	f	VILLAGER_DEFAULT
	f	Ljava/util/Map;	g	timelines
c	caa	net/minecraft/world/entity/schedule/ScheduleBuilder
	m	(Lbzz;)V	<init>	<init>
		p	1		schedule
	m	()Lbzz;	a	build
	m	(ILbzx;)Lcaa;	a	changeActivityAt
		p	1		startTime
		p	2		activity
	m	(Lcaa$a;)V	a	lambda$build$1
		p	1		activity
	m	(Lcaa$a;Lcab;)V	a	lambda$build$0
		p	1		rule
	f	Lbzz;	a	schedule
	f	Ljava/util/List;	b	transitions
c	caa$a	net/minecraft/world/entity/schedule/ScheduleBuilder$ActivityTransition
	m	(ILbzx;)V	<init>	<init>
		p	1		startTime
		p	2		activity
	m	()I	a	getTime
	m	()Lbzx;	b	getActivity
	f	I	a	time
	f	Lbzx;	b	activity
c	cab	net/minecraft/world/entity/schedule/Timeline
	m	()Lcom/google/common/collect/ImmutableList;	a	getKeyframes
	m	(I)F	a	getValueAt
		p	1		time
	m	(IF)Lcab;	a	addKeyframe
		p	1		startTime
		p	2		priority
	m	(Lit/unimi/dsi/fastutil/ints/Int2ObjectSortedMap;Lbzy;)V	a	lambda$sortAndDeduplicateKeyframes$0
		p	0		entry
	m	(Ljava/util/Collection;)Lcab;	a	addKeyframes
		p	1		entries
	m	()V	b	sortAndDeduplicateKeyframes
	f	Ljava/util/List;	a	keyframes
	f	I	b	previousIndex
c	cac	net/minecraft/world/entity/schedule/package-info
c	cad	net/minecraft/world/entity/vehicle/AbstractMinecart
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lbfl;Lcmi;DDD)V	<init>	<init>
		p	1		type
		p	2		world
		p	3		x
		p	5		y
		p	7		z
	m	()Lecz;	A_	getBoundingBoxForCulling
	m	(DDDD)Lede;	a	getPosOffs
		p	1		x
		p	3		y
		p	5		z
		p	7		offset
	m	(DDDFFIZ)V	a	lerpTo
		p	1		x
		p	3		y
		p	5		z
		p	7		yaw
		p	8		pitch
		p	9		interpolationSteps
		p	10		interpolate
	m	(F)V	a	setDamage
		p	1		damageWobbleStrength
	m	(IIIZ)V	a	activateMinecart
		p	1		x
		p	2		y
		p	3		z
		p	4		powered
	m	(Lbem;)V	a	destroy
		p	1		damageSource
	m	(Lbem;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lcmi;DDDLcad$a;)Lcad;	a	createMinecart
		p	0		world
		p	1		x
		p	3		y
		p	5		z
		p	7		type
	m	(Ldcv;)Lcom/mojang/datafixers/util/Pair;	a	exits
		p	0		shape
	m	(Lgt$a;)Ledx;	a	lambda$getDismountLocationForPassenger$0
	m	(Lgt;)Z	a	isRedstoneConductor
		p	1		pos
	m	(Lgz$a;Ll$a;)Lede;	a	getRelativePortalPosition
		p	1		portalAxis
		p	2		portalRect
	m	(Ljava/util/EnumMap;)V	a	lambda$static$2
		p	0		map
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Z)V	a	setCustomDisplay
		p	1		present
	m	()F	aF	getBlockSpeedFactor
	m	()Lbfh$b;	aQ	getMovementEmission
	m	()V	a_	defineSynchedData
	m	(Lbfx;)Lede;	b	getDismountLocationForPassenger
		p	1		passenger
	m	(Ldbq;)V	b	setDisplayBlockState
		p	1		state
	m	(Lgt;)Ledx;	b	lambda$getDismountLocationForPassenger$1
		p	1		pos
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Z	bm	isPickable
	m	()Z	bn	isPushable
	m	()D	bv	getPassengersRidingOffset
	m	(I)V	c	setHurtTime
		p	1		wobbleTicks
	m	(Lgt;Ldbq;)V	c	moveAlongTrack
		p	1		pos
		p	2		state
	m	()Lgz;	cB	getMotionDirection
	m	(I)V	d	setHurtDir
		p	1		wobbleSide
	m	()Lcfv;	dt	getPickResult
	m	(Lbfh;)V	g	push
		p	1		entity
	m	(Lbfh;)Z	h	canCollideWith
		p	1		other
	m	()Lcfq;	i	getDropItem
	m	()D	j	getMaxSpeed
	m	()V	k	comeOffTrack
	m	()V	l	tick
	m	(DDD)V	l	lerpMotion
		p	1		x
		p	3		y
		p	5		z
	m	(I)V	l	setDisplayOffset
		p	1		offset
	m	()V	o	applyNaturalSlowdown
	m	()F	p	getDamage
	m	()I	q	getHurtTime
	m	(DDD)Lede;	q	getPos
		p	1		x
		p	3		y
		p	5		z
	m	(F)V	q	animateHurt
		p	1		yaw
	m	()I	r	getHurtDir
	m	()Lcad$a;	s	getMinecartType
	m	()Ldbq;	t	getDisplayBlockState
	m	()Ldbq;	v	getDefaultDisplayBlockState
	m	()I	w	getDisplayOffset
	m	()I	x	getDefaultDisplayOffset
	m	()Z	y	hasCustomDisplay
	f	F	b	WATER_SLOWDOWN_FACTOR
	f	Lacl;	c	DATA_ID_HURT
	f	Lacl;	d	DATA_ID_HURTDIR
	f	Lacl;	e	DATA_ID_DAMAGE
	f	Lacl;	f	DATA_ID_DISPLAY_BLOCK
	f	Lacl;	g	DATA_ID_DISPLAY_OFFSET
	f	Lacl;	h	DATA_ID_CUSTOM_DISPLAY
	f	Lcom/google/common/collect/ImmutableMap;	i	POSE_DISMOUNT_HEIGHTS
	f	Z	j	flipped
	f	Ljava/util/Map;	k	EXITS
	f	I	l	lSteps
	f	D	m	lx
	f	D	n	ly
	f	D	o	lz
	f	D	p	lyr
	f	D	q	lxr
	f	D	r	lxd
	f	D	s	lyd
	f	D	t	lzd
c	cad$1	net/minecraft/world/entity/vehicle/AbstractMinecart$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$state$properties$RailShape
	f	[I	b	$SwitchMap$net$minecraft$world$entity$vehicle$AbstractMinecart$Type
c	cad$a	net/minecraft/world/entity/vehicle/AbstractMinecart$Type
	m	()[Lcad$a;	a	$values
	f	Lcad$a;	a	RIDEABLE
	f	Lcad$a;	b	CHEST
	f	Lcad$a;	c	FURNACE
	f	Lcad$a;	d	TNT
	f	Lcad$a;	e	SPAWNER
	f	Lcad$a;	f	HOPPER
	f	Lcad$a;	g	COMMAND_BLOCK
	f	[Lcad$a;	h	$VALUES
c	cae	net/minecraft/world/entity/vehicle/AbstractMinecartContainer
	m	(Lbfl;DDDLcmi;)V	<init>	<init>
		p	1		type
		p	2		x
		p	4		y
		p	6		z
		p	8		world
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()J	A	getLootTableSeed
	m	()Lhm;	C	getItemStacks
	m	()V	D	clearItemStacks
	m	()V	a	clearContent
	m	(I)Lcfv;	a	getItem
		p	1		slot
	m	(II)Lcfv;	a	removeItem
		p	1		slot
		p	2		amount
	m	(ILbyl;)Lcbd;	a	createMenu
		p	1		syncId
		p	2		playerInventory
	m	(ILcfv;)V	a	setItem
		p	1		slot
		p	2		stack
	m	(J)V	a	setLootTableSeed
		p	1		lootTableSeed
	m	(Ladd;)V	a	setLootTable
		p	1		lootTableId
	m	(Ladd;J)V	a	setLootTable
		p	1		id
		p	2		lootSeed
	m	(Lbem;)V	a	destroy
		p	1		damageSource
	m	(Lbfh$c;)V	a	remove
		p	1		reason
	m	(Lbym;)Z	a	stillValid
		p	1		player
	m	(Lbym;Lbdx;)Lbdy;	a	interact
		p	1		player
		p	2		hand
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(I)Lbgq;	a_	getSlot
		p	1		mappedIndex
	m	(I)Lcfv;	b	removeItemNoUpdate
		p	1		slot
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(ILbyl;Lbym;)Lcbd;	createMenu	createMenu
		p	1		syncId
		p	2		playerInventory
		p	3		player
	m	()V	e	setChanged
	m	()V	o	applyNaturalSlowdown
	m	()Ladd;	z	getLootTable
	f	Lhm;	c	itemStacks
	f	Ladd;	d	lootTable
	f	J	e	lootTableSeed
c	caf	net/minecraft/world/entity/vehicle/Boat
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcmi;DDD)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
	m	()Lcaf$a;	A	isUnderwater
	m	()V	C	floatBoat
	m	()V	D	controlBoat
	m	()I	E	getBubbleTime
	m	(DDDFFIZ)V	a	lerpTo
		p	1		x
		p	3		y
		p	5		z
		p	7		yaw
		p	8		pitch
		p	9		interpolationSteps
		p	10		interpolate
	m	(DZLdbq;Lgt;)V	a	checkFallDamage
		p	1		heightDifference
		p	3		onGround
		p	4		state
		p	5		landedPosition
	m	(F)V	a	setDamage
		p	1		wobbleStrength
	m	(IF)F	a	getRowingTime
		p	1		paddle
		p	2		tickDelta
	m	(Lbem;)V	a	destroy
		p	1		source
	m	(Lbem;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbfh;)Z	a	hasEnoughSpaceFor
		p	1		entity
	m	(Lbfh;Lbfh;)Z	a	canVehicleCollide
		p	0		entity
		p	1		other
	m	(Lbgj;Lbfi;)F	a	getEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lbym;Lbdx;)Lbdy;	a	interact
		p	1		player
		p	2		hand
	m	(Lcaf$b;)V	a	setVariant
		p	1		variant
	m	(Lgz$a;Ll$a;)Lede;	a	getRelativePortalPosition
		p	1		portalAxis
		p	2		portalRect
	m	(Ljava/lang/Object;)V	a	setVariant
		p	1		variant
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(ZZ)V	a	setPaddleState
		p	1		leftMoving
		p	2		rightMoving
	m	(ZZZZ)V	a	setInput
		p	1		pressingLeft
		p	2		pressingRight
		p	3		pressingForward
		p	4		pressingBack
	m	()Lbfh$b;	aQ	getMovementEmission
	m	()Z	aX	isUnderWater
	m	()V	a_	defineSynchedData
	m	(F)F	b	getBubbleAngle
		p	1		tickDelta
	m	(I)V	b	setBubbleTime
		p	1		wobbleTicks
	m	(Lbfh;)V	b	clampRotation
		p	1		entity
	m	(Lbfx;)Lede;	b	getDismountLocationForPassenger
		p	1		passenger
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Z	bm	isPickable
	m	()Z	bn	isPushable
	m	()Z	bs	canBeCollidedWith
	m	()D	bv	getPassengersRidingOffset
	m	()Ljava/lang/Object;	c	getVariant
	m	(I)Z	c	getPaddleState
		p	1		paddle
	m	(Lbfh;)Z	c	lambda$tickBubbleColumn$0
		p	0		entity
	m	()Lgz;	cB	getMotionDirection
	m	()Lbfx;	cK	getControllingPassenger
	m	(I)V	d	setHurtTime
		p	1		wobbleTicks
	m	()Lcfv;	dt	getPickResult
	m	(Lbfh;)V	g	push
		p	1		entity
	m	(Lbfh;)Z	h	canCollideWith
		p	1		other
	m	()Lcfq;	i	getDropItem
	m	(Lbfh;)V	i	positionRider
		p	1		passenger
	m	()Lamq;	j	getPaddleSound
	m	(Lbfh;)V	j	onPassengerTurned
		p	1		passenger
	m	()F	k	getWaterLevelAbove
	m	(Z)V	k	onAboveBubbleCol
		p	1		drag
	m	()V	l	tick
	m	(I)V	l	setHurtDir
		p	1		side
	m	()F	o	getGroundFriction
	m	(Lbfh;)Z	o	canAddPassenger
		p	1		passenger
	m	()F	p	getSinglePassengerXOffset
	m	()F	q	getDamage
	m	(F)V	q	animateHurt
		p	1		yaw
	m	()I	r	getHurtTime
	m	()I	s	getHurtDir
	m	()Lcaf$b;	t	getVariant
	m	()I	v	getMaxPassengers
	m	()V	w	tickBubbleColumn
	m	()V	x	tickLerp
	m	()Lcaf$a;	y	getStatus
	m	()Z	z	checkInWater
	f	D	aC	lerpZ
	f	D	aD	lerpYRot
	f	D	aE	lerpXRot
	f	Z	aF	inputLeft
	f	Z	aG	inputRight
	f	Z	aH	inputUp
	f	Z	aI	inputDown
	f	D	aJ	waterLevel
	f	F	aK	landFriction
	f	Lcaf$a;	aL	status
	f	Lcaf$a;	aM	oldStatus
	f	D	aN	lastYd
	f	Z	aO	isAboveBubbleColumn
	f	Z	aP	bubbleColumnDirectionIsDown
	f	F	aQ	bubbleMultiplier
	f	F	aR	bubbleAngle
	f	F	aS	bubbleAngleO
	f	I	b	PADDLE_LEFT
	f	I	c	PADDLE_RIGHT
	f	D	d	PADDLE_SOUND_TIME
	f	I	e	BUBBLE_TIME
	f	Lacl;	f	DATA_ID_HURT
	f	Lacl;	g	DATA_ID_HURTDIR
	f	Lacl;	h	DATA_ID_DAMAGE
	f	Lacl;	i	DATA_ID_TYPE
	f	Lacl;	j	DATA_ID_PADDLE_LEFT
	f	Lacl;	k	DATA_ID_PADDLE_RIGHT
	f	Lacl;	l	DATA_ID_BUBBLE_TIME
	f	I	m	TIME_TO_EJECT
	f	F	n	PADDLE_SPEED
	f	[F	o	paddlePositions
	f	F	p	invFriction
	f	F	q	outOfControlTicks
	f	F	r	deltaRotation
	f	I	s	lerpSteps
	f	D	t	lerpX
	f	D	u	lerpY
c	caf$1	net/minecraft/world/entity/vehicle/Boat$1
	f	[I	a	$SwitchMap$net$minecraft$world$entity$vehicle$Boat$Type
	f	[I	b	$SwitchMap$net$minecraft$world$entity$vehicle$Boat$Status
c	caf$a	net/minecraft/world/entity/vehicle/Boat$Status
	m	()[Lcaf$a;	a	$values
	f	Lcaf$a;	a	IN_WATER
	f	Lcaf$a;	b	UNDER_WATER
	f	Lcaf$a;	c	UNDER_FLOWING_WATER
	f	Lcaf$a;	d	ON_LAND
	f	Lcaf$a;	e	IN_AIR
	f	[Lcaf$a;	f	$VALUES
c	caf$b	net/minecraft/world/entity/vehicle/Boat$Type
	m	(Ljava/lang/String;ILcpi;Ljava/lang/String;)V	<init>	<init>
		p	3		baseBlock
		p	4		name
	m	()Ljava/lang/String;	a	getName
	m	(I)Lcaf$b;	a	byId
		p	0		type
	m	(Ljava/lang/String;)Lcaf$b;	a	byName
		p	0		name
	m	()Lcpi;	b	getPlanks
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Lcaf$b;	d	$values
	f	Lcaf$b;	a	OAK
	f	Lcaf$b;	b	SPRUCE
	f	Lcaf$b;	c	BIRCH
	f	Lcaf$b;	d	JUNGLE
	f	Lcaf$b;	e	ACACIA
	f	Lcaf$b;	f	CHERRY
	f	Lcaf$b;	g	DARK_OAK
	f	Lcaf$b;	h	MANGROVE
	f	Lcaf$b;	i	BAMBOO
	f	Laqa$a;	j	CODEC
	f	Ljava/lang/String;	k	name
	f	Lcpi;	l	planks
	f	Ljava/util/function/IntFunction;	m	BY_ID
	f	[Lcaf$b;	n	$VALUES
c	cag	net/minecraft/world/entity/vehicle/ChestBoat
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcmi;DDD)V	<init>	<init>
		p	1		world
	m	()J	A	getLootTableSeed
	m	()Lhm;	C	getItemStacks
	m	()V	D	clearItemStacks
	m	()V	a	clearContent
	m	(I)Lcfv;	a	getItem
		p	1		slot
	m	(II)Lcfv;	a	removeItem
		p	1		slot
		p	2		amount
	m	(ILcfv;)V	a	setItem
		p	1		slot
		p	2		stack
	m	(J)V	a	setLootTableSeed
		p	1		lootTableSeed
	m	(Ladd;)V	a	setLootTable
		p	1		lootTableId
	m	(Lbem;)V	a	destroy
		p	1		source
	m	(Lbfh$c;)V	a	remove
		p	1		reason
	m	(Lbym;)Z	a	stillValid
		p	1		player
	m	(Lbym;Lbdx;)Lbdy;	a	interact
		p	1		player
		p	2		hand
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(I)Lbgq;	a_	getSlot
		p	1		mappedIndex
	m	()I	b	getContainerSize
	m	(I)Lcfv;	b	removeItemNoUpdate
		p	1		slot
	m	(Lbym;)V	b	openCustomInventoryScreen
		p	1		player
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lbym;)V	c	stopOpen
		p	1		player
	m	(ILbyl;Lbym;)Lcbd;	createMenu	createMenu
		p	1		syncId
		p	2		playerInventory
		p	3		player
	m	()V	e	setChanged
	m	(Lbym;)V	e	unpackLootTable
		p	1		player
	m	()Lcfq;	i	getDropItem
	m	()F	p	getSinglePassengerXOffset
	m	()I	v	getMaxPassengers
	m	()Ladd;	z	getLootTable
	f	I	f	CONTAINER_SIZE
	f	Lhm;	g	itemStacks
	f	Ladd;	h	lootTable
	f	J	i	lootTableSeed
c	cag$1	net/minecraft/world/entity/vehicle/ChestBoat$1
	f	[I	a	$SwitchMap$net$minecraft$world$entity$vehicle$Boat$Type
c	cah	net/minecraft/world/entity/vehicle/ContainerEntity
	m	()J	A	getLootTableSeed
	m	()Lhm;	C	getItemStacks
	m	()V	D	clearItemStacks
	m	()Lcmi;	Y	getLevel
	m	(J)V	a	setLootTableSeed
		p	1		lootTableSeed
	m	(Ladd;)V	a	setLootTable
		p	1		lootTableId
	m	(Lbem;Lcmi;Lbfh;)V	a	chestVehicleDestroyed
		p	1		source
		p	2		world
		p	3		vehicle
	m	()Z	aa_	isEmpty
	m	(II)Lcfv;	b	removeChestVehicleItem
		p	1		slot
		p	2		amount
	m	(Lre;)V	b_	readChestVehicleSaveData
		p	1		nbt
	m	(ILcfv;)V	c	setChestVehicleItem
		p	1		slot
		p	2		stack
	m	(Lre;)V	c	addChestVehicleSaveData
		p	1		nbt
	m	(Lbym;)Lbdy;	c_	interactWithContainerVehicle
		p	1		player
	m	()Z	dB	isRemoved
	m	()Lede;	de	position
	m	(I)Lcfv;	e_	removeChestVehicleItemNoUpdate
		p	1		slot
	m	()V	f	clearChestVehicleContent
	m	(Lbym;)V	f	unpackChestVehicleLootTable
		p	1		player
	m	(I)Lcfv;	f_	getChestVehicleItem
		p	1		slot
	m	()Z	g	isChestVehicleEmpty
	m	(Lbym;)Z	g	isChestVehicleStillValid
		p	1		player
	m	(I)Lbgq;	g_	getChestVehicleSlot
		p	1		slot
	m	()Ladd;	z	getLootTable
c	cah$1	net/minecraft/world/entity/vehicle/ContainerEntity$1
	m	()Lcfv;	a	get
	m	(Lcfv;)Z	a	set
		p	1		stack
	f	I	a	val$slot
	f	Lcah;	c	this$0
c	cai	net/minecraft/world/entity/vehicle/DismountHelper
	m	(D)Z	a	isBlockFloorValid
		p	0		height
	m	(Lbfl;Lcls;Lgt;Z)Lede;	a	findSafeDismountLocation
		p	0		entityType
		p	1		world
		p	2		pos
		p	3		ignoreInvalidPos
	m	(Lclo;Lgt;)Ledx;	a	nonClimbableShape
		p	0		world
		p	1		pos
	m	(Lcls;Lbfx;Lecz;)Z	a	canDismountTo
		p	0		world
		p	1		entity
		p	2		targetBox
	m	(Lcls;Lede;Lbfx;Lbgj;)Z	a	canDismountTo
		p	0		world
		p	1		offset
		p	2		entity
		p	3		pose
	m	(Lcls;Lgt;)Ledx;	a	lambda$findSafeDismountLocation$0
	m	(Lgt;ILjava/util/function/Function;)D	a	findCeilingFrom
		p	0		pos
		p	1		maxDistance
		p	2		collisionShapeGetter
	m	(Lgz;)[[I	a	offsetsForDirection
		p	0		movementDirection
c	caj	net/minecraft/world/entity/vehicle/Minecart
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcmi;DDD)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
	m	(IIIZ)V	a	activateMinecart
		p	1		x
		p	2		y
		p	3		z
		p	4		powered
	m	(Lbym;Lbdx;)Lbdy;	a	interact
		p	1		player
		p	2		hand
	m	()Lcfq;	i	getDropItem
	m	()Lcad$a;	s	getMinecartType
c	cak	net/minecraft/world/entity/vehicle/MinecartChest
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcmi;DDD)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
	m	(ILbyl;)Lcbd;	a	createMenu
		p	1		syncId
		p	2		playerInventory
	m	(Lbym;Lbdx;)Lbdy;	a	interact
		p	1		player
		p	2		hand
	m	()I	b	getContainerSize
	m	(Lbym;)V	c	stopOpen
		p	1		player
	m	()Lcfq;	i	getDropItem
	m	()Lcad$a;	s	getMinecartType
	m	()Ldbq;	v	getDefaultDisplayBlockState
	m	()I	x	getDefaultDisplayOffset
c	cal	net/minecraft/world/entity/vehicle/MinecartCommandBlock
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcmi;DDD)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
	m	(IIIZ)V	a	activateMinecart
		p	1		x
		p	2		y
		p	3		z
		p	4		powered
	m	(Lacl;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Lbym;Lbdx;)Lbdy;	a	interact
		p	1		player
		p	2		hand
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Z	cJ	onlyOpCanSetNbt
	m	()Lcfq;	i	getDropItem
	m	()Lcad$a;	s	getMinecartType
	m	()Ldbq;	v	getDefaultDisplayBlockState
	m	()Lclj;	z	getCommandBlock
	f	Lacl;	c	DATA_ID_COMMAND_NAME
	f	Lacl;	d	DATA_ID_LAST_OUTPUT
	f	Lclj;	e	commandBlock
	f	I	f	ACTIVATION_DELAY
	f	I	g	lastActivated
c	cal$a	net/minecraft/world/entity/vehicle/MinecartCommandBlock$MinecartCommandBase
	m	()Laip;	e	getLevel
	m	()V	f	onUpdated
	m	()Lede;	g	getPosition
	m	()Lcal;	h	getMinecart
	m	()Ldr;	i	createCommandSourceStack
	f	Lcal;	b	this$0
c	cam	net/minecraft/world/entity/vehicle/MinecartFurnace
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcmi;DDD)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
	m	(Lbym;Lbdx;)Lbdy;	a	interact
		p	1		player
		p	2		hand
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lgt;Ldbq;)V	c	moveAlongTrack
		p	1		pos
		p	2		state
	m	()Lcfq;	i	getDropItem
	m	()D	j	getMaxSpeed
	m	()V	l	tick
	m	()V	o	applyNaturalSlowdown
	m	(Z)V	p	setHasFuel
		p	1		lit
	m	()Lcad$a;	s	getMinecartType
	m	()Ldbq;	v	getDefaultDisplayBlockState
	m	()Z	z	hasFuel
	f	D	c	xPush
	f	D	d	zPush
	f	Lacl;	e	DATA_ID_FUEL
	f	I	f	fuel
	f	Lciu;	g	INGREDIENT
c	can	net/minecraft/world/entity/vehicle/MinecartHopper
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcmi;DDD)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
	m	()Z	E	isEnabled
	m	()D	F	getLevelX
	m	()D	G	getLevelY
	m	()D	I	getLevelZ
	m	()Z	J	suckInItems
	m	(IIIZ)V	a	activateMinecart
		p	1		x
		p	2		y
		p	3		z
		p	4		powered
	m	(ILbyl;)Lcbd;	a	createMenu
		p	1		syncId
		p	2		playerInventory
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()I	b	getContainerSize
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Lcfq;	i	getDropItem
	m	()V	l	tick
	m	(Z)V	p	setEnabled
		p	1		enabled
	m	()Lcad$a;	s	getMinecartType
	m	()Ldbq;	v	getDefaultDisplayBlockState
	m	()I	x	getDefaultDisplayOffset
	f	Z	f	enabled
c	cao	net/minecraft/world/entity/vehicle/MinecartSpawner
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcmi;DDD)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
	m	(Lcmi;)Ljava/lang/Runnable;	a	createTicker
		p	1		world
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	(Lcmi;)V	b	lambda$createTicker$1
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lcmi;)V	c	lambda$createTicker$0
	m	()Z	cJ	onlyOpCanSetNbt
	m	()Lcfq;	i	getDropItem
	m	()V	l	tick
	m	()Lcad$a;	s	getMinecartType
	m	()Ldbq;	v	getDefaultDisplayBlockState
	m	()Lclk;	z	getSpawner
	f	Lclk;	c	spawner
	f	Ljava/lang/Runnable;	d	ticker
c	cao$1	net/minecraft/world/entity/vehicle/MinecartSpawner$1
	m	(Lcmi;Lgt;I)V	a	broadcastEvent
		p	1		world
		p	2		pos
		p	3		status
	f	Lcao;	a	this$0
c	cap	net/minecraft/world/entity/vehicle/MinecartTNT
	m	(Lbfl;Lcmi;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcmi;DDD)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
	m	()I	A	getFuse
	m	()Z	C	isPrimed
	m	(FFLbem;)Z	a	causeFallDamage
		p	1		fallDistance
		p	2		damageMultiplier
		p	3		damageSource
	m	(IIIZ)V	a	activateMinecart
		p	1		x
		p	2		y
		p	3		z
		p	4		powered
	m	(Lbem;)V	a	destroy
		p	1		damageSource
	m	(Lbem;D)V	a	explode
		p	1		damageSource
		p	2		power
	m	(Lbem;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lcma;Lclo;Lgt;Ldbq;F)Z	a	shouldBlockExplode
		p	1		explosion
		p	2		world
		p	3		pos
		p	4		state
		p	5		explosionPower
	m	(Lcma;Lclo;Lgt;Ldbq;Ldwj;F)F	a	getBlockExplosionResistance
		p	1		explosion
		p	2		world
		p	3		pos
		p	4		blockState
		p	5		fluidState
		p	6		max
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(D)V	h	explode
		p	1		power
	m	()Lcfq;	i	getDropItem
	m	()V	l	tick
	m	()Lcad$a;	s	getMinecartType
	m	()Ldbq;	v	getDefaultDisplayBlockState
	m	()V	z	primeFuse
	f	B	c	EVENT_PRIME
	f	I	d	fuse
c	caq	net/minecraft/world/entity/vehicle/package-info
c	car	net/minecraft/world/flag/FeatureElement
	m	(Lcau;)Z	a	isEnabled
		p	1		enabledFeatures
	m	()Lcau;	m	requiredFeatures
	f	Ljava/util/Set;	bv	FILTERED_REGISTRIES
c	cas	net/minecraft/world/flag/FeatureFlag
	m	(Lcav;I)V	<init>	<init>
		p	1		universe
		p	2		id
	f	Lcav;	a	universe
	f	J	b	mask
c	cat	net/minecraft/world/flag/FeatureFlagRegistry
	m	(Lcav;Lcau;Ljava/util/Map;)V	<init>	<init>
		p	1		universe
		p	2		featureSet
		p	3		featureFlags
	m	()Lcau;	a	allFlags
	m	(Ladd;)V	a	lambda$fromNames$0
		p	0		feature
	m	(Lcau;)Z	a	isSubset
		p	1		features
	m	(Lcau;Ljava/util/Set;Ladd;Lcas;)V	a	lambda$toNames$1
		p	2		identifier
		p	3		featureFlag
	m	(Ljava/lang/Iterable;)Lcau;	a	fromNames
		p	1		features
	m	(Ljava/lang/Iterable;Ljava/util/function/Consumer;)Lcau;	a	fromNames
		p	1		features
		p	2		unknownFlagConsumer
	m	(Ljava/util/List;)Lcom/mojang/serialization/DataResult;	a	lambda$codec$3
		p	1		featureIds
	m	(Ljava/util/Set;)Ljava/lang/String;	a	lambda$codec$2
	m	([Lcas;)Lcau;	a	subset
		p	1		features
	m	()Lcom/mojang/serialization/Codec;	b	codec
	m	(Lcau;)Ljava/util/Set;	b	toNames
		p	1		features
	m	(Lcau;)Ljava/util/List;	c	lambda$codec$4
		p	1		features
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lcav;	b	universe
	f	Ljava/util/Map;	c	names
	f	Lcau;	d	allFlags
c	cat$a	net/minecraft/world/flag/FeatureFlagRegistry$Builder
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		universe
	m	()Lcat;	a	build
	m	(Ladd;)Lcas;	a	create
		p	1		feature
	m	(Ljava/lang/String;)Lcas;	a	createVanilla
		p	1		feature
	f	Lcav;	a	universe
	f	I	b	id
	f	Ljava/util/Map;	c	flags
c	cau	net/minecraft/world/flag/FeatureFlagSet
	m	(Lcav;J)V	<init>	<init>
		p	1		universe
		p	2		featuresMask
	m	()Lcau;	a	of
	m	(Lcas;)Lcau;	a	of
		p	0		feature
	m	(Lcas;[Lcas;)Lcau;	a	of
		p	0		feature1
		p	1		features
	m	(Lcau;)Z	a	isSubsetOf
		p	1		features
	m	(Lcav;JLjava/lang/Iterable;)J	a	computeMask
		p	0		universe
		p	1		featuresMask
		p	3		newFeatures
	m	(Lcav;Ljava/util/Collection;)Lcau;	a	create
		p	0		universe
		p	1		features
	m	(Lcas;)Z	b	contains
		p	1		feature
	m	(Lcau;)Lcau;	b	join
		p	1		features
	f	I	a	MAX_CONTAINER_SIZE
	f	Lcau;	b	EMPTY
	f	Lcav;	c	universe
	f	J	d	mask
c	cav	net/minecraft/world/flag/FeatureFlagUniverse
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		name
	f	Ljava/lang/String;	a	id
c	caw	net/minecraft/world/flag/FeatureFlags
	m	(Lcat;Lcau;Lcau;)Ljava/lang/String;	a	printMissingFlags
		p	0		featureManager
		p	1		featuresToCheck
		p	2		features
	m	(Lcau;)Z	a	isExperimental
		p	0		features
	m	(Lcau;Lcau;)Ljava/lang/String;	a	printMissingFlags
		p	0		featuresToCheck
		p	1		features
	m	(Ljava/util/Set;Ladd;)Z	a	lambda$printMissingFlags$0
		p	1		id
	f	Lcas;	a	VANILLA
	f	Lcas;	b	BUNDLE
	f	Lcas;	c	UPDATE_1_20
	f	Lcat;	d	REGISTRY
	f	Lcom/mojang/serialization/Codec;	e	CODEC
	f	Lcau;	f	VANILLA_SET
	f	Lcau;	g	DEFAULT_FLAGS
c	cax	net/minecraft/world/flag/package-info
c	cay	net/minecraft/world/food/FoodConstants
	f	I	a	MAX_FOOD
	f	F	b	MAX_SATURATION
	f	F	c	START_SATURATION
	f	F	d	SATURATION_FLOOR
	f	F	e	EXHAUSTION_DROP
	f	I	f	HEALTH_TICK_COUNT
	f	I	g	HEALTH_TICK_COUNT_SATURATED
	f	I	h	HEAL_LEVEL
	f	I	i	SPRINT_LEVEL
	f	I	j	STARVE_LEVEL
	f	F	k	FOOD_SATURATION_POOR
	f	F	l	FOOD_SATURATION_LOW
	f	F	m	FOOD_SATURATION_NORMAL
	f	F	n	FOOD_SATURATION_GOOD
	f	F	o	FOOD_SATURATION_MAX
	f	F	p	FOOD_SATURATION_SUPERNATURAL
	f	F	q	EXHAUSTION_HEAL
	f	F	r	EXHAUSTION_JUMP
	f	F	s	EXHAUSTION_SPRINT_JUMP
	f	F	t	EXHAUSTION_MINE
	f	F	u	EXHAUSTION_ATTACK
	f	F	v	EXHAUSTION_WALK
	f	F	w	EXHAUSTION_CROUCH
	f	F	x	EXHAUSTION_SPRINT
	f	F	y	EXHAUSTION_SWIM
c	caz	net/minecraft/world/food/FoodData
	m	()I	a	getFoodLevel
	m	(F)V	a	addExhaustion
		p	1		exhaustion
	m	(I)V	a	setFoodLevel
		p	1		foodLevel
	m	(IF)V	a	eat
		p	1		food
		p	2		saturationModifier
	m	(Lbym;)V	a	tick
		p	1		player
	m	(Lcfq;Lcfv;)V	a	eat
		p	1		item
		p	2		stack
	m	(Lre;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()I	b	getLastFoodLevel
	m	(F)V	b	setSaturation
		p	1		saturationLevel
	m	(Lre;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Z	c	needsFood
	m	(F)V	c	setExhaustion
		p	1		exhaustion
	m	()F	d	getExhaustionLevel
	m	()F	e	getSaturationLevel
	f	I	a	foodLevel
	f	F	b	saturationLevel
	f	F	c	exhaustionLevel
	f	I	d	tickTimer
	f	I	e	lastFoodLevel
c	cba	net/minecraft/world/food/FoodProperties
	m	(IFZZZLjava/util/List;)V	<init>	<init>
		p	1		hunger
		p	2		saturationModifier
		p	3		meat
		p	4		alwaysEdible
		p	5		snack
		p	6		statusEffects
	m	()I	a	getNutrition
	m	()F	b	getSaturationModifier
	m	()Z	c	isMeat
	m	()Z	d	canAlwaysEat
	m	()Z	e	isFastFood
	m	()Ljava/util/List;	f	getEffects
	f	I	a	nutrition
	f	F	b	saturationModifier
	f	Z	c	isMeat
	f	Z	d	canAlwaysEat
	f	Z	e	fastFood
	f	Ljava/util/List;	f	effects
c	cba$a	net/minecraft/world/food/FoodProperties$Builder
	m	()Lcba$a;	a	meat
	m	(F)Lcba$a;	a	saturationMod
		p	1		saturationModifier
	m	(I)Lcba$a;	a	nutrition
		p	1		hunger
	m	(Lbey;F)Lcba$a;	a	effect
		p	1		effect
		p	2		chance
	m	()Lcba$a;	b	alwaysEat
	m	()Lcba$a;	c	fast
	m	()Lcba;	d	build
	f	I	a	nutrition
	f	F	b	saturationModifier
	f	Z	c	isMeat
	f	Z	d	canAlwaysEat
	f	Z	e	fastFood
	f	Ljava/util/List;	f	effects
c	cbb	net/minecraft/world/food/Foods
	m	(I)Lcba$a;	a	stew
		p	0		hunger
	f	Lcba;	A	POISONOUS_POTATO
	f	Lcba;	B	PORKCHOP
	f	Lcba;	C	POTATO
	f	Lcba;	D	PUFFERFISH
	f	Lcba;	E	PUMPKIN_PIE
	f	Lcba;	F	RABBIT
	f	Lcba;	G	RABBIT_STEW
	f	Lcba;	H	ROTTEN_FLESH
	f	Lcba;	I	SALMON
	f	Lcba;	J	SPIDER_EYE
	f	Lcba;	K	SUSPICIOUS_STEW
	f	Lcba;	L	SWEET_BERRIES
	f	Lcba;	M	GLOW_BERRIES
	f	Lcba;	N	TROPICAL_FISH
	f	Lcba;	a	APPLE
	f	Lcba;	b	BAKED_POTATO
	f	Lcba;	c	BEEF
	f	Lcba;	d	BEETROOT
	f	Lcba;	e	BEETROOT_SOUP
	f	Lcba;	f	BREAD
	f	Lcba;	g	CARROT
	f	Lcba;	h	CHICKEN
	f	Lcba;	i	CHORUS_FRUIT
	f	Lcba;	j	COD
	f	Lcba;	k	COOKED_BEEF
	f	Lcba;	l	COOKED_CHICKEN
	f	Lcba;	m	COOKED_COD
	f	Lcba;	n	COOKED_MUTTON
	f	Lcba;	o	COOKED_PORKCHOP
	f	Lcba;	p	COOKED_RABBIT
	f	Lcba;	q	COOKED_SALMON
	f	Lcba;	r	COOKIE
	f	Lcba;	s	DRIED_KELP
	f	Lcba;	t	ENCHANTED_GOLDEN_APPLE
	f	Lcba;	u	GOLDEN_APPLE
	f	Lcba;	v	GOLDEN_CARROT
	f	Lcba;	w	HONEY_BOTTLE
	f	Lcba;	x	MELON_SLICE
	f	Lcba;	y	MUSHROOM_STEW
	f	Lcba;	z	MUTTON
c	cbc	net/minecraft/world/food/package-info
c	cbd	net/minecraft/world/inventory/AbstractContainerMenu
	m	(Lccj;I)V	<init>	<init>
		p	1		type
		p	2		syncId
	m	()Lccj;	a	getType
	m	(I)Z	a	isValidSlotIndex
		p	1		slot
	m	(II)V	a	setData
		p	1		id
		p	2		value
	m	(IILcbm;Lbym;)V	a	clicked
		p	1		slotIndex
		p	2		button
		p	3		actionType
		p	4		player
	m	(IILcfv;)V	a	setItem
		p	1		slot
		p	2		revision
		p	3		stack
	m	(ILbym;)Z	a	isValidQuickcraftType
		p	0		stage
		p	1		player
	m	(ILcfv;)V	a	setRemoteSlot
		p	1		slot
		p	2		stack
	m	(ILcfv;Ljava/util/function/Supplier;)V	a	triggerSlotListeners
		p	1		slot
		p	2		stack
		p	3		copySupplier
	m	(ILjava/util/List;Lcfv;)V	a	initializeContents
		p	1		revision
		p	2		stacks
		p	3		cursorStack
	m	(Lbdr;)V	a	slotsChanged
		p	1		inventory
	m	(Lbdr;I)V	a	checkContainerSize
		p	0		inventory
		p	1		expectedSize
	m	(Lbym;)Z	a	stillValid
		p	1		player
	m	(Lbym;I)Lcfv;	a	quickMoveStack
		p	1		player
		p	2		slot
	m	(Lbym;Lbdr;)V	a	clearContainer
		p	1		player
		p	2		inventory
	m	(Lbym;Lcbl;Lccw;Lcfv;Lcfv;)Z	a	tryItemClickBehaviourOverride
		p	1		player
		p	2		clickType
		p	3		slot
		p	4		stack
		p	5		cursorStack
	m	(Lcbd;)V	a	transferState
		p	1		handler
	m	(Lcbn;)V	a	addDataSlots
		p	1		propertyDelegate
	m	(Lcbn;I)V	a	checkContainerDataCount
		p	0		data
		p	1		expectedCount
	m	(Lcbo;Lbym;Lcpi;)Z	a	stillValid
		p	0		context
		p	1		player
		p	2		block
	m	(Lcbp;)V	a	addSlotListener
		p	1		listener
	m	(Lcbq;)V	a	setSynchronizer
		p	1		handler
	m	(Lcbt;)Lcbt;	a	addDataSlot
		p	1		property
	m	(Lccw;)Lccw;	a	addSlot
		p	1		slot
	m	(Lccw;Lbym;Lcfv;)V	a	lambda$doClick$3
		p	3		stack
	m	(Lccw;Lcfv;Z)Z	a	canItemQuickReplace
		p	0		slot
		p	1		stack
		p	2		allowOverflow
	m	(Lcfv;)V	a	setRemoteCarried
		p	1		stack
	m	(Lcfv;IIZ)Z	a	moveItemStackTo
		p	1		stack
		p	2		startIndex
		p	3		endIndex
		p	4		fromLast
	m	(Lcfv;Lccw;)Z	a	canTakeItemForPickAll
		p	1		stack
		p	2		slot
	m	(Lcfv;Lccw;Lbym;Lcfv;)V	a	lambda$doClick$4
		p	3		stack
	m	(Lcpi;Lbym;Lcmi;Lgt;)Ljava/lang/Boolean;	a	lambda$stillValid$0
		p	2		world
		p	3		pos
	m	(Lcze;)I	a	getRedstoneSignalFromBlockEntity
		p	0		entity
	m	(Ljava/util/Set;ILcfv;I)V	a	getQuickCraftSlotCount
		p	0		slots
		p	1		mode
		p	2		stack
		p	3		stackSize
	m	()V	b	sendAllDataToRemote
	m	(I)Lccw;	b	getSlot
		p	1		index
	m	(II)I	b	getQuickcraftMask
		p	0		quickCraftStage
		p	1		buttonId
	m	(IILcbm;Lbym;)V	b	doClick
		p	1		slotIndex
		p	2		button
		p	3		actionType
		p	4		player
	m	(ILcfv;)V	b	setRemoteSlotNoCopy
		p	1		slot
		p	2		stack
	m	(ILcfv;Ljava/util/function/Supplier;)V	b	synchronizeSlotToRemote
		p	1		slot
		p	2		stack
		p	3		copySupplier
	m	(Lbdr;)I	b	getRedstoneSignalFromContainer
		p	0		inventory
	m	(Lbdr;I)Ljava/util/OptionalInt;	b	findSlot
		p	1		inventory
		p	2		index
	m	(Lbym;)V	b	removed
		p	1		player
	m	(Lbym;I)Z	b	clickMenuButton
		p	1		player
		p	2		id
	m	(Lcbp;)V	b	removeSlotListener
		p	1		listener
	m	(Lccw;)Z	b	canDragTo
		p	1		slot
	m	(Lcfv;)V	b	setCarried
		p	1		stack
	m	()Lhm;	c	getItems
	m	(I)I	c	getQuickcraftType
		p	0		quickCraftData
	m	(II)V	c	updateDataSlotListeners
		p	1		index
		p	2		value
	m	()V	d	broadcastChanges
	m	(I)I	d	getQuickcraftHeader
		p	0		quickCraftData
	m	(II)V	d	synchronizeDataSlotToRemote
		p	1		id
		p	2		value
	m	()V	e	broadcastFullState
	m	()V	f	resetQuickCraft
	m	()Lcfv;	g	getCarried
	m	()V	h	suppressRemoteUpdates
	m	()V	i	resumeRemoteUpdates
	m	()I	j	getStateId
	m	()I	k	incrementStateId
	m	()V	l	synchronizeCarriedToRemote
	m	()Lbgq;	m	createCarriedSlotAccess
	m	()Ljava/lang/String;	n	lambda$clicked$2
	m	()Ljava/lang/String;	o	lambda$clicked$1
	f	I	a	SLOT_CLICKED_OUTSIDE
	f	I	b	QUICKCRAFT_TYPE_CHARITABLE
	f	I	c	QUICKCRAFT_TYPE_GREEDY
	f	I	d	QUICKCRAFT_TYPE_CLONE
	f	I	e	QUICKCRAFT_HEADER_START
	f	I	f	QUICKCRAFT_HEADER_CONTINUE
	f	I	g	QUICKCRAFT_HEADER_END
	f	I	h	CARRIED_SLOT_SIZE
	f	Lhm;	i	slots
	f	I	j	containerId
	f	Lorg/slf4j/Logger;	k	LOGGER
	f	Lhm;	l	lastSlots
	f	Ljava/util/List;	m	dataSlots
	f	Lcfv;	n	carried
	f	Lhm;	o	remoteSlots
	f	Lit/unimi/dsi/fastutil/ints/IntList;	p	remoteDataSlots
	f	Lcfv;	q	remoteCarried
	f	I	r	stateId
	f	Lccj;	s	menuType
	f	I	t	quickcraftType
	f	I	u	quickcraftStatus
	f	Ljava/util/Set;	v	quickcraftSlots
	f	Ljava/util/List;	w	containerListeners
	f	Lcbq;	x	synchronizer
	f	Z	y	suppressRemoteUpdates
c	cbd$1	net/minecraft/world/inventory/AbstractContainerMenu$1
	m	()Lcfv;	a	get
	m	(Lcfv;)Z	a	set
		p	1		stack
	f	Lcbd;	a	this$0
c	cbe	net/minecraft/world/inventory/AbstractFurnaceMenu
	m	(Lccj;Lcjb;Lccp;ILbyl;)V	<init>	<init>
		p	1		type
		p	2		recipeType
		p	3		category
		p	4		syncId
		p	5		playerInventory
	m	(Lccj;Lcjb;Lccp;ILbyl;Lbdr;Lcbn;)V	<init>	<init>
		p	1		type
		p	2		recipeType
		p	3		category
		p	4		syncId
		p	5		playerInventory
		p	6		inventory
		p	7		propertyDelegate
	m	(Lbym;)Z	a	stillValid
		p	1		player
	m	(Lbym;I)Lcfv;	a	quickMoveStack
		p	1		player
		p	2		slot
	m	(Lbyq;)V	a	fillCraftSlotsStackedContents
		p	1		finder
	m	(Lciy;)Z	a	recipeMatches
		p	1		recipe
	m	(Lcfv;)Z	c	canSmelt
		p	1		itemStack
	m	(Lcfv;)Z	d	isFuel
		p	1		itemStack
	m	(I)Z	e	shouldMoveToInventory
		p	1		index
	m	()V	l	clearCraftingContent
	m	()I	m	getResultSlotIndex
	m	()I	n	getGridWidth
	m	()I	o	getGridHeight
	m	()I	p	getSize
	m	()I	q	getBurnProgress
	m	()I	r	getLitProgress
	m	()Z	s	isLit
	m	()Lccp;	t	getRecipeBookType
	f	I	k	INGREDIENT_SLOT
	f	I	l	FUEL_SLOT
	f	I	m	RESULT_SLOT
	f	I	n	SLOT_COUNT
	f	I	o	DATA_COUNT
	f	Lcmi;	p	level
	f	I	q	INV_SLOT_START
	f	I	r	INV_SLOT_END
	f	I	s	USE_ROW_SLOT_START
	f	I	t	USE_ROW_SLOT_END
	f	Lbdr;	u	container
	f	Lcbn;	v	data
	f	Lcjb;	w	recipeType
	f	Lccp;	x	recipeBookType
c	cbf	net/minecraft/world/inventory/AnvilMenu
	m	(ILbyl;)V	<init>	<init>
		p	1		syncId
		p	2		inventory
	m	(ILbyl;Lcbo;)V	<init>	<init>
		p	1		syncId
		p	2		inventory
		p	3		context
	m	(Lbym;Lcfv;)V	a	onTake
		p	1		player
		p	2		stack
	m	(Lbym;Lcmi;Lgt;)V	a	lambda$onTake$2
		p	1		world
		p	2		pos
	m	(Lbym;Z)Z	a	mayPickup
		p	1		player
		p	2		present
	m	(Ldbq;)Z	a	isValidBlock
		p	1		state
	m	(Ljava/lang/String;)V	a	setItemName
		p	1		newItemName
	m	(I)I	e	calculateIncreasedRepairCost
		p	0		cost
	m	(Lcfv;)Z	e	lambda$createInputSlotDefinitions$1
		p	0		stack
	m	(Lcfv;)Z	f	lambda$createInputSlotDefinitions$0
		p	0		stack
	m	()Lcce;	l	createInputSlotDefinitions
	m	()V	m	createResult
	m	()I	n	getCost
	f	I	A	COST_REPAIR_MATERIAL
	f	I	B	COST_REPAIR_SACRIFICE
	f	I	C	COST_INCOMPATIBLE_PENALTY
	f	I	D	COST_RENAME
	f	I	E	INPUT_SLOT_X_PLACEMENT
	f	I	F	ADDITIONAL_SLOT_X_PLACEMENT
	f	I	G	RESULT_SLOT_X_PLACEMENT
	f	I	H	SLOT_Y_PLACEMENT
	f	I	k	INPUT_SLOT
	f	I	l	ADDITIONAL_SLOT
	f	I	m	RESULT_SLOT
	f	I	n	MAX_NAME_LENGTH
	f	Lorg/slf4j/Logger;	s	LOGGER
	f	Z	t	DEBUG_COST
	f	I	u	repairItemCountCost
	f	Ljava/lang/String;	v	itemName
	f	Lcbt;	w	cost
	f	I	x	COST_FAIL
	f	I	y	COST_BASE
	f	I	z	COST_ADDED_BASE
c	cbf$1	net/minecraft/world/inventory/AnvilMenu$1
	f	[I	a	$SwitchMap$net$minecraft$world$item$enchantment$Enchantment$Rarity
c	cbg	net/minecraft/world/inventory/BeaconMenu
	m	(ILbdr;)V	<init>	<init>
		p	1		syncId
		p	2		inventory
	m	(ILbdr;Lcbn;Lcbo;)V	<init>	<init>
		p	1		syncId
		p	2		inventory
		p	3		propertyDelegate
		p	4		context
	m	(II)V	a	setData
		p	1		id
		p	2		value
	m	(Lbym;)Z	a	stillValid
		p	1		player
	m	(Lbym;I)Lcfv;	a	quickMoveStack
		p	1		player
		p	2		slot
	m	(Ljava/util/Optional;Ljava/util/Optional;)V	a	updateEffects
		p	1		primary
		p	2		secondary
	m	(Lbym;)V	b	removed
		p	1		player
	m	()I	l	getLevels
	m	()Lbew;	m	getPrimaryEffect
	m	()Lbew;	n	getSecondaryEffect
	m	()Z	o	hasPayment
	f	I	k	PAYMENT_SLOT
	f	I	l	SLOT_COUNT
	f	I	m	DATA_COUNT
	f	I	n	INV_SLOT_START
	f	I	o	INV_SLOT_END
	f	I	p	USE_ROW_SLOT_START
	f	I	q	USE_ROW_SLOT_END
	f	Lbdr;	r	beacon
	f	Lcbg$a;	s	paymentSlot
	f	Lcbo;	t	access
	f	Lcbn;	u	beaconData
c	cbg$1	net/minecraft/world/inventory/BeaconMenu$1
	m	(Lcbg;I)V	<init>	<init>
		p	2		size
	m	()I	ab_	getMaxStackSize
	m	(ILcfv;)Z	b	canPlaceItem
		p	1		slot
		p	2		stack
	f	Lcbg;	c	this$0
c	cbg$a	net/minecraft/world/inventory/BeaconMenu$PaymentSlot
	m	(Lcbg;Lbdr;III)V	<init>	<init>
		p	2		inventory
		p	3		index
		p	4		x
		p	5		y
	m	()I	a	getMaxStackSize
	m	(Lcfv;)Z	a	mayPlace
		p	1		stack
	f	Lcbg;	a	this$0
c	cbh	net/minecraft/world/inventory/BlastFurnaceMenu
	m	(ILbyl;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
	m	(ILbyl;Lbdr;Lcbn;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
		p	3		inventory
		p	4		propertyDelegate
c	cbi	net/minecraft/world/inventory/BrewingStandMenu
	m	(ILbyl;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
	m	(ILbyl;Lbdr;Lcbn;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
		p	3		inventory
		p	4		propertyDelegate
	m	(Lbym;)Z	a	stillValid
		p	1		player
	m	(Lbym;I)Lcfv;	a	quickMoveStack
		p	1		player
		p	2		slot
	m	()I	l	getFuel
	m	()I	m	getBrewingTicks
	f	I	k	BOTTLE_SLOT_START
	f	I	l	BOTTLE_SLOT_END
	f	I	m	INGREDIENT_SLOT
	f	I	n	FUEL_SLOT
	f	I	o	SLOT_COUNT
	f	I	p	DATA_COUNT
	f	I	q	INV_SLOT_START
	f	I	r	INV_SLOT_END
	f	I	s	USE_ROW_SLOT_START
	f	I	t	USE_ROW_SLOT_END
	f	Lbdr;	u	brewingStand
	f	Lcbn;	v	brewingStandData
	f	Lccw;	w	ingredientSlot
c	cbi$a	net/minecraft/world/inventory/BrewingStandMenu$FuelSlot
	m	(Lbdr;III)V	<init>	<init>
		p	1		inventory
		p	2		index
		p	3		x
		p	4		y
	m	()I	a	getMaxStackSize
	m	(Lcfv;)Z	a	mayPlace
		p	1		stack
	m	(Lcfv;)Z	b	mayPlaceItem
		p	0		stack
c	cbi$b	net/minecraft/world/inventory/BrewingStandMenu$IngredientsSlot
	m	(Lbdr;III)V	<init>	<init>
		p	1		inventory
		p	2		index
		p	3		x
		p	4		y
	m	()I	a	getMaxStackSize
	m	(Lcfv;)Z	a	mayPlace
		p	1		stack
c	cbi$c	net/minecraft/world/inventory/BrewingStandMenu$PotionSlot
	m	(Lbdr;III)V	<init>	<init>
		p	1		inventory
		p	2		index
		p	3		x
		p	4		y
	m	()I	a	getMaxStackSize
	m	(Lbym;Lcfv;)V	a	onTake
		p	1		player
		p	2		stack
	m	(Lcfv;)Z	a	mayPlace
		p	1		stack
	m	(Lcfv;)Z	b	mayPlaceItem
		p	0		stack
c	cbj	net/minecraft/world/inventory/CartographyTableMenu
	m	(ILbyl;)V	<init>	<init>
		p	1		syncId
		p	2		inventory
	m	(ILbyl;Lcbo;)V	<init>	<init>
		p	1		syncId
		p	2		inventory
		p	3		context
	m	(Lbdr;)V	a	slotsChanged
		p	1		inventory
	m	(Lbym;)Z	a	stillValid
		p	1		player
	m	(Lbym;I)Lcfv;	a	quickMoveStack
		p	1		player
		p	2		slot
	m	(Lbym;Lcmi;Lgt;)V	a	lambda$removed$1
		p	2		world
		p	3		pos
	m	(Lcfv;Lccw;)Z	a	canTakeItemForPickAll
		p	1		stack
		p	2		slot
	m	(Lcfv;Lcfv;Lcfv;)V	a	setupResultSlot
		p	1		map
		p	2		item
		p	3		oldResult
	m	(Lcfv;Lcfv;Lcfv;Lcmi;Lgt;)V	a	lambda$setupResultSlot$0
		p	4		world
		p	5		pos
	m	(Lbym;)V	b	removed
		p	1		player
	f	I	k	MAP_SLOT
	f	I	l	ADDITIONAL_SLOT
	f	I	m	RESULT_SLOT
	f	Lbdr;	n	container
	f	I	o	INV_SLOT_START
	f	I	p	INV_SLOT_END
	f	I	q	USE_ROW_SLOT_START
	f	I	r	USE_ROW_SLOT_END
	f	Lcbo;	s	access
	f	J	t	lastSoundTime
	f	Lccr;	u	resultContainer
c	cbj$1	net/minecraft/world/inventory/CartographyTableMenu$1
	m	(Lcbj;I)V	<init>	<init>
		p	2		size
	m	()V	e	setChanged
	f	Lcbj;	c	this$0
c	cbj$2	net/minecraft/world/inventory/CartographyTableMenu$2
	m	()V	e	setChanged
	f	Lcbj;	c	this$0
c	cbj$3	net/minecraft/world/inventory/CartographyTableMenu$3
	m	(Lcbj;Lbdr;III)V	<init>	<init>
		p	2		inventory
		p	3		index
		p	4		x
		p	5		y
	m	(Lcfv;)Z	a	mayPlace
		p	1		stack
	f	Lcbj;	a	this$0
c	cbj$4	net/minecraft/world/inventory/CartographyTableMenu$4
	m	(Lcbj;Lbdr;III)V	<init>	<init>
		p	2		inventory
		p	3		index
		p	4		x
		p	5		y
	m	(Lcfv;)Z	a	mayPlace
		p	1		stack
	f	Lcbj;	a	this$0
c	cbj$5	net/minecraft/world/inventory/CartographyTableMenu$5
	m	(Lcbj;Lbdr;IIILcbo;)V	<init>	<init>
		p	2		inventory
		p	3		index
		p	4		x
		p	5		y
	m	(Lbym;Lcfv;)V	a	onTake
		p	1		player
		p	2		stack
	m	(Lcfv;)Z	a	mayPlace
		p	1		stack
	m	(Lcmi;Lgt;)V	a	lambda$onTake$0
		p	1		world
		p	2		pos
	f	Lcbo;	a	val$access
	f	Lcbj;	b	this$0
c	cbk	net/minecraft/world/inventory/ChestMenu
	m	(Lccj;ILbyl;I)V	<init>	<init>
		p	1		type
		p	2		syncId
		p	3		playerInventory
		p	4		rows
	m	(Lccj;ILbyl;Lbdr;I)V	<init>	<init>
		p	1		type
		p	2		syncId
		p	3		playerInventory
		p	4		inventory
		p	5		rows
	m	(ILbyl;)Lcbk;	a	oneRow
		p	0		syncId
		p	1		playerInventory
	m	(ILbyl;Lbdr;)Lcbk;	a	threeRows
		p	0		syncId
		p	1		playerInventory
		p	2		inventory
	m	(Lbym;)Z	a	stillValid
		p	1		player
	m	(Lbym;I)Lcfv;	a	quickMoveStack
		p	1		player
		p	2		slot
	m	(ILbyl;)Lcbk;	b	twoRows
		p	0		syncId
		p	1		playerInventory
	m	(ILbyl;Lbdr;)Lcbk;	b	sixRows
		p	0		syncId
		p	1		playerInventory
		p	2		inventory
	m	(Lbym;)V	b	removed
		p	1		player
	m	(ILbyl;)Lcbk;	c	threeRows
		p	0		syncId
		p	1		playerInventory
	m	(ILbyl;)Lcbk;	d	fourRows
		p	0		syncId
		p	1		playerInventory
	m	(ILbyl;)Lcbk;	e	fiveRows
		p	0		syncId
		p	1		playerInventory
	m	(ILbyl;)Lcbk;	f	sixRows
		p	0		syncId
		p	1		playerInventory
	m	()Lbdr;	l	getContainer
	m	()I	m	getRowCount
	f	I	k	SLOTS_PER_ROW
	f	Lbdr;	l	container
	f	I	m	containerRows
c	cbl	net/minecraft/world/inventory/ClickAction
	m	()[Lcbl;	a	$values
	f	Lcbl;	a	PRIMARY
	f	Lcbl;	b	SECONDARY
	f	[Lcbl;	c	$VALUES
c	cbm	net/minecraft/world/inventory/ClickType
	m	()[Lcbm;	a	$values
	f	Lcbm;	a	PICKUP
	f	Lcbm;	b	QUICK_MOVE
	f	Lcbm;	c	SWAP
	f	Lcbm;	d	CLONE
	f	Lcbm;	e	THROW
	f	Lcbm;	f	QUICK_CRAFT
	f	Lcbm;	g	PICKUP_ALL
	f	[Lcbm;	h	$VALUES
c	cbn	net/minecraft/world/inventory/ContainerData
	m	()I	a	getCount
	m	(I)I	a	get
		p	1		index
	m	(II)V	a	set
		p	1		index
		p	2		value
c	cbo	net/minecraft/world/inventory/ContainerLevelAccess
	m	(Lcmi;Lgt;)Lcbo;	a	create
		p	0		world
		p	1		pos
	m	(Ljava/util/function/BiConsumer;)V	a	execute
		p	1		function
	m	(Ljava/util/function/BiConsumer;Lcmi;Lgt;)Ljava/util/Optional;	a	lambda$execute$0
		p	1		world
		p	2		pos
	m	(Ljava/util/function/BiFunction;)Ljava/util/Optional;	a	evaluate
		p	1		getter
	m	(Ljava/util/function/BiFunction;Ljava/lang/Object;)Ljava/lang/Object;	a	evaluate
		p	1		getter
		p	2		defaultValue
	f	Lcbo;	a	NULL
c	cbo$1	net/minecraft/world/inventory/ContainerLevelAccess$1
	m	(Ljava/util/function/BiFunction;)Ljava/util/Optional;	a	evaluate
		p	1		getter
c	cbo$2	net/minecraft/world/inventory/ContainerLevelAccess$2
	m	(Ljava/util/function/BiFunction;)Ljava/util/Optional;	a	evaluate
		p	1		getter
	f	Lcmi;	b	val$level
	f	Lgt;	c	val$pos
c	cbp	net/minecraft/world/inventory/ContainerListener
	m	(Lcbd;II)V	a	dataChanged
		p	1		handler
		p	2		property
		p	3		value
	m	(Lcbd;ILcfv;)V	a	slotChanged
		p	1		handler
		p	2		slotId
		p	3		stack
c	cbq	net/minecraft/world/inventory/ContainerSynchronizer
	m	(Lcbd;II)V	a	sendDataChange
		p	1		handler
		p	2		property
		p	3		value
	m	(Lcbd;ILcfv;)V	a	sendSlotChange
		p	1		handler
		p	2		slot
		p	3		stack
	m	(Lcbd;Lcfv;)V	a	sendCarriedChange
		p	1		handler
		p	2		stack
	m	(Lcbd;Lhm;Lcfv;[I)V	a	sendInitialData
		p	1		handler
		p	2		stacks
		p	3		cursorStack
		p	4		properties
c	cbr	net/minecraft/world/inventory/CraftingContainer
	m	(Lcbd;II)V	<init>	<init>
		p	1		handler
		p	2		width
		p	3		height
	m	()V	a	clearContent
	m	(I)Lcfv;	a	getItem
		p	1		slot
	m	(II)Lcfv;	a	removeItem
		p	1		slot
		p	2		amount
	m	(ILcfv;)V	a	setItem
		p	1		slot
		p	2		stack
	m	(Lbym;)Z	a	stillValid
		p	1		player
	m	(Lbyq;)V	a	fillStackedContents
		p	1		finder
	m	()Z	aa_	isEmpty
	m	()I	b	getContainerSize
	m	(I)Lcfv;	b	removeItemNoUpdate
		p	1		slot
	m	()V	e	setChanged
	m	()I	f	getHeight
	m	()I	g	getWidth
	f	Lhm;	c	items
	f	I	d	width
	f	I	e	height
	f	Lcbd;	f	menu
c	cbs	net/minecraft/world/inventory/CraftingMenu
	m	(ILbyl;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
	m	(ILbyl;Lcbo;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
		p	3		context
	m	(Lbdr;)V	a	slotsChanged
		p	1		inventory
	m	(Lbym;)Z	a	stillValid
		p	1		player
	m	(Lbym;I)Lcfv;	a	quickMoveStack
		p	1		player
		p	2		slot
	m	(Lbym;Lcmi;Lgt;)V	a	lambda$removed$1
		p	2		world
		p	3		pos
	m	(Lbyq;)V	a	fillCraftSlotsStackedContents
		p	1		finder
	m	(Lcbd;Lcmi;Lbym;Lcbr;Lccr;)V	a	slotChangedCraftingGrid
		p	0		handler
		p	1		world
		p	2		player
		p	3		craftingInventory
		p	4		resultInventory
	m	(Lcfv;Lbym;Lcmi;Lgt;)V	a	lambda$quickMoveStack$2
		p	2		world
		p	3		pos
	m	(Lcfv;Lccw;)Z	a	canTakeItemForPickAll
		p	1		stack
		p	2		slot
	m	(Lciy;)Z	a	recipeMatches
		p	1		recipe
	m	(Lcmi;Lgt;)V	a	lambda$slotsChanged$0
		p	1		world
		p	2		pos
	m	(Lbym;)V	b	removed
		p	1		player
	m	(I)Z	e	shouldMoveToInventory
		p	1		index
	m	()V	l	clearCraftingContent
	m	()I	m	getResultSlotIndex
	m	()I	n	getGridWidth
	m	()I	o	getGridHeight
	m	()I	p	getSize
	m	()Lccp;	t	getRecipeBookType
	f	I	k	RESULT_SLOT
	f	I	l	CRAFT_SLOT_START
	f	I	m	CRAFT_SLOT_END
	f	I	n	INV_SLOT_START
	f	I	o	INV_SLOT_END
	f	I	p	USE_ROW_SLOT_START
	f	I	q	USE_ROW_SLOT_END
	f	Lcbr;	r	craftSlots
	f	Lccr;	s	resultSlots
	f	Lcbo;	t	access
	f	Lbym;	u	player
c	cbt	net/minecraft/world/inventory/DataSlot
	m	()Lcbt;	a	standalone
	m	(I)V	a	set
		p	1		value
	m	(Lcbn;I)Lcbt;	a	forContainer
		p	0		delegate
		p	1		index
	m	([II)Lcbt;	a	shared
		p	0		array
		p	1		index
	m	()I	b	get
	m	()Z	c	checkAndClearUpdateFlag
	f	I	a	prevValue
c	cbt$1	net/minecraft/world/inventory/DataSlot$1
	m	(I)V	a	set
		p	1		value
	m	()I	b	get
	f	Lcbn;	a	val$container
	f	I	b	val$dataId
c	cbt$2	net/minecraft/world/inventory/DataSlot$2
	m	(I)V	a	set
		p	1		value
	m	()I	b	get
	f	[I	a	val$storage
	f	I	b	val$index
c	cbt$3	net/minecraft/world/inventory/DataSlot$3
	m	(I)V	a	set
		p	1		value
	m	()I	b	get
	f	I	a	value
c	cbu	net/minecraft/world/inventory/DispenserMenu
	m	(ILbyl;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
	m	(ILbyl;Lbdr;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
		p	3		inventory
	m	(Lbym;)Z	a	stillValid
		p	1		player
	m	(Lbym;I)Lcfv;	a	quickMoveStack
		p	1		player
		p	2		slot
	m	(Lbym;)V	b	removed
		p	1		player
	f	I	k	SLOT_COUNT
	f	I	l	INV_SLOT_START
	f	I	m	INV_SLOT_END
	f	I	n	USE_ROW_SLOT_START
	f	I	o	USE_ROW_SLOT_END
	f	Lbdr;	p	dispenser
c	cbv	net/minecraft/world/inventory/EnchantmentMenu
	m	(ILbyl;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
	m	(ILbyl;Lcbo;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
		p	3		context
	m	(Lbdr;)V	a	slotsChanged
		p	1		inventory
	m	(Lbym;)Z	a	stillValid
		p	1		player
	m	(Lbym;I)Lcfv;	a	quickMoveStack
		p	1		player
		p	2		slot
	m	(Lbym;Lcmi;Lgt;)V	a	lambda$removed$2
		p	2		world
		p	3		pos
	m	(Lcfv;II)Ljava/util/List;	a	getEnchantmentList
		p	1		stack
		p	2		slot
		p	3		level
	m	(Lcfv;ILbym;ILcfv;Lcmi;Lgt;)V	a	lambda$clickMenuButton$1
		p	6		world
		p	7		pos
	m	(Lcfv;Lcmi;Lgt;)V	a	lambda$slotsChanged$0
		p	2		world
		p	3		pos
	m	(Lbym;)V	b	removed
		p	1		player
	m	(Lbym;I)Z	b	clickMenuButton
		p	1		player
		p	2		id
	m	()I	l	getGoldCount
	m	()I	m	getEnchantmentSeed
	f	[I	k	costs
	f	[I	l	enchantClue
	f	[I	m	levelClue
	f	Lbdr;	n	enchantSlots
	f	Lcbo;	o	access
	f	Lapo;	p	random
	f	Lcbt;	q	enchantmentSeed
c	cbv$1	net/minecraft/world/inventory/EnchantmentMenu$1
	m	(Lcbv;I)V	<init>	<init>
		p	2		size
	m	()V	e	setChanged
	f	Lcbv;	c	this$0
c	cbv$2	net/minecraft/world/inventory/EnchantmentMenu$2
	m	(Lcbv;Lbdr;III)V	<init>	<init>
		p	2		inventory
		p	3		index
		p	4		x
		p	5		y
	m	()I	a	getMaxStackSize
	m	(Lcfv;)Z	a	mayPlace
		p	1		stack
	f	Lcbv;	a	this$0
c	cbv$3	net/minecraft/world/inventory/EnchantmentMenu$3
	m	(Lcbv;Lbdr;III)V	<init>	<init>
		p	2		inventory
		p	3		index
		p	4		x
		p	5		y
	m	(Lcfv;)Z	a	mayPlace
		p	1		stack
	f	Lcbv;	a	this$0
c	cbw	net/minecraft/world/inventory/FurnaceFuelSlot
	m	(Lcbe;Lbdr;III)V	<init>	<init>
		p	1		handler
		p	2		inventory
		p	3		index
		p	4		x
		p	5		y
	m	(Lcfv;)Z	a	mayPlace
		p	1		stack
	m	(Lcfv;)I	a_	getMaxStackSize
		p	1		stack
	m	(Lcfv;)Z	c	isBucket
		p	0		stack
	f	Lcbe;	a	menu
c	cbx	net/minecraft/world/inventory/FurnaceMenu
	m	(ILbyl;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
	m	(ILbyl;Lbdr;Lcbn;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
		p	3		inventory
		p	4		propertyDelegate
c	cby	net/minecraft/world/inventory/FurnaceResultSlot
	m	(Lbym;Lbdr;III)V	<init>	<init>
		p	1		player
		p	2		inventory
		p	3		index
		p	4		x
		p	5		y
	m	(I)Lcfv;	a	remove
		p	1		amount
	m	(Lbym;Lcfv;)V	a	onTake
		p	1		player
		p	2		stack
	m	(Lcfv;)Z	a	mayPlace
		p	1		stack
	m	(Lcfv;I)V	a	onQuickCraft
		p	1		stack
		p	2		amount
	m	(Lcfv;)V	b_	checkTakeAchievements
		p	1		stack
	f	Lbym;	a	player
	f	I	b	removeCount
c	cbz	net/minecraft/world/inventory/GrindstoneMenu
	m	(ILbyl;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
	m	(ILbyl;Lcbo;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
		p	3		context
	m	(Lbdr;)V	a	slotsChanged
		p	1		inventory
	m	(Lbym;)Z	a	stillValid
		p	1		player
	m	(Lbym;I)Lcfv;	a	quickMoveStack
		p	1		player
		p	2		slot
	m	(Lbym;Lcmi;Lgt;)V	a	lambda$removed$1
		p	2		world
		p	3		pos
	m	(Lcfv;II)Lcfv;	a	removeNonCurses
		p	1		item
		p	2		damage
		p	3		amount
	m	(Lcfv;Lcfv;)Lcfv;	a	mergeEnchants
		p	1		target
		p	2		source
	m	(Ljava/util/Map$Entry;)Z	a	lambda$removeNonCurses$0
	m	(Lbym;)V	b	removed
		p	1		player
	m	()V	l	createResult
	f	I	k	MAX_NAME_LENGTH
	f	I	l	INPUT_SLOT
	f	I	m	ADDITIONAL_SLOT
	f	I	n	RESULT_SLOT
	f	I	o	INV_SLOT_START
	f	I	p	INV_SLOT_END
	f	I	q	USE_ROW_SLOT_START
	f	I	r	USE_ROW_SLOT_END
	f	Lbdr;	s	resultSlots
	f	Lbdr;	t	repairSlots
	f	Lcbo;	u	access
c	cbz$1	net/minecraft/world/inventory/GrindstoneMenu$1
	m	(Lcbz;I)V	<init>	<init>
		p	2		size
	m	()V	e	setChanged
	f	Lcbz;	c	this$0
c	cbz$2	net/minecraft/world/inventory/GrindstoneMenu$2
	m	(Lcbz;Lbdr;III)V	<init>	<init>
		p	2		inventory
		p	3		index
		p	4		x
		p	5		y
	m	(Lcfv;)Z	a	mayPlace
		p	1		stack
	f	Lcbz;	a	this$0
c	cbz$3	net/minecraft/world/inventory/GrindstoneMenu$3
	m	(Lcbz;Lbdr;III)V	<init>	<init>
		p	2		inventory
		p	3		index
		p	4		x
		p	5		y
	m	(Lcfv;)Z	a	mayPlace
		p	1		stack
	f	Lcbz;	a	this$0
c	cbz$4	net/minecraft/world/inventory/GrindstoneMenu$4
	m	(Lcbz;Lbdr;IIILcbo;)V	<init>	<init>
		p	2		inventory
		p	3		index
		p	4		x
		p	5		y
	m	(Lbym;Lcfv;)V	a	onTake
		p	1		player
		p	2		stack
	m	(Lcfv;)Z	a	mayPlace
		p	1		stack
	m	(Lcmi;)I	a	getExperienceAmount
		p	1		world
	m	(Lcmi;Lgt;)V	a	lambda$onTake$0
		p	1		world
		p	2		pos
	m	(Lcfv;)I	g	getExperienceFromItem
		p	1		stack
	f	Lcbo;	a	val$access
	f	Lcbz;	b	this$0
c	cca	net/minecraft/world/inventory/HopperMenu
	m	(ILbyl;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
	m	(ILbyl;Lbdr;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
		p	3		inventory
	m	(Lbym;)Z	a	stillValid
		p	1		player
	m	(Lbym;I)Lcfv;	a	quickMoveStack
		p	1		player
		p	2		slot
	m	(Lbym;)V	b	removed
		p	1		player
	f	I	k	CONTAINER_SIZE
	f	Lbdr;	l	hopper
c	ccb	net/minecraft/world/inventory/HorseInventoryMenu
	m	(ILbyl;Lbdr;Lbti;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
		p	3		inventory
		p	4		entity
	m	(Lbti;)Z	a	hasChest
		p	1		horse
	m	(Lbym;)Z	a	stillValid
		p	1		player
	m	(Lbym;I)Lcfv;	a	quickMoveStack
		p	1		player
		p	2		slot
	m	(Lbym;)V	b	removed
		p	1		player
	f	Lbdr;	k	horseContainer
	f	Lbti;	l	horse
c	ccb$1	net/minecraft/world/inventory/HorseInventoryMenu$1
	m	(Lccb;Lbdr;IIILbti;)V	<init>	<init>
		p	2		inventory
		p	3		index
		p	4		x
		p	5		y
	m	(Lcfv;)Z	a	mayPlace
		p	1		stack
	m	()Z	b	isActive
	f	Lbti;	a	val$horse
	f	Lccb;	b	this$0
c	ccb$2	net/minecraft/world/inventory/HorseInventoryMenu$2
	m	(Lccb;Lbdr;IIILbti;)V	<init>	<init>
		p	2		inventory
		p	3		index
		p	4		x
		p	5		y
	m	()I	a	getMaxStackSize
	m	(Lcfv;)Z	a	mayPlace
		p	1		stack
	m	()Z	b	isActive
	f	Lbti;	a	val$horse
	f	Lccb;	b	this$0
c	ccc	net/minecraft/world/inventory/InventoryMenu
	m	(Lbyl;ZLbym;)V	<init>	<init>
		p	1		inventory
		p	2		onServer
		p	3		owner
	m	(Lbdr;)V	a	slotsChanged
		p	1		inventory
	m	(Lbym;)Z	a	stillValid
		p	1		player
	m	(Lbym;I)Lcfv;	a	quickMoveStack
		p	1		player
		p	2		slot
	m	(Lbym;Lbfm;Lcfv;Lcfv;)V	a	onEquipItem
		p	0		player
		p	1		slot
		p	2		newStack
		p	3		currentStack
	m	(Lbyq;)V	a	fillCraftSlotsStackedContents
		p	1		finder
	m	(Lcfv;Lccw;)Z	a	canTakeItemForPickAll
		p	1		stack
		p	2		slot
	m	(Lciy;)Z	a	recipeMatches
		p	1		recipe
	m	(Lbym;)V	b	removed
		p	1		player
	m	(I)Z	e	shouldMoveToInventory
		p	1		index
	m	(I)Z	f	isHotbarSlot
		p	0		slot
	m	()V	l	clearCraftingContent
	m	()I	m	getResultSlotIndex
	m	()I	n	getGridWidth
	m	()I	o	getGridHeight
	m	()I	p	getSize
	m	()Lcbr;	q	getCraftSlots
	m	()Lccp;	t	getRecipeBookType
	f	Ladd;	A	EMPTY_ARMOR_SLOT_SHIELD
	f	Z	B	active
	f	[Ladd;	C	TEXTURE_EMPTY_SLOTS
	f	[Lbfm;	D	SLOT_IDS
	f	Lcbr;	E	craftSlots
	f	Lccr;	F	resultSlots
	f	Lbym;	G	owner
	f	I	k	CONTAINER_ID
	f	I	l	RESULT_SLOT
	f	I	m	CRAFT_SLOT_START
	f	I	n	CRAFT_SLOT_END
	f	I	o	ARMOR_SLOT_START
	f	I	p	ARMOR_SLOT_END
	f	I	q	INV_SLOT_START
	f	I	r	INV_SLOT_END
	f	I	s	USE_ROW_SLOT_START
	f	I	t	USE_ROW_SLOT_END
	f	I	u	SHIELD_SLOT
	f	Ladd;	v	BLOCK_ATLAS
	f	Ladd;	w	EMPTY_ARMOR_SLOT_HELMET
	f	Ladd;	x	EMPTY_ARMOR_SLOT_CHESTPLATE
	f	Ladd;	y	EMPTY_ARMOR_SLOT_LEGGINGS
	f	Ladd;	z	EMPTY_ARMOR_SLOT_BOOTS
c	ccc$1	net/minecraft/world/inventory/InventoryMenu$1
	m	(Lccc;Lbdr;IIILbym;Lbfm;)V	<init>	<init>
		p	2		inventory
		p	3		index
		p	4		x
		p	5		y
	m	()I	a	getMaxStackSize
	m	(Lbym;)Z	a	mayPickup
		p	1		playerEntity
	m	(Lcfv;)Z	a	mayPlace
		p	1		stack
	m	()Lcom/mojang/datafixers/util/Pair;	c	getNoItemIcon
	m	(Lcfv;)V	d	setByPlayer
		p	1		stack
	f	Lbym;	a	val$owner
	f	Lbfm;	b	val$slot
	f	Lccc;	c	this$0
c	ccc$2	net/minecraft/world/inventory/InventoryMenu$2
	m	(Lccc;Lbdr;IIILbym;)V	<init>	<init>
		p	2		inventory
		p	3		index
		p	4		x
		p	5		y
	m	()Lcom/mojang/datafixers/util/Pair;	c	getNoItemIcon
	m	(Lcfv;)V	d	setByPlayer
		p	1		stack
	f	Lbym;	a	val$owner
	f	Lccc;	b	this$0
c	ccd	net/minecraft/world/inventory/ItemCombinerMenu
	m	(Lccj;ILbyl;Lcbo;)V	<init>	<init>
		p	1		type
		p	2		syncId
		p	3		playerInventory
		p	4		context
	m	(Lbdr;)V	a	slotsChanged
		p	1		inventory
	m	(Lbyl;)V	a	createInventorySlots
		p	1		playerInventory
	m	(Lbym;)Z	a	stillValid
		p	1		player
	m	(Lbym;I)Lcfv;	a	quickMoveStack
		p	1		player
		p	2		slot
	m	(Lbym;Lcfv;)V	a	onTake
		p	1		player
		p	2		stack
	m	(Lbym;Lcmi;Lgt;)Ljava/lang/Boolean;	a	lambda$stillValid$1
		p	2		world
		p	3		pos
	m	(Lbym;Z)Z	a	mayPickup
		p	1		player
		p	2		present
	m	(Lcce;)V	a	createInputSlots
		p	1		forgingSlotsManager
	m	(Ldbq;)Z	a	isValidBlock
		p	1		state
	m	(Lbym;)V	b	removed
		p	1		player
	m	(Lbym;Lcmi;Lgt;)V	b	lambda$removed$0
		p	2		world
		p	3		pos
	m	(Lcce;)V	b	createResultSlot
		p	1		forgingSlotsManager
	m	(Lcfv;)Z	c	canMoveIntoInputSlots
		p	1		stack
	m	(Lcfv;)I	d	getSlotToQuickMoveTo
		p	1		stack
	m	(I)Lbed;	e	createContainer
		p	1		size
	m	()Lcce;	l	createInputSlotDefinitions
	m	()V	m	createResult
	m	()I	n	getInventorySlotStart
	m	()I	o	getResultSlot
	m	()I	p	getInventorySlotEnd
	m	()I	q	getUseRowStart
	m	()I	r	getUseRowEnd
	f	I	k	INVENTORY_SLOTS_PER_ROW
	f	I	l	INVENTORY_SLOTS_PER_COLUMN
	f	Ljava/util/List;	m	inputSlotIndexes
	f	I	n	resultSlotIndex
	f	Lcbo;	o	access
	f	Lbym;	p	player
	f	Lbdr;	q	inputSlots
	f	Lccr;	r	resultSlots
c	ccd$1	net/minecraft/world/inventory/ItemCombinerMenu$1
	m	(Lccd;Lbdr;IIILcce$b;)V	<init>	<init>
		p	2		inventory
		p	3		index
		p	4		x
		p	5		y
	m	(Lcfv;)Z	a	mayPlace
		p	1		stack
	f	Lcce$b;	a	val$slot
	f	Lccd;	b	this$0
c	ccd$2	net/minecraft/world/inventory/ItemCombinerMenu$2
	m	(Lccd;Lbdr;III)V	<init>	<init>
		p	2		inventory
		p	3		index
		p	4		x
		p	5		y
	m	(Lbym;)Z	a	mayPickup
		p	1		playerEntity
	m	(Lbym;Lcfv;)V	a	onTake
		p	1		player
		p	2		stack
	m	(Lcfv;)Z	a	mayPlace
		p	1		stack
	f	Lccd;	a	this$0
c	ccd$3	net/minecraft/world/inventory/ItemCombinerMenu$3
	m	(Lccd;I)V	<init>	<init>
		p	2		size
	m	()V	e	setChanged
	f	Lccd;	c	this$0
c	cce	net/minecraft/world/inventory/ItemCombinerMenuSlotDefinition
	m	(Ljava/util/List;Lcce$b;)V	<init>	<init>
		p	1		inputSlots
		p	2		resultSlot
	m	()Lcce$a;	a	create
	m	(I)Z	a	hasSlot
		p	1		index
	m	()Lcce$b;	b	getResultSlot
	m	(I)Lcce$b;	b	getSlot
		p	1		index
	m	()Ljava/util/List;	c	getSlots
	m	()I	d	getNumOfInputSlots
	m	()I	e	getResultSlotIndex
	m	()Ljava/util/List;	f	getInputSlotIndexes
	f	Ljava/util/List;	a	slots
	f	Lcce$b;	b	resultSlot
c	cce$a	net/minecraft/world/inventory/ItemCombinerMenuSlotDefinition$Builder
	m	()Lcce;	a	build
	m	(III)Lcce$a;	a	withResultSlot
		p	1		slotId
		p	2		x
		p	3		y
	m	(IIILjava/util/function/Predicate;)Lcce$a;	a	withSlot
		p	1		slotId
		p	2		x
		p	3		y
		p	4		mayPlace
	m	(Lcfv;)Z	a	lambda$withResultSlot$0
		p	0		stack
	f	Ljava/util/List;	a	slots
	f	Lcce$b;	b	resultSlot
c	cce$b	net/minecraft/world/inventory/ItemCombinerMenuSlotDefinition$SlotDefinition
	m	()I	a	slotIndex
	m	(Lcfv;)Z	a	lambda$static$0
		p	0		stack
	m	()I	b	x
	m	()I	c	y
	m	()Ljava/util/function/Predicate;	d	mayPlace
	f	I	a	slotIndex
	f	I	b	x
	f	I	c	y
	f	Ljava/util/function/Predicate;	d	mayPlace
	f	Lcce$b;	e	EMPTY
c	ccf	net/minecraft/world/inventory/LecternMenu
	m	(I)V	<init>	<init>
		p	1		syncId
	m	(ILbdr;Lcbn;)V	<init>	<init>
		p	1		syncId
		p	2		inventory
		p	3		propertyDelegate
	m	(II)V	a	setData
		p	1		id
		p	2		value
	m	(Lbym;)Z	a	stillValid
		p	1		player
	m	(Lbym;I)Lcfv;	a	quickMoveStack
		p	1		player
		p	2		slot
	m	(Lbym;I)Z	b	clickMenuButton
		p	1		player
		p	2		id
	m	()Lcfv;	l	getBook
	m	()I	m	getPage
	f	I	k	BUTTON_PREV_PAGE
	f	I	l	BUTTON_NEXT_PAGE
	f	I	m	BUTTON_TAKE_BOOK
	f	I	n	BUTTON_PAGE_JUMP_RANGE_START
	f	I	o	DATA_COUNT
	f	I	p	SLOT_COUNT
	f	Lbdr;	q	lectern
	f	Lcbn;	r	lecternData
c	ccf$1	net/minecraft/world/inventory/LecternMenu$1
	m	(Lccf;Lbdr;III)V	<init>	<init>
		p	2		inventory
		p	3		index
		p	4		x
		p	5		y
	m	()V	d	setChanged
	f	Lccf;	a	this$0
c	ccg	net/minecraft/world/inventory/LegacySmithingMenu
	m	(ILbyl;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
	m	(ILbyl;Lcbo;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
		p	3		context
	m	(Lbym;Lcfv;)V	a	onTake
		p	1		player
		p	2		stack
	m	(Lbym;Z)Z	a	mayPickup
		p	1		player
		p	2		present
	m	(Lcfv;Lccw;)Z	a	canTakeItemForPickAll
		p	1		stack
		p	2		slot
	m	(Lcfv;Lciv;)Z	a	lambda$shouldQuickMoveToAdditionalSlot$7
		p	1		recipe
	m	(Lcjl;)Lciv;	a	lambda$createResult$6
		p	0		recipe
	m	(Lcmi;Lgt;)V	a	lambda$onTake$4
		p	0		world
		p	1		pos
	m	(Ldbq;)Z	a	isValidBlock
		p	1		state
	m	(Lcjl;)Z	b	lambda$createResult$5
		p	0		recipe
	m	(Lcjl;)Lciv;	c	lambda$new$1
		p	0		recipe
	m	(Lcfv;)I	d	getSlotToQuickMoveTo
		p	1		stack
	m	(Lcjl;)Z	d	lambda$new$0
		p	0		recipe
	m	(I)V	e	shrinkStackInSlot
		p	1		slot
	m	(Lcfv;)Z	e	shouldQuickMoveToAdditionalSlot
		p	1		stack
	m	(Lcfv;)Z	f	lambda$createInputSlotDefinitions$3
		p	0		stack
	m	(Lcfv;)Z	g	lambda$createInputSlotDefinitions$2
		p	0		stack
	m	()Lcce;	l	createInputSlotDefinitions
	m	()V	m	createResult
	f	I	k	INPUT_SLOT
	f	I	l	ADDITIONAL_SLOT
	f	I	m	RESULT_SLOT
	f	Lcmi;	n	level
	f	I	s	INPUT_SLOT_X_PLACEMENT
	f	I	t	ADDITIONAL_SLOT_X_PLACEMENT
	f	I	u	RESULT_SLOT_X_PLACEMENT
	f	I	v	SLOT_Y_PLACEMENT
	f	Lciv;	w	selectedRecipe
	f	Ljava/util/List;	x	recipes
c	cch	net/minecraft/world/inventory/LoomMenu
	m	(ILbyl;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
	m	(ILbyl;Lcbo;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
		p	3		context
	m	(Lbdr;)V	a	slotsChanged
		p	1		inventory
	m	(Lbym;)Z	a	stillValid
		p	1		player
	m	(Lbym;I)Lcfv;	a	quickMoveStack
		p	1		player
		p	2		slot
	m	(Lbym;Lcmi;Lgt;)V	a	lambda$removed$1
		p	2		world
		p	3		pos
	m	(Lhd;)V	a	setupResultSlot
		p	1		pattern
	m	(Ljava/lang/Runnable;)V	a	registerUpdateListener
		p	1		inventoryChangeListener
	m	(Lbym;)V	b	removed
		p	1		player
	m	(Lbym;I)Z	b	clickMenuButton
		p	1		player
		p	2		id
	m	(Lcfv;)Ljava/util/List;	c	getSelectablePatterns
		p	1		stack
	m	(I)Z	e	isValidPatternIndex
		p	1		index
	m	()Ljava/util/List;	l	getSelectablePatterns
	m	()I	m	getSelectedBannerPatternIndex
	m	()Lccw;	n	getBannerSlot
	m	()Lccw;	o	getDyeSlot
	m	()Lccw;	p	getPatternSlot
	m	()Lccw;	q	getResultSlot
	m	()V	r	lambda$new$0
	f	I	k	PATTERN_NOT_SET
	f	I	l	INV_SLOT_START
	f	I	m	INV_SLOT_END
	f	I	n	USE_ROW_SLOT_START
	f	I	o	USE_ROW_SLOT_END
	f	Lcbo;	p	access
	f	Lcbt;	q	selectedBannerPatternIndex
	f	Ljava/util/List;	r	selectablePatterns
	f	Ljava/lang/Runnable;	s	slotUpdateListener
	f	Lccw;	t	bannerSlot
	f	Lccw;	u	dyeSlot
	f	Lccw;	v	patternSlot
	f	Lccw;	w	resultSlot
	f	J	x	lastSoundTime
	f	Lbdr;	y	inputContainer
	f	Lbdr;	z	outputContainer
c	cch$1	net/minecraft/world/inventory/LoomMenu$1
	m	(Lcch;I)V	<init>	<init>
		p	2		size
	m	()V	e	setChanged
	f	Lcch;	c	this$0
c	cch$2	net/minecraft/world/inventory/LoomMenu$2
	m	(Lcch;I)V	<init>	<init>
		p	2		size
	m	()V	e	setChanged
	f	Lcch;	c	this$0
c	cch$3	net/minecraft/world/inventory/LoomMenu$3
	m	(Lcch;Lbdr;III)V	<init>	<init>
		p	2		inventory
		p	3		index
		p	4		x
		p	5		y
	m	(Lcfv;)Z	a	mayPlace
		p	1		stack
	f	Lcch;	a	this$0
c	cch$4	net/minecraft/world/inventory/LoomMenu$4
	m	(Lcch;Lbdr;III)V	<init>	<init>
		p	2		inventory
		p	3		index
		p	4		x
		p	5		y
	m	(Lcfv;)Z	a	mayPlace
		p	1		stack
	f	Lcch;	a	this$0
c	cch$5	net/minecraft/world/inventory/LoomMenu$5
	m	(Lcch;Lbdr;III)V	<init>	<init>
		p	2		inventory
		p	3		index
		p	4		x
		p	5		y
	m	(Lcfv;)Z	a	mayPlace
		p	1		stack
	f	Lcch;	a	this$0
c	cch$6	net/minecraft/world/inventory/LoomMenu$6
	m	(Lcch;Lbdr;IIILcbo;)V	<init>	<init>
		p	2		inventory
		p	3		index
		p	4		x
		p	5		y
	m	(Lbym;Lcfv;)V	a	onTake
		p	1		player
		p	2		stack
	m	(Lcfv;)Z	a	mayPlace
		p	1		stack
	m	(Lcmi;Lgt;)V	a	lambda$onTake$0
		p	1		world
		p	2		pos
	f	Lcbo;	a	val$access
	f	Lcch;	b	this$0
c	cci	net/minecraft/world/inventory/MenuConstructor
	m	(ILbyl;Lbym;)Lcbd;	createMenu	createMenu
		p	1		syncId
		p	2		playerInventory
		p	3		player
c	ccj	net/minecraft/world/inventory/MenuType
	m	(Lccj$a;Lcau;)V	<init>	<init>
		p	1		factory
		p	2		requiredFeatures
	m	(ILbyl;)Lcbd;	a	create
		p	1		syncId
		p	2		playerInventory
	m	(Ljava/lang/String;Lccj$a;)Lccj;	a	register
		p	0		id
		p	1		factory
	m	(Ljava/lang/String;Lccj$a;[Lcas;)Lccj;	a	register
		p	0		id
		p	1		factory
		p	2		requiredFeatures
	m	(ILbyl;)Lccf;	b	lambda$static$0
		p	0		syncId
		p	1		playerInventory
	m	()Lcau;	m	requiredFeatures
	f	Lccj$a;	A	constructor
	f	Lccj;	a	GENERIC_9x1
	f	Lccj;	b	GENERIC_9x2
	f	Lccj;	c	GENERIC_9x3
	f	Lccj;	d	GENERIC_9x4
	f	Lccj;	e	GENERIC_9x5
	f	Lccj;	f	GENERIC_9x6
	f	Lccj;	g	GENERIC_3x3
	f	Lccj;	h	ANVIL
	f	Lccj;	i	BEACON
	f	Lccj;	j	BLAST_FURNACE
	f	Lccj;	k	BREWING_STAND
	f	Lccj;	l	CRAFTING
	f	Lccj;	m	ENCHANTMENT
	f	Lccj;	n	FURNACE
	f	Lccj;	o	GRINDSTONE
	f	Lccj;	p	HOPPER
	f	Lccj;	q	LECTERN
	f	Lccj;	r	LOOM
	f	Lccj;	s	MERCHANT
	f	Lccj;	t	SHULKER_BOX
	f	Lccj;	u	LEGACY_SMITHING
	f	Lccj;	v	SMITHING
	f	Lccj;	w	SMOKER
	f	Lccj;	x	CARTOGRAPHY_TABLE
	f	Lccj;	y	STONECUTTER
	f	Lcau;	z	requiredFeatures
c	ccj$a	net/minecraft/world/inventory/MenuType$MenuSupplier
	m	(ILbyl;)Lcbd;	create	create
		p	1		syncId
		p	2		playerInventory
c	cck	net/minecraft/world/inventory/MerchantContainer
	m	(Lclf;)V	<init>	<init>
		p	1		merchant
	m	()V	a	clearContent
	m	(I)Lcfv;	a	getItem
		p	1		slot
	m	(II)Lcfv;	a	removeItem
		p	1		slot
		p	2		amount
	m	(ILcfv;)V	a	setItem
		p	1		slot
		p	2		stack
	m	(Lbym;)Z	a	stillValid
		p	1		player
	m	()Z	aa_	isEmpty
	m	()I	b	getContainerSize
	m	(I)Lcfv;	b	removeItemNoUpdate
		p	1		slot
	m	(I)V	c	setSelectionHint
		p	1		index
	m	(I)Z	d	isPaymentSlot
		p	1		slot
	m	()V	e	setChanged
	m	()V	f	updateSellItem
	m	()Lclg;	g	getActiveOffer
	m	()I	h	getFutureXp
	f	Lclf;	c	merchant
	f	Lhm;	d	itemStacks
	f	Lclg;	e	activeOffer
	f	I	f	selectionHint
	f	I	g	futureXp
c	ccl	net/minecraft/world/inventory/MerchantMenu
	m	(ILbyl;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
	m	(ILbyl;Lclf;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
		p	3		merchant
	m	(Lbdr;)V	a	slotsChanged
		p	1		inventory
	m	(Lbym;)Z	a	stillValid
		p	1		player
	m	(Lbym;I)Lcfv;	a	quickMoveStack
		p	1		player
		p	2		slot
	m	(Lcfv;Lccw;)Z	a	canTakeItemForPickAll
		p	1		stack
		p	2		slot
	m	(Lclh;)V	a	setOffers
		p	1		offers
	m	(Z)V	a	setShowProgressBar
		p	1		leveled
	m	(Lbym;)V	b	removed
		p	1		player
	m	(Z)V	b	setCanRestock
		p	1		canRefreshTrades
	m	(ILcfv;)V	c	moveFromInventoryToPaymentSlot
		p	1		slot
		p	2		stack
	m	(I)V	e	setSelectionHint
		p	1		index
	m	(I)V	f	setXp
		p	1		experience
	m	(I)V	g	setMerchantLevel
		p	1		levelProgress
	m	(I)V	h	tryMoveItems
		p	1		recipeIndex
	m	()I	l	getTraderXp
	m	()I	m	getFutureTraderXp
	m	()I	n	getTraderLevel
	m	()Z	o	canRestock
	m	()Lclh;	p	getOffers
	m	()Z	q	showProgressBar
	m	()V	r	playTradeSound
	f	I	k	PAYMENT1_SLOT
	f	I	l	PAYMENT2_SLOT
	f	I	m	RESULT_SLOT
	f	I	n	INV_SLOT_START
	f	I	o	INV_SLOT_END
	f	I	p	USE_ROW_SLOT_START
	f	I	q	USE_ROW_SLOT_END
	f	I	r	SELLSLOT1_X
	f	I	s	SELLSLOT2_X
	f	I	t	BUYSLOT_X
	f	I	u	ROW_Y
	f	Lclf;	v	trader
	f	Lcck;	w	tradeContainer
	f	I	x	merchantLevel
	f	Z	y	showProgressBar
	f	Z	z	canRestock
c	ccm	net/minecraft/world/inventory/MerchantResultSlot
	m	(Lbym;Lclf;Lcck;III)V	<init>	<init>
		p	1		player
		p	2		merchant
		p	3		merchantInventory
		p	4		index
		p	5		x
		p	6		y
	m	(I)Lcfv;	a	remove
		p	1		amount
	m	(Lbym;Lcfv;)V	a	onTake
		p	1		player
		p	2		stack
	m	(Lcfv;)Z	a	mayPlace
		p	1		stack
	m	(Lcfv;I)V	a	onQuickCraft
		p	1		stack
		p	2		amount
	m	(Lcfv;)V	b_	checkTakeAchievements
		p	1		stack
	f	Lcck;	a	slots
	f	Lbym;	b	player
	f	I	c	removeCount
	f	Lclf;	h	merchant
c	ccn	net/minecraft/world/inventory/PlayerEnderChestContainer
	m	(Lbym;)Z	a	stillValid
		p	1		player
	m	(Lczw;)V	a	setActiveChest
		p	1		blockEntity
	m	(Lrk;)V	a	fromTag
		p	1		nbtList
	m	(Lczw;)Z	b	isActiveChest
		p	1		blockEntity
	m	(Lbym;)V	c	stopOpen
		p	1		player
	m	(Lbym;)V	d_	startOpen
		p	1		player
	m	()Lrk;	g	createTag
	f	Lczw;	c	activeChest
c	cco	net/minecraft/world/inventory/RecipeBookMenu
	m	(Lccj;I)V	<init>	<init>
		p	1		type
		p	2		syncId
	m	(Lbyq;)V	a	fillCraftSlotsStackedContents
		p	1		finder
	m	(Lciy;)Z	a	recipeMatches
		p	1		recipe
	m	(ZLciy;Laiq;)V	a	handlePlacement
		p	1		craftAll
		p	2		recipe
		p	3		player
	m	(I)Z	e	shouldMoveToInventory
		p	1		index
	m	()V	l	clearCraftingContent
	m	()I	m	getResultSlotIndex
	m	()I	n	getGridWidth
	m	()I	o	getGridHeight
	m	()I	p	getSize
	m	()Lccp;	t	getRecipeBookType
c	ccp	net/minecraft/world/inventory/RecipeBookType
	m	()[Lccp;	a	$values
	f	Lccp;	a	CRAFTING
	f	Lccp;	b	FURNACE
	f	Lccp;	c	BLAST_FURNACE
	f	Lccp;	d	SMOKER
	f	[Lccp;	e	$VALUES
c	ccq	net/minecraft/world/inventory/RecipeHolder
	m	(Lciy;)V	a	setRecipeUsed
		p	1		recipe
	m	(Lcmi;Laiq;Lciy;)Z	a	setRecipeUsed
		p	1		world
		p	2		player
		p	3		recipe
	m	(Lbym;)V	b	awardUsedRecipes
		p	1		player
	m	()Lciy;	d	getRecipeUsed
c	ccr	net/minecraft/world/inventory/ResultContainer
	m	()V	a	clearContent
	m	(I)Lcfv;	a	getItem
		p	1		slot
	m	(II)Lcfv;	a	removeItem
		p	1		slot
		p	2		amount
	m	(ILcfv;)V	a	setItem
		p	1		slot
		p	2		stack
	m	(Lbym;)Z	a	stillValid
		p	1		player
	m	(Lciy;)V	a	setRecipeUsed
		p	1		recipe
	m	()Z	aa_	isEmpty
	m	()I	b	getContainerSize
	m	(I)Lcfv;	b	removeItemNoUpdate
		p	1		slot
	m	()Lciy;	d	getRecipeUsed
	m	()V	e	setChanged
	f	Lhm;	c	itemStacks
	f	Lciy;	d	recipeUsed
c	ccs	net/minecraft/world/inventory/ResultSlot
	m	(Lbym;Lcbr;Lbdr;III)V	<init>	<init>
		p	1		player
		p	2		input
		p	3		inventory
		p	4		index
		p	5		x
		p	6		y
	m	(I)Lcfv;	a	remove
		p	1		amount
	m	(Lbym;Lcfv;)V	a	onTake
		p	1		player
		p	2		stack
	m	(Lcfv;)Z	a	mayPlace
		p	1		stack
	m	(Lcfv;I)V	a	onQuickCraft
		p	1		stack
		p	2		amount
	m	(I)V	b	onSwapCraft
		p	1		amount
	m	(Lcfv;)V	b_	checkTakeAchievements
		p	1		stack
	f	Lcbr;	a	craftSlots
	f	Lbym;	b	player
	f	I	c	removeCount
c	cct	net/minecraft/world/inventory/ShulkerBoxMenu
	m	(ILbyl;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
	m	(ILbyl;Lbdr;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
		p	3		inventory
	m	(Lbym;)Z	a	stillValid
		p	1		player
	m	(Lbym;I)Lcfv;	a	quickMoveStack
		p	1		player
		p	2		slot
	m	(Lbym;)V	b	removed
		p	1		player
	f	I	k	CONTAINER_SIZE
	f	Lbdr;	l	container
c	ccu	net/minecraft/world/inventory/ShulkerBoxSlot
	m	(Lbdr;III)V	<init>	<init>
		p	1		inventory
		p	2		index
		p	3		x
		p	4		y
	m	(Lcfv;)Z	a	mayPlace
		p	1		stack
c	ccv	net/minecraft/world/inventory/SimpleContainerData
	m	(I)V	<init>	<init>
		p	1		size
	m	()I	a	getCount
	m	(I)I	a	get
		p	1		index
	m	(II)V	a	set
		p	1		index
		p	2		value
	f	[I	a	ints
c	ccw	net/minecraft/world/inventory/Slot
	m	(Lbdr;III)V	<init>	<init>
		p	1		inventory
		p	2		index
		p	3		x
		p	4		y
	m	()I	a	getMaxStackSize
	m	(I)Lcfv;	a	remove
		p	1		amount
	m	(IILbym;)Ljava/util/Optional;	a	tryRemove
		p	1		min
		p	2		max
		p	3		player
	m	(Lbym;)Z	a	mayPickup
		p	1		playerEntity
	m	(Lbym;Lcfv;)V	a	onTake
		p	1		player
		p	2		stack
	m	(Lcfv;)Z	a	mayPlace
		p	1		stack
	m	(Lcfv;I)V	a	onQuickCraft
		p	1		stack
		p	2		amount
	m	(Lcfv;Lcfv;)V	a	onQuickCraft
		p	1		newItem
		p	2		original
	m	(Lcfv;)I	a_	getMaxStackSize
		p	1		stack
	m	()Z	b	isActive
	m	(I)V	b	onSwapCraft
		p	1		amount
	m	(IILbym;)Lcfv;	b	safeTake
		p	1		min
		p	2		max
		p	3		player
	m	(Lbym;)Z	b	allowModification
		p	1		player
	m	(Lbym;Lcfv;)V	b	lambda$safeTake$0
		p	2		stack
	m	(Lcfv;I)Lcfv;	b	safeInsert
		p	1		stack
		p	2		count
	m	(Lcfv;)V	b_	checkTakeAchievements
		p	1		stack
	m	()Lcom/mojang/datafixers/util/Pair;	c	getNoItemIcon
	m	()V	d	setChanged
	m	(Lcfv;)V	d	setByPlayer
		p	1		stack
	m	()Lcfv;	e	getItem
	m	(Lcfv;)V	e	set
		p	1		stack
	m	()Z	f	hasItem
	m	(Lcfv;)Lcfv;	f	safeInsert
		p	1		stack
	m	()I	g	getContainerSlot
	f	I	a	slot
	f	Lbdr;	d	container
	f	I	e	index
	f	I	f	x
	f	I	g	y
c	ccx	net/minecraft/world/inventory/SmithingMenu
	m	(ILbyl;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
	m	(ILbyl;Lcbo;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
		p	3		context
	m	(Lbym;Lcfv;)V	a	onTake
		p	1		player
		p	2		stack
	m	(Lbym;Z)Z	a	mayPickup
		p	1		player
		p	2		present
	m	(Lcfv;Lccw;)Z	a	canTakeItemForPickAll
		p	1		stack
		p	2		slot
	m	(Lcfv;Lcjl;)Ljava/util/Optional;	a	lambda$canMoveIntoInputSlots$8
		p	1		recipe
	m	(Lcjl;Lcfv;)Ljava/util/Optional;	a	findSlotMatchingIngredient
		p	0		recipe
		p	1		stack
	m	(Lcmi;Lgt;)V	a	lambda$onTake$6
		p	0		world
		p	1		pos
	m	(Ldbq;)Z	a	isValidBlock
		p	1		state
	m	(Lcfv;Lcjl;)Ljava/util/Optional;	b	lambda$getSlotToQuickMoveTo$7
		p	1		recipe
	m	(Lcfv;)Z	c	canMoveIntoInputSlots
		p	1		stack
	m	(Lcfv;Lcjl;)Z	c	lambda$createInputSlotDefinitions$4
		p	2		recipe
	m	(Lcfv;)I	d	getSlotToQuickMoveTo
		p	1		stack
	m	(Lcfv;Lcjl;)Z	d	lambda$createInputSlotDefinitions$2
		p	2		recipe
	m	(I)V	e	shrinkStackInSlot
		p	1		slot
	m	(Lcfv;)Z	e	lambda$createInputSlotDefinitions$5
		p	1		stack
	m	(Lcfv;Lcjl;)Z	e	lambda$createInputSlotDefinitions$0
		p	1		recipe
	m	(Lcfv;)Z	f	lambda$createInputSlotDefinitions$3
		p	1		stack
	m	(Lcfv;)Z	g	lambda$createInputSlotDefinitions$1
		p	1		stack
	m	()Lcce;	l	createInputSlotDefinitions
	m	()V	m	createResult
	f	I	k	TEMPLATE_SLOT
	f	I	l	BASE_SLOT
	f	I	m	ADDITIONAL_SLOT
	f	I	n	RESULT_SLOT
	f	I	s	TEMPLATE_SLOT_X_PLACEMENT
	f	I	t	BASE_SLOT_X_PLACEMENT
	f	I	u	ADDITIONAL_SLOT_X_PLACEMENT
	f	I	v	SLOT_Y_PLACEMENT
	f	I	w	RESULT_SLOT_X_PLACEMENT
	f	Lcmi;	x	level
	f	Lcjl;	y	selectedRecipe
	f	Ljava/util/List;	z	recipes
c	ccy	net/minecraft/world/inventory/SmokerMenu
	m	(ILbyl;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
	m	(ILbyl;Lbdr;Lcbn;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
		p	3		inventory
		p	4		propertyDelegate
c	ccz	net/minecraft/world/inventory/StackedContentsCompatible
	m	(Lbyq;)V	a	fillStackedContents
		p	1		finder
c	cda	net/minecraft/world/inventory/StonecutterMenu
	m	(ILbyl;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
	m	(ILbyl;Lcbo;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
		p	3		context
	m	()Lccj;	a	getType
	m	(Lbdr;)V	a	slotsChanged
		p	1		inventory
	m	(Lbdr;Lcfv;)V	a	setupRecipeList
		p	1		input
		p	2		stack
	m	(Lbym;)Z	a	stillValid
		p	1		player
	m	(Lbym;I)Lcfv;	a	quickMoveStack
		p	1		player
		p	2		slot
	m	(Lbym;Lcmi;Lgt;)V	a	lambda$removed$1
		p	2		world
		p	3		pos
	m	(Lcfv;Lccw;)Z	a	canTakeItemForPickAll
		p	1		stack
		p	2		slot
	m	(Ljava/lang/Runnable;)V	a	registerUpdateListener
		p	1		contentsChangedListener
	m	(Lbym;)V	b	removed
		p	1		player
	m	(Lbym;I)Z	b	clickMenuButton
		p	1		player
		p	2		id
	m	(I)Z	e	isValidRecipeIndex
		p	1		id
	m	()I	l	getSelectedRecipeIndex
	m	()Ljava/util/List;	m	getRecipes
	m	()I	n	getNumRecipes
	m	()Z	o	hasInputItem
	m	()V	p	setupResultSlot
	m	()V	q	lambda$new$0
	f	Lccr;	A	resultContainer
	f	I	k	INPUT_SLOT
	f	I	l	RESULT_SLOT
	f	Lccw;	m	inputSlot
	f	Lccw;	n	resultSlot
	f	Lbdr;	o	container
	f	I	p	INV_SLOT_START
	f	I	q	INV_SLOT_END
	f	I	r	USE_ROW_SLOT_START
	f	I	s	USE_ROW_SLOT_END
	f	Lcbo;	t	access
	f	Lcbt;	u	selectedRecipeIndex
	f	Lcmi;	v	level
	f	Ljava/util/List;	w	recipes
	f	Lcfv;	x	input
	f	J	y	lastSoundTime
	f	Ljava/lang/Runnable;	z	slotUpdateListener
c	cda$1	net/minecraft/world/inventory/StonecutterMenu$1
	m	(Lcda;I)V	<init>	<init>
		p	2		size
	m	()V	e	setChanged
	f	Lcda;	c	this$0
c	cda$2	net/minecraft/world/inventory/StonecutterMenu$2
	m	(Lcda;Lbdr;IIILcbo;)V	<init>	<init>
		p	2		inventory
		p	3		index
		p	4		x
		p	5		y
	m	(Lbym;Lcfv;)V	a	onTake
		p	1		player
		p	2		stack
	m	(Lcfv;)Z	a	mayPlace
		p	1		stack
	m	(Lcmi;Lgt;)V	a	lambda$onTake$0
		p	1		world
		p	2		pos
	f	Lcbo;	a	val$access
	f	Lcda;	b	this$0
c	cdb	net/minecraft/world/inventory/package-info
c	cdc	net/minecraft/world/inventory/tooltip/BundleTooltip
	m	(Lhm;I)V	<init>	<init>
		p	1		inventory
		p	2		bundleOccupancy
	m	()Lhm;	a	getItems
	m	()I	b	getWeight
	f	Lhm;	a	items
	f	I	b	weight
c	cdd	net/minecraft/world/inventory/tooltip/TooltipComponent
c	cde	net/minecraft/world/inventory/tooltip/package-info
c	cdf	net/minecraft/world/item/AdventureModeCheck
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		key
	m	(Lcfv;Lhq;Ldbu;)Z	a	test
		p	1		stack
		p	2		blockRegistry
		p	3		pos
	m	(Ldbu;Ldbu;Z)Z	a	areSameBlocks
		p	0		pos
		p	1		cachedPos
		p	2		nbtAware
	f	Ljava/lang/String;	a	tagName
	f	Ldbu;	b	lastCheckedBlock
	f	Z	c	lastResult
	f	Z	d	checksBlockEntity
c	cdg	net/minecraft/world/item/AirItem
	m	(Lcpi;Lcfq$a;)V	<init>	<init>
		p	1		block
		p	2		settings
	m	()Ljava/lang/String;	a	getDescriptionId
	m	(Lcfv;Lcmi;Ljava/util/List;Lchl;)V	a	appendHoverText
		p	1		stack
		p	2		world
		p	3		tooltip
		p	4		context
	f	Lcpi;	a	block
c	cdh	net/minecraft/world/item/ArmorItem
	m	(Lcdi;Lcdh$a;Lcfq$a;)V	<init>	<init>
		p	1		material
		p	2		type
		p	3		settings
	m	(Lbfm;)Lcom/google/common/collect/Multimap;	a	getDefaultAttributeModifiers
		p	1		slot
	m	(Lcfv;Lcfv;)Z	a	isValidRepairItem
		p	1		stack
		p	2		ingredient
	m	(Lcmi;Lbym;Lbdx;)Lbdz;	a	use
		p	1		world
		p	2		user
		p	3		hand
	m	(Lgu;Lcfv;)Z	a	dispenseArmor
		p	0		pointer
		p	1		armor
	m	(Ljava/util/EnumMap;)V	a	lambda$static$0
		p	0		uuidMap
	m	()Lamq;	ak_	getEquipSound
	m	()Lcdh$a;	b	getType
	m	()I	c	getEnchantmentValue
	m	()Lcdi;	d	getMaterial
	m	()I	e	getDefense
	m	()F	f	getToughness
	m	()Lbfm;	g	getEquipmentSlot
	f	Lig;	a	DISPENSE_ITEM_BEHAVIOR
	f	Lcdh$a;	b	type
	f	F	c	knockbackResistance
	f	Lcdi;	d	material
	f	Ljava/util/EnumMap;	e	ARMOR_MODIFIER_UUID_PER_TYPE
	f	I	f	defense
	f	F	g	toughness
	f	Lcom/google/common/collect/Multimap;	h	defaultModifiers
c	cdh$1	net/minecraft/world/item/ArmorItem$1
	m	(Lgu;Lcfv;)Lcfv;	a	execute
		p	1		pointer
		p	2		stack
c	cdh$a	net/minecraft/world/item/ArmorItem$Type
	m	(Ljava/lang/String;ILbfm;Ljava/lang/String;)V	<init>	<init>
		p	3		equipmentSlot
		p	4		name
	m	()Lbfm;	a	getSlot
	m	()Ljava/lang/String;	b	getName
	m	()[Lcdh$a;	c	$values
	f	Lcdh$a;	a	HELMET
	f	Lcdh$a;	b	CHESTPLATE
	f	Lcdh$a;	c	LEGGINGS
	f	Lcdh$a;	d	BOOTS
	f	Lbfm;	e	slot
	f	Ljava/lang/String;	f	name
	f	[Lcdh$a;	g	$VALUES
c	cdi	net/minecraft/world/item/ArmorMaterial
	m	()I	a	getEnchantmentValue
	m	(Lcdh$a;)I	a	getDurabilityForType
		p	1		type
	m	()Lamq;	b	getEquipSound
	m	(Lcdh$a;)I	b	getDefenseForType
		p	1		type
	m	()Lciu;	d	getRepairIngredient
	m	()Ljava/lang/String;	e	getName
	m	()F	f	getToughness
	m	()F	g	getKnockbackResistance
c	cdj	net/minecraft/world/item/ArmorMaterials
	m	(Ljava/lang/String;ILjava/lang/String;ILjava/util/EnumMap;ILamq;FFLjava/util/function/Supplier;)V	<init>	<init>
		p	3		name
		p	4		durabilityMultiplier
		p	5		protectionAmounts
		p	6		enchantability
		p	7		equipSound
		p	8		toughness
		p	9		knockbackResistance
		p	10		repairIngredientSupplier
	m	()I	a	getEnchantmentValue
	m	(Lcdh$a;)I	a	getDurabilityForType
		p	1		type
	m	(Ljava/util/EnumMap;)V	a	lambda$static$14
		p	0		map
	m	()Lamq;	b	getEquipSound
	m	(Lcdh$a;)I	b	getDefenseForType
		p	1		type
	m	(Ljava/util/EnumMap;)V	b	lambda$static$12
		p	0		map
	m	()Ljava/lang/String;	c	getSerializedName
	m	(Ljava/util/EnumMap;)V	c	lambda$static$10
		p	0		map
	m	()Lciu;	d	getRepairIngredient
	m	(Ljava/util/EnumMap;)V	d	lambda$static$8
		p	0		map
	m	()Ljava/lang/String;	e	getName
	m	(Ljava/util/EnumMap;)V	e	lambda$static$6
		p	0		map
	m	()F	f	getToughness
	m	(Ljava/util/EnumMap;)V	f	lambda$static$4
		p	0		map
	m	()F	g	getKnockbackResistance
	m	(Ljava/util/EnumMap;)V	g	lambda$static$2
		p	0		map
	m	()Lciu;	h	lambda$static$13
	m	(Ljava/util/EnumMap;)V	h	lambda$static$0
		p	0		map
	m	()Lciu;	i	lambda$static$11
	m	()Lciu;	j	lambda$static$9
	m	()Lciu;	k	lambda$static$7
	m	()Lciu;	l	lambda$static$5
	m	()Lciu;	m	lambda$static$3
	m	()Lciu;	n	lambda$static$1
	m	()[Lcdj;	o	$values
	f	Lcdj;	a	LEATHER
	f	Lcdj;	b	CHAIN
	f	Lcdj;	c	IRON
	f	Lcdj;	d	GOLD
	f	Lcdj;	e	DIAMOND
	f	Lcdj;	f	TURTLE
	f	Lcdj;	g	NETHERITE
	f	Laqa$a;	h	CODEC
	f	Ljava/util/EnumMap;	i	HEALTH_FUNCTION_FOR_TYPE
	f	Ljava/lang/String;	j	name
	f	I	k	durabilityMultiplier
	f	Ljava/util/EnumMap;	l	protectionFunctionForType
	f	I	m	enchantmentValue
	f	Lamq;	n	sound
	f	F	o	toughness
	f	F	p	knockbackResistance
	f	Lape;	q	repairIngredient
	f	[Lcdj;	r	$VALUES
c	cdk	net/minecraft/world/item/ArmorStandItem
	m	(Lcfq$a;)V	<init>	<init>
		p	1		settings
	m	(Lcie;)Lbdy;	a	useOn
		p	1		context
c	cdl	net/minecraft/world/item/ArrowItem
	m	(Lcfq$a;)V	<init>	<init>
		p	1		settings
	m	(Lcmi;Lcfv;Lbfx;)Lbys;	a	createArrow
		p	1		world
		p	2		stack
		p	3		shooter
c	cdm	net/minecraft/world/item/AxeItem
	m	(Lchh;FFLcfq$a;)V	<init>	<init>
		p	1		material
		p	2		attackDamage
		p	3		attackSpeed
		p	4		settings
	m	(Lcie;)Lbdy;	a	useOn
		p	1		context
	m	(Lcie;Lbym;)V	a	lambda$useOn$1
		p	1		p
	m	(Ldbq;Lcpi;)Ldbq;	a	lambda$getStripped$2
		p	1		block
	m	(Ldbq;)Ljava/util/Optional;	b	getStripped
		p	1		state
	m	(Ldbq;Lcpi;)Ldbq;	b	lambda$useOn$0
		p	1		block
	f	Ljava/util/Map;	a	STRIPPABLES
c	cdn	net/minecraft/world/item/BannerItem
	m	(Lcpi;Lcpi;Lcfq$a;)V	<init>	<init>
		p	1		bannerBlock
		p	2		wallBannerBlock
		p	3		settings
	m	(Ladc;)Ljava/lang/String;	a	lambda$appendHoverTextFromBannerBlockEntityTag$0
		p	0		key
	m	(Lcfv;Lcmi;Ljava/util/List;Lchl;)V	a	appendHoverText
		p	1		stack
		p	2		world
		p	3		tooltip
		p	4		context
	m	(Lcfv;Ljava/util/List;)V	a	appendHoverTextFromBannerBlockEntityTag
		p	0		stack
		p	1		tooltip
	m	(Ljava/util/List;Lcel;Ljava/lang/String;)V	a	lambda$appendHoverTextFromBannerBlockEntityTag$1
		p	2		translationKey
	m	()Lcel;	b	getColor
	f	Ljava/lang/String;	c	PATTERN_PREFIX
c	cdo	net/minecraft/world/item/BannerPatternItem
	m	(Lanv;Lcfq$a;)V	<init>	<init>
		p	1		patternItemTag
		p	2		settings
	m	(Lcfv;Lcmi;Ljava/util/List;Lchl;)V	a	appendHoverText
		p	1		stack
		p	2		world
		p	3		tooltip
		p	4		context
	m	()Lanv;	b	getBannerPattern
	m	()Ltw;	d	getDisplayName
	f	Lanv;	a	bannerPattern
c	cdp	net/minecraft/world/item/BedItem
	m	(Lcpi;Lcfq$a;)V	<init>	<init>
		p	1		block
		p	2		settings
	m	(Lcic;Ldbq;)Z	a	placeBlock
		p	1		context
		p	2		state
c	cdq	net/minecraft/world/item/BlockItem
	m	(Lcpi;Lcfq$a;)V	<init>	<init>
		p	1		block
		p	2		settings
	m	()Ljava/lang/String;	a	getDescriptionId
	m	(Lbvf;)V	a	onDestroyed
		p	1		entity
	m	(Lcfv;)Lre;	a	getBlockEntityData
		p	0		stack
	m	(Lcfv;Lcmi;Ljava/util/List;Lchl;)V	a	appendHoverText
		p	1		stack
		p	2		world
		p	3		tooltip
		p	4		context
	m	(Lcfv;Lczg;Lre;)V	a	setBlockEntityData
		p	0		stack
		p	1		blockEntityType
		p	2		tag
	m	(Lcic;)Lbdy;	a	place
		p	1		context
	m	(Lcic;Ldbq;)Z	a	placeBlock
		p	1		context
		p	2		state
	m	(Lcie;)Lbdy;	a	useOn
		p	1		context
	m	(Lcmi;Lbym;Lgt;Lcfv;)Z	a	updateCustomBlockEntityTag
		p	0		world
		p	1		player
		p	2		pos
		p	3		stack
	m	(Ldbq;)Lamq;	a	getPlaceSound
		p	1		state
	m	(Ldbq;Ldcu;Ljava/lang/Comparable;)Ldbq;	a	lambda$updateState$0
		p	2		value
	m	(Ldbq;Ldcu;Ljava/lang/String;)Ldbq;	a	updateState
		p	0		state
		p	1		property
		p	2		name
	m	(Lgt;Lcmi;Lbym;Lcfv;Ldbq;)Z	a	updateCustomBlockEntityTag
		p	1		pos
		p	2		world
		p	3		player
		p	4		stack
		p	5		state
	m	(Lgt;Lcmi;Lcfv;Ldbq;)Ldbq;	a	updateBlockStateFromTag
		p	1		pos
		p	2		world
		p	3		stack
		p	4		state
	m	(Ljava/util/Map;Lcfq;)V	a	registerBlocks
		p	1		map
		p	2		item
	m	()Z	ag_	canFitInsideContainerItems
	m	(Lcic;)Lcic;	b	updatePlacementContext
		p	1		context
	m	(Lcic;Ldbq;)Z	b	canPlace
		p	1		context
		p	2		state
	m	(Lcic;)Ldbq;	c	getPlacementState
		p	1		context
	m	()Z	d	mustSurvive
	m	()Lcpi;	e	getBlock
	m	()Lcau;	m	requiredFeatures
	f	Ljava/lang/String;	a	BLOCK_ENTITY_TAG
	f	Ljava/lang/String;	b	BLOCK_STATE_TAG
	f	Lcpi;	c	block
c	cdr	net/minecraft/world/item/BoatItem
	m	(ZLcaf$b;Lcfq$a;)V	<init>	<init>
		p	1		chest
		p	2		type
		p	3		settings
	m	(Lcmi;Lbym;Lbdx;)Lbdz;	a	use
		p	1		world
		p	2		user
		p	3		hand
	m	(Lcmi;Ledc;)Lcaf;	a	getBoat
		p	1		world
		p	2		hitResult
	f	Ljava/util/function/Predicate;	a	ENTITY_PREDICATE
	f	Lcaf$b;	b	type
	f	Z	c	hasChest
c	cds	net/minecraft/world/item/BoneMealItem
	m	(Lcfq$a;)V	<init>	<init>
		p	1		settings
	m	(Lcfv;Lcmi;Lgt;)Z	a	growCrop
		p	0		stack
		p	1		world
		p	2		pos
	m	(Lcfv;Lcmi;Lgt;Lgz;)Z	a	growWaterPlant
		p	0		stack
		p	1		world
		p	2		blockPos
		p	3		facing
	m	(Lcie;)Lbdy;	a	useOn
		p	1		context
	m	(Lcmi;Lhh$c;)Ljava/util/Optional;	a	lambda$growWaterPlant$2
		p	1		blocks
	m	(Lcmj;Lgt;I)V	a	addGrowthParticles
		p	0		world
		p	1		pos
		p	2		count
	m	(Ldbp$a;)Z	a	lambda$growWaterPlant$4
		p	0		state
	m	(Lhd;)Ldbq;	a	lambda$growWaterPlant$3
		p	0		blockEntry
	m	(Lcmi;Lhh$c;)Ljava/util/Optional;	b	lambda$growWaterPlant$0
		p	1		blocks
	m	(Lhd;)Ldbq;	b	lambda$growWaterPlant$1
		p	0		blockEntry
	f	I	a	GRASS_SPREAD_WIDTH
	f	I	b	GRASS_SPREAD_HEIGHT
	f	I	c	GRASS_COUNT_MULTIPLIER
c	cdt	net/minecraft/world/item/BookItem
	m	(Lcfq$a;)V	<init>	<init>
		p	1		settings
	m	()I	c	getEnchantmentValue
	m	(Lcfv;)Z	d_	isEnchantable
		p	1		stack
c	cdu	net/minecraft/world/item/BottleItem
	m	(Lcfq$a;)V	<init>	<init>
		p	1		settings
	m	(Lbfe;)Z	a	lambda$use$0
		p	0		entity
	m	(Lcfv;Lbym;Lcfv;)Lcfv;	a	turnBottleIntoItem
		p	1		stack
		p	2		player
		p	3		outputStack
	m	(Lcmi;Lbym;Lbdx;)Lbdz;	a	use
		p	1		world
		p	2		user
		p	3		hand
c	cdv	net/minecraft/world/item/BowItem
	m	(Lcfq$a;)V	<init>	<init>
		p	1		settings
	m	(I)F	a	getPowerForTime
		p	0		useTicks
	m	(Lbym;Lbym;)V	a	lambda$releaseUsing$0
		p	1		p
	m	(Lcfv;Lcmi;Lbfx;I)V	a	releaseUsing
		p	1		stack
		p	2		world
		p	3		user
		p	4		remainingUseTicks
	m	(Lcmi;Lbym;Lbdx;)Lbdz;	a	use
		p	1		world
		p	2		user
		p	3		hand
	m	()Ljava/util/function/Predicate;	b	getAllSupportedProjectiles
	m	(Lcfv;)I	b	getUseDuration
		p	1		stack
	m	(Lcfv;)Lchn;	c	getUseAnimation
		p	1		stack
	m	()I	d	getDefaultProjectileRange
	f	I	a	MAX_DRAW_DURATION
	f	I	b	DEFAULT_RANGE
c	cdw	net/minecraft/world/item/BowlFoodItem
	m	(Lcfq$a;)V	<init>	<init>
		p	1		settings
	m	(Lcfv;Lcmi;Lbfx;)Lcfv;	a	finishUsingItem
		p	1		stack
		p	2		world
		p	3		user
c	cdx	net/minecraft/world/item/BrushItem
	m	(Lcfq$a;)V	<init>	<init>
		p	1		settings
	m	(Lbfx;)V	a	lambda$onUseTick$0
		p	0		user
	m	(Lcie;)Lbdy;	a	useOn
		p	1		context
	m	(Lcmi;Lbfx;Lcfv;I)V	a	onUseTick
		p	1		world
		p	2		user
		p	3		stack
		p	4		remainingUseTicks
	m	(Lcmi;Leda;Ldbq;Lede;)V	a	spawnDustParticles
		p	1		world
		p	2		hitResult
		p	3		state
		p	4		userRotation
	m	(Lcfv;)I	b	getUseDuration
		p	1		stack
	m	(Lcfv;)Lchn;	c	getUseAnimation
		p	1		stack
	f	I	a	TICKS_BETWEEN_SWEEPS
	f	I	b	USE_DURATION
c	cdx$1	net/minecraft/world/item/BrushItem$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	cdx$a	net/minecraft/world/item/BrushItem$DustParticlesDelta
	m	()D	a	xd
	m	(Lede;Lgz;)Lcdx$a;	a	fromDirection
		p	0		userRotation
		p	1		side
	m	()D	b	yd
	m	()D	c	zd
	f	D	a	xd
	f	D	b	yd
	f	D	c	zd
	f	D	d	ALONG_SIDE_DELTA
	f	D	e	OUT_FROM_SIDE_DELTA
c	cdy	net/minecraft/world/item/BucketItem
	m	(Ldwi;Lcfq$a;)V	<init>	<init>
		p	1		fluid
		p	2		settings
	m	(Lbym;Lamq;)V	a	lambda$use$0
		p	1		sound
	m	(Lbym;Lcmi;Lcfv;Lgt;)V	a	checkExtraContent
		p	1		player
		p	2		world
		p	3		stack
		p	4		pos
	m	(Lbym;Lcmi;Lgt;Leda;)Z	a	emptyContents
		p	1		player
		p	2		world
		p	3		pos
		p	4		hitResult
	m	(Lbym;Lcmj;Lgt;)V	a	playEmptySound
		p	1		player
		p	2		world
		p	3		pos
	m	(Lcfv;Lbym;)Lcfv;	a	getEmptySuccessItem
		p	0		stack
		p	1		player
	m	(Lcmi;Lbym;Lbdx;)Lbdz;	a	use
		p	1		world
		p	2		user
		p	3		hand
	f	Ldwi;	a	content
c	cdz	net/minecraft/world/item/BundleItem
	m	(Lcfq$a;)V	<init>	<init>
		p	1		settings
	m	(Lbfh;)V	a	playRemoveOneSound
		p	1		entity
	m	(Lbvf;)V	a	onDestroyed
		p	1		entity
	m	(Lbym;Lbgq;Lcfv;)V	a	lambda$overrideOtherStackedOnMe$1
	m	(Lcfv;Lbym;)Z	a	dropContents
		p	0		stack
		p	1		player
	m	(Lcfv;Lccw;Lcbl;Lbym;)Z	a	overrideStackedOnOther
		p	1		stack
		p	2		slot
		p	3		clickType
		p	4		player
	m	(Lcfv;Lccw;Lcfv;)V	a	lambda$overrideStackedOnOther$0
		p	2		removedStack
	m	(Lcfv;Lcfv;Lccw;Lcbl;Lbym;Lbgq;)Z	a	overrideOtherStackedOnMe
		p	1		stack
		p	2		otherStack
		p	3		slot
		p	4		clickType
		p	5		player
		p	6		cursorStackReference
	m	(Lcfv;Lcmi;Ljava/util/List;Lchl;)V	a	appendHoverText
		p	1		stack
		p	2		world
		p	3		tooltip
		p	4		context
	m	(Lcfv;Lre;)Z	a	lambda$getMatchingItem$2
		p	1		item
	m	(Lcfv;Lrk;)Ljava/util/Optional;	a	getMatchingItem
		p	0		stack
		p	1		items
	m	(Lcmi;Lbym;Lbdx;)Lbdz;	a	use
		p	1		world
		p	2		user
		p	3		hand
	m	(Lbfh;)V	b	playInsertSound
		p	1		entity
	m	(Lcfv;Lcfv;)I	b	add
		p	0		bundle
		p	1		stack
	m	(Lbfh;)V	c	playDropContentsSound
		p	1		entity
	m	(Lcfv;)F	d	getFullnessDisplay
		p	0		stack
	m	(Lcfv;)Z	e	isBarVisible
		p	1		stack
	m	(Lcfv;)I	f	getBarWidth
		p	1		stack
	m	(Lcfv;)I	g	getBarColor
		p	1		stack
	m	(Lcfv;)Ljava/util/Optional;	h	getTooltipImage
		p	1		stack
	m	(Lcfv;)I	k	getWeight
		p	0		stack
	m	(Lcfv;)I	o	getContentWeight
		p	0		stack
	m	(Lcfv;)Ljava/util/Optional;	p	removeOne
		p	0		stack
	m	(Lcfv;)Ljava/util/stream/Stream;	q	getContents
		p	0		stack
	m	(Lcfv;)I	r	lambda$getContentWeight$3
	f	I	a	MAX_WEIGHT
	f	Ljava/lang/String;	b	TAG_ITEMS
	f	I	c	BUNDLE_IN_BUNDLE_WEIGHT
	f	I	d	BAR_COLOR
c	cea	net/minecraft/world/item/ChorusFruitItem
	m	(Lcfq$a;)V	<init>	<init>
		p	1		settings
	m	(Lcfv;Lcmi;Lbfx;)Lcfv;	a	finishUsingItem
		p	1		stack
		p	2		world
		p	3		user
c	ceb	net/minecraft/world/item/CompassItem
	m	(Lcfq$a;)V	<init>	<init>
		p	1		settings
	m	(Ladc;Lgt;Lre;)V	a	addLodestoneTags
		p	1		worldKey
		p	2		pos
		p	3		nbt
	m	(Lcfv;Lcmi;Lbfh;IZ)V	a	inventoryTick
		p	1		stack
		p	2		world
		p	3		entity
		p	4		slot
		p	5		selected
	m	(Lcie;)Lbdy;	a	useOn
		p	1		context
	m	(Lcmi;)Lhc;	a	getSpawnPosition
		p	0		world
	m	(Lre;)Lhc;	a	getLodestonePosition
		p	0		nbt
	m	(Lre;Lrx;)V	a	lambda$addLodestoneTags$0
	m	(Lre;)Ljava/util/Optional;	c	getLodestoneDimension
		p	0		nbt
	m	(Lcfv;)Z	d	isLodestoneCompass
		p	0		stack
	m	(Lcfv;)Z	i	isFoil
		p	1		stack
	m	(Lcfv;)Ljava/lang/String;	j	getDescriptionId
		p	1		stack
	f	Ljava/lang/String;	a	TAG_LODESTONE_POS
	f	Ljava/lang/String;	b	TAG_LODESTONE_DIMENSION
	f	Ljava/lang/String;	c	TAG_LODESTONE_TRACKED
	f	Lorg/slf4j/Logger;	d	LOGGER
c	cec	net/minecraft/world/item/ComplexItem
	m	(Lcfq$a;)V	<init>	<init>
		p	1		settings
	m	(Lcfv;Lcmi;Lbym;)Lvb;	a	getUpdatePacket
		p	1		stack
		p	2		world
		p	3		player
	m	()Z	ac_	isComplex
c	ced	net/minecraft/world/item/CreativeModeTab
	m	(Lced$f;ILced$h;Ltj;Ljava/util/function/Supplier;Lced$b;)V	<init>	<init>
		p	1		row
		p	2		column
		p	3		type
		p	4		displayName
		p	5		iconSupplier
		p	6		entryCollector
	m	()Ltj;	a	getDisplayName
	m	(Lced$d;)V	a	buildContents
		p	1		displayContext
	m	(Lced$f;I)Lced$a;	a	builder
		p	0		location
		p	1		column
	m	(Lcfv;)Z	a	contains
		p	1		stack
	m	(Ljava/util/function/Consumer;)V	a	setSearchTreeBuilder
		p	1		searchProviderReloader
	m	()Lcfv;	b	getIconItem
	m	()Ljava/lang/String;	c	getBackgroundSuffix
	m	()Z	d	showTitle
	m	()Z	e	canScroll
	m	()I	f	column
	m	()Lced$f;	g	row
	m	()Z	h	hasAnyItems
	m	()Z	i	shouldDisplay
	m	()Z	j	isAlignedRight
	m	()Lced$h;	k	getType
	m	()Ljava/util/Collection;	l	getDisplayItems
	m	()Ljava/util/Collection;	m	getSearchTabDisplayItems
	m	()V	n	rebuildSearchTree
	f	Ltj;	a	displayName
	f	Ljava/lang/String;	b	backgroundSuffix
	f	Z	c	canScroll
	f	Z	d	showTitle
	f	Z	e	alignedRight
	f	Lced$f;	f	row
	f	I	g	column
	f	Lced$h;	h	type
	f	Lcfv;	i	iconItemStack
	f	Ljava/util/Collection;	j	displayItems
	f	Ljava/util/Set;	k	displayItemsSearchTab
	f	Ljava/util/function/Consumer;	l	searchTreeBuilder
	f	Ljava/util/function/Supplier;	m	iconGenerator
	f	Lced$b;	n	displayItemsGenerator
c	ced$1	net/minecraft/world/item/CreativeModeTab$1
	f	[I	a	$SwitchMap$net$minecraft$world$item$CreativeModeTab$TabVisibility
c	ced$a	net/minecraft/world/item/CreativeModeTab$Builder
	m	(Lced$f;I)V	<init>	<init>
		p	1		row
		p	2		column
	m	()Lced$a;	a	alignedRight
	m	(Lced$b;)Lced$a;	a	displayItems
		p	1		entryCollector
	m	(Lced$d;Lced$e;)V	a	lambda$static$0
		p	0		displayContext
		p	1		entries
	m	(Lced$h;)Lced$a;	a	type
		p	1		type
	m	(Ljava/lang/String;)Lced$a;	a	backgroundSuffix
		p	1		texture
	m	(Ljava/util/function/Supplier;)Lced$a;	a	icon
		p	1		iconSupplier
	m	(Ltj;)Lced$a;	a	title
		p	1		displayName
	m	()Lced$a;	b	hideTitle
	m	()Lced$a;	c	noScrollBar
	m	()Lced;	d	build
	m	()Lcfv;	e	lambda$new$1
	f	Lced$b;	a	EMPTY_GENERATOR
	f	Lced$f;	b	row
	f	I	c	column
	f	Ltj;	d	displayName
	f	Ljava/util/function/Supplier;	e	iconGenerator
	f	Lced$b;	f	displayItemsGenerator
	f	Z	g	canScroll
	f	Z	h	showTitle
	f	Z	i	alignedRight
	f	Lced$h;	j	type
	f	Ljava/lang/String;	k	backgroundSuffix
c	ced$b	net/minecraft/world/item/CreativeModeTab$DisplayItemsGenerator
	m	(Lced$d;Lced$e;)V	accept	accept
		p	1		displayContext
		p	2		entries
c	ced$c	net/minecraft/world/item/CreativeModeTab$ItemDisplayBuilder
	m	(Lced;Lcau;)V	<init>	<init>
		p	1		group
		p	2		enabledFeatures
	m	(Lcfv;Lced$g;)V	a	accept
		p	1		stack
		p	2		visibility
	f	Ljava/util/Collection;	a	tabContents
	f	Ljava/util/Set;	b	searchTabContents
	f	Lced;	c	tab
	f	Lcau;	d	featureFlagSet
c	ced$d	net/minecraft/world/item/CreativeModeTab$ItemDisplayParameters
	m	()Lcau;	a	enabledFeatures
	m	(Lcau;ZLhf$b;)Z	a	needsUpdate
		p	1		enabledFeatures
		p	2		hasPermissions
		p	3		lookup
	m	()Z	b	hasPermissions
	m	()Lhf$b;	c	holders
	f	Lcau;	a	enabledFeatures
	f	Z	b	hasPermissions
	f	Lhf$b;	c	holders
c	ced$e	net/minecraft/world/item/CreativeModeTab$Output
	m	(Lced$g;Lcfv;)V	a	lambda$acceptAll$0
		p	2		stack
	m	(Lcfv;)V	a	accept
		p	1		stack
	m	(Lcfv;Lced$g;)V	a	accept
		p	1		stack
		p	2		visibility
	m	(Lcmh;)V	a	accept
		p	1		item
	m	(Lcmh;Lced$g;)V	a	accept
		p	1		item
		p	2		visibility
	m	(Ljava/util/Collection;)V	a	acceptAll
		p	1		stacks
	m	(Ljava/util/Collection;Lced$g;)V	a	acceptAll
		p	1		stacks
		p	2		visibility
c	ced$f	net/minecraft/world/item/CreativeModeTab$Row
	m	()[Lced$f;	a	$values
	f	Lced$f;	a	TOP
	f	Lced$f;	b	BOTTOM
	f	[Lced$f;	c	$VALUES
c	ced$g	net/minecraft/world/item/CreativeModeTab$TabVisibility
	m	()[Lced$g;	a	$values
	f	Lced$g;	a	PARENT_AND_SEARCH_TABS
	f	Lced$g;	b	PARENT_TAB_ONLY
	f	Lced$g;	c	SEARCH_TAB_ONLY
	f	[Lced$g;	d	$VALUES
c	ced$h	net/minecraft/world/item/CreativeModeTab$Type
	m	()[Lced$h;	a	$values
	f	Lced$h;	a	CATEGORY
	f	Lced$h;	b	INVENTORY
	f	Lced$h;	c	HOTBAR
	f	Lced$h;	d	SEARCH
	f	[Lced$h;	e	$VALUES
c	cee	net/minecraft/world/item/CreativeModeTabs
	m	()Lced;	a	getDefaultTab
	m	(Lbvb;)I	a	lambda$static$34
		p	0		paintingVariant
	m	(Lcau;ZLhf$b;)Z	a	tryRebuildTabContents
		p	0		enabledFeatures
		p	1		operatorEnabled
		p	2		lookup
	m	(Lced$d;)V	a	buildAllTabContents
		p	0		displayContext
	m	(Lced$d;Lced$e;)V	a	lambda$static$32
		p	0		displayContext
		p	1		entries
	m	(Lced$d;Lced;)V	a	lambda$buildAllTabContents$52
		p	1		group
	m	(Lced$e;Lced$g;)V	a	generateSuspiciousStews
		p	0		entries
		p	1		visibility
	m	(Lced$e;Lced$g;Lcfv;)V	a	lambda$generateInstrumentTypes$46
		p	2		stack
	m	(Lced$e;Lced$g;Lhd$c;)V	a	lambda$generatePresetPaintings$48
		p	2		variant
	m	(Lced$e;Lhf$c;)V	a	lambda$static$31
		p	1		registryWrapper
	m	(Lced$e;Lhf$c;Ljava/util/function/Predicate;Lced$g;)V	a	generatePresetPaintings
		p	0		entries
		p	1		registryWrapper
		p	2		predicate
		p	3		visibility
	m	(Lced$e;Lhf;Lcfq;Lanv;Lced$g;)V	a	generateInstrumentTypes
		p	0		entries
		p	1		registryWrapper
		p	2		item
		p	3		instrumentTag
		p	4		visibility
	m	(Lced$e;Lhf;Lcfq;Lced$g;)V	a	generatePotionEffectTypes
		p	0		entries
		p	1		registryWrapper
		p	2		item
		p	3		visibility
	m	(Lced$e;Lhf;Ljava/util/Set;Lced$g;)V	a	generateEnchantmentBookTypesOnlyMaxLevel
		p	0		entries
		p	1		registryWrapper
		p	2		enchantmentTargets
		p	3		visibility
	m	(Lced$e;Ljava/util/Set;Lhf$c;)V	a	lambda$static$25
		p	2		registryWrapper
	m	(Lced;)Z	a	lambda$buildAllTabContents$51
		p	0		group
	m	(Lcfq;Lced$e;Lced$g;Lhh$c;)V	a	lambda$generateInstrumentTypes$47
		p	3		entryList
	m	(Lcfq;Lhd$c;)Lcfv;	a	lambda$generatePotionEffectTypes$36
		p	1		entry
	m	(Lcfq;Lhd;)Lcfv;	a	lambda$generateInstrumentTypes$45
		p	1		instrument
	m	(Lckc;)Ljava/util/stream/Stream;	a	lambda$generateEnchantmentBookTypesAllLevels$43
		p	0		enchantment
	m	(Lckc;I)Lcfv;	a	lambda$generateEnchantmentBookTypesAllLevels$42
		p	1		level
	m	(Lhd$c;)Z	a	lambda$generatePotionEffectTypes$35
		p	0		entry
	m	(Lhd;)Z	a	lambda$static$30
		p	0		entry
	m	(Ljava/util/Set;Lckc;)Z	a	lambda$generateEnchantmentBookTypesAllLevels$41
		p	1		enchantment
	m	([Lced;)Ljava/util/List;	a	checkTabs
		p	0		groups
	m	()Ljava/util/List;	b	tabs
	m	(Lced$d;Lced$e;)V	b	lambda$static$28
		p	0		displayContext
		p	1		entries
	m	(Lced$d;Lced;)V	b	lambda$buildAllTabContents$50
		p	1		group
	m	(Lced$e;Lced$g;)V	b	generateFireworksAllDurations
		p	0		entries
		p	1		visibility
	m	(Lced$e;Lced$g;Lcfv;)V	b	lambda$generateEnchantmentBookTypesAllLevels$44
		p	2		stack
	m	(Lced$e;Lhf$c;)V	b	lambda$static$22
		p	1		registryWrapper
	m	(Lced$e;Lhf;Ljava/util/Set;Lced$g;)V	b	generateEnchantmentBookTypesAllLevels
		p	0		entries
		p	1		registryWrapper
		p	2		enchantmentTargets
		p	3		visibility
	m	(Lced;)Z	b	lambda$buildAllTabContents$49
		p	0		group
	m	(Lckc;)Lcfv;	b	lambda$generateEnchantmentBookTypesOnlyMaxLevel$39
		p	0		enchantment
	m	(Lhd;)Z	b	lambda$static$7
		p	0		entry
	m	(Ljava/util/Set;Lckc;)Z	b	lambda$generateEnchantmentBookTypesOnlyMaxLevel$38
		p	1		enchantment
	m	()Ljava/util/List;	c	allTabs
	m	(Lced$d;Lced$e;)V	c	lambda$static$26
		p	0		displayContext
		p	1		entries
	m	(Lced$e;Lced$g;Lcfv;)V	c	lambda$generateEnchantmentBookTypesOnlyMaxLevel$40
		p	2		stack
	m	(Lced$e;Lhf$c;)V	c	lambda$static$19
		p	1		registryWrapper
	m	()Lced;	d	searchTab
	m	(Lced$d;Lced$e;)V	d	lambda$static$23
		p	0		displayContext
		p	1		entries
	m	(Lced$e;Lced$g;Lcfv;)V	d	lambda$generatePotionEffectTypes$37
		p	2		stack
	m	(Lced$e;Lhf$c;)V	d	lambda$static$16
		p	1		registryWrapper
	m	()Lcfv;	e	lambda$static$33
	m	(Lced$d;Lced$e;)V	e	lambda$static$20
		p	0		displayContext
		p	1		entries
	m	(Lced$e;Lhf$c;)V	e	lambda$static$8
		p	1		registryWrapper
	m	()Lcfv;	f	lambda$static$29
	m	(Lced$d;Lced$e;)V	f	lambda$static$17
		p	0		displayContext
		p	1		entries
	m	()Lcfv;	g	lambda$static$27
	m	(Lced$d;Lced$e;)V	g	lambda$static$14
		p	0		displayContext
		p	1		entries
	m	()Lcfv;	h	lambda$static$24
	m	(Lced$d;Lced$e;)V	h	lambda$static$11
		p	0		displayContext
		p	1		entries
	m	()Lcfv;	i	lambda$static$21
	m	(Lced$d;Lced$e;)V	i	lambda$static$9
		p	0		displayContext
		p	1		entries
	m	()Lcfv;	j	lambda$static$18
	m	(Lced$d;Lced$e;)V	j	lambda$static$5
		p	0		displayContext
		p	1		entries
	m	()Lcfv;	k	lambda$static$15
	m	(Lced$d;Lced$e;)V	k	lambda$static$3
		p	0		displayContext
		p	1		entries
	m	()Lcfv;	l	lambda$static$13
	m	(Lced$d;Lced$e;)V	l	lambda$static$1
		p	0		displayContext
		p	1		entries
	m	()Lcfv;	m	lambda$static$12
	m	()Lcfv;	n	lambda$static$10
	m	()Lcfv;	o	lambda$static$6
	m	()Lcfv;	p	lambda$static$4
	m	()Lcfv;	q	lambda$static$2
	m	()Lcfv;	r	lambda$static$0
	f	Lced;	a	BUILDING_BLOCKS
	f	Lced;	b	COLORED_BLOCKS
	f	Lced;	c	NATURAL_BLOCKS
	f	Lced;	d	FUNCTIONAL_BLOCKS
	f	Lced;	e	REDSTONE_BLOCKS
	f	Lced;	f	HOTBAR
	f	Lced;	g	SEARCH
	f	Lced;	h	TOOLS_AND_UTILITIES
	f	Lced;	i	COMBAT
	f	Lced;	j	FOOD_AND_DRINKS
	f	Lced;	k	INGREDIENTS
	f	Lced;	l	SPAWN_EGGS
	f	Lced;	m	OP_BLOCKS
	f	Lced;	n	INVENTORY
	f	Ljava/util/List;	o	TABS
	f	Ljava/util/Comparator;	p	PAINTING_COMPARATOR
	f	Lced$d;	q	CACHED_PARAMETERS
c	cef	net/minecraft/world/item/CrossbowItem
	m	(Lcfq$a;)V	<init>	<init>
		p	1		settings
	m	(I)Lamq;	a	getStartSound
		p	1		stage
	m	(ILcfv;)F	a	getPowerForTime
		p	0		useTicks
		p	1		stack
	m	(Lapo;)[F	a	getShotPitches
		p	0		random
	m	(Lbdx;Lbfx;)V	a	lambda$shootProjectile$1
		p	1		e
	m	(Lbfx;Lcfv;)Z	a	tryLoadProjectiles
		p	0		shooter
		p	1		projectile
	m	(Lbfx;Lcfv;Lcfv;ZZ)Z	a	loadProjectile
		p	0		shooter
		p	1		crossbow
		p	2		projectile
		p	3		simulated
		p	4		creative
	m	(Lcfq;Lcfv;)Z	a	lambda$containsChargedProjectile$0
		p	1		s
	m	(Lcfv;Lcfq;)Z	a	containsChargedProjectile
		p	0		crossbow
		p	1		projectile
	m	(Lcfv;Lcmi;Lbfx;I)V	a	releaseUsing
		p	1		stack
		p	2		world
		p	3		user
		p	4		remainingUseTicks
	m	(Lcfv;Lcmi;Ljava/util/List;Lchl;)V	a	appendHoverText
		p	1		stack
		p	2		world
		p	3		tooltip
		p	4		context
	m	(Lcfv;Z)V	a	setCharged
		p	0		stack
		p	1		charged
	m	(Lcmi;Lbfx;Lbdx;Lcfv;FF)V	a	performShooting
		p	0		world
		p	1		entity
		p	2		hand
		p	3		stack
		p	4		speed
		p	5		divergence
	m	(Lcmi;Lbfx;Lbdx;Lcfv;Lcfv;FZFFF)V	a	shootProjectile
		p	0		world
		p	1		shooter
		p	2		hand
		p	3		crossbow
		p	4		projectile
		p	5		soundPitch
		p	6		creative
		p	7		speed
		p	8		divergence
		p	9		simulated
	m	(Lcmi;Lbfx;Lcfv;)V	a	onCrossbowShot
		p	0		world
		p	1		entity
		p	2		stack
	m	(Lcmi;Lbfx;Lcfv;I)V	a	onUseTick
		p	1		world
		p	2		user
		p	3		stack
		p	4		remainingUseTicks
	m	(Lcmi;Lbfx;Lcfv;Lcfv;)Lbys;	a	getArrow
		p	0		world
		p	1		entity
		p	2		crossbow
		p	3		arrow
	m	(Lcmi;Lbym;Lbdx;)Lbdz;	a	use
		p	1		world
		p	2		user
		p	3		hand
	m	(ZLapo;)F	a	getRandomShotPitch
		p	0		flag
		p	1		random
	m	()Ljava/util/function/Predicate;	b	getAllSupportedProjectiles
	m	(Lcfv;)I	b	getUseDuration
		p	1		stack
	m	(Lcfv;Lcfv;)V	b	addChargedProjectile
		p	0		crossbow
		p	1		projectile
	m	(Lcfv;)Lchn;	c	getUseAnimation
		p	1		stack
	m	()I	d	getDefaultProjectileRange
	m	(Lcfv;)Z	d	isCharged
		p	0		stack
	m	()Ljava/util/function/Predicate;	e	getSupportedHeldProjectiles
	m	(Lcfv;)I	k	getChargeDuration
		p	0		stack
	m	(Lcfv;)Z	l	useOnRelease
		p	1		stack
	m	(Lcfv;)F	o	getShootingPower
		p	0		stack
	m	(Lcfv;)Ljava/util/List;	p	getChargedProjectiles
		p	0		crossbow
	m	(Lcfv;)V	q	clearChargedProjectiles
		p	0		crossbow
	f	I	a	DEFAULT_RANGE
	f	Ljava/lang/String;	b	TAG_CHARGED
	f	Ljava/lang/String;	e	TAG_CHARGED_PROJECTILES
	f	I	f	MAX_CHARGE_DURATION
	f	Z	g	startSoundPlayed
	f	Z	h	midLoadSoundPlayed
	f	F	i	START_SOUND_PERCENT
	f	F	j	MID_SOUND_PERCENT
	f	F	k	ARROW_POWER
	f	F	r	FIREWORK_POWER
c	ceg	net/minecraft/world/item/DebugStickItem
	m	(Lcfq$a;)V	<init>	<init>
		p	1		settings
	m	(Lbym;Ldbq;Lcmj;Lgt;ZLcfv;)Z	a	handleInteraction
		p	1		player
		p	2		state
		p	3		world
		p	4		pos
		p	5		update
		p	6		stack
	m	(Lbym;Ltj;)V	a	message
		p	0		player
		p	1		message
	m	(Lcie;)Lbdy;	a	useOn
		p	1		context
	m	(Ldbq;Lcmi;Lgt;Lbym;)Z	a	canAttackBlock
		p	1		state
		p	2		world
		p	3		pos
		p	4		miner
	m	(Ldbq;Ldcu;)Ljava/lang/String;	a	getNameHelper
		p	0		state
		p	1		property
	m	(Ldbq;Ldcu;Z)Ldbq;	a	cycleState
		p	0		state
		p	1		property
		p	2		inverse
	m	(Ljava/lang/Iterable;Ljava/lang/Object;Z)Ljava/lang/Object;	a	getRelative
		p	0		elements
		p	1		current
		p	2		inverse
	m	(Lcfv;)Z	i	isFoil
		p	1		stack
c	ceh	net/minecraft/world/item/DiggerItem
	m	(FFLchh;Lanv;Lcfq$a;)V	<init>	<init>
		p	1		attackDamage
		p	2		attackSpeed
		p	3		material
		p	4		effectiveBlocks
		p	5		settings
	m	(Lbfm;)Lcom/google/common/collect/Multimap;	a	getDefaultAttributeModifiers
		p	1		slot
	m	(Lbfx;)V	a	lambda$mineBlock$1
		p	0		e
	m	(Lcfv;Lbfx;Lbfx;)Z	a	hurtEnemy
		p	1		stack
		p	2		target
		p	3		attacker
	m	(Lcfv;Lcmi;Ldbq;Lgt;Lbfx;)Z	a	mineBlock
		p	1		stack
		p	2		world
		p	3		state
		p	4		pos
		p	5		miner
	m	(Lcfv;Ldbq;)F	a	getDestroySpeed
		p	1		stack
		p	2		state
	m	(Ldbq;)Z	a_	isCorrectToolForDrops
		p	1		state
	m	(Lbfx;)V	b	lambda$hurtEnemy$0
		p	0		e
	m	()F	d	getAttackDamage
	f	Lanv;	a	blocks
	f	F	b	speed
	f	F	c	attackDamageBaseline
	f	Lcom/google/common/collect/Multimap;	d	defaultModifiers
c	cei	net/minecraft/world/item/DiscFragmentItem
	m	(Lcfq$a;)V	<init>	<init>
		p	1		settings
	m	(Lcfv;Lcmi;Ljava/util/List;Lchl;)V	a	appendHoverText
		p	1		stack
		p	2		world
		p	3		tooltip
		p	4		context
	m	()Ltw;	d	getDisplayName
c	cej	net/minecraft/world/item/DispensibleContainerItem
	m	(Lbym;Lcmi;Lcfv;Lgt;)V	a	checkExtraContent
		p	1		player
		p	2		world
		p	3		stack
		p	4		pos
	m	(Lbym;Lcmi;Lgt;Leda;)Z	a	emptyContents
		p	1		player
		p	2		world
		p	3		pos
		p	4		hitResult
c	cek	net/minecraft/world/item/DoubleHighBlockItem
	m	(Lcpi;Lcfq$a;)V	<init>	<init>
		p	1		block
		p	2		settings
	m	(Lcic;Ldbq;)Z	a	placeBlock
		p	1		context
		p	2		state
c	cel	net/minecraft/world/item/DyeColor
	m	(Ljava/lang/String;IILjava/lang/String;ILdwo;II)V	<init>	<init>
		p	3		id
		p	4		name
		p	5		color
		p	6		mapColor
		p	7		fireworkColor
		p	8		signColor
	m	()I	a	getId
	m	(I)Lcel;	a	byId
		p	0		id
	m	(Lcel;)Lcel;	a	lambda$static$1
		p	0		color
	m	(Ljava/lang/String;Lcel;)Lcel;	a	byName
		p	0		name
		p	1		defaultColor
	m	()Ljava/lang/String;	b	getName
	m	(I)Lcel;	b	byFireworkColor
		p	0		color
	m	(Lcel;)Ljava/lang/Integer;	b	lambda$static$0
		p	0		color
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[F	d	getTextureDiffuseColors
	m	()Ldwo;	e	getMaterialColor
	m	()I	f	getFireworkColor
	m	()I	g	getTextColor
	m	()[Lcel;	h	$values
	f	Lcel;	a	WHITE
	f	Lcel;	b	ORANGE
	f	Lcel;	c	MAGENTA
	f	Lcel;	d	LIGHT_BLUE
	f	Lcel;	e	YELLOW
	f	Lcel;	f	LIME
	f	Lcel;	g	PINK
	f	Lcel;	h	GRAY
	f	Lcel;	i	LIGHT_GRAY
	f	Lcel;	j	CYAN
	f	Lcel;	k	PURPLE
	f	Lcel;	l	BLUE
	f	Lcel;	m	BROWN
	f	Lcel;	n	GREEN
	f	Lcel;	o	RED
	f	Lcel;	p	BLACK
	f	Laqa$a;	q	CODEC
	f	Ljava/util/function/IntFunction;	r	BY_ID
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectOpenHashMap;	s	BY_FIREWORK_COLOR
	f	I	t	id
	f	Ljava/lang/String;	u	name
	f	Ldwo;	v	color
	f	[F	w	textureDiffuseColors
	f	I	x	fireworkColor
	f	I	y	textColor
	f	[Lcel;	z	$VALUES
c	cem	net/minecraft/world/item/DyeItem
	m	(Lcel;Lcfq$a;)V	<init>	<init>
		p	1		color
		p	2		settings
	m	(Lcel;)Lcem;	a	byColor
		p	0		color
	m	(Lcfv;Lbym;Lbfx;Lbdx;)Lbdy;	a	interactLivingEntity
		p	1		stack
		p	2		user
		p	3		entity
		p	4		hand
	m	()Lcel;	d	getDyeColor
	f	Ljava/util/Map;	a	ITEM_BY_COLOR
	f	Lcel;	b	dyeColor
c	cen	net/minecraft/world/item/DyeableArmorItem
	m	(Lcdi;Lcdh$a;Lcfq$a;)V	<init>	<init>
		p	1		material
		p	2		type
		p	3		settings
c	ceo	net/minecraft/world/item/DyeableHorseArmorItem
	m	(ILjava/lang/String;Lcfq$a;)V	<init>	<init>
		p	1		bonus
		p	2		name
		p	3		settings
c	cep	net/minecraft/world/item/DyeableLeatherItem
	m	(Lcfv;)Z	a	hasCustomColor
		p	1		stack
	m	(Lcfv;I)V	a	setColor
		p	1		stack
		p	2		color
	m	(Lcfv;Ljava/util/List;)Lcfv;	a	dyeArmor
		p	0		stack
		p	1		colors
	m	(Lcfv;)I	e_	getColor
		p	1		stack
	m	(Lcfv;)V	f_	clearColor
		p	1		stack
	f	Ljava/lang/String;	m_	TAG_COLOR
	f	Ljava/lang/String;	n_	TAG_DISPLAY
	f	I	o_	DEFAULT_LEATHER_COLOR
c	ceq	net/minecraft/world/item/EggItem
	m	(Lcfq$a;)V	<init>	<init>
		p	1		settings
	m	(Lcmi;Lbym;Lbdx;)Lbdz;	a	use
		p	1		world
		p	2		user
		p	3		hand
c	cer	net/minecraft/world/item/ElytraItem
	m	(Lcfq$a;)V	<init>	<init>
		p	1		settings
	m	(Lcfv;Lcfv;)Z	a	isValidRepairItem
		p	1		stack
		p	2		ingredient
	m	(Lcmi;Lbym;Lbdx;)Lbdz;	a	use
		p	1		world
		p	2		user
		p	3		hand
	m	()Lamq;	ak_	getEquipSound
	m	(Lcfv;)Z	d	isFlyEnabled
		p	0		stack
	m	()Lbfm;	g	getEquipmentSlot
c	ces	net/minecraft/world/item/EmptyMapItem
	m	(Lcfq$a;)V	<init>	<init>
		p	1		settings
	m	(Lcmi;Lbym;Lbdx;)Lbdz;	a	use
		p	1		world
		p	2		user
		p	3		hand
c	cet	net/minecraft/world/item/EnchantedBookItem
	m	(Lcfq$a;)V	<init>	<init>
		p	1		settings
	m	(Lcfv;Lckf;)V	a	addEnchantment
		p	0		stack
		p	1		entry
	m	(Lcfv;Lcmi;Ljava/util/List;Lchl;)V	a	appendHoverText
		p	1		stack
		p	2		world
		p	3		tooltip
		p	4		context
	m	(Lckf;)Lcfv;	a	createForEnchantment
		p	0		info
	m	(Lcfv;)Lrk;	d	getEnchantments
		p	0		stack
	m	(Lcfv;)Z	d_	isEnchantable
		p	1		stack
	m	(Lcfv;)Z	i	isFoil
		p	1		stack
	f	Ljava/lang/String;	a	TAG_STORED_ENCHANTMENTS
c	ceu	net/minecraft/world/item/EnchantedGoldenAppleItem
	m	(Lcfq$a;)V	<init>	<init>
		p	1		settings
	m	(Lcfv;)Z	i	isFoil
		p	1		stack
c	cev	net/minecraft/world/item/EndCrystalItem
	m	(Lcfq$a;)V	<init>	<init>
		p	1		settings
	m	(Lcie;)Lbdy;	a	useOn
		p	1		context
	m	(Lcfv;)Z	i	isFoil
		p	1		stack
c	cew	net/minecraft/world/item/EnderEyeItem
	m	(Lcfq$a;)V	<init>	<init>
		p	1		settings
	m	(Lcie;)Lbdy;	a	useOn
		p	1		context
	m	(Lcmi;Lbym;Lbdx;)Lbdz;	a	use
		p	1		world
		p	2		user
		p	3		hand
c	cex	net/minecraft/world/item/EnderpearlItem
	m	(Lcfq$a;)V	<init>	<init>
		p	1		settings
	m	(Lcmi;Lbym;Lbdx;)Lbdz;	a	use
		p	1		world
		p	2		user
		p	3		hand
c	cey	net/minecraft/world/item/Equipable
	m	(Lcfq;Lcmi;Lbym;Lbdx;)Lbdz;	a	swapWithEquipmentSlot
		p	1		item
		p	2		world
		p	3		user
		p	4		hand
	m	()Lamq;	ak_	getEquipSound
	m	(Lcfv;)Lcey;	c_	get
		p	0		stack
	m	()Lbfm;	g	getEquipmentSlot
c	cez	net/minecraft/world/item/ExperienceBottleItem
	m	(Lcfq$a;)V	<init>	<init>
		p	1		settings
	m	(Lcmi;Lbym;Lbdx;)Lbdz;	a	use
		p	1		world
		p	2		user
		p	3		hand
	m	(Lcfv;)Z	i	isFoil
		p	1		stack
c	cfa	net/minecraft/world/item/FireChargeItem
	m	(Lcfq$a;)V	<init>	<init>
		p	1		settings
	m	(Lcie;)Lbdy;	a	useOn
		p	1		context
	m	(Lcmi;Lgt;)V	a	playSound
		p	1		world
		p	2		pos
c	cfb	net/minecraft/world/item/FireworkRocketItem
	m	(Lcfq$a;)V	<init>	<init>
		p	1		settings
	m	(Lcfv;B)V	a	setDuration
		p	0		stack
		p	1		flight
	m	(Lcfv;Lcmi;Ljava/util/List;Lchl;)V	a	appendHoverText
		p	1		stack
		p	2		world
		p	3		tooltip
		p	4		context
	m	(Lcie;)Lbdy;	a	useOn
		p	1		context
	m	(Lcmi;Lbym;Lbdx;)Lbdz;	a	use
		p	1		world
		p	2		user
		p	3		hand
	m	()Lcfv;	ad_	getDefaultInstance
	f	[B	a	CRAFTABLE_DURATIONS
	f	Ljava/lang/String;	b	TAG_FIREWORKS
	f	Ljava/lang/String;	c	TAG_EXPLOSION
	f	Ljava/lang/String;	d	TAG_EXPLOSIONS
	f	Ljava/lang/String;	e	TAG_FLIGHT
	f	Ljava/lang/String;	f	TAG_EXPLOSION_TYPE
	f	Ljava/lang/String;	g	TAG_EXPLOSION_TRAIL
	f	Ljava/lang/String;	h	TAG_EXPLOSION_FLICKER
	f	Ljava/lang/String;	i	TAG_EXPLOSION_COLORS
	f	Ljava/lang/String;	j	TAG_EXPLOSION_FADECOLORS
	f	D	k	ROCKET_PLACEMENT_OFFSET
c	cfb$a	net/minecraft/world/item/FireworkRocketItem$Shape
	m	(Ljava/lang/String;IILjava/lang/String;)V	<init>	<init>
		p	3		id
		p	4		name
	m	()I	a	getId
	m	(I)Lcfb$a;	a	byId
		p	0		id
	m	()Ljava/lang/String;	b	getName
	m	()[Lcfb$a;	c	$values
	f	Lcfb$a;	a	SMALL_BALL
	f	Lcfb$a;	b	LARGE_BALL
	f	Lcfb$a;	c	STAR
	f	Lcfb$a;	d	CREEPER
	f	Lcfb$a;	e	BURST
	f	Ljava/util/function/IntFunction;	f	BY_ID
	f	I	g	id
	f	Ljava/lang/String;	h	name
	f	[Lcfb$a;	i	$VALUES
c	cfc	net/minecraft/world/item/FireworkStarItem
	m	(Lcfq$a;)V	<init>	<init>
		p	1		settings
	m	(I)Ltj;	a	getColorName
		p	0		color
	m	(Lcfv;Lcmi;Ljava/util/List;Lchl;)V	a	appendHoverText
		p	1		stack
		p	2		world
		p	3		tooltip
		p	4		context
	m	(Lre;Ljava/util/List;)V	a	appendHoverText
		p	0		nbt
		p	1		tooltip
	m	(Ltw;[I)Ltj;	a	appendColors
		p	0		line
		p	1		colors
c	cfd	net/minecraft/world/item/FishingRodItem
	m	(Lcfq$a;)V	<init>	<init>
		p	1		settings
	m	(Lbdx;Lbym;)V	a	lambda$use$0
		p	1		p
	m	(Lcmi;Lbym;Lbdx;)Lbdz;	a	use
		p	1		world
		p	2		user
		p	3		hand
	m	()I	c	getEnchantmentValue
c	cfe	net/minecraft/world/item/FlintAndSteelItem
	m	(Lcfq$a;)V	<init>	<init>
		p	1		settings
	m	(Lcie;)Lbdy;	a	useOn
		p	1		context
	m	(Lcie;Lbym;)V	a	lambda$useOn$1
		p	1		p
	m	(Lcie;Lbym;)V	b	lambda$useOn$0
		p	1		p
c	cff	net/minecraft/world/item/FoodOnAStickItem
	m	(Lcfq$a;Lbfl;I)V	<init>	<init>
		p	1		settings
		p	2		target
		p	3		damagePerUse
	m	(Lbdx;Lbym;)V	a	lambda$use$0
		p	1		p
	m	(Lcmi;Lbym;Lbdx;)Lbdz;	a	use
		p	1		world
		p	2		user
		p	3		hand
	f	Lbfl;	a	canInteractWith
	f	I	b	consumeItemDamage
c	cfg	net/minecraft/world/item/GameMasterBlockItem
	m	(Lcpi;Lcfq$a;)V	<init>	<init>
		p	1		block
		p	2		settings
	m	(Lcic;)Ldbq;	c	getPlacementState
		p	1		context
c	cfh	net/minecraft/world/item/HangingEntityItem
	m	(Lbfl;Lcfq$a;)V	<init>	<init>
		p	1		type
		p	2		settings
	m	(Lbym;Lgz;Lcfv;Lgt;)Z	a	mayPlace
		p	1		player
		p	2		side
		p	3		stack
		p	4		pos
	m	(Lcfv;Lcmi;Ljava/util/List;Lchl;)V	a	appendHoverText
		p	1		stack
		p	2		world
		p	3		tooltip
		p	4		context
	m	(Lcie;)Lbdy;	a	useOn
		p	1		context
	m	(Ljava/util/List;)V	a	lambda$appendHoverText$2
	m	(Ljava/util/List;Ladc;)V	a	lambda$appendHoverText$0
		p	1		key
	m	(Ljava/util/List;Lhd;)V	a	lambda$appendHoverText$1
		p	1		variant
	f	Ltj;	a	TOOLTIP_RANDOM_VARIANT
	f	Lbfl;	b	type
c	cfi	net/minecraft/world/item/HangingSignItem
	m	(Lcpi;Lcpi;Lcfq$a;)V	<init>	<init>
		p	1		hangingSign
		p	2		wallHangingSign
		p	3		settings
	m	(Lcml;Ldbq;Lgt;)Z	a	canPlace
		p	1		world
		p	2		state
		p	3		pos
	m	(Lgt;Lcmi;Lbym;Lcfv;Ldbq;)Z	a	updateCustomBlockEntityTag
		p	1		pos
		p	2		world
		p	3		player
		p	4		stack
		p	5		state
c	cfj	net/minecraft/world/item/HoeItem
	m	(Lchh;IFLcfq$a;)V	<init>	<init>
		p	1		material
		p	2		attackDamage
		p	3		attackSpeed
		p	4		settings
	m	(Lcie;)Lbdy;	a	useOn
		p	1		context
	m	(Lcie;Lbym;)V	a	lambda$useOn$1
		p	1		p
	m	(Ldbq;Lcie;)V	a	lambda$changeIntoState$2
		p	1		context
	m	(Ldbq;Lcmh;)Ljava/util/function/Consumer;	a	changeIntoStateAndDropItem
		p	0		result
		p	1		droppedItem
	m	(Ldbq;Lcmh;Lcie;)V	a	lambda$changeIntoStateAndDropItem$3
		p	2		context
	m	(Lcie;)Z	b	onlyIfAirAbove
		p	0		context
	m	(Ldbq;)Ljava/util/function/Consumer;	b	changeIntoState
		p	0		result
	m	(Lcie;)Z	c	lambda$static$0
	f	Ljava/util/Map;	a	TILLABLES
c	cfk	net/minecraft/world/item/HoneyBottleItem
	m	(Lcfq$a;)V	<init>	<init>
		p	1		settings
	m	(Lcfv;Lcmi;Lbfx;)Lcfv;	a	finishUsingItem
		p	1		stack
		p	2		world
		p	3		user
	m	(Lcmi;Lbym;Lbdx;)Lbdz;	a	use
		p	1		world
		p	2		user
		p	3		hand
	m	()Lamq;	ae_	getDrinkingSound
	m	()Lamq;	af_	getEatingSound
	m	(Lcfv;)I	b	getUseDuration
		p	1		stack
	m	(Lcfv;)Lchn;	c	getUseAnimation
		p	1		stack
	f	I	a	DRINK_DURATION
c	cfl	net/minecraft/world/item/HoneycombItem
	m	(Lcfq$a;)V	<init>	<init>
		p	1		settings
	m	(Lcie;)Lbdy;	a	useOn
		p	1		context
	m	(Lcie;Lgt;Lcmi;Ldbq;)Lbdy;	a	lambda$useOn$2
		p	3		state
	m	(Ldbq;Lcpi;)Ldbq;	a	lambda$getWaxed$3
		p	1		block
	m	(Ldbq;)Ljava/util/Optional;	b	getWaxed
		p	0		state
	m	()Lcom/google/common/collect/BiMap;	h	lambda$static$1
	m	()Lcom/google/common/collect/BiMap;	i	lambda$static$0
	f	Ljava/util/function/Supplier;	a	WAXABLES
	f	Ljava/util/function/Supplier;	b	WAX_OFF_BY_BLOCK
c	cfm	net/minecraft/world/item/HorseArmorItem
	m	(ILjava/lang/String;Lcfq$a;)V	<init>	<init>
		p	1		bonus
		p	2		name
		p	3		settings
	m	()Ladd;	h	getTexture
	m	()I	i	getProtection
	f	Ljava/lang/String;	a	TEX_FOLDER
	f	I	b	protection
	f	Ljava/lang/String;	c	texture
c	cfn	net/minecraft/world/item/Instrument
	m	()Lhd;	a	soundEvent
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()I	b	useDuration
	m	()F	c	range
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lhd;	b	soundEvent
	f	I	c	useDuration
	f	F	d	range
c	cfo	net/minecraft/world/item/InstrumentItem
	m	(Lcfq$a;Lanv;)V	<init>	<init>
		p	1		settings
		p	2		instrumentTag
	m	(Lapo;Lhh$c;)Ljava/util/Optional;	a	lambda$setRandom$0
		p	1		entryList
	m	(Lcfq;Lhd;)Lcfv;	a	create
		p	0		item
		p	1		instrument
	m	(Lcfv;Lanv;Lapo;)V	a	setRandom
		p	0		stack
		p	1		instrumentTag
		p	2		random
	m	(Lcfv;Lcmi;Ljava/util/List;Lchl;)V	a	appendHoverText
		p	1		stack
		p	2		world
		p	3		tooltip
		p	4		context
	m	(Lcfv;Lhd;)V	a	setSoundVariantId
		p	0		stack
		p	1		instrument
	m	(Lcmi;Lbym;Lbdx;)Lbdz;	a	use
		p	1		world
		p	2		user
		p	3		hand
	m	(Lcmi;Lbym;Lcfn;)V	a	play
		p	0		world
		p	1		player
		p	2		instrument
	m	(Lhd;)Ljava/lang/Integer;	a	lambda$getUseDuration$3
		p	0		instrument
	m	(Lcfv;)I	b	getUseDuration
		p	1		stack
	m	(Lcfv;Lhd;)V	b	lambda$setRandom$1
		p	1		instrument
	m	(Lcfv;)Lchn;	c	getUseAnimation
		p	1		stack
	m	(Lcfv;)Ljava/util/Optional;	d	getInstrument
		p	1		stack
	m	()Ljava/lang/IllegalStateException;	h	lambda$setSoundVariantId$2
	f	Ljava/lang/String;	a	TAG_INSTRUMENT
	f	Lanv;	b	instruments
c	cfp	net/minecraft/world/item/Instruments
	m	(Lhq;)Lcfn;	a	bootstrap
		p	0		registry
	m	(Ljava/lang/String;)Ladc;	a	create
		p	0		id
	f	I	a	GOAT_HORN_RANGE_BLOCKS
	f	I	b	GOAT_HORN_DURATION
	f	Ladc;	c	PONDER_GOAT_HORN
	f	Ladc;	d	SING_GOAT_HORN
	f	Ladc;	e	SEEK_GOAT_HORN
	f	Ladc;	f	FEEL_GOAT_HORN
	f	Ladc;	g	ADMIRE_GOAT_HORN
	f	Ladc;	h	CALL_GOAT_HORN
	f	Ladc;	i	YEARN_GOAT_HORN
	f	Ladc;	j	DREAM_GOAT_HORN
c	cfq	net/minecraft/world/item/Item
	m	(Lcfq$a;)V	<init>	<init>
		p	1		settings
	m	()Ljava/lang/String;	a	getDescriptionId
	m	(Lbem;)Z	a	canBeHurtBy
		p	1		source
	m	(Lbfm;)Lcom/google/common/collect/Multimap;	a	getDefaultAttributeModifiers
		p	1		slot
	m	(Lbvf;)V	a	onDestroyed
		p	1		entity
	m	(Lcfq;)I	a	getId
		p	0		item
	m	(Lcfv;Lbfx;Lbfx;)Z	a	hurtEnemy
		p	1		stack
		p	2		target
		p	3		attacker
	m	(Lcfv;Lbym;Lbfx;Lbdx;)Lbdy;	a	interactLivingEntity
		p	1		stack
		p	2		user
		p	3		entity
		p	4		hand
	m	(Lcfv;Lccw;Lcbl;Lbym;)Z	a	overrideStackedOnOther
		p	1		stack
		p	2		slot
		p	3		clickType
		p	4		player
	m	(Lcfv;Lcfv;)Z	a	isValidRepairItem
		p	1		stack
		p	2		ingredient
	m	(Lcfv;Lcfv;Lccw;Lcbl;Lbym;Lbgq;)Z	a	overrideOtherStackedOnMe
		p	1		stack
		p	2		otherStack
		p	3		slot
		p	4		clickType
		p	5		player
		p	6		cursorStackReference
	m	(Lcfv;Lcmi;Lbfh;IZ)V	a	inventoryTick
		p	1		stack
		p	2		world
		p	3		entity
		p	4		slot
		p	5		selected
	m	(Lcfv;Lcmi;Lbfx;)Lcfv;	a	finishUsingItem
		p	1		stack
		p	2		world
		p	3		user
	m	(Lcfv;Lcmi;Lbfx;I)V	a	releaseUsing
		p	1		stack
		p	2		world
		p	3		user
		p	4		remainingUseTicks
	m	(Lcfv;Lcmi;Ldbq;Lgt;Lbfx;)Z	a	mineBlock
		p	1		stack
		p	2		world
		p	3		state
		p	4		pos
		p	5		miner
	m	(Lcfv;Lcmi;Ljava/util/List;Lchl;)V	a	appendHoverText
		p	1		stack
		p	2		world
		p	3		tooltip
		p	4		context
	m	(Lcfv;Ldbq;)F	a	getDestroySpeed
		p	1		stack
		p	2		state
	m	(Lcie;)Lbdy;	a	useOn
		p	1		context
	m	(Lcmi;Lbfx;Lcfv;I)V	a	onUseTick
		p	1		world
		p	2		user
		p	3		stack
		p	4		remainingUseTicks
	m	(Lcmi;Lbym;Lbdx;)Lbdz;	a	use
		p	1		world
		p	2		user
		p	3		hand
	m	(Lcmi;Lbym;Lclr$b;)Leda;	a	getPlayerPOVHitResult
		p	0		world
		p	1		player
		p	2		fluidHandling
	m	(Lcpi;)Lcfq;	a	byBlock
		p	0		block
	m	(Ldbq;Lcmi;Lgt;Lbym;)Z	a	canAttackBlock
		p	1		state
		p	2		world
		p	3		pos
		p	4		miner
	m	(Ldbq;)Z	a_	isCorrectToolForDrops
		p	1		state
	m	()Z	ac_	isComplex
	m	()Lcfv;	ad_	getDefaultInstance
	m	()Lamq;	ae_	getDrinkingSound
	m	()Lamq;	af_	getEatingSound
	m	()Z	ag_	canFitInsideContainerItems
	m	(I)Lcfq;	b	byId
		p	0		id
	m	(Lcfv;)I	b	getUseDuration
		p	1		stack
	m	(Lcfv;Lcmi;Lbym;)V	b	onCraftedBy
		p	1		stack
		p	2		world
		p	3		player
	m	(Lre;)V	b	verifyTagAfterLoad
		p	1		nbt
	m	()I	c	getEnchantmentValue
	m	(Lcfv;)Lchn;	c	getUseAnimation
		p	1		stack
	m	(Lcfv;)Z	d_	isEnchantable
		p	1		stack
	m	(Lcfv;)Z	e	isBarVisible
		p	1		stack
	m	(Lcfv;)I	f	getBarWidth
		p	1		stack
	m	(Lcfv;)I	g	getBarColor
		p	1		stack
	m	(Lcfv;)Ljava/util/Optional;	h	getTooltipImage
		p	1		stack
	m	(Lcfv;)Z	i	isFoil
		p	1		stack
	m	()Lhd$c;	j	builtInRegistryHolder
	m	(Lcfv;)Ljava/lang/String;	j	getDescriptionId
		p	1		stack
	m	()Lcfq;	k	asItem
	m	()I	l	getMaxStackSize
	m	(Lcfv;)Z	l	useOnRelease
		p	1		stack
	m	()Lcau;	m	requiredFeatures
	m	(Lcfv;)Ltj;	m	getName
		p	1		stack
	m	()I	n	getMaxDamage
	m	(Lcfv;)Lcgm;	n	getRarity
		p	1		stack
	m	()Z	o	canBeDepleted
	m	()Ltj;	p	getDescription
	m	()Ljava/lang/String;	q	getOrCreateDescriptionId
	m	()Z	r	shouldOverrideMultiplayerNbt
	m	()Lcfq;	s	getCraftingRemainingItem
	m	()Z	t	hasCraftingRemainingItem
	m	()Z	u	isEdible
	m	()Lcba;	v	getFoodProperties
	m	()Z	w	isFireResistant
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lhd$c;	b	builtInRegistryHolder
	f	Lcgm;	c	rarity
	f	I	d	maxStackSize
	f	I	e	maxDamage
	f	Z	f	isFireResistant
	f	Lcfq;	g	craftingRemainingItem
	f	Ljava/lang/String;	h	descriptionId
	f	Lcba;	i	foodProperties
	f	Lcau;	j	requiredFeatures
	f	Ljava/util/Map;	l	BY_BLOCK
	f	Ljava/util/UUID;	m	BASE_ATTACK_DAMAGE_UUID
	f	Ljava/util/UUID;	n	BASE_ATTACK_SPEED_UUID
	f	I	o	MAX_STACK_SIZE
	f	I	p	EAT_DURATION
	f	I	q	MAX_BAR_WIDTH
c	cfq$1	net/minecraft/world/item/Item$1
	f	[I	a	$SwitchMap$net$minecraft$world$item$Rarity
c	cfq$a	net/minecraft/world/item/Item$Properties
	m	()Lcfq$a;	a	fireResistant
	m	(I)Lcfq$a;	a	stacksTo
		p	1		maxCount
	m	(Lcba;)Lcfq$a;	a	food
		p	1		foodComponent
	m	(Lcfq;)Lcfq$a;	a	craftRemainder
		p	1		recipeRemainder
	m	(Lcgm;)Lcfq$a;	a	rarity
		p	1		rarity
	m	([Lcas;)Lcfq$a;	a	requiredFeatures
		p	1		features
	m	(I)Lcfq$a;	b	defaultDurability
		p	1		maxDamage
	m	(I)Lcfq$a;	c	durability
		p	1		maxDamage
	f	I	a	maxStackSize
	f	I	b	maxDamage
	f	Lcfq;	c	craftingRemainingItem
	f	Lcgm;	d	rarity
	f	Lcba;	e	foodProperties
	f	Z	f	isFireResistant
	f	Lcau;	g	requiredFeatures
c	cfr	net/minecraft/world/item/ItemCooldowns
	m	()V	a	tick
	m	(Lcfq;)Z	a	isOnCooldown
		p	1		item
	m	(Lcfq;F)F	a	getCooldownPercent
		p	1		item
		p	2		tickDelta
	m	(Lcfq;I)V	a	addCooldown
		p	1		item
		p	2		duration
	m	(Lcfq;)V	b	removeCooldown
		p	1		item
	m	(Lcfq;I)V	b	onCooldownStarted
		p	1		item
		p	2		duration
	m	(Lcfq;)V	c	onCooldownEnded
		p	1		item
	f	Ljava/util/Map;	a	cooldowns
	f	I	b	tickCount
c	cfr$a	net/minecraft/world/item/ItemCooldowns$CooldownInstance
	m	(II)V	<init>	<init>
		p	1		startTick
		p	2		endTick
	f	I	a	startTime
	f	I	b	endTime
c	cfs	net/minecraft/world/item/ItemDisplayContext
	m	(Ljava/lang/String;IILjava/lang/String;)V	<init>	<init>
		p	3		index
		p	4		name
	m	()B	a	getId
	m	()Z	b	firstPerson
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Lcfs;	d	$values
	f	Lcfs;	a	NONE
	f	Lcfs;	b	THIRD_PERSON_LEFT_HAND
	f	Lcfs;	c	THIRD_PERSON_RIGHT_HAND
	f	Lcfs;	d	FIRST_PERSON_LEFT_HAND
	f	Lcfs;	e	FIRST_PERSON_RIGHT_HAND
	f	Lcfs;	f	HEAD
	f	Lcfs;	g	GUI
	f	Lcfs;	h	GROUND
	f	Lcfs;	i	FIXED
	f	Lcom/mojang/serialization/Codec;	j	CODEC
	f	Ljava/util/function/IntFunction;	k	BY_ID
	f	B	l	id
	f	Ljava/lang/String;	m	name
	f	[Lcfs;	n	$VALUES
c	cft	net/minecraft/world/item/ItemFrameItem
	m	(Lbfl;Lcfq$a;)V	<init>	<init>
		p	1		type
		p	2		settings
	m	(Lbym;Lgz;Lcfv;Lgt;)Z	a	mayPlace
		p	1		player
		p	2		side
		p	3		stack
		p	4		pos
c	cfu	net/minecraft/world/item/ItemNameBlockItem
	m	(Lcpi;Lcfq$a;)V	<init>	<init>
		p	1		block
		p	2		settings
	m	()Ljava/lang/String;	a	getDescriptionId
c	cfv	net/minecraft/world/item/ItemStack
	m	(Lcmh;)V	<init>	<init>
		p	1		item
	m	(Lcmh;I)V	<init>	<init>
		p	1		item
		p	2		count
	m	(Lcmh;ILjava/util/Optional;)V	<init>	<init>
		p	1		item
		p	2		count
		p	3		nbt
	m	(Lhd;)V	<init>	<init>
		p	1		entry
	m	(Lhd;I)V	<init>	<init>
		p	1		itemEntry
		p	2		count
	m	(Lre;)V	<init>	<init>
		p	1		nbt
	m	()Z	A	hasFoil
	m	()Lcgm;	B	getRarity
	m	()Z	C	isEnchantable
	m	()Z	D	isEnchanted
	m	()Z	E	isFramed
	m	()Lbuy;	F	getFrame
	m	()Lbfh;	G	getEntityRepresentation
	m	()I	H	getBaseRepairCost
	m	()Ltj;	I	getDisplayName
	m	()I	J	getPopTime
	m	()I	K	getCount
	m	()Z	L	isEdible
	m	()Lamq;	M	getDrinkingSound
	m	()Lamq;	N	getEatingSound
	m	()V	O	updateEmptyCacheFlag
	m	()I	P	getHideFlags
	m	()Ljava/util/Optional;	a	getTooltipImage
	m	(I)Lcfv;	a	split
		p	1		amount
	m	(ILapo;Laiq;)Z	a	hurt
		p	1		amount
		p	2		random
		p	3		player
	m	(ILbfx;Ljava/util/function/Consumer;)V	a	hurtAndBreak
		p	1		amount
		p	2		entity
		p	3		breakCallback
	m	(ILcfv$a;)Z	a	shouldShowInTooltip
		p	0		flags
		p	1		tooltipSection
	m	(Lanv;)Z	a	is
		p	1		tag
	m	(Lbfh;)V	a	setEntityRepresentation
		p	1		holder
	m	(Lbfm;)Lcom/google/common/collect/Multimap;	a	getAttributeModifiers
		p	1		slot
	m	(Lbfx;Lbym;)V	a	hurtEnemy
		p	1		target
		p	2		attacker
	m	(Lbgz;Lbhc;Lbfm;)V	a	addAttributeModifier
		p	1		attribute
		p	2		modifier
		p	3		slot
	m	(Lbvf;)V	a	onDestroyed
		p	1		entity
	m	(Lbym;Lbfx;Lbdx;)Lbdy;	a	interactLivingEntity
		p	1		user
		p	2		entity
		p	3		hand
	m	(Lbym;Lchl;)Ljava/util/List;	a	getTooltipLines
		p	1		player
		p	2		context
	m	(Lcau;)Z	a	isItemEnabled
		p	1		enabledFeatures
	m	(Lccw;Lcbl;Lbym;)Z	a	overrideStackedOnOther
		p	1		slot
		p	2		clickType
		p	3		player
	m	(Lcfq;)Z	a	is
		p	1		item
	m	(Lcfv$a;)V	a	hideTooltipPart
		p	1		tooltipSection
	m	(Lcfv;)Z	a	sameItem
		p	1		stack
	m	(Lcfv;Lccw;Lcbl;Lbym;Lbgq;)Z	a	overrideOtherStackedOnMe
		p	1		stack
		p	2		slot
		p	3		clickType
		p	4		player
		p	5		cursorStackReference
	m	(Lcfv;Lcfv;)Z	a	tagMatches
		p	0		left
		p	1		right
	m	(Lcie;)Lbdy;	a	useOn
		p	1		context
	m	(Lckc;I)V	a	enchant
		p	1		enchantment
		p	2		level
	m	(Lcmi;Lbfh;IZ)V	a	inventoryTick
		p	1		world
		p	2		entity
		p	3		slot
		p	4		selected
	m	(Lcmi;Lbfx;)Lcfv;	a	finishUsingItem
		p	1		world
		p	2		user
	m	(Lcmi;Lbfx;I)V	a	releaseUsing
		p	1		world
		p	2		user
		p	3		remainingUseTicks
	m	(Lcmi;Lbym;I)V	a	onCraftedBy
		p	1		world
		p	2		player
		p	3		amount
	m	(Lcmi;Lbym;Lbdx;)Lbdz;	a	use
		p	1		world
		p	2		user
		p	3		hand
	m	(Lcmi;Ldbq;Lgt;Lbym;)V	a	mineBlock
		p	1		world
		p	2		state
		p	3		pos
		p	4		miner
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	(Ldbq;)F	a	getDestroySpeed
		p	1		state
	m	(Lff$a;)Ljava/util/List;	a	lambda$expandBlockState$6
	m	(Lff$b;)Ljava/util/List;	a	lambda$expandBlockState$8
	m	(Lhd;)Z	a	is
		p	1		itemEntry
	m	(Lhq;Ldbu;)Z	a	hasAdventureModePlaceTagForBlock
		p	1		blockRegistry
		p	2		pos
	m	(Ljava/lang/String;)Lre;	a	getOrCreateTagElement
		p	1		key
	m	(Ljava/lang/String;Lrx;)V	a	addTagElement
		p	1		key
		p	2		element
	m	(Ljava/text/DecimalFormat;)V	a	lambda$static$4
		p	0		decimalFormat
	m	(Ljava/util/List;Lre;Lckc;)V	a	lambda$appendEnchantmentNames$5
		p	2		e
	m	(Ljava/util/List;Lrk;)V	a	appendEnchantmentNames
		p	0		tooltip
		p	1		enchantments
	m	(Ljava/util/function/Predicate;)Z	a	is
		p	1		predicate
	m	(Lre;)Lcfv;	a	of
		p	0		nbt
	m	(Ltj;)Lcfv;	a	setHoverName
		p	1		name
	m	(Luf;)Luf;	a	lambda$getDisplayName$9
		p	1		style
	m	()Z	b	isEmpty
	m	(I)V	b	setDamageValue
		p	1		damage
	m	(Lcfv;)Z	b	matches
		p	1		stack
	m	(Lcfv;Lcfv;)Z	b	matches
		p	0		left
		p	1		right
	m	(Lcmi;Lbfx;I)V	b	onUseTick
		p	1		world
		p	2		user
		p	3		remainingUseTicks
	m	(Ldbq;)Z	b	isCorrectToolForDrops
		p	1		state
	m	(Lhd;)Ltw;	b	lambda$expandBlockState$7
	m	(Lhq;Ldbu;)Z	b	hasAdventureModeBreakTagForBlock
		p	1		blockRegistry
		p	2		pos
	m	(Ljava/lang/String;)Lre;	b	getTagElement
		p	1		key
	m	(Lre;)Lre;	b	save
		p	1		nbt
	m	()Lcfq;	c	getItem
	m	(I)Lcfv;	c	copyWithCount
		p	1		count
	m	(Lcfv;)Ljava/util/Optional;	c	lambda$static$2
		p	0		stack
	m	(Lcfv;Lcfv;)Z	c	isSame
		p	0		left
		p	1		right
	m	(Ljava/lang/String;)V	c	removeTagKey
		p	1		key
	m	(Lre;)V	c	setTag
		p	1		nbt
	m	()Lhd;	d	getItemHolder
	m	(I)V	d	setRepairCost
		p	1		repairCost
	m	(Lcfv;)Ljava/lang/Integer;	d	lambda$static$1
		p	0		stack
	m	(Lcfv;Lcfv;)Z	d	isSameItemSameTags
		p	0		stack
		p	1		otherStack
	m	(Ljava/lang/String;)Ljava/util/Collection;	d	expandBlockState
		p	0		tag
	m	()Ljava/util/stream/Stream;	e	getTags
	m	(I)V	e	setPopTime
		p	1		bobbingAnimationTime
	m	(Lcfv;)Lcfq;	e	lambda$static$0
		p	0		stack
	m	()I	f	getMaxStackSize
	m	(I)V	f	setCount
		p	1		count
	m	()Z	g	isStackable
	m	(I)V	g	grow
		p	1		amount
	m	()Z	h	isDamageableItem
	m	(I)V	h	shrink
		p	1		amount
	m	()Z	i	isDamaged
	m	()I	j	getDamageValue
	m	()I	k	getMaxDamage
	m	()Z	l	isBarVisible
	m	()I	m	getBarWidth
	m	()I	n	getBarColor
	m	()Lcfv;	o	copy
	m	()Ljava/lang/String;	p	getDescriptionId
	m	()I	q	getUseDuration
	m	()Lchn;	r	getUseAnimation
	m	()Z	s	useOnRelease
	m	()Z	t	hasTag
	m	()Lre;	u	getTag
	m	()Lre;	v	getOrCreateTag
	m	()Lrk;	w	getEnchantmentTags
	m	()Ltj;	x	getHoverName
	m	()V	y	resetHoverName
	m	()Z	z	hasCustomHoverName
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcfv;	b	EMPTY
	f	Ljava/text/DecimalFormat;	c	ATTRIBUTE_MODIFIER_FORMAT
	f	Ljava/lang/String;	d	TAG_ENCH
	f	Ljava/lang/String;	e	TAG_DISPLAY
	f	Ljava/lang/String;	f	TAG_DISPLAY_NAME
	f	Ljava/lang/String;	g	TAG_LORE
	f	Ljava/lang/String;	h	TAG_DAMAGE
	f	Ljava/lang/String;	i	TAG_COLOR
	f	Lorg/slf4j/Logger;	j	LOGGER
	f	Ljava/lang/String;	k	TAG_UNBREAKABLE
	f	Ljava/lang/String;	l	TAG_REPAIR_COST
	f	Ljava/lang/String;	m	TAG_CAN_DESTROY_BLOCK_LIST
	f	Ljava/lang/String;	n	TAG_CAN_PLACE_ON_BLOCK_LIST
	f	Ljava/lang/String;	o	TAG_HIDE_FLAGS
	f	Ltj;	p	DISABLED_ITEM_TOOLTIP
	f	I	q	DONT_HIDE_TOOLTIP
	f	Luf;	r	LORE_STYLE
	f	I	s	count
	f	I	t	popTime
	f	Lcfq;	u	item
	f	Lre;	v	tag
	f	Z	w	emptyCacheFlag
	f	Lbfh;	x	entityRepresentation
	f	Lcdf;	y	adventureBreakCheck
	f	Lcdf;	z	adventurePlaceCheck
c	cfv$a	net/minecraft/world/item/ItemStack$TooltipPart
	m	()I	a	getMask
	m	()[Lcfv$a;	b	$values
	f	Lcfv$a;	a	ENCHANTMENTS
	f	Lcfv$a;	b	MODIFIERS
	f	Lcfv$a;	c	UNBREAKABLE
	f	Lcfv$a;	d	CAN_DESTROY
	f	Lcfv$a;	e	CAN_PLACE
	f	Lcfv$a;	f	ADDITIONAL
	f	Lcfv$a;	g	DYE
	f	Lcfv$a;	h	UPGRADES
	f	I	i	mask
	f	[Lcfv$a;	j	$VALUES
c	cfw	net/minecraft/world/item/ItemStackLinkedSet
	m	()Ljava/util/Set;	a	createTypeAndTagSet
	m	(Lcfv;)I	a	hashStackAndTag
		p	0		stack
	f	Lit/unimi/dsi/fastutil/Hash$Strategy;	a	TYPE_AND_TAG
c	cfw$1	net/minecraft/world/item/ItemStackLinkedSet$1
	m	(Lcfv;)I	a	hashCode
	m	(Lcfv;Lcfv;)Z	a	equals
c	cfx	net/minecraft/world/item/ItemUtils
	m	(Lbvf;Ljava/util/stream/Stream;)V	a	onContainerDestroyed
		p	0		itemEntity
		p	1		contents
	m	(Lcfv;Lbym;Lcfv;)Lcfv;	a	createFilledResult
		p	0		inputStack
		p	1		player
		p	2		outputStack
	m	(Lcfv;Lbym;Lcfv;Z)Lcfv;	a	createFilledResult
		p	0		inputStack
		p	1		player
		p	2		outputStack
		p	3		creativeOverride
	m	(Lcmi;Lbvf;Lcfv;)V	a	lambda$onContainerDestroyed$0
		p	2		stack
	m	(Lcmi;Lbym;Lbdx;)Lbdz;	a	startUsingInstantly
		p	0		world
		p	1		player
		p	2		hand
c	cfy	net/minecraft/world/item/Items
	m	(Ladd;Lcfq;)Lcfq;	a	registerItem
		p	0		id
		p	1		item
	m	(Lcdq;)Lcfq;	a	registerBlock
		p	0		item
	m	(Lcpi;)Lcfq;	a	registerBlock
		p	0		block
	m	(Lcpi;Lcfq;)Lcfq;	a	registerBlock
		p	0		block
		p	1		item
	m	(Lcpi;[Lcpi;)Lcfq;	a	registerBlock
		p	0		block
		p	1		blocks
	m	(Ljava/lang/String;Lcfq;)Lcfq;	a	registerItem
		p	0		id
		p	1		item
	f	Lcfq;	A	JUNGLE_PLANKS
	f	Lcfq;	B	ACACIA_PLANKS
	f	Lcfq;	C	CHERRY_PLANKS
	f	Lcfq;	D	DARK_OAK_PLANKS
	f	Lcfq;	E	MANGROVE_PLANKS
	f	Lcfq;	F	BAMBOO_PLANKS
	f	Lcfq;	G	CRIMSON_PLANKS
	f	Lcfq;	H	WARPED_PLANKS
	f	Lcfq;	I	BAMBOO_MOSAIC
	f	Lcfq;	J	OAK_SAPLING
	f	Lcfq;	K	SPRUCE_SAPLING
	f	Lcfq;	L	BIRCH_SAPLING
	f	Lcfq;	M	JUNGLE_SAPLING
	f	Lcfq;	N	ACACIA_SAPLING
	f	Lcfq;	O	CHERRY_SAPLING
	f	Lcfq;	P	DARK_OAK_SAPLING
	f	Lcfq;	Q	MANGROVE_PROPAGULE
	f	Lcfq;	R	BEDROCK
	f	Lcfq;	S	SAND
	f	Lcfq;	T	SUSPICIOUS_SAND
	f	Lcfq;	U	RED_SAND
	f	Lcfq;	V	GRAVEL
	f	Lcfq;	W	COAL_ORE
	f	Lcfq;	X	DEEPSLATE_COAL_ORE
	f	Lcfq;	Y	IRON_ORE
	f	Lcfq;	Z	DEEPSLATE_IRON_ORE
	f	Lcfq;	aA	EXPOSED_COPPER
	f	Lcfq;	aB	WEATHERED_COPPER
	f	Lcfq;	aC	OXIDIZED_COPPER
	f	Lcfq;	aD	CUT_COPPER
	f	Lcfq;	aE	EXPOSED_CUT_COPPER
	f	Lcfq;	aF	WEATHERED_CUT_COPPER
	f	Lcfq;	aG	OXIDIZED_CUT_COPPER
	f	Lcfq;	aH	CUT_COPPER_STAIRS
	f	Lcfq;	aI	EXPOSED_CUT_COPPER_STAIRS
	f	Lcfq;	aJ	WEATHERED_CUT_COPPER_STAIRS
	f	Lcfq;	aK	OXIDIZED_CUT_COPPER_STAIRS
	f	Lcfq;	aL	CUT_COPPER_SLAB
	f	Lcfq;	a	AIR
	f	Lcfq;	aM	EXPOSED_CUT_COPPER_SLAB
	f	Lcfq;	aN	WEATHERED_CUT_COPPER_SLAB
	f	Lcfq;	aO	OXIDIZED_CUT_COPPER_SLAB
	f	Lcfq;	aP	WAXED_COPPER_BLOCK
	f	Lcfq;	aQ	WAXED_EXPOSED_COPPER
	f	Lcfq;	aR	WAXED_WEATHERED_COPPER
	f	Lcfq;	aS	WAXED_OXIDIZED_COPPER
	f	Lcfq;	aT	WAXED_CUT_COPPER
	f	Lcfq;	aU	WAXED_EXPOSED_CUT_COPPER
	f	Lcfq;	aV	WAXED_WEATHERED_CUT_COPPER
	f	Lcfq;	aW	WAXED_OXIDIZED_CUT_COPPER
	f	Lcfq;	aX	WAXED_CUT_COPPER_STAIRS
	f	Lcfq;	aY	WAXED_EXPOSED_CUT_COPPER_STAIRS
	f	Lcfq;	aZ	WAXED_WEATHERED_CUT_COPPER_STAIRS
	f	Lcfq;	aa	COPPER_ORE
	f	Lcfq;	ab	DEEPSLATE_COPPER_ORE
	f	Lcfq;	ac	GOLD_ORE
	f	Lcfq;	ad	DEEPSLATE_GOLD_ORE
	f	Lcfq;	ae	REDSTONE_ORE
	f	Lcfq;	af	DEEPSLATE_REDSTONE_ORE
	f	Lcfq;	ag	EMERALD_ORE
	f	Lcfq;	ah	DEEPSLATE_EMERALD_ORE
	f	Lcfq;	ai	LAPIS_ORE
	f	Lcfq;	aj	DEEPSLATE_LAPIS_ORE
	f	Lcfq;	ak	DIAMOND_ORE
	f	Lcfq;	al	DEEPSLATE_DIAMOND_ORE
	f	Lcfq;	am	NETHER_GOLD_ORE
	f	Lcfq;	an	NETHER_QUARTZ_ORE
	f	Lcfq;	ao	ANCIENT_DEBRIS
	f	Lcfq;	ap	COAL_BLOCK
	f	Lcfq;	aq	RAW_IRON_BLOCK
	f	Lcfq;	ar	RAW_COPPER_BLOCK
	f	Lcfq;	as	RAW_GOLD_BLOCK
	f	Lcfq;	at	AMETHYST_BLOCK
	f	Lcfq;	au	BUDDING_AMETHYST
	f	Lcfq;	av	IRON_BLOCK
	f	Lcfq;	aw	COPPER_BLOCK
	f	Lcfq;	ax	GOLD_BLOCK
	f	Lcfq;	ay	DIAMOND_BLOCK
	f	Lcfq;	az	NETHERITE_BLOCK
	f	Lcfq;	bA	STRIPPED_CRIMSON_STEM
	f	Lcfq;	bB	STRIPPED_WARPED_STEM
	f	Lcfq;	bC	STRIPPED_OAK_WOOD
	f	Lcfq;	bD	STRIPPED_SPRUCE_WOOD
	f	Lcfq;	bE	STRIPPED_BIRCH_WOOD
	f	Lcfq;	bF	STRIPPED_JUNGLE_WOOD
	f	Lcfq;	bG	STRIPPED_ACACIA_WOOD
	f	Lcfq;	bH	STRIPPED_CHERRY_WOOD
	f	Lcfq;	bI	STRIPPED_DARK_OAK_WOOD
	f	Lcfq;	bJ	STRIPPED_MANGROVE_WOOD
	f	Lcfq;	bK	STRIPPED_CRIMSON_HYPHAE
	f	Lcfq;	bL	STRIPPED_WARPED_HYPHAE
	f	Lcfq;	b	STONE
	f	Lcfq;	bM	STRIPPED_BAMBOO_BLOCK
	f	Lcfq;	bN	OAK_WOOD
	f	Lcfq;	bO	SPRUCE_WOOD
	f	Lcfq;	bP	BIRCH_WOOD
	f	Lcfq;	bQ	JUNGLE_WOOD
	f	Lcfq;	bR	ACACIA_WOOD
	f	Lcfq;	bS	CHERRY_WOOD
	f	Lcfq;	bT	DARK_OAK_WOOD
	f	Lcfq;	bU	MANGROVE_WOOD
	f	Lcfq;	bV	CRIMSON_HYPHAE
	f	Lcfq;	bW	WARPED_HYPHAE
	f	Lcfq;	bX	OAK_LEAVES
	f	Lcfq;	bY	SPRUCE_LEAVES
	f	Lcfq;	bZ	BIRCH_LEAVES
	f	Lcfq;	ba	WAXED_OXIDIZED_CUT_COPPER_STAIRS
	f	Lcfq;	bb	WAXED_CUT_COPPER_SLAB
	f	Lcfq;	bc	WAXED_EXPOSED_CUT_COPPER_SLAB
	f	Lcfq;	bd	WAXED_WEATHERED_CUT_COPPER_SLAB
	f	Lcfq;	be	WAXED_OXIDIZED_CUT_COPPER_SLAB
	f	Lcfq;	bf	OAK_LOG
	f	Lcfq;	bg	SPRUCE_LOG
	f	Lcfq;	bh	BIRCH_LOG
	f	Lcfq;	bi	JUNGLE_LOG
	f	Lcfq;	bj	ACACIA_LOG
	f	Lcfq;	bk	CHERRY_LOG
	f	Lcfq;	bl	DARK_OAK_LOG
	f	Lcfq;	bm	MANGROVE_LOG
	f	Lcfq;	bn	MANGROVE_ROOTS
	f	Lcfq;	bo	MUDDY_MANGROVE_ROOTS
	f	Lcfq;	bp	CRIMSON_STEM
	f	Lcfq;	bq	WARPED_STEM
	f	Lcfq;	br	BAMBOO_BLOCK
	f	Lcfq;	bs	STRIPPED_OAK_LOG
	f	Lcfq;	bt	STRIPPED_SPRUCE_LOG
	f	Lcfq;	bu	STRIPPED_BIRCH_LOG
	f	Lcfq;	bv	STRIPPED_JUNGLE_LOG
	f	Lcfq;	bw	STRIPPED_ACACIA_LOG
	f	Lcfq;	bx	STRIPPED_CHERRY_LOG
	f	Lcfq;	by	STRIPPED_DARK_OAK_LOG
	f	Lcfq;	bz	STRIPPED_MANGROVE_LOG
	f	Lcfq;	cA	LIGHT_BLUE_WOOL
	f	Lcfq;	cB	YELLOW_WOOL
	f	Lcfq;	cC	LIME_WOOL
	f	Lcfq;	cD	PINK_WOOL
	f	Lcfq;	cE	GRAY_WOOL
	f	Lcfq;	cF	LIGHT_GRAY_WOOL
	f	Lcfq;	cG	CYAN_WOOL
	f	Lcfq;	cH	PURPLE_WOOL
	f	Lcfq;	cI	BLUE_WOOL
	f	Lcfq;	cJ	BROWN_WOOL
	f	Lcfq;	cK	GREEN_WOOL
	f	Lcfq;	cL	RED_WOOL
	f	Lcfq;	c	GRANITE
	f	Lcfq;	cM	BLACK_WOOL
	f	Lcfq;	cN	DANDELION
	f	Lcfq;	cO	POPPY
	f	Lcfq;	cP	BLUE_ORCHID
	f	Lcfq;	cQ	ALLIUM
	f	Lcfq;	cR	AZURE_BLUET
	f	Lcfq;	cS	RED_TULIP
	f	Lcfq;	cT	ORANGE_TULIP
	f	Lcfq;	cU	WHITE_TULIP
	f	Lcfq;	cV	PINK_TULIP
	f	Lcfq;	cW	OXEYE_DAISY
	f	Lcfq;	cX	CORNFLOWER
	f	Lcfq;	cY	LILY_OF_THE_VALLEY
	f	Lcfq;	cZ	WITHER_ROSE
	f	Lcfq;	ca	JUNGLE_LEAVES
	f	Lcfq;	cb	ACACIA_LEAVES
	f	Lcfq;	cc	CHERRY_LEAVES
	f	Lcfq;	cd	DARK_OAK_LEAVES
	f	Lcfq;	ce	MANGROVE_LEAVES
	f	Lcfq;	cf	AZALEA_LEAVES
	f	Lcfq;	cg	FLOWERING_AZALEA_LEAVES
	f	Lcfq;	ch	SPONGE
	f	Lcfq;	ci	WET_SPONGE
	f	Lcfq;	cj	GLASS
	f	Lcfq;	ck	TINTED_GLASS
	f	Lcfq;	cl	LAPIS_BLOCK
	f	Lcfq;	cm	SANDSTONE
	f	Lcfq;	cn	CHISELED_SANDSTONE
	f	Lcfq;	co	CUT_SANDSTONE
	f	Lcfq;	cp	COBWEB
	f	Lcfq;	cq	GRASS
	f	Lcfq;	cr	FERN
	f	Lcfq;	cs	AZALEA
	f	Lcfq;	ct	FLOWERING_AZALEA
	f	Lcfq;	cu	DEAD_BUSH
	f	Lcfq;	cv	SEAGRASS
	f	Lcfq;	cw	SEA_PICKLE
	f	Lcfq;	cx	WHITE_WOOL
	f	Lcfq;	cy	ORANGE_WOOL
	f	Lcfq;	cz	MAGENTA_WOOL
	f	Lcfq;	dA	DARK_OAK_SLAB
	f	Lcfq;	dB	MANGROVE_SLAB
	f	Lcfq;	dC	BAMBOO_SLAB
	f	Lcfq;	dD	BAMBOO_MOSAIC_SLAB
	f	Lcfq;	dE	CRIMSON_SLAB
	f	Lcfq;	dF	WARPED_SLAB
	f	Lcfq;	dG	STONE_SLAB
	f	Lcfq;	dH	SMOOTH_STONE_SLAB
	f	Lcfq;	dI	SANDSTONE_SLAB
	f	Lcfq;	dJ	CUT_STANDSTONE_SLAB
	f	Lcfq;	dK	PETRIFIED_OAK_SLAB
	f	Lcfq;	dL	COBBLESTONE_SLAB
	f	Lcfq;	d	POLISHED_GRANITE
	f	Lcfq;	dM	BRICK_SLAB
	f	Lcfq;	dN	STONE_BRICK_SLAB
	f	Lcfq;	dO	MUD_BRICK_SLAB
	f	Lcfq;	dP	NETHER_BRICK_SLAB
	f	Lcfq;	dQ	QUARTZ_SLAB
	f	Lcfq;	dR	RED_SANDSTONE_SLAB
	f	Lcfq;	dS	CUT_RED_SANDSTONE_SLAB
	f	Lcfq;	dT	PURPUR_SLAB
	f	Lcfq;	dU	PRISMARINE_SLAB
	f	Lcfq;	dV	PRISMARINE_BRICK_SLAB
	f	Lcfq;	dW	DARK_PRISMARINE_SLAB
	f	Lcfq;	dX	SMOOTH_QUARTZ
	f	Lcfq;	dY	SMOOTH_RED_SANDSTONE
	f	Lcfq;	dZ	SMOOTH_SANDSTONE
	f	Lcfq;	da	TORCHFLOWER
	f	Lcfq;	db	SPORE_BLOSSOM
	f	Lcfq;	dc	BROWN_MUSHROOM
	f	Lcfq;	dd	RED_MUSHROOM
	f	Lcfq;	de	CRIMSON_FUNGUS
	f	Lcfq;	df	WARPED_FUNGUS
	f	Lcfq;	dg	CRIMSON_ROOTS
	f	Lcfq;	dh	WARPED_ROOTS
	f	Lcfq;	di	NETHER_SPROUTS
	f	Lcfq;	dj	WEEPING_VINES
	f	Lcfq;	dk	TWISTING_VINES
	f	Lcfq;	dl	SUGAR_CANE
	f	Lcfq;	dm	KELP
	f	Lcfq;	dn	MOSS_CARPET
	f	Lcfq;	do	PINK_PETALS
	f	Lcfq;	dp	MOSS_BLOCK
	f	Lcfq;	dq	HANGING_ROOTS
	f	Lcfq;	dr	BIG_DRIPLEAF
	f	Lcfq;	ds	SMALL_DRIPLEAF
	f	Lcfq;	dt	BAMBOO
	f	Lcfq;	du	OAK_SLAB
	f	Lcfq;	dv	SPRUCE_SLAB
	f	Lcfq;	dw	BIRCH_SLAB
	f	Lcfq;	dx	JUNGLE_SLAB
	f	Lcfq;	dy	ACACIA_SLAB
	f	Lcfq;	dz	CHERRY_SLAB
	f	Lcfq;	eA	JUKEBOX
	f	Lcfq;	eB	OAK_FENCE
	f	Lcfq;	eC	SPRUCE_FENCE
	f	Lcfq;	eD	BIRCH_FENCE
	f	Lcfq;	eE	JUNGLE_FENCE
	f	Lcfq;	eF	ACACIA_FENCE
	f	Lcfq;	eG	CHERRY_FENCE
	f	Lcfq;	eH	DARK_OAK_FENCE
	f	Lcfq;	eI	MANGROVE_FENCE
	f	Lcfq;	eJ	BAMBOO_FENCE
	f	Lcfq;	eK	CRIMSON_FENCE
	f	Lcfq;	eL	WARPED_FENCE
	f	Lcfq;	e	DIORITE
	f	Lcfq;	eM	PUMPKIN
	f	Lcfq;	eN	CARVED_PUMPKIN
	f	Lcfq;	eO	JACK_O_LANTERN
	f	Lcfq;	eP	NETHERRACK
	f	Lcfq;	eQ	SOUL_SAND
	f	Lcfq;	eR	SOUL_SOIL
	f	Lcfq;	eS	BASALT
	f	Lcfq;	eT	POLISHED_BASALT
	f	Lcfq;	eU	SMOOTH_BASALT
	f	Lcfq;	eV	SOUL_TORCH
	f	Lcfq;	eW	GLOWSTONE
	f	Lcfq;	eX	INFESTED_STONE
	f	Lcfq;	eY	INFESTED_COBBLESTONE
	f	Lcfq;	eZ	INFESTED_STONE_BRICKS
	f	Lcfq;	ea	SMOOTH_STONE
	f	Lcfq;	eb	BRICKS
	f	Lcfq;	ec	BOOKSHELF
	f	Lcfq;	ed	CHISELED_BOOKSHELF
	f	Lcfq;	ee	DECORATED_POT
	f	Lcfq;	ef	MOSSY_COBBLESTONE
	f	Lcfq;	eg	OBSIDIAN
	f	Lcfq;	eh	TORCH
	f	Lcfq;	ei	END_ROD
	f	Lcfq;	ej	CHORUS_PLANT
	f	Lcfq;	ek	CHORUS_FLOWER
	f	Lcfq;	el	PURPUR_BLOCK
	f	Lcfq;	em	PURPUR_PILLAR
	f	Lcfq;	en	PURPUR_STAIRS
	f	Lcfq;	eo	SPAWNER
	f	Lcfq;	ep	CHEST
	f	Lcfq;	eq	CRAFTING_TABLE
	f	Lcfq;	er	FARMLAND
	f	Lcfq;	es	FURNACE
	f	Lcfq;	et	LADDER
	f	Lcfq;	eu	COBBLESTONE_STAIRS
	f	Lcfq;	ev	SNOW
	f	Lcfq;	ew	ICE
	f	Lcfq;	ex	SNOW_BLOCK
	f	Lcfq;	ey	CACTUS
	f	Lcfq;	ez	CLAY
	f	Lcfq;	fA	STONE_BRICK_STAIRS
	f	Lcfq;	fB	MUD_BRICK_STAIRS
	f	Lcfq;	fC	MYCELIUM
	f	Lcfq;	fD	LILY_PAD
	f	Lcfq;	fE	NETHER_BRICKS
	f	Lcfq;	fF	CRACKED_NETHER_BRICKS
	f	Lcfq;	fG	CHISELED_NETHER_BRICKS
	f	Lcfq;	fH	NETHER_BRICK_FENCE
	f	Lcfq;	fI	NETHER_BRICK_STAIRS
	f	Lcfq;	fJ	SCULK
	f	Lcfq;	fK	SCULK_VEIN
	f	Lcfq;	fL	SCULK_CATALYST
	f	Lcfq;	f	POLISHED_DIORITE
	f	Lcfq;	fM	SCULK_SHRIEKER
	f	Lcfq;	fN	ENCHANTING_TABLE
	f	Lcfq;	fO	END_PORTAL_FRAME
	f	Lcfq;	fP	END_STONE
	f	Lcfq;	fQ	END_STONE_BRICKS
	f	Lcfq;	fR	DRAGON_EGG
	f	Lcfq;	fS	SANDSTONE_STAIRS
	f	Lcfq;	fT	ENDER_CHEST
	f	Lcfq;	fU	EMERALD_BLOCK
	f	Lcfq;	fV	OAK_STAIRS
	f	Lcfq;	fW	SPRUCE_STAIRS
	f	Lcfq;	fX	BIRCH_STAIRS
	f	Lcfq;	fY	JUNGLE_STAIRS
	f	Lcfq;	fZ	ACACIA_STAIRS
	f	Lcfq;	fa	INFESTED_MOSSY_STONE_BRICKS
	f	Lcfq;	fb	INFESTED_CRACKED_STONE_BRICKS
	f	Lcfq;	fc	INFESTED_CHISELED_STONE_BRICKS
	f	Lcfq;	fd	INFESTED_DEEPSLATE
	f	Lcfq;	fe	STONE_BRICKS
	f	Lcfq;	ff	MOSSY_STONE_BRICKS
	f	Lcfq;	fg	CRACKED_STONE_BRICKS
	f	Lcfq;	fh	CHISELED_STONE_BRICKS
	f	Lcfq;	fi	PACKED_MUD
	f	Lcfq;	fj	MUD_BRICKS
	f	Lcfq;	fk	DEEPSLATE_BRICKS
	f	Lcfq;	fl	CRACKED_DEEPSLATE_BRICKS
	f	Lcfq;	fm	DEEPSLATE_TILES
	f	Lcfq;	fn	CRACKED_DEEPSLATE_TILES
	f	Lcfq;	fo	CHISELED_DEEPSLATE
	f	Lcfq;	fp	REINFORCED_DEEPSLATE
	f	Lcfq;	fq	BROWN_MUSHROOM_BLOCK
	f	Lcfq;	fr	RED_MUSHROOM_BLOCK
	f	Lcfq;	fs	MUSHROOM_STEM
	f	Lcfq;	ft	IRON_BARS
	f	Lcfq;	fu	CHAIN
	f	Lcfq;	fv	GLASS_PANE
	f	Lcfq;	fw	MELON
	f	Lcfq;	fx	VINE
	f	Lcfq;	fy	GLOW_LICHEN
	f	Lcfq;	fz	BRICK_STAIRS
	f	Lcfq;	gA	POLISHED_BLACKSTONE_BRICK_WALL
	f	Lcfq;	gB	COBBLED_DEEPSLATE_WALL
	f	Lcfq;	gC	POLISHED_DEEPSLATE_WALL
	f	Lcfq;	gD	DEEPSLATE_BRICK_WALL
	f	Lcfq;	gE	DEEPSLATE_TILE_WALL
	f	Lcfq;	gF	ANVIL
	f	Lcfq;	gG	CHIPPED_ANVIL
	f	Lcfq;	gH	DAMAGED_ANVIL
	f	Lcfq;	gI	CHISELED_QUARTZ_BLOCK
	f	Lcfq;	gJ	QUARTZ_BLOCK
	f	Lcfq;	gK	QUARTZ_BRICKS
	f	Lcfq;	gL	QUARTZ_PILLAR
	f	Lcfq;	g	ANDESITE
	f	Lcfq;	gM	QUARTZ_STAIRS
	f	Lcfq;	gN	WHITE_TERRACOTTA
	f	Lcfq;	gO	ORANGE_TERRACOTTA
	f	Lcfq;	gP	MAGENTA_TERRACOTTA
	f	Lcfq;	gQ	LIGHT_BLUE_TERRACOTTA
	f	Lcfq;	gR	YELLOW_TERRACOTTA
	f	Lcfq;	gS	LIME_TERRACOTTA
	f	Lcfq;	gT	PINK_TERRACOTTA
	f	Lcfq;	gU	GRAY_TERRACOTTA
	f	Lcfq;	gV	LIGHT_GRAY_TERRACOTTA
	f	Lcfq;	gW	CYAN_TERRACOTTA
	f	Lcfq;	gX	PURPLE_TERRACOTTA
	f	Lcfq;	gY	BLUE_TERRACOTTA
	f	Lcfq;	gZ	BROWN_TERRACOTTA
	f	Lcfq;	ga	CHERRY_STAIRS
	f	Lcfq;	gb	DARK_OAK_STAIRS
	f	Lcfq;	gc	MANGROVE_STAIRS
	f	Lcfq;	gd	BAMBOO_STAIRS
	f	Lcfq;	ge	BAMBOO_MOSAIC_STAIRS
	f	Lcfq;	gf	CRIMSON_STAIRS
	f	Lcfq;	gg	WARPED_STAIRS
	f	Lcfq;	gh	COMMAND_BLOCK
	f	Lcfq;	gi	BEACON
	f	Lcfq;	gj	COBBLESTONE_WALL
	f	Lcfq;	gk	MOSSY_COBBLESTONE_WALL
	f	Lcfq;	gl	BRICK_WALL
	f	Lcfq;	gm	PRISMARINE_WALL
	f	Lcfq;	gn	RED_SANDSTONE_WALL
	f	Lcfq;	go	MOSSY_STONE_BRICK_WALL
	f	Lcfq;	gp	GRANITE_WALL
	f	Lcfq;	gq	STONE_BRICK_WALL
	f	Lcfq;	gr	MUD_BRICK_WALL
	f	Lcfq;	gs	NETHER_BRICK_WALL
	f	Lcfq;	gt	ANDESITE_WALL
	f	Lcfq;	gu	RED_NETHER_BRICK_WALL
	f	Lcfq;	gv	SANDSTONE_WALL
	f	Lcfq;	gw	END_STONE_BRICK_WALL
	f	Lcfq;	gx	DIORITE_WALL
	f	Lcfq;	gy	BLACKSTONE_WALL
	f	Lcfq;	gz	POLISHED_BLACKSTONE_WALL
	f	Lcfq;	hA	LILAC
	f	Lcfq;	hB	ROSE_BUSH
	f	Lcfq;	hC	PEONY
	f	Lcfq;	hD	TALL_GRASS
	f	Lcfq;	hE	LARGE_FERN
	f	Lcfq;	hF	WHITE_STAINED_GLASS
	f	Lcfq;	hG	ORANGE_STAINED_GLASS
	f	Lcfq;	hH	MAGENTA_STAINED_GLASS
	f	Lcfq;	hI	LIGHT_BLUE_STAINED_GLASS
	f	Lcfq;	hJ	YELLOW_STAINED_GLASS
	f	Lcfq;	hK	LIME_STAINED_GLASS
	f	Lcfq;	hL	PINK_STAINED_GLASS
	f	Lcfq;	h	POLISHED_ANDESITE
	f	Lcfq;	hM	GRAY_STAINED_GLASS
	f	Lcfq;	hN	LIGHT_GRAY_STAINED_GLASS
	f	Lcfq;	hO	CYAN_STAINED_GLASS
	f	Lcfq;	hP	PURPLE_STAINED_GLASS
	f	Lcfq;	hQ	BLUE_STAINED_GLASS
	f	Lcfq;	hR	BROWN_STAINED_GLASS
	f	Lcfq;	hS	GREEN_STAINED_GLASS
	f	Lcfq;	hT	RED_STAINED_GLASS
	f	Lcfq;	hU	BLACK_STAINED_GLASS
	f	Lcfq;	hV	WHITE_STAINED_GLASS_PANE
	f	Lcfq;	hW	ORANGE_STAINED_GLASS_PANE
	f	Lcfq;	hX	MAGENTA_STAINED_GLASS_PANE
	f	Lcfq;	hY	LIGHT_BLUE_STAINED_GLASS_PANE
	f	Lcfq;	hZ	YELLOW_STAINED_GLASS_PANE
	f	Lcfq;	ha	GREEN_TERRACOTTA
	f	Lcfq;	hb	RED_TERRACOTTA
	f	Lcfq;	hc	BLACK_TERRACOTTA
	f	Lcfq;	hd	BARRIER
	f	Lcfq;	he	LIGHT
	f	Lcfq;	hf	HAY_BLOCK
	f	Lcfq;	hg	WHITE_CARPET
	f	Lcfq;	hh	ORANGE_CARPET
	f	Lcfq;	hi	MAGENTA_CARPET
	f	Lcfq;	hj	LIGHT_BLUE_CARPET
	f	Lcfq;	hk	YELLOW_CARPET
	f	Lcfq;	hl	LIME_CARPET
	f	Lcfq;	hm	PINK_CARPET
	f	Lcfq;	hn	GRAY_CARPET
	f	Lcfq;	ho	LIGHT_GRAY_CARPET
	f	Lcfq;	hp	CYAN_CARPET
	f	Lcfq;	hq	PURPLE_CARPET
	f	Lcfq;	hr	BLUE_CARPET
	f	Lcfq;	hs	BROWN_CARPET
	f	Lcfq;	ht	GREEN_CARPET
	f	Lcfq;	hu	RED_CARPET
	f	Lcfq;	hv	BLACK_CARPET
	f	Lcfq;	hw	TERRACOTTA
	f	Lcfq;	hx	PACKED_ICE
	f	Lcfq;	hy	DIRT_PATH
	f	Lcfq;	hz	SUNFLOWER
	f	Lcfq;	iA	WARPED_WART_BLOCK
	f	Lcfq;	iB	RED_NETHER_BRICKS
	f	Lcfq;	iC	BONE_BLOCK
	f	Lcfq;	iD	STRUCTURE_VOID
	f	Lcfq;	iE	SHULKER_BOX
	f	Lcfq;	iF	WHITE_SHULKER_BOX
	f	Lcfq;	iG	ORANGE_SHULKER_BOX
	f	Lcfq;	iH	MAGENTA_SHULKER_BOX
	f	Lcfq;	iI	LIGHT_BLUE_SHULKER_BOX
	f	Lcfq;	iJ	YELLOW_SHULKER_BOX
	f	Lcfq;	iK	LIME_SHULKER_BOX
	f	Lcfq;	iL	PINK_SHULKER_BOX
	f	Lcfq;	i	DEEPSLATE
	f	Lcfq;	iM	GRAY_SHULKER_BOX
	f	Lcfq;	iN	LIGHT_GRAY_SHULKER_BOX
	f	Lcfq;	iO	CYAN_SHULKER_BOX
	f	Lcfq;	iP	PURPLE_SHULKER_BOX
	f	Lcfq;	iQ	BLUE_SHULKER_BOX
	f	Lcfq;	iR	BROWN_SHULKER_BOX
	f	Lcfq;	iS	GREEN_SHULKER_BOX
	f	Lcfq;	iT	RED_SHULKER_BOX
	f	Lcfq;	iU	BLACK_SHULKER_BOX
	f	Lcfq;	iV	WHITE_GLAZED_TERRACOTTA
	f	Lcfq;	iW	ORANGE_GLAZED_TERRACOTTA
	f	Lcfq;	iX	MAGENTA_GLAZED_TERRACOTTA
	f	Lcfq;	iY	LIGHT_BLUE_GLAZED_TERRACOTTA
	f	Lcfq;	iZ	YELLOW_GLAZED_TERRACOTTA
	f	Lcfq;	ia	LIME_STAINED_GLASS_PANE
	f	Lcfq;	ib	PINK_STAINED_GLASS_PANE
	f	Lcfq;	ic	GRAY_STAINED_GLASS_PANE
	f	Lcfq;	id	LIGHT_GRAY_STAINED_GLASS_PANE
	f	Lcfq;	ie	CYAN_STAINED_GLASS_PANE
	f	Lcfq;	if	PURPLE_STAINED_GLASS_PANE
	f	Lcfq;	ig	BLUE_STAINED_GLASS_PANE
	f	Lcfq;	ih	BROWN_STAINED_GLASS_PANE
	f	Lcfq;	ii	GREEN_STAINED_GLASS_PANE
	f	Lcfq;	ij	RED_STAINED_GLASS_PANE
	f	Lcfq;	ik	BLACK_STAINED_GLASS_PANE
	f	Lcfq;	il	PRISMARINE
	f	Lcfq;	im	PRISMARINE_BRICKS
	f	Lcfq;	in	DARK_PRISMARINE
	f	Lcfq;	io	PRISMARINE_STAIRS
	f	Lcfq;	ip	PRISMARINE_BRICK_STAIRS
	f	Lcfq;	iq	DARK_PRISMARINE_STAIRS
	f	Lcfq;	ir	SEA_LANTERN
	f	Lcfq;	is	RED_SANDSTONE
	f	Lcfq;	it	CHISELED_RED_SANDSTONE
	f	Lcfq;	iu	CUT_RED_SANDSTONE
	f	Lcfq;	iv	RED_SANDSTONE_STAIRS
	f	Lcfq;	iw	REPEATING_COMMAND_BLOCK
	f	Lcfq;	ix	CHAIN_COMMAND_BLOCK
	f	Lcfq;	iy	MAGMA_BLOCK
	f	Lcfq;	iz	NETHER_WART_BLOCK
	f	Lcfq;	jA	BLACK_CONCRETE
	f	Lcfq;	jB	WHITE_CONCRETE_POWDER
	f	Lcfq;	jC	ORANGE_CONCRETE_POWDER
	f	Lcfq;	jD	MAGENTA_CONCRETE_POWDER
	f	Lcfq;	jE	LIGHT_BLUE_CONCRETE_POWDER
	f	Lcfq;	jF	YELLOW_CONCRETE_POWDER
	f	Lcfq;	jG	LIME_CONCRETE_POWDER
	f	Lcfq;	jH	PINK_CONCRETE_POWDER
	f	Lcfq;	jI	GRAY_CONCRETE_POWDER
	f	Lcfq;	jJ	LIGHT_GRAY_CONCRETE_POWDER
	f	Lcfq;	jK	CYAN_CONCRETE_POWDER
	f	Lcfq;	jL	PURPLE_CONCRETE_POWDER
	f	Lcfq;	j	COBBLED_DEEPSLATE
	f	Lcfq;	jM	BLUE_CONCRETE_POWDER
	f	Lcfq;	jN	BROWN_CONCRETE_POWDER
	f	Lcfq;	jO	GREEN_CONCRETE_POWDER
	f	Lcfq;	jP	RED_CONCRETE_POWDER
	f	Lcfq;	jQ	BLACK_CONCRETE_POWDER
	f	Lcfq;	jR	TURTLE_EGG
	f	Lcfq;	jS	DEAD_TUBE_CORAL_BLOCK
	f	Lcfq;	jT	DEAD_BRAIN_CORAL_BLOCK
	f	Lcfq;	jU	DEAD_BUBBLE_CORAL_BLOCK
	f	Lcfq;	jV	DEAD_FIRE_CORAL_BLOCK
	f	Lcfq;	jW	DEAD_HORN_CORAL_BLOCK
	f	Lcfq;	jX	TUBE_CORAL_BLOCK
	f	Lcfq;	jY	BRAIN_CORAL_BLOCK
	f	Lcfq;	jZ	BUBBLE_CORAL_BLOCK
	f	Lcfq;	ja	LIME_GLAZED_TERRACOTTA
	f	Lcfq;	jb	PINK_GLAZED_TERRACOTTA
	f	Lcfq;	jc	GRAY_GLAZED_TERRACOTTA
	f	Lcfq;	jd	LIGHT_GRAY_GLAZED_TERRACOTTA
	f	Lcfq;	je	CYAN_GLAZED_TERRACOTTA
	f	Lcfq;	jf	PURPLE_GLAZED_TERRACOTTA
	f	Lcfq;	jg	BLUE_GLAZED_TERRACOTTA
	f	Lcfq;	jh	BROWN_GLAZED_TERRACOTTA
	f	Lcfq;	ji	GREEN_GLAZED_TERRACOTTA
	f	Lcfq;	jj	RED_GLAZED_TERRACOTTA
	f	Lcfq;	jk	BLACK_GLAZED_TERRACOTTA
	f	Lcfq;	jl	WHITE_CONCRETE
	f	Lcfq;	jm	ORANGE_CONCRETE
	f	Lcfq;	jn	MAGENTA_CONCRETE
	f	Lcfq;	jo	LIGHT_BLUE_CONCRETE
	f	Lcfq;	jp	YELLOW_CONCRETE
	f	Lcfq;	jq	LIME_CONCRETE
	f	Lcfq;	jr	PINK_CONCRETE
	f	Lcfq;	js	GRAY_CONCRETE
	f	Lcfq;	jt	LIGHT_GRAY_CONCRETE
	f	Lcfq;	ju	CYAN_CONCRETE
	f	Lcfq;	jv	PURPLE_CONCRETE
	f	Lcfq;	jw	BLUE_CONCRETE
	f	Lcfq;	jx	BROWN_CONCRETE
	f	Lcfq;	jy	GREEN_CONCRETE
	f	Lcfq;	jz	RED_CONCRETE
	f	Lcfq;	kA	MOSSY_STONE_BRICK_STAIRS
	f	Lcfq;	kB	POLISHED_DIORITE_STAIRS
	f	Lcfq;	kC	MOSSY_COBBLESTONE_STAIRS
	f	Lcfq;	kD	END_STONE_BRICK_STAIRS
	f	Lcfq;	kE	STONE_STAIRS
	f	Lcfq;	kF	SMOOTH_SANDSTONE_STAIRS
	f	Lcfq;	kG	SMOOTH_QUARTZ_STAIRS
	f	Lcfq;	kH	GRANITE_STAIRS
	f	Lcfq;	kI	ANDESITE_STAIRS
	f	Lcfq;	kJ	RED_NETHER_BRICK_STAIRS
	f	Lcfq;	kK	POLISHED_ANDESITE_STAIRS
	f	Lcfq;	kL	DIORITE_STAIRS
	f	Lcfq;	k	POLISHED_DEEPSLATE
	f	Lcfq;	kM	COBBLED_DEEPSLATE_STAIRS
	f	Lcfq;	kN	POLISHED_DEEPSLATE_STAIRS
	f	Lcfq;	kO	DEEPSLATE_BRICK_STAIRS
	f	Lcfq;	kP	DEEPSLATE_TILE_STAIRS
	f	Lcfq;	kQ	POLISHED_GRANITE_SLAB
	f	Lcfq;	kR	SMOOTH_RED_SANDSTONE_SLAB
	f	Lcfq;	kS	MOSSY_STONE_BRICK_SLAB
	f	Lcfq;	kT	POLISHED_DIORITE_SLAB
	f	Lcfq;	kU	MOSSY_COBBLESTONE_SLAB
	f	Lcfq;	kV	END_STONE_BRICK_SLAB
	f	Lcfq;	kW	SMOOTH_SANDSTONE_SLAB
	f	Lcfq;	kX	SMOOTH_QUARTZ_SLAB
	f	Lcfq;	kY	GRANITE_SLAB
	f	Lcfq;	kZ	ANDESITE_SLAB
	f	Lcfq;	ka	FIRE_CORAL_BLOCK
	f	Lcfq;	kb	HORN_CORAL_BLOCK
	f	Lcfq;	kc	TUBE_CORAL
	f	Lcfq;	kd	BRAIN_CORAL
	f	Lcfq;	ke	BUBBLE_CORAL
	f	Lcfq;	kf	FIRE_CORAL
	f	Lcfq;	kg	HORN_CORAL
	f	Lcfq;	kh	DEAD_BRAIN_CORAL
	f	Lcfq;	ki	DEAD_BUBBLE_CORAL
	f	Lcfq;	kj	DEAD_FIRE_CORAL
	f	Lcfq;	kk	DEAD_HORN_CORAL
	f	Lcfq;	kl	DEAD_TUBE_CORAL
	f	Lcfq;	km	TUBE_CORAL_FAN
	f	Lcfq;	kn	BRAIN_CORAL_FAN
	f	Lcfq;	ko	BUBBLE_CORAL_FAN
	f	Lcfq;	kp	FIRE_CORAL_FAN
	f	Lcfq;	kq	HORN_CORAL_FAN
	f	Lcfq;	kr	DEAD_TUBE_CORAL_FAN
	f	Lcfq;	ks	DEAD_BRAIN_CORAL_FAN
	f	Lcfq;	kt	DEAD_BUBBLE_CORAL_FAN
	f	Lcfq;	ku	DEAD_FIRE_CORAL_FAN
	f	Lcfq;	kv	DEAD_HORN_CORAL_FAN
	f	Lcfq;	kw	BLUE_ICE
	f	Lcfq;	kx	CONDUIT
	f	Lcfq;	ky	POLISHED_GRANITE_STAIRS
	f	Lcfq;	kz	SMOOTH_RED_SANDSTONE_STAIRS
	f	Lcfq;	lA	SCULK_SENSOR
	f	Lcfq;	lB	TRIPWIRE_HOOK
	f	Lcfq;	lC	TRAPPED_CHEST
	f	Lcfq;	lD	TNT
	f	Lcfq;	lE	REDSTONE_LAMP
	f	Lcfq;	lF	NOTE_BLOCK
	f	Lcfq;	lG	STONE_BUTTON
	f	Lcfq;	lH	POLISHED_BLACKSTONE_BUTTON
	f	Lcfq;	lI	OAK_BUTTON
	f	Lcfq;	lJ	SPRUCE_BUTTON
	f	Lcfq;	lK	BIRCH_BUTTON
	f	Lcfq;	lL	JUNGLE_BUTTON
	f	Lcfq;	l	CALCITE
	f	Lcfq;	lM	ACACIA_BUTTON
	f	Lcfq;	lN	CHERRY_BUTTON
	f	Lcfq;	lO	DARK_OAK_BUTTON
	f	Lcfq;	lP	MANGROVE_BUTTON
	f	Lcfq;	lQ	BAMBOO_BUTTON
	f	Lcfq;	lR	CRIMSON_BUTTON
	f	Lcfq;	lS	WARPED_BUTTON
	f	Lcfq;	lT	STONE_PRESSURE_PLATE
	f	Lcfq;	lU	POLISHED_BLACKSTONE_PRESSURE_PLATE
	f	Lcfq;	lV	LIGHT_WEIGHTED_PRESSURE_PLATE
	f	Lcfq;	lW	HEAVY_WEIGHTED_PRESSURE_PLATE
	f	Lcfq;	lX	OAK_PRESSURE_PLATE
	f	Lcfq;	lY	SPRUCE_PRESSURE_PLATE
	f	Lcfq;	lZ	BIRCH_PRESSURE_PLATE
	f	Lcfq;	la	RED_NETHER_BRICK_SLAB
	f	Lcfq;	lb	POLISHED_ANDESITE_SLAB
	f	Lcfq;	lc	DIORITE_SLAB
	f	Lcfq;	ld	COBBLED_DEEPSLATE_SLAB
	f	Lcfq;	le	POLISHED_DEEPSLATE_SLAB
	f	Lcfq;	lf	DEEPSLATE_BRICK_SLAB
	f	Lcfq;	lg	DEEPSLATE_TILE_SLAB
	f	Lcfq;	lh	SCAFFOLDING
	f	Lcfq;	li	REDSTONE
	f	Lcfq;	lj	REDSTONE_TORCH
	f	Lcfq;	lk	REDSTONE_BLOCK
	f	Lcfq;	ll	REPEATER
	f	Lcfq;	lm	COMPARATOR
	f	Lcfq;	ln	PISTON
	f	Lcfq;	lo	STICKY_PISTON
	f	Lcfq;	lp	SLIME_BLOCK
	f	Lcfq;	lq	HONEY_BLOCK
	f	Lcfq;	lr	OBSERVER
	f	Lcfq;	ls	HOPPER
	f	Lcfq;	lt	DISPENSER
	f	Lcfq;	lu	DROPPER
	f	Lcfq;	lv	LECTERN
	f	Lcfq;	lw	TARGET
	f	Lcfq;	lx	LEVER
	f	Lcfq;	ly	LIGHTNING_ROD
	f	Lcfq;	lz	DAYLIGHT_DETECTOR
	f	Lcfq;	mA	CHERRY_TRAPDOOR
	f	Lcfq;	mB	DARK_OAK_TRAPDOOR
	f	Lcfq;	mC	MANGROVE_TRAPDOOR
	f	Lcfq;	mD	BAMBOO_TRAPDOOR
	f	Lcfq;	mE	CRIMSON_TRAPDOOR
	f	Lcfq;	mF	WARPED_TRAPDOOR
	f	Lcfq;	mG	OAK_FENCE_GATE
	f	Lcfq;	mH	SPRUCE_FENCE_GATE
	f	Lcfq;	mI	BIRCH_FENCE_GATE
	f	Lcfq;	mJ	JUNGLE_FENCE_GATE
	f	Lcfq;	mK	ACACIA_FENCE_GATE
	f	Lcfq;	mL	CHERRY_FENCE_GATE
	f	Lcfq;	m	TUFF
	f	Lcfq;	mM	DARK_OAK_FENCE_GATE
	f	Lcfq;	mN	MANGROVE_FENCE_GATE
	f	Lcfq;	mO	BAMBOO_FENCE_GATE
	f	Lcfq;	mP	CRIMSON_FENCE_GATE
	f	Lcfq;	mQ	WARPED_FENCE_GATE
	f	Lcfq;	mR	POWERED_RAIL
	f	Lcfq;	mS	DETECTOR_RAIL
	f	Lcfq;	mT	RAIL
	f	Lcfq;	mU	ACTIVATOR_RAIL
	f	Lcfq;	mV	SADDLE
	f	Lcfq;	mW	MINECART
	f	Lcfq;	mX	CHEST_MINECART
	f	Lcfq;	mY	FURNACE_MINECART
	f	Lcfq;	mZ	TNT_MINECART
	f	Lcfq;	ma	JUNGLE_PRESSURE_PLATE
	f	Lcfq;	mb	ACACIA_PRESSURE_PLATE
	f	Lcfq;	mc	CHERRY_PRESSURE_PLATE
	f	Lcfq;	md	DARK_OAK_PRESSURE_PLATE
	f	Lcfq;	me	MANGROVE_PRESSURE_PLATE
	f	Lcfq;	mf	BAMBOO_PRESSURE_PLATE
	f	Lcfq;	mg	CRIMSON_PRESSURE_PLATE
	f	Lcfq;	mh	WARPED_PRESSURE_PLATE
	f	Lcfq;	mi	IRON_DOOR
	f	Lcfq;	mj	OAK_DOOR
	f	Lcfq;	mk	SPRUCE_DOOR
	f	Lcfq;	ml	BIRCH_DOOR
	f	Lcfq;	mm	JUNGLE_DOOR
	f	Lcfq;	mn	ACACIA_DOOR
	f	Lcfq;	mo	CHERRY_DOOR
	f	Lcfq;	mp	DARK_OAK_DOOR
	f	Lcfq;	mq	MANGROVE_DOOR
	f	Lcfq;	mr	BAMBOO_DOOR
	f	Lcfq;	ms	CRIMSON_DOOR
	f	Lcfq;	mt	WARPED_DOOR
	f	Lcfq;	mu	IRON_TRAPDOOR
	f	Lcfq;	mv	OAK_TRAPDOOR
	f	Lcfq;	mw	SPRUCE_TRAPDOOR
	f	Lcfq;	mx	BIRCH_TRAPDOOR
	f	Lcfq;	my	JUNGLE_TRAPDOOR
	f	Lcfq;	mz	ACACIA_TRAPDOOR
	f	Lcfq;	nA	FLINT_AND_STEEL
	f	Lcfq;	nB	APPLE
	f	Lcfq;	nC	BOW
	f	Lcfq;	nD	ARROW
	f	Lcfq;	nE	COAL
	f	Lcfq;	nF	CHARCOAL
	f	Lcfq;	nG	DIAMOND
	f	Lcfq;	nH	EMERALD
	f	Lcfq;	nI	LAPIS_LAZULI
	f	Lcfq;	nJ	QUARTZ
	f	Lcfq;	nK	AMETHYST_SHARD
	f	Lcfq;	nL	RAW_IRON
	f	Lcfq;	n	DRIPSTONE_BLOCK
	f	Lcfq;	nM	IRON_INGOT
	f	Lcfq;	nN	RAW_COPPER
	f	Lcfq;	nO	COPPER_INGOT
	f	Lcfq;	nP	RAW_GOLD
	f	Lcfq;	nQ	GOLD_INGOT
	f	Lcfq;	nR	NETHERITE_INGOT
	f	Lcfq;	nS	NETHERITE_SCRAP
	f	Lcfq;	nT	WOODEN_SWORD
	f	Lcfq;	nU	WOODEN_SHOVEL
	f	Lcfq;	nV	WOODEN_PICKAXE
	f	Lcfq;	nW	WOODEN_AXE
	f	Lcfq;	nX	WOODEN_HOE
	f	Lcfq;	nY	STONE_SWORD
	f	Lcfq;	nZ	STONE_SHOVEL
	f	Lcfq;	na	HOPPER_MINECART
	f	Lcfq;	nb	CARROT_ON_A_STICK
	f	Lcfq;	nc	WARPED_FUNGUS_ON_A_STICK
	f	Lcfq;	nd	ELYTRA
	f	Lcfq;	ne	OAK_BOAT
	f	Lcfq;	nf	OAK_CHEST_BOAT
	f	Lcfq;	ng	SPRUCE_BOAT
	f	Lcfq;	nh	SPRUCE_CHEST_BOAT
	f	Lcfq;	ni	BIRCH_BOAT
	f	Lcfq;	nj	BIRCH_CHEST_BOAT
	f	Lcfq;	nk	JUNGLE_BOAT
	f	Lcfq;	nl	JUNGLE_CHEST_BOAT
	f	Lcfq;	nm	ACACIA_BOAT
	f	Lcfq;	nn	ACACIA_CHEST_BOAT
	f	Lcfq;	no	CHERRY_BOAT
	f	Lcfq;	np	CHERRY_CHEST_BOAT
	f	Lcfq;	nq	DARK_OAK_BOAT
	f	Lcfq;	nr	DARK_OAK_CHEST_BOAT
	f	Lcfq;	ns	MANGROVE_BOAT
	f	Lcfq;	nt	MANGROVE_CHEST_BOAT
	f	Lcfq;	nu	BAMBOO_RAFT
	f	Lcfq;	nv	BAMBOO_CHEST_RAFT
	f	Lcfq;	nw	STRUCTURE_BLOCK
	f	Lcfq;	nx	JIGSAW
	f	Lcfq;	ny	TURTLE_HELMET
	f	Lcfq;	nz	SCUTE
	f	Lcfq;	oA	STRING
	f	Lcfq;	oB	FEATHER
	f	Lcfq;	oC	GUNPOWDER
	f	Lcfq;	oD	WHEAT_SEEDS
	f	Lcfq;	oE	WHEAT
	f	Lcfq;	oF	BREAD
	f	Lcfq;	oG	LEATHER_HELMET
	f	Lcfq;	oH	LEATHER_CHESTPLATE
	f	Lcfq;	oI	LEATHER_LEGGINGS
	f	Lcfq;	oJ	LEATHER_BOOTS
	f	Lcfq;	oK	CHAINMAIL_HELMET
	f	Lcfq;	oL	CHAINMAIL_CHESTPLATE
	f	Lcfq;	o	GRASS_BLOCK
	f	Lcfq;	oM	CHAINMAIL_LEGGINGS
	f	Lcfq;	oN	CHAINMAIL_BOOTS
	f	Lcfq;	oO	IRON_HELMET
	f	Lcfq;	oP	IRON_CHESTPLATE
	f	Lcfq;	oQ	IRON_LEGGINGS
	f	Lcfq;	oR	IRON_BOOTS
	f	Lcfq;	oS	DIAMOND_HELMET
	f	Lcfq;	oT	DIAMOND_CHESTPLATE
	f	Lcfq;	oU	DIAMOND_LEGGINGS
	f	Lcfq;	oV	DIAMOND_BOOTS
	f	Lcfq;	oW	GOLDEN_HELMET
	f	Lcfq;	oX	GOLDEN_CHESTPLATE
	f	Lcfq;	oY	GOLDEN_LEGGINGS
	f	Lcfq;	oZ	GOLDEN_BOOTS
	f	Lcfq;	oa	STONE_PICKAXE
	f	Lcfq;	ob	STONE_AXE
	f	Lcfq;	oc	STONE_HOE
	f	Lcfq;	od	GOLDEN_SWORD
	f	Lcfq;	oe	GOLDEN_SHOVEL
	f	Lcfq;	of	GOLDEN_PICKAXE
	f	Lcfq;	og	GOLDEN_AXE
	f	Lcfq;	oh	GOLDEN_HOE
	f	Lcfq;	oi	IRON_SWORD
	f	Lcfq;	oj	IRON_SHOVEL
	f	Lcfq;	ok	IRON_PICKAXE
	f	Lcfq;	ol	IRON_AXE
	f	Lcfq;	om	IRON_HOE
	f	Lcfq;	on	DIAMOND_SWORD
	f	Lcfq;	oo	DIAMOND_SHOVEL
	f	Lcfq;	op	DIAMOND_PICKAXE
	f	Lcfq;	oq	DIAMOND_AXE
	f	Lcfq;	or	DIAMOND_HOE
	f	Lcfq;	os	NETHERITE_SWORD
	f	Lcfq;	ot	NETHERITE_SHOVEL
	f	Lcfq;	ou	NETHERITE_PICKAXE
	f	Lcfq;	ov	NETHERITE_AXE
	f	Lcfq;	ow	NETHERITE_HOE
	f	Lcfq;	ox	STICK
	f	Lcfq;	oy	BOWL
	f	Lcfq;	oz	MUSHROOM_STEW
	f	Lcfq;	pA	CHERRY_HANGING_SIGN
	f	Lcfq;	pB	DARK_OAK_HANGING_SIGN
	f	Lcfq;	pC	MANGROVE_HANGING_SIGN
	f	Lcfq;	pD	BAMBOO_HANGING_SIGN
	f	Lcfq;	pE	CRIMSON_HANGING_SIGN
	f	Lcfq;	pF	WARPED_HANGING_SIGN
	f	Lcfq;	pG	BUCKET
	f	Lcfq;	pH	WATER_BUCKET
	f	Lcfq;	pI	LAVA_BUCKET
	f	Lcfq;	pJ	POWDER_SNOW_BUCKET
	f	Lcfq;	pK	SNOWBALL
	f	Lcfq;	pL	LEATHER
	f	Lcfq;	p	DIRT
	f	Lcfq;	pM	MILK_BUCKET
	f	Lcfq;	pN	PUFFERFISH_BUCKET
	f	Lcfq;	pO	SALMON_BUCKET
	f	Lcfq;	pP	COD_BUCKET
	f	Lcfq;	pQ	TROPICAL_FISH_BUCKET
	f	Lcfq;	pR	AXOLOTL_BUCKET
	f	Lcfq;	pS	TADPOLE_BUCKET
	f	Lcfq;	pT	BRICK
	f	Lcfq;	pU	CLAY_BALL
	f	Lcfq;	pV	DRIED_KELP_BLOCK
	f	Lcfq;	pW	PAPER
	f	Lcfq;	pX	BOOK
	f	Lcfq;	pY	SLIME_BALL
	f	Lcfq;	pZ	EGG
	f	Lcfq;	pa	NETHERITE_HELMET
	f	Lcfq;	pb	NETHERITE_CHESTPLATE
	f	Lcfq;	pc	NETHERITE_LEGGINGS
	f	Lcfq;	pd	NETHERITE_BOOTS
	f	Lcfq;	pe	FLINT
	f	Lcfq;	pf	PORKCHOP
	f	Lcfq;	pg	COOKED_PORKCHOP
	f	Lcfq;	ph	PAINTING
	f	Lcfq;	pi	GOLDEN_APPLE
	f	Lcfq;	pj	ENCHANTED_GOLDEN_APPLE
	f	Lcfq;	pk	OAK_SIGN
	f	Lcfq;	pl	SPRUCE_SIGN
	f	Lcfq;	pm	BIRCH_SIGN
	f	Lcfq;	pn	JUNGLE_SIGN
	f	Lcfq;	po	ACACIA_SIGN
	f	Lcfq;	pp	CHERRY_SIGN
	f	Lcfq;	pq	DARK_OAK_SIGN
	f	Lcfq;	pr	MANGROVE_SIGN
	f	Lcfq;	ps	BAMBOO_SIGN
	f	Lcfq;	pt	CRIMSON_SIGN
	f	Lcfq;	pu	WARPED_SIGN
	f	Lcfq;	pv	OAK_HANGING_SIGN
	f	Lcfq;	pw	SPRUCE_HANGING_SIGN
	f	Lcfq;	px	BIRCH_HANGING_SIGN
	f	Lcfq;	py	JUNGLE_HANGING_SIGN
	f	Lcfq;	pz	ACACIA_HANGING_SIGN
	f	Lcfq;	qA	PURPLE_DYE
	f	Lcfq;	qB	BLUE_DYE
	f	Lcfq;	qC	BROWN_DYE
	f	Lcfq;	qD	GREEN_DYE
	f	Lcfq;	qE	RED_DYE
	f	Lcfq;	qF	BLACK_DYE
	f	Lcfq;	qG	BONE_MEAL
	f	Lcfq;	qH	BONE
	f	Lcfq;	qI	SUGAR
	f	Lcfq;	qJ	CAKE
	f	Lcfq;	qK	WHITE_BED
	f	Lcfq;	qL	ORANGE_BED
	f	Lcfq;	q	COARSE_DIRT
	f	Lcfq;	qM	MAGENTA_BED
	f	Lcfq;	qN	LIGHT_BLUE_BED
	f	Lcfq;	qO	YELLOW_BED
	f	Lcfq;	qP	LIME_BED
	f	Lcfq;	qQ	PINK_BED
	f	Lcfq;	qR	GRAY_BED
	f	Lcfq;	qS	LIGHT_GRAY_BED
	f	Lcfq;	qT	CYAN_BED
	f	Lcfq;	qU	PURPLE_BED
	f	Lcfq;	qV	BLUE_BED
	f	Lcfq;	qW	BROWN_BED
	f	Lcfq;	qX	GREEN_BED
	f	Lcfq;	qY	RED_BED
	f	Lcfq;	qZ	BLACK_BED
	f	Lcfq;	qa	COMPASS
	f	Lcfq;	qb	RECOVERY_COMPASS
	f	Lcfq;	qc	BUNDLE
	f	Lcfq;	qd	FISHING_ROD
	f	Lcfq;	qe	CLOCK
	f	Lcfq;	qf	SPYGLASS
	f	Lcfq;	qg	GLOWSTONE_DUST
	f	Lcfq;	qh	COD
	f	Lcfq;	qi	SALMON
	f	Lcfq;	qj	TROPICAL_FISH
	f	Lcfq;	qk	PUFFERFISH
	f	Lcfq;	ql	COOKED_COD
	f	Lcfq;	qm	COOKED_SALMON
	f	Lcfq;	qn	INK_SAC
	f	Lcfq;	qo	GLOW_INK_SAC
	f	Lcfq;	qp	COCOA_BEANS
	f	Lcfq;	qq	WHITE_DYE
	f	Lcfq;	qr	ORANGE_DYE
	f	Lcfq;	qs	MAGENTA_DYE
	f	Lcfq;	qt	LIGHT_BLUE_DYE
	f	Lcfq;	qu	YELLOW_DYE
	f	Lcfq;	qv	LIME_DYE
	f	Lcfq;	qw	PINK_DYE
	f	Lcfq;	qx	GRAY_DYE
	f	Lcfq;	qy	LIGHT_GRAY_DYE
	f	Lcfq;	qz	CYAN_DYE
	f	Lcfq;	rA	GLISTERING_MELON_SLICE
	f	Lcfq;	rB	ALLAY_SPAWN_EGG
	f	Lcfq;	rC	AXOLOTL_SPAWN_EGG
	f	Lcfq;	rD	BAT_SPAWN_EGG
	f	Lcfq;	rE	BEE_SPAWN_EGG
	f	Lcfq;	rF	BLAZE_SPAWN_EGG
	f	Lcfq;	rG	CAT_SPAWN_EGG
	f	Lcfq;	rH	CAMEL_SPAWN_EGG
	f	Lcfq;	rI	CAVE_SPIDER_SPAWN_EGG
	f	Lcfq;	rJ	CHICKEN_SPAWN_EGG
	f	Lcfq;	rK	COD_SPAWN_EGG
	f	Lcfq;	rL	COW_SPAWN_EGG
	f	Lcfq;	r	PODZOL
	f	Lcfq;	rM	CREEPER_SPAWN_EGG
	f	Lcfq;	rN	DOLPHIN_SPAWN_EGG
	f	Lcfq;	rO	DONKEY_SPAWN_EGG
	f	Lcfq;	rP	DROWNED_SPAWN_EGG
	f	Lcfq;	rQ	ELDER_GUARDIAN_SPAWN_EGG
	f	Lcfq;	rR	ENDER_DRAGON_SPAWN_EGG
	f	Lcfq;	rS	ENDERMAN_SPAWN_EGG
	f	Lcfq;	rT	ENDERMITE_SPAWN_EGG
	f	Lcfq;	rU	EVOKER_SPAWN_EGG
	f	Lcfq;	rV	FOX_SPAWN_EGG
	f	Lcfq;	rW	FROG_SPAWN_EGG
	f	Lcfq;	rX	GHAST_SPAWN_EGG
	f	Lcfq;	rY	GLOW_SQUID_SPAWN_EGG
	f	Lcfq;	rZ	GOAT_SPAWN_EGG
	f	Lcfq;	ra	COOKIE
	f	Lcfq;	rb	FILLED_MAP
	f	Lcfq;	rc	SHEARS
	f	Lcfq;	rd	MELON_SLICE
	f	Lcfq;	re	DRIED_KELP
	f	Lcfq;	rf	PUMPKIN_SEEDS
	f	Lcfq;	rg	MELON_SEEDS
	f	Lcfq;	rh	BEEF
	f	Lcfq;	ri	COOKED_BEEF
	f	Lcfq;	rj	CHICKEN
	f	Lcfq;	rk	COOKED_CHICKEN
	f	Lcfq;	rl	ROTTEN_FLESH
	f	Lcfq;	rm	ENDER_PEARL
	f	Lcfq;	rn	BLAZE_ROD
	f	Lcfq;	ro	GHAST_TEAR
	f	Lcfq;	rp	GOLD_NUGGET
	f	Lcfq;	rq	NETHER_WART
	f	Lcfq;	rr	POTION
	f	Lcfq;	rs	GLASS_BOTTLE
	f	Lcfq;	rt	SPIDER_EYE
	f	Lcfq;	ru	FERMENTED_SPIDER_EYE
	f	Lcfq;	rv	BLAZE_POWDER
	f	Lcfq;	rw	MAGMA_CREAM
	f	Lcfq;	rx	BREWING_STAND
	f	Lcfq;	ry	CAULDRON
	f	Lcfq;	rz	ENDER_EYE
	f	Lcfq;	sA	SKELETON_HORSE_SPAWN_EGG
	f	Lcfq;	sB	SLIME_SPAWN_EGG
	f	Lcfq;	sC	SNIFFER_SPAWN_EGG
	f	Lcfq;	sD	SNOW_GOLEM_SPAWN_EGG
	f	Lcfq;	sE	SPIDER_SPAWN_EGG
	f	Lcfq;	sF	SQUID_SPAWN_EGG
	f	Lcfq;	sG	STRAY_SPAWN_EGG
	f	Lcfq;	sH	STRIDER_SPAWN_EGG
	f	Lcfq;	sI	TADPOLE_SPAWN_EGG
	f	Lcfq;	sJ	TRADER_LLAMA_SPAWN_EGG
	f	Lcfq;	sK	TROPICAL_FISH_SPAWN_EGG
	f	Lcfq;	sL	TURTLE_SPAWN_EGG
	f	Lcfq;	s	ROOTED_DIRT
	f	Lcfq;	sM	VEX_SPAWN_EGG
	f	Lcfq;	sN	VILLAGER_SPAWN_EGG
	f	Lcfq;	sO	VINDICATOR_SPAWN_EGG
	f	Lcfq;	sP	WANDERING_TRADER_SPAWN_EGG
	f	Lcfq;	sQ	WARDEN_SPAWN_EGG
	f	Lcfq;	sR	WITCH_SPAWN_EGG
	f	Lcfq;	sS	WITHER_SPAWN_EGG
	f	Lcfq;	sT	WITHER_SKELETON_SPAWN_EGG
	f	Lcfq;	sU	WOLF_SPAWN_EGG
	f	Lcfq;	sV	ZOGLIN_SPAWN_EGG
	f	Lcfq;	sW	ZOMBIE_SPAWN_EGG
	f	Lcfq;	sX	ZOMBIE_HORSE_SPAWN_EGG
	f	Lcfq;	sY	ZOMBIE_VILLAGER_SPAWN_EGG
	f	Lcfq;	sZ	ZOMBIFIED_PIGLIN_SPAWN_EGG
	f	Lcfq;	sa	GUARDIAN_SPAWN_EGG
	f	Lcfq;	sb	HOGLIN_SPAWN_EGG
	f	Lcfq;	sc	HORSE_SPAWN_EGG
	f	Lcfq;	sd	HUSK_SPAWN_EGG
	f	Lcfq;	se	IRON_GOLEM_SPAWN_EGG
	f	Lcfq;	sf	LLAMA_SPAWN_EGG
	f	Lcfq;	sg	MAGMA_CUBE_SPAWN_EGG
	f	Lcfq;	sh	MOOSHROOM_SPAWN_EGG
	f	Lcfq;	si	MULE_SPAWN_EGG
	f	Lcfq;	sj	OCELOT_SPAWN_EGG
	f	Lcfq;	sk	PANDA_SPAWN_EGG
	f	Lcfq;	sl	PARROT_SPAWN_EGG
	f	Lcfq;	sm	PHANTOM_SPAWN_EGG
	f	Lcfq;	sn	PIG_SPAWN_EGG
	f	Lcfq;	so	PIGLIN_SPAWN_EGG
	f	Lcfq;	sp	PIGLIN_BRUTE_SPAWN_EGG
	f	Lcfq;	sq	PILLAGER_SPAWN_EGG
	f	Lcfq;	sr	POLAR_BEAR_SPAWN_EGG
	f	Lcfq;	ss	PUFFERFISH_SPAWN_EGG
	f	Lcfq;	st	RABBIT_SPAWN_EGG
	f	Lcfq;	su	RAVAGER_SPAWN_EGG
	f	Lcfq;	sv	SALMON_SPAWN_EGG
	f	Lcfq;	sw	SHEEP_SPAWN_EGG
	f	Lcfq;	sx	SHULKER_SPAWN_EGG
	f	Lcfq;	sy	SILVERFISH_SPAWN_EGG
	f	Lcfq;	sz	SKELETON_SPAWN_EGG
	f	Lcfq;	tA	PRISMARINE_SHARD
	f	Lcfq;	tB	PRISMARINE_CRYSTALS
	f	Lcfq;	tC	RABBIT
	f	Lcfq;	tD	COOKED_RABBIT
	f	Lcfq;	tE	RABBIT_STEW
	f	Lcfq;	tF	RABBIT_FOOT
	f	Lcfq;	tG	RABBIT_HIDE
	f	Lcfq;	tH	ARMOR_STAND
	f	Lcfq;	tI	IRON_HORSE_ARMOR
	f	Lcfq;	tJ	GOLDEN_HORSE_ARMOR
	f	Lcfq;	tK	DIAMOND_HORSE_ARMOR
	f	Lcfq;	tL	LEATHER_HORSE_ARMOR
	f	Lcfq;	t	MUD
	f	Lcfq;	tM	LEAD
	f	Lcfq;	tN	NAME_TAG
	f	Lcfq;	tO	COMMAND_BLOCK_MINECART
	f	Lcfq;	tP	MUTTON
	f	Lcfq;	tQ	COOKED_MUTTON
	f	Lcfq;	tR	WHITE_BANNER
	f	Lcfq;	tS	ORANGE_BANNER
	f	Lcfq;	tT	MAGENTA_BANNER
	f	Lcfq;	tU	LIGHT_BLUE_BANNER
	f	Lcfq;	tV	YELLOW_BANNER
	f	Lcfq;	tW	LIME_BANNER
	f	Lcfq;	tX	PINK_BANNER
	f	Lcfq;	tY	GRAY_BANNER
	f	Lcfq;	tZ	LIGHT_GRAY_BANNER
	f	Lcfq;	ta	EXPERIENCE_BOTTLE
	f	Lcfq;	tb	FIRE_CHARGE
	f	Lcfq;	tc	WRITABLE_BOOK
	f	Lcfq;	td	WRITTEN_BOOK
	f	Lcfq;	te	ITEM_FRAME
	f	Lcfq;	tf	GLOW_ITEM_FRAME
	f	Lcfq;	tg	FLOWER_POT
	f	Lcfq;	th	CARROT
	f	Lcfq;	ti	POTATO
	f	Lcfq;	tj	BAKED_POTATO
	f	Lcfq;	tk	POISONOUS_POTATO
	f	Lcfq;	tl	MAP
	f	Lcfq;	tm	GOLDEN_CARROT
	f	Lcfq;	tn	SKELETON_SKULL
	f	Lcfq;	to	WITHER_SKELETON_SKULL
	f	Lcfq;	tp	PLAYER_HEAD
	f	Lcfq;	tq	ZOMBIE_HEAD
	f	Lcfq;	tr	CREEPER_HEAD
	f	Lcfq;	ts	DRAGON_HEAD
	f	Lcfq;	tt	PIGLIN_HEAD
	f	Lcfq;	tu	NETHER_STAR
	f	Lcfq;	tv	PUMPKIN_PIE
	f	Lcfq;	tw	FIREWORK_ROCKET
	f	Lcfq;	tx	FIREWORK_STAR
	f	Lcfq;	ty	ENCHANTED_BOOK
	f	Lcfq;	tz	NETHER_BRICK
	f	Lcfq;	uA	MUSIC_DISC_CAT
	f	Lcfq;	uB	MUSIC_DISC_BLOCKS
	f	Lcfq;	uC	MUSIC_DISC_CHIRP
	f	Lcfq;	uD	MUSIC_DISC_FAR
	f	Lcfq;	uE	MUSIC_DISC_MALL
	f	Lcfq;	uF	MUSIC_DISC_MELLOHI
	f	Lcfq;	uG	MUSIC_DISC_STAL
	f	Lcfq;	uH	MUSIC_DISC_STRAD
	f	Lcfq;	uI	MUSIC_DISC_WARD
	f	Lcfq;	uJ	MUSIC_DISC_11
	f	Lcfq;	uK	MUSIC_DISC_WAIT
	f	Lcfq;	uL	MUSIC_DISC_OTHERSIDE
	f	Lcfq;	u	CRIMSON_NYLIUM
	f	Lcfq;	uM	MUSIC_DISC_5
	f	Lcfq;	uN	MUSIC_DISC_PIGSTEP
	f	Lcfq;	uO	DISC_FRAGMENT_5
	f	Lcfq;	uP	TRIDENT
	f	Lcfq;	uQ	PHANTOM_MEMBRANE
	f	Lcfq;	uR	NAUTILUS_SHELL
	f	Lcfq;	uS	HEART_OF_THE_SEA
	f	Lcfq;	uT	CROSSBOW
	f	Lcfq;	uU	SUSPICIOUS_STEW
	f	Lcfq;	uV	LOOM
	f	Lcfq;	uW	FLOWER_BANNER_PATTERN
	f	Lcfq;	uX	CREEPER_BANNER_PATTERN
	f	Lcfq;	uY	SKULL_BANNER_PATTERN
	f	Lcfq;	uZ	MOJANG_BANNER_PATTERN
	f	Lcfq;	ua	CYAN_BANNER
	f	Lcfq;	ub	PURPLE_BANNER
	f	Lcfq;	uc	BLUE_BANNER
	f	Lcfq;	ud	BROWN_BANNER
	f	Lcfq;	ue	GREEN_BANNER
	f	Lcfq;	uf	RED_BANNER
	f	Lcfq;	ug	BLACK_BANNER
	f	Lcfq;	uh	END_CRYSTAL
	f	Lcfq;	ui	CHORUS_FRUIT
	f	Lcfq;	uj	POPPED_CHORUS_FRUIT
	f	Lcfq;	uk	TORCHFLOWER_SEEDS
	f	Lcfq;	ul	BEETROOT
	f	Lcfq;	um	BEETROOT_SEEDS
	f	Lcfq;	un	BEETROOT_SOUP
	f	Lcfq;	uo	DRAGON_BREATH
	f	Lcfq;	up	SPLASH_POTION
	f	Lcfq;	uq	SPECTRAL_ARROW
	f	Lcfq;	ur	TIPPED_ARROW
	f	Lcfq;	us	LINGERING_POTION
	f	Lcfq;	ut	SHIELD
	f	Lcfq;	uu	TOTEM_OF_UNDYING
	f	Lcfq;	uv	SHULKER_SHELL
	f	Lcfq;	uw	IRON_NUGGET
	f	Lcfq;	ux	KNOWLEDGE_BOOK
	f	Lcfq;	uy	DEBUG_STICK
	f	Lcfq;	uz	MUSIC_DISC_13
	f	Lcfq;	vA	CRYING_OBSIDIAN
	f	Lcfq;	vB	BLACKSTONE
	f	Lcfq;	vC	BLACKSTONE_SLAB
	f	Lcfq;	vD	BLACKSTONE_STAIRS
	f	Lcfq;	vE	GILDED_BLACKSTONE
	f	Lcfq;	vF	POLISHED_BLACKSTONE
	f	Lcfq;	vG	POLISHED_BLACKSTONE_SLAB
	f	Lcfq;	vH	POLISHED_BLACKSTONE_STAIRS
	f	Lcfq;	vI	CHISELED_POLISHED_BLACKSTONE
	f	Lcfq;	vJ	POLISHED_BLACKSTONE_BRICKS
	f	Lcfq;	vK	POLISHED_BLACKSTONE_BRICK_SLAB
	f	Lcfq;	vL	POLISHED_BLACKSTONE_BRICK_STAIRS
	f	Lcfq;	v	WARPED_NYLIUM
	f	Lcfq;	vM	CRACKED_POLISHED_BLACKSTONE_BRICKS
	f	Lcfq;	vN	RESPAWN_ANCHOR
	f	Lcfq;	vO	CANDLE
	f	Lcfq;	vP	WHITE_CANDLE
	f	Lcfq;	vQ	ORANGE_CANDLE
	f	Lcfq;	vR	MAGENTA_CANDLE
	f	Lcfq;	vS	LIGHT_BLUE_CANDLE
	f	Lcfq;	vT	YELLOW_CANDLE
	f	Lcfq;	vU	LIME_CANDLE
	f	Lcfq;	vV	PINK_CANDLE
	f	Lcfq;	vW	GRAY_CANDLE
	f	Lcfq;	vX	LIGHT_GRAY_CANDLE
	f	Lcfq;	vY	CYAN_CANDLE
	f	Lcfq;	vZ	PURPLE_CANDLE
	f	Lcfq;	va	GLOBE_BANNER_PATTERN
	f	Lcfq;	vb	PIGLIN_BANNER_PATTERN
	f	Lcfq;	vc	GOAT_HORN
	f	Lcfq;	vd	COMPOSTER
	f	Lcfq;	ve	BARREL
	f	Lcfq;	vf	SMOKER
	f	Lcfq;	vg	BLAST_FURNACE
	f	Lcfq;	vh	CARTOGRAPHY_TABLE
	f	Lcfq;	vi	FLETCHING_TABLE
	f	Lcfq;	vj	GRINDSTONE
	f	Lcfq;	vk	SMITHING_TABLE
	f	Lcfq;	vl	STONECUTTER
	f	Lcfq;	vm	BELL
	f	Lcfq;	vn	LANTERN
	f	Lcfq;	vo	SOUL_LANTERN
	f	Lcfq;	vp	SWEET_BERRIES
	f	Lcfq;	vq	GLOW_BERRIES
	f	Lcfq;	vr	CAMPFIRE
	f	Lcfq;	vs	SOUL_CAMPFIRE
	f	Lcfq;	vt	SHROOMLIGHT
	f	Lcfq;	vu	HONEYCOMB
	f	Lcfq;	vv	BEE_NEST
	f	Lcfq;	vw	BEEHIVE
	f	Lcfq;	vx	HONEY_BOTTLE
	f	Lcfq;	vy	HONEYCOMB_BLOCK
	f	Lcfq;	vz	LODESTONE
	f	Lcfq;	wA	RIB_ARMOR_TRIM_SMITHING_TEMPLATE
	f	Lcfq;	wB	SPIRE_ARMOR_TRIM_SMITHING_TEMPLATE
	f	Lcfq;	wC	POTTERY_SHARD_ARCHER
	f	Lcfq;	wD	POTTERY_SHARD_PRIZE
	f	Lcfq;	wE	POTTERY_SHARD_ARMS_UP
	f	Lcfq;	wF	POTTERY_SHARD_SKULL
	f	Lcfq;	w	COBBLESTONE
	f	Lcfq;	wa	BLUE_CANDLE
	f	Lcfq;	wb	BROWN_CANDLE
	f	Lcfq;	wc	GREEN_CANDLE
	f	Lcfq;	wd	RED_CANDLE
	f	Lcfq;	we	BLACK_CANDLE
	f	Lcfq;	wf	SMALL_AMETHYST_BUD
	f	Lcfq;	wg	MEDIUM_AMETHYST_BUD
	f	Lcfq;	wh	LARGE_AMETHYST_BUD
	f	Lcfq;	wi	AMETHYST_CLUSTER
	f	Lcfq;	wj	POINTED_DRIPSTONE
	f	Lcfq;	wk	OCHRE_FROGLIGHT
	f	Lcfq;	wl	VERDANT_FROGLIGHT
	f	Lcfq;	wm	PEARLESCENT_FROGLIGHT
	f	Lcfq;	wn	FROGSPAWN
	f	Lcfq;	wo	ECHO_SHARD
	f	Lcfq;	wp	BRUSH
	f	Lcfq;	wq	NETHERITE_UPGRADE_SMITHING_TEMPLATE
	f	Lcfq;	wr	SENTRY_ARMOR_TRIM_SMITHING_TEMPLATE
	f	Lcfq;	ws	DUNE_ARMOR_TRIM_SMITHING_TEMPLATE
	f	Lcfq;	wt	COAST_ARMOR_TRIM_SMITHING_TEMPLATE
	f	Lcfq;	wu	WILD_ARMOR_TRIM_SMITHING_TEMPLATE
	f	Lcfq;	wv	WARD_ARMOR_TRIM_SMITHING_TEMPLATE
	f	Lcfq;	ww	EYE_ARMOR_TRIM_SMITHING_TEMPLATE
	f	Lcfq;	wx	VEX_ARMOR_TRIM_SMITHING_TEMPLATE
	f	Lcfq;	wy	TIDE_ARMOR_TRIM_SMITHING_TEMPLATE
	f	Lcfq;	wz	SNOUT_ARMOR_TRIM_SMITHING_TEMPLATE
	f	Lcfq;	x	OAK_PLANKS
	f	Lcfq;	y	SPRUCE_PLANKS
	f	Lcfq;	z	BIRCH_PLANKS
c	cfz	net/minecraft/world/item/KnowledgeBookItem
	m	(Lcfq$a;)V	<init>	<init>
		p	1		settings
	m	(Lcmi;Lbym;Lbdx;)Lbdz;	a	use
		p	1		world
		p	2		user
		p	3		hand
	f	Ljava/lang/String;	a	RECIPE_TAG
	f	Lorg/slf4j/Logger;	b	LOGGER
c	cga	net/minecraft/world/item/LeadItem
	m	(Lcfq$a;)V	<init>	<init>
		p	1		settings
	m	(Lbym;Lcmi;Lgt;)Lbdy;	a	bindPlayerMobs
		p	0		player
		p	1		world
		p	2		pos
	m	(Lcie;)Lbdy;	a	useOn
		p	1		context
c	cgb	net/minecraft/world/item/LingeringPotionItem
	m	(Lcfq$a;)V	<init>	<init>
		p	1		settings
	m	(Lcfv;Lcmi;Ljava/util/List;Lchl;)V	a	appendHoverText
		p	1		stack
		p	2		world
		p	3		tooltip
		p	4		context
	m	(Lcmi;Lbym;Lbdx;)Lbdz;	a	use
		p	1		world
		p	2		user
		p	3		hand
c	cgc	net/minecraft/world/item/MapItem
	m	(Lcfq$a;)V	<init>	<init>
		p	1		settings
	m	(I)Ljava/lang/String;	a	makeKey
		p	0		mapId
	m	(Laip;Lcfv;)V	a	renderBiomePreviewMap
		p	0		world
		p	1		map
	m	(Lcfv;I)V	a	storeMapData
		p	0		stack
		p	1		id
	m	(Lcfv;Lcmi;)Ldxu;	a	getSavedData
		p	0		map
		p	1		world
	m	(Lcfv;Lcmi;I)V	a	scaleMap
		p	0		map
		p	1		world
		p	2		amount
	m	(Lcfv;Lcmi;IIIZZLadc;)V	a	createAndStoreSavedData
		p	0		stack
		p	1		world
		p	2		x
		p	3		z
		p	4		scale
		p	5		showIcons
		p	6		unlimitedTracking
		p	7		dimension
	m	(Lcfv;Lcmi;Lbfh;IZ)V	a	inventoryTick
		p	1		stack
		p	2		world
		p	3		entity
		p	4		slot
		p	5		selected
	m	(Lcfv;Lcmi;Lbym;)Lvb;	a	getUpdatePacket
		p	1		stack
		p	2		world
		p	3		player
	m	(Lcfv;Lcmi;Ljava/util/List;Lchl;)V	a	appendHoverText
		p	1		stack
		p	2		world
		p	3		tooltip
		p	4		context
	m	(Lcie;)Lbdy;	a	useOn
		p	1		context
	m	(Lcmi;IIBZZ)Lcfv;	a	create
		p	0		world
		p	1		x
		p	2		z
		p	3		scale
		p	4		showIcons
		p	5		unlimitedTracking
	m	(Lcmi;IIIZZLadc;)I	a	createNewSavedData
		p	0		world
		p	1		x
		p	2		z
		p	3		scale
		p	4		showIcons
		p	5		unlimitedTracking
		p	6		dimension
	m	(Lcmi;Lbfh;Ldxu;)V	a	update
		p	1		world
		p	2		entity
		p	3		state
	m	(Lcmi;Lcfv;)V	a	lockMap
		p	0		world
		p	1		stack
	m	(Lcmi;Ldbq;Lgt;)Ldbq;	a	getCorrectStateForFluidBlock
		p	1		world
		p	2		state
		p	3		pos
	m	(Ljava/lang/Integer;Lcmi;)Ldxu;	a	getSavedData
		p	0		id
		p	1		world
	m	([ZII)Z	a	isBiomeWatery
		p	0		biomes
		p	1		x
		p	2		z
	m	(Lcfv;Lcmi;Lbym;)V	b	onCraftedBy
		p	1		stack
		p	2		world
		p	3		player
	m	(Lcfv;)Ljava/lang/Integer;	d	getMapId
		p	0		stack
	m	(Lcfv;)I	k	getColor
		p	0		stack
	f	I	a	IMAGE_WIDTH
	f	I	b	IMAGE_HEIGHT
	f	Ljava/lang/String;	c	MAP_SCALE_TAG
	f	Ljava/lang/String;	d	MAP_LOCK_TAG
	f	I	e	DEFAULT_MAP_COLOR
	f	Ljava/lang/String;	f	TAG_MAP
c	cgd	net/minecraft/world/item/MilkBucketItem
	m	(Lcfq$a;)V	<init>	<init>
		p	1		settings
	m	(Lcfv;Lcmi;Lbfx;)Lcfv;	a	finishUsingItem
		p	1		stack
		p	2		world
		p	3		user
	m	(Lcmi;Lbym;Lbdx;)Lbdz;	a	use
		p	1		world
		p	2		user
		p	3		hand
	m	(Lcfv;)I	b	getUseDuration
		p	1		stack
	m	(Lcfv;)Lchn;	c	getUseAnimation
		p	1		stack
	f	I	a	DRINK_DURATION
c	cge	net/minecraft/world/item/MinecartItem
	m	(Lcad$a;Lcfq$a;)V	<init>	<init>
		p	1		type
		p	2		settings
	m	(Lcie;)Lbdy;	a	useOn
		p	1		context
	f	Lig;	a	DISPENSE_ITEM_BEHAVIOR
	f	Lcad$a;	b	type
c	cge$1	net/minecraft/world/item/MinecartItem$1
	m	(Lgu;)V	a	playSound
		p	1		pointer
	m	(Lgu;Lcfv;)Lcfv;	a	execute
		p	1		pointer
		p	2		stack
	f	Lie;	c	defaultDispenseItemBehavior
c	cgf	net/minecraft/world/item/MobBucketItem
	m	(Lbfl;Ldwi;Lamq;Lcfq$a;)V	<init>	<init>
		p	1		type
		p	2		fluid
		p	3		emptyingSound
		p	4		settings
	m	(Laip;Lcfv;Lgt;)V	a	spawn
		p	1		world
		p	2		stack
		p	3		pos
	m	(Lbym;Lcmi;Lcfv;Lgt;)V	a	checkExtraContent
		p	1		player
		p	2		world
		p	3		stack
		p	4		pos
	m	(Lbym;Lcmj;Lgt;)V	a	playEmptySound
		p	1		player
		p	2		world
		p	3		pos
	m	(Lcfv;Lcmi;Ljava/util/List;Lchl;)V	a	appendHoverText
		p	1		stack
		p	2		world
		p	3		tooltip
		p	4		context
	f	Lbfl;	a	type
	f	Lamq;	b	emptySound
c	cgg	net/minecraft/world/item/NameTagItem
	m	(Lcfq$a;)V	<init>	<init>
		p	1		settings
	m	(Lcfv;Lbym;Lbfx;Lbdx;)Lbdy;	a	interactLivingEntity
		p	1		stack
		p	2		user
		p	3		entity
		p	4		hand
c	cgh	net/minecraft/world/item/PickaxeItem
	m	(Lchh;IFLcfq$a;)V	<init>	<init>
		p	1		material
		p	2		attackDamage
		p	3		attackSpeed
		p	4		settings
c	cgi	net/minecraft/world/item/PlaceOnWaterBlockItem
	m	(Lcpi;Lcfq$a;)V	<init>	<init>
		p	1		block
		p	2		settings
	m	(Lcie;)Lbdy;	a	useOn
		p	1		context
	m	(Lcmi;Lbym;Lbdx;)Lbdz;	a	use
		p	1		world
		p	2		user
		p	3		hand
c	cgj	net/minecraft/world/item/PlayerHeadItem
	m	(Lcpi;Lcpi;Lcfq$a;)V	<init>	<init>
		p	1		block
		p	2		wallBlock
		p	3		settings
	m	(Lre;Lcom/mojang/authlib/GameProfile;)V	a	lambda$verifyTagAfterLoad$0
		p	1		profile
	m	(Lre;)V	b	verifyTagAfterLoad
		p	1		nbt
	m	(Lcfv;)Ltj;	m	getName
		p	1		stack
	f	Ljava/lang/String;	c	TAG_SKULL_OWNER
c	cgk	net/minecraft/world/item/PotionItem
	m	(Lcfq$a;)V	<init>	<init>
		p	1		settings
	m	(Lcfv;Lcmi;Lbfx;)Lcfv;	a	finishUsingItem
		p	1		stack
		p	2		world
		p	3		user
	m	(Lcfv;Lcmi;Ljava/util/List;Lchl;)V	a	appendHoverText
		p	1		stack
		p	2		world
		p	3		tooltip
		p	4		context
	m	(Lcie;)Lbdy;	a	useOn
		p	1		context
	m	(Lcmi;Lbym;Lbdx;)Lbdz;	a	use
		p	1		world
		p	2		user
		p	3		hand
	m	()Lcfv;	ad_	getDefaultInstance
	m	(Lcfv;)I	b	getUseDuration
		p	1		stack
	m	(Lcfv;)Lchn;	c	getUseAnimation
		p	1		stack
	m	(Lcfv;)Ljava/lang/String;	j	getDescriptionId
		p	1		stack
	f	I	a	DRINK_DURATION
c	cgl	net/minecraft/world/item/ProjectileWeaponItem
	m	(Lcfq$a;)V	<init>	<init>
		p	1		settings
	m	(Lbfx;Ljava/util/function/Predicate;)Lcfv;	a	getHeldProjectile
		p	0		entity
		p	1		predicate
	m	()Ljava/util/function/Predicate;	b	getAllSupportedProjectiles
	m	()I	c	getEnchantmentValue
	m	()I	d	getDefaultProjectileRange
	m	(Lcfv;)Z	d	lambda$static$1
		p	0		stack
	m	()Ljava/util/function/Predicate;	e	getSupportedHeldProjectiles
	m	(Lcfv;)Z	k	lambda$static$0
		p	0		stack
	f	Ljava/util/function/Predicate;	c	ARROW_ONLY
	f	Ljava/util/function/Predicate;	d	ARROW_OR_FIREWORK
c	cgm	net/minecraft/world/item/Rarity
	m	(Ljava/lang/String;ILn;)V	<init>	<init>
		p	3		formatting
	m	()[Lcgm;	a	$values
	f	Lcgm;	a	COMMON
	f	Lcgm;	b	UNCOMMON
	f	Lcgm;	c	RARE
	f	Lcgm;	d	EPIC
	f	Ln;	e	color
	f	[Lcgm;	f	$VALUES
c	cgn	net/minecraft/world/item/RecordItem
	m	(ILamq;Lcfq$a;I)V	<init>	<init>
		p	1		comparatorOutput
		p	2		sound
		p	3		settings
		p	4		lengthInSeconds
	m	(Lamq;)Lcgn;	a	getBySound
		p	0		sound
	m	(Lcfv;Lcmi;Ljava/util/List;Lchl;)V	a	appendHoverText
		p	1		stack
		p	2		world
		p	3		tooltip
		p	4		context
	m	(Lcie;)Lbdy;	a	useOn
		p	1		context
	m	()I	h	getAnalogOutput
	m	()Ltw;	i	getDisplayName
	m	()Lamq;	x	getSound
	m	()I	y	getLengthInTicks
	f	Ljava/util/Map;	a	BY_NAME
	f	I	b	analogOutput
	f	Lamq;	c	sound
	f	I	d	lengthInTicks
c	cgo	net/minecraft/world/item/SaddleItem
	m	(Lcfq$a;)V	<init>	<init>
		p	1		settings
	m	(Lcfv;Lbym;Lbfx;Lbdx;)Lbdy;	a	interactLivingEntity
		p	1		stack
		p	2		user
		p	3		entity
		p	4		hand
c	cgp	net/minecraft/world/item/ScaffoldingBlockItem
	m	(Lcpi;Lcfq$a;)V	<init>	<init>
		p	1		block
		p	2		settings
	m	(Lcic;)Lcic;	b	updatePlacementContext
		p	1		context
	m	()Z	d	mustSurvive
c	cgq	net/minecraft/world/item/ServerItemCooldowns
	m	(Laiq;)V	<init>	<init>
		p	1		player
	m	(Lcfq;I)V	b	onCooldownStarted
		p	1		item
		p	2		duration
	m	(Lcfq;)V	c	onCooldownEnded
		p	1		item
	f	Laiq;	a	player
c	cgr	net/minecraft/world/item/ShearsItem
	m	(Lcfq$a;)V	<init>	<init>
		p	1		settings
	m	(Lbfx;)V	a	lambda$mineBlock$0
		p	0		e
	m	(Lcfv;Lcmi;Ldbq;Lgt;Lbfx;)Z	a	mineBlock
		p	1		stack
		p	2		world
		p	3		state
		p	4		pos
		p	5		miner
	m	(Lcfv;Ldbq;)F	a	getDestroySpeed
		p	1		stack
		p	2		state
	m	(Lcie;)Lbdy;	a	useOn
		p	1		context
	m	(Lcie;Lbym;)V	a	lambda$useOn$1
		p	1		player
	m	(Ldbq;)Z	a_	isCorrectToolForDrops
		p	1		state
c	cgs	net/minecraft/world/item/ShieldItem
	m	(Lcfq$a;)V	<init>	<init>
		p	1		settings
	m	(Lcfv;Lcfv;)Z	a	isValidRepairItem
		p	1		stack
		p	2		ingredient
	m	(Lcfv;Lcmi;Ljava/util/List;Lchl;)V	a	appendHoverText
		p	1		stack
		p	2		world
		p	3		tooltip
		p	4		context
	m	(Lcmi;Lbym;Lbdx;)Lbdz;	a	use
		p	1		world
		p	2		user
		p	3		hand
	m	(Lcfv;)I	b	getUseDuration
		p	1		stack
	m	(Lcfv;)Lchn;	c	getUseAnimation
		p	1		stack
	m	(Lcfv;)Lcel;	d	getColor
		p	0		stack
	m	()Lbfm;	g	getEquipmentSlot
	m	(Lcfv;)Ljava/lang/String;	j	getDescriptionId
		p	1		stack
	f	I	a	EFFECTIVE_BLOCK_DELAY
	f	F	b	MINIMUM_DURABILITY_DAMAGE
	f	Ljava/lang/String;	c	TAG_BASE_COLOR
c	cgt	net/minecraft/world/item/ShovelItem
	m	(Lchh;FFLcfq$a;)V	<init>	<init>
		p	1		material
		p	2		attackDamage
		p	3		attackSpeed
		p	4		settings
	m	(Lcie;)Lbdy;	a	useOn
		p	1		context
	m	(Lcie;Lbym;)V	a	lambda$useOn$0
		p	1		p
	f	Ljava/util/Map;	a	FLATTENABLES
c	cgu	net/minecraft/world/item/SignItem
	m	(Lcfq$a;Lcpi;Lcpi;)V	<init>	<init>
		p	1		settings
		p	2		standingBlock
		p	3		wallBlock
	m	(Lgt;Lcmi;Lbym;Lcfv;Ldbq;)Z	a	updateCustomBlockEntityTag
		p	1		pos
		p	2		world
		p	3		player
		p	4		stack
		p	5		state
c	cgv	net/minecraft/world/item/SimpleFoiledItem
	m	(Lcfq$a;)V	<init>	<init>
		p	1		settings
	m	(Lcfv;)Z	i	isFoil
		p	1		stack
c	cgw	net/minecraft/world/item/SmithingTemplateItem
	m	(Ltj;Ltj;Ltj;Ltj;Ltj;Ljava/util/List;Ljava/util/List;)V	<init>	<init>
		p	1		appliesToText
		p	2		ingredientsText
		p	3		titleText
		p	4		baseSlotDescriptionText
		p	5		additionsSlotDescriptionText
		p	6		emptyBaseSlotTextures
		p	7		emptyAdditionsSlotTextures
	m	()Ljava/util/List;	A	createTrimmableArmorIconList
	m	()Ljava/util/List;	B	createTrimmableMaterialIconList
	m	()Ljava/util/List;	C	createNetheriteUpgradeIconList
	m	()Ljava/util/List;	D	createNetheriteUpgradeMaterialList
	m	()Ljava/lang/String;	a	getDescriptionId
	m	(Ladc;)Lcgw;	a	createArmorTrimTemplate
		p	0		trimPattern
	m	(Ladd;)Lcgw;	a	createArmorTrimTemplate
		p	0		trimPatternIn
	m	(Lcfv;Lcmi;Ljava/util/List;Lchl;)V	a	appendHoverText
		p	1		stack
		p	2		world
		p	3		tooltip
		p	4		context
	m	()Lcgw;	h	createNetheriteUpgradeTemplate
	m	()Ltj;	i	getBaseSlotDescription
	m	()Ltj;	x	getAdditionSlotDescription
	m	()Ljava/util/List;	y	getBaseSlotEmptyIcons
	m	()Ljava/util/List;	z	getAdditionalSlotEmptyIcons
	f	Ladd;	A	EMPTY_SLOT_SWORD
	f	Ladd;	B	EMPTY_SLOT_SHOVEL
	f	Ladd;	C	EMPTY_SLOT_PICKAXE
	f	Ladd;	D	EMPTY_SLOT_INGOT
	f	Ladd;	E	EMPTY_SLOT_REDSTONE_DUST
	f	Ladd;	F	EMPTY_SLOT_QUARTZ
	f	Ladd;	G	EMPTY_SLOT_EMERALD
	f	Ladd;	H	EMPTY_SLOT_DIAMOND
	f	Ladd;	I	EMPTY_SLOT_LAPIS_LAZULI
	f	Ladd;	J	EMPTY_SLOT_AMETHYST_SHARD
	f	Ltj;	K	appliesTo
	f	Ltj;	L	ingredients
	f	Ltj;	M	upgradeDescription
	f	Ltj;	N	baseSlotDescription
	f	Ltj;	O	additionsSlotDescription
	f	Ljava/util/List;	P	baseSlotEmptyIcons
	f	Ljava/util/List;	Q	additionalSlotEmptyIcons
	f	Ln;	a	TITLE_FORMAT
	f	Ln;	b	DESCRIPTION_FORMAT
	f	Ljava/lang/String;	c	DESCRIPTION_ID
	f	Ltj;	d	INGREDIENTS_TITLE
	f	Ltj;	e	APPLIES_TO_TITLE
	f	Ltj;	f	NETHERITE_UPGRADE
	f	Ltj;	g	ARMOR_TRIM_APPLIES_TO
	f	Ltj;	h	ARMOR_TRIM_INGREDIENTS
	f	Ltj;	i	ARMOR_TRIM_BASE_SLOT_DESCRIPTION
	f	Ltj;	j	ARMOR_TRIM_ADDITIONS_SLOT_DESCRIPTION
	f	Ltj;	k	NETHERITE_UPGRADE_APPLIES_TO
	f	Ltj;	r	NETHERITE_UPGRADE_INGREDIENTS
	f	Ltj;	s	NETHERITE_UPGRADE_BASE_SLOT_DESCRIPTION
	f	Ltj;	t	NETHERITE_UPGRADE_ADDITIONS_SLOT_DESCRIPTION
	f	Ladd;	u	EMPTY_SLOT_HELMET
	f	Ladd;	v	EMPTY_SLOT_CHESTPLATE
	f	Ladd;	w	EMPTY_SLOT_LEGGINGS
	f	Ladd;	x	EMPTY_SLOT_BOOTS
	f	Ladd;	y	EMPTY_SLOT_HOE
	f	Ladd;	z	EMPTY_SLOT_AXE
c	cgx	net/minecraft/world/item/SnowballItem
	m	(Lcfq$a;)V	<init>	<init>
		p	1		settings
	m	(Lcmi;Lbym;Lbdx;)Lbdz;	a	use
		p	1		world
		p	2		user
		p	3		hand
c	cgy	net/minecraft/world/item/SolidBucketItem
	m	(Lcpi;Lamq;Lcfq$a;)V	<init>	<init>
		p	1		block
		p	2		placeSound
		p	3		settings
	m	()Ljava/lang/String;	a	getDescriptionId
	m	(Lbym;Lcmi;Lgt;Leda;)Z	a	emptyContents
		p	1		player
		p	2		world
		p	3		pos
		p	4		hitResult
	m	(Lcie;)Lbdy;	a	useOn
		p	1		context
	m	(Ldbq;)Lamq;	a	getPlaceSound
		p	1		state
	f	Lamq;	c	placeSound
c	cgz	net/minecraft/world/item/SpawnEggItem
	m	(Lbfl;IILcfq$a;)V	<init>	<init>
		p	1		type
		p	2		primaryColor
		p	3		secondaryColor
		p	4		settings
	m	(I)I	a	getColor
		p	1		tintIndex
	m	(Lbfl;)Lcgz;	a	byId
		p	0		type
	m	(Lbym;Lbfz;Lbfl;Laip;Lede;Lcfv;)Ljava/util/Optional;	a	spawnOffspringFromSpawnEgg
		p	1		user
		p	2		entity
		p	3		entityType
		p	4		world
		p	5		pos
		p	6		stack
	m	(Lcie;)Lbdy;	a	useOn
		p	1		context
	m	(Lcmi;Lbym;Lbdx;)Lbdz;	a	use
		p	1		world
		p	2		user
		p	3		hand
	m	(Lre;)Lbfl;	a	getType
		p	1		nbt
	m	(Lre;Lbfl;)Z	a	spawnsEntity
		p	1		nbt
		p	2		type
	m	()Ljava/lang/Iterable;	h	eggs
	m	()Lcau;	m	requiredFeatures
	f	Ljava/util/Map;	a	BY_ID
	f	I	b	backgroundColor
	f	I	c	highlightColor
	f	Lbfl;	d	defaultType
c	cha	net/minecraft/world/item/SpectralArrowItem
	m	(Lcfq$a;)V	<init>	<init>
		p	1		settings
	m	(Lcmi;Lcfv;Lbfx;)Lbys;	a	createArrow
		p	1		world
		p	2		stack
		p	3		shooter
c	chb	net/minecraft/world/item/SplashPotionItem
	m	(Lcfq$a;)V	<init>	<init>
		p	1		settings
	m	(Lcmi;Lbym;Lbdx;)Lbdz;	a	use
		p	1		world
		p	2		user
		p	3		hand
c	chc	net/minecraft/world/item/SpyglassItem
	m	(Lcfq$a;)V	<init>	<init>
		p	1		settings
	m	(Lbfx;)V	a	stopUsing
		p	1		user
	m	(Lcfv;Lcmi;Lbfx;)Lcfv;	a	finishUsingItem
		p	1		stack
		p	2		world
		p	3		user
	m	(Lcfv;Lcmi;Lbfx;I)V	a	releaseUsing
		p	1		stack
		p	2		world
		p	3		user
		p	4		remainingUseTicks
	m	(Lcmi;Lbym;Lbdx;)Lbdz;	a	use
		p	1		world
		p	2		user
		p	3		hand
	m	(Lcfv;)I	b	getUseDuration
		p	1		stack
	m	(Lcfv;)Lchn;	c	getUseAnimation
		p	1		stack
	f	I	a	USE_DURATION
	f	F	b	ZOOM_FOV_MODIFIER
c	chd	net/minecraft/world/item/StandingAndWallBlockItem
	m	(Lcpi;Lcpi;Lcfq$a;Lgz;)V	<init>	<init>
		p	1		standingBlock
		p	2		wallBlock
		p	3		settings
		p	4		verticalAttachmentDirection
	m	(Lcml;Ldbq;Lgt;)Z	a	canPlace
		p	1		world
		p	2		state
		p	3		pos
	m	(Ljava/util/Map;Lcfq;)V	a	registerBlocks
		p	1		map
		p	2		item
	m	(Lcic;)Ldbq;	c	getPlacementState
		p	1		context
	f	Lgz;	c	attachmentDirection
	f	Lcpi;	d	wallBlock
c	che	net/minecraft/world/item/SuspiciousStewItem
	m	(Lcfq$a;)V	<init>	<init>
		p	1		settings
	m	(Lcfv;Lbew;I)V	a	saveMobEffect
		p	0		stew
		p	1		effect
		p	2		duration
	m	(Lcfv;Lcmi;Lbfx;)Lcfv;	a	finishUsingItem
		p	1		stack
		p	2		world
		p	3		user
	m	(Lcfv;Lcmi;Ljava/util/List;Lchl;)V	a	appendHoverText
		p	1		stack
		p	2		world
		p	3		tooltip
		p	4		context
	m	(Lcfv;Ljava/util/function/Consumer;)V	a	listPotionEffects
		p	0		stew
		p	1		effectConsumer
	f	Ljava/lang/String;	a	EFFECTS_TAG
	f	Ljava/lang/String;	b	EFFECT_ID_TAG
	f	Ljava/lang/String;	c	EFFECT_DURATION_TAG
	f	I	d	DEFAULT_DURATION
c	chf	net/minecraft/world/item/SwordItem
	m	(Lchh;IFLcfq$a;)V	<init>	<init>
		p	1		toolMaterial
		p	2		attackDamage
		p	3		attackSpeed
		p	4		settings
	m	(Lbfm;)Lcom/google/common/collect/Multimap;	a	getDefaultAttributeModifiers
		p	1		slot
	m	(Lbfx;)V	a	lambda$mineBlock$1
		p	0		e
	m	(Lcfv;Lbfx;Lbfx;)Z	a	hurtEnemy
		p	1		stack
		p	2		target
		p	3		attacker
	m	(Lcfv;Lcmi;Ldbq;Lgt;Lbfx;)Z	a	mineBlock
		p	1		stack
		p	2		world
		p	3		state
		p	4		pos
		p	5		miner
	m	(Lcfv;Ldbq;)F	a	getDestroySpeed
		p	1		stack
		p	2		state
	m	(Ldbq;Lcmi;Lgt;Lbym;)Z	a	canAttackBlock
		p	1		state
		p	2		world
		p	3		pos
		p	4		miner
	m	(Ldbq;)Z	a_	isCorrectToolForDrops
		p	1		state
	m	(Lbfx;)V	b	lambda$hurtEnemy$0
		p	0		e
	m	()F	h	getDamage
	f	F	a	attackDamage
	f	Lcom/google/common/collect/Multimap;	b	defaultModifiers
c	chg	net/minecraft/world/item/ThrowablePotionItem
	m	(Lcfq$a;)V	<init>	<init>
		p	1		settings
	m	(Lcmi;Lbym;Lbdx;)Lbdz;	a	use
		p	1		world
		p	2		user
		p	3		hand
c	chh	net/minecraft/world/item/Tier
	m	()I	a	getUses
	m	()F	b	getSpeed
	m	()F	c	getAttackDamageBonus
	m	()I	d	getLevel
	m	()I	e	getEnchantmentValue
	m	()Lciu;	f	getRepairIngredient
c	chi	net/minecraft/world/item/TieredItem
	m	(Lchh;Lcfq$a;)V	<init>	<init>
		p	1		material
		p	2		settings
	m	(Lcfv;Lcfv;)Z	a	isValidRepairItem
		p	1		stack
		p	2		ingredient
	m	()I	c	getEnchantmentValue
	m	()Lchh;	i	getTier
	f	Lchh;	a	tier
c	chj	net/minecraft/world/item/Tiers
	m	(Ljava/lang/String;IIIFFILjava/util/function/Supplier;)V	<init>	<init>
		p	3		miningLevel
		p	4		itemDurability
		p	5		miningSpeed
		p	6		attackDamage
		p	7		enchantability
		p	8		repairIngredient
	m	()I	a	getUses
	m	()F	b	getSpeed
	m	()F	c	getAttackDamageBonus
	m	()I	d	getLevel
	m	()I	e	getEnchantmentValue
	m	()Lciu;	f	getRepairIngredient
	m	()Lciu;	g	lambda$static$5
	m	()Lciu;	h	lambda$static$4
	m	()Lciu;	i	lambda$static$3
	m	()Lciu;	j	lambda$static$2
	m	()Lciu;	k	lambda$static$1
	m	()Lciu;	l	lambda$static$0
	m	()[Lchj;	m	$values
	f	Lchj;	a	WOOD
	f	Lchj;	b	STONE
	f	Lchj;	c	IRON
	f	Lchj;	d	DIAMOND
	f	Lchj;	e	GOLD
	f	Lchj;	f	NETHERITE
	f	I	g	level
	f	I	h	uses
	f	F	i	speed
	f	F	j	damage
	f	I	k	enchantmentValue
	f	Lape;	l	repairIngredient
	f	[Lchj;	m	$VALUES
c	chk	net/minecraft/world/item/TippedArrowItem
	m	(Lcfq$a;)V	<init>	<init>
		p	1		settings
	m	(Lcfv;Lcmi;Ljava/util/List;Lchl;)V	a	appendHoverText
		p	1		stack
		p	2		world
		p	3		tooltip
		p	4		context
	m	()Lcfv;	ad_	getDefaultInstance
	m	(Lcfv;)Ljava/lang/String;	j	getDescriptionId
		p	1		stack
c	chl	net/minecraft/world/item/TooltipFlag
	m	()Z	a	isAdvanced
	m	()Z	b	isCreative
	f	Lchl$a;	a	NORMAL
	f	Lchl$a;	b	ADVANCED
c	chl$a	net/minecraft/world/item/TooltipFlag$Default
	m	()Z	a	isAdvanced
	m	()Z	b	isCreative
	m	()Lchl$a;	c	asCreative
	m	()Z	d	advanced
	m	()Z	e	creative
	f	Z	c	advanced
	f	Z	d	creative
c	chm	net/minecraft/world/item/TridentItem
	m	(Lcfq$a;)V	<init>	<init>
		p	1		settings
	m	(Lbfm;)Lcom/google/common/collect/Multimap;	a	getDefaultAttributeModifiers
		p	1		slot
	m	(Lbfx;)V	a	lambda$mineBlock$2
		p	0		e
	m	(Lbfx;Lbym;)V	a	lambda$releaseUsing$0
		p	1		p
	m	(Lcfv;Lbfx;Lbfx;)Z	a	hurtEnemy
		p	1		stack
		p	2		target
		p	3		attacker
	m	(Lcfv;Lcmi;Lbfx;I)V	a	releaseUsing
		p	1		stack
		p	2		world
		p	3		user
		p	4		remainingUseTicks
	m	(Lcfv;Lcmi;Ldbq;Lgt;Lbfx;)Z	a	mineBlock
		p	1		stack
		p	2		world
		p	3		state
		p	4		pos
		p	5		miner
	m	(Lcmi;Lbym;Lbdx;)Lbdz;	a	use
		p	1		world
		p	2		user
		p	3		hand
	m	(Ldbq;Lcmi;Lgt;Lbym;)Z	a	canAttackBlock
		p	1		state
		p	2		world
		p	3		pos
		p	4		miner
	m	(Lbfx;)V	b	lambda$hurtEnemy$1
		p	0		e
	m	(Lcfv;)I	b	getUseDuration
		p	1		stack
	m	()I	c	getEnchantmentValue
	m	(Lcfv;)Lchn;	c	getUseAnimation
		p	1		stack
	f	I	a	THROW_THRESHOLD_TIME
	f	F	b	BASE_DAMAGE
	f	F	c	SHOOT_POWER
	f	Lcom/google/common/collect/Multimap;	d	defaultModifiers
c	chn	net/minecraft/world/item/UseAnim
	m	()[Lchn;	a	$values
	f	Lchn;	a	NONE
	f	Lchn;	b	EAT
	f	Lchn;	c	DRINK
	f	Lchn;	d	BLOCK
	f	Lchn;	e	BOW
	f	Lchn;	f	SPEAR
	f	Lchn;	g	CROSSBOW
	f	Lchn;	h	SPYGLASS
	f	Lchn;	i	TOOT_HORN
	f	Lchn;	j	BRUSH
	f	[Lchn;	k	$VALUES
c	cho	net/minecraft/world/item/Vanishable
c	chp	net/minecraft/world/item/WritableBookItem
	m	(Lcfq$a;)V	<init>	<init>
		p	1		settings
	m	(Lcie;)Lbdy;	a	useOn
		p	1		context
	m	(Lcmi;Lbym;Lbdx;)Lbdz;	a	use
		p	1		world
		p	2		user
		p	3		hand
	m	(Lre;)Z	a	makeSureTagIsValid
		p	0		nbt
c	chq	net/minecraft/world/item/WrittenBookItem
	m	(Lcfq$a;)V	<init>	<init>
		p	1		settings
	m	(Lcfv;Lcmi;Ljava/util/List;Lchl;)V	a	appendHoverText
		p	1		stack
		p	2		world
		p	3		tooltip
		p	4		context
	m	(Lcfv;Ldr;Lbym;)Z	a	resolveBookComponents
		p	0		book
		p	1		commandSource
		p	2		player
	m	(Lcie;)Lbdy;	a	useOn
		p	1		context
	m	(Lcmi;Lbym;Lbdx;)Lbdz;	a	use
		p	1		world
		p	2		user
		p	3		hand
	m	(Ldr;Lbym;Ljava/lang/String;)Ljava/lang/String;	a	resolvePage
		p	0		commandSource
		p	1		player
		p	2		text
	m	(Lre;)Z	a	makeSureTagIsValid
		p	0		nbt
	m	(Lcfv;)I	d	getGeneration
		p	0		stack
	m	(Lcfv;)Z	i	isFoil
		p	1		stack
	m	(Lcfv;)I	k	getPageCount
		p	0		stack
	m	(Lcfv;)Ltj;	m	getName
		p	1		stack
	f	I	a	TITLE_LENGTH
	f	I	b	TITLE_MAX_LENGTH
	f	I	c	PAGE_EDIT_LENGTH
	f	I	d	PAGE_LENGTH
	f	I	e	MAX_PAGES
	f	I	f	MAX_GENERATION
	f	Ljava/lang/String;	g	TAG_TITLE
	f	Ljava/lang/String;	h	TAG_FILTERED_TITLE
	f	Ljava/lang/String;	i	TAG_AUTHOR
	f	Ljava/lang/String;	j	TAG_PAGES
	f	Ljava/lang/String;	k	TAG_FILTERED_PAGES
	f	Ljava/lang/String;	r	TAG_GENERATION
	f	Ljava/lang/String;	s	TAG_RESOLVED
c	chr	net/minecraft/world/item/alchemy/Potion
	m	(Ljava/lang/String;[Lbey;)V	<init>	<init>
		p	1		baseName
		p	2		effects
	m	([Lbey;)V	<init>	<init>
		p	1		effects
	m	()Ljava/util/List;	a	getEffects
	m	(Ljava/lang/String;)Lchr;	a	byName
		p	0		id
	m	()Z	b	hasInstantEffects
	m	(Ljava/lang/String;)Ljava/lang/String;	b	getName
		p	1		prefix
	f	Ljava/lang/String;	a	name
	f	Lcom/google/common/collect/ImmutableList;	b	effects
c	chs	net/minecraft/world/item/alchemy/PotionBrewing
	m	()V	a	bootStrap
	m	(Lcfq;)V	a	addContainer
		p	0		item
	m	(Lcfq;Lcfq;Lcfq;)V	a	addContainerRecipe
		p	0		input
		p	1		ingredient
		p	2		output
	m	(Lcfv;)Z	a	isIngredient
		p	0		stack
	m	(Lcfv;Lcfv;)Z	a	hasMix
		p	0		input
		p	1		ingredient
	m	(Lchr;)Z	a	isBrewablePotion
		p	0		potion
	m	(Lchr;Lcfq;Lchr;)V	a	addMix
		p	0		input
		p	1		item
		p	2		output
	m	(Lcfv;)Z	b	isContainerIngredient
		p	0		stack
	m	(Lcfv;Lcfv;)Z	b	hasContainerMix
		p	0		input
		p	1		ingredient
	m	(Lcfv;)Z	c	isPotionIngredient
		p	0		stack
	m	(Lcfv;Lcfv;)Z	c	hasPotionMix
		p	0		input
		p	1		ingredient
	m	(Lcfv;)Z	d	lambda$static$0
		p	0		stack
	m	(Lcfv;Lcfv;)Lcfv;	d	mix
		p	0		ingredient
		p	1		input
	f	I	a	BREWING_TIME_SECONDS
	f	Ljava/util/List;	b	POTION_MIXES
	f	Ljava/util/List;	c	CONTAINER_MIXES
	f	Ljava/util/List;	d	ALLOWED_CONTAINERS
	f	Ljava/util/function/Predicate;	e	ALLOWED_CONTAINER
c	chs$a	net/minecraft/world/item/alchemy/PotionBrewing$Mix
	m	(Ljava/lang/Object;Lciu;Ljava/lang/Object;)V	<init>	<init>
		p	1		input
		p	2		ingredient
		p	3		output
	f	Ljava/lang/Object;	a	from
	f	Lciu;	b	ingredient
	f	Ljava/lang/Object;	c	to
c	cht	net/minecraft/world/item/alchemy/PotionUtils
	m	(Lcfv;)Ljava/util/List;	a	getMobEffects
		p	0		stack
	m	(Lcfv;Lchr;)Lcfv;	a	setPotion
		p	0		stack
		p	1		potion
	m	(Lcfv;Ljava/util/Collection;)Lcfv;	a	setCustomEffects
		p	0		stack
		p	1		effects
	m	(Lcfv;Ljava/util/List;F)V	a	addPotionTooltip
		p	0		stack
		p	1		list
		p	2		durationMultiplier
	m	(Lchr;)I	a	getColor
		p	0		potion
	m	(Lchr;Ljava/util/Collection;)Ljava/util/List;	a	getAllEffects
		p	0		potion
		p	1		custom
	m	(Ljava/util/Collection;)I	a	getColor
		p	0		effects
	m	(Ljava/util/List;Ljava/util/List;F)V	a	addPotionTooltip
		p	0		statusEffects
		p	1		list
		p	2		durationMultiplier
	m	(Lre;)Ljava/util/List;	a	getAllEffects
		p	0		nbt
	m	(Lre;Ljava/util/List;)V	a	getCustomEffects
		p	0		nbt
		p	1		list
	m	(Lcfv;)Ljava/util/List;	b	getCustomEffects
		p	0		stack
	m	(Lre;)Ljava/util/List;	b	getCustomEffects
		p	0		nbt
	m	(Lcfv;)I	c	getColor
		p	0		stack
	m	(Lre;)Lchr;	c	getPotion
		p	0		compound
	m	(Lcfv;)Lchr;	d	getPotion
		p	0		stack
	f	Ljava/lang/String;	a	TAG_CUSTOM_POTION_EFFECTS
	f	Ljava/lang/String;	b	TAG_CUSTOM_POTION_COLOR
	f	Ljava/lang/String;	c	TAG_POTION
	f	I	d	EMPTY_COLOR
	f	Ltj;	e	NO_EFFECT
c	chu	net/minecraft/world/item/alchemy/Potions
	m	(Ladc;Lchr;)Lchr;	a	register
		p	0		key
		p	1		potion
	m	(Ljava/lang/String;Lchr;)Lchr;	a	register
		p	0		name
		p	1		potion
	f	Lchr;	A	HEALING
	f	Lchr;	B	STRONG_HEALING
	f	Lchr;	C	HARMING
	f	Lchr;	D	STRONG_HARMING
	f	Lchr;	E	POISON
	f	Lchr;	F	LONG_POISON
	f	Lchr;	G	STRONG_POISON
	f	Lchr;	H	REGENERATION
	f	Lchr;	I	LONG_REGENERATION
	f	Lchr;	J	STRONG_REGENERATION
	f	Lchr;	K	STRENGTH
	f	Lchr;	L	LONG_STRENGTH
	f	Lchr;	M	STRONG_STRENGTH
	f	Lchr;	N	WEAKNESS
	f	Lchr;	O	LONG_WEAKNESS
	f	Lchr;	P	LUCK
	f	Lchr;	Q	SLOW_FALLING
	f	Lchr;	R	LONG_SLOW_FALLING
	f	Ladc;	a	EMPTY_ID
	f	Lchr;	b	EMPTY
	f	Lchr;	c	WATER
	f	Lchr;	d	MUNDANE
	f	Lchr;	e	THICK
	f	Lchr;	f	AWKWARD
	f	Lchr;	g	NIGHT_VISION
	f	Lchr;	h	LONG_NIGHT_VISION
	f	Lchr;	i	INVISIBILITY
	f	Lchr;	j	LONG_INVISIBILITY
	f	Lchr;	k	LEAPING
	f	Lchr;	l	LONG_LEAPING
	f	Lchr;	m	STRONG_LEAPING
	f	Lchr;	n	FIRE_RESISTANCE
	f	Lchr;	o	LONG_FIRE_RESISTANCE
	f	Lchr;	p	SWIFTNESS
	f	Lchr;	q	LONG_SWIFTNESS
	f	Lchr;	r	STRONG_SWIFTNESS
	f	Lchr;	s	SLOWNESS
	f	Lchr;	t	LONG_SLOWNESS
	f	Lchr;	u	STRONG_SLOWNESS
	f	Lchr;	v	TURTLE_MASTER
	f	Lchr;	w	LONG_TURTLE_MASTER
	f	Lchr;	x	STRONG_TURTLE_MASTER
	f	Lchr;	y	WATER_BREATHING
	f	Lchr;	z	LONG_WATER_BREATHING
c	chv	net/minecraft/world/item/alchemy/package-info
c	chw	net/minecraft/world/item/armortrim/ArmorTrim
	m	(Lhd;Lhd;)V	<init>	<init>
		p	1		material
		p	2		pattern
	m	()Lhd;	a	pattern
	m	(Lcdi;)Ladd;	a	innerTexture
		p	1		armorMaterial
	m	(Lcfv;Lhr;Ljava/util/List;)V	a	appendUpgradeHoverText
		p	0		stack
		p	1		registryManager
		p	2		tooltip
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lhd;Lcdi;)Ladd;	a	lambda$new$4
		p	2		armorMaterial
	m	(Lhd;Lhd;)Z	a	hasPatternAndMaterial
		p	1		pattern
		p	2		material
	m	(Lhr;Lcfv;)Ljava/util/Optional;	a	getTrim
		p	0		registryManager
		p	1		stack
	m	(Lhr;Lcfv;Lchw;)Z	a	setTrim
		p	0		registryManager
		p	1		stack
		p	2		trim
	m	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	a	lambda$new$3
		p	1		path
	m	()Lhd;	b	material
	m	(Lcdi;)Ladd;	b	outerTexture
		p	1		armorMaterial
	m	(Lhd;Lcdi;)Ladd;	b	lambda$new$2
		p	2		armorMaterial
	m	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	b	lambda$new$1
		p	1		path
	m	(Lcdi;)Ljava/lang/String;	c	getColorPaletteSuffix
		p	1		armorMaterial
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/lang/String;	b	TAG_TRIM_ID
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	Ltj;	d	UPGRADE_TITLE
	f	Lhd;	e	material
	f	Lhd;	f	pattern
	f	Ljava/util/function/Function;	g	innerTexture
	f	Ljava/util/function/Function;	h	outerTexture
c	chx	net/minecraft/world/item/armortrim/TrimMaterial
	m	()Ljava/lang/String;	a	assetName
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ljava/lang/String;Lcfq;FLtj;Ljava/util/Map;)Lchx;	a	create
		p	0		assetName
		p	1		ingredient
		p	2		itemModelIndex
		p	3		description
		p	4		overrideArmorMaterials
	m	()Lhd;	b	ingredient
	m	()F	c	itemModelIndex
	m	()Ljava/util/Map;	d	overrideArmorMaterials
	m	()Ltj;	e	description
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Ljava/lang/String;	c	assetName
	f	Lhd;	d	ingredient
	f	F	e	itemModelIndex
	f	Ljava/util/Map;	f	overrideArmorMaterials
	f	Ltj;	g	description
c	chy	net/minecraft/world/item/armortrim/TrimMaterials
	m	(Lcfv;Lhd$c;)Z	a	lambda$getFromIngredient$0
		p	1		recipe
	m	(Lhr;Lcfv;)Ljava/util/Optional;	a	getFromIngredient
		p	0		registryManager
		p	1		stack
	m	(Ljava/lang/String;)Ladc;	a	registryKey
		p	0		id
	m	(Loa;)V	a	bootstrap
		p	0		registry
	m	(Loa;Ladc;Lcfq;Luf;F)V	a	register
		p	0		registry
		p	1		key
		p	2		ingredient
		p	3		style
		p	4		itemModelIndex
	m	(Loa;Ladc;Lcfq;Luf;FLjava/util/Map;)V	a	register
		p	0		registry
		p	1		key
		p	2		ingredient
		p	3		style
		p	4		itemModelIndex
		p	5		overrideArmorMaterials
	m	(Loa;)V	b	nextUpdate
		p	0		registry
	f	Ladc;	a	QUARTZ
	f	Ladc;	b	IRON
	f	Ladc;	c	NETHERITE
	f	Ladc;	d	REDSTONE
	f	Ladc;	e	COPPER
	f	Ladc;	f	GOLD
	f	Ladc;	g	EMERALD
	f	Ladc;	h	DIAMOND
	f	Ladc;	i	LAPIS
	f	Ladc;	j	AMETHYST
c	chz	net/minecraft/world/item/armortrim/TrimPattern
	m	()Ladd;	a	assetId
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lhd;)Ltj;	a	copyWithStyle
		p	1		material
	m	()Lhd;	b	templateItem
	m	()Ltj;	c	description
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Ladd;	c	assetId
	f	Lhd;	d	templateItem
	f	Ltj;	e	description
c	cia	net/minecraft/world/item/armortrim/TrimPatterns
	m	(Lcfv;Lhd$c;)Z	a	lambda$getFromTemplate$0
		p	1		pattern
	m	(Lhr;Lcfv;)Ljava/util/Optional;	a	getFromTemplate
		p	0		registryManager
		p	1		stack
	m	(Ljava/lang/String;)Ladc;	a	registryKey
		p	0		id
	m	(Loa;)V	a	bootstrap
		p	0		registry
	m	(Loa;Lcfq;Ladc;)V	a	register
		p	0		registry
		p	1		template
		p	2		key
	m	(Loa;)V	b	nextUpdate
		p	0		registry
	f	Ladc;	a	SENTRY
	f	Ladc;	b	DUNE
	f	Ladc;	c	COAST
	f	Ladc;	d	WILD
	f	Ladc;	e	WARD
	f	Ladc;	f	EYE
	f	Ladc;	g	VEX
	f	Ladc;	h	TIDE
	f	Ladc;	i	SNOUT
	f	Ladc;	j	RIB
	f	Ladc;	k	SPIRE
c	cib	net/minecraft/world/item/armortrim/package-info
c	cic	net/minecraft/world/item/context/BlockPlaceContext
	m	(Lbym;Lbdx;Lcfv;Leda;)V	<init>	<init>
		p	1		player
		p	2		hand
		p	3		stack
		p	4		hitResult
	m	(Lcie;)V	<init>	<init>
		p	1		context
	m	(Lcmi;Lbym;Lbdx;Lcfv;Leda;)V	<init>	<init>
		p	1		world
		p	2		player
		p	3		hand
		p	4		stack
		p	5		hit
	m	()Lgt;	a	getClickedPos
	m	(Lcic;Lgt;Lgz;)Lcic;	a	at
		p	0		context
		p	1		pos
		p	2		side
	m	()Z	b	canPlace
	m	()Z	c	replacingClickedOnBlock
	m	()Lgz;	d	getNearestLookingDirection
	m	()Lgz;	e	getNearestLookingVerticalDirection
	m	()[Lgz;	f	getNearestLookingDirections
	f	Z	a	replaceClicked
	f	Lgt;	b	relativePos
c	cid	net/minecraft/world/item/context/DirectionalPlaceContext
	m	(Lcmi;Lgt;Lgz;Lcfv;Lgz;)V	<init>	<init>
		p	1		world
		p	2		pos
		p	3		facing
		p	4		stack
		p	5		side
	m	()Lgt;	a	getClickedPos
	m	()Z	b	canPlace
	m	()Z	c	replacingClickedOnBlock
	m	()Lgz;	d	getNearestLookingDirection
	m	()[Lgz;	f	getNearestLookingDirections
	m	()Lgz;	g	getHorizontalDirection
	m	()Z	h	isSecondaryUseActive
	m	()F	i	getRotation
	f	Lgz;	b	direction
c	cid$1	net/minecraft/world/item/context/DirectionalPlaceContext$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	cie	net/minecraft/world/item/context/UseOnContext
	m	(Lbym;Lbdx;Leda;)V	<init>	<init>
		p	1		player
		p	2		hand
		p	3		hit
	m	(Lcmi;Lbym;Lbdx;Lcfv;Leda;)V	<init>	<init>
		p	1		world
		p	2		player
		p	3		hand
		p	4		stack
		p	5		hit
	m	()Lgt;	a	getClickedPos
	m	()Lgz;	g	getHorizontalDirection
	m	()Z	h	isSecondaryUseActive
	m	()F	i	getRotation
	m	()Leda;	j	getHitResult
	m	()Lgz;	k	getClickedFace
	m	()Lede;	l	getClickLocation
	m	()Z	m	isInside
	m	()Lcfv;	n	getItemInHand
	m	()Lbym;	o	getPlayer
	m	()Lbdx;	p	getHand
	m	()Lcmi;	q	getLevel
	f	Lbym;	a	player
	f	Lbdx;	b	hand
	f	Leda;	c	hitResult
	f	Lcmi;	d	level
	f	Lcfv;	e	itemStack
c	cif	net/minecraft/world/item/context/package-info
c	cig	net/minecraft/world/item/crafting/AbstractCookingRecipe
	m	(Lcjb;Ladd;Ljava/lang/String;Lcim;Lciu;Lcfv;FI)V	<init>	<init>
		p	1		type
		p	2		id
		p	3		group
		p	4		category
		p	5		input
		p	6		output
		p	7		experience
		p	8		cookTime
	m	()Lhm;	a	getIngredients
	m	(II)Z	a	canCraftInDimensions
		p	1		width
		p	2		height
	m	(Lbdr;Lcmi;)Z	a	matches
		p	1		inventory
		p	2		world
	m	(Lbdr;Lhr;)Lcfv;	a	assemble
		p	1		inventory
		p	2		registryManager
	m	(Lhr;)Lcfv;	a	getResultItem
		p	1		registryManager
	m	()F	b	getExperience
	m	()Ljava/lang/String;	c	getGroup
	m	()I	d	getCookingTime
	m	()Ladd;	e	getId
	m	()Lcjb;	f	getType
	m	()Lcim;	g	category
	f	Lcjb;	a	type
	f	Ladd;	b	id
	f	Ljava/lang/String;	c	group
	f	Lciu;	d	ingredient
	f	Lcfv;	e	result
	f	F	f	experience
	f	I	g	cookingTime
	f	Lcim;	h	category
c	cih	net/minecraft/world/item/crafting/ArmorDyeRecipe
	m	(Ladd;Lcin;)V	<init>	<init>
		p	1		id
		p	2		category
	m	(II)Z	a	canCraftInDimensions
		p	1		width
		p	2		height
	m	(Lbdr;Lcmi;)Z	a	matches
		p	1		inventory
		p	2		world
	m	(Lbdr;Lhr;)Lcfv;	a	assemble
		p	1		inventory
		p	2		registryManager
	m	(Lcbr;Lcmi;)Z	a	matches
		p	1		inventory
		p	2		world
	m	(Lcbr;Lhr;)Lcfv;	a	assemble
		p	1		inventory
		p	2		registryManager
	m	()Lcja;	ai_	getSerializer
c	cii	net/minecraft/world/item/crafting/BannerDuplicateRecipe
	m	(Ladd;Lcin;)V	<init>	<init>
		p	1		id
		p	2		category
	m	(II)Z	a	canCraftInDimensions
		p	1		width
		p	2		height
	m	(Lbdr;)Lhm;	a	getRemainingItems
		p	1		inventory
	m	(Lbdr;Lcmi;)Z	a	matches
		p	1		inventory
		p	2		world
	m	(Lbdr;Lhr;)Lcfv;	a	assemble
		p	1		inventory
		p	2		registryManager
	m	(Lcbr;)Lhm;	a	getRemainingItems
		p	1		inventory
	m	(Lcbr;Lcmi;)Z	a	matches
		p	1		inventory
		p	2		world
	m	(Lcbr;Lhr;)Lcfv;	a	assemble
		p	1		inventory
		p	2		registryManager
	m	()Lcja;	ai_	getSerializer
c	cij	net/minecraft/world/item/crafting/BlastingRecipe
	m	(Ladd;Ljava/lang/String;Lcim;Lciu;Lcfv;FI)V	<init>	<init>
		p	1		id
		p	2		group
		p	3		category
		p	4		input
		p	5		output
		p	6		experience
		p	7		cookTime
	m	()Lcja;	ai_	getSerializer
	m	()Lcfv;	h	getToastSymbol
c	cik	net/minecraft/world/item/crafting/BookCloningRecipe
	m	(Ladd;Lcin;)V	<init>	<init>
		p	1		id
		p	2		category
	m	(II)Z	a	canCraftInDimensions
		p	1		width
		p	2		height
	m	(Lbdr;)Lhm;	a	getRemainingItems
		p	1		inventory
	m	(Lbdr;Lcmi;)Z	a	matches
		p	1		inventory
		p	2		world
	m	(Lbdr;Lhr;)Lcfv;	a	assemble
		p	1		inventory
		p	2		registryManager
	m	(Lcbr;)Lhm;	a	getRemainingItems
		p	1		inventory
	m	(Lcbr;Lcmi;)Z	a	matches
		p	1		inventory
		p	2		world
	m	(Lcbr;Lhr;)Lcfv;	a	assemble
		p	1		inventory
		p	2		registryManager
	m	()Lcja;	ai_	getSerializer
c	cil	net/minecraft/world/item/crafting/CampfireCookingRecipe
	m	(Ladd;Ljava/lang/String;Lcim;Lciu;Lcfv;FI)V	<init>	<init>
		p	1		id
		p	2		group
		p	3		category
		p	4		input
		p	5		output
		p	6		experience
		p	7		cookTime
	m	()Lcja;	ai_	getSerializer
	m	()Lcfv;	h	getToastSymbol
c	cim	net/minecraft/world/item/crafting/CookingBookCategory
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		id
	m	()[Lcim;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lcim;	a	FOOD
	f	Lcim;	b	BLOCKS
	f	Lcim;	c	MISC
	f	Laqa$a;	d	CODEC
	f	Ljava/lang/String;	e	name
	f	[Lcim;	f	$VALUES
c	cin	net/minecraft/world/item/crafting/CraftingBookCategory
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		id
	m	()[Lcin;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lcin;	a	BUILDING
	f	Lcin;	b	REDSTONE
	f	Lcin;	c	EQUIPMENT
	f	Lcin;	d	MISC
	f	Laqa$a;	e	CODEC
	f	Ljava/lang/String;	f	name
	f	[Lcin;	g	$VALUES
c	cio	net/minecraft/world/item/crafting/CraftingRecipe
	m	()Lcin;	d	category
	m	()Lcjb;	f	getType
c	cip	net/minecraft/world/item/crafting/CustomRecipe
	m	(Ladd;Lcin;)V	<init>	<init>
		p	1		id
		p	2		category
	m	(Lhr;)Lcfv;	a	getResultItem
		p	1		registryManager
	m	()Z	ah_	isSpecial
	m	()Lcin;	d	category
	m	()Ladd;	e	getId
	f	Ladd;	a	id
	f	Lcin;	b	category
c	ciq	net/minecraft/world/item/crafting/DecoratedPotRecipe
	m	(Ladd;Lcin;)V	<init>	<init>
		p	1		id
		p	2		category
	m	(II)Z	a	canCraftInDimensions
		p	1		width
		p	2		height
	m	(Lbdr;Lcmi;)Z	a	matches
		p	1		inventory
		p	2		world
	m	(Lbdr;Lhr;)Lcfv;	a	assemble
		p	1		inventory
		p	2		registryManager
	m	(Lcbr;Lcmi;)Z	a	matches
		p	1		inventory
		p	2		world
	m	(Lcbr;Lhr;)Lcfv;	a	assemble
		p	1		inventory
		p	2		registryManager
	m	()Lcja;	ai_	getSerializer
c	cir	net/minecraft/world/item/crafting/FireworkRocketRecipe
	m	(Ladd;Lcin;)V	<init>	<init>
		p	1		id
		p	2		category
	m	(II)Z	a	canCraftInDimensions
		p	1		width
		p	2		height
	m	(Lbdr;Lcmi;)Z	a	matches
		p	1		inventory
		p	2		world
	m	(Lbdr;Lhr;)Lcfv;	a	assemble
		p	1		inventory
		p	2		registryManager
	m	(Lcbr;Lcmi;)Z	a	matches
		p	1		inventory
		p	2		world
	m	(Lcbr;Lhr;)Lcfv;	a	assemble
		p	1		inventory
		p	2		registryManager
	m	(Lhr;)Lcfv;	a	getResultItem
		p	1		registryManager
	m	()Lcja;	ai_	getSerializer
	f	Lciu;	a	PAPER_INGREDIENT
	f	Lciu;	b	GUNPOWDER_INGREDIENT
	f	Lciu;	c	STAR_INGREDIENT
c	cis	net/minecraft/world/item/crafting/FireworkStarFadeRecipe
	m	(Ladd;Lcin;)V	<init>	<init>
		p	1		id
		p	2		category
	m	(II)Z	a	canCraftInDimensions
		p	1		width
		p	2		height
	m	(Lbdr;Lcmi;)Z	a	matches
		p	1		inventory
		p	2		world
	m	(Lbdr;Lhr;)Lcfv;	a	assemble
		p	1		inventory
		p	2		registryManager
	m	(Lcbr;Lcmi;)Z	a	matches
		p	1		inventory
		p	2		world
	m	(Lcbr;Lhr;)Lcfv;	a	assemble
		p	1		inventory
		p	2		registryManager
	m	()Lcja;	ai_	getSerializer
	f	Lciu;	a	STAR_INGREDIENT
c	cit	net/minecraft/world/item/crafting/FireworkStarRecipe
	m	(Ladd;Lcin;)V	<init>	<init>
		p	1		id
		p	2		category
	m	(II)Z	a	canCraftInDimensions
		p	1		width
		p	2		height
	m	(Lbdr;Lcmi;)Z	a	matches
		p	1		inventory
		p	2		world
	m	(Lbdr;Lhr;)Lcfv;	a	assemble
		p	1		inventory
		p	2		registryManager
	m	(Lcbr;Lcmi;)Z	a	matches
		p	1		inventory
		p	2		world
	m	(Lcbr;Lhr;)Lcfv;	a	assemble
		p	1		inventory
		p	2		registryManager
	m	(Lhr;)Lcfv;	a	getResultItem
		p	1		registryManager
	m	(Ljava/util/HashMap;)V	a	lambda$static$0
		p	0		typeModifiers
	m	()Lcja;	ai_	getSerializer
	f	Lciu;	a	SHAPE_INGREDIENT
	f	Lciu;	b	TRAIL_INGREDIENT
	f	Lciu;	c	FLICKER_INGREDIENT
	f	Ljava/util/Map;	d	SHAPE_BY_ITEM
	f	Lciu;	e	GUNPOWDER_INGREDIENT
c	ciu	net/minecraft/world/item/crafting/Ingredient
	m	(Ljava/util/stream/Stream;)V	<init>	<init>
		p	1		entries
	m	()[Lcfv;	a	getItems
	m	(I)[Lcfv;	a	lambda$getItems$2
	m	(Lanv;)Lciu;	a	of
		p	0		tag
	m	(Lcfv;)Z	a	test
	m	(Lciu$c;)Ljava/util/stream/Stream;	a	lambda$getItems$1
		p	0		entry
	m	(Lcom/google/gson/JsonElement;)Lciu;	a	fromJson
		p	0		json
	m	(Lcom/google/gson/JsonObject;)Lciu$c;	a	valueFromJson
		p	0		json
	m	(Ljava/util/stream/Stream;)Lciu;	a	of
		p	0		stacks
	m	(Lss;)V	a	toNetwork
		p	1		buf
	m	([Lcfv;)Lciu;	a	of
		p	0		stacks
	m	([Lcmh;)Lciu;	a	of
		p	0		items
	m	()Lit/unimi/dsi/fastutil/ints/IntList;	b	getStackingIds
	m	(I)[Lciu$c;	b	lambda$new$0
	m	(Lcfv;)Z	b	lambda$of$3
		p	0		stack
	m	(Lcom/google/gson/JsonElement;)Lciu$c;	b	lambda$fromJson$4
		p	0		jsonElement
	m	(Ljava/util/stream/Stream;)Lciu;	b	fromValues
		p	0		entries
	m	(Lss;)Lciu;	b	fromNetwork
		p	0		buf
	m	()Lcom/google/gson/JsonElement;	c	toJson
	m	()Z	d	isEmpty
	m	()Lciu;	e	of
	f	Lciu;	a	EMPTY
	f	[Lciu$c;	b	values
	f	[Lcfv;	c	itemStacks
	f	Lit/unimi/dsi/fastutil/ints/IntList;	d	stackingIds
c	ciu$a	net/minecraft/world/item/crafting/Ingredient$ItemValue
	m	(Lcfv;)V	<init>	<init>
		p	1		stack
	m	()Ljava/util/Collection;	a	getItems
	m	()Lcom/google/gson/JsonObject;	b	serialize
	f	Lcfv;	a	item
c	ciu$b	net/minecraft/world/item/crafting/Ingredient$TagValue
	m	(Lanv;)V	<init>	<init>
		p	1		tag
	m	()Ljava/util/Collection;	a	getItems
	m	()Lcom/google/gson/JsonObject;	b	serialize
	f	Lanv;	a	tag
c	ciu$c	net/minecraft/world/item/crafting/Ingredient$Value
	m	()Ljava/util/Collection;	a	getItems
	m	()Lcom/google/gson/JsonObject;	b	serialize
c	civ	net/minecraft/world/item/crafting/LegacyUpgradeRecipe
	m	(Ladd;Lciu;Lciu;Lcfv;)V	<init>	<init>
		p	1		id
		p	2		base
		p	3		addition
		p	4		result
	m	(II)Z	a	canCraftInDimensions
		p	1		width
		p	2		height
	m	(Lbdr;Lcmi;)Z	a	matches
		p	1		inventory
		p	2		world
	m	(Lbdr;Lhr;)Lcfv;	a	assemble
		p	1		inventory
		p	2		registryManager
	m	(Lcfv;)Z	a	isTemplateIngredient
		p	1		stack
	m	(Lciu;)Z	a	lambda$isIncomplete$0
		p	0		ingredient
	m	(Lhr;)Lcfv;	a	getResultItem
		p	1		registryManager
	m	()Lcja;	ai_	getSerializer
	m	()Z	aj_	isIncomplete
	m	(Lcfv;)Z	b	isBaseIngredient
		p	1		stack
	m	(Lcfv;)Z	c	isAdditionIngredient
		p	1		stack
	m	()Ladd;	e	getId
	f	Lciu;	a	base
	f	Lciu;	b	addition
	f	Lcfv;	c	result
	f	Ladd;	d	id
c	civ$a	net/minecraft/world/item/crafting/LegacyUpgradeRecipe$Serializer
	m	(Ladd;Lcom/google/gson/JsonObject;)Lciv;	a	fromJson
	m	(Ladd;Lss;)Lciv;	a	fromNetwork
	m	(Lss;Lciv;)V	a	toNetwork
		p	1		buf
		p	2		recipe
	m	(Lss;Lciy;)V	a	toNetwork
		p	1		buf
		p	2		recipe
	m	(Ladd;Lcom/google/gson/JsonObject;)Lciy;	b	fromJson
		p	1		id
		p	2		json
	m	(Ladd;Lss;)Lciy;	b	fromNetwork
		p	1		id
		p	2		buf
c	ciw	net/minecraft/world/item/crafting/MapCloningRecipe
	m	(Ladd;Lcin;)V	<init>	<init>
		p	1		id
		p	2		category
	m	(II)Z	a	canCraftInDimensions
		p	1		width
		p	2		height
	m	(Lbdr;Lcmi;)Z	a	matches
		p	1		inventory
		p	2		world
	m	(Lbdr;Lhr;)Lcfv;	a	assemble
		p	1		inventory
		p	2		registryManager
	m	(Lcbr;Lcmi;)Z	a	matches
		p	1		inventory
		p	2		world
	m	(Lcbr;Lhr;)Lcfv;	a	assemble
		p	1		inventory
		p	2		registryManager
	m	()Lcja;	ai_	getSerializer
c	cix	net/minecraft/world/item/crafting/MapExtendingRecipe
	m	(Ladd;Lcin;)V	<init>	<init>
		p	1		id
		p	2		category
	m	(Lbdr;Lcmi;)Z	a	matches
		p	1		inventory
		p	2		world
	m	(Lbdr;Lhr;)Lcfv;	a	assemble
		p	1		inventory
		p	2		registryManager
	m	(Lcbr;Lcmi;)Z	a	matches
		p	1		inventory
		p	2		world
	m	(Lcbr;Lhr;)Lcfv;	a	assemble
		p	1		inventory
		p	2		registryManager
	m	()Z	ah_	isSpecial
	m	()Lcja;	ai_	getSerializer
c	ciy	net/minecraft/world/item/crafting/Recipe
	m	()Lhm;	a	getIngredients
	m	(II)Z	a	canCraftInDimensions
		p	1		width
		p	2		height
	m	(Lbdr;)Lhm;	a	getRemainingItems
		p	1		inventory
	m	(Lbdr;Lcmi;)Z	a	matches
		p	1		inventory
		p	2		world
	m	(Lbdr;Lhr;)Lcfv;	a	assemble
		p	1		inventory
		p	2		registryManager
	m	(Lciu;)Z	a	lambda$isIncomplete$0
		p	0		ingredient
	m	(Lhr;)Lcfv;	a	getResultItem
		p	1		registryManager
	m	()Z	ah_	isSpecial
	m	()Lcja;	ai_	getSerializer
	m	()Z	aj_	isIncomplete
	m	()Ljava/lang/String;	c	getGroup
	m	()Ladd;	e	getId
	m	()Lcjb;	f	getType
	m	()Lcfv;	h	getToastSymbol
	m	()Z	i	showNotification
c	ciz	net/minecraft/world/item/crafting/RecipeManager
	m	()Z	a	hadErrorsLoading
	m	(Ladd;)Ljava/util/Optional;	a	byKey
		p	1		id
	m	(Ladd;Lcom/google/gson/JsonObject;)Lciy;	a	fromJson
		p	0		id
		p	1		json
	m	(Lbdr;Lcmi;Lciy;)Z	a	lambda$getRecipesFor$5
		p	2		recipe
	m	(Lbdr;Lcmi;Ljava/util/Map$Entry;)Z	a	lambda$getRecipeFor$3
		p	2		entry
	m	(Lcjb;)Ljava/util/List;	a	getAllRecipesFor
		p	1		type
	m	(Lcjb;Lbdr;Lcmi;)Ljava/util/Optional;	a	getRecipeFor
		p	1		type
		p	2		inventory
		p	3		world
	m	(Lcjb;Lbdr;Lcmi;Ladd;)Ljava/util/Optional;	a	getRecipeFor
		p	1		type
		p	2		inventory
		p	3		world
		p	4		id
	m	(Lcmi;Lciy;)Ljava/lang/String;	a	lambda$getRecipesFor$6
		p	1		recipe
	m	(Ljava/lang/Iterable;)V	a	replaceRecipes
		p	1		recipes
	m	(Ljava/lang/Object;Lalh;Lbao;)V	a	apply
		p	1		prepared
		p	2		manager
		p	3		profiler
	m	(Ljava/lang/String;)Lcom/google/gson/JsonSyntaxException;	a	lambda$fromJson$9
	m	(Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair;	a	lambda$getRecipeFor$4
		p	0		entry
	m	(Ljava/util/Map;)Ljava/util/stream/Stream;	a	lambda$getRecipeIds$8
		p	0		map
	m	(Ljava/util/Map;Lalh;Lbao;)V	a	apply
		p	1		prepared
		p	2		manager
		p	3		profiler
	m	(Ljava/util/Map;Lcom/google/common/collect/ImmutableMap$Builder;Lciy;)V	a	lambda$replaceRecipes$11
		p	2		recipe
	m	()Ljava/util/Collection;	b	getRecipes
	m	(Lbdr;Lcmi;Lciy;)Z	b	lambda$getRecipeFor$2
		p	2		recipe
	m	(Lcjb;)Lciz$a;	b	createCheck
		p	0		type
	m	(Lcjb;Lbdr;Lcmi;)Ljava/util/List;	b	getRecipesFor
		p	1		type
		p	2		inventory
		p	3		world
	m	(Ljava/util/Map$Entry;)Ljava/util/Map;	b	lambda$apply$1
		p	0		entry
	m	(Ljava/util/Map;)Ljava/util/stream/Stream;	b	lambda$getRecipes$7
		p	0		map
	m	(Lcjb;)Ljava/util/Map;	c	byType
		p	1		type
	m	(Lcjb;Lbdr;Lcmi;)Lhm;	c	getRemainingItemsFor
		p	1		type
		p	2		inventory
		p	3		world
	m	()Ljava/util/stream/Stream;	d	getRecipeIds
	m	(Lcjb;)Ljava/util/Map;	d	lambda$replaceRecipes$10
		p	0		t
	m	(Lcjb;)Lcom/google/common/collect/ImmutableMap$Builder;	e	lambda$apply$0
		p	0		recipeType
	f	Lcom/google/gson/Gson;	a	GSON
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ljava/util/Map;	c	recipes
	f	Ljava/util/Map;	d	byName
	f	Z	e	hasErrors
c	ciz$1	net/minecraft/world/item/crafting/RecipeManager$1
	m	(Lbdr;Lcmi;)Ljava/util/Optional;	a	getRecipeFor
		p	1		inventory
		p	2		world
	f	Lcjb;	a	val$type
	f	Ladd;	b	lastRecipe
c	ciz$a	net/minecraft/world/item/crafting/RecipeManager$CachedCheck
	m	(Lbdr;Lcmi;)Ljava/util/Optional;	a	getRecipeFor
		p	1		inventory
		p	2		world
c	cja	net/minecraft/world/item/crafting/RecipeSerializer
	m	(Ljava/lang/String;Lcja;)Lcja;	a	register
		p	0		id
		p	1		serializer
	m	(Lss;Lciy;)V	a	toNetwork
		p	1		buf
		p	2		recipe
	m	(Ladd;Lcom/google/gson/JsonObject;)Lciy;	b	fromJson
		p	1		id
		p	2		json
	m	(Ladd;Lss;)Lciy;	b	fromNetwork
		p	1		id
		p	2		buf
	f	Lcja;	a	SHAPED_RECIPE
	f	Lcja;	b	SHAPELESS_RECIPE
	f	Lcja;	c	ARMOR_DYE
	f	Lcja;	d	BOOK_CLONING
	f	Lcja;	e	MAP_CLONING
	f	Lcja;	f	MAP_EXTENDING
	f	Lcja;	g	FIREWORK_ROCKET
	f	Lcja;	h	FIREWORK_STAR
	f	Lcja;	i	FIREWORK_STAR_FADE
	f	Lcja;	j	TIPPED_ARROW
	f	Lcja;	k	BANNER_DUPLICATE
	f	Lcja;	l	SHIELD_DECORATION
	f	Lcja;	m	SHULKER_BOX_COLORING
	f	Lcja;	n	SUSPICIOUS_STEW
	f	Lcja;	o	REPAIR_ITEM
	f	Lcja;	p	SMELTING_RECIPE
	f	Lcja;	q	BLASTING_RECIPE
	f	Lcja;	r	SMOKING_RECIPE
	f	Lcja;	s	CAMPFIRE_COOKING_RECIPE
	f	Lcja;	t	STONECUTTER
	f	Lcja;	u	SMITHING
	f	Lcja;	v	SMITHING_TRANSFORM
	f	Lcja;	w	SMITHING_TRIM
	f	Lcja;	x	DECORATED_POT_RECIPE
c	cjb	net/minecraft/world/item/crafting/RecipeType
	m	(Ljava/lang/String;)Lcjb;	a	register
		p	0		id
	f	Lcjb;	a	CRAFTING
	f	Lcjb;	b	SMELTING
	f	Lcjb;	c	BLASTING
	f	Lcjb;	d	SMOKING
	f	Lcjb;	e	CAMPFIRE_COOKING
	f	Lcjb;	f	STONECUTTING
	f	Lcjb;	g	SMITHING
c	cjb$1	net/minecraft/world/item/crafting/RecipeType$1
	f	Ljava/lang/String;	h	val$name
c	cjc	net/minecraft/world/item/crafting/RepairItemRecipe
	m	(Ladd;Lcin;)V	<init>	<init>
		p	1		id
		p	2		category
	m	(II)Z	a	canCraftInDimensions
		p	1		width
		p	2		height
	m	(Lbdr;Lcmi;)Z	a	matches
		p	1		inventory
		p	2		world
	m	(Lbdr;Lhr;)Lcfv;	a	assemble
		p	1		inventory
		p	2		registryManager
	m	(Lcbr;Lcmi;)Z	a	matches
		p	1		inventory
		p	2		world
	m	(Lcbr;Lhr;)Lcfv;	a	assemble
		p	1		inventory
		p	2		registryManager
	m	(Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Lckc;)V	a	lambda$assemble$0
		p	3		enchantment
	m	()Lcja;	ai_	getSerializer
c	cjd	net/minecraft/world/item/crafting/ShapedRecipe
	m	(Ladd;Ljava/lang/String;Lcin;IILhm;Lcfv;)V	<init>	<init>
		p	1		id
		p	2		group
		p	3		category
		p	4		width
		p	5		height
		p	6		input
		p	7		output
	m	(Ladd;Ljava/lang/String;Lcin;IILhm;Lcfv;Z)V	<init>	<init>
		p	1		id
		p	2		group
		p	3		category
		p	4		width
		p	5		height
		p	6		input
		p	7		output
		p	8		showNotification
	m	()Lhm;	a	getIngredients
	m	(II)Z	a	canCraftInDimensions
		p	1		width
		p	2		height
	m	(Lbdr;Lcmi;)Z	a	matches
		p	1		inventory
		p	2		world
	m	(Lbdr;Lhr;)Lcfv;	a	assemble
		p	1		inventory
		p	2		registryManager
	m	(Lcbr;IIZ)Z	a	matches
		p	1		inv
		p	2		offsetX
		p	3		offsetY
		p	4		flipped
	m	(Lcbr;Lcmi;)Z	a	matches
		p	1		inventory
		p	2		world
	m	(Lcbr;Lhr;)Lcfv;	a	assemble
		p	1		inventory
		p	2		registryManager
	m	(Lciu;)Z	a	lambda$isIncomplete$1
		p	0		ingredient
	m	(Lcom/google/gson/JsonArray;)[Ljava/lang/String;	a	patternFromJson
		p	0		json
	m	(Lcom/google/gson/JsonObject;)Lcfv;	a	itemStackFromJson
		p	0		json
	m	(Lhr;)Lcfv;	a	getResultItem
		p	1		registryManager
	m	(Ljava/lang/String;)I	a	firstNonSpace
		p	0		line
	m	([Ljava/lang/String;)[Ljava/lang/String;	a	shrink
		p	0		pattern
	m	([Ljava/lang/String;Ljava/util/Map;II)Lhm;	a	dissolvePattern
		p	0		pattern
		p	1		symbols
		p	2		width
		p	3		height
	m	()Lcja;	ai_	getSerializer
	m	()Z	aj_	isIncomplete
	m	(Lciu;)Z	b	lambda$isIncomplete$0
		p	0		ingredient
	m	(Lcom/google/gson/JsonObject;)Lcfq;	b	itemFromJson
		p	0		json
	m	(Ljava/lang/String;)I	b	lastNonSpace
		p	0		pattern
	m	()Ljava/lang/String;	c	getGroup
	m	(Lcom/google/gson/JsonObject;)Ljava/util/Map;	c	keyFromJson
		p	0		json
	m	(Ljava/lang/String;)Lcom/google/gson/JsonSyntaxException;	c	lambda$itemFromJson$2
	m	()Lcin;	d	category
	m	()Ladd;	e	getId
	m	()Z	i	showNotification
	m	()I	j	getWidth
	m	()I	k	getHeight
	f	I	a	width
	f	I	b	height
	f	Lhm;	c	recipeItems
	f	Lcfv;	d	result
	f	Ladd;	e	id
	f	Ljava/lang/String;	f	group
	f	Lcin;	g	category
	f	Z	h	showNotification
c	cjd$a	net/minecraft/world/item/crafting/ShapedRecipe$Serializer
	m	(Ladd;Lcom/google/gson/JsonObject;)Lcjd;	a	fromJson
	m	(Ladd;Lss;)Lcjd;	a	fromNetwork
	m	(Lss;Lciy;)V	a	toNetwork
		p	1		buf
		p	2		recipe
	m	(Lss;Lcjd;)V	a	toNetwork
		p	1		buf
		p	2		recipe
	m	(Ladd;Lcom/google/gson/JsonObject;)Lciy;	b	fromJson
		p	1		id
		p	2		json
	m	(Ladd;Lss;)Lciy;	b	fromNetwork
		p	1		id
		p	2		buf
c	cje	net/minecraft/world/item/crafting/ShapelessRecipe
	m	(Ladd;Ljava/lang/String;Lcin;Lcfv;Lhm;)V	<init>	<init>
		p	1		id
		p	2		group
		p	3		category
		p	4		output
		p	5		input
	m	()Lhm;	a	getIngredients
	m	(II)Z	a	canCraftInDimensions
		p	1		width
		p	2		height
	m	(Lbdr;Lcmi;)Z	a	matches
		p	1		inventory
		p	2		world
	m	(Lbdr;Lhr;)Lcfv;	a	assemble
		p	1		inventory
		p	2		registryManager
	m	(Lcbr;Lcmi;)Z	a	matches
		p	1		inventory
		p	2		world
	m	(Lcbr;Lhr;)Lcfv;	a	assemble
		p	1		inventory
		p	2		registryManager
	m	(Lhr;)Lcfv;	a	getResultItem
		p	1		registryManager
	m	()Lcja;	ai_	getSerializer
	m	()Ljava/lang/String;	c	getGroup
	m	()Lcin;	d	category
	m	()Ladd;	e	getId
	f	Ladd;	a	id
	f	Ljava/lang/String;	b	group
	f	Lcin;	c	category
	f	Lcfv;	d	result
	f	Lhm;	e	ingredients
c	cje$a	net/minecraft/world/item/crafting/ShapelessRecipe$Serializer
	m	(Ladd;Lcom/google/gson/JsonObject;)Lcje;	a	fromJson
	m	(Ladd;Lss;)Lcje;	a	fromNetwork
	m	(Lcom/google/gson/JsonArray;)Lhm;	a	itemsFromJson
		p	0		json
	m	(Lss;Lciy;)V	a	toNetwork
		p	1		buf
		p	2		recipe
	m	(Lss;Lcje;)V	a	toNetwork
		p	1		buf
		p	2		recipe
	m	(Ladd;Lcom/google/gson/JsonObject;)Lciy;	b	fromJson
		p	1		id
		p	2		json
	m	(Ladd;Lss;)Lciy;	b	fromNetwork
		p	1		id
		p	2		buf
c	cjf	net/minecraft/world/item/crafting/ShieldDecorationRecipe
	m	(Ladd;Lcin;)V	<init>	<init>
		p	1		id
		p	2		category
	m	(II)Z	a	canCraftInDimensions
		p	1		width
		p	2		height
	m	(Lbdr;Lcmi;)Z	a	matches
		p	1		inventory
		p	2		world
	m	(Lbdr;Lhr;)Lcfv;	a	assemble
		p	1		inventory
		p	2		registryManager
	m	(Lcbr;Lcmi;)Z	a	matches
		p	1		inventory
		p	2		world
	m	(Lcbr;Lhr;)Lcfv;	a	assemble
		p	1		inventory
		p	2		registryManager
	m	()Lcja;	ai_	getSerializer
c	cjg	net/minecraft/world/item/crafting/ShulkerBoxColoring
	m	(Ladd;Lcin;)V	<init>	<init>
		p	1		id
		p	2		category
	m	(II)Z	a	canCraftInDimensions
		p	1		width
		p	2		height
	m	(Lbdr;Lcmi;)Z	a	matches
		p	1		inventory
		p	2		world
	m	(Lbdr;Lhr;)Lcfv;	a	assemble
		p	1		inventory
		p	2		registryManager
	m	(Lcbr;Lcmi;)Z	a	matches
		p	1		inventory
		p	2		world
	m	(Lcbr;Lhr;)Lcfv;	a	assemble
		p	1		inventory
		p	2		registryManager
	m	()Lcja;	ai_	getSerializer
c	cjh	net/minecraft/world/item/crafting/SimpleCookingSerializer
	m	(Lcjh$a;I)V	<init>	<init>
		p	1		recipeFactory
		p	2		cookingTime
	m	(Ladd;Lcom/google/gson/JsonObject;)Lcig;	a	fromJson
	m	(Ladd;Lss;)Lcig;	a	fromNetwork
	m	(Ljava/lang/String;)Ljava/lang/IllegalStateException;	a	lambda$fromJson$0
	m	(Lss;Lcig;)V	a	toNetwork
		p	1		buf
		p	2		recipe
	m	(Lss;Lciy;)V	a	toNetwork
		p	1		buf
		p	2		recipe
	m	(Ladd;Lcom/google/gson/JsonObject;)Lciy;	b	fromJson
		p	1		id
		p	2		json
	m	(Ladd;Lss;)Lciy;	b	fromNetwork
		p	1		id
		p	2		buf
	f	I	y	defaultCookingTime
	f	Lcjh$a;	z	factory
c	cjh$a	net/minecraft/world/item/crafting/SimpleCookingSerializer$CookieBaker
	m	(Ladd;Ljava/lang/String;Lcim;Lciu;Lcfv;FI)Lcig;	create	create
		p	1		id
		p	2		group
		p	3		category
		p	4		input
		p	5		output
		p	6		experience
		p	7		cookTime
c	cji	net/minecraft/world/item/crafting/SimpleCraftingRecipeSerializer
	m	(Lcji$a;)V	<init>	<init>
		p	1		factory
	m	(Ladd;Lcom/google/gson/JsonObject;)Lcio;	a	fromJson
	m	(Ladd;Lss;)Lcio;	a	fromNetwork
	m	(Lss;Lcio;)V	a	toNetwork
		p	1		buf
		p	2		recipe
	m	(Lss;Lciy;)V	a	toNetwork
		p	1		buf
		p	2		recipe
	m	(Ladd;Lcom/google/gson/JsonObject;)Lciy;	b	fromJson
		p	1		id
		p	2		json
	m	(Ladd;Lss;)Lciy;	b	fromNetwork
		p	1		id
		p	2		buf
	f	Lcji$a;	y	constructor
c	cji$a	net/minecraft/world/item/crafting/SimpleCraftingRecipeSerializer$Factory
	m	(Ladd;Lcin;)Lcio;	create	create
		p	1		id
		p	2		category
c	cjj	net/minecraft/world/item/crafting/SingleItemRecipe
	m	(Lcjb;Lcja;Ladd;Ljava/lang/String;Lciu;Lcfv;)V	<init>	<init>
		p	1		type
		p	2		serializer
		p	3		id
		p	4		group
		p	5		input
		p	6		output
	m	()Lhm;	a	getIngredients
	m	(II)Z	a	canCraftInDimensions
		p	1		width
		p	2		height
	m	(Lbdr;Lhr;)Lcfv;	a	assemble
		p	1		inventory
		p	2		registryManager
	m	(Lhr;)Lcfv;	a	getResultItem
		p	1		registryManager
	m	()Lcja;	ai_	getSerializer
	m	()Ljava/lang/String;	c	getGroup
	m	()Ladd;	e	getId
	m	()Lcjb;	f	getType
	f	Lciu;	a	ingredient
	f	Lcfv;	b	result
	f	Ladd;	c	id
	f	Ljava/lang/String;	d	group
	f	Lcjb;	e	type
	f	Lcja;	f	serializer
c	cjj$a	net/minecraft/world/item/crafting/SingleItemRecipe$Serializer
	m	(Lcjj$a$a;)V	<init>	<init>
		p	1		recipeFactory
	m	(Ladd;Lcom/google/gson/JsonObject;)Lcjj;	a	fromJson
	m	(Ladd;Lss;)Lcjj;	a	fromNetwork
	m	(Lss;Lciy;)V	a	toNetwork
		p	1		buf
		p	2		recipe
	m	(Lss;Lcjj;)V	a	toNetwork
		p	1		buf
		p	2		recipe
	m	(Ladd;Lcom/google/gson/JsonObject;)Lciy;	b	fromJson
		p	1		id
		p	2		json
	m	(Ladd;Lss;)Lciy;	b	fromNetwork
		p	1		id
		p	2		buf
	f	Lcjj$a$a;	y	factory
c	cjj$a$a	net/minecraft/world/item/crafting/SingleItemRecipe$Serializer$SingleItemMaker
	m	(Ladd;Ljava/lang/String;Lciu;Lcfv;)Lcjj;	create	create
		p	1		id
		p	2		group
		p	3		input
		p	4		output
c	cjk	net/minecraft/world/item/crafting/SmeltingRecipe
	m	(Ladd;Ljava/lang/String;Lcim;Lciu;Lcfv;FI)V	<init>	<init>
		p	1		id
		p	2		group
		p	3		category
		p	4		input
		p	5		output
		p	6		experience
		p	7		cookTime
	m	()Lcja;	ai_	getSerializer
	m	()Lcfv;	h	getToastSymbol
c	cjl	net/minecraft/world/item/crafting/SmithingRecipe
	m	(II)Z	a	canCraftInDimensions
		p	1		width
		p	2		height
	m	(Lcfv;)Z	a	isTemplateIngredient
		p	1		stack
	m	(Lcfv;)Z	b	isBaseIngredient
		p	1		stack
	m	(Lcfv;)Z	c	isAdditionIngredient
		p	1		stack
	m	()Lcjb;	f	getType
	m	()Lcfv;	h	getToastSymbol
c	cjm	net/minecraft/world/item/crafting/SmithingTransformRecipe
	m	(Ladd;Lciu;Lciu;Lciu;Lcfv;)V	<init>	<init>
		p	1		id
		p	2		template
		p	3		base
		p	4		addition
		p	5		result
	m	(Lbdr;Lcmi;)Z	a	matches
		p	1		inventory
		p	2		world
	m	(Lbdr;Lhr;)Lcfv;	a	assemble
		p	1		inventory
		p	2		registryManager
	m	(Lcfv;)Z	a	isTemplateIngredient
		p	1		stack
	m	(Lhr;)Lcfv;	a	getResultItem
		p	1		registryManager
	m	()Lcja;	ai_	getSerializer
	m	()Z	aj_	isIncomplete
	m	(Lcfv;)Z	b	isBaseIngredient
		p	1		stack
	m	(Lcfv;)Z	c	isAdditionIngredient
		p	1		stack
	m	()Ladd;	e	getId
	f	Ladd;	a	id
	f	Lciu;	b	template
	f	Lciu;	c	base
	f	Lciu;	d	addition
	f	Lcfv;	e	result
c	cjm$a	net/minecraft/world/item/crafting/SmithingTransformRecipe$Serializer
	m	(Ladd;Lcom/google/gson/JsonObject;)Lcjm;	a	fromJson
	m	(Ladd;Lss;)Lcjm;	a	fromNetwork
	m	(Lss;Lciy;)V	a	toNetwork
		p	1		buf
		p	2		recipe
	m	(Lss;Lcjm;)V	a	toNetwork
		p	1		buf
		p	2		recipe
	m	(Ladd;Lcom/google/gson/JsonObject;)Lciy;	b	fromJson
		p	1		id
		p	2		json
	m	(Ladd;Lss;)Lciy;	b	fromNetwork
		p	1		id
		p	2		buf
c	cjn	net/minecraft/world/item/crafting/SmithingTrimRecipe
	m	(Ladd;Lciu;Lciu;Lciu;)V	<init>	<init>
		p	1		id
		p	2		template
		p	3		base
		p	4		addition
	m	(Lbdr;Lcmi;)Z	a	matches
		p	1		inventory
		p	2		world
	m	(Lbdr;Lhr;)Lcfv;	a	assemble
		p	1		inventory
		p	2		registryManager
	m	(Lcfv;)Z	a	isTemplateIngredient
		p	1		stack
	m	(Lhr;)Lcfv;	a	getResultItem
		p	1		registryManager
	m	()Lcja;	ai_	getSerializer
	m	()Z	aj_	isIncomplete
	m	(Lcfv;)Z	b	isBaseIngredient
		p	1		stack
	m	(Lcfv;)Z	c	isAdditionIngredient
		p	1		stack
	m	()Ladd;	e	getId
	f	Ladd;	a	id
	f	Lciu;	b	template
	f	Lciu;	c	base
	f	Lciu;	d	addition
c	cjn$a	net/minecraft/world/item/crafting/SmithingTrimRecipe$Serializer
	m	(Ladd;Lcom/google/gson/JsonObject;)Lcjn;	a	fromJson
	m	(Ladd;Lss;)Lcjn;	a	fromNetwork
	m	(Lss;Lciy;)V	a	toNetwork
		p	1		buf
		p	2		recipe
	m	(Lss;Lcjn;)V	a	toNetwork
		p	1		buf
		p	2		recipe
	m	(Ladd;Lcom/google/gson/JsonObject;)Lciy;	b	fromJson
		p	1		id
		p	2		json
	m	(Ladd;Lss;)Lciy;	b	fromNetwork
		p	1		id
		p	2		buf
c	cjo	net/minecraft/world/item/crafting/SmokingRecipe
	m	(Ladd;Ljava/lang/String;Lcim;Lciu;Lcfv;FI)V	<init>	<init>
		p	1		id
		p	2		group
		p	3		category
		p	4		input
		p	5		output
		p	6		experience
		p	7		cookTime
	m	()Lcja;	ai_	getSerializer
	m	()Lcfv;	h	getToastSymbol
c	cjp	net/minecraft/world/item/crafting/StonecutterRecipe
	m	(Ladd;Ljava/lang/String;Lciu;Lcfv;)V	<init>	<init>
		p	1		id
		p	2		group
		p	3		input
		p	4		output
	m	(Lbdr;Lcmi;)Z	a	matches
		p	1		inventory
		p	2		world
	m	()Lcfv;	h	getToastSymbol
c	cjq	net/minecraft/world/item/crafting/SuspiciousStewRecipe
	m	(Ladd;Lcin;)V	<init>	<init>
		p	1		id
		p	2		category
	m	(II)Z	a	canCraftInDimensions
		p	1		width
		p	2		height
	m	(Lbdr;Lcmi;)Z	a	matches
		p	1		inventory
		p	2		world
	m	(Lbdr;Lhr;)Lcfv;	a	assemble
		p	1		inventory
		p	2		registryManager
	m	(Lcbr;Lcmi;)Z	a	matches
		p	1		inventory
		p	2		world
	m	(Lcbr;Lhr;)Lcfv;	a	assemble
		p	1		inventory
		p	2		registryManager
	m	()Lcja;	ai_	getSerializer
c	cjr	net/minecraft/world/item/crafting/TippedArrowRecipe
	m	(Ladd;Lcin;)V	<init>	<init>
		p	1		id
		p	2		category
	m	(II)Z	a	canCraftInDimensions
		p	1		width
		p	2		height
	m	(Lbdr;Lcmi;)Z	a	matches
		p	1		inventory
		p	2		world
	m	(Lbdr;Lhr;)Lcfv;	a	assemble
		p	1		inventory
		p	2		registryManager
	m	(Lcbr;Lcmi;)Z	a	matches
		p	1		inventory
		p	2		world
	m	(Lcbr;Lhr;)Lcfv;	a	assemble
		p	1		inventory
		p	2		registryManager
	m	()Lcja;	ai_	getSerializer
c	cjs	net/minecraft/world/item/crafting/package-info
c	cjt	net/minecraft/world/item/enchantment/ArrowDamageEnchantment
	m	(Lckc$a;[Lbfm;)V	<init>	<init>
		p	1		weight
		p	2		slotTypes
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
		p	1		level
	m	(I)I	b	getMaxCost
		p	1		level
c	cju	net/minecraft/world/item/enchantment/ArrowFireEnchantment
	m	(Lckc$a;[Lbfm;)V	<init>	<init>
		p	1		weight
		p	2		slotTypes
	m	(I)I	a	getMinCost
		p	1		level
	m	(I)I	b	getMaxCost
		p	1		level
c	cjv	net/minecraft/world/item/enchantment/ArrowInfiniteEnchantment
	m	(Lckc$a;[Lbfm;)V	<init>	<init>
		p	1		weight
		p	2		slotTypes
	m	(I)I	a	getMinCost
		p	1		level
	m	(Lckc;)Z	a	checkCompatibility
		p	1		other
	m	(I)I	b	getMaxCost
		p	1		level
c	cjw	net/minecraft/world/item/enchantment/ArrowKnockbackEnchantment
	m	(Lckc$a;[Lbfm;)V	<init>	<init>
		p	1		weight
		p	2		slotTypes
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
		p	1		level
	m	(I)I	b	getMaxCost
		p	1		level
c	cjx	net/minecraft/world/item/enchantment/ArrowPiercingEnchantment
	m	(Lckc$a;[Lbfm;)V	<init>	<init>
		p	1		weight
		p	2		slotTypes
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
		p	1		level
	m	(Lckc;)Z	a	checkCompatibility
		p	1		other
	m	(I)I	b	getMaxCost
		p	1		level
c	cjy	net/minecraft/world/item/enchantment/BindingCurseEnchantment
	m	(Lckc$a;[Lbfm;)V	<init>	<init>
		p	1		weight
		p	2		slotTypes
	m	(I)I	a	getMinCost
		p	1		level
	m	(Lcfv;)Z	a	canEnchant
		p	1		stack
	m	()Z	b	isTreasureOnly
	m	(I)I	b	getMaxCost
		p	1		level
	m	()Z	c	isCurse
c	cjz	net/minecraft/world/item/enchantment/DamageEnchantment
	m	(Lckc$a;I[Lbfm;)V	<init>	<init>
		p	1		weight
		p	2		typeIndex
		p	3		slots
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
		p	1		level
	m	(ILbgc;)F	a	getDamageBonus
		p	1		level
		p	2		group
	m	(Lbfx;Lbfh;I)V	a	doPostAttack
		p	1		user
		p	2		target
		p	3		level
	m	(Lcfv;)Z	a	canEnchant
		p	1		stack
	m	(Lckc;)Z	a	checkCompatibility
		p	1		other
	m	(I)I	b	getMaxCost
		p	1		level
	f	I	a	ALL
	f	I	b	UNDEAD
	f	I	c	ARTHROPODS
	f	I	d	type
	f	[Ljava/lang/String;	g	NAMES
	f	[I	h	MIN_COST
	f	[I	i	LEVEL_COST
	f	[I	j	LEVEL_COST_SPAN
c	cka	net/minecraft/world/item/enchantment/DigDurabilityEnchantment
	m	(Lckc$a;[Lbfm;)V	<init>	<init>
		p	1		weight
		p	2		slotTypes
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
		p	1		level
	m	(Lcfv;)Z	a	canEnchant
		p	1		stack
	m	(Lcfv;ILapo;)Z	a	shouldIgnoreDurabilityDrop
		p	0		item
		p	1		level
		p	2		random
	m	(I)I	b	getMaxCost
		p	1		level
c	ckb	net/minecraft/world/item/enchantment/DiggingEnchantment
	m	(Lckc$a;[Lbfm;)V	<init>	<init>
		p	1		weight
		p	2		slotTypes
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
		p	1		level
	m	(Lcfv;)Z	a	canEnchant
		p	1		stack
	m	(I)I	b	getMaxCost
		p	1		level
c	ckc	net/minecraft/world/item/enchantment/Enchantment
	m	(Lckc$a;Lckd;[Lbfm;)V	<init>	<init>
		p	1		weight
		p	2		target
		p	3		slotTypes
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
		p	1		level
	m	(ILbem;)I	a	getDamageProtection
		p	1		level
		p	2		source
	m	(ILbgc;)F	a	getDamageBonus
		p	1		level
		p	2		group
	m	(Lbfx;)Ljava/util/Map;	a	getSlotItems
		p	1		entity
	m	(Lbfx;Lbfh;I)V	a	doPostAttack
		p	1		user
		p	2		target
		p	3		level
	m	(Lcfv;)Z	a	canEnchant
		p	1		stack
	m	(Lckc;)Z	a	checkCompatibility
		p	1		other
	m	()Z	b	isTreasureOnly
	m	(I)I	b	getMaxCost
		p	1		level
	m	(Lbfx;Lbfh;I)V	b	doPostHurt
		p	1		user
		p	2		attacker
		p	3		level
	m	(Lckc;)Z	b	isCompatibleWith
		p	1		other
	m	()Z	c	isCurse
	m	(I)Lckc;	c	byId
		p	0		id
	m	()Lckc$a;	d	getRarity
	m	(I)Ltj;	d	getFullname
		p	1		level
	m	()I	e	getMinLevel
	m	()Ljava/lang/String;	f	getOrCreateDescriptionId
	m	()Ljava/lang/String;	g	getDescriptionId
	m	()Z	h	isTradeable
	m	()Z	i	isDiscoverable
	f	[Lbfm;	a	slots
	f	Lckc$a;	b	rarity
	f	Lckd;	e	category
	f	Ljava/lang/String;	f	descriptionId
c	ckc$a	net/minecraft/world/item/enchantment/Enchantment$Rarity
	m	(Ljava/lang/String;II)V	<init>	<init>
		p	3		weight
	m	()I	a	getWeight
	m	()[Lckc$a;	b	$values
	f	Lckc$a;	a	COMMON
	f	Lckc$a;	b	UNCOMMON
	f	Lckc$a;	c	RARE
	f	Lckc$a;	d	VERY_RARE
	f	I	e	weight
	f	[Lckc$a;	f	$VALUES
c	ckd	net/minecraft/world/item/enchantment/EnchantmentCategory
	m	()[Lckd;	a	$values
	m	(Lcfq;)Z	a	canEnchant
		p	1		item
	f	Lckd;	a	ARMOR
	f	Lckd;	b	ARMOR_FEET
	f	Lckd;	c	ARMOR_LEGS
	f	Lckd;	d	ARMOR_CHEST
	f	Lckd;	e	ARMOR_HEAD
	f	Lckd;	f	WEAPON
	f	Lckd;	g	DIGGER
	f	Lckd;	h	FISHING_ROD
	f	Lckd;	i	TRIDENT
	f	Lckd;	j	BREAKABLE
	f	Lckd;	k	BOW
	f	Lckd;	l	WEARABLE
	f	Lckd;	m	CROSSBOW
	f	Lckd;	n	VANISHABLE
	f	[Lckd;	o	$VALUES
c	ckd$1	net/minecraft/world/item/enchantment/EnchantmentCategory$1
	m	(Lcfq;)Z	a	canEnchant
		p	1		item
c	ckd$2	net/minecraft/world/item/enchantment/EnchantmentCategory$10
	m	(Lcfq;)Z	a	canEnchant
		p	1		item
c	ckd$3	net/minecraft/world/item/enchantment/EnchantmentCategory$11
	m	(Lcfq;)Z	a	canEnchant
		p	1		item
c	ckd$4	net/minecraft/world/item/enchantment/EnchantmentCategory$12
	m	(Lcfq;)Z	a	canEnchant
		p	1		item
c	ckd$5	net/minecraft/world/item/enchantment/EnchantmentCategory$13
	m	(Lcfq;)Z	a	canEnchant
		p	1		item
c	ckd$6	net/minecraft/world/item/enchantment/EnchantmentCategory$14
	m	(Lcfq;)Z	a	canEnchant
		p	1		item
c	ckd$7	net/minecraft/world/item/enchantment/EnchantmentCategory$2
	m	(Lcfq;)Z	a	canEnchant
		p	1		item
c	ckd$8	net/minecraft/world/item/enchantment/EnchantmentCategory$3
	m	(Lcfq;)Z	a	canEnchant
		p	1		item
c	ckd$9	net/minecraft/world/item/enchantment/EnchantmentCategory$4
	m	(Lcfq;)Z	a	canEnchant
		p	1		item
c	ckd$10	net/minecraft/world/item/enchantment/EnchantmentCategory$5
	m	(Lcfq;)Z	a	canEnchant
		p	1		item
c	ckd$11	net/minecraft/world/item/enchantment/EnchantmentCategory$6
	m	(Lcfq;)Z	a	canEnchant
		p	1		item
c	ckd$12	net/minecraft/world/item/enchantment/EnchantmentCategory$7
	m	(Lcfq;)Z	a	canEnchant
		p	1		item
c	ckd$13	net/minecraft/world/item/enchantment/EnchantmentCategory$8
	m	(Lcfq;)Z	a	canEnchant
		p	1		item
c	ckd$14	net/minecraft/world/item/enchantment/EnchantmentCategory$9
	m	(Lcfq;)Z	a	canEnchant
		p	1		item
c	cke	net/minecraft/world/item/enchantment/EnchantmentHelper
	m	(ILcfv;Z)Ljava/util/List;	a	getAvailableEnchantmentResults
		p	0		power
		p	1		stack
		p	2		treasureAllowed
	m	(Ladd;I)Lre;	a	storeEnchantment
		p	0		id
		p	1		lvl
	m	(Lapo;IILcfv;)I	a	getEnchantmentCost
		p	0		random
		p	1		slotIndex
		p	2		bookshelfCount
		p	3		stack
	m	(Lapo;Lcfv;IZ)Lcfv;	a	enchantItem
		p	0		random
		p	1		target
		p	2		level
		p	3		treasureAllowed
	m	(Lbfx;)F	a	getSweepingDamageRatio
		p	0		entity
	m	(Lbfx;Lbfh;)V	a	doPostHurtEffects
		p	0		user
		p	1		attacker
	m	(Lbfx;Lbfh;Lckc;I)V	a	lambda$doPostDamageEffects$5
		p	2		enchantment
		p	3		level
	m	(Lcfv;)Ljava/util/Map;	a	getEnchantments
		p	0		stack
	m	(Lcfv;Lbgc;)F	a	getDamageBonus
		p	0		stack
		p	1		group
	m	(Lckc;)Ladd;	a	getEnchantmentId
		p	0		enchantment
	m	(Lckc;Lbfx;)I	a	getEnchantmentLevel
		p	0		enchantment
		p	1		entity
	m	(Lckc;Lbfx;Ljava/util/function/Predicate;)Ljava/util/Map$Entry;	a	getRandomItemWith
		p	0		enchantment
		p	1		entity
		p	2		condition
	m	(Lckc;Lcfv;)I	a	getItemEnchantmentLevel
		p	0		enchantment
		p	1		stack
	m	(Lcke$a;Lcfv;)V	a	runIterationOnItem
		p	0		consumer
		p	1		stack
	m	(Lcke$a;Ljava/lang/Iterable;)V	a	runIterationOnInventory
		p	0		consumer
		p	1		stacks
	m	(Lcke$a;Lre;Lckc;)V	a	lambda$runIterationOnItem$1
		p	2		enchantment
	m	(Ljava/lang/Iterable;Lbem;)I	a	getDamageProtection
		p	0		equipment
		p	1		source
	m	(Ljava/util/Collection;Lckc;)Z	a	isEnchantmentCompatible
		p	0		existing
		p	1		candidate
	m	(Ljava/util/List;Lckf;)V	a	filterCompatibleEnchantments
		p	0		possibleEntries
		p	1		pickedEntry
	m	(Ljava/util/Map;Lcfv;)V	a	setEnchantments
		p	0		enchantments
		p	1		stack
	m	(Ljava/util/Map;Lre;Lckc;)V	a	lambda$deserializeEnchantments$0
		p	2		enchantment
	m	(Lorg/apache/commons/lang3/mutable/MutableFloat;Lbgc;Lckc;I)V	a	lambda$getDamageBonus$3
		p	2		enchantment
		p	3		level
	m	(Lorg/apache/commons/lang3/mutable/MutableInt;Lbem;Lckc;I)V	a	lambda$getDamageProtection$2
		p	2		enchantment
		p	3		level
	m	(Lre;)I	a	getEnchantmentLevel
		p	0		nbt
	m	(Lre;I)V	a	setEnchantmentLevel
		p	0		nbt
		p	1		lvl
	m	(Lrk;)Ljava/util/Map;	a	deserializeEnchantments
		p	0		list
	m	(Lapo;Lcfv;IZ)Ljava/util/List;	b	selectEnchantment
		p	0		random
		p	1		stack
		p	2		level
		p	3		treasureAllowed
	m	(Lbfx;)F	b	getSneakingSpeedBonus
		p	0		entity
	m	(Lbfx;Lbfh;)V	b	doPostDamageEffects
		p	0		user
		p	1		target
	m	(Lbfx;Lbfh;Lckc;I)V	b	lambda$doPostHurtEffects$4
		p	2		enchantment
		p	3		level
	m	(Lcfv;)I	b	getFishingLuckBonus
		p	0		stack
	m	(Lckc;Lbfx;)Ljava/util/Map$Entry;	b	getRandomItemWith
		p	0		enchantment
		p	1		entity
	m	(Lre;)Ladd;	b	getEnchantmentId
		p	0		nbt
	m	(Lbfx;)I	c	getKnockbackBonus
		p	0		entity
	m	(Lcfv;)I	c	getFishingSpeedBonus
		p	0		stack
	m	(Lbfx;)I	d	getFireAspect
		p	0		entity
	m	(Lcfv;)Z	d	hasBindingCurse
		p	0		stack
	m	(Lbfx;)I	e	getRespiration
		p	0		entity
	m	(Lcfv;)Z	e	hasVanishingCurse
		p	0		stack
	m	(Lbfx;)I	f	getDepthStrider
		p	0		entity
	m	(Lcfv;)Z	f	hasSilkTouch
		p	0		stack
	m	(Lbfx;)I	g	getBlockEfficiency
		p	0		entity
	m	(Lcfv;)I	g	getLoyalty
		p	0		stack
	m	(Lbfx;)I	h	getMobLooting
		p	0		entity
	m	(Lcfv;)I	h	getRiptide
		p	0		stack
	m	(Lbfx;)Z	i	hasAquaAffinity
		p	0		entity
	m	(Lcfv;)Z	i	hasChanneling
		p	0		stack
	m	(Lbfx;)Z	j	hasFrostWalker
		p	0		entity
	m	(Lcfv;)Z	j	lambda$getRandomItemWith$6
		p	0		stack
	m	(Lbfx;)Z	k	hasSoulSpeed
		p	0		entity
	f	Ljava/lang/String;	a	TAG_ENCH_ID
	f	Ljava/lang/String;	b	TAG_ENCH_LEVEL
	f	F	c	SWIFT_SNEAK_EXTRA_FACTOR
c	cke$a	net/minecraft/world/item/enchantment/EnchantmentHelper$EnchantmentVisitor
	m	(Lckc;I)V	accept	accept
		p	1		enchantment
		p	2		level
c	ckf	net/minecraft/world/item/enchantment/EnchantmentInstance
	m	(Lckc;I)V	<init>	<init>
		p	1		enchantment
		p	2		level
	f	Lckc;	a	enchantment
	f	I	b	level
c	ckg	net/minecraft/world/item/enchantment/Enchantments
	m	(Ljava/lang/String;Lckc;)Lckc;	a	register
		p	0		name
		p	1		enchantment
	f	Lckc;	A	FLAMING_ARROWS
	f	Lckc;	B	INFINITY_ARROWS
	f	Lckc;	C	FISHING_LUCK
	f	Lckc;	D	FISHING_SPEED
	f	Lckc;	E	LOYALTY
	f	Lckc;	F	IMPALING
	f	Lckc;	G	RIPTIDE
	f	Lckc;	H	CHANNELING
	f	Lckc;	I	MULTISHOT
	f	Lckc;	J	QUICK_CHARGE
	f	Lckc;	K	PIERCING
	f	Lckc;	L	MENDING
	f	Lckc;	M	VANISHING_CURSE
	f	[Lbfm;	N	ARMOR_SLOTS
	f	Lckc;	a	ALL_DAMAGE_PROTECTION
	f	Lckc;	b	FIRE_PROTECTION
	f	Lckc;	c	FALL_PROTECTION
	f	Lckc;	d	BLAST_PROTECTION
	f	Lckc;	e	PROJECTILE_PROTECTION
	f	Lckc;	f	RESPIRATION
	f	Lckc;	g	AQUA_AFFINITY
	f	Lckc;	h	THORNS
	f	Lckc;	i	DEPTH_STRIDER
	f	Lckc;	j	FROST_WALKER
	f	Lckc;	k	BINDING_CURSE
	f	Lckc;	l	SOUL_SPEED
	f	Lckc;	m	SWIFT_SNEAK
	f	Lckc;	n	SHARPNESS
	f	Lckc;	o	SMITE
	f	Lckc;	p	BANE_OF_ARTHROPODS
	f	Lckc;	q	KNOCKBACK
	f	Lckc;	r	FIRE_ASPECT
	f	Lckc;	s	MOB_LOOTING
	f	Lckc;	t	SWEEPING_EDGE
	f	Lckc;	u	BLOCK_EFFICIENCY
	f	Lckc;	v	SILK_TOUCH
	f	Lckc;	w	UNBREAKING
	f	Lckc;	x	BLOCK_FORTUNE
	f	Lckc;	y	POWER_ARROWS
	f	Lckc;	z	PUNCH_ARROWS
c	ckh	net/minecraft/world/item/enchantment/FireAspectEnchantment
	m	(Lckc$a;[Lbfm;)V	<init>	<init>
		p	1		weight
		p	2		slotTypes
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
		p	1		level
	m	(I)I	b	getMaxCost
		p	1		level
c	cki	net/minecraft/world/item/enchantment/FishingSpeedEnchantment
	m	(Lckc$a;Lckd;[Lbfm;)V	<init>	<init>
		p	1		weight
		p	2		target
		p	3		slotTypes
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
		p	1		level
	m	(I)I	b	getMaxCost
		p	1		level
c	ckj	net/minecraft/world/item/enchantment/FrostWalkerEnchantment
	m	(Lckc$a;[Lbfm;)V	<init>	<init>
		p	1		weight
		p	2		slotTypes
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
		p	1		level
	m	(Lbfx;Lcmi;Lgt;I)V	a	onEntityMoved
		p	0		entity
		p	1		world
		p	2		blockPos
		p	3		level
	m	(Lckc;)Z	a	checkCompatibility
		p	1		other
	m	()Z	b	isTreasureOnly
	m	(I)I	b	getMaxCost
		p	1		level
c	ckk	net/minecraft/world/item/enchantment/KnockbackEnchantment
	m	(Lckc$a;[Lbfm;)V	<init>	<init>
		p	1		weight
		p	2		slot
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
		p	1		level
	m	(I)I	b	getMaxCost
		p	1		level
c	ckl	net/minecraft/world/item/enchantment/LootBonusEnchantment
	m	(Lckc$a;Lckd;[Lbfm;)V	<init>	<init>
		p	1		weight
		p	2		target
		p	3		slotTypes
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
		p	1		level
	m	(Lckc;)Z	a	checkCompatibility
		p	1		other
	m	(I)I	b	getMaxCost
		p	1		level
c	ckm	net/minecraft/world/item/enchantment/MendingEnchantment
	m	(Lckc$a;[Lbfm;)V	<init>	<init>
		p	1		weight
		p	2		slotTypes
	m	(I)I	a	getMinCost
		p	1		level
	m	()Z	b	isTreasureOnly
	m	(I)I	b	getMaxCost
		p	1		level
c	ckn	net/minecraft/world/item/enchantment/MultiShotEnchantment
	m	(Lckc$a;[Lbfm;)V	<init>	<init>
		p	1		weight
		p	2		slotTypes
	m	(I)I	a	getMinCost
		p	1		level
	m	(Lckc;)Z	a	checkCompatibility
		p	1		other
	m	(I)I	b	getMaxCost
		p	1		level
c	cko	net/minecraft/world/item/enchantment/OxygenEnchantment
	m	(Lckc$a;[Lbfm;)V	<init>	<init>
		p	1		weight
		p	2		slotTypes
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
		p	1		level
	m	(I)I	b	getMaxCost
		p	1		level
c	ckp	net/minecraft/world/item/enchantment/ProtectionEnchantment
	m	(Lckc$a;Lckp$a;[Lbfm;)V	<init>	<init>
		p	1		weight
		p	2		protectionType
		p	3		slotTypes
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
		p	1		level
	m	(ILbem;)I	a	getDamageProtection
		p	1		level
		p	2		source
	m	(Lbfx;D)D	a	getExplosionKnockbackAfterDampener
		p	0		entity
		p	1		velocity
	m	(Lbfx;I)I	a	getFireAfterDampener
		p	0		entity
		p	1		duration
	m	(Lckc;)Z	a	checkCompatibility
		p	1		other
	m	(I)I	b	getMaxCost
		p	1		level
	f	Lckp$a;	a	type
c	ckp$a	net/minecraft/world/item/enchantment/ProtectionEnchantment$Type
	m	(Ljava/lang/String;III)V	<init>	<init>
		p	3		basePower
		p	4		powerPerLevel
	m	()I	a	getMinCost
	m	()I	b	getLevelCost
	m	()[Lckp$a;	c	$values
	f	Lckp$a;	a	ALL
	f	Lckp$a;	b	FIRE
	f	Lckp$a;	c	FALL
	f	Lckp$a;	d	EXPLOSION
	f	Lckp$a;	e	PROJECTILE
	f	I	f	minCost
	f	I	g	levelCost
	f	[Lckp$a;	h	$VALUES
c	ckq	net/minecraft/world/item/enchantment/QuickChargeEnchantment
	m	(Lckc$a;[Lbfm;)V	<init>	<init>
		p	1		weight
		p	2		slot
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
		p	1		level
	m	(I)I	b	getMaxCost
		p	1		level
c	ckr	net/minecraft/world/item/enchantment/SoulSpeedEnchantment
	m	(Lckc$a;[Lbfm;)V	<init>	<init>
		p	1		weight
		p	2		slotTypes
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
		p	1		level
	m	()Z	b	isTreasureOnly
	m	(I)I	b	getMaxCost
		p	1		level
	m	()Z	h	isTradeable
	m	()Z	i	isDiscoverable
c	cks	net/minecraft/world/item/enchantment/SweepingEdgeEnchantment
	m	(Lckc$a;[Lbfm;)V	<init>	<init>
		p	1		weight
		p	2		slotTypes
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
		p	1		level
	m	(I)I	b	getMaxCost
		p	1		level
	m	(I)F	e	getSweepingDamageRatio
		p	0		level
c	ckt	net/minecraft/world/item/enchantment/SwiftSneakEnchantment
	m	(Lckc$a;[Lbfm;)V	<init>	<init>
		p	1		rarity
		p	2		slots
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
		p	1		level
	m	()Z	b	isTreasureOnly
	m	(I)I	b	getMaxCost
		p	1		level
	m	()Z	h	isTradeable
	m	()Z	i	isDiscoverable
c	cku	net/minecraft/world/item/enchantment/ThornsEnchantment
	m	(Lckc$a;[Lbfm;)V	<init>	<init>
		p	1		weight
		p	2		slotTypes
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
		p	1		level
	m	(ILapo;)Z	a	shouldHit
		p	0		level
		p	1		random
	m	(Lcfv;)Z	a	canEnchant
		p	1		stack
	m	(Ljava/util/Map$Entry;Lbfx;)V	a	lambda$doPostHurt$0
		p	1		entity
	m	(I)I	b	getMaxCost
		p	1		level
	m	(ILapo;)I	b	getDamage
		p	0		level
		p	1		random
	m	(Lbfx;Lbfh;I)V	b	doPostHurt
		p	1		user
		p	2		attacker
		p	3		level
	f	F	a	CHANCE_PER_LEVEL
c	ckv	net/minecraft/world/item/enchantment/TridentChannelingEnchantment
	m	(Lckc$a;[Lbfm;)V	<init>	<init>
		p	1		weight
		p	2		slotTypes
	m	(I)I	a	getMinCost
		p	1		level
	m	(I)I	b	getMaxCost
		p	1		level
c	ckw	net/minecraft/world/item/enchantment/TridentImpalerEnchantment
	m	(Lckc$a;[Lbfm;)V	<init>	<init>
		p	1		weight
		p	2		slotTypes
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
		p	1		level
	m	(ILbgc;)F	a	getDamageBonus
		p	1		level
		p	2		group
	m	(I)I	b	getMaxCost
		p	1		level
c	ckx	net/minecraft/world/item/enchantment/TridentLoyaltyEnchantment
	m	(Lckc$a;[Lbfm;)V	<init>	<init>
		p	1		weight
		p	2		slotTypes
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
		p	1		level
	m	(I)I	b	getMaxCost
		p	1		level
c	cky	net/minecraft/world/item/enchantment/TridentRiptideEnchantment
	m	(Lckc$a;[Lbfm;)V	<init>	<init>
		p	1		weight
		p	2		slotTypes
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
		p	1		level
	m	(Lckc;)Z	a	checkCompatibility
		p	1		other
	m	(I)I	b	getMaxCost
		p	1		level
c	ckz	net/minecraft/world/item/enchantment/UntouchingEnchantment
	m	(Lckc$a;[Lbfm;)V	<init>	<init>
		p	1		weight
		p	2		slotTypes
	m	(I)I	a	getMinCost
		p	1		level
	m	(Lckc;)Z	a	checkCompatibility
		p	1		other
	m	(I)I	b	getMaxCost
		p	1		level
c	cla	net/minecraft/world/item/enchantment/VanishingCurseEnchantment
	m	(Lckc$a;[Lbfm;)V	<init>	<init>
		p	1		weight
		p	2		slotTypes
	m	(I)I	a	getMinCost
		p	1		level
	m	()Z	b	isTreasureOnly
	m	(I)I	b	getMaxCost
		p	1		level
	m	()Z	c	isCurse
c	clb	net/minecraft/world/item/enchantment/WaterWalkerEnchantment
	m	(Lckc$a;[Lbfm;)V	<init>	<init>
		p	1		weight
		p	2		slotTypes
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
		p	1		level
	m	(Lckc;)Z	a	checkCompatibility
		p	1		other
	m	(I)I	b	getMaxCost
		p	1		level
c	clc	net/minecraft/world/item/enchantment/WaterWorkerEnchantment
	m	(Lckc$a;[Lbfm;)V	<init>	<init>
		p	1		weight
		p	2		slotTypes
	m	(I)I	a	getMinCost
		p	1		level
	m	(I)I	b	getMaxCost
		p	1		level
c	cld	net/minecraft/world/item/enchantment/package-info
c	cle	net/minecraft/world/item/package-info
c	clf	net/minecraft/world/item/trading/Merchant
	m	(ILbyl;Lbym;)Lcbd;	a	lambda$openTradingScreen$0
		p	1		syncId
		p	2		playerInventory
		p	3		player
	m	(Lbym;Ltj;I)V	a	openTradingScreen
		p	1		player
		p	2		test
		p	3		levelProgress
	m	(Lclg;)V	a	notifyTrade
		p	1		offer
	m	(Lclh;)V	a	overrideOffers
		p	1		offers
	m	(Lbym;)V	e	setTradingPlayer
		p	1		customer
	m	()Lbym;	fS	getTradingPlayer
	m	()Lclh;	fU	getOffers
	m	()Z	fV	showProgressBar
	m	()Lamq;	fW	getNotifyTradeSound
	m	()Z	ga	isClientSide
	m	()Z	ge	canRestock
	m	(Lcfv;)V	l	notifyTradeUpdated
		p	1		stack
	m	()I	r	getVillagerXp
	m	(I)V	s	overrideXp
		p	1		experience
c	clg	net/minecraft/world/item/trading/MerchantOffer
	m	(Lcfv;Lcfv;IIF)V	<init>	<init>
		p	1		buyItem
		p	2		sellItem
		p	3		maxUses
		p	4		merchantExperience
		p	5		priceMultiplier
	m	(Lcfv;Lcfv;Lcfv;IIF)V	<init>	<init>
		p	1		firstBuyItem
		p	2		secondBuyItem
		p	3		sellItem
		p	4		maxUses
		p	5		merchantExperience
		p	6		priceMultiplier
	m	(Lcfv;Lcfv;Lcfv;IIIF)V	<init>	<init>
		p	1		firstBuyItem
		p	2		secondBuyItem
		p	3		sellItem
		p	4		uses
		p	5		maxUses
		p	6		merchantExperience
		p	7		priceMultiplier
	m	(Lcfv;Lcfv;Lcfv;IIIFI)V	<init>	<init>
		p	1		firstBuyItem
		p	2		secondBuyItem
		p	3		sellItem
		p	4		uses
		p	5		maxUses
		p	6		merchantExperience
		p	7		priceMultiplier
		p	8		demandBonus
	m	(Lre;)V	<init>	<init>
		p	1		nbt
	m	()Lcfv;	a	getBaseCostA
	m	(I)V	a	addToSpecialPriceDiff
		p	1		increment
	m	(Lcfv;Lcfv;)Z	a	satisfiedBy
		p	1		first
		p	2		second
	m	()Lcfv;	b	getCostA
	m	(I)V	b	setSpecialPriceDiff
		p	1		specialPrice
	m	(Lcfv;Lcfv;)Z	b	take
		p	1		firstBuyStack
		p	2		secondBuyStack
	m	()Lcfv;	c	getCostB
	m	(Lcfv;Lcfv;)Z	c	isRequiredItem
		p	1		given
		p	2		sample
	m	()Lcfv;	d	getResult
	m	()V	e	updateDemand
	m	()Lcfv;	f	assemble
	m	()I	g	getUses
	m	()V	h	resetUses
	m	()I	i	getMaxUses
	m	()V	j	increaseUses
	m	()I	k	getDemand
	m	()V	l	resetSpecialPriceDiff
	m	()I	m	getSpecialPriceDiff
	m	()F	n	getPriceMultiplier
	m	()I	o	getXp
	m	()Z	p	isOutOfStock
	m	()V	q	setToOutOfStock
	m	()Z	r	needsRestock
	m	()Z	s	shouldRewardExp
	m	()Lre;	t	createTag
	f	Lcfv;	a	baseCostA
	f	Lcfv;	b	costB
	f	Lcfv;	c	result
	f	I	d	uses
	f	I	e	maxUses
	f	Z	f	rewardExp
	f	I	g	specialPriceDiff
	f	I	h	demand
	f	F	i	priceMultiplier
	f	I	j	xp
c	clh	net/minecraft/world/item/trading/MerchantOffers
	m	(I)V	<init>	<init>
		p	1		size
	m	(Lre;)V	<init>	<init>
		p	1		nbt
	m	()Lre;	a	createTag
	m	(Lcfv;Lcfv;I)Lclg;	a	getRecipeFor
		p	1		firstBuyItem
		p	2		secondBuyItem
		p	3		index
	m	(Lss;)V	a	writeToStream
		p	1		buf
	m	(Lss;Lclg;)V	a	lambda$writeToStream$0
		p	0		buf2
		p	1		offer
	m	(Lss;)Lclh;	b	createFromStream
		p	0		buf
	m	(Lss;)Lclg;	c	lambda$createFromStream$1
		p	0		buf2
c	cli	net/minecraft/world/item/trading/package-info
c	clj	net/minecraft/world/level/BaseCommandBlock
	m	()Z	M_	shouldInformAdmins
	m	(I)V	a	setSuccessCount
		p	1		successCount
	m	(Lbym;)Lbdy;	a	usedBy
		p	1		player
	m	(Lcmi;)Z	a	performCommand
		p	1		world
	m	(Lcom/mojang/brigadier/context/CommandContext;ZI)V	a	lambda$performCommand$0
		p	1		context
		p	2		success
		p	3		result
	m	(Ljava/lang/String;)V	a	setCommand
		p	1		command
	m	(Lre;)Lre;	a	save
		p	1		nbt
	m	(Ltj;)V	a	sendSystemMessage
		p	1		message
	m	(Z)V	a	setTrackOutput
		p	1		trackOutput
	m	(Lre;)V	b	load
		p	1		nbt
	m	(Ltj;)V	b	setName
		p	1		name
	m	(Ltj;)V	c	setLastOutput
		p	1		lastOutput
	m	()Z	d_	acceptsSuccess
	m	()Laip;	e	getLevel
	m	()V	f	onUpdated
	m	()Lede;	g	getPosition
	m	()Ljava/lang/String;	h	lambda$performCommand$1
	m	()Ldr;	i	createCommandSourceStack
	m	()I	j	getSuccessCount
	m	()Z	j_	acceptsFailure
	m	()Ltj;	k	getLastOutput
	m	()Ljava/lang/String;	l	getCommand
	m	()Ltj;	m	getName
	m	()Z	n	isTrackOutput
	f	Ljava/text/SimpleDateFormat;	b	TIME_FORMAT
	f	Ltj;	c	DEFAULT_NAME
	f	J	d	lastExecution
	f	Z	e	updateLastExecution
	f	I	f	successCount
	f	Z	g	trackOutput
	f	Ltj;	h	lastOutput
	f	Ljava/lang/String;	i	command
	f	Ltj;	j	name
c	clk	net/minecraft/world/level/BaseSpawner
	m	()D	a	getSpin
	m	(DDDLbfh;)Lbfh;	a	lambda$serverTick$0
		p	6		entity
	m	(Laip;Lgt;)V	a	serverTick
		p	1		world
		p	2		pos
	m	(Lbfl;Lcmi;Lapo;Lgt;)V	a	setEntityId
		p	1		type
		p	2		world
		p	3		random
		p	4		pos
	m	(Lcmi;I)Z	a	onEventTriggered
		p	1		world
		p	2		status
	m	(Lcmi;Lapo;Lgt;)Lbfh;	a	getOrCreateDisplayEntity
		p	1		world
		p	2		random
		p	3		pos
	m	(Lcmi;Lgt;)V	a	clientTick
		p	1		world
		p	2		pos
	m	(Lcmi;Lgt;I)V	a	broadcastEvent
		p	1		world
		p	2		pos
		p	3		status
	m	(Lcmi;Lgt;Lbck$b;)V	a	lambda$delay$1
		p	3		spawnPotential
	m	(Lcmi;Lgt;Lcmy;)V	a	setNextSpawnData
		p	1		world
		p	2		pos
		p	3		spawnEntry
	m	(Lcmi;Lgt;Lre;)V	a	load
		p	1		world
		p	2		pos
		p	3		nbt
	m	(Ljava/lang/String;)V	a	lambda$load$3
		p	0		error
	m	(Lre;)Lre;	a	save
		p	1		nbt
	m	()D	b	getoSpin
	m	(Lcmi;Lapo;Lgt;)Lcmy;	b	getOrCreateNextSpawnData
		p	1		world
		p	2		random
		p	3		pos
	m	(Lcmi;Lgt;)Z	b	isNearPlayer
		p	1		world
		p	2		pos
	m	(Ljava/lang/String;)V	b	lambda$load$2
	m	()Ljava/lang/IllegalStateException;	c	lambda$save$4
	m	(Lcmi;Lgt;)V	c	delay
		p	1		world
		p	2		pos
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/lang/String;	b	SPAWN_DATA_TAG
	f	I	c	EVENT_SPAWN
	f	I	d	spawnDelay
	f	Lbci;	e	spawnPotentials
	f	Lcmy;	f	nextSpawnData
	f	D	g	spin
	f	D	h	oSpin
	f	I	i	minSpawnDelay
	f	I	j	maxSpawnDelay
	f	I	k	spawnCount
	f	Lbfh;	l	displayEntity
	f	I	m	maxNearbyEntities
	f	I	n	requiredPlayerRange
	f	I	o	spawnRange
c	cll	net/minecraft/world/level/BlockAndTintGetter
	m	(Lcmr;Lgt;)I	a	getBrightness
		p	1		type
		p	2		pos
	m	(Lgt;Lclt;)I	a	getBlockTint
		p	1		pos
		p	2		colorResolver
	m	(Lgz;Z)F	a	getShade
		p	1		direction
		p	2		shaded
	m	(Lgt;I)I	b	getRawBrightness
		p	1		pos
		p	2		ambientDarkness
	m	(Lgt;)Z	g	canSeeSky
		p	1		pos
	m	()Ldwa;	l_	getLightEngine
c	clm	net/minecraft/world/level/BlockCollisions
	m	(Lcls;Lbfh;Lecz;)V	<init>	<init>
		p	1		world
		p	2		entity
		p	3		box
	m	(Lcls;Lbfh;Lecz;Z)V	<init>	<init>
		p	1		world
		p	2		entity
		p	3		box
		p	4		forEntity
	m	()Ledx;	a	computeNext
	m	(II)Lclo;	a	getChunk
		p	1		x
		p	2		z
	f	Lecz;	a	box
	f	Ledj;	b	context
	f	Lgw;	c	cursor
	f	Lgt$a;	d	pos
	f	Ledx;	e	entityShape
	f	Lcls;	f	collisionGetter
	f	Z	g	onlySuffocatingBlocks
	f	Lclo;	h	cachedBlockGetter
	f	J	i	cachedBlockGetterPos
c	cln	net/minecraft/world/level/BlockEventData
	m	(Lgt;Lcpi;II)V	<init>	<init>
		p	1		pos
		p	2		block
		p	3		type
		p	4		data
	m	()Lgt;	a	pos
	m	()Lcpi;	b	block
	m	()I	c	paramA
	m	()I	d	paramB
	f	Lgt;	a	pos
	f	Lcpi;	b	block
	f	I	c	paramA
	f	I	d	paramB
c	clo	net/minecraft/world/level/BlockGetter
	m	()I	L	getMaxLightLevel
	m	(Lclq;)Leda;	a	isBlockInLine
		p	1		context
	m	(Lclq;Lgt;)Leda;	a	lambda$isBlockInLine$0
		p	1		context
		p	2		pos
	m	(Lclr;)Leda;	a	clip
		p	1		context
	m	(Lclr;Lgt;)Leda;	a	lambda$clip$2
		p	1		context
		p	2		pos
	m	(Lecz;)Ljava/util/stream/Stream;	a	getBlockStates
		p	1		box
	m	(Lede;Lede;Lgt;Ledx;Ldbq;)Leda;	a	clipWithInteractionOverride
		p	1		start
		p	2		end
		p	3		pos
		p	4		shape
		p	5		state
	m	(Lede;Lede;Ljava/lang/Object;Ljava/util/function/BiFunction;Ljava/util/function/Function;)Ljava/lang/Object;	a	traverseBlocks
		p	0		start
		p	1		end
		p	2		context
		p	3		blockHitFactory
		p	4		missFactory
	m	(Ledx;Ljava/util/function/Supplier;)D	a	getBlockFloorHeight
		p	1		blockCollisionShape
		p	2		belowBlockCollisionShapeGetter
	m	(Lgt;Lczg;)Ljava/util/Optional;	a	getBlockEntity
		p	1		pos
		p	2		type
	m	(Lgt;)Ldbq;	a_	getBlockState
		p	1		pos
	m	(Lclq;)Leda;	b	lambda$isBlockInLine$1
		p	0		context
	m	(Lclr;)Leda;	b	lambda$clip$3
		p	0		context
	m	(Lgt;)Ldwj;	b_	getFluidState
		p	1		pos
	m	(Lgt;)Lcze;	c_	getBlockEntity
		p	1		pos
	m	(Lgt;)Ledx;	f	lambda$getBlockFloorHeight$4
	m	(Lgt;)I	h	getLightEmission
		p	1		pos
	m	(Lgt;)D	i	getBlockFloorHeight
		p	1		pos
c	clp	net/minecraft/world/level/ChunkPos
	m	(II)V	<init>	<init>
		p	1		x
		p	2		z
	m	(J)V	<init>	<init>
		p	1		pos
	m	(Lgt;)V	<init>	<init>
		p	1		pos
	m	()J	a	toLong
	m	(I)I	a	getBlockX
		p	1		offset
	m	(II)Lclp;	a	minFromRegion
		p	0		x
		p	1		z
	m	(III)Lgt;	a	getBlockAt
		p	1		offsetX
		p	2		y
		p	3		offsetZ
	m	(J)I	a	getX
		p	0		pos
	m	(Lclp;)I	a	getChessboardDistance
		p	1		pos
	m	(Lclp;I)Ljava/util/stream/Stream;	a	rangeClosed
		p	0		center
		p	1		radius
	m	(Lclp;Lclp;)Ljava/util/stream/Stream;	a	rangeClosed
		p	0		pos1
		p	1		pos2
	m	(Lgt;)J	a	asLong
		p	0		pos
	m	()I	b	getMiddleBlockX
	m	(I)I	b	getBlockZ
		p	1		offset
	m	(II)Lclp;	b	maxFromRegion
		p	0		x
		p	1		z
	m	(J)I	b	getZ
		p	0		pos
	m	()I	c	getMiddleBlockZ
	m	(I)Lgt;	c	getMiddleBlockPosition
		p	1		y
	m	(II)J	c	asLong
		p	0		chunkX
		p	1		chunkZ
	m	()I	d	getMinBlockX
	m	(II)I	d	hash
		p	0		x
		p	1		z
	m	()I	e	getMinBlockZ
	m	()I	f	getMaxBlockX
	m	()I	g	getMaxBlockZ
	m	()I	h	getRegionX
	m	()I	i	getRegionZ
	m	()I	j	getRegionLocalX
	m	()I	k	getRegionLocalZ
	m	()Lgt;	l	getWorldPosition
	f	J	a	INVALID_CHUNK_POS
	f	Lclp;	b	ZERO
	f	I	c	REGION_SIZE
	f	I	d	REGION_MAX_INDEX
	f	I	e	x
	f	I	f	z
	f	I	g	SAFETY_MARGIN
	f	J	h	COORD_BITS
	f	J	i	COORD_MASK
	f	I	j	REGION_BITS
	f	I	k	REGION_MASK
	f	I	l	HASH_A
	f	I	m	HASH_C
	f	I	n	HASH_Z_XOR
c	clp$1	net/minecraft/world/level/ChunkPos$1
	f	Lclp;	a	val$from
	f	Lclp;	b	val$to
	f	I	c	val$zDiff
	f	I	d	val$xDiff
	f	Lclp;	e	pos
c	clq	net/minecraft/world/level/ClipBlockStateContext
	m	(Lede;Lede;Ljava/util/function/Predicate;)V	<init>	<init>
		p	1		start
		p	2		end
		p	3		statePredicate
	m	()Lede;	a	getTo
	m	()Lede;	b	getFrom
	m	()Ljava/util/function/Predicate;	c	isTargetBlock
	f	Lede;	a	from
	f	Lede;	b	to
	f	Ljava/util/function/Predicate;	c	block
c	clr	net/minecraft/world/level/ClipContext
	m	(Lede;Lede;Lclr$a;Lclr$b;Lbfh;)V	<init>	<init>
		p	1		start
		p	2		end
		p	3		shapeType
		p	4		fluidHandling
		p	5		entity
	m	()Lede;	a	getTo
	m	(Ldbq;Lclo;Lgt;)Ledx;	a	getBlockShape
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldwj;Lclo;Lgt;)Ledx;	a	getFluidShape
		p	1		state
		p	2		world
		p	3		pos
	m	()Lede;	b	getFrom
	f	Lede;	a	from
	f	Lede;	b	to
	f	Lclr$a;	c	block
	f	Lclr$b;	d	fluid
	f	Ledj;	e	collisionContext
c	clr$a	net/minecraft/world/level/ClipContext$Block
	m	(Ljava/lang/String;ILclr$c;)V	<init>	<init>
		p	3		provider
	m	()[Lclr$a;	a	$values
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	lambda$static$0
		p	0		state
		p	1		world
		p	2		pos
		p	3		context
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	get	get
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	f	Lclr$a;	a	COLLIDER
	f	Lclr$a;	b	OUTLINE
	f	Lclr$a;	c	VISUAL
	f	Lclr$a;	d	FALLDAMAGE_RESETTING
	f	Lclr$c;	e	shapeGetter
	f	[Lclr$a;	f	$VALUES
c	clr$b	net/minecraft/world/level/ClipContext$Fluid
	m	(Ljava/lang/String;ILjava/util/function/Predicate;)V	<init>	<init>
		p	3		predicate
	m	()[Lclr$b;	a	$values
	m	(Ldwj;)Z	a	canPick
		p	1		state
	m	(Ldwj;)Z	b	lambda$static$2
		p	0		state
	m	(Ldwj;)Z	c	lambda$static$1
		p	0		state
	m	(Ldwj;)Z	d	lambda$static$0
		p	0		state
	f	Lclr$b;	a	NONE
	f	Lclr$b;	b	SOURCE_ONLY
	f	Lclr$b;	c	ANY
	f	Lclr$b;	d	WATER
	f	Ljava/util/function/Predicate;	e	canPick
	f	[Lclr$b;	f	$VALUES
c	clr$c	net/minecraft/world/level/ClipContext$ShapeGetter
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	get	get
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
c	cls	net/minecraft/world/level/CollisionGetter
	m	(DDDLecz;)Lecz;	a	lambda$findFreePosition$3
	m	(Lbfh;Lecz;)Z	a	noCollision
		p	1		entity
		p	2		box
	m	(Lbfh;Ledx;)Z	a	isUnobstructed
		p	1		except
		p	2		shape
	m	(Lbfh;Ledx;Lede;DDD)Ljava/util/Optional;	a	findFreePosition
		p	1		entity
		p	2		shape
		p	3		target
		p	4		x
		p	6		y
		p	8		z
	m	(Ldbq;Lgt;Ledj;)Z	a	isUnobstructed
		p	1		state
		p	2		pos
		p	3		context
	m	(Ledx;)Ljava/util/stream/Stream;	a	lambda$findFreePosition$2
	m	(Lbfh;Lecz;)Ljava/util/List;	b	getEntityCollisions
		p	1		entity
		p	2		box
	m	(Lecz;)Z	b	noCollision
		p	1		box
	m	(Ledx;)Z	b	lambda$findFreePosition$1
	m	(II)Lclo;	c	getChunkForCollisions
		p	1		chunkX
		p	2		chunkZ
	m	(Lbfh;Lecz;)Ljava/lang/Iterable;	c	getCollisions
		p	1		entity
		p	2		box
	m	(Lbfh;Lecz;)Ljava/lang/Iterable;	d	getBlockCollisions
		p	1		entity
		p	2		box
	m	(Lbfh;Lecz;)Z	e	collidesWithSuffocatingBlock
		p	1		entity
		p	2		box
	m	(Lbfh;)Z	f	isUnobstructed
		p	1		entity
	m	(Lbfh;Lecz;)Ledx;	f	borderCollision
		p	1		entity
		p	2		box
	m	(Lbfh;)Z	g	noCollision
		p	1		entity
	m	(Lbfh;Lecz;)Ljava/util/Iterator;	g	lambda$getBlockCollisions$0
	m	()Lddi;	p_	getWorldBorder
c	clt	net/minecraft/world/level/ColorResolver
	m	(Lcnf;DD)I	getColor	getColor
		p	1		biome
		p	2		x
		p	4		z
c	clu	net/minecraft/world/level/CommonLevelAccessor
	m	(Lbfh;Ledx;)Z	a	isUnobstructed
		p	1		except
		p	2		shape
	m	(Ldgz$a;Lgt;)Lgt;	a	getHeightmapPos
		p	1		heightmap
		p	2		pos
	m	(Lgt;Lczg;)Ljava/util/Optional;	a	getBlockEntity
		p	1		pos
		p	2		type
	m	(Lbfh;Lecz;)Ljava/util/List;	b	getEntityCollisions
		p	1		entity
		p	2		box
c	clv	net/minecraft/world/level/CustomSpawner
	m	(Laip;ZZ)I	a	tick
		p	1		world
		p	2		spawnMonsters
		p	3		spawnAnimals
c	clw	net/minecraft/world/level/DataPackConfig
	m	(Ljava/util/List;Ljava/util/List;)V	<init>	<init>
		p	1		enabled
		p	2		disabled
	m	()Ljava/util/List;	a	getEnabled
	m	(Lclw;)Ljava/util/List;	a	lambda$static$1
		p	0		settings
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	()Ljava/util/List;	b	getDisabled
	m	(Lclw;)Ljava/util/List;	b	lambda$static$0
		p	0		settings
	f	Lclw;	a	DEFAULT
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Ljava/util/List;	c	enabled
	f	Ljava/util/List;	d	disabled
c	clx	net/minecraft/world/level/EmptyBlockGetter
	m	()[Lclx;	a	$values
	m	(Lgt;)Ldbq;	a_	getBlockState
		p	1		pos
	m	(Lgt;)Ldwj;	b_	getFluidState
		p	1		pos
	m	(Lgt;)Lcze;	c_	getBlockEntity
		p	1		pos
	m	()I	v_	getMinBuildHeight
	m	()I	w_	getHeight
	f	Lclx;	a	INSTANCE
	f	[Lclx;	b	$VALUES
c	cly	net/minecraft/world/level/EntityBasedExplosionDamageCalculator
	m	(Lbfh;)V	<init>	<init>
		p	1		entity
	m	(Lcma;Lclo;Lgt;Ldbq;F)Z	a	shouldBlockExplode
		p	1		explosion
		p	2		world
		p	3		pos
		p	4		state
		p	5		power
	m	(Lcma;Lclo;Lgt;Ldbq;Ldwj;)Ljava/util/Optional;	a	getBlockExplosionResistance
		p	1		explosion
		p	2		world
		p	3		pos
		p	4		blockState
		p	5		fluidState
	m	(Lcma;Lclo;Lgt;Ldbq;Ldwj;Ljava/lang/Float;)Ljava/lang/Float;	a	lambda$getBlockExplosionResistance$0
		p	6		max
	f	Lbfh;	a	source
c	clz	net/minecraft/world/level/EntityGetter
	m	(DDDD)Z	a	hasNearbyAlivePlayer
		p	1		x
		p	3		y
		p	5		z
		p	7		range
	m	(DDDDLjava/util/function/Predicate;)Lbym;	a	getNearestPlayer
		p	1		x
		p	3		y
		p	5		z
		p	7		maxDistance
		p	9		targetPredicate
	m	(DDDDZ)Lbym;	a	getNearestPlayer
		p	1		x
		p	3		y
		p	5		z
		p	7		maxDistance
		p	9		ignoreCreative
	m	(Lbfh;D)Lbym;	a	getNearestPlayer
		p	1		entity
		p	2		maxDistance
	m	(Lbfh;Lecz;Ljava/util/function/Predicate;)Ljava/util/List;	a	getEntities
		p	1		except
		p	2		box
		p	3		predicate
	m	(Lbfh;Ledx;)Z	a	isUnobstructed
		p	1		except
		p	2		shape
	m	(Lbfx;)Z	a	lambda$getNearbyEntities$1
	m	(Lbqk;DDD)Lbym;	a	getNearestPlayer
		p	1		targetPredicate
		p	2		x
		p	4		y
		p	6		z
	m	(Lbqk;Lbfx;)Lbym;	a	getNearestPlayer
		p	1		targetPredicate
		p	2		entity
	m	(Lbqk;Lbfx;DDD)Lbym;	a	getNearestPlayer
		p	1		targetPredicate
		p	2		entity
		p	3		x
		p	5		y
		p	7		z
	m	(Lbqk;Lbfx;Lecz;)Ljava/util/List;	a	getNearbyPlayers
		p	1		targetPredicate
		p	2		entity
		p	3		box
	m	(Ldfo;Lecz;Ljava/util/function/Predicate;)Ljava/util/List;	a	getEntities
		p	1		filter
		p	2		box
		p	3		predicate
	m	(Ljava/lang/Class;Lbqk;Lbfx;DDDLecz;)Lbfx;	a	getNearestEntity
		p	1		entityClass
		p	2		targetPredicate
		p	3		entity
		p	4		x
		p	6		y
		p	8		z
		p	10		box
	m	(Ljava/lang/Class;Lbqk;Lbfx;Lecz;)Ljava/util/List;	a	getNearbyEntities
		p	1		entityClass
		p	2		targetPredicate
		p	3		targetingEntity
		p	4		box
	m	(Ljava/lang/Class;Lecz;)Ljava/util/List;	a	getEntitiesOfClass
		p	1		entityClass
		p	2		box
	m	(Ljava/lang/Class;Lecz;Ljava/util/function/Predicate;)Ljava/util/List;	a	getEntitiesOfClass
		p	1		entityClass
		p	2		box
		p	3		predicate
	m	(Ljava/util/List;Lbqk;Lbfx;DDD)Lbfx;	a	getNearestEntity
		p	1		entityList
		p	2		targetPredicate
		p	3		entity
		p	4		x
		p	6		y
		p	8		z
	m	(Lbfh;Lecz;)Ljava/util/List;	a_	getEntities
		p	1		except
		p	2		box
	m	(Lbfh;Lecz;)Ljava/util/List;	b	getEntityCollisions
		p	1		entity
		p	2		box
	m	(Lbfx;)Z	b	lambda$getNearestEntity$0
		p	0		entity
	m	(Ljava/util/UUID;)Lbym;	b	getPlayerByUUID
		p	1		uuid
	m	()Ljava/util/List;	v	players
c	cma	net/minecraft/world/level/Explosion
	m	(Lcmi;Lbfh;DDDFLjava/util/List;)V	<init>	<init>
		p	1		world
		p	2		entity
		p	3		x
		p	5		y
		p	7		z
		p	9		power
		p	10		affectedBlocks
	m	(Lcmi;Lbfh;DDDFZLcma$a;)V	<init>	<init>
		p	1		world
		p	2		entity
		p	3		x
		p	5		y
		p	7		z
		p	9		power
		p	10		createFire
		p	11		destructionType
	m	(Lcmi;Lbfh;DDDFZLcma$a;Ljava/util/List;)V	<init>	<init>
		p	1		world
		p	2		entity
		p	3		x
		p	5		y
		p	7		z
		p	9		power
		p	10		createFire
		p	11		destructionType
		p	12		affectedBlocks
	m	(Lcmi;Lbfh;Lbem;Lcmb;DDDFZLcma$a;)V	<init>	<init>
		p	1		world
		p	2		entity
		p	3		damageSource
		p	4		behavior
		p	5		x
		p	7		y
		p	9		z
		p	11		power
		p	12		createFire
		p	13		destructionType
	m	()V	a	explode
	m	(Lbfh;)Lcmb;	a	makeDamageCalculator
		p	1		entity
	m	(Lede;Lbfh;)F	a	getSeenPercent
		p	0		source
		p	1		entity
	m	(Lit/unimi/dsi/fastutil/objects/ObjectArrayList;Lcfv;Lgt;)V	a	addBlockDrops
		p	0		stacks
		p	1		stack
		p	2		pos
	m	(Lit/unimi/dsi/fastutil/objects/ObjectArrayList;Lgt;Lcfv;)V	a	lambda$finalizeExplosion$0
		p	2		stack
	m	(Z)V	a	finalizeExplosion
		p	1		particles
	m	()Z	b	interactsWithBlocks
	m	()Lbem;	c	getDamageSource
	m	()Ljava/util/Map;	d	getHitPlayers
	m	()Lbfx;	e	getIndirectSourceEntity
	m	()Lbfh;	f	getDirectSourceEntity
	m	()V	g	clearToBlow
	m	()Ljava/util/List;	h	getToBlow
	f	Lcmb;	a	EXPLOSION_DAMAGE_CALCULATOR
	f	I	b	MAX_DROPS_PER_COMBINED_STACK
	f	Z	c	fire
	f	Lcma$a;	d	blockInteraction
	f	Lapo;	e	random
	f	Lcmi;	f	level
	f	D	g	x
	f	D	h	y
	f	D	i	z
	f	Lbfh;	j	source
	f	F	k	radius
	f	Lbem;	l	damageSource
	f	Lcmb;	m	damageCalculator
	f	Lit/unimi/dsi/fastutil/objects/ObjectArrayList;	n	toBlow
	f	Ljava/util/Map;	o	hitPlayers
c	cma$a	net/minecraft/world/level/Explosion$BlockInteraction
	m	()[Lcma$a;	a	$values
	f	Lcma$a;	a	KEEP
	f	Lcma$a;	b	DESTROY
	f	Lcma$a;	c	DESTROY_WITH_DECAY
	f	[Lcma$a;	d	$VALUES
c	cmb	net/minecraft/world/level/ExplosionDamageCalculator
	m	(Lcma;Lclo;Lgt;Ldbq;F)Z	a	shouldBlockExplode
		p	1		explosion
		p	2		world
		p	3		pos
		p	4		state
		p	5		power
	m	(Lcma;Lclo;Lgt;Ldbq;Ldwj;)Ljava/util/Optional;	a	getBlockExplosionResistance
		p	1		explosion
		p	2		world
		p	3		pos
		p	4		blockState
		p	5		fluidState
c	cmc	net/minecraft/world/level/FoliageColor
	m	()I	a	getEvergreenColor
	m	(DD)I	a	get
		p	0		temperature
		p	2		humidity
	m	([I)V	a	init
		p	0		pixels
	m	()I	b	getBirchColor
	m	()I	c	getDefaultColor
	m	()I	d	getMangroveColor
	f	[I	a	pixels
c	cmd	net/minecraft/world/level/ForcedChunksSavedData
	m	(Lit/unimi/dsi/fastutil/longs/LongSet;)V	<init>	<init>
		p	1		chunks
	m	()Lit/unimi/dsi/fastutil/longs/LongSet;	a	getChunks
	m	(Lre;)Lre;	a	save
		p	1		nbt
	m	(Lre;)Lcmd;	b	load
		p	0		nbt
	f	Ljava/lang/String;	a	FILE_ID
	f	Ljava/lang/String;	b	TAG_FORCED
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	c	chunks
c	cme	net/minecraft/world/level/GameRules
	m	(Lcom/mojang/serialization/DynamicLike;)V	<init>	<init>
		p	1		dynamic
	m	(Ljava/util/Map;)V	<init>	<init>
		p	1		rules
	m	()Lre;	a	createTag
	m	(Lcme$c;)V	a	visitGameRuleTypes
		p	0		visitor
	m	(Lcme$c;Lcme$e;Lcme$f;)V	a	callVisitorCap
		p	0		consumer
		p	1		key
		p	2		type
	m	(Lcme$e;)Lcme$g;	a	getRule
		p	1		key
	m	(Lcme$e;Lcme;Lnet/minecraft/server/MinecraftServer;)V	a	assignCap
		p	1		key
		p	2		rules
		p	3		server
	m	(Lcme;Lnet/minecraft/server/MinecraftServer;)V	a	assignFrom
		p	1		rules
		p	2		server
	m	(Lcme;Lnet/minecraft/server/MinecraftServer;Lcme$e;)V	a	lambda$assignFrom$8
		p	3		key
	m	(Lcom/mojang/serialization/DynamicLike;)V	a	loadFromTag
		p	1		dynamic
	m	(Lcom/mojang/serialization/DynamicLike;Lcme$e;Lcme$g;)V	a	lambda$loadFromTag$5
		p	1		key
		p	2		rule
	m	(Ljava/lang/String;Lcme$b;Lcme$f;)Lcme$e;	a	register
		p	0		name
		p	1		category
		p	2		type
	m	(Ljava/util/Map$Entry;)Lcme$g;	a	lambda$copy$6
		p	0		entry
	m	(Lnet/minecraft/server/MinecraftServer;Lcme$a;)V	a	lambda$static$2
		p	0		server
		p	1		rule
	m	(Lre;Lcme$e;Lcme$g;)V	a	lambda$createTag$4
		p	1		key
		p	2		rule
	m	()Lcme;	b	copy
	m	(Lcme$c;Lcme$e;Lcme$f;)V	b	lambda$visitGameRuleTypes$7
		p	1		key
		p	2		type
	m	(Lcme$e;)Z	b	getBoolean
		p	1		rule
	m	(Ljava/util/Map$Entry;)Lcme$g;	b	lambda$new$3
		p	0		e
	m	(Lnet/minecraft/server/MinecraftServer;Lcme$a;)V	b	lambda$static$1
		p	0		server
		p	1		rule
	m	(Lcme$e;)I	c	getInt
		p	1		rule
	m	(Lcme$e;)Ljava/lang/String;	d	lambda$static$0
		p	0		key
	f	Lcme$e;	A	RULE_DOINSOMNIA
	f	Lcme$e;	B	RULE_DO_IMMEDIATE_RESPAWN
	f	Lcme$e;	C	RULE_DROWNING_DAMAGE
	f	Lcme$e;	D	RULE_FALL_DAMAGE
	f	Lcme$e;	E	RULE_FIRE_DAMAGE
	f	Lcme$e;	F	RULE_FREEZE_DAMAGE
	f	Lcme$e;	G	RULE_DO_PATROL_SPAWNING
	f	Lcme$e;	H	RULE_DO_TRADER_SPAWNING
	f	Lcme$e;	I	RULE_DO_WARDEN_SPAWNING
	f	Lcme$e;	J	RULE_FORGIVE_DEAD_PLAYERS
	f	Lcme$e;	K	RULE_UNIVERSAL_ANGER
	f	Lcme$e;	L	RULE_PLAYERS_SLEEPING_PERCENTAGE
	f	Lcme$e;	M	RULE_BLOCK_EXPLOSION_DROP_DECAY
	f	Lcme$e;	N	RULE_MOB_EXPLOSION_DROP_DECAY
	f	Lcme$e;	O	RULE_TNT_EXPLOSION_DROP_DECAY
	f	Lcme$e;	P	RULE_SNOW_ACCUMULATION_HEIGHT
	f	Lcme$e;	Q	RULE_WATER_SOURCE_CONVERSION
	f	Lcme$e;	R	RULE_LAVA_SOURCE_CONVERSION
	f	Lcme$e;	S	RULE_GLOBAL_SOUND_EVENTS
	f	Lcme$e;	T	RULE_DO_VINES_SPREAD
	f	Lorg/slf4j/Logger;	U	LOGGER
	f	Ljava/util/Map;	V	GAME_RULE_TYPES
	f	Ljava/util/Map;	W	rules
	f	I	a	DEFAULT_RANDOM_TICK_SPEED
	f	Lcme$e;	b	RULE_DOFIRETICK
	f	Lcme$e;	c	RULE_MOBGRIEFING
	f	Lcme$e;	d	RULE_KEEPINVENTORY
	f	Lcme$e;	e	RULE_DOMOBSPAWNING
	f	Lcme$e;	f	RULE_DOMOBLOOT
	f	Lcme$e;	g	RULE_DOBLOCKDROPS
	f	Lcme$e;	h	RULE_DOENTITYDROPS
	f	Lcme$e;	i	RULE_COMMANDBLOCKOUTPUT
	f	Lcme$e;	j	RULE_NATURAL_REGENERATION
	f	Lcme$e;	k	RULE_DAYLIGHT
	f	Lcme$e;	l	RULE_LOGADMINCOMMANDS
	f	Lcme$e;	m	RULE_SHOWDEATHMESSAGES
	f	Lcme$e;	n	RULE_RANDOMTICKING
	f	Lcme$e;	o	RULE_SENDCOMMANDFEEDBACK
	f	Lcme$e;	p	RULE_REDUCEDDEBUGINFO
	f	Lcme$e;	q	RULE_SPECTATORSGENERATECHUNKS
	f	Lcme$e;	r	RULE_SPAWN_RADIUS
	f	Lcme$e;	s	RULE_DISABLE_ELYTRA_MOVEMENT_CHECK
	f	Lcme$e;	t	RULE_MAX_ENTITY_CRAMMING
	f	Lcme$e;	u	RULE_WEATHER_CYCLE
	f	Lcme$e;	v	RULE_LIMITED_CRAFTING
	f	Lcme$e;	w	RULE_MAX_COMMAND_CHAIN_LENGTH
	f	Lcme$e;	x	RULE_COMMAND_MODIFICATION_BLOCK_LIMIT
	f	Lcme$e;	y	RULE_ANNOUNCE_ADVANCEMENTS
	f	Lcme$e;	z	RULE_DISABLE_RAIDS
c	cme$a	net/minecraft/world/level/GameRules$BooleanValue
	m	(Lcme$f;Z)V	<init>	<init>
		p	1		type
		p	2		initialValue
	m	()Z	a	get
	m	(Lcme$a;Lnet/minecraft/server/MinecraftServer;)V	a	setFrom
		p	1		rule
		p	2		server
	m	(Lcme$g;Lnet/minecraft/server/MinecraftServer;)V	a	setFrom
		p	1		rule
		p	2		server
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)V	a	updateFromArgument
		p	1		context
		p	2		name
	m	(Ljava/lang/String;)V	a	deserialize
		p	1		value
	m	(Lnet/minecraft/server/MinecraftServer;Lcme$a;)V	a	lambda$create$1
		p	0		server
		p	1		rule
	m	(Z)Lcme$f;	a	create
		p	0		initialValue
	m	(ZLcme$f;)Lcme$a;	a	lambda$create$0
		p	1		type
	m	(ZLjava/util/function/BiConsumer;)Lcme$f;	a	create
		p	0		initialValue
		p	1		changeCallback
	m	(ZLnet/minecraft/server/MinecraftServer;)V	a	set
		p	1		value
		p	2		server
	m	()Ljava/lang/String;	b	serialize
	m	()I	c	getCommandResult
	m	()Lcme$a;	d	getSelf
	m	()Lcme$a;	e	copy
	m	()Lcme$g;	f	copy
	m	()Lcme$g;	g	getSelf
	f	Z	b	value
c	cme$b	net/minecraft/world/level/GameRules$Category
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		category
	m	()Ljava/lang/String;	a	getDescriptionId
	m	()[Lcme$b;	b	$values
	f	Lcme$b;	a	PLAYER
	f	Lcme$b;	b	MOBS
	f	Lcme$b;	c	SPAWNING
	f	Lcme$b;	d	DROPS
	f	Lcme$b;	e	UPDATES
	f	Lcme$b;	f	CHAT
	f	Lcme$b;	g	MISC
	f	Ljava/lang/String;	h	descriptionId
	f	[Lcme$b;	i	$VALUES
c	cme$c	net/minecraft/world/level/GameRules$GameRuleTypeVisitor
	m	(Lcme$e;Lcme$f;)V	a	visit
		p	1		key
		p	2		type
	m	(Lcme$e;Lcme$f;)V	b	visitBoolean
		p	1		key
		p	2		type
	m	(Lcme$e;Lcme$f;)V	c	visitInteger
		p	1		key
		p	2		type
c	cme$d	net/minecraft/world/level/GameRules$IntegerValue
	m	(Lcme$f;I)V	<init>	<init>
		p	1		rule
		p	2		initialValue
	m	()I	a	get
	m	(I)Lcme$f;	a	create
		p	0		initialValue
	m	(ILcme$f;)Lcme$d;	a	lambda$create$0
		p	1		type
	m	(ILjava/util/function/BiConsumer;)Lcme$f;	a	create
		p	0		initialValue
		p	1		changeCallback
	m	(ILnet/minecraft/server/MinecraftServer;)V	a	set
		p	1		value
		p	2		server
	m	(Lcme$d;Lnet/minecraft/server/MinecraftServer;)V	a	setFrom
		p	1		rule
		p	2		server
	m	(Lcme$g;Lnet/minecraft/server/MinecraftServer;)V	a	setFrom
		p	1		rule
		p	2		server
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)V	a	updateFromArgument
		p	1		context
		p	2		name
	m	(Ljava/lang/String;)V	a	deserialize
		p	1		value
	m	(Lnet/minecraft/server/MinecraftServer;Lcme$d;)V	a	lambda$create$1
		p	0		server
		p	1		rule
	m	()Ljava/lang/String;	b	serialize
	m	(Ljava/lang/String;)Z	b	tryDeserialize
		p	1		input
	m	()I	c	getCommandResult
	m	(Ljava/lang/String;)I	c	safeParse
		p	0		input
	m	()Lcme$d;	d	getSelf
	m	()Lcme$d;	e	copy
	m	()Lcme$g;	f	copy
	m	()Lcme$g;	g	getSelf
	f	I	b	value
c	cme$e	net/minecraft/world/level/GameRules$Key
	m	(Ljava/lang/String;Lcme$b;)V	<init>	<init>
		p	1		name
		p	2		category
	m	()Ljava/lang/String;	a	getId
	m	()Ljava/lang/String;	b	getDescriptionId
	m	()Lcme$b;	c	getCategory
	f	Ljava/lang/String;	a	id
	f	Lcme$b;	b	category
c	cme$f	net/minecraft/world/level/GameRules$Type
	m	(Ljava/util/function/Supplier;Ljava/util/function/Function;Ljava/util/function/BiConsumer;Lcme$h;)V	<init>	<init>
		p	1		argumentType
		p	2		ruleFactory
		p	3		changeCallback
		p	4		ruleAcceptor
	m	()Lcme$g;	a	createRule
	m	(Lcme$c;Lcme$e;)V	a	callVisitor
		p	1		consumer
		p	2		key
	m	(Ljava/lang/String;)Lcom/mojang/brigadier/builder/RequiredArgumentBuilder;	a	createArgument
		p	1		name
	f	Ljava/util/function/Supplier;	a	argument
	f	Ljava/util/function/Function;	b	constructor
	f	Ljava/util/function/BiConsumer;	c	callback
	f	Lcme$h;	d	visitorCaller
c	cme$g	net/minecraft/world/level/GameRules$Value
	m	(Lcme$f;)V	<init>	<init>
		p	1		type
	m	(Lcme$g;Lnet/minecraft/server/MinecraftServer;)V	a	setFrom
		p	1		rule
		p	2		server
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)V	a	updateFromArgument
		p	1		context
		p	2		name
	m	(Ljava/lang/String;)V	a	deserialize
		p	1		value
	m	(Lnet/minecraft/server/MinecraftServer;)V	a	onChanged
		p	1		server
	m	()Ljava/lang/String;	b	serialize
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)V	b	setFromArgument
		p	1		context
		p	2		name
	m	()I	c	getCommandResult
	m	()Lcme$g;	f	copy
	m	()Lcme$g;	g	getSelf
	f	Lcme$f;	a	type
c	cme$h	net/minecraft/world/level/GameRules$VisitorCaller
	m	(Lcme$c;Lcme$e;Lcme$f;)V	call	call
		p	1		consumer
		p	2		key
		p	3		type
c	cmf	net/minecraft/world/level/GameType
	m	(Ljava/lang/String;IILjava/lang/String;)V	<init>	<init>
		p	3		id
		p	4		name
	m	()I	a	getId
	m	(I)Lcmf;	a	byId
		p	0		id
	m	(Lbyj;)V	a	updatePlayerAbilities
		p	1		abilities
	m	(Lcmf;)I	a	getNullableId
		p	0		gameMode
	m	(Ljava/lang/String;)Lcmf;	a	byName
		p	0		name
	m	(Ljava/lang/String;Lcmf;)Lcmf;	a	byName
		p	0		name
		p	1		defaultMode
	m	()Ljava/lang/String;	b	getName
	m	(I)Lcmf;	b	byNullableId
		p	0		id
	m	()Ljava/lang/String;	c	getSerializedName
	m	()Ltj;	d	getLongDisplayName
	m	()Ltj;	e	getShortDisplayName
	m	()Z	f	isBlockPlacingRestricted
	m	()Z	g	isCreative
	m	()Z	h	isSurvival
	m	()[Lcmf;	i	$values
	f	Lcmf;	a	SURVIVAL
	f	Lcmf;	b	CREATIVE
	f	Lcmf;	c	ADVENTURE
	f	Lcmf;	d	SPECTATOR
	f	Lcmf;	e	DEFAULT_MODE
	f	Laqa$a;	f	CODEC
	f	Ljava/util/function/IntFunction;	g	BY_ID
	f	I	h	NOT_SET
	f	I	i	id
	f	Ljava/lang/String;	j	name
	f	Ltj;	k	shortName
	f	Ltj;	l	longName
	f	[Lcmf;	m	$VALUES
c	cmg	net/minecraft/world/level/GrassColor
	m	()I	a	getDefaultColor
	m	(DD)I	a	get
		p	0		temperature
		p	2		humidity
	m	([I)V	a	init
		p	0		map
	f	[I	a	pixels
c	cmh	net/minecraft/world/level/ItemLike
	m	()Lcfq;	k	asItem
c	cmi	net/minecraft/world/level/Level
	m	(Ldyl;Ladc;Lhr;Lhd;Ljava/util/function/Supplier;ZZJI)V	<init>	<init>
		p	1		properties
		p	2		registryRef
		p	3		registryManager
		p	4		dimensionEntry
		p	5		profiler
		p	6		isClient
		p	7		debugWorld
		p	8		biomeAccess
		p	10		maxChainedNeighborUpdates
	m	()Ldfq;	E	getEntities
	m	(Lgt;)Z	E	isInWorldBoundsHorizontal
		p	0		pos
	m	()Ljava/lang/String;	F	gatherChunkSourceStats
	m	()Leec;	H	getScoreboard
	m	()Z	M	isDay
	m	()Z	N	isNight
	m	()V	O	tickBlockEntities
	m	()V	P	updateSkyBrightness
	m	()Lgt;	Q	getSharedSpawnPos
	m	()F	R	getSharedSpawnAngle
	m	()V	S	prepareWeather
	m	()V	T	disconnect
	m	()J	U	getGameTime
	m	()J	V	getDayTime
	m	()Lcme;	W	getGameRules
	m	()Z	X	isThundering
	m	()Z	Y	isRaining
	m	()Ladc;	Z	dimensionTypeId
	m	()Ljava/lang/String;	a	lambda$fillReportDetails$4
	m	(DDDDDDLre;)V	a	createFireworks
		p	1		x
		p	3		y
		p	5		z
		p	7		velocityX
		p	9		velocityY
		p	11		velocityZ
		p	13		nbt
	m	(DDDLamq;Lams;FFZ)V	a	playLocalSound
		p	1		x
		p	3		y
		p	5		z
		p	7		sound
		p	8		category
		p	9		volume
		p	10		pitch
		p	11		useDistance
	m	(F)F	a	getSunAngle
		p	1		tickDelta
	m	(I)Lbfh;	a	getEntity
		p	1		id
	m	(II)Lddn;	a	getChunk
		p	1		chunkX
		p	2		chunkZ
	m	(IIII)Lgt;	a	getBlockRandomPos
		p	1		x
		p	2		y
		p	3		z
	m	(IILdds;Z)Lddn;	a	getChunk
		p	1		chunkX
		p	2		chunkZ
		p	3		leastStatus
		p	4		create
	m	(ILgt;I)V	a	destroyBlockProgress
		p	1		entityId
		p	2		pos
		p	3		progress
	m	(J)Z	a	shouldTickBlocksAt
		p	1		chunkPos
	m	(Lbfh;B)V	a	broadcastEntityEvent
		p	1		entity
		p	2		status
	m	(Lbfh;DDDFLcmi$a;)Lcma;	a	explode
		p	1		entity
		p	2		x
		p	4		y
		p	6		z
		p	8		power
		p	9		explosionSourceType
	m	(Lbfh;DDDFZLcmi$a;)Lcma;	a	explode
		p	1		entity
		p	2		x
		p	4		y
		p	6		z
		p	8		power
		p	9		createFire
		p	10		explosionSourceType
	m	(Lbfh;Lbem;)V	a	broadcastDamageEvent
		p	1		entity
		p	2		damageSource
	m	(Lbfh;Lbem;Lcmb;DDDFZLcmi$a;)Lcma;	a	explode
		p	1		entity
		p	2		damageSource
		p	3		behavior
		p	4		x
		p	6		y
		p	8		z
		p	10		power
		p	11		createFire
		p	12		explosionSourceType
	m	(Lbfh;Lbem;Lcmb;DDDFZLcmi$a;Z)Lcma;	a	explode
		p	1		entity
		p	2		damageSource
		p	3		behavior
		p	4		x
		p	6		y
		p	8		z
		p	10		power
		p	11		createFire
		p	12		explosionSourceType
		p	13		particles
	m	(Lbfh;Lbem;Lcmb;Lede;FZLcmi$a;)Lcma;	a	explode
		p	1		entity
		p	2		damageSource
		p	3		behavior
		p	4		pos
		p	5		power
		p	6		createFire
		p	7		explosionSourceType
	m	(Lbfh;Lecz;Ljava/util/function/Predicate;)Ljava/util/List;	a	getEntities
		p	1		except
		p	2		box
		p	3		predicate
	m	(Lbfh;Lgt;Lamq;Lams;FF)V	a	playSound
		p	1		except
		p	2		pos
		p	3		sound
		p	4		category
		p	5		volume
		p	6		pitch
	m	(Lbfh;Ljava/util/function/Predicate;Ljava/util/List;Lbfh;)V	a	lambda$getEntities$1
		p	3		entity
	m	(Lbym;DDDLamq;Lams;FF)V	a	playSound
		p	1		except
		p	2		x
		p	4		y
		p	6		z
		p	8		sound
		p	9		category
		p	10		volume
		p	11		pitch
	m	(Lbym;DDDLamq;Lams;FFJ)V	a	playSeededSound
		p	1		except
		p	2		x
		p	4		y
		p	6		z
		p	8		sound
		p	9		category
		p	10		volume
		p	11		pitch
		p	12		seed
	m	(Lbym;DDDLhd;Lams;FFJ)V	a	playSeededSound
		p	1		except
		p	2		x
		p	4		y
		p	6		z
		p	8		sound
		p	9		category
		p	10		volume
		p	11		pitch
		p	12		seed
	m	(Lbym;Lbfh;Lamq;Lams;FF)V	a	playSound
		p	1		except
		p	2		entity
		p	3		sound
		p	4		category
		p	5		volume
		p	6		pitch
	m	(Lbym;Lbfh;Lhd;Lams;FFJ)V	a	playSeededSound
		p	1		except
		p	2		entity
		p	3		sound
		p	4		category
		p	5		volume
		p	6		pitch
		p	7		seed
	m	(Lbym;Lgt;)Z	a	mayInteract
		p	1		player
		p	2		pos
	m	(Lbym;Lgt;Lamq;Lams;FF)V	a	playSound
		p	1		except
		p	2		pos
		p	3		sound
		p	4		category
		p	5		volume
		p	6		pitch
	m	(Lcme$e;)Lcma$a;	a	getDestroyType
		p	1		gameRuleKey
	m	(Lcze;)V	a	setBlockEntity
		p	1		blockEntity
	m	(Ldas;)V	a	addBlockEntityTicker
		p	1		ticker
	m	(Ldbq;Lgt;Lcpi;Lgt;Z)V	a	neighborChanged
		p	1		state
		p	2		pos
		p	3		sourceBlock
		p	4		sourcePos
		p	5		notify
	m	(Ldfo;Lecz;Ljava/util/function/Predicate;)Ljava/util/List;	a	getEntities
		p	1		filter
		p	2		box
		p	3		predicate
	m	(Ldfo;Lecz;Ljava/util/function/Predicate;Ljava/util/List;)V	a	getEntities
		p	1		filter
		p	2		box
		p	3		predicate
		p	4		result
	m	(Ldfo;Lecz;Ljava/util/function/Predicate;Ljava/util/List;I)V	a	getEntities
		p	1		filter
		p	2		box
		p	3		predicate
		p	4		result
		p	5		limit
	m	(Ldgz$a;II)I	a	getHeight
		p	1		heightmap
		p	2		x
		p	3		z
	m	(Lgt;Lamq;Lams;FFZ)V	a	playLocalSound
		p	1		pos
		p	2		sound
		p	3		category
		p	4		volume
		p	5		pitch
		p	6		useDistance
	m	(Lgt;Lbfh;)Z	a	loadedAndEntityCanStandOn
		p	1		pos
		p	2		entity
	m	(Lgt;Lbfh;Lgz;)Z	a	loadedAndEntityCanStandOnFace
		p	1		pos
		p	2		entity
		p	3		direction
	m	(Lgt;Lcpi;)V	a	updateNeighborsAt
		p	1		pos
		p	2		sourceBlock
	m	(Lgt;Lcpi;II)V	a	blockEvent
		p	1		pos
		p	2		block
		p	3		type
		p	4		data
	m	(Lgt;Lcpi;Lgt;)V	a	neighborChanged
		p	1		pos
		p	2		sourceBlock
		p	3		sourcePos
	m	(Lgt;Lcpi;Lgz;)V	a	updateNeighborsAtExceptFromFacing
		p	1		pos
		p	2		sourceBlock
		p	3		direction
	m	(Lgt;Ldbq;)V	a	addDestroyBlockEffect
		p	1		pos
		p	2		state
	m	(Lgt;Ldbq;I)Z	a	setBlock
		p	1		pos
		p	2		state
		p	3		flags
	m	(Lgt;Ldbq;II)Z	a	setBlock
		p	1		pos
		p	2		state
		p	3		flags
		p	4		maxUpdateDepth
	m	(Lgt;Ldbq;Ldbq;)V	a	onBlockStateChange
		p	1		pos
		p	2		oldBlock
		p	3		newBlock
	m	(Lgt;Ldbq;Ldbq;I)V	a	sendBlockUpdated
		p	1		pos
		p	2		oldState
		p	3		newState
		p	4		flags
	m	(Lgt;Lgz;)Z	a	hasSignal
		p	1		pos
		p	2		direction
	m	(Lgt;Ljava/util/function/Predicate;)Z	a	isStateAtPosition
		p	1		pos
		p	2		state
	m	(Lgt;Z)Z	a	removeBlock
		p	1		pos
		p	2		move
	m	(Lgt;ZLbfh;I)Z	a	destroyBlock
		p	1		pos
		p	2		drop
		p	3		breakingEntity
		p	4		maxUpdateDepth
	m	(Lgz;Ldbq;Lgt;Lgt;II)V	a	neighborShapeChanged
		p	1		direction
		p	2		neighborState
		p	3		pos
		p	4		neighborPos
		p	5		flags
		p	6		maxUpdateDepth
	m	(Lhd;)Ljava/lang/IllegalArgumentException;	a	lambda$new$0
	m	(Lis;DDDDDD)V	a	addParticle
		p	1		parameters
		p	2		x
		p	4		y
		p	6		z
		p	8		velocityX
		p	10		velocityY
		p	12		velocityZ
	m	(Lis;ZDDDDDD)V	a	addParticle
		p	1		parameters
		p	2		alwaysSpawn
		p	3		x
		p	5		y
		p	7		z
		p	9		velocityX
		p	11		velocityY
		p	13		velocityZ
	m	(Ljava/lang/String;)Ldxu;	a	getMapData
		p	1		id
	m	(Ljava/lang/String;Ldxu;)V	a	setMapData
		p	1		id
		p	2		state
	m	(Ljava/util/function/Consumer;Lbfh;)V	a	guardEntityTick
		p	1		tickConsumer
		p	2		entity
	m	(Ljava/util/function/Predicate;Ljava/util/List;ILdfo;Lbfh;)Laob$a;	a	lambda$getEntities$2
		p	4		entity
	m	(Lo;)Lp;	a	fillReportDetails
		p	1		report
	m	(Lvb;)V	a	sendPacketToServer
		p	1		packet
	m	(Lgt;)Ldbq;	a_	getBlockState
		p	1		pos
	m	()Lhd;	aa	dimensionTypeRegistration
	m	()Ladc;	ab	dimension
	m	()Lbao;	ac	getProfiler
	m	()Ljava/util/function/Supplier;	ad	getProfilerSupplier
	m	()Z	ae	isDebug
	m	()Lben;	af	damageSources
	m	(F)F	b	getThunderLevel
		p	1		delta
	m	(I)Z	b	isOutsideSpawnableHeight
		p	0		y
	m	(ILgt;I)V	b	globalLevelEvent
		p	1		eventId
		p	2		pos
		p	3		data
	m	(Lgt;Ldbq;)Z	b	setBlockAndUpdate
		p	1		pos
		p	2		state
	m	(Lgt;Ldbq;Ldbq;)V	b	setBlocksDirty
		p	1		pos
		p	2		old
		p	3		updated
	m	(Lgt;Lgz;)I	b	getSignal
		p	1		pos
		p	2		direction
	m	(Lgt;Ljava/util/function/Predicate;)Z	b	isFluidAtPosition
		p	1		pos
		p	2		state
	m	(Lis;DDDDDD)V	b	addAlwaysVisibleParticle
		p	1		parameters
		p	2		x
		p	4		y
		p	6		z
		p	8		velocityX
		p	10		velocityY
		p	12		velocityZ
	m	(Lis;ZDDDDDD)V	b	addAlwaysVisibleParticle
		p	1		parameters
		p	2		alwaysSpawn
		p	3		x
		p	5		y
		p	7		z
		p	9		velocityX
		p	11		velocityY
		p	13		velocityZ
	m	(ZZ)V	b	setSpawnSettings
		p	1		spawnMonsters
		p	2		spawnAnimals
	m	(Lgt;)Ldwj;	b_	getFluidState
		p	1		pos
	m	(F)V	c	setThunderLevel
		p	1		thunderGradient
	m	(I)V	c	setSkyFlashTime
		p	1		lightningTicksLeft
	m	(II)Lclo;	c	getChunkForCollisions
		p	1		chunkX
		p	2		chunkZ
	m	(Lgt;Lcpi;)V	c	updateNeighbourForOutputSignal
		p	1		pos
		p	2		block
	m	(Lgt;)Lcze;	c_	getBlockEntity
		p	1		pos
	m	(F)F	d	getRainLevel
		p	1		delta
	m	(II)Lddy;	d	getChunk
	m	(Lgt;)Lbdw;	d_	getCurrentDifficultyAt
		p	1		pos
	m	(F)V	e	setRainLevel
		p	1		rainGradient
	m	(Lbfh;)Z	h	shouldTickDeath
		p	1		entity
	m	(Lgt;)Z	j	isInWorldBounds
		p	1		pos
	m	(Lgt;)Z	k	isInSpawnableBounds
		p	0		pos
	m	()Z	k_	isClientSide
	m	(Lgt;)Lddy;	l	getChunkAt
		p	1		pos
	m	()Ldwa;	l_	getLightEngine
	m	(Lgt;)Z	m	shouldTickBlocksAt
		p	1		pos
	m	()I	m_	getSeaLevel
	m	()Lnet/minecraft/server/MinecraftServer;	n	getServer
	m	(Lgt;)V	n	removeBlockEntity
		p	1		pos
	m	()Ldyb;	n_	getLevelData
	m	(Lgt;)Z	o	isLoaded
		p	1		pos
	m	()I	o_	getSkyDarken
	m	()Ljava/lang/String;	p	lambda$fillReportDetails$3
	m	(Lgt;)V	p	blockEntityChanged
		p	1		pos
	m	()Lddi;	p_	getWorldBorder
	m	()Lciz;	q	getRecipeManager
	m	(Lgt;)I	q	getDirectSignalTo
		p	1		pos
	m	()Ldez;	q_	dimensionType
	m	()Z	r	noSave
	m	(Lgt;)Z	r	hasNeighborSignal
		p	1		pos
	m	()Lapo;	r_	getRandom
	m	(Lgt;)I	s	getBestNeighborSignal
		p	1		pos
	m	()Lcnh;	s_	getBiomeManager
	m	()I	t	getFreeMapId
	m	(Lgt;)Z	t	isRainingAt
		p	1		pos
	m	()J	t_	nextSubTickCount
	m	()Lhr;	u_	registryAccess
	f	Ldyl;	A	levelData
	f	Z	B	isClientSide
	f	Lapo;	C	threadSafeRandom
	f	Ladc;	D	dimensionTypeId
	f	Lhd;	E	dimensionTypeRegistration
	f	Ljava/util/function/Supplier;	F	profiler
	f	Lddi;	G	worldBorder
	f	Lcnh;	H	biomeManager
	f	Ladc;	I	dimension
	f	Lhr;	J	registryAccess
	f	Lben;	K	damageSources
	f	J	L	subTickCount
	f	[Lgz;	a	DIRECTIONS
	f	Ljava/util/List;	b	pendingBlockEntityTickers
	f	Z	c	tickingBlockEntities
	f	Ljava/lang/Thread;	d	thread
	f	Z	e	isDebug
	f	I	f	skyDarken
	f	Lcom/mojang/serialization/Codec;	g	RESOURCE_KEY_CODEC
	f	Ladc;	h	OVERWORLD
	f	Ladc;	i	NETHER
	f	Ladc;	j	END
	f	I	k	MAX_LEVEL_SIZE
	f	I	l	LONG_PARTICLE_CLIP_RANGE
	f	I	m	SHORT_PARTICLE_CLIP_RANGE
	f	I	n	MAX_BRIGHTNESS
	f	I	o	TICKS_PER_DAY
	f	I	p	MAX_ENTITY_SPAWN_Y
	f	I	q	MIN_ENTITY_SPAWN_Y
	f	Ljava/util/List;	r	blockEntityTickers
	f	Ldxm;	s	neighborUpdater
	f	I	t	randValue
	f	I	u	addend
	f	F	v	oRainLevel
	f	F	w	rainLevel
	f	F	x	oThunderLevel
	f	F	y	thunderLevel
	f	Lapo;	z	random
c	cmi$1	net/minecraft/world/level/Level$1
	m	()D	a	getCenterX
	m	()D	b	getCenterZ
	f	Ldez;	a	val$dimensionType
	f	Lcmi;	b	this$0
c	cmi$2	net/minecraft/world/level/Level$2
	f	[I	a	$SwitchMap$net$minecraft$world$level$Level$ExplosionInteraction
c	cmi$a	net/minecraft/world/level/Level$ExplosionInteraction
	m	()[Lcmi$a;	a	$values
	f	Lcmi$a;	a	NONE
	f	Lcmi$a;	b	BLOCK
	f	Lcmi$a;	c	MOB
	f	Lcmi$a;	d	TNT
	f	[Lcmi$a;	e	$VALUES
c	cmj	net/minecraft/world/level/LevelAccessor
	m	()Lddr;	I	getChunkSource
	m	()Leel;	J	getFluidTicks
	m	()Leel;	K	getBlockTicks
	m	(Lbfh;Ldga;Lede;)V	a	gameEvent
		p	1		entity
		p	2		event
		p	3		pos
	m	(Lbfh;Ldga;Lgt;)V	a	gameEvent
		p	1		entity
		p	2		event
		p	3		pos
	m	(Lbym;ILgt;I)V	a	levelEvent
		p	1		player
		p	2		eventId
		p	3		pos
		p	4		data
	m	(Lbym;Lgt;Lamq;Lams;)V	a	playSound
		p	1		except
		p	2		pos
		p	3		sound
		p	4		category
	m	(Lbym;Lgt;Lamq;Lams;FF)V	a	playSound
		p	1		except
		p	2		pos
		p	3		sound
		p	4		category
		p	5		volume
		p	6		pitch
	m	(Ldga;Lede;Ldga$a;)V	a	gameEvent
		p	1		event
		p	2		emitterPos
		p	3		emitter
	m	(Ldga;Lgt;Ldga$a;)V	a	gameEvent
		p	1		event
		p	2		pos
		p	3		emitter
	m	(Lgt;Lcpi;I)V	a	scheduleTick
		p	1		pos
		p	2		block
		p	3		delay
	m	(Lgt;Lcpi;ILeet;)V	a	scheduleTick
		p	1		pos
		p	2		block
		p	3		delay
		p	4		priority
	m	(Lgt;Ldwi;I)V	a	scheduleTick
		p	1		pos
		p	2		fluid
		p	3		delay
	m	(Lgt;Ldwi;ILeet;)V	a	scheduleTick
		p	1		pos
		p	2		fluid
		p	3		delay
		p	4		priority
	m	(Lgt;Ljava/lang/Object;I)Leep;	a	createTick
		p	1		pos
		p	2		type
		p	3		delay
	m	(Lgt;Ljava/lang/Object;ILeet;)Leep;	a	createTick
		p	1		pos
		p	2		type
		p	3		delay
		p	4		priority
	m	(Lgz;Ldbq;Lgt;Lgt;II)V	a	neighborShapeChanged
		p	1		direction
		p	2		neighborState
		p	3		pos
		p	4		neighborPos
		p	5		flags
		p	6		maxUpdateDepth
	m	(Lis;DDDDDD)V	a	addParticle
		p	1		parameters
		p	2		x
		p	4		y
		p	6		z
		p	8		velocityX
		p	10		velocityY
		p	12		velocityZ
	m	()J	ag	dayTime
	m	()Lbdv;	ah	getDifficulty
	m	(II)Z	b	hasChunk
		p	1		chunkX
		p	2		chunkZ
	m	(Lgt;Lcpi;)V	b	blockUpdated
		p	1		pos
		p	2		block
	m	(ILgt;I)V	c	levelEvent
		p	1		eventId
		p	2		pos
		p	3		data
	m	(Lgt;)Lbdw;	d_	getCurrentDifficultyAt
		p	1		pos
	m	()Lnet/minecraft/server/MinecraftServer;	n	getServer
	m	()Ldyb;	n_	getLevelData
	m	()Lapo;	r_	getRandom
	m	()J	t_	nextSubTickCount
c	cmk	net/minecraft/world/level/LevelHeightAccessor
	m	()I	ai	getMaxBuildHeight
	m	()I	aj	getSectionsCount
	m	()I	ak	getMinSection
	m	()I	al	getMaxSection
	m	(I)Z	d	isOutsideBuildHeight
		p	1		y
	m	(I)I	e	getSectionIndex
		p	1		y
	m	(II)Lcmk;	e	create
		p	0		bottomY
		p	1		height
	m	(I)I	f	getSectionIndexFromSectionY
		p	1		coord
	m	(I)I	g	getSectionYFromSectionIndex
		p	1		index
	m	(Lgt;)Z	u	isOutsideBuildHeight
		p	1		pos
	m	()I	v_	getMinBuildHeight
	m	()I	w_	getHeight
c	cmk$1	net/minecraft/world/level/LevelHeightAccessor$1
	m	()I	v_	getMinBuildHeight
	m	()I	w_	getHeight
	f	I	a	val$height
	f	I	b	val$minBuildHeight
c	cml	net/minecraft/world/level/LevelReader
	m	(Lgt;)Lddn;	A	getChunk
		p	1		pos
	m	(Lgt;)Z	B	isWaterAt
		p	1		pos
	m	(Lgt;)I	C	getMaxLocalRawBrightness
		p	1		pos
	m	(Lgt;)Z	D	hasChunkAt
		p	1		pos
	m	()Lcau;	G	enabledFeatures
	m	(II)Lddn;	a	getChunk
		p	1		chunkX
		p	2		chunkZ
	m	(III)Lhd;	a	getUncachedNoiseBiome
		p	1		biomeX
		p	2		biomeY
		p	3		biomeZ
	m	(IIIIII)Z	a	hasChunksAt
		p	1		minX
		p	2		minY
		p	3		minZ
		p	4		maxX
		p	5		maxY
		p	6		maxZ
	m	(IILdds;)Lddn;	a	getChunk
		p	1		chunkX
		p	2		chunkZ
		p	3		status
	m	(IILdds;Z)Lddn;	a	getChunk
		p	1		chunkX
		p	2		chunkZ
		p	3		leastStatus
		p	4		create
	m	(Ladc;)Lhf;	a	holderLookup
		p	1		registryRef
	m	(Ldgz$a;II)I	a	getHeight
		p	1		heightmap
		p	2		x
		p	3		z
	m	(Ldgz$a;Lgt;)Lgt;	a	getHeightmapPos
		p	1		heightmap
		p	2		pos
	m	(Lgt;Lclt;)I	a	getBlockTint
		p	1		pos
		p	2		colorResolver
	m	(Lgt;Lgt;)Z	a	hasChunksAt
		p	1		min
		p	2		max
	m	(II)Z	b	hasChunk
		p	1		chunkX
		p	2		chunkZ
	m	(IIII)Z	b	hasChunksAt
		p	1		minX
		p	2		minZ
		p	3		maxX
		p	4		maxZ
	m	(II)Lclo;	c	getChunkForCollisions
		p	1		chunkX
		p	2		chunkZ
	m	(Lecz;)Ljava/util/stream/Stream;	c	getBlockStatesIfLoaded
		p	1		box
	m	(Lgt;I)I	c	getMaxLocalRawBrightness
		p	1		pos
		p	2		ambientDarkness
	m	(Lgt;Lgz;)I	c	getDirectSignal
		p	1		pos
		p	2		direction
	m	(Lecz;)Z	d	containsAnyLiquid
		p	1		box
	m	(II)Z	f	hasChunkAt
		p	1		x
		p	2		z
	m	(III)Lhd;	getNoiseBiome	getNoiseBiome
		p	1		biomeX
		p	2		biomeY
		p	3		biomeZ
	m	()Z	k_	isClientSide
	m	()I	m_	getSeaLevel
	m	()I	o_	getSkyDarken
	m	()Ldez;	q_	dimensionType
	m	()Lcnh;	s_	getBiomeManager
	m	()Lhr;	u_	registryAccess
	m	(Lgt;)Lhd;	v	getBiome
		p	1		pos
	m	()I	v_	getMinBuildHeight
	m	(Lgt;)Z	w	isEmptyBlock
		p	1		pos
	m	()I	w_	getHeight
	m	(Lgt;)Z	x	canSeeSkyFromBelowWater
		p	1		pos
	m	(Lgt;)F	y	getPathfindingCostFromLightLevels
		p	1		pos
	m	(Lgt;)F	z	getLightLevelDependentMagicValue
		p	1		pos
c	cmm	net/minecraft/world/level/LevelSettings
	m	(Ljava/lang/String;Lcmf;ZLbdv;ZLcme;Lcna;)V	<init>	<init>
		p	1		name
		p	2		gameMode
		p	3		hardcore
		p	4		difficulty
		p	5		allowCommands
		p	6		gameRules
		p	7		dataConfiguration
	m	()Ljava/lang/String;	a	levelName
	m	(Lbdv;)Lcmm;	a	withDifficulty
		p	1		difficulty
	m	(Lcmf;)Lcmm;	a	withGameType
		p	1		mode
	m	(Lcna;)Lcmm;	a	withDataConfiguration
		p	1		dataConfiguration
	m	(Lcom/mojang/serialization/Dynamic;Lcna;)Lcmm;	a	parse
		p	0		dynamic
		p	1		dataConfiguration
	m	(Ljava/lang/Number;)Lbdv;	a	lambda$parse$0
		p	0		difficulty
	m	()Lcmf;	b	gameType
	m	()Z	c	hardcore
	m	()Lbdv;	d	difficulty
	m	()Z	e	allowCommands
	m	()Lcme;	f	gameRules
	m	()Lcna;	g	getDataConfiguration
	m	()Lcmm;	h	copy
	f	Ljava/lang/String;	a	levelName
	f	Lcmf;	b	gameType
	f	Z	c	hardcore
	f	Lbdv;	d	difficulty
	f	Z	e	allowCommands
	f	Lcme;	f	gameRules
	f	Lcna;	g	dataConfiguration
c	cmn	net/minecraft/world/level/LevelSimulatedRW
c	cmo	net/minecraft/world/level/LevelSimulatedReader
	m	(Ldgz$a;Lgt;)Lgt;	a	getHeightmapPos
		p	1		heightmap
		p	2		pos
	m	(Lgt;Lczg;)Ljava/util/Optional;	a	getBlockEntity
		p	1		pos
		p	2		type
	m	(Lgt;Ljava/util/function/Predicate;)Z	a	isStateAtPosition
		p	1		pos
		p	2		state
	m	(Lgt;Ljava/util/function/Predicate;)Z	b	isFluidAtPosition
		p	1		pos
		p	2		state
c	cmp	net/minecraft/world/level/LevelTimeAccess
	m	()J	ag	dayTime
	m	()F	am	getMoonBrightness
	m	()I	an	getMoonPhase
	m	(F)F	f	getTimeOfDay
		p	1		tickDelta
c	cmq	net/minecraft/world/level/LevelWriter
	m	(Lgt;Ldbq;I)Z	a	setBlock
		p	1		pos
		p	2		state
		p	3		flags
	m	(Lgt;Ldbq;II)Z	a	setBlock
		p	1		pos
		p	2		state
		p	3		flags
		p	4		maxUpdateDepth
	m	(Lgt;Z)Z	a	removeBlock
		p	1		pos
		p	2		move
	m	(Lgt;ZLbfh;)Z	a	destroyBlock
		p	1		pos
		p	2		drop
		p	3		breakingEntity
	m	(Lgt;ZLbfh;I)Z	a	destroyBlock
		p	1		pos
		p	2		drop
		p	3		breakingEntity
		p	4		maxUpdateDepth
	m	(Lbfh;)Z	b	addFreshEntity
		p	1		entity
	m	(Lgt;Z)Z	b	destroyBlock
		p	1		pos
		p	2		drop
c	cmr	net/minecraft/world/level/LightLayer
	m	(Ljava/lang/String;II)V	<init>	<init>
		p	3		value
	m	()[Lcmr;	a	$values
	f	Lcmr;	a	SKY
	f	Lcmr;	b	BLOCK
	f	I	c	surrounding
	f	[Lcmr;	d	$VALUES
c	cms	net/minecraft/world/level/LocalMobCapCalculator
	m	(Laic;)V	<init>	<init>
		p	1		threadedAnvilChunkStorage
	m	(Laiq;)Lcms$a;	a	lambda$addMob$1
		p	0		player
	m	(Lbga;Lclp;)Z	a	canSpawn
		p	1		spawnGroup
		p	2		chunkPos
	m	(Lclp;)Ljava/util/List;	a	getPlayersNear
		p	1		chunkPos
	m	(Lclp;J)Ljava/util/List;	a	lambda$getPlayersNear$0
		p	2		pos
	m	(Lclp;Lbga;)V	a	addMob
		p	1		chunkPos
		p	2		spawnGroup
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	a	playersNearChunk
	f	Ljava/util/Map;	b	playerMobCounts
	f	Laic;	c	chunkMap
c	cms$a	net/minecraft/world/level/LocalMobCapCalculator$MobCounts
	m	(Lbga;)V	a	add
		p	1		spawnGroup
	m	(Lbga;Ljava/lang/Integer;)Ljava/lang/Integer;	a	lambda$add$0
		p	0		group
		p	1		density
	m	(Lbga;)Z	b	canSpawn
		p	1		spawnGroup
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	a	counts
c	cmt	net/minecraft/world/level/NaturalSpawner
	m	(I)[Lbga;	a	lambda$static$1
	m	(ILjava/lang/Iterable;Lcmt$b;Lcms;)Lcmt$d;	a	createState
		p	0		spawningChunkCount
		p	1		entities
		p	2		chunkSource
		p	3		densityCapper
	m	(Laip;Lbfl;)Lbfz;	a	getMobForSpawn
		p	0		world
		p	1		type
	m	(Laip;Lbfz;D)Z	a	isValidPositionForMob
		p	0		world
		p	1		entity
		p	2		squaredDistance
	m	(Laip;Lbga;Lcmz;Lddo;Lcnr$c;Lgt$a;D)Z	a	isValidSpawnPostitionForType
		p	0		world
		p	1		group
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		spawnEntry
		p	5		pos
		p	6		squaredDistance
	m	(Laip;Lcmz;Lddo;Lbga;Lapo;Lgt;)Ljava/util/Optional;	a	getRandomSpawnMobAt
		p	0		world
		p	1		structureAccessor
		p	2		chunkGenerator
		p	3		spawnGroup
		p	4		random
		p	5		pos
	m	(Laip;Lcmz;Lddo;Lbga;Lcnr$c;Lgt;)Z	a	canSpawnMobAt
		p	0		world
		p	1		structureAccessor
		p	2		chunkGenerator
		p	3		spawnGroup
		p	4		spawnEntry
		p	5		pos
	m	(Laip;Lcmz;Lddo;Lbga;Lgt;Lhd;)Lbcm;	a	mobsAt
		p	0		world
		p	1		structureAccessor
		p	2		chunkGenerator
		p	3		spawnGroup
		p	4		pos
		p	5		biomeEntry
	m	(Laip;Lddn;Lgt$a;D)Z	a	isRightDistanceToPlayerAndSpawnPoint
		p	0		world
		p	1		chunk
		p	2		pos
		p	3		squaredDistance
	m	(Laip;Lddy;Lcmt$d;ZZZ)V	a	spawnForChunk
		p	0		world
		p	1		chunk
		p	2		info
		p	3		spawnAnimals
		p	4		spawnMonsters
		p	5		rareSpawn
	m	(Lbfl;Lgt;Lddn;)Z	a	lambda$spawnCategoryForPosition$3
		p	0		type
		p	1		pos
		p	2		chunk
	m	(Lbfz;Lddn;)V	a	lambda$spawnCategoryForPosition$4
		p	0		entity
		p	1		chunk
	m	(Lbga;)Z	a	lambda$static$0
		p	0		spawnGroup
	m	(Lbga;Laip;Lddn;Lgt;Lcmt$c;Lcmt$a;)V	a	spawnCategoryForPosition
		p	0		group
		p	1		world
		p	2		chunk
		p	3		pos
		p	4		checker
		p	5		runner
	m	(Lbga;Laip;Lddy;Lcmt$c;Lcmt$a;)V	a	spawnCategoryForChunk
		p	0		group
		p	1		world
		p	2		chunk
		p	3		checker
		p	4		runner
	m	(Lbga;Laip;Lgt;)V	a	spawnCategoryForPosition
		p	0		group
		p	1		world
		p	2		pos
	m	(Lbgs$c;Lcml;Lgt;Lbfl;)Z	a	isSpawnPositionOk
		p	0		location
		p	1		world
		p	2		pos
		p	3		entityType
	m	(Lclo;Lgt;Ldbq;Ldwj;Lbfl;)Z	a	isValidEmptySpawnBlock
		p	0		blockView
		p	1		pos
		p	2		state
		p	3		fluidState
		p	4		entityType
	m	(Lcmi;Lddy;)Lgt;	a	getRandomPosWithin
		p	0		world
		p	1		chunk
	m	(Lcml;Lbfl;II)Lgt;	a	getTopNonCollidingPos
		p	0		world
		p	1		entityType
		p	2		x
		p	3		z
	m	(Lcmx;Lhd;Lclp;Lapo;)V	a	spawnMobsForChunkGeneration
		p	0		world
		p	1		biomeEntry
		p	2		chunkPos
		p	3		random
	m	(Lgt;Laip;Lbga;Lcmz;)Z	a	isInNetherFortressBounds
		p	0		pos
		p	1		world
		p	2		spawnGroup
		p	3		structureAccessor
	m	(Lgt;Lbfh;Lcmw;Lcms;Lbga;Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;Lddy;)V	a	lambda$createState$2
		p	6		chunk
	m	(Lgt;Lddn;)Lcnf;	a	getRoughBiome
		p	0		pos
		p	1		chunk
	f	I	a	SPAWN_DISTANCE_CHUNK
	f	I	b	SPAWN_DISTANCE_BLOCK
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	I	d	MIN_SPAWN_DISTANCE
	f	I	e	MAGIC_NUMBER
	f	[Lbga;	f	SPAWNING_CATEGORIES
c	cmt$1	net/minecraft/world/level/NaturalSpawner$1
	f	[I	a	$SwitchMap$net$minecraft$world$entity$SpawnPlacements$Type
c	cmt$a	net/minecraft/world/level/NaturalSpawner$AfterSpawnCallback
	m	(Lbfz;Lddn;)V	run	run
		p	1		entity
		p	2		chunk
c	cmt$b	net/minecraft/world/level/NaturalSpawner$ChunkGetter
	m	(JLjava/util/function/Consumer;)V	query	query
		p	1		pos
		p	3		chunkConsumer
c	cmt$c	net/minecraft/world/level/NaturalSpawner$SpawnPredicate
	m	(Lbfl;Lgt;Lddn;)Z	test	test
		p	1		type
		p	2		pos
		p	3		chunk
c	cmt$d	net/minecraft/world/level/NaturalSpawner$SpawnState
	m	(ILit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;Lcmw;Lcms;)V	<init>	<init>
		p	1		spawningChunkCount
		p	2		groupToCount
		p	3		densityField
		p	4		densityCapper
	m	()I	a	getSpawnableChunkCount
	m	(Lbfl;Lgt;Lddn;)Z	a	canSpawn
		p	1		type
		p	2		pos
		p	3		chunk
	m	(Lbfz;Lddn;)V	a	afterSpawn
		p	1		entity
		p	2		chunk
	m	(Lbga;Lclp;)Z	a	canSpawnForCategory
		p	1		group
		p	2		chunkPos
	m	()Lit/unimi/dsi/fastutil/objects/Object2IntMap;	b	getMobCategoryCounts
	f	I	a	spawnableChunkCount
	f	Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;	b	mobCategoryCounts
	f	Lcmw;	c	spawnPotential
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	d	unmodifiableMobCategoryCounts
	f	Lcms;	e	localMobCapCalculator
	f	Lgt;	f	lastCheckedPos
	f	Lbfl;	g	lastCheckedType
	f	D	h	lastCharge
c	cmu	net/minecraft/world/level/NoiseColumn
	m	(I[Ldbq;)V	<init>	<init>
		p	1		startY
		p	2		states
	m	(I)Ldbq;	a	getBlock
		p	1		y
	m	(ILdbq;)V	a	setBlock
		p	1		y
		p	2		state
	f	I	a	minY
	f	[Ldbq;	b	column
c	cmv	net/minecraft/world/level/PathNavigationRegion
	m	(Lcmi;Lgt;Lgt;)V	<init>	<init>
		p	1		world
		p	2		minPos
		p	3		maxPos
	m	()Lbao;	a	getProfiler
	m	(II)Lddn;	a	getChunk
		p	1		chunkX
		p	2		chunkZ
	m	(Lcmi;)Lhd;	a	lambda$new$0
	m	(Lgt;)Ldbq;	a_	getBlockState
		p	1		pos
	m	(Lbfh;Lecz;)Ljava/util/List;	b	getEntityCollisions
		p	1		entity
		p	2		box
	m	(Lgt;)Ldwj;	b_	getFluidState
		p	1		pos
	m	(II)Lclo;	c	getChunkForCollisions
		p	1		chunkX
		p	2		chunkZ
	m	(Lgt;)Lcze;	c_	getBlockEntity
		p	1		pos
	m	(Lgt;)Lddn;	d	getChunk
		p	1		pos
	m	()Lddi;	p_	getWorldBorder
	m	()I	v_	getMinBuildHeight
	m	()I	w_	getHeight
	f	I	a	centerX
	f	I	b	centerZ
	f	[[Lddn;	c	chunks
	f	Z	d	allEmpty
	f	Lcmi;	e	level
	f	Ljava/util/function/Supplier;	f	plains
c	cmw	net/minecraft/world/level/PotentialCalculator
	m	(Lgt;D)V	a	addCharge
		p	1		pos
		p	2		mass
	m	(Lgt;D)D	b	getPotentialEnergyChange
		p	1		pos
		p	2		mass
	f	Ljava/util/List;	a	charges
c	cmw$a	net/minecraft/world/level/PotentialCalculator$PointCharge
	m	(Lgt;D)V	<init>	<init>
		p	1		pos
		p	2		mass
	m	(Lgt;)D	a	getPotentialChange
		p	1		pos
	f	Lgt;	a	pos
	f	D	b	charge
c	cmx	net/minecraft/world/level/ServerLevelAccessor
	m	()Laip;	C	getLevel
	m	(Lbfh;)V	a_	addFreshEntityWithPassengers
		p	1		entity
c	cmy	net/minecraft/world/level/SpawnData
	m	()Lre;	a	getEntityToSpawn
	m	(Lcmy;)Ljava/util/Optional;	a	lambda$static$1
		p	0		entry
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	()Ljava/util/Optional;	b	getCustomSpawnRules
	m	(Lcmy;)Lre;	b	lambda$static$0
		p	0		entry
	m	()Lre;	c	entityToSpawn
	m	()Ljava/util/Optional;	d	customSpawnRules
	f	Ljava/lang/String;	a	ENTITY_TAG
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lcom/mojang/serialization/Codec;	c	LIST_CODEC
	f	Lre;	d	entityToSpawn
	f	Ljava/util/Optional;	e	customSpawnRules
c	cmy$a	net/minecraft/world/level/SpawnData$CustomSpawnRules
	m	()Lapc;	a	blockLightLimit
	m	(Lapc;)Lcom/mojang/serialization/DataResult;	a	checkLightBoundaries
		p	0		provider
	m	(Lcmy$a;)Lapc;	a	lambda$static$2
		p	0		rules
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	()Lapc;	b	skyLightLimit
	m	(Lcmy$a;)Lapc;	b	lambda$static$1
		p	0		rules
	m	()Ljava/lang/String;	c	lambda$checkLightBoundaries$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lapc;	b	blockLightLimit
	f	Lapc;	c	skyLightLimit
	f	Lapc;	d	LIGHT_RANGE
c	cmz	net/minecraft/world/level/StructureManager
	m	(Lcmj;Ldhx;Ldrq;)V	<init>	<init>
		p	1		world
		p	2		options
		p	3		locator
	m	()Z	a	shouldGenerateStructures
	m	(Laiw;)Lcmz;	a	forWorldGenRegion
		p	1		region
	m	(Lanv;Lhd$c;)Ljava/lang/Boolean;	a	lambda$getStructureWithPieceAt$0
	m	(Lclp;Ldrp;Z)Ldrr;	a	checkStructurePresence
		p	1		chunkPos
		p	2		structure
		p	3		skipExistingChunk
	m	(Lclp;Ljava/util/function/Predicate;)Ljava/util/List;	a	startsForStructure
		p	1		pos
		p	2		predicate
	m	(Ldrp;Lit/unimi/dsi/fastutil/longs/LongSet;Ljava/util/function/Consumer;)V	a	fillStartsForStructure
		p	1		structure
		p	2		structureStartPositions
		p	3		consumer
	m	(Ldrx;)V	a	addReference
		p	1		structureStart
	m	(Lgt;)Z	a	hasAnyStructureAt
		p	1		pos
	m	(Lgt;Ladc;)Ldrx;	a	getStructureWithPieceAt
		p	1		pos
		p	2		structure
	m	(Lgt;Lanv;)Ldrx;	a	getStructureWithPieceAt
		p	1		pos
		p	2		structureTag
	m	(Lgt;Ldrp;)Ldrx;	a	getStructureAt
		p	1		pos
		p	2		structure
	m	(Lgt;Ldrx;)Z	a	structureHasPieceAt
		p	1		pos
		p	2		structureStart
	m	(Lhq;Lanv;Ldrp;)Z	a	lambda$getStructureWithPieceAt$1
		p	2		structure
	m	(Lhw;Ldrp;)Ljava/util/List;	a	startsForStructure
		p	1		sectionPos
		p	2		structure
	m	(Lhw;Ldrp;JLdej;)V	a	addReferenceForStructure
		p	1		pos
		p	2		structure
		p	3		reference
		p	5		holder
	m	(Lhw;Ldrp;Ldej;)Ldrx;	a	getStartForStructure
		p	1		pos
		p	2		structure
		p	3		holder
	m	(Lhw;Ldrp;Ldrx;Ldej;)V	a	setStartForStructure
		p	1		pos
		p	2		structure
		p	3		structureStart
		p	4		holder
	m	()Lhr;	b	registryAccess
	m	(Lgt;)Ljava/util/Map;	b	getAllStructuresAt
		p	1		pos
	m	(Lgt;Ldrp;)Ldrx;	b	getStructureWithPieceAt
		p	1		pos
		p	2		structure
	f	Lcmj;	a	level
	f	Ldhx;	b	worldOptions
	f	Ldrq;	c	structureCheck
c	cna	net/minecraft/world/level/WorldDataConfiguration
	m	()Lclw;	a	dataPacks
	m	(Lcau;)Lcna;	a	expandFeatures
		p	1		features
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Lcau;	b	enabledFeatures
	f	Ljava/lang/String;	a	ENABLED_FEATURES_ID
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lcna;	c	DEFAULT
	f	Lclw;	d	dataPacks
	f	Lcau;	e	enabledFeatures
c	cnb	net/minecraft/world/level/WorldGenLevel
	m	()J	A	getSeed
	m	(Ljava/util/function/Supplier;)V	a	setCurrentlyGenerating
		p	1		structureName
	m	(Lgt;)Z	e_	ensureCanWrite
		p	1		pos
c	cnc	net/minecraft/world/level/biome/AmbientAdditionsSettings
	m	(Lhd;D)V	<init>	<init>
		p	1		sound
		p	2		chance
	m	()Lhd;	a	getSoundEvent
	m	(Lcnc;)Ljava/lang/Double;	a	lambda$static$1
		p	0		sound
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	()D	b	getTickChance
	m	(Lcnc;)Lhd;	b	lambda$static$0
		p	0		sound
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lhd;	b	soundEvent
	f	D	c	tickChance
c	cnd	net/minecraft/world/level/biome/AmbientMoodSettings
	m	(Lhd;IID)V	<init>	<init>
		p	1		sound
		p	2		cultivationTicks
		p	3		spawnRange
		p	4		extraDistance
	m	()Lhd;	a	getSoundEvent
	m	(Lcnd;)Ljava/lang/Double;	a	lambda$static$3
		p	0		sound
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
		p	0		instance
	m	()I	b	getTickDelay
	m	(Lcnd;)Ljava/lang/Integer;	b	lambda$static$2
		p	0		sound
	m	()I	c	getBlockSearchExtent
	m	(Lcnd;)Ljava/lang/Integer;	c	lambda$static$1
		p	0		sound
	m	()D	d	getSoundPositionOffset
	m	(Lcnd;)Lhd;	d	lambda$static$0
		p	0		sound
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcnd;	b	LEGACY_CAVE_SETTINGS
	f	Lhd;	c	soundEvent
	f	I	d	tickDelay
	f	I	e	blockSearchExtent
	f	D	f	soundPositionOffset
c	cne	net/minecraft/world/level/biome/AmbientParticleSettings
	m	(Lis;F)V	<init>	<init>
		p	1		particle
		p	2		probability
	m	()Lis;	a	getOptions
	m	(Lapo;)Z	a	canSpawn
		p	1		random
	m	(Lcne;)Ljava/lang/Float;	a	lambda$static$1
		p	0		config
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Lcne;)Lis;	b	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lis;	b	options
	f	F	c	probability
c	cnf	net/minecraft/world/level/biome/Biome
	m	(Lcnf$b;Lcnl;Lcng;Lcnr;)V	<init>	<init>
		p	1		weather
		p	2		effects
		p	3		generationSettings
		p	4		spawnSettings
	m	()I	a	getSkyColor
	m	(DD)I	a	getGrassColor
		p	1		x
		p	3		z
	m	(Lcml;Lgt;)Z	a	shouldFreeze
		p	1		world
		p	2		blockPos
	m	(Lcml;Lgt;Z)Z	a	shouldFreeze
		p	1		world
		p	2		pos
		p	3		doWaterCheck
	m	(Lcnf$b;Lcnl;)Lcnf;	a	lambda$static$7
		p	0		weather
		p	1		effects
	m	(Lcnf;)Lcnl;	a	lambda$static$6
		p	0		biome
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$8
		p	0		instance
	m	(Lgt;)Lcnf$c;	a	getPrecipitationAt
		p	1		pos
	m	()Lcnr;	b	getMobSettings
	m	(Lcml;Lgt;)Z	b	shouldSnow
		p	1		world
		p	2		pos
	m	(Lcnf;)Lcnf$b;	b	lambda$static$5
		p	0		biome
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$4
		p	0		instance
	m	(Lgt;)Z	b	coldEnoughToSnow
		p	1		pos
	m	()Z	c	hasPrecipitation
	m	(Lcnf;)Lcnr;	c	lambda$static$3
		p	0		biome
	m	(Lgt;)Z	c	warmEnoughToRain
		p	1		pos
	m	()Lcng;	d	getGenerationSettings
	m	(Lcnf;)Lcng;	d	lambda$static$2
		p	0		biome
	m	(Lgt;)Z	d	shouldMeltFrozenOceanIcebergSlightly
		p	1		pos
	m	()I	e	getFogColor
	m	(Lcnf;)Lcnl;	e	lambda$static$1
		p	0		biome
	m	(Lgt;)F	e	getHeightAdjustedTemperature
		p	1		pos
	m	()I	f	getFoliageColor
	m	(Lcnf;)Lcnf$b;	f	lambda$static$0
		p	0		biome
	m	(Lgt;)F	f	getTemperature
		p	1		blockPos
	m	()F	g	getBaseTemperature
	m	()Lcnl;	h	getSpecialEffects
	m	()I	i	getWaterColor
	m	()I	j	getWaterFogColor
	m	()Ljava/util/Optional;	k	getAmbientParticle
	m	()Ljava/util/Optional;	l	getAmbientLoop
	m	()Ljava/util/Optional;	m	getAmbientMood
	m	()Ljava/util/Optional;	n	getAmbientAdditions
	m	()Ljava/util/Optional;	o	getBackgroundMusic
	m	()I	p	getGrassColorFromTexture
	m	()I	q	getFoliageColorFromTexture
	m	()Lit/unimi/dsi/fastutil/longs/Long2FloatLinkedOpenHashMap;	r	lambda$new$10
	m	()Lit/unimi/dsi/fastutil/longs/Long2FloatLinkedOpenHashMap;	s	lambda$new$9
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	b	NETWORK_CODEC
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Lcom/mojang/serialization/Codec;	d	LIST_CODEC
	f	Ldvq;	e	BIOME_INFO_NOISE
	f	Ldvq;	f	TEMPERATURE_NOISE
	f	Ldvq;	g	FROZEN_TEMPERATURE_NOISE
	f	I	h	TEMPERATURE_CACHE_SIZE
	f	Lcnf$b;	i	climateSettings
	f	Lcng;	j	generationSettings
	f	Lcnr;	k	mobSettings
	f	Lcnl;	l	specialEffects
	f	Ljava/lang/ThreadLocal;	m	temperatureCache
c	cnf$1	net/minecraft/world/level/biome/Biome$1
	f	Lcnf;	a	this$0
c	cnf$a	net/minecraft/world/level/biome/Biome$BiomeBuilder
	m	()Lcnf;	a	build
	m	(F)Lcnf$a;	a	temperature
		p	1		temperature
	m	(Lcnf$d;)Lcnf$a;	a	temperatureAdjustment
		p	1		temperatureModifier
	m	(Lcng;)Lcnf$a;	a	generationSettings
		p	1		generationSettings
	m	(Lcnl;)Lcnf$a;	a	specialEffects
		p	1		effects
	m	(Lcnr;)Lcnf$a;	a	mobSpawnSettings
		p	1		spawnSettings
	m	(Z)Lcnf$a;	a	hasPrecipitation
		p	1		precipitation
	m	(F)Lcnf$a;	b	downfall
		p	1		downfall
	f	Z	a	hasPrecipitation
	f	Ljava/lang/Float;	b	temperature
	f	Lcnf$d;	c	temperatureModifier
	f	Ljava/lang/Float;	d	downfall
	f	Lcnl;	e	specialEffects
	f	Lcnr;	f	mobSpawnSettings
	f	Lcng;	g	generationSettings
c	cnf$b	net/minecraft/world/level/biome/Biome$ClimateSettings
	m	(ZFLcnf$d;F)V	<init>	<init>
		p	2		temperature
		p	3		temperatureModifier
		p	4		downfall
	m	()Z	a	hasPrecipitation
	m	(Lcnf$b;)Ljava/lang/Float;	a	lambda$static$3
		p	0		weather
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
		p	0		instance
	m	()F	b	temperature
	m	(Lcnf$b;)Lcnf$d;	b	lambda$static$2
		p	0		weather
	m	()Lcnf$d;	c	temperatureModifier
	m	(Lcnf$b;)Ljava/lang/Float;	c	lambda$static$1
		p	0		weather
	m	()F	d	downfall
	m	(Lcnf$b;)Ljava/lang/Boolean;	d	lambda$static$0
		p	0		weather
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Z	b	hasPrecipitation
	f	F	c	temperature
	f	Lcnf$d;	d	temperatureModifier
	f	F	e	downfall
c	cnf$c	net/minecraft/world/level/biome/Biome$Precipitation
	m	()[Lcnf$c;	a	$values
	f	Lcnf$c;	a	NONE
	f	Lcnf$c;	b	RAIN
	f	Lcnf$c;	c	SNOW
	f	[Lcnf$c;	d	$VALUES
c	cnf$d	net/minecraft/world/level/biome/Biome$TemperatureModifier
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()Ljava/lang/String;	a	getName
	m	(Lgt;F)F	a	modifyTemperature
		p	1		pos
		p	2		temperature
	m	()[Lcnf$d;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lcnf$d;	a	NONE
	f	Lcnf$d;	b	FROZEN
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Ljava/lang/String;	d	name
	f	[Lcnf$d;	e	$VALUES
c	cnf$d$1	net/minecraft/world/level/biome/Biome$TemperatureModifier$1
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	(Lgt;F)F	a	modifyTemperature
		p	1		pos
		p	2		temperature
c	cnf$d$2	net/minecraft/world/level/biome/Biome$TemperatureModifier$2
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	(Lgt;F)F	a	modifyTemperature
		p	1		pos
		p	2		temperature
c	cng	net/minecraft/world/level/biome/BiomeGenerationSettings
	m	(Ljava/util/Map;Ljava/util/List;)V	<init>	<init>
		p	1		carvers
		p	2		features
	m	()Ljava/util/List;	a	getFlowerFeatures
	m	(Lcng;)Ljava/util/List;	a	lambda$static$1
		p	0		generationSettings
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Ldgv$a;)Ljava/lang/Iterable;	a	getCarvers
		p	1		carverStep
	m	(Ldjq;)Z	a	lambda$new$3
		p	0		feature
	m	(Ldqt;)Z	a	hasFeature
		p	1		feature
	m	(Ljava/util/List;)Ljava/util/Set;	a	lambda$new$5
	m	()Ljava/util/List;	b	features
	m	(Lcng;)Ljava/util/Map;	b	lambda$static$0
		p	0		generationSettings
	m	(Ljava/util/List;)Ljava/util/List;	b	lambda$new$4
	f	Lcng;	a	EMPTY
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	Ljava/util/Map;	d	carvers
	f	Ljava/util/List;	e	features
	f	Ljava/util/function/Supplier;	f	flowerFeatures
	f	Ljava/util/function/Supplier;	g	featureSet
c	cng$a	net/minecraft/world/level/biome/BiomeGenerationSettings$Builder
	m	(Lhe;Lhe;)V	<init>	<init>
		p	1		placedFeatureLookup
		p	2		configuredCarverLookup
	m	(Ldgv$a;Ladc;)Lcng$a;	a	addCarver
		p	1		carverStep
		p	2		carverKey
	m	(Ldgv$b;Ladc;)Lcng$a;	a	addFeature
		p	1		featureStep
		p	2		featureKey
	f	Lhe;	a	placedFeatures
	f	Lhe;	b	worldCarvers
c	cng$b	net/minecraft/world/level/biome/BiomeGenerationSettings$PlainBuilder
	m	()Lcng;	a	build
	m	(I)V	a	addFeatureStepsUpTo
		p	1		size
	m	(ILhd;)Lcng$b;	a	addFeature
		p	1		ordinal
		p	2		featureEntry
	m	(Ldgv$a;)Ljava/util/List;	a	lambda$addCarver$0
		p	0		step
	m	(Ldgv$a;Lhd;)Lcng$b;	a	addCarver
		p	1		carverStep
		p	2		carverEntry
	m	(Ldgv$b;Lhd;)Lcng$b;	a	addFeature
		p	1		featureStep
		p	2		featureEntry
	m	(Ljava/util/Map$Entry;)Lhh;	a	lambda$build$1
	f	Ljava/util/Map;	a	carvers
	f	Ljava/util/List;	b	features
c	cnh	net/minecraft/world/level/biome/BiomeManager
	m	(Lcnh$a;J)V	<init>	<init>
		p	1		storage
		p	2		seed
	m	(DDD)Lhd;	a	getNoiseBiomeAtPosition
		p	1		x
		p	3		y
		p	5		z
	m	(III)Lhd;	a	getNoiseBiomeAtQuart
		p	1		biomeX
		p	2		biomeY
		p	3		biomeZ
	m	(J)J	a	obfuscateSeed
		p	0		seed
	m	(JIIIDDD)D	a	getFiddledDistance
	m	(Lcnh$a;)Lcnh;	a	withDifferentSource
		p	1		storage
	m	(Lgt;)Lhd;	a	getBiome
		p	1		pos
	m	(J)D	b	getFiddle
	m	(Lgt;)Lhd;	b	getNoiseBiomeAtPosition
		p	1		pos
	f	I	a	CHUNK_CENTER_QUART
	f	I	b	ZOOM_BITS
	f	I	c	ZOOM
	f	I	d	ZOOM_MASK
	f	Lcnh$a;	e	noiseBiomeSource
	f	J	f	biomeZoomSeed
c	cnh$a	net/minecraft/world/level/biome/BiomeManager$NoiseBiomeSource
	m	(III)Lhd;	getNoiseBiome	getNoiseBiome
		p	1		biomeX
		p	2		biomeY
		p	3		biomeZ
c	cni	net/minecraft/world/level/biome/BiomeResolver
	m	(IIILcno$f;)Lhd;	getNoiseBiome	getNoiseBiome
		p	1		x
		p	2		y
		p	3		z
		p	4		noise
c	cnj	net/minecraft/world/level/biome/BiomeSource
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(IIIIILjava/util/function/Predicate;Lapo;ZLcno$f;)Lcom/mojang/datafixers/util/Pair;	a	findBiomeHorizontal
		p	1		x
		p	2		y
		p	3		z
		p	4		radius
		p	5		blockCheckInterval
		p	6		predicate
		p	7		random
		p	9		noiseSampler
	m	(IIIILcno$f;)Ljava/util/Set;	a	getBiomesWithin
		p	1		x
		p	2		y
		p	3		z
		p	4		radius
		p	5		sampler
	m	(IIIILjava/util/function/Predicate;Lapo;Lcno$f;)Lcom/mojang/datafixers/util/Pair;	a	findBiomeHorizontal
		p	1		x
		p	2		y
		p	3		z
		p	4		radius
		p	5		predicate
		p	6		random
		p	7		noiseSampler
	m	(Lgt;IIILjava/util/function/Predicate;Lcno$f;Lcml;)Lcom/mojang/datafixers/util/Pair;	a	findClosestBiome3d
		p	1		origin
		p	2		radius
		p	3		horizontalBlockCheckInterval
		p	4		verticalBlockCheckInterval
		p	5		predicate
		p	6		noiseSampler
		p	7		world
	m	(Ljava/util/List;Lgt;Lcno$f;)V	a	addDebugInfo
		p	1		info
		p	2		pos
		p	3		noiseSampler
	m	()Ljava/util/stream/Stream;	b	collectPossibleBiomes
	m	()Ljava/util/Set;	c	possibleBiomes
	m	()Ljava/util/Set;	d	lambda$new$0
	m	(IIILcno$f;)Lhd;	getNoiseBiome	getNoiseBiome
		p	1		x
		p	2		y
		p	3		z
		p	4		noise
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/function/Supplier;	b	possibleBiomes
c	cnk	net/minecraft/world/level/biome/BiomeSources
	m	(Lhq;)Lcom/mojang/serialization/Codec;	a	bootstrap
		p	0		registry
c	cnl	net/minecraft/world/level/biome/BiomeSpecialEffects
	m	(IIIILjava/util/Optional;Ljava/util/Optional;Lcnl$b;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
		p	1		fogColor
		p	2		waterColor
		p	3		waterFogColor
		p	4		skyColor
		p	5		foliageColor
		p	6		grassColor
		p	7		grassColorModifier
		p	8		particleConfig
		p	9		loopSound
		p	10		moodSound
		p	11		additionsSound
		p	12		music
	m	()I	a	getFogColor
	m	(Lcnl;)Ljava/util/Optional;	a	lambda$static$11
		p	0		effects
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$12
		p	0		instance
	m	()I	b	getWaterColor
	m	(Lcnl;)Ljava/util/Optional;	b	lambda$static$10
		p	0		effects
	m	()I	c	getWaterFogColor
	m	(Lcnl;)Ljava/util/Optional;	c	lambda$static$9
		p	0		effects
	m	()I	d	getSkyColor
	m	(Lcnl;)Ljava/util/Optional;	d	lambda$static$8
		p	0		effects
	m	()Ljava/util/Optional;	e	getFoliageColorOverride
	m	(Lcnl;)Ljava/util/Optional;	e	lambda$static$7
		p	0		effects
	m	()Ljava/util/Optional;	f	getGrassColorOverride
	m	(Lcnl;)Lcnl$b;	f	lambda$static$6
		p	0		effects
	m	()Lcnl$b;	g	getGrassColorModifier
	m	(Lcnl;)Ljava/util/Optional;	g	lambda$static$5
		p	0		effects
	m	()Ljava/util/Optional;	h	getAmbientParticleSettings
	m	(Lcnl;)Ljava/util/Optional;	h	lambda$static$4
		p	0		effects
	m	()Ljava/util/Optional;	i	getAmbientLoopSoundEvent
	m	(Lcnl;)Ljava/lang/Integer;	i	lambda$static$3
		p	0		effects
	m	()Ljava/util/Optional;	j	getAmbientMoodSettings
	m	(Lcnl;)Ljava/lang/Integer;	j	lambda$static$2
		p	0		effects
	m	()Ljava/util/Optional;	k	getAmbientAdditionsSettings
	m	(Lcnl;)Ljava/lang/Integer;	k	lambda$static$1
		p	0		effects
	m	()Ljava/util/Optional;	l	getBackgroundMusic
	m	(Lcnl;)Ljava/lang/Integer;	l	lambda$static$0
		p	0		effects
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	fogColor
	f	I	c	waterColor
	f	I	d	waterFogColor
	f	I	e	skyColor
	f	Ljava/util/Optional;	f	foliageColorOverride
	f	Ljava/util/Optional;	g	grassColorOverride
	f	Lcnl$b;	h	grassColorModifier
	f	Ljava/util/Optional;	i	ambientParticleSettings
	f	Ljava/util/Optional;	j	ambientLoopSoundEvent
	f	Ljava/util/Optional;	k	ambientMoodSettings
	f	Ljava/util/Optional;	l	ambientAdditionsSettings
	f	Ljava/util/Optional;	m	backgroundMusic
c	cnl$a	net/minecraft/world/level/biome/BiomeSpecialEffects$Builder
	m	()Lcnl;	a	build
	m	(I)Lcnl$a;	a	fogColor
		p	1		fogColor
	m	(Lamo;)Lcnl$a;	a	backgroundMusic
		p	1		music
	m	(Lcnc;)Lcnl$a;	a	ambientAdditionsSound
		p	1		additionsSound
	m	(Lcnd;)Lcnl$a;	a	ambientMoodSound
		p	1		moodSound
	m	(Lcne;)Lcnl$a;	a	ambientParticle
		p	1		particleConfig
	m	(Lcnl$b;)Lcnl$a;	a	grassColorModifier
		p	1		grassColorModifier
	m	(Lhd;)Lcnl$a;	a	ambientLoopSound
		p	1		loopSound
	m	()Ljava/lang/IllegalStateException;	b	lambda$build$3
	m	(I)Lcnl$a;	b	waterColor
		p	1		waterColor
	m	()Ljava/lang/IllegalStateException;	c	lambda$build$2
	m	(I)Lcnl$a;	c	waterFogColor
		p	1		waterFogColor
	m	()Ljava/lang/IllegalStateException;	d	lambda$build$1
	m	(I)Lcnl$a;	d	skyColor
		p	1		skyColor
	m	()Ljava/lang/IllegalStateException;	e	lambda$build$0
	m	(I)Lcnl$a;	e	foliageColorOverride
		p	1		foliageColor
	m	(I)Lcnl$a;	f	grassColorOverride
		p	1		grassColor
	f	Ljava/util/OptionalInt;	a	fogColor
	f	Ljava/util/OptionalInt;	b	waterColor
	f	Ljava/util/OptionalInt;	c	waterFogColor
	f	Ljava/util/OptionalInt;	d	skyColor
	f	Ljava/util/Optional;	e	foliageColorOverride
	f	Ljava/util/Optional;	f	grassColorOverride
	f	Lcnl$b;	g	grassColorModifier
	f	Ljava/util/Optional;	h	ambientParticle
	f	Ljava/util/Optional;	i	ambientLoopSoundEvent
	f	Ljava/util/Optional;	j	ambientMoodSettings
	f	Ljava/util/Optional;	k	ambientAdditionsSettings
	f	Ljava/util/Optional;	l	backgroundMusic
c	cnl$b	net/minecraft/world/level/biome/BiomeSpecialEffects$GrassColorModifier
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()Ljava/lang/String;	a	getName
	m	(DDI)I	a	modifyColor
		p	1		x
		p	3		z
		p	5		color
	m	()[Lcnl$b;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lcnl$b;	a	NONE
	f	Lcnl$b;	b	DARK_FOREST
	f	Lcnl$b;	c	SWAMP
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	Ljava/lang/String;	e	name
	f	[Lcnl$b;	f	$VALUES
c	cnl$b$1	net/minecraft/world/level/biome/BiomeSpecialEffects$GrassColorModifier$1
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	(DDI)I	a	modifyColor
		p	1		x
		p	3		z
		p	5		color
c	cnl$b$2	net/minecraft/world/level/biome/BiomeSpecialEffects$GrassColorModifier$2
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	(DDI)I	a	modifyColor
		p	1		x
		p	3		z
		p	5		color
c	cnl$b$3	net/minecraft/world/level/biome/BiomeSpecialEffects$GrassColorModifier$3
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	(DDI)I	a	modifyColor
		p	1		x
		p	3		z
		p	5		color
c	cnm	net/minecraft/world/level/biome/Biomes
	m	(Ljava/lang/String;)Ladc;	a	register
		p	0		name
	f	Ladc;	A	BADLANDS
	f	Ladc;	B	ERODED_BADLANDS
	f	Ladc;	C	WOODED_BADLANDS
	f	Ladc;	D	MEADOW
	f	Ladc;	E	CHERRY_GROVE
	f	Ladc;	F	GROVE
	f	Ladc;	G	SNOWY_SLOPES
	f	Ladc;	H	FROZEN_PEAKS
	f	Ladc;	I	JAGGED_PEAKS
	f	Ladc;	J	STONY_PEAKS
	f	Ladc;	K	RIVER
	f	Ladc;	L	FROZEN_RIVER
	f	Ladc;	M	BEACH
	f	Ladc;	N	SNOWY_BEACH
	f	Ladc;	O	STONY_SHORE
	f	Ladc;	P	WARM_OCEAN
	f	Ladc;	Q	LUKEWARM_OCEAN
	f	Ladc;	R	DEEP_LUKEWARM_OCEAN
	f	Ladc;	S	OCEAN
	f	Ladc;	T	DEEP_OCEAN
	f	Ladc;	U	COLD_OCEAN
	f	Ladc;	V	DEEP_COLD_OCEAN
	f	Ladc;	W	FROZEN_OCEAN
	f	Ladc;	X	DEEP_FROZEN_OCEAN
	f	Ladc;	Y	MUSHROOM_FIELDS
	f	Ladc;	Z	DRIPSTONE_CAVES
	f	Ladc;	a	THE_VOID
	f	Ladc;	aa	LUSH_CAVES
	f	Ladc;	ab	DEEP_DARK
	f	Ladc;	ac	NETHER_WASTES
	f	Ladc;	ad	WARPED_FOREST
	f	Ladc;	ae	CRIMSON_FOREST
	f	Ladc;	af	SOUL_SAND_VALLEY
	f	Ladc;	ag	BASALT_DELTAS
	f	Ladc;	ah	THE_END
	f	Ladc;	ai	END_HIGHLANDS
	f	Ladc;	aj	END_MIDLANDS
	f	Ladc;	ak	SMALL_END_ISLANDS
	f	Ladc;	al	END_BARRENS
	f	Ladc;	b	PLAINS
	f	Ladc;	c	SUNFLOWER_PLAINS
	f	Ladc;	d	SNOWY_PLAINS
	f	Ladc;	e	ICE_SPIKES
	f	Ladc;	f	DESERT
	f	Ladc;	g	SWAMP
	f	Ladc;	h	MANGROVE_SWAMP
	f	Ladc;	i	FOREST
	f	Ladc;	j	FLOWER_FOREST
	f	Ladc;	k	BIRCH_FOREST
	f	Ladc;	l	DARK_FOREST
	f	Ladc;	m	OLD_GROWTH_BIRCH_FOREST
	f	Ladc;	n	OLD_GROWTH_PINE_TAIGA
	f	Ladc;	o	OLD_GROWTH_SPRUCE_TAIGA
	f	Ladc;	p	TAIGA
	f	Ladc;	q	SNOWY_TAIGA
	f	Ladc;	r	SAVANNA
	f	Ladc;	s	SAVANNA_PLATEAU
	f	Ladc;	t	WINDSWEPT_HILLS
	f	Ladc;	u	WINDSWEPT_GRAVELLY_HILLS
	f	Ladc;	v	WINDSWEPT_FOREST
	f	Ladc;	w	WINDSWEPT_SAVANNA
	f	Ladc;	x	JUNGLE
	f	Ladc;	y	SPARSE_JUNGLE
	f	Ladc;	z	BAMBOO_JUNGLE
c	cnn	net/minecraft/world/level/biome/CheckerboardColumnBiomeSource
	m	(Lhh;I)V	<init>	<init>
		p	1		biomes
		p	2		size
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Lcnn;)Ljava/lang/Integer;	a	lambda$static$1
		p	0		biomeSource
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	()Ljava/util/stream/Stream;	b	collectPossibleBiomes
	m	(Lcnn;)Lhh;	b	lambda$static$0
		p	0		biomeSource
	m	(IIILcno$f;)Lhd;	getNoiseBiome	getNoiseBiome
		p	1		x
		p	2		y
		p	3		z
		p	4		noise
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lhh;	c	allowedBiomes
	f	I	d	bitShift
	f	I	e	size
c	cno	net/minecraft/world/level/biome/Climate
	m	()Lcno$f;	a	empty
	m	(F)J	a	quantizeCoord
		p	0		value
	m	(FFFFFF)Lcno$h;	a	target
		p	0		temperatureNoise
		p	1		humidityNoise
		p	2		continentalnessNoise
		p	3		erosionNoise
		p	4		depth
		p	5		weirdnessNoise
	m	(FFFFFFF)Lcno$d;	a	parameters
		p	0		temperature
		p	1		humidity
		p	2		continentalness
		p	3		erosion
		p	4		depth
		p	5		weirdness
		p	6		offset
	m	(J)F	a	unquantizeCoord
		p	0		value
	m	(Lcno$b;Lcno$b;Lcno$b;Lcno$b;Lcno$b;Lcno$b;F)Lcno$d;	a	parameters
		p	0		temperature
		p	1		humidity
		p	2		continentalness
		p	3		erosion
		p	4		depth
		p	5		weirdness
		p	6		offset
	m	(Ljava/util/List;Lcno$f;)Lgt;	a	findSpawnPosition
		p	0		noises
		p	1		sampler
	f	I	a	PARAMETER_COUNT
	f	Z	b	DEBUG_SLOW_BIOME_SEARCH
	f	F	c	QUANTIZATION_FACTOR
c	cno$a	net/minecraft/world/level/biome/Climate$DistanceMetric
	m	(Lcno$e$b;[J)J	distance	distance
		p	1		node
		p	2		otherParameters
c	cno$b	net/minecraft/world/level/biome/Climate$Parameter
	m	()J	a	min
	m	(F)Lcno$b;	a	point
		p	0		point
	m	(FF)Lcno$b;	a	span
		p	0		min
		p	1		max
	m	(J)J	a	distance
		p	1		noise
	m	(Lcno$b;)J	a	distance
		p	1		other
	m	(Lcno$b;Lcno$b;)Lcno$b;	a	span
		p	0		min
		p	1		max
	m	(Ljava/lang/Float;Ljava/lang/Float;)Lcom/mojang/serialization/DataResult;	a	lambda$static$1
		p	0		min
		p	1		max
	m	()J	b	max
	m	(Lcno$b;)Lcno$b;	b	span
		p	1		other
	m	(Ljava/lang/Float;Ljava/lang/Float;)Ljava/lang/String;	b	lambda$static$0
	m	(Lcno$b;)Ljava/lang/Float;	c	lambda$static$3
	m	(Lcno$b;)Ljava/lang/Float;	d	lambda$static$2
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	J	b	min
	f	J	c	max
c	cno$c	net/minecraft/world/level/biome/Climate$ParameterList
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		entries
	m	()Ljava/util/List;	a	values
	m	(Lcno$h;)Ljava/lang/Object;	a	findValue
		p	1		point
	m	(Lcno$h;Lcno$a;)Ljava/lang/Object;	a	findValueIndex
		p	1		point
		p	2		distanceFunction
	m	(Lcom/mojang/serialization/MapCodec;)Lcom/mojang/serialization/Codec;	a	codec
		p	0		entryCodec
	m	(Lcom/mojang/serialization/MapCodec;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$codec$0
		p	1		instance
	m	(Lcno$h;)Ljava/lang/Object;	b	findValueBruteForce
		p	1		point
	m	(Lcno$h;)Ljava/lang/Object;	c	findValueIndex
		p	1		point
	f	Ljava/util/List;	a	values
	f	Lcno$e;	b	index
c	cno$d	net/minecraft/world/level/biome/Climate$ParameterPoint
	m	(Lcno$b;Lcno$b;Lcno$b;Lcno$b;Lcno$b;Lcno$b;J)V	<init>	<init>
		p	1		temperature
		p	2		humidity
		p	3		continentalness
		p	4		erosion
		p	5		depth
		p	6		weirdness
	m	()Ljava/util/List;	a	parameterSpace
	m	(Lcno$d;)Ljava/lang/Long;	a	lambda$static$6
	m	(Lcno$h;)J	a	fitness
		p	1		point
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$7
		p	0		instance
	m	()Lcno$b;	b	temperature
	m	(Lcno$d;)Lcno$b;	b	lambda$static$5
	m	()Lcno$b;	c	humidity
	m	(Lcno$d;)Lcno$b;	c	lambda$static$4
	m	()Lcno$b;	d	continentalness
	m	(Lcno$d;)Lcno$b;	d	lambda$static$3
	m	()Lcno$b;	e	erosion
	m	(Lcno$d;)Lcno$b;	e	lambda$static$2
	m	()Lcno$b;	f	depth
	m	(Lcno$d;)Lcno$b;	f	lambda$static$1
	m	()Lcno$b;	g	weirdness
	m	(Lcno$d;)Lcno$b;	g	lambda$static$0
	m	()J	h	offset
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcno$b;	b	temperature
	f	Lcno$b;	c	humidity
	f	Lcno$b;	d	continentalness
	f	Lcno$b;	e	erosion
	f	Lcno$b;	f	depth
	f	Lcno$b;	g	weirdness
	f	J	h	offset
c	cno$e	net/minecraft/world/level/biome/Climate$RTree
	m	(Lcno$e$b;)V	<init>	<init>
		p	1		firstNode
	m	(ILcno$e$b;)J	a	lambda$build$1
		p	1		node
	m	(ILcno$e$c;)Lcno$e$b;	a	lambda$build$2
		p	1		node
	m	(ILjava/util/List;)Lcno$e$b;	a	build
		p	0		parameterNumber
		p	1		subTree
	m	(IZ)Ljava/util/Comparator;	a	comparator
		p	0		currentParameter
		p	1		abs
	m	(IZLcno$e$b;)J	a	lambda$comparator$3
	m	(Lcno$h;Lcno$a;)Ljava/lang/Object;	a	search
		p	1		point
		p	2		distanceFunction
	m	(Lcom/mojang/datafixers/util/Pair;)Lcno$e$a;	a	lambda$create$0
		p	0		entry
	m	(Ljava/util/List;)Lcno$e;	a	create
		p	0		entries
	m	(Ljava/util/List;IIZ)V	a	sort
		p	0		subTree
		p	1		parameterNumber
		p	2		currentParameter
		p	3		abs
	m	([Lcno$b;)J	a	cost
		p	0		parameters
	m	(Ljava/util/List;)Ljava/util/List;	b	bucketize
		p	0		nodes
	m	(Ljava/util/List;)Ljava/util/List;	c	buildParameterSpace
		p	0		subTree
	f	I	a	CHILDREN_PER_NODE
	f	Lcno$e$b;	b	root
	f	Ljava/lang/ThreadLocal;	c	lastResult
c	cno$e$a	net/minecraft/world/level/biome/Climate$RTree$Leaf
	m	(Lcno$d;Ljava/lang/Object;)V	<init>	<init>
		p	1		parameters
		p	2		value
	m	([JLcno$e$a;Lcno$a;)Lcno$e$a;	a	search
		p	1		otherParameters
		p	2		alternative
		p	3		distanceFunction
	f	Ljava/lang/Object;	b	value
c	cno$e$b	net/minecraft/world/level/biome/Climate$RTree$Node
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		parameters
	m	([J)J	a	distance
		p	1		otherParameters
	m	([JLcno$e$a;Lcno$a;)Lcno$e$a;	a	search
		p	1		otherParameters
		p	2		alternative
		p	3		distanceFunction
	f	[Lcno$b;	a	parameterSpace
c	cno$e$c	net/minecraft/world/level/biome/Climate$RTree$SubTree
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		subTree
	m	(Ljava/util/List;Ljava/util/List;)V	<init>	<init>
		p	1		parameters
		p	2		subTree
	m	([JLcno$e$a;Lcno$a;)Lcno$e$a;	a	search
		p	1		otherParameters
		p	2		alternative
		p	3		distanceFunction
	f	[Lcno$e$b;	b	children
c	cno$f	net/minecraft/world/level/biome/Climate$Sampler
	m	()Lgt;	a	findSpawnPosition
	m	(III)Lcno$h;	a	sample
		p	1		x
		p	2		y
		p	3		z
	m	()Ldgs;	b	temperature
	m	()Ldgs;	c	humidity
	m	()Ldgs;	d	continentalness
	m	()Ldgs;	e	erosion
	m	()Ldgs;	f	depth
	m	()Ldgs;	g	weirdness
	m	()Ljava/util/List;	h	spawnTarget
	f	Ldgs;	a	temperature
	f	Ldgs;	b	humidity
	f	Ldgs;	c	continentalness
	f	Ldgs;	d	erosion
	f	Ldgs;	e	depth
	f	Ldgs;	f	weirdness
	f	Ljava/util/List;	g	spawnTarget
c	cno$g	net/minecraft/world/level/biome/Climate$SpawnFinder
	m	(Ljava/util/List;Lcno$f;)V	<init>	<init>
		p	1		noises
		p	2		sampler
	m	(Ljava/util/List;Lcno$f;FF)V	a	radialSearch
		p	1		noises
		p	2		sampler
		p	3		maxDistance
		p	4		step
	m	(Ljava/util/List;Lcno$f;II)Lcno$g$a;	a	getSpawnPositionAndFitness
		p	0		noises
		p	1		sampler
		p	2		x
		p	3		z
	f	Lcno$g$a;	a	result
c	cno$g$a	net/minecraft/world/level/biome/Climate$SpawnFinder$Result
	m	()Lgt;	a	location
	m	()J	b	fitness
	f	Lgt;	a	location
	f	J	b	fitness
c	cno$h	net/minecraft/world/level/biome/Climate$TargetPoint
	m	()[J	a	toParameterArray
	m	()J	b	temperature
	m	()J	c	humidity
	m	()J	d	continentalness
	m	()J	e	erosion
	m	()J	f	depth
	m	()J	g	weirdness
	f	J	a	temperature
	f	J	b	humidity
	f	J	c	continentalness
	f	J	d	erosion
	f	J	e	depth
	f	J	f	weirdness
c	cnp	net/minecraft/world/level/biome/FeatureSorter
	m	(ILcnp$a;)Z	a	lambda$buildFeaturesPerStep$2
		p	1		feature
	m	(Ljava/util/Comparator;Lcnp$a;)Ljava/util/Set;	a	lambda$buildFeaturesPerStep$1
		p	1		feature
	m	(Ljava/util/List;Ljava/util/function/Function;Z)Ljava/util/List;	a	buildFeaturesPerStep
		p	0		biomes
		p	1		biomesToPlacedFeaturesList
		p	2		listInvolvedBiomesOnFailure
	m	(Lorg/apache/commons/lang3/mutable/MutableInt;Ljava/lang/Object;)I	a	lambda$buildFeaturesPerStep$0
		p	1		feature
c	cnp$a	net/minecraft/world/level/biome/FeatureSorter$1FeatureData
	m	()I	a	featureIndex
	m	()I	b	step
	m	()Ldqt;	c	feature
	f	I	a	featureIndex
	f	I	b	step
	f	Ldqt;	c	feature
c	cnp$b	net/minecraft/world/level/biome/FeatureSorter$StepFeatureData
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		features
	m	()Ljava/util/List;	a	features
	m	(I)Lit/unimi/dsi/fastutil/objects/Object2IntMap;	a	lambda$new$0
		p	0		size
	m	()Ljava/util/function/ToIntFunction;	b	indexMapping
	f	Ljava/util/List;	a	features
	f	Ljava/util/function/ToIntFunction;	b	indexMapping
c	cnq	net/minecraft/world/level/biome/FixedBiomeSource
	m	(Lhd;)V	<init>	<init>
		p	1		biome
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(IIIIILjava/util/function/Predicate;Lapo;ZLcno$f;)Lcom/mojang/datafixers/util/Pair;	a	findBiomeHorizontal
		p	1		x
		p	2		y
		p	3		z
		p	4		radius
		p	5		blockCheckInterval
		p	6		predicate
		p	7		random
		p	9		noiseSampler
	m	(IIIILcno$f;)Ljava/util/Set;	a	getBiomesWithin
		p	1		x
		p	2		y
		p	3		z
		p	4		radius
		p	5		sampler
	m	(Lcnq;)Lhd;	a	lambda$static$0
		p	0		biomeSource
	m	(Lgt;IIILjava/util/function/Predicate;Lcno$f;Lcml;)Lcom/mojang/datafixers/util/Pair;	a	findClosestBiome3d
		p	1		origin
		p	2		radius
		p	3		horizontalBlockCheckInterval
		p	4		verticalBlockCheckInterval
		p	5		predicate
		p	6		noiseSampler
		p	7		world
	m	()Ljava/util/stream/Stream;	b	collectPossibleBiomes
	m	(III)Lhd;	getNoiseBiome	getNoiseBiome
		p	1		biomeX
		p	2		biomeY
		p	3		biomeZ
	m	(IIILcno$f;)Lhd;	getNoiseBiome	getNoiseBiome
		p	1		x
		p	2		y
		p	3		z
		p	4		noise
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lhd;	c	biome
c	cnr	net/minecraft/world/level/biome/MobSpawnSettings
	m	(FLjava/util/Map;Ljava/util/Map;)V	<init>	<init>
		p	1		creatureSpawnProbability
		p	2		spawners
		p	3		spawnCosts
	m	()F	a	getCreatureProbability
	m	(Lbfl;)Lcnr$b;	a	getMobSpawnCost
		p	1		entityType
	m	(Lbga;)Lbcm;	a	getMobs
		p	1		spawnGroup
	m	(Lcnr;)Ljava/util/Map;	a	lambda$static$2
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	(Lcnr;)Ljava/util/Map;	b	lambda$static$1
	m	(Lcnr;)Ljava/lang/Float;	c	lambda$static$0
	f	Lbcm;	a	EMPTY_MOB_LIST
	f	Lcnr;	b	EMPTY
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	F	e	DEFAULT_CREATURE_SPAWN_PROBABILITY
	f	F	f	creatureGenerationProbability
	f	Ljava/util/Map;	g	spawners
	f	Ljava/util/Map;	h	mobSpawnCosts
c	cnr$a	net/minecraft/world/level/biome/MobSpawnSettings$Builder
	m	()Lcnr;	a	build
	m	(F)Lcnr$a;	a	creatureGenerationProbability
		p	1		probability
	m	(Lbfl;DD)Lcnr$a;	a	addMobCharge
		p	1		entityType
		p	2		mass
		p	4		gravityLimit
	m	(Lbga;)Ljava/util/List;	a	lambda$new$1
	m	(Lbga;Lcnr$c;)Lcnr$a;	a	addSpawn
		p	1		spawnGroup
		p	2		spawnEntry
	m	(Ljava/util/Map$Entry;)Lbcm;	a	lambda$build$2
	m	(Lbga;)Lbga;	b	lambda$new$0
	f	Ljava/util/Map;	a	spawners
	f	Ljava/util/Map;	b	mobSpawnCosts
	f	F	c	creatureGenerationProbability
c	cnr$b	net/minecraft/world/level/biome/MobSpawnSettings$MobSpawnCost
	m	(DD)V	<init>	<init>
		p	1		gravityLimit
		p	3		mass
	m	()D	a	energyBudget
	m	(Lcnr$b;)Ljava/lang/Double;	a	lambda$static$1
		p	0		spawnDensity
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	()D	b	charge
	m	(Lcnr$b;)Ljava/lang/Double;	b	lambda$static$0
		p	0		spawnDensity
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	D	b	energyBudget
	f	D	c	charge
c	cnr$c	net/minecraft/world/level/biome/MobSpawnSettings$SpawnerData
	m	(Lbfl;III)V	<init>	<init>
		p	1		type
		p	2		weight
		p	3		minGroupSize
		p	4		maxGroupSize
	m	(Lbfl;Lbcj;II)V	<init>	<init>
		p	1		type
		p	2		weight
		p	3		minGroupSize
		p	4		maxGroupSize
	m	(Lcnr$c;)Lcom/mojang/serialization/DataResult;	a	lambda$static$5
		p	0		spawnEntry
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	()Ljava/lang/String;	b	lambda$static$4
	m	(Lcnr$c;)Ljava/lang/Integer;	b	lambda$static$2
		p	0		spawnEntry
	m	(Lcnr$c;)Ljava/lang/Integer;	c	lambda$static$1
		p	0		spawnEntry
	m	(Lcnr$c;)Lbfl;	d	lambda$static$0
		p	0		spawnEntry
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lbfl;	b	type
	f	I	c	minCount
	f	I	d	maxCount
c	cns	net/minecraft/world/level/biome/MultiNoiseBiomeSource
	m	(Lcom/mojang/datafixers/util/Either;)V	<init>	<init>
		p	1		biomeEntries
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Ladc;)Z	a	stable
		p	1		parameterList
	m	(Lcno$c;)Lcns;	a	createFromList
		p	0		biomeEntries
	m	(Lcno$h;)Lhd;	a	getNoiseBiome
		p	1		point
	m	(Lcns;)Lcom/mojang/datafixers/util/Either;	a	lambda$static$0
		p	0		source
	m	(Lhd;)Lcns;	a	createFromPreset
		p	0		biomeEntries
	m	(Ljava/util/List;Lgt;Lcno$f;)V	a	addDebugInfo
		p	1		info
		p	2		pos
		p	3		noiseSampler
	m	()Ljava/util/stream/Stream;	b	collectPossibleBiomes
	m	(Lcno$c;)Lcno$c;	b	lambda$parameters$1
		p	0		entries
	m	(Lhd;)Lcno$c;	b	lambda$parameters$2
		p	0		parameterListEntry
	m	()Lcno$c;	d	parameters
	m	(IIILcno$f;)Lhd;	getNoiseBiome	getNoiseBiome
		p	1		x
		p	2		y
		p	3		z
		p	4		noise
	f	Lcom/mojang/serialization/MapCodec;	b	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Lcom/mojang/serialization/MapCodec;	d	ENTRY_CODEC
	f	Lcom/mojang/serialization/MapCodec;	e	PRESET_CODEC
	f	Lcom/mojang/datafixers/util/Either;	f	parameters
c	cnt	net/minecraft/world/level/biome/MultiNoiseBiomeSourceParameterList
	m	(Lcnt$a;Lhe;)V	<init>	<init>
		p	1		preset
		p	2		biomeLookup
	m	()Lcno$c;	a	parameters
	m	(Ladc;)Ladc;	a	lambda$knownPresets$3
	m	(Lcnt$a;)Lcno$c;	a	lambda$knownPresets$4
		p	0		preset
	m	(Lcnt;)Lcnt$a;	a	lambda$static$0
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	()Ljava/util/Map;	b	knownPresets
	m	(Lcnt$a;)Lcnt$a;	b	lambda$knownPresets$2
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lcnt$a;	c	preset
	f	Lcno$c;	d	parameters
c	cnt$a	net/minecraft/world/level/biome/MultiNoiseBiomeSourceParameterList$Preset
	m	(Ladd;Lcnt$a$a;)V	<init>	<init>
		p	1		id
		p	2		biomeSourceFunction
	m	()Ljava/util/stream/Stream;	a	usedBiomes
	m	(Ladc;)Ladc;	a	lambda$usedBiomes$6
	m	(Ladd;)Lcom/mojang/serialization/DataResult;	a	lambda$static$3
	m	(Lcnt$a;)Lcom/mojang/serialization/DataResult;	a	lambda$static$4
	m	(Lcom/google/common/collect/ImmutableList$Builder;Ljava/util/function/Function;Lcom/mojang/datafixers/util/Pair;)V	a	lambda$generateOverworldBiomes$5
		p	2		pair
	m	(Ljava/util/function/Function;Lcnv$a;)Lcno$c;	a	generateOverworldBiomes
		p	0		biomeEntryGetter
		p	1		parametersType
	m	()Ladd;	b	id
	m	(Ladd;)Lcom/mojang/serialization/DataResult;	b	lambda$static$2
	m	(Lcnt$a;)Lcnt$a;	b	lambda$static$0
	m	()Lcnt$a$a;	c	provider
	m	(Ladd;)Ljava/lang/String;	c	lambda$static$1
	f	Lcnt$a;	a	NETHER
	f	Lcnt$a;	b	OVERWORLD
	f	Lcnt$a;	c	OVERWORLD_UPDATE_1_20
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	Ladd;	e	id
	f	Lcnt$a$a;	f	provider
	f	Ljava/util/Map;	g	BY_NAME
c	cnt$a$1	net/minecraft/world/level/biome/MultiNoiseBiomeSourceParameterList$Preset$1
	m	(Ljava/util/function/Function;)Lcno$c;	apply	apply
		p	1		biomeEntryGetter
c	cnt$a$2	net/minecraft/world/level/biome/MultiNoiseBiomeSourceParameterList$Preset$2
	m	(Ljava/util/function/Function;)Lcno$c;	apply	apply
		p	1		biomeEntryGetter
c	cnt$a$3	net/minecraft/world/level/biome/MultiNoiseBiomeSourceParameterList$Preset$3
	m	(Ljava/util/function/Function;)Lcno$c;	apply	apply
		p	1		biomeEntryGetter
c	cnt$a$a	net/minecraft/world/level/biome/MultiNoiseBiomeSourceParameterList$Preset$SourceProvider
	m	(Ljava/util/function/Function;)Lcno$c;	apply	apply
		p	1		biomeEntryGetter
c	cnu	net/minecraft/world/level/biome/MultiNoiseBiomeSourceParameterLists
	m	(Ljava/lang/String;)Ladc;	a	register
		p	0		id
	m	(Loa;)V	a	bootstrap
		p	0		registry
	m	(Loa;)V	b	nextUpdate
		p	0		registry
	f	Ladc;	a	NETHER
	f	Ladc;	b	OVERWORLD
c	cnv	net/minecraft/world/level/biome/OverworldBiomeBuilder
	m	(Lcnv$a;)V	<init>	<init>
		p	1		parametersType
	m	()Ljava/util/List;	a	spawnTarget
	m	(D)Ljava/lang/String;	a	getDebugStringForPeaksAndValleys
		p	0		weirdness
	m	(D[Lcno$b;)Ljava/lang/String;	a	getDebugStringForNoiseValue
		p	0		noisePoint
		p	2		noiseRanges
	m	(II)Ladc;	a	pickBeachBiome
		p	1		temperature
		p	2		humidity
	m	(IILcno$b;)Ladc;	a	pickMiddleBiome
		p	1		temperature
		p	2		humidity
		p	3		weirdness
	m	(IILcno$b;Ladc;)Ladc;	a	maybePickWindsweptSavannaBiome
		p	1		temperature
		p	2		humidity
		p	3		weirdness
		p	4		biomeKey
	m	(ILcno$b;)Ladc;	a	pickBadlandsBiome
		p	1		humidity
		p	2		weirdness
	m	(Ldgs;Ldgs;Ldgs$b;)Z	a	isDeepDarkRegion
	m	(Ljava/util/function/Consumer;)V	a	addBiomes
		p	1		parameters
	m	(Ljava/util/function/Consumer;Lcno$b;)V	a	addPeaks
		p	1		parameters
		p	2		weirdness
	m	(Ljava/util/function/Consumer;Lcno$b;Lcno$b;Lcno$b;Lcno$b;Lcno$b;FLadc;)V	a	addSurfaceBiome
		p	1		parameters
		p	2		temperature
		p	3		humidity
		p	4		continentalness
		p	5		erosion
		p	6		weirdness
		p	7		offset
		p	8		biome
	m	()[Lcno$b;	b	getTemperatureThresholds
	m	(D)Ljava/lang/String;	b	getDebugStringForContinentalness
		p	1		continentalness
	m	(IILcno$b;)Ladc;	b	pickMiddleBiomeOrBadlandsIfHot
		p	1		temperature
		p	2		humidity
		p	3		weirdness
	m	(Ljava/util/function/Consumer;)V	b	addDebugBiomes
		p	1		parameters
	m	(Ljava/util/function/Consumer;Lcno$b;)V	b	addHighSlice
		p	1		parameters
		p	2		weirdness
	m	(Ljava/util/function/Consumer;Lcno$b;Lcno$b;Lcno$b;Lcno$b;Lcno$b;FLadc;)V	b	addUndergroundBiome
		p	1		parameters
		p	2		temperature
		p	3		humidity
		p	4		continentalness
		p	5		erosion
		p	6		weirdness
		p	7		offset
		p	8		biome
	m	()[Lcno$b;	c	getHumidityThresholds
	m	(D)Ljava/lang/String;	c	getDebugStringForErosion
		p	1		erosion
	m	(IILcno$b;)Ladc;	c	pickMiddleBiomeOrBadlandsIfHotOrSlopeIfCold
		p	1		temperature
		p	2		humidity
		p	3		weirdness
	m	(Ljava/util/function/Consumer;)V	c	addOffCoastBiomes
		p	1		parameters
	m	(Ljava/util/function/Consumer;Lcno$b;)V	c	addMidSlice
		p	1		parameters
		p	2		weirdness
	m	(Ljava/util/function/Consumer;Lcno$b;Lcno$b;Lcno$b;Lcno$b;Lcno$b;FLadc;)V	c	addBottomBiome
		p	1		parameters
		p	2		temperature
		p	3		humidity
		p	4		continentalness
		p	5		erosion
		p	6		weirdness
		p	7		offset
		p	8		biome
	m	()[Lcno$b;	d	getErosionThresholds
	m	(D)Ljava/lang/String;	d	getDebugStringForTemperature
		p	1		temperature
	m	(IILcno$b;)Ladc;	d	pickShatteredCoastBiome
		p	1		temperature
		p	2		humidity
		p	3		weirdness
	m	(Ljava/util/function/Consumer;)V	d	addInlandBiomes
		p	1		parameters
	m	(Ljava/util/function/Consumer;Lcno$b;)V	d	addLowSlice
		p	1		parameters
		p	2		weirdness
	m	()[Lcno$b;	e	getContinentalnessThresholds
	m	(D)Ljava/lang/String;	e	getDebugStringForHumidity
		p	1		humidity
	m	(IILcno$b;)Ladc;	e	pickPlateauBiome
		p	1		temperature
		p	2		humidity
		p	3		weirdness
	m	(Ljava/util/function/Consumer;)V	e	addUndergroundBiomes
		p	1		parameters
	m	(Ljava/util/function/Consumer;Lcno$b;)V	e	addValleys
		p	1		parameters
		p	2		weirdness
	m	()[Lcno$b;	f	getPeaksAndValleysThresholds
	m	(IILcno$b;)Ladc;	f	pickPeakBiome
		p	1		temperature
		p	2		humidity
		p	3		weirdness
	m	()[Lcno$b;	g	getWeirdnessThresholds
	m	(IILcno$b;)Ladc;	g	pickSlopeBiome
		p	1		temperature
		p	2		humidity
		p	3		weirdness
	m	(IILcno$b;)Ladc;	h	pickShatteredBiome
		p	1		temperature
		p	2		humidity
		p	3		weirdness
	f	Lcno$b;	A	nearInlandContinentalness
	f	Lcno$b;	B	midInlandContinentalness
	f	Lcno$b;	C	farInlandContinentalness
	f	[[Ladc;	D	OCEANS
	f	[[Ladc;	E	MIDDLE_BIOMES
	f	[[Ladc;	F	MIDDLE_BIOMES_VARIANT
	f	[[Ladc;	G	PLATEAU_BIOMES
	f	[[Ladc;	H	PLATEAU_BIOMES_VARIANT
	f	[[Ladc;	I	SHATTERED_BIOMES
	f	F	a	HIGH_START
	f	F	b	PEAK_START
	f	F	c	NEAR_INLAND_START
	f	F	d	MID_INLAND_START
	f	F	e	FAR_INLAND_START
	f	F	f	EROSION_INDEX_1_START
	f	F	g	EROSION_INDEX_2_START
	f	F	h	VALLEY_SIZE
	f	F	i	LOW_START
	f	F	j	HIGH_END
	f	F	k	PEAK_SIZE
	f	F	l	PEAK_END
	f	F	m	EROSION_DEEP_DARK_DRYNESS_THRESHOLD
	f	F	n	DEPTH_DEEP_DARK_DRYNESS_THRESHOLD
	f	Lcnv$a;	o	modifier
	f	Lcno$b;	p	FULL_RANGE
	f	[Lcno$b;	q	temperatures
	f	[Lcno$b;	r	humidities
	f	[Lcno$b;	s	erosions
	f	Lcno$b;	t	FROZEN_RANGE
	f	Lcno$b;	u	UNFROZEN_RANGE
	f	Lcno$b;	v	mushroomFieldsContinentalness
	f	Lcno$b;	w	deepOceanContinentalness
	f	Lcno$b;	x	oceanContinentalness
	f	Lcno$b;	y	coastContinentalness
	f	Lcno$b;	z	inlandContinentalness
c	cnv$a	net/minecraft/world/level/biome/OverworldBiomeBuilder$Modifier
	m	()[Lcnv$a;	a	$values
	f	Lcnv$a;	a	NONE
	f	Lcnv$a;	b	UPDATE_1_20
	f	[Lcnv$a;	c	$VALUES
c	cnw	net/minecraft/world/level/biome/TheEndBiomeSource
	m	(Lhd;Lhd;Lhd;Lhd;Lhd;)V	<init>	<init>
		p	1		centerBiome
		p	2		highlandsBiome
		p	3		midlandsBiome
		p	4		smallIslandsBiome
		p	5		barrensBiome
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lhe;)Lcnw;	a	create
		p	0		biomeLookup
	m	()Ljava/util/stream/Stream;	b	collectPossibleBiomes
	m	(IIILcno$f;)Lhd;	getNoiseBiome	getNoiseBiome
		p	1		x
		p	2		y
		p	3		z
		p	4		noise
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lhd;	c	end
	f	Lhd;	d	highlands
	f	Lhd;	e	midlands
	f	Lhd;	f	islands
	f	Lhd;	g	barrens
c	cnx	net/minecraft/world/level/biome/package-info
c	cny	net/minecraft/world/level/block/AbstractBannerBlock
	m	(Lcel;Ldbp$d;)V	<init>	<init>
		p	1		color
		p	2		settings
	m	(Lcfv;Lcyu;)V	a	lambda$setPlacedBy$1
		p	1		blockEntity
	m	(Lclo;Lgt;Ldbq;)Lcfv;	a	getCloneItemStack
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcmi;Lgt;Ldbq;Lbfx;Lcfv;)V	a	setPlacedBy
		p	1		world
		p	2		pos
		p	3		state
		p	4		placer
		p	5		itemStack
	m	(Lgt;Ldbq;)Lcze;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	()Z	ao_	isPossibleToRespawnInThis
	m	()Lcel;	b	getColor
	m	(Lcfv;Lcyu;)V	b	lambda$setPlacedBy$0
		p	1		blockEntity
	f	Lcel;	a	color
c	cnz	net/minecraft/world/level/block/AbstractCandleBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lbym;Ldbq;Lcmj;Lgt;)V	a	extinguish
		p	0		player
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcmi;Ldbq;Leda;Lbze;)V	a	onProjectileHit
		p	1		world
		p	2		state
		p	3		hit
		p	4		projectile
	m	(Lcmi;Lede;Lapo;)V	a	addParticlesAndSound
		p	0		world
		p	1		vec3d
		p	2		random
	m	(Lcmi;Lgt;Lapo;Lede;)V	a	lambda$animateTick$0
		p	3		offset
	m	(Lcmj;Ldbq;Lgt;Z)V	a	setLit
		p	0		world
		p	1		state
		p	2		pos
		p	3		lit
	m	(Lcmj;Lgt;Lede;)V	a	lambda$extinguish$1
		p	2		offset
	m	(Ldbq;)Ljava/lang/Iterable;	a	getParticleOffsets
		p	1		state
	m	(Ldbq;Lcmi;Lgt;Lapo;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;)Z	b	isLit
		p	0		state
	m	(Ldbq;)Z	c	canBeLit
		p	1		state
	f	I	a	LIGHT_PER_CANDLE
	f	Ldci;	b	LIT
c	coa	net/minecraft/world/level/block/AbstractCauldronBlock
	m	(Ldbp$d;Ljava/util/Map;)V	<init>	<init>
		p	1		settings
		p	2		behaviorMap
	m	(Ldbq;)D	a	getContentHeight
		p	1		state
	m	(Ldbq;Laip;Lgt;Lapo;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Lclo;Lgt;)Ledx;	a	getInteractionShape
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lclo;Lgt;Ldxa;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lcmi;Lgt;Lbym;Lbdx;Leda;)Lbdy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldbq;Lcmi;Lgt;Ldwi;)V	a	receiveStalactiteDrip
		p	1		state
		p	2		world
		p	3		pos
		p	4		fluid
	m	(Ldbq;Lgt;Lbfh;)Z	a	isEntityInsideContent
		p	1		state
		p	2		pos
		p	3		entity
	m	(Ldwi;)Z	a	canReceiveStalactiteDrip
		p	1		fluid
	m	(Ldbq;)Z	c	isFull
		p	1		state
	m	(Ldbq;)Z	d_	hasAnalogOutputSignal
		p	1		state
	f	I	a	FLOOR_LEVEL
	f	Ledx;	b	SHAPE
	f	I	c	SIDE_THICKNESS
	f	I	d	LEG_WIDTH
	f	I	e	LEG_HEIGHT
	f	I	f	LEG_DEPTH
	f	Ledx;	g	INSIDE
	f	Ljava/util/Map;	h	interactions
c	cob	net/minecraft/world/level/block/AbstractChestBlock
	m	(Ldbp$d;Ljava/util/function/Supplier;)V	<init>	<init>
		p	1		settings
		p	2		entityTypeSupplier
	m	(Ldbq;Lcmi;Lgt;Z)Lcrj$c;	a	combine
		p	1		state
		p	2		world
		p	3		pos
		p	4		ignoreBlocked
	f	Ljava/util/function/Supplier;	a	blockEntityType
c	coc	net/minecraft/world/level/block/AbstractFurnaceBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lcic;)Ldbq;	a	getStateForPlacement
		p	1		ctx
	m	(Lcmi;Lczg;Lczg;)Lczf;	a	createFurnaceTicker
		p	0		world
		p	1		givenType
		p	2		expectedType
	m	(Lcmi;Lgt;Lbym;)V	a	openContainer
		p	1		world
		p	2		pos
		p	3		player
	m	(Lcmi;Lgt;Ldbq;Lbfx;Lcfv;)V	a	setPlacedBy
		p	1		world
		p	2		pos
		p	3		state
		p	4		placer
		p	5		itemStack
	m	(Ldbq;Lcmi;Lgt;)I	a	getAnalogOutputSignal
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lcmi;Lgt;Lbym;Lbdx;Leda;)Lbdy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldbq;Lcmi;Lgt;Ldbq;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Ldbq;Lcua;)Ldbq;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldbq;Lcvq;)Ldbq;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldbq;)Lcvj;	b_	getRenderShape
		p	1		state
	m	(Ldbq;)Z	d_	hasAnalogOutputSignal
		p	1		state
	f	Ldcl;	a	FACING
	f	Ldci;	b	LIT
c	cod	net/minecraft/world/level/block/AbstractGlassBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Ldbq;Lclo;Lgt;)F	b	getShadeBrightness
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	b	getVisualShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lclo;Lgt;)Z	c	propagatesSkylightDown
		p	1		state
		p	2		world
		p	3		pos
c	coe	net/minecraft/world/level/block/AbstractSkullBlock
	m	(Lcwg$a;Ldbp$d;)V	<init>	<init>
		p	1		type
		p	2		settings
	m	(Lcmi;Ldbq;Lczg;)Lczf;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Ldbq;Lclo;Lgt;Ldxa;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Lgt;Ldbq;)Lcze;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	()Lcwg$a;	b	getType
	m	()Lbfm;	g	getEquipmentSlot
	f	Lcwg$a;	a	type
c	cof	net/minecraft/world/level/block/AirBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;)Lcvj;	b_	getRenderShape
		p	1		state
c	cog	net/minecraft/world/level/block/AmethystBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lcmi;Ldbq;Leda;Lbze;)V	a	onProjectileHit
		p	1		world
		p	2		state
		p	3		hit
		p	4		projectile
c	coh	net/minecraft/world/level/block/AmethystClusterBlock
	m	(IILdbp$d;)V	<init>	<init>
		p	1		height
		p	2		xzOffset
		p	3		settings
	m	(Lcic;)Ldbq;	a	getStateForPlacement
		p	1		ctx
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lcml;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lcua;)Ldbq;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldbq;Lcvq;)Ldbq;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldbq;)Ldwj;	c_	getFluidState
		p	1		state
	m	(Ldbq;)Ldwp;	d	getPistonPushReaction
		p	1		state
	f	Ldci;	a	WATERLOGGED
	f	Ldcl;	b	FACING
	f	Ledx;	c	northAabb
	f	Ledx;	d	southAabb
	f	Ledx;	e	eastAabb
	f	Ledx;	f	westAabb
	f	Ledx;	g	upAabb
	f	Ledx;	h	downAabb
c	coh$1	net/minecraft/world/level/block/AmethystClusterBlock$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	coi	net/minecraft/world/level/block/AnvilBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lbfh;)Lbem;	a	getFallDamageSource
		p	1		attacker
	m	(Lbve;)V	a	falling
		p	1		entity
	m	(Lcic;)Ldbq;	a	getStateForPlacement
		p	1		ctx
	m	(Lcmi;Lgt;ILbyl;Lbym;)Lcbd;	a	lambda$getMenuProvider$0
		p	2		syncId
		p	3		inventory
		p	4		player
	m	(Lcmi;Lgt;Lbve;)V	a	onBrokenAfterFall
		p	1		world
		p	2		pos
		p	3		fallingBlockEntity
	m	(Lcmi;Lgt;Ldbq;Ldbq;Lbve;)V	a	onLand
		p	1		world
		p	2		pos
		p	3		fallingBlockState
		p	4		currentStateInPos
		p	5		fallingBlockEntity
	m	(Ldbq;Lclo;Lgt;Ldxa;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lcmi;Lgt;Lbym;Lbdx;Leda;)Lbdy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldbq;Lcvq;)Ldbq;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldbq;Lcmi;Lgt;)Lbeb;	b	getMenuProvider
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lclo;Lgt;)I	d	getDustColor
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;)Ldbq;	e	damage
		p	0		fallingState
	f	Ldcl;	a	FACING
	f	Ledx;	b	BASE
	f	Ledx;	c	X_LEG1
	f	Ledx;	d	X_LEG2
	f	Ledx;	e	X_TOP
	f	Ledx;	f	Z_LEG1
	f	Ledx;	g	Z_LEG2
	f	Ledx;	h	Z_TOP
	f	Ledx;	i	X_AXIS_AABB
	f	Ledx;	j	Z_AXIS_AABB
	f	Ltj;	k	CONTAINER_TITLE
	f	F	l	FALL_DAMAGE_PER_DISTANCE
	f	I	m	FALL_DAMAGE_MAX
c	coj	net/minecraft/world/level/block/AttachedStemBlock
	m	(Lcxa;Ljava/util/function/Supplier;Ldbp$d;)V	<init>	<init>
		p	1		gourdBlock
		p	2		pickBlockItem
		p	3		settings
	m	(Lclo;Lgt;Ldbq;)Lcfv;	a	getCloneItemStack
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lcua;)Ldbq;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldbq;Lcvq;)Ldbq;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldbq;Lclo;Lgt;)Z	d	mayPlaceOn
		p	1		floor
		p	2		world
		p	3		pos
	f	Ldcl;	a	FACING
	f	F	b	AABB_OFFSET
	f	Ljava/util/Map;	c	AABBS
	f	Lcxa;	d	fruit
	f	Ljava/util/function/Supplier;	e	seedSupplier
c	cok	net/minecraft/world/level/block/AzaleaBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Laip;Lapo;Lgt;Ldbq;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcmi;Lapo;Lgt;Ldbq;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcml;Lgt;Ldbq;Z)Z	a	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
		p	4		isClient
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lclo;Lgt;)Z	d	mayPlaceOn
		p	1		floor
		p	2		world
		p	3		pos
	f	Lday;	a	TREE_GROWER
	f	Ledx;	b	SHAPE
c	col	net/minecraft/world/level/block/BambooSaplingBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Laip;Lapo;Lgt;Ldbq;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lclo;Lgt;Ldbq;)Lcfv;	a	getCloneItemStack
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcmi;Lapo;Lgt;Ldbq;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcmi;Lgt;)V	a	growBamboo
		p	1		world
		p	2		pos
	m	(Lcml;Lgt;Ldbq;Z)Z	a	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
		p	4		isClient
	m	(Ldbq;Lbym;Lclo;Lgt;)F	a	getDestroyProgress
		p	1		state
		p	2		player
		p	3		world
		p	4		pos
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lcml;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldbq;Laip;Lgt;Lapo;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	f	F	a	SAPLING_AABB_OFFSET
	f	Ledx;	b	SAPLING_SHAPE
c	com	net/minecraft/world/level/block/BambooStalkBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Laip;Lapo;Lgt;Ldbq;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcic;)Ldbq;	a	getStateForPlacement
		p	1		ctx
	m	(Lclo;Lgt;)I	a	getHeightAboveUpToMax
		p	1		world
		p	2		pos
	m	(Lcmi;Lapo;Lgt;Ldbq;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcml;Lgt;Ldbq;Z)Z	a	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
		p	4		isClient
	m	(Ldbq;Laip;Lgt;Lapo;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Lbym;Lclo;Lgt;)F	a	getDestroyProgress
		p	1		state
		p	2		player
		p	3		world
		p	4		pos
	m	(Ldbq;Lclo;Lgt;Ldxa;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lcmi;Lgt;Lapo;I)V	a	growBamboo
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
		p	5		height
	m	(Ldbq;Lcml;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldbq;Lclo;Lgt;)Z	a_	isCollisionShapeFullBlock
		p	1		state
		p	2		world
		p	3		pos
	m	(Lclo;Lgt;)I	b	getHeightBelowUpToMax
		p	1		world
		p	2		pos
	m	(Ldbq;Laip;Lgt;Lapo;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Lclo;Lgt;)Z	c	propagatesSkylightDown
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	c	getCollisionShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;)Z	e_	isRandomlyTicking
		p	1		state
	f	F	a	SMALL_LEAVES_AABB_OFFSET
	f	F	b	LARGE_LEAVES_AABB_OFFSET
	f	F	c	COLLISION_AABB_OFFSET
	f	Ledx;	d	SMALL_SHAPE
	f	Ledx;	e	LARGE_SHAPE
	f	Ledx;	f	COLLISION_SHAPE
	f	Ldcr;	g	AGE
	f	Ldcp;	h	LEAVES
	f	Ldcr;	i	STAGE
	f	I	j	MAX_HEIGHT
	f	I	k	STAGE_GROWING
	f	I	l	STAGE_DONE_GROWING
	f	I	m	AGE_THIN_BAMBOO
	f	I	n	AGE_THICK_BAMBOO
c	coo	net/minecraft/world/level/block/BannerBlock
	m	(Lcel;Ldbp$d;)V	<init>	<init>
		p	1		color
		p	2		settings
	m	(Lcel;)Lcpi;	a	byColor
		p	0		color
	m	(Lcic;)Ldbq;	a	getStateForPlacement
		p	1		ctx
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lcml;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lcua;)Ldbq;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldbq;Lcvq;)Ldbq;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	f	Ldcr;	a	ROTATION
	f	Ljava/util/Map;	b	BY_COLOR
	f	Ledx;	c	SHAPE
c	cop	net/minecraft/world/level/block/BarrelBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lcic;)Ldbq;	a	getStateForPlacement
		p	1		ctx
	m	(Lcmi;Lgt;Ldbq;Lbfx;Lcfv;)V	a	setPlacedBy
		p	1		world
		p	2		pos
		p	3		state
		p	4		placer
		p	5		itemStack
	m	(Ldbq;Laip;Lgt;Lapo;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Lcmi;Lgt;)I	a	getAnalogOutputSignal
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lcmi;Lgt;Lbym;Lbdx;Leda;)Lbdy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldbq;Lcmi;Lgt;Ldbq;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Ldbq;Lcua;)Ldbq;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldbq;Lcvq;)Ldbq;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lgt;Ldbq;)Lcze;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Ldbq;)Lcvj;	b_	getRenderShape
		p	1		state
	m	(Ldbq;)Z	d_	hasAnalogOutputSignal
		p	1		state
	f	Ldcl;	a	FACING
	f	Ldci;	b	OPEN
c	coq	net/minecraft/world/level/block/BarrierBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Ldbq;Lclo;Lgt;)F	b	getShadeBrightness
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;)Lcvj;	b_	getRenderShape
		p	1		state
	m	(Ldbq;Lclo;Lgt;)Z	c	propagatesSkylightDown
		p	1		state
		p	2		world
		p	3		pos
c	cor	net/minecraft/world/level/block/BaseCoralFanBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	f	Ledx;	a	AABB
c	cos	net/minecraft/world/level/block/BaseCoralPlantBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	f	F	a	AABB_OFFSET
	f	Ledx;	b	SHAPE
c	cot	net/minecraft/world/level/block/BaseCoralPlantTypeBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lcic;)Ldbq;	a	getStateForPlacement
		p	1		ctx
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lcmj;Lgt;)V	a	tryScheduleDieTick
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lcml;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldbq;)Ldwj;	c_	getFluidState
		p	1		state
	m	(Ldbq;Lclo;Lgt;)Z	e	scanForWater
		p	0		state
		p	1		world
		p	2		pos
	f	Ledx;	a	AABB
	f	Ldci;	c	WATERLOGGED
c	cou	net/minecraft/world/level/block/BaseCoralWallFanBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lcic;)Ldbq;	a	getStateForPlacement
		p	1		ctx
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lcml;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lcua;)Ldbq;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldbq;Lcvq;)Ldbq;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	f	Ldcl;	a	FACING
	f	Ljava/util/Map;	b	SHAPES
c	cov	net/minecraft/world/level/block/BaseEntityBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lczg;Lczg;Lczf;)Lczf;	a	createTickerHelper
		p	0		givenType
		p	1		expectedType
		p	2		ticker
	m	(Ldbq;Lcmi;Lgt;II)Z	a	triggerEvent
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
		p	5		data
	m	(Ldbq;Lcmi;Lgt;)Lbeb;	b	getMenuProvider
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;)Lcvj;	b_	getRenderShape
		p	1		state
c	cow	net/minecraft/world/level/block/BaseFireBlock
	m	(Ldbp$d;F)V	<init>	<init>
		p	1		settings
		p	2		damage
	m	(Lcic;)Ldbq;	a	getStateForPlacement
		p	1		ctx
	m	(Lclo;Lgt;)Ldbq;	a	getState
		p	0		world
		p	1		pos
	m	(Lcmi;)Z	a	inPortalDimension
		p	0		world
	m	(Lcmi;Lbym;Lgt;Ldbq;)V	a	spawnDestroyParticles
		p	1		world
		p	2		player
		p	3		pos
		p	4		state
	m	(Lcmi;Lgt;Ldbq;Lbym;)V	a	playerWillDestroy
		p	1		world
		p	2		pos
		p	3		state
		p	4		player
	m	(Lcmi;Lgt;Lgz;)Z	a	canBePlacedAt
		p	0		world
		p	1		pos
		p	2		direction
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lcmi;Lgt;Lapo;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Lcmi;Lgt;Lbfh;)V	a	entityInside
		p	1		state
		p	2		world
		p	3		pos
		p	4		entity
	m	(Lcmi;Lgt;Lgz;)Z	b	isPortal
		p	0		world
		p	1		pos
		p	2		direction
	m	(Ldbq;Lcmi;Lgt;Ldbq;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	m	(Ldbq;)Z	f	canBurn
		p	1		state
	f	F	a	AABB_OFFSET
	f	Ledx;	b	DOWN_AABB
	f	I	c	SECONDS_ON_FIRE
	f	F	d	fireDamage
c	cox	net/minecraft/world/level/block/BasePressurePlateBlock
	m	(Ldbp$d;Ldcg;)V	<init>	<init>
		p	1		settings
		p	2		blockSetType
	m	(Lbfh;Lcmi;Lgt;Ldbq;I)V	a	checkPressed
		p	1		entity
		p	2		world
		p	3		pos
		p	4		state
		p	5		output
	m	(Lcmi;Lgt;)V	a	updateNeighbours
		p	1		world
		p	2		pos
	m	(Ldbq;I)Ldbq;	a	setSignalForState
		p	1		state
		p	2		rsOut
	m	(Ldbq;Laip;Lgt;Lapo;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lclo;Lgt;Lgz;)I	a	getSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldbq;Lcmi;Lgt;Lbfh;)V	a	entityInside
		p	1		state
		p	2		world
		p	3		pos
		p	4		entity
	m	(Ldbq;Lcmi;Lgt;Ldbq;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Ldbq;Lcml;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	()Z	ao_	isPossibleToRespawnInThis
	m	()I	b	getPressedTime
	m	(Lcmi;Lgt;)I	b	getSignalStrength
		p	1		world
		p	2		pos
	m	(Ldbq;Lclo;Lgt;Lgz;)I	b	getDirectSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldbq;)Ldwp;	d	getPistonPushReaction
		p	1		state
	m	(Ldbq;)Z	f_	isSignalSource
		p	1		state
	m	(Ldbq;)I	g	getSignalForState
		p	1		state
	f	Ledx;	a	PRESSED_AABB
	f	Ledx;	b	AABB
	f	Lecz;	c	TOUCH_AABB
	f	Ldcg;	d	type
c	coy	net/minecraft/world/level/block/BaseRailBlock
	m	(ZLdbp$d;)V	<init>	<init>
		p	1		forbidCurves
		p	2		settings
	m	(Lcic;)Ldbq;	a	getStateForPlacement
		p	1		ctx
	m	(Lcmi;Lgt;)Z	a	isRail
		p	0		world
		p	1		pos
	m	(Lcmi;Lgt;Ldbq;Z)Ldbq;	a	updateDir
		p	1		world
		p	2		pos
		p	3		state
		p	4		forceUpdate
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lcmi;Lgt;Lcpi;)V	a	updateState
		p	1		state
		p	2		world
		p	3		pos
		p	4		neighbor
	m	(Ldbq;Lcmi;Lgt;Lcpi;Lgt;Z)V	a	neighborChanged
		p	1		state
		p	2		world
		p	3		pos
		p	4		sourceBlock
		p	5		sourcePos
		p	6		notify
	m	(Ldbq;Lcmi;Lgt;Ldbq;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Ldbq;Lcmi;Lgt;Z)Ldbq;	a	updateState
		p	1		state
		p	2		world
		p	3		pos
		p	4		notify
	m	(Ldbq;Lcml;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lgt;Lcmi;Ldcv;)Z	a	shouldBeRemoved
		p	0		pos
		p	1		world
		p	2		shape
	m	()Z	b	isStraight
	m	(Ldbq;Lcmi;Lgt;Ldbq;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	m	()Ldcu;	c	getShapeProperty
	m	(Ldbq;)Ldwj;	c_	getFluidState
		p	1		state
	m	(Ldbq;)Ldwp;	d	getPistonPushReaction
		p	1		state
	m	(Ldbq;)Z	g	isRail
		p	0		state
	f	Ledx;	a	FLAT_AABB
	f	Ledx;	b	HALF_BLOCK_AABB
	f	Ldci;	c	WATERLOGGED
	f	Z	d	isStraight
c	coy$1	net/minecraft/world/level/block/BaseRailBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$state$properties$RailShape
c	coz	net/minecraft/world/level/block/BeaconBeamBlock
	m	()Lcel;	a	getColor
c	cpa	net/minecraft/world/level/block/BeaconBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	()Lcel;	a	getColor
	m	(Lcmi;Ldbq;Lczg;)Lczf;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Lcmi;Lgt;Ldbq;Lbfx;Lcfv;)V	a	setPlacedBy
		p	1		world
		p	2		pos
		p	3		state
		p	4		placer
		p	5		itemStack
	m	(Ldbq;Lcmi;Lgt;Lbym;Lbdx;Leda;)Lbdy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Lgt;Ldbq;)Lcze;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Ldbq;)Lcvj;	b_	getRenderShape
		p	1		state
c	cpb	net/minecraft/world/level/block/BedBlock
	m	(Lcel;Ldbp$d;)V	<init>	<init>
		p	1		color
		p	2		settings
	m	(Lbfh;)V	a	bounceUp
		p	1		entity
	m	(Lbfl;Lcls;Lgt;Lgz;F)Ljava/util/Optional;	a	findStandUpPosition
		p	0		type
		p	1		world
		p	2		pos
		p	3		bedDirection
		p	4		spawnAngle
	m	(Lbfl;Lcls;Lgt;Lgz;Lgz;)Ljava/util/Optional;	a	findBunkBedStandUpPosition
		p	0		type
		p	1		world
		p	2		pos
		p	3		bedDirection
		p	4		respawnDirection
	m	(Lbfl;Lcls;Lgt;[[IZ)Ljava/util/Optional;	a	findStandUpPositionAtOffset
		p	0		type
		p	1		world
		p	2		pos
		p	3		possibleOffsets
		p	4		ignoreInvalidPos
	m	(Lbym;Lbym$a;)V	a	lambda$use$0
		p	1		reason
	m	(Lcic;)Ldbq;	a	getStateForPlacement
		p	1		ctx
	m	(Lclo;Lbfh;)V	a	updateEntityAfterFallOn
		p	1		world
		p	2		entity
	m	(Lclo;Lgt;)Lgz;	a	getBedOrientation
		p	0		world
		p	1		pos
	m	(Lcmi;)Z	a	canSetSpawn
		p	0		world
	m	(Lcmi;Ldbq;Lgt;Lbfh;F)V	a	fallOn
		p	1		world
		p	2		state
		p	3		pos
		p	4		entity
		p	5		fallDistance
	m	(Lcmi;Lgt;)Z	a	kickVillagerOutOfBed
		p	1		world
		p	2		pos
	m	(Lcmi;Lgt;Ldbq;Lbfx;Lcfv;)V	a	setPlacedBy
		p	1		world
		p	2		pos
		p	3		state
		p	4		placer
		p	5		itemStack
	m	(Lcmi;Lgt;Ldbq;Lbym;)V	a	playerWillDestroy
		p	1		world
		p	2		pos
		p	3		state
		p	4		player
	m	(Ldbq;Lclo;Lgt;Ldxa;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lcmi;Lgt;Lbym;Lbdx;Leda;)Lbdy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldbq;Lgt;)J	a	getSeed
		p	1		state
		p	2		pos
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldce;Lgz;)Lgz;	a	getNeighbourDirection
		p	0		part
		p	1		direction
	m	(Lgt;Ldbq;)Lcze;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Lgz;)[[I	a	bedAboveStandUpOffsets
		p	0		bedDirection
	m	(Lgz;Lgz;)[[I	a	bedStandUpOffsets
		p	0		bedDirection
		p	1		respawnDirection
	m	()Lcel;	b	getColor
	m	(Lclo;Lgt;)Z	b	isBunkBed
		p	0		world
		p	1		pos
	m	(Lgz;Lgz;)[[I	b	bedSurroundStandUpOffsets
		p	0		bedDirection
		p	1		respawnDirection
	m	(Ldbq;)Lcvj;	b_	getRenderShape
		p	1		state
	m	(Ldbq;)Ldwp;	d	getPistonPushReaction
		p	1		state
	m	(Ldbq;)Lgz;	g	getConnectedDirection
		p	0		state
	m	(Ldbq;)Lcrj$a;	h	getBlockType
		p	0		state
	f	Ldcp;	a	PART
	f	Ldci;	b	OCCUPIED
	f	I	c	HEIGHT
	f	Ledx;	d	BASE
	f	Ledx;	e	LEG_NORTH_WEST
	f	Ledx;	f	LEG_SOUTH_WEST
	f	Ledx;	g	LEG_NORTH_EAST
	f	Ledx;	h	LEG_SOUTH_EAST
	f	Ledx;	i	NORTH_SHAPE
	f	Ledx;	j	SOUTH_SHAPE
	f	Ledx;	k	WEST_SHAPE
	f	Ledx;	l	EAST_SHAPE
	f	I	m	LEG_WIDTH
	f	Lcel;	n	color
c	cpb$1	net/minecraft/world/level/block/BedBlock$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	cpc	net/minecraft/world/level/block/BeehiveBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lbdx;Lbym;)V	a	lambda$use$0
		p	1		player
	m	(Lcic;)Ldbq;	a	getStateForPlacement
		p	1		ctx
	m	(Lcmi;DDDDD)V	a	spawnFluidParticle
		p	1		world
		p	2		minX
		p	4		maxX
		p	6		minZ
		p	8		maxZ
		p	10		height
	m	(Lcmi;Lbym;Lgt;Ldbq;Lcze;Lcfv;)V	a	playerDestroy
		p	1		world
		p	2		player
		p	3		pos
		p	4		state
		p	5		blockEntity
		p	6		tool
	m	(Lcmi;Ldbq;Lczg;)Lczf;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Lcmi;Ldbq;Lgt;)V	a	resetHoneyLevel
		p	1		world
		p	2		state
		p	3		pos
	m	(Lcmi;Ldbq;Lgt;Lbym;Lczb$b;)V	a	releaseBeesAndResetHoneyLevel
		p	1		world
		p	2		state
		p	3		pos
		p	4		player
		p	5		beeState
	m	(Lcmi;Lgt;)V	a	dropHoneycomb
		p	0		world
		p	1		pos
	m	(Lcmi;Lgt;Ldbq;)V	a	trySpawnDripParticles
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcmi;Lgt;Ldbq;Lbym;)V	a	playerWillDestroy
		p	1		world
		p	2		pos
		p	3		state
		p	4		player
	m	(Lcmi;Lgt;Ledx;D)V	a	spawnParticle
		p	1		world
		p	2		pos
		p	3		shape
		p	4		height
	m	(Ldbq;Lcmi;Lgt;)I	a	getAnalogOutputSignal
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lcmi;Lgt;Lapo;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Lcmi;Lgt;Lbym;Lbdx;Leda;)Lbdy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldbq;Ldyr$a;)Ljava/util/List;	a	getDrops
		p	1		state
		p	2		builder
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lgt;Ldbq;)Lcze;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Lcmi;Lgt;)V	b	angerNearbyBees
		p	1		world
		p	2		pos
	m	(Ldbq;)Lcvj;	b_	getRenderShape
		p	1		state
	m	(Lcmi;Lgt;)Z	c	hiveContainsBees
		p	1		world
		p	2		pos
	m	(Ldbq;)Z	d_	hasAnalogOutputSignal
		p	1		state
	f	Ldcl;	a	FACING
	f	Ldcr;	b	HONEY_LEVEL
	f	I	c	MAX_HONEY_LEVELS
	f	I	d	SHEARED_HONEYCOMB_COUNT
c	cpd	net/minecraft/world/level/block/BeetrootBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lcmi;)I	a	getBonemealAgeIncrease
		p	1		world
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	()Ldcr;	b	getAgeProperty
	m	(Ldbq;Laip;Lgt;Lapo;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	()I	c	getMaxAge
	m	()Lcmh;	d	getBaseSeedId
	f	I	a	MAX_AGE
	f	Ldcr;	b	AGE
	f	[Ledx;	e	SHAPE_BY_AGE
c	cpe	net/minecraft/world/level/block/BellBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lbfh;Lcmi;Lgt;Lgz;)Z	a	attemptToRing
		p	1		entity
		p	2		world
		p	3		pos
		p	4		direction
	m	(Lcic;)Ldbq;	a	getStateForPlacement
		p	1		ctx
	m	(Lcmi;Ldbq;Lczg;)Lczf;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Lcmi;Ldbq;Leda;Lbym;Z)Z	a	onHit
		p	1		world
		p	2		state
		p	3		hitResult
		p	4		player
		p	5		checkHitPos
	m	(Lcmi;Ldbq;Leda;Lbze;)V	a	onProjectileHit
		p	1		world
		p	2		state
		p	3		hit
		p	4		projectile
	m	(Lcmi;Lgt;Lgz;)Z	a	attemptToRing
		p	1		world
		p	2		pos
		p	3		direction
	m	(Ldbq;Lclo;Lgt;Ldxa;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lcmi;Lgt;Lbym;Lbdx;Leda;)Lbdy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldbq;Lcmi;Lgt;Lcpi;Lgt;Z)V	a	neighborChanged
		p	1		state
		p	2		world
		p	3		pos
		p	4		sourceBlock
		p	5		sourcePos
		p	6		notify
	m	(Ldbq;Lcml;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lgz;D)Z	a	isProperHit
		p	1		state
		p	2		side
		p	3		y
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lgt;Ldbq;)Lcze;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Ldbq;)Lcvj;	b_	getRenderShape
		p	1		state
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	c	getCollisionShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;)Ldwp;	d	getPistonPushReaction
		p	1		state
	m	(Ldbq;)Ledx;	h	getVoxelShape
		p	1		state
	m	(Ldbq;)Lgz;	n	getConnectedDirection
		p	0		state
	f	Ledx;	E	TO_SOUTH
	f	Ledx;	F	CEILING_SHAPE
	f	Ldcl;	a	FACING
	f	Ldcp;	b	ATTACHMENT
	f	Ldci;	c	POWERED
	f	I	d	EVENT_BELL_RING
	f	Ledx;	e	NORTH_SOUTH_FLOOR_SHAPE
	f	Ledx;	f	EAST_WEST_FLOOR_SHAPE
	f	Ledx;	g	BELL_TOP_SHAPE
	f	Ledx;	h	BELL_BOTTOM_SHAPE
	f	Ledx;	i	BELL_SHAPE
	f	Ledx;	j	NORTH_SOUTH_BETWEEN
	f	Ledx;	k	EAST_WEST_BETWEEN
	f	Ledx;	l	TO_WEST
	f	Ledx;	m	TO_EAST
	f	Ledx;	n	TO_NORTH
c	cpe$1	net/minecraft/world/level/block/BellBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$state$properties$BellAttachType
c	cpf	net/minecraft/world/level/block/BigDripleafBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Laip;Lapo;Lgt;Ldbq;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcic;)Ldbq;	a	getStateForPlacement
		p	1		ctx
	m	(Lcmi;Lapo;Lgt;Ldbq;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcmi;Ldbq;Leda;Lbze;)V	a	onProjectileHit
		p	1		world
		p	2		state
		p	3		hit
		p	4		projectile
	m	(Lcmi;Lgt;Lamq;)V	a	playTiltSound
		p	0		world
		p	1		pos
		p	2		soundEvent
	m	(Lcmj;Lapo;Lgt;Lgz;)V	a	placeWithRandomHeight
		p	0		world
		p	1		random
		p	2		pos
		p	3		direction
	m	(Lcmj;Lgt;Ldwj;Lgz;)Z	a	place
		p	0		world
		p	1		pos
		p	2		fluidState
		p	3		direction
	m	(Lcmk;Lgt;Ldbq;)Z	a	canPlaceAt
		p	0		world
		p	1		pos
		p	2		state
	m	(Lcml;Lgt;Ldbq;Z)Z	a	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
		p	4		isClient
	m	(Ldbq;Laip;Lgt;Lapo;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lcmi;Lgt;Lbfh;)V	a	entityInside
		p	1		state
		p	2		world
		p	3		pos
		p	4		entity
	m	(Ldbq;Lcmi;Lgt;Lcpi;Lgt;Z)V	a	neighborChanged
		p	1		state
		p	2		world
		p	3		pos
		p	4		sourceBlock
		p	5		sourcePos
		p	6		notify
	m	(Ldbq;Lcmi;Lgt;Lddc;)V	a	setTilt
		p	0		state
		p	1		world
		p	2		pos
		p	3		tilt
	m	(Ldbq;Lcmi;Lgt;Lddc;Lamq;)V	a	setTiltAndScheduleTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		tilt
		p	5		sound
	m	(Ldbq;Lcml;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lgt;Lbfh;)Z	a	canEntityTilt
		p	0		pos
		p	1		entity
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntArrayMap;)V	a	lambda$static$0
		p	0		delays
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	c	getCollisionShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;)Ldwj;	c_	getFluidState
		p	1		state
	m	(Ldbq;Lcmi;Lgt;)V	d	resetTilt
		p	0		state
		p	1		world
		p	2		pos
	m	(Ldbq;)Ledx;	h	calculateShape
		p	0		state
	m	(Ldbq;)Z	n	canReplace
		p	0		state
	f	Ldci;	a	WATERLOGGED
	f	Ldcp;	b	TILT
	f	I	c	NO_TICK
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	d	DELAY_UNTIL_NEXT_TILT_STATE
	f	I	e	MAX_GEN_HEIGHT
	f	I	f	STEM_WIDTH
	f	I	g	ENTITY_DETECTION_MIN_Y
	f	I	h	LOWEST_LEAF_TOP
	f	Ljava/util/Map;	i	LEAF_SHAPES
	f	Ledx;	j	STEM_SLICER
	f	Ljava/util/Map;	k	STEM_SHAPES
	f	Ljava/util/Map;	l	shapesCache
c	cpg	net/minecraft/world/level/block/BigDripleafStemBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Laip;Lapo;Lgt;Ldbq;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lclo;Lgt;Ldbq;)Lcfv;	a	getCloneItemStack
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcmi;Lapo;Lgt;Ldbq;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcmj;Lgt;Ldwj;Lgz;)Z	a	place
		p	0		world
		p	1		pos
		p	2		fluidState
		p	3		direction
	m	(Lcml;Lgt;Ldbq;Z)Z	a	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
		p	4		isClient
	m	(Ldbq;Laip;Lgt;Lapo;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lcml;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldbq;)Ldwj;	c_	getFluidState
		p	1		state
	f	Ledx;	a	NORTH_SHAPE
	f	Ledx;	b	SOUTH_SHAPE
	f	Ledx;	c	EAST_SHAPE
	f	Ledx;	d	WEST_SHAPE
	f	Ldci;	e	WATERLOGGED
	f	I	f	STEM_WIDTH
c	cpg$1	net/minecraft/world/level/block/BigDripleafStemBlock$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	cph	net/minecraft/world/level/block/BlastFurnaceBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lcmi;Ldbq;Lczg;)Lczf;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Lcmi;Lgt;Lbym;)V	a	openContainer
		p	1		world
		p	2		pos
		p	3		player
	m	(Ldbq;Lcmi;Lgt;Lapo;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lgt;Ldbq;)Lcze;	a	newBlockEntity
		p	1		pos
		p	2		state
c	cpi	net/minecraft/world/level/block/Block
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(DDDDDD)Ledx;	a	box
		p	0		minX
		p	2		minY
		p	4		minZ
		p	6		maxX
		p	8		maxY
		p	10		maxZ
	m	(I)Ldbq;	a	stateById
		p	0		stateId
	m	(Laip;Lgt;I)V	a	popExperience
		p	1		world
		p	2		pos
		p	3		size
	m	(Laip;Lgt;Lcfv;)V	a	lambda$dropResources$1
		p	2		stack
	m	(Laip;Lgt;Lcfv;Lbdd;)V	a	tryDropExperience
		p	1		world
		p	2		pos
		p	3		tool
		p	4		experience
	m	(Lcfq;)Lcpi;	a	byItem
		p	0		item
	m	(Lcfv;Lclo;Ljava/util/List;Lchl;)V	a	appendHoverText
		p	1		stack
		p	2		world
		p	3		tooltip
		p	4		options
	m	(Lcic;)Ldbq;	a	getStateForPlacement
		p	1		ctx
	m	(Lclo;Lbfh;)V	a	updateEntityAfterFallOn
		p	1		world
		p	2		entity
	m	(Lclo;Lgt;Ldbq;)Lcfv;	a	getCloneItemStack
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcma;)Z	a	dropFromExplosion
		p	1		explosion
	m	(Lcmi;DDDLcfv;)Lbvf;	a	lambda$popResource$5
	m	(Lcmi;DDDLcfv;DDD)Lbvf;	a	lambda$popResourceFromFace$6
	m	(Lcmi;Lbym;Lgt;Ldbq;)V	a	spawnDestroyParticles
		p	1		world
		p	2		player
		p	3		pos
		p	4		state
	m	(Lcmi;Lbym;Lgt;Ldbq;Lcze;Lcfv;)V	a	playerDestroy
		p	1		world
		p	2		player
		p	3		pos
		p	4		state
		p	5		blockEntity
		p	6		tool
	m	(Lcmi;Ldbq;Lgt;Lbfh;F)V	a	fallOn
		p	1		world
		p	2		state
		p	3		pos
		p	4		entity
		p	5		fallDistance
	m	(Lcmi;Lgt;Lcfv;)V	a	popResource
		p	0		world
		p	1		pos
		p	2		stack
	m	(Lcmi;Lgt;Lcma;)V	a	wasExploded
		p	1		world
		p	2		pos
		p	3		explosion
	m	(Lcmi;Lgt;Ldbq;Lbfh;)V	a	stepOn
		p	1		world
		p	2		pos
		p	3		state
		p	4		entity
	m	(Lcmi;Lgt;Ldbq;Lbfx;Lcfv;)V	a	setPlacedBy
		p	1		world
		p	2		pos
		p	3		state
		p	4		placer
		p	5		itemStack
	m	(Lcmi;Lgt;Ldbq;Lbym;)V	a	playerWillDestroy
		p	1		world
		p	2		pos
		p	3		state
		p	4		player
	m	(Lcmi;Lgt;Lgz;Lcfv;)V	a	popResourceFromFace
		p	0		world
		p	1		pos
		p	2		direction
		p	3		stack
	m	(Lcmi;Ljava/util/function/Supplier;Lcfv;)V	a	popResource
		p	0		world
		p	1		itemEntitySupplier
		p	2		stack
	m	(Lcmj;Lgt;Lcfv;)V	a	lambda$dropResources$3
		p	2		stack
	m	(Lcmj;Lgt;Ldbq;)V	a	destroy
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcml;Lgt;Lgz;)Z	a	canSupportCenter
		p	0		world
		p	1		pos
		p	2		side
	m	(Ldbq;Laip;Lgt;Lcze;)Ljava/util/List;	a	getDrops
		p	0		state
		p	1		world
		p	2		pos
		p	3		blockEntity
	m	(Ldbq;Laip;Lgt;Lcze;Lbfh;Lcfv;)Ljava/util/List;	a	getDrops
		p	0		state
		p	1		world
		p	2		pos
		p	3		blockEntity
		p	4		entity
		p	5		stack
	m	(Ldbq;Lclo;Lgt;Lgz;Lgt;)Z	a	shouldRenderFace
		p	0		state
		p	1		world
		p	2		pos
		p	3		side
		p	4		otherPos
	m	(Ldbq;Lcmi;Lgt;Lapo;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Lcmi;Lgt;Lcnf$c;)V	a	handlePrecipitation
		p	1		state
		p	2		world
		p	3		pos
		p	4		precipitation
	m	(Ldbq;Lcmi;Lgt;Lcze;Lbfh;Lcfv;)V	a	dropResources
		p	0		state
		p	1		world
		p	2		pos
		p	3		blockEntity
		p	4		entity
		p	5		tool
	m	(Ldbq;Lcmj;Lgt;Lcze;)V	a	dropResources
		p	0		state
		p	1		world
		p	2		pos
		p	3		blockEntity
	m	(Ldbq;Ldbq;Lcmj;Lgt;)Ldbq;	a	pushEntitiesUp
		p	0		from
		p	1		to
		p	2		world
		p	3		pos
	m	(Ldbq;Ldbq;Lcmj;Lgt;I)V	a	updateOrDestroy
		p	0		state
		p	1		newState
		p	2		world
		p	3		pos
		p	4		flags
	m	(Ldbq;Ldbq;Lcmj;Lgt;II)V	a	updateOrDestroy
		p	0		state
		p	1		newState
		p	2		world
		p	3		pos
		p	4		flags
		p	5		maxUpdateDepth
	m	(Ldbq;Ldbq;Ldcu;)Ldbq;	a	copyProperty
		p	0		source
		p	1		target
		p	2		property
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ledx;)Z	a	isShapeFullBlock
		p	0		shape
	m	(Ledx;Lgz;)Z	a	isFaceFull
		p	0		shape
		p	1		side
	m	(Ljava/util/function/Function;)Lcom/google/common/collect/ImmutableMap;	a	getShapeForEachState
		p	1		stateToShape
	m	()Z	ao_	isPossibleToRespawnInThis
	m	(Lcmi;Lgt;Lcfv;)V	b	lambda$dropResources$4
		p	2		stack
	m	(Ldbq;Lcmj;Lgt;)Ldbq;	b	updateFromNeighbourShapes
		p	0		state
		p	1		world
		p	2		pos
	m	(Ldbq;Ldyr$a;)V	b	dropResources
		p	0		state
		p	1		lootContext
	m	(Lclo;Lgt;)Z	c	canSupportRigidBlock
		p	0		world
		p	1		pos
	m	(Lcmi;Lgt;Lcfv;)V	c	lambda$dropResources$2
		p	2		stack
	m	(Ldbq;Lclo;Lgt;)Z	c	propagatesSkylightDown
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lcmi;Lgt;)V	c	dropResources
		p	0		state
		p	1		world
		p	2		pos
	m	()F	e	getExplosionResistance
	m	(Ldbq;)Z	e_	isRandomlyTicking
		p	1		state
	m	()Ltw;	f	getName
	m	()Ljava/lang/String;	h	getDescriptionId
	m	()F	i	getFriction
	m	(Ldbq;)I	i	getId
		p	0		state
	m	()F	j	getSpeedFactor
	m	(Ldbq;)Z	j	isExceptionForConnection
		p	0		state
	m	()Lcfq;	k	asItem
	m	(Ldbq;)V	k	registerDefaultState
		p	1		state
	m	()F	l	getJumpFactor
	m	(Ldbq;)Ldbq;	l	withPropertiesOf
		p	1		state
	m	(Ldbq;)Lcwq;	m	getSoundType
		p	1		state
	m	()Ldbr;	n	getStateDefinition
	m	()Ldbq;	o	defaultBlockState
	m	()Z	p	hasDynamicShape
	m	()Lcpi;	q	asBlock
	m	()Lhd$c;	r	builtInRegistryHolder
	m	()Lit/unimi/dsi/fastutil/objects/Object2ByteLinkedOpenHashMap;	v	lambda$static$0
	f	F	A	INDESTRUCTIBLE
	f	F	B	INSTANT
	f	I	C	UPDATE_LIMIT
	f	Ldbr;	D	stateDefinition
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lhd$c;	b	builtInRegistryHolder
	f	Lcom/google/common/cache/LoadingCache;	c	SHAPE_FULL_BLOCK_CACHE
	f	Ldbq;	d	defaultBlockState
	f	Ljava/lang/String;	e	descriptionId
	f	Lcfq;	f	item
	f	I	g	CACHE_SIZE
	f	Ljava/lang/ThreadLocal;	h	OCCLUSION_CACHE
	f	Lhj;	o	BLOCK_STATE_REGISTRY
	f	I	p	UPDATE_NEIGHBORS
	f	I	q	UPDATE_CLIENTS
	f	I	r	UPDATE_INVISIBLE
	f	I	s	UPDATE_IMMEDIATE
	f	I	t	UPDATE_KNOWN_SHAPE
	f	I	u	UPDATE_SUPPRESS_DROPS
	f	I	v	UPDATE_MOVE_BY_PISTON
	f	I	w	UPDATE_SUPPRESS_LIGHT
	f	I	x	UPDATE_NONE
	f	I	y	UPDATE_ALL
	f	I	z	UPDATE_ALL_IMMEDIATE
c	cpi$1	net/minecraft/world/level/block/Block$1
	m	(Ledx;)Ljava/lang/Boolean;	a	load
c	cpi$2	net/minecraft/world/level/block/Block$2
c	cpi$a	net/minecraft/world/level/block/Block$BlockStatePairKey
	m	(Ldbq;Ldbq;Lgz;)V	<init>	<init>
		p	1		self
		p	2		other
		p	3		facing
	f	Ldbq;	a	first
	f	Ldbq;	b	second
	f	Lgz;	c	direction
c	cpj	net/minecraft/world/level/block/Blocks
	m	(Ldbq;)I	A	lambda$static$26
		p	0		state
	m	(Ldbq;)I	B	lambda$static$25
		p	0		state
	m	(Ldbq;)I	C	lambda$static$20
		p	0		state
	m	(Ldbq;)I	D	lambda$static$19
		p	0		state
	m	(Ldbq;)I	E	lambda$static$18
		p	0		state
	m	(Ldbq;)I	F	lambda$static$17
		p	0		state
	m	(Ldbq;)I	G	lambda$static$16
		p	0		state
	m	(Ldbq;)I	H	lambda$static$12
		p	0		state
	m	(Ldbq;)I	I	lambda$static$11
		p	0		state
	m	(Ldbq;)I	J	lambda$static$10
		p	0		state
	m	(Ldbq;)I	K	lambda$static$9
		p	0		state
	m	(Ldbq;)I	L	lambda$static$8
		p	0		state
	m	(Ldbq;)I	M	lambda$static$7
		p	0		state
	m	()V	a	rebuildCache
	m	(I)Ljava/util/function/ToIntFunction;	a	litBlockEmission
		p	0		litLevel
	m	(ILdbq;)I	a	lambda$litBlockEmission$0
		p	1		state
	m	(Lcel;)Lcpb;	a	bed
		p	0		color
	m	(Lcel;Ldbp$d;)Lcwd;	a	shulkerBox
		p	0		color
		p	1		settings
	m	(Lcel;Ldbq;)Ldwo;	a	lambda$bed$1
		p	1		state
	m	(Lcwq;)Lctm;	a	leaves
		p	0		soundGroup
	m	(Ldbq;)I	a	lambda$static$55
		p	0		state
	m	(Ldbq;Lclo;Lgt;)Z	a	always
		p	0		state
		p	1		world
		p	2		pos
	m	(Ldbq;Lclo;Lgt;Lbfl;)Ljava/lang/Boolean;	a	never
		p	0		state
		p	1		world
		p	2		pos
		p	3		type
	m	(Ldcg;)Lcpq;	a	woodenButton
		p	0		blockSetType
	m	(Ldwo;)Lcpi;	a	netherStem
		p	0		mapColor
	m	(Ldwo;Ldbq;)Ldwo;	a	lambda$netherStem$4
		p	1		state
	m	(Ldwo;Ldwo;)Lcvp;	a	log
		p	0		topMapColor
		p	1		sideMapColor
	m	(Ldwo;Ldwo;Lcwq;[Lcas;)Lcvp;	a	log
		p	0		topMapColor
		p	1		sideMapColor
		p	2		soundGroup
		p	3		requiredFeatures
	m	(Ldwo;Ldwo;Ldbq;)Ldwo;	a	lambda$log$3
		p	2		state
	m	(Ljava/lang/String;Lcpi;)Lcpi;	a	register
		p	0		id
		p	1		block
	m	(Z)Ldbj;	a	pistonBase
		p	0		sticky
	m	()Lcpq;	b	stoneButton
	m	(Lcel;)Lcwv;	b	stainedGlass
		p	0		color
	m	(Ldbq;)I	b	lambda$static$54
		p	0		state
	m	(Ldbq;Lclo;Lgt;)Z	b	never
		p	0		state
		p	1		world
		p	2		pos
	m	(Ldbq;Lclo;Lgt;Lbfl;)Ljava/lang/Boolean;	b	always
		p	0		state
		p	1		world
		p	2		pos
		p	3		type
	m	(Ldwo;Ldwo;Ldbq;)Ldwo;	b	lambda$log$2
		p	2		state
	m	()Lcfq;	c	lambda$static$24
	m	(Ldbq;)I	c	lambda$static$53
		p	0		state
	m	(Ldbq;Lclo;Lgt;)Z	c	lambda$static$51
		p	0		state
		p	1		world
		p	2		pos
	m	(Ldbq;Lclo;Lgt;Lbfl;)Ljava/lang/Boolean;	c	ocelotOrParrot
		p	0		state
		p	1		world
		p	2		pos
		p	3		type
	m	()Lcfq;	d	lambda$static$23
	m	(Ldbq;)I	d	lambda$static$52
		p	0		state
	m	(Ldbq;Lclo;Lgt;)Z	d	lambda$static$14
		p	0		state
		p	1		world
		p	2		pos
	m	(Ldbq;Lclo;Lgt;Lbfl;)Z	d	lambda$static$38
		p	0		state
		p	1		world
		p	2		pos
		p	3		entityType
	m	()Lcfq;	e	lambda$static$22
	m	(Ldbq;)I	e	lambda$static$50
		p	0		state
	m	(Ldbq;Lclo;Lgt;)Z	e	lambda$pistonBase$6
		p	0		state
		p	1		world
		p	2		pos
	m	(Ldbq;Lclo;Lgt;Lbfl;)Z	e	lambda$static$36
		p	0		state
		p	1		world
		p	2		pos
		p	3		entityType
	m	()Lcfq;	f	lambda$static$21
	m	(Ldbq;)I	f	lambda$static$49
		p	0		state
	m	(Ldbq;Lclo;Lgt;)Z	f	lambda$shulkerBox$5
		p	0		state
		p	1		world
		p	2		pos
	m	(Ldbq;Lclo;Lgt;Lbfl;)Z	f	lambda$static$15
		p	0		state
		p	1		world
		p	2		pos
		p	3		entityType
	m	()Lczg;	g	lambda$static$13
	m	(Ldbq;)I	g	lambda$static$48
		p	0		state
	m	(Ldbq;)I	h	lambda$static$47
		p	0		state
	m	(Ldbq;)I	i	lambda$static$46
		p	0		state
	m	(Ldbq;)I	j	lambda$static$45
		p	0		state
	m	(Ldbq;)I	k	lambda$static$44
		p	0		state
	m	(Ldbq;)I	l	lambda$static$43
		p	0		state
	m	(Ldbq;)I	m	lambda$static$42
		p	0		state
	m	(Ldbq;)I	n	lambda$static$41
		p	0		state
	m	(Ldbq;)I	o	lambda$static$40
		p	0		state
	m	(Ldbq;)I	p	lambda$static$39
		p	0		state
	m	(Ldbq;)I	q	lambda$static$37
		p	0		state
	m	(Ldbq;)I	r	lambda$static$35
		p	0		state
	m	(Ldbq;)I	s	lambda$static$34
		p	0		state
	m	(Ldbq;)I	t	lambda$static$33
		p	0		state
	m	(Ldbq;)I	u	lambda$static$32
		p	0		state
	m	(Ldbq;)I	v	lambda$static$31
		p	0		state
	m	(Ldbq;)I	w	lambda$static$30
		p	0		state
	m	(Ldbq;)I	x	lambda$static$29
		p	0		state
	m	(Ldbq;)I	y	lambda$static$28
		p	0		state
	m	(Ldbq;)I	z	lambda$static$27
		p	0		state
	f	Lcpi;	A	JUNGLE_SAPLING
	f	Lcpi;	B	ACACIA_SAPLING
	f	Lcpi;	C	CHERRY_SAPLING
	f	Lcpi;	D	DARK_OAK_SAPLING
	f	Lcpi;	E	MANGROVE_PROPAGULE
	f	Lcpi;	F	BEDROCK
	f	Lcpi;	G	WATER
	f	Lcpi;	H	LAVA
	f	Lcpi;	I	SAND
	f	Lcpi;	J	SUSPICIOUS_SAND
	f	Lcpi;	K	RED_SAND
	f	Lcpi;	L	GRAVEL
	f	Lcpi;	M	GOLD_ORE
	f	Lcpi;	N	DEEPSLATE_GOLD_ORE
	f	Lcpi;	O	IRON_ORE
	f	Lcpi;	P	DEEPSLATE_IRON_ORE
	f	Lcpi;	Q	COAL_ORE
	f	Lcpi;	R	DEEPSLATE_COAL_ORE
	f	Lcpi;	S	NETHER_GOLD_ORE
	f	Lcpi;	T	OAK_LOG
	f	Lcpi;	U	SPRUCE_LOG
	f	Lcpi;	V	BIRCH_LOG
	f	Lcpi;	W	JUNGLE_LOG
	f	Lcpi;	X	ACACIA_LOG
	f	Lcpi;	Y	CHERRY_LOG
	f	Lcpi;	Z	DARK_OAK_LOG
	f	Lcpi;	aA	STRIPPED_CHERRY_WOOD
	f	Lcpi;	aB	STRIPPED_DARK_OAK_WOOD
	f	Lcpi;	aC	STRIPPED_MANGROVE_WOOD
	f	Lcpi;	aD	OAK_LEAVES
	f	Lcpi;	aE	SPRUCE_LEAVES
	f	Lcpi;	aF	BIRCH_LEAVES
	f	Lcpi;	aG	JUNGLE_LEAVES
	f	Lcpi;	aH	ACACIA_LEAVES
	f	Lcpi;	aI	CHERRY_LEAVES
	f	Lcpi;	aJ	DARK_OAK_LEAVES
	f	Lcpi;	aK	MANGROVE_LEAVES
	f	Lcpi;	aL	AZALEA_LEAVES
	f	Lcpi;	a	AIR
	f	Lcpi;	aM	FLOWERING_AZALEA_LEAVES
	f	Lcpi;	aN	SPONGE
	f	Lcpi;	aO	WET_SPONGE
	f	Lcpi;	aP	GLASS
	f	Lcpi;	aQ	LAPIS_ORE
	f	Lcpi;	aR	DEEPSLATE_LAPIS_ORE
	f	Lcpi;	aS	LAPIS_BLOCK
	f	Lcpi;	aT	DISPENSER
	f	Lcpi;	aU	SANDSTONE
	f	Lcpi;	aV	CHISELED_SANDSTONE
	f	Lcpi;	aW	CUT_SANDSTONE
	f	Lcpi;	aX	NOTE_BLOCK
	f	Lcpi;	aY	WHITE_BED
	f	Lcpi;	aZ	ORANGE_BED
	f	Lcpi;	aa	MANGROVE_LOG
	f	Lcpi;	ab	MANGROVE_ROOTS
	f	Lcpi;	ac	MUDDY_MANGROVE_ROOTS
	f	Lcpi;	ad	BAMBOO_BLOCK
	f	Lcpi;	ae	STRIPPED_SPRUCE_LOG
	f	Lcpi;	af	STRIPPED_BIRCH_LOG
	f	Lcpi;	ag	STRIPPED_JUNGLE_LOG
	f	Lcpi;	ah	STRIPPED_ACACIA_LOG
	f	Lcpi;	ai	STRIPPED_CHERRY_LOG
	f	Lcpi;	aj	STRIPPED_DARK_OAK_LOG
	f	Lcpi;	ak	STRIPPED_OAK_LOG
	f	Lcpi;	al	STRIPPED_MANGROVE_LOG
	f	Lcpi;	am	STRIPPED_BAMBOO_BLOCK
	f	Lcpi;	an	OAK_WOOD
	f	Lcpi;	ao	SPRUCE_WOOD
	f	Lcpi;	ap	BIRCH_WOOD
	f	Lcpi;	aq	JUNGLE_WOOD
	f	Lcpi;	ar	ACACIA_WOOD
	f	Lcpi;	as	CHERRY_WOOD
	f	Lcpi;	at	DARK_OAK_WOOD
	f	Lcpi;	au	MANGROVE_WOOD
	f	Lcpi;	av	STRIPPED_OAK_WOOD
	f	Lcpi;	aw	STRIPPED_SPRUCE_WOOD
	f	Lcpi;	ax	STRIPPED_BIRCH_WOOD
	f	Lcpi;	ay	STRIPPED_JUNGLE_WOOD
	f	Lcpi;	az	STRIPPED_ACACIA_WOOD
	f	Lcpi;	bA	ORANGE_WOOL
	f	Lcpi;	bB	MAGENTA_WOOL
	f	Lcpi;	bC	LIGHT_BLUE_WOOL
	f	Lcpi;	bD	YELLOW_WOOL
	f	Lcpi;	bE	LIME_WOOL
	f	Lcpi;	bF	PINK_WOOL
	f	Lcpi;	bG	GRAY_WOOL
	f	Lcpi;	bH	LIGHT_GRAY_WOOL
	f	Lcpi;	bI	CYAN_WOOL
	f	Lcpi;	bJ	PURPLE_WOOL
	f	Lcpi;	bK	BLUE_WOOL
	f	Lcpi;	bL	BROWN_WOOL
	f	Lcpi;	b	STONE
	f	Lcpi;	bM	GREEN_WOOL
	f	Lcpi;	bN	RED_WOOL
	f	Lcpi;	bO	BLACK_WOOL
	f	Lcpi;	bP	MOVING_PISTON
	f	Lcpi;	bQ	DANDELION
	f	Lcpi;	bR	TORCHFLOWER
	f	Lcpi;	bS	POPPY
	f	Lcpi;	bT	BLUE_ORCHID
	f	Lcpi;	bU	ALLIUM
	f	Lcpi;	bV	AZURE_BLUET
	f	Lcpi;	bW	RED_TULIP
	f	Lcpi;	bX	ORANGE_TULIP
	f	Lcpi;	bY	WHITE_TULIP
	f	Lcpi;	bZ	PINK_TULIP
	f	Lcpi;	ba	MAGENTA_BED
	f	Lcpi;	bb	LIGHT_BLUE_BED
	f	Lcpi;	bc	YELLOW_BED
	f	Lcpi;	bd	LIME_BED
	f	Lcpi;	be	PINK_BED
	f	Lcpi;	bf	GRAY_BED
	f	Lcpi;	bg	LIGHT_GRAY_BED
	f	Lcpi;	bh	CYAN_BED
	f	Lcpi;	bi	PURPLE_BED
	f	Lcpi;	bj	BLUE_BED
	f	Lcpi;	bk	BROWN_BED
	f	Lcpi;	bl	GREEN_BED
	f	Lcpi;	bm	RED_BED
	f	Lcpi;	bn	BLACK_BED
	f	Lcpi;	bo	POWERED_RAIL
	f	Lcpi;	bp	DETECTOR_RAIL
	f	Lcpi;	bq	STICKY_PISTON
	f	Lcpi;	br	COBWEB
	f	Lcpi;	bs	GRASS
	f	Lcpi;	bt	FERN
	f	Lcpi;	bu	DEAD_BUSH
	f	Lcpi;	bv	SEAGRASS
	f	Lcpi;	bw	TALL_SEAGRASS
	f	Lcpi;	bx	PISTON
	f	Lcpi;	by	PISTON_HEAD
	f	Lcpi;	bz	WHITE_WOOL
	f	Lcpi;	cA	WHEAT
	f	Lcpi;	cB	FARMLAND
	f	Lcpi;	cC	FURNACE
	f	Lcpi;	cD	OAK_SIGN
	f	Lcpi;	cE	SPRUCE_SIGN
	f	Lcpi;	cF	BIRCH_SIGN
	f	Lcpi;	cG	ACACIA_SIGN
	f	Lcpi;	cH	CHERRY_SIGN
	f	Lcpi;	cI	JUNGLE_SIGN
	f	Lcpi;	cJ	DARK_OAK_SIGN
	f	Lcpi;	cK	MANGROVE_SIGN
	f	Lcpi;	cL	BAMBOO_SIGN
	f	Lcpi;	c	GRANITE
	f	Lcpi;	cM	OAK_DOOR
	f	Lcpi;	cN	LADDER
	f	Lcpi;	cO	RAIL
	f	Lcpi;	cP	COBBLESTONE_STAIRS
	f	Lcpi;	cQ	OAK_WALL_SIGN
	f	Lcpi;	cR	SPRUCE_WALL_SIGN
	f	Lcpi;	cS	BIRCH_WALL_SIGN
	f	Lcpi;	cT	ACACIA_WALL_SIGN
	f	Lcpi;	cU	CHERRY_WALL_SIGN
	f	Lcpi;	cV	JUNGLE_WALL_SIGN
	f	Lcpi;	cW	DARK_OAK_WALL_SIGN
	f	Lcpi;	cX	MANGROVE_WALL_SIGN
	f	Lcpi;	cY	BAMBOO_WALL_SIGN
	f	Lcpi;	cZ	OAK_HANGING_SIGN
	f	Lcpi;	ca	OXEYE_DAISY
	f	Lcpi;	cb	CORNFLOWER
	f	Lcpi;	cc	WITHER_ROSE
	f	Lcpi;	cd	LILY_OF_THE_VALLEY
	f	Lcpi;	ce	BROWN_MUSHROOM
	f	Lcpi;	cf	RED_MUSHROOM
	f	Lcpi;	cg	GOLD_BLOCK
	f	Lcpi;	ch	IRON_BLOCK
	f	Lcpi;	ci	BRICKS
	f	Lcpi;	cj	TNT
	f	Lcpi;	ck	BOOKSHELF
	f	Lcpi;	cl	CHISELED_BOOKSHELF
	f	Lcpi;	cm	MOSSY_COBBLESTONE
	f	Lcpi;	cn	OBSIDIAN
	f	Lcpi;	co	TORCH
	f	Lcpi;	cp	WALL_TORCH
	f	Lcpi;	cq	FIRE
	f	Lcpi;	cr	SOUL_FIRE
	f	Lcpi;	cs	SPAWNER
	f	Lcpi;	ct	OAK_STAIRS
	f	Lcpi;	cu	CHEST
	f	Lcpi;	cv	REDSTONE_WIRE
	f	Lcpi;	cw	DIAMOND_ORE
	f	Lcpi;	cx	DEEPSLATE_DIAMOND_ORE
	f	Lcpi;	cy	DIAMOND_BLOCK
	f	Lcpi;	cz	CRAFTING_TABLE
	f	Lcpi;	dA	BIRCH_PRESSURE_PLATE
	f	Lcpi;	dB	JUNGLE_PRESSURE_PLATE
	f	Lcpi;	dC	ACACIA_PRESSURE_PLATE
	f	Lcpi;	dD	CHERRY_PRESSURE_PLATE
	f	Lcpi;	dE	DARK_OAK_PRESSURE_PLATE
	f	Lcpi;	dF	MANGROVE_PRESSURE_PLATE
	f	Lcpi;	dG	BAMBOO_PRESSURE_PLATE
	f	Lcpi;	dH	REDSTONE_ORE
	f	Lcpi;	dI	DEEPSLATE_REDSTONE_ORE
	f	Lcpi;	dJ	REDSTONE_TORCH
	f	Lcpi;	dK	REDSTONE_WALL_TORCH
	f	Lcpi;	dL	STONE_BUTTON
	f	Lcpi;	d	POLISHED_GRANITE
	f	Lcpi;	dM	SNOW
	f	Lcpi;	dN	ICE
	f	Lcpi;	dO	SNOW_BLOCK
	f	Lcpi;	dP	CACTUS
	f	Lcpi;	dQ	CLAY
	f	Lcpi;	dR	SUGAR_CANE
	f	Lcpi;	dS	JUKEBOX
	f	Lcpi;	dT	OAK_FENCE
	f	Lcpi;	dU	PUMPKIN
	f	Lcpi;	dV	NETHERRACK
	f	Lcpi;	dW	SOUL_SAND
	f	Lcpi;	dX	SOUL_SOIL
	f	Lcpi;	dY	BASALT
	f	Lcpi;	dZ	POLISHED_BASALT
	f	Lcpi;	da	SPRUCE_HANGING_SIGN
	f	Lcpi;	db	BIRCH_HANGING_SIGN
	f	Lcpi;	dc	ACACIA_HANGING_SIGN
	f	Lcpi;	dd	CHERRY_HANGING_SIGN
	f	Lcpi;	de	JUNGLE_HANGING_SIGN
	f	Lcpi;	df	DARK_OAK_HANGING_SIGN
	f	Lcpi;	dg	CRIMSON_HANGING_SIGN
	f	Lcpi;	dh	WARPED_HANGING_SIGN
	f	Lcpi;	di	MANGROVE_HANGING_SIGN
	f	Lcpi;	dj	BAMBOO_HANGING_SIGN
	f	Lcpi;	dk	OAK_WALL_HANGING_SIGN
	f	Lcpi;	dl	SPRUCE_WALL_HANGING_SIGN
	f	Lcpi;	dm	BIRCH_WALL_HANGING_SIGN
	f	Lcpi;	dn	ACACIA_WALL_HANGING_SIGN
	f	Lcpi;	do	CHERRY_WALL_HANGING_SIGN
	f	Lcpi;	dp	JUNGLE_WALL_HANGING_SIGN
	f	Lcpi;	dq	DARK_OAK_WALL_HANGING_SIGN
	f	Lcpi;	dr	MANGROVE_WALL_HANGING_SIGN
	f	Lcpi;	ds	CRIMSON_WALL_HANGING_SIGN
	f	Lcpi;	dt	WARPED_WALL_HANGING_SIGN
	f	Lcpi;	du	BAMBOO_WALL_HANGING_SIGN
	f	Lcpi;	dv	LEVER
	f	Lcpi;	dw	STONE_PRESSURE_PLATE
	f	Lcpi;	dx	IRON_DOOR
	f	Lcpi;	dy	OAK_PRESSURE_PLATE
	f	Lcpi;	dz	SPRUCE_PRESSURE_PLATE
	f	Lcpi;	eA	BIRCH_TRAPDOOR
	f	Lcpi;	eB	JUNGLE_TRAPDOOR
	f	Lcpi;	eC	ACACIA_TRAPDOOR
	f	Lcpi;	eD	CHERRY_TRAPDOOR
	f	Lcpi;	eE	DARK_OAK_TRAPDOOR
	f	Lcpi;	eF	MANGROVE_TRAPDOOR
	f	Lcpi;	eG	BAMBOO_TRAPDOOR
	f	Lcpi;	eH	STONE_BRICKS
	f	Lcpi;	eI	MOSSY_STONE_BRICKS
	f	Lcpi;	eJ	CRACKED_STONE_BRICKS
	f	Lcpi;	eK	CHISELED_STONE_BRICKS
	f	Lcpi;	eL	PACKED_MUD
	f	Lcpi;	e	DIORITE
	f	Lcpi;	eM	MUD_BRICKS
	f	Lcpi;	eN	INFESTED_STONE
	f	Lcpi;	eO	INFESTED_COBBLESTONE
	f	Lcpi;	eP	INFESTED_STONE_BRICKS
	f	Lcpi;	eQ	INFESTED_MOSSY_STONE_BRICKS
	f	Lcpi;	eR	INFESTED_CRACKED_STONE_BRICKS
	f	Lcpi;	eS	INFESTED_CHISELED_STONE_BRICKS
	f	Lcpi;	eT	BROWN_MUSHROOM_BLOCK
	f	Lcpi;	eU	RED_MUSHROOM_BLOCK
	f	Lcpi;	eV	MUSHROOM_STEM
	f	Lcpi;	eW	IRON_BARS
	f	Lcpi;	eX	CHAIN
	f	Lcpi;	eY	GLASS_PANE
	f	Lcpi;	eZ	MELON
	f	Lcpi;	ea	SOUL_TORCH
	f	Lcpi;	eb	SOUL_WALL_TORCH
	f	Lcpi;	ec	GLOWSTONE
	f	Lcpi;	ed	NETHER_PORTAL
	f	Lcpi;	ee	CARVED_PUMPKIN
	f	Lcpi;	ef	JACK_O_LANTERN
	f	Lcpi;	eg	CAKE
	f	Lcpi;	eh	REPEATER
	f	Lcpi;	ei	WHITE_STAINED_GLASS
	f	Lcpi;	ej	ORANGE_STAINED_GLASS
	f	Lcpi;	ek	MAGENTA_STAINED_GLASS
	f	Lcpi;	el	LIGHT_BLUE_STAINED_GLASS
	f	Lcpi;	em	YELLOW_STAINED_GLASS
	f	Lcpi;	en	LIME_STAINED_GLASS
	f	Lcpi;	eo	PINK_STAINED_GLASS
	f	Lcpi;	ep	GRAY_STAINED_GLASS
	f	Lcpi;	eq	LIGHT_GRAY_STAINED_GLASS
	f	Lcpi;	er	CYAN_STAINED_GLASS
	f	Lcpi;	es	PURPLE_STAINED_GLASS
	f	Lcpi;	et	BLUE_STAINED_GLASS
	f	Lcpi;	eu	BROWN_STAINED_GLASS
	f	Lcpi;	ev	GREEN_STAINED_GLASS
	f	Lcpi;	ew	RED_STAINED_GLASS
	f	Lcpi;	ex	BLACK_STAINED_GLASS
	f	Lcpi;	ey	OAK_TRAPDOOR
	f	Lcpi;	ez	SPRUCE_TRAPDOOR
	f	Lcpi;	fA	REDSTONE_LAMP
	f	Lcpi;	fB	COCOA
	f	Lcpi;	fC	SANDSTONE_STAIRS
	f	Lcpi;	fD	EMERALD_ORE
	f	Lcpi;	fE	DEEPSLATE_EMERALD_ORE
	f	Lcpi;	fF	ENDER_CHEST
	f	Lcpi;	fG	TRIPWIRE_HOOK
	f	Lcpi;	fH	TRIPWIRE
	f	Lcpi;	fI	EMERALD_BLOCK
	f	Lcpi;	fJ	SPRUCE_STAIRS
	f	Lcpi;	fK	BIRCH_STAIRS
	f	Lcpi;	fL	JUNGLE_STAIRS
	f	Lcpi;	f	POLISHED_DIORITE
	f	Lcpi;	fM	COMMAND_BLOCK
	f	Lcpi;	fN	BEACON
	f	Lcpi;	fO	COBBLESTONE_WALL
	f	Lcpi;	fP	MOSSY_COBBLESTONE_WALL
	f	Lcpi;	fQ	FLOWER_POT
	f	Lcpi;	fR	POTTED_TORCHFLOWER
	f	Lcpi;	fS	POTTED_OAK_SAPLING
	f	Lcpi;	fT	POTTED_SPRUCE_SAPLING
	f	Lcpi;	fU	POTTED_BIRCH_SAPLING
	f	Lcpi;	fV	POTTED_JUNGLE_SAPLING
	f	Lcpi;	fW	POTTED_ACACIA_SAPLING
	f	Lcpi;	fX	POTTED_CHERRY_SAPLING
	f	Lcpi;	fY	POTTED_DARK_OAK_SAPLING
	f	Lcpi;	fZ	POTTED_MANGROVE_PROPAGULE
	f	Lcpi;	fa	ATTACHED_PUMPKIN_STEM
	f	Lcpi;	fb	ATTACHED_MELON_STEM
	f	Lcpi;	fc	PUMPKIN_STEM
	f	Lcpi;	fd	MELON_STEM
	f	Lcpi;	fe	VINE
	f	Lcpi;	ff	GLOW_LICHEN
	f	Lcpi;	fg	OAK_FENCE_GATE
	f	Lcpi;	fh	BRICK_STAIRS
	f	Lcpi;	fi	STONE_BRICK_STAIRS
	f	Lcpi;	fj	MUD_BRICK_STAIRS
	f	Lcpi;	fk	MYCELIUM
	f	Lcpi;	fl	LILY_PAD
	f	Lcpi;	fm	NETHER_BRICKS
	f	Lcpi;	fn	NETHER_BRICK_FENCE
	f	Lcpi;	fo	NETHER_BRICK_STAIRS
	f	Lcpi;	fp	NETHER_WART
	f	Lcpi;	fq	ENCHANTING_TABLE
	f	Lcpi;	fr	BREWING_STAND
	f	Lcpi;	fs	CAULDRON
	f	Lcpi;	ft	WATER_CAULDRON
	f	Lcpi;	fu	LAVA_CAULDRON
	f	Lcpi;	fv	POWDER_SNOW_CAULDRON
	f	Lcpi;	fw	END_PORTAL
	f	Lcpi;	fx	END_PORTAL_FRAME
	f	Lcpi;	fy	END_STONE
	f	Lcpi;	fz	DRAGON_EGG
	f	Lcpi;	gA	DARK_OAK_BUTTON
	f	Lcpi;	gB	MANGROVE_BUTTON
	f	Lcpi;	gC	BAMBOO_BUTTON
	f	Lcpi;	gD	SKELETON_SKULL
	f	Lcpi;	gE	SKELETON_WALL_SKULL
	f	Lcpi;	gF	WITHER_SKELETON_SKULL
	f	Lcpi;	gG	WITHER_SKELETON_WALL_SKULL
	f	Lcpi;	gH	ZOMBIE_HEAD
	f	Lcpi;	gI	ZOMBIE_WALL_HEAD
	f	Lcpi;	gJ	PLAYER_HEAD
	f	Lcpi;	gK	PLAYER_WALL_HEAD
	f	Lcpi;	gL	CREEPER_HEAD
	f	Lcpi;	g	ANDESITE
	f	Lcpi;	gM	CREEPER_WALL_HEAD
	f	Lcpi;	gN	DRAGON_HEAD
	f	Lcpi;	gO	DRAGON_WALL_HEAD
	f	Lcpi;	gP	PIGLIN_HEAD
	f	Lcpi;	gQ	PIGLIN_WALL_HEAD
	f	Lcpi;	gR	ANVIL
	f	Lcpi;	gS	CHIPPED_ANVIL
	f	Lcpi;	gT	DAMAGED_ANVIL
	f	Lcpi;	gU	TRAPPED_CHEST
	f	Lcpi;	gV	LIGHT_WEIGHTED_PRESSURE_PLATE
	f	Lcpi;	gW	HEAVY_WEIGHTED_PRESSURE_PLATE
	f	Lcpi;	gX	COMPARATOR
	f	Lcpi;	gY	DAYLIGHT_DETECTOR
	f	Lcpi;	gZ	REDSTONE_BLOCK
	f	Lcpi;	ga	POTTED_FERN
	f	Lcpi;	gb	POTTED_DANDELION
	f	Lcpi;	gc	POTTED_POPPY
	f	Lcpi;	gd	POTTED_BLUE_ORCHID
	f	Lcpi;	ge	POTTED_ALLIUM
	f	Lcpi;	gf	POTTED_AZURE_BLUET
	f	Lcpi;	gg	POTTED_RED_TULIP
	f	Lcpi;	gh	POTTED_ORANGE_TULIP
	f	Lcpi;	gi	POTTED_WHITE_TULIP
	f	Lcpi;	gj	POTTED_PINK_TULIP
	f	Lcpi;	gk	POTTED_OXEYE_DAISY
	f	Lcpi;	gl	POTTED_CORNFLOWER
	f	Lcpi;	gm	POTTED_LILY_OF_THE_VALLEY
	f	Lcpi;	gn	POTTED_WITHER_ROSE
	f	Lcpi;	go	POTTED_RED_MUSHROOM
	f	Lcpi;	gp	POTTED_BROWN_MUSHROOM
	f	Lcpi;	gq	POTTED_DEAD_BUSH
	f	Lcpi;	gr	POTTED_CACTUS
	f	Lcpi;	gs	CARROTS
	f	Lcpi;	gt	POTATOES
	f	Lcpi;	gu	OAK_BUTTON
	f	Lcpi;	gv	SPRUCE_BUTTON
	f	Lcpi;	gw	BIRCH_BUTTON
	f	Lcpi;	gx	JUNGLE_BUTTON
	f	Lcpi;	gy	ACACIA_BUTTON
	f	Lcpi;	gz	CHERRY_BUTTON
	f	Lcpi;	hA	MAGENTA_STAINED_GLASS_PANE
	f	Lcpi;	hB	LIGHT_BLUE_STAINED_GLASS_PANE
	f	Lcpi;	hC	YELLOW_STAINED_GLASS_PANE
	f	Lcpi;	hD	LIME_STAINED_GLASS_PANE
	f	Lcpi;	hE	PINK_STAINED_GLASS_PANE
	f	Lcpi;	hF	GRAY_STAINED_GLASS_PANE
	f	Lcpi;	hG	LIGHT_GRAY_STAINED_GLASS_PANE
	f	Lcpi;	hH	CYAN_STAINED_GLASS_PANE
	f	Lcpi;	hI	PURPLE_STAINED_GLASS_PANE
	f	Lcpi;	hJ	BLUE_STAINED_GLASS_PANE
	f	Lcpi;	hK	BROWN_STAINED_GLASS_PANE
	f	Lcpi;	hL	GREEN_STAINED_GLASS_PANE
	f	Lcpi;	h	POLISHED_ANDESITE
	f	Lcpi;	hM	RED_STAINED_GLASS_PANE
	f	Lcpi;	hN	BLACK_STAINED_GLASS_PANE
	f	Lcpi;	hO	ACACIA_STAIRS
	f	Lcpi;	hP	CHERRY_STAIRS
	f	Lcpi;	hQ	DARK_OAK_STAIRS
	f	Lcpi;	hR	MANGROVE_STAIRS
	f	Lcpi;	hS	BAMBOO_STAIRS
	f	Lcpi;	hT	BAMBOO_MOSAIC_STAIRS
	f	Lcpi;	hU	SLIME_BLOCK
	f	Lcpi;	hV	BARRIER
	f	Lcpi;	hW	LIGHT
	f	Lcpi;	hX	IRON_TRAPDOOR
	f	Lcpi;	hY	PRISMARINE
	f	Lcpi;	hZ	PRISMARINE_BRICKS
	f	Lcpi;	ha	NETHER_QUARTZ_ORE
	f	Lcpi;	hb	HOPPER
	f	Lcpi;	hc	QUARTZ_BLOCK
	f	Lcpi;	hd	CHISELED_QUARTZ_BLOCK
	f	Lcpi;	he	QUARTZ_PILLAR
	f	Lcpi;	hf	QUARTZ_STAIRS
	f	Lcpi;	hg	ACTIVATOR_RAIL
	f	Lcpi;	hh	DROPPER
	f	Lcpi;	hi	WHITE_TERRACOTTA
	f	Lcpi;	hj	ORANGE_TERRACOTTA
	f	Lcpi;	hk	MAGENTA_TERRACOTTA
	f	Lcpi;	hl	LIGHT_BLUE_TERRACOTTA
	f	Lcpi;	hm	YELLOW_TERRACOTTA
	f	Lcpi;	hn	LIME_TERRACOTTA
	f	Lcpi;	ho	PINK_TERRACOTTA
	f	Lcpi;	hp	GRAY_TERRACOTTA
	f	Lcpi;	hq	LIGHT_GRAY_TERRACOTTA
	f	Lcpi;	hr	CYAN_TERRACOTTA
	f	Lcpi;	hs	PURPLE_TERRACOTTA
	f	Lcpi;	ht	BLUE_TERRACOTTA
	f	Lcpi;	hu	BROWN_TERRACOTTA
	f	Lcpi;	hv	GREEN_TERRACOTTA
	f	Lcpi;	hw	RED_TERRACOTTA
	f	Lcpi;	hx	BLACK_TERRACOTTA
	f	Lcpi;	hy	WHITE_STAINED_GLASS_PANE
	f	Lcpi;	hz	ORANGE_STAINED_GLASS_PANE
	f	Lcpi;	iA	COAL_BLOCK
	f	Lcpi;	iB	PACKED_ICE
	f	Lcpi;	iC	SUNFLOWER
	f	Lcpi;	iD	LILAC
	f	Lcpi;	iE	ROSE_BUSH
	f	Lcpi;	iF	PEONY
	f	Lcpi;	iG	TALL_GRASS
	f	Lcpi;	iH	LARGE_FERN
	f	Lcpi;	iI	WHITE_BANNER
	f	Lcpi;	iJ	ORANGE_BANNER
	f	Lcpi;	iK	MAGENTA_BANNER
	f	Lcpi;	iL	LIGHT_BLUE_BANNER
	f	Lcpi;	i	GRASS_BLOCK
	f	Lcpi;	iM	YELLOW_BANNER
	f	Lcpi;	iN	LIME_BANNER
	f	Lcpi;	iO	PINK_BANNER
	f	Lcpi;	iP	GRAY_BANNER
	f	Lcpi;	iQ	LIGHT_GRAY_BANNER
	f	Lcpi;	iR	CYAN_BANNER
	f	Lcpi;	iS	PURPLE_BANNER
	f	Lcpi;	iT	BLUE_BANNER
	f	Lcpi;	iU	BROWN_BANNER
	f	Lcpi;	iV	GREEN_BANNER
	f	Lcpi;	iW	RED_BANNER
	f	Lcpi;	iX	BLACK_BANNER
	f	Lcpi;	iY	WHITE_WALL_BANNER
	f	Lcpi;	iZ	ORANGE_WALL_BANNER
	f	Lcpi;	ia	DARK_PRISMARINE
	f	Lcpi;	ib	PRISMARINE_STAIRS
	f	Lcpi;	ic	PRISMARINE_BRICK_STAIRS
	f	Lcpi;	id	DARK_PRISMARINE_STAIRS
	f	Lcpi;	ie	PRISMARINE_SLAB
	f	Lcpi;	if	PRISMARINE_BRICK_SLAB
	f	Lcpi;	ig	DARK_PRISMARINE_SLAB
	f	Lcpi;	ih	SEA_LANTERN
	f	Lcpi;	ii	HAY_BLOCK
	f	Lcpi;	ij	WHITE_CARPET
	f	Lcpi;	ik	ORANGE_CARPET
	f	Lcpi;	il	MAGENTA_CARPET
	f	Lcpi;	im	LIGHT_BLUE_CARPET
	f	Lcpi;	in	YELLOW_CARPET
	f	Lcpi;	io	LIME_CARPET
	f	Lcpi;	ip	PINK_CARPET
	f	Lcpi;	iq	GRAY_CARPET
	f	Lcpi;	ir	LIGHT_GRAY_CARPET
	f	Lcpi;	is	CYAN_CARPET
	f	Lcpi;	it	PURPLE_CARPET
	f	Lcpi;	iu	BLUE_CARPET
	f	Lcpi;	iv	BROWN_CARPET
	f	Lcpi;	iw	GREEN_CARPET
	f	Lcpi;	ix	RED_CARPET
	f	Lcpi;	iy	BLACK_CARPET
	f	Lcpi;	iz	TERRACOTTA
	f	Lcpi;	jA	BAMBOO_SLAB
	f	Lcpi;	jB	BAMBOO_MOSAIC_SLAB
	f	Lcpi;	jC	STONE_SLAB
	f	Lcpi;	jD	SMOOTH_STONE_SLAB
	f	Lcpi;	jE	SANDSTONE_SLAB
	f	Lcpi;	jF	CUT_SANDSTONE_SLAB
	f	Lcpi;	jG	PETRIFIED_OAK_SLAB
	f	Lcpi;	jH	COBBLESTONE_SLAB
	f	Lcpi;	jI	BRICK_SLAB
	f	Lcpi;	jJ	STONE_BRICK_SLAB
	f	Lcpi;	jK	MUD_BRICK_SLAB
	f	Lcpi;	jL	NETHER_BRICK_SLAB
	f	Lcpi;	j	DIRT
	f	Lcpi;	jM	QUARTZ_SLAB
	f	Lcpi;	jN	RED_SANDSTONE_SLAB
	f	Lcpi;	jO	CUT_RED_SANDSTONE_SLAB
	f	Lcpi;	jP	PURPUR_SLAB
	f	Lcpi;	jQ	SMOOTH_STONE
	f	Lcpi;	jR	SMOOTH_SANDSTONE
	f	Lcpi;	jS	SMOOTH_QUARTZ
	f	Lcpi;	jT	SMOOTH_RED_SANDSTONE
	f	Lcpi;	jU	SPRUCE_FENCE_GATE
	f	Lcpi;	jV	BIRCH_FENCE_GATE
	f	Lcpi;	jW	JUNGLE_FENCE_GATE
	f	Lcpi;	jX	ACACIA_FENCE_GATE
	f	Lcpi;	jY	CHERRY_FENCE_GATE
	f	Lcpi;	jZ	DARK_OAK_FENCE_GATE
	f	Lcpi;	ja	MAGENTA_WALL_BANNER
	f	Lcpi;	jb	LIGHT_BLUE_WALL_BANNER
	f	Lcpi;	jc	YELLOW_WALL_BANNER
	f	Lcpi;	jd	LIME_WALL_BANNER
	f	Lcpi;	je	PINK_WALL_BANNER
	f	Lcpi;	jf	GRAY_WALL_BANNER
	f	Lcpi;	jg	LIGHT_GRAY_WALL_BANNER
	f	Lcpi;	jh	CYAN_WALL_BANNER
	f	Lcpi;	ji	PURPLE_WALL_BANNER
	f	Lcpi;	jj	BLUE_WALL_BANNER
	f	Lcpi;	jk	BROWN_WALL_BANNER
	f	Lcpi;	jl	GREEN_WALL_BANNER
	f	Lcpi;	jm	RED_WALL_BANNER
	f	Lcpi;	jn	BLACK_WALL_BANNER
	f	Lcpi;	jo	RED_SANDSTONE
	f	Lcpi;	jp	CHISELED_RED_SANDSTONE
	f	Lcpi;	jq	CUT_RED_SANDSTONE
	f	Lcpi;	jr	RED_SANDSTONE_STAIRS
	f	Lcpi;	js	OAK_SLAB
	f	Lcpi;	jt	SPRUCE_SLAB
	f	Lcpi;	ju	BIRCH_SLAB
	f	Lcpi;	jv	JUNGLE_SLAB
	f	Lcpi;	jw	ACACIA_SLAB
	f	Lcpi;	jx	CHERRY_SLAB
	f	Lcpi;	jy	DARK_OAK_SLAB
	f	Lcpi;	jz	MANGROVE_SLAB
	f	Lcpi;	kA	BEETROOTS
	f	Lcpi;	kB	DIRT_PATH
	f	Lcpi;	kC	END_GATEWAY
	f	Lcpi;	kD	REPEATING_COMMAND_BLOCK
	f	Lcpi;	kE	CHAIN_COMMAND_BLOCK
	f	Lcpi;	kF	FROSTED_ICE
	f	Lcpi;	kG	MAGMA_BLOCK
	f	Lcpi;	kH	NETHER_WART_BLOCK
	f	Lcpi;	kI	RED_NETHER_BRICKS
	f	Lcpi;	kJ	BONE_BLOCK
	f	Lcpi;	kK	STRUCTURE_VOID
	f	Lcpi;	kL	OBSERVER
	f	Lcpi;	k	COARSE_DIRT
	f	Lcpi;	kM	SHULKER_BOX
	f	Lcpi;	kN	WHITE_SHULKER_BOX
	f	Lcpi;	kO	ORANGE_SHULKER_BOX
	f	Lcpi;	kP	MAGENTA_SHULKER_BOX
	f	Lcpi;	kQ	LIGHT_BLUE_SHULKER_BOX
	f	Lcpi;	kR	YELLOW_SHULKER_BOX
	f	Lcpi;	kS	LIME_SHULKER_BOX
	f	Lcpi;	kT	PINK_SHULKER_BOX
	f	Lcpi;	kU	GRAY_SHULKER_BOX
	f	Lcpi;	kV	LIGHT_GRAY_SHULKER_BOX
	f	Lcpi;	kW	CYAN_SHULKER_BOX
	f	Lcpi;	kX	PURPLE_SHULKER_BOX
	f	Lcpi;	kY	BLUE_SHULKER_BOX
	f	Lcpi;	kZ	BROWN_SHULKER_BOX
	f	Lcpi;	ka	MANGROVE_FENCE_GATE
	f	Lcpi;	kb	BAMBOO_FENCE_GATE
	f	Lcpi;	kc	SPRUCE_FENCE
	f	Lcpi;	kd	BIRCH_FENCE
	f	Lcpi;	ke	JUNGLE_FENCE
	f	Lcpi;	kf	ACACIA_FENCE
	f	Lcpi;	kg	CHERRY_FENCE
	f	Lcpi;	kh	DARK_OAK_FENCE
	f	Lcpi;	ki	MANGROVE_FENCE
	f	Lcpi;	kj	BAMBOO_FENCE
	f	Lcpi;	kk	SPRUCE_DOOR
	f	Lcpi;	kl	BIRCH_DOOR
	f	Lcpi;	km	JUNGLE_DOOR
	f	Lcpi;	kn	ACACIA_DOOR
	f	Lcpi;	ko	CHERRY_DOOR
	f	Lcpi;	kp	DARK_OAK_DOOR
	f	Lcpi;	kq	MANGROVE_DOOR
	f	Lcpi;	kr	BAMBOO_DOOR
	f	Lcpi;	ks	END_ROD
	f	Lcpi;	kt	CHORUS_PLANT
	f	Lcpi;	ku	CHORUS_FLOWER
	f	Lcpi;	kv	PURPUR_BLOCK
	f	Lcpi;	kw	PURPUR_PILLAR
	f	Lcpi;	kx	PURPUR_STAIRS
	f	Lcpi;	ky	END_STONE_BRICKS
	f	Lcpi;	kz	TORCHFLOWER_CROP
	f	Lcpi;	lA	GRAY_CONCRETE
	f	Lcpi;	lB	LIGHT_GRAY_CONCRETE
	f	Lcpi;	lC	CYAN_CONCRETE
	f	Lcpi;	lD	PURPLE_CONCRETE
	f	Lcpi;	lE	BLUE_CONCRETE
	f	Lcpi;	lF	BROWN_CONCRETE
	f	Lcpi;	lG	GREEN_CONCRETE
	f	Lcpi;	lH	RED_CONCRETE
	f	Lcpi;	lI	BLACK_CONCRETE
	f	Lcpi;	lJ	WHITE_CONCRETE_POWDER
	f	Lcpi;	lK	ORANGE_CONCRETE_POWDER
	f	Lcpi;	lL	MAGENTA_CONCRETE_POWDER
	f	Lcpi;	l	PODZOL
	f	Lcpi;	lM	LIGHT_BLUE_CONCRETE_POWDER
	f	Lcpi;	lN	YELLOW_CONCRETE_POWDER
	f	Lcpi;	lO	LIME_CONCRETE_POWDER
	f	Lcpi;	lP	PINK_CONCRETE_POWDER
	f	Lcpi;	lQ	GRAY_CONCRETE_POWDER
	f	Lcpi;	lR	LIGHT_GRAY_CONCRETE_POWDER
	f	Lcpi;	lS	CYAN_CONCRETE_POWDER
	f	Lcpi;	lT	PURPLE_CONCRETE_POWDER
	f	Lcpi;	lU	BLUE_CONCRETE_POWDER
	f	Lcpi;	lV	BROWN_CONCRETE_POWDER
	f	Lcpi;	lW	GREEN_CONCRETE_POWDER
	f	Lcpi;	lX	RED_CONCRETE_POWDER
	f	Lcpi;	lY	BLACK_CONCRETE_POWDER
	f	Lcpi;	lZ	KELP
	f	Lcpi;	la	GREEN_SHULKER_BOX
	f	Lcpi;	lb	RED_SHULKER_BOX
	f	Lcpi;	lc	BLACK_SHULKER_BOX
	f	Lcpi;	ld	WHITE_GLAZED_TERRACOTTA
	f	Lcpi;	le	ORANGE_GLAZED_TERRACOTTA
	f	Lcpi;	lf	MAGENTA_GLAZED_TERRACOTTA
	f	Lcpi;	lg	LIGHT_BLUE_GLAZED_TERRACOTTA
	f	Lcpi;	lh	YELLOW_GLAZED_TERRACOTTA
	f	Lcpi;	li	LIME_GLAZED_TERRACOTTA
	f	Lcpi;	lj	PINK_GLAZED_TERRACOTTA
	f	Lcpi;	lk	GRAY_GLAZED_TERRACOTTA
	f	Lcpi;	ll	LIGHT_GRAY_GLAZED_TERRACOTTA
	f	Lcpi;	lm	CYAN_GLAZED_TERRACOTTA
	f	Lcpi;	ln	PURPLE_GLAZED_TERRACOTTA
	f	Lcpi;	lo	BLUE_GLAZED_TERRACOTTA
	f	Lcpi;	lp	BROWN_GLAZED_TERRACOTTA
	f	Lcpi;	lq	GREEN_GLAZED_TERRACOTTA
	f	Lcpi;	lr	RED_GLAZED_TERRACOTTA
	f	Lcpi;	ls	BLACK_GLAZED_TERRACOTTA
	f	Lcpi;	lt	WHITE_CONCRETE
	f	Lcpi;	lu	ORANGE_CONCRETE
	f	Lcpi;	lv	MAGENTA_CONCRETE
	f	Lcpi;	lw	LIGHT_BLUE_CONCRETE
	f	Lcpi;	lx	YELLOW_CONCRETE
	f	Lcpi;	ly	LIME_CONCRETE
	f	Lcpi;	lz	PINK_CONCRETE
	f	Lcpi;	mA	DEAD_FIRE_CORAL_FAN
	f	Lcpi;	mB	DEAD_HORN_CORAL_FAN
	f	Lcpi;	mC	TUBE_CORAL_FAN
	f	Lcpi;	mD	BRAIN_CORAL_FAN
	f	Lcpi;	mE	BUBBLE_CORAL_FAN
	f	Lcpi;	mF	FIRE_CORAL_FAN
	f	Lcpi;	mG	HORN_CORAL_FAN
	f	Lcpi;	mH	DEAD_TUBE_CORAL_WALL_FAN
	f	Lcpi;	mI	DEAD_BRAIN_CORAL_WALL_FAN
	f	Lcpi;	mJ	DEAD_BUBBLE_CORAL_WALL_FAN
	f	Lcpi;	mK	DEAD_FIRE_CORAL_WALL_FAN
	f	Lcpi;	mL	DEAD_HORN_CORAL_WALL_FAN
	f	Lcpi;	m	COBBLESTONE
	f	Lcpi;	mM	TUBE_CORAL_WALL_FAN
	f	Lcpi;	mN	BRAIN_CORAL_WALL_FAN
	f	Lcpi;	mO	BUBBLE_CORAL_WALL_FAN
	f	Lcpi;	mP	FIRE_CORAL_WALL_FAN
	f	Lcpi;	mQ	HORN_CORAL_WALL_FAN
	f	Lcpi;	mR	SEA_PICKLE
	f	Lcpi;	mS	BLUE_ICE
	f	Lcpi;	mT	CONDUIT
	f	Lcpi;	mU	BAMBOO_SAPLING
	f	Lcpi;	mV	BAMBOO
	f	Lcpi;	mW	POTTED_BAMBOO
	f	Lcpi;	mX	VOID_AIR
	f	Lcpi;	mY	CAVE_AIR
	f	Lcpi;	mZ	BUBBLE_COLUMN
	f	Lcpi;	ma	KELP_PLANT
	f	Lcpi;	mb	DRIED_KELP_BLOCK
	f	Lcpi;	mc	TURTLE_EGG
	f	Lcpi;	md	DEAD_TUBE_CORAL_BLOCK
	f	Lcpi;	me	DEAD_BRAIN_CORAL_BLOCK
	f	Lcpi;	mf	DEAD_BUBBLE_CORAL_BLOCK
	f	Lcpi;	mg	DEAD_FIRE_CORAL_BLOCK
	f	Lcpi;	mh	DEAD_HORN_CORAL_BLOCK
	f	Lcpi;	mi	TUBE_CORAL_BLOCK
	f	Lcpi;	mj	BRAIN_CORAL_BLOCK
	f	Lcpi;	mk	BUBBLE_CORAL_BLOCK
	f	Lcpi;	ml	FIRE_CORAL_BLOCK
	f	Lcpi;	mm	HORN_CORAL_BLOCK
	f	Lcpi;	mn	DEAD_TUBE_CORAL
	f	Lcpi;	mo	DEAD_BRAIN_CORAL
	f	Lcpi;	mp	DEAD_BUBBLE_CORAL
	f	Lcpi;	mq	DEAD_FIRE_CORAL
	f	Lcpi;	mr	DEAD_HORN_CORAL
	f	Lcpi;	ms	TUBE_CORAL
	f	Lcpi;	mt	BRAIN_CORAL
	f	Lcpi;	mu	BUBBLE_CORAL
	f	Lcpi;	mv	FIRE_CORAL
	f	Lcpi;	mw	HORN_CORAL
	f	Lcpi;	mx	DEAD_TUBE_CORAL_FAN
	f	Lcpi;	my	DEAD_BRAIN_CORAL_FAN
	f	Lcpi;	mz	DEAD_BUBBLE_CORAL_FAN
	f	Lcpi;	nA	DIORITE_SLAB
	f	Lcpi;	nB	BRICK_WALL
	f	Lcpi;	nC	PRISMARINE_WALL
	f	Lcpi;	nD	RED_SANDSTONE_WALL
	f	Lcpi;	nE	MOSSY_STONE_BRICK_WALL
	f	Lcpi;	nF	GRANITE_WALL
	f	Lcpi;	nG	STONE_BRICK_WALL
	f	Lcpi;	nH	MUD_BRICK_WALL
	f	Lcpi;	nI	NETHER_BRICK_WALL
	f	Lcpi;	nJ	ANDESITE_WALL
	f	Lcpi;	nK	RED_NETHER_BRICK_WALL
	f	Lcpi;	nL	SANDSTONE_WALL
	f	Lcpi;	n	OAK_PLANKS
	f	Lcpi;	nM	END_STONE_BRICK_WALL
	f	Lcpi;	nN	DIORITE_WALL
	f	Lcpi;	nO	SCAFFOLDING
	f	Lcpi;	nP	LOOM
	f	Lcpi;	nQ	BARREL
	f	Lcpi;	nR	SMOKER
	f	Lcpi;	nS	BLAST_FURNACE
	f	Lcpi;	nT	CARTOGRAPHY_TABLE
	f	Lcpi;	nU	FLETCHING_TABLE
	f	Lcpi;	nV	GRINDSTONE
	f	Lcpi;	nW	LECTERN
	f	Lcpi;	nX	SMITHING_TABLE
	f	Lcpi;	nY	STONECUTTER
	f	Lcpi;	nZ	BELL
	f	Lcpi;	na	POLISHED_GRANITE_STAIRS
	f	Lcpi;	nb	SMOOTH_RED_SANDSTONE_STAIRS
	f	Lcpi;	nc	MOSSY_STONE_BRICK_STAIRS
	f	Lcpi;	nd	POLISHED_DIORITE_STAIRS
	f	Lcpi;	ne	MOSSY_COBBLESTONE_STAIRS
	f	Lcpi;	nf	END_STONE_BRICK_STAIRS
	f	Lcpi;	ng	STONE_STAIRS
	f	Lcpi;	nh	SMOOTH_SANDSTONE_STAIRS
	f	Lcpi;	ni	SMOOTH_QUARTZ_STAIRS
	f	Lcpi;	nj	GRANITE_STAIRS
	f	Lcpi;	nk	ANDESITE_STAIRS
	f	Lcpi;	nl	RED_NETHER_BRICK_STAIRS
	f	Lcpi;	nm	POLISHED_ANDESITE_STAIRS
	f	Lcpi;	nn	DIORITE_STAIRS
	f	Lcpi;	no	POLISHED_GRANITE_SLAB
	f	Lcpi;	np	SMOOTH_RED_SANDSTONE_SLAB
	f	Lcpi;	nq	MOSSY_STONE_BRICK_SLAB
	f	Lcpi;	nr	POLISHED_DIORITE_SLAB
	f	Lcpi;	ns	MOSSY_COBBLESTONE_SLAB
	f	Lcpi;	nt	END_STONE_BRICK_SLAB
	f	Lcpi;	nu	SMOOTH_SANDSTONE_SLAB
	f	Lcpi;	nv	SMOOTH_QUARTZ_SLAB
	f	Lcpi;	nw	GRANITE_SLAB
	f	Lcpi;	nx	ANDESITE_SLAB
	f	Lcpi;	ny	RED_NETHER_BRICK_SLAB
	f	Lcpi;	nz	POLISHED_ANDESITE_SLAB
	f	Lcpi;	oA	CRIMSON_PLANKS
	f	Lcpi;	oB	WARPED_PLANKS
	f	Lcpi;	oC	CRIMSON_SLAB
	f	Lcpi;	oD	WARPED_SLAB
	f	Lcpi;	oE	CRIMSON_PRESSURE_PLATE
	f	Lcpi;	oF	WARPED_PRESSURE_PLATE
	f	Lcpi;	oG	CRIMSON_FENCE
	f	Lcpi;	oH	WARPED_FENCE
	f	Lcpi;	oI	CRIMSON_TRAPDOOR
	f	Lcpi;	oJ	WARPED_TRAPDOOR
	f	Lcpi;	oK	CRIMSON_FENCE_GATE
	f	Lcpi;	oL	WARPED_FENCE_GATE
	f	Lcpi;	o	SPRUCE_PLANKS
	f	Lcpi;	oM	CRIMSON_STAIRS
	f	Lcpi;	oN	WARPED_STAIRS
	f	Lcpi;	oO	CRIMSON_BUTTON
	f	Lcpi;	oP	WARPED_BUTTON
	f	Lcpi;	oQ	CRIMSON_DOOR
	f	Lcpi;	oR	WARPED_DOOR
	f	Lcpi;	oS	CRIMSON_SIGN
	f	Lcpi;	oT	WARPED_SIGN
	f	Lcpi;	oU	CRIMSON_WALL_SIGN
	f	Lcpi;	oV	WARPED_WALL_SIGN
	f	Lcpi;	oW	STRUCTURE_BLOCK
	f	Lcpi;	oX	JIGSAW
	f	Lcpi;	oY	COMPOSTER
	f	Lcpi;	oZ	TARGET
	f	Lcpi;	oa	LANTERN
	f	Lcpi;	ob	SOUL_LANTERN
	f	Lcpi;	oc	CAMPFIRE
	f	Lcpi;	od	SOUL_CAMPFIRE
	f	Lcpi;	oe	SWEET_BERRY_BUSH
	f	Lcpi;	of	WARPED_STEM
	f	Lcpi;	og	STRIPPED_WARPED_STEM
	f	Lcpi;	oh	WARPED_HYPHAE
	f	Lcpi;	oi	STRIPPED_WARPED_HYPHAE
	f	Lcpi;	oj	WARPED_NYLIUM
	f	Lcpi;	ok	WARPED_FUNGUS
	f	Lcpi;	ol	WARPED_WART_BLOCK
	f	Lcpi;	om	WARPED_ROOTS
	f	Lcpi;	on	NETHER_SPROUTS
	f	Lcpi;	oo	CRIMSON_STEM
	f	Lcpi;	op	STRIPPED_CRIMSON_STEM
	f	Lcpi;	oq	CRIMSON_HYPHAE
	f	Lcpi;	or	STRIPPED_CRIMSON_HYPHAE
	f	Lcpi;	os	CRIMSON_NYLIUM
	f	Lcpi;	ot	CRIMSON_FUNGUS
	f	Lcpi;	ou	SHROOMLIGHT
	f	Lcpi;	ov	WEEPING_VINES
	f	Lcpi;	ow	WEEPING_VINES_PLANT
	f	Lcpi;	ox	TWISTING_VINES
	f	Lcpi;	oy	TWISTING_VINES_PLANT
	f	Lcpi;	oz	CRIMSON_ROOTS
	f	Lcpi;	pA	POLISHED_BLACKSTONE_SLAB
	f	Lcpi;	pB	POLISHED_BLACKSTONE_PRESSURE_PLATE
	f	Lcpi;	pC	POLISHED_BLACKSTONE_BUTTON
	f	Lcpi;	pD	POLISHED_BLACKSTONE_WALL
	f	Lcpi;	pE	CHISELED_NETHER_BRICKS
	f	Lcpi;	pF	CRACKED_NETHER_BRICKS
	f	Lcpi;	pG	QUARTZ_BRICKS
	f	Lcpi;	pH	CANDLE
	f	Lcpi;	pI	WHITE_CANDLE
	f	Lcpi;	pJ	ORANGE_CANDLE
	f	Lcpi;	pK	MAGENTA_CANDLE
	f	Lcpi;	pL	LIGHT_BLUE_CANDLE
	f	Lcpi;	p	BIRCH_PLANKS
	f	Lcpi;	pM	YELLOW_CANDLE
	f	Lcpi;	pN	LIME_CANDLE
	f	Lcpi;	pO	PINK_CANDLE
	f	Lcpi;	pP	GRAY_CANDLE
	f	Lcpi;	pQ	LIGHT_GRAY_CANDLE
	f	Lcpi;	pR	CYAN_CANDLE
	f	Lcpi;	pS	PURPLE_CANDLE
	f	Lcpi;	pT	BLUE_CANDLE
	f	Lcpi;	pU	BROWN_CANDLE
	f	Lcpi;	pV	GREEN_CANDLE
	f	Lcpi;	pW	RED_CANDLE
	f	Lcpi;	pX	BLACK_CANDLE
	f	Lcpi;	pY	CANDLE_CAKE
	f	Lcpi;	pZ	WHITE_CANDLE_CAKE
	f	Lcpi;	pa	BEE_NEST
	f	Lcpi;	pb	BEEHIVE
	f	Lcpi;	pc	HONEY_BLOCK
	f	Lcpi;	pd	HONEYCOMB_BLOCK
	f	Lcpi;	pe	NETHERITE_BLOCK
	f	Lcpi;	pf	ANCIENT_DEBRIS
	f	Lcpi;	pg	CRYING_OBSIDIAN
	f	Lcpi;	ph	RESPAWN_ANCHOR
	f	Lcpi;	pi	POTTED_CRIMSON_FUNGUS
	f	Lcpi;	pj	POTTED_WARPED_FUNGUS
	f	Lcpi;	pk	POTTED_CRIMSON_ROOTS
	f	Lcpi;	pl	POTTED_WARPED_ROOTS
	f	Lcpi;	pm	LODESTONE
	f	Lcpi;	pn	BLACKSTONE
	f	Lcpi;	po	BLACKSTONE_STAIRS
	f	Lcpi;	pp	BLACKSTONE_WALL
	f	Lcpi;	pq	BLACKSTONE_SLAB
	f	Lcpi;	pr	POLISHED_BLACKSTONE
	f	Lcpi;	ps	POLISHED_BLACKSTONE_BRICKS
	f	Lcpi;	pt	CRACKED_POLISHED_BLACKSTONE_BRICKS
	f	Lcpi;	pu	CHISELED_POLISHED_BLACKSTONE
	f	Lcpi;	pv	POLISHED_BLACKSTONE_BRICK_SLAB
	f	Lcpi;	pw	POLISHED_BLACKSTONE_BRICK_STAIRS
	f	Lcpi;	px	POLISHED_BLACKSTONE_BRICK_WALL
	f	Lcpi;	py	GILDED_BLACKSTONE
	f	Lcpi;	pz	POLISHED_BLACKSTONE_STAIRS
	f	Lcpi;	qA	SCULK
	f	Lcpi;	qB	SCULK_VEIN
	f	Lcpi;	qC	SCULK_CATALYST
	f	Lcpi;	qD	SCULK_SHRIEKER
	f	Lcpi;	qE	OXIDIZED_COPPER
	f	Lcpi;	qF	WEATHERED_COPPER
	f	Lcpi;	qG	EXPOSED_COPPER
	f	Lcpi;	qH	COPPER_BLOCK
	f	Lcpi;	qI	COPPER_ORE
	f	Lcpi;	qJ	DEEPSLATE_COPPER_ORE
	f	Lcpi;	qK	OXIDIZED_CUT_COPPER
	f	Lcpi;	qL	WEATHERED_CUT_COPPER
	f	Lcpi;	q	JUNGLE_PLANKS
	f	Lcpi;	qM	EXPOSED_CUT_COPPER
	f	Lcpi;	qN	CUT_COPPER
	f	Lcpi;	qO	OXIDIZED_CUT_COPPER_STAIRS
	f	Lcpi;	qP	WEATHERED_CUT_COPPER_STAIRS
	f	Lcpi;	qQ	EXPOSED_CUT_COPPER_STAIRS
	f	Lcpi;	qR	CUT_COPPER_STAIRS
	f	Lcpi;	qS	OXIDIZED_CUT_COPPER_SLAB
	f	Lcpi;	qT	WEATHERED_CUT_COPPER_SLAB
	f	Lcpi;	qU	EXPOSED_CUT_COPPER_SLAB
	f	Lcpi;	qV	CUT_COPPER_SLAB
	f	Lcpi;	qW	WAXED_COPPER_BLOCK
	f	Lcpi;	qX	WAXED_WEATHERED_COPPER
	f	Lcpi;	qY	WAXED_EXPOSED_COPPER
	f	Lcpi;	qZ	WAXED_OXIDIZED_COPPER
	f	Lcpi;	qa	ORANGE_CANDLE_CAKE
	f	Lcpi;	qb	MAGENTA_CANDLE_CAKE
	f	Lcpi;	qc	LIGHT_BLUE_CANDLE_CAKE
	f	Lcpi;	qd	YELLOW_CANDLE_CAKE
	f	Lcpi;	qe	LIME_CANDLE_CAKE
	f	Lcpi;	qf	PINK_CANDLE_CAKE
	f	Lcpi;	qg	GRAY_CANDLE_CAKE
	f	Lcpi;	qh	LIGHT_GRAY_CANDLE_CAKE
	f	Lcpi;	qi	CYAN_CANDLE_CAKE
	f	Lcpi;	qj	PURPLE_CANDLE_CAKE
	f	Lcpi;	qk	BLUE_CANDLE_CAKE
	f	Lcpi;	ql	BROWN_CANDLE_CAKE
	f	Lcpi;	qm	GREEN_CANDLE_CAKE
	f	Lcpi;	qn	RED_CANDLE_CAKE
	f	Lcpi;	qo	BLACK_CANDLE_CAKE
	f	Lcpi;	qp	AMETHYST_BLOCK
	f	Lcpi;	qq	BUDDING_AMETHYST
	f	Lcpi;	qr	AMETHYST_CLUSTER
	f	Lcpi;	qs	LARGE_AMETHYST_BUD
	f	Lcpi;	qt	MEDIUM_AMETHYST_BUD
	f	Lcpi;	qu	SMALL_AMETHYST_BUD
	f	Lcpi;	qv	TUFF
	f	Lcpi;	qw	CALCITE
	f	Lcpi;	qx	TINTED_GLASS
	f	Lcpi;	qy	POWDER_SNOW
	f	Lcpi;	qz	SCULK_SENSOR
	f	Lcpi;	rA	HANGING_ROOTS
	f	Lcpi;	rB	ROOTED_DIRT
	f	Lcpi;	rC	MUD
	f	Lcpi;	rD	DEEPSLATE
	f	Lcpi;	rE	COBBLED_DEEPSLATE
	f	Lcpi;	rF	COBBLED_DEEPSLATE_STAIRS
	f	Lcpi;	rG	COBBLED_DEEPSLATE_SLAB
	f	Lcpi;	rH	COBBLED_DEEPSLATE_WALL
	f	Lcpi;	rI	POLISHED_DEEPSLATE
	f	Lcpi;	rJ	POLISHED_DEEPSLATE_STAIRS
	f	Lcpi;	rK	POLISHED_DEEPSLATE_SLAB
	f	Lcpi;	rL	POLISHED_DEEPSLATE_WALL
	f	Lcpi;	r	ACACIA_PLANKS
	f	Lcpi;	rM	DEEPSLATE_TILES
	f	Lcpi;	rN	DEEPSLATE_TILE_STAIRS
	f	Lcpi;	rO	DEEPSLATE_TILE_SLAB
	f	Lcpi;	rP	DEEPSLATE_TILE_WALL
	f	Lcpi;	rQ	DEEPSLATE_BRICKS
	f	Lcpi;	rR	DEEPSLATE_BRICK_STAIRS
	f	Lcpi;	rS	DEEPSLATE_BRICK_SLAB
	f	Lcpi;	rT	DEEPSLATE_BRICK_WALL
	f	Lcpi;	rU	CHISELED_DEEPSLATE
	f	Lcpi;	rV	CRACKED_DEEPSLATE_BRICKS
	f	Lcpi;	rW	CRACKED_DEEPSLATE_TILES
	f	Lcpi;	rX	INFESTED_DEEPSLATE
	f	Lcpi;	rY	SMOOTH_BASALT
	f	Lcpi;	rZ	RAW_IRON_BLOCK
	f	Lcpi;	ra	WAXED_OXIDIZED_CUT_COPPER
	f	Lcpi;	rb	WAXED_WEATHERED_CUT_COPPER
	f	Lcpi;	rc	WAXED_EXPOSED_CUT_COPPER
	f	Lcpi;	rd	WAXED_CUT_COPPER
	f	Lcpi;	re	WAXED_OXIDIZED_CUT_COPPER_STAIRS
	f	Lcpi;	rf	WAXED_WEATHERED_CUT_COPPER_STAIRS
	f	Lcpi;	rg	WAXED_EXPOSED_CUT_COPPER_STAIRS
	f	Lcpi;	rh	WAXED_CUT_COPPER_STAIRS
	f	Lcpi;	ri	WAXED_OXIDIZED_CUT_COPPER_SLAB
	f	Lcpi;	rj	WAXED_WEATHERED_CUT_COPPER_SLAB
	f	Lcpi;	rk	WAXED_EXPOSED_CUT_COPPER_SLAB
	f	Lcpi;	rl	WAXED_CUT_COPPER_SLAB
	f	Lcpi;	rm	LIGHTNING_ROD
	f	Lcpi;	rn	POINTED_DRIPSTONE
	f	Lcpi;	ro	DRIPSTONE_BLOCK
	f	Lcpi;	rp	CAVE_VINES
	f	Lcpi;	rq	CAVE_VINES_PLANT
	f	Lcpi;	rr	SPORE_BLOSSOM
	f	Lcpi;	rs	AZALEA
	f	Lcpi;	rt	FLOWERING_AZALEA
	f	Lcpi;	ru	MOSS_CARPET
	f	Lcpi;	rv	PINK_PETALS
	f	Lcpi;	rw	MOSS_BLOCK
	f	Lcpi;	rx	BIG_DRIPLEAF
	f	Lcpi;	ry	BIG_DRIPLEAF_STEM
	f	Lcpi;	rz	SMALL_DRIPLEAF
	f	Lcpi;	s	CHERRY_PLANKS
	f	Lcpi;	sa	RAW_COPPER_BLOCK
	f	Lcpi;	sb	RAW_GOLD_BLOCK
	f	Lcpi;	sc	POTTED_AZALEA
	f	Lcpi;	sd	POTTED_FLOWERING_AZALEA
	f	Lcpi;	se	OCHRE_FROGLIGHT
	f	Lcpi;	sf	VERDANT_FROGLIGHT
	f	Lcpi;	sg	PEARLESCENT_FROGLIGHT
	f	Lcpi;	sh	FROGSPAWN
	f	Lcpi;	si	REINFORCED_DEEPSLATE
	f	Lcpi;	sj	DECORATED_POT
	f	Lcpi;	t	DARK_OAK_PLANKS
	f	Lcpi;	u	MANGROVE_PLANKS
	f	Lcpi;	v	BAMBOO_PLANKS
	f	Lcpi;	w	BAMBOO_MOSAIC
	f	Lcpi;	x	OAK_SAPLING
	f	Lcpi;	y	SPRUCE_SAPLING
	f	Lcpi;	z	BIRCH_SAPLING
c	cpk	net/minecraft/world/level/block/BonemealableBlock
	m	(Laip;Lapo;Lgt;Ldbq;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcmi;Lapo;Lgt;Ldbq;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcml;Lgt;Ldbq;Z)Z	a	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
		p	4		isClient
c	cpl	net/minecraft/world/level/block/BrewingStandBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lcmi;Ldbq;Lczg;)Lczf;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Lcmi;Lgt;Ldbq;Lbfx;Lcfv;)V	a	setPlacedBy
		p	1		world
		p	2		pos
		p	3		state
		p	4		placer
		p	5		itemStack
	m	(Ldbq;Lclo;Lgt;Ldxa;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lcmi;Lgt;)I	a	getAnalogOutputSignal
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lcmi;Lgt;Lapo;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Lcmi;Lgt;Lbym;Lbdx;Leda;)Lbdy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldbq;Lcmi;Lgt;Ldbq;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lgt;Ldbq;)Lcze;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Ldbq;)Lcvj;	b_	getRenderShape
		p	1		state
	m	(Ldbq;)Z	d_	hasAnalogOutputSignal
		p	1		state
	f	[Ldci;	a	HAS_BOTTLE
	f	Ledx;	b	SHAPE
c	cpm	net/minecraft/world/level/block/BubbleColumnBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lcmj;Lgt;Ldbq;Ldbq;)V	a	updateColumn
		p	0		world
		p	1		pos
		p	2		water
		p	3		bubbleSource
	m	(Ldbq;Laip;Lgt;Lapo;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lcmi;Lgt;Lapo;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Lcmi;Lgt;Lbfh;)V	a	entityInside
		p	1		state
		p	2		world
		p	3		pos
		p	4		entity
	m	(Ldbq;Lcml;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	()Ljava/util/Optional;	an_	getPickupSound
	m	(Lcmj;Lgt;Ldbq;)V	b	updateColumn
		p	0		world
		p	1		pos
		p	2		state
	m	(Ldbq;)Lcvj;	b_	getRenderShape
		p	1		state
	m	(Lcmj;Lgt;Ldbq;)Lcfv;	c	pickupBlock
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldbq;)Ldwj;	c_	getFluidState
		p	1		state
	m	(Ldbq;)Z	h	canExistIn
		p	0		state
	m	(Ldbq;)Ldbq;	n	getColumnState
		p	0		state
	f	Ldci;	a	DRAG_DOWN
	f	I	b	CHECK_PERIOD
c	cpn	net/minecraft/world/level/block/BucketPickup
	m	()Ljava/util/Optional;	an_	getPickupSound
	m	(Lcmj;Lgt;Ldbq;)Lcfv;	c	pickupBlock
		p	1		world
		p	2		pos
		p	3		state
c	cpo	net/minecraft/world/level/block/BuddingAmethystBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Ldbq;Laip;Lgt;Lapo;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;)Ldwp;	d	getPistonPushReaction
		p	1		state
	m	(Ldbq;)Z	g	canClusterGrowAtState
		p	0		state
	f	I	a	GROWTH_CHANCE
	f	[Lgz;	b	DIRECTIONS
c	cpp	net/minecraft/world/level/block/BushBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Ldbq;Lclo;Lgt;Ldxa;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldbq;Lcml;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldbq;Lclo;Lgt;)Z	c	propagatesSkylightDown
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lclo;Lgt;)Z	d	mayPlaceOn
		p	1		floor
		p	2		world
		p	3		pos
c	cpq	net/minecraft/world/level/block/ButtonBlock
	m	(Ldbp$d;Ldcg;IZ)V	<init>	<init>
		p	1		settings
		p	2		blockSetType
		p	3		pressTicks
		p	4		wooden
	m	(Lbym;Lcmj;Lgt;Z)V	a	playSound
		p	1		player
		p	2		world
		p	3		pos
		p	4		powered
	m	(Ldbq;Laip;Lgt;Lapo;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lclo;Lgt;Lgz;)I	a	getSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldbq;Lcmi;Lgt;Lbfh;)V	a	entityInside
		p	1		state
		p	2		world
		p	3		pos
		p	4		entity
	m	(Ldbq;Lcmi;Lgt;Lbym;Lbdx;Leda;)Lbdy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldbq;Lcmi;Lgt;Ldbq;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Z)Lamq;	a	getSound
		p	1		powered
	m	(Ldbq;Lclo;Lgt;Lgz;)I	b	getDirectSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldbq;Lcmi;Lgt;)V	d	press
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lcmi;Lgt;)V	e	checkPressed
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lcmi;Lgt;)V	f	updateNeighbours
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;)Z	f_	isSignalSource
		p	1		state
	f	Ledx;	E	PRESSED_FLOOR_AABB_Z
	f	Ledx;	F	PRESSED_NORTH_AABB
	f	Ledx;	G	PRESSED_SOUTH_AABB
	f	Ledx;	H	PRESSED_WEST_AABB
	f	Ledx;	I	PRESSED_EAST_AABB
	f	I	K	PRESSED_DEPTH
	f	I	L	UNPRESSED_DEPTH
	f	Ldcg;	M	type
	f	I	N	ticksToStayPressed
	f	Z	O	arrowsCanPress
	f	Ldci;	a	POWERED
	f	I	b	HALF_AABB_HEIGHT
	f	I	c	HALF_AABB_WIDTH
	f	Ledx;	d	CEILING_AABB_X
	f	Ledx;	e	CEILING_AABB_Z
	f	Ledx;	f	FLOOR_AABB_X
	f	Ledx;	g	FLOOR_AABB_Z
	f	Ledx;	h	NORTH_AABB
	f	Ledx;	i	SOUTH_AABB
	f	Ledx;	j	WEST_AABB
	f	Ledx;	k	EAST_AABB
	f	Ledx;	l	PRESSED_CEILING_AABB_X
	f	Ledx;	m	PRESSED_CEILING_AABB_Z
	f	Ledx;	n	PRESSED_FLOOR_AABB_X
c	cpq$1	net/minecraft/world/level/block/ButtonBlock$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
	f	[I	b	$SwitchMap$net$minecraft$world$level$block$state$properties$AttachFace
c	cpr	net/minecraft/world/level/block/CactusBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Ldbq;Laip;Lgt;Lapo;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Lclo;Lgt;Ldxa;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lcmi;Lgt;Lbfh;)V	a	entityInside
		p	1		state
		p	2		world
		p	3		pos
		p	4		entity
	m	(Ldbq;Lcml;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldbq;Laip;Lgt;Lapo;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	c	getCollisionShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	f	Ldcr;	a	AGE
	f	I	b	MAX_AGE
	f	I	c	AABB_OFFSET
	f	Ledx;	d	COLLISION_SHAPE
	f	Ledx;	e	OUTLINE_SHAPE
c	cps	net/minecraft/world/level/block/CakeBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lcmj;Lgt;Ldbq;Lbym;)Lbdy;	a	eat
		p	0		world
		p	1		pos
		p	2		state
		p	3		player
	m	(Ldbq;Lclo;Lgt;Ldxa;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lcmi;Lgt;)I	a	getAnalogOutputSignal
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lcmi;Lgt;Lbym;Lbdx;Leda;)Lbdy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldbq;Lcml;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(I)I	b	getOutputSignal
		p	0		bites
	m	(Ldbq;)Z	d_	hasAnalogOutputSignal
		p	1		state
	f	I	a	MAX_BITES
	f	Ldcr;	b	BITES
	f	I	c	FULL_CAKE_SIGNAL
	f	F	d	AABB_OFFSET
	f	F	e	AABB_SIZE_PER_BITE
	f	[Ledx;	f	SHAPE_BY_BITE
c	cpt	net/minecraft/world/level/block/CampfireBlock
	m	(ZILdbp$d;)V	<init>	<init>
		p	1		emitsParticles
		p	2		fireDamage
		p	3		settings
	m	(Lbfh;Lcmj;Lgt;Ldbq;)V	a	dowse
		p	0		entity
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcic;)Ldbq;	a	getStateForPlacement
		p	1		ctx
	m	(Lcmi;Ldbq;Lczg;)Lczf;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Lcmi;Ldbq;Leda;Lbze;)V	a	onProjectileHit
		p	1		world
		p	2		state
		p	3		hit
		p	4		projectile
	m	(Lcmi;Lgt;)Z	a	isSmokeyPos
		p	0		world
		p	1		pos
	m	(Lcmi;Lgt;ZZ)V	a	makeParticles
		p	0		world
		p	1		pos
		p	2		isSignal
		p	3		lotsOfSmoke
	m	(Lcmj;Lgt;Ldbq;Ldwj;)Z	a	placeLiquid
		p	1		world
		p	2		pos
		p	3		state
		p	4		fluidState
	m	(Ldbp$a;)Z	a	lambda$canLight$0
		p	0		state
	m	(Ldbq;Lclo;Lgt;Ldxa;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lcmi;Lgt;Lapo;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Lcmi;Lgt;Lbfh;)V	a	entityInside
		p	1		state
		p	2		world
		p	3		pos
		p	4		entity
	m	(Ldbq;Lcmi;Lgt;Lbym;Lbdx;Leda;)Lbdy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldbq;Lcmi;Lgt;Ldbq;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Ldbq;Lcua;)Ldbq;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldbq;Lcvq;)Ldbq;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lgt;Ldbq;)Lcze;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Ldbq;)Lcvj;	b_	getRenderShape
		p	1		state
	m	(Ldbq;)Ldwj;	c_	getFluidState
		p	1		state
	m	(Ldbq;)Z	g	isLitCampfire
		p	0		state
	m	(Ldbq;)Z	h	canLight
		p	0		state
	m	(Ldbq;)Z	n	isSmokeSource
		p	1		state
	f	Ledx;	a	SHAPE
	f	Ldci;	b	LIT
	f	Ldci;	c	SIGNAL_FIRE
	f	Ldci;	d	WATERLOGGED
	f	Ldcl;	e	FACING
	f	Ledx;	f	VIRTUAL_FENCE_POST
	f	I	g	SMOKE_DISTANCE
	f	Z	h	spawnParticles
	f	I	i	fireDamage
c	cpu	net/minecraft/world/level/block/CandleBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lcic;)Ldbq;	a	getStateForPlacement
		p	1		ctx
	m	(Lcmj;Lgt;Ldbq;Ldwj;)Z	a	placeLiquid
		p	1		world
		p	2		pos
		p	3		state
		p	4		fluidState
	m	(Ldbp$a;)Z	a	lambda$canLight$2
		p	0		state
	m	(Ldbq;)Ljava/lang/Iterable;	a	getParticleOffsets
		p	1		state
	m	(Ldbq;Lcic;)Z	a	canBeReplaced
		p	1		state
		p	2		context
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lcmi;Lgt;Lbym;Lbdx;Leda;)Lbdy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldbq;Lcml;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldbq;)Z	c	canBeLit
		p	1		state
	m	(Ldbq;)Ldwj;	c_	getFluidState
		p	1		state
	m	()Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	g	lambda$static$1
	m	(Ldbq;)Z	g	canLight
		p	0		state
	m	(Ldbq;)I	h	lambda$static$0
		p	0		state
	f	I	c	MIN_CANDLES
	f	I	d	MAX_CANDLES
	f	Ldcr;	e	CANDLES
	f	Ldci;	f	LIT
	f	Ldci;	g	WATERLOGGED
	f	Ljava/util/function/ToIntFunction;	h	LIGHT_EMISSION
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	i	PARTICLE_OFFSETS
	f	Ledx;	j	ONE_AABB
	f	Ledx;	k	TWO_AABB
	f	Ledx;	l	THREE_AABB
	f	Ledx;	m	FOUR_AABB
c	cpv	net/minecraft/world/level/block/CandleCakeBlock
	m	(Lcpi;Ldbp$d;)V	<init>	<init>
		p	1		candle
		p	2		settings
	m	(Lclo;Lgt;Ldbq;)Lcfv;	a	getCloneItemStack
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcpi;)Ldbq;	a	byCandle
		p	0		candle
	m	(Ldbq;)Ljava/lang/Iterable;	a	getParticleOffsets
		p	1		state
	m	(Ldbq;Lclo;Lgt;Ldxa;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lcmi;Lgt;)I	a	getAnalogOutputSignal
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lcmi;Lgt;Lbym;Lbdx;Leda;)Lbdy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldbq;Lcml;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Ldbp$a;)Z	a	lambda$canLight$0
		p	1		state
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Leda;)Z	a	candleHit
		p	0		hitResult
	m	(Ldbq;)Z	d_	hasAnalogOutputSignal
		p	1		state
	m	(Ldbq;)Z	g	canLight
		p	0		state
	f	Ldci;	c	LIT
	f	F	d	AABB_OFFSET
	f	Ledx;	e	CAKE_SHAPE
	f	Ledx;	f	CANDLE_SHAPE
	f	Ledx;	g	SHAPE
	f	Ljava/util/Map;	h	BY_CANDLE
	f	Ljava/lang/Iterable;	i	PARTICLE_OFFSETS
c	cpw	net/minecraft/world/level/block/CarpetBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lcml;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	f	Ledx;	a	SHAPE
c	cpx	net/minecraft/world/level/block/CarrotBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	()Lcmh;	d	getBaseSeedId
	f	[Ledx;	a	SHAPE_BY_AGE
c	cpy	net/minecraft/world/level/block/CartographyTableBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lcmi;Lgt;ILbyl;Lbym;)Lcbd;	a	lambda$getMenuProvider$0
		p	2		syncId
		p	3		inventory
		p	4		player
	m	(Ldbq;Lcmi;Lgt;Lbym;Lbdx;Leda;)Lbdy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldbq;Lcmi;Lgt;)Lbeb;	b	getMenuProvider
		p	1		state
		p	2		world
		p	3		pos
	f	Ltj;	a	CONTAINER_TITLE
c	cpz	net/minecraft/world/level/block/CarvedPumpkinBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lcic;)Ldbq;	a	getStateForPlacement
		p	1		ctx
	m	(Lcmi;Ldbv$b;)V	a	clearPatternBlocks
		p	0		world
		p	1		patternResult
	m	(Lcmi;Ldbv$b;Lbfh;Lgt;)V	a	spawnGolemInWorld
		p	0		world
		p	1		patternResult
		p	2		entity
		p	3		pos
	m	(Lcmi;Lgt;)V	a	trySpawnGolem
		p	1		world
		p	2		pos
	m	(Lcml;Lgt;)Z	a	canSpawnGolem
		p	1		world
		p	2		pos
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	()Ldbv;	b	getOrCreateSnowGolemBase
	m	(Lcmi;Ldbv$b;)V	b	updatePatternBlocks
		p	0		world
		p	1		patternResult
	m	(Ldbq;Lcmi;Lgt;Ldbq;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	m	()Lbfm;	g	getEquipmentSlot
	m	(Ldbq;)Z	h	lambda$static$0
		p	0		state
	m	()Ldbv;	v	getOrCreateSnowGolemFull
	m	()Ldbv;	w	getOrCreateIronGolemBase
	m	()Ldbv;	x	getOrCreateIronGolemFull
	f	Ldcl;	a	FACING
	f	Ldbv;	b	snowGolemBase
	f	Ldbv;	c	snowGolemFull
	f	Ldbv;	d	ironGolemBase
	f	Ldbv;	e	ironGolemFull
	f	Ljava/util/function/Predicate;	f	PUMPKINS_PREDICATE
c	cqa	net/minecraft/world/level/block/CauldronBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lcmi;Lcnf$c;)Z	a	shouldHandlePrecipitation
		p	0		world
		p	1		precipitation
	m	(Ldbq;Lcmi;Lgt;Lcnf$c;)V	a	handlePrecipitation
		p	1		state
		p	2		world
		p	3		pos
		p	4		precipitation
	m	(Ldbq;Lcmi;Lgt;Ldwi;)V	a	receiveStalactiteDrip
		p	1		state
		p	2		world
		p	3		pos
		p	4		fluid
	m	(Ldwi;)Z	a	canReceiveStalactiteDrip
		p	1		fluid
	m	(Ldbq;)Z	c	isFull
		p	1		state
	f	F	c	RAIN_FILL_CHANCE
	f	F	d	POWDER_SNOW_FILL_CHANCE
c	cqb	net/minecraft/world/level/block/CaveVines
	m	(ILdbq;)I	a	lambda$emission$0
		p	1		state
	m	(Lbfh;Ldbq;Lcmi;Lgt;)Lbdy;	a	use
		p	0		picker
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;)Z	a	hasGlowBerries
		p	0		state
	m	(I)Ljava/util/function/ToIntFunction;	h_	emission
		p	0		luminance
	f	Ledx;	p_	SHAPE
	f	Ldci;	q_	BERRIES
c	cqc	net/minecraft/world/level/block/CaveVinesBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Laip;Lapo;Lgt;Ldbq;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lapo;)I	a	getBlocksToGrowWhenBonemealed
		p	1		random
	m	(Lclo;Lgt;Ldbq;)Lcfv;	a	getCloneItemStack
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcmi;Lapo;Lgt;Ldbq;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcml;Lgt;Ldbq;Z)Z	a	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
		p	4		isClient
	m	(Ldbq;Lapo;)Ldbq;	a	getGrowIntoState
		p	1		state
		p	2		random
	m	(Ldbq;Lcmi;Lgt;Lbym;Lbdx;Leda;)Lbdy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldbq;Ldbq;)Ldbq;	a	updateBodyAfterConvertedFromHead
		p	1		from
		p	2		to
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	()Lcpi;	b	getBodyBlock
	m	(Ldbq;)Z	g	canGrowInto
		p	1		state
	f	F	f	CHANCE_OF_BERRIES_ON_GROWTH
c	cqd	net/minecraft/world/level/block/CaveVinesPlantBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Laip;Lapo;Lgt;Ldbq;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lclo;Lgt;Ldbq;)Lcfv;	a	getCloneItemStack
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcmi;Lapo;Lgt;Ldbq;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcml;Lgt;Ldbq;Z)Z	a	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
		p	4		isClient
	m	(Ldbq;Lcmi;Lgt;Lbym;Lbdx;Leda;)Lbdy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldbq;Ldbq;)Ldbq;	a	updateHeadAfterConvertedFromBody
		p	1		from
		p	2		to
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	()Lcss;	c	getHeadBlock
c	cqe	net/minecraft/world/level/block/CeilingHangingSignBlock
	m	(Ldbp$d;Ldde;)V	<init>	<init>
		p	1		settings
		p	2		type
	m	(Lcic;)Ldbq;	a	getStateForPlacement
		p	1		ctx
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lcmi;Lgt;Lbym;Lbdx;Leda;)Lbdy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldbq;Lcml;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lcua;)Ldbq;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldbq;Lcvq;)Ldbq;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lgt;Ldbq;)Lcze;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Ldbq;Lclo;Lgt;)Ledx;	b_	getBlockSupportShape
		p	1		state
		p	2		world
		p	3		pos
	f	Ldcr;	a	ROTATION
	f	Ldci;	b	ATTACHED
	f	F	c	AABB_OFFSET
	f	Ledx;	d	SHAPE
	f	Ljava/util/Map;	h	AABBS
c	cqf	net/minecraft/world/level/block/ChainBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lcic;)Ldbq;	a	getStateForPlacement
		p	1		ctx
	m	(Ldbq;Lclo;Lgt;Ldxa;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldbq;)Ldwj;	c_	getFluidState
		p	1		state
	f	Ldci;	a	WATERLOGGED
	f	F	b	AABB_MIN
	f	F	c	AABB_MAX
	f	Ledx;	d	Y_AXIS_AABB
	f	Ledx;	e	Z_AXIS_AABB
	f	Ledx;	f	X_AXIS_AABB
c	cqf$1	net/minecraft/world/level/block/ChainBlock$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction$Axis
c	cqg	net/minecraft/world/level/block/ChangeOverTimeBlock
	m	()F	a	getChanceModifier
	m	(Laip;Lgt;Ldbq;)V	a	lambda$applyChangeOverTime$0
		p	2		state
	m	(Ldbq;)Ljava/util/Optional;	a	getNext
		p	1		state
	m	(Ldbq;Laip;Lgt;Lapo;)V	a_	onRandomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	()Ljava/lang/Enum;	b	getAge
	m	(Ldbq;Laip;Lgt;Lapo;)V	c	applyChangeOverTime
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	f	I	u_	SCAN_DISTANCE
c	cqh	net/minecraft/world/level/block/CherryLeavesBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Ldbq;Lcmi;Lgt;Lapo;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
c	cqi	net/minecraft/world/level/block/ChestBlock
	m	(Ldbp$d;Ljava/util/function/Supplier;)V	<init>	<init>
		p	1		settings
		p	2		entityTypeSupplier
	m	(Lcic;)Ldbq;	a	getStateForPlacement
		p	1		ctx
	m	(Lcic;Lgz;)Lgz;	a	candidatePartnerFacing
		p	1		ctx
		p	2		dir
	m	(Lclo;Lgt;)Z	a	isBlockedChestByBlock
		p	0		world
		p	1		pos
	m	(Lcmi;Ldbq;Lczg;)Lczf;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Lcmi;Lgt;Ldbq;Lbfx;Lcfv;)V	a	setPlacedBy
		p	1		world
		p	2		pos
		p	3		state
		p	4		placer
		p	5		itemStack
	m	(Lcmj;Lgt;)Z	a	isChestBlockedAt
		p	0		world
		p	1		pos
	m	(Lcqi;Ldbq;Lcmi;Lgt;Z)Lbdr;	a	getContainer
		p	0		block
		p	1		state
		p	2		world
		p	3		pos
		p	4		ignoreBlocked
	m	(Ldae;)Lcrj$b;	a	opennessCombiner
		p	0		progress
	m	(Ldbq;Laip;Lgt;Lapo;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Lclo;Lgt;Ldxa;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lcmi;Lgt;)I	a	getAnalogOutputSignal
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lcmi;Lgt;Lbym;Lbdx;Leda;)Lbdy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldbq;Lcmi;Lgt;Ldbq;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Ldbq;Lcmi;Lgt;Z)Lcrj$c;	a	combine
		p	1		state
		p	2		world
		p	3		pos
		p	4		ignoreBlocked
	m	(Ldbq;Lcua;)Ldbq;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldbq;Lcvq;)Ldbq;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lgt;Ldbq;)Lcze;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Lcmj;Lgt;)Z	b	isCatSittingOnChest
		p	0		world
		p	1		pos
	m	(Ldbq;Lcmi;Lgt;)Lbeb;	b	getMenuProvider
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;)Lcvj;	b_	getRenderShape
		p	1		state
	m	()Lamy;	c	getOpenChestStat
	m	(Lcmj;Lgt;)Z	c	lambda$combine$0
		p	0		world
		p	1		pos
	m	(Ldbq;)Ldwj;	c_	getFluidState
		p	1		state
	m	()Lczg;	d	blockEntityType
	m	(Ldbq;)Z	d_	hasAnalogOutputSignal
		p	1		state
	m	(Ldbq;)Lcrj$a;	g	getBlockType
		p	0		state
	m	(Ldbq;)Lgz;	h	getConnectedDirection
		p	0		state
	f	Ldcl;	b	FACING
	f	Ldcp;	c	TYPE
	f	Ldci;	d	WATERLOGGED
	f	I	e	EVENT_SET_OPEN_COUNT
	f	I	f	AABB_OFFSET
	f	I	g	AABB_HEIGHT
	f	Ledx;	h	NORTH_AABB
	f	Ledx;	i	SOUTH_AABB
	f	Ledx;	j	WEST_AABB
	f	Ledx;	k	EAST_AABB
	f	Ledx;	l	AABB
	f	Lcrj$b;	m	CHEST_COMBINER
	f	Lcrj$b;	n	MENU_PROVIDER_COMBINER
c	cqi$1	net/minecraft/world/level/block/ChestBlock$1
	m	()Ljava/util/Optional;	a	acceptNone
	m	(Lczj;)Ljava/util/Optional;	a	acceptSingle
		p	1		single
	m	(Lczj;Lczj;)Ljava/util/Optional;	a	acceptDouble
		p	1		first
		p	2		second
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	acceptSingle
		p	1		single
	m	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;	a	acceptDouble
		p	1		first
		p	2		second
	m	()Ljava/lang/Object;	b	acceptNone
c	cqi$2	net/minecraft/world/level/block/ChestBlock$2
	m	()Ljava/util/Optional;	a	acceptNone
	m	(Lczj;)Ljava/util/Optional;	a	acceptSingle
		p	1		single
	m	(Lczj;Lczj;)Ljava/util/Optional;	a	acceptDouble
		p	1		first
		p	2		second
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	acceptSingle
		p	1		single
	m	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;	a	acceptDouble
		p	1		first
		p	2		second
	m	()Ljava/lang/Object;	b	acceptNone
c	cqi$2$1	net/minecraft/world/level/block/ChestBlock$2$1
	m	()Ltj;	G_	getDisplayName
	m	(ILbyl;Lbym;)Lcbd;	createMenu	createMenu
		p	1		syncId
		p	2		playerInventory
		p	3		player
	f	Lczj;	a	val$first
	f	Lczj;	b	val$second
	f	Lbdr;	c	val$container
	f	Lcqi$2;	d	this$0
c	cqi$3	net/minecraft/world/level/block/ChestBlock$3
	m	()Lit/unimi/dsi/fastutil/floats/Float2FloatFunction;	a	acceptNone
	m	(Lczj;)Lit/unimi/dsi/fastutil/floats/Float2FloatFunction;	a	acceptSingle
		p	1		single
	m	(Lczj;Lczj;)Lit/unimi/dsi/fastutil/floats/Float2FloatFunction;	a	acceptDouble
		p	1		first
		p	2		second
	m	(Lczj;Lczj;F)F	a	lambda$acceptDouble$0
		p	2		tickDelta
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	acceptSingle
		p	1		single
	m	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;	a	acceptDouble
		p	1		first
		p	2		second
	m	()Ljava/lang/Object;	b	acceptNone
	f	Ldae;	a	val$entity
c	cqi$4	net/minecraft/world/level/block/ChestBlock$4
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	cqj	net/minecraft/world/level/block/ChiseledBookShelfBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(F)I	a	getSection
		p	0		x
	m	(Lcic;)Ldbq;	a	getStateForPlacement
		p	1		ctx
	m	(Lcmi;Lgt;Lbym;Lczl;I)V	a	removeBook
		p	0		world
		p	1		pos
		p	2		player
		p	3		blockEntity
		p	4		slot
	m	(Lcmi;Lgt;Lbym;Lczl;Lcfv;I)V	a	addBook
		p	0		world
		p	1		pos
		p	2		player
		p	3		blockEntity
		p	4		stack
		p	5		slot
	m	(Ldbq;Lcmi;Lgt;)I	a	getAnalogOutputSignal
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lcmi;Lgt;Lbym;Lbdx;Leda;)Lbdy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldbq;Lcmi;Lgt;Ldbq;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldbr$a;Ldcu;)V	a	lambda$createBlockStateDefinition$0
		p	1		property
	m	(Leda;Lgz;)Ljava/util/Optional;	a	getRelativeHitCoordinatesForBlockFace
		p	0		hit
		p	1		facing
	m	(Ledd;)I	a	getHitSlot
		p	0		hitPos
	m	(Lgt;Ldbq;)Lcze;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Ldbq;)Lcvj;	b_	getRenderShape
		p	1		state
	m	(Ldbq;)Z	d_	hasAnalogOutputSignal
		p	1		state
	f	I	a	BOOKS_PER_ROW
	f	Ljava/util/List;	b	SLOT_OCCUPIED_PROPERTIES
	f	I	c	MAX_BOOKS_IN_STORAGE
c	cqj$1	net/minecraft/world/level/block/ChiseledBookShelfBlock$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	cqk	net/minecraft/world/level/block/ChorusFlowerBlock
	m	(Lcql;Ldbp$d;)V	<init>	<init>
		p	1		plantBlock
		p	2		settings
	m	(Lcmi;Ldbq;Leda;Lbze;)V	a	onProjectileHit
		p	1		world
		p	2		state
		p	3		hit
		p	4		projectile
	m	(Lcmi;Lgt;)V	a	placeDeadFlower
		p	1		world
		p	2		pos
	m	(Lcmi;Lgt;I)V	a	placeGrownFlower
		p	1		world
		p	2		pos
		p	3		age
	m	(Lcmj;Lgt;Lapo;I)V	a	generatePlant
		p	0		world
		p	1		pos
		p	2		random
		p	3		size
	m	(Lcmj;Lgt;Lapo;Lgt;II)V	a	growTreeRecursive
		p	0		world
		p	1		pos
		p	2		random
		p	3		rootPos
		p	4		size
		p	5		layer
	m	(Ldbq;Laip;Lgt;Lapo;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Lcml;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lcml;Lgt;Lgz;)Z	b	allNeighborsEmpty
		p	0		world
		p	1		pos
		p	2		exceptDirection
	m	(Ldbq;Laip;Lgt;Lapo;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;)Z	e_	isRandomlyTicking
		p	1		state
	f	I	a	DEAD_AGE
	f	Ldcr;	b	AGE
	f	Lcql;	c	plant
c	cql	net/minecraft/world/level/block/ChorusPlantBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lcic;)Ldbq;	a	getStateForPlacement
		p	1		ctx
	m	(Lclo;Lgt;)Ldbq;	a	getStateForPlacement
		p	1		world
		p	2		pos
	m	(Ldbq;Laip;Lgt;Lapo;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Lclo;Lgt;Ldxa;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldbq;Lcml;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
c	cqm	net/minecraft/world/level/block/CocoaBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Laip;Lapo;Lgt;Ldbq;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcic;)Ldbq;	a	getStateForPlacement
		p	1		ctx
	m	(Lcmi;Lapo;Lgt;Ldbq;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcml;Lgt;Ldbq;Z)Z	a	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
		p	4		isClient
	m	(Ldbq;Lclo;Lgt;Ldxa;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lcml;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldbq;Laip;Lgt;Lapo;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;)Z	e_	isRandomlyTicking
		p	1		state
	f	[Ledx;	E	SOUTH_AABB
	f	I	a	MAX_AGE
	f	Ldcr;	b	AGE
	f	I	c	AGE_0_WIDTH
	f	I	d	AGE_0_HEIGHT
	f	I	e	AGE_0_HALFWIDTH
	f	I	f	AGE_1_WIDTH
	f	I	g	AGE_1_HEIGHT
	f	I	h	AGE_1_HALFWIDTH
	f	I	i	AGE_2_WIDTH
	f	I	j	AGE_2_HEIGHT
	f	I	k	AGE_2_HALFWIDTH
	f	[Ledx;	l	EAST_AABB
	f	[Ledx;	m	WEST_AABB
	f	[Ledx;	n	NORTH_AABB
c	cqm$1	net/minecraft/world/level/block/CocoaBlock$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	cqn	net/minecraft/world/level/block/CommandBlock
	m	(Ldbp$d;Z)V	<init>	<init>
		p	1		settings
		p	2		auto
	m	(Lcic;)Ldbq;	a	getStateForPlacement
		p	1		ctx
	m	(Lcmi;Lgt;Ldbq;Lbfx;Lcfv;)V	a	setPlacedBy
		p	1		world
		p	2		pos
		p	3		state
		p	4		placer
		p	5		itemStack
	m	(Lcmi;Lgt;Lgz;)V	a	executeChain
		p	0		world
		p	1		pos
		p	2		facing
	m	(Ldbq;Laip;Lgt;Lapo;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Lcmi;Lgt;)I	a	getAnalogOutputSignal
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lcmi;Lgt;Lbym;Lbdx;Leda;)Lbdy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldbq;Lcmi;Lgt;Lclj;Z)V	a	execute
		p	1		state
		p	2		world
		p	3		pos
		p	4		executor
		p	5		hasCommand
	m	(Ldbq;Lcmi;Lgt;Lcpi;Lgt;Z)V	a	neighborChanged
		p	1		state
		p	2		world
		p	3		pos
		p	4		sourceBlock
		p	5		sourcePos
		p	6		notify
	m	(Ldbq;Lcua;)Ldbq;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldbq;Lcvq;)Ldbq;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lgt;Ldbq;)Lcze;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Ldbq;)Lcvj;	b_	getRenderShape
		p	1		state
	m	(Ldbq;)Z	d_	hasAnalogOutputSignal
		p	1		state
	f	Ldcl;	a	FACING
	f	Ldci;	b	CONDITIONAL
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	Z	d	automatic
c	cqo	net/minecraft/world/level/block/ComparatorBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lcmi;Lgt;Ldbq;)Z	a	shouldTurnOn
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcmi;Lgz;Lgt;)Lbuy;	a	getItemFrame
		p	1		world
		p	2		facing
		p	3		pos
	m	(Ldbq;Laip;Lgt;Lapo;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Lcmi;Lgt;II)Z	a	triggerEvent
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
		p	5		data
	m	(Ldbq;Lcmi;Lgt;Lbym;Lbdx;Leda;)Lbdy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lgt;Ldbq;)Lcze;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Lgz;Lbuy;)Z	a	lambda$getItemFrame$0
		p	1		itemFrame
	m	(Lclo;Lgt;Ldbq;)I	b	getOutputSignal
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcmi;Lgt;Ldbq;)I	b	getInputSignal
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcmi;Lgt;Ldbq;)V	c	checkTickOnNeighbor
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcmi;Lgt;Ldbq;)I	e	calculateOutputSignal
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcmi;Lgt;Ldbq;)V	f	refreshOutputState
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldbq;)I	g	getDelay
		p	1		state
	f	Ldcp;	a	MODE
c	cqp	net/minecraft/world/level/block/ComposterBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(FLcmh;)V	a	add
		p	0		levelIncreaseChance
		p	1		item
	m	(Lbfh;Ldbq;Laip;Lcfv;Lgt;)Ldbq;	a	insertItem
		p	0		user
		p	1		state
		p	2		world
		p	3		stack
		p	4		pos
	m	(Lbfh;Ldbq;Lcmi;Lgt;)Ldbq;	a	extractProduce
		p	0		user
		p	1		state
		p	2		world
		p	3		pos
	m	(Lbfh;Ldbq;Lcmj;Lgt;)Ldbq;	a	empty
		p	0		user
		p	1		state
		p	2		world
		p	3		pos
	m	(Lbfh;Ldbq;Lcmj;Lgt;Lcfv;)Ldbq;	a	addItem
		p	0		user
		p	1		state
		p	2		world
		p	3		pos
		p	4		stack
	m	(Lcmi;Lgt;Z)V	a	handleFill
		p	0		world
		p	1		pos
		p	2		fill
	m	(Ldbq;Laip;Lgt;Lapo;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Lclo;Lgt;)Ledx;	a	getInteractionShape
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lclo;Lgt;Ldxa;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lcmi;Lgt;)I	a	getAnalogOutputSignal
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lcmi;Lgt;Lbym;Lbdx;Leda;)Lbdy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldbq;Lcmj;Lgt;)Lbef;	a	getContainer
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	([Ledx;)V	a	lambda$static$0
		p	0		shapes
	m	()V	b	bootStrap
	m	(Ldbq;Lcmi;Lgt;Ldbq;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	c	getCollisionShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;)Z	d_	hasAnalogOutputSignal
		p	1		state
	f	I	a	READY
	f	I	b	MIN_LEVEL
	f	I	c	MAX_LEVEL
	f	Ldcr;	d	LEVEL
	f	Lit/unimi/dsi/fastutil/objects/Object2FloatMap;	e	COMPOSTABLES
	f	I	f	AABB_SIDE_THICKNESS
	f	Ledx;	g	OUTER_SHAPE
	f	[Ledx;	h	SHAPES
c	cqp$a	net/minecraft/world/level/block/ComposterBlock$EmptyContainer
	m	(ILcfv;Lgz;)Z	a	canPlaceItemThroughFace
		p	1		slot
		p	2		stack
		p	3		dir
	m	(Lgz;)[I	a	getSlotsForFace
		p	1		side
	m	(ILcfv;Lgz;)Z	b	canTakeItemThroughFace
		p	1		slot
		p	2		stack
		p	3		dir
c	cqp$b	net/minecraft/world/level/block/ComposterBlock$InputContainer
	m	(Ldbq;Lcmj;Lgt;)V	<init>	<init>
		p	1		state
		p	2		world
		p	3		pos
	m	(ILcfv;Lgz;)Z	a	canPlaceItemThroughFace
		p	1		slot
		p	2		stack
		p	3		dir
	m	(Lgz;)[I	a	getSlotsForFace
		p	1		side
	m	()I	ab_	getMaxStackSize
	m	(ILcfv;Lgz;)Z	b	canTakeItemThroughFace
		p	1		slot
		p	2		stack
		p	3		dir
	m	()V	e	setChanged
	f	Ldbq;	c	state
	f	Lcmj;	d	level
	f	Lgt;	e	pos
	f	Z	f	changed
c	cqp$c	net/minecraft/world/level/block/ComposterBlock$OutputContainer
	m	(Ldbq;Lcmj;Lgt;Lcfv;)V	<init>	<init>
		p	1		state
		p	2		world
		p	3		pos
		p	4		outputItem
	m	(ILcfv;Lgz;)Z	a	canPlaceItemThroughFace
		p	1		slot
		p	2		stack
		p	3		dir
	m	(Lgz;)[I	a	getSlotsForFace
		p	1		side
	m	()I	ab_	getMaxStackSize
	m	(ILcfv;Lgz;)Z	b	canTakeItemThroughFace
		p	1		slot
		p	2		stack
		p	3		dir
	m	()V	e	setChanged
	f	Ldbq;	c	state
	f	Lcmj;	d	level
	f	Lgt;	e	pos
	f	Z	f	changed
c	cqq	net/minecraft/world/level/block/ConcretePowderBlock
	m	(Lcpi;Ldbp$d;)V	<init>	<init>
		p	1		hardened
		p	2		settings
	m	(Lcic;)Ldbq;	a	getStateForPlacement
		p	1		ctx
	m	(Lclo;Lgt;)Z	a	touchesLiquid
		p	0		world
		p	1		pos
	m	(Lcmi;Lgt;Ldbq;Ldbq;Lbve;)V	a	onLand
		p	1		world
		p	2		pos
		p	3		fallingBlockState
		p	4		currentStateInPos
		p	5		fallingBlockEntity
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lclo;Lgt;Ldbq;)Z	b	shouldSolidify
		p	0		world
		p	1		pos
		p	2		state
	m	(Ldbq;Lclo;Lgt;)I	d	getDustColor
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;)Z	n	canSolidify
		p	0		state
	f	Ldbq;	a	concrete
c	cqr	net/minecraft/world/level/block/ConduitBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lcic;)Ldbq;	a	getStateForPlacement
		p	1		ctx
	m	(Lcmi;Ldbq;Lczg;)Lczf;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Lcmi;Lgt;Ldbq;Lbfx;Lcfv;)V	a	setPlacedBy
		p	1		world
		p	2		pos
		p	3		state
		p	4		placer
		p	5		itemStack
	m	(Ldbq;Lclo;Lgt;Ldxa;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lgt;Ldbq;)Lcze;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Ldbq;)Lcvj;	b_	getRenderShape
		p	1		state
	m	(Ldbq;)Ldwj;	c_	getFluidState
		p	1		state
	f	Ldci;	a	WATERLOGGED
	f	Ledx;	b	SHAPE
	f	I	c	SIZE
c	cqs	net/minecraft/world/level/block/CoralBlock
	m	(Lcpi;Ldbp$d;)V	<init>	<init>
		p	1		deadCoralBlock
		p	2		settings
	m	(Lcic;)Ldbq;	a	getStateForPlacement
		p	1		ctx
	m	(Lclo;Lgt;)Z	a	scanForWater
		p	1		world
		p	2		pos
	m	(Ldbq;Laip;Lgt;Lapo;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	f	Lcpi;	a	deadBlock
c	cqt	net/minecraft/world/level/block/CoralFanBlock
	m	(Lcpi;Ldbp$d;)V	<init>	<init>
		p	1		deadCoralBlock
		p	2		settings
	m	(Ldbq;Laip;Lgt;Lapo;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldbq;Lcmi;Lgt;Ldbq;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	f	Lcpi;	a	deadBlock
c	cqu	net/minecraft/world/level/block/CoralPlantBlock
	m	(Lcpi;Ldbp$d;)V	<init>	<init>
		p	1		deadCoralBlock
		p	2		settings
	m	(Ldbq;Laip;Lgt;Lapo;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldbq;Lcmi;Lgt;Ldbq;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	f	F	a	AABB_OFFSET
	f	Ledx;	b	SHAPE
	f	Lcpi;	d	deadBlock
c	cqv	net/minecraft/world/level/block/CoralWallFanBlock
	m	(Lcpi;Ldbp$d;)V	<init>	<init>
		p	1		deadCoralBlock
		p	2		settings
	m	(Ldbq;Laip;Lgt;Lapo;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldbq;Lcmi;Lgt;Ldbq;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	f	Lcpi;	b	deadBlock
c	cqw	net/minecraft/world/level/block/CraftingTableBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lcmi;Lgt;ILbyl;Lbym;)Lcbd;	a	lambda$getMenuProvider$0
		p	2		syncId
		p	3		inventory
		p	4		player
	m	(Ldbq;Lcmi;Lgt;Lbym;Lbdx;Leda;)Lbdy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldbq;Lcmi;Lgt;)Lbeb;	b	getMenuProvider
		p	1		state
		p	2		world
		p	3		pos
	f	Ltj;	a	CONTAINER_TITLE
c	cqx	net/minecraft/world/level/block/CropBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Laip;Lapo;Lgt;Ldbq;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lclo;Lgt;Ldbq;)Lcfv;	a	getCloneItemStack
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcmi;)I	a	getBonemealAgeIncrease
		p	1		world
	m	(Lcmi;Lapo;Lgt;Ldbq;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcmi;Lgt;Ldbq;)V	a	growCrops
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcml;Lgt;Ldbq;Z)Z	a	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
		p	4		isClient
	m	(Lcpi;Lclo;Lgt;)F	a	getGrowthSpeed
		p	0		block
		p	1		world
		p	2		pos
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lcmi;Lgt;Lbfh;)V	a	entityInside
		p	1		state
		p	2		world
		p	3		pos
		p	4		entity
	m	(Ldbq;Lcml;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	()Ldcr;	b	getAgeProperty
	m	(I)Ldbq;	b	getStateForAge
		p	1		age
	m	(Ldbq;Laip;Lgt;Lapo;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	()I	c	getMaxAge
	m	()Lcmh;	d	getBaseSeedId
	m	(Ldbq;Lclo;Lgt;)Z	d	mayPlaceOn
		p	1		floor
		p	2		world
		p	3		pos
	m	(Ldbq;)Z	e_	isRandomlyTicking
		p	1		state
	m	(Ldbq;)I	g	getAge
		p	1		state
	m	(Ldbq;)Z	h	isMaxAge
		p	1		state
	f	[Ledx;	a	SHAPE_BY_AGE
	f	I	c	MAX_AGE
	f	Ldcr;	d	AGE
c	cqy	net/minecraft/world/level/block/CrossCollisionBlock
	m	(FFFFFLdbp$d;)V	<init>	<init>
		p	1		radius1
		p	2		radius2
		p	3		boundingHeight1
		p	4		boundingHeight2
		p	5		collisionHeight
		p	6		settings
	m	(FFFFF)[Ledx;	a	makeShapes
		p	1		radius1
		p	2		radius2
		p	3		height1
		p	4		offset2
		p	5		height2
	m	(Ldbq;Lclo;Lgt;Ldxa;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lcua;)Ldbq;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldbq;Lcvq;)Ldbq;	a	rotate
		p	1		state
		p	2		rotation
	m	(Lgz;)I	a	indexFor
		p	0		dir
	m	(Ljava/util/Map$Entry;)Z	a	lambda$static$0
		p	0		entry
	m	(Ldbq;Lclo;Lgt;)Z	c	propagatesSkylightDown
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	c	getCollisionShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;)Ldwj;	c_	getFluidState
		p	1		state
	m	(Ldbq;)I	g	getAABBIndex
		p	1		state
	m	(Ldbq;)I	h	lambda$getAABBIndex$1
		p	0		state
	f	Ldci;	a	NORTH
	f	Ldci;	b	EAST
	f	Ldci;	c	SOUTH
	f	Ldci;	d	WEST
	f	Ldci;	e	WATERLOGGED
	f	Ljava/util/Map;	f	PROPERTY_BY_DIRECTION
	f	[Ledx;	g	collisionShapeByIndex
	f	[Ledx;	h	shapeByIndex
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	i	stateToIndex
c	cqy$1	net/minecraft/world/level/block/CrossCollisionBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$Rotation
	f	[I	b	$SwitchMap$net$minecraft$world$level$block$Mirror
c	cqz	net/minecraft/world/level/block/CryingObsidianBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Ldbq;Lcmi;Lgt;Lapo;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
c	cra	net/minecraft/world/level/block/DaylightDetectorBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lcmi;Ldbq;Lczg;)Lczf;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Lcmi;Lgt;Ldbq;Lczq;)V	a	tickEntity
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lclo;Lgt;Lgz;)I	a	getSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldbq;Lcmi;Lgt;Lbym;Lbdx;Leda;)Lbdy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lgt;Ldbq;)Lcze;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Ldbq;)Lcvj;	b_	getRenderShape
		p	1		state
	m	(Ldbq;Lcmi;Lgt;)V	d	updateSignalStrength
		p	0		state
		p	1		world
		p	2		pos
	m	(Ldbq;)Z	f_	isSignalSource
		p	1		state
	m	(Ldbq;)Z	g_	useShapeForLightOcclusion
		p	1		state
	f	Ldcr;	a	POWER
	f	Ldci;	b	INVERTED
	f	Ledx;	c	SHAPE
c	crb	net/minecraft/world/level/block/DeadBushBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lclo;Lgt;)Z	d	mayPlaceOn
		p	1		floor
		p	2		world
		p	3		pos
	f	F	a	AABB_OFFSET
	f	Ledx;	b	SHAPE
c	crc	net/minecraft/world/level/block/DecoratedPotBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lcic;)Ldbq;	a	getStateForPlacement
		p	1		ctx
	m	(Lcmi;Lgt;Ldbq;Lbym;)V	a	playerWillDestroy
		p	1		world
		p	2		pos
		p	3		state
		p	4		player
	m	(Ldbq;Lclo;Lgt;Ldxa;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lcmi;Lgt;Ldbq;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lgt;Ldbq;)Lcze;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Ldbq;)Ldwj;	c_	getFluidState
		p	1		state
	f	Ledx;	a	BOUNDING_BOX
	f	Ldcl;	b	HORIZONTAL_FACING
	f	Ldci;	c	WATERLOGGED
c	crd	net/minecraft/world/level/block/DetectorRailBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lbfh;)Z	a	lambda$getAnalogOutputSignal$1
		p	0		cart
	m	(Lcmi;Lgt;Ldbq;)V	a	checkPressed
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcmi;Lgt;Ljava/lang/Class;Ljava/util/function/Predicate;)Ljava/util/List;	a	getInteractingMinecartOfType
		p	1		world
		p	2		pos
		p	3		entityClass
		p	4		entityPredicate
	m	(Ldbq;Laip;Lgt;Lapo;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Lclo;Lgt;Lgz;)I	a	getSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldbq;Lcmi;Lgt;)I	a	getAnalogOutputSignal
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lcmi;Lgt;Lbfh;)V	a	entityInside
		p	1		state
		p	2		world
		p	3		pos
		p	4		entity
	m	(Ldbq;Lcua;)Ldbq;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldbq;Lcvq;)Ldbq;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lgt;)Lecz;	a	getSearchBB
		p	1		pos
	m	(Lbfh;)Z	b	lambda$checkPressed$0
		p	0		entity
	m	(Lcmi;Lgt;Ldbq;Z)V	b	updatePowerToConnected
		p	1		world
		p	2		pos
		p	3		state
		p	4		unpowering
	m	(Ldbq;Lclo;Lgt;Lgz;)I	b	getDirectSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldbq;Lcmi;Lgt;Ldbq;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	m	()Ldcu;	c	getShapeProperty
	m	(Ldbq;)Z	d_	hasAnalogOutputSignal
		p	1		state
	m	(Ldbq;)Z	f_	isSignalSource
		p	1		state
	f	Ldcp;	d	SHAPE
	f	Ldci;	e	POWERED
	f	I	f	PRESSED_CHECK_PERIOD
c	crd$1	net/minecraft/world/level/block/DetectorRailBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$state$properties$RailShape
	f	[I	b	$SwitchMap$net$minecraft$world$level$block$Rotation
	f	[I	c	$SwitchMap$net$minecraft$world$level$block$Mirror
c	cre	net/minecraft/world/level/block/DiodeBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lcic;)Ldbq;	a	getStateForPlacement
		p	1		ctx
	m	(Lcmi;Lgt;Ldbq;)Z	a	shouldTurnOn
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcmi;Lgt;Ldbq;Lbfx;Lcfv;)V	a	setPlacedBy
		p	1		world
		p	2		pos
		p	3		state
		p	4		placer
		p	5		itemStack
	m	(Lcml;Lgt;Ldbq;)Z	a	isLocked
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldbq;Laip;Lgt;Lapo;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lclo;Lgt;Lgz;)I	a	getSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldbq;Lcmi;Lgt;Lcpi;Lgt;Z)V	a	neighborChanged
		p	1		state
		p	2		world
		p	3		pos
		p	4		sourceBlock
		p	5		sourcePos
		p	6		notify
	m	(Ldbq;Lcmi;Lgt;Ldbq;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Ldbq;Lcml;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Lclo;Lgt;Ldbq;)I	b	getOutputSignal
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcmi;Lgt;Ldbq;)I	b	getInputSignal
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcml;Lgt;Ldbq;)I	b	getAlternateSignal
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcml;Lgt;Lgz;)I	b	getAlternateSignalAt
		p	1		world
		p	2		pos
		p	3		dir
	m	(Ldbq;Lclo;Lgt;Lgz;)I	b	getDirectSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldbq;Lcmi;Lgt;Ldbq;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	m	(Lclo;Lgt;Ldbq;)Z	c	shouldPrioritize
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcmi;Lgt;Ldbq;)V	c	checkTickOnNeighbor
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcmi;Lgt;Ldbq;)V	d	updateNeighborsInFront
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldbq;)Z	f_	isSignalSource
		p	1		state
	m	(Ldbq;)I	g	getDelay
		p	1		state
	m	(Ldbq;)Z	h	isAlternateInput
		p	1		state
	m	(Ldbq;)Z	n	isDiode
		p	0		state
	f	Ledx;	b	SHAPE
	f	Ldci;	c	POWERED
c	crf	net/minecraft/world/level/block/DirectionalBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	f	Ldcl;	a	FACING
c	crg	net/minecraft/world/level/block/DirtPathBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lcic;)Ldbq;	a	getStateForPlacement
		p	1		ctx
	m	(Ldbq;Laip;Lgt;Lapo;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Lclo;Lgt;Ldxa;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lcml;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldbq;)Z	g_	useShapeForLightOcclusion
		p	1		state
	f	Ledx;	a	SHAPE
c	crh	net/minecraft/world/level/block/DispenserBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Laip;Lgt;)V	a	dispenseFrom
		p	1		world
		p	2		pos
	m	(Lcfv;)Lig;	a	getDispenseMethod
		p	1		stack
	m	(Lcic;)Ldbq;	a	getStateForPlacement
		p	1		ctx
	m	(Lcmh;Lig;)V	a	registerBehavior
		p	0		provider
		p	1		behavior
	m	(Lcmi;Lgt;Ldbq;Lbfx;Lcfv;)V	a	setPlacedBy
		p	1		world
		p	2		pos
		p	3		state
		p	4		placer
		p	5		itemStack
	m	(Ldbq;Laip;Lgt;Lapo;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Lcmi;Lgt;)I	a	getAnalogOutputSignal
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lcmi;Lgt;Lbym;Lbdx;Leda;)Lbdy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldbq;Lcmi;Lgt;Lcpi;Lgt;Z)V	a	neighborChanged
		p	1		state
		p	2		world
		p	3		pos
		p	4		sourceBlock
		p	5		sourcePos
		p	6		notify
	m	(Ldbq;Lcmi;Lgt;Ldbq;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Ldbq;Lcua;)Ldbq;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldbq;Lcvq;)Ldbq;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lgt;Ldbq;)Lcze;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Lgu;)Lhn;	a	getDispensePosition
		p	0		pointer
	m	(Lit/unimi/dsi/fastutil/objects/Object2ObjectOpenHashMap;)V	a	lambda$static$0
		p	0		map
	m	(Ldbq;)Lcvj;	b_	getRenderShape
		p	1		state
	m	(Ldbq;)Z	d_	hasAnalogOutputSignal
		p	1		state
	f	Ldcl;	a	FACING
	f	Ldci;	b	TRIGGERED
	f	Ljava/util/Map;	c	DISPENSER_REGISTRY
	f	I	d	TRIGGER_DURATION
c	cri	net/minecraft/world/level/block/DoorBlock
	m	(Ldbp$d;Ldcg;)V	<init>	<init>
		p	1		settings
		p	2		blockSetType
	m	(Lbfh;Lcmi;Ldbq;Lgt;Z)V	a	setOpen
		p	1		entity
		p	2		world
		p	3		state
		p	4		pos
		p	5		open
	m	(Lbfh;Lcmi;Lgt;Z)V	a	playSound
		p	1		entity
		p	2		world
		p	3		pos
		p	4		open
	m	(Lcic;)Ldbq;	a	getStateForPlacement
		p	1		ctx
	m	(Lcmi;Lgt;)Z	a	isWoodenDoor
		p	0		world
		p	1		pos
	m	(Lcmi;Lgt;Ldbq;Lbfx;Lcfv;)V	a	setPlacedBy
		p	1		world
		p	2		pos
		p	3		state
		p	4		placer
		p	5		itemStack
	m	(Lcmi;Lgt;Ldbq;Lbym;)V	a	playerWillDestroy
		p	1		world
		p	2		pos
		p	3		state
		p	4		player
	m	(Ldbq;Lclo;Lgt;Ldxa;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lcmi;Lgt;Lbym;Lbdx;Leda;)Lbdy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldbq;Lcmi;Lgt;Lcpi;Lgt;Z)V	a	neighborChanged
		p	1		state
		p	2		world
		p	3		pos
		p	4		sourceBlock
		p	5		sourcePos
		p	6		notify
	m	(Ldbq;Lcml;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lcua;)Ldbq;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldbq;Lcvq;)Ldbq;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldbq;Lgt;)J	a	getSeed
		p	1		state
		p	2		pos
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lcic;)Ldcm;	b	getHinge
		p	1		ctx
	m	(Ldbq;)Ldwp;	d	getPistonPushReaction
		p	1		state
	m	(Ldbq;)Z	h	isOpen
		p	1		state
	m	(Ldbq;)Z	n	isWoodenDoor
		p	0		state
	f	Ldcl;	a	FACING
	f	Ldci;	b	OPEN
	f	Ldcp;	c	HINGE
	f	Ldci;	d	POWERED
	f	Ldcp;	e	HALF
	f	F	f	AABB_DOOR_THICKNESS
	f	Ledx;	g	SOUTH_AABB
	f	Ledx;	h	NORTH_AABB
	f	Ledx;	i	WEST_AABB
	f	Ledx;	j	EAST_AABB
	f	Ldcg;	k	type
c	cri$1	net/minecraft/world/level/block/DoorBlock$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
	f	[I	b	$SwitchMap$net$minecraft$world$level$pathfinder$PathComputationType
c	crj	net/minecraft/world/level/block/DoubleBlockCombiner
	m	(Lczg;Ljava/util/function/Function;Ljava/util/function/Function;Ldcl;Ldbq;Lcmj;Lgt;Ljava/util/function/BiPredicate;)Lcrj$c;	a	combineWithNeigbour
		p	0		blockEntityType
		p	1		typeMapper
		p	4		state
		p	5		world
		p	6		pos
		p	7		fallbackTester
c	crj$a	net/minecraft/world/level/block/DoubleBlockCombiner$BlockType
	m	()[Lcrj$a;	a	$values
	f	Lcrj$a;	a	SINGLE
	f	Lcrj$a;	b	FIRST
	f	Lcrj$a;	c	SECOND
	f	[Lcrj$a;	d	$VALUES
c	crj$b	net/minecraft/world/level/block/DoubleBlockCombiner$Combiner
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	acceptSingle
		p	1		single
	m	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;	a	acceptDouble
		p	1		first
		p	2		second
	m	()Ljava/lang/Object;	b	acceptNone
c	crj$c	net/minecraft/world/level/block/DoubleBlockCombiner$NeighborCombineResult
	m	(Lcrj$b;)Ljava/lang/Object;	apply	apply
		p	1		retriever
c	crj$c$a	net/minecraft/world/level/block/DoubleBlockCombiner$NeighborCombineResult$Double
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	<init>	<init>
		p	1		first
		p	2		second
	m	(Lcrj$b;)Ljava/lang/Object;	apply	apply
		p	1		retriever
	f	Ljava/lang/Object;	a	first
	f	Ljava/lang/Object;	b	second
c	crj$c$b	net/minecraft/world/level/block/DoubleBlockCombiner$NeighborCombineResult$Single
	m	(Ljava/lang/Object;)V	<init>	<init>
		p	1		single
	m	(Lcrj$b;)Ljava/lang/Object;	apply	apply
		p	1		retriever
	f	Ljava/lang/Object;	a	single
c	crk	net/minecraft/world/level/block/DoublePlantBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lcic;)Ldbq;	a	getStateForPlacement
		p	1		ctx
	m	(Lcmi;Lbym;Lgt;Ldbq;Lcze;Lcfv;)V	a	playerDestroy
		p	1		world
		p	2		player
		p	3		pos
		p	4		state
		p	5		blockEntity
		p	6		tool
	m	(Lcmi;Lgt;Ldbq;Lbfx;Lcfv;)V	a	setPlacedBy
		p	1		world
		p	2		pos
		p	3		state
		p	4		placer
		p	5		itemStack
	m	(Lcmi;Lgt;Ldbq;Lbym;)V	a	playerWillDestroy
		p	1		world
		p	2		pos
		p	3		state
		p	4		player
	m	(Lcmj;Ldbq;Lgt;I)V	a	placeAt
		p	0		world
		p	1		state
		p	2		pos
		p	3		flags
	m	(Lcml;Lgt;Ldbq;)Ldbq;	a	copyWaterloggedFrom
		p	0		world
		p	1		pos
		p	2		state
	m	(Ldbq;Lcml;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lgt;)J	a	getSeed
		p	1		state
		p	2		pos
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lcmi;Lgt;Ldbq;Lbym;)V	b	preventCreativeDropFromBottomPart
		p	0		world
		p	1		pos
		p	2		state
		p	3		player
	f	Ldcp;	a	HALF
c	crl	net/minecraft/world/level/block/DragonEggBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Ldbq;Lclo;Lgt;Ldxa;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lcmi;Lgt;Lbym;)V	a	attack
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
	m	(Ldbq;Lcmi;Lgt;Lbym;Lbdx;Leda;)Lbdy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	()I	b	getDelayAfterPlace
	m	(Ldbq;Lcmi;Lgt;)V	d	teleport
		p	1		state
		p	2		world
		p	3		pos
	f	Ledx;	a	SHAPE
c	crm	net/minecraft/world/level/block/DropExperienceBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Ldbp$d;Lbdd;)V	<init>	<init>
		p	1		settings
		p	2		experience
	m	(Ldbq;Laip;Lgt;Lcfv;Z)V	a	spawnAfterBreak
		p	1		state
		p	2		world
		p	3		pos
		p	4		tool
		p	5		dropExperience
	f	Lbdd;	a	xpRange
c	crn	net/minecraft/world/level/block/DropperBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Laip;Lgt;)V	a	dispenseFrom
		p	1		world
		p	2		pos
	m	(Lcfv;)Lig;	a	getDispenseMethod
		p	1		stack
	m	(Lgt;Ldbq;)Lcze;	a	newBlockEntity
		p	1		pos
		p	2		state
	f	Lig;	c	DISPENSE_BEHAVIOUR
c	cro	net/minecraft/world/level/block/EnchantmentTableBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lcmi;Ldbq;Lczg;)Lczf;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Lcmi;Lgt;ILbyl;Lbym;)Lcbd;	a	lambda$getMenuProvider$1
		p	2		syncId
		p	3		inventory
		p	4		player
	m	(Lcmi;Lgt;Ldbq;Lbfx;Lcfv;)V	a	setPlacedBy
		p	1		world
		p	2		pos
		p	3		state
		p	4		placer
		p	5		itemStack
	m	(Lcmi;Lgt;Lgt;)Z	a	isValidBookShelf
		p	0		world
		p	1		tablePos
		p	2		bookshelfOffset
	m	(Ldbq;Lclo;Lgt;Ldxa;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lcmi;Lgt;Lapo;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Lcmi;Lgt;Lbym;Lbdx;Leda;)Lbdy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Lgt;)Z	a	lambda$static$0
		p	0		pos
	m	(Lgt;Ldbq;)Lcze;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Ldbq;Lcmi;Lgt;)Lbeb;	b	getMenuProvider
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;)Lcvj;	b_	getRenderShape
		p	1		state
	m	(Ldbq;)Z	g_	useShapeForLightOcclusion
		p	1		state
	f	Ledx;	a	SHAPE
	f	Ljava/util/List;	b	BOOKSHELF_OFFSETS
c	crp	net/minecraft/world/level/block/EndGatewayBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lclo;Lgt;Ldbq;)Lcfv;	a	getCloneItemStack
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcmi;Ldbq;Lczg;)Lczf;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Ldbq;Lcmi;Lgt;Lapo;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Ldwi;)Z	a	canBeReplaced
		p	1		state
		p	2		fluid
	m	(Lgt;Ldbq;)Lcze;	a	newBlockEntity
		p	1		pos
		p	2		state
c	crq	net/minecraft/world/level/block/EndPortalBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lclo;Lgt;Ldbq;)Lcfv;	a	getCloneItemStack
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lcmi;Lgt;Lapo;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Lcmi;Lgt;Lbfh;)V	a	entityInside
		p	1		state
		p	2		world
		p	3		pos
		p	4		entity
	m	(Ldbq;Ldwi;)Z	a	canBeReplaced
		p	1		state
		p	2		fluid
	m	(Lgt;Ldbq;)Lcze;	a	newBlockEntity
		p	1		pos
		p	2		state
	f	Ledx;	a	SHAPE
c	crr	net/minecraft/world/level/block/EndPortalFrameBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lcic;)Ldbq;	a	getStateForPlacement
		p	1		ctx
	m	(Ldbq;Lclo;Lgt;Ldxa;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lcmi;Lgt;)I	a	getAnalogOutputSignal
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lcua;)Ldbq;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldbq;Lcvq;)Ldbq;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	()Ldbv;	b	getOrCreatePortalShape
	m	(Ldbq;)Z	d_	hasAnalogOutputSignal
		p	1		state
	m	(Ldbq;)Z	g_	useShapeForLightOcclusion
		p	1		state
	f	Ldcl;	a	FACING
	f	Ldci;	b	HAS_EYE
	f	Ledx;	c	BASE_SHAPE
	f	Ledx;	d	EYE_SHAPE
	f	Ledx;	e	FULL_SHAPE
	f	Ldbv;	f	portalShape
c	crs	net/minecraft/world/level/block/EndRodBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lcic;)Ldbq;	a	getStateForPlacement
		p	1		ctx
	m	(Ldbq;Lcmi;Lgt;Lapo;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldbq;)Ldwp;	d	getPistonPushReaction
		p	1		state
c	crt	net/minecraft/world/level/block/EnderChestBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lccn;ILbyl;Lbym;)Lcbd;	a	lambda$use$1
		p	1		syncId
		p	2		inventory
		p	3		player
	m	(Lcic;)Ldbq;	a	getStateForPlacement
		p	1		ctx
	m	(Lcmi;Ldbq;Lczg;)Lczf;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Ldbq;Laip;Lgt;Lapo;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Lclo;Lgt;Ldxa;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lcmi;Lgt;Lapo;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Lcmi;Lgt;Lbym;Lbdx;Leda;)Lbdy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldbq;Lcmi;Lgt;Z)Lcrj$c;	a	combine
		p	1		state
		p	2		world
		p	3		pos
		p	4		ignoreBlocked
	m	(Ldbq;Lcua;)Ldbq;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldbq;Lcvq;)Ldbq;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lgt;Ldbq;)Lcze;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Ldbq;)Lcvj;	b_	getRenderShape
		p	1		state
	m	(Ldbq;)Ldwj;	c_	getFluidState
		p	1		state
	m	()Lczg;	g	lambda$new$0
	f	Ldcl;	b	FACING
	f	Ldci;	c	WATERLOGGED
	f	Ledx;	d	SHAPE
	f	Ltj;	e	CONTAINER_TITLE
c	cru	net/minecraft/world/level/block/EntityBlock
	m	(Laip;Lcze;)Ldgc;	a	getListener
		p	1		world
		p	2		blockEntity
	m	(Lcmi;Ldbq;Lczg;)Lczf;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Lgt;Ldbq;)Lcze;	a	newBlockEntity
		p	1		pos
		p	2		state
c	crv	net/minecraft/world/level/block/FaceAttachedHorizontalDirectionalBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lcic;)Ldbq;	a	getStateForPlacement
		p	1		ctx
	m	(Ldbq;Lcml;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lcml;Lgt;Lgz;)Z	b	canAttach
		p	0		world
		p	1		pos
		p	2		direction
	m	(Ldbq;)Lgz;	h	getConnectedDirection
		p	0		state
	f	Ldcp;	J	FACE
c	crv$1	net/minecraft/world/level/block/FaceAttachedHorizontalDirectionalBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$state$properties$AttachFace
c	crw	net/minecraft/world/level/block/Fallable
	m	(Lbfh;)Lbem;	a	getFallDamageSource
		p	1		attacker
	m	(Lcmi;Lgt;Lbve;)V	a	onBrokenAfterFall
		p	1		world
		p	2		pos
		p	3		fallingBlockEntity
	m	(Lcmi;Lgt;Ldbq;Ldbq;Lbve;)V	a	onLand
		p	1		world
		p	2		pos
		p	3		fallingBlockState
		p	4		currentStateInPos
		p	5		fallingBlockEntity
	m	()Ljava/util/function/Predicate;	al_	getHurtsEntitySelector
c	crx	net/minecraft/world/level/block/FallingBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lbve;)V	a	falling
		p	1		entity
	m	(Ldbq;Laip;Lgt;Lapo;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Lcmi;Lgt;Lapo;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	()I	b	getDelayAfterPlace
	m	(Ldbq;Lcmi;Lgt;Ldbq;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	m	(Ldbq;Lclo;Lgt;)I	d	getDustColor
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;)Z	h	isFree
		p	0		state
c	cry	net/minecraft/world/level/block/FarmBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lbfh;Ldbq;Lcmi;Lgt;)V	a	turnToDirt
		p	0		entity
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcic;)Ldbq;	a	getStateForPlacement
		p	1		ctx
	m	(Lclo;Lgt;)Z	a	isUnderCrops
		p	0		world
		p	1		pos
	m	(Lcmi;Ldbq;Lgt;Lbfh;F)V	a	fallOn
		p	1		world
		p	2		state
		p	3		pos
		p	4		entity
		p	5		fallDistance
	m	(Lcml;Lgt;)Z	a	isNearWater
		p	0		world
		p	1		pos
	m	(Ldbq;Laip;Lgt;Lapo;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Lclo;Lgt;Ldxa;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lcml;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldbq;Laip;Lgt;Lapo;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;)Z	g_	useShapeForLightOcclusion
		p	1		state
	f	Ldcr;	a	MOISTURE
	f	Ledx;	b	SHAPE
	f	I	c	MAX_MOISTURE
c	crz	net/minecraft/world/level/block/FenceBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lcic;)Ldbq;	a	getStateForPlacement
		p	1		ctx
	m	(Ldbq;Lclo;Lgt;Ldxa;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldbq;Lcmi;Lgt;Lbym;Lbdx;Leda;)Lbdy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldbq;ZLgz;)Z	a	connectsTo
		p	1		state
		p	2		neighborIsFullSquare
		p	3		dir
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	b	getVisualShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lclo;Lgt;)Ledx;	f	getOcclusionShape
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;)Z	h	isSameFence
		p	1		state
	f	[Ledx;	i	occlusionByIndex
c	csa	net/minecraft/world/level/block/FenceGateBlock
	m	(Ldbp$d;Ldde;)V	<init>	<init>
		p	1		settings
		p	2		type
	m	(Lcic;)Ldbq;	a	getStateForPlacement
		p	1		ctx
	m	(Ldbq;Lclo;Lgt;Ldxa;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lcmi;Lgt;Lbym;Lbdx;Leda;)Lbdy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldbq;Lcmi;Lgt;Lcpi;Lgt;Z)V	a	neighborChanged
		p	1		state
		p	2		world
		p	3		pos
		p	4		sourceBlock
		p	5		sourcePos
		p	6		notify
	m	(Ldbq;Lgz;)Z	a	connectsToDirection
		p	0		state
		p	1		side
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldbq;Lclo;Lgt;)Ledx;	b_	getBlockSupportShape
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	c	getCollisionShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lclo;Lgt;)Ledx;	f	getOcclusionShape
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;)Z	h	isWall
		p	1		state
	f	Ledx;	E	X_OCCLUSION_SHAPE_LOW
	f	Ldde;	F	type
	f	Ldci;	a	OPEN
	f	Ldci;	b	POWERED
	f	Ldci;	c	IN_WALL
	f	Ledx;	d	Z_SHAPE
	f	Ledx;	e	X_SHAPE
	f	Ledx;	f	Z_SHAPE_LOW
	f	Ledx;	g	X_SHAPE_LOW
	f	Ledx;	h	Z_COLLISION_SHAPE
	f	Ledx;	i	X_COLLISION_SHAPE
	f	Ledx;	j	Z_SUPPORT_SHAPE
	f	Ledx;	k	X_SUPPORT_SHAPE
	f	Ledx;	l	Z_OCCLUSION_SHAPE
	f	Ledx;	m	X_OCCLUSION_SHAPE
	f	Ledx;	n	Z_OCCLUSION_SHAPE_LOW
c	csa$1	net/minecraft/world/level/block/FenceGateBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$pathfinder$PathComputationType
c	csb	net/minecraft/world/level/block/FireBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lapo;)I	a	getFireTickDelay
		p	0		random
	m	(Lcic;)Ldbq;	a	getStateForPlacement
		p	1		ctx
	m	(Lcmi;Lgt;)Z	a	isNearRain
		p	1		world
		p	2		pos
	m	(Lcmi;Lgt;ILapo;I)V	a	checkBurnOut
		p	1		world
		p	2		pos
		p	3		spreadFactor
		p	4		random
		p	5		currentAge
	m	(Lcmj;Lgt;I)Ldbq;	a	getStateWithAge
		p	1		world
		p	2		pos
		p	3		age
	m	(Lcml;Lgt;)I	a	getIgniteOdds
		p	1		world
		p	2		pos
	m	(Lcpi;II)V	a	setFlammable
		p	1		block
		p	2		burnChance
		p	3		spreadChance
	m	(Ldbq;Laip;Lgt;Lapo;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lcml;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ljava/util/Map$Entry;)Z	a	lambda$static$0
		p	0		entry
	m	()V	b	bootStrap
	m	(Lclo;Lgt;)Ldbq;	b	getStateForPlacement
		p	1		world
		p	2		pos
	m	(Ldbq;Lcmi;Lgt;Ldbq;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	m	(Lclo;Lgt;)Z	d	isValidFireLocation
		p	1		world
		p	2		pos
	m	(Ldbq;)Z	f	canBurn
		p	1		state
	m	(Ldbq;)Ledx;	h	calculateShape
		p	0		state
	m	(Ldbq;)I	n	getBurnOdds
		p	1		state
	m	(Ldbq;)I	o	getIgniteOdds
		p	1		state
	m	(Ldbq;)Z	p	lambda$new$1
		p	0		state
	f	Ledx;	E	SOUTH_AABB
	f	Ljava/util/Map;	F	shapesCache
	f	I	G	IGNITE_INSTANT
	f	I	H	IGNITE_EASY
	f	I	I	IGNITE_MEDIUM
	f	I	J	IGNITE_HARD
	f	I	K	BURN_INSTANT
	f	I	L	BURN_EASY
	f	I	M	BURN_MEDIUM
	f	I	N	BURN_HARD
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	O	igniteOdds
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	P	burnOdds
	f	I	c	MAX_AGE
	f	Ldcr;	d	AGE
	f	Ldci;	e	NORTH
	f	Ldci;	f	EAST
	f	Ldci;	g	SOUTH
	f	Ldci;	h	WEST
	f	Ldci;	i	UP
	f	Ljava/util/Map;	j	PROPERTY_BY_DIRECTION
	f	Ledx;	k	UP_AABB
	f	Ledx;	l	WEST_AABB
	f	Ledx;	m	EAST_AABB
	f	Ledx;	n	NORTH_AABB
c	csc	net/minecraft/world/level/block/FletchingTableBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Ldbq;Lcmi;Lgt;Lbym;Lbdx;Leda;)Lbdy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
c	csd	net/minecraft/world/level/block/FlowerBlock
	m	(Lbew;ILdbp$d;)V	<init>	<init>
		p	1		suspiciousStewEffect
		p	2		effectDuration
		p	3		settings
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	()Lbew;	b	getSuspiciousEffect
	m	()I	c	getEffectDuration
	f	F	a	AABB_OFFSET
	f	Ledx;	b	SHAPE
	f	Lbew;	c	suspiciousStewEffect
	f	I	d	effectDuration
c	cse	net/minecraft/world/level/block/FlowerPotBlock
	m	(Lcpi;Ldbp$d;)V	<init>	<init>
		p	1		content
		p	2		settings
	m	(Lclo;Lgt;Ldbq;)Lcfv;	a	getCloneItemStack
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldbq;Lclo;Lgt;Ldxa;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lcmi;Lgt;Lbym;Lbdx;Leda;)Lbdy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	()Lcpi;	b	getContent
	m	(Ldbq;)Lcvj;	b_	getRenderShape
		p	1		state
	m	()Z	g	isEmpty
	f	F	a	AABB_SIZE
	f	Ledx;	b	SHAPE
	f	Ljava/util/Map;	c	POTTED_BY_CONTENT
	f	Lcpi;	d	content
c	csf	net/minecraft/world/level/block/FrogspawnBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(II)V	a	setHatchDelay
		p	0		min
		p	1		max
	m	(Laip;Lgt;Lapo;)V	a	hatchFrogspawn
		p	1		world
		p	2		pos
		p	3		random
	m	(Lapo;)I	a	getFrogspawnHatchDelay
		p	0		random
	m	(Lclo;Lgt;)Z	a	mayPlaceOn
		p	0		world
		p	1		pos
	m	(Lcmi;Lgt;)V	a	destroyBlock
		p	1		world
		p	2		pos
	m	(Ldbq;Laip;Lgt;Lapo;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lcmi;Lgt;Lbfh;)V	a	entityInside
		p	1		state
		p	2		world
		p	3		pos
		p	4		entity
	m	(Ldbq;Lcml;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	()V	b	setDefaultHatchDelay
	m	(Laip;Lgt;Lapo;)V	b	spawnTadpoles
		p	1		world
		p	2		pos
		p	3		random
	m	(Lapo;)D	b	getRandomTadpolePositionOffset
		p	1		random
	m	(Ldbq;Lcmi;Lgt;Ldbq;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	f	Ledx;	a	SHAPE
	f	I	b	MIN_TADPOLES_SPAWN
	f	I	c	MAX_TADPOLES_SPAWN
	f	I	d	DEFAULT_MIN_HATCH_TICK_DELAY
	f	I	e	DEFAULT_MAX_HATCH_TICK_DELAY
	f	I	f	minHatchTickDelay
	f	I	g	maxHatchTickDelay
c	csg	net/minecraft/world/level/block/FrostedIceBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lclo;Lgt;I)Z	a	fewerNeigboursThan
		p	1		world
		p	2		pos
		p	3		maxNeighbors
	m	(Lclo;Lgt;Ldbq;)Lcfv;	a	getCloneItemStack
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldbq;Laip;Lgt;Lapo;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Lcmi;Lgt;Lcpi;Lgt;Z)V	a	neighborChanged
		p	1		state
		p	2		world
		p	3		pos
		p	4		sourceBlock
		p	5		sourcePos
		p	6		notify
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldbq;Laip;Lgt;Lapo;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Lcmi;Lgt;)Z	e	slightlyMelt
		p	1		state
		p	2		world
		p	3		pos
	f	I	a	MAX_AGE
	f	Ldcr;	b	AGE
	f	I	c	NEIGHBORS_TO_AGE
	f	I	d	NEIGHBORS_TO_MELT
c	csh	net/minecraft/world/level/block/FungusBlock
	m	(Ldbp$d;Ladc;Lcpi;)V	<init>	<init>
		p	1		settings
		p	2		featureKey
		p	3		nylium
	m	(Laip;Lapo;Lgt;Ldbq;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Laip;Lapo;Lgt;Lhd;)V	a	lambda$performBonemeal$0
		p	3		featureEntry
	m	(Lcmi;Lapo;Lgt;Ldbq;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcml;)Ljava/util/Optional;	a	getFeature
		p	1		world
	m	(Lcml;Lgt;Ldbq;Z)Z	a	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
		p	4		isClient
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lclo;Lgt;)Z	d	mayPlaceOn
		p	1		floor
		p	2		world
		p	3		pos
	f	Ledx;	a	SHAPE
	f	D	b	BONEMEAL_SUCCESS_PROBABILITY
	f	Lcpi;	c	requiredBlock
	f	Ladc;	d	feature
c	csi	net/minecraft/world/level/block/FurnaceBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lcmi;Ldbq;Lczg;)Lczf;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Lcmi;Lgt;Lbym;)V	a	openContainer
		p	1		world
		p	2		pos
		p	3		player
	m	(Ldbq;Lcmi;Lgt;Lapo;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lgt;Ldbq;)Lcze;	a	newBlockEntity
		p	1		pos
		p	2		state
c	csj	net/minecraft/world/level/block/GameMasterBlock
c	csk	net/minecraft/world/level/block/GlassBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
c	csl	net/minecraft/world/level/block/GlazedTerracottaBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lcic;)Ldbq;	a	getStateForPlacement
		p	1		ctx
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldbq;)Ldwp;	d	getPistonPushReaction
		p	1		state
c	csm	net/minecraft/world/level/block/GlowLichenBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(ILdbq;)I	a	lambda$emission$0
		p	1		state
	m	(Laip;Lapo;Lgt;Ldbq;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcmi;Lapo;Lgt;Ldbq;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcml;Lgt;Ldbq;Z)Z	a	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
		p	4		isClient
	m	(Ldbq;Lcic;)Z	a	canBeReplaced
		p	1		state
		p	2		context
	m	(Ldbq;Lcml;Lgt;Lgz;)Z	a	lambda$isValidBonemealTarget$1
		p	4		direction
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(I)Ljava/util/function/ToIntFunction;	b	emission
		p	0		luminance
	m	()Lcue;	c	getSpreader
	m	(Ldbq;Lclo;Lgt;)Z	c	propagatesSkylightDown
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;)Ldwj;	c_	getFluidState
		p	1		state
	f	Ldci;	b	WATERLOGGED
	f	Lcue;	c	spreader
c	csn	net/minecraft/world/level/block/GrassBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Laip;Lapo;Lgt;Ldbq;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcmi;Lapo;Lgt;Ldbq;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcml;Lgt;Ldbq;Z)Z	a	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
		p	4		isClient
c	cso	net/minecraft/world/level/block/GravelBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Ldbq;Lclo;Lgt;)I	d	getDustColor
		p	1		state
		p	2		world
		p	3		pos
c	csp	net/minecraft/world/level/block/GrindstoneBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lcmi;Lgt;ILbyl;Lbym;)Lcbd;	a	lambda$getMenuProvider$0
		p	2		syncId
		p	3		inventory
		p	4		player
	m	(Ldbq;Lclo;Lgt;Ldxa;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lcmi;Lgt;Lbym;Lbdx;Leda;)Lbdy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldbq;Lcml;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lcua;)Ldbq;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldbq;Lcvq;)Ldbq;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldbq;Lcmi;Lgt;)Lbeb;	b	getMenuProvider
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;)Lcvj;	b_	getRenderShape
		p	1		state
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	c	getCollisionShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;)Ledx;	n	getVoxelShape
		p	1		state
	f	Ledx;	E	FLOOR_EAST_WEST_ALL_LEGS
	f	Ledx;	F	FLOOR_EAST_WEST_GRINDSTONE
	f	Ledx;	G	WALL_SOUTH_LEFT_POST
	f	Ledx;	H	WALL_SOUTH_RIGHT_POST
	f	Ledx;	I	WALL_SOUTH_LEFT_PIVOT
	f	Ledx;	K	WALL_SOUTH_RIGHT_PIVOT
	f	Ledx;	L	WALL_SOUTH_LEFT_LEG
	f	Ledx;	M	WALL_SOUTH_RIGHT_LEG
	f	Ledx;	N	WALL_SOUTH_ALL_LEGS
	f	Ledx;	O	WALL_SOUTH_GRINDSTONE
	f	Ledx;	P	WALL_NORTH_LEFT_POST
	f	Ledx;	Q	WALL_NORTH_RIGHT_POST
	f	Ledx;	R	WALL_NORTH_LEFT_PIVOT
	f	Ledx;	S	WALL_NORTH_RIGHT_PIVOT
	f	Ledx;	T	WALL_NORTH_LEFT_LEG
	f	Ledx;	U	WALL_NORTH_RIGHT_LEG
	f	Ledx;	V	WALL_NORTH_ALL_LEGS
	f	Ledx;	W	WALL_NORTH_GRINDSTONE
	f	Ledx;	X	WALL_WEST_LEFT_POST
	f	Ledx;	Y	WALL_WEST_RIGHT_POST
	f	Ledx;	Z	WALL_WEST_LEFT_PIVOT
	f	Ledx;	aA	CEILING_EAST_WEST_RIGHT_LEG
	f	Ledx;	aB	CEILING_EAST_WEST_ALL_LEGS
	f	Ledx;	aC	CEILING_EAST_WEST_GRINDSTONE
	f	Ledx;	a	FLOOR_NORTH_SOUTH_LEFT_POST
	f	Ltj;	aR	CONTAINER_TITLE
	f	Ledx;	aa	WALL_WEST_RIGHT_PIVOT
	f	Ledx;	ab	WALL_WEST_LEFT_LEG
	f	Ledx;	ac	WALL_WEST_RIGHT_LEG
	f	Ledx;	ad	WALL_WEST_ALL_LEGS
	f	Ledx;	ae	WALL_WEST_GRINDSTONE
	f	Ledx;	af	WALL_EAST_LEFT_POST
	f	Ledx;	ag	WALL_EAST_RIGHT_POST
	f	Ledx;	ah	WALL_EAST_LEFT_PIVOT
	f	Ledx;	ai	WALL_EAST_RIGHT_PIVOT
	f	Ledx;	aj	WALL_EAST_LEFT_LEG
	f	Ledx;	ak	WALL_EAST_RIGHT_LEG
	f	Ledx;	al	WALL_EAST_ALL_LEGS
	f	Ledx;	am	WALL_EAST_GRINDSTONE
	f	Ledx;	an	CEILING_NORTH_SOUTH_LEFT_POST
	f	Ledx;	ao	CEILING_NORTH_SOUTH_RIGHT_POST
	f	Ledx;	ap	CEILING_NORTH_SOUTH_LEFT_PIVOT
	f	Ledx;	aq	CEILING_NORTH_SOUTH_RIGHT_PIVOT
	f	Ledx;	ar	CEILING_NORTH_SOUTH_LEFT_LEG
	f	Ledx;	as	CEILING_NORTH_SOUTH_RIGHT_LEG
	f	Ledx;	at	CEILING_NORTH_SOUTH_ALL_LEGS
	f	Ledx;	au	CEILING_NORTH_SOUTH_GRINDSTONE
	f	Ledx;	av	CEILING_EAST_WEST_LEFT_POST
	f	Ledx;	aw	CEILING_EAST_WEST_RIGHT_POST
	f	Ledx;	ax	CEILING_EAST_WEST_LEFT_PIVOT
	f	Ledx;	ay	CEILING_EAST_WEST_RIGHT_PIVOT
	f	Ledx;	az	CEILING_EAST_WEST_LEFT_LEG
	f	Ledx;	b	FLOOR_NORTH_SOUTH_RIGHT_POST
	f	Ledx;	c	FLOOR_NORTH_SOUTH_LEFT_PIVOT
	f	Ledx;	d	FLOOR_NORTH_SOUTH_RIGHT_PIVOT
	f	Ledx;	e	FLOOR_NORTH_SOUTH_LEFT_LEG
	f	Ledx;	f	FLOOR_NORTH_SOUTH_RIGHT_LEG
	f	Ledx;	g	FLOOR_NORTH_SOUTH_ALL_LEGS
	f	Ledx;	h	FLOOR_NORTH_SOUTH_GRINDSTONE
	f	Ledx;	i	FLOOR_EAST_WEST_LEFT_POST
	f	Ledx;	j	FLOOR_EAST_WEST_RIGHT_POST
	f	Ledx;	k	FLOOR_EAST_WEST_LEFT_PIVOT
	f	Ledx;	l	FLOOR_EAST_WEST_RIGHT_PIVOT
	f	Ledx;	m	FLOOR_EAST_WEST_LEFT_LEG
	f	Ledx;	n	FLOOR_EAST_WEST_RIGHT_LEG
c	csp$1	net/minecraft/world/level/block/GrindstoneBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$state$properties$AttachFace
c	csq	net/minecraft/world/level/block/GrowingPlantBlock
	m	(Ldbp$d;Lgz;Ledx;Z)V	<init>	<init>
		p	1		settings
		p	2		growthDirection
		p	3		outlineShape
		p	4		tickWater
	m	(Lcic;)Ldbq;	a	getStateForPlacement
		p	1		ctx
	m	(Lcmj;)Ldbq;	a	getStateForPlacement
		p	1		world
	m	(Ldbq;Laip;Lgt;Lapo;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lcml;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	()Lcpi;	b	getBodyBlock
	m	()Lcss;	c	getHeadBlock
	m	(Ldbq;)Z	h	canAttachTo
		p	1		state
	f	Lgz;	a	growthDirection
	f	Z	b	scheduleFluidTicks
	f	Ledx;	c	shape
c	csr	net/minecraft/world/level/block/GrowingPlantBodyBlock
	m	(Ldbp$d;Lgz;Ledx;Z)V	<init>	<init>
		p	1		settings
		p	2		growthDirection
		p	3		outlineShape
		p	4		tickWater
	m	(Laip;Lapo;Lgt;Ldbq;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lclo;Lgt;Lcpi;)Ljava/util/Optional;	a	getHeadPos
		p	1		world
		p	2		pos
		p	3		block
	m	(Lclo;Lgt;Ldbq;)Lcfv;	a	getCloneItemStack
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcmi;Lapo;Lgt;Ldbq;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcml;Lgt;Ldbq;Z)Z	a	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
		p	4		isClient
	m	(Ldbq;Lcic;)Z	a	canBeReplaced
		p	1		state
		p	2		context
	m	(Ldbq;Ldbq;)Ldbq;	a	updateHeadAfterConvertedFromBody
		p	1		from
		p	2		to
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	()Lcpi;	b	getBodyBlock
c	css	net/minecraft/world/level/block/GrowingPlantHeadBlock
	m	(Ldbp$d;Lgz;Ledx;ZD)V	<init>	<init>
		p	1		settings
		p	2		growthDirection
		p	3		outlineShape
		p	4		tickWater
		p	5		growthChance
	m	(Laip;Lapo;Lgt;Ldbq;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lapo;)I	a	getBlocksToGrowWhenBonemealed
		p	1		random
	m	(Lcmi;Lapo;Lgt;Ldbq;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcmj;)Ldbq;	a	getStateForPlacement
		p	1		world
	m	(Lcml;Lgt;Ldbq;Z)Z	a	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
		p	4		isClient
	m	(Ldbq;Lapo;)Ldbq;	a	getGrowIntoState
		p	1		state
		p	2		random
	m	(Ldbq;Ldbq;)Ldbq;	a	updateBodyAfterConvertedFromHead
		p	1		from
		p	2		to
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldbq;Laip;Lgt;Lapo;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	()Lcss;	c	getHeadBlock
	m	(Ldbq;)Z	e_	isRandomlyTicking
		p	1		state
	m	(Ldbq;)Z	g	canGrowInto
		p	1		state
	m	(Ldbq;)Ldbq;	n	getMaxAgeState
		p	1		state
	m	(Ldbq;)Z	o	isMaxAge
		p	1		state
	f	Ldcr;	d	AGE
	f	I	e	MAX_AGE
	f	D	f	growPerTickProbability
c	cst	net/minecraft/world/level/block/HalfTransparentBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Ldbq;Ldbq;Lgz;)Z	a	skipRendering
		p	1		state
		p	2		stateFrom
		p	3		direction
c	csu	net/minecraft/world/level/block/HangingRootsBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lcic;)Ldbq;	a	getStateForPlacement
		p	1		ctx
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lcml;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldbq;)Ldwj;	c_	getFluidState
		p	1		state
	f	Ledx;	a	SHAPE
	f	Ldci;	b	WATERLOGGED
c	csv	net/minecraft/world/level/block/HayBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lcmi;Ldbq;Lgt;Lbfh;F)V	a	fallOn
		p	1		world
		p	2		state
		p	3		pos
		p	4		entity
		p	5		fallDistance
c	csw	net/minecraft/world/level/block/HoneyBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lbfh;)V	a	showSlideParticles
		p	0		entity
	m	(Lbfh;I)V	a	showParticles
		p	0		entity
		p	1		count
	m	(Lbfh;Lgt;)V	a	maybeDoSlideAchievement
		p	1		entity
		p	2		pos
	m	(Lcmi;Lbfh;)V	a	maybeDoSlideEffects
		p	1		world
		p	2		entity
	m	(Lcmi;Ldbq;Lgt;Lbfh;F)V	a	fallOn
		p	1		world
		p	2		state
		p	3		pos
		p	4		entity
		p	5		fallDistance
	m	(Ldbq;Lcmi;Lgt;Lbfh;)V	a	entityInside
		p	1		state
		p	2		world
		p	3		pos
		p	4		entity
	m	(Lgt;Lbfh;)Z	a	isSlidingDown
		p	1		pos
		p	2		entity
	m	(Lbfh;)V	b	showJumpParticles
		p	0		entity
	m	(Lbfh;)Z	c	doesEntityDoHoneyBlockSlideEffects
		p	0		entity
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	c	getCollisionShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lbfh;)V	d	doSlideMovement
		p	1		entity
	f	Ledx;	a	SHAPE
	f	D	b	SLIDE_STARTS_WHEN_VERTICAL_SPEED_IS_AT_LEAST
	f	D	c	MIN_FALL_SPEED_TO_BE_CONSIDERED_SLIDING
	f	D	d	THROTTLE_SLIDE_SPEED_TO
	f	I	e	SLIDE_ADVANCEMENT_CHECK_INTERVAL
c	csx	net/minecraft/world/level/block/HopperBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lcic;)Ldbq;	a	getStateForPlacement
		p	1		ctx
	m	(Lcmi;Ldbq;Lczg;)Lczf;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Lcmi;Lgt;Ldbq;I)V	a	checkPoweredState
		p	1		world
		p	2		pos
		p	3		state
		p	4		flags
	m	(Lcmi;Lgt;Ldbq;Lbfx;Lcfv;)V	a	setPlacedBy
		p	1		world
		p	2		pos
		p	3		state
		p	4		placer
		p	5		itemStack
	m	(Ldbq;Lclo;Lgt;)Ledx;	a	getInteractionShape
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lclo;Lgt;Ldxa;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lcmi;Lgt;)I	a	getAnalogOutputSignal
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lcmi;Lgt;Lbfh;)V	a	entityInside
		p	1		state
		p	2		world
		p	3		pos
		p	4		entity
	m	(Ldbq;Lcmi;Lgt;Lbym;Lbdx;Leda;)Lbdy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldbq;Lcmi;Lgt;Lcpi;Lgt;Z)V	a	neighborChanged
		p	1		state
		p	2		world
		p	3		pos
		p	4		sourceBlock
		p	5		sourcePos
		p	6		notify
	m	(Ldbq;Lcmi;Lgt;Ldbq;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Ldbq;Lcua;)Ldbq;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldbq;Lcvq;)Ldbq;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lgt;Ldbq;)Lcze;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Ldbq;Lcmi;Lgt;Ldbq;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	m	(Ldbq;)Lcvj;	b_	getRenderShape
		p	1		state
	m	(Ldbq;)Z	d_	hasAnalogOutputSignal
		p	1		state
	f	Ledx;	E	SOUTH_INTERACTION_SHAPE
	f	Ledx;	F	WEST_INTERACTION_SHAPE
	f	Ldcl;	a	FACING
	f	Ldci;	b	ENABLED
	f	Ledx;	c	TOP
	f	Ledx;	d	FUNNEL
	f	Ledx;	e	CONVEX_BASE
	f	Ledx;	f	BASE
	f	Ledx;	g	DOWN_SHAPE
	f	Ledx;	h	EAST_SHAPE
	f	Ledx;	i	NORTH_SHAPE
	f	Ledx;	j	SOUTH_SHAPE
	f	Ledx;	k	WEST_SHAPE
	f	Ledx;	l	DOWN_INTERACTION_SHAPE
	f	Ledx;	m	EAST_INTERACTION_SHAPE
	f	Ledx;	n	NORTH_INTERACTION_SHAPE
c	csx$1	net/minecraft/world/level/block/HopperBlock$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	csy	net/minecraft/world/level/block/HorizontalDirectionalBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Ldbq;Lcua;)Ldbq;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldbq;Lcvq;)Ldbq;	a	rotate
		p	1		state
		p	2		rotation
	f	Ldcl;	aD	FACING
c	csz	net/minecraft/world/level/block/HugeMushroomBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lcic;)Ldbq;	a	getStateForPlacement
		p	1		ctx
	m	(Ldbq;Lcua;)Ldbq;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldbq;Lcvq;)Ldbq;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	f	Ldci;	a	NORTH
	f	Ldci;	b	EAST
	f	Ldci;	c	SOUTH
	f	Ldci;	d	WEST
	f	Ldci;	e	UP
	f	Ldci;	f	DOWN
	f	Ljava/util/Map;	g	PROPERTY_BY_DIRECTION
c	cta	net/minecraft/world/level/block/IceBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lcmi;Lbym;Lgt;Ldbq;Lcze;Lcfv;)V	a	playerDestroy
		p	1		world
		p	2		player
		p	3		pos
		p	4		state
		p	5		blockEntity
		p	6		tool
	m	(Ldbq;Laip;Lgt;Lapo;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;)Ldwp;	d	getPistonPushReaction
		p	1		state
	m	(Ldbq;Lcmi;Lgt;)V	d	melt
		p	1		state
		p	2		world
		p	3		pos
c	ctb	net/minecraft/world/level/block/InfestedBlock
	m	(Lcpi;Ldbp$d;)V	<init>	<init>
		p	1		regularBlock
		p	2		settings
	m	(Laip;Lgt;)V	a	spawnInfestation
		p	1		world
		p	2		pos
	m	(Ldbq;Laip;Lgt;Lcfv;Z)V	a	spawnAfterBreak
		p	1		state
		p	2		world
		p	3		pos
		p	4		tool
		p	5		dropExperience
	m	(Ljava/util/Map;Ldbq;Ljava/util/function/Supplier;)Ldbq;	a	getNewStateWithProperties
		p	0		stateMap
		p	1		fromState
		p	2		toStateSupplier
	m	(Ljava/util/function/Supplier;Ldbq;)Ldbq;	a	lambda$getNewStateWithProperties$2
		p	1		infestedState
	m	()Lcpi;	b	getHostBlock
	m	()Ldbq;	g	lambda$hostStateByInfested$1
	m	(Ldbq;)Z	h	isCompatibleHostBlock
		p	0		block
	m	(Ldbq;)Ldbq;	n	infestedStateByHost
		p	0		regularState
	m	(Ldbq;)Ldbq;	o	hostStateByInfested
		p	1		infestedState
	m	(Ldbq;)Ldbq;	p	lambda$infestedStateByHost$0
	f	Lcpi;	a	hostBlock
	f	Ljava/util/Map;	b	BLOCK_BY_HOST_BLOCK
	f	Ljava/util/Map;	c	HOST_TO_INFESTED_STATES
	f	Ljava/util/Map;	d	INFESTED_TO_HOST_STATES
c	ctc	net/minecraft/world/level/block/InfestedRotatedPillarBlock
	m	(Lcpi;Ldbp$d;)V	<init>	<init>
		p	1		regularBlock
		p	2		settings
	m	(Lcic;)Ldbq;	a	getStateForPlacement
		p	1		ctx
	m	(Ldbq;Lcvq;)Ldbq;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
c	ctd	net/minecraft/world/level/block/IronBarsBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lcic;)Ldbq;	a	getStateForPlacement
		p	1		ctx
	m	(Ldbq;Ldbq;Lgz;)Z	a	skipRendering
		p	1		state
		p	2		stateFrom
		p	3		direction
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldbq;Z)Z	a	attachsTo
		p	1		state
		p	2		sideSolidFullSquare
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	b	getVisualShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
c	cte	net/minecraft/world/level/block/JigsawBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lcic;)Ldbq;	a	getStateForPlacement
		p	1		ctx
	m	(Ldbq;Lcmi;Lgt;Lbym;Lbdx;Leda;)Lbdy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldbq;Lcua;)Ldbq;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldbq;Lcvq;)Ldbq;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldvh$c;Ldvh$c;)Z	a	canAttach
		p	0		info1
		p	1		info2
	m	(Lgt;Ldbq;)Lcze;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Lgz;)Ldab$a;	a	lambda$canAttach$0
	m	(Ldbq;)Lgz;	h	getFrontFacing
		p	0		state
	m	(Ldbq;)Lgz;	n	getTopFacing
		p	0		state
	f	Ldcp;	a	ORIENTATION
c	ctf	net/minecraft/world/level/block/JukeboxBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lcmi;Ldbq;Lczg;)Lczf;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Lcmi;Lgt;Ldbq;Lbfx;Lcfv;)V	a	setPlacedBy
		p	1		world
		p	2		pos
		p	3		state
		p	4		placer
		p	5		itemStack
	m	(Ldbq;Lclo;Lgt;Lgz;)I	a	getSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldbq;Lcmi;Lgt;)I	a	getAnalogOutputSignal
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lcmi;Lgt;Lbym;Lbdx;Leda;)Lbdy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldbq;Lcmi;Lgt;Ldbq;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lgt;Ldbq;)Lcze;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Ldbq;)Lcvj;	b_	getRenderShape
		p	1		state
	m	(Ldbq;)Z	d_	hasAnalogOutputSignal
		p	1		state
	m	(Ldbq;)Z	f_	isSignalSource
		p	1		state
	f	Ldci;	a	HAS_RECORD
c	ctg	net/minecraft/world/level/block/KelpBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lapo;)I	a	getBlocksToGrowWhenBonemealed
		p	1		random
	m	(Lcic;)Ldbq;	a	getStateForPlacement
		p	1		ctx
	m	(Lclo;Lgt;Ldbq;Ldwi;)Z	a	canPlaceLiquid
		p	1		world
		p	2		pos
		p	3		state
		p	4		fluid
	m	(Lcmj;Lgt;Ldbq;Ldwj;)Z	a	placeLiquid
		p	1		world
		p	2		pos
		p	3		state
		p	4		fluidState
	m	()Lcpi;	b	getBodyBlock
	m	(Ldbq;)Ldwj;	c_	getFluidState
		p	1		state
	m	(Ldbq;)Z	g	canGrowInto
		p	1		state
	m	(Ldbq;)Z	h	canAttachTo
		p	1		state
	f	Ledx;	f	SHAPE
	f	D	g	GROW_PER_TICK_PROBABILITY
c	cth	net/minecraft/world/level/block/KelpPlantBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lclo;Lgt;Ldbq;Ldwi;)Z	a	canPlaceLiquid
		p	1		world
		p	2		pos
		p	3		state
		p	4		fluid
	m	(Lcmj;Lgt;Ldbq;Ldwj;)Z	a	placeLiquid
		p	1		world
		p	2		pos
		p	3		state
		p	4		fluidState
	m	()Lcss;	c	getHeadBlock
	m	(Ldbq;)Ldwj;	c_	getFluidState
		p	1		state
	m	(Ldbq;)Z	h	canAttachTo
		p	1		state
c	cti	net/minecraft/world/level/block/LadderBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lcic;)Ldbq;	a	getStateForPlacement
		p	1		ctx
	m	(Lclo;Lgt;Lgz;)Z	a	canAttachTo
		p	1		world
		p	2		pos
		p	3		side
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lcml;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lcua;)Ldbq;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldbq;Lcvq;)Ldbq;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldbq;)Ldwj;	c_	getFluidState
		p	1		state
	f	Ldcl;	a	FACING
	f	Ldci;	b	WATERLOGGED
	f	F	c	AABB_OFFSET
	f	Ledx;	d	EAST_AABB
	f	Ledx;	e	WEST_AABB
	f	Ledx;	f	SOUTH_AABB
	f	Ledx;	g	NORTH_AABB
c	cti$1	net/minecraft/world/level/block/LadderBlock$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	ctj	net/minecraft/world/level/block/LanternBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lcic;)Ldbq;	a	getStateForPlacement
		p	1		ctx
	m	(Ldbq;Lclo;Lgt;Ldxa;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lcml;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldbq;)Ldwj;	c_	getFluidState
		p	1		state
	m	(Ldbq;)Ldwp;	d	getPistonPushReaction
		p	1		state
	m	(Ldbq;)Lgz;	h	getConnectedDirection
		p	0		state
	f	Ldci;	a	HANGING
	f	Ldci;	b	WATERLOGGED
	f	Ledx;	c	AABB
	f	Ledx;	d	HANGING_AABB
c	ctk	net/minecraft/world/level/block/LavaCauldronBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Ldbq;)D	a	getContentHeight
		p	1		state
	m	(Ldbq;Lcmi;Lgt;)I	a	getAnalogOutputSignal
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lcmi;Lgt;Lbfh;)V	a	entityInside
		p	1		state
		p	2		world
		p	3		pos
		p	4		entity
	m	(Ldbq;)Z	c	isFull
		p	1		state
c	ctl	net/minecraft/world/level/block/LayeredCauldronBlock
	m	(Ldbp$d;Ljava/util/function/Predicate;Ljava/util/Map;)V	<init>	<init>
		p	1		settings
		p	2		precipitationPredicate
		p	3		behaviorMap
	m	(Lcnf$c;)Z	a	lambda$static$1
		p	0		precipitation
	m	(Ldbq;)D	a	getContentHeight
		p	1		state
	m	(Ldbq;Lcmi;Lgt;)I	a	getAnalogOutputSignal
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lcmi;Lgt;Lbfh;)V	a	entityInside
		p	1		state
		p	2		world
		p	3		pos
		p	4		entity
	m	(Ldbq;Lcmi;Lgt;Lcnf$c;)V	a	handlePrecipitation
		p	1		state
		p	2		world
		p	3		pos
		p	4		precipitation
	m	(Ldbq;Lcmi;Lgt;Ldwi;)V	a	receiveStalactiteDrip
		p	1		state
		p	2		world
		p	3		pos
		p	4		fluid
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldwi;)Z	a	canReceiveStalactiteDrip
		p	1		fluid
	m	(Lcnf$c;)Z	b	lambda$static$0
		p	0		precipitation
	m	(Ldbq;)Z	c	isFull
		p	1		state
	m	(Ldbq;Lcmi;Lgt;)V	d	handleEntityOnFireInside
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lcmi;Lgt;)V	e	lowerFillLevel
		p	0		state
		p	1		world
		p	2		pos
	f	I	c	MIN_FILL_LEVEL
	f	I	d	MAX_FILL_LEVEL
	f	Ldcr;	e	LEVEL
	f	Ljava/util/function/Predicate;	f	RAIN
	f	Ljava/util/function/Predicate;	g	SNOW
	f	I	h	BASE_CONTENT_HEIGHT
	f	D	i	HEIGHT_PER_LEVEL
	f	Ljava/util/function/Predicate;	j	fillPredicate
c	ctm	net/minecraft/world/level/block/LeavesBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lcic;)Ldbq;	a	getStateForPlacement
		p	1		ctx
	m	(Ldbq;Laip;Lgt;Lapo;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Lcmi;Lgt;Lapo;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Lcmj;Lgt;)Ldbq;	a	updateDistance
		p	0		state
		p	1		world
		p	2		pos
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldbq;Laip;Lgt;Lapo;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Lclo;Lgt;)Ledx;	b_	getBlockSupportShape
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;)Ldwj;	c_	getFluidState
		p	1		state
	m	(Ldbq;)Z	e_	isRandomlyTicking
		p	1		state
	m	(Ldbq;Lclo;Lgt;)I	g	getLightBlock
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;)Z	h	decaying
		p	1		state
	m	(Ldbq;)I	n	getDistanceAt
		p	0		state
	f	I	a	DECAY_DISTANCE
	f	Ldcr;	b	DISTANCE
	f	Ldci;	c	PERSISTENT
	f	Ldci;	d	WATERLOGGED
	f	I	e	TICK_DELAY
c	ctn	net/minecraft/world/level/block/LecternBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lbfh;Lcmi;Lgt;Ldbq;Lcfv;)Z	a	tryPlaceBook
		p	0		user
		p	1		world
		p	2		pos
		p	3		state
		p	4		stack
	m	(Lbfh;Lcmi;Lgt;Ldbq;Z)V	a	resetBookState
		p	0		user
		p	1		world
		p	2		pos
		p	3		state
		p	4		hasBook
	m	(Lcic;)Ldbq;	a	getStateForPlacement
		p	1		ctx
	m	(Lcmi;Lgt;Lbym;)V	a	openScreen
		p	1		world
		p	2		pos
		p	3		player
	m	(Lcmi;Lgt;Ldbq;)V	a	signalPageChange
		p	0		world
		p	1		pos
		p	2		state
	m	(Lcmi;Lgt;Ldbq;Z)V	a	changePowered
		p	0		world
		p	1		pos
		p	2		state
		p	3		powered
	m	(Ldbq;Laip;Lgt;Lapo;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Lclo;Lgt;Ldxa;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lclo;Lgt;Lgz;)I	a	getSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldbq;Lcmi;Lgt;)I	a	getAnalogOutputSignal
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lcmi;Lgt;Lbym;Lbdx;Leda;)Lbdy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldbq;Lcmi;Lgt;Ldbq;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Ldbq;Lcua;)Ldbq;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldbq;Lcvq;)Ldbq;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lgt;Ldbq;)Lcze;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Lbfh;Lcmi;Lgt;Ldbq;Lcfv;)V	b	placeBook
		p	0		user
		p	1		world
		p	2		pos
		p	3		state
		p	4		stack
	m	(Lcmi;Lgt;Ldbq;)V	b	updateBelow
		p	0		world
		p	1		pos
		p	2		state
	m	(Ldbq;Lclo;Lgt;Lgz;)I	b	getDirectSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldbq;Lcmi;Lgt;)Lbeb;	b	getMenuProvider
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;)Lcvj;	b_	getRenderShape
		p	1		state
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	c	getCollisionShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lcmi;Lgt;)V	d	popBook
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;)Z	d_	hasAnalogOutputSignal
		p	1		state
	m	(Ldbq;Lclo;Lgt;)Ledx;	f	getOcclusionShape
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;)Z	f_	isSignalSource
		p	1		state
	m	(Ldbq;)Z	g_	useShapeForLightOcclusion
		p	1		state
	f	Ldcl;	a	FACING
	f	Ldci;	b	POWERED
	f	Ldci;	c	HAS_BOOK
	f	Ledx;	d	SHAPE_BASE
	f	Ledx;	e	SHAPE_POST
	f	Ledx;	f	SHAPE_COMMON
	f	Ledx;	g	SHAPE_TOP_PLATE
	f	Ledx;	h	SHAPE_COLLISION
	f	Ledx;	i	SHAPE_WEST
	f	Ledx;	j	SHAPE_NORTH
	f	Ledx;	k	SHAPE_EAST
	f	Ledx;	l	SHAPE_SOUTH
	f	I	m	PAGE_CHANGE_IMPULSE_TICKS
c	ctn$1	net/minecraft/world/level/block/LecternBlock$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	cto	net/minecraft/world/level/block/LevelEvent
	f	I	A	SOUND_CHORUS_GROW
	f	I	B	SOUND_CHORUS_DEATH
	f	I	C	SOUND_BREWING_STAND_BREW
	f	I	D	SOUND_END_PORTAL_SPAWN
	f	I	E	SOUND_PHANTOM_BITE
	f	I	F	SOUND_ZOMBIE_TO_DROWNED
	f	I	G	SOUND_HUSK_TO_ZOMBIE
	f	I	H	SOUND_GRINDSTONE_USED
	f	I	I	SOUND_PAGE_TURN
	f	I	J	SOUND_SMITHING_TABLE_USED
	f	I	K	SOUND_POINTED_DRIPSTONE_LAND
	f	I	L	SOUND_DRIP_LAVA_INTO_CAULDRON
	f	I	M	SOUND_DRIP_WATER_INTO_CAULDRON
	f	I	N	SOUND_SKELETON_TO_STRAY
	f	I	O	COMPOSTER_FILL
	f	I	P	LAVA_FIZZ
	f	I	Q	REDSTONE_TORCH_BURNOUT
	f	I	R	END_PORTAL_FRAME_FILL
	f	I	S	DRIPSTONE_DRIP
	f	I	T	PARTICLES_AND_SOUND_PLANT_GROWTH
	f	I	U	PARTICLES_SHOOT
	f	I	V	PARTICLES_DESTROY_BLOCK
	f	I	W	PARTICLES_SPELL_POTION_SPLASH
	f	I	X	PARTICLES_EYE_OF_ENDER_DEATH
	f	I	Y	PARTICLES_MOBBLOCK_SPAWN
	f	I	Z	PARTICLES_PLANT_GROWTH
	f	I	a	SOUND_DISPENSER_DISPENSE
	f	I	aa	PARTICLES_DRAGON_FIREBALL_SPLASH
	f	I	ab	PARTICLES_INSTANT_POTION_SPLASH
	f	I	ac	PARTICLES_DRAGON_BLOCK_BREAK
	f	I	ad	PARTICLES_WATER_EVAPORATING
	f	I	ae	ANIMATION_END_GATEWAY_SPAWN
	f	I	af	ANIMATION_DRAGON_SUMMON_ROAR
	f	I	ag	PARTICLES_ELECTRIC_SPARK
	f	I	ah	PARTICLES_AND_SOUND_WAX_ON
	f	I	ai	PARTICLES_WAX_OFF
	f	I	aj	PARTICLES_SCRAPE
	f	I	ak	PARTICLES_SCULK_CHARGE
	f	I	al	PARTICLES_SCULK_SHRIEK
	f	I	am	PARTICLES_AND_SOUND_BRUSH_BLOCK_COMPLETE
	f	I	b	SOUND_DISPENSER_FAIL
	f	I	c	SOUND_DISPENSER_PROJECTILE_LAUNCH
	f	I	d	SOUND_ENDER_EYE_LAUNCH
	f	I	e	SOUND_FIREWORK_SHOOT
	f	I	f	SOUND_EXTINGUISH_FIRE
	f	I	g	SOUND_PLAY_JUKEBOX_SONG
	f	I	h	SOUND_STOP_JUKEBOX_SONG
	f	I	i	SOUND_GHAST_WARNING
	f	I	j	SOUND_GHAST_FIREBALL
	f	I	k	SOUND_DRAGON_FIREBALL
	f	I	l	SOUND_BLAZE_FIREBALL
	f	I	m	SOUND_ZOMBIE_WOODEN_DOOR
	f	I	n	SOUND_ZOMBIE_IRON_DOOR
	f	I	o	SOUND_ZOMBIE_DOOR_CRASH
	f	I	p	SOUND_WITHER_BLOCK_BREAK
	f	I	q	SOUND_WITHER_BOSS_SPAWN
	f	I	r	SOUND_WITHER_BOSS_SHOOT
	f	I	s	SOUND_BAT_LIFTOFF
	f	I	t	SOUND_ZOMBIE_INFECTED
	f	I	u	SOUND_ZOMBIE_CONVERTED
	f	I	v	SOUND_DRAGON_DEATH
	f	I	w	SOUND_ANVIL_BROKEN
	f	I	x	SOUND_ANVIL_USED
	f	I	y	SOUND_ANVIL_LAND
	f	I	z	SOUND_PORTAL_TRAVEL
c	ctp	net/minecraft/world/level/block/LeverBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lclo;Lgt;Lgz;)I	a	getSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldbq;Lcmi;Lgt;Lapo;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Lcmi;Lgt;Lbym;Lbdx;Leda;)Lbdy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldbq;Lcmi;Lgt;Ldbq;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Ldbq;Lcmj;Lgt;F)V	a	makeParticle
		p	0		state
		p	1		world
		p	2		pos
		p	3		alpha
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldbq;Lclo;Lgt;Lgz;)I	b	getDirectSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldbq;Lcmi;Lgt;)Ldbq;	d	pull
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lcmi;Lgt;)V	e	updateNeighbours
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;)Z	f_	isSignalSource
		p	1		state
	f	Ldci;	a	POWERED
	f	I	b	DEPTH
	f	I	c	WIDTH
	f	I	d	HEIGHT
	f	Ledx;	e	NORTH_AABB
	f	Ledx;	f	SOUTH_AABB
	f	Ledx;	g	WEST_AABB
	f	Ledx;	h	EAST_AABB
	f	Ledx;	i	UP_AABB_Z
	f	Ledx;	j	UP_AABB_X
	f	Ledx;	k	DOWN_AABB_Z
	f	Ledx;	l	DOWN_AABB_X
c	ctp$1	net/minecraft/world/level/block/LeverBlock$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction$Axis
	f	[I	b	$SwitchMap$net$minecraft$core$Direction
	f	[I	c	$SwitchMap$net$minecraft$world$level$block$state$properties$AttachFace
c	ctq	net/minecraft/world/level/block/LightBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lcfv;I)Lcfv;	a	setLightOnStack
		p	0		stack
		p	1		level
	m	(Lclo;Lgt;Ldbq;)Lcfv;	a	getCloneItemStack
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lcmi;Lgt;Lbym;Lbdx;Leda;)Lbdy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldbq;Lclo;Lgt;)F	b	getShadeBrightness
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;)Lcvj;	b_	getRenderShape
		p	1		state
	m	(Ldbq;Lclo;Lgt;)Z	c	propagatesSkylightDown
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;)Ldwj;	c_	getFluidState
		p	1		state
	m	(Ldbq;)I	h	lambda$static$0
		p	0		state
	f	I	a	MAX_LEVEL
	f	Ldcr;	b	LEVEL
	f	Ldci;	c	WATERLOGGED
	f	Ljava/util/function/ToIntFunction;	d	LIGHT_EMISSION
c	ctr	net/minecraft/world/level/block/LightningRodBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lcic;)Ldbq;	a	getStateForPlacement
		p	1		ctx
	m	(Lcmi;Ldbq;Leda;Lbze;)V	a	onProjectileHit
		p	1		world
		p	2		state
		p	3		hit
		p	4		projectile
	m	(Ldbq;Laip;Lgt;Lapo;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Lclo;Lgt;Lgz;)I	a	getSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldbq;Lcmi;Lgt;Lapo;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Lcmi;Lgt;Ldbq;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldbq;Lclo;Lgt;Lgz;)I	b	getDirectSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldbq;Lcmi;Lgt;Ldbq;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	m	(Ldbq;)Ldwj;	c_	getFluidState
		p	1		state
	m	(Ldbq;Lcmi;Lgt;)V	d	onLightningStrike
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lcmi;Lgt;)V	e	updateNeighbours
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;)Z	f_	isSignalSource
		p	1		state
	f	Ldci;	b	WATERLOGGED
	f	Ldci;	c	POWERED
	f	I	d	RANGE
	f	I	j	ACTIVATION_TICKS
	f	I	k	SPARK_CYCLE
c	cts	net/minecraft/world/level/block/LiquidBlock
	m	(Ldwh;Ldbp$d;)V	<init>	<init>
		p	1		fluid
		p	2		settings
	m	(Lcmi;Lgt;Ldbq;)Z	a	shouldSpreadLiquid
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcmj;Lgt;)V	a	fizz
		p	1		world
		p	2		pos
	m	(Ldbq;Lclo;Lgt;Ldxa;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lcmi;Lgt;Lcpi;Lgt;Z)V	a	neighborChanged
		p	1		state
		p	2		world
		p	3		pos
		p	4		sourceBlock
		p	5		sourcePos
		p	6		notify
	m	(Ldbq;Ldbq;Lgz;)Z	a	skipRendering
		p	1		state
		p	2		stateFrom
		p	3		direction
	m	(Ldbq;Ldyr$a;)Ljava/util/List;	a	getDrops
		p	1		state
		p	2		builder
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	()Ljava/util/Optional;	an_	getPickupSound
	m	(Ldbq;Laip;Lgt;Lapo;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Lcmi;Lgt;Ldbq;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	m	(Ldbq;)Lcvj;	b_	getRenderShape
		p	1		state
	m	(Lcmj;Lgt;Ldbq;)Lcfv;	c	pickupBlock
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldbq;Lclo;Lgt;)Z	c	propagatesSkylightDown
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	c	getCollisionShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;)Ldwj;	c_	getFluidState
		p	1		state
	m	(Ldbq;)Z	e_	isRandomlyTicking
		p	1		state
	f	Ldcr;	a	LEVEL
	f	Ldwh;	b	fluid
	f	Ledx;	c	STABLE_SHAPE
	f	Lcom/google/common/collect/ImmutableList;	d	POSSIBLE_FLOW_DIRECTIONS
	f	Ljava/util/List;	e	stateCache
c	ctt	net/minecraft/world/level/block/LiquidBlockContainer
	m	(Lclo;Lgt;Ldbq;Ldwi;)Z	a	canPlaceLiquid
		p	1		world
		p	2		pos
		p	3		state
		p	4		fluid
	m	(Lcmj;Lgt;Ldbq;Ldwj;)Z	a	placeLiquid
		p	1		world
		p	2		pos
		p	3		state
		p	4		fluidState
c	ctu	net/minecraft/world/level/block/LoomBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lcic;)Ldbq;	a	getStateForPlacement
		p	1		ctx
	m	(Lcmi;Lgt;ILbyl;Lbym;)Lcbd;	a	lambda$getMenuProvider$0
		p	2		syncId
		p	3		inventory
		p	4		player
	m	(Ldbq;Lcmi;Lgt;Lbym;Lbdx;Leda;)Lbdy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldbq;Lcmi;Lgt;)Lbeb;	b	getMenuProvider
		p	1		state
		p	2		world
		p	3		pos
	f	Ltj;	a	CONTAINER_TITLE
c	ctv	net/minecraft/world/level/block/MagmaBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lcmi;Lgt;Ldbq;Lbfh;)V	a	stepOn
		p	1		world
		p	2		pos
		p	3		state
		p	4		entity
	m	(Ldbq;Laip;Lgt;Lapo;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldbq;Laip;Lgt;Lapo;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Lcmi;Lgt;Ldbq;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	f	I	a	BUBBLE_COLUMN_CHECK_DELAY
c	ctw	net/minecraft/world/level/block/MangroveLeavesBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Laip;Lapo;Lgt;Ldbq;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcmi;Lapo;Lgt;Ldbq;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcml;Lgt;Ldbq;Z)Z	a	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
		p	4		isClient
c	ctx	net/minecraft/world/level/block/MangrovePropaguleBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Laip;Lapo;Lgt;Ldbq;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcic;)Ldbq;	a	getStateForPlacement
		p	1		ctx
	m	(Lcmi;Lapo;Lgt;Ldbq;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcml;Lgt;Ldbq;Z)Z	a	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
		p	4		isClient
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lcml;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(I)Ldbq;	b	createNewHangingPropagule
		p	0		age
	m	(Ldbq;Laip;Lgt;Lapo;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	()Ldbq;	c	createNewHangingPropagule
	m	(Ldbq;)Ldwj;	c_	getFluidState
		p	1		state
	m	(Ldbq;Lclo;Lgt;)Z	d	mayPlaceOn
		p	1		floor
		p	2		world
		p	3		pos
	m	(Ldbq;)Z	h	isHanging
		p	0		state
	m	(Ldbq;)Z	n	isFullyGrown
		p	0		state
	f	Ldcr;	a	AGE
	f	I	b	MAX_AGE
	f	Ldci;	c	HANGING
	f	[Ledx;	g	SHAPE_PER_AGE
	f	Ldci;	h	WATERLOGGED
	f	F	i	GROW_TALL_MANGROVE_PROBABILITY
c	cty	net/minecraft/world/level/block/MangroveRootsBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lcic;)Ldbq;	a	getStateForPlacement
		p	1		ctx
	m	(Ldbq;Ldbq;Lgz;)Z	a	skipRendering
		p	1		state
		p	2		stateFrom
		p	3		direction
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldbq;)Ldwj;	c_	getFluidState
		p	1		state
	f	Ldci;	a	WATERLOGGED
c	ctz	net/minecraft/world/level/block/MelonBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	()Lcwz;	b	getStem
	m	()Lcoj;	c	getAttachedStem
c	cua	net/minecraft/world/level/block/Mirror
	m	(Ljava/lang/String;ILjava/lang/String;Lh;)V	<init>	<init>
		p	3		id
		p	4		directionTransformation
	m	()Lh;	a	rotation
	m	(II)I	a	mirror
		p	1		rotation
		p	2		fullTurn
	m	(Lgz;)Lcvq;	a	getRotation
		p	1		direction
	m	()Ltj;	b	symbol
	m	(Lgz;)Lgz;	b	mirror
		p	1		direction
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Lcua;	d	$values
	f	Lcua;	a	NONE
	f	Lcua;	b	LEFT_RIGHT
	f	Lcua;	c	FRONT_BACK
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	Ljava/lang/String;	e	id
	f	Ltj;	f	symbol
	f	Lh;	g	rotation
	f	[Lcua;	h	$VALUES
c	cua$1	net/minecraft/world/level/block/Mirror$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$Mirror
c	cub	net/minecraft/world/level/block/MossBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Laip;Lapo;Lgt;Ldbq;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Laip;Lapo;Lgt;Lhd$c;)V	a	lambda$performBonemeal$1
	m	(Lcmi;Lapo;Lgt;Ldbq;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcml;Lgt;Ldbq;Z)Z	a	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
		p	4		isClient
	m	(Lhq;)Ljava/util/Optional;	a	lambda$performBonemeal$0
c	cuc	net/minecraft/world/level/block/MudBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Ldbq;Lclo;Lgt;Ldxa;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldbq;Lclo;Lgt;)F	b	getShadeBrightness
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	b	getVisualShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lclo;Lgt;)Ledx;	b_	getBlockSupportShape
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	c	getCollisionShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	f	Ledx;	a	SHAPE
c	cud	net/minecraft/world/level/block/MultifaceBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(B)Ljava/util/Set;	a	unpack
		p	0		flag
	m	(Lcic;)Ldbq;	a	getStateForPlacement
		p	1		ctx
	m	(Lclo;Ldbq;Lgt;Lgz;)Z	a	isValidStateForPlacement
		p	1		world
		p	2		state
		p	3		pos
		p	4		direction
	m	(Lclo;Lgz;Lgt;Ldbq;)Z	a	canAttachTo
		p	0		world
		p	1		direction
		p	2		pos
		p	3		state
	m	(Ldbq;Lcic;)Z	a	canBeReplaced
		p	1		state
		p	2		context
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lcmi;Lgt;Lgz;)Ldbq;	a	lambda$getStateForPlacement$1
		p	4		direction
	m	(Ldbq;Lcml;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lcua;)Ldbq;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldbq;Lcvq;)Ldbq;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldbq;Ldci;)Ldbq;	a	removeFace
		p	0		state
		p	1		direction
	m	(Ldbq;Lgz;)Z	a	hasFace
		p	0		state
		p	1		direction
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldbq;Ljava/util/function/Function;)Ldbq;	a	mapDirections
		p	1		state
		p	2		mirror
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldbr;)Ldbq;	a	getDefaultMultifaceState
		p	0		stateManager
	m	(Lgz;)Z	a	isFaceSupported
		p	1		direction
	m	(Ljava/util/Collection;)B	a	pack
		p	0		directions
	m	(Ljava/util/EnumMap;)V	a	lambda$static$0
		p	0		shapes
	m	(Ldbq;Lgz;)Z	b	lambda$hasAnyVacantFace$3
		p	1		direction
	m	(Lgz;)Ldci;	b	getFaceProperty
		p	0		direction
	m	()Lcue;	c	getSpreader
	m	(Ldbq;Lclo;Lgt;Lgz;)Ldbq;	c	getStateForPlacement
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldbq;Lgz;)Z	c	lambda$hasAnyFace$2
		p	1		direction
	m	()Z	g	isWaterloggable
	m	(Ldbq;)Ljava/util/Set;	h	availableFaces
		p	0		state
	m	(Ldbq;)Z	n	hasAnyFace
		p	0		state
	m	(Ldbq;)Ledx;	o	calculateMultifaceShape
		p	0		state
	m	(Ldbq;)Z	p	hasAnyVacantFace
		p	0		state
	f	[Lgz;	a	DIRECTIONS
	f	F	b	AABB_OFFSET
	f	Ledx;	c	UP_AABB
	f	Ledx;	d	DOWN_AABB
	f	Ledx;	e	WEST_AABB
	f	Ledx;	f	EAST_AABB
	f	Ledx;	g	NORTH_AABB
	f	Ledx;	h	SOUTH_AABB
	f	Ljava/util/Map;	i	PROPERTY_BY_DIRECTION
	f	Ljava/util/Map;	j	SHAPE_BY_DIRECTION
	f	Lcom/google/common/collect/ImmutableMap;	k	shapesCache
	f	Z	l	canRotate
	f	Z	m	canMirrorX
	f	Z	n	canMirrorZ
c	cue	net/minecraft/world/level/block/MultifaceSpreader
	m	(Lcud;)V	<init>	<init>
		p	1		lichen
	m	(Lcue$b;)V	<init>	<init>
		p	1		growChecker
	m	(Lcmj;Lcue$c;Z)Ljava/util/Optional;	a	spreadToFace
		p	1		world
		p	2		pos
		p	3		markForPostProcessing
	m	(Lcmj;ZLcue$c;)Ljava/util/Optional;	a	lambda$spreadFromFaceTowardDirection$7
		p	3		growPos
	m	(Ldbq;Lclo;Lgt;Lgz;)Z	a	canSpreadInAnyDirection
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldbq;Lclo;Lgt;Lgz;Lgz;)Z	a	lambda$canSpreadInAnyDirection$0
		p	5		direction2
	m	(Ldbq;Lclo;Lgt;Lgz;Lgz;Lcue$d;)Ljava/util/Optional;	a	getSpreadFromFaceTowardDirection
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldDirection
		p	5		newDirection
		p	6		predicate
	m	(Ldbq;Lcmj;Lgt;Lapo;)Ljava/util/Optional;	a	spreadFromRandomFaceTowardRandomDirection
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Lcmj;Lgt;Lapo;Lgz;)Ljava/util/Optional;	a	lambda$spreadFromRandomFaceTowardRandomDirection$2
		p	5		direction
	m	(Ldbq;Lcmj;Lgt;Lgz;Lapo;Z)Ljava/util/Optional;	a	spreadFromFaceTowardRandomDirection
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
		p	5		random
		p	6		markForPostProcessing
	m	(Ldbq;Lcmj;Lgt;Lgz;Lgz;Z)Ljava/util/Optional;	a	spreadFromFaceTowardDirection
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldDirection
		p	5		newDirection
		p	6		markForPostProcessing
	m	(Ldbq;Lcmj;Lgt;Lgz;Z)J	a	spreadFromFaceTowardAllDirections
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
		p	5		markForPostProcessing
	m	(Ldbq;Lcmj;Lgt;Lgz;ZLgz;)Ljava/util/Optional;	a	lambda$spreadFromFaceTowardAllDirections$6
		p	6		direction2
	m	(Ldbq;Lcmj;Lgt;Z)J	a	spreadAll
		p	1		state
		p	2		world
		p	3		pos
		p	4		markForPostProcessing
	m	(Ldbq;Lcmj;Lgt;ZLgz;)Ljava/lang/Long;	a	lambda$spreadAll$4
		p	5		direction
	m	(Ldbq;Lgz;)Z	a	lambda$spreadAll$3
		p	2		direction
	m	(Ldbq;Lcmj;Lgt;Lgz;ZLgz;)Ljava/util/Optional;	b	lambda$spreadFromFaceTowardRandomDirection$5
		p	6		direction2
	m	(Ldbq;Lgz;)Z	b	lambda$spreadFromRandomFaceTowardRandomDirection$1
		p	2		direction
	f	[Lcue$e;	a	DEFAULT_SPREAD_ORDER
	f	Lcue$b;	b	config
c	cue$a	net/minecraft/world/level/block/MultifaceSpreader$DefaultSpreaderConfig
	m	(Lcud;)V	<init>	<init>
		p	1		lichen
	m	(Lclo;Lgt;Lcue$c;)Z	a	canSpreadInto
		p	1		world
		p	2		pos
		p	3		growPos
	m	(Lclo;Lgt;Lgt;Lgz;Ldbq;)Z	a	stateCanBeReplaced
		p	1		world
		p	2		pos
		p	3		growPos
		p	4		direction
		p	5		state
	m	(Ldbq;Lclo;Lgt;Lgz;)Ldbq;	a	getStateForPlacement
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	f	Lcud;	a	block
c	cue$b	net/minecraft/world/level/block/MultifaceSpreader$SpreadConfig
	m	()[Lcue$e;	a	getSpreadTypes
	m	(Lclo;Lgt;Lcue$c;)Z	a	canSpreadInto
		p	1		world
		p	2		pos
		p	3		growPos
	m	(Lcmj;Lcue$c;Ldbq;Z)Z	a	placeBlock
		p	1		world
		p	2		growPos
		p	3		state
		p	4		markForPostProcessing
	m	(Ldbq;)Z	a	isOtherBlockValidAsSource
		p	1		state
	m	(Ldbq;Lclo;Lgt;Lgz;)Ldbq;	a	getStateForPlacement
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldbq;Lgz;)Z	a	hasFace
		p	1		state
		p	2		direction
	m	(Ldbq;Lgz;)Z	b	canSpreadFrom
		p	1		state
		p	2		direction
c	cue$c	net/minecraft/world/level/block/MultifaceSpreader$SpreadPos
	m	()Lgt;	a	pos
	m	()Lgz;	b	face
	f	Lgt;	a	pos
	f	Lgz;	b	face
c	cue$d	net/minecraft/world/level/block/MultifaceSpreader$SpreadPredicate
	m	(Lclo;Lgt;Lcue$c;)Z	test	test
		p	1		world
		p	2		pos
		p	3		growPos
c	cue$e	net/minecraft/world/level/block/MultifaceSpreader$SpreadType
	m	()[Lcue$e;	a	$values
	m	(Lgt;Lgz;Lgz;)Lcue$c;	a	getSpreadPos
		p	1		pos
		p	2		newDirection
		p	3		oldDirection
	f	Lcue$e;	a	SAME_POSITION
	f	Lcue$e;	b	SAME_PLANE
	f	Lcue$e;	c	WRAP_AROUND
	f	[Lcue$e;	d	$VALUES
c	cue$e$1	net/minecraft/world/level/block/MultifaceSpreader$SpreadType$1
	m	(Lgt;Lgz;Lgz;)Lcue$c;	a	getSpreadPos
		p	1		pos
		p	2		newDirection
		p	3		oldDirection
c	cue$e$2	net/minecraft/world/level/block/MultifaceSpreader$SpreadType$2
	m	(Lgt;Lgz;Lgz;)Lcue$c;	a	getSpreadPos
		p	1		pos
		p	2		newDirection
		p	3		oldDirection
c	cue$e$3	net/minecraft/world/level/block/MultifaceSpreader$SpreadType$3
	m	(Lgt;Lgz;Lgz;)Lcue$c;	a	getSpreadPos
		p	1		pos
		p	2		newDirection
		p	3		oldDirection
c	cuf	net/minecraft/world/level/block/MushroomBlock
	m	(Ldbp$d;Ladc;)V	<init>	<init>
		p	1		settings
		p	2		featureKey
	m	(Laip;Lapo;Lgt;Ldbq;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Laip;Lgt;Ldbq;Lapo;)Z	a	growMushroom
		p	1		world
		p	2		pos
		p	3		state
		p	4		random
	m	(Lcmi;Lapo;Lgt;Ldbq;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcml;Lgt;Ldbq;Z)Z	a	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
		p	4		isClient
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lcml;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Laip;Lgt;Lapo;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Lclo;Lgt;)Z	d	mayPlaceOn
		p	1		floor
		p	2		world
		p	3		pos
	f	F	a	AABB_OFFSET
	f	Ledx;	b	SHAPE
	f	Ladc;	c	feature
c	cug	net/minecraft/world/level/block/MyceliumBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Ldbq;Lcmi;Lgt;Lapo;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
c	cuh	net/minecraft/world/level/block/NetherPortalBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lclo;Lgt;Ldbq;)Lcfv;	a	getCloneItemStack
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lcmi;Lgt;Lapo;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Lcmi;Lgt;Lbfh;)V	a	entityInside
		p	1		state
		p	2		world
		p	3		pos
		p	4		entity
	m	(Ldbq;Lcvq;)Ldbq;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldbq;Laip;Lgt;Lapo;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	f	Ldcp;	a	AXIS
	f	I	b	AABB_OFFSET
	f	Ledx;	c	X_AXIS_AABB
	f	Ledx;	d	Z_AXIS_AABB
c	cuh$1	net/minecraft/world/level/block/NetherPortalBlock$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction$Axis
	f	[I	b	$SwitchMap$net$minecraft$world$level$block$Rotation
c	cui	net/minecraft/world/level/block/NetherSproutsBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lclo;Lgt;)Z	d	mayPlaceOn
		p	1		floor
		p	2		world
		p	3		pos
	f	Ledx;	a	SHAPE
c	cuj	net/minecraft/world/level/block/NetherVines
	m	(Lapo;)I	a	getBlocksToGrowWhenBonemealed
		p	0		random
	m	(Ldbq;)Z	a	isValidGrowthState
		p	0		state
	f	D	a	GROW_PER_TICK_PROBABILITY
	f	D	b	BONEMEAL_GROW_PROBABILITY_DECREASE_RATE
c	cuk	net/minecraft/world/level/block/NetherWartBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lclo;Lgt;Ldbq;)Lcfv;	a	getCloneItemStack
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldbq;Laip;Lgt;Lapo;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Lclo;Lgt;)Z	d	mayPlaceOn
		p	1		floor
		p	2		world
		p	3		pos
	m	(Ldbq;)Z	e_	isRandomlyTicking
		p	1		state
	f	I	a	MAX_AGE
	f	Ldcr;	b	AGE
	f	[Ledx;	c	SHAPE_BY_AGE
c	cul	net/minecraft/world/level/block/NetherrackBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Laip;Lapo;Lgt;Ldbq;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcmi;Lapo;Lgt;Ldbq;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcml;Lgt;Ldbq;Z)Z	a	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
		p	4		isClient
c	cum	net/minecraft/world/level/block/NoteBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lbfh;Ldbq;Lcmi;Lgt;)V	a	playNote
		p	1		entity
		p	2		state
		p	3		world
		p	4		pos
	m	(Lcic;)Ldbq;	a	getStateForPlacement
		p	1		ctx
	m	(Lcmi;Lgt;)Ladd;	a	getCustomSoundId
		p	1		world
		p	2		pos
	m	(Lcmj;)Z	a	isFeatureFlagEnabled
		p	0		world
	m	(Lcmj;Lgt;)Ldcs;	a	lambda$setInstrument$0
	m	(Ldbq;Lcmi;Lgt;II)Z	a	triggerEvent
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
		p	5		data
	m	(Ldbq;Lcmi;Lgt;Lbym;)V	a	attack
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
	m	(Ldbq;Lcmi;Lgt;Lbym;Lbdx;Leda;)Lbdy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldbq;Lcmi;Lgt;Lcpi;Lgt;Z)V	a	neighborChanged
		p	1		state
		p	2		world
		p	3		pos
		p	4		sourceBlock
		p	5		sourcePos
		p	6		notify
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lcmj;Lgt;Ldbq;)Ldbq;	b	setInstrument
		p	1		world
		p	2		pos
		p	3		state
	f	Ldcp;	a	INSTRUMENT
	f	Ldci;	b	POWERED
	f	Ldcr;	c	NOTE
	f	I	d	NOTE_VOLUME
c	cun	net/minecraft/world/level/block/NyliumBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Laip;Lapo;Lgt;Ldbq;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Laip;Lddo;Lapo;Lgt;Lhd$c;)V	a	lambda$place$0
		p	4		entry
	m	(Lcmi;Lapo;Lgt;Ldbq;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcml;Lgt;Ldbq;Z)Z	a	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
		p	4		isClient
	m	(Lhq;Ladc;Laip;Lddo;Lapo;Lgt;)V	a	place
		p	1		registry
		p	2		key
		p	3		world
		p	4		chunkGenerator
		p	5		random
		p	6		pos
	m	(Ldbq;Laip;Lgt;Lapo;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Lcml;Lgt;)Z	b	canBeNylium
		p	0		state
		p	1		world
		p	2		pos
c	cuo	net/minecraft/world/level/block/ObserverBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lcic;)Ldbq;	a	getStateForPlacement
		p	1		ctx
	m	(Lcmi;Lgt;Ldbq;)V	a	updateNeighborsInFront
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcmj;Lgt;)V	a	startSignal
		p	1		world
		p	2		pos
	m	(Ldbq;Laip;Lgt;Lapo;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Lclo;Lgt;Lgz;)I	a	getSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldbq;Lcmi;Lgt;Ldbq;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Ldbq;Lcua;)Ldbq;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldbq;Lcvq;)Ldbq;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldbq;Lclo;Lgt;Lgz;)I	b	getDirectSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldbq;Lcmi;Lgt;Ldbq;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	m	(Ldbq;)Z	f_	isSignalSource
		p	1		state
	f	Ldci;	b	POWERED
c	cup	net/minecraft/world/level/block/PiglinWallSkullBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	f	Ljava/util/Map;	b	AABBS
c	cuq	net/minecraft/world/level/block/PinkPetalsBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Laip;Lapo;Lgt;Ldbq;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcic;)Ldbq;	a	getStateForPlacement
		p	1		ctx
	m	(Lcmi;Lapo;Lgt;Ldbq;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcml;Lgt;Ldbq;Z)Z	a	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
		p	4		isClient
	m	(Ldbq;Lcic;)Z	a	canBeReplaced
		p	1		state
		p	2		context
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lcua;)Ldbq;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldbq;Lcvq;)Ldbq;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	f	I	a	MIN_FLOWERS
	f	I	b	MAX_FLOWERS
	f	Ldcl;	c	FACING
	f	Ldcr;	d	AMOUNT
c	cur	net/minecraft/world/level/block/PipeBlock
	m	(FLdbp$d;)V	<init>	<init>
		p	1		radius
		p	2		settings
	m	(F)[Ledx;	a	makeShapes
		p	1		radius
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ljava/util/EnumMap;)V	a	lambda$static$0
		p	0		directions
	m	(Ldbq;Lclo;Lgt;)Z	c	propagatesSkylightDown
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;)I	h	getAABBIndex
		p	1		state
	f	Ldci;	a	NORTH
	f	Ldci;	b	EAST
	f	Ldci;	c	SOUTH
	f	Ldci;	d	WEST
	f	Ldci;	e	UP
	f	Ldci;	f	DOWN
	f	Ljava/util/Map;	g	PROPERTY_BY_DIRECTION
	f	[Ledx;	h	shapeByIndex
	f	[Lgz;	i	DIRECTIONS
c	cus	net/minecraft/world/level/block/PlayerHeadBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lcmi;Lgt;Ldbq;Lbfx;Lcfv;)V	a	setPlacedBy
		p	1		world
		p	2		pos
		p	3		state
		p	4		placer
		p	5		itemStack
c	cut	net/minecraft/world/level/block/PlayerWallHeadBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lcmi;Lgt;Ldbq;Lbfx;Lcfv;)V	a	setPlacedBy
		p	1		world
		p	2		pos
		p	3		state
		p	4		placer
		p	5		itemStack
	m	(Ldbq;Ldyr$a;)Ljava/util/List;	a	getDrops
		p	1		state
		p	2		builder
c	cuu	net/minecraft/world/level/block/PointedDripstoneBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(FLcuu$a;)Z	a	lambda$animateTick$0
		p	1		fluid
	m	(Laip;Lgt;)Ldwi;	a	getCauldronFillFluidType
		p	0		world
		p	1		pos
	m	(Laip;Lgt;Lgz;)V	a	grow
		p	0		world
		p	1		pos
		p	2		direction
	m	(Lbfh;)Lbem;	a	getFallDamageSource
		p	1		attacker
	m	(Lcic;)Ldbq;	a	getStateForPlacement
		p	1		ctx
	m	(Lcmi;Ldbq;Leda;Lbze;)V	a	onProjectileHit
		p	1		world
		p	2		state
		p	3		hit
		p	4		projectile
	m	(Lcmi;Ldbq;Lgt;Lbfh;F)V	a	fallOn
		p	1		world
		p	2		state
		p	3		pos
		p	4		entity
		p	5		fallDistance
	m	(Lcmi;Ldwi;)Ldwi;	a	getDripFluid
		p	0		world
		p	1		fluid
	m	(Lcmi;Lgt;)Lgt;	a	findStalactiteTipAboveCauldron
		p	0		world
		p	1		pos
	m	(Lcmi;Lgt;Lbve;)V	a	onBrokenAfterFall
		p	1		world
		p	2		pos
		p	3		fallingBlockEntity
	m	(Lcmi;Lgt;Ldbq;)V	a	spawnDripParticle
		p	0		world
		p	1		pos
		p	2		state
	m	(Lcmi;Lgt;Ldbq;I)Ljava/util/Optional;	a	findRootBlock
		p	0		world
		p	1		pos
		p	2		state
		p	3		range
	m	(Lcmi;Lgt;Ldbq;Lcuu$a;)V	a	lambda$spawnDripParticle$2
		p	3		fluid
	m	(Lcmi;Lgt;Ldbq;Ldwi;)V	a	spawnDripParticle
		p	0		world
		p	1		pos
		p	2		state
		p	3		fluid
	m	(Lcmi;Lgt;Ldwi;)Lgt;	a	findFillableCauldronBelowStalactiteTip
		p	0		world
		p	1		pos
		p	2		fluid
	m	(Lcmj;Lgt;Lgz$b;Ljava/util/function/BiPredicate;Ljava/util/function/Predicate;I)Ljava/util/Optional;	a	findBlockVertical
		p	0		world
		p	1		pos
		p	2		direction
		p	3		continuePredicate
		p	4		stopPredicate
		p	5		range
	m	(Lcmj;Lgt;Lgz;Ldco;)V	a	createDripstone
		p	0		world
		p	1		pos
		p	2		direction
		p	3		thickness
	m	(Lcml;Lgt;Lgz;Z)Ldco;	a	calculateDripstoneThickness
		p	0		world
		p	1		pos
		p	2		direction
		p	3		tryMerge
	m	(Lcuu$a;)Ldwi;	a	lambda$getCauldronFillFluidType$10
		p	0		fluid
	m	(Ldbq;Laip;Lgt;)V	a	spawnFallingStalactite
		p	0		state
		p	1		world
		p	2		pos
	m	(Ldbq;Laip;Lgt;F)V	a	maybeTransferFluid
		p	0		state
		p	1		world
		p	2		pos
		p	3		dripChance
	m	(Ldbq;Laip;Lgt;Lapo;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Lclo;Lgt;Ldxa;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lcmi;Lgt;Lapo;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Lcmj;Lgt;)V	a	createMergedTips
		p	0		state
		p	1		world
		p	2		pos
	m	(Ldbq;Lcmj;Lgt;IZ)Lgt;	a	findTip
		p	0		state
		p	1		world
		p	2		pos
		p	3		range
		p	4		allowMerged
	m	(Ldbq;Lcml;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Ldbq;)Z	a	canGrow
		p	0		dripstoneBlockState
		p	1		waterState
	m	(Ldbq;Lgz;)Z	a	isUnmergedTipWithDirection
		p	0		state
		p	1		direction
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldbq;Z)Z	a	isTip
		p	0		state
		p	1		allowMerged
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldwi;)Z	a	canFillCauldron
		p	0		fluid
	m	(Ldwi;Ldbq;)Z	a	lambda$findFillableCauldronBelowStalactiteTip$7
		p	1		state
	m	(Lgz;Lgt;Ldbq;)Z	a	lambda$findRootBlock$5
		p	1		pos
		p	2		state
	m	(ZLdbq;)Z	a	lambda$findTip$4
		p	1		state
	m	(Ldbq;Lclo;Lgt;)Z	a_	isCollisionShapeFullBlock
		p	1		state
		p	2		world
		p	3		pos
	m	()Ljava/util/function/Predicate;	al_	getHurtsEntitySelector
	m	()F	am_	getMaxHorizontalOffset
	m	(Laip;Lgt;)V	b	growStalagmiteBelow
		p	0		world
		p	1		pos
	m	(Lclo;Lgt;Ldbq;)Z	b	canDripThrough
		p	0		world
		p	1		pos
		p	2		state
	m	(Lcmi;Lgt;)Lcuu$a;	b	lambda$getFluidAboveStalactite$11
		p	1		pos
	m	(Lcmi;Lgt;Ldbq;)Ljava/util/Optional;	b	getFluidAboveStalactite
		p	0		world
		p	1		pos
		p	2		state
	m	(Lcmi;Lgt;Ldbq;Lcuu$a;)V	b	lambda$animateTick$1
		p	3		fluid
	m	(Lcml;Lgt;Lgz;)Lgz;	b	calculateTipDirection
		p	0		world
		p	1		pos
		p	2		direction
	m	(Ldbq;Laip;Lgt;)Z	b	canTipGrow
		p	0		state
		p	1		world
		p	2		pos
	m	(Ldbq;Laip;Lgt;Lapo;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Lcml;Lgt;)Z	b	isStalactiteStartPos
		p	0		state
		p	1		world
		p	2		pos
	m	(Ldbq;Lgz;)Z	b	isPointedDripstoneWithDirection
		p	0		state
		p	1		direction
	m	(Lgz;Lgt;Ldbq;)Z	b	lambda$findTip$3
		p	1		pos
		p	2		state
	m	(Lcmi;Lgt;Ldbq;)Z	c	lambda$findStalactiteTipAboveCauldron$9
		p	1		pos
		p	2		state
	m	(Lcml;Lgt;Lgz;)Z	c	isValidPointedDripstonePlacement
		p	0		world
		p	1		pos
		p	2		direction
	m	(Ldbq;Laip;Lgt;Lapo;)V	c	growStalactiteOrStalagmiteIfPossible
		p	0		state
		p	1		world
		p	2		pos
		p	3		random
	m	(Ldbq;)Ldwj;	c_	getFluidState
		p	1		state
	m	(Lcmi;Lgt;Ldbq;)Z	d	lambda$findFillableCauldronBelowStalactiteTip$8
		p	1		pos
		p	2		state
	m	(Ldbq;)Ldwp;	d	getPistonPushReaction
		p	1		state
	m	(Ldbq;Lclo;Lgt;)Ledx;	f	getOcclusionShape
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;)Z	h	canDrip
		p	0		state
	m	(Ldbq;)Z	n	isStalactite
		p	0		state
	m	(Ldbq;)Z	o	isStalagmite
		p	0		state
	m	(Ldbq;)Z	p	lambda$findRootBlock$6
		p	0		state
	f	F	E	STALAGMITE_FALL_DISTANCE_OFFSET
	f	I	F	STALAGMITE_FALL_DAMAGE_MODIFIER
	f	F	G	AVERAGE_DAYS_PER_GROWTH
	f	F	H	GROWTH_PROBABILITY_PER_RANDOM_TICK
	f	I	I	MAX_GROWTH_LENGTH
	f	I	J	MAX_STALAGMITE_SEARCH_RANGE_WHEN_GROWING
	f	F	K	STALACTITE_DRIP_START_PIXEL
	f	Ledx;	L	TIP_MERGE_SHAPE
	f	Ledx;	M	TIP_SHAPE_UP
	f	Ledx;	N	TIP_SHAPE_DOWN
	f	Ledx;	O	FRUSTUM_SHAPE
	f	Ledx;	P	MIDDLE_SHAPE
	f	Ledx;	Q	BASE_SHAPE
	f	F	R	MAX_HORIZONTAL_OFFSET
	f	Ledx;	S	REQUIRED_SPACE_TO_DRIP_THROUGH_NON_SOLID_BLOCK
	f	Ldcl;	a	TIP_DIRECTION
	f	Ldcp;	b	THICKNESS
	f	Ldci;	c	WATERLOGGED
	f	I	d	MAX_SEARCH_LENGTH_WHEN_CHECKING_DRIP_TYPE
	f	I	e	DELAY_BEFORE_FALLING
	f	F	f	DRIP_PROBABILITY_PER_ANIMATE_TICK
	f	F	g	DRIP_PROBABILITY_PER_ANIMATE_TICK_IF_UNDER_LIQUID_SOURCE
	f	I	h	MAX_SEARCH_LENGTH_BETWEEN_STALACTITE_TIP_AND_CAULDRON
	f	F	i	WATER_TRANSFER_PROBABILITY_PER_RANDOM_TICK
	f	F	j	LAVA_TRANSFER_PROBABILITY_PER_RANDOM_TICK
	f	D	k	MIN_TRIDENT_VELOCITY_TO_BREAK_DRIPSTONE
	f	F	l	STALACTITE_DAMAGE_PER_FALL_DISTANCE_AND_SIZE
	f	I	m	STALACTITE_MAX_DAMAGE
	f	I	n	MAX_STALACTITE_HEIGHT_FOR_DAMAGE_CALCULATION
c	cuu$a	net/minecraft/world/level/block/PointedDripstoneBlock$FluidInfo
	m	()Lgt;	a	pos
	m	()Ldwi;	b	fluid
	m	()Ldbq;	c	sourceState
	f	Lgt;	a	pos
	f	Ldwi;	b	fluid
	f	Ldbq;	c	sourceState
c	cuv	net/minecraft/world/level/block/PotatoBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	()Lcmh;	d	getBaseSeedId
	f	[Ledx;	a	SHAPE_BY_AGE
c	cuw	net/minecraft/world/level/block/PowderSnowBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lbfh;)Z	a	canEntityWalkOnPowderSnow
		p	0		entity
	m	(Lcmi;Ldbq;Lgt;Lbfh;F)V	a	fallOn
		p	1		world
		p	2		state
		p	3		pos
		p	4		entity
		p	5		fallDistance
	m	(Ldbq;Lclo;Lgt;Ldxa;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldbq;Lcmi;Lgt;Lbfh;)V	a	entityInside
		p	1		state
		p	2		world
		p	3		pos
		p	4		entity
	m	(Ldbq;Ldbq;Lgz;)Z	a	skipRendering
		p	1		state
		p	2		stateFrom
		p	3		direction
	m	()Ljava/util/Optional;	an_	getPickupSound
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	b	getVisualShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lcmj;Lgt;Ldbq;)Lcfv;	c	pickupBlock
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	c	getCollisionShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lclo;Lgt;)Ledx;	f	getOcclusionShape
		p	1		state
		p	2		world
		p	3		pos
	f	F	a	HORIZONTAL_PARTICLE_MOMENTUM_FACTOR
	f	F	b	IN_BLOCK_HORIZONTAL_SPEED_MULTIPLIER
	f	F	c	IN_BLOCK_VERTICAL_SPEED_MULTIPLIER
	f	F	d	NUM_BLOCKS_TO_FALL_INTO_BLOCK
	f	Ledx;	e	FALLING_COLLISION_SHAPE
	f	D	f	MINIMUM_FALL_DISTANCE_FOR_SOUND
	f	D	g	MINIMUM_FALL_DISTANCE_FOR_BIG_SOUND
c	cux	net/minecraft/world/level/block/PowderSnowCauldronBlock
	m	(Ldbp$d;Ljava/util/function/Predicate;Ljava/util/Map;)V	<init>	<init>
		p	1		settings
		p	2		precipitationPredicate
		p	3		behaviorMap
	m	(Ldbq;Lcmi;Lgt;)V	d	handleEntityOnFireInside
		p	1		state
		p	2		world
		p	3		pos
c	cuy	net/minecraft/world/level/block/PoweredBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Ldbq;Lclo;Lgt;Lgz;)I	a	getSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldbq;)Z	f_	isSignalSource
		p	1		state
c	cuz	net/minecraft/world/level/block/PoweredRailBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lcmi;Lgt;Ldbq;ZI)Z	a	findPoweredRailSignal
		p	1		world
		p	2		pos
		p	3		state
		p	5		distance
	m	(Lcmi;Lgt;ZILdcv;)Z	a	isSameRailWithPower
		p	1		world
		p	2		pos
		p	4		distance
		p	5		shape
	m	(Ldbq;Lcmi;Lgt;Lcpi;)V	a	updateState
		p	1		state
		p	2		world
		p	3		pos
		p	4		neighbor
	m	(Ldbq;Lcua;)Ldbq;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldbq;Lcvq;)Ldbq;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	()Ldcu;	c	getShapeProperty
	f	Ldcp;	d	SHAPE
	f	Ldci;	e	POWERED
c	cuz$1	net/minecraft/world/level/block/PoweredRailBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$state$properties$RailShape
	f	[I	b	$SwitchMap$net$minecraft$world$level$block$Rotation
	f	[I	c	$SwitchMap$net$minecraft$world$level$block$Mirror
c	cva	net/minecraft/world/level/block/PressurePlateBlock
	m	(Lcva$a;Ldbp$d;Ldcg;)V	<init>	<init>
		p	1		type
		p	2		settings
		p	3		blockSetType
	m	(Ldbq;I)Ldbq;	a	setSignalForState
		p	1		state
		p	2		rsOut
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lcmi;Lgt;)I	b	getSignalStrength
		p	1		world
		p	2		pos
	m	(Ldbq;)I	g	getSignalForState
		p	1		state
	f	Ldci;	d	POWERED
	f	Lcva$a;	e	sensitivity
c	cva$1	net/minecraft/world/level/block/PressurePlateBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$PressurePlateBlock$Sensitivity
c	cva$a	net/minecraft/world/level/block/PressurePlateBlock$Sensitivity
	m	()[Lcva$a;	a	$values
	f	Lcva$a;	a	EVERYTHING
	f	Lcva$a;	b	MOBS
	f	[Lcva$a;	c	$VALUES
c	cvb	net/minecraft/world/level/block/PumpkinBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lbdx;Lbym;)V	a	lambda$use$0
		p	1		player
	m	(Ldbq;Lcmi;Lgt;Lbym;Lbdx;Leda;)Lbdy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	()Lcwz;	b	getStem
	m	()Lcoj;	c	getAttachedStem
c	cvc	net/minecraft/world/level/block/RailBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Ldbq;Lcmi;Lgt;Lcpi;)V	a	updateState
		p	1		state
		p	2		world
		p	3		pos
		p	4		neighbor
	m	(Ldbq;Lcua;)Ldbq;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldbq;Lcvq;)Ldbq;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	()Ldcu;	c	getShapeProperty
	f	Ldcp;	d	SHAPE
c	cvc$1	net/minecraft/world/level/block/RailBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$state$properties$RailShape
	f	[I	b	$SwitchMap$net$minecraft$world$level$block$Rotation
	f	[I	c	$SwitchMap$net$minecraft$world$level$block$Mirror
c	cvd	net/minecraft/world/level/block/RailState
	m	(Lcmi;Lgt;Ldbq;)V	<init>	<init>
		p	1		world
		p	2		pos
		p	3		state
	m	()Ljava/util/List;	a	getConnections
	m	(Lcvd;)Z	a	connectsTo
		p	1		other
	m	(Ldcv;)V	a	updateConnections
		p	1		shape
	m	(Lgt;)Z	a	hasRail
		p	1		pos
	m	(ZZLdcv;)Lcvd;	a	place
		p	1		powered
		p	2		forceUpdate
		p	3		railShape
	m	()I	b	countPotentialConnections
	m	(Lcvd;)Z	b	canConnectTo
		p	1		placementHelper
	m	(Lgt;)Lcvd;	b	getRail
		p	1		pos
	m	()Ldbq;	c	getState
	m	(Lcvd;)V	c	connectTo
		p	1		placementHelper
	m	(Lgt;)Z	c	hasConnection
		p	1		pos
	m	()V	d	removeSoftConnections
	m	(Lgt;)Z	d	hasNeighborRail
		p	1		pos
	f	Lcmi;	a	level
	f	Lgt;	b	pos
	f	Lcoy;	c	block
	f	Ldbq;	d	state
	f	Z	e	isStraight
	f	Ljava/util/List;	f	connections
c	cvd$1	net/minecraft/world/level/block/RailState$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$state$properties$RailShape
c	cve	net/minecraft/world/level/block/RedStoneOreBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lcmi;Lgt;)V	a	spawnParticles
		p	0		world
		p	1		pos
	m	(Lcmi;Lgt;Ldbq;Lbfh;)V	a	stepOn
		p	1		world
		p	2		pos
		p	3		state
		p	4		entity
	m	(Ldbq;Laip;Lgt;Lcfv;Z)V	a	spawnAfterBreak
		p	1		state
		p	2		world
		p	3		pos
		p	4		tool
		p	5		dropExperience
	m	(Ldbq;Lcmi;Lgt;Lapo;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Lcmi;Lgt;Lbym;)V	a	attack
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
	m	(Ldbq;Lcmi;Lgt;Lbym;Lbdx;Leda;)Lbdy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldbq;Laip;Lgt;Lapo;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Lcmi;Lgt;)V	d	interact
		p	0		state
		p	1		world
		p	2		pos
	m	(Ldbq;)Z	e_	isRandomlyTicking
		p	1		state
	f	Ldci;	a	LIT
c	cvf	net/minecraft/world/level/block/RedStoneWireBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lcic;)Ldbq;	a	getStateForPlacement
		p	1		ctx
	m	(Lclo;Ldbq;Lgt;)Ldbq;	a	getConnectionState
		p	1		world
		p	2		state
		p	3		pos
	m	(Lclo;Lgt;Lgz;)Ldcw;	a	getConnectingSide
		p	1		world
		p	2		pos
		p	3		direction
	m	(Lclo;Lgt;Lgz;Z)Ldcw;	a	getConnectingSide
		p	1		world
		p	2		pos
		p	3		direction
	m	(Lcmi;Lapo;Lgt;Lede;Lgz;Lgz;FF)V	a	spawnParticlesAlongLine
		p	1		world
		p	2		random
		p	3		pos
		p	4		color
	m	(Lcmi;Lgt;)I	a	calculateTargetStrength
		p	1		world
		p	2		pos
	m	(Lcmi;Lgt;Ldbq;)V	a	updatePowerStrength
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcmi;Lgt;Ldbq;Ldbq;)V	a	updatesOnShapeChange
		p	1		world
		p	2		pos
		p	3		oldState
		p	4		newState
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lclo;Lgt;Lgz;)I	a	getSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldbq;Lcmi;Lgt;Lapo;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Lcmi;Lgt;Lbym;Lbdx;Leda;)Lbdy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldbq;Lcmi;Lgt;Lcpi;Lgt;Z)V	a	neighborChanged
		p	1		state
		p	2		world
		p	3		pos
		p	4		sourceBlock
		p	5		sourcePos
		p	6		notify
	m	(Ldbq;Lcmi;Lgt;Ldbq;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Ldbq;Lcmj;Lgt;II)V	a	updateIndirectNeighbourShapes
		p	1		state
		p	2		world
		p	3		pos
		p	4		flags
		p	5		maxUpdateDepth
	m	(Ldbq;Lcml;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lcua;)Ldbq;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldbq;Lcvq;)Ldbq;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldbq;Lgz;)Z	a	shouldConnectTo
		p	0		state
		p	1		dir
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	([Lede;)V	a	lambda$static$0
		p	0		colors
	m	(I)I	b	getColorForPower
		p	0		powerLevel
	m	(Lclo;Ldbq;Lgt;)Ldbq;	b	getMissingConnections
		p	1		world
		p	2		state
		p	3		pos
	m	(Lclo;Lgt;Ldbq;)Z	b	canSurviveOn
		p	1		world
		p	2		pos
		p	3		floor
	m	(Lcmi;Lgt;)V	b	checkCornerChangeAt
		p	1		world
		p	2		pos
	m	(Ldbq;Lclo;Lgt;Lgz;)I	b	getDirectSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldbq;Lcmi;Lgt;Ldbq;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	m	(Lcmi;Lgt;)V	c	updateNeighborsOfNeighboringWires
		p	1		world
		p	2		pos
	m	(Ldbq;)Z	f_	isSignalSource
		p	1		state
	m	(Ldbq;)Z	h	shouldConnectTo
		p	0		state
	m	(Ldbq;)Ledx;	n	calculateShape
		p	1		state
	m	(Ldbq;)Z	o	isCross
		p	0		state
	m	(Ldbq;)Z	p	isDot
		p	0		state
	m	(Ldbq;)I	q	getWireSignal
		p	1		state
	f	Ljava/util/Map;	E	SHAPES_CACHE
	f	[Lede;	F	COLORS
	f	F	G	PARTICLE_DENSITY
	f	Ldbq;	H	crossState
	f	Z	I	shouldSignal
	f	Ldcp;	a	NORTH
	f	Ldcp;	b	EAST
	f	Ldcp;	c	SOUTH
	f	Ldcp;	d	WEST
	f	Ldcr;	e	POWER
	f	Ljava/util/Map;	f	PROPERTY_BY_DIRECTION
	f	I	g	H
	f	I	h	W
	f	I	i	E
	f	I	j	N
	f	I	k	S
	f	Ledx;	l	SHAPE_DOT
	f	Ljava/util/Map;	m	SHAPES_FLOOR
	f	Ljava/util/Map;	n	SHAPES_UP
c	cvf$1	net/minecraft/world/level/block/RedStoneWireBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$state$properties$RedstoneSide
	f	[I	b	$SwitchMap$net$minecraft$world$level$block$Rotation
	f	[I	c	$SwitchMap$net$minecraft$world$level$block$Mirror
c	cvg	net/minecraft/world/level/block/RedstoneLampBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lcic;)Ldbq;	a	getStateForPlacement
		p	1		ctx
	m	(Ldbq;Laip;Lgt;Lapo;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Lcmi;Lgt;Lcpi;Lgt;Z)V	a	neighborChanged
		p	1		state
		p	2		world
		p	3		pos
		p	4		sourceBlock
		p	5		sourcePos
		p	6		notify
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	f	Ldci;	a	LIT
c	cvh	net/minecraft/world/level/block/RedstoneTorchBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lclo;)Ljava/util/List;	a	lambda$isToggledTooFrequently$0
		p	0		world
	m	(Lcmi;Lgt;Ldbq;)Z	a	hasNeighborSignal
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcmi;Lgt;Z)Z	a	isToggledTooFrequently
		p	0		world
		p	1		pos
		p	2		addNew
	m	(Ldbq;Laip;Lgt;Lapo;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Lclo;Lgt;Lgz;)I	a	getSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldbq;Lcmi;Lgt;Lapo;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Lcmi;Lgt;Lcpi;Lgt;Z)V	a	neighborChanged
		p	1		state
		p	2		world
		p	3		pos
		p	4		sourceBlock
		p	5		sourcePos
		p	6		notify
	m	(Ldbq;Lcmi;Lgt;Ldbq;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldbq;Lclo;Lgt;Lgz;)I	b	getDirectSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldbq;Lcmi;Lgt;Ldbq;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	m	(Ldbq;)Z	f_	isSignalSource
		p	1		state
	f	Ldci;	a	LIT
	f	I	b	RECENT_TOGGLE_TIMER
	f	I	c	MAX_RECENT_TOGGLES
	f	I	d	RESTART_DELAY
	f	Ljava/util/Map;	e	RECENT_TOGGLES
	f	I	f	TOGGLE_DELAY
c	cvh$a	net/minecraft/world/level/block/RedstoneTorchBlock$Toggle
	m	(Lgt;J)V	<init>	<init>
		p	1		pos
		p	2		time
	f	Lgt;	a	pos
	f	J	b	when
c	cvi	net/minecraft/world/level/block/RedstoneWallTorchBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lcic;)Ldbq;	a	getStateForPlacement
		p	1		ctx
	m	(Lcmi;Lgt;Ldbq;)Z	a	hasNeighborSignal
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lclo;Lgt;Lgz;)I	a	getSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldbq;Lcmi;Lgt;Lapo;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Lcml;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lcua;)Ldbq;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldbq;Lcvq;)Ldbq;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	()Ljava/lang/String;	h	getDescriptionId
	f	Ldcl;	e	FACING
	f	Ldci;	f	LIT
c	cvj	net/minecraft/world/level/block/RenderShape
	m	()[Lcvj;	a	$values
	f	Lcvj;	a	INVISIBLE
	f	Lcvj;	b	ENTITYBLOCK_ANIMATED
	f	Lcvj;	c	MODEL
	f	[Lcvj;	d	$VALUES
c	cvk	net/minecraft/world/level/block/RepeaterBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lcic;)Ldbq;	a	getStateForPlacement
		p	1		ctx
	m	(Lcml;Lgt;Ldbq;)Z	a	isLocked
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldbq;Lcmi;Lgt;Lapo;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Lcmi;Lgt;Lbym;Lbdx;Leda;)Lbdy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldbq;)I	g	getDelay
		p	1		state
	m	(Ldbq;)Z	h	isAlternateInput
		p	1		state
	f	Ldci;	a	LOCKED
	f	Ldcr;	d	DELAY
c	cvl	net/minecraft/world/level/block/RespawnAnchorBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lbfh;Lcmi;Lgt;Ldbq;)V	a	charge
		p	0		charger
		p	1		world
		p	2		pos
		p	3		state
	m	(Lbfl;Lcls;Lgt;)Ljava/util/Optional;	a	findStandUpPosition
		p	0		entity
		p	1		world
		p	2		pos
	m	(Lbfl;Lcls;Lgt;Z)Ljava/util/Optional;	a	findStandUpPosition
		p	0		entity
		p	1		world
		p	2		pos
		p	3		ignoreInvalidPos
	m	(Lcfv;)Z	a	isRespawnFuel
		p	0		stack
	m	(Lcmi;)Z	a	canSetSpawn
		p	0		world
	m	(Lcmi;Lgt;)Z	a	lambda$explode$0
		p	1		pos
	m	(Ldbq;I)I	a	getScaledChargeLevel
		p	0		state
		p	1		maxLevel
	m	(Ldbq;Lclo;Lgt;Ldxa;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldbq;Lcmi;Lgt;)I	a	getAnalogOutputSignal
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lcmi;Lgt;Lapo;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Lcmi;Lgt;Lbym;Lbdx;Leda;)Lbdy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lgt;Lcmi;)Z	a	isWaterThatWouldFlow
		p	0		pos
		p	1		world
	m	(Ldbq;Lcmi;Lgt;)V	d	explode
		p	1		state
		p	2		world
		p	3		explodedPos
	m	(Ldbq;)Z	d_	hasAnalogOutputSignal
		p	1		state
	m	(Ldbq;)Z	h	canBeCharged
		p	0		state
	f	I	a	MIN_CHARGES
	f	I	b	MAX_CHARGES
	f	Ldcr;	c	CHARGE
	f	Lcom/google/common/collect/ImmutableList;	d	RESPAWN_HORIZONTAL_OFFSETS
	f	Lcom/google/common/collect/ImmutableList;	e	RESPAWN_OFFSETS
c	cvl$1	net/minecraft/world/level/block/RespawnAnchorBlock$1
	m	(Lcma;Lclo;Lgt;Ldbq;Ldwj;)Ljava/util/Optional;	a	getBlockExplosionResistance
		p	1		explosion
		p	2		world
		p	3		pos
		p	4		blockState
		p	5		fluidState
	f	Lgt;	a	val$pos
	f	Z	b	val$inWater
	f	Lcvl;	c	this$0
c	cvm	net/minecraft/world/level/block/RodBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Ldbq;Lclo;Lgt;Ldxa;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lcua;)Ldbq;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldbq;Lcvq;)Ldbq;	a	rotate
		p	1		state
		p	2		rotation
	f	F	e	AABB_MIN
	f	F	f	AABB_MAX
	f	Ledx;	g	Y_AXIS_AABB
	f	Ledx;	h	Z_AXIS_AABB
	f	Ledx;	i	X_AXIS_AABB
c	cvm$1	net/minecraft/world/level/block/RodBlock$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction$Axis
c	cvn	net/minecraft/world/level/block/RootedDirtBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Laip;Lapo;Lgt;Ldbq;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcmi;Lapo;Lgt;Ldbq;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcml;Lgt;Ldbq;Z)Z	a	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
		p	4		isClient
c	cvo	net/minecraft/world/level/block/RootsBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lclo;Lgt;)Z	d	mayPlaceOn
		p	1		floor
		p	2		world
		p	3		pos
	f	F	a	AABB_OFFSET
	f	Ledx;	b	SHAPE
c	cvp	net/minecraft/world/level/block/RotatedPillarBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lcic;)Ldbq;	a	getStateForPlacement
		p	1		ctx
	m	(Ldbq;Lcvq;)Ldbq;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldbq;Lcvq;)Ldbq;	b	rotatePillar
		p	0		state
		p	1		rotation
	f	Ldcp;	g	AXIS
c	cvp$1	net/minecraft/world/level/block/RotatedPillarBlock$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction$Axis
	f	[I	b	$SwitchMap$net$minecraft$world$level$block$Rotation
c	cvq	net/minecraft/world/level/block/Rotation
	m	(Ljava/lang/String;ILjava/lang/String;Lh;)V	<init>	<init>
		p	3		id
		p	4		directionTransformation
	m	()Lh;	a	rotation
	m	(II)I	a	rotate
		p	1		rotation
		p	2		fullTurn
	m	(Lapo;)Lcvq;	a	getRandom
		p	0		random
	m	(Lcvq;)Lcvq;	a	getRotated
		p	1		rotation
	m	(Lgz;)Lgz;	a	rotate
		p	1		direction
	m	()[Lcvq;	b	$values
	m	(Lapo;)Ljava/util/List;	b	getShuffled
		p	0		random
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lcvq;	a	NONE
	f	Lcvq;	b	CLOCKWISE_90
	f	Lcvq;	c	CLOCKWISE_180
	f	Lcvq;	d	COUNTERCLOCKWISE_90
	f	Lcom/mojang/serialization/Codec;	e	CODEC
	f	Ljava/lang/String;	f	id
	f	Lh;	g	rotation
	f	[Lcvq;	h	$VALUES
c	cvq$1	net/minecraft/world/level/block/Rotation$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$Rotation
c	cvr	net/minecraft/world/level/block/SandBlock
	m	(ILdbp$d;)V	<init>	<init>
		p	1		color
		p	2		settings
	m	(Ldbq;Lclo;Lgt;)I	d	getDustColor
		p	1		state
		p	2		world
		p	3		pos
	f	I	a	dustColor
c	cvs	net/minecraft/world/level/block/SaplingBlock
	m	(Ldaw;Ldbp$d;)V	<init>	<init>
		p	1		generator
		p	2		settings
	m	(Laip;Lapo;Lgt;Ldbq;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Laip;Lgt;Ldbq;Lapo;)V	a	advanceTree
		p	1		world
		p	2		pos
		p	3		state
		p	4		random
	m	(Lcmi;Lapo;Lgt;Ldbq;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcml;Lgt;Ldbq;Z)Z	a	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
		p	4		isClient
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldbq;Laip;Lgt;Lapo;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	f	Ldaw;	a	treeGrower
	f	Ldcr;	d	STAGE
	f	F	e	AABB_OFFSET
	f	Ledx;	f	SHAPE
c	cvt	net/minecraft/world/level/block/ScaffoldingBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lcic;)Ldbq;	a	getStateForPlacement
		p	1		ctx
	m	(Lclo;Lgt;)I	a	getDistance
		p	0		world
		p	1		pos
	m	(Lclo;Lgt;I)Z	a	isBottom
		p	1		world
		p	2		pos
		p	3		distance
	m	(Ldbq;Laip;Lgt;Lapo;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Lcic;)Z	a	canBeReplaced
		p	1		state
		p	2		context
	m	(Ldbq;Lclo;Lgt;)Ledx;	a	getInteractionShape
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lcml;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldbq;Lcmi;Lgt;Ldbq;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	c	getCollisionShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;)Ldwj;	c_	getFluidState
		p	1		state
	f	I	a	STABILITY_MAX_DISTANCE
	f	Ldcr;	b	DISTANCE
	f	Ldci;	c	WATERLOGGED
	f	Ldci;	d	BOTTOM
	f	I	e	TICK_DELAY
	f	Ledx;	f	STABLE_SHAPE
	f	Ledx;	g	UNSTABLE_SHAPE
	f	Ledx;	h	UNSTABLE_SHAPE_BOTTOM
	f	Ledx;	i	BELOW_BLOCK
c	cvu	net/minecraft/world/level/block/SculkBehaviour
	m	()B	a	getSculkSpreadDelay
	m	(Lcmj;Ldbq;Lgt;Lapo;)V	a	onDischarged
		p	1		world
		p	2		state
		p	3		pos
		p	4		random
	m	(Lcmj;Lgt;Lapo;)Z	a	depositCharge
		p	1		world
		p	2		pos
		p	3		random
	m	(Lcmj;Lgt;Ldbq;Ljava/util/Collection;Z)Z	a	attemptSpreadVein
		p	1		world
		p	2		pos
		p	3		state
		p	4		directions
		p	5		markForPostProcessing
	m	(Lcvz$a;Lcmj;Lgt;Lapo;Lcvz;Z)I	a	attemptUseCharge
		p	1		cursor
		p	2		world
		p	3		catalystPos
		p	4		random
		p	5		spreadManager
		p	6		shouldConvertToBlock
	m	()Z	b	canChangeBlockStateOnSpread
	m	(I)I	i_	updateDecayDelay
		p	1		oldDecay
	f	Lcvu;	r_	DEFAULT
c	cvu$1	net/minecraft/world/level/block/SculkBehaviour$1
	m	(Lcmj;Lgt;Ldbq;Ljava/util/Collection;Z)Z	a	attemptSpreadVein
		p	1		world
		p	2		pos
		p	3		state
		p	4		directions
		p	5		markForPostProcessing
	m	(Lcvz$a;Lcmj;Lgt;Lapo;Lcvz;Z)I	a	attemptUseCharge
		p	1		cursor
		p	2		world
		p	3		catalystPos
		p	4		random
		p	5		spreadManager
		p	6		shouldConvertToBlock
	m	(I)I	i_	updateDecayDelay
		p	1		oldDecay
c	cvv	net/minecraft/world/level/block/SculkBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lcmj;Lgt;)Z	a	canPlaceGrowth
		p	0		world
		p	1		pos
	m	(Lcmj;Lgt;Lapo;Z)Ldbq;	a	getRandomGrowthState
		p	1		world
		p	2		pos
		p	3		random
		p	4		allowShrieker
	m	(Lcvz$a;Lcmj;Lgt;Lapo;Lcvz;Z)I	a	attemptUseCharge
		p	1		cursor
		p	2		world
		p	3		catalystPos
		p	4		random
		p	5		spreadManager
		p	6		shouldConvertToBlock
	m	(Lcvz;Lgt;Lgt;I)I	a	getDecayPenalty
		p	0		spreadManager
		p	1		cursorPos
		p	2		catalystPos
		p	3		charge
	m	()Z	b	canChangeBlockStateOnSpread
c	cvw	net/minecraft/world/level/block/SculkCatalystBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Laip;Lcze;)Ldgc;	a	getListener
		p	1		world
		p	2		blockEntity
	m	(Laip;Lgt;Ldbq;Lapo;)V	a	bloom
		p	0		world
		p	1		pos
		p	2		state
		p	3		random
	m	(Lcmi;Ldbq;Lczg;)Lczf;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Ldbq;Laip;Lgt;Lapo;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Laip;Lgt;Lcfv;Z)V	a	spawnAfterBreak
		p	1		state
		p	2		world
		p	3		pos
		p	4		tool
		p	5		dropExperience
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lgt;Ldbq;)Lcze;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Ldbq;)Lcvj;	b_	getRenderShape
		p	1		state
	f	I	a	PULSE_TICKS
	f	Ldci;	b	PULSE
	f	Lbdd;	c	xpRange
c	cvx	net/minecraft/world/level/block/SculkSensorBlock
	m	(Ldbp$d;I)V	<init>	<init>
		p	1		settings
		p	2		range
	m	(Laip;Lcze;)Ldgc;	a	getListener
		p	1		world
		p	2		blockEntity
	m	(Lbfh;Lcmi;Lgt;Ldbq;I)V	a	activate
		p	0		entity
		p	1		world
		p	2		pos
		p	3		state
		p	4		power
	m	(Lcic;)Ldbq;	a	getStateForPlacement
		p	1		ctx
	m	(Lcmi;Ldbq;Lczg;)Lczf;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Lcmi;Lgt;)V	a	updateNeighbours
		p	0		world
		p	1		pos
	m	(Lcmi;Lgt;Ldbq;)V	a	deactivate
		p	0		world
		p	1		pos
		p	2		state
	m	(Lcmi;Lgt;Ldbq;Lbfh;)V	a	stepOn
		p	1		world
		p	2		pos
		p	3		state
		p	4		entity
	m	(Lcmi;Lgt;Ldbq;Ldah;)V	a	lambda$getTicker$0
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Ldbq;Laip;Lgt;Lapo;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Laip;Lgt;Lcfv;Z)V	a	spawnAfterBreak
		p	1		state
		p	2		world
		p	3		pos
		p	4		tool
		p	5		dropExperience
	m	(Ldbq;Lclo;Lgt;Ldxa;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lclo;Lgt;Lgz;)I	a	getSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldbq;Lcmi;Lgt;)I	a	getAnalogOutputSignal
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lcmi;Lgt;Lapo;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Lcmi;Lgt;Ldbq;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lgt;Ldbq;)Lcze;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Ldbq;Lcmi;Lgt;Ldbq;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	m	(Ldbq;)Lcvj;	b_	getRenderShape
		p	1		state
	m	(Ldbq;)Ldwj;	c_	getFluidState
		p	1		state
	m	()I	d	getListenerRange
	m	(Ldbq;)Z	d_	hasAnalogOutputSignal
		p	1		state
	m	(Ldbq;)Z	f_	isSignalSource
		p	1		state
	m	(Ldbq;)Z	g_	useShapeForLightOcclusion
		p	1		state
	m	(Ldbq;)Ldcy;	h	getPhase
		p	0		state
	m	(Ldbq;)Z	n	canActivate
		p	0		state
	f	I	a	ACTIVE_TICKS
	f	I	b	COOLDOWN_TICKS
	f	Ldcp;	c	PHASE
	f	Ldcr;	d	POWER
	f	Ldci;	e	WATERLOGGED
	f	Ledx;	f	SHAPE
	f	I	g	listenerRange
c	cvy	net/minecraft/world/level/block/SculkShriekerBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Laip;Laiq;Ldai;)V	a	lambda$stepOn$0
		p	2		blockEntity
	m	(Laip;Lcze;)Ldgc;	a	getListener
		p	1		world
		p	2		blockEntity
	m	(Laip;Ldai;)V	a	lambda$tick$2
		p	1		blockEntity
	m	(Lcic;)Ldbq;	a	getStateForPlacement
		p	1		ctx
	m	(Lcmi;Ldbq;Lczg;)Lczf;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Lcmi;Lgt;Ldbq;Lbfh;)V	a	stepOn
		p	1		world
		p	2		pos
		p	3		state
		p	4		entity
	m	(Lcmi;Lgt;Ldbq;Ldai;)V	a	lambda$getTicker$3
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Ldbq;Laip;Lgt;Lapo;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Laip;Lgt;Lcfv;Z)V	a	spawnAfterBreak
		p	1		state
		p	2		world
		p	3		pos
		p	4		tool
		p	5		dropExperience
	m	(Ldbq;Lcmi;Lgt;Ldbq;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lgt;Ldbq;)Lcze;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Laip;Ldai;)V	b	lambda$onRemove$1
		p	1		blockEntity
	m	(Ldbq;)Lcvj;	b_	getRenderShape
		p	1		state
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	c	getCollisionShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;)Ldwj;	c_	getFluidState
		p	1		state
	m	(Ldbq;Lclo;Lgt;)Ledx;	f	getOcclusionShape
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;)Z	g_	useShapeForLightOcclusion
		p	1		state
	f	Ldci;	a	SHRIEKING
	f	Ldci;	b	WATERLOGGED
	f	Ldci;	c	CAN_SUMMON
	f	Ledx;	d	COLLIDER
	f	D	e	TOP_Y
c	cvz	net/minecraft/world/level/block/SculkSpreader
	m	(ZLanv;IIII)V	<init>	<init>
		p	1		worldGen
		p	2		replaceableTag
		p	3		extraBlockChance
		p	4		maxDistance
		p	5		spreadChance
		p	6		decayChance
	m	()Lcvz;	a	createLevelSpreader
	m	(Lcmj;Lgt;Lapo;Z)V	a	updateCursors
		p	1		world
		p	2		pos
		p	3		random
		p	4		shouldConvertToBlock
	m	(Lcvz$a;)V	a	addCursor
		p	1		cursor
	m	(Lcvz$a;Lgt;Ljava/lang/Integer;)Ljava/lang/Integer;	a	lambda$updateCursors$1
		p	1		pos
		p	2		charge
	m	(Lgt;I)V	a	addCursors
		p	1		pos
		p	2		charge
	m	(Lre;)V	a	load
		p	1		nbt
	m	(Lre;Lrx;)V	a	lambda$save$0
		p	1		cursorsNbt
	m	()Lcvz;	b	createWorldGenSpreader
	m	(Lre;)V	b	save
		p	1		nbt
	m	()Lanv;	c	replaceableBlocks
	m	()I	d	growthSpawnCost
	m	()I	e	noGrowthRadius
	m	()I	f	chargeDecayRate
	m	()I	g	additionalDecayRate
	m	()Z	h	isWorldGeneration
	m	()Ljava/util/List;	i	getCursors
	m	()V	j	clear
	f	I	a	MAX_GROWTH_RATE_RADIUS
	f	I	b	MAX_CHARGE
	f	F	c	MAX_DECAY_FACTOR
	f	I	d	SHRIEKER_PLACEMENT_RATE
	f	I	e	MAX_CURSORS
	f	Z	f	isWorldGeneration
	f	Lanv;	g	replaceableBlocks
	f	I	h	growthSpawnCost
	f	I	i	noGrowthRadius
	f	I	j	chargeDecayRate
	f	I	k	additionalDecayRate
	f	Ljava/util/List;	l	cursors
	f	Lorg/slf4j/Logger;	m	LOGGER
c	cvz$a	net/minecraft/world/level/block/SculkSpreader$ChargeCursor
	m	(Lgt;I)V	<init>	<init>
		p	1		pos
		p	2		charge
	m	(Lgt;IIILjava/util/Optional;)V	<init>	<init>
		p	1		pos
		p	2		charge
		p	3		decay
		p	4		update
		p	5		faces
	m	()Lgt;	a	getPos
	m	(Lapo;)Ljava/util/List;	a	getRandomizedNonCornerNeighbourOffsets
		p	0		random
	m	(Lcmj;Lgt;Lapo;)Lgt;	a	getValidMovementPos
		p	0		world
		p	1		pos
		p	2		random
	m	(Lcmj;Lgt;Lapo;Lcvz;Z)V	a	update
		p	1		world
		p	2		pos
		p	3		random
		p	4		spreadManager
		p	5		shouldConvertToBlock
	m	(Lcmj;Lgt;Lgt;)Z	a	isMovementUnobstructed
		p	0		world
		p	1		sourcePos
		p	2		targetPos
	m	(Lcmj;Lgt;Lgz;)Z	a	isUnobstructed
		p	0		world
		p	1		pos
		p	2		direction
	m	(Lcmj;Lgt;Z)Z	a	shouldUpdate
		p	1		world
		p	2		pos
		p	3		worldGen
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$5
		p	0		instance
	m	(Lcvz$a;)V	a	mergeWith
		p	1		cursor
	m	(Ldbq;)Lcvu;	a	getBlockBehaviour
		p	0		state
	m	(Lgt;)Z	a	lambda$static$0
		p	0		pos
	m	(Lit/unimi/dsi/fastutil/objects/ObjectArrayList;)V	a	lambda$static$1
	m	(Ljava/util/List;)Ljava/util/Set;	a	lambda$static$2
		p	0		directions
	m	()I	b	getCharge
	m	(Lcvz$a;)Ljava/util/Optional;	b	lambda$static$4
		p	0		cursor
	m	()I	c	getDecayDelay
	m	(Lcvz$a;)Ljava/lang/Integer;	c	lambda$static$3
		p	0		cursor
	m	()Ljava/util/Set;	d	getFacingData
	f	I	a	MAX_CURSOR_DECAY_DELAY
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lit/unimi/dsi/fastutil/objects/ObjectArrayList;	c	NON_CORNER_NEIGHBOURS
	f	Lgt;	d	pos
	f	I	e	charge
	f	I	f	updateDelay
	f	I	g	decayDelay
	f	Ljava/util/Set;	h	facings
	f	Lcom/mojang/serialization/Codec;	i	DIRECTION_SET
c	cwa	net/minecraft/world/level/block/SculkVeinBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lcmj;Ldbq;Lgt;)Z	a	hasSubstrateAccess
		p	0		world
		p	1		state
		p	2		pos
	m	(Lcmj;Ldbq;Lgt;Lapo;)V	a	onDischarged
		p	1		world
		p	2		state
		p	3		pos
		p	4		random
	m	(Lcmj;Lgt;Ldbq;Ljava/util/Collection;)Z	a	regrow
		p	0		world
		p	1		pos
		p	2		state
		p	3		directions
	m	(Lcvz$a;Lcmj;Lgt;Lapo;Lcvz;Z)I	a	attemptUseCharge
		p	1		cursor
		p	2		world
		p	3		catalystPos
		p	4		random
		p	5		spreadManager
		p	6		shouldConvertToBlock
	m	(Lcvz;Lcmj;Lgt;Lapo;)Z	a	attemptPlaceSculk
		p	1		spreadManager
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Lcic;)Z	a	canBeReplaced
		p	1		state
		p	2		context
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	()Lcue;	c	getSpreader
	m	(Ldbq;)Ldwj;	c_	getFluidState
		p	1		state
	m	()Lcue;	d	getSameSpaceSpreader
	m	(Ldbq;)Ldwp;	d	getPistonPushReaction
		p	1		state
	f	Ldci;	b	WATERLOGGED
	f	Lcue;	c	veinSpreader
	f	Lcue;	d	sameSpaceSpreader
c	cwa$a	net/minecraft/world/level/block/SculkVeinBlock$SculkVeinSpreaderConfig
	m	(Lcwa;[Lcue$e;)V	<init>	<init>
		p	2		growTypes
	m	()[Lcue$e;	a	getSpreadTypes
	m	(Lclo;Lgt;Lgt;Lgz;Ldbq;)Z	a	stateCanBeReplaced
		p	1		world
		p	2		pos
		p	3		growPos
		p	4		direction
		p	5		state
	m	(Ldbq;)Z	a	isOtherBlockValidAsSource
		p	1		state
	f	Lcwa;	b	this$0
	f	[Lcue$e;	c	spreadTypes
c	cwb	net/minecraft/world/level/block/SeaPickleBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Laip;Lapo;Lgt;Ldbq;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcic;)Ldbq;	a	getStateForPlacement
		p	1		ctx
	m	(Lcmi;Lapo;Lgt;Ldbq;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcml;Lgt;Ldbq;Z)Z	a	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
		p	4		isClient
	m	(Ldbq;Lcic;)Z	a	canBeReplaced
		p	1		state
		p	2		context
	m	(Ldbq;Lclo;Lgt;Ldxa;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lcml;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldbq;)Ldwj;	c_	getFluidState
		p	1		state
	m	(Ldbq;Lclo;Lgt;)Z	d	mayPlaceOn
		p	1		floor
		p	2		world
		p	3		pos
	m	(Ldbq;)Z	h	isDead
		p	0		state
	f	I	a	MAX_PICKLES
	f	Ldcr;	b	PICKLES
	f	Ldci;	c	WATERLOGGED
	f	Ledx;	d	ONE_AABB
	f	Ledx;	e	TWO_AABB
	f	Ledx;	f	THREE_AABB
	f	Ledx;	g	FOUR_AABB
c	cwc	net/minecraft/world/level/block/SeagrassBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Laip;Lapo;Lgt;Ldbq;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcic;)Ldbq;	a	getStateForPlacement
		p	1		ctx
	m	(Lclo;Lgt;Ldbq;Ldwi;)Z	a	canPlaceLiquid
		p	1		world
		p	2		pos
		p	3		state
		p	4		fluid
	m	(Lcmi;Lapo;Lgt;Ldbq;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcmj;Lgt;Ldbq;Ldwj;)Z	a	placeLiquid
		p	1		world
		p	2		pos
		p	3		state
		p	4		fluidState
	m	(Lcml;Lgt;Ldbq;Z)Z	a	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
		p	4		isClient
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldbq;)Ldwj;	c_	getFluidState
		p	1		state
	m	(Ldbq;Lclo;Lgt;)Z	d	mayPlaceOn
		p	1		floor
		p	2		world
		p	3		pos
	f	F	a	AABB_OFFSET
	f	Ledx;	b	SHAPE
c	cwd	net/minecraft/world/level/block/ShulkerBoxBlock
	m	(Lcel;Ldbp$d;)V	<init>	<init>
		p	1		color
		p	2		settings
	m	(Lcel;)Lcpi;	a	getBlockByColor
		p	0		dyeColor
	m	(Lcfv;Lclo;Ljava/util/List;Lchl;)V	a	appendHoverText
		p	1		stack
		p	2		world
		p	3		tooltip
		p	4		options
	m	(Lcfv;Ldaj;)V	a	lambda$getCloneItemStack$2
		p	1		blockEntity
	m	(Lcic;)Ldbq;	a	getStateForPlacement
		p	1		ctx
	m	(Lclo;Lgt;Ldbq;)Lcfv;	a	getCloneItemStack
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcmi;Ldbq;Lczg;)Lczf;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Lcmi;Lgt;Ldbq;Lbfx;Lcfv;)V	a	setPlacedBy
		p	1		world
		p	2		pos
		p	3		state
		p	4		placer
		p	5		itemStack
	m	(Lcmi;Lgt;Ldbq;Lbym;)V	a	playerWillDestroy
		p	1		world
		p	2		pos
		p	3		state
		p	4		player
	m	(Lcpi;)Lcel;	a	getColorFromBlock
		p	0		block
	m	(Ldaj;Ldyr;Ljava/util/function/Consumer;)V	a	lambda$getDrops$1
		p	1		context
		p	2		consumer
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lcmi;Lgt;)I	a	getAnalogOutputSignal
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lcmi;Lgt;Lbym;Lbdx;Leda;)Lbdy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldbq;Lcmi;Lgt;Ldaj;)Z	a	canOpen
		p	0		state
		p	1		world
		p	2		pos
		p	3		entity
	m	(Ldbq;Lcmi;Lgt;Ldbq;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Ldbq;Lcua;)Ldbq;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldbq;Lcvq;)Ldbq;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldbq;Ldyr$a;)Ljava/util/List;	a	getDrops
		p	1		state
		p	2		builder
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lgt;Ldbq;)Lcze;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Ljava/util/EnumMap;)V	a	lambda$static$0
		p	0		map
	m	()Lcel;	b	getColor
	m	(Lcel;)Lcfv;	b	getColoredItemStack
		p	0		color
	m	(Lcfq;)Lcel;	b	getColorFromItem
		p	0		item
	m	(Ldbq;)Lcvj;	b_	getRenderShape
		p	1		state
	m	(Ldbq;Lclo;Lgt;)Ledx;	b_	getBlockSupportShape
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;)Ldwp;	d	getPistonPushReaction
		p	1		state
	m	(Ldbq;)Z	d_	hasAnalogOutputSignal
		p	1		state
	f	Ldcp;	a	FACING
	f	Ladd;	b	CONTENTS
	f	F	c	OPEN_AABB_SIZE
	f	Ledx;	d	UP_OPEN_AABB
	f	Ledx;	e	DOWN_OPEN_AABB
	f	Ledx;	f	WES_OPEN_AABB
	f	Ledx;	g	EAST_OPEN_AABB
	f	Ledx;	h	NORTH_OPEN_AABB
	f	Ledx;	i	SOUTH_OPEN_AABB
	f	Ljava/util/Map;	j	OPEN_SHAPE_BY_DIRECTION
	f	Lcel;	k	color
c	cwd$1	net/minecraft/world/level/block/ShulkerBoxBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$item$DyeColor
c	cwe	net/minecraft/world/level/block/SignBlock
	m	(Ldbp$d;Ldde;)V	<init>	<init>
		p	1		settings
		p	2		type
	m	(Lcpi;)Ldde;	a	getWoodType
		p	0		block
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lcmi;Lgt;Lbym;Lbdx;Leda;)Lbdy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lgt;Ldbq;)Lcze;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	()Z	ao_	isPossibleToRespawnInThis
	m	(Ldbq;)Ldwj;	c_	getFluidState
		p	1		state
	m	()Ldde;	d	type
	f	Ldde;	a	type
	f	Ldci;	e	WATERLOGGED
	f	F	f	AABB_OFFSET
	f	Ledx;	g	SHAPE
c	cwf	net/minecraft/world/level/block/SimpleWaterloggedBlock
	m	(Lclo;Lgt;Ldbq;Ldwi;)Z	a	canPlaceLiquid
		p	1		world
		p	2		pos
		p	3		state
		p	4		fluid
	m	(Lcmj;Lgt;Ldbq;Ldwj;)Z	a	placeLiquid
		p	1		world
		p	2		pos
		p	3		state
		p	4		fluidState
	m	()Ljava/util/Optional;	an_	getPickupSound
	m	(Lcmj;Lgt;Ldbq;)Lcfv;	c	pickupBlock
		p	1		world
		p	2		pos
		p	3		state
c	cwg	net/minecraft/world/level/block/SkullBlock
	m	(Lcwg$a;Ldbp$d;)V	<init>	<init>
		p	1		type
		p	2		settings
	m	(Lcic;)Ldbq;	a	getStateForPlacement
		p	1		ctx
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lcua;)Ldbq;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldbq;Lcvq;)Ldbq;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldbq;Lclo;Lgt;)Ledx;	f	getOcclusionShape
		p	1		state
		p	2		world
		p	3		pos
	f	I	a	MAX
	f	Ldcr;	b	ROTATION
	f	Ledx;	c	SHAPE
	f	Ledx;	d	PIGLIN_SHAPE
	f	I	e	ROTATIONS
c	cwg$a	net/minecraft/world/level/block/SkullBlock$Type
c	cwg$b	net/minecraft/world/level/block/SkullBlock$Types
	m	()[Lcwg$b;	a	$values
	f	Lcwg$b;	a	SKELETON
	f	Lcwg$b;	b	WITHER_SKELETON
	f	Lcwg$b;	c	PLAYER
	f	Lcwg$b;	d	ZOMBIE
	f	Lcwg$b;	e	CREEPER
	f	Lcwg$b;	f	PIGLIN
	f	Lcwg$b;	g	DRAGON
	f	[Lcwg$b;	h	$VALUES
c	cwh	net/minecraft/world/level/block/SlabBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lcic;)Ldbq;	a	getStateForPlacement
		p	1		ctx
	m	(Lclo;Lgt;Ldbq;Ldwi;)Z	a	canPlaceLiquid
		p	1		world
		p	2		pos
		p	3		state
		p	4		fluid
	m	(Lcmj;Lgt;Ldbq;Ldwj;)Z	a	placeLiquid
		p	1		world
		p	2		pos
		p	3		state
		p	4		fluidState
	m	(Ldbq;Lcic;)Z	a	canBeReplaced
		p	1		state
		p	2		context
	m	(Ldbq;Lclo;Lgt;Ldxa;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldbq;)Ldwj;	c_	getFluidState
		p	1		state
	m	(Ldbq;)Z	g_	useShapeForLightOcclusion
		p	1		state
	f	Ldcp;	a	TYPE
	f	Ldci;	b	WATERLOGGED
	f	Ledx;	c	BOTTOM_AABB
	f	Ledx;	d	TOP_AABB
c	cwh$1	net/minecraft/world/level/block/SlabBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$state$properties$SlabType
	f	[I	b	$SwitchMap$net$minecraft$world$level$pathfinder$PathComputationType
c	cwi	net/minecraft/world/level/block/SlimeBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lbfh;)V	a	bounceUp
		p	1		entity
	m	(Lclo;Lbfh;)V	a	updateEntityAfterFallOn
		p	1		world
		p	2		entity
	m	(Lcmi;Ldbq;Lgt;Lbfh;F)V	a	fallOn
		p	1		world
		p	2		state
		p	3		pos
		p	4		entity
		p	5		fallDistance
	m	(Lcmi;Lgt;Ldbq;Lbfh;)V	a	stepOn
		p	1		world
		p	2		pos
		p	3		state
		p	4		entity
c	cwj	net/minecraft/world/level/block/SmallDripleafBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Laip;Lapo;Lgt;Ldbq;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcic;)Ldbq;	a	getStateForPlacement
		p	1		ctx
	m	(Lcmi;Lapo;Lgt;Ldbq;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcmi;Lgt;Ldbq;Lbfx;Lcfv;)V	a	setPlacedBy
		p	1		world
		p	2		pos
		p	3		state
		p	4		placer
		p	5		itemStack
	m	(Lcml;Lgt;Ldbq;Z)Z	a	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
		p	4		isClient
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lcml;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lcua;)Ldbq;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldbq;Lcvq;)Ldbq;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	()F	ap_	getMaxVerticalOffset
	m	(Ldbq;)Ldwj;	c_	getFluidState
		p	1		state
	m	(Ldbq;Lclo;Lgt;)Z	d	mayPlaceOn
		p	1		floor
		p	2		world
		p	3		pos
	f	Ldcl;	b	FACING
	f	F	c	AABB_OFFSET
	f	Ledx;	d	SHAPE
	f	Ldci;	e	WATERLOGGED
c	cwk	net/minecraft/world/level/block/SmithingTableBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lcmi;Lgt;ILbyl;Lbym;)Lcbd;	a	lambda$getMenuProvider$0
		p	2		syncId
		p	3		inventory
		p	4		player
	m	(Ldbq;Lcmi;Lgt;Lbym;Lbdx;Leda;)Lbdy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldbq;Lcmi;Lgt;)Lbeb;	b	getMenuProvider
		p	1		state
		p	2		world
		p	3		pos
	f	Ltj;	a	CONTAINER_TITLE
c	cwl	net/minecraft/world/level/block/SmokerBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lcmi;Ldbq;Lczg;)Lczf;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Lcmi;Lgt;Lbym;)V	a	openContainer
		p	1		world
		p	2		pos
		p	3		player
	m	(Ldbq;Lcmi;Lgt;Lapo;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lgt;Ldbq;)Lcze;	a	newBlockEntity
		p	1		pos
		p	2		state
c	cwm	net/minecraft/world/level/block/SnowLayerBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lcic;)Ldbq;	a	getStateForPlacement
		p	1		ctx
	m	(Ldbq;Lcic;)Z	a	canBeReplaced
		p	1		state
		p	2		context
	m	(Ldbq;Lclo;Lgt;Ldxa;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lcml;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldbq;Laip;Lgt;Lapo;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Lclo;Lgt;)F	b	getShadeBrightness
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	b	getVisualShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lclo;Lgt;)Ledx;	b_	getBlockSupportShape
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	c	getCollisionShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;)Z	g_	useShapeForLightOcclusion
		p	1		state
	f	I	a	MAX_HEIGHT
	f	Ldcr;	b	LAYERS
	f	[Ledx;	c	SHAPE_BY_LAYER
	f	I	d	HEIGHT_IMPASSABLE
c	cwm$1	net/minecraft/world/level/block/SnowLayerBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$pathfinder$PathComputationType
c	cwn	net/minecraft/world/level/block/SnowyDirtBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lcic;)Ldbq;	a	getStateForPlacement
		p	1		ctx
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldbq;)Z	h	isSnowySetting
		p	0		state
	f	Ldci;	a	SNOWY
c	cwo	net/minecraft/world/level/block/SoulFireBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Ldbq;Lcml;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldbq;)Z	f	canBurn
		p	1		state
	m	(Ldbq;)Z	h	canSurviveOnBlock
		p	0		state
c	cwp	net/minecraft/world/level/block/SoulSandBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Ldbq;Laip;Lgt;Lapo;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Lclo;Lgt;Ldxa;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldbq;Lclo;Lgt;)F	b	getShadeBrightness
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	b	getVisualShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lcmi;Lgt;Ldbq;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	m	(Ldbq;Lclo;Lgt;)Ledx;	b_	getBlockSupportShape
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	c	getCollisionShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	f	Ledx;	a	SHAPE
	f	I	b	BUBBLE_COLUMN_CHECK_DELAY
c	cwq	net/minecraft/world/level/block/SoundType
	m	(FFLamq;Lamq;Lamq;Lamq;Lamq;)V	<init>	<init>
		p	1		volume
		p	2		pitch
		p	3		breakSound
		p	4		stepSound
		p	5		placeSound
		p	6		hitSound
		p	7		fallSound
	m	()F	a	getVolume
	m	()F	b	getPitch
	m	()Lamq;	c	getBreakSound
	m	()Lamq;	d	getStepSound
	m	()Lamq;	e	getPlaceSound
	m	()Lamq;	f	getHitSound
	m	()Lamq;	g	getFallSound
	f	Lcwq;	A	STEM
	f	Lcwq;	B	NYLIUM
	f	Lcwq;	C	FUNGUS
	f	Lcwq;	D	ROOTS
	f	Lcwq;	E	SHROOMLIGHT
	f	Lcwq;	F	WEEPING_VINES
	f	Lcwq;	G	TWISTING_VINES
	f	Lcwq;	H	SOUL_SAND
	f	Lcwq;	I	SOUL_SOIL
	f	Lcwq;	J	BASALT
	f	Lcwq;	K	WART_BLOCK
	f	Lcwq;	L	NETHERRACK
	f	Lcwq;	M	NETHER_BRICKS
	f	Lcwq;	N	NETHER_SPROUTS
	f	Lcwq;	O	NETHER_ORE
	f	Lcwq;	P	BONE_BLOCK
	f	Lcwq;	Q	NETHERITE_BLOCK
	f	Lcwq;	R	ANCIENT_DEBRIS
	f	Lcwq;	S	LODESTONE
	f	Lcwq;	T	CHAIN
	f	Lcwq;	U	NETHER_GOLD_ORE
	f	Lcwq;	V	GILDED_BLACKSTONE
	f	Lcwq;	W	CANDLE
	f	Lcwq;	X	AMETHYST
	f	Lcwq;	Y	AMETHYST_CLUSTER
	f	Lcwq;	Z	SMALL_AMETHYST_BUD
	f	Lcwq;	aA	DEEPSLATE_BRICKS
	f	Lcwq;	aB	DEEPSLATE_TILES
	f	Lcwq;	aC	POLISHED_DEEPSLATE
	f	Lcwq;	aD	FROGLIGHT
	f	Lcwq;	aE	FROGSPAWN
	f	Lcwq;	aF	MANGROVE_ROOTS
	f	Lcwq;	aG	MUDDY_MANGROVE_ROOTS
	f	Lcwq;	aH	MUD
	f	Lcwq;	aI	MUD_BRICKS
	f	Lcwq;	aJ	PACKED_MUD
	f	Lcwq;	aK	HANGING_SIGN
	f	Lcwq;	aL	NETHER_WOOD_HANGING_SIGN
	f	Lcwq;	a	WOOD
	f	Lcwq;	aM	BAMBOO_WOOD_HANGING_SIGN
	f	Lcwq;	aN	BAMBOO_WOOD
	f	Lcwq;	aO	NETHER_WOOD
	f	Lcwq;	aP	CHERRY_WOOD
	f	Lcwq;	aQ	CHERRY_SAPLING
	f	Lcwq;	aR	CHERRY_LEAVES
	f	Lcwq;	aS	CHERRY_WOOD_HANGING_SIGN
	f	Lcwq;	aT	CHISELED_BOOKSHELF
	f	Lcwq;	aU	SUSPICIOUS_SAND
	f	Lcwq;	aV	DECORATED_POT
	f	F	aW	volume
	f	F	aX	pitch
	f	Lamq;	aY	breakSound
	f	Lamq;	aZ	stepSound
	f	Lcwq;	aa	MEDIUM_AMETHYST_BUD
	f	Lcwq;	ab	LARGE_AMETHYST_BUD
	f	Lcwq;	ac	TUFF
	f	Lcwq;	ad	CALCITE
	f	Lcwq;	ae	DRIPSTONE_BLOCK
	f	Lcwq;	af	POINTED_DRIPSTONE
	f	Lcwq;	ag	COPPER
	f	Lcwq;	ah	CAVE_VINES
	f	Lcwq;	ai	SPORE_BLOSSOM
	f	Lcwq;	aj	AZALEA
	f	Lcwq;	ak	FLOWERING_AZALEA
	f	Lcwq;	al	MOSS_CARPET
	f	Lcwq;	am	PINK_PETALS
	f	Lcwq;	an	MOSS
	f	Lcwq;	ao	BIG_DRIPLEAF
	f	Lcwq;	ap	SMALL_DRIPLEAF
	f	Lcwq;	aq	ROOTED_DIRT
	f	Lcwq;	ar	HANGING_ROOTS
	f	Lcwq;	as	AZALEA_LEAVES
	f	Lcwq;	at	SCULK_SENSOR
	f	Lcwq;	au	SCULK_CATALYST
	f	Lcwq;	av	SCULK
	f	Lcwq;	aw	SCULK_VEIN
	f	Lcwq;	ax	SCULK_SHRIEKER
	f	Lcwq;	ay	GLOW_LICHEN
	f	Lcwq;	az	DEEPSLATE
	f	Lcwq;	b	GRAVEL
	f	Lamq;	ba	placeSound
	f	Lamq;	bb	hitSound
	f	Lamq;	bc	fallSound
	f	Lcwq;	c	GRASS
	f	Lcwq;	d	LILY_PAD
	f	Lcwq;	e	STONE
	f	Lcwq;	f	METAL
	f	Lcwq;	g	GLASS
	f	Lcwq;	h	WOOL
	f	Lcwq;	i	SAND
	f	Lcwq;	j	SNOW
	f	Lcwq;	k	POWDER_SNOW
	f	Lcwq;	l	LADDER
	f	Lcwq;	m	ANVIL
	f	Lcwq;	n	SLIME_BLOCK
	f	Lcwq;	o	HONEY_BLOCK
	f	Lcwq;	p	WET_GRASS
	f	Lcwq;	q	CORAL_BLOCK
	f	Lcwq;	r	BAMBOO
	f	Lcwq;	s	BAMBOO_SAPLING
	f	Lcwq;	t	SCAFFOLDING
	f	Lcwq;	u	SWEET_BERRY_BUSH
	f	Lcwq;	v	CROP
	f	Lcwq;	w	HARD_CROP
	f	Lcwq;	x	VINE
	f	Lcwq;	y	NETHER_WART
	f	Lcwq;	z	LANTERN
c	cwr	net/minecraft/world/level/block/SpawnerBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lbfl;)Ltj;	a	lambda$getSpawnEntityDisplayName$0
		p	0		entityType
	m	(Lcfv;)Ljava/util/Optional;	a	getSpawnEntityDisplayName
		p	1		stack
	m	(Lcfv;Lclo;Ljava/util/List;Lchl;)V	a	appendHoverText
		p	1		stack
		p	2		world
		p	3		tooltip
		p	4		options
	m	(Lcmi;Ldbq;Lczg;)Lczf;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Ldbq;Laip;Lgt;Lcfv;Z)V	a	spawnAfterBreak
		p	1		state
		p	2		world
		p	3		pos
		p	4		tool
		p	5		dropExperience
	m	(Lgt;Ldbq;)Lcze;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Ldbq;)Lcvj;	b_	getRenderShape
		p	1		state
c	cws	net/minecraft/world/level/block/SpongeBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lcmi;Lgt;)V	a	tryAbsorbWater
		p	1		world
		p	2		pos
	m	(Ldbq;Lcmi;Lgt;Lcpi;Lgt;Z)V	a	neighborChanged
		p	1		state
		p	2		world
		p	3		pos
		p	4		sourceBlock
		p	5		sourcePos
		p	6		notify
	m	(Lcmi;Lgt;)Z	b	removeWaterBreadthFirstSearch
		p	1		world
		p	2		pos
	m	(Ldbq;Lcmi;Lgt;Ldbq;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	f	I	a	MAX_DEPTH
	f	I	b	MAX_COUNT
c	cwt	net/minecraft/world/level/block/SporeBlossomBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lcmi;Lgt;Lapo;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Lcml;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	f	Ledx;	a	SHAPE
	f	I	b	ADD_PARTICLE_ATTEMPTS
	f	I	c	PARTICLE_XZ_RADIUS
	f	I	d	PARTICLE_Y_MAX
c	cwu	net/minecraft/world/level/block/SpreadingSnowyDirtBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Ldbq;Laip;Lgt;Lapo;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Lcml;Lgt;)Z	b	canBeGrass
		p	0		state
		p	1		world
		p	2		pos
	m	(Ldbq;Lcml;Lgt;)Z	c	canPropagate
		p	0		state
		p	1		world
		p	2		pos
c	cwv	net/minecraft/world/level/block/StainedGlassBlock
	m	(Lcel;Ldbp$d;)V	<init>	<init>
		p	1		color
		p	2		settings
	m	()Lcel;	a	getColor
	f	Lcel;	a	color
c	cww	net/minecraft/world/level/block/StainedGlassPaneBlock
	m	(Lcel;Ldbp$d;)V	<init>	<init>
		p	1		color
		p	2		settings
	m	()Lcel;	a	getColor
	f	Lcel;	i	color
c	cwx	net/minecraft/world/level/block/StairBlock
	m	(Ldbq;Ldbp$d;)V	<init>	<init>
		p	1		baseBlockState
		p	2		settings
	m	(ILedx;Ledx;Ledx;Ledx;Ledx;)Ledx;	a	makeStairShape
		p	0		i
		p	1		base
		p	2		northWest
		p	3		northEast
		p	4		southWest
		p	5		southEast
	m	(Lcic;)Ldbq;	a	getStateForPlacement
		p	1		ctx
	m	(Lcmi;Lgt;Lcma;)V	a	wasExploded
		p	1		world
		p	2		pos
		p	3		explosion
	m	(Lcmi;Lgt;Ldbq;Lbfh;)V	a	stepOn
		p	1		world
		p	2		pos
		p	3		state
		p	4		entity
	m	(Lcmj;Lgt;Ldbq;)V	a	destroy
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldbq;Laip;Lgt;Lapo;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Lclo;Lgt;Ldxa;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lcmi;Lgt;Lapo;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Lcmi;Lgt;Lbym;)V	a	attack
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
	m	(Ldbq;Lcmi;Lgt;Lbym;Lbdx;Leda;)Lbdy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldbq;Lcmi;Lgt;Ldbq;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Ldbq;Lcua;)Ldbq;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldbq;Lcvq;)Ldbq;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ledx;Ledx;Ledx;Ledx;Ledx;)[Ledx;	a	makeShapes
		p	0		base
		p	1		northWest
		p	2		northEast
		p	3		southWest
		p	4		southEast
	m	(Ledx;Ledx;Ledx;Ledx;Ledx;I)Ledx;	a	lambda$makeShapes$0
		p	5		i
	m	(I)[Ledx;	b	lambda$makeShapes$1
	m	(Ldbq;Laip;Lgt;Lapo;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Lcmi;Lgt;Ldbq;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	m	(Ldbq;Lclo;Lgt;Lgz;)Z	c	canTakeShape
		p	0		state
		p	1		world
		p	2		pos
		p	3		dir
	m	(Ldbq;)Ldwj;	c_	getFluidState
		p	1		state
	m	()F	e	getExplosionResistance
	m	(Ldbq;)Z	e_	isRandomlyTicking
		p	1		state
	m	(Ldbq;)Z	g_	useShapeForLightOcclusion
		p	1		state
	m	(Ldbq;)Z	h	isStairs
		p	0		state
	m	(Ldbq;Lclo;Lgt;)Ldda;	i	getStairsShape
		p	0		state
		p	1		world
		p	2		pos
	m	(Ldbq;)I	n	getShapeIndex
		p	1		state
	f	[Ledx;	E	TOP_SHAPES
	f	[Ledx;	F	BOTTOM_SHAPES
	f	[I	G	SHAPE_BY_STATE
	f	Lcpi;	H	base
	f	Ldbq;	I	baseState
	f	Ldcl;	a	FACING
	f	Ldcp;	b	HALF
	f	Ldcp;	c	SHAPE
	f	Ldci;	d	WATERLOGGED
	f	Ledx;	e	TOP_AABB
	f	Ledx;	f	BOTTOM_AABB
	f	Ledx;	g	OCTET_NNN
	f	Ledx;	h	OCTET_NNP
	f	Ledx;	i	OCTET_NPN
	f	Ledx;	j	OCTET_NPP
	f	Ledx;	k	OCTET_PNN
	f	Ledx;	l	OCTET_PNP
	f	Ledx;	m	OCTET_PPN
	f	Ledx;	n	OCTET_PPP
c	cwx$1	net/minecraft/world/level/block/StairBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$state$properties$StairsShape
	f	[I	b	$SwitchMap$net$minecraft$world$level$block$Mirror
c	cwy	net/minecraft/world/level/block/StandingSignBlock
	m	(Ldbp$d;Ldde;)V	<init>	<init>
		p	1		settings
		p	2		type
	m	(Lcic;)Ldbq;	a	getStateForPlacement
		p	1		ctx
	m	(Ldbq;Lcml;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lcua;)Ldbq;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldbq;Lcvq;)Ldbq;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	f	Ldcr;	a	ROTATION
c	cwz	net/minecraft/world/level/block/StemBlock
	m	(Lcxa;Ljava/util/function/Supplier;Ldbp$d;)V	<init>	<init>
		p	1		gourdBlock
		p	2		pickBlockItem
		p	3		settings
	m	(Laip;Lapo;Lgt;Ldbq;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lclo;Lgt;Ldbq;)Lcfv;	a	getCloneItemStack
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcmi;Lapo;Lgt;Ldbq;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcml;Lgt;Ldbq;Z)Z	a	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
		p	4		isClient
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	()Lcxa;	b	getFruit
	m	(Ldbq;Laip;Lgt;Lapo;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Lclo;Lgt;)Z	d	mayPlaceOn
		p	1		floor
		p	2		world
		p	3		pos
	f	I	a	MAX_AGE
	f	Ldcr;	b	AGE
	f	F	c	AABB_OFFSET
	f	[Ledx;	d	SHAPE_BY_AGE
	f	Lcxa;	e	fruit
	f	Ljava/util/function/Supplier;	f	seedSupplier
c	cxa	net/minecraft/world/level/block/StemGrownBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	()Lcwz;	b	getStem
	m	()Lcoj;	c	getAttachedStem
c	cxb	net/minecraft/world/level/block/StonecutterBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lcic;)Ldbq;	a	getStateForPlacement
		p	1		ctx
	m	(Lcmi;Lgt;ILbyl;Lbym;)Lcbd;	a	lambda$getMenuProvider$0
		p	2		syncId
		p	3		playerInventory
		p	4		player
	m	(Ldbq;Lclo;Lgt;Ldxa;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lcmi;Lgt;Lbym;Lbdx;Leda;)Lbdy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldbq;Lcua;)Ldbq;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldbq;Lcvq;)Ldbq;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldbq;Lcmi;Lgt;)Lbeb;	b	getMenuProvider
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;)Lcvj;	b_	getRenderShape
		p	1		state
	m	(Ldbq;)Z	g_	useShapeForLightOcclusion
		p	1		state
	f	Ldcl;	a	FACING
	f	Ledx;	b	SHAPE
	f	Ltj;	c	CONTAINER_TITLE
c	cxc	net/minecraft/world/level/block/StructureBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Laip;Ldao;)V	a	trigger
		p	1		world
		p	2		blockEntity
	m	(Lcmi;Lgt;Ldbq;Lbfx;Lcfv;)V	a	setPlacedBy
		p	1		world
		p	2		pos
		p	3		state
		p	4		placer
		p	5		itemStack
	m	(Ldbq;Lcmi;Lgt;Lbym;Lbdx;Leda;)Lbdy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldbq;Lcmi;Lgt;Lcpi;Lgt;Z)V	a	neighborChanged
		p	1		state
		p	2		world
		p	3		pos
		p	4		sourceBlock
		p	5		sourcePos
		p	6		notify
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lgt;Ldbq;)Lcze;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Ldbq;)Lcvj;	b_	getRenderShape
		p	1		state
	f	Ldcp;	a	MODE
c	cxc$1	net/minecraft/world/level/block/StructureBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$state$properties$StructureMode
c	cxd	net/minecraft/world/level/block/StructureVoidBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lclo;Lgt;)F	b	getShadeBrightness
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;)Lcvj;	b_	getRenderShape
		p	1		state
	m	(Ldbq;)Ldwp;	d	getPistonPushReaction
		p	1		state
	f	D	a	SIZE
	f	Ledx;	b	SHAPE
c	cxe	net/minecraft/world/level/block/SugarCaneBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Ldbq;Laip;Lgt;Lapo;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lcml;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldbq;Laip;Lgt;Lapo;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	f	Ldcr;	a	AGE
	f	F	b	AABB_OFFSET
	f	Ledx;	c	SHAPE
c	cxf	net/minecraft/world/level/block/SupportType
	m	()[Lcxf;	a	$values
	m	(Ldbq;Lclo;Lgt;Lgz;)Z	a	isSupporting
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	f	Lcxf;	a	FULL
	f	Lcxf;	b	CENTER
	f	Lcxf;	c	RIGID
	f	[Lcxf;	d	$VALUES
c	cxf$1	net/minecraft/world/level/block/SupportType$1
	m	(Ldbq;Lclo;Lgt;Lgz;)Z	a	isSupporting
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
c	cxf$2	net/minecraft/world/level/block/SupportType$2
	m	(Ldbq;Lclo;Lgt;Lgz;)Z	a	isSupporting
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	f	I	d	CENTER_SUPPORT_WIDTH
	f	Ledx;	e	CENTER_SUPPORT_SHAPE
c	cxf$3	net/minecraft/world/level/block/SupportType$3
	m	(Ldbq;Lclo;Lgt;Lgz;)Z	a	isSupporting
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	f	I	d	RIGID_SUPPORT_WIDTH
	f	Ledx;	e	RIGID_SUPPORT_SHAPE
c	cxg	net/minecraft/world/level/block/SuspiciousEffectHolder
	m	()Ljava/util/List;	a	getAllEffectHolders
	m	(Lcmh;)Lcxg;	a	tryGet
		p	0		item
	m	()Lbew;	b	getSuspiciousEffect
	m	()I	c	getEffectDuration
c	cxh	net/minecraft/world/level/block/SuspiciousSandBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lcmi;Lgt;Lbve;)V	a	onBrokenAfterFall
		p	1		world
		p	2		pos
		p	3		fallingBlockEntity
	m	(Ldbq;Laip;Lgt;Lapo;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Lcmi;Lgt;Lapo;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lgt;Ldbq;)Lcze;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Ldbq;Lcmi;Lgt;Ldbq;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	m	(Ldbq;)Lcvj;	b_	getRenderShape
		p	1		state
	m	(Ldbq;)Ldwp;	d	getPistonPushReaction
		p	1		state
	f	I	a	TICK_DELAY
	f	Ldcr;	b	DUSTED
c	cxi	net/minecraft/world/level/block/SweetBerryBushBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Laip;Lapo;Lgt;Ldbq;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lclo;Lgt;Ldbq;)Lcfv;	a	getCloneItemStack
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcmi;Lapo;Lgt;Ldbq;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcml;Lgt;Ldbq;Z)Z	a	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
		p	4		isClient
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lcmi;Lgt;Lbfh;)V	a	entityInside
		p	1		state
		p	2		world
		p	3		pos
		p	4		entity
	m	(Ldbq;Lcmi;Lgt;Lbym;Lbdx;Leda;)Lbdy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldbq;Laip;Lgt;Lapo;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;)Z	e_	isRandomlyTicking
		p	1		state
	f	I	a	MAX_AGE
	f	Ldcr;	b	AGE
	f	F	c	HURT_SPEED_THRESHOLD
	f	Ledx;	d	SAPLING_SHAPE
	f	Ledx;	e	MID_GROWTH_SHAPE
c	cxj	net/minecraft/world/level/block/TallFlowerBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Laip;Lapo;Lgt;Ldbq;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcmi;Lapo;Lgt;Ldbq;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcml;Lgt;Ldbq;Z)Z	a	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
		p	4		isClient
	m	(Ldbq;Lcic;)Z	a	canBeReplaced
		p	1		state
		p	2		context
c	cxk	net/minecraft/world/level/block/TallGrassBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Laip;Lapo;Lgt;Ldbq;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcmi;Lapo;Lgt;Ldbq;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcml;Lgt;Ldbq;Z)Z	a	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
		p	4		isClient
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	f	F	a	AABB_OFFSET
	f	Ledx;	b	SHAPE
c	cxl	net/minecraft/world/level/block/TallSeagrassBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lcic;)Ldbq;	a	getStateForPlacement
		p	1		ctx
	m	(Lclo;Lgt;Ldbq;)Lcfv;	a	getCloneItemStack
		p	1		world
		p	2		pos
		p	3		state
	m	(Lclo;Lgt;Ldbq;Ldwi;)Z	a	canPlaceLiquid
		p	1		world
		p	2		pos
		p	3		state
		p	4		fluid
	m	(Lcmj;Lgt;Ldbq;Ldwj;)Z	a	placeLiquid
		p	1		world
		p	2		pos
		p	3		state
		p	4		fluidState
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lcml;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;)Ldwj;	c_	getFluidState
		p	1		state
	m	(Ldbq;Lclo;Lgt;)Z	d	mayPlaceOn
		p	1		floor
		p	2		world
		p	3		pos
	f	Ldcp;	b	HALF
	f	F	c	AABB_OFFSET
	f	Ledx;	d	SHAPE
c	cxm	net/minecraft/world/level/block/TargetBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lcmi;Ldbq;Leda;Lbze;)V	a	onProjectileHit
		p	1		world
		p	2		state
		p	3		hit
		p	4		projectile
	m	(Lcmj;Ldbq;ILgt;I)V	a	setOutputPower
		p	0		world
		p	1		state
		p	2		power
		p	3		pos
		p	4		delay
	m	(Lcmj;Ldbq;Leda;Lbfh;)I	a	updateRedstoneOutput
		p	0		world
		p	1		state
		p	2		hitResult
		p	3		entity
	m	(Ldbq;Laip;Lgt;Lapo;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Lclo;Lgt;Lgz;)I	a	getSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Leda;Lede;)I	a	getRedstoneStrength
		p	0		hitResult
		p	1		pos
	m	(Ldbq;Lcmi;Lgt;Ldbq;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	m	(Ldbq;)Z	f_	isSignalSource
		p	1		state
	f	Ldcr;	a	OUTPUT_POWER
	f	I	b	ACTIVATION_TICKS_ARROWS
	f	I	c	ACTIVATION_TICKS_OTHER
c	cxn	net/minecraft/world/level/block/TintedGlassBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Ldbq;Lclo;Lgt;)Z	c	propagatesSkylightDown
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lclo;Lgt;)I	g	getLightBlock
		p	1		state
		p	2		world
		p	3		pos
c	cxo	net/minecraft/world/level/block/TntBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lbdx;Lbym;)V	a	lambda$use$0
		p	1		player
	m	(Lcma;)Z	a	dropFromExplosion
		p	1		explosion
	m	(Lcmi;Ldbq;Leda;Lbze;)V	a	onProjectileHit
		p	1		world
		p	2		state
		p	3		hit
		p	4		projectile
	m	(Lcmi;Lgt;)V	a	explode
		p	0		world
		p	1		pos
	m	(Lcmi;Lgt;Lbfx;)V	a	explode
		p	0		world
		p	1		pos
		p	2		igniter
	m	(Lcmi;Lgt;Lcma;)V	a	wasExploded
		p	1		world
		p	2		pos
		p	3		explosion
	m	(Lcmi;Lgt;Ldbq;Lbym;)V	a	playerWillDestroy
		p	1		world
		p	2		pos
		p	3		state
		p	4		player
	m	(Ldbq;Lcmi;Lgt;Lbym;Lbdx;Leda;)Lbdy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldbq;Lcmi;Lgt;Lcpi;Lgt;Z)V	a	neighborChanged
		p	1		state
		p	2		world
		p	3		pos
		p	4		sourceBlock
		p	5		sourcePos
		p	6		notify
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldbq;Lcmi;Lgt;Ldbq;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	f	Ldci;	a	UNSTABLE
c	cxp	net/minecraft/world/level/block/TorchBlock
	m	(Ldbp$d;Lis;)V	<init>	<init>
		p	1		settings
		p	2		particle
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lcmi;Lgt;Lapo;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Lcml;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	f	I	g	AABB_STANDING_OFFSET
	f	Ledx;	h	AABB
	f	Lis;	i	flameParticle
c	cxq	net/minecraft/world/level/block/TorchflowerCropBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lcmi;)I	a	getBonemealAgeIncrease
		p	1		world
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	()Ldcr;	b	getAgeProperty
	m	(I)Ldbq;	b	getStateForAge
		p	1		age
	m	(Ldbq;Laip;Lgt;Lapo;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	()I	c	getMaxAge
	m	()Lcmh;	d	getBaseSeedId
	f	I	a	MAX_AGE
	f	Ldcr;	b	AGE
	f	F	e	AABB_OFFSET
	f	[Ledx;	f	SHAPE_BY_AGE
c	cxr	net/minecraft/world/level/block/TrapDoorBlock
	m	(Ldbp$d;Ldcg;)V	<init>	<init>
		p	1		settings
		p	2		blockSetType
	m	(Lbym;Lcmi;Lgt;Z)V	a	playSound
		p	1		player
		p	2		world
		p	3		pos
		p	4		open
	m	(Lcic;)Ldbq;	a	getStateForPlacement
		p	1		ctx
	m	(Ldbq;Lclo;Lgt;Ldxa;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lcmi;Lgt;Lbym;Lbdx;Leda;)Lbdy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldbq;Lcmi;Lgt;Lcpi;Lgt;Z)V	a	neighborChanged
		p	1		state
		p	2		world
		p	3		pos
		p	4		sourceBlock
		p	5		sourcePos
		p	6		notify
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldbq;)Ldwj;	c_	getFluidState
		p	1		state
	f	Ldci;	a	OPEN
	f	Ldcp;	b	HALF
	f	Ldci;	c	POWERED
	f	Ldci;	d	WATERLOGGED
	f	I	e	AABB_THICKNESS
	f	Ledx;	f	EAST_OPEN_AABB
	f	Ledx;	g	WEST_OPEN_AABB
	f	Ledx;	h	SOUTH_OPEN_AABB
	f	Ledx;	i	NORTH_OPEN_AABB
	f	Ledx;	j	BOTTOM_AABB
	f	Ledx;	k	TOP_AABB
	f	Ldcg;	l	type
c	cxr$1	net/minecraft/world/level/block/TrapDoorBlock$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
	f	[I	b	$SwitchMap$net$minecraft$world$level$pathfinder$PathComputationType
c	cxs	net/minecraft/world/level/block/TrappedChestBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Ldbq;Lclo;Lgt;Lgz;)I	a	getSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Lgt;Ldbq;)Lcze;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Ldbq;Lclo;Lgt;Lgz;)I	b	getDirectSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	()Lamy;	c	getOpenChestStat
	m	(Ldbq;)Z	f_	isSignalSource
		p	1		state
	m	()Lczg;	g	lambda$new$0
c	cxt	net/minecraft/world/level/block/TripWireBlock
	m	(Lcxu;Ldbp$d;)V	<init>	<init>
		p	1		hookBlock
		p	2		settings
	m	(Lcic;)Ldbq;	a	getStateForPlacement
		p	1		ctx
	m	(Lcmi;Lgt;)V	a	checkPressed
		p	1		world
		p	2		pos
	m	(Lcmi;Lgt;Ldbq;)V	a	updateSource
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcmi;Lgt;Ldbq;Lbym;)V	a	playerWillDestroy
		p	1		world
		p	2		pos
		p	3		state
		p	4		player
	m	(Ldbq;Laip;Lgt;Lapo;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lcmi;Lgt;Lbfh;)V	a	entityInside
		p	1		state
		p	2		world
		p	3		pos
		p	4		entity
	m	(Ldbq;Lcmi;Lgt;Ldbq;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Ldbq;Lcua;)Ldbq;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldbq;Lcvq;)Ldbq;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldbq;Lgz;)Z	a	shouldConnectTo
		p	1		state
		p	2		facing
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldbq;Lcmi;Lgt;Ldbq;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	f	Ldci;	a	POWERED
	f	Ldci;	b	ATTACHED
	f	Ldci;	c	DISARMED
	f	Ldci;	d	NORTH
	f	Ldci;	e	EAST
	f	Ldci;	f	SOUTH
	f	Ldci;	g	WEST
	f	Ledx;	h	AABB
	f	Ledx;	i	NOT_ATTACHED_AABB
	f	Ljava/util/Map;	j	PROPERTY_BY_DIRECTION
	f	I	k	RECHECK_PERIOD
	f	Lcxu;	l	hook
c	cxt$1	net/minecraft/world/level/block/TripWireBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$Rotation
	f	[I	b	$SwitchMap$net$minecraft$world$level$block$Mirror
c	cxu	net/minecraft/world/level/block/TripWireHookBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lcic;)Ldbq;	a	getStateForPlacement
		p	1		ctx
	m	(Lcmi;Lgt;Ldbq;Lbfx;Lcfv;)V	a	setPlacedBy
		p	1		world
		p	2		pos
		p	3		state
		p	4		placer
		p	5		itemStack
	m	(Lcmi;Lgt;Ldbq;ZZILdbq;)V	a	calculateState
		p	1		world
		p	2		pos
		p	3		state
		p	4		beingRemoved
	m	(Lcmi;Lgt;Lgz;)V	a	notifyNeighbors
		p	1		world
		p	2		pos
		p	3		direction
	m	(Lcmi;Lgt;ZZZZ)V	a	emitState
		p	1		world
		p	2		pos
		p	3		attached
		p	4		on
		p	5		detached
		p	6		off
	m	(Ldbq;Laip;Lgt;Lapo;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lclo;Lgt;Lgz;)I	a	getSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldbq;Lcmi;Lgt;Ldbq;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Ldbq;Lcml;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lcua;)Ldbq;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldbq;Lcvq;)Ldbq;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldbq;Lclo;Lgt;Lgz;)I	b	getDirectSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldbq;)Z	f_	isSignalSource
		p	1		state
	f	Ldcl;	a	FACING
	f	Ldci;	b	POWERED
	f	Ldci;	c	ATTACHED
	f	I	d	WIRE_DIST_MIN
	f	I	e	WIRE_DIST_MAX
	f	I	f	AABB_OFFSET
	f	Ledx;	g	NORTH_AABB
	f	Ledx;	h	SOUTH_AABB
	f	Ledx;	i	WEST_AABB
	f	Ledx;	j	EAST_AABB
	f	I	k	RECHECK_PERIOD
c	cxu$1	net/minecraft/world/level/block/TripWireHookBlock$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	cxv	net/minecraft/world/level/block/TurtleEggBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lcic;)Ldbq;	a	getStateForPlacement
		p	1		ctx
	m	(Lclo;Lgt;)Z	a	onSand
		p	0		world
		p	1		pos
	m	(Lcmi;)Z	a	shouldUpdateHatchLevel
		p	1		world
	m	(Lcmi;Lbfh;)Z	a	canDestroyEgg
		p	1		world
		p	2		entity
	m	(Lcmi;Lbym;Lgt;Ldbq;Lcze;Lcfv;)V	a	playerDestroy
		p	1		world
		p	2		player
		p	3		pos
		p	4		state
		p	5		blockEntity
		p	6		tool
	m	(Lcmi;Ldbq;Lgt;Lbfh;F)V	a	fallOn
		p	1		world
		p	2		state
		p	3		pos
		p	4		entity
		p	5		fallDistance
	m	(Lcmi;Ldbq;Lgt;Lbfh;I)V	a	destroyEgg
		p	1		world
		p	2		state
		p	3		pos
		p	4		entity
		p	5		inverseChance
	m	(Lcmi;Lgt;Ldbq;)V	a	decreaseEggs
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcmi;Lgt;Ldbq;Lbfh;)V	a	stepOn
		p	1		world
		p	2		pos
		p	3		state
		p	4		entity
	m	(Ldbq;Lcic;)Z	a	canBeReplaced
		p	1		state
		p	2		context
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lclo;Lgt;)Z	b	isSand
		p	0		world
		p	1		pos
	m	(Ldbq;Laip;Lgt;Lapo;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Lcmi;Lgt;Ldbq;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	f	I	a	MAX_HATCH_LEVEL
	f	I	b	MIN_EGGS
	f	I	c	MAX_EGGS
	f	Ldcr;	d	HATCH
	f	Ldcr;	e	EGGS
	f	Ledx;	f	ONE_EGG_AABB
	f	Ledx;	g	MULTIPLE_EGGS_AABB
c	cxw	net/minecraft/world/level/block/TwistingVinesBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lapo;)I	a	getBlocksToGrowWhenBonemealed
		p	1		random
	m	()Lcpi;	b	getBodyBlock
	m	(Ldbq;)Z	g	canGrowInto
		p	1		state
	f	Ledx;	f	SHAPE
c	cxx	net/minecraft/world/level/block/TwistingVinesPlantBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	()Lcss;	c	getHeadBlock
	f	Ledx;	d	SHAPE
c	cxy	net/minecraft/world/level/block/VineBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lcic;)Ldbq;	a	getStateForPlacement
		p	1		ctx
	m	(Lclo;Lgt;)Z	a	canSpread
		p	1		world
		p	2		pos
	m	(Lclo;Lgt;Lgz;)Z	a	isAcceptableNeighbour
		p	0		world
		p	1		pos
		p	2		direction
	m	(Ldbq;Lcic;)Z	a	canBeReplaced
		p	1		state
		p	2		context
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lcml;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lcua;)Ldbq;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldbq;Lcvq;)Ldbq;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldbq;Ldbq;Lapo;)Ldbq;	a	copyRandomFaces
		p	1		above
		p	2		state
		p	3		random
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lgz;)Ldci;	a	getPropertyForFace
		p	0		direction
	m	(Ljava/util/Map$Entry;)Z	a	lambda$static$0
		p	0		entry
	m	(Lclo;Lgt;Lgz;)Z	b	canSupportAtFace
		p	1		world
		p	2		pos
		p	3		side
	m	(Ldbq;Laip;Lgt;Lapo;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Lclo;Lgt;)Z	c	propagatesSkylightDown
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;)Ledx;	h	calculateShape
		p	0		state
	m	(Ldbq;Lclo;Lgt;)Ldbq;	i	getUpdatedState
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;)Z	n	hasFaces
		p	1		state
	m	(Ldbq;)I	o	countFaces
		p	1		state
	m	(Ldbq;)Z	p	hasHorizontalConnection
		p	1		state
	f	Ldci;	a	UP
	f	Ldci;	b	NORTH
	f	Ldci;	c	EAST
	f	Ldci;	d	SOUTH
	f	Ldci;	e	WEST
	f	Ljava/util/Map;	f	PROPERTY_BY_DIRECTION
	f	F	g	AABB_OFFSET
	f	Ledx;	h	UP_AABB
	f	Ledx;	i	WEST_AABB
	f	Ledx;	j	EAST_AABB
	f	Ledx;	k	NORTH_AABB
	f	Ledx;	l	SOUTH_AABB
	f	Ljava/util/Map;	m	shapesCache
c	cxy$1	net/minecraft/world/level/block/VineBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$Rotation
	f	[I	b	$SwitchMap$net$minecraft$world$level$block$Mirror
c	cxz	net/minecraft/world/level/block/WallBannerBlock
	m	(Lcel;Ldbp$d;)V	<init>	<init>
		p	1		color
		p	2		settings
	m	(Lcic;)Ldbq;	a	getStateForPlacement
		p	1		ctx
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lcml;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lcua;)Ldbq;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldbq;Lcvq;)Ldbq;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	()Ljava/lang/String;	h	getDescriptionId
	f	Ldcl;	a	FACING
	f	Ljava/util/Map;	b	SHAPES
c	cya	net/minecraft/world/level/block/WallBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(FFFFFF)Ljava/util/Map;	a	makeShapes
	m	(Lcic;)Ldbq;	a	getStateForPlacement
		p	1		ctx
	m	(Lcml;Ldbq;Lgt;Ldbq;)Ldbq;	a	topUpdate
		p	1		world
		p	2		state
		p	3		pos
		p	4		aboveState
	m	(Lcml;Ldbq;Lgt;Ldbq;ZZZZ)Ldbq;	a	updateShape
		p	1		world
		p	2		state
		p	3		pos
		p	4		aboveState
		p	5		north
		p	6		east
		p	7		south
		p	8		west
	m	(Lcml;Lgt;Ldbq;Lgt;Ldbq;Lgz;)Ldbq;	a	sideUpdate
		p	1		world
		p	2		pos
		p	3		state
		p	4		neighborPos
		p	5		neighborState
		p	6		direction
	m	(Ldbq;Lclo;Lgt;Ldxa;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lcua;)Ldbq;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldbq;Lcvq;)Ldbq;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldbq;Ldbq;Ledx;)Z	a	shouldRaisePost
		p	1		state
		p	2		aboveState
		p	3		aboveShape
	m	(Ldbq;Ldcu;)Z	a	isConnected
		p	0		state
		p	1		property
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldbq;ZLgz;)Z	a	connectsTo
		p	1		state
		p	2		faceFullSquare
		p	3		side
	m	(Ldbq;ZZZZLedx;)Ldbq;	a	updateSides
		p	1		state
		p	2		north
		p	3		east
		p	4		south
		p	5		west
		p	6		aboveShape
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ledx;Lddd;Ledx;Ledx;)Ledx;	a	applyWallShape
		p	0		base
		p	1		wallShape
		p	2		tall
		p	3		low
	m	(Ledx;Ledx;)Z	a	isCovered
		p	0		aboveShape
		p	1		tallShape
	m	(ZLedx;Ledx;)Lddd;	a	makeWallState
		p	1		connected
		p	2		aboveShape
		p	3		tallShape
	m	(Ldbq;Lclo;Lgt;)Z	c	propagatesSkylightDown
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	c	getCollisionShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;)Ldwj;	c_	getFluidState
		p	1		state
	f	Ledx;	E	POST_TEST
	f	Ledx;	F	NORTH_TEST
	f	Ledx;	G	SOUTH_TEST
	f	Ledx;	H	WEST_TEST
	f	Ledx;	I	EAST_TEST
	f	Ldci;	a	UP
	f	Ldcp;	b	EAST_WALL
	f	Ldcp;	c	NORTH_WALL
	f	Ldcp;	d	SOUTH_WALL
	f	Ldcp;	e	WEST_WALL
	f	Ldci;	f	WATERLOGGED
	f	Ljava/util/Map;	g	shapeByIndex
	f	Ljava/util/Map;	h	collisionShapeByIndex
	f	I	i	WALL_WIDTH
	f	I	j	WALL_HEIGHT
	f	I	k	POST_WIDTH
	f	I	l	POST_COVER_WIDTH
	f	I	m	WALL_COVER_START
	f	I	n	WALL_COVER_END
c	cya$1	net/minecraft/world/level/block/WallBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$Rotation
	f	[I	b	$SwitchMap$net$minecraft$world$level$block$Mirror
c	cyb	net/minecraft/world/level/block/WallHangingSignBlock
	m	(Ldbp$d;Ldde;)V	<init>	<init>
		p	1		settings
		p	2		type
	m	(Lcic;)Ldbq;	a	getStateForPlacement
		p	1		ctx
	m	(Lcml;Ldbq;Lgt;Lgz;)Z	a	canAttachTo
		p	1		world
		p	2		state
		p	3		toPos
		p	4		direction
	m	(Ldbq;Lclo;Lgt;Ldxa;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lcmi;Lgt;Lbym;Lbdx;Leda;)Lbdy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldbq;Lcua;)Ldbq;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldbq;Lcvq;)Ldbq;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lgt;Ldbq;)Lcze;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Ldbq;Lcml;Lgt;)Z	b	canPlace
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lclo;Lgt;)Ledx;	b_	getBlockSupportShape
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	c	getCollisionShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	()Ljava/lang/String;	h	getDescriptionId
	f	Ldcl;	a	FACING
	f	Ledx;	b	PLANK_NORTHSOUTH
	f	Ledx;	c	PLANK_EASTWEST
	f	Ledx;	d	SHAPE_NORTHSOUTH
	f	Ledx;	h	SHAPE_EASTWEST
	f	Ljava/util/Map;	i	AABBS
c	cyb$1	net/minecraft/world/level/block/WallHangingSignBlock$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	cyc	net/minecraft/world/level/block/WallSignBlock
	m	(Ldbp$d;Ldde;)V	<init>	<init>
		p	1		settings
		p	2		type
	m	(Lcic;)Ldbq;	a	getStateForPlacement
		p	1		ctx
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lcml;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lcua;)Ldbq;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldbq;Lcvq;)Ldbq;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	()Ljava/lang/String;	h	getDescriptionId
	f	Ldcl;	a	FACING
	f	F	b	AABB_THICKNESS
	f	F	c	AABB_BOTTOM
	f	F	d	AABB_TOP
	f	Ljava/util/Map;	h	AABBS
c	cyd	net/minecraft/world/level/block/WallSkullBlock
	m	(Lcwg$a;Ldbp$d;)V	<init>	<init>
		p	1		type
		p	2		settings
	m	(Lcic;)Ldbq;	a	getStateForPlacement
		p	1		ctx
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lcua;)Ldbq;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldbq;Lcvq;)Ldbq;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	()Ljava/lang/String;	h	getDescriptionId
	f	Ldcl;	a	FACING
	f	Ljava/util/Map;	b	AABBS
c	cye	net/minecraft/world/level/block/WallTorchBlock
	m	(Ldbp$d;Lis;)V	<init>	<init>
		p	1		settings
		p	2		particle
	m	(Lcic;)Ldbq;	a	getStateForPlacement
		p	1		ctx
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lcmi;Lgt;Lapo;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Lcml;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lcua;)Ldbq;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldbq;Lcvq;)Ldbq;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	()Ljava/lang/String;	h	getDescriptionId
	m	(Ldbq;)Ledx;	h	getShape
		p	0		state
	f	Ldcl;	a	FACING
	f	F	b	AABB_OFFSET
	f	Ljava/util/Map;	c	AABBS
c	cyf	net/minecraft/world/level/block/WaterlilyBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lcmi;Lgt;Lbfh;)V	a	entityInside
		p	1		state
		p	2		world
		p	3		pos
		p	4		entity
	m	(Ldbq;Lclo;Lgt;)Z	d	mayPlaceOn
		p	1		floor
		p	2		world
		p	3		pos
	f	Ledx;	a	AABB
c	cyg	net/minecraft/world/level/block/WeatheringCopper
	m	()F	a	getChanceModifier
	m	(Lcpi;)Ljava/util/Optional;	a	getPrevious
		p	0		block
	m	(Ldbq;)Ljava/util/Optional;	a	getNext
		p	1		state
	m	(Ldbq;Lcpi;)Ldbq;	a	lambda$getNext$3
		p	1		block
	m	(Lcpi;)Lcpi;	b	getFirst
		p	0		block
	m	(Ldbq;)Ljava/util/Optional;	b	getPrevious
		p	0		state
	m	(Ldbq;Lcpi;)Ldbq;	b	lambda$getPrevious$2
		p	1		block
	m	()Lcom/google/common/collect/BiMap;	c	lambda$static$1
	m	(Lcpi;)Ljava/util/Optional;	c	getNext
		p	0		block
	m	(Ldbq;)Ldbq;	c	getFirst
		p	0		state
	m	()Lcom/google/common/collect/BiMap;	d	lambda$static$0
	f	Ljava/util/function/Supplier;	s_	NEXT_BY_BLOCK
	f	Ljava/util/function/Supplier;	t_	PREVIOUS_BY_BLOCK
c	cyg$a	net/minecraft/world/level/block/WeatheringCopper$WeatherState
	m	()[Lcyg$a;	a	$values
	f	Lcyg$a;	a	UNAFFECTED
	f	Lcyg$a;	b	EXPOSED
	f	Lcyg$a;	c	WEATHERED
	f	Lcyg$a;	d	OXIDIZED
	f	[Lcyg$a;	e	$VALUES
c	cyh	net/minecraft/world/level/block/WeatheringCopperFullBlock
	m	(Lcyg$a;Ldbp$d;)V	<init>	<init>
		p	1		oxidationLevel
		p	2		settings
	m	()Ljava/lang/Enum;	b	getAge
	m	(Ldbq;Laip;Lgt;Lapo;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;)Z	e_	isRandomlyTicking
		p	1		state
	m	()Lcyg$a;	g	getAge
	f	Lcyg$a;	d	weatherState
c	cyi	net/minecraft/world/level/block/WeatheringCopperSlabBlock
	m	(Lcyg$a;Ldbp$d;)V	<init>	<init>
		p	1		oxidationLevel
		p	2		settings
	m	()Ljava/lang/Enum;	b	getAge
	m	(Ldbq;Laip;Lgt;Lapo;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;)Z	e_	isRandomlyTicking
		p	1		state
	m	()Lcyg$a;	g	getAge
	f	Lcyg$a;	e	weatherState
c	cyj	net/minecraft/world/level/block/WeatheringCopperStairBlock
	m	(Lcyg$a;Ldbq;Ldbp$d;)V	<init>	<init>
		p	1		oxidationLevel
		p	2		baseBlockState
		p	3		settings
	m	()Ljava/lang/Enum;	b	getAge
	m	(Ldbq;Laip;Lgt;Lapo;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;)Z	e_	isRandomlyTicking
		p	1		state
	m	()Lcyg$a;	g	getAge
	f	Lcyg$a;	G	weatherState
c	cyk	net/minecraft/world/level/block/WebBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Ldbq;Lcmi;Lgt;Lbfh;)V	a	entityInside
		p	1		state
		p	2		world
		p	3		pos
		p	4		entity
c	cyl	net/minecraft/world/level/block/WeepingVinesBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lapo;)I	a	getBlocksToGrowWhenBonemealed
		p	1		random
	m	()Lcpi;	b	getBodyBlock
	m	(Ldbq;)Z	g	canGrowInto
		p	1		state
	f	Ledx;	f	SHAPE
c	cym	net/minecraft/world/level/block/WeepingVinesPlantBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	()Lcss;	c	getHeadBlock
	f	Ledx;	d	SHAPE
c	cyn	net/minecraft/world/level/block/WeightedPressurePlateBlock
	m	(ILdbp$d;Ldcg;)V	<init>	<init>
		p	1		weight
		p	2		settings
		p	3		blockSetType
	m	(Ldbq;I)Ldbq;	a	setSignalForState
		p	1		state
		p	2		rsOut
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	()I	b	getPressedTime
	m	(Lcmi;Lgt;)I	b	getSignalStrength
		p	1		world
		p	2		pos
	m	(Ldbq;)I	g	getSignalForState
		p	1		state
	f	Ldcr;	d	POWER
	f	I	e	maxWeight
c	cyo	net/minecraft/world/level/block/WetSpongeBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Ldbq;Lcmi;Lgt;Lapo;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Lcmi;Lgt;Ldbq;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
c	cyp	net/minecraft/world/level/block/WitherRoseBlock
	m	(Lbew;Ldbp$d;)V	<init>	<init>
		p	1		effect
		p	2		settings
	m	(Ldbq;Lcmi;Lgt;Lapo;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Lcmi;Lgt;Lbfh;)V	a	entityInside
		p	1		state
		p	2		world
		p	3		pos
		p	4		entity
	m	(Ldbq;Lclo;Lgt;)Z	d	mayPlaceOn
		p	1		floor
		p	2		world
		p	3		pos
c	cyq	net/minecraft/world/level/block/WitherSkullBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lcmi;Lgt;Ldal;)V	a	checkSpawn
		p	0		world
		p	1		pos
		p	2		blockEntity
	m	(Lcmi;Lgt;Ldbq;Lbfx;Lcfv;)V	a	setPlacedBy
		p	1		world
		p	2		pos
		p	3		state
		p	4		placer
		p	5		itemStack
	m	(Ldbu;)Z	a	lambda$getOrCreateWitherBase$1
		p	0		pos
	m	(Lcmi;Lgt;Lcfv;)Z	b	canSpawnMob
		p	0		world
		p	1		pos
		p	2		stack
	m	(Ldbu;)Z	b	lambda$getOrCreateWitherFull$0
		p	0		pos
	m	()Ldbv;	v	getOrCreateWitherFull
	m	()Ldbv;	w	getOrCreateWitherBase
	f	Ldbv;	e	witherPatternFull
	f	Ldbv;	f	witherPatternBase
c	cyr	net/minecraft/world/level/block/WitherWallSkullBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lcmi;Lgt;Ldbq;Lbfx;Lcfv;)V	a	setPlacedBy
		p	1		world
		p	2		pos
		p	3		state
		p	4		placer
		p	5		itemStack
c	cys	net/minecraft/world/level/block/WoolCarpetBlock
	m	(Lcel;Ldbp$d;)V	<init>	<init>
		p	1		dyeColor
		p	2		settings
	m	()Lcel;	b	getColor
	f	Lcel;	b	color
c	cyt	net/minecraft/world/level/block/entity/AbstractFurnaceBlockEntity
	m	(Lczg;Lgt;Ldbq;Lcjb;)V	<init>	<init>
		p	1		blockEntityType
		p	2		pos
		p	3		state
		p	4		recipeType
	m	()V	a	clearContent
	m	(I)Lcfv;	a	getItem
		p	1		slot
	m	(II)Lcfv;	a	removeItem
		p	1		slot
		p	2		amount
	m	(ILcfv;)V	a	setItem
		p	1		slot
		p	2		stack
	m	(ILcfv;Lgz;)Z	a	canPlaceItemThroughFace
		p	1		slot
		p	2		stack
		p	3		dir
	m	(Laip;Lede;)Ljava/util/List;	a	getRecipesToAwardAndPopExperience
		p	1		world
		p	2		pos
	m	(Laip;Lede;IF)V	a	createExperience
		p	0		world
		p	1		pos
		p	2		multiplier
		p	3		experience
	m	(Laiq;)V	a	awardUsedRecipesAndPopExperience
		p	1		player
	m	(Lbym;)Z	a	stillValid
		p	1		player
	m	(Lbyq;)V	a	fillStackedContents
		p	1		finder
	m	(Lcfv;)I	a	getBurnDuration
		p	1		fuel
	m	(Lciy;)V	a	setRecipeUsed
		p	1		recipe
	m	(Lcmi;Lcyt;)I	a	getTotalCookTime
		p	0		world
		p	1		furnace
	m	(Lcmi;Lgt;Ldbq;Lcyt;)V	a	serverTick
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Lgz;)[I	a	getSlotsForFace
		p	1		side
	m	(Lhr;Lciy;Lhm;I)Z	a	canBurn
		p	0		registryManager
		p	1		recipe
		p	2		slots
		p	3		count
	m	(Ljava/util/List;Laip;Lede;Lit/unimi/dsi/fastutil/objects/Object2IntMap$Entry;Lciy;)V	a	lambda$getRecipesToAwardAndPopExperience$1
		p	4		recipe
	m	(Ljava/util/Map;Lanv;I)V	a	add
		p	0		fuelTimes
		p	1		tag
		p	2		fuelTime
	m	(Ljava/util/Map;Lcmh;I)V	a	add
		p	0		fuelTimes
		p	1		item
		p	2		fuelTime
	m	(Lre;)V	a	load
		p	1		nbt
	m	(Lre;Ladd;Ljava/lang/Integer;)V	a	lambda$saveAdditional$0
		p	1		identifier
		p	2		count
	m	()Z	aa_	isEmpty
	m	()I	b	getContainerSize
	m	(I)Lcfv;	b	removeItemNoUpdate
		p	1		slot
	m	(ILcfv;)Z	b	canPlaceItem
		p	1		slot
		p	2		stack
	m	(ILcfv;Lgz;)Z	b	canTakeItemThroughFace
		p	1		slot
		p	2		stack
		p	3		dir
	m	(Lbym;)V	b	awardUsedRecipes
		p	1		player
	m	(Lcfq;)Z	b	isNeverAFurnaceFuel
		p	0		item
	m	(Lcfv;)Z	b	isFuel
		p	0		stack
	m	(Lhr;Lciy;Lhm;I)Z	b	burn
		p	0		registryManager
		p	1		recipe
		p	2		slots
		p	3		count
	m	(Lre;)V	b	saveAdditional
		p	1		nbt
	m	()Lciy;	d	getRecipeUsed
	m	()Ljava/util/Map;	f	getFuel
	m	()Z	i	isLit
	f	I	c	SLOT_INPUT
	f	I	d	SLOT_FUEL
	f	I	e	SLOT_RESULT
	f	I	f	DATA_LIT_TIME
	f	I	g	DATA_LIT_DURATION
	f	I	h	DATA_COOKING_PROGRESS
	f	I	i	DATA_COOKING_TOTAL_TIME
	f	I	j	NUM_DATA_VALUES
	f	I	k	BURN_TIME_STANDARD
	f	I	l	BURN_COOL_SPEED
	f	Lhm;	m	items
	f	Lcbn;	n	dataAccess
	f	[I	r	SLOTS_FOR_UP
	f	[I	s	SLOTS_FOR_DOWN
	f	[I	t	SLOTS_FOR_SIDES
	f	I	u	litTime
	f	I	v	litDuration
	f	I	w	cookingProgress
	f	I	x	cookingTotalTime
	f	Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;	y	recipesUsed
	f	Lciz$a;	z	quickCheck
c	cyt$1	net/minecraft/world/level/block/entity/AbstractFurnaceBlockEntity$1
	m	()I	a	getCount
	m	(I)I	a	get
		p	1		index
	m	(II)V	a	set
		p	1		index
		p	2		value
	f	Lcyt;	a	this$0
c	cyu	net/minecraft/world/level/block/entity/BannerBlockEntity
	m	(Lgt;Ldbq;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(Lgt;Ldbq;Lcel;)V	<init>	<init>
		p	1		pos
		p	2		state
		p	3		baseColor
	m	()Ltj;	Z	getName
	m	()Lvm;	a	getUpdatePacket
	m	(Lcel;Lrk;)Ljava/util/List;	a	createPatterns
		p	0		baseColor
		p	1		patternListNbt
	m	(Lcfv;)Lrk;	a	getItemPatterns
		p	0		stack
	m	(Lcfv;Lcel;)V	a	fromItem
		p	1		stack
		p	2		baseColor
	m	(Lre;)V	a	load
		p	1		nbt
	m	(Ltj;)V	a	setCustomName
		p	1		customName
	m	()Ltj;	ab	getCustomName
	m	()Lre;	aq_	getUpdateTag
	m	(Lcfv;)V	b	fromItem
		p	1		stack
	m	(Lre;)V	b	saveAdditional
		p	1		nbt
	m	()Ljava/util/List;	c	getPatterns
	m	(Lcfv;)I	c	getPatternCount
		p	0		stack
	m	(Lcfv;)V	d	removeLastPattern
		p	0		stack
	m	()Lcfv;	f	getItem
	m	()Lcel;	g	getBaseColor
	m	()Lvb;	h	getUpdatePacket
	f	I	a	MAX_PATTERNS
	f	Ljava/lang/String;	b	TAG_PATTERNS
	f	Ljava/lang/String;	c	TAG_PATTERN
	f	Ljava/lang/String;	d	TAG_COLOR
	f	Ltj;	e	name
	f	Lcel;	f	baseColor
	f	Lrk;	g	itemPatterns
	f	Ljava/util/List;	h	patterns
c	cyv	net/minecraft/world/level/block/entity/BannerPattern
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		id
	m	()Ljava/lang/String;	a	getHashname
	m	(Ladc;Z)Ladd;	a	location
		p	0		pattern
		p	1		banner
	m	(Ljava/lang/String;)Lhd;	a	byHash
		p	0		id
	m	(Ljava/lang/String;Lhd$c;)Z	a	lambda$byHash$0
		p	1		pattern
	f	Ljava/lang/String;	a	hashname
c	cyv$a	net/minecraft/world/level/block/entity/BannerPattern$Builder
	m	()Lrk;	a	toListTag
	m	(Ladc;Lcel;)Lcyv$a;	a	addPattern
		p	1		pattern
		p	2		color
	m	(Lcom/mojang/datafixers/util/Pair;)Lcyv$a;	a	addPattern
		p	1		pattern
	m	(Lhd;Lcel;)Lcyv$a;	a	addPattern
		p	1		pattern
		p	2		color
	f	Ljava/util/List;	a	patterns
c	cyw	net/minecraft/world/level/block/entity/BannerPatterns
	m	(Lhq;)Lcyv;	a	bootstrap
		p	0		registry
	m	(Ljava/lang/String;)Ladc;	a	create
		p	0		id
	f	Ladc;	A	HALF_VERTICAL
	f	Ladc;	B	HALF_HORIZONTAL
	f	Ladc;	C	HALF_VERTICAL_MIRROR
	f	Ladc;	D	HALF_HORIZONTAL_MIRROR
	f	Ladc;	E	BORDER
	f	Ladc;	F	CURLY_BORDER
	f	Ladc;	G	GRADIENT
	f	Ladc;	H	GRADIENT_UP
	f	Ladc;	I	BRICKS
	f	Ladc;	J	GLOBE
	f	Ladc;	K	CREEPER
	f	Ladc;	L	SKULL
	f	Ladc;	M	FLOWER
	f	Ladc;	N	MOJANG
	f	Ladc;	O	PIGLIN
	f	Ladc;	a	BASE
	f	Ladc;	b	SQUARE_BOTTOM_LEFT
	f	Ladc;	c	SQUARE_BOTTOM_RIGHT
	f	Ladc;	d	SQUARE_TOP_LEFT
	f	Ladc;	e	SQUARE_TOP_RIGHT
	f	Ladc;	f	STRIPE_BOTTOM
	f	Ladc;	g	STRIPE_TOP
	f	Ladc;	h	STRIPE_LEFT
	f	Ladc;	i	STRIPE_RIGHT
	f	Ladc;	j	STRIPE_CENTER
	f	Ladc;	k	STRIPE_MIDDLE
	f	Ladc;	l	STRIPE_DOWNRIGHT
	f	Ladc;	m	STRIPE_DOWNLEFT
	f	Ladc;	n	STRIPE_SMALL
	f	Ladc;	o	CROSS
	f	Ladc;	p	STRAIGHT_CROSS
	f	Ladc;	q	TRIANGLE_BOTTOM
	f	Ladc;	r	TRIANGLE_TOP
	f	Ladc;	s	TRIANGLES_BOTTOM
	f	Ladc;	t	TRIANGLES_TOP
	f	Ladc;	u	DIAGONAL_LEFT
	f	Ladc;	v	DIAGONAL_RIGHT
	f	Ladc;	w	DIAGONAL_LEFT_MIRROR
	f	Ladc;	x	DIAGONAL_RIGHT_MIRROR
	f	Ladc;	y	CIRCLE_MIDDLE
	f	Ladc;	z	RHOMBUS_MIDDLE
c	cyx	net/minecraft/world/level/block/entity/BarrelBlockEntity
	m	(Lgt;Ldbq;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(ILbyl;)Lcbd;	a	createMenu
		p	1		syncId
		p	2		playerInventory
	m	(Ldbq;Lamq;)V	a	playSound
		p	1		state
		p	2		soundEvent
	m	(Ldbq;Z)V	a	updateBlockState
		p	1		state
		p	2		open
	m	(Lhm;)V	a	setItems
		p	1		list
	m	(Lre;)V	a	load
		p	1		nbt
	m	()I	b	getContainerSize
	m	(Lre;)V	b	saveAdditional
		p	1		nbt
	m	(Lbym;)V	c	stopOpen
		p	1		player
	m	(Lbym;)V	d_	startOpen
		p	1		player
	m	()Lhm;	f	getItems
	m	()Ltj;	g	getDefaultName
	m	()V	i	recheckOpen
	f	Lhm;	c	items
	f	Lczp;	f	openersCounter
c	cyx$1	net/minecraft/world/level/block/entity/BarrelBlockEntity$1
	m	(Lbym;)Z	a	isOwnContainer
		p	1		player
	m	(Lcmi;Lgt;Ldbq;)V	a	onOpen
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcmi;Lgt;Ldbq;II)V	a	openerCountChanged
		p	1		world
		p	2		pos
		p	3		state
		p	4		oldViewerCount
		p	5		newViewerCount
	m	(Lcmi;Lgt;Ldbq;)V	b	onClose
		p	1		world
		p	2		pos
		p	3		state
	f	Lcyx;	a	this$0
c	cyy	net/minecraft/world/level/block/entity/BaseContainerBlockEntity
	m	(Lczg;Lgt;Ldbq;)V	<init>	<init>
		p	1		type
		p	2		pos
		p	3		state
	m	()Ltj;	G_	getDisplayName
	m	()Ltj;	Z	getName
	m	(ILbyl;)Lcbd;	a	createMenu
		p	1		syncId
		p	2		playerInventory
	m	(Lbym;Lbea;Ltj;)Z	a	canUnlock
		p	0		player
		p	1		lock
		p	2		containerName
	m	(Lre;)V	a	load
		p	1		nbt
	m	(Ltj;)V	a	setCustomName
		p	1		customName
	m	()Ltj;	ab	getCustomName
	m	(Lre;)V	b	saveAdditional
		p	1		nbt
	m	(ILbyl;Lbym;)Lcbd;	createMenu	createMenu
		p	1		syncId
		p	2		playerInventory
		p	3		player
	m	(Lbym;)Z	d	canOpen
		p	1		player
	m	()Ltj;	g	getDefaultName
	f	Lbea;	c	lockKey
	f	Ltj;	d	name
c	cyz	net/minecraft/world/level/block/entity/BeaconBlockEntity
	m	(Lgt;Ldbq;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	()Ltj;	G_	getDisplayName
	m	()Ltj;	Z	getName
	m	(I)Lbew;	a	getValidEffectById
		p	0		id
	m	(Lcmi;)V	a	setLevel
		p	1		world
	m	(Lcmi;III)I	a	updateBase
		p	0		world
		p	1		x
		p	2		y
		p	3		z
	m	(Lcmi;Lgt;ILbew;Lbew;)V	a	applyEffects
		p	0		world
		p	1		pos
		p	2		beaconLevel
		p	3		primaryEffect
		p	4		secondaryEffect
	m	(Lcmi;Lgt;Lamq;)V	a	playSound
		p	0		world
		p	1		pos
		p	2		sound
	m	(Lcmi;Lgt;Ldbq;Lcyz;)V	a	tick
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Lre;)V	a	load
		p	1		nbt
	m	(Ltj;)V	a	setCustomName
		p	1		customName
	m	()Ltj;	ab	getCustomName
	m	()Lre;	aq_	getUpdateTag
	m	()V	ar_	setRemoved
	m	(Lre;)V	b	saveAdditional
		p	1		nbt
	m	()Ljava/util/List;	c	getBeamSections
	m	(ILbyl;Lbym;)Lcbd;	createMenu	createMenu
		p	1		syncId
		p	2		playerInventory
		p	3		player
	m	()Lvm;	f	getUpdatePacket
	m	()Lvb;	h	getUpdatePacket
	f	[[Lbew;	a	BEACON_EFFECTS
	f	I	b	DATA_LEVELS
	f	I	c	DATA_PRIMARY
	f	I	d	DATA_SECONDARY
	f	I	e	NUM_DATA_VALUES
	f	I	f	MAX_LEVELS
	f	Ljava/util/Set;	g	VALID_EFFECTS
	f	I	h	BLOCKS_CHECK_PER_TICK
	f	Ltj;	i	DEFAULT_NAME
	f	Ljava/util/List;	j	beamSections
	f	Ljava/util/List;	k	checkingBeamSections
	f	I	l	levels
	f	I	m	lastCheckY
	f	Lbew;	n	primaryPower
	f	Lbew;	r	secondaryPower
	f	Ltj;	s	name
	f	Lbea;	t	lockKey
	f	Lcbn;	u	dataAccess
c	cyz$1	net/minecraft/world/level/block/entity/BeaconBlockEntity$1
	m	()I	a	getCount
	m	(I)I	a	get
		p	1		index
	m	(II)V	a	set
		p	1		index
		p	2		value
	f	Lcyz;	a	this$0
c	cyz$a	net/minecraft/world/level/block/entity/BeaconBlockEntity$BeaconBeamSection
	m	([F)V	<init>	<init>
		p	1		color
	m	()V	a	increaseHeight
	m	()[F	b	getColor
	m	()I	c	getHeight
	f	[F	a	color
	f	I	b	height
c	cza	net/minecraft/world/level/block/entity/BedBlockEntity
	m	(Lgt;Ldbq;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(Lgt;Ldbq;Lcel;)V	<init>	<init>
		p	1		pos
		p	2		state
		p	3		color
	m	(Lcel;)V	a	setColor
		p	1		color
	m	()Lvm;	c	getUpdatePacket
	m	()Lcel;	d	getColor
	m	()Lvb;	h	getUpdatePacket
	f	Lcel;	a	color
c	czb	net/minecraft/world/level/block/entity/BeehiveBlockEntity
	m	(Lgt;Ldbq;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(ILbrk;)V	a	setBeeReleaseData
		p	0		ticks
		p	1		bee
	m	(Lbfh;)Lbfh;	a	lambda$releaseOccupant$1
	m	(Lbfh;Z)V	a	addOccupant
		p	1		entity
		p	2		hasNectar
	m	(Lbfh;ZI)V	a	addOccupantWithPresetTicks
		p	1		entity
		p	2		hasNectar
		p	3		ticksInHive
	m	(Lbym;Ldbq;Lczb$b;)V	a	emptyAllLivingFromHive
		p	1		player
		p	2		state
		p	3		beeState
	m	(Lcmi;Lgt;Ldbq;Lczb$a;Ljava/util/List;Lczb$b;Lgt;)Z	a	releaseOccupant
		p	0		world
		p	1		pos
		p	2		state
		p	3		bee
		p	4		entities
		p	5		beeState
		p	6		flowerPos
	m	(Lcmi;Lgt;Ldbq;Lczb;)V	a	serverTick
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Lcmi;Lgt;Ldbq;Ljava/util/List;Lgt;)V	a	tickOccupants
		p	0		world
		p	1		pos
		p	2		state
		p	3		bees
		p	4		flowerPos
	m	(Ldbp$a;)Z	a	lambda$releaseOccupant$2
		p	0		state
	m	(Ldbq;)I	a	getHoneyLevel
		p	0		state
	m	(Ldbq;Lczb$b;)Ljava/util/List;	a	releaseAllOccupants
		p	1		state
		p	2		beeState
	m	(Ldbq;Ljava/util/List;Lczb$b;Lczb$a;)Z	a	lambda$releaseAllOccupants$0
		p	4		bee
	m	(Lre;)V	a	load
		p	1		nbt
	m	(Lre;IZ)V	a	storeBee
		p	1		nbtCompound
		p	2		ticksInHive
		p	3		hasNectar
	m	(Lre;)V	b	saveAdditional
		p	1		nbt
	m	()Z	c	isFireNearby
	m	()Z	d	isEmpty
	m	(Lre;)V	d	removeIgnoredBeeTags
		p	0		compound
	m	()V	e	setChanged
	m	()Z	f	isFull
	m	()I	g	getOccupantCount
	m	()Z	i	isSedated
	m	()Lrk;	j	writeBees
	m	()Z	v	hasSavedFlowerPos
	f	Ljava/lang/String;	a	TAG_FLOWER_POS
	f	Ljava/lang/String;	b	MIN_OCCUPATION_TICKS
	f	Ljava/lang/String;	c	ENTITY_DATA
	f	Ljava/lang/String;	d	TICKS_IN_HIVE
	f	Ljava/lang/String;	e	HAS_NECTAR
	f	Ljava/lang/String;	f	BEES
	f	I	g	MAX_OCCUPANTS
	f	I	h	MIN_OCCUPATION_TICKS_NECTARLESS
	f	Ljava/util/List;	i	IGNORED_BEE_TAGS
	f	I	j	MIN_TICKS_BEFORE_REENTERING_HIVE
	f	I	k	MIN_OCCUPATION_TICKS_NECTAR
	f	Ljava/util/List;	l	stored
	f	Lgt;	m	savedFlowerPos
c	czb$a	net/minecraft/world/level/block/entity/BeehiveBlockEntity$BeeData
	m	(Lre;II)V	<init>	<init>
		p	1		entityData
		p	2		ticksInHive
		p	3		minOccupationTicks
	f	Lre;	a	entityData
	f	I	b	ticksInHive
	f	I	c	minOccupationTicks
c	czb$b	net/minecraft/world/level/block/entity/BeehiveBlockEntity$BeeReleaseStatus
	m	()[Lczb$b;	a	$values
	f	Lczb$b;	a	HONEY_DELIVERED
	f	Lczb$b;	b	BEE_RELEASED
	f	Lczb$b;	c	EMERGENCY
	f	[Lczb$b;	d	$VALUES
c	czc	net/minecraft/world/level/block/entity/BellBlockEntity
	m	(Lgt;Ldbq;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(Lbfx;)V	a	glow
		p	0		entity
	m	(Lcmi;Lgt;Ldbq;Lczc;)V	a	clientTick
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Lcmi;Lgt;Ldbq;Lczc;Lczc$a;)V	a	tick
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
		p	4		bellEffect
	m	(Lcmi;Lgt;Ljava/util/List;)V	a	makeRaidersGlow
		p	0		world
		p	1		pos
		p	2		hearingEntities
	m	(Lgt;ILorg/apache/commons/lang3/mutable/MutableInt;Lcmi;Lbfx;)V	a	lambda$showBellParticles$3
		p	4		entity
	m	(Lgt;Lbfx;)Z	a	isRaiderWithinRange
		p	0		pos
		p	1		entity
	m	(Lgt;Ljava/util/List;)Z	a	areRaidersNearby
		p	0		pos
		p	1		hearingEntities
	m	(Lgz;)V	a	onHit
		p	1		direction
	m	(II)Z	a_	triggerEvent
		p	1		type
		p	2		data
	m	(Lcmi;Lgt;Ldbq;Lczc;)V	b	serverTick
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Lcmi;Lgt;Ljava/util/List;)V	b	showBellParticles
		p	0		world
		p	1		pos
		p	2		hearingEntities
	m	(Lgt;Lbfx;)Z	b	lambda$showBellParticles$2
		p	1		entity
	m	()V	c	updateEntities
	m	(Lgt;Lbfx;)Z	c	lambda$showBellParticles$1
		p	1		entity
	m	(Lgt;Lbfx;)Z	d	lambda$makeRaidersGlow$0
		p	1		entity
	f	I	a	ticks
	f	Z	b	shaking
	f	Lgz;	c	clickDirection
	f	I	d	DURATION
	f	I	e	GLOW_DURATION
	f	I	f	MIN_TICKS_BETWEEN_SEARCHES
	f	I	g	MAX_RESONATION_TICKS
	f	I	h	TICKS_BEFORE_RESONATION
	f	I	i	SEARCH_RADIUS
	f	I	j	HEAR_BELL_RADIUS
	f	I	k	HIGHLIGHT_RAIDERS_RADIUS
	f	J	l	lastRingTimestamp
	f	Ljava/util/List;	m	nearbyEntities
	f	Z	n	resonating
	f	I	r	resonationTicks
c	czc$a	net/minecraft/world/level/block/entity/BellBlockEntity$ResonationEndAction
	m	(Lcmi;Lgt;Ljava/util/List;)V	run	run
		p	1		world
		p	2		pos
		p	3		hearingEntities
c	czd	net/minecraft/world/level/block/entity/BlastFurnaceBlockEntity
	m	(Lgt;Ldbq;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(ILbyl;)Lcbd;	a	createMenu
		p	1		syncId
		p	2		playerInventory
	m	(Lcfv;)I	a	getBurnDuration
		p	1		fuel
	m	()Ltj;	g	getDefaultName
c	cze	net/minecraft/world/level/block/entity/BlockEntity
	m	(Lczg;Lgt;Ldbq;)V	<init>	<init>
		p	1		type
		p	2		pos
		p	3		state
	m	(Lcmi;)V	a	setLevel
		p	1		world
	m	(Lcmi;Lgt;Ldbq;)V	a	setChanged
		p	0		world
		p	1		pos
		p	2		state
	m	(Lgt;Ldbq;Ljava/lang/String;Lczg;)Lcze;	a	lambda$loadStatic$0
		p	3		type
	m	(Lgt;Ldbq;Lre;)Lcze;	a	loadStatic
		p	0		pos
		p	1		state
		p	2		nbt
	m	(Ljava/lang/String;)Lcze;	a	lambda$loadStatic$2
	m	(Lp;)V	a	fillCrashReportCategory
		p	1		crashReportSection
	m	(Lre;)V	a	load
		p	1		nbt
	m	(Lre;Lczg;)V	a	addEntityType
		p	0		nbt
		p	1		type
	m	(Lre;Ljava/lang/String;Lcze;)Lcze;	a	lambda$loadStatic$1
		p	2		blockEntity
	m	(II)Z	a_	triggerEvent
		p	1		type
		p	2		data
	m	()Lre;	aq_	getUpdateTag
	m	()V	ar_	setRemoved
	m	(Ldbq;)V	b	setBlockState
		p	1		state
	m	(Lre;)V	b	saveAdditional
		p	1		nbt
	m	(Lre;)Lgt;	c	getPosFromTag
		p	0		nbt
	m	(Lre;)V	d	saveId
		p	1		nbt
	m	()V	e	setChanged
	m	(Lcfv;)V	e	saveToItem
		p	1		stack
	m	(Lre;)V	e	saveMetadata
		p	1		nbt
	m	()Ljava/lang/String;	g	lambda$fillCrashReportCategory$3
	m	()Lvb;	h	getUpdatePacket
	m	()Lcmi;	k	getLevel
	m	()Z	l	hasLevel
	m	()Lre;	m	saveWithFullMetadata
	m	()Lre;	n	saveWithId
	m	()Lre;	o	saveWithoutMetadata
	m	()Lgt;	p	getBlockPos
	m	()Ldbq;	q	getBlockState
	m	()Z	r	isRemoved
	m	()V	s	clearRemoved
	m	()Z	t	onlyOpCanSetNbt
	m	()Lczg;	u	getType
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	Lczg;	d	type
	f	Ldbq;	e	blockState
	f	Lcmi;	o	level
	f	Lgt;	p	worldPosition
	f	Z	q	remove
c	czf	net/minecraft/world/level/block/entity/BlockEntityTicker
	m	(Lcmi;Lgt;Ldbq;Lcze;)V	tick	tick
		p	1		world
		p	2		pos
		p	3		state
		p	4		blockEntity
c	czg	net/minecraft/world/level/block/entity/BlockEntityType
	m	(Lczg$a;Ljava/util/Set;Lcom/mojang/datafixers/types/Type;)V	<init>	<init>
		p	1		factory
		p	2		blocks
		p	3		type
	m	(Lclo;Lgt;)Lcze;	a	getBlockEntity
		p	1		world
		p	2		pos
	m	(Lczg;)Ladd;	a	getKey
		p	0		type
	m	(Ldbq;)Z	a	isValid
		p	1		state
	m	(Lgt;Ldbq;)Lcze;	a	create
		p	1		pos
		p	2		state
	m	(Ljava/lang/String;Lczg$b;)Lczg;	a	register
		p	0		id
		p	1		builder
	f	Lczg;	A	BARREL
	f	Lczg;	B	SMOKER
	f	Lczg;	C	BLAST_FURNACE
	f	Lczg;	D	LECTERN
	f	Lczg;	E	BELL
	f	Lczg;	F	JIGSAW
	f	Lczg;	G	CAMPFIRE
	f	Lczg;	H	BEEHIVE
	f	Lczg;	I	SCULK_SENSOR
	f	Lczg;	J	SCULK_CATALYST
	f	Lczg;	K	SCULK_SHRIEKER
	f	Lczg;	L	CHISELED_BOOKSHELF
	f	Lczg;	M	SUSPICIOUS_SAND
	f	Lczg;	N	DECORATED_POT
	f	Lorg/slf4j/Logger;	O	LOGGER
	f	Lczg$a;	P	factory
	f	Ljava/util/Set;	Q	validBlocks
	f	Lcom/mojang/datafixers/types/Type;	R	dataType
	f	Lczg;	a	FURNACE
	f	Lczg;	b	CHEST
	f	Lczg;	c	TRAPPED_CHEST
	f	Lczg;	d	ENDER_CHEST
	f	Lczg;	e	JUKEBOX
	f	Lczg;	f	DISPENSER
	f	Lczg;	g	DROPPER
	f	Lczg;	h	SIGN
	f	Lczg;	i	HANGING_SIGN
	f	Lczg;	j	MOB_SPAWNER
	f	Lczg;	k	PISTON
	f	Lczg;	l	BREWING_STAND
	f	Lczg;	m	ENCHANTING_TABLE
	f	Lczg;	n	END_PORTAL
	f	Lczg;	o	BEACON
	f	Lczg;	p	SKULL
	f	Lczg;	q	DAYLIGHT_DETECTOR
	f	Lczg;	r	HOPPER
	f	Lczg;	s	COMPARATOR
	f	Lczg;	t	BANNER
	f	Lczg;	u	STRUCTURE_BLOCK
	f	Lczg;	v	END_GATEWAY
	f	Lczg;	w	COMMAND_BLOCK
	f	Lczg;	x	SHULKER_BOX
	f	Lczg;	y	BED
	f	Lczg;	z	CONDUIT
c	czg$a	net/minecraft/world/level/block/entity/BlockEntityType$BlockEntitySupplier
	m	(Lgt;Ldbq;)Lcze;	create	create
		p	1		pos
		p	2		state
c	czg$b	net/minecraft/world/level/block/entity/BlockEntityType$Builder
	m	(Lczg$a;Ljava/util/Set;)V	<init>	<init>
		p	1		factory
		p	2		blocks
	m	(Lcom/mojang/datafixers/types/Type;)Lczg;	a	build
		p	1		type
	m	(Lczg$a;[Lcpi;)Lczg$b;	a	of
		p	0		factory
		p	1		blocks
	f	Lczg$a;	a	factory
	f	Ljava/util/Set;	b	validBlocks
c	czh	net/minecraft/world/level/block/entity/BrewingStandBlockEntity
	m	(Lgt;Ldbq;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	()V	a	clearContent
	m	(I)Lcfv;	a	getItem
		p	1		slot
	m	(II)Lcfv;	a	removeItem
		p	1		slot
		p	2		amount
	m	(ILbyl;)Lcbd;	a	createMenu
		p	1		syncId
		p	2		playerInventory
	m	(ILcfv;)V	a	setItem
		p	1		slot
		p	2		stack
	m	(ILcfv;Lgz;)Z	a	canPlaceItemThroughFace
		p	1		slot
		p	2		stack
		p	3		dir
	m	(Lbym;)Z	a	stillValid
		p	1		player
	m	(Lcmi;Lgt;Ldbq;Lczh;)V	a	serverTick
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Lcmi;Lgt;Lhm;)V	a	doBrew
		p	0		world
		p	1		pos
		p	2		slots
	m	(Lgz;)[I	a	getSlotsForFace
		p	1		side
	m	(Lhm;)Z	a	isBrewable
		p	0		slots
	m	(Lre;)V	a	load
		p	1		nbt
	m	()Z	aa_	isEmpty
	m	()I	b	getContainerSize
	m	(I)Lcfv;	b	removeItemNoUpdate
		p	1		slot
	m	(ILcfv;)Z	b	canPlaceItem
		p	1		slot
		p	2		stack
	m	(ILcfv;Lgz;)Z	b	canTakeItemThroughFace
		p	1		slot
		p	2		stack
		p	3		dir
	m	(Lre;)V	b	saveAdditional
		p	1		nbt
	m	()[Z	f	getPotionBits
	m	()Ltj;	g	getDefaultName
	f	I	c	FUEL_USES
	f	I	d	DATA_BREW_TIME
	f	I	e	DATA_FUEL_USES
	f	I	f	NUM_DATA_VALUES
	f	Lcbn;	g	dataAccess
	f	I	h	INGREDIENT_SLOT
	f	I	i	FUEL_SLOT
	f	[I	j	SLOTS_FOR_UP
	f	[I	k	SLOTS_FOR_DOWN
	f	[I	l	SLOTS_FOR_SIDES
	f	Lhm;	m	items
	f	I	n	brewTime
	f	[Z	r	lastPotionCount
	f	Lcfq;	s	ingredient
	f	I	t	fuel
c	czh$1	net/minecraft/world/level/block/entity/BrewingStandBlockEntity$1
	m	()I	a	getCount
	m	(I)I	a	get
		p	1		index
	m	(II)V	a	set
		p	1		index
		p	2		value
	f	Lczh;	a	this$0
c	czi	net/minecraft/world/level/block/entity/CampfireBlockEntity
	m	(Lgt;Ldbq;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	()V	a	clearContent
	m	(Lbdr;Lcmi;Lcil;)Lcfv;	a	lambda$cookTick$0
		p	2		recipe
	m	(Lbfh;Lcfv;I)Z	a	placeFood
		p	1		user
		p	2		stack
		p	3		cookTime
	m	(Lcfv;)Ljava/util/Optional;	a	getCookableRecipe
		p	1		stack
	m	(Lcmi;Lgt;Ldbq;Lczi;)V	a	cookTick
		p	0		world
		p	1		pos
		p	2		state
		p	3		campfire
	m	(Lre;)V	a	load
		p	1		nbt
	m	()Lre;	aq_	getUpdateTag
	m	(Lcmi;Lgt;Ldbq;Lczi;)V	b	cooldownTick
		p	0		world
		p	1		pos
		p	2		state
		p	3		campfire
	m	(Lre;)V	b	saveAdditional
		p	1		nbt
	m	()Lhm;	c	getItems
	m	(Lcmi;Lgt;Ldbq;Lczi;)V	c	particleTick
		p	0		world
		p	1		pos
		p	2		state
		p	3		campfire
	m	()Lvm;	d	getUpdatePacket
	m	()V	f	dowse
	m	()V	g	markUpdated
	m	()Lvb;	h	getUpdatePacket
	f	I	a	BURN_COOL_SPEED
	f	I	b	NUM_SLOTS
	f	Lhm;	c	items
	f	[I	d	cookingProgress
	f	[I	e	cookingTime
	f	Lciz$a;	f	quickCheck
c	czj	net/minecraft/world/level/block/entity/ChestBlockEntity
	m	(Lczg;Lgt;Ldbq;)V	<init>	<init>
		p	1		type
		p	2		pos
		p	3		state
	m	(Lgt;Ldbq;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(F)F	a	getOpenNess
		p	1		tickDelta
	m	(ILbyl;)Lcbd;	a	createMenu
		p	1		syncId
		p	2		playerInventory
	m	(Lclo;Lgt;)I	a	getOpenCount
		p	0		world
		p	1		pos
	m	(Lcmi;Lgt;Ldbq;II)V	a	signalOpenCount
		p	1		world
		p	2		pos
		p	3		state
		p	4		oldViewerCount
		p	5		newViewerCount
	m	(Lcmi;Lgt;Ldbq;Lamq;)V	a	playSound
		p	0		world
		p	1		pos
		p	2		state
		p	3		soundEvent
	m	(Lcmi;Lgt;Ldbq;Lczj;)V	a	lidAnimateTick
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Lczj;Lczj;)V	a	swapContents
		p	0		from
		p	1		to
	m	(Lhm;)V	a	setItems
		p	1		list
	m	(Lre;)V	a	load
		p	1		nbt
	m	(II)Z	a_	triggerEvent
		p	1		type
		p	2		data
	m	()I	b	getContainerSize
	m	(Lre;)V	b	saveAdditional
		p	1		nbt
	m	(Lbym;)V	c	stopOpen
		p	1		player
	m	(Lbym;)V	d_	startOpen
		p	1		player
	m	()Lhm;	f	getItems
	m	()Ltj;	g	getDefaultName
	m	()V	i	recheckOpen
	f	I	c	EVENT_SET_OPEN_COUNT
	f	Lhm;	f	items
	f	Lczp;	g	openersCounter
	f	Lczk;	j	chestLidController
c	czj$1	net/minecraft/world/level/block/entity/ChestBlockEntity$1
	m	(Lbym;)Z	a	isOwnContainer
		p	1		player
	m	(Lcmi;Lgt;Ldbq;)V	a	onOpen
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcmi;Lgt;Ldbq;II)V	a	openerCountChanged
		p	1		world
		p	2		pos
		p	3		state
		p	4		oldViewerCount
		p	5		newViewerCount
	m	(Lcmi;Lgt;Ldbq;)V	b	onClose
		p	1		world
		p	2		pos
		p	3		state
	f	Lczj;	a	this$0
c	czk	net/minecraft/world/level/block/entity/ChestLidController
	m	()V	a	tickLid
	m	(F)F	a	getOpenness
		p	1		delta
	m	(Z)V	a	shouldBeOpen
		p	1		open
	f	Z	a	shouldBeOpen
	f	F	b	openness
	f	F	c	oOpenness
c	czl	net/minecraft/world/level/block/entity/ChiseledBookShelfBlockEntity
	m	(Lgt;Ldbq;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	()V	a	clearContent
	m	(I)Lcfv;	a	getItem
		p	1		slot
	m	(II)Lcfv;	a	removeItem
		p	1		slot
		p	2		amount
	m	(ILcfv;)V	a	setItem
		p	1		slot
		p	2		stack
	m	(Lbym;)Z	a	stillValid
		p	1		player
	m	(Lre;)V	a	load
		p	1		nbt
	m	()Z	aa_	isEmpty
	m	()I	ab_	getMaxStackSize
	m	()I	b	getContainerSize
	m	(I)Lcfv;	b	removeItemNoUpdate
		p	1		slot
	m	(ILcfv;)Z	b	canPlaceItem
		p	1		slot
		p	2		stack
	m	(Lre;)V	b	saveAdditional
		p	1		nbt
	m	(I)V	c	updateState
		p	1		interactedSlot
	m	()I	f	count
	m	()I	g	getLastInteractedSlot
	f	I	c	MAX_BOOKS_IN_STORAGE
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	Lhm;	e	items
	f	I	f	lastInteractedSlot
c	czm	net/minecraft/world/level/block/entity/CommandBlockEntity
	m	(Lgt;Ldbq;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(Lre;)V	a	load
		p	1		nbt
	m	(Z)V	a	setPowered
		p	1		powered
	m	(Lre;)V	b	saveAdditional
		p	1		nbt
	m	(Z)V	b	setAutomatic
		p	1		auto
	m	()Lclj;	c	getCommandBlock
	m	()Z	d	isPowered
	m	()Z	f	isAutomatic
	m	()V	g	onModeSwitch
	m	()Z	i	wasConditionMet
	m	()Z	j	markConditionMet
	m	()Z	t	onlyOpCanSetNbt
	m	()Lczm$a;	v	getMode
	m	()Z	w	isConditional
	m	()V	x	scheduleTick
	f	Z	a	powered
	f	Z	b	auto
	f	Z	c	conditionMet
	f	Lclj;	d	commandBlock
c	czm$1	net/minecraft/world/level/block/entity/CommandBlockEntity$1
	m	(Ljava/lang/String;)V	a	setCommand
		p	1		command
	m	()Laip;	e	getLevel
	m	()V	f	onUpdated
	m	()Lede;	g	getPosition
	m	()Ldr;	i	createCommandSourceStack
	f	Lczm;	b	this$0
c	czm$a	net/minecraft/world/level/block/entity/CommandBlockEntity$Mode
	m	()[Lczm$a;	a	$values
	f	Lczm$a;	a	SEQUENCE
	f	Lczm$a;	b	AUTO
	f	Lczm$a;	c	REDSTONE
	f	[Lczm$a;	d	$VALUES
c	czn	net/minecraft/world/level/block/entity/ComparatorBlockEntity
	m	(Lgt;Ldbq;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(I)V	a	setOutputSignal
		p	1		outputSignal
	m	(Lre;)V	a	load
		p	1		nbt
	m	(Lre;)V	b	saveAdditional
		p	1		nbt
	m	()I	c	getOutputSignal
	f	I	a	output
c	czo	net/minecraft/world/level/block/entity/ConduitBlockEntity
	m	(Lgt;Ldbq;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(F)F	a	getActiveRotation
		p	1		tickDelta
	m	(Lbfx;)Z	a	lambda$updateDestroyTarget$0
		p	0		entity
	m	(Lcmi;Lgt;Lczo;)V	a	updateClientTarget
		p	0		world
		p	1		pos
		p	2		blockEntity
	m	(Lcmi;Lgt;Ldbq;Lczo;)V	a	clientTick
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Lcmi;Lgt;Ldbq;Ljava/util/List;Lczo;)V	a	updateDestroyTarget
		p	0		world
		p	1		pos
		p	2		state
		p	3		activatingBlocks
		p	4		blockEntity
	m	(Lcmi;Lgt;Ljava/util/List;)Z	a	updateShape
		p	0		world
		p	1		pos
		p	2		activatingBlocks
	m	(Lcmi;Lgt;Ljava/util/List;Lbfh;I)V	a	animationTick
		p	0		world
		p	1		pos
		p	2		activatingBlocks
		p	3		entity
		p	4		ticks
	m	(Lcmi;Lgt;Ljava/util/UUID;)Lbfx;	a	findDestroyTarget
		p	0		world
		p	1		pos
		p	2		uuid
	m	(Lczo;Ljava/util/List;)V	a	updateHunting
		p	0		blockEntity
		p	1		activatingBlocks
	m	(Lgt;)Lecz;	a	getDestroyRangeAABB
		p	0		pos
	m	(Ljava/util/UUID;Lbfx;)Z	a	lambda$findDestroyTarget$1
		p	1		entity
	m	(Lre;)V	a	load
		p	1		nbt
	m	(Z)V	a	setHunting
		p	1		eyeOpen
	m	()Lre;	aq_	getUpdateTag
	m	(Lcmi;Lgt;Ldbq;Lczo;)V	b	serverTick
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Lcmi;Lgt;Ljava/util/List;)V	b	applyEffects
		p	0		world
		p	1		pos
		p	2		activatingBlocks
	m	(Lre;)V	b	saveAdditional
		p	1		nbt
	m	()Lvm;	c	getUpdatePacket
	m	()Z	d	isActive
	m	()Z	f	isHunting
	m	()Lvb;	h	getUpdatePacket
	f	I	a	tickCount
	f	I	b	BLOCK_REFRESH_RATE
	f	I	c	EFFECT_DURATION
	f	F	d	ROTATION_SPEED
	f	I	e	MIN_ACTIVE_SIZE
	f	I	f	MIN_KILL_SIZE
	f	I	g	KILL_RANGE
	f	[Lcpi;	h	VALID_BLOCKS
	f	F	i	activeRotation
	f	Z	j	isActive
	f	Z	k	isHunting
	f	Ljava/util/List;	l	effectBlocks
	f	Lbfx;	m	destroyTarget
	f	Ljava/util/UUID;	n	destroyTargetUUID
	f	J	r	nextAmbientSoundActivation
c	czp	net/minecraft/world/level/block/entity/ContainerOpenersCounter
	m	()I	a	getOpenerCount
	m	(Lbym;)Z	a	isOwnContainer
		p	1		player
	m	(Lbym;Lcmi;Lgt;Ldbq;)V	a	incrementOpeners
		p	1		player
		p	2		world
		p	3		pos
		p	4		state
	m	(Lcmi;Lgt;)I	a	getOpenCount
		p	1		world
		p	2		pos
	m	(Lcmi;Lgt;Ldbq;)V	a	onOpen
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcmi;Lgt;Ldbq;II)V	a	openerCountChanged
		p	1		world
		p	2		pos
		p	3		state
		p	4		oldViewerCount
		p	5		newViewerCount
	m	(Lbym;Lcmi;Lgt;Ldbq;)V	b	decrementOpeners
		p	1		player
		p	2		world
		p	3		pos
		p	4		state
	m	(Lcmi;Lgt;Ldbq;)V	b	onClose
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcmi;Lgt;Ldbq;)V	c	recheckOpeners
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcmi;Lgt;Ldbq;)V	d	scheduleRecheck
		p	0		world
		p	1		pos
		p	2		state
	f	I	a	CHECK_TICK_DELAY
	f	I	b	openCount
c	czq	net/minecraft/world/level/block/entity/DaylightDetectorBlockEntity
	m	(Lgt;Ldbq;)V	<init>	<init>
		p	1		pos
		p	2		state
c	czr	net/minecraft/world/level/block/entity/DecoratedPotBlockEntity
	m	(Lgt;Ldbq;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(Lcfv;)V	a	setFromItem
		p	1		stack
	m	(Lcmi;Lgt;Lcfv;Lbym;)V	a	playerDestroy
		p	1		world
		p	2		pos
		p	3		tool
		p	4		player
	m	(Ljava/util/ArrayList;)V	a	lambda$new$0
	m	(Ljava/util/List;Lre;)V	a	saveShards
		p	0		shards
		p	1		nbt
	m	(Lre;)V	a	load
		p	1		nbt
	m	()Lre;	aq_	getUpdateTag
	m	(Lre;)V	b	saveAdditional
		p	1		nbt
	m	()Lvm;	c	getUpdatePacket
	m	()Lcfv;	d	getItem
	m	()Ljava/util/List;	f	getShards
	m	()Z	g	isBroken
	m	()Lvb;	h	getUpdatePacket
	m	()Lgz;	i	getDirection
	f	Ljava/lang/String;	a	TAG_SHARDS
	f	I	b	SHARDS_IN_POT
	f	Z	c	isBroken
	f	Ljava/util/List;	d	shards
c	czs	net/minecraft/world/level/block/entity/DecoratedPotPatterns
	m	(Ladc;)Ladd;	a	location
		p	0		key
	m	(Lcfq;)Ladc;	a	getResourceKey
		p	0		shard
	m	(Lhq;)Ljava/lang/String;	a	bootstrap
		p	0		registry
	m	(Ljava/lang/String;)Ladc;	a	create
		p	0		path
	f	Ljava/lang/String;	a	BASE_NAME
	f	Ladc;	b	BASE
	f	Ljava/lang/String;	c	BRICK_NAME
	f	Ljava/lang/String;	d	ARCHER_NAME
	f	Ljava/lang/String;	e	PRIZE_NAME
	f	Ljava/lang/String;	f	ARMS_UP_NAME
	f	Ljava/lang/String;	g	SKULL_NAME
	f	Ladc;	h	BRICK
	f	Ladc;	i	ARCHER
	f	Ladc;	j	PRIZE
	f	Ladc;	k	ARMS_UP
	f	Ladc;	l	SKULL
	f	Ljava/util/Map;	m	ITEM_TO_POT_TEXTURE
c	czt	net/minecraft/world/level/block/entity/DispenserBlockEntity
	m	(Lczg;Lgt;Ldbq;)V	<init>	<init>
		p	1		type
		p	2		pos
		p	3		state
	m	(Lgt;Ldbq;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(ILbyl;)Lcbd;	a	createMenu
		p	1		syncId
		p	2		playerInventory
	m	(Lapo;)I	a	getRandomSlot
		p	1		random
	m	(Lcfv;)I	a	addItem
		p	1		stack
	m	(Lhm;)V	a	setItems
		p	1		list
	m	(Lre;)V	a	load
		p	1		nbt
	m	()I	b	getContainerSize
	m	(Lre;)V	b	saveAdditional
		p	1		nbt
	m	()Lhm;	f	getItems
	m	()Ltj;	g	getDefaultName
	f	I	c	CONTAINER_SIZE
	f	Lhm;	f	items
c	czu	net/minecraft/world/level/block/entity/DropperBlockEntity
	m	(Lgt;Ldbq;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	()Ltj;	g	getDefaultName
c	czv	net/minecraft/world/level/block/entity/EnchantmentTableBlockEntity
	m	(Lgt;Ldbq;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	()Ltj;	Z	getName
	m	(Lcmi;Lgt;Ldbq;Lczv;)V	a	bookAnimationTick
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Lre;)V	a	load
		p	1		nbt
	m	(Ltj;)V	a	setCustomName
		p	1		customName
	m	()Ltj;	ab	getCustomName
	m	(Lre;)V	b	saveAdditional
		p	1		nbt
	f	I	a	time
	f	F	b	flip
	f	F	c	oFlip
	f	F	d	flipT
	f	F	e	flipA
	f	F	f	open
	f	F	g	oOpen
	f	F	h	rot
	f	F	i	oRot
	f	F	j	tRot
	f	Lapo;	k	RANDOM
	f	Ltj;	l	name
c	czw	net/minecraft/world/level/block/entity/EnderChestBlockEntity
	m	(Lgt;Ldbq;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(F)F	a	getOpenNess
		p	1		tickDelta
	m	(Lbym;)V	a	startOpen
		p	1		player
	m	(Lcmi;Lgt;Ldbq;Lczw;)V	a	lidAnimateTick
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(II)Z	a_	triggerEvent
		p	1		type
		p	2		data
	m	(Lbym;)V	b	stopOpen
		p	1		player
	m	()V	c	recheckOpen
	m	(Lbym;)Z	c	stillValid
		p	1		player
	f	Lczk;	a	chestLidController
	f	Lczp;	b	openersCounter
c	czw$1	net/minecraft/world/level/block/entity/EnderChestBlockEntity$1
	m	(Lbym;)Z	a	isOwnContainer
		p	1		player
	m	(Lcmi;Lgt;Ldbq;)V	a	onOpen
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcmi;Lgt;Ldbq;II)V	a	openerCountChanged
		p	1		world
		p	2		pos
		p	3		state
		p	4		oldViewerCount
		p	5		newViewerCount
	m	(Lcmi;Lgt;Ldbq;)V	b	onClose
		p	1		world
		p	2		pos
		p	3		state
	f	Lczw;	a	this$0
c	czx	net/minecraft/world/level/block/entity/FurnaceBlockEntity
	m	(Lgt;Ldbq;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(ILbyl;)Lcbd;	a	createMenu
		p	1		syncId
		p	2		playerInventory
	m	()Ltj;	g	getDefaultName
c	czy	net/minecraft/world/level/block/entity/HangingSignBlockEntity
	m	(Lgt;Ldbq;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	()I	c	getTextLineHeight
	m	()I	d	getMaxTextLineWidth
	f	I	b	MAX_TEXT_LINE_WIDTH
	f	I	c	TEXT_LINE_HEIGHT
c	czz	net/minecraft/world/level/block/entity/Hopper
	m	()D	F	getLevelX
	m	()D	G	getLevelY
	m	()D	I	getLevelZ
	m	()Ledx;	as_	getSuckShape
	f	Ledx;	c	INSIDE
	f	Ledx;	v_	ABOVE
	f	Ledx;	w_	SUCK
c	daa	net/minecraft/world/level/block/entity/HopperBlockEntity
	m	(Lgt;Ldbq;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	()D	F	getLevelX
	m	()D	G	getLevelY
	m	()D	I	getLevelZ
	m	(II)Lcfv;	a	removeItem
		p	1		slot
		p	2		amount
	m	(ILbyl;)Lcbd;	a	createMenu
		p	1		syncId
		p	2		playerInventory
	m	(ILcfv;)V	a	setItem
		p	1		slot
		p	2		stack
	m	(Lbdr;I)Z	a	lambda$isEmptyContainer$2
		p	1		slot
	m	(Lbdr;Lbdr;Lcfv;ILgz;)Z	a	canTakeItemFromContainer
		p	0		hopperInventory
		p	1		fromInventory
		p	2		stack
		p	3		slot
		p	4		facing
	m	(Lbdr;Lbdr;Lcfv;Lgz;)Lcfv;	a	addItem
		p	0		from
		p	1		to
		p	2		stack
		p	3		side
	m	(Lbdr;Lbvf;)Z	a	addItem
		p	0		inventory
		p	1		itemEntity
	m	(Lbdr;Lcfv;ILgz;)Z	a	canPlaceItemInContainer
		p	0		inventory
		p	1		stack
		p	2		slot
		p	3		side
	m	(Lbdr;Lgz;)Ljava/util/stream/IntStream;	a	getSlots
		p	0		inventory
		p	1		side
	m	(Lcfv;Lcfv;)Z	a	canMergeItems
		p	0		first
		p	1		second
	m	(Lcmi;DDD)Lbdr;	a	getContainerAt
		p	0		world
		p	1		x
		p	3		y
		p	5		z
	m	(Lcmi;Lczz;)Z	a	suckInItems
		p	0		world
		p	1		hopper
	m	(Lcmi;Lczz;Lecz;)Ljava/util/stream/Stream;	a	lambda$getItemsAtAndAbove$4
		p	2		box
	m	(Lcmi;Ldaa;)Z	a	lambda$pushItemsTick$0
	m	(Lcmi;Lgt;)Lbdr;	a	getContainerAt
		p	0		world
		p	1		pos
	m	(Lcmi;Lgt;Ldbq;Lbdr;)Z	a	ejectItems
		p	0		world
		p	1		pos
		p	2		state
		p	3		inventory
	m	(Lcmi;Lgt;Ldbq;Lbfh;Ldaa;)V	a	entityInside
		p	0		world
		p	1		pos
		p	2		state
		p	3		entity
		p	4		blockEntity
	m	(Lcmi;Lgt;Ldbq;Ldaa;)V	a	pushItemsTick
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Lcmi;Lgt;Ldbq;Ldaa;Ljava/util/function/BooleanSupplier;)Z	a	tryMoveItems
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Lczz;Lbdr;ILgz;)Z	a	tryTakeInItemFromSlot
		p	0		hopper
		p	1		inventory
		p	2		slot
		p	3		side
	m	(Lczz;Lbdr;Lgz;I)Z	a	lambda$suckInItems$3
		p	3		slot
	m	(Ldaa;Lbfh;)Z	a	lambda$entityInside$5
	m	(Lhm;)V	a	setItems
		p	1		list
	m	(Lre;)V	a	load
		p	1		nbt
	m	()I	b	getContainerSize
	m	(Lbdr;I)Z	b	lambda$isFullContainer$1
		p	1		slot
	m	(Lbdr;Lbdr;Lcfv;ILgz;)Lcfv;	b	tryMoveInItem
		p	0		from
		p	1		to
		p	2		stack
		p	3		slot
		p	4		side
	m	(Lbdr;Lgz;)Z	b	isFullContainer
		p	0		inventory
		p	1		direction
	m	(Lcmi;Lczz;)Ljava/util/List;	b	getItemsAtAndAbove
		p	0		world
		p	1		hopper
	m	(Lcmi;Lgt;Ldbq;)Lbdr;	b	getAttachedContainer
		p	0		world
		p	1		pos
		p	2		state
	m	(Lre;)V	b	saveAdditional
		p	1		nbt
	m	(I)V	c	setCooldown
		p	1		transferCooldown
	m	(Lbdr;Lgz;)Z	c	isEmptyContainer
		p	0		inv
		p	1		facing
	m	(Lcmi;Lczz;)Lbdr;	c	getSourceContainer
		p	0		world
		p	1		hopper
	m	()Lhm;	f	getItems
	m	()Ltj;	g	getDefaultName
	m	()Z	i	inventoryFull
	m	()Z	j	isOnCooldown
	m	()Z	v	isOnCustomCooldown
	f	I	f	MOVE_ITEM_SPEED
	f	I	g	HOPPER_CONTAINER_SIZE
	f	Lhm;	j	items
	f	I	k	cooldownTime
	f	J	l	tickedGameTime
c	dab	net/minecraft/world/level/block/entity/JigsawBlockEntity
	m	(Lgt;Ldbq;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(Ladc;)V	a	setPool
		p	1		pool
	m	(Ladd;)V	a	setName
		p	1		name
	m	(Laip;IZ)V	a	generate
		p	1		world
		p	2		maxDepth
		p	3		keepJigsaws
	m	(Ldab$a;)V	a	setJoint
		p	1		joint
	m	(Ljava/lang/String;)V	a	setFinalState
		p	1		finalState
	m	(Lre;)V	a	load
		p	1		nbt
	m	()Lre;	aq_	getUpdateTag
	m	(Ladd;)V	b	setTarget
		p	1		target
	m	(Lre;)V	b	saveAdditional
		p	1		nbt
	m	()Ladd;	c	getName
	m	()Ladd;	d	getTarget
	m	()Ladc;	f	getPool
	m	()Ljava/lang/String;	g	getFinalState
	m	()Lvb;	h	getUpdatePacket
	m	()Ldab$a;	i	getJoint
	m	()Lvm;	j	getUpdatePacket
	m	()Ldab$a;	v	lambda$load$0
	f	Ljava/lang/String;	a	TARGET
	f	Ljava/lang/String;	b	POOL
	f	Ljava/lang/String;	c	JOINT
	f	Ljava/lang/String;	d	NAME
	f	Ljava/lang/String;	e	FINAL_STATE
	f	Ladd;	f	name
	f	Ladd;	g	target
	f	Ladc;	h	pool
	f	Ldab$a;	i	joint
	f	Ljava/lang/String;	j	finalState
c	dab$a	net/minecraft/world/level/block/entity/JigsawBlockEntity$JointType
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()Ltj;	a	getTranslatedName
	m	(Ljava/lang/String;)Ljava/util/Optional;	a	byName
		p	0		name
	m	(Ljava/lang/String;Ldab$a;)Z	a	lambda$byName$0
		p	1		joint
	m	()[Ldab$a;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Ldab$a;	a	ROLLABLE
	f	Ldab$a;	b	ALIGNED
	f	Ljava/lang/String;	c	name
	f	[Ldab$a;	d	$VALUES
c	dac	net/minecraft/world/level/block/entity/JukeboxBlockEntity
	m	(Lgt;Ldbq;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(I)Lcfv;	a	getItem
		p	1		slot
	m	(II)Lcfv;	a	removeItem
		p	1		slot
		p	2		amount
	m	(ILcfv;)V	a	setItem
		p	1		slot
		p	2		stack
	m	(Lbdr;ILcfv;)Z	a	canTakeItem
		p	1		hopperInventory
		p	2		slot
		p	3		stack
	m	(Lbfh;Z)V	a	setHasRecordBlockState
		p	1		entity
		p	2		hasRecord
	m	(Lbym;)Z	a	stillValid
		p	1		player
	m	(Lcfv;)V	a	setRecordWithoutPlaying
		p	1		stack
	m	(Lcgn;)Z	a	shouldRecordStopPlaying
		p	1		musicDisc
	m	(Lcmi;Lgt;)V	a	spawnMusicParticles
		p	1		world
		p	2		pos
	m	(Lcmi;Lgt;Ldbq;Ldac;)V	a	playRecordTick
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Lre;)V	a	load
		p	1		nbt
	m	()I	ab_	getMaxStackSize
	m	(ILcfv;)Z	b	canPlaceItem
		p	1		slot
		p	2		stack
	m	(Lcmi;Lgt;Ldbq;)V	b	tick
		p	1		world
		p	2		pos
		p	3		state
	m	(Lre;)V	b	saveAdditional
		p	1		nbt
	m	()Z	f	isRecordPlaying
	m	()V	g	startPlaying
	m	()V	i	popOutRecord
	m	()V	v	stopPlaying
	m	()Z	w	shouldSendJukeboxPlayingEvent
	f	I	c	SONG_END_PADDING
	f	Lhm;	d	items
	f	I	e	ticksSinceLastEvent
	f	J	f	tickCount
	f	J	g	recordStartedTick
	f	Z	h	isPlaying
c	dad	net/minecraft/world/level/block/entity/LecternBlockEntity
	m	(Lgt;Ldbq;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	()Ltj;	G_	getDisplayName
	m	()V	a	clearContent
	m	(I)V	a	setPage
		p	1		currentPage
	m	(Lbym;)Ldr;	a	createCommandSourceStack
		p	1		player
	m	(Lcfv;)V	a	setBook
		p	1		book
	m	(Lcfv;Lbym;)V	a	setBook
		p	1		book
		p	2		player
	m	(Lre;)V	a	load
		p	1		nbt
	m	(Lcfv;Lbym;)Lcfv;	b	resolveBook
		p	1		book
		p	2		player
	m	(Lre;)V	b	saveAdditional
		p	1		nbt
	m	()Lcfv;	c	getBook
	m	(ILbyl;Lbym;)Lcbd;	createMenu	createMenu
		p	1		syncId
		p	2		playerInventory
		p	3		player
	m	()Z	f	hasBook
	m	()I	g	getPage
	m	()I	i	getRedstoneSignal
	m	()V	j	onBookItemRemove
	m	()Z	t	onlyOpCanSetNbt
	f	I	a	DATA_PAGE
	f	I	b	NUM_DATA
	f	I	c	SLOT_BOOK
	f	I	d	NUM_SLOTS
	f	Lbdr;	e	bookAccess
	f	Lcbn;	f	dataAccess
	f	Lcfv;	g	book
	f	I	h	page
	f	I	i	pageCount
c	dad$1	net/minecraft/world/level/block/entity/LecternBlockEntity$1
	m	()V	a	clearContent
	m	(I)Lcfv;	a	getItem
		p	1		slot
	m	(II)Lcfv;	a	removeItem
		p	1		slot
		p	2		amount
	m	(ILcfv;)V	a	setItem
		p	1		slot
		p	2		stack
	m	(Lbym;)Z	a	stillValid
		p	1		player
	m	()Z	aa_	isEmpty
	m	()I	ab_	getMaxStackSize
	m	()I	b	getContainerSize
	m	(I)Lcfv;	b	removeItemNoUpdate
		p	1		slot
	m	(ILcfv;)Z	b	canPlaceItem
		p	1		slot
		p	2		stack
	m	()V	e	setChanged
	f	Ldad;	c	this$0
c	dad$2	net/minecraft/world/level/block/entity/LecternBlockEntity$2
	m	()I	a	getCount
	m	(I)I	a	get
		p	1		index
	m	(II)V	a	set
		p	1		index
		p	2		value
	f	Ldad;	a	this$0
c	dae	net/minecraft/world/level/block/entity/LidBlockEntity
	m	(F)F	a	getOpenNess
		p	1		tickDelta
c	daf	net/minecraft/world/level/block/entity/RandomizableContainerBlockEntity
	m	(Lczg;Lgt;Ldbq;)V	<init>	<init>
		p	1		type
		p	2		pos
		p	3		state
	m	()V	a	clearContent
	m	(I)Lcfv;	a	getItem
		p	1		slot
	m	(II)Lcfv;	a	removeItem
		p	1		slot
		p	2		amount
	m	(ILcfv;)V	a	setItem
		p	1		slot
		p	2		stack
	m	(Ladd;J)V	a	setLootTable
		p	1		id
		p	2		seed
	m	(Lbym;)Z	a	stillValid
		p	1		player
	m	(Lclo;Lapo;Lgt;Ladd;)V	a	setLootTable
		p	0		world
		p	1		random
		p	2		pos
		p	3		id
	m	(Lhm;)V	a	setItems
		p	1		list
	m	()Z	aa_	isEmpty
	m	(I)Lcfv;	b	removeItemNoUpdate
		p	1		slot
	m	(ILbyl;Lbym;)Lcbd;	createMenu	createMenu
		p	1		syncId
		p	2		playerInventory
		p	3		player
	m	(Lbym;)Z	d	canOpen
		p	1		player
	m	(Lre;)Z	d	tryLoadLootTable
		p	1		nbt
	m	(Lbym;)V	e	unpackLootTable
		p	1		player
	m	(Lre;)Z	e	trySaveLootTable
		p	1		nbt
	m	()Lhm;	f	getItems
	f	Ljava/lang/String;	d	LOOT_TABLE_TAG
	f	Ljava/lang/String;	e	LOOT_TABLE_SEED_TAG
	f	Ladd;	h	lootTable
	f	J	i	lootTableSeed
c	dag	net/minecraft/world/level/block/entity/SculkCatalystBlockEntity
	m	(Lgt;Ldbq;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	()Ldge;	a	getListenerSource
	m	(Laip;Ldga;Ldga$a;Lede;)Z	a	handleGameEvent
		p	1		world
		p	2		event
		p	3		emitter
		p	4		emitterPos
	m	(Lbfx;)V	a	tryAwardItSpreadsAdvancement
		p	1		deadEntity
	m	(Lcmi;Lgt;Ldbq;Ldag;)V	a	serverTick
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Lcvz$a;)Ljava/lang/Integer;	a	lambda$saveAdditional$0
	m	(Lre;)V	a	load
		p	1		nbt
	m	()I	b	getListenerRadius
	m	(Lre;)V	b	saveAdditional
		p	1		nbt
	m	()Ldgc$a;	c	getDeliveryMode
	m	()Lcvz;	d	getSculkSpreader
	f	Ldfw;	a	blockPosSource
	f	Lcvz;	b	sculkSpreader
c	dah	net/minecraft/world/level/block/entity/SculkSensorBlockEntity
	m	(Lgt;Ldbq;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(FI)I	a	getRedstoneStrengthForDistance
		p	0		distance
		p	1		range
	m	(I)V	a	setLastVibrationFrequency
		p	1		lastVibrationFrequency
	m	(Laip;Ldgc;Lgt;Ldga;Lbfh;Lbfh;F)V	a	onSignalReceive
		p	1		world
		p	2		listener
		p	3		pos
		p	4		event
		p	5		entity
		p	6		sourceEntity
		p	7		distance
	m	(Laip;Ldgc;Lgt;Ldga;Ldga$a;)Z	a	shouldListen
		p	1		world
		p	2		listener
		p	3		pos
		p	4		event
		p	5		emitter
	m	(Ldgi;)V	a	lambda$load$0
		p	1		listener
	m	(Lre;)V	a	load
		p	1		nbt
	m	(Lre;Lrx;)V	a	lambda$saveAdditional$1
		p	1		listenerNbt
	m	(Lre;)V	b	saveAdditional
		p	1		nbt
	m	()Ldgi;	c	getListener
	m	()I	d	getLastVibrationFrequency
	m	()V	f	onSignalSchedule
	m	()Z	w	canTriggerAvoidVibration
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ldgi;	b	listener
	f	I	c	lastVibrationFrequency
c	dai	net/minecraft/world/level/block/entity/SculkShriekerBlockEntity
	m	(Lgt;Ldbq;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	()Lanv;	a	getListenableEvents
	m	(I)V	a	lambda$tryToWarn$3
		p	1		warningLevel
	m	(Laip;)V	a	tryRespond
		p	1		world
	m	(Laip;Laiq;)V	a	tryShriek
		p	1		world
		p	2		player
	m	(Laip;Lbfh;)V	a	shriek
		p	1		world
		p	2		entity
	m	(Laip;Ldgc;Lgt;Ldga;Lbfh;Lbfh;F)V	a	onSignalReceive
		p	1		world
		p	2		listener
		p	3		pos
		p	4		event
		p	5		entity
		p	6		sourceEntity
		p	7		distance
	m	(Laip;Ldgc;Lgt;Ldga;Ldga$a;)Z	a	shouldListen
		p	1		world
		p	2		listener
		p	3		pos
		p	4		event
		p	5		emitter
	m	(Lbfh;)Laiq;	a	tryGetPlayer
		p	0		entity
	m	(Ldgi;)V	a	lambda$load$1
		p	1		vibrationListener
	m	(Lit/unimi/dsi/fastutil/ints/Int2ObjectOpenHashMap;)V	a	lambda$static$0
		p	0		warningSounds
	m	(Lre;)V	a	load
		p	1		nbt
	m	(Lre;Lrx;)V	a	lambda$saveAdditional$2
	m	(Laip;)Z	b	canRespond
		p	1		world
	m	(Laip;Laiq;)Z	b	tryToWarn
		p	1		world
		p	2		player
	m	(Lre;)V	b	saveAdditional
		p	1		nbt
	m	()Ldgi;	c	getListener
	m	(Laip;)Z	c	trySummonWarden
		p	1		world
	m	()V	d	playWardenReplySound
	m	()V	f	onSignalSchedule
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	I	b	LISTENER_RADIUS
	f	I	c	WARNING_SOUND_RADIUS
	f	I	d	WARDEN_SPAWN_ATTEMPTS
	f	I	e	WARDEN_SPAWN_RANGE_XZ
	f	I	f	WARDEN_SPAWN_RANGE_Y
	f	I	g	DARKNESS_RADIUS
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	h	SOUND_BY_LEVEL
	f	I	i	SHRIEKING_TICKS
	f	I	j	warningLevel
	f	Ldgi;	k	listener
c	daj	net/minecraft/world/level/block/entity/ShulkerBoxBlockEntity
	m	(Lcel;Lgt;Ldbq;)V	<init>	<init>
		p	1		color
		p	2		pos
		p	3		state
	m	(Lgt;Ldbq;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(F)F	a	getProgress
		p	1		delta
	m	(ILbyl;)Lcbd;	a	createMenu
		p	1		syncId
		p	2		playerInventory
	m	(ILcfv;Lgz;)Z	a	canPlaceItemThroughFace
		p	1		slot
		p	2		stack
		p	3		dir
	m	(Lcmi;Lgt;Ldbq;Ldaj;)V	a	tick
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Ldbq;)Lecz;	a	getBoundingBox
		p	1		state
	m	(Lgz;)[I	a	getSlotsForFace
		p	1		side
	m	(Lhm;)V	a	setItems
		p	1		list
	m	(Lre;)V	a	load
		p	1		nbt
	m	(II)Z	a_	triggerEvent
		p	1		type
		p	2		data
	m	()I	b	getContainerSize
	m	(ILcfv;Lgz;)Z	b	canTakeItemThroughFace
		p	1		slot
		p	2		stack
		p	3		dir
	m	(Lcmi;Lgt;Ldbq;)V	b	updateAnimation
		p	1		world
		p	2		pos
		p	3		state
	m	(Lre;)V	b	saveAdditional
		p	1		nbt
	m	(Lbym;)V	c	stopOpen
		p	1		player
	m	(Lcmi;Lgt;Ldbq;)V	c	moveCollidedEntities
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcmi;Lgt;Ldbq;)V	d	doNeighborUpdates
		p	0		world
		p	1		pos
		p	2		state
	m	(Lbym;)V	d_	startOpen
		p	1		player
	m	()Lhm;	f	getItems
	m	(Lre;)V	f	loadFromTag
		p	1		nbt
	m	()Ltj;	g	getDefaultName
	m	()Ldaj$a;	i	getAnimationStatus
	m	()Lcel;	j	getColor
	m	()Z	v	isClosed
	f	I	c	COLUMNS
	f	I	f	ROWS
	f	I	g	CONTAINER_SIZE
	f	I	j	EVENT_SET_OPEN_COUNT
	f	I	k	OPENING_TICK_LENGTH
	f	F	l	MAX_LID_HEIGHT
	f	F	m	MAX_LID_ROTATION
	f	Ljava/lang/String;	n	ITEMS_TAG
	f	[I	r	SLOTS
	f	Lhm;	s	itemStacks
	f	I	t	openCount
	f	Ldaj$a;	u	animationStatus
	f	F	v	progress
	f	F	w	progressOld
	f	Lcel;	x	color
c	daj$1	net/minecraft/world/level/block/entity/ShulkerBoxBlockEntity$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$entity$ShulkerBoxBlockEntity$AnimationStatus
c	daj$a	net/minecraft/world/level/block/entity/ShulkerBoxBlockEntity$AnimationStatus
	m	()[Ldaj$a;	a	$values
	f	Ldaj$a;	a	CLOSED
	f	Ldaj$a;	b	OPENING
	f	Ldaj$a;	c	OPENED
	f	Ldaj$a;	d	CLOSING
	f	[Ldaj$a;	e	$VALUES
c	dak	net/minecraft/world/level/block/entity/SignBlockEntity
	m	(Lczg;Lgt;Ldbq;)V	<init>	<init>
		p	1		type
		p	2		pos
		p	3		state
	m	(Lgt;Ldbq;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(ILtj;)V	a	setMessage
		p	1		row
		p	2		text
	m	(ILtj;Ltj;)V	a	setMessage
		p	1		row
		p	2		text
		p	3		filteredText
	m	(IZ)Ltj;	a	getMessage
		p	1		row
		p	2		filtered
	m	(Laiq;)Z	a	executeClickCommands
		p	1		player
	m	(Lbym;)Z	a	hasAnyClickCommands
		p	1		player
	m	(Lcel;)Z	a	setColor
		p	1		value
	m	(Ljava/lang/String;)Ltj;	a	loadLine
		p	1		json
	m	(Ljava/util/UUID;)V	a	setAllowedPlayerEditor
		p	1		editor
	m	(Lre;)V	a	load
		p	1		nbt
	m	(Z)V	a	setEditable
		p	1		editable
	m	(ZLjava/util/function/Function;)[Laov;	a	getRenderMessages
		p	1		filterText
		p	2		textOrderingFunction
	m	()Lre;	aq_	getUpdateTag
	m	(Laiq;)Ldr;	b	createCommandSourceStack
		p	1		player
	m	(Ljava/lang/String;)Ltj;	b	deserializeTextSafe
		p	1		json
	m	(Lre;)V	b	saveAdditional
		p	1		nbt
	m	(Z)Z	b	setHasGlowingText
		p	1		glowingText
	m	()I	c	getTextLineHeight
	m	(Z)[Ltj;	c	getMessages
		p	1		filtered
	m	()I	d	getMaxTextLineWidth
	m	()Lvm;	f	getUpdatePacket
	m	()Z	g	isEditable
	m	()Lvb;	h	getUpdatePacket
	m	()Ljava/util/UUID;	i	getPlayerWhoMayEdit
	m	()Lcel;	j	getColor
	m	()Z	t	onlyOpCanSetNbt
	m	()Z	v	hasGlowingText
	m	()V	w	markUpdated
	f	I	a	LINES
	f	I	b	MAX_TEXT_LINE_WIDTH
	f	I	c	TEXT_LINE_HEIGHT
	f	[Ljava/lang/String;	d	RAW_TEXT_FIELD_NAMES
	f	[Ljava/lang/String;	e	FILTERED_TEXT_FIELD_NAMES
	f	[Ltj;	f	messages
	f	[Ltj;	g	filteredMessages
	f	Z	h	isEditable
	f	Ljava/util/UUID;	i	playerWhoMayEdit
	f	[Laov;	j	renderMessages
	f	Z	k	renderMessagedFiltered
	f	Lcel;	l	color
	f	Z	m	hasGlowingText
c	dal	net/minecraft/world/level/block/entity/SkullBlockEntity
	m	(Lgt;Ldbq;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(F)F	a	getAnimation
		p	1		tickDelta
	m	(Ladu;Ljava/util/concurrent/Executor;)V	a	setup
		p	0		apiServices
		p	1		executor
	m	(Lcmi;Lgt;Ldbq;Ldal;)V	a	animation
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Lcom/mojang/authlib/GameProfile;)V	a	setOwner
		p	1		owner
	m	(Lcom/mojang/authlib/GameProfile;Ljava/util/function/Consumer;)V	a	updateGameprofile
		p	0		owner
		p	1		callback
	m	(Ljava/util/Optional;Ljava/util/function/Consumer;Lcom/mojang/authlib/GameProfile;)V	a	lambda$updateGameprofile$5
	m	(Ljava/util/function/Consumer;Lcom/mojang/authlib/GameProfile;)V	a	lambda$updateGameprofile$4
	m	(Ljava/util/function/Consumer;Lcom/mojang/authlib/GameProfile;Ljava/util/Optional;)V	a	lambda$updateGameprofile$6
		p	2		profile
	m	(Lre;)V	a	load
		p	1		nbt
	m	()Lre;	aq_	getUpdateTag
	m	(Lcom/mojang/authlib/GameProfile;)V	b	lambda$updateOwnerProfile$0
		p	1		owner
	m	(Lcom/mojang/authlib/GameProfile;Ljava/util/function/Consumer;)V	b	lambda$updateGameprofile$1
	m	(Ljava/util/function/Consumer;Lcom/mojang/authlib/GameProfile;)V	b	lambda$updateGameprofile$3
		p	1		profile
	m	(Lre;)V	b	saveAdditional
		p	1		nbt
	m	()V	c	clear
	m	(Ljava/util/function/Consumer;Lcom/mojang/authlib/GameProfile;)V	c	lambda$updateGameprofile$2
		p	1		profile
	m	()Lcom/mojang/authlib/GameProfile;	d	getOwnerProfile
	m	()Ladd;	f	getNoteBlockSound
	m	()Lvm;	g	getUpdatePacket
	m	()Lvb;	h	getUpdatePacket
	m	()V	i	updateOwnerProfile
	f	Ljava/lang/String;	a	TAG_SKULL_OWNER
	f	Ljava/lang/String;	b	TAG_NOTE_BLOCK_SOUND
	f	Lalq;	c	profileCache
	f	Lcom/mojang/authlib/minecraft/MinecraftSessionService;	d	sessionService
	f	Ljava/util/concurrent/Executor;	e	mainThreadExecutor
	f	Lcom/mojang/authlib/GameProfile;	f	owner
	f	Ladd;	g	noteBlockSound
	f	I	h	animationTickCount
	f	Z	i	isAnimating
c	dam	net/minecraft/world/level/block/entity/SmokerBlockEntity
	m	(Lgt;Ldbq;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(ILbyl;)Lcbd;	a	createMenu
		p	1		syncId
		p	2		playerInventory
	m	(Lcfv;)I	a	getBurnDuration
		p	1		fuel
	m	()Ltj;	g	getDefaultName
c	dan	net/minecraft/world/level/block/entity/SpawnerBlockEntity
	m	(Lgt;Ldbq;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(Lbfl;Lapo;)V	a	setEntityId
		p	1		entityType
		p	2		random
	m	(Lcmi;Lgt;Ldbq;Ldan;)V	a	clientTick
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Lre;)V	a	load
		p	1		nbt
	m	(II)Z	a_	triggerEvent
		p	1		type
		p	2		data
	m	()Lre;	aq_	getUpdateTag
	m	(Lcmi;Lgt;Ldbq;Ldan;)V	b	serverTick
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Lre;)V	b	saveAdditional
		p	1		nbt
	m	()Lvm;	c	getUpdatePacket
	m	()Lclk;	d	getSpawner
	m	()Lvb;	h	getUpdatePacket
	m	()Z	t	onlyOpCanSetNbt
	f	Lclk;	a	spawner
c	dan$1	net/minecraft/world/level/block/entity/SpawnerBlockEntity$1
	m	(Lcmi;Lgt;I)V	a	broadcastEvent
		p	1		world
		p	2		pos
		p	3		status
	m	(Lcmi;Lgt;Lcmy;)V	a	setNextSpawnData
		p	1		world
		p	2		pos
		p	3		spawnEntry
	f	Ldan;	a	this$0
c	dao	net/minecraft/world/level/block/entity/StructureBlockEntity
	m	(Lgt;Ldbq;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	()F	A	getIntegrity
	m	()J	B	getSeed
	m	()Z	C	detectSize
	m	()Z	D	saveStructure
	m	()V	E	unloadStructure
	m	()Z	F	isStructureLoadable
	m	()Z	G	isPowered
	m	()Z	H	getShowAir
	m	()Z	I	getShowBoundingBox
	m	()V	J	updateBlockState
	m	(F)V	a	setIntegrity
		p	1		integrity
	m	(J)V	a	setSeed
		p	1		seed
	m	(Ladd;)V	a	setStructureName
		p	1		templateName
	m	(Laip;)Z	a	loadStructure
		p	1		world
	m	(Laip;Lgt;)V	a	lambda$loadStructure$5
		p	0		world
		p	1		pos
	m	(Laip;Z)Z	a	loadStructure
		p	1		world
	m	(Laip;ZLdvh;)Z	a	loadStructure
		p	1		world
		p	3		template
	m	(Lbfx;)V	a	createdBy
		p	1		entity
	m	(Lbym;)Z	a	usedBy
		p	1		player
	m	(Lcua;)V	a	setMirror
		p	1		mirror
	m	(Lcvq;)V	a	setRotation
		p	1		rotation
	m	(Lcze;)Ldao;	a	lambda$getRelatedCorners$3
		p	0		blockEntity
	m	(Ldao;)Z	a	lambda$getRelatedCorners$4
		p	1		blockEntity
	m	(Lddb;)V	a	setMode
		p	1		mode
	m	(Lgt;)V	a	setStructurePos
		p	1		offset
	m	(Lgt;Ldrh;)Z	a	lambda$detectSize$0
		p	2		box
	m	(Lgt;Lgt;)Ljava/util/stream/Stream;	a	getRelatedCorners
		p	1		start
		p	2		end
	m	(Lgt;Ljava/util/stream/Stream;)Ljava/util/Optional;	a	calculateEnclosingBoundingBox
		p	0		pos
		p	1		corners
	m	(Lhy;)V	a	setStructureSize
		p	1		size
	m	(Ljava/lang/String;)V	a	setStructureName
		p	1		templateName
	m	(Lre;)V	a	load
		p	1		nbt
	m	(Z)V	a	setIgnoreEntities
		p	1		ignoreEntities
	m	()Lre;	aq_	getUpdateTag
	m	(J)Lapo;	b	createRandom
		p	0		seed
	m	(Lcze;)Z	b	lambda$getRelatedCorners$2
		p	0		blockEntity
	m	(Lgt;)Z	b	lambda$getRelatedCorners$1
		p	1		pos
	m	(Ljava/lang/String;)V	b	setMetaData
		p	1		metadata
	m	(Lre;)V	b	saveAdditional
		p	1		nbt
	m	(Z)Z	b	saveStructure
	m	()Lvm;	c	getUpdatePacket
	m	(Z)V	c	setPowered
		p	1		powered
	m	()Ljava/lang/String;	d	getStructureName
	m	(Z)V	d	setShowAir
		p	1		showAir
	m	(Z)V	e	setShowBoundingBox
		p	1		showBoundingBox
	m	()Ljava/lang/String;	f	getStructurePath
	m	()Z	g	hasStructureName
	m	()Lvb;	h	getUpdatePacket
	m	()Lgt;	i	getStructurePos
	m	()Lhy;	j	getStructureSize
	m	()Lcua;	v	getMirror
	m	()Lcvq;	w	getRotation
	m	()Ljava/lang/String;	x	getMetaData
	m	()Lddb;	y	getMode
	m	()Z	z	isIgnoreEntities
	f	I	a	MAX_OFFSET_PER_AXIS
	f	I	b	MAX_SIZE_PER_AXIS
	f	Ljava/lang/String;	c	AUTHOR_TAG
	f	I	d	SCAN_CORNER_BLOCKS_RANGE
	f	Ladd;	e	structureName
	f	Ljava/lang/String;	f	author
	f	Ljava/lang/String;	g	metaData
	f	Lgt;	h	structurePos
	f	Lhy;	i	structureSize
	f	Lcua;	j	mirror
	f	Lcvq;	k	rotation
	f	Lddb;	l	mode
	f	Z	m	ignoreEntities
	f	Z	n	powered
	f	Z	r	showAir
	f	Z	s	showBoundingBox
	f	F	t	integrity
	f	J	u	seed
c	dao$a	net/minecraft/world/level/block/entity/StructureBlockEntity$UpdateType
	m	()[Ldao$a;	a	$values
	f	Ldao$a;	a	UPDATE_DATA
	f	Ldao$a;	b	SAVE_AREA
	f	Ldao$a;	c	LOAD_AREA
	f	Ldao$a;	d	SCAN_AREA
	f	[Ldao$a;	e	$VALUES
c	dap	net/minecraft/world/level/block/entity/SuspiciousSandBlockEntity
	m	(Lgt;Ldbq;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(JLbym;Lgz;)Z	a	brush
		p	1		worldTime
		p	3		player
		p	4		hitDirection
	m	(Ladd;J)V	a	setLootTable
		p	1		lootTable
		p	2		seed
	m	(Lbym;)V	a	unpackLootTable
		p	1		player
	m	(Lre;)V	a	load
		p	1		nbt
	m	()Lre;	aq_	getUpdateTag
	m	(Lbym;)V	b	brushingCompleted
		p	1		player
	m	(Lre;)V	b	saveAdditional
		p	1		nbt
	m	()V	c	checkReset
	m	(Lbym;)V	c	dropContent
		p	1		player
	m	()Lvm;	d	getUpdatePacket
	m	(Lre;)Z	d	tryLoadLootTable
		p	1		nbt
	m	(Lre;)Z	e	trySaveLootTable
		p	1		nbt
	m	()Lgz;	f	getHitDirection
	m	()Lcfv;	g	getItem
	m	()Lvb;	h	getUpdatePacket
	m	()I	i	getCompletionState
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/lang/String;	b	LOOT_TABLE_TAG
	f	Ljava/lang/String;	c	LOOT_TABLE_SEED_TAG
	f	Ljava/lang/String;	d	HIT_DIRECTION_TAG
	f	Ljava/lang/String;	e	ITEM_TAG
	f	I	f	BRUSH_COOLDOWN_TICKS
	f	I	g	BRUSH_RESET_TICKS
	f	I	h	REQUIRED_BRUSHES_TO_BREAK
	f	I	i	brushCount
	f	J	j	brushCountResetsAtTick
	f	J	k	coolDownEndsAtTick
	f	Lcfv;	l	item
	f	Lgz;	m	hitDirection
	f	Ladd;	n	lootTable
	f	J	r	lootTableSeed
c	daq	net/minecraft/world/level/block/entity/TheEndGatewayBlockEntity
	m	(Lgt;Ldbq;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(F)F	a	getSpawnPercent
		p	1		tickDelta
	m	(Laip;Lede;)Z	a	isChunkEmpty
		p	0		world
		p	1		pos
	m	(Laip;Lgt;)Lgt;	a	findOrCreateValidTeleportPos
		p	0		world
		p	1		pos
	m	(Laip;Lgt;Ldmg;)V	a	spawnGatewayPortal
		p	0		world
		p	1		pos
		p	2		config
	m	(Laip;Lgt;Lhd$c;)V	a	lambda$findOrCreateValidTeleportPos$1
	m	(Lbfh;)Z	a	canEntityTeleport
		p	0		entity
	m	(Lclo;Lgt;IZ)Lgt;	a	findTallestBlock
		p	0		world
		p	1		pos
		p	2		searchRadius
		p	3		force
	m	(Lcmi;Lede;)Lddy;	a	getChunk
		p	0		world
		p	1		pos
	m	(Lcmi;Lgt;)Lgt;	a	findExitPosition
		p	0		world
		p	1		pos
	m	(Lcmi;Lgt;Ldbq;Lbfh;Ldaq;)V	a	teleportEntity
		p	0		world
		p	1		pos
		p	2		state
		p	3		entity
		p	4		blockEntity
	m	(Lcmi;Lgt;Ldbq;Ldaq;)V	a	beamAnimationTick
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Lddy;)Lgt;	a	findValidSpawnInChunk
		p	0		chunk
	m	(Lgt;Z)V	a	setExitPosition
		p	1		pos
		p	2		exactTeleport
	m	(Lgz;)Z	a	shouldRenderFace
		p	1		direction
	m	(Lhq;)Ljava/util/Optional;	a	lambda$findOrCreateValidTeleportPos$0
	m	(Lre;)V	a	load
		p	1		nbt
	m	(II)Z	a_	triggerEvent
		p	1		type
		p	2		data
	m	()Lre;	aq_	getUpdateTag
	m	(F)F	b	getCooldownPercent
		p	1		tickDelta
	m	(Laip;Lgt;)Lede;	b	findExitPortalXZPosTentative
		p	0		world
		p	1		pos
	m	(Lcmi;Lgt;Ldbq;Ldaq;)V	b	teleportTick
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Lre;)V	b	saveAdditional
		p	1		nbt
	m	()Z	c	isSpawning
	m	(Lcmi;Lgt;Ldbq;Ldaq;)V	c	triggerCooldown
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	()Z	d	isCoolingDown
	m	()Lvm;	f	getUpdatePacket
	m	()I	g	getParticleAmount
	m	()Lvb;	h	getUpdatePacket
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	I	b	SPAWN_TIME
	f	I	c	COOLDOWN_TIME
	f	I	d	ATTENTION_INTERVAL
	f	I	e	EVENT_COOLDOWN
	f	I	f	GATEWAY_HEIGHT_ABOVE_SURFACE
	f	J	g	age
	f	I	h	teleportCooldown
	f	Lgt;	i	exitPortal
	f	Z	j	exactTeleport
c	dar	net/minecraft/world/level/block/entity/TheEndPortalBlockEntity
	m	(Lczg;Lgt;Ldbq;)V	<init>	<init>
		p	1		type
		p	2		pos
		p	3		state
	m	(Lgt;Ldbq;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(Lgz;)Z	a	shouldRenderFace
		p	1		direction
c	das	net/minecraft/world/level/block/entity/TickingBlockEntity
	m	()V	a	tick
	m	()Z	b	isRemoved
	m	()Lgt;	c	getPos
	m	()Ljava/lang/String;	d	getType
c	dat	net/minecraft/world/level/block/entity/TrappedChestBlockEntity
	m	(Lgt;Ldbq;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(Lcmi;Lgt;Ldbq;II)V	a	signalOpenCount
		p	1		world
		p	2		pos
		p	3		state
		p	4		oldViewerCount
		p	5		newViewerCount
c	dau	net/minecraft/world/level/block/entity/package-info
c	dav	net/minecraft/world/level/block/grower/AbstractMegaTreeGrower
	m	(Laip;Lddo;Lgt;Ldbq;Lapo;)Z	a	growTree
		p	1		world
		p	2		chunkGenerator
		p	3		pos
		p	4		state
		p	5		random
	m	(Laip;Lddo;Lgt;Ldbq;Lapo;II)Z	a	placeMega
		p	1		world
		p	2		chunkGenerator
		p	3		pos
		p	4		state
		p	5		random
		p	6		x
		p	7		z
	m	(Lapo;)Ladc;	a	getConfiguredMegaFeature
		p	1		random
	m	(Ldbq;Lclo;Lgt;II)Z	a	isTwoByTwoSapling
		p	0		state
		p	1		world
		p	2		pos
		p	3		x
		p	4		z
c	daw	net/minecraft/world/level/block/grower/AbstractTreeGrower
	m	(Laip;Lddo;Lgt;Ldbq;Lapo;)Z	a	growTree
		p	1		world
		p	2		chunkGenerator
		p	3		pos
		p	4		state
		p	5		random
	m	(Lapo;Z)Ladc;	a	getConfiguredFeature
		p	1		random
		p	2		bees
	m	(Lcmj;Lgt;)Z	a	hasFlowers
		p	1		world
		p	2		pos
c	dax	net/minecraft/world/level/block/grower/AcaciaTreeGrower
	m	(Lapo;Z)Ladc;	a	getConfiguredFeature
		p	1		random
		p	2		bees
c	day	net/minecraft/world/level/block/grower/AzaleaTreeGrower
	m	(Lapo;Z)Ladc;	a	getConfiguredFeature
		p	1		random
		p	2		bees
c	daz	net/minecraft/world/level/block/grower/BirchTreeGrower
	m	(Lapo;Z)Ladc;	a	getConfiguredFeature
		p	1		random
		p	2		bees
c	dba	net/minecraft/world/level/block/grower/CherryTreeGrower
	m	(Lapo;Z)Ladc;	a	getConfiguredFeature
		p	1		random
		p	2		bees
c	dbb	net/minecraft/world/level/block/grower/DarkOakTreeGrower
	m	(Lapo;)Ladc;	a	getConfiguredMegaFeature
		p	1		random
	m	(Lapo;Z)Ladc;	a	getConfiguredFeature
		p	1		random
		p	2		bees
c	dbc	net/minecraft/world/level/block/grower/JungleTreeGrower
	m	(Lapo;)Ladc;	a	getConfiguredMegaFeature
		p	1		random
	m	(Lapo;Z)Ladc;	a	getConfiguredFeature
		p	1		random
		p	2		bees
c	dbd	net/minecraft/world/level/block/grower/MangroveTreeGrower
	m	(F)V	<init>	<init>
		p	1		tallChance
	m	(Lapo;Z)Ladc;	a	getConfiguredFeature
		p	1		random
		p	2		bees
	f	F	a	tallProbability
c	dbe	net/minecraft/world/level/block/grower/OakTreeGrower
	m	(Lapo;Z)Ladc;	a	getConfiguredFeature
		p	1		random
		p	2		bees
c	dbf	net/minecraft/world/level/block/grower/SpruceTreeGrower
	m	(Lapo;)Ladc;	a	getConfiguredMegaFeature
		p	1		random
	m	(Lapo;Z)Ladc;	a	getConfiguredFeature
		p	1		random
		p	2		bees
c	dbg	net/minecraft/world/level/block/grower/package-info
c	dbh	net/minecraft/world/level/block/package-info
c	dbi	net/minecraft/world/level/block/piston/MovingPistonBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lclo;Lgt;)Ldbm;	a	getBlockEntity
		p	1		world
		p	2		pos
	m	(Lclo;Lgt;Ldbq;)Lcfv;	a	getCloneItemStack
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcmi;Ldbq;Lczg;)Lczf;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Lcmj;Lgt;Ldbq;)V	a	destroy
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldbq;Lclo;Lgt;Ldxa;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lcmi;Lgt;Lbym;Lbdx;Leda;)Lbdy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldbq;Lcmi;Lgt;Ldbq;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Ldbq;Lcua;)Ldbq;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldbq;Lcvq;)Ldbq;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldbq;Ldyr$a;)Ljava/util/List;	a	getDrops
		p	1		state
		p	2		builder
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lgt;Ldbq;)Lcze;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Lgt;Ldbq;Ldbq;Lgz;ZZ)Lcze;	a	newMovingBlockEntity
		p	0		pos
		p	1		state
		p	2		pushedBlock
		p	3		facing
		p	4		extending
		p	5		source
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	c	getCollisionShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	f	Ldcl;	a	FACING
	f	Ldcp;	b	TYPE
c	dbj	net/minecraft/world/level/block/piston/PistonBaseBlock
	m	(ZLdbp$d;)V	<init>	<init>
		p	1		sticky
		p	2		settings
	m	(Lcic;)Ldbq;	a	getStateForPlacement
		p	1		ctx
	m	(Lcmi;Lgt;Ldbq;)V	a	checkIfExtend
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcmi;Lgt;Ldbq;Lbfx;Lcfv;)V	a	setPlacedBy
		p	1		world
		p	2		pos
		p	3		state
		p	4		placer
		p	5		itemStack
	m	(Lcmi;Lgt;Lgz;)Z	a	getNeighborSignal
		p	1		world
		p	2		pos
		p	3		pistonFace
	m	(Lcmi;Lgt;Lgz;Z)Z	a	moveBlocks
		p	1		world
		p	2		pos
		p	3		dir
		p	4		retract
	m	(Ldbq;Lclo;Lgt;Ldxa;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lcmi;Lgt;II)Z	a	triggerEvent
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
		p	5		data
	m	(Ldbq;Lcmi;Lgt;Lcpi;Lgt;Z)V	a	neighborChanged
		p	1		state
		p	2		world
		p	3		pos
		p	4		sourceBlock
		p	5		sourcePos
		p	6		notify
	m	(Ldbq;Lcmi;Lgt;Lgz;ZLgz;)Z	a	isPushable
		p	0		state
		p	1		world
		p	2		pos
		p	3		direction
		p	4		canBreak
		p	5		pistonDir
	m	(Ldbq;Lcua;)Ldbq;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldbq;Lcvq;)Ldbq;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldbq;Lcmi;Lgt;Ldbq;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	m	(Ldbq;)Z	g_	useShapeForLightOcclusion
		p	1		state
	f	Ldci;	b	EXTENDED
	f	I	c	TRIGGER_EXTEND
	f	I	d	TRIGGER_CONTRACT
	f	I	e	TRIGGER_DROP
	f	F	f	PLATFORM_THICKNESS
	f	Ledx;	g	EAST_AABB
	f	Ledx;	h	WEST_AABB
	f	Ledx;	i	SOUTH_AABB
	f	Ledx;	j	NORTH_AABB
	f	Ledx;	k	UP_AABB
	f	Ledx;	l	DOWN_AABB
	f	Z	m	isSticky
c	dbj$1	net/minecraft/world/level/block/piston/PistonBaseBlock$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
	f	[I	b	$SwitchMap$net$minecraft$world$level$material$PushReaction
c	dbk	net/minecraft/world/level/block/piston/PistonHeadBlock
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lclo;Lgt;Ldbq;)Lcfv;	a	getCloneItemStack
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcmi;Lgt;Ldbq;Lbym;)V	a	playerWillDestroy
		p	1		world
		p	2		pos
		p	3		state
		p	4		player
	m	(Ldbq;Lclo;Lgt;Ldxa;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lcmi;Lgt;Lcpi;Lgt;Z)V	a	neighborChanged
		p	1		state
		p	2		world
		p	3		pos
		p	4		sourceBlock
		p	5		sourcePos
		p	6		notify
	m	(Ldbq;Lcmi;Lgt;Ldbq;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Ldbq;Lcml;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lcua;)Ldbq;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldbq;Lcvq;)Ldbq;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldbq;Ldbq;)Z	a	isFittingBase
		p	1		headState
		p	2		pistonState
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldbr$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lgz;Z)Ledx;	a	calculateShape
		p	0		direction
		p	1		shortHead
	m	(Z)[Ledx;	a	makeShapes
		p	0		shortHead
	m	(ZLgz;)Ledx;	a	lambda$makeShapes$0
		p	1		direction
	m	(I)[Ledx;	b	lambda$makeShapes$1
	m	(Ldbq;)Z	g_	useShapeForLightOcclusion
		p	1		state
	f	Ledx;	E	DOWN_ARM_AABB
	f	Ledx;	F	SOUTH_ARM_AABB
	f	Ledx;	G	NORTH_ARM_AABB
	f	Ledx;	H	EAST_ARM_AABB
	f	Ledx;	I	WEST_ARM_AABB
	f	Ledx;	J	SHORT_UP_ARM_AABB
	f	Ledx;	K	SHORT_DOWN_ARM_AABB
	f	Ledx;	L	SHORT_SOUTH_ARM_AABB
	f	Ledx;	M	SHORT_NORTH_ARM_AABB
	f	Ledx;	N	SHORT_EAST_ARM_AABB
	f	Ledx;	O	SHORT_WEST_ARM_AABB
	f	[Ledx;	P	SHAPES_SHORT
	f	[Ledx;	Q	SHAPES_LONG
	f	Ldcp;	b	TYPE
	f	Ldci;	c	SHORT
	f	F	d	PLATFORM
	f	Ledx;	e	EAST_AABB
	f	Ledx;	f	WEST_AABB
	f	Ledx;	g	SOUTH_AABB
	f	Ledx;	h	NORTH_AABB
	f	Ledx;	i	UP_AABB
	f	Ledx;	j	DOWN_AABB
	f	F	k	AABB_OFFSET
	f	F	l	EDGE_MIN
	f	F	m	EDGE_MAX
	f	Ledx;	n	UP_ARM_AABB
c	dbk$1	net/minecraft/world/level/block/piston/PistonHeadBlock$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	dbl	net/minecraft/world/level/block/piston/PistonMath
	m	(Lecz;Lgz;D)Lecz;	a	getMovementArea
		p	0		box
		p	1		direction
		p	2		length
c	dbl$1	net/minecraft/world/level/block/piston/PistonMath$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	dbm	net/minecraft/world/level/block/piston/PistonMovingBlockEntity
	m	(Lgt;Ldbq;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(Lgt;Ldbq;Ldbq;Lgz;ZZ)V	<init>	<init>
		p	1		pos
		p	2		state
		p	3		pushedBlock
		p	4		facing
		p	5		extending
		p	6		source
	m	(F)F	a	getProgress
		p	1		tickDelta
	m	(Lclo;Lgt;)Ledx;	a	getCollisionShape
		p	1		world
		p	2		pos
	m	(Lcmi;)V	a	setLevel
		p	1		world
	m	(Lcmi;Lgt;FLdbm;)V	a	moveCollidedEntities
		p	0		world
		p	1		pos
		p	3		blockEntity
	m	(Lcmi;Lgt;Ldbq;Ldbm;)V	a	tick
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Lecz;Lbfh;)Z	a	matchesStickyCritera
		p	0		box
		p	1		entity
	m	(Lecz;Lgz;Lecz;)D	a	getMovement
	m	(Lgt;Lbfh;Lgz;D)V	a	fixEntityWithinPistonBase
		p	0		pos
		p	1		entity
		p	2		direction
		p	3		amount
	m	(Lgt;Lecz;Ldbm;)Lecz;	a	moveByPositionAndProgress
		p	0		pos
		p	1		box
		p	2		blockEntity
	m	(Lgz;Lbfh;DLgz;)V	a	moveEntityByPiston
		p	0		direction
		p	1		entity
		p	4		movementDirection
	m	(Lre;)V	a	load
		p	1		nbt
	m	()Lre;	aq_	getUpdateTag
	m	(F)F	b	getXOff
		p	1		tickDelta
	m	(Lcmi;Lgt;FLdbm;)V	b	moveStuckEntities
		p	0		world
		p	1		pos
		p	3		blockEntity
	m	(Lecz;Lbfh;)Z	b	lambda$moveStuckEntities$1
		p	1		entity
	m	(Lre;)V	b	saveAdditional
		p	1		nbt
	m	()Z	c	isExtending
	m	(F)F	c	getYOff
		p	1		tickDelta
	m	()Lgz;	d	getDirection
	m	(F)F	d	getZOff
		p	1		tickDelta
	m	(F)F	e	getExtendedProgress
		p	1		progress
	m	()Z	f	isSourcePiston
	m	()Lgz;	g	getMovementDirection
	m	()Ldbq;	i	getMovedState
	m	()V	j	finalTick
	m	()J	v	getLastTicked
	m	()Ldbq;	w	getCollisionRelatedBlockState
	m	()Z	x	isStickyForEntities
	m	()Lgz;	y	lambda$static$0
	f	D	a	TICK_MOVEMENT
	f	I	b	TICKS_TO_EXTEND
	f	D	c	PUSH_OFFSET
	f	Ldbq;	d	movedState
	f	Lgz;	e	direction
	f	Z	f	extending
	f	Z	g	isSourcePiston
	f	Ljava/lang/ThreadLocal;	h	NOCLIP
	f	F	i	progress
	f	F	j	progressO
	f	J	k	lastTicked
	f	I	l	deathTicks
c	dbm$1	net/minecraft/world/level/block/piston/PistonMovingBlockEntity$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction$Axis
	f	[I	b	$SwitchMap$net$minecraft$core$Direction
c	dbn	net/minecraft/world/level/block/piston/PistonStructureResolver
	m	(Lcmi;Lgt;Lgz;Z)V	<init>	<init>
		p	1		world
		p	2		pos
		p	3		dir
		p	4		retracted
	m	()Z	a	resolve
	m	(II)V	a	reorderListAtCollision
		p	1		from
		p	2		to
	m	(Ldbq;)Z	a	isSticky
		p	0		state
	m	(Ldbq;Ldbq;)Z	a	canStickToEachOther
		p	0		state
		p	1		adjacentState
	m	(Lgt;)Z	a	addBranchingBlocks
		p	1		pos
	m	(Lgt;Lgz;)Z	a	addBlockLine
		p	1		pos
		p	2		dir
	m	()Lgz;	b	getPushDirection
	m	()Ljava/util/List;	c	getToPush
	m	()Ljava/util/List;	d	getToDestroy
	f	I	a	MAX_PUSH_DEPTH
	f	Lcmi;	b	level
	f	Lgt;	c	pistonPos
	f	Z	d	extending
	f	Lgt;	e	startPos
	f	Lgz;	f	pushDirection
	f	Ljava/util/List;	g	toPush
	f	Ljava/util/List;	h	toDestroy
	f	Lgz;	i	pistonDirection
c	dbo	net/minecraft/world/level/block/piston/package-info
c	dbp	net/minecraft/world/level/block/state/BlockBehaviour
	m	(Ldbp$d;)V	<init>	<init>
		p	1		settings
	m	(Lcmi;Ldbq;Leda;Lbze;)V	a	onProjectileHit
		p	1		world
		p	2		state
		p	3		hit
		p	4		projectile
	m	(Ldbq;Laip;Lgt;Lapo;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Laip;Lgt;Lcfv;Z)V	a	spawnAfterBreak
		p	1		state
		p	2		world
		p	3		pos
		p	4		tool
		p	5		dropExperience
	m	(Ldbq;Lbym;Lclo;Lgt;)F	a	getDestroyProgress
		p	1		state
		p	2		player
		p	3		world
		p	4		pos
	m	(Ldbq;Lcic;)Z	a	canBeReplaced
		p	1		state
		p	2		context
	m	(Ldbq;Lclo;Lgt;)Ledx;	a	getInteractionShape
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lclo;Lgt;Ldxa;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lclo;Lgt;Lgz;)I	a	getSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldbq;Lcmi;Lgt;)I	a	getAnalogOutputSignal
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lcmi;Lgt;II)Z	a	triggerEvent
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
		p	5		data
	m	(Ldbq;Lcmi;Lgt;Lbfh;)V	a	entityInside
		p	1		state
		p	2		world
		p	3		pos
		p	4		entity
	m	(Ldbq;Lcmi;Lgt;Lbym;)V	a	attack
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
	m	(Ldbq;Lcmi;Lgt;Lbym;Lbdx;Leda;)Lbdy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldbq;Lcmi;Lgt;Lcpi;Lgt;Z)V	a	neighborChanged
		p	1		state
		p	2		world
		p	3		pos
		p	4		sourceBlock
		p	5		sourcePos
		p	6		notify
	m	(Ldbq;Lcmi;Lgt;Ldbq;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Ldbq;Lcmj;Lgt;II)V	a	updateIndirectNeighbourShapes
		p	1		state
		p	2		world
		p	3		pos
		p	4		flags
		p	5		maxUpdateDepth
	m	(Ldbq;Lcml;Lgt;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lcua;)Ldbq;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldbq;Lcvq;)Ldbq;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldbq;Ldbq;Lgz;)Z	a	skipRendering
		p	1		state
		p	2		stateFrom
		p	3		direction
	m	(Ldbq;Ldwi;)Z	a	canBeReplaced
		p	1		state
		p	2		fluid
	m	(Ldbq;Ldyr$a;)Ljava/util/List;	a	getDrops
		p	1		state
		p	2		builder
	m	(Ldbq;Lgt;)J	a	getSeed
		p	1		state
		p	2		pos
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldbq;Lclo;Lgt;)Z	a_	isCollisionShapeFullBlock
		p	1		state
		p	2		world
		p	3		pos
	m	()F	am_	getMaxHorizontalOffset
	m	()F	ap_	getMaxVerticalOffset
	m	(Ldbq;Laip;Lgt;Lapo;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldbq;Lclo;Lgt;)F	b	getShadeBrightness
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	b	getVisualShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;Lclo;Lgt;Lgz;)I	b	getDirectSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldbq;Lcmi;Lgt;)Lbeb;	b	getMenuProvider
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lcmi;Lgt;Ldbq;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	m	(Ldbq;)Lcvj;	b_	getRenderShape
		p	1		state
	m	(Ldbq;Lclo;Lgt;)Ledx;	b_	getBlockSupportShape
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;Lclo;Lgt;Ledj;)Ledx;	c	getCollisionShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldbq;)Ldwj;	c_	getFluidState
		p	1		state
	m	(Ldbq;)Ldwp;	d	getPistonPushReaction
		p	1		state
	m	(Ldbq;)Z	d_	hasAnalogOutputSignal
		p	1		state
	m	(Ldbq;Lclo;Lgt;)Ledx;	f	getOcclusionShape
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;)Z	f_	isSignalSource
		p	1		state
	m	(Ldbq;Lclo;Lgt;)I	g	getLightBlock
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldbq;)Z	g_	useShapeForLightOcclusion
		p	1		state
	m	(Ldbq;Lclo;Lgt;)Z	h	isOcclusionShapeFullBlock
		p	1		state
		p	2		world
		p	3		pos
	m	()Lcfq;	k	asItem
	m	()Lcau;	m	requiredFeatures
	m	()Lcpi;	q	asBlock
	m	()Ladd;	s	getLootTable
	m	()Ldwo;	t	defaultMaterialColor
	m	()F	u	defaultDestroyTime
	f	[Lgz;	aE	UPDATE_SHAPE_ORDER
	f	Ldwn;	aF	material
	f	Z	aG	hasCollision
	f	F	aH	explosionResistance
	f	Z	aI	isRandomlyTicking
	f	Lcwq;	aJ	soundType
	f	F	aK	friction
	f	F	aL	speedFactor
	f	F	aM	jumpFactor
	f	Z	aN	dynamicShape
	f	Lcau;	aO	requiredFeatures
	f	Ldbp$d;	aP	properties
	f	Ladd;	aQ	drops
c	dbp$1	net/minecraft/world/level/block/state/BlockBehaviour$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$pathfinder$PathComputationType
	f	[I	b	$SwitchMap$net$minecraft$world$level$block$state$BlockBehaviour$OffsetType
c	dbp$a	net/minecraft/world/level/block/state/BlockBehaviour$BlockStateBase
	m	(Lcpi;Lcom/google/common/collect/ImmutableMap;Lcom/mojang/serialization/MapCodec;)V	<init>	<init>
		p	1		block
		p	2		propertyMap
		p	3		codec
	m	()V	a	initCache
	m	(Laip;Lgt;Lapo;)V	a	tick
		p	1		world
		p	2		pos
		p	3		random
	m	(Laip;Lgt;Lcfv;Z)V	a	spawnAfterBreak
		p	1		world
		p	2		pos
		p	3		tool
		p	4		dropExperience
	m	(Lanv;)Z	a	is
		p	1		tag
	m	(Lanv;Ljava/util/function/Predicate;)Z	a	is
		p	1		tag
		p	2		predicate
	m	(Lbym;Lclo;Lgt;)F	a	getDestroyProgress
		p	1		player
		p	2		world
		p	3		pos
	m	(Lcic;)Z	a	canBeReplaced
		p	1		context
	m	(Lclo;Lgt;)Z	a	propagatesSkylightDown
		p	1		world
		p	2		pos
	m	(Lclo;Lgt;Lbfh;)Z	a	entityCanStandOn
		p	1		world
		p	2		pos
		p	3		entity
	m	(Lclo;Lgt;Lbfh;Lgz;)Z	a	entityCanStandOnFace
		p	1		world
		p	2		pos
		p	3		entity
		p	4		direction
	m	(Lclo;Lgt;Lbfl;)Z	a	isValidSpawn
		p	1		world
		p	2		pos
		p	3		type
	m	(Lclo;Lgt;Ldbp$b;)Lede;	a	lambda$getOffset$0
		p	3		offsetter
	m	(Lclo;Lgt;Ldxa;)Z	a	isPathfindable
		p	1		world
		p	2		pos
		p	3		type
	m	(Lclo;Lgt;Ledj;)Ledx;	a	getShape
		p	1		world
		p	2		pos
		p	3		context
	m	(Lclo;Lgt;Lgz;)Ledx;	a	getFaceOcclusionShape
		p	1		world
		p	2		pos
		p	3		direction
	m	(Lclo;Lgt;Lgz;Lcxf;)Z	a	isFaceSturdy
		p	1		world
		p	2		pos
		p	3		direction
		p	4		shapeType
	m	(Lcmi;Lbym;Lbdx;Leda;)Lbdy;	a	use
		p	1		world
		p	2		player
		p	3		hand
		p	4		hit
	m	(Lcmi;Lczg;)Lczf;	a	getTicker
		p	1		world
		p	2		blockEntityType
	m	(Lcmi;Ldbq;Leda;Lbze;)V	a	onProjectileHit
		p	1		world
		p	2		state
		p	3		hit
		p	4		projectile
	m	(Lcmi;Lgt;)I	a	getAnalogOutputSignal
		p	1		world
		p	2		pos
	m	(Lcmi;Lgt;II)Z	a	triggerEvent
		p	1		world
		p	2		pos
		p	3		type
		p	4		data
	m	(Lcmi;Lgt;Lbfh;)V	a	entityInside
		p	1		world
		p	2		pos
		p	3		entity
	m	(Lcmi;Lgt;Lbym;)V	a	attack
		p	1		world
		p	2		pos
		p	3		player
	m	(Lcmi;Lgt;Lcpi;Lgt;Z)V	a	neighborChanged
		p	1		world
		p	2		pos
		p	3		sourceBlock
		p	4		sourcePos
		p	5		notify
	m	(Lcmi;Lgt;Ldbq;Z)V	a	onPlace
		p	1		world
		p	2		pos
		p	3		state
		p	4		notify
	m	(Lcmj;Lgt;I)V	a	updateNeighbourShapes
		p	1		world
		p	2		pos
		p	3		flags
	m	(Lcmj;Lgt;II)V	a	updateNeighbourShapes
		p	1		world
		p	2		pos
		p	3		flags
		p	4		maxUpdateDepth
	m	(Lcml;Lgt;)Z	a	canSurvive
		p	1		world
		p	2		pos
	m	(Lcpi;)Z	a	is
		p	1		block
	m	(Lcua;)Ldbq;	a	mirror
		p	1		mirror
	m	(Lcvq;)Ldbq;	a	rotate
		p	1		rotation
	m	(Ldbq;Lgz;)Z	a	skipRendering
		p	1		state
		p	2		direction
	m	(Ldwi;)Z	a	canBeReplaced
		p	1		fluid
	m	(Ldyr$a;)Ljava/util/List;	a	getDrops
		p	1		builder
	m	(Lgt;)J	a	getSeed
		p	1		pos
	m	(Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		direction
		p	2		neighborState
		p	3		world
		p	4		pos
		p	5		neighborPos
	m	(Lhh;)Z	a	is
		p	1		blocks
	m	()Lcpi;	b	getBlock
	m	(Laip;Lgt;Lapo;)V	b	randomTick
		p	1		world
		p	2		pos
		p	3		random
	m	(Lclo;Lgt;)I	b	getLightBlock
		p	1		world
		p	2		pos
	m	(Lclo;Lgt;Ledj;)Ledx;	b	getCollisionShape
		p	1		world
		p	2		pos
		p	3		context
	m	(Lclo;Lgt;Lgz;)I	b	getSignal
		p	1		world
		p	2		pos
		p	3		direction
	m	(Lcmi;Lgt;)Lbeb;	b	getMenuProvider
		p	1		world
		p	2		pos
	m	(Lcmi;Lgt;Ldbq;Z)V	b	onRemove
		p	1		world
		p	2		pos
		p	3		state
		p	4		moved
	m	(Lcmj;Lgt;I)V	b	updateIndirectNeighbourShapes
		p	1		world
		p	2		pos
		p	3		flags
	m	(Lcmj;Lgt;II)V	b	updateIndirectNeighbourShapes
		p	1		world
		p	2		pos
		p	3		flags
		p	4		maxUpdateDepth
	m	()Lhd;	c	getBlockHolder
	m	(Lclo;Lgt;)Ledx;	c	getOcclusionShape
		p	1		world
		p	2		pos
	m	(Lclo;Lgt;Ledj;)Ledx;	c	getVisualShape
		p	1		world
		p	2		pos
		p	3		context
	m	(Lclo;Lgt;Lgz;)I	c	getDirectSignal
		p	1		world
		p	2		pos
		p	3		direction
	m	()Ldwn;	d	getMaterial
	m	(Lclo;Lgt;)Ldwo;	d	getMapColor
		p	1		world
		p	2		pos
	m	(Lclo;Lgt;Lgz;)Z	d	isFaceSturdy
		p	1		world
		p	2		pos
		p	3		direction
	m	()Z	e	hasLargeCollisionShape
	m	(Lclo;Lgt;)Z	e	emissiveRendering
		p	1		world
		p	2		pos
	m	()Z	f	useShapeForLightOcclusion
	m	(Lclo;Lgt;)F	f	getShadeBrightness
		p	1		world
		p	2		pos
	m	()I	g	getLightEmission
	m	(Lclo;Lgt;)Z	g	isRedstoneConductor
		p	1		world
		p	2		pos
	m	()Z	h	isAir
	m	(Lclo;Lgt;)F	h	getDestroySpeed
		p	1		world
		p	2		pos
	m	()Lcvj;	i	getRenderShape
	m	(Lclo;Lgt;)Z	i	isSolidRender
		p	1		world
		p	2		pos
	m	()Z	j	isSignalSource
	m	(Lclo;Lgt;)Ledx;	j	getShape
		p	1		world
		p	2		pos
	m	()Z	k	hasAnalogOutputSignal
	m	(Lclo;Lgt;)Ledx;	k	getCollisionShape
		p	1		world
		p	2		pos
	m	()Ldwp;	l	getPistonPushReaction
	m	(Lclo;Lgt;)Ledx;	l	getBlockSupportShape
		p	1		world
		p	2		pos
	m	()Z	m	canOcclude
	m	(Lclo;Lgt;)Ledx;	m	getInteractionShape
		p	1		world
		p	2		pos
	m	()Z	n	hasOffsetFunction
	m	(Lclo;Lgt;)Lede;	n	getOffset
		p	1		world
		p	2		pos
	m	()Z	o	canBeReplaced
	m	(Lclo;Lgt;)Z	o	isSuffocating
		p	1		world
		p	2		pos
	m	()Ljava/util/stream/Stream;	p	getTags
	m	(Lclo;Lgt;)Z	p	isViewBlocking
		p	1		world
		p	2		pos
	m	()Z	q	hasBlockEntity
	m	(Lclo;Lgt;)Z	q	hasPostProcess
		p	1		world
		p	2		pos
	m	()Ldwj;	r	getFluidState
	m	(Lclo;Lgt;)Z	r	isCollisionShapeFullBlock
		p	1		world
		p	2		pos
	m	()Z	s	isRandomlyTicking
	m	()Lcwq;	t	getSoundType
	m	()Ldbq;	u	asState
	m	()Z	v	requiresCorrectToolForDrops
	m	()Z	w	shouldSpawnParticlesOnBreak
	f	Ldbp$a$a;	a	cache
	f	I	b	lightEmission
	f	Z	g	useShapeForLightOcclusion
	f	Z	h	isAir
	f	Ldwn;	i	material
	f	Ldwo;	j	materialColor
	f	F	k	destroySpeed
	f	Z	l	requiresCorrectToolForDrops
	f	Z	m	canOcclude
	f	Ldbp$f;	n	isRedstoneConductor
	f	Ldbp$f;	o	isSuffocating
	f	Ldbp$f;	p	isViewBlocking
	f	Ldbp$f;	q	hasPostProcess
	f	Ldbp$f;	r	emissiveRendering
	f	Ljava/util/Optional;	s	offsetFunction
	f	Z	t	spawnParticlesOnBreak
	f	Ldwj;	u	fluidState
	f	Z	v	isRandomlyTicking
c	dbp$a$a	net/minecraft/world/level/block/state/BlockBehaviour$BlockStateBase$Cache
	m	(Ldbq;)V	<init>	<init>
		p	1		state
	m	(Lgz$a;)Z	a	lambda$new$0
		p	1		axis
	m	(Lgz;Lcxf;)Z	a	isFaceSturdy
		p	1		direction
		p	2		shapeType
	m	(Lgz;Lcxf;)I	b	getFaceSupportIndex
		p	0		direction
		p	1		shapeType
	f	Z	a	solidRender
	f	Ledx;	b	collisionShape
	f	Z	c	largeCollisionShape
	f	Z	d	isCollisionShapeFullBlock
	f	[Lgz;	e	DIRECTIONS
	f	I	f	SUPPORT_TYPE_COUNT
	f	Z	g	propagatesSkylightDown
	f	I	h	lightBlock
	f	[Ledx;	i	occlusionShapes
	f	[Z	j	faceSturdy
c	dbp$b	net/minecraft/world/level/block/state/BlockBehaviour$OffsetFunction
	m	(Ldbq;Lclo;Lgt;)Lede;	evaluate	evaluate
		p	1		state
		p	2		world
		p	3		pos
c	dbp$c	net/minecraft/world/level/block/state/BlockBehaviour$OffsetType
	m	()[Ldbp$c;	a	$values
	f	Ldbp$c;	a	NONE
	f	Ldbp$c;	b	XZ
	f	Ldbp$c;	c	XYZ
	f	[Ldbp$c;	d	$VALUES
c	dbp$d	net/minecraft/world/level/block/state/BlockBehaviour$Properties
	m	(Ldwn;Ldwo;)V	<init>	<init>
		p	1		material
		p	2		mapColorProvider
	m	(Ldwn;Ljava/util/function/Function;)V	<init>	<init>
		p	1		material
		p	2		mapColorProvider
	m	()Ldbp$d;	a	noCollission
	m	(F)Ldbp$d;	a	friction
		p	1		slipperiness
	m	(FF)Ldbp$d;	a	strength
		p	1		hardness
		p	2		resistance
	m	(Lcpi;)Ldbp$d;	a	dropsLike
		p	1		source
	m	(Lcwq;)Ldbp$d;	a	sound
		p	1		soundGroup
	m	(Ldbp$c;)Ldbp$d;	a	offsetType
		p	1		offsetType
	m	(Ldbp$e;)Ldbp$d;	a	isValidSpawn
		p	1		predicate
	m	(Ldbp$f;)Ldbp$d;	a	isRedstoneConductor
		p	1		predicate
	m	(Ldbp;)Ldbp$d;	a	copy
		p	0		block
	m	(Ldbq;)I	a	lambda$new$0
		p	0		state
	m	(Ldbq;Lclo;Lgt;)Lede;	a	lambda$offsetType$9
		p	0		state
		p	1		world
		p	2		pos
	m	(Ldbq;Lclo;Lgt;Lbfl;)Z	a	lambda$new$1
		p	0		state
		p	1		world
		p	2		pos
		p	3		type
	m	(Ldwn;)Ldbp$d;	a	of
		p	0		material
	m	(Ldwn;Lcel;)Ldbp$d;	a	of
		p	0		material
		p	1		color
	m	(Ldwn;Ldwo;)Ldbp$d;	a	of
		p	0		material
		p	1		color
	m	(Ldwn;Ljava/util/function/Function;)Ldbp$d;	a	of
		p	0		material
		p	1		mapColor
	m	(Ldwo;)Ldbp$d;	a	color
		p	1		color
	m	(Ldwo;Ldbq;)Ldwo;	a	lambda$color$7
		p	1		state
	m	(Ljava/util/function/ToIntFunction;)Ldbp$d;	a	lightLevel
		p	1		luminance
	m	([Lcas;)Ldbp$d;	a	requiredFeatures
		p	1		features
	m	()Ldbp$d;	b	noOcclusion
	m	(F)Ldbp$d;	b	speedFactor
		p	1		velocityMultiplier
	m	(Ldbp$f;)Ldbp$d;	b	isSuffocating
		p	1		predicate
	m	(Ldbq;Lclo;Lgt;)Lede;	b	lambda$offsetType$8
		p	0		state
		p	1		world
		p	2		pos
	m	(Ldwo;Ldbq;)Ldwo;	b	lambda$new$6
		p	1		state
	m	()Ldbp$d;	c	instabreak
	m	(F)Ldbp$d;	c	jumpFactor
		p	1		jumpVelocityMultiplier
	m	(Ldbp$f;)Ldbp$d;	c	isViewBlocking
		p	1		predicate
	m	(Ldbq;Lclo;Lgt;)Z	c	lambda$new$5
		p	0		state
		p	1		world
		p	2		pos
	m	()Ldbp$d;	d	randomTicks
	m	(F)Ldbp$d;	d	strength
		p	1		strength
	m	(Ldbp$f;)Ldbp$d;	d	hasPostProcess
		p	1		predicate
	m	(Ldbq;Lclo;Lgt;)Z	d	lambda$new$4
		p	0		state
		p	1		world
		p	2		pos
	m	()Ldbp$d;	e	dynamicShape
	m	(F)Ldbp$d;	e	destroyTime
		p	1		hardness
	m	(Ldbp$f;)Ldbp$d;	e	emissiveRendering
		p	1		predicate
	m	(Ldbq;Lclo;Lgt;)Z	e	lambda$new$3
		p	1		state
		p	2		world
		p	3		pos
	m	()Ldbp$d;	f	noLootTable
	m	(F)Ldbp$d;	f	explosionResistance
		p	1		resistance
	m	(Ldbq;Lclo;Lgt;)Z	f	lambda$new$2
		p	0		state
		p	1		world
		p	2		pos
	m	()Ldbp$d;	g	air
	m	()Ldbp$d;	h	requiresCorrectToolForDrops
	m	()Ldbp$d;	i	noParticlesOnBreak
	f	Ldwn;	a	material
	f	Ljava/util/function/Function;	b	materialColor
	f	Z	c	hasCollision
	f	Lcwq;	d	soundType
	f	Ljava/util/function/ToIntFunction;	e	lightEmission
	f	F	f	explosionResistance
	f	F	g	destroyTime
	f	Z	h	requiresCorrectToolForDrops
	f	Z	i	isRandomlyTicking
	f	F	j	friction
	f	F	k	speedFactor
	f	F	l	jumpFactor
	f	Ladd;	m	drops
	f	Z	n	canOcclude
	f	Z	o	isAir
	f	Z	p	spawnParticlesOnBreak
	f	Ldbp$e;	q	isValidSpawn
	f	Ldbp$f;	r	isRedstoneConductor
	f	Ldbp$f;	s	isSuffocating
	f	Ldbp$f;	t	isViewBlocking
	f	Ldbp$f;	u	hasPostProcess
	f	Ldbp$f;	v	emissiveRendering
	f	Z	w	dynamicShape
	f	Lcau;	x	requiredFeatures
	f	Ljava/util/Optional;	y	offsetFunction
c	dbp$e	net/minecraft/world/level/block/state/BlockBehaviour$StateArgumentPredicate
	m	(Ldbq;Lclo;Lgt;Ljava/lang/Object;)Z	test	test
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
c	dbp$f	net/minecraft/world/level/block/state/BlockBehaviour$StatePredicate
	m	(Ldbq;Lclo;Lgt;)Z	test	test
		p	1		state
		p	2		world
		p	3		pos
c	dbq	net/minecraft/world/level/block/state/BlockState
	m	(Lcpi;Lcom/google/common/collect/ImmutableMap;Lcom/mojang/serialization/MapCodec;)V	<init>	<init>
		p	1		block
		p	2		propertyMap
		p	3		codec
	m	()Ldbq;	u	asState
	f	Lcom/mojang/serialization/Codec;	b	CODEC
c	dbr	net/minecraft/world/level/block/state/StateDefinition
	m	(Ljava/util/function/Function;Ljava/lang/Object;Ldbr$b;Ljava/util/Map;)V	<init>	<init>
		p	1		defaultStateGetter
		p	2		owner
		p	3		factory
		p	4		propertiesMap
	m	()Lcom/google/common/collect/ImmutableList;	a	getPossibleStates
	m	(Lcom/mojang/serialization/MapCodec;Ljava/util/function/Supplier;Ljava/lang/String;Ldcu;)Lcom/mojang/serialization/MapCodec;	a	appendPropertyCodec
		p	0		mapCodec
		p	1		defaultStateGetter
		p	2		key
		p	3		property
	m	(Ldbr$b;Ljava/lang/Object;Lcom/mojang/serialization/MapCodec;Ljava/util/Map;Ljava/util/List;Ljava/util/List;)V	a	lambda$new$3
	m	(Ldcu;Lcom/mojang/datafixers/util/Pair;)Ldbs;	a	lambda$appendPropertyCodec$6
	m	(Ldcu;Ldbs;)Lcom/mojang/datafixers/util/Pair;	a	lambda$appendPropertyCodec$7
	m	(Ldcu;Ljava/util/List;)Ljava/util/stream/Stream;	a	lambda$new$2
	m	(Ldcu;Ljava/util/function/Supplier;)Ldcu$a;	a	lambda$appendPropertyCodec$5
	m	(Ljava/lang/String;)Ldcu;	a	getProperty
		p	1		name
	m	(Ljava/util/List;Ldcu;Ljava/lang/Comparable;)Ljava/util/List;	a	lambda$new$1
	m	(Ljava/util/function/Function;Ljava/lang/Object;)Ldbs;	a	lambda$new$0
	m	()Ldbs;	b	any
	m	(Ljava/lang/String;)V	b	lambda$appendPropertyCodec$4
	m	()Ljava/lang/Object;	c	getOwner
	m	()Ljava/util/Collection;	d	getProperties
	f	Ljava/util/regex/Pattern;	a	NAME_PATTERN
	f	Ljava/lang/Object;	b	owner
	f	Lcom/google/common/collect/ImmutableSortedMap;	c	propertiesByName
	f	Lcom/google/common/collect/ImmutableList;	d	states
c	dbr$a	net/minecraft/world/level/block/state/StateDefinition$Builder
	m	(Ljava/lang/Object;)V	<init>	<init>
		p	1		owner
	m	(Ldcu;)V	a	validateProperty
		p	1		property
	m	(Ljava/util/function/Function;Ldbr$b;)Ldbr;	a	create
		p	1		defaultStateGetter
		p	2		factory
	m	([Ldcu;)Ldbr$a;	a	add
		p	1		properties
	f	Ljava/lang/Object;	a	owner
	f	Ljava/util/Map;	b	properties
c	dbr$b	net/minecraft/world/level/block/state/StateDefinition$Factory
	m	(Ljava/lang/Object;Lcom/google/common/collect/ImmutableMap;Lcom/mojang/serialization/MapCodec;)Ljava/lang/Object;	create	create
		p	1		owner
		p	2		entries
		p	3		codec
c	dbs	net/minecraft/world/level/block/state/StateHolder
	m	(Ljava/lang/Object;Lcom/google/common/collect/ImmutableMap;Lcom/mojang/serialization/MapCodec;)V	<init>	<init>
		p	1		owner
		p	2		entries
		p	3		codec
	m	(Lcom/mojang/serialization/Codec;Ljava/util/function/Function;)Lcom/mojang/serialization/Codec;	a	codec
		p	1		ownerToStateFunction
	m	(Ldbs;)Ljava/lang/Object;	a	lambda$codec$0
	m	(Ldbs;Ljava/util/Optional;)Ldbs;	a	lambda$codec$1
	m	(Ldcu;)Ljava/lang/Object;	a	cycle
		p	1		property
	m	(Ldcu;Ljava/lang/Comparable;)Ljava/lang/Object;	a	setValue
		p	1		property
		p	2		value
	m	(Ljava/util/Collection;Ljava/lang/Object;)Ljava/lang/Object;	a	findNextInCollection
		p	0		values
		p	1		value
	m	(Ljava/util/Map;)V	a	populateNeighbours
		p	1		states
	m	(Ljava/util/function/Function;Ljava/lang/Object;)Lcom/mojang/serialization/Codec;	a	lambda$codec$2
	m	(Ldcu;)Z	b	hasProperty
		p	1		property
	m	(Ldcu;Ljava/lang/Comparable;)Ljava/lang/Object;	b	trySetValue
		p	1		property
		p	2		value
	m	(Ldcu;)Ljava/lang/Comparable;	c	getValue
		p	1		property
	m	(Ldcu;Ljava/lang/Comparable;)Ljava/util/Map;	c	makeNeighbourValues
		p	1		property
		p	2		value
	m	(Ldcu;)Ljava/util/Optional;	d	getOptionalValue
		p	1		property
	m	()Ljava/util/Collection;	x	getProperties
	m	()Lcom/google/common/collect/ImmutableMap;	y	getValues
	f	Ljava/util/function/Function;	a	PROPERTY_ENTRY_TO_STRING_FUNCTION
	f	Lcom/google/common/collect/ImmutableMap;	b	values
	f	Ljava/lang/String;	c	NAME_TAG
	f	Ljava/lang/String;	d	PROPERTIES_TAG
	f	Ljava/lang/Object;	e	owner
	f	Lcom/mojang/serialization/MapCodec;	f	propertiesCodec
	f	Lcom/google/common/collect/Table;	g	neighbours
c	dbs$1	net/minecraft/world/level/block/state/StateHolder$1
	m	(Ldcu;Ljava/lang/Comparable;)Ljava/lang/String;	a	getName
		p	1		property
		p	2		value
	m	(Ljava/util/Map$Entry;)Ljava/lang/String;	a	apply
c	dbt	net/minecraft/world/level/block/state/package-info
c	dbu	net/minecraft/world/level/block/state/pattern/BlockInWorld
	m	(Lcml;Lgt;Z)V	<init>	<init>
		p	1		world
		p	2		pos
		p	3		forceLoad
	m	()Ldbq;	a	getState
	m	(Ljava/util/function/Predicate;)Ljava/util/function/Predicate;	a	hasState
		p	0		state
	m	(Ljava/util/function/Predicate;Ldbu;)Z	a	lambda$hasState$0
		p	1		pos
	m	()Lcze;	b	getEntity
	m	()Lcml;	c	getLevel
	m	()Lgt;	d	getPos
	f	Lcml;	a	level
	f	Lgt;	b	pos
	f	Z	c	loadChunks
	f	Ldbq;	d	state
	f	Lcze;	e	entity
	f	Z	f	cachedEntity
c	dbv	net/minecraft/world/level/block/state/pattern/BlockPattern
	m	([[[Ljava/util/function/Predicate;)V	<init>	<init>
		p	1		pattern
	m	()I	a	getDepth
	m	(Lcml;Lgt;)Ldbv$b;	a	find
		p	1		world
		p	2		pos
	m	(Lcml;Lgt;Lgz;Lgz;)Ldbv$b;	a	matches
		p	1		world
		p	2		frontTopLeft
		p	3		forwards
		p	4		up
	m	(Lcml;Z)Lcom/google/common/cache/LoadingCache;	a	createLevelCache
		p	0		world
		p	1		forceLoad
	m	(Lgt;Lgz;Lgz;III)Lgt;	a	translateAndRotate
		p	0		pos
		p	1		forwards
		p	2		up
		p	3		offsetLeft
		p	4		offsetDown
		p	5		offsetForwards
	m	(Lgt;Lgz;Lgz;Lcom/google/common/cache/LoadingCache;)Ldbv$b;	a	matches
		p	1		frontTopLeft
		p	2		forwards
		p	3		up
		p	4		cache
	m	()I	b	getHeight
	m	()I	c	getWidth
	m	()[[[Ljava/util/function/Predicate;	d	getPattern
	f	[[[Ljava/util/function/Predicate;	a	pattern
	f	I	b	depth
	f	I	c	height
	f	I	d	width
c	dbv$a	net/minecraft/world/level/block/state/pattern/BlockPattern$BlockCacheLoader
	m	(Lcml;Z)V	<init>	<init>
		p	1		world
		p	2		forceLoad
	m	(Lgt;)Ldbu;	a	load
	f	Lcml;	a	level
	f	Z	b	loadChunks
c	dbv$b	net/minecraft/world/level/block/state/pattern/BlockPattern$BlockPatternMatch
	m	(Lgt;Lgz;Lgz;Lcom/google/common/cache/LoadingCache;III)V	<init>	<init>
		p	1		frontTopLeft
		p	2		forwards
		p	3		up
		p	4		cache
		p	5		width
		p	6		height
		p	7		depth
	m	()Lgt;	a	getFrontTopLeft
	m	(III)Ldbu;	a	getBlock
		p	1		offsetLeft
		p	2		offsetDown
		p	3		offsetForwards
	m	()Lgz;	b	getForwards
	m	()Lgz;	c	getUp
	m	()I	d	getWidth
	m	()I	e	getHeight
	m	()I	f	getDepth
	f	Lgt;	a	frontTopLeft
	f	Lgz;	b	forwards
	f	Lgz;	c	up
	f	Lcom/google/common/cache/LoadingCache;	d	cache
	f	I	e	width
	f	I	f	height
	f	I	g	depth
c	dbw	net/minecraft/world/level/block/state/pattern/BlockPatternBuilder
	m	()Ldbw;	a	start
	m	(CLjava/util/function/Predicate;)Ldbw;	a	where
		p	1		key
		p	2		predicate
	m	(Ldbu;)Z	a	lambda$new$0
		p	0		pos
	m	([Ljava/lang/String;)Ldbw;	a	aisle
		p	1		pattern
	m	()Ldbv;	b	build
	m	()[[[Ljava/util/function/Predicate;	c	createPattern
	m	()V	d	ensureAllCharactersMatched
	f	Lcom/google/common/base/Joiner;	a	COMMA_JOINED
	f	Ljava/util/List;	b	pattern
	f	Ljava/util/Map;	c	lookup
	f	I	d	height
	f	I	e	width
c	dbx	net/minecraft/world/level/block/state/pattern/package-info
c	dby	net/minecraft/world/level/block/state/predicate/BlockMaterialPredicate
	m	(Ldwn;)V	<init>	<init>
		p	1		material
	m	(Ldbq;)Z	a	test
	m	(Ldwn;)Ldby;	a	forMaterial
		p	0		material
	f	Ldby;	a	AIR
	f	Ldwn;	b	material
c	dby$1	net/minecraft/world/level/block/state/predicate/BlockMaterialPredicate$1
	m	(Ldwn;)V	<init>	<init>
		p	1		material
	m	(Ldbq;)Z	a	test
c	dbz	net/minecraft/world/level/block/state/predicate/BlockPredicate
	m	(Lcpi;)V	<init>	<init>
		p	1		block
	m	(Lcpi;)Ldbz;	a	forBlock
		p	0		block
	m	(Ldbq;)Z	a	test
	f	Lcpi;	a	block
c	dca	net/minecraft/world/level/block/state/predicate/BlockStatePredicate
	m	(Ldbr;)V	<init>	<init>
		p	1		manager
	m	(Lcpi;)Ldca;	a	forBlock
		p	0		block
	m	(Ldbq;)Z	a	test
	m	(Ldbq;Ldcu;Ljava/util/function/Predicate;)Z	a	applies
		p	1		blockState
		p	2		property
		p	3		predicate
	m	(Ldcu;Ljava/util/function/Predicate;)Ldca;	a	where
		p	1		property
		p	2		predicate
	m	(Ldbq;)Z	b	lambda$static$0
		p	0		state
	f	Ljava/util/function/Predicate;	a	ANY
	f	Ldbr;	b	definition
	f	Ljava/util/Map;	c	properties
c	dcb	net/minecraft/world/level/block/state/predicate/package-info
c	dcc	net/minecraft/world/level/block/state/properties/AttachFace
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()[Ldcc;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Ldcc;	a	FLOOR
	f	Ldcc;	b	WALL
	f	Ldcc;	c	CEILING
	f	Ljava/lang/String;	d	name
	f	[Ldcc;	e	$VALUES
c	dcd	net/minecraft/world/level/block/state/properties/BambooLeaves
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()[Ldcd;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Ldcd;	a	NONE
	f	Ldcd;	b	SMALL
	f	Ldcd;	c	LARGE
	f	Ljava/lang/String;	d	name
	f	[Ldcd;	e	$VALUES
c	dce	net/minecraft/world/level/block/state/properties/BedPart
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()[Ldce;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Ldce;	a	HEAD
	f	Ldce;	b	FOOT
	f	Ljava/lang/String;	c	name
	f	[Ldce;	d	$VALUES
c	dcf	net/minecraft/world/level/block/state/properties/BellAttachType
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()[Ldcf;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Ldcf;	a	FLOOR
	f	Ldcf;	b	CEILING
	f	Ldcf;	c	SINGLE_WALL
	f	Ldcf;	d	DOUBLE_WALL
	f	Ljava/lang/String;	e	name
	f	[Ldcf;	f	$VALUES
c	dcg	net/minecraft/world/level/block/state/properties/BlockSetType
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		name
	m	()Ljava/util/stream/Stream;	a	values
	m	(Ldcg;)Ldcg;	a	register
		p	0		blockSetType
	m	()Ljava/lang/String;	b	name
	m	()Lcwq;	c	soundType
	m	()Lamq;	d	doorClose
	m	()Lamq;	e	doorOpen
	m	()Lamq;	f	trapdoorClose
	m	()Lamq;	g	trapdoorOpen
	m	()Lamq;	h	pressurePlateClickOff
	m	()Lamq;	i	pressurePlateClickOn
	m	()Lamq;	j	buttonClickOff
	m	()Lamq;	k	buttonClickOn
	f	Ldcg;	a	IRON
	f	Ldcg;	b	GOLD
	f	Ldcg;	c	STONE
	f	Ldcg;	d	POLISHED_BLACKSTONE
	f	Ldcg;	e	OAK
	f	Ldcg;	f	SPRUCE
	f	Ldcg;	g	BIRCH
	f	Ldcg;	h	ACACIA
	f	Ldcg;	i	CHERRY
	f	Ldcg;	j	JUNGLE
	f	Ldcg;	k	DARK_OAK
	f	Ldcg;	l	CRIMSON
	f	Ldcg;	m	WARPED
	f	Ldcg;	n	MANGROVE
	f	Ldcg;	o	BAMBOO
	f	Ljava/lang/String;	p	name
	f	Lcwq;	q	soundType
	f	Lamq;	r	doorClose
	f	Lamq;	s	doorOpen
	f	Lamq;	t	trapdoorClose
	f	Lamq;	u	trapdoorOpen
	f	Lamq;	v	pressurePlateClickOff
	f	Lamq;	w	pressurePlateClickOn
	f	Lamq;	x	buttonClickOff
	f	Lamq;	y	buttonClickOn
	f	Ljava/util/Set;	z	VALUES
c	dch	net/minecraft/world/level/block/state/properties/BlockStateProperties
	m	(Ldcv;)Z	a	lambda$static$1
		p	0		shape
	m	(Lgz;)Z	a	lambda$static$0
		p	0		facing
	f	Ldci;	A	TRIGGERED
	f	Ldci;	B	UNSTABLE
	f	Ldci;	C	WATERLOGGED
	f	Ldci;	D	BERRIES
	f	Ldci;	E	BLOOM
	f	Ldci;	F	SHRIEKING
	f	Ldci;	G	CAN_SUMMON
	f	Ldcp;	H	HORIZONTAL_AXIS
	f	Ldcp;	I	AXIS
	f	Ldci;	J	UP
	f	Ldci;	K	DOWN
	f	Ldci;	L	NORTH
	f	Ldci;	M	EAST
	f	Ldci;	N	SOUTH
	f	Ldci;	O	WEST
	f	Ldcl;	P	FACING
	f	Ldcl;	Q	FACING_HOPPER
	f	Ldcl;	R	HORIZONTAL_FACING
	f	Ldcr;	S	FLOWER_AMOUNT
	f	Ldcp;	T	ORIENTATION
	f	Ldcp;	U	ATTACH_FACE
	f	Ldcp;	V	BELL_ATTACHMENT
	f	Ldcp;	W	EAST_WALL
	f	Ldcp;	X	NORTH_WALL
	f	Ldcp;	Y	SOUTH_WALL
	f	Ldcp;	Z	WEST_WALL
	f	Ldcr;	aA	DELAY
	f	I	aB	MAX_DISTANCE
	f	Ldcr;	aC	DISTANCE
	f	Ldcr;	aD	EGGS
	f	Ldcr;	aE	HATCH
	f	Ldcr;	aF	LAYERS
	f	I	aG	MIN_LEVEL
	f	I	aH	MIN_LEVEL_CAULDRON
	f	I	aI	MAX_LEVEL_3
	f	I	aJ	MAX_LEVEL_8
	f	Ldcr;	aK	LEVEL_CAULDRON
	f	Ldcr;	aL	LEVEL_COMPOSTER
	f	Ldci;	a	ATTACHED
	f	Ldcr;	aM	LEVEL_FLOWING
	f	Ldcr;	aN	LEVEL_HONEY
	f	I	aO	MAX_LEVEL_15
	f	Ldcr;	aP	LEVEL
	f	Ldcr;	aQ	MOISTURE
	f	Ldcr;	aR	NOTE
	f	Ldcr;	aS	PICKLES
	f	Ldcr;	aT	POWER
	f	Ldcr;	aU	STAGE
	f	I	aV	STABILITY_MAX_DISTANCE
	f	Ldcr;	aW	STABILITY_DISTANCE
	f	I	aX	MIN_RESPAWN_ANCHOR_CHARGES
	f	I	aY	MAX_RESPAWN_ANCHOR_CHARGES
	f	Ldcr;	aZ	RESPAWN_ANCHOR_CHARGES
	f	Ldcp;	aa	EAST_REDSTONE
	f	Ldcp;	ab	NORTH_REDSTONE
	f	Ldcp;	ac	SOUTH_REDSTONE
	f	Ldcp;	ad	WEST_REDSTONE
	f	Ldcp;	ae	DOUBLE_BLOCK_HALF
	f	Ldcp;	af	HALF
	f	Ldcp;	ag	RAIL_SHAPE
	f	Ldcp;	ah	RAIL_SHAPE_STRAIGHT
	f	I	ai	MAX_AGE_1
	f	I	aj	MAX_AGE_2
	f	I	ak	MAX_AGE_3
	f	I	al	MAX_AGE_4
	f	I	am	MAX_AGE_5
	f	I	an	MAX_AGE_7
	f	I	ao	MAX_AGE_15
	f	I	ap	MAX_AGE_25
	f	Ldcr;	aq	AGE_1
	f	Ldcr;	ar	AGE_2
	f	Ldcr;	as	AGE_3
	f	Ldcr;	at	AGE_4
	f	Ldcr;	au	AGE_5
	f	Ldcr;	av	AGE_7
	f	Ldcr;	aw	AGE_15
	f	Ldcr;	ax	AGE_25
	f	Ldcr;	ay	BITES
	f	Ldcr;	az	CANDLES
	f	Ldci;	b	BOTTOM
	f	Ldcr;	ba	ROTATION_16
	f	Ldcp;	bb	BED_PART
	f	Ldcp;	bc	CHEST_TYPE
	f	Ldcp;	bd	MODE_COMPARATOR
	f	Ldcp;	be	DOOR_HINGE
	f	Ldcp;	bf	NOTEBLOCK_INSTRUMENT
	f	Ldcp;	bg	PISTON_TYPE
	f	Ldcp;	bh	SLAB_TYPE
	f	Ldcp;	bi	STAIRS_SHAPE
	f	Ldcp;	bj	STRUCTUREBLOCK_MODE
	f	Ldcp;	bk	BAMBOO_LEAVES
	f	Ldcp;	bl	TILT
	f	Ldcl;	bm	VERTICAL_DIRECTION
	f	Ldcp;	bn	DRIPSTONE_THICKNESS
	f	Ldcp;	bo	SCULK_SENSOR_PHASE
	f	Ldci;	bp	CHISELED_BOOKSHELF_SLOT_0_OCCUPIED
	f	Ldci;	bq	CHISELED_BOOKSHELF_SLOT_1_OCCUPIED
	f	Ldci;	br	CHISELED_BOOKSHELF_SLOT_2_OCCUPIED
	f	Ldci;	bs	CHISELED_BOOKSHELF_SLOT_3_OCCUPIED
	f	Ldci;	bt	CHISELED_BOOKSHELF_SLOT_4_OCCUPIED
	f	Ldci;	bu	CHISELED_BOOKSHELF_SLOT_5_OCCUPIED
	f	Ldcr;	bv	DUSTED
	f	Ldci;	c	CONDITIONAL
	f	Ldci;	d	DISARMED
	f	Ldci;	e	DRAG
	f	Ldci;	f	ENABLED
	f	Ldci;	g	EXTENDED
	f	Ldci;	h	EYE
	f	Ldci;	i	FALLING
	f	Ldci;	j	HANGING
	f	Ldci;	k	HAS_BOTTLE_0
	f	Ldci;	l	HAS_BOTTLE_1
	f	Ldci;	m	HAS_BOTTLE_2
	f	Ldci;	n	HAS_RECORD
	f	Ldci;	o	HAS_BOOK
	f	Ldci;	p	INVERTED
	f	Ldci;	q	IN_WALL
	f	Ldci;	r	LIT
	f	Ldci;	s	LOCKED
	f	Ldci;	t	OCCUPIED
	f	Ldci;	u	OPEN
	f	Ldci;	v	PERSISTENT
	f	Ldci;	w	POWERED
	f	Ldci;	x	SHORT
	f	Ldci;	y	SIGNAL_FIRE
	f	Ldci;	z	SNOWY
c	dci	net/minecraft/world/level/block/state/properties/BooleanProperty
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		name
	m	()Ljava/util/Collection;	a	getPossibleValues
	m	(Ljava/lang/Boolean;)Ljava/lang/String;	a	getName
		p	1		value
	m	(Ljava/lang/Comparable;)Ljava/lang/String;	a	getName
		p	1		value
	m	(Ljava/lang/String;)Ldci;	a	create
		p	0		name
	m	()I	b	generateHashCode
	m	(Ljava/lang/String;)Ljava/util/Optional;	b	getValue
		p	1		name
	f	Lcom/google/common/collect/ImmutableSet;	a	values
c	dcj	net/minecraft/world/level/block/state/properties/ChestType
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()Ldcj;	a	getOpposite
	m	()[Ldcj;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Ldcj;	a	SINGLE
	f	Ldcj;	b	LEFT
	f	Ldcj;	c	RIGHT
	f	Ljava/lang/String;	d	name
	f	[Ldcj;	e	$VALUES
c	dcj$1	net/minecraft/world/level/block/state/properties/ChestType$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$state$properties$ChestType
c	dck	net/minecraft/world/level/block/state/properties/ComparatorMode
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()[Ldck;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Ldck;	a	COMPARE
	f	Ldck;	b	SUBTRACT
	f	Ljava/lang/String;	c	name
	f	[Ldck;	d	$VALUES
c	dcl	net/minecraft/world/level/block/state/properties/DirectionProperty
	m	(Ljava/lang/String;Ljava/util/Collection;)V	<init>	<init>
		p	1		name
		p	2		values
	m	(Lgz;)Z	a	lambda$create$0
	m	(Ljava/lang/String;)Ldcl;	a	create
		p	0		name
	m	(Ljava/lang/String;Ljava/util/Collection;)Ldcl;	a	create
		p	0		name
		p	1		values
	m	(Ljava/lang/String;Ljava/util/function/Predicate;)Ldcl;	a	create
		p	0		name
		p	1		filter
	m	(Ljava/lang/String;[Lgz;)Ldcl;	a	create
		p	0		name
		p	1		values
c	dcm	net/minecraft/world/level/block/state/properties/DoorHingeSide
	m	()[Ldcm;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Ldcm;	a	LEFT
	f	Ldcm;	b	RIGHT
	f	[Ldcm;	c	$VALUES
c	dcn	net/minecraft/world/level/block/state/properties/DoubleBlockHalf
	m	()[Ldcn;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Ldcn;	a	UPPER
	f	Ldcn;	b	LOWER
	f	[Ldcn;	c	$VALUES
c	dco	net/minecraft/world/level/block/state/properties/DripstoneThickness
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()[Ldco;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Ldco;	a	TIP_MERGE
	f	Ldco;	b	TIP
	f	Ldco;	c	FRUSTUM
	f	Ldco;	d	MIDDLE
	f	Ldco;	e	BASE
	f	Ljava/lang/String;	f	name
	f	[Ldco;	g	$VALUES
c	dcp	net/minecraft/world/level/block/state/properties/EnumProperty
	m	(Ljava/lang/String;Ljava/lang/Class;Ljava/util/Collection;)V	<init>	<init>
		p	1		name
		p	2		type
		p	3		values
	m	()Ljava/util/Collection;	a	getPossibleValues
	m	(Ljava/lang/Comparable;)Ljava/lang/String;	a	getName
		p	1		value
	m	(Ljava/lang/Enum;)Ljava/lang/String;	a	getName
		p	1		value
	m	(Ljava/lang/String;Ljava/lang/Class;)Ldcp;	a	create
		p	0		name
		p	1		type
	m	(Ljava/lang/String;Ljava/lang/Class;Ljava/util/Collection;)Ldcp;	a	create
		p	0		name
		p	1		type
		p	2		values
	m	(Ljava/lang/String;Ljava/lang/Class;Ljava/util/function/Predicate;)Ldcp;	a	create
		p	0		name
		p	1		type
		p	2		filter
	m	(Ljava/lang/String;Ljava/lang/Class;[Ljava/lang/Enum;)Ldcp;	a	create
		p	0		name
		p	1		type
		p	2		values
	m	()I	b	generateHashCode
	m	(Ljava/lang/Enum;)Z	b	lambda$create$0
	m	(Ljava/lang/String;)Ljava/util/Optional;	b	getValue
		p	1		name
	f	Lcom/google/common/collect/ImmutableSet;	a	values
	f	Ljava/util/Map;	b	names
c	dcq	net/minecraft/world/level/block/state/properties/Half
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()[Ldcq;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Ldcq;	a	TOP
	f	Ldcq;	b	BOTTOM
	f	Ljava/lang/String;	c	name
	f	[Ldcq;	d	$VALUES
c	dcr	net/minecraft/world/level/block/state/properties/IntegerProperty
	m	(Ljava/lang/String;II)V	<init>	<init>
		p	1		name
		p	2		min
		p	3		max
	m	()Ljava/util/Collection;	a	getPossibleValues
	m	(Ljava/lang/Comparable;)Ljava/lang/String;	a	getName
		p	1		value
	m	(Ljava/lang/Integer;)Ljava/lang/String;	a	getName
		p	1		value
	m	(Ljava/lang/String;II)Ldcr;	a	create
		p	0		name
		p	1		min
		p	2		max
	m	()I	b	generateHashCode
	m	(Ljava/lang/String;)Ljava/util/Optional;	b	getValue
		p	1		name
	f	Lcom/google/common/collect/ImmutableSet;	a	values
	f	I	b	min
	f	I	c	max
c	dcs	net/minecraft/world/level/block/state/properties/NoteBlockInstrument
	m	(Ljava/lang/String;ILjava/lang/String;Lhd;Ldcs$a;)V	<init>	<init>
		p	3		name
		p	4		sound
		p	5		type
	m	()Lhd;	a	getSoundEvent
	m	(Ldbq;)Ljava/util/Optional;	a	byStateAbove
		p	0		state
	m	()Z	b	isTunable
	m	(Ldbq;)Ldcs;	b	byStateBelow
		p	0		state
	m	()Ljava/lang/String;	c	getSerializedName
	m	()Z	d	hasCustomSound
	m	()Z	e	requiresAirAbove
	m	()[Ldcs;	f	$values
	f	[Ldcs;	A	$VALUES
	f	Ldcs;	a	HARP
	f	Ldcs;	b	BASEDRUM
	f	Ldcs;	c	SNARE
	f	Ldcs;	d	HAT
	f	Ldcs;	e	BASS
	f	Ldcs;	f	FLUTE
	f	Ldcs;	g	BELL
	f	Ldcs;	h	GUITAR
	f	Ldcs;	i	CHIME
	f	Ldcs;	j	XYLOPHONE
	f	Ldcs;	k	IRON_XYLOPHONE
	f	Ldcs;	l	COW_BELL
	f	Ldcs;	m	DIDGERIDOO
	f	Ldcs;	n	BIT
	f	Ldcs;	o	BANJO
	f	Ldcs;	p	PLING
	f	Ldcs;	q	ZOMBIE
	f	Ldcs;	r	SKELETON
	f	Ldcs;	s	CREEPER
	f	Ldcs;	t	DRAGON
	f	Ldcs;	u	WITHER_SKELETON
	f	Ldcs;	v	PIGLIN
	f	Ldcs;	w	CUSTOM_HEAD
	f	Ljava/lang/String;	x	name
	f	Lhd;	y	soundEvent
	f	Ldcs$a;	z	type
c	dcs$a	net/minecraft/world/level/block/state/properties/NoteBlockInstrument$Type
	m	()[Ldcs$a;	a	$values
	f	Ldcs$a;	a	BASE_BLOCK
	f	Ldcs$a;	b	MOB_HEAD
	f	Ldcs$a;	c	CUSTOM
	f	[Ldcs$a;	d	$VALUES
c	dct	net/minecraft/world/level/block/state/properties/PistonType
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()[Ldct;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Ldct;	a	DEFAULT
	f	Ldct;	b	STICKY
	f	Ljava/lang/String;	c	name
	f	[Ldct;	d	$VALUES
c	dcu	net/minecraft/world/level/block/state/properties/Property
	m	(Ljava/lang/String;Ljava/lang/Class;)V	<init>	<init>
		p	1		name
		p	2		type
	m	()Ljava/util/Collection;	a	getPossibleValues
	m	(Lcom/mojang/serialization/DynamicOps;Ldbs;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	parseValue
		p	1		ops
		p	2		state
		p	3		input
	m	(Ldbs;)Ldcu$a;	a	value
		p	1		state
	m	(Ldbs;Ljava/lang/Comparable;)Ldbs;	a	lambda$parseValue$3
		p	2		property
	m	(Ljava/lang/Comparable;)Ljava/lang/String;	a	getName
		p	1		value
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	a	lambda$new$2
		p	1		value
	m	()I	b	generateHashCode
	m	(Ljava/lang/Comparable;)Ldcu$a;	b	value
		p	1		value
	m	(Ljava/lang/String;)Ljava/util/Optional;	b	getValue
		p	1		name
	m	()Ljava/util/stream/Stream;	c	getAllValues
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	c	lambda$new$1
	m	()Lcom/mojang/serialization/Codec;	d	codec
	m	(Ljava/lang/String;)Ljava/lang/String;	d	lambda$new$0
	m	()Lcom/mojang/serialization/Codec;	e	valueCodec
	m	()Ljava/lang/String;	f	getName
	m	()Ljava/lang/Class;	g	getValueClass
	f	Ljava/lang/Class;	a	clazz
	f	Ljava/lang/String;	b	name
	f	Ljava/lang/Integer;	c	hashCode
	f	Lcom/mojang/serialization/Codec;	d	codec
	f	Lcom/mojang/serialization/Codec;	e	valueCodec
c	dcu$a	net/minecraft/world/level/block/state/properties/Property$Value
	m	(Ldcu;Ljava/lang/Comparable;)V	<init>	<init>
		p	1		property
		p	2		value
	m	()Ldcu;	a	property
	m	()Ljava/lang/Comparable;	b	value
	f	Ldcu;	a	property
	f	Ljava/lang/Comparable;	b	value
c	dcv	net/minecraft/world/level/block/state/properties/RailShape
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()Ljava/lang/String;	a	getName
	m	()Z	b	isAscending
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Ldcv;	d	$values
	f	Ldcv;	a	NORTH_SOUTH
	f	Ldcv;	b	EAST_WEST
	f	Ldcv;	c	ASCENDING_EAST
	f	Ldcv;	d	ASCENDING_WEST
	f	Ldcv;	e	ASCENDING_NORTH
	f	Ldcv;	f	ASCENDING_SOUTH
	f	Ldcv;	g	SOUTH_EAST
	f	Ldcv;	h	SOUTH_WEST
	f	Ldcv;	i	NORTH_WEST
	f	Ldcv;	j	NORTH_EAST
	f	Ljava/lang/String;	k	name
	f	[Ldcv;	l	$VALUES
c	dcw	net/minecraft/world/level/block/state/properties/RedstoneSide
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()Z	a	isConnected
	m	()[Ldcw;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Ldcw;	a	UP
	f	Ldcw;	b	SIDE
	f	Ldcw;	c	NONE
	f	Ljava/lang/String;	d	name
	f	[Ldcw;	e	$VALUES
c	dcx	net/minecraft/world/level/block/state/properties/RotationSegment
	m	()I	a	getMaxSegmentIndex
	m	(F)I	a	convertToSegment
		p	0		yaw
	m	(I)Ljava/util/Optional;	a	convertToDirection
		p	0		rotation
	m	(Lgz;)I	a	convertToSegment
		p	0		direction
	m	(I)F	b	convertToDegrees
		p	0		rotation
	f	Lapq;	a	SEGMENTED_ANGLE16
	f	I	b	MAX_SEGMENT_INDEX
	f	I	c	NORTH_0
	f	I	d	EAST_90
	f	I	e	SOUTH_180
	f	I	f	WEST_270
c	dcy	net/minecraft/world/level/block/state/properties/SculkSensorPhase
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()[Ldcy;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Ldcy;	a	INACTIVE
	f	Ldcy;	b	ACTIVE
	f	Ldcy;	c	COOLDOWN
	f	Ljava/lang/String;	d	name
	f	[Ldcy;	e	$VALUES
c	dcz	net/minecraft/world/level/block/state/properties/SlabType
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()[Ldcz;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Ldcz;	a	TOP
	f	Ldcz;	b	BOTTOM
	f	Ldcz;	c	DOUBLE
	f	Ljava/lang/String;	d	name
	f	[Ldcz;	e	$VALUES
c	dda	net/minecraft/world/level/block/state/properties/StairsShape
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()[Ldda;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Ldda;	a	STRAIGHT
	f	Ldda;	b	INNER_LEFT
	f	Ldda;	c	INNER_RIGHT
	f	Ldda;	d	OUTER_LEFT
	f	Ldda;	e	OUTER_RIGHT
	f	Ljava/lang/String;	f	name
	f	[Ldda;	g	$VALUES
c	ddb	net/minecraft/world/level/block/state/properties/StructureMode
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()Ltj;	a	getDisplayName
	m	()[Lddb;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lddb;	a	SAVE
	f	Lddb;	b	LOAD
	f	Lddb;	c	CORNER
	f	Lddb;	d	DATA
	f	Ljava/lang/String;	e	name
	f	Ltj;	f	displayName
	f	[Lddb;	g	$VALUES
c	ddc	net/minecraft/world/level/block/state/properties/Tilt
	m	(Ljava/lang/String;ILjava/lang/String;Z)V	<init>	<init>
		p	3		name
		p	4		stable
	m	()Z	a	causesVibration
	m	()[Lddc;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lddc;	a	NONE
	f	Lddc;	b	UNSTABLE
	f	Lddc;	c	PARTIAL
	f	Lddc;	d	FULL
	f	Ljava/lang/String;	e	name
	f	Z	f	causesVibration
	f	[Lddc;	g	$VALUES
c	ddd	net/minecraft/world/level/block/state/properties/WallSide
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()[Lddd;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lddd;	a	NONE
	f	Lddd;	b	LOW
	f	Lddd;	c	TALL
	f	Ljava/lang/String;	d	name
	f	[Lddd;	e	$VALUES
c	dde	net/minecraft/world/level/block/state/properties/WoodType
	m	(Ljava/lang/String;Ldcg;)V	<init>	<init>
		p	1		name
		p	2		setType
	m	()Ljava/util/stream/Stream;	a	values
	m	(Ldde;)Ldde;	a	register
		p	0		type
	m	()Ljava/lang/String;	b	name
	m	()Ldcg;	c	setType
	m	()Lcwq;	d	soundType
	m	()Lcwq;	e	hangingSignSoundType
	m	()Lamq;	f	fenceGateClose
	m	()Lamq;	g	fenceGateOpen
	f	Ldde;	a	OAK
	f	Ldde;	b	SPRUCE
	f	Ldde;	c	BIRCH
	f	Ldde;	d	ACACIA
	f	Ldde;	e	CHERRY
	f	Ldde;	f	JUNGLE
	f	Ldde;	g	DARK_OAK
	f	Ldde;	h	CRIMSON
	f	Ldde;	i	WARPED
	f	Ldde;	j	MANGROVE
	f	Ldde;	k	BAMBOO
	f	Ljava/lang/String;	l	name
	f	Ldcg;	m	setType
	f	Lcwq;	n	soundType
	f	Lcwq;	o	hangingSignSoundType
	f	Lamq;	p	fenceGateClose
	f	Lamq;	q	fenceGateOpen
	f	Ljava/util/Set;	r	VALUES
c	ddf	net/minecraft/world/level/block/state/properties/package-info
c	ddg	net/minecraft/world/level/border/BorderChangeListener
	m	(Lddi;D)V	a	onBorderSizeSet
		p	1		border
		p	2		size
	m	(Lddi;DD)V	a	onBorderCenterSet
		p	1		border
		p	2		centerX
		p	4		centerZ
	m	(Lddi;DDJ)V	a	onBorderSizeLerping
		p	1		border
		p	2		fromSize
		p	4		toSize
		p	6		time
	m	(Lddi;I)V	a	onBorderSetWarningTime
		p	1		border
		p	2		warningTime
	m	(Lddi;D)V	b	onBorderSetDamagePerBlock
		p	1		border
		p	2		damagePerBlock
	m	(Lddi;I)V	b	onBorderSetWarningBlocks
		p	1		border
		p	2		warningBlockDistance
	m	(Lddi;D)V	c	onBorderSetDamageSafeZOne
		p	1		border
		p	2		safeZoneRadius
c	ddg$a	net/minecraft/world/level/border/BorderChangeListener$DelegateBorderChangeListener
	m	(Lddi;)V	<init>	<init>
		p	1		border
	m	(Lddi;D)V	a	onBorderSizeSet
		p	1		border
		p	2		size
	m	(Lddi;DD)V	a	onBorderCenterSet
		p	1		border
		p	2		centerX
		p	4		centerZ
	m	(Lddi;DDJ)V	a	onBorderSizeLerping
		p	1		border
		p	2		fromSize
		p	4		toSize
		p	6		time
	m	(Lddi;I)V	a	onBorderSetWarningTime
		p	1		border
		p	2		warningTime
	m	(Lddi;D)V	b	onBorderSetDamagePerBlock
		p	1		border
		p	2		damagePerBlock
	m	(Lddi;I)V	b	onBorderSetWarningBlocks
		p	1		border
		p	2		warningBlockDistance
	m	(Lddi;D)V	c	onBorderSetDamageSafeZOne
		p	1		border
		p	2		safeZoneRadius
	f	Lddi;	a	worldBorder
c	ddh	net/minecraft/world/level/border/BorderStatus
	m	(Ljava/lang/String;II)V	<init>	<init>
		p	3		color
	m	()I	a	getColor
	m	()[Lddh;	b	$values
	f	Lddh;	a	GROWING
	f	Lddh;	b	SHRINKING
	f	Lddh;	c	STATIONARY
	f	I	d	color
	f	[Lddh;	e	$VALUES
c	ddi	net/minecraft/world/level/border/WorldBorder
	m	()D	a	getCenterX
	m	(D)V	a	setSize
		p	1		size
	m	(DD)Z	a	isWithinBounds
		p	1		x
		p	3		z
	m	(DDD)Z	a	isWithinBounds
		p	1		x
		p	3		z
		p	5		margin
	m	(DDJ)V	a	lerpSizeBetween
		p	1		fromSize
		p	3		toSize
		p	5		time
	m	(I)V	a	setAbsoluteMaxSize
		p	1		maxRadius
	m	(Lbfh;)D	a	getDistanceToBorder
		p	1		entity
	m	(Lbfh;Lecz;)Z	a	isInsideCloseToBorder
		p	1		entity
		p	2		box
	m	(Lclp;)Z	a	isWithinBounds
		p	1		pos
	m	(Lddg;)V	a	addListener
		p	1		listener
	m	(Lddi$c;)V	a	applySettings
		p	1		properties
	m	(Lecz;)Z	a	isWithinBounds
		p	1		box
	m	(Lgt;)Z	a	isWithinBounds
		p	1		pos
	m	()D	b	getCenterZ
	m	(D)V	b	setDamageSafeZone
		p	1		safeZone
	m	(DD)D	b	getDistanceToBorder
		p	1		x
		p	3		z
	m	(DDD)Lgt;	b	clampToBounds
		p	1		x
		p	3		y
		p	5		z
	m	(I)V	b	setWarningTime
		p	1		warningTime
	m	(Lddg;)V	b	removeListener
		p	1		listener
	m	()Ledx;	c	getCollisionShape
	m	(D)V	c	setDamagePerBlock
		p	1		damagePerBlock
	m	(DD)V	c	setCenter
		p	1		x
		p	3		z
	m	(I)V	c	setWarningBlocks
		p	1		warningBlocks
	m	()Lddh;	d	getStatus
	m	()D	e	getMinX
	m	()D	f	getMinZ
	m	()D	g	getMaxX
	m	()D	h	getMaxZ
	m	()D	i	getSize
	m	()J	j	getLerpRemainingTime
	m	()D	k	getLerpTarget
	m	()Ljava/util/List;	l	getListeners
	m	()I	m	getAbsoluteMaxSize
	m	()D	n	getDamageSafeZone
	m	()D	o	getDamagePerBlock
	m	()D	p	getLerpSpeed
	m	()I	q	getWarningTime
	m	()I	r	getWarningBlocks
	m	()V	s	tick
	m	()Lddi$c;	t	createSettings
	f	Ljava/util/List;	a	listeners
	f	D	b	damagePerBlock
	f	D	c	MAX_SIZE
	f	D	d	MAX_CENTER_COORDINATE
	f	Lddi$c;	e	DEFAULT_SETTINGS
	f	D	f	damageSafeZone
	f	I	g	warningTime
	f	I	h	warningBlocks
	f	D	i	centerX
	f	D	j	centerZ
	f	I	k	absoluteMaxSize
	f	Lddi$a;	l	extent
c	ddi$a	net/minecraft/world/level/border/WorldBorder$BorderExtent
	m	()D	a	getMinX
	m	()D	b	getMaxX
	m	()D	c	getMinZ
	m	()D	d	getMaxZ
	m	()D	e	getSize
	m	()D	f	getLerpSpeed
	m	()J	g	getLerpRemainingTime
	m	()D	h	getLerpTarget
	m	()Lddh;	i	getStatus
	m	()V	j	onAbsoluteMaxSizeChange
	m	()V	k	onCenterChange
	m	()Lddi$a;	l	update
	m	()Ledx;	m	getCollisionShape
c	ddi$b	net/minecraft/world/level/border/WorldBorder$MovingBorderExtent
	m	(Lddi;DDJ)V	<init>	<init>
		p	2		oldSize
		p	4		newSize
		p	6		timeDuration
	m	()D	a	getMinX
	m	()D	b	getMaxX
	m	()D	c	getMinZ
	m	()D	d	getMaxZ
	m	()D	e	getSize
	m	()D	f	getLerpSpeed
	m	()J	g	getLerpRemainingTime
	m	()D	h	getLerpTarget
	m	()Lddh;	i	getStatus
	m	()V	j	onAbsoluteMaxSizeChange
	m	()V	k	onCenterChange
	m	()Lddi$a;	l	update
	m	()Ledx;	m	getCollisionShape
	f	Lddi;	a	this$0
	f	D	b	from
	f	D	c	to
	f	J	d	lerpEnd
	f	J	e	lerpBegin
	f	D	f	lerpDuration
c	ddi$c	net/minecraft/world/level/border/WorldBorder$Settings
	m	(DDDDIIDJD)V	<init>	<init>
		p	1		centerX
		p	3		centerZ
		p	5		damagePerBlock
		p	7		safeZone
		p	9		warningBlocks
		p	10		warningTime
		p	11		size
		p	13		sizeLerpTime
		p	15		sizeLerpTarget
	m	(Lddi;)V	<init>	<init>
		p	1		worldBorder
	m	()D	a	getCenterX
	m	(Lcom/mojang/serialization/DynamicLike;Lddi$c;)Lddi$c;	a	read
		p	0		dynamic
		p	1		properties
	m	(Lre;)V	a	write
		p	1		nbt
	m	()D	b	getCenterZ
	m	()D	c	getDamagePerBlock
	m	()D	d	getSafeZone
	m	()I	e	getWarningBlocks
	m	()I	f	getWarningTime
	m	()D	g	getSize
	m	()J	h	getSizeLerpTime
	m	()D	i	getSizeLerpTarget
	f	D	a	centerX
	f	D	b	centerZ
	f	D	c	damagePerBlock
	f	D	d	safeZone
	f	I	e	warningBlocks
	f	I	f	warningTime
	f	D	g	size
	f	J	h	sizeLerpTime
	f	D	i	sizeLerpTarget
c	ddi$d	net/minecraft/world/level/border/WorldBorder$StaticBorderExtent
	m	(Lddi;D)V	<init>	<init>
		p	2		size
	m	()D	a	getMinX
	m	()D	b	getMaxX
	m	()D	c	getMinZ
	m	()D	d	getMaxZ
	m	()D	e	getSize
	m	()D	f	getLerpSpeed
	m	()J	g	getLerpRemainingTime
	m	()D	h	getLerpTarget
	m	()Lddh;	i	getStatus
	m	()V	j	onAbsoluteMaxSizeChange
	m	()V	k	onCenterChange
	m	()Lddi$a;	l	update
	m	()Ledx;	m	getCollisionShape
	m	()V	n	updateBox
	f	Lddi;	a	this$0
	f	D	b	size
	f	D	c	minX
	f	D	d	minZ
	f	D	e	maxX
	f	D	f	maxZ
	f	Ledx;	g	shape
c	ddj	net/minecraft/world/level/border/package-info
c	ddk	net/minecraft/world/level/chunk/BlockColumn
	m	(I)Ldbq;	a	getBlock
		p	1		y
	m	(ILdbq;)V	a	setBlock
		p	1		y
		p	2		state
c	ddl	net/minecraft/world/level/chunk/BulkSectionAccess
	m	(Lcmj;)V	<init>	<init>
		p	1		world
	m	(Lgt;)Lddz;	a	getSection
		p	1		pos
	m	(Lgt;IJ)Lddz;	a	lambda$getSection$0
	m	(Lgt;)Ldbq;	b	getBlockState
		p	1		pos
	f	Lcmj;	a	level
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	b	acquiredSections
	f	Lddz;	c	lastSection
	f	J	d	lastSectionKey
c	ddm	net/minecraft/world/level/chunk/CarvingMask
	m	(II)V	<init>	<init>
		p	1		height
		p	2		bottomY
	m	([JI)V	<init>	<init>
		p	1		mask
		p	2		bottomY
	m	()[J	a	toArray
	m	(III)V	a	set
		p	1		offsetX
		p	2		y
		p	3		offsetZ
	m	(Lclp;)Ljava/util/stream/Stream;	a	stream
		p	1		chunkPos
	m	(Lclp;I)Lgt;	a	lambda$stream$1
		p	2		mask
	m	(Lddm$a;)V	a	setAdditionalMask
		p	1		maskPredicate
	m	(III)Z	b	get
		p	1		offsetX
		p	2		y
		p	3		offsetZ
	m	(III)I	c	getIndex
		p	1		offsetX
		p	2		y
		p	3		offsetZ
	m	(III)Z	d	lambda$new$0
		p	0		offsetX
		p	1		y
		p	2		offsetZ
	f	I	a	minY
	f	Ljava/util/BitSet;	b	mask
	f	Lddm$a;	c	additionalMask
c	ddm$a	net/minecraft/world/level/chunk/CarvingMask$Mask
	m	(III)Z	test	test
		p	1		offsetX
		p	2		y
		p	3		offsetZ
c	ddn	net/minecraft/world/level/chunk/ChunkAccess
	m	(Lclp;Ldek;Lcmk;Lhq;J[Lddz;Ldic;)V	<init>	<init>
		p	1		pos
		p	2		upgradeData
		p	3		heightLimitView
		p	4		biome
		p	5		inhabitedTime
		p	7		sectionArrayInitializer
		p	8		blendingData
	m	()Lddz;	a	getHighestSection
	m	(I)Ldgd;	a	getListenerRegistry
		p	1		ySectionCoord
	m	(II)Z	a	isYSpaceEmpty
		p	1		lowerHeight
		p	2		upperHeight
	m	(III)Ljava/lang/String;	a	lambda$getNoiseBiome$2
	m	(J)V	a	incrementInhabitedTime
		p	1		delta
	m	(Lbfh;)V	a	addEntity
		p	1		entity
	m	(Lcmk;Lhq;[Lddz;)V	a	replaceMissingSections
		p	0		world
		p	1		biome
		p	2		sectionArray
	m	(Lcni;Lcno$f;)V	a	fillBiomesFromNoise
		p	1		biomeSupplier
		p	2		sampler
	m	(Lcze;)V	a	setBlockEntity
		p	1		blockEntity
	m	(Ldgz$a;)Ldgz;	a	getOrCreateHeightmapUnprimed
		p	1		type
	m	(Ldgz$a;II)I	a	getHeight
		p	1		type
		p	2		x
		p	3		z
	m	(Ldgz$a;[J)V	a	setHeightmap
		p	1		type
		p	2		heightmap
	m	(Ldic;)V	a	setBlendingData
		p	1		blendingData
	m	(Ldrp;)Ldrx;	a	getStartForStructure
		p	1		structure
	m	(Ldrp;J)V	a	addReferenceForStructure
		p	1		structure
		p	2		reference
	m	(Ldrp;Ldrx;)V	a	setStartForStructure
		p	1		structure
		p	2		start
	m	(Lgt;Ldbq;Z)Ldbq;	a	setBlockState
		p	1		pos
		p	2		state
		p	3		moved
	m	(Ljava/util/Map;)V	a	setAllStarts
		p	1		structureStarts
	m	(Ljava/util/function/Function;)Ldhd;	a	getOrCreateNoiseChunk
		p	1		chunkNoiseSamplerCreator
	m	(Ljava/util/function/Supplier;)Lcng;	a	carverBiome
		p	1		generationSettingsCreator
	m	(Lre;)V	a	setBlockEntityNbt
		p	1		nbt
	m	(SI)V	a	addPackedPostProcess
		p	1		packedPos
		p	2		index
	m	(Z)V	a	setUnsaved
		p	1		needsSaving
	m	([Lit/unimi/dsi/fastutil/shorts/ShortList;I)Lit/unimi/dsi/fastutil/shorts/ShortList;	a	getOrCreateOffsetList
		p	0		lists
		p	1		index
	m	()I	b	getHighestSectionPosition
	m	(I)Lddz;	b	getSection
		p	1		yIndex
	m	(J)V	b	setInhabitedTime
		p	1		inhabitedTime
	m	(Ldgz$a;)Z	b	hasPrimedHeightmap
		p	1		type
	m	(Ldrp;)Lit/unimi/dsi/fastutil/longs/LongSet;	b	getReferencesForStructure
		p	1		structure
	m	(Ljava/util/Map;)V	b	setAllReferences
		p	1		structureReferences
	m	(Z)V	b	setLightCorrect
		p	1		lightOn
	m	()Ljava/util/Set;	c	getBlockEntitiesPos
	m	(Ldgz$a;)Ldgz;	c	lambda$getOrCreateHeightmapUnprimed$0
		p	1		type2
	m	(Ldrp;)Lit/unimi/dsi/fastutil/longs/LongSet;	c	lambda$addReferenceForStructure$1
		p	0		type2
	m	()[Lddz;	d	getSections
	m	(Lgt;)V	d	removeBlockEntity
		p	1		pos
	m	()Ljava/util/Collection;	e	getHeightmaps
	m	(Lgt;)V	e	markPosForPostprocessing
		p	1		pos
	m	()Lclp;	f	getPos
	m	(Lgt;)Lre;	f	getBlockEntityNbt
		p	1		pos
	m	()Ljava/util/Map;	g	getAllStarts
	m	(Lgt;)Lre;	g	getBlockEntityNbtForSaving
		p	1		pos
	m	(III)Lhd;	getNoiseBiome	getNoiseBiome
		p	1		biomeX
		p	2		biomeY
		p	3		biomeZ
	m	()Ljava/util/Map;	h	getAllReferences
	m	()Z	i	isUnsaved
	m	()Ldds;	j	getStatus
	m	()[Lit/unimi/dsi/fastutil/shorts/ShortList;	k	getPostProcessing
	m	()Ljava/util/stream/Stream;	n	getLights
	m	()Lees;	o	getBlockTicks
	m	()Lees;	p	getFluidTicks
	m	()Lddn$a;	q	getTicksForSerialization
	m	()Ldek;	r	getUpgradeData
	m	()Z	s	isOldNoiseGeneration
	m	()Ldic;	t	getBlendingData
	m	()J	u	getInhabitedTime
	m	()Z	v	isLightCorrect
	m	()I	v_	getMinBuildHeight
	m	()Z	w	hasAnyStructureReferences
	m	()I	w_	getHeight
	m	()Ldgn;	x	getBelowZeroRetrogen
	m	()Z	y	isUpgrading
	m	()Lcmk;	z	getHeightAccessorForGeneration
	f	[Lit/unimi/dsi/fastutil/shorts/ShortList;	a	postProcessing
	f	Z	b	unsaved
	f	Lclp;	c	chunkPos
	f	Ldhd;	d	noiseChunk
	f	Ldek;	e	upgradeData
	f	Ldic;	f	blendingData
	f	Ljava/util/Map;	g	heightmaps
	f	Ljava/util/Map;	h	pendingBlockEntities
	f	Ljava/util/Map;	i	blockEntities
	f	Lcmk;	j	levelHeightAccessor
	f	[Lddz;	k	sections
	f	Lorg/slf4j/Logger;	l	LOGGER
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	m	EMPTY_REFERENCE_SET
	f	Z	n	isLightCorrect
	f	J	o	inhabitedTime
	f	Lcng;	p	carverBiomeSettings
	f	Ljava/util/Map;	q	structureStarts
	f	Ljava/util/Map;	r	structuresRefences
c	ddn$a	net/minecraft/world/level/chunk/ChunkAccess$TicksToSave
	m	()Leeq;	a	blocks
	m	()Leeq;	b	fluids
	f	Leeq;	a	blocks
	f	Leeq;	b	fluids
c	ddo	net/minecraft/world/level/chunk/ChunkGenerator
	m	(Lcnj;)V	<init>	<init>
		p	1		biomeSource
	m	(Lcnj;Ljava/util/function/Function;)V	<init>	<init>
		p	1		biomeSource
		p	2		generationSettingsGetter
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(IILcmk;Ldhn;)Lcmu;	a	getBaseColumn
		p	1		x
		p	2		z
		p	3		world
		p	4		noiseConfig
	m	(IILdgz$a;Lcmk;Ldhn;)I	a	getBaseHeight
		p	1		x
		p	2		z
		p	3		heightmap
		p	4		world
		p	5		noiseConfig
	m	(Laip;Lhh;Lgt;IZ)Lcom/mojang/datafixers/util/Pair;	a	findNearestMapStructure
		p	1		world
		p	2		structures
		p	3		center
		p	4		radius
		p	5		skipReferencedStructures
	m	(Laiw;)V	a	spawnOriginalMobs
		p	1		region
	m	(Laiw;JLdhn;Lcnh;Lcmz;Lddn;Ldgv$a;)V	a	applyCarvers
		p	1		chunkRegion
		p	2		seed
		p	4		noiseConfig
		p	5		biomeAccess
		p	6		structureAccessor
		p	7		chunk
		p	8		carverStep
	m	(Laiw;Lcmz;Ldhn;Lddn;)V	a	buildSurface
		p	1		region
		p	2		structures
		p	3		noiseConfig
		p	4		chunk
	m	(Lcmk;)I	a	getSpawnHeight
		p	1		world
	m	(Lcmz;Lddn;Lhw;Ldrp;)I	a	fetchReferences
		p	0		structureAccessor
		p	1		chunk
		p	2		sectionPos
		p	3		structure
	m	(Lcmz;Ldrx;)Z	a	tryAddReference
		p	0		structureAccessor
		p	1		start
	m	(Lcmz;Lgt;Ldrx;)Z	a	lambda$getMobsAt$11
		p	2		start
	m	(Lcmz;Lhw;Lddn;Lddp;Lclp;Lhr;Ldhn;Ldvi;Lhd;)V	a	lambda$createStructures$14
		p	9		structureSet
	m	(Lcnb;Lcmz;Lddn;)V	a	createReferences
		p	1		world
		p	2		structureAccessor
		p	3		chunk
	m	(Lcnb;Lcmz;Ldhy;Lddn;Lclp;Ldrx;)V	a	lambda$applyBiomeDecoration$8
		p	6		start
	m	(Lcnb;Lddn;Lcmz;)V	a	applyBiomeDecoration
		p	1		world
		p	2		chunk
		p	3		structureAccessor
	m	(Lcnb;Ljava/util/Set;Lclp;)V	a	lambda$applyBiomeDecoration$6
		p	0		pos
	m	(Lcnj;Ljava/util/function/Function;)Ljava/util/List;	a	lambda$new$2
	m	(Lddn;)Ldrh;	a	getWritableArea
		p	0		chunk
	m	(Lddn;Ldhn;)Lddn;	a	lambda$createBiomes$3
	m	(Ldrp;)Ljava/lang/Integer;	a	lambda$applyBiomeDecoration$5
		p	0		structureType
	m	(Ldrv$a;Lcmz;Lhr;Ldhn;Ldvi;JLddn;Lclp;Lhw;)Z	a	tryGenerateStructure
		p	1		weightedEntry
		p	2		structureAccessor
		p	3		dynamicRegistryManager
		p	4		noiseConfig
		p	5		structureManager
		p	6		seed
		p	8		chunk
		p	9		pos
		p	10		sectionPos
	m	(Ldrx;)Ljava/lang/String;	a	lambda$createReferences$18
	m	(Ldrx;Lhq;)Ljava/lang/String;	a	lambda$createReferences$15
		p	1		structureTypeRegistry
	m	(Ldsm;)Ljava/util/Set;	a	lambda$findNearestMapStructure$4
		p	0		placement
	m	(Lgt;Ldrx;)Z	a	lambda$getMobsAt$12
		p	1		start
	m	(Lhd;)Lcng;	a	getBiomeGenerationSettings
		p	1		biomeEntry
	m	(Lhd;Lcmz;Lbga;Lgt;)Lbcm;	a	getMobsAt
		p	1		biome
		p	2		accessor
		p	3		group
		p	4		pos
	m	(Lhf;Ldhn;J)Lddp;	a	createState
		p	1		structureSetRegistry
		p	2		noiseConfig
		p	3		seed
	m	(Lhq;Ldqt;)Ljava/lang/String;	a	lambda$applyBiomeDecoration$10
	m	(Lhq;Ldrp;)Ljava/lang/String;	a	lambda$applyBiomeDecoration$7
	m	(Lhr;Lddp;Lcmz;Lddn;Ldvi;)V	a	createStructures
		p	1		registryManager
		p	2		placementCalculator
		p	3		structureAccessor
		p	4		chunk
		p	5		structureTemplateManager
	m	(Lit/unimi/dsi/fastutil/ints/IntSet;Lcnp$b;Ldqt;)V	a	lambda$applyBiomeDecoration$9
		p	0		feature
	m	(Ljava/util/List;Ldhn;Lgt;)V	a	addDebugScreenInfo
		p	1		text
		p	2		noiseConfig
		p	3		pos
	m	(Ljava/util/Optional;Ldrx;)Ljava/lang/String;	a	lambda$createReferences$16
	m	(Ljava/util/Set;Laip;Lcmz;Lgt;ZLdsj;)Lcom/mojang/datafixers/util/Pair;	a	getNearestGeneratedStructure
		p	1		structures
		p	2		world
		p	3		structureAccessor
		p	4		center
		p	5		skipReferencedStructures
		p	6		placement
	m	(Ljava/util/Set;Lcml;Lcmz;IIIZJLdsk;)Lcom/mojang/datafixers/util/Pair;	a	getNearestGeneratedStructure
		p	0		structures
		p	1		world
		p	2		structureAccessor
		p	3		centerChunkX
		p	4		centerChunkZ
		p	5		radius
		p	6		skipReferencedStructures
		p	7		seed
		p	9		placement
	m	(Ljava/util/Set;Lcml;Lcmz;ZLdsm;Lclp;)Lcom/mojang/datafixers/util/Pair;	a	getStructureGeneratingAt
		p	0		structures
		p	1		world
		p	2		structureAccessor
		p	3		skipReferencedStructures
		p	4		placement
		p	5		pos
	m	(Ljava/util/concurrent/Executor;Ldhn;Ldib;Lcmz;Lddn;)Ljava/util/concurrent/CompletableFuture;	a	createBiomes
		p	1		executor
		p	2		noiseConfig
		p	3		blender
		p	4		structureAccessor
		p	5		chunk
	m	(Ljava/util/concurrent/Executor;Ldib;Ldhn;Lcmz;Lddn;)Ljava/util/concurrent/CompletableFuture;	a	fillFromNoise
		p	1		executor
		p	2		blender
		p	3		noiseConfig
		p	4		structureAccessor
		p	5		chunk
	m	(Ljava/util/function/Function;Lhd;)Ljava/util/List;	a	lambda$new$1
		p	1		biomeEntry
	m	(Lorg/apache/commons/lang3/mutable/MutableBoolean;Ljava/util/function/Predicate;Ldrx;)V	a	lambda$getMobsAt$13
		p	2		start
	m	()Ljava/util/Optional;	b	getTypeNameForDataFixer
	m	(IILdgz$a;Lcmk;Ldhn;)I	b	getFirstFreeHeight
		p	1		x
		p	2		z
		p	3		heightmap
		p	4		world
		p	5		noiseConfig
	m	(Ldrx;)Ljava/lang/String;	b	lambda$createReferences$17
	m	(Lhd;)Lcng;	b	lambda$new$0
		p	0		biomeEntry
	m	()Lcnj;	c	getBiomeSource
	m	(IILdgz$a;Lcmk;Ldhn;)I	c	getFirstOccupiedHeight
		p	1		x
		p	2		z
		p	3		heightmap
		p	4		world
		p	5		noiseConfig
	m	()I	d	getGenDepth
	m	()I	e	getSeaLevel
	m	()I	f	getMinY
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcnj;	b	biomeSource
	f	Ljava/util/function/Supplier;	c	featuresPerStep
	f	Ljava/util/function/Function;	d	generationSettingsGetter
c	ddp	net/minecraft/world/level/chunk/ChunkGeneratorStructureState
	m	(Ldhn;Lcnj;JJLjava/util/List;)V	<init>	<init>
		p	1		noiseConfig
		p	2		biomeSource
		p	3		structureSeed
		p	5		concentricRingSeed
		p	7		structureSets
	m	()Ljava/util/List;	a	possibleStructureSets
	m	(IILhh;Lapo;)Lclp;	a	lambda$generateRingPositions$5
	m	(Lcnj;Lhd$c;)Z	a	lambda$createForNormal$1
		p	1		structureSet
	m	(Lcnj;Lhd;)Z	a	lambda$createForFlat$0
		p	1		structureSet
	m	(Lcom/google/common/base/Stopwatch;Lhd;Ljava/util/List;)Ljava/util/List;	a	lambda$generateRingPositions$6
		p	2		positions
	m	(Ldhn;JLcnj;Lhf;)Lddp;	a	createForNormal
		p	0		noiseConfig
		p	1		seed
		p	3		biomeSource
		p	4		structureSetRegistry
	m	(Ldhn;JLcnj;Ljava/util/stream/Stream;)Lddp;	a	createForFlat
		p	0		noiseConfig
		p	1		seed
		p	3		biomeSource
		p	4		structureSets
	m	(Ldrp;)Ljava/util/List;	a	lambda$generatePositions$3
		p	0		structure
	m	(Ldrv$a;)Ljava/util/stream/Stream;	a	lambda$hasBiomesForStructureSet$2
		p	0		structure
	m	(Ldrv;Lcnj;)Z	a	hasBiomesForStructureSet
		p	0		structureSet
		p	1		biomeSource
	m	(Ldsj;)Ljava/util/List;	a	getRingPositionsFor
		p	1		placement
	m	(Lhd;)Ljava/util/List;	a	getPlacementsForStructure
		p	1		structureEntry
	m	(Lhd;III)Z	a	hasStructureChunkInRange
		p	1		structureSetEntry
		p	2		centerChunkX
		p	3		centerChunkZ
		p	4		chunkCount
	m	(Lhd;Ldsj;)Ljava/util/concurrent/CompletableFuture;	a	generateRingPositions
		p	1		structureSetEntry
		p	2		placement
	m	(Ljava/util/Set;Lhd;)V	a	lambda$generatePositions$4
		p	2		structureSet
	m	()V	b	ensureStructuresGenerated
	m	()Ldhn;	c	randomState
	m	()J	d	getLevelSeed
	m	()V	e	generatePositions
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ldhn;	b	randomState
	f	Lcnj;	c	biomeSource
	f	J	d	levelSeed
	f	J	e	concentricRingsSeed
	f	Ljava/util/Map;	f	placementsForStructure
	f	Ljava/util/Map;	g	ringPositions
	f	Z	h	hasGeneratedPositions
	f	Ljava/util/List;	i	possibleStructureSets
c	ddq	net/minecraft/world/level/chunk/ChunkGenerators
	m	(Lhq;)Lcom/mojang/serialization/Codec;	a	bootstrap
		p	0		registry
c	ddr	net/minecraft/world/level/chunk/ChunkSource
	m	(II)Lddy;	a	getChunkNow
		p	1		chunkX
		p	2		chunkZ
	m	(IILdds;Z)Lddn;	a	getChunk
		p	1		x
		p	2		z
		p	3		leastStatus
		p	4		create
	m	(IIZ)Lddy;	a	getChunk
		p	1		chunkX
		p	2		chunkZ
		p	3		create
	m	(Lclp;Z)V	a	updateChunkForced
		p	1		pos
		p	2		forced
	m	(Ljava/util/function/BooleanSupplier;Z)V	a	tick
		p	1		shouldKeepTicking
		p	2		tickChunks
	m	(ZZ)V	a	setSpawnSettings
		p	1		spawnMonsters
		p	2		spawnAnimals
	m	(II)Z	b	hasChunk
		p	1		x
		p	2		z
	m	(II)Lclo;	c	getChunkForLighting
		p	1		chunkX
		p	2		chunkZ
	m	()Ljava/lang/String;	e	gatherStats
	m	()I	j	getLoadedChunksCount
	m	()Ldwa;	p	getLightEngine
c	dds	net/minecraft/world/level/chunk/ChunkStatus
	m	(Ljava/lang/String;Ldds;ILjava/util/EnumSet;Ldds$a;Ldds$b;Ldds$c;)V	<init>	<init>
		p	1		id
		p	2		previous
		p	3		taskMargin
		p	4		heightMapTypes
		p	5		chunkType
		p	6		generationTask
		p	7		loadTask
	m	()Ljava/util/List;	a	getStatusList
	m	(I)Ldds;	a	getStatusAroundFullChunk
		p	0		level
	m	(Laip;Ldvi;Lais;Ljava/util/function/Function;Lddn;)Ljava/util/concurrent/CompletableFuture;	a	load
		p	1		world
		p	2		structureTemplateManager
		p	3		lightingProvider
		p	4		fullChunkConverter
		p	5		chunk
	m	(Lbax;Lcom/mojang/datafixers/util/Either;)Lcom/mojang/datafixers/util/Either;	a	lambda$generate$21
		p	1		either
	m	(Ldds;)I	a	getDistance
		p	0		status
	m	(Ldds;Laip;Lddo;Ljava/util/List;Lddn;)V	a	lambda$static$17
		p	0		targetStatus
		p	1		world
		p	2		generator
		p	3		chunks
		p	4		chunk
	m	(Ldds;Laip;Ldvi;Lais;Ljava/util/function/Function;Lddn;)Ljava/util/concurrent/CompletableFuture;	a	lambda$static$19
		p	0		targetStatus
		p	1		world
		p	2		structureTemplateManager
		p	3		lightingProvider
		p	4		fullChunkConverter
		p	5		chunk
	m	(Ldds;Lais;Lddn;)Ljava/util/concurrent/CompletableFuture;	a	lightChunk
		p	0		status
		p	1		lightingProvider
		p	2		chunk
	m	(Ldds;Lddn;)Z	a	isLighted
		p	0		status
		p	1		chunk
	m	(Ldds;Ljava/util/concurrent/Executor;Laip;Lddo;Ldvi;Lais;Ljava/util/function/Function;Ljava/util/List;Lddn;Z)Ljava/util/concurrent/CompletableFuture;	a	lambda$static$18
		p	0		targetStatus
		p	1		executor
		p	2		world
		p	3		generator
		p	4		structureTemplateManager
		p	5		lightingProvider
		p	6		fullChunkConverter
		p	7		chunks
		p	8		chunk
		p	9		regenerate
	m	(Lit/unimi/dsi/fastutil/ints/IntArrayList;)V	a	lambda$static$20
		p	0		statusToDistance
	m	(Ljava/lang/String;)Ldds;	a	byName
		p	0		id
	m	(Ljava/lang/String;Ldds;ILjava/util/EnumSet;Ldds$a;Ldds$b;)Ldds;	a	register
		p	0		id
		p	1		previous
		p	2		taskMargin
		p	3		heightMapTypes
		p	4		chunkType
		p	5		task
	m	(Ljava/lang/String;Ldds;ILjava/util/EnumSet;Ldds$a;Ldds$b;Ldds$c;)Ldds;	a	register
		p	0		id
		p	1		previous
		p	2		taskMargin
		p	3		heightMapTypes
		p	4		chunkType
		p	5		task
		p	6		loadTask
	m	(Ljava/lang/String;Ldds;ILjava/util/EnumSet;Ldds$a;Ldds$d;)Ldds;	a	registerSimple
		p	0		id
		p	1		previous
		p	2		taskMargin
		p	3		heightMapTypes
		p	4		chunkType
		p	5		task
	m	(Ljava/util/concurrent/Executor;Laip;Lddo;Ldvi;Lais;Ljava/util/function/Function;Ljava/util/List;Z)Ljava/util/concurrent/CompletableFuture;	a	generate
		p	1		executor
		p	2		world
		p	3		generator
		p	4		structureTemplateManager
		p	5		lightingProvider
		p	6		fullChunkConverter
		p	7		chunks
		p	8		regenerate
	m	()I	b	maxDistance
	m	(Ldds;)Z	b	isOrAfter
		p	1		chunkStatus
	m	(Ldds;Laip;Lddo;Ljava/util/List;Lddn;)V	b	lambda$static$16
		p	0		targetStatus
		p	1		world
		p	2		generator
		p	3		chunks
		p	4		chunk
	m	(Ldds;Laip;Ldvi;Lais;Ljava/util/function/Function;Lddn;)Ljava/util/concurrent/CompletableFuture;	b	lambda$static$15
		p	0		targetStatus
		p	1		world
		p	2		structureTemplateManager
		p	3		lightingProvider
		p	4		fullChunkConverter
		p	5		chunk
	m	(Ldds;Lddn;)Lcom/mojang/datafixers/util/Either;	b	lambda$static$7
		p	1		chunk
	m	(Ldds;Ljava/util/concurrent/Executor;Laip;Lddo;Ldvi;Lais;Ljava/util/function/Function;Ljava/util/List;Lddn;Z)Ljava/util/concurrent/CompletableFuture;	b	lambda$static$14
		p	0		targetStatus
		p	1		executor
		p	2		world
		p	3		generator
		p	4		structureTemplateManager
		p	5		lightingProvider
		p	6		fullChunkConverter
		p	7		chunks
		p	8		chunk
		p	9		regenerate
	m	()I	c	getIndex
	m	(Ldds;Laip;Lddo;Ljava/util/List;Lddn;)V	c	lambda$static$11
		p	0		targetStatus
		p	1		world
		p	2		generator
		p	3		chunks
		p	4		chunk
	m	(Ldds;Laip;Ldvi;Lais;Ljava/util/function/Function;Lddn;)Ljava/util/concurrent/CompletableFuture;	c	lambda$static$13
		p	0		status
		p	1		world
		p	2		structureTemplateManager
		p	3		lightingProvider
		p	4		fullChunkConverter
		p	5		chunk
	m	(Ldds;Lddn;)Lcom/mojang/datafixers/util/Either;	c	lambda$static$5
		p	1		chunk
	m	(Ldds;Ljava/util/concurrent/Executor;Laip;Lddo;Ldvi;Lais;Ljava/util/function/Function;Ljava/util/List;Lddn;Z)Ljava/util/concurrent/CompletableFuture;	c	lambda$static$12
		p	0		targetStatus
		p	1		executor
		p	2		world
		p	3		generator
		p	4		structureTemplateManager
		p	5		lightingProvider
		p	6		fullChunkConverter
		p	7		chunks
		p	8		chunk
		p	9		regenerate
	m	()Ljava/lang/String;	d	getName
	m	(Ldds;Laip;Lddo;Ljava/util/List;Lddn;)V	d	lambda$static$10
		p	0		targetStatus
		p	1		world
		p	2		generator
		p	3		chunks
		p	4		chunk
	m	(Ldds;Laip;Ldvi;Lais;Ljava/util/function/Function;Lddn;)Ljava/util/concurrent/CompletableFuture;	d	lambda$static$3
		p	0		targetStatus
		p	1		world
		p	2		structureTemplateManager
		p	3		lightingProvider
		p	4		fullChunkConverter
		p	5		chunk
	m	(Ldds;Ljava/util/concurrent/Executor;Laip;Lddo;Ldvi;Lais;Ljava/util/function/Function;Ljava/util/List;Lddn;Z)Ljava/util/concurrent/CompletableFuture;	d	lambda$static$8
		p	0		targetStatus
		p	1		executor
		p	2		world
		p	3		generator
		p	4		structureTemplateManager
		p	5		lightingProvider
		p	6		fullChunkConverter
		p	7		chunks
		p	8		chunk
		p	9		regenerate
	m	()Ldds;	e	getParent
	m	(Ldds;Laip;Lddo;Ljava/util/List;Lddn;)V	e	lambda$static$9
		p	0		targetStatus
		p	1		world
		p	2		generator
		p	3		chunks
		p	4		chunk
	m	(Ldds;Laip;Ldvi;Lais;Ljava/util/function/Function;Lddn;)Ljava/util/concurrent/CompletableFuture;	e	lambda$static$0
		p	0		targetStatus
		p	1		world
		p	2		structureTemplateManager
		p	3		lightingProvider
		p	4		fullChunkConverter
		p	5		chunk
	m	(Ldds;Ljava/util/concurrent/Executor;Laip;Lddo;Ldvi;Lais;Ljava/util/function/Function;Ljava/util/List;Lddn;Z)Ljava/util/concurrent/CompletableFuture;	e	lambda$static$6
		p	0		targetStatus
		p	1		executor
		p	2		world
		p	3		generator
		p	4		structureTemplateManager
		p	5		lightingProvider
		p	6		fullChunkConverter
		p	7		chunks
		p	8		chunk
		p	9		regenerate
	m	()I	f	getRange
	m	(Ldds;Laip;Lddo;Ljava/util/List;Lddn;)V	f	lambda$static$4
		p	0		targetStatus
		p	1		world
		p	2		generator
		p	3		chunks
		p	4		chunk
	m	(Ldds;Ljava/util/concurrent/Executor;Laip;Lddo;Ldvi;Lais;Ljava/util/function/Function;Ljava/util/List;Lddn;Z)Ljava/util/concurrent/CompletableFuture;	f	lambda$static$2
		p	0		targetStatus
		p	1		executor
		p	2		world
		p	3		generator
		p	4		structureTemplateManager
		p	5		lightingProvider
		p	6		fullChunkConverter
		p	7		chunks
		p	8		chunk
		p	9		regenerate
	m	()Ldds$a;	g	getChunkType
	m	(Ldds;Laip;Lddo;Ljava/util/List;Lddn;)V	g	lambda$static$1
		p	0		targetStatus
		p	1		world
		p	2		generator
		p	3		chunks
		p	4		chunk
	m	()Ljava/util/EnumSet;	h	heightmapsAfter
	f	Ljava/util/EnumSet;	A	heightmapsAfter
	f	I	a	MAX_STRUCTURE_DISTANCE
	f	Ljava/util/EnumSet;	b	POST_FEATURES
	f	Ldds;	c	EMPTY
	f	Ldds;	d	STRUCTURE_STARTS
	f	Ldds;	e	STRUCTURE_REFERENCES
	f	Ldds;	f	BIOMES
	f	Ldds;	g	NOISE
	f	Ldds;	h	SURFACE
	f	Ldds;	i	CARVERS
	f	Ldds;	j	LIQUID_CARVERS
	f	Ldds;	k	FEATURES
	f	Ldds;	l	LIGHT
	f	Ldds;	m	SPAWN
	f	Ldds;	n	HEIGHTMAPS
	f	Ldds;	o	FULL
	f	Ljava/util/EnumSet;	p	PRE_FEATURES
	f	Ldds$c;	q	PASSTHROUGH_LOAD_TASK
	f	Ljava/util/List;	r	STATUS_BY_RANGE
	f	Lit/unimi/dsi/fastutil/ints/IntList;	s	RANGE_BY_STATUS
	f	Ljava/lang/String;	t	name
	f	I	u	index
	f	Ldds;	v	parent
	f	Ldds$b;	w	generationTask
	f	Ldds$c;	x	loadingTask
	f	I	y	range
	f	Ldds$a;	z	chunkType
c	dds$a	net/minecraft/world/level/chunk/ChunkStatus$ChunkType
	m	()[Ldds$a;	a	$values
	f	Ldds$a;	a	PROTOCHUNK
	f	Ldds$a;	b	LEVELCHUNK
	f	[Ldds$a;	c	$VALUES
c	dds$b	net/minecraft/world/level/chunk/ChunkStatus$GenerationTask
	m	(Ldds;Ljava/util/concurrent/Executor;Laip;Lddo;Ldvi;Lais;Ljava/util/function/Function;Ljava/util/List;Lddn;Z)Ljava/util/concurrent/CompletableFuture;	doWork	doWork
		p	1		targetStatus
		p	2		executor
		p	3		world
		p	4		generator
		p	5		structureTemplateManager
		p	6		lightingProvider
		p	7		fullChunkConverter
		p	8		chunks
		p	9		chunk
		p	10		regenerate
c	dds$c	net/minecraft/world/level/chunk/ChunkStatus$LoadingTask
	m	(Ldds;Laip;Ldvi;Lais;Ljava/util/function/Function;Lddn;)Ljava/util/concurrent/CompletableFuture;	doWork	doWork
		p	1		targetStatus
		p	2		world
		p	3		structureTemplateManager
		p	4		lightingProvider
		p	5		fullChunkConverter
		p	6		chunk
c	dds$d	net/minecraft/world/level/chunk/ChunkStatus$SimpleGenerationTask
	m	(Ldds;Laip;Lddo;Ljava/util/List;Lddn;)V	doWork	doWork
		p	1		targetStatus
		p	2		world
		p	3		chunkGenerator
		p	4		chunks
		p	5		chunk
	m	(Ldds;Ljava/util/concurrent/Executor;Laip;Lddo;Ldvi;Lais;Ljava/util/function/Function;Ljava/util/List;Lddn;Z)Ljava/util/concurrent/CompletableFuture;	doWork	doWork
		p	1		targetStatus
		p	2		executor
		p	3		world
		p	4		generator
		p	5		structureTemplateManager
		p	6		lightingProvider
		p	7		fullChunkConverter
		p	8		chunks
		p	9		chunk
		p	10		regenerate
c	ddt	net/minecraft/world/level/chunk/DataLayer
	m	(I)V	<init>	<init>
		p	1		size
	m	([B)V	<init>	<init>
		p	1		bytes
	m	()[B	a	getData
	m	(I)Ljava/lang/String;	a	layerToString
		p	1		unused
	m	(II)V	a	set
		p	1		index
		p	2		value
	m	(III)I	a	get
		p	1		x
		p	2		y
		p	3		z
	m	(IIII)V	a	set
		p	1		x
		p	2		y
		p	3		z
		p	4		value
	m	()Lddt;	b	copy
	m	(I)I	b	get
		p	1		index
	m	(III)I	b	getIndex
		p	0		x
		p	1		y
		p	2		z
	m	()Z	c	isEmpty
	m	(I)I	c	getNibbleIndex
		p	0		i
	m	(I)I	d	getByteIndex
		p	0		i
	f	I	a	LAYER_COUNT
	f	I	b	LAYER_SIZE
	f	I	c	SIZE
	f	[B	d	data
	f	I	e	NIBBLE_SIZE
c	ddu	net/minecraft/world/level/chunk/EmptyLevelChunk
	m	(Lcmi;Lclp;Lhd;)V	<init>	<init>
		p	1		world
		p	2		pos
		p	3		biomeEntry
	m	()Z	A	isEmpty
	m	()Laib$c;	B	getFullStatus
	m	(II)Z	a	isYSpaceEmpty
		p	1		lowerHeight
		p	2		upperHeight
	m	(Lcze;)V	a	setBlockEntity
		p	1		blockEntity
	m	(Lgt;Ldbq;Z)Ldbq;	a	setBlockState
		p	1		pos
		p	2		state
		p	3		moved
	m	(Lgt;Lddy$b;)Lcze;	a	getBlockEntity
		p	1		pos
		p	2		creationType
	m	(Lgt;)Ldbq;	a_	getBlockState
		p	1		pos
	m	(Lcze;)V	b	addAndRegisterBlockEntity
		p	1		blockEntity
	m	(Lgt;)Ldwj;	b_	getFluidState
		p	1		pos
	m	(Lgt;)V	d	removeBlockEntity
		p	1		pos
	m	(III)Lhd;	getNoiseBiome	getNoiseBiome
		p	1		biomeX
		p	2		biomeY
		p	3		biomeZ
	m	(Lgt;)I	h	getLightEmission
		p	1		pos
	f	Lhd;	l	biome
c	ddv	net/minecraft/world/level/chunk/GlobalPalette
	m	(Lhi;)V	<init>	<init>
		p	1		idList
	m	()I	a	getSerializedSize
	m	(I)Ljava/lang/Object;	a	valueFor
		p	1		id
	m	(ILhi;Ldee;Ljava/util/List;)Lded;	a	create
		p	0		bits
		p	1		idList
		p	2		listener
	m	(Ljava/lang/Object;)I	a	idFor
		p	1		object
	m	(Ljava/util/function/Predicate;)Z	a	maybeHas
		p	1		predicate
	m	(Lss;)V	a	read
		p	1		buf
	m	()I	b	getSize
	m	(Lss;)V	b	write
		p	1		buf
	m	()Lded;	c	copy
	f	Lhi;	a	registry
c	ddw	net/minecraft/world/level/chunk/HashMapPalette
	m	(Lhi;ILdee;)V	<init>	<init>
		p	1		idList
		p	2		indexBits
		p	3		listener
	m	(Lhi;ILdee;Laoi;)V	<init>	<init>
		p	1		idList
		p	2		indexBits
		p	3		listener
		p	4		map
	m	(Lhi;ILdee;Ljava/util/List;)V	<init>	<init>
		p	1		idList
		p	2		bits
		p	3		listener
		p	4		entries
	m	()I	a	getSerializedSize
	m	(I)Ljava/lang/Object;	a	valueFor
		p	1		id
	m	(ILhi;Ldee;Ljava/util/List;)Lded;	a	create
		p	0		bits
		p	1		idList
		p	2		listener
		p	3		entries
	m	(Ljava/lang/Object;)I	a	idFor
		p	1		object
	m	(Ljava/util/function/Predicate;)Z	a	maybeHas
		p	1		predicate
	m	(Lss;)V	a	read
		p	1		buf
	m	()I	b	getSize
	m	(Lss;)V	b	write
		p	1		buf
	m	()Lded;	c	copy
	m	()Ljava/util/List;	d	getEntries
	f	Lhi;	a	registry
	f	Laoi;	b	values
	f	Ldee;	c	resizeHandler
	f	I	d	bits
c	ddx	net/minecraft/world/level/chunk/ImposterProtoChunk
	m	(Lddy;Z)V	<init>	<init>
		p	1		wrapped
	m	()Lddy;	A	getWrapped
	m	()I	L	getMaxLightLevel
	m	(Lbfh;)V	a	addEntity
		p	1		entity
	m	(Lcni;Lcno$f;)V	a	fillBiomesFromNoise
		p	1		biomeSupplier
		p	2		sampler
	m	(Lcze;)V	a	setBlockEntity
		p	1		blockEntity
	m	(Ldds;)V	a	setStatus
		p	1		status
	m	(Ldgv$a;)Lddm;	a	getCarvingMask
		p	1		step
	m	(Ldgz$a;)Ldgz;	a	getOrCreateHeightmapUnprimed
		p	1		type
	m	(Ldgz$a;II)I	a	getHeight
		p	1		type
		p	2		x
		p	3		z
	m	(Ldgz$a;[J)V	a	setHeightmap
		p	1		type
		p	2		heightmap
	m	(Ldic;)V	a	setBlendingData
		p	1		blendingData
	m	(Ldrp;)Ldrx;	a	getStartForStructure
		p	1		structure
	m	(Ldrp;J)V	a	addReferenceForStructure
		p	1		structure
		p	2		reference
	m	(Ldrp;Ldrx;)V	a	setStartForStructure
		p	1		structure
		p	2		start
	m	(Lgt;Ldbq;Z)Ldbq;	a	setBlockState
		p	1		pos
		p	2		state
		p	3		moved
	m	(Ljava/util/Map;)V	a	setAllStarts
		p	1		structureStarts
	m	(Lre;)V	a	setBlockEntityNbt
		p	1		nbt
	m	(Z)V	a	setUnsaved
		p	1		needsSaving
	m	(Lgt;)Ldbq;	a_	getBlockState
		p	1		pos
	m	(I)Lddz;	b	getSection
		p	1		yIndex
	m	(Ldgv$a;)Lddm;	b	getOrCreateCarvingMask
		p	1		step
	m	(Ldrp;)Lit/unimi/dsi/fastutil/longs/LongSet;	b	getReferencesForStructure
		p	1		structure
	m	(Ljava/util/Map;)V	b	setAllReferences
		p	1		structureReferences
	m	(Z)V	b	setLightCorrect
		p	1		lightOn
	m	(Lgt;)Ldwj;	b_	getFluidState
		p	1		pos
	m	(Ldgz$a;)Ldgz$a;	c	fixType
		p	1		type
	m	(Lgt;)Lcze;	c_	getBlockEntity
		p	1		pos
	m	()[Lddz;	d	getSections
	m	(Lgt;)V	d	removeBlockEntity
		p	1		pos
	m	(Lgt;)V	e	markPosForPostprocessing
		p	1		pos
	m	()Lclp;	f	getPos
	m	(Lgt;)Lre;	f	getBlockEntityNbt
		p	1		pos
	m	()Ljava/util/Map;	g	getAllStarts
	m	(Lgt;)Lre;	g	getBlockEntityNbtForSaving
		p	1		pos
	m	(III)Lhd;	getNoiseBiome	getNoiseBiome
		p	1		biomeX
		p	2		biomeY
		p	3		biomeZ
	m	()Ljava/util/Map;	h	getAllReferences
	m	()Z	i	isUnsaved
	m	()Ldds;	j	getStatus
	m	()Ljava/util/stream/Stream;	n	getLights
	m	()Lees;	o	getBlockTicks
	m	()Lees;	p	getFluidTicks
	m	()Lddn$a;	q	getTicksForSerialization
	m	()Ldic;	t	getBlendingData
	m	()Z	v	isLightCorrect
	f	Lddy;	l	wrapped
	f	Z	m	allowWrites
c	ddy	net/minecraft/world/level/chunk/LevelChunk
	m	(Laip;Ldeh;Lddy$c;)V	<init>	<init>
		p	1		world
		p	2		protoChunk
		p	3		entityLoader
	m	(Lcmi;Lclp;)V	<init>	<init>
		p	1		world
		p	2		pos
	m	(Lcmi;Lclp;Ldek;Leek;Leek;J[Lddz;Lddy$c;Ldic;)V	<init>	<init>
		p	1		world
		p	2		pos
		p	3		upgradeData
		p	4		blockTickScheduler
		p	5		fluidTickScheduler
		p	6		inhabitedTime
		p	8		sectionArrayInitializer
		p	9		entityLoader
		p	10		blendingData
	m	()Z	A	isEmpty
	m	()Laib$c;	B	getFullStatus
	m	()V	C	runPostLoad
	m	()Lcmi;	D	getLevel
	m	()Ljava/util/Map;	E	getBlockEntities
	m	()V	F	postProcessGeneration
	m	()V	G	clearAllBlockEntities
	m	()V	H	registerAllBlockEntitiesAfterLevelLoad
	m	()Z	I	isClientLightReady
	m	()Z	J	isInLevel
	m	(I)Ldgd;	a	getListenerRegistry
		p	1		ySectionCoord
	m	(III)Ldwj;	a	getFluidState
		p	1		x
		p	2		y
		p	3		z
	m	(Laip;)V	a	registerTickContainerInLevel
		p	1		world
	m	(Laip;I)Ldgd;	a	lambda$getListenerRegistry$0
		p	1		sectionCoord
	m	(Lbfh;)V	a	addEntity
		p	1		entity
	m	(Lcze;)V	a	setBlockEntity
		p	1		blockEntity
	m	(Lcze;Laip;)V	a	removeGameEventListener
		p	1		blockEntity
		p	2		world
	m	(Lcze;Lczf;)Ldas;	a	createTicker
		p	1		blockEntity
		p	2		blockEntityTicker
	m	(Lcze;Lczf;Lgt;Lddy$d;)Lddy$d;	a	lambda$updateBlockEntityTicker$7
		p	3		pos
		p	4		ticker
	m	(Lddy$d;)V	a	lambda$clearAllBlockEntities$5
		p	0		ticker
	m	(Lgt;Lczg;Lre;)V	a	lambda$replaceWithPacketData$3
		p	1		pos
		p	2		blockEntityType
		p	3		nbt
	m	(Lgt;Ldbq;Z)Ldbq;	a	setBlockState
		p	1		pos
		p	2		state
		p	3		moved
	m	(Lgt;Lddy$b;)Lcze;	a	getBlockEntity
		p	1		pos
		p	2		creationType
	m	(Lgt;Lre;)Lcze;	a	promotePendingBlockEntity
		p	1		pos
		p	2		nbt
	m	(Lss;)V	a	replaceBiomes
		p	1		buf
	m	(Lss;Lre;Ljava/util/function/Consumer;)V	a	replaceWithPacketData
		p	1		buf
		p	2		nbt
	m	(Lgt;)Ldbq;	a_	getBlockState
		p	1		pos
	m	(III)Ljava/lang/String;	b	lambda$getFluidState$2
	m	(Laip;)V	b	unregisterTickContainerFromLevel
		p	1		world
	m	(Lcze;)V	b	addAndRegisterBlockEntity
		p	1		blockEntity
	m	(Lcze;Laip;)V	b	addGameEventListener
		p	1		blockEntity
		p	2		world
	m	(Ljava/util/function/Supplier;)V	b	setFullStatus
		p	1		levelTypeProvider
	m	(Lgt;)Ldwj;	b_	getFluidState
		p	1		pos
	m	(III)Ljava/lang/String;	c	lambda$getBlockState$1
	m	(J)V	c	unpackTicks
		p	1		time
	m	(Lcze;)V	c	updateBlockEntityTicker
		p	1		blockEntity
	m	(Z)V	c	setLoaded
		p	1		loadedToWorld
	m	(Lgt;)Lcze;	c_	getBlockEntity
		p	1		pos
	m	(Lcze;)V	d	lambda$registerAllBlockEntitiesAfterLevelLoad$6
		p	1		blockEntity
	m	(Lgt;)V	d	removeBlockEntity
		p	1		pos
	m	(Z)V	d	setClientLightReady
		p	1		shouldRenderOnUpdate
	m	(Lgt;)Lre;	g	getBlockEntityNbtForSaving
		p	1		pos
	m	()Ldds;	j	getStatus
	m	(Lgt;)Lcze;	j	createBlockEntity
		p	1		pos
	m	(Lgt;)Z	k	isTicking
		p	1		pos
	m	(Lgt;)V	l	removeBlockEntityTicker
		p	1		pos
	m	(Lgt;)Z	m	lambda$getLights$4
	m	()Ljava/util/stream/Stream;	n	getLights
	m	()Lees;	o	getBlockTicks
	m	()Lees;	p	getFluidTicks
	m	()Lddn$a;	q	getTicksForSerialization
	f	Lorg/slf4j/Logger;	l	LOGGER
	f	Ldas;	m	NULL_TICKER
	f	Ljava/util/Map;	n	tickersInLevel
	f	Z	o	loaded
	f	Z	p	clientLightReady
	f	Lcmi;	q	level
	f	Ljava/util/function/Supplier;	r	fullStatus
	f	Lddy$c;	s	postLoad
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	t	gameEventListenerRegistrySections
	f	Leek;	u	blockTicks
	f	Leek;	v	fluidTicks
c	ddy$1	net/minecraft/world/level/chunk/LevelChunk$1
	m	()V	a	tick
	m	()Z	b	isRemoved
	m	()Lgt;	c	getPos
	m	()Ljava/lang/String;	d	getType
c	ddy$a	net/minecraft/world/level/chunk/LevelChunk$BoundTickingBlockEntity
	m	(Lddy;Lcze;Lczf;)V	<init>	<init>
		p	2		blockEntity
		p	3		ticker
	m	()V	a	tick
	m	()Z	b	isRemoved
	m	()Lgt;	c	getPos
	m	()Ljava/lang/String;	d	getType
	f	Lddy;	a	this$0
	f	Lcze;	b	blockEntity
	f	Lczf;	c	ticker
	f	Z	d	loggedInvalidBlockState
c	ddy$b	net/minecraft/world/level/chunk/LevelChunk$EntityCreationType
	m	()[Lddy$b;	a	$values
	f	Lddy$b;	a	IMMEDIATE
	f	Lddy$b;	b	QUEUED
	f	Lddy$b;	c	CHECK
	f	[Lddy$b;	d	$VALUES
c	ddy$c	net/minecraft/world/level/chunk/LevelChunk$PostLoadProcessor
	m	(Lddy;)V	run	run
		p	1		chunk
c	ddy$d	net/minecraft/world/level/chunk/LevelChunk$RebindableTickingBlockEntityWrapper
	m	(Lddy;Ldas;)V	<init>	<init>
		p	2		wrapped
	m	()V	a	tick
	m	(Ldas;)V	a	rebind
		p	1		wrapped
	m	()Z	b	isRemoved
	m	()Lgt;	c	getPos
	m	()Ljava/lang/String;	d	getType
	f	Lddy;	a	this$0
	f	Ldas;	b	ticker
c	ddz	net/minecraft/world/level/chunk/LevelChunkSection
	m	(ILdef;Ldeg;)V	<init>	<init>
		p	1		chunkPos
		p	2		blockStateContainer
		p	3		biomeContainer
	m	(ILhq;)V	<init>	<init>
		p	1		chunkPos
		p	2		biomeRegistry
	m	()V	a	acquire
	m	(I)I	a	getBottomBlockY
		p	0		chunkPos
	m	(III)Ldbq;	a	getBlockState
		p	1		x
		p	2		y
		p	3		z
	m	(IIILdbq;)Ldbq;	a	setBlockState
		p	1		x
		p	2		y
		p	3		z
		p	4		state
	m	(IIILdbq;Z)Ldbq;	a	setBlockState
		p	1		x
		p	2		y
		p	3		z
		p	4		state
		p	5		lock
	m	(Lcni;Lcno$f;II)V	a	fillBiomesFromNoise
		p	1		biomeSupplier
		p	2		sampler
		p	3		x
		p	4		z
	m	(Ljava/util/function/Predicate;)Z	a	maybeHas
		p	1		predicate
	m	(Lss;)V	a	read
		p	1		buf
	m	()V	b	release
	m	(III)Ldwj;	b	getFluidState
		p	1		x
		p	2		y
		p	3		z
	m	(Lss;)V	b	readBiomes
		p	1		buf
	m	()Z	c	hasOnlyAir
	m	(III)Lhd;	c	getNoiseBiome
		p	1		x
		p	2		y
		p	3		z
	m	(Lss;)V	c	write
		p	1		buf
	m	()Z	d	isRandomlyTicking
	m	()Z	e	isRandomlyTickingBlocks
	m	()Z	f	isRandomlyTickingFluids
	m	()I	g	bottomBlockY
	m	()V	h	recalcBlockCounts
	m	()Ldef;	i	getStates
	m	()Ldeg;	j	getBiomes
	m	()I	k	getSerializedSize
	f	I	a	SECTION_WIDTH
	f	I	b	SECTION_HEIGHT
	f	I	c	SECTION_SIZE
	f	I	d	BIOME_CONTAINER_BITS
	f	I	e	bottomBlockY
	f	S	f	nonEmptyBlockCount
	f	S	g	tickingBlockCount
	f	S	h	tickingFluidCount
	f	Ldef;	i	states
	f	Ldeg;	j	biomes
c	ddz$a	net/minecraft/world/level/chunk/LevelChunkSection$1BlockCounter
	m	(Ldbq;I)V	a	accept
	m	(Ljava/lang/Object;I)V	accept	accept
		p	1		object
		p	2		count
	f	I	a	nonEmptyBlockCount
	f	I	b	tickingBlockCount
	f	I	c	tickingFluidCount
	f	Lddz;	d	this$0
c	dea	net/minecraft/world/level/chunk/LightChunkGetter
	m	(Lcmr;Lhw;)V	a	onLightUpdate
		p	1		type
		p	2		pos
	m	(II)Lclo;	c	getChunkForLighting
		p	1		chunkX
		p	2		chunkZ
	m	()Lclo;	q	getLevel
c	deb	net/minecraft/world/level/chunk/LinearPalette
	m	(Lhi;ILdee;Ljava/util/List;)V	<init>	<init>
		p	1		idList
		p	2		bits
		p	3		listener
		p	4		list
	m	(Lhi;[Ljava/lang/Object;Ldee;II)V	<init>	<init>
		p	1		idList
		p	2		array
		p	3		listener
		p	4		indexBits
		p	5		size
	m	()I	a	getSerializedSize
	m	(I)Ljava/lang/Object;	a	valueFor
		p	1		id
	m	(ILhi;Ldee;Ljava/util/List;)Lded;	a	create
		p	0		bits
		p	1		idList
		p	2		listener
		p	3		list
	m	(Ljava/lang/Object;)I	a	idFor
		p	1		object
	m	(Ljava/util/function/Predicate;)Z	a	maybeHas
		p	1		predicate
	m	(Lss;)V	a	read
		p	1		buf
	m	()I	b	getSize
	m	(Lss;)V	b	write
		p	1		buf
	m	()Lded;	c	copy
	f	Lhi;	a	registry
	f	[Ljava/lang/Object;	b	values
	f	Ldee;	c	resizeHandler
	f	I	d	bits
	f	I	e	size
c	dec	net/minecraft/world/level/chunk/MissingPaletteEntryException
	m	(I)V	<init>	<init>
		p	1		index
c	ded	net/minecraft/world/level/chunk/Palette
	m	()I	a	getSerializedSize
	m	(I)Ljava/lang/Object;	a	valueFor
		p	1		id
	m	(Ljava/lang/Object;)I	a	idFor
		p	1		object
	m	(Ljava/util/function/Predicate;)Z	a	maybeHas
		p	1		predicate
	m	(Lss;)V	a	read
		p	1		buf
	m	()I	b	getSize
	m	(Lss;)V	b	write
		p	1		buf
	m	()Lded;	c	copy
c	ded$a	net/minecraft/world/level/chunk/Palette$Factory
	m	(ILhi;Ldee;Ljava/util/List;)Lded;	create	create
		p	1		bits
		p	2		idList
		p	3		listener
c	dee	net/minecraft/world/level/chunk/PaletteResize
	m	(ILjava/lang/Object;)I	onResize	onResize
		p	1		newBits
		p	2		object
c	def	net/minecraft/world/level/chunk/PalettedContainer
	m	(Lhi;Ldef$d;Ldef$a;Laoc;Ljava/util/List;)V	<init>	<init>
		p	1		idList
		p	2		paletteProvider
		p	3		dataProvider
		p	4		storage
		p	5		paletteEntries
	m	(Lhi;Ldef$d;Ldef$c;)V	<init>	<init>
		p	1		idList
		p	2		paletteProvider
		p	3		data
	m	(Lhi;Ljava/lang/Object;Ldef$d;)V	<init>	<init>
		p	1		idList
		p	2		object
		p	3		paletteProvider
	m	()V	a	acquire
	m	(I)Ljava/lang/Object;	a	get
		p	1		index
	m	(III)Ljava/lang/Object;	a	get
		p	1		x
		p	2		y
		p	3		z
	m	(IIILjava/lang/Object;)Ljava/lang/Object;	a	getAndSet
		p	1		x
		p	2		y
		p	3		z
		p	4		value
	m	(ILjava/lang/Object;)Ljava/lang/Object;	a	getAndSet
		p	1		index
		p	2		value
	m	(Lapu$a;)Ljava/lang/String;	a	lambda$unpack$10
	m	(Lcom/mojang/serialization/Codec;Ljava/lang/Object;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$codec$3
		p	2		instance
	m	(Lddw;I)I	a	lambda$pack$11
		p	2		id
	m	(Ldef$b;)V	a	count
		p	1		counter
	m	(Ldef$b;Lit/unimi/dsi/fastutil/ints/Int2IntMap$Entry;)V	a	lambda$count$13
		p	2		entry
	m	(Ldef$c;I)Ldef$c;	a	createOrReuseData
		p	1		previousData
		p	2		bits
	m	(Ldef;)Ldeg;	a	lambda$codecRO$1
		p	0		result
	m	(Ldeg$b;Lhi;Ldef$d;Ldeg$a;)Lcom/mojang/serialization/DataResult;	a	lambda$codec$4
		p	3		serialized
	m	(Lhi;Lcom/mojang/serialization/Codec;Ldef$d;Ljava/lang/Object;)Lcom/mojang/serialization/Codec;	a	codecRW
		p	0		idList
		p	1		entryCodec
		p	2		paletteProvider
		p	3		defaultValue
	m	(Lhi;Lcom/mojang/serialization/Codec;Ldef$d;Ljava/lang/Object;Ldeg$b;)Lcom/mojang/serialization/Codec;	a	codec
		p	0		idList
		p	1		entryCodec
		p	2		provider
		p	3		defaultValue
		p	4		reader
	m	(Lhi;Lded;I)I	a	lambda$unpack$9
		p	2		id
	m	(Lhi;Ldef$d;)Ldeg$a;	a	pack
		p	1		idList
		p	2		paletteProvider
	m	(Lhi;Ldef$d;Ldeg$a;)Lcom/mojang/serialization/DataResult;	a	unpack
		p	0		idList
		p	1		paletteProvider
		p	2		serialized
	m	(Lhi;Ldef$d;Ldeg;)Ldeg$a;	a	lambda$codec$5
		p	2		container
	m	(Lit/unimi/dsi/fastutil/ints/Int2IntOpenHashMap;I)V	a	lambda$count$12
		p	1		key
	m	(Ljava/util/function/Consumer;)V	a	getAll
		p	1		action
	m	(Ljava/util/function/Consumer;Lded;I)V	a	lambda$getAll$6
		p	2		id
	m	(Ljava/util/function/Predicate;)Z	a	maybeHas
		p	1		predicate
	m	(Lss;)V	a	read
		p	1		buf
	m	([ILjava/util/function/IntUnaryOperator;)V	a	swapPalette
		p	0		is
		p	1		applier
	m	()V	b	release
	m	(IIILjava/lang/Object;)Ljava/lang/Object;	b	getAndSetUnchecked
		p	1		x
		p	2		y
		p	3		z
		p	4		value
	m	(ILjava/lang/Object;)V	b	set
		p	1		index
		p	2		value
	m	(Lhi;Lcom/mojang/serialization/Codec;Ldef$d;Ljava/lang/Object;)Lcom/mojang/serialization/Codec;	b	codecRO
		p	0		idList
		p	1		entryCodec
		p	2		paletteProvider
		p	3		defaultValue
	m	(Lhi;Ldef$d;Ldeg$a;)Lcom/mojang/serialization/DataResult;	b	lambda$codecRO$2
		p	0		idListx
		p	1		paletteProviderx
		p	2		serialized
	m	(Lss;)V	b	write
		p	1		buf
	m	()I	c	getSerializedSize
	m	(IIILjava/lang/Object;)V	c	set
		p	1		x
		p	2		y
		p	3		z
		p	4		value
	m	(ILjava/lang/Object;)I	c	lambda$unpack$8
		p	0		id
		p	1		value
	m	()Ldef;	d	copy
	m	(ILjava/lang/Object;)I	d	lambda$new$0
		p	0		newSize
		p	1		added
	m	()Ldef;	e	recreate
	m	()Ljava/lang/String;	f	lambda$unpack$7
	m	(ILjava/lang/Object;)I	onResize	onResize
		p	1		newBits
		p	2		object
	f	I	a	MIN_PALETTE_BITS
	f	Ldee;	b	dummyPaletteResize
	f	Lhi;	c	registry
	f	Ldef$c;	d	data
	f	Ldef$d;	e	strategy
	f	Laqd;	f	threadingDetector
c	def$a	net/minecraft/world/level/chunk/PalettedContainer$Configuration
	m	()Lded$a;	a	factory
	m	(Lhi;Ldee;I)Ldef$c;	a	createData
		p	1		idList
		p	2		listener
		p	3		size
	m	()I	b	bits
	f	Lded$a;	a	factory
	f	I	b	bits
c	def$b	net/minecraft/world/level/chunk/PalettedContainer$CountConsumer
	m	(Ljava/lang/Object;I)V	accept	accept
		p	1		object
		p	2		count
c	def$c	net/minecraft/world/level/chunk/PalettedContainer$Data
	m	(Ldef$a;Laoc;Lded;)V	<init>	<init>
		p	1		configuration
		p	2		storage
		p	3		palette
	m	()I	a	getSerializedSize
	m	(Lded;Laoc;)V	a	copyFrom
		p	1		palette
		p	2		storage
	m	(Lss;)V	a	write
		p	1		buf
	m	()Ldef$c;	b	copy
	m	()Ldef$a;	c	configuration
	m	()Laoc;	d	storage
	m	()Lded;	e	palette
	f	Ldef$a;	a	configuration
	f	Laoc;	b	storage
	f	Lded;	c	palette
c	def$d	net/minecraft/world/level/chunk/PalettedContainer$Strategy
	m	(I)V	<init>	<init>
		p	1		edgeBits
	m	()I	a	size
	m	(III)I	a	getIndex
		p	1		x
		p	2		y
		p	3		z
	m	(Lhi;I)Ldef$a;	a	getConfiguration
		p	1		idList
		p	2		bits
	m	(Lhi;I)I	b	calculateBitsForSerialization
		p	1		idList
		p	2		size
	f	Lded$a;	a	SINGLE_VALUE_PALETTE_FACTORY
	f	Lded$a;	b	LINEAR_PALETTE_FACTORY
	f	Lded$a;	c	HASHMAP_PALETTE_FACTORY
	f	Ldef$d;	d	SECTION_STATES
	f	Ldef$d;	e	SECTION_BIOMES
	f	Lded$a;	f	GLOBAL_PALETTE_FACTORY
	f	I	g	sizeBits
c	def$d$1	net/minecraft/world/level/chunk/PalettedContainer$Strategy$1
	m	(I)V	<init>	<init>
		p	1		edgeBits
	m	(Lhi;I)Ldef$a;	a	getConfiguration
		p	1		idList
		p	2		bits
c	def$d$2	net/minecraft/world/level/chunk/PalettedContainer$Strategy$2
	m	(I)V	<init>	<init>
		p	1		edgeBits
	m	(Lhi;I)Ldef$a;	a	getConfiguration
		p	1		idList
		p	2		bits
c	deg	net/minecraft/world/level/chunk/PalettedContainerRO
	m	(III)Ljava/lang/Object;	a	get
		p	1		x
		p	2		y
		p	3		z
	m	(Ldef$b;)V	a	count
		p	1		counter
	m	(Lhi;Ldef$d;)Ldeg$a;	a	pack
		p	1		idList
		p	2		paletteProvider
	m	(Ljava/util/function/Consumer;)V	a	getAll
		p	1		action
	m	(Ljava/util/function/Predicate;)Z	a	maybeHas
		p	1		predicate
	m	(Lss;)V	b	write
		p	1		buf
	m	()I	c	getSerializedSize
	m	()Ldef;	e	recreate
c	deg$a	net/minecraft/world/level/chunk/PalettedContainerRO$PackedData
	m	()Ljava/util/List;	a	paletteEntries
	m	()Ljava/util/Optional;	b	storage
	f	Ljava/util/List;	a	paletteEntries
	f	Ljava/util/Optional;	b	storage
c	deg$b	net/minecraft/world/level/chunk/PalettedContainerRO$Unpacker
	m	(Lhi;Ldef$d;Ldeg$a;)Lcom/mojang/serialization/DataResult;	read	read
		p	1		idList
		p	2		paletteProvider
		p	3		serialize
c	deh	net/minecraft/world/level/chunk/ProtoChunk
	m	(Lclp;Ldek;Lcmk;Lhq;Ldic;)V	<init>	<init>
		p	1		pos
		p	2		upgradeData
		p	3		world
		p	4		biomeRegistry
		p	5		blendingData
	m	(Lclp;Ldek;[Lddz;Leen;Leen;Lcmk;Lhq;Ldic;)V	<init>	<init>
		p	1		pos
		p	2		upgradeData
		p	3		sections
		p	4		blockTickScheduler
		p	5		fluidTickScheduler
		p	6		world
		p	7		biomeRegistry
		p	8		blendingData
	m	()[Lit/unimi/dsi/fastutil/shorts/ShortList;	B	getPackedLights
	m	()Ljava/util/Map;	C	getBlockEntities
	m	()Ljava/util/List;	D	getEntities
	m	()Ljava/util/Map;	E	getBlockEntityNbts
	m	()Leek;	F	unpackBlockTicks
	m	()Leek;	G	unpackFluidTicks
	m	(Lbfh;)V	a	addEntity
		p	1		entity
	m	(Lcze;)V	a	setBlockEntity
		p	1		blockEntity
	m	(Ldds;)V	a	setStatus
		p	1		status
	m	(Ldgn;)V	a	setBelowZeroRetrogen
		p	1		belowZeroRetrogen
	m	(Ldgv$a;)Lddm;	a	getCarvingMask
		p	1		step
	m	(Ldgv$a;Lddm;)V	a	setCarvingMask
		p	1		step
		p	2		carvingMask
	m	(Ldrp;Ldrx;)V	a	setStartForStructure
		p	1		structure
		p	2		start
	m	(Ldwa;)V	a	setLightEngine
		p	1		lightingProvider
	m	(Leen;)Leek;	a	unpackTicks
		p	0		tickScheduler
	m	(Lgt;Ldbq;Z)Ldbq;	a	setBlockState
		p	1		pos
		p	2		state
		p	3		moved
	m	(SI)V	a	addPackedPostProcess
		p	1		packedPos
		p	2		index
	m	(SILclp;)Lgt;	a	unpackOffsetCoordinates
		p	0		sectionRel
		p	1		sectionY
		p	2		chunkPos
	m	(Lgt;)Ldbq;	a_	getBlockState
		p	1		pos
	m	(Ldgv$a;)Lddm;	b	getOrCreateCarvingMask
		p	1		step
	m	(Lre;)V	b	addEntity
		p	1		entityNbt
	m	(SI)V	b	addLight
		p	1		chunkSliceRel
		p	2		sectionY
	m	(Lgt;)Ldwj;	b_	getFluidState
		p	1		pos
	m	(Ldgv$a;)Lddm;	c	lambda$getOrCreateCarvingMask$0
		p	1		step2
	m	(Lgt;)Lcze;	c_	getBlockEntity
		p	1		pos
	m	(Lgt;)V	d	removeBlockEntity
		p	1		pos
	m	(Lgt;)V	e	markPosForPostprocessing
		p	1		pos
	m	(Lgt;)Lre;	g	getBlockEntityNbtForSaving
		p	1		pos
	m	(III)Lhd;	getNoiseBiome	getNoiseBiome
		p	1		biomeX
		p	2		biomeY
		p	3		biomeZ
	m	()Ldds;	j	getStatus
	m	(Lgt;)V	j	addLight
		p	1		pos
	m	(Lgt;)S	k	packOffsetCoordinates
		p	0		pos
	m	()Ljava/util/stream/Stream;	n	getLights
	m	()Lees;	o	getBlockTicks
	m	()Lees;	p	getFluidTicks
	m	()Lddn$a;	q	getTicksForSerialization
	m	()Ldgn;	x	getBelowZeroRetrogen
	m	()Lcmk;	z	getHeightAccessorForGeneration
	f	Ldwa;	l	lightEngine
	f	Ldds;	m	status
	f	Ljava/util/List;	n	entities
	f	Ljava/util/List;	o	lights
	f	Ljava/util/Map;	p	carvingMasks
	f	Ldgn;	q	belowZeroRetrogen
	f	Leen;	r	blockTicks
	f	Leen;	s	fluidTicks
c	dei	net/minecraft/world/level/chunk/SingleValuePalette
	m	(Lhi;Ldee;Ljava/util/List;)V	<init>	<init>
		p	1		idList
		p	2		listener
		p	3		entries
	m	()I	a	getSerializedSize
	m	(I)Ljava/lang/Object;	a	valueFor
		p	1		id
	m	(ILhi;Ldee;Ljava/util/List;)Lded;	a	create
		p	0		bitSize
		p	1		idList
		p	2		listener
		p	3		entries
	m	(Ljava/lang/Object;)I	a	idFor
		p	1		object
	m	(Ljava/util/function/Predicate;)Z	a	maybeHas
		p	1		predicate
	m	(Lss;)V	a	read
		p	1		buf
	m	()I	b	getSize
	m	(Lss;)V	b	write
		p	1		buf
	m	()Lded;	c	copy
	f	Lhi;	a	registry
	f	Ljava/lang/Object;	b	value
	f	Ldee;	c	resizeHandler
c	dej	net/minecraft/world/level/chunk/StructureAccess
	m	(Ldrp;)Ldrx;	a	getStartForStructure
		p	1		structure
	m	(Ldrp;J)V	a	addReferenceForStructure
		p	1		structure
		p	2		reference
	m	(Ldrp;Ldrx;)V	a	setStartForStructure
		p	1		structure
		p	2		start
	m	(Ldrp;)Lit/unimi/dsi/fastutil/longs/LongSet;	b	getReferencesForStructure
		p	1		structure
	m	(Ljava/util/Map;)V	b	setAllReferences
		p	1		structureReferences
	m	()Ljava/util/Map;	h	getAllReferences
c	dek	net/minecraft/world/level/chunk/UpgradeData
	m	(Lcmk;)V	<init>	<init>
		p	1		world
	m	(Lre;Lcmk;)V	<init>	<init>
		p	1		nbt
		p	2		world
	m	()Z	a	isEmpty
	m	(Lcmi;Ldek$a;)V	a	lambda$upgrade$6
		p	1		logic
	m	(Lcmi;Leeo;)V	a	lambda$upgrade$5
		p	1		tick
	m	(Lcpi;)Ljava/lang/String;	a	lambda$write$7
		p	0		block
	m	(Ldbq;Lgz;Lcmj;Lgt;Lgt;)Ldbq;	a	updateState
		p	0		oldState
		p	1		dir
		p	2		world
		p	3		currentPos
		p	4		otherPos
	m	(Lddy;)V	a	upgrade
		p	1		chunk
	m	(Lddy;Lha;)V	a	upgradeSides
		p	0		chunk
		p	1		side
	m	(Ldwi;)Ljava/lang/String;	a	lambda$write$9
		p	0		fluid
	m	(Ljava/lang/String;)Ljava/util/Optional;	a	lambda$new$3
		p	0		id
	m	(Lre;Ljava/lang/String;Ljava/util/function/Function;Ljava/util/List;)V	a	loadTicks
		p	0		nbt
		p	1		key
		p	2		nameToType
		p	3		ticks
	m	(Lrk;Leeo;)V	a	lambda$write$10
		p	0		tick
		p	1		fluidTick
	m	()Lre;	b	write
	m	(Lcmi;Leeo;)V	b	lambda$upgrade$4
		p	1		tick
	m	(Lddy;)V	b	upgradeInside
		p	1		chunk
	m	(Ljava/lang/String;)Ljava/util/Optional;	b	lambda$new$1
		p	0		id
	m	(Lrk;Leeo;)V	b	lambda$write$8
		p	0		tick
		p	1		blockTick
	m	()Ljava/util/Optional;	c	lambda$new$2
	m	()Ljava/util/Optional;	d	lambda$new$0
	f	Ldek;	a	EMPTY
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ljava/lang/String;	c	TAG_INDICES
	f	[Lha;	d	DIRECTIONS
	f	Ljava/util/EnumSet;	e	sides
	f	Ljava/util/List;	f	neighborBlockTicks
	f	Ljava/util/List;	g	neighborFluidTicks
	f	[[I	h	index
	f	Ljava/util/Map;	i	MAP
	f	Ljava/util/Set;	j	CHUNKY_FIXERS
c	dek$a	net/minecraft/world/level/chunk/UpgradeData$BlockFixer
	m	(Lcmj;)V	a	processChunk
		p	1		world
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		oldState
		p	2		direction
		p	3		otherState
		p	4		world
		p	5		currentPos
		p	6		otherPos
c	dek$b	net/minecraft/world/level/chunk/UpgradeData$BlockFixers
	m	(Ljava/lang/String;IZ[Lcpi;)V	<init>	<init>
		p	3		addCallback
		p	4		blocks
	m	(Ljava/lang/String;I[Lcpi;)V	<init>	<init>
		p	3		blocks
	m	()[Ldek$b;	a	$values
	f	Ldek$b;	a	BLACKLIST
	f	Ldek$b;	b	DEFAULT
	f	Ldek$b;	c	CHEST
	f	Ldek$b;	d	LEAVES
	f	Ldek$b;	e	STEM_BLOCK
	f	[Lgz;	f	DIRECTIONS
	f	[Ldek$b;	g	$VALUES
c	dek$b$1	net/minecraft/world/level/chunk/UpgradeData$BlockFixers$1
	m	(Ljava/lang/String;I[Lcpi;)V	<init>	<init>
		p	3		blocks
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		oldState
		p	2		direction
		p	3		otherState
		p	4		world
		p	5		currentPos
		p	6		otherPos
c	dek$b$2	net/minecraft/world/level/chunk/UpgradeData$BlockFixers$2
	m	(Ljava/lang/String;I[Lcpi;)V	<init>	<init>
		p	3		blocks
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		oldState
		p	2		direction
		p	3		otherState
		p	4		world
		p	5		currentPos
		p	6		otherPos
c	dek$b$3	net/minecraft/world/level/chunk/UpgradeData$BlockFixers$3
	m	(Ljava/lang/String;I[Lcpi;)V	<init>	<init>
		p	3		blocks
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		oldState
		p	2		direction
		p	3		otherState
		p	4		world
		p	5		currentPos
		p	6		otherPos
c	dek$b$4	net/minecraft/world/level/chunk/UpgradeData$BlockFixers$4
	m	(Ljava/lang/String;IZ[Lcpi;)V	<init>	<init>
		p	3		addCallback
		p	4		blocks
	m	()Ljava/util/List;	a	lambda$$0
	m	(Lcmj;)V	a	processChunk
		p	1		world
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		oldState
		p	2		direction
		p	3		otherState
		p	4		world
		p	5		currentPos
		p	6		otherPos
	f	Ljava/lang/ThreadLocal;	g	queue
c	dek$b$5	net/minecraft/world/level/chunk/UpgradeData$BlockFixers$5
	m	(Ljava/lang/String;I[Lcpi;)V	<init>	<init>
		p	3		blocks
	m	(Ldbq;Lgz;Ldbq;Lcmj;Lgt;Lgt;)Ldbq;	a	updateShape
		p	1		oldState
		p	2		direction
		p	3		otherState
		p	4		world
		p	5		currentPos
		p	6		otherPos
c	del	net/minecraft/world/level/chunk/package-info
c	dem	net/minecraft/world/level/chunk/storage/ChunkScanAccess
	m	(Lclp;Lru;)Ljava/util/concurrent/CompletableFuture;	a	scanChunk
		p	1		pos
		p	2		scanner
c	den	net/minecraft/world/level/chunk/storage/ChunkSerializer
	m	(Laip;Lbqx;Lclp;Lre;)Ldeh;	a	read
		p	0		world
		p	1		poiStorage
		p	2		chunkPos
		p	3		nbt
	m	(Laip;Lddn;)Lre;	a	write
		p	0		world
		p	1		chunk
	m	(Laip;Lre;)Lddy$c;	a	postLoadChunk
		p	0		world
		p	1		nbt
	m	(Laip;Lre;Lddn$a;)V	a	saveTicks
		p	0		world
		p	1		nbt
		p	2		tickSchedulers
	m	(Lclp;ILjava/lang/String;)V	a	logErrors
		p	0		chunkPos
		p	1		y
		p	2		message
	m	(Lclp;Ladd;J)Z	a	lambda$unpackStructureReferences$11
		p	2		packedPos
	m	(Lcpi;)Ljava/lang/String;	a	lambda$saveTicks$8
		p	0		block
	m	(Ldsf;Lclp;Ljava/util/Map;Ljava/util/Map;)Lre;	a	packStructureData
		p	0		context
		p	1		pos
		p	2		starts
		p	3		references
	m	(Ldsf;Lre;J)Ljava/util/Map;	a	unpackStructureStart
		p	0		context
		p	1		nbt
		p	2		worldSeed
	m	(Ldwi;)Ljava/lang/String;	a	lambda$saveTicks$9
		p	0		fluid
	m	(Lhq;)Lcom/mojang/serialization/Codec;	a	makeBiomeCodec
		p	0		biomeRegistry
	m	(Lhr;Lclp;Lre;)Ljava/util/Map;	a	unpackStructureReferences
		p	0		registryManager
		p	1		pos
		p	2		nbt
	m	(Ljava/lang/String;)Ljava/util/Optional;	a	lambda$read$5
		p	0		id
	m	(Lre;)Ldds$a;	a	getChunkTypeFromTag
		p	0		nbt
	m	(Lre;Ljava/lang/String;)Lrk;	a	getListOfCompoundsOrNull
		p	0		nbt
		p	1		key
	m	(Lre;Lrx;)V	a	lambda$write$7
	m	(Lrk;Laip;Lrk;Lddy;)V	a	lambda$postLoadChunk$10
		p	3		chunk
	m	([Lit/unimi/dsi/fastutil/shorts/ShortList;)Lrk;	a	packOffsets
		p	0		lists
	m	(Lclp;ILjava/lang/String;)V	b	lambda$read$1
		p	2		errorMessage
	m	(Ljava/lang/String;)Ljava/util/Optional;	b	lambda$read$4
		p	0		id
	m	(Lre;Lrx;)V	b	lambda$write$6
	m	(Lclp;ILjava/lang/String;)V	c	lambda$read$0
		p	2		errorMessage
	m	(Ljava/lang/String;)Ljava/util/Optional;	c	lambda$read$3
		p	0		id
	m	(Ljava/lang/String;)Ljava/util/Optional;	d	lambda$read$2
		p	0		id
	f	Ljava/lang/String;	a	X_POS_TAG
	f	Ljava/lang/String;	b	Z_POS_TAG
	f	Ljava/lang/String;	c	HEIGHTMAPS_TAG
	f	Ljava/lang/String;	d	IS_LIGHT_ON_TAG
	f	Ljava/lang/String;	e	SECTIONS_TAG
	f	Ljava/lang/String;	f	BLOCK_LIGHT_TAG
	f	Ljava/lang/String;	g	SKY_LIGHT_TAG
	f	Lcom/mojang/serialization/Codec;	h	BLOCK_STATE_CODEC
	f	Lorg/slf4j/Logger;	i	LOGGER
	f	Ljava/lang/String;	j	TAG_UPGRADE_DATA
	f	Ljava/lang/String;	k	BLOCK_TICKS_TAG
	f	Ljava/lang/String;	l	FLUID_TICKS_TAG
c	deo	net/minecraft/world/level/chunk/storage/ChunkStorage
	m	(Ljava/nio/file/Path;Lcom/mojang/datafixers/DataFixer;Z)V	<init>	<init>
		p	1		directory
		p	2		dataFixer
		p	3		dsync
	m	(Ladc;Ljava/util/function/Supplier;)Ldrk;	a	getLegacyStructureHandler
		p	1		worldKey
		p	2		stateManagerGetter
	m	(Ladc;Ljava/util/function/Supplier;Lre;Ljava/util/Optional;)Lre;	a	upgradeChunkTag
		p	1		worldKey
		p	2		persistentStateManagerFactory
		p	3		nbt
		p	4		generatorCodecKey
	m	(Lclp;I)Z	a	isOldChunkAround
		p	1		chunkPos
		p	2		checkRadius
	m	(Lclp;Lre;)V	a	write
		p	1		chunkPos
		p	2		nbt
	m	(Lre;)I	a	getVersion
		p	0		nbt
	m	(Lre;Ladc;)V	a	lambda$injectDatafixingContext$0
		p	1		key
	m	(Lre;Ladc;Ljava/util/Optional;)V	a	injectDatafixingContext
		p	0		nbt
		p	1		worldKey
		p	2		generatorCodecKey
	m	(Lclp;)Ljava/util/concurrent/CompletableFuture;	f	read
		p	1		chunkPos
	m	()V	o	flushWorker
	m	()Ldem;	p	chunkScanner
	f	Ldeq;	a	worker
	f	Ldrk;	b	legacyStructureHandler
	f	I	d	LAST_MONOLYTH_STRUCTURE_DATA_VERSION
	f	Lcom/mojang/datafixers/DataFixer;	e	fixerUpper
c	dep	net/minecraft/world/level/chunk/storage/EntityStorage
	m	(Laip;Ljava/nio/file/Path;Lcom/mojang/datafixers/DataFixer;ZLjava/util/concurrent/Executor;)V	<init>	<init>
		p	1		world
		p	2		path
		p	3		dataFixer
		p	4		dsync
		p	5		executor
	m	(Lclp;)Ljava/util/concurrent/CompletableFuture;	a	loadEntities
		p	1		pos
	m	(Lclp;Ljava/lang/Throwable;)Ljava/lang/Void;	a	lambda$storeEntities$2
		p	1		ex
	m	(Lclp;Ljava/util/Optional;)Ldff;	a	lambda$loadEntities$0
		p	2		nbt
	m	(Ldff;)V	a	storeEntities
		p	1		dataList
	m	(Lre;)Lclp;	a	readChunkPos
		p	0		chunkNbt
	m	(Lre;Lclp;)V	a	writeChunkPos
		p	0		chunkNbt
		p	1		pos
	m	(Lrk;Lbfh;)V	a	lambda$storeEntities$1
		p	1		entity
	m	(Z)V	a	flush
		p	1		sync
	m	(Lclp;)Ldff;	b	emptyChunk
		p	0		pos
	m	(Lre;)Lre;	b	upgradeChunkTag
		p	1		chunkNbt
	f	Lcom/mojang/datafixers/DataFixer;	a	fixerUpper
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ljava/lang/String;	c	ENTITIES_TAG
	f	Ljava/lang/String;	d	POSITION_TAG
	f	Laip;	e	level
	f	Ldeq;	f	worker
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	g	emptyChunks
	f	Lbcr;	h	entityDeserializerQueue
c	deq	net/minecraft/world/level/chunk/storage/IOWorker
	m	(Ljava/nio/file/Path;ZLjava/lang/String;)V	<init>	<init>
		p	1		directory
		p	2		dsync
		p	3		name
	m	()V	a	storePendingChunk
	m	(I)[Ljava/util/concurrent/CompletableFuture;	a	lambda$synchronize$6
	m	(II)Ljava/util/concurrent/CompletableFuture;	a	getOrCreateOldDataForRegion
		p	1		chunkX
		p	2		chunkZ
	m	(Lbcq;)Lbct$b;	a	lambda$close$16
		p	0		listener
	m	(Lbcq;Ljava/util/function/Supplier;)V	a	lambda$submitTask$13
	m	(Lclp;)Ljava/util/concurrent/CompletableFuture;	a	loadAsync
		p	1		pos
	m	(Lclp;I)Z	a	isOldChunkAround
		p	1		chunkPos
		p	2		checkRadius
	m	(Lclp;Ldeq$a;)V	a	runStore
		p	1		pos
		p	2		result
	m	(Lclp;Lre;)Ljava/util/concurrent/CompletableFuture;	a	store
		p	1		pos
		p	2		nbt
	m	(Lclp;Lru;)Ljava/util/concurrent/CompletableFuture;	a	scanChunk
		p	1		pos
		p	2		scanner
	m	(Ldeq$a;)Ljava/util/concurrent/CompletableFuture;	a	lambda$synchronize$5
	m	(Ljava/lang/Void;)Ljava/util/concurrent/CompletionStage;	a	lambda$synchronize$11
		p	1		void_
	m	(Ljava/util/BitSet;Lclp;)V	a	lambda$createOldDataForRegion$0
		p	2		chunkPos
	m	(Ljava/util/function/Supplier;)Ljava/util/concurrent/CompletableFuture;	a	submitTask
		p	1		task
	m	(Ljava/util/function/Supplier;Lbcq;)Lbct$b;	a	lambda$submitTask$14
		p	2		listener
	m	(Lre;)Z	a	isOldChunk
		p	1		nbt
	m	(Lre;Lclp;)Ldeq$a;	a	lambda$store$2
		p	1		pos2
	m	(Z)Ljava/util/concurrent/CompletableFuture;	a	synchronize
		p	1		sync
	m	()V	b	tellStorePending
	m	(II)Ljava/util/concurrent/CompletableFuture;	b	createOldDataForRegion
		p	1		chunkX
		p	2		chunkZ
	m	(Lbcq;)V	b	lambda$close$15
	m	(Lclp;)Lcom/mojang/datafixers/util/Either;	b	lambda$loadAsync$4
	m	(Lclp;Lre;)Lcom/mojang/datafixers/util/Either;	b	lambda$store$3
	m	(Lclp;Lru;)Lcom/mojang/datafixers/util/Either;	b	lambda$scanChunk$12
	m	(Ljava/lang/Void;)Ljava/util/concurrent/CompletionStage;	b	lambda$synchronize$9
		p	1		void_
	m	()Lcom/mojang/datafixers/util/Either;	c	lambda$synchronize$10
	m	(II)Ljava/util/BitSet;	c	lambda$createOldDataForRegion$1
	m	()Lcom/mojang/datafixers/util/Either;	d	lambda$synchronize$8
	m	()Lcom/mojang/datafixers/util/Either;	e	lambda$synchronize$7
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/concurrent/atomic/AtomicBoolean;	b	shutdownRequested
	f	Lbcr;	c	mailbox
	f	Ldet;	d	storage
	f	Ljava/util/Map;	e	pendingWrites
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectLinkedOpenHashMap;	f	regionCacheForBlender
	f	I	g	REGION_CACHE_SIZE
c	deq$a	net/minecraft/world/level/chunk/storage/IOWorker$PendingStore
	m	(Lre;)V	<init>	<init>
		p	1		nbt
	f	Lre;	a	data
	f	Ljava/util/concurrent/CompletableFuture;	b	result
c	deq$b	net/minecraft/world/level/chunk/storage/IOWorker$Priority
	m	()[Ldeq$b;	a	$values
	f	Ldeq$b;	a	FOREGROUND
	f	Ldeq$b;	b	BACKGROUND
	f	Ldeq$b;	c	SHUTDOWN
	f	[Ldeq$b;	d	$VALUES
c	der	net/minecraft/world/level/chunk/storage/RegionBitmap
	m	()Lit/unimi/dsi/fastutil/ints/IntSet;	a	getUsed
	m	(I)I	a	allocate
		p	1		size
	m	(II)V	a	force
		p	1		start
		p	2		size
	m	(II)V	b	free
		p	1		start
		p	2		size
	f	Ljava/util/BitSet;	a	used
c	des	net/minecraft/world/level/chunk/storage/RegionFile
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;Ldeu;Z)V	<init>	<init>
		p	1		file
		p	2		directory
		p	3		outputChunkStreamVersion
		p	4		dsync
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;Z)V	<init>	<init>
		p	1		file
		p	2		directory
		p	3		dsync
	m	()V	a	flush
	m	(B)Z	a	isExternalStreamChunk
		p	0		flags
	m	(I)I	a	getNumSectors
		p	0		sectorData
	m	(II)I	a	packSectorOffset
		p	1		offset
		p	2		size
	m	(Lclp;)Ljava/io/DataInputStream;	a	getChunkDataInputStream
		p	1		pos
	m	(Lclp;B)Ljava/io/DataInputStream;	a	createExternalChunkInputStream
		p	1		pos
		p	2		flags
	m	(Lclp;BLjava/io/InputStream;)Ljava/io/DataInputStream;	a	createChunkInputStream
		p	1		pos
		p	2		flags
		p	3		stream
	m	(Lclp;Ljava/nio/ByteBuffer;)V	a	write
		p	1		pos
		p	2		buf
	m	(Ljava/nio/ByteBuffer;I)Ljava/io/ByteArrayInputStream;	a	createStream
		p	0		buffer
		p	1		length
	m	(Ljava/nio/file/Path;Ljava/nio/ByteBuffer;)Ldes$b;	a	writeToExternalFile
		p	1		path
		p	2		buf
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;)V	a	lambda$writeToExternalFile$1
	m	()I	b	getTimestamp
	m	(B)B	b	getExternalChunkVersion
		p	0		flags
	m	(I)I	b	getSectorNumber
		p	0		sectorData
	m	(Lclp;)Z	b	doesChunkExist
		p	1		pos
	m	()Ljava/nio/ByteBuffer;	c	createExternalStub
	m	(I)I	c	sizeToSectors
		p	0		byteCount
	m	(Lclp;)Ljava/io/DataOutputStream;	c	getChunkDataOutputStream
		p	1		pos
	m	()V	d	writeHeader
	m	(Lclp;)V	d	clear
		p	1		pos
	m	()V	e	padToFullSector
	m	(Lclp;)Z	e	hasChunk
		p	1		pos
	m	(Lclp;)Ljava/nio/file/Path;	f	getExternalChunkPath
		p	1		chunkPos
	m	(Lclp;)I	g	getOffset
		p	1		pos
	m	(Lclp;)I	h	getOffsetIndex
		p	0		pos
	m	(Lclp;)V	i	lambda$write$0
	f	I	a	SECTOR_INTS
	f	Lder;	b	usedSectors
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	I	d	SECTOR_BYTES
	f	I	e	CHUNK_HEADER_SIZE
	f	I	f	HEADER_OFFSET
	f	Ljava/nio/ByteBuffer;	g	PADDING_BUFFER
	f	Ljava/lang/String;	h	EXTERNAL_FILE_EXTENSION
	f	I	i	EXTERNAL_STREAM_FLAG
	f	I	j	EXTERNAL_CHUNK_THRESHOLD
	f	I	k	CHUNK_NOT_PRESENT
	f	Ljava/nio/channels/FileChannel;	l	file
	f	Ljava/nio/file/Path;	m	externalFileDir
	f	Ldeu;	n	version
	f	Ljava/nio/ByteBuffer;	o	header
	f	Ljava/nio/IntBuffer;	p	offsets
	f	Ljava/nio/IntBuffer;	q	timestamps
c	des$a	net/minecraft/world/level/chunk/storage/RegionFile$ChunkBuffer
	m	(Ldes;Lclp;)V	<init>	<init>
		p	2		pos
	f	Ldes;	a	this$0
	f	Lclp;	b	pos
c	des$b	net/minecraft/world/level/chunk/storage/RegionFile$CommitOp
c	det	net/minecraft/world/level/chunk/storage/RegionFileStorage
	m	(Ljava/nio/file/Path;Z)V	<init>	<init>
		p	1		directory
		p	2		dsync
	m	()V	a	flush
	m	(Lclp;)Lre;	a	read
		p	1		pos
	m	(Lclp;Lre;)V	a	write
		p	1		pos
		p	2		nbt
	m	(Lclp;Lru;)V	a	scanChunk
		p	1		chunkPos
		p	2		scanner
	m	(Lclp;)Ldes;	b	getRegionFile
		p	1		pos
	f	Ljava/lang/String;	a	ANVIL_EXTENSION
	f	I	b	MAX_CACHE_SIZE
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectLinkedOpenHashMap;	c	regionCache
	f	Ljava/nio/file/Path;	d	folder
	f	Z	e	sync
c	deu	net/minecraft/world/level/chunk/storage/RegionFileVersion
	m	(ILdeu$a;Ldeu$a;)V	<init>	<init>
		p	1		id
		p	2		inputStreamWrapper
		p	3		outputStreamWrapper
	m	()I	a	getId
	m	(I)Ldeu;	a	fromId
		p	0		id
	m	(Ldeu;)Ldeu;	a	register
		p	0		version
	m	(Ljava/io/InputStream;)Ljava/io/InputStream;	a	wrap
		p	1		inputStream
	m	(Ljava/io/OutputStream;)Ljava/io/OutputStream;	a	wrap
		p	1		outputStream
	m	(I)Z	b	isValidVersion
		p	0		id
	m	(Ljava/io/InputStream;)Ljava/io/InputStream;	b	lambda$static$4
		p	0		stream
	m	(Ljava/io/OutputStream;)Ljava/io/OutputStream;	b	lambda$static$5
		p	0		stream
	m	(Ljava/io/InputStream;)Ljava/io/InputStream;	c	lambda$static$2
		p	0		stream
	m	(Ljava/io/OutputStream;)Ljava/io/OutputStream;	c	lambda$static$3
		p	0		stream
	m	(Ljava/io/InputStream;)Ljava/io/InputStream;	d	lambda$static$0
		p	0		stream
	m	(Ljava/io/OutputStream;)Ljava/io/OutputStream;	d	lambda$static$1
		p	0		stream
	f	Ldeu;	a	VERSION_GZIP
	f	Ldeu;	b	VERSION_DEFLATE
	f	Ldeu;	c	VERSION_NONE
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	d	VERSIONS
	f	I	e	id
	f	Ldeu$a;	f	inputWrapper
	f	Ldeu$a;	g	outputWrapper
c	deu$a	net/minecraft/world/level/chunk/storage/RegionFileVersion$StreamWrapper
	m	(Ljava/lang/Object;)Ljava/lang/Object;	wrap	wrap
		p	1		object
c	dev	net/minecraft/world/level/chunk/storage/SectionStorage
	m	(Ljava/nio/file/Path;Ljava/util/function/Function;Ljava/util/function/Function;Lcom/mojang/datafixers/DataFixer;Laql;ZLhr;Lcmk;)V	<init>	<init>
		p	1		path
		p	2		codecFactory
		p	3		factory
		p	4		dataFixer
		p	5		dataFixTypes
		p	6		dsync
		p	7		dynamicRegistryManager
		p	8		world
	m	()Z	a	hasWork
	m	(J)V	a	setDirty
		p	1		pos
	m	(JLcom/mojang/serialization/Dynamic;)Ljava/util/Optional;	a	lambda$readColumn$3
		p	3		dynamic
	m	(JZLjava/lang/Object;)V	a	lambda$readColumn$4
		p	4		sections
	m	(Lclp;)V	a	flush
		p	1		pos
	m	(Lclp;I)J	a	getKey
		p	0		chunkPos
		p	1		y
	m	(Lclp;Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic;	a	writeColumn
		p	1		chunkPos
		p	2		ops
	m	(Lclp;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)V	a	readColumn
		p	1		pos
		p	2		ops
		p	3		data
	m	(Lclp;Ljava/lang/Throwable;)Ljava/util/Optional;	a	lambda$tryRead$1
		p	1		throwable
	m	(Lcom/mojang/serialization/Dynamic;)I	a	getVersion
		p	0		dynamic
	m	(Ljava/util/Map;Lcom/mojang/serialization/DynamicOps;Ljava/lang/String;Ljava/lang/Object;)V	a	lambda$writeColumn$6
		p	3		object
	m	(Ljava/util/function/BooleanSupplier;)V	a	tick
		p	1		shouldKeepTicking
	m	(J)V	b	onSectionLoad
		p	1		pos
	m	(Lclp;)V	b	readColumn
		p	1		pos
	m	(J)Ljava/util/Optional;	c	get
		p	1		pos
	m	(Lclp;)Ljava/util/concurrent/CompletableFuture;	c	tryRead
		p	1		pos
	m	(J)Ljava/util/Optional;	d	getOrLoad
		p	1		pos
	m	(Lclp;)V	d	writeColumn
		p	1		pos
	m	(J)Z	e	outsideStoredRange
		p	1		pos
	m	(J)Ljava/lang/Object;	f	getOrCreate
		p	1		pos
	m	(J)V	g	lambda$writeColumn$5
	m	(J)V	h	lambda$readColumn$2
	m	(J)V	i	lambda$getOrCreate$0
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/lang/String;	b	SECTIONS_TAG
	f	Lcmk;	c	levelHeightAccessor
	f	Ldeq;	d	worker
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	e	storage
	f	Lit/unimi/dsi/fastutil/longs/LongLinkedOpenHashSet;	f	dirty
	f	Ljava/util/function/Function;	g	codec
	f	Ljava/util/function/Function;	h	factory
	f	Lcom/mojang/datafixers/DataFixer;	i	fixerUpper
	f	Laql;	j	type
	f	Lhr;	k	registryAccess
c	dew	net/minecraft/world/level/chunk/storage/package-info
c	dex	net/minecraft/world/level/dimension/BuiltinDimensionTypes
	m	(Ljava/lang/String;)Ladc;	a	register
		p	0		id
	f	Ladc;	a	OVERWORLD
	f	Ladc;	b	NETHER
	f	Ladc;	c	END
	f	Ladc;	d	OVERWORLD_CAVES
	f	Ladd;	e	OVERWORLD_EFFECTS
	f	Ladd;	f	NETHER_EFFECTS
	f	Ladd;	g	END_EFFECTS
c	dey	net/minecraft/world/level/dimension/DimensionDefaults
	f	I	a	OVERWORLD_MIN_Y
	f	I	b	OVERWORLD_LEVEL_HEIGHT
	f	I	c	OVERWORLD_GENERATION_HEIGHT
	f	I	d	OVERWORLD_LOGICAL_HEIGHT
	f	I	e	NETHER_MIN_Y
	f	I	f	NETHER_LEVEL_HEIGHT
	f	I	g	NETHER_GENERATION_HEIGHT
	f	I	h	NETHER_LOGICAL_HEIGHT
	f	I	i	END_MIN_Y
	f	I	j	END_LEVEL_HEIGHT
	f	I	k	END_GENERATION_HEIGHT
	f	I	l	END_LOGICAL_HEIGHT
c	dez	net/minecraft/world/level/dimension/DimensionType
	m	(Ljava/util/OptionalLong;ZZZZDZZIIILanv;Ladd;FLdez$a;)V	<init>	<init>
		p	1		fixedTime
		p	2		hasSkylight
		p	4		ultrawarm
		p	6		coordinateScale
		p	9		piglinSafe
	m	()Z	a	hasFixedTime
	m	(J)F	a	timeOfDay
		p	1		time
	m	(Ladc;Ljava/nio/file/Path;)Ljava/nio/file/Path;	a	getStorageFolder
		p	0		worldRef
		p	1		worldDirectory
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/DataResult;	a	parseLegacy
		p	0		nbt
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ldez;Ldez;)D	a	getTeleportationScale
		p	0		fromDimension
		p	1		toDimension
	m	()Z	b	piglinSafe
	m	(J)I	b	moonPhase
		p	1		time
	m	()Z	c	hasRaids
	m	()Lbdd;	d	monsterSpawnLightTest
	m	()I	e	monsterSpawnBlockLightLimit
	m	()Ljava/util/OptionalLong;	f	fixedTime
	m	()Z	g	hasSkyLight
	m	()Z	h	hasCeiling
	m	()Z	i	ultraWarm
	m	()Z	j	natural
	m	()D	k	coordinateScale
	m	()Z	l	bedWorks
	m	()Z	m	respawnAnchorWorks
	m	()I	n	minY
	m	()I	o	height
	m	()I	p	logicalHeight
	m	()Lanv;	q	infiniburn
	m	()Ladd;	r	effectsLocation
	m	()F	s	ambientLight
	m	()Ldez$a;	t	monsterSettings
	f	I	a	BITS_FOR_Y
	f	I	b	MIN_HEIGHT
	f	I	c	Y_SIZE
	f	I	d	MAX_Y
	f	I	e	MIN_Y
	f	I	f	WAY_ABOVE_MAX_Y
	f	I	g	WAY_BELOW_MIN_Y
	f	Lcom/mojang/serialization/Codec;	h	DIRECT_CODEC
	f	[F	i	MOON_BRIGHTNESS_PER_PHASE
	f	Lcom/mojang/serialization/Codec;	j	CODEC
	f	Ljava/util/OptionalLong;	k	fixedTime
	f	Z	l	hasSkyLight
	f	Z	m	hasCeiling
	f	Z	n	ultraWarm
	f	Z	o	natural
	f	D	p	coordinateScale
	f	Z	q	bedWorks
	f	Z	r	respawnAnchorWorks
	f	I	s	minY
	f	I	t	height
	f	I	u	logicalHeight
	f	Lanv;	v	infiniburn
	f	Ladd;	w	effectsLocation
	f	F	x	ambientLight
	f	Ldez$a;	y	monsterSettings
	f	I	z	MOON_PHASES
c	dez$a	net/minecraft/world/level/dimension/DimensionType$MonsterSettings
	m	()Z	a	piglinSafe
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Z	b	hasRaids
	m	()Lbdd;	c	monsterSpawnLightTest
	m	()I	d	monsterSpawnBlockLightLimit
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Z	b	piglinSafe
	f	Z	c	hasRaids
	f	Lbdd;	d	monsterSpawnLightTest
	f	I	e	monsterSpawnBlockLightLimit
c	dfa	net/minecraft/world/level/dimension/LevelStem
	m	(Lhd;Lddo;)V	<init>	<init>
		p	1		dimensionTypeEntry
		p	2		chunkGenerator
	m	()Lhd;	a	type
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Lddo;	b	generator
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ladc;	b	OVERWORLD
	f	Ladc;	c	NETHER
	f	Ladc;	d	END
	f	Lhd;	e	type
	f	Lddo;	f	generator
c	dfb	net/minecraft/world/level/dimension/end/DragonRespawnAnimation
	m	()[Ldfb;	a	$values
	m	(Laip;Ldfc;Ljava/util/List;ILgt;)V	a	tick
		p	1		world
		p	2		fight
		p	3		crystals
		p	4		tick
		p	5		pos
	f	Ldfb;	a	START
	f	Ldfb;	b	PREPARING_TO_SUMMON_PILLARS
	f	Ldfb;	c	SUMMONING_PILLARS
	f	Ldfb;	d	SUMMONING_DRAGON
	f	Ldfb;	e	END
	f	[Ldfb;	f	$VALUES
c	dfb$1	net/minecraft/world/level/dimension/end/DragonRespawnAnimation$1
	m	(Laip;Ldfc;Ljava/util/List;ILgt;)V	a	tick
		p	1		world
		p	2		fight
		p	3		crystals
		p	4		tick
		p	5		pos
c	dfb$2	net/minecraft/world/level/dimension/end/DragonRespawnAnimation$2
	m	(Laip;Ldfc;Ljava/util/List;ILgt;)V	a	tick
		p	1		world
		p	2		fight
		p	3		crystals
		p	4		tick
		p	5		pos
c	dfb$3	net/minecraft/world/level/dimension/end/DragonRespawnAnimation$3
	m	(Laip;Ldfc;Ljava/util/List;ILgt;)V	a	tick
		p	1		world
		p	2		fight
		p	3		crystals
		p	4		tick
		p	5		pos
c	dfb$4	net/minecraft/world/level/dimension/end/DragonRespawnAnimation$4
	m	(Laip;Ldfc;Ljava/util/List;ILgt;)V	a	tick
		p	1		world
		p	2		fight
		p	3		crystals
		p	4		tick
		p	5		pos
c	dfb$5	net/minecraft/world/level/dimension/end/DragonRespawnAnimation$5
	m	(Laip;Ldfc;Ljava/util/List;ILgt;)V	a	tick
		p	1		world
		p	2		fight
		p	3		crystals
		p	4		tick
		p	5		pos
c	dfc	net/minecraft/world/level/dimension/end/EndDragonFight
	m	(Laip;JLre;)V	<init>	<init>
		p	1		world
		p	2		gatewaysSeed
		p	4		nbt
	m	()Lre;	a	saveData
	m	(Lbty;Lbem;)V	a	onCrystalDestroyed
		p	1		enderCrystal
		p	2		source
	m	(Lbtz;)V	a	setDragonKilled
		p	1		dragon
	m	(Ldfb;)V	a	setRespawnStage
		p	1		spawnState
	m	(Lgt;)V	a	spawnNewGateway
		p	1		pos
	m	(Lgt;Lhd$c;)V	a	lambda$spawnNewGateway$1
	m	(Lhq;)Ljava/util/Optional;	a	lambda$spawnNewGateway$0
	m	(Ljava/util/List;)V	a	respawnDragon
		p	1		crystals
	m	(Z)V	a	spawnExitPortal
		p	1		previouslyKilled
	m	()V	b	tick
	m	(Lbtz;)V	b	updateDragon
		p	1		dragon
	m	()I	c	getCrystalsAlive
	m	()Z	d	hasPreviouslyKilledDragon
	m	()V	e	tryRespawn
	m	()V	f	resetSpikeCrystals
	m	()V	g	scanState
	m	()V	h	findOrCreateDragon
	m	()Z	i	hasActiveExitPortal
	m	()Ldbv$b;	j	findExitPortal
	m	()Z	k	isArenaLoaded
	m	()V	l	updatePlayers
	m	()V	m	updateCrystalCount
	m	()V	n	spawnNewGateway
	m	()Lbtz;	o	createNewDragon
	f	I	a	ARENA_TICKET_LEVEL
	f	I	b	DRAGON_SPAWN_Y
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	I	d	MAX_TICKS_BEFORE_DRAGON_RESPAWN
	f	I	e	TIME_BETWEEN_CRYSTAL_SCANS
	f	I	f	TIME_BETWEEN_PLAYER_SCANS
	f	I	g	ARENA_SIZE_CHUNKS
	f	I	h	GATEWAY_COUNT
	f	I	i	GATEWAY_DISTANCE
	f	Ljava/util/function/Predicate;	j	VALID_PLAYER
	f	Laim;	k	dragonEvent
	f	Laip;	l	level
	f	Lit/unimi/dsi/fastutil/objects/ObjectArrayList;	m	gateways
	f	Ldbv;	n	exitPortalPattern
	f	I	o	ticksSinceDragonSeen
	f	I	p	crystalsAlive
	f	I	q	ticksSinceCrystalsScanned
	f	I	r	ticksSinceLastPlayerScan
	f	Z	s	dragonKilled
	f	Z	t	previouslyKilled
	f	Ljava/util/UUID;	u	dragonUUID
	f	Z	v	needsStateScanning
	f	Lgt;	w	portalLocation
	f	Ldfb;	x	respawnStage
	f	I	y	respawnTime
	f	Ljava/util/List;	z	respawnCrystals
c	dfd	net/minecraft/world/level/dimension/end/package-info
c	dfe	net/minecraft/world/level/dimension/package-info
c	dff	net/minecraft/world/level/entity/ChunkEntities
	m	(Lclp;Ljava/util/List;)V	<init>	<init>
		p	1		pos
		p	2		list
	m	()Lclp;	a	getPos
	m	()Ljava/util/stream/Stream;	b	getEntities
	m	()Z	c	isEmpty
	f	Lclp;	a	pos
	f	Ljava/util/List;	b	entities
c	dfg	net/minecraft/world/level/entity/ChunkStatusUpdateListener
	m	(Lclp;Laib$c;)V	onChunkStatusChange	onChunkStatusChange
		p	1		pos
		p	2		levelType
c	dfh	net/minecraft/world/level/entity/EntityAccess
	m	(Ldfi;)V	a	setLevelCallback
		p	1		changeListener
	m	()I	af	getId
	m	(Lbfh$c;)V	b	setRemoved
		p	1		reason
	m	()Lecz;	cD	getBoundingBox
	m	()Ljava/util/stream/Stream;	cO	getSelfAndPassengers
	m	()Ljava/util/stream/Stream;	cP	getPassengersAndSelf
	m	()Ljava/util/UUID;	cs	getUUID
	m	()Z	dE	shouldBeSaved
	m	()Z	dF	isAlwaysTicking
	m	()Lgt;	dg	blockPosition
c	dfi	net/minecraft/world/level/entity/EntityInLevelCallback
	m	()V	a	onMove
	m	(Lbfh$c;)V	a	onRemove
		p	1		reason
	f	Ldfi;	a	NULL
c	dfi$1	net/minecraft/world/level/entity/EntityInLevelCallback$1
	m	()V	a	onMove
	m	(Lbfh$c;)V	a	onRemove
		p	1		reason
c	dfj	net/minecraft/world/level/entity/EntityLookup
	m	()Ljava/lang/Iterable;	a	getAllEntities
	m	(I)Ldfh;	a	getEntity
		p	1		id
	m	(Ldfh;)V	a	add
		p	1		entity
	m	(Ldfo;Laob;)V	a	getEntities
		p	1		filter
		p	2		consumer
	m	(Ljava/util/UUID;)Ldfh;	a	getEntity
		p	1		uuid
	m	()I	b	count
	m	(Ldfh;)V	b	remove
		p	1		entity
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	b	byId
	f	Ljava/util/Map;	c	byUuid
c	dfk	net/minecraft/world/level/entity/EntityPersistentStorage
	m	(Lclp;)Ljava/util/concurrent/CompletableFuture;	a	loadEntities
		p	1		pos
	m	(Ldff;)V	a	storeEntities
		p	1		dataList
	m	(Z)V	a	flush
		p	1		sync
c	dfl	net/minecraft/world/level/entity/EntitySection
	m	(Ljava/lang/Class;Ldfu;)V	<init>	<init>
		p	1		entityClass
		p	2		status
	m	()Z	a	isEmpty
	m	(Ldfh;)V	a	add
		p	1		entity
	m	(Ldfo;Lecz;Laob;)Laob$a;	a	getEntities
		p	1		type
		p	2		box
		p	3		consumer
	m	(Ldfu;)Ldfu;	a	updateChunkStatus
		p	1		status
	m	(Lecz;Laob;)Laob$a;	a	getEntities
		p	1		box
		p	2		consumer
	m	()Ljava/util/stream/Stream;	b	getEntities
	m	(Ldfh;)Z	b	remove
		p	1		entity
	m	()Ldfu;	c	getStatus
	m	()I	d	size
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Laof;	b	storage
	f	Ldfu;	c	chunkStatus
c	dfm	net/minecraft/world/level/entity/EntitySectionStorage
	m	(Ljava/lang/Class;Lit/unimi/dsi/fastutil/longs/Long2ObjectFunction;)V	<init>	<init>
		p	1		entityClass
		p	2		chunkStatusDiscriminator
	m	()Lit/unimi/dsi/fastutil/longs/LongSet;	a	getAllChunksWithExistingSections
	m	(II)Lit/unimi/dsi/fastutil/longs/LongSortedSet;	a	getChunkSections
		p	1		chunkX
		p	2		chunkZ
	m	(J)Ljava/util/stream/LongStream;	a	getExistingSectionPositionsInChunk
		p	1		chunkPos
	m	(Ldfo;Lecz;Laob;)V	a	getEntities
		p	1		filter
		p	2		box
		p	3		consumer
	m	(Ldfo;Lecz;Laob;Ldfl;)Laob$a;	a	lambda$getEntities$2
		p	3		section
	m	(Lecz;Laob;)V	a	forEachAccessibleNonEmptySection
		p	1		box
		p	2		consumer
	m	(Lecz;Laob;Ldfl;)Laob$a;	a	lambda$getEntities$1
		p	2		section
	m	(Lit/unimi/dsi/fastutil/longs/LongSet;J)V	a	lambda$getAllChunksWithExistingSections$0
		p	0		trackingSection
		p	1		sectionPos
	m	()I	b	count
	m	(J)Ljava/util/stream/Stream;	b	getExistingSectionsInChunk
		p	1		chunkPos
	m	(Lecz;Laob;)V	b	getEntities
		p	1		box
		p	2		consumer
	m	(J)Ldfl;	c	getOrCreateSection
		p	1		sectionPos
	m	(J)Ldfl;	d	getSection
		p	1		sectionPos
	m	(J)V	e	remove
		p	1		sectionPos
	m	(J)J	f	getChunkKeyFromSectionKey
		p	0		sectionPos
	m	(J)Ldfl;	g	createSection
		p	1		sectionPos
	f	Ljava/lang/Class;	a	entityClass
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectFunction;	b	intialSectionVisibility
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	c	sections
	f	Lit/unimi/dsi/fastutil/longs/LongSortedSet;	d	sectionIds
c	dfn	net/minecraft/world/level/entity/EntityTickList
	m	()V	a	ensureActiveIsNotIterated
	m	(Lbfh;)V	a	add
		p	1		entity
	m	(Ljava/util/function/Consumer;)V	a	forEach
		p	1		action
	m	(Lbfh;)V	b	remove
		p	1		entity
	m	(Lbfh;)Z	c	contains
		p	1		entity
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	a	active
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	b	passive
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	c	iterated
c	dfo	net/minecraft/world/level/entity/EntityTypeTest
	m	()Ljava/lang/Class;	a	getBaseClass
	m	(Ljava/lang/Class;)Ldfo;	a	forClass
		p	0		cls
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	tryCast
		p	1		obj
c	dfo$1	net/minecraft/world/level/entity/EntityTypeTest$1
	m	()Ljava/lang/Class;	a	getBaseClass
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	tryCast
		p	1		obj
	f	Ljava/lang/Class;	a	val$cls
c	dfp	net/minecraft/world/level/entity/LevelCallback
	m	(Ljava/lang/Object;)V	a	onSectionChange
		p	1		entity
	m	(Ljava/lang/Object;)V	b	onTrackingEnd
		p	1		entity
	m	(Ljava/lang/Object;)V	c	onTrackingStart
		p	1		entity
	m	(Ljava/lang/Object;)V	d	onTickingEnd
		p	1		entity
	m	(Ljava/lang/Object;)V	e	onTickingStart
		p	1		entity
	m	(Ljava/lang/Object;)V	f	onDestroyed
		p	1		entity
	m	(Ljava/lang/Object;)V	g	onCreated
		p	1		entity
c	dfq	net/minecraft/world/level/entity/LevelEntityGetter
	m	()Ljava/lang/Iterable;	a	getAll
	m	(I)Ldfh;	a	get
		p	1		id
	m	(Ldfo;Laob;)V	a	get
		p	1		filter
		p	2		consumer
	m	(Ldfo;Lecz;Laob;)V	a	get
		p	1		filter
		p	2		box
		p	3		consumer
	m	(Lecz;Ljava/util/function/Consumer;)V	a	get
		p	1		box
		p	2		action
	m	(Ljava/util/UUID;)Ldfh;	a	get
		p	1		uuid
c	dfr	net/minecraft/world/level/entity/LevelEntityGetterAdapter
	m	(Ldfj;Ldfm;)V	<init>	<init>
		p	1		index
		p	2		cache
	m	()Ljava/lang/Iterable;	a	getAll
	m	(I)Ldfh;	a	get
		p	1		id
	m	(Ldfo;Laob;)V	a	get
		p	1		filter
		p	2		consumer
	m	(Ldfo;Lecz;Laob;)V	a	get
		p	1		filter
		p	2		box
		p	3		consumer
	m	(Lecz;Ljava/util/function/Consumer;)V	a	get
		p	1		box
		p	2		action
	m	(Ljava/util/UUID;)Ldfh;	a	get
		p	1		uuid
	f	Ldfj;	a	visibleEntities
	f	Ldfm;	b	sectionStorage
c	dfs	net/minecraft/world/level/entity/PersistentEntitySectionManager
	m	(Ljava/lang/Class;Ldfp;Ldfk;)V	<init>	<init>
		p	1		entityClass
		p	2		handler
		p	3		dataAccess
	m	()V	a	tick
	m	(J)Z	a	areEntitiesLoaded
		p	1		chunkPos
	m	(JLdfl;)V	a	removeSectionIfEmpty
		p	1		sectionPos
		p	3		section
	m	(JLjava/util/function/Consumer;)Z	a	storeChunkSections
		p	1		chunkPos
		p	3		action
	m	(Laol;J)V	a	lambda$dumpSections$17
		p	2		chunkPos
	m	(Laol;Ldfs$b;J)V	a	lambda$dumpSections$16
		p	3		sectionPos
	m	(Lclp;)Z	a	canPositionTick
		p	1		pos
	m	(Lclp;Laib$c;)V	a	updateChunkStatus
		p	1		chunkPos
		p	2		levelType
	m	(Lclp;Ldfu;)V	a	updateChunkStatus
		p	1		chunkPos
		p	2		trackingStatus
	m	(Lclp;Ljava/lang/Throwable;)Ljava/lang/Void;	a	lambda$requestChunkLoad$8
		p	1		throwable
	m	(Ldfh;)Z	a	addNewEntity
		p	1		entity
	m	(Ldfh;Ldfu;)Ldfu;	a	getEffectiveStatus
		p	0		entity
		p	1		current
	m	(Ldfh;Z)Z	a	addEntity
		p	1		entity
		p	2		existing
	m	(Ldfl;)Ljava/util/stream/Stream;	a	lambda$storeChunkSections$7
		p	0		section
	m	(Ldfu;Ldfl;)V	a	lambda$updateChunkStatus$6
		p	2		group
	m	(Lgt;)Z	a	canPositionTick
		p	1		pos
	m	(Ljava/io/Writer;)V	a	dumpSections
		p	1		writer
	m	(Ljava/util/UUID;)Z	a	isLoaded
		p	1		uuid
	m	(Ljava/util/stream/Stream;)V	a	addLegacyChunkEntities
		p	1		entities
	m	()V	b	autoSave
	m	(J)V	b	ensureChunkQueuedForLoad
		p	1		chunkPos
	m	(Ldfh;)Z	b	addEntityUuid
		p	1		entity
	m	(Ljava/util/stream/Stream;)V	b	addWorldGenChunkEntities
		p	1		entities
	m	()V	c	saveAll
	m	(J)V	c	requestChunkLoad
		p	1		chunkPos
	m	(Ldfh;)V	c	startTicking
		p	1		entity
	m	()Ldfq;	d	getEntityGetter
	m	(J)Z	d	processChunkUnload
		p	1		chunkPos
	m	(Ldfh;)V	d	stopTicking
		p	1		entity
	m	()Ljava/lang/String;	e	gatherStats
	m	(J)Z	e	lambda$saveAll$15
		p	1		pos
	m	(Ldfh;)V	e	startTracking
		p	1		entity
	m	()V	f	processUnloads
	m	(J)V	f	lambda$autoSave$13
		p	1		pos
	m	(Ldfh;)V	f	stopTracking
		p	1		entity
	m	()V	g	processPendingLoads
	m	(J)Z	g	lambda$processUnloads$10
		p	1		pos
	m	(Ldfh;)V	g	unloadEntity
		p	1		entity
	m	()Lit/unimi/dsi/fastutil/longs/LongSet;	h	getAllChunksToSave
	m	(Ldfh;)V	h	lambda$saveAll$14
		p	0		entity
	m	(Ldfh;)V	i	lambda$autoSave$12
		p	0		entity
	m	(Ldfh;)V	j	lambda$processPendingLoads$11
		p	1		entity
	m	(Ldfh;)V	k	lambda$processChunkUnload$9
		p	1		entity
	m	(Ldfh;)Z	l	lambda$updateChunkStatus$5
		p	0		entity
	m	(Ldfh;)Z	m	lambda$updateChunkStatus$4
		p	0		entity
	m	(Ldfh;)Z	n	lambda$updateChunkStatus$3
		p	0		entity
	m	(Ldfh;)Z	o	lambda$updateChunkStatus$2
		p	0		entity
	m	(Ldfh;)V	p	lambda$addWorldGenChunkEntities$1
		p	1		entity
	m	(Ldfh;)V	q	lambda$addLegacyChunkEntities$0
		p	1		entity
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/Set;	b	knownUuids
	f	Ldfp;	c	callbacks
	f	Ldfk;	d	permanentStorage
	f	Ldfj;	e	visibleEntityStorage
	f	Ldfm;	f	sectionStorage
	f	Ldfq;	g	entityGetter
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	h	chunkVisibility
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	i	chunkLoadStatuses
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	j	chunksToUnload
	f	Ljava/util/Queue;	k	loadingInbox
c	dfs$a	net/minecraft/world/level/entity/PersistentEntitySectionManager$Callback
	m	(Ldfs;Ldfh;JLdfl;)V	<init>	<init>
		p	2		entity
		p	3		sectionPos
		p	5		section
	m	()V	a	onMove
	m	(Lbfh$c;)V	a	onRemove
		p	1		reason
	m	(Ldfu;Ldfu;)V	a	updateStatus
		p	1		oldStatus
		p	2		newStatus
	f	Ldfs;	b	this$0
	f	Ldfh;	c	entity
	f	J	d	currentSectionKey
	f	Ldfl;	e	currentSection
c	dfs$b	net/minecraft/world/level/entity/PersistentEntitySectionManager$ChunkLoadStatus
	m	()[Ldfs$b;	a	$values
	f	Ldfs$b;	a	FRESH
	f	Ldfs$b;	b	PENDING
	f	Ldfs$b;	c	LOADED
	f	[Ldfs$b;	d	$VALUES
c	dft	net/minecraft/world/level/entity/TransientEntitySectionManager
	m	(Ljava/lang/Class;Ldfp;)V	<init>	<init>
		p	1		entityClass
		p	2		handler
	m	()Ldfq;	a	getEntityGetter
	m	(J)Ldfu;	a	lambda$new$0
		p	1		pos
	m	(JLdfl;)V	a	removeSectionIfEmpty
		p	1		packedChunkSection
		p	3		entities
	m	(Lclp;)V	a	startTicking
		p	1		pos
	m	(Ldfh;)V	a	addEntity
		p	1		entity
	m	(Ldfl;)V	a	lambda$stopTicking$4
		p	1		sections
	m	()I	b	count
	m	(Lclp;)V	b	stopTicking
		p	1		pos
	m	(Ldfh;)Z	b	lambda$stopTicking$3
		p	0		e
	m	(Ldfl;)V	b	lambda$startTicking$2
		p	1		sections
	m	()Ljava/lang/String;	c	gatherStats
	m	(Ldfh;)Z	c	lambda$startTicking$1
		p	0		e
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ldfp;	b	callbacks
	f	Ldfj;	c	entityStorage
	f	Ldfm;	d	sectionStorage
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	e	tickingChunks
	f	Ldfq;	f	entityGetter
c	dft$a	net/minecraft/world/level/entity/TransientEntitySectionManager$Callback
	m	(Ldft;Ldfh;JLdfl;)V	<init>	<init>
		p	2		entity
		p	3		pos
		p	5		section
	m	()V	a	onMove
	m	(Lbfh$c;)V	a	onRemove
		p	1		reason
	f	Ldft;	b	this$0
	f	Ldfh;	c	entity
	f	J	d	currentSectionKey
	f	Ldfl;	e	currentSection
c	dfu	net/minecraft/world/level/entity/Visibility
	m	(Ljava/lang/String;IZZ)V	<init>	<init>
		p	3		tracked
		p	4		tick
	m	()Z	a	isTicking
	m	(Laib$c;)Ldfu;	a	fromFullChunkStatus
		p	0		levelType
	m	()Z	b	isAccessible
	m	()[Ldfu;	c	$values
	f	Ldfu;	a	HIDDEN
	f	Ldfu;	b	TRACKED
	f	Ldfu;	c	TICKING
	f	Z	d	accessible
	f	Z	e	ticking
	f	[Ldfu;	f	$VALUES
c	dfv	net/minecraft/world/level/entity/package-info
c	dfw	net/minecraft/world/level/gameevent/BlockPositionSource
	m	(Lgt;)V	<init>	<init>
		p	1		pos
	m	()Ldgf;	a	getType
	m	(Lcmi;)Ljava/util/Optional;	a	getPosition
		p	1		world
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Ldfw;)Lgt;	a	lambda$static$0
		p	0		blockPositionSource
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lgt;	c	pos
c	dfw$a	net/minecraft/world/level/gameevent/BlockPositionSource$Type
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Lss;)Ldfw;	a	read
	m	(Lss;Ldfw;)V	a	write
		p	1		buf
		p	2		positionSource
	m	(Lss;Ldge;)V	a	write
		p	1		buf
		p	2		positionSource
	m	(Lss;)Ldge;	b	read
		p	1		buf
c	dfx	net/minecraft/world/level/gameevent/DynamicGameEventListener
	m	(Ldgc;)V	<init>	<init>
		p	1		listener
	m	()Ldgc;	a	getListener
	m	(Laip;)V	a	add
		p	1		world
	m	(Laip;Lhw;)V	a	lambda$move$5
		p	2		sectionPos
	m	(Lcml;Lhw;Ljava/util/function/Consumer;)V	a	ifChunkExists
		p	0		world
		p	1		sectionPos
		p	2		dispatcherConsumer
	m	(Ldgc;Lcmi;)V	a	updateListener
		p	1		listener
		p	2		world
	m	(Ldgc;Ldgd;)V	a	lambda$updateListener$1
		p	1		dispatcher
	m	(Ldgd;)V	a	lambda$move$4
		p	1		dispatcher
	m	(Laip;)V	b	remove
		p	1		world
	m	(Ldgc;Ldgd;)V	b	lambda$updateListener$0
		p	1		dispatcher
	m	(Ldgd;)V	b	lambda$move$3
		p	1		dispatcher
	m	(Laip;)V	c	move
		p	1		world
	m	(Ldgd;)V	c	lambda$remove$2
		p	1		dispatcher
	f	Ldgc;	a	listener
	f	Lhw;	b	lastSection
c	dfy	net/minecraft/world/level/gameevent/EntityPositionSource
	m	(Lbfh;F)V	<init>	<init>
		p	1		entity
		p	2		yOffset
	m	(Lcom/mojang/datafixers/util/Either;F)V	<init>	<init>
		p	1		source
		p	2		yOffset
	m	()Ldgf;	a	getType
	m	(Lbfh;)V	a	lambda$resolveEntity$6
		p	1		entity
	m	(Lcmi;)Ljava/util/Optional;	a	getPosition
		p	1		world
	m	(Lcmi;Lcom/mojang/datafixers/util/Either;)Ljava/util/Optional;	a	lambda$resolveEntity$5
		p	1		entityId
	m	(Lcmi;Ljava/util/UUID;)Lbfh;	a	lambda$resolveEntity$4
		p	1		uuid
	m	(Lcom/mojang/datafixers/util/Either;)Ljava/lang/Integer;	a	lambda$getId$10
		p	0		entityId
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Ldfy;)Ljava/lang/Float;	a	lambda$static$0
		p	0		entityPositionSource
	m	(Ljava/lang/Integer;)Ljava/util/UUID;	a	lambda$getUuid$7
		p	0		entityId
	m	(Ljava/util/UUID;)Ljava/lang/Integer;	a	lambda$getId$9
		p	0		uuid
	m	(Ljava/util/UUID;Ljava/lang/Float;)Ldfy;	a	lambda$static$1
		p	0		uuid
		p	1		yOffset
	m	()Ljava/util/UUID;	b	getUuid
	m	(Lbfh;)Lede;	b	lambda$getPosition$3
		p	1		entity
	m	(Lcmi;)V	b	resolveEntity
		p	1		world
	m	(Lcom/mojang/datafixers/util/Either;)Ljava/util/UUID;	b	lambda$getUuid$8
		p	0		entityId
	m	()I	c	getId
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcom/mojang/datafixers/util/Either;	c	entityOrUuidOrId
	f	F	d	yOffset
c	dfy$a	net/minecraft/world/level/gameevent/EntityPositionSource$Type
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Lss;)Ldfy;	a	read
	m	(Lss;Ldfy;)V	a	write
		p	1		buf
		p	2		positionSource
	m	(Lss;Ldge;)V	a	write
		p	1		buf
		p	2		positionSource
	m	(Lss;)Ldge;	b	read
		p	1		buf
c	dfz	net/minecraft/world/level/gameevent/EuclideanGameEventListenerRegistry
	m	(Laip;)V	<init>	<init>
		p	1		world
	m	()Z	a	isEmpty
	m	(Laip;Lede;Ldgc;)Ljava/util/Optional;	a	getPostableListenerPosition
		p	0		world
		p	1		listenerPos
		p	2		listener
	m	(Ldga;Lede;Ldga$a;Ldgd$a;)Z	a	visitInRangeListeners
		p	1		event
		p	2		pos
		p	3		emitter
		p	4		callback
	m	(Ldgc;)V	a	register
		p	1		listener
	m	(Ldgc;)V	b	unregister
		p	1		listener
	f	Ljava/util/List;	b	listeners
	f	Ljava/util/Set;	c	listenersToRemove
	f	Ljava/util/List;	d	listenersToAdd
	f	Z	e	processing
	f	Laip;	f	level
c	dga	net/minecraft/world/level/gameevent/GameEvent
	m	(Ljava/lang/String;I)V	<init>	<init>
		p	1		id
		p	2		range
	m	()Ljava/lang/String;	a	getName
	m	(Lanv;)Z	a	is
		p	1		tag
	m	(Ljava/lang/String;)Ldga;	a	register
		p	0		id
	m	(Ljava/lang/String;I)Ldga;	a	register
		p	0		id
		p	1		range
	m	()I	b	getNotificationRadius
	m	()Lhd$c;	c	builtInRegistryHolder
	f	Ldga;	A	FLUID_PICKUP
	f	Ldga;	B	FLUID_PLACE
	f	Ldga;	C	HIT_GROUND
	f	Ldga;	D	INSTRUMENT_PLAY
	f	Ldga;	E	ITEM_INTERACT_FINISH
	f	Ldga;	F	ITEM_INTERACT_START
	f	Ldga;	G	JUKEBOX_PLAY
	f	Ldga;	H	JUKEBOX_STOP_PLAY
	f	Ldga;	I	LIGHTNING_STRIKE
	f	Ldga;	J	NOTE_BLOCK_PLAY
	f	Ldga;	K	PISTON_CONTRACT
	f	Ldga;	L	PISTON_EXTEND
	f	Ldga;	M	PRIME_FUSE
	f	Ldga;	N	PROJECTILE_LAND
	f	Ldga;	O	PROJECTILE_SHOOT
	f	Ldga;	P	SCULK_SENSOR_TENDRILS_CLICKING
	f	Ldga;	Q	SHEAR
	f	Ldga;	R	SHRIEK
	f	Ldga;	S	SPLASH
	f	Ldga;	T	STEP
	f	Ldga;	U	SWIM
	f	Ldga;	V	TELEPORT
	f	I	W	DEFAULT_NOTIFICATION_RADIUS
	f	Ljava/lang/String;	X	name
	f	I	Y	notificationRadius
	f	Lhd$c;	Z	builtInRegistryHolder
	f	Ldga;	a	BLOCK_ACTIVATE
	f	Ldga;	b	BLOCK_ATTACH
	f	Ldga;	c	BLOCK_CHANGE
	f	Ldga;	d	BLOCK_CLOSE
	f	Ldga;	e	BLOCK_DEACTIVATE
	f	Ldga;	f	BLOCK_DESTROY
	f	Ldga;	g	BLOCK_DETACH
	f	Ldga;	h	BLOCK_OPEN
	f	Ldga;	i	BLOCK_PLACE
	f	Ldga;	j	CONTAINER_CLOSE
	f	Ldga;	k	CONTAINER_OPEN
	f	Ldga;	l	DISPENSE_FAIL
	f	Ldga;	m	DRINK
	f	Ldga;	n	EAT
	f	Ldga;	o	ELYTRA_GLIDE
	f	Ldga;	p	ENTITY_DAMAGE
	f	Ldga;	q	ENTITY_DIE
	f	Ldga;	r	ENTITY_DISMOUNT
	f	Ldga;	s	ENTITY_INTERACT
	f	Ldga;	t	ENTITY_MOUNT
	f	Ldga;	u	ENTITY_PLACE
	f	Ldga;	v	ENTITY_ROAR
	f	Ldga;	w	ENTITY_SHAKE
	f	Ldga;	x	EQUIP
	f	Ldga;	y	EXPLODE
	f	Ldga;	z	FLAP
c	dga$a	net/minecraft/world/level/gameevent/GameEvent$Context
	m	()Lbfh;	a	sourceEntity
	m	(Lbfh;)Ldga$a;	a	of
		p	0		sourceEntity
	m	(Lbfh;Ldbq;)Ldga$a;	a	of
		p	0		sourceEntity
		p	1		affectedState
	m	(Ldbq;)Ldga$a;	a	of
		p	0		affectedState
	m	()Ldbq;	b	affectedState
	f	Lbfh;	a	sourceEntity
	f	Ldbq;	b	affectedState
c	dga$b	net/minecraft/world/level/gameevent/GameEvent$ListenerInfo
	m	(Ldga;Lede;Ldga$a;Ldgc;Lede;)V	<init>	<init>
		p	1		event
		p	2		emitterPos
		p	3		emitter
		p	4		listener
		p	5		listenerPos
	m	()Ldga;	a	gameEvent
	m	(Ldga$b;)I	a	compareTo
	m	()Lede;	b	source
	m	()Ldga$a;	c	context
	m	()Ldgc;	d	recipient
	f	Ldga;	a	gameEvent
	f	Lede;	b	source
	f	Ldga$a;	c	context
	f	Ldgc;	d	recipient
	f	D	e	distanceToRecipient
c	dgb	net/minecraft/world/level/gameevent/GameEventDispatcher
	m	(Laip;)V	<init>	<init>
		p	1		world
	m	(Ldga;Lede;Ldga$a;)V	a	post
		p	1		event
		p	2		emitterPos
		p	3		emitter
	m	(Ljava/util/List;)V	a	handleGameEventMessagesInQueue
		p	1		messages
	m	(Ljava/util/List;Ldga;Lede;Ldga$a;Ldgc;Lede;)V	a	lambda$post$0
		p	5		listener
		p	6		listenerPos
	f	Laip;	a	level
c	dgc	net/minecraft/world/level/gameevent/GameEventListener
	m	()Ldge;	a	getListenerSource
	m	(Laip;Ldga;Ldga$a;Lede;)Z	a	handleGameEvent
		p	1		world
		p	2		event
		p	3		emitter
		p	4		emitterPos
	m	()I	b	getListenerRadius
	m	()Ldgc$a;	c	getDeliveryMode
c	dgc$a	net/minecraft/world/level/gameevent/GameEventListener$DeliveryMode
	m	()[Ldgc$a;	a	$values
	f	Ldgc$a;	a	UNSPECIFIED
	f	Ldgc$a;	b	BY_DISTANCE
	f	[Ldgc$a;	c	$VALUES
c	dgd	net/minecraft/world/level/gameevent/GameEventListenerRegistry
	m	()Z	a	isEmpty
	m	(Ldga;Lede;Ldga$a;Ldgd$a;)Z	a	visitInRangeListeners
		p	1		event
		p	2		pos
		p	3		emitter
		p	4		callback
	m	(Ldgc;)V	a	register
		p	1		listener
	m	(Ldgc;)V	b	unregister
		p	1		listener
	f	Ldgd;	a	NOOP
c	dgd$1	net/minecraft/world/level/gameevent/GameEventListenerRegistry$1
	m	()Z	a	isEmpty
	m	(Ldga;Lede;Ldga$a;Ldgd$a;)Z	a	visitInRangeListeners
		p	1		event
		p	2		pos
		p	3		emitter
		p	4		callback
	m	(Ldgc;)V	a	register
		p	1		listener
	m	(Ldgc;)V	b	unregister
		p	1		listener
c	dgd$a	net/minecraft/world/level/gameevent/GameEventListenerRegistry$ListenerVisitor
	m	(Ldgc;Lede;)V	visit	visit
		p	1		listener
		p	2		listenerPos
c	dge	net/minecraft/world/level/gameevent/PositionSource
	m	()Ldgf;	a	getType
	m	(Lcmi;)Ljava/util/Optional;	a	getPosition
		p	1		world
	f	Lcom/mojang/serialization/Codec;	b	CODEC
c	dgf	net/minecraft/world/level/gameevent/PositionSourceType
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Ladd;)Ljava/lang/IllegalArgumentException;	a	lambda$fromNetwork$0
	m	(Ldge;Lss;)V	a	toNetwork
		p	0		positionSource
		p	1		buf
	m	(Ljava/lang/String;Ldgf;)Ldgf;	a	register
		p	0		id
		p	1		positionSourceType
	m	(Lss;Ldge;)V	a	write
		p	1		buf
		p	2		positionSource
	m	(Lss;)Ldge;	b	read
		p	1		buf
	m	(Lss;)Ldge;	c	fromNetwork
		p	0		buf
	f	Ldgf;	a	BLOCK
	f	Ldgf;	b	ENTITY
c	dgg	net/minecraft/world/level/gameevent/package-info
c	dgh	net/minecraft/world/level/gameevent/vibrations/VibrationInfo
	m	(Ldga;FLede;Lbfh;)V	<init>	<init>
		p	1		gameEvent
		p	2		distance
		p	3		pos
		p	4		entity
	m	(Ldga;FLede;Ljava/util/UUID;Ljava/util/UUID;)V	<init>	<init>
		p	1		gameEvent
		p	2		distance
		p	3		pos
		p	4		uuid
		p	5		projectileOwnerUuid
	m	()Ldga;	a	gameEvent
	m	(Laip;)Ljava/util/Optional;	a	getEntity
		p	1		world
	m	(Lbfh;)Ljava/util/UUID;	a	getProjectileOwner
		p	0		entity
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	(Ldga;Ljava/lang/Float;Lede;Ljava/util/Optional;Ljava/util/Optional;)Ldgh;	a	lambda$static$2
		p	0		event
		p	1		distance
		p	2		pos
		p	3		uuid
		p	4		projectileOwnerUuid
	m	(Ldgh;)Ljava/util/Optional;	a	lambda$static$1
		p	0		vibration
	m	()F	b	distance
	m	(Laip;)Ljava/util/Optional;	b	getProjectileOwner
		p	1		world
	m	(Lbfh;)Lbze;	b	lambda$getProjectileOwner$6
		p	0		entity
	m	(Ldgh;)Ljava/util/Optional;	b	lambda$static$0
		p	0		vibration
	m	()Lede;	c	pos
	m	(Laip;)Ljava/util/Optional;	c	lambda$getProjectileOwner$7
	m	(Lbfh;)Z	c	lambda$getProjectileOwner$5
		p	0		entity
	m	()Ljava/util/UUID;	d	uuid
	m	(Laip;)Ljava/util/Optional;	d	lambda$getEntity$4
	m	()Ljava/util/UUID;	e	projectileOwnerUuid
	m	()Lbfh;	f	entity
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldga;	b	gameEvent
	f	F	c	distance
	f	Lede;	d	pos
	f	Ljava/util/UUID;	e	uuid
	f	Ljava/util/UUID;	f	projectileOwnerUuid
	f	Lbfh;	g	entity
c	dgi	net/minecraft/world/level/gameevent/vibrations/VibrationListener
	m	(Ldge;ILdgi$a;)V	<init>	<init>
		p	1		positionSource
		p	2		range
		p	3		callback
	m	(Ldge;ILdgi$a;Ldgh;Ldgj;I)V	<init>	<init>
		p	1		positionSource
		p	2		range
		p	3		callback
		p	4		vibration
		p	5		selector
		p	6		delay
	m	()Ldge;	a	getListenerSource
	m	(Laip;Ldga;Ldga$a;Lede;)Z	a	handleGameEvent
		p	1		world
		p	2		event
		p	3		emitter
		p	4		emitterPos
	m	(Laip;Ldga;Ldga$a;Lede;Lede;)V	a	scheduleVibration
		p	1		world
		p	2		event
		p	3		emitter
		p	4		emitterPos
		p	5		listenerPos
	m	(Laip;Ldgh;)V	a	lambda$tick$8
		p	2		vibration
	m	(Lcmi;)V	a	tick
		p	1		world
	m	(Lcmi;Lede;Lede;)Z	a	isOccluded
		p	0		world
		p	1		start
		p	2		end
	m	(Ldbq;)Z	a	lambda$isOccluded$10
		p	0		state
	m	(Ldga;)I	a	getGameEventFrequency
		p	0		event
	m	(Ldgi$a;)Lcom/mojang/serialization/Codec;	a	codec
		p	0		callback
	m	(Ldgi$a;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$codec$6
		p	1		instance
	m	(Ldgi$a;Ldge;Ljava/lang/Integer;Ljava/util/Optional;Ldgj;Ljava/lang/Integer;)Ldgi;	a	lambda$codec$5
		p	1		positionSource
		p	2		range
		p	3		vibration
		p	4		selector
		p	5		delay
	m	(Ldgi;)Ljava/lang/Integer;	a	lambda$codec$4
		p	0		listener
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;)V	a	lambda$static$7
		p	0		frequencies
	m	()I	b	getListenerRadius
	m	(Laip;Ldga;Ldga$a;Lede;)V	b	forceGameEvent
		p	1		world
		p	2		event
		p	3		emitter
		p	4		emitterPos
	m	(Laip;Ldga;Ldga$a;Lede;Lede;)V	b	lambda$forceGameEvent$9
		p	5		listenerPos
	m	(Ldgi;)Ldgj;	b	lambda$codec$3
		p	0		listener
	m	(Ldgi;)Ljava/util/Optional;	c	lambda$codec$2
		p	0		listener
	m	(Ldgi;)Ljava/lang/Integer;	d	lambda$codec$1
		p	0		listener
	m	(Ldgi;)Ldge;	e	lambda$codec$0
		p	0		listener
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	a	VIBRATION_FREQUENCY_FOR_EVENT
	f	Ldge;	b	listenerSource
	f	I	c	listenerRange
	f	Ldgi$a;	d	config
	f	Ldgh;	e	currentVibration
	f	I	f	travelTimeInTicks
	f	Ldgj;	g	selectionStrategy
c	dgi$a	net/minecraft/world/level/gameevent/vibrations/VibrationListener$VibrationListenerConfig
	m	()Lanv;	a	getListenableEvents
	m	(Laip;Ldgc;Lgt;Ldga;Lbfh;Lbfh;F)V	a	onSignalReceive
		p	1		world
		p	2		listener
		p	3		pos
		p	4		event
		p	5		entity
		p	6		sourceEntity
		p	7		distance
	m	(Laip;Ldgc;Lgt;Ldga;Ldga$a;)Z	a	shouldListen
		p	1		world
		p	2		listener
		p	3		pos
		p	4		event
		p	5		emitter
	m	(Ldga;Ldga$a;)Z	a	isValidVibration
		p	1		gameEvent
		p	2		emitter
	m	()V	f	onSignalSchedule
	m	()Z	w	canTriggerAvoidVibration
c	dgj	net/minecraft/world/level/gameevent/vibrations/VibrationSelector
	m	(Ljava/util/Optional;J)V	<init>	<init>
		p	1		vibration
		p	2		tick
	m	()V	a	startOver
	m	(J)Ljava/util/Optional;	a	chosenCandidate
		p	1		currentTick
	m	(JLdgh;)Lorg/apache/commons/lang3/tuple/Pair;	a	lambda$new$3
		p	2		vibration2
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Ldgh;J)V	a	addCandidate
		p	1		vibration
		p	2		tick
	m	(Ldgj;)Ljava/lang/Long;	a	lambda$static$1
	m	(Ldgh;J)Z	b	shouldReplaceVibration
		p	1		vibration
		p	2		tick
	m	(Ldgj;)Ljava/util/Optional;	b	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Optional;	b	currentVibrationData
c	dgk	net/minecraft/world/level/gameevent/vibrations/package-info
c	dgl	net/minecraft/world/level/levelgen/Aquifer
	m	()Z	a	shouldScheduleFluidUpdate
	m	(Ldgl$a;)Ldgl;	a	createDisabled
		p	0		fluidLevelSampler
	m	(Ldgs$b;D)Ldbq;	a	computeSubstance
		p	1		pos
		p	2		density
	m	(Ldhd;Lclp;Ldhf;Ldhm;IILdgl$a;)Ldgl;	a	create
		p	0		chunkNoiseSampler
		p	1		chunkPos
		p	2		noiseRouter
		p	3		randomSplitter
		p	4		minimumY
		p	5		height
		p	6		fluidLevelSampler
c	dgl$1	net/minecraft/world/level/levelgen/Aquifer$1
	m	()Z	a	shouldScheduleFluidUpdate
	m	(Ldgs$b;D)Ldbq;	a	computeSubstance
		p	1		pos
		p	2		density
	f	Ldgl$a;	a	val$fluidRule
c	dgl$a	net/minecraft/world/level/levelgen/Aquifer$FluidPicker
	m	(III)Ldgl$b;	computeFluid	computeFluid
		p	1		x
		p	2		y
		p	3		z
c	dgl$b	net/minecraft/world/level/levelgen/Aquifer$FluidStatus
	m	(ILdbq;)V	<init>	<init>
		p	1		y
		p	2		state
	m	(I)Ldbq;	a	at
		p	1		y
	f	I	a	fluidLevel
	f	Ldbq;	b	fluidType
c	dgl$c	net/minecraft/world/level/levelgen/Aquifer$NoiseBasedAquifer
	m	(Ldhd;Lclp;Ldhf;Ldhm;IILdgl$a;)V	<init>	<init>
		p	1		chunkNoiseSampler
		p	2		chunkPos
		p	3		noiseRouter
		p	4		randomSplitter
		p	5		minimumY
		p	6		height
		p	7		fluidLevelSampler
	m	()Z	a	shouldScheduleFluidUpdate
	m	(I)I	a	gridX
		p	1		x
	m	(II)D	a	similarity
		p	1		a
	m	(III)I	a	getIndex
		p	1		x
		p	2		y
		p	3		z
	m	(IIII)I	a	computeRandomizedFluidSurfaceLevel
		p	1		blockX
		p	2		blockY
		p	3		blockZ
		p	4		surfaceHeightEstimate
	m	(IIILdgl$b;I)Ldbq;	a	computeFluidType
		p	1		blockX
		p	2		blockY
		p	3		blockZ
		p	4		defaultFluidLevel
		p	5		fluidLevel
	m	(IIILdgl$b;IZ)I	a	computeSurfaceLevel
		p	1		blockX
		p	2		blockY
		p	3		blockZ
		p	4		defaultFluidLevel
		p	5		surfaceHeightEstimate
	m	(J)Ldgl$b;	a	getAquiferStatus
		p	1		pos
	m	(Ldgs$b;D)Ldbq;	a	computeSubstance
		p	1		pos
		p	2		density
	m	(Ldgs$b;Lorg/apache/commons/lang3/mutable/MutableDouble;Ldgl$b;Ldgl$b;)D	a	calculatePressure
		p	1		pos
	m	(I)I	b	gridY
		p	1		y
	m	(III)Ldgl$b;	b	computeFluid
		p	1		blockX
		p	2		blockY
		p	3		blockZ
	m	(I)I	c	gridZ
		p	1		z
	f	I	A	gridSizeX
	f	I	B	gridSizeZ
	f	[[I	C	SURFACE_SAMPLING_OFFSETS_IN_CHUNKS
	f	I	a	X_RANGE
	f	I	b	Y_RANGE
	f	I	c	Z_RANGE
	f	I	d	X_SEPARATION
	f	I	e	Y_SEPARATION
	f	I	f	Z_SEPARATION
	f	I	g	X_SPACING
	f	I	h	Y_SPACING
	f	I	i	Z_SPACING
	f	I	j	MAX_REASONABLE_DISTANCE_TO_AQUIFER_CENTER
	f	D	k	FLOWING_UPDATE_SIMULARITY
	f	Ldhd;	l	noiseChunk
	f	Ldgs;	m	barrierNoise
	f	Ldgs;	n	fluidLevelFloodednessNoise
	f	Ldgs;	o	fluidLevelSpreadNoise
	f	Ldgs;	p	lavaNoise
	f	Ldhm;	q	positionalRandomFactory
	f	[Ldgl$b;	r	aquiferCache
	f	[J	s	aquiferLocationCache
	f	Ldgl$a;	t	globalFluidPicker
	f	Ldgs;	u	erosion
	f	Ldgs;	v	depth
	f	Z	w	shouldScheduleFluidUpdate
	f	I	x	minGridX
	f	I	y	minGridY
	f	I	z	minGridZ
c	dgm	net/minecraft/world/level/levelgen/Beardifier
	m	(Lit/unimi/dsi/fastutil/objects/ObjectListIterator;Lit/unimi/dsi/fastutil/objects/ObjectListIterator;)V	<init>	<init>
		p	1		pieceIterator
		p	2		junctionIterator
	m	()D	a	minValue
	m	(I)Z	a	isInKernelRange
	m	(IDI)D	a	computeBeardContribution
	m	(III)D	a	getBuryContribution
		p	0		x
		p	1		y
		p	2		z
	m	(IIII)D	a	getBeardContribution
		p	0		x
		p	1		y
		p	2		z
	m	(Lclp;Lit/unimi/dsi/fastutil/objects/ObjectList;IILit/unimi/dsi/fastutil/objects/ObjectList;Ldrx;)V	a	lambda$forStructuresInChunk$2
		p	0		pos
		p	2		startX
		p	3		startZ
		p	5		start
	m	(Lcmz;Lclp;)Ldgm;	a	forStructuresInChunk
		p	0		world
		p	1		pos
	m	(Ldgs$b;)D	a	compute
		p	1		pos
	m	(Ldrp;)Z	a	lambda$forStructuresInChunk$1
		p	0		structure
	m	([F)V	a	lambda$static$0
		p	0		array
	m	()D	b	maxValue
	m	(III)D	b	computeBeardContribution
		p	0		x
		p	1		y
		p	2		z
	f	I	a	BEARD_KERNEL_RADIUS
	f	I	f	BEARD_KERNEL_SIZE
	f	[F	g	BEARD_KERNEL
	f	Lit/unimi/dsi/fastutil/objects/ObjectListIterator;	h	pieceIterator
	f	Lit/unimi/dsi/fastutil/objects/ObjectListIterator;	i	junctionIterator
c	dgm$1	net/minecraft/world/level/levelgen/Beardifier$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$levelgen$structure$TerrainAdjustment
c	dgm$a	net/minecraft/world/level/levelgen/Beardifier$Rigid
	m	()Ldrh;	a	box
	m	()Ldsa;	b	terrainAdjustment
	m	()I	c	groundLevelDelta
	f	Ldrh;	a	box
	f	Ldsa;	b	terrainAdjustment
	f	I	c	groundLevelDelta
c	dgn	net/minecraft/world/level/levelgen/BelowZeroRetrogen
	m	(Ldds;Ljava/util/Optional;)V	<init>	<init>
		p	1		targetStatus
		p	2		missingBedrock
	m	()Ldds;	a	targetStatus
	m	(II)Z	a	hasBedrockHole
		p	1		x
		p	2		z
	m	(Lcni;Lddn;)Lcni;	a	getBiomeResolver
		p	0		biomeSupplier
		p	1		chunk
	m	(Lcni;Ljava/util/function/Predicate;Lddn;IIILcno$f;)Lhd;	a	lambda$getBiomeResolver$8
		p	3		x
		p	4		y
		p	5		z
		p	6		noise
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$5
		p	0		instance
	m	(Ldds;)Lcom/mojang/serialization/DataResult;	a	lambda$static$3
		p	0		status
	m	(Ldeh;)V	a	replaceOldBedrock
		p	0		chunk
	m	(Ldeh;Lgt;)V	a	lambda$applyBedrockMask$7
		p	1		pos
	m	(Ldgn;)Ljava/util/Optional;	a	lambda$static$4
		p	0		belowZeroRetrogen
	m	(Ljava/util/BitSet;)Ljava/util/stream/LongStream;	a	lambda$static$1
		p	0		bedrockBitSet
	m	(Ljava/util/stream/LongStream;)Ljava/util/BitSet;	a	lambda$static$0
		p	0		serializedBedrockBitSet
	m	(Lre;)Ldgn;	a	read
		p	0		nbt
	m	()Z	b	hasBedrockHoles
	m	(Ldeh;)V	b	applyBedrockMask
		p	1		chunk
	m	(Ldeh;Lgt;)V	b	lambda$replaceOldBedrock$6
		p	1		pos
	m	()Ljava/lang/String;	c	lambda$static$2
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcmk;	b	UPGRADE_HEIGHT_ACCESSOR
	f	Ljava/util/BitSet;	c	EMPTY
	f	Lcom/mojang/serialization/Codec;	d	BITSET_CODEC
	f	Lcom/mojang/serialization/Codec;	e	NON_EMPTY_CHUNK_STATUS
	f	Ljava/util/Set;	f	RETAINED_RETROGEN_BIOMES
	f	Ldds;	g	targetStatus
	f	Ljava/util/BitSet;	h	missingBedrock
c	dgn$1	net/minecraft/world/level/levelgen/BelowZeroRetrogen$1
	m	()I	v_	getMinBuildHeight
	m	()I	w_	getHeight
c	dgo	net/minecraft/world/level/levelgen/BitRandomSource
	m	(I)I	a	nextInt
		p	1		bound
	m	(I)I	c	next
		p	1		bits
	m	()I	f	nextInt
	m	()J	g	nextLong
	m	()Z	h	nextBoolean
	m	()F	i	nextFloat
	m	()D	j	nextDouble
	f	F	b	FLOAT_MULTIPLIER
	f	D	c	DOUBLE_MULTIPLIER
c	dgp	net/minecraft/world/level/levelgen/Column
	m	()Ldgp;	a	line
	m	(I)Ldgp;	a	below
		p	0		ceiling
	m	(II)Ldgp$b;	a	around
	m	(Lcmo;ILjava/util/function/Predicate;Ljava/util/function/Predicate;Lgt$a;ILgz;)Ljava/util/OptionalInt;	a	scanDirection
		p	0		world
		p	1		height
		p	2		canGenerate
		p	3		canReplace
		p	4		mutablePos
		p	5		y
		p	6		direction
	m	(Lcmo;Lgt;ILjava/util/function/Predicate;Ljava/util/function/Predicate;)Ljava/util/Optional;	a	scan
		p	0		world
		p	1		pos
		p	2		height
		p	3		canGenerate
		p	4		canReplace
	m	(Ljava/util/OptionalInt;)Ldgp;	a	withFloor
		p	1		floor
	m	(Ljava/util/OptionalInt;Ljava/util/OptionalInt;)Ldgp;	a	create
		p	0		ceilingHeight
		p	1		floorHeight
	m	()Ljava/util/OptionalInt;	b	getCeiling
	m	(I)Ldgp;	b	fromHighest
	m	(II)Ldgp$b;	b	inside
		p	0		floor
		p	1		ceiling
	m	(Ljava/util/OptionalInt;)Ldgp;	b	withCeiling
		p	1		ceiling
	m	()Ljava/util/OptionalInt;	c	getFloor
	m	(I)Ldgp;	c	above
		p	0		floor
	m	()Ljava/util/OptionalInt;	d	getHeight
	m	(I)Ldgp;	d	fromLowest
c	dgp$a	net/minecraft/world/level/levelgen/Column$Line
	m	()Ljava/util/OptionalInt;	b	getCeiling
	m	()Ljava/util/OptionalInt;	c	getFloor
	m	()Ljava/util/OptionalInt;	d	getHeight
	f	Ldgp$a;	a	INSTANCE
c	dgp$b	net/minecraft/world/level/levelgen/Column$Range
	m	(II)V	<init>	<init>
		p	1		floor
		p	2		ceiling
	m	()Ljava/util/OptionalInt;	b	getCeiling
	m	()Ljava/util/OptionalInt;	c	getFloor
	m	()Ljava/util/OptionalInt;	d	getHeight
	m	()I	e	ceiling
	m	()I	f	floor
	m	()I	g	height
	f	I	a	floor
	f	I	b	ceiling
c	dgp$c	net/minecraft/world/level/levelgen/Column$Ray
	m	(IZ)V	<init>	<init>
		p	1		height
		p	2		floor
	m	()Ljava/util/OptionalInt;	b	getCeiling
	m	()Ljava/util/OptionalInt;	c	getFloor
	m	()Ljava/util/OptionalInt;	d	getHeight
	f	I	a	edge
	f	Z	b	pointingUp
c	dgq	net/minecraft/world/level/levelgen/DebugLevelSource
	m	(Lhd$c;)V	<init>	<init>
		p	1		biomeEntry
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(II)Ldbq;	a	getBlockStateFor
		p	0		x
		p	1		z
	m	(IILcmk;Ldhn;)Lcmu;	a	getBaseColumn
		p	1		x
		p	2		z
		p	3		world
		p	4		noiseConfig
	m	(IILdgz$a;Lcmk;Ldhn;)I	a	getBaseHeight
		p	1		x
		p	2		z
		p	3		heightmap
		p	4		world
		p	5		noiseConfig
	m	(Laiw;)V	a	spawnOriginalMobs
		p	1		region
	m	(Laiw;JLdhn;Lcnh;Lcmz;Lddn;Ldgv$a;)V	a	applyCarvers
		p	1		chunkRegion
		p	2		seed
		p	4		noiseConfig
		p	5		biomeAccess
		p	6		structureAccessor
		p	7		chunk
		p	8		carverStep
	m	(Laiw;Lcmz;Ldhn;Lddn;)V	a	buildSurface
		p	1		region
		p	2		structures
		p	3		noiseConfig
		p	4		chunk
	m	(Lcnb;Lddn;Lcmz;)V	a	applyBiomeDecoration
		p	1		world
		p	2		chunk
		p	3		structureAccessor
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lcpi;)Ljava/util/stream/Stream;	a	lambda$static$1
		p	0		block
	m	(Ljava/util/List;Ldhn;Lgt;)V	a	addDebugScreenInfo
		p	1		text
		p	2		noiseConfig
		p	3		pos
	m	(Ljava/util/concurrent/Executor;Ldib;Ldhn;Lcmz;Lddn;)Ljava/util/concurrent/CompletableFuture;	a	fillFromNoise
		p	1		executor
		p	2		blender
		p	3		noiseConfig
		p	4		structureAccessor
		p	5		chunk
	m	()I	d	getGenDepth
	m	()I	e	getSeaLevel
	m	()I	f	getMinY
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Ldbq;	d	AIR
	f	Ldbq;	e	BARRIER
	f	I	f	HEIGHT
	f	I	g	BARRIER_HEIGHT
	f	I	h	BLOCK_MARGIN
	f	Ljava/util/List;	i	ALL_BLOCKS
	f	I	j	GRID_WIDTH
	f	I	k	GRID_HEIGHT
c	dgr	net/minecraft/world/level/levelgen/Density
	f	D	a	SURFACE
	f	D	b	UNRECOVERABLY_DENSE
	f	D	c	UNRECOVERABLY_THIN
c	dgs	net/minecraft/world/level/levelgen/DensityFunction
	m	()D	a	minValue
	m	(DD)Ldgs;	a	clamp
		p	1		min
		p	3		max
	m	(Ldgs$b;)D	a	compute
		p	1		pos
	m	(Ldgs$f;)Ldgs;	a	mapAll
		p	1		visitor
	m	(Ldgs;)Lhd;	a	lambda$static$0
		p	0		function
	m	([DLdgs$a;)V	a	fillArray
		p	1		densities
		p	2		applier
	m	()D	b	maxValue
	m	()Lapd;	c	codec
	m	()Ldgs;	d	abs
	m	()Ldgs;	e	square
	m	()Ldgs;	f	cube
	m	()Ldgs;	g	halfNegative
	m	()Ldgs;	h	quarterNegative
	m	()Ldgs;	i	squeeze
	f	Lcom/mojang/serialization/Codec;	b	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Lcom/mojang/serialization/Codec;	d	HOLDER_HELPER_CODEC
c	dgs$a	net/minecraft/world/level/levelgen/DensityFunction$ContextProvider
	m	(I)Ldgs$b;	a	forIndex
		p	1		index
	m	([DLdgs;)V	a	fillAllDirectly
		p	1		densities
		p	2		densityFunction
c	dgs$b	net/minecraft/world/level/levelgen/DensityFunction$FunctionContext
	m	()I	a	blockX
	m	()I	b	blockY
	m	()I	c	blockZ
	m	()Ldib;	d	getBlender
c	dgs$c	net/minecraft/world/level/levelgen/DensityFunction$NoiseHolder
	m	(Lhd;)V	<init>	<init>
		p	1		noiseData
	m	()D	a	maxValue
	m	(DDD)D	a	getValue
		p	1		x
		p	3		y
		p	5		z
	m	(Lhd;)Ldgs$c;	a	lambda$static$0
		p	0		noiseData
	m	()Lhd;	b	noiseData
	m	()Ldvo;	c	noise
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lhd;	b	noiseData
	f	Ldvo;	c	noise
c	dgs$d	net/minecraft/world/level/levelgen/DensityFunction$SimpleFunction
	m	(Ldgs$f;)Ldgs;	a	mapAll
		p	1		visitor
	m	([DLdgs$a;)V	a	fillArray
		p	1		densities
		p	2		applier
c	dgs$e	net/minecraft/world/level/levelgen/DensityFunction$SinglePointContext
	m	()I	a	blockX
	m	()I	b	blockY
	m	()I	c	blockZ
	f	I	a	blockX
	f	I	b	blockY
	f	I	c	blockZ
c	dgs$f	net/minecraft/world/level/levelgen/DensityFunction$Visitor
	m	(Ldgs$c;)Ldgs$c;	a	visitNoise
		p	1		noiseDensityFunction
	m	(Ldgs;)Ldgs;	apply	apply
		p	1		densityFunction
c	dgt	net/minecraft/world/level/levelgen/DensityFunctions
	m	()Ldgs;	a	zero
	m	(D)Ldgs;	a	constant
		p	0		density
	m	(IIDD)Ldgs;	a	yClampedGradient
		p	0		fromY
		p	1		toY
		p	2		fromValue
		p	4		toValue
	m	(J)Ldgs;	a	endIslands
		p	0		seed
	m	(Laon;)Ldgs;	a	spline
		p	0		spline
	m	(Lcom/mojang/datafixers/util/Either;)Ldgs;	a	lambda$static$1
		p	0		either
	m	(Lcom/mojang/serialization/Codec;Ljava/util/function/Function;Ljava/util/function/Function;)Lapd;	a	singleArgumentCodec
		p	0		codec
		p	1		creator
		p	2		argumentGetter
	m	(Lcom/mojang/serialization/MapCodec;)Lapd;	a	makeCodec
		p	0		mapCodec
	m	(Ldgs;)Ldgs;	a	interpolated
		p	0		inputFunction
	m	(Ldgs;DD)Ldgs;	a	mapFromUnitTo
		p	0		function
		p	1		min
		p	3		max
	m	(Ldgs;DDLdgs;Ldgs;)Ldgs;	a	rangeChoice
		p	0		input
		p	1		minInclusive
		p	3		maxExclusive
		p	5		whenInRange
		p	6		whenOutOfRange
	m	(Ldgs;DLdgs;)Ldgs;	a	lerp
		p	0		delta
		p	1		start
		p	3		end
	m	(Ldgs;Ldgs;)Ldgs;	a	add
		p	0		a
		p	1		b
	m	(Ldgs;Ldgs;DLhd;)Ldgs;	a	shiftedNoise2d
		p	0		shiftX
		p	1		shiftZ
		p	2		xzScale
		p	4		noiseParameters
	m	(Ldgs;Ldgs;Ldgs;)Ldgs;	a	lerp
		p	0		delta
		p	1		start
		p	2		end
	m	(Ldgs;Ldgt$k$a;)Ldgs;	a	map
		p	0		input
		p	1		type
	m	(Ldgs;Lhd;Ldgt$z$a;)Ldgs;	a	weirdScaledSampler
		p	0		input
		p	1		parameters
		p	2		mapper
	m	(Lhd;)Ldgs;	a	noise
		p	0		noiseParameters
	m	(Lhd;D)Ldgs;	a	noise
		p	0		noiseParameters
		p	1		scaleY
	m	(Lhd;DD)Ldgs;	a	mappedNoise
		p	0		noiseParameters
		p	1		min
		p	3		max
	m	(Lhd;DDD)Ldgs;	a	mappedNoise
		p	0		noiseParameters
		p	1		scaleY
		p	3		min
		p	5		max
	m	(Lhd;DDDD)Ldgs;	a	mappedNoise
		p	0		noiseParameters
		p	1		scaleXz
		p	3		scaleY
		p	5		min
		p	7		max
	m	(Lhq;)Lcom/mojang/serialization/Codec;	a	bootstrap
		p	0		registry
	m	(Lhq;Ljava/lang/String;Lapd;)Lcom/mojang/serialization/Codec;	a	register
		p	0		registry
		p	1		id
		p	2		codecHolder
	m	(Ljava/util/function/BiFunction;Ljava/util/function/Function;Ljava/util/function/Function;)Lapd;	a	doubleFunctionArgumentCodec
		p	0		creator
		p	1		argument1Getter
		p	2		argument2Getter
	m	(Ljava/util/function/Function;Ljava/util/function/Function;)Lapd;	a	singleFunctionArgumentCodec
		p	0		creator
		p	1		argumentGetter
	m	(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/BiFunction;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$doubleFunctionArgumentCodec$3
		p	3		instance
	m	()Ldgs;	b	blendAlpha
	m	(Ldgs;)Ldgs;	b	flatCache
		p	0		inputFunction
	m	(Ldgs;Ldgs;)Ldgs;	b	mul
		p	0		a
		p	1		b
	m	(Lhd;)Ldgs;	b	shiftA
		p	0		noiseParameters
	m	(Lhd;DD)Ldgs;	b	noise
		p	0		noiseParameters
		p	1		scaleXz
		p	3		scaleY
	m	()Ldgs;	c	blendOffset
	m	(Ldgs;)Ldgs;	c	cache2d
		p	0		inputFunction
	m	(Ldgs;Ldgs;)Ldgs;	c	min
		p	0		a
		p	1		b
	m	(Lhd;)Ldgs;	c	shiftB
		p	0		noiseParameters
	m	(Ldgs;)Ldgs;	d	cacheOnce
		p	0		inputFunction
	m	(Ldgs;Ldgs;)Ldgs;	d	max
		p	0		a
		p	1		b
	m	(Lhd;)Ldgs;	d	shift
		p	0		noiseParameters
	m	(Ldgs;)Ldgs;	e	cacheAllInCell
		p	0		inputFunction
	m	(Ldgs;)Ldgs;	f	blendDensity
		p	0		input
	m	(Ldgs;)Lcom/mojang/datafixers/util/Either;	g	lambda$static$2
		p	0		densityFunction
	m	(Ldgs;)Lcom/mojang/serialization/Codec;	h	lambda$static$0
		p	0		densityFunction
	f	D	a	MAX_REASONABLE_NOISE_VALUE
	f	Lcom/mojang/serialization/Codec;	b	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Lcom/mojang/serialization/Codec;	d	NOISE_VALUE_CODEC
c	dgt$1	net/minecraft/world/level/levelgen/DensityFunctions$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$levelgen$DensityFunctions$Mapped$Type
	f	[I	b	$SwitchMap$net$minecraft$world$level$levelgen$DensityFunctions$TwoArgumentSimpleFunction$Type
	f	[I	c	$SwitchMap$net$minecraft$world$level$levelgen$DensityFunctions$MulOrAdd$Type
c	dgt$a	net/minecraft/world/level/levelgen/DensityFunctions$Ap2
	m	()D	a	minValue
	m	(Ldgs$b;)D	a	compute
		p	1		pos
	m	(Ldgs$f;)Ldgs;	a	mapAll
		p	1		visitor
	m	([DLdgs$a;)V	a	fillArray
		p	1		densities
		p	2		applier
	m	()D	b	maxValue
	m	()Ldgt$y$a;	j	type
	m	()Ldgs;	k	argument1
	m	()Ldgs;	l	argument2
	f	Ldgt$y$a;	e	type
	f	Ldgs;	f	argument1
	f	Ldgs;	g	argument2
	f	D	h	minValue
	f	D	i	maxValue
c	dgt$b	net/minecraft/world/level/levelgen/DensityFunctions$BeardifierMarker
	m	()D	a	minValue
	m	(Ldgs$b;)D	a	compute
		p	1		pos
	m	([DLdgs$a;)V	a	fillArray
		p	1		densities
		p	2		applier
	m	()D	b	maxValue
	m	()[Ldgt$b;	j	$values
	f	Ldgt$b;	a	INSTANCE
	f	[Ldgt$b;	f	$VALUES
c	dgt$c	net/minecraft/world/level/levelgen/DensityFunctions$BeardifierOrMarker
	m	()Lapd;	c	codec
	f	Lapd;	e	CODEC
c	dgt$d	net/minecraft/world/level/levelgen/DensityFunctions$BlendAlpha
	m	()D	a	minValue
	m	(Ldgs$b;)D	a	compute
		p	1		pos
	m	([DLdgs$a;)V	a	fillArray
		p	1		densities
		p	2		applier
	m	()D	b	maxValue
	m	()Lapd;	c	codec
	m	()[Ldgt$d;	j	$values
	f	Ldgt$d;	a	INSTANCE
	f	Lapd;	e	CODEC
	f	[Ldgt$d;	f	$VALUES
c	dgt$e	net/minecraft/world/level/levelgen/DensityFunctions$BlendDensity
	m	()D	a	minValue
	m	(Ldgs$b;D)D	a	transform
		p	1		pos
		p	2		density
	m	(Ldgs$f;)Ldgs;	a	mapAll
		p	1		visitor
	m	()D	b	maxValue
	m	()Lapd;	c	codec
	m	()Ldgs;	j	input
	f	Ldgs;	a	input
	f	Lapd;	e	CODEC
c	dgt$f	net/minecraft/world/level/levelgen/DensityFunctions$BlendOffset
	m	()D	a	minValue
	m	(Ldgs$b;)D	a	compute
		p	1		pos
	m	([DLdgs$a;)V	a	fillArray
		p	1		densities
		p	2		applier
	m	()D	b	maxValue
	m	()Lapd;	c	codec
	m	()[Ldgt$f;	j	$values
	f	Ldgt$f;	a	INSTANCE
	f	Lapd;	e	CODEC
	f	[Ldgt$f;	f	$VALUES
c	dgt$g	net/minecraft/world/level/levelgen/DensityFunctions$Clamp
	m	()D	a	minValue
	m	(D)D	a	transform
		p	1		density
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ldgs$f;)Ldgs;	a	mapAll
		p	1		visitor
	m	()Ldgs;	au_	input
	m	()D	b	maxValue
	m	()Lapd;	c	codec
	f	Lapd;	a	CODEC
	f	Ldgs;	e	input
	f	D	f	minValue
	f	D	g	maxValue
	f	Lcom/mojang/serialization/MapCodec;	h	DATA_CODEC
c	dgt$h	net/minecraft/world/level/levelgen/DensityFunctions$Constant
	m	()D	a	minValue
	m	(Ldgs$b;)D	a	compute
		p	1		pos
	m	([DLdgs$a;)V	a	fillArray
		p	1		densities
		p	2		applier
	m	()D	b	maxValue
	m	()Lapd;	c	codec
	m	()D	j	value
	f	D	a	value
	f	Lapd;	e	CODEC
	f	Ldgt$h;	f	ZERO
c	dgt$i	net/minecraft/world/level/levelgen/DensityFunctions$EndIslandDensityFunction
	m	(J)V	<init>	<init>
		p	1		seed
	m	()D	a	minValue
	m	(Ldgs$b;)D	a	compute
		p	1		pos
	m	(Ldvr;II)F	a	getHeightValue
		p	0		sampler
		p	1		x
		p	2		z
	m	()D	b	maxValue
	m	()Lapd;	c	codec
	f	Lapd;	a	CODEC
	f	F	e	ISLAND_THRESHOLD
	f	Ldvr;	f	islandNoise
c	dgt$j	net/minecraft/world/level/levelgen/DensityFunctions$HolderHolder
	m	()D	a	minValue
	m	(Ldgs$b;)D	a	compute
		p	1		pos
	m	(Ldgs$f;)Ldgs;	a	mapAll
		p	1		visitor
	m	([DLdgs$a;)V	a	fillArray
		p	1		densities
		p	2		applier
	m	()D	b	maxValue
	m	()Lapd;	c	codec
	m	()Lhd;	j	function
	f	Lhd;	a	function
c	dgt$k	net/minecraft/world/level/levelgen/DensityFunctions$Mapped
	m	()D	a	minValue
	m	(D)D	a	transform
		p	1		density
	m	(Ldgs$f;)Ldgs;	a	mapAll
		p	1		visitor
	m	(Ldgt$k$a;D)D	a	transform
		p	0		type
		p	1		density
	m	(Ldgt$k$a;Ldgs;)Ldgt$k;	a	create
		p	0		type
		p	1		input
	m	()Ldgs;	au_	input
	m	()D	b	maxValue
	m	(Ldgs$f;)Ldgt$k;	b	mapAll
	m	()Lapd;	c	codec
	m	()Ldgt$k$a;	k	type
	f	Ldgt$k$a;	a	type
	f	Ldgs;	e	input
	f	D	f	minValue
	f	D	g	maxValue
c	dgt$k$a	net/minecraft/world/level/levelgen/DensityFunctions$Mapped$Type
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()[Ldgt$k$a;	a	$values
	m	(Ldgs;)Ldgt$k;	a	lambda$new$0
		p	1		input
	m	()Ljava/lang/String;	c	getSerializedName
	f	Ldgt$k$a;	a	ABS
	f	Ldgt$k$a;	b	SQUARE
	f	Ldgt$k$a;	c	CUBE
	f	Ldgt$k$a;	d	HALF_NEGATIVE
	f	Ldgt$k$a;	e	QUARTER_NEGATIVE
	f	Ldgt$k$a;	f	SQUEEZE
	f	Ljava/lang/String;	g	name
	f	Lapd;	h	codec
	f	[Ldgt$k$a;	i	$VALUES
c	dgt$l	net/minecraft/world/level/levelgen/DensityFunctions$Marker
	m	()D	a	minValue
	m	(Ldgs$b;)D	a	compute
		p	1		pos
	m	([DLdgs$a;)V	a	fillArray
		p	1		densities
		p	2		applier
	m	()D	b	maxValue
	m	()Ldgt$l$a;	j	type
	m	()Ldgs;	k	wrapped
	f	Ldgt$l$a;	a	type
	f	Ldgs;	e	wrapped
c	dgt$l$a	net/minecraft/world/level/levelgen/DensityFunctions$Marker$Type
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()[Ldgt$l$a;	a	$values
	m	(Ldgs;)Ldgt$m;	a	lambda$new$0
	m	()Ljava/lang/String;	c	getSerializedName
	f	Ldgt$l$a;	a	Interpolated
	f	Ldgt$l$a;	b	FlatCache
	f	Ldgt$l$a;	c	Cache2D
	f	Ldgt$l$a;	d	CacheOnce
	f	Ldgt$l$a;	e	CacheAllInCell
	f	Ljava/lang/String;	f	name
	f	Lapd;	g	codec
	f	[Ldgt$l$a;	h	$VALUES
c	dgt$m	net/minecraft/world/level/levelgen/DensityFunctions$MarkerOrMarked
	m	(Ldgs$f;)Ldgs;	a	mapAll
		p	1		visitor
	m	()Lapd;	c	codec
	m	()Ldgt$l$a;	j	type
	m	()Ldgs;	k	wrapped
c	dgt$n	net/minecraft/world/level/levelgen/DensityFunctions$MulOrAdd
	m	()D	a	minValue
	m	(D)D	a	transform
		p	1		density
	m	(Ldgs$f;)Ldgs;	a	mapAll
		p	1		visitor
	m	()Ldgs;	au_	input
	m	()D	b	maxValue
	m	()Ldgt$y$a;	j	type
	m	()Ldgs;	k	argument1
	m	()Ldgs;	l	argument2
	m	()Ldgt$n$a;	m	specificType
	m	()D	n	argument
	f	Ldgt$n$a;	e	specificType
	f	Ldgs;	f	input
	f	D	g	minValue
	f	D	h	maxValue
	f	D	i	argument
c	dgt$n$a	net/minecraft/world/level/levelgen/DensityFunctions$MulOrAdd$Type
	m	()[Ldgt$n$a;	a	$values
	f	Ldgt$n$a;	a	MUL
	f	Ldgt$n$a;	b	ADD
	f	[Ldgt$n$a;	c	$VALUES
c	dgt$o	net/minecraft/world/level/levelgen/DensityFunctions$Noise
	m	()D	a	minValue
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ldgs$b;)D	a	compute
		p	1		pos
	m	(Ldgs$f;)Ldgs;	a	mapAll
		p	1		visitor
	m	([DLdgs$a;)V	a	fillArray
		p	1		densities
		p	2		applier
	m	()D	b	maxValue
	m	()Lapd;	c	codec
	m	()Ldgs$c;	j	noise
	m	()D	k	xzScale
	m	()D	l	yScale
	f	Lcom/mojang/serialization/MapCodec;	a	DATA_CODEC
	f	Lapd;	e	CODEC
	f	Ldgs$c;	f	noise
	f	D	g	xzScale
	f	D	h	yScale
c	dgt$p	net/minecraft/world/level/levelgen/DensityFunctions$PureTransformer
	m	(D)D	a	transform
		p	1		density
	m	(Ldgs$b;)D	a	compute
		p	1		pos
	m	([DLdgs$a;)V	a	fillArray
		p	1		densities
		p	2		applier
	m	()Ldgs;	au_	input
c	dgt$q	net/minecraft/world/level/levelgen/DensityFunctions$RangeChoice
	m	()D	a	minValue
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ldgs$b;)D	a	compute
		p	1		pos
	m	(Ldgs$f;)Ldgs;	a	mapAll
		p	1		visitor
	m	([DLdgs$a;)V	a	fillArray
		p	1		densities
		p	2		applier
	m	()D	b	maxValue
	m	()Lapd;	c	codec
	m	()Ldgs;	j	input
	m	()D	k	minInclusive
	m	()D	l	maxExclusive
	m	()Ldgs;	m	whenInRange
	m	()Ldgs;	n	whenOutOfRange
	f	Lcom/mojang/serialization/MapCodec;	a	DATA_CODEC
	f	Lapd;	e	CODEC
	f	Ldgs;	f	input
	f	D	g	minInclusive
	f	D	h	maxExclusive
	f	Ldgs;	i	whenInRange
	f	Ldgs;	j	whenOutOfRange
c	dgt$r	net/minecraft/world/level/levelgen/DensityFunctions$Shift
	m	(Ldgs$b;)D	a	compute
		p	1		pos
	m	(Ldgs$f;)Ldgs;	a	mapAll
		p	1		visitor
	m	()Lapd;	c	codec
	m	()Ldgs$c;	j	offsetNoise
	f	Ldgs$c;	a	offsetNoise
	f	Lapd;	e	CODEC
c	dgt$s	net/minecraft/world/level/levelgen/DensityFunctions$ShiftA
	m	(Ldgs$b;)D	a	compute
		p	1		pos
	m	(Ldgs$f;)Ldgs;	a	mapAll
		p	1		visitor
	m	()Lapd;	c	codec
	m	()Ldgs$c;	j	offsetNoise
	f	Ldgs$c;	a	offsetNoise
	f	Lapd;	e	CODEC
c	dgt$t	net/minecraft/world/level/levelgen/DensityFunctions$ShiftB
	m	(Ldgs$b;)D	a	compute
		p	1		pos
	m	(Ldgs$f;)Ldgs;	a	mapAll
		p	1		visitor
	m	()Lapd;	c	codec
	m	()Ldgs$c;	j	offsetNoise
	f	Ldgs$c;	a	offsetNoise
	f	Lapd;	e	CODEC
c	dgt$u	net/minecraft/world/level/levelgen/DensityFunctions$ShiftNoise
	m	()D	a	minValue
	m	(DDD)D	a	compute
		p	1		x
		p	3		y
		p	5		z
	m	([DLdgs$a;)V	a	fillArray
		p	1		densities
		p	2		applier
	m	()D	b	maxValue
	m	()Ldgs$c;	j	offsetNoise
c	dgt$v	net/minecraft/world/level/levelgen/DensityFunctions$ShiftedNoise
	m	()D	a	minValue
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ldgs$b;)D	a	compute
		p	1		pos
	m	(Ldgs$f;)Ldgs;	a	mapAll
		p	1		visitor
	m	([DLdgs$a;)V	a	fillArray
		p	1		densities
		p	2		applier
	m	()D	b	maxValue
	m	()Lapd;	c	codec
	m	()Ldgs;	j	shiftX
	m	()Ldgs;	k	shiftY
	m	()Ldgs;	l	shiftZ
	m	()D	m	xzScale
	m	()D	n	yScale
	m	()Ldgs$c;	o	noise
	f	Lapd;	a	CODEC
	f	Ldgs;	e	shiftX
	f	Ldgs;	f	shiftY
	f	Ldgs;	g	shiftZ
	f	D	h	xzScale
	f	D	i	yScale
	f	Ldgs$c;	j	noise
	f	Lcom/mojang/serialization/MapCodec;	k	DATA_CODEC
c	dgt$w	net/minecraft/world/level/levelgen/DensityFunctions$Spline
	m	()D	a	minValue
	m	(Ldgs$b;)D	a	compute
		p	1		pos
	m	(Ldgs$f;)Ldgs;	a	mapAll
		p	1		visitor
	m	(Ldgs$f;Ldgt$w$a;)Ldgt$w$a;	a	lambda$mapAll$0
		p	1		densityFunctionWrapper
	m	([DLdgs$a;)V	a	fillArray
		p	1		densities
		p	2		applier
	m	()D	b	maxValue
	m	()Lapd;	c	codec
	m	()Laon;	j	spline
	f	Lapd;	a	CODEC
	f	Laon;	e	spline
	f	Lcom/mojang/serialization/Codec;	f	SPLINE_CODEC
	f	Lcom/mojang/serialization/MapCodec;	g	DATA_CODEC
c	dgt$w$a	net/minecraft/world/level/levelgen/DensityFunctions$Spline$Coordinate
	m	()Lhd;	a	function
	m	(Ldgs$f;)Ldgt$w$a;	a	mapAll
		p	1		visitor
	m	(Ldgt$w$b;)F	a	apply
		p	1		x
	m	(Ljava/lang/Object;)F	a	apply
		p	1		x
	m	()F	b	minValue
	m	()F	c	maxValue
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lhd;	c	function
c	dgt$w$b	net/minecraft/world/level/levelgen/DensityFunctions$Spline$Point
	m	()Ldgs$b;	a	context
	f	Ldgs$b;	a	context
c	dgt$x	net/minecraft/world/level/levelgen/DensityFunctions$TransformerWithContext
	m	(Ldgs$b;)D	a	compute
		p	1		pos
	m	(Ldgs$b;D)D	a	transform
		p	1		pos
		p	2		density
	m	([DLdgs$a;)V	a	fillArray
		p	1		densities
		p	2		applier
	m	()Ldgs;	j	input
c	dgt$y	net/minecraft/world/level/levelgen/DensityFunctions$TwoArgumentSimpleFunction
	m	(Ldgt$y$a;Ldgs;Ldgs;)Ldgt$y;	a	create
		p	0		type
		p	1		argument1
		p	2		argument2
	m	()Lapd;	c	codec
	m	()Ldgt$y$a;	j	type
	m	()Ldgs;	k	argument1
	m	()Ldgs;	l	argument2
	f	Lorg/slf4j/Logger;	a	LOGGER
c	dgt$y$a	net/minecraft/world/level/levelgen/DensityFunctions$TwoArgumentSimpleFunction$Type
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()[Ldgt$y$a;	a	$values
	m	(Ldgs;Ldgs;)Ldgt$y;	a	lambda$new$0
	m	()Ljava/lang/String;	c	getSerializedName
	f	Ldgt$y$a;	a	ADD
	f	Ldgt$y$a;	b	MUL
	f	Ldgt$y$a;	c	MIN
	f	Ldgt$y$a;	d	MAX
	f	Lapd;	e	codec
	f	Ljava/lang/String;	f	name
	f	[Ldgt$y$a;	g	$VALUES
c	dgt$z	net/minecraft/world/level/levelgen/DensityFunctions$WeirdScaledSampler
	m	()D	a	minValue
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ldgs$b;D)D	a	transform
		p	1		pos
		p	2		density
	m	(Ldgs$f;)Ldgs;	a	mapAll
		p	1		visitor
	m	()D	b	maxValue
	m	()Lapd;	c	codec
	m	()Ldgs;	j	input
	m	()Ldgs$c;	k	noise
	m	()Ldgt$z$a;	l	rarityValueMapper
	f	Lapd;	a	CODEC
	f	Ldgs;	e	input
	f	Ldgs$c;	f	noise
	f	Ldgt$z$a;	g	rarityValueMapper
	f	Lcom/mojang/serialization/MapCodec;	h	DATA_CODEC
c	dgt$z$a	net/minecraft/world/level/levelgen/DensityFunctions$WeirdScaledSampler$RarityValueMapper
	m	(Ljava/lang/String;ILjava/lang/String;Lit/unimi/dsi/fastutil/doubles/Double2DoubleFunction;D)V	<init>	<init>
		p	3		name
		p	4		scaleFunction
		p	5		maxValueMultiplier
	m	()[Ldgt$z$a;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Ldgt$z$a;	a	TYPE1
	f	Ldgt$z$a;	b	TYPE2
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Ljava/lang/String;	d	name
	f	Lit/unimi/dsi/fastutil/doubles/Double2DoubleFunction;	e	mapper
	f	D	f	maxRarity
	f	[Ldgt$z$a;	g	$VALUES
c	dgt$aa	net/minecraft/world/level/levelgen/DensityFunctions$YClampedGradient
	m	()D	a	minValue
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ldgs$b;)D	a	compute
		p	1		pos
	m	()D	b	maxValue
	m	()Lapd;	c	codec
	m	()I	j	fromY
	m	()I	k	toY
	m	()D	l	fromValue
	m	()D	m	toValue
	f	Lapd;	a	CODEC
	f	I	e	fromY
	f	I	f	toY
	f	D	g	fromValue
	f	D	h	toValue
	f	Lcom/mojang/serialization/MapCodec;	i	DATA_CODEC
c	dgu	net/minecraft/world/level/levelgen/FlatLevelSource
	m	(Ldps;)V	<init>	<init>
		p	1		config
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(I)[Ldbq;	a	lambda$getBaseColumn$4
	m	(IILcmk;Ldhn;)Lcmu;	a	getBaseColumn
		p	1		x
		p	2		z
		p	3		world
		p	4		noiseConfig
	m	(IILdgz$a;Lcmk;Ldhn;)I	a	getBaseHeight
		p	1		x
		p	2		z
		p	3		heightmap
		p	4		world
		p	5		noiseConfig
	m	(Laiw;)V	a	spawnOriginalMobs
		p	1		region
	m	(Laiw;JLdhn;Lcnh;Lcmz;Lddn;Ldgv$a;)V	a	applyCarvers
		p	1		chunkRegion
		p	2		seed
		p	4		noiseConfig
		p	5		biomeAccess
		p	6		structureAccessor
		p	7		chunk
		p	8		carverStep
	m	(Laiw;Lcmz;Ldhn;Lddn;)V	a	buildSurface
		p	1		region
		p	2		structures
		p	3		noiseConfig
		p	4		chunk
	m	(Lcmk;)I	a	getSpawnHeight
		p	1		world
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ldbq;)Ldbq;	a	lambda$getBaseColumn$3
		p	0		state
	m	(Lhd$c;)Lhd;	a	lambda$createState$1
	m	(Lhf;)Ljava/util/stream/Stream;	a	lambda$createState$2
	m	(Lhf;Ldhn;J)Lddp;	a	createState
		p	1		structureSetRegistry
		p	2		noiseConfig
		p	3		seed
	m	(Ljava/util/List;Ldhn;Lgt;)V	a	addDebugScreenInfo
		p	1		text
		p	2		noiseConfig
		p	3		pos
	m	(Ljava/util/concurrent/Executor;Ldib;Ldhn;Lcmz;Lddn;)Ljava/util/concurrent/CompletableFuture;	a	fillFromNoise
		p	1		executor
		p	2		blender
		p	3		noiseConfig
		p	4		structureAccessor
		p	5		chunk
	m	()I	d	getGenDepth
	m	()I	e	getSeaLevel
	m	()I	f	getMinY
	m	()Ldps;	g	settings
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Ldps;	d	settings
c	dgv	net/minecraft/world/level/levelgen/GenerationStep
c	dgv$a	net/minecraft/world/level/levelgen/GenerationStep$Carving
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()Ljava/lang/String;	a	getName
	m	()[Ldgv$a;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Ldgv$a;	a	AIR
	f	Ldgv$a;	b	LIQUID
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Ljava/lang/String;	d	name
	f	[Ldgv$a;	e	$VALUES
c	dgv$b	net/minecraft/world/level/levelgen/GenerationStep$Decoration
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()Ljava/lang/String;	a	getName
	m	()[Ldgv$b;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Ldgv$b;	a	RAW_GENERATION
	f	Ldgv$b;	b	LAKES
	f	Ldgv$b;	c	LOCAL_MODIFICATIONS
	f	Ldgv$b;	d	UNDERGROUND_STRUCTURES
	f	Ldgv$b;	e	SURFACE_STRUCTURES
	f	Ldgv$b;	f	STRONGHOLDS
	f	Ldgv$b;	g	UNDERGROUND_ORES
	f	Ldgv$b;	h	UNDERGROUND_DECORATION
	f	Ldgv$b;	i	FLUID_SPRINGS
	f	Ldgv$b;	j	VEGETAL_DECORATION
	f	Ldgv$b;	k	TOP_LAYER_MODIFICATION
	f	Lcom/mojang/serialization/Codec;	l	CODEC
	f	Ljava/lang/String;	m	name
	f	[Ldgv$b;	n	$VALUES
c	dgw	net/minecraft/world/level/levelgen/GeodeBlockSettings
	m	(Ldoi;Ldoi;Ldoi;Ldoi;Ldoi;Ljava/util/List;Lanv;Lanv;)V	<init>	<init>
		p	1		fillingProvider
		p	2		innerLayerProvider
		p	3		alternateInnerLayerProvider
		p	4		middleLayerProvider
		p	5		outerLayerProvider
		p	6		innerBlocks
		p	7		cannotReplace
		p	8		invalidBlocks
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$8
		p	0		instance
	m	(Ldgw;)Lanv;	a	lambda$static$7
		p	0		config
	m	(Ldgw;)Lanv;	b	lambda$static$6
		p	0		config
	m	(Ldgw;)Ljava/util/List;	c	lambda$static$5
		p	0		config
	m	(Ldgw;)Ldoi;	d	lambda$static$4
		p	0		config
	m	(Ldgw;)Ldoi;	e	lambda$static$3
		p	0		config
	m	(Ldgw;)Ldoi;	f	lambda$static$2
		p	0		config
	m	(Ldgw;)Ldoi;	g	lambda$static$1
		p	0		config
	m	(Ldgw;)Ldoi;	h	lambda$static$0
		p	0		config
	f	Ldoi;	a	fillingProvider
	f	Ldoi;	b	innerLayerProvider
	f	Ldoi;	c	alternateInnerLayerProvider
	f	Ldoi;	d	middleLayerProvider
	f	Ldoi;	e	outerLayerProvider
	f	Ljava/util/List;	f	innerPlacements
	f	Lanv;	g	cannotReplace
	f	Lanv;	h	invalidBlocks
	f	Lcom/mojang/serialization/Codec;	i	CODEC
c	dgx	net/minecraft/world/level/levelgen/GeodeCrackSettings
	m	(DDI)V	<init>	<init>
		p	1		generateCrackChance
		p	3		baseCrackSize
		p	5		crackPointOffset
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	(Ldgx;)Ljava/lang/Integer;	a	lambda$static$2
		p	0		config
	m	(Ldgx;)Ljava/lang/Double;	b	lambda$static$1
		p	0		config
	m	(Ldgx;)Ljava/lang/Double;	c	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	D	b	generateCrackChance
	f	D	c	baseCrackSize
	f	I	d	crackPointOffset
c	dgy	net/minecraft/world/level/levelgen/GeodeLayerSettings
	m	(DDDD)V	<init>	<init>
		p	1		filling
		p	3		innerLayer
		p	5		middleLayer
		p	7		outerLayer
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
		p	0		instance
	m	(Ldgy;)Ljava/lang/Double;	a	lambda$static$3
		p	0		config
	m	(Ldgy;)Ljava/lang/Double;	b	lambda$static$2
		p	0		config
	m	(Ldgy;)Ljava/lang/Double;	c	lambda$static$1
		p	0		config
	m	(Ldgy;)Ljava/lang/Double;	d	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	D	b	filling
	f	D	c	innerLayer
	f	D	d	middleLayer
	f	D	e	outerLayer
	f	Lcom/mojang/serialization/Codec;	f	LAYER_RANGE
c	dgz	net/minecraft/world/level/levelgen/Heightmap
	m	(Lddn;Ldgz$a;)V	<init>	<init>
		p	1		chunk
		p	2		type
	m	()[J	a	getRawData
	m	(I)I	a	getFirstAvailable
		p	1		index
	m	(II)I	a	getFirstAvailable
		p	1		x
		p	2		z
	m	(III)V	a	setHeight
		p	1		x
		p	2		z
		p	3		height
	m	(IIILdbq;)Z	a	update
		p	1		x
		p	2		y
		p	3		z
		p	4		state
	m	(Ldbq;)Z	a	lambda$static$1
		p	0		state
	m	(Lddn;Ldgz$a;[J)V	a	setRawData
		p	1		chunk
		p	2		type
		p	3		values
	m	(Lddn;Ljava/util/Set;)V	a	primeHeightmaps
		p	0		chunk
		p	1		types
	m	(II)I	b	getHighestTaken
	m	(Ldbq;)Z	b	lambda$static$0
		p	0		state
	m	(II)I	c	getIndex
		p	0		x
		p	1		z
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/function/Predicate;	b	NOT_AIR
	f	Ljava/util/function/Predicate;	c	MATERIAL_MOTION_BLOCKING
	f	Laoc;	d	data
	f	Ljava/util/function/Predicate;	e	isOpaque
	f	Lddn;	f	chunk
c	dgz$a	net/minecraft/world/level/levelgen/Heightmap$Types
	m	(Ljava/lang/String;ILjava/lang/String;Ldgz$b;Ljava/util/function/Predicate;)V	<init>	<init>
		p	3		name
		p	4		purpose
		p	5		blockPredicate
	m	()Ljava/lang/String;	a	getSerializationKey
	m	(Ldbq;)Z	a	lambda$static$1
		p	0		state
	m	()Z	b	sendToClient
	m	(Ldbq;)Z	b	lambda$static$0
		p	0		state
	m	()Ljava/lang/String;	c	getSerializedName
	m	()Z	d	keepAfterWorldgen
	m	()Ljava/util/function/Predicate;	e	isOpaque
	m	()[Ldgz$a;	f	$values
	f	Ldgz$a;	a	WORLD_SURFACE_WG
	f	Ldgz$a;	b	WORLD_SURFACE
	f	Ldgz$a;	c	OCEAN_FLOOR_WG
	f	Ldgz$a;	d	OCEAN_FLOOR
	f	Ldgz$a;	e	MOTION_BLOCKING
	f	Ldgz$a;	f	MOTION_BLOCKING_NO_LEAVES
	f	Lcom/mojang/serialization/Codec;	g	CODEC
	f	Ljava/lang/String;	h	serializationKey
	f	Ldgz$b;	i	usage
	f	Ljava/util/function/Predicate;	j	isOpaque
	f	[Ldgz$a;	k	$VALUES
c	dgz$b	net/minecraft/world/level/levelgen/Heightmap$Usage
	m	()[Ldgz$b;	a	$values
	f	Ldgz$b;	a	WORLDGEN
	f	Ldgz$b;	b	LIVE_WORLD
	f	Ldgz$b;	c	CLIENT
	f	[Ldgz$b;	d	$VALUES
c	dha	net/minecraft/world/level/levelgen/LegacyRandomSource
	m	(J)V	<init>	<init>
		p	1		seed
	m	(J)V	b	setSeed
		p	1		seed
	m	(I)I	c	next
		p	1		bits
	m	()Lapo;	d	fork
	m	()Ldhm;	e	forkPositional
	m	()D	k	nextGaussian
	f	I	d	MODULUS_BITS
	f	J	e	MODULUS_MASK
	f	J	f	MULTIPLIER
	f	J	g	INCREMENT
	f	Ljava/util/concurrent/atomic/AtomicLong;	h	seed
	f	Ldhb;	i	gaussianSource
c	dha$a	net/minecraft/world/level/levelgen/LegacyRandomSource$LegacyPositionalRandomFactory
	m	(J)V	<init>	<init>
		p	1		seed
	m	(III)Lapo;	a	at
		p	1		x
		p	2		y
		p	3		z
	m	(Ljava/lang/String;)Lapo;	a	fromHashOf
		p	1		seed
	m	(Ljava/lang/StringBuilder;)V	a	parityConfigString
		p	1		info
	f	J	a	seed
c	dhb	net/minecraft/world/level/levelgen/MarsagliaPolarGaussian
	m	(Lapo;)V	<init>	<init>
		p	1		baseRandom
	m	()V	a	reset
	m	()D	b	nextGaussian
	f	Lapo;	a	randomSource
	f	D	b	nextNextGaussian
	f	Z	c	haveNextNextGaussian
c	dhc	net/minecraft/world/level/levelgen/NoiseBasedChunkGenerator
	m	(Lcnj;Lhd;)V	<init>	<init>
		p	1		biomeSource
		p	2		settings
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(IILcmk;Ldhn;)Lcmu;	a	getBaseColumn
		p	1		x
		p	2		z
		p	3		world
		p	4		noiseConfig
	m	(IILdgz$a;Lcmk;Ldhn;)I	a	getBaseHeight
		p	1		x
		p	2		z
		p	3		heightmap
		p	4		world
		p	5		noiseConfig
	m	(Ladc;)Z	a	stable
		p	1		settings
	m	(Laiw;)V	a	spawnOriginalMobs
		p	1		region
	m	(Laiw;JLdhn;Lcnh;Lcmz;Lddn;Ldgv$a;)V	a	applyCarvers
		p	1		chunkRegion
		p	2		seed
		p	4		noiseConfig
		p	5		biomeAccess
		p	6		structureAccessor
		p	7		chunk
		p	8		carverStep
	m	(Laiw;Lcmz;Ldhn;Lddn;)V	a	buildSurface
		p	1		region
		p	2		structures
		p	3		noiseConfig
		p	4		chunk
	m	(Lclp;Ldhn;)Lcng;	a	lambda$applyCarvers$10
	m	(Lcmk;Ldhn;IILorg/apache/commons/lang3/mutable/MutableObject;Ljava/util/function/Predicate;)Ljava/util/OptionalInt;	a	iterateNoiseColumn
		p	1		world
		p	2		noiseConfig
		p	3		x
		p	4		z
		p	5		columnSample
		p	6		stopPredicate
	m	(Lcmz;Laiw;Ldhn;Lddn;)Ldhd;	a	lambda$applyCarvers$9
		p	4		chunk
	m	(Lcmz;Ldib;Ldhn;Lddn;)Ldhd;	a	lambda$doFill$13
		p	4		chunk
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Lddn;Lcmz;Ldib;Ldhn;)Ldhd;	a	createNoiseChunk
		p	1		chunk
		p	2		world
		p	3		blender
		p	4		noiseConfig
	m	(Lddn;Ldhw;Ldhn;Lcmz;Lcnh;Lhq;Ldib;)V	a	buildSurface
		p	1		chunk
		p	2		heightContext
		p	3		noiseConfig
		p	4		structureAccessor
		p	5		biomeAccess
		p	6		biomeRegistry
		p	7		blender
	m	(Ldgl$b;ILdgl$b;Ldgl$b;III)Ldgl$b;	a	lambda$createFluidPicker$4
		p	4		x
		p	5		y
		p	6		z
	m	(Ldhc;)Lhd;	a	lambda$static$1
		p	0		generator
	m	(Ldhd;IIILdbq;)Ldbq;	a	debugPreliminarySurfaceLevel
		p	1		chunkNoiseSampler
		p	2		x
		p	3		y
		p	4		z
		p	5		state
	m	(Ldhe;)Ldgl$a;	a	createFluidPicker
		p	0		settings
	m	(Ldhn;III)Lhd;	a	lambda$applyCarvers$8
		p	2		biomeX
		p	3		biomeY
		p	4		biomeZ
	m	(Ldib;Lcmz;Ldhn;Lddn;II)Lddn;	a	doFill
		p	1		blender
		p	2		structureAccessor
		p	3		noiseConfig
		p	4		chunk
		p	5		minimumCellY
		p	6		cellHeight
	m	(Ldib;Ldhn;Lcmz;Lddn;)V	a	doCreateBiomes
		p	1		blender
		p	2		noiseConfig
		p	3		structureAccessor
		p	4		chunk
	m	(Ljava/util/List;Ldhn;Lgt;)V	a	addDebugScreenInfo
		p	1		text
		p	2		noiseConfig
		p	3		pos
	m	(Ljava/util/Set;Lddn;Ljava/lang/Throwable;)V	a	lambda$fillFromNoise$12
	m	(Ljava/util/concurrent/Executor;Ldhn;Ldib;Lcmz;Lddn;)Ljava/util/concurrent/CompletableFuture;	a	createBiomes
		p	1		executor
		p	2		noiseConfig
		p	3		blender
		p	4		structureAccessor
		p	5		chunk
	m	(Ljava/util/concurrent/Executor;Ldib;Ldhn;Lcmz;Lddn;)Ljava/util/concurrent/CompletableFuture;	a	fillFromNoise
		p	1		executor
		p	2		blender
		p	3		noiseConfig
		p	4		structureAccessor
		p	5		chunk
	m	(Lcmz;Ldib;Ldhn;Lddn;)Ldhd;	b	lambda$buildSurface$7
		p	4		chunk
	m	(Ldhc;)Lcnj;	b	lambda$static$0
		p	0		generator
	m	(Ldib;Lcmz;Ldhn;Lddn;II)Lddn;	b	lambda$fillFromNoise$11
	m	(Ldib;Ldhn;Lcmz;Lddn;)Lddn;	b	lambda$createBiomes$5
	m	(Lhd;)Ldgl$a;	b	lambda$new$3
	m	(Lcmz;Ldib;Ldhn;Lddn;)Ldhd;	c	lambda$doCreateBiomes$6
		p	4		chunk
	m	()I	d	getGenDepth
	m	()I	e	getSeaLevel
	m	()I	f	getMinY
	m	()Lhd;	g	generatorSettings
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Ldbq;	d	AIR
	f	Lhd;	e	settings
	f	Ljava/util/function/Supplier;	f	globalFluidPicker
c	dhd	net/minecraft/world/level/levelgen/NoiseChunk
	m	(ILdhn;IILdhh;Ldgt$c;Ldhe;Ldgl$a;Ldib;)V	<init>	<init>
		p	1		horizontalCellCount
		p	2		noiseConfig
		p	3		startBlockX
		p	4		startBlockZ
		p	5		generationShapeConfig
		p	6		beardifying
		p	7		chunkGeneratorSettings
		p	8		fluidLevelSampler
		p	9		blender
	m	()I	a	blockX
	m	(DLdhd$i;)V	a	lambda$updateForZ$4
		p	2		interpolator
	m	(I)Ldgs$b;	a	forIndex
		p	1		index
	m	(ID)V	a	updateForY
		p	1		blockY
		p	2		deltaY
	m	(II)I	a	preliminarySurfaceLevel
		p	1		blockX
		p	2		blockZ
	m	(IILdhd$i;)V	a	lambda$selectCellYZ$1
		p	2		interpolator
	m	(J)I	a	computePreliminarySurfaceLevel
		p	1		columnPos
	m	(Lddn;Ldhn;Ldgt$c;Ldhe;Ldgl$a;Ldib;)Ldhd;	a	forChunk
		p	0		chunk
		p	1		noiseConfig
		p	2		beardifying
		p	3		chunkGeneratorSettings
		p	4		fluidLevelSampler
		p	5		blender
	m	(Ldgs;)Ldgs;	a	wrap
		p	1		function
	m	(Ldgs;Ldgs$b;)Ldbq;	a	lambda$new$0
		p	2		pos
	m	(Ldhf;Ljava/util/List;)Lcno$f;	a	cachedClimateSampler
		p	1		noiseRouter
		p	2		spawnTarget
	m	(ZI)V	a	fillSlice
		p	1		start
		p	2		cellX
	m	([DLdgs;)V	a	fillAllDirectly
		p	1		densities
		p	2		densityFunction
	m	()I	b	blockY
	m	(DLdhd$i;)V	b	lambda$updateForX$3
		p	2		interpolator
	m	(I)V	b	advanceCellX
		p	1		cellX
	m	(ID)V	b	updateForX
		p	1		blockX
		p	2		deltaX
	m	(II)V	b	selectCellYZ
		p	1		cellY
		p	2		cellZ
	m	(Ldgs;)Ldgs;	b	wrapNew
		p	1		function
	m	()I	c	blockZ
	m	(DLdhd$i;)V	c	lambda$updateForY$2
		p	2		interpolator
	m	(I)Ldhd;	c	forIndex
	m	(ID)V	c	updateForZ
		p	1		blockZ
		p	2		deltaZ
	m	(II)Ldib$a;	c	getOrComputeBlendingOutput
		p	1		blockX
		p	2		blockZ
	m	()Ldib;	d	getBlender
	m	()Ldbq;	e	getInterpolatedState
	m	()V	f	initializeForFirstCellX
	m	()V	g	stopInterpolation
	m	()V	h	swapSlices
	m	()Ldgl;	i	aquifer
	m	()I	j	cellWidth
	m	()I	k	cellHeight
	f	I	A	cellStartBlockX
	f	I	B	cellStartBlockY
	f	I	C	cellStartBlockZ
	f	I	D	inCellX
	f	I	E	inCellY
	f	I	F	inCellZ
	f	J	G	interpolationCounter
	f	J	H	arrayInterpolationCounter
	f	I	I	arrayIndex
	f	Ldgs$a;	J	sliceFillingContextProvider
	f	Ldhh;	a	noiseSettings
	f	I	b	cellCountXZ
	f	I	c	cellCountY
	f	I	d	cellNoiseMinY
	f	I	e	firstCellX
	f	I	f	firstCellZ
	f	I	g	firstNoiseX
	f	I	h	firstNoiseZ
	f	Ljava/util/List;	i	interpolators
	f	Ljava/util/List;	j	cellCaches
	f	Ljava/util/Map;	k	wrapped
	f	Lit/unimi/dsi/fastutil/longs/Long2IntMap;	l	preliminarySurfaceLevel
	f	Ldgl;	m	aquifer
	f	Ldgs;	n	initialDensityNoJaggedness
	f	Ldhd$c;	o	blockStateRule
	f	Ldib;	p	blender
	f	Ldhd$g;	q	blendAlpha
	f	Ldhd$g;	r	blendOffset
	f	Ldgt$c;	s	beardifier
	f	J	t	lastBlendingDataPos
	f	Ldib$a;	u	lastBlendingOutput
	f	I	v	noiseSizeXZ
	f	I	w	cellWidth
	f	I	x	cellHeight
	f	Z	y	interpolating
	f	Z	z	fillingCell
c	dhd$1	net/minecraft/world/level/levelgen/NoiseChunk$1
	m	(I)Ldgs$b;	a	forIndex
		p	1		index
	m	([DLdgs;)V	a	fillAllDirectly
		p	1		densities
		p	2		densityFunction
	f	Ldhd;	a	this$0
c	dhd$2	net/minecraft/world/level/levelgen/NoiseChunk$2
	f	[I	a	$SwitchMap$net$minecraft$world$level$levelgen$DensityFunctions$Marker$Type
c	dhd$a	net/minecraft/world/level/levelgen/NoiseChunk$BlendAlpha
	m	()D	a	minValue
	m	(Ldgs$b;)D	a	compute
		p	1		pos
	m	(Ldgs$f;)Ldgs;	a	mapAll
		p	1		visitor
	m	([DLdgs$a;)V	a	fillArray
		p	1		densities
		p	2		applier
	m	()D	b	maxValue
	m	()Lapd;	c	codec
	m	()Ldgs;	k	wrapped
	f	Ldhd;	a	this$0
c	dhd$b	net/minecraft/world/level/levelgen/NoiseChunk$BlendOffset
	m	()D	a	minValue
	m	(Ldgs$b;)D	a	compute
		p	1		pos
	m	(Ldgs$f;)Ldgs;	a	mapAll
		p	1		visitor
	m	([DLdgs$a;)V	a	fillArray
		p	1		densities
		p	2		applier
	m	()D	b	maxValue
	m	()Lapd;	c	codec
	m	()Ldgs;	k	wrapped
	f	Ldhd;	a	this$0
c	dhd$c	net/minecraft/world/level/levelgen/NoiseChunk$BlockStateFiller
	m	(Ldgs$b;)Ldbq;	calculate	calculate
		p	1		pos
c	dhd$d	net/minecraft/world/level/levelgen/NoiseChunk$Cache2D
	m	(Ldgs;)V	<init>	<init>
		p	1		delegate
	m	(Ldgs$b;)D	a	compute
		p	1		pos
	m	([DLdgs$a;)V	a	fillArray
		p	1		densities
		p	2		applier
	m	()Ldgt$l$a;	j	type
	m	()Ldgs;	k	wrapped
	f	Ldgs;	a	function
	f	J	e	lastPos2D
	f	D	f	lastValue
c	dhd$e	net/minecraft/world/level/levelgen/NoiseChunk$CacheAllInCell
	m	(Ldhd;Ldgs;)V	<init>	<init>
		p	2		delegate
	m	(Ldgs$b;)D	a	compute
		p	1		pos
	m	([DLdgs$a;)V	a	fillArray
		p	1		densities
		p	2		applier
	m	()Ldgt$l$a;	j	type
	m	()Ldgs;	k	wrapped
	f	Ldhd;	a	this$0
	f	Ldgs;	e	noiseFiller
	f	[D	f	values
c	dhd$f	net/minecraft/world/level/levelgen/NoiseChunk$CacheOnce
	m	(Ldhd;Ldgs;)V	<init>	<init>
		p	2		delegate
	m	(Ldgs$b;)D	a	compute
		p	1		pos
	m	([DLdgs$a;)V	a	fillArray
		p	1		densities
		p	2		applier
	m	()Ldgt$l$a;	j	type
	m	()Ldgs;	k	wrapped
	f	Ldhd;	a	this$0
	f	Ldgs;	e	function
	f	J	f	lastCounter
	f	J	g	lastArrayCounter
	f	D	h	lastValue
	f	[D	i	lastArray
c	dhd$g	net/minecraft/world/level/levelgen/NoiseChunk$FlatCache
	m	(Ldhd;Ldgs;Z)V	<init>	<init>
		p	2		delegate
		p	3		sample
	m	(Ldgs$b;)D	a	compute
		p	1		pos
	m	([DLdgs$a;)V	a	fillArray
		p	1		densities
		p	2		applier
	m	()Ldgt$l$a;	j	type
	m	()Ldgs;	k	wrapped
	f	Ldhd;	a	this$0
	f	Ldgs;	e	noiseFiller
	f	[[D	f	values
c	dhd$h	net/minecraft/world/level/levelgen/NoiseChunk$NoiseChunkDensityFunction
	m	()D	a	minValue
	m	()D	b	maxValue
	m	()Ldgs;	k	wrapped
c	dhd$i	net/minecraft/world/level/levelgen/NoiseChunk$NoiseInterpolator
	m	(Ldhd;Ldgs;)V	<init>	<init>
		p	2		delegate
	m	(D)V	a	updateForY
		p	1		deltaY
	m	(II)[[D	a	allocateSlice
		p	1		sizeZ
		p	2		sizeX
	m	(Ldgs$b;)D	a	compute
		p	1		pos
	m	([DLdgs$a;)V	a	fillArray
		p	1		densities
		p	2		applier
	m	(D)V	b	updateForX
		p	1		deltaX
	m	(II)V	b	selectCellYZ
		p	1		cellY
		p	2		cellZ
	m	(D)V	c	updateForZ
		p	1		deltaZ
	m	()Ldgt$l$a;	j	type
	m	()Ldgs;	k	wrapped
	m	()V	l	swapSlices
	f	Ldhd;	a	this$0
	f	[[D	e	slice0
	f	[[D	f	slice1
	f	Ldgs;	g	noiseFiller
	f	D	h	noise000
	f	D	i	noise001
	f	D	j	noise100
	f	D	k	noise101
	f	D	l	noise010
	f	D	m	noise011
	f	D	n	noise110
	f	D	o	noise111
	f	D	p	valueXZ00
	f	D	q	valueXZ10
	f	D	r	valueXZ01
	f	D	s	valueXZ11
	f	D	t	valueZ0
	f	D	u	valueZ1
	f	D	v	value
c	dhe	net/minecraft/world/level/levelgen/NoiseGeneratorSettings
	m	(Ldhh;Ldbq;Ldbq;Ldhf;Ldhq$o;Ljava/util/List;IZZZZ)V	<init>	<init>
		p	5		surfaceRule
	m	()Z	a	disableMobGeneration
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Loa;)V	a	bootstrap
		p	0		chunkGenerationSettingsRegisterable
	m	(Loa;ZZ)Ldhe;	a	overworld
		p	0		registerable
		p	1		amplified
		p	2		largeBiomes
	m	()Z	b	isAquifersEnabled
	m	(Loa;)Ldhe;	b	end
		p	0		registerable
	m	()Z	c	oreVeinsEnabled
	m	(Loa;)Ldhe;	c	nether
		p	0		registerable
	m	()Ldhy$a;	d	getRandomSource
	m	(Loa;)Ldhe;	d	caves
		p	0		registerable
	m	()Ldhe;	e	dummy
	m	(Loa;)Ldhe;	e	floatingIslands
		p	0		registerable
	m	()Ldhh;	f	noiseSettings
	m	()Ldbq;	g	defaultBlock
	m	()Ldbq;	h	defaultFluid
	m	()Ldhf;	i	noiseRouter
	m	()Ldhq$o;	j	surfaceRule
	m	()Ljava/util/List;	k	spawnTarget
	m	()I	l	seaLevel
	m	()Z	m	aquifersEnabled
	m	()Z	n	useLegacyRandomSource
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Ladc;	c	OVERWORLD
	f	Ladc;	d	LARGE_BIOMES
	f	Ladc;	e	AMPLIFIED
	f	Ladc;	f	NETHER
	f	Ladc;	g	END
	f	Ladc;	h	CAVES
	f	Ladc;	i	FLOATING_ISLANDS
	f	Ldhh;	j	noiseSettings
	f	Ldbq;	k	defaultBlock
	f	Ldbq;	l	defaultFluid
	f	Ldhf;	m	noiseRouter
	f	Ldhq$o;	n	surfaceRule
	f	Ljava/util/List;	o	spawnTarget
	f	I	p	seaLevel
	f	Z	q	disableMobGeneration
	f	Z	r	aquifersEnabled
	f	Z	s	oreVeinsEnabled
	f	Z	t	useLegacyRandomSource
c	dhf	net/minecraft/world/level/levelgen/NoiseRouter
	m	()Ldgs;	a	barrierNoise
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	(Ldgs$f;)Ldhf;	a	mapAll
		p	1		visitor
	m	(Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/serialization/codecs/RecordCodecBuilder;	a	field
		p	0		name
		p	1		getter
	m	()Ldgs;	b	fluidLevelFloodednessNoise
	m	()Ldgs;	c	fluidLevelSpreadNoise
	m	()Ldgs;	d	lavaNoise
	m	()Ldgs;	e	temperature
	m	()Ldgs;	f	vegetation
	m	()Ldgs;	g	continents
	m	()Ldgs;	h	erosion
	m	()Ldgs;	i	depth
	m	()Ldgs;	j	ridges
	m	()Ldgs;	k	initialDensityWithoutJaggedness
	m	()Ldgs;	l	finalDensity
	m	()Ldgs;	m	veinToggle
	m	()Ldgs;	n	veinRidged
	m	()Ldgs;	o	veinGap
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldgs;	b	barrierNoise
	f	Ldgs;	c	fluidLevelFloodednessNoise
	f	Ldgs;	d	fluidLevelSpreadNoise
	f	Ldgs;	e	lavaNoise
	f	Ldgs;	f	temperature
	f	Ldgs;	g	vegetation
	f	Ldgs;	h	continents
	f	Ldgs;	i	erosion
	f	Ldgs;	j	depth
	f	Ldgs;	k	ridges
	f	Ldgs;	l	initialDensityWithoutJaggedness
	f	Ldgs;	m	finalDensity
	f	Ldgs;	n	veinToggle
	f	Ldgs;	o	veinRidged
	f	Ldgs;	p	veinGap
c	dhg	net/minecraft/world/level/levelgen/NoiseRouterData
	m	()Ldhf;	a	none
	m	(F)F	a	peaksAndValleys
		p	0		weirdness
	m	(Ldgs;)Ldgs;	a	peaksAndValleys
		p	0		input
	m	(Ldgs;II)Ldgs;	a	slideEndLike
		p	0		function
		p	1		minY
		p	2		maxY
	m	(Ldgs;IIIIDIID)Ldgs;	a	slide
		p	0		density
		p	1		minY
		p	2		maxY
		p	3		topRelativeMinY
		p	4		topRelativeMaxY
		p	5		topDensity
		p	7		bottomRelativeMinY
		p	8		bottomRelativeMaxY
		p	9		bottomDensity
	m	(Ldgs;Ldgs;)Ldgs;	a	splineWithBlending
		p	0		function
		p	1		blendOffset
	m	(Ldgs;Ldgs;III)Ldgs;	a	yLimitedInterpolatable
		p	0		y
		p	1		whenInRange
		p	2		minInclusive
		p	3		maxInclusive
		p	4		whenOutOfRange
	m	(Ldhj$a;)I	a	lambda$overworld$1
		p	0		veinType
	m	(Lhe;)Ldhf;	a	end
		p	0		densityFunctionLookup
	m	(Lhe;II)Ldgs;	a	slideNetherLike
		p	0		densityFunctionLookup
		p	1		minY
		p	2		maxY
	m	(Lhe;Ladc;)Ldgs;	a	getFunction
		p	0		densityFunctionRegisterable
		p	1		key
	m	(Lhe;Lhe;)Ldhf;	a	nether
		p	0		densityFunctionLookup
		p	1		noiseParametersLookup
	m	(Lhe;Lhe;Ldgs;)Ldgs;	a	underground
		p	0		densityFunctionLookup
		p	1		noiseParametersLookup
		p	2		slopedCheese
	m	(Lhe;Lhe;ZZ)Ldhf;	a	overworld
		p	0		densityFunctionLookup
		p	1		noiseParametersLookup
		p	2		largeBiomes
		p	3		amplified
	m	(Ljava/lang/String;)Ladc;	a	createKey
		p	0		id
	m	(Loa;)Lhd;	a	bootstrap
		p	0		densityFunctionRegisterable
	m	(Loa;Ladc;Ldgs;)Ldgs;	a	registerAndWrap
		p	0		densityFunctionRegisterable
		p	1		key
		p	2		densityFunction
	m	(Loa;Lhe;Ldgs;Lhd;Lhd;Ladc;Ladc;Ladc;Ladc;Ladc;Z)V	a	registerTerrainNoises
		p	0		densityFunctionRegisterable
		p	1		densityFunctionLookup
		p	2		jaggedNoise
		p	3		continents
		p	4		erosion
		p	5		offsetKey
		p	6		factorKey
		p	7		jaggednessKey
		p	8		depthKey
		p	9		slopedCheeseKey
		p	10		amplified
	m	(ZLdgs;)Ldgs;	a	slideOverworld
		p	0		amplified
		p	1		density
	m	(Ldgs;)Ldgs;	b	postProcess
		p	0		density
	m	(Ldgs;Ldgs;)Ldgs;	b	noiseGradientDensity
		p	0		factor
		p	1		depth
	m	(Ldhj$a;)I	b	lambda$overworld$0
		p	0		veinType
	m	(Lhe;)Ldgs;	b	spaghettiRoughnessFunction
		p	0		noiseParametersLookup
	m	(Lhe;Lhe;)Ldhf;	b	caves
		p	0		densityFunctionLookup
		p	1		noiseParametersLookup
	m	(Lhe;Lhe;Ldgs;)Ldhf;	b	noNewCaves
		p	0		densityFunctionLookup
		p	1		noiseParametersLookup
		p	2		density
	m	(Ldgs;)Ldgs;	c	slideEnd
		p	0		slopedCheese
	m	(Lhe;)Ldgs;	c	pillars
		p	0		noiseParametersLookup
	m	(Lhe;Lhe;)Ldhf;	c	floatingIslands
		p	0		densityFunctionLookup
		p	1		noiseParametersLookup
	m	(Lhe;Lhe;)Ldgs;	d	entrances
		p	0		densityFunctionLookup
		p	1		noiseParametersLookup
	m	(Lhe;Lhe;)Ldgs;	e	noodle
		p	0		densityFunctionLookup
		p	1		noiseParametersLookup
	m	(Lhe;Lhe;)Ldgs;	f	spaghetti2D
		p	0		densityFunctionLookup
		p	1		noiseParametersLookup
	f	Ladc;	A	BASE_3D_NOISE_END
	f	Ladc;	B	SLOPED_CHEESE
	f	Ladc;	C	OFFSET_LARGE
	f	Ladc;	D	FACTOR_LARGE
	f	Ladc;	E	JAGGEDNESS_LARGE
	f	Ladc;	F	DEPTH_LARGE
	f	Ladc;	G	SLOPED_CHEESE_LARGE
	f	Ladc;	H	OFFSET_AMPLIFIED
	f	Ladc;	I	FACTOR_AMPLIFIED
	f	Ladc;	J	JAGGEDNESS_AMPLIFIED
	f	Ladc;	K	DEPTH_AMPLIFIED
	f	Ladc;	L	SLOPED_CHEESE_AMPLIFIED
	f	Ladc;	M	SLOPED_CHEESE_END
	f	Ladc;	N	SPAGHETTI_ROUGHNESS_FUNCTION
	f	Ladc;	O	ENTRANCES
	f	Ladc;	P	NOODLE
	f	Ladc;	Q	PILLARS
	f	Ladc;	R	SPAGHETTI_2D_THICKNESS_MODULATOR
	f	Ladc;	S	SPAGHETTI_2D
	f	F	a	GLOBAL_OFFSET
	f	I	b	ISLAND_CHUNK_DISTANCE
	f	J	c	ISLAND_CHUNK_DISTANCE_SQR
	f	Ladc;	d	CONTINENTS
	f	Ladc;	e	EROSION
	f	Ladc;	f	RIDGES
	f	Ladc;	g	RIDGES_FOLDED
	f	Ladc;	h	OFFSET
	f	Ladc;	i	FACTOR
	f	Ladc;	j	JAGGEDNESS
	f	Ladc;	k	DEPTH
	f	Ladc;	l	CONTINENTS_LARGE
	f	Ladc;	m	EROSION_LARGE
	f	F	n	ORE_THICKNESS
	f	D	o	VEININESS_FREQUENCY
	f	D	p	NOODLE_SPACING_AND_STRAIGHTNESS
	f	D	q	SURFACE_DENSITY_THRESHOLD
	f	D	r	CHEESE_NOISE_TARGET
	f	Ldgs;	s	BLENDING_FACTOR
	f	Ldgs;	t	BLENDING_JAGGEDNESS
	f	Ladc;	u	ZERO
	f	Ladc;	v	Y
	f	Ladc;	w	SHIFT_X
	f	Ladc;	x	SHIFT_Z
	f	Ladc;	y	BASE_3D_NOISE_OVERWORLD
	f	Ladc;	z	BASE_3D_NOISE_NETHER
c	dhg$a	net/minecraft/world/level/levelgen/NoiseRouterData$QuantizedSpaghettiRarity
	m	(D)D	a	getSphaghettiRarity2D
		p	0		value
	m	(D)D	b	getSpaghettiRarity3D
		p	0		value
c	dhh	net/minecraft/world/level/levelgen/NoiseSettings
	m	(IIII)V	<init>	<init>
		p	1		minimumY
		p	2		height
	m	()I	a	getCellHeight
	m	(IIII)Ldhh;	a	create
		p	0		minimumY
		p	1		height
		p	2		horizontalSize
		p	3		verticalSize
	m	(Lcmk;)Ldhh;	a	clampToHeightAccessor
		p	1		world
	m	(Lcom/mojang/serialization/DataResult$PartialResult;)V	a	lambda$create$4
		p	0		result
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ldhh;)Lcom/mojang/serialization/DataResult;	a	guardY
		p	0		config
	m	()I	b	getCellWidth
	m	()I	c	minY
	m	()I	d	height
	m	()I	e	noiseSizeHorizontal
	m	()I	f	noiseSizeVertical
	m	()Ljava/lang/String;	g	lambda$guardY$3
	m	()Ljava/lang/String;	h	lambda$guardY$2
	m	()Ljava/lang/String;	i	lambda$guardY$1
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldhh;	b	OVERWORLD_NOISE_SETTINGS
	f	Ldhh;	c	NETHER_NOISE_SETTINGS
	f	Ldhh;	d	END_NOISE_SETTINGS
	f	Ldhh;	e	CAVES_NOISE_SETTINGS
	f	Ldhh;	f	FLOATING_ISLANDS_NOISE_SETTINGS
	f	I	g	minY
	f	I	h	height
	f	I	i	noiseSizeHorizontal
	f	I	j	noiseSizeVertical
c	dhi	net/minecraft/world/level/levelgen/Noises
	m	(Lhe;Ldhm;Ladc;)Ldvo;	a	instantiate
		p	0		noiseParametersLookup
		p	1		splitter
		p	2		key
	m	(Ljava/lang/String;)Ladc;	a	createKey
		p	0		id
	f	Ladc;	A	SPAGHETTI_ROUGHNESS_MODULATOR
	f	Ladc;	B	CAVE_ENTRANCE
	f	Ladc;	C	CAVE_LAYER
	f	Ladc;	D	CAVE_CHEESE
	f	Ladc;	E	ORE_VEININESS
	f	Ladc;	F	ORE_VEIN_A
	f	Ladc;	G	ORE_VEIN_B
	f	Ladc;	H	ORE_GAP
	f	Ladc;	I	NOODLE
	f	Ladc;	J	NOODLE_THICKNESS
	f	Ladc;	K	NOODLE_RIDGE_A
	f	Ladc;	L	NOODLE_RIDGE_B
	f	Ladc;	M	JAGGED
	f	Ladc;	N	SURFACE
	f	Ladc;	O	SURFACE_SECONDARY
	f	Ladc;	P	CLAY_BANDS_OFFSET
	f	Ladc;	Q	BADLANDS_PILLAR
	f	Ladc;	R	BADLANDS_PILLAR_ROOF
	f	Ladc;	S	BADLANDS_SURFACE
	f	Ladc;	T	ICEBERG_PILLAR
	f	Ladc;	U	ICEBERG_PILLAR_ROOF
	f	Ladc;	V	ICEBERG_SURFACE
	f	Ladc;	W	SWAMP
	f	Ladc;	X	CALCITE
	f	Ladc;	Y	GRAVEL
	f	Ladc;	Z	POWDER_SNOW
	f	Ladc;	a	TEMPERATURE
	f	Ladc;	aa	PACKED_ICE
	f	Ladc;	ab	ICE
	f	Ladc;	ac	SOUL_SAND_LAYER
	f	Ladc;	ad	GRAVEL_LAYER
	f	Ladc;	ae	PATCH
	f	Ladc;	af	NETHERRACK
	f	Ladc;	ag	NETHER_WART
	f	Ladc;	ah	NETHER_STATE_SELECTOR
	f	Ladc;	b	VEGETATION
	f	Ladc;	c	CONTINENTALNESS
	f	Ladc;	d	EROSION
	f	Ladc;	e	TEMPERATURE_LARGE
	f	Ladc;	f	VEGETATION_LARGE
	f	Ladc;	g	CONTINENTALNESS_LARGE
	f	Ladc;	h	EROSION_LARGE
	f	Ladc;	i	RIDGE
	f	Ladc;	j	SHIFT
	f	Ladc;	k	AQUIFER_BARRIER
	f	Ladc;	l	AQUIFER_FLUID_LEVEL_FLOODEDNESS
	f	Ladc;	m	AQUIFER_LAVA
	f	Ladc;	n	AQUIFER_FLUID_LEVEL_SPREAD
	f	Ladc;	o	PILLAR
	f	Ladc;	p	PILLAR_RARENESS
	f	Ladc;	q	PILLAR_THICKNESS
	f	Ladc;	r	SPAGHETTI_2D
	f	Ladc;	s	SPAGHETTI_2D_ELEVATION
	f	Ladc;	t	SPAGHETTI_2D_MODULATOR
	f	Ladc;	u	SPAGHETTI_2D_THICKNESS
	f	Ladc;	v	SPAGHETTI_3D_1
	f	Ladc;	w	SPAGHETTI_3D_2
	f	Ladc;	x	SPAGHETTI_3D_RARITY
	f	Ladc;	y	SPAGHETTI_3D_THICKNESS
	f	Ladc;	z	SPAGHETTI_ROUGHNESS
c	dhj	net/minecraft/world/level/levelgen/OreVeinifier
	m	(Ldgs;Ldbq;Ldhm;Ldgs;Ldgs;Ldgs$b;)Ldbq;	a	lambda$create$0
		p	5		pos
	m	(Ldgs;Ldgs;Ldgs;Ldhm;)Ldhd$c;	a	create
		p	0		veinToggle
		p	1		veinRidged
		p	2		veinGap
		p	3		randomDeriver
	f	F	a	VEININESS_THRESHOLD
	f	I	b	EDGE_ROUNDOFF_BEGIN
	f	D	c	MAX_EDGE_ROUNDOFF
	f	F	d	VEIN_SOLIDNESS
	f	F	e	MIN_RICHNESS
	f	F	f	MAX_RICHNESS
	f	F	g	MAX_RICHNESS_THRESHOLD
	f	F	h	CHANCE_OF_RAW_ORE_BLOCK
	f	F	i	SKIP_ORE_IF_GAP_NOISE_IS_BELOW
c	dhj$a	net/minecraft/world/level/levelgen/OreVeinifier$VeinType
	m	(Ljava/lang/String;ILdbq;Ldbq;Ldbq;II)V	<init>	<init>
		p	3		ore
		p	4		rawOreBlock
		p	5		stone
		p	6		minY
		p	7		maxY
	m	()[Ldhj$a;	a	$values
	f	Ldhj$a;	a	COPPER
	f	Ldhj$a;	b	IRON
	f	I	c	minY
	f	I	d	maxY
	f	Ldbq;	e	ore
	f	Ldbq;	f	rawOreBlock
	f	Ldbq;	g	filler
	f	[Ldhj$a;	h	$VALUES
c	dhk	net/minecraft/world/level/levelgen/PatrolSpawner
	m	(Laip;Lgt;Lapo;Z)Z	a	spawnPatrolMember
		p	1		world
		p	2		pos
		p	3		random
		p	4		captain
	m	(Laip;ZZ)I	a	tick
		p	1		world
		p	2		spawnMonsters
		p	3		spawnAnimals
	f	I	a	nextTick
c	dhl	net/minecraft/world/level/levelgen/PhantomSpawner
	m	(Laip;ZZ)I	a	tick
		p	1		world
		p	2		spawnMonsters
		p	3		spawnAnimals
	f	I	a	nextTick
c	dhm	net/minecraft/world/level/levelgen/PositionalRandomFactory
	m	(III)Lapo;	a	at
		p	1		x
		p	2		y
		p	3		z
	m	(Ladd;)Lapo;	a	fromHashOf
		p	1		seed
	m	(Lgt;)Lapo;	a	at
		p	1		pos
	m	(Ljava/lang/String;)Lapo;	a	fromHashOf
		p	1		seed
	m	(Ljava/lang/StringBuilder;)V	a	parityConfigString
		p	1		info
c	dhn	net/minecraft/world/level/levelgen/RandomState
	m	(Ldhe;Lhe;J)V	<init>	<init>
		p	1		chunkGeneratorSettings
		p	2		noiseParametersLookup
		p	3		seed
	m	()Ldhf;	a	router
	m	(Ladc;)Ldvo;	a	getOrCreateNoise
		p	1		noiseParametersKey
	m	(Ladc;Ladc;)Ldvo;	a	lambda$getOrCreateNoise$0
		p	2		key
	m	(Ladd;)Ldhm;	a	getOrCreateRandomFactory
		p	1		id
	m	(Ladd;Ladd;)Ldhm;	a	lambda$getOrCreateRandomFactory$1
		p	2		id2
	m	(Ldhe;Lhe;J)Ldhn;	a	create
		p	0		chunkGeneratorSettings
		p	1		noiseParametersLookup
		p	2		legacyWorldSeed
	m	(Lhe$a;Ladc;J)Ldhn;	a	create
		p	0		registryLookup
		p	1		chunkGeneratorSettingsKey
		p	2		legacyWorldSeed
	m	()Lcno$f;	b	sampler
	m	()Ldhr;	c	surfaceSystem
	m	()Ldhm;	d	aquiferRandom
	m	()Ldhm;	e	oreRandom
	f	Ldhm;	a	random
	f	Lhe;	b	noises
	f	Ldhf;	c	router
	f	Lcno$f;	d	sampler
	f	Ldhr;	e	surfaceSystem
	f	Ldhm;	f	aquiferRandom
	f	Ldhm;	g	oreRandom
	f	Ljava/util/Map;	h	noiseIntances
	f	Ljava/util/Map;	i	positionalRandoms
c	dhn$1	net/minecraft/world/level/levelgen/RandomState$1
	m	(Ldgs;)Ldgs;	a	wrapNew
		p	1		densityFunction
	m	(Ldgs;)Ldgs;	apply	apply
		p	1		densityFunction
	f	Ldhn;	a	this$0
	f	Ljava/util/Map;	b	wrapped
c	dhn$a	net/minecraft/world/level/levelgen/RandomState$1NoiseWiringHelper
	m	(J)Lapo;	a	newLegacyInstance
		p	1		seed
	m	(Ldgs$c;)Ldgs$c;	a	visitNoise
		p	1		noiseDensityFunction
	m	(Ldgs;)Ldgs;	a	wrapNew
		p	1		densityFunction
	m	(Ldgs;)Ldgs;	apply	apply
		p	1		densityFunction
	f	J	a	val$seed
	f	Z	b	val$useLegacyInit
	f	Ldhn;	c	this$0
	f	Ljava/util/Map;	d	wrapped
c	dho	net/minecraft/world/level/levelgen/RandomSupport
	m	()J	a	generateUniqueSeed
	m	(J)J	a	mixStafford13
		p	0		seed
	m	(J)Ldho$a;	b	upgradeSeedTo128bit
		p	0		seed
	m	(J)J	c	lambda$generateUniqueSeed$0
		p	0		seedUniquifier
	f	J	a	GOLDEN_RATIO_64
	f	J	b	SILVER_RATIO_64
	f	Ljava/util/concurrent/atomic/AtomicLong;	c	SEED_UNIQUIFIER
c	dho$a	net/minecraft/world/level/levelgen/RandomSupport$Seed128bit
	m	()J	a	seedLo
	m	()J	b	seedHi
	f	J	a	seedLo
	f	J	b	seedHi
c	dhp	net/minecraft/world/level/levelgen/SingleThreadedRandomSource
	m	(J)V	<init>	<init>
		p	1		seed
	m	(J)V	b	setSeed
		p	1		seed
	m	(I)I	c	next
		p	1		bits
	m	()Lapo;	d	fork
	m	()Ldhm;	e	forkPositional
	m	()D	k	nextGaussian
	f	I	d	MODULUS_BITS
	f	J	e	MODULUS_MASK
	f	J	f	MULTIPLIER
	f	J	g	INCREMENT
	f	J	h	seed
	f	Ldhb;	i	gaussianSource
c	dhq	net/minecraft/world/level/levelgen/SurfaceRules
	m	()Ldhq$f;	a	steep
	m	(II)Ldhq$f;	a	waterBlockCheck
		p	0		offset
		p	1		runDepthMultiplier
	m	(IZILdqk;)Ldhq$f;	a	stoneDepthCheck
		p	0		offset
		p	1		addSurfaceDepth
		p	2		secondaryDepthRange
		p	3		verticalSurfaceType
	m	(IZLdqk;)Ldhq$f;	a	stoneDepthCheck
		p	0		offset
		p	1		addSurfaceDepth
		p	2		verticalSurfaceType
	m	(Ladc;D)Ldhq$f;	a	noiseCondition
		p	0		noise
		p	1		min
	m	(Ladc;DD)Ldhq$f;	a	noiseCondition
		p	0		noise
		p	1		min
		p	3		max
	m	(Ldbq;)Ldhq$o;	a	state
		p	0		state
	m	(Ldhq$f;)Ldhq$f;	a	not
		p	0		target
	m	(Ldhq$f;Ldhq$o;)Ldhq$o;	a	ifTrue
		p	0		condition
		p	1		rule
	m	(Ldht;I)Ldhq$f;	a	yBlockCheck
		p	0		anchor
		p	1		runDepthMultiplier
	m	(Lhq;Ljava/lang/String;Lapd;)Lcom/mojang/serialization/Codec;	a	register
		p	0		registry
		p	1		id
		p	2		codecHolder
	m	(Ljava/lang/String;Ldht;Ldht;)Ldhq$f;	a	verticalGradient
		p	0		id
		p	1		trueAtAndBelow
		p	2		falseAtAndAbove
	m	(Ljava/util/List;)Ldhq$c;	a	isBiome
		p	0		biomes
	m	([Ladc;)Ldhq$f;	a	isBiome
		p	0		biomes
	m	([Ldhq$o;)Ldhq$o;	a	sequence
		p	0		rules
	m	()Ldhq$f;	b	hole
	m	(II)Ldhq$f;	b	waterStartCheck
		p	0		offset
		p	1		runDepthMultiplier
	m	(Ldht;I)Ldhq$f;	b	yStartCheck
		p	0		anchor
		p	1		runDepthMultiplier
	m	()Ldhq$f;	c	abovePreliminarySurface
	m	()Ldhq$f;	d	temperature
	m	()Ldhq$o;	e	bandlands
	f	Ldhq$f;	a	ON_FLOOR
	f	Ldhq$f;	b	UNDER_FLOOR
	f	Ldhq$f;	c	DEEP_UNDER_FLOOR
	f	Ldhq$f;	d	VERY_DEEP_UNDER_FLOOR
	f	Ldhq$f;	e	ON_CEILING
	f	Ldhq$f;	f	UNDER_CEILING
c	dhq$a	net/minecraft/world/level/levelgen/SurfaceRules$AbovePreliminarySurface
	m	()Lapd;	a	codec
	m	(Ldhq$g;)Ldhq$e;	a	apply
	m	()[Ldhq$a;	b	$values
	f	Ldhq$a;	a	INSTANCE
	f	Lapd;	c	CODEC
	f	[Ldhq$a;	d	$VALUES
c	dhq$b	net/minecraft/world/level/levelgen/SurfaceRules$Bandlands
	m	()Lapd;	a	codec
	m	(Ldhq$g;)Ldhq$u;	a	apply
	m	()[Ldhq$b;	b	$values
	f	Ldhq$b;	a	INSTANCE
	f	Lapd;	c	CODEC
	f	[Ldhq$b;	d	$VALUES
c	dhq$c	net/minecraft/world/level/levelgen/SurfaceRules$BiomeConditionSource
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		biomes
	m	()Lapd;	a	codec
	m	(Ldhq$c;)Ljava/util/List;	a	lambda$static$0
	m	(Ldhq$g;)Ldhq$e;	a	apply
	f	Lapd;	a	CODEC
	f	Ljava/util/List;	c	biomes
	f	Ljava/util/function/Predicate;	d	biomeNameTest
c	dhq$c$a	net/minecraft/world/level/levelgen/SurfaceRules$BiomeConditionSource$1BiomeCondition
	m	(Ldhq$c;Ldhq$g;)V	<init>	<init>
		p	2		context
	m	()Z	a	compute
	f	Ldhq$g;	a	val$ruleContext
	f	Ldhq$c;	b	this$0
c	dhq$d	net/minecraft/world/level/levelgen/SurfaceRules$BlockRuleSource
	m	(Ldbq;)V	<init>	<init>
		p	1		resultState
	m	()Lapd;	a	codec
	m	(Ldhq$g;)Ldhq$u;	a	apply
	m	()Ldbq;	b	resultState
	m	()Ldhq$r;	c	rule
	f	Ldbq;	a	resultState
	f	Ldhq$r;	c	rule
	f	Lapd;	d	CODEC
c	dhq$e	net/minecraft/world/level/levelgen/SurfaceRules$Condition
	m	()Z	b	test
c	dhq$f	net/minecraft/world/level/levelgen/SurfaceRules$ConditionSource
	m	()Lapd;	a	codec
	m	(Ldhq$f;)Lcom/mojang/serialization/Codec;	a	lambda$static$0
	m	(Lhq;)Lcom/mojang/serialization/Codec;	a	bootstrap
		p	0		registry
	f	Lcom/mojang/serialization/Codec;	b	CODEC
c	dhq$g	net/minecraft/world/level/levelgen/SurfaceRules$Context
	m	(Ldhr;Ldhn;Lddn;Ldhd;Ljava/util/function/Function;Lhq;Ldhw;)V	<init>	<init>
		p	1		surfaceBuilder
		p	2		noiseConfig
		p	3		chunk
		p	4		chunkNoiseSampler
		p	5		posToBiome
		p	7		heightContext
	m	()D	a	getSurfaceSecondary
	m	(I)I	a	blockCoordToSurfaceCell
	m	(II)V	a	updateXZ
		p	1		blockX
		p	2		blockZ
	m	(III)Lhd;	a	lambda$updateY$0
	m	(IIIIII)V	a	updateY
		p	1		stoneDepthAbove
		p	2		stoneDepthBelow
		p	3		fluidHeight
		p	4		blockX
		p	5		blockY
		p	6		blockZ
	m	()I	b	getMinSurfaceLevel
	m	(I)I	b	surfaceCellToBlockCoord
	f	Ljava/util/function/Supplier;	A	biome
	f	I	B	blockY
	f	I	C	waterHeight
	f	I	D	stoneDepthBelow
	f	I	E	stoneDepthAbove
	f	I	a	HOW_FAR_BELOW_PRELIMINARY_SURFACE_LEVEL_TO_BUILD_SURFACE
	f	I	b	SURFACE_CELL_BITS
	f	I	c	SURFACE_CELL_SIZE
	f	I	d	SURFACE_CELL_MASK
	f	Ldhr;	e	system
	f	Ldhq$e;	f	temperature
	f	Ldhq$e;	g	steep
	f	Ldhq$e;	h	hole
	f	Ldhq$e;	i	abovePreliminarySurface
	f	Ldhn;	j	randomState
	f	Lddn;	k	chunk
	f	Ldhd;	l	noiseChunk
	f	Ljava/util/function/Function;	m	biomeGetter
	f	Ldhw;	n	context
	f	J	o	lastPreliminarySurfaceCellOrigin
	f	[I	p	preliminarySurfaceCache
	f	J	q	lastUpdateXZ
	f	I	r	blockX
	f	I	s	blockZ
	f	I	t	surfaceDepth
	f	J	u	lastSurfaceDepth2Update
	f	D	v	surfaceSecondary
	f	J	w	lastMinSurfaceLevelUpdate
	f	I	x	minSurfaceLevel
	f	J	y	lastUpdateY
	f	Lgt$a;	z	pos
c	dhq$g$a	net/minecraft/world/level/levelgen/SurfaceRules$Context$AbovePreliminarySurfaceCondition
	m	()Z	b	test
	f	Ldhq$g;	a	this$0
c	dhq$g$b	net/minecraft/world/level/levelgen/SurfaceRules$Context$HoleCondition
	m	(Ldhq$g;)V	<init>	<init>
		p	1		context
	m	()Z	a	compute
c	dhq$g$c	net/minecraft/world/level/levelgen/SurfaceRules$Context$SteepMaterialCondition
	m	(Ldhq$g;)V	<init>	<init>
		p	1		context
	m	()Z	a	compute
c	dhq$g$d	net/minecraft/world/level/levelgen/SurfaceRules$Context$TemperatureHelperCondition
	m	(Ldhq$g;)V	<init>	<init>
		p	1		context
	m	()Z	a	compute
c	dhq$h	net/minecraft/world/level/levelgen/SurfaceRules$Hole
	m	()Lapd;	a	codec
	m	(Ldhq$g;)Ldhq$e;	a	apply
	m	()[Ldhq$h;	b	$values
	f	Ldhq$h;	a	INSTANCE
	f	Lapd;	c	CODEC
	f	[Ldhq$h;	d	$VALUES
c	dhq$i	net/minecraft/world/level/levelgen/SurfaceRules$LazyCondition
	m	(Ldhq$g;)V	<init>	<init>
		p	1		context
	m	()Z	a	compute
	m	()Z	b	test
	m	()J	c	getContextLastUpdate
	f	J	a	lastUpdate
	f	Ldhq$g;	c	context
	f	Ljava/lang/Boolean;	d	result
c	dhq$j	net/minecraft/world/level/levelgen/SurfaceRules$LazyXZCondition
	m	(Ldhq$g;)V	<init>	<init>
		p	1		context
	m	()J	c	getContextLastUpdate
c	dhq$k	net/minecraft/world/level/levelgen/SurfaceRules$LazyYCondition
	m	(Ldhq$g;)V	<init>	<init>
		p	1		context
	m	()J	c	getContextLastUpdate
c	dhq$l	net/minecraft/world/level/levelgen/SurfaceRules$NoiseThresholdConditionSource
	m	()Lapd;	a	codec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	(Ldhq$g;)Ldhq$e;	a	apply
	m	()Ladc;	b	noise
	m	()D	c	minThreshold
	m	()D	d	maxThreshold
	f	Ladc;	a	noise
	f	D	c	minThreshold
	f	D	d	maxThreshold
	f	Lapd;	e	CODEC
c	dhq$l$a	net/minecraft/world/level/levelgen/SurfaceRules$NoiseThresholdConditionSource$1NoiseThresholdCondition
	m	(Ldhq$l;Ldhq$g;Ldvo;)V	<init>	<init>
		p	2		context
	m	()Z	a	compute
	f	Ldhq$g;	a	val$ruleContext
	f	Ldvo;	b	val$noise
	f	Ldhq$l;	e	this$0
c	dhq$m	net/minecraft/world/level/levelgen/SurfaceRules$NotCondition
	m	()Ldhq$e;	a	target
	m	()Z	b	test
	f	Ldhq$e;	a	target
c	dhq$n	net/minecraft/world/level/levelgen/SurfaceRules$NotConditionSource
	m	()Lapd;	a	codec
	m	(Ldhq$g;)Ldhq$e;	a	apply
	m	()Ldhq$f;	b	target
	f	Ldhq$f;	a	target
	f	Lapd;	c	CODEC
c	dhq$o	net/minecraft/world/level/levelgen/SurfaceRules$RuleSource
	m	()Lapd;	a	codec
	m	(Ldhq$o;)Lcom/mojang/serialization/Codec;	a	lambda$static$0
	m	(Lhq;)Lcom/mojang/serialization/Codec;	a	bootstrap
		p	0		registry
	f	Lcom/mojang/serialization/Codec;	b	CODEC
c	dhq$p	net/minecraft/world/level/levelgen/SurfaceRules$SequenceRule
	m	()Ljava/util/List;	a	rules
	m	(III)Ldbq;	tryApply	tryApply
		p	1		x
		p	2		y
		p	3		z
	f	Ljava/util/List;	a	rules
c	dhq$q	net/minecraft/world/level/levelgen/SurfaceRules$SequenceRuleSource
	m	()Lapd;	a	codec
	m	(Ldhq$g;)Ldhq$u;	a	apply
	m	()Ljava/util/List;	b	sequence
	f	Ljava/util/List;	a	sequence
	f	Lapd;	c	CODEC
c	dhq$r	net/minecraft/world/level/levelgen/SurfaceRules$StateRule
	m	()Ldbq;	a	state
	m	(III)Ldbq;	tryApply	tryApply
		p	1		x
		p	2		y
		p	3		z
	f	Ldbq;	a	state
c	dhq$s	net/minecraft/world/level/levelgen/SurfaceRules$Steep
	m	()Lapd;	a	codec
	m	(Ldhq$g;)Ldhq$e;	a	apply
	m	()[Ldhq$s;	b	$values
	f	Ldhq$s;	a	INSTANCE
	f	Lapd;	c	CODEC
	f	[Ldhq$s;	d	$VALUES
c	dhq$t	net/minecraft/world/level/levelgen/SurfaceRules$StoneDepthCheck
	m	()Lapd;	a	codec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	(Ldhq$g;)Ldhq$e;	a	apply
	m	()I	b	offset
	m	()Z	c	addSurfaceDepth
	m	()I	d	secondaryDepthRange
	m	()Ldqk;	e	surfaceType
	f	I	a	offset
	f	Z	c	addSurfaceDepth
	f	I	d	secondaryDepthRange
	f	Ldqk;	e	surfaceType
	f	Lapd;	f	CODEC
c	dhq$t$a	net/minecraft/world/level/levelgen/SurfaceRules$StoneDepthCheck$1StoneDepthCondition
	m	(Ldhq$t;Ldhq$g;Z)V	<init>	<init>
		p	2		context
	m	()Z	a	compute
	f	Ldhq$g;	a	val$ruleContext
	f	Z	b	val$ceiling
	f	Ldhq$t;	e	this$0
c	dhq$u	net/minecraft/world/level/levelgen/SurfaceRules$SurfaceRule
	m	(III)Ldbq;	tryApply	tryApply
		p	1		x
		p	2		y
		p	3		z
c	dhq$v	net/minecraft/world/level/levelgen/SurfaceRules$Temperature
	m	()Lapd;	a	codec
	m	(Ldhq$g;)Ldhq$e;	a	apply
	m	()[Ldhq$v;	b	$values
	f	Ldhq$v;	a	INSTANCE
	f	Lapd;	c	CODEC
	f	[Ldhq$v;	d	$VALUES
c	dhq$w	net/minecraft/world/level/levelgen/SurfaceRules$TestRule
	m	()Ldhq$e;	a	condition
	m	()Ldhq$u;	b	followup
	m	(III)Ldbq;	tryApply	tryApply
		p	1		x
		p	2		y
		p	3		z
	f	Ldhq$e;	a	condition
	f	Ldhq$u;	b	followup
c	dhq$x	net/minecraft/world/level/levelgen/SurfaceRules$TestRuleSource
	m	()Lapd;	a	codec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	(Ldhq$g;)Ldhq$u;	a	apply
	m	()Ldhq$f;	b	ifTrue
	m	()Ldhq$o;	c	thenRun
	f	Ldhq$f;	a	ifTrue
	f	Ldhq$o;	c	thenRun
	f	Lapd;	d	CODEC
c	dhq$y	net/minecraft/world/level/levelgen/SurfaceRules$VerticalGradientConditionSource
	m	()Lapd;	a	codec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	(Ldhq$g;)Ldhq$e;	a	apply
	m	()Ladd;	b	randomName
	m	()Ldht;	c	trueAtAndBelow
	m	()Ldht;	d	falseAtAndAbove
	f	Ladd;	a	randomName
	f	Ldht;	c	trueAtAndBelow
	f	Ldht;	d	falseAtAndAbove
	f	Lapd;	e	CODEC
c	dhq$y$a	net/minecraft/world/level/levelgen/SurfaceRules$VerticalGradientConditionSource$1VerticalGradientCondition
	m	(Ldhq$y;Ldhq$g;IILdhm;)V	<init>	<init>
		p	2		context
	m	()Z	a	compute
	f	Ldhq$g;	a	val$ruleContext
	f	I	b	val$trueAtAndBelow
	f	I	e	val$falseAtAndAbove
	f	Ldhm;	f	val$randomFactory
	f	Ldhq$y;	g	this$0
c	dhq$z	net/minecraft/world/level/levelgen/SurfaceRules$WaterConditionSource
	m	()Lapd;	a	codec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	(Ldhq$g;)Ldhq$e;	a	apply
	m	()I	b	offset
	m	()I	c	surfaceDepthMultiplier
	m	()Z	d	addStoneDepth
	f	I	a	offset
	f	I	c	surfaceDepthMultiplier
	f	Z	d	addStoneDepth
	f	Lapd;	e	CODEC
c	dhq$z$a	net/minecraft/world/level/levelgen/SurfaceRules$WaterConditionSource$1WaterCondition
	m	(Ldhq$z;Ldhq$g;)V	<init>	<init>
		p	2		context
	m	()Z	a	compute
	f	Ldhq$g;	a	val$ruleContext
	f	Ldhq$z;	b	this$0
c	dhq$aa	net/minecraft/world/level/levelgen/SurfaceRules$YConditionSource
	m	()Lapd;	a	codec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	(Ldhq$g;)Ldhq$e;	a	apply
	m	()Ldht;	b	anchor
	m	()I	c	surfaceDepthMultiplier
	m	()Z	d	addStoneDepth
	f	Ldht;	a	anchor
	f	I	c	surfaceDepthMultiplier
	f	Z	d	addStoneDepth
	f	Lapd;	e	CODEC
c	dhq$aa$a	net/minecraft/world/level/levelgen/SurfaceRules$YConditionSource$1YCondition
	m	(Ldhq$aa;Ldhq$g;)V	<init>	<init>
		p	2		context
	m	()Z	a	compute
	f	Ldhq$g;	a	val$ruleContext
	f	Ldhq$aa;	b	this$0
c	dhr	net/minecraft/world/level/levelgen/SurfaceSystem
	m	(Ldhn;Ldbq;ILdhm;)V	<init>	<init>
		p	1		noiseConfig
		p	2		defaultState
		p	3		seaLevel
		p	4		randomDeriver
	m	(II)I	a	getSurfaceDepth
	m	(III)Ldbq;	a	getBand
		p	1		x
		p	2		y
		p	3		z
	m	(ILcnf;Lddk;Lgt$a;III)V	a	frozenOceanExtension
		p	1		minY
		p	2		biome
		p	3		column
		p	4		mutablePos
		p	5		x
		p	6		z
		p	7		surfaceY
	m	(Lapo;)[Ldbq;	a	generateBands
		p	0		random
	m	(Lapo;[Ldbq;ILdbq;)V	a	makeBands
		p	0		random
		p	1		terracottaBands
		p	2		minBandSize
		p	3		state
	m	(Ldbq;)Z	a	isStone
		p	1		state
	m	(Lddk;IIILcmk;)V	a	erodedBadlandsExtension
		p	1		column
		p	2		x
		p	3		z
		p	4		surfaceY
		p	5		chunk
	m	(Ldhn;Lcnh;Lhq;ZLdhw;Lddn;Ldhd;Ldhq$o;)V	a	buildSurface
		p	1		noiseConfig
		p	2		biomeAccess
		p	3		biomeRegistry
		p	4		useLegacyRandom
		p	5		heightContext
		p	6		chunk
		p	7		chunkNoiseSampler
		p	8		materialRule
	m	(Ldhq$o;Ldiz;Ljava/util/function/Function;Lddn;Ldhd;Lgt;Z)Ljava/util/Optional;	a	topMaterial
		p	1		rule
		p	2		context
		p	3		posToBiome
		p	4		chunk
		p	5		chunkNoiseSampler
		p	6		pos
		p	7		hasFluid
	m	(II)D	b	getSurfaceSecondary
	f	Ldbq;	a	WHITE_TERRACOTTA
	f	Ldbq;	b	ORANGE_TERRACOTTA
	f	Ldbq;	c	TERRACOTTA
	f	Ldbq;	d	YELLOW_TERRACOTTA
	f	Ldbq;	e	BROWN_TERRACOTTA
	f	Ldbq;	f	RED_TERRACOTTA
	f	Ldbq;	g	LIGHT_GRAY_TERRACOTTA
	f	Ldbq;	h	PACKED_ICE
	f	Ldbq;	i	SNOW_BLOCK
	f	Ldbq;	j	defaultBlock
	f	I	k	seaLevel
	f	[Ldbq;	l	clayBands
	f	Ldvo;	m	clayBandsOffsetNoise
	f	Ldvo;	n	badlandsPillarNoise
	f	Ldvo;	o	badlandsPillarRoofNoise
	f	Ldvo;	p	badlandsSurfaceNoise
	f	Ldvo;	q	icebergPillarNoise
	f	Ldvo;	r	icebergPillarRoofNoise
	f	Ldvo;	s	icebergSurfaceNoise
	f	Ldhm;	t	noiseRandom
	f	Ldvo;	u	surfaceNoise
	f	Ldvo;	v	surfaceSecondaryNoise
c	dhr$1	net/minecraft/world/level/levelgen/SurfaceSystem$1
	m	(I)Ldbq;	a	getBlock
		p	1		y
	m	(ILdbq;)V	a	setBlock
		p	1		y
		p	2		state
	f	Lddn;	a	val$protoChunk
	f	Lgt$a;	b	val$columnPos
	f	Lclp;	c	val$chunkPos
	f	Ldhr;	d	this$0
c	dhs	net/minecraft/world/level/levelgen/ThreadSafeLegacyRandomSource
	m	(J)V	<init>	<init>
		p	1		seed
	m	(J)V	b	setSeed
		p	1		seed
	m	(I)I	c	next
		p	1		bits
	m	()Lapo;	d	fork
	m	()Ldhm;	e	forkPositional
	m	()D	k	nextGaussian
	f	I	d	MODULUS_BITS
	f	J	e	MODULUS_MASK
	f	J	f	MULTIPLIER
	f	J	g	INCREMENT
	f	Ljava/util/concurrent/atomic/AtomicLong;	h	seed
	f	Ldhb;	i	gaussianSource
c	dht	net/minecraft/world/level/levelgen/VerticalAnchor
	m	()Ldht;	a	bottom
	m	(I)Ldht;	a	absolute
		p	0		offset
	m	(Lcom/mojang/datafixers/util/Either;)Ldht;	a	merge
		p	0		either
	m	(Ldht;)Lcom/mojang/datafixers/util/Either;	a	split
		p	0		yOffset
	m	(Ldhw;)I	a	resolveY
		p	1		context
	m	()Ldht;	b	top
	m	(I)Ldht;	b	aboveBottom
		p	0		offset
	m	(Lcom/mojang/datafixers/util/Either;)Ljava/lang/Record;	b	lambda$merge$0
	m	(I)Ldht;	c	belowTop
		p	0		offset
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldht;	b	BOTTOM
	f	Ldht;	c	TOP
c	dht$a	net/minecraft/world/level/levelgen/VerticalAnchor$AboveBottom
	m	(Ldhw;)I	a	resolveY
		p	1		context
	m	()I	c	offset
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	I	e	offset
c	dht$b	net/minecraft/world/level/levelgen/VerticalAnchor$Absolute
	m	(Ldhw;)I	a	resolveY
		p	1		context
	m	()I	c	y
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	I	e	y
c	dht$c	net/minecraft/world/level/levelgen/VerticalAnchor$BelowTop
	m	(Ldhw;)I	a	resolveY
		p	1		context
	m	()I	c	offset
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	I	e	offset
c	dhu	net/minecraft/world/level/levelgen/WorldDimensions
	m	()Lddo;	a	overworld
	m	(Ladc;)Ljava/util/Optional;	a	get
		p	1		key
	m	(Ladc;Ldfa;)Lcom/mojang/serialization/Lifecycle;	a	checkStability
		p	0		key
		p	1		dimensionOptions
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ldfa;)Z	a	isStableOverworld
		p	0		dimensionOptions
	m	(Lhq;)Ldhu$b;	a	bake
		p	1		existingRegistry
	m	(Lhq;Lhd;Lddo;)Lhq;	a	withOverworld
		p	0		currentRegistry
		p	1		overworldEntry
		p	2		chunkGenerator
	m	(Lhq;Lhq;Lddo;)Lhq;	a	withOverworld
		p	0		dynamicRegistry
		p	1		currentRegistry
		p	2		chunkGenerator
	m	(Lhq;Ljava/util/List;Ladc;)V	a	lambda$bake$5
		p	3		key
	m	(Lhr;Lddo;)Ldhu;	a	replaceOverworldGenerator
		p	1		dynamicRegistryManager
		p	2		chunkGenerator
	m	(Lhz;Ldhu$a;)V	a	lambda$bake$6
		p	1		entry
	m	(Ljava/util/List;Ladc;Ldfa;)V	a	lambda$bake$4
		p	2		dimensionOptions
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	a	keysInOrder
		p	0		otherKeys
	m	()Lcom/google/common/collect/ImmutableSet;	b	levels
	m	(Ladc;)Ljava/util/Optional;	b	lambda$bake$3
	m	(Ladc;Ldfa;)Z	b	isVanillaLike
		p	0		key
		p	1		dimensionOptions
	m	(Ldfa;)Z	b	isStableNether
		p	0		dimensionOptions
	m	(Lhq;)Ldyi$a;	b	specialWorldProperty
		p	0		dimensionOptionsRegistry
	m	()Z	c	isDebug
	m	(Ladc;)Z	c	lambda$keysInOrder$1
		p	0		key
	m	(Ldfa;)Z	c	isStableEnd
		p	0		dimensionOptions
	m	()Lhq;	d	dimensions
	m	(Ldfa;)Ldyi$a;	d	lambda$specialWorldProperty$2
		p	0		overworldEntry
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lhq;	b	dimensions
	f	Ljava/util/Set;	c	BUILTIN_ORDER
	f	I	d	VANILLA_DIMENSION_COUNT
c	dhu$a	net/minecraft/world/level/levelgen/WorldDimensions$1Entry
	m	()Ladc;	a	key
	m	()Ldfa;	b	value
	m	()Lcom/mojang/serialization/Lifecycle;	c	lifecycle
	f	Ladc;	a	key
	f	Ldfa;	b	value
c	dhu$b	net/minecraft/world/level/levelgen/WorldDimensions$Complete
	m	()Lcom/mojang/serialization/Lifecycle;	a	lifecycle
	m	()Lhr$b;	b	dimensionsRegistryAccess
	m	()Lhq;	c	dimensions
	m	()Ldyi$a;	d	specialWorldProperty
	f	Lhq;	a	dimensions
	f	Ldyi$a;	b	specialWorldProperty
c	dhv	net/minecraft/world/level/levelgen/WorldGenSettings
	m	()Ldhx;	a	options
	m	(Lcom/mojang/serialization/DynamicOps;Ldhx;Ldhu;)Lcom/mojang/serialization/DataResult;	a	encode
		p	0		registryOps
		p	1		generatorOptions
		p	2		dimensionOptionsRegistryHolder
	m	(Lcom/mojang/serialization/DynamicOps;Ldhx;Lhr;)Lcom/mojang/serialization/DataResult;	a	encode
		p	0		registryOps
		p	1		generatorOptions
		p	2		dynamicRegistryManager
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Ldhu;	b	dimensions
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldhx;	b	options
	f	Ldhu;	c	dimensions
c	dhw	net/minecraft/world/level/levelgen/WorldGenerationContext
	m	(Lddo;Lcmk;)V	<init>	<init>
		p	1		generator
		p	2		world
	m	()I	a	getMinGenY
	m	()I	b	getGenDepth
	f	I	a	minY
	f	I	b	height
c	dhx	net/minecraft/world/level/levelgen/WorldOptions
	m	(JZZ)V	<init>	<init>
		p	1		seed
		p	3		generateStructures
		p	4		bonusChest
	m	(JZZLjava/util/Optional;)V	<init>	<init>
		p	1		seed
		p	3		generateStructures
		p	4		bonusChest
		p	5		legacyCustomOptions
	m	()Ldhx;	a	defaultWithRandomSeed
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Ldhx;)Ljava/util/Optional;	a	lambda$static$0
		p	0		generatorOptions
	m	(Ljava/lang/String;)Ljava/util/OptionalLong;	a	parseSeed
		p	0		seed
	m	(Ljava/util/OptionalLong;)Ldhx;	a	withSeed
		p	1		seed
	m	(Z)Ldhx;	a	withBonusChest
		p	1		bonusChest
	m	()J	b	seed
	m	(Z)Ldhx;	b	withStructures
		p	1		structures
	m	()Z	c	generateStructures
	m	()Z	d	generateBonusChest
	m	()Z	e	isOldCustomizedWorld
	m	()J	f	randomSeed
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ldhx;	b	DEMO_OPTIONS
	f	J	c	seed
	f	Z	d	generateStructures
	f	Z	e	generateBonusChest
	f	Ljava/util/Optional;	f	legacyCustomOptions
c	dhy	net/minecraft/world/level/levelgen/WorldgenRandom
	m	(Lapo;)V	<init>	<init>
		p	1		baseRandom
	m	(IIJJ)Lapo;	a	seedSlimeChunk
		p	0		chunkX
		p	1		chunkZ
		p	2		worldSeed
		p	4		scrambler
	m	(JII)J	a	setDecorationSeed
		p	1		worldSeed
		p	3		blockX
		p	4		blockZ
	m	(JIII)V	a	setLargeFeatureWithSalt
		p	1		worldSeed
		p	3		regionX
		p	4		regionZ
		p	5		salt
	m	(J)V	b	setSeed
		p	1		seed
	m	(JII)V	b	setFeatureSeed
		p	1		populationSeed
		p	3		index
		p	4		step
	m	(I)I	c	next
		p	1		bits
	m	(JII)V	c	setLargeFeatureSeed
		p	1		worldSeed
		p	3		chunkX
		p	4		chunkZ
	m	()Lapo;	d	fork
	m	()Ldhm;	e	forkPositional
	m	()I	l	getCount
	f	Lapo;	d	randomSource
	f	I	e	count
c	dhy$a	net/minecraft/world/level/levelgen/WorldgenRandom$Algorithm
	m	(Ljava/lang/String;ILjava/util/function/LongFunction;)V	<init>	<init>
		p	3		provider
	m	()[Ldhy$a;	a	$values
	m	(J)Lapo;	a	newInstance
		p	1		seed
	f	Ldhy$a;	a	LEGACY
	f	Ldhy$a;	b	XOROSHIRO
	f	Ljava/util/function/LongFunction;	c	constructor
	f	[Ldhy$a;	d	$VALUES
c	dhz	net/minecraft/world/level/levelgen/Xoroshiro128PlusPlus
	m	(JJ)V	<init>	<init>
		p	1		seedLo
		p	3		seedHi
	m	(Ldho$a;)V	<init>	<init>
		p	1		seed
	m	()J	a	nextLong
	f	J	a	seedLo
	f	J	b	seedHi
c	dia	net/minecraft/world/level/levelgen/XoroshiroRandomSource
	m	(J)V	<init>	<init>
		p	1		seed
	m	(JJ)V	<init>	<init>
		p	1		seedLo
		p	3		seedHi
	m	(I)I	a	nextInt
		p	1		bound
	m	(I)V	b	consumeCount
		p	1		count
	m	(J)V	b	setSeed
		p	1		seed
	m	(I)J	c	nextBits
		p	1		bits
	m	()Lapo;	d	fork
	m	()Ldhm;	e	forkPositional
	m	()I	f	nextInt
	m	()J	g	nextLong
	m	()Z	h	nextBoolean
	m	()F	i	nextFloat
	m	()D	j	nextDouble
	m	()D	k	nextGaussian
	f	F	b	FLOAT_UNIT
	f	D	c	DOUBLE_UNIT
	f	Ldhz;	d	randomNumberGenerator
	f	Ldhb;	e	gaussianSource
c	dia$a	net/minecraft/world/level/levelgen/XoroshiroRandomSource$XoroshiroPositionalRandomFactory
	m	(JJ)V	<init>	<init>
		p	1		seedLo
		p	3		seedHi
	m	(III)Lapo;	a	at
		p	1		x
		p	2		y
		p	3		z
	m	(Ljava/lang/String;)Lapo;	a	fromHashOf
		p	1		seed
	m	(Ljava/lang/StringBuilder;)V	a	parityConfigString
		p	1		info
	f	Lcom/google/common/hash/HashFunction;	a	MD5_128
	f	J	b	seedLo
	f	J	c	seedHi
c	dib	net/minecraft/world/level/levelgen/blending/Blender
	m	(Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap;Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap;)V	<init>	<init>
		p	1		blendingData
		p	2		closeBlendingData
	m	()Ldib;	a	empty
	m	(D)D	a	heightToOffset
		p	0		height
	m	(DDDDDD)D	a	distanceToCube
		p	0		x1
		p	2		y1
		p	4		z1
		p	6		x2
		p	8		y2
		p	10		z2
	m	(DDDDDDD)D	a	lambda$makeOffsetOldChunkDistanceGetter$11
		p	8		offsetX
		p	10		y
		p	12		offsetZ
	m	(II)Ldib$a;	a	blendOffsetAndFactor
		p	1		blockX
		p	2		blockZ
	m	(III)Lhd;	a	blendBiome
		p	1		x
		p	2		y
		p	3		z
	m	(IIILdib$b;)D	a	getBlendingDataValue
		p	1		biomeX
		p	2		biomeY
		p	3		biomeZ
		p	4		sampler
	m	(IIILorg/apache/commons/lang3/mutable/MutableDouble;Lorg/apache/commons/lang3/mutable/MutableDouble;Lorg/apache/commons/lang3/mutable/MutableDouble;IIID)V	a	lambda$blendDensity$2
		p	6		biomeX
		p	7		halfSectionY
		p	8		biomeZ
		p	9		collidableBlockDensity
	m	(IIILorg/apache/commons/lang3/mutable/MutableDouble;Lorg/apache/commons/lang3/mutable/MutableDouble;Lorg/apache/commons/lang3/mutable/MutableDouble;Ljava/lang/Long;Ldic;)V	a	lambda$blendDensity$3
		p	6		chunkPos
		p	7		data
	m	(IIILorg/apache/commons/lang3/mutable/MutableDouble;Lorg/apache/commons/lang3/mutable/MutableObject;Ljava/lang/Long;Ldic;)V	a	lambda$blendBiome$6
		p	5		chunkPos
		p	6		data
	m	(IILorg/apache/commons/lang3/mutable/MutableDouble;Lorg/apache/commons/lang3/mutable/MutableDouble;Lorg/apache/commons/lang3/mutable/MutableDouble;IID)V	a	lambda$blendOffsetAndFactor$0
		p	5		biomeX
		p	6		biomeZ
		p	7		height
	m	(IILorg/apache/commons/lang3/mutable/MutableDouble;Lorg/apache/commons/lang3/mutable/MutableDouble;Lorg/apache/commons/lang3/mutable/MutableDouble;Ljava/lang/Long;Ldic;)V	a	lambda$blendOffsetAndFactor$1
		p	5		chunkPos
		p	6		data
	m	(IILorg/apache/commons/lang3/mutable/MutableDouble;Lorg/apache/commons/lang3/mutable/MutableObject;IILhd;)V	a	lambda$blendBiome$5
		p	4		biomeX
		p	5		biomeZ
		p	6		biome
	m	(Laiw;)Ldib;	a	of
		p	0		chunkRegion
	m	(Laiw;Lddn;)V	a	generateBorderTicks
		p	0		chunkRegion
		p	1		chunk
	m	(Lcnb;Ldeh;)V	a	addAroundOldChunksCarvingMaskFilter
		p	0		world
		p	1		chunk
	m	(Lcni;)Lcni;	a	getBiomeResolver
		p	1		biomeSupplier
	m	(Lcni;IIILcno$f;)Lhd;	a	lambda$getBiomeResolver$4
		p	2		x
		p	3		y
		p	4		z
		p	5		noise
	m	(Lddm$a;Lddm;)V	a	lambda$addAroundOldChunksCarvingMaskFilter$8
		p	1		mask
	m	(Lddn;Lgt;)V	a	generateBorderTick
		p	0		chunk
		p	1		pos
	m	(Ldgs$b;D)D	a	blendDensity
		p	1		pos
		p	2		density
	m	(Ldib$b;IIIII)D	a	getBlendingDataValue
		p	1		sampler
		p	2		chunkX
		p	3		chunkZ
		p	4		biomeX
		p	5		biomeY
		p	6		biomeZ
	m	(Ldib$c;III)Z	a	lambda$addAroundOldChunksCarvingMaskFilter$7
		p	1		offsetX
		p	2		y
		p	3		offsetZ
	m	(Ldic;Ljava/util/Map;)Ldib$c;	a	makeOldChunkDistanceGetter
		p	0		data
		p	1		neighborData
	m	(Lha;Ldic;)Ldib$c;	a	makeOffsetOldChunkDistanceGetter
		p	0		direction
		p	1		data
	m	(Ljava/util/List;DDD)D	a	lambda$makeOldChunkDistanceGetter$10
		p	1		offsetX
		p	3		y
		p	5		offsetZ
	m	(Ljava/util/List;Lha;Ldic;)V	a	lambda$makeOldChunkDistanceGetter$9
		p	1		direction
		p	2		data
	f	Ldib;	a	EMPTY
	f	Ldvo;	b	SHIFT_NOISE
	f	I	c	HEIGHT_BLENDING_RANGE_CELLS
	f	I	d	HEIGHT_BLENDING_RANGE_CHUNKS
	f	I	e	DENSITY_BLENDING_RANGE_CELLS
	f	I	f	DENSITY_BLENDING_RANGE_CHUNKS
	f	D	g	OLD_CHUNK_XZ_RADIUS
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap;	h	heightAndBiomeBlendingData
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap;	i	densityBlendingData
c	dib$1	net/minecraft/world/level/levelgen/blending/Blender$1
	m	(Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap;Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap;)V	<init>	<init>
		p	1		blendingData
		p	2		closeBlendingData
	m	(II)Ldib$a;	a	blendOffsetAndFactor
		p	1		blockX
		p	2		blockZ
	m	(Lcni;)Lcni;	a	getBiomeResolver
		p	1		biomeSupplier
	m	(Ldgs$b;D)D	a	blendDensity
		p	1		pos
		p	2		density
c	dib$a	net/minecraft/world/level/levelgen/blending/Blender$BlendingOutput
	m	()D	a	alpha
	m	()D	b	blendingOffset
	f	D	a	alpha
	f	D	b	blendingOffset
c	dib$b	net/minecraft/world/level/levelgen/blending/Blender$CellValueGetter
	m	(Ldic;III)D	get	get
		p	1		data
		p	2		biomeX
		p	3		biomeY
		p	4		biomeZ
c	dib$c	net/minecraft/world/level/levelgen/blending/Blender$DistanceGetter
	m	(DDD)D	getDistance	getDistance
		p	1		offsetX
		p	3		y
		p	5		offsetZ
c	dic	net/minecraft/world/level/levelgen/blending/BlendingData
	m	(IILjava/util/Optional;)V	<init>	<init>
		p	1		oldBottomSectionY
		p	2		oldTopSectionY
		p	3		heights
	m	()Lcmk;	a	getAreaWithOldGeneration
	m	(D)Z	a	lambda$static$2
		p	0		height
	m	(I)I	a	getCellYIndex
		p	1		halfSectionY
	m	(II)I	a	getInsideIndex
		p	0		chunkBiomeX
		p	1		chunkBiomeZ
	m	(III)D	a	getHeight
		p	1		biomeX
		p	2		biomeY
		p	3		biomeZ
	m	(IIIILdic$b;)V	a	iterateDensities
		p	1		biomeX
		p	2		biomeZ
		p	3		minHalfSectionY
		p	4		maxHalfSectionY
		p	5		consumer
	m	(IIILdic$a;)V	a	iterateBiomes
		p	1		biomeX
		p	2		biomeY
		p	3		biomeZ
		p	4		consumer
	m	(IILdic$c;)V	a	iterateHeights
		p	1		biomeX
		p	2		biomeZ
		p	3		consumer
	m	(ILddn;II)V	a	addValuesForColumn
		p	1		index
		p	2		chunk
		p	3		chunkBlockX
		p	4		chunkBlockZ
	m	(Laiw;II)Ldic;	a	getOrUpdateBlendingData
		p	0		chunkRegion
		p	1		chunkX
		p	2		chunkZ
	m	(Lcnb;IIZ)Ljava/util/Set;	a	sideByGenerationAge
		p	0		access
		p	1		chunkX
		p	2		chunkZ
		p	3		oldNoise
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
		p	0		instance
	m	(Lddn;II)I	a	getHeightAtXZ
		p	1		chunk
		p	2		blockX
		p	3		blockZ
	m	(Lddn;III)[D	a	getDensityColumn
		p	1		chunk
		p	2		chunkBlockX
		p	3		chunkBlockZ
		p	4		surfaceHeight
	m	(Lddn;Lgt$a;)D	a	read1
		p	0		chunk
		p	1		mutablePos
	m	(Lddn;Lgt;)Z	a	isGround
		p	0		chunk
		p	1		pos
	m	(Lddn;Ljava/util/Set;)V	a	calculateData
		p	1		chunk
		p	2		newNoiseChunkDirections
	m	(Ldic;)Lcom/mojang/serialization/DataResult;	a	validateArraySize
		p	0		data
	m	([D)V	a	lambda$new$6
		p	0		heights2
	m	([DI)D	a	getDensity
		p	1		collidableBlockDensityColumn
		p	2		halfSectionY
	m	()I	b	cellCountPerColumn
	m	(I)I	b	getX
		p	0		index
	m	(II)I	b	getOutsideIndex
		p	0		chunkBiomeX
		p	1		chunkBiomeZ
	m	(III)D	b	getDensity
		p	1		chunkBiomeX
		p	2		halfSectionY
		p	3		chunkBiomeZ
	m	(Lddn;II)Ljava/util/List;	b	getBiomeColumn
		p	1		chunk
		p	2		chunkBlockX
		p	3		chunkBlockZ
	m	(Lddn;Lgt$a;)D	b	read7
		p	0		chunk
		p	1		mutablePos
	m	(Ldic;)Ljava/util/Optional;	b	lambda$static$3
		p	0		blendingData
	m	()I	c	quartCountPerColumn
	m	(I)I	c	getZ
		p	0		index
	m	(Ldic;)Ljava/lang/Integer;	c	lambda$static$1
		p	0		blendingData
	m	()I	d	getColumnMinY
	m	(I)I	d	zeroIfNegative
	m	(Ldic;)Ljava/lang/Integer;	d	lambda$static$0
		p	0		blendingData
	m	()I	e	getMinY
	m	()Ljava/lang/String;	f	lambda$validateArraySize$5
	f	I	a	CELL_WIDTH
	f	I	b	CELL_HEIGHT
	f	I	c	CELL_RATIO
	f	D	d	NO_VALUE
	f	Lcom/mojang/serialization/Codec;	e	CODEC
	f	D	f	BLENDING_DENSITY_FACTOR
	f	D	g	SOLID_DENSITY
	f	D	h	AIR_DENSITY
	f	I	i	CELLS_PER_SECTION_Y
	f	I	j	QUARTS_PER_SECTION
	f	I	k	CELL_HORIZONTAL_MAX_INDEX_INSIDE
	f	I	l	CELL_HORIZONTAL_MAX_INDEX_OUTSIDE
	f	I	m	CELL_COLUMN_INSIDE_COUNT
	f	I	n	CELL_COLUMN_OUTSIDE_COUNT
	f	I	o	CELL_COLUMN_COUNT
	f	Lcmk;	p	areaWithOldGeneration
	f	Ljava/util/List;	q	SURFACE_BLOCKS
	f	Z	r	hasCalculatedData
	f	[D	s	heights
	f	Ljava/util/List;	t	biomes
	f	[[D	u	densities
	f	Lcom/mojang/serialization/Codec;	v	DOUBLE_ARRAY_CODEC
c	dic$a	net/minecraft/world/level/levelgen/blending/BlendingData$BiomeConsumer
	m	(IILhd;)V	consume	consume
		p	1		biomeX
		p	2		biomeZ
		p	3		biome
c	dic$b	net/minecraft/world/level/levelgen/blending/BlendingData$DensityConsumer
	m	(IIID)V	consume	consume
		p	1		biomeX
		p	2		halfSectionY
		p	3		biomeZ
		p	4		collidableBlockDensity
c	dic$c	net/minecraft/world/level/levelgen/blending/BlendingData$HeightConsumer
	m	(IID)V	consume	consume
		p	1		biomeX
		p	2		biomeZ
		p	3		height
c	did	net/minecraft/world/level/levelgen/blending/package-info
c	die	net/minecraft/world/level/levelgen/blockpredicates/AllOfPredicate
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		predicates
	m	()Ldih;	a	type
	m	(Lcnb;Lgt;)Z	a	test
	f	Lcom/mojang/serialization/Codec;	a	CODEC
c	dif	net/minecraft/world/level/levelgen/blockpredicates/AnyOfPredicate
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		predicates
	m	()Ldih;	a	type
	m	(Lcnb;Lgt;)Z	a	test
	f	Lcom/mojang/serialization/Codec;	a	CODEC
c	dig	net/minecraft/world/level/levelgen/blockpredicates/BlockPredicate
	m	()Ldih;	a	type
	m	(Lanv;)Ldig;	a	matchesTag
		p	0		offset
	m	(Ldbq;Lhy;)Ldig;	a	wouldSurvive
		p	0		state
		p	1		offset
	m	(Ldig;)Ldig;	a	not
		p	0		predicate
	m	(Ldig;Ldig;)Ldig;	a	allOf
		p	0		first
		p	1		second
	m	(Lgz;)Ldig;	a	hasSturdyFace
		p	0		face
	m	(Lhy;)Ldig;	a	replaceable
		p	0		offset
	m	(Lhy;Lanv;)Ldig;	a	matchesTag
		p	0		offset
		p	1		tag
	m	(Lhy;Lgz;)Ldig;	a	hasSturdyFace
		p	0		offset
		p	1		face
	m	(Lhy;Ljava/util/List;)Ldig;	a	matchesBlocks
		p	0		offset
		p	1		blocks
	m	(Lhy;[Lcpi;)Ldig;	a	matchesBlocks
		p	0		offset
		p	1		blocks
	m	(Lhy;[Ldwi;)Ldig;	a	matchesFluids
		p	0		offset
		p	1		fluids
	m	(Ljava/util/List;)Ldig;	a	allOf
		p	0		predicates
	m	([Lcpi;)Ldig;	a	matchesBlocks
		p	0		blocks
	m	([Ldig;)Ldig;	a	allOf
		p	0		predicates
	m	([Ldwi;)Ldig;	a	matchesFluids
		p	0		fluids
	m	()Ldig;	b	replaceable
	m	(Ldig;Ldig;)Ldig;	b	anyOf
		p	0		first
		p	1		second
	m	(Lhy;)Ldig;	b	solid
		p	0		offset
	m	(Lhy;Ljava/util/List;)Ldig;	b	matchesFluids
		p	0		offset
		p	1		fluids
	m	(Ljava/util/List;)Ldig;	b	anyOf
		p	0		predicates
	m	([Ldig;)Ldig;	b	anyOf
		p	0		predicates
	m	()Ldig;	c	solid
	m	(Lhy;)Ldig;	c	noFluid
		p	0		offset
	m	(Ljava/util/List;)Ldig;	c	matchesBlocks
		p	0		blocks
	m	()Ldig;	d	noFluid
	m	(Lhy;)Ldig;	d	insideWorld
		p	0		offset
	m	()Ldig;	e	alwaysTrue
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Ldig;	c	ONLY_IN_AIR_PREDICATE
	f	Ldig;	d	ONLY_IN_AIR_OR_WATER_PREDICATE
c	dih	net/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	lambda$register$0
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Ldih;	a	register
		p	0		id
		p	1		codec
	f	Ldih;	a	MATCHING_BLOCKS
	f	Ldih;	b	MATCHING_BLOCK_TAG
	f	Ldih;	c	MATCHING_FLUIDS
	f	Ldih;	d	HAS_STURDY_FACE
	f	Ldih;	e	SOLID
	f	Ldih;	f	REPLACEABLE
	f	Ldih;	g	WOULD_SURVIVE
	f	Ldih;	h	INSIDE_WORLD_BOUNDS
	f	Ldih;	i	ANY_OF
	f	Ldih;	j	ALL_OF
	f	Ldih;	k	NOT
	f	Ldih;	l	TRUE
c	dii	net/minecraft/world/level/levelgen/blockpredicates/CombiningPredicate
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		predicates
	m	(Ldii;)Ljava/util/List;	a	lambda$codec$0
		p	0		predicate
	m	(Ljava/util/function/Function;)Lcom/mojang/serialization/Codec;	a	codec
		p	0		combiner
	m	(Ljava/util/function/Function;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$codec$1
		p	1		instance
	f	Ljava/util/List;	e	predicates
c	dij	net/minecraft/world/level/levelgen/blockpredicates/HasSturdyFacePredicate
	m	(Lhy;Lgz;)V	<init>	<init>
		p	1		offset
		p	2		face
	m	()Ldih;	a	type
	m	(Lcnb;Lgt;)Z	a	test
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Ldij;)Lgz;	a	lambda$static$1
		p	0		predicate
	m	(Ldij;)Lhy;	b	lambda$static$0
		p	0		predicate
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lhy;	e	offset
	f	Lgz;	f	direction
c	dik	net/minecraft/world/level/levelgen/blockpredicates/InsideWorldBoundsPredicate
	m	(Lhy;)V	<init>	<init>
		p	1		offset
	m	()Ldih;	a	type
	m	(Lcnb;Lgt;)Z	a	test
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Ldik;)Lhy;	a	lambda$static$0
		p	0		predicate
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lhy;	e	offset
c	dil	net/minecraft/world/level/levelgen/blockpredicates/MatchingBlockTagPredicate
	m	(Lhy;Lanv;)V	<init>	<init>
		p	1		offset
		p	2		tag
	m	()Ldih;	a	type
	m	(Ldbq;)Z	a	test
		p	1		state
	m	(Ldil;)Lanv;	a	lambda$static$0
		p	0		predicate
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$1
		p	0		instance
	f	Lanv;	a	tag
	f	Lcom/mojang/serialization/Codec;	e	CODEC
c	dim	net/minecraft/world/level/levelgen/blockpredicates/MatchingBlocksPredicate
	m	(Lhy;Lhh;)V	<init>	<init>
		p	1		offset
		p	2		blocks
	m	()Ldih;	a	type
	m	(Ldbq;)Z	a	test
		p	1		state
	m	(Ldim;)Lhh;	a	lambda$static$0
		p	0		predicate
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$1
		p	0		instance
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lhh;	e	blocks
c	din	net/minecraft/world/level/levelgen/blockpredicates/MatchingFluidsPredicate
	m	(Lhy;Lhh;)V	<init>	<init>
		p	1		offset
		p	2		fluids
	m	()Ldih;	a	type
	m	(Ldbq;)Z	a	test
		p	1		state
	m	(Ldin;)Lhh;	a	lambda$static$0
		p	0		predicate
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$1
		p	0		instance
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lhh;	e	fluids
c	dio	net/minecraft/world/level/levelgen/blockpredicates/NotPredicate
	m	(Ldig;)V	<init>	<init>
		p	1		predicate
	m	()Ldih;	a	type
	m	(Lcnb;Lgt;)Z	a	test
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Ldio;)Ldig;	a	lambda$static$0
		p	0		predicate
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldig;	e	predicate
c	dip	net/minecraft/world/level/levelgen/blockpredicates/ReplaceablePredicate
	m	(Lhy;)V	<init>	<init>
		p	1		offset
	m	()Ldih;	a	type
	m	(Ldbq;)Z	a	test
		p	1		state
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$0
		p	0		instance
	f	Lcom/mojang/serialization/Codec;	a	CODEC
c	diq	net/minecraft/world/level/levelgen/blockpredicates/SolidPredicate
	m	(Lhy;)V	<init>	<init>
		p	1		offset
	m	()Ldih;	a	type
	m	(Ldbq;)Z	a	test
		p	1		state
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$0
		p	0		instance
	f	Lcom/mojang/serialization/Codec;	a	CODEC
c	dir	net/minecraft/world/level/levelgen/blockpredicates/StateTestingPredicate
	m	(Lhy;)V	<init>	<init>
		p	1		offset
	m	(Lcnb;Lgt;)Z	a	test
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P1;	a	stateTestingCodec
		p	0		instance
	m	(Ldbq;)Z	a	test
		p	1		state
	m	(Ldir;)Lhy;	a	lambda$stateTestingCodec$0
		p	0		predicate
	f	Lhy;	f	offset
c	dis	net/minecraft/world/level/levelgen/blockpredicates/TrueBlockPredicate
	m	()Ldih;	a	type
	m	(Lcnb;Lgt;)Z	a	test
	m	()Ldis;	f	lambda$static$0
	f	Ldis;	a	INSTANCE
	f	Lcom/mojang/serialization/Codec;	e	CODEC
c	dit	net/minecraft/world/level/levelgen/blockpredicates/WouldSurvivePredicate
	m	(Lhy;Ldbq;)V	<init>	<init>
		p	1		offset
		p	2		state
	m	()Ldih;	a	type
	m	(Lcnb;Lgt;)Z	a	test
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Ldit;)Ldbq;	a	lambda$static$1
		p	0		predicate
	m	(Ldit;)Lhy;	b	lambda$static$0
		p	0		predicate
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lhy;	e	offset
	f	Ldbq;	f	state
c	diu	net/minecraft/world/level/levelgen/blockpredicates/package-info
c	div	net/minecraft/world/level/levelgen/carver/CanyonCarverConfiguration
	m	(FLdpw;Lbdb;Ldht;Ldiy;Lhh;Lbdb;Ldiv$a;)V	<init>	<init>
		p	1		probability
		p	2		y
		p	3		yScale
		p	4		lavaLevel
		p	5		debugConfig
		p	6		replaceable
		p	7		verticalRotation
		p	8		shape
	m	(Ldix;Lbdb;Ldiv$a;)V	<init>	<init>
		p	1		config
		p	2		verticalRotation
		p	3		shape
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	(Ldiv;)Ldiv$a;	a	lambda$static$2
		p	0		config
	m	(Ldiv;)Lbdb;	b	lambda$static$1
		p	0		config
	m	(Ldiv;)Ldix;	c	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lbdb;	b	verticalRotation
	f	Ldiv$a;	c	shape
c	div$a	net/minecraft/world/level/levelgen/carver/CanyonCarverConfiguration$CanyonShapeConfiguration
	m	(Lbdb;Lbdb;ILbdb;FF)V	<init>	<init>
		p	1		distanceFactor
		p	2		thickness
		p	3		widthSmoothness
		p	4		horizontalRadiusFactor
		p	5		verticalRadiusDefaultFactor
		p	6		verticalRadiusCenterFactor
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$6
		p	0		instance
	m	(Ldiv$a;)Ljava/lang/Float;	a	lambda$static$5
		p	0		shape
	m	(Ldiv$a;)Ljava/lang/Float;	b	lambda$static$4
		p	0		shape
	m	(Ldiv$a;)Lbdb;	c	lambda$static$3
		p	0		shape
	m	(Ldiv$a;)Ljava/lang/Integer;	d	lambda$static$2
		p	0		shape
	m	(Ldiv$a;)Lbdb;	e	lambda$static$1
		p	0		shape
	m	(Ldiv$a;)Lbdb;	f	lambda$static$0
		p	0		shape
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lbdb;	b	distanceFactor
	f	Lbdb;	c	thickness
	f	I	d	widthSmoothness
	f	Lbdb;	e	horizontalRadiusFactor
	f	F	f	verticalRadiusDefaultFactor
	f	F	g	verticalRadiusCenterFactor
c	diw	net/minecraft/world/level/levelgen/carver/CanyonWorldCarver
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldiv;Lapo;)Z	a	isStartChunk
		p	1		config
		p	2		random
	m	(Ldiv;Lapo;DFF)D	a	updateVerticalRadius
		p	1		config
		p	2		random
		p	3		pitch
		p	5		branchCount
		p	6		branchIndex
	m	(Ldix;Lapo;)Z	a	isStartChunk
		p	1		config
		p	2		random
	m	(Ldiz;Ldiv;Lapo;)[F	a	initWidthFactors
		p	1		context
		p	2		config
		p	3		random
	m	(Ldiz;Ldiv;Lddn;Ljava/util/function/Function;JLdgl;DDDFFFIIDLddm;)V	a	doCarve
		p	1		context
		p	2		config
		p	3		chunk
		p	4		posToBiome
		p	5		seed
		p	7		aquiferSampler
		p	8		x
		p	10		y
		p	12		z
		p	14		width
		p	15		yaw
		p	16		pitch
		p	17		branchStartIndex
		p	18		branchCount
		p	19		yawPitchRatio
		p	21		mask
	m	(Ldiz;Ldiv;Lddn;Ljava/util/function/Function;Lapo;Ldgl;Lclp;Lddm;)Z	a	carve
		p	1		context
		p	2		config
		p	3		chunk
		p	4		posToBiome
		p	5		random
		p	6		aquiferSampler
		p	7		pos
		p	8		mask
	m	(Ldiz;Ldix;Lddn;Ljava/util/function/Function;Lapo;Ldgl;Lclp;Lddm;)Z	a	carve
		p	1		context
		p	2		config
		p	3		chunk
		p	4		posToBiome
		p	5		random
		p	6		aquiferSampler
		p	7		pos
		p	8		mask
	m	(Ldiz;[FDDDI)Z	a	shouldSkip
		p	1		context
		p	2		horizontalStretchFactors
		p	3		scaledRelativeX
		p	5		scaledRelativeY
		p	7		scaledRelativeZ
		p	9		y
	m	([FLdiz;DDDI)Z	a	lambda$doCarve$0
		p	2		context
		p	3		scaledRelativeX
		p	5		scaledRelativeY
		p	7		scaledRelativeZ
		p	9		y
c	dix	net/minecraft/world/level/levelgen/carver/CarverConfiguration
	m	(FLdpw;Lbdb;Ldht;Ldiy;Lhh;)V	<init>	<init>
		p	1		probability
		p	2		y
		p	3		yScale
		p	4		lavaLevel
		p	5		debugConfig
		p	6		replaceable
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$6
		p	0		instance
	m	(Ldix;)Lhh;	a	lambda$static$5
		p	0		config
	m	(Ldix;)Ldiy;	b	lambda$static$4
		p	0		config
	m	(Ldix;)Ldht;	c	lambda$static$3
		p	0		config
	m	(Ldix;)Lbdb;	d	lambda$static$2
		p	0		config
	m	(Ldix;)Ldpw;	e	lambda$static$1
		p	0		config
	m	(Ldix;)Ljava/lang/Float;	f	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/MapCodec;	d	CODEC
	f	Ldpw;	e	y
	f	Lbdb;	f	yScale
	f	Ldht;	g	lavaLevel
	f	Ldiy;	h	debugSettings
	f	Lhh;	i	replaceable
c	diy	net/minecraft/world/level/levelgen/carver/CarverDebugSettings
	m	(ZLdbq;Ldbq;Ldbq;Ldbq;)V	<init>	<init>
		p	1		debugMode
		p	2		airState
		p	3		waterState
		p	4		lavaState
		p	5		barrierState
	m	()Z	a	isDebugMode
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ldbq;Ldbq;Ldbq;Ldbq;)Ldiy;	a	of
		p	0		airState
		p	1		waterState
		p	2		lavaState
		p	3		barrierState
	m	(ZLdbq;)Ldiy;	a	of
		p	0		debugMode
		p	1		debugState
	m	(ZLdbq;Ldbq;Ldbq;Ldbq;)Ldiy;	a	of
		p	0		debugMode
		p	1		airState
		p	2		waterState
		p	3		lavaState
		p	4		barrierState
	m	()Ldbq;	b	getAirState
	m	()Ldbq;	c	getWaterState
	m	()Ldbq;	d	getLavaState
	m	()Ldbq;	e	getBarrierState
	f	Ldiy;	a	DEFAULT
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Z	c	debugMode
	f	Ldbq;	d	airState
	f	Ldbq;	e	waterState
	f	Ldbq;	f	lavaState
	f	Ldbq;	g	barrierState
c	diz	net/minecraft/world/level/levelgen/carver/CarvingContext
	m	(Ldhc;Lhr;Lcmk;Ldhd;Ldhn;Ldhq$o;)V	<init>	<init>
		p	1		noiseChunkGenerator
		p	2		registryManager
		p	3		heightLimitView
		p	4		chunkNoiseSampler
		p	5		noiseConfig
		p	6		materialRule
	m	(Ljava/util/function/Function;Lddn;Lgt;Z)Ljava/util/Optional;	a	topMaterial
		p	1		posToBiome
		p	2		chunk
		p	3		pos
		p	4		hasFluid
	m	()Lhr;	c	registryAccess
	m	()Ldhn;	d	randomState
	f	Lhr;	a	registryAccess
	f	Ldhd;	b	noiseChunk
	f	Ldhn;	c	randomState
	f	Ldhq$o;	d	surfaceRule
c	dja	net/minecraft/world/level/levelgen/carver/CaveCarverConfiguration
	m	(FLdpw;Lbdb;Ldht;Ldiy;Lhh;Lbdb;Lbdb;Lbdb;)V	<init>	<init>
		p	1		probability
		p	2		y
		p	3		yScale
		p	4		lavaLevel
		p	5		debugConfig
		p	6		replaceable
		p	7		horizontalRadiusMultiplier
		p	8		verticalRadiusMultiplier
		p	9		floorLevel
	m	(FLdpw;Lbdb;Ldht;Lhh;Lbdb;Lbdb;Lbdb;)V	<init>	<init>
		p	1		probability
		p	2		y
		p	3		yScale
		p	4		lavaLevel
		p	5		replaceable
		p	6		horizontalRadiusMultiplier
		p	7		verticalRadiusMultiplier
		p	8		floorLevel
	m	(Ldix;Lbdb;Lbdb;Lbdb;)V	<init>	<init>
		p	1		config
		p	2		horizontalRadiusMultiplier
		p	3		verticalRadiusMultiplier
		p	4		floorLevel
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
		p	0		instance
	m	(Ldja;)Lbdb;	a	lambda$static$3
		p	0		config
	m	(Ldja;)Lbdb;	b	lambda$static$2
		p	0		config
	m	(Ldja;)Lbdb;	c	lambda$static$1
		p	0		config
	m	(Ldja;)Ldix;	d	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lbdb;	b	horizontalRadiusMultiplier
	f	Lbdb;	c	verticalRadiusMultiplier
	f	Lbdb;	j	floorLevel
c	djb	net/minecraft/world/level/levelgen/carver/CaveWorldCarver
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	()I	a	getCaveBound
	m	(DDDD)Z	a	shouldSkip
		p	0		scaledRelativeX
		p	2		scaledRelativeY
		p	4		scaledRelativeZ
		p	6		floorY
	m	(DLdiz;DDDI)Z	a	lambda$carve$0
		p	2		context
		p	3		scaledRelativeX
		p	5		scaledRelativeY
		p	7		scaledRelativeZ
		p	9		y
	m	(Lapo;)F	a	getThickness
		p	1		random
	m	(Ldix;Lapo;)Z	a	isStartChunk
		p	1		config
		p	2		random
	m	(Ldiz;Ldix;Lddn;Ljava/util/function/Function;Lapo;Ldgl;Lclp;Lddm;)Z	a	carve
		p	1		context
		p	2		config
		p	3		chunk
		p	4		posToBiome
		p	5		random
		p	6		aquiferSampler
		p	7		pos
		p	8		mask
	m	(Ldiz;Ldja;Lddn;Ljava/util/function/Function;JLdgl;DDDDDFFFIIDLddm;Ldje$a;)V	a	createTunnel
		p	1		context
		p	2		config
		p	3		chunk
		p	4		posToBiome
		p	5		seed
		p	7		aquiferSampler
		p	8		x
		p	10		y
		p	12		z
		p	14		horizontalScale
		p	16		verticalScale
		p	18		width
		p	19		yaw
		p	20		pitch
		p	21		branchStartIndex
		p	22		branchCount
		p	23		yawPitchRatio
		p	25		mask
		p	26		skipPredicate
	m	(Ldiz;Ldja;Lddn;Ljava/util/function/Function;Lapo;Ldgl;Lclp;Lddm;)Z	a	carve
		p	1		context
		p	2		config
		p	3		chunk
		p	4		posToBiome
		p	5		random
		p	6		aquiferSampler
		p	7		pos
		p	8		mask
	m	(Ldiz;Ldja;Lddn;Ljava/util/function/Function;Ldgl;DDDFDLddm;Ldje$a;)V	a	createRoom
		p	1		context
		p	2		config
		p	3		chunk
		p	4		posToBiome
		p	5		aquiferSampler
		p	15		mask
		p	16		skipPredicate
	m	(Ldja;Lapo;)Z	a	isStartChunk
		p	1		config
		p	2		random
	m	()D	b	getYScale
c	djc	net/minecraft/world/level/levelgen/carver/ConfiguredWorldCarver
	m	(Ldje;Ldix;)V	<init>	<init>
		p	1		carver
		p	2		config
	m	()Ldje;	a	worldCarver
	m	(Lapo;)Z	a	isStartChunk
		p	1		random
	m	(Ldiz;Lddn;Ljava/util/function/Function;Lapo;Ldgl;Lclp;Lddm;)Z	a	carve
		p	1		context
		p	2		chunk
		p	3		posToBiome
		p	4		random
		p	5		aquiferSampler
		p	6		pos
		p	7		mask
	m	(Ldjc;)Ldje;	a	lambda$static$0
		p	0		configuredCarver
	m	()Ldix;	b	config
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lcom/mojang/serialization/Codec;	c	LIST_CODEC
	f	Ldje;	d	worldCarver
	f	Ldix;	e	config
c	djd	net/minecraft/world/level/levelgen/carver/NetherWorldCarver
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	()I	a	getCaveBound
	m	(Lapo;)F	a	getThickness
		p	1		random
	m	(Ldiz;Ldix;Lddn;Ljava/util/function/Function;Lddm;Lgt$a;Lgt$a;Ldgl;Lorg/apache/commons/lang3/mutable/MutableBoolean;)Z	a	carveBlock
		p	1		context
		p	2		config
		p	3		chunk
		p	4		posToBiome
		p	5		mask
		p	8		aquiferSampler
	m	(Ldiz;Ldja;Lddn;Ljava/util/function/Function;Lddm;Lgt$a;Lgt$a;Ldgl;Lorg/apache/commons/lang3/mutable/MutableBoolean;)Z	a	carveBlock
		p	1		context
		p	2		config
		p	3		chunk
		p	4		posToBiome
		p	5		mask
		p	8		aquiferSampler
	m	()D	b	getYScale
c	dje	net/minecraft/world/level/levelgen/carver/WorldCarver
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lclp;DDIIF)Z	a	canReach
		p	0		pos
		p	1		x
		p	3		z
		p	5		branchIndex
		p	6		branchCount
		p	7		baseWidth
	m	(Lddn;Lgt$a;Ldbq;)V	a	lambda$carveBlock$0
		p	2		state
	m	(Ldix;)Ldjc;	a	configured
		p	1		config
	m	(Ldix;Lapo;)Z	a	isStartChunk
		p	1		config
		p	2		random
	m	(Ldix;Ldbq;)Z	a	canReplaceBlock
		p	1		config
		p	2		state
	m	(Ldiz;Ldix;Lddn;Ljava/util/function/Function;Lapo;Ldgl;Lclp;Lddm;)Z	a	carve
		p	1		context
		p	2		config
		p	3		chunk
		p	4		posToBiome
		p	5		random
		p	6		aquiferSampler
		p	7		pos
		p	8		mask
	m	(Ldiz;Ldix;Lddn;Ljava/util/function/Function;Lddm;Lgt$a;Lgt$a;Ldgl;Lorg/apache/commons/lang3/mutable/MutableBoolean;)Z	a	carveBlock
		p	1		context
		p	2		config
		p	3		chunk
		p	4		posToBiome
		p	5		mask
		p	8		aquiferSampler
	m	(Ldiz;Ldix;Lddn;Ljava/util/function/Function;Ldgl;DDDDDLddm;Ldje$a;)Z	a	carveEllipsoid
		p	1		context
		p	2		config
		p	3		chunk
		p	4		posToBiome
		p	5		aquiferSampler
		p	16		mask
		p	17		skipPredicate
	m	(Ldiz;Ldix;Lgt;Ldgl;)Ldbq;	a	getCarveState
		p	1		context
		p	2		config
		p	3		pos
		p	4		sampler
	m	(Ljava/lang/String;Ldje;)Ldje;	a	register
		p	0		name
		p	1		carver
	m	(Ldix;)Z	b	isDebugEnabled
		p	0		config
	m	(Ldix;Ldbq;)Ldbq;	b	getDebugState
		p	0		config
		p	1		state
	m	()Lcom/mojang/serialization/Codec;	c	configuredCodec
	m	()I	d	getRange
	f	Ldje;	a	CAVE
	f	Ldje;	b	NETHER_CAVE
	f	Ldje;	c	CANYON
	f	Ldbq;	d	AIR
	f	Ldbq;	e	CAVE_AIR
	f	Ldwj;	f	WATER
	f	Ldwj;	g	LAVA
	f	Ljava/util/Set;	h	liquids
	f	Lcom/mojang/serialization/Codec;	i	configuredCodec
c	dje$a	net/minecraft/world/level/levelgen/carver/WorldCarver$CarveSkipChecker
	m	(Ldiz;DDDI)Z	shouldSkip	shouldSkip
		p	1		context
		p	2		scaledRelativeX
		p	4		scaledRelativeY
		p	6		scaledRelativeZ
		p	8		y
c	djf	net/minecraft/world/level/levelgen/carver/package-info
c	djg	net/minecraft/world/level/levelgen/feature/AbstractHugeMushroomFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(IIII)I	a	getTreeRadiusForHeight
		p	3		capSize
		p	4		y
	m	(Lapo;)I	a	getTreeHeight
		p	1		random
	m	(Lcmj;Lapo;Lgt;ILgt$a;Ldmj;)V	a	makeCap
		p	1		world
		p	2		random
		p	3		start
		p	4		y
		p	5		mutable
		p	6		config
	m	(Lcmj;Lapo;Lgt;Ldmj;ILgt$a;)V	a	placeTrunk
		p	1		world
		p	2		random
		p	3		pos
		p	4		config
		p	5		height
		p	6		mutablePos
	m	(Lcmj;Lgt;ILgt$a;Ldmj;)Z	a	isValidPosition
		p	1		world
		p	2		pos
		p	3		height
		p	4		mutablePos
		p	5		config
	m	(Ldkf;)Z	a	place
		p	1		context
c	djh	net/minecraft/world/level/levelgen/feature/BambooFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldkf;)Z	a	place
		p	1		context
	f	Ldbq;	a	BAMBOO_TRUNK
	f	Ldbq;	b	BAMBOO_FINAL_LARGE
	f	Ldbq;	c	BAMBOO_TOP_LARGE
	f	Ldbq;	d	BAMBOO_TOP_SMALL
c	dji	net/minecraft/world/level/levelgen/feature/BasaltColumnsFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lcmj;ILgt$a;)Z	a	canPlaceAt
		p	0		world
		p	1		seaLevel
		p	2		mutablePos
	m	(Lcmj;ILgt$a;I)Lgt;	a	findSurface
		p	0		world
		p	1		seaLevel
		p	2		mutablePos
		p	3		distance
	m	(Lcmj;ILgt;)Z	a	isAirOrLavaOcean
		p	0		world
		p	1		seaLevel
		p	2		pos
	m	(Lcmj;ILgt;II)Z	a	placeColumn
		p	1		world
		p	2		seaLevel
		p	3		pos
		p	4		height
		p	5		reach
	m	(Lcmj;Lgt$a;I)Lgt;	a	findAir
		p	0		world
		p	1		mutablePos
		p	2		distance
	m	(Ldkf;)Z	a	place
		p	1		context
	f	Lcom/google/common/collect/ImmutableList;	a	CANNOT_PLACE_ON
	f	I	b	CLUSTERED_REACH
	f	I	c	CLUSTERED_SIZE
	f	I	d	UNCLUSTERED_REACH
	f	I	e	UNCLUSTERED_SIZE
c	djj	net/minecraft/world/level/levelgen/feature/BasaltPillarFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lcmj;Lapo;Lgt;)V	a	placeBaseHangOff
		p	1		world
		p	2		random
		p	3		pos
	m	(Ldkf;)Z	a	place
		p	1		context
	m	(Lcmj;Lapo;Lgt;)Z	b	placeHangOff
		p	1		world
		p	2		random
		p	3		pos
c	djk	net/minecraft/world/level/levelgen/feature/BlockBlobFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldkf;)Z	a	place
		p	1		context
c	djl	net/minecraft/world/level/levelgen/feature/BlockColumnFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldkf;)Z	a	place
		p	1		context
	m	([IIIZ)V	a	truncate
c	djm	net/minecraft/world/level/levelgen/feature/BlockPileFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lcmj;Lgt;Lapo;)Z	a	mayPlaceOn
		p	1		world
		p	2		pos
		p	3		random
	m	(Lcmj;Lgt;Lapo;Ldlz;)V	a	tryPlaceBlock
		p	1		world
		p	2		pos
		p	3		random
		p	4		config
	m	(Ldkf;)Z	a	place
		p	1		context
c	djn	net/minecraft/world/level/levelgen/feature/BlueIceFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldkf;)Z	a	place
		p	1		context
c	djo	net/minecraft/world/level/levelgen/feature/BonusChestFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldkf;)Z	a	place
		p	1		context
c	djp	net/minecraft/world/level/levelgen/feature/ChorusPlantFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldkf;)Z	a	place
		p	1		context
c	djq	net/minecraft/world/level/levelgen/feature/ConfiguredFeature
	m	(Ldkd;Ldmh;)V	<init>	<init>
		p	1		feature
		p	2		config
	m	()Ljava/util/stream/Stream;	a	getFeatures
	m	(Lcnb;Lddo;Lapo;Lgt;)Z	a	place
		p	1		world
		p	2		chunkGenerator
		p	3		random
		p	4		origin
	m	(Ldjq;)Ldkd;	a	lambda$static$0
		p	0		configuredFeature
	m	()Ldkd;	b	feature
	m	()Ldmh;	c	config
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lcom/mojang/serialization/Codec;	c	LIST_CODEC
	f	Ldkd;	d	feature
	f	Ldmh;	e	config
c	djr	net/minecraft/world/level/levelgen/feature/CoralClawFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lcmj;Lapo;Lgt;Ldbq;)Z	a	placeFeature
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
c	djs	net/minecraft/world/level/levelgen/feature/CoralFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lapo;Lhh$c;)Ljava/util/Optional;	a	lambda$placeCoralBlock$3
		p	1		blocks
	m	(Lcmj;Lapo;Lgt;Ldbq;)Z	a	placeFeature
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcmj;Lgt;Lcpi;)V	a	lambda$placeCoralBlock$2
		p	2		block
	m	(Ldkf;)Z	a	place
		p	1		context
	m	(Lgz;Lcmj;Lgt;Lcpi;)V	a	lambda$placeCoralBlock$4
		p	3		block
	m	(Lapo;Lhh$c;)Ljava/util/Optional;	b	lambda$placeCoralBlock$1
		p	1		blocks
	m	(Lcmj;Lapo;Lgt;Ldbq;)Z	b	placeCoralBlock
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lapo;Lhh$c;)Ljava/util/Optional;	c	lambda$place$0
		p	1		blocks
c	djt	net/minecraft/world/level/levelgen/feature/CoralMushroomFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lcmj;Lapo;Lgt;Ldbq;)Z	a	placeFeature
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
c	dju	net/minecraft/world/level/levelgen/feature/CoralTreeFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lcmj;Lapo;Lgt;Ldbq;)Z	a	placeFeature
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
c	djv	net/minecraft/world/level/levelgen/feature/DeltaFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lcmj;Lgt;Ldmd;)Z	a	isClear
		p	0		world
		p	1		pos
		p	2		config
	m	(Ldkf;)Z	a	place
		p	1		context
	f	Lcom/google/common/collect/ImmutableList;	a	CANNOT_REPLACE
	f	[Lgz;	b	DIRECTIONS
	f	D	c	RIM_SPAWN_CHANCE
c	djw	net/minecraft/world/level/levelgen/feature/DesertWellFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lcnb;Lgt;Lapo;)V	a	placeSandFloor
		p	0		world
		p	1		pos
		p	2		random
	m	(Ldkf;)Z	a	place
		p	1		context
	m	(Lgt;Ldap;)V	a	lambda$placeSandFloor$1
		p	1		blockEntity
	m	(Lgt;Lit/unimi/dsi/fastutil/objects/ObjectArrayList;)V	a	lambda$placeSandFloor$0
		p	1		positions
	m	(Lorg/apache/commons/lang3/mutable/MutableInt;Lcnb;Lgt;)V	a	lambda$placeSandFloor$2
		p	2		pos
	f	Ldca;	a	IS_SAND
	f	Ldbq;	b	sandSlab
	f	Ldbq;	c	sandstone
	f	Ldbq;	d	water
c	djx	net/minecraft/world/level/levelgen/feature/DiskFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldkf;)Z	a	place
		p	1		context
	m	(Ldme;Lcnb;Lapo;IILgt$a;)Z	a	placeColumn
		p	1		config
		p	2		world
		p	3		random
		p	4		topY
		p	5		bottomY
		p	6		pos
c	djy	net/minecraft/world/level/levelgen/feature/DripstoneClusterFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(IIIILdmf;)D	a	getChanceOfStalagmiteOrStalactite
		p	1		radiusX
		p	2		radiusZ
		p	3		localX
		p	4		localZ
		p	5		config
	m	(Lapo;FFFF)F	a	randomBetweenBiased
		p	0		random
		p	1		min
		p	2		max
		p	3		mean
		p	4		deviation
	m	(Lapo;IIFILdmf;)I	a	getDripstoneHeight
		p	1		random
		p	2		localX
		p	3		localZ
		p	4		density
		p	5		height
		p	6		config
	m	(Lcmj;Lgt;)Z	a	canBeAdjacentToWater
		p	1		world
		p	2		pos
	m	(Lcml;Lgt;)Z	a	isLava
		p	1		world
		p	2		pos
	m	(Lcnb;Lapo;Lgt;IIFDIFLdmf;)V	a	placeColumn
		p	1		world
		p	2		random
		p	3		pos
		p	4		localX
		p	5		localZ
		p	6		wetness
		p	7		dripstoneChance
		p	9		height
		p	10		density
		p	11		config
	m	(Lcnb;Lgt;ILgz;)V	a	replaceBlocksWithDripstoneBlocks
		p	1		world
		p	2		pos
		p	3		height
		p	4		direction
	m	(Ldkf;)Z	a	place
		p	1		context
	m	(Lcnb;Lgt;)Z	b	canPlacePool
		p	1		world
		p	2		pos
c	djz	net/minecraft/world/level/levelgen/feature/DripstoneUtils
	m	(DDDD)D	a	getDripstoneHeight
		p	0		radius
		p	2		scale
		p	4		heightScale
		p	6		bluntness
	m	(Lcmj;Lgt$a;Lgz;Ldbq;)V	a	lambda$growPointedDripstone$0
		p	3		state
	m	(Lcmj;Lgt;)Z	a	isEmptyOrWater
		p	0		world
		p	1		pos
	m	(Lcmj;Lgt;Lgz;IZ)V	a	growPointedDripstone
		p	0		world
		p	1		pos
		p	2		direction
		p	3		height
		p	4		merge
	m	(Lcnb;Lgt;I)Z	a	isCircleMostlyEmbeddedInStone
		p	0		world
		p	1		pos
		p	2		height
	m	(Ldbq;)Z	a	isDripstoneBaseOrLava
		p	0		state
	m	(Lgz;IZLjava/util/function/Consumer;)V	a	buildBaseToTipColumn
		p	0		direction
		p	1		height
		p	2		merge
		p	3		callback
	m	(Lgz;Ldco;)Ldbq;	a	createPointedDripstone
		p	0		direction
		p	1		thickness
	m	(Lcmj;Lgt;)Z	b	isEmptyOrWaterOrLava
		p	0		world
		p	1		pos
	m	(Ldbq;)Z	b	isDripstoneBase
		p	0		state
	m	(Lcmj;Lgt;)Z	c	placeDripstoneBlockIfPossible
		p	0		world
		p	1		pos
	m	(Ldbq;)Z	c	isEmptyOrWater
		p	0		state
	m	(Ldbq;)Z	d	isNeitherEmptyNorWater
		p	0		state
	m	(Ldbq;)Z	e	isEmptyOrWaterOrLava
		p	0		state
c	dka	net/minecraft/world/level/levelgen/feature/EndGatewayFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lcnb;Lgt;Ldmg;Lgt;)V	a	lambda$place$0
		p	3		pos
	m	(Ldkf;)Z	a	place
		p	1		context
c	dkb	net/minecraft/world/level/levelgen/feature/EndIslandFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldkf;)Z	a	place
		p	1		context
c	dkc	net/minecraft/world/level/levelgen/feature/EndPodiumFeature
	m	(Z)V	<init>	<init>
		p	1		open
	m	(Ldkf;)Z	a	place
		p	1		context
	f	I	a	PODIUM_RADIUS
	f	Z	ao	active
	f	I	b	PODIUM_PILLAR_HEIGHT
	f	I	c	RIM_RADIUS
	f	F	d	CORNER_ROUNDING
	f	Lgt;	e	END_PODIUM_LOCATION
c	dkd	net/minecraft/world/level/levelgen/feature/Feature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	()Lcom/mojang/serialization/Codec;	a	configuredCodec
	m	(Lanv;)Ljava/util/function/Predicate;	a	isReplaceable
		p	0		tag
	m	(Lanv;Ldbq;)Z	a	lambda$isReplaceable$1
		p	1		state
	m	(Lcmo;Lgt;)Z	a	isGrassOrDirt
		p	0		world
		p	1		pos
	m	(Lcmq;Lgt;Ldbq;)V	a	setBlock
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcnb;Lgt;)V	a	markAboveForPostProcessing
		p	1		world
		p	2		pos
	m	(Lcnb;Lgt;Ldbq;Ljava/util/function/Predicate;)V	a	safeSetBlock
		p	1		world
		p	2		pos
		p	3		state
		p	4		predicate
	m	(Ldbq;)Z	a	isStone
		p	0		state
	m	(Ldkf;)Z	a	place
		p	1		context
	m	(Ldmh;)Ldjq;	a	lambda$new$0
		p	1		config
	m	(Ldmh;Lcnb;Lddo;Lapo;Lgt;)Z	a	place
		p	1		config
		p	2		world
		p	3		chunkGenerator
		p	4		random
		p	5		pos
	m	(Ljava/lang/String;Ldkd;)Ldkd;	a	register
		p	0		name
		p	1		feature
	m	(Ljava/util/function/Function;Lgt;)Z	a	isAdjacentToAir
		p	0		posToState
		p	1		pos
	m	(Ljava/util/function/Function;Lgt;Ljava/util/function/Predicate;)Z	a	checkNeighbors
		p	0		posToState
		p	1		pos
		p	2		predicate
	m	(Ldbq;)Z	b	isDirt
		p	0		state
	f	Ldkd;	A	ROOT_SYSTEM
	f	Ldkd;	B	MULTIFACE_GROWTH
	f	Ldkd;	C	UNDERWATER_MAGMA
	f	Ldkd;	D	MONSTER_ROOM
	f	Ldkd;	E	BLUE_ICE
	f	Ldkd;	F	ICEBERG
	f	Ldkd;	G	FOREST_ROCK
	f	Ldkd;	H	DISK
	f	Ldkd;	I	LAKE
	f	Ldkd;	J	ORE
	f	Ldkd;	K	END_SPIKE
	f	Ldkd;	L	END_ISLAND
	f	Ldkd;	M	END_GATEWAY
	f	Ldlj;	N	SEAGRASS
	f	Ldkd;	O	KELP
	f	Ldkd;	P	CORAL_TREE
	f	Ldkd;	Q	CORAL_MUSHROOM
	f	Ldkd;	R	CORAL_CLAW
	f	Ldkd;	S	SEA_PICKLE
	f	Ldkd;	T	SIMPLE_BLOCK
	f	Ldkd;	U	BAMBOO
	f	Ldkd;	V	HUGE_FUNGUS
	f	Ldkd;	W	NETHER_FOREST_VEGETATION
	f	Ldkd;	X	WEEPING_VINES
	f	Ldkd;	Y	TWISTING_VINES
	f	Ldkd;	Z	BASALT_COLUMNS
	f	Lcom/mojang/serialization/Codec;	a	configuredCodec
	f	Ldkd;	aa	DELTA_FEATURE
	f	Ldkd;	ab	REPLACE_BLOBS
	f	Ldkd;	ac	FILL_LAYER
	f	Ldjo;	ad	BONUS_CHEST
	f	Ldkd;	ae	BASALT_PILLAR
	f	Ldkd;	af	SCATTERED_ORE
	f	Ldkd;	ag	RANDOM_SELECTOR
	f	Ldkd;	ah	SIMPLE_RANDOM_SELECTOR
	f	Ldkd;	ai	RANDOM_BOOLEAN_SELECTOR
	f	Ldkd;	aj	GEODE
	f	Ldkd;	ak	DRIPSTONE_CLUSTER
	f	Ldkd;	al	LARGE_DRIPSTONE
	f	Ldkd;	am	POINTED_DRIPSTONE
	f	Ldkd;	an	SCULK_PATCH
	f	Ldkd;	f	NO_OP
	f	Ldkd;	g	TREE
	f	Ldkd;	h	FLOWER
	f	Ldkd;	i	NO_BONEMEAL_FLOWER
	f	Ldkd;	j	RANDOM_PATCH
	f	Ldkd;	k	BLOCK_PILE
	f	Ldkd;	l	SPRING
	f	Ldkd;	m	CHORUS_PLANT
	f	Ldkd;	n	REPLACE_SINGLE_BLOCK
	f	Ldkd;	o	VOID_START_PLATFORM
	f	Ldkd;	p	DESERT_WELL
	f	Ldkd;	q	FOSSIL
	f	Ldkd;	r	HUGE_RED_MUSHROOM
	f	Ldkd;	s	HUGE_BROWN_MUSHROOM
	f	Ldkd;	t	ICE_SPIKE
	f	Ldkd;	u	GLOWSTONE_BLOB
	f	Ldkd;	v	FREEZE_TOP_LAYER
	f	Ldkd;	w	VINES
	f	Ldkd;	x	BLOCK_COLUMN
	f	Ldkd;	y	VEGETATION_PATCH
	f	Ldkd;	z	WATERLOGGED_VEGETATION_PATCH
c	dke	net/minecraft/world/level/levelgen/feature/FeatureCountTracker
	m	()V	a	clearCounts
	m	(Laip;)V	a	chunkDecorated
		p	0		world
	m	(Laip;Ldjq;Ljava/util/Optional;)V	a	featurePlaced
		p	0		world
		p	1		configuredFeature
		p	2		placedFeature
	m	(Laip;Ldke$b;)V	a	lambda$logCounts$2
		p	0		world
		p	1		features
	m	(Ldke$a;Ljava/lang/Integer;)Ljava/lang/Integer;	a	lambda$featurePlaced$0
		p	0		featureData
		p	1		count
	m	(Ljava/lang/String;Ljava/lang/Integer;Lhq;Ldke$a;Ljava/lang/Integer;)V	a	lambda$logCounts$1
		p	3		featureData
		p	4		count
	m	()V	b	logCounts
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lcom/google/common/cache/LoadingCache;	b	data
c	dke$1	net/minecraft/world/level/levelgen/feature/FeatureCountTracker$1
	m	(Laip;)Ldke$b;	a	load
c	dke$a	net/minecraft/world/level/levelgen/feature/FeatureCountTracker$FeatureData
	m	()Ldjq;	a	feature
	m	()Ljava/util/Optional;	b	topFeature
	f	Ldjq;	a	feature
	f	Ljava/util/Optional;	b	topFeature
c	dke$b	net/minecraft/world/level/levelgen/feature/FeatureCountTracker$LevelData
	m	()Lit/unimi/dsi/fastutil/objects/Object2IntMap;	a	featureData
	m	()Lorg/apache/commons/lang3/mutable/MutableInt;	b	chunksWithFeatures
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	a	featureData
	f	Lorg/apache/commons/lang3/mutable/MutableInt;	b	chunksWithFeatures
c	dkf	net/minecraft/world/level/levelgen/feature/FeaturePlaceContext
	m	(Ljava/util/Optional;Lcnb;Lddo;Lapo;Lgt;Ldmh;)V	<init>	<init>
		p	1		feature
		p	2		world
		p	3		generator
		p	4		random
		p	5		origin
		p	6		config
	m	()Ljava/util/Optional;	a	topFeature
	m	()Lcnb;	b	level
	m	()Lddo;	c	chunkGenerator
	m	()Lapo;	d	random
	m	()Lgt;	e	origin
	m	()Ldmh;	f	config
	f	Ljava/util/Optional;	a	topFeature
	f	Lcnb;	b	level
	f	Lddo;	c	chunkGenerator
	f	Lapo;	d	random
	f	Lgt;	e	origin
	f	Ldmh;	f	config
c	dkg	net/minecraft/world/level/levelgen/feature/FillLayerFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldkf;)Z	a	place
		p	1		context
c	dkh	net/minecraft/world/level/levelgen/feature/FossilFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lcnb;Ldrh;)I	a	countEmptyCorners
		p	0		world
		p	1		box
	m	(Lcnb;Lorg/apache/commons/lang3/mutable/MutableInt;Lgt;)V	a	lambda$countEmptyCorners$0
		p	2		pos
	m	(Ldkf;)Z	a	place
		p	1		context
c	dki	net/minecraft/world/level/levelgen/feature/FossilFeatureConfiguration
	m	(Ljava/util/List;Ljava/util/List;Lhd;Lhd;I)V	<init>	<init>
		p	1		fossilStructures
		p	2		overlayStructures
		p	3		fossilProcessors
		p	4		overlayProcessors
		p	5		maxEmptyCorners
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$5
		p	0		instance
	m	(Ldki;)Ljava/lang/Integer;	a	lambda$static$4
		p	0		config
	m	(Ldki;)Lhd;	b	lambda$static$3
		p	0		config
	m	(Ldki;)Lhd;	c	lambda$static$2
		p	0		config
	m	(Ldki;)Ljava/util/List;	d	lambda$static$1
		p	0		config
	m	(Ldki;)Ljava/util/List;	e	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/List;	b	fossilStructures
	f	Ljava/util/List;	c	overlayStructures
	f	Lhd;	d	fossilProcessors
	f	Lhd;	e	overlayProcessors
	f	I	f	maxEmptyCornersAllowed
c	dkj	net/minecraft/world/level/levelgen/feature/GeodeFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldkf;)Z	a	place
		p	1		context
	f	[Lgz;	a	DIRECTIONS
c	dkk	net/minecraft/world/level/levelgen/feature/GlowstoneFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldkf;)Z	a	place
		p	1		context
c	dkl	net/minecraft/world/level/levelgen/feature/HugeBrownMushroomFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(IIII)I	a	getTreeRadiusForHeight
		p	3		capSize
		p	4		y
	m	(Lcmj;Lapo;Lgt;ILgt$a;Ldmj;)V	a	makeCap
		p	1		world
		p	2		random
		p	3		start
		p	4		y
		p	5		mutable
		p	6		config
c	dkm	net/minecraft/world/level/levelgen/feature/HugeFungusConfiguration
	m	(Ldbq;Ldbq;Ldbq;Ldbq;Z)V	<init>	<init>
		p	1		validBaseBlock
		p	2		stemState
		p	3		hatState
		p	4		decorationState
		p	5		planted
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$5
		p	0		instance
	m	(Ldkm;)Ljava/lang/Boolean;	a	lambda$static$4
		p	0		config
	m	(Ldkm;)Ldbq;	b	lambda$static$3
		p	0		config
	m	(Ldkm;)Ldbq;	c	lambda$static$2
		p	0		config
	m	(Ldkm;)Ldbq;	d	lambda$static$1
		p	0		config
	m	(Ldkm;)Ldbq;	e	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldbq;	b	validBaseState
	f	Ldbq;	c	stemState
	f	Ldbq;	d	hatState
	f	Ldbq;	e	decorState
	f	Z	f	planted
c	dkn	net/minecraft/world/level/levelgen/feature/HugeFungusFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lcmj;Lapo;Ldkm;Lgt$a;FFF)V	a	placeHatBlock
		p	1		world
		p	2		random
		p	3		config
		p	4		pos
		p	5		decorationChance
		p	6		generationChance
		p	7		vineChance
	m	(Lcmj;Lapo;Ldkm;Lgt;IZ)V	a	placeStem
		p	1		world
		p	2		random
		p	3		config
		p	4		pos
		p	5		stemHeight
		p	6		thickStem
	m	(Lcmj;Lapo;Lgt;Ldbq;Z)V	a	placeHatDropBlock
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
		p	5		vines
	m	(Lcmj;Lgt;Z)Z	a	isReplaceable
		p	0		world
		p	1		pos
		p	2		replacePlants
	m	(Ldkf;)Z	a	place
		p	1		context
	m	(Lgt;Lcmj;Lapo;)V	a	tryPlaceWeepingVines
		p	0		pos
		p	1		world
		p	2		random
	m	(ZLdbq;)Z	a	lambda$isReplaceable$0
		p	1		state
	m	(Lcmj;Lapo;Ldkm;Lgt;IZ)V	b	placeHat
		p	1		world
		p	2		random
		p	3		config
		p	4		pos
		p	5		hatHeight
		p	6		thickStem
	f	F	a	HUGE_PROBABILITY
c	dko	net/minecraft/world/level/levelgen/feature/HugeRedMushroomFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(IIII)I	a	getTreeRadiusForHeight
		p	3		capSize
		p	4		y
	m	(Lcmj;Lapo;Lgt;ILgt$a;Ldmj;)V	a	makeCap
		p	1		world
		p	2		random
		p	3		start
		p	4		y
		p	5		mutable
		p	6		config
c	dkp	net/minecraft/world/level/levelgen/feature/IceSpikeFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldkf;)Z	a	place
		p	1		context
c	dkq	net/minecraft/world/level/levelgen/feature/IcebergFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(III)I	a	getEllipseC
		p	1		y
		p	2		height
		p	3		value
	m	(IILgt;IID)D	a	signedDistanceEllipse
		p	1		x
		p	2		z
		p	3		pos
		p	4		divisor1
		p	5		divisor2
		p	6		randomSine
	m	(IILgt;ILapo;)D	a	signedDistanceCircle
		p	1		x
		p	2		z
		p	3		pos
		p	5		random
	m	(IILgt;Lcmj;ZDLgt;II)V	a	carve
		p	2		y
		p	3		pos
		p	4		world
		p	5		placeWater
	m	(Lapo;III)I	a	heightDependentRadiusRound
		p	1		random
		p	2		y
		p	3		height
		p	4		factor
	m	(Lapo;Lcmj;IILgt;ZIDI)V	a	generateCutOut
		p	1		random
		p	2		world
		p	5		pos
	m	(Lclo;Lgt;)Z	a	belowIsAir
		p	1		world
		p	2		pos
	m	(Lcmj;Lapo;Lgt;IIIIIIZIDZLdbq;)V	a	generateIcebergBlock
		p	1		world
		p	2		random
		p	3		pos
		p	4		height
		p	5		offsetX
		p	6		offsetY
		p	7		offsetZ
		p	12		randomSine
		p	14		placeSnow
		p	15		state
	m	(Lcmj;Lgt;)V	a	removeFloatingSnowLayer
		p	1		world
		p	2		pos
	m	(Lcmj;Lgt;IIZI)V	a	smooth
		p	1		world
		p	2		pos
		p	4		height
	m	(Ldkf;)Z	a	place
		p	1		context
	m	(Lgt;Lcmj;Lapo;IIZZLdbq;)V	a	setIcebergBlock
		p	1		pos
		p	2		world
		p	3		random
		p	4		heightRemaining
		p	5		height
		p	6		lessSnow
		p	7		placeSnow
		p	8		state
	m	(III)I	b	heightDependentRadiusEllipse
		p	1		y
		p	2		height
		p	3		factor
	m	(Lapo;III)I	b	heightDependentRadiusSteep
		p	1		random
		p	2		y
		p	3		height
		p	4		factor
	m	(Ldbq;)Z	c	isIcebergState
		p	0		state
c	dkr	net/minecraft/world/level/levelgen/feature/KelpFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldkf;)Z	a	place
		p	1		context
c	dks	net/minecraft/world/level/levelgen/feature/LakeFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldkf;)Z	a	place
		p	1		context
	m	(Ldbq;)Z	c	canReplaceBlock
		p	1		state
	f	Ldbq;	a	AIR
c	dks$a	net/minecraft/world/level/levelgen/feature/LakeFeature$Configuration
	m	()Ldoi;	a	fluid
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()Ldoi;	b	barrier
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldoi;	b	fluid
	f	Ldoi;	c	barrier
c	dkt	net/minecraft/world/level/levelgen/feature/LargeDripstoneFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lcnb;Lgt;Ldgp$b;Ldkt$b;)V	a	placeDebugMarkers
		p	1		world
		p	2		pos
		p	3		surface
		p	4		wind
	m	(Ldkf;)Z	a	place
		p	1		context
	m	(Lgt;ZLapo;ILbdb;Lbdb;)Ldkt$a;	a	makeDripstone
		p	0		pos
		p	1		isStalagmite
		p	3		scale
		p	4		bluntness
		p	5		heightScale
c	dkt$a	net/minecraft/world/level/levelgen/feature/LargeDripstoneFeature$LargeDripstone
	m	(Lgt;ZIDD)V	<init>	<init>
		p	1		pos
		p	2		isStalagmite
		p	3		scale
		p	4		bluntness
		p	6		heightScale
	m	()I	a	getHeight
	m	(F)I	a	getHeightAtRadius
		p	1		height
	m	(Lcnb;Lapo;Ldkt$b;)V	a	placeBlocks
		p	1		world
		p	3		wind
	m	(Lcnb;Ldkt$b;)Z	a	moveBackUntilBaseIsInsideStoneAndShrinkRadiusIfNecessary
		p	1		world
		p	2		wind
	m	(Ldmk;)Z	a	isSuitableForWind
		p	1		config
	m	()I	b	getMinY
	m	()I	c	getMaxY
	f	Lgt;	a	root
	f	Z	b	pointingUp
	f	I	c	radius
	f	D	d	bluntness
	f	D	e	scale
c	dkt$b	net/minecraft/world/level/levelgen/feature/LargeDripstoneFeature$WindOffsetter
	m	(ILapo;Lbdb;)V	<init>	<init>
		p	1		y
		p	3		wind
	m	()Ldkt$b;	a	noWind
	m	(Lgt;)Lgt;	a	offset
		p	1		pos
	f	I	a	originY
	f	Lede;	b	windSpeed
c	dku	net/minecraft/world/level/levelgen/feature/MonsterRoomFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lapo;)Lbfl;	a	randomEntityId
		p	1		random
	m	(Ldkf;)Z	a	place
		p	1		context
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	[Lbfl;	b	MOBS
	f	Ldbq;	c	AIR
c	dkv	net/minecraft/world/level/levelgen/feature/MultifaceGrowthFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lcnb;Lgt;Ldbq;Ldmm;Lapo;Ljava/util/List;)Z	a	placeGrowthIfPossible
		p	0		world
		p	1		pos
		p	2		state
		p	3		config
		p	4		random
		p	5		directions
	m	(Ldkf;)Z	a	place
		p	1		context
	m	(Ldbq;)Z	c	isAirOrWater
		p	0		state
c	dkw	net/minecraft/world/level/levelgen/feature/NetherForestVegetationFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldkf;)Z	a	place
		p	1		context
c	dkx	net/minecraft/world/level/levelgen/feature/NoOpFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldkf;)Z	a	place
		p	1		context
c	dky	net/minecraft/world/level/levelgen/feature/OreFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lapo;F)Z	a	shouldSkipAirCheck
		p	1		chance
	m	(Lcnb;Lapo;Ldmp;DDDDDDIIIII)Z	a	doPlace
		p	1		world
		p	3		config
		p	4		startX
		p	6		endX
		p	8		startZ
		p	10		endZ
		p	12		startY
		p	14		endY
		p	16		x
		p	17		y
		p	18		z
		p	19		horizontalSize
		p	20		verticalSize
	m	(Ldbq;Ljava/util/function/Function;Lapo;Ldmp;Ldmp$a;Lgt$a;)Z	a	canPlaceOre
		p	0		state
		p	1		posToState
		p	3		config
		p	4		target
		p	5		pos
	m	(Ldkf;)Z	a	place
		p	1		context
c	dkz	net/minecraft/world/level/levelgen/feature/PointedDripstoneFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lcmj;Lapo;Lgt;Ldmq;)V	a	createPatchOfDripstoneBlocks
		p	0		world
		p	1		random
		p	2		pos
		p	3		config
	m	(Lcmj;Lgt;Lapo;)Ljava/util/Optional;	a	getTipDirection
		p	0		world
		p	1		pos
		p	2		random
	m	(Ldkf;)Z	a	place
		p	1		context
c	dla	net/minecraft/world/level/levelgen/feature/RandomBooleanSelectorFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldkf;)Z	a	place
		p	1		context
c	dlb	net/minecraft/world/level/levelgen/feature/RandomPatchFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldkf;)Z	a	place
		p	1		context
c	dlc	net/minecraft/world/level/levelgen/feature/RandomSelectorFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldkf;)Z	a	place
		p	1		context
c	dld	net/minecraft/world/level/levelgen/feature/ReplaceBlobsFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lcmj;Lgt$a;Lcpi;)Lgt;	a	findTarget
		p	0		world
		p	1		mutablePos
		p	2		target
	m	(Ldkf;)Z	a	place
		p	1		context
c	dle	net/minecraft/world/level/levelgen/feature/ReplaceBlockFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldkf;)Z	a	place
		p	1		context
c	dlf	net/minecraft/world/level/levelgen/feature/RootSystemFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lcnb;Lddo;Ldmx;Lapo;Lgt$a;Lgt;)Z	a	placeDirtAndTree
		p	0		world
		p	1		generator
		p	2		config
		p	4		mutablePos
		p	5		pos
	m	(Lcnb;Ldmx;Lapo;IILgt$a;)V	a	placeRootedDirt
		p	0		world
		p	1		config
		p	3		x
		p	4		z
		p	5		mutablePos
	m	(Lcnb;Ldmx;Lapo;Lgt;Lgt$a;)V	a	placeRoots
		p	0		world
		p	1		config
		p	3		pos
		p	4		mutablePos
	m	(Lcnb;Ldmx;Lgt;)Z	a	spaceForTree
		p	0		world
		p	1		config
		p	2		pos
	m	(Ldbq;II)Z	a	isAllowedTreeSpace
		p	0		state
		p	1		height
		p	2		allowedVerticalWaterForTree
	m	(Ldkf;)Z	a	place
		p	1		context
	m	(Ldmx;Ldbq;)Z	a	lambda$placeRootedDirt$0
		p	1		state
	m	(Lgt;ILcnb;Ldmx;Lapo;)V	a	placeDirt
		p	0		pos
		p	1		maxY
		p	2		world
		p	3		config
c	dlg	net/minecraft/world/level/levelgen/feature/ScatteredOreFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lapo;I)I	a	getRandomPlacementInOneAxisRelativeToOrigin
		p	2		spread
	m	(Ldkf;)Z	a	place
		p	1		context
	m	(Lgt$a;Lapo;Lgt;I)V	a	offsetTargetPos
		p	1		mutable
		p	3		origin
		p	4		spread
	f	I	a	MAX_DIST_FROM_ORIGIN
c	dlh	net/minecraft/world/level/levelgen/feature/SculkPatchFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lcmj;Lgt;)Z	a	canSpreadFrom
		p	1		world
		p	2		pos
	m	(Ldkf;)Z	a	place
		p	1		context
	m	(Lcmj;Lgt;)Z	b	lambda$canSpreadFrom$0
		p	1		pos2
c	dli	net/minecraft/world/level/levelgen/feature/SeaPickleFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldkf;)Z	a	place
		p	1		context
c	dlj	net/minecraft/world/level/levelgen/feature/SeagrassFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldkf;)Z	a	place
		p	1		context
c	dlk	net/minecraft/world/level/levelgen/feature/SimpleBlockFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldkf;)Z	a	place
		p	1		context
c	dll	net/minecraft/world/level/levelgen/feature/SimpleRandomSelectorFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldkf;)Z	a	place
		p	1		context
c	dlm	net/minecraft/world/level/levelgen/feature/SnowAndFreezeFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldkf;)Z	a	place
		p	1		context
c	dln	net/minecraft/world/level/levelgen/feature/SpikeFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lcmx;Lapo;Ldnb;Ldln$a;)V	a	placeSpike
		p	1		world
		p	2		random
		p	3		config
		p	4		spike
	m	(Lcnb;)Ljava/util/List;	a	getSpikesForLevel
		p	0		world
	m	(Ldkf;)Z	a	place
		p	1		context
	f	I	a	NUMBER_OF_SPIKES
	f	I	b	SPIKE_DISTANCE
	f	Lcom/google/common/cache/LoadingCache;	c	SPIKE_CACHE
c	dln$a	net/minecraft/world/level/levelgen/feature/SpikeFeature$EndSpike
	m	(IIIIZ)V	<init>	<init>
		p	1		centerX
		p	2		centerZ
		p	3		radius
		p	4		height
		p	5		guarded
	m	()I	a	getCenterX
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$5
		p	0		instance
	m	(Ldln$a;)Ljava/lang/Boolean;	a	lambda$static$4
		p	0		spike
	m	(Lgt;)Z	a	isCenterWithinChunk
		p	1		pos
	m	()I	b	getCenterZ
	m	(Ldln$a;)Ljava/lang/Integer;	b	lambda$static$3
		p	0		spike
	m	()I	c	getRadius
	m	(Ldln$a;)Ljava/lang/Integer;	c	lambda$static$2
		p	0		spike
	m	()I	d	getHeight
	m	(Ldln$a;)Ljava/lang/Integer;	d	lambda$static$1
		p	0		spike
	m	()Z	e	isGuarded
	m	(Ldln$a;)Ljava/lang/Integer;	e	lambda$static$0
		p	0		spike
	m	()Lecz;	f	getTopBoundingBox
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	centerX
	f	I	c	centerZ
	f	I	d	radius
	f	I	e	height
	f	Z	f	guarded
	f	Lecz;	g	topBoundingBox
c	dln$b	net/minecraft/world/level/levelgen/feature/SpikeFeature$SpikeCacheLoader
	m	(Ljava/lang/Long;)Ljava/util/List;	a	load
c	dlo	net/minecraft/world/level/levelgen/feature/SpringFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldkf;)Z	a	place
		p	1		context
c	dlp	net/minecraft/world/level/levelgen/feature/TreeFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lcmj;Ldrh;Ljava/util/Set;Ljava/util/Set;Ljava/util/Set;)Ledn;	a	updateLeaves
		p	0		world
		p	1		box
		p	2		trunkPositions
		p	3		decorationPositions
	m	(Lcmo;ILgt;Ldnd;)I	a	getMaxFreeTreeHeight
		p	1		world
		p	2		height
		p	3		pos
		p	4		config
	m	(Lcmq;Lgt;Ldbq;)V	a	setBlock
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcnb;Lapo;Lgt;Ljava/util/function/BiConsumer;Ljava/util/function/BiConsumer;Ldnt$b;Ldnd;)Z	a	doPlace
		p	1		world
		p	2		random
		p	3		pos
		p	4		rootPlacerReplacer
		p	5		trunkPlacerReplacer
		p	6		blockPlacer
		p	7		config
	m	(Lcnb;Ljava/util/Set;Ljava/util/Set;Ljava/util/Set;Ldrh;)Ljava/lang/Boolean;	a	lambda$place$10
		p	4		box
	m	(Ldkf;)Z	a	place
		p	1		context
	m	(Ldnd;Lcnb;Ldnt$b;Lapo;IIILdnt$a;)V	a	lambda$doPlace$5
		p	7		node
	m	(Ldoz$a;Ldoz;)V	a	lambda$place$9
		p	1		decorator
	m	(Lgt;Lapo;Ldof;)Lgt;	a	lambda$doPlace$4
		p	2		rootPlacer
	m	(Ljava/util/Set;Lcnb;Lgt;Ldbq;)V	a	lambda$place$8
		p	2		pos
		p	3		state
	m	(Lcmo;Lgt;)Z	b	isBlockWater
		p	0		world
		p	1		pos
	m	(Lcmq;Lgt;Ldbq;)V	b	setBlockKnownShape
		p	0		world
		p	1		pos
		p	2		state
	m	(Ljava/util/Set;Lcnb;Lgt;Ldbq;)V	b	lambda$place$7
		p	2		pos
		p	3		state
	m	(Lcmo;Lgt;)Z	c	isAirOrLeaves
		p	0		world
		p	1		pos
	m	(Ldbq;)Z	c	lambda$isReplaceablePlant$3
		p	0		state
	m	(Ljava/util/Set;Lcnb;Lgt;Ldbq;)V	c	lambda$place$6
		p	2		pos
		p	3		state
	m	(Lcmo;Lgt;)Z	d	validTreePos
		p	0		world
		p	1		pos
	m	(Ldbq;)Z	d	lambda$isAirOrLeaves$2
		p	0		state
	m	(Lcmo;Lgt;)Z	e	isVine
		p	0		world
		p	1		pos
	m	(Ldbq;)Z	e	lambda$isBlockWater$1
		p	0		state
	m	(Lcmo;Lgt;)Z	f	isReplaceablePlant
		p	0		world
		p	1		pos
	m	(Ldbq;)Z	f	lambda$isVine$0
		p	0		state
	f	I	a	BLOCK_UPDATE_FLAGS
c	dlp$1	net/minecraft/world/level/levelgen/feature/TreeFeature$1
	m	(Lgt;)Z	a	isSet
		p	1		pos
	m	(Lgt;Ldbq;)V	a	set
		p	1		pos
		p	2		state
	f	Ljava/util/Set;	a	val$foliage
	f	Lcnb;	b	val$level
	f	Ldlp;	c	this$0
c	dlq	net/minecraft/world/level/levelgen/feature/TwistingVinesFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lcmj;Lapo;Lgt$a;III)V	a	placeWeepingVinesColumn
		p	0		world
		p	1		random
		p	2		pos
		p	3		maxLength
		p	4		minAge
		p	5		maxAge
	m	(Lcmj;Lgt$a;)Z	a	findFirstAirBlockAboveGround
		p	0		world
		p	1		pos
	m	(Lcmj;Lgt;)Z	a	isInvalidPlacementLocation
		p	0		world
		p	1		pos
	m	(Ldkf;)Z	a	place
		p	1		context
c	dlr	net/minecraft/world/level/levelgen/feature/UnderwaterMagmaFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lapo;Ldnf;Lgt;)Z	a	lambda$place$0
		p	2		pos
	m	(Lcmj;Lgt;)Z	a	isWaterOrAir
		p	1		world
		p	2		pos
	m	(Lcnb;Lgt;Ldnf;)Ljava/util/OptionalInt;	a	getFloorY
		p	0		world
		p	1		pos
		p	2		config
	m	(Ldkf;)Z	a	place
		p	1		context
	m	(Lcnb;Lgt;)Z	b	isValidPlacement
		p	1		world
		p	2		pos
	m	(Lcnb;Lgt;)I	c	lambda$place$2
		p	1		pos
	m	(Ldbq;)Z	c	lambda$getFloorY$4
		p	0		state
	m	(Lcnb;Lgt;)Z	d	lambda$place$1
		p	2		pos
	m	(Ldbq;)Z	d	lambda$getFloorY$3
		p	0		state
c	dls	net/minecraft/world/level/levelgen/feature/VegetationPatchFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lcnb;Ldng;Lapo;Lgt;Ljava/util/function/Predicate;II)Ljava/util/Set;	a	placeGroundPatch
		p	1		world
		p	2		config
		p	3		random
		p	4		pos
		p	5		replaceable
		p	6		radiusX
		p	7		radiusZ
	m	(Lcnb;Ldng;Lddo;Lapo;Lgt;)Z	a	placeVegetation
		p	1		world
		p	2		config
		p	3		generator
		p	4		random
		p	5		pos
	m	(Lcnb;Ldng;Ljava/util/function/Predicate;Lapo;Lgt$a;I)Z	a	placeGround
		p	1		world
		p	2		config
		p	3		replaceable
		p	5		pos
		p	6		depth
	m	(Ldkf;)Z	a	place
		p	1		context
	m	(Ldkf;Lcnb;Ldng;Lapo;Ljava/util/Set;II)V	a	distributeVegetation
		p	1		context
		p	2		world
		p	3		config
		p	5		positions
		p	6		radiusX
		p	7		radiusZ
	m	(Ldng;Ldbq;)Z	a	lambda$place$0
		p	1		state
	m	(Ldbq;)Z	c	lambda$placeGroundPatch$1
		p	0		state
c	dlt	net/minecraft/world/level/levelgen/feature/VinesFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldkf;)Z	a	place
		p	1		context
c	dlu	net/minecraft/world/level/levelgen/feature/VoidStartPlatformFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(IIII)I	a	checkerboardDistance
		p	0		x1
		p	1		z1
		p	2		x2
		p	3		z2
	m	(Ldkf;)Z	a	place
		p	1		context
	f	Lgt;	a	PLATFORM_OFFSET
	f	Lclp;	b	PLATFORM_ORIGIN_CHUNK
	f	I	c	PLATFORM_RADIUS
	f	I	d	PLATFORM_RADIUS_CHUNKS
c	dlv	net/minecraft/world/level/levelgen/feature/WaterloggedVegetationPatchFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lcnb;Ldng;Lapo;Lgt;Ljava/util/function/Predicate;II)Ljava/util/Set;	a	placeGroundPatch
		p	1		world
		p	2		config
		p	3		random
		p	4		pos
		p	5		replaceable
		p	6		radiusX
		p	7		radiusZ
	m	(Lcnb;Ldng;Lddo;Lapo;Lgt;)Z	a	placeVegetation
		p	1		world
		p	2		config
		p	3		generator
		p	4		random
		p	5		pos
	m	(Lcnb;Lgt;Lgt$a;Lgz;)Z	a	isExposedDirection
		p	0		world
		p	1		pos
		p	2		mutablePos
		p	3		direction
	m	(Lcnb;Ljava/util/Set;Lgt;Lgt$a;)Z	a	isExposed
		p	0		world
		p	1		positions
		p	2		pos
		p	3		mutablePos
c	dlw	net/minecraft/world/level/levelgen/feature/WeepingVinesFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lcmj;Lapo;Lgt$a;III)V	a	placeWeepingVinesColumn
		p	0		world
		p	1		random
		p	2		pos
		p	3		length
		p	4		minAge
		p	5		maxAge
	m	(Lcmj;Lapo;Lgt;)V	a	placeRoofNetherWart
		p	1		world
		p	2		random
		p	3		pos
	m	(Ldkf;)Z	a	place
		p	1		context
	m	(Lcmj;Lapo;Lgt;)V	b	placeRoofWeepingVines
		p	1		world
		p	2		random
		p	3		pos
	f	[Lgz;	a	DIRECTIONS
c	dlx	net/minecraft/world/level/levelgen/feature/WeightedPlacedFeature
	m	(Lhd;F)V	<init>	<init>
		p	1		feature
		p	2		chance
	m	(Lcnb;Lddo;Lapo;Lgt;)Z	a	place
		p	1		world
		p	2		chunkGenerator
		p	4		pos
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Ldlx;)Ljava/lang/Float;	a	lambda$static$1
		p	0		config
	m	(Ldlx;)Lhd;	b	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lhd;	b	feature
	f	F	c	chance
c	dly	net/minecraft/world/level/levelgen/feature/configurations/BlockColumnConfiguration
	m	()Ljava/util/List;	a	layers
	m	(Lbdd;Ldoi;)Ldly$a;	a	layer
		p	0		height
		p	1		state
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()Lgz;	b	direction
	m	(Lbdd;Ldoi;)Ldly;	b	simple
		p	0		height
		p	1		state
	m	()Ldig;	c	allowedPlacement
	m	()Z	d	prioritizeTip
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/List;	b	layers
	f	Lgz;	c	direction
	f	Ldig;	d	allowedPlacement
	f	Z	e	prioritizeTip
c	dly$a	net/minecraft/world/level/levelgen/feature/configurations/BlockColumnConfiguration$Layer
	m	()Lbdd;	a	height
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()Ldoi;	b	state
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lbdd;	b	height
	f	Ldoi;	c	state
c	dlz	net/minecraft/world/level/levelgen/feature/configurations/BlockPileConfiguration
	m	(Ldoi;)V	<init>	<init>
		p	1		stateProvider
	m	(Ldlz;)Ldoi;	a	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldoi;	b	stateProvider
c	dma	net/minecraft/world/level/levelgen/feature/configurations/BlockStateConfiguration
	m	(Ldbq;)V	<init>	<init>
		p	1		state
	m	(Ldma;)Ldbq;	a	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldbq;	b	state
c	dmb	net/minecraft/world/level/levelgen/feature/configurations/ColumnFeatureConfiguration
	m	(Lbdd;Lbdd;)V	<init>	<init>
		p	1		reach
		p	2		height
	m	()Lbdd;	a	reach
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Ldmb;)Lbdd;	a	lambda$static$1
		p	0		config
	m	()Lbdd;	b	height
	m	(Ldmb;)Lbdd;	b	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lbdd;	b	reach
	f	Lbdd;	c	height
c	dmc	net/minecraft/world/level/levelgen/feature/configurations/CountConfiguration
	m	(I)V	<init>	<init>
		p	1		count
	m	(Lbdd;)V	<init>	<init>
		p	1		distribution
	m	()Lbdd;	a	count
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lbdd;	b	count
c	dmd	net/minecraft/world/level/levelgen/feature/configurations/DeltaFeatureConfiguration
	m	(Ldbq;Ldbq;Lbdd;Lbdd;)V	<init>	<init>
		p	1		contents
		p	2		rim
		p	3		size
		p	4		rimSize
	m	()Ldbq;	a	contents
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
		p	0		instance
	m	(Ldmd;)Lbdd;	a	lambda$static$3
		p	0		config
	m	()Ldbq;	b	rim
	m	(Ldmd;)Lbdd;	b	lambda$static$2
		p	0		config
	m	()Lbdd;	c	size
	m	(Ldmd;)Ldbq;	c	lambda$static$1
		p	0		config
	m	()Lbdd;	d	rimSize
	m	(Ldmd;)Ldbq;	d	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldbq;	b	contents
	f	Ldbq;	c	rim
	f	Lbdd;	d	size
	f	Lbdd;	e	rimSize
c	dme	net/minecraft/world/level/levelgen/feature/configurations/DiskConfiguration
	m	()Ldoq;	a	stateProvider
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()Ldig;	b	target
	m	()Lbdd;	c	radius
	m	()I	d	halfHeight
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldoq;	b	stateProvider
	f	Ldig;	c	target
	f	Lbdd;	d	radius
	f	I	e	halfHeight
c	dmf	net/minecraft/world/level/levelgen/feature/configurations/DripstoneClusterConfiguration
	m	(ILbdd;Lbdd;IILbdd;Lbdb;Lbdb;FII)V	<init>	<init>
		p	1		floorToCeilingSearchRange
		p	2		height
		p	3		radius
		p	4		maxStalagmiteStalactiteHeightDiff
		p	5		heightDeviation
		p	6		dripstoneBlockLayerThickness
		p	7		density
		p	8		wetness
		p	9		wetnessMean
		p	10		maxDistanceFromCenterAffectingChanceOfDripstoneColumn
		p	11		maxDistanceFromCenterAffectingHeightBias
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$11
		p	0		instance
	m	(Ldmf;)Ljava/lang/Integer;	a	lambda$static$10
		p	0		config
	m	(Ldmf;)Ljava/lang/Integer;	b	lambda$static$9
		p	0		config
	m	(Ldmf;)Ljava/lang/Float;	c	lambda$static$8
		p	0		config
	m	(Ldmf;)Lbdb;	d	lambda$static$7
		p	0		config
	m	(Ldmf;)Lbdb;	e	lambda$static$6
		p	0		config
	m	(Ldmf;)Lbdd;	f	lambda$static$5
		p	0		config
	m	(Ldmf;)Ljava/lang/Integer;	g	lambda$static$4
		p	0		config
	m	(Ldmf;)Ljava/lang/Integer;	h	lambda$static$3
		p	0		config
	m	(Ldmf;)Lbdd;	i	lambda$static$2
		p	0		config
	m	(Ldmf;)Lbdd;	j	lambda$static$1
		p	0		config
	m	(Ldmf;)Ljava/lang/Integer;	k	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	floorToCeilingSearchRange
	f	Lbdd;	c	height
	f	Lbdd;	d	radius
	f	I	e	maxStalagmiteStalactiteHeightDiff
	f	I	f	heightDeviation
	f	Lbdd;	g	dripstoneBlockLayerThickness
	f	Lbdb;	h	density
	f	Lbdb;	i	wetness
	f	F	j	chanceOfDripstoneColumnAtMaxDistanceFromCenter
	f	I	k	maxDistanceFromEdgeAffectingChanceOfDripstoneColumn
	f	I	l	maxDistanceFromCenterAffectingHeightBias
c	dmg	net/minecraft/world/level/levelgen/feature/configurations/EndGatewayConfiguration
	m	(Ljava/util/Optional;Z)V	<init>	<init>
		p	1		exitPos
		p	2		exact
	m	()Ldmg;	a	delayedExitSearch
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Ldmg;)Ljava/lang/Boolean;	a	lambda$static$1
		p	0		config
	m	(Lgt;Z)Ldmg;	a	knownExit
		p	0		exitPortalPosition
		p	1		exitsAtSpawn
	m	()Ljava/util/Optional;	b	getExit
	m	(Ldmg;)Ljava/util/Optional;	b	lambda$static$0
		p	0		config
	m	()Z	c	isExitExact
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Optional;	b	exit
	f	Z	c	exact
c	dmh	net/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration
	m	()Ljava/util/stream/Stream;	e	getFeatures
	f	Ldmo;	m	NONE
c	dmi	net/minecraft/world/level/levelgen/feature/configurations/GeodeConfiguration
	m	(Ldgw;Ldgy;Ldgx;DDZLbdd;Lbdd;Lbdd;IIDI)V	<init>	<init>
		p	1		layerConfig
		p	2		layerThicknessConfig
		p	3		crackConfig
		p	4		usePotentialPlacementsChance
		p	6		useAlternateLayer0Chance
		p	8		placementsRequireLayer0Alternate
		p	9		outerWallDistance
		p	10		distributionPoints
		p	11		pointOffset
		p	12		maxDistributionPoints
		p	13		minPointOffset
		p	14		noiseMultiplier
		p	16		maxGenOffset
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$13
		p	0		instance
	m	(Ldmi;)Ljava/lang/Integer;	a	lambda$static$12
		p	0		config
	m	(Ldmi;)Ljava/lang/Double;	b	lambda$static$11
		p	0		config
	m	(Ldmi;)Ljava/lang/Integer;	c	lambda$static$10
		p	0		config
	m	(Ldmi;)Ljava/lang/Integer;	d	lambda$static$9
		p	0		config
	m	(Ldmi;)Lbdd;	e	lambda$static$8
		p	0		config
	m	(Ldmi;)Lbdd;	f	lambda$static$7
		p	0		config
	m	(Ldmi;)Lbdd;	g	lambda$static$6
		p	0		config
	m	(Ldmi;)Ljava/lang/Boolean;	h	lambda$static$5
		p	0		config
	m	(Ldmi;)Ljava/lang/Double;	i	lambda$static$4
		p	0		config
	m	(Ldmi;)Ljava/lang/Double;	j	lambda$static$3
		p	0		config
	m	(Ldmi;)Ldgx;	k	lambda$static$2
		p	0		config
	m	(Ldmi;)Ldgy;	l	lambda$static$1
		p	0		config
	m	(Ldmi;)Ldgw;	m	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CHANCE_RANGE
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Ldgw;	c	geodeBlockSettings
	f	Ldgy;	d	geodeLayerSettings
	f	Ldgx;	e	geodeCrackSettings
	f	D	f	usePotentialPlacementsChance
	f	D	g	useAlternateLayer0Chance
	f	Z	h	placementsRequireLayer0Alternate
	f	Lbdd;	i	outerWallDistance
	f	Lbdd;	j	distributionPoints
	f	Lbdd;	k	pointOffset
	f	I	l	minGenOffset
	f	I	n	maxGenOffset
	f	D	o	noiseMultiplier
	f	I	p	invalidBlocksThreshold
c	dmj	net/minecraft/world/level/levelgen/feature/configurations/HugeMushroomFeatureConfiguration
	m	(Ldoi;Ldoi;I)V	<init>	<init>
		p	1		capProvider
		p	2		stemProvider
		p	3		foliageRadius
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	(Ldmj;)Ljava/lang/Integer;	a	lambda$static$2
	m	(Ldmj;)Ldoi;	b	lambda$static$1
	m	(Ldmj;)Ldoi;	c	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldoi;	b	capProvider
	f	Ldoi;	c	stemProvider
	f	I	d	foliageRadius
c	dmk	net/minecraft/world/level/levelgen/feature/configurations/LargeDripstoneConfiguration
	m	(ILbdd;Lbdb;FLbdb;Lbdb;Lbdb;IF)V	<init>	<init>
		p	1		floorToCeilingSearchRange
		p	2		columnRadius
		p	3		heightScale
		p	4		maxColumnRadiusToCaveHeightRatio
		p	5		stalactiteBluntness
		p	6		stalagmiteBluntness
		p	7		windSpeed
		p	8		minRadiusForWind
		p	9		minBluntnessForWind
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$9
		p	0		instance
	m	(Ldmk;)Ljava/lang/Float;	a	lambda$static$8
		p	0		config
	m	(Ldmk;)Ljava/lang/Integer;	b	lambda$static$7
		p	0		config
	m	(Ldmk;)Lbdb;	c	lambda$static$6
		p	0		config
	m	(Ldmk;)Lbdb;	d	lambda$static$5
		p	0		config
	m	(Ldmk;)Lbdb;	e	lambda$static$4
		p	0		config
	m	(Ldmk;)Ljava/lang/Float;	f	lambda$static$3
		p	0		config
	m	(Ldmk;)Lbdb;	g	lambda$static$2
		p	0		config
	m	(Ldmk;)Lbdd;	h	lambda$static$1
		p	0		config
	m	(Ldmk;)Ljava/lang/Integer;	i	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	floorToCeilingSearchRange
	f	Lbdd;	c	columnRadius
	f	Lbdb;	d	heightScale
	f	F	e	maxColumnRadiusToCaveHeightRatio
	f	Lbdb;	f	stalactiteBluntness
	f	Lbdb;	g	stalagmiteBluntness
	f	Lbdb;	h	windSpeed
	f	I	i	minRadiusForWind
	f	F	j	minBluntnessForWind
c	dml	net/minecraft/world/level/levelgen/feature/configurations/LayerConfiguration
	m	(ILdbq;)V	<init>	<init>
		p	1		height
		p	2		state
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Ldml;)Ldbq;	a	lambda$static$1
		p	0		config
	m	(Ldml;)Ljava/lang/Integer;	b	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	height
	f	Ldbq;	c	state
c	dmm	net/minecraft/world/level/levelgen/feature/configurations/MultifaceGrowthConfiguration
	m	(Lcud;IZZZFLhh;)V	<init>	<init>
		p	1		lichen
		p	2		searchRange
		p	3		placeOnFloor
		p	4		placeOnCeiling
		p	5		placeOnWalls
		p	6		spreadChance
		p	7		canPlaceOn
	m	()Ljava/lang/String;	a	lambda$apply$8
	m	(Lapo;)Ljava/util/List;	a	getShuffledDirections
		p	1		random
	m	(Lapo;Lgz;)Ljava/util/List;	a	getShuffledDirectionsExcept
		p	1		random
		p	2		excluded
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$7
		p	0		instance
	m	(Lcpi;)Lcom/mojang/serialization/DataResult;	a	apply
		p	0		block
	m	(Ldmm;)Lhh;	a	lambda$static$6
		p	0		config
	m	(Lgz;Lgz;)Z	a	lambda$getShuffledDirectionsExcept$9
		p	1		direction
	m	(Ldmm;)Ljava/lang/Float;	b	lambda$static$5
		p	0		config
	m	(Ldmm;)Ljava/lang/Boolean;	c	lambda$static$4
		p	0		config
	m	(Ldmm;)Ljava/lang/Boolean;	d	lambda$static$3
		p	0		config
	m	(Ldmm;)Ljava/lang/Boolean;	e	lambda$static$2
		p	0		config
	m	(Ldmm;)Ljava/lang/Integer;	f	lambda$static$1
		p	0		config
	m	(Ldmm;)Lcud;	g	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcud;	b	placeBlock
	f	I	c	searchRange
	f	Z	d	canPlaceOnFloor
	f	Z	e	canPlaceOnCeiling
	f	Z	f	canPlaceOnWall
	f	F	g	chanceOfSpreading
	f	Lhh;	h	canBePlacedOn
	f	Lit/unimi/dsi/fastutil/objects/ObjectArrayList;	i	validDirections
c	dmn	net/minecraft/world/level/levelgen/feature/configurations/NetherForestVegetationConfig
	m	(Ldoi;II)V	<init>	<init>
		p	1		stateProvider
		p	2		spreadWidth
		p	3		spreadHeight
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
	m	(Ldmn;)Ljava/lang/Integer;	a	lambda$static$2
		p	0		config
	m	(Ldmn;)Ljava/lang/Integer;	b	lambda$static$1
		p	0		config
	m	(Ldmn;)Ldoi;	c	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	I	d	spreadWidth
	f	I	e	spreadHeight
c	dmo	net/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration
	m	()Ldmo;	a	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldmo;	b	INSTANCE
c	dmp	net/minecraft/world/level/levelgen/feature/configurations/OreConfiguration
	m	(Ldvb;Ldbq;I)V	<init>	<init>
		p	1		test
		p	2		state
		p	3		size
	m	(Ldvb;Ldbq;IF)V	<init>	<init>
		p	1		test
		p	2		state
		p	3		size
		p	4		discardOnAirChance
	m	(Ljava/util/List;I)V	<init>	<init>
		p	1		targets
		p	2		size
	m	(Ljava/util/List;IF)V	<init>	<init>
		p	1		targets
		p	2		size
		p	3		discardOnAirChance
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	(Ldmp;)Ljava/lang/Float;	a	lambda$static$2
		p	0		config
	m	(Ldvb;Ldbq;)Ldmp$a;	a	target
		p	0		test
		p	1		state
	m	(Ldmp;)Ljava/lang/Integer;	b	lambda$static$1
		p	0		config
	m	(Ldmp;)Ljava/util/List;	c	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/List;	b	targetStates
	f	I	c	size
	f	F	d	discardChanceOnAirExposure
c	dmp$a	net/minecraft/world/level/levelgen/feature/configurations/OreConfiguration$TargetBlockState
	m	(Ldvb;Ldbq;)V	<init>	<init>
		p	1		target
		p	2		state
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Ldmp$a;)Ldbq;	a	lambda$static$1
		p	0		target
	m	(Ldmp$a;)Ldvb;	b	lambda$static$0
		p	0		target
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldvb;	b	target
	f	Ldbq;	c	state
c	dmq	net/minecraft/world/level/levelgen/feature/configurations/PointedDripstoneConfiguration
	m	(FFFF)V	<init>	<init>
		p	1		chanceOfTallerDripstone
		p	2		chanceOfDirectionalSpread
		p	3		chanceOfSpreadRadius2
		p	4		chanceOfSpreadRadius3
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
		p	0		instance
	m	(Ldmq;)Ljava/lang/Float;	a	lambda$static$3
		p	0		config
	m	(Ldmq;)Ljava/lang/Float;	b	lambda$static$2
		p	0		config
	m	(Ldmq;)Ljava/lang/Float;	c	lambda$static$1
		p	0		config
	m	(Ldmq;)Ljava/lang/Float;	d	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	F	b	chanceOfTallerDripstone
	f	F	c	chanceOfDirectionalSpread
	f	F	d	chanceOfSpreadRadius2
	f	F	e	chanceOfSpreadRadius3
c	dmr	net/minecraft/world/level/levelgen/feature/configurations/ProbabilityFeatureConfiguration
	m	(F)V	<init>	<init>
		p	1		probability
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Ldmr;)Ljava/lang/Float;	a	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	k	CODEC
	f	F	l	probability
c	dms	net/minecraft/world/level/levelgen/feature/configurations/RandomBooleanFeatureConfiguration
	m	(Lhd;Lhd;)V	<init>	<init>
		p	1		featureTrue
		p	2		featureFalse
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Ldms;)Lhd;	a	lambda$static$1
		p	0		config
	m	(Ldms;)Lhd;	b	lambda$static$0
		p	0		config
	m	()Ljava/util/stream/Stream;	e	getFeatures
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lhd;	b	featureTrue
	f	Lhd;	c	featureFalse
c	dmt	net/minecraft/world/level/levelgen/feature/configurations/RandomFeatureConfiguration
	m	(Ljava/util/List;Lhd;)V	<init>	<init>
		p	1		features
		p	2		defaultFeature
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Ldlx;)Ljava/util/stream/Stream;	a	lambda$getFeatures$3
		p	0		entry
	m	(Ldmt;)Lhd;	a	lambda$static$1
		p	0		config
	m	(Ldmt;)Ljava/util/List;	b	lambda$static$0
		p	0		config
	m	()Ljava/util/stream/Stream;	e	getFeatures
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/List;	b	features
	f	Lhd;	c	defaultFeature
c	dmu	net/minecraft/world/level/levelgen/feature/configurations/RandomPatchConfiguration
	m	()I	a	tries
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()I	b	xzSpread
	m	()I	c	ySpread
	m	()Lhd;	d	feature
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	tries
	f	I	c	xzSpread
	f	I	d	ySpread
	f	Lhd;	e	feature
c	dmv	net/minecraft/world/level/levelgen/feature/configurations/ReplaceBlockConfiguration
	m	(Ldbq;Ldbq;)V	<init>	<init>
		p	1		target
		p	2		state
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		targets
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Ldmv;)Ljava/util/List;	a	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/List;	b	targetStates
c	dmw	net/minecraft/world/level/levelgen/feature/configurations/ReplaceSphereConfiguration
	m	(Ldbq;Ldbq;Lbdd;)V	<init>	<init>
		p	1		target
		p	2		state
		p	3		radius
	m	()Lbdd;	a	radius
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	(Ldmw;)Lbdd;	a	lambda$static$2
		p	0		config
	m	(Ldmw;)Ldbq;	b	lambda$static$1
		p	0		config
	m	(Ldmw;)Ldbq;	c	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldbq;	b	targetState
	f	Ldbq;	c	replaceState
	f	Lbdd;	d	radius
c	dmx	net/minecraft/world/level/levelgen/feature/configurations/RootSystemConfiguration
	m	(Lhd;IILanv;Ldoi;IIIILdoi;IILdig;)V	<init>	<init>
		p	1		feature
		p	2		requiredVerticalSpaceForTree
		p	3		rootRadius
		p	4		rootReplaceable
		p	5		rootStateProvider
		p	6		rootPlacementAttempts
		p	7		maxRootColumnHeight
		p	8		hangingRootRadius
		p	9		hangingRootVerticalSpan
		p	10		hangingRootStateProvider
		p	11		hangingRootPlacementAttempts
		p	12		allowedVerticalWaterForTree
		p	13		predicate
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$13
		p	0		instance
	m	(Ldmx;)Ldig;	a	lambda$static$12
		p	0		config
	m	(Ldmx;)Ljava/lang/Integer;	b	lambda$static$11
		p	0		config
	m	(Ldmx;)Ljava/lang/Integer;	c	lambda$static$10
		p	0		config
	m	(Ldmx;)Ldoi;	d	lambda$static$9
		p	0		config
	m	(Ldmx;)Ljava/lang/Integer;	e	lambda$static$8
		p	0		config
	m	(Ldmx;)Ljava/lang/Integer;	f	lambda$static$7
		p	0		config
	m	(Ldmx;)Ljava/lang/Integer;	g	lambda$static$6
		p	0		config
	m	(Ldmx;)Ljava/lang/Integer;	h	lambda$static$5
		p	0		config
	m	(Ldmx;)Ldoi;	i	lambda$static$4
		p	0		config
	m	(Ldmx;)Lanv;	j	lambda$static$3
		p	0		config
	m	(Ldmx;)Ljava/lang/Integer;	k	lambda$static$2
		p	0		config
	m	(Ldmx;)Ljava/lang/Integer;	l	lambda$static$1
		p	0		config
	m	(Ldmx;)Lhd;	m	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lhd;	b	treeFeature
	f	I	c	requiredVerticalSpaceForTree
	f	I	d	rootRadius
	f	Lanv;	e	rootReplaceable
	f	Ldoi;	f	rootStateProvider
	f	I	g	rootPlacementAttempts
	f	I	h	rootColumnMaxHeight
	f	I	i	hangingRootRadius
	f	I	j	hangingRootsVerticalSpan
	f	Ldoi;	k	hangingRootStateProvider
	f	I	l	hangingRootPlacementAttempts
	f	I	n	allowedVerticalWaterForTree
	f	Ldig;	o	allowedTreePosition
c	dmy	net/minecraft/world/level/levelgen/feature/configurations/SculkPatchConfiguration
	m	()I	a	chargeCount
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()I	b	amountPerCharge
	m	()I	c	spreadAttempts
	m	()I	d	growthRounds
	m	()I	f	spreadRounds
	m	()Lbdd;	g	extraRareGrowths
	m	()F	h	catalystChance
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	chargeCount
	f	I	c	amountPerCharge
	f	I	d	spreadAttempts
	f	I	e	growthRounds
	f	I	f	spreadRounds
	f	Lbdd;	g	extraRareGrowths
	f	F	h	catalystChance
c	dmz	net/minecraft/world/level/levelgen/feature/configurations/SimpleBlockConfiguration
	m	(Ldoi;)V	<init>	<init>
		p	1		toPlace
	m	()Ldoi;	a	toPlace
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Ldmz;)Ldoi;	a	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldoi;	b	toPlace
c	dna	net/minecraft/world/level/levelgen/feature/configurations/SimpleRandomFeatureConfiguration
	m	(Lhh;)V	<init>	<init>
		p	1		features
	m	(Ldna;)Lhh;	a	lambda$static$0
		p	0		config
	m	(Lhd;)Ljava/util/stream/Stream;	a	lambda$getFeatures$1
		p	0		feature
	m	()Ljava/util/stream/Stream;	e	getFeatures
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lhh;	b	features
c	dnb	net/minecraft/world/level/levelgen/feature/configurations/SpikeConfiguration
	m	(ZLjava/util/List;Lgt;)V	<init>	<init>
		p	1		crystalInvulnerable
		p	2		spikes
		p	3		crystalBeamTarget
	m	(ZLjava/util/List;Ljava/util/Optional;)V	<init>	<init>
		p	1		crystalInvulnerable
		p	2		spikes
		p	3		crystalBeamTarget
	m	()Z	a	isCrystalInvulnerable
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	(Ldnb;)Ljava/util/Optional;	a	lambda$static$2
		p	0		config
	m	()Ljava/util/List;	b	getSpikes
	m	(Ldnb;)Ljava/util/List;	b	lambda$static$1
		p	0		config
	m	()Lgt;	c	getCrystalBeamTarget
	m	(Ldnb;)Ljava/lang/Boolean;	c	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Z	b	crystalInvulnerable
	f	Ljava/util/List;	c	spikes
	f	Lgt;	d	crystalBeamTarget
c	dnc	net/minecraft/world/level/levelgen/feature/configurations/SpringConfiguration
	m	(Ldwj;ZIILhh;)V	<init>	<init>
		p	1		state
		p	2		requiresBlockBelow
		p	3		rockCount
		p	4		holeCount
		p	5		validBlocks
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$5
		p	0		instance
	m	(Ldnc;)Lhh;	a	lambda$static$4
		p	0		config
	m	(Ldnc;)Ljava/lang/Integer;	b	lambda$static$3
		p	0		config
	m	(Ldnc;)Ljava/lang/Integer;	c	lambda$static$2
		p	0		config
	m	(Ldnc;)Ljava/lang/Boolean;	d	lambda$static$1
		p	0		config
	m	(Ldnc;)Ldwj;	e	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldwj;	b	state
	f	Z	c	requiresBlockBelow
	f	I	d	rockCount
	f	I	e	holeCount
	f	Lhh;	f	validBlocks
c	dnd	net/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration
	m	(Ldoi;Ldpl;Ldoi;Ldnt;Ljava/util/Optional;Ldoi;Ldni;Ljava/util/List;ZZ)V	<init>	<init>
		p	1		trunkProvider
		p	2		trunkPlacer
		p	3		foliageProvider
		p	4		foliagePlacer
		p	5		rootPlacer
		p	6		dirtProvider
		p	7		minimumSize
		p	8		decorators
		p	9		ignoreVines
		p	10		forceDirt
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$10
		p	0		instance
	m	(Ldnd;)Ljava/lang/Boolean;	a	lambda$static$9
		p	0		config
	m	(Ldnd;)Ljava/lang/Boolean;	b	lambda$static$8
		p	0		config
	m	(Ldnd;)Ljava/util/List;	c	lambda$static$7
		p	0		config
	m	(Ldnd;)Ldni;	d	lambda$static$6
		p	0		config
	m	(Ldnd;)Ldoi;	e	lambda$static$5
		p	0		config
	m	(Ldnd;)Ljava/util/Optional;	f	lambda$static$4
		p	0		config
	m	(Ldnd;)Ldnt;	g	lambda$static$3
		p	0		config
	m	(Ldnd;)Ldoi;	h	lambda$static$2
		p	0		config
	m	(Ldnd;)Ldpl;	i	lambda$static$1
		p	0		config
	m	(Ldnd;)Ldoi;	j	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldoi;	b	trunkProvider
	f	Ldoi;	c	dirtProvider
	f	Ldpl;	d	trunkPlacer
	f	Ldoi;	e	foliageProvider
	f	Ldnt;	f	foliagePlacer
	f	Ljava/util/Optional;	g	rootPlacer
	f	Ldni;	h	minimumSize
	f	Ljava/util/List;	i	decorators
	f	Z	j	ignoreVines
	f	Z	k	forceDirt
c	dnd$a	net/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration$TreeConfigurationBuilder
	m	(Ldoi;Ldpl;Ldoi;Ldnt;Ldni;)V	<init>	<init>
		p	1		trunkProvider
		p	2		trunkPlacer
		p	3		foliageProvider
		p	4		foliagePlacer
		p	5		minimumSize
	m	(Ldoi;Ldpl;Ldoi;Ldnt;Ljava/util/Optional;Ldni;)V	<init>	<init>
		p	1		trunkProvider
		p	2		trunkPlacer
		p	3		foliageProvider
		p	4		foliagePlacer
		p	5		rootPlacer
		p	6		minimumSize
	m	()Ldnd$a;	a	ignoreVines
	m	(Ldoi;)Ldnd$a;	a	dirt
		p	1		dirtProvider
	m	(Ljava/util/List;)Ldnd$a;	a	decorators
		p	1		decorators
	m	()Ldnd$a;	b	forceDirt
	m	()Ldnd;	c	build
	f	Ldoi;	a	trunkProvider
	f	Ldoi;	b	foliageProvider
	f	Ldpl;	c	trunkPlacer
	f	Ldnt;	d	foliagePlacer
	f	Ljava/util/Optional;	e	rootPlacer
	f	Ldoi;	f	dirtProvider
	f	Ldni;	g	minimumSize
	f	Ljava/util/List;	h	decorators
	f	Z	i	ignoreVines
	f	Z	j	forceDirt
c	dne	net/minecraft/world/level/levelgen/feature/configurations/TwistingVinesConfig
	m	()I	a	spreadWidth
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()I	b	spreadHeight
	m	()I	c	maxHeight
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	spreadWidth
	f	I	c	spreadHeight
	f	I	d	maxHeight
c	dnf	net/minecraft/world/level/levelgen/feature/configurations/UnderwaterMagmaConfiguration
	m	(IIF)V	<init>	<init>
		p	1		minDistanceBelowSurface
		p	2		floorSearchRange
		p	3		placementProbabilityPerValidPosition
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	(Ldnf;)Ljava/lang/Float;	a	lambda$static$2
		p	0		config
	m	(Ldnf;)Ljava/lang/Integer;	b	lambda$static$1
		p	0		config
	m	(Ldnf;)Ljava/lang/Integer;	c	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	floorSearchRange
	f	I	c	placementRadiusAroundFloor
	f	F	d	placementProbabilityPerValidPosition
c	dng	net/minecraft/world/level/levelgen/feature/configurations/VegetationPatchConfiguration
	m	(Lanv;Ldoi;Lhd;Ldqk;Lbdd;FIFLbdd;F)V	<init>	<init>
		p	1		replaceable
		p	2		groundState
		p	3		vegetationFeature
		p	4		surface
		p	5		depth
		p	6		extraBottomBlockChance
		p	7		verticalRange
		p	8		vegetationChance
		p	9		horizontalRadius
		p	10		extraEdgeColumnChance
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$10
		p	0		instance
	m	(Ldng;)Ljava/lang/Float;	a	lambda$static$9
		p	0		config
	m	(Ldng;)Lbdd;	b	lambda$static$8
		p	0		config
	m	(Ldng;)Ljava/lang/Float;	c	lambda$static$7
		p	0		config
	m	(Ldng;)Ljava/lang/Integer;	d	lambda$static$6
		p	0		config
	m	(Ldng;)Ljava/lang/Float;	e	lambda$static$5
		p	0		config
	m	(Ldng;)Lbdd;	f	lambda$static$4
		p	0		config
	m	(Ldng;)Ldqk;	g	lambda$static$3
		p	0		config
	m	(Ldng;)Lhd;	h	lambda$static$2
		p	0		config
	m	(Ldng;)Ldoi;	i	lambda$static$1
		p	0		config
	m	(Ldng;)Lanv;	j	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lanv;	b	replaceable
	f	Ldoi;	c	groundState
	f	Lhd;	d	vegetationFeature
	f	Ldqk;	e	surface
	f	Lbdd;	f	depth
	f	F	g	extraBottomBlockChance
	f	I	h	verticalRange
	f	F	i	vegetationChance
	f	Lbdd;	j	xzRadius
	f	F	k	extraEdgeColumnChance
c	dnh	net/minecraft/world/level/levelgen/feature/configurations/package-info
c	dni	net/minecraft/world/level/levelgen/feature/featuresize/FeatureSize
	m	(Ljava/util/OptionalInt;)V	<init>	<init>
		p	1		minClippedHeight
	m	()Lcom/mojang/serialization/codecs/RecordCodecBuilder;	a	minClippedHeightCodec
	m	(II)I	a	getSizeAtHeight
		p	1		height
		p	2		y
	m	(Ldni;)Ljava/util/OptionalInt;	a	lambda$minClippedHeightCodec$2
	m	(Ljava/util/Optional;)Ljava/util/OptionalInt;	a	lambda$minClippedHeightCodec$0
	m	(Ljava/util/OptionalInt;)Ljava/util/Optional;	a	lambda$minClippedHeightCodec$1
	m	()Ldnj;	b	type
	m	()Ljava/util/OptionalInt;	c	minClippedHeight
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	MAX_WIDTH
	f	Ljava/util/OptionalInt;	c	minClippedHeight
c	dnj	net/minecraft/world/level/levelgen/feature/featuresize/FeatureSizeType
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		codec
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Ldnj;	a	register
		p	0		id
		p	1		codec
	f	Ldnj;	a	TWO_LAYERS_FEATURE_SIZE
	f	Ldnj;	b	THREE_LAYERS_FEATURE_SIZE
	f	Lcom/mojang/serialization/Codec;	c	codec
c	dnk	net/minecraft/world/level/levelgen/feature/featuresize/ThreeLayersFeatureSize
	m	(IIIIILjava/util/OptionalInt;)V	<init>	<init>
		p	1		limit
		p	2		upperLimit
		p	3		lowerSize
		p	4		middleSize
		p	5		upperSize
		p	6		minClippedHeight
	m	(II)I	a	getSizeAtHeight
		p	1		height
		p	2		y
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$5
		p	0		instance
	m	(Ldnk;)Ljava/lang/Integer;	a	lambda$static$4
	m	()Ldnj;	b	type
	m	(Ldnk;)Ljava/lang/Integer;	b	lambda$static$3
	m	(Ldnk;)Ljava/lang/Integer;	c	lambda$static$2
	m	(Ldnk;)Ljava/lang/Integer;	d	lambda$static$1
	m	(Ldnk;)Ljava/lang/Integer;	e	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	I	e	limit
	f	I	f	upperLimit
	f	I	g	lowerSize
	f	I	h	middleSize
	f	I	i	upperSize
c	dnl	net/minecraft/world/level/levelgen/feature/featuresize/TwoLayersFeatureSize
	m	(III)V	<init>	<init>
		p	1		limit
		p	2		lowerSize
		p	3		upperSize
	m	(IIILjava/util/OptionalInt;)V	<init>	<init>
		p	1		limit
		p	2		lowerSize
		p	3		upperSize
		p	4		minClippedHeight
	m	(II)I	a	getSizeAtHeight
		p	1		height
		p	2		y
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	(Ldnl;)Ljava/lang/Integer;	a	lambda$static$2
	m	()Ldnj;	b	type
	m	(Ldnl;)Ljava/lang/Integer;	b	lambda$static$1
	m	(Ldnl;)Ljava/lang/Integer;	c	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	I	e	limit
	f	I	f	lowerSize
	f	I	g	upperSize
c	dnm	net/minecraft/world/level/levelgen/feature/featuresize/package-info
c	dnn	net/minecraft/world/level/levelgen/feature/foliageplacers/AcaciaFoliagePlacer
	m	(Lbdd;Lbdd;)V	<init>	<init>
		p	1		radius
		p	2		offset
	m	()Ldnu;	a	type
	m	(Lapo;IIIIZ)Z	a	shouldSkipLocation
		p	1		random
		p	2		dx
		p	3		y
		p	4		dz
		p	5		radius
		p	6		giantTrunk
	m	(Lapo;ILdnd;)I	a	foliageHeight
		p	1		random
		p	2		trunkHeight
		p	3		config
	m	(Lcmo;Ldnt$b;Lapo;Ldnd;ILdnt$a;III)V	a	createFoliage
		p	1		world
		p	2		placer
		p	3		random
		p	4		config
		p	5		trunkHeight
		p	6		treeNode
		p	7		foliageHeight
		p	8		radius
		p	9		offset
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	f	Lcom/mojang/serialization/Codec;	a	CODEC
c	dno	net/minecraft/world/level/levelgen/feature/foliageplacers/BlobFoliagePlacer
	m	(Lbdd;Lbdd;I)V	<init>	<init>
		p	1		radius
		p	2		offset
		p	3		height
	m	()Ldnu;	a	type
	m	(Lapo;IIIIZ)Z	a	shouldSkipLocation
		p	1		random
		p	2		dx
		p	3		y
		p	4		dz
		p	5		radius
		p	6		giantTrunk
	m	(Lapo;ILdnd;)I	a	foliageHeight
		p	1		random
		p	2		trunkHeight
		p	3		config
	m	(Lcmo;Ldnt$b;Lapo;Ldnd;ILdnt$a;III)V	a	createFoliage
		p	1		world
		p	2		placer
		p	3		random
		p	4		config
		p	5		trunkHeight
		p	6		treeNode
		p	7		foliageHeight
		p	8		radius
		p	9		offset
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P3;	a	blobParts
		p	0		builder
	m	(Ldno;)Ljava/lang/Integer;	a	lambda$blobParts$1
		p	0		placer
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	c	lambda$static$0
		p	0		instance
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	height
c	dnp	net/minecraft/world/level/levelgen/feature/foliageplacers/BushFoliagePlacer
	m	(Lbdd;Lbdd;I)V	<init>	<init>
		p	1		radius
		p	2		offset
		p	3		height
	m	()Ldnu;	a	type
	m	(Lapo;IIIIZ)Z	a	shouldSkipLocation
		p	1		random
		p	2		dx
		p	3		y
		p	4		dz
		p	5		radius
		p	6		giantTrunk
	m	(Lcmo;Ldnt$b;Lapo;Ldnd;ILdnt$a;III)V	a	createFoliage
		p	1		world
		p	2		placer
		p	3		random
		p	4		config
		p	5		trunkHeight
		p	6		treeNode
		p	7		foliageHeight
		p	8		radius
		p	9		offset
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	c	lambda$static$0
		p	0		instance
	f	Lcom/mojang/serialization/Codec;	c	CODEC
c	dnq	net/minecraft/world/level/levelgen/feature/foliageplacers/CherryFoliagePlacer
	m	(Lbdd;Lbdd;Lbdd;FFFF)V	<init>	<init>
		p	1		radius
		p	2		offset
		p	3		height
		p	4		wideBottomLayerHoleChance
		p	5		cornerHoleChance
		p	6		hangingLeavesChance
		p	7		hangingLeavesExtensionChance
	m	()Ldnu;	a	type
	m	(Lapo;IIIIZ)Z	a	shouldSkipLocation
		p	1		random
		p	2		dx
		p	3		y
		p	4		dz
		p	5		radius
		p	6		giantTrunk
	m	(Lapo;ILdnd;)I	a	foliageHeight
		p	1		random
		p	2		trunkHeight
		p	3		config
	m	(Lcmo;Ldnt$b;Lapo;Ldnd;ILdnt$a;III)V	a	createFoliage
		p	1		world
		p	2		placer
		p	3		random
		p	4		config
		p	5		trunkHeight
		p	6		treeNode
		p	7		foliageHeight
		p	8		radius
		p	9		offset
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$5
	m	(Ldnq;)Ljava/lang/Float;	a	lambda$static$4
		p	0		foliagePlacer
	m	(Ldnq;)Ljava/lang/Float;	b	lambda$static$3
		p	0		foliagePlacer
	m	(Ldnq;)Ljava/lang/Float;	c	lambda$static$2
		p	0		foliagePlacer
	m	(Ldnq;)Ljava/lang/Float;	d	lambda$static$1
		p	0		foliagePlacer
	m	(Ldnq;)Lbdd;	e	lambda$static$0
		p	0		foliagePlacer
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lbdd;	b	height
	f	F	c	wideBottomLayerHoleChance
	f	F	g	cornerHoleChance
	f	F	h	hangingLeavesChance
	f	F	i	hangingLeavesExtensionChance
c	dnr	net/minecraft/world/level/levelgen/feature/foliageplacers/DarkOakFoliagePlacer
	m	(Lbdd;Lbdd;)V	<init>	<init>
		p	1		radius
		p	2		offset
	m	()Ldnu;	a	type
	m	(Lapo;IIIIZ)Z	a	shouldSkipLocation
		p	1		random
		p	2		dx
		p	3		y
		p	4		dz
		p	5		radius
		p	6		giantTrunk
	m	(Lapo;ILdnd;)I	a	foliageHeight
		p	1		random
		p	2		trunkHeight
		p	3		config
	m	(Lcmo;Ldnt$b;Lapo;Ldnd;ILdnt$a;III)V	a	createFoliage
		p	1		world
		p	2		placer
		p	3		random
		p	4		config
		p	5		trunkHeight
		p	6		treeNode
		p	7		foliageHeight
		p	8		radius
		p	9		offset
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lapo;IIIIZ)Z	b	shouldSkipLocationSigned
		p	1		random
		p	2		dx
		p	3		y
		p	4		dz
		p	5		radius
		p	6		giantTrunk
	f	Lcom/mojang/serialization/Codec;	a	CODEC
c	dns	net/minecraft/world/level/levelgen/feature/foliageplacers/FancyFoliagePlacer
	m	(Lbdd;Lbdd;I)V	<init>	<init>
		p	1		radius
		p	2		offset
		p	3		height
	m	()Ldnu;	a	type
	m	(Lapo;IIIIZ)Z	a	shouldSkipLocation
		p	1		random
		p	2		dx
		p	3		y
		p	4		dz
		p	5		radius
		p	6		giantTrunk
	m	(Lcmo;Ldnt$b;Lapo;Ldnd;ILdnt$a;III)V	a	createFoliage
		p	1		world
		p	2		placer
		p	3		random
		p	4		config
		p	5		trunkHeight
		p	6		treeNode
		p	7		foliageHeight
		p	8		radius
		p	9		offset
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	c	lambda$static$0
		p	0		instance
	f	Lcom/mojang/serialization/Codec;	c	CODEC
c	dnt	net/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer
	m	(Lbdd;Lbdd;)V	<init>	<init>
		p	1		radius
		p	2		offset
	m	()Ldnu;	a	type
	m	(Lapo;)I	a	offset
		p	1		random
	m	(Lapo;I)I	a	foliageRadius
		p	1		random
		p	2		baseHeight
	m	(Lapo;IIIIZ)Z	a	shouldSkipLocation
		p	1		random
		p	2		dx
		p	3		y
		p	4		dz
		p	5		radius
		p	6		giantTrunk
	m	(Lapo;ILdnd;)I	a	foliageHeight
		p	1		random
		p	2		trunkHeight
		p	3		config
	m	(Lcmo;Ldnt$b;Lapo;Ldnd;ILdnt$a;II)V	a	createFoliage
		p	1		world
		p	2		placer
		p	3		random
		p	4		config
		p	5		trunkHeight
		p	6		treeNode
		p	7		foliageHeight
		p	8		radius
	m	(Lcmo;Ldnt$b;Lapo;Ldnd;ILdnt$a;III)V	a	createFoliage
		p	1		world
		p	2		placer
		p	3		random
		p	4		config
		p	5		trunkHeight
		p	6		treeNode
		p	7		foliageHeight
		p	8		radius
		p	9		offset
	m	(Lcmo;Ldnt$b;Lapo;Ldnd;Lgt;)Z	a	tryPlaceLeaf
		p	0		world
		p	1		placer
		p	2		random
		p	3		config
		p	4		pos
	m	(Lcmo;Ldnt$b;Lapo;Ldnd;Lgt;IIZ)V	a	placeLeavesRow
		p	1		world
		p	2		placer
		p	3		random
		p	4		config
		p	5		centerPos
		p	6		radius
		p	7		y
		p	8		giantTrunk
	m	(Lcmo;Ldnt$b;Lapo;Ldnd;Lgt;IIZFF)V	a	placeLeavesRowWithHangingLeavesBelow
		p	1		world
		p	2		placer
		p	3		random
		p	4		config
		p	5		centerPos
		p	6		radius
		p	7		y
		p	8		giantTrunk
		p	9		hangingLeavesChance
		p	10		hangingLeavesExtensionChance
	m	(Ldnt;)Lbdd;	a	lambda$foliagePlacerParts$1
		p	0		placer
	m	(Ldwj;)Z	a	lambda$tryPlaceLeaf$2
		p	0		fluidState
	m	(Lapo;IIIIZ)Z	b	shouldSkipLocationSigned
		p	1		random
		p	2		dx
		p	3		y
		p	4		dz
		p	5		radius
		p	6		giantTrunk
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P2;	b	foliagePlacerParts
		p	0		instance
	m	(Ldnt;)Lbdd;	b	lambda$foliagePlacerParts$0
		p	0		placer
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	Lbdd;	e	radius
	f	Lbdd;	f	offset
c	dnt$a	net/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment
	m	(Lgt;IZ)V	<init>	<init>
		p	1		center
		p	2		foliageRadius
		p	3		giantTrunk
	m	()Lgt;	a	pos
	m	()I	b	radiusOffset
	m	()Z	c	doubleTrunk
	f	Lgt;	a	pos
	f	I	b	radiusOffset
	f	Z	c	doubleTrunk
c	dnt$b	net/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageSetter
	m	(Lgt;)Z	a	isSet
		p	1		pos
	m	(Lgt;Ldbq;)V	a	set
		p	1		pos
		p	2		state
c	dnu	net/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		codec
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Ldnu;	a	register
		p	0		id
		p	1		codec
	f	Ldnu;	a	BLOB_FOLIAGE_PLACER
	f	Ldnu;	b	SPRUCE_FOLIAGE_PLACER
	f	Ldnu;	c	PINE_FOLIAGE_PLACER
	f	Ldnu;	d	ACACIA_FOLIAGE_PLACER
	f	Ldnu;	e	BUSH_FOLIAGE_PLACER
	f	Ldnu;	f	FANCY_FOLIAGE_PLACER
	f	Ldnu;	g	MEGA_JUNGLE_FOLIAGE_PLACER
	f	Ldnu;	h	MEGA_PINE_FOLIAGE_PLACER
	f	Ldnu;	i	DARK_OAK_FOLIAGE_PLACER
	f	Ldnu;	j	RANDOM_SPREAD_FOLIAGE_PLACER
	f	Ldnu;	k	CHERRY_FOLIAGE_PLACER
	f	Lcom/mojang/serialization/Codec;	l	codec
c	dnv	net/minecraft/world/level/levelgen/feature/foliageplacers/MegaJungleFoliagePlacer
	m	(Lbdd;Lbdd;I)V	<init>	<init>
		p	1		radius
		p	2		offset
		p	3		height
	m	()Ldnu;	a	type
	m	(Lapo;IIIIZ)Z	a	shouldSkipLocation
		p	1		random
		p	2		dx
		p	3		y
		p	4		dz
		p	5		radius
		p	6		giantTrunk
	m	(Lapo;ILdnd;)I	a	foliageHeight
		p	1		random
		p	2		trunkHeight
		p	3		config
	m	(Lcmo;Ldnt$b;Lapo;Ldnd;ILdnt$a;III)V	a	createFoliage
		p	1		world
		p	2		placer
		p	3		random
		p	4		config
		p	5		trunkHeight
		p	6		treeNode
		p	7		foliageHeight
		p	8		radius
		p	9		offset
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Ldnv;)Ljava/lang/Integer;	a	lambda$static$0
		p	0		placer
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	height
c	dnw	net/minecraft/world/level/levelgen/feature/foliageplacers/MegaPineFoliagePlacer
	m	(Lbdd;Lbdd;Lbdd;)V	<init>	<init>
		p	1		radius
		p	2		offset
		p	3		crownHeight
	m	()Ldnu;	a	type
	m	(Lapo;IIIIZ)Z	a	shouldSkipLocation
		p	1		random
		p	2		dx
		p	3		y
		p	4		dz
		p	5		radius
		p	6		giantTrunk
	m	(Lapo;ILdnd;)I	a	foliageHeight
		p	1		random
		p	2		trunkHeight
		p	3		config
	m	(Lcmo;Ldnt$b;Lapo;Ldnd;ILdnt$a;III)V	a	createFoliage
		p	1		world
		p	2		placer
		p	3		random
		p	4		config
		p	5		trunkHeight
		p	6		treeNode
		p	7		foliageHeight
		p	8		radius
		p	9		offset
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Ldnw;)Lbdd;	a	lambda$static$0
		p	0		placer
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lbdd;	b	crownHeight
c	dnx	net/minecraft/world/level/levelgen/feature/foliageplacers/PineFoliagePlacer
	m	(Lbdd;Lbdd;Lbdd;)V	<init>	<init>
		p	1		radius
		p	2		offset
		p	3		height
	m	()Ldnu;	a	type
	m	(Lapo;I)I	a	foliageRadius
		p	1		random
		p	2		baseHeight
	m	(Lapo;IIIIZ)Z	a	shouldSkipLocation
		p	1		random
		p	2		dx
		p	3		y
		p	4		dz
		p	5		radius
		p	6		giantTrunk
	m	(Lapo;ILdnd;)I	a	foliageHeight
		p	1		random
		p	2		trunkHeight
		p	3		config
	m	(Lcmo;Ldnt$b;Lapo;Ldnd;ILdnt$a;III)V	a	createFoliage
		p	1		world
		p	2		placer
		p	3		random
		p	4		config
		p	5		trunkHeight
		p	6		treeNode
		p	7		foliageHeight
		p	8		radius
		p	9		offset
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Ldnx;)Lbdd;	a	lambda$static$0
		p	0		placer
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lbdd;	b	height
c	dny	net/minecraft/world/level/levelgen/feature/foliageplacers/RandomSpreadFoliagePlacer
	m	(Lbdd;Lbdd;Lbdd;I)V	<init>	<init>
		p	1		radius
		p	2		offset
		p	3		foliageHeight
		p	4		leafPlacementAttempts
	m	()Ldnu;	a	type
	m	(Lapo;IIIIZ)Z	a	shouldSkipLocation
		p	1		random
		p	2		dx
		p	3		y
		p	4		dz
		p	5		radius
		p	6		giantTrunk
	m	(Lapo;ILdnd;)I	a	foliageHeight
		p	1		random
		p	2		trunkHeight
		p	3		config
	m	(Lcmo;Ldnt$b;Lapo;Ldnd;ILdnt$a;III)V	a	createFoliage
		p	1		world
		p	2		placer
		p	3		random
		p	4		config
		p	5		trunkHeight
		p	6		treeNode
		p	7		foliageHeight
		p	8		radius
		p	9		offset
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Ldny;)Ljava/lang/Integer;	a	lambda$static$1
		p	0		placer
	m	(Ldny;)Lbdd;	b	lambda$static$0
		p	0		placer
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lbdd;	b	foliageHeight
	f	I	c	leafPlacementAttempts
c	dnz	net/minecraft/world/level/levelgen/feature/foliageplacers/SpruceFoliagePlacer
	m	(Lbdd;Lbdd;Lbdd;)V	<init>	<init>
		p	1		radius
		p	2		offset
		p	3		trunkHeight
	m	()Ldnu;	a	type
	m	(Lapo;IIIIZ)Z	a	shouldSkipLocation
		p	1		random
		p	2		dx
		p	3		y
		p	4		dz
		p	5		radius
		p	6		giantTrunk
	m	(Lapo;ILdnd;)I	a	foliageHeight
		p	1		random
		p	2		trunkHeight
		p	3		config
	m	(Lcmo;Ldnt$b;Lapo;Ldnd;ILdnt$a;III)V	a	createFoliage
		p	1		world
		p	2		placer
		p	3		random
		p	4		config
		p	5		trunkHeight
		p	6		treeNode
		p	7		foliageHeight
		p	8		radius
		p	9		offset
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Ldnz;)Lbdd;	a	lambda$static$0
		p	0		placer
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lbdd;	b	trunkHeight
c	doa	net/minecraft/world/level/levelgen/feature/foliageplacers/package-info
c	dob	net/minecraft/world/level/levelgen/feature/package-info
c	doc	net/minecraft/world/level/levelgen/feature/rootplacers/AboveRootPlacement
	m	()Ldoi;	a	aboveRootProvider
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Ldoc;)Ljava/lang/Float;	a	lambda$static$1
		p	0		aboveRootPlacement
	m	()F	b	aboveRootPlacementChance
	m	(Ldoc;)Ldoi;	b	lambda$static$0
		p	0		aboveRootPlacement
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldoi;	b	aboveRootProvider
	f	F	c	aboveRootPlacementChance
c	dod	net/minecraft/world/level/levelgen/feature/rootplacers/MangroveRootPlacement
	m	()Lhh;	a	canGrowThrough
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$6
	m	(Ldod;)Ljava/lang/Float;	a	lambda$static$5
		p	0		rootPlacement
	m	()Lhh;	b	muddyRootsIn
	m	(Ldod;)Ljava/lang/Integer;	b	lambda$static$4
		p	0		rootPlacement
	m	()Ldoi;	c	muddyRootsProvider
	m	(Ldod;)Ljava/lang/Integer;	c	lambda$static$3
		p	0		rootPlacement
	m	()I	d	maxRootWidth
	m	(Ldod;)Ldoi;	d	lambda$static$2
		p	0		rootPlacement
	m	()I	e	maxRootLength
	m	(Ldod;)Lhh;	e	lambda$static$1
		p	0		rootPlacement
	m	()F	f	randomSkewChance
	m	(Ldod;)Lhh;	f	lambda$static$0
		p	0		rootPlacement
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lhh;	b	canGrowThrough
	f	Lhh;	c	muddyRootsIn
	f	Ldoi;	d	muddyRootsProvider
	f	I	e	maxRootWidth
	f	I	f	maxRootLength
	f	F	g	randomSkewChance
c	doe	net/minecraft/world/level/levelgen/feature/rootplacers/MangroveRootPlacer
	m	(Lbdd;Ldoi;Ljava/util/Optional;Ldod;)V	<init>	<init>
		p	1		trunkOffsetY
		p	2		rootProvider
		p	3		aboveRootPlacement
		p	4		mangroveRootPlacement
	m	()Ldog;	a	type
	m	(Lcmo;Lapo;Lgt;Lgz;Lgt;Ljava/util/List;I)Z	a	simulateRoots
		p	1		world
		p	2		random
		p	3		pos
		p	4		direction
		p	5		origin
		p	6		offshootPositions
		p	7		rootLength
	m	(Lcmo;Lgt;)Z	a	canPlaceRoot
		p	1		world
		p	2		pos
	m	(Lcmo;Ljava/util/function/BiConsumer;Lapo;Lgt;Ldnd;)V	a	placeRoot
		p	1		world
		p	2		replacer
		p	3		random
		p	4		pos
		p	5		config
	m	(Lcmo;Ljava/util/function/BiConsumer;Lapo;Lgt;Lgt;Ldnd;)Z	a	placeRoots
		p	1		world
		p	2		replacer
		p	3		random
		p	4		pos
		p	5		trunkPos
		p	6		config
	m	(Ldbq;)Z	a	lambda$placeRoot$3
		p	1		state
	m	(Ldoe;)Ldod;	a	lambda$static$0
		p	0		rootPlacer
	m	(Lgt;Lgz;Lapo;Lgt;)Ljava/util/List;	a	potentialRootPositions
		p	1		pos
		p	2		direction
		p	3		random
		p	4		origin
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$1
	m	(Ldbq;)Z	b	lambda$canPlaceRoot$2
		p	1		state
	f	I	a	ROOT_WIDTH_LIMIT
	f	I	b	ROOT_LENGTH_LIMIT
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Ldod;	h	mangroveRootPlacement
c	dof	net/minecraft/world/level/levelgen/feature/rootplacers/RootPlacer
	m	(Lbdd;Ldoi;Ljava/util/Optional;)V	<init>	<init>
		p	1		trunkOffsetY
		p	2		rootProvider
		p	3		aboveRootPlacement
	m	()Ldog;	a	type
	m	(Lcmo;Lgt;)Z	a	canPlaceRoot
		p	1		world
		p	2		pos
	m	(Lcmo;Lgt;Ldbq;)Ldbq;	a	getPotentiallyWaterloggedState
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcmo;Ljava/util/function/BiConsumer;Lapo;Lgt;Ldnd;)V	a	placeRoot
		p	1		world
		p	2		replacer
		p	3		random
		p	4		pos
		p	5		config
	m	(Lcmo;Ljava/util/function/BiConsumer;Lapo;Lgt;Lgt;Ldnd;)Z	a	placeRoots
		p	1		world
		p	2		replacer
		p	3		random
		p	4		pos
		p	5		trunkPos
		p	6		config
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P3;	a	rootPlacerParts
	m	(Ldof;)Ljava/util/Optional;	a	lambda$rootPlacerParts$2
		p	0		rootPlacer
	m	(Ldwj;)Z	a	lambda$getPotentiallyWaterloggedState$3
		p	0		fluidState
	m	(Lgt;Lapo;)Lgt;	a	getTrunkOrigin
		p	1		pos
		p	2		random
	m	(Ldof;)Ldoi;	b	lambda$rootPlacerParts$1
		p	0		rootPlacer
	m	(Ldof;)Lbdd;	c	lambda$rootPlacerParts$0
		p	0		rootPlacer
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	Lbdd;	e	trunkOffsetY
	f	Ldoi;	f	rootProvider
	f	Ljava/util/Optional;	g	aboveRootPlacement
c	dog	net/minecraft/world/level/levelgen/feature/rootplacers/RootPlacerType
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		codec
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Ldog;	a	register
		p	0		id
		p	1		codec
	f	Ldog;	a	MANGROVE_ROOT_PLACER
	f	Lcom/mojang/serialization/Codec;	b	codec
c	doh	net/minecraft/world/level/levelgen/feature/rootplacers/package-info
c	doi	net/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProvider
	m	()Ldoj;	a	type
	m	(Lapo;Lgt;)Ldbq;	a	getState
		p	1		random
		p	2		pos
	m	(Lcpi;)Ldor;	a	simple
		p	0		block
	m	(Ldbq;)Ldor;	a	simple
		p	0		state
	f	Lcom/mojang/serialization/Codec;	a	CODEC
c	doj	net/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProviderType
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		codec
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Ldoj;	a	register
		p	0		id
		p	1		codec
	f	Ldoj;	a	SIMPLE_STATE_PROVIDER
	f	Ldoj;	b	WEIGHTED_STATE_PROVIDER
	f	Ldoj;	c	NOISE_THRESHOLD_PROVIDER
	f	Ldoj;	d	NOISE_PROVIDER
	f	Ldoj;	e	DUAL_NOISE_PROVIDER
	f	Ldoj;	f	ROTATED_BLOCK_PROVIDER
	f	Ldoj;	g	RANDOMIZED_INT_STATE_PROVIDER
	f	Lcom/mojang/serialization/Codec;	h	codec
c	dok	net/minecraft/world/level/levelgen/feature/stateproviders/DualNoiseProvider
	m	(Lapc;Ldvo$a;FJLdvo$a;FLjava/util/List;)V	<init>	<init>
		p	1		variety
		p	2		slowNoiseParameters
		p	3		slowScale
		p	4		seed
		p	6		noiseParameters
		p	7		scale
		p	8		states
	m	()Ldoj;	a	type
	m	(Lapo;Lgt;)Ldbq;	a	getState
		p	1		random
		p	2		pos
	m	(Ldok;)Ljava/lang/Float;	a	lambda$static$2
	m	(Lgt;)D	a	getSlowNoiseValue
		p	1		pos
	m	(Ldok;)Ldvo$a;	b	lambda$static$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	c	lambda$static$3
	m	(Ldok;)Lapc;	c	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lapc;	i	variety
	f	Ldvo$a;	j	slowNoiseParameters
	f	F	k	slowScale
	f	Ldvo;	l	slowNoise
c	dol	net/minecraft/world/level/levelgen/feature/stateproviders/NoiseBasedStateProvider
	m	(JLdvo$a;F)V	<init>	<init>
		p	1		seed
		p	3		noiseParameters
		p	4		scale
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P3;	a	noiseCodec
		p	0		instance
	m	(Ldol;)Ljava/lang/Float;	a	lambda$noiseCodec$2
	m	(Lgt;D)D	a	getNoiseValue
		p	1		pos
		p	2		scale
	m	(Ldol;)Ldvo$a;	b	lambda$noiseCodec$1
	m	(Ldol;)Ljava/lang/Long;	c	lambda$noiseCodec$0
	f	J	c	seed
	f	Ldvo$a;	d	parameters
	f	F	e	scale
	f	Ldvo;	f	noise
c	dom	net/minecraft/world/level/levelgen/feature/stateproviders/NoiseProvider
	m	(JLdvo$a;FLjava/util/List;)V	<init>	<init>
		p	1		seed
		p	3		noiseParameters
		p	4		scale
		p	5		states
	m	()Ldoj;	a	type
	m	(Lapo;Lgt;)Ldbq;	a	getState
		p	1		random
		p	2		pos
	m	(Ldom;)Ljava/util/List;	a	lambda$noiseProviderCodec$0
	m	(Ljava/util/List;D)Ldbq;	a	getRandomState
		p	1		states
		p	2		value
	m	(Ljava/util/List;Lgt;D)Ldbq;	a	getRandomState
		p	1		states
		p	2		pos
		p	3		scale
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P4;	b	noiseProviderCodec
		p	0		instance
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	c	lambda$static$1
	f	Lcom/mojang/serialization/Codec;	g	CODEC
	f	Ljava/util/List;	h	states
c	don	net/minecraft/world/level/levelgen/feature/stateproviders/NoiseThresholdProvider
	m	(JLdvo$a;FFFLdbq;Ljava/util/List;Ljava/util/List;)V	<init>	<init>
		p	1		seed
		p	3		noiseParameters
		p	4		scale
		p	5		threshold
		p	6		highChance
		p	7		defaultState
		p	8		lowStates
		p	9		highStates
	m	()Ldoj;	a	type
	m	(Lapo;Lgt;)Ldbq;	a	getState
		p	1		random
		p	2		pos
	m	(Ldon;)Ljava/util/List;	a	lambda$static$4
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$5
	m	(Ldon;)Ljava/util/List;	b	lambda$static$3
	m	(Ldon;)Ldbq;	c	lambda$static$2
	m	(Ldon;)Ljava/lang/Float;	d	lambda$static$1
	m	(Ldon;)Ljava/lang/Float;	e	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	F	g	threshold
	f	F	h	highChance
	f	Ldbq;	i	defaultState
	f	Ljava/util/List;	j	lowStates
	f	Ljava/util/List;	k	highStates
c	doo	net/minecraft/world/level/levelgen/feature/stateproviders/RandomizedIntStateProvider
	m	(Ldoi;Ldcr;Lbdd;)V	<init>	<init>
		p	1		source
		p	2		property
		p	3		values
	m	(Ldoi;Ljava/lang/String;Lbdd;)V	<init>	<init>
		p	1		source
		p	2		propertyName
		p	3		values
	m	()Ldoj;	a	type
	m	(Lapo;Lgt;)Ldbq;	a	getState
		p	1		random
		p	2		pos
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	(Ldbq;Ljava/lang/String;)Ldcr;	a	findProperty
		p	0		state
		p	1		propertyName
	m	(Ldcu;)Ldcr;	a	lambda$findProperty$6
		p	0		property
	m	(Ldoo;)Lbdd;	a	lambda$static$2
	m	(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;	a	lambda$findProperty$7
	m	(Ljava/lang/String;Ldcu;)Z	a	lambda$findProperty$4
		p	1		property
	m	(Ldcu;)Z	b	lambda$findProperty$5
		p	0		property
	m	(Ldoo;)Ljava/lang/String;	b	lambda$static$1
	m	(Ldoo;)Ldoi;	c	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Ldoi;	c	source
	f	Ljava/lang/String;	d	propertyName
	f	Ldcr;	e	property
	f	Lbdd;	f	values
c	dop	net/minecraft/world/level/levelgen/feature/stateproviders/RotatedBlockProvider
	m	(Lcpi;)V	<init>	<init>
		p	1		block
	m	()Ldoj;	a	type
	m	(Lapo;Lgt;)Ldbq;	a	getState
		p	1		random
		p	2		pos
	m	(Ldop;)Lcpi;	a	lambda$static$0
		p	0		provider
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lcpi;	c	block
c	doq	net/minecraft/world/level/levelgen/feature/stateproviders/RuleBasedBlockStateProvider
	m	()Ldoi;	a	fallback
	m	(Lcnb;Lapo;Lgt;)Ldbq;	a	getState
		p	1		world
		p	2		random
		p	3		pos
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	(Lcpi;)Ldoq;	a	simple
		p	0		block
	m	(Ldoi;)Ldoq;	a	simple
		p	0		stateProvider
	m	()Ljava/util/List;	b	rules
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldoi;	b	fallback
	f	Ljava/util/List;	c	rules
c	doq$a	net/minecraft/world/level/levelgen/feature/stateproviders/RuleBasedBlockStateProvider$Rule
	m	()Ldig;	a	ifTrue
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()Ldoi;	b	then
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldig;	b	ifTrue
	f	Ldoi;	c	then
c	dor	net/minecraft/world/level/levelgen/feature/stateproviders/SimpleStateProvider
	m	(Ldbq;)V	<init>	<init>
		p	1		state
	m	()Ldoj;	a	type
	m	(Lapo;Lgt;)Ldbq;	a	getState
		p	1		random
		p	2		pos
	m	(Ldor;)Ldbq;	a	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Ldbq;	c	state
c	dos	net/minecraft/world/level/levelgen/feature/stateproviders/WeightedStateProvider
	m	(Lbci$a;)V	<init>	<init>
		p	1		states
	m	(Lbci;)V	<init>	<init>
		p	1		states
	m	()Ldoj;	a	type
	m	(Lapo;Lgt;)Ldbq;	a	getState
		p	1		random
		p	2		pos
	m	(Lbci;)Lcom/mojang/serialization/DataResult;	a	create
		p	0		states
	m	(Ldos;)Lbci;	a	lambda$static$0
	m	()Ljava/lang/String;	b	lambda$create$1
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lbci;	c	weightedList
c	dot	net/minecraft/world/level/levelgen/feature/stateproviders/package-info
c	dou	net/minecraft/world/level/levelgen/feature/treedecorators/AlterGroundDecorator
	m	(Ldoi;)V	<init>	<init>
		p	1		provider
	m	()Ldpa;	a	type
	m	(ILgt;)Z	a	lambda$place$1
		p	1		pos
	m	(Ldou;)Ldoi;	a	lambda$static$0
		p	0		decorator
	m	(Ldoz$a;)V	a	place
		p	1		generator
	m	(Ldoz$a;Lgt;)V	a	placeCircle
		p	1		generator
		p	2		origin
	m	(Ldoz$a;Lgt;)V	b	placeBlockAt
		p	1		generator
		p	2		origin
	m	(Ldoz$a;Lgt;)V	c	lambda$place$2
		p	2		pos
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldoi;	b	provider
c	dov	net/minecraft/world/level/levelgen/feature/treedecorators/AttachedToLeavesDecorator
	m	(FIILdoi;ILjava/util/List;)V	<init>	<init>
		p	1		probability
		p	2		exclusionRadiusXZ
		p	3		exclusionRadiusY
		p	4		blockProvider
		p	5		requiredEmptyBlocks
		p	6		directions
	m	()Ldpa;	a	type
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$6
	m	(Ldov;)Ljava/util/List;	a	lambda$static$5
		p	0		treeDecorator
	m	(Ldoz$a;)V	a	place
		p	1		generator
	m	(Ldoz$a;Lgt;Lgz;)Z	a	hasRequiredEmptyBlocks
		p	1		generator
		p	2		pos
		p	3		direction
	m	(Ldov;)Ljava/lang/Integer;	b	lambda$static$4
		p	0		treeDecorator
	m	(Ldov;)Ldoi;	c	lambda$static$3
		p	0		treeDecorator
	m	(Ldov;)Ljava/lang/Integer;	d	lambda$static$2
		p	0		treeDecorator
	m	(Ldov;)Ljava/lang/Integer;	e	lambda$static$1
		p	0		treeDecorator
	m	(Ldov;)Ljava/lang/Float;	f	lambda$static$0
		p	0		treeDecorator
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	F	b	probability
	f	I	c	exclusionRadiusXZ
	f	I	d	exclusionRadiusY
	f	Ldoi;	e	blockProvider
	f	I	f	requiredEmptyBlocks
	f	Ljava/util/List;	g	directions
c	dow	net/minecraft/world/level/levelgen/feature/treedecorators/BeehiveDecorator
	m	(F)V	<init>	<init>
		p	1		probability
	m	()Ldpa;	a	type
	m	(I)[Lgz;	a	lambda$static$2
	m	(ILgt;)Z	a	lambda$place$3
		p	1		pos
	m	(Lapo;Lczb;)V	a	lambda$place$6
		p	1		blockEntity
	m	(Ldow;)Ljava/lang/Float;	a	lambda$static$0
		p	0		decorator
	m	(Ldoz$a;)V	a	place
		p	1		generator
	m	(Ldoz$a;Lgt;)Z	a	lambda$place$5
		p	1		pos
	m	(Lgt;)Ljava/util/stream/Stream;	a	lambda$place$4
		p	0		pos
	m	(Lgz;)Z	a	lambda$static$1
		p	0		direction
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lgz;	b	WORLDGEN_FACING
	f	[Lgz;	c	SPAWN_DIRECTIONS
	f	F	d	probability
c	dox	net/minecraft/world/level/levelgen/feature/treedecorators/CocoaDecorator
	m	(F)V	<init>	<init>
		p	1		probability
	m	()Ldpa;	a	type
	m	(ILgt;)Z	a	lambda$place$1
		p	1		pos
	m	(Lapo;Ldoz$a;Lgt;)V	a	lambda$place$2
		p	2		pos
	m	(Ldox;)Ljava/lang/Float;	a	lambda$static$0
		p	0		decorator
	m	(Ldoz$a;)V	a	place
		p	1		generator
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	F	b	probability
c	doy	net/minecraft/world/level/levelgen/feature/treedecorators/LeaveVineDecorator
	m	(F)V	<init>	<init>
		p	1		probability
	m	()Ldpa;	a	type
	m	(Lapo;Ldoz$a;Lgt;)V	a	lambda$place$1
		p	3		pos
	m	(Ldoy;)Ljava/lang/Float;	a	lambda$static$0
		p	0		treeDecorator
	m	(Ldoz$a;)V	a	place
		p	1		generator
	m	(Lgt;Ldci;Ldoz$a;)V	a	addHangingVine
		p	0		pos
		p	1		faceProperty
		p	2		generator
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	F	b	probability
c	doz	net/minecraft/world/level/levelgen/feature/treedecorators/TreeDecorator
	m	()Ldpa;	a	type
	m	(Ldoz$a;)V	a	place
		p	1		generator
	f	Lcom/mojang/serialization/Codec;	h	CODEC
c	doz$a	net/minecraft/world/level/levelgen/feature/treedecorators/TreeDecorator$Context
	m	(Lcmo;Ljava/util/function/BiConsumer;Lapo;Ljava/util/Set;Ljava/util/Set;Ljava/util/Set;)V	<init>	<init>
		p	1		world
		p	2		replacer
		p	3		random
		p	4		logPositions
		p	5		leavesPositions
		p	6		rootPositions
	m	()Lcmo;	a	level
	m	(Lgt;)Z	a	isAir
		p	1		pos
	m	(Lgt;Ldbq;)V	a	setBlock
		p	1		pos
		p	2		state
	m	(Lgt;Ldci;)V	a	placeVine
		p	1		pos
		p	2		faceProperty
	m	()Lapo;	b	random
	m	()Lit/unimi/dsi/fastutil/objects/ObjectArrayList;	c	logs
	m	()Lit/unimi/dsi/fastutil/objects/ObjectArrayList;	d	leaves
	m	()Lit/unimi/dsi/fastutil/objects/ObjectArrayList;	e	roots
	f	Lcmo;	a	level
	f	Ljava/util/function/BiConsumer;	b	decorationSetter
	f	Lapo;	c	random
	f	Lit/unimi/dsi/fastutil/objects/ObjectArrayList;	d	logs
	f	Lit/unimi/dsi/fastutil/objects/ObjectArrayList;	e	leaves
	f	Lit/unimi/dsi/fastutil/objects/ObjectArrayList;	f	roots
c	dpa	net/minecraft/world/level/levelgen/feature/treedecorators/TreeDecoratorType
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		codec
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Ldpa;	a	register
		p	0		id
		p	1		codec
	f	Ldpa;	a	TRUNK_VINE
	f	Ldpa;	b	LEAVE_VINE
	f	Ldpa;	c	COCOA
	f	Ldpa;	d	BEEHIVE
	f	Ldpa;	e	ALTER_GROUND
	f	Ldpa;	f	ATTACHED_TO_LEAVES
	f	Lcom/mojang/serialization/Codec;	g	codec
c	dpb	net/minecraft/world/level/levelgen/feature/treedecorators/TrunkVineDecorator
	m	()Ldpa;	a	type
	m	(Lapo;Ldoz$a;Lgt;)V	a	lambda$place$1
		p	2		pos
	m	(Ldoz$a;)V	a	place
		p	1		generator
	m	()Ldpb;	b	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldpb;	b	INSTANCE
c	dpc	net/minecraft/world/level/levelgen/feature/treedecorators/package-info
c	dpd	net/minecraft/world/level/levelgen/feature/trunkplacers/BendingTrunkPlacer
	m	(IIIILbdd;)V	<init>	<init>
		p	1		baseHeight
		p	2		firstRandomHeight
		p	3		secondRandomHeight
		p	4		minHeightForLeaves
		p	5		bendLength
	m	()Ldpm;	a	type
	m	(Lcmo;Ljava/util/function/BiConsumer;Lapo;ILgt;Ldnd;)Ljava/util/List;	a	placeTrunk
		p	1		world
		p	2		replacer
		p	3		random
		p	4		height
		p	5		startPos
		p	6		config
	m	(Ldpd;)Lbdd;	a	lambda$static$1
		p	0		placer
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$2
		p	0		instance
	m	(Ldpd;)Ljava/lang/Integer;	b	lambda$static$0
		p	0		placer
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	minHeightForLeaves
	f	Lbdd;	h	bendLength
c	dpe	net/minecraft/world/level/levelgen/feature/trunkplacers/CherryTrunkPlacer
	m	(IIILbdd;Lbdd;Lbdj;Lbdd;)V	<init>	<init>
		p	1		baseHeight
		p	2		firstRandomHeight
		p	3		secondRandomHeight
		p	4		branchCount
		p	5		branchHorizontalLength
		p	6		branchStartOffsetFromTop
		p	7		branchEndOffsetFromTop
	m	()Ldpm;	a	type
	m	(Lbdj;)Lcom/mojang/serialization/DataResult;	a	lambda$static$1
		p	0		branchStartOffsetFromTop
	m	(Lcmo;Ljava/util/function/BiConsumer;Lapo;ILgt;Ldnd;)Ljava/util/List;	a	placeTrunk
		p	1		world
		p	2		replacer
		p	3		random
		p	4		height
		p	5		startPos
		p	6		config
	m	(Lcmo;Ljava/util/function/BiConsumer;Lapo;ILgt;Ldnd;Ljava/util/function/Function;Lgz;IZLgt$a;)Ldnt$a;	a	generateBranch
		p	1		world
		p	2		replacer
		p	3		random
		p	4		height
		p	5		startPos
		p	6		config
		p	7		withAxisFunction
		p	8		direction
		p	9		branchStartOffset
		p	10		branchBelowHeight
		p	11		mutablePos
	m	(Ldpe;)Lbdd;	a	lambda$static$5
		p	0		trunkPlacer
	m	(Lgz;Ldbq;)Ldbq;	a	lambda$placeTrunk$7
		p	1		state
	m	()Ljava/lang/String;	b	lambda$static$0
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$6
		p	0		instance
	m	(Ldpe;)Lbdj;	b	lambda$static$4
		p	0		trunkPlacer
	m	(Ldpe;)Lbdd;	c	lambda$static$3
		p	0		trunkPlacer
	m	(Ldpe;)Lbdd;	d	lambda$static$2
		p	0		trunkPlacer
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcom/mojang/serialization/Codec;	b	BRANCH_START_CODEC
	f	Lbdd;	h	branchCount
	f	Lbdd;	i	branchHorizontalLength
	f	Lbdj;	j	branchStartOffsetFromTop
	f	Lbdj;	k	secondBranchStartOffsetFromTop
	f	Lbdd;	l	branchEndOffsetFromTop
c	dpf	net/minecraft/world/level/levelgen/feature/trunkplacers/DarkOakTrunkPlacer
	m	(III)V	<init>	<init>
		p	1		baseHeight
		p	2		firstRandomHeight
		p	3		secondRandomHeight
	m	()Ldpm;	a	type
	m	(Lcmo;Ljava/util/function/BiConsumer;Lapo;ILgt;Ldnd;)Ljava/util/List;	a	placeTrunk
		p	1		world
		p	2		replacer
		p	3		random
		p	4		height
		p	5		startPos
		p	6		config
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$0
		p	0		instance
	f	Lcom/mojang/serialization/Codec;	a	CODEC
c	dpg	net/minecraft/world/level/levelgen/feature/trunkplacers/FancyTrunkPlacer
	m	(III)V	<init>	<init>
		p	1		baseHeight
		p	2		firstRandomHeight
		p	3		secondRandomHeight
	m	()Ldpm;	a	type
	m	(II)Z	a	trimBranches
		p	1		treeHeight
		p	2		height
	m	(Lcmo;Ljava/util/function/BiConsumer;Lapo;ILgt;Ldnd;)Ljava/util/List;	a	placeTrunk
		p	1		world
		p	2		replacer
		p	3		random
		p	4		height
		p	5		startPos
		p	6		config
	m	(Lcmo;Ljava/util/function/BiConsumer;Lapo;ILgt;Ljava/util/List;Ldnd;)V	a	makeBranches
		p	1		world
		p	2		replacer
		p	4		treeHeight
		p	5		startPos
		p	6		branchPositions
		p	7		config
	m	(Lcmo;Ljava/util/function/BiConsumer;Lapo;Lgt;Lgt;ZLdnd;)Z	a	makeLimb
		p	4		startPos
		p	5		branchPos
		p	6		make
		p	7		config
	m	(Lgt;)I	a	getSteps
		p	1		offset
	m	(Lgt;Lgt;)Lgz$a;	a	getLogAxis
		p	1		branchStart
		p	2		branchEnd
	m	(Lgt;Lgt;Ldbq;)Ldbq;	a	lambda$makeLimb$1
		p	3		state
	m	(II)F	b	treeShape
		p	0		treeHeight
		p	1		height
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$0
		p	0		instance
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	D	b	TRUNK_HEIGHT_SCALE
	f	D	h	CLUSTER_DENSITY_MAGIC
	f	D	i	BRANCH_SLOPE
	f	D	j	BRANCH_LENGTH_MAGIC
c	dpg$a	net/minecraft/world/level/levelgen/feature/trunkplacers/FancyTrunkPlacer$FoliageCoords
	m	(Lgt;I)V	<init>	<init>
		p	1		pos
		p	2		width
	m	()I	a	getBranchBase
	f	Ldnt$a;	a	attachment
	f	I	b	branchBase
c	dph	net/minecraft/world/level/levelgen/feature/trunkplacers/ForkingTrunkPlacer
	m	(III)V	<init>	<init>
		p	1		baseHeight
		p	2		firstRandomHeight
		p	3		secondRandomHeight
	m	()Ldpm;	a	type
	m	(Lcmo;Ljava/util/function/BiConsumer;Lapo;ILgt;Ldnd;)Ljava/util/List;	a	placeTrunk
		p	1		world
		p	2		replacer
		p	3		random
		p	4		height
		p	5		startPos
		p	6		config
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$0
		p	0		instance
	f	Lcom/mojang/serialization/Codec;	a	CODEC
c	dpi	net/minecraft/world/level/levelgen/feature/trunkplacers/GiantTrunkPlacer
	m	(III)V	<init>	<init>
		p	1		baseHeight
		p	2		firstRandomHeight
		p	3		secondRandomHeight
	m	()Ldpm;	a	type
	m	(Lcmo;Ljava/util/function/BiConsumer;Lapo;ILgt;Ldnd;)Ljava/util/List;	a	placeTrunk
		p	1		world
		p	2		replacer
		p	3		random
		p	4		height
		p	5		startPos
		p	6		config
	m	(Lcmo;Ljava/util/function/BiConsumer;Lapo;Lgt$a;Ldnd;Lgt;III)V	a	placeLogIfFreeWithOffset
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$0
		p	0		instance
	f	Lcom/mojang/serialization/Codec;	a	CODEC
c	dpj	net/minecraft/world/level/levelgen/feature/trunkplacers/MegaJungleTrunkPlacer
	m	(III)V	<init>	<init>
		p	1		baseHeight
		p	2		firstRandomHeight
		p	3		secondRandomHeight
	m	()Ldpm;	a	type
	m	(Lcmo;Ljava/util/function/BiConsumer;Lapo;ILgt;Ldnd;)Ljava/util/List;	a	placeTrunk
		p	1		world
		p	2		replacer
		p	3		random
		p	4		height
		p	5		startPos
		p	6		config
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$0
		p	0		instance
	f	Lcom/mojang/serialization/Codec;	b	CODEC
c	dpk	net/minecraft/world/level/levelgen/feature/trunkplacers/StraightTrunkPlacer
	m	(III)V	<init>	<init>
		p	1		baseHeight
		p	2		firstRandomHeight
		p	3		secondRandomHeight
	m	()Ldpm;	a	type
	m	(Lcmo;Ljava/util/function/BiConsumer;Lapo;ILgt;Ldnd;)Ljava/util/List;	a	placeTrunk
		p	1		world
		p	2		replacer
		p	3		random
		p	4		height
		p	5		startPos
		p	6		config
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$0
		p	0		instance
	f	Lcom/mojang/serialization/Codec;	a	CODEC
c	dpl	net/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacer
	m	(III)V	<init>	<init>
		p	1		baseHeight
		p	2		firstRandomHeight
		p	3		secondRandomHeight
	m	()Ldpm;	a	type
	m	(Lapo;)I	a	getTreeHeight
		p	1		random
	m	(Lcmo;Lgt;)Z	a	validTreePos
		p	1		world
		p	2		pos
	m	(Lcmo;Ljava/util/function/BiConsumer;Lapo;ILgt;Ldnd;)Ljava/util/List;	a	placeTrunk
		p	1		world
		p	2		replacer
		p	3		random
		p	4		height
		p	5		startPos
		p	6		config
	m	(Lcmo;Ljava/util/function/BiConsumer;Lapo;Lgt$a;Ldnd;)V	a	placeLogIfFree
		p	1		world
		p	2		replacer
		p	3		random
		p	4		pos
		p	5		config
	m	(Lcmo;Ljava/util/function/BiConsumer;Lapo;Lgt;Ldnd;)V	a	setDirtAt
		p	0		world
		p	1		replacer
		p	2		random
		p	3		pos
		p	4		config
	m	(Lcmo;Ljava/util/function/BiConsumer;Lapo;Lgt;Ldnd;Ljava/util/function/Function;)Z	a	placeLog
		p	1		world
		p	2		replacer
		p	3		random
		p	4		pos
		p	5		config
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P3;	a	trunkPlacerParts
		p	0		instance
	m	(Ldbq;)Z	a	lambda$isFree$4
		p	0		state
	m	(Ldpl;)Ljava/lang/Integer;	a	lambda$trunkPlacerParts$2
		p	0		placer
	m	(Lcmo;Lgt;)Z	b	isFree
		p	1		world
		p	2		pos
	m	(Lcmo;Ljava/util/function/BiConsumer;Lapo;Lgt;Ldnd;)Z	b	placeLog
		p	1		world
		p	2		replacer
		p	3		random
		p	4		pos
		p	5		config
	m	(Ldbq;)Z	b	lambda$isDirt$3
		p	0		state
	m	(Ldpl;)Ljava/lang/Integer;	b	lambda$trunkPlacerParts$1
		p	0		placer
	m	(Lcmo;Lgt;)Z	c	isDirt
		p	0		world
		p	1		pos
	m	(Ldpl;)Ljava/lang/Integer;	c	lambda$trunkPlacerParts$0
		p	0		placer
	f	I	a	MAX_BASE_HEIGHT
	f	I	b	MAX_RAND
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	I	d	MAX_HEIGHT
	f	I	e	baseHeight
	f	I	f	heightRandA
	f	I	g	heightRandB
c	dpm	net/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerType
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		codec
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Ldpm;	a	register
		p	0		id
		p	1		codec
	f	Ldpm;	a	STRAIGHT_TRUNK_PLACER
	f	Ldpm;	b	FORKING_TRUNK_PLACER
	f	Ldpm;	c	GIANT_TRUNK_PLACER
	f	Ldpm;	d	MEGA_JUNGLE_TRUNK_PLACER
	f	Ldpm;	e	DARK_OAK_TRUNK_PLACER
	f	Ldpm;	f	FANCY_TRUNK_PLACER
	f	Ldpm;	g	BENDING_TRUNK_PLACER
	f	Ldpm;	h	UPWARDS_BRANCHING_TRUNK_PLACER
	f	Ldpm;	i	CHERRY_TRUNK_PLACER
	f	Lcom/mojang/serialization/Codec;	j	codec
c	dpn	net/minecraft/world/level/levelgen/feature/trunkplacers/UpwardsBranchingTrunkPlacer
	m	(IIILbdd;FLbdd;Lhh;)V	<init>	<init>
		p	1		baseHeight
		p	2		firstRandomHeight
		p	3		secondRandomHeight
		p	4		extraBranchSteps
		p	5		placeBranchPerLogProbability
		p	6		extraBranchLength
		p	7		canGrowThrough
	m	()Ldpm;	a	type
	m	(Lcmo;Lgt;)Z	a	validTreePos
		p	1		world
		p	2		pos
	m	(Lcmo;Ljava/util/function/BiConsumer;Lapo;ILdnd;Ljava/util/List;Lgt$a;ILgz;II)V	a	placeBranch
		p	1		world
		p	2		replacer
		p	3		random
		p	4		height
		p	5		config
		p	6		nodes
		p	7		pos
		p	8		yOffset
		p	9		direction
		p	10		length
		p	11		steps
	m	(Lcmo;Ljava/util/function/BiConsumer;Lapo;ILgt;Ldnd;)Ljava/util/List;	a	placeTrunk
		p	1		world
		p	2		replacer
		p	3		random
		p	4		height
		p	5		startPos
		p	6		config
	m	(Ldbq;)Z	a	lambda$validTreePos$5
		p	1		state
	m	(Ldpn;)Lhh;	a	lambda$static$3
		p	0		trunkPlacer
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$4
	m	(Ldpn;)Lbdd;	b	lambda$static$2
		p	0		trunkPlacer
	m	(Ldpn;)Ljava/lang/Float;	c	lambda$static$1
		p	0		trunkPlacer
	m	(Ldpn;)Lbdd;	d	lambda$static$0
		p	0		trunkPlacer
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lbdd;	b	extraBranchSteps
	f	F	h	placeBranchPerLogProbability
	f	Lbdd;	i	extraBranchLength
	f	Lhh;	j	canGrowThrough
c	dpo	net/minecraft/world/level/levelgen/feature/trunkplacers/package-info
c	dpp	net/minecraft/world/level/levelgen/flat/FlatLayerInfo
	m	(ILcpi;)V	<init>	<init>
		p	1		thickness
		p	2		block
	m	()I	a	getHeight
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Ldpp;)Lcpi;	a	lambda$static$0
		p	0		layer
	m	()Ldbq;	b	getBlockState
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcpi;	b	block
	f	I	c	height
c	dpq	net/minecraft/world/level/levelgen/flat/FlatLevelGeneratorPreset
	m	()Lhd;	a	displayItem
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Ldpq;)Ldps;	a	lambda$static$1
		p	0		preset
	m	()Ldps;	b	settings
	m	(Ldpq;)Lhd;	b	lambda$static$0
		p	0		preset
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lhd;	c	displayItem
	f	Ldps;	d	settings
c	dpr	net/minecraft/world/level/levelgen/flat/FlatLevelGeneratorPresets
	m	(Ljava/lang/String;)Ladc;	a	register
		p	0		id
	m	(Loa;)V	a	bootstrap
		p	0		presetRegisterable
	f	Ladc;	a	CLASSIC_FLAT
	f	Ladc;	b	TUNNELERS_DREAM
	f	Ladc;	c	WATER_WORLD
	f	Ladc;	d	OVERWORLD
	f	Ladc;	e	SNOWY_KINGDOM
	f	Ladc;	f	BOTTOMLESS_PIT
	f	Ladc;	g	DESERT
	f	Ladc;	h	REDSTONE_READY
	f	Ladc;	i	THE_VOID
c	dpr$a	net/minecraft/world/level/levelgen/flat/FlatLevelGeneratorPresets$Bootstrap
	m	(Loa;)V	<init>	<init>
		p	1		presetRegisterable
	m	()V	a	run
	m	(Ladc;Lcmh;Ladc;Ljava/util/Set;ZZ[Ldpp;)V	a	register
		p	1		registryKey
		p	2		icon
		p	3		biome
		p	4		structureSetKeys
		p	5		hasFeatures
		p	6		hasLakes
		p	7		layers
	f	Loa;	a	context
c	dps	net/minecraft/world/level/levelgen/flat/FlatLevelGeneratorSettings
	m	(Ljava/util/Optional;Lhd;Ljava/util/List;)V	<init>	<init>
		p	1		structureOverrides
		p	2		biome
		p	3		features
	m	(Ljava/util/Optional;Ljava/util/List;ZZLjava/util/Optional;Lhd$c;Lhd;Lhd;)V	<init>	<init>
		p	1		structureOverrides
		p	2		layers
		p	3		lakes
		p	4		features
		p	5		biome
		p	6		fallback
		p	7		undergroundLavaLakeFeature
		p	8		surfaceLavaLakeFeature
	m	()V	a	setDecoration
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
		p	0		instance
	m	(Ldbq;)Z	a	lambda$updateLayers$6
		p	0		state
	m	(Ldps;)Lcom/mojang/serialization/DataResult;	a	validateHeight
		p	0		config
	m	(Lhd;)Lcng;	a	adjustGenerationSettings
		p	1		biomeEntry
	m	(Lhe;)Lhd;	a	getDefaultBiome
		p	0		biomeLookup
	m	(Lhe;Lhe;Lhe;)Ldps;	a	getDefault
		p	0		biomeLookup
		p	1		structureSetLookup
		p	2		featureLookup
	m	(Ljava/util/List;Ljava/util/Optional;Lhd;)Ldps;	a	withBiomeAndLayers
		p	1		layers
		p	2		structureOverrides
		p	3		biome
	m	(Ljava/util/Optional;Lhd;)Lhd;	a	getBiome
		p	0		biome
		p	1		fallback
	m	()V	b	setAddLakes
	m	(Ldps;)Ljava/util/Optional;	b	lambda$static$3
		p	0		config
	m	(Lhe;)Ljava/util/List;	b	createLakesList
		p	0		featureLookup
	m	()Ljava/util/Optional;	c	structureOverrides
	m	(Ldps;)Ljava/lang/Boolean;	c	lambda$static$2
		p	0		config
	m	()Lhd;	d	getBiome
	m	(Ldps;)Ljava/lang/Boolean;	d	lambda$static$1
		p	0		config
	m	()Ljava/util/List;	e	getLayersInfo
	m	(Ldps;)Ljava/util/Optional;	e	lambda$static$0
		p	0		config
	m	()Ljava/util/List;	f	getLayers
	m	()V	g	updateLayers
	m	()Ljava/lang/String;	h	lambda$validateHeight$5
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ljava/util/Optional;	c	structureOverrides
	f	Ljava/util/List;	d	layersInfo
	f	Lhd;	e	biome
	f	Ljava/util/List;	f	layers
	f	Z	g	voidGen
	f	Z	h	decoration
	f	Z	i	addLakes
	f	Ljava/util/List;	j	lakes
c	dpt	net/minecraft/world/level/levelgen/flat/package-info
c	dpu	net/minecraft/world/level/levelgen/heightproviders/BiasedToBottomHeight
	m	(Ldht;Ldht;I)V	<init>	<init>
		p	1		minOffset
		p	2		maxOffset
		p	3		inner
	m	()Ldpx;	a	getType
	m	(Lapo;Ldhw;)I	a	sample
		p	1		random
		p	2		context
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	(Ldht;Ldht;I)Ldpu;	a	of
		p	0		minOffset
		p	1		maxOffset
		p	2		inner
	m	(Ldpu;)Ljava/lang/Integer;	a	lambda$static$2
		p	0		provider
	m	(Ldpu;)Ldht;	b	lambda$static$1
		p	0		provider
	m	(Ldpu;)Ldht;	c	lambda$static$0
		p	0		provider
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ldht;	d	minInclusive
	f	Ldht;	e	maxInclusive
	f	I	f	inner
c	dpv	net/minecraft/world/level/levelgen/heightproviders/ConstantHeight
	m	(Ldht;)V	<init>	<init>
		p	1		offset
	m	()Ldpx;	a	getType
	m	(Lapo;Ldhw;)I	a	sample
		p	1		random
		p	2		context
	m	(Lcom/mojang/datafixers/util/Either;)Ldpv;	a	lambda$static$3
		p	0		either
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Ldht;)Ldpv;	a	of
		p	0		offset
	m	(Ldpv;)Lcom/mojang/datafixers/util/Either;	a	lambda$static$4
		p	0		provider
	m	()Ldht;	b	getValue
	m	(Ldpv;)Ldpv;	b	lambda$static$2
		p	0		provider
	m	(Ldpv;)Ldht;	c	lambda$static$0
		p	0		provider
	f	Ldpv;	a	ZERO
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Ldht;	d	value
c	dpw	net/minecraft/world/level/levelgen/heightproviders/HeightProvider
	m	()Ldpx;	a	getType
	m	(Lapo;Ldhw;)I	a	sample
		p	1		random
		p	2		context
	m	(Lcom/mojang/datafixers/util/Either;)Ldpw;	a	lambda$static$1
		p	0		either
	m	(Ldpw;)Lcom/mojang/datafixers/util/Either;	a	lambda$static$2
		p	0		provider
	m	(Ldpw;)Ldpw;	b	lambda$static$0
		p	0		provider
	f	Lcom/mojang/serialization/Codec;	a	CONSTANT_OR_DISPATCH_CODEC
	f	Lcom/mojang/serialization/Codec;	c	CODEC
c	dpx	net/minecraft/world/level/levelgen/heightproviders/HeightProviderType
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	lambda$register$0
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Ldpx;	a	register
		p	0		id
		p	1		codec
	f	Ldpx;	a	CONSTANT
	f	Ldpx;	b	UNIFORM
	f	Ldpx;	c	BIASED_TO_BOTTOM
	f	Ldpx;	d	VERY_BIASED_TO_BOTTOM
	f	Ldpx;	e	TRAPEZOID
	f	Ldpx;	f	WEIGHTED_LIST
c	dpy	net/minecraft/world/level/levelgen/heightproviders/TrapezoidHeight
	m	(Ldht;Ldht;I)V	<init>	<init>
		p	1		minOffset
		p	2		maxOffset
		p	3		plateau
	m	()Ldpx;	a	getType
	m	(Lapo;Ldhw;)I	a	sample
		p	1		random
		p	2		context
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	(Ldht;Ldht;)Ldpy;	a	of
		p	0		minOffset
		p	1		maxOffset
	m	(Ldht;Ldht;I)Ldpy;	a	of
		p	0		minOffset
		p	1		maxOffset
		p	2		plateau
	m	(Ldpy;)Ljava/lang/Integer;	a	lambda$static$2
	m	(Ldpy;)Ldht;	b	lambda$static$1
		p	0		provider
	m	(Ldpy;)Ldht;	c	lambda$static$0
		p	0		provider
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ldht;	d	minInclusive
	f	Ldht;	e	maxInclusive
	f	I	f	plateau
c	dpz	net/minecraft/world/level/levelgen/heightproviders/UniformHeight
	m	(Ldht;Ldht;)V	<init>	<init>
		p	1		minOffset
		p	2		maxOffset
	m	()Ldpx;	a	getType
	m	(Lapo;Ldhw;)I	a	sample
		p	1		random
		p	2		context
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Ldht;Ldht;)Ldpz;	a	of
		p	0		minOffset
		p	1		maxOffset
	m	(Ldpz;)Ldht;	a	lambda$static$1
		p	0		provider
	m	(Ldpz;)Ldht;	b	lambda$static$0
		p	0		provider
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ldht;	d	minInclusive
	f	Ldht;	e	maxInclusive
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	f	warnedFor
c	dqa	net/minecraft/world/level/levelgen/heightproviders/VeryBiasedToBottomHeight
	m	(Ldht;Ldht;I)V	<init>	<init>
		p	1		minOffset
		p	2		maxOffset
		p	3		inner
	m	()Ldpx;	a	getType
	m	(Lapo;Ldhw;)I	a	sample
		p	1		random
		p	2		context
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	(Ldht;Ldht;I)Ldqa;	a	of
		p	0		minOffset
		p	1		maxOffset
		p	2		inner
	m	(Ldqa;)Ljava/lang/Integer;	a	lambda$static$2
		p	0		provider
	m	(Ldqa;)Ldht;	b	lambda$static$1
		p	0		provider
	m	(Ldqa;)Ldht;	c	lambda$static$0
		p	0		provider
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ldht;	d	minInclusive
	f	Ldht;	e	maxInclusive
	f	I	f	inner
c	dqb	net/minecraft/world/level/levelgen/heightproviders/WeightedListHeight
	m	(Lbci;)V	<init>	<init>
		p	1		weightedList
	m	()Ldpx;	a	getType
	m	(Lapo;Ldhw;)I	a	sample
		p	1		random
		p	2		context
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Ldqb;)Lbci;	a	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lbci;	b	distribution
c	dqc	net/minecraft/world/level/levelgen/heightproviders/package-info
c	dqd	net/minecraft/world/level/levelgen/material/MaterialRuleList
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		samplers
	m	()Ljava/util/List;	a	materialRuleList
	m	(Ldgs$b;)Ldbq;	calculate	calculate
		p	1		pos
	f	Ljava/util/List;	a	materialRuleList
c	dqe	net/minecraft/world/level/levelgen/material/WorldGenMaterialRule
	m	(Ldhd;III)Ldbq;	a	apply
		p	1		sampler
		p	2		x
		p	3		y
		p	4		z
c	dqf	net/minecraft/world/level/levelgen/material/package-info
c	dqg	net/minecraft/world/level/levelgen/package-info
c	dqh	net/minecraft/world/level/levelgen/placement/BiomeFilter
	m	()Ldqh;	a	biome
	m	(Ldqu;Lapo;Lgt;)Z	a	shouldPlace
		p	1		context
		p	2		random
		p	3		pos
	m	()Ldqx;	b	type
	m	()Ljava/lang/IllegalStateException;	c	lambda$shouldPlace$1
	m	()Ldqh;	d	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldqh;	c	INSTANCE
c	dqi	net/minecraft/world/level/levelgen/placement/BlockPredicateFilter
	m	(Ldig;)V	<init>	<init>
		p	1		predicate
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Ldig;)Ldqi;	a	forPredicate
		p	0		predicate
	m	(Ldqi;)Ldig;	a	lambda$static$0
	m	(Ldqu;Lapo;Lgt;)Z	a	shouldPlace
		p	1		context
		p	2		random
		p	3		pos
	m	()Ldqx;	b	type
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldig;	c	predicate
c	dqj	net/minecraft/world/level/levelgen/placement/CarvingMaskPlacement
	m	(Ldgv$a;)V	<init>	<init>
		p	1		step
	m	(Ldgv$a;)Ldqj;	a	forStep
		p	0		step
	m	(Ldqj;)Ldgv$a;	a	lambda$static$0
		p	0		config
	m	(Ldqu;Lapo;Lgt;)Ljava/util/stream/Stream;	a_	getPositions
		p	1		context
		p	2		random
		p	3		pos
	m	()Ldqx;	b	type
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldgv$a;	c	step
c	dqk	net/minecraft/world/level/levelgen/placement/CaveSurface
	m	(Ljava/lang/String;ILgz;ILjava/lang/String;)V	<init>	<init>
		p	3		direction
		p	4		offset
		p	5		name
	m	()Lgz;	a	getDirection
	m	()I	b	getY
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Ldqk;	d	$values
	f	Ldqk;	a	CEILING
	f	Ldqk;	b	FLOOR
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Lgz;	d	direction
	f	I	e	y
	f	Ljava/lang/String;	f	id
	f	[Ldqk;	g	$VALUES
c	dql	net/minecraft/world/level/levelgen/placement/CountOnEveryLayerPlacement
	m	(Lbdd;)V	<init>	<init>
		p	1		count
	m	(I)Ldql;	a	of
		p	0		count
	m	(Lbdd;)Ldql;	a	of
		p	0		count
	m	(Ldbq;)Z	a	isEmpty
		p	0		state
	m	(Ldql;)Lbdd;	a	lambda$static$0
	m	(Ldqu;IIII)I	a	findOnGroundYPosition
		p	0		context
		p	1		x
		p	2		y
		p	3		z
		p	4		targetY
	m	(Ldqu;Lapo;Lgt;)Ljava/util/stream/Stream;	a_	getPositions
		p	1		context
		p	2		random
		p	3		pos
	m	()Ldqx;	b	type
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lbdd;	c	count
c	dqm	net/minecraft/world/level/levelgen/placement/CountPlacement
	m	(Lbdd;)V	<init>	<init>
		p	1		count
	m	(I)Ldqm;	a	of
		p	0		count
	m	(Lapo;Lgt;)I	a	count
		p	1		random
		p	2		pos
	m	(Lbdd;)Ldqm;	a	of
		p	0		count
	m	(Ldqm;)Lbdd;	a	lambda$static$0
	m	()Ldqx;	b	type
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lbdd;	c	count
c	dqn	net/minecraft/world/level/levelgen/placement/EnvironmentScanPlacement
	m	(Lgz;Ldig;Ldig;I)V	<init>	<init>
		p	1		direction
		p	2		targetPredicate
		p	3		allowedSearchPredicate
		p	4		maxSteps
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
	m	(Ldqn;)Ljava/lang/Integer;	a	lambda$static$3
	m	(Lgz;Ldig;I)Ldqn;	a	scanningFor
		p	0		direction
		p	1		targetPredicate
		p	2		maxSteps
	m	(Lgz;Ldig;Ldig;I)Ldqn;	a	scanningFor
		p	0		direction
		p	1		targetPredicate
		p	2		allowedSearchPredicate
		p	3		maxSteps
	m	(Ldqu;Lapo;Lgt;)Ljava/util/stream/Stream;	a_	getPositions
		p	1		context
		p	2		random
		p	3		pos
	m	()Ldqx;	b	type
	m	(Ldqn;)Ldig;	b	lambda$static$2
	m	(Ldqn;)Ldig;	c	lambda$static$1
	m	(Ldqn;)Lgz;	d	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lgz;	c	directionOfSearch
	f	Ldig;	d	targetCondition
	f	Ldig;	e	allowedSearchCondition
	f	I	f	maxSteps
c	dqo	net/minecraft/world/level/levelgen/placement/HeightRangePlacement
	m	(Ldpw;)V	<init>	<init>
		p	1		height
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Ldht;Ldht;)Ldqo;	a	uniform
		p	0		minOffset
		p	1		maxOffset
	m	(Ldpw;)Ldqo;	a	of
		p	0		height
	m	(Ldqo;)Ldpw;	a	lambda$static$0
	m	(Ldqu;Lapo;Lgt;)Ljava/util/stream/Stream;	a_	getPositions
		p	1		context
		p	2		random
		p	3		pos
	m	()Ldqx;	b	type
	m	(Ldht;Ldht;)Ldqo;	b	triangle
		p	0		minOffset
		p	1		maxOffset
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldpw;	c	height
c	dqp	net/minecraft/world/level/levelgen/placement/HeightmapPlacement
	m	(Ldgz$a;)V	<init>	<init>
		p	1		heightmap
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Ldgz$a;)Ldqp;	a	onHeightmap
		p	0		heightmap
	m	(Ldqp;)Ldgz$a;	a	lambda$static$0
	m	(Ldqu;Lapo;Lgt;)Ljava/util/stream/Stream;	a_	getPositions
		p	1		context
		p	2		random
		p	3		pos
	m	()Ldqx;	b	type
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldgz$a;	c	heightmap
c	dqq	net/minecraft/world/level/levelgen/placement/InSquarePlacement
	m	()Ldqq;	a	spread
	m	(Ldqu;Lapo;Lgt;)Ljava/util/stream/Stream;	a_	getPositions
		p	1		context
		p	2		random
		p	3		pos
	m	()Ldqx;	b	type
	m	()Ldqq;	c	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldqq;	c	INSTANCE
c	dqr	net/minecraft/world/level/levelgen/placement/NoiseBasedCountPlacement
	m	(IDD)V	<init>	<init>
		p	1		noiseToCountRatio
		p	2		noiseFactor
		p	4		noiseOffset
	m	(IDD)Ldqr;	a	of
		p	0		noiseToCountRatio
		p	1		noiseFactor
		p	3		noiseOffset
	m	(Lapo;Lgt;)I	a	count
		p	1		random
		p	2		pos
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	(Ldqr;)Ljava/lang/Double;	a	lambda$static$2
	m	()Ldqx;	b	type
	m	(Ldqr;)Ljava/lang/Double;	b	lambda$static$1
	m	(Ldqr;)Ljava/lang/Integer;	c	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	c	noiseToCountRatio
	f	D	d	noiseFactor
	f	D	e	noiseOffset
c	dqs	net/minecraft/world/level/levelgen/placement/NoiseThresholdCountPlacement
	m	(DII)V	<init>	<init>
		p	1		noiseLevel
		p	3		belowNoise
		p	4		aboveNoise
	m	(DII)Ldqs;	a	of
		p	0		noiseLevel
		p	2		belowNoise
		p	3		aboveNoise
	m	(Lapo;Lgt;)I	a	count
		p	1		random
		p	2		pos
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	(Ldqs;)Ljava/lang/Integer;	a	lambda$static$2
	m	()Ldqx;	b	type
	m	(Ldqs;)Ljava/lang/Integer;	b	lambda$static$1
	m	(Ldqs;)Ljava/lang/Double;	c	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	D	c	noiseLevel
	f	I	d	belowNoise
	f	I	e	aboveNoise
c	dqt	net/minecraft/world/level/levelgen/placement/PlacedFeature
	m	(Lhd;Ljava/util/List;)V	<init>	<init>
		p	2		placementModifiers
	m	()Ljava/util/stream/Stream;	a	getFeatures
	m	(Lcnb;Lddo;Lapo;Lgt;)Z	a	place
		p	1		world
		p	2		generator
		p	3		random
		p	4		pos
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Ldjq;Ldqu;Lapo;Lorg/apache/commons/lang3/mutable/MutableBoolean;Lgt;)V	a	lambda$placeWithContext$4
	m	(Ldqt;)Ljava/util/List;	a	lambda$static$1
	m	(Ldqu;Lapo;Lgt;)Z	a	placeWithContext
		p	1		context
		p	2		random
		p	3		pos
	m	(Ldqw;Ldqu;Lapo;Lgt;)Ljava/util/stream/Stream;	a	lambda$placeWithContext$3
		p	3		pos
	m	()Lhd;	b	feature
	m	(Lcnb;Lddo;Lapo;Lgt;)Z	b	placeWithBiomeCheck
		p	1		world
		p	2		generator
		p	3		random
		p	4		pos
	m	(Ldqt;)Lhd;	b	lambda$static$0
	m	()Ljava/util/List;	c	placement
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lcom/mojang/serialization/Codec;	c	LIST_CODEC
	f	Lcom/mojang/serialization/Codec;	d	LIST_OF_LISTS_CODEC
	f	Lhd;	e	feature
	f	Ljava/util/List;	f	placement
c	dqu	net/minecraft/world/level/levelgen/placement/PlacementContext
	m	(Lcnb;Lddo;Ljava/util/Optional;)V	<init>	<init>
		p	1		world
		p	2		generator
		p	3		placedFeature
	m	(Lclp;Ldgv$a;)Lddm;	a	getCarvingMask
		p	1		chunkPos
		p	2		carver
	m	(Ldgz$a;II)I	a	getHeight
		p	1		heightmap
		p	2		x
		p	3		z
	m	(Lgt;)Ldbq;	a	getBlockState
		p	1		pos
	m	()I	c	getMinBuildHeight
	m	()Lcnb;	d	getLevel
	m	()Ljava/util/Optional;	e	topFeature
	m	()Lddo;	f	generator
	f	Lcnb;	a	level
	f	Lddo;	b	generator
	f	Ljava/util/Optional;	c	topFeature
c	dqv	net/minecraft/world/level/levelgen/placement/PlacementFilter
	m	(Ldqu;Lapo;Lgt;)Z	a	shouldPlace
		p	1		context
		p	2		random
		p	3		pos
	m	(Ldqu;Lapo;Lgt;)Ljava/util/stream/Stream;	a_	getPositions
		p	1		context
		p	2		random
		p	3		pos
c	dqw	net/minecraft/world/level/levelgen/placement/PlacementModifier
	m	(Ldqu;Lapo;Lgt;)Ljava/util/stream/Stream;	a_	getPositions
		p	1		context
		p	2		random
		p	3		pos
	m	()Ldqx;	b	type
	f	Lcom/mojang/serialization/Codec;	b	CODEC
c	dqx	net/minecraft/world/level/levelgen/placement/PlacementModifierType
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	lambda$register$0
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Ldqx;	a	register
		p	0		id
		p	1		codec
	f	Ldqx;	a	BLOCK_PREDICATE_FILTER
	f	Ldqx;	b	RARITY_FILTER
	f	Ldqx;	c	SURFACE_RELATIVE_THRESHOLD_FILTER
	f	Ldqx;	d	SURFACE_WATER_DEPTH_FILTER
	f	Ldqx;	e	BIOME_FILTER
	f	Ldqx;	f	COUNT
	f	Ldqx;	g	NOISE_BASED_COUNT
	f	Ldqx;	h	NOISE_THRESHOLD_COUNT
	f	Ldqx;	i	COUNT_ON_EVERY_LAYER
	f	Ldqx;	j	ENVIRONMENT_SCAN
	f	Ldqx;	k	HEIGHTMAP
	f	Ldqx;	l	HEIGHT_RANGE
	f	Ldqx;	m	IN_SQUARE
	f	Ldqx;	n	RANDOM_OFFSET
	f	Ldqx;	o	CARVING_MASK_PLACEMENT
c	dqy	net/minecraft/world/level/levelgen/placement/RandomOffsetPlacement
	m	(Lbdd;Lbdd;)V	<init>	<init>
		p	1		xzSpread
		p	2		ySpread
	m	(Lbdd;)Ldqy;	a	vertical
		p	0		spreadY
	m	(Lbdd;Lbdd;)Ldqy;	a	of
		p	0		spreadXz
		p	1		spreadY
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Ldqy;)Lbdd;	a	lambda$static$1
	m	(Ldqu;Lapo;Lgt;)Ljava/util/stream/Stream;	a_	getPositions
		p	1		context
		p	2		random
		p	3		pos
	m	()Ldqx;	b	type
	m	(Lbdd;)Ldqy;	b	horizontal
		p	0		spreadXz
	m	(Ldqy;)Lbdd;	b	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lbdd;	c	xzSpread
	f	Lbdd;	d	ySpread
c	dqz	net/minecraft/world/level/levelgen/placement/RarityFilter
	m	(I)V	<init>	<init>
		p	1		chance
	m	(I)Ldqz;	a	onAverageOnceEvery
		p	0		chance
	m	(Ldqu;Lapo;Lgt;)Z	a	shouldPlace
		p	1		context
		p	2		random
		p	3		pos
	m	(Ldqz;)Ljava/lang/Integer;	a	lambda$static$0
	m	()Ldqx;	b	type
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	c	chance
c	dra	net/minecraft/world/level/levelgen/placement/RepeatingPlacement
	m	(Lapo;Lgt;)I	a	count
		p	1		random
		p	2		pos
	m	(Lgt;I)Lgt;	a	lambda$getPositions$0
	m	(Ldqu;Lapo;Lgt;)Ljava/util/stream/Stream;	a_	getPositions
		p	1		context
		p	2		random
		p	3		pos
c	drb	net/minecraft/world/level/levelgen/placement/SurfaceRelativeThresholdFilter
	m	(Ldgz$a;II)V	<init>	<init>
		p	1		heightmap
		p	2		min
		p	3		max
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
	m	(Ldgz$a;II)Ldrb;	a	of
		p	0		heightmap
		p	1		min
		p	2		max
	m	(Ldqu;Lapo;Lgt;)Z	a	shouldPlace
		p	1		context
		p	2		random
		p	3		pos
	m	(Ldrb;)Ljava/lang/Integer;	a	lambda$static$2
	m	()Ldqx;	b	type
	m	(Ldrb;)Ljava/lang/Integer;	b	lambda$static$1
	m	(Ldrb;)Ldgz$a;	c	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldgz$a;	c	heightmap
	f	I	d	minInclusive
	f	I	e	maxInclusive
c	drc	net/minecraft/world/level/levelgen/placement/SurfaceWaterDepthFilter
	m	(I)V	<init>	<init>
		p	1		maxWaterDepth
	m	(I)Ldrc;	a	forMaxDepth
		p	0		maxWaterDepth
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Ldqu;Lapo;Lgt;)Z	a	shouldPlace
		p	1		context
		p	2		random
		p	3		pos
	m	(Ldrc;)Ljava/lang/Integer;	a	lambda$static$0
	m	()Ldqx;	b	type
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	c	maxWaterDepth
c	drd	net/minecraft/world/level/levelgen/placement/package-info
c	dre	net/minecraft/world/level/levelgen/presets/WorldPreset
	m	(Ljava/util/Map;)V	<init>	<init>
		p	1		dimensions
	m	()Ldhu;	a	createWorldDimensions
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Ldre;)Lcom/mojang/serialization/DataResult;	a	requireOverworld
		p	0		preset
	m	(Lhz;Ladc;)V	a	lambda$createRegistry$2
		p	2		registryKey
	m	()Ljava/util/Optional;	b	overworld
	m	(Ldre;)Ljava/util/Map;	b	lambda$static$0
		p	0		preset
	m	()Lhq;	c	createRegistry
	m	()Ljava/lang/String;	d	lambda$requireOverworld$3
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Ljava/util/Map;	c	dimensions
c	drf	net/minecraft/world/level/levelgen/presets/WorldPresets
	m	(Ldfa;)Ljava/util/Optional;	a	lambda$fromSettings$0
		p	0		overworld
	m	(Lhq;)Ljava/util/Optional;	a	fromSettings
		p	0		registry
	m	(Lhr;)Ldhu;	a	createNormalWorldDimensions
		p	0		dynamicRegistryManager
	m	(Ljava/lang/String;)Ladc;	a	register
		p	0		id
	m	(Loa;)V	a	bootstrap
		p	0		presetRegisterable
	m	(Lhr;)Ldfa;	b	getNormalOverworld
		p	0		dynamicRegistryManager
	f	Ladc;	a	NORMAL
	f	Ladc;	b	FLAT
	f	Ladc;	c	LARGE_BIOMES
	f	Ladc;	d	AMPLIFIED
	f	Ladc;	e	SINGLE_BIOME_SURFACE
	f	Ladc;	f	DEBUG
c	drf$a	net/minecraft/world/level/levelgen/presets/WorldPresets$Bootstrap
	m	(Loa;)V	<init>	<init>
		p	1		presetRegisterable
	m	()V	a	bootstrap
	m	(Ladc;Ldfa;)V	a	registerCustomOverworldPreset
		p	1		key
		p	2		dimensionOptions
	m	(Lcnj;)V	a	registerOverworlds
		p	1		biomeSource
	m	(Lcnj;Lhd;)Ldfa;	a	makeNoiseBasedOverworld
		p	1		biomeSource
		p	2		chunkGeneratorSettings
	m	(Lddo;)Ldfa;	a	makeOverworld
		p	1		chunkGenerator
	m	(Ldfa;)Ldre;	a	createPresetWithCustomOverworld
		p	1		dimensionOptions
	f	Loa;	a	context
	f	Lhe;	b	noiseSettings
	f	Lhe;	c	biomes
	f	Lhe;	d	placedFeatures
	f	Lhe;	e	structureSets
	f	Lhe;	f	multiNoiseBiomeSourceParameterLists
	f	Lhd;	g	overworldDimensionType
	f	Ldfa;	h	netherStem
	f	Ldfa;	i	endStem
c	drg	net/minecraft/world/level/levelgen/presets/package-info
c	drh	net/minecraft/world/level/levelgen/structure/BoundingBox
	m	(IIIIII)V	<init>	<init>
		p	1		minX
		p	2		minY
		p	3		minZ
		p	4		maxX
		p	5		maxY
		p	6		maxZ
	m	(Lgt;)V	<init>	<init>
		p	1		pos
	m	()Ldrh;	a	infinite
	m	(I)Ldrh;	a	inflatedBy
		p	1		offset
	m	(III)Ldrh;	a	move
		p	1		dx
		p	2		dy
		p	3		dz
	m	(IIII)Z	a	intersects
		p	1		minX
		p	2		minZ
		p	3		maxX
		p	4		maxZ
	m	(IIIIIIIIILgz;)Ldrh;	a	orientBox
		p	0		x
		p	1		y
		p	2		z
		p	3		offsetX
		p	4		offsetY
		p	5		offsetZ
		p	6		sizeX
		p	7		sizeY
		p	8		sizeZ
		p	9		facing
	m	(Ldrh;)Z	a	intersects
		p	1		other
	m	(Lgt;)Ldrh;	a	encapsulate
		p	1		pos
	m	(Lhy;)Ldrh;	a	move
		p	1		vec
	m	(Lhy;Lhy;)Ldrh;	a	fromCorners
		p	0		first
		p	1		second
	m	(Ljava/lang/Iterable;)Ljava/util/Optional;	a	encapsulatingPositions
		p	0		positions
	m	(Ljava/util/function/Consumer;)V	a	forAllCorners
		p	1		consumer
	m	(Ljava/util/stream/IntStream;)Lcom/mojang/serialization/DataResult;	a	lambda$static$1
		p	0		values
	m	([I)Ldrh;	a	lambda$static$0
		p	0		array
	m	()Lhy;	b	getLength
	m	(III)Ldrh;	b	moved
		p	1		x
		p	2		y
		p	3		z
	m	(Ldrh;)Ldrh;	b	encapsulate
		p	1		box
	m	(Lhy;)Z	b	isInside
		p	1		pos
	m	(Ljava/lang/Iterable;)Ljava/util/Optional;	b	encapsulatingBoxes
		p	0		boxes
	m	()I	c	getXSpan
	m	(III)Z	c	isInside
		p	1		x
		p	2		y
		p	3		z
	m	(Ldrh;)Ljava/util/stream/IntStream;	c	lambda$static$2
		p	0		box
	m	()I	d	getYSpan
	m	()I	e	getZSpan
	m	()Lgt;	f	getCenter
	m	()I	g	minX
	m	()I	h	minY
	m	()I	i	minZ
	m	()I	j	maxX
	m	()I	k	maxY
	m	()I	l	maxZ
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	I	c	minX
	f	I	d	minY
	f	I	e	minZ
	f	I	f	maxX
	f	I	g	maxY
	f	I	h	maxZ
c	drh$1	net/minecraft/world/level/levelgen/structure/BoundingBox$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	dri	net/minecraft/world/level/levelgen/structure/BuiltinStructureSets
	m	(Ljava/lang/String;)Ladc;	a	register
		p	0		id
	f	Ladc;	a	VILLAGES
	f	Ladc;	b	DESERT_PYRAMIDS
	f	Ladc;	c	IGLOOS
	f	Ladc;	d	JUNGLE_TEMPLES
	f	Ladc;	e	SWAMP_HUTS
	f	Ladc;	f	PILLAGER_OUTPOSTS
	f	Ladc;	g	OCEAN_MONUMENTS
	f	Ladc;	h	WOODLAND_MANSIONS
	f	Ladc;	i	BURIED_TREASURES
	f	Ladc;	j	MINESHAFTS
	f	Ladc;	k	RUINED_PORTALS
	f	Ladc;	l	SHIPWRECKS
	f	Ladc;	m	OCEAN_RUINS
	f	Ladc;	n	NETHER_COMPLEXES
	f	Ladc;	o	NETHER_FOSSILS
	f	Ladc;	p	END_CITIES
	f	Ladc;	q	ANCIENT_CITIES
	f	Ladc;	r	STRONGHOLDS
c	drj	net/minecraft/world/level/levelgen/structure/BuiltinStructures
	m	(Ljava/lang/String;)Ladc;	a	createKey
		p	0		id
	f	Ladc;	A	RUINED_PORTAL_JUNGLE
	f	Ladc;	B	RUINED_PORTAL_SWAMP
	f	Ladc;	C	RUINED_PORTAL_MOUNTAIN
	f	Ladc;	D	RUINED_PORTAL_OCEAN
	f	Ladc;	E	RUINED_PORTAL_NETHER
	f	Ladc;	F	ANCIENT_CITY
	f	Ladc;	a	PILLAGER_OUTPOST
	f	Ladc;	b	MINESHAFT
	f	Ladc;	c	MINESHAFT_MESA
	f	Ladc;	d	WOODLAND_MANSION
	f	Ladc;	e	JUNGLE_TEMPLE
	f	Ladc;	f	DESERT_PYRAMID
	f	Ladc;	g	IGLOO
	f	Ladc;	h	SHIPWRECK
	f	Ladc;	i	SHIPWRECK_BEACHED
	f	Ladc;	j	SWAMP_HUT
	f	Ladc;	k	STRONGHOLD
	f	Ladc;	l	OCEAN_MONUMENT
	f	Ladc;	m	OCEAN_RUIN_COLD
	f	Ladc;	n	OCEAN_RUIN_WARM
	f	Ladc;	o	FORTRESS
	f	Ladc;	p	NETHER_FOSSIL
	f	Ladc;	q	END_CITY
	f	Ladc;	r	BURIED_TREASURE
	f	Ladc;	s	BASTION_REMNANT
	f	Ladc;	t	VILLAGE_PLAINS
	f	Ladc;	u	VILLAGE_DESERT
	f	Ladc;	v	VILLAGE_SAVANNA
	f	Ladc;	w	VILLAGE_SNOWY
	f	Ladc;	x	VILLAGE_TAIGA
	f	Ladc;	y	RUINED_PORTAL_STANDARD
	f	Ladc;	z	RUINED_PORTAL_DESERT
c	drk	net/minecraft/world/level/levelgen/structure/LegacyStructureDataHandler
	m	(Ldya;Ljava/util/List;Ljava/util/List;)V	<init>	<init>
		p	1		persistentStateManager
	m	(II)Z	a	isUnhandledStructureStart
		p	1		chunkX
		p	2		chunkZ
	m	(IILjava/lang/String;)Z	a	hasLegacyStart
		p	1		chunkX
		p	2		chunkZ
		p	3		id
	m	(J)V	a	removeIndex
	m	(Ladc;Ldya;)Ldrk;	a	getLegacyStructureHandler
		p	0		world
		p	1		persistentStateManager
	m	(Ldya;)V	a	populateCaches
		p	1		persistentStateManager
	m	(Ljava/lang/String;)Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	a	lambda$populateCaches$2
	m	(Ljava/util/HashMap;)V	a	lambda$static$1
		p	0		map
	m	(Lre;)Lre;	a	updateFromLegacy
		p	1		nbt
	m	(Lre;Lclp;)Lre;	a	updateStructureStart
		p	1		nbt
		p	2		pos
	m	(Ljava/util/HashMap;)V	b	lambda$static$0
		p	0		map
	f	Ljava/util/Map;	a	CURRENT_TO_LEGACY_MAP
	f	Ljava/util/Map;	b	LEGACY_TO_CURRENT_MAP
	f	Ljava/util/Set;	c	OLD_STRUCTURE_REGISTRY_KEYS
	f	Z	d	hasLegacyData
	f	Ljava/util/Map;	e	dataMap
	f	Ljava/util/Map;	f	indexMap
	f	Ljava/util/List;	g	legacyKeys
	f	Ljava/util/List;	h	currentKeys
c	drl	net/minecraft/world/level/levelgen/structure/PoolElementStructurePiece
	m	(Ldsf;Lre;)V	<init>	<init>
		p	1		context
		p	2		nbt
	m	(Ldvi;Ldsw;Lgt;ILcvq;Ldrh;)V	<init>	<init>
		p	1		structureTemplateManager
		p	2		poolElement
		p	3		pos
		p	4		groundLevelDelta
		p	5		rotation
		p	6		boundingBox
	m	()Lcvq;	a	getRotation
	m	(III)V	a	move
		p	1		x
		p	2		y
		p	3		z
	m	(Lcnb;Lcmz;Lddo;Lapo;Ldrh;Lclp;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Lcnb;Lcmz;Lddo;Lapo;Ldrh;Lgt;Z)V	a	place
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		boundingBox
		p	6		pivot
		p	7		keepJigsaws
	m	(Lcom/mojang/serialization/DynamicOps;Lrx;)V	a	lambda$new$1
		p	2		junctionTag
	m	(Ldsf;Lre;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	m	(Ldsr;)V	a	addJunction
		p	1		junction
	m	(Lre;Lrx;)V	a	lambda$addAdditionalSaveData$2
	m	()Ldsw;	b	getElement
	m	()Lgt;	c	getPosition
	m	()I	d	getGroundLevelDelta
	m	()Ljava/util/List;	e	getJunctions
	m	()Ljava/lang/IllegalStateException;	l	lambda$new$0
	f	Ldsw;	a	element
	f	Lgt;	b	position
	f	Lcvq;	c	rotation
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	I	h	groundLevelDelta
	f	Ljava/util/List;	i	junctions
	f	Ldvi;	j	structureTemplateManager
c	drm	net/minecraft/world/level/levelgen/structure/PostPlacementProcessor
	m	(Lcnb;Lcmz;Lddo;Lapo;Ldrh;Lclp;Ldse;)V	a	lambda$static$0
		p	0		world
		p	1		structureAccessor
		p	2		chunkGenerator
		p	3		random
		p	4		chunkBox
		p	5		pos
		p	6		children
	m	(Lcnb;Lcmz;Lddo;Lapo;Ldrh;Lclp;Ldse;)V	afterPlace	afterPlace
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		pos
		p	7		children
	f	Ldrm;	a	NONE
c	drn	net/minecraft/world/level/levelgen/structure/ScatteredFeaturePiece
	m	(Ldsg;IIIIIILgz;)V	<init>	<init>
		p	1		type
		p	2		x
		p	3		y
		p	4		z
		p	5		width
		p	6		height
		p	7		depth
		p	8		orientation
	m	(Ldsg;Lre;)V	<init>	<init>
		p	1		type
		p	2		nbt
	m	(Lcmj;I)Z	a	updateHeightPositionToLowestGroundHeight
		p	1		world
		p	2		yOffset
	m	(Lcmj;Ldrh;I)Z	a	updateAverageGroundHeight
		p	1		world
		p	2		boundingBox
		p	3		deltaY
	m	(Ldsf;Lre;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	f	I	a	width
	f	I	b	height
	f	I	c	depth
	f	I	d	heightPosition
c	dro	net/minecraft/world/level/levelgen/structure/SinglePieceStructure
	m	(Ldro$a;IILdrp$c;)V	<init>	<init>
		p	1		constructor
		p	2		width
		p	3		height
		p	4		config
	m	(Ldrp$a;)Ljava/util/Optional;	a	findGenerationPoint
		p	1		context
	m	(Ldrp$a;Ldsh;)V	a	lambda$findGenerationPoint$0
		p	2		collector
	m	(Ldsh;Ldrp$a;)V	a	generatePieces
		p	1		collector
		p	2		context
	f	Ldro$a;	d	constructor
	f	I	e	width
	f	I	f	depth
c	dro$a	net/minecraft/world/level/levelgen/structure/SinglePieceStructure$PieceConstructor
	m	(Ldhy;II)Ldrt;	construct	construct
		p	1		random
		p	2		startX
		p	3		startZ
c	drp	net/minecraft/world/level/levelgen/structure/Structure
	m	(Ldrp$c;)V	<init>	<init>
		p	1		config
	m	()Lhh;	a	biomes
	m	(Lcnb;Lcmz;Lddo;Lapo;Ldrh;Lclp;Ldse;)V	a	afterPlace
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		box
		p	6		chunkPos
		p	7		pieces
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/serialization/codecs/RecordCodecBuilder;	a	settingsCodec
		p	0		instance
	m	(Ldrh;)Ldrh;	a	adjustBoundingBox
		p	1		box
	m	(Ldrp$a;)Ljava/util/Optional;	a	findGenerationPoint
		p	1		context
	m	(Ldrp$a;II)I	a	getLowestY
		p	0		context
		p	1		width
		p	2		height
	m	(Ldrp$a;IIII)I	a	getLowestY
		p	0		context
		p	1		x
		p	2		z
		p	3		width
		p	4		height
	m	(Ldrp$a;Lcvq;)Lgt;	a	getLowestYIn5by5BoxOffset7Blocks
		p	1		context
		p	2		rotation
	m	(Ldrp$a;Ldgz$a;Ljava/util/function/Consumer;)Ljava/util/Optional;	a	onTopOfChunkCenter
		p	0		context
		p	1		heightmap
		p	2		generator
	m	(Ldrp$a;Ldrp$b;)Z	a	lambda$findValidGenerationPoint$2
		p	1		position
	m	(Ldrp$b;Ldrp$a;)Z	a	isValidBiome
		p	0		result
		p	1		context
	m	(Ldrp;)Ldrp$c;	a	lambda$settingsCodec$0
		p	0		feature
	m	(Lhr;Lddo;Lcnj;Ldhn;Ldvi;JLclp;ILcmk;Ljava/util/function/Predicate;)Ldrx;	a	generate
		p	1		dynamicRegistryManager
		p	2		chunkGenerator
		p	3		biomeSource
		p	4		noiseConfig
		p	5		structureTemplateManager
		p	6		seed
		p	8		chunkPos
		p	9		references
		p	10		world
		p	11		validBiomes
	m	(Ljava/util/function/Function;)Lcom/mojang/serialization/Codec;	a	simpleCodec
		p	0		featureCreator
	m	(Ljava/util/function/Function;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$simpleCodec$1
		p	1		instance
	m	()Ljava/util/Map;	b	spawnOverrides
	m	(Ldrp$a;)Ljava/util/Optional;	b	findValidGenerationPoint
		p	1		context
	m	(Ldrp$a;IIII)[I	b	getCornerHeights
		p	0		context
		p	1		x
		p	2		width
		p	3		z
		p	4		height
	m	()Ldgv$b;	c	step
	m	()Ldsa;	d	terrainAdaptation
	m	()Ldry;	e	type
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Ldrp$c;	c	settings
c	drp$a	net/minecraft/world/level/levelgen/structure/Structure$GenerationContext
	m	(Lhr;Lddo;Lcnj;Ldhn;Ldvi;JLclp;Lcmk;Ljava/util/function/Predicate;)V	<init>	<init>
		p	1		dynamicRegistryManager
		p	2		chunkGenerator
		p	3		biomeSource
		p	4		noiseConfig
		p	5		structureTemplateManager
		p	6		seed
		p	8		chunkPos
		p	9		world
		p	10		biomePredicate
	m	()Lhr;	a	registryAccess
	m	(JLclp;)Ldhy;	a	makeRandom
		p	0		seed
		p	2		chunkPos
	m	()Lddo;	b	chunkGenerator
	m	()Lcnj;	c	biomeSource
	m	()Ldhn;	d	randomState
	m	()Ldvi;	e	structureTemplateManager
	m	()Ldhy;	f	random
	m	()J	g	seed
	m	()Lclp;	h	chunkPos
	m	()Lcmk;	i	heightAccessor
	m	()Ljava/util/function/Predicate;	j	validBiome
	f	Lhr;	a	registryAccess
	f	Lddo;	b	chunkGenerator
	f	Lcnj;	c	biomeSource
	f	Ldhn;	d	randomState
	f	Ldvi;	e	structureTemplateManager
	f	Ldhy;	f	random
	f	J	g	seed
	f	Lclp;	h	chunkPos
	f	Lcmk;	i	heightAccessor
	f	Ljava/util/function/Predicate;	j	validBiome
c	drp$b	net/minecraft/world/level/levelgen/structure/Structure$GenerationStub
	m	(Lgt;Ljava/util/function/Consumer;)V	<init>	<init>
		p	1		pos
		p	2		generator
	m	()Ldsh;	a	getPiecesBuilder
	m	(Ldsh;)Ldsh;	a	lambda$getPiecesBuilder$1
		p	0		collector
	m	(Ljava/util/function/Consumer;)Ldsh;	a	lambda$getPiecesBuilder$0
		p	0		generator
	m	()Lgt;	b	position
	m	()Lcom/mojang/datafixers/util/Either;	c	generator
	f	Lgt;	a	position
	f	Lcom/mojang/datafixers/util/Either;	b	generator
c	drp$c	net/minecraft/world/level/levelgen/structure/Structure$StructureSettings
	m	()Lhh;	a	biomes
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Ljava/util/Map;	b	spawnOverrides
	m	()Ldgv$b;	c	step
	m	()Ldsa;	d	terrainAdaptation
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lhh;	b	biomes
	f	Ljava/util/Map;	c	spawnOverrides
	f	Ldgv$b;	d	step
	f	Ldsa;	e	terrainAdaptation
c	drq	net/minecraft/world/level/levelgen/structure/StructureCheck
	m	(Ldem;Lhr;Ldvi;Ladc;Lddo;Ldhn;Lcmk;Lcnj;JLcom/mojang/datafixers/DataFixer;)V	<init>	<init>
		p	1		chunkIoWorker
		p	2		registryManager
		p	3		structureTemplateManager
		p	4		worldKey
		p	5		chunkGenerator
		p	6		noiseConfig
		p	7		world
		p	8		biomeSource
		p	9		seed
		p	11		dataFixer
	m	(JLit/unimi/dsi/fastutil/longs/Long2BooleanMap;)V	a	lambda$storeFullResults$3
		p	2		generationPossibilityByChunkPos
	m	(JLit/unimi/dsi/fastutil/objects/Object2IntMap;)V	a	storeFullResults
		p	1		pos
		p	3		referencesByStructure
	m	(Lclp;Ldrp;)V	a	incrementReference
		p	1		pos
		p	2		structure
	m	(Lclp;Ldrp;J)Z	a	lambda$checkStart$1
		p	3		chunkPos
	m	(Lclp;Ldrp;Z)Ldrr;	a	checkStart
		p	1		pos
		p	2		type
		p	3		skipReferencedStructures
	m	(Lclp;Ldrp;ZJ)Ldrr;	a	tryLoadFromStorage
		p	1		pos
		p	2		structure
		p	3		skipReferencedStructures
		p	4		posLong
	m	(Lclp;Ljava/util/Map;)V	a	onStructureLoad
		p	1		pos
		p	2		structureStarts
	m	(Ldrp;)Lit/unimi/dsi/fastutil/longs/Long2BooleanMap;	a	lambda$checkStart$0
		p	0		structure2
	m	(Ldrp;Ljava/lang/Integer;)Ljava/lang/Integer;	a	lambda$incrementReference$4
		p	0		feature
		p	1		references
	m	(Ldrp;Ljava/lang/Long;Lit/unimi/dsi/fastutil/objects/Object2IntMap;)Lit/unimi/dsi/fastutil/objects/Object2IntMap;	a	lambda$incrementReference$5
		p	1		pos
		p	2		referencesByStructure
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntMap;)Lit/unimi/dsi/fastutil/objects/Object2IntMap;	a	deduplicateEmptyMap
		p	0		map
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntMap;Ldrp;Ldrx;)V	a	lambda$onStructureLoad$2
		p	0		structure
		p	1		start
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntMap;Ldrp;Z)Ldrr;	a	checkStructureInfo
		p	1		referencesByStructure
		p	2		structure
		p	3		skipReferencedStructures
	m	(Lre;)Lit/unimi/dsi/fastutil/objects/Object2IntMap;	a	loadStructures
		p	1		nbt
	m	(Lclp;Ldrp;)Z	b	canCreateStructure
		p	1		pos
		p	2		structure
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	I	b	NO_STRUCTURE
	f	Ldem;	c	storageAccess
	f	Lhr;	d	registryAccess
	f	Lhq;	e	biomes
	f	Lhq;	f	structureConfigs
	f	Ldvi;	g	structureTemplateManager
	f	Ladc;	h	dimension
	f	Lddo;	i	chunkGenerator
	f	Ldhn;	j	randomState
	f	Lcmk;	k	heightAccessor
	f	Lcnj;	l	biomeSource
	f	J	m	seed
	f	Lcom/mojang/datafixers/DataFixer;	n	fixerUpper
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	o	loadedChunks
	f	Ljava/util/Map;	p	featureChecks
c	drr	net/minecraft/world/level/levelgen/structure/StructureCheckResult
	m	()[Ldrr;	a	$values
	f	Ldrr;	a	START_PRESENT
	f	Ldrr;	b	START_NOT_PRESENT
	f	Ldrr;	c	CHUNK_LOAD_NEEDED
	f	[Ldrr;	d	$VALUES
c	drs	net/minecraft/world/level/levelgen/structure/StructureFeatureIndexSavedData
	m	(Lit/unimi/dsi/fastutil/longs/LongSet;Lit/unimi/dsi/fastutil/longs/LongSet;)V	<init>	<init>
		p	1		all
		p	2		remaining
	m	()Lit/unimi/dsi/fastutil/longs/LongSet;	a	getAll
	m	(J)V	a	addIndex
		p	1		pos
	m	(Lre;)Lre;	a	save
		p	1		nbt
	m	(J)Z	b	hasStartIndex
		p	1		pos
	m	(Lre;)Ldrs;	b	load
		p	0		nbt
	m	(J)Z	c	hasUnhandledIndex
		p	1		pos
	m	(J)V	d	removeIndex
		p	1		pos
	f	Ljava/lang/String;	a	TAG_REMAINING_INDEXES
	f	Ljava/lang/String;	b	TAG_All_INDEXES
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	c	all
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	d	remaining
c	drt	net/minecraft/world/level/levelgen/structure/StructurePiece
	m	(Ldsg;ILdrh;)V	<init>	<init>
		p	1		type
		p	2		length
		p	3		boundingBox
	m	(Ldsg;Lre;)V	<init>	<init>
		p	1		type
		p	2		nbt
	m	()Lcvq;	a	getRotation
	m	(I)V	a	setGenDepth
		p	1		chainLength
	m	(II)I	a	getWorldX
		p	1		x
		p	2		z
	m	(III)V	a	move
		p	1		x
		p	2		y
		p	3		z
	m	(IIILgz;III)Ldrh;	a	makeBoundingBox
		p	0		x
		p	1		y
		p	2		z
		p	3		orientation
		p	4		width
		p	5		height
		p	6		depth
	m	(Lapo;)Lgz;	a	getRandomHorizontalDirection
		p	0		random
	m	(Lclo;IIILdrh;)Ldbq;	a	getBlock
		p	1		world
		p	2		x
		p	3		y
		p	4		z
		p	5		box
	m	(Lclo;Lgt;Ldbq;)Ldbq;	a	reorient
		p	0		world
		p	1		pos
		p	2		state
	m	(Lclp;I)Z	a	isCloseToChunk
		p	1		pos
		p	2		offset
	m	(Lcml;IIILdrh;)Z	a	canBeReplaced
		p	1		world
		p	2		x
		p	3		y
		p	4		z
		p	5		box
	m	(Lcmx;Ldrh;Lapo;Lgt;Ladd;Ldbq;)Z	a	createChest
		p	1		world
		p	2		boundingBox
		p	3		random
		p	4		pos
		p	5		lootTableId
		p	6		block
	m	(Lcnb;Lcmz;Lddo;Lapo;Ldrh;Lclp;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Lcnb;Ldbq;IIILdrh;)V	a	placeBlock
		p	1		world
		p	2		block
		p	3		x
		p	4		y
		p	5		z
		p	6		box
	m	(Lcnb;Ldrh;IIIIII)V	a	generateAirBox
		p	1		world
		p	2		bounds
		p	3		minX
		p	4		minY
		p	5		minZ
		p	6		maxX
		p	7		maxY
		p	8		maxZ
	m	(Lcnb;Ldrh;IIIIIILdbq;Ldbq;Z)V	a	generateBox
		p	1		world
		p	2		box
		p	3		minX
		p	4		minY
		p	5		minZ
		p	6		maxX
		p	7		maxY
		p	8		maxZ
		p	9		outline
		p	10		inside
		p	11		cantReplaceAir
	m	(Lcnb;Ldrh;IIIIIILdbq;Z)V	a	generateUpperHalfSphere
		p	1		world
		p	2		bounds
		p	3		minX
		p	4		minY
		p	5		minZ
		p	6		maxX
		p	7		maxY
		p	8		maxZ
		p	9		block
		p	10		cantReplaceAir
	m	(Lcnb;Ldrh;IIIIIIZLapo;Ldrt$a;)V	a	generateBox
		p	1		world
		p	2		box
		p	3		minX
		p	4		minY
		p	5		minZ
		p	6		maxX
		p	7		maxY
		p	8		maxZ
		p	9		cantReplaceAir
		p	10		random
		p	11		randomizer
	m	(Lcnb;Ldrh;Lapo;FIIIIIILdbq;Ldbq;ZZ)V	a	generateMaybeBox
		p	1		world
		p	2		box
		p	3		random
		p	4		blockChance
		p	5		minX
		p	6		minY
		p	7		minZ
		p	8		maxX
		p	9		maxY
		p	10		maxZ
		p	11		outline
		p	12		inside
		p	13		cantReplaceAir
		p	14		stayBelowSeaLevel
	m	(Lcnb;Ldrh;Lapo;FIIILdbq;)V	a	maybeGenerateBlock
		p	1		world
		p	2		bounds
		p	3		random
		p	4		threshold
		p	5		x
		p	6		y
		p	7		z
		p	8		state
	m	(Lcnb;Ldrh;Lapo;IIILadd;)Z	a	createChest
		p	1		world
		p	2		boundingBox
		p	3		random
		p	4		x
		p	5		y
		p	6		z
		p	7		lootTableId
	m	(Lcnb;Ldrh;Lapo;IIILgz;Ladd;)Z	a	createDispenser
		p	1		world
		p	2		boundingBox
		p	3		random
		p	4		x
		p	5		y
		p	6		z
		p	7		facing
		p	8		lootTableId
	m	(Lcnb;Ldrh;Ldrh;Ldbq;Ldbq;Z)V	a	generateBox
		p	1		world
		p	2		box
		p	3		fillBox
		p	4		outline
		p	5		inside
		p	6		cantReplaceAir
	m	(Lcnb;Ldrh;Ldrh;ZLapo;Ldrt$a;)V	a	generateBox
		p	1		world
		p	2		box
		p	3		fillBox
		p	4		cantReplaceAir
		p	5		random
		p	6		randomizer
	m	(Ldbq;)Z	a	isReplaceableByStructures
		p	1		state
	m	(Ldrt;Ldru;Lapo;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Ldsf;)Lre;	a	createTag
		p	1		context
	m	(Ldsf;Lre;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	m	(Lgz;)V	a	setOrientation
		p	1		orientation
	m	(Ljava/util/List;Ldrh;)Ldrt;	a	findCollisionPiece
		p	0		pieces
		p	1		box
	m	(Ljava/util/stream/Stream;)Ldrh;	a	createBoundingBox
		p	0		pieces
	m	(Lre;Lrx;)V	a	lambda$createTag$1
	m	()Ljava/lang/IllegalStateException;	b	lambda$createBoundingBox$2
	m	(I)I	b	getWorldY
		p	1		y
	m	(II)I	b	getWorldZ
		p	1		x
		p	2		z
	m	(III)Lgt$a;	b	getWorldPos
		p	1		x
		p	2		y
		p	3		z
	m	(Lcml;IIILdrh;)Z	b	isInterior
		p	1		world
		p	2		x
		p	3		z
		p	4		y
		p	5		box
	m	(Lcnb;Ldbq;IIILdrh;)V	b	fillColumnDown
		p	1		world
		p	2		state
		p	3		x
		p	4		y
		p	5		z
		p	6		box
	m	()Ljava/lang/IllegalArgumentException;	c	lambda$new$0
	m	()Ldrh;	f	getBoundingBox
	m	()I	g	getGenDepth
	m	()Lgt;	h	getLocatorPosition
	m	()Lgz;	i	getOrientation
	m	()Lcua;	j	getMirror
	m	()Ldsg;	k	getType
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lgz;	b	orientation
	f	Lcua;	c	mirror
	f	Lcvq;	d	rotation
	f	Ldbq;	e	CAVE_AIR
	f	Ldrh;	f	boundingBox
	f	I	g	genDepth
	f	Ldsg;	h	type
	f	Ljava/util/Set;	i	SHAPE_CHECK_BLOCKS
c	drt$1	net/minecraft/world/level/levelgen/structure/StructurePiece$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	drt$a	net/minecraft/world/level/levelgen/structure/StructurePiece$BlockSelector
	m	()Ldbq;	a	getNext
	m	(Lapo;IIIZ)V	a	next
		p	1		random
		p	2		x
		p	3		y
		p	4		z
		p	5		placeBlock
	f	Ldbq;	a	next
c	dru	net/minecraft/world/level/levelgen/structure/StructurePieceAccessor
	m	(Ldrh;)Ldrt;	a	findCollisionPiece
		p	1		box
	m	(Ldrt;)V	a	addPiece
		p	1		piece
c	drv	net/minecraft/world/level/levelgen/structure/StructureSet
	m	(Lhd;Ldsm;)V	<init>	<init>
		p	1		structure
		p	2		placement
	m	()Ljava/util/List;	a	structures
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lhd;)Ldrv$a;	a	entry
		p	0		structure
	m	(Lhd;I)Ldrv$a;	a	entry
		p	0		structure
		p	1		weight
	m	()Ldsm;	b	placement
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Ljava/util/List;	c	structures
	f	Ldsm;	d	placement
c	drv$a	net/minecraft/world/level/levelgen/structure/StructureSet$StructureSelectionEntry
	m	()Lhd;	a	structure
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()I	b	weight
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lhd;	b	structure
	f	I	c	weight
c	drw	net/minecraft/world/level/levelgen/structure/StructureSpawnOverride
	m	()Ldrw$a;	a	boundingBox
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Lbcm;	b	spawns
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldrw$a;	b	boundingBox
	f	Lbcm;	c	spawns
c	drw$a	net/minecraft/world/level/levelgen/structure/StructureSpawnOverride$BoundingBoxType
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()[Ldrw$a;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Ldrw$a;	a	PIECE
	f	Ldrw$a;	b	STRUCTURE
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Ljava/lang/String;	d	id
	f	[Ldrw$a;	e	$VALUES
c	drx	net/minecraft/world/level/levelgen/structure/StructureStart
	m	(Ldrp;Lclp;ILdse;)V	<init>	<init>
		p	1		structure
		p	2		pos
		p	3		references
		p	4		children
	m	()Ldrh;	a	getBoundingBox
	m	(Lcnb;Lcmz;Lddo;Lapo;Ldrh;Lclp;)V	a	placeInChunk
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
	m	(Ldsf;Lclp;)Lre;	a	createTag
		p	1		context
		p	2		chunkPos
	m	(Ldsf;Lre;J)Ldrx;	a	loadStaticStart
		p	0		context
		p	1		nbt
		p	2		seed
	m	()Z	b	isValid
	m	()Lclp;	c	getChunkPos
	m	()Z	d	canBeReferenced
	m	()V	e	addReference
	m	()I	f	getReferences
	m	()I	g	getMaxReferences
	m	()Ldrp;	h	getStructure
	m	()Ljava/util/List;	i	getPieces
	f	Ljava/lang/String;	a	INVALID_START_ID
	f	Ldrx;	b	INVALID_START
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	Ldrp;	d	structure
	f	Ldse;	e	pieceContainer
	f	Lclp;	f	chunkPos
	f	I	g	references
	f	Ldrh;	h	cachedBoundingBox
c	dry	net/minecraft/world/level/levelgen/structure/StructureType
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	lambda$register$0
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Ldry;	a	register
		p	0		id
		p	1		codec
	f	Ldry;	a	BURIED_TREASURE
	f	Ldry;	b	DESERT_PYRAMID
	f	Ldry;	c	END_CITY
	f	Ldry;	d	FORTRESS
	f	Ldry;	e	IGLOO
	f	Ldry;	f	JIGSAW
	f	Ldry;	g	JUNGLE_TEMPLE
	f	Ldry;	h	MINESHAFT
	f	Ldry;	i	NETHER_FOSSIL
	f	Ldry;	j	OCEAN_MONUMENT
	f	Ldry;	k	OCEAN_RUIN
	f	Ldry;	l	RUINED_PORTAL
	f	Ldry;	m	SHIPWRECK
	f	Ldry;	n	STRONGHOLD
	f	Ldry;	o	SWAMP_HUT
	f	Ldry;	p	WOODLAND_MANSION
c	drz	net/minecraft/world/level/levelgen/structure/TemplateStructurePiece
	m	(Ldsg;ILdvi;Ladd;Ljava/lang/String;Ldvd;Lgt;)V	<init>	<init>
		p	1		type
		p	2		length
		p	3		structureTemplateManager
		p	4		id
		p	5		template
		p	6		placementData
		p	7		pos
	m	(Ldsg;Lre;Ldvi;Ljava/util/function/Function;)V	<init>	<init>
		p	1		type
		p	2		nbt
		p	3		structureTemplateManager
		p	4		placementDataGetter
	m	()Lcvq;	a	getRotation
	m	(III)V	a	move
		p	1		x
		p	2		y
		p	3		z
	m	(Lcnb;Lcmz;Lddo;Lapo;Ldrh;Lclp;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldsf;Lre;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	m	(Ljava/lang/String;Lgt;Lcmx;Lapo;Ldrh;)V	a	handleDataMarker
		p	1		metadata
		p	2		pos
		p	3		world
		p	4		random
		p	5		boundingBox
	m	()Ladd;	b	makeTemplateLocation
	m	()Ldvh;	c	template
	m	()Lgt;	d	templatePosition
	m	()Ldvd;	e	placeSettings
	f	Ljava/lang/String;	a	templateName
	f	Ldvh;	b	template
	f	Ldvd;	c	placeSettings
	f	Lgt;	d	templatePosition
	f	Lorg/slf4j/Logger;	h	LOGGER
c	dsa	net/minecraft/world/level/levelgen/structure/TerrainAdjustment
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()[Ldsa;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Ldsa;	a	NONE
	f	Ldsa;	b	BURY
	f	Ldsa;	c	BEARD_THIN
	f	Ldsa;	d	BEARD_BOX
	f	Lcom/mojang/serialization/Codec;	e	CODEC
	f	Ljava/lang/String;	f	id
	f	[Ldsa;	g	$VALUES
c	dsb	net/minecraft/world/level/levelgen/structure/package-info
c	dsc	net/minecraft/world/level/levelgen/structure/pieces/PieceGenerator
	m	(Ldsh;Ldsc$a;)V	generatePieces	generatePieces
		p	1		collector
		p	2		context
c	dsc$a	net/minecraft/world/level/levelgen/structure/pieces/PieceGenerator$Context
	m	()Ldmh;	a	config
	m	()Lddo;	b	chunkGenerator
	m	()Ldvi;	c	structureTemplateManager
	m	()Lclp;	d	chunkPos
	m	()Lcmk;	e	heightAccessor
	m	()Ldhy;	f	random
	m	()J	g	seed
	f	Ldmh;	a	config
	f	Lddo;	b	chunkGenerator
	f	Ldvi;	c	structureTemplateManager
	f	Lclp;	d	chunkPos
	f	Lcmk;	e	heightAccessor
	f	Ldhy;	f	random
	f	J	g	seed
c	dsd	net/minecraft/world/level/levelgen/structure/pieces/PieceGeneratorSupplier
	m	(Ldgz$a;Ldsd$a;)Z	a	lambda$checkForBiomeOnTop$1
		p	1		context
	m	(Ljava/util/function/Predicate;Ljava/util/Optional;Ldsd$a;)Ljava/util/Optional;	a	lambda$simple$0
		p	2		context
	m	(Ldgz$a;)Ljava/util/function/Predicate;	checkForBiomeOnTop	checkForBiomeOnTop
		p	0		heightmapType
	m	(Ldsd$a;)Ljava/util/Optional;	createGenerator	createGenerator
		p	1		context
	m	(Ljava/util/function/Predicate;Ldsc;)Ldsd;	simple	simple
		p	0		predicate
		p	1		generator
c	dsd$a	net/minecraft/world/level/levelgen/structure/pieces/PieceGeneratorSupplier$Context
	m	()Lddo;	a	chunkGenerator
	m	(Ldgz$a;)Z	a	validBiomeOnTop
		p	1		heightmapType
	m	()Lcnj;	b	biomeSource
	m	()Ldhn;	c	randomState
	m	()J	d	seed
	m	()Lclp;	e	chunkPos
	m	()Ldmh;	f	config
	m	()Lcmk;	g	heightAccessor
	m	()Ljava/util/function/Predicate;	h	validBiome
	m	()Ldvi;	i	structureTemplateManager
	m	()Lhr;	j	registryAccess
	f	Lddo;	a	chunkGenerator
	f	Lcnj;	b	biomeSource
	f	Ldhn;	c	randomState
	f	J	d	seed
	f	Lclp;	e	chunkPos
	f	Ldmh;	f	config
	f	Lcmk;	g	heightAccessor
	f	Ljava/util/function/Predicate;	h	validBiome
	f	Ldvi;	i	structureTemplateManager
	f	Lhr;	j	registryAccess
c	dse	net/minecraft/world/level/levelgen/structure/pieces/PiecesContainer
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		pieces
	m	()Z	a	isEmpty
	m	(Ldsf;)Lrx;	a	save
		p	1		context
	m	(Lgt;)Z	a	isInsidePiece
		p	1		pos
	m	(Lrk;Ldsf;)Ldse;	a	load
		p	0		list
		p	1		context
	m	()Ldrh;	b	calculateBoundingBox
	m	()Ljava/util/List;	c	pieces
	f	Ljava/util/List;	a	pieces
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ladd;	c	JIGSAW_RENAME
	f	Ljava/util/Map;	d	RENAMES
c	dsf	net/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext
	m	()Lalh;	a	resourceManager
	m	(Laip;)Ldsf;	a	fromLevel
		p	0		world
	m	()Lhr;	b	registryAccess
	m	()Ldvi;	c	structureTemplateManager
	f	Lalh;	a	resourceManager
	f	Lhr;	b	registryAccess
	f	Ldvi;	c	structureTemplateManager
c	dsg	net/minecraft/world/level/levelgen/structure/pieces/StructurePieceType
	m	(Ldsg$a;Ljava/lang/String;)Ldsg;	a	setPieceId
		p	0		type
		p	1		id
	m	(Ldsg$b;Ljava/lang/String;)Ldsg;	a	setTemplatePieceId
		p	0		type
		p	1		id
	m	(Ldsg;Ljava/lang/String;)Ldsg;	a	setFullContextPieceId
		p	0		type
		p	1		id
	m	(Ldsf;Lre;)Ldrt;	load	load
		p	1		context
		p	2		nbt
	f	Ldsg;	A	STRONGHOLD_RIGHT_TURN
	f	Ldsg;	B	STRONGHOLD_ROOM_CROSSING
	f	Ldsg;	C	STRONGHOLD_STAIRS_DOWN
	f	Ldsg;	D	STRONGHOLD_START
	f	Ldsg;	E	STRONGHOLD_STRAIGHT
	f	Ldsg;	F	STRONGHOLD_STRAIGHT_STAIRS_DOWN
	f	Ldsg;	G	JUNGLE_PYRAMID_PIECE
	f	Ldsg;	H	OCEAN_RUIN
	f	Ldsg;	I	IGLOO
	f	Ldsg;	J	RUINED_PORTAL
	f	Ldsg;	K	SWAMPLAND_HUT
	f	Ldsg;	L	DESERT_PYRAMID_PIECE
	f	Ldsg;	M	OCEAN_MONUMENT_BUILDING
	f	Ldsg;	N	OCEAN_MONUMENT_CORE_ROOM
	f	Ldsg;	O	OCEAN_MONUMENT_DOUBLE_X_ROOM
	f	Ldsg;	P	OCEAN_MONUMENT_DOUBLE_XY_ROOM
	f	Ldsg;	Q	OCEAN_MONUMENT_DOUBLE_Y_ROOM
	f	Ldsg;	R	OCEAN_MONUMENT_DOUBLE_YZ_ROOM
	f	Ldsg;	S	OCEAN_MONUMENT_DOUBLE_Z_ROOM
	f	Ldsg;	T	OCEAN_MONUMENT_ENTRY_ROOM
	f	Ldsg;	U	OCEAN_MONUMENT_PENTHOUSE
	f	Ldsg;	V	OCEAN_MONUMENT_SIMPLE_ROOM
	f	Ldsg;	W	OCEAN_MONUMENT_SIMPLE_TOP_ROOM
	f	Ldsg;	X	OCEAN_MONUMENT_WING_ROOM
	f	Ldsg;	Y	END_CITY_PIECE
	f	Ldsg;	Z	WOODLAND_MANSION_PIECE
	f	Ldsg;	a	MINE_SHAFT_CORRIDOR
	f	Ldsg;	aa	BURIED_TREASURE_PIECE
	f	Ldsg;	ab	SHIPWRECK_PIECE
	f	Ldsg;	ac	NETHER_FOSSIL
	f	Ldsg;	ad	JIGSAW
	f	Ldsg;	b	MINE_SHAFT_CROSSING
	f	Ldsg;	c	MINE_SHAFT_ROOM
	f	Ldsg;	d	MINE_SHAFT_STAIRS
	f	Ldsg;	e	NETHER_FORTRESS_BRIDGE_CROSSING
	f	Ldsg;	f	NETHER_FORTRESS_BRIDGE_END_FILLER
	f	Ldsg;	g	NETHER_FORTRESS_BRIDGE_STRAIGHT
	f	Ldsg;	h	NETHER_FORTRESS_CASTLE_CORRIDOR_STAIRS
	f	Ldsg;	i	NETHER_FORTRESS_CASTLE_CORRIDOR_T_BALCONY
	f	Ldsg;	j	NETHER_FORTRESS_CASTLE_ENTRANCE
	f	Ldsg;	k	NETHER_FORTRESS_CASTLE_SMALL_CORRIDOR_CROSSING
	f	Ldsg;	l	NETHER_FORTRESS_CASTLE_SMALL_CORRIDOR_LEFT_TURN
	f	Ldsg;	m	NETHER_FORTRESS_CASTLE_SMALL_CORRIDOR
	f	Ldsg;	n	NETHER_FORTRESS_CASTLE_SMALL_CORRIDOR_RIGHT_TURN
	f	Ldsg;	o	NETHER_FORTRESS_CASTLE_STALK_ROOM
	f	Ldsg;	p	NETHER_FORTRESS_MONSTER_THRONE
	f	Ldsg;	q	NETHER_FORTRESS_ROOM_CROSSING
	f	Ldsg;	r	NETHER_FORTRESS_STAIRS_ROOM
	f	Ldsg;	s	NETHER_FORTRESS_START
	f	Ldsg;	t	STRONGHOLD_CHEST_CORRIDOR
	f	Ldsg;	u	STRONGHOLD_FILLER_CORRIDOR
	f	Ldsg;	v	STRONGHOLD_FIVE_CROSSING
	f	Ldsg;	w	STRONGHOLD_LEFT_TURN
	f	Ldsg;	x	STRONGHOLD_LIBRARY
	f	Ldsg;	y	STRONGHOLD_PORTAL_ROOM
	f	Ldsg;	z	STRONGHOLD_PRISON_HALL
c	dsg$a	net/minecraft/world/level/levelgen/structure/pieces/StructurePieceType$ContextlessType
	m	(Ldsf;Lre;)Ldrt;	load	load
		p	1		context
		p	2		nbt
	m	(Lre;)Ldrt;	load	load
		p	1		nbt
c	dsg$b	net/minecraft/world/level/levelgen/structure/pieces/StructurePieceType$StructureTemplateType
	m	(Ldsf;Lre;)Ldrt;	load	load
		p	1		context
		p	2		nbt
	m	(Ldvi;Lre;)Ldrt;	load	load
		p	1		structureTemplateManager
		p	2		nbt
c	dsh	net/minecraft/world/level/levelgen/structure/pieces/StructurePiecesBuilder
	m	()Ldse;	a	build
	m	(I)V	a	offsetPiecesVertically
		p	1		y
	m	(IILapo;I)I	a	moveBelowSeaLevel
		p	1		topY
		p	2		bottomY
		p	3		random
		p	4		topPenalty
	m	(Lapo;II)V	a	moveInsideHeights
		p	1		random
		p	2		baseY
		p	3		topY
	m	(Ldrh;)Ldrt;	a	findCollisionPiece
		p	1		box
	m	(Ldrt;)V	a	addPiece
		p	1		piece
	m	()V	b	clear
	m	()Z	c	isEmpty
	m	()Ldrh;	d	getBoundingBox
	f	Ljava/util/List;	a	pieces
c	dsi	net/minecraft/world/level/levelgen/structure/pieces/package-info
c	dsj	net/minecraft/world/level/levelgen/structure/placement/ConcentricRingsStructurePlacement
	m	(IIILhh;)V	<init>	<init>
		p	1		distance
		p	2		spread
		p	3		structureCount
		p	4		preferredBiomes
	m	(Lhy;Ldsm$c;FILjava/util/Optional;IIILhh;)V	<init>	<init>
		p	1		locateOffset
		p	2		generationPredicateType
		p	3		frequency
		p	4		salt
		p	5		exclusionZone
		p	6		distance
		p	7		spread
		p	8		structureCount
		p	9		preferredBiomes
	m	()I	a	distance
	m	(Lddp;II)Z	a	isPlacementChunk
		p	1		calculator
		p	2		chunkX
		p	3		chunkZ
	m	()I	b	spread
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P9;	b	codec
		p	0		instance
	m	()I	c	count
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	c	lambda$static$0
		p	0		instance
	m	()Lhh;	d	preferredBiomes
	m	()Ldsn;	e	type
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	c	distance
	f	I	d	spread
	f	I	e	count
	f	Lhh;	f	preferredBiomes
c	dsk	net/minecraft/world/level/levelgen/structure/placement/RandomSpreadStructurePlacement
	m	(IILdsl;I)V	<init>	<init>
		p	1		spacing
		p	2		separation
		p	3		spreadType
		p	4		salt
	m	(Lhy;Ldsm$c;FILjava/util/Optional;IILdsl;)V	<init>	<init>
		p	1		locateOffset
		p	2		frequencyReductionMethod
		p	3		frequency
		p	4		salt
		p	5		exclusionZone
		p	6		spacing
		p	7		separation
		p	8		spreadType
	m	()I	a	spacing
	m	(JII)Lclp;	a	getPotentialStructureChunk
		p	1		seed
		p	3		chunkX
		p	4		chunkZ
	m	(Lddp;II)Z	a	isPlacementChunk
		p	1		calculator
		p	2		chunkX
		p	3		chunkZ
	m	(Ldsk;)Lcom/mojang/serialization/DataResult;	a	lambda$static$2
		p	0		placement
	m	()I	b	separation
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$0
		p	0		instance
	m	()Ldsl;	c	spreadType
	m	()Ljava/lang/String;	d	lambda$static$1
	m	()Ldsn;	e	type
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	c	spacing
	f	I	d	separation
	f	Ldsl;	e	spreadType
c	dsl	net/minecraft/world/level/levelgen/structure/placement/RandomSpreadType
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()[Ldsl;	a	$values
	m	(Lapo;I)I	a	evaluate
		p	1		random
		p	2		bound
	m	()Ljava/lang/String;	c	getSerializedName
	f	Ldsl;	a	LINEAR
	f	Ldsl;	b	TRIANGULAR
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Ljava/lang/String;	d	id
	f	[Ldsl;	e	$VALUES
c	dsl$1	net/minecraft/world/level/levelgen/structure/placement/RandomSpreadType$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$levelgen$structure$placement$RandomSpreadType
c	dsm	net/minecraft/world/level/levelgen/structure/placement/StructurePlacement
	m	(Lhy;Ldsm$c;FILjava/util/Optional;)V	<init>	<init>
		p	1		locateOffset
		p	2		frequencyReductionMethod
		p	3		frequency
		p	4		salt
		p	5		exclusionZone
	m	(JIIIF)Z	a	probabilityReducer
		p	0		seed
		p	2		salt
		p	3		chunkX
		p	4		chunkZ
		p	5		frequency
	m	(Lclp;)Lgt;	a	getLocatePos
		p	1		chunkPos
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P5;	a	placementCodec
		p	0		instance
	m	(Lddp;II)Z	a	isPlacementChunk
		p	1		calculator
		p	2		chunkX
		p	3		chunkZ
	m	(JIIIF)Z	b	legacyProbabilityReducerWithDouble
		p	0		seed
		p	2		salt
		p	3		chunkX
		p	4		chunkZ
		p	5		frequency
	m	(Lddp;II)Z	b	isStructureChunk
		p	1		calculator
		p	2		chunkX
		p	3		chunkZ
	m	(JIIIF)Z	c	legacyArbitrarySaltProbabilityReducer
		p	0		seed
		p	2		salt
		p	3		chunkX
		p	4		chunkZ
		p	5		frequency
	m	(JIIIF)Z	d	legacyPillagerOutpostReducer
		p	0		seed
		p	2		salt
		p	3		chunkX
		p	4		chunkZ
		p	5		frequency
	m	()Ldsn;	e	type
	m	()Lhy;	f	locateOffset
	m	()Ldsm$c;	g	frequencyReductionMethod
	m	()F	h	frequency
	m	()I	i	salt
	m	()Ljava/util/Optional;	j	exclusionZone
	f	I	a	HIGHLY_ARBITRARY_RANDOM_SALT
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lhy;	c	locateOffset
	f	Ldsm$c;	d	frequencyReductionMethod
	f	F	e	frequency
	f	I	f	salt
	f	Ljava/util/Optional;	g	exclusionZone
c	dsm$a	net/minecraft/world/level/levelgen/structure/placement/StructurePlacement$ExclusionZone
	m	()Lhd;	a	otherSet
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lddp;II)Z	a	isPlacementForbidden
		p	1		calculator
		p	2		centerChunkX
		p	3		centerChunkZ
	m	()I	b	chunkCount
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lhd;	b	otherSet
	f	I	c	chunkCount
c	dsm$b	net/minecraft/world/level/levelgen/structure/placement/StructurePlacement$FrequencyReducer
	m	(JIIIF)Z	shouldGenerate	shouldGenerate
		p	1		seed
		p	3		salt
		p	4		chunkX
		p	5		chunkZ
		p	6		chance
c	dsm$c	net/minecraft/world/level/levelgen/structure/placement/StructurePlacement$FrequencyReductionMethod
	m	(Ljava/lang/String;ILjava/lang/String;Ldsm$b;)V	<init>	<init>
		p	3		name
		p	4		generationPredicate
	m	()[Ldsm$c;	a	$values
	m	(JIIIF)Z	a	shouldGenerate
		p	1		seed
		p	3		salt
		p	4		chunkX
		p	5		chunkZ
		p	6		chance
	m	()Ljava/lang/String;	c	getSerializedName
	f	Ldsm$c;	a	DEFAULT
	f	Ldsm$c;	b	LEGACY_TYPE_1
	f	Ldsm$c;	c	LEGACY_TYPE_2
	f	Ldsm$c;	d	LEGACY_TYPE_3
	f	Lcom/mojang/serialization/Codec;	e	CODEC
	f	Ljava/lang/String;	f	name
	f	Ldsm$b;	g	reducer
	f	[Ldsm$c;	h	$VALUES
c	dsn	net/minecraft/world/level/levelgen/structure/placement/StructurePlacementType
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	lambda$register$0
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Ldsn;	a	register
		p	0		id
		p	1		codec
	f	Ldsn;	a	RANDOM_SPREAD
	f	Ldsn;	b	CONCENTRIC_RINGS
c	dso	net/minecraft/world/level/levelgen/structure/placement/package-info
c	dsp	net/minecraft/world/level/levelgen/structure/pools/EmptyPoolElement
	m	()Ldsx;	a	getType
	m	(Ldvi;Lcnb;Lcmz;Lddo;Lgt;Lgt;Lcvq;Ldrh;Lapo;Z)Z	a	place
		p	1		structureTemplateManager
		p	2		world
		p	3		structureAccessor
		p	4		chunkGenerator
		p	5		pos
		p	6		pivot
		p	7		rotation
		p	8		box
		p	9		random
		p	10		keepJigsaws
	m	(Ldvi;Lcvq;)Lhy;	a	getSize
		p	1		structureTemplateManager
		p	2		rotation
	m	(Ldvi;Lgt;Lcvq;)Ldrh;	a	getBoundingBox
		p	1		structureTemplateManager
		p	2		pos
		p	3		rotation
	m	(Ldvi;Lgt;Lcvq;Lapo;)Ljava/util/List;	a	getShuffledJigsawBlocks
		p	1		structureTemplateManager
		p	2		pos
		p	3		rotation
		p	4		random
	m	()Ldsp;	b	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldsp;	b	INSTANCE
c	dsq	net/minecraft/world/level/levelgen/structure/pools/FeaturePoolElement
	m	(Lhd;Ldsy$a;)V	<init>	<init>
		p	1		feature
		p	2		projection
	m	()Ldsx;	a	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Ldsq;)Lhd;	a	lambda$static$0
		p	0		pool
	m	(Ldvi;Lcnb;Lcmz;Lddo;Lgt;Lgt;Lcvq;Ldrh;Lapo;Z)Z	a	place
		p	1		structureTemplateManager
		p	2		world
		p	3		structureAccessor
		p	4		chunkGenerator
		p	5		pos
		p	6		pivot
		p	7		rotation
		p	8		box
		p	9		random
		p	10		keepJigsaws
	m	(Ldvi;Lcvq;)Lhy;	a	getSize
		p	1		structureTemplateManager
		p	2		rotation
	m	(Ldvi;Lgt;Lcvq;)Ldrh;	a	getBoundingBox
		p	1		structureTemplateManager
		p	2		pos
		p	3		rotation
	m	(Ldvi;Lgt;Lcvq;Lapo;)Ljava/util/List;	a	getShuffledJigsawBlocks
		p	1		structureTemplateManager
		p	2		pos
		p	3		rotation
		p	4		random
	m	()Lre;	b	fillDefaultJigsawNBT
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lhd;	b	feature
	f	Lre;	c	defaultJigsawNBT
c	dsr	net/minecraft/world/level/levelgen/structure/pools/JigsawJunction
	m	(IIIILdsy$a;)V	<init>	<init>
		p	1		sourceX
		p	2		sourceGroundY
		p	3		sourceZ
		p	4		deltaY
		p	5		destProjection
	m	()I	a	getSourceX
	m	(Lcom/mojang/serialization/Dynamic;)Ldsr;	a	deserialize
		p	0		dynamic
	m	(Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic;	a	serialize
		p	1		ops
	m	()I	b	getSourceGroundY
	m	()I	c	getSourceZ
	m	()I	d	getDeltaY
	m	()Ldsy$a;	e	getDestProjection
	f	I	a	sourceX
	f	I	b	sourceGroundY
	f	I	c	sourceZ
	f	I	d	deltaY
	f	Ldsy$a;	e	destProjection
c	dss	net/minecraft/world/level/levelgen/structure/pools/JigsawPlacement
	m	(Ladc;)Ljava/lang/String;	a	lambda$addPieces$0
		p	0		key
	m	(Laip;Lhd;Ladd;ILgt;Z)Z	a	generateJigsaw
		p	0		world
		p	1		structurePool
		p	2		id
		p	3		size
		p	4		pos
		p	5		keepJigsaws
	m	(Ldhn;IZLddo;Ldvi;Lcmk;Lapo;Lhq;Ldrl;Ljava/util/List;Ledx;)V	a	addPieces
		p	0		noiseConfig
		p	1		maxSize
		p	2		modifyBoundingBox
		p	3		chunkGenerator
		p	4		structureTemplateManager
		p	5		heightLimitView
		p	6		random
		p	7		structurePoolRegistry
		p	8		firstPiece
		p	9		pieces
		p	10		pieceShape
	m	(Ldrl;IIIIILdrh;Ldrp$a;ZLddo;Ldvi;Lcmk;Ldhy;Lhq;Ldsh;)V	a	lambda$addPieces$1
		p	14		collector
	m	(Ldrp$a;Lhd;Ljava/util/Optional;ILgt;ZLjava/util/Optional;I)Ljava/util/Optional;	a	addPieces
		p	0		context
		p	1		structurePool
		p	2		id
		p	3		size
		p	4		pos
		p	5		useExpansionHack
		p	6		projectStartToHeightmap
		p	7		maxDistanceFromCenter
	m	(Ldsw;Ladd;Lgt;Lcvq;Ldvi;Ldhy;)Ljava/util/Optional;	a	getRandomNamedJigsaw
		p	0		pool
		p	1		id
		p	2		pos
		p	3		rotation
		p	4		structureManager
		p	5		random
	m	(Lhd;)Z	a	lambda$generateJigsaw$2
		p	0		biome
	f	Lorg/slf4j/Logger;	a	LOGGER
c	dss$a	net/minecraft/world/level/levelgen/structure/pools/JigsawPlacement$PieceState
	m	(Ldrl;Lorg/apache/commons/lang3/mutable/MutableObject;I)V	<init>	<init>
		p	1		piece
		p	2		pieceShape
		p	3		currentSize
	f	Ldrl;	a	piece
	f	Lorg/apache/commons/lang3/mutable/MutableObject;	b	free
	f	I	c	depth
c	dss$b	net/minecraft/world/level/levelgen/structure/pools/JigsawPlacement$Placer
	m	(Lhq;ILddo;Ldvi;Ljava/util/List;Lapo;)V	<init>	<init>
		p	1		registry
		p	2		maxSize
		p	3		chunkGenerator
		p	4		structureTemplateManager
		p	5		children
		p	6		random
	m	(Ladc;)Ljava/lang/String;	a	lambda$tryPlacingChildren$0
		p	0		key
	m	(Ldrh;Ldvh$c;)I	a	lambda$tryPlacingChildren$4
		p	2		blockInfo
	m	(Ldrl;Lorg/apache/commons/lang3/mutable/MutableObject;IZLcmk;Ldhn;)V	a	tryPlacingChildren
		p	1		piece
		p	2		pieceShape
		p	3		minY
		p	4		modifyBoundingBox
		p	5		world
		p	6		noiseConfig
	m	(Ldvh$c;)Ladc;	a	readPoolName
		p	0		blockInfo
	m	(Lhd;)Ljava/lang/Integer;	a	lambda$tryPlacingChildren$3
		p	1		entry
	m	(Lhd;)Ljava/lang/Integer;	b	lambda$tryPlacingChildren$2
		p	1		entry
	m	(Lhd;)Lhd;	c	lambda$tryPlacingChildren$1
		p	0		entry
	f	Lhq;	a	pools
	f	I	b	maxDepth
	f	Lddo;	c	chunkGenerator
	f	Ldvi;	d	structureTemplateManager
	f	Ljava/util/List;	e	pieces
	f	Lapo;	f	random
	f	Ljava/util/Deque;	g	placing
c	dst	net/minecraft/world/level/levelgen/structure/pools/LegacySinglePoolElement
	m	(Lcom/mojang/datafixers/util/Either;Lhd;Ldsy$a;)V	<init>	<init>
		p	1		location
		p	2		processors
		p	3		projection
	m	()Ldsx;	a	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lcvq;Ldrh;Z)Ldvd;	a	getSettings
		p	1		rotation
		p	2		box
		p	3		keepJigsaws
	f	Lcom/mojang/serialization/Codec;	a	CODEC
c	dsu	net/minecraft/world/level/levelgen/structure/pools/ListPoolElement
	m	(Ljava/util/List;Ldsy$a;)V	<init>	<init>
		p	1		elements
		p	2		projection
	m	()Ldsx;	a	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Ldsu;)Ljava/util/List;	a	lambda$static$0
		p	0		pool
	m	(Ldsw;)Z	a	lambda$getBoundingBox$2
		p	0		element
	m	(Ldsy$a;)Ldsw;	a	setProjection
		p	1		projection
	m	(Ldsy$a;Ldsw;)V	a	lambda$setProjectionOnEachElement$5
		p	1		element
	m	(Ldvi;Lcnb;Lcmz;Lddo;Lgt;Lgt;Lcvq;Ldrh;Lapo;Z)Z	a	place
		p	1		structureTemplateManager
		p	2		world
		p	3		structureAccessor
		p	4		chunkGenerator
		p	5		pos
		p	6		pivot
		p	7		rotation
		p	8		box
		p	9		random
		p	10		keepJigsaws
	m	(Ldvi;Lcvq;)Lhy;	a	getSize
		p	1		structureTemplateManager
		p	2		rotation
	m	(Ldvi;Lgt;Lcvq;)Ldrh;	a	getBoundingBox
		p	1		structureTemplateManager
		p	2		pos
		p	3		rotation
	m	(Ldvi;Lgt;Lcvq;Lapo;)Ljava/util/List;	a	getShuffledJigsawBlocks
		p	1		structureTemplateManager
		p	2		pos
		p	3		rotation
		p	4		random
	m	(Ldvi;Lgt;Lcvq;Ldsw;)Ldrh;	a	lambda$getBoundingBox$3
		p	3		element
	m	()Ljava/lang/IllegalStateException;	b	lambda$getBoundingBox$4
	m	(Ldsy$a;)V	b	setProjectionOnEachElement
		p	1		projection
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/List;	b	elements
c	dsv	net/minecraft/world/level/levelgen/structure/pools/SinglePoolElement
	m	(Lcom/mojang/datafixers/util/Either;Lhd;Ldsy$a;)V	<init>	<init>
		p	1		location
		p	2		processors
		p	3		projection
	m	()Ldsx;	a	getType
	m	(Lcom/mojang/datafixers/util/Either;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	encodeTemplate
		p	0		location
		p	1		ops
		p	2		prefix
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Lcvq;Ldrh;Z)Ldvd;	a	getSettings
		p	1		rotation
		p	2		box
		p	3		keepJigsaws
	m	(Ldsv;)Lcom/mojang/datafixers/util/Either;	a	lambda$templateCodec$3
		p	0		pool
	m	(Ldvi;)Ldvh;	a	getTemplate
		p	1		structureTemplateManager
	m	(Ldvi;Lcnb;Lcmz;Lddo;Lgt;Lgt;Lcvq;Ldrh;Lapo;Z)Z	a	place
		p	1		structureTemplateManager
		p	2		world
		p	3		structureAccessor
		p	4		chunkGenerator
		p	5		pos
		p	6		pivot
		p	7		rotation
		p	8		box
		p	9		random
		p	10		keepJigsaws
	m	(Ldvi;Lcvq;)Lhy;	a	getSize
		p	1		structureTemplateManager
		p	2		rotation
	m	(Ldvi;Lgt;Lcvq;)Ldrh;	a	getBoundingBox
		p	1		structureTemplateManager
		p	2		pos
		p	3		rotation
	m	(Ldvi;Lgt;Lcvq;Lapo;)Ljava/util/List;	a	getShuffledJigsawBlocks
		p	1		structureTemplateManager
		p	2		pos
		p	3		rotation
		p	4		random
	m	(Ldvi;Lgt;Lcvq;Z)Ljava/util/List;	a	getDataMarkers
		p	1		structureTemplateManager
		p	2		pos
		p	3		rotation
		p	4		mirroredAndRotated
	m	()Lcom/mojang/serialization/codecs/RecordCodecBuilder;	b	processorsCodec
	m	(Ldsv;)Lhd;	b	lambda$processorsCodec$2
		p	0		pool
	m	()Lcom/mojang/serialization/codecs/RecordCodecBuilder;	c	templateCodec
	m	()Ljava/lang/String;	h	lambda$encodeTemplate$0
	f	Lcom/mojang/serialization/Codec;	a	TEMPLATE_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lcom/mojang/datafixers/util/Either;	c	template
	f	Lhd;	d	processors
c	dsw	net/minecraft/world/level/levelgen/structure/pools/StructurePoolElement
	m	(Ldsy$a;)V	<init>	<init>
		p	1		projection
	m	()Ldsx;	a	getType
	m	(Lcmj;Ldvh$c;Lgt;Lcvq;Lapo;Ldrh;)V	a	handleDataMarker
		p	1		world
		p	2		structureBlockInfo
		p	3		pos
		p	4		rotation
		p	5		random
		p	6		box
	m	(Ldsy$a;)Ldsw;	a	setProjection
		p	1		projection
	m	(Ldsy$a;Ljava/util/function/Function;)Ldsw;	a	lambda$list$6
		p	1		elementGetter
	m	(Ldvi;Lcnb;Lcmz;Lddo;Lgt;Lgt;Lcvq;Ldrh;Lapo;Z)Z	a	place
		p	1		structureTemplateManager
		p	2		world
		p	3		structureAccessor
		p	4		chunkGenerator
		p	5		pos
		p	6		pivot
		p	7		rotation
		p	8		box
		p	9		random
		p	10		keepJigsaws
	m	(Ldvi;Lcvq;)Lhy;	a	getSize
		p	1		structureTemplateManager
		p	2		rotation
	m	(Ldvi;Lgt;Lcvq;)Ldrh;	a	getBoundingBox
		p	1		structureTemplateManager
		p	2		pos
		p	3		rotation
	m	(Ldvi;Lgt;Lcvq;Lapo;)Ljava/util/List;	a	getShuffledJigsawBlocks
		p	1		structureTemplateManager
		p	2		pos
		p	3		rotation
		p	4		random
	m	(Lhd;)Ljava/util/function/Function;	a	feature
		p	0		placedFeatureEntry
	m	(Lhd;Ldsy$a;)Ldsq;	a	lambda$feature$5
		p	1		projection
	m	(Ljava/lang/String;)Ljava/util/function/Function;	a	legacy
		p	0		id
	m	(Ljava/lang/String;Ldsy$a;)Ldsv;	a	lambda$single$3
		p	1		projection
	m	(Ljava/lang/String;Lhd;)Ljava/util/function/Function;	a	legacy
		p	0		id
		p	1		processorListEntry
	m	(Ljava/lang/String;Lhd;Ldsy$a;)Ldsv;	a	lambda$single$4
		p	2		projection
	m	(Ljava/util/List;)Ljava/util/function/Function;	a	list
		p	0		elementGetters
	m	(Ljava/util/List;Ldsy$a;)Ldsu;	a	lambda$list$7
		p	1		projection
	m	(Ldsy$a;)Ldsp;	b	lambda$empty$0
		p	0		projection
	m	(Ljava/lang/String;)Ljava/util/function/Function;	b	single
		p	0		id
	m	(Ljava/lang/String;Ldsy$a;)Ldst;	b	lambda$legacy$1
		p	1		projection
	m	(Ljava/lang/String;Lhd;)Ljava/util/function/Function;	b	single
		p	0		id
		p	1		processorListEntry
	m	(Ljava/lang/String;Lhd;Ldsy$a;)Ldst;	b	lambda$legacy$2
		p	2		projection
	m	()Lcom/mojang/serialization/codecs/RecordCodecBuilder;	d	projectionCodec
	m	()Ldsy$a;	e	getProjection
	m	()I	f	getGroundLevelDelta
	m	()Ljava/util/function/Function;	g	empty
	f	Lhd;	a	EMPTY
	f	Ldsy$a;	b	projection
	f	Lcom/mojang/serialization/Codec;	e	CODEC
c	dsx	net/minecraft/world/level/levelgen/structure/pools/StructurePoolElementType
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	lambda$register$0
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Ldsx;	a	register
		p	0		id
		p	1		codec
	f	Ldsx;	a	SINGLE
	f	Ldsx;	b	LIST
	f	Ldsx;	c	FEATURE
	f	Ldsx;	d	EMPTY
	f	Ldsx;	e	LEGACY
c	dsy	net/minecraft/world/level/levelgen/structure/pools/StructureTemplatePool
	m	(Lhd;Ljava/util/List;)V	<init>	<init>
		p	1		fallback
		p	2		elementCounts
	m	(Lhd;Ljava/util/List;Ldsy$a;)V	<init>	<init>
		p	1		fallback
		p	2		elementCountsByGetters
		p	3		projection
	m	()Lhd;	a	getFallback
	m	(Lapo;)Ldsw;	a	getRandomTemplate
		p	1		random
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Ldsw;)Z	a	lambda$getMaxSize$2
		p	0		element
	m	(Ldsy;)Ljava/util/List;	a	lambda$static$0
		p	0		pool
	m	(Ldvi;)I	a	getMaxSize
		p	1		structureTemplateManager
	m	(Ldvi;Ldsw;)I	a	lambda$getMaxSize$3
		p	1		element
	m	()I	b	size
	m	(Lapo;)Ljava/util/List;	b	getShuffledTemplates
		p	1		random
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	I	c	SIZE_UNSET
	f	Lorg/apache/commons/lang3/mutable/MutableObject;	d	CODEC_REFERENCE
	f	Ljava/util/List;	e	rawTemplates
	f	Lit/unimi/dsi/fastutil/objects/ObjectArrayList;	f	templates
	f	Lhd;	g	fallback
	f	I	h	maxSize
c	dsy$a	net/minecraft/world/level/levelgen/structure/pools/StructureTemplatePool$Projection
	m	(Ljava/lang/String;ILjava/lang/String;Lcom/google/common/collect/ImmutableList;)V	<init>	<init>
		p	3		id
		p	4		processors
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/lang/String;)Ldsy$a;	a	byName
		p	0		id
	m	()Lcom/google/common/collect/ImmutableList;	b	getProcessors
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Ldsy$a;	d	$values
	f	Ldsy$a;	a	TERRAIN_MATCHING
	f	Ldsy$a;	b	RIGID
	f	Laqa$a;	c	CODEC
	f	Ljava/lang/String;	d	name
	f	Lcom/google/common/collect/ImmutableList;	e	processors
	f	[Ldsy$a;	f	$VALUES
c	dsz	net/minecraft/world/level/levelgen/structure/pools/package-info
c	dta	net/minecraft/world/level/levelgen/structure/structures/BuriedTreasurePieces
c	dta$a	net/minecraft/world/level/levelgen/structure/structures/BuriedTreasurePieces$BuriedTreasurePiece
	m	(Lgt;)V	<init>	<init>
		p	1		pos
	m	(Lre;)V	<init>	<init>
		p	1		nbt
	m	(Lcnb;Lcmz;Lddo;Lapo;Ldrh;Lclp;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldsf;Lre;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	m	(Ldbq;)Z	b	isLiquid
		p	1		state
c	dtb	net/minecraft/world/level/levelgen/structure/structures/BuriedTreasureStructure
	m	(Ldrp$c;)V	<init>	<init>
		p	1		config
	m	(Ldrp$a;)Ljava/util/Optional;	a	findGenerationPoint
		p	1		context
	m	(Ldrp$a;Ldsh;)V	a	lambda$findGenerationPoint$0
		p	1		collector
	m	(Ldsh;Ldrp$a;)V	a	generatePieces
		p	0		collector
		p	1		context
	m	()Ldry;	e	type
	f	Lcom/mojang/serialization/Codec;	d	CODEC
c	dtc	net/minecraft/world/level/levelgen/structure/structures/DesertPyramidPiece
	m	(Lapo;II)V	<init>	<init>
		p	1		random
		p	2		x
		p	3		z
	m	(Lre;)V	<init>	<init>
		p	1		nbt
	m	(IIILdrh;)V	a	placeSand
		p	1		x
		p	2		y
		p	3		z
		p	4		chunkBox
	m	(Lcnb;IIILdrh;)V	a	placeCollapsedRoofPiece
		p	1		world
		p	2		x
		p	3		y
		p	4		z
		p	5		chunkBox
	m	(Lcnb;Lcmz;Lddo;Lapo;Ldrh;Lclp;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Lcnb;Ldrh;)V	a	addCellar
		p	1		world
		p	2		chunkBox
	m	(Lcnb;Ldrh;IIIII)V	a	placeCollapsedRoof
		p	1		world
		p	2		chunkBox
		p	3		startX
		p	4		y
		p	5		startZ
		p	6		endX
		p	7		endZ
	m	(Ldrh;IIIIII)V	a	placeSandBox
		p	1		chunkBox
		p	2		startX
		p	3		startY
		p	4		startZ
		p	5		endX
		p	6		endY
		p	7		endZ
	m	(Ldsf;Lre;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	m	(Lgt;Lcnb;Ldrh;)V	a	addCellarStairs
		p	1		pos
		p	2		world
		p	3		chunkBox
	m	()Ljava/util/List;	b	getPotentialSuspiciousSandWorldPositions
	m	(Lgt;Lcnb;Ldrh;)V	b	addCellarRoom
		p	1		pos
		p	2		world
		p	3		chunkBox
	f	I	h	WIDTH
	f	I	i	DEPTH
	f	[Z	j	hasPlacedChest
	f	Ljava/util/List;	k	potentialSuspiciousSandWorldPositions
c	dtd	net/minecraft/world/level/levelgen/structure/structures/DesertPyramidStructure
	m	(Ldrp$c;)V	<init>	<init>
		p	1		config
	m	(Lcnb;Lcmz;Lddo;Lapo;Ldrh;Lclp;Ldse;)V	a	afterPlace
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		box
		p	6		chunkPos
		p	7		pieces
	m	(Lgt;Ldap;)V	a	lambda$afterPlace$0
		p	1		blockEntity
	m	()Ldry;	e	type
	f	Lcom/mojang/serialization/Codec;	d	CODEC
c	dte	net/minecraft/world/level/levelgen/structure/structures/EndCityPieces
	m	(Ldvi;Ldte$a;Lgt;Ljava/lang/String;Lcvq;Z)Ldte$a;	a	addPiece
		p	0		structureTemplateManager
		p	1		lastPiece
		p	2		relativePosition
		p	3		template
		p	4		rotation
		p	5		ignoreAir
	m	(Ldvi;Ldte$b;ILdte$a;Lgt;Ljava/util/List;Lapo;)Z	a	recursiveChildren
		p	0		manager
		p	1		piece
		p	2		depth
		p	3		parent
		p	4		pos
		p	5		pieces
		p	6		random
	m	(Ldvi;Lgt;Lcvq;Ljava/util/List;Lapo;)V	a	startHouseTower
		p	0		structureTemplateManager
		p	1		pos
		p	2		rotation
		p	3		pieces
		p	4		random
	m	(Ljava/util/List;Ldte$a;)Ldte$a;	a	addHelper
		p	0		pieces
		p	1		piece
	f	I	a	MAX_GEN_DEPTH
	f	Ldte$b;	b	HOUSE_TOWER_GENERATOR
	f	Ljava/util/List;	c	TOWER_BRIDGES
	f	Ldte$b;	d	TOWER_GENERATOR
	f	Ldte$b;	e	TOWER_BRIDGE_GENERATOR
	f	Ljava/util/List;	f	FAT_TOWER_BRIDGES
	f	Ldte$b;	g	FAT_TOWER_GENERATOR
c	dte$1	net/minecraft/world/level/levelgen/structure/structures/EndCityPieces$1
	m	()V	a	init
	m	(Ldvi;ILdte$a;Lgt;Ljava/util/List;Lapo;)Z	a	generate
		p	1		manager
		p	2		depth
		p	3		root
		p	4		pos
		p	5		pieces
		p	6		random
c	dte$2	net/minecraft/world/level/levelgen/structure/structures/EndCityPieces$2
	m	()V	a	init
	m	(Ldvi;ILdte$a;Lgt;Ljava/util/List;Lapo;)Z	a	generate
		p	1		manager
		p	2		depth
		p	3		root
		p	4		pos
		p	5		pieces
		p	6		random
c	dte$3	net/minecraft/world/level/levelgen/structure/structures/EndCityPieces$3
	m	()V	a	init
	m	(Ldvi;ILdte$a;Lgt;Ljava/util/List;Lapo;)Z	a	generate
		p	1		manager
		p	2		depth
		p	3		root
		p	4		pos
		p	5		pieces
		p	6		random
	f	Z	a	shipCreated
c	dte$4	net/minecraft/world/level/levelgen/structure/structures/EndCityPieces$4
	m	()V	a	init
	m	(Ldvi;ILdte$a;Lgt;Ljava/util/List;Lapo;)Z	a	generate
		p	1		manager
		p	2		depth
		p	3		root
		p	4		pos
		p	5		pieces
		p	6		random
c	dte$a	net/minecraft/world/level/levelgen/structure/structures/EndCityPieces$EndCityPiece
	m	(Ldvi;Ljava/lang/String;Lgt;Lcvq;Z)V	<init>	<init>
		p	1		manager
		p	2		template
		p	3		pos
		p	4		rotation
		p	5		includeAir
	m	(Ldvi;Lre;)V	<init>	<init>
		p	1		manager
		p	2		nbt
	m	(Ldsf;Lre;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	m	(Ljava/lang/String;)Ladd;	a	makeResourceLocation
		p	0		template
	m	(Ljava/lang/String;Lgt;Lcmx;Lapo;Ldrh;)V	a	handleDataMarker
		p	1		metadata
		p	2		pos
		p	3		world
		p	4		random
		p	5		boundingBox
	m	(Lre;Ladd;)Ldvd;	a	lambda$new$0
		p	1		id
	m	(ZLcvq;)Ldvd;	a	makeSettings
		p	0		includeAir
		p	1		rotation
	m	()Ladd;	b	makeTemplateLocation
c	dte$b	net/minecraft/world/level/levelgen/structure/structures/EndCityPieces$SectionGenerator
	m	()V	a	init
	m	(Ldvi;ILdte$a;Lgt;Ljava/util/List;Lapo;)Z	a	generate
		p	1		manager
		p	2		depth
		p	3		root
		p	4		pos
		p	5		pieces
		p	6		random
c	dtf	net/minecraft/world/level/levelgen/structure/structures/EndCityStructure
	m	(Ldrp$c;)V	<init>	<init>
		p	1		config
	m	(Ldrp$a;)Ljava/util/Optional;	a	findGenerationPoint
		p	1		context
	m	(Ldsh;Lgt;Lcvq;Ldrp$a;)V	a	generatePieces
		p	1		collector
		p	2		pos
		p	3		rotation
		p	4		context
	m	(Lgt;Lcvq;Ldrp$a;Ldsh;)V	a	lambda$findGenerationPoint$0
		p	4		collector
	m	()Ldry;	e	type
	f	Lcom/mojang/serialization/Codec;	d	CODEC
c	dtg	net/minecraft/world/level/levelgen/structure/structures/IglooPieces
	m	(Ldvi;Lgt;Lcvq;Ldru;Lapo;)V	a	addPieces
		p	0		manager
		p	1		pos
		p	2		rotation
		p	3		holder
		p	4		random
	f	I	a	GENERATION_HEIGHT
	f	Ladd;	b	STRUCTURE_LOCATION_IGLOO
	f	Ladd;	c	STRUCTURE_LOCATION_LADDER
	f	Ladd;	d	STRUCTURE_LOCATION_LABORATORY
	f	Ljava/util/Map;	e	PIVOTS
	f	Ljava/util/Map;	f	OFFSETS
c	dtg$a	net/minecraft/world/level/levelgen/structure/structures/IglooPieces$IglooPiece
	m	(Ldvi;Ladd;Lgt;Lcvq;I)V	<init>	<init>
		p	1		manager
		p	2		identifier
		p	3		pos
		p	4		rotation
		p	5		yOffset
	m	(Ldvi;Lre;)V	<init>	<init>
		p	1		manager
		p	2		nbt
	m	(Ladd;Lgt;I)Lgt;	a	makePosition
		p	0		identifier
		p	1		pos
		p	2		yOffset
	m	(Lcnb;Lcmz;Lddo;Lapo;Ldrh;Lclp;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Lcvq;Ladd;)Ldvd;	a	makeSettings
		p	0		rotation
		p	1		identifier
	m	(Ldsf;Lre;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	m	(Ljava/lang/String;Lgt;Lcmx;Lapo;Ldrh;)V	a	handleDataMarker
		p	1		metadata
		p	2		pos
		p	3		world
		p	4		random
		p	5		boundingBox
	m	(Lre;Ladd;)Ldvd;	a	lambda$new$0
		p	1		identifier
c	dth	net/minecraft/world/level/levelgen/structure/structures/IglooStructure
	m	(Ldrp$c;)V	<init>	<init>
		p	1		config
	m	(Ldrp$a;)Ljava/util/Optional;	a	findGenerationPoint
		p	1		context
	m	(Ldrp$a;Ldsh;)V	a	lambda$findGenerationPoint$0
		p	2		collector
	m	(Ldsh;Ldrp$a;)V	a	generatePieces
		p	1		collector
		p	2		context
	m	()Ldry;	e	type
	f	Lcom/mojang/serialization/Codec;	d	CODEC
c	dti	net/minecraft/world/level/levelgen/structure/structures/JigsawStructure
	m	(Ldrp$c;Lhd;ILdpw;Z)V	<init>	<init>
		p	1		config
		p	2		startPool
		p	3		size
		p	4		startHeight
		p	5		useExpansionHack
	m	(Ldrp$c;Lhd;ILdpw;ZLdgz$a;)V	<init>	<init>
		p	1		config
		p	2		startPool
		p	3		size
		p	4		startHeight
		p	5		useExpansionHack
		p	6		projectStartToHeightmap
	m	(Ldrp$c;Lhd;Ljava/util/Optional;ILdpw;ZLjava/util/Optional;I)V	<init>	<init>
		p	1		config
		p	2		startPool
		p	3		startJigsawName
		p	4		size
		p	5		startHeight
		p	6		useExpansionHack
		p	7		projectStartToHeightmap
		p	8		maxDistanceFromCenter
	m	(Ldrp$a;)Ljava/util/Optional;	a	findGenerationPoint
		p	1		context
	m	(Ldti;)Lcom/mojang/serialization/DataResult;	a	lambda$verifyRange$9
		p	0		feature
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$7
		p	0		instance
	m	(Ldti;)Ljava/lang/Integer;	b	lambda$static$6
		p	0		structure
	m	(Ldti;)Ljava/util/Optional;	c	lambda$static$5
		p	0		structure
	m	(Ldti;)Ljava/lang/Boolean;	d	lambda$static$4
		p	0		structure
	m	()Ldry;	e	type
	m	(Ldti;)Ldpw;	e	lambda$static$3
		p	0		structure
	m	()Ljava/util/function/Function;	f	verifyRange
	m	(Ldti;)Ljava/lang/Integer;	f	lambda$static$2
		p	0		structure
	m	()Ljava/lang/String;	g	lambda$verifyRange$8
	m	(Ldti;)Ljava/util/Optional;	g	lambda$static$1
		p	0		structure
	m	(Ldti;)Lhd;	h	lambda$static$0
		p	0		structure
	f	I	d	MAX_TOTAL_STRUCTURE_RANGE
	f	Lcom/mojang/serialization/Codec;	e	CODEC
	f	Lhd;	f	startPool
	f	Ljava/util/Optional;	g	startJigsawName
	f	I	h	maxDepth
	f	Ldpw;	i	startHeight
	f	Z	j	useExpansionHack
	f	Ljava/util/Optional;	k	projectStartToHeightmap
	f	I	l	maxDistanceFromCenter
c	dti$1	net/minecraft/world/level/levelgen/structure/structures/JigsawStructure$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$levelgen$structure$TerrainAdjustment
c	dtj	net/minecraft/world/level/levelgen/structure/structures/JungleTemplePiece
	m	(Lapo;II)V	<init>	<init>
		p	1		random
		p	2		x
		p	3		z
	m	(Lre;)V	<init>	<init>
		p	1		nbt
	m	(Lcnb;Lcmz;Lddo;Lapo;Ldrh;Lclp;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldsf;Lre;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	f	I	h	WIDTH
	f	I	i	DEPTH
	f	Z	j	placedMainChest
	f	Z	k	placedHiddenChest
	f	Z	l	placedTrap1
	f	Z	m	placedTrap2
	f	Ldtj$a;	n	STONE_SELECTOR
c	dtj$a	net/minecraft/world/level/levelgen/structure/structures/JungleTemplePiece$MossStoneSelector
	m	(Lapo;IIIZ)V	a	next
		p	1		random
		p	2		x
		p	3		y
		p	4		z
		p	5		placeBlock
c	dtk	net/minecraft/world/level/levelgen/structure/structures/JungleTempleStructure
	m	(Ldrp$c;)V	<init>	<init>
		p	1		config
	m	()Ldry;	e	type
	f	Lcom/mojang/serialization/Codec;	d	CODEC
c	dtl	net/minecraft/world/level/levelgen/structure/structures/MineshaftPieces
	m	(Ldrt;Ldru;Lapo;IIILgz;I)Ldtl$c;	a	generateAndAddPiece
		p	0		start
		p	1		holder
		p	2		random
		p	3		x
		p	4		y
		p	5		z
		p	6		orientation
		p	7		chainLength
	m	(Ldru;Lapo;IIILgz;ILdtm$a;)Ldtl$c;	a	createRandomShaftPiece
		p	0		holder
		p	1		random
		p	2		x
		p	3		y
		p	4		z
		p	5		orientation
		p	6		chainLength
		p	7		type
	f	I	a	MAGIC_START_Y
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	I	c	DEFAULT_SHAFT_WIDTH
	f	I	d	DEFAULT_SHAFT_HEIGHT
	f	I	e	DEFAULT_SHAFT_LENGTH
	f	I	f	MAX_PILLAR_HEIGHT
	f	I	g	MAX_CHAIN_HEIGHT
	f	I	h	MAX_DEPTH
c	dtl$1	net/minecraft/world/level/levelgen/structure/structures/MineshaftPieces$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	dtl$a	net/minecraft/world/level/levelgen/structure/structures/MineshaftPieces$MineShaftCorridor
	m	(ILapo;Ldrh;Lgz;Ldtm$a;)V	<init>	<init>
		p	1		chainLength
		p	2		random
		p	3		boundingBox
		p	4		orientation
		p	5		type
	m	(Lre;)V	<init>	<init>
		p	1		nbt
	m	(Lcml;Lgt;Ldbq;)Z	a	canPlaceColumnOnTopOf
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcnb;Lcmz;Lddo;Lapo;Ldrh;Lclp;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Lcnb;Ldbq;Lgt$a;II)V	a	fillColumnBetween
		p	0		world
		p	1		state
		p	2		pos
		p	3		startY
		p	4		endY
	m	(Lcnb;Ldrh;III)V	a	placeDoubleLowerOrUpperSupport
		p	1		world
		p	2		box
		p	3		x
		p	4		y
		p	5		z
	m	(Lcnb;Ldrh;IIII)Z	a	hasSturdyNeighbours
		p	1		world
		p	2		box
		p	3		x
		p	4		y
		p	5		z
		p	6		count
	m	(Lcnb;Ldrh;IIIIILapo;)V	a	placeSupport
		p	1		world
		p	2		boundingBox
		p	3		minX
		p	4		minY
		p	5		z
		p	6		maxY
		p	7		maxX
		p	8		random
	m	(Lcnb;Ldrh;Lapo;FIII)V	a	maybePlaceCobWeb
		p	1		world
		p	2		box
		p	3		random
		p	4		threshold
		p	5		x
		p	6		y
		p	7		z
	m	(Lcnb;Ldrh;Lapo;IIILadd;)Z	a	createChest
		p	1		world
		p	2		boundingBox
		p	3		random
		p	4		x
		p	5		y
		p	6		z
		p	7		lootTableId
	m	(Ldrt;Ldru;Lapo;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Ldru;Lapo;IIILgz;)Ldrh;	a	findCorridorSize
		p	0		holder
		p	1		random
		p	2		x
		p	3		y
		p	4		z
		p	5		orientation
	m	(Ldsf;Lre;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	m	(Lcml;Lgt;Ldbq;)Z	b	canHangChainBelow
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcnb;Ldbq;IIILdrh;)V	b	fillColumnDown
		p	1		world
		p	2		state
		p	3		x
		p	4		y
		p	5		z
		p	6		box
	m	(Lcnb;Ldbq;IIILdrh;)V	c	fillPillarDownOrChainUp
		p	1		world
		p	2		state
		p	3		x
		p	4		y
		p	5		z
		p	6		box
	f	Z	b	hasRails
	f	Z	c	spiderCorridor
	f	Z	d	hasPlacedSpider
	f	I	h	numSections
c	dtl$b	net/minecraft/world/level/levelgen/structure/structures/MineshaftPieces$MineShaftCrossing
	m	(ILdrh;Lgz;Ldtm$a;)V	<init>	<init>
		p	1		chainLength
		p	2		boundingBox
		p	3		orientation
		p	4		type
	m	(Lre;)V	<init>	<init>
		p	1		nbt
	m	(Lcnb;Lcmz;Lddo;Lapo;Ldrh;Lclp;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Lcnb;Ldrh;IIII)V	a	placeSupportPillar
		p	1		world
		p	2		boundingBox
		p	3		x
		p	4		minY
		p	5		z
		p	6		maxY
	m	(Ldrt;Ldru;Lapo;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Ldru;Lapo;IIILgz;)Ldrh;	a	findCrossing
		p	0		holder
		p	1		random
		p	2		x
		p	3		y
		p	4		z
		p	5		orientation
	m	(Ldsf;Lre;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	f	Lgz;	b	direction
	f	Z	c	isTwoFloored
c	dtl$c	net/minecraft/world/level/levelgen/structure/structures/MineshaftPieces$MineShaftPiece
	m	(Ldsg;ILdtm$a;Ldrh;)V	<init>	<init>
		p	1		structurePieceType
		p	2		chainLength
		p	3		type
		p	4		box
	m	(Ldsg;Lre;)V	<init>	<init>
		p	1		type
		p	2		nbt
	m	(Lclo;Ldrh;IIII)Z	a	isSupportingBox
		p	1		world
		p	2		boundingBox
		p	3		minX
		p	4		maxX
		p	5		y
		p	6		z
	m	(Lcmj;Ldrh;)Z	a	isInInvalidLocation
		p	1		world
		p	2		box
	m	(Lcml;IIILdrh;)Z	a	canBeReplaced
		p	1		world
		p	2		x
		p	3		y
		p	4		z
		p	5		box
	m	(Lcnb;Ldrh;Ldbq;III)V	a	setPlanksBlock
		p	1		world
		p	2		box
		p	3		state
		p	4		x
		p	5		y
		p	6		z
	m	(Ldsf;Lre;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	f	Ldtm$a;	a	type
c	dtl$d	net/minecraft/world/level/levelgen/structure/structures/MineshaftPieces$MineShaftRoom
	m	(ILapo;IILdtm$a;)V	<init>	<init>
		p	1		chainLength
		p	2		random
		p	3		x
		p	4		z
		p	5		type
	m	(Lre;)V	<init>	<init>
		p	1		nbt
	m	(III)V	a	move
		p	1		x
		p	2		y
		p	3		z
	m	(Lcnb;Lcmz;Lddo;Lapo;Ldrh;Lclp;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldrt;Ldru;Lapo;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Ldsf;Lre;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	m	(Lre;Lrx;)V	a	lambda$addAdditionalSaveData$0
	f	Ljava/util/List;	b	childEntranceBoxes
c	dtl$e	net/minecraft/world/level/levelgen/structure/structures/MineshaftPieces$MineShaftStairs
	m	(ILdrh;Lgz;Ldtm$a;)V	<init>	<init>
		p	1		chainLength
		p	2		boundingBox
		p	3		orientation
		p	4		type
	m	(Lre;)V	<init>	<init>
		p	1		nbt
	m	(Lcnb;Lcmz;Lddo;Lapo;Ldrh;Lclp;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldrt;Ldru;Lapo;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Ldru;Lapo;IIILgz;)Ldrh;	a	findStairs
		p	0		holder
		p	1		random
		p	2		x
		p	3		y
		p	4		z
		p	5		orientation
c	dtm	net/minecraft/world/level/levelgen/structure/structures/MineshaftStructure
	m	(Ldrp$c;Ldtm$a;)V	<init>	<init>
		p	1		config
		p	2		type
	m	(Ldrp$a;)Ljava/util/Optional;	a	findGenerationPoint
		p	1		context
	m	(Ldsh;Ldrp$a;)I	a	generatePiecesAndAdjust
		p	1		collector
		p	2		context
	m	(Ldtm;)Ldtm$a;	a	lambda$static$0
		p	0		mineshaftStructure
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$1
	m	()Ldry;	e	type
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	Ldtm$a;	e	type
c	dtm$a	net/minecraft/world/level/levelgen/structure/structures/MineshaftStructure$Type
	m	(Ljava/lang/String;ILjava/lang/String;Lcpi;Lcpi;Lcpi;)V	<init>	<init>
		p	3		name
		p	4		log
		p	5		planks
		p	6		fence
	m	()Ljava/lang/String;	a	getName
	m	(I)Ldtm$a;	a	byId
		p	0		id
	m	()Ldbq;	b	getWoodState
	m	()Ljava/lang/String;	c	getSerializedName
	m	()Ldbq;	d	getPlanksState
	m	()Ldbq;	e	getFenceState
	m	()[Ldtm$a;	f	$values
	f	Ldtm$a;	a	NORMAL
	f	Ldtm$a;	b	MESA
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Ljava/util/function/IntFunction;	d	BY_ID
	f	Ljava/lang/String;	e	name
	f	Ldbq;	f	woodState
	f	Ldbq;	g	planksState
	f	Ldbq;	h	fenceState
	f	[Ldtm$a;	i	$VALUES
c	dtn	net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces
	m	(Ldtn$n;Ldru;Lapo;IIILgz;I)Ldtn$m;	a	findAndCreateBridgePieceFactory
		p	0		pieceData
		p	1		holder
		p	2		random
		p	3		x
		p	4		y
		p	5		z
		p	6		orientation
		p	7		chainLength
	f	I	a	MAGIC_START_Y
	f	I	b	MAX_DEPTH
	f	I	c	LOWEST_Y_POSITION
	f	[Ldtn$n;	d	BRIDGE_PIECE_WEIGHTS
	f	[Ldtn$n;	e	CASTLE_PIECE_WEIGHTS
c	dtn$1	net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	dtn$a	net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$BridgeCrossing
	m	(IILgz;)V	<init>	<init>
		p	1		x
		p	2		z
		p	3		orientation
	m	(ILdrh;Lgz;)V	<init>	<init>
		p	1		chainLength
		p	2		boundingBox
		p	3		orientation
	m	(Ldsg;Lre;)V	<init>	<init>
		p	1		type
		p	2		nbt
	m	(Lre;)V	<init>	<init>
		p	1		nbt
	m	(Lcnb;Lcmz;Lddo;Lapo;Ldrh;Lclp;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldrt;Ldru;Lapo;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Ldru;IIILgz;I)Ldtn$a;	a	createPiece
		p	0		holder
		p	1		x
		p	2		y
		p	3		z
		p	4		orientation
		p	5		chainLength
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
c	dtn$b	net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$BridgeEndFiller
	m	(ILapo;Ldrh;Lgz;)V	<init>	<init>
		p	1		chainLength
		p	2		random
		p	3		boundingBox
		p	4		orientation
	m	(Lre;)V	<init>	<init>
		p	1		nbt
	m	(Lcnb;Lcmz;Lddo;Lapo;Ldrh;Lclp;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldru;Lapo;IIILgz;I)Ldtn$b;	a	createPiece
		p	0		holder
		p	1		random
		p	2		x
		p	3		y
		p	4		z
		p	5		orientation
		p	6		chainLength
	m	(Ldsf;Lre;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
	f	I	d	selfSeed
c	dtn$c	net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$BridgeStraight
	m	(ILapo;Ldrh;Lgz;)V	<init>	<init>
		p	1		chainLength
		p	2		random
		p	3		boundingBox
		p	4		orientation
	m	(Lre;)V	<init>	<init>
		p	1		nbt
	m	(Lcnb;Lcmz;Lddo;Lapo;Ldrh;Lclp;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldrt;Ldru;Lapo;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Ldru;Lapo;IIILgz;I)Ldtn$c;	a	createPiece
		p	0		holder
		p	1		random
		p	2		x
		p	3		y
		p	4		z
		p	5		orientation
		p	6		chainLength
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
c	dtn$d	net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleCorridorStairsPiece
	m	(ILdrh;Lgz;)V	<init>	<init>
		p	1		chainLength
		p	2		boundingBox
		p	3		orientation
	m	(Lre;)V	<init>	<init>
		p	1		nbt
	m	(Lcnb;Lcmz;Lddo;Lapo;Ldrh;Lclp;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldrt;Ldru;Lapo;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Ldru;IIILgz;I)Ldtn$d;	a	createPiece
		p	0		holder
		p	1		x
		p	2		y
		p	3		z
		p	4		orientation
		p	5		chainLength
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
c	dtn$e	net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleCorridorTBalconyPiece
	m	(ILdrh;Lgz;)V	<init>	<init>
		p	1		chainLength
		p	2		boundingBox
		p	3		orientation
	m	(Lre;)V	<init>	<init>
		p	1		nbt
	m	(Lcnb;Lcmz;Lddo;Lapo;Ldrh;Lclp;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldrt;Ldru;Lapo;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Ldru;IIILgz;I)Ldtn$e;	a	createPiece
		p	0		holder
		p	1		x
		p	2		y
		p	3		z
		p	4		orientation
		p	5		chainLength
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
c	dtn$f	net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleEntrance
	m	(ILapo;Ldrh;Lgz;)V	<init>	<init>
		p	1		chainLength
		p	2		random
		p	3		boundingBox
		p	4		orientation
	m	(Lre;)V	<init>	<init>
		p	1		nbt
	m	(Lcnb;Lcmz;Lddo;Lapo;Ldrh;Lclp;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldrt;Ldru;Lapo;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Ldru;Lapo;IIILgz;I)Ldtn$f;	a	createPiece
		p	0		holder
		p	1		random
		p	2		x
		p	3		y
		p	4		z
		p	5		orientation
		p	6		chainLength
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
c	dtn$g	net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleSmallCorridorCrossingPiece
	m	(ILdrh;Lgz;)V	<init>	<init>
		p	1		chainLength
		p	2		boundingBox
		p	3		orientation
	m	(Lre;)V	<init>	<init>
		p	1		nbt
	m	(Lcnb;Lcmz;Lddo;Lapo;Ldrh;Lclp;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldrt;Ldru;Lapo;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Ldru;IIILgz;I)Ldtn$g;	a	createPiece
		p	0		holder
		p	1		x
		p	2		y
		p	3		z
		p	4		orientation
		p	5		chainLength
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
c	dtn$h	net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleSmallCorridorLeftTurnPiece
	m	(ILapo;Ldrh;Lgz;)V	<init>	<init>
		p	1		chainLength
		p	2		random
		p	3		boundingBox
		p	4		orientation
	m	(Lre;)V	<init>	<init>
		p	1		nbt
	m	(Lcnb;Lcmz;Lddo;Lapo;Ldrh;Lclp;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldrt;Ldru;Lapo;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Ldru;Lapo;IIILgz;I)Ldtn$h;	a	createPiece
		p	0		holder
		p	1		random
		p	2		x
		p	3		y
		p	4		z
		p	5		orientation
		p	6		chainLength
	m	(Ldsf;Lre;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
	f	Z	d	isNeedingChest
c	dtn$i	net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleSmallCorridorPiece
	m	(ILdrh;Lgz;)V	<init>	<init>
		p	1		chainLength
		p	2		boundingBox
		p	3		orientation
	m	(Lre;)V	<init>	<init>
		p	1		nbt
	m	(Lcnb;Lcmz;Lddo;Lapo;Ldrh;Lclp;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldrt;Ldru;Lapo;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Ldru;IIILgz;I)Ldtn$i;	a	createPiece
		p	0		holder
		p	1		x
		p	2		y
		p	3		z
		p	4		orientation
		p	5		chainLength
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
c	dtn$j	net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleSmallCorridorRightTurnPiece
	m	(ILapo;Ldrh;Lgz;)V	<init>	<init>
		p	1		chainLength
		p	2		random
		p	3		boundingBox
		p	4		orientation
	m	(Lre;)V	<init>	<init>
		p	1		nbt
	m	(Lcnb;Lcmz;Lddo;Lapo;Ldrh;Lclp;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldrt;Ldru;Lapo;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Ldru;Lapo;IIILgz;I)Ldtn$j;	a	createPiece
		p	0		holder
		p	1		random
		p	2		x
		p	3		y
		p	4		z
		p	5		orientation
		p	6		chainLength
	m	(Ldsf;Lre;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
	f	Z	d	isNeedingChest
c	dtn$k	net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleStalkRoom
	m	(ILdrh;Lgz;)V	<init>	<init>
		p	1		chainLength
		p	2		boundingBox
		p	3		orientation
	m	(Lre;)V	<init>	<init>
		p	1		nbt
	m	(Lcnb;Lcmz;Lddo;Lapo;Ldrh;Lclp;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldrt;Ldru;Lapo;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Ldru;IIILgz;I)Ldtn$k;	a	createPiece
		p	0		holder
		p	1		x
		p	2		y
		p	3		z
		p	4		orientation
		p	5		chainlength
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
c	dtn$l	net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$MonsterThrone
	m	(ILdrh;Lgz;)V	<init>	<init>
		p	1		chainLength
		p	2		boundingBox
		p	3		orientation
	m	(Lre;)V	<init>	<init>
		p	1		nbt
	m	(Lcnb;Lcmz;Lddo;Lapo;Ldrh;Lclp;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldru;IIIILgz;)Ldtn$l;	a	createPiece
		p	0		holder
		p	1		x
		p	2		y
		p	3		z
		p	4		chainLength
		p	5		orientation
	m	(Ldsf;Lre;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
	f	Z	d	hasPlacedSpawner
c	dtn$m	net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$NetherBridgePiece
	m	(Ldsg;ILdrh;)V	<init>	<init>
		p	1		type
		p	2		length
		p	3		boundingBox
	m	(Ldsg;Lre;)V	<init>	<init>
		p	1		type
		p	2		nbt
	m	(Ldrh;)Z	a	isOkBox
		p	0		boundingBox
	m	(Ldsf;Lre;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	m	(Ldtn$q;Ldru;Lapo;IIILgz;IZ)Ldrt;	a	generateAndAddPiece
		p	1		start
		p	2		holder
		p	3		random
		p	4		x
		p	5		y
		p	6		z
		p	7		orientation
		p	8		chainLength
		p	9		inside
	m	(Ldtn$q;Ldru;Lapo;IIZ)Ldrt;	a	generateChildForward
		p	1		start
		p	2		holder
		p	3		random
		p	4		leftRightOffset
		p	5		heightOffset
		p	6		inside
	m	(Ldtn$q;Ljava/util/List;Ldru;Lapo;IIILgz;I)Ldtn$m;	a	generatePiece
		p	1		start
		p	2		possiblePieces
		p	3		holder
		p	4		random
		p	5		x
		p	6		y
		p	7		z
		p	8		orientation
		p	9		chainLength
	m	(Ljava/util/List;)I	a	updatePieceWeight
		p	1		possiblePieces
	m	(Ldtn$q;Ldru;Lapo;IIZ)Ldrt;	b	generateChildLeft
		p	1		start
		p	2		holder
		p	3		random
		p	4		heightOffset
		p	5		leftRightOffset
		p	6		inside
	m	(Ldtn$q;Ldru;Lapo;IIZ)Ldrt;	c	generateChildRight
		p	1		start
		p	2		holder
		p	3		random
		p	4		heightOffset
		p	5		leftRightOffset
		p	6		inside
c	dtn$n	net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$PieceWeight
	m	(Ljava/lang/Class;II)V	<init>	<init>
		p	1		pieceType
		p	2		weight
		p	3		limit
	m	(Ljava/lang/Class;IIZ)V	<init>	<init>
		p	1		pieceType
		p	2		weight
		p	3		limit
		p	4		repeatable
	m	()Z	a	isValid
	m	(I)Z	a	doPlace
		p	1		chainLength
	f	Ljava/lang/Class;	a	pieceClass
	f	I	b	weight
	f	I	c	placeCount
	f	I	d	maxPlaceCount
	f	Z	e	allowInRow
c	dtn$o	net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$RoomCrossing
	m	(ILdrh;Lgz;)V	<init>	<init>
		p	1		chainLength
		p	2		boundingBox
		p	3		orientation
	m	(Lre;)V	<init>	<init>
		p	1		nbt
	m	(Lcnb;Lcmz;Lddo;Lapo;Ldrh;Lclp;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldrt;Ldru;Lapo;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Ldru;IIILgz;I)Ldtn$o;	a	createPiece
		p	0		holder
		p	1		x
		p	2		y
		p	3		z
		p	4		orientation
		p	5		chainLength
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
c	dtn$p	net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$StairsRoom
	m	(ILdrh;Lgz;)V	<init>	<init>
		p	1		chainLength
		p	2		boundingBox
		p	3		orientation
	m	(Lre;)V	<init>	<init>
		p	1		nbt
	m	(Lcnb;Lcmz;Lddo;Lapo;Ldrh;Lclp;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldrt;Ldru;Lapo;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Ldru;IIIILgz;)Ldtn$p;	a	createPiece
		p	0		holder
		p	1		x
		p	2		y
		p	3		z
		p	4		chainlength
		p	5		orientation
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
c	dtn$q	net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$StartPiece
	m	(Lapo;II)V	<init>	<init>
		p	1		random
		p	2		x
		p	3		z
	m	(Lre;)V	<init>	<init>
		p	1		nbt
	f	Ldtn$n;	a	previousPiece
	f	Ljava/util/List;	b	availableBridgePieces
	f	Ljava/util/List;	c	availableCastlePieces
	f	Ljava/util/List;	d	pendingChildren
c	dto	net/minecraft/world/level/levelgen/structure/structures/NetherFortressStructure
	m	(Ldrp$c;)V	<init>	<init>
		p	1		config
	m	(Ldrp$a;)Ljava/util/Optional;	a	findGenerationPoint
		p	1		context
	m	(Ldrp$a;Ldsh;)V	a	lambda$findGenerationPoint$0
		p	1		collector
	m	(Ldsh;Ldrp$a;)V	a	generatePieces
		p	0		collector
		p	1		context
	m	()Ldry;	e	type
	f	Lbcm;	d	FORTRESS_ENEMIES
	f	Lcom/mojang/serialization/Codec;	e	CODEC
c	dtp	net/minecraft/world/level/levelgen/structure/structures/NetherFossilPieces
	m	(Ldvi;Ldru;Lapo;Lgt;)V	a	addPieces
		p	0		manager
		p	1		holder
		p	2		random
		p	3		pos
	f	[Ladd;	a	FOSSILS
c	dtp$a	net/minecraft/world/level/levelgen/structure/structures/NetherFossilPieces$NetherFossilPiece
	m	(Ldvi;Ladd;Lgt;Lcvq;)V	<init>	<init>
		p	1		manager
		p	2		template
		p	3		pos
		p	4		rotation
	m	(Ldvi;Lre;)V	<init>	<init>
		p	1		manager
		p	2		nbt
	m	(Lcnb;Lcmz;Lddo;Lapo;Ldrh;Lclp;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Lcvq;)Ldvd;	a	makeSettings
		p	0		rotation
	m	(Ldsf;Lre;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	m	(Ljava/lang/String;Lgt;Lcmx;Lapo;Ldrh;)V	a	handleDataMarker
		p	1		metadata
		p	2		pos
		p	3		world
		p	4		random
		p	5		boundingBox
	m	(Lre;Ladd;)Ldvd;	a	lambda$new$0
		p	1		id
c	dtq	net/minecraft/world/level/levelgen/structure/structures/NetherFossilStructure
	m	(Ldrp$c;Ldpw;)V	<init>	<init>
		p	1		config
		p	2		height
	m	(Ldrp$a;)Ljava/util/Optional;	a	findGenerationPoint
		p	1		context
	m	(Ldrp$a;Ldhy;Lgt;Ldsh;)V	a	lambda$findGenerationPoint$2
		p	0		collector
	m	(Ldtq;)Ldpw;	a	lambda$static$0
		p	0		structure
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$1
	m	()Ldry;	e	type
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	Ldpw;	e	height
c	dtr	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces
c	dtr$1	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	dtr$a	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$FitDoubleXRoom
	m	(Ldtr$v;)Z	a	fits
		p	1		setting
	m	(Lgz;Ldtr$v;Lapo;)Ldtr$r;	a	create
		p	1		direction
		p	2		setting
		p	3		random
c	dtr$b	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$FitDoubleXYRoom
	m	(Ldtr$v;)Z	a	fits
		p	1		setting
	m	(Lgz;Ldtr$v;Lapo;)Ldtr$r;	a	create
		p	1		direction
		p	2		setting
		p	3		random
c	dtr$c	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$FitDoubleYRoom
	m	(Ldtr$v;)Z	a	fits
		p	1		setting
	m	(Lgz;Ldtr$v;Lapo;)Ldtr$r;	a	create
		p	1		direction
		p	2		setting
		p	3		random
c	dtr$d	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$FitDoubleYZRoom
	m	(Ldtr$v;)Z	a	fits
		p	1		setting
	m	(Lgz;Ldtr$v;Lapo;)Ldtr$r;	a	create
		p	1		direction
		p	2		setting
		p	3		random
c	dtr$e	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$FitDoubleZRoom
	m	(Ldtr$v;)Z	a	fits
		p	1		setting
	m	(Lgz;Ldtr$v;Lapo;)Ldtr$r;	a	create
		p	1		direction
		p	2		setting
		p	3		random
c	dtr$f	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$FitSimpleRoom
	m	(Ldtr$v;)Z	a	fits
		p	1		setting
	m	(Lgz;Ldtr$v;Lapo;)Ldtr$r;	a	create
		p	1		direction
		p	2		setting
		p	3		random
c	dtr$g	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$FitSimpleTopRoom
	m	(Ldtr$v;)Z	a	fits
		p	1		setting
	m	(Lgz;Ldtr$v;Lapo;)Ldtr$r;	a	create
		p	1		direction
		p	2		setting
		p	3		random
c	dtr$h	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$MonumentBuilding
	m	(Lapo;IILgz;)V	<init>	<init>
		p	1		random
		p	2		x
		p	3		z
		p	4		orientation
	m	(Lre;)V	<init>	<init>
		p	1		nbt
	m	(Lcnb;Lapo;Ldrh;)V	a	generateEntranceArchs
		p	1		world
		p	2		random
		p	3		box
	m	(Lcnb;Lcmz;Lddo;Lapo;Ldrh;Lclp;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(ZILcnb;Lapo;Ldrh;)V	a	generateWing
		p	3		world
		p	4		random
		p	5		box
	m	(Lapo;)Ljava/util/List;	b	generateRoomGraph
		p	1		random
	m	(Lcnb;Lapo;Ldrh;)V	b	generateEntranceWall
		p	1		world
		p	2		random
		p	3		box
	m	(Lcnb;Lapo;Ldrh;)V	c	generateRoofPiece
		p	1		world
		p	2		random
		p	3		box
	m	(Lcnb;Lapo;Ldrh;)V	d	generateLowerWall
		p	1		world
		p	2		random
		p	3		box
	m	(Lcnb;Lapo;Ldrh;)V	e	generateMiddleWall
		p	1		world
		p	2		random
		p	3		box
	m	(Lcnb;Lapo;Ldrh;)V	f	generateUpperWall
		p	1		world
		p	2		random
		p	3		box
	f	I	C	WIDTH
	f	I	D	HEIGHT
	f	I	E	DEPTH
	f	I	F	TOP_POSITION
	f	Ldtr$v;	G	sourceRoom
	f	Ldtr$v;	H	coreRoom
	f	Ljava/util/List;	I	childPieces
	f	I	a	BIOME_RANGE_CHECK
c	dtr$i	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$MonumentRoomFitter
	m	(Ldtr$v;)Z	a	fits
		p	1		setting
	m	(Lgz;Ldtr$v;Lapo;)Ldtr$r;	a	create
		p	1		direction
		p	2		setting
		p	3		random
c	dtr$j	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentCoreRoom
	m	(Lgz;Ldtr$v;)V	<init>	<init>
		p	1		orientation
		p	2		setting
	m	(Lre;)V	<init>	<init>
		p	1		nbt
	m	(Lcnb;Lcmz;Lddo;Lapo;Ldrh;Lclp;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
c	dtr$k	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentDoubleXRoom
	m	(Lgz;Ldtr$v;)V	<init>	<init>
		p	1		orientation
		p	2		setting
	m	(Lre;)V	<init>	<init>
		p	1		nbt
	m	(Lcnb;Lcmz;Lddo;Lapo;Ldrh;Lclp;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
c	dtr$l	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentDoubleXYRoom
	m	(Lgz;Ldtr$v;)V	<init>	<init>
		p	1		orientation
		p	2		setting
	m	(Lre;)V	<init>	<init>
		p	1		nbt
	m	(Lcnb;Lcmz;Lddo;Lapo;Ldrh;Lclp;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
c	dtr$m	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentDoubleYRoom
	m	(Lgz;Ldtr$v;)V	<init>	<init>
		p	1		orientation
		p	2		setting
	m	(Lre;)V	<init>	<init>
		p	1		nbt
	m	(Lcnb;Lcmz;Lddo;Lapo;Ldrh;Lclp;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
c	dtr$n	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentDoubleYZRoom
	m	(Lgz;Ldtr$v;)V	<init>	<init>
		p	1		orientation
		p	2		setting
	m	(Lre;)V	<init>	<init>
		p	1		nbt
	m	(Lcnb;Lcmz;Lddo;Lapo;Ldrh;Lclp;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
c	dtr$o	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentDoubleZRoom
	m	(Lgz;Ldtr$v;)V	<init>	<init>
		p	1		orientation
		p	2		setting
	m	(Lre;)V	<init>	<init>
		p	1		nbt
	m	(Lcnb;Lcmz;Lddo;Lapo;Ldrh;Lclp;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
c	dtr$p	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentEntryRoom
	m	(Lgz;Ldtr$v;)V	<init>	<init>
		p	1		orientation
		p	2		setting
	m	(Lre;)V	<init>	<init>
		p	1		nbt
	m	(Lcnb;Lcmz;Lddo;Lapo;Ldrh;Lclp;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
c	dtr$q	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentPenthouse
	m	(Lgz;Ldrh;)V	<init>	<init>
		p	1		orientation
		p	2		box
	m	(Lre;)V	<init>	<init>
		p	1		nbt
	m	(Lcnb;Lcmz;Lddo;Lapo;Ldrh;Lclp;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
c	dtr$r	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentPiece
	m	(Ldsg;ILgz;Ldtr$v;III)V	<init>	<init>
		p	1		type
		p	2		length
		p	3		orientation
		p	4		setting
	m	(Ldsg;Lgz;ILdrh;)V	<init>	<init>
		p	1		type
		p	2		orientation
		p	3		length
		p	4		box
	m	(Ldsg;Lre;)V	<init>	<init>
		p	1		type
		p	2		nbt
	m	(Lcnb;Ldrh;III)V	a	spawnElder
		p	1		world
		p	2		box
		p	3		x
		p	4		y
		p	5		z
	m	(Lcnb;Ldrh;IIIIIILdbq;)V	a	generateBoxOnFillOnly
		p	1		world
		p	2		box
		p	3		x
		p	4		y
		p	5		z
		p	6		width
		p	7		height
		p	8		depth
		p	9		state
	m	(Lcnb;Ldrh;IIZ)V	a	generateDefaultFloor
		p	1		world
		p	2		box
		p	3		x
		p	4		z
	m	(Ldrh;IIII)Z	a	chunkIntersects
		p	1		box
		p	2		x1
		p	3		z1
		p	4		x2
		p	5		z2
	m	(Ldsf;Lre;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	m	(Lgz;Ldtr$v;III)Ldrh;	a	makeBoundingBox
		p	0		orientation
		p	1		setting
	m	(Lcnb;Ldrh;IIIIII)V	b	generateWaterBox
		p	1		world
		p	2		box
		p	3		x
		p	4		y
		p	5		z
		p	6		width
		p	7		height
		p	8		depth
	m	(III)I	c	getRoomIndex
		p	0		x
		p	1		y
		p	2		z
	f	I	A	PENTHOUSE_INDEX
	f	Ldtr$v;	B	roomDefinition
	f	Ldbq;	b	BASE_GRAY
	f	Ldbq;	c	BASE_LIGHT
	f	Ldbq;	d	BASE_BLACK
	f	Ldbq;	h	DOT_DECO_DATA
	f	Ldbq;	i	LAMP_BLOCK
	f	Z	j	DO_FILL
	f	Ldbq;	k	FILL_BLOCK
	f	Ljava/util/Set;	l	FILL_KEEP
	f	I	m	GRIDROOM_WIDTH
	f	I	n	GRIDROOM_DEPTH
	f	I	o	GRIDROOM_HEIGHT
	f	I	p	GRID_WIDTH
	f	I	q	GRID_DEPTH
	f	I	r	GRID_HEIGHT
	f	I	s	GRID_FLOOR_COUNT
	f	I	t	GRID_SIZE
	f	I	u	GRIDROOM_SOURCE_INDEX
	f	I	v	GRIDROOM_TOP_CONNECT_INDEX
	f	I	w	GRIDROOM_LEFTWING_CONNECT_INDEX
	f	I	x	GRIDROOM_RIGHTWING_CONNECT_INDEX
	f	I	y	LEFTWING_INDEX
	f	I	z	RIGHTWING_INDEX
c	dtr$s	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentSimpleRoom
	m	(Lgz;Ldtr$v;Lapo;)V	<init>	<init>
		p	1		orientation
		p	2		setting
		p	3		random
	m	(Lre;)V	<init>	<init>
		p	1		nbt
	m	(Lcnb;Lcmz;Lddo;Lapo;Ldrh;Lclp;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	f	I	a	mainDesign
c	dtr$t	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentSimpleTopRoom
	m	(Lgz;Ldtr$v;)V	<init>	<init>
		p	1		orientation
		p	2		setting
	m	(Lre;)V	<init>	<init>
		p	1		nbt
	m	(Lcnb;Lcmz;Lddo;Lapo;Ldrh;Lclp;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
c	dtr$u	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentWingRoom
	m	(Lgz;Ldrh;I)V	<init>	<init>
		p	1		orientation
		p	2		box
	m	(Lre;)V	<init>	<init>
		p	1		nbt
	m	(Lcnb;Lcmz;Lddo;Lapo;Ldrh;Lclp;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	f	I	a	mainDesign
c	dtr$v	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$RoomDefinition
	m	(I)V	<init>	<init>
		p	1		index
	m	()V	a	updateOpenings
	m	(I)Z	a	findSource
	m	(Lgz;Ldtr$v;)V	a	setConnection
		p	1		orientation
		p	2		setting
	m	()Z	b	isSpecial
	m	()I	c	countOpenings
	f	I	a	index
	f	[Ldtr$v;	b	connections
	f	[Z	c	hasOpening
	f	Z	d	claimed
	f	Z	e	isSource
	f	I	f	scanIndex
c	dts	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentStructure
	m	(Ldrp$c;)V	<init>	<init>
		p	1		config
	m	(Lclp;JLdse;)Ldse;	a	regeneratePiecesAfterLoad
		p	0		pos
		p	1		worldSeed
		p	3		pieces
	m	(Lclp;Ldhy;)Ldrt;	a	createTopPiece
		p	0		pos
		p	1		random
	m	(Ldrp$a;)Ljava/util/Optional;	a	findGenerationPoint
		p	1		context
	m	(Ldrp$a;Ldsh;)V	a	lambda$findGenerationPoint$0
		p	1		collector
	m	(Ldsh;Ldrp$a;)V	a	generatePieces
		p	0		collector
		p	1		context
	m	()Ldry;	e	type
	f	Lcom/mojang/serialization/Codec;	d	CODEC
c	dtt	net/minecraft/world/level/levelgen/structure/structures/OceanRuinPieces
	m	(Lapo;)Ladd;	a	getSmallWarmRuin
		p	0		random
	m	(Lapo;Lgt;)Ljava/util/List;	a	allPositions
		p	0		random
		p	1		pos
	m	(Ldvi;Lapo;Lcvq;Lgt;Ldtu;Ldru;)V	a	addClusterRuins
		p	0		manager
		p	1		random
		p	2		rotation
		p	3		pos
		p	4		structure
		p	5		pieces
	m	(Ldvi;Lgt;Lcvq;Ldru;Lapo;Ldtu;)V	a	addPieces
		p	0		manager
		p	1		pos
		p	2		rotation
		p	3		holder
		p	4		random
		p	5		structure
	m	(Ldvi;Lgt;Lcvq;Ldru;Lapo;Ldtu;ZF)V	a	addPiece
		p	0		manager
		p	1		pos
		p	2		rotation
		p	3		holder
		p	4		random
		p	5		structure
		p	6		large
		p	7		integrity
	m	(Lapo;)Ladd;	b	getBigWarmRuin
		p	0		random
	f	[Ladd;	a	WARM_RUINS
	f	[Ladd;	b	RUINS_BRICK
	f	[Ladd;	c	RUINS_CRACKED
	f	[Ladd;	d	RUINS_MOSSY
	f	[Ladd;	e	BIG_RUINS_BRICK
	f	[Ladd;	f	BIG_RUINS_MOSSY
	f	[Ladd;	g	BIG_RUINS_CRACKED
	f	[Ladd;	h	BIG_WARM_RUINS
c	dtt$1	net/minecraft/world/level/levelgen/structure/structures/OceanRuinPieces$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$levelgen$structure$structures$OceanRuinStructure$Type
c	dtt$a	net/minecraft/world/level/levelgen/structure/structures/OceanRuinPieces$OceanRuinPiece
	m	(Ldvi;Ladd;Lgt;Lcvq;FLdtu$a;Z)V	<init>	<init>
		p	1		structureTemplateManager
		p	2		template
		p	3		pos
		p	4		rotation
		p	5		integrity
		p	6		biomeType
		p	7		large
	m	(Ldvi;Lre;)V	<init>	<init>
		p	1		holder
		p	2		nbt
	m	(Lcnb;Lcmz;Lddo;Lapo;Ldrh;Lclp;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Lcvq;)Ldvd;	a	makeSettings
		p	0		rotation
	m	(Ldsf;Lre;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	m	(Lgt;Lclo;Lgt;)I	a	getHeight
		p	1		start
		p	2		world
		p	3		end
	m	(Ljava/lang/String;Lgt;Lcmx;Lapo;Ldrh;)V	a	handleDataMarker
		p	1		metadata
		p	2		pos
		p	3		world
		p	4		random
		p	5		boundingBox
	m	(Lre;Ladd;)Ldvd;	a	lambda$new$0
		p	1		id
	f	Ldtu$a;	h	biomeType
	f	F	i	integrity
	f	Z	j	isLarge
c	dtu	net/minecraft/world/level/levelgen/structure/structures/OceanRuinStructure
	m	(Ldrp$c;Ldtu$a;FF)V	<init>	<init>
		p	1		config
		p	2		biomeTemperature
		p	3		largeProbability
		p	4		clusterProbability
	m	(Ldrp$a;)Ljava/util/Optional;	a	findGenerationPoint
		p	1		context
	m	(Ldrp$a;Ldsh;)V	a	lambda$findGenerationPoint$4
		p	2		collector
	m	(Ldsh;Ldrp$a;)V	a	generatePieces
		p	1		collector
		p	2		context
	m	(Ldtu;)Ljava/lang/Float;	a	lambda$static$2
		p	0		structure
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$3
	m	(Ldtu;)Ljava/lang/Float;	b	lambda$static$1
		p	0		structure
	m	(Ldtu;)Ldtu$a;	c	lambda$static$0
		p	0		structure
	m	()Ldry;	e	type
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	Ldtu$a;	e	biomeTemp
	f	F	f	largeProbability
	f	F	g	clusterProbability
c	dtu$a	net/minecraft/world/level/levelgen/structure/structures/OceanRuinStructure$Type
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()Ljava/lang/String;	a	getName
	m	()[Ldtu$a;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Ldtu$a;	a	WARM
	f	Ldtu$a;	b	COLD
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Ljava/lang/String;	d	name
	f	[Ldtu$a;	e	$VALUES
c	dtv	net/minecraft/world/level/levelgen/structure/structures/RuinedPortalPiece
	m	(Ldvi;Lgt;Ldtv$b;Ldtv$a;Ladd;Ldvh;Lcvq;Lcua;Lgt;)V	<init>	<init>
		p	1		manager
		p	2		pos
		p	3		verticalPlacement
		p	4		properties
		p	5		id
		p	6		template
		p	7		rotation
		p	8		mirror
	m	(Ldvi;Lre;)V	<init>	<init>
		p	1		manager
		p	2		nbt
	m	(Lapo;Lcmj;)V	a	addNetherrackDripColumnsBelowPortal
		p	1		random
		p	2		world
	m	(Lapo;Lcmj;Lgt;)V	a	maybeAddVines
		p	1		random
		p	2		world
		p	3		pos
	m	(Lapo;Lcnb;Lgt;)V	a	lambda$postProcess$2
		p	3		pos
	m	(Lcmj;IILdtv$b;)I	a	getSurfaceY
		p	0		world
		p	1		x
		p	2		y
		p	3		verticalPlacement
	m	(Lcmj;Lgt;)Z	a	canBlockBeReplacedByNetherrackOrMagma
		p	1		world
		p	2		pos
	m	(Lcnb;Lcmz;Lddo;Lapo;Ldrh;Lclp;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Lcpi;FLcpi;)Lduw;	a	getBlockReplaceRule
		p	0		old
		p	1		chance
		p	2		updated
	m	(Lcpi;Lcpi;)Lduw;	a	getBlockReplaceRule
		p	0		old
		p	1		updated
	m	(Lcua;Lcvq;Ldtv$b;Lgt;Ldtv$a;)Ldvd;	a	makeSettings
		p	0		mirror
		p	1		rotation
		p	2		verticalPlacement
		p	3		pos
		p	4		properties
	m	(Ldsf;Lre;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	m	(Ldtv$b;)Ldgz$a;	a	getHeightMapType
		p	0		verticalPlacement
	m	(Ldtv$b;Ldtv$a;)Lduw;	a	getLavaProcessorRule
		p	0		verticalPlacement
		p	1		properties
	m	(Ldvi;Lre;Ladd;)Ldvd;	a	makeSettings
		p	0		manager
		p	1		nbt
		p	2		id
	m	(Ljava/lang/String;Lgt;Lcmx;Lapo;Ldrh;)V	a	handleDataMarker
		p	1		metadata
		p	2		pos
		p	3		world
		p	4		random
		p	5		boundingBox
	m	(Lre;Lrx;)V	a	lambda$addAdditionalSaveData$1
	m	(Lapo;Lcmj;)V	b	spreadNetherrack
		p	1		random
		p	2		world
	m	(Lapo;Lcmj;Lgt;)V	b	maybeAddLeavesAbove
		p	1		random
		p	2		world
		p	3		pos
	m	(Ldvi;Lre;Ladd;)Ldvd;	b	lambda$new$0
		p	2		id
	m	(Lapo;Lcmj;Lgt;)V	c	addNetherrackDripColumn
		p	1		random
		p	2		world
		p	3		pos
	m	(Lapo;Lcmj;Lgt;)V	d	placeNetherrackOrMagma
		p	1		random
		p	2		world
		p	3		pos
	f	Lorg/slf4j/Logger;	h	LOGGER
	f	F	i	PROBABILITY_OF_GOLD_GONE
	f	F	j	PROBABILITY_OF_MAGMA_INSTEAD_OF_NETHERRACK
	f	F	k	PROBABILITY_OF_MAGMA_INSTEAD_OF_LAVA
	f	Ldtv$b;	l	verticalPlacement
	f	Ldtv$a;	m	properties
c	dtv$a	net/minecraft/world/level/levelgen/structure/structures/RuinedPortalPiece$Properties
	m	(ZFZZZZ)V	<init>	<init>
		p	1		cold
		p	2		mossiness
		p	3		airPocket
		p	4		overgrown
		p	5		vines
		p	6		replaceWithBlackstone
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$6
		p	0		instance
	m	(Ldtv$a;)Ljava/lang/Boolean;	a	lambda$static$5
	m	(Ldtv$a;)Ljava/lang/Boolean;	b	lambda$static$4
	m	(Ldtv$a;)Ljava/lang/Boolean;	c	lambda$static$3
	m	(Ldtv$a;)Ljava/lang/Boolean;	d	lambda$static$2
	m	(Ldtv$a;)Ljava/lang/Float;	e	lambda$static$1
	m	(Ldtv$a;)Ljava/lang/Boolean;	f	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Z	b	cold
	f	F	c	mossiness
	f	Z	d	airPocket
	f	Z	e	overgrown
	f	Z	f	vines
	f	Z	g	replaceWithBlackstone
c	dtv$b	net/minecraft/world/level/levelgen/structure/structures/RuinedPortalPiece$VerticalPlacement
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		id
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/lang/String;)Ldtv$b;	a	byName
		p	0		id
	m	()[Ldtv$b;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Ldtv$b;	a	ON_LAND_SURFACE
	f	Ldtv$b;	b	PARTLY_BURIED
	f	Ldtv$b;	c	ON_OCEAN_FLOOR
	f	Ldtv$b;	d	IN_MOUNTAIN
	f	Ldtv$b;	e	UNDERGROUND
	f	Ldtv$b;	f	IN_NETHER
	f	Laqa$a;	g	CODEC
	f	Ljava/lang/String;	h	name
	f	[Ldtv$b;	i	$VALUES
c	dtw	net/minecraft/world/level/levelgen/structure/structures/RuinedPortalStructure
	m	(Ldrp$c;Ldtw$a;)V	<init>	<init>
		p	1		config
		p	2		setup
	m	(Ldrp$c;Ljava/util/List;)V	<init>	<init>
		p	1		config
		p	2		setups
	m	(Lapo;II)I	a	getRandomWithinInterval
		p	0		random
		p	1		min
		p	2		max
	m	(Lapo;Lddo;Ldtv$b;ZIILdrh;Lcmk;Ldhn;)I	a	findSuitableY
		p	0		random
		p	1		chunkGenerator
		p	2		verticalPlacement
		p	3		airPocket
		p	4		height
		p	5		blockCountY
		p	6		box
		p	7		world
		p	8		noiseConfig
	m	(Lddo;Lcmk;Ldhn;Lgt;)Lcmu;	a	lambda$findSuitableY$3
		p	3		pos
	m	(Ldhy;F)Z	a	sample
		p	0		random
		p	1		probability
	m	(Ldrp$a;)Ljava/util/Optional;	a	findGenerationPoint
		p	1		context
	m	(Ldtw$a;Ldtv$a;Lgt;Ldrp$a;Ldhn;Ladd;Ldvh;Lcvq;Lcua;Lgt;Ldsh;)V	a	lambda$findGenerationPoint$2
		p	10		collector
	m	(Ldtw;)Ljava/util/List;	a	lambda$static$0
		p	0		structure
	m	(Lgt;Lhd;)Z	a	isCold
		p	0		pos
		p	1		biome
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$1
	m	()Ldry;	e	type
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	[Ljava/lang/String;	e	STRUCTURE_LOCATION_PORTALS
	f	[Ljava/lang/String;	f	STRUCTURE_LOCATION_GIANT_PORTALS
	f	F	g	PROBABILITY_OF_GIANT_PORTAL
	f	I	h	MIN_Y_INDEX
	f	Ljava/util/List;	i	setups
c	dtw$a	net/minecraft/world/level/levelgen/structure/structures/RuinedPortalStructure$Setup
	m	()Ldtv$b;	a	placement
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()F	b	airPocketProbability
	m	()F	c	mossiness
	m	()Z	d	overgrown
	m	()Z	e	vines
	m	()Z	f	canBeCold
	m	()Z	g	replaceWithBlackstone
	m	()F	h	weight
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldtv$b;	b	placement
	f	F	c	airPocketProbability
	f	F	d	mossiness
	f	Z	e	overgrown
	f	Z	f	vines
	f	Z	g	canBeCold
	f	Z	h	replaceWithBlackstone
	f	F	i	weight
c	dtx	net/minecraft/world/level/levelgen/structure/structures/ShipwreckPieces
	m	(Ldvi;Lgt;Lcvq;Ldru;Lapo;Z)V	a	addPieces
		p	0		structureTemplateManager
		p	1		pos
		p	2		rotation
		p	3		holder
		p	4		random
		p	5		beached
	f	Lgt;	a	PIVOT
	f	[Ladd;	b	STRUCTURE_LOCATION_BEACHED
	f	[Ladd;	c	STRUCTURE_LOCATION_OCEAN
	f	Ljava/util/Map;	d	MARKERS_TO_LOOT
c	dtx$a	net/minecraft/world/level/levelgen/structure/structures/ShipwreckPieces$ShipwreckPiece
	m	(Ldvi;Ladd;Lgt;Lcvq;Z)V	<init>	<init>
		p	1		manager
		p	2		identifier
		p	3		pos
		p	4		rotation
		p	5		grounded
	m	(Ldvi;Lre;)V	<init>	<init>
		p	1		manager
		p	2		nbt
	m	(Lcnb;Lcmz;Lddo;Lapo;Ldrh;Lclp;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Lcvq;)Ldvd;	a	makeSettings
		p	0		rotation
	m	(Ldsf;Lre;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	m	(Ljava/lang/String;Lgt;Lcmx;Lapo;Ldrh;)V	a	handleDataMarker
		p	1		metadata
		p	2		pos
		p	3		world
		p	4		random
		p	5		boundingBox
	m	(Lre;Ladd;)Ldvd;	a	lambda$new$0
		p	1		id
	f	Z	h	isBeached
c	dty	net/minecraft/world/level/levelgen/structure/structures/ShipwreckStructure
	m	(Ldrp$c;Z)V	<init>	<init>
		p	1		config
		p	2		beached
	m	(Ldrp$a;)Ljava/util/Optional;	a	findGenerationPoint
		p	1		context
	m	(Ldrp$a;Ldsh;)V	a	lambda$findGenerationPoint$2
		p	2		collector
	m	(Ldsh;Ldrp$a;)V	a	generatePieces
		p	1		collector
		p	2		context
	m	(Ldty;)Ljava/lang/Boolean;	a	lambda$static$0
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$1
	m	()Ldry;	e	type
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	Z	e	isBeached
c	dtz	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces
	m	()V	a	resetPieces
	m	(Ldtz$m;Ldru;Lapo;IIILgz;I)Ldtz$p;	a	generatePieceFromSmallDoor
		p	0		start
		p	1		holder
		p	2		random
		p	3		x
		p	4		y
		p	5		z
		p	6		orientation
		p	7		chainLength
	m	(Ljava/lang/Class;Ldru;Lapo;IIILgz;I)Ldtz$p;	a	findAndCreatePieceFactory
		p	0		pieceType
		p	1		holder
		p	2		random
		p	3		x
		p	4		y
		p	5		z
		p	6		orientation
		p	7		chainLength
	m	()Z	b	updatePieceWeight
	m	(Ldtz$m;Ldru;Lapo;IIILgz;I)Ldrt;	b	generateAndAddPiece
		p	0		start
		p	1		holder
		p	2		random
		p	3		x
		p	4		y
		p	5		z
		p	6		orientation
		p	7		chainLength
	f	I	a	MAGIC_START_Y
	f	I	b	SMALL_DOOR_WIDTH
	f	I	c	SMALL_DOOR_HEIGHT
	f	I	d	MAX_DEPTH
	f	I	e	LOWEST_Y_POSITION
	f	Z	f	CHECK_AIR
	f	[Ldtz$f;	g	STRONGHOLD_PIECE_WEIGHTS
	f	Ljava/util/List;	h	currentPieces
	f	Ljava/lang/Class;	i	imposedPiece
	f	I	j	totalWeight
	f	Ldtz$k;	k	SMOOTH_STONE_SELECTOR
c	dtz$1	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$1
	m	(Ljava/lang/Class;II)V	<init>	<init>
		p	1		pieceType
		p	2		weight
		p	3		limit
	m	(I)Z	a	doPlace
		p	1		chainLength
c	dtz$2	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$2
	m	(Ljava/lang/Class;II)V	<init>	<init>
		p	1		pieceType
		p	2		weight
		p	3		limit
	m	(I)Z	a	doPlace
		p	1		chainLength
c	dtz$3	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$3
	f	[I	a	$SwitchMap$net$minecraft$world$level$levelgen$structure$structures$StrongholdPieces$StrongholdPiece$SmallDoorType
	f	[I	b	$SwitchMap$net$minecraft$core$Direction
c	dtz$a	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$ChestCorridor
	m	(ILapo;Ldrh;Lgz;)V	<init>	<init>
		p	1		chainLength
		p	2		random
		p	3		boundingBox
		p	4		orientation
	m	(Lre;)V	<init>	<init>
		p	1		nbt
	m	(Lcnb;Lcmz;Lddo;Lapo;Ldrh;Lclp;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldrt;Ldru;Lapo;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Ldru;Lapo;IIILgz;I)Ldtz$a;	a	createPiece
		p	0		holder
		p	1		random
		p	2		x
		p	3		y
		p	4		z
		p	5		orientation
		p	6		chainlength
	m	(Ldsf;Lre;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
	f	Z	d	hasPlacedChest
c	dtz$b	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$FillerCorridor
	m	(ILdrh;Lgz;)V	<init>	<init>
		p	1		chainLength
		p	2		boundingBox
		p	3		orientation
	m	(Lre;)V	<init>	<init>
		p	1		nbt
	m	(Lcnb;Lcmz;Lddo;Lapo;Ldrh;Lclp;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldru;Lapo;IIILgz;)Ldrh;	a	findPieceBox
		p	0		holder
		p	1		random
		p	2		x
		p	3		y
		p	4		z
		p	5		orientation
	m	(Ldsf;Lre;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	f	I	a	steps
c	dtz$c	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$FiveCrossing
	m	(ILapo;Ldrh;Lgz;)V	<init>	<init>
		p	1		chainLength
		p	2		random
		p	3		boundingBox
		p	4		orientation
	m	(Lre;)V	<init>	<init>
		p	1		nbt
	m	(Lcnb;Lcmz;Lddo;Lapo;Ldrh;Lclp;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldrt;Ldru;Lapo;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Ldru;Lapo;IIILgz;I)Ldtz$c;	a	createPiece
		p	0		holder
		p	1		random
		p	2		x
		p	3		y
		p	4		z
		p	5		orientation
		p	6		chainLength
	m	(Ldsf;Lre;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
	f	Z	d	leftLow
	f	Z	i	leftHigh
	f	Z	j	rightLow
	f	Z	k	rightHigh
c	dtz$d	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$LeftTurn
	m	(ILapo;Ldrh;Lgz;)V	<init>	<init>
		p	1		chainLength
		p	2		random
		p	3		boundingBox
		p	4		orientation
	m	(Lre;)V	<init>	<init>
		p	1		nbt
	m	(Lcnb;Lcmz;Lddo;Lapo;Ldrh;Lclp;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldrt;Ldru;Lapo;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Ldru;Lapo;IIILgz;I)Ldtz$d;	a	createPiece
		p	0		holder
		p	1		random
		p	2		x
		p	3		y
		p	4		z
		p	5		orientation
		p	6		chainLength
c	dtz$e	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$Library
	m	(ILapo;Ldrh;Lgz;)V	<init>	<init>
		p	1		chainLength
		p	2		random
		p	3		boundingBox
		p	4		orientation
	m	(Lre;)V	<init>	<init>
		p	1		nbt
	m	(Lcnb;Lcmz;Lddo;Lapo;Ldrh;Lclp;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldru;Lapo;IIILgz;I)Ldtz$e;	a	createPiece
		p	0		holder
		p	1		random
		p	2		x
		p	3		y
		p	4		z
		p	5		orientation
		p	6		chainLength
	m	(Ldsf;Lre;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	TALL_HEIGHT
	f	I	d	DEPTH
	f	Z	i	isTall
c	dtz$f	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$PieceWeight
	m	(Ljava/lang/Class;II)V	<init>	<init>
		p	1		pieceType
		p	2		weight
		p	3		limit
	m	()Z	a	isValid
	m	(I)Z	a	doPlace
		p	1		chainLength
	f	Ljava/lang/Class;	a	pieceClass
	f	I	b	weight
	f	I	c	placeCount
	f	I	d	maxPlaceCount
c	dtz$g	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$PortalRoom
	m	(ILdrh;Lgz;)V	<init>	<init>
		p	1		chainLength
		p	2		boundingBox
		p	3		orientation
	m	(Lre;)V	<init>	<init>
		p	1		nbt
	m	(Lcnb;Lcmz;Lddo;Lapo;Ldrh;Lclp;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldrt;Ldru;Lapo;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Ldru;IIILgz;I)Ldtz$g;	a	createPiece
		p	0		holder
		p	1		x
		p	2		y
		p	3		z
		p	4		orientation
		p	5		chainLength
	m	(Ldsf;Lre;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
	f	Z	d	hasPlacedSpawner
c	dtz$h	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$PrisonHall
	m	(ILapo;Ldrh;Lgz;)V	<init>	<init>
		p	1		chainLength
		p	2		random
		p	3		boundingBox
		p	4		orientation
	m	(Lre;)V	<init>	<init>
		p	1		nbt
	m	(Lcnb;Lcmz;Lddo;Lapo;Ldrh;Lclp;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldrt;Ldru;Lapo;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Ldru;Lapo;IIILgz;I)Ldtz$h;	a	createPiece
		p	0		holder
		p	1		random
		p	2		x
		p	3		y
		p	4		z
		p	5		orientation
		p	6		chainLength
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
c	dtz$i	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$RightTurn
	m	(ILapo;Ldrh;Lgz;)V	<init>	<init>
		p	1		chainLength
		p	2		random
		p	3		boundingBox
		p	4		orientation
	m	(Lre;)V	<init>	<init>
		p	1		nbt
	m	(Lcnb;Lcmz;Lddo;Lapo;Ldrh;Lclp;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldrt;Ldru;Lapo;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Ldru;Lapo;IIILgz;I)Ldtz$i;	a	createPiece
		p	0		holder
		p	1		random
		p	2		x
		p	3		y
		p	4		z
		p	5		orientation
		p	6		chainLength
c	dtz$j	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$RoomCrossing
	m	(ILapo;Ldrh;Lgz;)V	<init>	<init>
		p	1		chainLength
		p	2		random
		p	3		boundingBox
		p	4		orientation
	m	(Lre;)V	<init>	<init>
		p	1		nbt
	m	(Lcnb;Lcmz;Lddo;Lapo;Ldrh;Lclp;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldrt;Ldru;Lapo;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Ldru;Lapo;IIILgz;I)Ldtz$j;	a	createPiece
		p	0		holder
		p	1		random
		p	2		x
		p	3		y
		p	4		z
		p	5		orientation
		p	6		chainLength
	m	(Ldsf;Lre;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
	f	I	d	type
c	dtz$k	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$SmoothStoneSelector
	m	(Lapo;IIIZ)V	a	next
		p	1		random
		p	2		x
		p	3		y
		p	4		z
		p	5		placeBlock
c	dtz$l	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$StairsDown
	m	(ILapo;Ldrh;Lgz;)V	<init>	<init>
		p	1		chainLength
		p	2		random
		p	3		boundingBox
		p	4		orientation
	m	(Ldsg;IIILgz;)V	<init>	<init>
		p	1		structurePieceType
		p	2		chainLength
		p	3		x
		p	4		z
		p	5		orientation
	m	(Ldsg;Lre;)V	<init>	<init>
		p	1		type
		p	2		nbt
	m	(Lre;)V	<init>	<init>
		p	1		nbt
	m	(Lcnb;Lcmz;Lddo;Lapo;Ldrh;Lclp;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldrt;Ldru;Lapo;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Ldru;Lapo;IIILgz;I)Ldtz$l;	a	createPiece
		p	0		holder
		p	1		random
		p	2		x
		p	3		y
		p	4		z
		p	5		orientation
		p	6		chainLength
	m	(Ldsf;Lre;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
	f	Z	d	isSource
c	dtz$m	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$StartPiece
	m	(Lapo;II)V	<init>	<init>
		p	1		random
	m	(Lre;)V	<init>	<init>
		p	1		nbt
	m	()Lgt;	h	getLocatorPosition
	f	Ldtz$f;	a	previousPiece
	f	Ldtz$g;	b	portalRoomPiece
	f	Ljava/util/List;	c	pendingChildren
c	dtz$n	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$Straight
	m	(ILapo;Ldrh;Lgz;)V	<init>	<init>
		p	1		chainLength
		p	2		random
		p	3		boundingBox
		p	4		orientation
	m	(Lre;)V	<init>	<init>
		p	1		nbt
	m	(Lcnb;Lcmz;Lddo;Lapo;Ldrh;Lclp;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldrt;Ldru;Lapo;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Ldru;Lapo;IIILgz;I)Ldtz$n;	a	createPiece
		p	0		holder
		p	1		random
		p	2		x
		p	3		y
		p	4		z
		p	5		orientation
		p	6		chainLength
	m	(Ldsf;Lre;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
	f	Z	d	leftChild
	f	Z	i	rightChild
c	dtz$o	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$StraightStairsDown
	m	(ILapo;Ldrh;Lgz;)V	<init>	<init>
		p	1		chainLength
		p	2		random
		p	3		boundingBox
		p	4		orientation
	m	(Lre;)V	<init>	<init>
		p	1		nbt
	m	(Lcnb;Lcmz;Lddo;Lapo;Ldrh;Lclp;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldrt;Ldru;Lapo;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Ldru;Lapo;IIILgz;I)Ldtz$o;	a	createPiece
		p	0		holder
		p	1		random
		p	2		x
		p	3		y
		p	4		z
		p	5		orientation
		p	6		chainLength
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
c	dtz$p	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$StrongholdPiece
	m	(Ldsg;ILdrh;)V	<init>	<init>
		p	1		type
		p	2		length
		p	3		boundingBox
	m	(Ldsg;Lre;)V	<init>	<init>
		p	1		type
		p	2		nbt
	m	(Lcnb;Lapo;Ldrh;Ldtz$p$a;III)V	a	generateSmallDoor
		p	1		world
		p	2		random
		p	3		boundingBox
		p	4		type
		p	5		x
		p	6		y
		p	7		z
	m	(Ldrh;)Z	a	isOkBox
		p	0		boundingBox
	m	(Ldsf;Lre;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	m	(Ldtz$m;Ldru;Lapo;II)Ldrt;	a	generateSmallDoorChildForward
		p	1		start
		p	2		holder
		p	3		random
		p	4		leftRightOffset
		p	5		heightOffset
	m	(Lapo;)Ldtz$p$a;	b	randomSmallDoor
		p	1		random
	m	(Ldtz$m;Ldru;Lapo;II)Ldrt;	b	generateSmallDoorChildLeft
		p	1		start
		p	2		holder
		p	3		random
		p	4		heightOffset
		p	5		leftRightOffset
	m	(Ldtz$m;Ldru;Lapo;II)Ldrt;	c	generateSmallDoorChildRight
		p	1		start
		p	2		holder
		p	3		random
		p	4		heightOffset
		p	5		leftRightOffset
	f	Ldtz$p$a;	h	entryDoor
c	dtz$p$a	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$StrongholdPiece$SmallDoorType
	m	()[Ldtz$p$a;	a	$values
	f	Ldtz$p$a;	a	OPENING
	f	Ldtz$p$a;	b	WOOD_DOOR
	f	Ldtz$p$a;	c	GRATES
	f	Ldtz$p$a;	d	IRON_DOOR
	f	[Ldtz$p$a;	e	$VALUES
c	dtz$q	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$Turn
	m	(Ldsg;ILdrh;)V	<init>	<init>
		p	1		type
		p	2		length
		p	3		boundingBox
	m	(Ldsg;Lre;)V	<init>	<init>
		p	1		type
		p	2		nbt
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
c	dua	net/minecraft/world/level/levelgen/structure/structures/StrongholdStructure
	m	(Ldrp$c;)V	<init>	<init>
		p	1		config
	m	(Ldrp$a;)Ljava/util/Optional;	a	findGenerationPoint
		p	1		context
	m	(Ldrp$a;Ldsh;)V	a	lambda$findGenerationPoint$0
		p	1		collector
	m	(Ldsh;Ldrp$a;)V	a	generatePieces
		p	0		collector
		p	1		context
	m	()Ldry;	e	type
	f	Lcom/mojang/serialization/Codec;	d	CODEC
c	dub	net/minecraft/world/level/levelgen/structure/structures/SwampHutPiece
	m	(Lapo;II)V	<init>	<init>
		p	1		random
		p	2		x
		p	3		z
	m	(Lre;)V	<init>	<init>
		p	1		nbt
	m	(Lcmx;Ldrh;)V	a	spawnCat
		p	1		world
		p	2		box
	m	(Lcnb;Lcmz;Lddo;Lapo;Ldrh;Lclp;Lgt;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldsf;Lre;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	f	Z	h	spawnedWitch
	f	Z	i	spawnedCat
c	duc	net/minecraft/world/level/levelgen/structure/structures/SwampHutStructure
	m	(Ldrp$c;)V	<init>	<init>
		p	1		config
	m	(Ldrp$a;)Ljava/util/Optional;	a	findGenerationPoint
		p	1		context
	m	(Ldrp$a;Ldsh;)V	a	lambda$findGenerationPoint$0
		p	1		collector
	m	(Ldsh;Ldrp$a;)V	a	generatePieces
		p	0		collector
		p	1		context
	m	()Ldry;	e	type
	f	Lcom/mojang/serialization/Codec;	d	CODEC
c	dud	net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces
	m	(Ldvi;Lgt;Lcvq;Ljava/util/List;Lapo;)V	a	generateMansion
		p	0		manager
		p	1		pos
		p	2		rotation
		p	3		pieces
		p	4		random
	m	([Ljava/lang/String;)V	a	main
		p	0		args
c	dud$a	net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$FirstFloorRoomCollection
	m	(Lapo;)Ljava/lang/String;	a	get1x1
		p	1		random
	m	(Lapo;Z)Ljava/lang/String;	a	get1x2SideEntrance
		p	1		random
		p	2		staircase
	m	(Lapo;)Ljava/lang/String;	b	get1x1Secret
		p	1		random
	m	(Lapo;Z)Ljava/lang/String;	b	get1x2FrontEntrance
		p	1		random
		p	2		staircase
	m	(Lapo;)Ljava/lang/String;	c	get1x2Secret
		p	1		random
	m	(Lapo;)Ljava/lang/String;	d	get2x2
		p	1		random
	m	(Lapo;)Ljava/lang/String;	e	get2x2Secret
		p	1		random
c	dud$b	net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$FloorRoomCollection
	m	(Lapo;)Ljava/lang/String;	a	get1x1
		p	1		random
	m	(Lapo;Z)Ljava/lang/String;	a	get1x2SideEntrance
		p	1		random
		p	2		staircase
	m	(Lapo;)Ljava/lang/String;	b	get1x1Secret
		p	1		random
	m	(Lapo;Z)Ljava/lang/String;	b	get1x2FrontEntrance
		p	1		random
		p	2		staircase
	m	(Lapo;)Ljava/lang/String;	c	get1x2Secret
		p	1		random
	m	(Lapo;)Ljava/lang/String;	d	get2x2
		p	1		random
	m	(Lapo;)Ljava/lang/String;	e	get2x2Secret
		p	1		random
c	dud$c	net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$MansionGrid
	m	(Lapo;)V	<init>	<init>
		p	1		random
	m	()V	a	print
	m	(Ldud$g;)Z	a	cleanEdges
		p	1		layout
	m	(Ldud$g;II)Z	a	isHouse
		p	0		layout
		p	1		i
		p	2		j
	m	(Ldud$g;IIII)Z	a	isRoomId
		p	1		layout
		p	2		i
		p	3		j
		p	4		floor
		p	5		roomId
	m	(Ldud$g;IILgz;I)V	a	recursiveCorridor
		p	1		layout
		p	2		i
		p	3		j
		p	4		direction
		p	5		length
	m	(Ldud$g;Ldud$g;)V	a	identifyRooms
		p	1		layout
		p	2		roomFlags
	m	()V	b	setupThirdFloor
	m	(Ldud$g;IIII)Lgz;	b	get1x2RoomDirection
		p	1		layout
		p	2		i
		p	3		j
		p	4		floor
		p	5		roomId
	f	I	a	DEFAULT_SIZE
	f	I	b	CLEAR
	f	I	c	CORRIDOR
	f	I	d	ROOM
	f	I	e	START_ROOM
	f	I	f	TEST_ROOM
	f	I	g	BLOCKED
	f	I	h	ROOM_1x1
	f	I	i	ROOM_1x2
	f	I	j	ROOM_2x2
	f	I	k	ROOM_ORIGIN_FLAG
	f	I	l	ROOM_DOOR_FLAG
	f	I	m	ROOM_STAIRS_FLAG
	f	I	n	ROOM_CORRIDOR_FLAG
	f	I	o	ROOM_TYPE_MASK
	f	I	p	ROOM_ID_MASK
	f	Lapo;	q	random
	f	Ldud$g;	r	baseGrid
	f	Ldud$g;	s	thirdFloorGrid
	f	[Ldud$g;	t	floorRooms
	f	I	u	entranceX
	f	I	v	entranceY
c	dud$d	net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$MansionPiecePlacer
	m	(Ldvi;Lapo;)V	<init>	<init>
		p	1		manager
		p	2		random
	m	(Lgt;Lcvq;Ljava/util/List;Ldud$c;)V	a	createMansion
		p	1		pos
		p	2		rotation
		p	3		pieces
		p	4		parameters
	m	(Ljava/util/List;Ldud$e;)V	a	entrance
		p	1		pieces
		p	2		wallPiece
	m	(Ljava/util/List;Ldud$e;Ldud$g;Lgz;IIII)V	a	traverseOuterWalls
		p	1		pieces
		p	2		wallPiece
		p	3		layout
		p	4		direction
		p	5		startI
		p	6		startJ
		p	7		endI
		p	8		endJ
	m	(Ljava/util/List;Lgt;Lcvq;Ldud$b;)V	a	addRoom2x2Secret
		p	1		pieces
		p	2		pos
		p	3		rotation
		p	4		pool
	m	(Ljava/util/List;Lgt;Lcvq;Ldud$g;Ldud$g;)V	a	createRoof
		p	1		pieces
		p	2		pos
		p	3		rotation
		p	4		layout
		p	5		nextFloorLayout
	m	(Ljava/util/List;Lgt;Lcvq;Lgz;Ldud$b;)V	a	addRoom1x1
		p	1		pieces
		p	2		pos
		p	3		rotation
		p	4		direction
		p	5		pool
	m	(Ljava/util/List;Lgt;Lcvq;Lgz;Lgz;Ldud$b;)V	a	addRoom2x2
		p	1		pieces
		p	2		pos
		p	3		rotation
		p	4		connectedRoomDirection
		p	5		entranceDirection
		p	6		pool
	m	(Ljava/util/List;Lgt;Lcvq;Lgz;Lgz;Ldud$b;Z)V	a	addRoom1x2
		p	1		pieces
		p	2		pos
		p	3		rotation
		p	4		connectedRoomDirection
		p	5		entranceDirection
		p	6		pool
		p	7		staircase
	m	(Ljava/util/List;Ldud$e;)V	b	traverseWallPiece
		p	1		pieces
		p	2		wallPiece
	m	(Ljava/util/List;Ldud$e;)V	c	traverseTurn
		p	1		pieces
		p	2		wallPiece
	m	(Ljava/util/List;Ldud$e;)V	d	traverseInnerTurn
		p	1		pieces
		p	2		wallPiece
	f	Ldvi;	a	structureTemplateManager
	f	Lapo;	b	random
	f	I	c	startX
	f	I	d	startY
c	dud$e	net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$PlacementData
	f	Lcvq;	a	rotation
	f	Lgt;	b	position
	f	Ljava/lang/String;	c	wallType
c	dud$f	net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$SecondFloorRoomCollection
	m	(Lapo;)Ljava/lang/String;	a	get1x1
		p	1		random
	m	(Lapo;Z)Ljava/lang/String;	a	get1x2SideEntrance
		p	1		random
		p	2		staircase
	m	(Lapo;)Ljava/lang/String;	b	get1x1Secret
		p	1		random
	m	(Lapo;Z)Ljava/lang/String;	b	get1x2FrontEntrance
		p	1		random
		p	2		staircase
	m	(Lapo;)Ljava/lang/String;	c	get1x2Secret
		p	1		random
	m	(Lapo;)Ljava/lang/String;	d	get2x2
		p	1		random
	m	(Lapo;)Ljava/lang/String;	e	get2x2Secret
		p	1		random
c	dud$g	net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$SimpleGrid
	m	(III)V	<init>	<init>
		p	1		n
		p	2		m
		p	3		fallback
	m	(II)I	a	get
		p	1		i
		p	2		j
	m	(III)V	a	set
		p	1		i
		p	2		j
		p	3		value
	m	(IIII)V	a	setif
		p	1		i
		p	2		j
		p	3		expected
		p	4		newValue
	m	(IIIII)V	a	set
		p	1		i0
		p	2		j0
		p	3		i1
		p	4		j1
		p	5		value
	m	(III)Z	b	edgesTo
		p	1		i
		p	2		j
		p	3		value
	f	[[I	a	grid
	f	I	b	width
	f	I	c	height
	f	I	d	valueIfOutside
c	dud$h	net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$ThirdFloorRoomCollection
c	dud$i	net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$WoodlandMansionPiece
	m	(Ldvi;Ljava/lang/String;Lgt;Lcvq;)V	<init>	<init>
		p	1		manager
		p	2		template
		p	3		pos
		p	4		rotation
	m	(Ldvi;Ljava/lang/String;Lgt;Lcvq;Lcua;)V	<init>	<init>
		p	1		manager
		p	2		template
		p	3		pos
		p	4		rotation
		p	5		mirror
	m	(Ldvi;Lre;)V	<init>	<init>
		p	1		manager
		p	2		nbt
	m	(Lcua;Lcvq;)Ldvd;	a	makeSettings
		p	0		mirror
		p	1		rotation
	m	(Ldsf;Lre;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	m	(Ljava/lang/String;)Ladd;	a	makeLocation
		p	0		identifier
	m	(Ljava/lang/String;Lgt;Lcmx;Lapo;Ldrh;)V	a	handleDataMarker
		p	1		metadata
		p	2		pos
		p	3		world
		p	4		random
		p	5		boundingBox
	m	(Lre;Ladd;)Ldvd;	a	lambda$new$0
		p	1		id
	m	()Ladd;	b	makeTemplateLocation
c	due	net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionStructure
	m	(Ldrp$c;)V	<init>	<init>
		p	1		config
	m	(Lcnb;Lcmz;Lddo;Lapo;Ldrh;Lclp;Ldse;)V	a	afterPlace
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		box
		p	6		chunkPos
		p	7		pieces
	m	(Ldrp$a;)Ljava/util/Optional;	a	findGenerationPoint
		p	1		context
	m	(Ldrp$a;Lgt;Lcvq;Ldsh;)V	a	lambda$findGenerationPoint$0
		p	4		collector
	m	(Ldsh;Ldrp$a;Lgt;Lcvq;)V	a	generatePieces
		p	1		collector
		p	2		context
		p	3		pos
		p	4		rotation
	m	()Ldry;	e	type
	f	Lcom/mojang/serialization/Codec;	d	CODEC
c	duf	net/minecraft/world/level/levelgen/structure/structures/package-info
c	dug	net/minecraft/world/level/levelgen/structure/templatesystem/AlwaysTrueTest
	m	()Ldvc;	a	getType
	m	(Ldbq;Lapo;)Z	a	test
		p	1		state
		p	2		random
	m	()Ldug;	b	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldug;	b	INSTANCE
c	duh	net/minecraft/world/level/levelgen/structure/templatesystem/AxisAlignedLinearPosTest
	m	(FFIILgz$a;)V	<init>	<init>
		p	1		minChance
		p	2		maxChance
		p	3		minDistance
		p	4		maxDistance
		p	5		axis
	m	()Lduv;	a	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$5
		p	0		instance
	m	(Lduh;)Lgz$a;	a	lambda$static$4
		p	0		ruleTest
	m	(Lgt;Lgt;Lgt;Lapo;)Z	a	test
		p	1		originalPos
		p	2		currentPos
		p	3		pivot
		p	4		random
	m	(Lduh;)Ljava/lang/Integer;	b	lambda$static$3
		p	0		ruleTest
	m	(Lduh;)Ljava/lang/Integer;	c	lambda$static$2
		p	0		ruleTest
	m	(Lduh;)Ljava/lang/Float;	d	lambda$static$1
		p	0		ruleTest
	m	(Lduh;)Ljava/lang/Float;	e	lambda$static$0
		p	0		ruleTest
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	F	b	minChance
	f	F	d	maxChance
	f	I	e	minDist
	f	I	f	maxDist
	f	Lgz$a;	g	axis
c	dui	net/minecraft/world/level/levelgen/structure/templatesystem/BlackstoneReplaceProcessor
	m	()Ldvg;	a	getType
	m	(Lcml;Lgt;Lgt;Ldvh$c;Ldvh$c;Ldvd;)Ldvh$c;	a	processBlock
		p	1		world
		p	2		pos
		p	3		pivot
		p	4		originalBlockInfo
		p	5		currentBlockInfo
		p	6		data
	m	(Ljava/util/HashMap;)V	a	lambda$new$1
		p	0		replacements
	m	()Ldui;	b	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldui;	b	INSTANCE
	f	Ljava/util/Map;	c	replacements
c	duj	net/minecraft/world/level/levelgen/structure/templatesystem/BlockAgeProcessor
	m	(F)V	<init>	<init>
		p	1		mossiness
	m	()Ldvg;	a	getType
	m	(Lapo;)Ldbq;	a	maybeReplaceFullStoneBlock
		p	1		random
	m	(Lapo;Lcpi;)Ldbq;	a	getRandomFacingStairs
		p	0		random
		p	1		stairs
	m	(Lapo;Ldbq;)Ldbq;	a	maybeReplaceStairs
		p	1		random
		p	2		state
	m	(Lapo;[Ldbq;)Ldbq;	a	getRandomBlock
		p	0		random
		p	1		states
	m	(Lapo;[Ldbq;[Ldbq;)Ldbq;	a	getRandomBlock
		p	1		random
		p	2		regularStates
		p	3		mossyStates
	m	(Lcml;Lgt;Lgt;Ldvh$c;Ldvh$c;Ldvd;)Ldvh$c;	a	processBlock
		p	1		world
		p	2		pos
		p	3		pivot
		p	4		originalBlockInfo
		p	5		currentBlockInfo
		p	6		data
	m	(Lduj;)Ljava/lang/Float;	a	lambda$static$0
		p	0		processor
	m	(Lapo;)Ldbq;	b	maybeReplaceSlab
		p	1		random
	m	(Lapo;)Ldbq;	c	maybeReplaceWall
		p	1		random
	m	(Lapo;)Ldbq;	d	maybeReplaceObsidian
		p	1		random
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	F	b	PROBABILITY_OF_REPLACING_FULL_BLOCK
	f	F	c	PROBABILITY_OF_REPLACING_STAIRS
	f	F	d	PROBABILITY_OF_REPLACING_OBSIDIAN
	f	[Ldbq;	e	NON_MOSSY_REPLACEMENTS
	f	F	f	mossiness
c	duk	net/minecraft/world/level/levelgen/structure/templatesystem/BlockIgnoreProcessor
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		blocks
	m	()Ldvg;	a	getType
	m	(Lcml;Lgt;Lgt;Ldvh$c;Ldvh$c;Ldvd;)Ldvh$c;	a	processBlock
		p	1		world
		p	2		pos
		p	3		pivot
		p	4		originalBlockInfo
		p	5		currentBlockInfo
		p	6		data
	m	(Lduk;)Ljava/util/List;	a	lambda$static$0
		p	0		processor
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lduk;	b	STRUCTURE_BLOCK
	f	Lduk;	c	AIR
	f	Lduk;	d	STRUCTURE_AND_AIR
	f	Lcom/google/common/collect/ImmutableList;	e	toIgnore
c	dul	net/minecraft/world/level/levelgen/structure/templatesystem/BlockMatchTest
	m	(Lcpi;)V	<init>	<init>
		p	1		block
	m	()Ldvc;	a	getType
	m	(Ldbq;Lapo;)Z	a	test
		p	1		state
		p	2		random
	m	(Ldul;)Lcpi;	a	lambda$static$0
		p	0		ruleTest
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcpi;	b	block
c	dum	net/minecraft/world/level/levelgen/structure/templatesystem/BlockRotProcessor
	m	(F)V	<init>	<init>
		p	1		integrity
	m	(Lhh;F)V	<init>	<init>
		p	1		rottableBlocks
		p	2		integrity
	m	(Ljava/util/Optional;F)V	<init>	<init>
		p	1		rottableBlocks
		p	2		integrity
	m	()Ldvg;	a	getType
	m	(Lcml;Lgt;Lgt;Ldvh$c;Ldvh$c;Ldvd;)Ldvh$c;	a	processBlock
		p	1		world
		p	2		pos
		p	3		pivot
		p	4		originalBlockInfo
		p	5		currentBlockInfo
		p	6		data
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Ldum;)Ljava/lang/Float;	a	lambda$static$1
		p	0		processor
	m	(Ldum;)Ljava/util/Optional;	b	lambda$static$0
		p	0		processor
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Optional;	b	rottableBlocks
	f	F	c	integrity
c	dun	net/minecraft/world/level/levelgen/structure/templatesystem/BlockStateMatchTest
	m	(Ldbq;)V	<init>	<init>
		p	1		blockState
	m	()Ldvc;	a	getType
	m	(Ldbq;Lapo;)Z	a	test
		p	1		state
		p	2		random
	m	(Ldun;)Ldbq;	a	lambda$static$0
		p	0		ruleTest
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldbq;	b	blockState
c	duo	net/minecraft/world/level/levelgen/structure/templatesystem/GravityProcessor
	m	(Ldgz$a;I)V	<init>	<init>
		p	1		heightmap
		p	2		offset
	m	()Ldvg;	a	getType
	m	(Lcml;Lgt;Lgt;Ldvh$c;Ldvh$c;Ldvd;)Ldvh$c;	a	processBlock
		p	1		world
		p	2		pos
		p	3		pivot
		p	4		originalBlockInfo
		p	5		currentBlockInfo
		p	6		data
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Lduo;)Ljava/lang/Integer;	a	lambda$static$1
		p	0		processor
	m	(Lduo;)Ldgz$a;	b	lambda$static$0
		p	0		processor
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldgz$a;	b	heightmap
	f	I	c	offset
c	dup	net/minecraft/world/level/levelgen/structure/templatesystem/JigsawReplacementProcessor
	m	()Ldvg;	a	getType
	m	(Lcml;Lgt;Lgt;Ldvh$c;Ldvh$c;Ldvd;)Ldvh$c;	a	processBlock
		p	1		world
		p	2		pos
		p	3		pivot
		p	4		originalBlockInfo
		p	5		currentBlockInfo
		p	6		data
	m	()Ldup;	b	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldup;	b	INSTANCE
c	duq	net/minecraft/world/level/levelgen/structure/templatesystem/LavaSubmergedBlockProcessor
	m	()Ldvg;	a	getType
	m	(Lcml;Lgt;Lgt;Ldvh$c;Ldvh$c;Ldvd;)Ldvh$c;	a	processBlock
		p	1		world
		p	2		pos
		p	3		pivot
		p	4		originalBlockInfo
		p	5		currentBlockInfo
		p	6		data
	m	()Lduq;	b	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lduq;	b	INSTANCE
c	dur	net/minecraft/world/level/levelgen/structure/templatesystem/LinearPosTest
	m	(FFII)V	<init>	<init>
		p	1		minChance
		p	2		maxChance
		p	3		minDistance
		p	4		maxDistance
	m	()Lduv;	a	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
		p	0		instance
	m	(Ldur;)Ljava/lang/Integer;	a	lambda$static$3
		p	0		ruleTest
	m	(Lgt;Lgt;Lgt;Lapo;)Z	a	test
		p	1		originalPos
		p	2		currentPos
		p	3		pivot
		p	4		random
	m	(Ldur;)Ljava/lang/Integer;	b	lambda$static$2
		p	0		ruleTest
	m	(Ldur;)Ljava/lang/Float;	c	lambda$static$1
		p	0		ruleTest
	m	(Ldur;)Ljava/lang/Float;	d	lambda$static$0
		p	0		ruleTest
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	F	b	minChance
	f	F	d	maxChance
	f	I	e	minDist
	f	I	f	maxDist
c	dus	net/minecraft/world/level/levelgen/structure/templatesystem/NopProcessor
	m	()Ldvg;	a	getType
	m	(Lcml;Lgt;Lgt;Ldvh$c;Ldvh$c;Ldvd;)Ldvh$c;	a	processBlock
		p	1		world
		p	2		pos
		p	3		pivot
		p	4		originalBlockInfo
		p	5		currentBlockInfo
		p	6		data
	m	()Ldus;	b	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldus;	b	INSTANCE
c	dut	net/minecraft/world/level/levelgen/structure/templatesystem/PosAlwaysTrueTest
	m	()Lduv;	a	getType
	m	(Lgt;Lgt;Lgt;Lapo;)Z	a	test
		p	1		originalPos
		p	2		currentPos
		p	3		pivot
		p	4		random
	m	()Ldut;	b	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldut;	b	INSTANCE
c	duu	net/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTest
	m	()Lduv;	a	getType
	m	(Lgt;Lgt;Lgt;Lapo;)Z	a	test
		p	1		originalPos
		p	2		currentPos
		p	3		pivot
		p	4		random
	f	Lcom/mojang/serialization/Codec;	c	CODEC
c	duv	net/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTestType
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	lambda$register$0
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lduv;	a	register
		p	0		id
		p	1		codec
	f	Lduv;	a	ALWAYS_TRUE_TEST
	f	Lduv;	b	LINEAR_POS_TEST
	f	Lduv;	c	AXIS_ALIGNED_LINEAR_POS_TEST
c	duw	net/minecraft/world/level/levelgen/structure/templatesystem/ProcessorRule
	m	(Ldvb;Ldvb;Ldbq;)V	<init>	<init>
		p	1		inputPredicate
		p	2		locationPredicate
		p	3		state
	m	(Ldvb;Ldvb;Lduu;Ldbq;)V	<init>	<init>
		p	1		inputPredicate
		p	2		locationPredicate
		p	3		positionPredicate
		p	4		state
	m	(Ldvb;Ldvb;Lduu;Ldbq;Ljava/util/Optional;)V	<init>	<init>
		p	1		inputPredicate
		p	2		locationPredicate
		p	3		positionPredicate
		p	4		outputState
		p	5		nbt
	m	()Ldbq;	a	getOutputState
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$5
		p	0		instance
	m	(Ldbq;Ldbq;Lgt;Lgt;Lgt;Lapo;)Z	a	test
		p	1		input
		p	2		currentState
		p	3		originalPos
		p	4		currentPos
		p	5		pivot
		p	6		random
	m	(Lduw;)Ljava/util/Optional;	a	lambda$static$4
		p	0		rule
	m	()Lre;	b	getOutputTag
	m	(Lduw;)Ldbq;	b	lambda$static$3
		p	0		rule
	m	(Lduw;)Lduu;	c	lambda$static$2
		p	0		rule
	m	(Lduw;)Ldvb;	d	lambda$static$1
		p	0		rule
	m	(Lduw;)Ldvb;	e	lambda$static$0
		p	0		rule
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldvb;	b	inputPredicate
	f	Ldvb;	c	locPredicate
	f	Lduu;	d	posPredicate
	f	Ldbq;	e	outputState
	f	Lre;	f	outputTag
c	dux	net/minecraft/world/level/levelgen/structure/templatesystem/ProtectedBlockProcessor
	m	(Lanv;)V	<init>	<init>
		p	1		protectedBlocksTag
	m	()Ldvg;	a	getType
	m	(Lcml;Lgt;Lgt;Ldvh$c;Ldvh$c;Ldvd;)Ldvh$c;	a	processBlock
		p	1		world
		p	2		pos
		p	3		pivot
		p	4		originalBlockInfo
		p	5		currentBlockInfo
		p	6		data
	m	(Ldux;)Lanv;	a	lambda$static$0
		p	0		processor
	f	Lanv;	a	cannotReplace
	f	Lcom/mojang/serialization/Codec;	b	CODEC
c	duy	net/minecraft/world/level/levelgen/structure/templatesystem/RandomBlockMatchTest
	m	(Lcpi;F)V	<init>	<init>
		p	1		block
		p	2		probability
	m	()Ldvc;	a	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Ldbq;Lapo;)Z	a	test
		p	1		state
		p	2		random
	m	(Lduy;)Ljava/lang/Float;	a	lambda$static$1
		p	0		ruleTest
	m	(Lduy;)Lcpi;	b	lambda$static$0
		p	0		ruleTest
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcpi;	b	block
	f	F	d	probability
c	duz	net/minecraft/world/level/levelgen/structure/templatesystem/RandomBlockStateMatchTest
	m	(Ldbq;F)V	<init>	<init>
		p	1		blockState
		p	2		probability
	m	()Ldvc;	a	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Ldbq;Lapo;)Z	a	test
		p	1		state
		p	2		random
	m	(Lduz;)Ljava/lang/Float;	a	lambda$static$1
		p	0		ruleTest
	m	(Lduz;)Ldbq;	b	lambda$static$0
		p	0		ruleTest
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldbq;	b	blockState
	f	F	d	probability
c	dva	net/minecraft/world/level/levelgen/structure/templatesystem/RuleProcessor
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		rules
	m	()Ldvg;	a	getType
	m	(Lcml;Lgt;Lgt;Ldvh$c;Ldvh$c;Ldvd;)Ldvh$c;	a	processBlock
		p	1		world
		p	2		pos
		p	3		pivot
		p	4		originalBlockInfo
		p	5		currentBlockInfo
		p	6		data
	m	(Ldva;)Ljava/util/List;	a	lambda$static$0
		p	0		processor
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcom/google/common/collect/ImmutableList;	b	rules
c	dvb	net/minecraft/world/level/levelgen/structure/templatesystem/RuleTest
	m	()Ldvc;	a	getType
	m	(Ldbq;Lapo;)Z	a	test
		p	1		state
		p	2		random
	f	Lcom/mojang/serialization/Codec;	c	CODEC
c	dvc	net/minecraft/world/level/levelgen/structure/templatesystem/RuleTestType
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	lambda$register$0
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Ldvc;	a	register
		p	0		id
		p	1		codec
	f	Ldvc;	a	ALWAYS_TRUE_TEST
	f	Ldvc;	b	BLOCK_TEST
	f	Ldvc;	c	BLOCKSTATE_TEST
	f	Ldvc;	d	TAG_TEST
	f	Ldvc;	e	RANDOM_BLOCK_TEST
	f	Ldvc;	f	RANDOM_BLOCKSTATE_TEST
c	dvd	net/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings
	m	()Ldvd;	a	copy
	m	(Lapo;)Ldvd;	a	setRandom
		p	1		random
	m	(Lcua;)Ldvd;	a	setMirror
		p	1		mirror
	m	(Lcvq;)Ldvd;	a	setRotation
		p	1		rotation
	m	(Ldrh;)Ldvd;	a	setBoundingBox
		p	1		boundingBox
	m	(Ldve;)Ldvd;	a	addProcessor
		p	1		processor
	m	(Lgt;)Ldvd;	a	setRotationPivot
		p	1		position
	m	(Ljava/util/List;Lgt;)Ldvh$a;	a	getRandomPalette
		p	1		infoLists
		p	2		pos
	m	(Z)Ldvd;	a	setIgnoreEntities
		p	1		ignoreEntities
	m	()Ldvd;	b	clearProcessors
	m	(Ldve;)Ldvd;	b	popProcessor
		p	1		processor
	m	(Lgt;)Lapo;	b	getRandom
		p	1		pos
	m	(Z)Ldvd;	b	setKeepLiquids
		p	1		placeFluids
	m	()Lcua;	c	getMirror
	m	(Z)Ldvd;	c	setKnownShape
		p	1		updateNeighbors
	m	()Lcvq;	d	getRotation
	m	(Z)Ldvd;	d	setFinalizeEntities
		p	1		initializeMobs
	m	()Lgt;	e	getRotationPivot
	m	()Z	f	isIgnoreEntities
	m	()Ldrh;	g	getBoundingBox
	m	()Z	h	getKnownShape
	m	()Ljava/util/List;	i	getProcessors
	m	()Z	j	shouldKeepLiquids
	m	()Z	k	shouldFinalizeEntities
	f	Lcua;	a	mirror
	f	Lcvq;	b	rotation
	f	Lgt;	c	rotationPivot
	f	Z	d	ignoreEntities
	f	Ldrh;	e	boundingBox
	f	Z	f	keepLiquids
	f	Lapo;	g	random
	f	I	h	palette
	f	Ljava/util/List;	i	processors
	f	Z	j	knownShape
	f	Z	k	finalizeEntities
c	dve	net/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessor
	m	()Ldvg;	a	getType
	m	(Lcmj;Lgt;Lgt;Ldvd;Ljava/util/List;)V	a	finalizeStructure
		p	1		world
		p	2		pos
		p	3		pivot
		p	4		placementData
		p	5		processedOnFirstRound
	m	(Lcml;Lgt;Lgt;Ldvh$c;Ldvh$c;Ldvd;)Ldvh$c;	a	processBlock
		p	1		world
		p	2		pos
		p	3		pivot
		p	4		originalBlockInfo
		p	5		currentBlockInfo
		p	6		data
c	dvf	net/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorList
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		list
	m	()Ljava/util/List;	a	list
	f	Ljava/util/List;	a	list
c	dvg	net/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType
	m	(Lcom/mojang/datafixers/util/Either;)Ldvf;	a	lambda$static$2
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	lambda$register$3
	m	(Ldvf;)Ldvf;	a	lambda$static$1
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Ldvg;	a	register
		p	0		id
		p	1		codec
	m	(Ldvf;)Ldvf;	b	lambda$static$0
	f	Ldvg;	a	BLOCK_IGNORE
	f	Ldvg;	b	BLOCK_ROT
	f	Ldvg;	c	GRAVITY
	f	Ldvg;	d	JIGSAW_REPLACEMENT
	f	Ldvg;	e	RULE
	f	Ldvg;	f	NOP
	f	Ldvg;	g	BLOCK_AGE
	f	Ldvg;	h	BLACKSTONE_REPLACE
	f	Ldvg;	i	LAVA_SUBMERGED_BLOCK
	f	Ldvg;	j	PROTECTED_BLOCKS
	f	Lcom/mojang/serialization/Codec;	k	SINGLE_CODEC
	f	Lcom/mojang/serialization/Codec;	l	LIST_OBJECT_CODEC
	f	Lcom/mojang/serialization/Codec;	m	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	n	LIST_CODEC
c	dvh	net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate
	m	()Lhy;	a	getSize
	m	(IIILcmj;ILgz;III)V	a	lambda$updateShapeAtEdge$4
		p	5		direction
		p	6		x
		p	7		y
		p	8		z
	m	(Lbfh;)Z	a	lambda$fillEntityList$3
		p	0		entity
	m	(Lcmi;Lgt;Lgt;)V	a	fillEntityList
		p	1		world
		p	2		firstCorner
		p	3		secondCorner
	m	(Lcmi;Lgt;Lhy;ZLcpi;)V	a	fillFromWorld
		p	1		world
		p	2		start
		p	3		dimensions
		p	4		includeEntities
		p	5		ignoredBlock
	m	(Lcmj;ILedn;III)V	a	updateShapeAtEdge
		p	0		world
		p	1		flags
		p	2		set
		p	3		startX
		p	4		startY
		p	5		startZ
	m	(Lcmj;Lgt;Lgt;Ldvd;Ljava/util/List;)Ljava/util/List;	a	processBlockInfos
		p	0		world
		p	1		pos
		p	2		pivot
		p	3		placementData
		p	4		infos
	m	(Lcmx;Lgt;Lcua;Lcvq;Lgt;Ldrh;Z)V	a	placeEntities
		p	1		world
		p	2		pos
		p	3		mirror
		p	4		rotation
		p	5		pivot
		p	6		area
		p	7		initializeMobs
	m	(Lcmx;Lgt;Lgt;Ldvd;Lapo;I)Z	a	placeInWorld
		p	1		world
		p	2		pos
		p	3		pivot
		p	4		placementData
		p	5		random
		p	6		flags
	m	(Lcmx;Lre;)Ljava/util/Optional;	a	createEntityIgnoreException
		p	0		world
		p	1		nbt
	m	(Lcvq;)Lhy;	a	getSize
		p	1		rotation
	m	(Lcvq;Lcua;Lede;ZLcmx;Lre;Lbfh;)V	a	lambda$placeEntities$5
		p	6		entity
	m	(Ldvd;Lgt;)Lgt;	a	calculateRelativePosition
		p	0		placementData
		p	1		pos
	m	(Ldvd;Lgt;Ldvd;Lgt;)Lgt;	a	calculateConnectedPosition
		p	1		placementData1
		p	2		pos1
		p	3		placementData2
		p	4		pos2
	m	(Ldvh$c;)I	a	lambda$buildInfoList$2
		p	0		blockInfo
	m	(Ldvh$c;Ljava/util/List;Ljava/util/List;Ljava/util/List;)V	a	addToLists
		p	0		blockInfo
		p	1		fullBlocks
		p	2		blocksWithNbt
		p	3		otherBlocks
	m	(Lede;Lcua;Lcvq;Lgt;)Lede;	a	transform
		p	0		point
		p	1		mirror
		p	2		rotation
		p	3		pivot
	m	(Lgt;Lcua;Lcvq;)Lgt;	a	getZeroPositionWithTransform
		p	1		pos
		p	2		mirror
		p	3		rotation
	m	(Lgt;Lcua;Lcvq;II)Lgt;	a	getZeroPositionWithTransform
		p	0		pos
		p	1		mirror
		p	2		rotation
		p	3		offsetX
		p	4		offsetZ
	m	(Lgt;Lcua;Lcvq;Lgt;)Lgt;	a	transform
		p	0		pos
		p	1		mirror
		p	2		rotation
		p	3		pivot
	m	(Lgt;Lcvq;Lgt;Lcua;)Ldrh;	a	getBoundingBox
		p	1		pos
		p	2		rotation
		p	3		pivot
		p	4		mirror
	m	(Lgt;Lcvq;Lgt;Lcua;Lhy;)Ldrh;	a	getBoundingBox
		p	0		pos
		p	1		rotation
		p	2		pivot
		p	3		mirror
		p	4		dimensions
	m	(Lgt;Ldvd;Lcpi;)Ljava/util/List;	a	filterBlocks
		p	1		pos
		p	2		placementData
		p	3		block
	m	(Lgt;Ldvd;Lcpi;Z)Lit/unimi/dsi/fastutil/objects/ObjectArrayList;	a	filterBlocks
		p	1		pos
		p	2		placementData
		p	3		block
		p	4		transformed
	m	(Lhe;Lre;)V	a	load
		p	1		blockLookup
		p	2		nbt
	m	(Lhe;Lrk;Lrk;)V	a	loadPalette
		p	1		blockLookup
		p	2		palette
		p	3		blocks
	m	(Ljava/lang/String;)V	a	setAuthor
		p	1		author
	m	(Ljava/util/List;Ljava/util/List;Ljava/util/List;)Ljava/util/List;	a	buildInfoList
		p	0		fullBlocks
		p	1		blocksWithNbt
		p	2		otherBlocks
	m	(Lre;)Lre;	a	save
		p	1		nbt
	m	([D)Lrk;	a	newDoubleList
		p	1		doubles
	m	([I)Lrk;	a	newIntegerList
		p	1		ints
	m	()Ljava/lang/String;	b	getAuthor
	m	(Ldvd;Lgt;)Ldrh;	b	getBoundingBox
		p	1		placementData
		p	2		pos
	m	(Ldvh$c;)I	b	lambda$buildInfoList$1
		p	0		blockInfo
	m	(Ldvh$c;)I	c	lambda$buildInfoList$0
		p	0		blockInfo
	f	Ljava/lang/String;	a	PALETTE_TAG
	f	Ljava/lang/String;	b	PALETTE_LIST_TAG
	f	Ljava/lang/String;	c	ENTITIES_TAG
	f	Ljava/lang/String;	d	BLOCKS_TAG
	f	Ljava/lang/String;	e	BLOCK_TAG_POS
	f	Ljava/lang/String;	f	BLOCK_TAG_STATE
	f	Ljava/lang/String;	g	BLOCK_TAG_NBT
	f	Ljava/lang/String;	h	ENTITY_TAG_POS
	f	Ljava/lang/String;	i	ENTITY_TAG_BLOCKPOS
	f	Ljava/lang/String;	j	ENTITY_TAG_NBT
	f	Ljava/lang/String;	k	SIZE_TAG
	f	Ljava/util/List;	l	palettes
	f	Ljava/util/List;	m	entityInfoList
	f	Lhy;	n	size
	f	Ljava/lang/String;	o	author
c	dvh$1	net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$Rotation
	f	[I	b	$SwitchMap$net$minecraft$world$level$block$Mirror
c	dvh$a	net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$Palette
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		infos
	m	()Ljava/util/List;	a	blocks
	m	(Lcpi;)Ljava/util/List;	a	blocks
		p	1		block
	m	(Lcpi;Ldvh$c;)Z	a	lambda$blocks$0
		p	1		info
	m	(Lcpi;)Ljava/util/List;	b	lambda$blocks$1
		p	1		block2
	f	Ljava/util/List;	a	blocks
	f	Ljava/util/Map;	b	cache
c	dvh$b	net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$SimplePalette
	m	(I)Ldbq;	a	stateFor
		p	1		id
	m	(Ldbq;)I	a	idFor
		p	1		state
	m	(Ldbq;I)V	a	addMapping
		p	1		state
		p	2		id
	f	Ldbq;	a	DEFAULT_BLOCK_STATE
	f	Lhj;	b	ids
	f	I	c	lastId
c	dvh$c	net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo
	m	(Lgt;Ldbq;Lre;)V	<init>	<init>
		p	1		pos
		p	2		state
		p	3		nbt
	f	Lgt;	a	pos
	f	Ldbq;	b	state
	f	Lre;	c	nbt
c	dvh$d	net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureEntityInfo
	m	(Lede;Lgt;Lre;)V	<init>	<init>
		p	1		pos
		p	2		blockPos
		p	3		nbt
	f	Lede;	a	pos
	f	Lgt;	b	blockPos
	f	Lre;	c	nbt
c	dvi	net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager
	m	(Lalh;Ldye$c;Lcom/mojang/datafixers/DataFixer;Lhe;)V	<init>	<init>
		p	1		resourceManager
		p	2		session
		p	3		dataFixer
		p	4		blockLookup
	m	()Ljava/util/stream/Stream;	a	listTemplates
	m	(ILjava/lang/String;)Ljava/lang/String;	a	lambda$listFolderContents$7
		p	1		filename
	m	(Ladd;)Ldvh;	a	getOrCreate
		p	1		id
	m	(Ladd;Ljava/lang/String;)Ljava/nio/file/Path;	a	getPathToGeneratedStructure
		p	1		id
		p	2		extension
	m	(Ladd;Ljava/lang/Throwable;)V	a	lambda$loadFromResource$2
		p	1		throwable
	m	(Ladd;Ljava/nio/file/Path;)Ljava/util/Optional;	a	loadFromSnbt
		p	1		id
		p	2		path
	m	(Lalh;)V	a	onResourceManagerReload
		p	1		resourceManager
	m	(Ldvi$a;Ljava/util/function/Consumer;)Ljava/util/Optional;	a	load
		p	1		opener
		p	2		exceptionConsumer
	m	(Ldvi$b;)Ljava/util/stream/Stream;	a	lambda$listTemplates$0
		p	0		provider
	m	(Ljava/io/InputStream;)Ldvh;	a	readStructure
		p	1		templateIInputStream
	m	(Ljava/lang/String;Ljava/nio/file/Path;)Z	a	lambda$listFolderContents$8
		p	1		path
	m	(Ljava/lang/String;Ljava/util/function/Function;Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/util/function/Consumer;)V	a	lambda$listFolderContents$9
		p	4		path
		p	5		consumer
	m	(Ljava/nio/file/Path;)Ljava/util/stream/Stream;	a	listGeneratedInNamespace
		p	1		namespaceDirectory
	m	(Ljava/nio/file/Path;Ladd;Ljava/lang/String;)Ljava/nio/file/Path;	a	createPathToStructure
		p	0		path
		p	1		id
		p	2		extension
	m	(Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;)Ljava/util/stream/Stream;	a	listFolderContents
		p	1		structuresDirectoryPath
		p	2		namespace
		p	3		extension
	m	(Ljava/nio/file/Path;Ljava/lang/Throwable;)V	a	lambda$loadFromGenerated$4
		p	1		throwable
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/lang/String;	a	relativize
		p	1		root
		p	2		path
	m	(Lre;)Ldvh;	a	readStructure
		p	1		nbt
	m	()Ljava/util/stream/Stream;	b	listResources
	m	(Ladd;)Ljava/util/Optional;	b	get
		p	1		id
	m	(Ljava/nio/file/Path;)Ljava/util/stream/Stream;	b	lambda$listGenerated$6
		p	1		path
	m	(Ljava/nio/file/Path;Ladd;Ljava/lang/String;)Ljava/nio/file/Path;	b	createAndValidatePathToStructure
		p	0		path
		p	1		id
		p	2		extension
	m	()Ljava/util/stream/Stream;	c	listTestStructures
	m	(Ladd;)Z	c	save
		p	1		id
	m	(Ljava/nio/file/Path;)Z	c	lambda$listGenerated$5
		p	0		path
	m	()Ljava/util/stream/Stream;	d	listGenerated
	m	(Ladd;)V	d	remove
		p	1		id
	m	(Ljava/nio/file/Path;)Ljava/io/InputStream;	d	lambda$loadFromGenerated$3
	m	(Ladd;)Ljava/util/Optional;	e	tryLoad
		p	1		id
	m	(Ladd;)Ljava/util/Optional;	f	loadFromResource
		p	1		id
	m	(Ladd;)Ljava/util/Optional;	g	loadFromTestStructures
		p	1		id
	m	(Ladd;)Ljava/util/Optional;	h	loadFromGenerated
		p	1		id
	m	(Ladd;)Ljava/io/InputStream;	i	lambda$loadFromResource$1
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/lang/String;	b	STRUCTURE_DIRECTORY_NAME
	f	Ljava/lang/String;	c	TEST_STRUCTURES_DIR
	f	Ljava/lang/String;	d	STRUCTURE_FILE_EXTENSION
	f	Ljava/lang/String;	e	STRUCTURE_TEXT_FILE_EXTENSION
	f	Ljava/util/Map;	f	structureRepository
	f	Lcom/mojang/datafixers/DataFixer;	g	fixerUpper
	f	Lalh;	h	resourceManager
	f	Ljava/nio/file/Path;	i	generatedDir
	f	Ljava/util/List;	j	sources
	f	Lhe;	k	blockLookup
	f	Lacw;	l	LISTER
c	dvi$a	net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager$InputStreamOpener
c	dvi$b	net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager$Source
	m	()Ljava/util/function/Function;	a	loader
	m	()Ljava/util/function/Supplier;	b	lister
	f	Ljava/util/function/Function;	a	loader
	f	Ljava/util/function/Supplier;	b	lister
c	dvj	net/minecraft/world/level/levelgen/structure/templatesystem/TagMatchTest
	m	(Lanv;)V	<init>	<init>
		p	1		tag
	m	()Ldvc;	a	getType
	m	(Ldbq;Lapo;)Z	a	test
		p	1		state
		p	2		random
	m	(Ldvj;)Lanv;	a	lambda$static$0
		p	0		ruleTest
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lanv;	b	tag
c	dvk	net/minecraft/world/level/levelgen/structure/templatesystem/package-info
c	dvl	net/minecraft/world/level/levelgen/synth/BlendedNoise
	m	(Lapo;DDDDD)V	<init>	<init>
		p	1		random
		p	2		xzScale
		p	4		yScale
		p	6		xzFactor
		p	8		yFactor
		p	10		smearScaleMultiplier
	m	(Ldvp;Ldvp;Ldvp;DDDDD)V	<init>	<init>
		p	1		lowerInterpolatedNoise
		p	2		upperInterpolatedNoise
		p	3		interpolationNoise
		p	4		xzScale
		p	6		yScale
		p	8		xzFactor
		p	10		yFactor
		p	12		smearScaleMultiplier
	m	()D	a	minValue
	m	(DDDDD)Ldvl;	a	createUnseeded
		p	0		xzScale
		p	2		yScale
		p	4		xzFactor
		p	6		yFactor
		p	8		smearScaleMultiplier
	m	(Lapo;)Ldvl;	a	withNewRandom
		p	1		random
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$5
	m	(Ldgs$b;)D	a	compute
		p	1		pos
	m	(Ldvl;)Ljava/lang/Double;	a	lambda$static$4
	m	(Ljava/lang/StringBuilder;)V	a	parityConfigString
		p	1		info
	m	()D	b	maxValue
	m	(Ldvl;)Ljava/lang/Double;	b	lambda$static$3
	m	()Lapd;	c	codec
	m	(Ldvl;)Ljava/lang/Double;	c	lambda$static$2
	m	(Ldvl;)Ljava/lang/Double;	d	lambda$static$1
	m	(Ldvl;)Ljava/lang/Double;	e	lambda$static$0
	f	Lapd;	a	CODEC
	f	Lcom/mojang/serialization/Codec;	e	SCALE_RANGE
	f	Lcom/mojang/serialization/MapCodec;	f	DATA_CODEC
	f	Ldvp;	g	minLimitNoise
	f	Ldvp;	h	maxLimitNoise
	f	Ldvp;	i	mainNoise
	f	D	j	xzMultiplier
	f	D	k	yMultiplier
	f	D	l	xzFactor
	f	D	m	yFactor
	f	D	n	smearScaleMultiplier
	f	D	o	maxValue
	f	D	p	xzScale
	f	D	q	yScale
c	dvm	net/minecraft/world/level/levelgen/synth/ImprovedNoise
	m	(Lapo;)V	<init>	<init>
		p	1		random
	m	(DDD)D	a	noise
		p	1		x
		p	3		y
		p	5		z
	m	(DDDDD)D	a	noise
		p	1		x
		p	3		y
		p	5		z
		p	7		yScale
		p	9		yMax
	m	(DDD[D)D	a	noiseWithDerivative
		p	1		x
		p	3		y
		p	5		z
	m	(I)I	a	p
		p	1		input
	m	(IDDD)D	a	gradDot
		p	0		hash
		p	1		x
		p	3		y
		p	5		z
	m	(IIIDDDD)D	a	sampleAndLerp
		p	1		sectionX
		p	2		sectionY
		p	3		sectionZ
		p	4		localX
		p	6		localY
		p	8		localZ
		p	10		fadeLocalY
	m	(IIIDDD[D)D	a	sampleWithDerivative
		p	1		sectionX
		p	2		sectionY
		p	3		sectionZ
		p	4		localX
		p	6		localY
		p	8		localZ
	m	(Ljava/lang/StringBuilder;)V	a	parityConfigString
		p	1		info
	f	D	a	xo
	f	D	b	yo
	f	D	c	zo
	f	F	d	SHIFT_UP_EPSILON
	f	[B	e	p
c	dvn	net/minecraft/world/level/levelgen/synth/NoiseUtils
	m	(DD)D	a	biasTowardsExtreme
	m	(Ljava/lang/StringBuilder;DDD[B)V	a	parityNoiseOctaveConfigString
		p	0		builder
		p	1		originX
		p	3		originY
		p	5		originZ
		p	7		permutation
	m	(Ljava/lang/StringBuilder;DDD[I)V	a	parityNoiseOctaveConfigString
		p	0		builder
		p	1		originX
		p	3		originY
		p	5		originZ
		p	7		permutation
c	dvo	net/minecraft/world/level/levelgen/synth/NormalNoise
	m	(Lapo;Ldvo$a;Z)V	<init>	<init>
		p	1		random
		p	2		parameters
		p	3		modern
	m	()D	a	maxValue
	m	(DDD)D	a	getValue
		p	1		x
		p	3		y
		p	5		z
	m	(I)D	a	expectedDeviation
		p	0		octaves
	m	(Lapo;I[D)Ldvo;	a	create
		p	0		random
		p	1		offset
		p	2		octaves
	m	(Lapo;Ldvo$a;)Ldvo;	a	createLegacyNetherBiome
		p	0		random
		p	1		parameters
	m	(Ljava/lang/StringBuilder;)V	a	parityConfigString
		p	1		info
	m	()Ldvo$a;	b	parameters
	m	(Lapo;Ldvo$a;)Ldvo;	b	create
		p	0		random
		p	1		parameters
	f	D	a	INPUT_FACTOR
	f	D	b	TARGET_DEVIATION
	f	D	c	valueFactor
	f	Ldvp;	d	first
	f	Ldvp;	e	second
	f	D	f	maxValue
	f	Ldvo$a;	g	parameters
c	dvo$a	net/minecraft/world/level/levelgen/synth/NormalNoise$NoiseParameters
	m	(ID[D)V	<init>	<init>
		p	1		firstOctave
		p	2		firstAmplitude
		p	4		amplitudes
	m	(ILjava/util/List;)V	<init>	<init>
		p	1		firstOctave
		p	2		amplitudes
	m	()I	a	firstOctave
	m	(DLit/unimi/dsi/fastutil/doubles/DoubleArrayList;)V	a	lambda$new$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Lit/unimi/dsi/fastutil/doubles/DoubleList;	b	amplitudes
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	I	c	firstOctave
	f	Lit/unimi/dsi/fastutil/doubles/DoubleList;	d	amplitudes
c	dvp	net/minecraft/world/level/levelgen/synth/PerlinNoise
	m	(Lapo;Lcom/mojang/datafixers/util/Pair;Z)V	<init>	<init>
		p	1		random
		p	2		firstOctaveAndAmplitudes
		p	3		xoroshiro
	m	()D	a	maxValue
	m	(D)D	a	maxBrokenValue
	m	(DDD)D	a	getValue
		p	1		x
		p	3		y
		p	5		z
	m	(DDDDDZ)D	a	getValue
		p	1		x
		p	3		y
		p	5		z
		p	7		yScale
		p	9		yMax
		p	11		useOrigin
	m	(I)Ldvm;	a	getOctaveNoise
		p	1		octave
	m	(Lapo;)V	a	skipOctave
		p	0		random
	m	(Lapo;ID[D)Ldvp;	a	create
		p	0		random
		p	1		offset
		p	2		firstAmplitude
		p	4		amplitudes
	m	(Lapo;ILit/unimi/dsi/fastutil/doubles/DoubleList;)Ldvp;	a	createLegacyForLegacyNetherBiome
		p	0		random
		p	1		offset
		p	2		amplitudes
	m	(Lapo;Ljava/util/List;)Ldvp;	a	create
		p	0		random
		p	1		octaves
	m	(Lapo;Ljava/util/stream/IntStream;)Ldvp;	a	createLegacyForBlendedNoise
		p	0		random
		p	1		octaves
	m	(Lit/unimi/dsi/fastutil/ints/IntSortedSet;)Lcom/mojang/datafixers/util/Pair;	a	makeAmplitudes
		p	0		octaves
	m	(Ljava/lang/Double;)Ljava/lang/String;	a	lambda$parityConfigString$1
	m	(Ljava/lang/StringBuilder;)V	a	parityConfigString
		p	1		info
	m	()I	b	firstOctave
	m	(D)D	b	wrap
		p	0		value
	m	(Lapo;ILit/unimi/dsi/fastutil/doubles/DoubleList;)Ldvp;	b	create
		p	0		random
		p	1		offset
		p	2		amplitudes
	m	(Lapo;Ljava/util/stream/IntStream;)Ldvp;	b	create
		p	0		random
		p	1		octaves
	m	(Ljava/lang/Double;)Z	b	lambda$new$0
		p	0		amplitude
	m	()Lit/unimi/dsi/fastutil/doubles/DoubleList;	c	amplitudes
	m	(D)D	c	edgeValue
		p	1		scale
	f	I	a	ROUND_OFF
	f	[Ldvm;	b	noiseLevels
	f	I	c	firstOctave
	f	Lit/unimi/dsi/fastutil/doubles/DoubleList;	d	amplitudes
	f	D	e	lowestFreqValueFactor
	f	D	f	lowestFreqInputFactor
	f	D	g	maxValue
c	dvq	net/minecraft/world/level/levelgen/synth/PerlinSimplexNoise
	m	(Lapo;Lit/unimi/dsi/fastutil/ints/IntSortedSet;)V	<init>	<init>
		p	1		random
		p	2		octaves
	m	(Lapo;Ljava/util/List;)V	<init>	<init>
		p	1		random
		p	2		octaves
	m	(DDZ)D	a	getValue
		p	1		x
		p	3		y
		p	5		useOrigin
	f	[Ldvr;	a	noiseLevels
	f	D	b	highestFreqValueFactor
	f	D	c	highestFreqInputFactor
c	dvr	net/minecraft/world/level/levelgen/synth/SimplexNoise
	m	(Lapo;)V	<init>	<init>
		p	1		random
	m	(DD)D	a	getValue
		p	1		x
		p	3		y
	m	(DDD)D	a	getValue
		p	1		x
		p	3		y
		p	5		z
	m	(I)I	a	p
		p	1		input
	m	(IDDDD)D	a	getCornerNoise3D
		p	1		hash
		p	2		x
		p	4		y
		p	6		z
		p	8		distance
	m	([IDDD)D	a	dot
		p	0		gradient
		p	1		x
		p	3		y
		p	5		z
	f	[[I	a	GRADIENT
	f	D	b	xo
	f	D	c	yo
	f	D	d	zo
	f	D	e	SQRT_3
	f	D	f	F2
	f	D	g	G2
	f	[I	h	p
c	dvs	net/minecraft/world/level/levelgen/synth/package-info
c	dvt	net/minecraft/world/level/lighting/BlockLightEngine
	m	(Ldea;)V	<init>	<init>
		p	1		chunkProvider
	m	(JIZ)V	a	checkNeighborsAfterUpdate
		p	1		id
		p	3		level
		p	4		decrease
	m	(JJI)I	a	getComputedLevel
		p	1		id
		p	3		excludedId
		p	5		maxLevel
	m	(Lgt;I)V	a	onBlockEmissionIncrease
		p	1		pos
		p	2		level
	m	(JJI)I	b	computeLevelFromNeighbor
		p	1		sourceId
		p	3		targetId
		p	5		level
	m	(J)I	d	getLightEmission
		p	1		blockPos
	f	[Lgz;	f	DIRECTIONS
	f	Lgt$a;	g	pos
c	dvu	net/minecraft/world/level/lighting/BlockLightSectionStorage
	m	(Ldea;)V	<init>	<init>
		p	1		chunkProvider
	m	(J)I	d	getLightValue
		p	1		blockPos
c	dvu$a	net/minecraft/world/level/lighting/BlockLightSectionStorage$BlockDataLayerStorageMap
	m	(Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap;)V	<init>	<init>
		p	1		arrays
	m	()Ldvu$a;	a	copy
	m	()Ldvv;	b	copy
c	dvv	net/minecraft/world/level/lighting/DataLayerStorageMap
	m	(Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap;)V	<init>	<init>
		p	1		arrays
	m	(J)V	a	copyDataLayer
		p	1		pos
	m	(JLddt;)V	a	setLayer
		p	1		pos
		p	3		data
	m	()Ldvv;	b	copy
	m	(J)Z	b	hasLayer
		p	1		chunkPos
	m	()V	c	clearCache
	m	(J)Lddt;	c	getLayer
		p	1		chunkPos
	m	()V	d	disableCache
	m	(J)Lddt;	d	removeLayer
		p	1		chunkPos
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap;	a	map
	f	I	b	CACHE_SIZE
	f	[J	c	lastSectionKeys
	f	[Lddt;	d	lastSections
	f	Z	e	cacheEnabled
c	dvw	net/minecraft/world/level/lighting/DynamicGraphMinFixedPoint
	m	(III)V	<init>	<init>
		p	1		levelCount
		p	2		expectedLevelSize
		p	3		expectedTotalSize
	m	(I)V	a	checkFirstQueuedLevel
		p	1		maxLevel
	m	(II)I	a	getKey
		p	1		a
		p	2		b
	m	(J)Z	a	isSource
		p	1		id
	m	(JI)V	a	setLevel
		p	1		id
		p	3		level
	m	(JII)V	a	enqueue
		p	1		id
		p	3		level
		p	4		targetLevel
	m	(JIIZ)V	a	dequeue
		p	1		id
		p	3		level
		p	4		levelCount
		p	5		removeFully
	m	(JIZ)V	a	checkNeighborsAfterUpdate
		p	1		id
		p	3		level
		p	4		decrease
	m	(JJI)I	a	getComputedLevel
		p	1		id
		p	3		excludedId
		p	5		maxLevel
	m	(JJIIIZ)V	a	checkEdge
		p	1		sourceId
		p	3		id
		p	5		level
		p	6		currentLevel
		p	7		pendingLevel
		p	8		decrease
	m	(JJIZ)V	a	checkEdge
		p	1		sourceId
		p	3		id
		p	5		level
		p	6		decrease
	m	(Ljava/util/function/LongPredicate;)V	a	removeIf
		p	1		predicate
	m	(Ljava/util/function/LongPredicate;Lit/unimi/dsi/fastutil/longs/LongList;J)V	a	lambda$removeIf$0
	m	()Z	b	hasWork
	m	(I)I	b	runUpdates
		p	1		maxSteps
	m	(JJI)I	b	computeLevelFromNeighbor
		p	1		sourceId
		p	3		targetId
		p	5		level
	m	(JJIZ)V	b	checkNeighbor
		p	1		sourceId
		p	3		targetId
		p	5		level
		p	6		decrease
	m	()I	c	getQueueSize
	m	(J)I	c	getLevel
		p	1		id
	m	(J)V	e	removeFromQueue
		p	1		id
	m	(J)V	f	checkNode
		p	1		id
	f	I	a	NO_COMPUTED_LEVEL
	f	I	b	levelCount
	f	[Lit/unimi/dsi/fastutil/longs/LongLinkedOpenHashSet;	c	queues
	f	Lit/unimi/dsi/fastutil/longs/Long2ByteMap;	d	computedLevels
	f	I	e	firstQueuedLevel
	f	Z	f	hasWork
c	dvw$1	net/minecraft/world/level/lighting/DynamicGraphMinFixedPoint$1
	f	I	a	val$minQueueSize
	f	Ldvw;	b	this$0
c	dvw$2	net/minecraft/world/level/lighting/DynamicGraphMinFixedPoint$2
	f	I	a	val$minMapSize
	f	Ldvw;	b	this$0
c	dvx	net/minecraft/world/level/lighting/LayerLightEngine
	m	(Ldea;Lcmr;Ldvz;)V	<init>	<init>
		p	1		chunkProvider
		p	2		type
		p	3		lightStorage
	m	()Z	D_	hasLightWork
	m	(II)Lclo;	a	getChunk
		p	1		chunkX
		p	2		chunkZ
	m	(IZZ)I	a	runUpdates
		p	2		doSkylight
		p	3		skipEdgeLightPropagation
	m	(J)Z	a	isSource
		p	1		id
	m	(JI)V	a	setLevel
		p	1		id
		p	3		level
	m	(JJI)I	a	getComputedLevel
		p	1		id
		p	3		excludedId
		p	5		maxLevel
	m	(JLddt;Z)V	a	queueSectionData
		p	1		sectionPos
		p	3		lightArray
		p	4		nonEdge
	m	(JLorg/apache/commons/lang3/mutable/MutableInt;)Ldbq;	a	getStateAndOpacity
		p	1		pos
		p	3		opacity
	m	(Lclo;Ldbq;Lgt;Ldbq;Lgt;Lgz;I)I	a	getLightBlockInto
		p	0		world
		p	1		state1
		p	2		pos1
		p	3		state2
		p	4		pos2
		p	5		direction
		p	6		opacity2
	m	(Lclp;Z)V	a	enableLightSources
		p	1		pos
		p	2		retainData
	m	(Ldbq;JLgz;)Ledx;	a	getShape
		p	1		world
		p	2		pos
		p	4		facing
	m	(Lddt;J)I	a	getLevel
		p	1		section
		p	2		blockPos
	m	(Lgt;)V	a	checkBlock
		p	1		pos
	m	(Lgt;I)V	a	onBlockEmissionIncrease
		p	1		pos
		p	2		level
	m	(Lhw;)Lddt;	a	getDataLayerData
		p	1		pos
	m	(Lhw;Z)V	a	updateSectionStatus
		p	1		pos
		p	2		notReady
	m	(J)Ljava/lang/String;	b	getDebugData
		p	1		sectionPos
	m	(JJI)I	b	computeLevelFromNeighbor
		p	1		sourceId
		p	3		targetId
		p	5		level
	m	(Lclp;Z)V	b	retainData
		p	1		pos
		p	2		retainData
	m	(Lgt;)I	b	getLightValue
		p	1		pos
	m	(J)I	c	getLevel
		p	1		id
	m	()V	d	clearCache
	m	(J)V	f	checkNode
		p	1		id
	f	J	a	SELF_SOURCE
	f	Ldea;	b	chunkSource
	f	Lcmr;	c	layer
	f	Ldvz;	d	storage
	f	Lgt$a;	e	pos
	f	[Lgz;	f	DIRECTIONS
	f	Z	g	runningLightUpdates
	f	I	h	CACHE_SIZE
	f	[J	i	lastChunkPos
	f	[Lclo;	j	lastChunk
c	dvy	net/minecraft/world/level/lighting/LayerLightEventListener
	m	(Lhw;)Lddt;	a	getDataLayerData
		p	1		pos
	m	(Lgt;)I	b	getLightValue
		p	1		pos
c	dvy$a	net/minecraft/world/level/lighting/LayerLightEventListener$DummyLightLayerEventListener
	m	()Z	D_	hasLightWork
	m	(IZZ)I	a	runUpdates
		p	2		doSkylight
		p	3		skipEdgeLightPropagation
	m	(Lclp;Z)V	a	enableLightSources
		p	1		pos
		p	2		retainData
	m	(Lgt;)V	a	checkBlock
		p	1		pos
	m	(Lgt;I)V	a	onBlockEmissionIncrease
		p	1		pos
		p	2		level
	m	(Lhw;)Lddt;	a	getDataLayerData
		p	1		pos
	m	(Lhw;Z)V	a	updateSectionStatus
		p	1		pos
		p	2		notReady
	m	()[Ldvy$a;	b	$values
	m	(Lgt;)I	b	getLightValue
		p	1		pos
	f	Ldvy$a;	a	INSTANCE
	f	[Ldvy$a;	b	$VALUES
c	dvz	net/minecraft/world/level/lighting/LayerLightSectionStorage
	m	(Lcmr;Ldea;Ldvv;)V	<init>	<init>
		p	1		lightType
		p	2		chunkProvider
		p	3		lightData
	m	()Z	a	hasInconsistencies
	m	(JI)V	a	setLevel
		p	1		id
		p	3		level
	m	(JJ)Z	a	lambda$clearQueuedSectionBlocks$0
	m	(JLddt;Z)V	a	queueSectionData
		p	1		sectionPos
		p	3		array
		p	4		nonEdge
	m	(JZ)Lddt;	a	getDataLayer
		p	1		sectionPos
		p	3		cached
	m	(Ldvv;J)Lddt;	a	getDataLayer
		p	1		storage
		p	2		sectionPos
	m	(Ldvx;J)V	a	clearQueuedSectionBlocks
		p	1		storage
		p	2		sectionPos
	m	(Ldvx;ZZ)V	a	markNewInconsistencies
		p	1		lightProvider
		p	2		doSkylight
		p	3		skipEdgeLightPropagation
	m	(J)I	b	getLevelFromSource
		p	1		id
	m	(JI)V	b	setStoredLevel
		p	1		blockPos
		p	3		value
	m	(JZ)V	b	enableLightSources
		p	1		columnPos
		p	3		enabled
	m	(Ldvx;J)V	b	checkEdgesForSection
		p	1		lightProvider
		p	2		sectionPos
	m	(J)I	c	getLevel
		p	1		id
	m	(JZ)V	c	retainData
		p	1		sectionPos
		p	3		retain
	m	()V	d	runAllUpdates
	m	(J)I	d	getLightValue
		p	1		blockPos
	m	(JZ)V	d	updateSectionStatus
		p	1		sectionPos
		p	3		notReady
	m	()V	e	swapSectionMap
	m	(J)Z	g	storingLightForSection
		p	1		sectionPos
	m	(J)Lddt;	h	getDataLayerData
		p	1		sectionPos
	m	(J)I	i	getStoredLevel
		p	1		blockPos
	m	(J)Lddt;	j	createDataLayer
		p	1		sectionPos
	m	(J)V	k	onNodeAdded
		p	1		sectionPos
	m	(J)V	l	onNodeRemoved
		p	1		sectionPos
	f	I	a	LIGHT_AND_DATA
	f	I	b	LIGHT_ONLY
	f	I	c	EMPTY
	f	Lddt;	d	EMPTY_DATA
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	e	dataSectionSet
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	f	toMarkNoData
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	g	toMarkData
	f	Ldvv;	h	visibleSectionData
	f	Ldvv;	i	updatingSectionData
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	j	changedSections
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	k	sectionsAffectedByLightUpdates
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	l	queuedSections
	f	Z	m	hasToRemove
	f	[Lgz;	n	DIRECTIONS
	f	Lcmr;	o	layer
	f	Ldea;	p	chunkSource
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	q	untrustedSections
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	r	columnsToRetainQueuedDataFor
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	s	toRemove
c	dvz$1	net/minecraft/world/level/lighting/LayerLightSectionStorage$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	dwa	net/minecraft/world/level/lighting/LevelLightEngine
	m	(Ldea;ZZ)V	<init>	<init>
		p	1		chunkProvider
		p	2		hasBlockLight
		p	3		hasSkyLight
	m	()Z	D_	hasLightWork
	m	(IZZ)I	a	runUpdates
		p	2		doSkylight
		p	3		skipEdgeLightPropagation
	m	(Lclp;Z)V	a	enableLightSources
		p	1		pos
		p	2		retainData
	m	(Lcmr;)Ldvy;	a	getLayerListener
		p	1		lightType
	m	(Lcmr;Lhw;)Ljava/lang/String;	a	getDebugData
		p	1		lightType
		p	2		pos
	m	(Lcmr;Lhw;Lddt;Z)V	a	queueSectionData
		p	1		lightType
		p	2		pos
		p	3		nibbles
		p	4		nonEdge
	m	(Lgt;)V	a	checkBlock
		p	1		pos
	m	(Lgt;I)V	a	onBlockEmissionIncrease
		p	1		pos
		p	2		level
	m	(Lhw;Z)V	a	updateSectionStatus
		p	1		pos
		p	2		notReady
	m	()I	b	getLightSectionCount
	m	(Lclp;Z)V	b	retainData
		p	1		pos
		p	2		retainData
	m	(Lgt;I)I	b	getRawBrightness
		p	1		pos
		p	2		ambientDarkness
	m	()I	c	getMinLightSection
	m	()I	d	getMaxLightSection
	f	I	a	MAX_SOURCE_LEVEL
	f	I	b	LIGHT_SECTION_PADDING
	f	Lcmk;	c	levelHeightAccessor
	f	Ldvx;	d	blockEngine
	f	Ldvx;	e	skyEngine
c	dwb	net/minecraft/world/level/lighting/LightEventListener
	m	()Z	D_	hasLightWork
	m	(IZZ)I	a	runUpdates
		p	2		doSkylight
		p	3		skipEdgeLightPropagation
	m	(Lclp;Z)V	a	enableLightSources
		p	1		pos
		p	2		retainData
	m	(Lgt;)V	a	checkBlock
		p	1		pos
	m	(Lgt;I)V	a	onBlockEmissionIncrease
		p	1		pos
		p	2		level
	m	(Lgt;Z)V	a	updateSectionStatus
		p	1		pos
		p	2		notReady
	m	(Lhw;Z)V	a	updateSectionStatus
		p	1		pos
		p	2		notReady
c	dwc	net/minecraft/world/level/lighting/SkyLightEngine
	m	(Ldea;)V	<init>	<init>
		p	1		chunkProvider
	m	(JIZ)V	a	checkNeighborsAfterUpdate
		p	1		id
		p	3		level
		p	4		decrease
	m	(JJI)I	a	getComputedLevel
		p	1		id
		p	3		excludedId
		p	5		maxLevel
	m	(J)Ljava/lang/String;	b	getDebugData
		p	1		sectionPos
	m	(JJI)I	b	computeLevelFromNeighbor
		p	1		sourceId
		p	3		targetId
		p	5		level
	m	(J)V	f	checkNode
		p	1		id
	f	[Lgz;	f	DIRECTIONS
	f	[Lgz;	g	HORIZONTALS
c	dwd	net/minecraft/world/level/lighting/SkyLightSectionStorage
	m	(Ldea;)V	<init>	<init>
		p	1		chunkProvider
	m	()Z	a	hasInconsistencies
	m	(I)Z	a	hasSectionsBelow
		p	1		sectionY
	m	(Lddt;)Lddt;	a	repeatFirstLayer
		p	0		source
	m	(Ldvx;ZZ)V	a	markNewInconsistencies
		p	1		lightProvider
		p	2		doSkylight
		p	3		skipEdgeLightPropagation
	m	(JZ)V	b	enableLightSources
		p	1		columnPos
		p	3		enabled
	m	(J)I	d	getLightValue
		p	1		blockPos
	m	(JZ)I	e	getLightValue
		p	1		blockPos
		p	3		cached
	m	()V	f	recheckInconsistencyFlag
	m	(J)Lddt;	j	createDataLayer
		p	1		sectionPos
	m	(J)V	k	onNodeAdded
		p	1		sectionPos
	m	(J)V	l	onNodeRemoved
		p	1		sectionPos
	m	(J)Z	m	isAboveData
		p	1		sectionPos
	m	(J)Z	n	lightOnInSection
		p	1		sectionPos
	m	(J)V	o	queueRemoveSource
		p	1		sectionPos
	m	(J)V	p	queueAddSource
		p	1		sectionPos
	f	[Lgz;	n	HORIZONTALS
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	o	sectionsWithSources
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	p	sectionsToAddSourcesTo
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	q	sectionsToRemoveSourcesFrom
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	r	columnsWithSkySources
	f	Z	s	hasSourceInconsistencies
c	dwd$1	net/minecraft/world/level/lighting/SkyLightSectionStorage$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	dwd$a	net/minecraft/world/level/lighting/SkyLightSectionStorage$SkyDataLayerStorageMap
	m	(Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap;Lit/unimi/dsi/fastutil/longs/Long2IntOpenHashMap;I)V	<init>	<init>
		p	1		arrays
		p	2		columnToTopSection
		p	3		minSectionY
	m	()Ldwd$a;	a	copy
	m	()Ldvv;	b	copy
	f	I	b	currentLowestY
	f	Lit/unimi/dsi/fastutil/longs/Long2IntOpenHashMap;	c	topSections
c	dwe	net/minecraft/world/level/lighting/SpatialLongSet
	m	(IF)V	<init>	<init>
		p	1		expectedSize
		p	2		loadFactor
	f	Ldwe$a;	a	map
c	dwe$a	net/minecraft/world/level/lighting/SpatialLongSet$InternalMap
	m	(IF)V	<init>	<init>
		p	1		expectedSize
		p	2		loadFactor
	m	()J	a	removeFirstBit
	m	(IJ)Z	a	replaceBit
		p	1		index
		p	2		mask
	m	(J)J	a	getOuterKey
		p	0		posLong
	m	(JI)J	a	getFullKey
		p	0		key
		p	2		valueLength
	m	(IJ)Z	b	removeFromEntry
		p	1		index
		p	2		mask
	m	(J)I	b	getInnerKey
		p	0		posLong
	m	(J)Z	c	addBit
		p	1		posLong
	m	(J)Z	d	removeBit
		p	1		posLong
	m	(J)Z	e	removeFromNullEntry
		p	1		mask
	f	I	a	X_BITS
	f	I	b	Z_BITS
	f	I	c	Y_BITS
	f	I	d	Y_OFFSET
	f	I	e	Z_OFFSET
	f	I	g	X_OFFSET
	f	J	h	OUTER_MASK
	f	I	i	lastPos
	f	J	j	lastOuterKey
	f	I	k	minSize
c	dwf	net/minecraft/world/level/lighting/package-info
c	dwg	net/minecraft/world/level/material/EmptyFluid
	m	()Lcfq;	a	getBucket
	m	(Lclo;Lgt;Ldwj;)Lede;	a	getFlow
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcml;)I	a	getTickDelay
		p	1		world
	m	(Ldwj;)F	a	getOwnHeight
		p	1		state
	m	(Ldwj;Lclo;Lgt;)F	a	getHeight
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldwj;Lclo;Lgt;Ldwi;Lgz;)Z	a	canBeReplacedWith
		p	1		state
		p	2		world
		p	3		pos
		p	4		fluid
		p	5		direction
	m	()Z	b	isEmpty
	m	(Ldwj;)Ldbq;	b	createLegacyBlock
		p	1		state
	m	(Ldwj;Lclo;Lgt;)Ledx;	b	getShape
		p	1		state
		p	2		world
		p	3		pos
	m	()F	c	getExplosionResistance
	m	(Ldwj;)Z	c	isSource
		p	1		state
	m	(Ldwj;)I	d	getAmount
		p	1		state
c	dwh	net/minecraft/world/level/material/FlowingFluid
	m	(IZ)Ldwj;	a	getFlowing
		p	1		level
		p	2		falling
	m	(Lclo;Ldwi;Lgt;Ldbq;Lgt;Ldbq;)Z	a	isWaterHole
		p	1		world
		p	2		fluid
		p	3		pos
		p	4		state
		p	5		fromPos
		p	6		fromState
	m	(Lclo;Ldwi;Lgt;Ldbq;Lgz;Lgt;Ldbq;Ldwj;)Z	a	canPassThrough
		p	1		world
		p	2		fluid
		p	3		pos
		p	4		state
		p	5		face
		p	6		fromPos
		p	7		fromState
		p	8		fluidState
	m	(Lclo;Lgt;Ldbq;Ldwi;)Z	a	canHoldFluid
		p	1		world
		p	2		pos
		p	3		state
		p	4		fluid
	m	(Lclo;Lgt;Ldbq;Lgz;Lgt;Ldbq;Ldwj;Ldwi;)Z	a	canSpreadTo
		p	1		world
		p	2		fluidPos
		p	3		fluidBlockState
		p	4		flowDirection
		p	5		flowTo
		p	6		flowToBlockState
		p	7		fluidState
		p	8		fluid
	m	(Lclo;Lgt;Ldwj;)Lede;	a	getFlow
		p	1		world
		p	2		pos
		p	3		state
	m	(Lclo;Lgt;Lgz;)Z	a	isSolidFace
		p	1		world
		p	2		pos
		p	3		direction
	m	(Lcmi;)Z	a	canConvertToSource
		p	1		world
	m	(Lcmi;Lgt;Ldbq;)Ldwj;	a	getNewLiquid
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcmi;Lgt;Ldwj;)V	a	spread
		p	1		world
		p	2		fluidPos
		p	3		state
	m	(Lcmi;Lgt;Ldwj;Ldbq;)V	a	spreadToSides
		p	1		world
		p	2		pos
		p	3		fluidState
		p	4		blockState
	m	(Lcmi;Lgt;Ldwj;Ldwj;)I	a	getSpreadDelay
		p	1		world
		p	2		pos
		p	3		oldState
		p	4		newState
	m	(Lcmi;Lgt;Lgt;Ldbq;S)Z	a	lambda$getSpread$4
	m	(Lcmi;Lgt;S)Lcom/mojang/datafixers/util/Pair;	a	lambda$getSpread$3
	m	(Lcmj;Lgt;Ldbq;)V	a	beforeDestroyingBlock
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcmj;Lgt;Ldbq;Lgz;Ldwj;)V	a	spreadTo
		p	1		world
		p	2		pos
		p	3		state
		p	4		direction
		p	5		fluidState
	m	(Lcml;Lgt;)I	a	sourceNeighborCount
		p	1		world
		p	2		pos
	m	(Lcml;Lgt;ILgz;Ldbq;Lgt;Lit/unimi/dsi/fastutil/shorts/Short2ObjectMap;Lit/unimi/dsi/fastutil/shorts/Short2BooleanMap;)I	a	getSlopeDistance
		p	1		world
	m	(Lcml;Lgt;S)Lcom/mojang/datafixers/util/Pair;	a	lambda$getSlopeDistance$1
	m	(Ldbr$a;)V	a	createFluidStateDefinition
		p	1		builder
	m	(Ldwj;)F	a	getOwnHeight
		p	1		state
	m	(Ldwj;Lclo;Lgt;)F	a	getHeight
		p	1		state
		p	2		world
		p	3		pos
	m	(Lgt;Lcml;Ldbq;S)Z	a	lambda$getSlopeDistance$2
	m	(Lgt;Lgt;)S	a	getCacheKey
	m	(Lgz;Lclo;Lgt;Ldbq;Lgt;Ldbq;)Z	a	canPassThroughWall
		p	1		face
		p	2		world
		p	3		pos
		p	4		state
		p	5		fromPos
		p	6		fromState
	m	(Z)Ldwj;	a	getSource
		p	1		falling
	m	(Lclo;Lgt;Ldwj;)Ledx;	b	lambda$getShape$5
		p	2		state2
	m	(Lcmi;Lgt;Ldbq;)Ljava/util/Map;	b	getSpread
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcmi;Lgt;Ldwj;)V	b	tick
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcml;)I	b	getSlopeFindDistance
		p	1		world
	m	(Ldwj;Lclo;Lgt;)Ledx;	b	getShape
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcml;)I	c	getDropOff
		p	1		world
	m	(Ldwj;Lclo;Lgt;)Z	c	hasSameAbove
		p	0		state
		p	1		world
		p	2		pos
	m	()Ldwi;	d	getFlowing
	m	(Ldwj;)I	d	getAmount
		p	1		state
	m	()Ldwi;	e	getSource
	m	(Ldwj;)I	e	getLegacyLevel
		p	0		state
	m	(Ldwj;)Z	g	affectsFlow
		p	1		state
	m	(Ldwj;)Z	h	isSourceBlockOfThisType
		p	1		state
	m	()Lit/unimi/dsi/fastutil/objects/Object2ByteLinkedOpenHashMap;	l	lambda$static$0
	f	Ldci;	a	FALLING
	f	Ldcr;	b	LEVEL
	f	I	e	CACHE_SIZE
	f	Ljava/lang/ThreadLocal;	f	OCCLUSION_CACHE
	f	Ljava/util/Map;	g	shapes
c	dwh$1	net/minecraft/world/level/material/FlowingFluid$1
c	dwi	net/minecraft/world/level/material/Fluid
	m	()Lcfq;	a	getBucket
	m	(Lanv;)Z	a	is
		p	1		tag
	m	(Lclo;Lgt;Ldwj;)Lede;	a	getFlow
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcmi;Lgt;Ldwj;Lapo;)V	a	animateTick
		p	1		world
		p	2		pos
		p	3		state
		p	4		random
	m	(Lcml;)I	a	getTickDelay
		p	1		world
	m	(Ldbr$a;)V	a	createFluidStateDefinition
		p	1		builder
	m	(Ldwi;)Z	a	isSame
		p	1		fluid
	m	(Ldwj;)F	a	getOwnHeight
		p	1		state
	m	(Ldwj;Lclo;Lgt;)F	a	getHeight
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldwj;Lclo;Lgt;Ldwi;Lgz;)Z	a	canBeReplacedWith
		p	1		state
		p	2		world
		p	3		pos
		p	4		fluid
		p	5		direction
	m	()Z	b	isEmpty
	m	(Lcmi;Lgt;Ldwj;)V	b	tick
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcmi;Lgt;Ldwj;Lapo;)V	b	randomTick
		p	1		world
		p	2		pos
		p	3		state
		p	4		random
	m	(Ldwj;)Ldbq;	b	createLegacyBlock
		p	1		state
	m	(Ldwj;Lclo;Lgt;)Ledx;	b	getShape
		p	1		state
		p	2		world
		p	3		pos
	m	()F	c	getExplosionResistance
	m	(Ldwj;)Z	c	isSource
		p	1		state
	m	(Ldwj;)I	d	getAmount
		p	1		state
	m	()Ldbr;	f	getStateDefinition
	m	(Ldwj;)V	f	registerDefaultState
		p	1		state
	m	()Ldwj;	g	defaultFluidState
	m	()Lis;	h	getDripParticle
	m	()Z	i	isRandomlyTicking
	m	()Ljava/util/Optional;	j	getPickupSound
	m	()Lhd$c;	k	builtInRegistryHolder
	f	Ldwj;	a	defaultFluidState
	f	Lhd$c;	b	builtInRegistryHolder
	f	Lhj;	c	FLUID_STATE_REGISTRY
	f	Ldbr;	d	stateDefinition
c	dwj	net/minecraft/world/level/material/FluidState
	m	(Ldwi;Lcom/google/common/collect/ImmutableMap;Lcom/mojang/serialization/MapCodec;)V	<init>	<init>
		p	1		fluid
		p	2		propertiesMap
		p	3		codec
	m	()Ldwi;	a	getType
	m	(Lanv;)Z	a	is
		p	1		tag
	m	(Lclo;Lgt;)F	a	getHeight
		p	1		world
		p	2		pos
	m	(Lclo;Lgt;Ldwi;Lgz;)Z	a	canBeReplacedWith
		p	1		world
		p	2		pos
		p	3		fluid
		p	4		direction
	m	(Lcmi;Lgt;)V	a	tick
		p	1		world
		p	2		pos
	m	(Lcmi;Lgt;Lapo;)V	a	animateTick
		p	1		world
		p	2		pos
		p	3		random
	m	(Ldwi;)Z	a	isSourceOfType
		p	1		fluid
	m	(Lhh;)Z	a	is
		p	1		fluids
	m	()Z	b	isSource
	m	(Lclo;Lgt;)Z	b	shouldRenderBackwardUpFace
		p	1		world
		p	2		pos
	m	(Lcmi;Lgt;Lapo;)V	b	randomTick
		p	1		world
		p	2		pos
		p	3		random
	m	(Ldwi;)Z	b	is
		p	1		fluid
	m	()Z	c	isEmpty
	m	(Lclo;Lgt;)Lede;	c	getFlow
		p	1		world
		p	2		pos
	m	()F	d	getOwnHeight
	m	(Lclo;Lgt;)Ledx;	d	getShape
		p	1		world
		p	2		pos
	m	()I	e	getAmount
	m	()Z	f	isRandomlyTicking
	m	()Ldbq;	g	createLegacyBlock
	m	()Lis;	h	getDripParticle
	m	()F	i	getExplosionResistance
	m	()Lhd;	j	holder
	m	()Ljava/util/stream/Stream;	k	getTags
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	AMOUNT_MAX
	f	I	g	AMOUNT_FULL
c	dwk	net/minecraft/world/level/material/Fluids
	m	(Ljava/lang/String;Ldwi;)Ldwi;	a	register
		p	0		id
		p	1		value
	f	Ldwi;	a	EMPTY
	f	Ldwh;	b	FLOWING_WATER
	f	Ldwh;	c	WATER
	f	Ldwh;	d	FLOWING_LAVA
	f	Ldwh;	e	LAVA
c	dwl	net/minecraft/world/level/material/FogType
	m	()[Ldwl;	a	$values
	f	Ldwl;	a	LAVA
	f	Ldwl;	b	WATER
	f	Ldwl;	c	POWDER_SNOW
	f	Ldwl;	d	NONE
	f	[Ldwl;	e	$VALUES
c	dwm	net/minecraft/world/level/material/LavaFluid
	m	()Lcfq;	a	getBucket
	m	(Lcmi;)Z	a	canConvertToSource
		p	1		world
	m	(Lcmi;Lgt;Ldwj;Lapo;)V	a	animateTick
		p	1		world
		p	2		pos
		p	3		state
		p	4		random
	m	(Lcmi;Lgt;Ldwj;Ldwj;)I	a	getSpreadDelay
		p	1		world
		p	2		pos
		p	3		oldState
		p	4		newState
	m	(Lcmj;Lgt;)V	a	fizz
		p	1		world
		p	2		pos
	m	(Lcmj;Lgt;Ldbq;)V	a	beforeDestroyingBlock
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcmj;Lgt;Ldbq;Lgz;Ldwj;)V	a	spreadTo
		p	1		world
		p	2		pos
		p	3		state
		p	4		direction
		p	5		fluidState
	m	(Lcml;)I	a	getTickDelay
		p	1		world
	m	(Lcml;Lgt;)Z	a	hasFlammableNeighbours
		p	1		world
		p	2		pos
	m	(Ldwi;)Z	a	isSame
		p	1		fluid
	m	(Ldwj;Lclo;Lgt;Ldwi;Lgz;)Z	a	canBeReplacedWith
		p	1		state
		p	2		world
		p	3		pos
		p	4		fluid
		p	5		direction
	m	(Lcmi;Lgt;Ldwj;Lapo;)V	b	randomTick
		p	1		world
		p	2		pos
		p	3		state
		p	4		random
	m	(Lcml;)I	b	getSlopeFindDistance
		p	1		world
	m	(Lcml;Lgt;)Z	b	isFlammable
		p	1		world
		p	2		pos
	m	(Ldwj;)Ldbq;	b	createLegacyBlock
		p	1		state
	m	()F	c	getExplosionResistance
	m	(Lcml;)I	c	getDropOff
		p	1		world
	m	()Ldwi;	d	getFlowing
	m	()Ldwi;	e	getSource
	m	()Lis;	h	getDripParticle
	m	()Z	i	isRandomlyTicking
	m	()Ljava/util/Optional;	j	getPickupSound
	f	F	e	MIN_LEVEL_CUTOFF
c	dwm$a	net/minecraft/world/level/material/LavaFluid$Flowing
	m	(Ldbr$a;)V	a	createFluidStateDefinition
		p	1		builder
	m	(Ldwj;)Z	c	isSource
		p	1		state
	m	(Ldwj;)I	d	getAmount
		p	1		state
c	dwm$b	net/minecraft/world/level/material/LavaFluid$Source
	m	(Ldwj;)Z	c	isSource
		p	1		state
	m	(Ldwj;)I	d	getAmount
		p	1		state
c	dwn	net/minecraft/world/level/material/Material
	m	(Ldwo;ZZZZZZLdwp;)V	<init>	<init>
		p	1		color
		p	2		liquid
		p	3		solid
		p	4		blocksMovement
		p	5		blocksLight
		p	6		burnable
		p	7		replaceable
		p	8		pistonBehavior
	m	()Z	a	isLiquid
	m	()Z	b	isSolid
	m	()Z	c	blocksMotion
	m	()Z	d	isFlammable
	m	()Z	e	isReplaceable
	m	()Z	f	isSolidBlocking
	m	()Ldwp;	g	getPushReaction
	m	()Ldwo;	h	getColor
	f	Ldwn;	A	NETHER_WOOD
	f	Ldwn;	B	BAMBOO_SAPLING
	f	Ldwn;	C	BAMBOO
	f	Ldwn;	D	WOOL
	f	Ldwn;	E	EXPLOSIVE
	f	Ldwn;	F	LEAVES
	f	Ldwn;	G	GLASS
	f	Ldwn;	H	ICE
	f	Ldwn;	I	CACTUS
	f	Ldwn;	J	STONE
	f	Ldwn;	K	METAL
	f	Ldwn;	L	SNOW
	f	Ldwn;	M	HEAVY_METAL
	f	Ldwn;	N	BARRIER
	f	Ldwn;	O	PISTON
	f	Ldwn;	P	MOSS
	f	Ldwn;	Q	VEGETABLE
	f	Ldwn;	R	EGG
	f	Ldwn;	S	CAKE
	f	Ldwn;	T	AMETHYST
	f	Ldwn;	U	POWDER_SNOW
	f	Ldwn;	V	FROGSPAWN
	f	Ldwn;	W	FROGLIGHT
	f	Ldwn;	X	DECORATED_POT
	f	Ldwo;	Y	color
	f	Ldwp;	Z	pushReaction
	f	Ldwn;	a	AIR
	f	Z	aa	blocksMotion
	f	Z	ab	flammable
	f	Z	ac	liquid
	f	Z	ad	solidBlocking
	f	Z	ae	replaceable
	f	Z	af	solid
	f	Ldwn;	b	STRUCTURAL_AIR
	f	Ldwn;	c	PORTAL
	f	Ldwn;	d	CLOTH_DECORATION
	f	Ldwn;	e	PLANT
	f	Ldwn;	f	WATER_PLANT
	f	Ldwn;	g	REPLACEABLE_PLANT
	f	Ldwn;	h	REPLACEABLE_FIREPROOF_PLANT
	f	Ldwn;	i	REPLACEABLE_WATER_PLANT
	f	Ldwn;	j	WATER
	f	Ldwn;	k	BUBBLE_COLUMN
	f	Ldwn;	l	LAVA
	f	Ldwn;	m	TOP_SNOW
	f	Ldwn;	n	FIRE
	f	Ldwn;	o	DECORATION
	f	Ldwn;	p	WEB
	f	Ldwn;	q	SCULK
	f	Ldwn;	r	BUILDABLE_GLASS
	f	Ldwn;	s	CLAY
	f	Ldwn;	t	DIRT
	f	Ldwn;	u	GRASS
	f	Ldwn;	v	ICE_SOLID
	f	Ldwn;	w	SAND
	f	Ldwn;	x	SPONGE
	f	Ldwn;	y	SHULKER_SHELL
	f	Ldwn;	z	WOOD
c	dwn$a	net/minecraft/world/level/material/Material$Builder
	m	(Ldwo;)V	<init>	<init>
		p	1		color
	m	()Ldwn$a;	a	liquid
	m	()Ldwn$a;	b	nonSolid
	m	()Ldwn$a;	c	noCollider
	m	()Ldwn$a;	d	flammable
	m	()Ldwn$a;	e	replaceable
	m	()Ldwn$a;	f	destroyOnPush
	m	()Ldwn$a;	g	notPushable
	m	()Ldwn;	h	build
	m	()Ldwn$a;	i	notSolidBlocking
	f	Ldwp;	a	pushReaction
	f	Z	b	blocksMotion
	f	Z	c	flammable
	f	Z	d	liquid
	f	Z	e	replaceable
	f	Z	f	solid
	f	Ldwo;	g	color
	f	Z	h	solidBlocking
c	dwo	net/minecraft/world/level/material/MaterialColor
	m	(II)V	<init>	<init>
		p	1		id
		p	2		color
	m	(I)Ldwo;	a	byId
		p	0		id
	m	(Ldwo$a;)I	a	calculateRGBColor
		p	1		brightness
	m	(I)I	b	getColorFromPackedId
		p	0		colorByte
	m	(Ldwo$a;)B	b	getPackedId
		p	1		brightness
	m	(I)Ldwo;	c	byIdUnsafe
		p	0		id
	f	Ldwo;	A	COLOR_BROWN
	f	Ldwo;	B	COLOR_GREEN
	f	Ldwo;	C	COLOR_RED
	f	Ldwo;	D	COLOR_BLACK
	f	Ldwo;	E	GOLD
	f	Ldwo;	F	DIAMOND
	f	Ldwo;	G	LAPIS
	f	Ldwo;	H	EMERALD
	f	Ldwo;	I	PODZOL
	f	Ldwo;	J	NETHER
	f	Ldwo;	K	TERRACOTTA_WHITE
	f	Ldwo;	L	TERRACOTTA_ORANGE
	f	Ldwo;	M	TERRACOTTA_MAGENTA
	f	Ldwo;	N	TERRACOTTA_LIGHT_BLUE
	f	Ldwo;	O	TERRACOTTA_YELLOW
	f	Ldwo;	P	TERRACOTTA_LIGHT_GREEN
	f	Ldwo;	Q	TERRACOTTA_PINK
	f	Ldwo;	R	TERRACOTTA_GRAY
	f	Ldwo;	S	TERRACOTTA_LIGHT_GRAY
	f	Ldwo;	T	TERRACOTTA_CYAN
	f	Ldwo;	U	TERRACOTTA_PURPLE
	f	Ldwo;	V	TERRACOTTA_BLUE
	f	Ldwo;	W	TERRACOTTA_BROWN
	f	Ldwo;	X	TERRACOTTA_GREEN
	f	Ldwo;	Y	TERRACOTTA_RED
	f	Ldwo;	Z	TERRACOTTA_BLACK
	f	Ldwo;	a	NONE
	f	Ldwo;	aa	CRIMSON_NYLIUM
	f	Ldwo;	ab	CRIMSON_STEM
	f	Ldwo;	ac	CRIMSON_HYPHAE
	f	Ldwo;	ad	WARPED_NYLIUM
	f	Ldwo;	ae	WARPED_STEM
	f	Ldwo;	af	WARPED_HYPHAE
	f	Ldwo;	ag	WARPED_WART_BLOCK
	f	Ldwo;	ah	DEEPSLATE
	f	Ldwo;	ai	RAW_IRON
	f	Ldwo;	aj	GLOW_LICHEN
	f	I	ak	col
	f	I	al	id
	f	[Ldwo;	am	MATERIAL_COLORS
	f	Ldwo;	b	GRASS
	f	Ldwo;	c	SAND
	f	Ldwo;	d	WOOL
	f	Ldwo;	e	FIRE
	f	Ldwo;	f	ICE
	f	Ldwo;	g	METAL
	f	Ldwo;	h	PLANT
	f	Ldwo;	i	SNOW
	f	Ldwo;	j	CLAY
	f	Ldwo;	k	DIRT
	f	Ldwo;	l	STONE
	f	Ldwo;	m	WATER
	f	Ldwo;	n	WOOD
	f	Ldwo;	o	QUARTZ
	f	Ldwo;	p	COLOR_ORANGE
	f	Ldwo;	q	COLOR_MAGENTA
	f	Ldwo;	r	COLOR_LIGHT_BLUE
	f	Ldwo;	s	COLOR_YELLOW
	f	Ldwo;	t	COLOR_LIGHT_GREEN
	f	Ldwo;	u	COLOR_PINK
	f	Ldwo;	v	COLOR_GRAY
	f	Ldwo;	w	COLOR_LIGHT_GRAY
	f	Ldwo;	x	COLOR_CYAN
	f	Ldwo;	y	COLOR_PURPLE
	f	Ldwo;	z	COLOR_BLUE
c	dwo$a	net/minecraft/world/level/material/MaterialColor$Brightness
	m	(Ljava/lang/String;III)V	<init>	<init>
		p	3		id
		p	4		brightness
	m	()[Ldwo$a;	a	$values
	m	(I)Ldwo$a;	a	byId
		p	0		id
	m	(I)Ldwo$a;	b	byIdUnsafe
		p	0		id
	f	Ldwo$a;	a	LOW
	f	Ldwo$a;	b	NORMAL
	f	Ldwo$a;	c	HIGH
	f	Ldwo$a;	d	LOWEST
	f	I	e	id
	f	I	f	modifier
	f	[Ldwo$a;	g	VALUES
	f	[Ldwo$a;	h	$VALUES
c	dwp	net/minecraft/world/level/material/PushReaction
	m	()[Ldwp;	a	$values
	f	Ldwp;	a	NORMAL
	f	Ldwp;	b	DESTROY
	f	Ldwp;	c	BLOCK
	f	Ldwp;	d	IGNORE
	f	Ldwp;	e	PUSH_ONLY
	f	[Ldwp;	f	$VALUES
c	dwq	net/minecraft/world/level/material/WaterFluid
	m	()Lcfq;	a	getBucket
	m	(Lcmi;)Z	a	canConvertToSource
		p	1		world
	m	(Lcmi;Lgt;Ldwj;Lapo;)V	a	animateTick
		p	1		world
		p	2		pos
		p	3		state
		p	4		random
	m	(Lcmj;Lgt;Ldbq;)V	a	beforeDestroyingBlock
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcml;)I	a	getTickDelay
		p	1		world
	m	(Ldwi;)Z	a	isSame
		p	1		fluid
	m	(Ldwj;Lclo;Lgt;Ldwi;Lgz;)Z	a	canBeReplacedWith
		p	1		state
		p	2		world
		p	3		pos
		p	4		fluid
		p	5		direction
	m	(Lcml;)I	b	getSlopeFindDistance
		p	1		world
	m	(Ldwj;)Ldbq;	b	createLegacyBlock
		p	1		state
	m	()F	c	getExplosionResistance
	m	(Lcml;)I	c	getDropOff
		p	1		world
	m	()Ldwi;	d	getFlowing
	m	()Ldwi;	e	getSource
	m	()Lis;	h	getDripParticle
	m	()Ljava/util/Optional;	j	getPickupSound
c	dwq$a	net/minecraft/world/level/material/WaterFluid$Flowing
	m	(Ldbr$a;)V	a	createFluidStateDefinition
		p	1		builder
	m	(Ldwj;)Z	c	isSource
		p	1		state
	m	(Ldwj;)I	d	getAmount
		p	1		state
c	dwq$b	net/minecraft/world/level/material/WaterFluid$Source
	m	(Ldwj;)Z	c	isSource
		p	1		state
	m	(Ldwj;)I	d	getAmount
		p	1		state
c	dwr	net/minecraft/world/level/material/package-info
c	dws	net/minecraft/world/level/package-info
c	dwt	net/minecraft/world/level/pathfinder/AmphibiousNodeEvaluator
	m	(Z)V	<init>	<init>
		p	1		penalizeDeepWater
	m	()Ldwx;	a	getStart
	m	(DDD)Ldxd;	a	getGoal
		p	1		x
		p	3		y
		p	5		z
	m	(Lclo;III)Ldwv;	a	getBlockPathType
		p	1		world
		p	2		x
		p	3		y
		p	4		z
	m	(Lcmv;Lbfz;)V	a	prepare
		p	1		cachedWorld
		p	2		entity
	m	([Ldwx;Ldwx;)I	a	getNeighbors
		p	1		successors
		p	2		node
	m	()V	b	done
	m	(Ldwx;Ldwx;)Z	b	isVerticalNeighborValid
		p	1		node
		p	2		successor
	m	()Z	c	isAmphibious
	f	Z	m	prefersShallowSwimming
	f	F	n	oldWalkableCost
	f	F	o	oldWaterBorderCost
c	dwu	net/minecraft/world/level/pathfinder/BinaryHeap
	m	()V	a	clear
	m	(I)V	a	upHeap
		p	1		index
	m	(Ldwx;)Ldwx;	a	insert
		p	1		node
	m	(Ldwx;F)V	a	changeCost
		p	1		node
		p	2		weight
	m	()Ldwx;	b	peek
	m	(I)V	b	downHeap
		p	1		index
	m	(Ldwx;)V	b	remove
		p	1		node
	m	()Ldwx;	c	pop
	m	()I	d	size
	m	()Z	e	isEmpty
	m	()[Ldwx;	f	getHeap
	f	[Ldwx;	a	heap
	f	I	b	size
c	dwv	net/minecraft/world/level/pathfinder/BlockPathTypes
	m	(Ljava/lang/String;IF)V	<init>	<init>
		p	3		defaultPenalty
	m	()F	a	getMalus
	m	()[Ldwv;	b	$values
	f	Ldwv;	a	BLOCKED
	f	Ldwv;	b	OPEN
	f	Ldwv;	c	WALKABLE
	f	Ldwv;	d	WALKABLE_DOOR
	f	Ldwv;	e	TRAPDOOR
	f	Ldwv;	f	POWDER_SNOW
	f	Ldwv;	g	DANGER_POWDER_SNOW
	f	Ldwv;	h	FENCE
	f	Ldwv;	i	LAVA
	f	Ldwv;	j	WATER
	f	Ldwv;	k	WATER_BORDER
	f	Ldwv;	l	RAIL
	f	Ldwv;	m	UNPASSABLE_RAIL
	f	Ldwv;	n	DANGER_FIRE
	f	Ldwv;	o	DAMAGE_FIRE
	f	Ldwv;	p	DANGER_OTHER
	f	Ldwv;	q	DAMAGE_OTHER
	f	Ldwv;	r	DOOR_OPEN
	f	Ldwv;	s	DOOR_WOOD_CLOSED
	f	Ldwv;	t	DOOR_IRON_CLOSED
	f	Ldwv;	u	BREACH
	f	Ldwv;	v	LEAVES
	f	Ldwv;	w	STICKY_HONEY
	f	Ldwv;	x	COCOA
	f	F	y	malus
	f	[Ldwv;	z	$VALUES
c	dww	net/minecraft/world/level/pathfinder/FlyNodeEvaluator
	m	()Ldwx;	a	getStart
	m	(DDD)Ldxd;	a	getGoal
		p	1		x
		p	3		y
		p	5		z
	m	(III)Ldwx;	a	findAcceptedNode
		p	1		x
		p	2		y
		p	3		z
	m	(IIIJ)Ldwv;	a	lambda$getCachedBlockPathType$0
		p	4		pos
	m	(Lbfz;)Ljava/lang/Iterable;	a	iteratePathfindingStartNodeCandidatePositions
		p	1		entity
	m	(Lclo;III)Ldwv;	a	getBlockPathType
		p	1		world
		p	2		x
		p	3		y
		p	4		z
	m	(Lclo;IIILbfz;)Ldwv;	a	getBlockPathType
		p	1		world
		p	2		x
		p	3		y
		p	4		z
		p	5		mob
	m	(Lcmv;Lbfz;)V	a	prepare
		p	1		cachedWorld
		p	2		entity
	m	(Lgt;)Z	a	canStartAt
		p	1		pos
	m	([Ldwx;Ldwx;)I	a	getNeighbors
		p	1		successors
		p	2		node
	m	()V	b	done
	m	(Ldwx;)Z	b	hasMalus
		p	1		node
	m	(III)Ldwv;	c	getCachedBlockPathType
		p	1		x
		p	2		y
		p	3		z
	m	(Ldwx;)Z	c	isOpen
		p	1		node
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	m	pathTypeByPosCache
	f	F	n	SMALL_MOB_INFLATED_START_NODE_BOUNDING_BOX
	f	I	o	MAX_START_NODE_CANDIDATES
c	dwx	net/minecraft/world/level/pathfinder/Node
	m	(III)V	<init>	<init>
		p	1		x
		p	2		y
		p	3		z
	m	()Lgt;	a	asBlockPos
	m	(III)Ldwx;	a	cloneAndMove
		p	1		x
		p	2		y
		p	3		z
	m	(Ldwx;)F	a	distanceTo
		p	1		node
	m	(Lgt;)F	a	distanceTo
		p	1		pos
	m	(Lss;)V	a	writeToStream
		p	1		buf
	m	(Lss;Ldwx;)V	a	readContents
		p	0		buf
		p	1		target
	m	()Lede;	b	asVec3
	m	(III)I	b	createHash
		p	0		x
		p	1		y
		p	2		z
	m	(Ldwx;)F	b	distanceToXZ
		p	1		node
	m	(Lgt;)F	b	distanceToSqr
		p	1		pos
	m	(Lss;)Ldwx;	b	createFromStream
		p	0		buf
	m	()Z	c	inOpenSet
	m	(Ldwx;)F	c	distanceToSqr
		p	1		node
	m	(Lgt;)F	c	distanceManhattan
		p	1		pos
	m	(Ldwx;)F	d	distanceManhattan
		p	1		node
	f	I	a	x
	f	I	b	y
	f	I	c	z
	f	I	d	heapIdx
	f	F	e	g
	f	F	f	h
	f	F	g	f
	f	Ldwx;	h	cameFrom
	f	Z	i	closed
	f	F	j	walkedDistance
	f	F	k	costMalus
	f	Ldwv;	l	type
	f	I	m	hash
c	dwy	net/minecraft/world/level/pathfinder/NodeEvaluator
	m	()Ldwx;	a	getStart
	m	(DDD)Ldxd;	a	getGoal
		p	1		x
		p	3		y
		p	5		z
	m	(IIII)Ldwx;	a	lambda$getNode$0
	m	(Lclo;III)Ldwv;	a	getBlockPathType
		p	1		world
		p	2		x
		p	3		y
		p	4		z
	m	(Lclo;IIILbfz;)Ldwv;	a	getBlockPathType
		p	1		world
		p	2		x
		p	3		y
		p	4		z
		p	5		mob
	m	(Lcmv;Lbfz;)V	a	prepare
		p	1		cachedWorld
		p	2		entity
	m	(Ldwx;)Ldxd;	a	getTargetFromNode
		p	1		node
	m	(Z)V	a	setCanPassDoors
		p	1		canEnterOpenDoors
	m	([Ldwx;Ldwx;)I	a	getNeighbors
		p	1		successors
		p	2		node
	m	()V	b	done
	m	(III)Ldwx;	b	getNode
		p	1		x
		p	2		y
		p	3		z
	m	(Lgt;)Ldwx;	b	getNode
		p	1		pos
	m	(Z)V	b	setCanOpenDoors
		p	1		canOpenDoors
	m	(Z)V	c	setCanFloat
		p	1		canSwim
	m	()Z	d	canPassDoors
	m	(Z)V	d	setCanWalkOverFences
		p	1		canWalkOverFences
	m	()Z	e	canOpenDoors
	m	()Z	f	canFloat
	m	()Z	g	canWalkOverFences
	f	Lcmv;	a	level
	f	Lbfz;	b	mob
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	c	nodes
	f	I	d	entityWidth
	f	I	e	entityHeight
	f	I	f	entityDepth
	f	Z	g	canPassDoors
	f	Z	h	canOpenDoors
	f	Z	i	canFloat
	f	Z	j	canWalkOverFences
c	dwz	net/minecraft/world/level/pathfinder/Path
	m	(Ljava/util/List;Lgt;Z)V	<init>	<init>
		p	1		nodes
		p	2		target
		p	3		reachesTarget
	m	()V	a	advance
	m	(I)Ldwx;	a	getNode
		p	1		index
	m	(ILdwx;)V	a	replaceNode
		p	1		index
		p	2		node
	m	(Lbfh;)Lede;	a	getNextEntityPos
		p	1		entity
	m	(Lbfh;I)Lede;	a	getEntityPosAtNode
		p	1		entity
		p	2		index
	m	(Ldwz;)Z	a	sameAs
		p	1		o
	m	(Lss;)V	a	writeToStream
		p	1		buffer
	m	(Lss;Ldxd;)V	a	lambda$writeToStream$0
	m	([Ldwx;[Ldwx;Ljava/util/Set;)V	a	setDebug
		p	1		debugNodes
		p	2		debugSecondNodes
		p	3		debugTargetNodes
	m	()Z	b	notStarted
	m	(I)V	b	truncateNodes
		p	1		length
	m	(Lss;)Ldwz;	b	createFromStream
		p	0		buffer
	m	()Z	c	isDone
	m	(I)V	c	setNextNodeIndex
		p	1		nodeIndex
	m	()Ldwx;	d	getEndNode
	m	(I)Lgt;	d	getNodePos
		p	1		index
	m	()I	e	getNodeCount
	m	()I	f	getNextNodeIndex
	m	()Lgt;	g	getNextNodePos
	m	()Ldwx;	h	getNextNode
	m	()Ldwx;	i	getPreviousNode
	m	()Z	j	canReach
	m	()[Ldwx;	k	getOpenSet
	m	()[Ldwx;	l	getClosedSet
	m	()Lgt;	m	getTarget
	m	()F	n	getDistToTarget
	f	Ljava/util/List;	a	nodes
	f	[Ldwx;	b	openSet
	f	[Ldwx;	c	closedSet
	f	Ljava/util/Set;	d	targetNodes
	f	I	e	nextNodeIndex
	f	Lgt;	f	target
	f	F	g	distToTarget
	f	Z	h	reached
c	dxa	net/minecraft/world/level/pathfinder/PathComputationType
	m	()[Ldxa;	a	$values
	f	Ldxa;	a	LAND
	f	Ldxa;	b	WATER
	f	Ldxa;	c	AIR
	f	[Ldxa;	d	$VALUES
c	dxb	net/minecraft/world/level/pathfinder/PathFinder
	m	(Ldwy;I)V	<init>	<init>
		p	1		pathNodeMaker
		p	2		range
	m	(Lbao;Ldwx;Ljava/util/Map;FIF)Ldwz;	a	findPath
		p	1		profiler
		p	2		startNode
		p	3		positions
		p	4		followRange
		p	5		distance
		p	6		rangeMultiplier
	m	(Lcmv;Lbfz;Ljava/util/Set;FIF)Ldwz;	a	findPath
		p	1		world
		p	2		mob
		p	3		positions
		p	4		followRange
		p	5		distance
		p	6		rangeMultiplier
	m	(Ldwx;Ldwx;)F	a	distance
		p	1		a
		p	2		b
	m	(Ldwx;Lgt;Z)Ldwz;	a	reconstructPath
		p	1		endNode
		p	2		target
		p	3		reachesTarget
	m	(Ldwx;Ljava/util/Set;)F	a	getBestH
		p	1		node
		p	2		targets
	m	(Lgt;)Ldxd;	a	lambda$findPath$0
		p	1		pos
	m	(Ljava/util/Map;Ldxd;)Ldwz;	a	lambda$findPath$2
	m	(Ljava/util/Map;Ldxd;)Ldwz;	b	lambda$findPath$1
		p	2		node
	f	F	a	FUDGING
	f	[Ldwx;	b	neighbors
	f	I	c	maxVisitedNodes
	f	Ldwy;	d	nodeEvaluator
	f	Z	e	DEBUG
	f	Ldwu;	f	openSet
c	dxc	net/minecraft/world/level/pathfinder/SwimNodeEvaluator
	m	(Z)V	<init>	<init>
		p	1		canJumpOutOfWater
	m	()Ldwx;	a	getStart
	m	(DDD)Ldxd;	a	getGoal
		p	1		x
		p	3		y
		p	5		z
	m	(III)Ldwx;	a	findAcceptedNode
		p	1		x
		p	2		y
		p	3		z
	m	(IIIJ)Ldwv;	a	lambda$getCachedBlockType$0
		p	4		pos
	m	(Lclo;III)Ldwv;	a	getBlockPathType
		p	1		world
		p	2		x
		p	3		y
		p	4		z
	m	(Lclo;IIILbfz;)Ldwv;	a	getBlockPathType
		p	1		world
		p	2		x
		p	3		y
		p	4		z
		p	5		mob
	m	(Lcmv;Lbfz;)V	a	prepare
		p	1		cachedWorld
		p	2		entity
	m	(Ldwx;Ldwx;Ldwx;)Z	a	isDiagonalNodeValid
		p	1		diagonalNode
		p	2		node1
		p	3		node2
	m	([Ldwx;Ldwx;)I	a	getNeighbors
		p	1		successors
		p	2		node
	m	()V	b	done
	m	(Ldwx;)Z	b	isNodeValid
		p	1		node
	m	(III)Ldwv;	c	getCachedBlockType
		p	1		x
		p	2		y
		p	3		z
	f	Z	k	allowBreaching
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	l	pathTypesByPosCache
c	dxd	net/minecraft/world/level/pathfinder/Target
	m	(III)V	<init>	<init>
		p	1		x
		p	2		y
		p	3		z
	m	(Ldwx;)V	<init>	<init>
		p	1		node
	m	(FLdwx;)V	a	updateBest
		p	1		distance
		p	2		node
	m	(Lss;)Ldxd;	c	createFromStream
		p	0		buffer
	m	()Ldwx;	d	getBestNode
	m	()V	e	setReached
	m	()Z	f	isReached
	f	F	m	bestHeuristic
	f	Ldwx;	n	bestNode
	f	Z	o	reached
c	dxe	net/minecraft/world/level/pathfinder/WalkNodeEvaluator
	m	()Ldwx;	a	getStart
	m	(DDD)Ldxd;	a	getGoal
		p	1		x
		p	3		y
		p	5		z
	m	(III)Ldwx;	a	getBlockedNode
		p	1		x
		p	2		y
		p	3		z
	m	(IIIIDLgz;Ldwv;)Ldwx;	a	findAcceptedNode
		p	1		x
		p	2		y
		p	3		z
		p	4		maxYStep
		p	5		prevFeetY
		p	7		direction
		p	8		nodeType
	m	(IIILbfz;J)Ldwv;	a	lambda$getCachedBlockType$1
	m	(IIILdwv;F)Ldwx;	a	getNodeAndUpdateCostToMax
		p	1		x
		p	2		y
		p	3		z
		p	4		type
		p	5		penalty
	m	(Lbfz;III)Ldwv;	a	getCachedBlockType
		p	1		entity
		p	2		x
		p	3		y
		p	4		z
	m	(Lbfz;Lgt;)Ldwv;	a	getBlockPathType
		p	1		entity
		p	2		pos
	m	(Lclo;III)Ldwv;	a	getBlockPathType
		p	1		world
		p	2		x
		p	3		y
		p	4		z
	m	(Lclo;IIILbfz;)Ldwv;	a	getBlockPathType
		p	1		world
		p	2		x
		p	3		y
		p	4		z
		p	5		mob
	m	(Lclo;IIILjava/util/EnumSet;Ldwv;Lgt;)Ldwv;	a	getBlockPathTypes
		p	1		world
		p	2		x
		p	3		y
		p	4		z
		p	5		nearbyTypes
		p	6		type
		p	7		pos
	m	(Lclo;Lgt$a;)Ldwv;	a	getBlockPathTypeStatic
		p	0		world
		p	1		pos
	m	(Lclo;Lgt$a;Ldwv;)Ldwv;	a	checkNeighbourBlocks
		p	0		world
		p	1		pos
		p	2		nodeType
	m	(Lclo;Lgt;)D	a	getFloorLevel
		p	0		world
		p	1		pos
	m	(Lclo;Lgt;Ldwv;)Ldwv;	a	evaluateBlockPathType
		p	1		world
		p	2		pos
		p	3		type
	m	(Lcmv;Lbfz;)V	a	prepare
		p	1		cachedWorld
		p	2		entity
	m	(Ldbq;)Z	a	isBurningBlock
		p	0		state
	m	(Ldwv;)Z	a	doesBlockHavePartialCollision
		p	0		nodeType
	m	(Ldwx;Ldwx;)Z	a	isNeighborValid
		p	1		node
		p	2		successor1
	m	(Ldwx;Ldwx;Ldwx;Ldwx;)Z	a	isDiagonalValid
		p	1		xNode
		p	2		zNode
		p	3		xDiagNode
		p	4		zDiagNode
	m	(Lecz;)Z	a	hasCollisions
		p	1		box
	m	(Lecz;Ljava/lang/Object;)Z	a	lambda$hasCollisions$0
		p	2		box2
	m	(Lgt;)Z	a	canStartAt
		p	1		pos
	m	([Ldwx;Ldwx;)I	a	getNeighbors
		p	1		successors
		p	2		node
	m	()V	b	done
	m	(Lclo;Lgt;)Ldwv;	b	getBlockPathTypeRaw
		p	0		world
		p	1		pos
	m	(Ldwx;)Z	b	canReachWithoutCollision
		p	1		node
	m	()Z	c	isAmphibious
	m	(Lgt;)Ldwx;	c	getStartNode
		p	1		pos
	m	(Lgt;)D	d	getFloorLevel
		p	1		pos
	m	()D	h	getMobJumpHeight
	f	D	k	SPACE_BETWEEN_WALL_POSTS
	f	F	l	oldWaterCost
	f	D	m	DEFAULT_MOB_JUMP_HEIGHT
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	n	pathTypesByPosCache
	f	Lit/unimi/dsi/fastutil/objects/Object2BooleanMap;	o	collisionCache
c	dxf	net/minecraft/world/level/pathfinder/package-info
c	dxg	net/minecraft/world/level/portal/PortalForcer
	m	(Laip;)V	<init>	<init>
		p	1		world
	m	(Lbqy;)Ll$a;	a	lambda$findPortalAround$6
		p	1		poi
	m	(Ldbq;Lgt;)Z	a	lambda$findPortalAround$5
		p	2		pos
	m	(Lddi;Lbqy;)Z	a	lambda$findPortalAround$1
		p	1		poi
	m	(Lgt$a;)Z	a	canPortalReplaceBlock
		p	1		pos
	m	(Lgt;Lbqy;)D	a	lambda$findPortalAround$2
		p	1		poi
	m	(Lgt;Lgt$a;Lgz;I)Z	a	canHostFrame
		p	1		pos
		p	2		temp
		p	3		portalDirection
		p	4		distanceOrthogonalToPortal
	m	(Lgt;Lgz$a;)Ljava/util/Optional;	a	createPortal
		p	1		pos
		p	2		axis
	m	(Lgt;ZLddi;)Ljava/util/Optional;	a	findPortalAround
		p	1		pos
		p	2		destIsNether
		p	3		worldBorder
	m	(Lhd;)Z	a	lambda$findPortalAround$0
		p	0		poiType
	m	(Lbqy;)Z	b	lambda$findPortalAround$4
		p	1		poi
	m	(Lbqy;)I	c	lambda$findPortalAround$3
		p	0		poi
	f	I	a	TICKET_RADIUS
	f	I	b	SEARCH_RADIUS
	f	I	c	CREATE_RADIUS
	f	I	d	FRAME_HEIGHT
	f	I	e	FRAME_WIDTH
	f	I	f	FRAME_BOX
	f	I	g	FRAME_HEIGHT_START
	f	I	h	FRAME_HEIGHT_END
	f	I	i	FRAME_WIDTH_START
	f	I	j	FRAME_WIDTH_END
	f	I	k	FRAME_BOX_START
	f	I	l	FRAME_BOX_END
	f	I	m	NOTHING_FOUND
	f	Laip;	n	level
c	dxh	net/minecraft/world/level/portal/PortalInfo
	m	(Lede;Lede;FF)V	<init>	<init>
		p	1		position
		p	2		velocity
		p	3		yaw
		p	4		pitch
	f	Lede;	a	pos
	f	Lede;	b	speed
	f	F	c	yRot
	f	F	d	xRot
c	dxi	net/minecraft/world/level/portal/PortalShape
	m	(Lcmj;Lgt;Lgz$a;)V	<init>	<init>
		p	1		world
		p	2		pos
		p	3		axis
	m	()Z	a	isValid
	m	(DLede;)Lede;	a	lambda$findCollisionFreePosition$3
		p	2		pos
	m	(Laip;Ll$a;Lgz$a;Lede;Lbfh;Lede;FF)Ldxh;	a	createPortalInfo
		p	0		destination
		p	1		portalRect
		p	2		portalAxis
		p	3		offset
		p	4		entity
		p	5		velocity
		p	6		yaw
		p	7		pitch
	m	(Lcmj;Lgt;Lgz$a;)Ljava/util/Optional;	a	findEmptyPortalShape
		p	0		world
		p	1		pos
		p	2		axis
	m	(Lcmj;Lgt;Ljava/util/function/Predicate;Lgz$a;)Ljava/util/Optional;	a	findPortalShape
		p	0		world
		p	1		pos
		p	2		validator
		p	3		axis
	m	(Ldbq;)Z	a	isEmpty
		p	0		state
	m	(Ldbq;Lclo;Lgt;)Z	a	lambda$static$0
		p	0		state
		p	1		world
		p	2		pos
	m	(Ldbq;Lgt;)V	a	lambda$createPortalBlocks$2
	m	(Ldxi;)Z	a	lambda$findEmptyPortalShape$1
		p	0		areaHelper
	m	(Lede;Laip;Lbfh;Lbfi;)Lede;	a	findCollisionFreePosition
		p	0		fallback
		p	1		world
		p	2		entity
		p	3		dimensions
	m	(Lgt$a;)I	a	getDistanceUntilTop
		p	1		pos
	m	(Lgt$a;I)Z	a	hasTopFrame
		p	1		pos
		p	2		height
	m	(Lgt;)Lgt;	a	calculateBottomLeft
		p	1		pos
	m	(Lgt;Lgz;)I	a	getDistanceUntilEdgeAboveFrame
		p	1		pos
		p	2		direction
	m	(Ll$a;Lgz$a;Lede;Lbfi;)Lede;	a	getRelativePosition
		p	0		portalRect
		p	1		portalAxis
		p	2		entityPos
		p	3		entityDimensions
	m	()V	b	createPortalBlocks
	m	()Z	c	isComplete
	m	()I	d	calculateWidth
	m	()I	e	calculateHeight
	f	I	a	MAX_WIDTH
	f	I	b	MAX_HEIGHT
	f	I	c	MIN_WIDTH
	f	I	d	MIN_HEIGHT
	f	Ldbp$f;	e	FRAME
	f	F	f	SAFE_TRAVEL_MAX_ENTITY_XY
	f	D	g	SAFE_TRAVEL_MAX_VERTICAL_DELTA
	f	Lcmj;	h	level
	f	Lgz$a;	i	axis
	f	Lgz;	j	rightDir
	f	I	k	numPortalBlocks
	f	Lgt;	l	bottomLeft
	f	I	m	height
	f	I	n	width
c	dxj	net/minecraft/world/level/portal/package-info
c	dxk	net/minecraft/world/level/redstone/CollectingNeighborUpdater
	m	(Lcmi;I)V	<init>	<init>
		p	1		world
		p	2		maxChainDepth
	m	()V	a	runUpdates
	m	(Ldbq;Lgt;Lcpi;Lgt;Z)V	a	neighborChanged
		p	1		state
		p	2		pos
		p	3		sourceBlock
		p	4		sourcePos
		p	5		notify
	m	(Lgt;Lcpi;Lgt;)V	a	neighborChanged
		p	1		pos
		p	2		sourceBlock
		p	3		sourcePos
	m	(Lgt;Lcpi;Lgz;)V	a	updateNeighborsAtExceptFromFacing
		p	1		pos
		p	2		sourceBlock
		p	3		except
	m	(Lgt;Ldxk$c;)V	a	addAndRun
		p	1		pos
		p	2		entry
	m	(Lgz;Ldbq;Lgt;Lgt;II)V	a	shapeUpdate
		p	1		direction
		p	2		neighborState
		p	3		pos
		p	4		neighborPos
		p	5		flags
		p	6		maxUpdateDepth
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Lcmi;	c	level
	f	I	d	maxChainedNeighborUpdates
	f	Ljava/util/ArrayDeque;	e	stack
	f	Ljava/util/List;	f	addedThisLayer
	f	I	g	count
c	dxk$a	net/minecraft/world/level/redstone/CollectingNeighborUpdater$FullNeighborUpdate
	m	()Ldbq;	a	state
	m	(Lcmi;)Z	a	runNext
		p	1		world
	m	()Lgt;	b	pos
	m	()Lcpi;	c	block
	m	()Lgt;	d	neighborPos
	m	()Z	e	movedByPiston
	f	Ldbq;	a	state
	f	Lgt;	b	pos
	f	Lcpi;	c	block
	f	Lgt;	d	neighborPos
	f	Z	e	movedByPiston
c	dxk$b	net/minecraft/world/level/redstone/CollectingNeighborUpdater$MultiNeighborUpdate
	m	(Lgt;Lcpi;Lgz;)V	<init>	<init>
		p	1		pos
		p	2		sourceBlock
		p	3		except
	m	(Lcmi;)Z	a	runNext
		p	1		world
	f	Lgt;	a	sourcePos
	f	Lcpi;	b	sourceBlock
	f	Lgz;	c	skipDirection
	f	I	d	idx
c	dxk$c	net/minecraft/world/level/redstone/CollectingNeighborUpdater$NeighborUpdates
	m	(Lcmi;)Z	a	runNext
		p	1		world
c	dxk$d	net/minecraft/world/level/redstone/CollectingNeighborUpdater$ShapeUpdate
	m	()Lgz;	a	direction
	m	(Lcmi;)Z	a	runNext
		p	1		world
	m	()Ldbq;	b	state
	m	()Lgt;	c	pos
	m	()Lgt;	d	neighborPos
	m	()I	e	updateFlags
	f	Lgz;	a	direction
	f	Ldbq;	b	state
	f	Lgt;	c	pos
	f	Lgt;	d	neighborPos
	f	I	e	updateFlags
c	dxk$e	net/minecraft/world/level/redstone/CollectingNeighborUpdater$SimpleNeighborUpdate
	m	()Lgt;	a	pos
	m	(Lcmi;)Z	a	runNext
		p	1		world
	m	()Lcpi;	b	block
	m	()Lgt;	c	neighborPos
	f	Lgt;	a	pos
	f	Lcpi;	b	block
	f	Lgt;	c	neighborPos
c	dxl	net/minecraft/world/level/redstone/InstantNeighborUpdater
	m	(Lcmi;)V	<init>	<init>
		p	1		world
	m	(Ldbq;Lgt;Lcpi;Lgt;Z)V	a	neighborChanged
		p	1		state
		p	2		pos
		p	3		sourceBlock
		p	4		sourcePos
		p	5		notify
	m	(Lgt;Lcpi;Lgt;)V	a	neighborChanged
		p	1		pos
		p	2		sourceBlock
		p	3		sourcePos
	m	(Lgz;Ldbq;Lgt;Lgt;II)V	a	shapeUpdate
		p	1		direction
		p	2		neighborState
		p	3		pos
		p	4		neighborPos
		p	5		flags
		p	6		maxUpdateDepth
	f	Lcmi;	b	level
c	dxm	net/minecraft/world/level/redstone/NeighborUpdater
	m	(Lcmi;Ldbq;Lgt;Lcpi;Lgt;Z)V	a	executeUpdate
		p	0		world
		p	1		state
		p	2		pos
		p	3		sourceBlock
		p	4		sourcePos
		p	5		notify
	m	(Lcmj;Lgz;Ldbq;Lgt;Lgt;II)V	a	executeShapeUpdate
		p	0		world
		p	1		direction
		p	2		neighborState
		p	3		pos
		p	4		neighborPos
		p	5		flags
		p	6		maxUpdateDepth
	m	(Lcpi;)Ljava/lang/String;	a	lambda$executeUpdate$0
	m	(Ldbq;Lgt;Lcpi;Lgt;Z)V	a	neighborChanged
		p	1		state
		p	2		pos
		p	3		sourceBlock
		p	4		sourcePos
		p	5		notify
	m	(Lgt;Lcpi;Lgt;)V	a	neighborChanged
		p	1		pos
		p	2		sourceBlock
		p	3		sourcePos
	m	(Lgt;Lcpi;Lgz;)V	a	updateNeighborsAtExceptFromFacing
		p	1		pos
		p	2		sourceBlock
		p	3		except
	m	(Lgz;Ldbq;Lgt;Lgt;II)V	a	shapeUpdate
		p	1		direction
		p	2		neighborState
		p	3		pos
		p	4		neighborPos
		p	5		flags
		p	6		maxUpdateDepth
	f	[Lgz;	a	UPDATE_ORDER
c	dxn	net/minecraft/world/level/redstone/Redstone
	f	I	a	SIGNAL_MIN
	f	I	b	SIGNAL_MAX
	f	I	c	SIGNAL_NONE
c	dxo	net/minecraft/world/level/redstone/package-info
c	dxp	net/minecraft/world/level/saveddata/SavedData
	m	(Ljava/io/File;)V	a	save
		p	1		file
	m	(Lre;)Lre;	a	save
		p	1		nbt
	m	(Z)V	a	setDirty
		p	1		dirty
	m	()V	b	setDirty
	m	()Z	c	isDirty
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Z	b	dirty
c	dxq	net/minecraft/world/level/saveddata/maps/MapBanner
	m	(Lgt;Lcel;Ltj;)V	<init>	<init>
		p	1		pos
		p	2		dyeColor
		p	3		name
	m	()Lgt;	a	getPos
	m	(Lclo;Lgt;)Ldxq;	a	fromWorld
		p	0		blockView
		p	1		blockPos
	m	(Lre;)Ldxq;	a	load
		p	0		nbt
	m	()Lcel;	b	getColor
	m	()Ldxr$a;	c	getDecoration
	m	()Ltj;	d	getName
	m	()Lre;	e	save
	m	()Ljava/lang/String;	f	getId
	f	Lgt;	a	pos
	f	Lcel;	b	color
	f	Ltj;	c	name
c	dxq$1	net/minecraft/world/level/saveddata/maps/MapBanner$1
	f	[I	a	$SwitchMap$net$minecraft$world$item$DyeColor
c	dxr	net/minecraft/world/level/saveddata/maps/MapDecoration
	m	(Ldxr$a;BBBLtj;)V	<init>	<init>
		p	1		type
		p	2		x
		p	3		z
		p	4		rotation
		p	5		text
	m	()B	a	getImage
	m	()Ldxr$a;	b	getType
	m	()B	c	getX
	m	()B	d	getY
	m	()B	e	getRot
	m	()Z	f	renderOnFrame
	m	()Ltj;	g	getName
	f	Ldxr$a;	a	type
	f	B	b	x
	f	B	c	y
	f	B	d	rot
	f	Ltj;	e	name
c	dxr$a	net/minecraft/world/level/saveddata/maps/MapDecoration$Type
	m	(Ljava/lang/String;IZIZ)V	<init>	<init>
		p	3		alwaysRender
		p	4		tintColor
		p	5		useIconCountLimit
	m	(Ljava/lang/String;IZZ)V	<init>	<init>
		p	3		alwaysRender
		p	4		useIconCountLimit
	m	()B	a	getIcon
	m	(B)Ldxr$a;	a	byIcon
		p	0		id
	m	()Z	b	isRenderedOnFrame
	m	()Z	c	hasMapColor
	m	()I	d	getMapColor
	m	()Z	e	shouldTrackCount
	m	()[Ldxr$a;	f	$values
	f	Ldxr$a;	A	RED_X
	f	B	B	icon
	f	Z	C	renderedOnFrame
	f	I	D	mapColor
	f	Z	E	trackCount
	f	[Ldxr$a;	F	$VALUES
	f	Ldxr$a;	a	PLAYER
	f	Ldxr$a;	b	FRAME
	f	Ldxr$a;	c	RED_MARKER
	f	Ldxr$a;	d	BLUE_MARKER
	f	Ldxr$a;	e	TARGET_X
	f	Ldxr$a;	f	TARGET_POINT
	f	Ldxr$a;	g	PLAYER_OFF_MAP
	f	Ldxr$a;	h	PLAYER_OFF_LIMITS
	f	Ldxr$a;	i	MANSION
	f	Ldxr$a;	j	MONUMENT
	f	Ldxr$a;	k	BANNER_WHITE
	f	Ldxr$a;	l	BANNER_ORANGE
	f	Ldxr$a;	m	BANNER_MAGENTA
	f	Ldxr$a;	n	BANNER_LIGHT_BLUE
	f	Ldxr$a;	o	BANNER_YELLOW
	f	Ldxr$a;	p	BANNER_LIME
	f	Ldxr$a;	q	BANNER_PINK
	f	Ldxr$a;	r	BANNER_GRAY
	f	Ldxr$a;	s	BANNER_LIGHT_GRAY
	f	Ldxr$a;	t	BANNER_CYAN
	f	Ldxr$a;	u	BANNER_PURPLE
	f	Ldxr$a;	v	BANNER_BLUE
	f	Ldxr$a;	w	BANNER_BROWN
	f	Ldxr$a;	x	BANNER_GREEN
	f	Ldxr$a;	y	BANNER_RED
	f	Ldxr$a;	z	BANNER_BLACK
c	dxs	net/minecraft/world/level/saveddata/maps/MapFrame
	m	(Lgt;II)V	<init>	<init>
		p	1		pos
		p	2		rotation
		p	3		entityId
	m	()Lre;	a	save
	m	(Lgt;)Ljava/lang/String;	a	frameId
		p	0		pos
	m	(Lre;)Ldxs;	a	load
		p	0		nbt
	m	()Lgt;	b	getPos
	m	()I	c	getRotation
	m	()I	d	getEntityId
	m	()Ljava/lang/String;	e	getId
	f	Lgt;	a	pos
	f	I	b	rotation
	f	I	c	entityId
c	dxt	net/minecraft/world/level/saveddata/maps/MapIndex
	m	()I	a	getFreeAuxValueForMap
	m	(Lre;)Lre;	a	save
		p	1		nbt
	m	(Lre;)Ldxt;	b	load
		p	0		nbt
	f	Ljava/lang/String;	a	FILE_NAME
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	b	usedAuxIds
c	dxu	net/minecraft/world/level/saveddata/maps/MapItemSavedData
	m	(IIBZZZLadc;)V	<init>	<init>
		p	1		centerX
		p	2		centerZ
		p	3		scale
		p	4		showIcons
		p	5		unlimitedTracking
		p	6		locked
		p	7		dimension
	m	()Ldxu;	a	locked
	m	(BZLadc;)Ldxu;	a	createForClient
		p	0		scale
		p	1		locked
		p	2		dimension
	m	(DDBZZLadc;)Ldxu;	a	createFresh
		p	0		centerX
		p	2		centerZ
		p	4		scale
		p	5		showIcons
		p	6		unlimitedTracking
		p	7		dimension
	m	(I)Ldxu;	a	scaled
		p	1		zoomOutScale
	m	(II)V	a	setColorsDirty
		p	1		x
		p	2		z
	m	(IIB)Z	a	updateColor
		p	1		x
		p	2		z
		p	3		color
	m	(ILbym;)Lvb;	a	getUpdatePacket
		p	1		id
		p	2		player
	m	(Lbym;)Ldxu$a;	a	getHoldingPlayer
		p	1		player
	m	(Lbym;Lcfv;)V	a	tickCarriedBy
		p	1		player
		p	2		stack
	m	(Lcfv;Lgt;Ljava/lang/String;Ldxr$a;)V	a	addTargetDecoration
		p	0		stack
		p	1		pos
		p	2		id
		p	3		type
	m	(Lclo;II)V	a	checkBanners
		p	1		world
		p	2		x
		p	3		z
	m	(Lcmj;Lgt;)Z	a	toggleBanner
		p	1		world
		p	2		pos
	m	(Ldxr$a;Lcmj;Ljava/lang/String;DDDLtj;)V	a	addDecoration
		p	1		type
		p	2		world
		p	3		key
		p	4		x
		p	6		z
		p	8		rotation
		p	10		text
	m	(Lgt;I)V	a	removedFromFrame
		p	1		pos
		p	2		id
	m	(Ljava/lang/String;)V	a	removeDecoration
		p	1		id
	m	(Ljava/util/List;)V	a	addClientSideDecorations
		p	1		icons
	m	(Lre;)Lre;	a	save
		p	1		nbt
	m	(Lre;Lrx;)V	a	lambda$save$1
	m	(I)Z	b	isTrackedCountOverLimit
		p	1		iconCount
	m	(IIB)V	b	setColor
		p	1		x
		p	2		z
		p	3		color
	m	(Lre;)Ldxu;	b	load
		p	0		nbt
	m	(Lre;)Ljava/lang/IllegalArgumentException;	c	lambda$load$0
	m	()Ljava/util/Collection;	d	getBanners
	m	()Z	e	isExplorationMap
	m	()Ljava/lang/Iterable;	f	getDecorations
	m	()V	g	setDecorationsDirty
	f	I	a	MAX_SCALE
	f	I	b	TRACKED_DECORATION_LIMIT
	f	I	c	centerX
	f	I	d	centerZ
	f	Ladc;	e	dimension
	f	B	f	scale
	f	[B	g	colors
	f	Z	h	locked
	f	Lorg/slf4j/Logger;	i	LOGGER
	f	I	j	MAP_SIZE
	f	I	k	HALF_MAP_SIZE
	f	Z	l	trackingPosition
	f	Z	m	unlimitedTracking
	f	Ljava/util/List;	n	carriedBy
	f	Ljava/util/Map;	o	carriedByPlayers
	f	Ljava/util/Map;	p	bannerMarkers
	f	Ljava/util/Map;	q	decorations
	f	Ljava/util/Map;	r	frameMarkers
	f	I	s	trackedDecorationCount
c	dxu$a	net/minecraft/world/level/saveddata/maps/MapItemSavedData$HoldingPlayer
	m	(Ldxu;Lbym;)V	<init>	<init>
		p	2		player
	m	()Ldxu$b;	a	createPatch
	m	(I)Lvb;	a	nextUpdatePacket
		p	1		mapId
	m	(II)V	a	markColorsDirty
		p	1		startX
		p	2		startZ
	m	()V	b	markDecorationsDirty
	f	Lbym;	a	player
	f	I	b	step
	f	Ldxu;	c	this$0
	f	Z	d	dirtyData
	f	I	e	minDirtyX
	f	I	f	minDirtyY
	f	I	g	maxDirtyX
	f	I	h	maxDirtyY
	f	Z	i	dirtyDecorations
	f	I	j	tick
c	dxu$b	net/minecraft/world/level/saveddata/maps/MapItemSavedData$MapPatch
	m	(IIII[B)V	<init>	<init>
		p	1		startX
		p	2		startZ
		p	3		width
		p	4		height
		p	5		colors
	m	(Ldxu;)V	a	applyToMap
		p	1		mapState
	f	I	a	startX
	f	I	b	startY
	f	I	c	width
	f	I	d	height
	f	[B	e	mapColors
c	dxv	net/minecraft/world/level/saveddata/maps/package-info
c	dxw	net/minecraft/world/level/saveddata/package-info
c	dxx	net/minecraft/world/level/storage/CommandStorage
	m	(Ldya;)V	<init>	<init>
		p	1		stateManager
	m	()Ljava/util/stream/Stream;	a	keys
	m	(Ladd;)Lre;	a	get
		p	1		id
	m	(Ladd;Lre;)V	a	set
		p	1		id
		p	2		nbt
	m	(Ljava/lang/String;)Ldxx$a;	a	newStorage
		p	1		namespace
	m	(Ljava/lang/String;Lre;)Ldxx$a;	a	lambda$set$1
		p	2		data
	m	(Ljava/util/Map$Entry;)Ljava/util/stream/Stream;	a	lambda$keys$3
		p	0		entry
	m	(Ljava/lang/String;)Ljava/lang/String;	b	createId
		p	0		namespace
	m	(Ljava/lang/String;Lre;)Ldxx$a;	b	lambda$get$0
		p	2		data
	m	(Ljava/lang/String;)Ldxx$a;	c	lambda$set$2
	f	Ljava/lang/String;	a	ID_PREFIX
	f	Ljava/util/Map;	b	namespaces
	f	Ldya;	c	storage
c	dxx$a	net/minecraft/world/level/storage/CommandStorage$Container
	m	(Ljava/lang/String;)Lre;	a	get
		p	1		name
	m	(Ljava/lang/String;Ljava/lang/String;)Ladd;	a	lambda$getKeys$1
		p	1		key
	m	(Ljava/lang/String;Lre;)V	a	put
		p	1		name
		p	2		nbt
	m	(Lre;)Lre;	a	save
		p	1		nbt
	m	(Lre;Ljava/lang/String;Lre;)V	a	lambda$save$0
		p	1		key
		p	2		value
	m	(Ljava/lang/String;)Ljava/util/stream/Stream;	b	getKeys
		p	1		namespace
	m	(Lre;)Ldxx$a;	b	load
		p	1		nbt
	f	Ljava/lang/String;	a	TAG_CONTENTS
	f	Ljava/util/Map;	b	storage
c	dxy	net/minecraft/world/level/storage/DataVersion
	m	(I)V	<init>	<init>
		p	1		id
	m	(ILjava/lang/String;)V	<init>	<init>
		p	1		id
		p	2		series
	m	()Z	a	isSideSeries
	m	(Ldxy;)Z	a	isCompatible
		p	1		other
	m	()Ljava/lang/String;	b	getSeries
	m	()I	c	getVersion
	f	Ljava/lang/String;	a	MAIN_SERIES
	f	I	b	version
	f	Ljava/lang/String;	c	series
c	dxz	net/minecraft/world/level/storage/DerivedLevelData
	m	(Ldyk;Ldyj;)V	<init>	<init>
		p	1		saveProperties
		p	2		worldProperties
	m	()I	a	getXSpawn
	m	(F)V	a	setSpawnAngle
		p	1		spawnAngle
	m	(I)V	a	setClearWeatherTime
		p	1		clearWeatherTime
	m	(J)V	a	setGameTime
		p	1		time
	m	(Lcmf;)V	a	setGameType
		p	1		gameMode
	m	(Lddi$c;)V	a	setWorldBorder
		p	1		worldBorder
	m	(Lgt;F)V	a	setSpawn
		p	1		pos
		p	2		angle
	m	(Ljava/util/UUID;)V	a	setWanderingTraderId
		p	1		wanderingTraderId
	m	(Lp;Lcmk;)V	a	fillCrashReportCategory
		p	1		reportSection
		p	2		world
	m	(Z)V	a	setThundering
		p	1		thundering
	m	()I	b	getYSpawn
	m	(I)V	b	setXSpawn
		p	1		spawnX
	m	(J)V	b	setDayTime
		p	1		timeOfDay
	m	(Z)V	b	setRaining
		p	1		raining
	m	()I	c	getZSpawn
	m	(I)V	c	setYSpawn
		p	1		spawnY
	m	(Z)V	c	setInitialized
		p	1		initialized
	m	()F	d	getSpawnAngle
	m	(I)V	d	setZSpawn
		p	1		spawnZ
	m	()J	e	getGameTime
	m	(I)V	e	setThunderTime
		p	1		thunderTime
	m	()J	f	getDayTime
	m	(I)V	f	setRainTime
		p	1		rainTime
	m	()Ljava/lang/String;	g	getLevelName
	m	(I)V	g	setWanderingTraderSpawnDelay
		p	1		wanderingTraderSpawnDelay
	m	()I	h	getClearWeatherTime
	m	(I)V	h	setWanderingTraderSpawnChance
		p	1		wanderingTraderSpawnChance
	m	()Z	i	isThundering
	m	()I	j	getThunderTime
	m	()Z	k	isRaining
	m	()I	l	getRainTime
	m	()Lcmf;	m	getGameType
	m	()Z	n	isHardcore
	m	()Z	o	getAllowCommands
	m	()Z	p	isInitialized
	m	()Lcme;	q	getGameRules
	m	()Lddi$c;	r	getWorldBorder
	m	()Lbdv;	s	getDifficulty
	m	()Z	t	isDifficultyLocked
	m	()Lecw;	u	getScheduledEvents
	m	()I	v	getWanderingTraderSpawnDelay
	m	()I	w	getWanderingTraderSpawnChance
	m	()Ljava/util/UUID;	x	getWanderingTraderId
	f	Ldyk;	a	worldData
	f	Ldyj;	b	wrapped
c	dya	net/minecraft/world/level/storage/DimensionDataStorage
	m	(Ljava/io/File;Lcom/mojang/datafixers/DataFixer;)V	<init>	<init>
		p	1		directory
		p	2		dataFixer
	m	()V	a	save
	m	(Ljava/io/PushbackInputStream;)Z	a	isGzip
		p	1		stream
	m	(Ljava/lang/String;)Ljava/io/File;	a	getDataFile
		p	1		id
	m	(Ljava/lang/String;I)Lre;	a	readTagFromDisk
		p	1		id
		p	2		dataVersion
	m	(Ljava/lang/String;Ldxp;)V	a	set
		p	1		id
		p	2		state
	m	(Ljava/util/function/Function;Ljava/lang/String;)Ldxp;	a	get
		p	1		readFunction
		p	2		id
	m	(Ljava/util/function/Function;Ljava/util/function/Supplier;Ljava/lang/String;)Ldxp;	a	computeIfAbsent
		p	1		readFunction
		p	2		supplier
		p	3		id
	m	(Ljava/lang/String;Ldxp;)V	b	lambda$save$0
		p	1		id
		p	2		state
	m	(Ljava/util/function/Function;Ljava/lang/String;)Ldxp;	b	readSavedData
		p	1		readFunction
		p	2		id
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/Map;	b	cache
	f	Lcom/mojang/datafixers/DataFixer;	c	fixerUpper
	f	Ljava/io/File;	d	dataFolder
c	dyb	net/minecraft/world/level/storage/LevelData
	m	()I	a	getXSpawn
	m	(Lcmk;)Ljava/lang/String;	a	lambda$fillCrashReportCategory$0
	m	(Lp;Lcmk;)V	a	fillCrashReportCategory
		p	1		reportSection
		p	2		world
	m	()I	b	getYSpawn
	m	(Z)V	b	setRaining
		p	1		raining
	m	()I	c	getZSpawn
	m	()F	d	getSpawnAngle
	m	()J	e	getGameTime
	m	()J	f	getDayTime
	m	()Ljava/lang/String;	g	lambda$fillCrashReportCategory$1
	m	()Z	i	isThundering
	m	()Z	k	isRaining
	m	()Z	n	isHardcore
	m	()Lcme;	q	getGameRules
	m	()Lbdv;	s	getDifficulty
	m	()Z	t	isDifficultyLocked
c	dyc	net/minecraft/world/level/storage/LevelResource
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		relativePath
	m	()Ljava/lang/String;	a	getId
	f	Ldyc;	a	PLAYER_ADVANCEMENTS_DIR
	f	Ldyc;	b	PLAYER_STATS_DIR
	f	Ldyc;	c	PLAYER_DATA_DIR
	f	Ldyc;	d	PLAYER_OLD_DATA_DIR
	f	Ldyc;	e	LEVEL_DATA_FILE
	f	Ldyc;	f	OLD_LEVEL_DATA_FILE
	f	Ldyc;	g	ICON_FILE
	f	Ldyc;	h	LOCK_FILE
	f	Ldyc;	i	GENERATED_DIR
	f	Ldyc;	j	DATAPACK_DIR
	f	Ldyc;	k	MAP_RESOURCE_FILE
	f	Ldyc;	l	ROOT
	f	Ljava/lang/String;	m	id
c	dyd	net/minecraft/world/level/storage/LevelStorageException
	m	(Ltj;)V	<init>	<init>
		p	1		messageText
	m	()Ltj;	a	getMessageComponent
	f	Ltj;	a	messageComponent
c	dye	net/minecraft/world/level/storage/LevelStorageSource
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;Lcom/mojang/datafixers/DataFixer;)V	<init>	<init>
		p	1		savesDirectory
		p	2		backupsDirectory
		p	3		dataFixer
	m	()Ljava/lang/String;	a	getName
	m	(Ladd;)V	a	lambda$parseFeatureFlagsFromSummary$7
		p	0		id
	m	(Lcom/mojang/serialization/Dynamic;)Lcna;	a	readDataConfig
		p	0		dynamic
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/DataFixer;I)Lcom/mojang/serialization/DataResult;	a	readWorldGenSettings
		p	0		levelData
		p	1		dataFixer
		p	2		version
	m	(Lcom/mojang/serialization/DynamicOps;Lcna;Lhq;Lcom/mojang/serialization/Lifecycle;)Ljava/util/function/BiFunction;	a	getLevelData
		p	0		ops
		p	1		dataConfiguration
		p	2		dimensionOptionsRegistry
		p	3		lifecycle
	m	(Lcom/mojang/serialization/DynamicOps;Lcna;Lhq;Lcom/mojang/serialization/Lifecycle;Ljava/nio/file/Path;Lcom/mojang/datafixers/DataFixer;)Lcom/mojang/datafixers/util/Pair;	a	lambda$getLevelData$4
		p	4		path
		p	5		dataFixer
	m	(Ldye$a;)Ljava/util/concurrent/CompletableFuture;	a	loadLevelSummaries
		p	1		levels
	m	(Ldye$b;)Ldyf;	a	lambda$loadLevelSummaries$2
	m	(Ldye$b;Ljava/util/function/BiFunction;)Ljava/lang/Object;	a	readLevelData
		p	1		levelSave
		p	2		levelDataParser
	m	(Ldye$b;Z)Ljava/util/function/BiFunction;	a	levelSummaryReader
		p	1		levelSave
		p	2		locked
	m	(Ldye$b;ZLjava/nio/file/Path;Lcom/mojang/datafixers/DataFixer;)Ldyf;	a	lambda$levelSummaryReader$5
		p	3		path
		p	4		dataFixer
	m	(Ljava/lang/String;)Z	a	isNewLevelIdAcceptable
		p	1		name
	m	(Ljava/nio/file/Path;)Ldye;	a	createDefault
		p	0		path
	m	(Ljava/nio/file/Path;Lcom/mojang/datafixers/DataFixer;)Lcna;	a	getDataConfiguration
		p	0		path
		p	1		dataFixer
	m	(Ljava/util/List;)Ljava/util/List;	a	lambda$loadLevelSummaries$3
		p	0		summaries
	m	()Ldye$a;	b	findLevelCandidates
	m	(Lcom/mojang/serialization/Dynamic;)Lcau;	b	parseFeatureFlagsFromSummary
		p	0		levelData
	m	(Ldye$b;)Z	b	lambda$findLevelCandidates$1
		p	0		levelSave
	m	(Ljava/lang/String;)Z	b	levelExists
		p	1		name
	m	(Ljava/nio/file/Path;)Lrx;	b	readLightweightData
		p	0		path
	m	()Ljava/nio/file/Path;	c	getBaseDir
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/util/stream/Stream;	c	lambda$parseFeatureFlagsFromSummary$6
		p	0		featureFlag
	m	(Ljava/lang/String;)Ldye$c;	c	createAccess
		p	1		directoryName
	m	(Ljava/nio/file/Path;)Z	c	lambda$findLevelCandidates$0
		p	0		path
	m	()Ljava/nio/file/Path;	d	getBackupPath
	m	()I	e	getStorageVersion
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/time/format/DateTimeFormatter;	b	FORMATTER
	f	Lcom/google/common/collect/ImmutableList;	c	OLD_SETTINGS_KEYS
	f	Ljava/lang/String;	d	TAG_DATA
	f	Ljava/nio/file/Path;	e	baseDir
	f	Ljava/nio/file/Path;	f	backupDir
	f	Lcom/mojang/datafixers/DataFixer;	g	fixerUpper
c	dye$a	net/minecraft/world/level/storage/LevelStorageSource$LevelCandidates
	m	()Z	a	isEmpty
	m	()Ljava/util/List;	b	levels
	f	Ljava/util/List;	a	levels
c	dye$b	net/minecraft/world/level/storage/LevelStorageSource$LevelDirectory
	m	()Ljava/lang/String;	a	directoryName
	m	(Ldyc;)Ljava/nio/file/Path;	a	resourcePath
		p	1		savePath
	m	(Ljava/time/LocalDateTime;)Ljava/nio/file/Path;	a	corruptedDataFile
		p	1		dateTime
	m	()Ljava/nio/file/Path;	b	dataFile
	m	()Ljava/nio/file/Path;	c	oldDataFile
	m	()Ljava/nio/file/Path;	d	iconFile
	m	()Ljava/nio/file/Path;	e	lockFile
	m	()Ljava/nio/file/Path;	f	path
	f	Ljava/nio/file/Path;	a	path
c	dye$c	net/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess
	m	(Ldye;Ljava/lang/String;)V	<init>	<init>
		p	2		directoryName
	m	()Ljava/lang/String;	a	getLevelId
	m	(Ladc;)Ljava/nio/file/Path;	a	getDimensionPath
		p	1		key
	m	(Lcom/mojang/serialization/DynamicOps;Lcna;Lhq;Lcom/mojang/serialization/Lifecycle;)Lcom/mojang/datafixers/util/Pair;	a	getDataTag
		p	1		ops
		p	2		dataConfiguration
		p	3		dimensionOptionsRegistry
		p	4		lifecycle
	m	(Ldyc;)Ljava/nio/file/Path;	a	getLevelPath
		p	1		savePath
	m	(Lhr;Ldyk;)V	a	saveDataTag
		p	1		registryManager
		p	2		saveProperties
	m	(Lhr;Ldyk;Lre;)V	a	saveDataTag
		p	1		registryManager
		p	2		saveProperties
		p	3		nbt
	m	(Ljava/lang/String;)V	a	renameLevel
		p	1		name
	m	()Ldyh;	b	createPlayerStorage
	m	()Ldyf;	c	getSummary
	m	()Lcna;	d	getDataConfiguration
	m	()Ljava/util/Optional;	e	getIconFile
	m	()V	f	deleteLevel
	m	()J	g	makeWorldBackup
	m	()V	h	checkLock
	f	Ldye;	a	this$0
	f	Laop;	b	lock
	f	Ldye$b;	c	levelDirectory
	f	Ljava/lang/String;	d	levelId
	f	Ljava/util/Map;	e	resources
c	dye$c$1	net/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess$1
	m	(Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;	a	postVisitDirectory
	m	(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;	a	visitFile
	f	Ljava/nio/file/Path;	a	val$lockPath
	f	Ldye$c;	b	this$1
c	dye$c$2	net/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess$2
	m	(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;	a	visitFile
	f	Ljava/nio/file/Path;	a	val$rootPath
	f	Ljava/util/zip/ZipOutputStream;	b	val$stream
	f	Ldye$c;	c	this$1
c	dyf	net/minecraft/world/level/storage/LevelSummary
	m	(Lcmm;Ldyg;Ljava/lang/String;ZZZLjava/nio/file/Path;)V	<init>	<init>
		p	1		levelInfo
		p	2		versionInfo
		p	3		name
		p	4		requiresConversion
		p	5		locked
		p	6		experimental
		p	7		iconPath
	m	()Ljava/lang/String;	a	getLevelId
	m	(Ldyf;)I	a	compareTo
	m	(Luf;)Luf;	a	lambda$createInfo$0
		p	0		style
	m	()Ljava/lang/String;	b	getLevelName
	m	()Ljava/nio/file/Path;	c	getIcon
	m	()Z	d	requiresManualConversion
	m	()Z	e	isExperimental
	m	()J	f	getLastPlayed
	m	()Lcmm;	g	getSettings
	m	()Lcmf;	h	getGameMode
	m	()Z	i	isHardcore
	m	()Z	j	hasCheats
	m	()Ltw;	k	getWorldVersionName
	m	()Ldyg;	l	levelVersion
	m	()Z	m	markVersionInList
	m	()Z	n	askToOpenWorld
	m	()Ldyf$a;	o	backupStatus
	m	()Z	p	isLocked
	m	()Z	q	isDisabled
	m	()Z	r	isCompatible
	m	()Ltj;	s	getInfo
	m	()Ltj;	t	createInfo
	f	Lcmm;	a	settings
	f	Ldyg;	b	levelVersion
	f	Ljava/lang/String;	c	levelId
	f	Z	d	requiresManualConversion
	f	Z	e	locked
	f	Z	f	experimental
	f	Ljava/nio/file/Path;	g	icon
	f	Ltj;	h	info
c	dyf$a	net/minecraft/world/level/storage/LevelSummary$BackupStatus
	m	(Ljava/lang/String;IZZLjava/lang/String;)V	<init>	<init>
		p	3		backup
		p	4		boldRedFormatting
		p	5		translationKeySuffix
	m	()Z	a	shouldBackup
	m	()Z	b	isSevere
	m	()Ljava/lang/String;	c	getTranslationKey
	m	()[Ldyf$a;	d	$values
	f	Ldyf$a;	a	NONE
	f	Ldyf$a;	b	DOWNGRADE
	f	Ldyf$a;	c	UPGRADE_TO_SNAPSHOT
	f	Z	d	shouldBackup
	f	Z	e	severe
	f	Ljava/lang/String;	f	translationKey
	f	[Ldyf$a;	g	$VALUES
c	dyg	net/minecraft/world/level/storage/LevelVersion
	m	(IJLjava/lang/String;ILjava/lang/String;Z)V	<init>	<init>
		p	1		levelFormatVersion
		p	2		lastPlayed
		p	4		versionName
		p	5		versionId
		p	6		series
		p	7		stable
	m	()I	a	levelDataVersion
	m	(Lcom/mojang/serialization/Dynamic;)Ldyg;	a	parse
		p	0		dynamic
	m	()J	b	lastPlayed
	m	()Ljava/lang/String;	c	minecraftVersionName
	m	()Ldxy;	d	minecraftVersion
	m	()Z	e	snapshot
	f	I	a	levelDataVersion
	f	J	b	lastPlayed
	f	Ljava/lang/String;	c	minecraftVersionName
	f	Ldxy;	d	minecraftVersion
	f	Z	e	snapshot
c	dyh	net/minecraft/world/level/storage/PlayerDataStorage
	m	(Ldye$c;Lcom/mojang/datafixers/DataFixer;)V	<init>	<init>
		p	1		session
		p	2		dataFixer
	m	()[Ljava/lang/String;	a	getSeenPlayers
	m	(Lbym;)V	a	save
		p	1		player
	m	(Lbym;)Lre;	b	load
		p	1		player
	f	Lcom/mojang/datafixers/DataFixer;	a	fixerUpper
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ljava/io/File;	c	playerDir
c	dyi	net/minecraft/world/level/storage/PrimaryLevelData
	m	(Lcmm;Ldhx;Ldyi$a;Lcom/mojang/serialization/Lifecycle;)V	<init>	<init>
		p	1		levelInfo
		p	2		generatorOptions
	m	(Lcom/mojang/datafixers/DataFixer;ILre;ZIIIFJJIIIZIZZZLddi$c;IILjava/util/UUID;Ljava/util/Set;Lecw;Lre;Lre;Lcmm;Ldhx;Ldyi$a;Lcom/mojang/serialization/Lifecycle;)V	<init>	<init>
		p	1		dataFixer
		p	2		dataVersion
		p	3		playerData
		p	4		modded
		p	5		spawnX
		p	6		spawnY
		p	7		spawnZ
		p	8		spawnAngle
		p	9		time
		p	11		timeOfDay
		p	13		version
		p	14		clearWeatherTime
		p	15		rainTime
		p	16		raining
		p	17		thunderTime
		p	18		thundering
		p	19		initialized
		p	20		difficultyLocked
		p	21		worldBorder
		p	22		wanderingTraderSpawnDelay
		p	23		wanderingTraderSpawnChance
		p	24		wanderingTraderId
		p	25		serverBrands
		p	26		scheduledEvents
		p	27		customBossEvents
		p	28		dragonFight
		p	29		levelInfo
		p	30		generatorOptions
		p	31		specialProperty
		p	32		lifecycle
	m	()Ldhx;	A	worldGenOptions
	m	()Z	B	isFlatWorld
	m	()Z	C	isDebugWorld
	m	()Lcom/mojang/serialization/Lifecycle;	D	worldGenSettingsLifecycle
	m	()Lre;	E	endDragonFightData
	m	()Lcna;	F	getDataConfiguration
	m	()Lre;	G	getCustomBossEvents
	m	()Z	H	wasModded
	m	()Ljava/util/Set;	I	getKnownServerBrands
	m	()Ldyj;	J	overworldData
	m	()Lcmm;	K	getLevelSettings
	m	()V	M	updatePlayerTag
	m	()I	a	getXSpawn
	m	(F)V	a	setSpawnAngle
		p	1		spawnAngle
	m	(I)V	a	setClearWeatherTime
		p	1		clearWeatherTime
	m	(J)V	a	setGameTime
		p	1		time
	m	(Lbdv;)V	a	setDifficulty
		p	1		difficulty
	m	(Lcmf;)V	a	setGameType
		p	1		gameMode
	m	(Lcna;)V	a	setDataConfiguration
		p	1		dataConfiguration
	m	(Lcom/mojang/serialization/DataResult$PartialResult;)V	a	lambda$setTagData$4
		p	0		result
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/util/stream/Stream;	a	lambda$parse$1
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/DataFixer;ILre;Lcmm;Ldyg;Ldyi$a;Ldhx;Lcom/mojang/serialization/Lifecycle;)Ldyi;	a	parse
		p	0		dynamic
		p	1		dataFixer
		p	2		dataVersion
		p	3		playerData
		p	4		levelInfo
		p	5		saveVersionInfo
		p	6		specialProperty
		p	7		generatorOptions
		p	8		lifecycle
	m	(Lddi$c;)V	a	setWorldBorder
		p	1		worldBorder
	m	(Lgt;F)V	a	setSpawn
		p	1		pos
		p	2		angle
	m	(Lhr;Lre;)Lre;	a	createTag
		p	1		registryManager
		p	2		playerNbt
	m	(Lhr;Lre;Lre;)V	a	setTagData
		p	1		registryManager
		p	2		levelNbt
		p	3		playerNbt
	m	(Ljava/lang/String;Z)V	a	setModdedInfo
		p	1		brand
		p	2		modded
	m	(Ljava/util/UUID;)V	a	setWanderingTraderId
		p	1		wanderingTraderId
	m	(Lp;Lcmk;)V	a	fillCrashReportCategory
		p	1		reportSection
		p	2		world
	m	(Lre;)V	a	setEndDragonFightData
		p	1		dragonFight
	m	(Lre;Lrx;)V	a	lambda$setTagData$3
		p	1		dataConfiguration
	m	(Z)V	a	setThundering
		p	1		thundering
	m	()I	b	getYSpawn
	m	(I)V	b	setXSpawn
		p	1		spawnX
	m	(J)V	b	setDayTime
		p	1		timeOfDay
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$parse$0
	m	(Lre;)V	b	setCustomBossEvents
		p	1		customBossEvents
	m	(Lre;Lrx;)V	b	lambda$setTagData$2
	m	(Z)V	b	setRaining
		p	1		raining
	m	()I	c	getZSpawn
	m	(I)V	c	setYSpawn
		p	1		spawnY
	m	(Z)V	c	setInitialized
		p	1		initialized
	m	()F	d	getSpawnAngle
	m	(I)V	d	setZSpawn
		p	1		spawnZ
	m	(Z)V	d	setDifficultyLocked
		p	1		difficultyLocked
	m	()J	e	getGameTime
	m	(I)V	e	setThunderTime
		p	1		thunderTime
	m	()J	f	getDayTime
	m	(I)V	f	setRainTime
		p	1		rainTime
	m	()Ljava/lang/String;	g	getLevelName
	m	(I)V	g	setWanderingTraderSpawnDelay
		p	1		wanderingTraderSpawnDelay
	m	()I	h	getClearWeatherTime
	m	(I)V	h	setWanderingTraderSpawnChance
		p	1		wanderingTraderSpawnChance
	m	()Z	i	isThundering
	m	()I	j	getThunderTime
	m	()Z	k	isRaining
	m	()I	l	getRainTime
	m	()Lcmf;	m	getGameType
	m	()Z	n	isHardcore
	m	()Z	o	getAllowCommands
	m	()Z	p	isInitialized
	m	()Lcme;	q	getGameRules
	m	()Lddi$c;	r	getWorldBorder
	m	()Lbdv;	s	getDifficulty
	m	()Z	t	isDifficultyLocked
	m	()Lecw;	u	getScheduledEvents
	m	()I	v	getWanderingTraderSpawnDelay
	m	()I	w	getWanderingTraderSpawnChance
	m	()Ljava/util/UUID;	x	getWanderingTraderId
	m	()Lre;	y	getLoadedPlayerTag
	m	()I	z	getVersion
	f	Z	A	difficultyLocked
	f	Lddi$c;	B	worldBorder
	f	Lre;	C	endDragonFightData
	f	Lre;	D	customBossEvents
	f	I	E	wanderingTraderSpawnDelay
	f	I	F	wanderingTraderSpawnChance
	f	Ljava/util/UUID;	G	wanderingTraderId
	f	Ljava/util/Set;	H	knownServerBrands
	f	Z	I	wasModded
	f	Lecw;	J	scheduledEvents
	f	Ljava/lang/String;	a	PLAYER
	f	Ljava/lang/String;	b	WORLD_GEN_SETTINGS
	f	Lorg/slf4j/Logger;	e	LOGGER
	f	Lcmm;	f	settings
	f	Ldhx;	g	worldOptions
	f	Ldyi$a;	h	specialWorldProperty
	f	Lcom/mojang/serialization/Lifecycle;	i	worldGenSettingsLifecycle
	f	I	j	xSpawn
	f	I	k	ySpawn
	f	I	l	zSpawn
	f	F	m	spawnAngle
	f	J	n	gameTime
	f	J	o	dayTime
	f	Lcom/mojang/datafixers/DataFixer;	p	fixerUpper
	f	I	q	playerDataVersion
	f	Z	r	upgradedPlayerTag
	f	Lre;	s	loadedPlayerTag
	f	I	t	version
	f	I	u	clearWeatherTime
	f	Z	v	raining
	f	I	w	rainTime
	f	Z	x	thundering
	f	I	y	thunderTime
	f	Z	z	initialized
c	dyi$a	net/minecraft/world/level/storage/PrimaryLevelData$SpecialWorldProperty
	m	()[Ldyi$a;	a	$values
	f	Ldyi$a;	a	NONE
	f	Ldyi$a;	b	FLAT
	f	Ldyi$a;	c	DEBUG
	f	[Ldyi$a;	d	$VALUES
c	dyj	net/minecraft/world/level/storage/ServerLevelData
	m	(I)V	a	setClearWeatherTime
		p	1		clearWeatherTime
	m	(J)V	a	setGameTime
		p	1		time
	m	(Lcmf;)V	a	setGameType
		p	1		gameMode
	m	(Lddi$c;)V	a	setWorldBorder
		p	1		worldBorder
	m	(Ljava/util/UUID;)V	a	setWanderingTraderId
		p	1		wanderingTraderId
	m	(Lp;Lcmk;)V	a	fillCrashReportCategory
		p	1		reportSection
		p	2		world
	m	(Z)V	a	setThundering
		p	1		thundering
	m	(J)V	b	setDayTime
		p	1		timeOfDay
	m	(Z)V	c	setInitialized
		p	1		initialized
	m	(I)V	e	setThunderTime
		p	1		thunderTime
	m	(I)V	f	setRainTime
		p	1		rainTime
	m	()Ljava/lang/String;	g	getLevelName
	m	(I)V	g	setWanderingTraderSpawnDelay
		p	1		wanderingTraderSpawnDelay
	m	()I	h	getClearWeatherTime
	m	(I)V	h	setWanderingTraderSpawnChance
		p	1		wanderingTraderSpawnChance
	m	()I	j	getThunderTime
	m	()I	l	getRainTime
	m	()Lcmf;	m	getGameType
	m	()Z	o	getAllowCommands
	m	()Z	p	isInitialized
	m	()Lddi$c;	r	getWorldBorder
	m	()Lecw;	u	getScheduledEvents
	m	()I	v	getWanderingTraderSpawnDelay
	m	()I	w	getWanderingTraderSpawnChance
	m	()Ljava/util/UUID;	x	getWanderingTraderId
	m	()Ljava/lang/String;	y	lambda$fillCrashReportCategory$1
	m	()Ljava/lang/String;	z	lambda$fillCrashReportCategory$0
c	dyk	net/minecraft/world/level/storage/WorldData
	m	()Ldhx;	A	worldGenOptions
	m	()Z	B	isFlatWorld
	m	()Z	C	isDebugWorld
	m	()Lcom/mojang/serialization/Lifecycle;	D	worldGenSettingsLifecycle
	m	()Lre;	E	endDragonFightData
	m	()Lcna;	F	getDataConfiguration
	m	()Lre;	G	getCustomBossEvents
	m	()Z	H	wasModded
	m	()Ljava/util/Set;	I	getKnownServerBrands
	m	()Ldyj;	J	overworldData
	m	()Lcmm;	K	getLevelSettings
	m	()Lcau;	L	enabledFeatures
	m	()Ljava/lang/String;	a	lambda$fillCrashReportCategory$2
	m	(Lbdv;)V	a	setDifficulty
		p	1		difficulty
	m	(Lcmf;)V	a	setGameType
		p	1		gameMode
	m	(Lcna;)V	a	setDataConfiguration
		p	1		dataConfiguration
	m	(Lhr;Lre;)Lre;	a	createTag
		p	1		registryManager
		p	2		playerNbt
	m	(Ljava/lang/String;Z)V	a	setModdedInfo
		p	1		brand
		p	2		modded
	m	(Lp;)V	a	fillCrashReportCategory
		p	1		section
	m	(Lre;)V	a	setEndDragonFightData
		p	1		dragonFight
	m	()Ljava/lang/String;	b	lambda$fillCrashReportCategory$1
	m	(Lre;)V	b	setCustomBossEvents
		p	1		customBossEvents
	m	()Ljava/lang/String;	c	lambda$fillCrashReportCategory$0
	m	(Z)V	d	setDifficultyLocked
		p	1		difficultyLocked
	m	()Ljava/lang/String;	g	getLevelName
	m	(I)Ljava/lang/String;	i	getStorageVersionName
		p	1		id
	m	()Lcmf;	m	getGameType
	m	()Z	n	isHardcore
	m	()Z	o	getAllowCommands
	m	()Lcme;	q	getGameRules
	m	()Lbdv;	s	getDifficulty
	m	()Z	t	isDifficultyLocked
	m	()Lre;	y	getLoadedPlayerTag
	m	()I	z	getVersion
	f	I	c	ANVIL_VERSION_ID
	f	I	d	MCREGION_VERSION_ID
c	dyl	net/minecraft/world/level/storage/WritableLevelData
	m	(F)V	a	setSpawnAngle
		p	1		spawnAngle
	m	(Lgt;F)V	a	setSpawn
		p	1		pos
		p	2		angle
	m	(I)V	b	setXSpawn
		p	1		spawnX
	m	(I)V	c	setYSpawn
		p	1		spawnY
	m	(I)V	d	setZSpawn
		p	1		spawnZ
c	dym	net/minecraft/world/level/storage/loot/BuiltInLootTables
	m	()Ljava/util/Set;	a	all
	m	(Ladd;)Ladd;	a	register
		p	0		id
	m	(Ljava/lang/String;)Ladd;	a	register
		p	0		id
	f	Ladd;	A	JUNGLE_TEMPLE
	f	Ladd;	B	JUNGLE_TEMPLE_DISPENSER
	f	Ladd;	C	IGLOO_CHEST
	f	Ladd;	D	WOODLAND_MANSION
	f	Ladd;	E	UNDERWATER_RUIN_SMALL
	f	Ladd;	F	UNDERWATER_RUIN_BIG
	f	Ladd;	G	BURIED_TREASURE
	f	Ladd;	H	SHIPWRECK_MAP
	f	Ladd;	I	SHIPWRECK_SUPPLY
	f	Ladd;	J	SHIPWRECK_TREASURE
	f	Ladd;	K	PILLAGER_OUTPOST
	f	Ladd;	L	BASTION_TREASURE
	f	Ladd;	M	BASTION_OTHER
	f	Ladd;	N	BASTION_BRIDGE
	f	Ladd;	O	BASTION_HOGLIN_STABLE
	f	Ladd;	P	ANCIENT_CITY
	f	Ladd;	Q	ANCIENT_CITY_ICE_BOX
	f	Ladd;	R	RUINED_PORTAL
	f	Ladd;	S	SHEEP_WHITE
	f	Ladd;	T	SHEEP_ORANGE
	f	Ladd;	U	SHEEP_MAGENTA
	f	Ladd;	V	SHEEP_LIGHT_BLUE
	f	Ladd;	W	SHEEP_YELLOW
	f	Ladd;	X	SHEEP_LIME
	f	Ladd;	Y	SHEEP_PINK
	f	Ladd;	Z	SHEEP_GRAY
	f	Ladd;	aA	PIGLIN_BARTERING
	f	Ljava/util/Set;	aB	LOCATIONS
	f	Ljava/util/Set;	aC	IMMUTABLE_LOCATIONS
	f	Ladd;	a	EMPTY
	f	Ladd;	aa	SHEEP_LIGHT_GRAY
	f	Ladd;	ab	SHEEP_CYAN
	f	Ladd;	ac	SHEEP_PURPLE
	f	Ladd;	ad	SHEEP_BLUE
	f	Ladd;	ae	SHEEP_BROWN
	f	Ladd;	af	SHEEP_GREEN
	f	Ladd;	ag	SHEEP_RED
	f	Ladd;	ah	SHEEP_BLACK
	f	Ladd;	ai	FISHING
	f	Ladd;	aj	FISHING_JUNK
	f	Ladd;	ak	FISHING_TREASURE
	f	Ladd;	al	FISHING_FISH
	f	Ladd;	am	CAT_MORNING_GIFT
	f	Ladd;	an	ARMORER_GIFT
	f	Ladd;	ao	BUTCHER_GIFT
	f	Ladd;	ap	CARTOGRAPHER_GIFT
	f	Ladd;	aq	CLERIC_GIFT
	f	Ladd;	ar	FARMER_GIFT
	f	Ladd;	as	FISHERMAN_GIFT
	f	Ladd;	at	FLETCHER_GIFT
	f	Ladd;	au	LEATHERWORKER_GIFT
	f	Ladd;	av	LIBRARIAN_GIFT
	f	Ladd;	aw	MASON_GIFT
	f	Ladd;	ax	SHEPHERD_GIFT
	f	Ladd;	ay	TOOLSMITH_GIFT
	f	Ladd;	az	WEAPONSMITH_GIFT
	f	Ladd;	b	SPAWN_BONUS_CHEST
	f	Ladd;	c	END_CITY_TREASURE
	f	Ladd;	d	SIMPLE_DUNGEON
	f	Ladd;	e	VILLAGE_WEAPONSMITH
	f	Ladd;	f	VILLAGE_TOOLSMITH
	f	Ladd;	g	VILLAGE_ARMORER
	f	Ladd;	h	VILLAGE_CARTOGRAPHER
	f	Ladd;	i	VILLAGE_MASON
	f	Ladd;	j	VILLAGE_SHEPHERD
	f	Ladd;	k	VILLAGE_BUTCHER
	f	Ladd;	l	VILLAGE_FLETCHER
	f	Ladd;	m	VILLAGE_FISHER
	f	Ladd;	n	VILLAGE_TANNERY
	f	Ladd;	o	VILLAGE_TEMPLE
	f	Ladd;	p	VILLAGE_DESERT_HOUSE
	f	Ladd;	q	VILLAGE_PLAINS_HOUSE
	f	Ladd;	r	VILLAGE_TAIGA_HOUSE
	f	Ladd;	s	VILLAGE_SNOWY_HOUSE
	f	Ladd;	t	VILLAGE_SAVANNA_HOUSE
	f	Ladd;	u	ABANDONED_MINESHAFT
	f	Ladd;	v	NETHER_BRIDGE
	f	Ladd;	w	STRONGHOLD_LIBRARY
	f	Ladd;	x	STRONGHOLD_CROSSING
	f	Ladd;	y	STRONGHOLD_CORRIDOR
	f	Ladd;	z	DESERT_PYRAMID
c	dyn	net/minecraft/world/level/storage/loot/Deserializers
	m	()Lcom/google/gson/GsonBuilder;	a	createConditionSerializer
	m	()Lcom/google/gson/GsonBuilder;	b	createFunctionSerializer
	m	()Lcom/google/gson/GsonBuilder;	c	createLootTableSerializer
c	dyo	net/minecraft/world/level/storage/loot/GsonAdapterFactory
	m	(Lhq;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Function;)Ldyo$a;	a	builder
		p	0		registry
		p	1		rootFieldName
		p	2		idFieldName
		p	3		typeGetter
c	dyo$a	net/minecraft/world/level/storage/loot/GsonAdapterFactory$Builder
	m	(Lhq;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Function;)V	<init>	<init>
		p	1		registry
		p	2		rootFieldName
		p	3		idFieldName
		p	4		typeIdentification
	m	()Ljava/lang/Object;	a	build
	m	(Ldyy;)Ldyo$a;	a	withDefaultType
		p	1		defaultType
	m	(Ldyy;Ldyo$b;)Ldyo$a;	a	withInlineSerializer
		p	1		type
		p	2		serializer
	f	Lhq;	a	registry
	f	Ljava/lang/String;	b	elementName
	f	Ljava/lang/String;	c	typeKey
	f	Ljava/util/function/Function;	d	typeGetter
	f	Lcom/mojang/datafixers/util/Pair;	e	inlineType
	f	Ldyy;	f	defaultType
c	dyo$b	net/minecraft/world/level/storage/loot/GsonAdapterFactory$InlineSerializer
	m	(Lcom/google/gson/JsonElement;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	deserialize
		p	1		json
		p	2		context
	m	(Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	a	serialize
		p	1		object
		p	2		context
c	dyo$c	net/minecraft/world/level/storage/loot/GsonAdapterFactory$JsonAdapter
	m	(Lhq;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Function;Ldyy;Lcom/mojang/datafixers/util/Pair;)V	<init>	<init>
		p	1		registry
		p	2		rootFieldName
		p	3		idFieldName
		p	4		typeGetter
		p	5		defaultType
		p	6		elementSerializer
	f	Lhq;	a	registry
	f	Ljava/lang/String;	b	elementName
	f	Ljava/lang/String;	c	typeKey
	f	Ljava/util/function/Function;	d	typeGetter
	f	Ldyy;	e	defaultType
	f	Lcom/mojang/datafixers/util/Pair;	f	inlineType
c	dyp	net/minecraft/world/level/storage/loot/IntRange
	m	(Lecg;Lecg;)V	<init>	<init>
		p	1		min
		p	2		max
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(I)Ldyp;	a	exact
		p	0		value
	m	(II)Ldyp;	a	range
		p	0		min
		p	1		max
	m	(Ldyr;I)I	a	clamp
		p	1		context
		p	2		value
	m	(Lecg;Ldyr;I)Z	a	lambda$new$5
		p	1		context
		p	2		value
	m	(Lecg;Lecg;Ldyr;I)Z	a	lambda$new$7
		p	2		context
		p	3		value
	m	(I)Ldyp;	b	lowerBound
		p	0		min
	m	(Ldyr;I)Z	b	test
		p	1		context
		p	2		value
	m	(Lecg;Ldyr;I)I	b	lambda$new$4
		p	1		context
		p	2		value
	m	(Lecg;Lecg;Ldyr;I)I	b	lambda$new$6
		p	2		context
		p	3		value
	m	(I)Ldyp;	c	upperBound
		p	0		max
	m	(Ldyr;I)Z	c	lambda$new$1
		p	0		context
		p	1		value
	m	(Lecg;Ldyr;I)Z	c	lambda$new$3
		p	1		context
		p	2		value
	m	(Ldyr;I)I	d	lambda$new$0
		p	0		context
		p	1		value
	m	(Lecg;Ldyr;I)I	d	lambda$new$2
		p	1		context
		p	2		value
	f	Lecg;	a	min
	f	Lecg;	b	max
	f	Ldyp$b;	c	limiter
	f	Ldyp$a;	d	predicate
c	dyp$a	net/minecraft/world/level/storage/loot/IntRange$IntChecker
	m	(Ldyr;I)Z	test	test
		p	1		context
		p	2		value
c	dyp$b	net/minecraft/world/level/storage/loot/IntRange$IntLimiter
	m	(Ldyr;I)I	apply	apply
		p	1		context
		p	2		value
c	dyp$c	net/minecraft/world/level/storage/loot/IntRange$Serializer
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ldyp;	a	deserialize
	m	(Ldyp;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	a	serialize
c	dyq	net/minecraft/world/level/storage/loot/ItemModifierManager
	m	(Ldyw;Ldyv;)V	<init>	<init>
		p	1		lootConditionManager
		p	2		lootManager
	m	()Ljava/util/Set;	a	getKeys
	m	(Ladd;)Leac;	a	get
		p	1		id
	m	(Ladd;Leac;)Leac;	a	get
		p	1		id
		p	2		fallback
	m	(Lcom/google/common/collect/ImmutableMap$Builder;Ladd;Lcom/google/gson/JsonElement;)V	a	lambda$apply$0
		p	1		id
		p	2		json
	m	(Ldyz;Ladd;Leac;)V	a	lambda$apply$1
		p	1		id
		p	2		function
	m	(Ljava/lang/Object;Lalh;Lbao;)V	a	apply
		p	1		prepared
		p	2		manager
		p	3		profiler
	m	(Ljava/lang/String;Ljava/lang/String;)V	a	lambda$apply$2
		p	0		name
		p	1		message
	m	(Ljava/util/Map;Lalh;Lbao;)V	a	apply
		p	1		prepared
		p	2		manager
		p	3		profiler
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lcom/google/gson/Gson;	b	GSON
	f	Ldyw;	c	predicateManager
	f	Ldyv;	d	lootTables
	f	Ljava/util/Map;	e	functions
c	dyq$a	net/minecraft/world/level/storage/loot/ItemModifierManager$FunctionSequence
	m	([Leac;)V	<init>	<init>
		p	1		functions
	m	()Lead;	a	getType
	m	(Lcfv;Ldyr;)Lcfv;	a	apply
	f	[Leac;	a	functions
	f	Ljava/util/function/BiFunction;	b	compositeFunction
c	dyr	net/minecraft/world/level/storage/loot/LootContext
	m	(Lapo;FLaip;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/Map;Ljava/util/Map;)V	<init>	<init>
		p	1		random
		p	2		luck
		p	3		world
		p	4		tableGetter
		p	5		conditionGetter
		p	6		parameters
		p	7		drops
	m	()Lapo;	a	getRandom
	m	(Ladd;)Ldyu;	a	getLootTable
		p	1		id
	m	(Ladd;Ljava/util/function/Consumer;)V	a	addDynamicDrops
		p	1		id
		p	2		lootConsumer
	m	(Ldyu;)Z	a	addVisitedTable
		p	1		table
	m	(Leaw;)Z	a	hasParam
		p	1		parameter
	m	(Lebl;)Z	a	addVisitedCondition
		p	1		condition
	m	()F	b	getLuck
	m	(Ladd;)Lebl;	b	getCondition
		p	1		id
	m	(Ldyu;)V	b	removeVisitedTable
		p	1		table
	m	(Leaw;)Ljava/lang/Object;	b	getParam
		p	1		parameter
	m	(Lebl;)V	b	removeVisitedCondition
		p	1		condition
	m	()Laip;	c	getLevel
	m	(Leaw;)Ljava/lang/Object;	c	getParamOrNull
		p	1		parameter
	f	Lapo;	a	random
	f	F	b	luck
	f	Laip;	c	level
	f	Ljava/util/function/Function;	d	lootTables
	f	Ljava/util/Set;	e	visitedTables
	f	Ljava/util/function/Function;	f	conditions
	f	Ljava/util/Set;	g	visitedConditions
	f	Ljava/util/Map;	h	params
	f	Ljava/util/Map;	i	dynamicDrops
c	dyr$a	net/minecraft/world/level/storage/loot/LootContext$Builder
	m	(Laip;)V	<init>	<init>
		p	1		world
	m	()Laip;	a	getLevel
	m	(F)Ldyr$a;	a	withLuck
		p	1		luck
	m	(J)Ldyr$a;	a	withOptionalRandomSeed
		p	1		seed
	m	(JLapo;)Ldyr$a;	a	withOptionalRandomSeed
		p	1		seed
		p	3		random
	m	(Ladd;Ldyr$b;)Ldyr$a;	a	withDynamicDrop
		p	1		id
		p	2		value
	m	(Lapo;)Ldyr$a;	a	withRandom
		p	1		random
	m	(Leaw;)Ljava/lang/Object;	a	getParameter
		p	1		parameter
	m	(Leaw;Ljava/lang/Object;)Ldyr$a;	a	withParameter
		p	1		key
		p	2		value
	m	(Leax;)Ldyr;	a	create
		p	1		type
	m	(Leaw;)Ljava/lang/Object;	b	getOptionalParameter
		p	1		parameter
	m	(Leaw;Ljava/lang/Object;)Ldyr$a;	b	withOptionalParameter
		p	1		key
		p	2		value
	f	Laip;	a	level
	f	Ljava/util/Map;	b	params
	f	Ljava/util/Map;	c	dynamicDrops
	f	Lapo;	d	random
	f	F	e	luck
c	dyr$b	net/minecraft/world/level/storage/loot/LootContext$DynamicDrop
	m	(Ldyr;Ljava/util/function/Consumer;)V	add	add
		p	1		context
		p	2		consumer
c	dyr$c	net/minecraft/world/level/storage/loot/LootContext$EntityTarget
	m	(Ljava/lang/String;ILjava/lang/String;Leaw;)V	<init>	<init>
		p	3		type
		p	4		parameter
	m	()Leaw;	a	getParam
	m	(Ljava/lang/String;)Ldyr$c;	a	getByName
		p	0		type
	m	()[Ldyr$c;	b	$values
	f	Ldyr$c;	a	THIS
	f	Ldyr$c;	b	KILLER
	f	Ldyr$c;	c	DIRECT_KILLER
	f	Ldyr$c;	d	KILLER_PLAYER
	f	Ljava/lang/String;	e	name
	f	Leaw;	f	param
	f	[Ldyr$c;	g	$VALUES
c	dyr$c$a	net/minecraft/world/level/storage/loot/LootContext$EntityTarget$Serializer
	m	(Lcom/google/gson/stream/JsonReader;)Ldyr$c;	a	read
	m	(Lcom/google/gson/stream/JsonWriter;Ldyr$c;)V	a	write
c	dys	net/minecraft/world/level/storage/loot/LootContextUser
	m	(Ldyz;)V	a	validate
		p	1		reporter
	m	()Ljava/util/Set;	b	getReferencedContextParams
c	dyt	net/minecraft/world/level/storage/loot/LootPool
	m	([Ldzj;[Lebl;[Leac;Lecg;Lecg;)V	<init>	<init>
		p	1		entries
		p	2		conditions
		p	3		functions
		p	4		rolls
		p	5		bonusRolls
	m	()Ldyt$a;	a	lootPool
	m	(Ldyr;Ljava/util/List;Lorg/apache/commons/lang3/mutable/MutableInt;Ldzi;)V	a	lambda$addRandomItem$0
		p	3		choice
	m	(Ldyz;)V	a	validate
		p	1		reporter
	m	(Ljava/util/function/Consumer;Ldyr;)V	a	addRandomItems
		p	1		lootConsumer
		p	2		context
	m	(Ljava/util/function/Consumer;Ldyr;)V	b	addRandomItem
		p	1		lootConsumer
		p	2		context
	f	[Ldzj;	a	entries
	f	[Lebl;	b	conditions
	f	Ljava/util/function/Predicate;	c	compositeCondition
	f	[Leac;	d	functions
	f	Ljava/util/function/BiFunction;	e	compositeFunction
	f	Lecg;	f	rolls
	f	Lecg;	g	bonusRolls
c	dyt$a	net/minecraft/world/level/storage/loot/LootPool$Builder
	m	()Ldyt$a;	a	unwrap
	m	(Ldzj$a;)Ldyt$a;	a	add
		p	1		entry
	m	(Leac$a;)Ldyt$a;	a	apply
	m	(Lebl$a;)Ldyt$a;	a	when
	m	(Lecg;)Ldyt$a;	a	setRolls
		p	1		rolls
	m	()Ldyt;	b	build
	m	(Leac$a;)Ldzz;	b	apply
		p	1		function
	m	(Lebl$a;)Lebe;	b	when
		p	1		condition
	m	(Lecg;)Ldyt$a;	b	setBonusRolls
		p	1		bonusRolls
	m	()Ldzz;	c	unwrap
	m	()Lebe;	d	unwrap
	f	Ljava/util/List;	a	entries
	f	Ljava/util/List;	b	conditions
	f	Ljava/util/List;	c	functions
	f	Lecg;	d	rolls
	f	Lecg;	e	bonusRolls
c	dyt$b	net/minecraft/world/level/storage/loot/LootPool$Serializer
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ldyt;	a	deserialize
	m	(Ldyt;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	a	serialize
c	dyu	net/minecraft/world/level/storage/loot/LootTable
	m	(Leax;[Ldyt;[Leac;)V	<init>	<init>
		p	1		type
		p	2		pools
		p	3		functions
	m	()Leax;	a	getParamSet
	m	(Lbdr;Lapo;)Ljava/util/List;	a	getAvailableSlots
		p	1		inventory
		p	2		random
	m	(Lbdr;Ldyr;)V	a	fill
		p	1		inventory
		p	2		context
	m	(Ldyr;)Lit/unimi/dsi/fastutil/objects/ObjectArrayList;	a	getRandomItems
		p	1		context
	m	(Ldyr;Ljava/util/function/Consumer;)Ljava/util/function/Consumer;	a	createStackSplitter
		p	0		context
		p	1		consumer
	m	(Ldyr;Ljava/util/function/Consumer;Lcfv;)V	a	lambda$createStackSplitter$0
		p	2		stack
	m	(Ldyz;)V	a	validate
		p	1		reporter
	m	(Lit/unimi/dsi/fastutil/objects/ObjectArrayList;ILapo;)V	a	shuffleAndSplitItems
		p	1		drops
		p	2		freeSlots
		p	3		random
	m	()Ldyu$a;	b	lootTable
	m	(Ldyr;Ljava/util/function/Consumer;)V	b	getRandomItemsRaw
		p	1		context
		p	2		lootConsumer
	m	(Ldyr;Ljava/util/function/Consumer;)V	c	getRandomItems
		p	1		context
		p	2		lootConsumer
	f	Ldyu;	a	EMPTY
	f	Leax;	b	DEFAULT_PARAM_SET
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	Leax;	d	paramSet
	f	[Ldyt;	e	pools
	f	[Leac;	f	functions
	f	Ljava/util/function/BiFunction;	g	compositeFunction
c	dyu$a	net/minecraft/world/level/storage/loot/LootTable$Builder
	m	()Ldyu$a;	a	unwrap
	m	(Ldyt$a;)Ldyu$a;	a	withPool
		p	1		poolBuilder
	m	(Leac$a;)Ldyu$a;	a	apply
	m	(Leax;)Ldyu$a;	a	setParamSet
		p	1		context
	m	()Ldyu;	b	build
	m	(Leac$a;)Ldzz;	b	apply
		p	1		function
	m	()Ldzz;	c	unwrap
	f	Ljava/util/List;	a	pools
	f	Ljava/util/List;	b	functions
	f	Leax;	c	paramSet
c	dyu$b	net/minecraft/world/level/storage/loot/LootTable$Serializer
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ldyu;	a	deserialize
	m	(Ldyu;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	a	serialize
c	dyv	net/minecraft/world/level/storage/loot/LootTables
	m	(Ldyw;)V	<init>	<init>
		p	1		conditionManager
	m	()Ljava/util/Set;	a	getIds
	m	(Ladd;)Ldyu;	a	get
		p	1		id
	m	(Lcom/google/common/collect/ImmutableMap$Builder;Ladd;Lcom/google/gson/JsonElement;)V	a	lambda$apply$0
		p	1		id
		p	2		json
	m	(Ldyu;)Lcom/google/gson/JsonElement;	a	serialize
		p	0		table
	m	(Ldyz;Ladd;Ldyu;)V	a	validate
		p	0		reporter
		p	1		id
		p	2		table
	m	(Ljava/lang/Object;Lalh;Lbao;)V	a	apply
		p	1		prepared
		p	2		manager
		p	3		profiler
	m	(Ljava/lang/String;Ljava/lang/String;)V	a	lambda$apply$2
		p	0		key
		p	1		value
	m	(Ljava/util/Map;Lalh;Lbao;)V	a	apply
		p	1		prepared
		p	2		manager
		p	3		profiler
	m	(Ldyz;Ladd;Ldyu;)V	b	lambda$apply$1
		p	1		id
		p	2		lootTable
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lcom/google/gson/Gson;	b	GSON
	f	Ljava/util/Map;	c	tables
	f	Ldyw;	d	predicateManager
c	dyw	net/minecraft/world/level/storage/loot/PredicateManager
	m	()Ljava/util/Set;	a	getKeys
	m	(Ladd;)Lebl;	a	get
		p	1		id
	m	(Lcom/google/common/collect/ImmutableMap$Builder;Ladd;Lcom/google/gson/JsonElement;)V	a	lambda$apply$0
		p	1		id
		p	2		json
	m	(Ldyz;Ladd;Lebl;)V	a	lambda$apply$2
		p	1		id
		p	2		condition
	m	(Ljava/lang/Object;Lalh;Lbao;)V	a	apply
		p	1		prepared
		p	2		manager
		p	3		profiler
	m	(Ljava/lang/String;Ljava/lang/String;)V	a	lambda$apply$3
		p	0		name
		p	1		message
	m	(Ljava/util/Map;Lalh;Lbao;)V	a	apply
		p	1		prepared
		p	2		manager
		p	3		profiler
	m	(Ladd;)Ldyu;	b	lambda$apply$1
		p	0		id
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lcom/google/gson/Gson;	b	GSON
	f	Ljava/util/Map;	c	conditions
c	dyw$a	net/minecraft/world/level/storage/loot/PredicateManager$CompositePredicate
	m	([Lebl;)V	<init>	<init>
		p	1		terms
	m	()Lebm;	a	getType
	m	(Ldyr;)Z	a	test
	m	(Ldyz;)V	a	validate
		p	1		reporter
	f	[Lebl;	a	terms
	f	Ljava/util/function/Predicate;	b	composedPredicate
c	dyx	net/minecraft/world/level/storage/loot/Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	deserialize
		p	1		json
		p	2		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
c	dyy	net/minecraft/world/level/storage/loot/SerializerType
	m	(Ldyx;)V	<init>	<init>
		p	1		jsonSerializer
	m	()Ldyx;	a	getSerializer
	f	Ldyx;	a	serializer
c	dyz	net/minecraft/world/level/storage/loot/ValidationContext
	m	(Lcom/google/common/collect/Multimap;Ljava/util/function/Supplier;Leax;Ljava/util/function/Function;Ljava/util/Set;Ljava/util/function/Function;Ljava/util/Set;)V	<init>	<init>
		p	1		messages
		p	2		nameFactory
		p	3		contextType
		p	4		conditionGetter
		p	5		conditions
		p	6		tableGetter
		p	7		tables
	m	(Leax;Ljava/util/function/Function;Ljava/util/function/Function;)V	<init>	<init>
		p	1		contextType
		p	2		conditionGetter
		p	3		tableFactory
	m	()Lcom/google/common/collect/Multimap;	a	getProblems
	m	(Ladd;)Z	a	hasVisitedTable
		p	1		id
	m	(Ldys;)V	a	validateUser
		p	1		contextAware
	m	(Leax;)Ldyz;	a	setParams
		p	1		contextType
	m	(Ljava/lang/String;)V	a	reportProblem
		p	1		message
	m	(Ljava/lang/String;Ladd;)Ldyz;	a	enterTable
		p	1		name
		p	2		id
	m	()Ljava/lang/String;	b	getContext
	m	(Ladd;)Z	b	hasVisitedCondition
		p	1		id
	m	(Ljava/lang/String;)Ldyz;	b	forChild
		p	1		name
	m	(Ljava/lang/String;Ladd;)Ldyz;	b	enterCondition
		p	1		name
		p	2		id
	m	()Ljava/lang/String;	c	lambda$new$0
	m	(Ladd;)Ldyu;	c	resolveLootTable
		p	1		id
	m	(Ljava/lang/String;)Ljava/lang/String;	c	lambda$enterCondition$3
	m	(Ladd;)Lebl;	d	resolveCondition
		p	1		id
	m	(Ljava/lang/String;)Ljava/lang/String;	d	lambda$enterTable$2
	m	(Ljava/lang/String;)Ljava/lang/String;	e	lambda$forChild$1
	f	Lcom/google/common/collect/Multimap;	a	problems
	f	Ljava/util/function/Supplier;	b	context
	f	Leax;	c	params
	f	Ljava/util/function/Function;	d	conditionResolver
	f	Ljava/util/Set;	e	visitedConditions
	f	Ljava/util/function/Function;	f	tableResolver
	f	Ljava/util/Set;	g	visitedTables
	f	Ljava/lang/String;	h	contextCache
c	dza	net/minecraft/world/level/storage/loot/entries/AlternativesEntry
	m	([Ldzj;[Lebl;)V	<init>	<init>
		p	1		children
		p	2		conditions
	m	()Ldzk;	a	getType
	m	(I)[Ldzj$a;	a	lambda$alternatives$1
	m	(Ldyz;)V	a	validate
		p	1		reporter
	m	(Ljava/util/Collection;Ljava/util/function/Function;)Ldza$a;	a	alternatives
		p	0		children
		p	1		toBuilderFunction
	m	([Ldzb;)Ldzb;	a	compose
		p	1		children
	m	([Ldzb;Ldyr;Ljava/util/function/Consumer;)Z	a	lambda$compose$0
		p	1		context
		p	2		lootChoiceExpander
	m	([Ldzj$a;)Ldza$a;	a	alternatives
		p	0		children
c	dza$a	net/minecraft/world/level/storage/loot/entries/AlternativesEntry$Builder
	m	([Ldzj$a;)V	<init>	<init>
		p	1		children
	m	()Ldza$a;	a	getThis
	m	(Ldzj$a;)Ldza$a;	a	otherwise
		p	1		builder
	m	()Ldzj$a;	av_	getThis
	m	()Ldzj;	b	build
	f	Ljava/util/List;	a	entries
c	dzb	net/minecraft/world/level/storage/loot/entries/ComposableEntryContainer
	m	(Ldyr;Ljava/util/function/Consumer;)Z	a	lambda$static$1
		p	0		context
		p	1		choiceConsumer
	m	(Ldzb;Ldyr;Ljava/util/function/Consumer;)Z	a	lambda$or$3
		p	2		context
		p	3		lootChoiceExpander
	m	(Ldzb;)Ldzb;	and	and
		p	1		other
	m	(Ldyr;Ljava/util/function/Consumer;)Z	b	lambda$static$0
		p	0		context
		p	1		choiceConsumer
	m	(Ldzb;Ldyr;Ljava/util/function/Consumer;)Z	b	lambda$and$2
		p	2		context
		p	3		lootChoiceExpander
	m	(Ldyr;Ljava/util/function/Consumer;)Z	expand	expand
		p	1		context
		p	2		choiceConsumer
	m	(Ldzb;)Ldzb;	or	or
		p	1		other
	f	Ldzb;	a	ALWAYS_FALSE
	f	Ldzb;	b	ALWAYS_TRUE
c	dzc	net/minecraft/world/level/storage/loot/entries/CompositeEntryBase
	m	([Ldzj;[Lebl;)V	<init>	<init>
		p	1		children
		p	2		conditions
	m	(Ldyz;)V	a	validate
		p	1		reporter
	m	(Ldzc$a;)Ldzj$b;	a	createSerializer
		p	0		factory
	m	([Ldzb;)Ldzb;	a	compose
		p	1		children
	m	(Ldyr;Ljava/util/function/Consumer;)Z	expand	expand
		p	1		context
		p	2		choiceConsumer
	f	[Ldzj;	c	children
	f	Ldzb;	e	composedChildren
c	dzc$1	net/minecraft/world/level/storage/loot/entries/CompositeEntryBase$1
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lebl;)Ldzc;	a	deserializeCustom
	m	(Lcom/google/gson/JsonObject;Ldzc;Lcom/google/gson/JsonSerializationContext;)V	a	serializeCustom
		p	1		json
		p	2		entry
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ldzj;Lcom/google/gson/JsonSerializationContext;)V	a	serializeCustom
		p	1		json
		p	2		entry
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lebl;)Ldzj;	b	deserializeCustom
		p	1		json
		p	2		context
		p	3		conditions
	f	Ldzc$a;	a	val$constructor
c	dzc$a	net/minecraft/world/level/storage/loot/entries/CompositeEntryBase$CompositeEntryConstructor
	m	([Ldzj;[Lebl;)Ldzc;	create	create
		p	1		children
		p	2		conditions
c	dzd	net/minecraft/world/level/storage/loot/entries/DynamicLoot
	m	(Ladd;II[Lebl;[Leac;)V	<init>	<init>
		p	1		name
		p	2		weight
		p	3		quality
		p	4		conditions
		p	5		functions
	m	()Ldzk;	a	getType
	m	(Ladd;)Ldzl$a;	a	dynamicEntry
		p	0		name
	m	(Ladd;II[Lebl;[Leac;)Ldzl;	a	lambda$dynamicEntry$0
		p	1		weight
		p	2		quality
		p	3		conditions
		p	4		functions
	m	(Ljava/util/function/Consumer;Ldyr;)V	a	createItemStack
		p	1		lootConsumer
		p	2		context
	f	Ladd;	i	name
c	dzd$a	net/minecraft/world/level/storage/loot/entries/DynamicLoot$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lebl;[Leac;)Ldzd;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Ldzd;Lcom/google/gson/JsonSerializationContext;)V	a	serializeCustom
		p	1		json
		p	2		entry
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ldzj;Lcom/google/gson/JsonSerializationContext;)V	a	serializeCustom
		p	1		json
		p	2		entry
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ldzl;Lcom/google/gson/JsonSerializationContext;)V	a	serializeCustom
		p	1		json
		p	2		entry
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lebl;[Leac;)Ldzl;	b	deserialize
		p	1		entryJson
		p	2		context
		p	3		weight
		p	4		quality
		p	5		conditions
		p	6		functions
c	dze	net/minecraft/world/level/storage/loot/entries/EmptyLootItem
	m	(II[Lebl;[Leac;)V	<init>	<init>
		p	1		weight
		p	2		quality
		p	3		conditions
		p	4		functions
	m	()Ldzk;	a	getType
	m	(Ljava/util/function/Consumer;Ldyr;)V	a	createItemStack
		p	1		lootConsumer
		p	2		context
	m	()Ldzl$a;	b	emptyItem
c	dze$a	net/minecraft/world/level/storage/loot/entries/EmptyLootItem$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lebl;[Leac;)Ldze;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lebl;[Leac;)Ldzl;	b	deserialize
		p	1		entryJson
		p	2		context
		p	3		weight
		p	4		quality
		p	5		conditions
		p	6		functions
c	dzf	net/minecraft/world/level/storage/loot/entries/EntryGroup
	m	([Ldzj;[Lebl;)V	<init>	<init>
		p	1		children
		p	2		conditions
	m	()Ldzk;	a	getType
	m	(Ldzb;Ldzb;Ldyr;Ljava/util/function/Consumer;)Z	a	lambda$compose$0
		p	2		context
		p	3		choiceConsumer
	m	([Ldzb;)Ldzb;	a	compose
		p	1		children
	m	([Ldzb;Ldyr;Ljava/util/function/Consumer;)Z	a	lambda$compose$1
		p	1		context
		p	2		lootChoiceExpander
	m	([Ldzj$a;)Ldzf$a;	a	list
		p	0		entries
c	dzf$a	net/minecraft/world/level/storage/loot/entries/EntryGroup$Builder
	m	([Ldzj$a;)V	<init>	<init>
		p	1		entries
	m	()Ldzf$a;	a	getThis
	m	()Ldzj$a;	av_	getThis
	m	()Ldzj;	b	build
	m	(Ldzj$a;)Ldzf$a;	b	append
		p	1		entry
	f	Ljava/util/List;	a	entries
c	dzg	net/minecraft/world/level/storage/loot/entries/LootItem
	m	(Lcfq;II[Lebl;[Leac;)V	<init>	<init>
		p	1		item
		p	2		weight
		p	3		quality
		p	4		conditions
		p	5		functions
	m	()Ldzk;	a	getType
	m	(Lcmh;)Ldzl$a;	a	lootTableItem
		p	0		drop
	m	(Lcmh;II[Lebl;[Leac;)Ldzl;	a	lambda$lootTableItem$0
		p	1		weight
		p	2		quality
		p	3		conditions
		p	4		functions
	m	(Ljava/util/function/Consumer;Ldyr;)V	a	createItemStack
		p	1		lootConsumer
		p	2		context
	f	Lcfq;	i	item
c	dzg$a	net/minecraft/world/level/storage/loot/entries/LootItem$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lebl;[Leac;)Ldzg;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Ldzg;Lcom/google/gson/JsonSerializationContext;)V	a	serializeCustom
		p	1		json
		p	2		entry
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ldzj;Lcom/google/gson/JsonSerializationContext;)V	a	serializeCustom
		p	1		json
		p	2		entry
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ldzl;Lcom/google/gson/JsonSerializationContext;)V	a	serializeCustom
		p	1		json
		p	2		entry
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lebl;[Leac;)Ldzl;	b	deserialize
		p	1		entryJson
		p	2		context
		p	3		weight
		p	4		quality
		p	5		conditions
		p	6		functions
c	dzh	net/minecraft/world/level/storage/loot/entries/LootPoolEntries
	m	()Ljava/lang/Object;	a	createGsonAdapter
	m	(Ljava/lang/String;Ldyx;)Ldzk;	a	register
		p	0		id
		p	1		jsonSerializer
	f	Ldzk;	a	EMPTY
	f	Ldzk;	b	ITEM
	f	Ldzk;	c	REFERENCE
	f	Ldzk;	d	DYNAMIC
	f	Ldzk;	e	TAG
	f	Ldzk;	f	ALTERNATIVES
	f	Ldzk;	g	SEQUENCE
	f	Ldzk;	h	GROUP
c	dzi	net/minecraft/world/level/storage/loot/entries/LootPoolEntry
	m	(F)I	a	getWeight
		p	1		luck
	m	(Ljava/util/function/Consumer;Ldyr;)V	a	createItemStack
		p	1		lootConsumer
		p	2		context
c	dzj	net/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer
	m	([Lebl;)V	<init>	<init>
		p	1		conditions
	m	()Ldzk;	a	getType
	m	(Ldyr;)Z	a	canRun
		p	1		context
	m	(Ldyz;)V	a	validate
		p	1		reporter
	f	Ljava/util/function/Predicate;	c	compositeCondition
	f	[Lebl;	d	conditions
c	dzj$a	net/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder
	m	(Ldzj$a;)Ldza$a;	a	otherwise
		p	1		builder
	m	(Lebl$a;)Ldzj$a;	a	when
	m	()Ldzj$a;	av_	getThis
	m	()Ldzj;	b	build
	m	(Ldzj$a;)Ldzf$a;	b	append
		p	1		entry
	m	(Lebl$a;)Lebe;	b	when
		p	1		condition
	m	(Ldzj$a;)Ldzn$a;	c	then
		p	1		entry
	m	()Lebe;	d	unwrap
	m	()Ldzj$a;	e	unwrap
	m	()[Lebl;	f	getConditions
	f	Ljava/util/List;	a	conditions
c	dzj$b	net/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	deserialize
		p	1		json
		p	2		context
	m	(Lcom/google/gson/JsonObject;Ldzj;Lcom/google/gson/JsonSerializationContext;)V	a	serializeCustom
		p	1		json
		p	2		entry
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ldzj;	b	deserialize
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lebl;)Ldzj;	b	deserializeCustom
		p	1		json
		p	2		context
		p	3		conditions
	m	(Lcom/google/gson/JsonObject;Ldzj;Lcom/google/gson/JsonSerializationContext;)V	b	serialize
c	dzk	net/minecraft/world/level/storage/loot/entries/LootPoolEntryType
	m	(Ldyx;)V	<init>	<init>
		p	1		jsonSerializer
c	dzl	net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer
	m	(II[Lebl;[Leac;)V	<init>	<init>
		p	1		weight
		p	2		quality
		p	3		conditions
		p	4		functions
	m	(Ldyz;)V	a	validate
		p	1		reporter
	m	(Ldzl$d;)Ldzl$a;	a	simpleBuilder
		p	0		factory
	m	(Ljava/util/function/Consumer;Ldyr;)V	a	createItemStack
		p	1		lootConsumer
		p	2		context
	m	(Ldyr;Ljava/util/function/Consumer;)Z	expand	expand
		p	1		context
		p	2		choiceConsumer
	f	I	c	DEFAULT_WEIGHT
	f	I	e	DEFAULT_QUALITY
	f	I	f	weight
	f	I	g	quality
	f	[Leac;	h	functions
	f	Ljava/util/function/BiFunction;	i	compositeFunction
	f	Ldzi;	j	entry
c	dzl$1	net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$1
	m	(Ljava/util/function/Consumer;Ldyr;)V	a	createItemStack
		p	1		lootConsumer
		p	2		context
	f	Ldzl;	a	this$0
c	dzl$a	net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Builder
	m	()[Leac;	a	getFunctions
	m	(I)Ldzl$a;	a	setWeight
		p	1		weight
	m	(Leac$a;)Ldzl$a;	a	apply
	m	(I)Ldzl$a;	b	setQuality
		p	1		quality
	m	(Leac$a;)Ldzz;	b	apply
		p	1		function
	m	()Ldzz;	c	unwrap
	f	I	a	weight
	f	I	b	quality
	f	Ljava/util/List;	c	functions
c	dzl$b	net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$DummyBuilder
	m	(Ldzl$d;)V	<init>	<init>
		p	1		factory
	m	()Ldzj$a;	av_	getThis
	m	()Ldzj;	b	build
	m	()Ldzl$b;	g	getThis
	f	Ldzl$d;	c	constructor
c	dzl$c	net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$EntryBase
	m	(F)I	a	getWeight
		p	1		luck
	f	Ldzl;	b	this$0
c	dzl$d	net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$EntryConstructor
	m	(II[Lebl;[Leac;)Ldzl;	build	build
		p	1		weight
		p	2		quality
		p	3		conditions
		p	4		functions
c	dzl$e	net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lebl;)Ldzl;	a	deserializeCustom
	m	(Lcom/google/gson/JsonObject;Ldzj;Lcom/google/gson/JsonSerializationContext;)V	a	serializeCustom
		p	1		json
		p	2		entry
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ldzl;Lcom/google/gson/JsonSerializationContext;)V	a	serializeCustom
		p	1		json
		p	2		entry
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lebl;[Leac;)Ldzl;	b	deserialize
		p	1		entryJson
		p	2		context
		p	3		weight
		p	4		quality
		p	5		conditions
		p	6		functions
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lebl;)Ldzj;	b	deserializeCustom
		p	1		json
		p	2		context
		p	3		conditions
c	dzm	net/minecraft/world/level/storage/loot/entries/LootTableReference
	m	(Ladd;II[Lebl;[Leac;)V	<init>	<init>
		p	1		id
		p	2		weight
		p	3		quality
		p	4		conditions
		p	5		functions
	m	()Ldzk;	a	getType
	m	(Ladd;)Ldzl$a;	a	lootTableReference
		p	0		id
	m	(Ladd;II[Lebl;[Leac;)Ldzl;	a	lambda$lootTableReference$0
		p	1		weight
		p	2		quality
		p	3		conditions
		p	4		functions
	m	(Ldyz;)V	a	validate
		p	1		reporter
	m	(Ljava/util/function/Consumer;Ldyr;)V	a	createItemStack
		p	1		lootConsumer
		p	2		context
	f	Ladd;	i	name
c	dzm$a	net/minecraft/world/level/storage/loot/entries/LootTableReference$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lebl;[Leac;)Ldzm;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Ldzj;Lcom/google/gson/JsonSerializationContext;)V	a	serializeCustom
		p	1		json
		p	2		entry
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ldzl;Lcom/google/gson/JsonSerializationContext;)V	a	serializeCustom
		p	1		json
		p	2		entry
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ldzm;Lcom/google/gson/JsonSerializationContext;)V	a	serializeCustom
		p	1		json
		p	2		entry
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lebl;[Leac;)Ldzl;	b	deserialize
		p	1		entryJson
		p	2		context
		p	3		weight
		p	4		quality
		p	5		conditions
		p	6		functions
c	dzn	net/minecraft/world/level/storage/loot/entries/SequentialEntry
	m	([Ldzj;[Lebl;)V	<init>	<init>
		p	1		children
		p	2		conditions
	m	()Ldzk;	a	getType
	m	([Ldzb;)Ldzb;	a	compose
		p	1		children
	m	([Ldzb;Ldyr;Ljava/util/function/Consumer;)Z	a	lambda$compose$0
		p	1		context
		p	2		lootChoiceExpander
	m	([Ldzj$a;)Ldzn$a;	a	sequential
		p	0		entries
c	dzn$a	net/minecraft/world/level/storage/loot/entries/SequentialEntry$Builder
	m	([Ldzj$a;)V	<init>	<init>
		p	1		entries
	m	()Ldzn$a;	a	getThis
	m	()Ldzj$a;	av_	getThis
	m	()Ldzj;	b	build
	m	(Ldzj$a;)Ldzn$a;	c	then
		p	1		entry
	f	Ljava/util/List;	a	entries
c	dzo	net/minecraft/world/level/storage/loot/entries/TagEntry
	m	(Lanv;ZII[Lebl;[Leac;)V	<init>	<init>
		p	1		name
		p	2		expand
		p	3		weight
		p	4		quality
		p	5		conditions
		p	6		functions
	m	()Ldzk;	a	getType
	m	(Lanv;)Ldzl$a;	a	tagContents
		p	0		name
	m	(Lanv;II[Lebl;[Leac;)Ldzl;	a	lambda$expandTag$2
		p	1		weight
		p	2		quality
		p	3		conditions
		p	4		functions
	m	(Ldyr;Ljava/util/function/Consumer;)Z	a	expandTag
		p	1		context
		p	2		lootChoiceExpander
	m	(Ljava/util/function/Consumer;Ldyr;)V	a	createItemStack
		p	1		lootConsumer
		p	2		context
	m	(Ljava/util/function/Consumer;Lhd;)V	a	lambda$createItemStack$0
		p	1		entry
	m	(Lanv;)Ldzl$a;	b	expandTag
		p	0		name
	m	(Lanv;II[Lebl;[Leac;)Ldzl;	b	lambda$tagContents$1
		p	1		weight
		p	2		quality
		p	3		conditions
		p	4		functions
	m	(Ldyr;Ljava/util/function/Consumer;)Z	expand	expand
		p	1		context
		p	2		choiceConsumer
	f	Lanv;	i	tag
	f	Z	j	expand
c	dzo$1	net/minecraft/world/level/storage/loot/entries/TagEntry$1
	m	(Ljava/util/function/Consumer;Ldyr;)V	a	createItemStack
		p	1		lootConsumer
		p	2		context
	f	Lhd;	a	val$item
	f	Ldzo;	c	this$0
c	dzo$a	net/minecraft/world/level/storage/loot/entries/TagEntry$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lebl;[Leac;)Ldzo;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Ldzj;Lcom/google/gson/JsonSerializationContext;)V	a	serializeCustom
		p	1		json
		p	2		entry
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ldzl;Lcom/google/gson/JsonSerializationContext;)V	a	serializeCustom
		p	1		json
		p	2		entry
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ldzo;Lcom/google/gson/JsonSerializationContext;)V	a	serializeCustom
		p	1		json
		p	2		entry
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lebl;[Leac;)Ldzl;	b	deserialize
		p	1		entryJson
		p	2		context
		p	3		weight
		p	4		quality
		p	5		conditions
		p	6		functions
c	dzp	net/minecraft/world/level/storage/loot/entries/package-info
c	dzq	net/minecraft/world/level/storage/loot/functions/ApplyBonusCount
	m	([Lebl;Lckc;Ldzq$b;)V	<init>	<init>
		p	1		conditions
		p	2		enchantment
		p	3		formula
	m	()Lead;	a	getType
	m	(Lcfv;Ldyr;)Lcfv;	a	run
		p	1		stack
		p	2		context
	m	(Lckc;)Leab$a;	a	addOreBonusCount
		p	0		enchantment
	m	(Lckc;FI)Leab$a;	a	addBonusBinomialDistributionCount
		p	0		enchantment
		p	1		probability
		p	2		extra
	m	(Lckc;I)Leab$a;	a	addUniformBonusCount
		p	0		enchantment
		p	1		bonusMultiplier
	m	(Lckc;IF[Lebl;)Leac;	a	lambda$addBonusBinomialDistributionCount$0
		p	3		conditions
	m	(Lckc;I[Lebl;)Leac;	a	lambda$addUniformBonusCount$3
		p	2		conditions
	m	(Lckc;[Lebl;)Leac;	a	lambda$addUniformBonusCount$2
		p	1		conditions
	m	()Ljava/util/Set;	b	getReferencedContextParams
	m	(Lckc;)Leab$a;	b	addUniformBonusCount
		p	0		enchantment
	m	(Lckc;[Lebl;)Leac;	b	lambda$addOreBonusCount$1
		p	1		conditions
	f	Ljava/util/Map;	a	FORMULAS
	f	Lckc;	b	enchantment
	f	Ldzq$b;	c	formula
c	dzq$a	net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$BinomialWithBonusCount
	m	(IF)V	<init>	<init>
		p	1		extra
		p	2		probability
	m	()Ladd;	a	getType
	m	(Lapo;II)I	a	calculateNewCount
		p	1		random
		p	2		initialCount
		p	3		enchantmentLevel
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ldzq$b;	a	deserialize
		p	0		json
		p	1		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonSerializationContext;)V	a	serializeParams
		p	1		json
		p	2		context
	f	Ladd;	a	TYPE
	f	I	b	extraRounds
	f	F	c	probability
c	dzq$b	net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$Formula
	m	()Ladd;	a	getType
	m	(Lapo;II)I	a	calculateNewCount
		p	1		random
		p	2		initialCount
		p	3		enchantmentLevel
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonSerializationContext;)V	a	serializeParams
		p	1		json
		p	2		context
c	dzq$c	net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$FormulaDeserializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ldzq$b;	deserialize	deserialize
		p	1		functionJson
		p	2		context
c	dzq$d	net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$OreDrops
	m	()Ladd;	a	getType
	m	(Lapo;II)I	a	calculateNewCount
		p	1		random
		p	2		initialCount
		p	3		enchantmentLevel
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ldzq$b;	a	deserialize
		p	0		json
		p	1		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonSerializationContext;)V	a	serializeParams
		p	1		json
		p	2		context
	f	Ladd;	a	TYPE
c	dzq$e	net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$Serializer
	m	(Ladd;)Lcom/google/gson/JsonParseException;	a	lambda$deserialize$0
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lebl;)Ldzq;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Ldzq;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Leab;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lebl;)Leab;	b	deserialize
		p	1		json
		p	2		context
		p	3		conditions
c	dzq$f	net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$UniformBonusCount
	m	(I)V	<init>	<init>
		p	1		bonusMultiplier
	m	()Ladd;	a	getType
	m	(Lapo;II)I	a	calculateNewCount
		p	1		random
		p	2		initialCount
		p	3		enchantmentLevel
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ldzq$b;	a	deserialize
		p	0		json
		p	1		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonSerializationContext;)V	a	serializeParams
		p	1		json
		p	2		context
	f	Ladd;	a	TYPE
	f	I	b	bonusMultiplier
c	dzr	net/minecraft/world/level/storage/loot/functions/ApplyExplosionDecay
	m	([Lebl;)V	<init>	<init>
		p	1		conditions
	m	()Lead;	a	getType
	m	(Lcfv;Ldyr;)Lcfv;	a	run
		p	1		stack
		p	2		context
	m	()Leab$a;	c	explosionDecay
c	dzr$a	net/minecraft/world/level/storage/loot/functions/ApplyExplosionDecay$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lebl;)Ldzr;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lebl;)Leab;	b	deserialize
		p	1		json
		p	2		context
		p	3		conditions
c	dzs	net/minecraft/world/level/storage/loot/functions/CopyBlockState
	m	([Lebl;Lcpi;Ljava/util/Set;)V	<init>	<init>
		p	1		conditions
		p	2		block
		p	3		properties
	m	()Lead;	a	getType
	m	(Lcfv;Ldyr;)Lcfv;	a	run
		p	1		stack
		p	2		context
	m	(Lcpi;)Ldzs$a;	a	copyState
		p	0		block
	m	(Ldbq;Ldcu;)Ljava/lang/String;	a	serialize
		p	0		state
		p	1		property
	m	(Lre;Ldbq;Ldcu;)V	a	lambda$run$0
		p	2		property
	m	()Ljava/util/Set;	b	getReferencedContextParams
	f	Lcpi;	a	block
	f	Ljava/util/Set;	b	properties
c	dzs$a	net/minecraft/world/level/storage/loot/functions/CopyBlockState$Builder
	m	(Lcpi;)V	<init>	<init>
		p	1		block
	m	()Ldzs$a;	a	getThis
	m	(Ldcu;)Ldzs$a;	a	copy
		p	1		property
	m	()Leac;	b	build
	m	()Leab$a;	c	getThis
	f	Lcpi;	a	block
	f	Ljava/util/Set;	b	properties
c	dzs$b	net/minecraft/world/level/storage/loot/functions/CopyBlockState$Serializer
	m	(Ladd;)Ljava/lang/IllegalArgumentException;	a	lambda$deserialize$1
	m	(Lcom/google/gson/JsonArray;Ldcu;)V	a	lambda$serialize$0
		p	1		property
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lebl;)Ldzs;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Ldzs;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Leab;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Ljava/util/Set;Ldbr;Lcom/google/gson/JsonElement;)V	a	lambda$deserialize$2
		p	2		property
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lebl;)Leab;	b	deserialize
		p	1		json
		p	2		context
		p	3		conditions
c	dzt	net/minecraft/world/level/storage/loot/functions/CopyNameFunction
	m	([Lebl;Ldzt$a;)V	<init>	<init>
		p	1		conditions
		p	2		source
	m	()Lead;	a	getType
	m	(Lcfv;Ldyr;)Lcfv;	a	run
		p	1		stack
		p	2		context
	m	(Ldzt$a;)Leab$a;	a	copyName
		p	0		source
	m	(Ldzt$a;[Lebl;)Leac;	a	lambda$copyName$0
		p	1		conditions
	m	()Ljava/util/Set;	b	getReferencedContextParams
	f	Ldzt$a;	a	source
c	dzt$a	net/minecraft/world/level/storage/loot/functions/CopyNameFunction$NameSource
	m	(Ljava/lang/String;ILjava/lang/String;Leaw;)V	<init>	<init>
		p	3		name
		p	4		parameter
	m	()[Ldzt$a;	a	$values
	m	(Ljava/lang/String;)Ldzt$a;	a	getByName
		p	0		name
	f	Ldzt$a;	a	THIS
	f	Ldzt$a;	b	KILLER
	f	Ldzt$a;	c	KILLER_PLAYER
	f	Ldzt$a;	d	BLOCK_ENTITY
	f	Ljava/lang/String;	e	name
	f	Leaw;	f	param
	f	[Ldzt$a;	g	$VALUES
c	dzt$b	net/minecraft/world/level/storage/loot/functions/CopyNameFunction$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lebl;)Ldzt;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Ldzt;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Leab;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lebl;)Leab;	b	deserialize
		p	1		json
		p	2		context
		p	3		conditions
c	dzu	net/minecraft/world/level/storage/loot/functions/CopyNbtFunction
	m	([Lebl;Lebz;Ljava/util/List;)V	<init>	<init>
		p	1		conditions
		p	2		source
		p	3		operations
	m	()Lead;	a	getType
	m	(Lcfv;Ldyr;)Lcfv;	a	run
		p	1		stack
		p	2		context
	m	(Lcfv;Lrx;Ldzu$b;)V	a	lambda$run$0
		p	2		operation
	m	(Ldyr$c;)Ldzu$a;	a	copyData
		p	0		target
	m	(Lebz;)Ldzu$a;	a	copyData
		p	0		source
	m	(Ljava/lang/String;)Leg$g;	a	compileNbtPath
		p	0		nbtPath
	m	()Ljava/util/Set;	b	getReferencedContextParams
	f	Lebz;	a	source
	f	Ljava/util/List;	b	operations
c	dzu$a	net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$Builder
	m	(Lebz;)V	<init>	<init>
		p	1		source
	m	()Ldzu$a;	a	getThis
	m	(Ljava/lang/String;Ljava/lang/String;)Ldzu$a;	a	copy
		p	1		source
		p	2		target
	m	(Ljava/lang/String;Ljava/lang/String;Ldzu$c;)Ldzu$a;	a	copy
		p	1		source
		p	2		target
		p	3		operator
	m	()Leac;	b	build
	m	()Leab$a;	c	getThis
	f	Lebz;	a	source
	f	Ljava/util/List;	b	ops
c	dzu$b	net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$CopyOperation
	m	(Ljava/lang/String;Ljava/lang/String;Ldzu$c;)V	<init>	<init>
		p	1		sourcePath
		p	2		targetPath
		p	3		operator
	m	()Lcom/google/gson/JsonObject;	a	toJson
	m	(Lcom/google/gson/JsonObject;)Ldzu$b;	a	fromJson
		p	0		json
	m	(Ljava/util/function/Supplier;Lrx;)V	a	apply
		p	1		itemNbtGetter
		p	2		sourceEntityNbt
	f	Ljava/lang/String;	a	sourcePathText
	f	Leg$g;	b	sourcePath
	f	Ljava/lang/String;	c	targetPathText
	f	Leg$g;	d	targetPath
	f	Ldzu$c;	e	op
c	dzu$c	net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$MergeStrategy
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()[Ldzu$c;	a	$values
	m	(Ljava/lang/String;)Ldzu$c;	a	getByName
		p	0		name
	m	(Lrx;Leg$g;Ljava/util/List;)V	a	merge
		p	1		itemNbt
		p	2		targetPath
		p	3		sourceNbts
	f	Ldzu$c;	a	REPLACE
	f	Ldzu$c;	b	APPEND
	f	Ldzu$c;	c	MERGE
	f	Ljava/lang/String;	d	name
	f	[Ldzu$c;	e	$VALUES
c	dzu$c$1	net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$MergeStrategy$1
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	(Lrx;Leg$g;Ljava/util/List;)V	a	merge
		p	1		itemNbt
		p	2		targetPath
		p	3		sourceNbts
c	dzu$c$2	net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$MergeStrategy$2
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	(Ljava/util/List;Lrx;)V	a	lambda$merge$1
		p	1		foundNbt
	m	(Lrx;Leg$g;Ljava/util/List;)V	a	merge
		p	1		itemNbt
		p	2		targetPath
		p	3		sourceNbts
	m	(Lrx;Lrx;)V	a	lambda$merge$0
		p	1		sourceNbt
c	dzu$c$3	net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$MergeStrategy$3
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	(Ljava/util/List;Lrx;)V	a	lambda$merge$1
		p	1		foundNbt
	m	(Lrx;Leg$g;Ljava/util/List;)V	a	merge
		p	1		itemNbt
		p	2		targetPath
		p	3		sourceNbts
	m	(Lrx;Lrx;)V	a	lambda$merge$0
		p	1		sourceNbt
c	dzu$d	net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lebl;)Ldzu;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Ldzu;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Leab;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lebl;)Leab;	b	deserialize
		p	1		json
		p	2		context
		p	3		conditions
c	dzv	net/minecraft/world/level/storage/loot/functions/EnchantRandomlyFunction
	m	([Lebl;Ljava/util/Collection;)V	<init>	<init>
		p	1		conditions
		p	2		enchantments
	m	()Lead;	a	getType
	m	(Lcfv;Lckc;Lapo;)Lcfv;	a	enchantItem
		p	0		stack
		p	1		enchantment
		p	2		random
	m	(Lcfv;Ldyr;)Lcfv;	a	run
		p	1		stack
		p	2		context
	m	(ZLcfv;Lckc;)Z	a	lambda$run$0
		p	2		enchantment
	m	([Lebl;)Leac;	a	lambda$randomApplicableEnchantment$1
		p	0		conditions
	m	()Ldzv$a;	c	randomEnchantment
	m	()Leab$a;	d	randomApplicableEnchantment
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/List;	b	enchantments
c	dzv$a	net/minecraft/world/level/storage/loot/functions/EnchantRandomlyFunction$Builder
	m	()Ldzv$a;	a	getThis
	m	(Lckc;)Ldzv$a;	a	withEnchantment
		p	1		enchantment
	m	()Leac;	b	build
	m	()Leab$a;	c	getThis
	f	Ljava/util/Set;	a	enchantments
c	dzv$b	net/minecraft/world/level/storage/loot/functions/EnchantRandomlyFunction$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lebl;)Ldzv;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Ldzv;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Leab;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Ljava/lang/String;)Lcom/google/gson/JsonSyntaxException;	a	lambda$deserialize$0
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lebl;)Leab;	b	deserialize
		p	1		json
		p	2		context
		p	3		conditions
c	dzw	net/minecraft/world/level/storage/loot/functions/EnchantWithLevelsFunction
	m	([Lebl;Lecg;Z)V	<init>	<init>
		p	1		conditions
		p	2		range
		p	3		treasureEnchantmentsAllowed
	m	()Lead;	a	getType
	m	(Lcfv;Ldyr;)Lcfv;	a	run
		p	1		stack
		p	2		context
	m	(Lecg;)Ldzw$a;	a	enchantWithLevels
		p	0		range
	m	()Ljava/util/Set;	b	getReferencedContextParams
	f	Lecg;	a	levels
	f	Z	b	treasure
c	dzw$a	net/minecraft/world/level/storage/loot/functions/EnchantWithLevelsFunction$Builder
	m	(Lecg;)V	<init>	<init>
		p	1		range
	m	()Ldzw$a;	a	getThis
	m	()Leac;	b	build
	m	()Leab$a;	c	getThis
	m	()Ldzw$a;	e	allowTreasure
	f	Lecg;	a	levels
	f	Z	b	treasure
c	dzw$b	net/minecraft/world/level/storage/loot/functions/EnchantWithLevelsFunction$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lebl;)Ldzw;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Ldzw;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Leab;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lebl;)Leab;	b	deserialize
		p	1		json
		p	2		context
		p	3		conditions
c	dzx	net/minecraft/world/level/storage/loot/functions/ExplorationMapFunction
	m	([Lebl;Lanv;Ldxr$a;BIZ)V	<init>	<init>
		p	1		conditions
		p	2		destination
		p	3		decoration
		p	4		zoom
		p	5		searchRadius
		p	6		skipExistingChunks
	m	()Lead;	a	getType
	m	(Lcfv;Ldyr;)Lcfv;	a	run
		p	1		stack
		p	2		context
	m	()Ljava/util/Set;	b	getReferencedContextParams
	m	()Ldzx$a;	c	makeExplorationMap
	f	Lanv;	a	DEFAULT_DESTINATION
	f	Ljava/lang/String;	b	DEFAULT_DECORATION_NAME
	f	Ldxr$a;	c	DEFAULT_DECORATION
	f	B	d	DEFAULT_ZOOM
	f	I	e	DEFAULT_SEARCH_RADIUS
	f	Z	f	DEFAULT_SKIP_EXISTING
	f	Lorg/slf4j/Logger;	h	LOGGER
	f	Lanv;	i	destination
	f	Ldxr$a;	j	mapDecoration
	f	B	k	zoom
	f	I	l	searchRadius
	f	Z	m	skipKnownStructures
c	dzx$a	net/minecraft/world/level/storage/loot/functions/ExplorationMapFunction$Builder
	m	()Ldzx$a;	a	getThis
	m	(B)Ldzx$a;	a	setZoom
		p	1		zoom
	m	(I)Ldzx$a;	a	setSearchRadius
		p	1		searchRadius
	m	(Lanv;)Ldzx$a;	a	setDestination
		p	1		destination
	m	(Ldxr$a;)Ldzx$a;	a	setMapDecoration
		p	1		decoration
	m	(Z)Ldzx$a;	a	setSkipKnownStructures
		p	1		skipExistingChunks
	m	()Leac;	b	build
	m	()Leab$a;	c	getThis
	f	Lanv;	a	destination
	f	Ldxr$a;	b	mapDecoration
	f	B	c	zoom
	f	I	d	searchRadius
	f	Z	e	skipKnownStructures
c	dzx$b	net/minecraft/world/level/storage/loot/functions/ExplorationMapFunction$Serializer
	m	(Lcom/google/gson/JsonObject;)Lanv;	a	readStructure
		p	0		json
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lebl;)Ldzx;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Ldzx;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Leab;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lebl;)Leab;	b	deserialize
		p	1		json
		p	2		context
		p	3		conditions
c	dzy	net/minecraft/world/level/storage/loot/functions/FillPlayerHead
	m	([Lebl;Ldyr$c;)V	<init>	<init>
		p	1		conditions
		p	2		entity
	m	()Lead;	a	getType
	m	(Lcfv;Ldyr;)Lcfv;	a	run
		p	1		stack
		p	2		context
	m	(Ldyr$c;)Leab$a;	a	fillPlayerHead
		p	0		target
	m	(Ldyr$c;[Lebl;)Leac;	a	lambda$fillPlayerHead$0
		p	1		conditions
	m	()Ljava/util/Set;	b	getReferencedContextParams
	f	Ldyr$c;	a	entityTarget
c	dzy$a	net/minecraft/world/level/storage/loot/functions/FillPlayerHead$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lebl;)Ldzy;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Ldzy;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Leab;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lebl;)Leab;	b	deserialize
		p	1		json
		p	2		context
		p	3		conditions
c	dzz	net/minecraft/world/level/storage/loot/functions/FunctionUserBuilder
	m	(Ljava/lang/Iterable;Ljava/util/function/Function;)Ldzz;	a	apply
		p	1		functions
		p	2		toBuilderFunction
	m	([Ljava/lang/Object;Ljava/util/function/Function;)Ldzz;	a	apply
		p	1		functions
		p	2		toBuilderFunction
	m	(Leac$a;)Ldzz;	b	apply
		p	1		function
	m	()Ldzz;	c	unwrap
c	eaa	net/minecraft/world/level/storage/loot/functions/LimitCount
	m	([Lebl;Ldyp;)V	<init>	<init>
		p	1		conditions
		p	2		limit
	m	()Lead;	a	getType
	m	(Lcfv;Ldyr;)Lcfv;	a	run
		p	1		stack
		p	2		context
	m	(Ldyp;)Leab$a;	a	limitCount
		p	0		limit
	m	(Ldyp;[Lebl;)Leac;	a	lambda$limitCount$0
		p	1		conditions
	m	()Ljava/util/Set;	b	getReferencedContextParams
	f	Ldyp;	a	limiter
c	eaa$a	net/minecraft/world/level/storage/loot/functions/LimitCount$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lebl;)Leaa;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Leaa;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Leab;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lebl;)Leab;	b	deserialize
		p	1		json
		p	2		context
		p	3		conditions
c	eab	net/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction
	m	([Lebl;)V	<init>	<init>
		p	1		conditions
	m	(Lcfv;Ldyr;)Lcfv;	a	run
		p	1		stack
		p	2		context
	m	(Ldyz;)V	a	validate
		p	1		reporter
	m	(Ljava/util/function/Function;)Leab$a;	a	simpleBuilder
		p	0		joiner
	m	(Lcfv;Ldyr;)Lcfv;	b	apply
	f	Ljava/util/function/Predicate;	a	compositePredicates
	f	[Lebl;	g	predicates
c	eab$a	net/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder
	m	(Lebl$a;)Leab$a;	a	when
	m	(Lebl$a;)Lebe;	b	when
		p	1		condition
	m	()Leab$a;	c	getThis
	m	()Lebe;	d	unwrap
	m	()Leab$a;	f	unwrap
	m	()[Lebl;	g	getConditions
	f	Ljava/util/List;	a	conditions
c	eab$b	net/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$DummyBuilder
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1		joiner
	m	()Leab$b;	a	getThis
	m	()Leac;	b	build
	m	()Leab$a;	c	getThis
	f	Ljava/util/function/Function;	a	constructor
c	eab$c	net/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	deserialize
		p	1		json
		p	2		context
	m	(Lcom/google/gson/JsonObject;Leab;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Leab;	b	deserialize
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lebl;)Leab;	b	deserialize
		p	1		json
		p	2		context
		p	3		conditions
c	eac	net/minecraft/world/level/storage/loot/functions/LootItemFunction
	m	()Lead;	a	getType
	m	(Ljava/util/function/BiFunction;Ljava/util/function/Consumer;Ldyr;)Ljava/util/function/Consumer;	a	decorate
		p	0		itemApplier
		p	1		lootConsumer
		p	2		context
	m	(Ljava/util/function/Consumer;Ljava/util/function/BiFunction;Ldyr;Lcfv;)V	a	lambda$decorate$0
		p	3		stack
c	eac$a	net/minecraft/world/level/storage/loot/functions/LootItemFunction$Builder
	m	()Leac;	b	build
c	ead	net/minecraft/world/level/storage/loot/functions/LootItemFunctionType
	m	(Ldyx;)V	<init>	<init>
		p	1		jsonSerializer
c	eae	net/minecraft/world/level/storage/loot/functions/LootItemFunctions
	m	()Ljava/lang/Object;	a	createGsonAdapter
	m	(Lcfv;Ldyr;)Lcfv;	a	lambda$static$0
		p	0		stack
		p	1		context
	m	(Ljava/lang/String;Ldyx;)Lead;	a	register
		p	0		id
		p	1		jsonSerializer
	m	(Ljava/util/function/BiFunction;Ljava/util/function/BiFunction;Lcfv;Ldyr;)Lcfv;	a	lambda$compose$1
		p	2		stack
		p	3		context
	m	([Ljava/util/function/BiFunction;)Ljava/util/function/BiFunction;	a	compose
		p	0		lootFunctions
	m	([Ljava/util/function/BiFunction;Lcfv;Ldyr;)Lcfv;	a	lambda$compose$2
		p	1		stack
		p	2		context
	f	Ljava/util/function/BiFunction;	a	IDENTITY
	f	Lead;	b	SET_COUNT
	f	Lead;	c	ENCHANT_WITH_LEVELS
	f	Lead;	d	ENCHANT_RANDOMLY
	f	Lead;	e	SET_ENCHANTMENTS
	f	Lead;	f	SET_NBT
	f	Lead;	g	FURNACE_SMELT
	f	Lead;	h	LOOTING_ENCHANT
	f	Lead;	i	SET_DAMAGE
	f	Lead;	j	SET_ATTRIBUTES
	f	Lead;	k	SET_NAME
	f	Lead;	l	EXPLORATION_MAP
	f	Lead;	m	SET_STEW_EFFECT
	f	Lead;	n	COPY_NAME
	f	Lead;	o	SET_CONTENTS
	f	Lead;	p	LIMIT_COUNT
	f	Lead;	q	APPLY_BONUS
	f	Lead;	r	SET_LOOT_TABLE
	f	Lead;	s	EXPLOSION_DECAY
	f	Lead;	t	SET_LORE
	f	Lead;	u	FILL_PLAYER_HEAD
	f	Lead;	v	COPY_NBT
	f	Lead;	w	COPY_STATE
	f	Lead;	x	SET_BANNER_PATTERN
	f	Lead;	y	SET_POTION
	f	Lead;	z	SET_INSTRUMENT
c	eaf	net/minecraft/world/level/storage/loot/functions/LootingEnchantFunction
	m	([Lebl;Lecg;I)V	<init>	<init>
		p	1		conditions
		p	2		countRange
		p	3		limit
	m	()Lead;	a	getType
	m	(Lcfv;Ldyr;)Lcfv;	a	run
		p	1		stack
		p	2		context
	m	(Lecg;)Leaf$a;	a	lootingMultiplier
		p	0		countRange
	m	()Ljava/util/Set;	b	getReferencedContextParams
	m	()Z	c	hasLimit
	f	I	a	NO_LIMIT
	f	Lecg;	b	value
	f	I	c	limit
c	eaf$a	net/minecraft/world/level/storage/loot/functions/LootingEnchantFunction$Builder
	m	(Lecg;)V	<init>	<init>
		p	1		countRange
	m	()Leaf$a;	a	getThis
	m	(I)Leaf$a;	a	setLimit
		p	1		limit
	m	()Leac;	b	build
	m	()Leab$a;	c	getThis
	f	Lecg;	a	count
	f	I	b	limit
c	eaf$b	net/minecraft/world/level/storage/loot/functions/LootingEnchantFunction$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lebl;)Leaf;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Leab;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Leaf;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lebl;)Leab;	b	deserialize
		p	1		json
		p	2		context
		p	3		conditions
c	eag	net/minecraft/world/level/storage/loot/functions/SetAttributesFunction
	m	([Lebl;Ljava/util/List;)V	<init>	<init>
		p	1		conditions
		p	2		attributes
	m	()Lead;	a	getType
	m	(Lcfv;Ldyr;)Lcfv;	a	run
		p	1		stack
		p	2		context
	m	(Leag$b;)Ljava/util/stream/Stream;	a	lambda$getReferencedContextParams$0
		p	0		attribute
	m	(Ljava/lang/String;Lbgz;Lbhc$a;Lecg;)Leag$c;	a	modifier
		p	0		name
		p	1		attribute
		p	2		operation
		p	3		amountRange
	m	()Ljava/util/Set;	b	getReferencedContextParams
	m	()Leag$a;	c	setAttributes
	f	Ljava/util/List;	a	modifiers
c	eag$1	net/minecraft/world/level/storage/loot/functions/SetAttributesFunction$1
	f	[I	a	$SwitchMap$net$minecraft$world$entity$ai$attributes$AttributeModifier$Operation
c	eag$a	net/minecraft/world/level/storage/loot/functions/SetAttributesFunction$Builder
	m	()Leag$a;	a	getThis
	m	(Leag$c;)Leag$a;	a	withModifier
		p	1		attribute
	m	()Leac;	b	build
	m	()Leab$a;	c	getThis
	f	Ljava/util/List;	a	modifiers
c	eag$b	net/minecraft/world/level/storage/loot/functions/SetAttributesFunction$Modifier
	m	(Ljava/lang/String;Lbgz;Lbhc$a;Lecg;[Lbfm;Ljava/util/UUID;)V	<init>	<init>
		p	1		name
		p	2		attribute
		p	3		operation
		p	4		amount
		p	5		slots
		p	6		id
	m	(Lbhc$a;)Ljava/lang/String;	a	operationToString
		p	0		operation
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Leag$b;	a	deserialize
		p	0		json
		p	1		context
	m	(Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonObject;	a	serialize
		p	1		context
	m	(Ljava/lang/String;)Lbhc$a;	a	operationFromString
		p	0		name
	f	Ljava/lang/String;	a	name
	f	Lbgz;	b	attribute
	f	Lbhc$a;	c	operation
	f	Lecg;	d	amount
	f	Ljava/util/UUID;	e	id
	f	[Lbfm;	f	slots
c	eag$c	net/minecraft/world/level/storage/loot/functions/SetAttributesFunction$ModifierBuilder
	m	(Ljava/lang/String;Lbgz;Lbhc$a;Lecg;)V	<init>	<init>
		p	1		name
		p	2		attribute
		p	3		operation
		p	4		amount
	m	()Leag$b;	a	build
	m	(Lbfm;)Leag$c;	a	forSlot
		p	1		slot
	m	(Ljava/util/UUID;)Leag$c;	a	withUuid
		p	1		uuid
	f	Ljava/lang/String;	a	name
	f	Lbgz;	b	attribute
	f	Lbhc$a;	c	operation
	f	Lecg;	d	amount
	f	Ljava/util/UUID;	e	id
	f	Ljava/util/Set;	f	slots
c	eag$d	net/minecraft/world/level/storage/loot/functions/SetAttributesFunction$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lebl;)Leag;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Leab;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Leag;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lebl;)Leab;	b	deserialize
		p	1		json
		p	2		context
		p	3		conditions
c	eah	net/minecraft/world/level/storage/loot/functions/SetBannerPatternFunction
	m	([Lebl;Ljava/util/List;Z)V	<init>	<init>
		p	1		conditions
		p	2		patterns
		p	3		append
	m	()Lead;	a	getType
	m	(Lcfv;Ldyr;)Lcfv;	a	run
		p	1		stack
		p	2		context
	m	(Z)Leah$a;	a	setBannerPattern
		p	0		append
	f	Ljava/util/List;	a	patterns
	f	Z	b	append
c	eah$a	net/minecraft/world/level/storage/loot/functions/SetBannerPatternFunction$Builder
	m	(Z)V	<init>	<init>
		p	1		append
	m	()Leah$a;	a	getThis
	m	(Ladc;Lcel;)Leah$a;	a	addPattern
		p	1		pattern
		p	2		color
	m	(Lhd;Lcel;)Leah$a;	a	addPattern
		p	1		pattern
		p	2		color
	m	()Leac;	b	build
	m	()Leab$a;	c	getThis
	f	Lcom/google/common/collect/ImmutableList$Builder;	a	patterns
	f	Z	b	append
c	eah$b	net/minecraft/world/level/storage/loot/functions/SetBannerPatternFunction$Serializer
	m	(Lcom/google/gson/JsonArray;Lcom/mojang/datafixers/util/Pair;)V	a	lambda$serialize$1
		p	1		pair
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lebl;)Leah;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Leab;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Leah;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/google/gson/JsonSyntaxException;	a	lambda$serialize$0
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lebl;)Leab;	b	deserialize
		p	1		json
		p	2		context
		p	3		conditions
c	eai	net/minecraft/world/level/storage/loot/functions/SetContainerContents
	m	([Lebl;Lczg;Ljava/util/List;)V	<init>	<init>
		p	1		conditions
		p	2		type
		p	3		entries
	m	()Lead;	a	getType
	m	(Lcfv;Ldyr;)Lcfv;	a	run
		p	1		stack
		p	2		context
	m	(Lczg;)Leai$a;	a	setContents
		p	0		type
	m	(Ldyr;Lhm;Ldzi;)V	a	lambda$run$0
		p	2		choice
	m	(Ldyr;Lhm;Ldzj;)V	a	lambda$run$1
		p	2		entry
	m	(Ldyz;)V	a	validate
		p	1		reporter
	f	Ljava/util/List;	a	entries
	f	Lczg;	b	type
c	eai$a	net/minecraft/world/level/storage/loot/functions/SetContainerContents$Builder
	m	(Lczg;)V	<init>	<init>
		p	1		type
	m	()Leai$a;	a	getThis
	m	(Ldzj$a;)Leai$a;	a	withEntry
		p	1		entryBuilder
	m	()Leac;	b	build
	m	()Leab$a;	c	getThis
	f	Ljava/util/List;	a	entries
	f	Lczg;	b	type
c	eai$b	net/minecraft/world/level/storage/loot/functions/SetContainerContents$Serializer
	m	(Ladd;)Lcom/google/gson/JsonSyntaxException;	a	lambda$deserialize$0
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lebl;)Leai;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Leab;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Leai;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lebl;)Leab;	b	deserialize
		p	1		json
		p	2		context
		p	3		conditions
c	eaj	net/minecraft/world/level/storage/loot/functions/SetContainerLootTable
	m	([Lebl;Ladd;JLczg;)V	<init>	<init>
		p	1		conditions
		p	2		id
		p	3		seed
		p	5		type
	m	()Lead;	a	getType
	m	(Ladd;JLczg;[Lebl;)Leac;	a	lambda$withLootTable$1
		p	4		conditions
	m	(Ladd;Lczg;[Lebl;)Leac;	a	lambda$withLootTable$0
		p	2		conditions
	m	(Lcfv;Ldyr;)Lcfv;	a	run
		p	1		stack
		p	2		context
	m	(Lczg;Ladd;)Leab$a;	a	withLootTable
		p	0		type
		p	1		id
	m	(Lczg;Ladd;J)Leab$a;	a	withLootTable
		p	0		type
		p	1		id
		p	2		seed
	m	(Ldyz;)V	a	validate
		p	1		reporter
	f	Ladd;	a	name
	f	J	b	seed
	f	Lczg;	c	type
c	eaj$a	net/minecraft/world/level/storage/loot/functions/SetContainerLootTable$Serializer
	m	(Ladd;)Lcom/google/gson/JsonSyntaxException;	a	lambda$deserialize$0
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lebl;)Leaj;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Leab;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Leaj;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lebl;)Leab;	b	deserialize
		p	1		json
		p	2		context
		p	3		conditions
c	eak	net/minecraft/world/level/storage/loot/functions/SetEnchantmentsFunction
	m	([Lebl;Ljava/util/Map;Z)V	<init>	<init>
		p	1		conditions
		p	2		enchantments
		p	3		add
	m	()Lead;	a	getType
	m	(Lcfv;Lckc;Ljava/lang/Integer;)V	a	lambda$run$2
		p	1		enchantment
		p	2		level
	m	(Lcfv;Ldyr;)Lcfv;	a	run
		p	1		stack
		p	2		context
	m	(Lecg;)Ljava/util/stream/Stream;	a	lambda$getReferencedContextParams$0
		p	0		numberProvider
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntMap;Ldyr;Lckc;Lecg;)V	a	lambda$run$1
		p	2		enchantment
		p	3		numberProvider
	m	(Ljava/util/Map;Lckc;I)V	a	updateEnchantment
		p	0		map
		p	1		enchantment
		p	2		level
	m	(Ljava/util/Map;Lckc;Ljava/lang/Integer;)V	a	lambda$run$4
		p	1		enchantment
		p	2		level
	m	()Ljava/util/Set;	b	getReferencedContextParams
	m	(Ljava/util/Map;Lckc;Ljava/lang/Integer;)V	b	lambda$run$3
		p	1		enchantment
		p	2		level
	f	Ljava/util/Map;	a	enchantments
	f	Z	b	add
c	eak$a	net/minecraft/world/level/storage/loot/functions/SetEnchantmentsFunction$Builder
	m	(Z)V	<init>	<init>
		p	1		add
	m	()Leak$a;	a	getThis
	m	(Lckc;Lecg;)Leak$a;	a	withEnchantment
		p	1		enchantment
		p	2		level
	m	()Leac;	b	build
	m	()Leab$a;	c	getThis
	f	Ljava/util/Map;	a	enchantments
	f	Z	b	add
c	eak$b	net/minecraft/world/level/storage/loot/functions/SetEnchantmentsFunction$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lebl;)Leak;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonSerializationContext;Lckc;Lecg;)V	a	lambda$serialize$0
		p	2		enchantment
		p	3		numberProvider
	m	(Lcom/google/gson/JsonObject;Leab;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Leak;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Ljava/lang/String;)Lcom/google/gson/JsonSyntaxException;	a	lambda$deserialize$1
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lebl;)Leab;	b	deserialize
		p	1		json
		p	2		context
		p	3		conditions
c	eal	net/minecraft/world/level/storage/loot/functions/SetInstrumentFunction
	m	([Lebl;Lanv;)V	<init>	<init>
		p	1		conditions
		p	2		options
	m	()Lead;	a	getType
	m	(Lanv;)Leab$a;	a	setInstrumentOptions
		p	0		options
	m	(Lanv;[Lebl;)Leac;	a	lambda$setInstrumentOptions$0
		p	1		conditions
	m	(Lcfv;Ldyr;)Lcfv;	a	run
		p	1		stack
		p	2		context
	f	Lanv;	a	options
c	eal$a	net/minecraft/world/level/storage/loot/functions/SetInstrumentFunction$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lebl;)Leal;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Leab;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Leal;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lebl;)Leab;	b	deserialize
		p	1		json
		p	2		context
		p	3		conditions
c	eam	net/minecraft/world/level/storage/loot/functions/SetItemCountFunction
	m	([Lebl;Lecg;Z)V	<init>	<init>
		p	1		conditions
		p	2		countRange
		p	3		add
	m	()Lead;	a	getType
	m	(Lcfv;Ldyr;)Lcfv;	a	run
		p	1		stack
		p	2		context
	m	(Lecg;)Leab$a;	a	setCount
		p	0		countRange
	m	(Lecg;Z)Leab$a;	a	setCount
		p	0		countRange
		p	1		add
	m	(Lecg;Z[Lebl;)Leac;	a	lambda$setCount$1
		p	2		conditions
	m	(Lecg;[Lebl;)Leac;	a	lambda$setCount$0
		p	1		conditions
	m	()Ljava/util/Set;	b	getReferencedContextParams
	f	Lecg;	a	value
	f	Z	b	add
c	eam$a	net/minecraft/world/level/storage/loot/functions/SetItemCountFunction$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lebl;)Leam;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Leab;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Leam;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lebl;)Leab;	b	deserialize
		p	1		json
		p	2		context
		p	3		conditions
c	ean	net/minecraft/world/level/storage/loot/functions/SetItemDamageFunction
	m	([Lebl;Lecg;Z)V	<init>	<init>
		p	1		conditions
		p	2		durabilityRange
		p	3		add
	m	()Lead;	a	getType
	m	(Lcfv;Ldyr;)Lcfv;	a	run
		p	1		stack
		p	2		context
	m	(Lecg;)Leab$a;	a	setDamage
		p	0		durabilityRange
	m	(Lecg;Z)Leab$a;	a	setDamage
		p	0		durabilityRange
		p	1		add
	m	(Lecg;Z[Lebl;)Leac;	a	lambda$setDamage$1
		p	2		conditions
	m	(Lecg;[Lebl;)Leac;	a	lambda$setDamage$0
		p	1		conditions
	m	()Ljava/util/Set;	b	getReferencedContextParams
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lecg;	b	damage
	f	Z	c	add
c	ean$a	net/minecraft/world/level/storage/loot/functions/SetItemDamageFunction$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lebl;)Lean;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Leab;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lean;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lebl;)Leab;	b	deserialize
		p	1		json
		p	2		context
		p	3		conditions
c	eao	net/minecraft/world/level/storage/loot/functions/SetLoreFunction
	m	([Lebl;ZLjava/util/List;Ldyr$c;)V	<init>	<init>
		p	1		conditions
		p	2		replace
		p	3		lore
		p	4		entity
	m	()Lead;	a	getType
	m	(Lcfv;Ldyr;)Lcfv;	a	run
		p	1		stack
		p	2		context
	m	(Lcfv;Z)Lrk;	a	getLoreTag
		p	1		stack
		p	2		otherLoreExists
	m	()Ljava/util/Set;	b	getReferencedContextParams
	m	()Leao$a;	c	setLore
	f	Z	a	replace
	f	Ljava/util/List;	b	lore
	f	Ldyr$c;	c	resolutionContext
c	eao$a	net/minecraft/world/level/storage/loot/functions/SetLoreFunction$Builder
	m	()Leao$a;	a	getThis
	m	(Ldyr$c;)Leao$a;	a	setResolutionContext
		p	1		target
	m	(Ltj;)Leao$a;	a	addLine
		p	1		lore
	m	(Z)Leao$a;	a	setReplace
		p	1		replace
	m	()Leac;	b	build
	m	()Leab$a;	c	getThis
	f	Z	a	replace
	f	Ldyr$c;	b	resolutionContext
	f	Ljava/util/List;	c	lore
c	eao$b	net/minecraft/world/level/storage/loot/functions/SetLoreFunction$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lebl;)Leao;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Leab;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Leao;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lebl;)Leab;	b	deserialize
		p	1		json
		p	2		context
		p	3		conditions
c	eap	net/minecraft/world/level/storage/loot/functions/SetNameFunction
	m	([Lebl;Ltj;Ldyr$c;)V	<init>	<init>
		p	1		conditions
		p	2		name
		p	3		entity
	m	()Lead;	a	getType
	m	(Lcfv;Ldyr;)Lcfv;	a	run
		p	1		stack
		p	2		context
	m	(Ldr;Lbfh;Ltj;)Ltj;	a	lambda$createResolver$0
		p	2		textComponent
	m	(Ldyr;Ldyr$c;)Ljava/util/function/UnaryOperator;	a	createResolver
		p	0		context
		p	1		sourceEntity
	m	(Ltj;)Leab$a;	a	setName
		p	0		name
	m	(Ltj;Ldyr$c;)Leab$a;	a	setName
		p	0		name
		p	1		target
	m	(Ltj;Ldyr$c;[Lebl;)Leac;	a	lambda$setName$3
		p	2		conditions
	m	(Ltj;[Lebl;)Leac;	a	lambda$setName$2
		p	1		conditions
	m	()Ljava/util/Set;	b	getReferencedContextParams
	m	(Ltj;)Ltj;	b	lambda$createResolver$1
		p	0		textComponent
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ltj;	b	name
	f	Ldyr$c;	c	resolutionContext
c	eap$a	net/minecraft/world/level/storage/loot/functions/SetNameFunction$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lebl;)Leap;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Leab;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Leap;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lebl;)Leab;	b	deserialize
		p	1		json
		p	2		context
		p	3		conditions
c	eaq	net/minecraft/world/level/storage/loot/functions/SetNbtFunction
	m	([Lebl;Lre;)V	<init>	<init>
		p	1		conditions
		p	2		nbt
	m	()Lead;	a	getType
	m	(Lcfv;Ldyr;)Lcfv;	a	run
		p	1		stack
		p	2		context
	m	(Lre;)Leab$a;	a	setTag
		p	0		nbt
	m	(Lre;[Lebl;)Leac;	a	lambda$setTag$0
		p	1		conditions
	f	Lre;	a	tag
c	eaq$a	net/minecraft/world/level/storage/loot/functions/SetNbtFunction$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lebl;)Leaq;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Leab;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Leaq;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lebl;)Leab;	b	deserialize
		p	1		json
		p	2		context
		p	3		conditions
c	ear	net/minecraft/world/level/storage/loot/functions/SetPotionFunction
	m	([Lebl;Lchr;)V	<init>	<init>
		p	1		conditions
		p	2		potion
	m	()Lead;	a	getType
	m	(Lcfv;Ldyr;)Lcfv;	a	run
		p	1		stack
		p	2		context
	m	(Lchr;)Leab$a;	a	setPotion
		p	0		potion
	m	(Lchr;[Lebl;)Leac;	a	lambda$setPotion$0
		p	1		conditions
	f	Lchr;	a	potion
c	ear$a	net/minecraft/world/level/storage/loot/functions/SetPotionFunction$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lebl;)Lear;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Leab;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lear;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Ljava/lang/String;)Lcom/google/gson/JsonSyntaxException;	a	lambda$deserialize$0
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lebl;)Leab;	b	deserialize
		p	1		json
		p	2		context
		p	3		conditions
c	eas	net/minecraft/world/level/storage/loot/functions/SetStewEffectFunction
	m	([Lebl;Ljava/util/Map;)V	<init>	<init>
		p	1		conditions
		p	2		effects
	m	()Lead;	a	getType
	m	(Lcfv;Ldyr;)Lcfv;	a	run
		p	1		stack
		p	2		context
	m	(Lecg;)Ljava/util/stream/Stream;	a	lambda$getReferencedContextParams$0
		p	0		numberProvider
	m	()Ljava/util/Set;	b	getReferencedContextParams
	m	()Leas$a;	c	stewEffect
	f	Ljava/util/Map;	a	effectDurationMap
c	eas$a	net/minecraft/world/level/storage/loot/functions/SetStewEffectFunction$Builder
	m	()Leas$a;	a	getThis
	m	(Lbew;Lecg;)Leas$a;	a	withEffect
		p	1		effect
		p	2		durationRange
	m	()Leac;	b	build
	m	()Leab$a;	c	getThis
	f	Ljava/util/Map;	a	effectDurationMap
c	eas$b	net/minecraft/world/level/storage/loot/functions/SetStewEffectFunction$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lebl;)Leas;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Leab;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Leas;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Ljava/lang/String;)Lcom/google/gson/JsonSyntaxException;	a	lambda$deserialize$0
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lebl;)Leab;	b	deserialize
		p	1		json
		p	2		context
		p	3		conditions
c	eat	net/minecraft/world/level/storage/loot/functions/SmeltItemFunction
	m	([Lebl;)V	<init>	<init>
		p	1		conditions
	m	()Lead;	a	getType
	m	(Lcfv;Ldyr;)Lcfv;	a	run
		p	1		stack
		p	2		context
	m	()Leab$a;	c	smelted
	f	Lorg/slf4j/Logger;	a	LOGGER
c	eat$a	net/minecraft/world/level/storage/loot/functions/SmeltItemFunction$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lebl;)Leat;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lebl;)Leab;	b	deserialize
		p	1		json
		p	2		context
		p	3		conditions
c	eau	net/minecraft/world/level/storage/loot/functions/package-info
c	eav	net/minecraft/world/level/storage/loot/package-info
c	eaw	net/minecraft/world/level/storage/loot/parameters/LootContextParam
	m	(Ladd;)V	<init>	<init>
		p	1		id
	m	()Ladd;	a	getName
	f	Ladd;	a	name
c	eax	net/minecraft/world/level/storage/loot/parameters/LootContextParamSet
	m	(Ljava/util/Set;Ljava/util/Set;)V	<init>	<init>
		p	1		required
		p	2		allowed
	m	()Ljava/util/Set;	a	getRequired
	m	(Ldyz;Ldys;)V	a	validateUser
		p	1		reporter
		p	2		parameterConsumer
	m	(Leaw;)Z	a	isAllowed
		p	1		parameter
	m	()Ljava/util/Set;	b	getAllowed
	m	(Leaw;)Ljava/lang/String;	b	lambda$toString$0
		p	1		parameter
	m	()Leax$a;	c	builder
	f	Ljava/util/Set;	a	required
	f	Ljava/util/Set;	b	all
c	eax$a	net/minecraft/world/level/storage/loot/parameters/LootContextParamSet$Builder
	m	()Leax;	a	build
	m	(Leaw;)Leax$a;	a	required
		p	1		parameter
	m	(Leaw;)Leax$a;	b	optional
		p	1		parameter
	f	Ljava/util/Set;	a	required
	f	Ljava/util/Set;	b	optional
c	eay	net/minecraft/world/level/storage/loot/parameters/LootContextParamSets
	m	(Ladd;)Leax;	a	get
		p	0		id
	m	(Leax$a;)V	a	lambda$static$12
		p	0		builder
	m	(Leax;)Ladd;	a	getKey
		p	0		type
	m	(Ljava/lang/String;Ljava/util/function/Consumer;)Leax;	a	register
		p	0		name
		p	1		type
	m	(Leax$a;)V	b	lambda$static$11
		p	0		builder
	m	(Leax$a;)V	c	lambda$static$10
		p	0		builder
	m	(Leax$a;)V	d	lambda$static$9
		p	0		builder
	m	(Leax$a;)V	e	lambda$static$8
		p	0		builder
	m	(Leax$a;)V	f	lambda$static$7
		p	0		builder
	m	(Leax$a;)V	g	lambda$static$6
		p	0		builder
	m	(Leax$a;)V	h	lambda$static$5
		p	0		builder
	m	(Leax$a;)V	i	lambda$static$4
		p	0		builder
	m	(Leax$a;)V	j	lambda$static$3
		p	0		builder
	m	(Leax$a;)V	k	lambda$static$2
		p	0		builder
	m	(Leax$a;)V	l	lambda$static$1
		p	0		builder
	m	(Leax$a;)V	m	lambda$static$0
		p	0		builder
	f	Leax;	a	EMPTY
	f	Leax;	b	CHEST
	f	Leax;	c	COMMAND
	f	Leax;	d	SELECTOR
	f	Leax;	e	FISHING
	f	Leax;	f	ENTITY
	f	Leax;	g	ARCHAEOLOGY
	f	Leax;	h	GIFT
	f	Leax;	i	PIGLIN_BARTER
	f	Leax;	j	ADVANCEMENT_REWARD
	f	Leax;	k	ADVANCEMENT_ENTITY
	f	Leax;	l	ALL_PARAMS
	f	Leax;	m	BLOCK
	f	Lcom/google/common/collect/BiMap;	n	REGISTRY
c	eaz	net/minecraft/world/level/storage/loot/parameters/LootContextParams
	m	(Ljava/lang/String;)Leaw;	a	create
		p	0		name
	f	Leaw;	a	THIS_ENTITY
	f	Leaw;	b	LAST_DAMAGE_PLAYER
	f	Leaw;	c	DAMAGE_SOURCE
	f	Leaw;	d	KILLER_ENTITY
	f	Leaw;	e	DIRECT_KILLER_ENTITY
	f	Leaw;	f	ORIGIN
	f	Leaw;	g	BLOCK_STATE
	f	Leaw;	h	BLOCK_ENTITY
	f	Leaw;	i	TOOL
	f	Leaw;	j	EXPLOSION_RADIUS
c	eba	net/minecraft/world/level/storage/loot/parameters/package-info
c	ebb	net/minecraft/world/level/storage/loot/predicates/AlternativeLootItemCondition
	m	([Lebl;)V	<init>	<init>
		p	1		terms
	m	()Lebm;	a	getType
	m	(Ldyr;)Z	a	test
	m	(Ldyz;)V	a	validate
		p	1		reporter
	m	([Lebl$a;)Lebb$a;	a	alternative
		p	0		terms
	f	[Lebl;	a	terms
	f	Ljava/util/function/Predicate;	b	composedPredicate
c	ebb$a	net/minecraft/world/level/storage/loot/predicates/AlternativeLootItemCondition$Builder
	m	([Lebl$a;)V	<init>	<init>
		p	1		terms
	m	(Lebl$a;)Lebb$a;	or	or
		p	1		condition
	f	Ljava/util/List;	a	terms
c	ebb$b	net/minecraft/world/level/storage/loot/predicates/AlternativeLootItemCondition$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	deserialize
		p	1		json
		p	2		context
	m	(Lcom/google/gson/JsonObject;Lebb;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lebb;	b	deserialize
c	ebc	net/minecraft/world/level/storage/loot/predicates/BonusLevelTableCondition
	m	(Lckc;[F)V	<init>	<init>
		p	1		enchantment
		p	2		chances
	m	()Lebm;	a	getType
	m	(Lckc;[F)Lebl$a;	a	bonusLevelFlatChance
		p	0		enchantment
		p	1		chances
	m	(Ldyr;)Z	a	test
	m	()Ljava/util/Set;	b	getReferencedContextParams
	m	(Lckc;[F)Lebl;	b	lambda$bonusLevelFlatChance$0
	f	Lckc;	a	enchantment
	f	[F	b	values
c	ebc$a	net/minecraft/world/level/storage/loot/predicates/BonusLevelTableCondition$Serializer
	m	(Ladd;)Lcom/google/gson/JsonParseException;	a	lambda$deserialize$0
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	deserialize
		p	1		json
		p	2		context
	m	(Lcom/google/gson/JsonObject;Lebc;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lebc;	b	deserialize
c	ebd	net/minecraft/world/level/storage/loot/predicates/ConditionReference
	m	(Ladd;)V	<init>	<init>
		p	1		id
	m	()Lebm;	a	getType
	m	(Ladd;)Lebl$a;	a	conditionReference
		p	0		id
	m	(Ldyr;)Z	a	test
	m	(Ldyz;)V	a	validate
		p	1		reporter
	m	(Ladd;)Lebl;	b	lambda$conditionReference$0
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ladd;	b	name
c	ebd$a	net/minecraft/world/level/storage/loot/predicates/ConditionReference$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	deserialize
		p	1		json
		p	2		context
	m	(Lcom/google/gson/JsonObject;Lebd;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lebd;	b	deserialize
c	ebe	net/minecraft/world/level/storage/loot/predicates/ConditionUserBuilder
	m	(Ljava/lang/Iterable;Ljava/util/function/Function;)Lebe;	a_	when
		p	1		conditions
		p	2		toBuilderFunction
	m	(Lebl$a;)Lebe;	b	when
		p	1		condition
	m	()Lebe;	d	unwrap
c	ebf	net/minecraft/world/level/storage/loot/predicates/DamageSourceCondition
	m	(Lbc;)V	<init>	<init>
		p	1		predicate
	m	()Lebm;	a	getType
	m	(Lbc$a;)Lebl$a;	a	hasDamageSource
		p	0		builder
	m	(Ldyr;)Z	a	test
	m	()Ljava/util/Set;	b	getReferencedContextParams
	m	(Lbc$a;)Lebl;	b	lambda$hasDamageSource$0
	f	Lbc;	a	predicate
c	ebf$a	net/minecraft/world/level/storage/loot/predicates/DamageSourceCondition$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	deserialize
		p	1		json
		p	2		context
	m	(Lcom/google/gson/JsonObject;Lebf;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lebf;	b	deserialize
c	ebg	net/minecraft/world/level/storage/loot/predicates/EntityHasScoreCondition
	m	(Ljava/util/Map;Ldyr$c;)V	<init>	<init>
		p	1		scores
		p	2		target
	m	()Lebm;	a	getType
	m	(Ldyp;)Ljava/util/stream/Stream;	a	lambda$getReferencedContextParams$0
	m	(Ldyr$c;)Lebg$a;	a	hasScores
		p	0		target
	m	(Ldyr;)Z	a	test
	m	(Ldyr;Lbfh;Leec;Ljava/lang/String;Ldyp;)Z	a	hasScore
		p	1		context
		p	2		entity
		p	3		scoreboard
		p	4		objectiveName
		p	5		range
	m	()Ljava/util/Set;	b	getReferencedContextParams
	f	Ljava/util/Map;	a	scores
	f	Ldyr$c;	b	entityTarget
c	ebg$a	net/minecraft/world/level/storage/loot/predicates/EntityHasScoreCondition$Builder
	m	(Ldyr$c;)V	<init>	<init>
		p	1		target
	m	(Ljava/lang/String;Ldyp;)Lebg$a;	a	withScore
		p	1		name
		p	2		value
	f	Ljava/util/Map;	a	scores
	f	Ldyr$c;	b	entityTarget
c	ebg$b	net/minecraft/world/level/storage/loot/predicates/EntityHasScoreCondition$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	deserialize
		p	1		json
		p	2		context
	m	(Lcom/google/gson/JsonObject;Lebg;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lebg;	b	deserialize
c	ebh	net/minecraft/world/level/storage/loot/predicates/ExplosionCondition
	m	()Lebm;	a	getType
	m	(Ldyr;)Z	a	test
	m	()Ljava/util/Set;	b	getReferencedContextParams
	m	()Lebl$a;	c	survivesExplosion
	m	()Lebl;	d	lambda$survivesExplosion$0
	f	Lebh;	a	INSTANCE
c	ebh$a	net/minecraft/world/level/storage/loot/predicates/ExplosionCondition$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	deserialize
		p	1		json
		p	2		context
	m	(Lcom/google/gson/JsonObject;Lebh;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lebh;	b	deserialize
c	ebi	net/minecraft/world/level/storage/loot/predicates/InvertedLootItemCondition
	m	(Lebl;)V	<init>	<init>
		p	1		term
	m	()Lebm;	a	getType
	m	(Ldyr;)Z	a	test
	m	(Ldyz;)V	a	validate
		p	1		reporter
	m	(Lebi;)Lebl;	a	lambda$invert$0
	m	(Lebl$a;)Lebl$a;	a	invert
		p	0		term
	m	()Ljava/util/Set;	b	getReferencedContextParams
	f	Lebl;	a	term
c	ebi$a	net/minecraft/world/level/storage/loot/predicates/InvertedLootItemCondition$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	deserialize
		p	1		json
		p	2		context
	m	(Lcom/google/gson/JsonObject;Lebi;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lebi;	b	deserialize
c	ebj	net/minecraft/world/level/storage/loot/predicates/LocationCheck
	m	(Lcg;Lgt;)V	<init>	<init>
		p	1		predicate
		p	2		offset
	m	()Lebm;	a	getType
	m	(Lcg$a;)Lebl$a;	a	checkLocation
		p	0		predicateBuilder
	m	(Lcg$a;Lgt;)Lebl$a;	a	checkLocation
		p	0		predicateBuilder
		p	1		pos
	m	(Ldyr;)Z	a	test
	m	(Lcg$a;)Lebl;	b	lambda$checkLocation$0
	m	(Lcg$a;Lgt;)Lebl;	b	lambda$checkLocation$1
	f	Lcg;	a	predicate
	f	Lgt;	b	offset
c	ebj$a	net/minecraft/world/level/storage/loot/predicates/LocationCheck$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	deserialize
		p	1		json
		p	2		context
	m	(Lcom/google/gson/JsonObject;Lebj;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lebj;	b	deserialize
c	ebk	net/minecraft/world/level/storage/loot/predicates/LootItemBlockStatePropertyCondition
	m	(Lcpi;Lcy;)V	<init>	<init>
		p	1		block
		p	2		properties
	m	()Lebm;	a	getType
	m	(Lcpi;)Lebk$a;	a	hasBlockStateProperties
		p	0		block
	m	(Ldyr;)Z	a	test
	m	()Ljava/util/Set;	b	getReferencedContextParams
	f	Lcpi;	a	block
	f	Lcy;	b	properties
c	ebk$a	net/minecraft/world/level/storage/loot/predicates/LootItemBlockStatePropertyCondition$Builder
	m	(Lcpi;)V	<init>	<init>
		p	1		block
	m	(Lcy$a;)Lebk$a;	a	setProperties
		p	1		builder
	f	Lcpi;	a	block
	f	Lcy;	b	properties
c	ebk$b	net/minecraft/world/level/storage/loot/predicates/LootItemBlockStatePropertyCondition$Serializer
	m	(Ladd;)Ljava/lang/IllegalArgumentException;	a	lambda$deserialize$0
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	deserialize
		p	1		json
		p	2		context
	m	(Lcom/google/gson/JsonObject;Lebk;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcpi;Ljava/lang/String;)V	a	lambda$deserialize$1
		p	1		propertyName
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lebk;	b	deserialize
c	ebl	net/minecraft/world/level/storage/loot/predicates/LootItemCondition
	m	()Lebm;	a	getType
c	ebl$a	net/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder
	m	(Lebl$a;)Lebb$a;	or	or
		p	1		condition
c	ebm	net/minecraft/world/level/storage/loot/predicates/LootItemConditionType
	m	(Ldyx;)V	<init>	<init>
		p	1		jsonSerializer
c	ebn	net/minecraft/world/level/storage/loot/predicates/LootItemConditions
	m	()Ljava/lang/Object;	a	createGsonAdapter
	m	(Ljava/lang/Object;)Z	a	lambda$orConditions$2
		p	0		predicates
	m	(Ljava/lang/String;Ldyx;)Lebm;	a	register
		p	0		id
		p	1		serializer
	m	([Ljava/util/function/Predicate;)Ljava/util/function/Predicate;	a	andConditions
		p	0		predicates
	m	([Ljava/util/function/Predicate;Ljava/lang/Object;)Z	a	lambda$orConditions$3
		p	1		operand
	m	(Ljava/lang/Object;)Z	b	lambda$andConditions$0
		p	0		predicates
	m	([Ljava/util/function/Predicate;)Ljava/util/function/Predicate;	b	orConditions
		p	0		predicates
	m	([Ljava/util/function/Predicate;Ljava/lang/Object;)Z	b	lambda$andConditions$1
		p	1		operand
	f	Lebm;	a	INVERTED
	f	Lebm;	b	ALTERNATIVE
	f	Lebm;	c	RANDOM_CHANCE
	f	Lebm;	d	RANDOM_CHANCE_WITH_LOOTING
	f	Lebm;	e	ENTITY_PROPERTIES
	f	Lebm;	f	KILLED_BY_PLAYER
	f	Lebm;	g	ENTITY_SCORES
	f	Lebm;	h	BLOCK_STATE_PROPERTY
	f	Lebm;	i	MATCH_TOOL
	f	Lebm;	j	TABLE_BONUS
	f	Lebm;	k	SURVIVES_EXPLOSION
	f	Lebm;	l	DAMAGE_SOURCE_PROPERTIES
	f	Lebm;	m	LOCATION_CHECK
	f	Lebm;	n	WEATHER_CHECK
	f	Lebm;	o	REFERENCE
	f	Lebm;	p	TIME_CHECK
	f	Lebm;	q	VALUE_CHECK
c	ebo	net/minecraft/world/level/storage/loot/predicates/LootItemEntityPropertyCondition
	m	(Lbn;Ldyr$c;)V	<init>	<init>
		p	1		predicate
		p	2		entity
	m	()Lebm;	a	getType
	m	(Lbn$a;Ldyr$c;)Lebl;	a	lambda$hasProperties$0
	m	(Lbn;Ldyr$c;)Lebl;	a	lambda$hasProperties$1
	m	(Ldyr$c;)Lebl$a;	a	entityPresent
		p	0		entity
	m	(Ldyr$c;Lbn$a;)Lebl$a;	a	hasProperties
		p	0		entity
		p	1		predicateBuilder
	m	(Ldyr$c;Lbn;)Lebl$a;	a	hasProperties
		p	0		entity
		p	1		predicate
	m	(Ldyr;)Z	a	test
	m	()Ljava/util/Set;	b	getReferencedContextParams
	f	Lbn;	a	predicate
	f	Ldyr$c;	b	entityTarget
c	ebo$a	net/minecraft/world/level/storage/loot/predicates/LootItemEntityPropertyCondition$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	deserialize
		p	1		json
		p	2		context
	m	(Lcom/google/gson/JsonObject;Lebo;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lebo;	b	deserialize
c	ebp	net/minecraft/world/level/storage/loot/predicates/LootItemKilledByPlayerCondition
	m	()Lebm;	a	getType
	m	(Ldyr;)Z	a	test
	m	()Ljava/util/Set;	b	getReferencedContextParams
	m	()Lebl$a;	c	killedByPlayer
	m	()Lebl;	d	lambda$killedByPlayer$0
	f	Lebp;	a	INSTANCE
c	ebp$a	net/minecraft/world/level/storage/loot/predicates/LootItemKilledByPlayerCondition$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	deserialize
		p	1		json
		p	2		context
	m	(Lcom/google/gson/JsonObject;Lebp;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lebp;	b	deserialize
c	ebq	net/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceCondition
	m	(F)V	<init>	<init>
		p	1		chance
	m	()Lebm;	a	getType
	m	(F)Lebl$a;	a	randomChance
		p	0		chance
	m	(Ldyr;)Z	a	test
	m	(F)Lebl;	b	lambda$randomChance$0
	f	F	a	probability
c	ebq$a	net/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceCondition$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	deserialize
		p	1		json
		p	2		context
	m	(Lcom/google/gson/JsonObject;Lebq;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lebq;	b	deserialize
c	ebr	net/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceWithLootingCondition
	m	(FF)V	<init>	<init>
		p	1		chance
		p	2		lootingMultiplier
	m	()Lebm;	a	getType
	m	(FF)Lebl$a;	a	randomChanceAndLootingBoost
		p	0		chance
		p	1		lootingMultiplier
	m	(Ldyr;)Z	a	test
	m	()Ljava/util/Set;	b	getReferencedContextParams
	m	(FF)Lebl;	b	lambda$randomChanceAndLootingBoost$0
	f	F	a	percent
	f	F	b	lootingMultiplier
c	ebr$a	net/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceWithLootingCondition$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	deserialize
		p	1		json
		p	2		context
	m	(Lcom/google/gson/JsonObject;Lebr;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lebr;	b	deserialize
c	ebs	net/minecraft/world/level/storage/loot/predicates/MatchTool
	m	(Lbz;)V	<init>	<init>
		p	1		predicate
	m	()Lebm;	a	getType
	m	(Lbz$a;)Lebl$a;	a	toolMatches
		p	0		predicate
	m	(Ldyr;)Z	a	test
	m	()Ljava/util/Set;	b	getReferencedContextParams
	m	(Lbz$a;)Lebl;	b	lambda$toolMatches$0
	f	Lbz;	a	predicate
c	ebs$a	net/minecraft/world/level/storage/loot/predicates/MatchTool$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	deserialize
		p	1		json
		p	2		context
	m	(Lcom/google/gson/JsonObject;Lebs;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lebs;	b	deserialize
c	ebt	net/minecraft/world/level/storage/loot/predicates/TimeCheck
	m	(Ljava/lang/Long;Ldyp;)V	<init>	<init>
		p	1		period
		p	2		value
	m	()Lebm;	a	getType
	m	(Ldyp;)Lebt$a;	a	time
		p	0		value
	m	(Ldyr;)Z	a	test
	m	()Ljava/util/Set;	b	getReferencedContextParams
	f	Ljava/lang/Long;	a	period
	f	Ldyp;	b	value
c	ebt$a	net/minecraft/world/level/storage/loot/predicates/TimeCheck$Builder
	m	(Ldyp;)V	<init>	<init>
		p	1		value
	m	()Lebt;	a	build
	m	(J)Lebt$a;	a	setPeriod
		p	1		period
	f	Ljava/lang/Long;	a	period
	f	Ldyp;	b	value
c	ebt$b	net/minecraft/world/level/storage/loot/predicates/TimeCheck$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	deserialize
		p	1		json
		p	2		context
	m	(Lcom/google/gson/JsonObject;Lebt;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lebt;	b	deserialize
c	ebu	net/minecraft/world/level/storage/loot/predicates/ValueCheckCondition
	m	(Lecg;Ldyp;)V	<init>	<init>
		p	1		value
		p	2		range
	m	()Lebm;	a	getType
	m	(Ldyr;)Z	a	test
	m	(Lecg;Ldyp;)Lebl$a;	a	hasValue
		p	0		value
		p	1		range
	m	()Ljava/util/Set;	b	getReferencedContextParams
	m	(Lecg;Ldyp;)Lebl;	b	lambda$hasValue$0
	f	Lecg;	a	provider
	f	Ldyp;	b	range
c	ebu$a	net/minecraft/world/level/storage/loot/predicates/ValueCheckCondition$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	deserialize
		p	1		json
		p	2		context
	m	(Lcom/google/gson/JsonObject;Lebu;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lebu;	b	deserialize
c	ebv	net/minecraft/world/level/storage/loot/predicates/WeatherCheck
	m	(Ljava/lang/Boolean;Ljava/lang/Boolean;)V	<init>	<init>
		p	1		raining
		p	2		thundering
	m	()Lebm;	a	getType
	m	(Ldyr;)Z	a	test
	m	()Lebv$a;	c	weather
	f	Ljava/lang/Boolean;	a	isRaining
	f	Ljava/lang/Boolean;	b	isThundering
c	ebv$a	net/minecraft/world/level/storage/loot/predicates/WeatherCheck$Builder
	m	()Lebv;	a	build
	m	(Ljava/lang/Boolean;)Lebv$a;	a	setRaining
		p	1		raining
	m	(Ljava/lang/Boolean;)Lebv$a;	b	setThundering
		p	1		thundering
	f	Ljava/lang/Boolean;	a	isRaining
	f	Ljava/lang/Boolean;	b	isThundering
c	ebv$b	net/minecraft/world/level/storage/loot/predicates/WeatherCheck$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	deserialize
		p	1		json
		p	2		context
	m	(Lcom/google/gson/JsonObject;Lebv;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lebv;	b	deserialize
c	ebw	net/minecraft/world/level/storage/loot/predicates/package-info
c	ebx	net/minecraft/world/level/storage/loot/providers/nbt/ContextNbtProvider
	m	(Lebx$a;)V	<init>	<init>
		p	1		target
	m	()Leby;	a	getType
	m	(Ldyr$c;)Lebz;	a	forContextEntity
		p	0		target
	m	(Ldyr;)Lrx;	a	get
		p	1		context
	m	(Ljava/lang/String;)Lebx;	a	createFromContext
		p	0		target
	m	()Ljava/util/Set;	b	getReferencedContextParams
	m	(Ldyr$c;)Lebx$a;	b	forEntity
		p	0		entityTarget
	f	Lebx;	a	BLOCK_ENTITY
	f	Ljava/lang/String;	b	BLOCK_ENTITY_ID
	f	Lebx$a;	c	BLOCK_ENTITY_PROVIDER
	f	Lebx$a;	d	getter
c	ebx$1	net/minecraft/world/level/storage/loot/providers/nbt/ContextNbtProvider$1
	m	()Ljava/lang/String;	a	getId
	m	(Ldyr;)Lrx;	a	get
		p	1		context
	m	()Ljava/util/Set;	b	getReferencedContextParams
c	ebx$2	net/minecraft/world/level/storage/loot/providers/nbt/ContextNbtProvider$2
	m	()Ljava/lang/String;	a	getId
	m	(Ldyr;)Lrx;	a	get
		p	1		context
	m	()Ljava/util/Set;	b	getReferencedContextParams
	f	Ldyr$c;	a	val$target
c	ebx$a	net/minecraft/world/level/storage/loot/providers/nbt/ContextNbtProvider$Getter
	m	()Ljava/lang/String;	a	getId
	m	(Ldyr;)Lrx;	a	get
		p	1		context
	m	()Ljava/util/Set;	b	getReferencedContextParams
c	ebx$b	net/minecraft/world/level/storage/loot/providers/nbt/ContextNbtProvider$InlineSerializer
	m	(Lcom/google/gson/JsonElement;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	deserialize
		p	1		json
		p	2		context
	m	(Lebx;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	a	serialize
		p	1		object
		p	2		context
	m	(Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	a	serialize
		p	1		object
		p	2		context
	m	(Lcom/google/gson/JsonElement;Lcom/google/gson/JsonDeserializationContext;)Lebx;	b	deserialize
c	ebx$c	net/minecraft/world/level/storage/loot/providers/nbt/ContextNbtProvider$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	deserialize
		p	1		json
		p	2		context
	m	(Lcom/google/gson/JsonObject;Lebx;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lebx;	b	deserialize
c	eby	net/minecraft/world/level/storage/loot/providers/nbt/LootNbtProviderType
	m	(Ldyx;)V	<init>	<init>
		p	1		jsonSerializer
c	ebz	net/minecraft/world/level/storage/loot/providers/nbt/NbtProvider
	m	()Leby;	a	getType
	m	(Ldyr;)Lrx;	a	get
		p	1		context
	m	()Ljava/util/Set;	b	getReferencedContextParams
c	eca	net/minecraft/world/level/storage/loot/providers/nbt/NbtProviders
	m	()Ljava/lang/Object;	a	createGsonAdapter
	m	(Ljava/lang/String;Ldyx;)Leby;	a	register
		p	0		id
		p	1		jsonSerializer
	f	Leby;	a	STORAGE
	f	Leby;	b	CONTEXT
c	ecb	net/minecraft/world/level/storage/loot/providers/nbt/StorageNbtProvider
	m	(Ladd;)V	<init>	<init>
		p	1		source
	m	()Leby;	a	getType
	m	(Ldyr;)Lrx;	a	get
		p	1		context
	m	()Ljava/util/Set;	b	getReferencedContextParams
	f	Ladd;	a	id
c	ecb$a	net/minecraft/world/level/storage/loot/providers/nbt/StorageNbtProvider$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	deserialize
		p	1		json
		p	2		context
	m	(Lcom/google/gson/JsonObject;Lecb;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lecb;	b	deserialize
c	ecc	net/minecraft/world/level/storage/loot/providers/nbt/package-info
c	ecd	net/minecraft/world/level/storage/loot/providers/number/BinomialDistributionGenerator
	m	(Lecg;Lecg;)V	<init>	<init>
		p	1		n
		p	2		p
	m	()Lecf;	a	getType
	m	(IF)Lecd;	a	binomial
		p	0		n
		p	1		p
	m	(Ldyr;)I	a	getInt
		p	1		context
	m	()Ljava/util/Set;	b	getReferencedContextParams
	m	(Ldyr;)F	b	getFloat
		p	1		context
	f	Lecg;	a	n
	f	Lecg;	b	p
c	ecd$a	net/minecraft/world/level/storage/loot/providers/number/BinomialDistributionGenerator$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	deserialize
		p	1		json
		p	2		context
	m	(Lcom/google/gson/JsonObject;Lecd;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lecd;	b	deserialize
c	ece	net/minecraft/world/level/storage/loot/providers/number/ConstantValue
	m	(F)V	<init>	<init>
		p	1		value
	m	()Lecf;	a	getType
	m	(F)Lece;	a	exactly
		p	0		value
	m	(Ldyr;)F	b	getFloat
		p	1		context
	f	F	a	value
c	ece$a	net/minecraft/world/level/storage/loot/providers/number/ConstantValue$InlineSerializer
	m	(Lcom/google/gson/JsonElement;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	deserialize
		p	1		json
		p	2		context
	m	(Lece;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	a	serialize
		p	1		object
		p	2		context
	m	(Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	a	serialize
		p	1		object
		p	2		context
	m	(Lcom/google/gson/JsonElement;Lcom/google/gson/JsonDeserializationContext;)Lece;	b	deserialize
c	ece$b	net/minecraft/world/level/storage/loot/providers/number/ConstantValue$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	deserialize
		p	1		json
		p	2		context
	m	(Lcom/google/gson/JsonObject;Lece;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lece;	b	deserialize
c	ecf	net/minecraft/world/level/storage/loot/providers/number/LootNumberProviderType
	m	(Ldyx;)V	<init>	<init>
		p	1		jsonSerializer
c	ecg	net/minecraft/world/level/storage/loot/providers/number/NumberProvider
	m	()Lecf;	a	getType
	m	(Ldyr;)I	a	getInt
		p	1		context
	m	(Ldyr;)F	b	getFloat
		p	1		context
c	ech	net/minecraft/world/level/storage/loot/providers/number/NumberProviders
	m	()Ljava/lang/Object;	a	createGsonAdapter
	m	(Ljava/lang/String;Ldyx;)Lecf;	a	register
		p	0		id
		p	1		jsonSerializer
	f	Lecf;	a	CONSTANT
	f	Lecf;	b	UNIFORM
	f	Lecf;	c	BINOMIAL
	f	Lecf;	d	SCORE
c	eci	net/minecraft/world/level/storage/loot/providers/number/ScoreboardValue
	m	(Leco;Ljava/lang/String;F)V	<init>	<init>
		p	1		target
		p	2		score
		p	3		scale
	m	()Lecf;	a	getType
	m	(Ldyr$c;Ljava/lang/String;)Leci;	a	fromScoreboard
		p	0		target
		p	1		score
	m	(Ldyr$c;Ljava/lang/String;F)Leci;	a	fromScoreboard
		p	0		target
		p	1		score
		p	2		scale
	m	()Ljava/util/Set;	b	getReferencedContextParams
	m	(Ldyr;)F	b	getFloat
		p	1		context
	f	Leco;	a	target
	f	Ljava/lang/String;	b	score
	f	F	c	scale
c	eci$a	net/minecraft/world/level/storage/loot/providers/number/ScoreboardValue$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	deserialize
		p	1		json
		p	2		context
	m	(Lcom/google/gson/JsonObject;Leci;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Leci;	b	deserialize
c	ecj	net/minecraft/world/level/storage/loot/providers/number/UniformGenerator
	m	(Lecg;Lecg;)V	<init>	<init>
		p	1		min
		p	2		max
	m	()Lecf;	a	getType
	m	(FF)Lecj;	a	between
		p	0		min
		p	1		max
	m	(Ldyr;)I	a	getInt
		p	1		context
	m	()Ljava/util/Set;	b	getReferencedContextParams
	m	(Ldyr;)F	b	getFloat
		p	1		context
	f	Lecg;	a	min
	f	Lecg;	b	max
c	ecj$a	net/minecraft/world/level/storage/loot/providers/number/UniformGenerator$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	deserialize
		p	1		json
		p	2		context
	m	(Lcom/google/gson/JsonObject;Lecj;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lecj;	b	deserialize
c	eck	net/minecraft/world/level/storage/loot/providers/number/package-info
c	ecl	net/minecraft/world/level/storage/loot/providers/score/ContextScoreboardNameProvider
	m	(Ldyr$c;)V	<init>	<init>
		p	1		target
	m	()Lecn;	a	getType
	m	(Ldyr$c;)Leco;	a	forTarget
		p	0		target
	m	(Ldyr;)Ljava/lang/String;	a	getScoreboardName
		p	1		context
	m	()Ljava/util/Set;	b	getReferencedContextParams
	f	Ldyr$c;	a	target
c	ecl$a	net/minecraft/world/level/storage/loot/providers/score/ContextScoreboardNameProvider$InlineSerializer
	m	(Lcom/google/gson/JsonElement;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	deserialize
		p	1		json
		p	2		context
	m	(Lecl;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	a	serialize
		p	1		object
		p	2		context
	m	(Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	a	serialize
		p	1		object
		p	2		context
	m	(Lcom/google/gson/JsonElement;Lcom/google/gson/JsonDeserializationContext;)Lecl;	b	deserialize
c	ecl$b	net/minecraft/world/level/storage/loot/providers/score/ContextScoreboardNameProvider$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	deserialize
		p	1		json
		p	2		context
	m	(Lcom/google/gson/JsonObject;Lecl;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lecl;	b	deserialize
c	ecm	net/minecraft/world/level/storage/loot/providers/score/FixedScoreboardNameProvider
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		name
	m	()Lecn;	a	getType
	m	(Ldyr;)Ljava/lang/String;	a	getScoreboardName
		p	1		context
	m	(Ljava/lang/String;)Leco;	a	forName
		p	0		name
	m	()Ljava/util/Set;	b	getReferencedContextParams
	m	()Ljava/lang/String;	c	getName
	f	Ljava/lang/String;	a	name
c	ecm$a	net/minecraft/world/level/storage/loot/providers/score/FixedScoreboardNameProvider$Serializer
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object;	a	deserialize
		p	1		json
		p	2		context
	m	(Lcom/google/gson/JsonObject;Lecm;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V	a	serialize
		p	1		json
		p	2		object
		p	3		context
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lecm;	b	deserialize
c	ecn	net/minecraft/world/level/storage/loot/providers/score/LootScoreProviderType
	m	(Ldyx;)V	<init>	<init>
		p	1		jsonSerializer
c	eco	net/minecraft/world/level/storage/loot/providers/score/ScoreboardNameProvider
	m	()Lecn;	a	getType
	m	(Ldyr;)Ljava/lang/String;	a	getScoreboardName
		p	1		context
	m	()Ljava/util/Set;	b	getReferencedContextParams
c	ecp	net/minecraft/world/level/storage/loot/providers/score/ScoreboardNameProviders
	m	()Ljava/lang/Object;	a	createGsonAdapter
	m	(Ljava/lang/String;Ldyx;)Lecn;	a	register
		p	0		id
		p	1		jsonSerializer
	f	Lecn;	a	FIXED
	f	Lecn;	b	CONTEXT
c	ecq	net/minecraft/world/level/storage/loot/providers/score/package-info
c	ecr	net/minecraft/world/level/storage/package-info
c	ecs	net/minecraft/world/level/timers/FunctionCallback
	m	(Ladd;)V	<init>	<init>
		p	1		name
	m	(Ladr;Ldm;)V	a	lambda$handle$0
		p	1		function
	m	(Lnet/minecraft/server/MinecraftServer;Lecw;J)V	a	handle
	m	(Ljava/lang/Object;Lecw;J)V	handle	handle
		p	1		server
		p	2		events
		p	3		time
	f	Ladd;	a	functionId
c	ecs$a	net/minecraft/world/level/timers/FunctionCallback$Serializer
	m	(Lre;)Lecs;	a	deserialize
	m	(Lre;Lecs;)V	a	serialize
		p	1		nbt
		p	2		callback
	m	(Lre;Lecu;)V	a	serialize
		p	1		nbt
		p	2		callback
	m	(Lre;)Lecu;	b	deserialize
		p	1		nbt
c	ect	net/minecraft/world/level/timers/FunctionTagCallback
	m	(Ladd;)V	<init>	<init>
		p	1		name
	m	(Lnet/minecraft/server/MinecraftServer;Lecw;J)V	a	handle
	m	(Ljava/lang/Object;Lecw;J)V	handle	handle
		p	1		server
		p	2		events
		p	3		time
	f	Ladd;	a	tagId
c	ect$a	net/minecraft/world/level/timers/FunctionTagCallback$Serializer
	m	(Lre;)Lect;	a	deserialize
	m	(Lre;Lect;)V	a	serialize
		p	1		nbt
		p	2		callback
	m	(Lre;Lecu;)V	a	serialize
		p	1		nbt
		p	2		callback
	m	(Lre;)Lecu;	b	deserialize
		p	1		nbt
c	ecu	net/minecraft/world/level/timers/TimerCallback
	m	(Ljava/lang/Object;Lecw;J)V	handle	handle
		p	1		server
		p	2		events
		p	3		time
c	ecu$a	net/minecraft/world/level/timers/TimerCallback$Serializer
	m	(Ladd;Ljava/lang/Class;)V	<init>	<init>
		p	1		id
		p	2		callbackClass
	m	()Ladd;	a	getId
	m	(Lre;Lecu;)V	a	serialize
		p	1		nbt
		p	2		callback
	m	()Ljava/lang/Class;	b	getCls
	m	(Lre;)Lecu;	b	deserialize
		p	1		nbt
	f	Ladd;	a	id
	f	Ljava/lang/Class;	b	cls
c	ecv	net/minecraft/world/level/timers/TimerCallbacks
	m	(Lecu$a;)Lecv;	a	register
		p	1		serializer
	m	(Lecu;)Lre;	a	serialize
		p	1		callback
	m	(Ljava/lang/Class;)Lecu$a;	a	getSerializer
		p	1		clazz
	m	(Lre;)Lecu;	a	deserialize
		p	1		nbt
	f	Lecv;	a	SERVER_CALLBACKS
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ljava/util/Map;	c	idToSerializer
	f	Ljava/util/Map;	d	classToSerializer
c	ecw	net/minecraft/world/level/timers/TimerQueue
	m	(Lecv;)V	<init>	<init>
		p	1		timerCallbackSerializer
	m	(Lecv;Ljava/util/stream/Stream;)V	<init>	<init>
		p	1		timerCallbackSerializer
		p	2		nbts
	m	()Ljava/util/Set;	a	getEventsIds
	m	(Lcom/mojang/serialization/Dynamic;)V	a	lambda$new$2
		p	1		nbt
	m	(Lecw$a;)Lre;	a	storeEvent
		p	1		event
	m	(Ljava/lang/Object;J)V	a	tick
		p	1		server
		p	2		time
	m	(Ljava/lang/String;)I	a	remove
		p	1		name
	m	(Ljava/lang/String;JLecu;)V	a	schedule
		p	1		name
		p	2		triggerTime
		p	4		callback
	m	(Lre;)V	a	loadEvent
		p	1		nbt
	m	()Lrk;	b	store
	m	(Lecw$a;)Lcom/google/common/primitives/UnsignedLong;	b	lambda$createComparator$1
		p	0		event
	m	()Ljava/util/Comparator;	c	createComparator
	m	(Lecw$a;)J	c	lambda$createComparator$0
		p	0		event
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/lang/String;	b	CALLBACK_DATA_TAG
	f	Ljava/lang/String;	c	TIMER_NAME_TAG
	f	Ljava/lang/String;	d	TIMER_TRIGGER_TIME_TAG
	f	Lecv;	e	callbacksRegistry
	f	Ljava/util/Queue;	f	queue
	f	Lcom/google/common/primitives/UnsignedLong;	g	sequentialId
	f	Lcom/google/common/collect/Table;	h	events
c	ecw$a	net/minecraft/world/level/timers/TimerQueue$Event
	m	(JLcom/google/common/primitives/UnsignedLong;Ljava/lang/String;Lecu;)V	<init>	<init>
		p	1		triggerTime
		p	3		id
		p	4		name
		p	5		callback
	f	J	a	triggerTime
	f	Lcom/google/common/primitives/UnsignedLong;	b	sequentialId
	f	Ljava/lang/String;	c	id
	f	Lecu;	d	callback
c	ecx	net/minecraft/world/level/timers/package-info
c	ecy	net/minecraft/world/package-info
c	ecz	net/minecraft/world/phys/AABB
	m	(DDDDDD)V	<init>	<init>
		p	1		x1
		p	3		y1
		p	5		z1
		p	7		x2
		p	9		y2
		p	11		z2
	m	(Lede;Lede;)V	<init>	<init>
		p	1		pos1
		p	2		pos2
	m	(Lgt;)V	<init>	<init>
		p	1		pos
	m	(Lgt;Lgt;)V	<init>	<init>
		p	1		pos1
		p	2		pos2
	m	()D	a	getSize
	m	(D)Lecz;	a	setMinX
		p	1		minX
	m	(DDD)Lecz;	a	contract
		p	1		x
		p	3		y
		p	5		z
	m	(DDDDDD)Z	a	intersects
		p	1		minX
		p	3		minY
		p	5		minZ
		p	7		maxX
		p	9		maxY
		p	11		maxZ
	m	(Ldrh;)Lecz;	a	of
		p	0		mutable
	m	(Lecz;)Lecz;	a	intersect
		p	1		box
	m	(Lecz;Lede;[DLgz;DDD)Lgz;	a	getDirection
		p	0		box
		p	1		intersectingVector
		p	2		traceDistanceResult
		p	3		approachDirection
		p	4		deltaX
		p	6		deltaY
		p	8		deltaZ
	m	(Lede;)Lecz;	a	unitCubeFromLowerCorner
		p	0		pos
	m	(Lede;DDD)Lecz;	a	ofSize
		p	0		center
		p	1		dx
		p	3		dy
		p	5		dz
	m	(Lede;Lede;)Z	a	intersects
		p	1		pos1
		p	2		pos2
	m	(Lgt;)Lecz;	a	move
		p	1		blockPos
	m	(Lgz$a;)D	a	min
		p	1		axis
	m	(Ljava/lang/Iterable;Lede;Lede;Lgt;)Leda;	a	clip
		p	0		boxes
		p	1		from
		p	2		to
		p	3		pos
	m	([DLgz;DDDDDDDDLgz;DDD)Lgz;	a	clipPoint
		p	0		traceDistanceResult
		p	1		approachDirection
		p	2		deltaX
		p	4		deltaY
		p	6		deltaZ
		p	8		begin
		p	10		minX
		p	12		maxX
		p	14		minZ
		p	16		maxZ
		p	18		resultDirection
		p	19		startX
		p	21		startY
		p	23		startZ
	m	()D	b	getXsize
	m	(D)Lecz;	b	setMinY
		p	1		minY
	m	(DDD)Lecz;	b	expandTowards
		p	1		x
		p	3		y
		p	5		z
	m	(Lecz;)Lecz;	b	minmax
		p	1		box
	m	(Lede;)Lecz;	b	expandTowards
		p	1		scale
	m	(Lede;Lede;)Ljava/util/Optional;	b	clip
		p	1		min
		p	2		max
	m	(Lgz$a;)D	b	max
		p	1		axis
	m	()D	c	getYsize
	m	(D)Lecz;	c	setMinZ
		p	1		minZ
	m	(DDD)Lecz;	c	inflate
		p	1		x
		p	3		y
		p	5		z
	m	(Lecz;)Z	c	intersects
		p	1		box
	m	(Lede;)Lecz;	c	move
		p	1		vec
	m	()D	d	getZsize
	m	(D)Lecz;	d	setMaxX
		p	1		maxX
	m	(DDD)Lecz;	d	move
		p	1		x
		p	3		y
		p	5		z
	m	(Lede;)Z	d	contains
		p	1		pos
	m	()Z	e	hasNaN
	m	(D)Lecz;	e	setMaxY
		p	1		maxY
	m	(DDD)Z	e	contains
		p	1		x
		p	3		y
		p	5		z
	m	(Lede;)D	e	distanceToSqr
		p	1		pos
	m	()Lede;	f	getCenter
	m	(D)Lecz;	f	setMaxZ
		p	1		maxZ
	m	(DDD)Lecz;	f	deflate
		p	1		x
		p	3		y
		p	5		z
	m	(D)Lecz;	g	inflate
		p	1		value
	m	(D)Lecz;	h	deflate
		p	1		value
	f	D	a	minX
	f	D	b	minY
	f	D	c	minZ
	f	D	d	maxX
	f	D	e	maxY
	f	D	f	maxZ
	f	D	g	EPSILON
c	eda	net/minecraft/world/phys/BlockHitResult
	m	(Lede;Lgz;Lgt;Z)V	<init>	<init>
		p	1		pos
		p	2		side
		p	3		blockPos
		p	4		insideBlock
	m	(ZLede;Lgz;Lgt;Z)V	<init>	<init>
		p	1		missed
		p	2		pos
		p	3		side
		p	4		blockPos
		p	5		insideBlock
	m	()Lgt;	a	getBlockPos
	m	(Lede;Lgz;Lgt;)Leda;	a	miss
		p	0		pos
		p	1		side
		p	2		blockPos
	m	(Lgt;)Leda;	a	withPosition
		p	1		blockPos
	m	(Lgz;)Leda;	a	withDirection
		p	1		side
	m	()Lgz;	b	getDirection
	m	()Ledc$a;	c	getType
	m	()Z	d	isInside
	f	Lgz;	b	direction
	f	Lgt;	c	blockPos
	f	Z	d	miss
	f	Z	e	inside
c	edb	net/minecraft/world/phys/EntityHitResult
	m	(Lbfh;)V	<init>	<init>
		p	1		entity
	m	(Lbfh;Lede;)V	<init>	<init>
		p	1		entity
		p	2		pos
	m	()Lbfh;	a	getEntity
	m	()Ledc$a;	c	getType
	f	Lbfh;	b	entity
c	edc	net/minecraft/world/phys/HitResult
	m	(Lede;)V	<init>	<init>
		p	1		pos
	m	(Lbfh;)D	a	distanceTo
		p	1		entity
	m	()Ledc$a;	c	getType
	m	()Lede;	e	getLocation
	f	Lede;	a	location
c	edc$a	net/minecraft/world/phys/HitResult$Type
	m	()[Ledc$a;	a	$values
	f	Ledc$a;	a	MISS
	f	Ledc$a;	b	BLOCK
	f	Ledc$a;	c	ENTITY
	f	[Ledc$a;	d	$VALUES
c	edd	net/minecraft/world/phys/Vec2
	m	(FF)V	<init>	<init>
		p	1		x
		p	2		y
	m	()Ledd;	a	normalized
	m	(F)Ledd;	a	scale
		p	1		value
	m	(Ledd;)F	a	dot
		p	1		vec
	m	()F	b	length
	m	(F)Ledd;	b	add
		p	1		value
	m	(Ledd;)Ledd;	b	add
		p	1		vec
	m	()F	c	lengthSquared
	m	(Ledd;)Z	c	equals
		p	1		other
	m	()Ledd;	d	negated
	m	(Ledd;)F	d	distanceToSqr
		p	1		vec
	f	Ledd;	a	ZERO
	f	Ledd;	b	ONE
	f	Ledd;	c	UNIT_X
	f	Ledd;	d	NEG_UNIT_X
	f	Ledd;	e	UNIT_Y
	f	Ledd;	f	NEG_UNIT_Y
	f	Ledd;	g	MAX
	f	Ledd;	h	MIN
	f	F	i	x
	f	F	j	y
c	ede	net/minecraft/world/phys/Vec3
	m	(DDD)V	<init>	<init>
		p	1		x
		p	3		y
		p	5		z
	m	(Lorg/joml/Vector3f;)V	<init>	<init>
		p	1		vec
	m	()D	a	x
	m	(D)Lede;	a	scale
		p	1		value
	m	(DDD)Lede;	a	subtract
		p	1		x
		p	3		y
		p	5		z
	m	(F)Lede;	a	xRot
		p	1		angle
	m	(FF)Lede;	a	directionFromRotation
		p	0		pitch
		p	1		yaw
	m	(I)Lede;	a	fromRGB24
		p	0		rgb
	m	(Lapo;F)Lede;	a	offsetRandom
		p	1		random
		p	2		multiplier
	m	(Ledd;)Lede;	a	directionFromRotation
		p	0		polar
	m	(Lede;)Lede;	a	vectorTo
		p	1		vec
	m	(Lede;D)Lede;	a	lerp
		p	1		to
		p	2		delta
	m	(Lgz$a;)D	a	get
		p	1		axis
	m	(Lgz$a;D)Lede;	a	with
		p	1		axis
		p	2		value
	m	(Lgz;D)Lede;	a	relative
		p	1		direction
		p	2		value
	m	(Lhn;D)Z	a	closerThan
		p	1		pos
		p	2		radius
	m	(Lhy;)Lede;	a	atLowerCornerOf
		p	0		vec
	m	(Lhy;D)Lede;	a	upFromBottomCenterOf
		p	0		vec
		p	1		deltaY
	m	(Lhy;DDD)Lede;	a	atLowerCornerWithOffset
		p	0		vec
		p	1		deltaX
		p	3		deltaY
		p	5		deltaZ
	m	(Ljava/util/EnumSet;)Lede;	a	align
		p	1		axes
	m	(Ljava/util/List;)Lcom/mojang/serialization/DataResult;	a	lambda$static$1
		p	0		coordinates
	m	()D	b	y
	m	(DDD)Lede;	b	add
		p	1		x
		p	3		y
		p	5		z
	m	(F)Lede;	b	yRot
		p	1		angle
	m	(Lede;)D	b	dot
		p	1		vec
	m	(Lhy;)Lede;	b	atCenterOf
		p	0		vec
	m	(Ljava/util/List;)Lede;	b	lambda$static$0
		p	0		coords
	m	()D	c	z
	m	(DDD)D	c	distanceToSqr
		p	1		x
		p	3		y
		p	5		z
	m	(F)Lede;	c	zRot
		p	1		angle
	m	(Lede;)Lede;	c	cross
		p	1		vec
	m	(Lhy;)Lede;	c	atBottomCenterOf
		p	0		vec
	m	()Lede;	d	normalize
	m	(DDD)Lede;	d	multiply
		p	1		x
		p	3		y
		p	5		z
	m	(Lede;)Lede;	d	subtract
		p	1		vec
	m	()Lede;	e	reverse
	m	(Lede;)Lede;	e	add
		p	1		vec
	m	()D	f	length
	m	(Lede;)D	f	distanceTo
		p	1		vec
	m	()D	g	lengthSqr
	m	(Lede;)D	g	distanceToSqr
		p	1		vec
	m	()D	h	horizontalDistance
	m	(Lede;)Lede;	h	multiply
		p	1		vec
	m	()D	i	horizontalDistanceSqr
	m	(Lede;)Ljava/util/List;	i	lambda$static$2
		p	0		vec
	m	()Lorg/joml/Vector3f;	j	toVector3f
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lede;	b	ZERO
	f	D	c	x
	f	D	d	y
	f	D	e	z
c	edf	net/minecraft/world/phys/package-info
c	edg	net/minecraft/world/phys/shapes/ArrayVoxelShape
	m	(Ledn;Lit/unimi/dsi/fastutil/doubles/DoubleList;Lit/unimi/dsi/fastutil/doubles/DoubleList;Lit/unimi/dsi/fastutil/doubles/DoubleList;)V	<init>	<init>
		p	1		shape
		p	2		xPoints
		p	3		yPoints
		p	4		zPoints
	m	(Ledn;[D[D[D)V	<init>	<init>
		p	1		shape
		p	2		xPoints
		p	3		yPoints
		p	4		zPoints
	m	(Lgz$a;)Lit/unimi/dsi/fastutil/doubles/DoubleList;	a	getCoords
		p	1		axis
	f	Lit/unimi/dsi/fastutil/doubles/DoubleList;	b	xs
	f	Lit/unimi/dsi/fastutil/doubles/DoubleList;	c	ys
	f	Lit/unimi/dsi/fastutil/doubles/DoubleList;	d	zs
c	edg$1	net/minecraft/world/phys/shapes/ArrayVoxelShape$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction$Axis
c	edh	net/minecraft/world/phys/shapes/BitSetDiscreteVoxelShape
	m	(III)V	<init>	<init>
		p	1		sizeX
		p	2		sizeY
		p	3		sizeZ
	m	(Ledn;)V	<init>	<init>
		p	1		other
	m	()Z	a	isEmpty
	m	(III)I	a	getIndex
		p	1		x
		p	2		y
		p	3		z
	m	(IIII)Z	a	isZStripFull
		p	1		z1
		p	2		z2
		p	3		x
		p	4		y
	m	(IIIII)Z	a	isXZRectangleFull
		p	1		x1
		p	2		x2
		p	3		z1
		p	4		z2
		p	5		y
	m	(IIIIIIIII)Ledh;	a	withFilledBounds
		p	0		sizeX
		p	1		sizeY
		p	2		sizeZ
		p	3		minX
		p	4		minY
		p	5		minZ
		p	6		maxX
		p	7		maxY
		p	8		maxZ
	m	(IIIZ)V	a	fillUpdateBounds
		p	1		x
		p	2		y
		p	3		z
		p	4		updateBounds
	m	(Ledi;Ledn;IILedn;IILedh;II[I[ZIII)Z	a	lambda$join$0
		p	12		z1
		p	13		z2
		p	14		zIndex
	m	(Ledn;Ledn$b;Z)V	a	forAllBoxes
		p	0		voxelSet
		p	1		callback
		p	2		coalesce
	m	(Ledn;Ledn;Ledq;Ledq;Ledq;Ledi;)Ledh;	a	join
		p	0		first
		p	1		second
		p	2		xPoints
		p	3		yPoints
		p	4		zPoints
		p	5		function
	m	(Ledq;Ledi;Ledn;ILedn;ILedh;I[I[ZIII)Z	a	lambda$join$1
		p	10		y1
		p	11		y2
		p	12		yIndex
	m	(Ledq;Ledq;Ledi;Ledn;Ledn;Ledh;[IIII)Z	a	lambda$join$2
		p	7		x1
		p	8		x2
		p	9		xIndex
	m	(Lgz$a;)I	a	firstFull
		p	1		axis
	m	(III)Z	b	isFull
		p	1		x
		p	2		y
		p	3		z
	m	(IIII)V	b	clearZStrip
		p	1		z1
		p	2		z2
		p	3		x
		p	4		y
	m	(Lgz$a;)I	b	lastFull
		p	1		axis
	m	(III)V	c	fill
		p	1		x
		p	2		y
		p	3		z
	f	Ljava/util/BitSet;	d	storage
	f	I	e	xMin
	f	I	f	yMin
	f	I	g	zMin
	f	I	h	xMax
	f	I	i	yMax
	f	I	j	zMax
c	edi	net/minecraft/world/phys/shapes/BooleanOp
	m	(ZZ)Z	a	lambda$static$15
		p	0		a
		p	1		b
	m	(ZZ)Z	apply	apply
		p	1		a
		p	2		b
	m	(ZZ)Z	b	lambda$static$14
		p	0		a
		p	1		b
	m	(ZZ)Z	c	lambda$static$13
		p	0		a
		p	1		b
	m	(ZZ)Z	d	lambda$static$12
		p	0		a
		p	1		b
	m	(ZZ)Z	e	lambda$static$11
		p	0		a
		p	1		b
	m	(ZZ)Z	f	lambda$static$10
		p	0		a
		p	1		b
	m	(ZZ)Z	g	lambda$static$9
		p	0		a
		p	1		b
	m	(ZZ)Z	h	lambda$static$8
		p	0		a
		p	1		b
	m	(ZZ)Z	i	lambda$static$7
		p	0		a
		p	1		b
	m	(ZZ)Z	j	lambda$static$6
		p	0		a
		p	1		b
	m	(ZZ)Z	k	lambda$static$5
		p	0		a
		p	1		b
	m	(ZZ)Z	l	lambda$static$4
		p	0		a
		p	1		b
	m	(ZZ)Z	m	lambda$static$3
		p	0		a
		p	1		b
	m	(ZZ)Z	n	lambda$static$2
		p	0		a
		p	1		b
	m	(ZZ)Z	o	lambda$static$1
		p	0		a
		p	1		b
	m	(ZZ)Z	p	lambda$static$0
		p	0		a
		p	1		b
	f	Ledi;	a	FALSE
	f	Ledi;	b	NOT_OR
	f	Ledi;	c	ONLY_SECOND
	f	Ledi;	d	NOT_FIRST
	f	Ledi;	e	ONLY_FIRST
	f	Ledi;	f	NOT_SECOND
	f	Ledi;	g	NOT_SAME
	f	Ledi;	h	NOT_AND
	f	Ledi;	i	AND
	f	Ledi;	j	SAME
	f	Ledi;	k	SECOND
	f	Ledi;	l	CAUSES
	f	Ledi;	m	FIRST
	f	Ledi;	n	CAUSED_BY
	f	Ledi;	o	OR
	f	Ledi;	p	TRUE
c	edj	net/minecraft/world/phys/shapes/CollisionContext
	m	()Ledj;	a	empty
	m	(Lbfh;)Ledj;	a	of
		p	0		entity
	m	(Lcfq;)Z	a	isHoldingItem
		p	1		item
	m	(Ldwj;Ldwj;)Z	a	canStandOnFluid
		p	1		stateAbove
		p	2		state
	m	(Ledx;Lgt;Z)Z	a	isAbove
		p	1		shape
		p	2		pos
		p	3		defaultValue
	m	()Z	b	isDescending
c	edk	net/minecraft/world/phys/shapes/CubePointRange
	m	(I)V	<init>	<init>
		p	1		sectionCount
	f	I	a	parts
c	edl	net/minecraft/world/phys/shapes/CubeVoxelShape
	m	(Ledn;)V	<init>	<init>
		p	1		voxels
	m	(Lgz$a;)Lit/unimi/dsi/fastutil/doubles/DoubleList;	a	getCoords
		p	1		axis
	m	(Lgz$a;D)I	a	findIndex
		p	1		axis
		p	2		coord
c	edm	net/minecraft/world/phys/shapes/DiscreteCubeMerger
	m	()Lit/unimi/dsi/fastutil/doubles/DoubleList;	a	getList
	m	(Ledq$a;)Z	a	forMergedIndexes
		p	1		predicate
	f	Ledk;	a	result
	f	I	b	firstDiv
	f	I	c	secondDiv
c	edn	net/minecraft/world/phys/shapes/DiscreteVoxelShape
	m	(III)V	<init>	<init>
		p	1		sizeX
		p	2		sizeY
		p	3		sizeZ
	m	()Z	a	isEmpty
	m	(Ledn$a;)V	a	forAllFaces
	m	(Ledn$a;Lgr;)V	a	forAllAxisFaces
		p	2		direction
	m	(Ledn$b;Lgr;Z)V	a	forAllAxisEdges
		p	1		callback
		p	2		direction
		p	3		coalesce
	m	(Ledn$b;Z)V	a	forAllEdges
		p	1		callback
		p	2		coalesce
	m	(Lgr;III)Z	a	isFullWide
		p	1		cycle
		p	2		x
		p	3		y
		p	4		z
	m	(Lgz$a;)I	a	firstFull
		p	1		axis
	m	(Lgz$a;II)I	a	firstFull
		p	1		axis
		p	2		from
		p	3		to
	m	()I	b	getXSize
	m	(III)Z	b	isFull
		p	1		x
		p	2		y
		p	3		z
	m	(Ledn$b;Z)V	b	forAllBoxes
		p	1		consumer
		p	2		coalesce
	m	(Lgr;III)Z	b	isFull
		p	1		cycle
		p	2		x
		p	3		y
		p	4		z
	m	(Lgz$a;)I	b	lastFull
		p	1		axis
	m	(Lgz$a;II)I	b	lastFull
		p	1		axis
		p	2		from
		p	3		to
	m	()I	c	getYSize
	m	(III)V	c	fill
		p	1		x
		p	2		y
		p	3		z
	m	(Lgz$a;)I	c	getSize
		p	1		axis
	m	()I	d	getZSize
	m	(III)Z	d	isFullWide
		p	1		x
		p	2		y
		p	3		z
	f	I	a	xSize
	f	I	b	ySize
	f	I	c	zSize
	f	[Lgz$a;	d	AXIS_VALUES
c	edn$a	net/minecraft/world/phys/shapes/DiscreteVoxelShape$IntFaceConsumer
	m	(Lgz;III)V	consume	consume
		p	1		direction
		p	2		x
		p	3		y
		p	4		z
c	edn$b	net/minecraft/world/phys/shapes/DiscreteVoxelShape$IntLineConsumer
	m	(IIIIII)V	consume	consume
		p	1		x1
		p	2		y1
		p	3		z1
		p	4		x2
		p	5		y2
		p	6		z2
c	edo	net/minecraft/world/phys/shapes/EntityCollisionContext
	m	(Lbfh;)V	<init>	<init>
		p	1		entity
	m	(ZDLcfv;Ljava/util/function/Predicate;Lbfh;)V	<init>	<init>
		p	1		descending
		p	2		minY
		p	4		heldItem
		p	5		walkOnFluidPredicate
		p	6		entity
	m	(Lcfq;)Z	a	isHoldingItem
		p	1		item
	m	(Ldwj;)Z	a	lambda$new$1
	m	(Ldwj;Ldwj;)Z	a	canStandOnFluid
		p	1		stateAbove
		p	2		state
	m	(Ledx;Lgt;Z)Z	a	isAbove
		p	1		shape
		p	2		pos
		p	3		defaultValue
	m	()Z	b	isDescending
	m	(Ldwj;)Z	b	lambda$static$0
	m	()Lbfh;	c	getEntity
	f	Ledj;	a	EMPTY
	f	Z	b	descending
	f	D	c	entityBottom
	f	Lcfv;	d	heldItem
	f	Ljava/util/function/Predicate;	e	canStandOnFluid
	f	Lbfh;	f	entity
c	edo$1	net/minecraft/world/phys/shapes/EntityCollisionContext$1
	m	(ZDLcfv;Ljava/util/function/Predicate;Lbfh;)V	<init>	<init>
		p	1		descending
		p	2		minY
		p	4		heldItem
		p	5		walkOnFluidPredicate
		p	6		entity
	m	(Ledx;Lgt;Z)Z	a	isAbove
		p	1		shape
		p	2		pos
		p	3		defaultValue
c	edp	net/minecraft/world/phys/shapes/IdenticalMerger
	m	(Lit/unimi/dsi/fastutil/doubles/DoubleList;)V	<init>	<init>
		p	1		values
	m	()Lit/unimi/dsi/fastutil/doubles/DoubleList;	a	getList
	m	(Ledq$a;)Z	a	forMergedIndexes
		p	1		predicate
	f	Lit/unimi/dsi/fastutil/doubles/DoubleList;	a	coords
c	edq	net/minecraft/world/phys/shapes/IndexMerger
	m	()Lit/unimi/dsi/fastutil/doubles/DoubleList;	a	getList
	m	(Ledq$a;)Z	a	forMergedIndexes
		p	1		predicate
c	edq$a	net/minecraft/world/phys/shapes/IndexMerger$IndexConsumer
	m	(III)Z	merge	merge
		p	1		x
		p	2		y
		p	3		index
c	edr	net/minecraft/world/phys/shapes/IndirectMerger
	m	(Lit/unimi/dsi/fastutil/doubles/DoubleList;Lit/unimi/dsi/fastutil/doubles/DoubleList;ZZ)V	<init>	<init>
		p	1		first
		p	2		second
		p	3		includeFirstOnly
		p	4		includeSecondOnly
	m	()Lit/unimi/dsi/fastutil/doubles/DoubleList;	a	getList
	m	(Ledq$a;)Z	a	forMergedIndexes
		p	1		predicate
	f	Lit/unimi/dsi/fastutil/doubles/DoubleList;	a	EMPTY
	f	[D	b	result
	f	[I	c	firstIndices
	f	[I	d	secondIndices
	f	I	e	resultLength
c	eds	net/minecraft/world/phys/shapes/NonOverlappingMerger
	m	(Lit/unimi/dsi/fastutil/doubles/DoubleList;Lit/unimi/dsi/fastutil/doubles/DoubleList;Z)V	<init>	<init>
		p	1		first
		p	2		second
		p	3		inverted
	m	()Lit/unimi/dsi/fastutil/doubles/DoubleList;	a	getList
	m	(Ledq$a;)Z	a	forMergedIndexes
		p	1		predicate
	m	(Ledq$a;III)Z	a	lambda$forMergedIndexes$0
		p	1		x
		p	2		y
		p	3		index
	m	(Ledq$a;)Z	b	forNonSwappedIndexes
		p	1		predicate
	f	Lit/unimi/dsi/fastutil/doubles/DoubleList;	a	lower
	f	Lit/unimi/dsi/fastutil/doubles/DoubleList;	b	upper
	f	Z	c	swap
c	edt	net/minecraft/world/phys/shapes/OffsetDoubleList
	m	(Lit/unimi/dsi/fastutil/doubles/DoubleList;D)V	<init>	<init>
		p	1		oldList
		p	2		offset
	f	Lit/unimi/dsi/fastutil/doubles/DoubleList;	a	delegate
	f	D	b	offset
c	edu	net/minecraft/world/phys/shapes/Shapes
	m	()Ledx;	a	empty
	m	(DD)I	a	findBits
		p	0		min
		p	2		max
	m	(DDDDDD)Ledx;	a	box
		p	0		minX
		p	2		minY
		p	4		minZ
		p	6		maxX
		p	8		maxY
		p	10		maxZ
	m	(II)J	a	lcm
		p	0		a
		p	1		b
	m	(ILit/unimi/dsi/fastutil/doubles/DoubleList;Lit/unimi/dsi/fastutil/doubles/DoubleList;ZZ)Ledq;	a	createIndexMerger
		p	0		size
		p	1		first
		p	2		second
		p	3		includeFirst
		p	4		includeSecond
	m	(Lecz;)Ledx;	a	create
		p	0		box
	m	(Ledi;Ledn;IILedn;IIIII)Z	a	lambda$joinIsNotEmpty$1
		p	7		z1
		p	8		z2
		p	9		index3
	m	(Ledq;Ledi;Ledn;ILedn;IIII)Z	a	lambda$joinIsNotEmpty$2
		p	6		y1
		p	7		y2
		p	8		index2
	m	(Ledq;Ledq;Ledi;Ledn;Ledn;III)Z	a	lambda$joinIsNotEmpty$3
		p	5		x1
		p	6		x2
		p	7		index1
	m	(Ledq;Ledq;Ledq;Ledn;Ledn;Ledi;)Z	a	joinIsNotEmpty
		p	0		mergedX
		p	1		mergedY
		p	2		mergedZ
		p	3		shape1
		p	4		shape2
		p	5		predicate
	m	(Ledx;Ledx;)Ledx;	a	or
		p	0		first
		p	1		second
	m	(Ledx;Ledx;Ledi;)Ledx;	a	join
		p	0		first
		p	1		second
		p	2		function
	m	(Ledx;Ledx;Lgz;)Z	a	blockOccudes
		p	0		shape
		p	1		neighbor
		p	2		direction
	m	(Ledx;Lgz;)Ledx;	a	getFaceShape
		p	0		shape
		p	1		direction
	m	(Ledx;[Ledx;)Ledx;	a	or
		p	0		first
		p	1		others
	m	(Lgz$a;Lecz;Ljava/lang/Iterable;D)D	a	collide
		p	0		axis
		p	1		box
		p	2		shapes
		p	3		maxDist
	m	()Ledx;	b	block
	m	(DDDDDD)Ledx;	b	create
		p	0		minX
		p	2		minY
		p	4		minZ
		p	6		maxX
		p	8		maxY
		p	10		maxZ
	m	(Ledx;Ledx;)Z	b	faceShapeOccludes
		p	0		one
		p	1		two
	m	(Ledx;Ledx;Ledi;)Ledx;	b	joinUnoptimized
		p	0		one
		p	1		two
		p	2		function
	m	(Ledx;Ledx;Lgz;)Z	b	mergedFaceOccludes
		p	0		one
		p	1		two
		p	2		direction
	m	()Ledl;	c	lambda$static$0
	m	(Ledx;Ledx;Ledi;)Z	c	joinIsNotEmpty
		p	0		shape1
		p	1		shape2
		p	2		predicate
	f	D	a	EPSILON
	f	D	b	BIG_EPSILON
	f	Ledx;	c	INFINITY
	f	Ledx;	d	BLOCK
	f	Ledx;	e	EMPTY
c	edu$a	net/minecraft/world/phys/shapes/Shapes$DoubleLineConsumer
	m	(DDDDDD)V	consume	consume
		p	1		minX
		p	3		minY
		p	5		minZ
		p	7		maxX
		p	9		maxY
		p	11		maxZ
c	edv	net/minecraft/world/phys/shapes/SliceShape
	m	(Ledx;Lgz$a;I)V	<init>	<init>
		p	1		shape
		p	2		axis
		p	3		sliceWidth
	m	(Ledn;Lgz$a;I)Ledn;	a	makeSlice
		p	0		voxelSet
		p	1		axis
		p	2		sliceWidth
	m	(Lgz$a;)Lit/unimi/dsi/fastutil/doubles/DoubleList;	a	getCoords
		p	1		axis
	f	Ledx;	b	delegate
	f	Lgz$a;	c	axis
	f	Lit/unimi/dsi/fastutil/doubles/DoubleList;	d	SLICE_COORDS
c	edw	net/minecraft/world/phys/shapes/SubShape
	m	(Ledn;IIIIII)V	<init>	<init>
		p	1		parent
		p	2		minX
		p	3		minY
		p	4		minZ
		p	5		maxX
		p	6		maxY
		p	7		maxZ
	m	(Lgz$a;)I	a	firstFull
		p	1		axis
	m	(Lgz$a;I)I	a	clampToShape
		p	1		axis
		p	2		value
	m	(III)Z	b	isFull
		p	1		x
		p	2		y
		p	3		z
	m	(Lgz$a;)I	b	lastFull
		p	1		axis
	m	(III)V	c	fill
		p	1		x
		p	2		y
		p	3		z
	f	Ledn;	d	parent
	f	I	e	startX
	f	I	f	startY
	f	I	g	startZ
	f	I	h	endX
	f	I	i	endY
	f	I	j	endZ
c	edx	net/minecraft/world/phys/shapes/VoxelShape
	m	(Ledn;)V	<init>	<init>
		p	1		voxels
	m	()Lecz;	a	bounds
	m	(DDD)Ledx;	a	move
		p	1		x
		p	3		y
		p	5		z
	m	(DLgz$a;I)Z	a	lambda$findIndex$4
	m	(Lede;)Ljava/util/Optional;	a	closestPointTo
		p	1		target
	m	(Lede;Lede;Lgt;)Leda;	a	clip
		p	1		start
		p	2		end
		p	3		pos
	m	(Lede;[Lede;DDDDDD)V	a	lambda$closestPointTo$5
		p	2		minX
		p	4		minY
		p	6		minZ
		p	8		maxX
		p	10		maxY
		p	12		maxZ
	m	(Ledu$a;)V	a	forAllEdges
		p	1		consumer
	m	(Ledu$a;IIIIII)V	a	lambda$forAllEdges$1
		p	2		minX
		p	3		minY
		p	4		minZ
		p	5		maxX
		p	6		maxY
		p	7		maxZ
	m	(Ledu$a;Lit/unimi/dsi/fastutil/doubles/DoubleList;Lit/unimi/dsi/fastutil/doubles/DoubleList;Lit/unimi/dsi/fastutil/doubles/DoubleList;IIIIII)V	a	lambda$forAllBoxes$2
		p	4		minX
		p	5		minY
		p	6		minZ
		p	7		maxX
		p	8		maxY
		p	9		maxZ
	m	(Lgr;Lecz;D)D	a	collideX
		p	1		axisCycle
		p	2		box
		p	3		maxDist
	m	(Lgz$a;)Lit/unimi/dsi/fastutil/doubles/DoubleList;	a	getCoords
		p	1		axis
	m	(Lgz$a;D)I	a	findIndex
		p	1		axis
		p	2		coord
	m	(Lgz$a;DD)D	a	min
		p	1		axis
		p	2		from
		p	4		to
	m	(Lgz$a;I)D	a	get
		p	1		axis
		p	2		index
	m	(Lgz$a;Lecz;D)D	a	collide
		p	1		axis
		p	2		box
		p	3		maxDist
	m	(Lgz;)Ledx;	a	getFaceShape
		p	1		facing
	m	(Ljava/util/List;DDDDDD)V	a	lambda$toAabbs$3
		p	1		x1
		p	3		y1
		p	5		z1
		p	7		x2
		p	9		y2
		p	11		z2
	m	([Ledx;DDDDDD)V	a	lambda$optimize$0
		p	1		minX
		p	3		minY
		p	5		minZ
		p	7		maxX
		p	9		maxY
		p	11		maxZ
	m	()Z	b	isEmpty
	m	(Ledu$a;)V	b	forAllBoxes
		p	1		consumer
	m	(Lgz$a;)D	b	min
		p	1		axis
	m	(Lgz$a;DD)D	b	max
		p	1		axis
		p	2		from
		p	4		to
	m	(Lgz;)Ledx;	b	calculateFace
		p	1		direction
	m	()Ledx;	c	optimize
	m	(Lgz$a;)D	c	max
		p	1		axis
	m	()Ljava/util/List;	d	toAabbs
	f	Ledn;	a	shape
	f	[Ledx;	b	faces
c	edy	net/minecraft/world/phys/shapes/package-info
c	edz	net/minecraft/world/scores/Objective
	m	(Leec;Ljava/lang/String;Leef;Ltj;Leef$a;)V	<init>	<init>
		p	1		scoreboard
		p	2		name
		p	3		criterion
		p	4		displayName
		p	5		renderType
	m	()Leec;	a	getScoreboard
	m	(Leef$a;)V	a	setRenderType
		p	1		renderType
	m	(Ltj;)V	a	setDisplayName
		p	1		name
	m	(Luf;)Luf;	a	lambda$createFormattedDisplayName$0
		p	1		style
	m	()Ljava/lang/String;	b	getName
	m	()Leef;	c	getCriteria
	m	()Ltj;	d	getDisplayName
	m	()Ltj;	e	getFormattedDisplayName
	m	()Leef$a;	f	getRenderType
	m	()Ltj;	g	createFormattedDisplayName
	f	Leec;	a	scoreboard
	f	Ljava/lang/String;	b	name
	f	Leef;	c	criteria
	f	Ltj;	d	displayName
	f	Ltj;	e	formattedDisplayName
	f	Leef$a;	f	renderType
c	eea	net/minecraft/world/scores/PlayerTeam
	m	(Leec;Ljava/lang/String;)V	<init>	<init>
		p	1		scoreboard
		p	2		name
	m	()Leec;	a	getScoreboard
	m	(I)V	a	unpackOptions
		p	1		flags
	m	(Leee$a;)V	a	setCollisionRule
		p	1		collisionRule
	m	(Leee$b;)V	a	setNameTagVisibility
		p	1		nameTagVisibilityRule
	m	(Leee;Ltj;)Ltw;	a	formatNameForTeam
		p	0		team
		p	1		name
	m	(Ln;)V	a	setColor
		p	1		color
	m	(Ltj;)V	a	setDisplayName
		p	1		displayName
	m	(Z)V	a	setAllowFriendlyFire
		p	1		friendlyFire
	m	()Ljava/lang/String;	b	getName
	m	(Leee$b;)V	b	setDeathMessageVisibility
		p	1		deathMessageVisibilityRule
	m	(Ltj;)V	b	setPlayerPrefix
		p	1		prefix
	m	(Z)V	b	setSeeFriendlyInvisibles
		p	1		showFriendlyInvisible
	m	()Ltj;	c	getDisplayName
	m	(Ltj;)V	c	setPlayerSuffix
		p	1		suffix
	m	()Ltw;	d	getFormattedDisplayName
	m	(Ltj;)Ltw;	d	getFormattedName
		p	1		name
	m	()Ltj;	e	getPlayerPrefix
	m	()Ltj;	f	getPlayerSuffix
	m	()Ljava/util/Collection;	g	getPlayers
	m	()Z	h	isAllowFriendlyFire
	m	()Z	i	canSeeFriendlyInvisibles
	m	()Leee$b;	j	getNameTagVisibility
	m	()Leee$b;	k	getDeathMessageVisibility
	m	()Leee$a;	l	getCollisionRule
	m	()I	m	packOptions
	m	()Ln;	n	getColor
	f	I	a	BIT_FRIENDLY_FIRE
	f	I	b	BIT_SEE_INVISIBLES
	f	Leec;	c	scoreboard
	f	Ljava/lang/String;	d	name
	f	Ljava/util/Set;	e	players
	f	Ltj;	f	displayName
	f	Ltj;	g	playerPrefix
	f	Ltj;	h	playerSuffix
	f	Z	i	allowFriendlyFire
	f	Z	j	seeFriendlyInvisibles
	f	Leee$b;	k	nameTagVisibility
	f	Leee$b;	l	deathMessageVisibility
	f	Ln;	m	color
	f	Leee$a;	n	collisionRule
	f	Luf;	o	displayNameStyle
c	eeb	net/minecraft/world/scores/Score
	m	(Leec;Ledz;Ljava/lang/String;)V	<init>	<init>
		p	1		scoreboard
		p	2		objective
		p	3		playerName
	m	()V	a	increment
	m	(I)V	a	add
		p	1		amount
	m	(Leeb;Leeb;)I	a	lambda$static$0
		p	0		a
		p	1		b
	m	(Z)V	a	setLocked
		p	1		locked
	m	()I	b	getScore
	m	(I)V	b	setScore
		p	1		score
	m	()V	c	reset
	m	()Ledz;	d	getObjective
	m	()Ljava/lang/String;	e	getOwner
	m	()Leec;	f	getScoreboard
	m	()Z	g	isLocked
	f	Ljava/util/Comparator;	a	SCORE_COMPARATOR
	f	Leec;	b	scoreboard
	f	Ledz;	c	objective
	f	Ljava/lang/String;	d	owner
	f	I	e	count
	f	Z	f	locked
	f	Z	g	forceUpdate
c	eec	net/minecraft/world/scores/Scoreboard
	m	(I)Ledz;	a	getDisplayObjective
		p	1		slot
	m	(ILedz;)V	a	setDisplayObjective
		p	1		slot
		p	2		objective
	m	(Lbfh;)V	a	entityRemoved
		p	1		entity
	m	(Ledz;)V	a	onObjectiveAdded
		p	1		objective
	m	(Leea;)V	a	onTeamAdded
		p	1		team
	m	(Leeb;)V	a	onScoreChanged
		p	1		score
	m	(Leef;)Ljava/util/List;	a	lambda$addObjective$0
		p	0		criterion
	m	(Leef;Ljava/lang/String;Ljava/util/function/Consumer;)V	a	forAllObjectives
		p	1		criterion
		p	2		player
		p	3		action
	m	(Ljava/lang/String;)V	a	onPlayerRemoved
		p	1		playerName
	m	(Ljava/lang/String;Ledz;)V	a	onPlayerScoreRemoved
		p	1		playerName
		p	2		objective
	m	(Ljava/lang/String;Leea;)Z	a	addPlayerToTeam
		p	1		playerName
		p	2		team
	m	(Ljava/lang/String;Leef;Ltj;Leef$a;)Ledz;	a	addObjective
		p	1		name
		p	2		criterion
		p	3		displayName
		p	4		renderType
	m	(Ljava/util/function/Consumer;Ljava/lang/String;Ledz;)V	a	lambda$forAllObjectives$1
		p	3		objective
	m	(Lrk;)V	a	loadPlayerScores
		p	1		list
	m	(Lrk;Leeb;)V	a	lambda$savePlayerScores$5
		p	1		score
	m	(Lrk;Ljava/util/Collection;)V	a	lambda$savePlayerScores$6
		p	1		scores
	m	(I)Ljava/lang/String;	b	getDisplaySlotName
		p	0		slotId
	m	(Ledz;)V	b	onObjectiveChanged
		p	1		objective
	m	(Leea;)V	b	onTeamChanged
		p	1		team
	m	(Leeb;)Z	b	lambda$savePlayerScores$4
		p	0		score
	m	(Ljava/lang/String;)Z	b	hasObjective
		p	1		name
	m	(Ljava/lang/String;Ledz;)Z	b	hasPlayerScore
		p	1		playerName
		p	2		objective
	m	(Ljava/lang/String;Leea;)V	b	removePlayerFromTeam
		p	1		playerName
		p	2		team
	m	()Ljava/util/Collection;	c	getObjectives
	m	(Ledz;)V	c	onObjectiveRemoved
		p	1		objective
	m	(Leea;)V	c	onTeamRemoved
		p	1		team
	m	(Ljava/lang/String;)Ledz;	c	getOrCreateObjective
		p	1		name
	m	(Ljava/lang/String;Ledz;)Leeb;	c	getOrCreatePlayerScore
		p	1		playerName
		p	2		objective
	m	()Ljava/util/Collection;	d	getObjectiveNames
	m	(Leea;)V	d	removePlayerTeam
		p	1		team
	m	(Ljava/lang/String;)Ledz;	d	getObjective
		p	1		name
	m	(Ljava/lang/String;Ledz;)V	d	resetPlayerScore
		p	1		playerName
		p	2		objective
	m	()Ljava/util/Collection;	e	getTrackedPlayers
	m	(Ljava/lang/String;)Ljava/util/Map;	e	getPlayerScores
		p	1		playerName
	m	(Ljava/lang/String;Ledz;)Leeb;	e	lambda$getOrCreatePlayerScore$3
		p	2		objective
	m	()Ljava/util/Collection;	f	getTeamNames
	m	(Ljava/lang/String;)Leea;	f	getPlayerTeam
		p	1		name
	m	()Ljava/util/Collection;	g	getPlayerTeams
	m	(Ljava/lang/String;)Leea;	g	addPlayerTeam
		p	1		name
	m	()[Ljava/lang/String;	h	getDisplaySlotNames
	m	(Ljava/lang/String;)Z	h	removePlayerFromTeam
		p	1		playerName
	m	()Lrk;	i	savePlayerScores
	m	(Ledz;)Ljava/util/Collection;	i	getPlayerScores
		p	1		objective
	m	(Ljava/lang/String;)Leea;	i	getPlayersTeam
		p	1		playerName
	m	(Ledz;)V	j	removeObjective
		p	1		objective
	m	(Ljava/lang/String;)I	j	getDisplaySlotByName
		p	0		slotName
	m	(Ljava/lang/String;)Ljava/util/Map;	k	lambda$getOrCreatePlayerScore$2
		p	0		name
	f	I	a	DISPLAY_SLOT_LIST
	f	I	b	DISPLAY_SLOT_SIDEBAR
	f	I	c	DISPLAY_SLOT_BELOW_NAME
	f	I	d	DISPLAY_SLOT_TEAMS_SIDEBAR_START
	f	I	e	DISPLAY_SLOT_TEAMS_SIDEBAR_END
	f	I	f	DISPLAY_SLOTS
	f	Lorg/slf4j/Logger;	g	LOGGER
	f	Ljava/util/Map;	h	objectivesByName
	f	Ljava/util/Map;	i	objectivesByCriteria
	f	Ljava/util/Map;	j	playerScores
	f	[Ledz;	k	displayObjectives
	f	Ljava/util/Map;	l	teamsByName
	f	Ljava/util/Map;	m	teamsByPlayer
	f	[Ljava/lang/String;	n	displaySlotNames
c	eed	net/minecraft/world/scores/ScoreboardSaveData
	m	(Leec;)V	<init>	<init>
		p	1		scoreboard
	m	()Lrk;	a	saveTeams
	m	(Leea;Lrk;)V	a	loadTeamPlayers
		p	1		team
		p	2		nbt
	m	(Lre;)Lre;	a	save
		p	1		nbt
	m	(Lre;Leef;)V	a	lambda$loadObjectives$0
		p	2		criterion
	m	(Lrk;)V	a	loadTeams
		p	1		nbt
	m	(Lre;)Leed;	b	load
		p	1		nbt
	m	(Lrk;)V	b	loadObjectives
		p	1		nbt
	m	(Lre;)V	c	loadDisplaySlots
		p	1		nbt
	m	()Lrk;	d	saveObjectives
	m	(Lre;)V	d	saveDisplaySlots
		p	1		nbt
	f	Ljava/lang/String;	a	FILE_ID
	f	Leec;	b	scoreboard
c	eee	net/minecraft/world/scores/Team
	m	(Leee;)Z	a	isAlliedTo
		p	1		team
	m	()Ljava/lang/String;	b	getName
	m	(Ltj;)Ltw;	d	getFormattedName
		p	1		name
	m	()Ljava/util/Collection;	g	getPlayers
	m	()Z	h	isAllowFriendlyFire
	m	()Z	i	canSeeFriendlyInvisibles
	m	()Leee$b;	j	getNameTagVisibility
	m	()Leee$b;	k	getDeathMessageVisibility
	m	()Leee$a;	l	getCollisionRule
	m	()Ln;	n	getColor
c	eee$a	net/minecraft/world/scores/Team$CollisionRule
	m	(Ljava/lang/String;ILjava/lang/String;I)V	<init>	<init>
		p	3		name
		p	4		value
	m	()Ltj;	a	getDisplayName
	m	(Leee$a;)Leee$a;	a	lambda$static$1
	m	(Ljava/lang/String;)Leee$a;	a	byName
		p	0		name
	m	()[Leee$a;	b	$values
	m	(Leee$a;)Ljava/lang/String;	b	lambda$static$0
		p	0		collisionRule
	f	Leee$a;	a	ALWAYS
	f	Leee$a;	b	NEVER
	f	Leee$a;	c	PUSH_OTHER_TEAMS
	f	Leee$a;	d	PUSH_OWN_TEAM
	f	Ljava/lang/String;	e	name
	f	I	f	id
	f	Ljava/util/Map;	g	BY_NAME
	f	[Leee$a;	h	$VALUES
c	eee$b	net/minecraft/world/scores/Team$Visibility
	m	(Ljava/lang/String;ILjava/lang/String;I)V	<init>	<init>
		p	3		name
		p	4		value
	m	()[Ljava/lang/String;	a	getAllNames
	m	(Leee$b;)Leee$b;	a	lambda$static$1
	m	(Ljava/lang/String;)Leee$b;	a	byName
		p	0		name
	m	()Ltj;	b	getDisplayName
	m	(Leee$b;)Ljava/lang/String;	b	lambda$static$0
		p	0		visibilityRule
	m	()[Leee$b;	c	$values
	f	Leee$b;	a	ALWAYS
	f	Leee$b;	b	NEVER
	f	Leee$b;	c	HIDE_FOR_OTHER_TEAMS
	f	Leee$b;	d	HIDE_FOR_OWN_TEAM
	f	Ljava/lang/String;	e	name
	f	I	f	id
	f	Ljava/util/Map;	g	BY_NAME
	f	[Leee$b;	h	$VALUES
c	eef	net/minecraft/world/scores/criteria/ObjectiveCriteria
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		name
	m	(Ljava/lang/String;ZLeef$a;)V	<init>	<init>
		p	1		name
		p	2		readOnly
		p	3		defaultRenderType
	m	(Lana;Ladd;)Ljava/util/Optional;	a	getStat
		p	0		statType
		p	1		id
	m	(Ljava/lang/String;)Ljava/util/Optional;	a	byName
		p	0		name
	m	(Ljava/lang/String;ILana;)Ljava/util/Optional;	a	lambda$byName$0
		p	2		type
	m	(Ljava/lang/String;ZLeef$a;)Leef;	a	registerCustom
		p	0		name
		p	1		readOnly
		p	2		defaultRenderType
	m	(Ljava/lang/String;)Leef;	b	registerCustom
		p	0		name
	m	()Ljava/util/Set;	c	getCustomCriteriaNames
	m	()Ljava/lang/String;	d	getName
	m	()Z	e	isReadOnly
	m	()Leef$a;	f	getDefaultRenderType
	f	Leef;	a	DUMMY
	f	Leef;	b	TRIGGER
	f	Leef;	c	DEATH_COUNT
	f	Leef;	d	KILL_COUNT_PLAYERS
	f	Leef;	e	KILL_COUNT_ALL
	f	Leef;	f	HEALTH
	f	Leef;	g	FOOD
	f	Leef;	h	AIR
	f	Leef;	i	ARMOR
	f	Leef;	j	EXPERIENCE
	f	Leef;	k	LEVEL
	f	[Leef;	l	TEAM_KILL
	f	[Leef;	m	KILLED_BY_TEAM
	f	Ljava/util/Map;	n	CUSTOM_CRITERIA
	f	Ljava/util/Map;	o	CRITERIA_CACHE
	f	Ljava/lang/String;	p	name
	f	Z	q	readOnly
	f	Leef$a;	r	renderType
c	eef$a	net/minecraft/world/scores/criteria/ObjectiveCriteria$RenderType
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()Ljava/lang/String;	a	getId
	m	(Ljava/lang/String;)Leef$a;	a	byId
		p	0		name
	m	()[Leef$a;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Leef$a;	a	INTEGER
	f	Leef$a;	b	HEARTS
	f	Laqa$a;	c	CODEC
	f	Ljava/lang/String;	d	id
	f	[Leef$a;	e	$VALUES
c	eeg	net/minecraft/world/scores/criteria/package-info
c	eeh	net/minecraft/world/scores/package-info
c	eei	net/minecraft/world/ticks/BlackholeTickAccess
	m	()Lees;	a	emptyContainer
	m	()Leel;	b	emptyLevelList
	f	Lees;	a	CONTAINER_BLACKHOLE
	f	Leel;	b	LEVEL_BLACKHOLE
c	eei$1	net/minecraft/world/ticks/BlackholeTickAccess$1
	m	()I	a	count
	m	(Leep;)V	a	schedule
		p	1		orderedTick
	m	(Lgt;Ljava/lang/Object;)Z	a	hasScheduledTick
		p	1		pos
		p	2		type
c	eei$2	net/minecraft/world/ticks/BlackholeTickAccess$2
	m	()I	a	count
	m	(Leep;)V	a	schedule
		p	1		orderedTick
	m	(Lgt;Ljava/lang/Object;)Z	a	hasScheduledTick
		p	1		pos
		p	2		type
	m	(Lgt;Ljava/lang/Object;)Z	b	willTickThisTick
		p	1		pos
		p	2		type
c	eej	net/minecraft/world/ticks/ContainerSingleItem
	m	()V	a	clearContent
	m	()Z	aa_	isEmpty
	m	()Lcfv;	at_	getFirstItem
	m	()I	b	getContainerSize
	m	(I)Lcfv;	b	removeItemNoUpdate
		p	1		slot
	m	(Lcfv;)V	b	setFirstItem
		p	1		stack
	m	()Lcfv;	j	removeFirstItem
c	eek	net/minecraft/world/ticks/LevelChunkTicks
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		ticks
	m	()I	a	count
	m	(J)V	a	unpack
		p	1		time
	m	(JLjava/util/function/Function;)Lrk;	a	save
	m	(Leep;)V	a	schedule
		p	1		orderedTick
	m	(Lgt;Ljava/lang/Object;)Z	a	hasScheduledTick
		p	1		pos
		p	2		type
	m	(Ljava/util/function/BiConsumer;)V	a	setOnTickAdded
		p	1		tickConsumer
	m	(Ljava/util/function/Predicate;)V	a	removeIf
		p	1		predicate
	m	(Lrk;Ljava/util/function/Function;Lclp;)Leek;	a	load
		p	0		tickQueue
		p	1		nameToTypeFunction
		p	2		pos
	m	()Leep;	b	peek
	m	(JLjava/util/function/Function;)Lrx;	b	save
		p	1		time
		p	3		typeToNameFunction
	m	(Leep;)V	b	scheduleUnchecked
		p	1		orderedTick
	m	()Leep;	c	poll
	m	()Ljava/util/stream/Stream;	d	getAll
	f	Ljava/util/Queue;	a	tickQueue
	f	Ljava/util/List;	b	pendingTicks
	f	Ljava/util/Set;	c	ticksPerPosition
	f	Ljava/util/function/BiConsumer;	d	onTickAdded
c	eel	net/minecraft/world/ticks/LevelTickAccess
	m	(Lgt;Ljava/lang/Object;)Z	b	willTickThisTick
		p	1		pos
		p	2		type
c	eem	net/minecraft/world/ticks/LevelTicks
	m	(Ljava/util/function/LongPredicate;Ljava/util/function/Supplier;)V	<init>	<init>
		p	1		tickingFutureReadyPredicate
		p	2		profilerGetter
	m	()I	a	count
	m	(I)Z	a	canScheduleMoreTicks
		p	1		maxTicks
	m	(J)V	a	sortContainersToTick
		p	1		time
	m	(JI)V	a	drainContainers
		p	1		time
		p	3		maxTicks
	m	(JILbao;)V	a	collectTicks
		p	1		time
		p	3		maxTicks
		p	4		profiler
	m	(JILjava/util/function/BiConsumer;)V	a	tick
		p	1		time
		p	3		maxTicks
		p	4		ticker
	m	(Lclp;)V	a	removeContainer
		p	1		pos
	m	(Lclp;Leek;)V	a	addContainer
		p	1		pos
		p	2		scheduler
	m	(Ldrh;)V	a	clearArea
		p	1		box
	m	(Ldrh;Leem$a;)V	a	forContainersInArea
		p	1		box
		p	2		visitor
	m	(Ldrh;Leep;)Z	a	lambda$copyAreaFrom$5
		p	1		tick
	m	(Ldrh;Lhy;)V	a	copyArea
		p	1		box
		p	2		offset
	m	(Leek;Leek;)I	a	lambda$static$0
		p	0		a
		p	1		b
	m	(Leek;Leep;)V	a	lambda$new$2
		p	1		chunkTickScheduler
		p	2		tick
	m	(Leem;Ldrh;Lhy;)V	a	copyAreaFrom
		p	1		scheduler
		p	2		box
		p	3		offset
	m	(Leep;)V	a	schedule
		p	1		orderedTick
	m	(Lgt;Ljava/lang/Object;)Z	a	hasScheduledTick
		p	1		pos
		p	2		type
	m	(Lhy;JJLeep;)V	a	lambda$copyAreaFrom$7
		p	6		tick
	m	(Lit/unimi/dsi/fastutil/longs/Long2LongOpenHashMap;)V	a	lambda$new$1
		p	0		map
	m	(Ljava/util/Queue;Leek;JI)V	a	drainFromCurrentContainer
		p	1		tickableChunkTickSchedulers
		p	2		chunkTickScheduler
		p	3		tick
		p	5		maxTicks
	m	(Ljava/util/function/BiConsumer;)V	a	runCollectedTicks
		p	1		ticker
	m	(Ljava/util/function/Predicate;JLeek;)V	a	lambda$clearArea$4
		p	2		chunkPos
		p	4		chunkTickScheduler
	m	(Ljava/util/function/Predicate;Ljava/util/List;JLeek;)V	a	lambda$copyAreaFrom$6
		p	2		chunkPos
		p	4		chunkTickScheduler
	m	()V	b	rescheduleLeftoverContainers
	m	(Ldrh;Leep;)Z	b	lambda$clearArea$3
		p	1		tick
	m	(Leep;)V	b	updateContainerScheduling
		p	1		tick
	m	(Lgt;Ljava/lang/Object;)Z	b	willTickThisTick
		p	1		pos
		p	2		type
	m	()V	c	cleanupAfterTick
	m	(Leep;)V	c	scheduleForThisTick
		p	1		tick
	m	()V	d	calculateTickSetIfNeeded
	f	Ljava/util/Comparator;	a	CONTAINER_DRAIN_ORDER
	f	Ljava/util/function/LongPredicate;	b	tickCheck
	f	Ljava/util/function/Supplier;	c	profiler
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	d	allContainers
	f	Lit/unimi/dsi/fastutil/longs/Long2LongMap;	e	nextTickForContainer
	f	Ljava/util/Queue;	f	containersToTick
	f	Ljava/util/Queue;	g	toRunThisTick
	f	Ljava/util/List;	h	alreadyRunThisTick
	f	Ljava/util/Set;	i	toRunThisTickSet
	f	Ljava/util/function/BiConsumer;	j	chunkScheduleUpdater
c	eem$a	net/minecraft/world/ticks/LevelTicks$PosAndContainerConsumer
	m	(JLeek;)V	accept	accept
		p	1		chunkPos
		p	3		chunkTickScheduler
c	een	net/minecraft/world/ticks/ProtoChunkTicks
	m	()I	a	count
	m	(Leeo;)V	a	schedule
		p	1		tick
	m	(Leep;)V	a	schedule
		p	1		orderedTick
	m	(Lgt;Ljava/lang/Object;)Z	a	hasScheduledTick
		p	1		pos
		p	2		type
	m	(Lrk;Ljava/util/function/Function;Lclp;)Leen;	a	load
		p	0		tickList
		p	1		typeToNameFunction
		p	2		pos
	m	()Ljava/util/List;	b	scheduledTicks
	m	(JLjava/util/function/Function;)Lrx;	b	save
		p	1		time
		p	3		typeToNameFunction
	f	Ljava/util/List;	a	ticks
	f	Ljava/util/Set;	b	ticksPerPosition
c	eeo	net/minecraft/world/ticks/SavedTick
	m	()Ljava/lang/Object;	a	type
	m	(JJ)Leep;	a	unpack
		p	1		time
		p	3		subTickOrder
	m	(JLjava/util/function/Consumer;Leeo;)V	a	lambda$loadTickList$0
		p	3		tick
	m	(Leep;Ljava/util/function/Function;J)Lre;	a	saveTick
		p	0		orderedTick
		p	1		typeToNameFunction
		p	2		delay
	m	(Ljava/lang/Object;Lgt;)Leeo;	a	probe
		p	0		type
		p	1		pos
	m	(Ljava/lang/String;Lgt;ILeet;)Lre;	a	saveTick
		p	0		type
		p	1		pos
		p	2		delay
		p	3		priority
	m	(Ljava/util/function/Function;)Lre;	a	save
		p	1		typeToNameFunction
	m	(Lre;Ljava/lang/Object;)Leeo;	a	lambda$loadTick$1
		p	1		type
	m	(Lre;Ljava/util/function/Function;)Ljava/util/Optional;	a	loadTick
		p	0		nbt
		p	1		nameToType
	m	(Lrk;Ljava/util/function/Function;Lclp;Ljava/util/function/Consumer;)V	a	loadTickList
		p	0		tickList
		p	1		nameToTypeFunction
		p	2		pos
		p	3		tickConsumer
	m	()Lgt;	b	pos
	m	()I	c	delay
	m	()Leet;	d	priority
	f	Lit/unimi/dsi/fastutil/Hash$Strategy;	a	UNIQUE_TICK_HASH
	f	Ljava/lang/Object;	b	type
	f	Lgt;	c	pos
	f	I	d	delay
	f	Leet;	e	priority
	f	Ljava/lang/String;	f	TAG_ID
	f	Ljava/lang/String;	g	TAG_X
	f	Ljava/lang/String;	h	TAG_Y
	f	Ljava/lang/String;	i	TAG_Z
	f	Ljava/lang/String;	j	TAG_DELAY
	f	Ljava/lang/String;	k	TAG_PRIORITY
c	eeo$1	net/minecraft/world/ticks/SavedTick$1
	m	(Leeo;)I	a	hashCode
	m	(Leeo;Leeo;)Z	a	equals
c	eep	net/minecraft/world/ticks/ScheduledTick
	m	(Ljava/lang/Object;Lgt;JJ)V	<init>	<init>
		p	1		type
		p	2		pos
		p	3		triggerTick
		p	5		subTickOrder
	m	()Ljava/lang/Object;	a	type
	m	(Leep;Leep;)I	a	lambda$static$1
		p	0		first
		p	1		second
	m	(Ljava/lang/Object;Lgt;)Leep;	a	probe
		p	0		type
		p	1		pos
	m	()Lgt;	b	pos
	m	(Leep;Leep;)I	b	lambda$static$0
		p	0		first
		p	1		second
	m	()J	c	triggerTick
	m	()Leet;	d	priority
	m	()J	e	subTickOrder
	f	Ljava/util/Comparator;	a	DRAIN_ORDER
	f	Ljava/util/Comparator;	b	INTRA_TICK_DRAIN_ORDER
	f	Lit/unimi/dsi/fastutil/Hash$Strategy;	c	UNIQUE_TICK_HASH
	f	Ljava/lang/Object;	d	type
	f	Lgt;	e	pos
	f	J	f	triggerTick
	f	Leet;	g	priority
	f	J	h	subTickOrder
c	eep$1	net/minecraft/world/ticks/ScheduledTick$1
	m	(Leep;)I	a	hashCode
	m	(Leep;Leep;)Z	a	equals
c	eeq	net/minecraft/world/ticks/SerializableTickContainer
	m	(JLjava/util/function/Function;)Lrx;	b	save
		p	1		time
		p	3		typeToNameFunction
c	eer	net/minecraft/world/ticks/TickAccess
	m	()I	a	count
	m	(Leep;)V	a	schedule
		p	1		orderedTick
	m	(Lgt;Ljava/lang/Object;)Z	a	hasScheduledTick
		p	1		pos
		p	2		type
c	ees	net/minecraft/world/ticks/TickContainerAccess
c	eet	net/minecraft/world/ticks/TickPriority
	m	(Ljava/lang/String;II)V	<init>	<init>
		p	3		index
	m	()I	a	getValue
	m	(I)Leet;	a	byValue
		p	0		index
	m	()[Leet;	b	$values
	f	Leet;	a	EXTREMELY_HIGH
	f	Leet;	b	VERY_HIGH
	f	Leet;	c	HIGH
	f	Leet;	d	NORMAL
	f	Leet;	e	LOW
	f	Leet;	f	VERY_LOW
	f	Leet;	g	EXTREMELY_LOW
	f	I	h	value
	f	[Leet;	i	$VALUES
c	eeu	net/minecraft/world/ticks/WorldGenTickAccess
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1		mapper
	m	()I	a	count
	m	(Leep;)V	a	schedule
		p	1		orderedTick
	m	(Lgt;Ljava/lang/Object;)Z	a	hasScheduledTick
		p	1		pos
		p	2		type
	m	(Lgt;Ljava/lang/Object;)Z	b	willTickThisTick
		p	1		pos
		p	2		type
	f	Ljava/util/function/Function;	a	containerGetter
c	eev	net/minecraft/world/ticks/package-info
c	net/minecraft/data/Main	net/minecraft/data/Main
	m	(Ljava/lang/String;)Ljava/nio/file/Path;	a	lambda$main$0
		p	0		input
	m	(Ljava/nio/file/Path;Ljava/util/Collection;ZZZZZLad;Z)Ljg;	a	createStandardGenerator
		p	0		output
		p	1		inputs
		p	2		includeClient
		p	3		includeServer
		p	4		includeDev
		p	5		includeReports
		p	6		validate
		p	7		gameVersion
		p	8		ignoreCache
	m	(Ljava/util/Collection;Ljj;)Lmr;	a	lambda$createStandardGenerator$4
		p	1		output
	m	(Ljava/util/concurrent/CompletableFuture;Lnj;Ljj;)Lnl;	a	lambda$createStandardGenerator$6
		p	2		output
	m	(Ljava/util/concurrent/CompletableFuture;Lnj;Lnj;Ljj;)Lnm;	a	lambda$createStandardGenerator$7
		p	3		output
	m	(Ljava/util/function/BiFunction;Ljava/util/concurrent/CompletableFuture;)Ljh$a;	a	bindRegistries
		p	0		baseFactory
		p	1		registryLookupFuture
	m	(Ljava/util/function/BiFunction;Ljava/util/concurrent/CompletableFuture;Ljj;)Ljh;	a	lambda$bindRegistries$1
		p	2		output
	m	(Ljj;)Lkw;	a	lambda$createStandardGenerator$8
		p	0		output
	m	(Ljava/util/Collection;Ljj;)Lms;	b	lambda$createStandardGenerator$2
		p	1		output
	m	(Ljava/util/concurrent/CompletableFuture;Lnj;Ljj;)Lno;	b	lambda$createStandardGenerator$3
		p	2		output
	m	(Ljj;)Lkw;	b	lambda$createStandardGenerator$5
		p	0		output
	m	([Ljava/lang/String;)V	main	main
		p	0		args
c	net/minecraft/server/Main	net/minecraft/server/Main
	m	()Z	a	lambda$main$2
	m	(Ladw$c;Ldye$c;Ljoptsimple/OptionSet;Ljoptsimple/OptionSpec;Lahs;Ljoptsimple/OptionSpec;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	lambda$main$1
		p	6		applyExecutor
	m	(Lahr;Ldye$c;ZLaks;)Ladw$c;	a	loadOrCreateConfig
		p	0		serverPropertiesHandler
		p	1		session
		p	2		safeMode
		p	3		dataPackManager
	m	(Ldye$c;Laks;Ladx;Lahs;Ladu;Ljoptsimple/OptionSet;Ljoptsimple/OptionSpec;Ljoptsimple/OptionSpec;Ljoptsimple/OptionSpec;Ljoptsimple/OptionSpec;Ljoptsimple/OptionSpec;Ljoptsimple/OptionSpec;Ljava/lang/Thread;)Lahq;	a	lambda$main$3
		p	12		thread
	m	(Ldye$c;Lcom/mojang/datafixers/DataFixer;ZLjava/util/function/BooleanSupplier;Lhq;)V	a	forceUpgrade
		p	0		session
		p	1		dataFixer
		p	2		eraseCache
		p	3		continueCheck
		p	4		dimensionOptionsRegistry
	m	(Ldye$c;Ljoptsimple/OptionSet;Ljoptsimple/OptionSpec;Lahs;Ljoptsimple/OptionSpec;Ladw$a;)Ladw$b;	a	lambda$main$0
		p	5		context
	m	(Ljava/nio/file/Path;)V	a	writePidFile
		p	0		path
	m	([Ljava/lang/String;)V	main	main
		p	0		args
	f	Lorg/slf4j/Logger;	a	LOGGER
c	net/minecraft/server/Main$1	net/minecraft/server/Main$1
	f	Lahq;	a	val$dedicatedServer
c	net/minecraft/server/MinecraftServer	net/minecraft/server/MinecraftServer
	m	(Ljava/lang/Thread;Ldye$c;Laks;Ladx;Ljava/net/Proxy;Lcom/mojang/datafixers/DataFixer;Ladu;Laiz;)V	<init>	<init>
		p	1		serverThread
		p	2		session
		p	3		dataPackManager
		p	4		saveLoader
		p	5		proxy
		p	6		dataFixer
		p	7		apiServices
		p	8		worldGenerationProgressListenerFactory
	m	()V	A	forceTimeSynchronization
	m	()Z	B	isNetherEnabled
	m	()Z	C	isShutdown
	m	()Laip;	D	overworld
	m	()Ljava/util/Set;	E	levelKeys
	m	()Ljava/lang/Iterable;	F	getAllLevels
	m	()Ljava/lang/String;	G	getServerVersion
	m	()I	H	getPlayerCount
	m	()I	I	getMaxPlayers
	m	()[Ljava/lang/String;	J	getPlayerNames
	m	()Lapi;	K	getModdedStatus
	m	()Ljava/security/KeyPair;	L	getKeyPair
	m	()I	M	getPort
	m	()Z	M_	shouldInformAdmins
	m	()Lcom/mojang/authlib/GameProfile;	N	getSingleplayerProfile
	m	()Z	O	isSingleplayer
	m	()V	P	initializeKeyPair
	m	()Z	Q	isSpawningMonsters
	m	()Z	R	isDemo
	m	()Ljava/util/Optional;	S	getServerResourcePack
	m	()Z	T	isResourcePackRequired
	m	()Z	U	usesAuthentication
	m	()Z	V	getPreventProxyConnections
	m	()Z	W	isSpawningAnimals
	m	()Z	X	areNpcsEnabled
	m	()Z	Y	isPvpAllowed
	m	()Z	Z	isFlightAllowed
	m	(I)V	a	setPort
		p	1		serverPort
	m	(Lab;)Lab;	a	fillServerSystemReport
		p	1		details
	m	(Ladc;)Laip;	a	getLevel
		p	1		key
	m	(Ladv;)Z	a	shouldRun
	m	(Laip;)I	a	getSpawnRadius
		p	1		world
	m	(Laip;Lain;Ldyj;Lhd$c;)V	a	lambda$setInitialSpawn$5
		p	3		feature
	m	(Laip;Ldyj;ZZ)V	a	setInitialSpawn
		p	0		world
		p	1		worldProperties
		p	2		bonusChest
		p	3		debugWorld
	m	(Laip;Lgt;Lbym;)Z	a	isUnderSpawnProtection
		p	1		world
		p	2		pos
		p	3		player
	m	(Laiq;)Lajn;	a	createTextFilterForPlayer
		p	1		player
	m	(Laiy;)V	a	createLevels
		p	1		worldGenerationProgressListener
	m	(Lakq;)Ljava/lang/String;	a	lambda$fillSystemReport$16
		p	0		profile
	m	(Laks;)Lclw;	a	getSelectedPacks
		p	0		dataPackManager
	m	(Laks;Lclw;ZLcau;)Lcna;	a	configurePackRepository
		p	0		resourcePackManager
		p	1		dataPackSettings
		p	2		safeMode
		p	3		enabledFeatures
	m	(Lakx;Ladn;)Lnet/minecraft/server/MinecraftServer$a;	a	lambda$reloadResources$23
		p	1		dataPackContents
	m	(Lakx;Ladn;Ljava/lang/Throwable;)V	a	lambda$reloadResources$22
		p	1		dataPackContents
		p	2		throwable
	m	(Lalu;)V	a	setPlayerList
		p	1		playerManager
	m	(Lapk$a;)Ljava/lang/String;	a	lambda$dumpNativeModules$27
		p	0		module
	m	(Lban;)V	a	lambda$new$0
		p	1		profileResult
	m	(Lbdv;Z)V	a	setDifficulty
		p	1		difficulty
		p	2		forceUpdate
	m	(Lcmf;)V	a	setDefaultGameType
		p	1		gameMode
	m	(Lcmf;ZI)Z	a	publishServer
		p	1		gameMode
		p	2		cheatsAllowed
		p	3		port
	m	(Lcom/mojang/authlib/GameProfile;)Z	a	isSingleplayerOwner
		p	1		profile
	m	(Ldr;)V	a	kickUnlistedPlayers
		p	1		source
	m	(Ldya;)V	a	readScoreboard
		p	1		persistentStateManager
	m	(Ldyc;)Ljava/nio/file/Path;	a	getWorldPath
		p	1		worldSavePath
	m	(Ldyk;)V	a	setupDebugLevel
		p	1		properties
	m	(Lhq;)Ljava/util/Optional;	a	lambda$setInitialSpawn$4
		p	0		featureRegistry
	m	(Lhr$b;Lcom/google/common/collect/ImmutableList;)Ljava/util/concurrent/CompletionStage;	a	lambda$reloadResources$24
		p	2		resourcePacks
	m	(Ljava/lang/Runnable;)Ladv;	a	wrapRunnable
	m	(Ljava/lang/Thread;Ljava/lang/Throwable;)V	a	lambda$spin$3
		p	0		thread
		p	1		throwable
	m	(Ljava/lang/Throwable;)Lo;	a	constructOrExtractCrashReport
		p	0		throwable
	m	(Ljava/nio/file/Path;)V	a	dumpServerProperties
		p	1		file
	m	(Ljava/util/Collection;)Ljava/util/concurrent/CompletableFuture;	a	reloadResources
		p	1		dataPacks
	m	(Ljava/util/Collection;Ljava/lang/String;)Z	a	lambda$getSelectedPacks$26
		p	1		name
	m	(Ljava/util/Collection;Lnet/minecraft/server/MinecraftServer$a;)V	a	lambda$reloadResources$25
		p	2		resourceManagerHolder
	m	(Ljava/util/concurrent/atomic/AtomicReference;)V	a	lambda$spin$2
	m	(Ljava/util/function/BooleanSupplier;)V	a	tickServer
		p	1		shouldKeepTicking
	m	(Ljava/util/function/Consumer;Lban;)V	a	lambda$startRecordingMetrics$30
		p	2		result
	m	(Ljava/util/function/Consumer;Ljava/util/function/Consumer;)V	a	startRecordingMetrics
		p	1		resultConsumer
		p	2		dumpConsumer
	m	(Ljava/util/function/Function;)Lnet/minecraft/server/MinecraftServer;	a	spin
		p	0		serverFactory
	m	(Lo;)V	a	onServerCrash
		p	1		report
	m	(Ltj;)V	a	sendSystemMessage
		p	1		message
	m	(Ltj;Ltf$a;Ljava/lang/String;)V	a	logChatMessage
		p	1		message
		p	2		params
		p	3		prefix
	m	(Z)V	a	halt
		p	1		waitForShutdown
	m	(ZZZ)Z	a	saveAllChunks
		p	1		suppressLogs
		p	2		flush
		p	3		force
	m	()Ladr;	aA	getFunctions
	m	()Laks;	aB	getPackRepository
	m	()Lds;	aC	getCommands
	m	()Ldr;	aD	createCommandSourceStack
	m	()Lciz;	aE	getRecipeManager
	m	()Ladt;	aF	getScoreboard
	m	()Ldxx;	aG	getCommandStorage
	m	()Ldyv;	aH	getLootTables
	m	()Ldyw;	aI	getPredicateManager
	m	()Ldyq;	aJ	getItemModifierManager
	m	()Lcme;	aK	getGameRules
	m	()Laeb;	aL	getCustomBossEvents
	m	()Z	aM	isEnforceWhitelist
	m	()F	aN	getAverageTickTime
	m	()Laox;	aO	getFrameTimer
	m	()Lbao;	aP	getProfiler
	m	()Z	aQ	isRecordingMetrics
	m	()V	aR	stopRecordingMetrics
	m	()V	aS	finishRecordingMetrics
	m	()V	aT	cancelRecordingMetrics
	m	()Z	aU	forceSynchronousWrites
	m	()Ldvi;	aV	getStructureManager
	m	()Ldyk;	aW	getWorldData
	m	()Lhr$b;	aX	registryAccess
	m	()Lhk;	aY	registries
	m	()Lcmf;	aZ	getForcedGameType
	m	(Ljava/lang/String;)V	a_	setLocalIp
		p	1		serverIp
	m	()Ljava/lang/String;	aa	getMotd
	m	()Z	ab	isStopped
	m	()Lalu;	ac	getPlayerList
	m	()Lajh;	ad	getConnection
	m	()Z	ae	isReady
	m	()Z	af	hasGui
	m	()I	ag	getTickCount
	m	()I	ah	getSpawnProtectionRadius
	m	()Z	ai	repliesToStatus
	m	()Z	aj	hidesOnlinePlayers
	m	()Ljava/net/Proxy;	ak	getProxy
	m	()I	al	getPlayerIdleTimeout
	m	()Lcom/mojang/authlib/minecraft/MinecraftSessionService;	am	getSessionService
	m	()Laps;	an	getServiceSignatureValidator
	m	()Lcom/mojang/authlib/GameProfileRepository;	ao	getProfileRepository
	m	()Lalq;	ap	getProfileCache
	m	()Lacg;	aq	getStatus
	m	()V	ar	invalidateStatus
	m	()I	as	getAbsoluteMaxWorldSize
	m	()Z	at	scheduleExecutables
	m	()Ljava/lang/Thread;	au	getRunningThread
	m	()I	av	getCompressionThreshold
	m	()Z	aw	enforceSecureProfile
	m	()J	ax	getNextTickTime
	m	()Lcom/mojang/datafixers/DataFixer;	ay	getFixerUpper
	m	()Ladp;	az	getAdvancements
	m	(I)I	b	getScaledTrackingDistance
		p	1		initialDistance
	m	(Lab;)Lab;	b	fillSystemReport
		p	1		details
	m	(Ladv;)V	b	doRunTask
	m	(Laip;)V	b	synchronizeTime
		p	1		world
	m	(Laiq;)Lair;	b	createGameModeForPlayer
		p	1		player
	m	(Laiy;)V	b	prepareLevels
		p	1		worldGenerationProgressListener
	m	(Lcom/mojang/authlib/GameProfile;)V	b	setSingleplayerProfile
		p	1		hostProfile
	m	(Ljava/lang/Runnable;)V	b	addTickable
		p	1		tickable
	m	(Ljava/lang/String;)V	b	setId
		p	1		serverId
	m	(Ljava/nio/file/Path;)V	b	saveDebugReport
		p	1		path
	m	(Ljava/util/Collection;)Lcom/google/common/collect/ImmutableList;	b	lambda$reloadResources$21
	m	(Ljava/util/function/BooleanSupplier;)V	b	tickChildren
		p	1		shouldKeepTicking
	m	(Z)V	b	setDifficultyLocked
		p	1		locked
	m	(ZZZ)Z	b	saveEverything
		p	1		suppressLogs
		p	2		flush
		p	3		force
	m	()Ljava/lang/String;	bA	lambda$fillSystemReport$17
	m	()Ljava/lang/String;	bB	lambda$fillSystemReport$15
	m	()Ljava/lang/String;	bC	lambda$fillSystemReport$14
	m	()Ljava/util/Optional;	bD	lambda$loadStatusIcon$11
	m	()Z	bE	lambda$waitUntilNextTick$8
	m	()Z	bF	lambda$stopServer$7
	m	()Lalh;	ba	getResourceManager
	m	()Z	bb	isCurrentlySaving
	m	()Z	bc	isTimeProfilerRunning
	m	()V	bd	startTimeProfiler
	m	()Lban;	be	stopTimeProfiler
	m	()I	bf	getMaxChainedNeighborUpdates
	m	()Lte;	bg	getChatDecorator
	m	()Z	bh	haveTime
	m	()Z	bi	pollTaskInternal
	m	()Ljava/util/Optional;	bj	loadStatusIcon
	m	()Lacg;	bk	buildServerStatus
	m	()Lacg$b;	bl	buildPlayerStatus
	m	()V	bu	updateMobSpawningFlags
	m	()V	bv	startMetricsRecordingTick
	m	()V	bw	endMetricsRecordingTick
	m	()Ljava/lang/String;	bx	lambda$fillSystemReport$20
	m	()Ljava/lang/String;	by	lambda$fillSystemReport$19
	m	()Ljava/lang/String;	bz	lambda$fillSystemReport$18
	m	(I)V	c	setPlayerIdleTimeout
		p	1		playerIdleTimeout
	m	(Laip;)Ljava/lang/String;	c	lambda$tickChildren$13
	m	(Laiq;)V	c	sendDifficultyUpdate
		p	1		player
	m	(Lcom/mojang/authlib/GameProfile;)I	c	getProfilePermissions
		p	1		profile
	m	(Ljava/lang/Runnable;)V	c	executeIfPossible
		p	1		runnable
	m	(Ljava/lang/String;)Ljava/io/File;	c	getFile
		p	1		path
	m	(Ljava/nio/file/Path;)V	c	dumpMiscStats
		p	1		path
	m	(Z)V	c	setDemo
		p	1		demo
	m	(Laip;)Z	d	lambda$stopServer$6
		p	0		world
	m	(Ljava/lang/Runnable;)V	d	doRunTask
		p	1		task
	m	(Ljava/lang/String;)V	d	setMotd
		p	1		motd
	m	(Ljava/nio/file/Path;)V	d	dumpGameRules
		p	1		path
	m	(Z)V	d	setUsesAuthentication
		p	1		onlineMode
	m	()Z	d_	acceptsSuccess
	m	()Z	e	initServer
	m	(Ljava/lang/Runnable;)Z	e	shouldRun
		p	1		task
	m	(Ljava/nio/file/Path;)V	e	dumpClasspath
		p	1		path
	m	(Z)V	e	setPreventProxyConnections
		p	1		preventProxyConnections
	m	(Ljava/lang/Runnable;)Ljava/lang/Runnable;	f	wrapRunnable
		p	1		runnable
	m	(Ljava/nio/file/Path;)V	f	dumpThreads
		p	1		path
	m	(Z)V	f	setPvpAllowed
		p	1		pvpEnabled
	m	()V	g	onServerExit
	m	(Ljava/nio/file/Path;)V	g	dumpNativeModules
		p	1		path
	m	(Z)V	g	setFlightAllowed
		p	1		flightEnabled
	m	()V	g_	loadLevel
	m	()Z	h	isHardcore
	m	(Ljava/nio/file/Path;)V	h	lambda$startMetricsRecordingTick$29
		p	1		path
	m	(Z)V	h	setEnforceWhitelist
		p	1		enforceWhitelist
	m	()Lcmf;	h_	getDefaultGameType
	m	()I	i	getOperatorUserPermissionLevel
	m	(Ljava/nio/file/Path;)V	i	lambda$startMetricsRecordingTick$28
	m	()V	i_	waitUntilNextTick
	m	()I	j	getFunctionCompilationLevel
	m	(Ljava/nio/file/Path;)Ljava/util/Optional;	j	lambda$loadStatusIcon$12
		p	0		path
	m	()Z	j_	acceptsFailure
	m	()Z	k	shouldRconBroadcast
	m	(Ljava/nio/file/Path;)Z	k	lambda$loadStatusIcon$10
		p	0		path
	m	()Z	l	isDedicatedServer
	m	(Ljava/nio/file/Path;)Z	l	lambda$loadStatusIcon$9
		p	0		path
	m	()I	m	getRateLimitPacketsPerSecond
	m	(Ljava/nio/file/Path;)V	m	lambda$new$1
		p	0		path
	m	()Z	n	isEpollEnabled
	m	()Z	o	isCommandBlockEnabled
	m	()Z	p	isPublished
	m	()V	r	forceDifficulty
	m	()V	t	stopServer
	m	()Ljava/lang/String;	u	getLocalIp
	m	()Z	v	isRunning
	m	()V	w	runServer
	m	()Z	x	pollTask
	m	()Ljava/util/Optional;	y	getWorldScreenshotFile
	m	()Ljava/io/File;	z	getServerDirectory
	f	Lbao;	A	profiler
	f	Ljava/util/function/Consumer;	B	onMetricsRecordingStopped
	f	Ljava/util/function/Consumer;	C	onMetricsRecordingFinished
	f	Z	D	willStartRecordingMetrics
	f	Lnet/minecraft/server/MinecraftServer$c;	E	debugCommandProfiler
	f	Z	F	debugCommandProfilerDelayStart
	f	Lajh;	G	connection
	f	Laiz;	H	progressListenerFactory
	f	Lacg;	I	status
	f	Lacg$a;	J	statusIcon
	f	Lapo;	K	random
	f	Lcom/mojang/datafixers/DataFixer;	L	fixerUpper
	f	Ljava/lang/String;	M	localIp
	f	I	N	port
	f	Lhk;	O	registries
	f	Ljava/util/Map;	P	levels
	f	Lalu;	Q	playerList
	f	Z	R	running
	f	Z	S	stopped
	f	I	T	tickCount
	f	Z	U	onlineMode
	f	Z	V	preventProxyConnections
	f	Z	W	pvp
	f	Z	X	allowFlight
	f	Ljava/lang/String;	Y	motd
	f	I	Z	playerIdleTimeout
	f	Ljava/security/KeyPair;	aa	keyPair
	f	Lcom/mojang/authlib/GameProfile;	ab	singleplayerProfile
	f	Z	ac	isDemo
	f	Z	ad	isReady
	f	J	ae	lastOverloadWarning
	f	J	af	lastServerStatus
	f	Ljava/lang/Thread;	ag	serverThread
	f	J	ah	nextTickTime
	f	J	ai	delayedTasksMaxNextTickTime
	f	Z	aj	mayHaveDelayedTasks
	f	Laks;	ak	packRepository
	f	Ladt;	al	scoreboard
	f	Ldxx;	am	commandStorage
	f	Laeb;	an	customBossEvents
	f	Ladr;	ao	functionManager
	f	Laox;	ap	frameTimer
	f	Z	aq	enforceWhitelist
	f	F	ar	averageTickTime
	f	Ljava/util/concurrent/Executor;	as	executor
	f	Ljava/lang/String;	at	serverId
	f	Lnet/minecraft/server/MinecraftServer$a;	au	resources
	f	Ldvi;	av	structureTemplateManager
	f	Z	aw	isSaving
	f	Ljava/lang/String;	b	VANILLA_BRAND
	f	I	c	MS_PER_TICK
	f	I	d	START_CHUNK_RADIUS
	f	I	e	ABSOLUTE_MAX_WORLD_SIZE
	f	Lcmm;	f	DEMO_SETTINGS
	f	Lcom/mojang/authlib/GameProfile;	g	ANONYMOUS_PLAYER_PROFILE
	f	Ldye$c;	h	storageSource
	f	Ldyh;	i	playerDataStorage
	f	Ljava/net/Proxy;	j	proxy
	f	[J	k	tickTimes
	f	Ladu;	l	services
	f	Ldyk;	m	worldData
	f	Lorg/slf4j/Logger;	n	LOGGER
	f	F	o	AVERAGE_TICK_TIME_SMOOTHING
	f	I	p	TICK_STATS_SPAN
	f	I	q	OVERLOADED_THRESHOLD
	f	I	r	OVERLOADED_WARNING_INTERVAL
	f	J	s	STATUS_EXPIRE_TIME_NS
	f	I	t	MAX_STATUS_PLAYER_SAMPLE
	f	I	u	START_TICKING_CHUNK_COUNT
	f	I	v	AUTOSAVE_INTERVAL
	f	I	w	MAX_TICK_LATENCY
	f	J	x	DELAYED_TASKS_TICK_EXTENSION
	f	Ljava/util/List;	y	tickables
	f	Lbca;	z	metricsRecorder
c	net/minecraft/server/MinecraftServer$1	net/minecraft/server/MinecraftServer$1
	m	(Lcme$e;Lcme$f;)V	a	visit
		p	1		key
		p	2		type
	f	Ljava/util/List;	a	val$entries
	f	Lcme;	b	val$gameRules
	f	Lnet/minecraft/server/MinecraftServer;	c	this$0
c	net/minecraft/server/MinecraftServer$a	net/minecraft/server/MinecraftServer$ReloadableResources
	m	()Lakx;	a	resourceManager
	m	()Ladn;	b	managers
	f	Lakx;	a	resourceManager
	f	Ladn;	b	managers
c	net/minecraft/server/MinecraftServer$b	net/minecraft/server/MinecraftServer$ServerResourcePackInfo
	m	()Ljava/lang/String;	a	url
	m	()Ljava/lang/String;	b	hash
	m	()Z	c	isRequired
	m	()Ltj;	d	prompt
	f	Ljava/lang/String;	a	url
	f	Ljava/lang/String;	b	hash
	f	Z	c	isRequired
	f	Ltj;	d	prompt
c	net/minecraft/server/MinecraftServer$c	net/minecraft/server/MinecraftServer$TimeProfiler
	m	(JI)V	<init>	<init>
		p	1		time
		p	3		tick
	m	(JI)Lban;	a	stop
		p	1		endTime
		p	3		endTick
	f	J	a	startNanos
	f	I	b	startTick
c	net/minecraft/server/MinecraftServer$c$1	net/minecraft/server/MinecraftServer$TimeProfiler$1
	m	()J	a	getStartTimeNano
	m	(Ljava/lang/String;)Ljava/util/List;	a	getTimes
		p	1		parentPath
	m	(Ljava/nio/file/Path;)Z	a	saveResults
		p	1		path
	m	()I	b	getStartTimeTicks
	m	()J	c	getEndTimeNano
	m	()I	d	getEndTimeTicks
	m	()Ljava/lang/String;	e	getProfilerResults
	f	J	a	val$stopNanos
	f	I	b	val$stopTick
	f	Lnet/minecraft/server/MinecraftServer$c;	c	this$0
c	net/minecraft/util/profiling/jfr/event/PacketSentEvent	net/minecraft/util/profiling/jfr/event/PacketSentEvent
	m	(IILjava/net/SocketAddress;I)V	<init>	<init>
		p	1		protocolId
		p	2		packetId
		p	3		remoteAddress
		p	4		bytes
c	net/minecraft/util/profiling/jfr/event/NetworkSummaryEvent	net/minecraft/util/profiling/jfr/event/NetworkSummaryEvent
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		remoteAddress
c	net/minecraft/util/profiling/jfr/event/NetworkSummaryEvent$a	net/minecraft/util/profiling/jfr/event/NetworkSummaryEvent$Fields
	f	Ljava/lang/String;	a	REMOTE_ADDRESS
	f	Ljava/lang/String;	b	SENT_BYTES
	f	Ljava/lang/String;	c	RECEIVED_BYTES
	f	Ljava/lang/String;	d	SENT_PACKETS
	f	Ljava/lang/String;	e	RECEIVED_PACKETS
c	net/minecraft/util/profiling/jfr/event/NetworkSummaryEvent$b	net/minecraft/util/profiling/jfr/event/NetworkSummaryEvent$SumAggregation
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		remoteAddress
	m	()V	a	commitEvent
	m	(I)V	a	trackSentPacket
		p	1		bytes
	m	(I)V	b	trackReceivedPacket
		p	1		bytes
	f	Ljava/util/concurrent/atomic/AtomicLong;	a	sentBytes
	f	Ljava/util/concurrent/atomic/AtomicInteger;	b	sentPackets
	f	Ljava/util/concurrent/atomic/AtomicLong;	c	receivedBytes
	f	Ljava/util/concurrent/atomic/AtomicInteger;	d	receivedPackets
	f	Lnet/minecraft/util/profiling/jfr/event/NetworkSummaryEvent;	e	event
c	net/minecraft/util/profiling/jfr/event/PacketReceivedEvent	net/minecraft/util/profiling/jfr/event/PacketReceivedEvent
	m	(IILjava/net/SocketAddress;I)V	<init>	<init>
		p	1		protocolId
		p	2		packetId
		p	3		remoteAddress
		p	4		bytes
c	net/minecraft/util/profiling/jfr/event/ServerTickTimeEvent	net/minecraft/util/profiling/jfr/event/ServerTickTimeEvent
	m	(F)V	<init>	<init>
		p	1		averageTickMilliseconds
c	net/minecraft/util/profiling/jfr/event/ServerTickTimeEvent$a	net/minecraft/util/profiling/jfr/event/ServerTickTimeEvent$Fields
	f	Ljava/lang/String;	a	AVERAGE_TICK_DURATION
c	net/minecraft/util/profiling/jfr/event/ChunkGenerationEvent	net/minecraft/util/profiling/jfr/event/ChunkGenerationEvent
	m	(Lclp;Ladc;Ljava/lang/String;)V	<init>	<init>
		p	1		chunkPos
		p	2		world
		p	3		targetStatus
c	net/minecraft/util/profiling/jfr/event/ChunkGenerationEvent$a	net/minecraft/util/profiling/jfr/event/ChunkGenerationEvent$Fields
	f	Ljava/lang/String;	a	WORLD_POS_X
	f	Ljava/lang/String;	b	WORLD_POS_Z
	f	Ljava/lang/String;	c	CHUNK_POS_X
	f	Ljava/lang/String;	d	CHUNK_POS_Z
	f	Ljava/lang/String;	e	STATUS
	f	Ljava/lang/String;	f	LEVEL
