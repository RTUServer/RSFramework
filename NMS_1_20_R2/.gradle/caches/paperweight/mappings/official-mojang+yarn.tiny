tiny	2	0	official	mojang+yarn
c	a	com/mojang/math/Axis
	m	(F)Lorg/joml/Quaternionf;	a	lambda$static$5
		p	0		rad
	m	(Lorg/joml/Vector3f;F)Lorg/joml/Quaternionf;	a	lambda$of$6
		p	1		rad
	m	(F)Lorg/joml/Quaternionf;	b	lambda$static$4
		p	0		rad
	m	(F)Lorg/joml/Quaternionf;	c	lambda$static$3
		p	0		rad
	m	(F)Lorg/joml/Quaternionf;	d	lambda$static$2
		p	0		rad
	m	(F)Lorg/joml/Quaternionf;	e	lambda$static$1
		p	0		rad
	m	(F)Lorg/joml/Quaternionf;	f	lambda$static$0
		p	0		rad
	m	(Lorg/joml/Vector3f;)La;	of	of
		p	0		axis
	m	(F)Lorg/joml/Quaternionf;	rotation	rotation
		p	1		rad
	m	(F)Lorg/joml/Quaternionf;	rotationDegrees	rotationDegrees
		p	1		deg
	f	La;	a	XN
	f	La;	b	XP
	f	La;	c	YN
	f	La;	d	YP
	f	La;	e	ZN
	f	La;	f	ZP
c	b	com/mojang/math/Constants
	f	F	a	PI
	f	F	b	RAD_TO_DEG
	f	F	c	DEG_TO_RAD
	f	F	d	EPSILON
c	c	com/mojang/math/Divisor
	m	(II)V	<init>	<init>
		p	1		dividend
		p	2		divisor
	m	(II)Ljava/lang/Iterable;	a	asIterable
		p	0		dividend
		p	1		divisor
	m	(II)Ljava/util/Iterator;	b	lambda$asIterable$0
	f	I	a	denominator
	f	I	b	quotient
	f	I	c	mod
	f	I	d	returnedParts
	f	I	e	remainder
c	d	com/mojang/math/FieldsAreNonnullByDefault
c	e	com/mojang/math/GivensParameters
	m	()Le;	a	inverse
	m	(F)Le;	a	fromPositiveAngle
		p	0		radians
	m	(FF)Le;	a	fromUnnormalized
		p	0		a
		p	1		b
	m	(Lorg/joml/Matrix3f;)Lorg/joml/Matrix3f;	a	aroundX
	m	(Lorg/joml/Quaternionf;)Lorg/joml/Quaternionf;	a	aroundX
	m	()F	b	cos
	m	(Lorg/joml/Matrix3f;)Lorg/joml/Matrix3f;	b	aroundY
	m	(Lorg/joml/Quaternionf;)Lorg/joml/Quaternionf;	b	aroundY
	m	()F	c	sin
	m	(Lorg/joml/Matrix3f;)Lorg/joml/Matrix3f;	c	aroundZ
	m	(Lorg/joml/Quaternionf;)Lorg/joml/Quaternionf;	c	aroundZ
	m	()F	d	sinHalf
	m	()F	e	cosHalf
	f	F	a	sinHalf
	f	F	b	cosHalf
c	f	com/mojang/math/MatrixUtil
	m	(FF)Le;	a	qrGivensQuat
		p	0		a1
		p	1		a2
	m	(FFF)Le;	a	approxGivensQuat
		p	0		a11
		p	1		a12
		p	2		a22
	m	(Lorg/joml/Matrix3f;)Lorg/apache/commons/lang3/tuple/Triple;	a	svdDecompose
		p	0		A
	m	(Lorg/joml/Matrix3f;I)Lorg/joml/Quaternionf;	a	eigenvalueJacobi
		p	0		AtA
		p	1		numJacobiIterations
	m	(Lorg/joml/Matrix3f;Lorg/joml/Matrix3f;)V	a	similarityTransform
		p	0		X
		p	1		A
	m	(Lorg/joml/Matrix3f;Lorg/joml/Matrix3f;Lorg/joml/Quaternionf;Lorg/joml/Quaternionf;)V	a	stepJacobi
		p	0		AtA
	m	(Lorg/joml/Matrix4f;F)Lorg/joml/Matrix4f;	a	mulComponentWise
		p	0		matrix
		p	1		scalar
	f	F	a	G
	f	Le;	b	PI_4
c	g	com/mojang/math/MethodsReturnNonnullByDefault
c	h	com/mojang/math/OctahedralGroup
	m	(Ljava/lang/String;ILjava/lang/String;Li;ZZZ)V	<init>	<init>
		p	3		name
		p	4		axisTransformation
		p	5		flipX
		p	6		flipY
		p	7		flipZ
	m	()Lh;	a	inverse
	m	(I)[Lh;	a	lambda$static$5
	m	(Lh;)Lh;	a	compose
		p	1		transformation
	m	(Lh;Lh;)Z	a	lambda$static$3
	m	(Lha$a;)Z	a	inverts
		p	1		axis
	m	(Lha;)Lha;	a	rotate
		p	1		direction
	m	(Lhc;)Lhc;	a	rotate
		p	1		orientation
	m	([[Lh;)V	a	lambda$static$2
	m	()Lorg/joml/Matrix3f;	b	transformation
	m	(Lh;)Lh;	b	lambda$static$4
	m	()Ljava/lang/String;	c	getSerializedName
	m	(Lh;)Lh;	c	lambda$static$1
	m	()Lit/unimi/dsi/fastutil/booleans/BooleanList;	d	packInversions
	m	(Lh;)Lcom/mojang/datafixers/util/Pair;	d	lambda$static$0
	m	()[Lh;	e	$values
	f	Lh;	A	INVERT_Y
	f	Lh;	B	INVERT_Z
	f	Lh;	C	ROT_60_REF_NNN
	f	Lh;	D	ROT_60_REF_NNP
	f	Lh;	E	ROT_60_REF_NPN
	f	Lh;	F	ROT_60_REF_NPP
	f	Lh;	G	ROT_60_REF_PNN
	f	Lh;	H	ROT_60_REF_PNP
	f	Lh;	I	ROT_60_REF_PPN
	f	Lh;	J	ROT_60_REF_PPP
	f	Lh;	K	SWAP_XY
	f	Lh;	L	SWAP_YZ
	f	Lh;	M	SWAP_XZ
	f	Lh;	N	SWAP_NEG_XY
	f	Lh;	O	SWAP_NEG_YZ
	f	Lh;	P	SWAP_NEG_XZ
	f	Lh;	Q	ROT_90_REF_X_NEG
	f	Lh;	R	ROT_90_REF_X_POS
	f	Lh;	S	ROT_90_REF_Y_NEG
	f	Lh;	T	ROT_90_REF_Y_POS
	f	Lh;	U	ROT_90_REF_Z_NEG
	f	Lh;	V	ROT_90_REF_Z_POS
	f	Lorg/joml/Matrix3f;	X	transformation
	f	Ljava/lang/String;	Y	name
	f	Ljava/util/Map;	Z	rotatedDirections
	f	Lh;	a	IDENTITY
	f	Z	aa	invertX
	f	Z	ab	invertY
	f	Z	ac	invertZ
	f	Li;	ad	permutation
	f	[[Lh;	ae	cayleyTable
	f	[Lh;	af	inverseTable
	f	[Lh;	ag	$VALUES
	f	Lh;	b	ROT_180_FACE_XY
	f	Lh;	c	ROT_180_FACE_XZ
	f	Lh;	d	ROT_180_FACE_YZ
	f	Lh;	e	ROT_120_NNN
	f	Lh;	f	ROT_120_NNP
	f	Lh;	g	ROT_120_NPN
	f	Lh;	h	ROT_120_NPP
	f	Lh;	i	ROT_120_PNN
	f	Lh;	j	ROT_120_PNP
	f	Lh;	k	ROT_120_PPN
	f	Lh;	l	ROT_120_PPP
	f	Lh;	m	ROT_180_EDGE_XY_NEG
	f	Lh;	n	ROT_180_EDGE_XY_POS
	f	Lh;	o	ROT_180_EDGE_XZ_NEG
	f	Lh;	p	ROT_180_EDGE_XZ_POS
	f	Lh;	q	ROT_180_EDGE_YZ_NEG
	f	Lh;	r	ROT_180_EDGE_YZ_POS
	f	Lh;	s	ROT_90_X_NEG
	f	Lh;	t	ROT_90_X_POS
	f	Lh;	u	ROT_90_Y_NEG
	f	Lh;	v	ROT_90_Y_POS
	f	Lh;	w	ROT_90_Z_NEG
	f	Lh;	x	ROT_90_Z_POS
	f	Lh;	y	INVERSION
	f	Lh;	z	INVERT_X
c	h$1	com/mojang/math/OctahedralGroup$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction$Axis
c	i	com/mojang/math/SymmetricGroup3
	m	(Ljava/lang/String;IIII)V	<init>	<init>
		p	3		xMapping
		p	4		yMapping
		p	5		zMapping
	m	()Lorg/joml/Matrix3f;	a	transformation
	m	(I)I	a	permutation
		p	1		oldAxis
	m	(Li;)Li;	a	compose
		p	1		transformation
	m	([ILi;)Z	a	lambda$static$0
	m	([[Li;)V	a	lambda$static$1
	m	()[Li;	b	$values
	f	Li;	a	P123
	f	Li;	b	P213
	f	Li;	c	P132
	f	Li;	d	P231
	f	Li;	e	P312
	f	Li;	f	P321
	f	[I	g	permutation
	f	Lorg/joml/Matrix3f;	h	transformation
	f	I	i	ORDER
	f	[[Li;	j	cayleyTable
	f	[Li;	k	$VALUES
c	j	com/mojang/math/Transformation
	m	(Lorg/joml/Matrix4f;)V	<init>	<init>
		p	1		matrix
	m	(Lorg/joml/Vector3f;Lorg/joml/Quaternionf;Lorg/joml/Vector3f;Lorg/joml/Quaternionf;)V	<init>	<init>
		p	1		translation
		p	2		leftRotation
		p	3		scale
		p	4		rightRotation
	m	()Lj;	a	identity
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
		p	0		instance
	m	(Lj;)Lj;	a	compose
		p	1		other
	m	(Lj;F)Lj;	a	slerp
		p	1		target
		p	2		factor
	m	(Lorg/joml/Vector3f;Lorg/joml/Quaternionf;Lorg/joml/Vector3f;Lorg/joml/Quaternionf;)Lorg/joml/Matrix4f;	a	compose
		p	0		translation
		p	1		leftRotation
		p	2		scale
		p	3		rightRotation
	m	()Lj;	b	inverse
	m	(Lj;)Lorg/joml/Quaternionf;	b	lambda$static$3
		p	0		affineTransformation
	m	()Lorg/joml/Matrix4f;	c	getMatrix
	m	(Lj;)Lorg/joml/Vector3f;	c	lambda$static$2
		p	0		affineTransformation
	m	()Lorg/joml/Vector3f;	d	getTranslation
	m	(Lj;)Lorg/joml/Quaternionf;	d	lambda$static$1
		p	0		affineTransformation
	m	()Lorg/joml/Quaternionf;	e	getLeftRotation
	m	(Lj;)Lorg/joml/Vector3f;	e	lambda$static$0
	m	()Lorg/joml/Vector3f;	f	getScale
	m	()Lorg/joml/Quaternionf;	g	getRightRotation
	m	()V	h	ensureDecomposed
	m	()Lj;	i	lambda$static$5
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcom/mojang/serialization/Codec;	b	EXTENDED_CODEC
	f	Lorg/joml/Matrix4f;	c	matrix
	f	Z	d	decomposed
	f	Lorg/joml/Vector3f;	e	translation
	f	Lorg/joml/Quaternionf;	f	leftRotation
	f	Lorg/joml/Vector3f;	g	scale
	f	Lorg/joml/Quaternionf;	h	rightRotation
	f	Lj;	i	IDENTITY
c	k	com/mojang/math/package-info
c	l	net/minecraft/BlockUtil
	m	(Lcpb;Lgw;Lcsv;Lha;Lcsv;)Ljava/util/Optional;	a	getTopConnectedBlock
		p	0		world
		p	1		pos
		p	2		intermediateBlock
		p	3		direction
		p	4		endBlock
	m	(Lgw;Lha$a;ILha$a;ILjava/util/function/Predicate;)Ll$a;	a	getLargestRectangleAround
		p	0		center
		p	1		primaryAxis
		p	2		primaryMaxBlocks
		p	3		secondaryAxis
		p	4		secondaryMaxBlocks
		p	5		predicate
	m	(Ljava/util/function/Predicate;Lgw$a;Lha;I)I	a	getLimit
		p	0		predicate
		p	1		pos
		p	2		direction
		p	3		max
	m	([I)Lcom/mojang/datafixers/util/Pair;	a	getMaxRectangleLocation
		p	0		heights
c	l$a	net/minecraft/BlockUtil$FoundRectangle
	m	(Lgw;II)V	<init>	<init>
		p	1		lowerLeft
		p	2		width
		p	3		height
	f	Lgw;	a	minCorner
	f	I	b	axis1Size
	f	I	c	axis2Size
c	l$b	net/minecraft/BlockUtil$IntBounds
	m	(II)V	<init>	<init>
		p	1		min
		p	2		max
	f	I	a	min
	f	I	b	max
c	m	net/minecraft/CharPredicate
	m	(C)Z	a	lambda$negate$1
		p	1		c
	m	(Lm;C)Z	a	lambda$or$2
		p	2		c
	m	(Lm;)Lm;	and	and
		p	1		predicate
	m	(Lm;C)Z	b	lambda$and$0
		p	2		c
	m	(Lm;)Lm;	or	or
		p	1		predicate
	m	(C)Z	test	test
		p	1		c
c	n	net/minecraft/ChatFormatting
	m	(Ljava/lang/String;ILjava/lang/String;CILjava/lang/Integer;)V	<init>	<init>
		p	3		name
		p	4		code
		p	5		colorIndex
		p	6		colorValue
	m	(Ljava/lang/String;ILjava/lang/String;CZ)V	<init>	<init>
		p	3		name
		p	4		code
		p	5		modifier
	m	(Ljava/lang/String;ILjava/lang/String;CZILjava/lang/Integer;)V	<init>	<init>
		p	3		name
		p	4		code
		p	5		modifier
		p	6		colorIndex
		p	7		colorValue
	m	()C	a	getChar
	m	(C)Ln;	a	getByCode
		p	0		code
	m	(I)Ln;	a	getById
		p	0		colorIndex
	m	(Ljava/lang/String;)Ljava/lang/String;	a	stripFormatting
		p	0		string
	m	(Ln;)Ln;	a	lambda$static$1
		p	0		f
	m	(ZZ)Ljava/util/Collection;	a	getNames
		p	0		colors
		p	1		modifiers
	m	()I	b	getId
	m	(Ljava/lang/String;)Ln;	b	getByName
		p	0		name
	m	(Ln;)Ljava/lang/String;	b	lambda$static$0
		p	0		f
	m	()Ljava/lang/String;	c	getSerializedName
	m	(Ljava/lang/String;)Ljava/lang/String;	c	cleanName
		p	0		name
	m	()Z	d	isFormat
	m	()Z	e	isColor
	m	()Ljava/lang/Integer;	f	getColor
	m	()Ljava/lang/String;	g	getName
	m	()[Ln;	h	$values
	f	Ljava/lang/String;	A	name
	f	C	B	code
	f	Z	C	isFormat
	f	Ljava/lang/String;	D	toString
	f	I	E	id
	f	Ljava/lang/Integer;	F	color
	f	[Ln;	G	$VALUES
	f	Ln;	a	BLACK
	f	Ln;	b	DARK_BLUE
	f	Ln;	c	DARK_GREEN
	f	Ln;	d	DARK_AQUA
	f	Ln;	e	DARK_RED
	f	Ln;	f	DARK_PURPLE
	f	Ln;	g	GOLD
	f	Ln;	h	GRAY
	f	Ln;	i	DARK_GRAY
	f	Ln;	j	BLUE
	f	Ln;	k	GREEN
	f	Ln;	l	AQUA
	f	Ln;	m	RED
	f	Ln;	n	LIGHT_PURPLE
	f	Ln;	o	YELLOW
	f	Ln;	p	WHITE
	f	Ln;	q	OBFUSCATED
	f	Ln;	r	BOLD
	f	Ln;	s	STRIKETHROUGH
	f	Ln;	t	UNDERLINE
	f	Ln;	u	ITALIC
	f	Ln;	v	RESET
	f	Lcom/mojang/serialization/Codec;	w	CODEC
	f	C	x	PREFIX_CODE
	f	Ljava/util/Map;	y	FORMATTING_BY_NAME
	f	Ljava/util/regex/Pattern;	z	STRIP_FORMATTING_PATTERN
c	o	net/minecraft/CrashReport
	m	(Ljava/lang/String;Ljava/lang/Throwable;)V	<init>	<init>
		p	1		message
		p	2		cause
	m	()Ljava/lang/String;	a	getTitle
	m	(Ljava/io/File;)Z	a	saveToFile
		p	1		file
	m	(Ljava/lang/String;)Lp;	a	addCategory
		p	1		name
	m	(Ljava/lang/String;I)Lp;	a	addCategory
		p	1		name
		p	2		ignoredStackTraceCallCount
	m	(Ljava/lang/StringBuilder;)V	a	getDetails
		p	1		crashReportBuilder
	m	(Ljava/lang/Throwable;Ljava/lang/String;)Lo;	a	forThrowable
		p	0		cause
		p	1		title
	m	()Ljava/lang/Throwable;	b	getException
	m	()Ljava/lang/String;	c	getDetails
	m	()Ljava/lang/String;	d	getExceptionMessage
	m	()Ljava/lang/String;	e	getFriendlyReport
	m	()Ljava/io/File;	f	getSaveFile
	m	()Lab;	g	getSystemReport
	m	()V	h	preload
	m	()Ljava/lang/String;	i	getErrorComment
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/time/format/DateTimeFormatter;	b	DATE_TIME_FORMATTER
	f	Ljava/lang/String;	c	title
	f	Ljava/lang/Throwable;	d	exception
	f	Ljava/util/List;	e	details
	f	Ljava/io/File;	f	saveFile
	f	Z	g	trackingStackTrace
	f	[Ljava/lang/StackTraceElement;	h	uncategorizedStackTrace
	f	Lab;	i	systemReport
c	p	net/minecraft/CrashReportCategory
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		title
	m	()[Ljava/lang/StackTraceElement;	a	getStacktrace
	m	(I)I	a	fillInStackTrace
		p	1		ignoredCallCount
	m	(Lcpx;DDD)Ljava/lang/String;	a	formatLocation
		p	0		world
		p	1		x
		p	3		y
		p	5		z
	m	(Lcpx;III)Ljava/lang/String;	a	formatLocation
		p	0		world
		p	1		x
		p	2		y
		p	3		z
	m	(Lcpx;Lgw;)Ljava/lang/String;	a	formatLocation
		p	0		world
		p	1		pos
	m	(Ljava/lang/StackTraceElement;Ljava/lang/StackTraceElement;)Z	a	validateStackTrace
		p	1		prev
		p	2		next
	m	(Ljava/lang/String;Ljava/lang/Object;)Lp;	a	setDetail
		p	1		name
		p	2		detail
	m	(Ljava/lang/String;Ljava/lang/Throwable;)V	a	setDetailError
		p	1		name
		p	2		throwable
	m	(Ljava/lang/String;Lq;)Lp;	a	setDetail
		p	1		name
		p	2		callable
	m	(Ljava/lang/StringBuilder;)V	a	getDetails
		p	1		crashReportBuilder
	m	(Lp;Lcpx;Lgw;Ldfj;)V	a	populateBlockDetails
		p	0		element
		p	1		world
		p	2		pos
		p	3		state
	m	(I)V	b	trimStacktrace
		p	1		callCount
	m	(Lcpx;Lgw;)Ljava/lang/String;	b	lambda$populateBlockDetails$0
	f	Ljava/lang/String;	a	title
	f	Ljava/util/List;	b	entries
	f	[Ljava/lang/StackTraceElement;	c	stackTrace
c	p$a	net/minecraft/CrashReportCategory$Entry
	m	(Ljava/lang/String;Ljava/lang/Object;)V	<init>	<init>
		p	1		name
		p	2		detail
	m	()Ljava/lang/String;	a	getKey
	m	()Ljava/lang/String;	b	getValue
	f	Ljava/lang/String;	a	key
	f	Ljava/lang/String;	b	value
c	q	net/minecraft/CrashReportDetail
c	r	net/minecraft/DefaultUncaughtExceptionHandler
	m	(Lorg/slf4j/Logger;)V	<init>	<init>
		p	1		logger
	f	Lorg/slf4j/Logger;	a	logger
c	s	net/minecraft/DefaultUncaughtExceptionHandlerWithName
	m	(Lorg/slf4j/Logger;)V	<init>	<init>
		p	1		logger
	f	Lorg/slf4j/Logger;	a	logger
c	t	net/minecraft/DetectedVersion
	m	(Lcom/google/gson/JsonObject;)V	<init>	<init>
		p	1		json
	m	()Lad;	a	tryDetectVersion
	m	(Lami;)I	a	getPackVersion
		p	1		type
	m	()Ljava/lang/String;	b	getId
	m	()Ljava/lang/String;	c	getName
	m	()Leca;	d	getDataVersion
	m	()I	e	getProtocolVersion
	m	()Ljava/util/Date;	f	getBuildTime
	m	()Z	g	isStable
	f	Lad;	a	BUILT_IN
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ljava/lang/String;	c	id
	f	Ljava/lang/String;	d	name
	f	Z	e	stable
	f	Leca;	f	worldVersion
	f	I	g	protocolVersion
	f	I	h	resourcePackVersion
	f	I	i	dataPackVersion
	f	Ljava/util/Date;	j	buildTime
c	u	net/minecraft/FieldsAreNonnullByDefault
c	v	net/minecraft/FileUtil
	m	(Ljava/lang/String;)Ljava/lang/String;	a	getFullResourcePath
		p	0		path
	m	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	a	lambda$decomposePath$3
	m	(Ljava/nio/file/Path;)Z	a	isPathNormalized
		p	0		path
	m	(Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	a	findAvailableName
		p	0		path
		p	1		name
		p	2		extension
	m	(Ljava/nio/file/Path;Ljava/util/List;)Ljava/nio/file/Path;	a	resolvePath
		p	0		root
		p	1		paths
	m	([Ljava/lang/String;)V	a	validatePath
		p	0		paths
	m	(Ljava/lang/String;)Ljava/lang/String;	b	normalizeResourcePath
		p	0		path
	m	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	b	lambda$decomposePath$2
	m	(Ljava/nio/file/Path;)Z	b	isPathPortable
		p	0		path
	m	(Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;)Ljava/nio/file/Path;	b	createPathToResource
		p	0		path
		p	1		resourceName
		p	2		extension
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	c	decomposePath
		p	0		path
	m	(Ljava/nio/file/Path;)V	c	createDirectoriesSafe
		p	0		path
	m	(Ljava/lang/String;)Z	d	isValidStrictPathSegment
		p	0		name
	m	(Ljava/lang/String;)Ljava/lang/String;	e	lambda$decomposePath$1
	m	(Ljava/lang/String;)Ljava/lang/String;	f	lambda$decomposePath$0
	f	Ljava/util/regex/Pattern;	a	COPY_COUNTER_PATTERN
	f	I	b	MAX_FILE_NAME
	f	Ljava/util/regex/Pattern;	c	RESERVED_WINDOWS_FILENAMES
	f	Ljava/util/regex/Pattern;	d	STRICT_PATH_SEGMENT_CHECK
c	w	net/minecraft/MethodsReturnNonnullByDefault
c	x	net/minecraft/Optionull
	m	(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;	a	map
		p	0		value
		p	1		mapper
	m	(Ljava/lang/Object;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object;	a	mapOrDefault
		p	0		value
		p	1		mapper
		p	2		other
	m	(Ljava/lang/Object;Ljava/util/function/Function;Ljava/util/function/Supplier;)Ljava/lang/Object;	a	mapOrElse
		p	0		value
		p	1		mapper
		p	2		getter
	m	(Ljava/util/Collection;)Ljava/lang/Object;	a	first
		p	0		collection
	m	(Ljava/util/Collection;Ljava/lang/Object;)Ljava/lang/Object;	a	firstOrDefault
		p	0		collection
		p	1		defaultValue
	m	(Ljava/util/Collection;Ljava/util/function/Supplier;)Ljava/lang/Object;	a	firstOrElse
		p	0		collection
		p	1		getter
	m	([B)Z	a	isNullOrEmpty
		p	0		array
	m	([C)Z	a	isNullOrEmpty
		p	0		array
	m	([D)Z	a	isNullOrEmpty
		p	0		array
	m	([F)Z	a	isNullOrEmpty
		p	0		array
	m	([I)Z	a	isNullOrEmpty
		p	0		array
	m	([J)Z	a	isNullOrEmpty
		p	0		array
	m	([Ljava/lang/Object;)Z	a	isNullOrEmpty
		p	0		array
	m	([S)Z	a	isNullOrEmpty
		p	0		array
	m	([Z)Z	a	isNullOrEmpty
		p	0		array
c	y	net/minecraft/ReportedException
	m	(Lo;)V	<init>	<init>
		p	1		report
	m	()Lo;	a	getReport
	f	Lo;	a	report
c	z	net/minecraft/ResourceLocationException
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		message
	m	(Ljava/lang/String;Ljava/lang/Throwable;)V	<init>	<init>
		p	1		message
		p	2		throwable
c	aa	net/minecraft/SharedConstants
	m	()V	a	tryDetectVersion
	m	(C)Z	a	isAllowedChatCharacter
		p	0		chr
	m	(Lad;)V	a	setVersion
		p	0		gameVersion
	m	(Lcpc;)Z	a	debugVoidTerrain
		p	0		pos
	m	(Ljava/lang/String;)Ljava/lang/String;	a	filterText
		p	0		s
	m	(Ljava/lang/String;Z)Ljava/lang/String;	a	filterText
		p	0		s
		p	1		allowLinebreaks
	m	()Lad;	b	getCurrentVersion
	m	()I	c	getProtocolVersion
	m	()V	d	enableDataFixerOptimizations
	f	Z	A	DEBUG_COLLISION
	f	Z	B	DEBUG_SUPPORT_BLOCKS
	f	Z	C	DEBUG_SHAPES
	f	Z	D	DEBUG_NEIGHBORSUPDATE
	f	Z	E	DEBUG_STRUCTURES
	f	Z	F	DEBUG_LIGHT
	f	Z	G	DEBUG_SKY_LIGHT_SECTIONS
	f	Z	H	DEBUG_WORLDGENATTEMPT
	f	Z	I	DEBUG_SOLID_FACE
	f	Z	J	DEBUG_CHUNKS
	f	Z	K	DEBUG_GAME_EVENT_LISTENERS
	f	Z	L	DEBUG_DUMP_TEXTURE_ATLAS
	f	Z	M	DEBUG_DUMP_INTERPOLATED_TEXTURE_FRAMES
	f	Z	N	DEBUG_STRUCTURE_EDIT_MODE
	f	Z	O	DEBUG_SAVE_STRUCTURES_AS_SNBT
	f	Z	P	DEBUG_SYNCHRONOUS_GL_LOGS
	f	Z	Q	DEBUG_VERBOSE_SERVER_EVENTS
	f	Z	R	DEBUG_NAMED_RUNNABLES
	f	Z	S	DEBUG_GOAL_SELECTOR
	f	Z	T	DEBUG_VILLAGE_SECTIONS
	f	Z	U	DEBUG_BRAIN
	f	Z	V	DEBUG_BEES
	f	Z	W	DEBUG_RAIDS
	f	Z	X	DEBUG_BLOCK_BREAK
	f	Z	Y	DEBUG_RESOURCE_LOAD_TIMES
	f	Z	Z	DEBUG_MONITOR_TICK_TIMES
	f	Z	aA	DEBUG_DISABLE_BLENDING
	f	Z	aB	DEBUG_DISABLE_BELOW_ZERO_RETROGENERATION
	f	I	aC	DEFAULT_MINECRAFT_PORT
	f	Z	aD	INGAME_DEBUG_OUTPUT
	f	Z	aE	DEBUG_SUBTITLES
	f	I	aF	FAKE_MS_LATENCY
	f	I	aG	FAKE_MS_JITTER
	f	Lio/netty/util/ResourceLeakDetector$Level;	aH	NETTY_LEAK_DETECTION
	f	Z	aI	COMMAND_STACK_TRACES
	f	Z	aJ	DEBUG_WORLD_RECREATE
	f	Z	aK	DEBUG_SHOW_SERVER_DEBUG_VALUES
	f	Z	aL	DEBUG_STORE_CHUNK_STACKTRACES
	f	Z	aM	DEBUG_FEATURE_COUNT
	f	Z	aN	DEBUG_RESOURCE_GENERATION_OVERRIDE
	f	Z	aO	DEBUG_FORCE_TELEMETRY
	f	Z	aP	DEBUG_DONT_SEND_TELEMETRY_TO_BACKEND
	f	J	aQ	MAXIMUM_TICK_TIME_NANOS
	f	Z	aR	USE_WORKFLOWS_HOOKS
	f	Z	aS	CHECK_DATA_FIXER_SCHEMA
	f	Z	aT	IS_RUNNING_IN_IDE
	f	Ljava/util/Set;	aU	DATA_FIX_TYPES_TO_OPTIMIZE
	f	I	aV	WORLD_RESOLUTION
	f	I	aW	MAX_CHAT_LENGTH
	f	I	aX	MAX_COMMAND_LENGTH
	f	I	aY	MAX_CHAINED_NEIGHBOR_UPDATES
	f	Z	a	SNAPSHOT
	f	I	aZ	MAX_RENDER_DISTANCE
	f	Z	aa	DEBUG_KEEP_JIGSAW_BLOCKS_DURING_STRUCTURE_GEN
	f	Z	ab	DEBUG_DONT_SAVE_WORLD
	f	Z	ac	DEBUG_LARGE_DRIPSTONE
	f	Z	ad	DEBUG_PACKET_SERIALIZATION
	f	Z	ae	DEBUG_CARVERS
	f	Z	af	DEBUG_ORE_VEINS
	f	Z	ag	DEBUG_SCULK_CATALYST
	f	Z	ah	DEBUG_BYPASS_REALMS_VERSION_CHECK
	f	Z	ai	DEBUG_SOCIAL_INTERACTIONS
	f	Z	aj	DEBUG_VALIDATE_RESOURCE_PATH_CASE
	f	Z	ak	DEBUG_UNLOCK_ALL_TRADES
	f	Z	al	DEBUG_IGNORE_LOCAL_MOB_CAP
	f	Z	am	DEBUG_SMALL_SPAWN
	f	Z	an	DEBUG_DISABLE_LIQUID_SPREADING
	f	Z	ao	DEBUG_AQUIFERS
	f	Z	ap	DEBUG_JFR_PROFILING_ENABLE_LEVEL_LOADING
	f	Z	aq	debugGenerateSquareTerrainWithoutNoise
	f	Z	ar	debugGenerateStripedTerrainWithoutNoise
	f	Z	as	DEBUG_ONLY_GENERATE_HALF_THE_WORLD
	f	Z	at	DEBUG_DISABLE_FLUID_GENERATION
	f	Z	au	DEBUG_DISABLE_AQUIFERS
	f	Z	av	DEBUG_DISABLE_SURFACE
	f	Z	aw	DEBUG_DISABLE_CARVERS
	f	Z	ax	DEBUG_DISABLE_STRUCTURES
	f	Z	ay	DEBUG_DISABLE_FEATURES
	f	Z	az	DEBUG_DISABLE_ORE_VEINS
	f	I	b	WORLD_VERSION
	f	[C	ba	ILLEGAL_FILE_CHARACTERS
	f	I	bb	TICKS_PER_SECOND
	f	I	bc	MILLIS_PER_TICK
	f	I	bd	TICKS_PER_MINUTE
	f	I	be	TICKS_PER_GAME_DAY
	f	F	bf	AVERAGE_GAME_TICKS_PER_RANDOM_TICK_PER_BLOCK
	f	F	bg	AVERAGE_RANDOM_TICKS_PER_BLOCK_PER_MINUTE
	f	F	bh	AVERAGE_RANDOM_TICKS_PER_BLOCK_PER_GAME_DAY
	f	I	bi	WORLD_ICON_SIZE
	f	I	bj	SNAPSHOT_PROTOCOL_BIT
	f	Lad;	bk	CURRENT_VERSION
	f	Ljava/lang/String;	c	SERIES
	f	Ljava/lang/String;	d	VERSION_STRING
	f	I	e	RELEASE_NETWORK_PROTOCOL_VERSION
	f	I	f	SNAPSHOT_NETWORK_PROTOCOL_VERSION
	f	I	g	SNBT_NAG_VERSION
	f	Z	h	THROW_ON_TASK_FAILURE
	f	I	i	RESOURCE_PACK_FORMAT
	f	I	j	DATA_PACK_FORMAT
	f	I	k	LANGUAGE_FORMAT
	f	I	l	REPORT_FORMAT_VERSION
	f	Ljava/lang/String;	m	DATA_VERSION_TAG
	f	Z	n	USE_NEW_RENDERSYSTEM
	f	Z	o	MULTITHREADED_RENDERING
	f	Z	p	FIX_TNT_DUPE
	f	Z	q	FIX_SAND_DUPE
	f	Z	r	USE_DEBUG_FEATURES
	f	Z	s	DEBUG_OPEN_INCOMPATIBLE_WORLDS
	f	Z	t	DEBUG_ALLOW_LOW_SIM_DISTANCE
	f	Z	u	DEBUG_HOTKEYS
	f	Z	v	DEBUG_UI_NARRATION
	f	Z	w	DEBUG_RENDER
	f	Z	x	DEBUG_PATHFINDING
	f	Z	y	DEBUG_WATER
	f	Z	z	DEBUG_HEIGHTMAP
c	ab	net/minecraft/SystemReport
	m	()Ljava/lang/String;	a	toLineSeparatedString
	m	(Ljava/lang/String;Ljava/lang/Runnable;)V	a	ignoreErrors
		p	1		name
		p	2		adder
	m	(Ljava/lang/String;Ljava/lang/String;)V	a	setDetail
		p	1		name
		p	2		value
	m	(Ljava/lang/String;Ljava/util/function/Supplier;)V	a	setDetail
		p	1		name
		p	2		valueSupplier
	m	(Ljava/lang/StringBuilder;)V	a	appendToCrashReportString
		p	1		stringBuilder
	m	(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;)V	a	lambda$appendToCrashReportString$20
		p	1		name
		p	2		value
	m	(Ljava/util/List;)V	a	putPhysicalMemory
		p	1		memories
	m	(Ljava/util/Map$Entry;)Ljava/lang/String;	a	lambda$toLineSeparatedString$21
		p	0		entry
	m	(Loshi/SystemInfo;)V	a	putHardware
		p	1		systemInfo
	m	(Loshi/hardware/CentralProcessor$ProcessorIdentifier;)Ljava/lang/String;	a	lambda$putProcessor$16
	m	(Loshi/hardware/CentralProcessor;)V	a	putProcessor
		p	1		centralProcessor
	m	(Loshi/hardware/GlobalMemory;)V	a	putMemory
		p	1		globalMemory
	m	(Loshi/hardware/GraphicsCard;)Ljava/lang/String;	a	lambda$putGraphics$15
	m	(Loshi/hardware/HardwareAbstractionLayer;)V	a	lambda$putHardware$6
	m	(Loshi/hardware/PhysicalMemory;)Ljava/lang/String;	a	lambda$putPhysicalMemory$8
	m	(Loshi/hardware/VirtualMemory;)V	a	putVirtualMemory
		p	1		virtualMemory
	m	()Ljava/lang/String;	b	lambda$new$3
	m	(Ljava/util/List;)V	b	putGraphics
		p	1		graphicsCards
	m	(Loshi/hardware/CentralProcessor;)Ljava/lang/String;	b	lambda$putProcessor$19
	m	(Loshi/hardware/GlobalMemory;)V	b	lambda$putMemory$14
	m	(Loshi/hardware/HardwareAbstractionLayer;)V	b	lambda$putHardware$5
	m	(Loshi/hardware/PhysicalMemory;)Ljava/lang/String;	b	lambda$putPhysicalMemory$7
	m	(Loshi/hardware/VirtualMemory;)Ljava/lang/String;	b	lambda$putVirtualMemory$12
	m	()V	c	lambda$new$2
	m	(Loshi/hardware/CentralProcessor;)Ljava/lang/String;	c	lambda$putProcessor$18
	m	(Loshi/hardware/GlobalMemory;)V	c	lambda$putMemory$13
	m	(Loshi/hardware/HardwareAbstractionLayer;)V	c	lambda$putHardware$4
	m	(Loshi/hardware/VirtualMemory;)Ljava/lang/String;	c	lambda$putVirtualMemory$11
	m	()Ljava/lang/String;	d	lambda$new$1
	m	(Loshi/hardware/CentralProcessor;)Ljava/lang/String;	d	lambda$putProcessor$17
	m	(Loshi/hardware/VirtualMemory;)Ljava/lang/String;	d	lambda$putVirtualMemory$10
	m	()Ljava/lang/String;	e	lambda$new$0
	m	(Loshi/hardware/VirtualMemory;)Ljava/lang/String;	e	lambda$putVirtualMemory$9
	f	J	a	BYTES_PER_MEBIBYTE
	f	J	b	ONE_GIGA
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	Ljava/lang/String;	d	OPERATING_SYSTEM
	f	Ljava/lang/String;	e	JAVA_VERSION
	f	Ljava/lang/String;	f	JAVA_VM_VERSION
	f	Ljava/util/Map;	g	entries
c	ac	net/minecraft/Util
	m	()Ljava/util/stream/Collector;	a	toMap
	m	(I)Z	a	isWhitespace
		p	0		c
	m	(ILjava/lang/String;[Ljava/util/function/BooleanSupplier;)Z	a	runWithRetries
		p	0		retries
		p	1		taskName
		p	2		tasks
	m	(Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;)Lcom/mojang/datafixers/types/Type;	a	fetchChoiceType
		p	0		typeReference
		p	1		id
	m	(Lcom/mojang/serialization/DataResult;Ljava/util/function/Function;)Ljava/lang/Object;	a	getOrThrow
		p	0		result
		p	1		exceptionGetter
	m	(Ldgm;Ljava/lang/Object;)Ljava/lang/String;	a	getPropertyName
		p	0		property
		p	1		value
	m	(Lit/unimi/dsi/fastutil/objects/ObjectArrayList;Lasc;)Ljava/util/List;	a	shuffledCopy
		p	0		list
		p	1		random
	m	(Ljava/io/File;Ljava/io/File;Ljava/io/File;)V	a	safeReplaceFile
		p	0		current
		p	1		newFile
		p	2		backup
	m	(Ljava/io/File;Ljava/io/File;Ljava/io/File;Z)V	a	safeReplaceOrMoveFile
		p	0		current
		p	1		newPath
		p	2		backup
		p	3		noRestoreOnFail
	m	(Ljava/lang/Iterable;Ljava/lang/Object;)Ljava/lang/Object;	a	findNextInIterable
		p	0		iterable
		p	1		object
	m	(Ljava/lang/Object;Ljava/util/function/Consumer;)Ljava/lang/Object;	a	make
		p	0		object
		p	1		initializer
	m	(Ljava/lang/Runnable;)Ljava/lang/Thread;	a	lambda$makeIoExecutor$4
		p	0		runnable
	m	(Ljava/lang/Runnable;Ljava/util/function/Supplier;)Ljava/lang/Runnable;	a	name
		p	0		runnable
		p	1		messageSupplier
	m	(Ljava/lang/String;)V	a	logAndPauseIfInIde
		p	0		message
	m	(Ljava/lang/String;II)I	a	offsetByCodepoints
		p	0		string
		p	1		cursor
		p	2		delta
	m	(Ljava/lang/String;Laew;)Ljava/lang/String;	a	makeDescriptionId
		p	0		type
		p	1		id
	m	(Ljava/lang/String;Ljava/lang/Runnable;)Ljava/lang/Runnable;	a	wrapThreadWithTaskName
		p	0		activeThreadName
		p	1		task
	m	(Ljava/lang/String;Ljava/lang/Throwable;)V	a	logAndPauseIfInIde
		p	0		message
		p	1		throwable
	m	(Ljava/lang/String;Ljava/util/concurrent/ForkJoinPool;)Ljava/util/concurrent/ForkJoinWorkerThread;	a	lambda$makeExecutor$3
		p	1		forkJoinPool
	m	(Ljava/lang/String;Ljava/util/function/Consumer;)Ljava/util/function/Consumer;	a	prefix
		p	0		prefix
		p	1		consumer
	m	(Ljava/lang/String;Ljava/util/function/Supplier;)Ljava/util/function/Supplier;	a	wrapThreadWithTaskName
		p	0		activeThreadName
		p	1		supplier
	m	(Ljava/lang/String;Lm;)Ljava/lang/String;	a	sanitizeName
		p	0		string
		p	1		predicate
	m	(Ljava/lang/Thread;Ljava/lang/Throwable;)V	a	onThreadException
		p	0		thread
		p	1		t
	m	(Ljava/lang/Throwable;)V	a	throwAsRuntime
		p	0		t
	m	(Ljava/nio/file/Path;)Ljava/util/function/BooleanSupplier;	a	createDeleter
		p	0		path
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/util/function/BooleanSupplier;	a	createRenamer
		p	0		src
		p	1		dest
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/nio/file/Path;)V	a	safeReplaceFile
		p	0		current
		p	1		newPath
		p	2		backup
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/nio/file/Path;Z)V	a	safeReplaceOrMoveFile
		p	0		current
		p	1		newPath
		p	2		backup
		p	3		noRestoreOnFail
	m	(Ljava/nio/file/spi/FileSystemProvider;)Z	a	lambda$static$0
		p	0		fileSystemProvider
	m	(Ljava/util/List;)Ljava/lang/Object;	a	lastOf
		p	0		list
	m	(Ljava/util/List;I)Lcom/mojang/serialization/DataResult;	a	fixedSize
		p	0		list
		p	1		length
	m	(Ljava/util/List;Lasc;)Ljava/lang/Object;	a	getRandom
		p	0		list
		p	1		random
	m	(Ljava/util/List;Ljava/lang/Void;)Ljava/util/List;	a	lambda$fallibleSequence$12
		p	1		void_
	m	(Ljava/util/List;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	a	fallibleSequence
		p	0		futures
		p	1		exceptionHandler
	m	(Ljava/util/List;Ljava/util/function/IntFunction;)Ljava/util/function/ToIntFunction;	a	createIndexLookup
		p	0		values
		p	1		mapCreator
	m	(Ljava/util/List;[Ljava/util/concurrent/CompletableFuture;Ljava/util/function/Consumer;Ljava/util/concurrent/CompletableFuture;)V	a	lambda$fallibleSequence$11
		p	3		future
	m	(Ljava/util/Optional;Ljava/util/function/Consumer;Ljava/lang/Runnable;)Ljava/util/Optional;	a	ifElse
		p	0		optional
		p	1		presentAction
		p	2		elseAction
	m	(Ljava/util/concurrent/CompletableFuture;Ljava/util/List;Ljava/lang/Throwable;)V	a	lambda$sequenceFailFastAndCancel$9
		p	2		throwable
	m	(Ljava/util/concurrent/ExecutorService;)V	a	shutdownExecutor
		p	0		service
	m	(Ljava/util/function/BiFunction;)Ljava/util/function/BiFunction;	a	memoize
		p	0		biFunction
	m	(Ljava/util/function/Consumer;)V	a	setPause
		p	0		missingBreakpointHandler
	m	(Ljava/util/function/Consumer;Ljava/lang/String;Ljava/lang/String;)V	a	lambda$prefix$13
		p	2		string
	m	(Ljava/util/function/Consumer;Ljava/util/List;ILjava/lang/Object;Ljava/lang/Throwable;)V	a	lambda$fallibleSequence$10
		p	3		value
		p	4		throwable
	m	(Ljava/util/function/Function;)Lask;	a	singleKeyCache
		p	0		mapper
	m	(Ljava/util/function/Function;Ljava/util/function/Predicate;)Ljava/lang/Object;	a	blockUntilDone
		p	0		resultFactory
		p	1		donePredicate
	m	(Ljava/util/function/Supplier;)Ljava/lang/Object;	a	make
		p	0		factory
	m	(Ljava/util/function/Supplier;Ljava/util/function/Supplier;)Ljava/util/function/Supplier;	a	name
		p	0		supplier
		p	1		messageSupplier
	m	(Ljava/util/stream/IntStream;I)Lcom/mojang/serialization/DataResult;	a	fixedSize
		p	0		stream
		p	1		length
	m	(Ljava/util/stream/IntStream;Lasc;)Lit/unimi/dsi/fastutil/ints/IntArrayList;	a	toShuffledList
		p	0		stream
		p	1		random
	m	(Ljava/util/stream/LongStream;I)Lcom/mojang/serialization/DataResult;	a	fixedSize
		p	0		stream
		p	1		length
	m	(Ljava/util/stream/Stream;Lasc;)Ljava/util/List;	a	toShuffledList
		p	0		stream
		p	1		random
	m	(Lm;I)Ljava/lang/String;	a	lambda$sanitizeName$17
		p	1		charCode
	m	([ILasc;)I	a	getRandom
		p	0		array
		p	1		random
	m	([Ljava/lang/Object;Lasc;)Ljava/lang/Object;	a	getRandom
		p	0		array
		p	1		random
	m	([Ljava/util/function/BooleanSupplier;)Z	a	executeInSequence
		p	0		tasks
	m	()J	b	getMillis
	m	(I)Ljava/lang/String;	b	lambda$fixedSize$16
	m	(Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;)Lcom/mojang/datafixers/types/Type;	b	doFetchChoiceType
		p	0		typeReference
		p	1		id
	m	(Lit/unimi/dsi/fastutil/objects/ObjectArrayList;Lasc;)V	b	shuffle
		p	0		list
		p	1		random
	m	(Ljava/lang/Iterable;Ljava/lang/Object;)Ljava/lang/Object;	b	findPreviousInIterable
		p	0		iterable
		p	1		object
	m	(Ljava/lang/String;)Z	b	isBlank
		p	0		string
	m	(Ljava/lang/String;Ljava/lang/Runnable;)V	b	lambda$wrapThreadWithTaskName$5
	m	(Ljava/lang/String;Ljava/util/function/Supplier;)Ljava/lang/Object;	b	lambda$wrapThreadWithTaskName$6
	m	(Ljava/lang/Throwable;)Ljava/lang/Throwable;	b	pauseInIde
		p	0		t
	m	(Ljava/nio/file/Path;)Ljava/util/function/BooleanSupplier;	b	createFileDeletedCheck
		p	0		path
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/nio/file/Path;)V	b	copyBetweenDirs
		p	0		src
		p	1		dest
		p	2		toCopy
	m	(Ljava/util/List;)Ljava/util/concurrent/CompletableFuture;	b	sequence
		p	0		futures
	m	(Ljava/util/List;Lasc;)Ljava/util/Optional;	b	getRandomSafe
		p	0		list
		p	1		random
	m	(Ljava/util/List;Ljava/lang/Void;)Ljava/util/List;	b	lambda$sequence$8
		p	1		void_
	m	(Ljava/util/function/Function;)Ljava/util/function/Function;	b	memoize
		p	0		function
	m	([Ljava/lang/Object;Lasc;)Ljava/util/List;	b	shuffledCopy
		p	0		array
		p	1		random
	m	()J	c	getNanos
	m	(I)Ljava/lang/String;	c	lambda$fixedSize$15
	m	(Ljava/lang/String;)Ljava/util/concurrent/ExecutorService;	c	makeExecutor
		p	0		name
	m	(Ljava/lang/Throwable;)Ljava/lang/String;	c	describeError
		p	0		t
	m	(Ljava/nio/file/Path;)Ljava/util/function/BooleanSupplier;	c	createFileCreatedCheck
		p	0		path
	m	(Ljava/util/List;)Ljava/util/concurrent/CompletableFuture;	c	sequenceFailFast
		p	0		futures
	m	(Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;	c	blockUntilDone
		p	0		resultFactory
	m	()J	d	getEpochMillis
	m	(I)Ljava/lang/String;	d	lambda$fixedSize$14
	m	(Ljava/lang/String;)V	d	doPause
		p	0		message
	m	(Ljava/util/List;)Ljava/util/concurrent/CompletableFuture;	d	sequenceFailFastAndCancel
		p	0		futures
	m	()Ljava/lang/String;	e	getFilenameFormattedDateTime
	m	(Ljava/lang/String;)Z	e	lambda$getVmArguments$7
		p	0		runtimeArg
	m	(Ljava/util/List;)Ljava/util/function/ToIntFunction;	e	createIndexLookup
		p	0		values
	m	()Ljava/util/concurrent/ExecutorService;	f	backgroundExecutor
	m	(Ljava/lang/String;)V	f	lambda$static$2
		p	0		message
	m	()Ljava/util/concurrent/ExecutorService;	g	ioPool
	m	()V	h	shutdownExecutors
	m	()Lac$b;	i	getPlatform
	m	()Ljava/util/stream/Stream;	j	getVmArguments
	m	()Lit/unimi/dsi/fastutil/Hash$Strategy;	k	identityStrategy
	m	()V	l	startTimerHackThread
	m	()I	m	getMaxThreads
	m	()Ljava/util/concurrent/ExecutorService;	n	makeIoExecutor
	m	()Ljava/lang/IllegalStateException;	o	lambda$static$1
	f	J	a	NANOS_PER_MILLI
	f	Last$a;	b	timeSource
	f	Lcom/google/common/base/Ticker;	c	TICKER
	f	Ljava/util/UUID;	d	NIL_UUID
	f	Ljava/nio/file/spi/FileSystemProvider;	e	ZIP_FILE_SYSTEM_PROVIDER
	f	Lorg/slf4j/Logger;	f	LOGGER
	f	I	g	DEFAULT_MAX_THREADS
	f	Ljava/lang/String;	h	MAX_THREADS_SYSTEM_PROPERTY
	f	Ljava/util/concurrent/atomic/AtomicInteger;	i	WORKER_COUNT
	f	Ljava/util/concurrent/ExecutorService;	j	BACKGROUND_EXECUTOR
	f	Ljava/util/concurrent/ExecutorService;	k	IO_POOL
	f	Ljava/time/format/DateTimeFormatter;	l	FILENAME_DATE_TIME_FORMATTER
	f	Ljava/util/function/Consumer;	m	thePauser
c	ac$1	net/minecraft/Util$1
c	ac$2	net/minecraft/Util$10
	f	Ljava/util/function/Function;	a	val$function
	f	Ljava/util/Map;	b	cache
c	ac$3	net/minecraft/Util$11
	m	(Ljava/util/function/BiFunction;Lcom/mojang/datafixers/util/Pair;)Ljava/lang/Object;	a	lambda$apply$0
		p	1		pair
	f	Ljava/util/function/BiFunction;	a	val$function
	f	Ljava/util/Map;	b	cache
c	ac$4	net/minecraft/Util$2
c	ac$5	net/minecraft/Util$5
	f	Ljava/nio/file/Path;	a	val$from
	f	Ljava/nio/file/Path;	b	val$to
c	ac$6	net/minecraft/Util$6
	f	Ljava/nio/file/Path;	a	val$target
c	ac$7	net/minecraft/Util$7
	f	Ljava/nio/file/Path;	a	val$target
c	ac$8	net/minecraft/Util$8
	f	Ljava/nio/file/Path;	a	val$target
c	ac$9	net/minecraft/Util$9
c	ac$a	net/minecraft/Util$IdentityStrategy
	m	()[Lac$a;	a	$values
	f	Lac$a;	a	INSTANCE
	f	[Lac$a;	b	$VALUES
c	ac$b	net/minecraft/Util$OS
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()Ljava/lang/String;	a	telemetryName
	m	(Ljava/io/File;)V	a	openFile
		p	1		file
	m	(Ljava/lang/String;)V	a	openUri
		p	1		uri
	m	(Ljava/net/URI;)V	a	openUri
		p	1		uri
	m	(Ljava/net/URL;)V	a	openUrl
		p	1		url
	m	()[Lac$b;	b	$values
	m	(Ljava/net/URL;)[Ljava/lang/String;	b	getOpenUrlArguments
		p	1		url
	m	(Ljava/net/URL;)Ljava/lang/Process;	c	lambda$openUrl$0
	f	Lac$b;	a	LINUX
	f	Lac$b;	b	SOLARIS
	f	Lac$b;	c	WINDOWS
	f	Lac$b;	d	OSX
	f	Lac$b;	e	UNKNOWN
	f	Ljava/lang/String;	f	telemetryName
	f	[Lac$b;	g	$VALUES
c	ac$b$1	net/minecraft/Util$OS$1
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	(Ljava/net/URL;)[Ljava/lang/String;	b	getOpenUrlArguments
		p	1		url
c	ac$b$2	net/minecraft/Util$OS$2
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	(Ljava/net/URL;)[Ljava/lang/String;	b	getOpenUrlArguments
		p	1		url
c	ad	net/minecraft/WorldVersion
	m	(Lami;)I	a	getPackVersion
		p	1		type
	m	()Ljava/lang/String;	b	getId
	m	()Ljava/lang/String;	c	getName
	m	()Leca;	d	getDataVersion
	m	()I	e	getProtocolVersion
	m	()Ljava/util/Date;	f	getBuildTime
	m	()Z	g	isStable
c	ae	net/minecraft/advancements/Advancement
	m	(Ljava/util/Optional;Ljava/util/Optional;Laj;Ljava/util/Map;Lai;Z)V	<init>	<init>
		p	1		parent
		p	2		display
		p	3		rewards
		p	4		criteria
		p	5		requirements
		p	6		sendsTelemetryEvent
	m	()Lcom/google/gson/JsonObject;	a	serializeToJson
	m	(Laf;)Ltl;	a	name
		p	0		identifiedAdvancement
	m	(Laq;)Ltl;	a	decorateName
		p	0		display
	m	(Lcom/google/gson/JsonObject;Laew;)V	a	lambda$serializeToJson$2
		p	1		parent
	m	(Lcom/google/gson/JsonObject;Laq;)V	a	lambda$serializeToJson$3
		p	1		display
	m	(Lcom/google/gson/JsonObject;Lbg;)Lae;	a	fromJson
		p	0		json
		p	1		predicateDeserializer
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lso;Laq;)V	a	lambda$write$4
		p	0		buf
		p	1		display
	m	(Ltl;Luh;)Luh;	a	lambda$decorateName$0
		p	1		style
	m	()Z	b	isRoot
	m	(Laf;)Ltl;	b	lambda$name$1
	m	(Lso;)Lae;	b	read
		p	0		buf
	m	()Ljava/util/Optional;	c	parent
	m	()Ljava/util/Optional;	d	display
	m	()Laj;	e	rewards
	m	()Ljava/util/Map;	f	criteria
	m	()Lai;	g	requirements
	m	()Z	h	sendsTelemetryEvent
	m	()Ljava/util/Optional;	i	name
	f	Ljava/util/Optional;	a	parent
	f	Ljava/util/Optional;	b	display
	f	Laj;	c	rewards
	f	Ljava/util/Map;	d	criteria
	f	Lai;	e	requirements
	f	Z	f	sendsTelemetryEvent
	f	Ljava/util/Optional;	g	name
c	ae$a	net/minecraft/advancements/Advancement$Builder
	m	()Lae$a;	a	advancement
	m	(Laew;)Lae$a;	a	parent
		p	1		parentId
	m	(Laf;)Lae$a;	a	parent
		p	1		parent
	m	(Lai$a;)Lae$a;	a	requirements
		p	1		merger
	m	(Lai;)Lae$a;	a	requirements
		p	1		requirements
	m	(Laj$a;)Lae$a;	a	rewards
		p	1		builder
	m	(Laj;)Lae$a;	a	rewards
		p	1		rewards
	m	(Laq;)Lae$a;	a	display
		p	1		display
	m	(Lcjf;Ltl;Ltl;Laew;Lar;ZZZ)Lae$a;	a	display
		p	1		icon
		p	2		title
		p	3		description
		p	4		background
		p	5		frame
		p	6		showToast
		p	7		announceToChat
		p	8		hidden
	m	(Lcpu;Ltl;Ltl;Laew;Lar;ZZZ)Lae$a;	a	display
		p	1		icon
		p	2		title
		p	3		description
		p	4		background
		p	5		frame
		p	6		showToast
		p	7		announceToChat
		p	8		hidden
	m	(Ljava/lang/String;Lam;)Lae$a;	a	addCriterion
		p	1		name
		p	2		criterion
	m	(Ljava/util/Map;)Lai;	a	lambda$build$0
	m	(Ljava/util/function/Consumer;Ljava/lang/String;)Laf;	a	save
		p	1		exporter
		p	2		id
	m	()Lae$a;	b	recipeAdvancement
	m	(Laew;)Laf;	b	build
		p	1		id
	m	()Lae$a;	c	sendsTelemetryEvent
	f	Ljava/util/Optional;	a	parent
	f	Ljava/util/Optional;	b	display
	f	Laj;	c	rewards
	f	Lcom/google/common/collect/ImmutableMap$Builder;	d	criteria
	f	Ljava/util/Optional;	e	requirements
	f	Lai$a;	f	requirementsStrategy
	f	Z	g	sendsTelemetryEvent
c	af	net/minecraft/advancements/AdvancementHolder
	m	()Laew;	a	id
	m	(Lso;)V	a	write
		p	1		buf
	m	()Lae;	b	value
	m	(Lso;)Laf;	b	read
		p	0		buf
	f	Laew;	a	id
	f	Lae;	b	value
c	ag	net/minecraft/advancements/AdvancementNode
	m	(Laf;Lag;)V	<init>	<init>
		p	1		advancementEntry
		p	2		parent
	m	()Lae;	a	advancement
	m	(Lag;)Lag;	a	getRoot
		p	0		advancement
	m	()Laf;	b	holder
	m	(Lag;)V	b	addChild
		p	1		advancement
	m	()Lag;	c	parent
	m	()Lag;	d	root
	m	()Ljava/lang/Iterable;	e	children
	f	Laf;	a	holder
	f	Lag;	b	parent
	f	Ljava/util/Set;	c	children
c	ah	net/minecraft/advancements/AdvancementProgress
	m	(Ljava/util/Map;)V	<init>	<init>
		p	1		criteriaProgresses
	m	()Z	a	isDone
	m	(Lah;)I	a	compareTo
	m	(Lai;)V	a	update
		p	1		requirements
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$8
		p	0		instance
	m	(Ljava/lang/String;)Z	a	grantProgress
		p	1		name
	m	(Ljava/time/Instant;)Ljava/time/temporal/TemporalAccessor;	a	lambda$static$0
		p	0		instant
	m	(Ljava/util/Map$Entry;)Ljava/time/Instant;	a	lambda$static$4
		p	0		entry
	m	(Ljava/util/Map;)Ljava/util/Map;	a	lambda$static$5
		p	0		map
	m	(Ljava/util/Map;Ljava/lang/Boolean;)Lah;	a	lambda$static$7
		p	0		criteriaProgresses
		p	1		done
	m	(Ljava/util/Set;Ljava/util/Map$Entry;)Z	a	lambda$update$9
		p	1		progress
	m	(Lso;)V	a	serializeToNetwork
		p	1		buf
	m	(Lso;Lan;)V	a	lambda$serializeToNetwork$10
		p	0		bufx
		p	1		progresses
	m	()Z	b	hasProgress
	m	(Lah;)Ljava/util/Map;	b	lambda$static$6
		p	0		advancementProgress
	m	(Ljava/lang/String;)Z	b	revokeProgress
		p	1		name
	m	(Ljava/util/Map$Entry;)Z	b	lambda$static$3
		p	0		entry
	m	(Ljava/util/Map;)Ljava/util/Map;	b	lambda$static$2
		p	0		map
	m	(Lso;)Lah;	b	fromNetwork
		p	0		buf
	m	()F	c	getPercent
	m	(Ljava/lang/String;)Lan;	c	getCriterion
		p	1		name
	m	(Ljava/util/Map$Entry;)Lan;	c	lambda$static$1
		p	0		entry
	m	()Ltl;	d	getProgressText
	m	(Ljava/lang/String;)Z	d	isCriterionDone
		p	1		name
	m	()Ljava/lang/Iterable;	e	getRemainingCriteria
	m	()Ljava/lang/Iterable;	f	getCompletedCriteria
	m	()Ljava/time/Instant;	g	getFirstProgressDate
	m	()I	h	countCompletedRequirements
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/time/format/DateTimeFormatter;	b	OBTAINED_TIME_FORMAT
	f	Lcom/mojang/serialization/Codec;	c	OBTAINED_TIME_CODEC
	f	Lcom/mojang/serialization/Codec;	d	CRITERIA_CODEC
	f	Ljava/util/Map;	e	criteria
	f	Lai;	f	requirements
c	ai	net/minecraft/advancements/AdvancementRequirements
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()I	a	size
	m	(I)[Ljava/lang/String;	a	lambda$anyOf$2
	m	(Lcom/google/gson/JsonArray;Ljava/util/Set;)Lai;	a	fromJson
		p	0		json
		p	1		criteria
	m	(Ljava/lang/String;)[Ljava/lang/String;	a	lambda$allOf$0
	m	(Ljava/util/Collection;)Lai;	a	allOf
		p	0		requirements
	m	(Ljava/util/function/Predicate;)Z	a	test
		p	1		predicate
	m	(Lso;)V	a	write
		p	1		buf
	m	([Ljava/lang/String;Ljava/util/function/Predicate;)Z	a	anyMatch
		p	0		requirements
		p	1		predicate
	m	()Lcom/google/gson/JsonArray;	b	toJson
	m	(I)[[Ljava/lang/String;	b	lambda$allOf$1
		p	0		size
	m	(Ljava/util/Collection;)Lai;	b	anyOf
		p	0		requirements
	m	(Ljava/util/function/Predicate;)I	b	count
		p	1		predicate
	m	(Lso;)[[Ljava/lang/String;	b	read
		p	0		buf
	m	()Z	c	isEmpty
	m	()Ljava/util/Set;	d	names
	m	()[[Ljava/lang/String;	e	requirements
	f	Lai;	a	EMPTY
	f	[[Ljava/lang/String;	b	requirements
c	ai$a	net/minecraft/advancements/AdvancementRequirements$Strategy
	m	(Ljava/util/Collection;)Lai;	create	create
		p	1		requirements
	f	Lai$a;	a	AND
	f	Lai$a;	b	OR
c	aj	net/minecraft/advancements/AdvancementRewards
	m	(I[Laew;[Laew;Ldp$a;)V	<init>	<init>
		p	1		experience
		p	2		loot
		p	3		recipes
		p	4		function
	m	()[Laew;	a	getRecipes
	m	(Lakr;)V	a	grant
		p	1		player
	m	(Lcom/google/gson/JsonObject;)Laj;	a	deserialize
		p	0		json
	m	(Lnet/minecraft/server/MinecraftServer;Lakr;Ldp;)V	a	lambda$grant$0
		p	2		function
	m	()Lcom/google/gson/JsonElement;	b	serializeToJson
	f	Laj;	a	EMPTY
	f	I	b	experience
	f	[Laew;	c	loot
	f	[Laew;	d	recipes
	f	Ldp$a;	e	function
c	aj$a	net/minecraft/advancements/AdvancementRewards$Builder
	m	()Laj;	a	build
	m	(I)Laj$a;	a	experience
		p	0		experience
	m	(Laew;)Laj$a;	a	loot
		p	0		loot
	m	(I)Laj$a;	b	addExperience
		p	1		experience
	m	(Laew;)Laj$a;	b	addLootTable
		p	1		loot
	m	(Laew;)Laj$a;	c	recipe
		p	0		recipe
	m	(Laew;)Laj$a;	d	addRecipe
		p	1		recipe
	m	(Laew;)Laj$a;	e	function
		p	0		function
	m	(Laew;)Laj$a;	f	runs
		p	1		function
	f	I	a	experience
	f	Ljava/util/List;	b	loot
	f	Ljava/util/List;	c	recipes
	f	Laew;	d	function
c	ak	net/minecraft/advancements/AdvancementTree
	m	()V	a	clear
	m	(Laew;)Lag;	a	get
		p	1		id
	m	(Laf;)Lag;	a	get
		p	1		advancement
	m	(Lag;)V	a	remove
		p	1		advancement
	m	(Lak$a;)V	a	setListener
		p	1		listener
	m	(Ljava/util/Collection;)V	a	addAll
		p	1		advancements
	m	(Ljava/util/Set;)V	a	remove
		p	1		advancements
	m	()Ljava/lang/Iterable;	b	roots
	m	(Laf;)Z	b	tryInsert
		p	1		advancement
	m	()Ljava/util/Collection;	c	nodes
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/Map;	b	nodes
	f	Ljava/util/Set;	c	roots
	f	Ljava/util/Set;	d	tasks
	f	Lak$a;	e	listener
c	ak$a	net/minecraft/advancements/AdvancementTree$Listener
	m	()V	a	onAdvancementsCleared
	m	(Lag;)V	a	onAddAdvancementRoot
		p	1		root
	m	(Lag;)V	b	onRemoveAdvancementRoot
		p	1		root
	m	(Lag;)V	c	onAddAdvancementTask
		p	1		dependent
	m	(Lag;)V	d	onRemoveAdvancementTask
		p	1		dependent
c	al	net/minecraft/advancements/CriteriaTriggers
	m	()Ljava/lang/Iterable;	a	all
	m	(Laew;)Lao;	a	getCriterion
		p	0		id
	m	(Lao;)Laew;	a	getId
		p	0		criterion
	m	(Ljava/lang/String;Lao;)Lao;	a	register
		p	0		id
		p	1		criterion
	f	Lbj;	A	EFFECTS_CHANGED
	f	Ldh;	B	USED_TOTEM
	f	Lbi;	C	NETHER_TRAVEL
	f	Lbw;	D	FISHING_ROD_HOOKED
	f	Laz;	E	CHANNELED_LIGHTNING
	f	Lcv;	F	SHOT_CROSSBOW
	f	Lcd;	G	KILLED_BY_CROSSBOW
	f	Lcs;	H	RAID_WIN
	f	Lcs;	I	BAD_OMEN
	f	Lcx;	J	HONEY_BLOCK_SLIDE
	f	Lau;	K	BEE_NEST_DESTROYED
	f	Lde;	L	TARGET_BLOCK_HIT
	f	Lcc;	M	ITEM_USED_ON_BLOCK
	f	Lck;	N	GENERATE_LOOT
	f	Lco;	O	THROWN_ITEM_PICKED_UP_BY_ENTITY
	f	Lco;	P	THROWN_ITEM_PICKED_UP_BY_PLAYER
	f	Lcq;	Q	PLAYER_INTERACTED_WITH_ENTITY
	f	Lcz;	R	START_RIDING_TRIGGER
	f	Lci;	S	LIGHTNING_STRIKE
	f	Ldi;	T	USING_ITEM
	f	Lbi;	U	FALL_FROM_HEIGHT
	f	Lbi;	V	RIDE_ENTITY_IN_LAVA_TRIGGER
	f	Lce;	W	KILL_MOB_NEAR_SCULK_CATALYST
	f	Lcc;	X	ALLAY_DROP_ITEM_ON_BLOCK
	f	Lcs;	Y	AVOID_VIBRATION
	f	Lct;	Z	RECIPE_CRAFTED
	f	Lby;	a	IMPOSSIBLE
	f	Lcom/google/common/collect/BiMap;	aa	CRITERIA
	f	Lce;	b	PLAYER_KILLED_ENTITY
	f	Lce;	c	ENTITY_KILLED_PLAYER
	f	Lbm;	d	ENTER_BLOCK
	f	Lbz;	e	INVENTORY_CHANGED
	f	Lcu;	f	RECIPE_UNLOCKED
	f	Lcp;	g	PLAYER_HURT_ENTITY
	f	Lbp;	h	ENTITY_HURT_PLAYER
	f	Lbk;	i	ENCHANTED_ITEM
	f	Lbu;	j	FILLED_BUCKET
	f	Lax;	k	BREWED_POTION
	f	Lba;	l	CONSTRUCT_BEACON
	f	Ldg;	m	USED_ENDER_EYE
	f	Ldb;	n	SUMMONED_ENTITY
	f	Law;	o	BRED_ANIMALS
	f	Lcs;	p	LOCATION
	f	Lcs;	q	SLEPT_IN_BED
	f	Lbd;	r	CURED_ZOMBIE_VILLAGER
	f	Ldf;	s	TRADE
	f	Lca;	t	ITEM_DURABILITY_CHANGED
	f	Lcf;	u	LEVITATION
	f	Lay;	v	CHANGED_DIMENSION
	f	Lcs;	w	TICK
	f	Ldd;	x	TAME_ANIMAL
	f	Lcc;	y	PLACED_BLOCK
	f	Lbb;	z	CONSUME_ITEM
c	am	net/minecraft/advancements/Criterion
	m	()Lcom/google/gson/JsonElement;	a	serializeToJson
	m	(Lcom/google/gson/JsonObject;Lbg;)Lam;	a	criterionFromJson
		p	0		obj
		p	1		predicateDeserializer
	m	(Lcom/google/gson/JsonObject;Lbg;Lao;)Lam;	a	criterionFromJson
		p	0		json
		p	1		predicateDeserializer
		p	2		trigger
	m	()Lao;	b	trigger
	m	(Lcom/google/gson/JsonObject;Lbg;)Ljava/util/Map;	b	criteriaFromJson
		p	0		obj
		p	1		predicateDeserializer
	m	()Lap;	c	triggerInstance
	f	Lao;	a	trigger
	f	Lap;	b	triggerInstance
c	an	net/minecraft/advancements/CriterionProgress
	m	()Z	a	isDone
	m	(Lso;)V	a	serializeToNetwork
		p	1		buf
	m	()V	b	grant
	m	(Lso;)Lan;	b	fromNetwork
		p	0		buf
	m	()V	c	revoke
	m	()Ljava/time/Instant;	d	getObtained
	f	Ljava/time/Instant;	a	obtained
c	ao	net/minecraft/advancements/CriterionTrigger
	m	(Lafe;)V	a	removePlayerListeners
		p	1		tracker
	m	(Lafe;Lao$a;)V	a	addPlayerListener
		p	1		manager
		p	2		conditions
	m	(Lap;)Lam;	a	createCriterion
		p	1		conditions
	m	(Lcom/google/gson/JsonObject;Lbg;)Lap;	a	createInstance
		p	1		obj
		p	2		predicateDeserializer
	m	(Lafe;Lao$a;)V	b	removePlayerListener
		p	1		manager
		p	2		conditions
c	ao$a	net/minecraft/advancements/CriterionTrigger$Listener
	m	(Lap;Laf;Ljava/lang/String;)V	<init>	<init>
		p	1		conditions
		p	3		id
	m	()Lap;	a	trigger
	m	(Lafe;)V	a	run
		p	1		tracker
	m	()Laf;	b	advancement
	m	()Ljava/lang/String;	c	criterion
	f	Lap;	a	trigger
	f	Laf;	b	advancement
	f	Ljava/lang/String;	c	criterion
c	ap	net/minecraft/advancements/CriterionTriggerInstance
	m	()Lcom/google/gson/JsonObject;	a	serializeToJson
c	aq	net/minecraft/advancements/DisplayInfo
	m	(Lcjf;Ltl;Ltl;Laew;Lar;ZZZ)V	<init>	<init>
		p	1		icon
		p	2		title
		p	3		description
		p	4		background
		p	5		frame
		p	6		showToast
		p	7		announceToChat
		p	8		hidden
	m	()Ltl;	a	getTitle
	m	(FF)V	a	setLocation
		p	1		x
		p	2		y
	m	(Lcom/google/gson/JsonObject;)Laq;	a	fromJson
		p	0		obj
	m	(Lso;)V	a	serializeToNetwork
		p	1		buf
	m	()Ltl;	b	getDescription
	m	(Lcom/google/gson/JsonObject;)Lcjf;	b	getIcon
		p	0		json
	m	(Lso;)Laq;	b	fromNetwork
		p	0		buf
	m	()Lcjf;	c	getIcon
	m	()Laew;	d	getBackground
	m	()Lar;	e	getFrame
	m	()F	f	getX
	m	()F	g	getY
	m	()Z	h	shouldShowToast
	m	()Z	i	shouldAnnounceChat
	m	()Z	j	isHidden
	m	()Lcom/google/gson/JsonElement;	k	serializeToJson
	m	()Lcom/google/gson/JsonObject;	l	serializeIcon
	f	Ltl;	a	title
	f	Ltl;	b	description
	f	Lcjf;	c	icon
	f	Laew;	d	background
	f	Lar;	e	frame
	f	Z	f	showToast
	f	Z	g	announceChat
	f	Z	h	hidden
	f	F	i	x
	f	F	j	y
c	ar	net/minecraft/advancements/FrameType
	m	(Ljava/lang/String;ILjava/lang/String;Ln;)V	<init>	<init>
		p	3		id
		p	4		titleFormat
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/lang/String;)Lar;	a	byName
		p	0		name
	m	()Ln;	b	getChatColor
	m	()Ltl;	c	getDisplayName
	m	()[Lar;	d	$values
	f	Lar;	a	TASK
	f	Lar;	b	CHALLENGE
	f	Lar;	c	GOAL
	f	Ljava/lang/String;	d	name
	f	Ln;	e	chatColor
	f	Ltl;	f	displayName
	f	[Lar;	g	$VALUES
c	as	net/minecraft/advancements/TreeNodePosition
	m	(Lag;Las;Las;II)V	<init>	<init>
		p	1		advancement
		p	2		parent
		p	3		previousSibling
		p	4		childrenSize
		p	5		depth
	m	()V	a	firstWalk
	m	(F)V	a	thirdWalk
		p	1		deltaRow
	m	(FIF)F	a	secondWalk
		p	1		deltaRow
		p	2		depth
		p	3		minRow
	m	(Lag;)V	a	run
		p	0		root
	m	(Lag;Las;)Las;	a	addChild
		p	1		advancement
		p	2		lastChild
	m	(Laq;)V	a	lambda$finalizePosition$0
	m	(Las;)Las;	a	apportion
		p	1		last
	m	(Las;F)V	a	moveSubtree
		p	1		positioner
		p	2		extraRowDistance
	m	(Las;Las;)Las;	a	getAncestor
	m	()V	b	executeShifts
	m	()Las;	c	previousOrThread
	m	()Las;	d	nextOrThread
	m	()V	e	finalizePosition
	f	Lag;	a	node
	f	Las;	b	parent
	f	Las;	c	previousSibling
	f	I	d	childIndex
	f	Ljava/util/List;	e	children
	f	Las;	f	ancestor
	f	Las;	g	thread
	f	I	h	x
	f	F	i	y
	f	F	j	mod
	f	F	k	change
	f	F	l	shift
c	at	net/minecraft/advancements/critereon/AbstractCriterionTriggerInstance
	m	(Ljava/util/Optional;)V	<init>	<init>
		p	1		playerPredicate
	m	()Lcom/google/gson/JsonObject;	a	serializeToJson
	m	(Lcom/google/gson/JsonObject;Lbc;)V	a	lambda$serializeToJson$0
		p	1		predicate
	m	()Ljava/util/Optional;	b	playerPredicate
	f	Ljava/util/Optional;	a	player
c	au	net/minecraft/advancements/critereon/BeeNestDestroyedTrigger
	m	(Laew;)Lcom/google/gson/JsonSyntaxException;	a	lambda$deserializeBlock$0
	m	(Lakr;Ldfj;Lcjf;I)V	a	trigger
		p	1		player
		p	2		state
		p	3		stack
		p	4		beeCount
	m	(Lcom/google/gson/JsonObject;)Lcsv;	a	deserializeBlock
		p	0		root
	m	(Lcom/google/gson/JsonObject;Ljava/util/Optional;Lbg;)Lau$a;	a	createInstance
	m	(Ldfj;Lcjf;ILau$a;)Z	a	lambda$trigger$1
		p	3		conditions
	m	(Lcom/google/gson/JsonObject;Ljava/util/Optional;Lbg;)Lcw$a;	b	createInstance
		p	1		obj
		p	2		predicate
		p	3		predicateDeserializer
c	au$a	net/minecraft/advancements/critereon/BeeNestDestroyedTrigger$TriggerInstance
	m	(Ljava/util/Optional;Lcsv;Ljava/util/Optional;Lcl$d;)V	<init>	<init>
		p	1		playerPredicate
		p	2		block
		p	3		item
		p	4		beeCount
	m	()Lcom/google/gson/JsonObject;	a	serializeToJson
	m	(Lcom/google/gson/JsonObject;Lcb;)V	a	lambda$serializeToJson$0
		p	1		item
	m	(Lcsv;Lcb$a;Lcl$d;)Lam;	a	destroyedBeeNest
		p	0		block
		p	1		itemPredicateBuilder
		p	2		beeCountRange
	m	(Ldfj;Lcjf;I)Z	a	matches
		p	1		state
		p	2		stack
		p	3		count
	f	Lcsv;	a	block
	f	Ljava/util/Optional;	b	item
	f	Lcl$d;	c	numBees
c	av	net/minecraft/advancements/critereon/BlockPredicate
	m	()Ljava/util/Optional;	a	tag
	m	(Lakq;Lgw;)Z	a	matches
		p	1		world
		p	2		pos
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Lhi;)Ljava/util/List;	a	lambda$static$0
	m	()Ljava/util/Optional;	b	blocks
	m	()Ljava/util/Optional;	c	properties
	m	()Ljava/util/Optional;	d	nbt
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Optional;	b	tag
	f	Ljava/util/Optional;	c	blocks
	f	Ljava/util/Optional;	d	properties
	f	Ljava/util/Optional;	e	nbt
	f	Lcom/mojang/serialization/Codec;	f	BLOCKS_CODEC
c	av$a	net/minecraft/advancements/critereon/BlockPredicate$Builder
	m	()Lav$a;	a	block
	m	(Laqh;)Lav$a;	a	of
		p	1		tag
	m	(Lda$a;)Lav$a;	a	setProperties
		p	1		state
	m	(Ljava/util/Collection;)Lav$a;	a	of
		p	1		blocks
	m	(Lqw;)Lav$a;	a	hasNbt
		p	1		nbt
	m	([Lcsv;)Lav$a;	a	of
		p	1		blocks
	m	()Lav;	b	build
	f	Ljava/util/Optional;	a	blocks
	f	Ljava/util/Optional;	b	tag
	f	Ljava/util/Optional;	c	properties
	f	Ljava/util/Optional;	d	nbt
c	aw	net/minecraft/advancements/critereon/BredAnimalsTrigger
	m	(Lakr;Lbur;Lbur;Lbil;)V	a	trigger
		p	1		player
		p	2		parent
		p	3		partner
		p	4		child
	m	(Lcom/google/gson/JsonObject;Ljava/util/Optional;Lbg;)Law$a;	a	createInstance
	m	(Lecq;Lecq;Lecq;Law$a;)Z	a	lambda$trigger$0
		p	3		conditions
	m	(Lcom/google/gson/JsonObject;Ljava/util/Optional;Lbg;)Lcw$a;	b	createInstance
		p	1		obj
		p	2		predicate
		p	3		predicateDeserializer
c	aw$a	net/minecraft/advancements/critereon/BredAnimalsTrigger$TriggerInstance
	m	(Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
		p	1		playerPredicate
		p	2		parentPredicate
		p	3		partnerPredicate
		p	4		childPredicate
	m	()Lcom/google/gson/JsonObject;	a	serializeToJson
	m	(Lbq$a;)Lam;	a	bredAnimals
		p	0		child
	m	(Lcom/google/gson/JsonObject;Lbc;)V	a	lambda$serializeToJson$2
	m	(Lecq;Lecq;Lecq;)Z	a	matches
		p	1		parentContext
		p	2		partnerContext
		p	3		childContext
	m	(Ljava/util/Optional;Lecq;)Z	a	matches
		p	0		parent
		p	1		parentContext
	m	(Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)Lam;	a	bredAnimals
		p	0		parent
		p	1		partner
		p	2		child
	m	(Lcom/google/gson/JsonObject;Lbc;)V	b	lambda$serializeToJson$1
	m	()Lam;	c	bredAnimals
	m	(Lcom/google/gson/JsonObject;Lbc;)V	c	lambda$serializeToJson$0
	f	Ljava/util/Optional;	a	parent
	f	Ljava/util/Optional;	b	partner
	f	Ljava/util/Optional;	c	child
c	ax	net/minecraft/advancements/critereon/BrewedPotionTrigger
	m	(Laew;)Lcom/google/gson/JsonSyntaxException;	a	lambda$createInstance$0
	m	(Lakr;Lclc;)V	a	trigger
		p	1		player
		p	2		potion
	m	(Lclc;Lax$a;)Z	a	lambda$trigger$1
		p	1		conditions
	m	(Lcom/google/gson/JsonObject;Ljava/util/Optional;Lbg;)Lax$a;	a	createInstance
	m	(Lcom/google/gson/JsonObject;Ljava/util/Optional;Lbg;)Lcw$a;	b	createInstance
		p	1		obj
		p	2		predicate
		p	3		predicateDeserializer
c	ax$a	net/minecraft/advancements/critereon/BrewedPotionTrigger$TriggerInstance
	m	(Ljava/util/Optional;Lclc;)V	<init>	<init>
		p	1		playerPredicate
		p	2		potion
	m	()Lcom/google/gson/JsonObject;	a	serializeToJson
	m	(Lclc;)Z	a	matches
		p	1		potion
	m	()Lam;	c	brewedPotion
	f	Lclc;	a	potion
c	ay	net/minecraft/advancements/critereon/ChangeDimensionTrigger
	m	(Laev;Laev;Lay$a;)Z	a	lambda$trigger$0
		p	2		conditions
	m	(Lakr;Laev;Laev;)V	a	trigger
		p	1		player
		p	2		from
		p	3		to
	m	(Lcom/google/gson/JsonObject;Ljava/util/Optional;Lbg;)Lay$a;	a	createInstance
	m	(Lcom/google/gson/JsonObject;Ljava/util/Optional;Lbg;)Lcw$a;	b	createInstance
		p	1		obj
		p	2		predicate
		p	3		predicateDeserializer
c	ay$a	net/minecraft/advancements/critereon/ChangeDimensionTrigger$TriggerInstance
	m	(Ljava/util/Optional;Laev;Laev;)V	<init>	<init>
		p	1		playerPredicate
		p	2		from
		p	3		to
	m	()Lcom/google/gson/JsonObject;	a	serializeToJson
	m	(Laev;)Lam;	a	changedDimensionTo
		p	0		to
	m	(Laev;Laev;)Lam;	a	changedDimension
		p	0		from
		p	1		to
	m	(Laev;)Lam;	b	changedDimensionFrom
		p	0		from
	m	(Laev;Laev;)Z	b	matches
		p	1		from
		p	2		to
	m	()Lam;	c	changedDimension
	f	Laev;	a	from
	f	Laev;	b	to
c	az	net/minecraft/advancements/critereon/ChanneledLightningTrigger
	m	(Lakr;Lbiq;)Lecq;	a	lambda$trigger$0
		p	1		entity
	m	(Lakr;Ljava/util/Collection;)V	a	trigger
		p	1		player
		p	2		victims
	m	(Lcom/google/gson/JsonObject;Ljava/util/Optional;Lbg;)Laz$a;	a	createInstance
	m	(Ljava/util/List;Laz$a;)Z	a	lambda$trigger$1
		p	1		conditions
	m	(Lcom/google/gson/JsonObject;Ljava/util/Optional;Lbg;)Lcw$a;	b	createInstance
		p	1		obj
		p	2		predicate
		p	3		predicateDeserializer
c	az$a	net/minecraft/advancements/critereon/ChanneledLightningTrigger$TriggerInstance
	m	(Ljava/util/Optional;Ljava/util/List;)V	<init>	<init>
		p	1		playerPredicate
		p	2		victims
	m	()Lcom/google/gson/JsonObject;	a	serializeToJson
	m	(Ljava/util/Collection;)Z	a	matches
		p	1		victims
	m	([Lbq$a;)Lam;	a	channeledLightning
		p	0		victims
	f	Ljava/util/List;	a	victims
c	ba	net/minecraft/advancements/critereon/ConstructBeaconTrigger
	m	(ILba$a;)Z	a	lambda$trigger$0
		p	1		conditions
	m	(Lakr;I)V	a	trigger
		p	1		player
		p	2		level
	m	(Lcom/google/gson/JsonObject;Ljava/util/Optional;Lbg;)Lba$a;	a	createInstance
	m	(Lcom/google/gson/JsonObject;Ljava/util/Optional;Lbg;)Lcw$a;	b	createInstance
		p	1		obj
		p	2		predicate
		p	3		predicateDeserializer
c	ba$a	net/minecraft/advancements/critereon/ConstructBeaconTrigger$TriggerInstance
	m	(Ljava/util/Optional;Lcl$d;)V	<init>	<init>
		p	1		playerPredicate
		p	2		level
	m	()Lcom/google/gson/JsonObject;	a	serializeToJson
	m	(I)Z	a	matches
		p	1		level
	m	(Lcl$d;)Lam;	a	constructedBeacon
		p	0		level
	m	()Lam;	c	constructedBeacon
	f	Lcl$d;	a	level
c	bb	net/minecraft/advancements/critereon/ConsumeItemTrigger
	m	(Lakr;Lcjf;)V	a	trigger
		p	1		player
		p	2		stack
	m	(Lcjf;Lbb$a;)Z	a	lambda$trigger$0
		p	1		conditions
	m	(Lcom/google/gson/JsonObject;Ljava/util/Optional;Lbg;)Lbb$a;	a	createInstance
	m	(Lcom/google/gson/JsonObject;Ljava/util/Optional;Lbg;)Lcw$a;	b	createInstance
		p	1		obj
		p	2		predicate
		p	3		predicateDeserializer
c	bb$a	net/minecraft/advancements/critereon/ConsumeItemTrigger$TriggerInstance
	m	(Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
		p	1		playerPredicate
		p	2		item
	m	()Lcom/google/gson/JsonObject;	a	serializeToJson
	m	(Lcb$a;)Lam;	a	usedItem
	m	(Lcjf;)Z	a	matches
		p	1		stack
	m	(Lcom/google/gson/JsonObject;Lcb;)V	a	lambda$serializeToJson$0
	m	(Lcpu;)Lam;	a	usedItem
		p	0		item
	m	()Lam;	c	usedItem
	f	Ljava/util/Optional;	a	item
c	bc	net/minecraft/advancements/critereon/ContextAwarePredicate
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		conditions
	m	()Lcom/google/gson/JsonElement;	a	toJson
	m	(Lecq;)Z	a	matches
		p	1		context
	m	(Ljava/lang/String;Lbg;Lcom/google/gson/JsonElement;Leez;)Ljava/util/Optional;	a	fromElement
		p	0		key
		p	1		predicateDeserializer
		p	2		json
		p	3		contextType
	m	(Ljava/util/List;)Lcom/google/gson/JsonElement;	a	toJson
	m	([Lefp;)Lbc;	a	create
		p	0		conditions
	f	Ljava/util/List;	a	conditions
	f	Ljava/util/function/Predicate;	b	compositePredicates
c	bd	net/minecraft/advancements/critereon/CuredZombieVillagerTrigger
	m	(Lakr;Lcab;Lcbh;)V	a	trigger
		p	1		player
		p	2		zombie
		p	3		villager
	m	(Lcom/google/gson/JsonObject;Ljava/util/Optional;Lbg;)Lbd$a;	a	createInstance
	m	(Lecq;Lecq;Lbd$a;)Z	a	lambda$trigger$0
		p	2		conditions
	m	(Lcom/google/gson/JsonObject;Ljava/util/Optional;Lbg;)Lcw$a;	b	createInstance
		p	1		obj
		p	2		predicate
		p	3		predicateDeserializer
c	bd$a	net/minecraft/advancements/critereon/CuredZombieVillagerTrigger$TriggerInstance
	m	(Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
		p	1		playerPredicate
		p	2		zombie
		p	3		villager
	m	()Lcom/google/gson/JsonObject;	a	serializeToJson
	m	(Lcom/google/gson/JsonObject;Lbc;)V	a	lambda$serializeToJson$1
	m	(Lecq;Lecq;)Z	a	matches
		p	1		zombie
		p	2		villager
	m	(Lcom/google/gson/JsonObject;Lbc;)V	b	lambda$serializeToJson$0
	m	()Lam;	c	curedZombieVillager
	f	Ljava/util/Optional;	a	zombie
	f	Ljava/util/Optional;	b	villager
c	be	net/minecraft/advancements/critereon/DamagePredicate
	m	(Lcl$c;Lcl$c;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
		p	1		dealt
		p	2		taken
	m	()Lcom/google/gson/JsonElement;	a	serializeToJson
	m	(Lakr;Lbho;FFZ)Z	a	matches
		p	1		player
		p	2		source
		p	3		dealt
		p	4		taken
		p	5		blocked
	m	(Lcom/google/gson/JsonElement;)Ljava/util/Optional;	a	fromJson
		p	0		json
	m	(Lcom/google/gson/JsonObject;Lbf;)V	a	lambda$serializeToJson$1
	m	(Lcom/google/gson/JsonObject;Lbq;)V	a	lambda$serializeToJson$0
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Boolean;)V	a	lambda$serializeToJson$2
	m	()Lcl$c;	b	dealtDamage
	m	()Lcl$c;	c	takenDamage
	m	()Ljava/util/Optional;	d	sourceEntity
	m	()Ljava/util/Optional;	e	blocked
	m	()Ljava/util/Optional;	f	type
	f	Lcl$c;	a	dealtDamage
	f	Lcl$c;	b	takenDamage
	f	Ljava/util/Optional;	c	sourceEntity
	f	Ljava/util/Optional;	d	blocked
	f	Ljava/util/Optional;	e	type
c	be$a	net/minecraft/advancements/critereon/DamagePredicate$Builder
	m	()Lbe$a;	a	damageInstance
	m	(Lbf$a;)Lbe$a;	a	type
		p	1		builder
	m	(Lbf;)Lbe$a;	a	type
		p	1		type
	m	(Lbq;)Lbe$a;	a	sourceEntity
		p	1		sourceEntity
	m	(Lcl$c;)Lbe$a;	a	dealtDamage
		p	1		dealt
	m	(Ljava/lang/Boolean;)Lbe$a;	a	blocked
		p	1		blocked
	m	()Lbe;	b	build
	m	(Lcl$c;)Lbe$a;	b	takenDamage
		p	1		taken
	f	Lcl$c;	a	dealtDamage
	f	Lcl$c;	b	takenDamage
	f	Ljava/util/Optional;	c	sourceEntity
	f	Ljava/util/Optional;	d	blocked
	f	Ljava/util/Optional;	e	type
c	bf	net/minecraft/advancements/critereon/DamageSourcePredicate
	m	(Ljava/util/List;Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
		p	1		tagPredicates
	m	()Lcom/google/gson/JsonElement;	a	serializeToJson
	m	(Lakq;Lehn;Lbho;)Z	a	matches
		p	1		world
		p	2		pos
		p	3		damageSource
	m	(Lakr;Lbho;)Z	a	matches
		p	1		player
		p	2		damageSource
	m	(Lcom/google/gson/JsonElement;)Ljava/util/Optional;	a	fromJson
		p	0		json
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()Ljava/util/List;	b	tags
	m	()Ljava/util/Optional;	c	directEntity
	m	()Ljava/util/Optional;	d	sourceEntity
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/List;	b	tags
	f	Ljava/util/Optional;	c	directEntity
	f	Ljava/util/Optional;	d	sourceEntity
c	bf$a	net/minecraft/advancements/critereon/DamageSourcePredicate$Builder
	m	()Lbf$a;	a	damageType
	m	(Lbq$a;)Lbf$a;	a	direct
		p	1		entity
	m	(Ldc;)Lbf$a;	a	tag
		p	1		tagPredicate
	m	()Lbf;	b	build
	m	(Lbq$a;)Lbf$a;	b	source
		p	1		entity
	f	Lcom/google/common/collect/ImmutableList$Builder;	a	tags
	f	Ljava/util/Optional;	b	directEntity
	f	Ljava/util/Optional;	c	sourceEntity
c	bg	net/minecraft/advancements/critereon/DeserializationContext
	m	(Laew;Lect;)V	<init>	<init>
		p	1		advancementId
		p	2		lootManager
	m	()Laew;	a	getAdvancementId
	m	(Lcom/google/gson/JsonArray;Ljava/lang/String;Leez;)Ljava/util/List;	a	deserializeConditions
		p	1		array
		p	2		key
		p	3		contextType
	m	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V	a	lambda$deserializeConditions$0
		p	1		name
		p	2		message
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Laew;	b	id
	f	Lect;	c	lootData
c	bh	net/minecraft/advancements/critereon/DistancePredicate
	m	(Lcl$c;Lcl$c;Lcl$c;Lcl$c;Lcl$c;)V	<init>	<init>
		p	1		x
		p	2		y
		p	3		z
		p	4		horizontal
		p	5		absolute
	m	()Lcom/google/gson/JsonElement;	a	serializeToJson
	m	(DDDDDD)Z	a	matches
		p	1		x0
		p	3		y0
		p	5		z0
		p	7		x1
		p	9		y1
		p	11		z1
	m	(Lcl$c;)Lbh;	a	horizontal
		p	0		horizontal
	m	(Lcom/google/gson/JsonElement;)Ljava/util/Optional;	a	fromJson
		p	0		json
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()Lcl$c;	b	x
	m	(Lcl$c;)Lbh;	b	vertical
		p	0		y
	m	()Lcl$c;	c	y
	m	(Lcl$c;)Lbh;	c	absolute
		p	0		absolute
	m	()Lcl$c;	d	z
	m	()Lcl$c;	e	horizontal
	m	()Lcl$c;	f	absolute
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcl$c;	b	x
	f	Lcl$c;	c	y
	f	Lcl$c;	d	z
	f	Lcl$c;	e	horizontal
	f	Lcl$c;	f	absolute
c	bi	net/minecraft/advancements/critereon/DistanceTrigger
	m	(Lakr;Lehn;)V	a	trigger
		p	1		player
		p	2		startPos
	m	(Lakr;Lehn;Lehn;Lbi$a;)Z	a	lambda$trigger$0
		p	3		conditions
	m	(Lcom/google/gson/JsonObject;Ljava/util/Optional;Lbg;)Lbi$a;	a	createInstance
	m	(Lcom/google/gson/JsonObject;Ljava/util/Optional;Lbg;)Lcw$a;	b	createInstance
		p	1		obj
		p	2		predicate
		p	3		predicateDeserializer
c	bi$a	net/minecraft/advancements/critereon/DistanceTrigger$TriggerInstance
	m	(Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
		p	2		playerPredicate
		p	3		startPos
	m	()Lcom/google/gson/JsonObject;	a	serializeToJson
	m	(Lakq;Lehn;Lehn;)Z	a	matches
		p	1		world
		p	2		pos
		p	3		endPos
	m	(Lbh;)Lam;	a	travelledThroughNether
		p	0		distance
	m	(Lbq$a;Lbh;)Lam;	a	rideEntityInLava
		p	0		entity
		p	1		distance
	m	(Lbq$a;Lbh;Lcj$a;)Lam;	a	fallFromHeight
		p	0		entity
		p	1		distance
	m	(Lcom/google/gson/JsonObject;Lbh;)V	a	lambda$serializeToJson$1
	m	(Lcom/google/gson/JsonObject;Lcj;)V	a	lambda$serializeToJson$0
	f	Ljava/util/Optional;	a	startPosition
	f	Ljava/util/Optional;	b	distance
c	bj	net/minecraft/advancements/critereon/EffectsChangedTrigger
	m	(Lakr;Lbiq;)V	a	trigger
		p	1		player
		p	2		source
	m	(Lakr;Lecq;Lbj$a;)Z	a	lambda$trigger$0
		p	2		conditions
	m	(Lcom/google/gson/JsonObject;Ljava/util/Optional;Lbg;)Lbj$a;	a	createInstance
	m	(Lcom/google/gson/JsonObject;Ljava/util/Optional;Lbg;)Lcw$a;	b	createInstance
		p	1		obj
		p	2		predicate
		p	3		predicateDeserializer
c	bj$a	net/minecraft/advancements/critereon/EffectsChangedTrigger$TriggerInstance
	m	(Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
		p	1		playerPredicate
		p	2		effects
		p	3		source
	m	()Lcom/google/gson/JsonObject;	a	serializeToJson
	m	(Lakr;Lecq;)Z	a	matches
		p	1		player
		p	2		context
	m	(Lbq$a;)Lam;	a	gotEffectsFrom
	m	(Lcm$a;)Lam;	a	hasEffects
		p	0		effects
	m	(Lcom/google/gson/JsonObject;Lbc;)V	a	lambda$serializeToJson$1
	m	(Lcom/google/gson/JsonObject;Lcm;)V	a	lambda$serializeToJson$0
	f	Ljava/util/Optional;	a	effects
	f	Ljava/util/Optional;	b	source
c	bk	net/minecraft/advancements/critereon/EnchantedItemTrigger
	m	(Lakr;Lcjf;I)V	a	trigger
		p	1		player
		p	2		stack
		p	3		levels
	m	(Lcjf;ILbk$a;)Z	a	lambda$trigger$0
		p	2		conditions
	m	(Lcom/google/gson/JsonObject;Ljava/util/Optional;Lbg;)Lbk$a;	a	createInstance
	m	(Lcom/google/gson/JsonObject;Ljava/util/Optional;Lbg;)Lcw$a;	b	createInstance
		p	1		obj
		p	2		predicate
		p	3		predicateDeserializer
c	bk$a	net/minecraft/advancements/critereon/EnchantedItemTrigger$TriggerInstance
	m	(Ljava/util/Optional;Ljava/util/Optional;Lcl$d;)V	<init>	<init>
		p	1		playerPredicate
		p	2		item
		p	3		levels
	m	()Lcom/google/gson/JsonObject;	a	serializeToJson
	m	(Lcjf;I)Z	a	matches
		p	1		stack
		p	2		levels
	m	(Lcom/google/gson/JsonObject;Lcb;)V	a	lambda$serializeToJson$0
	m	()Lam;	c	enchantedItem
	f	Ljava/util/Optional;	a	item
	f	Lcl$d;	b	levels
c	bl	net/minecraft/advancements/critereon/EnchantmentPredicate
	m	(Lcno;Lcl$d;)V	<init>	<init>
		p	1		enchantment
		p	2		levels
	m	()Ljava/util/Optional;	a	enchantment
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	(Ljava/util/Map;)Z	a	containedIn
		p	1		enchantments
	m	()Lcl$d;	b	level
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Optional;	b	enchantment
	f	Lcl$d;	c	level
c	bm	net/minecraft/advancements/critereon/EnterBlockTrigger
	m	(Laew;)Lcom/google/gson/JsonSyntaxException;	a	lambda$deserializeBlock$2
	m	(Lakr;Ldfj;)V	a	trigger
		p	1		player
		p	2		state
	m	(Lcom/google/gson/JsonObject;)Lcsv;	a	deserializeBlock
		p	0		obj
	m	(Lcom/google/gson/JsonObject;Ljava/util/Optional;Lbg;)Lbm$a;	a	createInstance
	m	(Lcsv;Lda;)V	a	lambda$createInstance$1
	m	(Lcsv;Ljava/lang/String;)V	a	lambda$createInstance$0
		p	1		name
	m	(Ldfj;Lbm$a;)Z	a	lambda$trigger$3
		p	1		conditions
	m	(Lcom/google/gson/JsonObject;Ljava/util/Optional;Lbg;)Lcw$a;	b	createInstance
		p	1		obj
		p	2		predicate
		p	3		predicateDeserializer
c	bm$a	net/minecraft/advancements/critereon/EnterBlockTrigger$TriggerInstance
	m	(Ljava/util/Optional;Lcsv;Ljava/util/Optional;)V	<init>	<init>
		p	1		playerPredicate
		p	2		block
		p	3		state
	m	()Lcom/google/gson/JsonObject;	a	serializeToJson
	m	(Lcom/google/gson/JsonObject;Lda;)V	a	lambda$serializeToJson$0
	m	(Lcsv;)Lam;	a	entersBlock
		p	0		block
	m	(Ldfj;)Z	a	matches
		p	1		state
	f	Lcsv;	a	block
	f	Ljava/util/Optional;	b	state
c	bn	net/minecraft/advancements/critereon/EntityEquipmentPredicate
	m	()Ljava/util/Optional;	a	head
	m	(Lbiq;)Z	a	matches
		p	1		entity
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()Ljava/util/Optional;	b	chest
	m	()Ljava/util/Optional;	c	legs
	m	()Ljava/util/Optional;	d	feet
	m	()Ljava/util/Optional;	e	mainhand
	m	()Ljava/util/Optional;	f	offhand
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lbn;	b	CAPTAIN
	f	Ljava/util/Optional;	c	head
	f	Ljava/util/Optional;	d	chest
	f	Ljava/util/Optional;	e	legs
	f	Ljava/util/Optional;	f	feet
	f	Ljava/util/Optional;	g	mainhand
	f	Ljava/util/Optional;	h	offhand
c	bn$a	net/minecraft/advancements/critereon/EntityEquipmentPredicate$Builder
	m	()Lbn$a;	a	equipment
	m	(Lcb$a;)Lbn$a;	a	head
	m	()Lbn;	b	build
	m	(Lcb$a;)Lbn$a;	b	chest
	m	(Lcb$a;)Lbn$a;	c	legs
	m	(Lcb$a;)Lbn$a;	d	feet
	m	(Lcb$a;)Lbn$a;	e	mainhand
	m	(Lcb$a;)Lbn$a;	f	offhand
	f	Ljava/util/Optional;	a	head
	f	Ljava/util/Optional;	b	chest
	f	Ljava/util/Optional;	c	legs
	f	Ljava/util/Optional;	d	feet
	f	Ljava/util/Optional;	e	mainhand
	f	Ljava/util/Optional;	f	offhand
c	bo	net/minecraft/advancements/critereon/EntityFlagsPredicate
	m	()Ljava/util/Optional;	a	isOnFire
	m	(Lbiq;)Z	a	matches
		p	1		entity
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()Ljava/util/Optional;	b	isCrouching
	m	()Ljava/util/Optional;	c	isSprinting
	m	()Ljava/util/Optional;	d	isSwimming
	m	()Ljava/util/Optional;	e	isBaby
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Optional;	b	isOnFire
	f	Ljava/util/Optional;	c	isCrouching
	f	Ljava/util/Optional;	d	isSprinting
	f	Ljava/util/Optional;	e	isSwimming
	f	Ljava/util/Optional;	f	isBaby
c	bo$a	net/minecraft/advancements/critereon/EntityFlagsPredicate$Builder
	m	()Lbo$a;	a	flags
	m	(Ljava/lang/Boolean;)Lbo$a;	a	setOnFire
		p	1		onFire
	m	()Lbo;	b	build
	m	(Ljava/lang/Boolean;)Lbo$a;	b	setCrouching
		p	1		sneaking
	m	(Ljava/lang/Boolean;)Lbo$a;	c	setSprinting
		p	1		sprinting
	m	(Ljava/lang/Boolean;)Lbo$a;	d	setSwimming
		p	1		swimming
	m	(Ljava/lang/Boolean;)Lbo$a;	e	setIsBaby
		p	1		isBaby
	f	Ljava/util/Optional;	a	isOnFire
	f	Ljava/util/Optional;	b	isCrouching
	f	Ljava/util/Optional;	c	isSprinting
	f	Ljava/util/Optional;	d	isSwimming
	f	Ljava/util/Optional;	e	isBaby
c	bp	net/minecraft/advancements/critereon/EntityHurtPlayerTrigger
	m	(Lakr;Lbho;FFZ)V	a	trigger
		p	1		player
		p	2		source
		p	3		dealt
		p	4		taken
		p	5		blocked
	m	(Lakr;Lbho;FFZLbp$a;)Z	a	lambda$trigger$0
		p	5		conditions
	m	(Lcom/google/gson/JsonObject;Ljava/util/Optional;Lbg;)Lbp$a;	a	createInstance
	m	(Lcom/google/gson/JsonObject;Ljava/util/Optional;Lbg;)Lcw$a;	b	createInstance
		p	1		obj
		p	2		predicate
		p	3		predicateDeserializer
c	bp$a	net/minecraft/advancements/critereon/EntityHurtPlayerTrigger$TriggerInstance
	m	(Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
		p	1		playerPredicate
		p	2		damage
	m	()Lcom/google/gson/JsonObject;	a	serializeToJson
	m	(Lakr;Lbho;FFZ)Z	a	matches
		p	1		player
		p	2		damageSource
		p	3		dealt
		p	4		taken
		p	5		blocked
	m	(Lbe$a;)Lam;	a	entityHurtPlayer
		p	0		damageBuilder
	m	(Lbe;)Lam;	a	entityHurtPlayer
		p	0		predicate
	m	(Lcom/google/gson/JsonObject;Lbe;)V	a	lambda$serializeToJson$0
	m	()Lam;	c	entityHurtPlayer
	f	Ljava/util/Optional;	a	damage
c	bq	net/minecraft/advancements/critereon/EntityPredicate
	m	()Lcom/google/gson/JsonElement;	a	serializeToJson
	m	(Lakq;Lehn;Lbiq;)Z	a	matches
		p	1		world
		p	2		pos
		p	3		entity
	m	(Lakr;Lbiq;)Z	a	matches
		p	1		player
		p	2		entity
	m	(Lbq$a;)Lbc;	a	wrap
		p	0		builder
	m	(Lbq;)Lbc;	a	wrap
		p	0		predicate
	m	(Lcom/google/gson/JsonElement;)Ljava/util/Optional;	a	fromJson
		p	0		json
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Lbg;)Ljava/util/Optional;	a	fromJson
		p	0		json
		p	1		key
		p	2		predicateDeserializer
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	lambda$static$1
		p	0		entityPredicateCodec
	m	(Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	1		instance
	m	(Ljava/lang/String;Lbg;Lcom/google/gson/JsonElement;)Ljava/util/Optional;	a	fromElement
		p	0		key
		p	1		predicateDeserializer
		p	2		json
	m	(Ljava/util/Optional;)Ljava/util/Optional;	a	wrap
		p	0		entityPredicate
	m	([Lbq$a;)Ljava/util/List;	a	wrap
		p	0		builders
	m	()Ljava/util/Optional;	b	entityType
	m	(Lakq;Lehn;Lbiq;)Z	b	lambda$matches$2
		p	3		entityx
	m	(Lakr;Lbiq;)Lecq;	b	createContext
		p	0		player
		p	1		target
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Lbg;)Ljava/util/List;	b	fromJsonArray
		p	0		json
		p	1		key
		p	2		predicateDeserializer
	m	()Ljava/util/Optional;	c	distanceToPlayer
	m	()Ljava/util/Optional;	d	location
	m	()Ljava/util/Optional;	e	steppingOnLocation
	m	()Ljava/util/Optional;	f	effects
	m	()Ljava/util/Optional;	g	nbt
	m	()Ljava/util/Optional;	h	flags
	m	()Ljava/util/Optional;	i	equipment
	m	()Ljava/util/Optional;	j	subPredicate
	m	()Ljava/util/Optional;	k	vehicle
	m	()Ljava/util/Optional;	l	passenger
	m	()Ljava/util/Optional;	m	targetedEntity
	m	()Ljava/util/Optional;	n	team
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Optional;	b	entityType
	f	Ljava/util/Optional;	c	distanceToPlayer
	f	Ljava/util/Optional;	d	location
	f	Ljava/util/Optional;	e	steppingOnLocation
	f	Ljava/util/Optional;	f	effects
	f	Ljava/util/Optional;	g	nbt
	f	Ljava/util/Optional;	h	flags
	f	Ljava/util/Optional;	i	equipment
	f	Ljava/util/Optional;	j	subPredicate
	f	Ljava/util/Optional;	k	vehicle
	f	Ljava/util/Optional;	l	passenger
	f	Ljava/util/Optional;	m	targetedEntity
	f	Ljava/util/Optional;	n	team
c	bq$a	net/minecraft/advancements/critereon/EntityPredicate$Builder
	m	()Lbq$a;	a	entity
	m	(Laqh;)Lbq$a;	a	of
		p	1		tag
	m	(Lbh;)Lbq$a;	a	distance
		p	1		distance
	m	(Lbiu;)Lbq$a;	a	of
		p	1		type
	m	(Lbn$a;)Lbq$a;	a	equipment
		p	1		equipment
	m	(Lbn;)Lbq$a;	a	equipment
		p	1		equipment
	m	(Lbo$a;)Lbq$a;	a	flags
		p	1		flags
	m	(Lbq$a;)Lbq$a;	a	vehicle
		p	1		vehicle
	m	(Lbr;)Lbq$a;	a	subPredicate
		p	1		typeSpecific
	m	(Lbs;)Lbq$a;	a	entityType
		p	1		type
	m	(Lcj$a;)Lbq$a;	a	located
		p	1		location
	m	(Lcm$a;)Lbq$a;	a	effects
		p	1		effects
	m	(Lcn;)Lbq$a;	a	nbt
		p	1		nbt
	m	(Ljava/lang/String;)Lbq$a;	a	team
		p	1		team
	m	()Lbq;	b	build
	m	(Lbq$a;)Lbq$a;	b	passenger
		p	1		passenger
	m	(Lcj$a;)Lbq$a;	b	steppingOn
		p	1		steppingOn
	m	(Lbq$a;)Lbq$a;	c	targetedEntity
		p	1		targetedEntity
	f	Ljava/util/Optional;	a	entityType
	f	Ljava/util/Optional;	b	distanceToPlayer
	f	Ljava/util/Optional;	c	location
	f	Ljava/util/Optional;	d	steppingOnLocation
	f	Ljava/util/Optional;	e	effects
	f	Ljava/util/Optional;	f	nbt
	f	Ljava/util/Optional;	g	flags
	f	Ljava/util/Optional;	h	equipment
	f	Ljava/util/Optional;	i	subPredicate
	f	Ljava/util/Optional;	j	vehicle
	f	Ljava/util/Optional;	k	passenger
	f	Ljava/util/Optional;	l	targetedEntity
	f	Ljava/util/Optional;	m	team
c	br	net/minecraft/advancements/critereon/EntitySubPredicate
	m	()Lbr$a;	a	type
	m	(Lbiq;Lakq;Lehn;)Z	a	matches
		p	1		entity
		p	2		world
		p	3		pos
	m	(Lbr$a;)Lcom/mojang/serialization/Codec;	a	lambda$static$0
	m	(Lbuv;)Lbr;	a	variant
		p	0		variant
	m	(Lbvc;)Lbr;	a	variant
		p	0		variant
	f	Lcom/mojang/serialization/Codec;	a	CODEC
c	br$a	net/minecraft/advancements/critereon/EntitySubPredicate$Type
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	f	Lcom/mojang/serialization/MapCodec;	a	codec
c	br$b	net/minecraft/advancements/critereon/EntitySubPredicate$Types
	m	(Lbiq;)Ljava/util/Optional;	a	lambda$static$12
		p	0		entity
	m	(Lbiq;)Ljava/util/Optional;	b	lambda$static$11
		p	0		entity
	m	(Lbiq;)Ljava/util/Optional;	c	lambda$static$10
		p	0		entity
	m	(Lbiq;)Ljava/util/Optional;	d	lambda$static$9
		p	0		entity
	m	(Lbiq;)Ljava/util/Optional;	e	lambda$static$8
		p	0		entity
	m	(Lbiq;)Ljava/util/Optional;	f	lambda$static$7
		p	0		entity
	m	(Lbiq;)Ljava/util/Optional;	g	lambda$static$6
		p	0		entity
	m	(Lbiq;)Ljava/util/Optional;	h	lambda$static$5
		p	0		entity
	m	(Lbiq;)Ljava/util/Optional;	i	lambda$static$4
		p	0		entity
	m	(Lbiq;)Ljava/util/Optional;	j	lambda$static$3
		p	0		entity
	m	(Lbiq;)Ljava/util/Optional;	k	lambda$static$2
		p	0		entity
	m	(Lbiq;)Ljava/util/Optional;	l	lambda$static$1
		p	0		entity
	m	(Lbiq;)Ljava/util/Optional;	m	lambda$static$0
		p	0		entity
	f	Lbr$a;	a	ANY
	f	Lbr$a;	b	LIGHTNING
	f	Lbr$a;	c	FISHING_HOOK
	f	Lbr$a;	d	PLAYER
	f	Lbr$a;	e	SLIME
	f	Lbt;	f	CAT
	f	Lbt;	g	FROG
	f	Lbt;	h	AXOLOTL
	f	Lbt;	i	BOAT
	f	Lbt;	j	FOX
	f	Lbt;	k	MOOSHROOM
	f	Lbt;	l	PAINTING
	f	Lbt;	m	RABBIT
	f	Lbt;	n	HORSE
	f	Lbt;	o	LLAMA
	f	Lbt;	p	VILLAGER
	f	Lbt;	q	PARROT
	f	Lbt;	r	TROPICAL_FISH
	f	Lcom/google/common/collect/BiMap;	s	TYPES
	f	Lcom/mojang/serialization/Codec;	t	TYPE_CODEC
c	br$b$1	net/minecraft/advancements/critereon/EntitySubPredicate$Types$1
	m	()Lbr$a;	a	type
	m	(Lbiq;Lakq;Lehn;)Z	a	matches
		p	1		entity
		p	2		world
		p	3		pos
c	bs	net/minecraft/advancements/critereon/EntityTypePredicate
	m	()Lhi;	a	types
	m	(Laqh;)Lbs;	a	of
		p	0		tag
	m	(Lbiu;)Lbs;	a	of
		p	0		type
	m	(Lbs;)Lcom/mojang/serialization/DataResult;	a	lambda$static$4
	m	(Lcom/mojang/datafixers/util/Either;)Lbs;	a	lambda$static$2
	m	(Lhe;)Lbs;	a	lambda$static$1
	m	(Lhi;)Ljava/lang/String;	a	lambda$static$3
	m	(Laqh;)Lbs;	b	lambda$static$0
	m	(Lbiu;)Z	b	matches
		p	1		type
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lhi;	b	types
c	bt	net/minecraft/advancements/critereon/EntityVariantPredicate
	m	(Lcom/mojang/serialization/Codec;Ljava/util/function/Function;)V	<init>	<init>
		p	1		codec
		p	2		variantGetter
	m	()Lbr$a;	a	type
	m	(Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$new$0
	m	(Lcom/mojang/serialization/Codec;Ljava/util/function/Function;)Lbt;	a	create
		p	0		codec
		p	1		variantGetter
	m	(Lhq;Ljava/util/function/Function;)Lbt;	a	create
		p	0		registry
		p	1		variantGetter
	m	(Ljava/lang/Object;)Lbt$a;	a	createPredicate
		p	1		variant
	f	Ljava/util/function/Function;	a	getter
	f	Lbr$a;	b	type
c	bt$a	net/minecraft/advancements/critereon/EntityVariantPredicate$SubPredicate
	m	()Lbr$a;	a	type
	m	(Lbiq;Lakq;Lehn;)Z	a	matches
		p	1		entity
		p	2		world
		p	3		pos
	m	(Ljava/lang/Object;)Z	a	lambda$matches$0
	m	()Ljava/util/function/Function;	b	getter
	m	()Ljava/lang/Object;	c	variant
	f	Lbr$a;	b	type
	f	Ljava/util/function/Function;	c	getter
	f	Ljava/lang/Object;	d	variant
c	bu	net/minecraft/advancements/critereon/FilledBucketTrigger
	m	(Lakr;Lcjf;)V	a	trigger
		p	1		player
		p	2		stack
	m	(Lcjf;Lbu$a;)Z	a	lambda$trigger$0
		p	1		conditions
	m	(Lcom/google/gson/JsonObject;Ljava/util/Optional;Lbg;)Lbu$a;	a	createInstance
	m	(Lcom/google/gson/JsonObject;Ljava/util/Optional;Lbg;)Lcw$a;	b	createInstance
		p	1		obj
		p	2		predicate
		p	3		predicateDeserializer
c	bu$a	net/minecraft/advancements/critereon/FilledBucketTrigger$TriggerInstance
	m	(Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
		p	1		playerPredicate
		p	2		item
	m	()Lcom/google/gson/JsonObject;	a	serializeToJson
	m	(Lcb$a;)Lam;	a	filledBucket
	m	(Lcjf;)Z	a	matches
		p	1		stack
	m	(Lcom/google/gson/JsonObject;Lcb;)V	a	lambda$serializeToJson$0
	f	Ljava/util/Optional;	a	item
c	bv	net/minecraft/advancements/critereon/FishingHookPredicate
	m	()Lbr$a;	a	type
	m	(Lbiq;Lakq;Lehn;)Z	a	matches
		p	1		entity
		p	2		world
		p	3		pos
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	(Z)Lbv;	a	inOpenWater
		p	0		inOpenWater
	m	()Ljava/util/Optional;	b	inOpenWater
	f	Lbv;	b	ANY
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
	f	Ljava/util/Optional;	d	inOpenWater
c	bw	net/minecraft/advancements/critereon/FishingRodHookedTrigger
	m	(Lakr;Lcjf;Lcci;Ljava/util/Collection;)V	a	trigger
		p	1		player
		p	2		rod
		p	3		bobber
		p	4		fishingLoots
	m	(Lcjf;Lecq;Ljava/util/Collection;Lbw$a;)Z	a	lambda$trigger$0
		p	3		conditions
	m	(Lcom/google/gson/JsonObject;Ljava/util/Optional;Lbg;)Lbw$a;	a	createInstance
	m	(Lcom/google/gson/JsonObject;Ljava/util/Optional;Lbg;)Lcw$a;	b	createInstance
		p	1		obj
		p	2		predicate
		p	3		predicateDeserializer
c	bw$a	net/minecraft/advancements/critereon/FishingRodHookedTrigger$TriggerInstance
	m	(Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
		p	1		playerPredicate
		p	2		rod
		p	3		hookedEntity
		p	4		caughtItem
	m	()Lcom/google/gson/JsonObject;	a	serializeToJson
	m	(Lcjf;Lecq;Ljava/util/Collection;)Z	a	matches
		p	1		rodStack
		p	2		hookedEntity
		p	3		fishingLoots
	m	(Lcom/google/gson/JsonObject;Lbc;)V	a	lambda$serializeToJson$1
	m	(Lcom/google/gson/JsonObject;Lcb;)V	a	lambda$serializeToJson$2
	m	(Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)Lam;	a	fishedItem
		p	0		rod
		p	1		hookedEntity
		p	2		caughtItem
	m	(Lcom/google/gson/JsonObject;Lcb;)V	b	lambda$serializeToJson$0
	f	Ljava/util/Optional;	a	rod
	f	Ljava/util/Optional;	b	entity
	f	Ljava/util/Optional;	c	item
c	bx	net/minecraft/advancements/critereon/FluidPredicate
	m	()Ljava/util/Optional;	a	tag
	m	(Lakq;Lgw;)Z	a	matches
		p	1		world
		p	2		pos
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()Ljava/util/Optional;	b	fluid
	m	()Ljava/util/Optional;	c	properties
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Optional;	b	tag
	f	Ljava/util/Optional;	c	fluid
	f	Ljava/util/Optional;	d	properties
c	bx$a	net/minecraft/advancements/critereon/FluidPredicate$Builder
	m	()Lbx$a;	a	fluid
	m	(Laqh;)Lbx$a;	a	of
		p	1		tag
	m	(Lda;)Lbx$a;	a	setProperties
		p	1		state
	m	(Leal;)Lbx$a;	a	of
		p	1		fluid
	m	()Lbx;	b	build
	f	Ljava/util/Optional;	a	fluid
	f	Ljava/util/Optional;	b	fluids
	f	Ljava/util/Optional;	c	properties
c	by	net/minecraft/advancements/critereon/ImpossibleTrigger
	m	(Lafe;)V	a	removePlayerListeners
		p	1		tracker
	m	(Lafe;Lao$a;)V	a	addPlayerListener
		p	1		manager
		p	2		conditions
	m	(Lcom/google/gson/JsonObject;Lbg;)Lap;	a	createInstance
		p	1		obj
		p	2		predicateDeserializer
	m	(Lafe;Lao$a;)V	b	removePlayerListener
		p	1		manager
		p	2		conditions
	m	(Lcom/google/gson/JsonObject;Lbg;)Lby$a;	b	createInstance
c	by$a	net/minecraft/advancements/critereon/ImpossibleTrigger$TriggerInstance
	m	()Lcom/google/gson/JsonObject;	a	serializeToJson
c	bz	net/minecraft/advancements/critereon/InventoryChangeTrigger
	m	(Lakr;Lcbt;Lcjf;)V	a	trigger
		p	1		player
		p	2		inventory
		p	3		stack
	m	(Lakr;Lcbt;Lcjf;III)V	a	trigger
		p	1		player
		p	2		inventory
		p	3		stack
		p	4		full
		p	5		empty
		p	6		occupied
	m	(Lcbt;Lcjf;IIILbz$a;)Z	a	lambda$trigger$0
		p	5		conditions
	m	(Lcom/google/gson/JsonObject;Ljava/util/Optional;Lbg;)Lbz$a;	a	createInstance
	m	(Lcom/google/gson/JsonObject;Ljava/util/Optional;Lbg;)Lcw$a;	b	createInstance
		p	1		obj
		p	2		predicate
		p	3		predicateDeserializer
c	bz$a	net/minecraft/advancements/critereon/InventoryChangeTrigger$TriggerInstance
	m	(Ljava/util/Optional;Lcl$d;Lcl$d;Lcl$d;Ljava/util/List;)V	<init>	<init>
		p	1		playerPredicate
		p	2		occupied
		p	3		full
		p	4		empty
		p	5		items
	m	()Lcom/google/gson/JsonObject;	a	serializeToJson
	m	(I)[Lcb;	a	lambda$hasItems$0
	m	(Lcbt;Lcjf;III)Z	a	matches
		p	1		inventory
		p	2		stack
		p	3		full
		p	4		empty
		p	5		occupied
	m	(Lcjf;Lcb;)Z	a	lambda$matches$1
		p	1		item
	m	([Lcb$a;)Lam;	a	hasItems
		p	0		items
	m	([Lcb;)Lam;	a	hasItems
		p	0		items
	m	([Lcpu;)Lam;	a	hasItems
		p	0		items
	f	Lcl$d;	a	slotsOccupied
	f	Lcl$d;	b	slotsFull
	f	Lcl$d;	c	slotsEmpty
	f	Ljava/util/List;	d	predicates
c	ca	net/minecraft/advancements/critereon/ItemDurabilityTrigger
	m	(Lakr;Lcjf;I)V	a	trigger
		p	1		player
		p	2		stack
		p	3		durability
	m	(Lcjf;ILca$a;)Z	a	lambda$trigger$0
		p	2		conditions
	m	(Lcom/google/gson/JsonObject;Ljava/util/Optional;Lbg;)Lca$a;	a	createInstance
	m	(Lcom/google/gson/JsonObject;Ljava/util/Optional;Lbg;)Lcw$a;	b	createInstance
		p	1		obj
		p	2		predicate
		p	3		predicateDeserializer
c	ca$a	net/minecraft/advancements/critereon/ItemDurabilityTrigger$TriggerInstance
	m	(Ljava/util/Optional;Ljava/util/Optional;Lcl$d;Lcl$d;)V	<init>	<init>
		p	1		playerPredicate
		p	2		item
		p	3		durability
		p	4		delta
	m	()Lcom/google/gson/JsonObject;	a	serializeToJson
	m	(Lcjf;I)Z	a	matches
		p	1		stack
		p	2		durability
	m	(Lcom/google/gson/JsonObject;Lcb;)V	a	lambda$serializeToJson$0
	m	(Ljava/util/Optional;Lcl$d;)Lam;	a	changedDurability
		p	0		item
		p	1		durability
	m	(Ljava/util/Optional;Ljava/util/Optional;Lcl$d;)Lam;	a	changedDurability
		p	0		playerPredicate
		p	1		item
		p	2		durability
	f	Ljava/util/Optional;	a	item
	f	Lcl$d;	b	durability
	f	Lcl$d;	c	delta
c	cb	net/minecraft/advancements/critereon/ItemPredicate
	m	(Ljava/util/Optional;Ljava/util/Optional;Lcl$d;Lcl$d;Ljava/util/List;Ljava/util/List;Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
		p	3		count
		p	4		durability
	m	()Lcom/google/gson/JsonElement;	a	serializeToJson
	m	(Lcjf;)Z	a	matches
		p	1		stack
	m	(Lcom/google/gson/JsonElement;)Ljava/util/Optional;	a	fromJson
		p	0		el
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Lhi;)Ljava/util/List;	a	lambda$static$0
	m	(Ljava/util/List;)Lcom/google/gson/JsonElement;	a	serializeToJsonArray
		p	0		predicates
	m	()Ljava/util/Optional;	b	tag
	m	(Lcom/google/gson/JsonElement;)Ljava/util/List;	b	fromJsonArray
		p	0		el
	m	()Ljava/util/Optional;	c	items
	m	()Lcl$d;	d	count
	m	()Lcl$d;	e	durability
	m	()Ljava/util/List;	f	enchantments
	m	()Ljava/util/List;	g	storedEnchantments
	m	()Ljava/util/Optional;	h	potion
	m	()Ljava/util/Optional;	i	nbt
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Optional;	b	tag
	f	Ljava/util/Optional;	c	items
	f	Lcl$d;	d	count
	f	Lcl$d;	e	durability
	f	Ljava/util/List;	f	enchantments
	f	Ljava/util/List;	g	storedEnchantments
	f	Ljava/util/Optional;	h	potion
	f	Ljava/util/Optional;	i	nbt
	f	Lcom/mojang/serialization/Codec;	j	ITEMS_CODEC
c	cb$a	net/minecraft/advancements/critereon/ItemPredicate$Builder
	m	()Lcb$a;	a	item
	m	(Laqh;)Lcb$a;	a	of
		p	1		tag
	m	(Lbl;)Lcb$a;	a	hasEnchantment
		p	1		enchantment
	m	(Lcl$d;)Lcb$a;	a	withCount
		p	1		count
	m	(Lclc;)Lcb$a;	a	isPotion
		p	1		potion
	m	(Lcpu;)Lhe;	a	lambda$of$0
		p	0		item
	m	(Lqw;)Lcb$a;	a	hasNbt
		p	1		nbt
	m	([Lcpu;)Lcb$a;	a	of
		p	1		items
	m	()Lcb;	b	build
	m	(Lbl;)Lcb$a;	b	hasStoredEnchantment
		p	1		enchantment
	m	(Lcl$d;)Lcb$a;	b	hasDurability
		p	1		durability
	f	Lcom/google/common/collect/ImmutableList$Builder;	a	enchantments
	f	Lcom/google/common/collect/ImmutableList$Builder;	b	storedEnchantments
	f	Ljava/util/Optional;	c	items
	f	Ljava/util/Optional;	d	tag
	f	Lcl$d;	e	count
	f	Lcl$d;	f	durability
	f	Ljava/util/Optional;	g	potion
	f	Ljava/util/Optional;	h	nbt
c	cc	net/minecraft/advancements/critereon/ItemUsedOnLocationTrigger
	m	(Lakr;Lgw;Lcjf;)V	a	trigger
		p	1		player
		p	2		pos
		p	3		stack
	m	(Lcom/google/gson/JsonObject;Ljava/util/Optional;Lbg;)Lcc$a;	a	createInstance
	m	(Lecq;Lcc$a;)Z	a	lambda$trigger$0
		p	1		conditions
	m	(Lcom/google/gson/JsonObject;Ljava/util/Optional;Lbg;)Lcw$a;	b	createInstance
		p	1		obj
		p	2		predicate
		p	3		predicateDeserializer
c	cc$a	net/minecraft/advancements/critereon/ItemUsedOnLocationTrigger$TriggerInstance
	m	(Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
		p	2		playerPredicate
	m	()Lcom/google/gson/JsonObject;	a	serializeToJson
	m	(I)[Lefp;	a	lambda$placedBlock$0
	m	(Lcj$a;Lcb$a;)Lam;	a	itemUsedOnBlock
		p	0		location
		p	1		item
	m	(Lcom/google/gson/JsonObject;Lbc;)V	a	lambda$serializeToJson$1
	m	(Lcsv;)Lam;	a	placedBlock
		p	0		block
	m	(Lecq;)Z	a	matches
		p	1		location
	m	([Lefp$a;)Lam;	a	placedBlock
		p	0		locationConditions
	m	(Lcj$a;Lcb$a;)Lam;	b	allayDropItemOnBlock
		p	0		location
		p	1		item
	m	(Lcj$a;Lcb$a;)Lcc$a;	c	itemUsedOnLocation
		p	0		location
		p	1		item
	f	Ljava/util/Optional;	a	location
c	cd	net/minecraft/advancements/critereon/KilledByCrossbowTrigger
	m	(Lakr;Ljava/util/Collection;)V	a	trigger
		p	1		player
		p	2		piercingKilledEntities
	m	(Lcom/google/gson/JsonObject;Ljava/util/Optional;Lbg;)Lcd$a;	a	createInstance
	m	(Ljava/util/List;Ljava/util/Set;Lcd$a;)Z	a	lambda$trigger$0
		p	2		conditions
	m	(Lcom/google/gson/JsonObject;Ljava/util/Optional;Lbg;)Lcw$a;	b	createInstance
		p	1		obj
		p	2		predicate
		p	3		predicateDeserializer
c	cd$a	net/minecraft/advancements/critereon/KilledByCrossbowTrigger$TriggerInstance
	m	(Ljava/util/Optional;Ljava/util/List;Lcl$d;)V	<init>	<init>
		p	1		playerPredicate
		p	2		victims
		p	3		uniqueEntityTypes
	m	()Lcom/google/gson/JsonObject;	a	serializeToJson
	m	(Lcl$d;)Lam;	a	crossbowKilled
		p	0		uniqueEntityTypes
	m	(Ljava/util/Collection;I)Z	a	matches
		p	1		victimContexts
		p	2		uniqueEntityTypeCount
	m	([Lbq$a;)Lam;	a	crossbowKilled
		p	0		victimPredicates
	f	Ljava/util/List;	a	victims
	f	Lcl$d;	b	uniqueEntityTypes
c	ce	net/minecraft/advancements/critereon/KilledTrigger
	m	(Lakr;Lbiq;Lbho;)V	a	trigger
		p	1		player
		p	2		entity
		p	3		killingDamage
	m	(Lakr;Lecq;Lbho;Lce$a;)Z	a	lambda$trigger$0
		p	3		conditions
	m	(Lcom/google/gson/JsonObject;Ljava/util/Optional;Lbg;)Lce$a;	a	createInstance
	m	(Lcom/google/gson/JsonObject;Ljava/util/Optional;Lbg;)Lcw$a;	b	createInstance
		p	1		obj
		p	2		predicate
		p	3		predicateDeserializer
c	ce$a	net/minecraft/advancements/critereon/KilledTrigger$TriggerInstance
	m	(Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
		p	2		playerPredicate
		p	3		entity
	m	()Lcom/google/gson/JsonObject;	a	serializeToJson
	m	(Lakr;Lecq;Lbho;)Z	a	matches
		p	1		player
		p	2		entity
		p	3		killingBlow
	m	(Lbq$a;)Lam;	a	playerKilledEntity
		p	0		killedEntityPredicateBuilder
	m	(Lbq$a;Lbf$a;)Lam;	a	playerKilledEntity
		p	0		killedEntityPredicateBuilder
		p	1		killingBlowBuilder
	m	(Lbq$a;Ljava/util/Optional;)Lam;	a	playerKilledEntity
		p	0		killedEntityPredicateBuilder
		p	1		killingBlow
	m	(Lcom/google/gson/JsonObject;Lbc;)V	a	lambda$serializeToJson$0
	m	(Lcom/google/gson/JsonObject;Lbf;)V	a	lambda$serializeToJson$1
	m	(Ljava/util/Optional;)Lam;	a	playerKilledEntity
		p	0		entity
	m	(Ljava/util/Optional;Lbf$a;)Lam;	a	playerKilledEntity
		p	0		entity
		p	1		damageSourcePredicateBuilder
	m	(Ljava/util/Optional;Ljava/util/Optional;)Lam;	a	playerKilledEntity
		p	0		entity
		p	1		killingBlow
	m	(Lbq$a;)Lam;	b	entityKilledPlayer
		p	0		killerEntityPredicateBuilder
	m	(Lbq$a;Lbf$a;)Lam;	b	entityKilledPlayer
		p	0		killerEntityPredicateBuilder
		p	1		damageSourcePredicateBuilder
	m	(Lbq$a;Ljava/util/Optional;)Lam;	b	entityKilledPlayer
		p	0		killerEntityPredicateBuilder
		p	1		killingBlow
	m	(Ljava/util/Optional;)Lam;	b	entityKilledPlayer
		p	0		entity
	m	(Ljava/util/Optional;Lbf$a;)Lam;	b	entityKilledPlayer
		p	0		entity
		p	1		damageSourcePredicateBuilder
	m	(Ljava/util/Optional;Ljava/util/Optional;)Lam;	b	entityKilledPlayer
		p	0		entity
		p	1		killingBlow
	m	()Lam;	c	playerKilledEntity
	m	()Lam;	d	playerKilledEntityNearSculkCatalyst
	m	()Lam;	e	entityKilledPlayer
	f	Ljava/util/Optional;	a	entityPredicate
	f	Ljava/util/Optional;	b	killingBlow
c	cf	net/minecraft/advancements/critereon/LevitationTrigger
	m	(Lakr;Lehn;I)V	a	trigger
		p	1		player
		p	2		startPos
		p	3		duration
	m	(Lakr;Lehn;ILcf$a;)Z	a	lambda$trigger$0
		p	3		conditions
	m	(Lcom/google/gson/JsonObject;Ljava/util/Optional;Lbg;)Lcf$a;	a	createInstance
	m	(Lcom/google/gson/JsonObject;Ljava/util/Optional;Lbg;)Lcw$a;	b	createInstance
		p	1		obj
		p	2		predicate
		p	3		predicateDeserializer
c	cf$a	net/minecraft/advancements/critereon/LevitationTrigger$TriggerInstance
	m	(Ljava/util/Optional;Ljava/util/Optional;Lcl$d;)V	<init>	<init>
		p	1		playerPredicate
		p	2		distance
		p	3		duration
	m	()Lcom/google/gson/JsonObject;	a	serializeToJson
	m	(Lakr;Lehn;I)Z	a	matches
		p	1		player
		p	2		distance
		p	3		duration
	m	(Lbh;)Lam;	a	levitated
		p	0		distance
	m	(Lcom/google/gson/JsonObject;Lbh;)V	a	lambda$serializeToJson$0
	f	Ljava/util/Optional;	a	distance
	f	Lcl$d;	b	duration
c	cg	net/minecraft/advancements/critereon/LightPredicate
	m	(Lcl$d;)V	<init>	<init>
		p	1		range
	m	()Lcl$d;	a	composite
	m	(Lakq;Lgw;)Z	a	matches
		p	1		world
		p	2		pos
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcl$d;	b	composite
c	cg$a	net/minecraft/advancements/critereon/LightPredicate$Builder
	m	()Lcg$a;	a	light
	m	(Lcl$d;)Lcg$a;	a	setComposite
		p	1		light
	m	()Lcg;	b	build
	f	Lcl$d;	a	composite
c	ch	net/minecraft/advancements/critereon/LightningBoltPredicate
	m	(Lcl$d;Ljava/util/Optional;)V	<init>	<init>
		p	1		blocksSetOnFire
	m	()Lbr$a;	a	type
	m	(Lakq;Lehn;Lbiq;)Z	a	lambda$matches$1
		p	3		struckEntity
	m	(Lbiq;Lakq;Lehn;)Z	a	matches
		p	1		entity
		p	2		world
		p	3		pos
	m	(Lcl$d;)Lch;	a	blockSetOnFire
		p	0		blocksSetOnFire
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()Lcl$d;	b	blocksSetOnFire
	m	()Ljava/util/Optional;	c	entityStruck
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	f	Lcl$d;	c	blocksSetOnFire
	f	Ljava/util/Optional;	d	entityStruck
c	ci	net/minecraft/advancements/critereon/LightningStrikeTrigger
	m	(Lakr;Lbiq;)Lecq;	a	lambda$trigger$0
		p	1		bystander
	m	(Lakr;Lbjf;Ljava/util/List;)V	a	trigger
		p	1		player
		p	2		lightning
		p	3		bystanders
	m	(Lcom/google/gson/JsonObject;Ljava/util/Optional;Lbg;)Lci$a;	a	createInstance
	m	(Lecq;Ljava/util/List;Lci$a;)Z	a	lambda$trigger$1
		p	2		conditions
	m	(Lcom/google/gson/JsonObject;Ljava/util/Optional;Lbg;)Lcw$a;	b	createInstance
		p	1		obj
		p	2		predicate
		p	3		predicateDeserializer
c	ci$a	net/minecraft/advancements/critereon/LightningStrikeTrigger$TriggerInstance
	m	(Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
		p	1		playerPredicate
		p	2		lightning
		p	3		bystander
	m	()Lcom/google/gson/JsonObject;	a	serializeToJson
	m	(Lcom/google/gson/JsonObject;Lbc;)V	a	lambda$serializeToJson$1
	m	(Lecq;Ljava/util/List;)Z	a	matches
		p	1		lightning
		p	2		bystanders
	m	(Ljava/util/Optional;Ljava/util/Optional;)Lam;	a	lightningStrike
		p	0		lightning
		p	1		bystander
	m	(Lcom/google/gson/JsonObject;Lbc;)V	b	lambda$serializeToJson$0
	f	Ljava/util/Optional;	a	lightning
	f	Ljava/util/Optional;	b	bystander
c	cj	net/minecraft/advancements/critereon/LocationPredicate
	m	()Lcom/google/gson/JsonElement;	a	serializeToJson
	m	(Lakq;DDD)Z	a	matches
		p	1		world
		p	2		x
		p	4		y
		p	6		z
	m	(Lcom/google/gson/JsonElement;)Ljava/util/Optional;	a	fromJson
		p	0		json
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	(Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)Ljava/util/Optional;	a	of
		p	0		position
		p	1		biome
		p	2		structure
		p	3		dimension
		p	4		smokey
		p	5		light
		p	6		block
		p	7		fluid
	m	()Ljava/util/Optional;	b	position
	m	()Ljava/util/Optional;	c	biome
	m	()Ljava/util/Optional;	d	structure
	m	()Ljava/util/Optional;	e	dimension
	m	()Ljava/util/Optional;	f	smokey
	m	()Ljava/util/Optional;	g	light
	m	()Ljava/util/Optional;	h	block
	m	()Ljava/util/Optional;	i	fluid
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Optional;	b	position
	f	Ljava/util/Optional;	c	biome
	f	Ljava/util/Optional;	d	structure
	f	Ljava/util/Optional;	e	dimension
	f	Ljava/util/Optional;	f	smokey
	f	Ljava/util/Optional;	g	light
	f	Ljava/util/Optional;	h	block
	f	Ljava/util/Optional;	i	fluid
c	cj$a	net/minecraft/advancements/critereon/LocationPredicate$Builder
	m	()Lcj$a;	a	location
	m	(Laev;)Lcj$a;	a	inBiome
		p	0		biome
	m	(Lav$a;)Lcj$a;	a	setBlock
		p	1		block
	m	(Lbx$a;)Lcj$a;	a	setFluid
		p	1		fluid
	m	(Lcg$a;)Lcj$a;	a	setLight
		p	1		light
	m	(Lcl$c;)Lcj$a;	a	atYLocation
		p	0		y
	m	(Z)Lcj$a;	a	setSmokey
		p	1		smokey
	m	()Lcj;	b	build
	m	(Laev;)Lcj$a;	b	inDimension
		p	0		dimension
	m	(Lcl$c;)Lcj$a;	b	setX
		p	1		x
	m	(Laev;)Lcj$a;	c	inStructure
		p	0		structure
	m	(Lcl$c;)Lcj$a;	c	setY
		p	1		y
	m	(Laev;)Lcj$a;	d	setBiome
		p	1		biome
	m	(Lcl$c;)Lcj$a;	d	setZ
		p	1		z
	m	(Laev;)Lcj$a;	e	setStructure
		p	1		structure
	m	(Laev;)Lcj$a;	f	setDimension
		p	1		dimension
	f	Lcl$c;	a	x
	f	Lcl$c;	b	y
	f	Lcl$c;	c	z
	f	Ljava/util/Optional;	d	biome
	f	Ljava/util/Optional;	e	structure
	f	Ljava/util/Optional;	f	dimension
	f	Ljava/util/Optional;	g	smokey
	f	Ljava/util/Optional;	h	light
	f	Ljava/util/Optional;	i	block
	f	Ljava/util/Optional;	j	fluid
c	cj$b	net/minecraft/advancements/critereon/LocationPredicate$PositionPredicate
	m	()Lcl$c;	a	x
	m	(DDD)Z	a	matches
		p	1		x
		p	3		y
		p	5		z
	m	(Lcl$c;Lcl$c;Lcl$c;)Ljava/util/Optional;	a	of
		p	0		x
		p	1		y
		p	2		z
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()Lcl$c;	b	y
	m	()Lcl$c;	c	z
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcl$c;	b	x
	f	Lcl$c;	c	y
	f	Lcl$c;	d	z
c	ck	net/minecraft/advancements/critereon/LootTableTrigger
	m	(Laew;Lck$a;)Z	a	lambda$trigger$0
		p	1		conditions
	m	(Lakr;Laew;)V	a	trigger
		p	1		player
		p	2		id
	m	(Lcom/google/gson/JsonObject;Ljava/util/Optional;Lbg;)Lck$a;	a	createInstance
	m	(Lcom/google/gson/JsonObject;Ljava/util/Optional;Lbg;)Lcw$a;	b	createInstance
		p	1		obj
		p	2		predicate
		p	3		predicateDeserializer
c	ck$a	net/minecraft/advancements/critereon/LootTableTrigger$TriggerInstance
	m	(Ljava/util/Optional;Laew;)V	<init>	<init>
		p	1		playerPredicate
		p	2		lootTable
	m	()Lcom/google/gson/JsonObject;	a	serializeToJson
	m	(Laew;)Lam;	a	lootTableUsed
		p	0		lootTable
	m	(Laew;)Z	b	matches
		p	1		lootTable
	f	Laew;	a	lootTable
c	cl	net/minecraft/advancements/critereon/MinMaxBounds
	m	()Ljava/util/Optional;	a	min
	m	(Lcl$a;Lcom/mojang/datafixers/util/Either;)Lcl;	a	lambda$createCodec$3
	m	(Lcl$a;Ljava/lang/Number;)Lcl;	a	lambda$createCodec$2
	m	(Lcl;)Lcom/mojang/datafixers/util/Either;	a	lambda$createCodec$4
	m	(Lcom/mojang/brigadier/StringReader;)Z	a	isAllowedInputChat
		p	0		reader
	m	(Lcom/mojang/brigadier/StringReader;Lcl$b;Ljava/util/function/Function;Ljava/util/function/Supplier;Ljava/util/function/Function;)Lcl;	a	fromReader
		p	0		commandReader
		p	1		commandFactory
		p	2		converter
		p	3		exceptionTypeSupplier
		p	4		mapper
	m	(Lcom/mojang/brigadier/StringReader;Ljava/util/function/Function;Ljava/util/function/Supplier;)Ljava/util/Optional;	a	readNumber
		p	0		reader
		p	1		converter
		p	2		exceptionTypeSupplier
	m	(Lcom/mojang/serialization/Codec;Lcl$a;)Lcom/mojang/serialization/Codec;	a	createCodec
	m	(Lcom/mojang/serialization/Codec;Lcl$a;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$createCodec$0
	m	()Ljava/util/Optional;	b	max
	m	(Lcl;)Lcl;	b	lambda$createCodec$1
	m	()Z	c	isAny
	m	()Ljava/util/Optional;	d	unwrapPoint
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_EMPTY
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_SWAPPED
c	cl$a	net/minecraft/advancements/critereon/MinMaxBounds$BoundsFactory
c	cl$b	net/minecraft/advancements/critereon/MinMaxBounds$BoundsFromReaderFactory
	m	(Lcom/mojang/brigadier/StringReader;Ljava/util/Optional;Ljava/util/Optional;)Lcl;	create	create
		p	1		reader
c	cl$c	net/minecraft/advancements/critereon/MinMaxBounds$Doubles
	m	()Ljava/util/Optional;	a	min
	m	(D)Lcl$c;	a	exactly
		p	0		value
	m	(DD)Lcl$c;	a	between
		p	0		min
		p	2		max
	m	(Lcom/google/gson/JsonElement;)Lcl$c;	a	fromJson
		p	0		element
	m	(Lcom/mojang/brigadier/StringReader;)Lcl$c;	a	fromReader
		p	0		reader
	m	(Lcom/mojang/brigadier/StringReader;Ljava/util/Optional;Ljava/util/Optional;)Lcl$c;	a	create
		p	0		reader
	m	(Lcom/mojang/brigadier/StringReader;Ljava/util/function/Function;)Lcl$c;	a	fromReader
		p	0		reader
		p	1		mapper
	m	(Ljava/lang/Double;)Ljava/lang/Double;	a	lambda$fromReader$1
		p	0		value
	m	(Ljava/util/Optional;)Ljava/util/Optional;	a	squareOpt
	m	()Ljava/util/Optional;	b	max
	m	(D)Lcl$c;	b	atLeast
		p	0		value
	m	(Ljava/lang/Double;)Ljava/lang/Double;	b	lambda$squareOpt$0
	m	(D)Lcl$c;	c	atMost
		p	0		value
	m	(D)Z	d	matches
		p	1		value
	m	()Lcom/google/gson/JsonElement;	e	serializeToJson
	m	(D)Z	e	matchesSqr
		p	1		value
	m	()Ljava/util/Optional;	f	minSq
	m	()Ljava/util/Optional;	g	maxSq
	f	Lcl$c;	c	ANY
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	Ljava/util/Optional;	e	min
	f	Ljava/util/Optional;	f	max
	f	Ljava/util/Optional;	g	minSq
	f	Ljava/util/Optional;	h	maxSq
c	cl$d	net/minecraft/advancements/critereon/MinMaxBounds$Ints
	m	()Ljava/util/Optional;	a	min
	m	(I)Lcl$d;	a	exactly
		p	0		value
	m	(II)Lcl$d;	a	between
		p	0		min
		p	1		max
	m	(J)Z	a	matchesSqr
		p	1		value
	m	(Lcom/google/gson/JsonElement;)Lcl$d;	a	fromJson
		p	0		element
	m	(Lcom/mojang/brigadier/StringReader;)Lcl$d;	a	fromReader
		p	0		reader
	m	(Lcom/mojang/brigadier/StringReader;Ljava/util/Optional;Ljava/util/Optional;)Lcl$d;	a	create
		p	0		reader
	m	(Lcom/mojang/brigadier/StringReader;Ljava/util/function/Function;)Lcl$d;	a	fromReader
		p	0		reader
		p	1		converter
	m	(Ljava/lang/Integer;)Ljava/lang/Integer;	a	lambda$fromReader$2
		p	0		value
	m	(Ljava/util/Optional;)Ljava/util/Optional;	a	squareOpt
	m	()Ljava/util/Optional;	b	max
	m	(I)Lcl$d;	b	atLeast
		p	0		value
	m	(Ljava/lang/Integer;)Ljava/lang/Long;	b	lambda$new$1
	m	(I)Lcl$d;	c	atMost
		p	0		value
	m	(Ljava/lang/Integer;)Ljava/lang/Long;	c	lambda$squareOpt$0
	m	(I)Z	d	matches
		p	1		value
	m	()Lcom/google/gson/JsonElement;	e	serializeToJson
	m	()Ljava/util/Optional;	f	minSq
	m	()Ljava/util/Optional;	g	maxSq
	f	Lcl$d;	c	ANY
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	Ljava/util/Optional;	e	min
	f	Ljava/util/Optional;	f	max
	f	Ljava/util/Optional;	g	minSq
	f	Ljava/util/Optional;	h	maxSq
c	cm	net/minecraft/advancements/critereon/MobEffectsPredicate
	m	(Ljava/util/Map;)V	<init>	<init>
		p	1		effects
	m	()Lcom/google/gson/JsonElement;	a	serializeToJson
	m	(Lbiq;)Z	a	matches
		p	1		entity
	m	(Lbjg;)Z	a	matches
		p	1		livingEntity
	m	(Lcom/google/gson/JsonElement;)Ljava/util/Optional;	a	fromJson
		p	0		json
	m	(Ljava/util/Map;)Z	a	matches
		p	1		effects
	m	()Ljava/util/Map;	b	effectMap
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Map;	b	effectMap
c	cm$a	net/minecraft/advancements/critereon/MobEffectsPredicate$Builder
	m	()Lcm$a;	a	effects
	m	(Lbib;)Lcm$a;	a	and
		p	1		effect
	m	(Lbib;Lcm$b;)Lcm$a;	a	and
		p	1		effect
		p	2		effectData
	m	()Ljava/util/Optional;	b	build
	f	Lcom/google/common/collect/ImmutableMap$Builder;	a	effectMap
c	cm$b	net/minecraft/advancements/critereon/MobEffectsPredicate$MobEffectInstancePredicate
	m	(Lcl$d;Lcl$d;Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
		p	1		amplifier
		p	2		duration
	m	()Lcl$d;	a	amplifier
	m	(Lbid;)Z	a	matches
		p	1		statusEffectInstance
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()Lcl$d;	b	duration
	m	()Ljava/util/Optional;	c	ambient
	m	()Ljava/util/Optional;	d	visible
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcl$d;	b	amplifier
	f	Lcl$d;	c	duration
	f	Ljava/util/Optional;	d	ambient
	f	Ljava/util/Optional;	e	visible
c	cn	net/minecraft/advancements/critereon/NbtPredicate
	m	(Lqw;)V	<init>	<init>
		p	1		nbt
	m	()Lqw;	a	tag
	m	(Lbiq;)Z	a	matches
		p	1		entity
	m	(Lcjf;)Z	a	matches
		p	1		stack
	m	(Lrq;)Z	a	matches
		p	1		element
	m	(Lbiq;)Lqw;	b	getEntityTagToCompare
		p	0		entity
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lqw;	b	tag
c	co	net/minecraft/advancements/critereon/PickedUpItemTrigger
	m	(Lakr;Lcjf;Lbiq;)V	a	trigger
		p	1		player
		p	2		stack
		p	3		entity
	m	(Lakr;Lcjf;Lecq;Lco$a;)Z	a	lambda$trigger$0
		p	3		conditions
	m	(Lcom/google/gson/JsonObject;Ljava/util/Optional;Lbg;)Lco$a;	a	createInstance
	m	(Lcom/google/gson/JsonObject;Ljava/util/Optional;Lbg;)Lcw$a;	b	createInstance
		p	1		obj
		p	2		predicate
		p	3		predicateDeserializer
c	co$a	net/minecraft/advancements/critereon/PickedUpItemTrigger$TriggerInstance
	m	(Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
		p	2		playerPredicate
		p	3		item
	m	()Lcom/google/gson/JsonObject;	a	serializeToJson
	m	(Lakr;Lcjf;Lecq;)Z	a	matches
		p	1		player
		p	2		stack
		p	3		entity
	m	(Lbc;Ljava/util/Optional;Ljava/util/Optional;)Lam;	a	thrownItemPickedUpByEntity
		p	0		player
		p	1		item
		p	2		entity
	m	(Lcom/google/gson/JsonObject;Lbc;)V	a	lambda$serializeToJson$1
	m	(Lcom/google/gson/JsonObject;Lcb;)V	a	lambda$serializeToJson$0
	m	(Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)Lam;	a	thrownItemPickedUpByPlayer
		p	0		playerPredicate
		p	1		item
		p	2		entity
	f	Ljava/util/Optional;	a	item
	f	Ljava/util/Optional;	b	entity
c	cp	net/minecraft/advancements/critereon/PlayerHurtEntityTrigger
	m	(Lakr;Lbiq;Lbho;FFZ)V	a	trigger
		p	1		player
		p	2		entity
		p	3		damage
		p	4		dealt
		p	5		taken
		p	6		blocked
	m	(Lakr;Lecq;Lbho;FFZLcp$a;)Z	a	lambda$trigger$0
		p	6		conditions
	m	(Lcom/google/gson/JsonObject;Ljava/util/Optional;Lbg;)Lcp$a;	a	createInstance
	m	(Lcom/google/gson/JsonObject;Ljava/util/Optional;Lbg;)Lcw$a;	b	createInstance
		p	1		obj
		p	2		predicate
		p	3		predicateDeserializer
c	cp$a	net/minecraft/advancements/critereon/PlayerHurtEntityTrigger$TriggerInstance
	m	(Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
		p	1		playerPredicate
		p	2		damage
		p	3		entity
	m	()Lcom/google/gson/JsonObject;	a	serializeToJson
	m	(Lakr;Lecq;Lbho;FFZ)Z	a	matches
		p	1		player
		p	2		entity
		p	3		damageSource
		p	4		dealt
		p	5		taken
		p	6		blocked
	m	(Lbe$a;)Lam;	a	playerHurtEntityWithDamage
		p	0		damage
	m	(Lbe$a;Ljava/util/Optional;)Lam;	a	playerHurtEntity
		p	0		damage
		p	1		entity
	m	(Lcom/google/gson/JsonObject;Lbc;)V	a	lambda$serializeToJson$1
	m	(Lcom/google/gson/JsonObject;Lbe;)V	a	lambda$serializeToJson$0
	m	(Ljava/util/Optional;)Lam;	a	playerHurtEntityWithDamage
	m	(Ljava/util/Optional;Ljava/util/Optional;)Lam;	a	playerHurtEntity
		p	0		damage
		p	1		entity
	m	(Ljava/util/Optional;)Lam;	b	playerHurtEntity
		p	0		entity
	m	()Lam;	c	playerHurtEntity
	f	Ljava/util/Optional;	a	damage
	f	Ljava/util/Optional;	b	entity
c	cq	net/minecraft/advancements/critereon/PlayerInteractTrigger
	m	(Lakr;Lcjf;Lbiq;)V	a	trigger
		p	1		player
		p	2		stack
		p	3		entity
	m	(Lcjf;Lecq;Lcq$a;)Z	a	lambda$trigger$0
		p	2		conditions
	m	(Lcom/google/gson/JsonObject;Ljava/util/Optional;Lbg;)Lcq$a;	a	createInstance
	m	(Lcom/google/gson/JsonObject;Ljava/util/Optional;Lbg;)Lcw$a;	b	createInstance
		p	1		obj
		p	2		predicate
		p	3		predicateDeserializer
c	cq$a	net/minecraft/advancements/critereon/PlayerInteractTrigger$TriggerInstance
	m	(Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
		p	1		playerPredicate
		p	2		item
		p	3		entity
	m	()Lcom/google/gson/JsonObject;	a	serializeToJson
	m	(Lcb$a;Ljava/util/Optional;)Lam;	a	itemUsedOnEntity
		p	0		item
		p	1		entity
	m	(Lcjf;Lecq;)Z	a	matches
		p	1		stack
		p	2		entity
	m	(Lcom/google/gson/JsonObject;Lbc;)V	a	lambda$serializeToJson$1
	m	(Lcom/google/gson/JsonObject;Lcb;)V	a	lambda$serializeToJson$0
	m	(Ljava/util/Optional;Lcb$a;Ljava/util/Optional;)Lam;	a	itemUsedOnEntity
		p	0		playerPredicate
		p	1		item
		p	2		entity
	f	Ljava/util/Optional;	a	item
	f	Ljava/util/Optional;	b	entity
c	cr	net/minecraft/advancements/critereon/PlayerPredicate
	m	(Lcl$d;Ljava/util/Optional;Ljava/util/List;Lit/unimi/dsi/fastutil/objects/Object2BooleanMap;Ljava/util/Map;Ljava/util/Optional;)V	<init>	<init>
		p	1		experienceLevel
		p	4		recipes
		p	5		advancements
	m	()Lbr$a;	a	type
	m	(Lbiq;)Z	a	lambda$matches$1
		p	0		hitEntity
	m	(Lbiq;Lakq;Lehn;)Z	a	matches
		p	1		entity
		p	2		world
		p	3		pos
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Lcl$d;	b	level
	m	()Ljava/util/Optional;	c	gameType
	m	()Ljava/util/List;	d	stats
	m	()Lit/unimi/dsi/fastutil/objects/Object2BooleanMap;	e	recipes
	m	()Ljava/util/Map;	f	advancements
	m	()Ljava/util/Optional;	g	lookingAt
	f	I	b	LOOKING_AT_RANGE
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
	f	Lcl$d;	d	level
	f	Ljava/util/Optional;	e	gameType
	f	Ljava/util/List;	f	stats
	f	Lit/unimi/dsi/fastutil/objects/Object2BooleanMap;	g	recipes
	f	Ljava/util/Map;	h	advancements
	f	Ljava/util/Optional;	i	lookingAt
c	cr$a	net/minecraft/advancements/critereon/PlayerPredicate$AdvancementCriterionsPredicate
	m	(Lit/unimi/dsi/fastutil/objects/Object2BooleanMap;)V	<init>	<init>
		p	1		criteria
	m	()Lit/unimi/dsi/fastutil/objects/Object2BooleanMap;	a	criterions
	m	(Lah;)Z	a	test
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lit/unimi/dsi/fastutil/objects/Object2BooleanMap;	c	criterions
c	cr$b	net/minecraft/advancements/critereon/PlayerPredicate$AdvancementDonePredicate
	m	(Z)V	<init>	<init>
		p	1		done
	m	()Z	a	state
	m	(Lah;)Z	a	test
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Z	c	state
c	cr$c	net/minecraft/advancements/critereon/PlayerPredicate$AdvancementPredicate
	m	(Lcom/mojang/datafixers/util/Either;)Lcr$c;	a	lambda$static$2
		p	0		either
	m	(Lcr$a;)Ljava/lang/Record;	a	lambda$static$1
		p	0		criteria
	m	(Lcr$b;)Ljava/lang/Record;	a	lambda$static$0
		p	0		completed
	m	(Lcr$c;)Lcom/mojang/datafixers/util/Either;	a	lambda$static$3
		p	0		predicate
	f	Lcom/mojang/serialization/Codec;	b	CODEC
c	cr$d	net/minecraft/advancements/critereon/PlayerPredicate$Builder
	m	()Lcr$d;	a	player
	m	(Laew;Ljava/util/Map;)Lcr$d;	a	checkAdvancementCriterions
		p	1		id
		p	2		criteria
	m	(Laew;Z)Lcr$d;	a	addRecipe
		p	1		id
		p	2		unlocked
	m	(Lapm;Lhe$c;Lcl$d;)Lcr$d;	a	addStat
		p	1		statType
		p	2		value
		p	3		range
	m	(Lbq$a;)Lcr$d;	a	setLookingAt
		p	1		lookingAt
	m	(Lcl$d;)Lcr$d;	a	setLevel
		p	1		experienceLevel
	m	(Lcps;)Lcr$d;	a	setGameType
		p	1		gameMode
	m	()Lcr;	b	build
	m	(Laew;Z)Lcr$d;	b	checkAdvancementDone
		p	1		id
		p	2		done
	f	Lcl$d;	a	level
	f	Ljava/util/Optional;	b	gameType
	f	Lcom/google/common/collect/ImmutableList$Builder;	c	stats
	f	Lit/unimi/dsi/fastutil/objects/Object2BooleanMap;	d	recipes
	f	Ljava/util/Map;	e	advancements
	f	Ljava/util/Optional;	f	lookingAt
c	cr$e	net/minecraft/advancements/critereon/PlayerPredicate$StatMatcher
	m	(Lapm;Lhe;Lcl$d;)V	<init>	<init>
		p	1		type
		p	2		value
		p	3		range
	m	()Lapm;	a	type
	m	(Lapm;)Lcom/mojang/serialization/Codec;	a	createTypedCodec
		p	0		type
	m	(Lapm;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$createTypedCodec$1
		p	1		instance
	m	(Lapm;Lhe;)Lapk;	a	lambda$new$2
	m	(Lapm;Lhe;Lcl$d;)Lcr$e;	a	lambda$createTypedCodec$0
	m	(Lapo;)Z	a	matches
		p	1		statHandler
	m	()Lhe;	b	value
	m	()Lcl$d;	c	range
	m	()Ljava/util/function/Supplier;	d	stat
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lapm;	b	type
	f	Lhe;	c	value
	f	Lcl$d;	d	range
	f	Ljava/util/function/Supplier;	e	stat
c	cs	net/minecraft/advancements/critereon/PlayerTrigger
	m	(Lakr;)V	a	trigger
		p	1		player
	m	(Lcom/google/gson/JsonObject;Ljava/util/Optional;Lbg;)Lcs$a;	a	createInstance
	m	(Lcs$a;)Z	a	lambda$trigger$0
		p	0		conditions
	m	(Lcom/google/gson/JsonObject;Ljava/util/Optional;Lbg;)Lcw$a;	b	createInstance
		p	1		obj
		p	2		predicate
		p	3		predicateDeserializer
c	cs$a	net/minecraft/advancements/critereon/PlayerTrigger$TriggerInstance
	m	(Ljava/util/Optional;)V	<init>	<init>
		p	1		playerPredicate
	m	(Lbq$a;)Lam;	a	located
	m	(Lcj$a;)Lam;	a	located
		p	0		location
	m	(Lcsv;Lcja;)Lam;	a	walkOnBlockWithEquipment
		p	0		block
		p	1		item
	m	(Ljava/util/Optional;)Lam;	a	located
		p	0		entity
	m	()Lam;	c	sleptInBed
	m	()Lam;	d	raidWon
	m	()Lam;	e	avoidVibration
	m	()Lam;	f	tick
c	ct	net/minecraft/advancements/critereon/RecipeCraftedTrigger
	m	(Laew;Ljava/util/List;Lct$a;)Z	a	lambda$trigger$0
		p	2		conditions
	m	(Lakr;Laew;Ljava/util/List;)V	a	trigger
		p	1		player
		p	2		recipeId
		p	3		ingredients
	m	(Lcom/google/gson/JsonObject;Ljava/util/Optional;Lbg;)Lct$a;	a	createInstance
	m	(Lcom/google/gson/JsonObject;Ljava/util/Optional;Lbg;)Lcw$a;	b	createInstance
		p	1		obj
		p	2		predicate
		p	3		predicateDeserializer
c	ct$a	net/minecraft/advancements/critereon/RecipeCraftedTrigger$TriggerInstance
	m	(Ljava/util/Optional;Laew;Ljava/util/List;)V	<init>	<init>
		p	1		playerPredicate
		p	2		recipeId
		p	3		ingredients
	m	()Lcom/google/gson/JsonObject;	a	serializeToJson
	m	(Laew;)Lam;	a	craftedItem
		p	0		recipeId
	m	(Laew;Ljava/util/List;)Lam;	a	craftedItem
		p	0		recipeId
		p	1		ingredients
	m	(Laew;Ljava/util/List;)Z	b	matches
		p	1		recipeId
		p	2		ingredients
	f	Laew;	a	recipeId
	f	Ljava/util/List;	b	predicates
c	cu	net/minecraft/advancements/critereon/RecipeUnlockedTrigger
	m	(Laew;)Lam;	a	unlocked
		p	0		id
	m	(Lakr;Lcmk;)V	a	trigger
		p	1		player
	m	(Lcmk;Lcu$a;)Z	a	lambda$trigger$0
		p	1		conditions
	m	(Lcom/google/gson/JsonObject;Ljava/util/Optional;Lbg;)Lcu$a;	a	createInstance
	m	(Lcom/google/gson/JsonObject;Ljava/util/Optional;Lbg;)Lcw$a;	b	createInstance
		p	1		obj
		p	2		predicate
		p	3		predicateDeserializer
c	cu$a	net/minecraft/advancements/critereon/RecipeUnlockedTrigger$TriggerInstance
	m	(Ljava/util/Optional;Laew;)V	<init>	<init>
		p	1		playerPredicate
		p	2		recipe
	m	()Lcom/google/gson/JsonObject;	a	serializeToJson
	m	(Lcmk;)Z	a	matches
	f	Laew;	a	recipe
c	cv	net/minecraft/advancements/critereon/ShotCrossbowTrigger
	m	(Lakr;Lcjf;)V	a	trigger
		p	1		player
		p	2		stack
	m	(Lcjf;Lcv$a;)Z	a	lambda$trigger$0
		p	1		conditions
	m	(Lcom/google/gson/JsonObject;Ljava/util/Optional;Lbg;)Lcv$a;	a	createInstance
	m	(Lcom/google/gson/JsonObject;Ljava/util/Optional;Lbg;)Lcw$a;	b	createInstance
		p	1		obj
		p	2		predicate
		p	3		predicateDeserializer
c	cv$a	net/minecraft/advancements/critereon/ShotCrossbowTrigger$TriggerInstance
	m	(Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
		p	1		playerPredicate
		p	2		item
	m	()Lcom/google/gson/JsonObject;	a	serializeToJson
	m	(Lcjf;)Z	a	matches
		p	1		stack
	m	(Lcom/google/gson/JsonObject;Lcb;)V	a	lambda$serializeToJson$0
	m	(Lcpu;)Lam;	a	shotCrossbow
		p	0		item
	m	(Ljava/util/Optional;)Lam;	a	shotCrossbow
		p	0		item
	f	Ljava/util/Optional;	a	item
c	cw	net/minecraft/advancements/critereon/SimpleCriterionTrigger
	m	(Lafe;)V	a	removePlayerListeners
		p	1		tracker
	m	(Lafe;Lao$a;)V	a	addPlayerListener
		p	1		manager
		p	2		conditions
	m	(Lakr;Ljava/util/function/Predicate;)V	a	trigger
		p	1		player
		p	2		predicate
	m	(Lcom/google/gson/JsonObject;Lbg;)Lap;	a	createInstance
		p	1		obj
		p	2		predicateDeserializer
	m	(Lafe;)Ljava/util/Set;	b	lambda$addPlayerListener$0
		p	0		managerx
	m	(Lafe;Lao$a;)V	b	removePlayerListener
		p	1		manager
		p	2		conditions
	m	(Lcom/google/gson/JsonObject;Lbg;)Lcw$a;	b	createInstance
	m	(Lcom/google/gson/JsonObject;Ljava/util/Optional;Lbg;)Lcw$a;	b	createInstance
		p	1		obj
		p	2		predicate
		p	3		predicateDeserializer
	f	Ljava/util/Map;	a	players
c	cw$a	net/minecraft/advancements/critereon/SimpleCriterionTrigger$SimpleInstance
	m	()Ljava/util/Optional;	b	playerPredicate
c	cx	net/minecraft/advancements/critereon/SlideDownBlockTrigger
	m	(Laew;)Lcom/google/gson/JsonSyntaxException;	a	lambda$deserializeBlock$2
	m	(Lakr;Ldfj;)V	a	trigger
		p	1		player
		p	2		state
	m	(Lcom/google/gson/JsonObject;)Lcsv;	a	deserializeBlock
		p	0		root
	m	(Lcom/google/gson/JsonObject;Ljava/util/Optional;Lbg;)Lcx$a;	a	createInstance
	m	(Lcsv;Lda;)V	a	lambda$createInstance$1
	m	(Lcsv;Ljava/lang/String;)V	a	lambda$createInstance$0
		p	1		key
	m	(Ldfj;Lcx$a;)Z	a	lambda$trigger$3
		p	1		conditions
	m	(Lcom/google/gson/JsonObject;Ljava/util/Optional;Lbg;)Lcw$a;	b	createInstance
		p	1		obj
		p	2		predicate
		p	3		predicateDeserializer
c	cx$a	net/minecraft/advancements/critereon/SlideDownBlockTrigger$TriggerInstance
	m	(Ljava/util/Optional;Lcsv;Ljava/util/Optional;)V	<init>	<init>
		p	1		playerPredicate
		p	2		block
		p	3		state
	m	()Lcom/google/gson/JsonObject;	a	serializeToJson
	m	(Lcom/google/gson/JsonObject;Lda;)V	a	lambda$serializeToJson$0
	m	(Lcsv;)Lam;	a	slidesDownBlock
		p	0		block
	m	(Ldfj;)Z	a	matches
		p	1		state
	f	Lcsv;	a	block
	f	Ljava/util/Optional;	b	state
c	cy	net/minecraft/advancements/critereon/SlimePredicate
	m	(Lcl$d;)V	<init>	<init>
		p	1		size
	m	()Lbr$a;	a	type
	m	(Lbiq;Lakq;Lehn;)Z	a	matches
		p	1		entity
		p	2		world
		p	3		pos
	m	(Lcl$d;)Lcy;	a	sized
		p	0		size
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()Lcl$d;	b	size
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	f	Lcl$d;	c	size
c	cz	net/minecraft/advancements/critereon/StartRidingTrigger
	m	(Lakr;)V	a	trigger
		p	1		player
	m	(Lcom/google/gson/JsonObject;Ljava/util/Optional;Lbg;)Lcz$a;	a	createInstance
	m	(Lcz$a;)Z	a	lambda$trigger$0
		p	0		conditions
	m	(Lcom/google/gson/JsonObject;Ljava/util/Optional;Lbg;)Lcw$a;	b	createInstance
		p	1		obj
		p	2		predicate
		p	3		predicateDeserializer
c	cz$a	net/minecraft/advancements/critereon/StartRidingTrigger$TriggerInstance
	m	(Ljava/util/Optional;)V	<init>	<init>
		p	1		playerPredicate
	m	(Lbq$a;)Lam;	a	playerStartsRiding
		p	0		player
c	da	net/minecraft/advancements/critereon/StatePropertiesPredicate
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		conditions
	m	()Lcom/google/gson/JsonElement;	a	serializeToJson
	m	(Lcom/google/gson/JsonElement;)Ljava/util/Optional;	a	fromJson
		p	0		json
	m	(Ldfj;)Z	a	matches
		p	1		state
	m	(Ldfk;)Ljava/util/Optional;	a	checkState
		p	1		stateManager
	m	(Ldfk;Ldfl;)Z	a	matches
		p	1		stateManager
		p	2		container
	m	(Ldfk;Ljava/util/function/Consumer;)V	a	checkState
		p	1		factory
		p	2		reporter
	m	(Ldfk;Ljava/util/function/Consumer;Lda$c;)V	a	lambda$checkState$3
		p	2		condition
	m	(Leam;)Z	a	matches
		p	1		state
	m	(Ljava/util/List;)Ljava/util/Map;	a	lambda$static$2
	m	(Ljava/util/Map$Entry;)Lda$c;	a	lambda$static$0
	m	(Ljava/util/Map;)Ljava/util/List;	a	lambda$static$1
	m	()Ljava/util/List;	b	properties
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/List;	b	properties
	f	Lcom/mojang/serialization/Codec;	c	PROPERTIES_CODEC
c	da$a	net/minecraft/advancements/critereon/StatePropertiesPredicate$Builder
	m	()Lda$a;	a	properties
	m	(Ldgm;I)Lda$a;	a	hasProperty
		p	1		property
		p	2		value
	m	(Ldgm;Ljava/lang/Comparable;)Lda$a;	a	hasProperty
		p	1		property
		p	2		value
	m	(Ldgm;Ljava/lang/String;)Lda$a;	a	hasProperty
		p	1		property
		p	2		valueName
	m	(Ldgm;Z)Lda$a;	a	hasProperty
		p	1		property
		p	2		value
	m	()Ljava/util/Optional;	b	build
	f	Lcom/google/common/collect/ImmutableList$Builder;	a	matchers
c	da$b	net/minecraft/advancements/critereon/StatePropertiesPredicate$ExactMatcher
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		key
	m	()Ljava/lang/String;	a	value
	m	(Ldfl;Ldgm;)Z	a	match
		p	1		state
		p	2		property
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/lang/String;	c	value
c	da$c	net/minecraft/advancements/critereon/StatePropertiesPredicate$PropertyMatcher
	m	(Ljava/lang/String;Lda$e;)V	<init>	<init>
		p	1		key
	m	()Ljava/lang/String;	a	name
	m	(Ldfk;)Ljava/util/Optional;	a	checkState
		p	1		factory
	m	(Ldfk;Ldfl;)Z	a	match
		p	1		stateManager
		p	2		state
	m	()Lda$e;	b	valueMatcher
	f	Ljava/lang/String;	a	name
	f	Lda$e;	b	valueMatcher
c	da$d	net/minecraft/advancements/critereon/StatePropertiesPredicate$RangedMatcher
	m	()Ljava/util/Optional;	a	minValue
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	(Ldfl;Ldgm;)Z	a	match
		p	1		state
		p	2		property
	m	()Ljava/util/Optional;	b	maxValue
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Optional;	c	minValue
	f	Ljava/util/Optional;	d	maxValue
c	da$e	net/minecraft/advancements/critereon/StatePropertiesPredicate$ValueMatcher
	m	(Lcom/mojang/datafixers/util/Either;)Lda$e;	a	lambda$static$2
	m	(Lda$b;)Ljava/lang/Record;	a	lambda$static$0
	m	(Lda$d;)Ljava/lang/Record;	a	lambda$static$1
	m	(Lda$e;)Lcom/mojang/datafixers/util/Either;	a	lambda$static$3
		p	0		valueMatcher
	m	(Ldfl;Ldgm;)Z	a	match
		p	1		state
		p	2		property
	f	Lcom/mojang/serialization/Codec;	b	CODEC
c	db	net/minecraft/advancements/critereon/SummonedEntityTrigger
	m	(Lakr;Lbiq;)V	a	trigger
		p	1		player
		p	2		entity
	m	(Lcom/google/gson/JsonObject;Ljava/util/Optional;Lbg;)Ldb$a;	a	createInstance
	m	(Lecq;Ldb$a;)Z	a	lambda$trigger$0
		p	1		conditions
	m	(Lcom/google/gson/JsonObject;Ljava/util/Optional;Lbg;)Lcw$a;	b	createInstance
		p	1		obj
		p	2		predicate
		p	3		predicateDeserializer
c	db$a	net/minecraft/advancements/critereon/SummonedEntityTrigger$TriggerInstance
	m	(Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
		p	1		playerPredicate
		p	2		entity
	m	()Lcom/google/gson/JsonObject;	a	serializeToJson
	m	(Lbq$a;)Lam;	a	summonedEntity
		p	0		summonedEntityPredicateBuilder
	m	(Lcom/google/gson/JsonObject;Lbc;)V	a	lambda$serializeToJson$0
	m	(Lecq;)Z	a	matches
		p	1		entity
	f	Ljava/util/Optional;	a	entity
c	dc	net/minecraft/advancements/critereon/TagPredicate
	m	(Laqh;Z)V	<init>	<init>
		p	1		tag
		p	2		expected
	m	()Laqh;	a	tag
	m	(Laev;)Lcom/mojang/serialization/Codec;	a	codec
		p	0		registryRef
	m	(Laev;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$codec$0
	m	(Laqh;)Ldc;	a	is
		p	0		tag
	m	(Lhe;)Z	a	matches
		p	1		registryEntry
	m	()Z	b	expected
	m	(Laqh;)Ldc;	b	isNot
		p	0		tag
	f	Laqh;	a	tag
	f	Z	b	expected
c	dd	net/minecraft/advancements/critereon/TameAnimalTrigger
	m	(Lakr;Lbur;)V	a	trigger
		p	1		player
		p	2		entity
	m	(Lcom/google/gson/JsonObject;Ljava/util/Optional;Lbg;)Ldd$a;	a	createInstance
	m	(Lecq;Ldd$a;)Z	a	lambda$trigger$0
		p	1		conditions
	m	(Lcom/google/gson/JsonObject;Ljava/util/Optional;Lbg;)Lcw$a;	b	createInstance
		p	1		obj
		p	2		predicate
		p	3		predicateDeserializer
c	dd$a	net/minecraft/advancements/critereon/TameAnimalTrigger$TriggerInstance
	m	(Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
		p	1		playerPredicate
		p	2		entity
	m	()Lcom/google/gson/JsonObject;	a	serializeToJson
	m	(Lbq$a;)Lam;	a	tamedAnimal
	m	(Lcom/google/gson/JsonObject;Lbc;)V	a	lambda$serializeToJson$0
	m	(Lecq;)Z	a	matches
		p	1		entity
	m	()Lam;	c	tamedAnimal
	f	Ljava/util/Optional;	a	entity
c	de	net/minecraft/advancements/critereon/TargetBlockTrigger
	m	(Lakr;Lbiq;Lehn;I)V	a	trigger
		p	1		player
		p	2		projectile
		p	3		hitPos
		p	4		signalStrength
	m	(Lcom/google/gson/JsonObject;Ljava/util/Optional;Lbg;)Lde$a;	a	createInstance
	m	(Lecq;Lehn;ILde$a;)Z	a	lambda$trigger$0
		p	3		conditions
	m	(Lcom/google/gson/JsonObject;Ljava/util/Optional;Lbg;)Lcw$a;	b	createInstance
		p	1		obj
		p	2		predicate
		p	3		predicateDeserializer
c	de$a	net/minecraft/advancements/critereon/TargetBlockTrigger$TriggerInstance
	m	(Ljava/util/Optional;Lcl$d;Ljava/util/Optional;)V	<init>	<init>
		p	1		playerPredicate
		p	2		signalStrength
		p	3		projectile
	m	()Lcom/google/gson/JsonObject;	a	serializeToJson
	m	(Lcl$d;Ljava/util/Optional;)Lam;	a	targetHit
		p	0		signalStrength
		p	1		projectile
	m	(Lcom/google/gson/JsonObject;Lbc;)V	a	lambda$serializeToJson$0
	m	(Lecq;Lehn;I)Z	a	matches
		p	1		projectile
		p	2		hitPos
		p	3		signalStrength
	f	Lcl$d;	a	signalStrength
	f	Ljava/util/Optional;	b	projectile
c	df	net/minecraft/advancements/critereon/TradeTrigger
	m	(Lakr;Lcbc;Lcjf;)V	a	trigger
		p	1		player
		p	2		merchant
		p	3		stack
	m	(Lcom/google/gson/JsonObject;Ljava/util/Optional;Lbg;)Ldf$a;	a	createInstance
	m	(Lecq;Lcjf;Ldf$a;)Z	a	lambda$trigger$0
		p	2		conditions
	m	(Lcom/google/gson/JsonObject;Ljava/util/Optional;Lbg;)Lcw$a;	b	createInstance
		p	1		obj
		p	2		predicate
		p	3		predicateDeserializer
c	df$a	net/minecraft/advancements/critereon/TradeTrigger$TriggerInstance
	m	(Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
		p	1		playerPredicate
		p	2		villager
		p	3		item
	m	()Lcom/google/gson/JsonObject;	a	serializeToJson
	m	(Lbq$a;)Lam;	a	tradedWithVillager
		p	0		playerPredicate
	m	(Lcom/google/gson/JsonObject;Lbc;)V	a	lambda$serializeToJson$1
	m	(Lcom/google/gson/JsonObject;Lcb;)V	a	lambda$serializeToJson$0
	m	(Lecq;Lcjf;)Z	a	matches
		p	1		villager
		p	2		stack
	m	()Lam;	c	tradedWithVillager
	f	Ljava/util/Optional;	a	villager
	f	Ljava/util/Optional;	b	item
c	dg	net/minecraft/advancements/critereon/UsedEnderEyeTrigger
	m	(DLdg$a;)Z	a	lambda$trigger$0
		p	2		conditions
	m	(Lakr;Lgw;)V	a	trigger
		p	1		player
		p	2		strongholdPos
	m	(Lcom/google/gson/JsonObject;Ljava/util/Optional;Lbg;)Ldg$a;	a	createInstance
	m	(Lcom/google/gson/JsonObject;Ljava/util/Optional;Lbg;)Lcw$a;	b	createInstance
		p	1		obj
		p	2		predicate
		p	3		predicateDeserializer
c	dg$a	net/minecraft/advancements/critereon/UsedEnderEyeTrigger$TriggerInstance
	m	(Ljava/util/Optional;Lcl$c;)V	<init>	<init>
		p	1		playerPredicate
		p	2		distance
	m	(D)Z	a	matches
		p	1		distance
	f	Lcl$c;	a	level
c	dh	net/minecraft/advancements/critereon/UsedTotemTrigger
	m	(Lakr;Lcjf;)V	a	trigger
		p	1		player
		p	2		stack
	m	(Lcjf;Ldh$a;)Z	a	lambda$trigger$0
		p	1		conditions
	m	(Lcom/google/gson/JsonObject;Ljava/util/Optional;Lbg;)Ldh$a;	a	createInstance
	m	(Lcom/google/gson/JsonObject;Ljava/util/Optional;Lbg;)Lcw$a;	b	createInstance
		p	1		obj
		p	2		predicate
		p	3		predicateDeserializer
c	dh$a	net/minecraft/advancements/critereon/UsedTotemTrigger$TriggerInstance
	m	(Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
		p	1		playerPredicate
		p	2		item
	m	()Lcom/google/gson/JsonObject;	a	serializeToJson
	m	(Lcb;)Lam;	a	usedTotem
		p	0		itemPredicate
	m	(Lcjf;)Z	a	matches
		p	1		stack
	m	(Lcom/google/gson/JsonObject;Lcb;)V	a	lambda$serializeToJson$0
	m	(Lcpu;)Lam;	a	usedTotem
		p	0		item
	f	Ljava/util/Optional;	a	item
c	di	net/minecraft/advancements/critereon/UsingItemTrigger
	m	(Lakr;Lcjf;)V	a	trigger
		p	1		player
		p	2		stack
	m	(Lcjf;Ldi$a;)Z	a	lambda$trigger$0
		p	1		conditions
	m	(Lcom/google/gson/JsonObject;Ljava/util/Optional;Lbg;)Ldi$a;	a	createInstance
	m	(Lcom/google/gson/JsonObject;Ljava/util/Optional;Lbg;)Lcw$a;	b	createInstance
		p	1		obj
		p	2		predicate
		p	3		predicateDeserializer
c	di$a	net/minecraft/advancements/critereon/UsingItemTrigger$TriggerInstance
	m	(Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
		p	1		playerPredicate
		p	2		item
	m	()Lcom/google/gson/JsonObject;	a	serializeToJson
	m	(Lbq$a;Lcb$a;)Lam;	a	lookingAt
		p	0		player
		p	1		item
	m	(Lcjf;)Z	a	matches
		p	1		stack
	m	(Lcom/google/gson/JsonObject;Lcb;)V	a	lambda$serializeToJson$0
	f	Ljava/util/Optional;	a	item
c	dj	net/minecraft/advancements/critereon/WrappedMinMaxBounds
	m	(Ljava/lang/Float;Ljava/lang/Float;)V	<init>	<init>
		p	1		min
		p	2		max
	m	()Lcom/google/gson/JsonElement;	a	serializeToJson
	m	(D)Z	a	matchesSqr
		p	1		value
	m	(F)Ldj;	a	exactly
		p	0		value
	m	(FF)Ldj;	a	between
		p	0		min
		p	1		max
	m	(Lcom/google/gson/JsonElement;)Ldj;	a	fromJson
		p	0		json
	m	(Lcom/mojang/brigadier/StringReader;Z)Ldj;	a	fromReader
		p	0		reader
		p	1		allowFloats
	m	(Lcom/mojang/brigadier/StringReader;ZLjava/util/function/Function;)Ldj;	a	fromReader
		p	0		reader
		p	1		allowFloats
		p	2		transform
	m	(Ljava/lang/Float;)Ljava/lang/Float;	a	lambda$fromReader$0
		p	0		value
	m	(Ljava/lang/Float;Ljava/util/function/Function;)Ljava/lang/Float;	a	optionallyFormat
		p	0		value
		p	1		function
	m	()Ljava/lang/Float;	b	min
	m	(F)Ldj;	b	atLeast
		p	0		value
	m	(Lcom/mojang/brigadier/StringReader;Z)Ljava/lang/Float;	b	readNumber
		p	0		reader
		p	1		allowFloats
	m	()Ljava/lang/Float;	c	max
	m	(F)Ldj;	c	atMost
		p	0		value
	m	(Lcom/mojang/brigadier/StringReader;Z)Z	c	isAllowedNumber
		p	0		reader
		p	1		allowFloats
	m	(F)Z	d	matches
		p	1		value
	f	Ldj;	a	ANY
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_INTS_ONLY
	f	Ljava/lang/Float;	c	min
	f	Ljava/lang/Float;	d	max
c	dk	net/minecraft/advancements/critereon/package-info
c	dl	net/minecraft/advancements/package-info
c	dm	net/minecraft/commands/BrigadierExceptions
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$16
		p	0		message
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$7
		p	0		found
		p	1		max
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$15
		p	0		symbol
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$6
		p	0		found
		p	1		min
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	c	lambda$static$14
		p	0		value
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	c	lambda$static$5
		p	0		found
		p	1		max
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	d	lambda$static$13
		p	0		value
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	d	lambda$static$4
		p	0		found
		p	1		min
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	e	lambda$static$12
		p	0		value
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	e	lambda$static$3
		p	0		found
		p	1		max
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	f	lambda$static$11
		p	0		value
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	f	lambda$static$2
		p	0		found
		p	1		min
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	g	lambda$static$10
		p	0		value
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	g	lambda$static$1
		p	0		found
		p	1		max
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	h	lambda$static$9
		p	0		character
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	h	lambda$static$0
		p	0		found
		p	1		min
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	i	lambda$static$8
		p	0		expected
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	A	DISPATCHER_PARSE_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	a	DOUBLE_TOO_SMALL
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	b	DOUBLE_TOO_BIG
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	c	FLOAT_TOO_SMALL
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	d	FLOAT_TOO_BIG
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	e	INTEGER_TOO_SMALL
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	f	INTEGER_TOO_BIG
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	g	LONG_TOO_SMALL
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	h	LONG_TOO_BIG
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	i	LITERAL_INCORRECT
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	j	READER_EXPECTED_START_OF_QUOTE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	k	READER_EXPECTED_END_OF_QUOTE
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	l	READER_INVALID_ESCAPE
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	m	READER_INVALID_BOOL
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	n	READER_INVALID_INT
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	o	READER_EXPECTED_INT
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	p	READER_INVALID_LONG
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	q	READER_EXPECTED_LONG
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	r	READER_INVALID_DOUBLE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	s	READER_EXPECTED_DOUBLE
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	t	READER_INVALID_FLOAT
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	u	READER_EXPECTED_FLOAT
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	v	READER_EXPECTED_BOOL
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	w	READER_EXPECTED_SYMBOL
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	x	DISPATCHER_UNKNOWN_COMMAND
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	y	DISPATCHER_UNKNOWN_ARGUMENT
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	z	DISPATCHER_EXPECTED_ARGUMENT_SEPARATOR
c	dn	net/minecraft/commands/CommandBuildContext
	m	(Laev;)Lhg;	a	holderLookup
		p	1		registryRef
	m	(Lhg$b;Lcec;)Ldn;	a	simple
		p	0		wrapperLookup
		p	1		enabledFeatures
	m	(Lhr;Lcec;)Ldn$a;	a	configurable
		p	0		registryManager
		p	1		enabledFeatures
c	dn$1	net/minecraft/commands/CommandBuildContext$1
	m	(Laev;)Lhg;	a	holderLookup
		p	1		registryRef
	f	Lhg$b;	a	val$access
	f	Lcec;	b	val$enabledFeatures
c	dn$2	net/minecraft/commands/CommandBuildContext$2
	m	(Laev;)Lhg;	a	holderLookup
		p	1		registryRef
	m	(Ldn$b;)V	a	missingTagAccessPolicy
		p	1		entryListCreationPolicy
	f	Lhr;	a	val$registryAccess
	f	Lcec;	b	val$enabledFeatures
	f	Ldn$b;	c	missingTagAccessPolicy
c	dn$2$1	net/minecraft/commands/CommandBuildContext$2$1
	m	()Lhg$c;	a	parent
	f	Lhg$c;	a	val$originalLookup
	f	Lhg$c;	b	val$originalTagAddingLookup
	f	Ldn$2;	c	this$0
c	dn$3	net/minecraft/commands/CommandBuildContext$3
	f	[I	a	$SwitchMap$net$minecraft$commands$CommandBuildContext$MissingTagAccessPolicy
c	dn$a	net/minecraft/commands/CommandBuildContext$Configurable
	m	(Ldn$b;)V	a	missingTagAccessPolicy
		p	1		entryListCreationPolicy
c	dn$b	net/minecraft/commands/CommandBuildContext$MissingTagAccessPolicy
	m	()[Ldn$b;	a	$values
	f	Ldn$b;	a	CREATE_NEW
	f	Ldn$b;	b	FAIL
	f	[Ldn$b;	c	$VALUES
c	dp	net/minecraft/commands/CommandFunction
	m	(Laew;[Ldp$d;)V	<init>	<init>
		p	1		id
		p	2		elements
	m	()Laew;	a	getId
	m	(I)[Ldp$d;	a	lambda$fromLines$1
	m	(Laew;Lcom/mojang/brigadier/CommandDispatcher;Ldt;Ljava/util/List;)Ldp;	a	fromLines
		p	0		id
		p	1		dispatcher
		p	2		source
		p	3		lines
	m	(Ljava/lang/CharSequence;)Z	a	shouldConcatenateNextLine
		p	0		string
	m	(Ljava/lang/String;)Z	a	isValidVariableName
		p	0		name
	m	(Ljava/lang/String;I)Ldp$f;	a	decomposeMacro
		p	0		macro
		p	1		line
	m	(Lqw;Lcom/mojang/brigadier/CommandDispatcher;Ldt;)Ldp;	a	instantiate
		p	1		arguments
		p	2		dispatcher
		p	3		source
	m	()[Ldp$d;	b	getEntries
	m	(I)[Ldp$d;	b	lambda$fromLines$0
	f	[Ldp$d;	a	entries
	f	Laew;	b	id
c	dp$a	net/minecraft/commands/CommandFunction$CacheableFunction
	m	(Laew;)V	<init>	<init>
		p	1		id
	m	(Ldp;)V	<init>	<init>
		p	1		function
	m	()Laew;	a	getId
	m	(Lafk;)Ljava/util/Optional;	a	get
		p	1		manager
	m	(Ldp;)Laew;	a	lambda$getId$0
		p	0		f
	f	Ldp$a;	a	NONE
	f	Laew;	b	id
	f	Z	c	resolved
	f	Ljava/util/Optional;	d	function
c	dp$b	net/minecraft/commands/CommandFunction$CommandEntry
	m	(Lcom/mojang/brigadier/ParseResults;)V	<init>	<init>
		p	1		parsed
	m	(Lafk;Ldt;)I	a	execute
		p	1		manager
		p	2		source
	m	(Ldt;Ldt;)Ldt;	a	lambda$execute$0
		p	1		currentSource
	m	(Lafk;Ldt;Ljava/util/Deque;IILafk$c;)V	execute	execute
		p	1		manager
		p	2		source
		p	3		entries
		p	4		maxChainLength
		p	5		depth
		p	6		tracer
	f	Lcom/mojang/brigadier/ParseResults;	a	parse
c	dp$c	net/minecraft/commands/CommandFunction$CommandMacro
	m	(Laew;[Ldp$d;Ljava/util/List;)V	<init>	<init>
		p	1		id
		p	2		elements
		p	3		variables
	m	(Ljava/util/List;Lcom/mojang/brigadier/CommandDispatcher;Ldt;)Ldp;	a	substituteAndParse
		p	1		arguments
		p	2		dispatcher
		p	3		source
	m	(Lqw;Lcom/mojang/brigadier/CommandDispatcher;Ldt;)Ldp;	a	instantiate
		p	1		arguments
		p	2		dispatcher
		p	3		source
	m	(Lrq;)Ljava/lang/String;	a	stringify
		p	0		nbt
	f	Ljava/text/DecimalFormat;	a	DECIMAL_FORMAT
	f	Ljava/util/List;	b	parameters
	f	I	c	MAX_CACHE_ENTRIES
	f	Lit/unimi/dsi/fastutil/objects/Object2ObjectLinkedOpenHashMap;	d	cache
c	dp$d	net/minecraft/commands/CommandFunction$Entry
	m	(Lafk;Ldt;Ljava/util/Deque;IILafk$c;)V	execute	execute
		p	1		manager
		p	2		source
		p	3		entries
		p	4		maxChainLength
		p	5		depth
		p	6		tracer
c	dp$e	net/minecraft/commands/CommandFunction$FunctionEntry
	m	(Ldp;)V	<init>	<init>
		p	1		function
	m	(Lafk$c;I)V	a	lambda$execute$1
	m	(Lafk$c;IILjava/util/Deque;Ldt;Ldp;)V	a	lambda$execute$0
		p	5		f
	m	(Lafk;Ldt;Ljava/util/Deque;IILafk$c;)V	execute	execute
		p	1		manager
		p	2		source
		p	3		entries
		p	4		maxChainLength
		p	5		depth
		p	6		tracer
	f	Ldp$a;	a	function
c	dp$f	net/minecraft/commands/CommandFunction$MacroEntry
	m	(Ljava/util/List;Ljava/util/List;)V	<init>	<init>
		p	1		parts
		p	2		variables
	m	()Ljava/util/List;	a	parameters
	m	(Ljava/util/List;)Ljava/lang/String;	a	substitute
		p	1		arguments
	m	(Lafk;Ldt;Ljava/util/Deque;IILafk$c;)V	execute	execute
		p	1		manager
		p	2		source
		p	3		entries
		p	4		maxChainLength
		p	5		depth
		p	6		tracer
	f	Ljava/util/List;	a	segments
	f	Ljava/util/List;	b	parameters
c	dq	net/minecraft/commands/CommandRuntimeException
	m	(Ltl;)V	<init>	<init>
		p	1		message
	m	()Ltl;	a	getComponent
	f	Ltl;	a	message
c	dr	net/minecraft/commands/CommandSigningContext
	m	(Ljava/lang/String;)Lua;	a	getArgument
		p	1		argumentName
	f	Ldr;	a	ANONYMOUS
c	dr$1	net/minecraft/commands/CommandSigningContext$1
	m	(Ljava/lang/String;)Lua;	a	getArgument
		p	1		argumentName
c	dr$a	net/minecraft/commands/CommandSigningContext$SignedArguments
	m	()Ljava/util/Map;	a	arguments
	m	(Ljava/lang/String;)Lua;	a	getArgument
		p	1		argumentName
	f	Ljava/util/Map;	b	arguments
c	ds	net/minecraft/commands/CommandSource
	m	()Z	T_	shouldInformAdmins
	m	(Ltl;)V	a	sendSystemMessage
		p	1		message
	m	()Z	j_	acceptsSuccess
	m	()Z	k_	alwaysAccepts
	m	()Z	v_	acceptsFailure
	f	Lds;	a	NULL
c	ds$1	net/minecraft/commands/CommandSource$1
	m	()Z	T_	shouldInformAdmins
	m	(Ltl;)V	a	sendSystemMessage
		p	1		message
	m	()Z	j_	acceptsSuccess
	m	()Z	v_	acceptsFailure
c	dt	net/minecraft/commands/CommandSourceStack
	m	(Lds;Lehn;Lehm;Lakq;ILjava/lang/String;Ltl;Lnet/minecraft/server/MinecraftServer;Lbiq;)V	<init>	<init>
		p	1		output
		p	2		pos
		p	3		rot
		p	4		world
		p	5		level
		p	6		name
		p	7		displayName
		p	8		server
		p	9		entity
	m	(Lds;Lehn;Lehm;Lakq;ILjava/lang/String;Ltl;Lnet/minecraft/server/MinecraftServer;Lbiq;ZLcom/mojang/brigadier/ResultConsumer;Led$a;Ldr;Lasr;Ljava/util/function/IntConsumer;)V	<init>	<init>
		p	1		output
		p	2		pos
		p	3		rot
		p	4		world
		p	5		level
		p	6		name
		p	7		displayName
		p	8		server
		p	9		entity
		p	10		silent
		p	11		consumer
		p	12		entityAnchor
		p	13		signedArguments
		p	14		messageChainTaskQueue
		p	15		returnValueConsumer
	m	()Ldt;	a	withSuppressedOutput
	m	(I)Ldt;	a	withPermission
		p	1		level
	m	(Laev;Ldw$a;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/concurrent/CompletableFuture;	a	suggestRegistryElements
		p	1		registryRef
		p	2		suggestedIdType
		p	3		builder
		p	4		context
	m	(Lakq;)Ldt;	a	withLevel
		p	1		world
	m	(Lakr;)Z	a	shouldFilterMessageTo
		p	1		recipient
	m	(Lbiq;)Ldt;	a	withEntity
		p	1		entity
	m	(Lbiq;Led$a;)Ldt;	a	facing
		p	1		entity
		p	2		anchor
	m	(Lcom/mojang/brigadier/ResultConsumer;)Ldt;	a	withCallback
		p	1		consumer
	m	(Lcom/mojang/brigadier/ResultConsumer;Ljava/util/function/BinaryOperator;)Ldt;	a	withCallback
		p	1		consumer
		p	2		merger
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/concurrent/CompletableFuture;	a	customSuggestion
		p	1		context
	m	(Lcom/mojang/brigadier/context/CommandContext;ZI)V	a	onCommandComplete
		p	1		context
		p	2		success
		p	3		result
	m	(Ldr;Lasr;)Ldt;	a	withSigningContext
		p	1		signedArguments
		p	2		messageChainTaskQueue
	m	(Lds;)Ldt;	a	withSource
		p	1		output
	m	(Ldw$a;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lhq;)Ljava/util/concurrent/CompletableFuture;	a	lambda$suggestRegistryElements$2
		p	3		registry
	m	(Led$a;)Ldt;	a	withAnchor
		p	1		anchor
	m	(Lehm;)Ldt;	a	withRotation
		p	1		rotation
	m	(Lehn;)Ldt;	a	withPosition
		p	1		position
	m	(Ljava/util/function/IntConsumer;)Ldt;	a	withReturnValueConsumer
		p	1		returnValueConsumer
	m	(Ljava/util/function/Supplier;Z)V	a	sendSuccess
		p	1		feedbackSupplier
		p	2		broadcastToOps
	m	(Ltl;)V	a	sendSystemMessage
		p	1		message
	m	(Ltz;ZLth$a;)V	a	sendChatMessage
		p	1		message
		p	2		filterMaskEnabled
		p	3		params
	m	()Ltl;	b	getDisplayName
	m	(I)Ldt;	b	withMaximumPermission
		p	1		level
	m	(Lcom/mojang/brigadier/context/CommandContext;ZI)V	b	lambda$new$0
		p	0		context
		p	1		success
		p	2		result
	m	(Lehn;)Ldt;	b	facing
		p	1		position
	m	(Ltl;)V	b	sendFailure
		p	1		message
	m	()Ljava/lang/String;	c	getTextName
	m	(I)Z	c	hasPermission
		p	1		level
	m	(Ltl;)V	c	broadcastToAdmins
		p	1		message
	m	()Lehn;	d	getPosition
	m	(I)V	d	lambda$new$1
	m	()Lakq;	e	getLevel
	m	()Lbiq;	f	getEntity
	m	()Lbiq;	g	getEntityOrException
	m	()Lakr;	h	getPlayerOrException
	m	()Lakr;	i	getPlayer
	m	()Z	j	isPlayer
	m	()Lehm;	k	getRotation
	m	()Lnet/minecraft/server/MinecraftServer;	l	getServer
	m	()Led$a;	m	getAnchor
	m	()Ldr;	n	getSigningContext
	m	()Lasr;	o	getChatMessageChainer
	m	()Ljava/util/function/IntConsumer;	p	getReturnValueConsumer
	m	()Ljava/util/Collection;	q	getOnlinePlayerNames
	m	()Ljava/util/Collection;	r	getAllTeams
	m	()Ljava/util/stream/Stream;	s	getAvailableSounds
	m	()Ljava/util/stream/Stream;	t	getRecipeNames
	m	()Ljava/util/Set;	u	levels
	m	()Lhr;	v	registryAccess
	m	()Lcec;	w	enabledFeatures
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_NOT_PLAYER
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_NOT_ENTITY
	f	Lds;	c	source
	f	Lehn;	d	worldPosition
	f	Lakq;	e	level
	f	I	f	permissionLevel
	f	Ljava/lang/String;	g	textName
	f	Ltl;	h	displayName
	f	Lnet/minecraft/server/MinecraftServer;	i	server
	f	Z	j	silent
	f	Lbiq;	k	entity
	f	Lcom/mojang/brigadier/ResultConsumer;	l	consumer
	f	Led$a;	m	anchor
	f	Lehm;	n	rotation
	f	Ldr;	o	signingContext
	f	Lasr;	p	chatMessageChainer
	f	Ljava/util/function/IntConsumer;	q	returnValueConsumer
c	du	net/minecraft/commands/Commands
	m	(Ldu$a;Ldn;)V	<init>	<init>
		p	1		environment
		p	2		commandRegistryAccess
	m	()Lcom/mojang/brigadier/CommandDispatcher;	a	getDispatcher
	m	(Lakr;)V	a	sendCommands
		p	1		player
	m	(Lcom/mojang/brigadier/CommandDispatcher;Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/tree/CommandNode;Ljava/util/Collection;)V	a	lambda$validate$7
		p	1		parent
		p	2		child
		p	3		sibling
		p	4		inputs
	m	(Lcom/mojang/brigadier/ParseResults;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	getParseException
		p	0		parse
	m	(Lcom/mojang/brigadier/ParseResults;Ljava/lang/String;)I	a	performCommand
		p	1		parseResults
		p	2		command
	m	(Lcom/mojang/brigadier/ParseResults;Ljava/util/function/UnaryOperator;)Lcom/mojang/brigadier/ParseResults;	a	mapSource
		p	0		parseResults
		p	1		sourceMapper
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Ljava/lang/String;	a	lambda$validate$9
		p	0		type
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$fillUsableCommands$5
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;ZI)V	a	lambda$new$0
		p	0		context
		p	1		success
		p	2		result
	m	(Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/tree/CommandNode;Ldt;Ljava/util/Map;)V	a	fillUsableCommands
		p	1		tree
		p	2		result
		p	3		source
		p	4		resultNodes
	m	(Ldt;Ljava/lang/String;)I	a	performPrefixedCommand
		p	1		source
		p	2		command
	m	(Ldu$b;)Ljava/util/function/Predicate;	a	createValidator
		p	0		parser
	m	(Ldu$b;Ljava/lang/String;)Z	a	lambda$createValidator$6
		p	1		string
	m	(Ldw;)Z	a	lambda$fillUsableCommands$4
		p	0		sourcex
	m	(Lhg$b;)Ldn;	a	createValidationContext
		p	0		registryLookup
	m	(Ljava/lang/String;)Lcom/mojang/brigadier/builder/LiteralArgumentBuilder;	a	literal
		p	0		literal
	m	(Ljava/lang/String;Lcom/mojang/brigadier/arguments/ArgumentType;)Lcom/mojang/brigadier/builder/RequiredArgumentBuilder;	a	argument
		p	0		name
		p	1		type
	m	(Ljava/lang/String;Luh;)Luh;	a	lambda$performCommand$2
		p	1		style
	m	(Lty;Luh;)Luh;	a	lambda$performCommand$3
		p	1		style
	m	()V	b	validate
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Z	b	lambda$validate$8
		p	0		type
	m	(Ljava/lang/String;)Ljava/lang/String;	b	lambda$performCommand$1
	f	I	a	LEVEL_ALL
	f	I	b	LEVEL_MODERATORS
	f	I	c	LEVEL_GAMEMASTERS
	f	I	d	LEVEL_ADMINS
	f	I	e	LEVEL_OWNERS
	f	Lorg/slf4j/Logger;	f	LOGGER
	f	Lcom/mojang/brigadier/CommandDispatcher;	g	dispatcher
c	du$1	net/minecraft/commands/Commands$1
	m	(Laev;)Lhg;	a	holderLookup
		p	1		registryRef
	f	Lhg$b;	a	val$registries
c	du$1$1	net/minecraft/commands/Commands$1$1
	m	(Ldu$1;Lhg;Lhg$c;)V	<init>	<init>
		p	2		baseWrapper
	m	(Laqh;)Ljava/util/Optional;	a	get
		p	1		tag
	m	(Lhg$c;Laqh;)Lhi$c;	a	lambda$getOrThrow$0
	m	(Laqh;)Lhi$c;	b	getOrThrow
		p	1		tag
	f	Lhg$c;	a	val$original
	f	Ldu$1;	b	this$0
c	du$a	net/minecraft/commands/Commands$CommandSelection
	m	(Ljava/lang/String;IZZ)V	<init>	<init>
		p	3		integrated
		p	4		dedicated
	m	()[Ldu$a;	a	$values
	f	Ldu$a;	a	ALL
	f	Ldu$a;	b	DEDICATED
	f	Ldu$a;	c	INTEGRATED
	f	Z	d	includeIntegrated
	f	Z	e	includeDedicated
	f	[Ldu$a;	f	$VALUES
c	du$b	net/minecraft/commands/Commands$ParseFunction
	m	(Lcom/mojang/brigadier/StringReader;)V	parse	parse
		p	1		reader
c	dv	net/minecraft/commands/FunctionInstantiationException
	m	(Ltl;)V	<init>	<init>
		p	1		message
	m	()Ltl;	a	messageComponent
	f	Ltl;	a	messageComponent
c	dw	net/minecraft/commands/SharedSuggestionProvider
	m	()Ljava/util/Collection;	A	getAbsoluteCoordinates
	m	(Laev;Ldw$a;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/concurrent/CompletableFuture;	a	suggestRegistryElements
		p	1		registryRef
		p	2		suggestedIdType
		p	3		builder
		p	4		context
	m	(Laew;)Laew;	a	lambda$suggestResource$2
		p	0		id
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/concurrent/CompletableFuture;	a	customSuggestion
		p	1		context
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Laew;)V	a	lambda$suggestResource$3
		p	1		id
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/lang/String;Laew;)V	a	lambda$suggestResource$1
		p	2		id
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/lang/Object;)V	a	lambda$suggestResource$4
		p	3		object
	m	(Lhq;Ldw$a;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)V	a	suggestRegistryElements
		p	1		registry
		p	2		suggestedIdType
		p	3		builder
	m	(Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	suggestResource
		p	0		candidates
		p	1		builder
	m	(Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;	a	suggestResource
		p	0		candidates
		p	1		builder
		p	2		prefix
	m	(Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;	a	suggestResource
		p	0		candidates
		p	1		builder
		p	2		identifier
		p	3		tooltip
	m	(Ljava/lang/Iterable;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/Consumer;)V	a	filterResources
		p	0		candidates
		p	1		remaining
		p	2		prefix
		p	3		identifier
		p	4		action
	m	(Ljava/lang/Iterable;Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/Consumer;)V	a	filterResources
		p	0		candidates
		p	1		remaining
		p	2		identifier
		p	3		action
	m	(Ljava/lang/String;Ljava/lang/String;)Z	a	matchesSubStr
		p	0		remaining
		p	1		candidate
	m	(Ljava/lang/String;Ljava/util/Collection;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Predicate;)Ljava/util/concurrent/CompletableFuture;	a	suggestCoordinates
		p	0		remaining
		p	1		candidates
		p	2		builder
		p	3		predicate
	m	(Ljava/util/stream/Stream;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	suggestResource
		p	0		candidates
		p	1		builder
	m	(Ljava/util/stream/Stream;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;	a	suggestResource
		p	0		candidates
		p	1		builder
		p	2		prefix
	m	(Ljava/util/stream/Stream;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;	a	suggestResource
		p	0		candidates
		p	1		builder
		p	2		identifier
		p	3		tooltip
	m	([Ljava/lang/String;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	suggest
		p	0		candidates
		p	1		builder
	m	(Laew;)Laew;	b	lambda$suggestResource$0
		p	0		id
	m	(Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	b	suggest
		p	0		candidates
		p	1		builder
	m	(Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;	b	suggest
		p	0		candidates
		p	1		builder
		p	2		suggestionText
		p	3		tooltip
	m	(Ljava/lang/String;Ljava/lang/String;)Z	b	lambda$suggest$5
		p	1		candidate
	m	(Ljava/lang/String;Ljava/util/Collection;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Predicate;)Ljava/util/concurrent/CompletableFuture;	b	suggest2DCoordinates
		p	0		remaining
		p	1		candidates
		p	2		builder
		p	3		predicate
	m	(Ljava/util/stream/Stream;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	b	suggest
		p	0		candidates
		p	1		builder
	m	(I)Z	c	hasPermission
		p	1		level
	m	()Ljava/util/Collection;	q	getOnlinePlayerNames
	m	()Ljava/util/Collection;	r	getAllTeams
	m	()Ljava/util/stream/Stream;	s	getAvailableSounds
	m	()Ljava/util/stream/Stream;	t	getRecipeNames
	m	()Ljava/util/Set;	u	levels
	m	()Lhr;	v	registryAccess
	m	()Lcec;	w	enabledFeatures
	m	()Ljava/util/Collection;	x	getCustomTabSugggestions
	m	()Ljava/util/Collection;	y	getSelectedEntities
	m	()Ljava/util/Collection;	z	getRelevantCoordinates
c	dw$a	net/minecraft/commands/SharedSuggestionProvider$ElementSuggestionType
	m	()Z	a	shouldSuggestTags
	m	()Z	b	shouldSuggestElements
	m	()[Ldw$a;	c	$values
	f	Ldw$a;	a	TAGS
	f	Ldw$a;	b	ELEMENTS
	f	Ldw$a;	c	ALL
	f	[Ldw$a;	d	$VALUES
c	dw$b	net/minecraft/commands/SharedSuggestionProvider$TextCoordinates
	m	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V	<init>	<init>
		p	1		x
		p	2		y
		p	3		z
	f	Ldw$b;	a	DEFAULT_LOCAL
	f	Ldw$b;	b	DEFAULT_GLOBAL
	f	Ljava/lang/String;	c	x
	f	Ljava/lang/String;	d	y
	f	Ljava/lang/String;	e	z
c	dx	net/minecraft/commands/arguments/AngleArgument
	m	()Ldx;	a	angle
	m	(Lcom/mojang/brigadier/StringReader;)Ldx$a;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)F	a	getAngle
		p	0		context
		p	1		name
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_NOT_COMPLETE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_INVALID_ANGLE
	f	Ljava/util/Collection;	c	EXAMPLES
c	dx$a	net/minecraft/commands/arguments/AngleArgument$SingleAngle
	m	(FZ)V	<init>	<init>
		p	1		angle
		p	2		relative
	m	(Ldt;)F	a	getAngle
		p	1		source
	f	F	a	angle
	f	Z	b	isRelative
c	dy	net/minecraft/commands/arguments/ArgumentSignatures
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Ljava/util/List;	a	entries
	m	(Ldy$b;Luc$a;)Ldy$a;	a	lambda$signCommand$1
		p	1		argument
	m	(Ljava/lang/String;)Ltw;	a	get
		p	1		argumentName
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lso;Ldy$a;)V	a	lambda$write$0
		p	0		buf2
		p	1		entry
	m	(Luc;Ldy$b;)Ldy;	a	signCommand
		p	0		arguments
		p	1		signer
	f	Ldy;	a	EMPTY
	f	Ljava/util/List;	b	entries
	f	I	c	MAX_ARGUMENT_COUNT
	f	I	d	MAX_ARGUMENT_NAME_LENGTH
c	dy$a	net/minecraft/commands/arguments/ArgumentSignatures$Entry
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Ljava/lang/String;	a	name
	m	(Lso;)V	a	write
		p	1		buf
	m	()Ltw;	b	signature
	f	Ljava/lang/String;	a	name
	f	Ltw;	b	signature
c	dy$b	net/minecraft/commands/arguments/ArgumentSignatures$Signer
	m	(Ljava/lang/String;)Ltw;	sign	sign
		p	1		value
c	dz	net/minecraft/commands/arguments/ColorArgument
	m	()Ldz;	a	color
	m	(Lcom/mojang/brigadier/StringReader;)Ln;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ln;	a	getColor
		p	0		context
		p	1		name
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		color
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	ERROR_INVALID_VALUE
	f	Ljava/util/Collection;	b	EXAMPLES
c	ea	net/minecraft/commands/arguments/ComponentArgument
	m	()Lea;	a	textComponent
	m	(Lcom/mojang/brigadier/StringReader;)Ltl;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ltl;	a	getComponent
		p	0		context
		p	1		name
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		text
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	ERROR_INVALID_JSON
	f	Ljava/util/Collection;	b	EXAMPLES
c	eb	net/minecraft/commands/arguments/CompoundTagArgument
	m	()Leb;	a	compoundTag
	m	(Lcom/mojang/brigadier/StringReader;)Lqw;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lqw;	a	getCompoundTag
		p	0		context
		p	1		name
	f	Ljava/util/Collection;	a	EXAMPLES
c	ec	net/minecraft/commands/arguments/DimensionArgument
	m	()Lec;	a	dimension
	m	(Laev;)Ljava/lang/String;	a	lambda$static$0
		p	0		key
	m	(Lcom/mojang/brigadier/StringReader;)Laew;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lakq;	a	getDimension
		p	0		context
		p	1		name
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$1
		p	0		id
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_INVALID_VALUE
c	ed	net/minecraft/commands/arguments/EntityAnchorArgument
	m	()Led;	a	anchor
	m	(Lcom/mojang/brigadier/StringReader;)Led$a;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Led$a;	a	getAnchor
		p	0		context
		p	1		name
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		name
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_INVALID
c	ed$a	net/minecraft/commands/arguments/EntityAnchorArgument$Anchor
	m	(Ljava/lang/String;ILjava/lang/String;Ljava/util/function/BiFunction;)V	<init>	<init>
		p	3		id
		p	4		offset
	m	()[Led$a;	a	$values
	m	(Lbiq;)Lehn;	a	apply
		p	1		entity
	m	(Ldt;)Lehn;	a	apply
		p	1		source
	m	(Lehn;Lbiq;)Lehn;	a	lambda$static$1
		p	0		pos
		p	1		entity
	m	(Ljava/lang/String;)Led$a;	a	getByName
		p	0		id
	m	(Ljava/util/HashMap;)V	a	lambda$static$2
		p	0		map
	m	(Lehn;Lbiq;)Lehn;	b	lambda$static$0
		p	0		pos
		p	1		entity
	f	Led$a;	a	FEET
	f	Led$a;	b	EYES
	f	Ljava/util/Map;	c	BY_NAME
	f	Ljava/lang/String;	d	name
	f	Ljava/util/function/BiFunction;	e	transform
	f	[Led$a;	f	$VALUES
c	ee	net/minecraft/commands/arguments/EntityArgument
	m	(ZZ)V	<init>	<init>
		p	1		singleTarget
		p	2		playersOnly
	m	()Lee;	a	entity
	m	(Lcom/mojang/brigadier/StringReader;)Lgc;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lbiq;	a	getEntity
		p	0		context
		p	1		name
	m	(Ldw;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)V	a	lambda$listSuggestions$0
		p	2		builder
	m	()Lee;	b	entities
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection;	b	getEntities
		p	0		context
		p	1		name
	m	()Lee;	c	player
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection;	c	getOptionalEntities
		p	0		context
		p	1		name
	m	()Lee;	d	players
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection;	d	getOptionalPlayers
		p	0		context
		p	1		name
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lakr;	e	getPlayer
		p	0		context
		p	1		name
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection;	f	getPlayers
		p	0		context
		p	1		name
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_NOT_SINGLE_ENTITY
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_NOT_SINGLE_PLAYER
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_ONLY_PLAYERS_ALLOWED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	d	NO_ENTITIES_FOUND
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	e	NO_PLAYERS_FOUND
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	f	ERROR_SELECTORS_NOT_ALLOWED
	f	Ljava/util/Collection;	g	EXAMPLES
	f	Z	h	single
	f	Z	i	playersOnly
c	ee$a	net/minecraft/commands/arguments/EntityArgument$Info
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Lgi$a;	a	unpack
		p	1		argumentType
	m	(Lee$a$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Lee$a$a;Lso;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Lee;)Lee$a$a;	a	unpack
		p	1		argumentType
	m	(Lgi$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Lgi$a;Lso;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Lso;)Lee$a$a;	a	deserializeFromNetwork
	m	(Lso;)Lgi$a;	b	deserializeFromNetwork
		p	1		buf
	f	B	a	FLAG_SINGLE
	f	B	b	FLAG_PLAYERS_ONLY
c	ee$a$a	net/minecraft/commands/arguments/EntityArgument$Info$Template
	m	(Lee$a;ZZ)V	<init>	<init>
		p	2		single
		p	3		playersOnly
	m	()Lgi;	a	type
	m	(Ldn;)Lee;	a	instantiate
	m	(Ldn;)Lcom/mojang/brigadier/arguments/ArgumentType;	b	instantiate
		p	1		commandRegistryAccess
	f	Lee$a;	a	this$0
	f	Z	b	single
	f	Z	c	playersOnly
c	ef	net/minecraft/commands/arguments/GameModeArgument
	m	()Lef;	a	gameMode
	m	(Lcom/mojang/brigadier/StringReader;)Lcps;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lcps;	a	getGameMode
		p	0		context
		p	1		name
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		gameMode
	f	Ljava/util/Collection;	a	EXAMPLES
	f	[Lcps;	b	VALUES
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	c	ERROR_INVALID
c	eg	net/minecraft/commands/arguments/GameProfileArgument
	m	()Leg;	a	gameProfile
	m	(Lcom/mojang/brigadier/StringReader;)Leg$a;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)V	a	lambda$listSuggestions$1
		p	1		builder
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection;	a	getGameProfiles
		p	0		context
		p	1		name
	m	(Ljava/lang/String;Ldt;)Ljava/util/Collection;	a	lambda$parse$0
		p	1		source
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_UNKNOWN_PLAYER
	f	Ljava/util/Collection;	b	EXAMPLES
c	eg$a	net/minecraft/commands/arguments/GameProfileArgument$Result
	m	(Ldt;)Ljava/util/Collection;	getNames	getNames
		p	1		source
c	eg$b	net/minecraft/commands/arguments/GameProfileArgument$SelectorResult
	m	(Lgc;)V	<init>	<init>
		p	1		selector
	m	(Ldt;)Ljava/util/Collection;	getNames	getNames
		p	1		source
	f	Lgc;	a	selector
c	eh	net/minecraft/commands/arguments/HeightmapTypeArgument
	m	()Leh;	a	heightmap
	m	(I)[Ldks$a;	a	lambda$keptTypes$1
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ldks$a;	a	getHeightmap
		p	0		context
		p	1		id
	m	(Ljava/lang/String;)Ljava/lang/String;	a	convertId
		p	1		name
	m	()[Ldks$a;	b	keptTypes
	m	(Ljava/lang/String;)Ljava/lang/String;	b	lambda$static$0
		p	0		name
	f	Lcom/mojang/serialization/Codec;	a	LOWER_CASE_CODEC
c	ei	net/minecraft/commands/arguments/MessageArgument
	m	()Lei;	a	message
	m	(Lcom/mojang/brigadier/StringReader;)Lei$a;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ltl;	a	getMessage
		p	0		context
		p	1		name
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Ljava/util/function/Consumer;)V	a	resolveChatMessage
		p	0		context
		p	1		name
		p	2		callback
	m	(Ldt;Lua;)Ljava/util/concurrent/CompletableFuture;	a	filterPlainText
		p	0		source
		p	1		message
	m	(Ljava/util/concurrent/CompletableFuture;Lua;Ltl;Ljava/util/function/Consumer;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	lambda$resolveSignedMessage$1
		p	4		executor
	m	(Ljava/util/function/Consumer;Ldt;Lua;)V	a	resolveSignedMessage
		p	0		callback
		p	1		source
		p	2		message
	m	(Lua;Ltl;Ljava/util/function/Consumer;Lalh;)V	a	lambda$resolveSignedMessage$0
		p	3		filtered
	m	(Ljava/util/function/Consumer;Ldt;Lua;)V	b	resolveDisguisedMessage
		p	0		callback
		p	1		source
		p	2		message
	f	Ljava/util/Collection;	a	EXAMPLES
c	ei$a	net/minecraft/commands/arguments/MessageArgument$Message
	m	(Ljava/lang/String;[Lei$b;)V	<init>	<init>
		p	1		contents
		p	2		selectors
	m	()Ljava/lang/String;	a	getText
	m	(Lcom/mojang/brigadier/StringReader;Z)Lei$a;	a	parseText
		p	0		reader
		p	1		canUseSelectors
	m	(Ldt;)Ltl;	a	resolveComponent
		p	1		source
	m	(Ldt;Z)Ltl;	a	toComponent
		p	1		source
		p	2		canUseSelectors
	m	()[Lei$b;	b	getParts
	f	Ljava/lang/String;	a	text
	f	[Lei$b;	b	parts
c	ei$b	net/minecraft/commands/arguments/MessageArgument$Part
	m	(IILgc;)V	<init>	<init>
		p	1		start
		p	2		end
		p	3		selector
	m	()I	a	getStart
	m	(Ldt;)Ltl;	a	toComponent
		p	1		source
	m	()I	b	getEnd
	m	()Lgc;	c	getSelector
	f	I	a	start
	f	I	b	end
	f	Lgc;	c	selector
c	ej	net/minecraft/commands/arguments/NbtPathArgument
	m	()Lej;	a	nbtPath
	m	(C)Z	a	isAllowedInUnquotedName
		p	0		c
	m	(Lcom/mojang/brigadier/StringReader;)Lej$g;	a	parse
	m	(Lcom/mojang/brigadier/StringReader;Ljava/lang/String;)Lej$h;	a	readObjectNode
		p	0		reader
		p	1		name
	m	(Lcom/mojang/brigadier/StringReader;Z)Lej$h;	a	parseNode
		p	0		reader
		p	1		root
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lej$g;	a	getPath
		p	0		context
		p	1		name
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$2
		p	0		index
	m	(Lqw;)Ljava/util/function/Predicate;	a	createTagPredicate
		p	0		filter
	m	(Lqw;Lrq;)Z	a	lambda$createTagPredicate$3
		p	1		nbt
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/String;	b	readUnquotedName
		p	0		reader
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$1
		p	0		nbt
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	c	lambda$static$0
		p	0		path
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_INVALID_NODE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_DATA_TOO_DEEP
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	c	ERROR_NOTHING_FOUND
	f	Ljava/util/Collection;	d	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	e	ERROR_EXPECTED_LIST
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	f	ERROR_INVALID_INDEX
	f	C	g	INDEX_MATCH_START
	f	C	h	INDEX_MATCH_END
	f	C	i	KEY_MATCH_START
	f	C	j	KEY_MATCH_END
	f	C	k	QUOTED_KEY_START
	f	C	l	SINGLE_QUOTED_KEY_START
c	ej$a	net/minecraft/commands/arguments/NbtPathArgument$AllElementsNode
	m	()Lrq;	a	createPreferredParentTag
	m	(Lrq;)I	a	removeTag
		p	1		current
	m	(Lrq;Ljava/util/List;)V	a	getTag
		p	1		current
		p	2		results
	m	(Lrq;Ljava/util/function/Supplier;)I	a	setTag
		p	1		current
		p	2		source
	m	(Lrq;Ljava/util/function/Supplier;Ljava/util/List;)V	a	getOrCreateTag
		p	1		current
		p	2		source
		p	3		results
	f	Lej$a;	a	INSTANCE
c	ej$b	net/minecraft/commands/arguments/NbtPathArgument$CompoundChildNode
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		name
	m	()Lrq;	a	createPreferredParentTag
	m	(Lrq;)I	a	removeTag
		p	1		current
	m	(Lrq;Ljava/util/List;)V	a	getTag
		p	1		current
		p	2		results
	m	(Lrq;Ljava/util/function/Supplier;)I	a	setTag
		p	1		current
		p	2		source
	m	(Lrq;Ljava/util/function/Supplier;Ljava/util/List;)V	a	getOrCreateTag
		p	1		current
		p	2		source
		p	3		results
	f	Ljava/lang/String;	a	name
c	ej$c	net/minecraft/commands/arguments/NbtPathArgument$IndexedElementNode
	m	(I)V	<init>	<init>
		p	1		index
	m	()Lrq;	a	createPreferredParentTag
	m	(Lrq;)I	a	removeTag
		p	1		current
	m	(Lrq;Ljava/util/List;)V	a	getTag
		p	1		current
		p	2		results
	m	(Lrq;Ljava/util/function/Supplier;)I	a	setTag
		p	1		current
		p	2		source
	m	(Lrq;Ljava/util/function/Supplier;Ljava/util/List;)V	a	getOrCreateTag
		p	1		current
		p	2		source
		p	3		results
	f	I	a	index
c	ej$d	net/minecraft/commands/arguments/NbtPathArgument$MatchElementNode
	m	(Lqw;)V	<init>	<init>
		p	1		filter
	m	()Lrq;	a	createPreferredParentTag
	m	(Ljava/util/List;Lorg/apache/commons/lang3/mutable/MutableBoolean;Lrq;)V	a	lambda$getOrCreateTag$0
		p	2		nbt
	m	(Lrq;)I	a	removeTag
		p	1		current
	m	(Lrq;Ljava/util/List;)V	a	getTag
		p	1		current
		p	2		results
	m	(Lrq;Ljava/util/function/Supplier;)I	a	setTag
		p	1		current
		p	2		source
	m	(Lrq;Ljava/util/function/Supplier;Ljava/util/List;)V	a	getOrCreateTag
		p	1		current
		p	2		source
		p	3		results
	f	Lqw;	a	pattern
	f	Ljava/util/function/Predicate;	b	predicate
c	ej$e	net/minecraft/commands/arguments/NbtPathArgument$MatchObjectNode
	m	(Ljava/lang/String;Lqw;)V	<init>	<init>
		p	1		name
		p	2		filter
	m	()Lrq;	a	createPreferredParentTag
	m	(Lrq;)I	a	removeTag
		p	1		current
	m	(Lrq;Ljava/util/List;)V	a	getTag
		p	1		current
		p	2		results
	m	(Lrq;Ljava/util/function/Supplier;)I	a	setTag
		p	1		current
		p	2		source
	m	(Lrq;Ljava/util/function/Supplier;Ljava/util/List;)V	a	getOrCreateTag
		p	1		current
		p	2		source
		p	3		results
	f	Ljava/lang/String;	a	name
	f	Lqw;	b	pattern
	f	Ljava/util/function/Predicate;	c	predicate
c	ej$f	net/minecraft/commands/arguments/NbtPathArgument$MatchRootObjectNode
	m	(Lqw;)V	<init>	<init>
		p	1		filter
	m	()Lrq;	a	createPreferredParentTag
	m	(Lrq;)I	a	removeTag
		p	1		current
	m	(Lrq;Ljava/util/List;)V	a	getTag
		p	1		current
		p	2		results
	m	(Lrq;Ljava/util/function/Supplier;)I	a	setTag
		p	1		current
		p	2		source
	m	(Lrq;Ljava/util/function/Supplier;Ljava/util/List;)V	a	getOrCreateTag
		p	1		current
		p	2		source
		p	3		results
	f	Ljava/util/function/Predicate;	a	predicate
c	ej$g	net/minecraft/commands/arguments/NbtPathArgument$NbtPath
	m	(Ljava/lang/String;[Lej$h;Lit/unimi/dsi/fastutil/objects/Object2IntMap;)V	<init>	<init>
		p	1		string
		p	2		nodes
		p	3		nodeEndIndices
	m	()I	a	estimatePathDepth
	m	(ILqw;Ljava/util/List;)I	a	insert
		p	1		index
		p	2		compound
		p	3		elements
	m	(Lej$h;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	createNotFoundException
		p	1		node
	m	(Lej$h;Lorg/apache/commons/lang3/mutable/MutableBoolean;Lrq;Lrq;)Ljava/lang/Integer;	a	lambda$set$2
	m	(Ljava/lang/Integer;Ljava/lang/Integer;)Ljava/lang/Integer;	a	lambda$apply$0
		p	0		a
		p	1		b
	m	(Ljava/util/List;Ljava/util/function/Function;)I	a	apply
		p	0		elements
		p	1		operation
	m	(Lorg/apache/commons/lang3/mutable/MutableBoolean;Lrq;)Lrq;	a	lambda$set$1
	m	(Lrq;)Ljava/util/List;	a	get
		p	1		element
	m	(Lrq;I)Z	a	isTooDeep
		p	0		element
		p	1		depth
	m	(Lrq;Ljava/util/function/Supplier;)Ljava/util/List;	a	getOrCreate
		p	1		element
		p	2		source
	m	(Lrq;Lrq;)I	a	set
		p	1		element
		p	2		source
	m	(Lrq;)I	b	countMatching
		p	1		element
	m	(Lrq;)I	c	remove
		p	1		element
	m	(Lrq;)Ljava/util/List;	d	getOrCreateParents
		p	1		start
	f	Ljava/lang/String;	a	original
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	b	nodeToOriginalPosition
	f	[Lej$h;	c	nodes
c	ej$h	net/minecraft/commands/arguments/NbtPathArgument$Node
	m	()Lrq;	a	createPreferredParentTag
	m	(Ljava/util/List;)Ljava/util/List;	a	get
		p	1		elements
	m	(Ljava/util/List;Ljava/util/function/BiConsumer;)Ljava/util/List;	a	collect
		p	1		elements
		p	2		action
	m	(Ljava/util/List;Ljava/util/function/Supplier;)Ljava/util/List;	a	getOrCreate
		p	1		elements
		p	2		supplier
	m	(Ljava/util/function/Supplier;Lrq;Ljava/util/List;)V	a	lambda$getOrCreate$0
		p	2		current
		p	3		results
	m	(Lrq;)I	a	removeTag
		p	1		current
	m	(Lrq;Ljava/util/List;)V	a	getTag
		p	1		current
		p	2		results
	m	(Lrq;Ljava/util/function/Supplier;)I	a	setTag
		p	1		current
		p	2		source
	m	(Lrq;Ljava/util/function/Supplier;Ljava/util/List;)V	a	getOrCreateTag
		p	1		current
		p	2		source
		p	3		results
c	ek	net/minecraft/commands/arguments/NbtTagArgument
	m	()Lek;	a	nbtTag
	m	(Lcom/mojang/brigadier/StringReader;)Lrq;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lrq;	a	getNbtTag
		p	0		context
		p	1		name
	f	Ljava/util/Collection;	a	EXAMPLES
c	el	net/minecraft/commands/arguments/ObjectiveArgument
	m	()Lel;	a	objective
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/String;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Leij;	a	getObjective
		p	0		context
		p	1		name
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$1
		p	0		name
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Leij;	b	getWritableObjective
		p	0		context
		p	1		name
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$0
		p	0		name
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_OBJECTIVE_NOT_FOUND
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	c	ERROR_OBJECTIVE_READ_ONLY
c	em	net/minecraft/commands/arguments/ObjectiveCriteriaArgument
	m	()Lem;	a	criteria
	m	(Lapm;Ljava/lang/Object;)Ljava/lang/String;	a	getName
		p	1		stat
		p	2		value
	m	(Lcom/mojang/brigadier/StringReader;)Leip;	a	parse
	m	(Lcom/mojang/brigadier/StringReader;ILjava/lang/String;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$parse$1
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Leip;	a	getCriteria
		p	0		context
		p	1		name
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		name
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	ERROR_INVALID_VALUE
	f	Ljava/util/Collection;	b	EXAMPLES
c	en	net/minecraft/commands/arguments/OperationArgument
	m	()Len;	a	operation
	m	(II)I	a	lambda$getSimpleOperation$6
		p	0		a
		p	1		b
	m	(Lcom/mojang/brigadier/StringReader;)Len$a;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Len$a;	a	getOperation
		p	0		context
		p	1		name
	m	(Leil;Leil;)V	a	lambda$getOperation$0
		p	0		a
		p	1		b
	m	(Ljava/lang/String;)Len$a;	a	getOperation
		p	0		operator
	m	(II)I	b	lambda$getSimpleOperation$5
		p	0		a
		p	1		b
	m	(Ljava/lang/String;)Len$b;	b	getSimpleOperation
		p	0		operator
	m	(II)I	c	lambda$getSimpleOperation$4
		p	0		a
		p	1		b
	m	(II)I	d	lambda$getSimpleOperation$3
		p	0		a
		p	1		b
	m	(II)I	e	lambda$getSimpleOperation$2
		p	0		a
		p	1		b
	m	(II)I	f	lambda$getSimpleOperation$1
		p	0		a
		p	1		b
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_INVALID_OPERATION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_DIVIDE_BY_ZERO
c	en$a	net/minecraft/commands/arguments/OperationArgument$Operation
	m	(Leil;Leil;)V	apply	apply
		p	1		a
		p	2		b
c	en$b	net/minecraft/commands/arguments/OperationArgument$SimpleOperation
	m	(II)I	apply	apply
		p	1		a
		p	2		b
	m	(Leil;Leil;)V	apply	apply
		p	1		a
		p	2		b
c	eo	net/minecraft/commands/arguments/ParticleArgument
	m	(Ldn;)V	<init>	<init>
		p	1		registryAccess
	m	(Laew;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$readParticleType$1
	m	(Lcom/mojang/brigadier/StringReader;)Lit;	a	parse
	m	(Lcom/mojang/brigadier/StringReader;Lhg;)Lit;	a	readParticle
		p	0		reader
		p	1		registryWrapper
	m	(Lcom/mojang/brigadier/StringReader;Liu;)Lit;	a	readParticle
		p	0		reader
		p	1		type
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lit;	a	getParticle
		p	0		context
		p	1		name
	m	(Ldn;)Leo;	a	particle
		p	0		registryAccess
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		id
	m	(Lcom/mojang/brigadier/StringReader;Lhg;)Liu;	b	readParticleType
		p	0		reader
		p	1		registryWrapper
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	ERROR_UNKNOWN_PARTICLE
	f	Ljava/util/Collection;	b	EXAMPLES
	f	Lhg;	c	particles
c	ep	net/minecraft/commands/arguments/RangeArgument
	m	()Lep$b;	a	intRange
	m	()Lep$a;	b	floatRange
c	ep$a	net/minecraft/commands/arguments/RangeArgument$Floats
	m	(Lcom/mojang/brigadier/StringReader;)Lcl$c;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lcl$c;	a	getRange
		p	0		context
		p	1		name
	f	Ljava/util/Collection;	a	EXAMPLES
c	ep$b	net/minecraft/commands/arguments/RangeArgument$Ints
	m	(Lcom/mojang/brigadier/StringReader;)Lcl$d;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lcl$d;	a	getRange
		p	0		context
		p	1		name
	f	Ljava/util/Collection;	a	EXAMPLES
c	eq	net/minecraft/commands/arguments/ResourceArgument
	m	(Ldn;Laev;)V	<init>	<init>
		p	1		registryAccess
		p	2		registryRef
	m	(Laew;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$parse$3
	m	(Lcom/mojang/brigadier/StringReader;)Lhe$c;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lhe$c;	a	getAttribute
		p	0		context
		p	1		name
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Laev;)Lhe$c;	a	getResource
		p	0		context
		p	1		name
		p	2		registryRef
	m	(Ldn;Laev;)Leq;	a	resource
		p	0		registryAccess
		p	1		registryRef
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		id
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$1
		p	0		element
		p	1		type
	m	(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$2
		p	0		element
		p	1		type
		p	2		expectedType
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lhe$c;	b	getConfiguredFeature
		p	0		context
		p	1		name
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lhe$c;	c	getStructure
		p	0		context
		p	1		name
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lhe$c;	d	getEntityType
		p	0		context
		p	1		name
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lhe$c;	e	getSummonableEntityType
		p	0		context
		p	1		name
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lhe$c;	f	getMobEffect
		p	0		context
		p	1		name
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lhe$c;	g	getEnchantment
		p	0		context
		p	1		name
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	a	ERROR_UNKNOWN_RESOURCE
	f	Lcom/mojang/brigadier/exceptions/Dynamic3CommandExceptionType;	b	ERROR_INVALID_RESOURCE_TYPE
	f	Ljava/util/Collection;	c	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	d	ERROR_NOT_SUMMONABLE_ENTITY
	f	Laev;	e	registryKey
	f	Lhg;	f	registryLookup
c	eq$a	net/minecraft/commands/arguments/ResourceArgument$Info
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Lgi$a;	a	unpack
		p	1		argumentType
	m	(Leq$a$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Leq$a$a;Lso;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Leq;)Leq$a$a;	a	unpack
		p	1		argumentType
	m	(Lgi$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Lgi$a;Lso;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Lso;)Leq$a$a;	a	deserializeFromNetwork
	m	(Lso;)Lgi$a;	b	deserializeFromNetwork
		p	1		buf
c	eq$a$a	net/minecraft/commands/arguments/ResourceArgument$Info$Template
	m	(Leq$a;Laev;)V	<init>	<init>
		p	2		registryRef
	m	()Lgi;	a	type
	m	(Ldn;)Leq;	a	instantiate
	m	(Ldn;)Lcom/mojang/brigadier/arguments/ArgumentType;	b	instantiate
		p	1		commandRegistryAccess
	f	Leq$a;	a	this$0
	f	Laev;	b	registryKey
c	er	net/minecraft/commands/arguments/ResourceKeyArgument
	m	(Laev;)V	<init>	<init>
		p	1		registryRef
	m	(Laev;)Ler;	a	key
		p	0		registryRef
	m	(Lcom/mojang/brigadier/StringReader;)Laev;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Laev;)Lhq;	a	getRegistry
		p	0		context
		p	1		registryRef
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lhe$c;	a	getConfiguredFeature
		p	0		context
		p	1		name
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Laev;Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;)Laev;	a	getRegistryKey
		p	0		context
		p	1		name
		p	2		registryRef
		p	3		invalidException
	m	(Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;Laev;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$resolveKey$4
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$2
		p	0		id
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lhe$c;	b	getStructure
		p	0		context
		p	1		name
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Laev;Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;)Lhe$c;	b	resolveKey
		p	0		context
		p	1		name
		p	2		registryRef
		p	3		invalidException
	m	(Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;Laev;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	b	lambda$getRegistryKey$3
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$1
		p	0		id
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lhe$c;	c	getStructureTemplatePool
		p	0		context
		p	1		name
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	c	lambda$static$0
		p	0		id
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_INVALID_FEATURE
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	c	ERROR_INVALID_STRUCTURE
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	d	ERROR_INVALID_TEMPLATE_POOL
	f	Laev;	e	registryKey
c	er$a	net/minecraft/commands/arguments/ResourceKeyArgument$Info
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Lgi$a;	a	unpack
		p	1		argumentType
	m	(Ler$a$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Ler$a$a;Lso;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Ler;)Ler$a$a;	a	unpack
		p	1		argumentType
	m	(Lgi$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Lgi$a;Lso;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Lso;)Ler$a$a;	a	deserializeFromNetwork
	m	(Lso;)Lgi$a;	b	deserializeFromNetwork
		p	1		buf
c	er$a$a	net/minecraft/commands/arguments/ResourceKeyArgument$Info$Template
	m	(Ler$a;Laev;)V	<init>	<init>
		p	2		registryRef
	m	()Lgi;	a	type
	m	(Ldn;)Ler;	a	instantiate
	m	(Ldn;)Lcom/mojang/brigadier/arguments/ArgumentType;	b	instantiate
		p	1		commandRegistryAccess
	f	Ler$a;	a	this$0
	f	Laev;	b	registryKey
c	es	net/minecraft/commands/arguments/ResourceLocationArgument
	m	()Les;	a	id
	m	(Laew;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$getRecipe$4
	m	(Lcom/mojang/brigadier/StringReader;)Laew;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Laf;	a	getAdvancement
		p	0		context
		p	1		argumentName
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$3
		p	0		id
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lcmk;	b	getRecipe
		p	0		context
		p	1		argumentName
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$2
		p	0		id
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lefp;	c	getPredicate
		p	0		context
		p	1		argumentName
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	c	lambda$static$1
		p	0		id
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Leed;	d	getItemModifier
		p	0		context
		p	1		argumentName
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	d	lambda$static$0
		p	0		id
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Laew;	e	getId
		p	0		context
		p	1		name
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_UNKNOWN_ADVANCEMENT
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	c	ERROR_UNKNOWN_RECIPE
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	d	ERROR_UNKNOWN_PREDICATE
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	e	ERROR_UNKNOWN_ITEM_MODIFIER
c	et	net/minecraft/commands/arguments/ResourceOrTagArgument
	m	(Ldn;Laev;)V	<init>	<init>
		p	1		registryAccess
		p	2		registryRef
	m	(Laev;Lhe$c;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$getResourceOrTag$2
		p	1		entry
	m	(Laev;Lhi$c;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$getResourceOrTag$3
		p	1		entryList
	m	(Laew;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$parse$6
	m	(Lcom/mojang/brigadier/StringReader;)Let$c;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Laev;)Let$c;	a	getResourceOrTag
		p	0		context
		p	1		name
		p	2		registryRef
	m	(Ldn;Laev;)Let;	a	resourceOrTag
		p	0		registryRef
		p	1		registryAccess
	m	(Let$c;Laev;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$getResourceOrTag$4
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		tag
		p	1		type
	m	(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$1
		p	0		tag
		p	1		type
		p	2		expectedType
	m	(Laew;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	b	lambda$parse$5
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	b	ERROR_UNKNOWN_TAG
	f	Lcom/mojang/brigadier/exceptions/Dynamic3CommandExceptionType;	c	ERROR_INVALID_TAG_TYPE
	f	Lhg;	d	registryLookup
	f	Laev;	e	registryKey
c	et$a	net/minecraft/commands/arguments/ResourceOrTagArgument$Info
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Lgi$a;	a	unpack
		p	1		argumentType
	m	(Let$a$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Let$a$a;Lso;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Let;)Let$a$a;	a	unpack
		p	1		argumentType
	m	(Lgi$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Lgi$a;Lso;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Lso;)Let$a$a;	a	deserializeFromNetwork
	m	(Lso;)Lgi$a;	b	deserializeFromNetwork
		p	1		buf
c	et$a$a	net/minecraft/commands/arguments/ResourceOrTagArgument$Info$Template
	m	(Let$a;Laev;)V	<init>	<init>
		p	2		registryRef
	m	()Lgi;	a	type
	m	(Ldn;)Let;	a	instantiate
	m	(Ldn;)Lcom/mojang/brigadier/arguments/ArgumentType;	b	instantiate
		p	1		commandRegistryAccess
	f	Let$a;	a	this$0
	f	Laev;	b	registryKey
c	et$b	net/minecraft/commands/arguments/ResourceOrTagArgument$ResourceResult
	m	()Lcom/mojang/datafixers/util/Either;	a	unwrap
	m	(Laev;)Ljava/util/Optional;	a	cast
		p	1		registryRef
	m	(Lhe;)Z	a	test
	m	()Ljava/lang/String;	b	asPrintable
	m	()Lhe$c;	c	value
	f	Lhe$c;	a	value
c	et$c	net/minecraft/commands/arguments/ResourceOrTagArgument$Result
	m	()Lcom/mojang/datafixers/util/Either;	a	unwrap
	m	(Laev;)Ljava/util/Optional;	a	cast
		p	1		registryRef
	m	()Ljava/lang/String;	b	asPrintable
c	et$d	net/minecraft/commands/arguments/ResourceOrTagArgument$TagResult
	m	()Lcom/mojang/datafixers/util/Either;	a	unwrap
	m	(Laev;)Ljava/util/Optional;	a	cast
		p	1		registryRef
	m	(Lhe;)Z	a	test
	m	()Ljava/lang/String;	b	asPrintable
	m	()Lhi$c;	c	tag
	f	Lhi$c;	a	tag
c	eu	net/minecraft/commands/arguments/ResourceOrTagKeyArgument
	m	(Laev;)V	<init>	<init>
		p	1		registryRef
	m	(Laev;)Leu;	a	resourceOrTagKey
		p	0		registryRef
	m	(Lcom/mojang/brigadier/StringReader;)Leu$c;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Laev;Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;)Leu$c;	a	getResourceOrTagKey
		p	0		context
		p	1		name
		p	2		registryRef
		p	3		invalidException
	m	(Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;Leu$c;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$getResourceOrTagKey$0
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Laev;	b	registryKey
c	eu$a	net/minecraft/commands/arguments/ResourceOrTagKeyArgument$Info
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Lgi$a;	a	unpack
		p	1		argumentType
	m	(Leu$a$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Leu$a$a;Lso;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Leu;)Leu$a$a;	a	unpack
		p	1		argumentType
	m	(Lgi$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Lgi$a;Lso;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Lso;)Leu$a$a;	a	deserializeFromNetwork
	m	(Lso;)Lgi$a;	b	deserializeFromNetwork
		p	1		buf
c	eu$a$a	net/minecraft/commands/arguments/ResourceOrTagKeyArgument$Info$Template
	m	(Leu$a;Laev;)V	<init>	<init>
		p	2		registryRef
	m	()Lgi;	a	type
	m	(Ldn;)Leu;	a	instantiate
	m	(Ldn;)Lcom/mojang/brigadier/arguments/ArgumentType;	b	instantiate
		p	1		commandRegistryAccess
	f	Leu$a;	a	this$0
	f	Laev;	b	registryKey
c	eu$b	net/minecraft/commands/arguments/ResourceOrTagKeyArgument$ResourceResult
	m	()Lcom/mojang/datafixers/util/Either;	a	unwrap
	m	(Laev;)Ljava/util/Optional;	a	cast
		p	1		registryRef
	m	(Lhe;)Z	a	test
	m	()Ljava/lang/String;	b	asPrintable
	m	()Laev;	c	key
	f	Laev;	a	key
c	eu$c	net/minecraft/commands/arguments/ResourceOrTagKeyArgument$Result
	m	()Lcom/mojang/datafixers/util/Either;	a	unwrap
	m	(Laev;)Ljava/util/Optional;	a	cast
		p	1		registryRef
	m	()Ljava/lang/String;	b	asPrintable
c	eu$d	net/minecraft/commands/arguments/ResourceOrTagKeyArgument$TagResult
	m	()Lcom/mojang/datafixers/util/Either;	a	unwrap
	m	(Laev;)Ljava/util/Optional;	a	cast
		p	1		registryRef
	m	(Lhe;)Z	a	test
	m	()Ljava/lang/String;	b	asPrintable
	m	()Laqh;	c	key
	f	Laqh;	a	key
c	ev	net/minecraft/commands/arguments/ScoreHolderArgument
	m	(Z)V	<init>	<init>
		p	1		multiple
	m	()Lev;	a	scoreHolder
	m	(Lcom/mojang/brigadier/StringReader;)Lev$b;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$static$1
		p	0		context
		p	1		builder
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/lang/String;	a	getName
		p	0		context
		p	1		name
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Ljava/util/function/Supplier;)Ljava/util/Collection;	a	getNames
		p	0		context
		p	1		name
		p	2		players
	m	(Ldt;Ljava/util/function/Supplier;)Ljava/util/Collection;	a	lambda$parse$2
		p	0		source
		p	1		players
	m	(Ljava/util/Collection;Ldt;Ljava/util/function/Supplier;)Ljava/util/Collection;	a	lambda$parse$3
		p	1		source
		p	2		players
	m	()Lev;	b	scoreHolders
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)V	b	lambda$static$0
		p	1		builderx
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection;	b	getNames
		p	0		context
		p	1		name
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection;	c	getNamesWithDefaultWildcard
		p	0		context
		p	1		name
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	a	SUGGEST_SCORE_HOLDERS
	f	Ljava/util/Collection;	b	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_NO_RESULTS
	f	Z	d	multiple
c	ev$a	net/minecraft/commands/arguments/ScoreHolderArgument$Info
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Lgi$a;	a	unpack
		p	1		argumentType
	m	(Lev$a$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Lev$a$a;Lso;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Lev;)Lev$a$a;	a	unpack
		p	1		argumentType
	m	(Lgi$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Lgi$a;Lso;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Lso;)Lev$a$a;	a	deserializeFromNetwork
	m	(Lso;)Lgi$a;	b	deserializeFromNetwork
		p	1		buf
	f	B	a	FLAG_MULTIPLE
c	ev$a$a	net/minecraft/commands/arguments/ScoreHolderArgument$Info$Template
	m	(Lev$a;Z)V	<init>	<init>
		p	2		multiple
	m	()Lgi;	a	type
	m	(Ldn;)Lev;	a	instantiate
	m	(Ldn;)Lcom/mojang/brigadier/arguments/ArgumentType;	b	instantiate
		p	1		commandRegistryAccess
	f	Lev$a;	a	this$0
	f	Z	b	multiple
c	ev$b	net/minecraft/commands/arguments/ScoreHolderArgument$Result
	m	(Ldt;Ljava/util/function/Supplier;)Ljava/util/Collection;	getNames	getNames
		p	1		source
		p	2		players
c	ev$c	net/minecraft/commands/arguments/ScoreHolderArgument$SelectorResult
	m	(Lgc;)V	<init>	<init>
		p	1		selector
	m	(Ldt;Ljava/util/function/Supplier;)Ljava/util/Collection;	getNames	getNames
		p	1		source
		p	2		players
	f	Lgc;	a	selector
c	ew	net/minecraft/commands/arguments/ScoreboardSlotArgument
	m	()Lew;	a	displaySlot
	m	(Lcom/mojang/brigadier/StringReader;)Leii;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Leii;	a	getDisplaySlot
		p	0		context
		p	1		name
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		name
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	ERROR_INVALID_VALUE
	f	Ljava/util/Collection;	b	EXAMPLES
c	ex	net/minecraft/commands/arguments/SignedArgument
c	ey	net/minecraft/commands/arguments/SlotArgument
	m	()Ley;	a	slot
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/Integer;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)I	a	getSlot
		p	0		context
		p	1		name
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		name
	m	(Ljava/util/HashMap;)V	a	lambda$static$1
		p	0		map
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_UNKNOWN_SLOT
	f	Ljava/util/Map;	c	SLOTS
c	ez	net/minecraft/commands/arguments/StringRepresentableArgument
	m	(Lcom/mojang/serialization/Codec;Ljava/util/function/Supplier;)V	<init>	<init>
		p	1		codec
		p	2		valuesSupplier
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/Enum;	a	parse
	m	(Ljava/lang/Object;)Ljava/lang/String;	a	lambda$getExamples$3
		p	0		enum_
	m	(Ljava/lang/String;)Ljava/lang/String;	a	convertId
		p	1		name
	m	(Ljava/lang/Object;)Ljava/lang/String;	b	lambda$listSuggestions$2
		p	0		enum_
	m	(Ljava/lang/String;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	b	lambda$parse$1
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	c	lambda$static$0
		p	0		value
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	ERROR_INVALID_VALUE
	f	Lcom/mojang/serialization/Codec;	b	codec
	f	Ljava/util/function/Supplier;	c	values
c	fa	net/minecraft/commands/arguments/TeamArgument
	m	()Lfa;	a	team
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/String;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Leik;	a	getTeam
		p	0		context
		p	1		name
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		name
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_TEAM_NOT_FOUND
c	fb	net/minecraft/commands/arguments/TemplateMirrorArgument
	m	()Lez;	a	templateMirror
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lcxq;	a	getMirror
		p	0		context
		p	1		id
c	fc	net/minecraft/commands/arguments/TemplateRotationArgument
	m	()Lfc;	a	templateRotation
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lczh;	a	getRotation
		p	0		context
		p	1		id
c	fd	net/minecraft/commands/arguments/TimeArgument
	m	(I)V	<init>	<init>
		p	1		minimum
	m	()Lfd;	a	time
	m	(I)Lfd;	a	time
		p	0		minimum
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/Integer;	a	parse
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		value
		p	1		minimum
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_INVALID_UNIT
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	c	ERROR_TICK_COUNT_TOO_LOW
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	d	UNITS
	f	I	e	minimum
c	fd$a	net/minecraft/commands/arguments/TimeArgument$Info
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Lgi$a;	a	unpack
		p	1		argumentType
	m	(Lfd$a$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Lfd$a$a;Lso;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Lfd;)Lfd$a$a;	a	unpack
		p	1		argumentType
	m	(Lgi$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Lgi$a;Lso;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Lso;)Lfd$a$a;	a	deserializeFromNetwork
	m	(Lso;)Lgi$a;	b	deserializeFromNetwork
		p	1		buf
c	fd$a$a	net/minecraft/commands/arguments/TimeArgument$Info$Template
	m	(Lfd$a;I)V	<init>	<init>
		p	2		minimum
	m	()Lgi;	a	type
	m	(Ldn;)Lfd;	a	instantiate
	m	(Ldn;)Lcom/mojang/brigadier/arguments/ArgumentType;	b	instantiate
		p	1		commandRegistryAccess
	f	Lfd$a;	a	this$0
	f	I	b	min
c	fe	net/minecraft/commands/arguments/UuidArgument
	m	()Lfe;	a	uuid
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/util/UUID;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/UUID;	a	getUuid
		p	0		context
		p	1		name
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_INVALID_UUID
	f	Ljava/util/Collection;	b	EXAMPLES
	f	Ljava/util/regex/Pattern;	c	ALLOWED_CHARACTERS
c	ff	net/minecraft/commands/arguments/blocks/BlockInput
	m	(Ldfj;Ljava/util/Set;Lqw;)V	<init>	<init>
		p	1		state
		p	2		properties
		p	3		data
	m	()Ldfj;	a	getState
	m	(Lakq;Lgw;)Z	a	test
		p	1		world
		p	2		pos
	m	(Lakq;Lgw;I)Z	a	place
		p	1		world
		p	2		pos
		p	3		flags
	m	(Ldfn;)Z	a	test
	m	()Ljava/util/Set;	b	getDefinedProperties
	f	Ldfj;	a	state
	f	Ljava/util/Set;	b	properties
	f	Lqw;	c	tag
c	fg	net/minecraft/commands/arguments/blocks/BlockPredicateArgument
	m	(Ldn;)V	<init>	<init>
		p	1		commandRegistryAccess
	m	(Lcom/mojang/brigadier/StringReader;)Lfg$b;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/function/Predicate;	a	getBlockPredicate
		p	0		context
		p	1		name
	m	(Ldn;)Lfg;	a	blockPredicate
		p	0		commandRegistryAccess
	m	(Lfi$a;)Lfg$b;	a	lambda$parse$0
		p	0		result
	m	(Lfi$b;)Lfg$b;	a	lambda$parse$1
		p	0		result
	m	(Lhg;Lcom/mojang/brigadier/StringReader;)Lfg$b;	a	parse
		p	0		registryWrapper
		p	1		reader
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lhg;	b	blocks
c	fg$a	net/minecraft/commands/arguments/blocks/BlockPredicateArgument$BlockPredicate
	m	(Ldfj;Ljava/util/Set;Lqw;)V	<init>	<init>
		p	1		state
		p	2		properties
		p	3		nbt
	m	()Z	a	requiresNbt
	m	(Ldfn;)Z	a	test
	f	Ldfj;	a	state
	f	Ljava/util/Set;	b	properties
	f	Lqw;	c	nbt
c	fg$b	net/minecraft/commands/arguments/blocks/BlockPredicateArgument$Result
	m	()Z	a	requiresNbt
c	fg$c	net/minecraft/commands/arguments/blocks/BlockPredicateArgument$TagPredicate
	m	(Lhi;Ljava/util/Map;Lqw;)V	<init>	<init>
		p	1		tag
		p	2		properties
		p	3		nbt
	m	()Z	a	requiresNbt
	m	(Ldfn;)Z	a	test
	f	Lhi;	a	tag
	f	Lqw;	b	nbt
	f	Ljava/util/Map;	c	vagueProperties
c	fh	net/minecraft/commands/arguments/blocks/BlockStateArgument
	m	(Ldn;)V	<init>	<init>
		p	1		commandRegistryAccess
	m	(Lcom/mojang/brigadier/StringReader;)Lff;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lff;	a	getBlock
		p	0		context
		p	1		name
	m	(Ldn;)Lfh;	a	block
		p	0		commandRegistryAccess
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lhg;	b	blocks
c	fi	net/minecraft/commands/arguments/blocks/BlockStateParser
	m	(Lhg;Lcom/mojang/brigadier/StringReader;ZZ)V	<init>	<init>
		p	1		registryWrapper
		p	2		reader
		p	3		allowTag
		p	4		allowSnbt
	m	()V	a	parse
	m	(I)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$readBlock$6
	m	(ILaew;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$readTag$7
	m	(Laev;)Ljava/lang/String;	a	lambda$serialize$10
		p	0		key
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	suggestPropertyNameOrEnd
		p	1		builder
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ldgm;)Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;	a	addSuggestions
		p	0		builder
		p	1		property
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;	a	suggestVaguePropertyValue
		p	1		builder
		p	2		name
	m	(Ldfj;)Ljava/lang/String;	a	serialize
		p	0		state
	m	(Ldgm;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$readProperties$8
		p	1		builder
	m	(Ldgm;Ljava/lang/String;I)V	a	setValue
		p	1		property
		p	2		value
		p	3		cursor
	m	(Lhg;Lcom/mojang/brigadier/StringReader;Z)Lfi$a;	a	parseForBlock
		p	0		registryWrapper
		p	1		reader
		p	2		allowSnbt
	m	(Lhg;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;ZZ)Ljava/util/concurrent/CompletableFuture;	a	fillSuggestions
		p	0		registryWrapper
		p	1		builder
		p	2		allowTag
		p	3		allowSnbt
	m	(Lhg;Ljava/lang/String;Z)Lfi$a;	a	parseForBlock
		p	0		registryWrapper
		p	1		string
		p	2		allowSnbt
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$5
		p	0		tag
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$4
		p	0		block
		p	1		property
	m	(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$3
		p	0		block
		p	1		property
		p	2		value
	m	(Ljava/lang/String;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$readVagueProperties$9
		p	2		builder
	m	(Ljava/lang/StringBuilder;Ldgm;Ljava/lang/Comparable;)V	a	appendProperty
		p	0		builder
		p	1		property
		p	2		value
	m	()Z	b	hasBlockEntity
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	b	suggestVaguePropertyNameOrEnd
		p	1		builder
	m	(Lhg;Lcom/mojang/brigadier/StringReader;Z)Lcom/mojang/datafixers/util/Either;	b	parseForTesting
		p	0		registryWrapper
		p	1		reader
		p	2		allowSnbt
	m	(Lhg;Ljava/lang/String;Z)Lcom/mojang/datafixers/util/Either;	b	parseForTesting
		p	0		registryWrapper
		p	1		string
		p	2		allowSnbt
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$0
		p	0		block
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$2
		p	0		block
		p	1		property
	m	()V	c	readBlock
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	c	suggestPropertyName
		p	1		builder
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	c	lambda$static$1
		p	0		block
		p	1		property
	m	()V	d	readTag
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	d	suggestVaguePropertyName
		p	1		builder
	m	()V	e	readProperties
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	e	suggestOpenNbt
		p	1		builder
	m	()V	f	readVagueProperties
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	f	suggestEquals
		p	1		builder
	m	()V	g	readNbt
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	g	suggestNextPropertyOrEnd
		p	1		builder
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	h	suggestOpenVaguePropertiesOrNbt
		p	1		builder
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	i	suggestOpenPropertiesOrNbt
		p	1		builder
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	j	suggestTag
		p	1		builder
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	k	suggestItem
		p	1		builder
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	l	suggestBlockIdOrTag
		p	1		builder
	f	Ljava/util/function/Function;	A	suggestions
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_NO_TAGS_ALLOWED
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_UNKNOWN_BLOCK
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	c	ERROR_UNKNOWN_PROPERTY
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	d	ERROR_DUPLICATE_PROPERTY
	f	Lcom/mojang/brigadier/exceptions/Dynamic3CommandExceptionType;	e	ERROR_INVALID_VALUE
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	f	ERROR_EXPECTED_VALUE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	g	ERROR_EXPECTED_END_OF_PROPERTIES
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	h	ERROR_UNKNOWN_TAG
	f	C	i	SYNTAX_START_PROPERTIES
	f	C	j	SYNTAX_START_NBT
	f	C	k	SYNTAX_END_PROPERTIES
	f	C	l	SYNTAX_EQUALS
	f	C	m	SYNTAX_PROPERTY_SEPARATOR
	f	C	n	SYNTAX_TAG
	f	Ljava/util/function/Function;	o	SUGGEST_NOTHING
	f	Lhg;	p	blocks
	f	Lcom/mojang/brigadier/StringReader;	q	reader
	f	Z	r	forTesting
	f	Z	s	allowNbt
	f	Ljava/util/Map;	t	properties
	f	Ljava/util/Map;	u	vagueProperties
	f	Laew;	v	id
	f	Ldfk;	w	definition
	f	Ldfj;	x	state
	f	Lqw;	y	nbt
	f	Lhi;	z	tag
c	fi$a	net/minecraft/commands/arguments/blocks/BlockStateParser$BlockResult
	m	()Ldfj;	a	blockState
	m	()Ljava/util/Map;	b	properties
	m	()Lqw;	c	nbt
	f	Ldfj;	a	blockState
	f	Ljava/util/Map;	b	properties
	f	Lqw;	c	nbt
c	fi$b	net/minecraft/commands/arguments/blocks/BlockStateParser$TagResult
	m	()Lhi;	a	tag
	m	()Ljava/util/Map;	b	vagueProperties
	m	()Lqw;	c	nbt
	f	Lhi;	a	tag
	f	Ljava/util/Map;	b	vagueProperties
	f	Lqw;	c	nbt
c	fj	net/minecraft/commands/arguments/blocks/package-info
c	fk	net/minecraft/commands/arguments/coordinates/BlockPosArgument
	m	()Lfk;	a	blockPos
	m	(Lcom/mojang/brigadier/StringReader;)Lfm;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Lakq;Ljava/lang/String;)Lgw;	a	getLoadedBlockPos
		p	0		context
		p	1		world
		p	2		name
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lgw;	a	getLoadedBlockPos
		p	0		context
		p	1		name
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lgw;	b	getBlockPos
		p	0		context
		p	1		name
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lgw;	c	getSpawnablePos
		p	0		context
		p	1		name
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_NOT_LOADED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_OUT_OF_WORLD
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_OUT_OF_BOUNDS
	f	Ljava/util/Collection;	d	EXAMPLES
c	fl	net/minecraft/commands/arguments/coordinates/ColumnPosArgument
	m	()Lfl;	a	columnPos
	m	(Lcom/mojang/brigadier/StringReader;)Lfm;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lakg;	a	getColumnPos
		p	0		context
		p	1		name
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_NOT_COMPLETE
	f	Ljava/util/Collection;	b	EXAMPLES
c	fm	net/minecraft/commands/arguments/coordinates/Coordinates
	m	()Z	a	isXRelative
	m	(Ldt;)Lehn;	a	getPosition
		p	1		source
	m	()Z	b	isYRelative
	m	(Ldt;)Lehm;	b	getRotation
		p	1		source
	m	()Z	c	isZRelative
	m	(Ldt;)Lgw;	c	getBlockPos
		p	1		source
c	fn	net/minecraft/commands/arguments/coordinates/LocalCoordinates
	m	(DDD)V	<init>	<init>
		p	1		x
		p	3		y
		p	5		z
	m	()Z	a	isXRelative
	m	(Lcom/mojang/brigadier/StringReader;)Lfn;	a	parse
		p	0		reader
	m	(Lcom/mojang/brigadier/StringReader;I)D	a	readDouble
		p	0		reader
		p	1		startingCursorPos
	m	(Ldt;)Lehn;	a	getPosition
		p	1		source
	m	()Z	b	isYRelative
	m	(Ldt;)Lehm;	b	getRotation
		p	1		source
	m	()Z	c	isZRelative
	f	C	a	PREFIX_LOCAL_COORDINATE
	f	D	b	left
	f	D	c	up
	f	D	d	forwards
c	fo	net/minecraft/commands/arguments/coordinates/RotationArgument
	m	()Lfo;	a	rotation
	m	(Lcom/mojang/brigadier/StringReader;)Lfm;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lfm;	a	getRotation
		p	0		context
		p	1		name
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_NOT_COMPLETE
	f	Ljava/util/Collection;	b	EXAMPLES
c	fp	net/minecraft/commands/arguments/coordinates/SwizzleArgument
	m	()Lfp;	a	swizzle
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/util/EnumSet;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/EnumSet;	a	getSwizzle
		p	0		context
		p	1		name
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_INVALID
c	fq	net/minecraft/commands/arguments/coordinates/Vec2Argument
	m	(Z)V	<init>	<init>
		p	1		centerIntegers
	m	()Lfq;	a	vec2
	m	(Lcom/mojang/brigadier/StringReader;)Lfm;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lehm;	a	getVec2
		p	0		context
		p	1		name
	m	(Z)Lfq;	a	vec2
		p	0		centerIntegers
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_NOT_COMPLETE
	f	Ljava/util/Collection;	b	EXAMPLES
	f	Z	c	centerCorrect
c	fr	net/minecraft/commands/arguments/coordinates/Vec3Argument
	m	(Z)V	<init>	<init>
		p	1		centerIntegers
	m	()Lfr;	a	vec3
	m	(Lcom/mojang/brigadier/StringReader;)Lfm;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lehn;	a	getVec3
		p	0		context
		p	1		name
	m	(Z)Lfr;	a	vec3
		p	0		centerIntegers
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lfm;	b	getCoordinates
		p	0		context
		p	1		name
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_NOT_COMPLETE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_MIXED_TYPE
	f	Ljava/util/Collection;	c	EXAMPLES
	f	Z	d	centerCorrect
c	fs	net/minecraft/commands/arguments/coordinates/WorldCoordinate
	m	(ZD)V	<init>	<init>
		p	1		relative
		p	2		value
	m	()Z	a	isRelative
	m	(D)D	a	get
		p	1		offset
	m	(Lcom/mojang/brigadier/StringReader;)Lfs;	a	parseInt
		p	0		reader
	m	(Lcom/mojang/brigadier/StringReader;Z)Lfs;	a	parseDouble
		p	0		reader
		p	1		centerIntegers
	m	(Lcom/mojang/brigadier/StringReader;)Z	b	isRelative
		p	0		reader
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_EXPECTED_DOUBLE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_EXPECTED_INT
	f	C	c	PREFIX_RELATIVE
	f	Z	d	relative
	f	D	e	value
c	ft	net/minecraft/commands/arguments/coordinates/WorldCoordinates
	m	(Lfs;Lfs;Lfs;)V	<init>	<init>
		p	1		x
		p	2		y
		p	3		z
	m	()Z	a	isXRelative
	m	(DDD)Lft;	a	absolute
		p	0		x
		p	2		y
		p	4		z
	m	(Lcom/mojang/brigadier/StringReader;)Lft;	a	parseInt
		p	0		reader
	m	(Lcom/mojang/brigadier/StringReader;Z)Lft;	a	parseDouble
		p	0		reader
		p	1		centerIntegers
	m	(Ldt;)Lehn;	a	getPosition
		p	1		source
	m	(Lehm;)Lft;	a	absolute
		p	0		vec
	m	()Z	b	isYRelative
	m	(Ldt;)Lehm;	b	getRotation
		p	1		source
	m	()Z	c	isZRelative
	m	()Lft;	d	current
	f	Lfs;	a	x
	f	Lfs;	b	y
	f	Lfs;	c	z
c	fu	net/minecraft/commands/arguments/coordinates/package-info
c	fv	net/minecraft/commands/arguments/item/FunctionArgument
	m	()Lfv;	a	functions
	m	(Laew;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$getFunction$2
	m	(Lcom/mojang/brigadier/StringReader;)Lfv$a;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Laew;)Ldp;	a	getFunction
		p	0		context
		p	1		id
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection;	a	getFunctions
		p	0		context
		p	1		name
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$1
		p	0		id
	m	(Lcom/mojang/brigadier/context/CommandContext;Laew;)Ljava/util/Collection;	b	getFunctionTag
		p	0		context
		p	1		id
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lcom/mojang/datafixers/util/Pair;	b	getFunctionOrTag
		p	0		context
		p	1		name
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$0
		p	0		id
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_UNKNOWN_TAG
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	c	ERROR_UNKNOWN_FUNCTION
c	fv$1	net/minecraft/commands/arguments/item/FunctionArgument$1
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection;	a	create
		p	1		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)Lcom/mojang/datafixers/util/Pair;	b	unwrap
		p	1		context
	f	Laew;	a	val$id
	f	Lfv;	b	this$0
c	fv$2	net/minecraft/commands/arguments/item/FunctionArgument$2
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection;	a	create
		p	1		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)Lcom/mojang/datafixers/util/Pair;	b	unwrap
		p	1		context
	f	Laew;	a	val$id
	f	Lfv;	b	this$0
c	fv$a	net/minecraft/commands/arguments/item/FunctionArgument$Result
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection;	a	create
		p	1		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)Lcom/mojang/datafixers/util/Pair;	b	unwrap
		p	1		context
c	fw	net/minecraft/commands/arguments/item/ItemArgument
	m	(Ldn;)V	<init>	<init>
		p	1		commandRegistryAccess
	m	(Lcom/mojang/brigadier/StringReader;)Lfx;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lfx;	a	getItem
		p	0		context
		p	1		name
	m	(Ldn;)Lfw;	a	item
		p	0		commandRegistryAccess
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lhg;	b	items
c	fx	net/minecraft/commands/arguments/item/ItemInput
	m	(Lhe;Lqw;)V	<init>	<init>
		p	1		item
		p	2		nbt
	m	()Lcja;	a	getItem
	m	(IZ)Lcjf;	a	createItemStack
		p	1		amount
		p	2		checkOverstack
	m	(Lcjf;)Z	a	test
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		item
		p	1		maxCount
	m	()Ljava/lang/String;	b	serialize
	m	()Ljava/lang/String;	c	getItemName
	m	()Ljava/lang/Object;	d	lambda$getItemName$1
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	a	ERROR_STACK_TOO_BIG
	f	Lhe;	b	item
	f	Lqw;	c	tag
c	fy	net/minecraft/commands/arguments/item/ItemParser
	m	(Lhg;Lcom/mojang/brigadier/StringReader;Z)V	<init>	<init>
		p	1		registryWrapper
		p	2		reader
		p	3		allowTag
	m	()V	a	readItem
	m	(ILaew;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$readTag$6
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	suggestOpenNbt
		p	1		builder
	m	(Lfy;Lhe;)Lfy$a;	a	lambda$parseForTesting$3
		p	1		item
	m	(Lfy;Lhi;)Lfy$b;	a	lambda$parseForTesting$4
		p	1		tag
	m	(Lhg;Lcom/mojang/brigadier/StringReader;)Lfy$a;	a	parseForItem
		p	0		registryWrapper
		p	1		reader
	m	(Lhg;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Z)Ljava/util/concurrent/CompletableFuture;	a	fillSuggestions
		p	0		registryWrapper
		p	1		builder
		p	2		allowTag
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$1
		p	0		tag
	m	()V	b	readTag
	m	(ILaew;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	b	lambda$readItem$5
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	b	suggestTag
		p	1		builder
	m	(Lhg;Lcom/mojang/brigadier/StringReader;)Lcom/mojang/datafixers/util/Either;	b	parseForTesting
		p	0		registryWrapper
		p	1		reader
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$0
		p	0		id
	m	()V	c	readNbt
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	c	suggestItem
		p	1		builder
	m	()V	d	parse
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	d	suggestItemIdOrTag
		p	1		builder
	m	()Ljava/lang/IllegalStateException;	e	lambda$parseForItem$2
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_NO_TAGS_ALLOWED
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_UNKNOWN_ITEM
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	c	ERROR_UNKNOWN_TAG
	f	C	d	SYNTAX_START_NBT
	f	C	e	SYNTAX_TAG
	f	Ljava/util/function/Function;	f	SUGGEST_NOTHING
	f	Lhg;	g	items
	f	Lcom/mojang/brigadier/StringReader;	h	reader
	f	Z	i	allowTags
	f	Lcom/mojang/datafixers/util/Either;	j	result
	f	Lqw;	k	nbt
	f	Ljava/util/function/Function;	l	suggestions
c	fy$a	net/minecraft/commands/arguments/item/ItemParser$ItemResult
	m	()Lhe;	a	item
	m	()Lqw;	b	nbt
	f	Lhe;	a	item
	f	Lqw;	b	nbt
c	fy$b	net/minecraft/commands/arguments/item/ItemParser$TagResult
	m	()Lhi;	a	tag
	m	()Lqw;	b	nbt
	f	Lhi;	a	tag
	f	Lqw;	b	nbt
c	fz	net/minecraft/commands/arguments/item/ItemPredicateArgument
	m	(Ldn;)V	<init>	<init>
		p	1		commandRegistryAccess
	m	(Lcom/mojang/brigadier/StringReader;)Lfz$a;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/function/Predicate;	a	getItemPredicate
		p	0		context
		p	1		name
	m	(Ldn;)Lfz;	a	itemPredicate
		p	0		commandRegistryAccess
	m	(Lfy$a;)Lfz$a;	a	lambda$parse$1
		p	0		item
	m	(Lfy$a;Lhe;)Z	a	lambda$parse$0
		p	1		item2
	m	(Lfy$b;)Lfz$a;	a	lambda$parse$2
		p	0		tag
	m	(Ljava/util/function/Predicate;Lcjf;)Z	a	lambda$createResult$4
		p	1		stack
	m	(Ljava/util/function/Predicate;Lqw;)Lfz$a;	a	createResult
		p	0		predicate
		p	1		nbt
	m	(Ljava/util/function/Predicate;Lqw;Lcjf;)Z	a	lambda$createResult$3
		p	2		stack
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lhg;	b	items
c	fz$a	net/minecraft/commands/arguments/item/ItemPredicateArgument$Result
c	ga	net/minecraft/commands/arguments/item/package-info
c	gb	net/minecraft/commands/arguments/package-info
c	gc	net/minecraft/commands/arguments/selector/EntitySelector
	m	(IZZLjava/util/function/Predicate;Lcl$c;Ljava/util/function/Function;Lehi;Ljava/util/function/BiConsumer;ZLjava/lang/String;Ljava/util/UUID;Lbiu;Z)V	<init>	<init>
		p	1		count
		p	2		includesNonPlayers
		p	3		localWorldOnly
		p	4		basePredicate
		p	5		distance
		p	6		positionOffset
		p	7		box
		p	8		sorter
		p	9		senderOnly
		p	10		playerName
		p	11		uuid
		p	12		type
		p	13		usesAt
	m	()I	a	getMaxResults
	m	(Ldt;)Lbiq;	a	findSingleEntity
		p	1		source
	m	(Ldt;Lbiq;)Z	a	lambda$findEntities$1
		p	1		entity
	m	(Lehi;Lbiq;)Z	a	lambda$getPredicate$2
		p	1		entity
	m	(Lehn;)Ljava/util/function/Predicate;	a	getPredicate
		p	1		pos
	m	(Lehn;Lbiq;)Z	a	lambda$getPredicate$3
		p	2		entity
	m	(Lehn;Ljava/util/List;)Ljava/util/List;	a	sortAndLimit
		p	1		pos
		p	2		entities
	m	(Ljava/util/List;)Ltl;	a	joinNames
		p	0		entities
	m	(Ljava/util/List;Lakq;Lehn;Ljava/util/function/Predicate;)V	a	addEntities
		p	1		entities
		p	2		world
		p	3		pos
		p	4		predicate
	m	()Z	b	includesEntities
	m	(Ldt;)Ljava/util/List;	b	findEntities
		p	1		source
	m	(Lehn;Ljava/util/List;)V	b	lambda$static$0
		p	0		pos
		p	1		entities
	m	()Z	c	isSelfSelector
	m	(Ldt;)Lakr;	c	findSinglePlayer
		p	1		source
	m	()Z	d	isWorldLimited
	m	(Ldt;)Ljava/util/List;	d	findPlayers
		p	1		source
	m	()Z	e	usesSelector
	m	(Ldt;)V	e	checkPermissions
		p	1		source
	m	()I	f	getResultLimit
	m	(Ldt;)Ljava/util/List;	f	findEntitiesRaw
		p	1		source
	f	I	a	INFINITE
	f	Ljava/util/function/BiConsumer;	b	ORDER_ARBITRARY
	f	Ldjh;	c	ANY_TYPE
	f	I	d	maxResults
	f	Z	e	includesEntities
	f	Z	f	worldLimited
	f	Ljava/util/function/Predicate;	g	predicate
	f	Lcl$c;	h	range
	f	Ljava/util/function/Function;	i	position
	f	Lehi;	j	aabb
	f	Ljava/util/function/BiConsumer;	k	order
	f	Z	l	currentEntity
	f	Ljava/lang/String;	m	playerName
	f	Ljava/util/UUID;	n	entityUUID
	f	Ldjh;	o	type
	f	Z	p	usesSelector
c	gc$1	net/minecraft/commands/arguments/selector/EntitySelector$1
	m	()Ljava/lang/Class;	a	getBaseClass
	m	(Lbiq;)Lbiq;	a	tryCast
		p	1		obj
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	tryCast
		p	1		obj
c	gd	net/minecraft/commands/arguments/selector/EntitySelectorParser
	m	(Lcom/mojang/brigadier/StringReader;)V	<init>	<init>
		p	1		reader
	m	(Lcom/mojang/brigadier/StringReader;Z)V	<init>	<init>
		p	1		reader
		p	2		atAllowed
	m	()Z	A	hasGamemodeNotEquals
	m	()Z	B	hasTeamEquals
	m	()Z	C	hasTeamNotEquals
	m	()V	D	setTypeLimitedInversely
	m	()Z	E	isTypeLimited
	m	()Z	F	isTypeLimitedInversely
	m	()Z	G	hasScores
	m	()Z	H	hasAdvancements
	m	()V	I	finalizePredicates
	m	()Lgc;	a	getSelector
	m	(D)V	a	setX
		p	1		x
	m	(DDD)Lehi;	a	createAabb
		p	1		x
		p	3		y
		p	5		z
	m	(I)V	a	setMaxResults
		p	1		limit
	m	(Lbiq;)Z	a	lambda$finalizePredicates$11
		p	1		entity
	m	(Lbiu;)V	a	limitToType
		p	1		entityType
	m	(Lcl$c;)V	a	setDistance
		p	1		distance
	m	(Lcl$d;)V	a	setLevel
		p	1		levelRange
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)V	a	fillSelectorSuggestions
		p	0		builder
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	a	fillSuggestions
		p	1		builder
		p	2		consumer
	m	(Ldj;)V	a	setRotX
		p	1		pitchRange
	m	(Ldj;Ljava/util/function/ToDoubleFunction;)Ljava/util/function/Predicate;	a	createRotationPredicate
		p	1		angleRange
		p	2		entityToAngle
	m	(Lehn;)Lehn;	a	lambda$getSelector$10
		p	1		pos
	m	(Lehn;Lbiq;Lbiq;)I	a	lambda$static$4
		p	1		entity1
		p	2		entity2
	m	(Lehn;Ljava/util/List;)V	a	lambda$static$6
		p	0		pos
		p	1		entities
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$1
		p	0		option
	m	(Ljava/util/function/BiConsumer;)V	a	setOrder
		p	1		sorter
	m	(Ljava/util/function/BiFunction;)V	a	setSuggestions
		p	1		suggestionProvider
	m	(Ljava/util/function/Predicate;)V	a	addPredicate
		p	1		predicate
	m	(Ljava/util/function/ToDoubleFunction;DDLbiq;)Z	a	lambda$createRotationPredicate$12
		p	5		entity
	m	(Z)V	a	setIncludesEntities
		p	1		includesNonPlayers
	m	()V	b	parseSelector
	m	(D)V	b	setY
		p	1		y
	m	(Lbiq;)Z	b	lambda$new$8
		p	0		entity
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	b	suggestNameOrSelector
		p	1		builder
		p	2		consumer
	m	(Ldj;)V	b	setRotY
		p	1		yawRange
	m	(Lehn;)Lehn;	b	lambda$getSelector$9
		p	0		pos
	m	(Lehn;Lbiq;Lbiq;)I	b	lambda$static$2
		p	1		entity1
		p	2		entity2
	m	(Lehn;Ljava/util/List;)V	b	lambda$static$5
		p	0		pos
		p	1		entities
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$0
		p	0		selectorType
	m	(Z)V	b	setHasNameEquals
		p	1		selectsName
	m	()V	c	parseNameOrUUID
	m	(D)V	c	setZ
		p	1		z
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	c	suggestName
		p	1		builder
		p	2		consumer
	m	(Lehn;Ljava/util/List;)V	c	lambda$static$3
		p	0		pos
		p	1		entities
	m	(Z)V	c	setHasNameNotEquals
		p	1		excludesName
	m	()V	d	parseOptions
	m	(D)V	d	setDeltaX
		p	1		dx
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	d	suggestSelector
		p	1		builder
		p	2		consumer
	m	(Z)V	d	setLimited
		p	1		hasLimit
	m	()Z	e	shouldInvertValue
	m	(D)V	e	setDeltaY
		p	1		dy
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	e	suggestOpenOptions
		p	1		builder
		p	2		consumer
	m	(Z)V	e	setSorted
		p	1		hasSorter
	m	()Z	f	isTag
	m	(D)V	f	setDeltaZ
		p	1		dz
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	f	suggestOptionsKeyOrClose
		p	1		builder
		p	2		consumer
	m	(Z)V	f	setHasGamemodeEquals
		p	1		selectsGameMode
	m	()Lcom/mojang/brigadier/StringReader;	g	getReader
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	g	suggestOptionsKey
		p	1		builder
		p	2		consumer
	m	(Z)V	g	setHasGamemodeNotEquals
		p	1		excludesGameMode
	m	()V	h	setWorldLimited
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	h	suggestOptionsNextOrClose
		p	1		builder
		p	2		consumer
	m	(Z)V	h	setHasTeamEquals
		p	1		selectsTeam
	m	()Lcl$c;	i	getDistance
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	i	suggestEquals
		p	1		builder
		p	2		consumer
	m	(Z)V	i	setHasTeamNotEquals
		p	1		excludesTeam
	m	()Lcl$d;	j	getLevel
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	j	lambda$static$7
		p	0		builder
		p	1		consumer
	m	(Z)V	j	setHasScores
		p	1		selectsScores
	m	()Ldj;	k	getRotX
	m	(Z)V	k	setHasAdvancements
		p	1		selectsAdvancements
	m	()Ldj;	l	getRotY
	m	()Ljava/lang/Double;	m	getX
	m	()Ljava/lang/Double;	n	getY
	m	()Ljava/lang/Double;	o	getZ
	m	()Ljava/lang/Double;	p	getDeltaX
	m	()Ljava/lang/Double;	q	getDeltaY
	m	()Ljava/lang/Double;	r	getDeltaZ
	m	()Ljava/util/function/BiConsumer;	s	getOrder
	m	()Lgc;	t	parse
	m	()Z	u	isCurrentEntity
	m	()Z	v	hasNameEquals
	m	()Z	w	hasNameNotEquals
	m	()Z	x	isLimited
	m	()Z	y	isSorted
	m	()Z	z	hasGamemodeEquals
	f	Z	A	worldLimited
	f	Lcl$c;	B	distance
	f	Lcl$d;	C	level
	f	Ljava/lang/Double;	D	x
	f	Ljava/lang/Double;	E	y
	f	Ljava/lang/Double;	F	z
	f	Ljava/lang/Double;	G	deltaX
	f	Ljava/lang/Double;	H	deltaY
	f	Ljava/lang/Double;	I	deltaZ
	f	Ldj;	J	rotX
	f	Ldj;	K	rotY
	f	Ljava/util/function/Predicate;	L	predicate
	f	Ljava/util/function/BiConsumer;	M	order
	f	Z	N	currentEntity
	f	Ljava/lang/String;	O	playerName
	f	I	P	startPosition
	f	Ljava/util/UUID;	Q	entityUUID
	f	Ljava/util/function/BiFunction;	R	suggestions
	f	Z	S	hasNameEquals
	f	Z	T	hasNameNotEquals
	f	Z	U	isLimited
	f	Z	V	isSorted
	f	Z	W	hasGamemodeEquals
	f	Z	X	hasGamemodeNotEquals
	f	Z	Y	hasTeamEquals
	f	Z	Z	hasTeamNotEquals
	f	C	a	SYNTAX_SELECTOR_START
	f	Lbiu;	aa	type
	f	Z	ab	typeInverse
	f	Z	ac	hasScores
	f	Z	ad	hasAdvancements
	f	Z	ae	usesSelectors
	f	C	b	SYNTAX_OPTIONS_KEY_VALUE_SEPARATOR
	f	C	c	SYNTAX_NOT
	f	C	d	SYNTAX_TAG
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	e	ERROR_INVALID_NAME_OR_UUID
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	f	ERROR_UNKNOWN_SELECTOR_TYPE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	g	ERROR_SELECTORS_NOT_ALLOWED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	h	ERROR_MISSING_SELECTOR_TYPE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	i	ERROR_EXPECTED_END_OF_OPTIONS
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	j	ERROR_EXPECTED_OPTION_VALUE
	f	Ljava/util/function/BiConsumer;	k	ORDER_NEAREST
	f	Ljava/util/function/BiConsumer;	l	ORDER_FURTHEST
	f	Ljava/util/function/BiConsumer;	m	ORDER_RANDOM
	f	Ljava/util/function/BiFunction;	n	SUGGEST_NOTHING
	f	C	o	SYNTAX_OPTIONS_START
	f	C	p	SYNTAX_OPTIONS_END
	f	C	q	SYNTAX_OPTIONS_SEPARATOR
	f	C	r	SELECTOR_NEAREST_PLAYER
	f	C	s	SELECTOR_ALL_PLAYERS
	f	C	t	SELECTOR_RANDOM_PLAYERS
	f	C	u	SELECTOR_CURRENT_ENTITY
	f	C	v	SELECTOR_ALL_ENTITIES
	f	Lcom/mojang/brigadier/StringReader;	w	reader
	f	Z	x	allowSelectors
	f	I	y	maxResults
	f	Z	z	includesEntities
c	ge	net/minecraft/commands/arguments/selector/options/EntitySelectorOptions
	m	(Lgd;)Z	A	lambda$bootStrap$21
		p	0		reader
	m	(Lgd;)V	B	lambda$bootStrap$20
		p	0		reader
	m	(Lgd;)Z	C	lambda$bootStrap$19
		p	0		reader
	m	(Lgd;)V	D	lambda$bootStrap$18
		p	0		reader
	m	(Lgd;)Z	E	lambda$bootStrap$17
		p	0		reader
	m	(Lgd;)V	F	lambda$bootStrap$16
		p	0		reader
	m	(Lgd;)Z	G	lambda$bootStrap$15
		p	0		reader
	m	(Lgd;)V	H	lambda$bootStrap$14
		p	0		reader
	m	(Lgd;)Z	I	lambda$bootStrap$13
		p	0		reader
	m	(Lgd;)V	J	lambda$bootStrap$12
		p	0		reader
	m	(Lgd;)Z	K	lambda$bootStrap$11
		p	0		reader
	m	(Lgd;)V	L	lambda$bootStrap$10
		p	0		reader
	m	(Lgd;)Z	M	lambda$bootStrap$9
		p	0		reader
	m	(Lgd;)V	N	lambda$bootStrap$8
		p	0		reader
	m	(Lgd;)Z	O	lambda$bootStrap$7
		p	0		reader
	m	(Lgd;)V	P	lambda$bootStrap$6
		p	0		reader
	m	()V	a	bootStrap
	m	(Laew;ZLbiq;)Z	a	lambda$bootStrap$61
		p	2		entity
	m	(Laqh;ZLbiq;)Z	a	lambda$bootStrap$41
		p	2		entity
	m	(Lbiu;ZLbiq;)Z	a	lambda$bootStrap$43
		p	2		entity
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	a	lambda$bootStrap$30
		p	0		builder
		p	1		consumer
	m	(Lgd;)Z	a	lambda$bootStrap$63
		p	0		reader
	m	(Lgd;ILaew;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$bootStrap$42
	m	(Lgd;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)V	a	suggestNames
		p	0		reader
		p	1		suggestionBuilder
	m	(Lgd;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	a	lambda$bootStrap$40
		p	1		builder
		p	2		consumer
	m	(Lgd;Ljava/lang/String;I)Lge$a;	a	get
		p	0		reader
		p	1		option
		p	2		restoreCursor
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$4
		p	0		entity
	m	(Ljava/lang/String;Lge$a;Ljava/util/function/Predicate;Ltl;)V	a	register
		p	0		id
		p	1		handler
		p	2		condition
		p	3		description
	m	(Ljava/lang/String;ZLbiq;)Z	a	lambda$bootStrap$46
		p	2		entity
	m	(Ljava/util/Map;Lah;)Z	a	lambda$bootStrap$56
		p	1		advancementProgress
	m	(Ljava/util/Map;Lbiq;)Z	a	lambda$bootStrap$58
		p	1		entity
	m	(Lqw;ZLbiq;)Z	a	lambda$bootStrap$49
		p	2		entity
	m	(ZLah;)Z	a	lambda$bootStrap$57
		p	1		advancementProgress
	m	(ZLan;)Z	a	lambda$bootStrap$55
		p	1		criterionProgress
	m	(ZLcps;Lbiq;)Z	a	lambda$bootStrap$34
		p	2		entity
	m	(Lgd;)V	b	lambda$bootStrap$62
		p	0		reader
	m	(Lgd;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	b	lambda$bootStrap$33
		p	1		builder
		p	2		consumer
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$3
		p	0		gameMode
	m	(Ljava/lang/String;ZLbiq;)Z	b	lambda$bootStrap$37
		p	2		entity
	m	(Ljava/util/Map;Lbiq;)Z	b	lambda$bootStrap$52
		p	1		entity
	m	(Lgd;)Z	c	lambda$bootStrap$60
		p	0		reader
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	c	lambda$static$2
		p	0		sortType
	m	(Ljava/lang/String;ZLbiq;)Z	c	lambda$bootStrap$5
		p	2		readerx
	m	(Lgd;)V	d	lambda$bootStrap$59
		p	0		reader
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	d	lambda$static$1
		p	0		option
	m	(Lgd;)Z	e	lambda$bootStrap$54
		p	0		reader
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	e	lambda$static$0
		p	0		option
	m	(Lgd;)V	f	lambda$bootStrap$53
		p	0		reader
	m	(Lgd;)Z	g	lambda$bootStrap$51
		p	0		reader
	m	(Lgd;)V	h	lambda$bootStrap$50
		p	0		reader
	m	(Lgd;)Z	i	lambda$bootStrap$48
		p	0		reader
	m	(Lgd;)V	j	lambda$bootStrap$47
		p	0		reader
	m	(Lgd;)Z	k	lambda$bootStrap$45
		p	0		reader
	m	(Lgd;)V	l	lambda$bootStrap$44
		p	0		reader
	m	(Lgd;)Z	m	lambda$bootStrap$39
		p	0		reader
	m	(Lgd;)V	n	lambda$bootStrap$38
		p	0		reader
	m	(Lgd;)Z	o	lambda$bootStrap$36
		p	0		reader
	m	(Lgd;)V	p	lambda$bootStrap$35
		p	0		reader
	m	(Lgd;)Z	q	lambda$bootStrap$32
		p	0		reader
	m	(Lgd;)V	r	lambda$bootStrap$31
		p	0		reader
	m	(Lgd;)Z	s	lambda$bootStrap$29
		p	0		reader
	m	(Lgd;)V	t	lambda$bootStrap$28
		p	0		reader
	m	(Lgd;)Z	u	lambda$bootStrap$27
		p	0		reader
	m	(Lgd;)V	v	lambda$bootStrap$26
		p	0		reader
	m	(Lgd;)Z	w	lambda$bootStrap$25
		p	0		reader
	m	(Lgd;)V	x	lambda$bootStrap$24
		p	0		reader
	m	(Lgd;)Z	y	lambda$bootStrap$23
		p	0		reader
	m	(Lgd;)V	z	lambda$bootStrap$22
		p	0		reader
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	ERROR_UNKNOWN_OPTION
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_INAPPLICABLE_OPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_RANGE_NEGATIVE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	d	ERROR_LEVEL_NEGATIVE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	e	ERROR_LIMIT_TOO_SMALL
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	f	ERROR_SORT_UNKNOWN
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	g	ERROR_GAME_MODE_INVALID
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	h	ERROR_ENTITY_TYPE_INVALID
	f	Ljava/util/Map;	i	OPTIONS
c	ge$a	net/minecraft/commands/arguments/selector/options/EntitySelectorOptions$Modifier
	m	(Lgd;)V	handle	handle
		p	1		reader
c	ge$b	net/minecraft/commands/arguments/selector/options/EntitySelectorOptions$Option
	m	(Lge$a;Ljava/util/function/Predicate;Ltl;)V	<init>	<init>
		p	1		handler
		p	2		condition
		p	3		description
	m	()Lge$a;	a	modifier
	m	()Ljava/util/function/Predicate;	b	canUse
	m	()Ltl;	c	description
	f	Lge$a;	a	modifier
	f	Ljava/util/function/Predicate;	b	canUse
	f	Ltl;	c	description
c	gf	net/minecraft/commands/arguments/selector/options/package-info
c	gg	net/minecraft/commands/arguments/selector/package-info
c	gh	net/minecraft/commands/package-info
c	gi	net/minecraft/commands/synchronization/ArgumentTypeInfo
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Lgi$a;	a	unpack
		p	1		argumentType
	m	(Lgi$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Lgi$a;Lso;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Lso;)Lgi$a;	b	deserializeFromNetwork
		p	1		buf
c	gi$a	net/minecraft/commands/synchronization/ArgumentTypeInfo$Template
	m	()Lgi;	a	type
	m	(Ldn;)Lcom/mojang/brigadier/arguments/ArgumentType;	b	instantiate
		p	1		commandRegistryAccess
c	gj	net/minecraft/commands/synchronization/ArgumentTypeInfos
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Lgi;	a	byClass
		p	0		argumentType
	m	(Lhq;)Lgi;	a	bootstrap
		p	0		registry
	m	(Lhq;Ljava/lang/String;Ljava/lang/Class;Lgi;)Lgi;	a	register
		p	0		registry
		p	1		id
		p	2		clazz
		p	3		serializer
	m	(Ljava/lang/Class;)Z	a	isClassRecognized
		p	0		clazz
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Lgi$a;	b	unpack
		p	0		argumentType
	m	(Ljava/lang/Class;)Ljava/lang/Class;	b	fixClassType
		p	0		clazz
	f	Ljava/util/Map;	a	BY_CLASS
c	gk	net/minecraft/commands/synchronization/ArgumentUtils
	m	(B)Z	a	numberHasMin
		p	0		flags
	m	(Lcom/google/gson/JsonObject;Lcom/mojang/brigadier/arguments/ArgumentType;)V	a	serializeArgumentToJson
		p	0		json
		p	1		argumentType
	m	(Lcom/google/gson/JsonObject;Lgi$a;)V	a	serializeCap
		p	0		json
		p	1		properties
	m	(Lcom/google/gson/JsonObject;Lgi;Lgi$a;)V	a	serializeCap
		p	0		json
		p	1		serializer
		p	2		properties
	m	(Lcom/mojang/brigadier/CommandDispatcher;Lcom/mojang/brigadier/tree/CommandNode;)Lcom/google/gson/JsonObject;	a	serializeNodeToJson
		p	0		dispatcher
		p	1		rootNode
	m	(Lcom/mojang/brigadier/tree/CommandNode;)Ljava/util/Set;	a	findUsedArgumentTypes
		p	0		rootNode
	m	(Lcom/mojang/brigadier/tree/CommandNode;Ljava/util/Set;Ljava/util/Set;)V	a	findUsedArgumentTypes
		p	0		node
		p	1		usedArgumentTypes
		p	2		visitedNodes
	m	(Ljava/util/Set;Ljava/util/Set;Lcom/mojang/brigadier/tree/CommandNode;)V	a	lambda$findUsedArgumentTypes$0
		p	2		child
	m	(ZZ)I	a	createNumberFlags
		p	0		hasMin
		p	1		hasMax
	m	(B)Z	b	numberHasMax
		p	0		flags
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	B	b	NUMBER_FLAG_MIN
	f	B	c	NUMBER_FLAG_MAX
c	gl	net/minecraft/commands/synchronization/SingletonArgumentInfo
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1		typeSupplier
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Lgi$a;	a	unpack
		p	1		argumentType
	m	(Lgi$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Lgi$a;Lso;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Lgl$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Lgl$a;Lso;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Ljava/util/function/Function;)Lgl;	a	contextAware
		p	0		typeSupplier
	m	(Ljava/util/function/Supplier;)Lgl;	a	contextFree
		p	0		typeSupplier
	m	(Ljava/util/function/Supplier;Ldn;)Lcom/mojang/brigadier/arguments/ArgumentType;	a	lambda$contextFree$0
		p	1		commandRegistryAccess
	m	(Lso;)Lgl$a;	a	deserializeFromNetwork
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Lgl$a;	b	unpack
	m	(Lso;)Lgi$a;	b	deserializeFromNetwork
		p	1		buf
	f	Lgl$a;	a	template
c	gl$a	net/minecraft/commands/synchronization/SingletonArgumentInfo$Template
	m	(Lgl;Ljava/util/function/Function;)V	<init>	<init>
		p	2		typeSupplier
	m	()Lgi;	a	type
	m	(Ldn;)Lcom/mojang/brigadier/arguments/ArgumentType;	b	instantiate
		p	1		commandRegistryAccess
	f	Lgl;	a	this$0
	f	Ljava/util/function/Function;	b	constructor
c	gm	net/minecraft/commands/synchronization/SuggestionProviders
	m	(Laew;)Lcom/mojang/brigadier/suggestion/SuggestionProvider;	a	getProvider
		p	0		id
	m	(Laew;Lcom/mojang/brigadier/suggestion/SuggestionProvider;)Lcom/mojang/brigadier/suggestion/SuggestionProvider;	a	register
		p	0		id
		p	1		provider
	m	(Lbiu;)Lcom/mojang/brigadier/Message;	a	lambda$static$4
		p	0		entityType
	m	(Lcom/mojang/brigadier/context/CommandContext;Lbiu;)Z	a	lambda$static$3
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$static$5
		p	0		context
		p	1		builder
	m	(Lcom/mojang/brigadier/suggestion/SuggestionProvider;)Laew;	a	getName
		p	0		provider
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	b	lambda$static$2
		p	0		context
		p	1		builder
	m	(Lcom/mojang/brigadier/suggestion/SuggestionProvider;)Lcom/mojang/brigadier/suggestion/SuggestionProvider;	b	safelySwap
		p	0		provider
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	c	lambda$static$1
		p	0		context
		p	1		builder
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	d	lambda$static$0
		p	0		context
		p	1		builder
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	a	ASK_SERVER
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	b	ALL_RECIPES
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	c	AVAILABLE_SOUNDS
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	d	SUMMONABLE_ENTITIES
	f	Ljava/util/Map;	e	PROVIDERS_BY_NAME
	f	Laew;	f	DEFAULT_NAME
c	gm$a	net/minecraft/commands/synchronization/SuggestionProviders$Wrapper
	m	(Laew;Lcom/mojang/brigadier/suggestion/SuggestionProvider;)V	<init>	<init>
		p	1		id
		p	2		provider
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	a	delegate
	f	Laew;	b	name
c	gn	net/minecraft/commands/synchronization/brigadier/DoubleArgumentInfo
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Lgi$a;	a	unpack
		p	1		argumentType
	m	(Lcom/mojang/brigadier/arguments/DoubleArgumentType;)Lgn$a;	a	unpack
		p	1		argumentType
	m	(Lgi$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Lgi$a;Lso;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Lgn$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Lgn$a;Lso;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Lso;)Lgn$a;	a	deserializeFromNetwork
	m	(Lso;)Lgi$a;	b	deserializeFromNetwork
		p	1		buf
c	gn$a	net/minecraft/commands/synchronization/brigadier/DoubleArgumentInfo$Template
	m	(Lgn;DD)V	<init>	<init>
		p	2		min
		p	4		max
	m	()Lgi;	a	type
	m	(Ldn;)Lcom/mojang/brigadier/arguments/DoubleArgumentType;	a	instantiate
	m	(Ldn;)Lcom/mojang/brigadier/arguments/ArgumentType;	b	instantiate
		p	1		commandRegistryAccess
	f	Lgn;	a	this$0
	f	D	b	min
	f	D	c	max
c	go	net/minecraft/commands/synchronization/brigadier/FloatArgumentInfo
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Lgi$a;	a	unpack
		p	1		argumentType
	m	(Lcom/mojang/brigadier/arguments/FloatArgumentType;)Lgo$a;	a	unpack
		p	1		argumentType
	m	(Lgi$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Lgi$a;Lso;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Lgo$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Lgo$a;Lso;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Lso;)Lgo$a;	a	deserializeFromNetwork
	m	(Lso;)Lgi$a;	b	deserializeFromNetwork
		p	1		buf
c	go$a	net/minecraft/commands/synchronization/brigadier/FloatArgumentInfo$Template
	m	(Lgo;FF)V	<init>	<init>
		p	2		min
		p	3		max
	m	()Lgi;	a	type
	m	(Ldn;)Lcom/mojang/brigadier/arguments/FloatArgumentType;	a	instantiate
	m	(Ldn;)Lcom/mojang/brigadier/arguments/ArgumentType;	b	instantiate
		p	1		commandRegistryAccess
	f	Lgo;	a	this$0
	f	F	b	min
	f	F	c	max
c	gp	net/minecraft/commands/synchronization/brigadier/IntegerArgumentInfo
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Lgi$a;	a	unpack
		p	1		argumentType
	m	(Lcom/mojang/brigadier/arguments/IntegerArgumentType;)Lgp$a;	a	unpack
		p	1		argumentType
	m	(Lgi$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Lgi$a;Lso;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Lgp$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Lgp$a;Lso;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Lso;)Lgp$a;	a	deserializeFromNetwork
	m	(Lso;)Lgi$a;	b	deserializeFromNetwork
		p	1		buf
c	gp$a	net/minecraft/commands/synchronization/brigadier/IntegerArgumentInfo$Template
	m	(Lgp;II)V	<init>	<init>
		p	2		min
		p	3		max
	m	()Lgi;	a	type
	m	(Ldn;)Lcom/mojang/brigadier/arguments/IntegerArgumentType;	a	instantiate
	m	(Ldn;)Lcom/mojang/brigadier/arguments/ArgumentType;	b	instantiate
		p	1		commandRegistryAccess
	f	Lgp;	a	this$0
	f	I	b	min
	f	I	c	max
c	gq	net/minecraft/commands/synchronization/brigadier/LongArgumentInfo
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Lgi$a;	a	unpack
		p	1		argumentType
	m	(Lcom/mojang/brigadier/arguments/LongArgumentType;)Lgq$a;	a	unpack
		p	1		argumentType
	m	(Lgi$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Lgi$a;Lso;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Lgq$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Lgq$a;Lso;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Lso;)Lgq$a;	a	deserializeFromNetwork
	m	(Lso;)Lgi$a;	b	deserializeFromNetwork
		p	1		buf
c	gq$a	net/minecraft/commands/synchronization/brigadier/LongArgumentInfo$Template
	m	(Lgq;JJ)V	<init>	<init>
		p	2		min
		p	4		max
	m	()Lgi;	a	type
	m	(Ldn;)Lcom/mojang/brigadier/arguments/LongArgumentType;	a	instantiate
	m	(Ldn;)Lcom/mojang/brigadier/arguments/ArgumentType;	b	instantiate
		p	1		commandRegistryAccess
	f	Lgq;	a	this$0
	f	J	b	min
	f	J	c	max
c	gr	net/minecraft/commands/synchronization/brigadier/StringArgumentSerializer
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Lgi$a;	a	unpack
		p	1		argumentType
	m	(Lcom/mojang/brigadier/arguments/StringArgumentType;)Lgr$a;	a	unpack
		p	1		argumentType
	m	(Lgi$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Lgi$a;Lso;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Lgr$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Lgr$a;Lso;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Lso;)Lgr$a;	a	deserializeFromNetwork
	m	(Lso;)Lgi$a;	b	deserializeFromNetwork
		p	1		buf
c	gr$1	net/minecraft/commands/synchronization/brigadier/StringArgumentSerializer$1
	f	[I	a	$SwitchMap$com$mojang$brigadier$arguments$StringArgumentType$StringType
c	gr$a	net/minecraft/commands/synchronization/brigadier/StringArgumentSerializer$Template
	m	(Lgr;Lcom/mojang/brigadier/arguments/StringArgumentType$StringType;)V	<init>	<init>
		p	2		type
	m	()Lgi;	a	type
	m	(Ldn;)Lcom/mojang/brigadier/arguments/StringArgumentType;	a	instantiate
	m	(Ldn;)Lcom/mojang/brigadier/arguments/ArgumentType;	b	instantiate
		p	1		commandRegistryAccess
	f	Lgr;	a	this$0
	f	Lcom/mojang/brigadier/arguments/StringArgumentType$StringType;	b	type
c	gs	net/minecraft/commands/synchronization/brigadier/package-info
c	gt	net/minecraft/commands/synchronization/package-info
c	gu	net/minecraft/core/AxisCycle
	m	()Lgu;	a	inverse
	m	(DDDLha$a;)D	a	cycle
		p	1		x
		p	3		y
		p	5		z
		p	7		axis
	m	(IIILha$a;)I	a	cycle
		p	1		x
		p	2		y
		p	3		z
		p	4		axis
	m	(Lha$a;)Lha$a;	a	cycle
		p	1		axis
	m	(Lha$a;Lha$a;)Lgu;	a	between
		p	0		from
		p	1		to
	m	()[Lgu;	b	$values
	f	Lgu;	a	NONE
	f	Lgu;	b	FORWARD
	f	Lgu;	c	BACKWARD
	f	[Lha$a;	d	AXIS_VALUES
	f	[Lgu;	e	VALUES
	f	[Lgu;	f	$VALUES
c	gu$1	net/minecraft/core/AxisCycle$1
	m	()Lgu;	a	inverse
	m	(DDDLha$a;)D	a	cycle
		p	1		x
		p	3		y
		p	5		z
		p	7		axis
	m	(IIILha$a;)I	a	cycle
		p	1		x
		p	2		y
		p	3		z
		p	4		axis
	m	(Lha$a;)Lha$a;	a	cycle
		p	1		axis
c	gu$2	net/minecraft/core/AxisCycle$2
	m	()Lgu;	a	inverse
	m	(DDDLha$a;)D	a	cycle
		p	1		x
		p	3		y
		p	5		z
		p	7		axis
	m	(IIILha$a;)I	a	cycle
		p	1		x
		p	2		y
		p	3		z
		p	4		axis
	m	(Lha$a;)Lha$a;	a	cycle
		p	1		axis
c	gu$3	net/minecraft/core/AxisCycle$3
	m	()Lgu;	a	inverse
	m	(DDDLha$a;)D	a	cycle
		p	1		x
		p	3		y
		p	5		z
		p	7		axis
	m	(IIILha$a;)I	a	cycle
		p	1		x
		p	2		y
		p	3		z
		p	4		axis
	m	(Lha$a;)Lha$a;	a	cycle
		p	1		axis
c	gv	net/minecraft/core/BlockMath
	m	(Lj;)Lj;	a	blockCenterToCorner
		p	0		transformation
	m	(Lj;Lha;Ljava/util/function/Supplier;)Lj;	a	getUVLockTransform
		p	0		transformation
		p	1		dir
		p	2		warning
	m	(Ljava/util/EnumMap;)V	a	lambda$static$1
		p	0		map
	m	(Lj;)Lj;	b	blockCornerToCenter
		p	0		transformation
	m	(Ljava/util/EnumMap;)V	b	lambda$static$0
		p	0		map
	f	Ljava/util/Map;	a	VANILLA_UV_TRANSFORM_LOCAL_TO_GLOBAL
	f	Ljava/util/Map;	b	VANILLA_UV_TRANSFORM_GLOBAL_TO_LOCAL
	f	Lorg/slf4j/Logger;	c	LOGGER
c	gw	net/minecraft/core/BlockPos
	m	(III)V	<init>	<init>
		p	1		x
		p	2		y
		p	3		z
	m	(Lhy;)V	<init>	<init>
		p	1		pos
	m	()J	a	asLong
	m	(DDD)Lgw;	a	containing
		p	0		x
		p	2		y
		p	4		z
	m	(I)Lgw;	a	multiply
	m	(III)J	a	asLong
		p	0		x
		p	1		y
		p	2		z
	m	(IIIIII)Ljava/util/stream/Stream;	a	betweenClosedStream
		p	0		startX
		p	1		startY
		p	2		startZ
		p	3		endX
		p	4		endY
		p	5		endZ
	m	(IIIIIII)Ljava/util/Iterator;	a	lambda$withinManhattan$4
	m	(IILasc;IIIII)Ljava/util/Iterator;	a	lambda$randomBetweenClosed$3
	m	(J)I	a	getX
		p	0		packedPos
	m	(JIII)J	a	offset
		p	0		value
		p	2		x
		p	3		y
		p	4		z
	m	(JLha;)J	a	offset
		p	0		value
		p	2		direction
	m	(Lasc;IIIIIII)Ljava/lang/Iterable;	a	randomBetweenClosed
		p	0		random
		p	1		count
		p	2		minX
		p	3		minY
		p	4		minZ
		p	5		maxX
		p	6		maxY
		p	7		maxZ
	m	(Lasc;ILgw;I)Ljava/lang/Iterable;	a	randomInCube
		p	0		random
		p	1		count
		p	2		around
		p	3		range
	m	(Lczh;)Lgw;	a	rotate
		p	1		rotation
	m	(Ldva;)Ljava/util/stream/Stream;	a	betweenClosedStream
		p	0		box
	m	(Lehi;)Ljava/util/stream/Stream;	a	betweenClosedStream
		p	0		box
	m	(Lgw;)Ljava/util/stream/Stream;	a	squareOutSouthEast
		p	0		pos
	m	(Lgw;III)Ljava/lang/Iterable;	a	withinManhattan
		p	0		center
		p	1		rangeX
		p	2		rangeY
		p	3		rangeZ
	m	(Lgw;IILjava/util/function/BiConsumer;Ljava/util/function/Predicate;)I	a	breadthFirstTraversal
		p	0		pos
		p	1		maxDepth
		p	2		maxIterations
		p	3		nextQueuer
		p	4		callback
	m	(Lgw;IILjava/util/function/Predicate;)Ljava/util/Optional;	a	findClosestMatch
		p	0		pos
		p	1		horizontalRange
		p	2		verticalRange
		p	3		condition
	m	(Lgw;ILha;Lha;)Ljava/lang/Iterable;	a	spiralAround
		p	0		center
		p	1		radius
		p	2		firstDirection
		p	3		secondDirection
	m	(Lgw;Lgw;)Ljava/lang/Iterable;	a	betweenClosed
		p	0		start
		p	1		end
	m	(Lha$a;I)Lgw;	a	relative
	m	(Lha;)Lgw;	a	relative
	m	(Lha;I)Lgw;	a	relative
	m	(Lha;Lha;Lgw;I)Ljava/util/Iterator;	a	lambda$spiralAround$6
	m	(Lho;)Lgw;	a	containing
		p	0		pos
	m	(Lhy;)Lgw;	a	offset
	m	(Ljava/util/Queue;ILgw;)V	a	lambda$breadthFirstTraversal$7
		p	2		queuedPos
	m	(Ljava/util/stream/IntStream;)Lcom/mojang/serialization/DataResult;	a	lambda$static$1
		p	0		stream
	m	([I)Lgw;	a	lambda$static$0
		p	0		values
	m	()Lehn;	b	getCenter
	m	(I)Lgw;	b	above
		p	1		distance
	m	(III)Lgw;	b	offset
	m	(IIIIII)Ljava/lang/Iterable;	b	betweenClosed
		p	0		startX
		p	1		startY
		p	2		startZ
		p	3		endX
		p	4		endY
		p	5		endZ
	m	(J)I	b	getY
		p	0		packedPos
	m	(Lgw;)Ljava/util/stream/IntStream;	b	lambda$static$2
		p	0		pos
	m	(Lgw;III)Ljava/util/stream/Stream;	b	withinManhattanStream
		p	0		center
		p	1		maxX
		p	2		maxY
		p	3		maxZ
	m	(Lgw;Lgw;)Ljava/util/stream/Stream;	b	betweenClosedStream
		p	0		start
		p	1		end
	m	(Lha$a;I)Lhy;	b	relative
		p	1		axis
		p	2		distance
	m	(Lha;)Lhy;	b	relative
		p	1		direction
	m	(Lha;I)Lhy;	b	relative
		p	1		direction
		p	2		distance
	m	(Lhy;)Lgw;	b	subtract
	m	()Lgw;	c	above
	m	(I)Lgw;	c	below
	m	(III)Lhy;	c	offset
		p	1		x
		p	2		y
		p	3		z
	m	(IIIIII)Ljava/util/Iterator;	c	lambda$betweenClosed$5
	m	(J)I	c	getZ
		p	0		packedPos
	m	(Lhy;)Lgw;	c	cross
		p	1		pos
	m	()Lgw;	d	below
	m	(I)Lgw;	d	north
		p	1		distance
	m	(J)Lgw;	d	of
		p	0		packedPos
	m	(Lhy;)Lhy;	d	cross
		p	1		vec
	m	()Lgw;	e	north
	m	(I)Lgw;	e	south
		p	1		distance
	m	(J)J	e	getFlatIndex
		p	0		y
	m	(Lhy;)Lhy;	e	subtract
		p	1		vec
	m	()Lgw;	f	south
	m	(I)Lgw;	f	west
		p	1		distance
	m	(Lhy;)Lhy;	f	offset
		p	1		vec
	m	()Lgw;	g	west
	m	(I)Lgw;	g	east
		p	1		distance
	m	()Lgw;	h	east
	m	(I)Lgw;	h	atY
		p	1		y
	m	()Lgw;	i	immutable
	m	(I)Lhy;	i	east
		p	1		distance
	m	()Lgw$a;	j	mutable
	m	(I)Lhy;	j	west
		p	1		distance
	m	()Lhy;	k	east
	m	(I)Lhy;	k	south
		p	1		distance
	m	()Lhy;	l	west
	m	(I)Lhy;	l	north
		p	1		distance
	m	()Lhy;	m	south
	m	(I)Lhy;	m	below
		p	1		distance
	m	()Lhy;	n	north
	m	(I)Lhy;	n	above
		p	1		distance
	m	()Lhy;	o	below
	m	(I)Lhy;	o	multiply
		p	1		scale
	m	()Lhy;	p	above
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lgw;	b	ZERO
	f	I	c	PACKED_Y_LENGTH
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	I	e	PACKED_X_LENGTH
	f	I	h	PACKED_Z_LENGTH
	f	J	i	PACKED_X_MASK
	f	J	j	PACKED_Y_MASK
	f	J	k	PACKED_Z_MASK
	f	I	l	Y_OFFSET
	f	I	m	Z_OFFSET
	f	I	n	X_OFFSET
c	gw$1	net/minecraft/core/BlockPos$1
	m	()Lgw;	a	computeNext
	f	Lgw$a;	a	nextPos
	f	I	b	counter
	f	I	c	val$limit
	f	I	d	val$minX
	f	Lasc;	e	val$random
	f	I	f	val$width
	f	I	g	val$minY
	f	I	h	val$height
	f	I	i	val$minZ
	f	I	j	val$depth
c	gw$2	net/minecraft/core/BlockPos$2
	m	()Lgw;	a	computeNext
	f	I	a	val$originZ
	f	I	b	val$maxDepth
	f	I	c	val$reachX
	f	I	d	val$reachY
	f	I	e	val$reachZ
	f	I	f	val$originX
	f	I	g	val$originY
	f	Lgw$a;	h	cursor
	f	I	i	currentDepth
	f	I	j	maxX
	f	I	k	maxY
	f	I	l	x
	f	I	m	y
	f	Z	n	zMirror
c	gw$3	net/minecraft/core/BlockPos$3
	m	()Lgw;	a	computeNext
	f	I	a	val$end
	f	I	b	val$width
	f	I	c	val$height
	f	I	d	val$minX
	f	I	e	val$minY
	f	I	f	val$minZ
	f	Lgw$a;	g	cursor
	f	I	h	index
c	gw$4	net/minecraft/core/BlockPos$4
	m	()Lgw$a;	a	computeNext
	f	Lha;	a	val$firstDirection
	f	Lha;	b	val$secondDirection
	f	Lgw;	c	val$center
	f	I	d	val$radius
	f	[Lha;	e	directions
	f	Lgw$a;	f	cursor
	f	I	g	legs
	f	I	h	leg
	f	I	i	legSize
	f	I	j	legIndex
	f	I	k	lastX
	f	I	l	lastY
	f	I	m	lastZ
c	gw$5	net/minecraft/core/BlockPos$5
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$Rotation
	f	[I	b	$SwitchMap$net$minecraft$core$Direction$Axis
c	gw$a	net/minecraft/core/BlockPos$MutableBlockPos
	m	(DDD)V	<init>	<init>
		p	1		x
		p	3		y
		p	5		z
	m	(III)V	<init>	<init>
		p	1		x
		p	2		y
		p	3		z
	m	(I)Lgw;	a	multiply
	m	(Lczh;)Lgw;	a	rotate
		p	1		rotation
	m	(Lgu;III)Lgw$a;	a	set
		p	1		axis
		p	2		x
		p	3		y
		p	4		z
	m	(Lha$a;I)Lgw;	a	relative
	m	(Lha$a;II)Lgw$a;	a	clamp
		p	1		axis
		p	2		min
		p	3		max
	m	(Lha;I)Lgw;	a	relative
	m	(Lhy;III)Lgw$a;	a	setWithOffset
		p	1		pos
		p	2		x
		p	3		y
		p	4		z
	m	(Lhy;Lha;)Lgw$a;	a	setWithOffset
		p	1		pos
		p	2		direction
	m	(Lhy;Lhy;)Lgw$a;	a	setWithOffset
		p	1		vec1
		p	2		vec2
	m	(DDD)Lgw$a;	b	set
		p	1		x
		p	3		y
		p	5		z
	m	(III)Lgw;	b	offset
	m	(Lha$a;I)Lhy;	b	relative
		p	1		axis
		p	2		distance
	m	(Lha;)Lhy;	b	relative
		p	1		direction
	m	(Lha;I)Lhy;	b	relative
		p	1		direction
		p	2		distance
	m	(III)Lhy;	c	offset
		p	1		x
		p	2		y
		p	3		z
	m	(Lha;)Lgw$a;	c	move
		p	1		direction
	m	(Lha;I)Lgw$a;	c	move
		p	1		direction
		p	2		distance
	m	(III)Lgw$a;	d	set
		p	1		x
		p	2		y
		p	3		z
	m	(Lhy;)Lhy;	d	cross
		p	1		vec
	m	(III)Lgw$a;	e	move
		p	1		dx
		p	2		dy
		p	3		dz
	m	(Lhy;)Lhy;	e	subtract
		p	1		vec
	m	(J)Lgw$a;	f	set
		p	1		pos
	m	(Lhy;)Lhy;	f	offset
		p	1		vec
	m	(Lhy;)Lgw$a;	g	set
		p	1		pos
	m	(Lhy;)Lgw$a;	h	move
		p	1		vec
	m	()Lgw;	i	immutable
	m	(I)Lhy;	i	east
		p	1		distance
	m	(I)Lhy;	j	west
		p	1		distance
	m	()Lhy;	k	east
	m	(I)Lhy;	k	south
		p	1		distance
	m	()Lhy;	l	west
	m	(I)Lhy;	l	north
		p	1		distance
	m	()Lhy;	m	south
	m	(I)Lhy;	m	below
		p	1		distance
	m	()Lhy;	n	north
	m	(I)Lhy;	n	above
		p	1		distance
	m	()Lhy;	o	below
	m	(I)Lhy;	o	multiply
		p	1		scale
	m	()Lhy;	p	above
	m	(I)Lgw$a;	p	setX
	m	(I)Lgw$a;	q	setY
	m	(I)Lgw$a;	r	setZ
	m	(I)Lhy;	s	setZ
		p	1		z
	m	(I)Lhy;	t	setY
		p	1		y
	m	(I)Lhy;	u	setX
		p	1		x
c	gx	net/minecraft/core/Cursor3D
	m	(IIIIII)V	<init>	<init>
		p	1		startX
		p	2		startY
		p	3		startZ
		p	4		endX
		p	5		endY
		p	6		endZ
	m	()Z	a	advance
	m	()I	b	nextX
	m	()I	c	nextY
	m	()I	d	nextZ
	m	()I	e	getNextType
	f	I	a	TYPE_INSIDE
	f	I	b	TYPE_FACE
	f	I	c	TYPE_EDGE
	f	I	d	TYPE_CORNER
	f	I	e	originX
	f	I	f	originY
	f	I	g	originZ
	f	I	h	width
	f	I	i	height
	f	I	j	depth
	f	I	k	end
	f	I	l	index
	f	I	m	x
	f	I	n	y
	f	I	o	z
c	gy	net/minecraft/core/DefaultedMappedRegistry
	m	(Ljava/lang/String;Laev;Lcom/mojang/serialization/Lifecycle;Z)V	<init>	<init>
		p	1		defaultId
		p	2		key
		p	3		lifecycle
		p	4		intrusive
	m	()Laew;	a	getDefaultKey
	m	(I)Ljava/lang/Object;	a	byId
		p	1		index
	m	(ILaev;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Lhe$c;	a	registerMapping
		p	1		rawId
		p	2		key
		p	3		value
		p	4		lifecycle
	m	(Laew;)Ljava/lang/Object;	a	get
		p	1		id
	m	(Lasc;)Ljava/util/Optional;	a	getRandom
		p	1		random
	m	(Ljava/lang/Object;)I	a	getId
		p	1		value
	m	(Laew;)Ljava/util/Optional;	b	getOptional
		p	1		id
	m	(Ljava/lang/Object;)Laew;	b	getKey
		p	1		value
	m	()Ljava/util/Optional;	v	lambda$getRandom$0
	f	Laew;	b	defaultKey
	f	Lhe$c;	c	defaultValue
c	gz	net/minecraft/core/DefaultedRegistry
	m	()Laew;	a	getDefaultKey
	m	(I)Ljava/lang/Object;	a	byId
		p	1		index
	m	(Laew;)Ljava/lang/Object;	a	get
		p	1		id
	m	(Ljava/lang/Object;)Laew;	b	getKey
		p	1		value
c	ha	net/minecraft/core/Direction
	m	(Ljava/lang/String;IIIILjava/lang/String;Lha$b;Lha$a;Lhy;)V	<init>	<init>
		p	3		id
		p	4		idOpposite
		p	5		idHorizontal
		p	6		name
		p	7		direction
		p	8		axis
		p	9		vector
	m	()Ljava/util/stream/Stream;	a	stream
	m	(D)Lha;	a	fromYRot
		p	0		rotation
	m	(DDD)Lha;	a	getNearest
		p	0		x
		p	2		y
		p	4		z
	m	(F)Z	a	isFacingAngle
		p	1		yaw
	m	(FFF)Lha;	a	getNearest
		p	0		x
		p	1		y
		p	2		z
	m	(I)Lha;	a	from3DDataValue
		p	0		id
	m	(III)Lha;	a	fromDelta
		p	0		x
		p	1		y
		p	2		z
	m	(Lasc;)Ljava/util/Collection;	a	allShuffled
		p	0		random
	m	(Lbiq;)[Lha;	a	orderedByNearest
		p	0		entity
	m	(Lbiq;Lha$a;)Lha;	a	getFacingAxis
		p	0		entity
		p	1		axis
	m	(Lha$a;)Lha;	a	getClockWise
		p	1		axis
	m	(Lha$a;Lha$b;)Lha;	a	fromAxisAndDirection
		p	0		axis
		p	1		direction
	m	(Lha$b;Lha$a;)Lha;	a	get
		p	0		direction
		p	1		axis
	m	(Lha;)Lcom/mojang/serialization/DataResult;	a	verifyVertical
		p	0		direction
	m	(Lha;Lha;Lha;)[Lha;	a	makeDirectionArray
		p	0		first
		p	1		second
		p	2		third
	m	(Ljava/lang/String;)Lha;	a	byName
		p	0		name
	m	(Lorg/joml/Matrix4f;Lha;)Lha;	a	rotate
		p	0		matrix
		p	1		direction
	m	()Lorg/joml/Quaternionf;	b	getRotation
	m	(I)Lha;	b	from2DDataValue
		p	0		value
	m	(Lasc;)Lha;	b	getRandom
		p	0		random
	m	(Lha$a;)Lha;	b	getCounterClockWise
		p	1		axis
	m	(Lha;)I	b	lambda$static$3
		p	0		direction
	m	()Ljava/lang/String;	c	getSerializedName
	m	(I)[Lha;	c	lambda$static$4
	m	(Lha;)Z	c	lambda$static$2
		p	0		direction
	m	()I	d	get3DDataValue
	m	(I)[Lha;	d	lambda$static$1
	m	(Lha;)I	d	lambda$static$0
		p	0		direction
	m	()I	e	get2DDataValue
	m	()Lha$b;	f	getAxisDirection
	m	()Lha;	g	getOpposite
	m	()Lha;	h	getClockWise
	m	()Lha;	i	getCounterClockWise
	m	()I	j	getStepX
	m	()I	k	getStepY
	m	()I	l	getStepZ
	m	()Lorg/joml/Vector3f;	m	step
	m	()Ljava/lang/String;	n	getName
	m	()Lha$a;	o	getAxis
	m	()F	p	toYRot
	m	()Lhy;	q	getNormal
	m	()Lha;	r	getClockWiseX
	m	()Lha;	s	getCounterClockWiseX
	m	()Lha;	t	getClockWiseZ
	m	()Lha;	u	getCounterClockWiseZ
	m	()Ljava/lang/String;	v	lambda$verifyVertical$5
	m	()[Lha;	w	$values
	f	Lha;	a	DOWN
	f	Lha;	b	UP
	f	Lha;	c	NORTH
	f	Lha;	d	SOUTH
	f	Lha;	e	WEST
	f	Lha;	f	EAST
	f	Lasp$a;	g	CODEC
	f	Lcom/mojang/serialization/Codec;	h	VERTICAL_CODEC
	f	I	i	data3d
	f	I	j	oppositeIndex
	f	I	k	data2d
	f	Ljava/lang/String;	l	name
	f	Lha$a;	m	axis
	f	Lha$b;	n	axisDirection
	f	Lhy;	o	normal
	f	[Lha;	p	VALUES
	f	[Lha;	q	BY_3D_DATA
	f	[Lha;	r	BY_2D_DATA
	f	[Lha;	s	$VALUES
c	ha$1	net/minecraft/core/Direction$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
	f	[I	b	$SwitchMap$net$minecraft$core$Direction$Axis
c	ha$a	net/minecraft/core/Direction$Axis
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()Ljava/lang/String;	a	getName
	m	(DDD)D	a	choose
		p	1		x
		p	3		y
		p	5		z
	m	(III)I	a	choose
		p	1		x
		p	2		y
		p	3		z
	m	(Lasc;)Lha$a;	a	getRandom
		p	0		random
	m	(Lha;)Z	a	test
	m	(Ljava/lang/String;)Lha$a;	a	byName
		p	0		name
	m	()Z	b	isVertical
	m	()Ljava/lang/String;	c	getSerializedName
	m	()Z	d	isHorizontal
	m	()Lha$c;	e	getPlane
	m	()[Lha$a;	f	$values
	f	Lha$a;	a	X
	f	Lha$a;	b	Y
	f	Lha$a;	c	Z
	f	[Lha$a;	d	VALUES
	f	Lasp$a;	e	CODEC
	f	Ljava/lang/String;	f	name
	f	[Lha$a;	g	$VALUES
c	ha$a$1	net/minecraft/core/Direction$Axis$1
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	(DDD)D	a	choose
		p	1		x
		p	3		y
		p	5		z
	m	(III)I	a	choose
		p	1		x
		p	2		y
		p	3		z
c	ha$a$2	net/minecraft/core/Direction$Axis$2
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	(DDD)D	a	choose
		p	1		x
		p	3		y
		p	5		z
	m	(III)I	a	choose
		p	1		x
		p	2		y
		p	3		z
c	ha$a$3	net/minecraft/core/Direction$Axis$3
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	(DDD)D	a	choose
		p	1		x
		p	3		y
		p	5		z
	m	(III)I	a	choose
		p	1		x
		p	2		y
		p	3		z
c	ha$b	net/minecraft/core/Direction$AxisDirection
	m	(Ljava/lang/String;IILjava/lang/String;)V	<init>	<init>
		p	3		offset
		p	4		description
	m	()I	a	getStep
	m	()Ljava/lang/String;	b	getName
	m	()Lha$b;	c	opposite
	m	()[Lha$b;	d	$values
	f	Lha$b;	a	POSITIVE
	f	Lha$b;	b	NEGATIVE
	f	I	c	step
	f	Ljava/lang/String;	d	name
	f	[Lha$b;	e	$VALUES
c	ha$c	net/minecraft/core/Direction$Plane
	m	(Ljava/lang/String;I[Lha;[Lha$a;)V	<init>	<init>
		p	3		facingArray
		p	4		axisArray
	m	()Ljava/util/stream/Stream;	a	stream
	m	(Lasc;)Lha;	a	getRandomDirection
		p	1		random
	m	(Lha;)Z	a	test
	m	()[Lha$c;	b	$values
	m	(Lasc;)Lha$a;	b	getRandomAxis
		p	1		random
	m	(Lasc;)Ljava/util/List;	c	shuffledCopy
		p	1		random
	f	Lha$c;	a	HORIZONTAL
	f	Lha$c;	b	VERTICAL
	f	[Lha;	c	faces
	f	[Lha$a;	d	axis
	f	[Lha$c;	e	$VALUES
c	hb	net/minecraft/core/Direction8
	m	(Ljava/lang/String;I[Lha;)V	<init>	<init>
		p	3		directions
	m	()Ljava/util/Set;	a	getDirections
	m	()I	b	getStepX
	m	()I	c	getStepZ
	m	()[Lhb;	d	$values
	f	Lhb;	a	NORTH
	f	Lhb;	b	NORTH_EAST
	f	Lhb;	c	EAST
	f	Lhb;	d	SOUTH_EAST
	f	Lhb;	e	SOUTH
	f	Lhb;	f	SOUTH_WEST
	f	Lhb;	g	WEST
	f	Lhb;	h	NORTH_WEST
	f	Ljava/util/Set;	i	directions
	f	Lhy;	j	step
	f	[Lhb;	k	$VALUES
c	hc	net/minecraft/core/FrontAndTop
	m	(Ljava/lang/String;ILjava/lang/String;Lha;Lha;)V	<init>	<init>
		p	3		name
		p	4		facing
		p	5		rotation
	m	()Lha;	a	front
	m	(Lha;Lha;)Lhc;	a	fromFrontAndTop
		p	0		facing
		p	1		rotation
	m	(Lit/unimi/dsi/fastutil/ints/Int2ObjectOpenHashMap;)V	a	lambda$static$0
		p	0		map
	m	()Lha;	b	top
	m	(Lha;Lha;)I	b	lookupKey
		p	0		facing
		p	1		rotation
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Lhc;	d	$values
	f	Lhc;	a	DOWN_EAST
	f	Lhc;	b	DOWN_NORTH
	f	Lhc;	c	DOWN_SOUTH
	f	Lhc;	d	DOWN_WEST
	f	Lhc;	e	UP_EAST
	f	Lhc;	f	UP_NORTH
	f	Lhc;	g	UP_SOUTH
	f	Lhc;	h	UP_WEST
	f	Lhc;	i	WEST_UP
	f	Lhc;	j	EAST_UP
	f	Lhc;	k	NORTH_UP
	f	Lhc;	l	SOUTH_UP
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	m	LOOKUP_TOP_FRONT
	f	Ljava/lang/String;	n	name
	f	Lha;	o	top
	f	Lha;	p	front
	f	[Lhc;	q	$VALUES
c	hd	net/minecraft/core/GlobalPos
	m	(Laev;Lgw;)V	<init>	<init>
		p	1		dimension
		p	2		pos
	m	()Laev;	a	dimension
	m	(Laev;Lgw;)Lhd;	a	of
		p	0		dimension
		p	1		pos
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Lgw;	b	pos
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Laev;	b	dimension
	f	Lgw;	c	pos
c	he	net/minecraft/core/Holder
	m	()Ljava/lang/Object;	a	value
	m	(Laev;)Z	a	is
		p	1		key
	m	(Laew;)Z	a	is
		p	1		id
	m	(Laqh;)Z	a	is
		p	1		tag
	m	(Lhh;)Z	a	canSerializeIn
		p	1		owner
	m	(Ljava/lang/Object;)Lhe;	a	direct
		p	0		value
	m	(Ljava/util/function/Predicate;)Z	a	is
		p	1		predicate
	m	()Z	b	isBound
	m	()Ljava/util/stream/Stream;	c	tags
	m	()Lcom/mojang/datafixers/util/Either;	d	unwrap
	m	()Ljava/util/Optional;	e	unwrapKey
	m	()Lhe$b;	f	kind
c	he$a	net/minecraft/core/Holder$Direct
	m	()Ljava/lang/Object;	a	value
	m	(Laev;)Z	a	is
		p	1		key
	m	(Laew;)Z	a	is
		p	1		id
	m	(Laqh;)Z	a	is
		p	1		tag
	m	(Lhh;)Z	a	canSerializeIn
		p	1		owner
	m	(Ljava/util/function/Predicate;)Z	a	is
		p	1		predicate
	m	()Z	b	isBound
	m	()Ljava/util/stream/Stream;	c	tags
	m	()Lcom/mojang/datafixers/util/Either;	d	unwrap
	m	()Ljava/util/Optional;	e	unwrapKey
	m	()Lhe$b;	f	kind
	f	Ljava/lang/Object;	a	value
c	he$b	net/minecraft/core/Holder$Kind
	m	()[Lhe$b;	a	$values
	f	Lhe$b;	a	REFERENCE
	f	Lhe$b;	b	DIRECT
	f	[Lhe$b;	c	$VALUES
c	he$c	net/minecraft/core/Holder$Reference
	m	(Lhe$c$a;Lhh;Laev;Ljava/lang/Object;)V	<init>	<init>
		p	1		referenceType
		p	2		owner
		p	3		registryKey
		p	4		value
	m	()Ljava/lang/Object;	a	value
	m	(Laev;)Z	a	is
		p	1		key
	m	(Laew;)Z	a	is
		p	1		id
	m	(Laqh;)Z	a	is
		p	1		tag
	m	(Lhh;)Z	a	canSerializeIn
		p	1		owner
	m	(Lhh;Laev;)Lhe$c;	a	createStandAlone
		p	0		owner
		p	1		registryKey
	m	(Lhh;Ljava/lang/Object;)Lhe$c;	a	createIntrusive
		p	0		owner
		p	1		value
	m	(Ljava/util/Collection;)V	a	bindTags
		p	1		tags
	m	(Ljava/util/function/Predicate;)Z	a	is
		p	1		predicate
	m	()Z	b	isBound
	m	(Laev;)V	b	bindKey
		p	1		registryKey
	m	(Ljava/lang/Object;)V	b	bindValue
		p	1		value
	m	()Ljava/util/stream/Stream;	c	tags
	m	()Lcom/mojang/datafixers/util/Either;	d	unwrap
	m	()Ljava/util/Optional;	e	unwrapKey
	m	()Lhe$b;	f	kind
	m	()Laev;	g	key
	f	Lhh;	a	owner
	f	Ljava/util/Set;	b	tags
	f	Lhe$c$a;	c	type
	f	Laev;	d	key
	f	Ljava/lang/Object;	e	value
c	he$c$a	net/minecraft/core/Holder$Reference$Type
	m	()[Lhe$c$a;	a	$values
	f	Lhe$c$a;	a	STAND_ALONE
	f	Lhe$c$a;	b	INTRUSIVE
	f	[Lhe$c$a;	c	$VALUES
c	hf	net/minecraft/core/HolderGetter
	m	(Laev;)Ljava/util/Optional;	a	get
		p	1		key
	m	(Laqh;)Ljava/util/Optional;	a	get
		p	1		tag
	m	(Laev;)Lhe$c;	b	getOrThrow
		p	1		key
	m	(Laqh;)Lhi$c;	b	getOrThrow
		p	1		tag
	m	(Laev;)Ljava/lang/IllegalStateException;	c	lambda$getOrThrow$0
	m	(Laqh;)Ljava/lang/IllegalStateException;	c	lambda$getOrThrow$1
c	hf$a	net/minecraft/core/HolderGetter$Provider
	m	(Laev;)Ljava/util/Optional;	a	lookup
		p	1		registryRef
	m	(Laev;)Lhf;	b	lookupOrThrow
		p	1		registryRef
	m	(Laev;)Ljava/lang/IllegalStateException;	c	lambda$lookupOrThrow$0
c	hg	net/minecraft/core/HolderLookup
	m	(Ljava/util/function/Predicate;)Lhg;	a	filterElements
		p	1		filter
	m	()Ljava/util/stream/Stream;	b	listElements
	m	()Ljava/util/stream/Stream;	c	listElementIds
	m	()Ljava/util/stream/Stream;	d	listTags
	m	()Ljava/util/stream/Stream;	e	listTagIds
c	hg$1	net/minecraft/core/HolderLookup$1
	m	(Lhg;Lhg;Ljava/util/function/Predicate;)V	<init>	<init>
		p	2		baseWrapper
	m	(Laev;)Ljava/util/Optional;	a	get
		p	1		key
	m	(Ljava/util/function/Predicate;Lhe$c;)Z	a	lambda$listElements$1
		p	1		entry
	m	()Ljava/util/stream/Stream;	b	listElements
	m	(Ljava/util/function/Predicate;Lhe$c;)Z	b	lambda$get$0
		p	1		entry
	f	Ljava/util/function/Predicate;	a	val$filter
	f	Lhg;	b	this$0
c	hg$a	net/minecraft/core/HolderLookup$Delegate
	m	(Lhg;)V	<init>	<init>
		p	1		baseWrapper
	m	(Laev;)Ljava/util/Optional;	a	get
		p	1		key
	m	(Laqh;)Ljava/util/Optional;	a	get
		p	1		tag
	m	()Ljava/util/stream/Stream;	b	listElements
	m	()Ljava/util/stream/Stream;	d	listTags
	f	Lhg;	c	parent
c	hg$b	net/minecraft/core/HolderLookup$Provider
	m	()Lhf$a;	a	asGetterLookup
	m	(Laev;)Ljava/util/Optional;	a	lookup
		p	1		registryRef
	m	(Lhg$c;)Lhg$c;	a	lambda$create$1
		p	0		wrapper
	m	(Ljava/util/stream/Stream;)Lhg$b;	a	create
		p	0		wrappers
	m	(Laev;)Lhg$c;	b	lookupOrThrow
		p	1		registryRef
	m	(Laev;)Ljava/lang/IllegalStateException;	e	lambda$lookupOrThrow$0
c	hg$b$1	net/minecraft/core/HolderLookup$Provider$1
	m	(Laev;)Ljava/util/Optional;	a	lookup
		p	1		registryRef
	m	(Lhg$c;)Lhf;	a	lambda$lookup$0
		p	0		lookup
	f	Lhg$b;	a	this$0
c	hg$b$2	net/minecraft/core/HolderLookup$Provider$2
	m	(Laev;)Ljava/util/Optional;	a	lookup
		p	1		registryRef
	f	Ljava/util/Map;	a	val$map
c	hg$c	net/minecraft/core/HolderLookup$RegistryLookup
	m	(Lcec;)Lhg;	a	filterFeatures
		p	1		enabledFeatures
	m	(Lcec;Ljava/lang/Object;)Z	a	lambda$filterFeatures$0
		p	1		feature
	m	()Laev;	f	key
	m	()Lcom/mojang/serialization/Lifecycle;	g	registryLifecycle
c	hg$c$a	net/minecraft/core/HolderLookup$RegistryLookup$Delegate
	m	()Lhg$c;	a	parent
	m	(Laev;)Ljava/util/Optional;	a	get
		p	1		key
	m	(Laqh;)Ljava/util/Optional;	a	get
		p	1		tag
	m	()Ljava/util/stream/Stream;	b	listElements
	m	()Ljava/util/stream/Stream;	d	listTags
	m	()Laev;	f	key
	m	()Lcom/mojang/serialization/Lifecycle;	g	registryLifecycle
c	hh	net/minecraft/core/HolderOwner
	m	(Lhh;)Z	a	canSerializeIn
		p	1		other
c	hi	net/minecraft/core/HolderSet
	m	()Ljava/util/stream/Stream;	a	stream
	m	(I)Lhe;	a	get
		p	1		index
	m	(Lasc;)Ljava/util/Optional;	a	getRandomElement
		p	1		random
	m	(Lhe;)Z	a	contains
		p	1		entry
	m	(Lhh;)Z	a	canSerializeIn
		p	1		owner
	m	(Lhh;Laqh;)Lhi$c;	a	emptyNamed
		p	0		owner
		p	1		tagKey
	m	(Ljava/util/List;)Lhi$a;	a	direct
		p	0		entries
	m	(Ljava/util/function/Function;Ljava/util/Collection;)Lhi$a;	a	direct
		p	0		mapper
		p	1		values
	m	(Ljava/util/function/Function;[Ljava/lang/Object;)Lhi$a;	a	direct
		p	0		mapper
		p	1		values
	m	([Lhe;)Lhi$a;	a	direct
		p	0		entries
	m	()I	b	size
	m	()Lcom/mojang/datafixers/util/Either;	c	unwrap
	m	()Ljava/util/Optional;	d	unwrapKey
c	hi$a	net/minecraft/core/HolderSet$Direct
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		entries
	m	(Lhe;)Z	a	contains
		p	1		entry
	m	()Lcom/mojang/datafixers/util/Either;	c	unwrap
	m	()Ljava/util/Optional;	d	unwrapKey
	m	()Ljava/util/List;	e	contents
	f	Ljava/util/List;	a	contents
	f	Ljava/util/Set;	b	contentsSet
c	hi$b	net/minecraft/core/HolderSet$ListBacked
	m	()Ljava/util/stream/Stream;	a	stream
	m	(I)Lhe;	a	get
		p	1		index
	m	(Lasc;)Ljava/util/Optional;	a	getRandomElement
		p	1		random
	m	(Lhh;)Z	a	canSerializeIn
		p	1		owner
	m	()I	b	size
	m	()Ljava/util/List;	e	contents
c	hi$c	net/minecraft/core/HolderSet$Named
	m	(Lhh;Laqh;)V	<init>	<init>
		p	1		owner
		p	2		tag
	m	(Lhe;)Z	a	contains
		p	1		entry
	m	(Lhh;)Z	a	canSerializeIn
		p	1		owner
	m	(Ljava/util/List;)V	b	bind
		p	1		entries
	m	()Lcom/mojang/datafixers/util/Either;	c	unwrap
	m	()Ljava/util/Optional;	d	unwrapKey
	m	()Ljava/util/List;	e	contents
	m	()Laqh;	f	key
	f	Lhh;	a	owner
	f	Laqh;	b	key
	f	Ljava/util/List;	c	contents
c	hj	net/minecraft/core/IdMap
	m	(I)Ljava/lang/Object;	a	byId
		p	1		index
	m	(Ljava/lang/Object;)I	a	getId
		p	1		value
	m	()I	b	size
	m	(I)Ljava/lang/Object;	b	byIdOrThrow
		p	1		index
	f	I	a	DEFAULT
c	hk	net/minecraft/core/IdMapper
	m	(I)V	<init>	<init>
		p	1		initialSize
	m	(I)Ljava/lang/Object;	a	byId
		p	1		index
	m	(Ljava/lang/Object;)I	a	getId
		p	1		value
	m	(Ljava/lang/Object;I)V	a	addMapping
		p	1		value
		p	2		id
	m	()I	b	size
	m	(Ljava/lang/Object;)V	b	add
		p	1		value
	m	(I)Z	c	contains
		p	1		index
	f	I	b	nextId
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	c	tToId
	f	Ljava/util/List;	d	idToT
c	hl	net/minecraft/core/LayeredRegistryAccess
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		types
	m	(Ljava/util/List;Ljava/util/List;)V	<init>	<init>
		p	1		types
		p	2		registryManagers
	m	()Lhr$b;	a	compositeAccess
	m	(II)Lhr$b;	a	getCompositeAccessForLayers
		p	1		startIndex
		p	2		endIndex
	m	(Ljava/lang/Object;)Lhr$b;	a	getLayer
		p	1		index
	m	(Ljava/lang/Object;Ljava/util/List;)Lhl;	a	replaceFrom
		p	1		type
		p	2		registryManagers
	m	(Ljava/lang/Object;[Lhr$b;)Lhl;	a	replaceFrom
		p	1		type
		p	2		registryManagers
	m	(Ljava/util/List;)Ljava/util/List;	a	lambda$new$0
	m	(Ljava/util/Map;Lhr$d;)V	a	lambda$collectRegistries$1
		p	1		entry
	m	(Ljava/util/Map;Lhr;)V	a	lambda$collectRegistries$2
		p	1		registryManager
	m	(Ljava/util/stream/Stream;)Ljava/util/Map;	a	collectRegistries
		p	0		registryManagers
	m	(Ljava/lang/Object;)Lhr$b;	b	getAccessForLoading
		p	1		type
	m	(Ljava/lang/Object;)Lhr$b;	c	getAccessFrom
		p	1		type
	m	(Ljava/lang/Object;)I	d	getLayerIndexOrThrow
		p	1		type
	f	Ljava/util/List;	a	keys
	f	Ljava/util/List;	b	values
	f	Lhr$b;	c	composite
c	hm	net/minecraft/core/MappedRegistry
	m	(Laev;Lcom/mojang/serialization/Lifecycle;)V	<init>	<init>
		p	1		key
		p	2		lifecycle
	m	(Laev;Lcom/mojang/serialization/Lifecycle;Z)V	<init>	<init>
		p	1		key
		p	2		lifecycle
		p	3		intrusive
	m	()Ljava/util/List;	a	holdersInOrder
	m	(I)Ljava/lang/Object;	a	byId
		p	1		index
	m	(ILaev;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Lhe$c;	a	registerMapping
		p	1		rawId
		p	2		key
		p	3		value
		p	4		lifecycle
	m	(Laev;)Ljava/lang/Object;	a	get
		p	1		key
	m	(Laev;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Lhe$c;	a	register
		p	1		key
		p	2		entry
		p	3		lifecycle
	m	(Laew;)Ljava/lang/Object;	a	get
		p	1		id
	m	(Laqh;)Lhi$c;	a	getOrCreateTag
		p	1		tag
	m	(Lasc;)Ljava/util/Optional;	a	getRandom
		p	1		random
	m	(Lhe$c;)Ljava/lang/Object;	a	getValueFromNullable
		p	0		entry
	m	(Lhi$c;)V	a	lambda$resetTags$13
		p	0		entryList
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntOpenCustomHashMap;)V	a	lambda$new$0
		p	0		map
	m	(Ljava/lang/Object;)I	a	getId
		p	1		value
	m	(Ljava/lang/Object;Lhe$c;)V	a	lambda$freeze$5
		p	0		value
		p	1		entry
	m	(Ljava/util/Map$Entry;)Laew;	a	lambda$freeze$7
	m	(Ljava/util/Map;)V	a	bindTags
		p	1		tagEntries
	m	(Ljava/util/Map;Laqh;Ljava/util/List;)V	a	lambda$bindTags$12
		p	2		tag
		p	3		entries
	m	(Ljava/util/Map;Lhe$c;)V	a	lambda$bindTags$9
		p	1		entry
	m	()I	b	size
	m	(Laev;)Ljava/util/Optional;	b	getHolder
		p	1		key
	m	(Laqh;)Ljava/util/Optional;	b	getTag
		p	1		tag
	m	(Lhe$c;)V	b	lambda$resetTags$14
		p	0		entry
	m	(Ljava/lang/Object;)Laew;	b	getKey
		p	1		value
	m	(Ljava/util/Map$Entry;)Z	b	lambda$freeze$6
		p	0		entry
	m	(Ljava/util/Map;Laqh;Ljava/util/List;)V	b	lambda$bindTags$10
		p	2		tag
		p	3		entries
	m	()Laev;	c	key
	m	(I)Ljava/util/Optional;	c	getHolder
		p	1		rawId
	m	(Laev;)Z	c	containsKey
		p	1		key
	m	(Laew;)Z	c	containsKey
		p	1		id
	m	(Ljava/lang/Object;)Ljava/util/Optional;	c	getResourceKey
		p	1		entry
	m	(Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair;	c	lambda$getTags$4
		p	0		entry
	m	()Lcom/mojang/serialization/Lifecycle;	d	registryLifecycle
	m	(Laqh;)Lhi$c;	d	createTag
		p	1		tag
	m	(Ljava/lang/Object;)Lhe;	d	wrapAsHolder
		p	1		value
	m	()Ljava/util/Set;	e	keySet
	m	(Laqh;)Ljava/lang/String;	e	lambda$bindTags$11
		p	0		tag
	m	(Ljava/lang/Object;)Lcom/mojang/serialization/Lifecycle;	e	lifecycle
		p	1		entry
	m	()Ljava/util/Set;	f	registryKeySet
	m	(Ljava/lang/Object;)Lhe$c;	f	createIntrusiveHolder
		p	1		value
	m	()Ljava/util/Set;	g	entrySet
	m	(Laev;)V	g	validateWrite
		p	1		key
	m	(Ljava/lang/Object;)Lhe$c;	g	lambda$createIntrusiveHolder$8
		p	1		valuex
	m	()Ljava/util/stream/Stream;	h	holders
	m	(Laev;)Lhe$c;	h	getOrCreateHolderOrThrow
		p	1		key
	m	()Ljava/util/stream/Stream;	i	getTags
	m	(Laev;)Lhe$c;	i	lambda$getOrCreateHolderOrThrow$3
		p	1		key2
	m	()Ljava/util/stream/Stream;	j	getTagNames
	m	(Laev;)Lhe$c;	j	lambda$registerMapping$2
		p	1		key
	m	()Z	k	isEmpty
	m	(Laev;)Ljava/lang/String;	k	lambda$new$1
	m	()Lhq;	l	freeze
	m	()V	m	resetTags
	m	()Lhf;	n	createRegistrationLookup
	m	()Lhh;	o	holderOwner
	m	()Lhg$c;	p	asLookup
	m	()V	v	validateWrite
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Laev;	c	key
	f	Lit/unimi/dsi/fastutil/objects/ObjectList;	d	byId
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	e	toId
	f	Ljava/util/Map;	f	byLocation
	f	Ljava/util/Map;	g	byKey
	f	Ljava/util/Map;	h	byValue
	f	Ljava/util/Map;	i	lifecycles
	f	Lcom/mojang/serialization/Lifecycle;	j	registryLifecycle
	f	Ljava/util/Map;	k	tags
	f	Z	l	frozen
	f	Ljava/util/Map;	m	unregisteredIntrusiveHolders
	f	Ljava/util/List;	n	holdersInOrder
	f	I	o	nextId
	f	Lhg$c;	p	lookup
c	hm$1	net/minecraft/core/MappedRegistry$1
	m	(Laev;)Ljava/util/Optional;	a	get
		p	1		key
	m	(Laqh;)Ljava/util/Optional;	a	get
		p	1		tag
	m	()Ljava/util/stream/Stream;	b	listElements
	m	()Ljava/util/stream/Stream;	d	listTags
	m	()Laev;	f	key
	m	()Lcom/mojang/serialization/Lifecycle;	g	registryLifecycle
	f	Lhm;	a	this$0
c	hm$2	net/minecraft/core/MappedRegistry$2
	m	(Laev;)Ljava/util/Optional;	a	get
		p	1		key
	m	(Laqh;)Ljava/util/Optional;	a	get
		p	1		tag
	m	(Laev;)Lhe$c;	b	getOrThrow
		p	1		key
	m	(Laqh;)Lhi$c;	b	getOrThrow
		p	1		tag
	f	Lhm;	a	this$0
c	hn	net/minecraft/core/NonNullList
	m	(Ljava/util/List;Ljava/lang/Object;)V	<init>	<init>
		p	1		delegate
		p	2		initialElement
	m	()Lhn;	a	create
	m	(I)Lhn;	a	createWithCapacity
		p	0		size
	m	(ILjava/lang/Object;)Lhn;	a	withSize
		p	0		size
		p	1		defaultValue
	m	(Ljava/lang/Object;[Ljava/lang/Object;)Lhn;	a	of
		p	0		defaultValue
		p	1		values
	f	Ljava/util/List;	a	list
	f	Ljava/lang/Object;	b	defaultValue
c	ho	net/minecraft/core/Position
	m	()D	a	x
	m	()D	b	y
	m	()D	c	z
c	hp	net/minecraft/core/QuartPos
	m	(I)I	a	fromBlock
		p	0		blockCoord
	m	(I)I	b	quartLocal
	m	(I)I	c	toBlock
		p	0		biomeCoord
	m	(I)I	d	fromSection
		p	0		chunkCoord
	m	(I)I	e	toSection
		p	0		biomeCoord
	f	I	a	BITS
	f	I	b	SIZE
	f	I	c	MASK
	f	I	d	SECTION_TO_QUARTS_BITS
c	hq	net/minecraft/core/Registry
	m	(Laev;)Ljava/lang/Object;	a	get
		p	1		key
	m	(Laew;)Ljava/lang/Object;	a	get
		p	1		id
	m	(Laqh;)Lhi$c;	a	getOrCreateTag
		p	1		tag
	m	(Lasc;)Ljava/util/Optional;	a	getRandom
		p	1		random
	m	(Lcom/mojang/serialization/DynamicOps;Laew;)Ljava/lang/Object;	a	lambda$keys$15
		p	1		id
	m	(Lhe;)Lcom/mojang/serialization/Lifecycle;	a	lambda$holderByNameCodec$14
		p	1		entry
	m	(Lhq;Laev;Ljava/lang/Object;)Ljava/lang/Object;	a	register
		p	0		registry
		p	1		key
		p	2		entry
	m	(Lhq;Laew;Ljava/lang/Object;)Ljava/lang/Object;	a	register
		p	0		registry
		p	1		id
		p	2		entry
	m	(Lhq;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;	a	register
		p	0		registry
		p	1		id
		p	2		entry
	m	(Ljava/lang/Object;)I	a	getId
		p	1		value
	m	(Ljava/util/Map;)V	a	bindTags
		p	1		tagEntries
	m	(Laev;)Ljava/util/Optional;	b	getHolder
		p	1		key
	m	(Laew;)Ljava/util/Optional;	b	getOptional
		p	1		id
	m	(Laqh;)Ljava/util/Optional;	b	getTag
		p	1		tag
	m	(Lhe;)Lcom/mojang/serialization/Lifecycle;	b	lambda$holderByNameCodec$13
		p	1		entry
	m	(Lhq;Laev;Ljava/lang/Object;)Lhe$c;	b	registerForHolder
		p	0		registry
		p	1		key
		p	2		entry
	m	(Lhq;Laew;Ljava/lang/Object;)Lhe$c;	b	registerForHolder
		p	0		registry
		p	1		id
		p	2		entry
	m	(Ljava/lang/Object;)Laew;	b	getKey
		p	1		value
	m	()Laev;	c	key
	m	(I)Ljava/util/Optional;	c	getHolder
		p	1		rawId
	m	(Laev;)Z	c	containsKey
		p	1		key
	m	(Laew;)Z	c	containsKey
		p	1		id
	m	(Laqh;)Ljava/lang/Iterable;	c	getTagOrEmpty
		p	1		tag
	m	(Lhe;)Lcom/mojang/serialization/DataResult;	c	lambda$holderByNameCodec$12
		p	1		entry
	m	(Ljava/lang/Object;)Ljava/util/Optional;	c	getResourceKey
		p	1		entry
	m	()Lcom/mojang/serialization/Lifecycle;	d	registryLifecycle
	m	(Laev;)Ljava/util/Optional;	d	getOptional
		p	1		key
	m	(Laew;)Lcom/mojang/serialization/DataResult;	d	lambda$holderByNameCodec$9
		p	1		id
	m	(Lhe;)Lcom/mojang/serialization/DataResult;	d	lambda$holderByNameCodec$11
	m	(Ljava/lang/Object;)Lhe;	d	wrapAsHolder
		p	1		value
	m	()Ljava/util/Set;	e	keySet
	m	(Laev;)Ljava/lang/Object;	e	getOrThrow
		p	1		key
	m	(Laew;)Lcom/mojang/serialization/DataResult;	e	lambda$holderByNameCodec$8
	m	(Lhe;)Ljava/lang/String;	e	lambda$holderByNameCodec$10
	m	(Ljava/lang/Object;)Lcom/mojang/serialization/Lifecycle;	e	lifecycle
		p	1		entry
	m	()Ljava/util/Set;	f	registryKeySet
	m	(Laev;)Lhe$c;	f	getHolderOrThrow
		p	1		key
	m	(Laew;)Ljava/lang/String;	f	lambda$holderByNameCodec$7
	m	(Ljava/lang/Object;)Lhe$c;	f	createIntrusiveHolder
		p	1		value
	m	()Ljava/util/Set;	g	entrySet
	m	(Laev;)Ljava/lang/IllegalStateException;	g	lambda$getHolderOrThrow$16
	m	(Laew;)Lcom/mojang/serialization/DataResult;	g	lambda$byNameCodec$2
		p	1		id
	m	(Ljava/lang/Object;)I	g	lambda$byNameCodec$6
		p	1		value
	m	()Ljava/util/stream/Stream;	h	holders
	m	(Laew;)Lcom/mojang/serialization/DataResult;	h	lambda$byNameCodec$1
	m	(Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	h	lambda$byNameCodec$5
		p	1		value
	m	()Ljava/util/stream/Stream;	i	getTags
	m	(Laew;)Ljava/lang/String;	i	lambda$byNameCodec$0
	m	(Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	i	lambda$byNameCodec$4
	m	()Ljava/util/stream/Stream;	j	getTagNames
	m	(Ljava/lang/Object;)Ljava/lang/String;	j	lambda$byNameCodec$3
	m	()Lhq;	l	freeze
	m	()V	m	resetTags
	m	()Lhh;	o	holderOwner
	m	()Lhg$c;	p	asLookup
	m	()Lcom/mojang/serialization/Codec;	q	byNameCodec
	m	()Lcom/mojang/serialization/Codec;	r	holderByNameCodec
	m	()Ljava/util/stream/Stream;	s	stream
	m	()Lhj;	t	asHolderIdMap
	m	()Lhg$c;	u	asTagAddingLookup
c	hq$1	net/minecraft/core/Registry$1
	m	(I)Ljava/lang/Object;	a	byId
		p	1		index
	m	(Lhe$c;)Lhe;	a	lambda$iterator$0
		p	0		entry
	m	(Lhe;)I	a	getId
		p	1		value
	m	(Ljava/lang/Object;)I	a	getId
		p	1		value
	m	()I	b	size
	m	(I)Lhe;	c	byId
	f	Lhq;	b	this$0
c	hq$2	net/minecraft/core/Registry$2
	m	()Lhg$c;	a	parent
	m	(Laqh;)Ljava/util/Optional;	a	get
		p	1		tag
	m	(Laqh;)Lhi$c;	b	getOrThrow
		p	1		tag
	f	Lhq;	a	this$0
c	hr	net/minecraft/core/RegistryAccess
	m	(Laev;)Ljava/util/Optional;	a	lookup
		p	1		registryRef
	m	(Lhq;)Lhr$b;	a	fromRegistryOfRegistries
		p	0		registries
	m	(Lhr$d;)Lcom/mojang/serialization/Lifecycle;	a	lambda$allRegistriesLifecycle$1
		p	0		entry
	m	()Ljava/util/stream/Stream;	b	registries
	m	()Lhr$b;	c	freeze
	m	(Laev;)Ljava/util/Optional;	c	registry
		p	1		key
	m	()Lcom/mojang/serialization/Lifecycle;	d	allRegistriesLifecycle
	m	(Laev;)Lhq;	d	registryOrThrow
		p	1		key
	m	(Laev;)Ljava/lang/IllegalStateException;	f	lambda$registryOrThrow$0
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lhr$b;	b	EMPTY
c	hr$1	net/minecraft/core/RegistryAccess$1
	m	()Ljava/util/stream/Stream;	b	registries
	m	()Lhr$b;	c	freeze
	m	(Laev;)Ljava/util/Optional;	c	registry
		p	1		key
	f	Lhq;	c	val$registries
c	hr$a	net/minecraft/core/RegistryAccess$1FrozenAccess
	m	(Lhr;Ljava/util/stream/Stream;)V	<init>	<init>
		p	2		entryStream
	f	Lhr;	c	this$0
c	hr$b	net/minecraft/core/RegistryAccess$Frozen
c	hr$c	net/minecraft/core/RegistryAccess$ImmutableRegistryAccess
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		registries
	m	(Ljava/util/Map;)V	<init>	<init>
		p	1		registries
	m	(Ljava/util/stream/Stream;)V	<init>	<init>
		p	1		entryStream
	m	()Ljava/util/stream/Stream;	b	registries
	m	(Lhq;)Lhq;	b	lambda$registry$1
		p	0		registry
	m	(Laev;)Ljava/util/Optional;	c	registry
		p	1		key
	m	(Lhq;)Lhq;	c	lambda$new$0
		p	0		registry
	f	Ljava/util/Map;	c	registries
c	hr$d	net/minecraft/core/RegistryAccess$RegistryEntry
	m	()Laev;	a	key
	m	(Laev;Lhq;)Lhr$d;	a	fromUntyped
		p	0		key
		p	1		value
	m	(Ljava/util/Map$Entry;)Lhr$d;	a	fromMapEntry
		p	0		entry
	m	()Lhq;	b	value
	m	()Lhr$d;	c	freeze
	f	Laev;	a	key
	f	Lhq;	b	value
c	hs	net/minecraft/core/RegistryCodecs
	m	(Laev;)Lcom/mojang/serialization/Codec;	a	homogeneousList
		p	0		registryRef
	m	(Laev;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	homogeneousList
		p	0		registryRef
		p	1		elementCodec
	m	(Laev;Lcom/mojang/serialization/Codec;Z)Lcom/mojang/serialization/Codec;	a	homogeneousList
		p	0		registryRef
		p	1		elementCodec
		p	2		alwaysSerializeAsList
	m	(Laev;Lcom/mojang/serialization/Lifecycle;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	networkCodec
		p	0		registryRef
		p	1		lifecycle
		p	2		elementCodec
	m	(Laev;Lcom/mojang/serialization/Lifecycle;Ljava/util/List;)Lhq;	a	lambda$networkCodec$1
		p	2		entries
	m	(Laev;Lcom/mojang/serialization/Lifecycle;Ljava/util/Map;)Lhq;	a	lambda$fullCodec$4
		p	2		entries
	m	(Laev;Lcom/mojang/serialization/MapCodec;)Lcom/mojang/serialization/MapCodec;	a	withNameAndId
		p	0		registryRef
		p	1		elementCodec
	m	(Laev;Lcom/mojang/serialization/MapCodec;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$withNameAndId$0
		p	2		instance
	m	(Laev;Z)Lcom/mojang/serialization/Codec;	a	homogeneousList
		p	0		registryRef
		p	1		alwaysSerializeAsList
	m	(Lhq;)Ljava/util/Map;	a	lambda$fullCodec$5
		p	0		registry
	m	(Lhz;Lcom/mojang/serialization/Lifecycle;Laev;Ljava/lang/Object;)V	a	lambda$fullCodec$3
		p	2		key
		p	3		value
	m	(Laev;Lcom/mojang/serialization/Lifecycle;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	b	fullCodec
		p	0		registryRef
		p	1		lifecycle
		p	2		elementCodec
	m	(Lhq;)Ljava/util/List;	b	lambda$networkCodec$2
		p	0		registry
c	hs$a	net/minecraft/core/RegistryCodecs$RegistryEntry
	m	(Laev;ILjava/lang/Object;)V	<init>	<init>
		p	1		key
		p	2		rawId
		p	3		value
	m	()Laev;	a	key
	m	()I	b	id
	m	()Ljava/lang/Object;	c	value
	f	Laev;	a	key
	f	I	b	id
	f	Ljava/lang/Object;	c	value
c	ht	net/minecraft/core/RegistrySetBuilder
	m	(Laev;Lcom/mojang/serialization/Lifecycle;Lht$e;)Lht;	a	add
		p	1		registryRef
		p	2		lifecycle
		p	3		bootstrapFunction
	m	(Laev;Lht$e;)Lht;	a	add
		p	1		registryRef
		p	2		bootstrapFunction
	m	(Lhg$c;)Lhf;	a	wrapContextLookup
		p	0		wrapper
	m	(Lhr$d;)Lhg$c;	a	lambda$buildPatch$6
		p	0		entry
	m	(Lhr;)Lhg$b;	a	build
		p	1		baseRegistryManager
	m	(Lhr;Lhg$b;)Lhg$b;	a	buildPatch
		p	1		baseRegistryManager
		p	2		wrapperLookup
	m	(Lht$a;Lht$g;)Lht$f;	a	lambda$buildPatch$4
		p	1		info
	m	(Ljava/util/Map;Lht$f;)V	a	lambda$buildPatch$5
		p	1		registry
	m	(Lhr$d;)Lhg$c;	b	lambda$build$1
		p	0		entry
	m	(Lhr;)Lht$a;	b	createState
		p	1		registryManager
	m	(Lht$a;Lht$g;)Lhg$c;	b	lambda$build$2
		p	1		info
	m	(Ljava/util/Map;Lht$f;)V	b	lambda$buildPatch$3
		p	1		registry
	m	(Lht$a;Lht$g;)V	c	lambda$createState$0
		p	1		registry
	f	Ljava/util/List;	a	entries
c	ht$1	net/minecraft/core/RegistrySetBuilder$1
	m	(Lhh;Lhg$c;)V	<init>	<init>
		p	1		entryOwner
	m	(Laev;)Ljava/util/Optional;	a	get
		p	1		key
	f	Lhg$c;	a	val$original
c	ht$a	net/minecraft/core/RegistrySetBuilder$BuildState
	m	()Lnr;	a	bootstapContext
	m	(Laev;Lhg;)Ljava/util/Optional;	a	lambda$fillMissingHolders$4
		p	1		entryLookup
	m	(Laev;Lht$d;)V	a	lambda$reportRemainingUnreferencedValues$2
		p	1		key
		p	2		value
	m	(Laew;)Lht$f;	a	lambda$collectReferencedRegistries$6
		p	0		registry
	m	(Lcom/google/common/collect/ImmutableMap$Builder;Lhr$d;)V	a	lambda$create$0
		p	1		entry
	m	(Lcom/google/common/collect/ImmutableMap$Builder;Lht$h;Laev;)V	a	lambda$create$1
		p	2		registryRef
	m	(Lhe$c;Ljava/util/Iterator;Lhe$c;)V	a	lambda$fillMissingHolders$5
		p	2		entry
	m	(Lhg$b;)V	a	fillMissingHolders
		p	1		lookup
	m	(Lhg$b;Laew;)Ljava/util/Optional;	a	lambda$fillMissingHolders$3
		p	1		registryId
	m	(Lhh;)V	a	addOwner
		p	1		owner
	m	(Lhr;Ljava/util/stream/Stream;)Lht$a;	a	create
		p	0		dynamicRegistryManager
		p	1		registryRefs
	m	()V	b	reportRemainingUnreferencedValues
	m	()V	c	throwOnError
	m	()Ljava/util/stream/Stream;	d	collectReferencedRegistries
	m	()Lht$b;	e	owner
	m	()Lht$h;	f	lookup
	m	()Ljava/util/Map;	g	registries
	m	()Ljava/util/Map;	h	registeredValues
	m	()Ljava/util/List;	i	errors
	f	Lht$b;	a	owner
	f	Lht$h;	b	lookup
	f	Ljava/util/Map;	c	registries
	f	Ljava/util/Map;	d	registeredValues
	f	Ljava/util/List;	e	errors
c	ht$a$1	net/minecraft/core/RegistrySetBuilder$BuildState$1
	m	(Laev;)Lhf;	a	lookup
		p	1		registryRef
	m	(Laev;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Lhe$c;	a	register
		p	1		key
		p	2		value
		p	3		lifecycle
	f	Lht$a;	a	this$0
c	ht$b	net/minecraft/core/RegistrySetBuilder$CompositeOwner
	m	(Lhh;)Z	a	canSerializeIn
		p	1		other
	m	(Lhh;)V	b	add
		p	1		owner
	f	Ljava/util/Set;	a	owners
c	ht$c	net/minecraft/core/RegistrySetBuilder$EmptyTagLookup
	m	(Lhh;)V	<init>	<init>
		p	1		entryOwner
	m	(Laqh;)Ljava/util/Optional;	a	get
		p	1		tag
	f	Lhh;	b	owner
c	ht$d	net/minecraft/core/RegistrySetBuilder$RegisteredValue
	m	()Ljava/lang/Object;	a	value
	m	()Lcom/mojang/serialization/Lifecycle;	b	lifecycle
	f	Ljava/lang/Object;	a	value
	f	Lcom/mojang/serialization/Lifecycle;	b	lifecycle
c	ht$e	net/minecraft/core/RegistrySetBuilder$RegistryBootstrap
	m	(Lnr;)V	run	run
		p	1		registerable
c	ht$f	net/minecraft/core/RegistrySetBuilder$RegistryContents
	m	()Lhg$c;	a	buildAsLookup
	m	()Laev;	b	key
	m	()Lcom/mojang/serialization/Lifecycle;	c	lifecycle
	m	()Ljava/util/Map;	d	values
	f	Laev;	a	key
	f	Lcom/mojang/serialization/Lifecycle;	b	lifecycle
	f	Ljava/util/Map;	c	values
c	ht$f$1	net/minecraft/core/RegistrySetBuilder$RegistryContents$1
	m	(Laev;)Ljava/util/Optional;	a	get
		p	1		key
	m	(Laqh;)Ljava/util/Optional;	a	get
		p	1		tag
	m	(Ljava/util/Map$Entry;)Lhe$c;	a	lambda$$1
		p	1		entry
	m	()Ljava/util/stream/Stream;	b	listElements
	m	(Ljava/util/Map$Entry;)Lhe$c;	b	lambda$$0
	m	()Ljava/util/stream/Stream;	d	listTags
	m	()Laev;	f	key
	m	()Lcom/mojang/serialization/Lifecycle;	g	registryLifecycle
	f	Lht$f;	a	this$0
	f	Ljava/util/Map;	b	entries
c	ht$g	net/minecraft/core/RegistrySetBuilder$RegistryStub
	m	()Laev;	a	key
	m	(Lht$a;)Lht$f;	a	collectChanges
		p	1		registries
	m	()Lcom/mojang/serialization/Lifecycle;	b	lifecycle
	m	(Lht$a;)V	b	apply
		p	1		registries
	m	()Lht$e;	c	bootstrap
	f	Laev;	a	key
	f	Lcom/mojang/serialization/Lifecycle;	b	lifecycle
	f	Lht$e;	c	bootstrap
c	ht$h	net/minecraft/core/RegistrySetBuilder$UniversalLookup
	m	(Lhh;)V	<init>	<init>
		p	1		entryOwner
	m	(Laev;)Ljava/util/Optional;	a	get
		p	1		key
	m	(Laev;)Lhe$c;	c	getOrCreate
		p	1		key
	m	(Laev;)Lhe$c;	d	lambda$getOrCreate$0
		p	1		key2
	f	Ljava/util/Map;	a	holders
c	ht$i	net/minecraft/core/RegistrySetBuilder$ValueAndHolder
	m	()Lht$d;	a	value
	m	()Ljava/util/Optional;	b	holder
	f	Lht$d;	a	value
	f	Ljava/util/Optional;	b	holder
c	hu	net/minecraft/core/RegistrySynchronization
	m	()Lcom/mojang/serialization/Codec;	a	makeNetworkCodec
	m	(Laev;)Lcom/mojang/serialization/DataResult;	a	getNetworkCodec
		p	0		registryRef
	m	(Laev;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	lambda$makeNetworkCodec$6
		p	1		codec
	m	(Lcom/google/common/collect/ImmutableMap$Builder;Laev;Lcom/mojang/serialization/Codec;)V	a	put
		p	0		builder
		p	1		key
		p	2		networkCodec
	m	(Lcom/mojang/serialization/codecs/UnboundedMapCodec;)Lcom/mojang/serialization/Codec;	a	captureMap
		p	0		networkCodec
	m	(Lhl;)Ljava/util/stream/Stream;	a	networkedRegistries
		p	0		combinedRegistries
	m	(Lhq;)Lcom/mojang/serialization/DataResult;	a	lambda$makeNetworkCodec$5
		p	0		registry
	m	(Lhr$d;)Lhq;	a	lambda$captureMap$9
		p	0		entry
	m	(Lhr;)Ljava/util/stream/Stream;	a	ownedNetworkableRegistries
		p	0		dynamicRegistryManager
	m	(Lhu$a;)Lcom/mojang/serialization/Codec;	a	lambda$getNetworkCodec$2
		p	0		info
	m	()Lcom/google/common/collect/ImmutableMap;	b	lambda$static$0
	m	(Laev;)Lcom/mojang/serialization/DataResult;	b	lambda$makeNetworkCodec$7
		p	0		registryRef
	m	(Lhl;)Ljava/util/stream/Stream;	b	networkSafeRegistries
		p	0		combinedRegistries
	m	(Lhr$d;)Laev;	b	lambda$captureMap$8
		p	0		entry
	m	(Lhr;)Ljava/util/Map;	b	lambda$captureMap$10
		p	0		registryManager
	m	(Laev;)Lcom/mojang/serialization/DataResult;	c	lambda$getNetworkCodec$4
	m	(Lhr$d;)Z	c	lambda$ownedNetworkableRegistries$1
		p	0		entry
	m	(Laev;)Ljava/lang/String;	d	lambda$getNetworkCodec$3
	f	Lcom/mojang/serialization/Codec;	a	NETWORK_CODEC
	f	Ljava/util/Map;	b	NETWORKABLE_REGISTRIES
c	hu$a	net/minecraft/core/RegistrySynchronization$NetworkedRegistryData
	m	()Laev;	a	key
	m	()Lcom/mojang/serialization/Codec;	b	networkCodec
	f	Laev;	a	key
	f	Lcom/mojang/serialization/Codec;	b	networkCodec
c	hv	net/minecraft/core/Rotations
	m	(FFF)V	<init>	<init>
		p	1		pitch
		p	2		yaw
		p	3		roll
	m	(Lrc;)V	<init>	<init>
		p	1		serialized
	m	()Lrc;	a	save
	m	()F	b	getX
	m	()F	c	getY
	m	()F	d	getZ
	m	()F	e	getWrappedX
	m	()F	f	getWrappedY
	m	()F	g	getWrappedZ
	f	F	a	x
	f	F	b	y
	f	F	c	z
c	hw	net/minecraft/core/SectionPos
	m	(III)V	<init>	<init>
		p	1		x
		p	2		y
		p	3		z
	m	()I	a	x
	m	(D)I	a	posToSectionCoord
		p	0		coord
	m	(I)I	a	blockToSectionCoord
		p	0		coord
	m	(II)I	a	sectionToBlockCoord
		p	0		chunkCoord
		p	1		offset
	m	(III)Lhw;	a	of
		p	0		x
		p	1		y
		p	2		z
	m	(IIIIII)Ljava/util/stream/Stream;	a	betweenClosedStream
		p	0		minX
		p	1		minY
		p	2		minZ
		p	3		maxX
		p	4		maxY
		p	5		maxZ
	m	(IIILit/unimi/dsi/fastutil/longs/LongConsumer;)V	a	aroundAndAtBlockPos
		p	0		x
		p	1		y
		p	2		z
		p	3		consumer
	m	(J)Lhw;	a	of
		p	0		packed
	m	(JIII)J	a	offset
		p	0		packed
		p	2		x
		p	3		y
		p	4		z
	m	(JLha;)J	a	offset
		p	0		packed
		p	2		direction
	m	(JLit/unimi/dsi/fastutil/longs/LongConsumer;)V	a	aroundAndAtBlockPos
		p	0		pos
		p	2		consumer
	m	(Lcpc;I)Lhw;	a	of
		p	0		chunkPos
		p	1		y
	m	(Lcpc;III)Ljava/util/stream/Stream;	a	aroundChunk
		p	0		center
		p	1		radius
		p	2		minY
		p	3		maxY
	m	(Ldhf;)Lhw;	a	bottomOf
		p	0		chunk
	m	(Ldja;)Lhw;	a	of
		p	0		entity
	m	(Lgw;)Lhw;	a	of
		p	0		pos
	m	(Lgw;Lit/unimi/dsi/fastutil/longs/LongConsumer;)V	a	aroundAndAtBlockPos
		p	0		pos
		p	1		consumer
	m	(Lho;)Lhw;	a	of
		p	0		pos
	m	(Lhw;I)Ljava/util/stream/Stream;	a	cube
		p	0		center
		p	1		radius
	m	(S)I	a	sectionRelativeX
		p	0		packedLocalPos
	m	()I	b	y
	m	(D)I	b	blockToSectionCoord
		p	0		coord
	m	(I)I	b	sectionRelative
		p	0		coord
	m	(II)J	b	getZeroNode
		p	0		x
		p	1		z
	m	(III)J	b	asLong
		p	0		x
		p	1		y
		p	2		z
	m	(J)I	b	x
		p	0		packed
	m	(Lgw;)S	b	sectionRelativePos
		p	0		pos
	m	(S)I	b	sectionRelativeY
		p	0		packedLocalPos
	m	()I	c	z
	m	(I)I	c	sectionToBlockCoord
		p	0		sectionCoord
	m	(III)Lhy;	c	offset
		p	1		x
		p	2		y
		p	3		z
	m	(J)I	c	y
		p	0		packed
	m	(Lgw;)J	c	asLong
		p	0		pos
	m	(S)I	c	sectionRelativeZ
		p	0		packedLocalPos
	m	()I	d	minBlockX
	m	(III)Lhw;	d	offset
	m	(J)I	d	z
		p	0		packed
	m	(S)I	d	relativeToBlockX
		p	1		packedLocalPos
	m	()I	e	minBlockY
	m	(J)J	e	blockToSection
		p	0		blockPos
	m	(S)I	e	relativeToBlockY
		p	1		packedLocalPos
	m	()I	f	minBlockZ
	m	(J)J	f	getZeroNode
		p	0		pos
	m	(S)I	f	relativeToBlockZ
		p	1		packedLocalPos
	m	()I	g	maxBlockX
	m	(S)Lgw;	g	relativeToBlockPos
		p	1		packedLocalPos
	m	()I	h	maxBlockY
	m	()I	i	maxBlockZ
	m	()Lgw;	j	origin
	m	()Lgw;	q	center
	m	()Lcpc;	r	chunk
	m	()J	s	asLong
	m	()Ljava/util/stream/Stream;	t	blocksInside
	f	I	a	SECTION_BITS
	f	I	b	SECTION_SIZE
	f	I	c	SECTION_MASK
	f	I	d	SECTION_HALF_SIZE
	f	I	e	SECTION_MAX_INDEX
	f	I	h	PACKED_X_LENGTH
	f	I	i	PACKED_Y_LENGTH
	f	I	j	PACKED_Z_LENGTH
	f	J	k	PACKED_X_MASK
	f	J	l	PACKED_Y_MASK
	f	J	m	PACKED_Z_MASK
	f	I	n	Y_OFFSET
	f	I	o	Z_OFFSET
	f	I	p	X_OFFSET
	f	I	q	RELATIVE_X_SHIFT
	f	I	r	RELATIVE_Y_SHIFT
	f	I	s	RELATIVE_Z_SHIFT
c	hw$1	net/minecraft/core/SectionPos$1
	f	Lgx;	a	cursor
	f	I	b	val$minX
	f	I	c	val$minY
	f	I	d	val$minZ
	f	I	e	val$maxX
	f	I	f	val$maxY
	f	I	g	val$maxZ
c	hx	net/minecraft/core/UUIDUtil
	m	(JJ)[I	a	leastMostToIntArray
		p	0		uuidMost
		p	2		uuidLeast
	m	(Lcom/mojang/datafixers/util/Either;)Ljava/util/UUID;	a	lambda$static$8
		p	0		either
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/util/UUID;	a	readUUID
		p	0		dynamic
	m	(Ljava/lang/String;)Ljava/util/UUID;	a	createOfflinePlayerUUID
		p	0		nickname
	m	(Ljava/lang/String;Ljava/lang/IllegalArgumentException;)Ljava/lang/String;	a	lambda$static$4
	m	(Ljava/util/UUID;)[I	a	uuidToIntArray
		p	0		uuid
	m	(Ljava/util/stream/IntStream;)Lcom/mojang/serialization/DataResult;	a	lambda$static$0
		p	0		uuidStream
	m	([I)Ljava/util/UUID;	a	uuidFromIntArray
		p	0		array
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	b	lambda$static$5
		p	0		string
	m	(Ljava/lang/String;Ljava/lang/IllegalArgumentException;)Ljava/lang/String;	b	lambda$static$2
	m	(Ljava/util/UUID;)[B	b	uuidToByteArray
		p	0		uuid
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	c	lambda$static$3
		p	0		string
	m	(Ljava/util/UUID;)Ljava/util/UUID;	c	lambda$static$7
		p	0		uuid
	m	(Ljava/util/UUID;)Ljava/util/UUID;	d	lambda$static$6
		p	0		uuid
	m	(Ljava/util/UUID;)Ljava/util/stream/IntStream;	e	lambda$static$1
		p	0		uuid
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcom/mojang/serialization/Codec;	b	STRING_CODEC
	f	Lcom/mojang/serialization/Codec;	c	AUTHLIB_CODEC
	f	I	d	UUID_BYTES
	f	Ljava/lang/String;	e	UUID_PREFIX_OFFLINE_PLAYER
c	hy	net/minecraft/core/Vec3i
	m	(III)V	<init>	<init>
		p	1		x
		p	2		y
		p	3		z
	m	(ILhy;)Lcom/mojang/serialization/DataResult;	a	lambda$offsetCodec$4
		p	1		vec
	m	(Lha$a;)I	a	get
		p	1		axis
	m	(Lho;D)Z	a	closerToCenterThan
		p	1		pos
		p	2		distance
	m	(Lhy;)Ljava/util/stream/IntStream;	a	lambda$static$2
		p	0		vec
	m	(Lhy;D)Z	a	closerThan
		p	1		vec
		p	2		distance
	m	(Ljava/util/stream/IntStream;)Lcom/mojang/serialization/DataResult;	a	lambda$static$1
		p	0		stream
	m	([I)Lhy;	a	lambda$static$0
		p	0		coordinates
	m	(ILhy;)Ljava/lang/String;	b	lambda$offsetCodec$3
	m	(Lha$a;I)Lhy;	b	relative
		p	1		axis
		p	2		distance
	m	(Lha;)Lhy;	b	relative
		p	1		direction
	m	(Lha;I)Lhy;	b	relative
		p	1		direction
		p	2		distance
	m	(Lho;)D	b	distToCenterSqr
		p	1		pos
	m	(DDD)D	c	distToCenterSqr
		p	1		x
		p	3		y
		p	5		z
	m	(III)Lhy;	c	offset
		p	1		x
		p	2		y
		p	3		z
	m	(DDD)D	d	distToLowCornerSqr
		p	1		x
		p	3		y
		p	5		z
	m	(Lhy;)Lhy;	d	cross
		p	1		vec
	m	(Lhy;)Lhy;	e	subtract
		p	1		vec
	m	(Lhy;)Lhy;	f	offset
		p	1		vec
	m	(I)Lhy;	i	east
		p	1		distance
	m	(Lhy;)I	i	compareTo
	m	(I)Lhy;	j	west
		p	1		distance
	m	(Lhy;)D	j	distSqr
		p	1		vec
	m	()Lhy;	k	east
	m	(I)Lhy;	k	south
		p	1		distance
	m	(Lhy;)I	k	distManhattan
		p	1		vec
	m	()Lhy;	l	west
	m	(I)Lhy;	l	north
		p	1		distance
	m	()Lhy;	m	south
	m	(I)Lhy;	m	below
		p	1		distance
	m	()Lhy;	n	north
	m	(I)Lhy;	n	above
		p	1		distance
	m	()Lhy;	o	below
	m	(I)Lhy;	o	multiply
		p	1		scale
	m	()Lhy;	p	above
	m	(I)Lhy;	s	setZ
		p	1		z
	m	(I)Lhy;	t	setY
		p	1		y
	m	()I	u	getX
	m	(I)Lhy;	u	setX
		p	1		x
	m	()I	v	getY
	m	(I)Lcom/mojang/serialization/Codec;	v	offsetCodec
		p	0		maxAbsValue
	m	()I	w	getZ
	m	()Ljava/lang/String;	x	toShortString
	f	I	a	x
	f	I	b	y
	f	I	c	z
	f	Lcom/mojang/serialization/Codec;	f	CODEC
	f	Lhy;	g	ZERO
c	hz	net/minecraft/core/WritableRegistry
	m	(Laev;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Lhe$c;	a	register
		p	1		key
		p	2		entry
		p	3		lifecycle
	m	()Z	k	isEmpty
	m	()Lhf;	n	createRegistrationLookup
c	ia	net/minecraft/core/cauldron/CauldronInteraction
	m	()Lit/unimi/dsi/fastutil/objects/Object2ObjectOpenHashMap;	a	newInteractionMap
	m	(Lcpv;Lgw;Lcbu;Lbgx;Lcjf;Ldfj;Lapc;)Lbgy;	a	emptyBucket
		p	0		world
		p	1		pos
		p	2		player
		p	3		hand
		p	4		stack
		p	5		state
		p	6		soundEvent
	m	(Ldfj;)Z	a	lambda$bootStrap$9
		p	0		statex
	m	(Ldfj;Lcpv;Lgw;Lcbu;Lbgx;Lcjf;)Lbgy;	a	lambda$static$16
		p	0		state
		p	1		world
		p	2		pos
		p	3		player
		p	4		hand
		p	5		stack
	m	(Ldfj;Lcpv;Lgw;Lcbu;Lbgx;Lcjf;Lcjf;Ljava/util/function/Predicate;Lapc;)Lbgy;	a	fillBucket
		p	0		state
		p	1		world
		p	2		pos
		p	3		player
		p	4		hand
		p	5		stack
		p	6		output
		p	7		fullPredicate
		p	8		soundEvent
	m	(Lit/unimi/dsi/fastutil/objects/Object2ObjectOpenHashMap;)V	a	lambda$newInteractionMap$1
		p	0		map
	m	(Ljava/util/Map;)V	a	addDefaultInteractions
		p	0		behavior
	m	()V	b	bootStrap
	m	(Ldfj;)Z	b	lambda$bootStrap$7
		p	0		statex
	m	(Ldfj;Lcpv;Lgw;Lcbu;Lbgx;Lcjf;)Lbgy;	b	lambda$static$15
		p	0		state
		p	1		world
		p	2		pos
		p	3		player
		p	4		hand
		p	5		stack
	m	(Ldfj;)Z	c	lambda$bootStrap$3
		p	0		statex
	m	(Ldfj;Lcpv;Lgw;Lcbu;Lbgx;Lcjf;)Lbgy;	c	lambda$static$14
		p	0		state
		p	1		world
		p	2		pos
		p	3		player
		p	4		hand
		p	5		stack
	m	(Ldfj;Lcpv;Lgw;Lcbu;Lbgx;Lcjf;)Lbgy;	d	lambda$static$13
		p	0		state
		p	1		world
		p	2		pos
		p	3		player
		p	4		hand
		p	5		stack
	m	(Ldfj;Lcpv;Lgw;Lcbu;Lbgx;Lcjf;)Lbgy;	e	lambda$static$12
		p	0		state
		p	1		world
		p	2		pos
		p	3		player
		p	4		hand
		p	5		stack
	m	(Ldfj;Lcpv;Lgw;Lcbu;Lbgx;Lcjf;)Lbgy;	f	lambda$static$11
		p	0		state
		p	1		world
		p	2		pos
		p	3		player
		p	4		hand
		p	5		stack
	m	(Ldfj;Lcpv;Lgw;Lcbu;Lbgx;Lcjf;)Lbgy;	g	lambda$bootStrap$10
		p	0		state
		p	1		world
		p	2		pos
		p	3		player
		p	4		hand
		p	5		stack
	m	(Ldfj;Lcpv;Lgw;Lcbu;Lbgx;Lcjf;)Lbgy;	h	lambda$bootStrap$8
		p	0		state
		p	1		world
		p	2		pos
		p	3		player
		p	4		hand
		p	5		stack
	m	(Ldfj;Lcpv;Lgw;Lcbu;Lbgx;Lcjf;)Lbgy;	i	lambda$bootStrap$6
		p	0		state
		p	1		world
		p	2		pos
		p	3		player
		p	4		hand
		p	5		stack
	m	(Ldfj;Lcpv;Lgw;Lcbu;Lbgx;Lcjf;)Lbgy;	interact	interact
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		stack
	m	(Ldfj;Lcpv;Lgw;Lcbu;Lbgx;Lcjf;)Lbgy;	j	lambda$bootStrap$5
		p	0		state
		p	1		world
		p	2		pos
		p	3		player
		p	4		hand
		p	5		stack
	m	(Ldfj;Lcpv;Lgw;Lcbu;Lbgx;Lcjf;)Lbgy;	k	lambda$bootStrap$4
		p	0		state
		p	1		world
		p	2		pos
		p	3		player
		p	4		hand
		p	5		stack
	m	(Ldfj;Lcpv;Lgw;Lcbu;Lbgx;Lcjf;)Lbgy;	l	lambda$bootStrap$2
		p	0		state
		p	1		world
		p	2		pos
		p	3		player
		p	4		hand
		p	5		stack
	m	(Ldfj;Lcpv;Lgw;Lcbu;Lbgx;Lcjf;)Lbgy;	m	lambda$newInteractionMap$0
		p	0		state
		p	1		world
		p	2		pos
		p	3		player
		p	4		hand
		p	5		stack
	f	Ljava/util/Map;	a	EMPTY
	f	Ljava/util/Map;	b	WATER
	f	Ljava/util/Map;	c	LAVA
	f	Ljava/util/Map;	d	POWDER_SNOW
	f	Lia;	e	FILL_WATER
	f	Lia;	f	FILL_LAVA
	f	Lia;	g	FILL_POWDER_SNOW
	f	Lia;	h	SHULKER_BOX
	f	Lia;	i	BANNER
	f	Lia;	j	DYED_ITEM
c	ib	net/minecraft/core/cauldron/package-info
c	ic	net/minecraft/core/dispenser/AbstractProjectileDispenseBehavior
	m	()F	a	getUncertainty
	m	(Lcpv;Lho;Lcjf;)Lccm;	a	getProjectile
		p	1		world
		p	2		position
		p	3		stack
	m	(Lid;)V	a	playSound
		p	1		pointer
	m	(Lid;Lcjf;)Lcjf;	a	execute
		p	1		pointer
		p	2		stack
	m	()F	b	getPower
c	id	net/minecraft/core/dispenser/BlockSource
	m	()Lehn;	a	center
	m	()Lakq;	b	level
	m	()Lgw;	c	pos
	m	()Ldfj;	d	state
	m	()Lddm;	e	blockEntity
	f	Lakq;	a	level
	f	Lgw;	b	pos
	f	Ldfj;	c	state
	f	Lddm;	d	blockEntity
c	ie	net/minecraft/core/dispenser/BoatDispenseItemBehavior
	m	(Lcdn$b;)V	<init>	<init>
		p	1		type
	m	(Lcdn$b;Z)V	<init>	<init>
		p	1		boatType
		p	2		chest
	m	(Lid;)V	a	playSound
		p	1		pointer
	m	(Lid;Lcjf;)Lcjf;	a	execute
		p	1		pointer
		p	2		stack
	f	Lig;	c	defaultDispenseItemBehavior
	f	Lcdn$b;	d	type
	f	Z	e	isChestBoat
c	ig	net/minecraft/core/dispenser/DefaultDispenseItemBehavior
	m	(Lcpv;Lcjf;ILha;Lho;)V	a	spawnItem
		p	0		world
		p	1		stack
		p	2		speed
		p	3		side
		p	4		pos
	m	(Lid;)V	a	playSound
		p	1		pointer
	m	(Lid;Lcjf;)Lcjf;	a	execute
		p	1		pointer
		p	2		stack
	m	(Lid;Lha;)V	a	playAnimation
		p	1		pointer
		p	2		side
	m	(Lid;Lcjf;)Lcjf;	dispense	dispense
		p	1		pointer
		p	2		stack
c	ih	net/minecraft/core/dispenser/DispenseItemBehavior
	m	(Lid;Lbiu;Lha;)Lehn;	a	getEntityPokingOutOfBlockPos
		p	0		pointer
		p	1		entityType
		p	2		direction
	m	(Lid;Lcjf;)Lcjf;	a	lambda$static$0
		p	0		pointer
		p	1		stack
	m	()V	c	bootStrap
	m	(Lid;Lcjf;)Lcjf;	dispense	dispense
		p	1		pointer
		p	2		stack
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lih;	b	NOOP
c	ih$1	net/minecraft/core/dispenser/DispenseItemBehavior$1
	m	(Lcpv;Lho;Lcjf;)Lccm;	a	getProjectile
		p	1		world
		p	2		position
		p	3		stack
c	ih$2	net/minecraft/core/dispenser/DispenseItemBehavior$10
	m	(Lha;Lbyd;)V	a	lambda$execute$0
	m	(Lid;Lcjf;)Lcjf;	a	execute
		p	1		pointer
		p	2		stack
c	ih$3	net/minecraft/core/dispenser/DispenseItemBehavior$11
	m	(Lbjg;)Z	a	lambda$execute$0
		p	0		entity
	m	(Lid;Lcjf;)Lcjf;	a	execute
		p	1		pointer
		p	2		stack
c	ih$4	net/minecraft/core/dispenser/DispenseItemBehavior$12
	m	(Lbwq;)Z	a	lambda$execute$0
		p	0		entity
	m	(Lid;Lcjf;)Lcjf;	a	execute
		p	1		pointer
		p	2		stack
c	ih$5	net/minecraft/core/dispenser/DispenseItemBehavior$13
	m	(Lbwp;)Z	a	lambda$execute$0
		p	0		entity
	m	(Lid;Lcjf;)Lcjf;	a	execute
		p	1		pointer
		p	2		stack
c	ih$6	net/minecraft/core/dispenser/DispenseItemBehavior$14
	m	(Lid;)V	a	playSound
		p	1		pointer
	m	(Lid;Lcjf;)Lcjf;	a	execute
		p	1		pointer
		p	2		stack
c	ih$7	net/minecraft/core/dispenser/DispenseItemBehavior$15
	m	(Lcjf;Lccp;)V	a	lambda$execute$0
		p	1		entity
	m	(Lid;)V	a	playSound
		p	1		pointer
	m	(Lid;Lcjf;)Lcjf;	a	execute
		p	1		pointer
		p	2		stack
c	ih$8	net/minecraft/core/dispenser/DispenseItemBehavior$16
	m	(Lid;Lcjf;)Lcjf;	a	execute
		p	1		pointer
		p	2		stack
	f	Lig;	c	defaultDispenseItemBehavior
c	ih$9	net/minecraft/core/dispenser/DispenseItemBehavior$17
	m	(Lid;Lcjf;)Lcjf;	a	execute
		p	1		pointer
		p	2		stack
	f	Lig;	c	defaultDispenseItemBehavior
c	ih$10	net/minecraft/core/dispenser/DispenseItemBehavior$18
	m	(Lid;Lcjf;)Lcjf;	a	execute
		p	1		pointer
		p	2		stack
c	ih$11	net/minecraft/core/dispenser/DispenseItemBehavior$19
	m	(Lid;Lcjf;)Lcjf;	a	execute
		p	1		pointer
		p	2		stack
c	ih$12	net/minecraft/core/dispenser/DispenseItemBehavior$2
	m	(Lcpv;Lho;Lcjf;)Lccm;	a	getProjectile
		p	1		world
		p	2		position
		p	3		stack
c	ih$13	net/minecraft/core/dispenser/DispenseItemBehavior$20
	m	(Lid;Lcjf;)Lcjf;	a	execute
		p	1		pointer
		p	2		stack
c	ih$14	net/minecraft/core/dispenser/DispenseItemBehavior$21
	m	(Lid;Lcjf;)Lcjf;	a	execute
		p	1		pointer
		p	2		stack
c	ih$15	net/minecraft/core/dispenser/DispenseItemBehavior$22
	m	(Lid;Lcjf;)Lcjf;	a	execute
		p	1		pointer
		p	2		stack
c	ih$16	net/minecraft/core/dispenser/DispenseItemBehavior$23
	m	(Lid;Lcjf;)Lcjf;	a	execute
		p	1		pointer
		p	2		stack
c	ih$17	net/minecraft/core/dispenser/DispenseItemBehavior$24
	m	(Ldfi$a;)Z	a	lambda$execute$0
		p	0		state
	m	(Lid;Lcjf;)Lcjf;	a	execute
		p	1		pointer
		p	2		stack
	m	(Lid;Lcjf;Lcjf;)Lcjf;	a	takeLiquid
		p	1		pointer
		p	2		emptyBottleStack
		p	3		filledBottleStack
	f	Lig;	c	defaultDispenseItemBehavior
c	ih$18	net/minecraft/core/dispenser/DispenseItemBehavior$25
	m	(Lid;Lcjf;)Lcjf;	a	execute
		p	1		pointer
		p	2		stack
c	ih$19	net/minecraft/core/dispenser/DispenseItemBehavior$26
	m	(Lid;Lcjf;)Lcjf;	a	execute
		p	1		pointer
		p	2		stack
c	ih$20	net/minecraft/core/dispenser/DispenseItemBehavior$27
	m	(Lid;Lcjf;)Lcjf;	a	execute
		p	1		pointer
		p	2		stack
	f	Lig;	c	defaultDispenseItemBehavior
c	ih$21	net/minecraft/core/dispenser/DispenseItemBehavior$3
	m	(Lcpv;Lho;Lcjf;)Lccm;	a	getProjectile
		p	1		world
		p	2		position
		p	3		stack
c	ih$22	net/minecraft/core/dispenser/DispenseItemBehavior$4
	m	(Lcjf;Lccu;)V	a	lambda$getProjectile$0
		p	1		entity
	m	(Lcpv;Lho;Lcjf;)Lccm;	a	getProjectile
		p	1		world
		p	2		position
		p	3		stack
c	ih$23	net/minecraft/core/dispenser/DispenseItemBehavior$5
	m	(Lcjf;Lccq;)V	a	lambda$getProjectile$0
		p	1		entity
	m	(Lcpv;Lho;Lcjf;)Lccm;	a	getProjectile
		p	1		world
		p	2		position
		p	3		stack
c	ih$24	net/minecraft/core/dispenser/DispenseItemBehavior$6
	m	()F	a	getUncertainty
	m	(Lcjf;Lccw;)V	a	lambda$getProjectile$0
		p	1		entity
	m	(Lcpv;Lho;Lcjf;)Lccm;	a	getProjectile
		p	1		world
		p	2		position
		p	3		stack
	m	()F	b	getPower
c	ih$25	net/minecraft/core/dispenser/DispenseItemBehavior$7
	m	(Lid;Lcjf;)Lcjf;	dispense	dispense
		p	1		pointer
		p	2		stack
c	ih$25$1	net/minecraft/core/dispenser/DispenseItemBehavior$7$1
	m	()F	a	getUncertainty
	m	(Lcjf;Lccx;)V	a	lambda$getProjectile$0
		p	1		entity
	m	(Lcpv;Lho;Lcjf;)Lccm;	a	getProjectile
		p	1		world
		p	2		position
		p	3		stack
	m	()F	b	getPower
	f	Lih$25;	c	this$0
c	ih$26	net/minecraft/core/dispenser/DispenseItemBehavior$8
	m	(Lid;Lcjf;)Lcjf;	dispense	dispense
		p	1		pointer
		p	2		stack
c	ih$26$1	net/minecraft/core/dispenser/DispenseItemBehavior$8$1
	m	()F	a	getUncertainty
	m	(Lcjf;Lccx;)V	a	lambda$getProjectile$0
		p	1		entity
	m	(Lcpv;Lho;Lcjf;)Lccm;	a	getProjectile
		p	1		world
		p	2		position
		p	3		stack
	m	()F	b	getPower
	f	Lih$26;	c	this$0
c	ih$27	net/minecraft/core/dispenser/DispenseItemBehavior$9
	m	(Lid;Lcjf;)Lcjf;	a	execute
		p	1		pointer
		p	2		stack
c	ii	net/minecraft/core/dispenser/OptionalDispenseItemBehavior
	m	()Z	a	isSuccess
	m	(Lid;)V	a	playSound
		p	1		pointer
	m	(Z)V	a	setSuccess
		p	1		success
	f	Z	c	success
c	ij	net/minecraft/core/dispenser/ShearsDispenseItemBehavior
	m	(Lakq;Lgw;)Z	a	tryShearBeehive
		p	0		world
		p	1		pos
	m	(Ldfi$a;)Z	a	lambda$tryShearBeehive$0
		p	0		state
	m	(Lid;Lcjf;)Lcjf;	a	execute
		p	1		pointer
		p	2		stack
	m	(Lakq;Lgw;)Z	b	tryShearLivingEntity
		p	0		world
		p	1		pos
c	ik	net/minecraft/core/dispenser/ShulkerBoxDispenseBehavior
	m	(Lid;Lcjf;)Lcjf;	a	execute
		p	1		pointer
		p	2		stack
	f	Lorg/slf4j/Logger;	c	LOGGER
c	il	net/minecraft/core/dispenser/package-info
c	im	net/minecraft/core/package-info
c	in	net/minecraft/core/particles/BlockParticleOption
	m	(Liu;Ldfj;)V	<init>	<init>
		p	1		type
		p	2		blockState
	m	()Ljava/lang/String;	a	writeToString
	m	(Lin;)Ldfj;	a	lambda$codec$1
		p	0		effect
	m	(Liu;)Lcom/mojang/serialization/Codec;	a	codec
		p	0		type
	m	(Liu;Ldfj;)Lin;	a	lambda$codec$0
		p	1		state
	m	(Lso;)V	a	writeToNetwork
		p	1		buf
	m	()Liu;	b	getType
	m	()Ldfj;	c	getState
	f	Lit$a;	a	DESERIALIZER
	f	Liu;	b	type
	f	Ldfj;	c	state
c	in$1	net/minecraft/core/particles/BlockParticleOption$1
	m	(Liu;Lcom/mojang/brigadier/StringReader;)Lin;	a	fromCommand
	m	(Liu;Lso;)Lin;	a	fromNetwork
	m	(Liu;Lcom/mojang/brigadier/StringReader;)Lit;	b	fromCommand
		p	1		type
		p	2		reader
	m	(Liu;Lso;)Lit;	b	fromNetwork
		p	1		type
		p	2		buf
c	io	net/minecraft/core/particles/DustColorTransitionOptions
	m	(Lorg/joml/Vector3f;Lorg/joml/Vector3f;F)V	<init>	<init>
		p	1		fromColor
		p	2		toColor
		p	3		scale
	m	()Ljava/lang/String;	a	writeToString
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	(Lio;)Ljava/lang/Float;	a	lambda$static$2
		p	0		effect
	m	(Lso;)V	a	writeToNetwork
		p	1		buf
	m	()Liu;	b	getType
	m	(Lio;)Lorg/joml/Vector3f;	b	lambda$static$1
		p	0		effect
	m	()Lorg/joml/Vector3f;	c	getFromColor
	m	(Lio;)Lorg/joml/Vector3f;	c	lambda$static$0
		p	0		effect
	m	()Lorg/joml/Vector3f;	d	getToColor
	f	Lorg/joml/Vector3f;	a	SCULK_PARTICLE_COLOR
	f	Lio;	b	SCULK_TO_REDSTONE
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Lit$a;	d	DESERIALIZER
	f	Lorg/joml/Vector3f;	i	toColor
c	io$1	net/minecraft/core/particles/DustColorTransitionOptions$1
	m	(Liu;Lcom/mojang/brigadier/StringReader;)Lio;	a	fromCommand
	m	(Liu;Lso;)Lio;	a	fromNetwork
	m	(Liu;Lcom/mojang/brigadier/StringReader;)Lit;	b	fromCommand
		p	1		type
		p	2		reader
	m	(Liu;Lso;)Lit;	b	fromNetwork
		p	1		type
		p	2		buf
c	ip	net/minecraft/core/particles/DustParticleOptions
	m	(Lorg/joml/Vector3f;F)V	<init>	<init>
		p	1		color
		p	2		scale
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Lip;)Ljava/lang/Float;	a	lambda$static$1
		p	0		effect
	m	()Liu;	b	getType
	m	(Lip;)Lorg/joml/Vector3f;	b	lambda$static$0
		p	0		effect
	f	Lorg/joml/Vector3f;	a	REDSTONE_PARTICLE_COLOR
	f	Lip;	b	REDSTONE
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Lit$a;	d	DESERIALIZER
c	ip$1	net/minecraft/core/particles/DustParticleOptions$1
	m	(Liu;Lcom/mojang/brigadier/StringReader;)Lip;	a	fromCommand
	m	(Liu;Lso;)Lip;	a	fromNetwork
	m	(Liu;Lcom/mojang/brigadier/StringReader;)Lit;	b	fromCommand
		p	1		type
		p	2		reader
	m	(Liu;Lso;)Lit;	b	fromNetwork
		p	1		type
		p	2		buf
c	iq	net/minecraft/core/particles/DustParticleOptionsBase
	m	(Lorg/joml/Vector3f;F)V	<init>	<init>
		p	1		color
		p	2		scale
	m	()Ljava/lang/String;	a	writeToString
	m	(Lcom/mojang/brigadier/StringReader;)Lorg/joml/Vector3f;	a	readVector3f
		p	0		reader
	m	(Lso;)V	a	writeToNetwork
		p	1		buf
	m	(Lso;)Lorg/joml/Vector3f;	b	readVector3f
		p	0		buf
	m	()Lorg/joml/Vector3f;	e	getColor
	m	()F	f	getScale
	f	F	e	MIN_SCALE
	f	F	f	MAX_SCALE
	f	Lorg/joml/Vector3f;	g	color
	f	F	h	scale
c	ir	net/minecraft/core/particles/ItemParticleOption
	m	(Liu;Lcjf;)V	<init>	<init>
		p	1		type
		p	2		stack
	m	()Ljava/lang/String;	a	writeToString
	m	(Lir;)Lcjf;	a	lambda$codec$1
		p	0		effect
	m	(Liu;)Lcom/mojang/serialization/Codec;	a	codec
		p	0		type
	m	(Liu;Lcjf;)Lir;	a	lambda$codec$0
		p	1		stack
	m	(Lso;)V	a	writeToNetwork
		p	1		buf
	m	()Liu;	b	getType
	m	()Lcjf;	c	getItem
	f	Lit$a;	a	DESERIALIZER
	f	Liu;	b	type
	f	Lcjf;	c	itemStack
c	ir$1	net/minecraft/core/particles/ItemParticleOption$1
	m	(Liu;Lcom/mojang/brigadier/StringReader;)Lir;	a	fromCommand
	m	(Liu;Lso;)Lir;	a	fromNetwork
	m	(Liu;Lcom/mojang/brigadier/StringReader;)Lit;	b	fromCommand
		p	1		type
		p	2		reader
	m	(Liu;Lso;)Lit;	b	fromNetwork
		p	1		type
		p	2		buf
c	is	net/minecraft/core/particles/ParticleGroup
	m	(I)V	<init>	<init>
		p	1		maxCount
	m	()I	a	getLimit
	f	Lis;	a	SPORE_BLOSSOM
	f	I	b	limit
c	it	net/minecraft/core/particles/ParticleOptions
	m	()Ljava/lang/String;	a	writeToString
	m	(Lso;)V	a	writeToNetwork
		p	1		buf
	m	()Liu;	b	getType
c	it$a	net/minecraft/core/particles/ParticleOptions$Deserializer
	m	(Liu;Lcom/mojang/brigadier/StringReader;)Lit;	b	fromCommand
		p	1		type
		p	2		reader
	m	(Liu;Lso;)Lit;	b	fromNetwork
		p	1		type
		p	2		buf
c	iu	net/minecraft/core/particles/ParticleType
	m	(ZLit$a;)V	<init>	<init>
		p	1		alwaysShow
		p	2		parametersFactory
	m	()Z	c	getOverrideLimiter
	m	()Lit$a;	d	getDeserializer
	m	()Lcom/mojang/serialization/Codec;	e	codec
	f	Z	a	overrideLimiter
	f	Lit$a;	b	deserializer
c	iv	net/minecraft/core/particles/ParticleTypes
	m	(Liu;)Lcom/mojang/serialization/Codec;	a	lambda$static$4
		p	0		type
	m	(Ljava/lang/String;Z)Liy;	a	register
		p	0		name
		p	1		alwaysShow
	m	(Ljava/lang/String;ZLit$a;Ljava/util/function/Function;)Liu;	a	register
		p	0		name
		p	1		alwaysShow
		p	2		factory
		p	3		codecGetter
	m	(Liu;)Lcom/mojang/serialization/Codec;	b	lambda$static$3
	m	(Liu;)Lcom/mojang/serialization/Codec;	c	lambda$static$2
	m	(Liu;)Lcom/mojang/serialization/Codec;	d	lambda$static$1
	m	(Liu;)Lcom/mojang/serialization/Codec;	e	lambda$static$0
	f	Liy;	A	FIREWORK
	f	Liy;	B	FISHING
	f	Liy;	C	FLAME
	f	Liy;	D	CHERRY_LEAVES
	f	Liy;	E	SCULK_SOUL
	f	Liu;	F	SCULK_CHARGE
	f	Liy;	G	SCULK_CHARGE_POP
	f	Liy;	H	SOUL_FIRE_FLAME
	f	Liy;	I	SOUL
	f	Liy;	J	FLASH
	f	Liy;	K	HAPPY_VILLAGER
	f	Liy;	L	COMPOSTER
	f	Liy;	M	HEART
	f	Liy;	N	INSTANT_EFFECT
	f	Liu;	O	ITEM
	f	Liu;	P	VIBRATION
	f	Liy;	Q	ITEM_SLIME
	f	Liy;	R	ITEM_SNOWBALL
	f	Liy;	S	LARGE_SMOKE
	f	Liy;	T	LAVA
	f	Liy;	U	MYCELIUM
	f	Liy;	V	NOTE
	f	Liy;	W	POOF
	f	Liy;	X	PORTAL
	f	Liy;	Y	RAIN
	f	Liy;	Z	SMOKE
	f	Liy;	aA	LANDING_OBSIDIAN_TEAR
	f	Liy;	aB	REVERSE_PORTAL
	f	Liy;	aC	WHITE_ASH
	f	Liy;	aD	SMALL_FLAME
	f	Liy;	aE	SNOWFLAKE
	f	Liy;	aF	DRIPPING_DRIPSTONE_LAVA
	f	Liy;	aG	FALLING_DRIPSTONE_LAVA
	f	Liy;	aH	DRIPPING_DRIPSTONE_WATER
	f	Liy;	aI	FALLING_DRIPSTONE_WATER
	f	Liy;	aJ	GLOW_SQUID_INK
	f	Liy;	aK	GLOW
	f	Liy;	aL	WAX_ON
	f	Liy;	a	AMBIENT_ENTITY_EFFECT
	f	Liy;	aM	WAX_OFF
	f	Liy;	aN	ELECTRIC_SPARK
	f	Liy;	aO	SCRAPE
	f	Liu;	aP	SHRIEK
	f	Liy;	aQ	EGG_CRACK
	f	Lcom/mojang/serialization/Codec;	aR	CODEC
	f	Liy;	aa	SNEEZE
	f	Liy;	ab	SPIT
	f	Liy;	ac	SQUID_INK
	f	Liy;	ad	SWEEP_ATTACK
	f	Liy;	ae	TOTEM_OF_UNDYING
	f	Liy;	af	UNDERWATER
	f	Liy;	ag	SPLASH
	f	Liy;	ah	WITCH
	f	Liy;	ai	BUBBLE_POP
	f	Liy;	aj	CURRENT_DOWN
	f	Liy;	ak	BUBBLE_COLUMN_UP
	f	Liy;	al	NAUTILUS
	f	Liy;	am	DOLPHIN
	f	Liy;	an	CAMPFIRE_COSY_SMOKE
	f	Liy;	ao	CAMPFIRE_SIGNAL_SMOKE
	f	Liy;	ap	DRIPPING_HONEY
	f	Liy;	aq	FALLING_HONEY
	f	Liy;	ar	LANDING_HONEY
	f	Liy;	as	FALLING_NECTAR
	f	Liy;	at	FALLING_SPORE_BLOSSOM
	f	Liy;	au	ASH
	f	Liy;	av	CRIMSON_SPORE
	f	Liy;	aw	WARPED_SPORE
	f	Liy;	ax	SPORE_BLOSSOM_AIR
	f	Liy;	ay	DRIPPING_OBSIDIAN_TEAR
	f	Liy;	az	FALLING_OBSIDIAN_TEAR
	f	Liy;	b	ANGRY_VILLAGER
	f	Liu;	c	BLOCK
	f	Liu;	d	BLOCK_MARKER
	f	Liy;	e	BUBBLE
	f	Liy;	f	CLOUD
	f	Liy;	g	CRIT
	f	Liy;	h	DAMAGE_INDICATOR
	f	Liy;	i	DRAGON_BREATH
	f	Liy;	j	DRIPPING_LAVA
	f	Liy;	k	FALLING_LAVA
	f	Liy;	l	LANDING_LAVA
	f	Liy;	m	DRIPPING_WATER
	f	Liy;	n	FALLING_WATER
	f	Liu;	o	DUST
	f	Liu;	p	DUST_COLOR_TRANSITION
	f	Liy;	q	EFFECT
	f	Liy;	r	ELDER_GUARDIAN
	f	Liy;	s	ENCHANTED_HIT
	f	Liy;	t	ENCHANT
	f	Liy;	u	END_ROD
	f	Liy;	v	ENTITY_EFFECT
	f	Liy;	w	EXPLOSION_EMITTER
	f	Liy;	x	EXPLOSION
	f	Liy;	y	SONIC_BOOM
	f	Liu;	z	FALLING_DUST
c	iv$1	net/minecraft/core/particles/ParticleTypes$1
	m	(ZLit$a;Ljava/util/function/Function;)V	<init>	<init>
		p	1		alwaysShow
		p	2		parametersFactory
	m	()Lcom/mojang/serialization/Codec;	e	codec
	f	Ljava/util/function/Function;	a	val$codec
c	iw	net/minecraft/core/particles/SculkChargeParticleOptions
	m	()Ljava/lang/String;	a	writeToString
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Liw;)Ljava/lang/Float;	a	lambda$static$0
		p	0		particleEffect
	m	(Lso;)V	a	writeToNetwork
		p	1		buf
	m	()Liu;	b	getType
	m	()F	c	roll
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lit$a;	b	DESERIALIZER
	f	F	c	roll
c	iw$1	net/minecraft/core/particles/SculkChargeParticleOptions$1
	m	(Liu;Lcom/mojang/brigadier/StringReader;)Liw;	a	fromCommand
	m	(Liu;Lso;)Liw;	a	fromNetwork
	m	(Liu;Lcom/mojang/brigadier/StringReader;)Lit;	b	fromCommand
		p	1		type
		p	2		reader
	m	(Liu;Lso;)Lit;	b	fromNetwork
		p	1		type
		p	2		buf
c	ix	net/minecraft/core/particles/ShriekParticleOption
	m	(I)V	<init>	<init>
		p	1		delay
	m	()Ljava/lang/String;	a	writeToString
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Lix;)Ljava/lang/Integer;	a	lambda$static$0
		p	0		particleEffect
	m	(Lso;)V	a	writeToNetwork
		p	1		buf
	m	()Liu;	b	getType
	m	()I	c	getDelay
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lit$a;	b	DESERIALIZER
	f	I	c	delay
c	ix$1	net/minecraft/core/particles/ShriekParticleOption$1
	m	(Liu;Lcom/mojang/brigadier/StringReader;)Lix;	a	fromCommand
	m	(Liu;Lso;)Lix;	a	fromNetwork
	m	(Liu;Lcom/mojang/brigadier/StringReader;)Lit;	b	fromCommand
		p	1		type
		p	2		reader
	m	(Liu;Lso;)Lit;	b	fromNetwork
		p	1		type
		p	2		buf
c	iy	net/minecraft/core/particles/SimpleParticleType
	m	(Z)V	<init>	<init>
		p	1		alwaysShow
	m	()Ljava/lang/String;	a	writeToString
	m	(Lso;)V	a	writeToNetwork
		p	1		buf
	m	()Liu;	b	getType
	m	()Lcom/mojang/serialization/Codec;	e	codec
	m	()Liy;	f	getType
	f	Lit$a;	a	DESERIALIZER
	f	Lcom/mojang/serialization/Codec;	b	codec
c	iy$1	net/minecraft/core/particles/SimpleParticleType$1
	m	(Liu;Lcom/mojang/brigadier/StringReader;)Liy;	a	fromCommand
	m	(Liu;Lso;)Liy;	a	fromNetwork
	m	(Liu;Lcom/mojang/brigadier/StringReader;)Lit;	b	fromCommand
		p	1		type
		p	2		reader
	m	(Liu;Lso;)Lit;	b	fromNetwork
		p	1		type
		p	2		buf
c	iz	net/minecraft/core/particles/VibrationParticleOption
	m	(Ldjx;I)V	<init>	<init>
		p	1		destination
		p	2		arrivalInTicks
	m	()Ljava/lang/String;	a	writeToString
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Liz;)Ljava/lang/Integer;	a	lambda$static$1
		p	0		effect
	m	(Lso;)V	a	writeToNetwork
		p	1		buf
	m	()Liu;	b	getType
	m	(Liz;)Ldjx;	b	lambda$static$0
		p	0		effect
	m	()Ldjx;	c	getDestination
	m	()I	d	getArrivalInTicks
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lit$a;	b	DESERIALIZER
	f	Ldjx;	c	destination
	f	I	d	arrivalInTicks
c	iz$1	net/minecraft/core/particles/VibrationParticleOption$1
	m	(Liu;Lcom/mojang/brigadier/StringReader;)Liz;	a	fromCommand
	m	(Liu;Lso;)Liz;	a	fromNetwork
	m	(Liu;Lcom/mojang/brigadier/StringReader;)Lit;	b	fromCommand
		p	1		type
		p	2		reader
	m	(Liu;Lso;)Lit;	b	fromNetwork
		p	1		type
		p	2		buf
c	ja	net/minecraft/core/particles/package-info
c	jb	net/minecraft/core/registries/BuiltInRegistries
	m	(Lhq;)Lcdf;	A	lambda$static$27
		p	0		registry
	m	(Lhq;)Lcdh;	B	lambda$static$26
		p	0		registry
	m	(Lhq;)Lbtm;	C	lambda$static$25
		p	0		registry
	m	(Lhq;)Lbsh;	D	lambda$static$24
		p	0		registry
	m	(Lhq;)Lcbk;	E	lambda$static$23
		p	0		registry
	m	(Lhq;)Lcbm;	F	lambda$static$22
		p	0		registry
	m	(Lhq;)Lapm;	G	lambda$static$21
		p	0		registry
	m	(Lhq;)Ldjy;	H	lambda$static$20
		p	0		registry
	m	(Lhq;)Lbkh;	I	lambda$static$19
		p	0		registry
	m	(Lhq;)Lcmm;	J	lambda$static$18
		p	0		registry
	m	(Lhq;)Lcmn;	K	lambda$static$17
		p	0		registry
	m	(Lhq;)Lcfq;	L	lambda$static$16
		p	0		registry
	m	(Lhq;)Ldyp;	M	lambda$static$15
		p	0		registry
	m	(Lhq;)Ldzk;	N	lambda$static$14
		p	0		registry
	m	(Lhq;)Ldyw;	O	lambda$static$13
		p	0		registry
	m	(Lhq;)Ldhk;	P	lambda$static$12
		p	0		registry
	m	(Lhq;)Laew;	Q	lambda$static$11
		p	0		registry
	m	(Lhq;)Ldcx;	R	lambda$static$10
		p	0		registry
	m	(Lhq;)Liu;	S	lambda$static$9
		p	0		registry
	m	(Lhq;)Lclc;	T	lambda$static$8
		p	0		registry
	m	(Lhq;)Lcja;	U	lambda$static$7
		p	0		registry
	m	(Lhq;)Lbiu;	V	lambda$static$6
		p	0		registry
	m	(Lhq;)Lcno;	W	lambda$static$5
		p	0		registry
	m	(Lhq;)Lcsv;	X	lambda$static$4
		p	0		registry
	m	(Lhq;)Lbib;	Y	lambda$static$3
		p	0		registry
	m	(Lhq;)Leal;	Z	lambda$static$2
		p	0		registry
	m	()V	a	bootStrap
	m	(Laev;Lcom/mojang/serialization/Lifecycle;Ljb$a;)Lhq;	a	registerSimple
		p	0		key
		p	1		lifecycle
		p	2		initializer
	m	(Laev;Lhz;Ljb$a;Lcom/mojang/serialization/Lifecycle;)Lhz;	a	internalRegister
		p	0		key
		p	1		registry
		p	2		initializer
		p	3		lifecycle
	m	(Laev;Ljava/lang/String;Lcom/mojang/serialization/Lifecycle;Ljb$a;)Lgz;	a	registerDefaulted
		p	0		key
		p	1		defaultId
		p	2		lifecycle
		p	3		initializer
	m	(Laev;Ljava/lang/String;Ljb$a;)Lgz;	a	registerDefaulted
		p	0		key
		p	1		defaultId
		p	2		initializer
	m	(Laev;Ljb$a;)Lhq;	a	registerSimple
		p	0		key
		p	1		initializer
	m	(Laew;Ljava/util/function/Supplier;)V	a	lambda$createContents$54
		p	0		id
		p	1		initializer
	m	(Lhq;)V	a	validate
		p	0		registries
	m	(Lhq;Lhq;)V	a	lambda$validate$55
		p	1		registry
	m	(Ljb$a;Lhz;)Ljava/lang/Object;	a	lambda$internalRegister$53
	m	(Lhq;)Lapc;	aa	lambda$static$1
		p	0		registry
	m	(Lhq;)Ldjt;	ab	lambda$static$0
		p	0		registry
	m	()V	b	createContents
	m	(Laev;Ljava/lang/String;Lcom/mojang/serialization/Lifecycle;Ljb$a;)Lgz;	b	registerDefaultedWithIntrusiveHolders
		p	0		key
		p	1		defaultId
		p	2		lifecycle
		p	3		initializer
	m	(Laev;Ljava/lang/String;Ljb$a;)Lgz;	b	registerDefaultedWithIntrusiveHolders
		p	0		key
		p	1		defaultId
		p	2		initializer
	m	(Laev;Ljb$a;)Lhq;	b	registerSimpleWithIntrusiveHolders
		p	0		key
		p	1		initializer
	m	(Lhq;)Lbvc;	b	lambda$static$52
		p	0		registry
	m	()V	c	freeze
	m	(Lhq;)Ldwq;	c	lambda$static$51
		p	0		registry
	m	(Lhq;)Ldza;	d	lambda$static$50
		p	0		registry
	m	(Lhq;)Ldrc;	e	lambda$static$49
		p	0		registry
	m	(Lhq;)Ldst;	f	lambda$static$48
		p	0		registry
	m	(Lhq;)Ldrz;	g	lambda$static$47
		p	0		registry
	m	(Lhq;)Ldtf;	h	lambda$static$46
		p	0		registry
	m	(Lhq;)Ldrn;	i	lambda$static$45
		p	0		registry
	m	(Lhq;)Ldsc;	j	lambda$static$44
		p	0		registry
	m	(Lhq;)Lduq;	k	lambda$static$43
		p	0		registry
	m	(Lhq;)Ldvr;	l	lambda$static$42
		p	0		registry
	m	(Lhq;)Ldvz;	m	lambda$static$41
		p	0		registry
	m	(Lhq;)Ldwg;	n	lambda$static$40
		p	0		registry
	m	(Lhq;)Ldnw;	o	lambda$static$39
		p	0		registry
	m	(Lhq;)Ldmx;	p	lambda$static$38
		p	0		registry
	m	(Lhq;)Ldma;	q	lambda$static$37
		p	0		registry
	m	(Lhq;)Ldtq;	r	lambda$static$36
		p	0		registry
	m	(Lhq;)Lbge;	s	lambda$static$35
		p	0		registry
	m	(Lhq;)Lbgc;	t	lambda$static$34
		p	0		registry
	m	(Lhq;)Legr;	u	lambda$static$33
		p	0		registry
	m	(Lhq;)Legc;	v	lambda$static$32
		p	0		registry
	m	(Lhq;)Legj;	w	lambda$static$31
		p	0		registry
	m	(Lhq;)Lefq;	x	lambda$static$30
		p	0		registry
	m	(Lhq;)Leee;	y	lambda$static$29
		p	0		registry
	m	(Lhq;)Ledk;	z	lambda$static$28
		p	0		registry
	f	Lgz;	A	VILLAGER_PROFESSION
	f	Lhq;	B	POINT_OF_INTEREST_TYPE
	f	Lgz;	C	MEMORY_MODULE_TYPE
	f	Lgz;	D	SENSOR_TYPE
	f	Lhq;	E	SCHEDULE
	f	Lhq;	F	ACTIVITY
	f	Lhq;	G	LOOT_POOL_ENTRY_TYPE
	f	Lhq;	H	LOOT_FUNCTION_TYPE
	f	Lhq;	I	LOOT_CONDITION_TYPE
	f	Lhq;	J	LOOT_NUMBER_PROVIDER_TYPE
	f	Lhq;	K	LOOT_NBT_PROVIDER_TYPE
	f	Lhq;	L	LOOT_SCORE_PROVIDER_TYPE
	f	Lhq;	M	FLOAT_PROVIDER_TYPE
	f	Lhq;	N	INT_PROVIDER_TYPE
	f	Lhq;	O	HEIGHT_PROVIDER_TYPE
	f	Lhq;	P	BLOCK_PREDICATE_TYPE
	f	Lhq;	Q	CARVER
	f	Lhq;	R	FEATURE
	f	Lhq;	S	STRUCTURE_PLACEMENT
	f	Lhq;	T	STRUCTURE_PIECE
	f	Lhq;	U	STRUCTURE_TYPE
	f	Lhq;	V	PLACEMENT_MODIFIER_TYPE
	f	Lhq;	W	BLOCKSTATE_PROVIDER_TYPE
	f	Lhq;	X	FOLIAGE_PLACER_TYPE
	f	Lhq;	Y	TRUNK_PLACER_TYPE
	f	Lhq;	Z	ROOT_PLACER_TYPE
	f	Laew;	a	ROOT_REGISTRY_NAME
	f	Lhq;	aa	TREE_DECORATOR_TYPE
	f	Lhq;	ab	FEATURE_SIZE_TYPE
	f	Lhq;	ac	BIOME_SOURCE
	f	Lhq;	ad	CHUNK_GENERATOR
	f	Lhq;	ae	MATERIAL_CONDITION
	f	Lhq;	af	MATERIAL_RULE
	f	Lhq;	ag	DENSITY_FUNCTION_TYPE
	f	Lhq;	ah	STRUCTURE_PROCESSOR
	f	Lhq;	ai	STRUCTURE_POOL_ELEMENT
	f	Lhq;	aj	CAT_VARIANT
	f	Lhq;	ak	FROG_VARIANT
	f	Lhq;	al	BANNER_PATTERN
	f	Lhq;	am	INSTRUMENT
	f	Lhq;	an	DECORATED_POT_PATTERNS
	f	Lhq;	ao	CREATIVE_MODE_TAB
	f	Lhq;	ap	REGISTRY
	f	Lorg/slf4j/Logger;	aq	LOGGER
	f	Ljava/util/Map;	ar	LOADERS
	f	Lhz;	as	WRITABLE_REGISTRY
	f	Lgz;	b	GAME_EVENT
	f	Lhq;	c	SOUND_EVENT
	f	Lgz;	d	FLUID
	f	Lhq;	e	MOB_EFFECT
	f	Lgz;	f	BLOCK
	f	Lhq;	g	ENCHANTMENT
	f	Lgz;	h	ENTITY_TYPE
	f	Lgz;	i	ITEM
	f	Lgz;	j	POTION
	f	Lhq;	k	PARTICLE_TYPE
	f	Lhq;	l	BLOCK_ENTITY_TYPE
	f	Lgz;	m	PAINTING_VARIANT
	f	Lhq;	n	CUSTOM_STAT
	f	Lgz;	o	CHUNK_STATUS
	f	Lhq;	p	RULE_TEST
	f	Lhq;	q	RULE_BLOCK_ENTITY_MODIFIER
	f	Lhq;	r	POS_RULE_TEST
	f	Lhq;	s	MENU
	f	Lhq;	t	RECIPE_TYPE
	f	Lhq;	u	RECIPE_SERIALIZER
	f	Lhq;	v	ATTRIBUTE
	f	Lhq;	w	POSITION_SOURCE_TYPE
	f	Lhq;	x	COMMAND_ARGUMENT_TYPE
	f	Lhq;	y	STAT_TYPE
	f	Lgz;	z	VILLAGER_TYPE
c	jb$a	net/minecraft/core/registries/BuiltInRegistries$RegistryBootstrap
	m	(Lhq;)Ljava/lang/Object;	run	run
		p	1		registry
c	jc	net/minecraft/core/registries/Registries
	m	(Laev;)Laev;	a	levelStemToLevel
		p	0		key
	m	(Ljava/lang/String;)Laev;	a	createRegistryKey
		p	0		id
	m	(Laev;)Laev;	b	levelToLevelStem
		p	0		key
	f	Laev;	A	HEIGHT_PROVIDER_TYPE
	f	Laev;	B	INSTRUMENT
	f	Laev;	C	INT_PROVIDER_TYPE
	f	Laev;	D	ITEM
	f	Laev;	E	LOOT_CONDITION_TYPE
	f	Laev;	F	LOOT_FUNCTION_TYPE
	f	Laev;	G	LOOT_NBT_PROVIDER_TYPE
	f	Laev;	H	LOOT_NUMBER_PROVIDER_TYPE
	f	Laev;	I	LOOT_POOL_ENTRY_TYPE
	f	Laev;	J	LOOT_SCORE_PROVIDER_TYPE
	f	Laev;	K	MATERIAL_CONDITION
	f	Laev;	L	MATERIAL_RULE
	f	Laev;	M	MEMORY_MODULE_TYPE
	f	Laev;	N	MENU
	f	Laev;	O	MOB_EFFECT
	f	Laev;	P	PAINTING_VARIANT
	f	Laev;	Q	PARTICLE_TYPE
	f	Laev;	R	PLACEMENT_MODIFIER_TYPE
	f	Laev;	S	POINT_OF_INTEREST_TYPE
	f	Laev;	T	POSITION_SOURCE_TYPE
	f	Laev;	U	POS_RULE_TEST
	f	Laev;	V	POTION
	f	Laev;	W	RECIPE_SERIALIZER
	f	Laev;	X	RECIPE_TYPE
	f	Laev;	Y	ROOT_PLACER_TYPE
	f	Laev;	Z	RULE_TEST
	f	Laev;	aA	PROCESSOR_LIST
	f	Laev;	aB	STRUCTURE_SET
	f	Laev;	aC	TEMPLATE_POOL
	f	Laev;	aD	TRIM_MATERIAL
	f	Laev;	aE	TRIM_PATTERN
	f	Laev;	aF	WORLD_PRESET
	f	Laev;	aG	MULTI_NOISE_BIOME_SOURCE_PARAMETER_LIST
	f	Laev;	aH	DIMENSION
	f	Laev;	aI	LEVEL_STEM
	f	Laev;	a	ACTIVITY
	f	Laev;	aa	RULE_BLOCK_ENTITY_MODIFIER
	f	Laev;	ab	SCHEDULE
	f	Laev;	ac	SENSOR_TYPE
	f	Laev;	ad	SOUND_EVENT
	f	Laev;	ae	STAT_TYPE
	f	Laev;	af	STRUCTURE_PIECE
	f	Laev;	ag	STRUCTURE_PLACEMENT
	f	Laev;	ah	STRUCTURE_POOL_ELEMENT
	f	Laev;	ai	STRUCTURE_PROCESSOR
	f	Laev;	aj	STRUCTURE_TYPE
	f	Laev;	ak	TREE_DECORATOR_TYPE
	f	Laev;	al	TRUNK_PLACER_TYPE
	f	Laev;	am	VILLAGER_PROFESSION
	f	Laev;	an	VILLAGER_TYPE
	f	Laev;	ao	DECORATED_POT_PATTERNS
	f	Laev;	ap	BIOME
	f	Laev;	aq	CHAT_TYPE
	f	Laev;	ar	CONFIGURED_CARVER
	f	Laev;	as	CONFIGURED_FEATURE
	f	Laev;	at	DENSITY_FUNCTION
	f	Laev;	au	DIMENSION_TYPE
	f	Laev;	av	FLAT_LEVEL_GENERATOR_PRESET
	f	Laev;	aw	NOISE_SETTINGS
	f	Laev;	ax	NOISE
	f	Laev;	ay	PLACED_FEATURE
	f	Laev;	az	STRUCTURE
	f	Laev;	b	ATTRIBUTE
	f	Laev;	c	BANNER_PATTERN
	f	Laev;	d	BIOME_SOURCE
	f	Laev;	e	BLOCK
	f	Laev;	f	BLOCK_ENTITY_TYPE
	f	Laev;	g	BLOCK_PREDICATE_TYPE
	f	Laev;	h	BLOCK_STATE_PROVIDER_TYPE
	f	Laev;	i	CARVER
	f	Laev;	j	CAT_VARIANT
	f	Laev;	k	CHUNK_GENERATOR
	f	Laev;	l	CHUNK_STATUS
	f	Laev;	m	COMMAND_ARGUMENT_TYPE
	f	Laev;	n	CREATIVE_MODE_TAB
	f	Laev;	o	CUSTOM_STAT
	f	Laev;	p	DAMAGE_TYPE
	f	Laev;	q	DENSITY_FUNCTION_TYPE
	f	Laev;	r	ENCHANTMENT
	f	Laev;	s	ENTITY_TYPE
	f	Laev;	t	FEATURE
	f	Laev;	u	FEATURE_SIZE_TYPE
	f	Laev;	v	FLOAT_PROVIDER_TYPE
	f	Laev;	w	FLUID
	f	Laev;	x	FOLIAGE_PLACER_TYPE
	f	Laev;	y	FROG_VARIANT
	f	Laev;	z	GAME_EVENT
c	jd	net/minecraft/core/registries/package-info
c	je	net/minecraft/data/BlockFamilies
	m	()Ljava/util/stream/Stream;	a	getAllFamilies
	m	(Lcsv;)Ljf$a;	a	familyBuilder
		p	0		baseBlock
	f	Ljf;	A	EXPOSED_CUT_COPPER
	f	Ljf;	B	WAXED_EXPOSED_COPPER
	f	Ljf;	C	WAXED_EXPOSED_CUT_COPPER
	f	Ljf;	D	WEATHERED_COPPER
	f	Ljf;	E	WEATHERED_CUT_COPPER
	f	Ljf;	F	WAXED_WEATHERED_COPPER
	f	Ljf;	G	WAXED_WEATHERED_CUT_COPPER
	f	Ljf;	H	OXIDIZED_COPPER
	f	Ljf;	I	OXIDIZED_CUT_COPPER
	f	Ljf;	J	WAXED_OXIDIZED_COPPER
	f	Ljf;	K	WAXED_OXIDIZED_CUT_COPPER
	f	Ljf;	L	COBBLESTONE
	f	Ljf;	M	MOSSY_COBBLESTONE
	f	Ljf;	N	DIORITE
	f	Ljf;	O	POLISHED_DIORITE
	f	Ljf;	P	GRANITE
	f	Ljf;	Q	POLISHED_GRANITE
	f	Ljf;	R	NETHER_BRICKS
	f	Ljf;	S	RED_NETHER_BRICKS
	f	Ljf;	T	PRISMARINE
	f	Ljf;	U	PURPUR
	f	Ljf;	V	PRISMARINE_BRICKS
	f	Ljf;	W	DARK_PRISMARINE
	f	Ljf;	X	QUARTZ
	f	Ljf;	Y	SMOOTH_QUARTZ
	f	Ljf;	Z	SANDSTONE
	f	Ljf;	a	ACACIA_PLANKS
	f	Ljf;	aa	CUT_SANDSTONE
	f	Ljf;	ab	SMOOTH_SANDSTONE
	f	Ljf;	ac	RED_SANDSTONE
	f	Ljf;	ad	CUT_RED_SANDSTONE
	f	Ljf;	ae	SMOOTH_RED_SANDSTONE
	f	Ljf;	af	STONE
	f	Ljf;	ag	STONE_BRICK
	f	Ljf;	ah	DEEPSLATE
	f	Ljf;	ai	COBBLED_DEEPSLATE
	f	Ljf;	aj	POLISHED_DEEPSLATE
	f	Ljf;	ak	DEEPSLATE_BRICKS
	f	Ljf;	al	DEEPSLATE_TILES
	f	Ljava/util/Map;	am	MAP
	f	Ljava/lang/String;	an	RECIPE_GROUP_PREFIX_WOODEN
	f	Ljava/lang/String;	ao	RECIPE_UNLOCKED_BY_HAS_PLANKS
	f	Ljf;	b	CHERRY_PLANKS
	f	Ljf;	c	BIRCH_PLANKS
	f	Ljf;	d	CRIMSON_PLANKS
	f	Ljf;	e	JUNGLE_PLANKS
	f	Ljf;	f	OAK_PLANKS
	f	Ljf;	g	DARK_OAK_PLANKS
	f	Ljf;	h	SPRUCE_PLANKS
	f	Ljf;	i	WARPED_PLANKS
	f	Ljf;	j	MANGROVE_PLANKS
	f	Ljf;	k	BAMBOO_PLANKS
	f	Ljf;	l	BAMBOO_MOSAIC
	f	Ljf;	m	MUD_BRICKS
	f	Ljf;	n	ANDESITE
	f	Ljf;	o	POLISHED_ANDESITE
	f	Ljf;	p	BLACKSTONE
	f	Ljf;	q	POLISHED_BLACKSTONE
	f	Ljf;	r	POLISHED_BLACKSTONE_BRICKS
	f	Ljf;	s	BRICKS
	f	Ljf;	t	END_STONE_BRICKS
	f	Ljf;	u	MOSSY_STONE_BRICKS
	f	Ljf;	v	COPPER_BLOCK
	f	Ljf;	w	CUT_COPPER
	f	Ljf;	x	WAXED_COPPER_BLOCK
	f	Ljf;	y	WAXED_CUT_COPPER
	f	Ljf;	z	EXPOSED_COPPER
c	jf	net/minecraft/data/BlockFamily
	m	(Lcsv;)V	<init>	<init>
		p	1		baseBlock
	m	()Lcsv;	a	getBaseBlock
	m	(Lcec;)Z	a	shouldGenerateRecipe
		p	1		enabledFeatures
	m	(Ljf$b;)Lcsv;	a	get
		p	1		variant
	m	()Ljava/util/Map;	b	getVariants
	m	()Z	c	shouldGenerateModel
	m	()Ljava/util/Optional;	d	getRecipeGroupPrefix
	m	()Ljava/util/Optional;	e	getRecipeUnlockedBy
	f	Lcsv;	a	baseBlock
	f	Ljava/util/Map;	b	variants
	f	Lcec;	c	requiredFeatures
	f	Z	d	generateModel
	f	Z	e	generateRecipe
	f	Ljava/lang/String;	f	recipeGroupPrefix
	f	Ljava/lang/String;	g	recipeUnlockedBy
c	jf$a	net/minecraft/data/BlockFamily$Builder
	m	(Lcsv;)V	<init>	<init>
		p	1		baseBlock
	m	()Ljf;	a	getFamily
	m	(Lcsv;)Ljf$a;	a	button
		p	1		block
	m	(Lcsv;Lcsv;)Ljf$a;	a	sign
		p	1		block
		p	2		wallBlock
	m	(Ljava/lang/String;)Ljf$a;	a	recipeGroupPrefix
		p	1		group
	m	([Lcea;)Ljf$a;	a	featureLockedBehind
		p	1		features
	m	()Ljf$a;	b	dontGenerateModel
	m	(Lcsv;)Ljf$a;	b	chiseled
		p	1		block
	m	(Ljava/lang/String;)Ljf$a;	b	recipeUnlockedBy
		p	1		unlockCriterionName
	m	()Ljf$a;	c	dontGenerateRecipe
	m	(Lcsv;)Ljf$a;	c	mosaic
		p	1		block
	m	(Lcsv;)Ljf$a;	d	cracked
		p	1		block
	m	(Lcsv;)Ljf$a;	e	cut
		p	1		block
	m	(Lcsv;)Ljf$a;	f	door
		p	1		block
	m	(Lcsv;)Ljf$a;	g	customFence
		p	1		block
	m	(Lcsv;)Ljf$a;	h	fence
		p	1		block
	m	(Lcsv;)Ljf$a;	i	customFenceGate
		p	1		block
	m	(Lcsv;)Ljf$a;	j	fenceGate
		p	1		block
	m	(Lcsv;)Ljf$a;	k	slab
		p	1		block
	m	(Lcsv;)Ljf$a;	l	stairs
		p	1		block
	m	(Lcsv;)Ljf$a;	m	pressurePlate
		p	1		block
	m	(Lcsv;)Ljf$a;	n	polished
		p	1		block
	m	(Lcsv;)Ljf$a;	o	trapdoor
		p	1		block
	m	(Lcsv;)Ljf$a;	p	wall
		p	1		block
	f	Ljf;	a	family
c	jf$b	net/minecraft/data/BlockFamily$Variant
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()Ljava/lang/String;	a	getRecipeGroup
	m	()[Ljf$b;	b	$values
	f	Ljf$b;	a	BUTTON
	f	Ljf$b;	b	CHISELED
	f	Ljf$b;	c	CRACKED
	f	Ljf$b;	d	CUT
	f	Ljf$b;	e	DOOR
	f	Ljf$b;	f	CUSTOM_FENCE
	f	Ljf$b;	g	FENCE
	f	Ljf$b;	h	CUSTOM_FENCE_GATE
	f	Ljf$b;	i	FENCE_GATE
	f	Ljf$b;	j	MOSAIC
	f	Ljf$b;	k	SIGN
	f	Ljf$b;	l	SLAB
	f	Ljf$b;	m	STAIRS
	f	Ljf$b;	n	PRESSURE_PLATE
	f	Ljf$b;	o	POLISHED
	f	Ljf$b;	p	TRAPDOOR
	f	Ljf$b;	q	WALL
	f	Ljf$b;	r	WALL_SIGN
	f	Ljava/lang/String;	s	recipeGroup
	f	[Ljf$b;	t	$VALUES
c	jg	net/minecraft/data/CachedOutput
	m	(Ljava/nio/file/Path;[BLcom/google/common/hash/HashCode;)V	a	lambda$static$0
		p	0		path
		p	1		data
		p	2		hashCode
	m	(Ljava/nio/file/Path;[BLcom/google/common/hash/HashCode;)V	writeIfNeeded	writeIfNeeded
		p	1		path
		p	2		data
		p	3		hashCode
	f	Ljg;	a	NO_CACHE
c	jh	net/minecraft/data/DataGenerator
	m	(Ljava/nio/file/Path;Lad;Z)V	<init>	<init>
		p	1		outputPath
		p	2		gameVersion
		p	3		ignoreCache
	m	()V	a	run
	m	(Ljj;Lcom/google/common/base/Stopwatch;Ljava/lang/String;Lji;)V	a	lambda$run$0
		p	3		name
		p	4		provider
	m	(Z)Ljh$a;	a	getVanillaPack
		p	1		shouldRun
	m	(ZLjava/lang/String;)Ljh$a;	a	getBuiltinDatapack
		p	1		shouldRun
		p	2		packName
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/nio/file/Path;	b	rootOutputFolder
	f	Ljk;	c	vanillaPackOutput
	f	Ljava/util/Set;	d	allProviderIds
	f	Ljava/util/Map;	e	providersToRun
	f	Lad;	f	version
	f	Z	g	alwaysGenerate
c	jh$a	net/minecraft/data/DataGenerator$PackGenerator
	m	(Ljh;ZLjava/lang/String;Ljk;)V	<init>	<init>
		p	2		shouldRun
		p	3		name
		p	4		output
	m	(Lji$a;)Lji;	a	addProvider
		p	1		factory
	f	Ljh;	a	this$0
	f	Z	b	toRun
	f	Ljava/lang/String;	c	providerPrefix
	f	Ljk;	d	output
c	ji	net/minecraft/data/DataProvider
	m	()Ljava/lang/String;	a	getName
	m	(Lcom/google/gson/JsonElement;Ljg;Ljava/nio/file/Path;)V	a	lambda$saveStable$2
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;)V	a	lambda$static$0
		p	0		map
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$static$1
		p	0		key
	m	(Ljg;)Ljava/util/concurrent/CompletableFuture;	a	run
		p	1		writer
	m	(Ljg;Lcom/google/gson/JsonElement;Ljava/nio/file/Path;)Ljava/util/concurrent/CompletableFuture;	a	saveStable
		p	0		writer
		p	1		json
		p	2		path
	m	(Ljg;Lcom/mojang/serialization/Codec;Ljava/lang/Object;Ljava/nio/file/Path;)Ljava/util/concurrent/CompletableFuture;	a	saveStable
		p	0		writer
		p	1		codec
		p	2		value
		p	3		path
	f	Ljava/util/function/ToIntFunction;	a	FIXED_ORDER_FIELDS
	f	Ljava/util/Comparator;	b	KEY_COMPARATOR
	f	Lorg/slf4j/Logger;	c	LOGGER
c	ji$a	net/minecraft/data/DataProvider$Factory
	m	(Ljk;)Lji;	create	create
		p	1		output
c	jj	net/minecraft/data/HashCache
	m	(Ljava/nio/file/Path;Ljava/util/Collection;Lad;)V	<init>	<init>
		p	1		root
		p	2		providerNames
		p	3		gameVersion
	m	()V	a	purgeStaleAndWrite
	m	(Ljava/lang/String;)Z	a	shouldRunInThisVersion
		p	1		providerName
	m	(Ljava/lang/String;Ljj$d;)Ljava/util/concurrent/CompletableFuture;	a	generateUpdate
		p	1		providerName
		p	2		runner
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljj$b;	a	readCache
		p	0		root
		p	1		dataProviderPath
	m	(Ljava/util/Set;Ljava/lang/String;Ljj$b;)V	a	lambda$purgeStaleAndWrite$1
		p	2		providerName
		p	3		cachedData
	m	(Ljj$a;Ljava/lang/Object;)Ljj$e;	a	lambda$generateUpdate$0
		p	1		void_
	m	(Ljj$e;)V	a	applyUpdate
		p	1		runResult
	m	(Lorg/apache/commons/lang3/mutable/MutableInt;Ljava/util/Set;Lorg/apache/commons/lang3/mutable/MutableInt;Ljava/nio/file/Path;)V	a	lambda$purgeStaleAndWrite$2
		p	4		path
	m	(Ljava/lang/String;)Ljava/nio/file/Path;	b	getProviderCachePath
		p	1		providerName
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/lang/String;	b	HEADER_MARKER
	f	Ljava/nio/file/Path;	c	rootDir
	f	Ljava/nio/file/Path;	d	cacheDir
	f	Ljava/lang/String;	e	versionId
	f	Ljava/util/Map;	f	caches
	f	Ljava/util/Set;	g	cachesToWrite
	f	Ljava/util/Set;	h	cachePaths
	f	I	i	initialCount
	f	I	j	writes
c	jj$a	net/minecraft/data/HashCache$CacheUpdater
	m	(Ljj;Ljava/lang/String;Ljava/lang/String;Ljj$b;)V	<init>	<init>
		p	2		providerName
		p	3		version
		p	4		oldCache
	m	()Ljj$e;	a	close
	m	(Ljava/nio/file/Path;Lcom/google/common/hash/HashCode;)Z	a	shouldWrite
		p	1		path
		p	2		hashCode
	m	(Ljava/nio/file/Path;[BLcom/google/common/hash/HashCode;)V	writeIfNeeded	writeIfNeeded
		p	1		path
		p	2		data
		p	3		hashCode
	f	Ljj;	b	this$0
	f	Ljava/lang/String;	c	provider
	f	Ljj$b;	d	oldCache
	f	Ljj$c;	e	newCache
	f	Ljava/util/concurrent/atomic/AtomicInteger;	f	writes
	f	Z	g	closed
c	jj$b	net/minecraft/data/HashCache$ProviderCache
	m	()I	a	count
	m	(Lcom/google/common/collect/ImmutableMap$Builder;Ljava/nio/file/Path;Ljava/lang/String;)V	a	lambda$load$0
		p	2		line
	m	(Ljava/nio/file/Path;)Lcom/google/common/hash/HashCode;	a	get
		p	1		path
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljj$b;	a	load
		p	0		root
		p	1		dataProviderPath
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/lang/String;)V	a	save
		p	1		root
		p	2		dataProviderPath
		p	3		description
	m	()Ljava/lang/String;	b	version
	m	()Lcom/google/common/collect/ImmutableMap;	c	data
	f	Ljava/lang/String;	a	version
	f	Lcom/google/common/collect/ImmutableMap;	b	data
c	jj$c	net/minecraft/data/HashCache$ProviderCacheBuilder
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		version
	m	()Ljj$b;	a	build
	m	(Ljava/nio/file/Path;Lcom/google/common/hash/HashCode;)V	a	put
		p	1		path
		p	2		hashCode
	m	()Ljava/lang/String;	b	version
	m	()Ljava/util/concurrent/ConcurrentMap;	c	data
	f	Ljava/lang/String;	a	version
	f	Ljava/util/concurrent/ConcurrentMap;	b	data
c	jj$d	net/minecraft/data/HashCache$UpdateFunction
	m	(Ljg;)Ljava/util/concurrent/CompletableFuture;	update	update
		p	1		writer
c	jj$e	net/minecraft/data/HashCache$UpdateResult
	m	()Ljava/lang/String;	a	providerId
	m	()Ljj$b;	b	cache
	m	()I	c	writes
	f	Ljava/lang/String;	a	providerId
	f	Ljj$b;	b	cache
	f	I	c	writes
c	jk	net/minecraft/data/PackOutput
	m	(Ljava/nio/file/Path;)V	<init>	<init>
		p	1		path
	m	()Ljava/nio/file/Path;	a	getOutputFolder
	m	(Ljk$b;)Ljava/nio/file/Path;	a	getOutputFolder
		p	1		outputType
	m	(Ljk$b;Ljava/lang/String;)Ljk$a;	a	createPathProvider
		p	1		outputType
		p	2		directoryName
	f	Ljava/nio/file/Path;	a	outputFolder
c	jk$a	net/minecraft/data/PackOutput$PathProvider
	m	(Ljk;Ljk$b;Ljava/lang/String;)V	<init>	<init>
		p	1		dataGenerator
		p	2		outputType
		p	3		directoryName
	m	(Laew;)Ljava/nio/file/Path;	a	json
		p	1		id
	m	(Laew;Ljava/lang/String;)Ljava/nio/file/Path;	a	file
		p	1		id
		p	2		fileExtension
	f	Ljava/nio/file/Path;	a	root
	f	Ljava/lang/String;	b	kind
c	jk$b	net/minecraft/data/PackOutput$Target
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		path
	m	()[Ljk$b;	a	$values
	f	Ljk$b;	a	DATA_PACK
	f	Ljk$b;	b	RESOURCE_PACK
	f	Ljk$b;	c	REPORTS
	f	Ljava/lang/String;	d	directory
	f	[Ljk$b;	e	$VALUES
c	jl	net/minecraft/data/advancements/AdvancementProvider
	m	(Ljk;Ljava/util/concurrent/CompletableFuture;Ljava/util/List;)V	<init>	<init>
		p	1		output
		p	2		registryLookupFuture
		p	3		tabGenerators
	m	()Ljava/lang/String;	a	getName
	m	(I)[Ljava/util/concurrent/CompletableFuture;	a	lambda$run$1
	m	(Ljava/util/Set;Ljava/util/List;Ljg;Laf;)V	a	lambda$run$0
		p	4		advancement
	m	(Ljg;)Ljava/util/concurrent/CompletableFuture;	a	run
		p	1		writer
	m	(Ljg;Lhg$b;)Ljava/util/concurrent/CompletionStage;	a	lambda$run$2
		p	2		lookup
	f	Ljk$a;	d	pathProvider
	f	Ljava/util/List;	e	subProviders
	f	Ljava/util/concurrent/CompletableFuture;	f	registries
c	jm	net/minecraft/data/advancements/AdvancementSubProvider
	m	(Lhg$b;Ljava/util/function/Consumer;)V	a	generate
		p	1		lookup
		p	2		exporter
c	jn	net/minecraft/data/advancements/package-info
c	jo	net/minecraft/data/advancements/packs/VanillaAdvancementProvider
	m	(Ljk;Ljava/util/concurrent/CompletableFuture;)Ljl;	a	create
		p	0		output
		p	1		registryLookupFuture
c	jp	net/minecraft/data/advancements/packs/VanillaAdventureAdvancements
	m	(I)[Ljava/lang/String;	a	lambda$respectingTheRemnantsCriterions$5
	m	(Lae$a;)Lae$a;	a	smithingWithStyle
		p	0		builder
	m	(Lae$a;Ljava/util/List;)Lae$a;	a	addBiomes
		p	0		builder
		p	1		biomes
	m	(Lbiu;Lcja;)Lam;	a	lookAtThroughItem
		p	0		entity
		p	1		item
	m	(Lcl$d;Ljava/util/Optional;)Lam;	a	fireCountAndBystander
		p	0		range
		p	1		entity
	m	(Lcsv;)Lam;	a	placedBlockReadByComparator
		p	0		block
	m	(Lcsv;Lha;)Lefd$a;	a	lambda$placedComparatorReadingBlock$2
		p	1		facing
	m	(Lha;)Lefp$a;	a	lambda$placedBlockReadByComparator$0
		p	0		facing
	m	(Lhg$b;Ljava/util/function/Consumer;)V	a	generate
		p	1		lookup
		p	2		exporter
	m	(Ljava/util/Map;Lae$a;Lcja;)V	a	lambda$smithingWithStyle$4
		p	2		template
	m	(Ljava/util/function/Consumer;Laf;Lcrh$a;)V	a	createAdventuringTime
		p	0		exporter
		p	1		parent
		p	2		preset
	m	(I)[Lefp$a;	b	lambda$placedComparatorReadingBlock$3
	m	(Lae$a;)Lae$a;	b	craftingANewLook
		p	0		builder
	m	(Lcsv;)Lam;	b	placedComparatorReadingBlock
		p	0		block
	m	(I)[Lefp$a;	c	lambda$placedBlockReadByComparator$1
	m	(Lae$a;)Lae$a;	c	respectingTheRemnantsCriterions
		p	0		builder
	m	(Lae$a;)Lae$a;	d	addMobsToKill
		p	0		builder
	f	I	a	DISTANCE_FROM_BOTTOM_TO_TOP
	f	I	b	Y_COORDINATE_AT_TOP
	f	I	c	Y_COORDINATE_AT_BOTTOM
	f	I	d	BEDROCK_THICKNESS
	f	[Lbiu;	e	MOBS_TO_KILL
c	jq	net/minecraft/data/advancements/packs/VanillaHusbandryAdvancements
	m	(Lae$a;)Lae$a;	a	addLeashedFrogVariants
		p	0		builder
	m	(Lae$a;Lbiu;)V	a	lambda$addBreedable$2
		p	1		type
	m	(Lae$a;Lhe$c;)V	a	lambda$addLeashedFrogVariants$0
		p	1		variant
	m	(Lae$a;Ljava/util/Map$Entry;)V	a	lambda$addCatVariants$3
	m	(Lae$a;Ljava/util/stream/Stream;Ljava/util/stream/Stream;)Lae$a;	a	addBreedable
		p	0		advancementBuilder
		p	1		breedableAnimals
		p	2		eggLayingAnimals
	m	(Laf;Ljava/util/function/Consumer;Ljava/util/stream/Stream;Ljava/util/stream/Stream;)Laf;	a	createBreedAllAnimalsAdvancement
		p	0		parent
		p	1		exporter
		p	2		breedableAnimals
		p	3		eggLayingAnimals
	m	(Lhg$b;Ljava/util/function/Consumer;)V	a	generate
		p	1		lookup
		p	2		exporter
	m	(Lae$a;)Lae$a;	b	addFood
		p	0		builder
	m	(Lae$a;Lbiu;)V	b	lambda$addBreedable$1
		p	1		type
	m	(Lae$a;)Lae$a;	c	addFishBuckets
		p	0		builder
	m	(Lae$a;)Lae$a;	d	addFish
		p	0		builder
	m	(Lae$a;)Lae$a;	e	addCatVariants
		p	0		builder
	f	Ljava/util/List;	a	BREEDABLE_ANIMALS
	f	Ljava/util/List;	b	INDIRECTLY_BREEDABLE_ANIMALS
	f	[Lcja;	c	FISH
	f	[Lcja;	d	FISH_BUCKETS
	f	[Lcja;	e	EDIBLE_ITEMS
	f	[Lcja;	f	WAX_SCRAPING_TOOLS
c	jr	net/minecraft/data/advancements/packs/VanillaNetherAdvancements
	m	(Lhg$b;Ljava/util/function/Consumer;)V	a	generate
		p	1		lookup
		p	2		exporter
	f	Lbc;	a	DISTRACT_PIGLIN_PLAYER_ARMOR_PREDICATE
c	js	net/minecraft/data/advancements/packs/VanillaStoryAdvancements
	m	(Lhg$b;Ljava/util/function/Consumer;)V	a	generate
		p	1		lookup
		p	2		exporter
c	jt	net/minecraft/data/advancements/packs/VanillaTheEndAdvancements
	m	(Lhg$b;Ljava/util/function/Consumer;)V	a	generate
		p	1		lookup
		p	2		exporter
c	ju	net/minecraft/data/advancements/packs/package-info
c	jv	net/minecraft/data/info/BiomeParametersDumpReport
	m	(Ljk;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
		p	1		output
		p	2		registryLookupFuture
	m	()Ljava/lang/String;	a	getName
	m	(I)[Ljava/util/concurrent/CompletableFuture;	a	lambda$run$1
	m	(Laew;)Ljava/nio/file/Path;	a	createPath
		p	1		id
	m	(Ljava/nio/file/Path;Ljava/lang/String;)V	a	lambda$dumpValue$3
		p	1		error
	m	(Ljava/nio/file/Path;Ljg;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/Encoder;Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture;	a	dumpValue
		p	0		path
		p	1		writer
		p	2		ops
		p	3		codec
		p	4		biomeSource
	m	(Ljava/util/List;Ljg;Lcom/mojang/serialization/DynamicOps;Lcrh$a;Lcrc$c;)V	a	lambda$run$0
		p	4		preset
		p	5		entries
	m	(Ljg;)Ljava/util/concurrent/CompletableFuture;	a	run
		p	1		writer
	m	(Ljg;Lhg$b;)Ljava/util/concurrent/CompletionStage;	a	lambda$run$2
		p	2		lookup
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	Ljava/nio/file/Path;	e	topPath
	f	Ljava/util/concurrent/CompletableFuture;	f	registries
	f	Lcom/mojang/serialization/MapCodec;	g	ENTRY_CODEC
	f	Lcom/mojang/serialization/Codec;	h	CODEC
c	jw	net/minecraft/data/info/BlockListReport
	m	(Ljk;)V	<init>	<init>
		p	1		output
	m	()Ljava/lang/String;	a	getName
	m	(Ljg;)Ljava/util/concurrent/CompletableFuture;	a	run
		p	1		writer
	f	Ljk;	d	output
c	jx	net/minecraft/data/info/CommandsReport
	m	(Ljk;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
		p	1		output
		p	2		registryLookupFuture
	m	()Ljava/lang/String;	a	getName
	m	(Ljg;)Ljava/util/concurrent/CompletableFuture;	a	run
		p	1		writer
	m	(Ljg;Ljava/nio/file/Path;Lhg$b;)Ljava/util/concurrent/CompletionStage;	a	lambda$run$0
		p	2		lookup
	f	Ljk;	d	output
	f	Ljava/util/concurrent/CompletableFuture;	e	registries
c	jy	net/minecraft/data/info/RegistryDumpReport
	m	(Ljk;)V	<init>	<init>
		p	1		output
	m	()Ljava/lang/String;	a	getName
	m	(Lcom/google/gson/JsonObject;Lhe$c;)V	a	lambda$run$0
		p	1		entry
	m	(Lhq;)Lcom/google/gson/JsonElement;	a	dumpRegistry
		p	0		registry
	m	(Lhq;Lcom/google/gson/JsonObject;Lhe$c;)V	a	lambda$dumpRegistry$1
		p	2		entry
	m	(Ljg;)Ljava/util/concurrent/CompletableFuture;	a	run
		p	1		writer
	f	Ljk;	d	output
c	jz	net/minecraft/data/info/package-info
c	ka	net/minecraft/data/loot/BlockLootSubProvider
	m	(Ljava/util/Set;Lcec;)V	<init>	<init>
		p	1		explosionImmuneItems
		p	2		requiredFeatures
	m	(Ljava/util/Set;Lcec;Ljava/util/Map;)V	<init>	<init>
		p	1		explosionImmuneItems
		p	2		requiredFeatures
		p	3		lootTables
	m	()Lecy$a;	a	noDrop
	m	(Lcpu;)Lecy$a;	a	createSingleItemTable
		p	1		drop
	m	(Lcpu;Leea;)Leea;	a	applyExplosionDecay
		p	1		drop
		p	2		builder
	m	(Lcpu;Lefi;)Lefi;	a	applyExplosionCondition
		p	1		drop
		p	2		builder
	m	(Lcpu;Legk;)Lecy$a;	a	createSingleItemTable
		p	1		drop
		p	2		count
	m	(Lcsv;)Lecy$a;	a	createSlabItemTable
		p	1		drop
	m	(Lcsv;Lcja;)Lecy$a;	a	createOreDrop
		p	1		dropWithSilkTouch
		p	2		drop
	m	(Lcsv;Lcja;Lcja;Lefp$a;)Lecy$a;	a	createCropDrops
		p	1		crop
		p	2		product
		p	3		seeds
		p	4		condition
	m	(Lcsv;Lcpu;)Lecy$a;	a	createSingleItemTableWithSilkTouch
		p	1		dropWithSilkTouch
		p	2		drop
	m	(Lcsv;Lcpu;Legk;)Lecy$a;	a	createSingleItemTableWithSilkTouch
		p	1		dropWithSilkTouch
		p	2		drop
		p	3		count
	m	(Lcsv;Lcsv;)Lecy$a;	a	createDoublePlantWithSeedDrops
		p	1		tallGrass
		p	2		grass
	m	(Lcsv;Lcsv;[F)Lecy$a;	a	createLeavesDrops
		p	1		leaves
		p	2		drop
		p	3		chance
	m	(Lcsv;Ldgm;Ljava/lang/Comparable;)Lecy$a;	a	createSinglePropConditionTable
		p	1		drop
		p	2		property
		p	3		value
	m	(Lcsv;Lecy$a;)V	a	add
		p	1		block
		p	2		lootTable
	m	(Lcsv;Ledj$a;)Lecy$a;	a	createSilkTouchDispatchTable
		p	0		drop
		p	1		child
	m	(Lcsv;Lefp$a;)Lecy$a;	a	createMultifaceBlockDrops
		p	1		drop
		p	2		condition
	m	(Lcsv;Lefp$a;Ledj$a;)Lecy$a;	a	createSelfDropDispatchTable
		p	0		drop
		p	1		conditionBuilder
		p	2		child
	m	(Lcsv;Lha;)Leed$a;	a	lambda$createMultifaceBlockDrops$1
	m	(Lcsv;Ljava/lang/Integer;)Leed$a;	a	lambda$createPetalsDrops$3
		p	1		flowerAmount
	m	(Lcsv;Ljava/util/function/Function;)V	a	add
		p	1		block
		p	2		lootTableFunction
	m	()V	b	generate
	m	(Lcpu;)Lecy$a;	b	createShearsOnlyDrop
		p	0		drop
	m	(Lcsv;)Lecy$a;	b	createNameableBlockEntityTable
		p	1		drop
	m	(Lcsv;Lcja;)Lecy$a;	b	createStemDrops
		p	1		stem
		p	2		drop
	m	(Lcsv;Lcpu;)Lecy$a;	b	createMushroomBlockDrop
		p	1		dropWithSilkTouch
		p	2		drop
	m	(Lcsv;Lcsv;)V	b	addNetherVinesDropTable
		p	1		block
		p	2		drop
	m	(Lcsv;Lcsv;[F)Lecy$a;	b	createOakLeavesDrops
		p	1		leaves
		p	2		drop
		p	3		chance
	m	(Lcsv;Ledj$a;)Lecy$a;	b	createShearsDispatchTable
		p	0		drop
		p	1		child
	m	(Lcsv;Ljava/lang/Integer;)Leed$a;	b	lambda$createCandleDrops$2
		p	1		candles
	m	(Lcpu;)Lecy$a;	c	createSilkTouchOnlyTable
		p	0		drop
	m	(Lcsv;)Lecy$a;	c	createShulkerBoxDrop
		p	1		drop
	m	(Lcsv;Lcja;)Lecy$a;	c	createAttachedStemDrops
		p	1		stem
		p	2		drop
	m	(Lcsv;Lcpu;)V	c	dropOther
		p	1		block
		p	2		drop
	m	(Lcsv;Lcsv;)V	c	otherWhenSilkTouch
		p	1		block
		p	2		drop
	m	(Lcsv;Ledj$a;)Lecy$a;	c	createSilkTouchOrShearsDispatchTable
		p	0		drop
		p	1		child
	m	(Lcsv;Ljava/lang/Integer;)Leed$a;	c	lambda$createStemDrops$0
	m	(Lcpu;)Lecy$a;	d	createPotFlowerItemTable
		p	1		drop
	m	(Lcsv;)Lecy$a;	d	createCopperOreDrops
		p	1		drop
	m	(Lcsv;)Lecy$a;	e	createLapisOreDrops
		p	1		drop
	m	(Lcsv;)Lecy$a;	f	createRedstoneOreDrops
		p	1		drop
	m	(Lcsv;)Lecy$a;	g	createBannerDrop
		p	1		drop
	m	(Ljava/util/function/BiConsumer;)V	generate	generate
		p	1		exporter
	m	(Lcsv;)Lecy$a;	h	createBeeNestDrop
		p	0		drop
	m	(Lcsv;)Lecy$a;	i	createBeeHiveDrop
		p	0		drop
	m	(Lcsv;)Lecy$a;	j	createCaveVinesDrop
		p	0		drop
	m	(Lcsv;)Lecy$a;	k	createGrassDrops
		p	1		dropWithShears
	m	(Lcsv;)Lecy$a;	l	createMangroveLeavesDrops
		p	1		leaves
	m	(Lcsv;)Lecy$a;	m	createDoublePlantShearsDrop
		p	0		seagrass
	m	(Lcsv;)Lecy$a;	n	createCandleDrops
		p	1		candle
	m	(Lcsv;)Lecy$a;	o	createPetalsDrops
		p	1		flowerbed
	m	(Lcsv;)Lecy$a;	p	createCandleCakeDrops
		p	0		candleCake
	m	(Lcsv;)Lecy$a;	q	createDoorTable
		p	1		block
	m	(Lcsv;)V	r	dropPottedContents
		p	1		block
	m	(Lcsv;)V	s	dropWhenSilkTouch
		p	1		block
	m	(Lcsv;)V	t	dropSelf
		p	1		block
	m	(Lcsv;)Lecy$a;	u	lambda$dropPottedContents$4
		p	1		flowerPot
	f	Lefp$a;	a	HAS_SILK_TOUCH
	f	Lefp$a;	b	HAS_NO_SILK_TOUCH
	f	Lefp$a;	c	HAS_SHEARS
	f	Ljava/util/Set;	d	explosionResistant
	f	Lcec;	e	enabledFeatures
	f	Ljava/util/Map;	f	map
	f	[F	g	NORMAL_LEAVES_SAPLING_CHANCES
	f	Lefp$a;	h	HAS_SHEARS_OR_SILK_TOUCH
	f	Lefp$a;	i	HAS_NO_SHEARS_OR_SILK_TOUCH
	f	[F	j	NORMAL_LEAVES_STICK_CHANCES
c	kb	net/minecraft/data/loot/EntityLootSubProvider
	m	(Lcec;)V	<init>	<init>
		p	1		requiredFeatures
	m	(Lcec;Lcec;)V	<init>	<init>
		p	1		requiredFeatures
		p	2		featureSet
	m	()V	a	generate
	m	(Lbiu;)Z	a	canHaveLootTable
		p	0		entityType
	m	(Lbiu;Laew;Lecy$a;)V	a	add
		p	1		entityType
		p	2		entityId
		p	3		lootTable
	m	(Lbiu;Lecy$a;)V	a	add
		p	1		entityType
		p	2		lootTable
	m	(Lbvc;)Lefp$a;	a	killedByFrogVariant
		p	1		variant
	m	(Lcpu;)Lecy$a;	a	createSheepTable
		p	0		item
	m	(Ljava/util/Set;Lhe$c;Ljava/util/function/BiConsumer;Laew;Lecy$a;)V	a	lambda$generate$0
		p	3		lootTableId
		p	4		lootTableBuilder
	m	(Ljava/util/Set;Ljava/util/function/BiConsumer;Lhe$c;)V	a	lambda$generate$1
		p	3		entityType
	m	()Lefp$a;	b	killedByFrog
	m	(Lbiu;)Ljava/util/Map;	b	lambda$add$2
		p	0		type
	m	(Ljava/util/function/BiConsumer;)V	generate	generate
		p	1		exporter
	f	Lbq$a;	a	ENTITY_ON_FIRE
	f	Ljava/util/Set;	b	SPECIAL_LOOT_TABLE_TYPES
	f	Lcec;	c	allowed
	f	Lcec;	d	required
	f	Ljava/util/Map;	e	map
c	kc	net/minecraft/data/loot/LootTableProvider
	m	(Ljk;Ljava/util/Set;Ljava/util/List;)V	<init>	<init>
		p	1		output
		p	2		lootTableIds
		p	3		lootTypeGenerators
	m	()Ljava/lang/String;	a	getName
	m	(I)[Ljava/util/concurrent/CompletableFuture;	a	lambda$run$5
	m	(Lecz;Laew;Lecy;)V	a	lambda$run$2
		p	1		id
		p	2		table
	m	(Ljava/lang/String;Ljava/lang/String;)V	a	lambda$run$3
		p	0		name
		p	1		message
	m	(Ljava/util/Map;Ljava/util/Map;Lkc$a;)V	a	lambda$run$1
		p	2		generator
	m	(Ljava/util/Map;Ljava/util/Map;Lkc$a;Laew;Lecy$a;)V	a	lambda$run$0
		p	3		id
		p	4		builder
	m	(Ljg;)Ljava/util/concurrent/CompletableFuture;	a	run
		p	1		writer
	m	(Ljg;Ljava/util/Map$Entry;)Ljava/util/concurrent/CompletableFuture;	a	lambda$run$4
		p	2		entry
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	Ljk$a;	e	pathProvider
	f	Ljava/util/Set;	f	requiredTables
	f	Ljava/util/List;	g	subProviders
c	kc$1	net/minecraft/data/loot/LootTableProvider$1
	m	(Lecs;)Ljava/lang/Object;	getElement	getElement
		p	1		key
	f	Ljava/util/Map;	a	val$tables
	f	Lkc;	b	this$0
c	kc$a	net/minecraft/data/loot/LootTableProvider$SubProviderEntry
	m	()Ljava/util/function/Supplier;	a	provider
	m	()Leez;	b	paramSet
	f	Ljava/util/function/Supplier;	a	provider
	f	Leez;	b	paramSet
c	kd	net/minecraft/data/loot/LootTableSubProvider
	m	(Ljava/util/function/BiConsumer;)V	generate	generate
		p	1		exporter
c	ke	net/minecraft/data/loot/package-info
c	kf	net/minecraft/data/loot/packs/TradeRebalanceChestLoot
	m	()Lecy$a;	a	pillagerOutpostLootTable
	m	()Lecy$a;	b	desertPyramidLootTable
	m	()Lecy$a;	c	ancientCityLootTable
	m	()Lecy$a;	d	jungleTempleLootTable
	m	(Ljava/util/function/BiConsumer;)V	generate	generate
		p	1		exporter
c	kg	net/minecraft/data/loot/packs/TradeRebalanceLootTableProvider
	m	(Ljk;)Lkc;	a	create
		p	0		output
c	kh	net/minecraft/data/loot/packs/VanillaArchaeologyLoot
	m	(Ljava/util/function/BiConsumer;)V	generate	generate
		p	1		exporter
c	ki	net/minecraft/data/loot/packs/VanillaBlockLoot
	m	(Lcsv;)Lecy$a;	A	lambda$generate$232
		p	0		block
	m	(Lki;Lcsv;)Lecy$a;	A	lambda$generate$156
		p	1		block
	m	(Lcsv;)Lecy$a;	B	lambda$generate$229
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	B	lambda$generate$155
		p	1		block
	m	(Lcsv;)Lecy$a;	C	lambda$generate$228
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	C	lambda$generate$154
		p	1		block
	m	(Lcsv;)Lecy$a;	D	lambda$generate$225
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	D	lambda$generate$153
		p	1		block
	m	(Lcsv;)Lecy$a;	E	lambda$generate$224
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	E	lambda$generate$152
		p	1		block
	m	(Lcsv;)Lecy$a;	F	lambda$generate$221
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	F	lambda$generate$151
		p	1		block
	m	(Lcsv;)Lecy$a;	G	lambda$generate$220
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	G	lambda$generate$150
		p	1		block
	m	(Lcsv;)Lecy$a;	H	lambda$generate$219
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	H	lambda$generate$149
		p	1		block
	m	(Lcsv;)Lecy$a;	I	lambda$generate$218
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	I	lambda$generate$148
		p	1		block
	m	(Lcsv;)Lecy$a;	J	lambda$generate$217
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	J	lambda$generate$147
		p	1		block
	m	(Lcsv;)Lecy$a;	K	lambda$generate$216
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	K	lambda$generate$146
		p	1		block
	m	(Lcsv;)Lecy$a;	L	lambda$generate$215
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	L	lambda$generate$145
		p	1		block
	m	(Lcsv;)Lecy$a;	M	lambda$generate$211
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	M	lambda$generate$144
		p	1		block
	m	(Lcsv;)Lecy$a;	N	lambda$generate$207
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	N	lambda$generate$143
		p	1		block
	m	(Lcsv;)Lecy$a;	O	lambda$generate$206
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	O	lambda$generate$142
		p	1		block
	m	(Lcsv;)Lecy$a;	P	lambda$generate$203
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	P	lambda$generate$141
		p	1		block
	m	(Lcsv;)Lecy$a;	Q	lambda$generate$202
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	Q	lambda$generate$140
		p	1		block
	m	(Lcsv;)Lecy$a;	R	lambda$generate$201
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	R	lambda$generate$139
		p	1		block
	m	(Lcsv;)Lecy$a;	S	lambda$generate$200
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	S	lambda$generate$138
		p	1		block
	m	(Lcsv;)Lecy$a;	T	lambda$generate$199
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	T	lambda$generate$137
		p	1		block
	m	(Lcsv;)Lecy$a;	U	lambda$generate$196
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	U	lambda$generate$136
		p	1		block
	m	(Lcsv;)Lecy$a;	V	lambda$generate$195
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	V	lambda$generate$135
		p	1		block
	m	(Lcsv;)Lecy$a;	W	lambda$generate$194
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	W	lambda$generate$134
		p	1		block
	m	(Lcsv;)Lecy$a;	X	lambda$generate$193
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	X	lambda$generate$133
		p	1		block
	m	(Lcsv;)Lecy$a;	Y	lambda$generate$192
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	Y	lambda$generate$132
		p	1		block
	m	(Lcsv;)Lecy$a;	Z	lambda$generate$191
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	Z	lambda$generate$131
		p	1		block
	m	(Lcsv;Ljava/lang/Integer;)Ledj$a;	a	lambda$generate$231
	m	(Ljava/lang/Integer;)Ledj$a;	a	lambda$createPitcherCropLoot$238
		p	0		age
	m	(Lki;Lcsv;)Lecy$a;	a	lambda$generate$227
		p	1		block
	m	(Lcsv;)Lecy$a;	aA	lambda$generate$101
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	aA	lambda$generate$78
		p	1		block
	m	(Lcsv;)Lecy$a;	aB	lambda$generate$100
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	aB	lambda$generate$77
		p	1		block
	m	(Lcsv;)Lecy$a;	aC	lambda$generate$99
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	aC	lambda$generate$76
		p	1		block
	m	(Lcsv;)Lecy$a;	aD	lambda$generate$98
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	aD	lambda$generate$75
		p	1		block
	m	(Lcsv;)Lecy$a;	aE	lambda$generate$97
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	aE	lambda$generate$74
		p	1		block
	m	(Lcsv;)Lecy$a;	aF	lambda$generate$96
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	aF	lambda$generate$73
		p	1		block
	m	(Lcsv;)Lecy$a;	aG	lambda$generate$95
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	aG	lambda$generate$72
		p	1		block
	m	(Lcsv;)Lecy$a;	aH	lambda$generate$94
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	aH	lambda$generate$71
		p	1		block
	m	(Lcsv;)Lecy$a;	aI	lambda$generate$93
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	aI	lambda$generate$70
		p	1		block
	m	(Lcsv;)Lecy$a;	aJ	lambda$generate$92
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	aJ	lambda$generate$69
		p	1		block
	m	(Lcsv;)Lecy$a;	aK	lambda$generate$91
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	aK	lambda$generate$68
		p	1		block
	m	(Lcsv;)Lecy$a;	aL	lambda$generate$90
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	aL	lambda$generate$67
		p	1		block
	m	(Lcsv;)Lecy$a;	aM	lambda$generate$89
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	aM	lambda$generate$66
		p	1		block
	m	(Lcsv;)Lecy$a;	aN	lambda$generate$88
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	aN	lambda$generate$65
		p	1		block
	m	(Lcsv;)Lecy$a;	aO	lambda$generate$87
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	aO	lambda$generate$64
		p	1		block
	m	(Lcsv;)Lecy$a;	aP	lambda$generate$86
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	aP	lambda$generate$63
		p	1		block
	m	(Lcsv;)Lecy$a;	aQ	lambda$generate$16
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	aQ	lambda$generate$62
		p	1		block
	m	(Lcsv;)Lecy$a;	aR	lambda$generate$15
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	aR	lambda$generate$61
		p	1		block
	m	(Lcsv;)Lecy$a;	aS	lambda$generate$14
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	aS	lambda$generate$60
		p	1		block
	m	(Lcsv;)Lecy$a;	aT	lambda$generate$13
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	aT	lambda$generate$59
		p	1		block
	m	(Lcsv;)Lecy$a;	aU	lambda$generate$12
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	aU	lambda$generate$58
		p	1		block
	m	(Lcsv;)Lecy$a;	aV	lambda$generate$11
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	aV	lambda$generate$57
		p	1		block
	m	(Lcsv;)Lecy$a;	aW	lambda$generate$10
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	aW	lambda$generate$56
		p	1		block
	m	(Lcsv;)Lecy$a;	aX	lambda$generate$9
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	aX	lambda$generate$55
		p	1		block
	m	(Lcsv;)Lecy$a;	aY	lambda$generate$8
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	aY	lambda$generate$54
		p	1		block
	m	(Lcsv;)Lecy$a;	aZ	lambda$generate$7
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	aZ	lambda$generate$53
		p	1		block
	m	(Lcsv;)Lecy$a;	aa	lambda$generate$190
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	aa	lambda$generate$130
		p	1		block
	m	(Lcsv;)Lecy$a;	ab	lambda$generate$189
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	ab	lambda$generate$129
		p	1		block
	m	(Lcsv;)Lecy$a;	ac	lambda$generate$188
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	ac	lambda$generate$128
		p	1		block
	m	(Lcsv;)Lecy$a;	ad	lambda$generate$187
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	ad	lambda$generate$127
		p	1		block
	m	(Lcsv;)Lecy$a;	ae	lambda$generate$186
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	ae	lambda$generate$126
		p	1		block
	m	(Lcsv;)Lecy$a;	af	lambda$generate$185
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	af	lambda$generate$125
		p	1		block
	m	(Lcsv;)Lecy$a;	ag	lambda$generate$184
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	ag	lambda$generate$124
		p	1		block
	m	(Lcsv;)Lecy$a;	ah	lambda$generate$183
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	ah	lambda$generate$123
		p	1		block
	m	(Lcsv;)Lecy$a;	ai	lambda$generate$182
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	ai	lambda$generate$122
		p	1		block
	m	(Lcsv;)Lecy$a;	aj	lambda$generate$181
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	aj	lambda$generate$121
		p	1		block
	m	(Lcsv;)Lecy$a;	ak	lambda$generate$180
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	ak	lambda$generate$120
		p	1		block
	m	(Lcsv;)Lecy$a;	al	lambda$generate$179
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	al	lambda$generate$119
		p	1		block
	m	(Lcsv;)Lecy$a;	am	lambda$generate$178
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	am	lambda$generate$118
		p	1		block
	m	(Lcsv;)Lecy$a;	an	lambda$generate$177
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	an	lambda$generate$117
		p	1		block
	m	(Lcsv;)Lecy$a;	ao	lambda$generate$176
		p	0		block
	m	(Lki;Lcsv;)Lecy$a;	ao	lambda$generate$116
		p	1		block
	m	(Lcsv;)Lecy$a;	ap	lambda$generate$175
		p	0		block
	m	(Lki;Lcsv;)Lecy$a;	ap	lambda$generate$115
		p	1		block
	m	(Lcsv;)Lecy$a;	aq	lambda$generate$174
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	aq	lambda$generate$114
		p	1		block
	m	(Lcsv;)Lecy$a;	ar	lambda$generate$111
		p	0		block
	m	(Lki;Lcsv;)Lecy$a;	ar	lambda$generate$113
		p	1		block
	m	(Lcsv;)Lecy$a;	as	lambda$generate$110
		p	0		block
	m	(Lki;Lcsv;)Lecy$a;	as	lambda$generate$112
		p	1		block
	m	(Lcsv;)Lecy$a;	at	lambda$generate$109
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	at	lambda$generate$85
		p	1		block
	m	(Lcsv;)Lecy$a;	au	lambda$generate$108
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	au	lambda$generate$84
		p	1		block
	m	(Lcsv;)Lecy$a;	av	lambda$generate$106
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	av	lambda$generate$83
		p	1		block
	m	(Lcsv;)Lecy$a;	aw	lambda$generate$105
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	aw	lambda$generate$82
		p	1		block
	m	(Lcsv;)Lecy$a;	ax	lambda$generate$104
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	ax	lambda$generate$81
		p	1		block
	m	(Lcsv;)Lecy$a;	ay	lambda$generate$103
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	ay	lambda$generate$80
		p	1		block
	m	(Lcsv;)Lecy$a;	az	lambda$generate$102
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	az	lambda$generate$79
		p	1		block
	m	()V	b	generate
	m	(Lcsv;Ljava/lang/Integer;)Ledj$a;	b	lambda$generate$230
	m	(Lki;Lcsv;)Lecy$a;	b	lambda$generate$226
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	bA	lambda$generate$26
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	bB	lambda$generate$25
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	bC	lambda$generate$24
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	bD	lambda$generate$23
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	bE	lambda$generate$22
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	bF	lambda$generate$21
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	bG	lambda$generate$20
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	bH	lambda$generate$19
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	bI	lambda$generate$18
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	bJ	lambda$generate$17
		p	1		block
	m	(Lcsv;)Lecy$a;	ba	lambda$generate$6
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	ba	lambda$generate$52
		p	1		block
	m	(Lcsv;)Lecy$a;	bb	lambda$generate$5
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	bb	lambda$generate$51
		p	1		block
	m	(Lcsv;)Lecy$a;	bc	lambda$generate$4
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	bc	lambda$generate$50
		p	1		block
	m	(Lcsv;)Lecy$a;	bd	lambda$generate$3
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	bd	lambda$generate$49
		p	1		block
	m	(Lcsv;)Lecy$a;	be	lambda$generate$2
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	be	lambda$generate$48
		p	1		block
	m	(Lcsv;)Lecy$a;	bf	lambda$generate$1
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	bf	lambda$generate$47
		p	1		block
	m	(Lcsv;)Lecy$a;	bg	lambda$generate$0
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	bg	lambda$generate$46
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	bh	lambda$generate$45
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	bi	lambda$generate$44
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	bj	lambda$generate$43
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	bk	lambda$generate$42
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	bl	lambda$generate$41
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	bm	lambda$generate$40
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	bn	lambda$generate$39
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	bo	lambda$generate$38
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	bp	lambda$generate$37
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	bq	lambda$generate$36
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	br	lambda$generate$35
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	bs	lambda$generate$34
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	bt	lambda$generate$33
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	bu	lambda$generate$32
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	bv	lambda$generate$31
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	bw	lambda$generate$30
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	bx	lambda$generate$29
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	by	lambda$generate$28
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	bz	lambda$generate$27
		p	1		block
	m	()Lecy$a;	c	createPitcherCropLoot
	m	(Lcpu;)Lecy$a;	c	lambda$generate$213
		p	0		block
	m	(Lcsv;Ljava/lang/Integer;)Leed$a;	c	lambda$generate$107
		p	1		pickles
	m	(Lki;Lcsv;)Lecy$a;	c	lambda$generate$223
		p	1		block
	m	(Lcpu;)Lecy$a;	d	lambda$generate$212
		p	0		block
	m	(Lki;Lcsv;)Lecy$a;	d	lambda$generate$222
		p	1		block
	m	(Lcpu;)Lecy$a;	e	lambda$generate$210
		p	0		block
	m	(Lki;Lcsv;)Lecy$a;	e	lambda$generate$214
		p	1		block
	m	(Lcpu;)Lecy$a;	f	lambda$generate$209
		p	0		block
	m	(Lki;Lcsv;)Lecy$a;	f	lambda$generate$205
		p	1		block
	m	(Lcpu;)Lecy$a;	g	lambda$generate$208
		p	0		block
	m	(Lki;Lcsv;)Lecy$a;	g	lambda$generate$204
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	h	lambda$generate$198
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	i	lambda$generate$197
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	j	lambda$generate$173
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	k	lambda$generate$172
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	l	lambda$generate$171
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	m	lambda$generate$170
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	n	lambda$generate$169
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	o	lambda$generate$168
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	p	lambda$generate$167
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	q	lambda$generate$166
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	r	lambda$generate$165
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	s	lambda$generate$164
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	t	lambda$generate$163
		p	1		block
	m	(Lcsv;)Lecy$a;	u	createDecoratedPotTable
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	u	lambda$generate$162
		p	1		block
	m	(Lcsv;)Lecy$a;	v	lambda$generate$237
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	v	lambda$generate$161
		p	1		block
	m	(Lcsv;)Lecy$a;	w	lambda$generate$236
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	w	lambda$generate$160
		p	1		block
	m	(Lcsv;)Lecy$a;	x	lambda$generate$235
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	x	lambda$generate$159
		p	1		block
	m	(Lcsv;)Lecy$a;	y	lambda$generate$234
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	y	lambda$generate$158
		p	1		block
	m	(Lcsv;)Lecy$a;	z	lambda$generate$233
		p	1		block
	m	(Lki;Lcsv;)Lecy$a;	z	lambda$generate$157
		p	1		block
	f	[F	h	JUNGLE_LEAVES_SAPLING_CHANGES
	f	Ljava/util/Set;	i	EXPLOSION_RESISTANT
c	kj	net/minecraft/data/loot/packs/VanillaChestLoot
	m	()Lecy$a;	a	shipwreckSupplyLootTable
	m	()Lecy$a;	b	shipwreckMapLootTable
	m	()Lecy$a;	c	bastionHoglinStableLootTable
	m	()Lecy$a;	d	bastionBridgeLootTable
	m	()Lecy$a;	e	endCityTreasureLootTable
	m	()Lecy$a;	f	netherBridgeLootTable
	m	()Lecy$a;	g	bastionTreasureLootTable
	m	(Ljava/util/function/BiConsumer;)V	generate	generate
		p	1		exporter
	m	()Lecy$a;	h	bastionOtherLootTable
	m	()Lecy$a;	i	woodlandMansionLootTable
	m	()Lecy$a;	j	strongholdLibraryLootTable
	m	()Lecy$a;	k	strongholdCorridorLootTable
	m	()Lecy$a;	l	ancientCityLootTable
	m	()Lecy$a;	m	jungleTempleLootTable
	m	()Lecy$a;	n	shipwreckTreasureLootTable
	m	()Lecy$a;	o	pillagerOutpostLootTable
	m	()Lecy$a;	p	desertPyramidLootTable
c	kk	net/minecraft/data/loot/packs/VanillaEntityLoot
	m	()V	a	generate
	m	()Lecy$a;	c	elderGuardianLootTable
c	kl	net/minecraft/data/loot/packs/VanillaFishingLoot
	m	()Lecy$a;	a	fishingFishLootTable
	m	(Ljava/util/function/BiConsumer;)V	generate	generate
		p	1		exporter
	f	Lefp$a;	a	IN_JUNGLE
	f	Lefp$a;	b	IN_SPARSE_JUNGLE
	f	Lefp$a;	c	IN_BAMBOO_JUNGLE
c	km	net/minecraft/data/loot/packs/VanillaGiftLoot
	m	(Ljava/util/function/BiConsumer;)V	generate	generate
		p	1		exporter
c	kn	net/minecraft/data/loot/packs/VanillaLootTableProvider
	m	(Ljk;)Lkc;	a	create
		p	0		output
c	ko	net/minecraft/data/loot/packs/VanillaPiglinBarterLoot
	m	(Ljava/util/function/BiConsumer;)V	generate	generate
		p	1		exporter
c	kp	net/minecraft/data/loot/packs/package-info
c	kq	net/minecraft/data/metadata/PackMetadataGenerator
	m	(Ljk;)V	<init>	<init>
		p	1		output
	m	()Ljava/lang/String;	a	getName
	m	(Lamu;Ljava/lang/Object;)Lkq;	a	add
		p	1		serializer
		p	2		metadata
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/util/function/Supplier;)V	a	lambda$run$1
		p	1		key
		p	2		jsonSupplier
	m	(Ljg;)Ljava/util/concurrent/CompletableFuture;	a	run
		p	1		writer
	m	(Ljk;Ltl;)Lkq;	a	forFeaturePack
		p	0		output
		p	1		description
	m	(Ljk;Ltl;Lcec;)Lkq;	a	forFeaturePack
		p	0		output
		p	1		description
		p	2		requiredFeatures
	m	(Lamu;Ljava/lang/Object;)Lcom/google/gson/JsonElement;	b	lambda$add$0
	f	Ljk;	d	output
	f	Ljava/util/Map;	e	elements
c	kr	net/minecraft/data/metadata/package-info
c	ks	net/minecraft/data/models/BlockModelGenerators
	m	(Ljava/util/function/Consumer;Ljava/util/function/BiConsumer;Ljava/util/function/Consumer;)V	<init>	<init>
		p	1		blockStateCollector
		p	2		modelCollector
		p	3		simpleItemModelExemptionCollector
	m	()V	A	createCauldrons
	m	(Lcsv;)Ljava/util/List;	A	createSideFireModels
		p	1		texture
	m	()V	B	createChorusFlower
	m	(Lcsv;)Ljava/util/List;	B	createTopFireModels
		p	1		texture
	m	()V	C	createEndPortalFrame
	m	(Lcsv;)V	C	createLantern
		p	1		lantern
	m	()V	D	createChorusPlant
	m	(Lcsv;)V	D	createNonTemplateHorizontalBlock
		p	1		block
	m	()V	E	createComposter
	m	(Lcsv;)V	E	createMultiface
		p	1		block
	m	()V	F	createAmethystClusters
	m	(Lcsv;)V	F	createShulkerBox
		p	1		shulkerBox
	m	()V	G	createPointedDripstone
	m	()V	H	createDaylightDetector
	m	()V	I	createLightningRod
	m	()V	J	createFarmland
	m	()V	K	createFire
	m	()V	L	createSoulFire
	m	()V	M	createMuddyMangroveRoots
	m	()V	N	createMangrovePropagule
	m	()V	O	createFrostedIce
	m	()V	P	createGrassBlocks
	m	()V	Q	createCocoa
	m	()V	R	createDirtPath
	m	()V	S	createHopper
	m	()V	T	createIronBars
	m	()V	U	createLever
	m	()V	V	createLilyPad
	m	()V	W	createFrogspawnBlock
	m	()V	X	createNetherPortalBlock
	m	()V	Y	createNetherrack
	m	()V	Z	createObserver
	m	()V	a	run
	m	(I)Ljava/util/List;	a	createBambooModels
		p	1		age
	m	(ILjava/lang/String;Llj;)Laew;	a	createTurtleEggModel
		p	1		eggs
		p	2		prefix
		p	3		textures
	m	(Laew;)[Llb;	a	createRotatedVariants
		p	0		modelId
	m	(Laew;Laew;Laew;Laew;Laew;Laew;Ljava/lang/Boolean;Ldgn;)Llb;	a	lambda$createActiveRail$9
		p	6		on
		p	7		shape
	m	(Laew;Laew;Ldgq;)Llb;	a	lambda$createCalibratedSculkSensor$33
		p	2		phase
	m	(Laew;Laew;Ljava/lang/Boolean;)Llb;	a	lambda$createSculkCatalyst$50
		p	2		bloom
	m	(Laew;Lcsv;)Lks$a;	a	blockEntityModels
		p	1		modelId
		p	2		particleBlock
	m	(Laew;Ljava/lang/Integer;)Llb;	a	lambda$createSnowBlocks$35
		p	1		height
	m	(Laew;Llj;)V	a	lambda$createGrassBlocks$31
		p	1		textures
	m	(Lcja;)V	a	createSimpleFlatItemModel
		p	1		item
	m	(Lcja;Laew;)V	a	delegateItemModel
		p	1		item
		p	2		parentModelId
	m	(Lckk;)V	a	lambda$run$57
		p	1		item
	m	(Lcsv;)V	a	createTrivialCube
		p	1		block
	m	(Lcsv;II)Laew;	a	lambda$createCropBlock$14
	m	(Lcsv;Laew;)V	a	delegateItemModel
		p	1		block
		p	2		parentModelId
	m	(Lcsv;Laew;Laew;)Lky;	a	createRotatedVariant
		p	0		block
		p	1		firstModelId
		p	2		secondModelId
	m	(Lcsv;Laew;Laew;Laew;)Lkv;	a	createWall
		p	0		wallBlock
		p	1		postModelId
		p	2		lowSideModelId
		p	3		tallSideModelId
	m	(Lcsv;Laew;Laew;Laew;Laew;Laew;)Lkv;	a	createCustomFence
		p	0		customFenceBlock
		p	1		postModelId
		p	2		northModelId
		p	3		eastModelId
		p	4		southModelId
		p	5		westModelId
	m	(Lcsv;Laew;Laew;Laew;Laew;Laew;Laew;Laew;Laew;)Lkv;	a	createDoor
		p	0		doorBlock
		p	1		bottomLeftHingeClosedModelId
		p	2		bottomLeftHingeOpenModelId
		p	3		bottomRightHingeClosedModelId
		p	4		bottomRightHingeOpenModelId
		p	5		topLeftHingeClosedModelId
		p	6		topLeftHingeOpenModelId
		p	7		topRightHingeClosedModelId
		p	8		topRightHingeOpenModelId
	m	(Lcsv;Laew;Laew;Laew;Laew;Z)Lkv;	a	createFenceGate
		p	0		fenceGateBlock
		p	1		openModelId
		p	2		closedModelId
		p	3		openWallModelId
		p	4		closedWallModelId
		p	5		uvlock
	m	(Lcsv;Laew;Llb;)V	a	createGrassLikeBlock
		p	1		topSoil
		p	2		modelId
		p	3		snowyVariant
	m	(Lcsv;Laew;Llj;)V	a	createPistonVariant
		p	1		piston
		p	2		extendedModelId
		p	3		textures
	m	(Lcsv;Laew;Llj;Ljava/util/function/BiConsumer;)Lkv;	a	createMirroredCubeGenerator
		p	0		block
		p	1		modelId
		p	2		textures
		p	3		modelCollector
	m	(Lcsv;Lcja;)V	a	createAirLikeBlock
		p	1		block
		p	2		particleSource
	m	(Lcsv;Lcsv;)V	a	createNonTemplateModelBlock
		p	1		block
		p	2		modelReference
	m	(Lcsv;Lcsv;Lcsv;)V	a	createHangingSign
		p	1		strippedLog
		p	2		hangingSign
		p	3		wallHangingSign
	m	(Lcsv;Lcsv;Lcsv;Lcsv;Lcsv;Lcsv;Lcsv;Lcsv;)V	a	createCoral
		p	1		coral
		p	2		deadCoral
		p	3		coralBlock
		p	4		deadCoralBlock
		p	5		coralFan
		p	6		deadCoralFan
		p	7		coralWallFan
		p	8		deadCoralWallFan
	m	(Lcsv;Lcsv;Ljava/util/function/BiFunction;)V	a	createCraftingTableLike
		p	1		block
		p	2		otherTextureSource
		p	3		texturesFactory
	m	(Lcsv;Lcsv;Lks$e;)V	a	createPlant
		p	1		plantBlock
		p	2		flowerPotBlock
		p	3		tintType
	m	(Lcsv;Ldgm;[I)V	a	createCropBlock
		p	1		crop
		p	2		ageProperty
		p	3		ageTextureIndices
	m	(Lcsv;Ljava/lang/Integer;)Llb;	a	lambda$createBrushableBlock$5
		p	2		dusted
	m	(Lcsv;Ljava/lang/Integer;Ldgf;)Llb;	a	lambda$createPitcherCrop$8
		p	1		age
		p	2		half
	m	(Lcsv;Ljava/lang/String;)V	a	createSimpleFlatItemModel
		p	1		block
		p	2		textureSuffix
	m	(Lcsv;Ljava/lang/String;Llh;Ljava/util/function/Function;)Laew;	a	createSuffixedVariant
		p	1		block
		p	2		suffix
		p	3		model
		p	4		texturesFactory
	m	(Lcsv;Ljava/util/function/Function;)V	a	createBeeNest
		p	1		beehive
		p	2		texturesFactory
	m	(Lcsv;Lks$e;)V	a	createCrossBlockWithDefaultItem
		p	1		block
		p	2		tintType
	m	(Lcsv;Lks$e;Ldgm;[I)V	a	createCrossBlock
		p	1		block
		p	2		tintType
		p	3		stageProperty
		p	4		stages
	m	(Lcsv;Lks$e;Llj;)V	a	createCrossBlockWithDefaultItem
		p	1		block
		p	2		tintType
		p	3		texture
	m	(Lcsv;Lkw$c;)V	a	lambda$createMultiface$49
	m	(Lcsv;Lkw$c;Ldga;)V	a	lambda$createMultiface$48
		p	2		property
	m	(Lcsv;Llj;)V	a	createPumpkinVariant
		p	1		block
		p	2		texture
	m	(Lcsv;Llj;Ljava/lang/Integer;)Llb;	a	lambda$createStems$7
		p	3		age
	m	(Lcsv;Llj;Ljava/util/function/BiConsumer;)Lkv;	a	createPillarBlockUVLocked
		p	0		block
		p	1		textureMap
		p	2		modelCollector
	m	(Lcsv;Llj;Llh;)V	a	createTrivialBlock
		p	1		block
		p	2		textures
		p	3		model
	m	(Lcsv;Lll$a;)V	a	createAxisAlignedPillarBlock
		p	1		block
		p	2		modelFactory
	m	(Lcsv;Lll$a;Lll$a;)V	a	createRotatedPillarWithHorizontalVariant
		p	1		block
		p	2		verticalModelFactory
		p	3		horizontalModelFactory
	m	(Ldga;Laew;Laew;)Lkz;	a	createBooleanModelDispatch
		p	0		property
		p	1		trueModel
		p	2		falseModel
	m	(Ldgm;Ljava/lang/Comparable;Laew;Laew;)Lkz;	a	createEmptyOrFullDispatch
		p	0		property
		p	1		fence
		p	2		higherOrEqualModelId
		p	3		lowerModelId
	m	(Ldgt;)Llb;	a	lambda$createStructureBlock$36
		p	1		mode
	m	(Lha;Ldgg;)Llb;	a	createPointedDripstoneVariant
		p	1		direction
		p	2		thickness
	m	(Lhc;)Llb;	a	lambda$createJigsaw$55
	m	(Lhc;Llb;)Llb;	a	applyRotation
		p	1		orientation
		p	2		variant
	m	(Ljava/lang/Boolean;Ljava/lang/Boolean;)Llb;	a	lambda$createTripwireHook$38
	m	(Ljava/lang/Comparable;Llb;Llb;Ljava/lang/Comparable;)Llb;	a	lambda$createEmptyOrFullDispatch$13
	m	(Ljava/lang/Integer;)Laew;	a	lambda$createSnifferEgg$40
		p	1		hatch
	m	(Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/Boolean;)Llb;	a	lambda$createRepeater$34
		p	0		tick
		p	1		locked
		p	2		on
	m	(Ljava/lang/Integer;Ljava/lang/Integer;)Laew;	a	createTurtleEggModel
		p	1		eggs
		p	2		hatch
	m	(Ljava/lang/String;I)Llb;	a	lambda$createBambooModels$11
	m	(Ljava/util/List;Ljava/util/function/UnaryOperator;)Ljava/util/List;	a	wrapModels
		p	0		modelIds
		p	1		processor
	m	(Ljava/util/function/Function;Ljava/lang/Integer;)Llb;	a	lambda$createSnifferEgg$41
		p	1		hatch
	m	(Ljf;)V	a	lambda$run$56
		p	1		family
	m	(Lkx;Laew;Lha;Llc$a;)V	a	lambda$createChiseledBookshelf$51
		p	3		direction
		p	4		rotation
	m	(Lkx;Lkw$c;Llc$a;)V	a	addSlotStateAndRotationVariants
		p	1		blockStateSupplier
		p	2		facingCondition
		p	3		rotation
	m	(Lkx;Lkw$c;Llc$a;Ldga;Llh;)V	a	lambda$addSlotStateAndRotationVariants$52
		p	4		property
		p	5		model
	m	(Lkx;Lkw$c;Llc$a;Ldga;Llh;Z)V	a	addBookSlotModel
		p	1		blockStateSupplier
		p	2		facingCondition
		p	3		rotation
		p	4		property
		p	5		model
		p	6		occupied
	m	(Lkz$d;Ldgf;Laew;Laew;Laew;Laew;)Lkz$d;	a	configureDoorHalf
		p	0		variantMap
		p	1		targetHalf
		p	2		leftHingeClosedModelId
		p	3		leftHingeOpenModelId
		p	4		rightHingeClosedModelId
		p	5		rightHingeOpenModelId
	m	(Llb;)Llb;	a	lambda$createSoulFire$29
	m	(Llh;Ljava/lang/String;Llj;Lks$d;)Laew;	a	lambda$addBookSlotModel$53
		p	4		key
	m	(Llj;)V	a	lambda$new$4
		p	0		textures
	m	(Llj;Laew;)Llj;	a	lambda$createChorusFlower$17
		p	1		id
	m	(Lll$a;[Lcsv;)V	a	createColoredBlockWithRandomRotations
		p	1		modelFactory
		p	2		blocks
	m	([ILcsv;Lks$e;Ljava/lang/Integer;)Llb;	a	lambda$createCrossBlock$6
	m	([ILit/unimi/dsi/fastutil/ints/Int2ObjectMap;Lcsv;Ljava/lang/Integer;)Llb;	a	lambda$createCropBlock$15
		p	1		age
	m	([Laew;Ljava/lang/Integer;)Llb;	a	lambda$createRespawnAnchor$54
		p	1		charges
	m	([Lcsv;)V	a	createCampfires
		p	1		blocks
	m	()V	aA	createPetrifiedOakSlab
	m	()V	aB	createLightBlock
	m	()V	aa	createPistons
	m	()V	ab	createPistonHeads
	m	()V	ac	createSculkSensor
	m	()V	ad	createCalibratedSculkSensor
	m	()V	ae	createSculkShrieker
	m	()V	af	createScaffolding
	m	()V	ag	createCaveVines
	m	()V	ah	createRedstoneLamp
	m	()V	ai	createRedstoneTorch
	m	()V	aj	createRepeater
	m	()V	ak	createSeaPickle
	m	()V	al	createSnowBlocks
	m	()V	am	createStonecutter
	m	()V	an	createStructureBlock
	m	()V	ao	createSweetBerryBush
	m	()V	ap	createTripwire
	m	()V	aq	createTripwireHook
	m	()V	ar	createTurtleEgg
	m	()V	as	createSnifferEgg
	m	()V	at	createSculkCatalyst
	m	()V	au	createChiseledBookshelf
	m	()V	av	createMagmaBlock
	m	()V	aw	createInfestedStone
	m	()V	ax	createInfestedDeepslate
	m	()V	ay	createRespawnAnchor
	m	()V	az	createJigsaw
	m	()Lkz;	b	createHorizontalFacingDispatch
	m	(Laew;)Llb;	b	lambda$static$47
		p	0		model
	m	(Laew;Laew;Ldgq;)Llb;	b	lambda$createSculkSensor$32
		p	2		phase
	m	(Laew;Llj;)V	b	lambda$createGrassBlocks$30
		p	1		textures
	m	(Lcsv;)V	b	createGenericCube
	m	(Lcsv;Laew;)Lky;	b	createRotatedVariant
		p	0		block
		p	1		modelId
	m	(Lcsv;Laew;Laew;)Lkv;	b	createButton
		p	0		buttonBlock
		p	1		regularModelId
		p	2		pressedModelId
	m	(Lcsv;Laew;Laew;Laew;)Lkv;	b	createStairs
		p	0		stairsBlock
		p	1		innerModelId
		p	2		regularModelId
		p	3		outerModelId
	m	(Lcsv;Laew;Llj;Ljava/util/function/BiConsumer;)Lkv;	b	createNorthWestMirroredCubeGenerator
		p	0		block
		p	1		modelId
		p	2		textures
		p	3		modelCollector
	m	(Lcsv;Lcsv;)V	b	createCoralFans
		p	1		coralFanBlock
		p	2		coralWallFanBlock
	m	(Lcsv;Lcsv;Lks$e;)V	b	createGrowingPlant
		p	1		plant
		p	2		plantStem
		p	3		tintType
	m	(Lcsv;Lks$e;)V	b	createCrossBlock
		p	1		block
		p	2		tintType
	m	(Lcsv;Lks$e;Llj;)V	b	createCrossBlock
		p	1		block
		p	2		tintType
		p	3		crossTexture
	m	(Lcsv;Lll$a;)V	b	createTrivialBlock
		p	1		block
		p	2		modelFactory
	m	(Ljava/lang/Integer;)Llb;	b	lambda$createSweetBerryBush$37
		p	1		stage
	m	(Ljava/lang/Integer;Ljava/lang/Integer;)Ljava/util/List;	b	lambda$createTurtleEgg$39
	m	(Llb;)Llb;	b	lambda$createSoulFire$28
	m	(Llj;)V	b	lambda$new$3
		p	0		textures
	m	(Llj;Laew;)Llj;	b	lambda$createCommandBlock$10
		p	1		id
	m	(Lll$a;[Lcsv;)V	b	createColoredBlockWithStateRotations
		p	1		modelFactory
		p	2		blocks
	m	()Lkz;	c	createHorizontalFacingDispatchAlt
	m	(Laew;)Llb;	c	lambda$static$46
		p	0		model
	m	(Laew;Llj;)V	c	lambda$createFurnace$16
		p	1		textures
	m	(Lcsv;)V	c	skipAutoItemBlock
		p	1		block
	m	(Lcsv;Laew;)Lky;	c	createSimpleBlock
		p	0		block
		p	1		modelId
	m	(Lcsv;Laew;Laew;)Lkv;	c	createFence
		p	0		fenceBlock
		p	1		postModelId
		p	2		sideModelId
	m	(Lcsv;Laew;Laew;Laew;)Lkv;	c	createOrientableTrapdoor
		p	0		trapdoorBlock
		p	1		topModelId
		p	2		bottomModelId
		p	3		openModelId
	m	(Lcsv;Laew;Llj;Ljava/util/function/BiConsumer;)Lkv;	c	createMirroredColumnGenerator
		p	0		block
		p	1		modelId
		p	2		textures
		p	3		modelCollector
	m	(Lcsv;Lcsv;)V	c	createStems
		p	1		stemBlock
		p	2		attachedStemBlock
	m	(Lcsv;Lks$e;)V	c	createDoublePlant
		p	1		doubleBlock
		p	2		tintType
	m	(Lcsv;Lll$a;)V	c	createHorizontallyRotatedBlock
		p	1		block
		p	2		modelFactory
	m	(Llb;)Llb;	c	lambda$createSoulFire$27
	m	(Llj;)V	c	lambda$new$2
		p	0		textureMap
	m	()Lkz;	d	createTorchHorizontalDispatch
	m	(Laew;)Llb;	d	lambda$static$45
		p	0		model
	m	(Laew;Llj;)V	d	lambda$createBarrel$12
	m	(Lcsv;)V	d	createSimpleFlatItemModel
		p	1		block
	m	(Lcsv;Laew;)Lkv;	d	createAxisAlignedPillarBlock
		p	0		block
		p	1		modelId
	m	(Lcsv;Laew;Laew;)Lkv;	d	createRotatedPillarWithHorizontalVariant
		p	0		block
		p	1		verticalModelId
		p	2		horizontalModelId
	m	(Lcsv;Laew;Laew;Laew;)Lkv;	d	createTrapdoor
		p	0		trapdoorBlock
		p	1		topModelId
		p	2		bottomModelId
		p	3		openModelId
	m	(Lcsv;Lcsv;)Lks$a;	d	blockEntityModels
		p	1		block
		p	2		particleBlock
	m	(Lcsv;Lll$a;)V	d	createFurnace
		p	1		cooker
		p	2		modelFactory
	m	(Llb;)Llb;	d	lambda$createSoulFire$26
	m	(Llj;)V	d	lambda$new$1
		p	0		textureMap
	m	()Lkz;	e	createFacingDispatch
	m	(Laew;)Llb;	e	lambda$static$44
		p	0		model
	m	(Lcsv;)V	e	createRotatedMirroredVariantBlock
		p	1		block
	m	(Lcsv;Laew;)V	e	createAxisAlignedPillarBlockCustomModel
		p	1		block
		p	2		modelId
	m	(Lcsv;Laew;Laew;)Lkv;	e	createPressurePlate
		p	0		pressurePlateBlock
		p	1		upModelId
		p	2		downModelId
	m	(Lcsv;Laew;Laew;Laew;)Lkv;	e	createSlab
		p	0		slabBlock
		p	1		bottomModelId
		p	2		topModelId
		p	3		fullModelId
	m	(Lcsv;Lcsv;)V	e	createFullAndCarpetBlocks
		p	1		wool
		p	2		carpet
	m	(Llb;)Llb;	e	lambda$createSoulFire$25
	m	(Llj;)V	e	lambda$new$0
		p	0		textureMap
	m	()Lkz;	f	createRotatedPillar
	m	(Laew;)Llb;	f	lambda$static$43
		p	0		model
	m	(Lcsv;)V	f	createRotatedVariantBlock
		p	1		block
	m	(Lcsv;Laew;)V	f	createAirLikeBlock
		p	1		block
		p	2		particleSource
	m	(Lcsv;Laew;Laew;)V	f	createDoubleBlock
		p	1		block
		p	2		upperHalfModelId
		p	3		lowerHalfModelId
	m	(Lcsv;Lcsv;)V	f	createGlassBlocks
		p	1		glass
		p	2		glassPane
	m	(Llb;)Llb;	f	lambda$createFire$24
	m	()V	g	createBigDripLeafBlock
	m	(Laew;)Llb;	g	lambda$static$42
		p	0		model
	m	(Lcsv;)V	g	createBrushableBlock
		p	1		block
	m	(Lcsv;Lcsv;)V	g	createWeightedPressurePlate
		p	1		weightedPressurePlate
		p	2		textureSource
	m	(Llb;)Llb;	g	lambda$createFire$23
	m	()V	h	createPitcherPlant
	m	(Laew;)Llb;	h	lambda$wrapModels$18
		p	0		modelId
	m	(Lcsv;)Lks$b;	h	family
		p	1		block
	m	(Lcsv;Lcsv;)V	h	copyModel
		p	1		modelSource
		p	2		child
	m	(Llb;)Llb;	h	lambda$createFire$22
	m	()V	i	createPitcherCrop
	m	(Lcsv;)V	i	createDoor
		p	1		doorBlock
	m	(Lcsv;Lcsv;)V	i	createNormalTorch
		p	1		torch
		p	2		wallTorch
	m	(Llb;)Llb;	i	lambda$createFire$21
	m	()V	j	createSunflower
	m	(Lcsv;)V	j	createOrientableTrapdoor
		p	1		trapdoorBlock
	m	(Lcsv;Lcsv;)V	j	createBedItem
		p	1		bed
		p	2		particleSource
	m	(Llb;)Llb;	j	lambda$createFire$20
	m	()V	k	createTallSeagrass
	m	(Lcsv;)V	k	createTrapdoor
		p	1		trapdoorBlock
	m	(Lcsv;Lcsv;)V	k	createNetherRoots
		p	1		root
		p	2		pottedRoot
	m	(Llb;)Llb;	k	lambda$createFire$19
	m	()V	l	createSmallDripleaf
	m	(Lcsv;)Lks$f;	l	woodProvider
		p	1		logBlock
	m	(Lcsv;Lcsv;)V	l	createCandleAndCandleCake
		p	1		candle
		p	2		cake
	m	()V	m	createBamboo
	m	(Lcsv;)V	m	createNonTemplateModelBlock
		p	1		block
	m	()Lkz;	n	createColumnWithFacing
	m	(Lcsv;)V	n	createPassiveRail
		p	1		rail
	m	()V	o	createBarrel
	m	(Lcsv;)V	o	createActiveRail
		p	1		rail
	m	()V	p	createBell
	m	(Lcsv;)V	p	createFlowerBed
		p	1		flowerbed
	m	()V	q	createGrindstone
	m	(Lcsv;)V	q	createCommandBlock
		p	1		commandBlock
	m	()V	r	createBookshelf
	m	(Lcsv;)V	r	createAnvil
		p	1		anvil
	m	()V	s	createRedstoneWire
	m	(Lcsv;)V	s	createAzalea
		p	1		block
	m	()V	t	createComparator
	m	(Lcsv;)V	t	createPottedAzalea
		p	1		block
	m	()V	u	createSmoothStoneSlab
	m	(Lcsv;)V	u	createMushroomBlock
		p	1		mushroomBlock
	m	()V	v	createBrewingStand
	m	(Lcsv;)V	v	createDispenserBlock
		p	1		block
	m	()V	w	createCakeBlock
	m	(Lcsv;)V	w	createAmethystCluster
		p	1		block
	m	()V	x	createCartographyTable
	m	(Lcsv;)V	x	createNyliumBlock
		p	1		block
	m	()V	y	createSmithingTable
	m	(Lcsv;)V	y	createRotatableColumn
		p	1		block
	m	()V	z	createPumpkins
	m	(Lcsv;)Ljava/util/List;	z	createFloorFireModels
		p	1		texture
	f	Ljava/util/List;	a	MULTIFACE_GENERATOR
	f	Ljava/util/function/Consumer;	b	blockStateOutput
	f	Ljava/util/function/BiConsumer;	c	modelOutput
	f	Ljava/util/function/Consumer;	d	skippedAutoModelsOutput
	f	Ljava/util/List;	e	nonOrientableTrapdoor
	f	Ljava/util/Map;	f	fullBlockModelCustomGenerators
	f	Ljava/util/Map;	g	texturedModels
	f	Ljava/util/Map;	h	SHAPE_CONSUMERS
	f	Ljava/util/Map;	i	CHISELED_BOOKSHELF_SLOT_MODEL_CACHE
c	ks$1	net/minecraft/data/models/BlockModelGenerators$1
	f	[I	a	$SwitchMap$net$minecraft$core$FrontAndTop
	f	[I	b	$SwitchMap$net$minecraft$world$level$block$state$properties$RailShape
	f	[I	c	$SwitchMap$net$minecraft$world$level$block$state$properties$DoubleBlockHalf
c	ks$a	net/minecraft/data/models/BlockModelGenerators$BlockEntityModelGenerator
	m	(Lks;Laew;Lcsv;)V	<init>	<init>
		p	2		modelId
		p	3		block
	m	(Llh;[Lcsv;)Lks$a;	a	createWithCustomBlockItemModel
		p	1		model
		p	2		blocks
	m	([Lcsv;)Lks$a;	a	create
		p	1		blocks
	m	([Lcsv;)Lks$a;	b	createWithoutBlockItem
		p	1		blocks
	f	Lks;	a	this$0
	f	Laew;	b	baseModel
c	ks$b	net/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider
	m	(Lks;Llj;)V	<init>	<init>
		p	2		textures
	m	(Lcsv;)Lks$b;	a	button
		p	1		buttonBlock
	m	(Lcsv;Llh;)Lks$b;	a	fullBlock
		p	1		block
		p	2		model
	m	(Ljf$b;Lcsv;)V	a	lambda$generateFor$1
		p	1		variant
		p	2		block
	m	(Ljf;)Lks$b;	a	generateFor
		p	1		family
	m	(Llh;Lcsv;)Laew;	a	getOrCreateModel
		p	1		model
		p	2		block
	m	([Lcsv;)Lks$b;	a	fullBlockCopies
		p	1		blocks
	m	(Lcsv;)Lks$b;	b	wall
		p	1		wallBlock
	m	(Lcsv;Llh;)Laew;	b	lambda$getOrCreateModel$0
		p	2		newModel
	m	(Lcsv;)Lks$b;	c	customFence
		p	1		customFenceBlock
	m	(Lcsv;)Lks$b;	d	fence
		p	1		fenceBlock
	m	(Lcsv;)Lks$b;	e	customFenceGate
		p	1		customFenceGateBlock
	m	(Lcsv;)Lks$b;	f	fenceGate
		p	1		fenceGateBlock
	m	(Lcsv;)Lks$b;	g	pressurePlate
		p	1		pressurePlateBlock
	m	(Lcsv;)Lks$b;	h	sign
		p	1		signBlock
	m	(Lcsv;)Lks$b;	i	slab
		p	1		block
	m	(Lcsv;)Lks$b;	j	stairs
		p	1		block
	m	(Lcsv;)Lks$b;	k	fullBlockVariant
		p	1		block
	m	(Lcsv;)Lks$b;	l	door
		p	1		block
	m	(Lcsv;)V	m	trapdoor
		p	1		block
	f	Lks;	a	this$0
	f	Llj;	b	mapping
	f	Ljava/util/Map;	c	models
	f	Ljf;	d	family
	f	Laew;	e	fullBlock
c	ks$c	net/minecraft/data/models/BlockModelGenerators$BlockStateGeneratorSupplier
	m	(Lcsv;Laew;Llj;Ljava/util/function/BiConsumer;)Lkv;	create	create
		p	1		block
		p	2		modelId
		p	3		textures
		p	4		modelCollector
c	ks$d	net/minecraft/data/models/BlockModelGenerators$BookSlotModelCacheKey
	m	()Llh;	a	template
	m	()Ljava/lang/String;	b	modelSuffix
	f	Llh;	a	template
	f	Ljava/lang/String;	b	modelSuffix
c	ks$e	net/minecraft/data/models/BlockModelGenerators$TintState
	m	()Llh;	a	getCross
	m	()Llh;	b	getCrossPot
	m	()[Lks$e;	c	$values
	f	Lks$e;	a	TINTED
	f	Lks$e;	b	NOT_TINTED
	f	[Lks$e;	c	$VALUES
c	ks$f	net/minecraft/data/models/BlockModelGenerators$WoodProvider
	m	(Lks;Llj;)V	<init>	<init>
		p	2		textures
	m	(Lcsv;)Lks$f;	a	wood
		p	1		woodBlock
	m	(Lcsv;)Lks$f;	b	log
		p	1		stemBlock
	m	(Lcsv;)Lks$f;	c	logWithHorizontal
		p	1		logBlock
	m	(Lcsv;)Lks$f;	d	logUVLocked
		p	1		logBlock
	f	Lks;	a	this$0
	f	Llj;	b	logMapping
c	kt	net/minecraft/data/models/ItemModelGenerators
	m	(Ljava/util/function/BiConsumer;)V	<init>	<init>
		p	1		writer
	m	()V	a	run
	m	(Laew;Laew;Laew;)V	a	generateLayeredItem
		p	1		id
		p	2		layer0
		p	3		layer1
	m	(Laew;Laew;Laew;Laew;)V	a	generateLayeredItem
		p	1		id
		p	2		layer0
		p	3		layer1
		p	4		layer2
	m	(Laew;Ljava/lang/String;)Laew;	a	getItemModelForTrimMaterial
		p	1		id
		p	2		trimMaterialName
	m	(Laew;Ljava/util/Map;Lcgq;)Lcom/google/gson/JsonObject;	a	generateBaseArmorTrimTemplate
		p	1		id
		p	2		textures
		p	3		armorMaterial
	m	(Lcgp;)V	a	generateArmorTrims
		p	1		armor
	m	(Lcgp;Laew;Ljava/util/Map;)Lcom/google/gson/JsonObject;	a	lambda$generateArmorTrims$1
		p	2		id
		p	3		textures
	m	(Lcja;)V	a	generateCompassItem
		p	1		compass
	m	(Lcja;Lcja;Llh;)V	a	generateFlatItem
		p	1		item
		p	2		texture
		p	3		model
	m	(Lcja;Ljava/lang/String;Llh;)V	a	generateFlatItem
		p	1		item
		p	2		suffix
		p	3		model
	m	(Lcja;Llh;)V	a	generateFlatItem
		p	1		item
		p	2		model
	m	(Lcgp;Laew;Ljava/util/Map;)Lcom/google/gson/JsonObject;	b	lambda$generateArmorTrims$0
		p	2		id
		p	3		textures
	m	(Lcja;)V	b	generateClockItem
		p	1		clock
	f	Laew;	a	TRIM_TYPE_PREDICATE_ID
	f	Ljava/util/List;	b	GENERATED_TRIM_MODELS
	f	Ljava/util/function/BiConsumer;	c	output
c	kt$a	net/minecraft/data/models/ItemModelGenerators$TrimModelData
	m	()Ljava/lang/String;	a	name
	m	(Lcgq;)Ljava/lang/String;	a	name
		p	1		armorMaterial
	m	()F	b	itemModelIndex
	m	()Ljava/util/Map;	c	overrideArmorMaterials
	f	Ljava/lang/String;	a	name
	f	F	b	itemModelIndex
	f	Ljava/util/Map;	c	overrideArmorMaterials
c	ku	net/minecraft/data/models/ModelProvider
	m	(Ljk;)V	<init>	<init>
		p	1		output
	m	()Ljava/lang/String;	a	getName
	m	(I)[Ljava/util/concurrent/CompletableFuture;	a	lambda$saveCollection$7
	m	(Lcsv;)Ljava/nio/file/Path;	a	lambda$run$5
		p	1		block
	m	(Ljava/util/Map$Entry;)Z	a	lambda$run$2
		p	0		entry
	m	(Ljava/util/Map;Laew;Ljava/util/function/Supplier;)V	a	lambda$run$1
		p	1		id
		p	2		jsonSupplier
	m	(Ljava/util/Map;Lcsv;)Z	a	lambda$run$3
		p	1		block
	m	(Ljava/util/Map;Lkv;)V	a	lambda$run$0
		p	1		blockStateSupplier
	m	(Ljava/util/Set;Ljava/util/Map;Lcsv;)V	a	lambda$run$4
		p	2		block
	m	(Ljava/util/function/Function;Ljg;Ljava/util/Map$Entry;)Ljava/util/concurrent/CompletableFuture;	a	lambda$saveCollection$6
		p	2		entry
	m	(Ljg;)Ljava/util/concurrent/CompletableFuture;	a	run
		p	1		writer
	m	(Ljg;Ljava/util/Map;Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;	a	saveCollection
		p	1		cache
		p	2		models
		p	3		pathGetter
	f	Ljk$a;	d	blockStatePathProvider
	f	Ljk$a;	e	modelPathProvider
c	kv	net/minecraft/data/models/blockstates/BlockStateGenerator
	m	()Lcsv;	a	getBlock
c	kw	net/minecraft/data/models/blockstates/Condition
	m	()Lkw$c;	a	condition
	m	(Ldfk;)V	a	validate
		p	1		stateManager
	m	([Lkw;)Lkw;	a	and
		p	0		conditions
	m	([Lkw;)Lkw;	b	or
		p	0		conditions
c	kw$a	net/minecraft/data/models/blockstates/Condition$CompositeCondition
	m	(Lkw$b;Ljava/util/List;)V	<init>	<init>
		p	1		operator
		p	2		components
	m	(Ldfk;)V	a	validate
		p	1		stateManager
	m	(Ldfk;Lkw;)V	a	lambda$validate$0
		p	1		component
	m	()Lcom/google/gson/JsonElement;	b	get
	f	Lkw$b;	a	operation
	f	Ljava/util/List;	b	subconditions
c	kw$b	net/minecraft/data/models/blockstates/Condition$Operation
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()[Lkw$b;	a	$values
	f	Lkw$b;	a	AND
	f	Lkw$b;	b	OR
	f	Ljava/lang/String;	c	id
	f	[Lkw$b;	d	$VALUES
c	kw$c	net/minecraft/data/models/blockstates/Condition$TerminalCondition
	m	(Lcom/google/gson/JsonObject;Ldgm;Ljava/lang/String;)V	a	lambda$get$0
		p	1		property
		p	2		value
	m	(Ldfk;)V	a	validate
		p	1		stateManager
	m	(Ldfk;Ldgm;)Z	a	lambda$validate$1
		p	1		property
	m	(Ldgm;Ljava/lang/Comparable;)Lkw$c;	a	term
		p	1		property
		p	2		value
	m	(Ldgm;Ljava/lang/Comparable;[Ljava/lang/Comparable;)Lkw$c;	a	term
		p	1		property
		p	2		value
		p	3		otherValues
	m	(Ldgm;Ljava/lang/String;)V	a	putValue
		p	1		property
		p	2		value
	m	(Ldgm;Ljava/util/stream/Stream;)Ljava/lang/String;	a	joinValues
		p	0		property
		p	1		valueStream
	m	()Lcom/google/gson/JsonElement;	b	get
	m	(Ldgm;Ljava/lang/Comparable;)Lkw$c;	b	negatedTerm
		p	1		property
		p	2		value
	m	(Ldgm;Ljava/lang/Comparable;[Ljava/lang/Comparable;)Lkw$c;	b	negatedTerm
		p	1		property
		p	2		value
		p	3		otherValues
	m	(Ldgm;Ljava/lang/Comparable;[Ljava/lang/Comparable;)Ljava/lang/String;	c	getTerm
		p	0		property
		p	1		value
		p	2		otherValues
	f	Ljava/util/Map;	a	terms
c	kx	net/minecraft/data/models/blockstates/MultiPartGenerator
	m	(Lcsv;)V	<init>	<init>
		p	1		block
	m	()Lcsv;	a	getBlock
	m	(Lcsv;)Lkx;	a	multiPart
		p	0		block
	m	(Ldfk;Lkx$b;)V	a	lambda$get$0
		p	1		multipart
	m	(Ljava/util/List;)Lkx;	a	with
		p	1		variants
	m	(Lkw;Ljava/util/List;)Lkx;	a	with
		p	1		condition
		p	2		variants
	m	(Lkw;Llb;)Lkx;	a	with
		p	1		condition
		p	2		variant
	m	(Lkw;[Llb;)Lkx;	a	with
		p	1		condition
		p	2		variants
	m	(Llb;)Lkx;	a	with
		p	1		variant
	m	()Lcom/google/gson/JsonElement;	b	get
	f	Lcsv;	a	block
	f	Ljava/util/List;	b	parts
c	kx$a	net/minecraft/data/models/blockstates/MultiPartGenerator$ConditionalEntry
	m	(Lkw;Ljava/util/List;)V	<init>	<init>
		p	1		when
		p	2		variants
	m	(Lcom/google/gson/JsonObject;)V	a	decorate
		p	1		json
	m	(Ldfk;)V	a	validate
		p	1		stateManager
	f	Lkw;	a	condition
c	kx$b	net/minecraft/data/models/blockstates/MultiPartGenerator$Entry
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		variants
	m	()Lcom/google/gson/JsonElement;	a	get
	m	(Lcom/google/gson/JsonObject;)V	a	decorate
		p	1		json
	m	(Ldfk;)V	a	validate
		p	1		stateManager
	f	Ljava/util/List;	a	variants
c	ky	net/minecraft/data/models/blockstates/MultiVariantGenerator
	m	(Lcsv;Ljava/util/List;)V	<init>	<init>
		p	1		block
		p	2		variants
	m	()Lcsv;	a	getBlock
	m	(Lcom/google/common/collect/ImmutableList$Builder;Llb;Llb;)V	a	lambda$mergeVariants$5
		p	2		rightVariant
	m	(Lcom/mojang/datafixers/util/Pair;Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair;	a	lambda$get$1
		p	1		entry
	m	(Lcsv;)Lky;	a	multiVariant
		p	0		block
	m	(Lcsv;Llb;)Lky;	a	multiVariant
		p	0		block
		p	1		variant
	m	(Lcsv;[Llb;)Lky;	a	multiVariant
		p	0		block
		p	1		variants
	m	(Ldgm;)V	a	lambda$with$0
		p	1		property
	m	(Ljava/util/List;Lcom/google/common/collect/ImmutableList$Builder;Llb;)V	a	lambda$mergeVariants$6
		p	2		leftVariant
	m	(Ljava/util/List;Ljava/util/List;)Ljava/util/List;	a	mergeVariants
		p	0		left
		p	1		right
	m	(Ljava/util/Map;Lcom/google/gson/JsonObject;)V	a	lambda$get$4
		p	1		json
	m	(Ljava/util/Map;Lcom/mojang/datafixers/util/Pair;)V	a	lambda$get$3
		p	1		pair
	m	(Lkz;)Lky;	a	with
		p	1		map
	m	()Lcom/google/gson/JsonElement;	b	get
	m	(Ljava/util/Map;Lcom/mojang/datafixers/util/Pair;)Ljava/util/stream/Stream;	b	lambda$get$2
		p	1		pair
	f	Lcsv;	a	block
	f	Ljava/util/List;	b	baseVariants
	f	Ljava/util/Set;	c	seenProperties
	f	Ljava/util/List;	d	declaredPropertySets
c	kz	net/minecraft/data/models/blockstates/PropertyDispatch
	m	()Ljava/util/Map;	a	getEntries
	m	(Ldgm;)Lkz$a;	a	property
		p	0		property
	m	(Ldgm;Ldgm;)Lkz$b;	a	properties
		p	0		first
		p	1		second
	m	(Ldgm;Ldgm;Ldgm;)Lkz$c;	a	properties
		p	0		first
		p	1		second
		p	2		third
	m	(Ldgm;Ldgm;Ldgm;Ldgm;)Lkz$d;	a	properties
		p	0		first
		p	1		second
		p	2		third
		p	3		fourth
	m	(Ldgm;Ldgm;Ldgm;Ldgm;Ldgm;)Lkz$e;	a	properties
		p	0		first
		p	1		second
		p	2		third
		p	3		fourth
		p	4		fifth
	m	(Ldgm;Lla;)Ljava/util/stream/Stream;	a	lambda$verifyComplete$0
		p	1		propertiesMap
	m	(Lla;)Z	a	lambda$verifyComplete$1
		p	1		propertiesMap
	m	(Lla;Ljava/util/List;)V	a	putValue
		p	1		condition
		p	2		possibleVariants
	m	()Ljava/util/List;	b	getDefinedProperties
	m	()V	c	verifyComplete
	f	Ljava/util/Map;	a	values
c	kz$a	net/minecraft/data/models/blockstates/PropertyDispatch$C1
	m	(Ldgm;)V	<init>	<init>
		p	1		property
	m	(Ljava/lang/Comparable;Ljava/util/List;)Lkz$a;	a	select
		p	1		value
		p	2		variants
	m	(Ljava/lang/Comparable;Llb;)Lkz$a;	a	select
		p	1		value
		p	2		variant
	m	(Ljava/util/function/Function;)Lkz;	a	generate
		p	1		variantFactory
	m	(Ljava/util/function/Function;Ljava/lang/Comparable;)V	a	lambda$generateList$1
		p	2		value
	m	()Ljava/util/List;	b	getDefinedProperties
	m	(Ljava/util/function/Function;)Lkz;	b	generateList
		p	1		variantFactory
	m	(Ljava/util/function/Function;Ljava/lang/Comparable;)V	b	lambda$generate$0
		p	2		value
	f	Ldgm;	a	property1
c	kz$b	net/minecraft/data/models/blockstates/PropertyDispatch$C2
	m	(Ldgm;Ldgm;)V	<init>	<init>
		p	1		first
		p	2		second
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/util/List;)Lkz$b;	a	select
		p	1		firstValue
		p	2		secondValue
		p	3		variants
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Llb;)Lkz$b;	a	select
		p	1		firstValue
		p	2		secondValue
		p	3		variant
	m	(Ljava/lang/Comparable;Ljava/util/function/BiFunction;Ljava/lang/Comparable;)V	a	lambda$generateList$2
		p	3		secondValue
	m	(Ljava/util/function/BiFunction;)Lkz;	a	generate
		p	1		variantFactory
	m	(Ljava/util/function/BiFunction;Ljava/lang/Comparable;)V	a	lambda$generateList$3
		p	2		firstValue
	m	()Ljava/util/List;	b	getDefinedProperties
	m	(Ljava/lang/Comparable;Ljava/util/function/BiFunction;Ljava/lang/Comparable;)V	b	lambda$generate$0
		p	3		secondValue
	m	(Ljava/util/function/BiFunction;)Lkz;	b	generateList
		p	1		variantsFactory
	m	(Ljava/util/function/BiFunction;Ljava/lang/Comparable;)V	b	lambda$generate$1
		p	2		firstValue
	f	Ldgm;	a	property1
	f	Ldgm;	b	property2
c	kz$c	net/minecraft/data/models/blockstates/PropertyDispatch$C3
	m	(Ldgm;Ldgm;Ldgm;)V	<init>	<init>
		p	1		first
		p	2		second
		p	3		third
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/util/List;)Lkz$c;	a	select
		p	1		firstValue
		p	2		secondValue
		p	3		thirdValue
		p	4		variants
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Llb;)Lkz$c;	a	select
		p	1		firstValue
		p	2		secondValue
		p	3		thirdValue
		p	4		variant
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Lkz$h;Ljava/lang/Comparable;)V	a	lambda$generateList$3
		p	4		thirdValue
	m	(Ljava/lang/Comparable;Lkz$h;Ljava/lang/Comparable;)V	a	lambda$generateList$4
		p	3		secondValue
	m	(Lkz$h;)Lkz;	a	generate
		p	1		variantFactory
	m	(Lkz$h;Ljava/lang/Comparable;)V	a	lambda$generateList$5
		p	2		firstValue
	m	()Ljava/util/List;	b	getDefinedProperties
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Lkz$h;Ljava/lang/Comparable;)V	b	lambda$generate$0
		p	4		thirdValue
	m	(Ljava/lang/Comparable;Lkz$h;Ljava/lang/Comparable;)V	b	lambda$generate$1
		p	3		secondValue
	m	(Lkz$h;)Lkz;	b	generateList
		p	1		variantFactory
	m	(Lkz$h;Ljava/lang/Comparable;)V	b	lambda$generate$2
		p	2		firstValue
	f	Ldgm;	a	property1
	f	Ldgm;	b	property2
	f	Ldgm;	c	property3
c	kz$d	net/minecraft/data/models/blockstates/PropertyDispatch$C4
	m	(Ldgm;Ldgm;Ldgm;Ldgm;)V	<init>	<init>
		p	1		first
		p	2		second
		p	3		third
		p	4		fourth
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/util/List;)Lkz$d;	a	select
		p	1		firstValue
		p	2		secondValue
		p	3		thirdValue
		p	4		fourthValue
		p	5		variants
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Llb;)Lkz$d;	a	select
		p	1		firstValue
		p	2		secondValue
		p	3		thirdValue
		p	4		fourthValue
		p	5		variant
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Lkz$g;Ljava/lang/Comparable;)V	a	lambda$generateList$4
		p	5		fourthValue
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Lkz$g;Ljava/lang/Comparable;)V	a	lambda$generateList$5
		p	4		thirdValue
	m	(Ljava/lang/Comparable;Lkz$g;Ljava/lang/Comparable;)V	a	lambda$generateList$6
		p	3		secondValue
	m	(Lkz$g;)Lkz;	a	generate
		p	1		variantFactory
	m	(Lkz$g;Ljava/lang/Comparable;)V	a	lambda$generateList$7
		p	2		firstValue
	m	()Ljava/util/List;	b	getDefinedProperties
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Lkz$g;Ljava/lang/Comparable;)V	b	lambda$generate$0
		p	5		fourthValue
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Lkz$g;Ljava/lang/Comparable;)V	b	lambda$generate$1
		p	4		thirdValue
	m	(Ljava/lang/Comparable;Lkz$g;Ljava/lang/Comparable;)V	b	lambda$generate$2
		p	3		secondValue
	m	(Lkz$g;)Lkz;	b	generateList
		p	1		variantFactory
	m	(Lkz$g;Ljava/lang/Comparable;)V	b	lambda$generate$3
		p	2		firstValue
	f	Ldgm;	a	property1
	f	Ldgm;	b	property2
	f	Ldgm;	c	property3
	f	Ldgm;	d	property4
c	kz$e	net/minecraft/data/models/blockstates/PropertyDispatch$C5
	m	(Ldgm;Ldgm;Ldgm;Ldgm;Ldgm;)V	<init>	<init>
		p	1		first
		p	2		second
		p	3		third
		p	4		fourth
		p	5		fifth
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/util/List;)Lkz$e;	a	select
		p	1		firstValue
		p	2		secondValue
		p	3		thirdValue
		p	4		fourthValue
		p	5		fifthValue
		p	6		variants
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Llb;)Lkz$e;	a	select
		p	1		firstValue
		p	2		secondValue
		p	3		thirdValue
		p	4		fourthValue
		p	5		fifthValue
		p	6		variant
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Lkz$f;Ljava/lang/Comparable;)V	a	lambda$generateList$5
		p	6		fifthValue
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Lkz$f;Ljava/lang/Comparable;)V	a	lambda$generateList$6
		p	5		fourthValue
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Lkz$f;Ljava/lang/Comparable;)V	a	lambda$generateList$7
		p	4		thirdValue
	m	(Ljava/lang/Comparable;Lkz$f;Ljava/lang/Comparable;)V	a	lambda$generateList$8
		p	3		secondValue
	m	(Lkz$f;)Lkz;	a	generate
		p	1		variantFactory
	m	(Lkz$f;Ljava/lang/Comparable;)V	a	lambda$generateList$9
		p	2		firstValue
	m	()Ljava/util/List;	b	getDefinedProperties
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Lkz$f;Ljava/lang/Comparable;)V	b	lambda$generate$0
		p	6		fifthValue
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Lkz$f;Ljava/lang/Comparable;)V	b	lambda$generate$1
		p	5		fourthValue
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Lkz$f;Ljava/lang/Comparable;)V	b	lambda$generate$2
		p	4		thirdValue
	m	(Ljava/lang/Comparable;Lkz$f;Ljava/lang/Comparable;)V	b	lambda$generate$3
		p	3		secondValue
	m	(Lkz$f;)Lkz;	b	generateList
		p	1		variantFactory
	m	(Lkz$f;Ljava/lang/Comparable;)V	b	lambda$generate$4
		p	2		firstValue
	f	Ldgm;	a	property1
	f	Ldgm;	b	property2
	f	Ldgm;	c	property3
	f	Ldgm;	d	property4
	f	Ldgm;	e	property5
c	kz$f	net/minecraft/data/models/blockstates/PropertyDispatch$PentaFunction
	m	(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;	apply	apply
		p	1		one
		p	2		two
		p	3		three
		p	4		four
		p	5		five
c	kz$g	net/minecraft/data/models/blockstates/PropertyDispatch$QuadFunction
	m	(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;	apply	apply
		p	1		one
		p	2		two
		p	3		three
		p	4		four
c	kz$h	net/minecraft/data/models/blockstates/PropertyDispatch$TriFunction
	m	(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;	apply	apply
		p	1		one
		p	2		two
		p	3		three
c	la	net/minecraft/data/models/blockstates/Selector
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		values
	m	()Lla;	a	empty
	m	(Ldgm$a;)Lla;	a	extend
		p	1		value
	m	(Lla;)Lla;	a	extend
		p	1		propertiesMap
	m	([Ldgm$a;)Lla;	a	of
		p	0		values
	m	()Ljava/lang/String;	b	getKey
	m	(Ldgm$a;)Ljava/lang/String;	b	lambda$static$0
		p	0		value
	f	Lla;	a	EMPTY
	f	Ljava/util/Comparator;	b	COMPARE_BY_NAME
	f	Ljava/util/List;	c	values
c	lb	net/minecraft/data/models/blockstates/Variant
	m	()Llb;	a	variant
	m	(Lcom/google/gson/JsonArray;Llb;)V	a	lambda$convertList$1
		p	1		variant
	m	(Lcom/google/gson/JsonObject;Lld$a;)V	a	lambda$get$0
		p	1		value
	m	(Ljava/util/List;)Lcom/google/gson/JsonElement;	a	convertList
		p	0		variants
	m	(Llb;Llb;)Llb;	a	merge
		p	0		first
		p	1		second
	m	(Lld;Ljava/lang/Object;)Llb;	a	with
		p	1		key
		p	2		value
	m	()Lcom/google/gson/JsonElement;	b	get
	f	Ljava/util/Map;	a	values
c	lc	net/minecraft/data/models/blockstates/VariantProperties
	m	(Laew;)Lcom/google/gson/JsonElement;	a	lambda$static$2
		p	0		id
	m	(Llc$a;)Lcom/google/gson/JsonElement;	a	lambda$static$1
		p	0		rotation
	m	(Llc$a;)Lcom/google/gson/JsonElement;	b	lambda$static$0
		p	0		rotation
	f	Lld;	a	X_ROT
	f	Lld;	b	Y_ROT
	f	Lld;	c	MODEL
	f	Lld;	d	UV_LOCK
	f	Lld;	e	WEIGHT
c	lc$a	net/minecraft/data/models/blockstates/VariantProperties$Rotation
	m	(Ljava/lang/String;II)V	<init>	<init>
		p	3		degrees
	m	()[Llc$a;	a	$values
	f	Llc$a;	a	R0
	f	Llc$a;	b	R90
	f	Llc$a;	c	R180
	f	Llc$a;	d	R270
	f	I	e	value
	f	[Llc$a;	f	$VALUES
c	ld	net/minecraft/data/models/blockstates/VariantProperty
	m	(Ljava/lang/String;Ljava/util/function/Function;)V	<init>	<init>
		p	1		key
		p	2		writer
	m	(Ljava/lang/Object;)Lld$a;	a	withValue
		p	1		value
	f	Ljava/lang/String;	a	key
	f	Ljava/util/function/Function;	b	serializer
c	ld$a	net/minecraft/data/models/blockstates/VariantProperty$Value
	m	(Lld;Ljava/lang/Object;)V	<init>	<init>
		p	2		value
	m	()Lld;	a	getKey
	m	(Lcom/google/gson/JsonObject;)V	a	addToVariant
		p	1		json
	f	Lld;	a	this$0
	f	Ljava/lang/Object;	b	value
c	le	net/minecraft/data/models/blockstates/package-info
c	lf	net/minecraft/data/models/model/DelegatedModel
	m	(Laew;)V	<init>	<init>
		p	1		parent
	m	()Lcom/google/gson/JsonElement;	a	get
	f	Laew;	a	parent
c	lg	net/minecraft/data/models/model/ModelLocationUtils
	m	(Lcja;)Laew;	a	getModelLocation
		p	0		item
	m	(Lcja;Ljava/lang/String;)Laew;	a	getModelLocation
		p	0		item
		p	1		suffix
	m	(Lcsv;)Laew;	a	getModelLocation
		p	0		block
	m	(Lcsv;Ljava/lang/String;)Laew;	a	getModelLocation
		p	0		block
		p	1		suffix
	m	(Ljava/lang/String;)Laew;	a	decorateBlockModelLocation
		p	0		name
	m	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	a	lambda$getModelLocation$1
		p	1		path
	m	(Ljava/lang/String;)Laew;	b	decorateItemModelLocation
		p	0		name
	m	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	b	lambda$getModelLocation$0
		p	1		path
c	lh	net/minecraft/data/models/model/ModelTemplate
	m	(Ljava/util/Optional;Ljava/util/Optional;[Llk;)V	<init>	<init>
		p	1		parent
		p	2		variant
		p	3		requiredTextureKeys
	m	(Laew;Ljava/util/Map;)Lcom/google/gson/JsonObject;	a	createBaseTemplate
		p	1		id
		p	2		textures
	m	(Laew;Llj;Ljava/util/function/BiConsumer;)Laew;	a	create
		p	1		id
		p	2		textures
		p	3		modelCollector
	m	(Laew;Llj;Ljava/util/function/BiConsumer;Llh$a;)Laew;	a	create
		p	1		id
		p	2		textures
		p	3		modelCollector
		p	4		jsonFactory
	m	(Lcom/google/gson/JsonObject;Laew;)V	a	lambda$createBaseTemplate$1
	m	(Lcom/google/gson/JsonObject;Llk;Laew;)V	a	lambda$createBaseTemplate$2
		p	1		textureKey
		p	2		texture
	m	(Lcsv;Ljava/lang/String;Llj;Ljava/util/function/BiConsumer;)Laew;	a	createWithSuffix
		p	1		block
		p	2		suffix
		p	3		textures
		p	4		modelCollector
	m	(Lcsv;Llj;Ljava/util/function/BiConsumer;)Laew;	a	create
		p	1		block
		p	2		textures
		p	3		modelCollector
	m	(Llh$a;Laew;Ljava/util/Map;)Lcom/google/gson/JsonElement;	a	lambda$create$0
	m	(Llj;)Ljava/util/Map;	a	createMap
		p	1		textures
	m	(Lcsv;Ljava/lang/String;Llj;Ljava/util/function/BiConsumer;)Laew;	b	createWithOverride
		p	1		block
		p	2		suffix
		p	3		textures
		p	4		modelCollector
	f	Ljava/util/Optional;	a	model
	f	Ljava/util/Set;	b	requiredSlots
	f	Ljava/util/Optional;	c	suffix
c	lh$a	net/minecraft/data/models/model/ModelTemplate$JsonFactory
	m	(Laew;Ljava/util/Map;)Lcom/google/gson/JsonObject;	create	create
		p	1		id
		p	2		textures
c	li	net/minecraft/data/models/model/ModelTemplates
	m	(I)[Llh;	a	lambda$static$1
	m	(Ljava/lang/String;Ljava/lang/String;[Llk;)Llh;	a	create
		p	0		parent
		p	1		variant
		p	2		requiredTextureKeys
	m	(Ljava/lang/String;[Llk;)Llh;	a	create
		p	0		parent
		p	1		requiredTextureKeys
	m	([Llk;)Llh;	a	create
		p	0		requiredTextureKeys
	m	(I)Llh;	b	lambda$static$0
		p	0		stage
	m	(Ljava/lang/String;[Llk;)Llh;	b	createItem
		p	0		parent
		p	1		requiredTextureKeys
	f	Llh;	A	DOOR_TOP_RIGHT_OPEN
	f	Llh;	B	CUSTOM_FENCE_POST
	f	Llh;	C	CUSTOM_FENCE_SIDE_NORTH
	f	Llh;	D	CUSTOM_FENCE_SIDE_EAST
	f	Llh;	E	CUSTOM_FENCE_SIDE_SOUTH
	f	Llh;	F	CUSTOM_FENCE_SIDE_WEST
	f	Llh;	G	CUSTOM_FENCE_INVENTORY
	f	Llh;	H	FENCE_POST
	f	Llh;	I	FENCE_SIDE
	f	Llh;	J	FENCE_INVENTORY
	f	Llh;	K	WALL_POST
	f	Llh;	L	WALL_LOW_SIDE
	f	Llh;	M	WALL_TALL_SIDE
	f	Llh;	N	WALL_INVENTORY
	f	Llh;	O	CUSTOM_FENCE_GATE_CLOSED
	f	Llh;	P	CUSTOM_FENCE_GATE_OPEN
	f	Llh;	Q	CUSTOM_FENCE_GATE_WALL_CLOSED
	f	Llh;	R	CUSTOM_FENCE_GATE_WALL_OPEN
	f	Llh;	S	FENCE_GATE_CLOSED
	f	Llh;	T	FENCE_GATE_OPEN
	f	Llh;	U	FENCE_GATE_WALL_CLOSED
	f	Llh;	V	FENCE_GATE_WALL_OPEN
	f	Llh;	W	PRESSURE_PLATE_UP
	f	Llh;	X	PRESSURE_PLATE_DOWN
	f	Llh;	Y	PARTICLE_ONLY
	f	Llh;	Z	SLAB_BOTTOM
	f	Llh;	aA	CORAL_WALL_FAN
	f	Llh;	aB	GLAZED_TERRACOTTA
	f	Llh;	aC	CHORUS_FLOWER
	f	Llh;	aD	DAYLIGHT_DETECTOR
	f	Llh;	aE	STAINED_GLASS_PANE_NOSIDE
	f	Llh;	aF	STAINED_GLASS_PANE_NOSIDE_ALT
	f	Llh;	aG	STAINED_GLASS_PANE_POST
	f	Llh;	aH	STAINED_GLASS_PANE_SIDE
	f	Llh;	aI	STAINED_GLASS_PANE_SIDE_ALT
	f	Llh;	aJ	COMMAND_BLOCK
	f	Llh;	aK	CHISELED_BOOKSHELF_SLOT_TOP_LEFT
	f	Llh;	aL	CHISELED_BOOKSHELF_SLOT_TOP_MID
	f	Llh;	a	CUBE
	f	Llh;	aM	CHISELED_BOOKSHELF_SLOT_TOP_RIGHT
	f	Llh;	aN	CHISELED_BOOKSHELF_SLOT_BOTTOM_LEFT
	f	Llh;	aO	CHISELED_BOOKSHELF_SLOT_BOTTOM_MID
	f	Llh;	aP	CHISELED_BOOKSHELF_SLOT_BOTTOM_RIGHT
	f	Llh;	aQ	ANVIL
	f	[Llh;	aR	STEMS
	f	Llh;	aS	ATTACHED_STEM
	f	Llh;	aT	CROP
	f	Llh;	aU	FARMLAND
	f	Llh;	aV	FIRE_FLOOR
	f	Llh;	aW	FIRE_SIDE
	f	Llh;	aX	FIRE_SIDE_ALT
	f	Llh;	aY	FIRE_UP
	f	Llh;	aZ	FIRE_UP_ALT
	f	Llh;	aa	SLAB_TOP
	f	Llh;	ab	LEAVES
	f	Llh;	ac	STAIRS_STRAIGHT
	f	Llh;	ad	STAIRS_INNER
	f	Llh;	ae	STAIRS_OUTER
	f	Llh;	af	TRAPDOOR_TOP
	f	Llh;	ag	TRAPDOOR_BOTTOM
	f	Llh;	ah	TRAPDOOR_OPEN
	f	Llh;	ai	ORIENTABLE_TRAPDOOR_TOP
	f	Llh;	aj	ORIENTABLE_TRAPDOOR_BOTTOM
	f	Llh;	ak	ORIENTABLE_TRAPDOOR_OPEN
	f	Llh;	al	POINTED_DRIPSTONE
	f	Llh;	am	CROSS
	f	Llh;	an	TINTED_CROSS
	f	Llh;	ao	FLOWER_POT_CROSS
	f	Llh;	ap	TINTED_FLOWER_POT_CROSS
	f	Llh;	aq	RAIL_FLAT
	f	Llh;	ar	RAIL_CURVED
	f	Llh;	as	RAIL_RAISED_NE
	f	Llh;	at	RAIL_RAISED_SW
	f	Llh;	au	CARPET
	f	Llh;	av	FLOWERBED_1
	f	Llh;	aw	FLOWERBED_2
	f	Llh;	ax	FLOWERBED_3
	f	Llh;	ay	FLOWERBED_4
	f	Llh;	az	CORAL_FAN
	f	Llh;	bA	THREE_LAYERED_ITEM
	f	Llh;	bB	SHULKER_BOX_INVENTORY
	f	Llh;	bC	BED_INVENTORY
	f	Llh;	bD	BANNER_INVENTORY
	f	Llh;	bE	SKULL_INVENTORY
	f	Llh;	bF	CANDLE
	f	Llh;	bG	TWO_CANDLES
	f	Llh;	bH	THREE_CANDLES
	f	Llh;	bI	FOUR_CANDLES
	f	Llh;	bJ	CANDLE_CAKE
	f	Llh;	bK	SCULK_SHRIEKER
	f	Llh;	b	CUBE_DIRECTIONAL
	f	Llh;	ba	CAMPFIRE
	f	Llh;	bb	LANTERN
	f	Llh;	bc	HANGING_LANTERN
	f	Llh;	bd	TORCH
	f	Llh;	be	WALL_TORCH
	f	Llh;	bf	PISTON
	f	Llh;	bg	PISTON_HEAD
	f	Llh;	bh	PISTON_HEAD_SHORT
	f	Llh;	bi	SEAGRASS
	f	Llh;	bj	TURTLE_EGG
	f	Llh;	bk	TWO_TURTLE_EGGS
	f	Llh;	bl	THREE_TURTLE_EGGS
	f	Llh;	bm	FOUR_TURTLE_EGGS
	f	Llh;	bn	SINGLE_FACE
	f	Llh;	bo	CAULDRON_LEVEL1
	f	Llh;	bp	CAULDRON_LEVEL2
	f	Llh;	bq	CAULDRON_FULL
	f	Llh;	br	AZALEA
	f	Llh;	bs	POTTED_AZALEA
	f	Llh;	bt	POTTED_FLOWERING_AZALEA
	f	Llh;	bu	SNIFFER_EGG
	f	Llh;	bv	FLAT_ITEM
	f	Llh;	bw	MUSIC_DISC
	f	Llh;	bx	FLAT_HANDHELD_ITEM
	f	Llh;	by	FLAT_HANDHELD_ROD_ITEM
	f	Llh;	bz	TWO_LAYERED_ITEM
	f	Llh;	c	CUBE_ALL
	f	Llh;	d	CUBE_MIRRORED_ALL
	f	Llh;	e	CUBE_NORTH_WEST_MIRRORED_ALL
	f	Llh;	f	CUBE_COLUMN_UV_LOCKED_X
	f	Llh;	g	CUBE_COLUMN_UV_LOCKED_Y
	f	Llh;	h	CUBE_COLUMN_UV_LOCKED_Z
	f	Llh;	i	CUBE_COLUMN
	f	Llh;	j	CUBE_COLUMN_HORIZONTAL
	f	Llh;	k	CUBE_COLUMN_MIRRORED
	f	Llh;	l	CUBE_TOP
	f	Llh;	m	CUBE_BOTTOM_TOP
	f	Llh;	n	CUBE_ORIENTABLE
	f	Llh;	o	CUBE_ORIENTABLE_TOP_BOTTOM
	f	Llh;	p	CUBE_ORIENTABLE_VERTICAL
	f	Llh;	q	BUTTON
	f	Llh;	r	BUTTON_PRESSED
	f	Llh;	s	BUTTON_INVENTORY
	f	Llh;	t	DOOR_BOTTOM_LEFT
	f	Llh;	u	DOOR_BOTTOM_LEFT_OPEN
	f	Llh;	v	DOOR_BOTTOM_RIGHT
	f	Llh;	w	DOOR_BOTTOM_RIGHT_OPEN
	f	Llh;	x	DOOR_TOP_LEFT
	f	Llh;	y	DOOR_TOP_LEFT_OPEN
	f	Llh;	z	DOOR_TOP_RIGHT
c	lj	net/minecraft/data/models/model/TextureMapping
	m	(Lcsv;)Llj;	A	orientableCube
		p	0		block
	m	(Lcsv;)Llj;	B	orientableCubeOnlyTop
		p	0		block
	m	(Lcsv;)Llj;	C	orientableCubeSameEnds
		p	0		block
	m	(Lcsv;)Llj;	D	top
		p	0		top
	m	(Lcsv;)Llj;	E	campfire
		p	0		block
	m	(Lcsv;)Llj;	F	layer0
		p	0		block
	m	(Lcsv;)Laew;	G	getBlockTexture
		p	0		block
	m	()Ljava/util/stream/Stream;	a	getForced
	m	(Laew;)Llj;	a	defaultTexture
		p	0		id
	m	(Laew;Laew;)Llj;	a	column
		p	0		side
		p	1		end
	m	(Laew;Laew;Laew;)Llj;	a	layered
		p	0		layer0
		p	1		layer1
		p	2		layer2
	m	(Lcja;)Llj;	a	particleFromItem
		p	0		item
	m	(Lcja;Ljava/lang/String;)Laew;	a	getItemTexture
		p	0		item
		p	1		suffix
	m	(Lcsv;)Llj;	a	cube
		p	0		block
	m	(Lcsv;Lcsv;)Llj;	a	attachedStem
		p	0		stem
		p	1		upper
	m	(Lcsv;Ljava/lang/String;)Laew;	a	getBlockTexture
		p	0		block
		p	1		suffix
	m	(Lcsv;Z)Llj;	a	candleCake
		p	0		block
		p	1		lit
	m	(Ljava/lang/String;)Llj;	a	snifferEgg
		p	0		age
	m	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	a	lambda$getItemTexture$1
		p	1		path
	m	(Llk;)Laew;	a	get
		p	1		key
	m	(Llk;Laew;)Llj;	a	put
		p	1		key
		p	2		id
	m	(Llk;Llk;)Llj;	a	copySlot
		p	1		parent
		p	2		child
	m	(Z)Llj;	a	sculkShrieker
		p	0		canSummon
	m	(Laew;)Llj;	b	cube
		p	0		id
	m	(Laew;Laew;)Llj;	b	door
		p	0		top
		p	1		bottom
	m	(Lcja;)Llj;	b	layer0
		p	0		item
	m	(Lcsv;)Llj;	b	defaultTexture
		p	0		block
	m	(Lcsv;Lcsv;)Llj;	b	pane
		p	0		block
		p	1		top
	m	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	b	lambda$getBlockTexture$0
		p	1		path
	m	(Llk;Laew;)Llj;	b	putForced
		p	1		key
		p	2		id
	m	(Llk;Llk;)Llj;	b	copyForced
		p	1		parent
		p	2		child
	m	(Laew;)Llj;	c	cross
		p	0		id
	m	(Laew;Laew;)Llj;	c	layered
		p	0		layer0
		p	1		layer1
	m	(Lcja;)Laew;	c	getItemTexture
		p	0		item
	m	(Lcsv;)Llj;	c	cross
		p	0		block
	m	(Lcsv;Lcsv;)Llj;	c	craftingTable
		p	0		block
		p	1		bottom
	m	(Llk;Laew;)Llj;	c	copyAndUpdate
		p	1		key
		p	2		id
	m	(Laew;)Llj;	d	plant
		p	0		id
	m	(Lcsv;)Llj;	d	plant
		p	0		block
	m	(Lcsv;Lcsv;)Llj;	d	fletchingTable
		p	0		frontTopSideBlock
		p	1		downBlock
	m	(Llk;Laew;)Llj;	d	singleSlot
		p	0		key
		p	1		id
	m	(Laew;)Llj;	e	rail
		p	0		id
	m	(Lcsv;)Llj;	e	rail
		p	0		block
	m	(Laew;)Llj;	f	wool
		p	0		id
	m	(Lcsv;)Llj;	f	wool
		p	0		block
	m	(Laew;)Llj;	g	crop
		p	0		id
	m	(Lcsv;)Llj;	g	flowerbed
		p	0		block
	m	(Laew;)Llj;	h	particle
		p	0		id
	m	(Lcsv;)Llj;	h	stem
		p	0		block
	m	(Laew;)Llj;	i	torch
		p	0		id
	m	(Lcsv;)Llj;	i	pattern
		p	0		block
	m	(Laew;)Llj;	j	cauldron
		p	0		content
	m	(Lcsv;)Llj;	j	fan
		p	0		block
	m	(Laew;)Llj;	k	layer0
		p	0		id
	m	(Lcsv;)Llj;	k	column
		p	0		block
	m	(Lcsv;)Llj;	l	cubeTop
		p	0		block
	m	(Lcsv;)Llj;	m	pottedAzalea
		p	0		block
	m	(Lcsv;)Llj;	n	logColumn
		p	0		block
	m	(Lcsv;)Llj;	o	fence
		p	0		block
	m	(Lcsv;)Llj;	p	customParticle
		p	0		block
	m	(Lcsv;)Llj;	q	cubeBottomTop
		p	0		block
	m	(Lcsv;)Llj;	r	cubeBottomTopWithWall
		p	0		block
	m	(Lcsv;)Llj;	s	columnWithWall
		p	0		block
	m	(Lcsv;)Llj;	t	door
		p	0		block
	m	(Lcsv;)Llj;	u	particle
		p	0		block
	m	(Lcsv;)Llj;	v	fire0
		p	0		block
	m	(Lcsv;)Llj;	w	fire1
		p	0		block
	m	(Lcsv;)Llj;	x	lantern
		p	0		block
	m	(Lcsv;)Llj;	y	torch
		p	0		block
	m	(Lcsv;)Llj;	z	commandBlock
		p	0		block
	f	Ljava/util/Map;	a	slots
	f	Ljava/util/Set;	b	forcedSlots
c	lk	net/minecraft/data/models/model/TextureSlot
	m	(Ljava/lang/String;Llk;)V	<init>	<init>
		p	1		name
		p	2		parent
	m	()Ljava/lang/String;	a	getId
	m	(Ljava/lang/String;)Llk;	a	create
		p	0		name
	m	(Ljava/lang/String;Llk;)Llk;	a	create
		p	0		name
		p	1		parent
	m	()Llk;	b	getParent
	f	Llk;	A	CROP
	f	Llk;	B	DIRT
	f	Llk;	C	FIRE
	f	Llk;	D	LANTERN
	f	Llk;	E	PLATFORM
	f	Llk;	F	UNSTICKY
	f	Llk;	G	TORCH
	f	Llk;	H	LAYER0
	f	Llk;	I	LAYER1
	f	Llk;	J	LAYER2
	f	Llk;	K	LIT_LOG
	f	Llk;	L	CANDLE
	f	Llk;	M	INSIDE
	f	Llk;	N	CONTENT
	f	Llk;	O	INNER_TOP
	f	Llk;	P	FLOWERBED
	f	Ljava/lang/String;	Q	id
	f	Llk;	R	parent
	f	Llk;	a	ALL
	f	Llk;	b	TEXTURE
	f	Llk;	c	PARTICLE
	f	Llk;	d	END
	f	Llk;	e	BOTTOM
	f	Llk;	f	TOP
	f	Llk;	g	FRONT
	f	Llk;	h	BACK
	f	Llk;	i	SIDE
	f	Llk;	j	NORTH
	f	Llk;	k	SOUTH
	f	Llk;	l	EAST
	f	Llk;	m	WEST
	f	Llk;	n	UP
	f	Llk;	o	DOWN
	f	Llk;	p	CROSS
	f	Llk;	q	PLANT
	f	Llk;	r	WALL
	f	Llk;	s	RAIL
	f	Llk;	t	WOOL
	f	Llk;	u	PATTERN
	f	Llk;	v	PANE
	f	Llk;	w	EDGE
	f	Llk;	x	FAN
	f	Llk;	y	STEM
	f	Llk;	z	UPPER_STEM
c	ll	net/minecraft/data/models/model/TexturedModel
	m	(Llj;Llh;)V	<init>	<init>
		p	1		textures
		p	2		model
	m	()Llh;	a	getTemplate
	m	(Laew;)Lll;	a	createAllSame
		p	0		id
	m	(Lcsv;Ljava/lang/String;Ljava/util/function/BiConsumer;)Laew;	a	createWithSuffix
		p	1		block
		p	2		suffix
		p	3		writer
	m	(Lcsv;Ljava/util/function/BiConsumer;)Laew;	a	create
		p	1		block
		p	2		writer
	m	(Ljava/util/function/Consumer;)Lll;	a	updateTextures
		p	1		texturesConsumer
	m	(Ljava/util/function/Function;Llh;)Lll$a;	a	createDefault
		p	0		texturesGetter
		p	1		model
	m	(Ljava/util/function/Function;Llh;Lcsv;)Lll;	a	lambda$createDefault$0
		p	2		block
	m	()Llj;	b	getMapping
	f	Llh;	A	template
	f	Lll$a;	a	CUBE
	f	Lll$a;	b	CUBE_MIRRORED
	f	Lll$a;	c	COLUMN
	f	Lll$a;	d	COLUMN_HORIZONTAL
	f	Lll$a;	e	CUBE_TOP_BOTTOM
	f	Lll$a;	f	CUBE_TOP
	f	Lll$a;	g	ORIENTABLE_ONLY_TOP
	f	Lll$a;	h	ORIENTABLE
	f	Lll$a;	i	CARPET
	f	Lll$a;	j	FLOWERBED_1
	f	Lll$a;	k	FLOWERBED_2
	f	Lll$a;	l	FLOWERBED_3
	f	Lll$a;	m	FLOWERBED_4
	f	Lll$a;	n	GLAZED_TERRACOTTA
	f	Lll$a;	o	CORAL_FAN
	f	Lll$a;	p	PARTICLE_ONLY
	f	Lll$a;	q	ANVIL
	f	Lll$a;	r	LEAVES
	f	Lll$a;	s	LANTERN
	f	Lll$a;	t	HANGING_LANTERN
	f	Lll$a;	u	SEAGRASS
	f	Lll$a;	v	COLUMN_ALT
	f	Lll$a;	w	COLUMN_HORIZONTAL_ALT
	f	Lll$a;	x	TOP_BOTTOM_WITH_WALL
	f	Lll$a;	y	COLUMN_WITH_WALL
	f	Llj;	z	mapping
c	ll$a	net/minecraft/data/models/model/TexturedModel$Provider
	m	(Ljava/util/function/Consumer;Lcsv;)Lll;	a	lambda$updateTexture$0
		p	2		block
	m	(Lcsv;Ljava/util/function/BiConsumer;)Laew;	create	create
		p	1		block
		p	2		writer
	m	(Lcsv;Ljava/lang/String;Ljava/util/function/BiConsumer;)Laew;	createWithSuffix	createWithSuffix
		p	1		block
		p	2		suffix
		p	3		writer
	m	(Lcsv;)Lll;	get	get
		p	1		block
	m	(Ljava/util/function/Consumer;)Lll$a;	updateTexture	updateTexture
		p	1		consumer
c	lm	net/minecraft/data/models/model/package-info
c	ln	net/minecraft/data/models/package-info
c	lo	net/minecraft/data/package-info
c	lp	net/minecraft/data/recipes/CraftingRecipeBuilder
	m	(Lls;)Lcly;	a	determineBookCategory
		p	0		category
c	lp$1	net/minecraft/data/recipes/CraftingRecipeBuilder$1
	f	[I	a	$SwitchMap$net$minecraft$data$recipes$RecipeCategory
c	lp$a	net/minecraft/data/recipes/CraftingRecipeBuilder$CraftingResult
	m	(Lcly;)V	<init>	<init>
		p	1		craftingCategory
	m	(Lcom/google/gson/JsonObject;)V	a	serializeRecipeData
		p	1		json
	f	Lcly;	a	category
c	lq	net/minecraft/data/recipes/FinishedRecipe
	m	()Lcom/google/gson/JsonObject;	a	serializeRecipe
	m	(Lcom/google/gson/JsonObject;)V	a	serializeRecipeData
		p	1		json
	m	()Laew;	b	id
	m	()Lcmm;	c	type
	m	()Laf;	d	advancement
c	lr	net/minecraft/data/recipes/RecipeBuilder
	m	()Lcja;	a	getResult
	m	(Lcpu;)Laew;	a	getDefaultRecipeId
		p	0		item
	m	(Ljava/lang/String;)Llr;	a	group
		p	1		group
	m	(Ljava/lang/String;Lam;)Llr;	a	unlockedBy
		p	1		name
		p	2		criterion
	m	(Llt;)V	a	save
		p	1		exporter
	m	(Llt;Laew;)V	a	save
		p	1		exporter
		p	2		recipeId
	m	(Llt;Ljava/lang/String;)V	a	save
		p	1		exporter
		p	2		recipePath
	f	Laew;	a	ROOT_RECIPE_ADVANCEMENT
c	ls	net/minecraft/data/recipes/RecipeCategory
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()Ljava/lang/String;	a	getFolderName
	m	()[Lls;	b	$values
	f	Lls;	a	BUILDING_BLOCKS
	f	Lls;	b	DECORATIONS
	f	Lls;	c	REDSTONE
	f	Lls;	d	TRANSPORTATION
	f	Lls;	e	TOOLS
	f	Lls;	f	COMBAT
	f	Lls;	g	FOOD
	f	Lls;	h	BREWING
	f	Lls;	i	MISC
	f	Ljava/lang/String;	j	recipeFolderName
	f	[Lls;	k	$VALUES
c	lt	net/minecraft/data/recipes/RecipeOutput
	m	()Lae$a;	a	advancement
	m	(Llq;)V	a	accept
		p	1		recipeJsonProvider
c	lu	net/minecraft/data/recipes/RecipeProvider
	m	(Ljk;)V	<init>	<init>
		p	1		output
	m	()Ljava/lang/String;	a	getName
	m	(I)[Lcb;	a	lambda$inventoryTrigger$23
	m	(Laqh;)Lam;	a	has
		p	0		tag
	m	(Lcec;Ljf;)Z	a	lambda$generateForEnabledBlockFamilies$1
		p	1		family
	m	(Lcja;Lcja;)Z	a	lambda$colorBlockWithDye$3
		p	1		dyeable
	m	(Lcl$d;Lcpu;)Lam;	a	has
		p	0		count
		p	1		item
	m	(Lcpu;)Lam;	a	has
		p	0		item
	m	(Lcpu;Lcmg;)Llr;	a	doorBuilder
		p	0		output
		p	1		input
	m	(Lcpu;Lcpu;)Ljava/lang/String;	a	getConversionRecipeName
		p	0		to
		p	1		from
	m	(Lcsv;)Lam;	a	insideOf
		p	0		block
	m	(Ljf;Ljf$b;)Lcsv;	a	getBaseBlock
		p	0		family
		p	1		variant
	m	(Ljf;Llt;Ljf$b;Lcsv;)V	a	lambda$generateRecipes$7
		p	2		variant
		p	3		block
	m	(Ljg;)Ljava/util/concurrent/CompletableFuture;	a	run
		p	1		writer
	m	(Ljg;Laf;)Ljava/util/concurrent/CompletableFuture;	a	buildAdvancement
		p	1		cache
		p	2		advancement
	m	(Llr;Ljf$b;Ljava/lang/String;)V	a	lambda$generateRecipes$5
		p	2		group
	m	(Lls;Lcpu;Lcmg;)Llr;	a	slabBuilder
		p	0		category
		p	1		output
		p	2		input
	m	(Llt;)V	a	buildRecipes
		p	1		exporter
	m	(Llt;Lcec;)V	a	generateForEnabledBlockFamilies
		p	0		exporter
		p	1		enabledFeatures
	m	(Llt;Lcja;Laew;)V	a	trimSmithing
		p	0		exporter
		p	1		template
		p	2		recipeId
	m	(Llt;Lcja;Lls;Lcja;)V	a	netheriteSmithing
		p	0		exporter
		p	1		input
		p	2		category
		p	3		result
	m	(Llt;Lcmm;Ljava/util/List;Lls;Lcpu;FILjava/lang/String;Ljava/lang/String;)V	a	oreCooking
		p	0		exporter
		p	1		serializer
		p	2		inputs
		p	3		category
		p	4		output
		p	5		experience
		p	6		cookingTime
		p	7		group
		p	8		method
	m	(Llt;Lcpu;Laqh;)V	a	copySmithingTemplate
		p	0		exporter
		p	1		template
		p	2		resource
	m	(Llt;Lcpu;Laqh;I)V	a	planksFromLog
		p	0		exporter
		p	1		output
		p	2		input
		p	3		count
	m	(Llt;Lcpu;Lcpu;)V	a	woodFromLogs
		p	0		exporter
		p	1		output
		p	2		input
	m	(Llt;Lcpu;Lcpu;Ljava/lang/String;)V	a	oneToOneConversionRecipe
		p	0		exporter
		p	1		output
		p	2		input
		p	3		group
	m	(Llt;Lcpu;Lcpu;Ljava/lang/String;I)V	a	oneToOneConversionRecipe
		p	0		exporter
		p	1		output
		p	2		input
		p	3		group
		p	4		outputCount
	m	(Llt;Lcsv;Lcsv;)V	a	lambda$waxRecipes$4
		p	1		input
		p	2		output
	m	(Llt;Ljava/lang/String;Lcmm;I)V	a	cookRecipes
		p	0		exporter
		p	1		cooker
		p	2		serializer
		p	3		cookingTime
	m	(Llt;Ljava/lang/String;Lcmm;ILcpu;Lcpu;F)V	a	simpleCookingRecipe
		p	0		exporter
		p	1		cooker
		p	2		serializer
		p	3		cookingTime
		p	4		input
		p	5		output
		p	6		experience
	m	(Llt;Ljava/util/List;Ljava/util/List;Ljava/lang/String;)V	a	colorBlockWithDye
		p	0		exporter
		p	1		dyes
		p	2		dyeables
		p	3		group
	m	(Llt;Ljava/util/List;Lls;Lcpu;FILjava/lang/String;)V	a	oreSmelting
		p	0		exporter
		p	1		inputs
		p	2		category
		p	3		output
		p	4		experience
		p	5		cookingTime
		p	6		group
	m	(Llt;Ljf;)V	a	generateRecipes
		p	0		exporter
		p	1		family
	m	(Llt;Lls;Lcpu;Lcpu;)V	a	twoByTwoPacker
		p	0		exporter
		p	1		category
		p	2		output
		p	3		input
	m	(Llt;Lls;Lcpu;Lcpu;I)V	a	stonecutterResultFromBase
		p	0		exporter
		p	1		category
		p	2		output
		p	3		input
		p	4		count
	m	(Llt;Lls;Lcpu;Lcpu;Ljava/lang/String;)V	a	threeByThreePacker
		p	0		exporter
		p	1		category
		p	2		output
		p	3		input
		p	4		criterionName
	m	(Llt;Lls;Lcpu;Lls;Lcpu;)V	a	nineBlockStorageRecipes
		p	0		exporter
		p	1		reverseCategory
		p	2		baseItem
		p	3		compactingCategory
		p	4		compactItem
	m	(Llt;Lls;Lcpu;Lls;Lcpu;Ljava/lang/String;Ljava/lang/String;)V	a	nineBlockStorageRecipesWithCustomPacking
		p	0		exporter
		p	1		reverseCategory
		p	2		baseItem
		p	3		compactingCategory
		p	4		compactItem
		p	5		compactingId
		p	6		compactingGroup
	m	(Llt;Lls;Lcpu;Lls;Lcpu;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V	a	nineBlockStorageRecipes
		p	0		exporter
		p	1		reverseCategory
		p	2		baseItem
		p	3		compactingCategory
		p	4		compactItem
		p	5		compactingId
		p	6		compactingGroup
		p	7		reverseId
		p	8		reverseGroup
	m	([Lcb$a;)Lam;	a	inventoryTrigger
		p	0		predicates
	m	([Lcb;)Lam;	a	inventoryTrigger
		p	0		predicates
	m	(I)[Ljava/util/concurrent/CompletableFuture;	b	lambda$run$0
	m	(Lcpu;)Ljava/lang/String;	b	getHasName
		p	0		item
	m	(Lcpu;Lcmg;)Llr;	b	stairBuilder
		p	0		output
		p	1		input
	m	(Lcpu;Lcpu;)Llr;	b	lambda$static$22
		p	0		output
		p	1		input
	m	(Lls;Lcpu;Lcmg;)Llv;	b	chiseledBuilder
		p	0		category
		p	1		output
		p	2		input
	m	(Llt;)V	b	waxRecipes
		p	0		exporter
	m	(Llt;Lcpu;Laqh;I)V	b	planksFromLogs
		p	0		exporter
		p	1		output
		p	2		input
		p	3		count
	m	(Llt;Lcpu;Lcpu;)V	b	woodenBoat
		p	0		exporter
		p	1		output
		p	2		input
	m	(Llt;Ljava/util/List;Lls;Lcpu;FILjava/lang/String;)V	b	oreBlasting
		p	0		exporter
		p	1		inputs
		p	2		category
		p	3		output
		p	4		experience
		p	5		cookingTime
		p	6		group
	m	(Llt;Ljf;)V	b	lambda$generateForEnabledBlockFamilies$2
		p	1		family
	m	(Llt;Lls;Lcpu;Lcpu;)V	b	threeByThreePacker
		p	0		exporter
		p	1		category
		p	2		output
		p	3		input
	m	(Llt;Lls;Lcpu;Lls;Lcpu;Ljava/lang/String;Ljava/lang/String;)V	b	nineBlockStorageRecipesRecipesWithCustomUnpacking
		p	0		exporter
		p	1		reverseCategory
		p	2		baseItem
		p	3		compactingCategory
		p	4		compactItem
		p	5		reverseId
		p	6		reverseGroup
	m	(Lcpu;)Ljava/lang/String;	c	getItemName
		p	0		item
	m	(Lcpu;Lcmg;)Llr;	c	buttonBuilder
		p	0		output
		p	1		input
	m	(Lcpu;Lcpu;)Llr;	c	lambda$static$21
		p	0		output
		p	1		input
	m	(Lls;Lcpu;Lcmg;)Llr;	c	pressurePlateBuilder
		p	0		category
		p	1		output
		p	2		input
	m	(Llt;Lcpu;Lcpu;)V	c	chestBoat
		p	0		exporter
		p	1		output
		p	2		input
	m	(Llt;Lls;Lcpu;Lcpu;)V	c	slab
		p	0		exporter
		p	1		category
		p	2		output
		p	3		input
	m	(Lcpu;)Ljava/lang/String;	d	getSimpleRecipeName
		p	0		item
	m	(Lcpu;Lcmg;)Llr;	d	fenceBuilder
		p	0		output
		p	1		input
	m	(Lcpu;Lcpu;)Llr;	d	lambda$static$20
		p	0		output
		p	1		input
	m	(Lls;Lcpu;Lcmg;)Llr;	d	wallBuilder
		p	0		category
		p	1		output
		p	2		input
	m	(Llt;Lcpu;Lcpu;)V	d	pressurePlate
		p	0		exporter
		p	1		output
		p	2		input
	m	(Llt;Lls;Lcpu;Lcpu;)V	d	wall
		p	0		exporter
		p	1		category
		p	2		output
		p	3		input
	m	(Lcpu;)Ljava/lang/String;	e	getSmeltingRecipeName
		p	0		item
	m	(Lcpu;Lcmg;)Llr;	e	fenceGateBuilder
		p	0		output
		p	1		input
	m	(Lcpu;Lcpu;)Llr;	e	lambda$static$19
		p	0		output
		p	1		input
	m	(Lls;Lcpu;Lcmg;)Llr;	e	polishedBuilder
		p	0		category
		p	1		output
		p	2		input
	m	(Llt;Lcpu;Lcpu;)V	e	hangingSign
		p	0		exporter
		p	1		output
		p	2		input
	m	(Llt;Lls;Lcpu;Lcpu;)V	e	polished
		p	0		exporter
		p	1		category
		p	2		output
		p	3		input
	m	(Lcpu;)Ljava/lang/String;	f	getBlastingRecipeName
		p	0		item
	m	(Lcpu;Lcmg;)Llr;	f	trapdoorBuilder
		p	0		output
		p	1		input
	m	(Lcpu;Lcpu;)Llr;	f	lambda$static$18
		p	0		output
		p	1		input
	m	(Lls;Lcpu;Lcmg;)Llv;	f	cutBuilder
		p	0		category
		p	1		output
		p	2		input
	m	(Llt;Lcpu;Lcpu;)V	f	carpet
		p	0		exporter
		p	1		output
		p	2		input
	m	(Llt;Lls;Lcpu;Lcpu;)V	f	cut
		p	0		exporter
		p	1		category
		p	2		output
		p	3		input
	m	(Lcpu;)Ljava/lang/String;	g	lambda$generateRecipes$6
	m	(Lcpu;Lcmg;)Llr;	g	signBuilder
		p	0		output
		p	1		input
	m	(Lcpu;Lcpu;)Llr;	g	lambda$static$17
		p	0		output
		p	1		input
	m	(Llt;Lcpu;Lcpu;)V	g	bedFromPlanksAndWool
		p	0		exporter
		p	1		output
		p	2		input
	m	(Llt;Lls;Lcpu;Lcpu;)V	g	chiseled
		p	0		exporter
		p	1		category
		p	2		output
		p	3		input
	m	(Lcpu;Lcpu;)Llr;	h	lambda$static$16
		p	0		output
		p	1		input
	m	(Llt;Lcpu;Lcpu;)V	h	banner
		p	0		exporter
		p	1		output
		p	2		input
	m	(Llt;Lls;Lcpu;Lcpu;)V	h	mosaicBuilder
		p	0		exporter
		p	1		category
		p	2		output
		p	3		input
	m	(Lcpu;Lcpu;)Llr;	i	lambda$static$15
		p	0		output
		p	1		input
	m	(Llt;Lcpu;Lcpu;)V	i	stainedGlassFromGlassAndDye
		p	0		exporter
		p	1		output
		p	2		input
	m	(Llt;Lls;Lcpu;Lcpu;)V	i	stonecutterResultFromBase
		p	0		exporter
		p	1		category
		p	2		output
		p	3		input
	m	(Lcpu;Lcpu;)Llr;	j	lambda$static$14
	m	(Llt;Lcpu;Lcpu;)V	j	stainedGlassPaneFromStainedGlass
		p	0		exporter
		p	1		output
		p	2		input
	m	(Lcpu;Lcpu;)Llr;	k	lambda$static$13
		p	0		output
		p	1		input
	m	(Llt;Lcpu;Lcpu;)V	k	stainedGlassPaneFromGlassPaneAndDye
		p	0		exporter
		p	1		output
		p	2		input
	m	(Lcpu;Lcpu;)Llr;	l	lambda$static$12
		p	0		output
		p	1		input
	m	(Llt;Lcpu;Lcpu;)V	l	coloredTerracottaFromTerracottaAndDye
		p	0		exporter
		p	1		output
		p	2		input
	m	(Lcpu;Lcpu;)Llr;	m	lambda$static$11
		p	0		output
		p	1		input
	m	(Llt;Lcpu;Lcpu;)V	m	concretePowder
		p	0		exporter
		p	1		output
		p	2		input
	m	(Lcpu;Lcpu;)Llr;	n	lambda$static$10
	m	(Llt;Lcpu;Lcpu;)V	n	candle
		p	0		exporter
		p	1		output
		p	2		input
	m	(Lcpu;Lcpu;)Llr;	o	lambda$static$9
		p	0		output
		p	1		input
	m	(Llt;Lcpu;Lcpu;)V	o	copySmithingTemplate
		p	0		exporter
		p	1		template
		p	2		resource
	m	(Lcpu;Lcpu;)Llr;	p	lambda$static$8
		p	0		output
		p	1		input
	m	(Llt;Lcpu;Lcpu;)V	p	smeltingResultFromBase
		p	0		exporter
		p	1		output
		p	2		input
	f	Ljk$a;	d	recipePathProvider
	f	Ljk$a;	e	advancementPathProvider
	f	Ljava/util/Map;	f	SHAPE_BUILDERS
c	lu$1	net/minecraft/data/recipes/RecipeProvider$1
	m	()Lae$a;	a	advancement
	m	(Llq;)V	a	accept
		p	1		recipeJsonProvider
	f	Ljava/util/Set;	a	val$allRecipes
	f	Ljava/util/List;	b	val$tasks
	f	Ljg;	c	val$cache
	f	Llu;	d	this$0
c	lv	net/minecraft/data/recipes/ShapedRecipeBuilder
	m	(Lls;Lcpu;I)V	<init>	<init>
		p	1		category
		p	2		output
		p	3		count
	m	()Lcja;	a	getResult
	m	(Laew;)V	a	ensureValid
		p	1		recipeId
	m	(Ljava/lang/Character;Laqh;)Llv;	a	define
		p	1		c
		p	2		tag
	m	(Ljava/lang/Character;Lcmg;)Llv;	a	define
		p	1		c
		p	2		ingredient
	m	(Ljava/lang/Character;Lcpu;)Llv;	a	define
		p	1		c
		p	2		itemProvider
	m	(Ljava/lang/String;)Llr;	a	group
		p	1		group
	m	(Ljava/lang/String;Lam;)Llr;	a	unlockedBy
		p	1		name
		p	2		criterion
	m	(Lls;Lcpu;)Llv;	a	shaped
		p	0		category
		p	1		output
	m	(Lls;Lcpu;I)Llv;	a	shaped
		p	0		category
		p	1		output
		p	2		count
	m	(Llt;Laew;)V	a	save
		p	1		exporter
		p	2		recipeId
	m	(Z)Llv;	a	showNotification
		p	1		showNotification
	m	(Ljava/lang/String;)Llv;	b	pattern
		p	1		patternStr
	m	(Ljava/lang/String;Lam;)Llv;	b	unlockedBy
	m	(Ljava/lang/String;)Llv;	c	group
	f	Lls;	b	category
	f	Lcja;	c	result
	f	I	d	count
	f	Ljava/util/List;	e	rows
	f	Ljava/util/Map;	f	key
	f	Ljava/util/Map;	g	criteria
	f	Ljava/lang/String;	h	group
	f	Z	i	showNotification
c	lv$a	net/minecraft/data/recipes/ShapedRecipeBuilder$Result
	m	(Laew;Lcja;ILjava/lang/String;Lcly;Ljava/util/List;Ljava/util/Map;Laf;Z)V	<init>	<init>
		p	1		id
		p	2		output
		p	3		resultCount
		p	4		group
		p	5		craftingCategory
		p	6		pattern
		p	7		inputs
		p	8		advancement
		p	9		showNotification
	m	(Lcom/google/gson/JsonObject;)V	a	serializeRecipeData
		p	1		json
	m	()Laew;	b	id
	m	()Lcmm;	c	type
	m	()Laf;	d	advancement
	f	Laew;	a	id
	f	Lcja;	b	result
	f	I	c	count
	f	Ljava/lang/String;	d	group
	f	Ljava/util/List;	e	pattern
	f	Ljava/util/Map;	f	key
	f	Laf;	g	advancement
	f	Z	h	showNotification
c	lw	net/minecraft/data/recipes/ShapelessRecipeBuilder
	m	(Lls;Lcpu;I)V	<init>	<init>
		p	1		category
		p	2		output
		p	3		count
	m	()Lcja;	a	getResult
	m	(Laew;)V	a	ensureValid
		p	1		recipeId
	m	(Laqh;)Llw;	a	requires
		p	1		tag
	m	(Lcmg;)Llw;	a	requires
		p	1		ingredient
	m	(Lcmg;I)Llw;	a	requires
		p	1		ingredient
		p	2		size
	m	(Lcpu;I)Llw;	a	requires
		p	1		itemProvider
		p	2		size
	m	(Ljava/lang/String;)Llr;	a	group
		p	1		group
	m	(Ljava/lang/String;Lam;)Llr;	a	unlockedBy
		p	1		name
		p	2		criterion
	m	(Lls;Lcpu;)Llw;	a	shapeless
		p	0		category
		p	1		output
	m	(Lls;Lcpu;I)Llw;	a	shapeless
		p	0		category
		p	1		output
		p	2		count
	m	(Llt;Laew;)V	a	save
		p	1		exporter
		p	2		recipeId
	m	(Lcpu;)Llw;	b	requires
		p	1		itemProvider
	m	(Ljava/lang/String;)Llw;	b	group
	m	(Ljava/lang/String;Lam;)Llw;	b	unlockedBy
	f	Lls;	b	category
	f	Lcja;	c	result
	f	I	d	count
	f	Ljava/util/List;	e	ingredients
	f	Ljava/util/Map;	f	criteria
	f	Ljava/lang/String;	g	group
c	lw$a	net/minecraft/data/recipes/ShapelessRecipeBuilder$Result
	m	(Laew;Lcja;ILjava/lang/String;Lcly;Ljava/util/List;Laf;)V	<init>	<init>
		p	1		recipeId
		p	2		output
		p	3		outputCount
		p	4		group
		p	5		craftingCategory
		p	6		inputs
		p	7		advancementBuilder
	m	(Lcom/google/gson/JsonObject;)V	a	serializeRecipeData
		p	1		json
	m	()Laew;	b	id
	m	()Lcmm;	c	type
	m	()Laf;	d	advancement
	f	Laew;	a	id
	f	Lcja;	b	result
	f	I	c	count
	f	Ljava/lang/String;	d	group
	f	Ljava/util/List;	e	ingredients
	f	Laf;	f	advancement
c	lx	net/minecraft/data/recipes/SimpleCookingRecipeBuilder
	m	(Lls;Lclx;Lcpu;Lcmg;FILcmm;)V	<init>	<init>
		p	1		category
		p	2		cookingCategory
		p	3		output
		p	4		input
		p	5		experience
		p	6		cookingTime
		p	7		serializer
	m	()Lcja;	a	getResult
	m	(Laew;)V	a	ensureValid
		p	1		recipeId
	m	(Lcmg;Lls;Lcpu;FI)Llx;	a	campfireCooking
		p	0		input
		p	1		category
		p	2		output
		p	3		experience
		p	4		cookingTime
	m	(Lcmg;Lls;Lcpu;FILcmm;)Llx;	a	generic
		p	0		input
		p	1		category
		p	2		output
		p	3		experience
		p	4		cookingTime
		p	5		serializer
	m	(Lcmm;Lcpu;)Lclx;	a	determineRecipeCategory
		p	0		serializer
		p	1		output
	m	(Ljava/lang/String;)Llr;	a	group
		p	1		group
	m	(Ljava/lang/String;Lam;)Llr;	a	unlockedBy
		p	1		name
		p	2		criterion
	m	(Llt;Laew;)V	a	save
		p	1		exporter
		p	2		recipeId
	m	(Lcmg;Lls;Lcpu;FI)Llx;	b	blasting
		p	0		input
		p	1		category
		p	2		output
		p	3		experience
		p	4		cookingTime
	m	(Lcpu;)Lclx;	b	determineSmeltingRecipeCategory
		p	0		output
	m	(Ljava/lang/String;)Llx;	b	group
	m	(Ljava/lang/String;Lam;)Llx;	b	unlockedBy
	m	(Lcmg;Lls;Lcpu;FI)Llx;	c	smelting
		p	0		input
		p	1		category
		p	2		output
		p	3		experience
		p	4		cookingTime
	m	(Lcpu;)Lclx;	c	determineBlastingRecipeCategory
		p	0		output
	m	(Lcmg;Lls;Lcpu;FI)Llx;	d	smoking
		p	0		input
		p	1		category
		p	2		output
		p	3		experience
		p	4		cookingTime
	f	Lls;	b	category
	f	Lclx;	c	bookCategory
	f	Lcja;	d	result
	f	Lcmg;	e	ingredient
	f	F	f	experience
	f	I	g	cookingTime
	f	Ljava/util/Map;	h	criteria
	f	Ljava/lang/String;	i	group
	f	Lcmm;	j	serializer
c	lx$a	net/minecraft/data/recipes/SimpleCookingRecipeBuilder$Result
	m	(Laew;Ljava/lang/String;Lclx;Lcmg;Lcja;FILaf;Lcmm;)V	<init>	<init>
		p	1		id
		p	2		group
		p	3		category
		p	4		input
		p	5		result
		p	6		experience
		p	7		cookingTime
		p	8		advancement
		p	9		serializer
	m	(Lcom/google/gson/JsonObject;)V	a	serializeRecipeData
		p	1		json
	m	()Laew;	b	id
	m	()Lcmm;	c	type
	m	()Laf;	d	advancement
	m	()Ljava/lang/String;	e	group
	m	()Lclx;	f	category
	m	()Lcmg;	g	ingredient
	m	()Lcja;	h	result
	m	()F	i	experience
	m	()I	j	cookingTime
	f	Laew;	a	id
	f	Ljava/lang/String;	b	group
	f	Lclx;	c	category
	f	Lcmg;	d	ingredient
	f	Lcja;	e	result
	f	F	f	experience
	f	I	g	cookingTime
	f	Laf;	h	advancement
	f	Lcmm;	i	type
c	ly	net/minecraft/data/recipes/SingleItemRecipeBuilder
	m	(Lls;Lcmm;Lcmg;Lcpu;I)V	<init>	<init>
		p	1		category
		p	2		serializer
		p	3		input
		p	4		output
		p	5		count
	m	()Lcja;	a	getResult
	m	(Laew;)V	a	ensureValid
		p	1		recipeId
	m	(Lcmg;Lls;Lcpu;)Lly;	a	stonecutting
		p	0		input
		p	1		category
		p	2		output
	m	(Lcmg;Lls;Lcpu;I)Lly;	a	stonecutting
		p	0		input
		p	1		category
		p	2		output
		p	3		count
	m	(Ljava/lang/String;)Llr;	a	group
		p	1		group
	m	(Ljava/lang/String;Lam;)Llr;	a	unlockedBy
		p	1		name
		p	2		criterion
	m	(Llt;Laew;)V	a	save
		p	1		exporter
		p	2		recipeId
	m	(Ljava/lang/String;)Lly;	b	group
	m	(Ljava/lang/String;Lam;)Lly;	b	unlockedBy
	f	Lls;	b	category
	f	Lcja;	c	result
	f	Lcmg;	d	ingredient
	f	I	e	count
	f	Ljava/util/Map;	f	criteria
	f	Ljava/lang/String;	g	group
	f	Lcmm;	h	type
c	ly$a	net/minecraft/data/recipes/SingleItemRecipeBuilder$Result
	m	(Laew;Lcmm;Ljava/lang/String;Lcmg;Lcja;ILaf;)V	<init>	<init>
		p	1		id
		p	2		serializer
		p	3		group
		p	4		input
		p	5		output
		p	6		outputCount
		p	7		advancement
	m	(Lcom/google/gson/JsonObject;)V	a	serializeRecipeData
		p	1		json
	m	()Laew;	b	id
	m	()Lcmm;	c	type
	m	()Laf;	d	advancement
	m	()Ljava/lang/String;	e	group
	m	()Lcmg;	f	ingredient
	m	()Lcja;	g	result
	m	()I	h	count
	f	Laew;	a	id
	f	Lcmm;	b	type
	f	Ljava/lang/String;	c	group
	f	Lcmg;	d	ingredient
	f	Lcja;	e	result
	f	I	f	count
	f	Laf;	g	advancement
c	lz	net/minecraft/data/recipes/SmithingTransformRecipeBuilder
	m	(Lcmm;Lcmg;Lcmg;Lcmg;Lls;Lcja;)V	<init>	<init>
		p	1		serializer
		p	2		template
		p	3		base
		p	4		addition
		p	5		category
		p	6		result
	m	(Laew;)V	a	ensureValid
		p	1		recipeId
	m	(Lcmg;Lcmg;Lcmg;Lls;Lcja;)Llz;	a	smithing
		p	0		template
		p	1		base
		p	2		addition
		p	3		category
		p	4		result
	m	(Ljava/lang/String;Lam;)Llz;	a	unlocks
		p	1		name
		p	2		criterion
	m	(Llt;Laew;)V	a	save
		p	1		exporter
		p	2		recipeId
	m	(Llt;Ljava/lang/String;)V	a	save
		p	1		exporter
		p	2		recipeId
	f	Lcmg;	a	template
	f	Lcmg;	b	base
	f	Lcmg;	c	addition
	f	Lls;	d	category
	f	Lcja;	e	result
	f	Ljava/util/Map;	f	criteria
	f	Lcmm;	g	type
c	lz$a	net/minecraft/data/recipes/SmithingTransformRecipeBuilder$Result
	m	(Laew;Lcmm;Lcmg;Lcmg;Lcmg;Lcja;Laf;)V	<init>	<init>
		p	1		id
		p	2		type
		p	3		template
		p	4		base
		p	5		addition
		p	6		result
		p	7		advancement
	m	(Lcom/google/gson/JsonObject;)V	a	serializeRecipeData
		p	1		json
	m	()Laew;	b	id
	m	()Lcmm;	c	type
	m	()Laf;	d	advancement
	m	()Lcmg;	e	template
	m	()Lcmg;	f	base
	m	()Lcmg;	g	addition
	m	()Lcja;	h	result
	f	Laew;	a	id
	f	Lcmm;	b	type
	f	Lcmg;	c	template
	f	Lcmg;	d	base
	f	Lcmg;	e	addition
	f	Lcja;	f	result
	f	Laf;	g	advancement
c	ma	net/minecraft/data/recipes/SmithingTrimRecipeBuilder
	m	(Lcmm;Lls;Lcmg;Lcmg;Lcmg;)V	<init>	<init>
		p	1		serializer
		p	2		category
		p	3		template
		p	4		base
		p	5		addition
	m	(Laew;)V	a	ensureValid
		p	1		recipeId
	m	(Lcmg;Lcmg;Lcmg;Lls;)Lma;	a	smithingTrim
		p	0		template
		p	1		base
		p	2		addition
		p	3		category
	m	(Ljava/lang/String;Lam;)Lma;	a	unlocks
		p	1		name
		p	2		criterion
	m	(Llt;Laew;)V	a	save
		p	1		exporter
		p	2		recipeId
	f	Lls;	a	category
	f	Lcmg;	b	template
	f	Lcmg;	c	base
	f	Lcmg;	d	addition
	f	Ljava/util/Map;	e	criteria
	f	Lcmm;	f	type
c	ma$a	net/minecraft/data/recipes/SmithingTrimRecipeBuilder$Result
	m	(Lcom/google/gson/JsonObject;)V	a	serializeRecipeData
		p	1		json
	m	()Laew;	b	id
	m	()Lcmm;	c	type
	m	()Laf;	d	advancement
	m	()Lcmg;	e	template
	m	()Lcmg;	f	base
	m	()Lcmg;	g	addition
	f	Laew;	a	id
	f	Lcmm;	b	type
	f	Lcmg;	c	template
	f	Lcmg;	d	base
	f	Lcmg;	e	addition
	f	Laf;	f	advancement
c	mb	net/minecraft/data/recipes/SpecialRecipeBuilder
	m	(Lcmm;)V	<init>	<init>
		p	1		serializer
	m	(Lcmm;)Lmb;	a	special
		p	0		serializer
	m	(Llt;Laew;)V	a	save
		p	1		exporter
		p	2		id
	m	(Llt;Ljava/lang/String;)V	a	save
		p	1		exporter
		p	2		id
	f	Lcmm;	a	serializer
c	mb$1	net/minecraft/data/recipes/SpecialRecipeBuilder$1
	m	(Lmb;Lcly;Laew;)V	<init>	<init>
		p	2		craftingCategory
	m	()Laew;	b	id
	m	()Lcmm;	c	type
	m	()Laf;	d	advancement
	f	Laew;	a	val$id
	f	Lmb;	b	this$0
c	mc	net/minecraft/data/recipes/package-info
c	md	net/minecraft/data/recipes/packs/BundleRecipeProvider
	m	(Ljk;)V	<init>	<init>
		p	1		output
	m	(Llt;)V	a	buildRecipes
		p	1		exporter
c	me	net/minecraft/data/recipes/packs/VanillaRecipeProvider
	m	(Ljk;)V	<init>	<init>
		p	1		output
	m	(Lcja;)Laew;	a	lambda$smithingTrims$1
	m	(Ljg;)Ljava/util/concurrent/CompletableFuture;	a	run
		p	1		writer
	m	(Llt;)V	a	buildRecipes
		p	1		exporter
	m	()Ljava/util/Map;	b	smithingTrims
	m	(Llt;Lcja;Laew;)V	b	lambda$buildRecipes$0
		p	1		template
		p	2		recipeId
	f	Lcom/google/common/collect/ImmutableList;	d	COAL_SMELTABLES
	f	Lcom/google/common/collect/ImmutableList;	e	IRON_SMELTABLES
	f	Lcom/google/common/collect/ImmutableList;	f	COPPER_SMELTABLES
	f	Lcom/google/common/collect/ImmutableList;	g	GOLD_SMELTABLES
	f	Lcom/google/common/collect/ImmutableList;	h	DIAMOND_SMELTABLES
	f	Lcom/google/common/collect/ImmutableList;	i	LAPIS_SMELTABLES
	f	Lcom/google/common/collect/ImmutableList;	j	REDSTONE_SMELTABLES
	f	Lcom/google/common/collect/ImmutableList;	k	EMERALD_SMELTABLES
c	mf	net/minecraft/data/recipes/packs/package-info
c	mg	net/minecraft/data/registries/RegistriesDatapackGenerator
	m	(Ljk;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
		p	1		output
		p	2		registryLookupFuture
	m	()Ljava/lang/String;	a	getName
	m	(I)[Ljava/util/concurrent/CompletableFuture;	a	lambda$dumpRegistryCap$4
	m	(Laev;Ljg;Lcom/mojang/serialization/DynamicOps;Laer$b;Lhg$c;)Ljava/util/concurrent/CompletableFuture;	a	lambda$dumpRegistryCap$5
		p	5		wrapper
	m	(Ljava/nio/file/Path;Ljava/lang/String;)V	a	lambda$dumpValue$6
		p	1		error
	m	(Ljava/nio/file/Path;Ljg;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/Encoder;Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture;	a	dumpValue
		p	0		path
		p	1		cache
		p	2		json
		p	3		encoder
		p	4		value
	m	(Ljg;)Ljava/util/concurrent/CompletableFuture;	a	run
		p	1		writer
	m	(Ljg;Lhg$b;)Ljava/util/concurrent/CompletionStage;	a	lambda$run$2
		p	2		lookup
	m	(Ljg;Lhg$b;Lcom/mojang/serialization/DynamicOps;Laer$b;)Ljava/util/Optional;	a	dumpRegistryCap
		p	1		writer
		p	2		lookup
		p	3		ops
		p	4		registry
	m	(Ljk$a;Ljg;Lcom/mojang/serialization/DynamicOps;Laer$b;Lhe$c;)Ljava/util/concurrent/CompletableFuture;	a	lambda$dumpRegistryCap$3
		p	4		entry
	m	(I)[Ljava/util/concurrent/CompletableFuture;	b	lambda$run$1
	m	(Ljg;Lhg$b;Lcom/mojang/serialization/DynamicOps;Laer$b;)Ljava/util/stream/Stream;	b	lambda$run$0
		p	4		entry
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	Ljk;	e	output
	f	Ljava/util/concurrent/CompletableFuture;	f	registries
c	mh	net/minecraft/data/registries/VanillaRegistries
	m	()Lhg$b;	a	createLookup
	m	(Ldum;)Z	a	validatePlacedFeature
		p	0		placedFeature
	m	(Lhe$c;Ldum;)V	a	lambda$validateThatAllBiomeFeaturesHaveBiomeFilter$1
		p	1		value
	m	(Lhf;Laew;Laev;)V	a	lambda$validateThatAllBiomeFeaturesHaveBiomeFilter$0
		p	2		key
	m	(Lhf;Laew;Lhe$c;Lhe;)V	a	lambda$validateThatAllBiomeFeaturesHaveBiomeFilter$2
		p	3		placedFeature
	m	(Lhf;Lhe$c;)V	a	lambda$validateThatAllBiomeFeaturesHaveBiomeFilter$3
		p	1		biome
	m	(Lhf;Lhg;)V	a	validateThatAllBiomeFeaturesHaveBiomeFilter
		p	0		placedFeatureLookup
		p	1		biomeLookup
	m	(Lhg$b;)V	a	validateThatAllBiomeFeaturesHaveBiomeFilter
		p	0		wrapperLookup
	f	Lht;	a	BUILDER
c	mi	net/minecraft/data/registries/package-info
c	mj	net/minecraft/data/structures/NbtToSnbt
	m	(Ljk;Ljava/util/Collection;)V	<init>	<init>
		p	1		output
		p	2		paths
	m	()Ljava/lang/String;	a	getName
	m	(I)[Ljava/util/concurrent/CompletableFuture;	a	lambda$run$6
	m	(Ljava/nio/file/Path;)Z	a	lambda$run$0
		p	0		path
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/lang/String;	a	getName
		p	0		inputPath
		p	1		filePath
	m	(Ljava/nio/file/Path;Ljg;Ljava/nio/file/Path;)Ljava/util/concurrent/CompletableFuture;	a	lambda$run$4
	m	(Ljava/util/concurrent/CompletableFuture;)Ljava/util/concurrent/CompletionStage;	a	lambda$run$5
		p	0		future
	m	(Ljg;)Ljava/util/concurrent/CompletableFuture;	a	run
		p	1		writer
	m	(Ljg;Ljava/nio/file/Path;Ljava/lang/String;)V	a	writeSnbt
		p	0		writer
		p	1		path
		p	2		content
	m	(Ljg;Ljava/nio/file/Path;Ljava/lang/String;Ljava/nio/file/Path;)Ljava/nio/file/Path;	a	convertStructure
		p	0		writer
		p	1		inputPath
		p	2		filename
		p	3		outputPath
	m	(Ljg;Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/util/concurrent/CompletableFuture;	a	lambda$run$2
		p	3		path
	m	(I)[Ljava/util/concurrent/CompletableFuture;	b	lambda$run$3
	m	(Ljg;Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/nio/file/Path;)V	b	lambda$run$1
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	Ljava/lang/Iterable;	e	inputFolders
	f	Ljk;	f	output
c	mk	net/minecraft/data/structures/SnbtDatafixer
	m	(Ljava/lang/String;)V	a	updateInDirectory
		p	0		directory
	m	(Ljava/nio/file/Path;)V	a	lambda$updateInDirectory$1
		p	0		path
	m	([Ljava/lang/String;)V	a	main
		p	0		args
	m	(Ljava/nio/file/Path;)Z	b	lambda$updateInDirectory$0
		p	0		path
c	ml	net/minecraft/data/structures/SnbtToNbt
	m	(Ljk;Ljava/lang/Iterable;)V	<init>	<init>
		p	1		output
		p	2		paths
	m	()Ljava/lang/String;	a	getName
	m	(I)[Ljava/util/concurrent/CompletableFuture;	a	lambda$run$3
	m	(Ljava/lang/String;Lqw;)Lqw;	a	applyFilters
		p	1		key
		p	2		compound
	m	(Ljava/nio/file/Path;)Z	a	lambda$run$0
		p	0		path
	m	(Ljava/nio/file/Path;Ljava/lang/String;)Lml$c;	a	readStructure
		p	1		path
		p	2		name
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/lang/String;	a	getName
		p	1		root
		p	2		file
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;Ljg;Ljava/nio/file/Path;)V	a	lambda$run$1
	m	(Ljava/nio/file/Path;Ljg;Ljava/nio/file/Path;)Ljava/util/concurrent/CompletableFuture;	a	lambda$run$4
	m	(Ljava/nio/file/Path;Ljg;Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/util/concurrent/CompletableFuture;	a	lambda$run$2
		p	4		path
	m	(Ljava/util/concurrent/CompletableFuture;)Ljava/util/concurrent/CompletionStage;	a	lambda$run$5
		p	0		future
	m	(Ljg;)Ljava/util/concurrent/CompletableFuture;	a	run
		p	1		writer
	m	(Ljg;Lml$c;Ljava/nio/file/Path;)V	a	storeStructureIfChanged
		p	1		cache
		p	2		data
		p	3		root
	m	(Lml$a;)Lml;	a	addFilter
		p	1		tweaker
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	Ljk;	e	output
	f	Ljava/lang/Iterable;	f	inputFolders
	f	Ljava/util/List;	g	filters
c	ml$a	net/minecraft/data/structures/SnbtToNbt$Filter
	m	(Ljava/lang/String;Lqw;)Lqw;	apply	apply
		p	1		name
		p	2		nbt
c	ml$b	net/minecraft/data/structures/SnbtToNbt$StructureConversionException
	m	(Ljava/nio/file/Path;Ljava/lang/Throwable;)V	<init>	<init>
		p	1		path
		p	2		cause
c	ml$c	net/minecraft/data/structures/SnbtToNbt$TaskResult
	m	(Ljava/lang/String;[BLcom/google/common/hash/HashCode;)V	<init>	<init>
		p	1		name
		p	2		bytes
	m	()Ljava/lang/String;	a	name
	m	()[B	b	payload
	m	()Lcom/google/common/hash/HashCode;	c	hash
	f	Ljava/lang/String;	a	name
	f	[B	b	payload
	f	Lcom/google/common/hash/HashCode;	c	hash
c	mm	net/minecraft/data/structures/StructureUpdater
	m	(Ljava/lang/String;Lqw;)Lqw;	a	update
		p	0		name
		p	1		nbt
	m	(Ljava/lang/String;Lqw;)Lqw;	apply	apply
		p	1		name
		p	2		nbt
	f	Lorg/slf4j/Logger;	a	LOGGER
c	mn	net/minecraft/data/structures/package-info
c	mo	net/minecraft/data/tags/BannerPatternTagsProvider
	m	(Ljk;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
		p	1		dataGenerator
		p	2		registryLookupFuture
	m	(Lhg$b;)V	a	addTags
		p	1		lookup
c	mp	net/minecraft/data/tags/BiomeTagsProvider
	m	(Ljk;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
		p	1		output
		p	2		registryLookupFuture
	m	(Lhg$b;)V	a	addTags
		p	1		lookup
c	mq	net/minecraft/data/tags/CatVariantTagsProvider
	m	(Ljk;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
		p	1		output
		p	2		registryLookupFuture
	m	(Lhg$b;)V	a	addTags
		p	1		lookup
c	mr	net/minecraft/data/tags/DamageTypeTagsProvider
	m	(Ljk;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
		p	1		output
		p	2		maxChainedNeighborUpdates
	m	(Lhg$b;)V	a	addTags
		p	1		lookup
c	ms	net/minecraft/data/tags/EntityTypeTagsProvider
	m	(Ljk;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
		p	1		output
		p	2		registryLookupFuture
	m	(Lbiu;)Laev;	a	lambda$new$0
		p	0		entityType
	m	(Lhg$b;)V	a	addTags
		p	1		lookup
c	mt	net/minecraft/data/tags/FlatLevelGeneratorPresetTagsProvider
	m	(Ljk;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
		p	1		output
		p	2		registryLookupFuture
	m	(Lhg$b;)V	a	addTags
		p	1		lookup
c	mu	net/minecraft/data/tags/FluidTagsProvider
	m	(Ljk;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
		p	1		output
		p	2		registryLookupFuture
	m	(Leal;)Laev;	a	lambda$new$0
		p	0		fluid
	m	(Lhg$b;)V	a	addTags
		p	1		lookup
c	mv	net/minecraft/data/tags/GameEventTagsProvider
	m	(Ljk;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
		p	1		output
		p	2		registryLookupFuture
	m	(Ldjt;)Laev;	a	lambda$new$0
		p	0		gameEvent
	m	(Lhg$b;)V	a	addTags
		p	1		lookup
	f	[Ldjt;	d	VIBRATIONS_EXCEPT_FLAP
c	mw	net/minecraft/data/tags/InstrumentTagsProvider
	m	(Ljk;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
		p	1		output
		p	2		registryLookupFuture
	m	(Lhg$b;)V	a	addTags
		p	1		lookup
c	mx	net/minecraft/data/tags/IntrinsicHolderTagsProvider
	m	(Ljk;Laev;Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;Ljava/util/function/Function;)V	<init>	<init>
		p	1		output
		p	2		registryRef
		p	3		registryLookupFuture
		p	4		parentTagLookupFuture
		p	5		valueToKey
	m	(Ljk;Laev;Ljava/util/concurrent/CompletableFuture;Ljava/util/function/Function;)V	<init>	<init>
		p	1		output
		p	2		registryRef
		p	3		registryLookupFuture
		p	4		valueToKey
	m	(Laqh;)Lmx$a;	a	tag
	m	(Laqh;)Lnc$b;	b	tag
		p	1		tag
	f	Ljava/util/function/Function;	d	keyExtractor
c	mx$a	net/minecraft/data/tags/IntrinsicHolderTagsProvider$IntrinsicTagAppender
	m	(Laqe;Ljava/util/function/Function;)V	<init>	<init>
		p	1		builder
		p	2		valueToKey
	m	(Laqh;)Lmx$a;	a	addTag
	m	(Ljava/lang/Object;)Lmx$a;	a	add
		p	1		value
	m	([Ljava/lang/Object;)Lmx$a;	a	add
		p	1		values
	m	(Laqh;)Lnc$b;	b	addTag
		p	1		identifiedTag
	f	Ljava/util/function/Function;	a	keyExtractor
c	my	net/minecraft/data/tags/ItemTagsProvider
	m	(Ljk;Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
		p	1		output
		p	2		registryLookupFuture
		p	3		blockTagLookupFuture
	m	(Ljk;Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
		p	1		output
		p	2		registryLookupFuture
		p	3		parentTagLookupFuture
		p	4		blockTagLookupFuture
	m	(Laqh;Laqh;)V	a	copy
		p	1		blockTag
		p	2		itemTag
	m	(Lcja;)Laev;	a	lambda$new$1
		p	0		item
	m	(Lhg$b;Lnc$c;)Lhg$b;	a	lambda$createContentsProvider$4
		p	1		lookup
		p	2		blockTags
	m	(Lnc$c;Laqh;Laqh;)V	a	lambda$createContentsProvider$3
		p	2		blockTag
		p	3		itemTag
	m	()Ljava/util/concurrent/CompletableFuture;	b	createContentsProvider
	m	(Lcja;)Laev;	b	lambda$new$0
		p	0		item
	m	(Laqh;)Ljava/lang/IllegalStateException;	d	lambda$createContentsProvider$2
	f	Ljava/util/concurrent/CompletableFuture;	d	blockTags
	f	Ljava/util/Map;	g	tagsToCopy
c	mz	net/minecraft/data/tags/PaintingVariantTagsProvider
	m	(Ljk;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
		p	1		output
		p	2		registryLookupFuture
	m	(Lhg$b;)V	a	addTags
		p	1		lookup
c	na	net/minecraft/data/tags/PoiTypeTagsProvider
	m	(Ljk;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
		p	1		output
		p	2		registryLookupFuture
	m	(Lhg$b;)V	a	addTags
		p	1		lookup
c	nb	net/minecraft/data/tags/StructureTagsProvider
	m	(Ljk;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
		p	1		output
		p	2		registryLookupFuture
	m	(Lhg$b;)V	a	addTags
		p	1		lookup
c	nc	net/minecraft/data/tags/TagsProvider
	m	(Ljk;Laev;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
		p	1		output
		p	2		registryRef
		p	3		registryLookupFuture
	m	(Ljk;Laev;Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
		p	1		output
		p	2		registryRef
		p	3		registryLookupFuture
		p	4		parentTagLookupFuture
	m	()Ljava/lang/String;	a	getName
	m	(I)[Ljava/util/concurrent/CompletableFuture;	a	lambda$run$6
	m	(Laew;)Laqe;	a	lambda$getOrCreateRawBuilder$8
		p	0		id
	m	(Laqh;)Ljava/util/Optional;	a	lambda$contentsGetter$9
		p	1		tag
	m	(Lhg$b;)V	a	addTags
		p	1		lookup
	m	(Lhg$b;Lnc$c;)Lnc$a;	a	lambda$run$1
		p	0		lookup
		p	1		parent
	m	(Lhg$c;Laew;)Z	a	lambda$run$2
		p	2		id
	m	(Ljava/lang/Void;)Lnc$c;	a	lambda$contentsGetter$10
		p	1		void_
	m	(Ljava/util/function/Predicate;Ljava/util/function/Predicate;Laqf;)Z	a	lambda$run$4
		p	2		tagEntry
	m	(Ljava/util/function/Predicate;Ljava/util/function/Predicate;Ljg;Ljava/util/Map$Entry;)Ljava/util/concurrent/CompletableFuture;	a	lambda$run$5
		p	4		entry
	m	(Ljg;)Ljava/util/concurrent/CompletableFuture;	a	run
		p	1		writer
	m	(Ljg;Lnc$a;)Ljava/util/concurrent/CompletionStage;	a	lambda$run$7
		p	2		info
	m	(Lnc$a;Laew;)Z	a	lambda$run$3
		p	2		id
	m	()Ljava/util/concurrent/CompletableFuture;	b	createContentsProvider
	m	(Laqh;)Lnc$b;	b	tag
		p	1		tag
	m	(Lhg$b;)Lhg$b;	b	lambda$createContentsProvider$11
		p	1		lookup
	m	()Ljava/util/concurrent/CompletableFuture;	c	contentsGetter
	m	(Laqh;)Laqe;	c	getOrCreateRawBuilder
		p	1		tag
	m	(Lhg$b;)Lhg$b;	c	lambda$run$0
		p	1		registryLookupFuture
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	Ljk$a;	e	pathProvider
	f	Laev;	f	registryKey
	f	Ljava/util/concurrent/CompletableFuture;	g	lookupProvider
	f	Ljava/util/concurrent/CompletableFuture;	h	contentsDone
	f	Ljava/util/concurrent/CompletableFuture;	i	parentProvider
	f	Ljava/util/Map;	j	builders
c	nc$a	net/minecraft/data/tags/TagsProvider$1CombinedData
	m	()Lhg$b;	a	contents
	m	()Lnc$c;	b	parent
	f	Lhg$b;	a	contents
	f	Lnc$c;	b	parent
c	nc$b	net/minecraft/data/tags/TagsProvider$TagAppender
	m	(Laqe;)V	<init>	<init>
		p	1		builder
	m	(Laev;)Lnc$b;	a	add
		p	1		key
	m	(Laew;)Lnc$b;	a	addOptional
		p	1		id
	m	([Laev;)Lnc$b;	a	add
		p	1		keys
	m	(Laew;)Lnc$b;	b	addOptionalTag
		p	1		id
	m	(Laqh;)Lnc$b;	b	addTag
		p	1		identifiedTag
	f	Laqe;	a	builder
c	nc$c	net/minecraft/data/tags/TagsProvider$TagLookup
	m	(Laqh;)Ljava/util/Optional;	a	lambda$empty$0
		p	0		tag
	m	(Laqh;)Z	contains	contains
		p	1		tag
c	nd	net/minecraft/data/tags/TradeRebalanceStructureTagsProvider
	m	(Ljk;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
		p	1		output
		p	2		registryLookupFuture
	m	(Lhg$b;)V	a	addTags
		p	1		lookup
c	ne	net/minecraft/data/tags/VanillaBlockTagsProvider
	m	(Ljk;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
		p	1		output
		p	2		registryLookupFuture
	m	(Lcsv;)Z	a	lambda$addTags$1
		p	0		block
	m	(Lhg$b;)V	a	addTags
		p	1		lookup
	m	(Lcsv;)Laev;	b	lambda$new$0
		p	0		block
c	nf	net/minecraft/data/tags/VanillaItemTagsProvider
	m	(Ljk;Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
		p	1		output
		p	2		registryLookupFuture
		p	3		blockTagLookupFuture
	m	(Lhg$b;)V	a	addTags
		p	1		lookup
c	ng	net/minecraft/data/tags/WorldPresetTagsProvider
	m	(Ljk;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
		p	1		output
		p	2		registryLookupFuture
	m	(Lhg$b;)V	a	addTags
		p	1		lookup
c	nh	net/minecraft/data/tags/package-info
c	ni	net/minecraft/data/worldgen/AncientCityStructurePieces
	m	(Lnr;)V	a	bootstrap
		p	0		poolRegisterable
	f	Laev;	a	START
c	nj	net/minecraft/data/worldgen/AncientCityStructurePools
	m	(Lnr;)V	a	bootstrap
		p	0		poolRegisterable
c	nk	net/minecraft/data/worldgen/BastionBridgePools
	m	(Lnr;)V	a	bootstrap
		p	0		poolRegisterable
c	nl	net/minecraft/data/worldgen/BastionHoglinStablePools
	m	(Lnr;)V	a	bootstrap
		p	0		poolRegisterable
c	nm	net/minecraft/data/worldgen/BastionHousingUnitsPools
	m	(Lnr;)V	a	bootstrap
		p	0		poolRegisterable
c	nn	net/minecraft/data/worldgen/BastionPieces
	m	(Lnr;)V	a	bootstrap
		p	0		poolRegisterable
	f	Laev;	a	START
c	no	net/minecraft/data/worldgen/BastionSharedPools
	m	(Lnr;)V	a	bootstrap
		p	0		poolRegisterable
c	np	net/minecraft/data/worldgen/BastionTreasureRoomPools
	m	(Lnr;)V	a	bootstrap
		p	0		poolRegisterable
c	nq	net/minecraft/data/worldgen/BiomeDefaultFeatures
	m	(Lcqu$a;)V	A	addLushCavesVegetationFeatures
		p	0		builder
	m	(Lcqu$a;)V	B	addLushCavesSpecialOres
		p	0		builder
	m	(Lcqu$a;)V	C	addMountainTrees
		p	0		builder
	m	(Lcqu$a;)V	D	addMountainForestTrees
		p	0		builder
	m	(Lcqu$a;)V	E	addJungleTrees
		p	0		builder
	m	(Lcqu$a;)V	F	addSparseJungleTrees
		p	0		builder
	m	(Lcqu$a;)V	G	addBadlandsTrees
		p	0		builder
	m	(Lcqu$a;)V	H	addSnowyTrees
		p	0		builder
	m	(Lcqu$a;)V	I	addJungleGrass
		p	0		builder
	m	(Lcqu$a;)V	J	addSavannaGrass
		p	0		builder
	m	(Lcqu$a;)V	K	addShatteredSavannaGrass
		p	0		builder
	m	(Lcqu$a;)V	L	addSavannaExtraGrass
		p	0		builder
	m	(Lcqu$a;)V	M	addBadlandGrass
		p	0		builder
	m	(Lcqu$a;)V	N	addForestFlowers
		p	0		builder
	m	(Lcqu$a;)V	O	addForestGrass
		p	0		builder
	m	(Lcqu$a;)V	P	addSwampVegetation
		p	0		builder
	m	(Lcqu$a;)V	Q	addMangroveSwampVegetation
		p	0		builder
	m	(Lcqu$a;)V	R	addMushroomFieldVegetation
		p	0		builder
	m	(Lcqu$a;)V	S	addPlainVegetation
		p	0		builder
	m	(Lcqu$a;)V	T	addDesertVegetation
		p	0		builder
	m	(Lcqu$a;)V	U	addGiantTaigaVegetation
		p	0		builder
	m	(Lcqu$a;)V	V	addDefaultFlowers
		p	0		builder
	m	(Lcqu$a;)V	W	addCherryGroveVegetation
		p	0		builder
	m	(Lcqu$a;)V	X	addMeadowVegetation
		p	0		builder
	m	(Lcqu$a;)V	Y	addWarmFlowers
		p	0		builder
	m	(Lcqu$a;)V	Z	addDefaultGrass
		p	0		builder
	m	(Lcqu$a;)V	a	addDefaultCarversAndLakes
		p	0		builder
	m	(Lcqu$a;Z)V	a	addDefaultOres
		p	0		builder
		p	1		largeCopperOreBlob
	m	(Lcrf$a;)V	a	farmAnimals
		p	0		builder
	m	(Lcrf$a;II)V	a	warmOceanSpawns
		p	0		builder
		p	1		squidWeight
		p	2		squidMinGroupSize
	m	(Lcrf$a;III)V	a	oceanSpawns
		p	0		builder
		p	1		squidWeight
		p	2		squidMaxGroupSize
		p	3		codWeight
	m	(Lcrf$a;IIIZ)V	a	monsters
		p	0		builder
		p	1		zombieWeight
		p	2		zombieVillagerWeight
		p	3		skeletonWeight
		p	4		drowned
	m	(Lcqu$a;)V	aa	addTaigaGrass
		p	0		builder
	m	(Lcqu$a;)V	ab	addPlainGrass
		p	0		builder
	m	(Lcqu$a;)V	ac	addDefaultMushrooms
		p	0		builder
	m	(Lcqu$a;)V	ad	addDefaultExtraVegetation
		p	0		builder
	m	(Lcqu$a;)V	ae	addBadlandExtraVegetation
		p	0		builder
	m	(Lcqu$a;)V	af	addJungleMelons
		p	0		builder
	m	(Lcqu$a;)V	ag	addSparseJungleMelons
		p	0		builder
	m	(Lcqu$a;)V	ah	addJungleVines
		p	0		builder
	m	(Lcqu$a;)V	ai	addDesertExtraVegetation
		p	0		builder
	m	(Lcqu$a;)V	aj	addSwampExtraVegetation
		p	0		builder
	m	(Lcqu$a;)V	ak	addDesertExtraDecoration
		p	0		builder
	m	(Lcqu$a;)V	al	addFossilDecoration
		p	0		builder
	m	(Lcqu$a;)V	am	addColdOceanExtraVegetation
		p	0		builder
	m	(Lcqu$a;)V	an	addDefaultSeagrass
		p	0		builder
	m	(Lcqu$a;)V	ao	addLukeWarmKelp
		p	0		builder
	m	(Lcqu$a;)V	ap	addDefaultSprings
		p	0		builder
	m	(Lcqu$a;)V	aq	addFrozenSprings
		p	0		builder
	m	(Lcqu$a;)V	ar	addIcebergs
		p	0		builder
	m	(Lcqu$a;)V	as	addBlueIce
		p	0		builder
	m	(Lcqu$a;)V	at	addSurfaceFreezing
		p	0		builder
	m	(Lcqu$a;)V	au	addNetherDefaultOres
		p	0		builder
	m	(Lcqu$a;)V	av	addAncientDebris
		p	0		builder
	m	(Lcqu$a;)V	aw	addDefaultCrystalFormations
		p	0		builder
	m	(Lcqu$a;)V	b	addDefaultMonsterRoom
		p	0		builder
	m	(Lcrf$a;)V	b	caveSpawns
		p	0		builder
	m	(Lcqu$a;)V	c	addDefaultUndergroundVariety
		p	0		builder
	m	(Lcrf$a;)V	c	commonSpawns
		p	0		builder
	m	(Lcqu$a;)V	d	addDripstone
		p	0		builder
	m	(Lcrf$a;)V	d	plainsSpawns
		p	0		builder
	m	(Lcqu$a;)V	e	addSculk
		p	0		builder
	m	(Lcrf$a;)V	e	snowySpawns
		p	0		builder
	m	(Lcqu$a;)V	f	addDefaultOres
		p	0		builder
	m	(Lcrf$a;)V	f	desertSpawns
		p	0		builder
	m	(Lcqu$a;)V	g	addExtraGold
		p	0		builder
	m	(Lcrf$a;)V	g	dripstoneCavesSpawns
		p	0		builder
	m	(Lcqu$a;)V	h	addExtraEmeralds
		p	0		builder
	m	(Lcrf$a;)V	h	mooshroomSpawns
		p	0		builder
	m	(Lcqu$a;)V	i	addInfestedStone
		p	0		builder
	m	(Lcrf$a;)V	i	baseJungleSpawns
		p	0		builder
	m	(Lcqu$a;)V	j	addDefaultSoftDisks
		p	0		builder
	m	(Lcrf$a;)V	j	endSpawns
		p	0		builder
	m	(Lcqu$a;)V	k	addSwampClayDisk
		p	0		builder
	m	(Lcqu$a;)V	l	addMangroveSwampDisks
		p	0		builder
	m	(Lcqu$a;)V	m	addMossyStoneBlock
		p	0		builder
	m	(Lcqu$a;)V	n	addFerns
		p	0		builder
	m	(Lcqu$a;)V	o	addRareBerryBushes
		p	0		builder
	m	(Lcqu$a;)V	p	addCommonBerryBushes
		p	0		builder
	m	(Lcqu$a;)V	q	addLightBambooVegetation
		p	0		builder
	m	(Lcqu$a;)V	r	addBambooVegetation
		p	0		builder
	m	(Lcqu$a;)V	s	addTaigaTrees
		p	0		builder
	m	(Lcqu$a;)V	t	addGroveTrees
		p	0		builder
	m	(Lcqu$a;)V	u	addWaterTrees
		p	0		builder
	m	(Lcqu$a;)V	v	addBirchTrees
		p	0		builder
	m	(Lcqu$a;)V	w	addOtherBirchTrees
		p	0		builder
	m	(Lcqu$a;)V	x	addTallBirchTrees
		p	0		builder
	m	(Lcqu$a;)V	y	addSavannaTrees
		p	0		builder
	m	(Lcqu$a;)V	z	addShatteredSavannaTrees
		p	0		builder
c	nr	net/minecraft/data/worldgen/BootstapContext
	m	(Laev;)Lhf;	a	lookup
		p	1		registryRef
	m	(Laev;Ljava/lang/Object;)Lhe$c;	a	register
		p	1		key
		p	2		value
	m	(Laev;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Lhe$c;	a	register
		p	1		key
		p	2		value
		p	3		lifecycle
c	ns	net/minecraft/data/worldgen/Carvers
	m	(Ljava/lang/String;)Laev;	a	createKey
		p	0		id
	m	(Lnr;)V	a	bootstrap
		p	0		carverRegisterable
	f	Laev;	a	CAVE
	f	Laev;	b	CAVE_EXTRA_UNDERGROUND
	f	Laev;	c	CANYON
	f	Laev;	d	NETHER_CAVE
c	nt	net/minecraft/data/worldgen/DesertVillagePools
	m	(Lnr;)V	a	bootstrap
		p	0		poolRegisterable
	f	Laev;	a	START
	f	Laev;	b	TERMINATORS_KEY
	f	Laev;	c	ZOMBIE_TERMINATORS_KEY
c	nu	net/minecraft/data/worldgen/DimensionTypes
	m	(Lnr;)V	a	bootstrap
		p	0		dimensionTypeRegisterable
c	nv	net/minecraft/data/worldgen/NoiseData
	m	(Lnr;)V	a	bootstrap
		p	0		noiseParametersRegisterable
	m	(Lnr;ILaev;Laev;Laev;Laev;)V	a	registerBiomeNoises
		p	0		noiseParametersRegisterable
		p	1		octaveOffset
		p	2		temperatureKey
		p	3		vegetationKey
		p	4		continentalnessKey
		p	5		erosionKey
	m	(Lnr;Laev;ID[D)V	a	register
		p	0		noiseParametersRegisterable
		p	1		key
		p	2		firstOctave
		p	3		firstAmplitude
		p	5		amplitudes
	f	Ldzp$a;	a	DEFAULT_SHIFT
c	nw	net/minecraft/data/worldgen/PillagerOutpostPools
	m	(Lnr;)V	a	bootstrap
		p	0		poolRegisterable
	f	Laev;	a	START
c	nx	net/minecraft/data/worldgen/PlainVillagePools
	m	(Lnr;)V	a	bootstrap
		p	0		poolRegisterable
	f	Laev;	a	START
	f	Laev;	b	TERMINATORS_KEY
c	ny	net/minecraft/data/worldgen/Pools
	m	(Ljava/lang/String;)Laev;	a	createKey
		p	0		id
	m	(Lnr;)V	a	bootstrap
		p	0		structurePoolsRegisterable
	m	(Lnr;Ljava/lang/String;Ldwr;)V	a	register
		p	0		structurePoolsRegisterable
		p	1		id
		p	2		pool
	f	Laev;	a	EMPTY
c	nz	net/minecraft/data/worldgen/ProcessorLists
	m	(Laew;I)Ldyh;	a	trailsArchyLootProcessor
		p	0		lootTableId
		p	1		limit
	m	(Ljava/lang/String;)Laev;	a	createKey
		p	0		id
	m	(Lnr;)V	a	bootstrap
		p	0		processorListRegisterable
	m	(Lnr;Laev;Ljava/util/List;)V	a	register
		p	0		processorListRegisterable
		p	1		key
		p	2		processors
	f	Laev;	A	ROOF
	f	Laev;	B	HIGH_WALL
	f	Laev;	C	HIGH_RAMPART
	f	Laev;	D	FOSSIL_ROT
	f	Laev;	E	FOSSIL_COAL
	f	Laev;	F	FOSSIL_DIAMONDS
	f	Laev;	G	ANCIENT_CITY_START_DEGRADATION
	f	Laev;	H	ANCIENT_CITY_GENERIC_DEGRADATION
	f	Laev;	I	ANCIENT_CITY_WALLS_DEGRADATION
	f	Laev;	J	TRAIL_RUINS_HOUSES_ARCHAEOLOGY
	f	Laev;	K	TRAIL_RUINS_ROADS_ARCHAEOLOGY
	f	Laev;	L	TRAIL_RUINS_TOWER_TOP_ARCHAEOLOGY
	f	Laev;	M	EMPTY
	f	Laev;	a	ZOMBIE_PLAINS
	f	Laev;	b	ZOMBIE_SAVANNA
	f	Laev;	c	ZOMBIE_SNOWY
	f	Laev;	d	ZOMBIE_TAIGA
	f	Laev;	e	ZOMBIE_DESERT
	f	Laev;	f	MOSSIFY_10_PERCENT
	f	Laev;	g	MOSSIFY_20_PERCENT
	f	Laev;	h	MOSSIFY_70_PERCENT
	f	Laev;	i	STREET_PLAINS
	f	Laev;	j	STREET_SAVANNA
	f	Laev;	k	STREET_SNOWY_OR_TAIGA
	f	Laev;	l	FARM_PLAINS
	f	Laev;	m	FARM_SAVANNA
	f	Laev;	n	FARM_SNOWY
	f	Laev;	o	FARM_TAIGA
	f	Laev;	p	FARM_DESERT
	f	Laev;	q	OUTPOST_ROT
	f	Laev;	r	BOTTOM_RAMPART
	f	Laev;	s	TREASURE_ROOMS
	f	Laev;	t	HOUSING
	f	Laev;	u	SIDE_WALL_DEGRADATION
	f	Laev;	v	STABLE_DEGRADATION
	f	Laev;	w	BASTION_GENERIC_DEGRADATION
	f	Laev;	x	RAMPART_DEGRADATION
	f	Laev;	y	ENTRANCE_REPLACEMENT
	f	Laev;	z	BRIDGE
c	oa	net/minecraft/data/worldgen/SavannaVillagePools
	m	(Lnr;)V	a	bootstrap
		p	0		poolRegisterable
	f	Laev;	a	START
	f	Laev;	b	TERMINATORS_KEY
	f	Laev;	c	ZOMBIE_TERMINATORS_KEY
c	ob	net/minecraft/data/worldgen/SnowyVillagePools
	m	(Lnr;)V	a	bootstrap
		p	0		poolRegisterable
	f	Laev;	a	START
	f	Laev;	b	TERMINATORS_KEY
c	oc	net/minecraft/data/worldgen/StructureSets
	m	(Lnr;)V	a	bootstrap
		p	0		structureSetRegisterable
c	od	net/minecraft/data/worldgen/Structures
	m	(Lbjj;)Ldvp;	a	lambda$bootstrap$1
	m	(Lhi;Ldko$b;Ldvt;)Ldvi$c;	a	structure
		p	0		biomes
		p	1		featureStep
		p	2		terrainAdaptation
	m	(Lhi;Ldvt;)Ldvi$c;	a	structure
		p	0		biomes
		p	1		terrainAdaptation
	m	(Lhi;Ljava/util/Map;Ldko$b;Ldvt;)Ldvi$c;	a	structure
		p	0		biomes
		p	1		spawns
		p	2		featureStep
		p	3		terrainAdaptation
	m	(Lnr;)V	a	bootstrap
		p	0		structureRegisterable
	m	(Lbjj;)Lbjj;	b	lambda$bootstrap$0
c	oe	net/minecraft/data/worldgen/SurfaceRuleData
	m	()Ldlj$o;	a	overworld
	m	(D)Ldlj$f;	a	surfaceNoiseAbove
		p	0		min
	m	(I)[Ldlj$o;	a	lambda$overworldLike$0
	m	(Lcsv;)Ldlj$o;	a	makeStateRule
		p	0		block
	m	(ZZZ)Ldlj$o;	a	overworldLike
		p	0		surface
		p	1		bedrockRoof
		p	2		bedrockFloor
	m	()Ldlj$o;	b	nether
	m	()Ldlj$o;	c	end
	m	()Ldlj$o;	d	air
	f	Ldlj$o;	A	SOUL_SAND
	f	Ldlj$o;	B	SOUL_SOIL
	f	Ldlj$o;	C	BASALT
	f	Ldlj$o;	D	BLACKSTONE
	f	Ldlj$o;	E	WARPED_WART_BLOCK
	f	Ldlj$o;	F	WARPED_NYLIUM
	f	Ldlj$o;	G	NETHER_WART_BLOCK
	f	Ldlj$o;	H	CRIMSON_NYLIUM
	f	Ldlj$o;	I	ENDSTONE
	f	Ldlj$o;	a	AIR
	f	Ldlj$o;	b	BEDROCK
	f	Ldlj$o;	c	WHITE_TERRACOTTA
	f	Ldlj$o;	d	ORANGE_TERRACOTTA
	f	Ldlj$o;	e	TERRACOTTA
	f	Ldlj$o;	f	RED_SAND
	f	Ldlj$o;	g	RED_SANDSTONE
	f	Ldlj$o;	h	STONE
	f	Ldlj$o;	i	DEEPSLATE
	f	Ldlj$o;	j	DIRT
	f	Ldlj$o;	k	PODZOL
	f	Ldlj$o;	l	COARSE_DIRT
	f	Ldlj$o;	m	MYCELIUM
	f	Ldlj$o;	n	GRASS_BLOCK
	f	Ldlj$o;	o	CALCITE
	f	Ldlj$o;	p	GRAVEL
	f	Ldlj$o;	q	SAND
	f	Ldlj$o;	r	SANDSTONE
	f	Ldlj$o;	s	PACKED_ICE
	f	Ldlj$o;	t	SNOW_BLOCK
	f	Ldlj$o;	u	MUD
	f	Ldlj$o;	v	POWDER_SNOW
	f	Ldlj$o;	w	ICE
	f	Ldlj$o;	x	WATER
	f	Ldlj$o;	y	LAVA
	f	Ldlj$o;	z	NETHERRACK
c	of	net/minecraft/data/worldgen/TaigaVillagePools
	m	(Lnr;)V	a	bootstrap
		p	0		poolRegisterable
	f	Laev;	a	START
	f	Laev;	b	TERMINATORS_KEY
c	og	net/minecraft/data/worldgen/TerrainProvider
	m	(F)F	a	calculateMountainRidgeZeroContinentalnessPoint
	m	(FFF)F	a	mountainContinentalness
	m	(FFFF)F	a	calculateSlope
	m	(Lasv;FFFFFFLasv;)Lara;	a	ridgeSpline
		p	0		ridgesFolded
		p	1		continentalness
		p	7		amplifier
	m	(Lasv;FLasv;)Lara;	a	buildWeirdnessJaggednessSpline
		p	0		ridges
		p	2		amplifier
	m	(Lasv;FZLasv;)Lara;	a	buildMountainRidgeSplineWithPoints
		p	0		ridgesFolded
		p	3		amplifier
	m	(Lasv;Lasv;FFFFFFZZLasv;)Lara;	a	buildErosionOffsetSpline
		p	0		erosion
		p	1		ridgesFolded
		p	2		continentalness
		p	10		amplifier
	m	(Lasv;Lasv;FFLasv;)Lara;	a	buildRidgeJaggednessSpline
		p	0		ridges
		p	1		ridgesFolded
		p	4		amplifier
	m	(Lasv;Lasv;Lasv;FFFFLasv;)Lara;	a	buildErosionJaggednessSpline
		p	0		erosion
		p	1		ridges
		p	2		ridgesFolded
		p	7		amplifier
	m	(Lasv;Lasv;Lasv;FZLasv;)Lara;	a	getErosionFactor
		p	0		erosion
		p	1		ridges
		p	2		ridgesFolded
		p	5		amplifier
	m	(Lasv;Lasv;Lasv;Lasv;Z)Lara;	a	overworldFactor
		p	0		continents
		p	1		erosion
		p	2		ridges
		p	3		ridgesFolded
		p	4		amplified
	m	(Lasv;Lasv;Lasv;Z)Lara;	a	overworldOffset
		p	0		continents
		p	1		erosion
		p	2		ridgesFolded
		p	3		amplified
	m	(F)F	b	lambda$static$2
		p	0		value
	m	(Lasv;Lasv;Lasv;Lasv;Z)Lara;	b	overworldJaggedness
		p	0		continents
		p	1		erosion
		p	2		ridges
		p	3		ridgesFolded
		p	4		amplified
	m	(F)F	c	lambda$static$1
		p	0		value
	m	(F)F	d	lambda$static$0
		p	0		value
	f	F	a	DEEP_OCEAN_CONTINENTALNESS
	f	F	b	OCEAN_CONTINENTALNESS
	f	F	c	PLAINS_CONTINENTALNESS
	f	F	d	BEACH_CONTINENTALNESS
	f	Lasv;	e	NO_TRANSFORM
	f	Lasv;	f	AMPLIFIED_OFFSET
	f	Lasv;	g	AMPLIFIED_FACTOR
	f	Lasv;	h	AMPLIFIED_JAGGEDNESS
c	oh	net/minecraft/data/worldgen/TrailRuinsStructurePools
	m	(Lnr;)V	a	bootstrap
		p	0		poolRegisterable
	f	Laev;	a	START
c	oi	net/minecraft/data/worldgen/VillagePools
	m	(Lnr;)V	a	bootstrap
		p	0		poolRegisterable
c	oj	net/minecraft/data/worldgen/biome/BiomeData
	m	(Lnr;)V	a	bootstrap
		p	0		biomeRegisterable
c	ok	net/minecraft/data/worldgen/biome/EndBiomes
	m	(Lcqu$a;)Lcqt;	a	baseEndBiome
		p	0		builder
	m	(Lhf;Lhf;)Lcqt;	a	endBarrens
		p	0		featureLookup
		p	1		carverLookup
	m	(Lhf;Lhf;)Lcqt;	b	theEnd
		p	0		featureLookup
		p	1		carverLookup
	m	(Lhf;Lhf;)Lcqt;	c	endMidlands
		p	0		featureLookup
		p	1		carverLookup
	m	(Lhf;Lhf;)Lcqt;	d	endHighlands
		p	0		featureLookup
		p	1		carverLookup
	m	(Lhf;Lhf;)Lcqt;	e	smallEndIslands
		p	0		featureLookup
		p	1		carverLookup
c	ol	net/minecraft/data/worldgen/biome/NetherBiomes
	m	(Lhf;Lhf;)Lcqt;	a	netherWastes
		p	0		featureLookup
		p	1		carverLookup
	m	(Lhf;Lhf;)Lcqt;	b	soulSandValley
		p	0		featureLookup
		p	1		carverLookup
	m	(Lhf;Lhf;)Lcqt;	c	basaltDeltas
		p	0		featureLookup
		p	1		carverLookup
	m	(Lhf;Lhf;)Lcqt;	d	crimsonForest
		p	0		featureLookup
		p	1		carverLookup
	m	(Lhf;Lhf;)Lcqt;	e	warpedForest
		p	0		featureLookup
		p	1		carverLookup
c	om	net/minecraft/data/worldgen/biome/OverworldBiomes
	m	(F)I	a	calculateSkyColor
		p	0		temperature
	m	(Lcqu$a;)V	a	globalOverworldGeneration
		p	0		generationSettings
	m	(Lcrf$a;IILcqu$a;)Lcqt;	a	baseOcean
		p	0		spawnSettings
		p	1		waterColor
		p	2		waterFogColor
		p	3		generationSettings
	m	(Lhf;Lhf;)Lcqt;	a	sparseJungle
		p	0		featureLookup
		p	1		carverLookup
	m	(Lhf;Lhf;FZZZLcrf$a;Lapa;)Lcqt;	a	baseJungle
		p	0		featureLookup
		p	1		carverLookup
		p	2		depth
		p	3		bamboo
		p	4		sparse
		p	5		unmodified
		p	6		spawnSettings
		p	7		music
	m	(Lhf;Lhf;Z)Lcqt;	a	oldGrowthTaiga
		p	0		featureLookup
		p	1		carverLookup
		p	2		spruce
	m	(Lhf;Lhf;ZZ)Lcqt;	a	savanna
		p	0		featureLookup
		p	1		carverLookup
		p	2		windswept
		p	3		plateau
	m	(Lhf;Lhf;ZZZ)Lcqt;	a	plains
		p	0		featureLookup
		p	1		carverLookup
		p	2		sunflower
		p	3		snowy
		p	4		iceSpikes
	m	(ZFFIILjava/lang/Integer;Ljava/lang/Integer;Lcrf$a;Lcqu$a;Lapa;)Lcqt;	a	biome
		p	0		precipitation
		p	1		temperature
		p	2		downfall
		p	3		waterColor
		p	4		waterFogColor
		p	5		grassColor
		p	6		foliageColor
		p	7		spawnSettings
		p	8		generationSettings
		p	9		music
	m	(ZFFLcrf$a;Lcqu$a;Lapa;)Lcqt;	a	biome
		p	0		precipitation
		p	1		temperature
		p	2		downfall
		p	3		spawnSettings
		p	4		generationSettings
		p	5		music
	m	(Lhf;Lhf;)Lcqt;	b	jungle
		p	0		featureLookup
		p	1		carverLookup
	m	(Lhf;Lhf;Z)Lcqt;	b	windsweptHills
		p	0		featureLookup
		p	1		carverLookup
		p	2		forest
	m	(Lhf;Lhf;ZZ)Lcqt;	b	beach
		p	0		featureLookup
		p	1		carverLookup
		p	2		snowy
		p	3		stony
	m	(Lhf;Lhf;ZZZ)Lcqt;	b	forest
		p	0		featureLookup
		p	1		carverLookup
		p	2		birch
		p	3		oldGrowth
		p	4		flower
	m	(Lhf;Lhf;)Lcqt;	c	bambooJungle
		p	0		featureLookup
		p	1		carverLookup
	m	(Lhf;Lhf;Z)Lcqt;	c	badlands
		p	0		featureLookup
		p	1		carverLookup
		p	2		plateau
	m	(Lhf;Lhf;)Lcqt;	d	desert
		p	0		featureLookup
		p	1		carverLookup
	m	(Lhf;Lhf;Z)Lcqt;	d	coldOcean
		p	0		featureLookup
		p	1		carverLookup
		p	2		deep
	m	(Lhf;Lhf;)Lcqt;	e	mushroomFields
		p	0		featureLookup
		p	1		carverLookup
	m	(Lhf;Lhf;Z)Lcqt;	e	ocean
		p	0		featureLookup
		p	1		carverLookup
		p	2		deep
	m	(Lhf;Lhf;)Lcqt;	f	warmOcean
		p	0		featureLookup
		p	1		carverLookup
	m	(Lhf;Lhf;Z)Lcqt;	f	lukeWarmOcean
		p	0		featureLookup
		p	1		carverLookup
		p	2		deep
	m	(Lhf;Lhf;)Lcqt;	g	darkForest
		p	0		featureLookup
		p	1		carverLookup
	m	(Lhf;Lhf;Z)Lcqt;	g	frozenOcean
		p	0		featureLookup
		p	1		carverLookup
		p	2		deep
	m	(Lhf;Lhf;)Lcqt;	h	swamp
		p	0		featureLookup
		p	1		carverLookup
	m	(Lhf;Lhf;Z)Lcqt;	h	taiga
		p	0		featureLookup
		p	1		carverLookup
		p	2		snowy
	m	(Lhf;Lhf;)Lcqt;	i	mangroveSwamp
		p	0		featureLookup
		p	1		carverLookup
	m	(Lhf;Lhf;Z)Lcqt;	i	river
		p	0		featureLookup
		p	1		carverLookup
		p	2		frozen
	m	(Lhf;Lhf;)Lcqt;	j	theVoid
		p	0		featureLookup
		p	1		carverLookup
	m	(Lhf;Lhf;Z)Lcqt;	j	meadowOrCherryGrove
		p	0		featureLookup
		p	1		carverLookup
		p	2		cherryGrove
	m	(Lhf;Lhf;)Lcqt;	k	frozenPeaks
		p	0		featureLookup
		p	1		carverLookup
	m	(Lhf;Lhf;)Lcqt;	l	jaggedPeaks
		p	0		featureLookup
		p	1		carverLookup
	m	(Lhf;Lhf;)Lcqt;	m	stonyPeaks
		p	0		featureLookup
		p	1		carverLookup
	m	(Lhf;Lhf;)Lcqt;	n	snowySlopes
		p	0		featureLookup
		p	1		carverLookup
	m	(Lhf;Lhf;)Lcqt;	o	grove
		p	0		featureLookup
		p	1		carverLookup
	m	(Lhf;Lhf;)Lcqt;	p	lushCaves
		p	0		featureLookup
		p	1		carverLookup
	m	(Lhf;Lhf;)Lcqt;	q	dripstoneCaves
		p	0		featureLookup
		p	1		carverLookup
	m	(Lhf;Lhf;)Lcqt;	r	deepDark
		p	0		featureLookup
		p	1		carverLookup
	m	(Lhf;Lhf;)Lcqu$a;	s	baseOceanGeneration
		p	0		featureLookup
		p	1		carverLookup
	f	I	a	NORMAL_WATER_COLOR
	f	I	b	NORMAL_WATER_FOG_COLOR
	f	I	c	OVERWORLD_FOG_COLOR
	f	Lapa;	d	NORMAL_MUSIC
c	on	net/minecraft/data/worldgen/biome/package-info
c	oo	net/minecraft/data/worldgen/features/AquaticFeatures
	m	(Lnr;)V	a	bootstrap
		p	0		featureRegisterable
	f	Laev;	a	SEAGRASS_SHORT
	f	Laev;	b	SEAGRASS_SLIGHTLY_LESS_SHORT
	f	Laev;	c	SEAGRASS_MID
	f	Laev;	d	SEAGRASS_TALL
	f	Laev;	e	SEA_PICKLE
	f	Laev;	f	SEAGRASS_SIMPLE
	f	Laev;	g	KELP
	f	Laev;	h	WARM_OCEAN_VEGETATION
c	op	net/minecraft/data/worldgen/features/CaveFeatures
	m	()Lhe;	a	makeSmallDripleaf
	m	(Lha;)Lhe;	a	makeDripleaf
		p	0		direction
	m	(Lnr;)V	a	bootstrap
		p	0		featureRegisterable
	f	Laev;	a	MONSTER_ROOM
	f	Laev;	b	FOSSIL_COAL
	f	Laev;	c	FOSSIL_DIAMONDS
	f	Laev;	d	DRIPSTONE_CLUSTER
	f	Laev;	e	LARGE_DRIPSTONE
	f	Laev;	f	POINTED_DRIPSTONE
	f	Laev;	g	UNDERWATER_MAGMA
	f	Laev;	h	GLOW_LICHEN
	f	Laev;	i	ROOTED_AZALEA_TREE
	f	Laev;	j	CAVE_VINE
	f	Laev;	k	CAVE_VINE_IN_MOSS
	f	Laev;	l	MOSS_VEGETATION
	f	Laev;	m	MOSS_PATCH
	f	Laev;	n	MOSS_PATCH_BONEMEAL
	f	Laev;	o	DRIPLEAF
	f	Laev;	p	CLAY_WITH_DRIPLEAVES
	f	Laev;	q	CLAY_POOL_WITH_DRIPLEAVES
	f	Laev;	r	LUSH_CAVES_CLAY
	f	Laev;	s	MOSS_PATCH_CEILING
	f	Laev;	t	SPORE_BLOSSOM
	f	Laev;	u	AMETHYST_GEODE
	f	Laev;	v	SCULK_PATCH_DEEP_DARK
	f	Laev;	w	SCULK_PATCH_ANCIENT_CITY
	f	Laev;	x	SCULK_VEIN
c	oq	net/minecraft/data/worldgen/features/EndFeatures
	m	(Lnr;)V	a	bootstrap
		p	0		featureRegisterable
	f	Laev;	a	END_SPIKE
	f	Laev;	b	END_GATEWAY_RETURN
	f	Laev;	c	END_GATEWAY_DELAYED
	f	Laev;	d	CHORUS_PLANT
	f	Laev;	e	END_ISLAND
c	or	net/minecraft/data/worldgen/features/FeatureUtils
	m	(ILhe;)Ldqn;	a	simpleRandomPatchConfiguration
		p	0		tries
		p	1		feature
	m	(Ldnw;Ldqa;)Ldqn;	a	simplePatchConfiguration
		p	0		feature
		p	1		config
	m	(Ldnw;Ldqa;Ljava/util/List;)Ldqn;	a	simplePatchConfiguration
		p	0		feature
		p	1		config
		p	2		predicateBlocks
	m	(Ldnw;Ldqa;Ljava/util/List;I)Ldqn;	a	simplePatchConfiguration
		p	0		feature
		p	1		config
		p	2		predicateBlocks
		p	3		tries
	m	(Ljava/lang/String;)Laev;	a	createKey
		p	0		id
	m	(Ljava/util/List;)Ldlz;	a	simplePatchPredicate
		p	0		validGround
	m	(Lnr;)V	a	bootstrap
		p	0		featureRegisterable
	m	(Lnr;Laev;Ldnw;)V	a	register
		p	0		registerable
		p	1		key
		p	2		feature
	m	(Lnr;Laev;Ldnw;Ldqa;)V	a	register
		p	0		registerable
		p	1		key
		p	2		feature
		p	3		config
c	os	net/minecraft/data/worldgen/features/MiscOverworldFeatures
	m	(Lnr;)V	a	bootstrap
		p	0		featureRegisterable
	f	Laev;	a	ICE_SPIKE
	f	Laev;	b	ICE_PATCH
	f	Laev;	c	FOREST_ROCK
	f	Laev;	d	ICEBERG_PACKED
	f	Laev;	e	ICEBERG_BLUE
	f	Laev;	f	BLUE_ICE
	f	Laev;	g	LAKE_LAVA
	f	Laev;	h	DISK_CLAY
	f	Laev;	i	DISK_GRAVEL
	f	Laev;	j	DISK_SAND
	f	Laev;	k	FREEZE_TOP_LAYER
	f	Laev;	l	DISK_GRASS
	f	Laev;	m	BONUS_CHEST
	f	Laev;	n	VOID_START_PLATFORM
	f	Laev;	o	DESERT_WELL
	f	Laev;	p	SPRING_LAVA_OVERWORLD
	f	Laev;	q	SPRING_LAVA_FROZEN
	f	Laev;	r	SPRING_WATER
c	ot	net/minecraft/data/worldgen/features/NetherFeatures
	m	(Lnr;)V	a	bootstrap
		p	0		featureRegisterable
	f	Laev;	a	DELTA
	f	Laev;	b	SMALL_BASALT_COLUMNS
	f	Laev;	c	LARGE_BASALT_COLUMNS
	f	Laev;	d	BASALT_BLOBS
	f	Laev;	e	BLACKSTONE_BLOBS
	f	Laev;	f	GLOWSTONE_EXTRA
	f	Laev;	g	CRIMSON_FOREST_VEGETATION
	f	Laev;	h	CRIMSON_FOREST_VEGETATION_BONEMEAL
	f	Laev;	i	WARPED_FOREST_VEGETION
	f	Laev;	j	WARPED_FOREST_VEGETATION_BONEMEAL
	f	Laev;	k	NETHER_SPROUTS
	f	Laev;	l	NETHER_SPROUTS_BONEMEAL
	f	Laev;	m	TWISTING_VINES
	f	Laev;	n	TWISTING_VINES_BONEMEAL
	f	Laev;	o	WEEPING_VINES
	f	Laev;	p	PATCH_CRIMSON_ROOTS
	f	Laev;	q	BASALT_PILLAR
	f	Laev;	r	SPRING_LAVA_NETHER
	f	Laev;	s	SPRING_NETHER_CLOSED
	f	Laev;	t	SPRING_NETHER_OPEN
	f	Laev;	u	PATCH_FIRE
	f	Laev;	v	PATCH_SOUL_FIRE
c	ou	net/minecraft/data/worldgen/features/OreFeatures
	m	(Lnr;)V	a	bootstrap
		p	0		featureRegisterable
	f	Laev;	A	ORE_EMERALD
	f	Laev;	B	ORE_ANCIENT_DEBRIS_LARGE
	f	Laev;	C	ORE_ANCIENT_DEBRIS_SMALL
	f	Laev;	D	ORE_COPPPER_SMALL
	f	Laev;	E	ORE_COPPER_LARGE
	f	Laev;	F	ORE_CLAY
	f	Laev;	a	ORE_MAGMA
	f	Laev;	b	ORE_SOUL_SAND
	f	Laev;	c	ORE_NETHER_GOLD
	f	Laev;	d	ORE_QUARTZ
	f	Laev;	e	ORE_GRAVEL_NETHER
	f	Laev;	f	ORE_BLACKSTONE
	f	Laev;	g	ORE_DIRT
	f	Laev;	h	ORE_GRAVEL
	f	Laev;	i	ORE_GRANITE
	f	Laev;	j	ORE_DIORITE
	f	Laev;	k	ORE_ANDESITE
	f	Laev;	l	ORE_TUFF
	f	Laev;	m	ORE_COAL
	f	Laev;	n	ORE_COAL_BURIED
	f	Laev;	o	ORE_IRON
	f	Laev;	p	ORE_IRON_SMALL
	f	Laev;	q	ORE_GOLD
	f	Laev;	r	ORE_GOLD_BURIED
	f	Laev;	s	ORE_REDSTONE
	f	Laev;	t	ORE_DIAMOND_SMALL
	f	Laev;	u	ORE_DIAMOND_MEDIUM
	f	Laev;	v	ORE_DIAMOND_LARGE
	f	Laev;	w	ORE_DIAMOND_BURIED
	f	Laev;	x	ORE_LAPIS
	f	Laev;	y	ORE_LAPIS_BURIED
	f	Laev;	z	ORE_INFESTED
c	ov	net/minecraft/data/worldgen/features/PileFeatures
	m	(Lnr;)V	a	bootstrap
		p	0		featureRegisterable
	f	Laev;	a	PILE_HAY
	f	Laev;	b	PILE_MELON
	f	Laev;	c	PILE_SNOW
	f	Laev;	d	PILE_ICE
	f	Laev;	e	PILE_PUMPKIN
c	ow	net/minecraft/data/worldgen/features/TreeFeatures
	m	()Ldqw$a;	a	createOak
	m	(Lcsv;Lcsv;IIII)Ldqw$a;	a	createStraightBlobTree
		p	0		log
		p	1		leaves
		p	2		baseHeight
		p	3		firstRandomHeight
		p	4		secondRandomHeight
		p	5		radius
	m	(Lnr;)V	a	bootstrap
		p	0		featureRegisterable
	m	()Ldqw$a;	b	createBirch
	m	()Ldqw$a;	c	createSuperBirch
	m	()Ldqw$a;	d	createJungleTree
	m	()Ldqw$a;	e	createFancyOak
	m	()Ldqw$a;	f	cherry
	f	Laev;	A	OAK_BEES_0002
	f	Laev;	B	OAK_BEES_002
	f	Laev;	C	OAK_BEES_005
	f	Laev;	D	BIRCH_BEES_0002
	f	Laev;	E	BIRCH_BEES_002
	f	Laev;	F	BIRCH_BEES_005
	f	Laev;	G	FANCY_OAK_BEES_0002
	f	Laev;	H	FANCY_OAK_BEES_002
	f	Laev;	I	FANCY_OAK_BEES_005
	f	Laev;	J	FANCY_OAK_BEES
	f	Laev;	K	CHERRY_BEES_005
	f	Laev;	a	CRIMSON_FUNGUS
	f	Laev;	b	CRIMSON_FUNGUS_PLANTED
	f	Laev;	c	WARPED_FUNGUS
	f	Laev;	d	WARPED_FUNGUS_PLANTED
	f	Laev;	e	HUGE_BROWN_MUSHROOM
	f	Laev;	f	HUGE_RED_MUSHROOM
	f	Laev;	g	OAK
	f	Laev;	h	DARK_OAK
	f	Laev;	i	BIRCH
	f	Laev;	j	ACACIA
	f	Laev;	k	SPRUCE
	f	Laev;	l	PINE
	f	Laev;	m	JUNGLE_TREE
	f	Laev;	n	FANCY_OAK
	f	Laev;	o	JUNGLE_TREE_NO_VINE
	f	Laev;	p	MEGA_JUNGLE_TREE
	f	Laev;	q	MEGA_SPRUCE
	f	Laev;	r	MEGA_PINE
	f	Laev;	s	SUPER_BIRCH_BEES_0002
	f	Laev;	t	SUPER_BIRCH_BEES
	f	Laev;	u	SWAMP_OAK
	f	Laev;	v	JUNGLE_BUSH
	f	Laev;	w	AZALEA_TREE
	f	Laev;	x	MANGROVE
	f	Laev;	y	TALL_MANGROVE
	f	Laev;	z	CHERRY
c	ox	net/minecraft/data/worldgen/features/VegetationFeatures
	m	(Ldsb;I)Ldqn;	a	grassPatch
		p	0		block
		p	1		tries
	m	(Lnr;)V	a	bootstrap
		p	0		featureRegisterable
	f	Laev;	A	DARK_FOREST_VEGETATION
	f	Laev;	B	TREES_FLOWER_FOREST
	f	Laev;	C	MEADOW_TREES
	f	Laev;	D	TREES_TAIGA
	f	Laev;	E	TREES_GROVE
	f	Laev;	F	TREES_SAVANNA
	f	Laev;	G	BIRCH_TALL
	f	Laev;	H	TREES_WINDSWEPT_HILLS
	f	Laev;	I	TREES_WATER
	f	Laev;	J	TREES_BIRCH_AND_OAK
	f	Laev;	K	TREES_PLAINS
	f	Laev;	L	TREES_SPARSE_JUNGLE
	f	Laev;	M	TREES_OLD_GROWTH_SPRUCE_TAIGA
	f	Laev;	N	TREES_OLD_GROWTH_PINE_TAIGA
	f	Laev;	O	TREES_JUNGLE
	f	Laev;	P	BAMBOO_VEGETATION
	f	Laev;	Q	MUSHROOM_ISLAND_VEGETATION
	f	Laev;	R	MANGROVE_VEGETATION
	f	Laev;	a	BAMBOO_NO_PODZOL
	f	Laev;	b	BAMBOO_SOME_PODZOL
	f	Laev;	c	VINES
	f	Laev;	d	PATCH_BROWN_MUSHROOM
	f	Laev;	e	PATCH_RED_MUSHROOM
	f	Laev;	f	PATCH_SUNFLOWER
	f	Laev;	g	PATCH_PUMPKIN
	f	Laev;	h	PATCH_BERRY_BUSH
	f	Laev;	i	PATCH_TAIGA_GRASS
	f	Laev;	j	PATCH_GRASS
	f	Laev;	k	PATCH_GRASS_JUNGLE
	f	Laev;	l	SINGLE_PIECE_OF_GRASS
	f	Laev;	m	PATCH_DEAD_BUSH
	f	Laev;	n	PATCH_MELON
	f	Laev;	o	PATCH_WATERLILY
	f	Laev;	p	PATCH_TALL_GRASS
	f	Laev;	q	PATCH_LARGE_FERN
	f	Laev;	r	PATCH_CACTUS
	f	Laev;	s	PATCH_SUGAR_CANE
	f	Laev;	t	FLOWER_DEFAULT
	f	Laev;	u	FLOWER_FLOWER_FOREST
	f	Laev;	v	FLOWER_SWAMP
	f	Laev;	w	FLOWER_PLAIN
	f	Laev;	x	FLOWER_MEADOW
	f	Laev;	y	FLOWER_CHERRY
	f	Laev;	z	FOREST_FLOWERS
c	oy	net/minecraft/data/worldgen/features/package-info
c	oz	net/minecraft/data/worldgen/package-info
c	pa	net/minecraft/data/worldgen/placement/AquaticPlacements
	m	(I)Ljava/util/List;	a	seagrassPlacement
		p	0		count
	m	(Lnr;)V	a	bootstrap
		p	0		featureRegisterable
	f	Laev;	a	SEAGRASS_WARM
	f	Laev;	b	SEAGRASS_NORMAL
	f	Laev;	c	SEAGRASS_COLD
	f	Laev;	d	SEAGRASS_RIVER
	f	Laev;	e	SEAGRASS_SWAMP
	f	Laev;	f	SEAGRASS_DEEP_WARM
	f	Laev;	g	SEAGRASS_DEEP
	f	Laev;	h	SEAGRASS_DEEP_COLD
	f	Laev;	i	SEAGRASS_SIMPLE
	f	Laev;	j	SEA_PICKLE
	f	Laev;	k	KELP_COLD
	f	Laev;	l	KELP_WARM
	f	Laev;	m	WARM_OCEAN_VEGETATION
c	pb	net/minecraft/data/worldgen/placement/CavePlacements
	m	(Lnr;)V	a	bootstrap
		p	0		featureRegisterable
	f	Laev;	a	MONSTER_ROOM
	f	Laev;	b	MONSTER_ROOM_DEEP
	f	Laev;	c	FOSSIL_UPPER
	f	Laev;	d	FOSSIL_LOWER
	f	Laev;	e	DRIPSTONE_CLUSTER
	f	Laev;	f	LARGE_DRIPSTONE
	f	Laev;	g	POINTED_DRIPSTONE
	f	Laev;	h	UNDERWATER_MAGMA
	f	Laev;	i	GLOW_LICHEN
	f	Laev;	j	ROOTED_AZALEA_TREE
	f	Laev;	k	CAVE_VINES
	f	Laev;	l	LUSH_CAVES_VEGETATION
	f	Laev;	m	LUSH_CAVES_CLAY
	f	Laev;	n	LUSH_CAVES_CEILING_VEGETATION
	f	Laev;	o	SPORE_BLOSSOM
	f	Laev;	p	CLASSIC_VINES
	f	Laev;	q	AMETHYST_GEODE
	f	Laev;	r	SCULK_PATCH_DEEP_DARK
	f	Laev;	s	SCULK_PATCH_ANCIENT_CITY
	f	Laev;	t	SCULK_VEIN
c	pc	net/minecraft/data/worldgen/placement/EndPlacements
	m	(Lnr;)V	a	bootstrap
		p	0		featureRegisterable
	f	Laev;	a	END_SPIKE
	f	Laev;	b	END_GATEWAY_RETURN
	f	Laev;	c	CHORUS_PLANT
	f	Laev;	d	END_ISLAND_DECORATED
c	pd	net/minecraft/data/worldgen/placement/MiscOverworldPlacements
	m	(Lnr;)V	a	bootstrap
		p	0		featureRegisterable
	f	Laev;	a	ICE_SPIKE
	f	Laev;	b	ICE_PATCH
	f	Laev;	c	FOREST_ROCK
	f	Laev;	d	ICEBERG_PACKED
	f	Laev;	e	ICEBERG_BLUE
	f	Laev;	f	BLUE_ICE
	f	Laev;	g	LAKE_LAVA_UNDERGROUND
	f	Laev;	h	LAKE_LAVA_SURFACE
	f	Laev;	i	DISK_CLAY
	f	Laev;	j	DISK_GRAVEL
	f	Laev;	k	DISK_SAND
	f	Laev;	l	DISK_GRASS
	f	Laev;	m	FREEZE_TOP_LAYER
	f	Laev;	n	VOID_START_PLATFORM
	f	Laev;	o	DESERT_WELL
	f	Laev;	p	SPRING_LAVA
	f	Laev;	q	SPRING_LAVA_FROZEN
	f	Laev;	r	SPRING_WATER
c	pe	net/minecraft/data/worldgen/placement/NetherPlacements
	m	(Lnr;)V	a	bootstrap
		p	0		featureRegisterable
	f	Laev;	a	DELTA
	f	Laev;	b	SMALL_BASALT_COLUMNS
	f	Laev;	c	LARGE_BASALT_COLUMNS
	f	Laev;	d	BASALT_BLOBS
	f	Laev;	e	BLACKSTONE_BLOBS
	f	Laev;	f	GLOWSTONE_EXTRA
	f	Laev;	g	GLOWSTONE
	f	Laev;	h	CRIMSON_FOREST_VEGETATION
	f	Laev;	i	WARPED_FOREST_VEGETATION
	f	Laev;	j	NETHER_SPROUTS
	f	Laev;	k	TWISTING_VINES
	f	Laev;	l	WEEPING_VINES
	f	Laev;	m	PATCH_CRIMSON_ROOTS
	f	Laev;	n	BASALT_PILLAR
	f	Laev;	o	SPRING_DELTA
	f	Laev;	p	SPRING_CLOSED
	f	Laev;	q	SPRING_CLOSED_DOUBLE
	f	Laev;	r	SPRING_OPEN
	f	Laev;	s	PATCH_SOUL_FIRE
	f	Laev;	t	PATCH_FIRE
c	pf	net/minecraft/data/worldgen/placement/OrePlacements
	m	(ILdup;)Ljava/util/List;	a	commonOrePlacement
		p	0		count
		p	1		heightModifier
	m	(Ldup;Ldup;)Ljava/util/List;	a	orePlacement
		p	0		countModifier
		p	1		heightModifier
	m	(Lnr;)V	a	bootstrap
		p	0		featureRegisterable
	m	(ILdup;)Ljava/util/List;	b	rareOrePlacement
		p	0		chance
		p	1		heightModifier
	f	Laev;	A	ORE_REDSTONE_LOWER
	f	Laev;	B	ORE_DIAMOND
	f	Laev;	C	ORE_DIAMOND_MEDIUM
	f	Laev;	D	ORE_DIAMOND_LARGE
	f	Laev;	E	ORE_DIAMOND_BURIED
	f	Laev;	F	ORE_LAPIS
	f	Laev;	G	ORE_LAPIS_BURIED
	f	Laev;	H	ORE_INFESTED
	f	Laev;	I	ORE_EMERALD
	f	Laev;	J	ORE_ANCIENT_DEBRIS_LARGE
	f	Laev;	K	ORE_ANCIENT_DEBRIS_SMALL
	f	Laev;	L	ORE_COPPER
	f	Laev;	M	ORE_COPPER_LARGE
	f	Laev;	N	ORE_CLAY
	f	Laev;	a	ORE_MAGMA
	f	Laev;	b	ORE_SOUL_SAND
	f	Laev;	c	ORE_GOLD_DELTAS
	f	Laev;	d	ORE_QUARTZ_DELTAS
	f	Laev;	e	ORE_GOLD_NETHER
	f	Laev;	f	ORE_QUARTZ_NETHER
	f	Laev;	g	ORE_GRAVEL_NETHER
	f	Laev;	h	ORE_BLACKSTONE
	f	Laev;	i	ORE_DIRT
	f	Laev;	j	ORE_GRAVEL
	f	Laev;	k	ORE_GRANITE_UPPER
	f	Laev;	l	ORE_GRANITE_LOWER
	f	Laev;	m	ORE_DIORITE_UPPER
	f	Laev;	n	ORE_DIORITE_LOWER
	f	Laev;	o	ORE_ANDESITE_UPPER
	f	Laev;	p	ORE_ANDESITE_LOWER
	f	Laev;	q	ORE_TUFF
	f	Laev;	r	ORE_COAL_UPPER
	f	Laev;	s	ORE_COAL_LOWER
	f	Laev;	t	ORE_IRON_UPPER
	f	Laev;	u	ORE_IRON_MIDDLE
	f	Laev;	v	ORE_IRON_SMALL
	f	Laev;	w	ORE_GOLD_EXTRA
	f	Laev;	x	ORE_GOLD
	f	Laev;	y	ORE_GOLD_LOWER
	f	Laev;	z	ORE_REDSTONE
c	pg	net/minecraft/data/worldgen/placement/PlacementUtils
	m	()Lduo;	a	isEmpty
	m	(IFI)Ldup;	a	countExtra
		p	0		count
		p	1		extraChance
		p	2		extraCount
	m	(Lcsv;)Ldub;	a	filteredByBlockSurvival
		p	0		block
	m	(Ldnw;Ldqa;)Lhe;	a	onlyWhenEmpty
		p	0		feature
		p	1		featureConfig
	m	(Ldnw;Ldqa;Ldlz;)Lhe;	a	filtered
		p	0		feature
		p	1		featureConfig
		p	2		predicate
	m	(Ldnw;Ldqa;[Ldup;)Lhe;	a	inlinePlaced
		p	0		feature
		p	1		featureConfig
		p	2		modifiers
	m	(Lhe;[Ldup;)Lhe;	a	inlinePlaced
		p	0		feature
		p	1		modifiers
	m	(Ljava/lang/String;)Laev;	a	createKey
		p	0		id
	m	(Lnr;)V	a	bootstrap
		p	0		featureRegisterable
	m	(Lnr;Laev;Lhe;Ljava/util/List;)V	a	register
		p	0		featureRegisterable
		p	1		key
		p	2		feature
		p	3		modifiers
	m	(Lnr;Laev;Lhe;[Ldup;)V	a	register
		p	0		featureRegisterable
		p	1		key
		p	2		feature
		p	3		modifiers
	f	Ldup;	a	HEIGHTMAP
	f	Ldup;	b	HEIGHTMAP_TOP_SOLID
	f	Ldup;	c	HEIGHTMAP_WORLD_SURFACE
	f	Ldup;	d	HEIGHTMAP_OCEAN_FLOOR
	f	Ldup;	e	FULL_RANGE
	f	Ldup;	f	RANGE_10_10
	f	Ldup;	g	RANGE_8_8
	f	Ldup;	h	RANGE_4_4
	f	Ldup;	i	RANGE_BOTTOM_TO_MAX_TERRAIN_HEIGHT
c	ph	net/minecraft/data/worldgen/placement/TreePlacements
	m	(Lnr;)V	a	bootstrap
		p	0		featureRegisterable
	f	Laev;	A	FANCY_OAK_BEES_002
	f	Laev;	B	FANCY_OAK_BEES
	f	Laev;	C	CHERRY_BEES_005
	f	Laev;	a	CRIMSON_FUNGI
	f	Laev;	b	WARPED_FUNGI
	f	Laev;	c	OAK_CHECKED
	f	Laev;	d	DARK_OAK_CHECKED
	f	Laev;	e	BIRCH_CHECKED
	f	Laev;	f	ACACIA_CHECKED
	f	Laev;	g	SPRUCE_CHECKED
	f	Laev;	h	MANGROVE_CHECKED
	f	Laev;	i	CHERRY_CHECKED
	f	Laev;	j	PINE_ON_SNOW
	f	Laev;	k	SPRUCE_ON_SNOW
	f	Laev;	l	PINE_CHECKED
	f	Laev;	m	JUNGLE_TREE_CHECKED
	f	Laev;	n	FANCY_OAK_CHECKED
	f	Laev;	o	MEGA_JUNGLE_TREE_CHECKED
	f	Laev;	p	MEGA_SPRUCE_CHECKED
	f	Laev;	q	MEGA_PINE_CHECKED
	f	Laev;	r	TALL_MANGROVE_CHECKED
	f	Laev;	s	JUNGLE_BUSH
	f	Laev;	t	SUPER_BIRCH_BEES_0002
	f	Laev;	u	SUPER_BIRCH_BEES
	f	Laev;	v	OAK_BEES_0002
	f	Laev;	w	OAK_BEES_002
	f	Laev;	x	BIRCH_BEES_0002_PLACED
	f	Laev;	y	BIRCH_BEES_002
	f	Laev;	z	FANCY_OAK_BEES_0002
c	pi	net/minecraft/data/worldgen/placement/VegetationPlacements
	m	(I)Ljava/util/List;	a	worldSurfaceSquaredWithCount
		p	0		count
	m	(ILdup;)Ljava/util/List;	a	getMushroomPlacement
		p	0		chance
		p	1		modifier
	m	(Ldup;)Ljava/util/List;	a	treePlacement
		p	0		modifier
	m	(Ldup;Lcsv;)Ljava/util/List;	a	treePlacement
		p	0		modifier
		p	1		block
	m	(Lnr;)V	a	bootstrap
		p	0		featureRegisterable
	m	(Ldup;)Lcom/google/common/collect/ImmutableList$Builder;	b	treePlacementBase
		p	0		countModifier
	f	Laev;	A	PATCH_CACTUS_DECORATED
	f	Laev;	B	PATCH_SUGAR_CANE_SWAMP
	f	Laev;	C	PATCH_SUGAR_CANE_DESERT
	f	Laev;	D	PATCH_SUGAR_CANE_BADLANDS
	f	Laev;	E	PATCH_SUGAR_CANE
	f	Laev;	F	BROWN_MUSHROOM_NETHER
	f	Laev;	G	RED_MUSHROOM_NETHER
	f	Laev;	H	BROWN_MUSHROOM_NORMAL
	f	Laev;	I	RED_MUSHROOM_NORMAL
	f	Laev;	J	BROWN_MUSHROOM_TAIGA
	f	Laev;	K	RED_MUSHROOM_TAIGA
	f	Laev;	L	BROWN_MUSHROOM_OLD_GROWTH
	f	Laev;	M	RED_MUSHROOM_OLD_GROWTH
	f	Laev;	N	BROWN_MUSHROOM_SWAMP
	f	Laev;	O	RED_MUSHROOM_SWAMP
	f	Laev;	P	FLOWER_WARM
	f	Laev;	Q	FLOWER_DEFAULT
	f	Laev;	R	FLOWER_FLOWER_FOREST
	f	Laev;	S	FLOWER_SWAMP
	f	Laev;	T	FLOWER_PLAINS
	f	Laev;	U	FLOWER_MEADOW
	f	Laev;	V	FLOWER_CHERRY
	f	Laev;	W	TREES_PLAINS
	f	Laev;	X	DARK_FOREST_VEGETATION
	f	Laev;	Y	FLOWER_FOREST_FLOWERS
	f	Laev;	Z	FOREST_FLOWERS
	f	Laev;	a	BAMBOO_LIGHT
	f	Laev;	aa	TREES_FLOWER_FOREST
	f	Laev;	ab	TREES_MEADOW
	f	Laev;	ac	TREES_CHERRY
	f	Laev;	ad	TREES_TAIGA
	f	Laev;	ae	TREES_GROVE
	f	Laev;	af	TREES_BADLANDS
	f	Laev;	ag	TREES_SNOWY
	f	Laev;	ah	TREES_SWAMP
	f	Laev;	ai	TREES_WINDSWEPT_SAVANNA
	f	Laev;	aj	TREES_SAVANNA
	f	Laev;	ak	BIRCH_TALL
	f	Laev;	al	TREES_BIRCH
	f	Laev;	am	TREES_WINDSWEPT_FOREST
	f	Laev;	an	TREES_WINDSWEPT_HILLS
	f	Laev;	ao	TREES_WATER
	f	Laev;	ap	TREES_BIRCH_AND_OAK
	f	Laev;	aq	TREES_SPARSE_JUNGLE
	f	Laev;	ar	TREES_OLD_GROWTH_SPRUCE_TAIGA
	f	Laev;	as	TREES_OLD_GROWTH_PINE_TAIGA
	f	Laev;	at	TREES_JUNGLE
	f	Laev;	au	BAMBOO_VEGETATION
	f	Laev;	av	MUSHROOM_ISLAND_VEGETATION
	f	Laev;	aw	TREES_MANGROVE
	f	Ldup;	ax	TREE_THRESHOLD
	f	Laev;	b	BAMBOO
	f	Laev;	c	VINES
	f	Laev;	d	PATCH_SUNFLOWER
	f	Laev;	e	PATCH_PUMPKIN
	f	Laev;	f	PATCH_GRASS_PLAIN
	f	Laev;	g	PATCH_GRASS_FOREST
	f	Laev;	h	PATCH_GRASS_BADLANDS
	f	Laev;	i	PATCH_GRASS_SAVANNA
	f	Laev;	j	PATCH_GRASS_NORMAL
	f	Laev;	k	PATCH_GRASS_TAIGA_2
	f	Laev;	l	PATCH_GRASS_TAIGA
	f	Laev;	m	PATCH_GRASS_JUNGLE
	f	Laev;	n	GRASS_BONEMEAL
	f	Laev;	o	PATCH_DEAD_BUSH_2
	f	Laev;	p	PATCH_DEAD_BUSH
	f	Laev;	q	PATCH_DEAD_BUSH_BADLANDS
	f	Laev;	r	PATCH_MELON
	f	Laev;	s	PATCH_MELON_SPARSE
	f	Laev;	t	PATCH_BERRY_COMMON
	f	Laev;	u	PATCH_BERRY_RARE
	f	Laev;	v	PATCH_WATERLILY
	f	Laev;	w	PATCH_TALL_GRASS_2
	f	Laev;	x	PATCH_TALL_GRASS
	f	Laev;	y	PATCH_LARGE_FERN
	f	Laev;	z	PATCH_CACTUS_DESERT
c	pj	net/minecraft/data/worldgen/placement/VillagePlacements
	m	(Lnr;)V	a	bootstrap
		p	0		featureRegisterable
	f	Laev;	a	PILE_HAY_VILLAGE
	f	Laev;	b	PILE_MELON_VILLAGE
	f	Laev;	c	PILE_SNOW_VILLAGE
	f	Laev;	d	PILE_ICE_VILLAGE
	f	Laev;	e	PILE_PUMPKIN_VILLAGE
	f	Laev;	f	OAK_VILLAGE
	f	Laev;	g	ACACIA_VILLAGE
	f	Laev;	h	SPRUCE_VILLAGE
	f	Laev;	i	PINE_VILLAGE
	f	Laev;	j	PATCH_CACTUS_VILLAGE
	f	Laev;	k	FLOWER_PLAIN_VILLAGE
	f	Laev;	l	PATCH_TAIGA_GRASS_VILLAGE
	f	Laev;	m	PATCH_BERRY_BUSH_VILLAGE
c	pk	net/minecraft/data/worldgen/placement/package-info
c	pl	net/minecraft/gametest/framework/AfterBatch
	m	()Ljava/lang/String;	a	batch
c	pm	net/minecraft/gametest/framework/BeforeBatch
	m	()Ljava/lang/String;	a	batch
c	pn	net/minecraft/gametest/framework/ExhaustedAttemptsException
	m	(IILpw;)V	<init>	<init>
		p	1		attempts
		p	2		successes
		p	3		test
c	po	net/minecraft/gametest/framework/GameTest
	m	()I	a	timeoutTicks
	m	()Ljava/lang/String;	b	batch
	m	()I	c	rotationSteps
	m	()Z	d	required
	m	()Ljava/lang/String;	e	template
	m	()J	f	setupTicks
	m	()I	g	attempts
	m	()I	h	requiredSuccesses
c	pp	net/minecraft/gametest/framework/GameTestAssertException
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		message
c	pq	net/minecraft/gametest/framework/GameTestAssertPosException
	m	(Ljava/lang/String;Lgw;Lgw;J)V	<init>	<init>
		p	1		message
		p	2		pos
		p	3		relativePos
		p	4		tick
	m	()Ljava/lang/String;	a	getMessageToShowAtBlock
	m	()Lgw;	b	getRelativePos
	m	()Lgw;	c	getAbsolutePos
	f	Lgw;	a	absolutePos
	f	Lgw;	b	relativePos
	f	J	c	tick
c	pr	net/minecraft/gametest/framework/GameTestBatch
	m	(Ljava/lang/String;Ljava/util/Collection;Ljava/util/function/Consumer;Ljava/util/function/Consumer;)V	<init>	<init>
		p	1		id
		p	2		testFunctions
		p	3		beforeBatchConsumer
		p	4		afterBatchConsumer
	m	()Ljava/lang/String;	a	getName
	m	(Lakq;)V	a	runBeforeBatchFunction
		p	1		world
	m	()Ljava/util/Collection;	b	getTestFunctions
	m	(Lakq;)V	b	runAfterBatchFunction
		p	1		world
	f	Ljava/lang/String;	a	DEFAULT_BATCH_NAME
	f	Ljava/lang/String;	b	name
	f	Ljava/util/Collection;	c	testFunctions
	f	Ljava/util/function/Consumer;	d	beforeBatchFunction
	f	Ljava/util/function/Consumer;	e	afterBatchFunction
c	ps	net/minecraft/gametest/framework/GameTestBatchRunner
	m	(Ljava/util/Collection;Lgw;Lczh;Lakq;Lqc;I)V	<init>	<init>
		p	1		batches
		p	2		pos
		p	3		rotation
		p	4		world
		p	5		testManager
		p	6		sizeZ
	m	()Ljava/util/List;	a	getTestInfos
	m	(I)V	a	runBatch
		p	1		index
	m	(Lcom/mojang/datafixers/util/Pair;)Ljava/util/stream/Stream;	a	lambda$new$2
		p	0		batch
	m	(Lczh;Lakq;Lpr;)Lcom/mojang/datafixers/util/Pair;	a	lambda$new$1
		p	2		batch
	m	(Lczh;Lakq;Lqn;)Lpw;	a	lambda$new$0
		p	2		testFunction
	m	(Ljava/util/Collection;)Ljava/util/Map;	a	createStructuresForBatch
		p	1		gameTests
	m	(Ljava/util/Map;Lpw;)V	a	lambda$runBatch$3
		p	2		gameTest
	m	()V	b	start
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lgw;	b	firstTestNorthWestCorner
	f	Lakq;	c	level
	f	Lqc;	d	testTicker
	f	I	e	testsPerRow
	f	Ljava/util/List;	f	allTestInfos
	f	Ljava/util/List;	g	batches
	f	I	h	count
	f	Lehi;	i	rowBounds
	f	Lgw$a;	j	nextTestNorthWestCorner
c	ps$1	net/minecraft/gametest/framework/GameTestBatchRunner$1
	m	()V	a	testCompleted
	m	(Lpw;)V	a	testStructureLoaded
		p	1		test
	m	(Lpw;)V	b	testPassed
		p	1		test
	m	(Lpw;)V	c	testFailed
		p	1		test
	f	Lqh;	a	val$currentBatchTracker
	f	Lpr;	b	val$currentBatch
	f	I	c	val$batchIndex
	f	Lps;	d	this$0
c	pt	net/minecraft/gametest/framework/GameTestEvent
	m	(Ljava/lang/Long;Ljava/lang/Runnable;)V	<init>	<init>
		p	1		duration
		p	2		task
	m	(JLjava/lang/Runnable;)Lpt;	a	create
		p	0		duration
		p	2		task
	m	(Ljava/lang/Runnable;)Lpt;	a	create
		p	0		task
	f	Ljava/lang/Long;	a	expectedDelay
	f	Ljava/lang/Runnable;	b	assertion
c	pu	net/minecraft/gametest/framework/GameTestGenerator
c	pv	net/minecraft/gametest/framework/GameTestHelper
	m	(Lpw;)V	<init>	<init>
		p	1		test
	m	()Lakq;	a	getLevel
	m	(I)V	a	setDayTime
		p	1		timeOfDay
	m	(III)V	a	pressButton
		p	1		x
		p	2		y
		p	3		z
	m	(IIILcsv;)V	a	setBlock
		p	1		x
		p	2		y
		p	3		z
		p	4		block
	m	(IIILdfj;)V	a	setBlock
		p	1		x
		p	2		y
		p	3		z
		p	4		state
	m	(ILjava/lang/Runnable;)V	a	succeedOnTickWhen
		p	1		duration
		p	2		runnable
	m	(JLgw;)V	a	assertAtTickTimeContainerEmpty
		p	1		delay
		p	3		pos
	m	(JLgw;Lcja;)V	a	assertAtTickTimeContainerContains
		p	1		delay
		p	3		pos
		p	4		item
	m	(JLjava/lang/Runnable;)V	a	runAtTickTime
		p	1		tick
		p	3		runnable
	m	(Lbiq;)Z	a	lambda$killAllEntitiesOfClass$0
		p	0		entity
	m	(Lbiq;III)V	a	assertEntityInstancePresent
		p	1		entity
		p	2		x
		p	3		y
		p	4		z
	m	(Lbiq;Lbiq;)Z	a	lambda$assertEntityInstancePresent$12
		p	1		e
	m	(Lbiq;Lgw;)V	a	assertEntityInstancePresent
		p	1		entity
		p	2		pos
	m	(Lbiq;Lgw;Lgw;)Lpq;	a	lambda$assertEntityInstancePresent$13
	m	(Lbiq;Ljava/util/function/Function;Ljava/lang/String;Ljava/lang/Object;)V	a	assertEntityProperty
		p	1		entity
		p	2		propertyGetter
		p	3		propertyName
		p	4		expectedValue
	m	(Lbiq;Ljava/util/function/Predicate;Ljava/lang/String;)V	a	assertEntityProperty
		p	1		entity
		p	2		predicate
		p	3		testName
	m	(Lbiu;)V	a	assertEntityPresent
		p	1		type
	m	(Lbiu;DDD)V	a	assertEntityTouching
		p	1		type
		p	2		x
		p	4		y
		p	6		z
	m	(Lbiu;FFF)Lbiq;	a	spawn
		p	1		type
		p	2		x
		p	3		y
		p	4		z
	m	(Lbiu;III)Lbiq;	a	spawn
		p	1		type
		p	2		x
		p	3		y
		p	4		z
	m	(Lbiu;Lehn;)Lbiq;	a	spawn
		p	1		type
		p	2		pos
	m	(Lbiu;Lehn;Lehn;)V	a	assertEntityPresent
		p	1		type
		p	2		pos1
		p	3		pos2
	m	(Lbiu;Lgw;)Lbiq;	a	spawn
		p	1		type
		p	2		pos
	m	(Lbiu;Lgw;D)V	a	assertEntityPresent
		p	1		type
		p	2		pos
		p	3		radius
	m	(Lbiu;Lgw;ID)V	a	assertEntitiesPresent
		p	1		type
		p	2		pos
		p	3		amount
		p	4		radius
	m	(Lbjg;)Lbjg;	a	makeAboutToDrown
		p	1		entity
	m	(Lbjg;Lbib;I)V	a	assertLivingEntityHasMobEffect
		p	1		entity
		p	2		effect
		p	3		amplifier
	m	(Lbji;Lgw;F)Lqa;	a	walkTo
		p	1		entity
		p	2		pos
		p	3		speed
	m	(Lcbu;Lcjf;Lgw;Lha;)V	a	placeAt
		p	1		player
		p	2		stack
		p	3		pos
		p	4		direction
	m	(Lcja;FFF)Lbyn;	a	spawnItem
		p	1		item
		p	2		x
		p	3		y
		p	4		z
	m	(Lcja;Lcjf;)Z	a	lambda$assertEntityInventoryContains$17
		p	1		stack
	m	(Lcja;Lgw;)Lbyn;	a	spawnItem
		p	1		item
		p	2		pos
	m	(Lcja;Lgw;D)V	a	assertItemEntityPresent
		p	1		item
		p	2		pos
		p	3		radius
	m	(Lcja;Lgw;DI)V	a	assertItemEntityCountIs
		p	1		item
		p	2		pos
		p	3		radius
		p	5		amount
	m	(Lcsv;III)V	a	assertBlockPresent
		p	1		block
		p	2		x
		p	3		y
		p	4		z
	m	(Lcsv;Lgw;)V	a	assertBlockPresent
		p	1		block
		p	2		pos
	m	(Ldfj;)Z	a	lambda$pressButton$2
		p	0		state
	m	(Ldfj;Lcsv;Lcsv;)Z	a	lambda$assertBlockPresent$5
		p	2		block1
	m	(Ldgm;Ljava/util/function/Predicate;Ldfj;)Z	a	lambda$assertBlockProperty$10
		p	2		state
	m	(Ldks$a;II)I	a	getHeight
		p	1		heightmap
		p	2		x
		p	3		z
	m	(Ldva;Lgw;)V	a	assertSameBlockStates
		p	1		checkedBlockBox
		p	2		correctStatePos
	m	(Lehn;)Lehn;	a	absoluteVec
		p	1		pos
	m	(Lehn;Lbiq;)Z	a	lambda$assertEntityNotTouching$15
		p	1		entity
	m	(Lgw;)Ldfj;	a	getBlockState
		p	1		pos
	m	(Lgw;J)V	a	pulseRedstone
		p	1		pos
		p	2		delay
	m	(Lgw;Lbiu;Lcja;)V	a	assertEntityIsHolding
		p	1		pos
		p	2		entityType
		p	3		item
	m	(Lgw;Lbiu;Ljava/util/function/Function;Ljava/lang/Object;)V	a	assertEntityData
		p	1		pos
		p	2		type
		p	3		entityDataGetter
		p	4		data
	m	(Lgw;Lcbu;)V	a	useBlock
		p	1		pos
		p	2		player
	m	(Lgw;Lcbu;Lehj;)V	a	useBlock
		p	1		pos
		p	2		player
		p	3		result
	m	(Lgw;Lcja;)V	a	assertContainerContains
		p	1		pos
		p	2		item
	m	(Lgw;Lcsv;)V	a	setBlock
		p	1		pos
		p	2		block
	m	(Lgw;Lcsv;Lcsv;)Z	a	lambda$assertBlockNotPresent$6
		p	3		block1
	m	(Lgw;Ldfj;)V	a	setBlock
		p	1		pos
		p	2		state
	m	(Lgw;Ldgm;Ljava/lang/Comparable;)V	a	assertBlockProperty
		p	1		pos
		p	2		property
		p	3		value
	m	(Lgw;Ldgm;Ljava/util/function/Predicate;Ljava/lang/String;)V	a	assertBlockProperty
		p	1		pos
		p	2		property
		p	3		predicate
		p	4		errorMessage
	m	(Lgw;Ldva;Lgw;)V	a	lambda$assertSameBlockStates$18
		p	3		checkedPos
	m	(Lgw;Lgw;)V	a	assertSameBlockState
		p	1		checkedPos
		p	2		correctStatePos
	m	(Lgw;Lha;Ljava/util/function/IntPredicate;Ljava/util/function/Supplier;)V	a	assertRedstoneSignal
		p	1		pos
		p	2		direction
		p	3		powerPredicate
		p	4		errorMessage
	m	(Lgw;Ljava/util/function/Predicate;Ljava/lang/String;)V	a	assertBlock
		p	1		pos
		p	2		predicate
		p	3		errorMessage
	m	(Lgw;Ljava/util/function/Predicate;Ljava/util/function/Supplier;)V	a	assertBlock
		p	1		pos
		p	2		predicate
		p	3		errorMessageSupplier
	m	(Ljava/lang/Class;)V	a	killAllEntitiesOfClass
		p	1		entityClass
	m	(Ljava/lang/Object;)Z	a	lambda$assertEntityInventoryContains$16
		p	0		entity
	m	(Ljava/lang/Runnable;)V	a	succeedIf
		p	1		runnable
	m	(Ljava/lang/Runnable;J)V	a	lambda$onEachTick$26
		p	2		tick
	m	(Ljava/lang/String;)V	a	fail
		p	1		message
	m	(Ljava/lang/String;Lbiq;)V	a	fail
		p	1		message
		p	2		entity
	m	(Ljava/lang/String;Lgw;)V	a	fail
		p	1		message
		p	2		pos
	m	(Ljava/util/function/Consumer;)V	a	forEveryBlockInStructure
		p	1		posConsumer
	m	(Ljava/util/function/Predicate;Ldfj;)Z	a	lambda$assertBlock$9
		p	1		state
	m	(ZLjava/lang/String;)V	a	assertTrue
		p	1		condition
		p	2		message
	m	()V	b	killAllEntities
	m	(III)V	b	pullLever
		p	1		x
		p	2		y
		p	3		z
	m	(JLjava/lang/Runnable;)V	b	runAfterDelay
		p	1		ticks
		p	3		runnable
	m	(Lbiu;)V	b	assertEntityNotPresent
		p	1		type
	m	(Lbiu;DDD)V	b	assertEntityNotTouching
		p	1		type
		p	2		x
		p	4		y
		p	6		z
	m	(Lbiu;FFF)Lbji;	b	spawnWithNoFreeWill
		p	1		type
		p	2		x
		p	3		y
		p	4		z
	m	(Lbiu;III)Lbji;	b	spawnWithNoFreeWill
		p	1		type
		p	2		x
		p	3		y
		p	4		z
	m	(Lbiu;Lehn;)Lbji;	b	spawnWithNoFreeWill
		p	1		type
		p	2		pos
	m	(Lbiu;Lgw;)Lbji;	b	spawnWithNoFreeWill
		p	1		type
		p	2		pos
	m	(Lbiu;Lgw;D)Ljava/util/List;	b	getEntities
		p	1		type
		p	2		pos
		p	3		radius
	m	(Lbjg;)Lbjg;	b	withLowHealth
		p	1		entity
	m	(Lbji;Lgw;F)V	b	lambda$walkTo$1
	m	(Lcja;Lgw;D)V	b	assertItemEntityNotPresent
		p	1		item
		p	2		pos
		p	3		radius
	m	(Lcsv;III)V	b	assertBlockNotPresent
		p	1		block
		p	2		x
		p	3		y
		p	4		z
	m	(Lcsv;Lgw;)V	b	assertBlockNotPresent
		p	1		block
		p	2		pos
	m	(Lehn;)Lehn;	b	relativeVec
		p	1		pos
	m	(Lehn;Lbiq;)Z	b	lambda$assertEntityTouching$14
		p	1		entity
	m	(Lgw;)Ldcv;	b	getBlockEntity
		p	1		pos
	m	(Lgw;Lbiu;Lcja;)V	b	assertEntityInventoryContains
		p	1		pos
		p	2		entityType
		p	3		item
	m	(Lgw;Lbiu;Ljava/util/function/Function;Ljava/lang/Object;)V	b	succeedWhenEntityData
		p	1		pos
		p	2		type
		p	3		entityDataGetter
		p	4		data
	m	(Lgw;Lcja;)V	b	lambda$assertAtTickTimeContainerContains$19
	m	(Lgw;Ljava/util/function/Predicate;Ljava/util/function/Supplier;)V	b	assertBlockState
		p	1		pos
		p	2		predicate
		p	3		errorMessageSupplier
	m	(Ljava/lang/Runnable;)V	b	succeedWhen
		p	1		runnable
	m	(Ljava/lang/Runnable;J)V	b	lambda$failIfEver$25
		p	2		tick
	m	(Ljava/lang/String;)Ljava/lang/String;	b	lambda$assertBlockProperty$11
	m	(ZLjava/lang/String;)V	b	assertFalse
		p	1		condition
		p	2		message
	m	()Lcbu;	c	makeMockSurvivalPlayer
	m	(Lbiu;III)V	c	assertEntityPresent
		p	1		type
		p	2		x
		p	3		y
		p	4		z
	m	(Lbiu;Lgw;)V	c	assertEntityPresent
		p	1		type
		p	2		pos
	m	(Lcsv;III)V	c	succeedWhenBlockPresent
		p	1		block
		p	2		x
		p	3		y
		p	4		z
	m	(Lcsv;Lgw;)V	c	succeedWhenBlockPresent
		p	1		block
		p	2		pos
	m	(Lgw;)V	c	pressButton
		p	1		pos
	m	(Lgw;Lbiu;Ljava/util/function/Function;Ljava/lang/Object;)V	c	lambda$succeedWhenEntityData$21
	m	(Ljava/lang/Runnable;)V	c	failIf
		p	1		task
	m	(Ljava/lang/String;)Ljava/lang/String;	c	lambda$assertBlock$8
	m	()Lcbu;	d	makeMockPlayer
	m	(Lbiu;III)V	d	assertEntityNotPresent
		p	1		type
		p	2		x
		p	3		y
		p	4		z
	m	(Lbiu;Lgw;)V	d	assertEntityNotPresent
		p	1		type
		p	2		pos
	m	(Lcsv;Lgw;)V	d	lambda$succeedWhenBlockPresent$7
	m	(Lgw;)V	d	useBlock
		p	1		pos
	m	(Ljava/lang/Runnable;)V	d	failIfEver
		p	1		task
	m	()Lakr;	e	makeMockServerPlayerInLevel
	m	(Lbiu;III)V	e	succeedWhenEntityPresent
		p	1		type
		p	2		x
		p	3		y
		p	4		z
	m	(Lbiu;Lgw;)V	e	succeedWhenEntityPresent
		p	1		type
		p	2		pos
	m	(Lgw;)V	e	pullLever
		p	1		pos
	m	(Ljava/lang/Runnable;)V	e	onEachTick
		p	1		runnable
	m	()V	f	setNight
	m	(Lbiu;III)V	f	succeedWhenEntityNotPresent
		p	1		type
		p	2		x
		p	3		y
		p	4		z
	m	(Lbiu;Lgw;)V	f	succeedWhenEntityNotPresent
		p	1		type
		p	2		pos
	m	(Lgw;)V	f	destroyBlock
		p	1		pos
	m	()V	g	succeed
	m	(Lbiu;Lgw;)V	g	lambda$succeedWhenEntityNotPresent$23
	m	(Lgw;)V	g	assertContainerEmpty
		p	1		pos
	m	()Lqa;	h	startSequence
	m	(Lbiu;Lgw;)V	h	lambda$succeedWhenEntityPresent$22
	m	(Lgw;)V	h	randomTick
		p	1		pos
	m	()J	i	getTick
	m	(Lgw;)Lgw;	i	absolutePos
		p	1		pos
	m	()V	j	ensureSingleFinalCheck
	m	(Lgw;)Lgw;	j	relativePos
		p	1		pos
	m	()Lehi;	k	getBounds
	m	(Lgw;)V	k	lambda$assertAtTickTimeContainerEmpty$20
	m	()Lehi;	l	getRelativeBounds
	m	(Lgw;)V	l	lambda$pulseRedstone$4
	m	()Ljava/lang/Exception;	m	lambda$failIf$24
	m	()Ljava/lang/String;	n	lambda$pressButton$3
	f	Lpw;	a	testInfo
	f	Z	b	finalCheckAdded
c	pv$1	net/minecraft/gametest/framework/GameTestHelper$1
	m	(Lpv;Lcpv;Lgw;FLcom/mojang/authlib/GameProfile;)V	<init>	<init>
		p	2		world
		p	3		pos
		p	4		yaw
		p	5		gameProfile
	m	()Z	M_	isSpectator
	m	()Z	f	isCreative
	f	Lpv;	b	this$0
c	pv$2	net/minecraft/gametest/framework/GameTestHelper$2
	m	(Lpv;Lcpv;Lgw;FLcom/mojang/authlib/GameProfile;)V	<init>	<init>
		p	2		world
		p	3		pos
		p	4		yaw
		p	5		gameProfile
	m	()Z	M_	isSpectator
	m	()Z	f	isCreative
	m	()Z	g	isLocalPlayer
	f	Lpv;	b	this$0
c	pv$3	net/minecraft/gametest/framework/GameTestHelper$3
	m	(Lpv;Lnet/minecraft/server/MinecraftServer;Lakq;Lcom/mojang/authlib/GameProfile;Lakf;)V	<init>	<init>
		p	2		server
		p	3		world
		p	4		profile
		p	5		clientOptions
	m	()Z	M_	isSpectator
	m	()Z	f	isCreative
	f	Lpv;	b	this$0
c	pw	net/minecraft/gametest/framework/GameTestInfo
	m	(Lqn;Lczh;Lakq;)V	<init>	<init>
		p	1		testFunction
		p	2		rotation
		p	3		world
	m	()V	A	tickInternal
	m	()V	B	startTest
	m	()Ldei;	C	getStructureBlockEntity
	m	()V	D	finish
	m	()V	a	startExecution
	m	(JLjava/lang/Runnable;)V	a	setRunAtTickTime
		p	1		tick
		p	3		runnable
	m	(Lgw;)V	a	setStructureBlockPos
		p	1		pos
	m	(Lgw;I)V	a	spawnStructure
		p	1		pos
	m	(Ljava/lang/Throwable;)V	a	fail
		p	1		throwable
	m	(Lpx;)V	a	addListener
		p	1		listener
	m	(Lqa;)V	a	lambda$tickInternal$3
		p	1		runner
	m	()V	b	tick
	m	(Lpx;)V	b	lambda$spawnStructure$4
		p	1		listener
	m	(Lqa;)V	b	lambda$tickInternal$2
		p	1		runner
	m	()Ljava/lang/String;	c	getTestName
	m	(Lpx;)V	c	lambda$tick$1
		p	1		listener
	m	()Lgw;	d	getStructureBlockPos
	m	(Lpx;)V	d	lambda$tick$0
		p	1		listener
	m	()Lhy;	e	getStructureSize
	m	()Lehi;	f	getStructureBounds
	m	()Lakq;	g	getLevel
	m	()Z	h	hasSucceeded
	m	()Z	i	hasFailed
	m	()Z	j	hasStarted
	m	()Z	k	isDone
	m	()J	l	getRunTime
	m	()V	m	succeed
	m	()Ljava/lang/Throwable;	n	getError
	m	()V	o	clearStructure
	m	()J	p	getTick
	m	()Lqa;	q	createSequence
	m	()Z	r	isRequired
	m	()Z	s	isOptional
	m	()Ljava/lang/String;	t	getStructureName
	m	()Lczh;	u	getRotation
	m	()Lqn;	v	getTestFunction
	m	()I	w	getTimeoutTicks
	m	()Z	x	isFlaky
	m	()I	y	maxAttempts
	m	()I	z	requiredSuccesses
	f	Lqn;	a	testFunction
	f	Lgw;	b	structureBlockPos
	f	Lakq;	c	level
	f	Ljava/util/Collection;	d	listeners
	f	I	e	timeoutTicks
	f	Ljava/util/Collection;	f	sequences
	f	Lit/unimi/dsi/fastutil/objects/Object2LongMap;	g	runAtTickTimeMap
	f	J	h	startTick
	f	J	i	tickCount
	f	Z	j	started
	f	Lcom/google/common/base/Stopwatch;	k	timer
	f	Z	l	done
	f	Lczh;	m	rotation
	f	Ljava/lang/Throwable;	n	error
	f	Ldei;	o	structureBlockEntity
c	px	net/minecraft/gametest/framework/GameTestListener
	m	(Lpw;)V	a	testStructureLoaded
		p	1		test
	m	(Lpw;)V	b	testPassed
		p	1		test
	m	(Lpw;)V	c	testFailed
		p	1		test
c	py	net/minecraft/gametest/framework/GameTestRegistry
	m	()Ljava/util/Collection;	a	getAllTestFunctions
	m	(Ljava/lang/Class;)V	a	register
		p	0		testClass
	m	(Ljava/lang/String;)Ljava/util/Collection;	a	getTestFunctionsForClassName
		p	0		testClass
	m	(Ljava/lang/String;Lqn;)Z	a	lambda$findTestFunction$1
		p	1		testFunction
	m	(Ljava/lang/reflect/Method;)V	a	register
		p	0		method
	m	(Ljava/lang/reflect/Method;Ljava/lang/Class;Ljava/util/function/Function;Ljava/util/Map;)V	a	registerBatchFunction
		p	0		method
		p	1		clazz
		p	2		batchIdFunction
		p	3		batchConsumerMap
	m	(Ljava/lang/reflect/Method;Ljava/lang/Object;)V	a	lambda$turnMethodIntoConsumer$2
		p	1		args
	m	(Lqn;)V	a	rememberFailedTest
		p	0		testFunction
	m	(Lqn;Ljava/lang/String;)Z	a	isTestFunctionPartOfClass
		p	0		testFunction
		p	1		testClass
	m	()Ljava/util/Collection;	b	getAllTestClassNames
	m	(Ljava/lang/String;)Z	b	isTestClass
		p	0		testClass
	m	(Ljava/lang/String;Lqn;)Z	b	lambda$getTestFunctionsForClassName$0
		p	1		testFunction
	m	(Ljava/lang/reflect/Method;)Ljava/util/Collection;	b	useTestGeneratorMethod
		p	0		method
	m	()Ljava/util/Collection;	c	getLastFailedTests
	m	(Ljava/lang/String;)Ljava/util/function/Consumer;	c	getBeforeBatchFunction
		p	0		batchId
	m	(Ljava/lang/reflect/Method;)Lqn;	c	turnMethodIntoTestFunction
		p	0		method
	m	()V	d	forgetFailedTests
	m	(Ljava/lang/String;)Ljava/util/function/Consumer;	d	getAfterBatchFunction
		p	0		batchId
	m	(Ljava/lang/reflect/Method;)Ljava/util/function/Consumer;	d	turnMethodIntoConsumer
		p	0		method
	m	(Ljava/lang/String;)Ljava/util/Optional;	e	findTestFunction
		p	0		structurePath
	m	(Ljava/lang/String;)Lqn;	f	getTestFunction
		p	0		structurePath
	f	Ljava/util/Collection;	a	TEST_FUNCTIONS
	f	Ljava/util/Set;	b	TEST_CLASS_NAMES
	f	Ljava/util/Map;	c	BEFORE_BATCH_FUNCTIONS
	f	Ljava/util/Map;	d	AFTER_BATCH_FUNCTIONS
	f	Ljava/util/Collection;	e	LAST_FAILED_TESTS
c	pz	net/minecraft/gametest/framework/GameTestRunner
	m	(Lakq;)V	a	clearMarkers
		p	0		world
	m	(Lakq;Lgw;)V	a	lambda$clearAllTests$3
		p	1		posx
	m	(Lakq;Lgw;Lqc;I)V	a	clearAllTests
		p	0		world
		p	1		pos
		p	2		testManager
		p	3		radius
	m	(Ljava/lang/String;Lorg/apache/commons/lang3/mutable/MutableInt;Ljava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/util/List;)Lpr;	a	lambda$groupTestsIntoBatches$0
		p	4		testFunctionsx
	m	(Ljava/util/Collection;)Ljava/util/Collection;	a	groupTestsIntoBatches
		p	0		testFunctions
	m	(Ljava/util/Collection;Lgw;Lczh;Lakq;Lqc;I)Ljava/util/Collection;	a	runTestBatches
		p	0		batches
		p	1		pos
		p	2		rotation
		p	3		world
		p	4		testManager
		p	5		sizeZ
	m	(Ljava/util/Map$Entry;)Ljava/util/stream/Stream;	a	lambda$groupTestsIntoBatches$1
		p	0		entry
	m	(Lpw;Lgw;Lqc;)V	a	runTest
		p	0		test
		p	1		pos
		p	2		testManager
	m	(Lakq;Lgw;)Z	b	lambda$clearAllTests$2
		p	1		posx
	m	(Ljava/util/Collection;Lgw;Lczh;Lakq;Lqc;I)Ljava/util/Collection;	b	runTests
		p	0		testFunctions
		p	1		pos
		p	2		rotation
		p	3		world
		p	4		testManager
		p	5		sizeZ
	f	I	a	PADDING_AROUND_EACH_STRUCTURE
	f	I	b	SPACE_BETWEEN_COLUMNS
	f	I	c	SPACE_BETWEEN_ROWS
	f	I	d	DEFAULT_TESTS_PER_ROW
	f	I	e	MAX_TESTS_PER_BATCH
c	qa	net/minecraft/gametest/framework/GameTestSequence
	m	(Lpw;)V	<init>	<init>
		p	1		gameTest
	m	()V	a	thenSucceed
	m	(I)Lqa;	a	thenIdle
		p	1		minDuration
	m	(ILjava/lang/Runnable;)Lqa;	a	thenExecuteAfter
		p	1		minDuration
		p	2		task
	m	(J)V	a	tickAndContinue
		p	1		tick
	m	(JLjava/lang/Runnable;)Lqa;	a	thenWaitUntil
		p	1		duration
		p	3		task
	m	(Ljava/lang/Runnable;)Lqa;	a	thenWaitUntil
		p	1		task
	m	(Ljava/util/function/Supplier;)V	a	thenFail
		p	1		exceptionSupplier
	m	(Lqa$a;)V	a	lambda$thenTrigger$5
	m	()Lqa$a;	b	thenTrigger
	m	(ILjava/lang/Runnable;)Lqa;	b	thenExecuteFor
		p	1		minDuration
		p	2		task
	m	(J)V	b	tickAndFailIfNotComplete
		p	1		tick
	m	(Ljava/lang/Runnable;)Lqa;	b	thenExecute
		p	1		task
	m	(Ljava/util/function/Supplier;)V	b	lambda$thenFail$4
	m	()V	c	lambda$thenIdle$0
	m	(ILjava/lang/Runnable;)V	c	lambda$thenExecuteFor$3
	m	(J)V	c	tick
		p	1		tick
	m	(Ljava/lang/Runnable;)V	c	executeWithoutFail
		p	1		task
	m	(ILjava/lang/Runnable;)V	d	lambda$thenExecuteAfter$2
	m	(Ljava/lang/Runnable;)V	d	lambda$thenExecute$1
	f	Lpw;	a	parent
	f	Ljava/util/List;	b	events
	f	J	c	lastTick
c	qa$a	net/minecraft/gametest/framework/GameTestSequence$Condition
	m	()V	a	assertTriggeredThisTick
	m	(J)V	a	trigger
		p	1		tick
	f	Lqa;	a	this$0
	f	J	b	NOT_TRIGGERED
	f	J	c	triggerTime
c	qb	net/minecraft/gametest/framework/GameTestServer
	m	(Ljava/lang/Thread;Lecg$c;Lane;Lafr;Ljava/util/Collection;Lgw;)V	<init>	<init>
		p	1		serverThread
		p	2		session
		p	3		dataPackManager
		p	4		saveLoader
		p	5		batches
		p	6		pos
	m	()Z	T_	shouldInformAdmins
	m	(Lab;)Lab;	a	fillServerSystemReport
		p	1		details
	m	(Lafq$c;Lcpz;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	lambda$create$2
	m	(Lcom/mojang/authlib/GameProfile;)Z	a	isSingleplayerOwner
		p	1		profile
	m	(Lcpr;)V	a	lambda$static$0
		p	0		gameRules
	m	(Lcpz;Lafq$a;)Lafq$b;	a	lambda$create$1
	m	(Ljava/lang/Thread;Lecg$c;Lane;Ljava/util/Collection;Lgw;)Lqb;	a	create
		p	0		thread
		p	1		session
		p	2		resourcePackManager
		p	3		batches
		p	4		pos
	m	(Ljava/util/function/BooleanSupplier;)V	a	tickServer
		p	1		shouldKeepTicking
	m	(Lo;)V	a	onServerCrash
		p	1		report
	m	(Lpw;)V	a	lambda$tickServer$4
		p	0		test
	m	(Lakq;)V	b	startTests
		p	1		world
	m	(Lpw;)V	b	lambda$tickServer$3
		p	0		test
	m	()Z	bf	haveTestsStarted
	m	()Z	e	initServer
	m	()V	g	onServerExit
	m	()Z	h	isHardcore
	m	()I	i	getOperatorUserPermissionLevel
	m	()I	j	getFunctionCompilationLevel
	m	()Z	k	shouldRconBroadcast
	m	()Z	l	isDedicatedServer
	m	()I	m	getRateLimitPacketsPerSecond
	m	()Z	n	isEpollEnabled
	m	()Z	o	isCommandBlockEnabled
	m	()Z	p	isPublished
	m	()V	u_	waitUntilNextTick
	f	Lorg/slf4j/Logger;	n	LOGGER
	f	I	o	PROGRESS_REPORT_INTERVAL
	f	Lafo;	p	NO_SERVICES
	f	Ljava/util/List;	q	testBatches
	f	Lgw;	r	spawnPos
	f	Lcpr;	s	TEST_GAME_RULES
	f	Ldlq;	t	WORLD_OPTIONS
	f	Lqh;	u	testTracker
c	qb$1	net/minecraft/gametest/framework/GameTestServer$1
	m	(Lqb;Lnet/minecraft/server/MinecraftServer;Lhl;Lecj;I)V	<init>	<init>
		p	2		server
		p	3		registryManager
		p	4		saveHandler
		p	5		maxPlayers
	f	Lqb;	a	this$0
c	qc	net/minecraft/gametest/framework/GameTestTicker
	m	()V	a	clear
	m	(Lpw;)V	a	add
		p	1		test
	m	()V	b	tick
	f	Lqc;	a	SINGLETON
	f	Ljava/util/Collection;	b	testInfos
c	qd	net/minecraft/gametest/framework/GameTestTimeoutException
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		message
c	qe	net/minecraft/gametest/framework/GlobalTestReporter
	m	()V	a	finish
	m	(Lpw;)V	a	onTestFailed
		p	0		test
	m	(Lqp;)V	a	replaceWith
		p	0		listener
	m	(Lpw;)V	b	onTestSuccess
		p	0		test
	f	Lqp;	a	DELEGATE
c	qf	net/minecraft/gametest/framework/JUnitLikeTestReporter
	m	(Ljava/io/File;)V	<init>	<init>
		p	1		file
	m	()V	a	finish
	m	(Ljava/io/File;)V	a	save
		p	1		file
	m	(Lpw;)V	a	onTestFailed
		p	1		test
	m	(Lpw;Ljava/lang/String;)Lorg/w3c/dom/Element;	a	createTestCase
		p	1		test
		p	2		name
	m	(Lpw;)V	b	onTestSuccess
		p	1		test
	f	Lorg/w3c/dom/Document;	a	document
	f	Lorg/w3c/dom/Element;	b	testSuite
	f	Lcom/google/common/base/Stopwatch;	c	stopwatch
	f	Ljava/io/File;	d	destination
c	qg	net/minecraft/gametest/framework/LogTestReporter
	m	(Lpw;)V	a	onTestFailed
		p	1		test
	m	(Lpw;)V	b	onTestSuccess
		p	1		test
	f	Lorg/slf4j/Logger;	a	LOGGER
c	qh	net/minecraft/gametest/framework/MultipleTestTracker
	m	(Ljava/util/Collection;)V	<init>	<init>
		p	1		tests
	m	()I	a	getFailedRequiredCount
	m	(Ljava/lang/StringBuffer;Lpw;)V	a	lambda$getProgressBar$1
		p	1		test
	m	(Ljava/util/function/Consumer;)V	a	addFailureListener
		p	1		onFailed
	m	(Lpw;)V	a	addTestToTrack
		p	1		test
	m	(Lpx;)V	a	addListener
		p	1		listener
	m	(Lpx;Lpw;)V	a	lambda$addListener$0
		p	1		test
	m	()I	b	getFailedOptionalCount
	m	()I	c	getDoneCount
	m	()Z	d	hasFailedRequired
	m	()Z	e	hasFailedOptional
	m	()Ljava/util/Collection;	f	getFailedRequired
	m	()Ljava/util/Collection;	g	getFailedOptional
	m	()I	h	getTotalCount
	m	()Z	i	isDone
	m	()Ljava/lang/String;	j	getProgressBar
	f	C	a	NOT_STARTED_TEST_CHAR
	f	C	b	ONGOING_TEST_CHAR
	f	C	c	SUCCESSFUL_TEST_CHAR
	f	C	d	FAILED_OPTIONAL_TEST_CHAR
	f	C	e	FAILED_REQUIRED_TEST_CHAR
	f	Ljava/util/Collection;	f	tests
	f	Ljava/util/Collection;	g	listeners
c	qh$1	net/minecraft/gametest/framework/MultipleTestTracker$1
	m	(Lpw;)V	a	testStructureLoaded
		p	1		test
	m	(Lpw;)V	b	testPassed
		p	1		test
	m	(Lpw;)V	c	testFailed
		p	1		test
	f	Ljava/util/function/Consumer;	a	val$listener
	f	Lqh;	b	this$0
c	qi	net/minecraft/gametest/framework/ReportGameListener
	m	(Lpw;Lqc;Lgw;)V	<init>	<init>
		p	1		test
		p	2		testManager
		p	3		pos
	m	()V	a	rerunTest
	m	(Lakq;Lgw;Ljava/lang/String;)V	a	showRedBox
		p	0		world
		p	1		pos
		p	2		message
	m	(Lakq;Ln;Ljava/lang/String;)V	a	say
		p	0		world
		p	1		formatting
		p	2		message
	m	(Lakr;)Z	a	lambda$say$1
		p	0		player
	m	(Ljava/lang/String;Ln;Lakr;)V	a	lambda$say$2
		p	2		player
	m	(Ljava/lang/String;ZLjava/lang/String;)Lcjf;	a	createBook
		p	0		text
		p	1		required
		p	2		output
	m	(Ljava/lang/StringBuffer;Ljava/lang/String;)V	a	lambda$createBook$0
		p	1		line
	m	(Lpw;)V	a	testStructureLoaded
		p	1		test
	m	(Lpw;Lcsv;)V	a	spawnBeacon
		p	0		test
		p	1		block
	m	(Lpw;Ljava/lang/String;)V	a	reportPassed
		p	0		test
		p	1		output
	m	(Lpw;Ljava/lang/Throwable;)V	a	reportFailure
		p	0		test
		p	1		output
	m	(Lpw;)V	b	testPassed
		p	1		test
	m	(Lpw;Ljava/lang/String;)V	b	visualizePassedTest
		p	0		test
		p	1		output
	m	(Lpw;Ljava/lang/Throwable;)V	b	visualizeFailedTest
		p	0		test
		p	1		output
	m	(Lpw;)V	c	testFailed
		p	1		test
	m	(Lpw;Ljava/lang/String;)V	c	spawnLectern
		p	0		test
		p	1		output
	f	I	a	attempts
	f	I	b	successes
	f	Lpw;	c	originalTestInfo
	f	Lqc;	d	testTicker
	f	Lgw;	e	structurePos
c	qj	net/minecraft/gametest/framework/StructureUtils
	m	(I)Lczh;	a	getRotationForRotationSteps
		p	0		steps
	m	(ILakq;Lgw;)V	a	lambda$clearSpaceForStructure$0
		p	2		pos
	m	(ILgw;Lakq;)V	a	clearBlock
		p	0		altitude
		p	1		pos
		p	2		world
	m	(Lbiq;)Z	a	lambda$clearSpaceForStructure$1
		p	0		entity
	m	(Lczh;)I	a	getRotationStepsForRotation
		p	0		rotation
	m	(Ldei;)Lehi;	a	getStructureBounds
		p	0		structureBlockEntity
	m	(Ldva;ILakq;)V	a	clearSpaceForStructure
		p	0		area
		p	1		altitude
		p	2		world
	m	(Lgw;ILakq;)Ljava/util/Optional;	a	findStructureBlockContainingPos
		p	0		pos
		p	1		radius
		p	2		world
	m	(Lgw;Lakq;)V	a	forceLoadChunks
		p	0		pos
		p	1		world
	m	(Lgw;Lakq;Lgw;)Z	a	lambda$findStructureBlockContainingPos$2
		p	2		structureBlockPos
	m	(Lgw;Lgw;)I	a	lambda$findNearestStructureBlock$3
		p	1		posx
	m	(Lgw;Lgw;Lakq;)Z	a	doesStructureContain
		p	0		structureBlockPos
		p	1		pos
		p	2		world
	m	(Lgw;Lgw;Lczh;Lakq;)V	a	addCommandBlockAndButtonToStartTest
		p	0		pos
		p	1		relativePos
		p	2		rotation
		p	3		world
	m	(Lgw;Lhy;Lczh;)Ldva;	a	getStructureBoundingBox
		p	0		pos
		p	1		relativePos
		p	2		rotation
	m	(Ljava/lang/String;Lakq;)Ldzb;	a	getStructureTemplate
		p	0		templateId
		p	1		world
	m	(Ljava/lang/String;Lgw;Lczh;ILakq;Z)Ldei;	a	spawnStructure
		p	0		templateName
		p	1		pos
		p	2		rotation
		p	4		world
		p	5		interactive
	m	(Ljava/lang/String;Lgw;Lczh;Lakq;Z)Ldei;	a	createStructureBlock
		p	0		name
		p	1		pos
		p	2		rotation
		p	3		world
	m	(Ljava/lang/String;Lgw;Lhy;Lczh;Lakq;)V	a	createNewEmptyStructureBlock
		p	0		testName
		p	1		pos
		p	2		relativePos
		p	3		rotation
		p	4		world
	m	(Ljava/nio/file/Path;)Lqw;	a	tryLoadStructure
		p	0		path
	m	(Ldei;)Ldva;	b	getStructureBoundingBox
		p	0		structureBlockEntity
	m	(Lgw;ILakq;)Lgw;	b	findNearestStructureBlock
		p	0		pos
		p	1		radius
		p	2		world
	m	(Lgw;ILakq;)Ljava/util/Collection;	c	findStructureBlocks
		p	0		pos
		p	1		radius
		p	2		world
	f	Ljava/lang/String;	a	DEFAULT_TEST_STRUCTURES_DIR
	f	Ljava/lang/String;	b	testStructuresDir
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	I	d	HOW_MANY_CHUNKS_TO_LOAD_IN_EACH_DIRECTION_OF_STRUCTURE
c	qj$1	net/minecraft/gametest/framework/StructureUtils$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$Rotation
c	qk	net/minecraft/gametest/framework/TeamcityTestReporter
	m	(Lpw;)V	a	onTestFailed
		p	1		test
	m	(Lpw;)V	b	onTestSuccess
		p	1		test
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lcom/google/common/escape/Escaper;	b	ESCAPER
c	ql	net/minecraft/gametest/framework/TestClassNameArgument
	m	()Lql;	a	testClassName
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/String;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/lang/String;	a	getTestClassName
		p	0		context
		p	1		name
	f	Ljava/util/Collection;	a	EXAMPLES
c	qm	net/minecraft/gametest/framework/TestCommand
	m	(Lakq;Lgw;Lqh;)V	a	runTest
		p	0		world
		p	1		pos
		p	2		tests
	m	(Lakq;Ljava/lang/String;Ln;)V	a	say
		p	0		world
		p	1		message
		p	2		formatting
	m	(Lakq;Lqh;)V	a	showTestSummaryIfAllDone
		p	0		world
		p	1		tests
	m	(Lakq;Lqh;Lgw;)V	a	lambda$runAllNearbyTests$26
		p	2		pos
	m	(Lakr;)Z	a	lambda$say$29
		p	0		player
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$24
		p	0		context
	m	(Ldt;)I	a	runNearbyTest
		p	0		source
	m	(Ldt;I)I	a	clearAllTests
		p	0		source
		p	1		radius
	m	(Ldt;II)I	a	runAllTests
		p	0		source
		p	1		rotationSteps
		p	2		sizeZ
	m	(Ldt;Ljava/lang/String;)I	a	showPos
		p	0		source
		p	1		variableName
	m	(Ldt;Ljava/lang/String;II)I	a	runAllTestsInClass
		p	0		source
		p	1		testClass
		p	2		rotationSteps
		p	3		sizeZ
	m	(Ldt;Ljava/lang/String;III)I	a	createNewStructure
		p	0		source
		p	1		testName
		p	2		x
		p	3		y
		p	4		z
	m	(Ldt;Ljava/util/Collection;II)V	a	runTests
		p	0		source
		p	1		testFunctions
		p	2		rotationSteps
	m	(Ldt;Lqn;I)I	a	runTest
		p	0		source
		p	1		testFunction
		p	2		rotationSteps
	m	(Ldt;ZII)I	a	runLastFailedTests
		p	0		source
		p	1		requiredOnly
		p	2		rotationSteps
		p	3		sizeZ
	m	(Ljava/lang/String;)Ltl;	a	lambda$say$28
	m	(Ljava/lang/String;Ltl;)Ltl;	a	lambda$showPos$25
	m	(Ln;Ljava/lang/String;Lakr;)V	a	lambda$say$30
		p	2		player
	m	(Lpw;)V	a	lambda$runTests$27
		p	0		test
	m	(Lqn;Lakq;)V	a	runTestPreparation
		p	0		testFunction
		p	1		world
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$23
		p	0		context
	m	(Ldt;)I	b	runAllNearbyTests
		p	0		source
	m	(Ldt;Ljava/lang/String;)V	b	say
		p	0		source
		p	1		message
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$22
		p	0		context
	m	(Ldt;)I	c	exportNearestTestStructure
		p	0		source
	m	(Ldt;Ljava/lang/String;)I	c	exportTestStructure
		p	0		source
		p	1		testName
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$21
		p	0		context
	m	(Ldt;)I	d	exportAllNearbyTests
		p	0		source
	m	(Ldt;Ljava/lang/String;)I	d	importTestStructure
		p	0		source
		p	1		testName
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$20
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$19
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$18
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	h	lambda$register$17
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	i	lambda$register$16
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	j	lambda$register$15
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	k	lambda$register$14
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	l	lambda$register$13
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	m	lambda$register$12
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	n	lambda$register$11
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	o	lambda$register$10
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	p	lambda$register$9
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	q	lambda$register$8
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	r	lambda$register$7
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	s	lambda$register$6
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	t	lambda$register$5
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	u	lambda$register$4
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	v	lambda$register$3
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	w	lambda$register$2
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	x	lambda$register$1
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	y	lambda$register$0
		p	0		context
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	I	b	DEFAULT_CLEAR_RADIUS
	f	I	c	MAX_CLEAR_RADIUS
	f	I	d	STRUCTURE_BLOCK_NEARBY_SEARCH_RADIUS
	f	I	e	STRUCTURE_BLOCK_FULL_SEARCH_RADIUS
	f	I	f	TEST_POS_Z_OFFSET_FROM_PLAYER
	f	I	g	SHOW_POS_DURATION_MS
	f	I	h	DEFAULT_X_SIZE
	f	I	i	DEFAULT_Y_SIZE
	f	I	j	DEFAULT_Z_SIZE
c	qm$a	net/minecraft/gametest/framework/TestCommand$TestSummaryDisplayer
	m	(Lakq;Lqh;)V	<init>	<init>
		p	1		world
		p	2		tests
	m	(Lpw;)V	a	testStructureLoaded
		p	1		test
	m	(Lpw;)V	b	testPassed
		p	1		test
	m	(Lpw;)V	c	testFailed
		p	1		test
	f	Lakq;	a	level
	f	Lqh;	b	tracker
c	qn	net/minecraft/gametest/framework/TestFunction
	m	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;IJZLjava/util/function/Consumer;)V	<init>	<init>
		p	1		batchId
		p	2		templatePath
		p	3		templateName
		p	4		tickLimit
		p	5		duration
		p	7		required
		p	8		starter
	m	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lczh;IJZIILjava/util/function/Consumer;)V	<init>	<init>
		p	1		batchId
		p	2		templatePath
		p	3		templateName
		p	4		rotation
		p	5		tickLimit
		p	6		duration
		p	8		required
		p	9		requiredSuccesses
		p	10		maxAttempts
		p	11		starter
	m	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lczh;IJZLjava/util/function/Consumer;)V	<init>	<init>
		p	1		batchId
		p	2		templatePath
		p	3		templateName
		p	4		rotation
		p	5		tickLimit
		p	6		duration
		p	8		required
		p	9		starter
	m	()Ljava/lang/String;	a	getTestName
	m	(Lpv;)V	a	run
		p	1		context
	m	()Ljava/lang/String;	b	getStructureName
	m	()I	c	getMaxTicks
	m	()Z	d	isRequired
	m	()Ljava/lang/String;	e	getBatchName
	m	()J	f	getSetupTicks
	m	()Lczh;	g	getRotation
	m	()Z	h	isFlaky
	m	()I	i	getMaxAttempts
	m	()I	j	getRequiredSuccesses
	f	Ljava/lang/String;	a	batchName
	f	Ljava/lang/String;	b	testName
	f	Ljava/lang/String;	c	structureName
	f	Z	d	required
	f	I	e	maxAttempts
	f	I	f	requiredSuccesses
	f	Ljava/util/function/Consumer;	g	function
	f	I	h	maxTicks
	f	J	i	setupTicks
	f	Lczh;	j	rotation
c	qo	net/minecraft/gametest/framework/TestFunctionArgument
	m	()Lqo;	a	testFunctionArgument
	m	(Lcom/mojang/brigadier/StringReader;)Lqn;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lqn;	a	getTestFunction
		p	0		context
		p	1		name
	f	Ljava/util/Collection;	a	EXAMPLES
c	qp	net/minecraft/gametest/framework/TestReporter
	m	()V	a	finish
	m	(Lpw;)V	a	onTestFailed
		p	1		test
	m	(Lpw;)V	b	onTestSuccess
		p	1		test
c	qq	net/minecraft/gametest/framework/package-info
c	qr	net/minecraft/locale/Language
	m	()Lqr;	a	getInstance
	m	(Ljava/io/InputStream;Ljava/util/function/BiConsumer;)V	a	loadFromJson
		p	0		inputStream
		p	1		entryConsumer
	m	(Ljava/lang/String;)Ljava/lang/String;	a	getOrDefault
		p	1		key
	m	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	a	getOrDefault
		p	1		key
		p	2		fallback
	m	(Ljava/util/List;)Ljava/util/List;	a	getVisualOrder
		p	1		texts
	m	(Ljava/util/function/BiConsumer;Ljava/lang/String;)V	a	parseTranslations
		p	0		entryConsumer
		p	1		path
	m	(Lqr;)V	a	inject
		p	0		language
	m	(Ltp;)Larj;	a	getVisualOrder
		p	1		text
	m	()Z	b	isDefaultRightToLeft
	m	(Ljava/lang/String;)Z	b	has
		p	1		key
	m	()Lqr;	c	loadDefault
	f	Ljava/lang/String;	a	DEFAULT
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Lcom/google/gson/Gson;	c	GSON
	f	Ljava/util/regex/Pattern;	d	UNSUPPORTED_FORMAT_PATTERN
	f	Lqr;	e	instance
c	qr$1	net/minecraft/locale/Language$1
	m	(Lark;Luh;Ljava/lang/String;)Ljava/util/Optional;	a	lambda$getVisualOrder$0
		p	1		style
		p	2		string
	m	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	a	getOrDefault
		p	1		key
		p	2		fallback
	m	(Ltp;)Larj;	a	getVisualOrder
		p	1		text
	m	(Ltp;Lark;)Z	a	lambda$getVisualOrder$1
		p	1		visitor
	m	()Z	b	isDefaultRightToLeft
	m	(Ljava/lang/String;)Z	b	has
		p	1		key
	f	Ljava/util/Map;	b	val$storage
c	qs	net/minecraft/locale/package-info
c	qt	net/minecraft/nbt/ByteArrayTag
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		value
	m	([B)V	<init>	<init>
		p	1		value
	m	()I	a	sizeInBytes
	m	(I)Lqu;	a	get
	m	(ILqu;)Lqu;	a	set
	m	(ILrq;)Z	a	setTag
		p	1		index
		p	2		element
	m	(Ljava/io/DataOutput;)V	a	write
		p	1		output
	m	(Ljava/util/List;)[B	a	toArray
		p	0		list
	m	(Lrn;)Lrn$b;	a	accept
		p	1		visitor
	m	(Lru;)V	a	accept
		p	1		visitor
	m	()B	b	getId
	m	(I)Lqu;	b	remove
	m	(ILqu;)V	b	add
	m	(ILrq;)Z	b	addTag
		p	1		index
		p	2		element
	m	()Lrs;	c	getType
	m	(I)Lrq;	c	remove
	m	(ILrq;)V	c	add
	m	()Lrq;	d	copy
	m	(ILrq;)Lrq;	d	set
	m	()[B	e	getAsByteArray
	m	()B	f	getElementType
	f	Lrs;	a	TYPE
	f	I	b	SELF_SIZE_IN_BYTES
	f	[B	c	data
c	qt$1	net/minecraft/nbt/ByteArrayTag$1
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/io/DataInput;Lrf;)Lqt;	a	load
	m	(Ljava/io/DataInput;Lrn;Lrf;)Lrn$b;	a	parse
		p	1		input
		p	2		visitor
		p	3		tracker
	m	()Ljava/lang/String;	b	getPrettyName
	m	(Ljava/io/DataInput;Lrf;)V	b	skip
		p	1		input
		p	2		tracker
	m	(Ljava/io/DataInput;Lrf;)Lrq;	c	load
		p	1		input
		p	2		tracker
	m	(Ljava/io/DataInput;Lrf;)[B	d	readAccounted
		p	0		input
		p	1		tracker
c	qu	net/minecraft/nbt/ByteTag
	m	(B)V	<init>	<init>
		p	1		value
	m	()I	a	sizeInBytes
	m	(B)Lqu;	a	valueOf
		p	0		value
	m	(Ljava/io/DataOutput;)V	a	write
		p	1		output
	m	(Lrn;)Lrn$b;	a	accept
		p	1		visitor
	m	(Lru;)V	a	accept
		p	1		visitor
	m	(Z)Lqu;	a	valueOf
		p	0		value
	m	()B	b	getId
	m	()Lrs;	c	getType
	m	()Lrq;	d	copy
	m	()Lqu;	e	copy
	m	()J	f	getAsLong
	m	()I	g	getAsInt
	m	()S	h	getAsShort
	m	()B	i	getAsByte
	m	()D	j	getAsDouble
	m	()F	k	getAsFloat
	m	()Ljava/lang/Number;	l	getAsNumber
	f	Lrs;	a	TYPE
	f	Lqu;	b	ZERO
	f	Lqu;	c	ONE
	f	I	w	SELF_SIZE_IN_BYTES
	f	B	x	data
c	qu$1	net/minecraft/nbt/ByteTag$1
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/io/DataInput;Lrf;)Lqu;	a	load
	m	(Ljava/io/DataInput;Lrn;Lrf;)Lrn$b;	a	parse
		p	1		input
		p	2		visitor
		p	3		tracker
	m	()Ljava/lang/String;	b	getPrettyName
	m	()I	c	size
	m	(Ljava/io/DataInput;Lrf;)Lrq;	c	load
		p	1		input
		p	2		tracker
	m	()Z	d	isValue
	m	(Ljava/io/DataInput;Lrf;)B	d	readAccounted
		p	0		input
		p	1		tracker
c	qu$a	net/minecraft/nbt/ByteTag$Cache
	f	[Lqu;	a	cache
c	qv	net/minecraft/nbt/CollectionTag
	m	(ILrq;)Z	a	setTag
		p	1		index
		p	2		element
	m	(ILrq;)Z	b	addTag
		p	1		index
		p	2		element
	m	(I)Lrq;	c	remove
	m	(ILrq;)V	c	add
	m	(ILrq;)Lrq;	d	set
	m	()B	f	getElementType
c	qw	net/minecraft/nbt/CompoundTag
	m	(Ljava/util/Map;)V	<init>	<init>
		p	1		entries
	m	()I	a	sizeInBytes
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/DataResult;	a	lambda$static$1
		p	0		dynamic
	m	(Ljava/io/DataOutput;)V	a	write
		p	1		output
	m	(Ljava/lang/String;)Ljava/util/UUID;	a	getUUID
		p	1		key
	m	(Ljava/lang/String;B)V	a	putByte
		p	1		key
		p	2		value
	m	(Ljava/lang/String;D)V	a	putDouble
		p	1		key
		p	2		value
	m	(Ljava/lang/String;F)V	a	putFloat
		p	1		key
		p	2		value
	m	(Ljava/lang/String;I)V	a	putInt
		p	1		key
		p	2		value
	m	(Ljava/lang/String;J)V	a	putLong
		p	1		key
		p	2		value
	m	(Ljava/lang/String;Ljava/lang/String;)V	a	putString
		p	1		key
		p	2		value
	m	(Ljava/lang/String;Ljava/util/List;)V	a	putByteArray
		p	1		key
		p	2		value
	m	(Ljava/lang/String;Ljava/util/UUID;)V	a	putUUID
		p	1		key
		p	2		value
	m	(Ljava/lang/String;Lrq;)Lrq;	a	put
		p	1		key
		p	2		element
	m	(Ljava/lang/String;Lrq;Ljava/io/DataOutput;)V	a	writeNamedTag
		p	0		key
		p	1		element
		p	2		output
	m	(Ljava/lang/String;Lrs;Ljava/lang/ClassCastException;)Lo;	a	createReport
		p	1		key
		p	2		reader
		p	3		exception
	m	(Ljava/lang/String;S)V	a	putShort
		p	1		key
		p	2		value
	m	(Ljava/lang/String;Z)V	a	putBoolean
		p	1		key
		p	2		value
	m	(Ljava/lang/String;[B)V	a	putByteArray
		p	1		key
		p	2		value
	m	(Ljava/lang/String;[I)V	a	putIntArray
		p	1		key
		p	2		value
	m	(Ljava/lang/String;[J)V	a	putLongArray
		p	1		key
		p	2		value
	m	(Lqw;)Lqw;	a	merge
		p	1		source
	m	(Lrn;)Lrn$b;	a	accept
		p	1		visitor
	m	(Lrq;)Ljava/lang/String;	a	lambda$static$0
	m	(Lrs;Ljava/lang/String;Ljava/io/DataInput;Lrf;)Lrq;	a	readNamedTagData
		p	0		reader
		p	1		key
		p	2		input
	m	(Lru;)V	a	accept
		p	1		visitor
	m	()B	b	getId
	m	(Ljava/lang/String;)Z	b	hasUUID
		p	1		key
	m	(Ljava/lang/String;I)Z	b	contains
		p	1		key
		p	2		type
	m	(Ljava/lang/String;Ljava/util/List;)V	b	putIntArray
		p	1		key
		p	2		value
	m	(Lqw;)Lcom/mojang/serialization/Dynamic;	b	lambda$static$2
		p	0		nbt
	m	()Lrs;	c	getType
	m	(Ljava/lang/String;)Lrq;	c	get
		p	1		key
	m	(Ljava/lang/String;I)Lrc;	c	getList
		p	1		key
		p	2		type
	m	(Ljava/lang/String;Ljava/util/List;)V	c	putLongArray
		p	1		key
		p	2		value
	m	()Lrq;	d	copy
	m	(Ljava/lang/String;)B	d	getTagType
		p	1		key
	m	()Ljava/util/Set;	e	getAllKeys
	m	(Ljava/lang/String;)Z	e	contains
		p	1		key
	m	()I	f	size
	m	(Ljava/lang/String;)B	f	getByte
		p	1		key
	m	()Z	g	isEmpty
	m	(Ljava/lang/String;)S	g	getShort
		p	1		key
	m	()Lqw;	h	copy
	m	(Ljava/lang/String;)I	h	getInt
		p	1		key
	m	()Ljava/util/Map;	i	entries
	m	(Ljava/lang/String;)J	i	getLong
		p	1		key
	m	(Ljava/lang/String;)F	j	getFloat
		p	1		key
	m	(Ljava/lang/String;)D	k	getDouble
		p	1		key
	m	(Ljava/lang/String;)Ljava/lang/String;	l	getString
		p	1		key
	m	(Ljava/lang/String;)[B	m	getByteArray
		p	1		key
	m	(Ljava/lang/String;)[I	n	getIntArray
		p	1		key
	m	(Ljava/lang/String;)[J	o	getLongArray
		p	1		key
	m	(Ljava/lang/String;)Lqw;	p	getCompound
		p	1		key
	m	(Ljava/lang/String;)Z	q	getBoolean
		p	1		key
	m	(Ljava/lang/String;)V	r	remove
		p	1		key
	m	(Ljava/lang/String;)Ljava/lang/String;	s	lambda$createReport$3
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lrs;	b	TYPE
	f	I	c	SELF_SIZE_IN_BYTES
	f	I	w	MAP_ENTRY_SIZE_IN_BYTES
	f	Ljava/util/Map;	x	tags
c	qw$1	net/minecraft/nbt/CompoundTag$1
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/io/DataInput;Lrf;)Lqw;	a	load
	m	(Ljava/io/DataInput;Lrn;Lrf;)Lrn$b;	a	parse
		p	1		input
		p	2		visitor
		p	3		tracker
	m	()Ljava/lang/String;	b	getPrettyName
	m	(Ljava/io/DataInput;Lrf;)V	b	skip
		p	1		input
		p	2		tracker
	m	(Ljava/io/DataInput;Lrf;)Lrq;	c	load
		p	1		input
		p	2		tracker
	m	(Ljava/io/DataInput;Lrn;Lrf;)Lrn$b;	c	parseCompound
		p	0		input
		p	1		visitor
		p	2		tracker
	m	(Ljava/io/DataInput;Lrf;)Lqw;	d	loadCompound
		p	0		input
		p	1		tracker
	m	(Ljava/io/DataInput;Lrf;)Ljava/lang/String;	e	readString
		p	0		input
		p	1		tracker
c	qw$2	net/minecraft/nbt/CompoundTag$2
	f	[I	a	$SwitchMap$net$minecraft$nbt$StreamTagVisitor$EntryResult
	f	[I	b	$SwitchMap$net$minecraft$nbt$StreamTagVisitor$ValueResult
c	qx	net/minecraft/nbt/DoubleTag
	m	(D)V	<init>	<init>
		p	1		value
	m	()I	a	sizeInBytes
	m	(D)Lqx;	a	valueOf
		p	0		value
	m	(Ljava/io/DataOutput;)V	a	write
		p	1		output
	m	(Lrn;)Lrn$b;	a	accept
		p	1		visitor
	m	(Lru;)V	a	accept
		p	1		visitor
	m	()B	b	getId
	m	()Lrs;	c	getType
	m	()Lrq;	d	copy
	m	()Lqx;	e	copy
	m	()J	f	getAsLong
	m	()I	g	getAsInt
	m	()S	h	getAsShort
	m	()B	i	getAsByte
	m	()D	j	getAsDouble
	m	()F	k	getAsFloat
	m	()Ljava/lang/Number;	l	getAsNumber
	f	Lqx;	a	ZERO
	f	Lrs;	b	TYPE
	f	I	c	SELF_SIZE_IN_BYTES
	f	D	w	data
c	qx$1	net/minecraft/nbt/DoubleTag$1
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/io/DataInput;Lrf;)Lqx;	a	load
	m	(Ljava/io/DataInput;Lrn;Lrf;)Lrn$b;	a	parse
		p	1		input
		p	2		visitor
		p	3		tracker
	m	()Ljava/lang/String;	b	getPrettyName
	m	()I	c	size
	m	(Ljava/io/DataInput;Lrf;)Lrq;	c	load
		p	1		input
		p	2		tracker
	m	()Z	d	isValue
	m	(Ljava/io/DataInput;Lrf;)D	d	readAccounted
		p	0		input
		p	1		tracker
c	qy	net/minecraft/nbt/EndTag
	m	()I	a	sizeInBytes
	m	(Ljava/io/DataOutput;)V	a	write
		p	1		output
	m	(Lrn;)Lrn$b;	a	accept
		p	1		visitor
	m	(Lru;)V	a	accept
		p	1		visitor
	m	()B	b	getId
	m	()Lrs;	c	getType
	m	()Lrq;	d	copy
	m	()Lqy;	e	copy
	f	Lrs;	a	TYPE
	f	Lqy;	b	INSTANCE
	f	I	c	SELF_SIZE_IN_BYTES
c	qy$1	net/minecraft/nbt/EndTag$1
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/io/DataInput;ILrf;)V	a	skip
		p	1		input
		p	2		count
		p	3		tracker
	m	(Ljava/io/DataInput;Lrf;)Lqy;	a	load
	m	(Ljava/io/DataInput;Lrn;Lrf;)Lrn$b;	a	parse
		p	1		input
		p	2		visitor
		p	3		tracker
	m	()Ljava/lang/String;	b	getPrettyName
	m	(Ljava/io/DataInput;Lrf;)V	b	skip
		p	1		input
		p	2		tracker
	m	(Ljava/io/DataInput;Lrf;)Lrq;	c	load
		p	1		input
		p	2		tracker
	m	()Z	d	isValue
c	qz	net/minecraft/nbt/FloatTag
	m	(F)V	<init>	<init>
		p	1		value
	m	()I	a	sizeInBytes
	m	(F)Lqz;	a	valueOf
		p	0		value
	m	(Ljava/io/DataOutput;)V	a	write
		p	1		output
	m	(Lrn;)Lrn$b;	a	accept
		p	1		visitor
	m	(Lru;)V	a	accept
		p	1		visitor
	m	()B	b	getId
	m	()Lrs;	c	getType
	m	()Lrq;	d	copy
	m	()Lqz;	e	copy
	m	()J	f	getAsLong
	m	()I	g	getAsInt
	m	()S	h	getAsShort
	m	()B	i	getAsByte
	m	()D	j	getAsDouble
	m	()F	k	getAsFloat
	m	()Ljava/lang/Number;	l	getAsNumber
	f	Lqz;	a	ZERO
	f	Lrs;	b	TYPE
	f	I	c	SELF_SIZE_IN_BYTES
	f	F	w	data
c	qz$1	net/minecraft/nbt/FloatTag$1
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/io/DataInput;Lrf;)Lqz;	a	load
	m	(Ljava/io/DataInput;Lrn;Lrf;)Lrn$b;	a	parse
		p	1		input
		p	2		visitor
		p	3		tracker
	m	()Ljava/lang/String;	b	getPrettyName
	m	()I	c	size
	m	(Ljava/io/DataInput;Lrf;)Lrq;	c	load
		p	1		input
		p	2		tracker
	m	()Z	d	isValue
	m	(Ljava/io/DataInput;Lrf;)F	d	readAccounted
		p	0		input
		p	1		tracker
c	ra	net/minecraft/nbt/IntArrayTag
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		value
	m	([I)V	<init>	<init>
		p	1		value
	m	()I	a	sizeInBytes
	m	(I)Lrb;	a	get
	m	(ILrb;)Lrb;	a	set
	m	(ILrq;)Z	a	setTag
		p	1		index
		p	2		element
	m	(Ljava/io/DataOutput;)V	a	write
		p	1		output
	m	(Ljava/util/List;)[I	a	toArray
		p	0		list
	m	(Lrn;)Lrn$b;	a	accept
		p	1		visitor
	m	(Lru;)V	a	accept
		p	1		visitor
	m	()B	b	getId
	m	(I)Lrb;	b	remove
	m	(ILrb;)V	b	add
	m	(ILrq;)Z	b	addTag
		p	1		index
		p	2		element
	m	()Lrs;	c	getType
	m	(I)Lrq;	c	remove
	m	(ILrq;)V	c	add
	m	()Lrq;	d	copy
	m	(ILrq;)Lrq;	d	set
	m	()Lra;	e	copy
	m	()B	f	getElementType
	m	()[I	g	getAsIntArray
	f	Lrs;	a	TYPE
	f	I	b	SELF_SIZE_IN_BYTES
	f	[I	c	data
c	ra$1	net/minecraft/nbt/IntArrayTag$1
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/io/DataInput;Lrf;)Lra;	a	load
	m	(Ljava/io/DataInput;Lrn;Lrf;)Lrn$b;	a	parse
		p	1		input
		p	2		visitor
		p	3		tracker
	m	()Ljava/lang/String;	b	getPrettyName
	m	(Ljava/io/DataInput;Lrf;)V	b	skip
		p	1		input
		p	2		tracker
	m	(Ljava/io/DataInput;Lrf;)Lrq;	c	load
		p	1		input
		p	2		tracker
	m	(Ljava/io/DataInput;Lrf;)[I	d	readAccounted
		p	0		input
		p	1		tracker
c	rb	net/minecraft/nbt/IntTag
	m	(I)V	<init>	<init>
		p	1		value
	m	()I	a	sizeInBytes
	m	(I)Lrb;	a	valueOf
		p	0		value
	m	(Ljava/io/DataOutput;)V	a	write
		p	1		output
	m	(Lrn;)Lrn$b;	a	accept
		p	1		visitor
	m	(Lru;)V	a	accept
		p	1		visitor
	m	()B	b	getId
	m	()Lrs;	c	getType
	m	()Lrq;	d	copy
	m	()Lrb;	e	copy
	m	()J	f	getAsLong
	m	()I	g	getAsInt
	m	()S	h	getAsShort
	m	()B	i	getAsByte
	m	()D	j	getAsDouble
	m	()F	k	getAsFloat
	m	()Ljava/lang/Number;	l	getAsNumber
	f	Lrs;	a	TYPE
	f	I	b	SELF_SIZE_IN_BYTES
	f	I	c	data
c	rb$1	net/minecraft/nbt/IntTag$1
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/io/DataInput;Lrf;)Lrb;	a	load
	m	(Ljava/io/DataInput;Lrn;Lrf;)Lrn$b;	a	parse
		p	1		input
		p	2		visitor
		p	3		tracker
	m	()Ljava/lang/String;	b	getPrettyName
	m	()I	c	size
	m	(Ljava/io/DataInput;Lrf;)Lrq;	c	load
		p	1		input
		p	2		tracker
	m	()Z	d	isValue
	m	(Ljava/io/DataInput;Lrf;)I	d	readAccounted
		p	0		input
		p	1		tracker
c	rb$a	net/minecraft/nbt/IntTag$Cache
	f	[Lrb;	a	cache
	f	I	b	HIGH
	f	I	c	LOW
c	rc	net/minecraft/nbt/ListTag
	m	(Ljava/util/List;B)V	<init>	<init>
		p	1		list
		p	2		type
	m	()I	a	sizeInBytes
	m	(I)Lqw;	a	getCompound
		p	1		index
	m	(ILrq;)Z	a	setTag
		p	1		index
		p	2		element
	m	(Ljava/io/DataOutput;)V	a	write
		p	1		output
	m	(Lrn;)Lrn$b;	a	accept
		p	1		visitor
	m	(Lrq;)Z	a	updateType
		p	1		element
	m	(Lru;)V	a	accept
		p	1		visitor
	m	()B	b	getId
	m	(I)Lrc;	b	getList
		p	1		index
	m	(ILrq;)Z	b	addTag
		p	1		index
		p	2		element
	m	()Lrs;	c	getType
	m	(I)Lrq;	c	remove
	m	(ILrq;)V	c	add
	m	()Lrq;	d	copy
	m	(I)S	d	getShort
		p	1		index
	m	(ILrq;)Lrq;	d	set
	m	()Lrc;	e	copy
	m	(I)I	e	getInt
		p	1		index
	m	()B	f	getElementType
	m	(I)[I	f	getIntArray
		p	1		index
	m	()V	g	updateTypeAfterRemove
	m	(I)[J	g	getLongArray
		p	1		index
	m	(I)D	h	getDouble
		p	1		index
	m	(I)F	i	getFloat
		p	1		index
	m	(I)Ljava/lang/String;	j	getString
		p	1		index
	m	(I)Lrq;	k	get
	f	Lrs;	a	TYPE
	f	I	b	SELF_SIZE_IN_BYTES
	f	Ljava/util/List;	c	list
	f	B	w	type
c	rc$1	net/minecraft/nbt/ListTag$1
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/io/DataInput;Lrf;)Lrc;	a	load
	m	(Ljava/io/DataInput;Lrn;Lrf;)Lrn$b;	a	parse
		p	1		input
		p	2		visitor
		p	3		tracker
	m	()Ljava/lang/String;	b	getPrettyName
	m	(Ljava/io/DataInput;Lrf;)V	b	skip
		p	1		input
		p	2		tracker
	m	(Ljava/io/DataInput;Lrf;)Lrq;	c	load
		p	1		input
		p	2		tracker
	m	(Ljava/io/DataInput;Lrn;Lrf;)Lrn$b;	c	parseList
		p	0		input
		p	1		visitor
		p	2		tracker
	m	(Ljava/io/DataInput;Lrf;)Lrc;	d	loadList
		p	0		input
		p	1		tracker
c	rc$2	net/minecraft/nbt/ListTag$2
	f	[I	a	$SwitchMap$net$minecraft$nbt$StreamTagVisitor$ValueResult
	f	[I	b	$SwitchMap$net$minecraft$nbt$StreamTagVisitor$EntryResult
c	rd	net/minecraft/nbt/LongArrayTag
	m	(Lit/unimi/dsi/fastutil/longs/LongSet;)V	<init>	<init>
		p	1		value
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		value
	m	([J)V	<init>	<init>
		p	1		value
	m	()I	a	sizeInBytes
	m	(I)Lre;	a	get
	m	(ILre;)Lre;	a	set
	m	(ILrq;)Z	a	setTag
		p	1		index
		p	2		element
	m	(Ljava/io/DataOutput;)V	a	write
		p	1		output
	m	(Ljava/util/List;)[J	a	toArray
		p	0		list
	m	(Lrn;)Lrn$b;	a	accept
		p	1		visitor
	m	(Lru;)V	a	accept
		p	1		visitor
	m	()B	b	getId
	m	(I)Lre;	b	remove
	m	(ILre;)V	b	add
	m	(ILrq;)Z	b	addTag
		p	1		index
		p	2		element
	m	()Lrs;	c	getType
	m	(I)Lrq;	c	remove
	m	(ILrq;)V	c	add
	m	()Lrq;	d	copy
	m	(ILrq;)Lrq;	d	set
	m	()Lrd;	e	copy
	m	()B	f	getElementType
	m	()[J	g	getAsLongArray
	f	Lrs;	a	TYPE
	f	I	b	SELF_SIZE_IN_BYTES
	f	[J	c	data
c	rd$1	net/minecraft/nbt/LongArrayTag$1
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/io/DataInput;Lrf;)Lrd;	a	load
	m	(Ljava/io/DataInput;Lrn;Lrf;)Lrn$b;	a	parse
		p	1		input
		p	2		visitor
		p	3		tracker
	m	()Ljava/lang/String;	b	getPrettyName
	m	(Ljava/io/DataInput;Lrf;)V	b	skip
		p	1		input
		p	2		tracker
	m	(Ljava/io/DataInput;Lrf;)Lrq;	c	load
		p	1		input
		p	2		tracker
	m	(Ljava/io/DataInput;Lrf;)[J	d	readAccounted
		p	0		input
		p	1		tracker
c	re	net/minecraft/nbt/LongTag
	m	(J)V	<init>	<init>
		p	1		value
	m	()I	a	sizeInBytes
	m	(J)Lre;	a	valueOf
		p	0		value
	m	(Ljava/io/DataOutput;)V	a	write
		p	1		output
	m	(Lrn;)Lrn$b;	a	accept
		p	1		visitor
	m	(Lru;)V	a	accept
		p	1		visitor
	m	()B	b	getId
	m	()Lrs;	c	getType
	m	()Lrq;	d	copy
	m	()Lre;	e	copy
	m	()J	f	getAsLong
	m	()I	g	getAsInt
	m	()S	h	getAsShort
	m	()B	i	getAsByte
	m	()D	j	getAsDouble
	m	()F	k	getAsFloat
	m	()Ljava/lang/Number;	l	getAsNumber
	f	Lrs;	a	TYPE
	f	I	b	SELF_SIZE_IN_BYTES
	f	J	c	data
c	re$1	net/minecraft/nbt/LongTag$1
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/io/DataInput;Lrf;)Lre;	a	load
	m	(Ljava/io/DataInput;Lrn;Lrf;)Lrn$b;	a	parse
		p	1		input
		p	2		visitor
		p	3		tracker
	m	()Ljava/lang/String;	b	getPrettyName
	m	()I	c	size
	m	(Ljava/io/DataInput;Lrf;)Lrq;	c	load
		p	1		input
		p	2		tracker
	m	()Z	d	isValue
	m	(Ljava/io/DataInput;Lrf;)J	d	readAccounted
		p	0		input
		p	1		tracker
c	re$a	net/minecraft/nbt/LongTag$Cache
	f	[Lre;	a	cache
	f	I	b	HIGH
	f	I	c	LOW
c	rf	net/minecraft/nbt/NbtAccounter
	m	(JI)V	<init>	<init>
		p	1		maxBytes
		p	3		maxDepth
	m	()Lrf;	a	unlimitedHeap
	m	(J)Lrf;	a	create
		p	0		maxBytes
	m	(JJ)V	a	accountBytes
		p	1		multiplier
		p	3		bytes
	m	()V	b	pushDepth
	m	(J)V	b	accountBytes
		p	1		bytes
	m	()V	c	popDepth
	m	()J	d	getUsage
	m	()I	e	getDepth
	f	I	a	MAX_STACK_DEPTH
	f	J	b	quota
	f	J	c	usage
	f	I	d	maxDepth
	f	I	e	depth
c	rg	net/minecraft/nbt/NbtAccounterException
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		message
c	rh	net/minecraft/nbt/NbtIo
	m	(Ljava/io/DataInput;)Lqw;	a	read
		p	0		input
	m	(Ljava/io/DataInput;Lrf;)Lqw;	a	read
		p	0		input
		p	1		tracker
	m	(Ljava/io/DataInput;Lrf;B)Lrq;	a	readTagSafe
		p	0		input
		p	1		tracker
		p	2		typeId
	m	(Ljava/io/DataInput;Lrn;Lrf;)V	a	parse
		p	0		input
		p	1		scanner
		p	2		tracker
	m	(Ljava/io/File;)Lqw;	a	readCompressed
		p	0		file
	m	(Ljava/io/File;Lrn;Lrf;)V	a	parseCompressed
		p	0		file
		p	1		scanner
		p	2		tracker
	m	(Ljava/io/InputStream;)Lqw;	a	readCompressed
		p	0		stream
	m	(Ljava/io/InputStream;Lrn;Lrf;)V	a	parseCompressed
		p	0		stream
		p	1		scanner
		p	2		tracker
	m	(Lqw;Ljava/io/DataOutput;)V	a	write
		p	0		nbt
		p	1		output
	m	(Lqw;Ljava/io/File;)V	a	writeCompressed
		p	0		nbt
		p	1		file
	m	(Lqw;Ljava/io/OutputStream;)V	a	writeCompressed
		p	0		nbt
		p	1		stream
	m	(Lrq;Ljava/io/DataOutput;)V	a	writeAnyTag
		p	0		nbt
		p	1		output
	m	(Ljava/io/DataInput;Lrf;)Lrq;	b	readAnyTag
		p	0		input
		p	1		tracker
	m	(Ljava/io/File;)Lqw;	b	read
		p	0		file
	m	(Ljava/io/InputStream;)Ljava/io/DataInputStream;	b	createDecompressorStream
		p	0		stream
	m	(Lqw;Ljava/io/File;)V	b	write
		p	0		nbt
		p	1		file
	m	(Lrq;Ljava/io/DataOutput;)V	b	writeUnnamedTag
		p	0		nbt
		p	1		output
	m	(Ljava/io/DataInput;Lrf;)Lrq;	c	readUnnamedTag
		p	0		input
		p	1		tracker
c	rh$1	net/minecraft/nbt/NbtIo$1
	f	[I	a	$SwitchMap$net$minecraft$nbt$StreamTagVisitor$ValueResult
c	ri	net/minecraft/nbt/NbtOps
	m	()Lrq;	a	empty
	m	(B)Lrq;	a	createByte
	m	(D)Lrq;	a	createDouble
	m	(F)Lrq;	a	createFloat
	m	(I)Lrq;	a	createInt
	m	(J)Lrq;	a	createLong
	m	(Lcom/mojang/serialization/DynamicOps;Lrq;)Ljava/lang/Object;	a	convertTo
	m	(Ljava/lang/Number;)Lrq;	a	createNumeric
	m	(Ljava/lang/String;)Lrq;	a	createString
	m	(Ljava/lang/String;Ljava/lang/String;)Z	a	lambda$remove$28
		p	1		k
	m	(Ljava/nio/ByteBuffer;)Lrq;	a	createByteList
	m	(Ljava/util/List;)Ljava/lang/String;	a	lambda$mergeToMap$14
	m	(Ljava/util/List;Lqw;Lcom/mojang/datafixers/util/Pair;)V	a	lambda$mergeToMap$13
		p	0		entry
		p	2		pair
	m	(Ljava/util/List;Lri$f;)Lcom/mojang/serialization/DataResult;	a	lambda$mergeToList$5
		p	1		merger
	m	(Ljava/util/function/BiConsumer;Lqw;Ljava/lang/String;)V	a	lambda$getMapEntries$17
		p	3		key
	m	(Ljava/util/function/Consumer;Lrq;)V	a	lambda$getList$25
		p	1		nbt
	m	(Ljava/util/stream/IntStream;)Lrq;	a	createIntList
	m	(Ljava/util/stream/LongStream;)Lrq;	a	createLongList
	m	(Ljava/util/stream/Stream;)Lrq;	a	createMap
	m	(Lqw;)Lrq;	a	tryUnwrap
		p	0		nbt
	m	(Lqw;Lcom/mojang/datafixers/util/Pair;)V	a	lambda$createMap$21
		p	1		entry
	m	(Lqw;Ljava/lang/String;)Lcom/mojang/datafixers/util/Pair;	a	lambda$getMapValues$15
		p	2		key
	m	(Lqw;Ljava/util/function/BiConsumer;)V	a	lambda$getMapEntries$18
		p	2		entryConsumer
	m	(Lqw;Lqw;Ljava/lang/String;)V	a	lambda$remove$29
		p	2		k
	m	(Lrc;Ljava/util/function/Consumer;)V	a	lambda$getList$26
		p	1		consumer
	m	(Lrq;)Lcom/mojang/serialization/DataResult;	a	getNumberValue
	m	(Lrq;Lcom/mojang/serialization/MapLike;)Lcom/mojang/serialization/DataResult;	a	mergeToMap
	m	(Lrq;Ljava/lang/String;)Lrq;	a	remove
	m	(Lrq;Ljava/util/List;)Lcom/mojang/serialization/DataResult;	a	mergeToList
	m	(Lrq;Lri$f;)Lcom/mojang/serialization/DataResult;	a	lambda$mergeToList$2
		p	1		merger
	m	(Lrq;Lrq;)Lcom/mojang/serialization/DataResult;	a	mergeToList
	m	(Lrq;Lrq;Lrq;)Lcom/mojang/serialization/DataResult;	a	mergeToMap
	m	(S)Lrq;	a	createShort
	m	(Z)Lrq;	a	createBoolean
	m	()Ljava/lang/String;	b	lambda$getStream$24
	m	(Ljava/util/stream/Stream;)Lrq;	b	createList
	m	(Lqw;Lqw;Ljava/lang/String;)V	b	lambda$mergeToMap$12
		p	2		key
	m	(Lrq;)Lcom/mojang/serialization/DataResult;	b	getStringValue
	m	()Ljava/lang/String;	c	lambda$getStringValue$1
	m	(Lqw;Lqw;Ljava/lang/String;)V	c	lambda$mergeToMap$10
		p	2		key
	m	(Lrq;)Lcom/mojang/serialization/DataResult;	c	getMapValues
	m	()Ljava/lang/String;	d	lambda$getNumberValue$0
	m	(Lrq;)Lcom/mojang/serialization/DataResult;	d	getMapEntries
	m	(Lrq;)Lcom/mojang/serialization/DataResult;	e	getMap
	m	(Lrq;)Lcom/mojang/serialization/DataResult;	f	getStream
	m	(Lrq;)Lcom/mojang/serialization/DataResult;	g	getList
	m	(Lrq;)Lcom/mojang/serialization/DataResult;	h	getByteBuffer
	m	(Lrq;)Lcom/mojang/serialization/DataResult;	i	getIntStream
	m	(Lrq;)Lcom/mojang/serialization/DataResult;	j	getLongStream
	m	(Lrq;)Ljava/util/Optional;	k	createCollector
		p	0		nbt
	m	(Lrq;)Ljava/lang/String;	l	lambda$getList$27
	m	(Lrq;)Lrq;	m	lambda$getStream$23
		p	0		nbt
	m	(Lrq;)Lrq;	n	lambda$getStream$22
		p	0		nbt
	m	(Lrq;)Ljava/lang/String;	o	lambda$getMap$20
	m	(Lrq;)Ljava/lang/String;	p	lambda$getMapEntries$19
	m	(Lrq;)Ljava/lang/String;	q	lambda$getMapValues$16
	m	(Lrq;)Ljava/lang/String;	r	lambda$mergeToMap$11
	m	(Lrq;)Ljava/lang/String;	s	lambda$mergeToMap$9
	m	(Lrq;)Ljava/lang/String;	t	lambda$mergeToMap$8
	m	(Lrq;)Lcom/mojang/serialization/DataResult;	u	lambda$mergeToList$7
	m	(Lrq;)Ljava/lang/String;	v	lambda$mergeToList$6
	m	(Lrq;)Lcom/mojang/serialization/DataResult;	w	lambda$mergeToList$4
	m	(Lrq;)Ljava/lang/String;	x	lambda$mergeToList$3
	f	Lri;	a	INSTANCE
	f	Ljava/lang/String;	b	WRAPPER_MARKER
c	ri$1	net/minecraft/nbt/NbtOps$1
	m	(Ljava/lang/String;)Lrq;	a	get
	m	(Lqw;Ljava/lang/String;)Lcom/mojang/datafixers/util/Pair;	a	lambda$entries$0
		p	2		key
	m	(Lrq;)Lrq;	a	get
	f	Lqw;	a	val$tag
	f	Lri;	b	this$0
c	ri$a	net/minecraft/nbt/NbtOps$ByteListCollector
	m	(B)V	<init>	<init>
		p	1		value
	m	([B)V	<init>	<init>
		p	1		values
	m	()Lrq;	a	result
	m	(Lrq;)Lri$f;	a	accept
		p	1		nbt
	f	Lit/unimi/dsi/fastutil/bytes/ByteArrayList;	a	values
c	ri$b	net/minecraft/nbt/NbtOps$HeterogenousListCollector
	m	(Lit/unimi/dsi/fastutil/bytes/ByteArrayList;)V	<init>	<init>
		p	1		list
	m	(Lit/unimi/dsi/fastutil/ints/IntArrayList;)V	<init>	<init>
		p	1		list
	m	(Lit/unimi/dsi/fastutil/longs/LongArrayList;)V	<init>	<init>
		p	1		list
	m	(Ljava/util/Collection;)V	<init>	<init>
		p	1		nbts
	m	()Lrq;	a	result
	m	(B)V	a	lambda$new$1
		p	1		value
	m	(I)V	a	lambda$new$0
		p	1		value
	m	(J)V	a	lambda$new$2
		p	1		value
	m	(Lqw;)Z	a	isWrapper
		p	0		nbt
	m	(Lrq;)Lri$f;	a	accept
		p	1		nbt
	m	(Lrq;)Lrq;	b	wrapIfNeeded
		p	0		value
	m	(Lrq;)Lqw;	c	wrapElement
		p	0		value
	f	Lrc;	a	result
c	ri$c	net/minecraft/nbt/NbtOps$HomogenousListCollector
	m	(Lrc;)V	<init>	<init>
		p	1		nbt
	m	(Lrq;)V	<init>	<init>
		p	1		nbt
	m	()Lrq;	a	result
	m	(Lrq;)Lri$f;	a	accept
		p	1		nbt
	f	Lrc;	a	result
c	ri$d	net/minecraft/nbt/NbtOps$InitialListCollector
	m	()Lrq;	a	result
	m	(Lrq;)Lri$f;	a	accept
		p	1		nbt
	f	Lri$d;	a	INSTANCE
c	ri$e	net/minecraft/nbt/NbtOps$IntListCollector
	m	(I)V	<init>	<init>
		p	1		value
	m	([I)V	<init>	<init>
		p	1		values
	m	()Lrq;	a	result
	m	(Lrq;)Lri$f;	a	accept
		p	1		nbt
	f	Lit/unimi/dsi/fastutil/ints/IntArrayList;	a	values
c	ri$f	net/minecraft/nbt/NbtOps$ListCollector
	m	()Lrq;	a	result
	m	(Ljava/lang/Iterable;)Lri$f;	a	acceptAll
		p	1		nbts
	m	(Ljava/util/stream/Stream;)Lri$f;	a	acceptAll
		p	1		nbts
	m	(Lrq;)Lri$f;	a	accept
		p	1		nbt
c	ri$g	net/minecraft/nbt/NbtOps$LongListCollector
	m	(J)V	<init>	<init>
		p	1		value
	m	([J)V	<init>	<init>
		p	1		values
	m	()Lrq;	a	result
	m	(Lrq;)Lri$f;	a	accept
		p	1		nbt
	f	Lit/unimi/dsi/fastutil/longs/LongArrayList;	a	values
c	ri$h	net/minecraft/nbt/NbtOps$NbtRecordBuilder
	m	()Lqw;	a	initBuilder
	m	(Ljava/lang/String;Lrq;Lqw;)Lqw;	a	append
	m	(Lqw;Lrq;)Lcom/mojang/serialization/DataResult;	a	build
	m	(Lrq;)Ljava/lang/String;	a	lambda$build$0
	f	Lri;	a	this$0
c	rj	net/minecraft/nbt/NbtUtils
	m	(ILjava/lang/StringBuilder;)Ljava/lang/StringBuilder;	a	indent
		p	0		depth
		p	1		stringBuilder
	m	(Ldfj;)Lqw;	a	writeBlockState
		p	0		state
	m	(Ldfl;Ldgm;Ljava/lang/String;Lqw;Lqw;)Ldfl;	a	setValueHelper
		p	0		state
		p	1		property
		p	2		key
		p	3		properties
		p	4		root
	m	(Ldgm;Ljava/lang/Comparable;)Ljava/lang/String;	a	getName
		p	0		property
		p	1		value
	m	(Leam;)Lqw;	a	writeFluidState
		p	0		state
	m	(Lgw;)Lqw;	a	writeBlockPos
		p	0		pos
	m	(Lhf;Lqw;)Ldfj;	a	readBlockState
		p	0		blockLookup
		p	1		nbt
	m	(Ljava/lang/String;)Lqw;	a	snbtToStructure
		p	0		string
	m	(Ljava/lang/StringBuilder;Lrq;IZ)Ljava/lang/StringBuilder;	a	prettyPrint
		p	0		stringBuilder
		p	1		nbt
		p	2		depth
		p	3		withArrayContents
	m	(Ljava/util/Map;Lqw;)Lrc;	a	lambda$unpackStructureTemplate$10
		p	1		nbt
	m	(Ljava/util/UUID;)Lra;	a	createUUID
		p	0		uuid
	m	(Lqw;)Lcom/mojang/authlib/GameProfile;	a	readGameProfile
		p	0		nbt
	m	(Lqw;I)Lqw;	a	addDataVersion
		p	0		nbt
		p	1		dataVersion
	m	(Lqw;Lcom/mojang/authlib/GameProfile;)Lqw;	a	writeGameProfile
		p	0		nbt
		p	1		profile
	m	(Lqw;Ljava/lang/String;)Ljava/lang/String;	a	lambda$packBlockState$11
		p	1		key
	m	(Lqw;Ljava/lang/String;Ljava/lang/String;)V	a	lambda$unpackBlockState$12
		p	2		property
	m	(Lrc;)D	a	lambda$static$5
		p	0		nbt
	m	(Lrc;Lqw;)V	a	lambda$packStructureTemplate$9
		p	1		nbt
	m	(Lrc;Lrc;Lrc;)V	a	lambda$packStructureTemplate$6
		p	2		nbt
	m	(Lrq;)Ljava/util/UUID;	a	loadUUID
		p	0		element
	m	(Lrq;Lrq;Z)Z	a	compareNbt
		p	0		standard
		p	1		subject
		p	2		ignoreListOrder
	m	(Lrq;Z)Ljava/lang/String;	a	prettyPrint
		p	0		nbt
		p	1		withArrayContents
	m	(Ljava/lang/String;)Lqw;	b	unpackBlockState
		p	0		string
	m	(Lqw;)Lgw;	b	readBlockPos
		p	0		nbt
	m	(Lqw;I)I	b	getDataVersion
		p	0		nbt
		p	1		fallback
	m	(Lrc;)D	b	lambda$static$4
		p	0		nbt
	m	(Lrq;)Ljava/lang/String;	b	prettyPrint
		p	0		nbt
	m	(Lqw;)Ljava/lang/String;	c	structureToSnbt
		p	0		compound
	m	(Lrc;)D	c	lambda$static$3
		p	0		nbt
	m	(Lrq;)Ltl;	c	toPrettyComponent
		p	0		element
	m	(Lqw;)Lqw;	d	packStructureTemplate
		p	0		compound
	m	(Lrc;)I	d	lambda$static$2
		p	0		nbt
	m	(Lqw;)Lqw;	e	unpackStructureTemplate
		p	0		compound
	m	(Lrc;)I	e	lambda$static$1
		p	0		nbt
	m	(Lqw;)Ljava/lang/String;	f	packBlockState
		p	0		compound
	m	(Lrc;)I	f	lambda$static$0
		p	0		nbt
	m	(Lqw;)Lqw;	g	addCurrentDataVersion
		p	0		nbt
	m	(Lqw;)Lrc;	h	lambda$packStructureTemplate$8
		p	0		nbt
	m	(Lqw;)Lrc;	i	lambda$packStructureTemplate$7
		p	0		nbt
	f	Ljava/lang/String;	a	SNBT_DATA_TAG
	f	Ljava/util/Comparator;	b	YXZ_LISTTAG_INT_COMPARATOR
	f	Ljava/util/Comparator;	c	YXZ_LISTTAG_DOUBLE_COMPARATOR
	f	C	d	PROPERTIES_START
	f	C	e	PROPERTIES_END
	f	Ljava/lang/String;	f	ELEMENT_SEPARATOR
	f	C	g	KEY_VALUE_SEPARATOR
	f	Lcom/google/common/base/Splitter;	h	COMMA_SPLITTER
	f	Lcom/google/common/base/Splitter;	i	COLON_SPLITTER
	f	Lorg/slf4j/Logger;	j	LOGGER
	f	I	k	INDENT
	f	I	l	NOT_FOUND
c	rk	net/minecraft/nbt/NumericTag
	m	()J	f	getAsLong
	m	()I	g	getAsInt
	m	()S	h	getAsShort
	m	()B	i	getAsByte
	m	()D	j	getAsDouble
	m	()F	k	getAsFloat
	m	()Ljava/lang/Number;	l	getAsNumber
c	rl	net/minecraft/nbt/ShortTag
	m	(S)V	<init>	<init>
		p	1		value
	m	()I	a	sizeInBytes
	m	(Ljava/io/DataOutput;)V	a	write
		p	1		output
	m	(Lrn;)Lrn$b;	a	accept
		p	1		visitor
	m	(Lru;)V	a	accept
		p	1		visitor
	m	(S)Lrl;	a	valueOf
		p	0		value
	m	()B	b	getId
	m	()Lrs;	c	getType
	m	()Lrq;	d	copy
	m	()Lrl;	e	copy
	m	()J	f	getAsLong
	m	()I	g	getAsInt
	m	()S	h	getAsShort
	m	()B	i	getAsByte
	m	()D	j	getAsDouble
	m	()F	k	getAsFloat
	m	()Ljava/lang/Number;	l	getAsNumber
	f	Lrs;	a	TYPE
	f	I	b	SELF_SIZE_IN_BYTES
	f	S	c	data
c	rl$1	net/minecraft/nbt/ShortTag$1
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/io/DataInput;Lrf;)Lrl;	a	load
	m	(Ljava/io/DataInput;Lrn;Lrf;)Lrn$b;	a	parse
		p	1		input
		p	2		visitor
		p	3		tracker
	m	()Ljava/lang/String;	b	getPrettyName
	m	()I	c	size
	m	(Ljava/io/DataInput;Lrf;)Lrq;	c	load
		p	1		input
		p	2		tracker
	m	()Z	d	isValue
	m	(Ljava/io/DataInput;Lrf;)S	d	readAccounted
		p	0		input
		p	1		tracker
c	rl$a	net/minecraft/nbt/ShortTag$Cache
	f	[Lrl;	a	cache
	f	I	b	HIGH
	f	I	c	LOW
c	rm	net/minecraft/nbt/SnbtPrinterTagVisitor
	m	(Ljava/lang/String;ILjava/util/List;)V	<init>	<init>
		p	1		prefix
		p	2		indentationLevel
		p	3		pathParts
	m	()Ljava/lang/String;	a	pathString
	m	(Ljava/lang/String;)Ljava/lang/String;	a	handleEscapePretty
		p	0		name
	m	(Ljava/util/HashMap;)V	a	lambda$static$0
		p	0		map
	m	(Lqt;)V	a	visitByteArray
		p	1		element
	m	(Lqu;)V	a	visitByte
		p	1		element
	m	(Lqw;)V	a	visitCompound
		p	1		compound
	m	(Lqx;)V	a	visitDouble
		p	1		element
	m	(Lqy;)V	a	visitEnd
		p	1		element
	m	(Lqz;)V	a	visitFloat
		p	1		element
	m	(Lra;)V	a	visitIntArray
		p	1		element
	m	(Lrb;)V	a	visitInt
		p	1		element
	m	(Lrc;)V	a	visitList
		p	1		element
	m	(Lrd;)V	a	visitLongArray
		p	1		element
	m	(Lre;)V	a	visitLong
		p	1		element
	m	(Lrl;)V	a	visitShort
		p	1		element
	m	(Lro;)V	a	visitString
		p	1		element
	m	(Lrq;)Ljava/lang/String;	a	visit
		p	1		element
	m	()V	b	popPath
	m	(Ljava/lang/String;)V	b	pushPath
		p	1		part
	m	(Lqw;)Ljava/util/List;	b	getKeys
		p	1		compound
	f	Ljava/util/Map;	a	KEY_ORDER
	f	Ljava/util/Set;	b	NO_INDENTATION
	f	Ljava/util/regex/Pattern;	c	SIMPLE_VALUE
	f	Ljava/lang/String;	d	NAME_VALUE_SEPARATOR
	f	Ljava/lang/String;	e	ELEMENT_SEPARATOR
	f	Ljava/lang/String;	f	LIST_OPEN
	f	Ljava/lang/String;	g	LIST_CLOSE
	f	Ljava/lang/String;	h	LIST_TYPE_SEPARATOR
	f	Ljava/lang/String;	i	ELEMENT_SPACING
	f	Ljava/lang/String;	j	STRUCT_OPEN
	f	Ljava/lang/String;	k	STRUCT_CLOSE
	f	Ljava/lang/String;	l	NEWLINE
	f	Ljava/lang/String;	m	indentation
	f	I	n	depth
	f	Ljava/util/List;	o	path
	f	Ljava/lang/String;	p	result
c	rn	net/minecraft/nbt/StreamTagVisitor
	m	()Lrn$b;	a	visitEnd
	m	(B)Lrn$b;	a	visit
		p	1		value
	m	(D)Lrn$b;	a	visit
		p	1		value
	m	(F)Lrn$b;	a	visit
		p	1		value
	m	(I)Lrn$b;	a	visit
		p	1		value
	m	(J)Lrn$b;	a	visit
		p	1		value
	m	(Ljava/lang/String;)Lrn$b;	a	visit
		p	1		value
	m	(Lrs;)Lrn$a;	a	visitEntry
		p	1		type
	m	(Lrs;I)Lrn$b;	a	visitList
		p	1		entryType
		p	2		length
	m	(Lrs;Ljava/lang/String;)Lrn$a;	a	visitEntry
		p	1		type
		p	2		key
	m	(S)Lrn$b;	a	visit
		p	1		value
	m	([B)Lrn$b;	a	visit
		p	1		value
	m	([I)Lrn$b;	a	visit
		p	1		value
	m	([J)Lrn$b;	a	visit
		p	1		value
	m	()Lrn$b;	b	visitContainerEnd
	m	(Lrs;)Lrn$b;	b	visitRootEntry
		p	1		rootType
	m	(Lrs;I)Lrn$a;	b	visitElement
		p	1		type
		p	2		index
c	rn$a	net/minecraft/nbt/StreamTagVisitor$EntryResult
	m	()[Lrn$a;	a	$values
	f	Lrn$a;	a	ENTER
	f	Lrn$a;	b	SKIP
	f	Lrn$a;	c	BREAK
	f	Lrn$a;	d	HALT
	f	[Lrn$a;	e	$VALUES
c	rn$b	net/minecraft/nbt/StreamTagVisitor$ValueResult
	m	()[Lrn$b;	a	$values
	f	Lrn$b;	a	CONTINUE
	f	Lrn$b;	b	BREAK
	f	Lrn$b;	c	HALT
	f	[Lrn$b;	d	$VALUES
c	ro	net/minecraft/nbt/StringTag
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		value
	m	()I	a	sizeInBytes
	m	(Ljava/io/DataInput;)V	a	skipString
		p	0		input
	m	(Ljava/io/DataOutput;)V	a	write
		p	1		output
	m	(Ljava/lang/String;)Lro;	a	valueOf
		p	0		value
	m	(Lrn;)Lrn$b;	a	accept
		p	1		visitor
	m	(Lru;)V	a	accept
		p	1		visitor
	m	()B	b	getId
	m	(Ljava/lang/String;)Ljava/lang/String;	b	quoteAndEscape
		p	0		value
	m	()Lrs;	c	getType
	m	()Lrq;	d	copy
	m	()Lro;	e	copy
	m	()Ljava/lang/String;	r_	getAsString
	f	Ljava/lang/String;	A	data
	f	Lrs;	a	TYPE
	f	I	b	SELF_SIZE_IN_BYTES
	f	Lro;	c	EMPTY
	f	C	w	DOUBLE_QUOTE
	f	C	x	SINGLE_QUOTE
	f	C	y	ESCAPE
	f	C	z	NOT_SET
c	ro$1	net/minecraft/nbt/StringTag$1
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/io/DataInput;Lrf;)Lro;	a	load
	m	(Ljava/io/DataInput;Lrn;Lrf;)Lrn$b;	a	parse
		p	1		input
		p	2		visitor
		p	3		tracker
	m	()Ljava/lang/String;	b	getPrettyName
	m	(Ljava/io/DataInput;Lrf;)V	b	skip
		p	1		input
		p	2		tracker
	m	(Ljava/io/DataInput;Lrf;)Lrq;	c	load
		p	1		input
		p	2		tracker
	m	()Z	d	isValue
	m	(Ljava/io/DataInput;Lrf;)Ljava/lang/String;	d	readAccounted
		p	0		input
		p	1		tracker
c	rp	net/minecraft/nbt/StringTagVisitor
	m	(Ljava/lang/String;)Ljava/lang/String;	a	handleEscape
		p	0		name
	m	(Lqt;)V	a	visitByteArray
		p	1		element
	m	(Lqu;)V	a	visitByte
		p	1		element
	m	(Lqw;)V	a	visitCompound
		p	1		compound
	m	(Lqx;)V	a	visitDouble
		p	1		element
	m	(Lqy;)V	a	visitEnd
		p	1		element
	m	(Lqz;)V	a	visitFloat
		p	1		element
	m	(Lra;)V	a	visitIntArray
		p	1		element
	m	(Lrb;)V	a	visitInt
		p	1		element
	m	(Lrc;)V	a	visitList
		p	1		element
	m	(Lrd;)V	a	visitLongArray
		p	1		element
	m	(Lre;)V	a	visitLong
		p	1		element
	m	(Lrl;)V	a	visitShort
		p	1		element
	m	(Lro;)V	a	visitString
		p	1		element
	m	(Lrq;)Ljava/lang/String;	a	visit
		p	1		element
	f	Ljava/util/regex/Pattern;	a	SIMPLE_VALUE
	f	Ljava/lang/StringBuilder;	b	builder
c	rq	net/minecraft/nbt/Tag
	m	()I	a	sizeInBytes
	m	(Ljava/io/DataOutput;)V	a	write
		p	1		output
	m	(Lrn;)Lrn$b;	a	accept
		p	1		visitor
	m	(Lru;)V	a	accept
		p	1		visitor
	m	()B	b	getId
	m	(Lrn;)V	b	acceptAsRoot
		p	1		visitor
	m	()Lrs;	c	getType
	m	()Lrq;	d	copy
	m	()Ljava/lang/String;	r_	getAsString
	f	I	d	OBJECT_HEADER
	f	I	e	ARRAY_HEADER
	f	I	f	OBJECT_REFERENCE
	f	I	g	STRING_SIZE
	f	B	h	TAG_END
	f	B	i	TAG_BYTE
	f	B	j	TAG_SHORT
	f	B	k	TAG_INT
	f	B	l	TAG_LONG
	f	B	m	TAG_FLOAT
	f	B	n	TAG_DOUBLE
	f	B	o	TAG_BYTE_ARRAY
	f	B	p	TAG_STRING
	f	B	q	TAG_LIST
	f	B	r	TAG_COMPOUND
	f	B	s	TAG_INT_ARRAY
	f	B	t	TAG_LONG_ARRAY
	f	B	u	TAG_ANY_NUMERIC
	f	I	v	MAX_DEPTH
c	rr	net/minecraft/nbt/TagParser
	m	(Lcom/mojang/brigadier/StringReader;)V	<init>	<init>
		p	1		reader
	m	()Lqw;	a	readSingleStruct
	m	(C)V	a	expect
		p	1		c
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$2
		p	0		type
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$1
		p	0		receivedType
		p	1		expectedType
	m	(Ljava/lang/String;)Lqw;	a	parseTag
		p	0		string
	m	(Lrs;Lrs;)Ljava/util/List;	a	readArray
		p	1		arrayTypeReader
		p	2		typeReader
	m	()Ljava/lang/String;	b	readKey
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$0
		p	0		receivedType
		p	1		expectedType
	m	(Ljava/lang/String;)Lrq;	b	type
		p	1		input
	m	()Lrq;	c	readTypedValue
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	c	lambda$static$3
		p	0		nbt
	m	()Lrq;	d	readValue
	m	()Lrq;	e	readList
	m	()Lqw;	f	readStruct
	m	()Lrq;	g	readListTag
	m	()Lrq;	h	readArrayTag
	m	()Z	i	hasElementSeparator
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_TRAILING_DATA
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_EXPECTED_KEY
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_EXPECTED_VALUE
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	d	ERROR_INSERT_MIXED_LIST
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	e	ERROR_INSERT_MIXED_ARRAY
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	f	ERROR_INVALID_ARRAY
	f	C	g	ELEMENT_SEPARATOR
	f	C	h	NAME_VALUE_SEPARATOR
	f	Lcom/mojang/serialization/Codec;	i	AS_CODEC
	f	C	j	LIST_OPEN
	f	C	k	LIST_CLOSE
	f	C	l	STRUCT_CLOSE
	f	C	m	STRUCT_OPEN
	f	Ljava/util/regex/Pattern;	n	DOUBLE_PATTERN_NOSUFFIX
	f	Ljava/util/regex/Pattern;	o	DOUBLE_PATTERN
	f	Ljava/util/regex/Pattern;	p	FLOAT_PATTERN
	f	Ljava/util/regex/Pattern;	q	BYTE_PATTERN
	f	Ljava/util/regex/Pattern;	r	LONG_PATTERN
	f	Ljava/util/regex/Pattern;	s	SHORT_PATTERN
	f	Ljava/util/regex/Pattern;	t	INT_PATTERN
	f	Lcom/mojang/brigadier/StringReader;	u	reader
c	rs	net/minecraft/nbt/TagType
	m	()Ljava/lang/String;	a	getName
	m	(I)Lrs;	a	createInvalid
		p	0		type
	m	(Ljava/io/DataInput;ILrf;)V	a	skip
		p	1		input
		p	2		count
		p	3		tracker
	m	(Ljava/io/DataInput;Lrn;Lrf;)Lrn$b;	a	parse
		p	1		input
		p	2		visitor
		p	3		tracker
	m	()Ljava/lang/String;	b	getPrettyName
	m	(Ljava/io/DataInput;Lrf;)V	b	skip
		p	1		input
		p	2		tracker
	m	(Ljava/io/DataInput;Lrn;Lrf;)V	b	parseRoot
		p	1		input
		p	2		visitor
		p	3		tracker
	m	(Ljava/io/DataInput;Lrf;)Lrq;	c	load
		p	1		input
		p	2		tracker
	m	()Z	d	isValue
c	rs$1	net/minecraft/nbt/TagType$1
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/io/DataInput;ILrf;)V	a	skip
		p	1		input
		p	2		count
		p	3		tracker
	m	(Ljava/io/DataInput;Lrf;)Lqy;	a	load
	m	(Ljava/io/DataInput;Lrn;Lrf;)Lrn$b;	a	parse
		p	1		input
		p	2		visitor
		p	3		tracker
	m	()Ljava/lang/String;	b	getPrettyName
	m	(Ljava/io/DataInput;Lrf;)V	b	skip
		p	1		input
		p	2		tracker
	m	()Ljava/io/IOException;	c	createException
	m	(Ljava/io/DataInput;Lrf;)Lrq;	c	load
		p	1		input
		p	2		tracker
	f	I	a	val$id
c	rs$2	net/minecraft/nbt/TagType$2
	f	[I	a	$SwitchMap$net$minecraft$nbt$StreamTagVisitor$ValueResult
c	rs$a	net/minecraft/nbt/TagType$StaticSize
	m	(Ljava/io/DataInput;ILrf;)V	a	skip
		p	1		input
		p	2		count
		p	3		tracker
	m	(Ljava/io/DataInput;Lrf;)V	b	skip
		p	1		input
		p	2		tracker
	m	()I	c	size
c	rs$b	net/minecraft/nbt/TagType$VariableSize
	m	(Ljava/io/DataInput;ILrf;)V	a	skip
		p	1		input
		p	2		count
		p	3		tracker
c	rt	net/minecraft/nbt/TagTypes
	m	(I)Lrs;	a	getType
		p	0		id
	f	[Lrs;	a	TYPES
c	ru	net/minecraft/nbt/TagVisitor
	m	(Lqt;)V	a	visitByteArray
		p	1		element
	m	(Lqu;)V	a	visitByte
		p	1		element
	m	(Lqw;)V	a	visitCompound
		p	1		compound
	m	(Lqx;)V	a	visitDouble
		p	1		element
	m	(Lqy;)V	a	visitEnd
		p	1		element
	m	(Lqz;)V	a	visitFloat
		p	1		element
	m	(Lra;)V	a	visitIntArray
		p	1		element
	m	(Lrb;)V	a	visitInt
		p	1		element
	m	(Lrc;)V	a	visitList
		p	1		element
	m	(Lrd;)V	a	visitLongArray
		p	1		element
	m	(Lre;)V	a	visitLong
		p	1		element
	m	(Lrl;)V	a	visitShort
		p	1		element
	m	(Lro;)V	a	visitString
		p	1		element
c	rv	net/minecraft/nbt/TextComponentTagVisitor
	m	(Ljava/lang/String;I)V	<init>	<init>
		p	1		prefix
		p	2		indentationLevel
	m	(Ljava/lang/String;)Ltl;	a	handleEscapePretty
		p	0		name
	m	(Lqt;)V	a	visitByteArray
		p	1		element
	m	(Lqu;)V	a	visitByte
		p	1		element
	m	(Lqw;)V	a	visitCompound
		p	1		compound
	m	(Lqx;)V	a	visitDouble
		p	1		element
	m	(Lqy;)V	a	visitEnd
		p	1		element
	m	(Lqz;)V	a	visitFloat
		p	1		element
	m	(Lra;)V	a	visitIntArray
		p	1		element
	m	(Lrb;)V	a	visitInt
		p	1		element
	m	(Lrc;)V	a	visitList
		p	1		element
	m	(Lrd;)V	a	visitLongArray
		p	1		element
	m	(Lre;)V	a	visitLong
		p	1		element
	m	(Lrl;)V	a	visitShort
		p	1		element
	m	(Lro;)V	a	visitString
		p	1		element
	m	(Lrq;)Ltl;	a	visit
		p	1		element
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	I	b	INLINE_LIST_THRESHOLD
	f	Lit/unimi/dsi/fastutil/bytes/ByteCollection;	c	INLINE_ELEMENT_TYPES
	f	Ln;	d	SYNTAX_HIGHLIGHTING_KEY
	f	Ln;	e	SYNTAX_HIGHLIGHTING_STRING
	f	Ln;	f	SYNTAX_HIGHLIGHTING_NUMBER
	f	Ln;	g	SYNTAX_HIGHLIGHTING_NUMBER_TYPE
	f	Ljava/util/regex/Pattern;	h	SIMPLE_VALUE
	f	Ljava/lang/String;	i	NAME_VALUE_SEPARATOR
	f	Ljava/lang/String;	j	ELEMENT_SEPARATOR
	f	Ljava/lang/String;	k	LIST_OPEN
	f	Ljava/lang/String;	l	LIST_CLOSE
	f	Ljava/lang/String;	m	LIST_TYPE_SEPARATOR
	f	Ljava/lang/String;	n	ELEMENT_SPACING
	f	Ljava/lang/String;	o	STRUCT_OPEN
	f	Ljava/lang/String;	p	STRUCT_CLOSE
	f	Ljava/lang/String;	q	NEWLINE
	f	Ljava/lang/String;	r	indentation
	f	I	s	depth
	f	Ltl;	t	result
c	rw	net/minecraft/nbt/package-info
c	rx	net/minecraft/nbt/visitors/CollectFields
	m	([Lrz;)V	<init>	<init>
		p	1		queries
	m	(Lrs;)Lrn$a;	a	visitEntry
		p	1		type
	m	(Lrs;Ljava/lang/String;)Lrn$a;	a	visitEntry
		p	1		type
		p	2		key
	m	()Lrn$b;	b	visitContainerEnd
	m	(Lrs;)Lrn$b;	b	visitRootEntry
		p	1		rootType
	m	()I	c	getMissingFieldCount
	f	I	a	fieldsToGetCount
	f	Ljava/util/Set;	b	wantedTypes
	f	Ljava/util/Deque;	c	stack
c	ry	net/minecraft/nbt/visitors/CollectToTag
	m	()Lrn$b;	a	visitEnd
	m	(B)Lrn$b;	a	visit
		p	1		value
	m	(D)Lrn$b;	a	visit
		p	1		value
	m	(F)Lrn$b;	a	visit
		p	1		value
	m	(I)Lrn$b;	a	visit
		p	1		value
	m	(J)Lrn$b;	a	visit
		p	1		value
	m	(Ljava/lang/String;)Lrn$b;	a	visit
		p	1		value
	m	(Lqw;Lrq;)V	a	lambda$visitRootEntry$1
		p	2		nbt
	m	(Lrq;)V	a	appendEntry
		p	1		nbt
	m	(Lrs;)Lrn$a;	a	visitEntry
		p	1		type
	m	(Lrs;I)Lrn$b;	a	visitList
		p	1		entryType
		p	2		length
	m	(Lrs;Ljava/lang/String;)Lrn$a;	a	visitEntry
		p	1		type
		p	2		key
	m	(S)Lrn$b;	a	visit
		p	1		value
	m	([B)Lrn$b;	a	visit
		p	1		value
	m	([I)Lrn$b;	a	visit
		p	1		value
	m	([J)Lrn$b;	a	visit
		p	1		value
	m	()Lrn$b;	b	visitContainerEnd
	m	(Lqw;Lrq;)V	b	lambda$enterContainerIfNeeded$0
		p	2		nbt
	m	(Lrq;)V	b	lambda$visitRootEntry$2
		p	1		nbt
	m	(Lrs;)Lrn$b;	b	visitRootEntry
		p	1		rootType
	m	(Lrs;I)Lrn$a;	b	visitElement
		p	1		type
		p	2		index
	m	(Lrs;)V	c	enterContainerIfNeeded
		p	1		type
	m	()Lrq;	d	getResult
	m	()I	e	depth
	f	Ljava/lang/String;	a	lastId
	f	Lrq;	b	rootTag
	f	Ljava/util/Deque;	c	consumerStack
c	rz	net/minecraft/nbt/visitors/FieldSelector
	m	(Ljava/lang/String;Ljava/lang/String;Lrs;Ljava/lang/String;)V	<init>	<init>
		p	1		path1
		p	2		path2
		p	3		type
		p	4		key
	m	(Ljava/lang/String;Lrs;Ljava/lang/String;)V	<init>	<init>
		p	1		path
		p	2		type
		p	3		key
	m	(Lrs;Ljava/lang/String;)V	<init>	<init>
		p	1		type
		p	2		key
	m	()Ljava/util/List;	a	path
	m	()Lrs;	b	type
	m	()Ljava/lang/String;	c	name
	f	Ljava/util/List;	a	path
	f	Lrs;	b	type
	f	Ljava/lang/String;	c	name
c	sa	net/minecraft/nbt/visitors/FieldTree
	m	(I)V	<init>	<init>
		p	1		depth
	m	()Lsa;	a	createRoot
	m	(Ljava/lang/String;)Lsa;	a	lambda$addEntry$0
		p	1		path
	m	(Lrs;Ljava/lang/String;)Z	a	isSelected
		p	1		type
		p	2		key
	m	(Lrz;)V	a	addEntry
		p	1		query
	m	()I	b	depth
	m	()Ljava/util/Map;	c	selectedFields
	m	()Ljava/util/Map;	d	fieldsToRecurse
	f	I	a	depth
	f	Ljava/util/Map;	b	selectedFields
	f	Ljava/util/Map;	c	fieldsToRecurse
c	sb	net/minecraft/nbt/visitors/SkipAll
	m	()Lrn$b;	a	visitEnd
	m	(B)Lrn$b;	a	visit
		p	1		value
	m	(D)Lrn$b;	a	visit
		p	1		value
	m	(F)Lrn$b;	a	visit
		p	1		value
	m	(I)Lrn$b;	a	visit
		p	1		value
	m	(J)Lrn$b;	a	visit
		p	1		value
	m	(Ljava/lang/String;)Lrn$b;	a	visit
		p	1		value
	m	(Lrs;)Lrn$a;	a	visitEntry
		p	1		type
	m	(Lrs;I)Lrn$b;	a	visitList
		p	1		entryType
		p	2		length
	m	(Lrs;Ljava/lang/String;)Lrn$a;	a	visitEntry
		p	1		type
		p	2		key
	m	(S)Lrn$b;	a	visit
		p	1		value
	m	([B)Lrn$b;	a	visit
		p	1		value
	m	([I)Lrn$b;	a	visit
		p	1		value
	m	([J)Lrn$b;	a	visit
		p	1		value
	m	()Lrn$b;	b	visitContainerEnd
	m	(Lrs;)Lrn$b;	b	visitRootEntry
		p	1		rootType
	m	(Lrs;I)Lrn$a;	b	visitElement
		p	1		type
		p	2		index
	f	Lsb;	a	INSTANCE
c	sb$1	net/minecraft/nbt/visitors/SkipAll$1
c	sc	net/minecraft/nbt/visitors/SkipFields
	m	([Lrz;)V	<init>	<init>
		p	1		excludedQueries
	m	(Lrs;Ljava/lang/String;)Lrn$a;	a	visitEntry
		p	1		type
		p	2		key
	m	()Lrn$b;	b	visitContainerEnd
	f	Ljava/util/Deque;	a	stack
c	sd	net/minecraft/nbt/visitors/package-info
c	se	net/minecraft/network/BandwidthDebugMonitor
	m	(Lase;)V	<init>	<init>
		p	1		log
	m	()V	a	tick
	m	(I)V	a	onReceive
		p	1		bytes
	f	Ljava/util/concurrent/atomic/AtomicInteger;	a	bytesReceived
	f	Lase;	b	bandwidthLogger
c	sf	net/minecraft/network/CipherBase
	m	(Ljavax/crypto/Cipher;)V	<init>	<init>
		p	1		cipher
	m	(Lio/netty/buffer/ByteBuf;)[B	a	bufToByte
		p	1		buf
	m	(Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V	a	encipher
		p	1		buf
		p	2		result
	m	(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;)Lio/netty/buffer/ByteBuf;	a	decipher
		p	1		context
		p	2		buf
	f	Ljavax/crypto/Cipher;	a	cipher
	f	[B	b	heapIn
	f	[B	c	heapOut
c	sg	net/minecraft/network/CipherDecoder
	m	(Ljavax/crypto/Cipher;)V	<init>	<init>
		p	1		cipher
	m	(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Ljava/util/List;)V	a	decode
	f	Lsf;	a	cipher
c	sh	net/minecraft/network/CipherEncoder
	m	(Ljavax/crypto/Cipher;)V	<init>	<init>
		p	1		cipher
	m	(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V	a	encode
	f	Lsf;	a	cipher
c	si	net/minecraft/network/ClientPongPacketListener
	m	(Ladx;)V	a	handlePongResponse
		p	1		packet
c	sj	net/minecraft/network/ClientboundPacketListener
	m	()Lve;	a	flow
c	sk	net/minecraft/network/CompressionDecoder
	m	(IZ)V	<init>	<init>
		p	1		compressionThreshold
		p	2		rejectsBadPackets
	m	(IZ)V	a	setThreshold
		p	1		compressionThreshold
		p	2		rejectsBadPackets
	m	(Lio/netty/buffer/ByteBuf;)V	a	setupInflaterInput
		p	1		buf
	m	(Lio/netty/channel/ChannelHandlerContext;I)Lio/netty/buffer/ByteBuf;	a	inflate
		p	1		context
		p	2		expectedSize
	f	I	a	MAXIMUM_COMPRESSED_LENGTH
	f	I	b	MAXIMUM_UNCOMPRESSED_LENGTH
	f	Ljava/util/zip/Inflater;	c	inflater
	f	I	d	threshold
	f	Z	e	validateDecompressed
c	sl	net/minecraft/network/CompressionEncoder
	m	(I)V	<init>	<init>
		p	1		compressionThreshold
	m	()I	a	getThreshold
	m	(I)V	a	setThreshold
		p	1		compressionThreshold
	m	(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V	a	encode
	f	[B	a	encodeBuf
	f	Ljava/util/zip/Deflater;	b	deflater
	f	I	c	threshold
c	sm	net/minecraft/network/Connection
	m	(Lve;)V	<init>	<init>
		p	1		side
	m	()V	a	suspendInboundAfterProtocolChange
	m	(IZ)V	a	setupCompression
		p	1		compressionThreshold
		p	2		rejectsBadPackets
	m	(Lada;)V	a	setClientboundProtocolAfterHandshake
		p	1		intent
	m	(Lada;Lsu;Ljava/lang/String;ILsm;)V	a	lambda$initiateServerboundConnection$7
		p	5		connection
	m	(Lase;)V	a	setBandwidthLogger
		p	1		log
	m	(Lio/netty/channel/Channel;)V	a	setInitialProtocolAttributes
		p	0		channel
	m	(Lio/netty/channel/ChannelHandlerContext;Lvd;)V	a	channelRead0
	m	(Lio/netty/channel/ChannelPipeline;)V	a	configurePacketHandler
		p	1		pipeline
	m	(Lio/netty/channel/ChannelPipeline;Lve;)V	a	configureInMemoryPipeline
		p	0		pipeline
		p	1		side
	m	(Lio/netty/channel/ChannelPipeline;Lve;Lse;)V	a	configureSerialization
		p	0		pipeline
		p	1		side
		p	2		packetSizeLogger
	m	(Ljava/lang/String;ILade;)V	a	initiateServerboundPlayConnection
		p	1		address
		p	2		port
		p	3		listener
	m	(Ljava/lang/String;ILadw;)V	a	initiateServerboundStatusConnection
		p	1		address
		p	2		port
		p	3		listener
	m	(Ljava/lang/String;ILsu;Lada;)V	a	initiateServerboundConnection
		p	1		address
		p	2		port
		p	3		listener
		p	4		intent
	m	(Ljava/net/InetSocketAddress;ZLase;)Lsm;	a	connectToServer
		p	0		address
		p	1		useEpoll
		p	2		packetSizeLog
	m	(Ljava/net/InetSocketAddress;ZLsm;)Lio/netty/channel/ChannelFuture;	a	connect
		p	0		address
		p	1		useEpoll
		p	2		connection
	m	(Ljava/net/SocketAddress;)Lsm;	a	connectToLocalServer
		p	0		address
	m	(Ljava/util/function/Consumer;)V	a	runOnceConnected
		p	1		task
	m	(Ljavax/crypto/Cipher;Ljavax/crypto/Cipher;)V	a	setEncryptionKey
		p	1		decryptionCipher
		p	2		encryptionCipher
	m	(Lorg/slf4j/Marker;)V	a	lambda$static$2
		p	0		marker
	m	(Lsu;)V	a	setListener
		p	1		packetListener
	m	(Lsv;Lio/netty/util/concurrent/Future;)V	a	lambda$doSendPacket$10
		p	2		future
	m	(Ltl;)V	a	disconnect
		p	1		disconnectReason
	m	(Lvd;)V	a	send
		p	1		packet
	m	(Lvd;Lsu;)V	a	genericsFtw
		p	0		packet
		p	1		listener
	m	(Lvd;Lsv;)V	a	send
		p	1		packet
		p	2		callbacks
	m	(Lvd;Lsv;Z)V	a	send
		p	1		packet
		p	2		callbacks
		p	3		flush
	m	(Lvd;Lsv;ZLsm;)V	a	lambda$send$8
		p	3		connection
	m	(Lve;)Lio/netty/util/AttributeKey;	a	getProtocolKey
		p	0		side
	m	(Z)Ljava/lang/String;	a	getLoggableAddress
		p	1		logIps
	m	()V	b	resumeInboundAfterProtocolChange
	m	(Lio/netty/channel/ChannelPipeline;Lve;)V	b	configureInMemoryPacketValidation
		p	0		pipeline
		p	1		side
	m	(Lorg/slf4j/Marker;)V	b	lambda$static$1
		p	0		marker
	m	(Lsu;)V	b	setListenerForServerboundHandshake
		p	1		packetListener
	m	(Ltl;)V	b	lambda$exceptionCaught$6
	m	(Lvd;Lsv;Z)V	b	sendPacket
		p	1		packet
		p	2		callbacks
		p	3		flush
	m	()V	c	flushChannel
	m	(Lorg/slf4j/Marker;)V	c	lambda$static$0
		p	0		marker
	m	(Lvd;Lsv;Z)V	c	doSendPacket
		p	1		packet
		p	2		callbacks
		p	3		flush
	m	()V	d	tick
	m	(Lvd;Lsv;Z)V	d	lambda$sendPacket$9
	m	()V	e	tickSecond
	m	()Ljava/net/SocketAddress;	f	getRemoteAddress
	m	()Z	g	isMemoryConnection
	m	()Lve;	h	getReceiving
	m	()Lve;	i	getSending
	m	()Z	j	isEncrypted
	m	()Z	k	isConnected
	m	()Z	l	isConnecting
	m	()Lsu;	m	getPacketListener
	m	()Ltl;	n	getDisconnectedReason
	m	()V	o	setReadOnly
	m	()V	p	handleDisconnection
	m	()F	q	getAverageReceivedPackets
	m	()F	r	getAverageSentPackets
	m	()V	s	flush
	m	()V	t	flushQueue
	m	()Ltl;	u	lambda$handleDisconnection$12
	m	()V	v	lambda$flush$11
	m	()Lio/netty/channel/DefaultEventLoopGroup;	w	lambda$static$5
	m	()Lio/netty/channel/epoll/EpollEventLoopGroup;	x	lambda$static$4
	m	()Lio/netty/channel/nio/NioEventLoopGroup;	y	lambda$static$3
	f	Ltl;	A	delayedDisconnect
	f	Lse;	B	bandwidthDebugMonitor
	f	Lorg/slf4j/Marker;	a	ROOT_MARKER
	f	Lorg/slf4j/Marker;	b	PACKET_MARKER
	f	Lorg/slf4j/Marker;	c	PACKET_RECEIVED_MARKER
	f	Lorg/slf4j/Marker;	d	PACKET_SENT_MARKER
	f	Lio/netty/util/AttributeKey;	e	ATTRIBUTE_SERVERBOUND_PROTOCOL
	f	Lio/netty/util/AttributeKey;	f	ATTRIBUTE_CLIENTBOUND_PROTOCOL
	f	Ljava/util/function/Supplier;	g	NETWORK_WORKER_GROUP
	f	Ljava/util/function/Supplier;	h	NETWORK_EPOLL_WORKER_GROUP
	f	Ljava/util/function/Supplier;	i	LOCAL_WORKER_GROUP
	f	F	j	AVERAGE_PACKETS_SMOOTHING
	f	Lorg/slf4j/Logger;	k	LOGGER
	f	Lve;	l	receiving
	f	Ljava/util/Queue;	m	pendingActions
	f	Lio/netty/channel/Channel;	n	channel
	f	Ljava/net/SocketAddress;	o	address
	f	Lsu;	p	disconnectListener
	f	Lsu;	q	packetListener
	f	Ltl;	r	disconnectedReason
	f	Z	s	encrypted
	f	Z	t	disconnectionHandled
	f	I	u	receivedPackets
	f	I	v	sentPackets
	f	F	w	averageReceivedPackets
	f	F	x	averageSentPackets
	f	I	y	tickCount
	f	Z	z	handlingFault
c	sm$1	net/minecraft/network/Connection$1
	f	Lsm;	a	val$connection
c	sm$2	net/minecraft/network/Connection$2
	f	Lsm;	a	val$connection
c	sm$3	net/minecraft/network/Connection$3
	f	[I	a	$SwitchMap$net$minecraft$network$protocol$PacketFlow
c	sn	net/minecraft/network/ConnectionProtocol
	m	(Ljava/lang/String;ILjava/lang/String;Lsn$c;)V	<init>	<init>
		p	3		stateId
		p	4		initializer
	m	()Ljava/lang/String;	a	id
	m	(Lve;)Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	a	getPacketsByIds
		p	1		side
	m	()Lsn$c;	b	protocol
	m	(Lve;)Lsn$a;	b	codec
		p	1		side
	m	()[Lsn;	c	$values
	f	Lsn;	a	HANDSHAKING
	f	Lsn;	b	PLAY
	f	Lsn;	c	STATUS
	f	Lsn;	d	LOGIN
	f	Lsn;	e	CONFIGURATION
	f	I	f	NOT_REGISTERED
	f	Ljava/lang/String;	g	id
	f	Ljava/util/Map;	h	flows
	f	[Lsn;	i	$VALUES
c	sn$a	net/minecraft/network/ConnectionProtocol$CodecData
	m	(Lsn;Lve;Lsn$b;)V	<init>	<init>
		p	1		state
		p	2		side
		p	3		backingHandler
	m	()Lsn;	a	protocol
	m	(ILso;)Lvd;	a	createPacket
		p	1		id
		p	2		buf
	m	(Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;Ljava/lang/Class;Ljava/lang/Integer;)V	a	lambda$packetsByIds$0
		p	1		packet
		p	2		id
	m	(Lvd;)I	a	packetId
		p	1		packet
	m	()Lve;	b	flow
	m	(Lvd;)Z	b	isValidPacketType
		p	1		packet
	m	()Lvc;	c	bundlerInfo
	m	()Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	d	packetsByIds
	f	Lsn;	a	protocol
	f	Lve;	b	flow
	f	Lsn$b;	c	packetSet
c	sn$b	net/minecraft/network/ConnectionProtocol$PacketSet
	m	()Lvc;	a	bundlerInfo
	m	(ILso;)Lvd;	a	createPacket
		p	1		id
		p	2		buf
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;)V	a	lambda$new$0
		p	0		map
	m	(Ljava/lang/Class;)I	a	getId
		p	1		packet
	m	(Ljava/lang/Class;Ljava/util/function/Function;)Lsn$b;	a	addPacket
		p	1		type
		p	2		packetFactory
	m	(Lva;Lso;)Lva;	a	lambda$withBundlePacket$1
		p	1		buf
	m	(Ljava/lang/Class;)Z	b	isKnownPacket
		p	1		clazz
	m	(Ljava/lang/Class;Ljava/util/function/Function;)Lsn$b;	b	withBundlePacket
		p	1		bundlePacketType
		p	2		bundleFunction
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	b	classToId
	f	Ljava/util/List;	c	idToDeserializer
	f	Lvc;	d	bundlerInfo
	f	Ljava/util/Set;	e	extraClasses
c	sn$c	net/minecraft/network/ConnectionProtocol$ProtocolBuilder
	m	(Lsn;)Ljava/util/Map;	a	buildCodecs
		p	1		state
	m	(Lve;Lsn$b;)Lsn$c;	a	addFlow
		p	1		side
		p	2		handler
	f	Ljava/util/Map;	a	flows
c	so	net/minecraft/network/FriendlyByteBuf
	m	(Lio/netty/buffer/ByteBuf;)V	<init>	<init>
		p	1		parent
	m	()Lcom/mojang/authlib/properties/PropertyMap;	A	readGameProfileProperties
	m	()Lcom/mojang/authlib/properties/Property;	B	readProperty
	m	()Lso;	C	clear
	m	()Lso;	D	markReaderIndex
	m	()Lso;	E	resetReaderIndex
	m	()Lso;	F	markWriterIndex
	m	()Lso;	G	resetWriterIndex
	m	()Lso;	H	discardReadBytes
	m	()Lso;	I	discardSomeReadBytes
	m	()Lso;	J	retain
	m	()Lso;	K	touch
	m	()Lit/unimi/dsi/fastutil/ints/IntList;	a	readIntIdList
	m	(D)Lso;	a	writeDouble
	m	(F)Lso;	a	writeFloat
	m	(I)[B	a	readByteArray
		p	1		maxSize
	m	(ID)Lso;	a	setDouble
	m	(IF)Lso;	a	setFloat
	m	(II)Lso;	a	setIndex
	m	(IJ)Lso;	a	setLong
	m	(ILio/netty/buffer/ByteBuf;)Lso;	a	getBytes
	m	(ILio/netty/buffer/ByteBuf;I)Lso;	a	getBytes
	m	(ILio/netty/buffer/ByteBuf;II)Lso;	a	getBytes
	m	(ILjava/io/OutputStream;I)Lso;	a	getBytes
	m	(ILjava/nio/ByteBuffer;)Lso;	a	getBytes
	m	(ILjava/util/function/IntFunction;I)Ljava/lang/Object;	a	lambda$limitValue$4
		p	2		value
	m	(IZ)Lso;	a	setBoolean
	m	(I[B)Lso;	a	getBytes
	m	(I[BII)Lso;	a	getBytes
	m	(J)Lso;	a	writeVarLong
		p	1		value
	m	(Laev;)Laev;	a	readResourceKey
		p	1		registryRef
	m	(Laew;)Lso;	a	writeResourceLocation
		p	1		id
	m	(Lcjf;)Lso;	a	writeItem
		p	1		stack
	m	(Lcom/mojang/authlib/GameProfile;)V	a	writeGameProfile
		p	1		gameProfile
	m	(Lcom/mojang/authlib/properties/Property;)V	a	writeProperty
	m	(Lcom/mojang/authlib/properties/PropertyMap;)V	a	writeGameProfileProperties
		p	1		propertyMap
	m	(Lcom/mojang/authlib/properties/PropertyMap;Lso;)V	a	lambda$readGameProfileProperties$8
		p	2		buf
	m	(Lcom/mojang/datafixers/util/Either;Lso$b;Lso$b;)V	a	writeEither
		p	1		either
		p	2		leftWriter
		p	3		rightWriter
	m	(Lcom/mojang/serialization/Codec;)Ljava/lang/Object;	a	readJsonWithCodec
		p	1		codec
	m	(Lcom/mojang/serialization/Codec;Ljava/lang/Object;)V	a	writeJsonWithCodec
		p	1		codec
		p	2		value
	m	(Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/Codec;)Ljava/lang/Object;	a	readWithCodecTrusted
		p	1		ops
		p	2		codec
	m	(Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/Codec;Ljava/lang/Object;)Lso;	a	writeWithCodec
		p	1		ops
		p	2		codec
		p	3		value
	m	(Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/Codec;Lrf;)Ljava/lang/Object;	a	readWithCodec
		p	1		ops
		p	2		codec
		p	3		sizeTracker
	m	(Lcpc;)Lso;	a	writeChunkPos
		p	1		pos
	m	(Lehj;)V	a	writeBlockHitResult
		p	1		hitResult
	m	(Lehn;)V	a	writeVec3
		p	1		vec
	m	(Lgw;)Lso;	a	writeBlockPos
		p	1		pos
	m	(Lhd;)V	a	writeGlobalPos
		p	1		pos
	m	(Lhj;)Ljava/lang/Object;	a	readById
		p	1		registry
	m	(Lhj;Lhe;Lso$b;)V	a	writeId
		p	1		registryEntries
		p	2		entry
		p	3		writer
	m	(Lhj;Ljava/lang/Object;)V	a	writeId
		p	1		registry
		p	2		value
	m	(Lhj;Lso$a;)Lhe;	a	readById
		p	1		registryEntries
		p	2		reader
	m	(Lhw;)Lso;	a	writeSectionPos
		p	1		pos
	m	(Lio/netty/buffer/ByteBuf;)Lso;	a	readBytes
	m	(Lio/netty/buffer/ByteBuf;I)Lso;	a	readBytes
	m	(Lio/netty/buffer/ByteBuf;II)Lso;	a	readBytes
	m	(Lit/unimi/dsi/fastutil/ints/IntList;)V	a	writeIntIdList
		p	1		list
	m	(Ljava/io/OutputStream;I)Lso;	a	readBytes
	m	(Ljava/lang/Class;)Ljava/util/EnumSet;	a	readEnumSet
		p	1		type
	m	(Ljava/lang/Enum;)Lso;	a	writeEnum
		p	1		instance
	m	(Ljava/lang/Object;)Lso;	a	touch
	m	(Ljava/lang/Object;Ljava/lang/String;)Lio/netty/handler/codec/EncoderException;	a	lambda$writeJsonWithCodec$3
		p	1		error
	m	(Ljava/lang/Object;Lso$b;)V	a	writeNullable
		p	1		value
		p	2		writer
	m	(Ljava/lang/String;)Lso;	a	writeUtf
		p	1		string
	m	(Ljava/lang/String;I)Lso;	a	writeUtf
		p	2		maxLength
	m	(Ljava/nio/ByteBuffer;)Lso;	a	readBytes
	m	(Ljava/security/PublicKey;)Lso;	a	writePublicKey
		p	1		publicKey
	m	(Ljava/time/Instant;)V	a	writeInstant
		p	1		instant
	m	(Ljava/util/BitSet;)V	a	writeBitSet
		p	1		bitSet
	m	(Ljava/util/BitSet;I)V	a	writeFixedBitSet
		p	1		bitSet
		p	2		size
	m	(Ljava/util/Collection;Lso$b;)V	a	writeCollection
		p	1		collection
		p	2		writer
	m	(Ljava/util/Date;)Lso;	a	writeDate
		p	1		date
	m	(Ljava/util/EnumSet;Ljava/lang/Class;)V	a	writeEnumSet
		p	1		enumSet
		p	2		type
	m	(Ljava/util/Map;Lso$b;Lso$b;)V	a	writeMap
		p	1		map
		p	2		keyWriter
		p	3		valueWriter
	m	(Ljava/util/Optional;Lso$b;)V	a	writeOptional
		p	1		value
		p	2		writer
	m	(Ljava/util/UUID;)Lso;	a	writeUUID
		p	1		uuid
	m	(Ljava/util/function/Consumer;)V	a	readWithCount
		p	1		consumer
	m	(Ljava/util/function/IntFunction;)Ljava/lang/Object;	a	readById
		p	1		idToValue
	m	(Ljava/util/function/IntFunction;I)Ljava/util/function/IntFunction;	a	limitValue
		p	0		applier
		p	1		max
	m	(Ljava/util/function/IntFunction;Lso$a;)Ljava/util/Collection;	a	readCollection
		p	1		collectionFactory
		p	2		reader
	m	(Ljava/util/function/IntFunction;Lso$a;Lso$a;)Ljava/util/Map;	a	readMap
		p	1		mapFactory
		p	2		keyReader
		p	3		valueReader
	m	(Ljava/util/function/ToIntFunction;Ljava/lang/Object;)Lso;	a	writeById
		p	1		valueToId
		p	2		value
	m	(Lorg/joml/Quaternionf;)V	a	writeQuaternion
		p	1		quaternionf
	m	(Lorg/joml/Vector3f;)V	a	writeVector3f
		p	1		vector3f
	m	(Lrf;)Lrq;	a	readNbt
		p	1		sizeTracker
	m	(Lrq;)Lso;	a	writeNbt
		p	1		nbt
	m	(Lrq;Ljava/lang/String;)Lio/netty/handler/codec/DecoderException;	a	lambda$readWithCodec$0
		p	1		error
	m	(Lso$a;)Ljava/util/List;	a	readList
		p	1		reader
	m	(Lso$a;Lso$a;)Ljava/util/Map;	a	readMap
		p	1		keyReader
		p	2		valueReader
	m	(Lso$b;Ljava/lang/Object;)V	a	lambda$writeEither$7
		p	2		object
	m	(Lso$b;Lso$b;Ljava/lang/Object;Ljava/lang/Object;)V	a	lambda$writeMap$5
		p	3		key
		p	4		value
	m	(Ltl;)Lso;	a	writeComponent
		p	1		text
	m	(Z)Lso;	a	writeBoolean
	m	([B)Lso;	a	writeByteArray
		p	1		array
	m	([BII)Lso;	a	readBytes
	m	([I)Lso;	a	writeVarIntArray
		p	1		array
	m	([J)Lso;	a	writeLongArray
		p	1		array
	m	([JI)[J	a	readLongArray
		p	1		toArray
		p	2		maxSize
	m	()[B	b	readByteArray
	m	(I)[I	b	readVarIntArray
		p	1		maxSize
	m	(II)Lso;	b	setByte
	m	(IJ)Lso;	b	setLongLE
	m	(ILio/netty/buffer/ByteBuf;)Lso;	b	setBytes
	m	(ILio/netty/buffer/ByteBuf;I)Lso;	b	setBytes
	m	(ILio/netty/buffer/ByteBuf;II)Lso;	b	setBytes
	m	(ILjava/nio/ByteBuffer;)Lso;	b	setBytes
	m	(I[B)Lso;	b	setBytes
	m	(I[BII)Lso;	b	setBytes
	m	(J)Lso;	b	writeLong
	m	(Laev;)V	b	writeResourceKey
		p	1		key
	m	(Lio/netty/buffer/ByteBuf;)Lso;	b	writeBytes
	m	(Lio/netty/buffer/ByteBuf;I)Lso;	b	writeBytes
	m	(Lio/netty/buffer/ByteBuf;II)Lso;	b	writeBytes
	m	(Ljava/lang/Class;)Ljava/lang/Enum;	b	readEnum
		p	1		enumClass
	m	(Ljava/lang/Object;Ljava/lang/String;)Lio/netty/handler/codec/EncoderException;	b	lambda$writeWithCodec$1
		p	1		error
	m	(Ljava/lang/String;)Lio/netty/handler/codec/DecoderException;	b	lambda$readJsonWithCodec$2
		p	0		error
	m	(Ljava/nio/ByteBuffer;)Lso;	b	writeBytes
	m	(Lso$a;)Ljava/util/Optional;	b	readOptional
		p	1		reader
	m	(Lso$a;Lso$a;)Lcom/mojang/datafixers/util/Either;	b	readEither
		p	1		leftReader
		p	2		rightReader
	m	(Lso$b;Ljava/lang/Object;)V	b	lambda$writeEither$6
		p	2		object
	m	([B)Lso;	b	readBytes
	m	([BII)Lso;	b	writeBytes
	m	([J)[J	b	readLongArray
		p	1		toArray
	m	()[I	c	readVarIntArray
	m	(I)Lso;	c	writeVarInt
		p	1		value
	m	(II)Lso;	c	setShort
	m	(J)Lso;	c	writeLongLE
	m	(Lso$a;)Ljava/lang/Object;	c	readNullable
		p	1		reader
	m	([B)Lso;	c	writeBytes
	m	()[J	d	readLongArray
	m	(I)Ljava/lang/String;	d	readUtf
		p	1		maxLength
	m	(II)Lso;	d	setShortLE
	m	()Lgw;	e	readBlockPos
	m	(I)Ljava/util/BitSet;	e	readFixedBitSet
		p	1		size
	m	(II)Lso;	e	setMedium
	m	()Lcpc;	f	readChunkPos
	m	(I)Lso;	f	capacity
	m	(II)Lso;	f	setMediumLE
	m	()Lhw;	g	readSectionPos
	m	(I)Lso;	g	readerIndex
	m	(II)Lso;	g	setInt
	m	()Lhd;	h	readGlobalPos
	m	(I)Lso;	h	writerIndex
	m	(II)Lso;	h	setIntLE
	m	()Lorg/joml/Vector3f;	i	readVector3f
	m	(I)Lso;	i	ensureWritable
	m	(II)Lso;	i	setChar
	m	()Lorg/joml/Quaternionf;	j	readQuaternion
	m	(I)Lso;	j	skipBytes
	m	(II)Lso;	j	setZero
	m	()Lehn;	k	readVec3
	m	(I)Lso;	k	writeByte
	m	()Ltl;	l	readComponent
	m	(I)Lso;	l	writeShort
	m	()I	m	readVarInt
	m	(I)Lso;	m	writeShortLE
	m	()J	n	readVarLong
	m	(I)Lso;	n	writeMedium
	m	()Ljava/util/UUID;	o	readUUID
	m	(I)Lso;	o	writeMediumLE
	m	()Lqw;	p	readNbt
	m	(I)Lso;	p	writeInt
	m	()Lcjf;	q	readItem
	m	(I)Lso;	q	writeIntLE
	m	()Ljava/lang/String;	r	readUtf
	m	(I)Lso;	r	writeChar
	m	()Laew;	s	readResourceLocation
	m	(I)Lso;	s	writeZero
	m	()Laev;	t	readRegistryKey
	m	(I)Lso;	t	retain
	m	()Ljava/util/Date;	u	readDate
	m	()Ljava/time/Instant;	v	readInstant
	m	()Ljava/security/PublicKey;	w	readPublicKey
	m	()Lehj;	x	readBlockHitResult
	m	()Ljava/util/BitSet;	y	readBitSet
	m	()Lcom/mojang/authlib/GameProfile;	z	readGameProfile
	f	I	a	DEFAULT_NBT_QUOTA
	f	S	b	MAX_STRING_LENGTH
	f	I	c	MAX_COMPONENT_STRING_LENGTH
	f	Lio/netty/buffer/ByteBuf;	d	source
	f	I	e	PUBLIC_KEY_SIZE
	f	I	f	MAX_PUBLIC_KEY_HEADER_SIZE
	f	I	g	MAX_PUBLIC_KEY_LENGTH
	f	Lcom/google/gson/Gson;	h	GSON
c	so$1	net/minecraft/network/FriendlyByteBuf$1
	f	[I	a	$SwitchMap$net$minecraft$core$Holder$Kind
c	so$a	net/minecraft/network/FriendlyByteBuf$Reader
	m	(Lso;)Ljava/util/Optional;	a	lambda$asOptional$0
		p	1		buf
c	so$b	net/minecraft/network/FriendlyByteBuf$Writer
	m	(Lso;Ljava/util/Optional;)V	a	lambda$asOptional$0
		p	1		buf
		p	2		value
c	sp	net/minecraft/network/PacketBundlePacker
	m	(Lio/netty/util/AttributeKey;)V	<init>	<init>
		p	1		protocolKey
	m	(Lio/netty/channel/ChannelHandlerContext;Lvd;Ljava/util/List;)V	a	decode
	f	Lvc$a;	a	currentBundler
	f	Lvc;	b	infoForCurrentBundler
	f	Lio/netty/util/AttributeKey;	c	bundlerAttributeKey
c	sq	net/minecraft/network/PacketBundleUnpacker
	m	(Lio/netty/util/AttributeKey;)V	<init>	<init>
		p	1		protocolKey
	m	(Lio/netty/channel/ChannelHandlerContext;Lvd;Ljava/util/List;)V	a	encode
	f	Lio/netty/util/AttributeKey;	a	bundlerAttributeKey
c	sr	net/minecraft/network/PacketDecoder
	m	(Lio/netty/util/AttributeKey;)V	<init>	<init>
		p	1		protocolKey
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lio/netty/util/AttributeKey;	b	codecKey
c	ss	net/minecraft/network/PacketEncoder
	m	(Lio/netty/util/AttributeKey;)V	<init>	<init>
		p	1		protocolKey
	m	(Lio/netty/channel/ChannelHandlerContext;Lvd;Lio/netty/buffer/ByteBuf;)V	a	encode
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lio/netty/util/AttributeKey;	b	codecKey
c	st	net/minecraft/network/PacketFlowValidator
	m	(Lio/netty/util/AttributeKey;Lio/netty/util/AttributeKey;)V	<init>	<init>
		p	1		receivingSideKey
		p	2		sendingSideKey
	m	(Lio/netty/channel/ChannelHandlerContext;Lvd;Ljava/util/List;)V	a	decode
	m	(Lio/netty/channel/ChannelHandlerContext;Lvd;Ljava/util/List;Lio/netty/util/AttributeKey;)V	a	validatePacket
		p	0		context
		p	1		packet
		p	2		packets
		p	3		key
	m	(Lio/netty/channel/ChannelHandlerContext;Lvd;Ljava/util/List;)V	b	encode
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lio/netty/util/AttributeKey;	b	decoderKey
	f	Lio/netty/util/AttributeKey;	c	encoderKey
c	su	net/minecraft/network/PacketListener
	m	()Lve;	a	flow
	m	(Ltl;)V	a	onDisconnect
		p	1		reason
	m	(Lvd;)Z	a	shouldHandleMessage
		p	1		packet
	m	()Lsn;	b	protocol
	m	()Z	c	isAcceptingMessages
	m	()Z	d	shouldPropagateHandlingExceptions
c	sv	net/minecraft/network/PacketSendListener
	m	()V	a	onSuccess
	m	(Ljava/lang/Runnable;)Lsv;	a	thenRun
		p	0		runnable
	m	(Ljava/util/function/Supplier;)Lsv;	a	exceptionallySend
		p	0		failurePacket
	m	()Lvd;	b	onFailure
c	sv$1	net/minecraft/network/PacketSendListener$1
	m	()V	a	onSuccess
	m	()Lvd;	b	onFailure
	f	Ljava/lang/Runnable;	a	val$runnable
c	sv$2	net/minecraft/network/PacketSendListener$2
	m	()Lvd;	b	onFailure
	f	Ljava/util/function/Supplier;	a	val$handler
c	sw	net/minecraft/network/ProtocolSwapHandler
	m	(Lio/netty/util/Attribute;Lvd;)V	a	swapProtocolIfNeeded
		p	0		protocolAttribute
		p	1		packet
c	sx	net/minecraft/network/RateKickingConnection
	m	(I)V	<init>	<init>
		p	1		rateLimit
	m	()V	e	tickSecond
	m	()V	s	lambda$tickSecond$0
	f	Lorg/slf4j/Logger;	j	LOGGER
	f	Ltl;	k	EXCEED_REASON
	f	I	l	rateLimitPacketsPerSecond
c	sy	net/minecraft/network/ServerboundPacketListener
	m	()Lve;	a	flow
c	sz	net/minecraft/network/SkipPacketException
	m	(Ljava/lang/Throwable;)V	<init>	<init>
		p	1		cause
c	ta	net/minecraft/network/TickablePacketListener
	m	()V	e	tick
c	tb	net/minecraft/network/Utf8String
	m	(Lio/netty/buffer/ByteBuf;I)Ljava/lang/String;	a	read
		p	0		buf
		p	1		length
	m	(Lio/netty/buffer/ByteBuf;Ljava/lang/CharSequence;I)V	a	write
		p	0		buf
		p	1		string
		p	2		length
c	tc	net/minecraft/network/VarInt
	m	(B)Z	a	hasContinuationBit
		p	0		b
	m	(I)I	a	getByteSize
		p	0		i
	m	(Lio/netty/buffer/ByteBuf;)I	a	read
		p	0		buf
	m	(Lio/netty/buffer/ByteBuf;I)Lio/netty/buffer/ByteBuf;	a	write
		p	0		buf
		p	1		i
	f	I	a	MAX_VARINT_SIZE
	f	I	b	DATA_BITS_MASK
	f	I	c	CONTINUATION_BIT_MASK
	f	I	d	DATA_BITS_PER_BYTE
c	td	net/minecraft/network/VarLong
	m	(B)Z	a	hasContinuationBit
		p	0		b
	m	(J)I	a	getByteSize
		p	0		l
	m	(Lio/netty/buffer/ByteBuf;)J	a	read
		p	0		buf
	m	(Lio/netty/buffer/ByteBuf;J)Lio/netty/buffer/ByteBuf;	a	write
		p	0		buf
		p	1		l
	f	I	a	MAX_VARLONG_SIZE
	f	I	b	DATA_BITS_MASK
	f	I	c	CONTINUATION_BIT_MASK
	f	I	d	DATA_BITS_PER_BYTE
c	te	net/minecraft/network/Varint21FrameDecoder
	m	(Lse;)V	<init>	<init>
		p	1		packetSizeLogger
	m	(Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)Z	a	copyVarint
		p	0		source
		p	1		sizeBuf
	f	I	a	MAX_VARINT21_BYTES
	f	Lio/netty/buffer/ByteBuf;	b	helperBuf
	f	Lse;	c	monitor
c	tf	net/minecraft/network/Varint21LengthFieldPrepender
	m	(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V	a	encode
	f	I	a	MAX_VARINT21_BYTES
c	tg	net/minecraft/network/chat/ChatDecorator
	m	(Lakr;Ltl;)Ltl;	a	lambda$static$0
		p	0		sender
		p	1		message
	m	(Lakr;Ltl;)Ltl;	decorate	decorate
		p	1		sender
		p	2		message
	f	Ltg;	a	PLAIN
c	th	net/minecraft/network/chat/ChatType
	m	()Lti;	a	chat
	m	(Laev;Lbiq;)Lth$a;	a	bind
		p	0		typeKey
		p	1		entity
	m	(Laev;Ldt;)Lth$a;	a	bind
		p	0		typeKey
		p	1		source
	m	(Laev;Lhr;Ltl;)Lth$a;	a	bind
		p	0		typeKey
		p	1		registryManager
		p	2		name
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ljava/lang/String;)Laev;	a	create
		p	0		id
	m	(Lnr;)V	a	bootstrap
		p	0		messageTypeRegisterable
	m	(Ltl;)Lth$a;	a	bind
		p	1		name
	m	()Lti;	b	narration
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lti;	b	DEFAULT_CHAT_DECORATION
	f	Laev;	c	CHAT
	f	Laev;	d	SAY_COMMAND
	f	Laev;	e	MSG_COMMAND_INCOMING
	f	Laev;	f	MSG_COMMAND_OUTGOING
	f	Laev;	g	TEAM_MSG_COMMAND_INCOMING
	f	Laev;	h	TEAM_MSG_COMMAND_OUTGOING
	f	Laev;	i	EMOTE_COMMAND
	f	Lti;	j	chat
	f	Lti;	k	narration
c	th$a	net/minecraft/network/chat/ChatType$Bound
	m	(Lth;Ltl;)V	<init>	<init>
		p	1		type
		p	2		name
	m	()Lth;	a	chatType
	m	(Lhr;)Lth$b;	a	toNetwork
		p	1		registryManager
	m	(Ltl;)Ltl;	a	decorate
		p	1		content
	m	()Ltl;	b	name
	m	(Ltl;)Ltl;	b	decorateNarration
		p	1		content
	m	()Ltl;	c	targetName
	m	(Ltl;)Lth$a;	c	withTargetName
		p	1		targetName
	f	Lth;	a	chatType
	f	Ltl;	b	name
	f	Ltl;	c	targetName
c	th$b	net/minecraft/network/chat/ChatType$BoundNetwork
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()I	a	chatType
	m	(Lhr;)Ljava/util/Optional;	a	resolve
		p	1		registryManager
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lth;)Lth$a;	a	lambda$resolve$0
		p	1		type
	m	()Ltl;	b	name
	m	()Ltl;	c	targetName
	f	I	a	chatType
	f	Ltl;	b	name
	f	Ltl;	c	targetName
c	ti	net/minecraft/network/chat/ChatTypeDecoration
	m	()Ljava/lang/String;	a	translationKey
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ljava/lang/String;)Lti;	a	withSender
		p	0		translationKey
	m	(Ltl;Lth$a;)Ltl;	a	decorate
		p	1		content
		p	2		params
	m	()Ljava/util/List;	b	parameters
	m	(Ljava/lang/String;)Lti;	b	incomingDirectMessage
		p	0		translationKey
	m	(Ltl;Lth$a;)[Ltl;	b	resolveParameters
		p	1		content
		p	2		params
	m	()Luh;	c	style
	m	(Ljava/lang/String;)Lti;	c	outgoingDirectMessage
		p	0		translationKey
	m	(Ljava/lang/String;)Lti;	d	teamMessage
		p	0		translationKey
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/lang/String;	b	translationKey
	f	Ljava/util/List;	c	parameters
	f	Luh;	d	style
c	ti$a	net/minecraft/network/chat/ChatTypeDecoration$Parameter
	m	(Ljava/lang/String;ILjava/lang/String;Lti$a$a;)V	<init>	<init>
		p	3		name
		p	4		selector
	m	()[Lti$a;	a	$values
	m	(Ltl;Lth$a;)Ltl;	a	select
		p	1		content
		p	2		params
	m	(Ltl;Lth$a;)Ltl;	b	lambda$static$2
		p	0		content
		p	1		params
	m	()Ljava/lang/String;	c	getSerializedName
	m	(Ltl;Lth$a;)Ltl;	c	lambda$static$1
		p	0		content
		p	1		params
	m	(Ltl;Lth$a;)Ltl;	d	lambda$static$0
		p	0		content
		p	1		params
	f	Lti$a;	a	SENDER
	f	Lti$a;	b	TARGET
	f	Lti$a;	c	CONTENT
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	Ljava/lang/String;	e	name
	f	Lti$a$a;	f	selector
	f	[Lti$a;	g	$VALUES
c	ti$a$a	net/minecraft/network/chat/ChatTypeDecoration$Parameter$Selector
	m	(Ltl;Lth$a;)Ltl;	select	select
		p	1		content
		p	2		params
c	tj	net/minecraft/network/chat/ClickEvent
	m	(Ltj$a;Ljava/lang/String;)V	<init>	<init>
		p	1		action
		p	2		value
	m	()Ltj$a;	a	getAction
	m	()Ljava/lang/String;	b	getValue
	f	Ltj$a;	a	action
	f	Ljava/lang/String;	b	value
c	tj$a	net/minecraft/network/chat/ClickEvent$Action
	m	(Ljava/lang/String;ILjava/lang/String;Z)V	<init>	<init>
		p	3		name
		p	4		userDefinable
	m	()Z	a	isAllowedFromServer
	m	(Ljava/lang/String;)Ltj$a;	a	getByName
		p	0		name
	m	(Ltj$a;)Ltj$a;	a	lambda$static$0
		p	0		a
	m	()Ljava/lang/String;	b	getName
	m	()[Ltj$a;	c	$values
	f	Ltj$a;	a	OPEN_URL
	f	Ltj$a;	b	OPEN_FILE
	f	Ltj$a;	c	RUN_COMMAND
	f	Ltj$a;	d	SUGGEST_COMMAND
	f	Ltj$a;	e	CHANGE_PAGE
	f	Ltj$a;	f	COPY_TO_CLIPBOARD
	f	Ljava/util/Map;	g	LOOKUP
	f	Z	h	allowFromServer
	f	Ljava/lang/String;	i	name
	f	[Ltj$a;	j	$VALUES
c	tk	net/minecraft/network/chat/CommonComponents
	m	()Lty;	a	space
	m	(J)Lty;	a	days
		p	0		days
	m	(Ljava/util/Collection;)Ltl;	a	joinLines
		p	0		texts
	m	(Ltl;Ltl;)Lty;	a	optionNameValue
		p	0		text
		p	1		value
	m	(Ltl;Z)Lty;	a	optionStatus
		p	0		text
		p	1		value
	m	(Z)Ltl;	a	optionStatus
		p	0		on
	m	([Ltl;)Lty;	a	joinForNarration
		p	0		sentences
	m	(J)Lty;	b	hours
		p	0		hours
	m	([Ltl;)Ltl;	b	joinLines
		p	0		texts
	m	(J)Lty;	c	minutes
		p	0		minutes
	f	Ltl;	a	EMPTY
	f	Ltl;	b	OPTION_ON
	f	Ltl;	c	OPTION_OFF
	f	Ltl;	d	GUI_DONE
	f	Ltl;	e	GUI_CANCEL
	f	Ltl;	f	GUI_YES
	f	Ltl;	g	GUI_NO
	f	Ltl;	h	GUI_OK
	f	Ltl;	i	GUI_PROCEED
	f	Ltl;	j	GUI_CONTINUE
	f	Ltl;	k	GUI_BACK
	f	Ltl;	l	GUI_TO_TITLE
	f	Ltl;	m	GUI_ACKNOWLEDGE
	f	Ltl;	n	GUI_OPEN_IN_BROWSER
	f	Ltl;	o	GUI_COPY_LINK_TO_CLIPBOARD
	f	Ltl;	p	GUI_DISCONNECT
	f	Ltl;	q	CONNECT_FAILED
	f	Ltl;	r	NEW_LINE
	f	Ltl;	s	NARRATION_SEPARATOR
	f	Ltl;	t	ELLIPSIS
	f	Ltl;	u	SPACE
c	tl	net/minecraft/network/chat/Component
	m	()Luh;	a	getStyle
	m	(I)Ljava/lang/String;	a	getString
		p	1		length
	m	(ILjava/lang/StringBuilder;Ljava/lang/String;)Ljava/util/Optional;	a	lambda$getString$0
		p	2		string
	m	(Ljava/lang/String;)Ltl;	a	nullToEmpty
		p	0		string
	m	(Ljava/lang/String;Ljava/lang/String;)Lty;	a	translatableWithFallback
		p	0		key
		p	1		fallback
	m	(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)Lty;	a	translatableWithFallback
		p	0		key
		p	1		fallback
		p	2		args
	m	(Ljava/lang/String;Ljava/util/Optional;)Lty;	a	selector
		p	0		pattern
		p	1		separator
	m	(Ljava/lang/String;ZLjava/util/Optional;Lum;)Lty;	a	nbt
		p	0		rawPath
		p	1		interpret
		p	2		separator
		p	3		dataSource
	m	(Ljava/lang/String;[Ljava/lang/Object;)Lty;	a	translatable
		p	0		key
		p	1		args
	m	(Ljava/util/List;Luh;Ljava/lang/String;)Ljava/util/Optional;	a	lambda$toFlatList$1
		p	1		styleOverride
		p	2		text
	m	(Ltl;)Z	a	contains
		p	1		text
	m	(Ltp$a;)Ljava/util/Optional;	a	visit
		p	1		visitor
	m	(Ltp$b;Luh;)Ljava/util/Optional;	a	visit
		p	1		styledVisitor
		p	2		style
	m	(Luh;)Ljava/util/List;	a	toFlatList
		p	1		style
	m	()Ltm;	b	getContents
	m	(Ljava/lang/String;)Lty;	b	literal
		p	0		string
	m	(Ljava/lang/String;Ljava/lang/String;)Lty;	b	score
		p	0		name
		p	1		objective
	m	()Ljava/util/List;	c	getSiblings
	m	(Ljava/lang/String;)Lty;	c	translatable
		p	0		key
	m	()Lty;	d	plainCopy
	m	(Ljava/lang/String;)Lty;	d	keybind
		p	0		string
	m	()Lty;	e	copy
	m	()Larj;	f	getVisualOrderText
	m	()Ljava/util/List;	g	toFlatList
	m	()Lty;	h	empty
c	tl$a	net/minecraft/network/chat/Component$Serializer
	m	()Ljava/lang/reflect/Field;	a	lambda$static$2
	m	(Lcom/google/gson/JsonElement;)Lty;	a	fromJson
		p	0		json
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lty;	a	deserialize
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonSerializationContext;Ltl;)V	a	lambda$serializeSeparator$3
		p	3		separator
	m	(Lcom/google/gson/JsonSerializationContext;Lcom/google/gson/JsonObject;Ljava/util/Optional;)V	a	serializeSeparator
		p	1		context
		p	2		json
		p	3		optionalSeparator
	m	(Lcom/google/gson/stream/JsonReader;)I	a	getPos
		p	0		reader
	m	(Lcom/mojang/brigadier/StringReader;)Lty;	a	fromJson
		p	0		reader
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	unwrapTextArgument
		p	0		text
	m	(Ljava/lang/String;)Lty;	a	fromJson
		p	0		json
	m	(Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Ljava/util/Optional;	a	parseSeparator
		p	1		type
		p	2		context
		p	3		json
	m	(Ltl;)Ljava/lang/String;	a	toJson
		p	0		text
	m	(Ltl;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	a	serialize
	m	(Luh;Lcom/google/gson/JsonObject;Lcom/google/gson/JsonSerializationContext;)V	a	serializeStyle
		p	1		style
		p	2		json
		p	3		context
	m	()Ljava/lang/reflect/Field;	b	lambda$static$1
	m	(Ljava/lang/String;)Lty;	b	fromJsonLenient
		p	0		json
	m	(Ltl;)Ljava/lang/String;	b	toStableJson
		p	0		text
	m	()Lcom/google/gson/Gson;	c	lambda$static$0
	m	(Ltl;)Lcom/google/gson/JsonElement;	c	toJsonTree
		p	0		text
	f	Lcom/google/gson/Gson;	a	GSON
	f	Ljava/lang/reflect/Field;	b	JSON_READER_POS
	f	Ljava/lang/reflect/Field;	c	JSON_READER_LINESTART
c	tm	net/minecraft/network/chat/ComponentContents
	m	(Ldt;Lbiq;I)Lty;	a	resolve
		p	1		source
		p	2		sender
		p	3		depth
	m	(Ltp$a;)Ljava/util/Optional;	a	visit
		p	1		visitor
	m	(Ltp$b;Luh;)Ljava/util/Optional;	a	visit
		p	1		visitor
		p	2		style
	f	Ltm;	a	EMPTY
c	tm$1	net/minecraft/network/chat/ComponentContents$1
c	tn	net/minecraft/network/chat/ComponentUtils
	m	(Lcom/mojang/brigadier/Message;)Ltl;	a	fromMessage
		p	0		message
	m	(Ldt;Ljava/util/Optional;Lbiq;I)Ljava/util/Optional;	a	updateForEntity
		p	0		source
		p	1		text
		p	2		sender
		p	3		depth
	m	(Ldt;Ltl;Lbiq;I)Lty;	a	updateForEntity
		p	0		source
		p	1		text
		p	2		sender
		p	3		depth
	m	(Ldt;Luh;Lbiq;I)Luh;	a	resolveStyle
		p	0		source
		p	1		style
		p	2		sender
		p	3		depth
	m	(Ljava/lang/String;)Lty;	a	copyOnClickText
		p	0		string
	m	(Ljava/lang/String;Luh;)Luh;	a	lambda$copyOnClickText$1
		p	1		style
	m	(Ljava/util/Collection;)Ltl;	a	formatList
		p	0		strings
	m	(Ljava/util/Collection;Ljava/util/Optional;Ljava/util/function/Function;)Lty;	a	formatList
		p	0		elements
		p	1		separator
		p	2		transformer
	m	(Ljava/util/Collection;Ljava/util/function/Function;)Ltl;	a	formatAndSortList
		p	0		elements
		p	1		transformer
	m	(Ljava/util/Collection;Ltl;)Ltl;	a	formatList
		p	0		texts
		p	1		separator
	m	(Ljava/util/Collection;Ltl;Ljava/util/function/Function;)Lty;	a	formatList
		p	0		elements
		p	1		separator
		p	2		transformer
	m	(Ltl;)Lty;	a	wrapInSquareBrackets
		p	0		text
	m	(Lty;Luh;)Lty;	a	mergeStyles
		p	0		text
		p	1		style
	m	(Ljava/lang/String;)Ltl;	b	lambda$formatList$0
		p	0		string
	m	(Ljava/util/Collection;Ljava/util/function/Function;)Ltl;	b	formatList
		p	0		elements
		p	1		transformer
	m	(Ltl;)Z	b	isTranslationResolvable
		p	0		text
	f	Ljava/lang/String;	a	DEFAULT_SEPARATOR_TEXT
	f	Ltl;	b	DEFAULT_SEPARATOR
	f	Ltl;	c	DEFAULT_NO_STYLE_SEPARATOR
c	to	net/minecraft/network/chat/FilterMask
	m	(I)V	<init>	<init>
		p	1		length
	m	(Ljava/util/BitSet;)V	<init>	<init>
		p	1		mask
	m	(Ljava/util/BitSet;Lto$a;)V	<init>	<init>
		p	1		mask
		p	2		status
	m	()Z	a	isEmpty
	m	(I)V	a	setFiltered
		p	1		index
	m	(Ljava/lang/String;)Ljava/lang/String;	a	apply
		p	1		raw
	m	(Lso;)Lto;	a	read
		p	0		buf
	m	(Lso;Lto;)V	a	write
		p	0		buf
		p	1		mask
	m	()Z	b	isFullyFiltered
	m	(Ljava/lang/String;)Ltl;	b	applyWithFormatting
		p	1		message
	m	()Lto$a;	c	type
	m	()Ljava/util/BitSet;	d	mask
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lto;	b	FULLY_FILTERED
	f	Lto;	c	PASS_THROUGH
	f	Luh;	d	FILTERED_STYLE
	f	Lcom/mojang/serialization/Codec;	e	PASS_THROUGH_CODEC
	f	Lcom/mojang/serialization/Codec;	f	FULLY_FILTERED_CODEC
	f	Lcom/mojang/serialization/Codec;	g	PARTIALLY_FILTERED_CODEC
	f	C	h	HASH
	f	Ljava/util/BitSet;	i	mask
	f	Lto$a;	j	type
c	to$1	net/minecraft/network/chat/FilterMask$1
	f	[I	a	$SwitchMap$net$minecraft$network$chat$FilterMask$Type
c	to$a	net/minecraft/network/chat/FilterMask$Type
	m	(Ljava/lang/String;ILjava/lang/String;Ljava/util/function/Supplier;)V	<init>	<init>
		p	3		id
		p	4		codecSupplier
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	()Lcom/mojang/serialization/Codec;	b	lambda$static$2
	m	()Ljava/lang/String;	c	getSerializedName
	m	()Lcom/mojang/serialization/Codec;	d	lambda$static$1
	m	()Lcom/mojang/serialization/Codec;	e	lambda$static$0
	m	()[Lto$a;	f	$values
	f	Lto$a;	a	PASS_THROUGH
	f	Lto$a;	b	FULLY_FILTERED
	f	Lto$a;	c	PARTIALLY_FILTERED
	f	Ljava/lang/String;	d	serializedName
	f	Ljava/util/function/Supplier;	e	codec
	f	[Lto$a;	f	$VALUES
c	tp	net/minecraft/network/chat/FormattedText
	m	(Ljava/lang/String;Luh;)Ltp;	a	of
		p	0		string
		p	1		style
	m	(Ljava/lang/StringBuilder;Ljava/lang/String;)Ljava/util/Optional;	a	lambda$getString$0
		p	1		string
	m	(Ljava/util/List;)Ltp;	a	composite
		p	0		visitables
	m	(Ltp$a;)Ljava/util/Optional;	a	visit
		p	1		visitor
	m	(Ltp$b;Luh;)Ljava/util/Optional;	a	visit
		p	1		styledVisitor
		p	2		style
	m	([Ltp;)Ltp;	a	composite
		p	0		visitables
	m	(Ljava/lang/String;)Ltp;	e	of
		p	0		string
	f	Ljava/util/Optional;	a	STOP_ITERATION
	f	Ltp;	b	EMPTY
c	tp$1	net/minecraft/network/chat/FormattedText$1
	m	(Ltp$a;)Ljava/util/Optional;	a	visit
		p	1		visitor
	m	(Ltp$b;Luh;)Ljava/util/Optional;	a	visit
		p	1		styledVisitor
		p	2		style
c	tp$2	net/minecraft/network/chat/FormattedText$2
	m	(Ltp$a;)Ljava/util/Optional;	a	visit
		p	1		visitor
	m	(Ltp$b;Luh;)Ljava/util/Optional;	a	visit
		p	1		styledVisitor
		p	2		style
	f	Ljava/lang/String;	c	val$text
c	tp$3	net/minecraft/network/chat/FormattedText$3
	m	(Ltp$a;)Ljava/util/Optional;	a	visit
		p	1		visitor
	m	(Ltp$b;Luh;)Ljava/util/Optional;	a	visit
		p	1		styledVisitor
		p	2		style
	f	Ljava/lang/String;	c	val$text
	f	Luh;	d	val$style
c	tp$4	net/minecraft/network/chat/FormattedText$4
	m	(Ltp$a;)Ljava/util/Optional;	a	visit
		p	1		visitor
	m	(Ltp$b;Luh;)Ljava/util/Optional;	a	visit
		p	1		styledVisitor
		p	2		style
	f	Ljava/util/List;	c	val$parts
c	tp$a	net/minecraft/network/chat/FormattedText$ContentConsumer
	m	(Ljava/lang/String;)Ljava/util/Optional;	accept	accept
		p	1		asString
c	tp$b	net/minecraft/network/chat/FormattedText$StyledContentConsumer
	m	(Luh;Ljava/lang/String;)Ljava/util/Optional;	accept	accept
		p	1		style
		p	2		asString
c	tq	net/minecraft/network/chat/HoverEvent
	m	(Ltq$a;Ljava/lang/Object;)V	<init>	<init>
		p	1		action
		p	2		contents
	m	()Ltq$a;	a	getAction
	m	(Lcom/google/gson/JsonObject;)Ltq;	a	deserialize
		p	0		json
	m	(Ltq$a;)Ljava/lang/Object;	a	getValue
		p	1		action
	m	()Lcom/google/gson/JsonObject;	b	serialize
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ltq$a;	b	action
	f	Ljava/lang/Object;	c	value
c	tq$a	net/minecraft/network/chat/HoverEvent$Action
	m	(Ljava/lang/String;ZLjava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;)V	<init>	<init>
		p	1		name
		p	2		parsable
		p	3		deserializer
		p	4		serializer
		p	5		legacyDeserializer
	m	()Z	a	isAllowedFromServer
	m	(Lcom/google/gson/JsonElement;)Ltq;	a	deserialize
		p	1		contents
	m	(Ljava/lang/Object;)Lcom/google/gson/JsonElement;	a	serializeArg
		p	1		contents
	m	(Ljava/lang/String;)Ltq$a;	a	getByName
		p	0		name
	m	(Ltl;)Ltq;	a	deserializeFromLegacy
		p	1		value
	m	(Ltq$a;)Ltq$a;	a	lambda$static$0
		p	0		action
	m	()Ljava/lang/String;	b	getName
	m	(Ljava/lang/Object;)Ljava/lang/Object;	b	cast
		p	1		o
	f	Ltq$a;	a	SHOW_TEXT
	f	Ltq$a;	b	SHOW_ITEM
	f	Ltq$a;	c	SHOW_ENTITY
	f	Ljava/util/Map;	d	LOOKUP
	f	Ljava/lang/String;	e	name
	f	Z	f	allowFromServer
	f	Ljava/util/function/Function;	g	argDeserializer
	f	Ljava/util/function/Function;	h	argSerializer
	f	Ljava/util/function/Function;	i	legacyArgDeserializer
c	tq$b	net/minecraft/network/chat/HoverEvent$EntityTooltipInfo
	m	(Lbiu;Ljava/util/UUID;Ltl;)V	<init>	<init>
		p	1		entityType
		p	2		uuid
		p	3		name
	m	()Lcom/google/gson/JsonElement;	a	serialize
	m	(Lcom/google/gson/JsonElement;)Ltq$b;	a	create
		p	0		json
	m	(Ltl;)Ltq$b;	a	create
		p	0		text
	m	()Ljava/util/List;	b	getTooltipLines
	f	Lbiu;	a	type
	f	Ljava/util/UUID;	b	id
	f	Ltl;	c	name
	f	Ljava/util/List;	d	linesCache
c	tq$c	net/minecraft/network/chat/HoverEvent$ItemStackInfo
	m	(Lcja;ILqw;)V	<init>	<init>
		p	1		item
		p	2		count
		p	3		nbt
	m	(Lcjf;)V	<init>	<init>
		p	1		stack
	m	()Lcjf;	a	getItemStack
	m	(Lcom/google/gson/JsonElement;)Ltq$c;	a	create
		p	0		json
	m	(Ltl;)Ltq$c;	a	create
		p	0		text
	m	()Lcom/google/gson/JsonElement;	b	serialize
	f	Lcja;	a	item
	f	I	b	count
	f	Lqw;	c	tag
	f	Lcjf;	d	itemStack
c	tr	net/minecraft/network/chat/LastSeenMessages
	m	()Ljava/util/List;	a	entries
	m	(Lasg$a;)V	a	updateSignature
		p	1		updater
	m	(Ltx;)Ltr$a;	a	pack
		p	1		storage
	m	(Ltx;Ltw;)Ltw$a;	a	lambda$pack$0
		p	1		signature
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ltr;	b	EMPTY
	f	I	c	LAST_SEEN_MESSAGES_MAX_LENGTH
	f	Ljava/util/List;	d	entries
c	tr$a	net/minecraft/network/chat/LastSeenMessages$Packed
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Ljava/util/List;	a	entries
	m	(Lso;)V	a	write
		p	1		buf
	m	(Ltx;)Ljava/util/Optional;	a	unpack
		p	1		storage
	f	Ltr$a;	a	EMPTY
	f	Ljava/util/List;	b	entries
c	tr$b	net/minecraft/network/chat/LastSeenMessages$Update
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()I	a	offset
	m	(Lso;)V	a	write
		p	1		buf
	m	()Ljava/util/BitSet;	b	acknowledged
	f	I	a	offset
	f	Ljava/util/BitSet;	b	acknowledged
c	ts	net/minecraft/network/chat/LastSeenMessagesTracker
	m	(I)V	<init>	<init>
		p	1		size
	m	()I	a	getAndClearOffset
	m	(Ltu;)V	a	addEntry
		p	1		message
	m	(Ltw;)V	a	ignorePending
		p	1		signature
	m	(Ltw;Z)Z	a	addPending
		p	1		signature
		p	2		displayed
	m	()Lts$a;	b	generateAndApplyUpdate
	m	()I	c	offset
	f	[Ltu;	a	trackedMessages
	f	I	b	tail
	f	I	c	offset
	f	Ltw;	d	lastTrackedMessage
c	ts$a	net/minecraft/network/chat/LastSeenMessagesTracker$Update
	m	()Ltr;	a	lastSeen
	m	()Ltr$b;	b	update
	f	Ltr;	a	lastSeen
	f	Ltr$b;	b	update
c	tt	net/minecraft/network/chat/LastSeenMessagesValidator
	m	(I)V	<init>	<init>
		p	1		size
	m	()I	a	trackedMessagesCount
	m	(I)Z	a	applyOffset
		p	1		index
	m	(Ltr$b;)Ljava/util/Optional;	a	applyUpdate
		p	1		acknowledgment
	m	(Ltw;)V	a	addPending
		p	1		signature
	f	I	a	lastSeenCount
	f	Lit/unimi/dsi/fastutil/objects/ObjectList;	b	trackedMessages
	f	Ltw;	c	lastPendingMessage
c	tu	net/minecraft/network/chat/LastSeenTrackedEntry
	m	()Ltu;	a	acknowledge
	m	()Ltw;	b	signature
	m	()Z	c	pending
	f	Ltw;	a	signature
	f	Z	b	pending
c	tv	net/minecraft/network/chat/LocalChatSession
	m	()Lub;	a	asRemote
	m	(Lcbw;)Ltv;	a	create
		p	0		keyPair
	m	(Ljava/util/UUID;)Lue$c;	a	createMessageEncoder
		p	1		sender
	m	()Ljava/util/UUID;	b	sessionId
	m	()Lcbw;	c	keyPair
	f	Ljava/util/UUID;	a	sessionId
	f	Lcbw;	b	keyPair
c	tw	net/minecraft/network/chat/MessageSignature
	m	()Ljava/nio/ByteBuffer;	a	asByteBuffer
	m	(Lash;Lasg;)Z	a	verify
		p	1		verifier
		p	2		updatable
	m	(Lso;)Ltw;	a	read
		p	0		buf
	m	(Lso;Ltw;)V	a	write
		p	0		buf
		p	1		signature
	m	(Ltx;)Ltw$a;	a	pack
		p	1		storage
	m	()[B	b	bytes
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	BYTES
	f	[B	c	bytes
c	tw$a	net/minecraft/network/chat/MessageSignature$Packed
	m	(I)V	<init>	<init>
		p	1		id
	m	(Ltw;)V	<init>	<init>
		p	1		signature
	m	()I	a	id
	m	(Lso;)Ltw$a;	a	read
		p	0		buf
	m	(Lso;Ltw$a;)V	a	write
		p	0		buf
		p	1		indexed
	m	(Ltx;)Ljava/util/Optional;	a	unpack
		p	1		storage
	m	()Ltw;	b	fullSignature
	f	I	a	FULL_SIGNATURE
	f	I	b	id
	f	Ltw;	c	fullSignature
c	tx	net/minecraft/network/chat/MessageSignatureCache
	m	(I)V	<init>	<init>
		p	1		maxEntries
	m	()Ltx;	a	createDefault
	m	(I)Ltw;	a	unpack
		p	1		index
	m	(Ljava/util/ArrayDeque;)V	a	push
		p	1		deque
	m	(Ljava/util/List;)V	a	push
		p	1		signatures
	m	(Ltw;)I	a	pack
		p	1		signature
	m	(Lua;)V	a	push
		p	1		message
	f	I	a	NOT_FOUND
	f	I	b	DEFAULT_CAPACITY
	f	[Ltw;	c	entries
c	ty	net/minecraft/network/chat/MutableComponent
	m	(Ltm;Ljava/util/List;Luh;)V	<init>	<init>
		p	1		content
		p	2		siblings
		p	3		style
	m	()Luh;	a	getStyle
	m	(Ljava/util/function/UnaryOperator;)Lty;	a	withStyle
		p	1		styleUpdater
	m	(Ln;)Lty;	a	withStyle
		p	1		formatting
	m	(Ltm;)Lty;	a	create
		p	0		content
	m	([Ln;)Lty;	a	withStyle
		p	1		formattings
	m	()Ltm;	b	getContents
	m	(Ltl;)Lty;	b	append
		p	1		text
	m	(Luh;)Lty;	b	setStyle
		p	1		style
	m	()Ljava/util/List;	c	getSiblings
	m	(Luh;)Lty;	c	withStyle
		p	1		styleOverride
	m	()Larj;	f	getVisualOrderText
	m	(Ljava/lang/String;)Lty;	f	append
		p	1		text
	f	Ltm;	c	contents
	f	Ljava/util/List;	d	siblings
	f	Luh;	e	style
	f	Larj;	f	visualOrderText
	f	Lqr;	g	decomposedWith
c	tz	net/minecraft/network/chat/OutgoingChatMessage
	m	()Ltl;	a	content
	m	(Lakr;ZLth$a;)V	a	sendToPlayer
		p	1		sender
		p	2		filterMaskEnabled
		p	3		params
	m	(Lua;)Ltz;	a	create
		p	0		message
c	tz$a	net/minecraft/network/chat/OutgoingChatMessage$Disguised
	m	()Ltl;	a	content
	m	(Lakr;ZLth$a;)V	a	sendToPlayer
		p	1		sender
		p	2		filterMaskEnabled
		p	3		params
	f	Ltl;	a	content
c	tz$b	net/minecraft/network/chat/OutgoingChatMessage$Player
	m	(Lua;)V	<init>	<init>
		p	1		message
	m	()Ltl;	a	content
	m	(Lakr;ZLth$a;)V	a	sendToPlayer
		p	1		sender
		p	2		filterMaskEnabled
		p	3		params
	m	()Lua;	b	message
	f	Lua;	a	message
c	ua	net/minecraft/network/chat/PlayerChatMessage
	m	()Lua;	a	removeUnsignedContent
	m	(Lasg$a;)V	a	lambda$verify$4
		p	1		updater
	m	(Lasg$a;Luf;Lud;)V	a	updateSignature
		p	0		updater
		p	1		link
		p	2		body
	m	(Lash;)Z	a	verify
		p	1		verifier
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	(Ljava/lang/String;)Lua;	a	system
		p	0		content
	m	(Ljava/time/Instant;)Z	a	hasExpiredServer
		p	1		currentTime
	m	(Ljava/util/UUID;)Z	a	hasSignatureFrom
		p	1		sender
	m	(Ljava/util/UUID;Ljava/lang/String;)Lua;	a	unsigned
		p	0		sender
		p	1		content
	m	(Ltl;)Lua;	a	withUnsignedContent
		p	1		unsignedContent
	m	(Lto;)Lua;	a	filter
		p	1		filterMask
	m	(Lua;)Ljava/util/Optional;	a	lambda$static$1
		p	0		message
	m	(Luf;Ljava/util/Optional;Lud;Ljava/util/Optional;Lto;)Lua;	a	lambda$static$2
		p	0		link
		p	1		signature
		p	2		signedBody
		p	3		unsignedContent
		p	4		filterMask
	m	(Z)Lua;	a	filter
		p	1		enabled
	m	()Ljava/lang/String;	b	signedContent
	m	(Ljava/time/Instant;)Z	b	hasExpiredClient
		p	1		currentTime
	m	(Lua;)Ljava/util/Optional;	b	lambda$static$0
		p	0		message
	m	()Ltl;	c	decoratedContent
	m	()Ljava/time/Instant;	d	timeStamp
	m	()J	e	salt
	m	()Ljava/util/UUID;	f	sender
	m	()Z	g	isSystem
	m	()Z	h	hasSignature
	m	()Z	i	isFullyFiltered
	m	()Luf;	j	link
	m	()Ltw;	k	signature
	m	()Lud;	l	signedBody
	m	()Ltl;	m	unsignedContent
	m	()Lto;	n	filterMask
	m	()Ltl;	o	lambda$decoratedContent$5
	f	Lcom/mojang/serialization/MapCodec;	a	MAP_CODEC
	f	Ljava/time/Duration;	b	MESSAGE_EXPIRES_AFTER_SERVER
	f	Ljava/time/Duration;	c	MESSAGE_EXPIRES_AFTER_CLIENT
	f	Luf;	d	link
	f	Ltw;	e	signature
	f	Lud;	f	signedBody
	f	Ltl;	g	unsignedContent
	f	Lto;	h	filterMask
	f	Ljava/util/UUID;	i	SYSTEM_SENDER
c	ub	net/minecraft/network/chat/RemoteChatSession
	m	()Lub$a;	a	asData
	m	(Ljava/time/Duration;)Lug;	a	createMessageValidator
		p	1		gracePeriod
	m	(Ljava/util/UUID;)Lue$b;	a	createMessageDecoder
		p	1		sender
	m	()Z	b	hasExpired
	m	(Ljava/time/Duration;)Z	b	lambda$createMessageValidator$0
	m	()Ljava/util/UUID;	c	sessionId
	m	()Lcbx;	d	profilePublicKey
	f	Ljava/util/UUID;	a	sessionId
	f	Lcbx;	b	profilePublicKey
c	ub$a	net/minecraft/network/chat/RemoteChatSession$Data
	m	()Ljava/util/UUID;	a	sessionId
	m	(Lcom/mojang/authlib/GameProfile;Lash;)Lub;	a	validate
		p	1		gameProfile
		p	2		servicesSignatureVerifier
	m	(Lso;)Lub$a;	a	read
		p	0		buf
	m	(Lso;Lub$a;)V	a	write
		p	0		buf
		p	1		serialized
	m	()Lcbx$a;	b	profilePublicKey
	f	Ljava/util/UUID;	a	sessionId
	f	Lcbx$a;	b	profilePublicKey
c	uc	net/minecraft/network/chat/SignableCommand
	m	()Ljava/util/List;	a	arguments
	m	(Lcom/mojang/brigadier/ParseResults;)Luc;	a	of
		p	0		parseResults
	m	(Ljava/lang/String;Lcom/mojang/brigadier/context/CommandContextBuilder;)Ljava/util/List;	a	collectArguments
		p	0		argumentName
		p	1		builder
	f	Ljava/util/List;	a	arguments
c	uc$a	net/minecraft/network/chat/SignableCommand$Argument
	m	()Ljava/lang/String;	a	name
	m	()Lcom/mojang/brigadier/tree/ArgumentCommandNode;	b	node
	m	()Ljava/lang/String;	c	value
	f	Lcom/mojang/brigadier/tree/ArgumentCommandNode;	a	node
	f	Ljava/lang/String;	b	value
c	ud	net/minecraft/network/chat/SignedMessageBody
	m	()Ljava/lang/String;	a	content
	m	(Lasg$a;)V	a	updateSignature
		p	1		updater
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ljava/lang/String;)Lud;	a	unsigned
		p	0		content
	m	(Ltx;)Lud$a;	a	pack
		p	1		storage
	m	()Ljava/time/Instant;	b	timeStamp
	m	()J	c	salt
	m	()Ltr;	d	lastSeen
	f	Lcom/mojang/serialization/MapCodec;	a	MAP_CODEC
	f	Ljava/lang/String;	b	content
	f	Ljava/time/Instant;	c	timeStamp
	f	J	d	salt
	f	Ltr;	e	lastSeen
c	ud$a	net/minecraft/network/chat/SignedMessageBody$Packed
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Ljava/lang/String;	a	content
	m	(Lso;)V	a	write
		p	1		buf
	m	(Ltr;)Lud;	a	lambda$unpack$0
		p	1		lastSeenMessages
	m	(Ltx;)Ljava/util/Optional;	a	unpack
		p	1		storage
	m	()Ljava/time/Instant;	b	timeStamp
	m	()J	c	salt
	m	()Ltr$a;	d	lastSeen
	f	Ljava/lang/String;	a	content
	f	Ljava/time/Instant;	b	timeStamp
	f	J	c	salt
	f	Ltr$a;	d	lastSeen
c	ue	net/minecraft/network/chat/SignedMessageChain
	m	(Ljava/util/UUID;Ljava/util/UUID;)V	<init>	<init>
		p	1		sender
		p	2		sessionId
	m	()Luf;	a	advanceLink
	m	(Lasi;)Lue$c;	a	encoder
		p	1		signer
	m	(Lasi;Lud;)Ltw;	a	lambda$encoder$1
		p	2		body
	m	(Lcbx;)Lue$b;	a	decoder
		p	1		playerPublicKey
	m	(Lcbx;Lash;Ltw;Lud;)Lua;	a	lambda$decoder$2
		p	3		signature
		p	4		body
	m	(Luf;Lud;Lasg$a;)V	a	lambda$encoder$0
		p	2		updatable
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Luf;	b	nextLink
c	ue$a	net/minecraft/network/chat/SignedMessageChain$DecodeException
	m	(Ltl;Z)V	<init>	<init>
		p	1		message
		p	2		shouldDisconnect
	m	()Z	a	shouldDisconnect
	f	Z	a	shouldDisconnect
c	ue$b	net/minecraft/network/chat/SignedMessageChain$Decoder
	m	(Ljava/util/UUID;Ltw;Lud;)Lua;	a	lambda$unsigned$1
		p	1		signature
		p	2		body
	m	(Ltw;Lud;)Lua;	a	lambda$static$0
		p	0		signature
		p	1		body
	m	(Ltw;Lud;)Lua;	unpack	unpack
		p	1		signature
		p	2		body
	m	(Ljava/util/UUID;)Lue$b;	unsigned	unsigned
		p	0		uuid
	f	Lue$b;	a	REJECT_ALL
c	ue$c	net/minecraft/network/chat/SignedMessageChain$Encoder
	m	(Lud;)Ltw;	a	lambda$static$0
		p	0		body
	m	(Lud;)Ltw;	pack	pack
		p	1		body
	f	Lue$c;	a	UNSIGNED
c	uf	net/minecraft/network/chat/SignedMessageLink
	m	()Luf;	a	advance
	m	(Lasg$a;)V	a	updateSignature
		p	1		updater
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ljava/util/UUID;)Luf;	a	unsigned
		p	0		sender
	m	(Ljava/util/UUID;Ljava/util/UUID;)Luf;	a	root
		p	0		sender
		p	1		sessionId
	m	(Luf;)Z	a	isDescendantOf
		p	1		preceding
	m	()I	b	index
	m	()Ljava/util/UUID;	c	sender
	m	()Ljava/util/UUID;	d	sessionId
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	index
	f	Ljava/util/UUID;	c	sender
	f	Ljava/util/UUID;	d	sessionId
c	ug	net/minecraft/network/chat/SignedMessageValidator
	m	(Lua;)Z	a	lambda$static$1
		p	0		message
	m	(Lua;)Z	b	lambda$static$0
		p	0		message
	m	(Lua;)Z	updateAndValidate	updateAndValidate
		p	1		message
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lug;	b	ACCEPT_UNSIGNED
	f	Lug;	c	REJECT_ALL
c	ug$a	net/minecraft/network/chat/SignedMessageValidator$KeyBased
	m	(Lash;Ljava/util/function/BooleanSupplier;)V	<init>	<init>
		p	1		signatureVerifier
		p	2		expirationChecker
	m	(Lua;)Z	a	validateChain
		p	1		message
	m	(Lua;)Z	b	validate
		p	1		message
	m	(Lua;)Z	updateAndValidate	updateAndValidate
		p	1		message
	f	Lash;	d	validator
	f	Ljava/util/function/BooleanSupplier;	e	expired
	f	Lua;	f	lastMessage
	f	Z	g	isChainValid
c	uh	net/minecraft/network/chat/Style
	m	(Luj;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Ltj;Ltq;Ljava/lang/String;Laew;)V	<init>	<init>
		p	1		color
		p	2		bold
		p	3		italic
		p	4		underlined
		p	5		strikethrough
		p	6		obfuscated
		p	7		clickEvent
		p	8		hoverEvent
		p	9		insertion
		p	10		font
	m	()Luj;	a	getColor
	m	(I)Luh;	a	withColor
		p	1		rgbColor
	m	(Laew;)Luh;	a	withFont
		p	1		font
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$8
		p	0		instance
	m	(Ljava/lang/Boolean;)Luh;	a	withBold
		p	1		bold
	m	(Ljava/lang/String;)Luh;	a	withInsertion
		p	1		insertion
	m	(Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)Luh;	a	create
		p	0		color
		p	1		bold
		p	2		italic
		p	3		underlined
		p	4		strikethrough
		p	5		obfuscated
		p	6		insertion
		p	7		font
	m	(Ln;)Luh;	a	withColor
		p	1		color
	m	(Ltj;)Luh;	a	withClickEvent
		p	1		clickEvent
	m	(Ltq;)Luh;	a	withHoverEvent
		p	1		hoverEvent
	m	(Luh;)Luh;	a	applyTo
		p	1		parent
	m	(Luj;)Luh;	a	withColor
		p	1		color
	m	([Ln;)Luh;	a	applyFormats
		p	1		formattings
	m	()Z	b	isBold
	m	(Ljava/lang/Boolean;)Luh;	b	withItalic
		p	1		italic
	m	(Ln;)Luh;	b	applyFormat
		p	1		formatting
	m	(Luh;)Ljava/util/Optional;	b	lambda$static$7
		p	0		style
	m	()Z	c	isItalic
	m	(Ljava/lang/Boolean;)Luh;	c	withUnderlined
		p	1		underline
	m	(Ln;)Luh;	c	applyLegacyFormat
		p	1		formatting
	m	(Luh;)Ljava/util/Optional;	c	lambda$static$6
		p	0		style
	m	()Z	d	isStrikethrough
	m	(Ljava/lang/Boolean;)Luh;	d	withStrikethrough
		p	1		strikethrough
	m	(Luh;)Ljava/util/Optional;	d	lambda$static$5
		p	0		style
	m	()Z	e	isUnderlined
	m	(Ljava/lang/Boolean;)Luh;	e	withObfuscated
		p	1		obfuscated
	m	(Luh;)Ljava/util/Optional;	e	lambda$static$4
		p	0		style
	m	()Z	f	isObfuscated
	m	(Luh;)Ljava/util/Optional;	f	lambda$static$3
		p	0		style
	m	()Z	g	isEmpty
	m	(Luh;)Ljava/util/Optional;	g	lambda$static$2
		p	0		style
	m	()Ltj;	h	getClickEvent
	m	(Luh;)Ljava/util/Optional;	h	lambda$static$1
		p	0		style
	m	()Ltq;	i	getHoverEvent
	m	(Luh;)Ljava/util/Optional;	i	lambda$static$0
		p	0		style
	m	()Ljava/lang/String;	j	getInsertion
	m	()Laew;	k	getFont
	f	Luh;	a	EMPTY
	f	Lcom/mojang/serialization/Codec;	b	FORMATTING_CODEC
	f	Laew;	c	DEFAULT_FONT
	f	Luj;	d	color
	f	Ljava/lang/Boolean;	e	bold
	f	Ljava/lang/Boolean;	f	italic
	f	Ljava/lang/Boolean;	g	underlined
	f	Ljava/lang/Boolean;	h	strikethrough
	f	Ljava/lang/Boolean;	i	obfuscated
	f	Ltj;	j	clickEvent
	f	Ltq;	k	hoverEvent
	f	Ljava/lang/String;	l	insertion
	f	Laew;	m	font
c	uh$1	net/minecraft/network/chat/Style$1
	f	[I	a	$SwitchMap$net$minecraft$ChatFormatting
c	uh$a	net/minecraft/network/chat/Style$1Collector
	m	()V	a	prependSeparator
	m	(Ljava/lang/String;Ljava/lang/Boolean;)V	a	addFlagString
		p	1		key
		p	2		value
	m	(Ljava/lang/String;Ljava/lang/Object;)V	a	addValueString
		p	1		key
		p	2		value
	f	Ljava/lang/StringBuilder;	a	val$result
	f	Luh;	b	this$0
	f	Z	c	isNotFirst
c	uh$b	net/minecraft/network/chat/Style$Serializer
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Luh;	a	deserialize
	m	(Lcom/google/gson/JsonObject;)Laew;	a	getFont
		p	0		root
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/lang/Boolean;	a	getOptionalFlag
		p	0		root
		p	1		key
	m	(Luh;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	a	serialize
	m	(Lcom/google/gson/JsonObject;)Ltq;	b	getHoverEvent
		p	0		root
	m	(Lcom/google/gson/JsonObject;)Ltj;	c	getClickEvent
		p	0		root
	m	(Lcom/google/gson/JsonObject;)Ljava/lang/String;	d	getInsertion
		p	0		root
	m	(Lcom/google/gson/JsonObject;)Luj;	e	getTextColor
		p	0		root
c	ui	net/minecraft/network/chat/SubStringSource
	m	(Ljava/lang/String;Ljava/util/List;Lit/unimi/dsi/fastutil/ints/Int2IntFunction;)V	<init>	<init>
		p	1		string
		p	2		styles
		p	3		reverser
	m	()Ljava/lang/String;	a	getPlainText
	m	(I)I	a	lambda$create$0
		p	0		codePoint
	m	(IIZ)Ljava/util/List;	a	substring
		p	1		start
		p	2		length
		p	3		reverse
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$create$1
		p	0		string
	m	(Ljava/lang/StringBuilder;Ljava/util/List;ILuh;I)Z	a	lambda$create$2
		p	2		charIndex
		p	3		stylex
		p	4		codePoint
	m	(Ljava/lang/StringBuilder;Ljava/util/List;Luh;Ljava/lang/String;)Ljava/util/Optional;	a	lambda$create$3
		p	2		style
		p	3		text
	m	(Ltp;)Lui;	a	create
		p	0		visitable
	m	(Ltp;Lit/unimi/dsi/fastutil/ints/Int2IntFunction;Ljava/util/function/UnaryOperator;)Lui;	a	create
		p	0		visitable
		p	1		reverser
		p	2		shaper
	f	Ljava/lang/String;	a	plainText
	f	Ljava/util/List;	b	charStyles
	f	Lit/unimi/dsi/fastutil/ints/Int2IntFunction;	c	reverseCharModifier
c	uj	net/minecraft/network/chat/TextColor
	m	(I)V	<init>	<init>
		p	1		rgb
	m	(ILjava/lang/String;)V	<init>	<init>
		p	1		rgb
		p	2		name
	m	()I	a	getValue
	m	(I)Luj;	a	fromRgb
		p	0		rgb
	m	(Ljava/lang/String;)Luj;	a	parseColor
		p	0		name
	m	(Ln;)Luj;	a	fromLegacyFormat
		p	0		formatting
	m	(Luj;)Ljava/lang/String;	a	lambda$static$3
		p	0		textColor
	m	()Ljava/lang/String;	b	serialize
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	b	lambda$static$1
		p	0		color
	m	(Ln;)Luj;	b	lambda$static$2
		p	0		formatting
	m	()Ljava/lang/String;	c	formatValue
	m	()Ljava/lang/String;	d	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/lang/String;	b	CUSTOM_COLOR_PREFIX
	f	Ljava/util/Map;	c	LEGACY_FORMAT_TO_COLOR
	f	Ljava/util/Map;	d	NAMED_COLORS
	f	I	e	value
	f	Ljava/lang/String;	f	name
c	uk	net/minecraft/network/chat/ThrowingComponent
	m	(Ltl;)V	<init>	<init>
		p	1		messageText
	m	(Ltl;Ljava/lang/Throwable;)V	<init>	<init>
		p	1		messageText
		p	2		cause
	m	()Ltl;	b	getComponent
	f	Ltl;	a	component
c	ul	net/minecraft/network/chat/contents/BlockDataSource
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		rawPath
	m	(Ljava/lang/String;Lfm;)V	<init>	<init>
		p	1		rawPath
	m	()Ljava/lang/String;	a	posPattern
	m	(Ljava/lang/String;)Lfm;	a	compilePos
		p	0		string
	m	()Lfm;	b	compiledPos
	m	(Ldt;)Ljava/util/stream/Stream;	getData	getData
		p	1		source
	f	Ljava/lang/String;	a	posPattern
	f	Lfm;	b	compiledPos
c	um	net/minecraft/network/chat/contents/DataSource
	m	(Ldt;)Ljava/util/stream/Stream;	getData	getData
		p	1		source
c	un	net/minecraft/network/chat/contents/EntityDataSource
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		rawPath
	m	(Ljava/lang/String;Lgc;)V	<init>	<init>
		p	1		rawPath
	m	()Ljava/lang/String;	a	selectorPattern
	m	(Ljava/lang/String;)Lgc;	a	compileSelector
		p	0		rawSelector
	m	()Lgc;	b	compiledSelector
	m	(Ldt;)Ljava/util/stream/Stream;	getData	getData
		p	1		source
	f	Ljava/lang/String;	a	selectorPattern
	f	Lgc;	b	compiledSelector
c	uo	net/minecraft/network/chat/contents/KeybindContents
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		key
	m	()Ljava/lang/String;	a	getName
	m	(Ltp$a;)Ljava/util/Optional;	a	visit
		p	1		visitor
	m	(Ltp$b;Luh;)Ljava/util/Optional;	a	visit
		p	1		visitor
		p	2		style
	m	()Ltl;	b	getNestedComponent
	f	Ljava/lang/String;	b	name
	f	Ljava/util/function/Supplier;	c	nameResolver
c	up	net/minecraft/network/chat/contents/KeybindResolver
	m	(Ljava/lang/String;)Ljava/util/function/Supplier;	a	lambda$static$1
		p	0		key
	m	(Ljava/util/function/Function;)V	a	setKeyResolver
		p	0		factory
	m	(Ljava/lang/String;)Ltl;	b	lambda$static$0
	f	Ljava/util/function/Function;	a	keyResolver
c	uq	net/minecraft/network/chat/contents/LiteralContents
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		string
	m	()Ljava/lang/String;	a	text
	m	(Ltp$a;)Ljava/util/Optional;	a	visit
		p	1		visitor
	m	(Ltp$b;Luh;)Ljava/util/Optional;	a	visit
		p	1		visitor
		p	2		style
	f	Ljava/lang/String;	b	text
c	ur	net/minecraft/network/chat/contents/NbtContents
	m	(Ljava/lang/String;Lej$g;ZLjava/util/Optional;Lum;)V	<init>	<init>
		p	1		rawPath
		p	2		path
		p	3		interpret
		p	4		separator
		p	5		dataSource
	m	(Ljava/lang/String;ZLjava/util/Optional;Lum;)V	<init>	<init>
		p	1		rawPath
		p	2		interpret
		p	3		separator
		p	4		dataSource
	m	()Ljava/lang/String;	a	getNbtPath
	m	(Ldt;Lbiq;I)Lty;	a	resolve
		p	1		source
		p	2		sender
		p	3		depth
	m	(Ldt;Lbiq;ILjava/lang/String;)Ljava/util/stream/Stream;	a	lambda$resolve$1
		p	3		text
	m	(Ljava/lang/String;)Lej$g;	a	compileNbtPath
		p	0		rawPath
	m	(Ljava/util/stream/Stream;)Lty;	a	lambda$resolve$5
	m	(Ljava/util/stream/Stream;Lty;)Lty;	a	lambda$resolve$4
		p	1		text
	m	(Lqw;)Ljava/util/stream/Stream;	a	lambda$resolve$0
		p	1		nbt
	m	(Ltl;Lty;Lty;)Lty;	a	lambda$resolve$2
		p	1		accumulator
		p	2		current
	m	(Lty;Lty;Lty;)Lty;	a	lambda$resolve$3
		p	1		accumulator
		p	2		current
	m	()Z	b	isInterpreting
	m	()Ljava/util/Optional;	c	getSeparator
	m	()Lum;	d	getDataSource
	f	Lej$g;	b	compiledNbtPath
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	Z	d	interpreting
	f	Ljava/util/Optional;	e	separator
	f	Ljava/lang/String;	f	nbtPathPattern
	f	Lum;	g	dataSource
c	us	net/minecraft/network/chat/contents/ScoreContents
	m	(Ljava/lang/String;Ljava/lang/String;)V	<init>	<init>
		p	1		name
		p	2		objective
	m	()Ljava/lang/String;	a	getName
	m	(Ldt;)Ljava/lang/String;	a	findTargetName
		p	1		source
	m	(Ldt;Lbiq;I)Lty;	a	resolve
		p	1		source
		p	2		sender
		p	3		depth
	m	(Ljava/lang/String;)Lgc;	a	parseSelector
		p	0		name
	m	(Ljava/lang/String;Ldt;)Ljava/lang/String;	a	getScore
		p	1		playerName
		p	2		source
	m	()Lgc;	b	getSelector
	m	()Ljava/lang/String;	c	getObjective
	f	Ljava/lang/String;	b	SCORER_PLACEHOLDER
	f	Ljava/lang/String;	c	name
	f	Lgc;	d	selector
	f	Ljava/lang/String;	e	objective
c	ut	net/minecraft/network/chat/contents/SelectorContents
	m	(Ljava/lang/String;Ljava/util/Optional;)V	<init>	<init>
		p	1		pattern
		p	2		separator
	m	()Ljava/lang/String;	a	getPattern
	m	(Ldt;Lbiq;I)Lty;	a	resolve
		p	1		source
		p	2		sender
		p	3		depth
	m	(Ljava/lang/String;)Lgc;	a	parseSelector
		p	0		pattern
	m	(Ltp$a;)Ljava/util/Optional;	a	visit
		p	1		visitor
	m	(Ltp$b;Luh;)Ljava/util/Optional;	a	visit
		p	1		visitor
		p	2		style
	m	()Lgc;	b	getSelector
	m	()Ljava/util/Optional;	c	getSeparator
	f	Ljava/util/Optional;	b	separator
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	Ljava/lang/String;	d	pattern
	f	Lgc;	e	selector
c	uu	net/minecraft/network/chat/contents/StorageDataSource
	m	()Laew;	a	id
	m	(Ldt;)Ljava/util/stream/Stream;	getData	getData
		p	1		source
	f	Laew;	a	id
c	uv	net/minecraft/network/chat/contents/TranslatableContents
	m	(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)V	<init>	<init>
		p	1		key
		p	2		fallback
		p	3		args
	m	()Ljava/lang/String;	a	getKey
	m	(I)Ltp;	a	getArgument
		p	1		index
	m	(Ldt;Lbiq;I)Lty;	a	resolve
		p	1		source
		p	2		sender
		p	3		depth
	m	(Ljava/lang/String;Ljava/util/function/Consumer;)V	a	decomposeTemplate
		p	1		translation
		p	2		partsConsumer
	m	(Ltp$a;)Ljava/util/Optional;	a	visit
		p	1		visitor
	m	(Ltp$b;Luh;)Ljava/util/Optional;	a	visit
		p	1		visitor
		p	2		style
	m	()Ljava/lang/String;	b	getFallback
	m	()[Ljava/lang/Object;	c	getArgs
	m	()V	d	decompose
	f	[Ljava/lang/Object;	b	NO_ARGS
	f	Ltp;	c	TEXT_PERCENT
	f	Ltp;	d	TEXT_NULL
	f	Ljava/lang/String;	e	key
	f	Ljava/lang/String;	f	fallback
	f	[Ljava/lang/Object;	g	args
	f	Lqr;	h	decomposedWith
	f	Ljava/util/List;	i	decomposedParts
	f	Ljava/util/regex/Pattern;	j	FORMAT_PATTERN
c	uw	net/minecraft/network/chat/contents/TranslatableFormatException
	m	(Luv;I)V	<init>	<init>
		p	1		text
		p	2		index
	m	(Luv;Ljava/lang/String;)V	<init>	<init>
		p	1		text
		p	2		message
	m	(Luv;Ljava/lang/Throwable;)V	<init>	<init>
		p	1		text
		p	2		cause
c	ux	net/minecraft/network/chat/contents/package-info
c	uy	net/minecraft/network/chat/package-info
c	uz	net/minecraft/network/package-info
c	va	net/minecraft/network/protocol/BundleDelimiterPacket
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
c	vb	net/minecraft/network/protocol/BundlePacket
	m	(Ljava/lang/Iterable;)V	<init>	<init>
		p	1		packets
	m	()Ljava/lang/Iterable;	a	subPackets
	m	(Lso;)V	a	write
		p	1		buf
	f	Ljava/lang/Iterable;	a	packets
c	vc	net/minecraft/network/protocol/BundlerInfo
	m	(Ljava/lang/Class;Ljava/util/function/Function;Lva;)Lvc;	a	createForPacket
		p	0		bundlePacketType
		p	1		bundleFunction
		p	2		splitter
	m	(Lvd;)Lvc$a;	a	startPacketBundling
		p	1		splitter
	m	(Lvd;Ljava/util/function/Consumer;)V	a	unbundlePacket
		p	1		packet
		p	2		consumer
	f	I	a	BUNDLE_SIZE_LIMIT
	f	Lvc;	b	EMPTY
c	vc$1	net/minecraft/network/protocol/BundlerInfo$1
	m	(Lvd;)Lvc$a;	a	startPacketBundling
		p	1		splitter
	m	(Lvd;Ljava/util/function/Consumer;)V	a	unbundlePacket
		p	1		packet
		p	2		consumer
c	vc$2	net/minecraft/network/protocol/BundlerInfo$2
	m	(Lvd;)Lvc$a;	a	startPacketBundling
		p	1		splitter
	m	(Lvd;Ljava/util/function/Consumer;)V	a	unbundlePacket
		p	1		packet
		p	2		consumer
	f	Ljava/lang/Class;	c	val$bundlePacketCls
	f	Lva;	d	val$delimiterPacket
	f	Ljava/util/function/Function;	e	val$constructor
c	vc$2$1	net/minecraft/network/protocol/BundlerInfo$2$1
	m	(Lvd;)Lvd;	a	addPacket
		p	1		packet
	f	Lvc$2;	a	this$0
	f	Ljava/util/List;	b	bundlePackets
c	vc$a	net/minecraft/network/protocol/BundlerInfo$Bundler
	m	(Lvd;)Lvd;	a	addPacket
		p	1		packet
c	vc$b	net/minecraft/network/protocol/BundlerInfo$Provider
	m	()Lvc;	c	bundlerInfo
c	vd	net/minecraft/network/protocol/Packet
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	()Z	b	isSkippable
	m	()Lsn;	c	nextProtocol
c	ve	net/minecraft/network/protocol/PacketFlow
	m	()Lve;	a	getOpposite
	m	()[Lve;	b	$values
	f	Lve;	a	SERVERBOUND
	f	Lve;	b	CLIENTBOUND
	f	[Lve;	c	$VALUES
c	vf	net/minecraft/network/protocol/PacketUtils
	m	(Lsu;Lvd;)V	a	lambda$ensureRunningOnSameThread$0
	m	(Lvd;Lsu;Lakq;)V	a	ensureRunningOnSameThread
		p	0		packet
		p	1		listener
		p	2		world
	m	(Lvd;Lsu;Lbfo;)V	a	ensureRunningOnSameThread
		p	0		packet
		p	1		listener
		p	2		engine
	f	Lorg/slf4j/Logger;	a	LOGGER
c	vg	net/minecraft/network/protocol/common/ClientCommonPacketListener
	m	(Lvh;)V	a	handleCustomPayload
		p	1		packet
	m	(Lvi;)V	a	handleDisconnect
		p	1		packet
	m	(Lvj;)V	a	handleKeepAlive
		p	1		packet
	m	(Lvk;)V	a	handlePing
		p	1		packet
	m	(Lvl;)V	a	handleResourcePack
		p	1		packet
	m	(Lvm;)V	a	handleUpdateTags
		p	1		packet
c	vh	net/minecraft/network/protocol/common/ClientboundCustomPayloadPacket
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Lvw;	a	payload
	m	(Laew;Lso;)Lvw;	a	readPayload
		p	0		id
		p	1		buf
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lvg;)V	a	handle
		p	1		listener
	m	(Laew;Lso;)Lvx;	b	readUnknownPayload
		p	0		id
		p	1		buf
	f	Lvw;	a	payload
	f	I	b	MAX_PAYLOAD_SIZE
	f	Ljava/util/Map;	c	KNOWN_TYPES
c	vi	net/minecraft/network/protocol/common/ClientboundDisconnectPacket
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	(Ltl;)V	<init>	<init>
		p	1		reason
	m	()Ltl;	a	getReason
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lvg;)V	a	handle
		p	1		listener
	f	Ltl;	a	reason
c	vj	net/minecraft/network/protocol/common/ClientboundKeepAlivePacket
	m	(J)V	<init>	<init>
		p	1		id
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()J	a	getId
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lvg;)V	a	handle
		p	1		listener
	f	J	a	id
c	vk	net/minecraft/network/protocol/common/ClientboundPingPacket
	m	(I)V	<init>	<init>
		p	1		parameter
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()I	a	getId
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lvg;)V	a	handle
		p	1		listener
	f	I	a	id
c	vl	net/minecraft/network/protocol/common/ClientboundResourcePackPacket
	m	(Ljava/lang/String;Ljava/lang/String;ZLtl;)V	<init>	<init>
		p	1		url
		p	2		hash
		p	3		required
		p	4		prompt
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Ljava/lang/String;	a	getUrl
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lvg;)V	a	handle
		p	1		listener
	m	()Ljava/lang/String;	d	getHash
	m	()Z	e	isRequired
	m	()Ltl;	f	getPrompt
	f	I	a	MAX_HASH_LENGTH
	f	Ljava/lang/String;	b	url
	f	Ljava/lang/String;	c	hash
	f	Z	d	required
	f	Ltl;	e	prompt
c	vm	net/minecraft/network/protocol/common/ClientboundUpdateTagsPacket
	m	(Ljava/util/Map;)V	<init>	<init>
		p	1		groups
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Ljava/util/Map;	a	getTags
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lso;Laqk$a;)V	a	lambda$write$0
		p	0		bufx
		p	1		serializedGroup
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lvg;)V	a	handle
		p	1		listener
	f	Ljava/util/Map;	a	tags
c	vn	net/minecraft/network/protocol/common/ServerCommonPacketListener
	m	(Lvo;)V	a	handleClientInformation
		p	1		packet
	m	(Lvp;)V	a	handleCustomPayload
		p	1		packet
	m	(Lvq;)V	a	handleKeepAlive
		p	1		packet
	m	(Lvr;)V	a	handlePong
		p	1		packet
	m	(Lvs;)V	a	handleResourcePackResponse
		p	1		packet
c	vo	net/minecraft/network/protocol/common/ServerboundClientInformationPacket
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Lakf;	a	information
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lvn;)V	a	handle
		p	1		listener
	f	Lakf;	a	information
c	vp	net/minecraft/network/protocol/common/ServerboundCustomPayloadPacket
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Lvw;	a	payload
	m	(Laew;Lso;)Lvw;	a	readPayload
		p	0		id
		p	1		buf
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lvn;)V	a	handle
		p	1		listener
	m	(Laew;Lso;)Lvx;	b	readUnknownPayload
		p	0		id
		p	1		buf
	f	Lvw;	a	payload
	f	I	b	MAX_PAYLOAD_SIZE
	f	Ljava/util/Map;	c	KNOWN_TYPES
c	vq	net/minecraft/network/protocol/common/ServerboundKeepAlivePacket
	m	(J)V	<init>	<init>
		p	1		id
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()J	a	getId
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lvn;)V	a	handle
		p	1		listener
	f	J	a	id
c	vr	net/minecraft/network/protocol/common/ServerboundPongPacket
	m	(I)V	<init>	<init>
		p	1		parameter
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()I	a	getId
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lvn;)V	a	handle
		p	1		listener
	f	I	a	id
c	vs	net/minecraft/network/protocol/common/ServerboundResourcePackPacket
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	(Lvs$a;)V	<init>	<init>
		p	1		status
	m	()Lvs$a;	a	getAction
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lvn;)V	a	handle
		p	1		listener
	f	Lvs$a;	a	action
c	vs$a	net/minecraft/network/protocol/common/ServerboundResourcePackPacket$Action
	m	()[Lvs$a;	a	$values
	f	Lvs$a;	a	SUCCESSFULLY_LOADED
	f	Lvs$a;	b	DECLINED
	f	Lvs$a;	c	FAILED_DOWNLOAD
	f	Lvs$a;	d	ACCEPTED
	f	[Lvs$a;	e	$VALUES
c	vt	net/minecraft/network/protocol/common/custom/BeeDebugPayload
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Laew;	a	id
	m	(Lso;)V	a	write
		p	1		buf
	m	()Lvt$a;	b	beeInfo
	f	Laew;	a	ID
	f	Lvt$a;	b	beeInfo
c	vt$a	net/minecraft/network/protocol/common/custom/BeeDebugPayload$BeeInfo
	m	(Ljava/util/UUID;ILehn;Lebb;Lgw;Lgw;ILjava/util/Set;Ljava/util/List;)V	<init>	<init>
		p	1		uuid
		p	2		entityId
		p	4		path
		p	5		hive
		p	6		flower
		p	7		travelTicks
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Ljava/lang/String;	a	generateName
	m	(Lgw;)Z	a	hasHive
		p	1		pos
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lso;Lebb;)V	a	lambda$write$0
		p	0		buf
		p	1		path
	m	()Ljava/util/UUID;	b	uuid
	m	()I	c	id
	m	()Lehn;	d	pos
	m	()Lebb;	e	path
	m	()Lgw;	f	hivePos
	m	()Lgw;	g	flowerPos
	m	()I	h	travelTicks
	m	()Ljava/util/Set;	i	goals
	m	()Ljava/util/List;	j	blacklistedHives
	f	Ljava/util/UUID;	a	uuid
	f	I	b	id
	f	Lehn;	c	pos
	f	Lebb;	d	path
	f	Lgw;	e	hivePos
	f	Lgw;	f	flowerPos
	f	I	g	travelTicks
	f	Ljava/util/Set;	h	goals
	f	Ljava/util/List;	i	blacklistedHives
c	vu	net/minecraft/network/protocol/common/custom/BrainDebugPayload
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Laew;	a	id
	m	(Lso;)V	a	write
		p	1		buf
	m	()Lvu$a;	b	brainDump
	f	Laew;	a	ID
	f	Lvu$a;	b	brainDump
c	vu$a	net/minecraft/network/protocol/common/custom/BrainDebugPayload$BrainDump
	m	(Ljava/util/UUID;ILjava/lang/String;Ljava/lang/String;IFFLehn;Ljava/lang/String;Lebb;ZILjava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/Set;Ljava/util/Set;)V	<init>	<init>
		p	1		uuid
		p	2		entityId
		p	3		name
		p	4		profession
		p	5		xp
		p	6		health
		p	7		maxHealth
		p	11		wantsGolem
		p	12		angerLevel
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Ljava/util/UUID;	a	uuid
	m	(Lgw;)Z	a	hasPoi
		p	1		pos
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lso;Lebb;)V	a	lambda$write$0
		p	0		buf
		p	1		path
	m	()I	b	id
	m	(Lgw;)Z	b	hasPotentialPoi
		p	1		pos
	m	()Ljava/lang/String;	c	name
	m	()Ljava/lang/String;	d	profession
	m	()I	e	xp
	m	()F	f	health
	m	()F	g	maxHealth
	m	()Lehn;	h	pos
	m	()Ljava/lang/String;	i	inventory
	m	()Lebb;	j	path
	m	()Z	k	wantsGolem
	m	()I	l	angerLevel
	m	()Ljava/util/List;	m	activities
	m	()Ljava/util/List;	n	behaviors
	m	()Ljava/util/List;	o	memories
	m	()Ljava/util/List;	p	gossips
	m	()Ljava/util/Set;	q	pois
	m	()Ljava/util/Set;	r	potentialPois
	f	Ljava/util/UUID;	a	uuid
	f	I	b	id
	f	Ljava/lang/String;	c	name
	f	Ljava/lang/String;	d	profession
	f	I	e	xp
	f	F	f	health
	f	F	g	maxHealth
	f	Lehn;	h	pos
	f	Ljava/lang/String;	i	inventory
	f	Lebb;	j	path
	f	Z	k	wantsGolem
	f	I	l	angerLevel
	f	Ljava/util/List;	m	activities
	f	Ljava/util/List;	n	behaviors
	f	Ljava/util/List;	o	memories
	f	Ljava/util/List;	p	gossips
	f	Ljava/util/Set;	q	pois
	f	Ljava/util/Set;	r	potentialPois
c	vv	net/minecraft/network/protocol/common/custom/BrandPayload
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Laew;	a	id
	m	(Lso;)V	a	write
		p	1		buf
	m	()Ljava/lang/String;	b	brand
	f	Laew;	a	ID
	f	Ljava/lang/String;	b	brand
c	vw	net/minecraft/network/protocol/common/custom/CustomPacketPayload
	m	()Laew;	a	id
	m	(Lso;)V	a	write
		p	1		buf
c	vx	net/minecraft/network/protocol/common/custom/DiscardedPayload
	m	()Laew;	a	id
	m	(Lso;)V	a	write
		p	1		buf
	f	Laew;	a	id
c	vy	net/minecraft/network/protocol/common/custom/GameEventDebugPayload
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Laew;	a	id
	m	(Lso;)V	a	write
		p	1		buf
	m	()Laev;	b	type
	m	()Lehn;	c	pos
	f	Laew;	a	ID
	f	Laev;	b	type
	f	Lehn;	c	pos
c	vz	net/minecraft/network/protocol/common/custom/GameEventListenerDebugPayload
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Laew;	a	id
	m	(Lso;)V	a	write
		p	1		buf
	m	()Ldjx;	b	listenerPos
	m	()I	c	listenerRange
	f	Laew;	a	ID
	f	Ldjx;	b	listenerPos
	f	I	c	listenerRange
c	wa	net/minecraft/network/protocol/common/custom/GameTestAddMarkerDebugPayload
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Laew;	a	id
	m	(Lso;)V	a	write
		p	1		buf
	m	()Lgw;	b	pos
	m	()I	c	color
	m	()Ljava/lang/String;	d	text
	m	()I	e	durationMs
	f	Laew;	a	ID
	f	Lgw;	b	pos
	f	I	c	color
	f	Ljava/lang/String;	d	text
	f	I	e	durationMs
c	wb	net/minecraft/network/protocol/common/custom/GameTestClearMarkersDebugPayload
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Laew;	a	id
	m	(Lso;)V	a	write
		p	1		buf
	f	Laew;	a	ID
c	wc	net/minecraft/network/protocol/common/custom/GoalDebugPayload
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Laew;	a	id
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lso;Lwc$a;)V	a	lambda$write$0
		p	0		buf
		p	1		goal
	m	()I	b	entityId
	m	()Lgw;	c	pos
	m	()Ljava/util/List;	d	goals
	f	Laew;	a	ID
	f	I	b	entityId
	f	Lgw;	c	pos
	f	Ljava/util/List;	d	goals
c	wc$a	net/minecraft/network/protocol/common/custom/GoalDebugPayload$DebugGoal
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()I	a	priority
	m	(Lso;)V	a	write
		p	1		buf
	m	()Z	b	isRunning
	m	()Ljava/lang/String;	c	name
	f	I	a	priority
	f	Z	b	isRunning
	f	Ljava/lang/String;	c	name
c	wd	net/minecraft/network/protocol/common/custom/HiveDebugPayload
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Laew;	a	id
	m	(Lso;)V	a	write
		p	1		buf
	m	()Lwd$a;	b	hiveInfo
	f	Laew;	a	ID
	f	Lwd$a;	b	hiveInfo
c	wd$a	net/minecraft/network/protocol/common/custom/HiveDebugPayload$HiveInfo
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Lgw;	a	pos
	m	(Lso;)V	a	write
		p	1		buf
	m	()Ljava/lang/String;	b	hiveType
	m	()I	c	occupantCount
	m	()I	d	honeyLevel
	m	()Z	e	sedated
	f	Lgw;	a	pos
	f	Ljava/lang/String;	b	hiveType
	f	I	c	occupantCount
	f	I	d	honeyLevel
	f	Z	e	sedated
c	we	net/minecraft/network/protocol/common/custom/NeighborUpdatesDebugPayload
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Laew;	a	id
	m	(Lso;)V	a	write
		p	1		buf
	m	()J	b	time
	m	()Lgw;	c	pos
	f	Laew;	a	ID
	f	J	b	time
	f	Lgw;	c	pos
c	wf	net/minecraft/network/protocol/common/custom/PathfindingDebugPayload
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Laew;	a	id
	m	(Lso;)V	a	write
		p	1		buf
	m	()I	b	entityId
	m	()Lebb;	c	path
	m	()F	d	maxNodeDistance
	f	Laew;	a	ID
	f	I	b	entityId
	f	Lebb;	c	path
	f	F	d	maxNodeDistance
c	wg	net/minecraft/network/protocol/common/custom/PoiAddedDebugPayload
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Laew;	a	id
	m	(Lso;)V	a	write
		p	1		buf
	m	()Lgw;	b	pos
	m	()Ljava/lang/String;	c	type
	m	()I	d	freeTicketCount
	f	Laew;	a	ID
	f	Lgw;	b	pos
	f	Ljava/lang/String;	c	type
	f	I	d	freeTicketCount
c	wh	net/minecraft/network/protocol/common/custom/PoiRemovedDebugPayload
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Laew;	a	id
	m	(Lso;)V	a	write
		p	1		buf
	m	()Lgw;	b	pos
	f	Laew;	a	ID
	f	Lgw;	b	pos
c	wi	net/minecraft/network/protocol/common/custom/PoiTicketCountDebugPayload
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Laew;	a	id
	m	(Lso;)V	a	write
		p	1		buf
	m	()Lgw;	b	pos
	m	()I	c	freeTicketCount
	f	Laew;	a	ID
	f	Lgw;	b	pos
	f	I	c	freeTicketCount
c	wj	net/minecraft/network/protocol/common/custom/RaidsDebugPayload
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Laew;	a	id
	m	(Lso;)V	a	write
		p	1		buf
	m	()Ljava/util/List;	b	raidCenters
	f	Laew;	a	ID
	f	Ljava/util/List;	b	raidCenters
c	wk	net/minecraft/network/protocol/common/custom/StructuresDebugPayload
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Laew;	a	id
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lso;Ldva;)V	a	writeBoundingBox
		p	0		buf
		p	1		box
	m	(Lso;Lso;Lwk$a;)V	a	lambda$write$0
		p	1		buf2
		p	2		piece
	m	()Laev;	b	dimension
	m	(Lso;)Ldva;	b	readBoundingBox
		p	0		buf
	m	()Ldva;	c	mainBB
	m	()Ljava/util/List;	d	pieces
	f	Laew;	a	ID
	f	Laev;	b	dimension
	f	Ldva;	c	mainBB
	f	Ljava/util/List;	d	pieces
c	wk$a	net/minecraft/network/protocol/common/custom/StructuresDebugPayload$PieceInfo
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Ldva;	a	boundingBox
	m	(Lso;)V	a	write
		p	1		buf
	m	()Z	b	isStart
	f	Ldva;	a	boundingBox
	f	Z	b	isStart
c	wl	net/minecraft/network/protocol/common/custom/VillageSectionsDebugPayload
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Laew;	a	id
	m	(Lso;)V	a	write
		p	1		buf
	m	()Ljava/util/Set;	b	villageChunks
	m	()Ljava/util/Set;	c	notVillageChunks
	f	Laew;	a	ID
	f	Ljava/util/Set;	b	villageChunks
	f	Ljava/util/Set;	c	notVillageChunks
c	wm	net/minecraft/network/protocol/common/custom/WorldGenAttemptDebugPayload
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Laew;	a	id
	m	(Lso;)V	a	write
		p	1		buf
	m	()Lgw;	b	pos
	m	()F	c	scale
	m	()F	d	red
	m	()F	e	green
	m	()F	f	blue
	m	()F	g	alpha
	f	Laew;	a	ID
	f	Lgw;	b	pos
	f	F	c	scale
	f	F	d	red
	f	F	e	green
	f	F	f	blue
	f	F	g	alpha
c	wn	net/minecraft/network/protocol/common/custom/package-info
c	wo	net/minecraft/network/protocol/common/package-info
c	wp	net/minecraft/network/protocol/configuration/ClientConfigurationPacketListener
	m	(Lwq;)V	a	handleConfigurationFinished
		p	1		packet
	m	(Lwr;)V	a	handleRegistryData
		p	1		packet
	m	(Lws;)V	a	handleEnabledFeatures
		p	1		packet
	m	()Lsn;	b	protocol
c	wq	net/minecraft/network/protocol/configuration/ClientboundFinishConfigurationPacket
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lwp;)V	a	handle
		p	1		listener
	m	()Lsn;	c	nextProtocol
c	wr	net/minecraft/network/protocol/configuration/ClientboundRegistryDataPacket
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Lhr$b;	a	registryHolder
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lwp;)V	a	handle
		p	1		listener
	f	Lhr$b;	a	registryHolder
	f	Laeu;	b	BUILTIN_CONTEXT_OPS
c	ws	net/minecraft/network/protocol/configuration/ClientboundUpdateEnabledFeaturesPacket
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Ljava/util/Set;	a	features
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lwp;)V	a	handle
		p	1		listener
	f	Ljava/util/Set;	a	features
c	wt	net/minecraft/network/protocol/configuration/ServerConfigurationPacketListener
	m	(Lwu;)V	a	handleConfigurationFinished
		p	1		packet
	m	()Lsn;	b	protocol
c	wu	net/minecraft/network/protocol/configuration/ServerboundFinishConfigurationPacket
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lwt;)V	a	handle
		p	1		listener
	m	()Lsn;	c	nextProtocol
c	wv	net/minecraft/network/protocol/configuration/package-info
c	ww	net/minecraft/network/protocol/game/ClientGamePacketListener
	m	(Laaa;)V	a	handleSetEquipment
		p	1		packet
	m	(Laab;)V	a	handleSetExperience
		p	1		packet
	m	(Laac;)V	a	handleSetHealth
		p	1		packet
	m	(Laad;)V	a	handleAddObjective
		p	1		packet
	m	(Laae;)V	a	handleSetEntityPassengersPacket
		p	1		packet
	m	(Laaf;)V	a	handleSetPlayerTeamPacket
		p	1		packet
	m	(Laag;)V	a	handleSetScore
		p	1		packet
	m	(Laah;)V	a	handleSetSimulationDistance
		p	1		packet
	m	(Laai;)V	a	setSubtitleText
		p	1		packet
	m	(Laaj;)V	a	handleSetTime
		p	1		packet
	m	(Laak;)V	a	setTitleText
		p	1		packet
	m	(Laal;)V	a	setTitlesAnimation
		p	1		packet
	m	(Laam;)V	a	handleSoundEntityEvent
		p	1		packet
	m	(Laan;)V	a	handleSoundEvent
		p	1		packet
	m	(Laao;)V	a	handleConfigurationStart
		p	1		packet
	m	(Laap;)V	a	handleStopSoundEvent
		p	1		packet
	m	(Laaq;)V	a	handleSystemChat
		p	1		packet
	m	(Laar;)V	a	handleTabListCustomisation
		p	1		packet
	m	(Laas;)V	a	handleTagQueryPacket
		p	1		packet
	m	(Laat;)V	a	handleTakeItemEntity
		p	1		packet
	m	(Laau;)V	a	handleTeleportEntity
		p	1		packet
	m	(Laav;)V	a	handleUpdateAdvancementsPacket
		p	1		packet
	m	(Laaw;)V	a	handleUpdateAttributes
		p	1		packet
	m	(Laax;)V	a	handleUpdateMobEffect
		p	1		packet
	m	(Laay;)V	a	handleUpdateRecipes
		p	1		packet
	m	(Lwx;)V	a	handleAddEntity
		p	1		packet
	m	(Lwy;)V	a	handleAddExperienceOrb
		p	1		packet
	m	(Lwz;)V	a	handleAnimate
		p	1		packet
	m	(Lxa;)V	a	handleAwardStats
		p	1		packet
	m	(Lxb;)V	a	handleBlockChangedAck
		p	1		packet
	m	(Lxc;)V	a	handleBlockDestruction
		p	1		packet
	m	(Lxd;)V	a	handleBlockEntityData
		p	1		packet
	m	(Lxe;)V	a	handleBlockEvent
		p	1		packet
	m	(Lxf;)V	a	handleBlockUpdate
		p	1		packet
	m	(Lxg;)V	a	handleBossUpdate
		p	1		packet
	m	(Lxh;)V	a	handleBundlePacket
		p	1		packet
	m	(Lxi;)V	a	handleChangeDifficulty
		p	1		packet
	m	(Lxj;)V	a	handleChunkBatchFinished
		p	1		packet
	m	(Lxk;)V	a	handleChunkBatchStart
		p	1		packet
	m	(Lxl;)V	a	handleChunksBiomes
		p	1		packet
	m	(Lxm;)V	a	handleTitlesClear
		p	1		packet
	m	(Lxn;)V	a	handleCommandSuggestions
		p	1		packet
	m	(Lxo;)V	a	handleCommands
		p	1		packet
	m	(Lxp;)V	a	handleContainerClose
		p	1		packet
	m	(Lxq;)V	a	handleContainerContent
		p	1		packet
	m	(Lxr;)V	a	handleContainerSetData
		p	1		packet
	m	(Lxs;)V	a	handleContainerSetSlot
		p	1		packet
	m	(Lxt;)V	a	handleItemCooldown
		p	1		packet
	m	(Lxu;)V	a	handleCustomChatCompletions
		p	1		packet
	m	(Lxv;)V	a	handleDamageEvent
		p	1		packet
	m	(Lxw;)V	a	handleDeleteChat
		p	1		packet
	m	(Lxx;)V	a	handleDisguisedChat
		p	1		packet
	m	(Lxy;)V	a	handleEntityEvent
		p	1		packet
	m	(Lxz;)V	a	handleExplosion
		p	1		packet
	m	(Lya;)V	a	handleForgetLevelChunk
		p	1		packet
	m	(Lyb;)V	a	handleGameEvent
		p	1		packet
	m	(Lyc;)V	a	handleHorseScreenOpen
		p	1		packet
	m	(Lyd;)V	a	handleHurtAnimation
		p	1		packet
	m	(Lye;)V	a	handleInitializeBorder
		p	1		packet
	m	(Lyg;)V	a	handleLevelChunkWithLight
		p	1		packet
	m	(Lyh;)V	a	handleLevelEvent
		p	1		packet
	m	(Lyi;)V	a	handleParticleEvent
		p	1		packet
	m	(Lyj;)V	a	handleLightUpdatePacket
		p	1		packet
	m	(Lyl;)V	a	handleLogin
		p	1		packet
	m	(Lym;)V	a	handleMapItemData
		p	1		packet
	m	(Lyn;)V	a	handleMerchantOffers
		p	1		packet
	m	(Lyo;)V	a	handleMoveEntity
		p	1		packet
	m	(Lyp;)V	a	handleMoveVehicle
		p	1		packet
	m	(Lyq;)V	a	handleOpenBook
		p	1		packet
	m	(Lyr;)V	a	handleOpenScreen
		p	1		packet
	m	(Lys;)V	a	handleOpenSignEditor
		p	1		packet
	m	(Lyt;)V	a	handlePlaceRecipe
		p	1		packet
	m	(Lyu;)V	a	handlePlayerAbilities
		p	1		packet
	m	(Lyv;)V	a	handlePlayerChat
		p	1		packet
	m	(Lyw;)V	a	handlePlayerCombatEnd
		p	1		packet
	m	(Lyx;)V	a	handlePlayerCombatEnter
		p	1		packet
	m	(Lyy;)V	a	handlePlayerCombatKill
		p	1		packet
	m	(Lyz;)V	a	handlePlayerInfoRemove
		p	1		packet
	m	(Lza;)V	a	handlePlayerInfoUpdate
		p	1		packet
	m	(Lzb;)V	a	handleLookAt
		p	1		packet
	m	(Lzc;)V	a	handleMovePlayer
		p	1		packet
	m	(Lzd;)V	a	handleAddOrRemoveRecipes
		p	1		packet
	m	(Lze;)V	a	handleRemoveEntities
		p	1		packet
	m	(Lzf;)V	a	handleRemoveMobEffect
		p	1		packet
	m	(Lzg;)V	a	handleRespawn
		p	1		packet
	m	(Lzh;)V	a	handleRotateMob
		p	1		packet
	m	(Lzi;)V	a	handleChunkBlocksUpdate
		p	1		packet
	m	(Lzj;)V	a	handleSelectAdvancementsTab
		p	1		packet
	m	(Lzk;)V	a	handleServerData
		p	1		packet
	m	(Lzl;)V	a	setActionBarText
		p	1		packet
	m	(Lzm;)V	a	handleSetBorderCenter
		p	1		packet
	m	(Lzn;)V	a	handleSetBorderLerpSize
		p	1		packet
	m	(Lzo;)V	a	handleSetBorderSize
		p	1		packet
	m	(Lzp;)V	a	handleSetBorderWarningDelay
		p	1		packet
	m	(Lzq;)V	a	handleSetBorderWarningDistance
		p	1		packet
	m	(Lzr;)V	a	handleSetCamera
		p	1		packet
	m	(Lzs;)V	a	handleSetCarriedItem
		p	1		packet
	m	(Lzt;)V	a	handleSetChunkCacheCenter
		p	1		packet
	m	(Lzu;)V	a	handleSetChunkCacheRadius
		p	1		packet
	m	(Lzv;)V	a	handleSetSpawn
		p	1		packet
	m	(Lzw;)V	a	handleSetDisplayObjective
		p	1		packet
	m	(Lzx;)V	a	handleSetEntityData
		p	1		packet
	m	(Lzy;)V	a	handleEntityLinkPacket
		p	1		packet
	m	(Lzz;)V	a	handleSetEntityMotion
		p	1		packet
	m	()Lsn;	b	protocol
c	wx	net/minecraft/network/protocol/game/ClientboundAddEntityPacket
	m	(ILjava/util/UUID;DDDFFLbiu;ILehn;D)V	<init>	<init>
		p	1		id
		p	2		uuid
		p	3		x
		p	5		y
		p	7		z
		p	9		pitch
		p	10		yaw
		p	11		entityType
		p	12		entityData
		p	13		velocity
		p	14		headYaw
	m	(Lbiq;)V	<init>	<init>
		p	1		entity
	m	(Lbiq;I)V	<init>	<init>
		p	1		entity
		p	2		entityData
	m	(Lbiq;ILgw;)V	<init>	<init>
		p	1		entity
		p	2		entityData
		p	3		pos
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()I	a	getId
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	m	()Ljava/util/UUID;	d	getUUID
	m	()Lbiu;	e	getType
	m	()D	f	getX
	m	()D	g	getY
	m	()D	h	getZ
	m	()D	i	getXa
	m	()D	j	getYa
	m	()D	k	getZa
	m	()F	l	getXRot
	m	()F	m	getYRot
	m	()F	n	getYHeadRot
	m	()I	o	getData
	f	D	a	MAGICAL_QUANTIZATION
	f	D	b	LIMIT
	f	I	c	id
	f	Ljava/util/UUID;	d	uuid
	f	Lbiu;	e	type
	f	D	f	x
	f	D	g	y
	f	D	h	z
	f	I	i	xa
	f	I	j	ya
	f	I	k	za
	f	B	l	xRot
	f	B	m	yRot
	f	B	n	yHeadRot
	f	I	o	data
c	wy	net/minecraft/network/protocol/game/ClientboundAddExperienceOrbPacket
	m	(Lbiw;)V	<init>	<init>
		p	1		experienceOrbEntity
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()I	a	getId
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	m	()D	d	getX
	m	()D	e	getY
	m	()D	f	getZ
	m	()I	g	getValue
	f	I	a	id
	f	D	b	x
	f	D	c	y
	f	D	d	z
	f	I	e	value
c	wz	net/minecraft/network/protocol/game/ClientboundAnimatePacket
	m	(Lbiq;I)V	<init>	<init>
		p	1		entity
		p	2		animationId
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()I	a	getId
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	m	()I	d	getAction
	f	I	a	SWING_MAIN_HAND
	f	I	b	WAKE_UP
	f	I	c	SWING_OFF_HAND
	f	I	d	CRITICAL_HIT
	f	I	e	MAGIC_CRITICAL_HIT
	f	I	f	id
	f	I	g	action
c	xa	net/minecraft/network/protocol/game/ClientboundAwardStatsPacket
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntMap;)V	<init>	<init>
		p	1		stats
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Ljava/util/Map;	a	getStats
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lso;Lapk;)V	a	writeStatCap
		p	0		buf
		p	1		stat
	m	(Lso;Lapm;)Lapk;	a	readStatCap
		p	0		buf
		p	1		statType
	m	(Lso;Lso;)Lapk;	a	lambda$new$0
		p	1		bufx
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	a	stats
c	xb	net/minecraft/network/protocol/game/ClientboundBlockChangedAckPacket
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()I	a	sequence
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	f	I	a	sequence
c	xc	net/minecraft/network/protocol/game/ClientboundBlockDestructionPacket
	m	(ILgw;I)V	<init>	<init>
		p	1		entityId
		p	2		pos
		p	3		progress
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()I	a	getId
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	m	()Lgw;	d	getPos
	m	()I	e	getProgress
	f	I	a	id
	f	Lgw;	b	pos
	f	I	c	progress
c	xd	net/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket
	m	(Lgw;Ldcx;Lqw;)V	<init>	<init>
		p	1		pos
		p	2		blockEntityType
		p	3		nbt
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Lgw;	a	getPos
	m	(Ldcv;)Lxd;	a	create
		p	0		blockEntity
	m	(Ldcv;Ljava/util/function/Function;)Lxd;	a	create
		p	0		blockEntity
		p	1		nbtGetter
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	m	()Ldcx;	d	getType
	m	()Lqw;	e	getTag
	f	Lgw;	a	pos
	f	Ldcx;	b	type
	f	Lqw;	c	tag
c	xe	net/minecraft/network/protocol/game/ClientboundBlockEventPacket
	m	(Lgw;Lcsv;II)V	<init>	<init>
		p	1		pos
		p	2		block
		p	3		type
		p	4		data
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Lgw;	a	getPos
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	m	()I	d	getB0
	m	()I	e	getB1
	m	()Lcsv;	f	getBlock
	f	Lgw;	a	pos
	f	I	b	b0
	f	I	c	b1
	f	Lcsv;	d	block
c	xf	net/minecraft/network/protocol/game/ClientboundBlockUpdatePacket
	m	(Lcpb;Lgw;)V	<init>	<init>
		p	1		world
		p	2		pos
	m	(Lgw;Ldfj;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Ldfj;	a	getBlockState
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	m	()Lgw;	d	getPos
	f	Lgw;	a	pos
	f	Ldfj;	b	blockState
c	xg	net/minecraft/network/protocol/game/ClientboundBossEventPacket
	m	(Ljava/util/UUID;Lxg$c;)V	<init>	<init>
		p	1		uuid
		p	2		action
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	(Lbgo;)Lxg;	a	createAddPacket
		p	0		bar
	m	(Ljava/util/UUID;)Lxg;	a	createRemovePacket
		p	0		uuid
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	m	(Lxg$b;)V	a	dispatch
		p	1		consumer
	m	(ZZZ)I	a	encodeProperties
		p	0		darkenSky
		p	1		dragonMusic
		p	2		thickenFog
	m	(Lbgo;)Lxg;	b	createUpdateProgressPacket
		p	0		bar
	m	(Lbgo;)Lxg;	c	createUpdateNamePacket
		p	0		bar
	m	(Lbgo;)Lxg;	d	createUpdateStylePacket
		p	0		bar
	m	(Lbgo;)Lxg;	e	createUpdatePropertiesPacket
		p	0		bar
	f	I	a	FLAG_DARKEN
	f	I	b	FLAG_MUSIC
	f	I	c	FLAG_FOG
	f	Ljava/util/UUID;	d	id
	f	Lxg$c;	e	operation
	f	Lxg$c;	f	REMOVE_OPERATION
c	xg$1	net/minecraft/network/protocol/game/ClientboundBossEventPacket$1
	m	()Lxg$d;	a	getType
	m	(Ljava/util/UUID;Lxg$b;)V	a	dispatch
		p	1		uuid
		p	2		consumer
	m	(Lso;)V	a	write
		p	1		buf
c	xg$a	net/minecraft/network/protocol/game/ClientboundBossEventPacket$AddOperation
	m	(Lbgo;)V	<init>	<init>
		p	1		bar
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Lxg$d;	a	getType
	m	(Ljava/util/UUID;Lxg$b;)V	a	dispatch
		p	1		uuid
		p	2		consumer
	m	(Lso;)V	a	write
		p	1		buf
	f	Ltl;	a	name
	f	F	b	progress
	f	Lbgo$a;	c	color
	f	Lbgo$b;	d	overlay
	f	Z	e	darkenScreen
	f	Z	f	playMusic
	f	Z	g	createWorldFog
c	xg$b	net/minecraft/network/protocol/game/ClientboundBossEventPacket$Handler
	m	(Ljava/util/UUID;)V	a	remove
		p	1		uuid
	m	(Ljava/util/UUID;F)V	a	updateProgress
		p	1		uuid
		p	2		percent
	m	(Ljava/util/UUID;Lbgo$a;Lbgo$b;)V	a	updateStyle
		p	1		id
		p	2		color
		p	3		style
	m	(Ljava/util/UUID;Ltl;)V	a	updateName
		p	1		uuid
		p	2		name
	m	(Ljava/util/UUID;Ltl;FLbgo$a;Lbgo$b;ZZZ)V	a	add
		p	1		uuid
		p	2		name
		p	3		percent
		p	4		color
		p	5		style
		p	6		darkenSky
		p	7		dragonMusic
		p	8		thickenFog
	m	(Ljava/util/UUID;ZZZ)V	a	updateProperties
		p	1		uuid
		p	2		darkenSky
		p	3		dragonMusic
		p	4		thickenFog
c	xg$c	net/minecraft/network/protocol/game/ClientboundBossEventPacket$Operation
	m	()Lxg$d;	a	getType
	m	(Ljava/util/UUID;Lxg$b;)V	a	dispatch
		p	1		uuid
		p	2		consumer
	m	(Lso;)V	a	write
		p	1		buf
c	xg$d	net/minecraft/network/protocol/game/ClientboundBossEventPacket$OperationType
	m	(Ljava/lang/String;ILjava/util/function/Function;)V	<init>	<init>
		p	3		parser
	m	()[Lxg$d;	a	$values
	m	(Lso;)Lxg$c;	a	lambda$static$0
		p	0		buf
	f	Lxg$d;	a	ADD
	f	Lxg$d;	b	REMOVE
	f	Lxg$d;	c	UPDATE_PROGRESS
	f	Lxg$d;	d	UPDATE_NAME
	f	Lxg$d;	e	UPDATE_STYLE
	f	Lxg$d;	f	UPDATE_PROPERTIES
	f	Ljava/util/function/Function;	g	reader
	f	[Lxg$d;	h	$VALUES
c	xg$e	net/minecraft/network/protocol/game/ClientboundBossEventPacket$UpdateNameOperation
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	(Ltl;)V	<init>	<init>
		p	1		name
	m	()Lxg$d;	a	getType
	m	(Ljava/util/UUID;Lxg$b;)V	a	dispatch
		p	1		uuid
		p	2		consumer
	m	(Lso;)V	a	write
		p	1		buf
	f	Ltl;	a	name
c	xg$f	net/minecraft/network/protocol/game/ClientboundBossEventPacket$UpdateProgressOperation
	m	(F)V	<init>	<init>
		p	1		percent
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Lxg$d;	a	getType
	m	(Ljava/util/UUID;Lxg$b;)V	a	dispatch
		p	1		uuid
		p	2		consumer
	m	(Lso;)V	a	write
		p	1		buf
	f	F	a	progress
c	xg$g	net/minecraft/network/protocol/game/ClientboundBossEventPacket$UpdatePropertiesOperation
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	(ZZZ)V	<init>	<init>
		p	1		darkenSky
		p	2		dragonMusic
		p	3		thickenFog
	m	()Lxg$d;	a	getType
	m	(Ljava/util/UUID;Lxg$b;)V	a	dispatch
		p	1		uuid
		p	2		consumer
	m	(Lso;)V	a	write
		p	1		buf
	f	Z	a	darkenScreen
	f	Z	b	playMusic
	f	Z	c	createWorldFog
c	xg$h	net/minecraft/network/protocol/game/ClientboundBossEventPacket$UpdateStyleOperation
	m	(Lbgo$a;Lbgo$b;)V	<init>	<init>
		p	1		color
		p	2		style
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Lxg$d;	a	getType
	m	(Ljava/util/UUID;Lxg$b;)V	a	dispatch
		p	1		uuid
		p	2		consumer
	m	(Lso;)V	a	write
		p	1		buf
	f	Lbgo$a;	a	color
	f	Lbgo$b;	b	overlay
c	xh	net/minecraft/network/protocol/game/ClientboundBundlePacket
	m	(Ljava/lang/Iterable;)V	<init>	<init>
		p	1		packets
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
c	xi	net/minecraft/network/protocol/game/ClientboundChangeDifficultyPacket
	m	(Lbgv;Z)V	<init>	<init>
		p	1		difficulty
		p	2		difficultyLocked
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Z	a	isLocked
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	m	()Lbgv;	d	getDifficulty
	f	Lbgv;	a	difficulty
	f	Z	b	locked
c	xj	net/minecraft/network/protocol/game/ClientboundChunkBatchFinishedPacket
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()I	a	batchSize
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	f	I	a	batchSize
c	xk	net/minecraft/network/protocol/game/ClientboundChunkBatchStartPacket
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
c	xl	net/minecraft/network/protocol/game/ClientboundChunksBiomesPacket
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Ljava/util/List;	a	chunkBiomeData
	m	(Ljava/util/List;)Lxl;	a	forChunks
		p	0		chunks
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lso;Lxl$a;)V	a	lambda$write$0
		p	0		bufx
		p	1		data
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	f	Ljava/util/List;	a	chunkBiomeData
	f	I	b	TWO_MEGABYTES
c	xl$a	net/minecraft/network/protocol/game/ClientboundChunksBiomesPacket$ChunkBiomeData
	m	(Ldhq;)V	<init>	<init>
		p	1		chunk
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Lso;	a	getReadBuffer
	m	(Ldhq;)I	a	calculateChunkSize
		p	0		chunk
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lso;Ldhq;)V	a	extractChunkData
		p	0		buf
		p	1		chunk
	m	()Lcpc;	b	pos
	m	()[B	c	buffer
	m	()Lio/netty/buffer/ByteBuf;	d	getWriteBuffer
	f	Lcpc;	a	pos
	f	[B	b	buffer
c	xm	net/minecraft/network/protocol/game/ClientboundClearTitlesPacket
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	(Z)V	<init>	<init>
		p	1		reset
	m	()Z	a	shouldResetTimes
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	f	Z	a	resetTimes
c	xn	net/minecraft/network/protocol/game/ClientboundCommandSuggestionsPacket
	m	(ILcom/mojang/brigadier/suggestion/Suggestions;)V	<init>	<init>
		p	1		completionId
		p	2		suggestions
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()I	a	getId
	m	(Lcom/mojang/brigadier/context/StringRange;Lso;)Lcom/mojang/brigadier/suggestion/Suggestion;	a	lambda$new$0
		p	1		buf2
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lso;Lcom/mojang/brigadier/Message;)V	a	lambda$write$1
		p	0		buf3
		p	1		tooltip
	m	(Lso;Lcom/mojang/brigadier/suggestion/Suggestion;)V	a	lambda$write$2
		p	0		buf2
		p	1		suggestion
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	m	()Lcom/mojang/brigadier/suggestion/Suggestions;	d	getSuggestions
	f	I	a	id
	f	Lcom/mojang/brigadier/suggestion/Suggestions;	b	suggestions
c	xo	net/minecraft/network/protocol/game/ClientboundCommandsPacket
	m	(Lcom/mojang/brigadier/tree/RootCommandNode;)V	<init>	<init>
		p	1		rootNode
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	(Lcom/mojang/brigadier/tree/CommandNode;Lit/unimi/dsi/fastutil/objects/Object2IntMap;)Lxo$b;	a	createEntry
		p	0		node
		p	1		nodes
	m	(Lcom/mojang/brigadier/tree/RootCommandNode;)Lit/unimi/dsi/fastutil/objects/Object2IntMap;	a	enumerateNodes
		p	0		commandTree
	m	(Ldn;)Lcom/mojang/brigadier/tree/RootCommandNode;	a	getRoot
		p	1		commandRegistryAccess
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntMap;)Ljava/util/List;	a	createEntries
		p	0		nodes
	m	(Ljava/util/List;)V	a	validateEntries
		p	0		nodeDatas
	m	(Ljava/util/List;Ljava/util/function/BiPredicate;)V	a	validateEntries
		p	0		nodeDatas
		p	1		validator
	m	(Ljava/util/function/BiPredicate;Ljava/util/List;Lit/unimi/dsi/fastutil/ints/IntSet;I)Z	a	lambda$validateEntries$1
		p	0		index
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lso;B)Lxo$e;	a	read
		p	0		buf
		p	1		flags
	m	(Lso;Lxo$b;)V	a	lambda$write$0
		p	0		buf2
		p	1		node
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	m	(Lso;)Lxo$b;	b	readNode
		p	0		buf
	f	B	a	MASK_TYPE
	f	B	b	FLAG_EXECUTABLE
	f	B	c	FLAG_REDIRECT
	f	B	d	FLAG_CUSTOM_SUGGESTIONS
	f	B	e	TYPE_ROOT
	f	B	f	TYPE_LITERAL
	f	B	g	TYPE_ARGUMENT
	f	I	h	rootIndex
	f	Ljava/util/List;	i	entries
c	xo$a	net/minecraft/network/protocol/game/ClientboundCommandsPacket$ArgumentNodeStub
	m	(Lcom/mojang/brigadier/tree/ArgumentCommandNode;)V	<init>	<init>
		p	1		node
	m	(Ljava/lang/String;Lgi$a;Laew;)V	<init>	<init>
		p	1		name
		p	2		properties
		p	3		id
	m	(Lcom/mojang/brigadier/suggestion/SuggestionProvider;)Laew;	a	getSuggestionId
		p	0		provider
	m	(Ldn;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	build
		p	1		commandRegistryAccess
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lso;Lgi$a;)V	a	serializeCap
		p	0		buf
		p	1		properties
	m	(Lso;Lgi;Lgi$a;)V	a	serializeCap
		p	0		buf
		p	1		serializer
		p	2		properties
	f	Ljava/lang/String;	a	id
	f	Lgi$a;	b	argumentType
	f	Laew;	c	suggestionId
c	xo$b	net/minecraft/network/protocol/game/ClientboundCommandsPacket$Entry
	m	(Lxo$e;II[I)V	<init>	<init>
		p	1		suggestableNode
		p	2		flags
		p	3		redirectNodeIndex
		p	4		childNodeIndices
	m	(Lit/unimi/dsi/fastutil/ints/IntSet;)Z	a	canBuild
		p	1		indices
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lit/unimi/dsi/fastutil/ints/IntSet;)Z	b	canResolve
		p	1		indices
	f	Lxo$e;	a	stub
	f	I	b	flags
	f	I	c	redirect
	f	[I	d	children
c	xo$c	net/minecraft/network/protocol/game/ClientboundCommandsPacket$LiteralNodeStub
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		literal
	m	(Ldn;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	build
		p	1		commandRegistryAccess
	m	(Lso;)V	a	write
		p	1		buf
	f	Ljava/lang/String;	a	id
c	xo$d	net/minecraft/network/protocol/game/ClientboundCommandsPacket$NodeResolver
	m	(Ldn;Ljava/util/List;)V	<init>	<init>
		p	1		commandRegistryAccess
		p	2		nodeDatas
	m	(I)Lcom/mojang/brigadier/tree/CommandNode;	a	resolve
		p	1		index
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$resolve$0
		p	0		context
	f	Ldn;	a	context
	f	Ljava/util/List;	b	entries
	f	Ljava/util/List;	c	nodes
c	xo$e	net/minecraft/network/protocol/game/ClientboundCommandsPacket$NodeStub
	m	(Ldn;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	build
		p	1		commandRegistryAccess
	m	(Lso;)V	a	write
		p	1		buf
c	xp	net/minecraft/network/protocol/game/ClientboundContainerClosePacket
	m	(I)V	<init>	<init>
		p	1		syncId
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()I	a	getContainerId
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	f	I	a	containerId
c	xq	net/minecraft/network/protocol/game/ClientboundContainerSetContentPacket
	m	(IILhn;Lcjf;)V	<init>	<init>
		p	1		syncId
		p	2		revision
		p	3		contents
		p	4		cursorStack
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()I	a	getContainerId
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	m	()Ljava/util/List;	d	getItems
	m	()Lcjf;	e	getCarriedItem
	m	()I	f	getStateId
	f	I	a	containerId
	f	I	b	stateId
	f	Ljava/util/List;	c	items
	f	Lcjf;	d	carriedItem
c	xr	net/minecraft/network/protocol/game/ClientboundContainerSetDataPacket
	m	(III)V	<init>	<init>
		p	1		syncId
		p	2		propertyId
		p	3		value
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()I	a	getContainerId
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	m	()I	d	getId
	m	()I	e	getValue
	f	I	a	containerId
	f	I	b	id
	f	I	c	value
c	xs	net/minecraft/network/protocol/game/ClientboundContainerSetSlotPacket
	m	(IIILcjf;)V	<init>	<init>
		p	1		syncId
		p	2		revision
		p	3		slot
		p	4		stack
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()I	a	getContainerId
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	m	()I	d	getSlot
	m	()Lcjf;	e	getItem
	m	()I	f	getStateId
	f	I	a	CARRIED_ITEM
	f	I	b	PLAYER_INVENTORY
	f	I	c	containerId
	f	I	d	stateId
	f	I	e	slot
	f	Lcjf;	f	itemStack
c	xt	net/minecraft/network/protocol/game/ClientboundCooldownPacket
	m	(Lcja;I)V	<init>	<init>
		p	1		item
		p	2		cooldown
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Lcja;	a	getItem
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	m	()I	d	getDuration
	f	Lcja;	a	item
	f	I	b	duration
c	xu	net/minecraft/network/protocol/game/ClientboundCustomChatCompletionsPacket
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Lxu$a;	a	action
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	m	()Ljava/util/List;	d	entries
	f	Lxu$a;	a	action
	f	Ljava/util/List;	b	entries
c	xu$a	net/minecraft/network/protocol/game/ClientboundCustomChatCompletionsPacket$Action
	m	()[Lxu$a;	a	$values
	f	Lxu$a;	a	ADD
	f	Lxu$a;	b	REMOVE
	f	Lxu$a;	c	SET
	f	[Lxu$a;	d	$VALUES
c	xv	net/minecraft/network/protocol/game/ClientboundDamageEventPacket
	m	(Lbiq;Lbho;)V	<init>	<init>
		p	1		entity
		p	2		damageSource
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()I	a	entityId
	m	(Lcpv;)Lbho;	a	getSource
		p	1		world
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lso;I)V	a	writeOptionalEntityId
		p	0		buf
		p	1		value
	m	(Lso;Lehn;)V	a	lambda$write$1
		p	0		bufx
		p	1		pos
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	m	(Lso;)I	b	readOptionalEntityId
		p	0		buf
	m	(Lso;)Lehn;	c	lambda$new$0
		p	0		pos
	m	()I	d	sourceTypeId
	m	()I	e	sourceCauseId
	m	()I	f	sourceDirectId
	m	()Ljava/util/Optional;	g	sourcePosition
	f	I	a	entityId
	f	I	b	sourceTypeId
	f	I	c	sourceCauseId
	f	I	d	sourceDirectId
	f	Ljava/util/Optional;	e	sourcePosition
c	xw	net/minecraft/network/protocol/game/ClientboundDeleteChatPacket
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Ltw$a;	a	messageSignature
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	f	Ltw$a;	a	messageSignature
c	xx	net/minecraft/network/protocol/game/ClientboundDisguisedChatPacket
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Ltl;	a	message
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	m	()Z	b	isSkippable
	m	()Lth$b;	d	chatType
	f	Ltl;	a	message
	f	Lth$b;	b	chatType
c	xy	net/minecraft/network/protocol/game/ClientboundEntityEventPacket
	m	(Lbiq;B)V	<init>	<init>
		p	1		entity
		p	2		status
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()B	a	getEventId
	m	(Lcpv;)Lbiq;	a	getEntity
		p	1		world
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	f	I	a	entityId
	f	B	b	eventId
c	xz	net/minecraft/network/protocol/game/ClientboundExplodePacket
	m	(DDDFLjava/util/List;Lehn;)V	<init>	<init>
		p	1		x
		p	3		y
		p	5		z
		p	7		radius
		p	8		affectedBlocks
		p	9		playerVelocity
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()F	a	getKnockbackX
	m	(IIILso;)Lgw;	a	lambda$new$0
		p	3		buf2
	m	(IIILso;Lgw;)V	a	lambda$write$1
		p	3		buf2
		p	4		pos
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	m	()F	d	getKnockbackY
	m	()F	e	getKnockbackZ
	m	()D	f	getX
	m	()D	g	getY
	m	()D	h	getZ
	m	()F	i	getPower
	m	()Ljava/util/List;	j	getToBlow
	f	D	a	x
	f	D	b	y
	f	D	c	z
	f	F	d	power
	f	Ljava/util/List;	e	toBlow
	f	F	f	knockbackX
	f	F	g	knockbackY
	f	F	h	knockbackZ
c	ya	net/minecraft/network/protocol/game/ClientboundForgetLevelChunkPacket
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Lcpc;	a	pos
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	f	Lcpc;	a	pos
c	yb	net/minecraft/network/protocol/game/ClientboundGameEventPacket
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	(Lyb$a;F)V	<init>	<init>
		p	1		reason
		p	2		value
	m	()Lyb$a;	a	getEvent
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	m	()F	d	getParam
	f	Lyb$a;	a	NO_RESPAWN_BLOCK_AVAILABLE
	f	Lyb$a;	b	START_RAINING
	f	Lyb$a;	c	STOP_RAINING
	f	Lyb$a;	d	CHANGE_GAME_MODE
	f	Lyb$a;	e	WIN_GAME
	f	Lyb$a;	f	DEMO_EVENT
	f	Lyb$a;	g	ARROW_HIT_PLAYER
	f	Lyb$a;	h	RAIN_LEVEL_CHANGE
	f	Lyb$a;	i	THUNDER_LEVEL_CHANGE
	f	Lyb$a;	j	PUFFER_FISH_STING
	f	Lyb$a;	k	GUARDIAN_ELDER_EFFECT
	f	Lyb$a;	l	IMMEDIATE_RESPAWN
	f	Lyb$a;	m	LIMITED_CRAFTING
	f	I	n	DEMO_PARAM_INTRO
	f	I	o	DEMO_PARAM_HINT_1
	f	I	p	DEMO_PARAM_HINT_2
	f	I	q	DEMO_PARAM_HINT_3
	f	I	r	DEMO_PARAM_HINT_4
	f	Lyb$a;	s	event
	f	F	t	param
c	yb$a	net/minecraft/network/protocol/game/ClientboundGameEventPacket$Type
	m	(I)V	<init>	<init>
		p	1		id
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	a	TYPES
	f	I	b	id
c	yc	net/minecraft/network/protocol/game/ClientboundHorseScreenOpenPacket
	m	(III)V	<init>	<init>
		p	1		syncId
		p	2		slotCount
		p	3		horseId
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()I	a	getContainerId
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	m	()I	d	getSize
	m	()I	e	getEntityId
	f	I	a	containerId
	f	I	b	size
	f	I	c	entityId
c	yd	net/minecraft/network/protocol/game/ClientboundHurtAnimationPacket
	m	(Lbjg;)V	<init>	<init>
		p	1		entity
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()I	a	id
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	m	()F	d	yaw
	f	I	a	id
	f	F	b	yaw
c	ye	net/minecraft/network/protocol/game/ClientboundInitializeBorderPacket
	m	(Ldha;)V	<init>	<init>
		p	1		worldBorder
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()D	a	getNewCenterX
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	m	()D	d	getNewCenterZ
	m	()D	e	getNewSize
	m	()D	f	getOldSize
	m	()J	g	getLerpTime
	m	()I	h	getNewAbsoluteMaxSize
	m	()I	i	getWarningTime
	m	()I	j	getWarningBlocks
	f	D	a	newCenterX
	f	D	b	newCenterZ
	f	D	c	oldSize
	f	D	d	newSize
	f	J	e	lerpTime
	f	I	f	newAbsoluteMaxSize
	f	I	g	warningBlocks
	f	I	h	warningTime
c	yf	net/minecraft/network/protocol/game/ClientboundLevelChunkPacketData
	m	(Ldhq;)V	<init>	<init>
		p	1		chunk
	m	(Lso;II)V	<init>	<init>
		p	1		buf
		p	2		x
		p	3		z
	m	()Lso;	a	getReadBuffer
	m	(II)Ljava/util/function/Consumer;	a	getBlockEntitiesTagsConsumer
		p	1		x
		p	2		z
	m	(IILyf$b;)V	a	lambda$getBlockEntitiesTagsConsumer$1
		p	3		visitor
	m	(Ldhq;)I	a	calculateChunkSize
		p	0		chunk
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lso;Ldhq;)V	a	extractChunkData
		p	0		buf
		p	1		chunk
	m	(Lso;Lyf$a;)V	a	lambda$write$0
		p	0		buf2
		p	1		entry
	m	(Lyf$b;II)V	a	getBlockEntitiesTags
		p	1		consumer
		p	2		x
		p	3		z
	m	()Lqw;	b	getHeightmaps
	m	()Lio/netty/buffer/ByteBuf;	c	getWriteBuffer
	f	I	a	TWO_MEGABYTES
	f	Lqw;	b	heightmaps
	f	[B	c	buffer
	f	Ljava/util/List;	d	blockEntitiesData
c	yf$a	net/minecraft/network/protocol/game/ClientboundLevelChunkPacketData$BlockEntityInfo
	m	(IILdcx;Lqw;)V	<init>	<init>
		p	1		localXz
		p	2		y
		p	3		type
		p	4		nbt
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	(Ldcv;)Lyf$a;	a	create
		p	0		blockEntity
	m	(Lso;)V	a	write
		p	1		buf
	f	I	a	packedXZ
	f	I	b	y
	f	Ldcx;	c	type
	f	Lqw;	d	tag
c	yf$b	net/minecraft/network/protocol/game/ClientboundLevelChunkPacketData$BlockEntityTagOutput
	m	(Lgw;Ldcx;Lqw;)V	accept	accept
		p	1		pos
		p	2		type
		p	3		nbt
c	yg	net/minecraft/network/protocol/game/ClientboundLevelChunkWithLightPacket
	m	(Ldhq;Leab;Ljava/util/BitSet;Ljava/util/BitSet;)V	<init>	<init>
		p	1		chunk
		p	2		lightProvider
		p	3		skyBits
		p	4		blockBits
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()I	a	getX
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	m	()I	d	getZ
	m	()Lyf;	e	getChunkData
	m	()Lyk;	f	getLightData
	f	I	a	x
	f	I	b	z
	f	Lyf;	c	chunkData
	f	Lyk;	d	lightData
c	yh	net/minecraft/network/protocol/game/ClientboundLevelEventPacket
	m	(ILgw;IZ)V	<init>	<init>
		p	1		eventId
		p	2		pos
		p	3		data
		p	4		global
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Z	a	isGlobalEvent
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	m	()I	d	getType
	m	()I	e	getData
	m	()Lgw;	f	getPos
	f	I	a	type
	f	Lgw;	b	pos
	f	I	c	data
	f	Z	d	globalEvent
c	yi	net/minecraft/network/protocol/game/ClientboundLevelParticlesPacket
	m	(Lit;ZDDDFFFFI)V	<init>	<init>
		p	1		parameters
		p	2		longDistance
		p	3		x
		p	5		y
		p	7		z
		p	9		offsetX
		p	10		offsetY
		p	11		offsetZ
		p	12		speed
		p	13		count
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Z	a	isOverrideLimiter
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lso;Liu;)Lit;	a	readParticle
		p	1		buf
		p	2		type
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	m	()D	d	getX
	m	()D	e	getY
	m	()D	f	getZ
	m	()F	g	getXDist
	m	()F	h	getYDist
	m	()F	i	getZDist
	m	()F	j	getMaxSpeed
	m	()I	k	getCount
	m	()Lit;	l	getParticle
	f	D	a	x
	f	D	b	y
	f	D	c	z
	f	F	d	xDist
	f	F	e	yDist
	f	F	f	zDist
	f	F	g	maxSpeed
	f	I	h	count
	f	Z	i	overrideLimiter
	f	Lit;	j	particle
c	yj	net/minecraft/network/protocol/game/ClientboundLightUpdatePacket
	m	(Lcpc;Leab;Ljava/util/BitSet;Ljava/util/BitSet;)V	<init>	<init>
		p	1		chunkPos
		p	2		lightProvider
		p	3		skyBits
		p	4		blockBits
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()I	a	getX
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	m	()I	d	getZ
	m	()Lyk;	e	getLightData
	f	I	a	x
	f	I	b	z
	f	Lyk;	c	lightData
c	yk	net/minecraft/network/protocol/game/ClientboundLightUpdatePacketData
	m	(Lcpc;Leab;Ljava/util/BitSet;Ljava/util/BitSet;)V	<init>	<init>
		p	1		pos
		p	2		lightProvider
		p	3		skyBits
		p	4		blockBits
	m	(Lso;II)V	<init>	<init>
		p	1		buf
		p	2		x
		p	3		y
	m	()Ljava/util/BitSet;	a	getSkyYMask
	m	(Lcpc;Leab;Lcqe;ILjava/util/BitSet;Ljava/util/BitSet;Ljava/util/List;)V	a	prepareSectionData
		p	1		pos
		p	2		lightProvider
		p	3		type
		p	4		y
		p	5		initialized
		p	6		uninitialized
		p	7		nibbles
	m	(Lso;)V	a	write
		p	1		buf
	m	()Ljava/util/BitSet;	b	getEmptySkyYMask
	m	(Lso;)[B	b	lambda$new$1
		p	0		b
	m	()Ljava/util/List;	c	getSkyUpdates
	m	(Lso;)[B	c	lambda$new$0
		p	0		b
	m	()Ljava/util/BitSet;	d	getBlockYMask
	m	()Ljava/util/BitSet;	e	getEmptyBlockYMask
	m	()Ljava/util/List;	f	getBlockUpdates
	f	Ljava/util/BitSet;	a	skyYMask
	f	Ljava/util/BitSet;	b	blockYMask
	f	Ljava/util/BitSet;	c	emptySkyYMask
	f	Ljava/util/BitSet;	d	emptyBlockYMask
	f	Ljava/util/List;	e	skyUpdates
	f	Ljava/util/List;	f	blockUpdates
c	yl	net/minecraft/network/protocol/game/ClientboundLoginPacket
	m	(IZLjava/util/Set;IIIZZZLaaz;)V	<init>	<init>
		p	1		playerEntityId
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()I	a	playerId
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	m	(Lso;)Laev;	b	lambda$new$0
		p	0		b
	m	()Z	d	hardcore
	m	()Ljava/util/Set;	e	levels
	m	()I	f	maxPlayers
	m	()I	g	chunkRadius
	m	()I	h	simulationDistance
	m	()Z	i	reducedDebugInfo
	m	()Z	j	showDeathScreen
	m	()Z	k	doLimitedCrafting
	m	()Laaz;	l	commonPlayerSpawnInfo
	f	I	a	playerId
	f	Z	b	hardcore
	f	Ljava/util/Set;	c	levels
	f	I	d	maxPlayers
	f	I	e	chunkRadius
	f	I	f	simulationDistance
	f	Z	g	reducedDebugInfo
	f	Z	h	showDeathScreen
	f	Z	i	doLimitedCrafting
	f	Laaz;	j	commonPlayerSpawnInfo
c	ym	net/minecraft/network/protocol/game/ClientboundMapItemDataPacket
	m	(IBZLjava/util/Collection;Lebw$b;)V	<init>	<init>
		p	1		id
		p	2		scale
		p	3		locked
		p	4		icons
		p	5		updateData
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()I	a	getMapId
	m	(Lebw;)V	a	applyToMap
		p	1		mapState
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lso;Lebt;)V	a	lambda$write$2
		p	0		b
		p	1		icon
	m	(Lso;Ljava/util/List;)V	a	lambda$write$3
		p	0		buf2
		p	1		icons
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	m	(Lso;)Ljava/util/List;	b	lambda$new$1
		p	0		buf2
	m	(Lso;)Lebt;	c	lambda$new$0
		p	0		buf3
	m	()B	d	getScale
	m	()Z	e	isLocked
	f	I	a	mapId
	f	B	b	scale
	f	Z	c	locked
	f	Ljava/util/List;	d	decorations
	f	Lebw$b;	e	colorPatch
c	yn	net/minecraft/network/protocol/game/ClientboundMerchantOffersPacket
	m	(ILcou;IIZZ)V	<init>	<init>
		p	1		syncId
		p	2		offers
		p	3		levelProgress
		p	4		experience
		p	5		leveled
		p	6		refreshable
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()I	a	getContainerId
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	m	()Lcou;	d	getOffers
	m	()I	e	getVillagerLevel
	m	()I	f	getVillagerXp
	m	()Z	g	showProgress
	m	()Z	h	canRestock
	f	I	a	containerId
	f	Lcou;	b	offers
	f	I	c	villagerLevel
	f	I	d	villagerXp
	f	Z	e	showProgress
	f	Z	f	canRestock
c	yo	net/minecraft/network/protocol/game/ClientboundMoveEntityPacket
	m	(ISSSBBZZZ)V	<init>	<init>
		p	1		entityId
		p	2		deltaX
		p	3		deltaY
		p	4		deltaZ
		p	5		yaw
		p	6		pitch
		p	7		onGround
		p	8		rotate
		p	9		positionChanged
	m	()S	a	getXa
	m	(Lcpv;)Lbiq;	a	getEntity
		p	1		world
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	m	()S	d	getYa
	m	()S	e	getZa
	m	()B	f	getyRot
	m	()B	g	getxRot
	m	()Z	h	hasRotation
	m	()Z	i	hasPosition
	m	()Z	j	isOnGround
	f	I	a	entityId
	f	S	b	xa
	f	S	c	ya
	f	S	d	za
	f	B	e	yRot
	f	B	f	xRot
	f	Z	g	onGround
	f	Z	h	hasRot
	f	Z	i	hasPos
c	yo$a	net/minecraft/network/protocol/game/ClientboundMoveEntityPacket$Pos
	m	(ISSSZ)V	<init>	<init>
		p	1		entityId
		p	2		deltaX
		p	3		deltaY
		p	4		deltaZ
		p	5		onGround
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lso;)Lyo$a;	b	read
		p	0		buf
c	yo$b	net/minecraft/network/protocol/game/ClientboundMoveEntityPacket$PosRot
	m	(ISSSBBZ)V	<init>	<init>
		p	1		entityId
		p	2		deltaX
		p	3		deltaY
		p	4		deltaZ
		p	5		yaw
		p	6		pitch
		p	7		onGround
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lso;)Lyo$b;	b	read
		p	0		buf
c	yo$c	net/minecraft/network/protocol/game/ClientboundMoveEntityPacket$Rot
	m	(IBBZ)V	<init>	<init>
		p	1		entityId
		p	2		yaw
		p	3		pitch
		p	4		onGround
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lso;)Lyo$c;	b	read
		p	0		buf
c	yp	net/minecraft/network/protocol/game/ClientboundMoveVehiclePacket
	m	(Lbiq;)V	<init>	<init>
		p	1		entity
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()D	a	getX
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	m	()D	d	getY
	m	()D	e	getZ
	m	()F	f	getYRot
	m	()F	g	getXRot
	f	D	a	x
	f	D	b	y
	f	D	c	z
	f	F	d	yRot
	f	F	e	xRot
c	yq	net/minecraft/network/protocol/game/ClientboundOpenBookPacket
	m	(Lbgx;)V	<init>	<init>
		p	1		hand
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Lbgx;	a	getHand
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	f	Lbgx;	a	hand
c	yr	net/minecraft/network/protocol/game/ClientboundOpenScreenPacket
	m	(ILcfq;Ltl;)V	<init>	<init>
		p	1		syncId
		p	2		type
		p	3		name
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()I	a	getContainerId
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	m	()Lcfq;	d	getType
	m	()Ltl;	e	getTitle
	f	I	a	containerId
	f	Lcfq;	b	type
	f	Ltl;	c	title
c	ys	net/minecraft/network/protocol/game/ClientboundOpenSignEditorPacket
	m	(Lgw;Z)V	<init>	<init>
		p	1		pos
		p	2		front
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Lgw;	a	getPos
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	m	()Z	d	isFrontText
	f	Lgw;	a	pos
	f	Z	b	isFrontText
c	yt	net/minecraft/network/protocol/game/ClientboundPlaceGhostRecipePacket
	m	(ILcmk;)V	<init>	<init>
		p	1		syncId
		p	2		recipe
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Laew;	a	getRecipe
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	m	()I	d	getContainerId
	f	I	a	containerId
	f	Laew;	b	recipe
c	yu	net/minecraft/network/protocol/game/ClientboundPlayerAbilitiesPacket
	m	(Lcbr;)V	<init>	<init>
		p	1		abilities
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Z	a	isInvulnerable
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	m	()Z	d	isFlying
	m	()Z	e	canFly
	m	()Z	f	canInstabuild
	m	()F	g	getFlyingSpeed
	m	()F	h	getWalkingSpeed
	f	I	a	FLAG_INVULNERABLE
	f	I	b	FLAG_FLYING
	f	I	c	FLAG_CAN_FLY
	f	I	d	FLAG_INSTABUILD
	f	Z	e	invulnerable
	f	Z	f	isFlying
	f	Z	g	canFly
	f	Z	h	instabuild
	f	F	i	flyingSpeed
	f	F	j	walkingSpeed
c	yv	net/minecraft/network/protocol/game/ClientboundPlayerChatPacket
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Ljava/util/UUID;	a	sender
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	m	()Z	b	isSkippable
	m	()I	d	index
	m	()Ltw;	e	signature
	m	()Lud$a;	f	body
	m	()Ltl;	g	unsignedContent
	m	()Lto;	h	filterMask
	m	()Lth$b;	i	chatType
	f	Ljava/util/UUID;	a	sender
	f	I	b	index
	f	Ltw;	c	signature
	f	Lud$a;	d	body
	f	Ltl;	e	unsignedContent
	f	Lto;	f	filterMask
	f	Lth$b;	g	chatType
c	yw	net/minecraft/network/protocol/game/ClientboundPlayerCombatEndPacket
	m	(I)V	<init>	<init>
		p	1		timeSinceLastAttack
	m	(Lbhl;)V	<init>	<init>
		p	1		damageTracker
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	f	I	a	duration
c	yx	net/minecraft/network/protocol/game/ClientboundPlayerCombatEnterPacket
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
c	yy	net/minecraft/network/protocol/game/ClientboundPlayerCombatKillPacket
	m	(ILtl;)V	<init>	<init>
		p	1		entityId
		p	2		message
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()I	a	getPlayerId
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	m	()Z	b	isSkippable
	m	()Ltl;	d	getMessage
	f	I	a	playerId
	f	Ltl;	b	message
c	yz	net/minecraft/network/protocol/game/ClientboundPlayerInfoRemovePacket
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Ljava/util/List;	a	profileIds
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	f	Ljava/util/List;	a	profileIds
c	za	net/minecraft/network/protocol/game/ClientboundPlayerInfoUpdatePacket
	m	(Ljava/util/EnumSet;Ljava/util/Collection;)V	<init>	<init>
		p	1		actions
		p	2		players
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	(Lza$a;Lakr;)V	<init>	<init>
		p	1		action
		p	2		player
	m	()Ljava/util/EnumSet;	a	actions
	m	(Ljava/util/Collection;)Lza;	a	createPlayerInitializing
		p	0		players
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lso;Lza$b;)V	a	lambda$write$1
		p	1		buf2
		p	2		entry
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	m	(Lso;)Lza$b;	b	lambda$new$0
		p	1		buf2
	m	()Ljava/util/List;	d	entries
	m	()Ljava/util/List;	e	newEntries
	f	Ljava/util/EnumSet;	a	actions
	f	Ljava/util/List;	b	entries
c	za$a	net/minecraft/network/protocol/game/ClientboundPlayerInfoUpdatePacket$Action
	m	(Ljava/lang/String;ILza$a$a;Lza$a$b;)V	<init>	<init>
		p	3		reader
		p	4		writer
	m	()[Lza$a;	a	$values
	m	(Lso;Lza$b;)V	a	lambda$static$11
		p	0		buf
		p	1		entry
	m	(Lza$c;Lso;)V	a	lambda$static$10
		p	0		serialized
		p	1		buf
	m	(Lso;Lza$b;)V	b	lambda$static$9
		p	0		buf
		p	1		entry
	m	(Lza$c;Lso;)V	b	lambda$static$8
		p	0		serialized
		p	1		buf
	m	(Lso;Lza$b;)V	c	lambda$static$7
		p	0		buf
		p	1		entry
	m	(Lza$c;Lso;)V	c	lambda$static$6
		p	0		serialized
		p	1		buf
	m	(Lso;Lza$b;)V	d	lambda$static$5
		p	0		buf
		p	1		entry
	m	(Lza$c;Lso;)V	d	lambda$static$4
		p	0		serialized
		p	1		buf
	m	(Lso;Lza$b;)V	e	lambda$static$3
		p	0		buf
		p	1		entry
	m	(Lza$c;Lso;)V	e	lambda$static$2
		p	0		serialized
		p	1		buf
	m	(Lso;Lza$b;)V	f	lambda$static$1
		p	0		buf
		p	1		entry
	m	(Lza$c;Lso;)V	f	lambda$static$0
		p	0		serialized
		p	1		buf
	f	Lza$a;	a	ADD_PLAYER
	f	Lza$a;	b	INITIALIZE_CHAT
	f	Lza$a;	c	UPDATE_GAME_MODE
	f	Lza$a;	d	UPDATE_LISTED
	f	Lza$a;	e	UPDATE_LATENCY
	f	Lza$a;	f	UPDATE_DISPLAY_NAME
	f	Lza$a$a;	g	reader
	f	Lza$a$b;	h	writer
	f	[Lza$a;	i	$VALUES
c	za$a$a	net/minecraft/network/protocol/game/ClientboundPlayerInfoUpdatePacket$Action$Reader
	m	(Lza$c;Lso;)V	read	read
		p	1		serialized
		p	2		buf
c	za$a$b	net/minecraft/network/protocol/game/ClientboundPlayerInfoUpdatePacket$Action$Writer
	m	(Lso;Lza$b;)V	write	write
		p	1		buf
		p	2		entry
c	za$b	net/minecraft/network/protocol/game/ClientboundPlayerInfoUpdatePacket$Entry
	m	(Lakr;)V	<init>	<init>
		p	1		player
	m	()Ljava/util/UUID;	a	profileId
	m	()Lcom/mojang/authlib/GameProfile;	b	profile
	m	()Z	c	listed
	m	()I	d	latency
	m	()Lcps;	e	gameMode
	m	()Ltl;	f	displayName
	m	()Lub$a;	g	chatSession
	f	Ljava/util/UUID;	a	profileId
	f	Lcom/mojang/authlib/GameProfile;	b	profile
	f	Z	c	listed
	f	I	d	latency
	f	Lcps;	e	gameMode
	f	Ltl;	f	displayName
	f	Lub$a;	g	chatSession
c	za$c	net/minecraft/network/protocol/game/ClientboundPlayerInfoUpdatePacket$EntryBuilder
	m	(Ljava/util/UUID;)V	<init>	<init>
		p	1		profileId
	m	()Lza$b;	a	build
	f	Ljava/util/UUID;	a	profileId
	f	Lcom/mojang/authlib/GameProfile;	b	profile
	f	Z	c	listed
	f	I	d	latency
	f	Lcps;	e	gameMode
	f	Ltl;	f	displayName
	f	Lub$a;	g	chatSession
c	zb	net/minecraft/network/protocol/game/ClientboundPlayerLookAtPacket
	m	(Led$a;DDD)V	<init>	<init>
		p	1		selfAnchor
		p	2		targetX
		p	4		targetY
		p	6		targetZ
	m	(Led$a;Lbiq;Led$a;)V	<init>	<init>
		p	1		selfAnchor
		p	2		entity
		p	3		targetAnchor
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Led$a;	a	getFromAnchor
	m	(Lcpv;)Lehn;	a	getPosition
		p	1		world
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	f	D	a	x
	f	D	b	y
	f	D	c	z
	f	I	d	entity
	f	Led$a;	e	fromAnchor
	f	Led$a;	f	toAnchor
	f	Z	g	atEntity
c	zc	net/minecraft/network/protocol/game/ClientboundPlayerPositionPacket
	m	(DDDFFLjava/util/Set;I)V	<init>	<init>
		p	1		x
		p	3		y
		p	5		z
		p	7		yaw
		p	8		pitch
		p	9		flags
		p	10		teleportId
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()D	a	getX
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	m	()D	d	getY
	m	()D	e	getZ
	m	()F	f	getYRot
	m	()F	g	getXRot
	m	()I	h	getId
	m	()Ljava/util/Set;	i	getRelativeArguments
	f	D	a	x
	f	D	b	y
	f	D	c	z
	f	F	d	yRot
	f	F	e	xRot
	f	Ljava/util/Set;	f	relativeArguments
	f	I	g	id
c	zd	net/minecraft/network/protocol/game/ClientboundRecipePacket
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	(Lzd$a;Ljava/util/Collection;Ljava/util/Collection;Laph;)V	<init>	<init>
		p	1		action
		p	2		recipeIdsToChange
		p	3		recipeIdsToInit
		p	4		options
	m	()Ljava/util/List;	a	getRecipes
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	m	()Ljava/util/List;	d	getHighlights
	m	()Laph;	e	getBookSettings
	m	()Lzd$a;	f	getState
	f	Lzd$a;	a	state
	f	Ljava/util/List;	b	recipes
	f	Ljava/util/List;	c	toHighlight
	f	Laph;	d	bookSettings
c	zd$a	net/minecraft/network/protocol/game/ClientboundRecipePacket$State
	m	()[Lzd$a;	a	$values
	f	Lzd$a;	a	INIT
	f	Lzd$a;	b	ADD
	f	Lzd$a;	c	REMOVE
	f	[Lzd$a;	d	$VALUES
c	ze	net/minecraft/network/protocol/game/ClientboundRemoveEntitiesPacket
	m	(Lit/unimi/dsi/fastutil/ints/IntList;)V	<init>	<init>
		p	1		entityIds
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	([I)V	<init>	<init>
		p	1		entityIds
	m	()Lit/unimi/dsi/fastutil/ints/IntList;	a	getEntityIds
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	f	Lit/unimi/dsi/fastutil/ints/IntList;	a	entityIds
c	zf	net/minecraft/network/protocol/game/ClientboundRemoveMobEffectPacket
	m	(ILbib;)V	<init>	<init>
		p	1		entityId
		p	2		effectType
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Lbib;	a	getEffect
	m	(Lcpv;)Lbiq;	a	getEntity
		p	1		world
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	f	I	a	entityId
	f	Lbib;	b	effect
c	zg	net/minecraft/network/protocol/game/ClientboundRespawnPacket
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Laaz;	a	commonPlayerSpawnInfo
	m	(B)Z	a	shouldKeep
		p	1		flag
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	m	()B	d	dataToKeep
	f	B	a	KEEP_ATTRIBUTES
	f	B	b	KEEP_ENTITY_DATA
	f	B	c	KEEP_ALL_DATA
	f	Laaz;	d	commonPlayerSpawnInfo
	f	B	e	dataToKeep
c	zh	net/minecraft/network/protocol/game/ClientboundRotateHeadPacket
	m	(Lbiq;B)V	<init>	<init>
		p	1		entity
		p	2		headYaw
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()B	a	getYHeadRot
	m	(Lcpv;)Lbiq;	a	getEntity
		p	1		world
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	f	I	a	entityId
	f	B	b	yHeadRot
c	zi	net/minecraft/network/protocol/game/ClientboundSectionBlocksUpdatePacket
	m	(Lhw;Lit/unimi/dsi/fastutil/shorts/ShortSet;Ldhr;)V	<init>	<init>
		p	1		sectionPos
		p	2		positions
		p	3		section
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	(Ljava/util/function/BiConsumer;)V	a	runUpdates
		p	1		visitor
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	f	I	a	POS_IN_SECTION_BITS
	f	Lhw;	b	sectionPos
	f	[S	c	positions
	f	[Ldfj;	d	states
c	zj	net/minecraft/network/protocol/game/ClientboundSelectAdvancementsTabPacket
	m	(Laew;)V	<init>	<init>
		p	1		tabId
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Laew;	a	getTab
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	f	Laew;	a	tab
c	zk	net/minecraft/network/protocol/game/ClientboundServerDataPacket
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	(Ltl;Ljava/util/Optional;Z)V	<init>	<init>
		p	1		description
		p	2		favicon
		p	3		previewsChat
	m	()Ltl;	a	getMotd
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	m	()Ljava/util/Optional;	d	getIconBytes
	m	()Z	e	enforcesSecureChat
	f	Ltl;	a	motd
	f	Ljava/util/Optional;	b	iconBytes
	f	Z	c	enforcesSecureChat
c	zl	net/minecraft/network/protocol/game/ClientboundSetActionBarTextPacket
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	(Ltl;)V	<init>	<init>
		p	1		message
	m	()Ltl;	a	getText
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	f	Ltl;	a	text
c	zm	net/minecraft/network/protocol/game/ClientboundSetBorderCenterPacket
	m	(Ldha;)V	<init>	<init>
		p	1		worldBorder
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()D	a	getNewCenterZ
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	m	()D	d	getNewCenterX
	f	D	a	newCenterX
	f	D	b	newCenterZ
c	zn	net/minecraft/network/protocol/game/ClientboundSetBorderLerpSizePacket
	m	(Ldha;)V	<init>	<init>
		p	1		worldBorder
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()D	a	getOldSize
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	m	()D	d	getNewSize
	m	()J	e	getLerpTime
	f	D	a	oldSize
	f	D	b	newSize
	f	J	c	lerpTime
c	zo	net/minecraft/network/protocol/game/ClientboundSetBorderSizePacket
	m	(Ldha;)V	<init>	<init>
		p	1		worldBorder
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()D	a	getSize
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	f	D	a	size
c	zp	net/minecraft/network/protocol/game/ClientboundSetBorderWarningDelayPacket
	m	(Ldha;)V	<init>	<init>
		p	1		worldBorder
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()I	a	getWarningDelay
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	f	I	a	warningDelay
c	zq	net/minecraft/network/protocol/game/ClientboundSetBorderWarningDistancePacket
	m	(Ldha;)V	<init>	<init>
		p	1		worldBorder
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()I	a	getWarningBlocks
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	f	I	a	warningBlocks
c	zr	net/minecraft/network/protocol/game/ClientboundSetCameraPacket
	m	(Lbiq;)V	<init>	<init>
		p	1		entity
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	(Lcpv;)Lbiq;	a	getEntity
		p	1		world
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	f	I	a	cameraId
c	zs	net/minecraft/network/protocol/game/ClientboundSetCarriedItemPacket
	m	(I)V	<init>	<init>
		p	1		slot
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()I	a	getSlot
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	f	I	a	slot
c	zt	net/minecraft/network/protocol/game/ClientboundSetChunkCacheCenterPacket
	m	(II)V	<init>	<init>
		p	1		x
		p	2		z
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()I	a	getX
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	m	()I	d	getZ
	f	I	a	x
	f	I	b	z
c	zu	net/minecraft/network/protocol/game/ClientboundSetChunkCacheRadiusPacket
	m	(I)V	<init>	<init>
		p	1		distance
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()I	a	getRadius
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	f	I	a	radius
c	zv	net/minecraft/network/protocol/game/ClientboundSetDefaultSpawnPositionPacket
	m	(Lgw;F)V	<init>	<init>
		p	1		pos
		p	2		angle
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Lgw;	a	getPos
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	m	()F	d	getAngle
	f	Lgw;	a	pos
	f	F	b	angle
c	zw	net/minecraft/network/protocol/game/ClientboundSetDisplayObjectivePacket
	m	(Leii;Leij;)V	<init>	<init>
		p	1		slot
		p	2		objective
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Leii;	a	getSlot
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	m	()Ljava/lang/String;	d	getObjectiveName
	f	Leii;	a	slot
	f	Ljava/lang/String;	b	objectiveName
c	zx	net/minecraft/network/protocol/game/ClientboundSetEntityDataPacket
	m	(ILjava/util/List;)V	<init>	<init>
		p	1		id
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()I	a	id
	m	(Ljava/util/List;Lso;)V	a	pack
		p	0		trackedValues
		p	1		buf
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	m	(Lso;)Ljava/util/List;	b	unpack
		p	0		buf
	m	()Ljava/util/List;	d	packedItems
	f	I	a	EOF_MARKER
	f	I	b	id
	f	Ljava/util/List;	c	packedItems
c	zy	net/minecraft/network/protocol/game/ClientboundSetEntityLinkPacket
	m	(Lbiq;Lbiq;)V	<init>	<init>
		p	1		attachedEntity
		p	2		holdingEntity
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()I	a	getSourceId
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	m	()I	d	getDestId
	f	I	a	sourceId
	f	I	b	destId
c	zz	net/minecraft/network/protocol/game/ClientboundSetEntityMotionPacket
	m	(ILehn;)V	<init>	<init>
		p	1		id
		p	2		velocity
	m	(Lbiq;)V	<init>	<init>
		p	1		entity
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()I	a	getId
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	m	()I	d	getXa
	m	()I	e	getYa
	m	()I	f	getZa
	f	I	a	id
	f	I	b	xa
	f	I	c	ya
	f	I	d	za
c	aaa	net/minecraft/network/protocol/game/ClientboundSetEquipmentPacket
	m	(ILjava/util/List;)V	<init>	<init>
		p	1		id
		p	2		equipmentList
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()I	a	getEntity
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	m	()Ljava/util/List;	d	getSlots
	f	B	a	CONTINUE_MASK
	f	I	b	entity
	f	Ljava/util/List;	c	slots
c	aab	net/minecraft/network/protocol/game/ClientboundSetExperiencePacket
	m	(FII)V	<init>	<init>
		p	1		barProgress
		p	2		experienceLevel
		p	3		experience
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()F	a	getExperienceProgress
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	m	()I	d	getTotalExperience
	m	()I	e	getExperienceLevel
	f	F	a	experienceProgress
	f	I	b	totalExperience
	f	I	c	experienceLevel
c	aac	net/minecraft/network/protocol/game/ClientboundSetHealthPacket
	m	(FIF)V	<init>	<init>
		p	1		health
		p	2		food
		p	3		saturation
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()F	a	getHealth
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	m	()I	d	getFood
	m	()F	e	getSaturation
	f	F	a	health
	f	I	b	food
	f	F	c	saturation
c	aad	net/minecraft/network/protocol/game/ClientboundSetObjectivePacket
	m	(Leij;I)V	<init>	<init>
		p	1		objective
		p	2		mode
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Ljava/lang/String;	a	getObjectiveName
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	m	()Ltl;	d	getDisplayName
	m	()I	e	getMethod
	m	()Leip$a;	f	getRenderType
	f	I	a	METHOD_ADD
	f	I	b	METHOD_REMOVE
	f	I	c	METHOD_CHANGE
	f	Ljava/lang/String;	d	objectiveName
	f	Ltl;	e	displayName
	f	Leip$a;	f	renderType
	f	I	g	method
c	aae	net/minecraft/network/protocol/game/ClientboundSetPassengersPacket
	m	(Lbiq;)V	<init>	<init>
		p	1		entity
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()[I	a	getPassengers
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	m	()I	d	getVehicle
	f	I	a	vehicle
	f	[I	b	passengers
c	aaf	net/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket
	m	(Ljava/lang/String;ILjava/util/Optional;Ljava/util/Collection;)V	<init>	<init>
		p	1		teamName
		p	2		packetType
		p	3		team
		p	4		playerNames
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Laaf$a;	a	getPlayerAction
	m	(I)Z	a	shouldHavePlayerList
		p	0		packetType
	m	(Leik;)Laaf;	a	createRemovePacket
		p	0		team
	m	(Leik;Ljava/lang/String;Laaf$a;)Laaf;	a	createPlayerPacket
		p	0		team
		p	1		playerName
		p	2		operation
	m	(Leik;Z)Laaf;	a	createAddOrModifyPacket
		p	0		team
		p	1		updatePlayers
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	m	(I)Z	b	shouldHaveParameters
		p	0		packetType
	m	()Laaf$a;	d	getTeamAction
	m	()Ljava/lang/String;	e	getName
	m	()Ljava/util/Collection;	f	getPlayers
	m	()Ljava/util/Optional;	g	getParameters
	m	()Ljava/lang/IllegalStateException;	h	lambda$write$0
	f	I	a	METHOD_ADD
	f	I	b	METHOD_REMOVE
	f	I	c	METHOD_CHANGE
	f	I	d	METHOD_JOIN
	f	I	e	METHOD_LEAVE
	f	I	f	MAX_VISIBILITY_LENGTH
	f	I	g	MAX_COLLISION_LENGTH
	f	I	h	method
	f	Ljava/lang/String;	i	name
	f	Ljava/util/Collection;	j	players
	f	Ljava/util/Optional;	k	parameters
c	aaf$a	net/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket$Action
	m	()[Laaf$a;	a	$values
	f	Laaf$a;	a	ADD
	f	Laaf$a;	b	REMOVE
	f	[Laaf$a;	c	$VALUES
c	aaf$b	net/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket$Parameters
	m	(Leik;)V	<init>	<init>
		p	1		team
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Ltl;	a	getDisplayName
	m	(Lso;)V	a	write
		p	1		buf
	m	()I	b	getOptions
	m	()Ln;	c	getColor
	m	()Ljava/lang/String;	d	getNametagVisibility
	m	()Ljava/lang/String;	e	getCollisionRule
	m	()Ltl;	f	getPlayerPrefix
	m	()Ltl;	g	getPlayerSuffix
	f	Ltl;	a	displayName
	f	Ltl;	b	playerPrefix
	f	Ltl;	c	playerSuffix
	f	Ljava/lang/String;	d	nametagVisibility
	f	Ljava/lang/String;	e	collisionRule
	f	Ln;	f	color
	f	I	g	options
c	aag	net/minecraft/network/protocol/game/ClientboundSetScorePacket
	m	(Lafn$a;Ljava/lang/String;Ljava/lang/String;I)V	<init>	<init>
		p	1		updateMode
		p	2		objectiveName
		p	3		playerName
		p	4		score
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Ljava/lang/String;	a	getOwner
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	m	()Ljava/lang/String;	d	getObjectiveName
	m	()I	e	getScore
	m	()Lafn$a;	f	getMethod
	f	Ljava/lang/String;	a	owner
	f	Ljava/lang/String;	b	objectiveName
	f	I	c	score
	f	Lafn$a;	d	method
c	aah	net/minecraft/network/protocol/game/ClientboundSetSimulationDistancePacket
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()I	a	simulationDistance
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	f	I	a	simulationDistance
c	aai	net/minecraft/network/protocol/game/ClientboundSetSubtitleTextPacket
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	(Ltl;)V	<init>	<init>
		p	1		subtitle
	m	()Ltl;	a	getText
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	f	Ltl;	a	text
c	aaj	net/minecraft/network/protocol/game/ClientboundSetTimePacket
	m	(JJZ)V	<init>	<init>
		p	1		time
		p	3		timeOfDay
		p	5		doDaylightCycle
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()J	a	getGameTime
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	m	()J	d	getDayTime
	f	J	a	gameTime
	f	J	b	dayTime
c	aak	net/minecraft/network/protocol/game/ClientboundSetTitleTextPacket
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	(Ltl;)V	<init>	<init>
		p	1		title
	m	()Ltl;	a	getText
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	f	Ltl;	a	text
c	aal	net/minecraft/network/protocol/game/ClientboundSetTitlesAnimationPacket
	m	(III)V	<init>	<init>
		p	1		fadeInTicks
		p	2		stayTicks
		p	3		fadeOutTicks
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()I	a	getFadeIn
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	m	()I	d	getStay
	m	()I	e	getFadeOut
	f	I	a	fadeIn
	f	I	b	stay
	f	I	c	fadeOut
c	aam	net/minecraft/network/protocol/game/ClientboundSoundEntityPacket
	m	(Lhe;Lape;Lbiq;FFJ)V	<init>	<init>
		p	1		sound
		p	2		category
		p	3		entity
		p	4		volume
		p	5		pitch
		p	6		seed
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Lhe;	a	getSound
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lso;Lapc;)V	a	lambda$write$0
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	m	()Lape;	d	getSource
	m	()I	e	getId
	m	()F	f	getVolume
	m	()F	g	getPitch
	m	()J	h	getSeed
	f	Lhe;	a	sound
	f	Lape;	b	source
	f	I	c	id
	f	F	d	volume
	f	F	e	pitch
	f	J	f	seed
c	aan	net/minecraft/network/protocol/game/ClientboundSoundPacket
	m	(Lhe;Lape;DDDFFJ)V	<init>	<init>
		p	1		sound
		p	2		category
		p	3		x
		p	5		y
		p	7		z
		p	9		volume
		p	10		pitch
		p	11		seed
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Lhe;	a	getSound
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lso;Lapc;)V	a	lambda$write$0
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	m	()Lape;	d	getSource
	m	()D	e	getX
	m	()D	f	getY
	m	()D	g	getZ
	m	()F	h	getVolume
	m	()F	i	getPitch
	m	()J	j	getSeed
	f	F	a	LOCATION_ACCURACY
	f	Lhe;	b	sound
	f	Lape;	c	source
	f	I	d	x
	f	I	e	y
	f	I	f	z
	f	F	g	volume
	f	F	h	pitch
	f	J	i	seed
c	aao	net/minecraft/network/protocol/game/ClientboundStartConfigurationPacket
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	m	()Lsn;	c	nextProtocol
c	aap	net/minecraft/network/protocol/game/ClientboundStopSoundPacket
	m	(Laew;Lape;)V	<init>	<init>
		p	1		soundId
		p	2		category
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Laew;	a	getName
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	m	()Lape;	d	getSource
	f	I	a	HAS_SOURCE
	f	I	b	HAS_SOUND
	f	Laew;	c	name
	f	Lape;	d	source
c	aaq	net/minecraft/network/protocol/game/ClientboundSystemChatPacket
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Ltl;	a	content
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	m	()Z	b	isSkippable
	m	()Z	d	overlay
	f	Ltl;	a	content
	f	Z	b	overlay
c	aar	net/minecraft/network/protocol/game/ClientboundTabListPacket
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	(Ltl;Ltl;)V	<init>	<init>
		p	1		header
		p	2		footer
	m	()Ltl;	a	getHeader
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	m	()Ltl;	d	getFooter
	f	Ltl;	a	header
	f	Ltl;	b	footer
c	aas	net/minecraft/network/protocol/game/ClientboundTagQueryPacket
	m	(ILqw;)V	<init>	<init>
		p	1		transactionId
		p	2		nbt
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()I	a	getTransactionId
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	m	()Z	b	isSkippable
	m	()Lqw;	d	getTag
	f	I	a	transactionId
	f	Lqw;	b	tag
c	aat	net/minecraft/network/protocol/game/ClientboundTakeItemEntityPacket
	m	(III)V	<init>	<init>
		p	1		entityId
		p	2		collectorId
		p	3		stackAmount
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()I	a	getItemId
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	m	()I	d	getPlayerId
	m	()I	e	getAmount
	f	I	a	itemId
	f	I	b	playerId
	f	I	c	amount
c	aau	net/minecraft/network/protocol/game/ClientboundTeleportEntityPacket
	m	(Lbiq;)V	<init>	<init>
		p	1		entity
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()I	a	getId
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	m	()D	d	getX
	m	()D	e	getY
	m	()D	f	getZ
	m	()B	g	getyRot
	m	()B	h	getxRot
	m	()Z	i	isOnGround
	f	I	a	id
	f	D	b	x
	f	D	c	y
	f	D	d	z
	f	B	e	yRot
	f	B	f	xRot
	f	Z	g	onGround
c	aav	net/minecraft/network/protocol/game/ClientboundUpdateAdvancementsPacket
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	(ZLjava/util/Collection;Ljava/util/Set;Ljava/util/Map;)V	<init>	<init>
		p	1		clearCurrent
		p	2		toEarn
		p	3		toRemove
		p	4		toSetProgress
	m	()Ljava/util/List;	a	getAdded
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lso;Laf;)V	a	lambda$write$0
		p	0		buf2
		p	1		task
	m	(Lso;Lah;)V	a	lambda$write$1
		p	0		buf2
		p	1		progress
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	m	()Ljava/util/Set;	d	getRemoved
	m	()Ljava/util/Map;	e	getProgress
	m	()Z	f	shouldReset
	f	Z	a	reset
	f	Ljava/util/List;	b	added
	f	Ljava/util/Set;	c	removed
	f	Ljava/util/Map;	d	progress
c	aaw	net/minecraft/network/protocol/game/ClientboundUpdateAttributesPacket
	m	(ILjava/util/Collection;)V	<init>	<init>
		p	1		entityId
		p	2		attributes
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()I	a	getEntityId
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lso;Laaw$a;)V	a	lambda$write$3
		p	0		buf2
		p	1		attribute
	m	(Lso;Lbkk;)V	a	lambda$write$2
		p	0		buf3
		p	1		modifier
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	m	(Lso;)Laaw$a;	b	lambda$new$1
		p	0		buf2
	m	(Lso;)Lbkk;	c	lambda$new$0
		p	0		modifiers
	m	()Ljava/util/List;	d	getValues
	f	I	a	entityId
	f	Ljava/util/List;	b	attributes
c	aaw$a	net/minecraft/network/protocol/game/ClientboundUpdateAttributesPacket$AttributeSnapshot
	m	(Lbkh;DLjava/util/Collection;)V	<init>	<init>
		p	1		attribute
		p	2		baseValue
		p	4		modifiers
	m	()Lbkh;	a	getAttribute
	m	()D	b	getBase
	m	()Ljava/util/Collection;	c	getModifiers
	f	Lbkh;	a	attribute
	f	D	b	base
	f	Ljava/util/Collection;	c	modifiers
c	aax	net/minecraft/network/protocol/game/ClientboundUpdateMobEffectPacket
	m	(ILbid;)V	<init>	<init>
		p	1		entityId
		p	2		effect
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()I	a	getEntityId
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lso;Lbid$a;)V	a	lambda$write$1
		p	0		buf2
		p	1		factorCalculationData
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	m	(Lso;)Lbid$a;	b	lambda$new$0
		p	0		buf2
	m	()Lbib;	d	getEffect
	m	()B	e	getEffectAmplifier
	m	()I	f	getEffectDurationTicks
	m	()Z	g	isEffectVisible
	m	()Z	h	isEffectAmbient
	m	()Z	i	effectShowsIcon
	m	()Lbid$a;	j	getFactorData
	f	I	a	FLAG_AMBIENT
	f	I	b	FLAG_VISIBLE
	f	I	c	FLAG_SHOW_ICON
	f	I	d	entityId
	f	Lbib;	e	effect
	f	B	f	effectAmplifier
	f	I	g	effectDurationTicks
	f	B	h	flags
	f	Lbid$a;	i	factorData
c	aay	net/minecraft/network/protocol/game/ClientboundUpdateRecipesPacket
	m	(Ljava/util/Collection;)V	<init>	<init>
		p	1		recipes
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Ljava/util/List;	a	getRecipes
	m	(Laew;)Ljava/lang/IllegalArgumentException;	a	lambda$fromNetwork$0
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lso;Lcmk;)V	a	toNetwork
		p	0		buf
		p	1		recipe
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lww;)V	a	handle
		p	1		listener
	m	(Lso;)Lcmk;	b	fromNetwork
		p	0		buf
	f	Ljava/util/List;	a	recipes
c	aaz	net/minecraft/network/protocol/game/CommonPlayerSpawnInfo
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Laev;	a	dimensionType
	m	(Lso;)V	a	write
		p	1		buf
	m	()Laev;	b	dimension
	m	()J	c	seed
	m	()Lcps;	d	gameType
	m	()Lcps;	e	previousGameType
	m	()Z	f	isDebug
	m	()Z	g	isFlat
	m	()Ljava/util/Optional;	h	lastDeathLocation
	m	()I	i	portalCooldown
	f	Laev;	a	dimensionType
	f	Laev;	b	dimension
	f	J	c	seed
	f	Lcps;	d	gameType
	f	Lcps;	e	previousGameType
	f	Z	f	isDebug
	f	Z	g	isFlat
	f	Ljava/util/Optional;	h	lastDeathLocation
	f	I	i	portalCooldown
c	aba	net/minecraft/network/protocol/game/DebugEntityNameGenerator
	m	(Lasc;[Ljava/lang/String;)Ljava/lang/String;	a	getRandomString
		p	0		random
		p	1		options
	m	(Lbiq;)Ljava/lang/String;	a	getEntityName
		p	0		entity
	m	(Ljava/util/UUID;)Ljava/lang/String;	a	getEntityName
		p	0		uuid
	m	(Ljava/util/UUID;)Lasc;	b	getRandom
		p	0		uuid
	f	[Ljava/lang/String;	a	NAMES_FIRST_PART
	f	[Ljava/lang/String;	b	NAMES_SECOND_PART
c	abb	net/minecraft/network/protocol/game/DebugPackets
	m	(Laev;)Ljava/lang/String;	a	lambda$sendPoiAddedPacket$2
	m	(Lakq;)V	a	sendGameTestClearPacket
		p	0		world
	m	(Lakq;Lbug;)V	a	lambda$sendPoiPacketsForChunk$1
		p	0		world
		p	1		poi
	m	(Lakq;Lcpc;)V	a	sendPoiPacketsForChunk
		p	0		world
		p	1		pos
	m	(Lakq;Lgw;)V	a	sendPoiAddedPacket
		p	0		world
		p	1		pos
	m	(Lakq;Lgw;Ljava/lang/String;II)V	a	sendGameTestAddMarker
		p	0		world
		p	1		pos
		p	2		message
		p	3		color
		p	4		duration
	m	(Lakq;Ljava/lang/Object;)Ljava/lang/String;	a	getShortDescription
		p	0		world
		p	1		object
	m	(Lakq;Ljava/util/Collection;)V	a	sendRaids
		p	0		server
		p	1		raids
	m	(Lakq;Lvw;)V	a	sendPacketToAllPlayers
		p	0		world
		p	1		payload
	m	(Lbjg;)V	a	sendEntityBrain
		p	0		living
	m	(Lbjg;J)Ljava/util/List;	a	getMemoryDescriptions
		p	0		entity
		p	1		currentTime
	m	(Lbus;)V	a	sendBeeInfo
		p	0		bee
	m	(Lcpv;Lbji;Lbqc;)V	a	sendGoalSelector
		p	0		world
		p	1		mob
		p	2		goalSelector
	m	(Lcpv;Lbji;Lebb;F)V	a	sendPathFindingPacket
		p	0		world
		p	1		mob
		p	2		path
		p	3		nodeReachProximity
	m	(Lcpv;Ldjt;Lehn;)V	a	sendGameEventInfo
		p	0		world
		p	1		event
		p	2		pos
	m	(Lcpv;Ldjv;)V	a	sendGameEventListenerInfo
		p	0		world
		p	1		eventListener
	m	(Lcpv;Lgw;)V	a	sendNeighborsUpdatePacket
		p	0		world
		p	1		pos
	m	(Lcpv;Lgw;Ldfj;Ldcs;)V	a	sendHiveInfo
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Lcqp;Ldvq;)V	a	sendStructurePacket
		p	0		world
		p	1		structureStart
	m	(Lhe;)Z	a	lambda$sendPoiPacketsForChunk$0
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$sendEntityBrain$4
	m	(Ljava/util/List;Lbrp;)V	a	lambda$sendGoalSelector$3
		p	1		goal
	m	(Ljava/util/List;Ljava/lang/String;Lbse;Ljava/lang/Integer;)V	a	lambda$sendEntityBrain$5
	m	(Ljava/util/List;Ljava/util/UUID;Lit/unimi/dsi/fastutil/objects/Object2IntMap;)V	a	lambda$sendEntityBrain$6
	m	(Lakq;Lgw;)V	b	sendPoiRemovedPacket
		p	0		world
		p	1		pos
	m	(Lakq;Lgw;)V	c	sendPoiTicketCountPacket
		p	0		world
		p	1		pos
	m	(Lakq;Lgw;)V	d	sendVillageSectionsPacket
		p	0		world
		p	1		pos
	f	Lorg/slf4j/Logger;	a	LOGGER
c	abc	net/minecraft/network/protocol/game/ServerGamePacketListener
	m	(Labf;)V	a	handleAcceptTeleportPacket
		p	1		packet
	m	(Labg;)V	a	handleBlockEntityTagQuery
		p	1		packet
	m	(Labh;)V	a	handleChangeDifficulty
		p	1		packet
	m	(Labi;)V	a	handleChatAck
		p	1		packet
	m	(Labj;)V	a	handleChatCommand
		p	1		packet
	m	(Labk;)V	a	handleChat
		p	1		packet
	m	(Labl;)V	a	handleChatSessionUpdate
		p	1		packet
	m	(Labm;)V	a	handleChunkBatchReceived
		p	1		packet
	m	(Labn;)V	a	handleClientCommand
		p	1		packet
	m	(Labo;)V	a	handleCustomCommandSuggestions
		p	1		packet
	m	(Labp;)V	a	handleConfigurationAcknowledged
		p	1		packet
	m	(Labq;)V	a	handleContainerButtonClick
		p	1		packet
	m	(Labr;)V	a	handleContainerClick
		p	1		packet
	m	(Labs;)V	a	handleContainerClose
		p	1		packet
	m	(Labt;)V	a	handleEditBook
		p	1		packet
	m	(Labu;)V	a	handleEntityTagQuery
		p	1		packet
	m	(Labv;)V	a	handleInteract
		p	1		packet
	m	(Labw;)V	a	handleJigsawGenerate
		p	1		packet
	m	(Labx;)V	a	handleLockDifficulty
		p	1		packet
	m	(Laby;)V	a	handleMovePlayer
		p	1		packet
	m	(Labz;)V	a	handleMoveVehicle
		p	1		packet
	m	(Laca;)V	a	handlePaddleBoat
		p	1		packet
	m	(Lacb;)V	a	handlePickItem
		p	1		packet
	m	(Lacc;)V	a	handlePlaceRecipe
		p	1		packet
	m	(Lacd;)V	a	handlePlayerAbilities
		p	1		packet
	m	(Lace;)V	a	handlePlayerAction
		p	1		packet
	m	(Lacf;)V	a	handlePlayerCommand
		p	1		packet
	m	(Lacg;)V	a	handlePlayerInput
		p	1		packet
	m	(Lach;)V	a	handleRecipeBookChangeSettingsPacket
		p	1		packet
	m	(Laci;)V	a	handleRecipeBookSeenRecipePacket
		p	1		packet
	m	(Lacj;)V	a	handleRenameItem
		p	1		packet
	m	(Lack;)V	a	handleSeenAdvancements
		p	1		packet
	m	(Lacl;)V	a	handleSelectTrade
		p	1		packet
	m	(Lacm;)V	a	handleSetBeaconPacket
		p	1		packet
	m	(Lacn;)V	a	handleSetCarriedItem
		p	1		packet
	m	(Laco;)V	a	handleSetCommandBlock
		p	1		packet
	m	(Lacp;)V	a	handleSetCommandMinecart
		p	1		packet
	m	(Lacq;)V	a	handleSetCreativeModeSlot
		p	1		packet
	m	(Lacr;)V	a	handleSetJigsawBlock
		p	1		packet
	m	(Lacs;)V	a	handleSetStructureBlock
		p	1		packet
	m	(Lact;)V	a	handleSignUpdate
		p	1		packet
	m	(Lacu;)V	a	handleAnimate
		p	1		packet
	m	(Lacv;)V	a	handleTeleportToEntityPacket
		p	1		packet
	m	(Lacw;)V	a	handleUseItemOn
		p	1		packet
	m	(Lacx;)V	a	handleUseItem
		p	1		packet
	m	()Lsn;	b	protocol
c	abd	net/minecraft/network/protocol/game/ServerPacketListener
	m	()Z	d	shouldPropagateHandlingExceptions
c	abe	net/minecraft/network/protocol/game/ServerPingPacketListener
	m	(Laeb;)V	a	handlePingRequest
		p	1		packet
c	abf	net/minecraft/network/protocol/game/ServerboundAcceptTeleportationPacket
	m	(I)V	<init>	<init>
		p	1		teleportId
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()I	a	getId
	m	(Labc;)V	a	handle
		p	1		listener
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	f	I	a	id
c	abg	net/minecraft/network/protocol/game/ServerboundBlockEntityTagQuery
	m	(ILgw;)V	<init>	<init>
		p	1		transactionId
		p	2		pos
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()I	a	getTransactionId
	m	(Labc;)V	a	handle
		p	1		listener
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	()Lgw;	d	getPos
	f	I	a	transactionId
	f	Lgw;	b	pos
c	abh	net/minecraft/network/protocol/game/ServerboundChangeDifficultyPacket
	m	(Lbgv;)V	<init>	<init>
		p	1		difficulty
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Lbgv;	a	getDifficulty
	m	(Labc;)V	a	handle
		p	1		listener
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	f	Lbgv;	a	difficulty
c	abi	net/minecraft/network/protocol/game/ServerboundChatAckPacket
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()I	a	offset
	m	(Labc;)V	a	handle
		p	1		listener
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	f	I	a	offset
c	abj	net/minecraft/network/protocol/game/ServerboundChatCommandPacket
	m	(Ljava/lang/String;Ljava/time/Instant;JLdy;Ltr$b;)V	<init>	<init>
		p	2		timestamp
		p	3		salt
		p	5		argumentSignatures
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Ljava/lang/String;	a	command
	m	(Labc;)V	a	handle
		p	1		listener
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	()Ljava/time/Instant;	d	timeStamp
	m	()J	e	salt
	m	()Ldy;	f	argumentSignatures
	m	()Ltr$b;	g	lastSeenMessages
	f	Ljava/lang/String;	a	command
	f	Ljava/time/Instant;	b	timeStamp
	f	J	c	salt
	f	Ldy;	d	argumentSignatures
	f	Ltr$b;	e	lastSeenMessages
c	abk	net/minecraft/network/protocol/game/ServerboundChatPacket
	m	(Ljava/lang/String;Ljava/time/Instant;JLtw;Ltr$b;)V	<init>	<init>
		p	2		timestamp
		p	3		salt
		p	5		signature
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Ljava/lang/String;	a	message
	m	(Labc;)V	a	handle
		p	1		listener
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	()Ljava/time/Instant;	d	timeStamp
	m	()J	e	salt
	m	()Ltw;	f	signature
	m	()Ltr$b;	g	lastSeenMessages
	f	Ljava/lang/String;	a	message
	f	Ljava/time/Instant;	b	timeStamp
	f	J	c	salt
	f	Ltw;	d	signature
	f	Ltr$b;	e	lastSeenMessages
c	abl	net/minecraft/network/protocol/game/ServerboundChatSessionUpdatePacket
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Lub$a;	a	chatSession
	m	(Labc;)V	a	handle
		p	1		listener
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	f	Lub$a;	a	chatSession
c	abm	net/minecraft/network/protocol/game/ServerboundChunkBatchReceivedPacket
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()F	a	desiredChunksPerTick
	m	(Labc;)V	a	handle
		p	1		listener
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	f	F	a	desiredChunksPerTick
c	abn	net/minecraft/network/protocol/game/ServerboundClientCommandPacket
	m	(Labn$a;)V	<init>	<init>
		p	1		mode
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Labn$a;	a	getAction
	m	(Labc;)V	a	handle
		p	1		listener
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	f	Labn$a;	a	action
c	abn$a	net/minecraft/network/protocol/game/ServerboundClientCommandPacket$Action
	m	()[Labn$a;	a	$values
	f	Labn$a;	a	PERFORM_RESPAWN
	f	Labn$a;	b	REQUEST_STATS
	f	[Labn$a;	c	$VALUES
c	abo	net/minecraft/network/protocol/game/ServerboundCommandSuggestionPacket
	m	(ILjava/lang/String;)V	<init>	<init>
		p	1		completionId
		p	2		partialCommand
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()I	a	getId
	m	(Labc;)V	a	handle
		p	1		listener
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	()Ljava/lang/String;	d	getCommand
	f	I	a	id
	f	Ljava/lang/String;	b	command
c	abp	net/minecraft/network/protocol/game/ServerboundConfigurationAcknowledgedPacket
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	(Labc;)V	a	handle
		p	1		listener
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	()Lsn;	c	nextProtocol
c	abq	net/minecraft/network/protocol/game/ServerboundContainerButtonClickPacket
	m	(II)V	<init>	<init>
		p	1		syncId
		p	2		buttonId
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()I	a	getContainerId
	m	(Labc;)V	a	handle
		p	1		listener
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	()I	d	getButtonId
	f	I	a	containerId
	f	I	b	buttonId
c	abr	net/minecraft/network/protocol/game/ServerboundContainerClickPacket
	m	(IIIILceu;Lcjf;Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;)V	<init>	<init>
		p	1		syncId
		p	2		revision
		p	3		slot
		p	4		button
		p	5		actionType
		p	6		stack
		p	7		modifiedStacks
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()I	a	getContainerId
	m	(Labc;)V	a	handle
		p	1		listener
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lso;)Ljava/lang/Integer;	b	lambda$new$0
		p	0		bufx
	m	()I	d	getSlotNum
	m	()I	e	getButtonNum
	m	()Lcjf;	f	getCarriedItem
	m	()Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	g	getChangedSlots
	m	()Lceu;	h	getClickType
	m	()I	i	getStateId
	f	I	a	MAX_SLOT_COUNT
	f	I	b	containerId
	f	I	c	stateId
	f	I	d	slotNum
	f	I	e	buttonNum
	f	Lceu;	f	clickType
	f	Lcjf;	g	carriedItem
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	h	changedSlots
c	abs	net/minecraft/network/protocol/game/ServerboundContainerClosePacket
	m	(I)V	<init>	<init>
		p	1		syncId
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()I	a	getContainerId
	m	(Labc;)V	a	handle
		p	1		listener
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	f	I	a	containerId
c	abt	net/minecraft/network/protocol/game/ServerboundEditBookPacket
	m	(ILjava/util/List;Ljava/util/Optional;)V	<init>	<init>
		p	1		slot
		p	2		pages
		p	3		title
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Ljava/util/List;	a	getPages
	m	(Labc;)V	a	handle
		p	1		listener
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lso;Ljava/lang/String;)V	a	lambda$write$3
		p	0		buf2
		p	1		title
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lso;)Ljava/lang/String;	b	lambda$new$1
		p	0		buf2
	m	(Lso;Ljava/lang/String;)V	b	lambda$write$2
		p	0		buf2
		p	1		page
	m	(Lso;)Ljava/lang/String;	c	lambda$new$0
		p	0		buf2
	m	()Ljava/util/Optional;	d	getTitle
	m	()I	e	getSlot
	f	I	a	MAX_BYTES_PER_CHAR
	f	I	b	TITLE_MAX_CHARS
	f	I	c	PAGE_MAX_CHARS
	f	I	d	MAX_PAGES_COUNT
	f	I	e	slot
	f	Ljava/util/List;	f	pages
	f	Ljava/util/Optional;	g	title
c	abu	net/minecraft/network/protocol/game/ServerboundEntityTagQuery
	m	(II)V	<init>	<init>
		p	1		transactionId
		p	2		entityId
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()I	a	getTransactionId
	m	(Labc;)V	a	handle
		p	1		listener
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	()I	d	getEntityId
	f	I	a	transactionId
	f	I	b	entityId
c	abv	net/minecraft/network/protocol/game/ServerboundInteractPacket
	m	(IZLabv$a;)V	<init>	<init>
		p	1		entityId
		p	2		playerSneaking
		p	3		type
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Z	a	isUsingSecondaryAction
	m	(Labc;)V	a	handle
		p	1		listener
	m	(Labv$c;)V	a	dispatch
		p	1		handler
	m	(Lakq;)Lbiq;	a	getTarget
		p	1		world
	m	(Lbiq;Z)Labv;	a	createAttackPacket
		p	0		entity
		p	1		playerSneaking
	m	(Lbiq;ZLbgx;)Labv;	a	createInteractionPacket
		p	0		entity
		p	1		playerSneaking
		p	2		hand
	m	(Lbiq;ZLbgx;Lehn;)Labv;	a	createInteractionPacket
		p	0		entity
		p	1		playerSneaking
		p	2		hand
		p	3		pos
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	f	I	a	entityId
	f	Labv$a;	b	action
	f	Z	c	usingSecondaryAction
	f	Labv$a;	d	ATTACK_ACTION
c	abv$1	net/minecraft/network/protocol/game/ServerboundInteractPacket$1
	m	()Labv$b;	a	getType
	m	(Labv$c;)V	a	dispatch
		p	1		handler
	m	(Lso;)V	a	write
		p	1		buf
c	abv$a	net/minecraft/network/protocol/game/ServerboundInteractPacket$Action
	m	()Labv$b;	a	getType
	m	(Labv$c;)V	a	dispatch
		p	1		handler
	m	(Lso;)V	a	write
		p	1		buf
c	abv$b	net/minecraft/network/protocol/game/ServerboundInteractPacket$ActionType
	m	(Ljava/lang/String;ILjava/util/function/Function;)V	<init>	<init>
		p	3		handlerGetter
	m	()[Labv$b;	a	$values
	m	(Lso;)Labv$a;	a	lambda$static$0
		p	0		buf
	f	Labv$b;	a	INTERACT
	f	Labv$b;	b	ATTACK
	f	Labv$b;	c	INTERACT_AT
	f	Ljava/util/function/Function;	d	reader
	f	[Labv$b;	e	$VALUES
c	abv$c	net/minecraft/network/protocol/game/ServerboundInteractPacket$Handler
	m	()V	a	onAttack
	m	(Lbgx;)V	a	onInteraction
		p	1		hand
	m	(Lbgx;Lehn;)V	a	onInteraction
		p	1		hand
		p	2		pos
c	abv$d	net/minecraft/network/protocol/game/ServerboundInteractPacket$InteractionAction
	m	(Lbgx;)V	<init>	<init>
		p	1		hand
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Labv$b;	a	getType
	m	(Labv$c;)V	a	dispatch
		p	1		handler
	m	(Lso;)V	a	write
		p	1		buf
	f	Lbgx;	a	hand
c	abv$e	net/minecraft/network/protocol/game/ServerboundInteractPacket$InteractionAtLocationAction
	m	(Lbgx;Lehn;)V	<init>	<init>
		p	1		hand
		p	2		pos
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Labv$b;	a	getType
	m	(Labv$c;)V	a	dispatch
		p	1		handler
	m	(Lso;)V	a	write
		p	1		buf
	f	Lbgx;	a	hand
	f	Lehn;	b	location
c	abw	net/minecraft/network/protocol/game/ServerboundJigsawGeneratePacket
	m	(Lgw;IZ)V	<init>	<init>
		p	1		pos
		p	2		maxDepth
		p	3		keepJigsaws
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Lgw;	a	getPos
	m	(Labc;)V	a	handle
		p	1		listener
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	()I	d	levels
	m	()Z	e	keepJigsaws
	f	Lgw;	a	pos
	f	I	b	levels
	f	Z	c	keepJigsaws
c	abx	net/minecraft/network/protocol/game/ServerboundLockDifficultyPacket
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	(Z)V	<init>	<init>
		p	1		difficultyLocked
	m	()Z	a	isLocked
	m	(Labc;)V	a	handle
		p	1		listener
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	f	Z	a	locked
c	aby	net/minecraft/network/protocol/game/ServerboundMovePlayerPacket
	m	(DDDFFZZZ)V	<init>	<init>
		p	1		x
		p	3		y
		p	5		z
		p	7		yaw
		p	8		pitch
		p	9		onGround
		p	10		changePosition
		p	11		changeLook
	m	()Z	a	isOnGround
	m	(D)D	a	getX
		p	1		currentX
	m	(F)F	a	getYRot
		p	1		currentYaw
	m	(Labc;)V	a	handle
		p	1		listener
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(D)D	b	getY
		p	1		currentY
	m	(F)F	b	getXRot
		p	1		currentPitch
	m	(D)D	c	getZ
		p	1		currentZ
	m	()Z	d	hasPosition
	m	()Z	e	hasRotation
	f	D	a	x
	f	D	b	y
	f	D	c	z
	f	F	d	yRot
	f	F	e	xRot
	f	Z	f	onGround
	f	Z	g	hasPos
	f	Z	h	hasRot
c	aby$a	net/minecraft/network/protocol/game/ServerboundMovePlayerPacket$Pos
	m	(DDDZ)V	<init>	<init>
		p	1		x
		p	3		y
		p	5		z
		p	7		onGround
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lso;)Laby$a;	b	read
		p	0		buf
c	aby$b	net/minecraft/network/protocol/game/ServerboundMovePlayerPacket$PosRot
	m	(DDDFFZ)V	<init>	<init>
		p	1		x
		p	3		y
		p	5		z
		p	7		yaw
		p	8		pitch
		p	9		onGround
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lso;)Laby$b;	b	read
		p	0		buf
c	aby$c	net/minecraft/network/protocol/game/ServerboundMovePlayerPacket$Rot
	m	(FFZ)V	<init>	<init>
		p	1		yaw
		p	2		pitch
		p	3		onGround
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lso;)Laby$c;	b	read
		p	0		buf
c	aby$d	net/minecraft/network/protocol/game/ServerboundMovePlayerPacket$StatusOnly
	m	(Z)V	<init>	<init>
		p	1		onGround
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lso;)Laby$d;	b	read
		p	0		buf
c	abz	net/minecraft/network/protocol/game/ServerboundMoveVehiclePacket
	m	(Lbiq;)V	<init>	<init>
		p	1		entity
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()D	a	getX
	m	(Labc;)V	a	handle
		p	1		listener
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	()D	d	getY
	m	()D	e	getZ
	m	()F	f	getYRot
	m	()F	g	getXRot
	f	D	a	x
	f	D	b	y
	f	D	c	z
	f	F	d	yRot
	f	F	e	xRot
c	aca	net/minecraft/network/protocol/game/ServerboundPaddleBoatPacket
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	(ZZ)V	<init>	<init>
		p	1		leftPaddling
		p	2		rightPaddling
	m	()Z	a	getLeft
	m	(Labc;)V	a	handle
		p	1		listener
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	()Z	d	getRight
	f	Z	a	left
	f	Z	b	right
c	acb	net/minecraft/network/protocol/game/ServerboundPickItemPacket
	m	(I)V	<init>	<init>
		p	1		slot
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()I	a	getSlot
	m	(Labc;)V	a	handle
		p	1		listener
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	f	I	a	slot
c	acc	net/minecraft/network/protocol/game/ServerboundPlaceRecipePacket
	m	(ILcmk;Z)V	<init>	<init>
		p	1		syncId
		p	2		recipe
		p	3		craftAll
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()I	a	getContainerId
	m	(Labc;)V	a	handle
		p	1		listener
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	()Laew;	d	getRecipe
	m	()Z	e	isShiftDown
	f	I	a	containerId
	f	Laew;	b	recipe
	f	Z	c	shiftDown
c	acd	net/minecraft/network/protocol/game/ServerboundPlayerAbilitiesPacket
	m	(Lcbr;)V	<init>	<init>
		p	1		abilities
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Z	a	isFlying
	m	(Labc;)V	a	handle
		p	1		listener
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	f	I	a	FLAG_FLYING
	f	Z	b	isFlying
c	ace	net/minecraft/network/protocol/game/ServerboundPlayerActionPacket
	m	(Lace$a;Lgw;Lha;)V	<init>	<init>
		p	1		action
		p	2		pos
		p	3		direction
	m	(Lace$a;Lgw;Lha;I)V	<init>	<init>
		p	1		action
		p	2		pos
		p	3		direction
		p	4		sequence
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Lgw;	a	getPos
	m	(Labc;)V	a	handle
		p	1		listener
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	()Lha;	d	getDirection
	m	()Lace$a;	e	getAction
	m	()I	f	getSequence
	f	Lgw;	a	pos
	f	Lha;	b	direction
	f	Lace$a;	c	action
	f	I	d	sequence
c	ace$a	net/minecraft/network/protocol/game/ServerboundPlayerActionPacket$Action
	m	()[Lace$a;	a	$values
	f	Lace$a;	a	START_DESTROY_BLOCK
	f	Lace$a;	b	ABORT_DESTROY_BLOCK
	f	Lace$a;	c	STOP_DESTROY_BLOCK
	f	Lace$a;	d	DROP_ALL_ITEMS
	f	Lace$a;	e	DROP_ITEM
	f	Lace$a;	f	RELEASE_USE_ITEM
	f	Lace$a;	g	SWAP_ITEM_WITH_OFFHAND
	f	[Lace$a;	h	$VALUES
c	acf	net/minecraft/network/protocol/game/ServerboundPlayerCommandPacket
	m	(Lbiq;Lacf$a;)V	<init>	<init>
		p	1		entity
		p	2		mode
	m	(Lbiq;Lacf$a;I)V	<init>	<init>
		p	1		entity
		p	2		mode
		p	3		mountJumpHeight
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()I	a	getId
	m	(Labc;)V	a	handle
		p	1		listener
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	()Lacf$a;	d	getAction
	m	()I	e	getData
	f	I	a	id
	f	Lacf$a;	b	action
	f	I	c	data
c	acf$a	net/minecraft/network/protocol/game/ServerboundPlayerCommandPacket$Action
	m	()[Lacf$a;	a	$values
	f	Lacf$a;	a	PRESS_SHIFT_KEY
	f	Lacf$a;	b	RELEASE_SHIFT_KEY
	f	Lacf$a;	c	STOP_SLEEPING
	f	Lacf$a;	d	START_SPRINTING
	f	Lacf$a;	e	STOP_SPRINTING
	f	Lacf$a;	f	START_RIDING_JUMP
	f	Lacf$a;	g	STOP_RIDING_JUMP
	f	Lacf$a;	h	OPEN_INVENTORY
	f	Lacf$a;	i	START_FALL_FLYING
	f	[Lacf$a;	j	$VALUES
c	acg	net/minecraft/network/protocol/game/ServerboundPlayerInputPacket
	m	(FFZZ)V	<init>	<init>
		p	1		sideways
		p	2		forward
		p	3		jumping
		p	4		sneaking
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()F	a	getXxa
	m	(Labc;)V	a	handle
		p	1		listener
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	()F	d	getZza
	m	()Z	e	isJumping
	m	()Z	f	isShiftKeyDown
	f	I	a	FLAG_JUMPING
	f	I	b	FLAG_SHIFT_KEY_DOWN
	f	F	c	xxa
	f	F	d	zza
	f	Z	e	isJumping
	f	Z	f	isShiftKeyDown
c	ach	net/minecraft/network/protocol/game/ServerboundRecipeBookChangeSettingsPacket
	m	(Lcfw;ZZ)V	<init>	<init>
		p	1		category
		p	2		guiOpen
		p	3		filteringCraftable
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Lcfw;	a	getBookType
	m	(Labc;)V	a	handle
		p	1		listener
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	()Z	d	isOpen
	m	()Z	e	isFiltering
	f	Lcfw;	a	bookType
	f	Z	b	isOpen
	f	Z	c	isFiltering
c	aci	net/minecraft/network/protocol/game/ServerboundRecipeBookSeenRecipePacket
	m	(Lcmk;)V	<init>	<init>
		p	1		recipe
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Laew;	a	getRecipe
	m	(Labc;)V	a	handle
		p	1		listener
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	f	Laew;	a	recipe
c	acj	net/minecraft/network/protocol/game/ServerboundRenameItemPacket
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		name
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Ljava/lang/String;	a	getName
	m	(Labc;)V	a	handle
		p	1		listener
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	f	Ljava/lang/String;	a	name
c	ack	net/minecraft/network/protocol/game/ServerboundSeenAdvancementsPacket
	m	(Lack$a;Laew;)V	<init>	<init>
		p	1		action
		p	2		tab
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Lack;	a	closedScreen
	m	(Labc;)V	a	handle
		p	1		listener
	m	(Laf;)Lack;	a	openedTab
		p	0		advancement
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	()Lack$a;	d	getAction
	m	()Laew;	e	getTab
	f	Lack$a;	a	action
	f	Laew;	b	tab
c	ack$a	net/minecraft/network/protocol/game/ServerboundSeenAdvancementsPacket$Action
	m	()[Lack$a;	a	$values
	f	Lack$a;	a	OPENED_TAB
	f	Lack$a;	b	CLOSED_SCREEN
	f	[Lack$a;	c	$VALUES
c	acl	net/minecraft/network/protocol/game/ServerboundSelectTradePacket
	m	(I)V	<init>	<init>
		p	1		tradeId
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()I	a	getItem
	m	(Labc;)V	a	handle
		p	1		listener
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	f	I	a	item
c	acm	net/minecraft/network/protocol/game/ServerboundSetBeaconPacket
	m	(Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
		p	1		primaryEffectId
		p	2		secondaryEffectId
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Ljava/util/Optional;	a	getPrimary
	m	(Labc;)V	a	handle
		p	1		listener
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lso;Lbib;)V	a	lambda$write$3
		p	0		buf2
		p	1		secondaryEffectId
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lso;)Lbib;	b	lambda$new$1
		p	0		buf2
	m	(Lso;Lbib;)V	b	lambda$write$2
		p	0		buf2
		p	1		primaryEffectId
	m	(Lso;)Lbib;	c	lambda$new$0
		p	0		buf2
	m	()Ljava/util/Optional;	d	getSecondary
	f	Ljava/util/Optional;	a	primary
	f	Ljava/util/Optional;	b	secondary
c	acn	net/minecraft/network/protocol/game/ServerboundSetCarriedItemPacket
	m	(I)V	<init>	<init>
		p	1		selectedSlot
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()I	a	getSlot
	m	(Labc;)V	a	handle
		p	1		listener
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	f	I	a	slot
c	aco	net/minecraft/network/protocol/game/ServerboundSetCommandBlockPacket
	m	(Lgw;Ljava/lang/String;Lddf$a;ZZZ)V	<init>	<init>
		p	1		pos
		p	2		command
		p	3		type
		p	4		trackOutput
		p	5		conditional
		p	6		alwaysActive
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Lgw;	a	getPos
	m	(Labc;)V	a	handle
		p	1		listener
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	()Ljava/lang/String;	d	getCommand
	m	()Z	e	isTrackOutput
	m	()Z	f	isConditional
	m	()Z	g	isAutomatic
	m	()Lddf$a;	h	getMode
	f	I	a	FLAG_TRACK_OUTPUT
	f	I	b	FLAG_CONDITIONAL
	f	I	c	FLAG_AUTOMATIC
	f	Lgw;	d	pos
	f	Ljava/lang/String;	e	command
	f	Z	f	trackOutput
	f	Z	g	conditional
	f	Z	h	automatic
	f	Lddf$a;	i	mode
c	acp	net/minecraft/network/protocol/game/ServerboundSetCommandMinecartPacket
	m	(ILjava/lang/String;Z)V	<init>	<init>
		p	1		entityId
		p	2		command
		p	3		trackOutput
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Ljava/lang/String;	a	getCommand
	m	(Labc;)V	a	handle
		p	1		listener
	m	(Lcpv;)Lcow;	a	getCommandBlock
		p	1		world
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	()Z	d	isTrackOutput
	f	I	a	entity
	f	Ljava/lang/String;	b	command
	f	Z	c	trackOutput
c	acq	net/minecraft/network/protocol/game/ServerboundSetCreativeModeSlotPacket
	m	(ILcjf;)V	<init>	<init>
		p	1		slot
		p	2		stack
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()I	a	getSlotNum
	m	(Labc;)V	a	handle
		p	1		listener
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	()Lcjf;	d	getItem
	f	I	a	slotNum
	f	Lcjf;	b	itemStack
c	acr	net/minecraft/network/protocol/game/ServerboundSetJigsawBlockPacket
	m	(Lgw;Laew;Laew;Laew;Ljava/lang/String;Lddu$a;)V	<init>	<init>
		p	1		pos
		p	2		name
		p	3		target
		p	4		pool
		p	5		finalState
		p	6		jointType
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Lgw;	a	getPos
	m	(Labc;)V	a	handle
		p	1		listener
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	()Laew;	d	getName
	m	()Laew;	e	getTarget
	m	()Laew;	f	getPool
	m	()Ljava/lang/String;	g	getFinalState
	m	()Lddu$a;	h	getJoint
	f	Lgw;	a	pos
	f	Laew;	b	name
	f	Laew;	c	target
	f	Laew;	d	pool
	f	Ljava/lang/String;	e	finalState
	f	Lddu$a;	f	joint
c	acs	net/minecraft/network/protocol/game/ServerboundSetStructureBlockPacket
	m	(Lgw;Ldei$a;Ldgt;Ljava/lang/String;Lgw;Lhy;Lcxq;Lczh;Ljava/lang/String;ZZZFJ)V	<init>	<init>
		p	1		pos
		p	2		action
		p	3		mode
		p	4		templateName
		p	5		offset
		p	6		size
		p	7		mirror
		p	8		rotation
		p	9		metadata
		p	10		ignoreEntities
		p	11		showAir
		p	12		showBoundingBox
		p	13		integrity
		p	14		seed
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Lgw;	a	getPos
	m	(Labc;)V	a	handle
		p	1		listener
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	()Ldei$a;	d	getUpdateType
	m	()Ldgt;	e	getMode
	m	()Ljava/lang/String;	f	getName
	m	()Lgw;	g	getOffset
	m	()Lhy;	h	getSize
	m	()Lcxq;	i	getMirror
	m	()Lczh;	j	getRotation
	m	()Ljava/lang/String;	k	getData
	m	()Z	l	isIgnoreEntities
	m	()Z	m	isShowAir
	m	()Z	n	isShowBoundingBox
	m	()F	o	getIntegrity
	m	()J	p	getSeed
	f	I	a	FLAG_IGNORE_ENTITIES
	f	I	b	FLAG_SHOW_AIR
	f	I	c	FLAG_SHOW_BOUNDING_BOX
	f	Lgw;	d	pos
	f	Ldei$a;	e	updateType
	f	Ldgt;	f	mode
	f	Ljava/lang/String;	g	name
	f	Lgw;	h	offset
	f	Lhy;	i	size
	f	Lcxq;	j	mirror
	f	Lczh;	k	rotation
	f	Ljava/lang/String;	l	data
	f	Z	m	ignoreEntities
	f	Z	n	showAir
	f	Z	o	showBoundingBox
	f	F	p	integrity
	f	J	q	seed
c	act	net/minecraft/network/protocol/game/ServerboundSignUpdatePacket
	m	(Lgw;ZLjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V	<init>	<init>
		p	1		pos
		p	2		front
		p	3		line1
		p	4		line2
		p	5		line3
		p	6		line4
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Lgw;	a	getPos
	m	(Labc;)V	a	handle
		p	1		listener
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	()Z	d	isFrontText
	m	()[Ljava/lang/String;	e	getLines
	f	I	a	MAX_STRING_LENGTH
	f	Lgw;	b	pos
	f	[Ljava/lang/String;	c	lines
	f	Z	d	isFrontText
c	acu	net/minecraft/network/protocol/game/ServerboundSwingPacket
	m	(Lbgx;)V	<init>	<init>
		p	1		hand
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Lbgx;	a	getHand
	m	(Labc;)V	a	handle
		p	1		listener
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	f	Lbgx;	a	hand
c	acv	net/minecraft/network/protocol/game/ServerboundTeleportToEntityPacket
	m	(Ljava/util/UUID;)V	<init>	<init>
		p	1		targetUuid
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	(Labc;)V	a	handle
		p	1		listener
	m	(Lakq;)Lbiq;	a	getEntity
		p	1		world
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	f	Ljava/util/UUID;	a	uuid
c	acw	net/minecraft/network/protocol/game/ServerboundUseItemOnPacket
	m	(Lbgx;Lehj;I)V	<init>	<init>
		p	1		hand
		p	2		blockHitResult
		p	3		sequence
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Lbgx;	a	getHand
	m	(Labc;)V	a	handle
		p	1		listener
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	()Lehj;	d	getHitResult
	m	()I	e	getSequence
	f	Lehj;	a	blockHit
	f	Lbgx;	b	hand
	f	I	c	sequence
c	acx	net/minecraft/network/protocol/game/ServerboundUseItemPacket
	m	(Lbgx;I)V	<init>	<init>
		p	1		hand
		p	2		sequence
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Lbgx;	a	getHand
	m	(Labc;)V	a	handle
		p	1		listener
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	()I	d	getSequence
	f	Lbgx;	a	hand
	f	I	b	sequence
c	acy	net/minecraft/network/protocol/game/VecDeltaCodec
	m	(D)J	a	encode
		p	0		value
	m	(J)D	a	decode
		p	0		value
	m	(JJJ)Lehn;	a	decode
		p	1		x
		p	3		y
		p	5		z
	m	(Lehn;)J	a	encodeX
		p	1		pos
	m	(Lehn;)J	b	encodeY
		p	1		pos
	m	(Lehn;)J	c	encodeZ
		p	1		pos
	m	(Lehn;)Lehn;	d	delta
		p	1		pos
	m	(Lehn;)V	e	setBase
		p	1		pos
	f	D	a	TRUNCATION_STEPS
	f	Lehn;	b	base
c	acz	net/minecraft/network/protocol/game/package-info
c	ada	net/minecraft/network/protocol/handshake/ClientIntent
	m	()I	a	id
	m	(I)Lada;	a	byId
		p	0		id
	m	()Lsn;	b	protocol
	m	()[Lada;	c	$values
	f	Lada;	a	STATUS
	f	Lada;	b	LOGIN
	f	I	c	STATUS_ID
	f	I	d	LOGIN_ID
	f	[Lada;	e	$VALUES
c	ada$1	net/minecraft/network/protocol/handshake/ClientIntent$1
	f	[I	a	$SwitchMap$net$minecraft$network$protocol$handshake$ClientIntent
c	adb	net/minecraft/network/protocol/handshake/ClientIntentionPacket
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()I	a	protocolVersion
	m	(Ladc;)V	a	handle
		p	1		listener
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	()Lsn;	c	nextProtocol
	m	()Ljava/lang/String;	d	hostName
	m	()I	e	port
	m	()Lada;	f	intention
	f	I	a	protocolVersion
	f	Ljava/lang/String;	b	hostName
	f	I	c	port
	f	Lada;	d	intention
	f	I	e	MAX_HOST_LENGTH
c	adc	net/minecraft/network/protocol/handshake/ServerHandshakePacketListener
	m	(Ladb;)V	a	handleIntention
		p	1		packet
	m	()Lsn;	b	protocol
c	add	net/minecraft/network/protocol/handshake/package-info
c	ade	net/minecraft/network/protocol/login/ClientLoginPacketListener
	m	(Ladf;)V	a	handleCustomQuery
		p	1		packet
	m	(Ladg;)V	a	handleGameProfile
		p	1		packet
	m	(Ladh;)V	a	handleHello
		p	1		packet
	m	(Ladi;)V	a	handleCompression
		p	1		packet
	m	(Ladj;)V	a	handleDisconnect
		p	1		packet
	m	()Lsn;	b	protocol
c	adf	net/minecraft/network/protocol/login/ClientboundCustomQueryPacket
	m	(ILadq;)V	<init>	<init>
		p	1		queryId
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()I	a	transactionId
	m	(Lade;)V	a	handle
		p	1		listener
	m	(Laew;Lso;)Ladq;	a	readPayload
		p	0		id
		p	1		buf
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Laew;Lso;)Lads;	b	readUnknownPayload
		p	0		id
		p	1		buf
	m	()Ladq;	d	payload
	f	I	a	transactionId
	f	Ladq;	b	payload
	f	I	c	MAX_PAYLOAD_SIZE
c	adg	net/minecraft/network/protocol/login/ClientboundGameProfilePacket
	m	(Lcom/mojang/authlib/GameProfile;)V	<init>	<init>
		p	1		profile
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Lcom/mojang/authlib/GameProfile;	a	getGameProfile
	m	(Lade;)V	a	handle
		p	1		listener
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	()Lsn;	c	nextProtocol
	f	Lcom/mojang/authlib/GameProfile;	a	gameProfile
c	adh	net/minecraft/network/protocol/login/ClientboundHelloPacket
	m	(Ljava/lang/String;[B[B)V	<init>	<init>
		p	1		serverId
		p	2		publicKey
		p	3		nonce
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Ljava/lang/String;	a	getServerId
	m	(Lade;)V	a	handle
		p	1		listener
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	()Ljava/security/PublicKey;	d	getPublicKey
	m	()[B	e	getChallenge
	f	Ljava/lang/String;	a	serverId
	f	[B	b	publicKey
	f	[B	c	challenge
c	adi	net/minecraft/network/protocol/login/ClientboundLoginCompressionPacket
	m	(I)V	<init>	<init>
		p	1		compressionThreshold
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()I	a	getCompressionThreshold
	m	(Lade;)V	a	handle
		p	1		listener
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	f	I	a	compressionThreshold
c	adj	net/minecraft/network/protocol/login/ClientboundLoginDisconnectPacket
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	(Ltl;)V	<init>	<init>
		p	1		reason
	m	()Ltl;	a	getReason
	m	(Lade;)V	a	handle
		p	1		listener
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	f	Ltl;	a	reason
c	adk	net/minecraft/network/protocol/login/ServerLoginPacketListener
	m	(Ladl;)V	a	handleCustomQueryPacket
		p	1		packet
	m	(Ladm;)V	a	handleHello
		p	1		packet
	m	(Ladn;)V	a	handleKey
		p	1		packet
	m	(Lado;)V	a	handleLoginAcknowledgement
		p	1		packet
	m	()Lsn;	b	protocol
c	adl	net/minecraft/network/protocol/login/ServerboundCustomQueryAnswerPacket
	m	()I	a	transactionId
	m	(ILso;)Ladp;	a	readPayload
		p	0		queryId
		p	1		buf
	m	(Ladk;)V	a	handle
		p	1		listener
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lso;Ladp;)V	a	lambda$write$0
		p	0		buf
		p	1		response
	m	(Lsu;)V	a	handle
		p	1		listener
	m	(Lso;)Ladl;	b	read
		p	0		buf
	m	(Lso;)Ladp;	c	readUnknownPayload
		p	0		buf
	m	()Ladp;	d	payload
	f	I	a	transactionId
	f	Ladp;	b	payload
	f	I	c	MAX_PAYLOAD_SIZE
c	adm	net/minecraft/network/protocol/login/ServerboundHelloPacket
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Ljava/lang/String;	a	name
	m	(Ladk;)V	a	handle
		p	1		listener
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	()Ljava/util/UUID;	d	profileId
	f	Ljava/lang/String;	a	name
	f	Ljava/util/UUID;	b	profileId
c	adn	net/minecraft/network/protocol/login/ServerboundKeyPacket
	m	(Ljavax/crypto/SecretKey;Ljava/security/PublicKey;[B)V	<init>	<init>
		p	1		secretKey
		p	2		publicKey
		p	3		nonce
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	(Ladk;)V	a	handle
		p	1		listener
	m	(Ljava/security/PrivateKey;)Ljavax/crypto/SecretKey;	a	getSecretKey
		p	1		privateKey
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	([BLjava/security/PrivateKey;)Z	a	isChallengeValid
		p	1		nonce
		p	2		privateKey
	f	[B	a	keybytes
	f	[B	b	encryptedChallenge
c	ado	net/minecraft/network/protocol/login/ServerboundLoginAcknowledgedPacket
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	(Ladk;)V	a	handle
		p	1		listener
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	m	()Lsn;	c	nextProtocol
c	adp	net/minecraft/network/protocol/login/custom/CustomQueryAnswerPayload
	m	(Lso;)V	a	write
		p	1		buf
c	adq	net/minecraft/network/protocol/login/custom/CustomQueryPayload
	m	()Laew;	a	id
	m	(Lso;)V	a	write
		p	1		buf
c	adr	net/minecraft/network/protocol/login/custom/DiscardedQueryAnswerPayload
	m	(Lso;)V	a	write
		p	1		buf
	f	Ladr;	a	INSTANCE
c	ads	net/minecraft/network/protocol/login/custom/DiscardedQueryPayload
	m	()Laew;	a	id
	m	(Lso;)V	a	write
		p	1		buf
	f	Laew;	a	id
c	adt	net/minecraft/network/protocol/login/custom/package-info
c	adu	net/minecraft/network/protocol/login/package-info
c	adv	net/minecraft/network/protocol/package-info
c	adw	net/minecraft/network/protocol/status/ClientStatusPacketListener
	m	(Lady;)V	a	handleStatusResponse
		p	1		packet
	m	()Lsn;	b	protocol
c	adx	net/minecraft/network/protocol/status/ClientboundPongResponsePacket
	m	(J)V	<init>	<init>
		p	1		startTime
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()J	a	getTime
	m	(Lsi;)V	a	handle
		p	1		listener
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	f	J	a	time
c	ady	net/minecraft/network/protocol/status/ClientboundStatusResponsePacket
	m	(Ladz;)V	<init>	<init>
		p	1		metadata
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Ladz;	a	status
	m	(Ladw;)V	a	handle
		p	1		listener
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	f	Ladz;	a	status
c	adz	net/minecraft/network/protocol/status/ServerStatus
	m	()Ltl;	a	description
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Ljava/util/Optional;	b	players
	m	()Ljava/util/Optional;	c	version
	m	()Ljava/util/Optional;	d	favicon
	m	()Z	e	enforcesSecureChat
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ltl;	b	description
	f	Ljava/util/Optional;	c	players
	f	Ljava/util/Optional;	d	version
	f	Ljava/util/Optional;	e	favicon
	f	Z	f	enforcesSecureChat
c	adz$a	net/minecraft/network/protocol/status/ServerStatus$Favicon
	m	()[B	a	iconBytes
	m	(Ladz$a;)Ljava/lang/String;	a	lambda$static$3
		p	0		iconBytes
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	a	lambda$static$2
		p	0		uri
	m	()Ljava/lang/String;	b	lambda$static$1
	m	()Ljava/lang/String;	c	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	[B	b	iconBytes
	f	Ljava/lang/String;	c	PREFIX
c	adz$b	net/minecraft/network/protocol/status/ServerStatus$Players
	m	(IILjava/util/List;)V	<init>	<init>
		p	1		max
		p	2		online
	m	()I	a	max
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	()I	b	online
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$0
		p	0		instance
	m	()Ljava/util/List;	c	sample
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	max
	f	I	c	online
	f	Ljava/util/List;	d	sample
	f	Lcom/mojang/serialization/Codec;	e	PROFILE_CODEC
c	adz$c	net/minecraft/network/protocol/status/ServerStatus$Version
	m	(Ljava/lang/String;I)V	<init>	<init>
		p	1		gameVersion
		p	2		protocolVersion
	m	()Ladz$c;	a	current
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Ljava/lang/String;	b	name
	m	()I	c	protocol
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/lang/String;	b	name
	f	I	c	protocol
c	aea	net/minecraft/network/protocol/status/ServerStatusPacketListener
	m	(Laec;)V	a	handleStatusRequest
		p	1		packet
	m	()Lsn;	b	protocol
c	aeb	net/minecraft/network/protocol/status/ServerboundPingRequestPacket
	m	(J)V	<init>	<init>
		p	1		startTime
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()J	a	getTime
	m	(Labe;)V	a	handle
		p	1		listener
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
	f	J	a	time
c	aec	net/minecraft/network/protocol/status/ServerboundStatusRequestPacket
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	(Laea;)V	a	handle
		p	1		listener
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lsu;)V	a	handle
		p	1		listener
c	aed	net/minecraft/network/protocol/status/package-info
c	aee	net/minecraft/network/syncher/EntityDataAccessor
	m	(ILaef;)V	<init>	<init>
		p	1		id
		p	2		dataType
	m	()I	a	getId
	m	()Laef;	b	getSerializer
	f	I	a	id
	f	Laef;	b	serializer
c	aef	net/minecraft/network/syncher/EntityDataSerializer
	m	(I)Laee;	a	createAccessor
		p	1		id
	m	(Lhj;)Laef;	a	simpleId
		p	0		registry
	m	(Lhj;Lso;)Ljava/lang/Object;	a	lambda$simpleId$2
		p	1		buf
	m	(Lhj;Lso;Ljava/lang/Object;)V	a	lambda$simpleId$1
		p	1		buf
		p	2		value
	m	(Ljava/lang/Class;)Laef;	a	simpleEnum
		p	0		enum_
	m	(Ljava/lang/Class;Lso;)Ljava/lang/Enum;	a	lambda$simpleEnum$0
		p	1		buf
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	copy
		p	1		value
	m	(Lso$b;Lso$a;)Laef;	a	simple
		p	0		writer
		p	1		reader
	m	(Lso;)Ljava/lang/Object;	a	read
		p	1		buf
	m	(Lso;Ljava/lang/Object;)V	a	write
		p	1		buf
		p	2		value
	m	(Lso$b;Lso$a;)Laef;	b	optional
		p	0		writer
		p	1		reader
c	aef$1	net/minecraft/network/syncher/EntityDataSerializer$1
	m	(Lso;)Ljava/lang/Object;	a	read
		p	1		buf
	m	(Lso;Ljava/lang/Object;)V	a	write
		p	1		buf
		p	2		value
	f	Lso$b;	a	val$writer
	f	Lso$a;	b	val$reader
c	aef$a	net/minecraft/network/syncher/EntityDataSerializer$ForValueType
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	copy
		p	1		value
c	aeg	net/minecraft/network/syncher/EntityDataSerializers
	m	(I)Laef;	a	getSerializer
		p	0		id
	m	(Laef;)V	a	registerSerializer
		p	0		handler
	m	(Lso;Ljava/lang/Byte;)V	a	lambda$static$0
		p	0		buf
		p	1		byte_
	m	(Laef;)I	b	getSerializedId
		p	0		handler
	f	Laef;	A	VECTOR3
	f	Laef;	B	QUATERNION
	f	Laqv;	C	SERIALIZERS
	f	Laef;	a	BYTE
	f	Laef;	b	INT
	f	Laef;	c	LONG
	f	Laef;	d	FLOAT
	f	Laef;	e	STRING
	f	Laef;	f	COMPONENT
	f	Laef;	g	OPTIONAL_COMPONENT
	f	Laef;	h	ITEM_STACK
	f	Laef;	i	BLOCK_STATE
	f	Laef;	j	OPTIONAL_BLOCK_STATE
	f	Laef;	k	BOOLEAN
	f	Laef;	l	PARTICLE
	f	Laef;	m	ROTATIONS
	f	Laef;	n	BLOCK_POS
	f	Laef;	o	OPTIONAL_BLOCK_POS
	f	Laef;	p	DIRECTION
	f	Laef;	q	OPTIONAL_UUID
	f	Laef;	r	OPTIONAL_GLOBAL_POS
	f	Laef;	s	COMPOUND_TAG
	f	Laef;	t	VILLAGER_DATA
	f	Laef;	u	OPTIONAL_UNSIGNED_INT
	f	Laef;	v	POSE
	f	Laef;	w	CAT_VARIANT
	f	Laef;	x	FROG_VARIANT
	f	Laef;	y	PAINTING_VARIANT
	f	Laef;	z	SNIFFER_STATE
c	aeg$1	net/minecraft/network/syncher/EntityDataSerializers$1
	m	(Lcjf;)Lcjf;	a	copy
		p	1		value
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	copy
		p	1		value
	m	(Lso;)Ljava/lang/Object;	a	read
		p	1		buf
	m	(Lso;Lcjf;)V	a	write
		p	1		buf
		p	2		value
	m	(Lso;Ljava/lang/Object;)V	a	write
		p	1		buf
		p	2		value
	m	(Lso;)Lcjf;	b	read
c	aeg$2	net/minecraft/network/syncher/EntityDataSerializers$2
	m	(Lso;)Ljava/lang/Object;	a	read
		p	1		buf
	m	(Lso;Ljava/lang/Object;)V	a	write
		p	1		buf
		p	2		value
	m	(Lso;Ljava/util/Optional;)V	a	write
		p	1		buf
		p	2		value
	m	(Lso;)Ljava/util/Optional;	b	read
c	aeg$3	net/minecraft/network/syncher/EntityDataSerializers$3
	m	(Lso;)Ljava/lang/Object;	a	read
		p	1		buf
	m	(Lso;Lit;)V	a	write
		p	1		buf
		p	2		value
	m	(Lso;Liu;)Lit;	a	readParticle
		p	1		buf
		p	2		type
	m	(Lso;Ljava/lang/Object;)V	a	write
		p	1		buf
		p	2		value
	m	(Lso;)Lit;	b	read
c	aeg$4	net/minecraft/network/syncher/EntityDataSerializers$4
	m	(Lso;)Ljava/lang/Object;	a	read
		p	1		buf
	m	(Lso;Lhv;)V	a	write
		p	1		buf
		p	2		value
	m	(Lso;Ljava/lang/Object;)V	a	write
		p	1		buf
		p	2		value
	m	(Lso;)Lhv;	b	read
c	aeg$5	net/minecraft/network/syncher/EntityDataSerializers$5
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	copy
		p	1		value
	m	(Lqw;)Lqw;	a	copy
		p	1		value
	m	(Lso;)Ljava/lang/Object;	a	read
		p	1		buf
	m	(Lso;Ljava/lang/Object;)V	a	write
		p	1		buf
		p	2		value
	m	(Lso;Lqw;)V	a	write
		p	1		buf
		p	2		value
	m	(Lso;)Lqw;	b	read
c	aeg$6	net/minecraft/network/syncher/EntityDataSerializers$6
	m	(Lso;)Ljava/lang/Object;	a	read
		p	1		buf
	m	(Lso;Lcbi;)V	a	write
		p	1		buf
		p	2		value
	m	(Lso;Ljava/lang/Object;)V	a	write
		p	1		buf
		p	2		value
	m	(Lso;)Lcbi;	b	read
c	aeg$7	net/minecraft/network/syncher/EntityDataSerializers$7
	m	(Lso;)Ljava/lang/Object;	a	read
		p	1		buf
	m	(Lso;Ljava/lang/Object;)V	a	write
		p	1		buf
		p	2		value
	m	(Lso;Ljava/util/OptionalInt;)V	a	write
		p	1		buf
		p	2		value
	m	(Lso;)Ljava/util/OptionalInt;	b	read
c	aeh	net/minecraft/network/syncher/SynchedEntityData
	m	(Lbiq;)V	<init>	<init>
		p	1		trackedEntity
	m	()Z	a	isDirty
	m	(Laee;)Z	a	hasItem
		p	1		key
	m	(Laee;Ljava/lang/Object;)V	a	define
		p	1		key
		p	2		initialValue
	m	(Laee;Ljava/lang/Object;Z)V	a	set
		p	1		key
		p	2		value
		p	3		force
	m	(Laeh$a;Laeh$b;)V	a	assignValue
		p	1		to
		p	2		from
	m	(Ljava/lang/Class;Laef;)Laee;	a	defineId
		p	0		entityClass
		p	1		dataHandler
	m	(Ljava/util/List;)V	a	assignValues
		p	1		entries
	m	()Ljava/util/List;	b	packDirty
	m	(Laee;)Ljava/lang/Object;	b	get
		p	1		data
	m	(Laee;Ljava/lang/Object;)V	b	set
		p	1		key
		p	2		value
	m	()Ljava/util/List;	c	getNonDefaultValues
	m	(Laee;)Laeh$a;	c	getItem
		p	1		key
	m	(Laee;Ljava/lang/Object;)V	c	createDataItem
		p	1		key
		p	2		value
	m	()Z	d	isEmpty
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	b	ENTITY_ID_POOL
	f	I	c	MAX_ID_VALUE
	f	Lbiq;	d	entity
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	e	itemsById
	f	Ljava/util/concurrent/locks/ReadWriteLock;	f	lock
	f	Z	g	isDirty
c	aeh$a	net/minecraft/network/syncher/SynchedEntityData$DataItem
	m	(Laee;Ljava/lang/Object;)V	<init>	<init>
		p	1		data
		p	2		value
	m	()Laee;	a	getAccessor
	m	(Ljava/lang/Object;)V	a	setValue
		p	1		value
	m	(Z)V	a	setDirty
		p	1		dirty
	m	()Ljava/lang/Object;	b	getValue
	m	()Z	c	isDirty
	m	()Z	d	isSetToDefault
	m	()Laeh$b;	e	value
	f	Laee;	a	accessor
	f	Ljava/lang/Object;	b	value
	f	Ljava/lang/Object;	c	initialValue
	f	Z	d	dirty
c	aeh$b	net/minecraft/network/syncher/SynchedEntityData$DataValue
	m	()I	a	id
	m	(Laee;Ljava/lang/Object;)Laeh$b;	a	create
		p	0		data
		p	1		value
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lso;I)Laeh$b;	a	read
		p	0		buf
		p	1		id
	m	(Lso;ILaef;)Laeh$b;	a	read
		p	0		buf
		p	1		id
		p	2		handler
	m	()Laef;	b	serializer
	m	()Ljava/lang/Object;	c	value
	f	I	a	id
	f	Laef;	b	serializer
	f	Ljava/lang/Object;	c	value
c	aei	net/minecraft/network/syncher/package-info
c	aej	net/minecraft/obfuscate/package-info
c	aek	net/minecraft/package-info
c	ael	net/minecraft/recipebook/PlaceRecipe
	m	(IIILcmk;Ljava/util/Iterator;I)V	a	placeRecipe
		p	1		gridWidth
		p	2		gridHeight
		p	3		gridOutputSlot
		p	4		recipe
		p	5		inputs
		p	6		amount
	m	(Ljava/util/Iterator;IIII)V	a	addItemToSlot
		p	1		inputs
		p	2		slot
		p	3		amount
		p	4		gridX
		p	5		gridY
c	aem	net/minecraft/recipebook/ServerPlaceRecipe
	m	(Lcfv;)V	<init>	<init>
		p	1		handler
	m	()V	a	clearGrid
	m	(Lakr;Lcmk;Z)V	a	recipeClicked
		p	1		entity
		p	2		recipe
		p	3		craftAll
	m	(Lcgd;Lcjf;)V	a	moveItemToGrid
		p	1		slot
		p	2		stack
	m	(Lcmk;Z)V	a	handleRecipeClicked
		p	1		recipe
		p	2		craftAll
	m	(Ljava/util/Iterator;IIII)V	a	addItemToSlot
		p	1		inputs
		p	2		slot
		p	3		amount
		p	4		gridX
		p	5		gridY
	m	(ZIZ)I	a	getStackSize
		p	1		craftAll
		p	2		limit
		p	3		recipeInCraftingSlots
	m	()Z	b	testClearGrid
	m	()I	c	getAmountOfFreeSlotsInInventory
	f	Lcby;	a	stackedContents
	f	Lcbt;	b	inventory
	f	Lcfv;	c	menu
	f	Lorg/slf4j/Logger;	d	LOGGER
c	aen	net/minecraft/recipebook/package-info
c	aeo	net/minecraft/resources/DelegatingOps
	m	(Lcom/mojang/serialization/DynamicOps;)V	<init>	<init>
		p	1		delegate
	f	Lcom/mojang/serialization/DynamicOps;	a	delegate
c	aep	net/minecraft/resources/FileToIdConverter
	m	(Ljava/lang/String;Ljava/lang/String;)V	<init>	<init>
		p	1		directoryName
		p	2		fileExtension
	m	(Laew;)Laew;	a	idToFile
		p	1		id
	m	(Lant;)Ljava/util/Map;	a	listMatchingResources
		p	1		resourceManager
	m	(Ljava/lang/String;)Laep;	a	json
		p	0		directoryName
	m	(Laew;)Laew;	b	fileToId
		p	1		path
	m	(Lant;)Ljava/util/Map;	b	listMatchingResourceStacks
		p	1		resourceManager
	m	(Laew;)Z	c	lambda$listMatchingResourceStacks$1
		p	1		path
	m	(Laew;)Z	d	lambda$listMatchingResources$0
		p	1		path
	f	Ljava/lang/String;	a	prefix
	f	Ljava/lang/String;	b	extension
c	aeq	net/minecraft/resources/HolderSetCodec
	m	(Laev;Lcom/mojang/serialization/Codec;Z)V	<init>	<init>
		p	1		registry
		p	2		entryCodec
		p	3		alwaysSerializeAsList
	m	(Laev;Lcom/mojang/serialization/Codec;Z)Lcom/mojang/serialization/Codec;	a	create
		p	0		registryRef
		p	1		entryCodec
		p	2		alwaysSerializeAsList
	m	(Lcom/mojang/datafixers/util/Either;)Ljava/util/List;	a	lambda$homogenousList$1
		p	0		either
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/serialization/DataResult;	a	lambda$decodeWithoutRegistry$7
		p	0		pair
	m	(Lcom/mojang/serialization/Codec;Z)Lcom/mojang/serialization/Codec;	a	homogenousList
		p	0		entryCodec
		p	1		alwaysSerializeAsList
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	decodeWithoutRegistry
		p	1		ops
		p	2		input
	m	(Lhe;)Ljava/lang/String;	a	lambda$decodeWithoutRegistry$6
	m	(Lhf;Lcom/mojang/datafixers/util/Either;)Lhi;	a	lambda$decode$3
		p	1		either
	m	(Lhf;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$decode$4
		p	1		pair
	m	(Lhi;)Ljava/lang/String;	a	lambda$encode$5
	m	(Lhi;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	encode
	m	(Ljava/util/List;)Lcom/mojang/datafixers/util/Either;	a	lambda$homogenousList$2
		p	0		entries
	m	(Lhi;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	b	encodeWithoutRegistry
		p	1		entryList
		p	2		ops
		p	3		prefix
	m	(Ljava/util/List;)Ljava/util/List;	b	lambda$homogenousList$0
		p	0		entries
	f	Laev;	a	registryKey
	f	Lcom/mojang/serialization/Codec;	b	elementCodec
	f	Lcom/mojang/serialization/Codec;	c	homogenousListCodec
	f	Lcom/mojang/serialization/Codec;	d	registryAwareCodec
c	aer	net/minecraft/resources/RegistryDataLoader
	m	(Laeu$b;Lant;Laev;Lhz;Lcom/mojang/serialization/Decoder;Ljava/util/Map;)V	a	loadRegistryContents
		p	0		registryInfoGetter
		p	1		resourceManager
		p	2		registryRef
		p	3		newRegistry
		p	4		decoder
		p	5		exceptions
	m	(Laew;)Ljava/lang/String;	a	registryDirPath
		p	0		id
	m	(Lant;Laeu$b;Lcom/mojang/datafixers/util/Pair;)V	a	lambda$load$1
		p	2		loader
	m	(Lant;Lhr;Ljava/util/List;)Lhr$b;	a	load
		p	0		resourceManager
		p	1		baseRegistryManager
		p	2		entries
	m	(Lhq;)Laeu$a;	a	createInfoForContextRegistry
		p	0		registry
	m	(Lhr;Ljava/util/List;)Laeu$b;	a	createContext
		p	0		baseRegistryManager
		p	1		additionalRegistries
	m	(Lhz;)Laeu$a;	a	createInfoForNewRegistry
		p	0		registry
	m	(Ljava/io/PrintWriter;Ljava/util/Map$Entry;)V	a	lambda$logErrors$8
		p	1		entry
	m	(Ljava/lang/String;)V	a	lambda$loadRegistryContents$9
		p	0		error
	m	(Ljava/util/Map$Entry;)Laew;	a	lambda$logErrors$6
		p	0		entry
	m	(Ljava/util/Map;)V	a	logErrors
		p	0		exceptions
	m	(Ljava/util/Map;Laer$b;)Lcom/mojang/datafixers/util/Pair;	a	lambda$load$0
		p	1		entry
	m	(Ljava/util/Map;Lcom/mojang/datafixers/util/Pair;)V	a	lambda$createContext$4
		p	1		pair
	m	(Ljava/util/Map;Lhr$d;)V	a	lambda$createContext$3
		p	1		entry
	m	(Ljava/io/PrintWriter;Ljava/util/Map$Entry;)V	b	lambda$logErrors$7
		p	1		elementEntry
	m	(Ljava/util/Map$Entry;)Laew;	b	lambda$logErrors$5
		p	0		entry
	m	(Ljava/util/Map;Lcom/mojang/datafixers/util/Pair;)V	b	lambda$load$2
		p	1		loader
	f	Ljava/util/List;	a	WORLDGEN_REGISTRIES
	f	Ljava/util/List;	b	DIMENSION_REGISTRIES
	f	Lorg/slf4j/Logger;	c	LOGGER
c	aer$1	net/minecraft/resources/RegistryDataLoader$1
	m	(Laev;)Ljava/util/Optional;	a	lookup
		p	1		registryRef
	f	Ljava/util/Map;	a	val$result
c	aer$a	net/minecraft/resources/RegistryDataLoader$Loader
	m	(Lant;Laeu$b;)V	load	load
		p	1		resourceManager
		p	2		registryInfoGetter
c	aer$b	net/minecraft/resources/RegistryDataLoader$RegistryData
	m	()Laev;	a	key
	m	(Lcom/mojang/serialization/Lifecycle;Ljava/util/Map;)Lcom/mojang/datafixers/util/Pair;	a	create
		p	1		lifecycle
		p	2		exceptions
	m	(Lhz;Ljava/util/Map;Lant;Laeu$b;)V	a	lambda$create$0
		p	3		resourceManager
		p	4		registryInfoGetter
	m	()Lcom/mojang/serialization/Codec;	b	elementCodec
	f	Laev;	a	key
	f	Lcom/mojang/serialization/Codec;	b	elementCodec
c	aes	net/minecraft/resources/RegistryFileCodec
	m	(Laev;Lcom/mojang/serialization/Codec;Z)V	<init>	<init>
		p	1		registryRef
		p	2		elementCodec
		p	3		allowInlineDefinitions
	m	()Ljava/lang/String;	a	lambda$decode$4
	m	(Laev;)Lcom/mojang/serialization/DataResult;	a	lambda$decode$7
	m	(Laev;Lcom/mojang/serialization/Codec;)Laes;	a	create
		p	0		registryRef
		p	1		elementCodec
	m	(Laev;Lcom/mojang/serialization/Codec;Z)Laes;	a	create
		p	0		registryRef
		p	1		elementCodec
		p	2		allowInlineDefinitions
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$decode$9
		p	0		pair
	m	(Lcom/mojang/datafixers/util/Pair;Lhe$c;)Lcom/mojang/datafixers/util/Pair;	a	lambda$decode$8
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;Laev;)Lcom/mojang/serialization/DataResult;	a	lambda$encode$1
		p	2		key
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	lambda$encode$2
		p	3		value
	m	(Lhe;)Ljava/lang/String;	a	lambda$encode$0
	m	(Lhe;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	encode
	m	()Ljava/lang/String;	b	lambda$decode$3
	m	(Laev;)Ljava/lang/String;	b	lambda$decode$6
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	b	lambda$decode$5
		p	0		pair
	f	Laev;	a	registryKey
	f	Lcom/mojang/serialization/Codec;	b	elementCodec
	f	Z	c	allowInline
c	aet	net/minecraft/resources/RegistryFixedCodec
	m	(Laev;)V	<init>	<init>
		p	1		registry
	m	()Ljava/lang/String;	a	lambda$decode$9
	m	(Laev;)Laet;	a	create
		p	0		registry
	m	(Laew;)Lcom/mojang/serialization/DataResult;	a	lambda$decode$6
	m	(Lcom/mojang/datafixers/util/Pair;Lhe$c;)Lcom/mojang/datafixers/util/Pair;	a	lambda$decode$7
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;Laev;)Lcom/mojang/serialization/DataResult;	a	lambda$encode$1
		p	2		registryKey
	m	(Lhe;)Ljava/lang/String;	a	lambda$encode$0
	m	(Lhe;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	encode
	m	(Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	lambda$encode$3
		p	1		value
	m	(Ljava/util/Optional;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/serialization/DataResult;	a	lambda$decode$8
		p	2		pair
	m	()Ljava/lang/String;	b	lambda$encode$4
	m	(Laew;)Ljava/lang/String;	b	lambda$decode$5
	m	()Ljava/lang/String;	c	lambda$encode$2
	f	Laev;	a	registryKey
c	aeu	net/minecraft/resources/RegistryOps
	m	(Lcom/mojang/serialization/DynamicOps;Laeu$b;)V	<init>	<init>
		p	1		delegate
		p	2		registryInfoGetter
	m	()Ljava/lang/String;	a	lambda$retrieveElement$9
	m	(Laeu$a;)Lcom/mojang/serialization/DataResult;	a	lambda$retrieveGetter$0
		p	0		info
	m	(Laeu$b;)Laeu$b;	a	memoizeLookup
		p	0		registryInfoGetter
	m	(Laev;)Ljava/util/Optional;	a	owner
		p	1		registryRef
	m	(Laev;Laeu$a;)Ljava/util/Optional;	a	lambda$retrieveElement$6
		p	1		info
	m	(Laev;Laev;Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/DataResult;	a	lambda$retrieveElement$10
		p	2		ops
	m	(Laev;Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/DataResult;	a	lambda$retrieveGetter$4
		p	1		ops
	m	(Lcom/mojang/serialization/DynamicOps;Laeu$b;)Laeu;	a	create
		p	0		delegate
		p	1		registryInfoGetter
	m	(Lcom/mojang/serialization/DynamicOps;Lhg$b;)Laeu;	a	create
		p	0		delegate
		p	1		wrapperLookup
	m	(Ljava/lang/Object;)Lhe$c;	a	lambda$retrieveElement$11
		p	0		object
	m	()Ljava/lang/String;	b	lambda$retrieveGetter$3
	m	(Laev;)Ljava/util/Optional;	b	getter
		p	1		registryRef
	m	(Ljava/lang/Object;)Lhf;	b	lambda$retrieveGetter$5
		p	0		object
	m	(Laev;)Lcom/mojang/serialization/codecs/RecordCodecBuilder;	c	retrieveGetter
		p	0		registryRef
	m	(Laev;)Lcom/mojang/serialization/codecs/RecordCodecBuilder;	d	retrieveElement
		p	0		key
	m	(Laev;)Lcom/mojang/serialization/DataResult;	e	lambda$retrieveElement$8
	m	(Laev;)Ljava/lang/String;	f	lambda$retrieveElement$7
	m	(Laev;)Lcom/mojang/serialization/DataResult;	g	lambda$retrieveGetter$2
	m	(Laev;)Ljava/lang/String;	h	lambda$retrieveGetter$1
	f	Laeu$b;	b	lookupProvider
c	aeu$1	net/minecraft/resources/RegistryOps$1
	m	(Laev;)Ljava/util/Optional;	a	lookup
		p	1		registryRef
	f	Laeu$b;	a	val$original
	f	Ljava/util/Map;	b	lookups
c	aeu$2	net/minecraft/resources/RegistryOps$2
	m	(Laev;)Ljava/util/Optional;	a	lookup
		p	1		registryRef
	m	(Lhg$c;)Laeu$a;	a	lambda$lookup$0
		p	0		wrapper
	f	Lhg$b;	a	val$lookupProvider
c	aeu$a	net/minecraft/resources/RegistryOps$RegistryInfo
	m	()Lhh;	a	owner
	m	()Lhf;	b	getter
	m	()Lcom/mojang/serialization/Lifecycle;	c	elementsLifecycle
	f	Lhh;	a	owner
	f	Lhf;	b	getter
	f	Lcom/mojang/serialization/Lifecycle;	c	elementsLifecycle
c	aeu$b	net/minecraft/resources/RegistryOps$RegistryInfoLookup
	m	(Laev;)Ljava/util/Optional;	a	lookup
		p	1		registryRef
c	aev	net/minecraft/resources/ResourceKey
	m	(Laew;Laew;)V	<init>	<init>
		p	1		registry
		p	2		value
	m	()Laew;	a	location
	m	(Laev$a;)Laev;	a	lambda$create$1
		p	0		pair
	m	(Laev;)Lcom/mojang/serialization/Codec;	a	codec
		p	0		registry
	m	(Laev;Laew;)Laev;	a	create
		p	0		registry
		p	1		value
	m	(Laew;)Laev;	a	createRegistryKey
		p	0		registry
	m	(Laew;Laew;)Laev;	a	create
		p	0		registry
		p	1		value
	m	()Laew;	b	registry
	m	(Laev;)Z	b	isFor
		p	1		registry
	m	(Laev;Laew;)Laev;	b	lambda$codec$0
		p	1		id
	m	(Laev;)Ljava/util/Optional;	c	cast
		p	1		registryRef
	f	Ljava/util/concurrent/ConcurrentMap;	a	VALUES
	f	Laew;	b	registryName
	f	Laew;	c	location
c	aev$a	net/minecraft/resources/ResourceKey$InternKey
	m	()Laew;	a	registry
	m	()Laew;	b	location
	f	Laew;	a	registry
	f	Laew;	b	location
c	aew	net/minecraft/resources/ResourceLocation
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		id
	m	(Ljava/lang/String;Ljava/lang/String;)V	<init>	<init>
		p	1		namespace
		p	2		path
	m	(Ljava/lang/String;Ljava/lang/String;Laew$a;)V	<init>	<init>
		p	1		namespace
		p	2		path
		p	3		extraData
	m	([Ljava/lang/String;)V	<init>	<init>
		p	1		id
	m	()Ljava/lang/String;	a	getPath
	m	(C)Z	a	isAllowedInResourceLocation
		p	0		c
	m	(Laew;)I	a	compareTo
	m	(Lcom/mojang/brigadier/StringReader;)Laew;	a	read
		p	0		reader
	m	(Ljava/lang/String;)Laew;	a	tryParse
		p	0		id
	m	(Ljava/lang/String;C)Laew;	a	of
		p	0		id
		p	1		delimiter
	m	(Ljava/lang/String;Ljava/lang/String;)Laew;	a	tryBuild
		p	0		namespace
		p	1		path
	m	(Ljava/lang/String;Lz;)Ljava/lang/String;	a	lambda$read$0
	m	(Ljava/util/function/UnaryOperator;)Laew;	a	withPath
		p	1		pathFunction
	m	()Ljava/lang/String;	b	getNamespace
	m	(C)Z	b	validPathChar
		p	0		character
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	b	read
		p	0		id
	m	(Ljava/lang/String;C)[Ljava/lang/String;	b	decompose
		p	0		id
		p	1		delimiter
	m	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	b	toLanguageKey
		p	1		prefix
		p	2		suffix
	m	()Ljava/lang/String;	c	toDebugFileName
	m	(C)Z	c	validNamespaceChar
		p	0		character
	m	(Ljava/lang/String;)Laew;	c	withPath
		p	1		path
	m	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	c	assertValidNamespace
		p	0		namespace
		p	1		path
	m	()Ljava/lang/String;	d	toLanguageKey
	m	(Ljava/lang/String;)Laew;	d	withPrefix
		p	1		prefix
	m	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	d	assertValidPath
		p	0		namespace
		p	1		path
	m	()Ljava/lang/String;	e	toShortLanguageKey
	m	(Ljava/lang/String;)Laew;	e	withSuffix
		p	1		suffix
	m	(Ljava/lang/String;)Ljava/lang/String;	f	toLanguageKey
		p	1		prefix
	m	(Ljava/lang/String;)Z	g	isValidPath
		p	0		path
	m	(Ljava/lang/String;)Z	h	isValidNamespace
		p	0		namespace
	m	(Ljava/lang/String;)Z	i	isValidResourceLocation
		p	0		id
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	C	b	NAMESPACE_SEPARATOR
	f	Ljava/lang/String;	c	DEFAULT_NAMESPACE
	f	Ljava/lang/String;	d	REALMS_NAMESPACE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	e	ERROR_INVALID
	f	Ljava/lang/String;	f	namespace
	f	Ljava/lang/String;	g	path
c	aew$a	net/minecraft/resources/ResourceLocation$Dummy
c	aew$b	net/minecraft/resources/ResourceLocation$Serializer
	m	(Laew;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	a	serialize
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Laew;	a	deserialize
c	aex	net/minecraft/resources/package-info
c	aey	net/minecraft/server/Bootstrap
	m	()V	a	bootStrap
	m	(Laew;)Ljava/lang/String;	a	lambda$getMissingTranslations$1
		p	0		stat
	m	(Ljava/lang/Iterable;Ljava/util/function/Function;Ljava/util/Set;)V	a	checkTranslations
		p	0		registry
		p	1		keyExtractor
		p	2		translationKeys
	m	(Ljava/lang/String;)V	a	realStdoutPrintln
		p	0		str
	m	(Ljava/util/Set;)V	a	checkGameruleTranslations
		p	0		translations
	m	(Ljava/util/function/Function;Lqr;Ljava/util/Set;Ljava/lang/Object;)V	a	lambda$checkTranslations$0
		p	3		object
	m	(Ljava/util/function/Supplier;)V	a	checkBootstrapCalled
		p	0		callerGetter
	m	()Ljava/util/Set;	b	getMissingTranslations
	m	(Ljava/lang/String;)V	b	lambda$validate$3
		p	0		key
	m	(Ljava/util/function/Supplier;)Ljava/lang/RuntimeException;	b	createBootstrapException
		p	0		callerGetter
	m	()V	c	validate
	m	()V	d	wrapStreams
	m	()Ljava/lang/String;	e	lambda$validate$2
	f	Ljava/io/PrintStream;	a	STDOUT
	f	Ljava/util/concurrent/atomic/AtomicLong;	b	bootstrapDuration
	f	Z	c	isBootstrapped
	f	Lorg/slf4j/Logger;	d	LOGGER
c	aey$1	net/minecraft/server/Bootstrap$1
	m	(Lcpr$e;Lcpr$f;)V	a	visit
		p	1		key
		p	2		type
	f	Lqr;	a	val$language
	f	Ljava/util/Set;	b	val$missing
c	aez	net/minecraft/server/ChainedJsonException
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		message
	m	(Ljava/lang/String;Ljava/lang/Throwable;)V	<init>	<init>
		p	1		message
		p	2		cause
	m	(Ljava/lang/Exception;)Laez;	a	forException
		p	0		cause
	m	(Ljava/lang/String;)V	a	prependJsonKey
		p	1		key
	m	(Ljava/lang/String;)V	b	setFilenameAndFlush
		p	1		fileName
	f	Ljava/util/List;	a	entries
	f	Ljava/lang/String;	b	message
c	aez$a	net/minecraft/server/ChainedJsonException$Entry
	m	()Ljava/lang/String;	a	getFilename
	m	(Ljava/lang/String;)V	a	addJsonKey
		p	1		key
	m	()Ljava/lang/String;	b	getJsonKeys
	f	Ljava/lang/String;	a	filename
	f	Ljava/util/List;	b	jsonKeys
c	afa	net/minecraft/server/ConsoleInput
	m	(Ljava/lang/String;Ldt;)V	<init>	<init>
		p	1		command
		p	2		commandSource
	f	Ljava/lang/String;	a	msg
	f	Ldt;	b	source
c	afb	net/minecraft/server/DebugLoggedPrintStream
	m	(Ljava/lang/String;Ljava/io/OutputStream;)V	<init>	<init>
		p	1		name
		p	2		out
	m	(Ljava/lang/String;)V	a	logLine
		p	1		message
	f	Lorg/slf4j/Logger;	b	LOGGER
c	afc	net/minecraft/server/Eula
	m	(Ljava/nio/file/Path;)V	<init>	<init>
		p	1		eulaFile
	m	()Z	a	hasAgreedToEULA
	m	()Z	b	readFile
	m	()V	c	saveDefaults
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/nio/file/Path;	b	file
	f	Z	c	agreed
c	afd	net/minecraft/server/LoggedPrintStream
	m	(Ljava/lang/String;Ljava/io/OutputStream;)V	<init>	<init>
		p	1		name
		p	2		out
	m	(Ljava/lang/String;)V	a	logLine
		p	1		message
	f	Ljava/lang/String;	a	name
	f	Lorg/slf4j/Logger;	b	LOGGER
c	afe	net/minecraft/server/PlayerAdvancements
	m	(Lcom/mojang/datafixers/DataFixer;Laog;Lafi;Ljava/nio/file/Path;Lakr;)V	<init>	<init>
		p	1		dataFixer
		p	2		playerManager
		p	3		advancementLoader
		p	4		filePath
		p	5		owner
	m	()V	a	stopListening
	m	(Laf;)V	a	setSelectedTab
		p	1		advancement
	m	(Laf;Lah;)V	a	startProgress
		p	1		advancement
		p	2		progress
	m	(Laf;Laq;)V	a	lambda$award$2
		p	2		display
	m	(Laf;Ljava/lang/String;)Z	a	award
		p	1		advancement
		p	2		criterionName
	m	(Laf;Ljava/lang/String;Lam;)V	a	registerListener
		p	1		advancement
		p	2		id
		p	3		criterion
	m	(Lafi;)V	a	reload
		p	1		advancementLoader
	m	(Lafi;Laew;Lah;)V	a	lambda$applyFrom$0
		p	2		id
		p	3		progress
	m	(Lafi;Lafe$a;)V	a	applyFrom
		p	1		loader
		p	2		progressMap
	m	(Lag;)Z	a	lambda$updateTreeVisibility$3
		p	1		advancement
	m	(Lag;Ljava/util/Set;Ljava/util/Set;)V	a	updateTreeVisibility
		p	1		root
		p	2		added
		p	3		removed
	m	(Lakr;)V	a	setPlayer
		p	1		owner
	m	(Ljava/util/Map;Laf;Lah;)V	a	lambda$asData$1
		p	1		entry
		p	2		progress
	m	(Ljava/util/Set;Ljava/util/Set;Lag;Z)V	a	lambda$updateTreeVisibility$4
		p	3		advancement
		p	4		displayed
	m	()V	b	save
	m	(Laf;)Lah;	b	getOrStartProgress
		p	1		advancement
	m	(Laf;Ljava/lang/String;)Z	b	revoke
		p	1		advancement
		p	2		criterionName
	m	(Laf;Ljava/lang/String;Lam;)V	b	removeListener
		p	1		advancement
		p	2		id
		p	3		criterion
	m	(Lafi;)V	b	registerListeners
		p	1		advancementLoader
	m	(Lakr;)V	b	flushDirty
		p	1		player
	m	()Lafe$a;	c	asData
	m	(Laf;)V	c	markForVisibilityUpdate
		p	1		advancement
	m	(Lafi;)V	c	checkForAutomaticTriggers
		p	1		advancementLoader
	m	(Laf;)V	d	registerListeners
		p	1		advancement
	m	(Lafi;)V	d	load
		p	1		advancementLoader
	m	(Laf;)V	e	unregisterListeners
		p	1		advancement
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lcom/google/gson/Gson;	b	GSON
	f	Laog;	c	playerList
	f	Ljava/nio/file/Path;	d	playerSavePath
	f	Lak;	e	tree
	f	Ljava/util/Map;	f	progress
	f	Ljava/util/Set;	g	visible
	f	Ljava/util/Set;	h	progressChanged
	f	Ljava/util/Set;	i	rootsToUpdate
	f	Lakr;	j	player
	f	Laf;	k	lastSelectedTab
	f	Z	l	isFirstPacket
	f	Lcom/mojang/serialization/Codec;	m	codec
c	afe$a	net/minecraft/server/PlayerAdvancements$Data
	m	()Ljava/util/Map;	a	map
	m	(Ljava/util/function/BiConsumer;)V	a	forEach
		p	1		consumer
	m	(Ljava/util/function/BiConsumer;Ljava/util/Map$Entry;)V	a	lambda$forEach$0
		p	1		entry
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Map;	b	map
c	aff	net/minecraft/server/RegistryLayer
	m	()Lhl;	a	createRegistryAccess
	m	()[Laff;	b	$values
	f	Laff;	a	STATIC
	f	Laff;	b	WORLDGEN
	f	Laff;	c	DIMENSIONS
	f	Laff;	d	RELOADABLE
	f	Ljava/util/List;	e	VALUES
	f	Lhr$b;	f	STATIC_ACCESS
	f	[Laff;	g	$VALUES
c	afg	net/minecraft/server/ReloadableServerResources
	m	(Lhr$b;Lcec;Ldu$a;I)V	<init>	<init>
		p	1		dynamicRegistryManager
		p	2		enabledFeatures
		p	3		environment
		p	4		functionPermissionLevel
	m	()Lafj;	a	getFunctionLibrary
	m	(Laev;Ljava/util/Map$Entry;)Laqh;	a	lambda$updateRegistryTags$3
		p	1		entry
	m	(Lafg;Ljava/lang/Object;)Lafg;	a	lambda$loadResources$1
		p	1		void_
	m	(Lafg;Ljava/lang/Object;Ljava/lang/Throwable;)V	a	lambda$loadResources$0
		p	1		void_
		p	2		throwable
	m	(Lant;Lhr$b;Lcec;Ldu$a;ILjava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	loadResources
		p	0		manager
		p	1		dynamicRegistryManager
		p	2		enabledFeatures
		p	3		environment
		p	4		functionPermissionLevel
		p	5		prepareExecutor
		p	6		applyExecutor
	m	(Lhr;)V	a	updateRegistryTags
		p	1		dynamicRegistryManager
	m	(Lhr;Laqj$a;)V	a	updateRegistryTags
		p	0		dynamicRegistryManager
		p	1		tags
	m	(Ljava/util/Map$Entry;)Ljava/util/List;	a	lambda$updateRegistryTags$4
		p	0		entry
	m	()Lect;	b	getLootData
	m	(Lhr;Laqj$a;)V	b	lambda$updateRegistryTags$2
		p	1		tags
	m	()Lcml;	c	getRecipeManager
	m	()Ldu;	d	getCommands
	m	()Lafi;	e	getAdvancements
	m	()Ljava/util/List;	f	listeners
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/concurrent/CompletableFuture;	b	DATA_RELOAD_INITIAL_TASK
	f	Ldn$a;	c	commandBuildContext
	f	Ldu;	d	commands
	f	Lcml;	e	recipes
	f	Laqj;	f	tagManager
	f	Lect;	g	lootData
	f	Lafi;	h	advancements
	f	Lafj;	i	functionLibrary
c	afh	net/minecraft/server/RunningOnDifferentThreadException
	f	Lafh;	a	RUNNING_ON_DIFFERENT_THREAD
c	afi	net/minecraft/server/ServerAdvancementManager
	m	(Lect;)V	<init>	<init>
		p	1		conditionManager
	m	()Lak;	a	tree
	m	(Laew;)Laf;	a	get
		p	1		id
	m	(Lcom/google/common/collect/ImmutableMap$Builder;Laew;Lcom/google/gson/JsonElement;)V	a	lambda$apply$0
		p	2		id
		p	3		json
	m	(Ljava/lang/Object;Lant;Lbdp;)V	a	apply
		p	1		prepared
		p	2		manager
		p	3		profiler
	m	(Ljava/util/Map;Lant;Lbdp;)V	a	apply
		p	1		prepared
		p	2		manager
		p	3		profiler
	m	()Ljava/util/Collection;	b	getAllAdvancements
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lcom/google/gson/Gson;	b	GSON
	f	Ljava/util/Map;	c	advancements
	f	Lak;	d	tree
	f	Lect;	e	lootData
c	afj	net/minecraft/server/ServerFunctionLibrary
	m	(ILcom/mojang/brigadier/CommandDispatcher;)V	<init>	<init>
		p	1		level
		p	2		commandDispatcher
	m	()Ljava/util/Map;	a	getFunctions
	m	(Laew;)Ljava/util/Optional;	a	getFunction
		p	1		id
	m	(Laew;Lcom/google/common/collect/ImmutableMap$Builder;Ldp;Ljava/lang/Throwable;)Ljava/lang/Object;	a	lambda$reload$5
		p	2		function
		p	3		ex
	m	(Lann$a;Lant;Lbdp;Lbdp;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	reload
		p	1		synchronizer
		p	2		manager
		p	3		prepareProfiler
		p	4		applyProfiler
		p	5		prepareExecutor
		p	6		applyExecutor
	m	(Lanr;)Ljava/util/List;	a	readLines
		p	0		resource
	m	(Lant;)Ljava/util/Map;	a	lambda$reload$1
	m	(Lcom/google/common/collect/ImmutableMap$Builder;Laew;Ljava/util/concurrent/CompletableFuture;)V	a	lambda$reload$6
		p	1		id
		p	2		functionFuture
	m	(Lcom/mojang/datafixers/util/Pair;)V	a	lambda$reload$7
		p	1		intermediate
	m	(Ljava/util/Map$Entry;Laew;Ldt;)Ldp;	a	lambda$reload$2
	m	(Ljava/util/Map;Ljava/lang/Void;Ljava/lang/Throwable;)Ljava/util/Map;	a	lambda$reload$3
		p	1		unused
		p	2		ex
	m	(Ljava/util/concurrent/Executor;Ljava/util/Map;)Ljava/util/concurrent/CompletionStage;	a	lambda$reload$4
		p	2		functions
	m	()Ljava/lang/Iterable;	b	getAvailableTags
	m	(Laew;)Ljava/util/Collection;	b	getTag
		p	1		id
	m	(Lant;)Ljava/util/Map;	b	lambda$reload$0
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Laep;	b	LISTER
	f	Ljava/util/Map;	c	functions
	f	Laqi;	d	tagsLoader
	f	Ljava/util/Map;	e	tags
	f	I	f	functionCompilationLevel
	f	Lcom/mojang/brigadier/CommandDispatcher;	g	dispatcher
c	afk	net/minecraft/server/ServerFunctionManager
	m	(Lnet/minecraft/server/MinecraftServer;Lafj;)V	<init>	<init>
		p	1		server
		p	2		loader
	m	()I	a	getCommandLimit
	m	(Laew;)Ljava/util/Optional;	a	get
		p	1		id
	m	(Lafj;)V	a	replaceLibrary
		p	1		loader
	m	(Ldp;Ldt;)I	a	execute
		p	1		function
		p	2		source
	m	(Ldp;Ldt;Lafk$c;Lqw;)I	a	execute
		p	1		function
		p	2		source
		p	3		tracer
		p	4		arguments
	m	(Ljava/util/Collection;Laew;)V	a	executeTagFunctions
		p	1		functions
		p	2		label
	m	()Lcom/mojang/brigadier/CommandDispatcher;	b	getDispatcher
	m	(Laew;)Ljava/util/Collection;	b	getTag
		p	1		id
	m	(Lafj;)V	b	postReload
		p	1		loader
	m	()V	c	tick
	m	()Ldt;	d	getGameLoopSender
	m	()Ljava/lang/Iterable;	e	getFunctionNames
	m	()Ljava/lang/Iterable;	f	getTagNames
	f	Ltl;	a	NO_RECURSIVE_TRACES
	f	Laew;	b	TICK_FUNCTION_TAG
	f	Laew;	c	LOAD_FUNCTION_TAG
	f	Lnet/minecraft/server/MinecraftServer;	d	server
	f	Lafk$a;	e	context
	f	Ljava/util/List;	f	ticking
	f	Z	g	postReload
	f	Lafj;	h	library
c	afk$a	net/minecraft/server/ServerFunctionManager$ExecutionContext
	m	(Lafk;Lafk$c;)V	<init>	<init>
		p	2		tracer
	m	(Ldp;Ldt;)V	a	delayFunctionCall
		p	1		function
		p	2		source
	m	(Ldt;)Ldt;	a	wrapSender
		p	1		source
	m	(Ljava/lang/String;)V	a	reportError
		p	1		message
	m	(Ldp;Ldt;)I	b	runTopCommand
		p	1		function
		p	2		source
	f	Lafk;	a	this$0
	f	I	b	depth
	f	Lafk$c;	c	tracer
	f	Ljava/util/Deque;	d	commandQueue
	f	Ljava/util/List;	e	nestedCalls
	f	Z	f	abortCurrentDepth
c	afk$a$a	net/minecraft/server/ServerFunctionManager$ExecutionContext$AbortingReturnValueConsumer
	m	(Lafk$a;Ljava/util/function/IntConsumer;)V	<init>	<init>
		p	2		delegate
	f	Lafk$a;	a	this$1
	f	Ljava/util/function/IntConsumer;	b	wrapped
c	afk$b	net/minecraft/server/ServerFunctionManager$QueuedCommand
	m	(Ldt;ILdp$d;)V	<init>	<init>
		p	1		source
		p	2		depth
		p	3		element
	m	(Lafk;Ljava/util/Deque;ILafk$c;)V	a	execute
		p	1		manager
		p	2		entries
		p	3		maxChainLength
		p	4		tracer
	f	Ldt;	a	sender
	f	I	b	depth
	f	Ldp$d;	c	entry
c	afk$c	net/minecraft/server/ServerFunctionManager$TraceCallbacks
	m	(ILaew;I)V	a	onCall
		p	1		depth
		p	2		function
		p	3		size
	m	(ILjava/lang/String;)V	a	onCommand
		p	1		depth
		p	2		command
	m	(ILjava/lang/String;I)V	a	onReturn
		p	1		depth
		p	2		command
		p	3		result
	m	(ILjava/lang/String;)V	b	onError
		p	1		depth
		p	2		message
c	afl	net/minecraft/server/ServerInfo
	m	()Ljava/lang/String;	G	getServerVersion
	m	()I	H	getPlayerCount
	m	()I	I	getMaxPlayers
	m	()Ljava/lang/String;	aa	getMotd
c	afm	net/minecraft/server/ServerInterface
	m	()[Ljava/lang/String;	J	getPlayerNames
	m	()Lajo;	a	getProperties
	m	(Ljava/lang/String;)Ljava/lang/String;	a	runCommand
		p	1		command
	m	()Ljava/lang/String;	b	getServerIp
	m	()I	d	getServerPort
	m	()Ljava/lang/String;	f	getServerName
	m	()Ljava/lang/String;	q	getLevelIdName
	m	()Ljava/lang/String;	s	getPluginNames
c	afn	net/minecraft/server/ServerScoreboard
	m	(Lnet/minecraft/server/MinecraftServer;)V	<init>	<init>
		p	1		server
	m	()V	a	setDirty
	m	(Leii;Leij;)V	a	setDisplayObjective
		p	1		slot
		p	2		objective
	m	(Leij;)V	a	onObjectiveAdded
		p	1		objective
	m	(Leik;)V	a	onTeamAdded
		p	1		team
	m	(Leil;)V	a	onScoreChanged
		p	1		score
	m	(Ljava/lang/Runnable;)V	a	addDirtyListener
		p	1		listener
	m	(Ljava/lang/String;)V	a	onPlayerRemoved
		p	1		playerName
	m	(Ljava/lang/String;Leij;)V	a	onPlayerScoreRemoved
		p	1		playerName
		p	2		objective
	m	(Ljava/lang/String;Leik;)Z	a	addPlayerToTeam
		p	1		playerName
		p	2		team
	m	(Lqw;)Lein;	a	createData
		p	1		nbt
	m	()Lebr$a;	b	dataFactory
	m	(Leij;)V	b	onObjectiveChanged
		p	1		objective
	m	(Leik;)V	b	onTeamChanged
		p	1		team
	m	(Ljava/lang/String;Leik;)V	b	removePlayerFromTeam
		p	1		playerName
		p	2		team
	m	(Leij;)V	c	onObjectiveRemoved
		p	1		objective
	m	(Leik;)V	c	onTeamRemoved
		p	1		team
	m	(Leij;)Ljava/util/List;	d	getStartTrackingPackets
		p	1		objective
	m	(Leij;)V	e	startTrackingObjective
		p	1		objective
	m	(Leij;)Ljava/util/List;	f	getStopTrackingPackets
		p	1		objective
	m	(Leij;)V	g	stopTrackingObjective
		p	1		objective
	m	(Leij;)I	h	getObjectiveDisplaySlotCount
		p	1		objective
	m	()Lein;	i	createData
	f	Lnet/minecraft/server/MinecraftServer;	a	server
	f	Ljava/util/Set;	b	trackedObjectives
	f	Ljava/util/List;	c	dirtyListeners
c	afn$a	net/minecraft/server/ServerScoreboard$Method
	m	()[Lafn$a;	a	$values
	f	Lafn$a;	a	CHANGE
	f	Lafn$a;	b	REMOVE
	f	[Lafn$a;	c	$VALUES
c	afo	net/minecraft/server/Services
	m	()Lash;	a	profileKeySignatureValidator
	m	(Lcom/mojang/authlib/yggdrasil/YggdrasilAuthenticationService;Ljava/io/File;)Lafo;	a	create
		p	0		authenticationService
		p	1		rootDirectory
	m	()Lcom/mojang/authlib/minecraft/MinecraftSessionService;	b	sessionService
	m	()Lcom/mojang/authlib/yggdrasil/ServicesKeySet;	c	servicesKeySet
	m	()Lcom/mojang/authlib/GameProfileRepository;	d	profileRepository
	m	()Laoc;	e	profileCache
	f	Lcom/mojang/authlib/minecraft/MinecraftSessionService;	a	sessionService
	f	Lcom/mojang/authlib/yggdrasil/ServicesKeySet;	b	servicesKeySet
	f	Lcom/mojang/authlib/GameProfileRepository;	c	profileRepository
	f	Laoc;	d	profileCache
	f	Ljava/lang/String;	e	USERID_CACHE_FILE
c	afp	net/minecraft/server/TickTask
	m	(ILjava/lang/Runnable;)V	<init>	<init>
		p	1		creationTicks
		p	2		runnable
	m	()I	a	getTick
	f	I	a	tick
	f	Ljava/lang/Runnable;	b	runnable
c	afq	net/minecraft/server/WorldLoader
	m	(Lafq$c;Lafq$f;Lafq$e;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	load
		p	0		serverConfig
		p	1		loadContextSupplier
		p	2		saveApplierFactory
		p	3		prepareExecutor
		p	4		applyExecutor
	m	(Lanj;Lafg;Ljava/lang/Throwable;)V	a	lambda$load$0
		p	1		dataPackContents
		p	2		throwable
	m	(Lant;Lhl;Laff;Ljava/util/List;)Lhr$b;	a	loadLayer
		p	0		resourceManager
		p	1		combinedDynamicRegistries
		p	2		type
		p	3		entries
	m	(Lhr$b;Lafq$e;Lanj;Lhl;Lafq$b;Lafg;)Ljava/lang/Object;	a	lambda$load$1
		p	5		dataPackContents
	m	(Lant;Lhl;Laff;Ljava/util/List;)Lhl;	b	loadAndReplaceLayer
		p	0		resourceManager
		p	1		combinedDynamicRegistries
		p	2		type
		p	3		entries
	f	Lorg/slf4j/Logger;	a	LOGGER
c	afq$a	net/minecraft/server/WorldLoader$DataLoadContext
	m	()Lant;	a	resources
	m	()Lcqo;	b	dataConfiguration
	m	()Lhr$b;	c	datapackWorldgen
	m	()Lhr$b;	d	datapackDimensions
	f	Lant;	a	resources
	f	Lcqo;	b	dataConfiguration
	f	Lhr$b;	c	datapackWorldgen
	f	Lhr$b;	d	datapackDimensions
c	afq$b	net/minecraft/server/WorldLoader$DataLoadOutput
	m	()Ljava/lang/Object;	a	cookie
	m	()Lhr$b;	b	finalDimensions
	f	Ljava/lang/Object;	a	cookie
	f	Lhr$b;	b	finalDimensions
c	afq$c	net/minecraft/server/WorldLoader$InitConfig
	m	()Lafq$d;	a	packConfig
	m	()Ldu$a;	b	commandSelection
	m	()I	c	functionCompilationLevel
	f	Lafq$d;	a	packConfig
	f	Ldu$a;	b	commandSelection
	f	I	c	functionCompilationLevel
c	afq$d	net/minecraft/server/WorldLoader$PackConfig
	m	()Lcom/mojang/datafixers/util/Pair;	a	createResourceManager
	m	()Lane;	b	packRepository
	m	()Lcqo;	c	initialDataConfig
	m	()Z	d	safeMode
	m	()Z	e	initMode
	f	Lane;	a	packRepository
	f	Lcqo;	b	initialDataConfig
	f	Z	c	safeMode
	f	Z	d	initMode
c	afq$e	net/minecraft/server/WorldLoader$ResultFactory
	m	(Lanj;Lafg;Lhl;Ljava/lang/Object;)Ljava/lang/Object;	create	create
		p	1		resourceManager
		p	2		dataPackContents
		p	3		combinedDynamicRegistries
		p	4		loadContext
c	afq$f	net/minecraft/server/WorldLoader$WorldDataSupplier
	m	(Lafq$a;)Lafq$b;	get	get
		p	1		context
c	afr	net/minecraft/server/WorldStem
	m	()Lanj;	a	resourceManager
	m	()Lafg;	b	dataPackResources
	m	()Lhl;	c	registries
	m	()Lecm;	d	worldData
	f	Lanj;	a	resourceManager
	f	Lafg;	b	dataPackResources
	f	Lhl;	c	registries
	f	Lecm;	d	worldData
c	afs	net/minecraft/server/advancements/AdvancementVisibilityEvaluator
	m	(Lae;Z)Lafs$b;	a	evaluateVisibilityRule
		p	0		advancement
		p	1		force
	m	(Lag;Lit/unimi/dsi/fastutil/Stack;Ljava/util/function/Predicate;Lafs$a;)Z	a	evaluateVisibility
		p	0		advancement
		p	1		statuses
		p	2		donePredicate
		p	3		consumer
	m	(Lag;Ljava/util/function/Predicate;Lafs$a;)V	a	evaluateVisibility
		p	0		advancement
		p	1		donePredicate
		p	2		consumer
	m	(Lit/unimi/dsi/fastutil/Stack;)Z	a	evaluateVisiblityForUnfinishedNode
		p	0		statuses
	f	I	a	VISIBILITY_DEPTH
c	afs$a	net/minecraft/server/advancements/AdvancementVisibilityEvaluator$Output
	m	(Lag;Z)V	accept	accept
		p	1		advancement
		p	2		shouldDisplay
c	afs$b	net/minecraft/server/advancements/AdvancementVisibilityEvaluator$VisibilityRule
	m	()[Lafs$b;	a	$values
	f	Lafs$b;	a	SHOW
	f	Lafs$b;	b	HIDE
	f	Lafs$b;	c	NO_CHANGE
	f	[Lafs$b;	d	$VALUES
c	aft	net/minecraft/server/advancements/package-info
c	afu	net/minecraft/server/bossevents/CustomBossEvent
	m	(Laew;Ltl;)V	<init>	<init>
		p	1		id
		p	2		displayName
	m	()Laew;	a	getTextId
	m	(I)V	a	setValue
		p	1		value
	m	(Lakr;)V	a	addPlayer
		p	1		player
	m	(Ljava/util/Collection;)Z	a	setPlayers
		p	1		players
	m	(Ljava/util/UUID;)V	a	addOfflinePlayer
		p	1		uuid
	m	(Lqw;Laew;)Lafu;	a	load
		p	0		nbt
		p	1		id
	m	(Luh;)Luh;	a	lambda$getDisplayName$0
		p	1		style
	m	()V	b	removeAllPlayers
	m	(I)V	b	setMax
		p	1		maxValue
	m	(Lakr;)V	b	removePlayer
		p	1		player
	m	()I	c	getValue
	m	(Lakr;)V	c	onPlayerConnect
		p	1		player
	m	()I	d	getMax
	m	(Lakr;)V	d	onPlayerDisconnect
		p	1		player
	m	()Ltl;	e	getDisplayName
	m	()Lqw;	f	save
	f	Laew;	h	id
	f	Ljava/util/Set;	i	players
	f	I	j	value
	f	I	k	max
c	afv	net/minecraft/server/bossevents/CustomBossEvents
	m	()Ljava/util/Collection;	a	getIds
	m	(Laew;)Lafu;	a	get
		p	1		id
	m	(Laew;Ltl;)Lafu;	a	create
		p	1		id
		p	2		displayName
	m	(Lafu;)V	a	remove
		p	1		bossBar
	m	(Lakr;)V	a	onPlayerConnect
		p	1		player
	m	(Lqw;)V	a	load
		p	1		nbt
	m	()Ljava/util/Collection;	b	getEvents
	m	(Lakr;)V	b	onPlayerDisconnect
		p	1		player
	m	()Lqw;	c	save
	f	Ljava/util/Map;	a	events
c	afw	net/minecraft/server/bossevents/package-info
c	afx	net/minecraft/server/chase/ChaseClient
	m	(Ljava/lang/String;ILnet/minecraft/server/MinecraftServer;)V	<init>	<init>
		p	1		ip
		p	2		port
		p	3		minecraftServer
	m	()V	a	start
	m	(Lafx$a;)V	a	lambda$handleTeleport$0
		p	1		pos
	m	(Ljava/lang/String;)V	a	handleMessage
		p	1		message
	m	(Ljava/util/Scanner;)V	a	handleTeleport
		p	1		scanner
	m	()V	b	stop
	m	(Ljava/lang/String;)V	b	executeCommand
		p	1		command
	m	(Ljava/util/Scanner;)Ljava/util/Optional;	b	parseTarget
		p	1		scanner
	m	()V	c	run
	m	(Ljava/lang/String;)V	c	lambda$executeCommand$1
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	I	b	RECONNECT_INTERVAL_SECONDS
	f	Ljava/lang/String;	c	serverHost
	f	I	d	serverPort
	f	Lnet/minecraft/server/MinecraftServer;	e	server
	f	Z	f	wantsToRun
	f	Ljava/net/Socket;	g	socket
	f	Ljava/lang/Thread;	h	thread
c	afx$a	net/minecraft/server/chase/ChaseClient$TeleportTarget
	m	(Laev;Lehn;Lehm;)V	<init>	<init>
		p	1		dimension
		p	2		pos
		p	3		rot
	m	()Laev;	a	level
	m	()Lehn;	b	pos
	m	()Lehm;	c	rot
	f	Laev;	a	level
	f	Lehn;	b	pos
	f	Lehm;	c	rot
c	afy	net/minecraft/server/chase/ChaseServer
	m	(Ljava/lang/String;ILaog;I)V	<init>	<init>
		p	1		ip
		p	2		port
		p	3		playerManager
		p	4		interval
	m	()V	a	start
	m	(Ljava/net/Socket;[B)V	a	lambda$runSender$0
	m	()V	b	stop
	m	()V	c	runSender
	m	()V	d	runAcceptor
	m	()Lafy$a;	e	getPlayerPosition
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/lang/String;	b	serverBindAddress
	f	I	c	serverPort
	f	Laog;	d	playerList
	f	I	e	broadcastIntervalMs
	f	Z	f	wantsToRun
	f	Ljava/net/ServerSocket;	g	serverSocket
	f	Ljava/util/concurrent/CopyOnWriteArrayList;	h	clientSockets
c	afy$a	net/minecraft/server/chase/ChaseServer$PlayerPosition
	m	()Ljava/lang/String;	a	dimensionName
	m	()D	b	x
	m	()D	c	y
	m	()D	d	z
	m	()F	e	yRot
	m	()F	f	xRot
	m	()Ljava/lang/String;	g	format
	f	Ljava/lang/String;	a	dimensionName
	f	D	b	x
	f	D	c	y
	f	D	d	z
	f	F	e	yRot
	f	F	f	xRot
c	afz	net/minecraft/server/chase/package-info
c	aga	net/minecraft/server/commands/AdvancementCommands
	m	(Lag;Ljava/util/List;)V	a	addChildren
		p	0		parent
		p	1		childList
	m	(Laga$a;Ljava/lang/String;Laf;Ljava/util/Collection;)Ltl;	a	lambda$performCriterion$21
	m	(Laga$a;Ljava/util/Collection;Ljava/util/Collection;)Ltl;	a	lambda$perform$19
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$15
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Laf;Laga$b;)Ljava/util/List;	a	getAdvancements
		p	0		context
		p	1		advancement
		p	2		selection
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$register$10
		p	0		context
		p	1		builder
	m	(Ldt;)Z	a	lambda$register$1
		p	0		source
	m	(Ldt;Ljava/util/Collection;Laga$a;Laf;Ljava/lang/String;)I	a	performCriterion
		p	0		source
		p	1		targets
		p	2		operation
		p	3		advancement
		p	4		criterion
	m	(Ldt;Ljava/util/Collection;Laga$a;Ljava/util/Collection;)I	a	perform
		p	0		source
		p	1		targets
		p	2		operation
		p	3		selection
	m	(Laga$a;Ljava/lang/String;Laf;Ljava/util/Collection;)Ltl;	b	lambda$performCriterion$20
	m	(Laga$a;Ljava/util/Collection;Ljava/util/Collection;)Ltl;	b	lambda$perform$18
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$14
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	b	lambda$register$3
		p	0		context
		p	1		builder
	m	(Laga$a;Ljava/util/Collection;Ljava/util/Collection;)Ltl;	c	lambda$perform$17
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$13
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	c	lambda$static$0
		p	0		context
		p	1		builder
	m	(Laga$a;Ljava/util/Collection;Ljava/util/Collection;)Ltl;	d	lambda$perform$16
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$12
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$11
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$9
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$8
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	h	lambda$register$7
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	i	lambda$register$6
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	j	lambda$register$5
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	k	lambda$register$4
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	l	lambda$register$2
		p	0		context
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	a	SUGGEST_ADVANCEMENTS
c	aga$a	net/minecraft/server/commands/AdvancementCommands$Action
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()Ljava/lang/String;	a	getKey
	m	(Lakr;Laf;)Z	a	perform
		p	1		player
		p	2		advancement
	m	(Lakr;Laf;Ljava/lang/String;)Z	a	performCriterion
		p	1		player
		p	2		advancement
		p	3		criterion
	m	(Lakr;Ljava/lang/Iterable;)I	a	perform
		p	1		player
		p	2		advancements
	m	()[Laga$a;	b	$values
	f	Laga$a;	a	GRANT
	f	Laga$a;	b	REVOKE
	f	Ljava/lang/String;	c	key
	f	[Laga$a;	d	$VALUES
c	aga$a$1	net/minecraft/server/commands/AdvancementCommands$Action$1
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	(Lakr;Laf;)Z	a	perform
		p	1		player
		p	2		advancement
	m	(Lakr;Laf;Ljava/lang/String;)Z	a	performCriterion
		p	1		player
		p	2		advancement
		p	3		criterion
c	aga$a$2	net/minecraft/server/commands/AdvancementCommands$Action$2
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	(Lakr;Laf;)Z	a	perform
		p	1		player
		p	2		advancement
	m	(Lakr;Laf;Ljava/lang/String;)Z	a	performCriterion
		p	1		player
		p	2		advancement
		p	3		criterion
c	aga$b	net/minecraft/server/commands/AdvancementCommands$Mode
	m	(Ljava/lang/String;IZZ)V	<init>	<init>
		p	3		before
		p	4		after
	m	()[Laga$b;	a	$values
	f	Laga$b;	a	ONLY
	f	Laga$b;	b	THROUGH
	f	Laga$b;	c	FROM
	f	Laga$b;	d	UNTIL
	f	Laga$b;	e	EVERYTHING
	f	Z	f	parents
	f	Z	g	children
	f	[Laga$b;	h	$VALUES
c	agb	net/minecraft/server/commands/AttributeCommand
	m	(Lbiq;)Lbjg;	a	getLivingEntity
		p	0		entity
	m	(Lbiq;Lhe;)Lbki;	a	getAttributeInstance
		p	0		entity
		p	1		attribute
	m	(Lcom/mojang/brigadier/CommandDispatcher;Ldn;)V	a	register
		p	0		dispatcher
		p	1		registryAccess
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$15
		p	0		context
	m	(Ldt;)Z	a	lambda$register$4
		p	0		source
	m	(Ldt;Lbiq;Lhe;D)I	a	getAttributeValue
		p	0		source
		p	1		target
		p	2		attribute
		p	3		multiplier
	m	(Ldt;Lbiq;Lhe;Ljava/util/UUID;)I	a	removeModifier
		p	0		source
		p	1		target
		p	2		attribute
		p	3		uuid
	m	(Ldt;Lbiq;Lhe;Ljava/util/UUID;D)I	a	getAttributeModifier
		p	0		source
		p	1		target
		p	2		attribute
		p	3		uuid
		p	4		multiplier
	m	(Ldt;Lbiq;Lhe;Ljava/util/UUID;Ljava/lang/String;DLbkk$a;)I	a	addModifier
		p	0		source
		p	1		target
		p	2		attribute
		p	3		uuid
		p	4		name
		p	5		value
		p	7		operation
	m	(Lhe;)Ltl;	a	getAttributeDescription
		p	0		attribute
	m	(Lhe;Lbiq;D)Ltl;	a	lambda$setAttributeBase$19
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		name
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$1
		p	0		entityName
		p	1		attributeName
	m	(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$3
		p	0		entityName
		p	1		attributeName
		p	2		uuid
	m	(Ljava/util/UUID;Lhe;Lbiq;)Ltl;	a	lambda$removeModifier$21
	m	(Ljava/util/UUID;Lhe;Lbiq;D)Ltl;	a	lambda$getAttributeModifier$18
	m	(Lbiq;Lhe;)Lbjg;	b	getEntityWithAttribute
		p	0		entity
		p	1		attribute
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$14
		p	0		context
	m	(Ldt;Lbiq;Lhe;D)I	b	getAttributeBase
		p	0		source
		p	1		target
		p	2		attribute
		p	3		multiplier
	m	(Lhe;Lbiq;D)Ltl;	b	lambda$getAttributeBase$17
	m	(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$2
		p	0		entityName
		p	1		attributeName
		p	2		uuid
	m	(Ljava/util/UUID;Lhe;Lbiq;)Ltl;	b	lambda$addModifier$20
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$13
		p	0		context
	m	(Ldt;Lbiq;Lhe;D)I	c	setAttributeBase
		p	0		source
		p	1		target
		p	2		attribute
		p	3		value
	m	(Lhe;Lbiq;D)Ltl;	c	lambda$getAttributeValue$16
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$12
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$11
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$10
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$9
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	h	lambda$register$8
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	i	lambda$register$7
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	j	lambda$register$6
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	k	lambda$register$5
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	ERROR_NOT_LIVING_ENTITY
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	b	ERROR_NO_SUCH_ATTRIBUTE
	f	Lcom/mojang/brigadier/exceptions/Dynamic3CommandExceptionType;	c	ERROR_NO_SUCH_MODIFIER
	f	Lcom/mojang/brigadier/exceptions/Dynamic3CommandExceptionType;	d	ERROR_MODIFIER_ALREADY_PRESENT
c	agc	net/minecraft/server/commands/BanIpCommands
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
		p	0		context
	m	(Ldt;)Z	a	lambda$register$0
		p	0		source
	m	(Ldt;Ljava/lang/String;Ltl;)I	a	banIpOrName
		p	0		source
		p	1		target
		p	2		reason
	m	(Ljava/lang/String;Laoe;)Ltl;	a	lambda$banIp$3
	m	(Ljava/util/List;)Ltl;	a	lambda$banIp$4
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$1
		p	0		context
	m	(Ldt;Ljava/lang/String;Ltl;)I	b	banIp
		p	0		source
		p	1		targetIp
		p	2		reason
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_INVALID_IP
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_ALREADY_BANNED
c	agd	net/minecraft/server/commands/BanListCommands
	m	()Ltl;	a	lambda$showList$4
	m	(Laob;)Ltl;	a	lambda$showList$6
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$3
		p	0		context
	m	(Ldt;)Z	a	lambda$register$0
		p	0		source
	m	(Ldt;Ljava/util/Collection;)I	a	showList
		p	0		source
		p	1		targets
	m	(Ljava/util/Collection;)Ltl;	a	lambda$showList$5
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$2
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$1
		p	0		context
c	age	net/minecraft/server/commands/BanPlayerCommands
	m	(Lcom/mojang/authlib/GameProfile;Laon;)Ltl;	a	lambda$banPlayers$3
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
		p	0		context
	m	(Ldt;)Z	a	lambda$register$0
		p	0		source
	m	(Ldt;Ljava/util/Collection;Ltl;)I	a	banPlayers
		p	0		source
		p	1		targets
		p	2		reason
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$1
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_ALREADY_BANNED
c	agf	net/minecraft/server/commands/BossBarCommands
	m	()Ltl;	a	lambda$listBars$44
	m	(Lafu;)Ltl;	a	lambda$removeBar$47
	m	(Lafu;I)Ltl;	a	lambda$setMax$38
	m	(Lafu;Ljava/util/Collection;)Ltl;	a	lambda$setPlayers$43
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)Lafu;	a	getBossBar
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$static$2
		p	0		context
		p	1		builder
	m	(Ldt;)I	a	listBars
		p	0		source
	m	(Ldt;Laew;Ltl;)I	a	createBar
		p	0		source
		p	1		name
		p	2		displayName
	m	(Ldt;Lafu;)I	a	getValue
		p	0		source
		p	1		bossBar
	m	(Ldt;Lafu;I)I	a	setValue
		p	0		source
		p	1		bossBar
		p	2		value
	m	(Ldt;Lafu;Lbgo$a;)I	a	setColor
		p	0		source
		p	1		bossBar
		p	2		color
	m	(Ldt;Lafu;Lbgo$b;)I	a	setStyle
		p	0		source
		p	1		bossBar
		p	2		style
	m	(Ldt;Lafu;Ljava/util/Collection;)I	a	setPlayers
		p	0		source
		p	1		bossBar
		p	2		players
	m	(Ldt;Lafu;Ltl;)I	a	setName
		p	0		source
		p	1		bossBar
		p	2		name
	m	(Ldt;Lafu;Z)I	a	setVisible
		p	0		source
		p	1		bossBar
		p	2		visible
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$1
		p	0		name
	m	(Ljava/util/Collection;)Ltl;	a	lambda$listBars$45
	m	(Lafu;)Ltl;	b	lambda$createBar$46
	m	(Lafu;I)Ltl;	b	lambda$setValue$37
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$28
		p	0		context
	m	(Ldt;)Z	b	lambda$register$3
		p	0		source
	m	(Ldt;Lafu;)I	b	getMax
		p	0		source
		p	1		bossBar
	m	(Ldt;Lafu;I)I	b	setMax
		p	0		source
		p	1		bossBar
		p	2		value
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$0
		p	0		name
	m	(Lafu;)Ltl;	c	lambda$setPlayers$42
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$27
		p	0		context
	m	(Ldt;Lafu;)I	c	getVisible
		p	0		source
		p	1		bossBar
	m	(Lafu;)Ltl;	d	lambda$setName$41
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$26
		p	0		context
	m	(Ldt;Lafu;)I	d	getPlayers
		p	0		source
		p	1		bossBar
	m	(Lafu;)Ltl;	e	lambda$setStyle$40
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$25
		p	0		context
	m	(Ldt;Lafu;)I	e	removeBar
		p	0		source
		p	1		bossBar
	m	(Lafu;)Ltl;	f	lambda$setColor$39
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$24
		p	0		context
	m	(Lafu;)Ltl;	g	lambda$setVisible$36
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$23
		p	0		context
	m	(Lafu;)Ltl;	h	lambda$setVisible$35
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	h	lambda$register$22
		p	0		context
	m	(Lafu;)Ltl;	i	lambda$getPlayers$34
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	i	lambda$register$21
		p	0		context
	m	(Lafu;)Ltl;	j	lambda$getPlayers$33
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	j	lambda$register$20
		p	0		context
	m	(Lafu;)Ltl;	k	lambda$getVisible$32
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	k	lambda$register$19
		p	0		context
	m	(Lafu;)Ltl;	l	lambda$getVisible$31
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	l	lambda$register$18
		p	0		context
	m	(Lafu;)Ltl;	m	lambda$getMax$30
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	m	lambda$register$17
		p	0		context
	m	(Lafu;)Ltl;	n	lambda$getValue$29
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	n	lambda$register$16
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	o	lambda$register$15
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	p	lambda$register$14
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	q	lambda$register$13
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	r	lambda$register$12
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	s	lambda$register$11
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	t	lambda$register$10
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	u	lambda$register$9
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	v	lambda$register$8
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	w	lambda$register$7
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	x	lambda$register$6
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	y	lambda$register$5
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	z	lambda$register$4
		p	0		context
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	a	SUGGEST_BOSS_BAR
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_ALREADY_EXISTS
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	c	ERROR_DOESNT_EXIST
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	d	ERROR_NO_PLAYER_CHANGE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	e	ERROR_NO_NAME_CHANGE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	f	ERROR_NO_COLOR_CHANGE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	g	ERROR_NO_STYLE_CHANGE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	h	ERROR_NO_VALUE_CHANGE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	i	ERROR_NO_MAX_CHANGE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	j	ERROR_ALREADY_HIDDEN
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	k	ERROR_ALREADY_VISIBLE
c	agg	net/minecraft/server/commands/ChaseCommand
	m	()Ltl;	a	lambda$stop$8
	m	(I)Ltl;	a	lambda$lead$9
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$6
		p	0		context
	m	(Ldt;)I	a	stop
		p	0		source
	m	(Ldt;Ljava/lang/String;I)I	a	lead
		p	0		source
		p	1		ip
		p	2		port
	m	(Ljava/lang/String;I)Ltl;	a	lambda$follow$10
	m	()Ltl;	b	lambda$stop$7
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$5
		p	0		context
	m	(Ldt;)Z	b	alreadyRunning
		p	0		source
	m	(Ldt;Ljava/lang/String;I)I	b	follow
		p	0		source
		p	1		ip
		p	2		port
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$4
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$3
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$2
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$1
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$0
		p	0		context
	f	Lcom/google/common/collect/BiMap;	a	DIMENSION_NAMES
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ljava/lang/String;	c	DEFAULT_CONNECT_HOST
	f	Ljava/lang/String;	d	DEFAULT_BIND_ADDRESS
	f	I	e	DEFAULT_PORT
	f	I	f	BROADCAST_INTERVAL_MS
	f	Lafy;	g	chaseServer
	f	Lafx;	h	chaseClient
c	agh	net/minecraft/server/commands/ClearInventoryCommands
	m	(ILjava/util/Collection;)Ltl;	a	lambda$clearInventory$12
	m	(Lcjf;)Z	a	lambda$register$5
		p	0		stack
	m	(Lcom/mojang/brigadier/CommandDispatcher;Ldn;)V	a	register
		p	0		dispatcher
		p	1		commandRegistryAccess
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$8
		p	0		context
	m	(Ldt;)Z	a	lambda$register$2
		p	0		source
	m	(Ldt;Ljava/util/Collection;Ljava/util/function/Predicate;I)I	a	clearInventory
		p	0		source
		p	1		targets
		p	2		item
		p	3		maxCount
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$1
		p	0		playerCount
	m	(ILjava/util/Collection;)Ltl;	b	lambda$clearInventory$11
	m	(Lcjf;)Z	b	lambda$register$3
		p	0		stack
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$7
		p	0		context
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$0
		p	0		playerName
	m	(ILjava/util/Collection;)Ltl;	c	lambda$clearInventory$10
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$6
		p	0		context
	m	(ILjava/util/Collection;)Ltl;	d	lambda$clearInventory$9
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$4
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	ERROR_SINGLE
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_MULTIPLE
c	agi	net/minecraft/server/commands/CloneCommands
	m	(I)Ltl;	a	lambda$clone$23
	m	(Lagi$b;Lagi$b;Lagi$b;Lagi$b;Lcom/mojang/brigadier/builder/ArgumentBuilder;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	wrapWithCloneMode
		p	0		beginPosGetter
		p	1		endPosGetter
		p	2		destinationPosGetter
		p	3		filterGetter
		p	4		builder
	m	(Lagi$b;Lagi$b;Lagi$b;Lagi$b;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$wrapWithCloneMode$22
		p	4		context
	m	(Lagi$b;Lagi$b;Lagi$b;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$destinationAndModeSuffix$19
		p	3		context
	m	(Lagi$b;Lcom/mojang/brigadier/context/CommandContext;)Lagi$c;	a	lambda$destinationAndModeSuffix$9
		p	1		context
	m	(Lcom/mojang/brigadier/CommandDispatcher;Ldn;)V	a	register
		p	0		dispatcher
		p	1		commandRegistryAccess
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/function/Predicate;	a	lambda$destinationAndModeSuffix$18
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lakq;Ljava/lang/String;)Lagi$c;	a	getLoadedDimensionAndPosition
		p	0		context
		p	1		world
		p	2		name
	m	(Ldfn;)Z	a	lambda$destinationAndModeSuffix$14
	m	(Ldn;Lagi$b;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	beginEndDestinationAndModeSuffix
		p	0		commandRegistryAccess
		p	1		worldGetter
	m	(Ldn;Lagi$b;Lagi$b;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	destinationAndModeSuffix
		p	0		commandRegistryAccess
		p	1		sourceWorldGetter
		p	2		targetWorldGetter
	m	(Ldt;)Z	a	lambda$register$2
		p	0		source
	m	(Ldt;Lagi$c;Lagi$c;Lagi$c;Ljava/util/function/Predicate;Lagi$d;)I	a	clone
		p	0		source
		p	1		begin
		p	2		end
		p	3		destination
		p	4		filter
		p	5		mode
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		maxCount
		p	1		count
	m	(Lagi$b;Lagi$b;Lagi$b;Lagi$b;Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$wrapWithCloneMode$21
		p	4		context
	m	(Lagi$b;Lagi$b;Lagi$b;Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$destinationAndModeSuffix$17
		p	3		context
	m	(Lagi$b;Lcom/mojang/brigadier/context/CommandContext;)Lagi$c;	b	lambda$destinationAndModeSuffix$8
		p	1		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/function/Predicate;	b	lambda$destinationAndModeSuffix$16
		p	0		context
	m	(Ldfn;)Z	b	lambda$destinationAndModeSuffix$12
	m	(Lagi$b;Lagi$b;Lagi$b;Lagi$b;Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$wrapWithCloneMode$20
		p	4		context
	m	(Lagi$b;Lagi$b;Lagi$b;Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$destinationAndModeSuffix$15
		p	3		context
	m	(Lagi$b;Lcom/mojang/brigadier/context/CommandContext;)Lagi$c;	c	lambda$destinationAndModeSuffix$7
		p	1		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/function/Predicate;	c	lambda$destinationAndModeSuffix$13
		p	0		context
	m	(Ldfn;)Z	c	lambda$destinationAndModeSuffix$10
	m	(Lagi$b;Lagi$b;Lagi$b;Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$destinationAndModeSuffix$11
		p	3		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)Lakq;	d	lambda$beginEndDestinationAndModeSuffix$6
		p	0		context
	m	(Ldfn;)Z	d	lambda$static$1
		p	0		pos
	m	(Lcom/mojang/brigadier/context/CommandContext;)Lakq;	e	lambda$beginEndDestinationAndModeSuffix$5
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)Lakq;	f	lambda$register$4
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)Lakq;	g	lambda$register$3
		p	0		context
	f	Ljava/util/function/Predicate;	a	FILTER_AIR
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_OVERLAP
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	c	ERROR_AREA_TOO_LARGE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	d	ERROR_FAILED
c	agi$a	net/minecraft/server/commands/CloneCommands$CloneBlockInfo
	m	(Lgw;Ldfj;Lqw;)V	<init>	<init>
		p	1		pos
		p	2		state
		p	3		blockEntityNbt
	f	Lgw;	a	pos
	f	Ldfj;	b	state
	f	Lqw;	c	tag
c	agi$b	net/minecraft/server/commands/CloneCommands$CommandFunction
	m	(Ljava/lang/Object;)Ljava/lang/Object;	apply	apply
		p	1		value
c	agi$c	net/minecraft/server/commands/CloneCommands$DimensionAndPosition
	m	()Lakq;	a	dimension
	m	()Lgw;	b	position
	f	Lakq;	a	dimension
	f	Lgw;	b	position
c	agi$d	net/minecraft/server/commands/CloneCommands$Mode
	m	(Ljava/lang/String;IZ)V	<init>	<init>
		p	3		allowsOverlap
	m	()Z	a	canOverlap
	m	()[Lagi$d;	b	$values
	f	Lagi$d;	a	FORCE
	f	Lagi$d;	b	MOVE
	f	Lagi$d;	c	NORMAL
	f	Z	d	canOverlap
	f	[Lagi$d;	e	$VALUES
c	agj	net/minecraft/server/commands/DamageCommand
	m	(FLbiq;)Ltl;	a	lambda$damage$6
	m	(Lcom/mojang/brigadier/CommandDispatcher;Ldn;)V	a	register
		p	0		dispatcher
		p	1		registryAccess
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$5
		p	0		context
	m	(Ldt;)Z	a	lambda$register$0
		p	0		source
	m	(Ldt;Lbiq;FLbho;)I	a	damage
		p	0		source
		p	1		target
		p	2		amount
		p	3		damageSource
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$4
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$3
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$2
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$1
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_INVULNERABLE
c	agk	net/minecraft/server/commands/DataPackCommand
	m	()Ltl;	a	lambda$listEnabledPacks$29
	m	(Lanb;)Ltl;	a	lambda$listEnabledPacks$30
		p	0		profile
	m	(Lcec;Lanb;)Z	a	lambda$static$5
		p	1		profile
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$22
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$static$7
		p	0		context
		p	1		builder
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Z)Lanb;	a	getPack
		p	0		context
		p	1		name
		p	2		enable
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Lanb;)V	a	lambda$register$14
		p	1		profiles
		p	2		profile
	m	(Ldt;)I	a	listPacks
		p	0		source
	m	(Ldt;Lanb;)I	a	disablePack
		p	0		source
		p	1		container
	m	(Ldt;Lanb;Lagk$a;)I	a	enablePack
		p	0		source
		p	1		container
		p	2		packAdder
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$2
		p	0		name
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$3
		p	0		name
		p	1		flags
	m	(Ljava/util/Collection;)Ltl;	a	lambda$listEnabledPacks$31
	m	(Ljava/util/Collection;Lcec;Lanb;)Z	a	lambda$listAvailablePacks$25
		p	2		profile
	m	(Ljava/util/Collection;Ljava/lang/String;)Z	a	lambda$static$6
		p	1		name
	m	(Ljava/util/List;)Ltl;	a	lambda$listAvailablePacks$28
	m	(Ljava/util/List;Lanb;)V	a	lambda$register$17
		p	0		profiles
		p	1		profile
	m	()Ltl;	b	lambda$listAvailablePacks$26
	m	(Lanb;)Ltl;	b	lambda$listAvailablePacks$27
		p	0		profile
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$21
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	b	lambda$static$4
		p	0		context
		p	1		builder
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Lanb;)V	b	lambda$register$12
		p	1		profiles
		p	2		profile
	m	(Ldt;)I	b	listAvailablePacks
		p	0		source
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$1
		p	0		name
	m	(Ljava/util/List;Lanb;)V	b	lambda$register$10
		p	0		profiles
		p	1		profile
	m	(Lanb;)Ltl;	c	lambda$disablePack$24
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$20
		p	0		context
	m	(Ldt;)I	c	listEnabledPacks
		p	0		source
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	c	lambda$static$0
		p	0		name
	m	(Lanb;)Ltl;	d	lambda$enablePack$23
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$19
		p	0		context
	m	(Ldt;)Z	d	lambda$register$8
		p	0		source
	m	(Lanb;)Lanb;	e	lambda$register$9
		p	0		profilex
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$18
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$16
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$15
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	h	lambda$register$13
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	i	lambda$register$11
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	ERROR_UNKNOWN_PACK
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_PACK_ALREADY_ENABLED
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	c	ERROR_PACK_ALREADY_DISABLED
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	d	ERROR_PACK_FEATURES_NOT_ENABLED
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	e	SELECTED_PACKS
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	f	UNSELECTED_PACKS
c	agk$a	net/minecraft/server/commands/DataPackCommand$Inserter
	m	(Ljava/util/List;Lanb;)V	apply	apply
		p	1		profiles
		p	2		profile
c	agl	net/minecraft/server/commands/DeOpCommands
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$register$1
		p	0		context
		p	1		builder
	m	(Ldt;)Z	a	lambda$register$0
		p	0		source
	m	(Ldt;Ljava/util/Collection;)I	a	deopPlayers
		p	0		source
		p	1		targets
	m	(Ljava/util/Collection;)Ltl;	a	lambda$deopPlayers$3
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_NOT_OP
c	agm	net/minecraft/server/commands/DebugCommand
	m	()Ltl;	a	lambda$start$5
	m	(DLbdo;D)Ltl;	a	lambda$stop$6
	m	(ILjava/util/Collection;Ljava/lang/String;)Ltl;	a	lambda$traceFunction$8
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$4
		p	0		context
	m	(Ldt;)I	a	start
		p	0		source
	m	(Ldt;Ljava/util/Collection;)I	a	traceFunction
		p	0		source
		p	1		functions
	m	(ILjava/util/Collection;Ljava/lang/String;)Ltl;	b	lambda$traceFunction$7
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$2
		p	0		context
	m	(Ldt;)I	b	stop
		p	0		source
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$1
		p	0		context
	m	(Ldt;)Z	c	lambda$register$3
	m	(Ldt;)Z	d	lambda$register$0
		p	0		source
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_NOT_RUNNING
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_ALREADY_RUNNING
c	agm$a	net/minecraft/server/commands/DebugCommand$Tracer
	m	(Ljava/io/PrintWriter;)V	<init>	<init>
		p	1		writer
	m	()Z	T_	shouldInformAdmins
	m	(I)V	a	indentAndSave
		p	1		width
	m	(ILaew;I)V	a	onCall
		p	1		depth
		p	2		function
		p	3		size
	m	(ILjava/lang/String;)V	a	onCommand
		p	1		depth
		p	2		command
	m	(ILjava/lang/String;I)V	a	onReturn
		p	1		depth
		p	2		command
		p	3		result
	m	(Ltl;)V	a	sendSystemMessage
		p	1		message
	m	(I)V	b	printIndent
		p	1		width
	m	(ILjava/lang/String;)V	b	onError
		p	1		depth
		p	2		message
	m	()V	e	newLine
	m	()Z	j_	acceptsSuccess
	m	()Z	k_	alwaysAccepts
	m	()Z	v_	acceptsFailure
	f	I	b	INDENT_OFFSET
	f	Ljava/io/PrintWriter;	c	output
	f	I	d	lastIndent
	f	Z	e	waitingForResult
c	agn	net/minecraft/server/commands/DebugConfigCommand
	m	(Lcom/mojang/authlib/GameProfile;)Ltl;	a	lambda$config$4
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$3
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$register$2
		p	0		context
		p	1		suggestionsBuilder
	m	(Ldt;)Z	a	lambda$register$0
		p	0		source
	m	(Ldt;Lakr;)I	a	config
		p	0		source
		p	1		player
	m	(Ldt;Ljava/util/UUID;)I	a	unconfig
		p	0		source
		p	1		uuid
	m	(Lnet/minecraft/server/MinecraftServer;)Ljava/lang/Iterable;	a	getUuidsInConfig
		p	0		server
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$1
		p	0		context
c	ago	net/minecraft/server/commands/DebugMobSpawningCommand
	m	(Lbjj;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$1
		p	1		context
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Ldt;)Z	a	lambda$register$0
		p	0		source
	m	(Ldt;Lbjj;Lgw;)I	a	spawnMobs
		p	0		source
		p	1		group
		p	2		pos
c	agp	net/minecraft/server/commands/DebugPathCommand
	m	()Ltl;	a	lambda$fillBlocks$2
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$1
		p	0		context
	m	(Ldt;)Z	a	lambda$register$0
		p	0		source
	m	(Ldt;Lgw;)I	a	fillBlocks
		p	0		source
		p	1		pos
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_NOT_MOB
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_NO_PATH
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_NOT_COMPLETE
c	agq	net/minecraft/server/commands/DefaultGameModeCommands
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$1
	m	(Lcps;)Ltl;	a	lambda$setMode$2
	m	(Ldt;)Z	a	lambda$register$0
		p	0		source
	m	(Ldt;Lcps;)I	a	setMode
		p	0		source
		p	1		defaultGameMode
c	agr	net/minecraft/server/commands/DifficultyCommand
	m	(Lbgv;)Ltl;	a	lambda$setDifficulty$5
	m	(Lbgv;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$1
		p	1		context
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$4
		p	0		context
	m	(Ldt;)Z	a	lambda$register$2
		p	0		source
	m	(Ldt;Lbgv;)I	a	setDifficulty
		p	0		source
		p	1		difficulty
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		difficulty
	m	(Lbgv;)Ltl;	b	lambda$register$3
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	ERROR_ALREADY_DIFFICULT
c	ags	net/minecraft/server/commands/EffectCommands
	m	(Lbib;Ljava/util/Collection;)Ltl;	a	lambda$clearEffect$16
	m	(Lbib;Ljava/util/Collection;I)Ltl;	a	lambda$giveEffect$12
	m	(Lcom/mojang/brigadier/CommandDispatcher;Ldn;)V	a	register
		p	0		dispatcher
		p	1		registryAccess
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$10
		p	0		context
	m	(Ldt;)Z	a	lambda$register$0
		p	0		source
	m	(Ldt;Ljava/util/Collection;)I	a	clearEffects
		p	0		source
		p	1		targets
	m	(Ldt;Ljava/util/Collection;Lhe;)I	a	clearEffect
		p	0		source
		p	1		targets
		p	2		statusEffect
	m	(Ldt;Ljava/util/Collection;Lhe;Ljava/lang/Integer;IZ)I	a	giveEffect
		p	0		source
		p	1		targets
		p	2		statusEffect
		p	3		seconds
		p	4		amplifier
		p	5		showParticles
	m	(Ljava/util/Collection;)Ltl;	a	lambda$clearEffects$14
	m	(Lbib;Ljava/util/Collection;)Ltl;	b	lambda$clearEffect$15
	m	(Lbib;Ljava/util/Collection;I)Ltl;	b	lambda$giveEffect$11
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$9
		p	0		context
	m	(Ljava/util/Collection;)Ltl;	b	lambda$clearEffects$13
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$8
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$7
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$6
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$5
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$4
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	h	lambda$register$3
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	i	lambda$register$2
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	j	lambda$register$1
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_GIVE_FAILED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_CLEAR_EVERYTHING_FAILED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_CLEAR_SPECIFIC_FAILED
c	agt	net/minecraft/server/commands/EmoteCommands
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$1
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lua;)V	a	lambda$register$0
		p	1		message
c	agu	net/minecraft/server/commands/EnchantCommand
	m	(Lcno;ILjava/util/Collection;)Ltl;	a	lambda$enchant$8
	m	(Lcom/mojang/brigadier/CommandDispatcher;Ldn;)V	a	register
		p	0		dispatcher
		p	1		registryAccess
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$6
		p	0		context
	m	(Ldt;)Z	a	lambda$register$4
		p	0		source
	m	(Ldt;Ljava/util/Collection;Lhe;I)I	a	enchant
		p	0		source
		p	1		targets
		p	2		enchantment
		p	3		level
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$2
		p	0		itemName
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$3
		p	0		level
		p	1		maxLevel
	m	(Lcno;ILjava/util/Collection;)Ltl;	b	lambda$enchant$7
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$5
		p	0		context
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$1
		p	0		entityName
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	c	lambda$static$0
		p	0		entityName
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	ERROR_NOT_LIVING_ENTITY
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_NO_ITEM
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	c	ERROR_INCOMPATIBLE
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	d	ERROR_LEVEL_TOO_HIGH
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	e	ERROR_NOTHING_HAPPENED
c	agv	net/minecraft/server/commands/ExecuteCommand
	m	()Ltl;	a	lambda$checkUnlessRegions$70
	m	(I)Ltl;	a	lambda$createNumericConditionalHandler$59
	m	(Lagv$a;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$createNumericConditionalHandler$62
		p	1		context
	m	(Lajg;Lej$g;)I	a	checkMatchingData
		p	0		object
		p	1		path
	m	(Lajg;ZLej$g;Ljava/util/function/IntFunction;Lcom/mojang/brigadier/context/CommandContext;ZI)V	a	lambda$storeData$38
		p	4		context
		p	5		success
		p	6		result
	m	(Lajh$c;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$addConditionals$57
		p	1		context
	m	(Lajh$c;ZLcom/mojang/brigadier/context/CommandContext;)Ldt;	a	lambda$wrapStores$34
		p	2		context
	m	(Lakq;Lgw;)Z	a	isChunkLoaded
		p	0		world
		p	1		pos
	m	(Lakq;Lgw;Lgw;Lgw;Z)Ljava/util/OptionalInt;	a	checkRegions
		p	0		world
		p	1		start
		p	2		end
		p	3		destination
		p	4		masked
	m	(Lbiq;)Ljava/util/stream/Stream;	a	lambda$createRelationOperations$83
		p	0		entity
	m	(Lcom/mojang/brigadier/CommandDispatcher;Ldn;)V	a	register
		p	0		dispatcher
		p	1		commandRegistryAccess
	m	(Lcom/mojang/brigadier/ResultConsumer;Lcom/mojang/brigadier/ResultConsumer;)Lcom/mojang/brigadier/ResultConsumer;	a	lambda$static$3
		p	0		consumer
		p	1		consumer2
	m	(Lcom/mojang/brigadier/ResultConsumer;Lcom/mojang/brigadier/ResultConsumer;Lcom/mojang/brigadier/context/CommandContext;ZI)V	a	lambda$static$2
		p	2		context
		p	3		success
		p	4		result
	m	(Lcom/mojang/brigadier/context/CommandContext;)Z	a	lambda$addConditionals$55
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;I)Lrq;	a	lambda$wrapStores$33
		p	1		result
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcl$d;)Z	a	checkScore
		p	0		context
		p	1		range
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$static$4
		p	0		context
		p	1		builder
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/util/function/BiPredicate;)Z	a	checkScore
		p	0		context
		p	1		condition
	m	(Lcom/mojang/brigadier/context/CommandContext;Z)I	a	checkIfRegions
		p	0		context
		p	1		masked
	m	(Lcom/mojang/brigadier/context/CommandContext;ZZ)Ljava/util/Collection;	a	expect
		p	0		context
		p	1		positive
		p	2		value
	m	(Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/builder/ArgumentBuilder;ZLagv$b;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	addConditional
		p	0		root
		p	1		builder
		p	2		positive
		p	3		condition
	m	(Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/builder/ArgumentBuilder;ZZ)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	addIfBlocksConditional
		p	0		root
		p	1		builder
		p	2		positive
		p	3		masked
	m	(Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/builder/LiteralArgumentBuilder;)Lcom/mojang/brigadier/builder/LiteralArgumentBuilder;	a	createRelationOperations
		p	0		node
		p	1		builder
	m	(Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/builder/LiteralArgumentBuilder;ZLdn;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	addConditionals
		p	0		root
		p	1		argumentBuilder
		p	2		positive
		p	3		commandRegistryAccess
	m	(Lcom/mojang/brigadier/tree/CommandNode;ZLajh$c;Lcom/mojang/brigadier/builder/ArgumentBuilder;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	lambda$addConditionals$58
		p	3		builder
	m	(Lcom/mojang/brigadier/tree/LiteralCommandNode;Lajh$c;ZLcom/mojang/brigadier/builder/ArgumentBuilder;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	lambda$wrapStores$35
		p	3		builderx
	m	(Lcom/mojang/brigadier/tree/LiteralCommandNode;Lcom/mojang/brigadier/builder/LiteralArgumentBuilder;Z)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	wrapStores
		p	0		node
		p	1		builder
		p	2		requestResult
	m	(Ldt;)Z	a	lambda$register$6
		p	0		source
	m	(Ldt;Lafu;ZZ)Ldt;	a	storeValue
		p	0		source
		p	1		bossBar
		p	2		storeInValue
		p	3		requestResult
	m	(Ldt;Lajg;Lej$g;Ljava/util/function/IntFunction;Z)Ldt;	a	storeData
		p	0		source
		p	1		object
		p	2		path
		p	3		nbtSetter
		p	4		requestResult
	m	(Ldt;Lbiq;)Ljava/util/List;	a	lambda$expandOneToOneEntityRelation$72
		p	1		entity
	m	(Ldt;Lefp;)Z	a	checkCustomPredicate
		p	0		source
		p	1		condition
	m	(Ldt;Lhe$c;)Ldt;	a	spawnEntityAndRedirect
		p	0		source
		p	1		entityType
	m	(Ldt;Ljava/util/Collection;Leij;Z)Ldt;	a	storeValue
		p	0		source
		p	1		targets
		p	2		objective
		p	3		requestResult
	m	(Ljava/lang/Integer;Ljava/lang/Integer;)Z	a	lambda$addConditionals$50
		p	0		a
		p	1		b
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$1
		p	0		count
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		maxCount
		p	1		count
	m	(Ljava/util/Collection;Leim;Leij;ZLcom/mojang/brigadier/context/CommandContext;ZI)V	a	lambda$storeValue$36
		p	4		context
		p	5		success
		p	6		result
	m	(Ljava/util/OptionalInt;)Ltl;	a	lambda$checkIfRegions$69
	m	(Ljava/util/function/Function;)Lcom/mojang/brigadier/RedirectModifier;	a	expandOneToOneEntityRelation
		p	0		function
	m	(Ljava/util/function/Function;Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection;	a	lambda$expandOneToManyEntityRelation$75
		p	1		context
	m	(ZLagv$a;)Lcom/mojang/brigadier/Command;	a	createNumericConditionalHandler
		p	0		positive
		p	1		condition
	m	(ZLagv$b;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$addConditional$65
		p	2		context
	m	(ZLajh$c;Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection;	a	lambda$addConditionals$56
		p	2		context
	m	(ZLcom/mojang/brigadier/context/CommandContext;)I	a	lambda$addIfBlocksConditional$68
		p	1		context
	m	(ZZLafu;Lcom/mojang/brigadier/context/CommandContext;ZI)V	a	lambda$storeValue$37
		p	3		context
		p	4		success
		p	5		result
	m	(ZZLcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection;	a	lambda$addIfBlocksConditional$66
		p	2		context
	m	()Ltl;	b	lambda$addConditional$64
	m	(Lagv$a;Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$createNumericConditionalHandler$60
		p	1		context
	m	(Lajh$c;ZLcom/mojang/brigadier/context/CommandContext;)Ldt;	b	lambda$wrapStores$32
		p	2		context
	m	(Lbiq;)Ljava/util/Optional;	b	lambda$createRelationOperations$82
		p	0		entity
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$addConditionals$54
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;I)Lrq;	b	lambda$wrapStores$31
		p	1		result
	m	(Lcom/mojang/brigadier/context/CommandContext;Z)I	b	checkUnlessRegions
		p	0		context
		p	1		masked
	m	(Ldt;)Z	b	lambda$register$5
		p	0		source
	m	(Ljava/lang/Integer;Ljava/lang/Integer;)Z	b	lambda$addConditionals$48
		p	0		a
		p	1		b
	m	(Ljava/util/function/Function;)Lcom/mojang/brigadier/RedirectModifier;	b	expandOneToManyEntityRelation
		p	0		function
	m	(Ljava/util/function/Function;Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection;	b	lambda$expandOneToOneEntityRelation$73
		p	1		context
	m	(ZLagv$b;Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection;	b	lambda$addConditional$63
		p	2		context
	m	(ZLcom/mojang/brigadier/context/CommandContext;)I	b	lambda$addIfBlocksConditional$67
		p	1		context
	m	()Ltl;	c	lambda$createNumericConditionalHandler$61
	m	(Lajh$c;ZLcom/mojang/brigadier/context/CommandContext;)Ldt;	c	lambda$wrapStores$30
		p	2		context
	m	(Lbiq;)Ljava/util/Optional;	c	lambda$createRelationOperations$81
		p	0		entity
	m	(Lcom/mojang/brigadier/context/CommandContext;)Z	c	lambda$addConditionals$52
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;I)Lrq;	c	lambda$wrapStores$29
		p	1		result
	m	(Lcom/mojang/brigadier/context/CommandContext;Z)Ljava/util/OptionalInt;	c	checkRegions
		p	0		context
		p	1		masked
	m	(Ljava/lang/Integer;Ljava/lang/Integer;)Z	c	lambda$addConditionals$46
		p	0		a
		p	1		b
	m	(ZLcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection;	c	lambda$addConditionals$53
		p	1		context
	m	(Lajh$c;ZLcom/mojang/brigadier/context/CommandContext;)Ldt;	d	lambda$wrapStores$28
		p	2		context
	m	(Lbiq;)Ljava/util/Optional;	d	lambda$createRelationOperations$80
		p	0		entity
	m	(Lcom/mojang/brigadier/context/CommandContext;)Z	d	lambda$addConditionals$51
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;I)Lrq;	d	lambda$wrapStores$27
		p	1		result
	m	(Ljava/lang/Integer;Ljava/lang/Integer;)Z	d	lambda$addConditionals$44
		p	0		a
		p	1		b
	m	(ZLcom/mojang/brigadier/context/CommandContext;)Ldt;	d	lambda$wrapStores$22
		p	1		context
	m	(Lajh$c;ZLcom/mojang/brigadier/context/CommandContext;)Ldt;	e	lambda$wrapStores$26
		p	2		context
	m	(Lbiq;)Ljava/util/Optional;	e	lambda$createRelationOperations$79
		p	0		entity
	m	(Lcom/mojang/brigadier/context/CommandContext;)Z	e	lambda$addConditionals$49
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;I)Lrq;	e	lambda$wrapStores$25
		p	1		result
	m	(ZLcom/mojang/brigadier/context/CommandContext;)Ldt;	e	lambda$wrapStores$21
		p	1		context
	m	(Lajh$c;ZLcom/mojang/brigadier/context/CommandContext;)Ldt;	f	lambda$wrapStores$24
		p	2		context
	m	(Lbiq;)Ljava/util/Optional;	f	lambda$createRelationOperations$78
		p	0		entity
	m	(Lcom/mojang/brigadier/context/CommandContext;)Z	f	lambda$addConditionals$47
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;I)Lrq;	f	lambda$wrapStores$23
		p	1		result
	m	(ZLcom/mojang/brigadier/context/CommandContext;)Ldt;	f	lambda$wrapStores$20
		p	1		context
	m	(Lbiq;)Ljava/util/Optional;	g	lambda$createRelationOperations$77
		p	0		entity
	m	(Lcom/mojang/brigadier/context/CommandContext;)Z	g	lambda$addConditionals$45
		p	0		context
	m	(Lbiq;)Ljava/util/Optional;	h	lambda$createRelationOperations$76
		p	0		entity
	m	(Lcom/mojang/brigadier/context/CommandContext;)Z	h	lambda$addConditionals$43
		p	0		context
	m	(Lbiq;)Z	i	lambda$expandOneToManyEntityRelation$74
		p	0		entity
	m	(Lcom/mojang/brigadier/context/CommandContext;)Z	i	lambda$addConditionals$42
		p	0		context
	m	(Lbiq;)Z	j	lambda$expandOneToOneEntityRelation$71
		p	0		entity
	m	(Lcom/mojang/brigadier/context/CommandContext;)Z	j	lambda$addConditionals$41
	m	(Lcom/mojang/brigadier/context/CommandContext;)Z	k	lambda$addConditionals$40
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)Z	l	lambda$addConditionals$39
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ldt;	m	lambda$register$19
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ldt;	n	lambda$register$18
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ldt;	o	lambda$register$17
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ldt;	p	lambda$register$16
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ldt;	q	lambda$register$15
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection;	r	lambda$register$14
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection;	s	lambda$register$13
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ldt;	t	lambda$register$12
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ldt;	u	lambda$register$11
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection;	v	lambda$register$10
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ldt;	w	lambda$register$9
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection;	x	lambda$register$8
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection;	y	lambda$register$7
		p	0		context
	f	I	a	MAX_TEST_AREA
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	b	ERROR_AREA_TOO_LARGE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_CONDITIONAL_FAILED
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	d	ERROR_CONDITIONAL_FAILED_COUNT
	f	Ljava/util/function/BinaryOperator;	e	CALLBACK_CHAINER
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	f	SUGGEST_PREDICATE
c	agv$a	net/minecraft/server/commands/ExecuteCommand$CommandNumericPredicate
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	test	test
		p	1		context
c	agv$b	net/minecraft/server/commands/ExecuteCommand$CommandPredicate
	m	(Lcom/mojang/brigadier/context/CommandContext;)Z	test	test
		p	1		context
c	agw	net/minecraft/server/commands/ExperienceCommand
	m	(Lagw$a;ILjava/util/Collection;)Ltl;	a	lambda$setExperience$14
	m	(Lagw$a;Lakr;I)Ltl;	a	lambda$queryExperience$10
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$8
		p	0		context
	m	(Ldt;)Z	a	lambda$register$9
		p	0		source
	m	(Ldt;Lakr;Lagw$a;)I	a	queryExperience
		p	0		source
		p	1		player
		p	2		component
	m	(Ldt;Ljava/util/Collection;ILagw$a;)I	a	addExperience
		p	0		source
		p	1		targets
		p	2		amount
		p	3		component
	m	(Lagw$a;ILjava/util/Collection;)Ltl;	b	lambda$setExperience$13
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$7
		p	0		context
	m	(Ldt;)Z	b	lambda$register$0
		p	0		source
	m	(Ldt;Ljava/util/Collection;ILagw$a;)I	b	setExperience
		p	0		source
		p	1		targets
		p	2		amount
		p	3		component
	m	(Lagw$a;ILjava/util/Collection;)Ltl;	c	lambda$addExperience$12
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$6
		p	0		context
	m	(Lagw$a;ILjava/util/Collection;)Ltl;	d	lambda$addExperience$11
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$5
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$4
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$3
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$2
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	h	lambda$register$1
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_SET_POINTS_INVALID
c	agw$a	net/minecraft/server/commands/ExperienceCommand$Type
	m	(Ljava/lang/String;ILjava/lang/String;Ljava/util/function/BiConsumer;Ljava/util/function/BiPredicate;Ljava/util/function/ToIntFunction;)V	<init>	<init>
		p	3		name
		p	4		adder
		p	5		setter
		p	6		getter
	m	()[Lagw$a;	a	$values
	m	(Lakr;)I	a	lambda$static$3
		p	0		player
	m	(Lakr;Ljava/lang/Integer;)Z	a	lambda$static$2
		p	0		player
		p	1		level
	m	(Lakr;)I	b	lambda$static$1
		p	0		player
	m	(Lakr;Ljava/lang/Integer;)Z	b	lambda$static$0
		p	0		player
		p	1		xp
	f	Lagw$a;	a	POINTS
	f	Lagw$a;	b	LEVELS
	f	Ljava/util/function/BiConsumer;	c	add
	f	Ljava/util/function/BiPredicate;	d	set
	f	Ljava/lang/String;	e	name
	f	Ljava/util/function/ToIntFunction;	f	query
	f	[Lagw$a;	g	$VALUES
c	agx	net/minecraft/server/commands/FillBiomeCommand
	m	(I)I	a	quantize
		p	0		coordinate
	m	(Lcom/mojang/brigadier/CommandDispatcher;Ldn;)V	a	register
		p	0		dispatcher
		p	1		commandRegistryAccess
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$4
		p	0		context
	m	(Ldhf;Ldva;Ljava/util/function/Predicate;Lorg/apache/commons/lang3/mutable/MutableInt;Lhe;IIILcrc$f;)Lhe;	a	lambda$makeResolver$5
		p	5		x
		p	6		y
		p	7		z
		p	8		noise
	m	(Ldt;)Z	a	lambda$register$1
		p	0		source
	m	(Ldt;Lgw;Lgw;Lhe$c;Ljava/util/function/Predicate;)I	a	fill
		p	0		source
		p	1		from
		p	2		to
		p	3		biome
		p	4		filter
	m	(Lgw;)Lgw;	a	quantize
		p	0		pos
	m	(Lhe;)Z	a	lambda$register$2
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		maximum
		p	1		specified
	m	(Lorg/apache/commons/lang3/mutable/MutableInt;Ldhf;Ldva;Lhe;Ljava/util/function/Predicate;)Lcqw;	a	makeResolver
		p	0		counter
		p	1		chunk
		p	2		box
		p	3		biome
		p	4		filter
	m	(Lorg/apache/commons/lang3/mutable/MutableInt;Ldva;)Ltl;	a	lambda$fill$6
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$3
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_NOT_LOADED
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	b	ERROR_VOLUME_TOO_LARGE
c	agy	net/minecraft/server/commands/FillCommand
	m	(I)Ltl;	a	lambda$fillBlocks$10
	m	(Lcom/mojang/brigadier/CommandDispatcher;Ldn;)V	a	register
		p	0		dispatcher
		p	1		commandRegistryAccess
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$9
		p	0		context
	m	(Ldfn;)Z	a	lambda$register$5
		p	0		pos
	m	(Ldt;)Z	a	lambda$register$1
		p	0		source
	m	(Ldt;Ldva;Lff;Lagy$a;Ljava/util/function/Predicate;)I	a	fillBlocks
		p	0		source
		p	1		range
		p	2		block
		p	3		mode
		p	4		filter
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		maxCount
		p	1		count
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$8
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$7
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$6
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$4
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$3
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$2
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	a	ERROR_AREA_TOO_LARGE
	f	Lff;	b	HOLLOW_CORE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_FAILED
c	agy$a	net/minecraft/server/commands/FillCommand$Mode
	m	(Ljava/lang/String;ILaij$a;)V	<init>	<init>
		p	3		filter
	m	()[Lagy$a;	a	$values
	m	(Ldva;Lgw;Lff;Lakq;)Lff;	a	lambda$static$3
		p	0		range
		p	1		pos
		p	2		block
		p	3		world
	m	(Ldva;Lgw;Lff;Lakq;)Lff;	b	lambda$static$2
		p	0		range
		p	1		pos
		p	2		block
		p	3		world
	m	(Ldva;Lgw;Lff;Lakq;)Lff;	c	lambda$static$1
		p	0		range
		p	1		pos
		p	2		block
		p	3		world
	m	(Ldva;Lgw;Lff;Lakq;)Lff;	d	lambda$static$0
		p	0		range
		p	1		pos
		p	2		block
		p	3		world
	f	Lagy$a;	a	REPLACE
	f	Lagy$a;	b	OUTLINE
	f	Lagy$a;	c	HOLLOW
	f	Lagy$a;	d	DESTROY
	f	Laij$a;	e	filter
	f	[Lagy$a;	f	$VALUES
c	agz	net/minecraft/server/commands/ForceLoadCommand
	m	(ILaev;Ljava/lang/String;)Ltl;	a	lambda$listForceLoad$12
	m	(Laev;)Ltl;	a	lambda$removeAll$14
	m	(Laev;Ljava/lang/String;)Ltl;	a	lambda$listForceLoad$11
	m	(Lakq;J)V	a	lambda$removeAll$13
		p	1		chunkPos
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$9
		p	0		context
	m	(Lcpc;Laev;)Ltl;	a	lambda$queryForceLoad$10
	m	(Ldt;)I	a	listForceLoad
		p	0		source
	m	(Ldt;Lakg;)I	a	queryForceLoad
		p	0		source
		p	1		pos
	m	(Ldt;Lakg;Lakg;Z)I	a	changeForceLoad
		p	0		source
		p	1		from
		p	2		to
		p	3		forceLoaded
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$1
		p	0		chunkPos
		p	1		registryKey
	m	(ZLcpc;Laev;)Ltl;	a	lambda$changeForceLoad$15
	m	(ZLcpc;Laev;Lcpc;Lcpc;)Ltl;	a	lambda$changeForceLoad$16
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$8
		p	0		context
	m	(Ldt;)I	b	removeAll
		p	0		source
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$0
		p	0		maxCount
		p	1		count
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$7
		p	0		context
	m	(Ldt;)Z	c	lambda$register$2
		p	0		source
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$6
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$5
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$4
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$3
		p	0		context
	f	I	a	MAX_CHUNK_LIMIT
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	b	ERROR_TOO_MANY_CHUNKS
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	c	ERROR_NOT_TICKING
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	d	ERROR_ALL_ADDED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	e	ERROR_NONE_REMOVED
c	aha	net/minecraft/server/commands/FunctionCommand
	m	(ILjava/util/Collection;)Ltl;	a	lambda$runFunction$11
	m	(Lajh$c;Lcom/mojang/brigadier/builder/ArgumentBuilder;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	lambda$register$4
		p	1		builder
	m	(Lajh$c;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$3
		p	1		context
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$7
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$static$1
		p	0		context
		p	1		builder
	m	(Ldt;)Z	a	lambda$register$5
		p	0		source
	m	(Ldt;Ldp;Lqw;)Laha$a;	a	runFunction
		p	0		source
		p	1		function
		p	2		arguments
	m	(Ldt;Ljava/util/Collection;Lqw;)I	a	runFunction
		p	0		source
		p	1		functions
		p	2		arguments
	m	(Lej$g;Lajg;)Lqw;	a	getArgumentTag
		p	0		path
		p	1		object
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		argument
	m	(Ljava/util/Collection;)Ltl;	a	lambda$runFunction$10
	m	(Lorg/apache/commons/lang3/mutable/MutableObject;I)V	a	lambda$runFunction$12
		p	1		value
	m	(ILjava/util/Collection;)Ltl;	b	lambda$runFunction$9
	m	(Lajh$c;Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$2
		p	1		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$6
		p	0		context
	m	(ILjava/util/Collection;)Ltl;	c	lambda$runFunction$8
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	a	SUGGEST_FUNCTION
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_ARGUMENT_NOT_COMPOUND
c	aha$a	net/minecraft/server/commands/FunctionCommand$FunctionResult
	m	()I	a	value
	m	()Z	b	isReturn
	f	I	a	value
	f	Z	b	isReturn
c	ahb	net/minecraft/server/commands/GameModeCommand
	m	(Lakr;Ltl;)Ltl;	a	lambda$logGamemodeChange$4
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/util/Collection;Lcps;)I	a	setMode
		p	0		context
		p	1		targets
		p	2		gameMode
	m	(Ldt;)Z	a	lambda$register$0
		p	0		source
	m	(Ldt;Lakr;Lcps;)V	a	logGamemodeChange
		p	0		source
		p	1		player
		p	2		gameMode
	m	(Ltl;)Ltl;	a	lambda$logGamemodeChange$3
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$1
	f	I	a	PERMISSION_LEVEL
c	ahc	net/minecraft/server/commands/GameRuleCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcpr$e;)I	a	setRule
		p	0		context
		p	1		key
	m	(Lcpr$e;Lcpr$g;)Ltl;	a	lambda$queryRule$2
	m	(Ldt;)Z	a	lambda$register$0
		p	0		source
	m	(Ldt;Lcpr$e;)I	a	queryRule
		p	0		source
		p	1		key
	m	(Lcpr$e;Lcpr$g;)Ltl;	b	lambda$setRule$1
c	ahc$1	net/minecraft/server/commands/GameRuleCommand$1
	m	(Lcpr$e;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$visit$1
		p	1		context
	m	(Lcpr$e;Lcpr$f;)V	a	visit
		p	1		key
		p	2		type
	m	(Lcpr$e;Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$visit$0
		p	1		context
	f	Lcom/mojang/brigadier/builder/LiteralArgumentBuilder;	a	val$base
c	ahd	net/minecraft/server/commands/GiveCommand
	m	(ILcjf;Ljava/util/Collection;)Ltl;	a	lambda$giveItem$4
	m	(Lcom/mojang/brigadier/CommandDispatcher;Ldn;)V	a	register
		p	0		dispatcher
		p	1		commandRegistryAccess
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
		p	0		context
	m	(Ldt;)Z	a	lambda$register$0
		p	0		source
	m	(Ldt;Lfx;Ljava/util/Collection;I)I	a	giveItem
		p	0		source
		p	1		item
		p	2		targets
		p	3		count
	m	(ILcjf;Ljava/util/Collection;)Ltl;	b	lambda$giveItem$3
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$1
		p	0		context
	f	I	a	MAX_ALLOWED_ITEMSTACKS
c	ahe	net/minecraft/server/commands/HelpCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/CommandDispatcher;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$3
		p	1		context
	m	(Lcom/mojang/brigadier/ParseResults;Ljava/lang/String;)Ltl;	a	lambda$register$2
	m	(Ljava/lang/String;)Ltl;	a	lambda$register$0
	m	(Lcom/mojang/brigadier/CommandDispatcher;Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$1
		p	1		context
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_FAILED
c	ahf	net/minecraft/server/commands/ItemCommands
	m	(Lbiq;I)Lcjf;	a	getEntityItem
		p	0		entity
		p	1		slotId
	m	(Lcom/mojang/brigadier/CommandDispatcher;Ldn;)V	a	register
		p	0		dispatcher
		p	1		commandRegistryAccess
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$21
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$static$6
		p	0		context
		p	1		builder
	m	(Ldt;)Z	a	lambda$register$7
		p	0		source
	m	(Ldt;Lbiq;ILgw;I)I	a	entityToBlock
		p	0		source
		p	1		sourceEntity
		p	2		sourceSlot
		p	3		pos
		p	4		slot
	m	(Ldt;Lbiq;ILgw;ILeed;)I	a	entityToBlock
		p	0		source
		p	1		sourceEntity
		p	2		sourceSlot
		p	3		pos
		p	4		slot
		p	5		modifier
	m	(Ldt;Lbiq;ILjava/util/Collection;I)I	a	entityToEntities
		p	0		source
		p	1		sourceEntity
		p	2		sourceSlot
		p	3		targets
		p	4		slot
	m	(Ldt;Lbiq;ILjava/util/Collection;ILeed;)I	a	entityToEntities
		p	0		source
		p	1		sourceEntity
		p	2		sourceSlot
		p	3		targets
		p	4		slot
		p	5		modifier
	m	(Ldt;Leed;Lcjf;)Lcjf;	a	applyModifier
		p	0		source
		p	1		modifier
		p	2		stack
	m	(Ldt;Lgw;I)Lcjf;	a	getBlockItem
		p	0		source
		p	1		pos
		p	2		slotId
	m	(Ldt;Lgw;ILcjf;)I	a	setBlockItem
		p	0		source
		p	1		pos
		p	2		slot
		p	3		stack
	m	(Ldt;Lgw;ILeed;)I	a	modifyBlockItem
		p	0		source
		p	1		pos
		p	2		slot
		p	3		modifier
	m	(Ldt;Lgw;ILgw;I)I	a	blockToBlock
		p	0		source
		p	1		sourcePos
		p	2		sourceSlot
		p	3		pos
		p	4		slot
	m	(Ldt;Lgw;ILgw;ILeed;)I	a	blockToBlock
		p	0		source
		p	1		sourcePos
		p	2		sourceSlot
		p	3		pos
		p	4		slot
		p	5		modifier
	m	(Ldt;Lgw;ILjava/util/Collection;I)I	a	blockToEntities
		p	0		source
		p	1		sourcePos
		p	2		sourceSlot
		p	3		targets
		p	4		slot
	m	(Ldt;Lgw;ILjava/util/Collection;ILeed;)I	a	blockToEntities
		p	0		source
		p	1		sourcePos
		p	2		sourceSlot
		p	3		targets
		p	4		slot
		p	5		modifier
	m	(Ldt;Lgw;Lcom/mojang/brigadier/exceptions/Dynamic3CommandExceptionType;)Lbgr;	a	getContainer
		p	0		source
		p	1		pos
		p	2		exception
	m	(Ldt;Ljava/util/Collection;ILcjf;)I	a	setEntityItem
		p	0		source
		p	1		targets
		p	2		slot
		p	3		stack
	m	(Ldt;Ljava/util/Collection;ILeed;)I	a	modifyEntityItem
		p	0		source
		p	1		targets
		p	2		slot
		p	3		modifier
	m	(Lgw;Lcjf;)Ltl;	a	lambda$setBlockItem$25
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$4
		p	0		slot
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$5
		p	0		itemName
		p	1		slot
	m	(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$1
		p	0		x
		p	1		y
		p	2		z
	m	(Ljava/util/List;Lcjf;)Ltl;	a	lambda$setEntityItem$27
	m	(Ljava/util/Map$Entry;)Ltl;	a	lambda$modifyEntityItem$23
	m	(Ljava/util/Map;)Ltl;	a	lambda$modifyEntityItem$24
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$20
		p	0		context
	m	(Lgw;Lcjf;)Ltl;	b	lambda$modifyBlockItem$22
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$3
		p	0		slot
	m	(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$0
		p	0		x
		p	1		y
		p	2		z
	m	(Ljava/util/List;Lcjf;)Ltl;	b	lambda$setEntityItem$26
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$19
		p	0		context
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	c	lambda$static$2
		p	0		slot
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$18
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$17
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$16
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$15
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	h	lambda$register$14
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	i	lambda$register$13
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	j	lambda$register$12
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	k	lambda$register$11
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	l	lambda$register$10
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	m	lambda$register$9
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	n	lambda$register$8
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/Dynamic3CommandExceptionType;	a	ERROR_TARGET_NOT_A_CONTAINER
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_TARGET_INAPPLICABLE_SLOT
	f	Lcom/mojang/brigadier/exceptions/Dynamic3CommandExceptionType;	c	ERROR_SOURCE_NOT_A_CONTAINER
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	d	ERROR_SOURCE_INAPPLICABLE_SLOT
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	e	ERROR_TARGET_NO_CHANGES
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	f	ERROR_TARGET_NO_CHANGES_KNOWN_ITEM
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	g	SUGGEST_MODIFIER
c	ahg	net/minecraft/server/commands/JfrCommand
	m	()Ltl;	a	lambda$startJfr$4
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$3
		p	0		context
	m	(Ldt;)I	a	startJfr
		p	0		source
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		message
	m	(Ljava/nio/file/Path;Luh;)Luh;	a	lambda$stopJfr$5
		p	1		style
	m	(Ltl;)Ltl;	a	lambda$stopJfr$6
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$2
		p	0		context
	m	(Ldt;)I	b	stopJfr
		p	0		source
	m	(Ldt;)Z	c	lambda$register$1
		p	0		source
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	START_FAILED
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	DUMP_FAILED
c	ahh	net/minecraft/server/commands/KickCommand
	m	(Lakr;Ltl;)Ltl;	a	lambda$kickPlayers$3
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
		p	0		context
	m	(Ldt;)Z	a	lambda$register$0
		p	0		source
	m	(Ldt;Ljava/util/Collection;Ltl;)I	a	kickPlayers
		p	0		source
		p	1		targets
		p	2		reason
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$1
		p	0		context
c	ahi	net/minecraft/server/commands/KillCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
		p	0		context
	m	(Ldt;)Z	a	lambda$register$0
		p	0		source
	m	(Ldt;Ljava/util/Collection;)I	a	kill
		p	0		source
		p	1		targets
	m	(Ljava/util/Collection;)Ltl;	a	lambda$kill$4
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$1
		p	0		context
	m	(Ljava/util/Collection;)Ltl;	b	lambda$kill$3
c	ahj	net/minecraft/server/commands/ListPlayersCommand
	m	(Lakr;)Ltl;	a	lambda$listPlayersWithUuids$2
		p	0		player
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$1
		p	0		context
	m	(Ldt;)I	a	listPlayers
		p	0		source
	m	(Ldt;Ljava/util/function/Function;)I	a	format
		p	0		source
		p	1		nameProvider
	m	(Ljava/util/List;Laog;Ltl;)Ltl;	a	lambda$format$3
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$0
		p	0		context
	m	(Ldt;)I	b	listPlayersWithUuids
		p	0		source
c	ahk	net/minecraft/server/commands/LocateCommand
	m	(IIII)F	a	dist
		p	0		x1
		p	1		y1
		p	2		x2
		p	3		y2
	m	(Laev;)Ljava/lang/String;	a	lambda$showLocateResult$14
		p	0		key
	m	(Lcom/mojang/brigadier/CommandDispatcher;Ldn;)V	a	register
		p	0		dispatcher
		p	1		registryAccess
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$7
		p	0		context
	m	(Lcom/mojang/datafixers/util/Pair;)Ljava/lang/String;	a	getElementName
		p	0		result
	m	(Lcom/mojang/datafixers/util/Pair;Laqh;)Ljava/lang/String;	a	lambda$showLocateResult$15
		p	1		key
	m	(Ldt;)Z	a	lambda$register$4
		p	0		source
	m	(Ldt;Let$c;)I	a	locateBiome
		p	0		source
		p	1		predicate
	m	(Ldt;Let$c;Lgw;Lcom/mojang/datafixers/util/Pair;Ljava/lang/String;ZLjava/time/Duration;)I	a	showLocateResult
		p	0		source
		p	1		predicate
		p	2		currentPos
		p	3		result
		p	4		successMessage
		p	5		includeY
		p	6		timeTaken
	m	(Ldt;Leu$c;)I	a	locateStructure
		p	0		source
		p	1		predicate
	m	(Ldt;Leu$c;Lgw;Lcom/mojang/datafixers/util/Pair;Ljava/lang/String;ZLjava/time/Duration;)I	a	showLocateResult
		p	0		source
		p	1		structure
		p	2		currentPos
		p	3		result
		p	4		successMessage
		p	5		includeY
		p	6		timeTaken
	m	(Ldt;Lgw;Lcom/mojang/datafixers/util/Pair;Ljava/lang/String;ZLjava/lang/String;Ljava/time/Duration;)I	a	showLocateResult
		p	0		source
		p	1		currentPos
		p	2		result
		p	3		successMessage
		p	4		includeY
		p	5		entryString
		p	6		timeTaken
	m	(Let$c;Lcom/mojang/datafixers/util/Pair;Lhi$c;)Ljava/lang/String;	a	lambda$showLocateResult$13
		p	2		tag
	m	(Let$c;Lhe$c;)Ljava/lang/String;	a	lambda$showLocateResult$12
		p	1		entry
	m	(Leu$c;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$locateStructure$10
	m	(Leu$c;Lhq;)Ljava/util/Optional;	a	getHolders
		p	0		predicate
		p	1		structureRegistry
	m	(Lgw;Ljava/lang/String;Luh;)Luh;	a	lambda$showLocateResult$16
		p	2		style
	m	(Lhe;)Lhi$a;	a	lambda$getHolders$8
		p	0		entry
	m	(Lhq;Laev;)Ljava/util/Optional;	a	lambda$getHolders$9
		p	1		key
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$3
		p	0		id
	m	(Ljava/lang/String;Ljava/lang/String;Ltl;I)Ltl;	a	lambda$showLocateResult$17
	m	(Laev;)Ljava/lang/String;	b	lambda$getElementName$11
		p	0		key
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$6
		p	0		context
	m	(Ldt;Let$c;)I	b	locatePoi
		p	0		source
		p	1		predicate
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$2
		p	0		id
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$5
		p	0		context
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	c	lambda$static$1
		p	0		id
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	d	lambda$static$0
		p	0		id
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_STRUCTURE_NOT_FOUND
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	c	ERROR_STRUCTURE_INVALID
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	d	ERROR_BIOME_NOT_FOUND
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	e	ERROR_POI_NOT_FOUND
	f	I	f	MAX_STRUCTURE_SEARCH_RADIUS
	f	I	g	MAX_BIOME_SEARCH_RADIUS
	f	I	h	BIOME_SAMPLE_RESOLUTION_HORIZONTAL
	f	I	i	BIOME_SAMPLE_RESOLUTION_VERTICAL
	f	I	j	POI_SEARCH_RADIUS
c	ahl	net/minecraft/server/commands/LootCommand
	m	(Lahl$b;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$13
		p	1		context
	m	(Lakq;Lehn;Lcjf;)V	a	lambda$dropInWorld$22
		p	2		stack
	m	(Lbgr;Lcjf;)Z	a	distributeToContainer
		p	0		inventory
		p	1		stack
	m	(Lbiq;Ljava/util/List;IILjava/util/List;)V	a	setSlots
		p	0		entity
		p	1		stacks
		p	2		slot
		p	3		stackCount
		p	4		addedStacks
	m	(Lcjf;)Ltl;	a	lambda$callback$23
	m	(Lcjf;Laew;)Ltl;	a	lambda$callback$25
	m	(Lcjf;Lcjf;)Z	a	canMergeItems
		p	0		first
		p	1		second
	m	(Lcom/mojang/brigadier/CommandDispatcher;Ldn;)V	a	register
		p	0		dispatcher
		p	1		commandRegistryAccess
	m	(Lcom/mojang/brigadier/builder/ArgumentBuilder;Lahl$c;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	addTargets
		p	0		rootArgument
		p	1		sourceConstructor
	m	(Lcom/mojang/brigadier/context/CommandContext;Laew;Lahl$b;)I	a	dropChestLoot
		p	0		context
		p	1		lootTable
		p	2		constructor
	m	(Lcom/mojang/brigadier/context/CommandContext;Laew;Lecw;Lahl$b;)I	a	drop
		p	0		context
		p	1		lootTable
		p	2		lootContextParameters
		p	3		constructor
	m	(Lcom/mojang/brigadier/context/CommandContext;Laew;Lgw;Lcjf;Lahl$b;)I	a	dropFishingLoot
		p	0		context
		p	1		lootTable
		p	2		pos
		p	3		stack
		p	4		constructor
	m	(Lcom/mojang/brigadier/context/CommandContext;Lbiq;Lahl$b;)I	a	dropKillLoot
		p	0		context
		p	1		entity
		p	2		constructor
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$static$0
		p	0		context
		p	1		builder
	m	(Lcom/mojang/brigadier/context/CommandContext;Lgw;Lcjf;Lahl$b;)I	a	dropBlockLoot
		p	0		context
		p	1		pos
		p	2		stack
		p	3		constructor
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Lahl$a;)I	a	lambda$addTargets$21
		p	0		context
		p	1		stacks
		p	2		messageSender
	m	(Ldn;Lcom/mojang/brigadier/builder/ArgumentBuilder;Lahl$b;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	lambda$register$14
		p	1		builder
		p	2		constructor
	m	(Ldt;)Z	a	lambda$register$3
		p	0		source
	m	(Ldt;Laew;Ljava/util/List;)V	a	lambda$dropKillLoot$28
		p	2		stacks
	m	(Ldt;Lbiv;)Lcjf;	a	getSourceHandItem
		p	0		source
		p	1		slot
	m	(Ldt;Ldfj;Ljava/util/List;)V	a	lambda$dropBlockLoot$27
		p	2		stacks
	m	(Ldt;Lehn;Ljava/util/List;Lahl$a;)I	a	dropInWorld
		p	0		source
		p	1		pos
		p	2		stacks
		p	3		messageSender
	m	(Ldt;Lgw;)Lbgr;	a	getContainer
		p	0		source
		p	1		pos
	m	(Ldt;Lgw;IILjava/util/List;Lahl$a;)I	a	blockReplace
		p	0		source
		p	1		targetPos
		p	2		slot
		p	3		stackCount
		p	4		stacks
		p	5		messageSender
	m	(Ldt;Lgw;Ljava/util/List;Lahl$a;)I	a	blockDistribute
		p	0		source
		p	1		targetPos
		p	2		stacks
		p	3		messageSender
	m	(Ldt;Ljava/util/List;)V	a	callback
		p	0		source
		p	1		stacks
	m	(Ldt;Ljava/util/List;Laew;)V	a	callback
		p	0		source
		p	1		stacks
		p	2		lootTable
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$2
		p	0		entityName
	m	(Ljava/util/Collection;IILjava/util/List;Lahl$a;)I	a	entityReplace
		p	0		targets
		p	1		slot
		p	2		stackCount
		p	3		stacks
		p	4		messageSender
	m	(Ljava/util/Collection;Ljava/util/List;Lahl$a;)I	a	playerGive
		p	0		players
		p	1		stacks
		p	2		messageSender
	m	(Ljava/util/List;)Ltl;	a	lambda$callback$24
	m	(Ljava/util/List;Laew;)Ltl;	a	lambda$callback$26
	m	(Lahl$b;Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$12
		p	1		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Lahl$a;)I	b	lambda$addTargets$20
		p	0		context
		p	1		stacks
		p	2		messageSender
	m	(Ldt;Ljava/util/List;)V	b	lambda$drop$29
		p	1		stacks
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$1
		p	0		entityName
	m	(Lahl$b;Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$11
		p	1		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Lahl$a;)I	c	lambda$addTargets$19
		p	0		context
		p	1		stacks
		p	2		messageSender
	m	(Lahl$b;Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$10
		p	1		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Lahl$a;)I	d	lambda$addTargets$18
		p	0		context
		p	1		stacks
		p	2		messageSender
	m	(Lahl$b;Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$9
		p	1		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Lahl$a;)I	e	lambda$addTargets$17
		p	0		context
		p	1		stacks
		p	2		messageSender
	m	(Lahl$b;Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$8
		p	1		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Lahl$a;)I	f	lambda$addTargets$16
		p	0		context
		p	1		stacks
		p	2		messageSender
	m	(Lahl$b;Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$7
		p	1		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Lahl$a;)I	g	lambda$addTargets$15
		p	0		context
		p	1		stacks
		p	2		messageSender
	m	(Lahl$b;Lcom/mojang/brigadier/context/CommandContext;)I	h	lambda$register$6
		p	1		context
	m	(Lahl$b;Lcom/mojang/brigadier/context/CommandContext;)I	i	lambda$register$5
		p	1		context
	m	(Lahl$b;Lcom/mojang/brigadier/context/CommandContext;)I	j	lambda$register$4
		p	1		context
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	a	SUGGEST_LOOT_TABLE
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_NO_HELD_ITEMS
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	c	ERROR_NO_LOOT_TABLE
c	ahl$a	net/minecraft/server/commands/LootCommand$Callback
	m	(Ljava/util/List;)V	accept	accept
		p	1		items
c	ahl$b	net/minecraft/server/commands/LootCommand$DropConsumer
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Lahl$a;)I	accept	accept
		p	1		context
		p	2		items
		p	3		messageSender
c	ahl$c	net/minecraft/server/commands/LootCommand$TailProvider
	m	(Lcom/mojang/brigadier/builder/ArgumentBuilder;Lahl$b;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	construct	construct
		p	1		builder
		p	2		target
c	ahm	net/minecraft/server/commands/MsgCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$1
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/util/Collection;Lua;)V	a	lambda$register$0
		p	2		message
	m	(Ldt;Ljava/util/Collection;Lua;)V	a	sendMessage
		p	0		source
		p	1		targets
		p	2		message
c	ahn	net/minecraft/server/commands/OpCommand
	m	(Lakr;)Ljava/lang/String;	a	lambda$register$2
		p	0		player
	m	(Laog;Lakr;)Z	a	lambda$register$1
		p	1		player
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$4
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$register$3
		p	0		context
		p	1		builder
	m	(Ldt;)Z	a	lambda$register$0
		p	0		source
	m	(Ldt;Ljava/util/Collection;)I	a	opPlayers
		p	0		source
		p	1		targets
	m	(Ljava/util/Collection;)Ltl;	a	lambda$opPlayers$5
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_ALREADY_OP
c	aho	net/minecraft/server/commands/PardonCommand
	m	(Lcom/mojang/authlib/GameProfile;)Ltl;	a	lambda$pardonPlayers$3
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$register$1
		p	0		context
		p	1		builder
	m	(Ldt;)Z	a	lambda$register$0
		p	0		source
	m	(Ldt;Ljava/util/Collection;)I	a	pardonPlayers
		p	0		source
		p	1		targets
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_NOT_BANNED
c	ahp	net/minecraft/server/commands/PardonIpCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$register$1
		p	0		context
		p	1		builder
	m	(Ldt;)Z	a	lambda$register$0
		p	0		source
	m	(Ldt;Ljava/lang/String;)I	a	unban
		p	0		source
		p	1		target
	m	(Ljava/lang/String;)Ltl;	a	lambda$unban$3
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_INVALID
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_NOT_BANNED
c	ahq	net/minecraft/server/commands/ParticleCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;Ldn;)V	a	register
		p	0		dispatcher
		p	1		registryAccess
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$7
		p	0		context
	m	(Ldt;)Z	a	lambda$register$0
		p	0		source
	m	(Ldt;Lit;Lehn;Lehn;FIZLjava/util/Collection;)I	a	sendParticles
		p	0		source
		p	1		parameters
		p	2		pos
		p	3		delta
		p	4		speed
		p	5		count
		p	6		force
		p	7		viewers
	m	(Lit;)Ltl;	a	lambda$sendParticles$8
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$6
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$5
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$4
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$3
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$2
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$1
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_FAILED
c	ahr	net/minecraft/server/commands/PerfCommand
	m	()Ltl;	a	lambda$startProfilingDedicatedServer$5
	m	(DI)Ltl;	a	lambda$whenStopped$7
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
		p	0		context
	m	(Ldt;)I	a	startProfilingDedicatedServer
		p	0		source
	m	(Ldt;Lbdo;)V	a	whenStopped
		p	0		source
		p	1		result
	m	(Ldt;Ljava/nio/file/Path;Lnet/minecraft/server/MinecraftServer;)V	a	saveResults
		p	0		source
		p	1		tempProfilingDirectory
		p	2		server
	m	(Ldt;Lnet/minecraft/server/MinecraftServer;Ljava/nio/file/Path;)V	a	lambda$startProfilingDedicatedServer$4
		p	2		dumpDirectory
	m	(Ljava/lang/String;)Ltl;	a	lambda$saveResults$6
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$1
		p	0		context
	m	(Ldt;)I	b	stopProfilingDedicatedServer
		p	0		source
	m	(Ldt;Lbdo;)V	b	lambda$startProfilingDedicatedServer$3
		p	1		result
	m	(Ldt;)Z	c	lambda$register$0
		p	0		source
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_NOT_RUNNING
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_ALREADY_RUNNING
c	ahs	net/minecraft/server/commands/PlaceCommand
	m	(Laew;Lgw;)Ltl;	a	lambda$placeTemplate$20
	m	(Lakq;Lcpc;)Z	a	lambda$checkLoaded$21
		p	1		pos
	m	(Lakq;Lcpc;Lcpc;)V	a	checkLoaded
		p	0		world
		p	1		pos1
		p	2		pos2
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$14
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$static$1
		p	0		context
		p	1		builder
	m	(Ldt;)Z	a	lambda$register$2
		p	0		source
	m	(Ldt;Laew;Lgw;Lczh;Lcxq;FI)I	a	placeTemplate
		p	0		source
		p	1		id
		p	2		pos
		p	3		rotation
		p	4		mirror
		p	5		integrity
		p	6		seed
	m	(Ldt;Lhe$c;Lgw;)I	a	placeFeature
		p	0		source
		p	1		feature
		p	2		pos
	m	(Ldt;Lhe;Laew;ILgw;)I	a	placeJigsaw
		p	0		source
		p	1		structurePool
		p	2		id
		p	3		maxDepth
		p	4		pos
	m	(Ldvq;Lakq;Ldhg;Lcpc;)V	a	lambda$placeStructure$18
		p	3		chunkPos
	m	(Lgw;)Ltl;	a	lambda$placeJigsaw$16
	m	(Lhe;)Z	a	lambda$placeStructure$17
		p	0		biome
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		id
	m	(Ljava/lang/String;Lgw;)Ltl;	a	lambda$placeStructure$19
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$13
		p	0		context
	m	(Ldt;Lhe$c;Lgw;)I	b	placeStructure
		p	0		source
		p	1		structure
		p	2		pos
	m	(Ljava/lang/String;Lgw;)Ltl;	b	lambda$placeFeature$15
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$12
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$11
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$10
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$9
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$8
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	h	lambda$register$7
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	i	lambda$register$6
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	j	lambda$register$5
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	k	lambda$register$4
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	l	lambda$register$3
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_FEATURE_FAILED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_JIGSAW_FAILED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_STRUCTURE_FAILED
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	d	ERROR_TEMPLATE_INVALID
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	e	ERROR_TEMPLATE_FAILED
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	f	SUGGEST_TEMPLATES
c	aht	net/minecraft/server/commands/PlaySoundCommand
	m	(Laew;Ljava/util/Collection;)Ltl;	a	lambda$playSound$7
	m	(Lape;)Lcom/mojang/brigadier/builder/LiteralArgumentBuilder;	a	source
		p	0		category
	m	(Lape;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$source$5
		p	1		context
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Ldt;)Z	a	lambda$register$0
		p	0		source
	m	(Ldt;Ljava/util/Collection;Laew;Lape;Lehn;FFF)I	a	playSound
		p	0		source
		p	1		targets
		p	2		sound
		p	3		category
		p	4		pos
		p	5		volume
		p	6		pitch
		p	7		minVolume
	m	(Laew;Ljava/util/Collection;)Ltl;	b	lambda$playSound$6
	m	(Lape;Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$source$4
		p	1		context
	m	(Lape;Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$source$3
		p	1		context
	m	(Lape;Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$source$2
		p	1		context
	m	(Lape;Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$source$1
		p	1		context
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_TOO_FAR
c	ahu	net/minecraft/server/commands/PublishCommand
	m	(I)Lty;	a	getSuccessMessage
		p	0		port
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$5
		p	0		context
	m	(Ldt;)Z	a	lambda$register$1
		p	0		source
	m	(Ldt;IZLcps;)I	a	publish
		p	0		source
		p	1		port
		p	2		allowCommands
		p	3		gameMode
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		port
	m	(I)Ltl;	b	lambda$publish$6
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$4
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$3
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$2
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_FAILED
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_ALREADY_PUBLISHED
c	ahv	net/minecraft/server/commands/RaidCommand
	m	()Ltl;	a	lambda$stop$11
	m	(II)Ltl;	a	lambda$setBadOmenLevel$8
	m	(Lakr;)Lcdb;	a	getRaid
		p	0		player
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$7
		p	0		context
	m	(Ldt;)I	a	glow
		p	0		source
	m	(Ldt;I)I	a	setBadOmenLevel
		p	0		source
		p	1		level
	m	(Ldt;Ltl;)I	a	playSound
		p	0		source
		p	1		type
	m	(Ljava/lang/StringBuilder;)Ltl;	a	lambda$check$13
	m	()Ltl;	b	lambda$start$10
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$6
		p	0		context
	m	(Ldt;)I	b	spawnLeader
		p	0		source
	m	(Ldt;I)I	b	start
		p	0		source
		p	1		level
	m	(Ljava/lang/StringBuilder;)Ltl;	b	lambda$check$12
	m	()Ltl;	c	lambda$spawnLeader$9
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$5
		p	0		context
	m	(Ldt;)I	c	stop
		p	0		source
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$4
		p	0		context
	m	(Ldt;)I	d	check
		p	0		source
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$3
		p	0		context
	m	(Ldt;)Z	e	lambda$register$0
		p	0		source
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$2
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$1
		p	0		context
c	ahw	net/minecraft/server/commands/RandomCommand
	m	(I)Ltl;	a	lambda$resetAllSequencesAndSetNewDefaults$17
	m	(Laew;)Ltl;	a	lambda$resetSequence$15
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$8
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	suggestRandomSequence
		p	0		context
		p	1		suggestionsBuilder
	m	(Ldt;)I	a	resetAllSequences
		p	0		source
	m	(Ldt;IZZ)I	a	resetAllSequencesAndSetNewDefaults
		p	0		source
		p	1		salt
		p	2		includeWorldSeed
		p	3		includeSequenceId
	m	(Ldt;Laew;)I	a	resetSequence
		p	0		source
		p	1		sequenceId
	m	(Ldt;Laew;IZZ)I	a	resetSequence
		p	0		source
		p	1		sequenceId
		p	2		salt
		p	3		includeWorldSeed
		p	4		includeSequenceId
	m	(Ldt;Lcl$d;Laew;Z)I	a	randomSample
		p	0		source
		p	1		range
		p	2		sequenceId
		p	3		roll
	m	(Ljava/lang/String;Z)Lcom/mojang/brigadier/builder/LiteralArgumentBuilder;	a	drawRandomValueTree
		p	0		argumentName
		p	1		roll
	m	(Ljava/util/List;Laew;Lbhd;)V	a	lambda$suggestRandomSequence$12
		p	1		id
		p	2		sequence
	m	(ZLcom/mojang/brigadier/context/CommandContext;)I	a	lambda$drawRandomValueTree$11
		p	1		context
	m	(I)Ltl;	b	lambda$resetAllSequences$16
	m	(Laew;)Ltl;	b	lambda$resetSequence$14
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$7
		p	0		context
	m	(Ldt;)Z	b	lambda$drawRandomValueTree$10
		p	0		source
	m	(ZLcom/mojang/brigadier/context/CommandContext;)I	b	lambda$drawRandomValueTree$9
		p	1		context
	m	(I)Ltl;	c	lambda$randomSample$13
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$6
		p	0		context
	m	(Ldt;)Z	c	lambda$register$0
		p	0		source
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$5
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$4
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$3
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$2
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	h	lambda$register$1
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_RANGE_TOO_LARGE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_RANGE_TOO_SMALL
c	ahx	net/minecraft/server/commands/RecipeCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$4
		p	0		context
	m	(Ldt;)Z	a	lambda$register$0
		p	0		source
	m	(Ldt;Ljava/util/Collection;Ljava/util/Collection;)I	a	giveRecipes
		p	0		source
		p	1		targets
		p	2		recipes
	m	(Ljava/util/Collection;Ljava/util/Collection;)Ltl;	a	lambda$takeRecipes$8
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$3
		p	0		context
	m	(Ldt;Ljava/util/Collection;Ljava/util/Collection;)I	b	takeRecipes
		p	0		source
		p	1		targets
		p	2		recipes
	m	(Ljava/util/Collection;Ljava/util/Collection;)Ltl;	b	lambda$takeRecipes$7
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$2
		p	0		context
	m	(Ljava/util/Collection;Ljava/util/Collection;)Ltl;	c	lambda$giveRecipes$6
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$1
		p	0		context
	m	(Ljava/util/Collection;Ljava/util/Collection;)Ltl;	d	lambda$giveRecipes$5
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_GIVE_FAILED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_TAKE_FAILED
c	ahy	net/minecraft/server/commands/ReloadCommand
	m	()Ltl;	a	lambda$register$2
	m	(Lane;Lecm;Ljava/util/Collection;)Ljava/util/Collection;	a	discoverNewPacks
		p	0		dataPackManager
		p	1		saveProperties
		p	2		enabledDataPacks
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$3
		p	0		context
	m	(Ldt;)Z	a	lambda$register$1
		p	0		source
	m	(Ldt;Ljava/lang/Throwable;)Ljava/lang/Void;	a	lambda$reloadPacks$0
		p	1		throwable
	m	(Ljava/util/Collection;Ldt;)V	a	reloadPacks
		p	0		dataPacks
		p	1		source
	f	Lorg/slf4j/Logger;	a	LOGGER
c	ahz	net/minecraft/server/commands/ResetChunksCommand
	m	()Lcom/mojang/datafixers/util/Unit;	a	lambda$resetChunks$4
	m	(IJ)Ltl;	a	lambda$resetChunks$9
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$3
		p	0		context
	m	(Ldhf;)V	a	lambda$resetChunks$6
		p	0		chunk
	m	(Ldhk;Lbfr;Lakq;Lako;Ljava/util/List;Lcom/mojang/datafixers/util/Unit;)Ljava/util/concurrent/CompletionStage;	a	lambda$resetChunks$8
		p	5		unit
	m	(Ldhk;Lcom/mojang/datafixers/util/Either;)Lcom/mojang/datafixers/util/Unit;	a	lambda$resetChunks$7
		p	1		either
	m	(Ldt;)Z	a	lambda$register$0
		p	0		source
	m	(Ldt;IZ)I	a	resetChunks
		p	0		source
		p	1		radius
		p	2		skipOldChunks
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$2
		p	0		context
	m	(Ldhf;)Ljava/util/concurrent/CompletableFuture;	b	lambda$resetChunks$5
		p	0		chunk
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$1
		p	0		context
	f	Lorg/slf4j/Logger;	a	LOGGER
c	aia	net/minecraft/server/commands/ReturnCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$1
		p	0		context
	m	(Ldt;)Z	a	lambda$register$0
		p	0		source
	m	(Ldt;I)I	a	setReturn
		p	0		source
		p	1		value
c	aib	net/minecraft/server/commands/RideCommand
	m	(Lbiq;Lbiq;)Ltl;	a	lambda$dismount$8
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$5
		p	0		context
	m	(Ldt;)Z	a	lambda$register$3
		p	0		source
	m	(Ldt;Lbiq;)I	a	dismount
		p	0		source
		p	1		rider
	m	(Ldt;Lbiq;Lbiq;)I	a	mount
		p	0		source
		p	1		rider
		p	2		vehicle
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		entity
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$2
		p	0		rider
		p	1		vehicle
	m	(Lbiq;Lbiq;)Ltl;	b	lambda$mount$7
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$4
		p	0		context
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$1
		p	0		rider
		p	1		vehicle
	m	(Lbiq;Lbiq;)Z	c	lambda$mount$6
		p	1		passenger
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	ERROR_NOT_RIDING
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	b	ERROR_ALREADY_RIDING
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	c	ERROR_MOUNT_FAILED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	d	ERROR_MOUNTING_PLAYER
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	e	ERROR_MOUNTING_LOOP
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	f	ERROR_WRONG_DIMENSION
c	aic	net/minecraft/server/commands/SaveAllCommand
	m	()Ltl;	a	lambda$saveAll$4
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
		p	0		context
	m	(Ldt;)Z	a	lambda$register$0
		p	0		source
	m	(Ldt;Z)I	a	saveAll
		p	0		source
		p	1		flush
	m	()Ltl;	b	lambda$saveAll$3
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$1
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_FAILED
c	aid	net/minecraft/server/commands/SaveOffCommand
	m	()Ltl;	a	lambda$register$1
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
		p	0		context
	m	(Ldt;)Z	a	lambda$register$0
		p	0		source
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_ALREADY_OFF
c	aie	net/minecraft/server/commands/SaveOnCommand
	m	()Ltl;	a	lambda$register$1
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
		p	0		context
	m	(Ldt;)Z	a	lambda$register$0
		p	0		source
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_ALREADY_ON
c	aif	net/minecraft/server/commands/SayCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lua;)V	a	lambda$register$1
		p	1		message
	m	(Ldt;)Z	a	lambda$register$0
		p	0		source
c	aig	net/minecraft/server/commands/ScheduleCommand
	m	(ILjava/lang/String;)Ltl;	a	lambda$remove$11
	m	(Laew;IJ)Ltl;	a	lambda$schedule$9
	m	(Laew;ZLeha;JLdt;ILdp;)V	a	lambda$schedule$8
		p	7		function2
	m	(Laew;ZLeha;JLdt;ILjava/util/Collection;)V	a	lambda$schedule$10
		p	7		functions
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$6
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$static$1
		p	0		context
		p	1		builder
	m	(Ldt;)Z	a	lambda$register$2
		p	0		source
	m	(Ldt;Lcom/mojang/datafixers/util/Pair;IZ)I	a	schedule
		p	0		source
		p	1		function
		p	2		time
		p	3		replace
	m	(Ldt;Ljava/lang/String;)I	a	remove
		p	0		source
		p	1		eventName
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		eventName
	m	(Laew;IJ)Ltl;	b	lambda$schedule$7
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$5
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$4
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$3
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_SAME_TICK
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_CANT_REMOVE
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	c	SUGGEST_SCHEDULE
c	aih	net/minecraft/server/commands/ScoreboardCommand
	m	()Lcom/mojang/brigadier/builder/LiteralArgumentBuilder;	a	createRenderTypeModify
	m	(ILeij;Ljava/util/Collection;)Ltl;	a	lambda$removeScore$35
	m	(ILeij;Ljava/util/Collection;I)Ltl;	a	lambda$removeScore$34
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$19
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$register$17
		p	0		context
		p	1		builder
	m	(Ldt;)I	a	listTrackedPlayers
		p	0		source
	m	(Ldt;Leii;)I	a	clearDisplaySlot
		p	0		source
		p	1		slot
	m	(Ldt;Leii;Leij;)I	a	setDisplaySlot
		p	0		source
		p	1		slot
		p	2		objective
	m	(Ldt;Leij;)I	a	removeObjective
		p	0		source
		p	1		objective
	m	(Ldt;Leij;Leip$a;)I	a	setRenderType
		p	0		source
		p	1		objective
		p	2		type
	m	(Ldt;Leij;Ltl;)I	a	setDisplayName
		p	0		source
		p	1		objective
		p	2		displayName
	m	(Ldt;Ljava/lang/String;)I	a	listTrackedPlayerScores
		p	0		source
		p	1		target
	m	(Ldt;Ljava/lang/String;Leij;)I	a	getScore
		p	0		source
		p	1		target
		p	2		objective
	m	(Ldt;Ljava/lang/String;Leip;Ltl;)I	a	addObjective
		p	0		source
		p	1		objective
		p	2		criteria
		p	3		displayName
	m	(Ldt;Ljava/util/Collection;)I	a	resetScores
		p	0		source
		p	1		targets
	m	(Ldt;Ljava/util/Collection;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	suggestTriggers
		p	0		source
		p	1		targets
		p	2		builder
	m	(Ldt;Ljava/util/Collection;Leij;)I	a	enableTrigger
		p	0		source
		p	1		targets
		p	2		objective
	m	(Ldt;Ljava/util/Collection;Leij;I)I	a	setScore
		p	0		source
		p	1		targets
		p	2		objective
		p	3		score
	m	(Ldt;Ljava/util/Collection;Leij;Len$a;Ljava/util/Collection;Leij;)I	a	performOperation
		p	0		source
		p	1		targets
		p	2		targetObjective
		p	3		operation
		p	4		sources
		p	5		sourceObjectives
	m	(Leii;)Ltl;	a	lambda$clearDisplaySlot$41
	m	(Leii;Leij;)Ltl;	a	lambda$setDisplaySlot$42
	m	(Leij;)Ltl;	a	lambda$addObjective$46
	m	(Leij;Ljava/util/Collection;)Ltl;	a	lambda$resetScore$29
	m	(Leij;Ljava/util/Collection;I)Ltl;	a	lambda$setScore$31
	m	(Leip$a;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$createRenderTypeModify$20
		p	1		context
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		objective
		p	1		target
	m	(Ljava/lang/String;)Ltl;	a	lambda$listTrackedPlayerScores$38
	m	(Ljava/lang/String;Leil;Leij;)Ltl;	a	lambda$getScore$21
	m	(Ljava/lang/String;Ljava/util/Map;)Ltl;	a	lambda$listTrackedPlayerScores$39
	m	(Ljava/util/Collection;)Ltl;	a	lambda$listObjectives$48
	m	(Ljava/util/Map$Entry;)Ltl;	a	lambda$listTrackedPlayerScores$40
	m	()Ltl;	b	lambda$listObjectives$47
	m	(ILeij;Ljava/util/Collection;)Ltl;	b	lambda$addScore$33
	m	(ILeij;Ljava/util/Collection;I)Ltl;	b	lambda$addScore$32
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$18
		p	0		context
	m	(Ldt;)I	b	listObjectives
		p	0		source
	m	(Ldt;Ljava/util/Collection;Leij;)I	b	resetScore
		p	0		source
		p	1		targets
		p	2		objective
	m	(Ldt;Ljava/util/Collection;Leij;I)I	b	addScore
		p	0		source
		p	1		targets
		p	2		objective
		p	3		score
	m	(Leij;)Ltl;	b	lambda$removeObjective$45
	m	(Leij;Ljava/util/Collection;)Ltl;	b	lambda$resetScore$28
	m	(Leij;Ljava/util/Collection;I)Ltl;	b	lambda$setScore$30
	m	(Ljava/util/Collection;)Ltl;	b	lambda$listTrackedPlayers$37
	m	()Ltl;	c	lambda$listTrackedPlayers$36
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$16
		p	0		context
	m	(Ldt;)Z	c	lambda$register$1
		p	0		source
	m	(Ldt;Ljava/util/Collection;Leij;I)I	c	removeScore
		p	0		source
		p	1		targets
		p	2		objective
		p	3		score
	m	(Leij;)Ltl;	c	lambda$setRenderType$44
	m	(Leij;Ljava/util/Collection;)Ltl;	c	lambda$enableTrigger$25
	m	(Leij;Ljava/util/Collection;I)Ltl;	c	lambda$performOperation$22
	m	(Ljava/util/Collection;)Ltl;	c	lambda$resetScores$27
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$15
		p	0		context
	m	(Leij;)Ltl;	d	lambda$setDisplayName$43
	m	(Leij;Ljava/util/Collection;)Ltl;	d	lambda$enableTrigger$24
	m	(Ljava/util/Collection;)Ltl;	d	lambda$resetScores$26
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$14
		p	0		context
	m	(Leij;Ljava/util/Collection;)Ltl;	e	lambda$performOperation$23
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$13
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$12
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	h	lambda$register$11
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	i	lambda$register$10
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	j	lambda$register$9
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	k	lambda$register$8
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	l	lambda$register$7
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	m	lambda$register$6
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	n	lambda$register$5
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	o	lambda$register$4
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	p	lambda$register$3
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	q	lambda$register$2
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_OBJECTIVE_ALREADY_EXISTS
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_DISPLAY_SLOT_ALREADY_EMPTY
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_DISPLAY_SLOT_ALREADY_SET
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	d	ERROR_TRIGGER_ALREADY_ENABLED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	e	ERROR_NOT_TRIGGER
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	f	ERROR_NO_VALUE
c	aii	net/minecraft/server/commands/SeedCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;Z)V	a	register
		p	0		dispatcher
		p	1		dedicated
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
		p	0		context
	m	(Ltl;)Ltl;	a	lambda$register$1
	m	(ZLdt;)Z	a	lambda$register$0
		p	1		source
c	aij	net/minecraft/server/commands/SetBlockCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;Ldn;)V	a	register
		p	0		dispatcher
		p	1		commandRegistryAccess
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$5
		p	0		context
	m	(Ldfn;)Z	a	lambda$register$3
		p	0		pos
	m	(Ldt;)Z	a	lambda$register$0
		p	0		source
	m	(Ldt;Lgw;Lff;Laij$b;Ljava/util/function/Predicate;)I	a	setBlock
		p	0		source
		p	1		pos
		p	2		block
		p	3		mode
		p	4		condition
	m	(Lgw;)Ltl;	a	lambda$setBlock$6
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$4
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$2
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$1
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_FAILED
c	aij$a	net/minecraft/server/commands/SetBlockCommand$Filter
	m	(Ldva;Lgw;Lff;Lakq;)Lff;	filter	filter
		p	1		box
		p	2		pos
		p	3		block
		p	4		world
c	aij$b	net/minecraft/server/commands/SetBlockCommand$Mode
	m	()[Laij$b;	a	$values
	f	Laij$b;	a	REPLACE
	f	Laij$b;	b	DESTROY
	f	[Laij$b;	c	$VALUES
c	aik	net/minecraft/server/commands/SetPlayerIdleTimeoutCommand
	m	(I)Ltl;	a	lambda$setIdleTimeout$2
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$1
		p	0		context
	m	(Ldt;)Z	a	lambda$register$0
		p	0		source
	m	(Ldt;I)I	a	setIdleTimeout
		p	0		source
		p	1		minutes
c	ail	net/minecraft/server/commands/SetSpawnCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$4
		p	0		context
	m	(Ldt;)Z	a	lambda$register$0
		p	0		source
	m	(Ldt;Ljava/util/Collection;Lgw;F)I	a	setSpawn
		p	0		source
		p	1		targets
		p	2		pos
		p	3		angle
	m	(Lgw;FLjava/lang/String;Ljava/util/Collection;)Ltl;	a	lambda$setSpawn$6
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$3
		p	0		context
	m	(Lgw;FLjava/lang/String;Ljava/util/Collection;)Ltl;	b	lambda$setSpawn$5
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$2
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$1
		p	0		context
c	aim	net/minecraft/server/commands/SetWorldSpawnCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$3
		p	0		context
	m	(Ldt;)Z	a	lambda$register$0
		p	0		source
	m	(Ldt;Lgw;F)I	a	setSpawn
		p	0		source
		p	1		pos
		p	2		angle
	m	(Lgw;F)Ltl;	a	lambda$setSpawn$4
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$2
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$1
		p	0		context
c	ain	net/minecraft/server/commands/SpawnArmorTrimsCommand
	m	()Ltl;	a	lambda$spawnArmorTrims$7
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
		p	0		context
	m	(Ldt;)Z	a	lambda$register$1
		p	0		source
	m	(Ldt;Lcbu;)I	a	spawnArmorTrims
		p	0		source
		p	1		player
	m	(Lhn;Lhq;Lhq;Lclk;Lcli;)V	a	lambda$spawnArmorTrims$5
		p	4		material
	m	(Lhq;Lcli;)Ljava/lang/Integer;	a	lambda$spawnArmorTrims$4
		p	1		material
	m	(Lhq;Lclk;)Ljava/lang/Integer;	a	lambda$spawnArmorTrims$3
		p	1		pattern
	m	(Lhq;Lhn;Lhq;Lclk;)V	a	lambda$spawnArmorTrims$6
		p	3		pattern
	m	(Ljava/util/HashMap;)V	a	lambda$static$0
		p	0		map
	f	Ljava/util/Map;	a	MATERIAL_AND_SLOT_TO_ITEM
	f	Ljava/util/List;	b	VANILLA_TRIM_PATTERNS
	f	Ljava/util/List;	c	VANILLA_TRIM_MATERIALS
	f	Ljava/util/function/ToIntFunction;	d	TRIM_PATTERN_ORDER
	f	Ljava/util/function/ToIntFunction;	e	TRIM_MATERIAL_ORDER
c	aio	net/minecraft/server/commands/SpectateCommand
	m	()Ltl;	a	lambda$spectate$6
	m	(Lbiq;)Ltl;	a	lambda$spectate$5
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$4
		p	0		context
	m	(Ldt;)Z	a	lambda$register$1
		p	0		source
	m	(Ldt;Lbiq;Lakr;)I	a	spectate
		p	0		source
		p	1		entity
		p	2		player
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		playerName
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$3
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$2
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_SELF
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_NOT_SPECTATOR
c	aip	net/minecraft/server/commands/SpreadPlayersCommand
	m	(Lasc;IDDDD)[Laip$a;	a	createInitialPositions
		p	0		random
		p	1		count
		p	2		minX
		p	4		minZ
		p	6		maxX
		p	8		maxZ
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$5
		p	0		context
	m	(Ldt;)Z	a	lambda$register$3
		p	0		source
	m	(Ldt;Lehm;FFIZLjava/util/Collection;)I	a	spreadPlayers
		p	0		source
		p	1		center
		p	2		spreadDistance
		p	3		maxRange
		p	4		maxY
		p	5		respectTeams
		p	6		players
	m	(Lehm;DLakq;Lasc;DDDDI[Laip$a;Z)V	a	spreadPositions
		p	0		center
		p	1		spreadDistance
		p	3		world
		p	4		random
		p	5		minX
		p	7		minZ
		p	9		maxX
		p	11		maxZ
		p	13		maxY
		p	14		piles
		p	15		respectTeams
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$2
		p	0		maxY
		p	1		worldBottomY
	m	(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$1
		p	0		pilesCount
		p	1		x
		p	2		z
		p	3		maxSpreadDistance
	m	(Ljava/util/Collection;)I	a	getNumberOfTeams
		p	0		entities
	m	(Ljava/util/Collection;Lakq;[Laip$a;IZ)D	a	setPlayerPositions
		p	0		entities
		p	1		world
		p	2		piles
		p	3		maxY
		p	4		respectTeams
	m	(Z[Laip$a;Lehm;D)Ltl;	a	lambda$spreadPlayers$6
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$4
		p	0		context
	m	(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$0
		p	0		pilesCount
		p	1		x
		p	2		z
		p	3		maxSpreadDistance
	f	I	a	MAX_ITERATION_COUNT
	f	Lcom/mojang/brigadier/exceptions/Dynamic4CommandExceptionType;	b	ERROR_FAILED_TO_SPREAD_TEAMS
	f	Lcom/mojang/brigadier/exceptions/Dynamic4CommandExceptionType;	c	ERROR_FAILED_TO_SPREAD_ENTITIES
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	d	ERROR_INVALID_MAX_HEIGHT
c	aip$a	net/minecraft/server/commands/SpreadPlayersCommand$Position
	m	()V	a	normalize
	m	(DDDD)Z	a	clamp
		p	1		minX
		p	3		minZ
		p	5		maxX
		p	7		maxZ
	m	(Laip$a;)D	a	dist
		p	1		other
	m	(Lasc;DDDD)V	a	randomize
		p	1		random
		p	2		minX
		p	4		minZ
		p	6		maxX
		p	8		maxZ
	m	(Lcpb;I)I	a	getSpawnY
		p	1		blockView
		p	2		maxY
	m	()D	b	getLength
	m	(Laip$a;)V	b	moveAway
		p	1		other
	m	(Lcpb;I)Z	b	isSafe
		p	1		world
		p	2		maxY
	f	D	a	x
	f	D	b	z
c	aiq	net/minecraft/server/commands/StopCommand
	m	()Ltl;	a	lambda$register$1
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
		p	0		context
	m	(Ldt;)Z	a	lambda$register$0
		p	0		source
c	air	net/minecraft/server/commands/StopSoundCommand
	m	()Ltl;	a	lambda$stopSound$8
	m	(Laew;)Ltl;	a	lambda$stopSound$7
	m	(Laew;Lape;)Ltl;	a	lambda$stopSound$5
	m	(Lape;)Ltl;	a	lambda$stopSound$6
	m	(Lape;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$3
		p	1		context
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$1
		p	0		context
	m	(Ldt;)Z	a	lambda$register$4
		p	0		source
	m	(Ldt;Ljava/util/Collection;Lape;Laew;)I	a	stopSound
		p	0		source
		p	1		targets
		p	2		category
		p	3		sound
	m	(Lape;Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$2
		p	1		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$0
		p	0		context
c	ais	net/minecraft/server/commands/SummonCommand
	m	(Lbiq;)Ltl;	a	lambda$spawnEntity$5
	m	(Lcom/mojang/brigadier/CommandDispatcher;Ldn;)V	a	register
		p	0		dispatcher
		p	1		registryAccess
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$3
		p	0		context
	m	(Ldt;)Z	a	lambda$register$0
		p	0		source
	m	(Ldt;Lhe$c;Lehn;Lqw;Z)Lbiq;	a	createEntity
		p	0		source
		p	1		entityType
		p	2		pos
		p	3		nbt
		p	4		initialize
	m	(Lehn;Lbiq;)Lbiq;	a	lambda$createEntity$4
		p	1		entity
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$2
		p	0		context
	m	(Ldt;Lhe$c;Lehn;Lqw;Z)I	b	spawnEntity
		p	0		source
		p	1		entityType
		p	2		pos
		p	3		nbt
		p	4		initialize
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$1
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_FAILED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_DUPLICATE_UUID
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	INVALID_POSITION
c	ait	net/minecraft/server/commands/TagCommand
	m	(Lbiq;)Ltl;	a	lambda$listTags$9
	m	(Lbiq;Ljava/util/Set;)Ltl;	a	lambda$listTags$10
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$4
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$register$2
		p	0		context
		p	1		builder
	m	(Ldt;)Z	a	lambda$register$0
		p	0		source
	m	(Ldt;Ljava/util/Collection;)I	a	listTags
		p	0		source
		p	1		targets
	m	(Ldt;Ljava/util/Collection;Ljava/lang/String;)I	a	addTag
		p	0		source
		p	1		targets
		p	2		tag
	m	(Ljava/lang/String;Ljava/util/Collection;)Ltl;	a	lambda$removeTag$8
	m	(Ljava/util/Collection;)Ljava/util/Collection;	a	getTags
		p	0		entities
	m	(Ljava/util/Collection;Ljava/util/Set;)Ltl;	a	lambda$listTags$12
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$3
		p	0		context
	m	(Ldt;Ljava/util/Collection;Ljava/lang/String;)I	b	removeTag
		p	0		source
		p	1		targets
		p	2		tag
	m	(Ljava/lang/String;Ljava/util/Collection;)Ltl;	b	lambda$removeTag$7
	m	(Ljava/util/Collection;)Ltl;	b	lambda$listTags$11
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$1
		p	0		context
	m	(Ljava/lang/String;Ljava/util/Collection;)Ltl;	c	lambda$addTag$6
	m	(Ljava/lang/String;Ljava/util/Collection;)Ltl;	d	lambda$addTag$5
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_ADD_FAILED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_REMOVE_FAILED
c	aiu	net/minecraft/server/commands/TeamCommand
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	A	lambda$register$1
		p	0		context
	m	()Ltl;	a	lambda$listTeams$44
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$27
		p	0		context
	m	(Ldt;)I	a	listTeams
		p	0		source
	m	(Ldt;Leik;)I	a	emptyTeam
		p	0		source
		p	1		team
	m	(Ldt;Leik;Leio$a;)I	a	setCollision
		p	0		source
		p	1		team
		p	2		collisionRule
	m	(Ldt;Leik;Leio$b;)I	a	setNametagVisibility
		p	0		source
		p	1		team
		p	2		visibility
	m	(Ldt;Leik;Ljava/util/Collection;)I	a	joinTeam
		p	0		source
		p	1		team
		p	2		members
	m	(Ldt;Leik;Ln;)I	a	setColor
		p	0		source
		p	1		team
		p	2		color
	m	(Ldt;Leik;Ltl;)I	a	setDisplayName
		p	0		source
		p	1		team
		p	2		displayName
	m	(Ldt;Leik;Z)I	a	setFriendlySight
		p	0		source
		p	1		team
		p	2		allowed
	m	(Ldt;Ljava/lang/String;)I	a	createTeam
		p	0		source
		p	1		team
	m	(Ldt;Ljava/lang/String;Ltl;)I	a	createTeam
		p	0		source
		p	1		team
		p	2		displayName
	m	(Ldt;Ljava/util/Collection;)I	a	leaveTeam
		p	0		source
		p	1		members
	m	(Leik;)Ltl;	a	lambda$listMembers$42
	m	(Leik;Leio$a;)Ltl;	a	lambda$setCollision$34
	m	(Leik;Leio$b;)Ltl;	a	lambda$setDeathMessageVisibility$33
	m	(Leik;Ljava/util/Collection;)Ltl;	a	lambda$listMembers$43
	m	(Leik;Ln;)Ltl;	a	lambda$setColor$38
	m	(Ljava/util/Collection;)Ltl;	a	lambda$listTeams$45
	m	(Ljava/util/Collection;Leik;)Ltl;	a	lambda$emptyTeam$39
	m	(Ltl;)Ltl;	a	lambda$setSuffix$47
	m	(ZLeik;)Ltl;	a	lambda$setFriendlyFire$36
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$26
		p	0		context
	m	(Ldt;)Z	b	lambda$register$0
		p	0		source
	m	(Ldt;Leik;)I	b	deleteTeam
		p	0		source
		p	1		team
	m	(Ldt;Leik;Leio$b;)I	b	setDeathMessageVisibility
		p	0		source
		p	1		team
		p	2		visibility
	m	(Ldt;Leik;Ltl;)I	b	setPrefix
		p	0		source
		p	1		team
		p	2		prefix
	m	(Ldt;Leik;Z)I	b	setFriendlyFire
		p	0		source
		p	1		team
		p	2		allowed
	m	(Leik;)Ltl;	b	lambda$createTeam$41
	m	(Leik;Leio$b;)Ltl;	b	lambda$setNametagVisibility$32
	m	(Ljava/util/Collection;)Ltl;	b	lambda$leaveTeam$29
	m	(Ljava/util/Collection;Leik;)Ltl;	b	lambda$joinTeam$31
	m	(Ltl;)Ltl;	b	lambda$setPrefix$46
	m	(ZLeik;)Ltl;	b	lambda$setFriendlySight$35
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$25
		p	0		context
	m	(Ldt;Leik;)I	c	listMembers
		p	0		source
		p	1		team
	m	(Ldt;Leik;Ltl;)I	c	setSuffix
		p	0		source
		p	1		team
		p	2		suffix
	m	(Leik;)Ltl;	c	lambda$deleteTeam$40
	m	(Ljava/util/Collection;)Ltl;	c	lambda$leaveTeam$28
	m	(Ljava/util/Collection;Leik;)Ltl;	c	lambda$joinTeam$30
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$24
		p	0		context
	m	(Leik;)Ltl;	d	lambda$setDisplayName$37
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$23
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$22
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$21
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	h	lambda$register$20
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	i	lambda$register$19
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	j	lambda$register$18
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	k	lambda$register$17
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	l	lambda$register$16
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	m	lambda$register$15
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	n	lambda$register$14
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	o	lambda$register$13
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	p	lambda$register$12
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	q	lambda$register$11
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	r	lambda$register$10
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	s	lambda$register$9
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	t	lambda$register$8
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	u	lambda$register$7
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	v	lambda$register$6
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	w	lambda$register$5
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	x	lambda$register$4
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	y	lambda$register$3
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	z	lambda$register$2
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_TEAM_ALREADY_EXISTS
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_TEAM_ALREADY_EMPTY
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_TEAM_ALREADY_NAME
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	d	ERROR_TEAM_ALREADY_COLOR
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	e	ERROR_TEAM_ALREADY_FRIENDLYFIRE_ENABLED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	f	ERROR_TEAM_ALREADY_FRIENDLYFIRE_DISABLED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	g	ERROR_TEAM_ALREADY_FRIENDLYINVISIBLES_ENABLED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	h	ERROR_TEAM_ALREADY_FRIENDLYINVISIBLES_DISABLED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	i	ERROR_TEAM_NAMETAG_VISIBLITY_UNCHANGED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	j	ERROR_TEAM_DEATH_MESSAGE_VISIBLITY_UNCHANGED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	k	ERROR_TEAM_COLLISION_UNCHANGED
c	aiv	net/minecraft/server/commands/TeamMsgCommand
	m	(Lbiq;Leik;Lakr;)Z	a	lambda$register$0
		p	2		player
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
		p	0		context
	m	(Ldt;Lbiq;Leik;Ljava/util/List;Lua;)V	a	sendMessage
		p	0		source
		p	1		entity
		p	2		team
		p	3		recipients
		p	4		message
	m	(Ldt;Lbiq;Leik;Ljava/util/List;Lua;)V	b	lambda$register$1
		p	4		message
	f	Luh;	a	SUGGEST_STYLE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_NOT_ON_TEAM
c	aiw	net/minecraft/server/commands/TeleportCommand
	m	(D)Ljava/lang/String;	a	formatDouble
		p	0		d
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$8
		p	0		context
	m	(Ldt;)Z	a	lambda$register$9
		p	0		source
	m	(Ldt;Lbiq;Lakq;DDDLjava/util/Set;FFLaiw$a;)V	a	performTeleport
		p	0		source
		p	1		target
		p	2		world
		p	3		x
		p	5		y
		p	7		z
		p	9		movementFlags
		p	10		yaw
		p	11		pitch
		p	12		facingLocation
	m	(Ldt;Ljava/util/Collection;Lakq;Lfm;Lfm;Laiw$a;)I	a	teleportToPos
		p	0		source
		p	1		targets
		p	2		world
		p	3		location
		p	4		rotation
		p	5		facingLocation
	m	(Ldt;Ljava/util/Collection;Lbiq;)I	a	teleportToEntity
		p	0		source
		p	1		targets
		p	2		destination
	m	(Ljava/util/Collection;Lbiq;)Ltl;	a	lambda$teleportToEntity$11
	m	(Ljava/util/Collection;Lehn;)Ltl;	a	lambda$teleportToPos$13
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$7
		p	0		context
	m	(Ldt;)Z	b	lambda$register$0
		p	0		source
	m	(Ljava/util/Collection;Lbiq;)Ltl;	b	lambda$teleportToEntity$10
	m	(Ljava/util/Collection;Lehn;)Ltl;	b	lambda$teleportToPos$12
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$6
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$5
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$4
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$3
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$2
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	h	lambda$register$1
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	INVALID_POSITION
c	aiw$a	net/minecraft/server/commands/TeleportCommand$LookAt
	m	(Lbiq;Led$a;)V	<init>	<init>
		p	1		target
		p	2		targetAnchor
	m	(Lehn;)V	<init>	<init>
		p	1		targetPos
	m	(Ldt;Lbiq;)V	a	perform
		p	1		source
		p	2		entity
	f	Lehn;	a	position
	f	Lbiq;	b	entity
	f	Led$a;	c	anchor
c	aix	net/minecraft/server/commands/TellRawCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$1
		p	0		context
	m	(Ldt;)Z	a	lambda$register$0
		p	0		source
c	aiy	net/minecraft/server/commands/TimeCommand
	m	(I)Ltl;	a	lambda$addTime$12
	m	(Lakq;)I	a	getDayTime
		p	0		world
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$9
		p	0		context
	m	(Ldt;)Z	a	lambda$register$0
		p	0		source
	m	(Ldt;I)I	a	setTime
		p	0		source
		p	1		time
	m	(I)Ltl;	b	lambda$setTime$11
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$8
		p	0		context
	m	(Ldt;I)I	b	addTime
		p	0		source
		p	1		time
	m	(I)Ltl;	c	lambda$queryTime$10
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$7
		p	0		context
	m	(Ldt;I)I	c	queryTime
		p	0		source
		p	1		time
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$6
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$5
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$4
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$3
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	h	lambda$register$2
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	i	lambda$register$1
		p	0		context
c	aiz	net/minecraft/server/commands/TitleCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$6
		p	0		context
	m	(Ldt;)Z	a	lambda$register$0
		p	0		source
	m	(Ldt;Ljava/util/Collection;)I	a	clearTitle
		p	0		source
		p	1		targets
	m	(Ldt;Ljava/util/Collection;III)I	a	setTimes
		p	0		source
		p	1		targets
		p	2		fadeIn
		p	3		stay
		p	4		fadeOut
	m	(Ldt;Ljava/util/Collection;Ltl;Ljava/lang/String;Ljava/util/function/Function;)I	a	showTitle
		p	0		source
		p	1		targets
		p	2		title
		p	3		titleType
		p	4		constructor
	m	(Ljava/lang/String;Ljava/util/Collection;)Ltl;	a	lambda$showTitle$12
	m	(Ljava/util/Collection;)Ltl;	a	lambda$setTimes$14
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$5
		p	0		context
	m	(Ldt;Ljava/util/Collection;)I	b	resetTitle
		p	0		source
		p	1		targets
	m	(Ljava/lang/String;Ljava/util/Collection;)Ltl;	b	lambda$showTitle$11
	m	(Ljava/util/Collection;)Ltl;	b	lambda$setTimes$13
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$4
		p	0		context
	m	(Ljava/util/Collection;)Ltl;	c	lambda$resetTitle$10
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$3
		p	0		context
	m	(Ljava/util/Collection;)Ltl;	d	lambda$resetTitle$9
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$2
		p	0		context
	m	(Ljava/util/Collection;)Ltl;	e	lambda$clearTitle$8
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$1
		p	0		context
	m	(Ljava/util/Collection;)Ltl;	f	lambda$clearTitle$7
c	aja	net/minecraft/server/commands/TriggerCommand
	m	(Lakr;Leij;)Leil;	a	getScore
		p	0		player
		p	1		objective
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$3
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$register$0
		p	0		context
		p	1		builder
	m	(Ldt;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	suggestObjectives
		p	0		source
		p	1		builder
	m	(Ldt;Leil;)I	a	simpleTrigger
		p	0		source
		p	1		score
	m	(Ldt;Leil;I)I	a	addValue
		p	0		source
		p	1		score
		p	2		value
	m	(Leil;)Ltl;	a	lambda$simpleTrigger$6
	m	(Leil;I)Ltl;	a	lambda$setValue$5
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$2
		p	0		context
	m	(Ldt;Leil;I)I	b	setValue
		p	0		source
		p	1		score
		p	2		value
	m	(Leil;I)Ltl;	b	lambda$addValue$4
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$1
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_NOT_PRIMED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_INVALID_OBJECTIVE
c	ajb	net/minecraft/server/commands/WardenSpawnTrackerCommand
	m	(ILcba;)V	a	lambda$setWarningLevel$3
		p	1		warningManager
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
		p	0		context
	m	(Ldt;)Z	a	lambda$register$0
		p	0		source
	m	(Ldt;Ljava/util/Collection;)I	a	resetTracker
		p	0		source
		p	1		players
	m	(Ldt;Ljava/util/Collection;I)I	a	setWarningLevel
		p	0		source
		p	1		players
		p	2		warningCount
	m	(Ljava/util/Collection;)Ltl;	a	lambda$resetTracker$7
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$1
		p	0		context
	m	(Ljava/util/Collection;)Ltl;	b	lambda$resetTracker$6
	m	(Ljava/util/Collection;)Ltl;	c	lambda$setWarningLevel$5
	m	(Ljava/util/Collection;)Ltl;	d	lambda$setWarningLevel$4
c	ajc	net/minecraft/server/commands/WeatherCommand
	m	()Ltl;	a	lambda$setThunder$9
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$6
		p	0		context
	m	(Ldt;)Z	a	lambda$register$0
		p	0		source
	m	(Ldt;I)I	a	setClear
		p	0		source
		p	1		duration
	m	(Ldt;ILbgd;)I	a	getDuration
		p	0		source
		p	1		duration
		p	2		provider
	m	()Ltl;	b	lambda$setRain$8
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$5
		p	0		context
	m	(Ldt;I)I	b	setRain
		p	0		source
		p	1		duration
	m	()Ltl;	c	lambda$setClear$7
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$4
		p	0		context
	m	(Ldt;I)I	c	setThunder
		p	0		source
		p	1		duration
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$3
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$2
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$1
		p	0		context
	f	I	a	DEFAULT_TIME
c	ajd	net/minecraft/server/commands/WhitelistCommand
	m	()Ltl;	a	lambda$showList$16
	m	(Lakr;)Ljava/lang/String;	a	lambda$register$5
		p	0		player
	m	(Laog;Lakr;)Z	a	lambda$register$4
		p	1		player
	m	(Lcom/mojang/authlib/GameProfile;)Ltl;	a	lambda$removePlayers$13
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$10
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$register$8
		p	0		context
		p	1		builder
	m	(Ldt;)I	a	reload
		p	0		source
	m	(Ldt;Ljava/util/Collection;)I	a	addPlayers
		p	0		source
		p	1		targets
	m	([Ljava/lang/String;)Ltl;	a	lambda$showList$17
	m	()Ltl;	b	lambda$disableWhitelist$15
	m	(Lcom/mojang/authlib/GameProfile;)Ltl;	b	lambda$addPlayers$12
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$9
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	b	lambda$register$6
		p	0		context
		p	1		builder
	m	(Ldt;)I	b	enableWhitelist
		p	0		source
	m	(Ldt;Ljava/util/Collection;)I	b	removePlayers
		p	0		source
		p	1		targets
	m	()Ltl;	c	lambda$enableWhitelist$14
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$7
		p	0		context
	m	(Ldt;)I	c	disableWhitelist
		p	0		source
	m	()Ltl;	d	lambda$reload$11
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$3
		p	0		context
	m	(Ldt;)I	d	showList
		p	0		source
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$2
		p	0		context
	m	(Ldt;)Z	e	lambda$register$0
		p	0		source
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$1
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_ALREADY_ENABLED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_ALREADY_DISABLED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_ALREADY_WHITELISTED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	d	ERROR_NOT_WHITELISTED
c	aje	net/minecraft/server/commands/WorldBorderCommand
	m	(D)Ltl;	a	lambda$setSize$19
	m	(DJ)Ltl;	a	lambda$setSize$18
	m	(F)Ltl;	a	lambda$setDamageAmount$12
	m	(I)Ltl;	a	lambda$setWarningDistance$14
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$10
		p	0		context
	m	(Ldt;)I	a	getSize
		p	0		source
	m	(Ldt;DJ)I	a	setSize
		p	0		source
		p	1		distance
		p	3		time
	m	(Ldt;F)I	a	setDamageBuffer
		p	0		source
		p	1		distance
	m	(Ldt;I)I	a	setWarningTime
		p	0		source
		p	1		time
	m	(Ldt;Lehm;)I	a	setCenter
		p	0		source
		p	1		pos
	m	(Lehm;)Ltl;	a	lambda$setCenter$16
	m	(D)Ltl;	b	lambda$getSize$15
	m	(DJ)Ltl;	b	lambda$setSize$17
	m	(F)Ltl;	b	lambda$setDamageBuffer$11
	m	(I)Ltl;	b	lambda$setWarningTime$13
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$9
		p	0		context
	m	(Ldt;)Z	b	lambda$register$0
		p	0		source
	m	(Ldt;F)I	b	setDamageAmount
		p	0		source
		p	1		damagePerBlock
	m	(Ldt;I)I	b	setWarningDistance
		p	0		source
		p	1		distance
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$8
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$7
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$6
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$5
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$4
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	h	lambda$register$3
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	i	lambda$register$2
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	j	lambda$register$1
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_SAME_CENTER
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_SAME_SIZE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_TOO_SMALL
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	d	ERROR_TOO_BIG
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	e	ERROR_TOO_FAR_OUT
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	f	ERROR_SAME_WARNING_TIME
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	g	ERROR_SAME_WARNING_DISTANCE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	h	ERROR_SAME_DAMAGE_BUFFER
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	i	ERROR_SAME_DAMAGE_AMOUNT
c	ajf	net/minecraft/server/commands/data/BlockDataAccessor
	m	(Ldcv;Lgw;)V	<init>	<init>
		p	1		blockEntity
		p	2		pos
	m	()Lqw;	a	getData
	m	(Lej$g;DI)Ltl;	a	getPrintSuccess
		p	1		path
		p	2		scale
		p	4		result
	m	(Ljava/lang/String;)Lajh$c;	a	lambda$static$0
		p	0		argumentName
	m	(Lqw;)V	a	setData
		p	1		nbt
	m	(Lrq;)Ltl;	a	getPrintSuccess
		p	1		element
	m	()Ltl;	b	getModifiedSuccess
	f	Ljava/util/function/Function;	a	PROVIDER
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_NOT_A_BLOCK_ENTITY
	f	Ldcv;	c	entity
	f	Lgw;	d	pos
c	ajf$1	net/minecraft/server/commands/data/BlockDataAccessor$1
	m	(Lcom/mojang/brigadier/builder/ArgumentBuilder;Ljava/util/function/Function;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	wrap
		p	1		argument
		p	2		argumentAdder
	m	(Lcom/mojang/brigadier/context/CommandContext;)Lajg;	a	access
		p	1		context
	f	Ljava/lang/String;	a	val$argPrefix
c	ajg	net/minecraft/server/commands/data/DataAccessor
	m	()Lqw;	a	getData
	m	(Lej$g;DI)Ltl;	a	getPrintSuccess
		p	1		path
		p	2		scale
		p	4		result
	m	(Lqw;)V	a	setData
		p	1		nbt
	m	(Lrq;)Ltl;	a	getPrintSuccess
		p	1		element
	m	()Ltl;	b	getModifiedSuccess
c	ajh	net/minecraft/server/commands/data/DataCommands
	m	(II)I	a	getOffset
		p	0		index
		p	1		length
	m	(Lajg;)Ltl;	a	lambda$mergeData$44
	m	(Lajg;Lej$g;DI)Ltl;	a	lambda$getNumeric$42
	m	(Lajg;Lqw;)Ltl;	a	lambda$getData$43
	m	(Lajg;Lrq;)Ltl;	a	lambda$getData$41
	m	(Lajh$c;Lajh$a;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	lambda$decorateModification$37
		p	1		modifier
	m	(Lajh$c;Lajh$a;Lajh$c;Lcom/mojang/brigadier/builder/ArgumentBuilder;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	lambda$decorateModification$34
		p	3		builderx
	m	(Lajh$c;Lajh$a;Lajh$c;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$decorateModification$33
		p	3		context
	m	(Lajh$c;Lajh$a;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$decorateModification$36
		p	2		context
	m	(Lajh$c;Lajh$c;Lajh$a;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	lambda$decorateModification$35
		p	2		operation
	m	(Lajh$c;Lcom/mojang/brigadier/builder/ArgumentBuilder;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	lambda$register$15
		p	1		builder
	m	(Lajh$c;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$14
		p	1		context
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/builder/ArgumentBuilder;Lajh$b;)V	a	lambda$register$21
		p	0		builder
		p	1		modifier
	m	(Lcom/mojang/brigadier/context/CommandContext;Lajh$c;)Ljava/util/List;	a	getSingletonSource
		p	0		context
		p	1		objectType
	m	(Lcom/mojang/brigadier/context/CommandContext;Lajh$c;Lajh$a;Ljava/util/List;)I	a	manipulateData
		p	0		context
		p	1		objectType
		p	2		modifier
		p	3		elements
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/lang/String;	a	lambda$decorateModification$32
		p	1		value
	m	(Lcom/mojang/brigadier/context/CommandContext;Lqw;Lej$g;Ljava/util/List;)I	a	lambda$register$20
		p	0		context
		p	1		element
		p	2		path
		p	3		elements
	m	(Ldt;)Z	a	lambda$register$7
		p	0		source
	m	(Ldt;Lajg;)I	a	getData
		p	0		source
		p	1		object
	m	(Ldt;Lajg;Lej$g;)I	a	removeData
		p	0		source
		p	1		object
		p	2		path
	m	(Ldt;Lajg;Lej$g;D)I	a	getNumeric
		p	0		source
		p	1		object
		p	2		path
		p	3		scale
	m	(Ldt;Lajg;Lqw;)I	a	mergeData
		p	0		source
		p	1		object
		p	2		nbt
	m	(Lej$g;Lajg;)Lrq;	a	getSingleTag
		p	0		path
		p	1		object
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$3
		p	0		nbt
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$4
		p	0		startIndex
		p	1		endIndex
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$decorateModification$28
		p	0		value
	m	(Ljava/lang/String;I)Ljava/lang/String;	a	substring
		p	0		string
		p	1		startIndex
	m	(Ljava/lang/String;II)Ljava/lang/String;	a	validatedSubstring
		p	0		string
		p	1		startIndex
		p	2		endIndex
	m	(Ljava/util/List;Lajh$d;)Ljava/util/List;	a	stringifyTagList
		p	0		list
		p	1		processor
	m	(Ljava/util/function/BiConsumer;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	decorateModification
		p	0		subArgumentAdder
	m	(Ljava/util/function/BiConsumer;Lajh$c;Lcom/mojang/brigadier/builder/ArgumentBuilder;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	lambda$decorateModification$38
		p	2		builder
	m	(Ljava/util/function/Function;)Lajh$c;	a	lambda$static$6
		p	0		factory
	m	(Lrq;)Ljava/lang/String;	a	getAsText
		p	0		nbt
	m	(Lajg;)Ltl;	b	lambda$removeData$40
	m	(Lajh$c;Lajh$a;Lajh$c;Lcom/mojang/brigadier/builder/ArgumentBuilder;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	b	lambda$decorateModification$24
		p	3		builderx
	m	(Lajh$c;Lajh$a;Lajh$c;Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$decorateModification$31
		p	3		context
	m	(Lajh$c;Lajh$c;Lajh$a;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	b	lambda$decorateModification$25
		p	2		operation
	m	(Lajh$c;Lcom/mojang/brigadier/builder/ArgumentBuilder;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	b	lambda$register$13
		p	1		builder
	m	(Lajh$c;Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$12
		p	1		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lajh$c;)Ljava/util/List;	b	resolveSourcePath
		p	0		context
		p	1		objectType
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/lang/String;	b	lambda$decorateModification$30
		p	1		value
	m	(Lcom/mojang/brigadier/context/CommandContext;Lqw;Lej$g;Ljava/util/List;)I	b	lambda$register$19
		p	0		context
		p	1		sourceNbt
		p	2		path
		p	3		elements
	m	(Ldt;Lajg;Lej$g;)I	b	getData
		p	0		source
		p	1		object
		p	2		path
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$2
		p	0		nbt
	m	(Ljava/lang/String;)Ljava/lang/String;	b	lambda$decorateModification$26
		p	0		value
	m	(Ljava/lang/String;II)Ljava/lang/String;	b	substring
		p	0		string
		p	1		startIndex
		p	2		endIndex
	m	(Ljava/util/function/Function;)Lajh$c;	b	lambda$static$5
		p	0		factory
	m	(Lajg;)Ltl;	c	lambda$manipulateData$39
	m	(Lajh$c;Lajh$a;Lajh$c;Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$decorateModification$29
		p	3		context
	m	(Lajh$c;Lcom/mojang/brigadier/builder/ArgumentBuilder;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	c	lambda$register$9
		p	1		builder
	m	(Lajh$c;Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$11
		p	1		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lqw;Lej$g;Ljava/util/List;)I	c	lambda$register$18
		p	0		context
		p	1		sourceNbt
		p	2		path
		p	3		elements
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	c	lambda$static$1
		p	0		path
	m	(Lajh$c;Lajh$a;Lajh$c;Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$decorateModification$27
		p	3		context
	m	(Lajh$c;Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$10
		p	1		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lqw;Lej$g;Ljava/util/List;)I	d	lambda$register$17
		p	0		context
		p	1		sourceNbt
		p	2		path
		p	3		elements
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	d	lambda$static$0
		p	0		path
	m	(Lajh$c;Lajh$a;Lajh$c;Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$decorateModification$23
		p	3		context
	m	(Lajh$c;Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$8
		p	1		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lqw;Lej$g;Ljava/util/List;)I	e	lambda$register$16
		p	0		context
		p	1		sourceNbt
		p	2		path
		p	3		elements
	m	(Lajh$c;Lajh$a;Lajh$c;Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$decorateModification$22
		p	3		context
	f	Ljava/util/List;	a	ALL_PROVIDERS
	f	Ljava/util/List;	b	TARGET_PROVIDERS
	f	Ljava/util/List;	c	SOURCE_PROVIDERS
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	d	ERROR_MERGE_UNCHANGED
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	e	ERROR_GET_NOT_NUMBER
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	f	ERROR_GET_NON_EXISTENT
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	g	ERROR_MULTIPLE_TAGS
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	h	ERROR_EXPECTED_OBJECT
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	i	ERROR_EXPECTED_VALUE
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	j	ERROR_INVALID_SUBSTRING
c	ajh$a	net/minecraft/server/commands/data/DataCommands$DataManipulator
	m	(Lcom/mojang/brigadier/context/CommandContext;Lqw;Lej$g;Ljava/util/List;)I	modify	modify
		p	1		context
		p	2		sourceNbt
		p	3		path
		p	4		elements
c	ajh$b	net/minecraft/server/commands/data/DataCommands$DataManipulatorDecorator
	m	(Lajh$a;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	create	create
		p	1		modifier
c	ajh$c	net/minecraft/server/commands/data/DataCommands$DataProvider
	m	(Lcom/mojang/brigadier/builder/ArgumentBuilder;Ljava/util/function/Function;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	wrap
		p	1		argument
		p	2		argumentAdder
	m	(Lcom/mojang/brigadier/context/CommandContext;)Lajg;	a	access
		p	1		context
c	ajh$d	net/minecraft/server/commands/data/DataCommands$StringProcessor
	m	(Ljava/lang/String;)Ljava/lang/String;	process	process
		p	1		string
c	aji	net/minecraft/server/commands/data/EntityDataAccessor
	m	(Lbiq;)V	<init>	<init>
		p	1		entity
	m	()Lqw;	a	getData
	m	(Lej$g;DI)Ltl;	a	getPrintSuccess
		p	1		path
		p	2		scale
		p	4		result
	m	(Ljava/lang/String;)Lajh$c;	a	lambda$static$0
		p	0		argumentName
	m	(Lqw;)V	a	setData
		p	1		nbt
	m	(Lrq;)Ltl;	a	getPrintSuccess
		p	1		element
	m	()Ltl;	b	getModifiedSuccess
	f	Ljava/util/function/Function;	a	PROVIDER
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_NO_PLAYERS
	f	Lbiq;	c	entity
c	aji$1	net/minecraft/server/commands/data/EntityDataAccessor$1
	m	(Lcom/mojang/brigadier/builder/ArgumentBuilder;Ljava/util/function/Function;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	wrap
		p	1		argument
		p	2		argumentAdder
	m	(Lcom/mojang/brigadier/context/CommandContext;)Lajg;	a	access
		p	1		context
	f	Ljava/lang/String;	a	val$arg
c	ajj	net/minecraft/server/commands/data/StorageDataAccessor
	m	(Lebz;Laew;)V	<init>	<init>
		p	1		storage
		p	2		id
	m	()Lqw;	a	getData
	m	(Lcom/mojang/brigadier/context/CommandContext;)Lebz;	a	getGlobalTags
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$static$0
		p	0		context
		p	1		builder
	m	(Lej$g;DI)Ltl;	a	getPrintSuccess
		p	1		path
		p	2		scale
		p	4		result
	m	(Ljava/lang/String;)Lajh$c;	a	lambda$static$1
		p	0		argumentName
	m	(Lqw;)V	a	setData
		p	1		nbt
	m	(Lrq;)Ltl;	a	getPrintSuccess
		p	1		element
	m	()Ltl;	b	getModifiedSuccess
	f	Ljava/util/function/Function;	a	PROVIDER
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	b	SUGGEST_STORAGE
	f	Lebz;	c	storage
	f	Laew;	d	id
c	ajj$1	net/minecraft/server/commands/data/StorageDataAccessor$1
	m	(Lcom/mojang/brigadier/builder/ArgumentBuilder;Ljava/util/function/Function;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	wrap
		p	1		argument
		p	2		argumentAdder
	m	(Lcom/mojang/brigadier/context/CommandContext;)Lajg;	a	access
		p	1		context
	f	Ljava/lang/String;	a	val$arg
c	ajk	net/minecraft/server/commands/data/package-info
c	ajl	net/minecraft/server/commands/package-info
c	ajm	net/minecraft/server/dedicated/DedicatedPlayerList
	m	(Lajn;Lhl;Lecj;)V	<init>	<init>
		p	1		server
		p	2		tracker
		p	3		saveHandler
	m	()V	A	loadOps
	m	()V	B	saveOps
	m	()V	C	loadWhiteList
	m	()V	D	saveWhiteList
	m	()V	a	reloadWhiteList
	m	(Lcom/mojang/authlib/GameProfile;)V	a	op
		p	1		profile
	m	(Z)V	a	setUsingWhiteList
		p	1		whitelistEnabled
	m	()Lajn;	b	getServer
	m	(Lcom/mojang/authlib/GameProfile;)V	b	deop
		p	1		profile
	m	()Lnet/minecraft/server/MinecraftServer;	c	getServer
	m	(Lcom/mojang/authlib/GameProfile;)Z	c	isWhiteListed
		p	1		profile
	m	(Lcom/mojang/authlib/GameProfile;)Z	d	canBypassPlayerLimit
		p	1		profile
	m	()V	w	saveIpBanList
	m	()V	x	saveUserBanList
	m	()V	y	loadIpBanList
	m	()V	z	loadUserBanList
	f	Lorg/slf4j/Logger;	a	LOGGER
c	ajn	net/minecraft/server/dedicated/DedicatedServer
	m	(Ljava/lang/Thread;Lecg$c;Lane;Lafr;Lajp;Lcom/mojang/datafixers/DataFixer;Lafo;Lala;)V	<init>	<init>
		p	1		serverThread
		p	2		session
		p	3		dataPackManager
		p	4		saveLoader
		p	5		propertiesLoader
		p	6		dataFixer
		p	7		apiServices
		p	8		worldGenerationProgressListenerFactory
	m	()Z	B	isNetherEnabled
	m	()Z	Q	isSpawningMonsters
	m	()Ljava/util/Optional;	S	getServerResourcePack
	m	()Z	T_	shouldInformAdmins
	m	()Z	W	isSpawningAnimals
	m	()Z	X	areNpcsEnabled
	m	()Lajo;	a	getProperties
	m	(ILajo;)Lajo;	a	lambda$setPlayerIdleTimeout$2
		p	2		serverPropertiesHandler
	m	(Lab;)Lab;	a	fillServerSystemReport
		p	1		details
	m	(Lakq;Lgw;Lcbu;)Z	a	isUnderSpawnProtection
		p	1		world
		p	2		pos
		p	3		player
	m	(Lakr;)Lalu;	a	createTextFilterForPlayer
		p	1		player
	m	(Lcom/mojang/authlib/GameProfile;)Z	a	isSingleplayerOwner
		p	1		profile
	m	(Ljava/lang/String;)Ljava/lang/String;	a	runCommand
		p	1		command
	m	(Ljava/lang/String;Ldt;)V	a	handleConsoleInput
		p	1		command
		p	2		commandSource
	m	(Ljava/nio/file/Path;)V	a	dumpServerProperties
		p	1		file
	m	(ZLajo;)Lajo;	a	lambda$storeUsingWhiteList$4
		p	2		serverPropertiesHandler
	m	()Z	aR	forceSynchronousWrites
	m	()Lcps;	aW	getForcedGameType
	m	()Laog;	ac	getPlayerList
	m	()Z	af	hasGui
	m	()I	ah	getSpawnProtectionRadius
	m	()Z	ai	repliesToStatus
	m	()Z	aj	hidesOnlinePlayers
	m	()I	as	getAbsoluteMaxWorldSize
	m	()I	av	getCompressionThreshold
	m	()Z	aw	enforceSecureProfile
	m	()Ljava/lang/String;	b	getServerIp
	m	(I)I	b	getScaledTrackingDistance
		p	1		initialDistance
	m	(Ljava/util/function/BooleanSupplier;)V	b	tickChildren
		p	1		shouldKeepTicking
	m	()I	bc	getMaxChainedNeighborUpdates
	m	()Z	be	logIPs
	m	()V	bf	handleConsoleInputs
	m	()Lajm;	bg	getPlayerList
	m	()V	bh	showGui
	m	()Z	bi	convertOldUsers
	m	()J	bj	getMaxTickLength
	m	()V	bs	waitForRetry
	m	()Ljava/lang/String;	bt	lambda$fillServerSystemReport$1
	m	()Ljava/lang/String;	bu	lambda$fillServerSystemReport$0
	m	(I)V	c	setPlayerIdleTimeout
		p	1		playerIdleTimeout
	m	()I	d	getServerPort
	m	()Z	e	initServer
	m	(Ljava/lang/String;)V	e	lambda$runCommand$3
	m	()Ljava/lang/String;	f	getServerName
	m	()V	g	onServerExit
	m	()Z	h	isHardcore
	m	()I	i	getOperatorUserPermissionLevel
	m	(Z)V	i	storeUsingWhiteList
		p	1		useWhitelist
	m	()I	j	getFunctionCompilationLevel
	m	()Z	k	shouldRconBroadcast
	m	()Z	l	isDedicatedServer
	m	()I	m	getRateLimitPacketsPerSecond
	m	()Z	n	isEpollEnabled
	m	()Z	o	isCommandBlockEnabled
	m	()Z	p	isPublished
	m	()Ljava/lang/String;	q	getLevelIdName
	m	()V	r	forceDifficulty
	m	()Ljava/lang/String;	s	getPluginNames
	m	()V	t	stopServer
	f	Lorg/slf4j/Logger;	n	LOGGER
	f	I	o	CONVERSION_RETRY_DELAY_MS
	f	I	p	CONVERSION_RETRIES
	f	Ljava/util/List;	q	consoleInput
	f	Laow;	r	queryThreadGs4
	f	Laot;	s	rconConsoleSource
	f	Laoy;	t	rconThread
	f	Lajp;	u	settings
	f	Lajt;	v	gui
	f	Lalv;	w	textFilterClient
c	ajn$1	net/minecraft/server/dedicated/DedicatedServer$1
	f	Lajn;	a	this$0
c	ajo	net/minecraft/server/dedicated/DedicatedServerProperties
	m	(Ljava/util/Properties;)V	<init>	<init>
		p	1		properties
	m	(Lhr;)Ldln;	a	createDimensions
		p	1		dynamicRegistry
	m	(Lhr;Ljava/util/Properties;)Lajo;	a	reload
	m	(Ljava/lang/Integer;)Ljava/lang/Integer;	a	lambda$new$1
		p	0		percentage
	m	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Ljava/util/Optional;	a	getServerPackInfo
		p	0		url
		p	1		sha1
		p	2		hash
		p	3		required
		p	4		prompt
	m	(Ljava/lang/String;Ljava/util/function/Consumer;)V	a	lambda$getFeatures$4
		p	0		id
		p	1		consumer
	m	(Ljava/nio/file/Path;)Lajo;	a	fromFile
		p	0		path
	m	(Lhr;Ljava/util/Properties;)Lajr;	b	reload
		p	1		registryManager
		p	2		properties
	m	(Ljava/lang/Integer;)Ljava/lang/Integer;	b	lambda$new$0
		p	0		maxWorldSize
	m	(Ljava/lang/String;Ljava/lang/String;)Lcpj;	b	getDatapackConfig
		p	0		enabled
		p	1		disabled
	m	(Ljava/lang/String;)Ltl;	c	parseResourcePackPrompt
		p	0		prompt
	m	(Ljava/lang/String;)Lcec;	d	getFeatures
		p	0		featureFlags
	m	(Ljava/lang/String;)Ljava/lang/String;	e	lambda$new$3
		p	0		type
	m	(Ljava/lang/String;)Lcom/google/gson/JsonObject;	f	lambda$new$2
		p	0		generatorSettings
	f	I	A	opPermissionLevel
	f	I	B	functionPermissionLevel
	f	J	C	maxTickTime
	f	I	D	maxChainedNeighborUpdates
	f	I	E	rateLimitPacketsPerSecond
	f	I	F	viewDistance
	f	I	G	simulationDistance
	f	I	H	maxPlayers
	f	I	I	networkCompressionThreshold
	f	Z	J	broadcastRconToOps
	f	Z	K	broadcastConsoleToOps
	f	I	L	maxWorldSize
	f	Z	M	syncChunkWrites
	f	Z	N	enableJmxMonitoring
	f	Z	O	enableStatus
	f	Z	P	hideOnlinePlayers
	f	I	Q	entityBroadcastRangePercentage
	f	Ljava/lang/String;	R	textFilteringConfig
	f	Ljava/util/Optional;	S	serverResourcePackInfo
	f	Lcpj;	T	initialDataPackConfiguration
	f	Lajr$a;	U	playerIdleTimeout
	f	Lajr$a;	V	whiteList
	f	Z	W	enforceSecureProfile
	f	Z	X	logIPs
	f	Ldlq;	Y	worldOptions
	f	Z	a	onlineMode
	f	Lorg/slf4j/Logger;	aa	LOGGER
	f	Ljava/util/regex/Pattern;	ab	SHA1
	f	Lcom/google/common/base/Splitter;	ac	COMMA_SPLITTER
	f	Lajo$a;	ad	worldDimensionData
	f	Z	b	preventProxyConnections
	f	Ljava/lang/String;	c	serverIp
	f	Z	d	spawnAnimals
	f	Z	e	spawnNpcs
	f	Z	f	pvp
	f	Z	g	allowFlight
	f	Ljava/lang/String;	h	motd
	f	Z	i	forceGameMode
	f	Z	j	enforceWhitelist
	f	Lbgv;	k	difficulty
	f	Lcps;	l	gamemode
	f	Ljava/lang/String;	m	levelName
	f	I	n	serverPort
	f	Ljava/lang/Boolean;	o	announcePlayerAchievements
	f	Z	p	enableQuery
	f	I	q	queryPort
	f	Z	r	enableRcon
	f	I	s	rconPort
	f	Ljava/lang/String;	t	rconPassword
	f	Z	u	hardcore
	f	Z	v	allowNether
	f	Z	w	spawnMonsters
	f	Z	x	useNativeTransport
	f	Z	y	enableCommandBlock
	f	I	z	spawnProtection
c	ajo$a	net/minecraft/server/dedicated/DedicatedServerProperties$WorldDimensionData
	m	()Lcom/google/gson/JsonObject;	a	generatorSettings
	m	(Laew;)Laev;	a	lambda$create$2
		p	0		levelTypeId
	m	(Lhe$c;)Lhe$c;	a	lambda$create$4
	m	(Lhq;)Ljava/util/Optional;	a	lambda$create$0
	m	(Lhr;)Ldln;	a	create
		p	1		dynamicRegistryManager
	m	()Ljava/lang/String;	b	levelType
	m	()Ljava/util/Optional;	c	lambda$create$3
	m	()Ljava/lang/IllegalStateException;	d	lambda$create$1
	f	Lcom/google/gson/JsonObject;	a	generatorSettings
	f	Ljava/lang/String;	b	levelType
	f	Ljava/util/Map;	c	LEGACY_PRESET_NAMES
c	ajp	net/minecraft/server/dedicated/DedicatedServerSettings
	m	(Ljava/nio/file/Path;)V	<init>	<init>
		p	1		path
	m	()Lajo;	a	getProperties
	m	(Ljava/util/function/UnaryOperator;)Lajp;	a	update
		p	1		applier
	m	()V	b	forceSave
	f	Ljava/nio/file/Path;	a	source
	f	Lajo;	b	properties
c	ajq	net/minecraft/server/dedicated/ServerWatchdog
	m	(Lajn;)V	<init>	<init>
		p	1		server
	m	()V	a	exit
	m	(Lakq;)Ljava/lang/String;	a	lambda$run$1
		p	0		world
	m	()Ljava/lang/String;	b	lambda$run$2
	m	()Ljava/lang/String;	c	lambda$run$0
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	J	b	MAX_SHUTDOWN_TIME
	f	I	c	SHUTDOWN_STATUS
	f	Lajn;	d	server
	f	J	e	maxTickTime
c	ajq$1	net/minecraft/server/dedicated/ServerWatchdog$1
	f	Lajq;	a	this$0
c	ajr	net/minecraft/server/dedicated/Settings
	m	(Ljava/util/Properties;)V	<init>	<init>
		p	1		properties
	m	()Ljava/util/Properties;	a	cloneProperties
	m	(Ljava/lang/String;)Ljava/lang/String;	a	getLegacyString
		p	1		key
	m	(Ljava/lang/String;I)I	a	get
		p	1		key
		p	2		fallback
	m	(Ljava/lang/String;J)J	a	get
		p	1		key
		p	2		fallback
	m	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	a	get
		p	1		key
		p	2		fallback
	m	(Ljava/lang/String;Ljava/util/function/Function;)Ljava/lang/Object;	a	getLegacy
		p	1		key
		p	2		stringifier
	m	(Ljava/lang/String;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object;	a	get
		p	1		key
		p	2		parser
		p	3		fallback
	m	(Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object;	a	get
		p	1		key
		p	2		parser
		p	3		stringifier
		p	4		fallback
	m	(Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/UnaryOperator;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object;	a	get
		p	1		key
		p	2		parser
		p	3		parsedTransformer
		p	4		stringifier
		p	5		fallback
	m	(Ljava/lang/String;Ljava/util/function/UnaryOperator;I)I	a	get
		p	1		key
		p	2		transformer
		p	3		fallback
	m	(Ljava/lang/String;Z)Z	a	get
		p	1		key
		p	2		fallback
	m	(Ljava/util/function/Function;)Ljava/util/function/Function;	a	wrapNumberDeserializer
		p	0		parser
	m	(Ljava/util/function/Function;Ljava/lang/String;)Ljava/lang/Number;	a	lambda$wrapNumberDeserializer$0
		p	1		string
	m	(Ljava/util/function/Function;Ljava/util/function/UnaryOperator;Ljava/lang/String;)Ljava/lang/Object;	a	lambda$get$2
		p	2		value
	m	(Ljava/util/function/IntFunction;Ljava/util/function/Function;)Ljava/util/function/Function;	a	dispatchNumberOrString
		p	0		intParser
		p	1		fallbackParser
	m	(Ljava/util/function/IntFunction;Ljava/util/function/Function;Ljava/lang/String;)Ljava/lang/Object;	a	lambda$dispatchNumberOrString$1
		p	2		string
	m	(Lhr;Ljava/util/Properties;)Lajr;	b	reload
		p	1		registryManager
		p	2		properties
	m	(Ljava/lang/String;)Ljava/lang/Boolean;	b	getLegacyBoolean
		p	1		key
	m	(Ljava/lang/String;I)Lajr$a;	b	getMutable
		p	1		key
		p	2		fallback
	m	(Ljava/lang/String;Ljava/util/function/Function;Ljava/lang/Object;)Lajr$a;	b	getMutable
		p	1		key
		p	2		parser
		p	3		fallback
	m	(Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/lang/Object;)Lajr$a;	b	getMutable
		p	1		key
		p	2		parser
		p	3		stringifier
		p	4		fallback
	m	(Ljava/lang/String;Z)Lajr$a;	b	getMutable
		p	1		key
		p	2		fallback
	m	(Ljava/nio/file/Path;)Ljava/util/Properties;	b	loadFromFile
		p	0		path
	m	(Ljava/lang/String;)Ljava/lang/String;	c	getStringRaw
		p	1		key
	m	(Ljava/nio/file/Path;)V	c	store
		p	1		path
	f	Ljava/util/Properties;	Z	properties
	f	Lorg/slf4j/Logger;	a	LOGGER
c	ajr$a	net/minecraft/server/dedicated/Settings$MutableValue
	m	(Lajr;Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/Function;)V	<init>	<init>
		p	2		key
		p	3		value
		p	4		stringifier
	m	(Lhr;Ljava/lang/Object;)Lajr;	a	update
		p	1		registryManager
		p	2		value
	f	Lajr;	a	this$0
	f	Ljava/lang/String;	b	key
	f	Ljava/lang/Object;	c	value
	f	Ljava/util/function/Function;	d	serializer
c	ajs	net/minecraft/server/dedicated/package-info
c	ajt	net/minecraft/server/gui/MinecraftServerGui
	m	(Lajn;)V	<init>	<init>
		p	1		server
	m	()V	a	start
	m	(Lajn;)Lajt;	a	showFrameFor
		p	0		server
	m	(Ljava/lang/Runnable;)V	a	addFinalizer
		p	1		task
	m	(Ljavax/swing/JTextArea;Ljavax/swing/JScrollPane;)V	a	lambda$buildChatPanel$1
	m	(Ljavax/swing/JTextArea;Ljavax/swing/JScrollPane;Ljava/lang/String;)V	a	print
		p	1		textArea
		p	2		scrollPane
		p	3		message
	m	(Ljavax/swing/JTextField;Ljava/awt/event/ActionEvent;)V	a	lambda$buildChatPanel$0
		p	2		event
	m	()V	b	close
	m	(Ljavax/swing/JTextArea;Ljavax/swing/JScrollPane;Ljava/lang/String;)V	b	lambda$print$2
	m	()Ljavax/swing/JComponent;	c	buildInfoPanel
	m	()Ljavax/swing/JComponent;	d	buildPlayerPanel
	m	()Ljavax/swing/JComponent;	e	buildChatPanel
	m	()V	f	runFinalizers
	f	Ljava/awt/Font;	a	MONOSPACED
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ljava/lang/String;	c	TITLE
	f	Ljava/lang/String;	d	SHUTDOWN_TITLE
	f	Lajn;	e	server
	f	Ljava/lang/Thread;	f	logAppenderThread
	f	Ljava/util/Collection;	g	finalizers
	f	Ljava/util/concurrent/atomic/AtomicBoolean;	h	isClosing
c	ajt$1	net/minecraft/server/gui/MinecraftServerGui$1
	f	Lajt;	a	val$gui
	f	Ljavax/swing/JFrame;	b	val$frame
	f	Lajn;	c	val$server
c	ajt$2	net/minecraft/server/gui/MinecraftServerGui$2
	f	Lajt;	a	this$0
c	aju	net/minecraft/server/gui/PlayerListComponent
	m	(Lnet/minecraft/server/MinecraftServer;)V	<init>	<init>
		p	1		server
	m	()V	a	tick
	f	Lnet/minecraft/server/MinecraftServer;	a	server
	f	I	b	tickCount
c	ajv	net/minecraft/server/gui/StatsComponent
	m	(Lnet/minecraft/server/MinecraftServer;)V	<init>	<init>
		p	1		server
	m	()V	a	close
	m	(Ljava/awt/event/ActionEvent;)V	a	lambda$new$1
		p	1		event
	m	(Ljava/text/DecimalFormat;)V	a	lambda$static$0
	m	([J)D	a	getAverage
		p	1		values
	m	()V	b	tick
	f	Ljava/text/DecimalFormat;	a	DECIMAL_FORMAT
	f	[I	b	values
	f	I	c	vp
	f	[Ljava/lang/String;	d	msgs
	f	Lnet/minecraft/server/MinecraftServer;	e	server
	f	Ljavax/swing/Timer;	f	timer
c	ajw	net/minecraft/server/gui/package-info
c	ajx	net/minecraft/server/level/BlockDestructionProgress
	m	(ILgw;)V	<init>	<init>
		p	1		breakingEntityId
		p	2		pos
	m	()I	a	getId
	m	(I)V	a	setProgress
		p	1		stage
	m	(Lajx;)I	a	compareTo
	m	()Lgw;	b	getPos
	m	(I)V	b	updateTick
		p	1		lastUpdateTick
	m	()I	c	getProgress
	m	()I	d	getUpdatedRenderTick
	f	I	a	id
	f	Lgw;	b	pos
	f	I	c	progress
	f	I	d	updatedRenderTick
c	ajy	net/minecraft/server/level/ChunkHolder
	m	(Lcpc;ILcpx;Leab;Lajy$c;Lajy$d;)V	<init>	<init>
		p	1		pos
		p	2		level
		p	3		world
		p	4		lightingProvider
		p	5		levelUpdateListener
		p	6		playersWatchingChunkProvider
	m	()Ljava/util/concurrent/CompletableFuture;	a	getTickingChunkFuture
	m	(I)V	a	setTicketLevel
		p	1		level
	m	(Laka;Lakj;)V	a	demoteFullChunk
	m	(Laka;Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/Executor;Lakj;)V	a	scheduleFullChunkPromotion
	m	(Laka;Ljava/util/concurrent/Executor;)V	a	updateFutures
		p	1		chunkStorage
		p	2		executor
	m	(Lcqe;I)V	a	sectionLightChanged
		p	1		lightType
		p	2		y
	m	(Ldhf;)Ldhf;	a	lambda$updateChunkToSave$3
		p	0		chunk
	m	(Ldhf;Lajy$a;)Ldhf;	a	lambda$updateChunkToSave$4
		p	1		unloaded
	m	(Ldhf;Lcom/mojang/datafixers/util/Either;)Ldhf;	a	lambda$updateChunkToSave$5
		p	0		result
		p	1		thenResult
	m	(Ldhf;Ljava/lang/Object;)Ldhf;	a	lambda$addSaveDependency$2
		p	0		result
		p	1		thenResult
	m	(Ldhk;)Ljava/util/concurrent/CompletableFuture;	a	getFutureIfPresentUnchecked
		p	1		leastStatus
	m	(Ldhk;Laka;)Ljava/util/concurrent/CompletableFuture;	a	getOrScheduleFuture
		p	1		targetStatus
		p	2		chunkStorage
	m	(Ldhp;)V	a	replaceProtoChunk
		p	1		chunk
	m	(Ldhq;)V	a	broadcastChanges
		p	1		chunk
	m	(Lgw;)V	a	blockChanged
		p	1		pos
	m	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;	a	lambda$addSendDependency$6
	m	(Ljava/lang/String;Ljava/util/concurrent/CompletableFuture;)V	a	addSaveDependency
		p	1		thenDesc
		p	2		then
	m	(Ljava/util/List;Lcpv;Lgw;)V	a	broadcastBlockEntity
		p	1		players
		p	2		world
		p	3		pos
	m	(Ljava/util/List;Lcpv;Lgw;Ldfj;)V	a	broadcastBlockEntityIfNeeded
		p	1		players
		p	2		world
		p	3		pos
		p	4		state
	m	(Ljava/util/List;Lvd;)V	a	broadcast
		p	1		players
		p	2		packet
	m	(Ljava/util/concurrent/CompletableFuture;)V	a	addSendDependency
		p	1		postProcessingFuture
	m	(Ljava/util/concurrent/CompletableFuture;Lcom/mojang/datafixers/util/Either;)V	a	lambda$scheduleFullChunkPromotion$9
	m	(Ljava/util/concurrent/CompletableFuture;Ldhq;)V	a	lambda$scheduleFullChunkPromotion$8
	m	(Ljava/util/concurrent/CompletableFuture;Ljava/lang/String;)V	a	updateChunkToSave
		p	1		then
		p	2		thenDesc
	m	(Lvd;Lakr;)V	a	lambda$broadcast$1
		p	1		player
	m	()Ljava/util/concurrent/CompletableFuture;	b	getEntityTickingChunkFuture
	m	(I)V	b	setQueueLevel
		p	1		level
	m	(Laka;Lakj;)V	b	lambda$scheduleFullChunkPromotion$7
	m	(Ldhk;)Ljava/util/concurrent/CompletableFuture;	b	getFutureIfPresent
		p	1		leastStatus
	m	(Ljava/util/List;Lcpv;Lgw;Ldfj;)V	b	lambda$broadcastChanges$0
		p	3		pos
		p	4		state
	m	()Ljava/util/concurrent/CompletableFuture;	c	getFullChunkFuture
	m	()Ldhq;	d	getTickingChunk
	m	()Ljava/util/concurrent/CompletableFuture;	e	getChunkSendSyncFuture
	m	()Ldhq;	f	getChunkToSend
	m	()Ldhq;	g	getFullChunk
	m	()Ldhk;	h	getLastAvailableStatus
	m	()Ldhf;	i	getLastAvailable
	m	()Ljava/util/concurrent/CompletableFuture;	j	getChunkToSave
	m	()Lakj;	k	getFullStatus
	m	()Lcpc;	l	getPos
	m	()I	m	getTicketLevel
	m	()I	n	getQueueLevel
	m	()Z	o	wasAccessibleSinceLastSave
	m	()V	p	refreshAccessibility
	m	()Ljava/util/List;	q	getAllFutures
	f	Ljava/util/concurrent/CompletableFuture;	A	sendSync
	f	Lcom/mojang/datafixers/util/Either;	a	UNLOADED_CHUNK
	f	Ljava/util/concurrent/CompletableFuture;	b	UNLOADED_CHUNK_FUTURE
	f	Lcom/mojang/datafixers/util/Either;	c	UNLOADED_LEVEL_CHUNK
	f	Lcom/mojang/datafixers/util/Either;	d	NOT_DONE_YET
	f	Ljava/util/concurrent/CompletableFuture;	e	UNLOADED_LEVEL_CHUNK_FUTURE
	f	Ljava/util/List;	f	CHUNK_STATUSES
	f	Ljava/util/concurrent/atomic/AtomicReferenceArray;	g	futures
	f	Lcpx;	h	levelHeightAccessor
	f	Ljava/util/concurrent/CompletableFuture;	i	fullChunkFuture
	f	Ljava/util/concurrent/CompletableFuture;	j	tickingChunkFuture
	f	Ljava/util/concurrent/CompletableFuture;	k	entityTickingChunkFuture
	f	Ljava/util/concurrent/CompletableFuture;	l	chunkToSave
	f	Larb;	m	chunkToSaveHistory
	f	I	n	oldTicketLevel
	f	I	o	ticketLevel
	f	I	p	queueLevel
	f	Lcpc;	q	pos
	f	Z	r	hasChangedSections
	f	[Lit/unimi/dsi/fastutil/shorts/ShortSet;	s	changedBlocksPerSection
	f	Ljava/util/BitSet;	t	blockChangedLightSectionFilter
	f	Ljava/util/BitSet;	u	skyChangedLightSectionFilter
	f	Leab;	v	lightEngine
	f	Lajy$c;	w	onLevelChange
	f	Lajy$d;	x	playerProvider
	f	Z	y	wasAccessibleSinceLastSave
	f	Ljava/util/concurrent/CompletableFuture;	z	pendingFullStateConfirmation
c	ajy$1	net/minecraft/server/level/ChunkHolder$1
	f	Lajy;	a	this$0
c	ajy$a	net/minecraft/server/level/ChunkHolder$ChunkLoadingFailure
	f	Lajy$a;	b	UNLOADED
c	ajy$a$1	net/minecraft/server/level/ChunkHolder$ChunkLoadingFailure$1
c	ajy$b	net/minecraft/server/level/ChunkHolder$ChunkSaveDebug
	m	(Ljava/lang/Thread;Ljava/util/concurrent/CompletableFuture;Ljava/lang/String;)V	<init>	<init>
		p	1		thread
		p	2		action
		p	3		actionDesc
	f	Ljava/lang/Thread;	a	thread
	f	Ljava/util/concurrent/CompletableFuture;	b	future
	f	Ljava/lang/String;	c	source
c	ajy$c	net/minecraft/server/level/ChunkHolder$LevelChangeListener
	m	(Lcpc;Ljava/util/function/IntSupplier;ILjava/util/function/IntConsumer;)V	onLevelChange	onLevelChange
		p	1		pos
		p	2		levelGetter
		p	3		targetLevel
		p	4		levelSetter
c	ajy$d	net/minecraft/server/level/ChunkHolder$PlayerProvider
	m	(Lcpc;Z)Ljava/util/List;	a	getPlayers
		p	1		chunkPos
		p	2		onlyOnWatchDistanceEdge
c	ajz	net/minecraft/server/level/ChunkLevel
	m	(I)Ldhk;	a	generationStatus
		p	0		level
	m	(Lakj;)I	a	byStatus
		p	0		type
	m	(Ldhk;)I	a	byStatus
		p	0		status
	m	(I)Lakj;	b	fullStatus
		p	0		level
	m	(I)Z	c	isEntityTicking
		p	0		level
	m	(I)Z	d	isBlockTicking
		p	0		level
	m	(I)Z	e	isLoaded
		p	0		level
	f	I	a	MAX_LEVEL
	f	I	b	FULL_CHUNK_LEVEL
	f	I	c	BLOCK_TICKING_LEVEL
	f	I	d	ENTITY_TICKING_LEVEL
c	ajz$1	net/minecraft/server/level/ChunkLevel$1
	f	[I	a	$SwitchMap$net$minecraft$server$level$FullChunkStatus
c	aka	net/minecraft/server/level/ChunkMap
	m	(Lakq;Lecg$c;Lcom/mojang/datafixers/DataFixer;Ldzc;Ljava/util/concurrent/Executor;Lbfo;Ldht;Ldhg;Lakz;Ldiz;Ljava/util/function/Supplier;IZ)V	<init>	<init>
		p	1		world
		p	2		session
		p	3		dataFixer
		p	4		structureTemplateManager
		p	5		executor
		p	6		mainThreadExecutor
		p	7		chunkProvider
		p	8		chunkGenerator
		p	9		worldGenerationProgressListener
		p	10		chunkStatusChangeListener
		p	11		persistentStateManagerFactory
		p	12		viewDistance
		p	13		dsync
	m	()Ldhg;	a	generator
	m	(I)V	a	setServerViewDistance
		p	1		watchDistance
	m	(IIILjava/util/List;)Lcom/mojang/datafixers/util/Either;	a	lambda$getChunkRangeFuture$4
		p	4		chunks
	m	(J)Lajy;	a	getUpdatingChunkIfPresent
		p	1		pos
	m	(JILajy;I)Lajy;	a	updateChunkScheduling
		p	1		pos
		p	3		level
		p	4		holder
	m	(JLajy;)V	a	scheduleUnload
		p	1		pos
		p	3		holder
	m	(Lajy$a;)Ljava/lang/String;	a	lambda$printFuture$53
		p	0		unloaded
	m	(Lajy;)Ljava/util/concurrent/CompletableFuture;	a	prepareEntityTickingChunk
		p	1		chunk
	m	(Lajy;ILjava/util/function/IntFunction;)Ljava/util/concurrent/CompletableFuture;	a	getChunkRangeFuture
		p	1		centerChunk
		p	2		margin
		p	3		distanceToStatus
	m	(Lajy;Lcom/mojang/datafixers/util/Either;)Lcom/mojang/datafixers/util/Either;	a	lambda$prepareTickingChunk$43
		p	2		either
	m	(Lajy;Ldhf;)Ldhf;	a	lambda$protoChunkToFullChunk$34
		p	2		protoChunk
	m	(Lajy;Ldhk;)Ljava/util/concurrent/CompletableFuture;	a	schedule
		p	1		holder
		p	2		requiredStatus
	m	(Lajy;Ldhq;)V	a	lambda$prepareTickingChunk$42
		p	2		chunk
	m	(Lajy;Ljava/lang/Runnable;)V	a	lambda$prepareAccessibleChunk$47
		p	2		task
	m	(Lajy;Ljava/lang/Void;Ljava/lang/Throwable;)V	a	lambda$scheduleUnload$15
		p	1		void_
		p	2		throwable
	m	(Lajy;Ljava/util/concurrent/CompletableFuture;JLdhf;)V	a	lambda$scheduleUnload$14
		p	5		chunk
	m	(Lakq;Ljava/util/List;)V	a	postLoadProtoChunk
		p	0		world
		p	1		nbt
	m	(Lakr;)V	a	move
		p	1		player
	m	(Lakr;II)Z	a	isChunkTracked
		p	1		player
		p	2		chunkX
		p	3		chunkZ
	m	(Lakr;Lake;)V	a	applyChunkTrackingView
		p	1		player
		p	2		chunkFilter
	m	(Lakr;Lcpc;)V	a	markChunkPendingToSend
		p	1		player
		p	2		pos
	m	(Lakr;Ldhq;)V	a	markChunkPendingToSend
		p	0		player
		p	1		chunk
	m	(Lakr;Ljava/util/List;)V	a	lambda$resendBiomesForChunks$58
		p	0		player
		p	1		chunksx
	m	(Lakr;Z)V	a	updatePlayerStatus
		p	1		player
		p	2		added
	m	(Lbiq;)V	a	addEntity
		p	1		entity
	m	(Lbiq;Lvd;)V	a	broadcast
		p	1		entity
		p	2		packet
	m	(Lcom/google/gson/JsonElement;)Lcom/mojang/serialization/DataResult;	a	lambda$debugReloadGenerator$0
		p	0		json
	m	(Lcom/mojang/datafixers/util/Either;)Lcom/mojang/datafixers/util/Either;	a	lambda$prepareAccessibleChunk$46
		p	0		either
	m	(Lcom/mojang/datafixers/util/Either;Ljava/lang/Throwable;)Ljava/lang/Object;	a	lambda$prepareTickingChunk$44
		p	1		chunk
		p	2		throwable
	m	(Lcpc;)Ljava/lang/String;	a	getChunkDebugData
		p	1		chunkPos
	m	(Lcpc;I)V	a	waitForLightBeforeSending
		p	1		centerPos
		p	2		radius
	m	(Lcpc;Lajy$a;)Ljava/util/concurrent/CompletableFuture;	a	lambda$scheduleChunkGeneration$28
		p	2		unloaded
	m	(Lcpc;Lajy;Ldhk;Ljava/util/concurrent/Executor;Lcom/mojang/datafixers/util/Either;)Ljava/util/concurrent/CompletionStage;	a	lambda$scheduleChunkGeneration$29
		p	5		either
	m	(Lcpc;Lajy;Ldhk;Ljava/util/concurrent/Executor;Ljava/util/List;)Ljava/util/concurrent/CompletableFuture;	a	lambda$scheduleChunkGeneration$27
		p	5		chunks
	m	(Lcpc;Lakj;)V	a	onFullChunkStatusChange
		p	1		chunkPos
		p	2		levelType
	m	(Lcpc;Lbiq;)D	a	euclideanDistanceSquared
		p	0		pos
		p	1		entity
	m	(Lcpc;Ldhk$a;)B	a	markPosition
		p	1		pos
		p	2		type
	m	(Lcpc;Ljava/lang/Throwable;)Lcom/mojang/datafixers/util/Either;	a	lambda$scheduleChunkLoad$20
		p	2		throwable
	m	(Lcpc;Ljava/util/Optional;)Lcom/mojang/datafixers/util/Either;	a	lambda$scheduleChunkLoad$19
		p	2		nbt
	m	(Lcpc;Z)Ljava/util/List;	a	getPlayers
		p	1		chunkPos
		p	2		onlyOnWatchDistanceEdge
	m	(Ldhf;)Z	a	save
		p	1		chunk
	m	(Ldhg;)V	a	lambda$debugReloadGenerator$1
		p	1		chunkGenerator
	m	(Ldhk;)Ljava/lang/String;	a	lambda$scheduleChunkGeneration$22
	m	(Ldhk;I)Ldhk;	a	getDependencyStatus
		p	1		centerChunkTargetStatus
		p	2		distance
	m	(Ldhq;)V	a	onChunkReadyToSend
		p	1		chunk
	m	(Ldhq;Ljava/lang/Object;)V	a	lambda$prepareTickingChunk$41
		p	2		v
	m	(Ldia;Ldhq;)V	a	lambda$protoChunkToFullChunk$32
		p	2		chunk
	m	(Ljava/io/Writer;)V	a	dumpChunks
		p	1		writer
	m	(Ljava/lang/IllegalStateException;Ljava/lang/String;)Ly;	a	debugFuturesAndCreateReportedException
		p	1		exception
		p	2		details
	m	(Ljava/lang/StringBuilder;Lajy;)V	a	lambda$debugFuturesAndCreateReportedException$6
		p	1		chunkHolder
	m	(Ljava/lang/StringBuilder;Lajy;Lcom/mojang/datafixers/util/Pair;)V	a	lambda$debugFuturesAndCreateReportedException$5
		p	2		pair
	m	(Ljava/lang/Throwable;Lcpc;)Lcom/mojang/datafixers/util/Either;	a	handleChunkLoadFailure
		p	1		throwable
		p	2		chunkPos
	m	(Ljava/util/List;)V	a	resendBiomesForChunks
		p	1		chunks
	m	(Ljava/util/Optional;)Ljava/util/Optional;	a	lambda$readChunk$54
		p	1		nbt
	m	(Ljava/util/concurrent/CompletableFuture;)Ljava/lang/String;	a	printFuture
		p	0		future
	m	(Ljava/util/function/BooleanSupplier;)V	a	tick
		p	1		shouldKeepTicking
	m	(Lo;)V	a	lambda$scheduleChunkGeneration$26
	m	(Lorg/apache/commons/lang3/mutable/MutableBoolean;Ldhf;)V	a	lambda$saveAllChunks$12
		p	1		chunk
	m	(Z)V	a	saveAllChunks
		p	1		flush
	m	()Ldhh;	b	generatorState
	m	(I)Ldhk;	b	lambda$prepareTickingChunk$37
		p	0		distance
	m	(J)Lajy;	b	getVisibleChunkIfPresent
		p	1		pos
	m	(Lajy;)Ljava/util/concurrent/CompletableFuture;	b	prepareTickingChunk
		p	1		holder
	m	(Lajy;Lcom/mojang/datafixers/util/Either;)Lcom/mojang/datafixers/util/Either;	b	lambda$protoChunkToFullChunk$35
		p	2		either
	m	(Lajy;Ldhf;)Ljava/util/concurrent/CompletableFuture;	b	lambda$scheduleChunkGeneration$25
		p	2		chunk
	m	(Lajy;Ldhk;)Ljava/util/concurrent/CompletableFuture;	b	scheduleChunkGeneration
		p	1		holder
		p	2		requiredStatus
	m	(Lajy;Ljava/lang/Runnable;)V	b	lambda$prepareTickingChunk$40
		p	2		task
	m	(Lakr;)I	b	getPlayerViewDistance
		p	1		player
	m	(Lakr;II)Z	b	isChunkOnTrackedBorder
		p	1		player
		p	2		chunkX
		p	3		chunkZ
	m	(Lakr;Lcpc;)V	b	dropChunk
		p	0		player
		p	1		pos
	m	(Lbiq;)V	b	removeEntity
		p	1		entity
	m	(Lbiq;Lvd;)V	b	broadcastAndSend
		p	1		entity
		p	2		packet
	m	(Lcom/mojang/datafixers/util/Either;)Lcom/mojang/datafixers/util/Either;	b	lambda$prepareTickingChunk$39
		p	0		chunks
	m	(Lcpc;)V	b	releaseLightTicket
		p	1		pos
	m	(Lcpc;Ljava/util/Optional;)Ljava/util/Optional;	b	lambda$scheduleChunkLoad$18
		p	1		nbt
	m	(Lcpc;Lqw;)Z	b	lambda$scheduleChunkLoad$17
		p	1		nbt2
	m	(Ldhf;)Ljava/util/Optional;	b	lambda$dumpChunks$48
		p	0		chunk
	m	(Ldhk;I)Ldhk;	b	lambda$scheduleChunkGeneration$21
		p	2		distance
	m	(Ldhq;)Ljava/lang/String;	b	lambda$printFuture$52
		p	0		chunk
	m	(Ljava/util/List;)Ldhq;	b	lambda$prepareAccessibleChunk$45
		p	0		chunks
	m	(Ljava/util/function/BooleanSupplier;)V	b	processUnloads
		p	1		shouldKeepTicking
	m	(Lqw;)Z	b	isChunkDataValid
		p	0		nbt
	m	()Ldlg;	c	randomState
	m	(I)Ldhk;	c	lambda$prepareEntityTickingChunk$7
		p	0		distance
	m	(J)Ljava/util/function/IntSupplier;	c	getChunkQueueLevel
		p	1		pos
	m	(Lajy;)Ljava/util/concurrent/CompletableFuture;	c	prepareAccessibleChunk
		p	1		holder
	m	(Lajy;Ldhf;)Ljava/util/concurrent/CompletableFuture;	c	lambda$scheduleChunkGeneration$24
	m	(Lajy;Ljava/lang/Runnable;)V	c	lambda$protoChunkToFullChunk$36
		p	2		task
	m	(Lakr;)Z	c	skipPlayer
		p	1		player
	m	(Lakr;Lcpc;)Z	c	playerIsCloseEnoughForSpawning
		p	1		player
		p	2		pos
	m	(Lcom/mojang/datafixers/util/Either;)Lcom/mojang/datafixers/util/Either;	c	lambda$prepareEntityTickingChunk$9
		p	0		either
	m	(Lcpc;)Z	c	anyPlayerCloseEnoughForSpawning
		p	1		pos
	m	(Ldhf;)Z	c	lambda$saveAllChunks$11
		p	0		chunk
	m	(Ldhq;)Ljava/lang/Integer;	c	lambda$dumpChunks$51
		p	0		chunk
	m	(Ljava/util/List;)Ldhq;	c	lambda$prepareTickingChunk$38
		p	0		cs
	m	(Lqw;)Lqw;	c	upgradeChunkTag
		p	1		nbt
	m	()V	d	debugReloadGenerator
	m	(J)Ldhq;	d	getChunkToSend
		p	1		pos
	m	(Lajy;)Ljava/util/concurrent/CompletableFuture;	d	protoChunkToFullChunk
		p	1		chunkHolder
	m	(Lajy;Ldhf;)Ljava/util/concurrent/CompletableFuture;	d	lambda$schedule$16
		p	2		chunk
	m	(Lajy;Ljava/lang/Runnable;)V	d	lambda$scheduleChunkGeneration$23
		p	2		task
	m	(Lakr;)V	d	updatePlayerPos
		p	1		player
	m	(Lakr;Lcpc;)V	d	lambda$applyChunkTrackingView$56
		p	1		chunkPos
	m	(Lcom/mojang/datafixers/util/Either;)Lcom/mojang/datafixers/util/Either;	d	lambda$getChunkRangeFuture$3
		p	0		chunk
	m	(Lcpc;)Ljava/util/List;	d	getPlayersCloseForSpawning
		p	1		pos
	m	(Ldhq;)Ljava/lang/Integer;	d	lambda$dumpChunks$50
		p	0		chunk
	m	(Ljava/util/List;)Ldhq;	d	lambda$prepareEntityTickingChunk$8
		p	0		chunks
	m	()Lakt;	e	getLightEngine
	m	(J)I	e	lambda$getChunkQueueLevel$2
	m	(Lajy;)Z	e	saveChunkIfNeeded
		p	1		chunkHolder
	m	(Lakr;)V	e	updateChunkTracking
		p	1		player
	m	(Lakr;Lcpc;)V	e	lambda$applyChunkTrackingView$55
		p	2		chunkPos
	m	(Ldhq;)Ljava/lang/Integer;	e	lambda$dumpChunks$49
		p	0		chunk
	m	()Z	f	hasWork
	m	(Lajy;)Lakj;	f	lambda$protoChunkToFullChunk$33
	m	(Lakr;)Ljava/util/List;	f	lambda$resendBiomesForChunks$57
		p	0		player
	m	(Lcpc;)Ljava/util/concurrent/CompletableFuture;	f	scheduleChunkLoad
		p	1		pos
	m	()Z	g	promoteChunkMap
	m	(Lajy;)Ldhf;	g	lambda$saveAllChunks$10
		p	1		chunkHolder
	m	(Lcpc;)Ldhf;	g	createEmptyChunk
		p	1		chunkPos
	m	()I	h	getTickingGenerated
	m	(Lcpc;)V	h	markPositionReplaceable
		p	1		pos
	m	()I	i	size
	m	(Lcpc;)Z	i	isExistingChunkFull
		p	1		pos
	m	()Laki;	j	getDistanceManager
	m	(Lcpc;)Ljava/util/concurrent/CompletableFuture;	j	readChunk
		p	1		chunkPos
	m	()Ljava/lang/Iterable;	k	getChunks
	m	(Lcpc;)V	k	lambda$waitForLightBeforeSending$59
		p	1		pos
	m	()V	l	tick
	m	(Lcpc;)Ljava/lang/String;	l	lambda$releaseLightTicket$31
	m	()Lbuf;	m	getPoiManager
	m	(Lcpc;)V	m	lambda$releaseLightTicket$30
	m	()Ljava/lang/String;	n	getStorageName
	m	()Z	q	lambda$saveAllChunks$13
	f	Lakc;	A	queueSorter
	f	Lbfq;	B	worldgenMailbox
	f	Lbfq;	C	mainThreadMailbox
	f	Lakz;	D	progressListener
	f	Ldiz;	E	chunkStatusListener
	f	Laka$a;	F	distanceManager
	f	Ljava/util/concurrent/atomic/AtomicInteger;	G	tickingGenerated
	f	Ldzc;	H	structureTemplateManager
	f	Ljava/lang/String;	I	storageName
	f	Lakk;	J	playerMap
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	K	entityMap
	f	Lit/unimi/dsi/fastutil/longs/Long2ByteMap;	L	chunkTypeCache
	f	Lit/unimi/dsi/fastutil/longs/Long2LongMap;	M	chunkSaveCooldowns
	f	Ljava/util/Queue;	N	unloadQueue
	f	I	O	serverViewDistance
	f	I	a	MIN_VIEW_DISTANCE
	f	I	b	MAX_VIEW_DISTANCE
	f	I	c	FORCED_TICKET_LEVEL
	f	B	f	CHUNK_TYPE_REPLACEABLE
	f	B	g	CHUNK_TYPE_UNKNOWN
	f	B	h	CHUNK_TYPE_FULL
	f	Lorg/slf4j/Logger;	i	LOGGER
	f	I	j	CHUNK_SAVED_PER_TICK
	f	I	k	CHUNK_SAVED_EAGERLY_PER_TICK
	f	I	l	EAGER_CHUNK_SAVE_COOLDOWN_IN_MILLIS
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectLinkedOpenHashMap;	m	updatingChunkMap
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectLinkedOpenHashMap;	n	visibleChunkMap
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectLinkedOpenHashMap;	o	pendingUnloads
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	p	entitiesInLevel
	f	Lakq;	q	level
	f	Lakt;	r	lightEngine
	f	Lbfo;	s	mainThreadExecutor
	f	Ldhg;	t	generator
	f	Ldlg;	u	randomState
	f	Ldhh;	v	chunkGeneratorState
	f	Ljava/util/function/Supplier;	w	overworldDataStorage
	f	Lbuf;	x	poiManager
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	y	toDrop
	f	Z	z	modified
c	aka$1	net/minecraft/server/level/ChunkMap$1
	f	Lcpc;	a	val$k
	f	Laka;	c	this$0
c	aka$2	net/minecraft/server/level/ChunkMap$2
	f	I	a	val$startX
	f	I	c	val$finalI
	f	I	d	val$range
	f	I	e	val$startZ
	f	Lcom/mojang/datafixers/util/Either;	f	val$either
	f	Laka;	g	this$0
c	aka$a	net/minecraft/server/level/ChunkMap$DistanceManager
	m	(Laka;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)V	<init>	<init>
		p	2		workerExecutor
		p	3		mainThreadExecutor
	m	(J)Z	a	isChunkToRemove
		p	1		pos
	m	(JILajy;I)Lajy;	a	updateChunkScheduling
		p	1		pos
		p	3		level
		p	4		holder
	m	(J)Lajy;	b	getChunk
		p	1		pos
	f	Laka;	a	this$0
c	aka$b	net/minecraft/server/level/ChunkMap$TrackedEntity
	m	(Laka;Lbiq;IIZ)V	<init>	<init>
		p	2		entity
		p	3		maxDistance
		p	4		tickInterval
		p	5		alwaysUpdateVelocity
	m	()V	a	broadcastRemoved
	m	(I)I	a	scaledRange
		p	1		initialDistance
	m	(Lakr;)V	a	removePlayer
		p	1		player
	m	(Ljava/util/List;)V	a	updatePlayers
		p	1		players
	m	(Lvd;)V	a	broadcast
		p	1		packet
	m	()I	b	getEffectiveRange
	m	(Lakr;)V	b	updatePlayer
		p	1		player
	m	(Lvd;)V	b	broadcastAndSend
		p	1		packet
	f	Laka;	a	this$0
	f	Lakp;	b	serverEntity
	f	Lbiq;	c	entity
	f	I	d	range
	f	Lhw;	e	lastSectionPos
	f	Ljava/util/Set;	f	seenBy
c	akb	net/minecraft/server/level/ChunkTaskPriorityQueue
	m	(Ljava/lang/String;I)V	<init>	<init>
		p	1		name
		p	2		maxSize
	m	()Ljava/util/stream/Stream;	a	pop
	m	(I)Lit/unimi/dsi/fastutil/longs/Long2ObjectLinkedOpenHashMap;	a	lambda$new$0
	m	(ILcpc;I)V	a	resortChunkTasks
		p	1		fromLevel
		p	2		pos
		p	3		toLevel
	m	(J)Ljava/lang/Runnable;	a	acquire
		p	1		pos
	m	(JLjava/util/Optional;)Lcom/mojang/datafixers/util/Either;	a	lambda$pop$6
	m	(JZ)V	a	release
		p	1		pos
		p	3		removeElement
	m	(Ljava/util/Optional;)Z	a	lambda$release$3
	m	(Ljava/util/Optional;JI)V	a	submit
		p	1		element
		p	2		pos
		p	4		level
	m	()Z	b	hasWork
	m	(J)Lcom/mojang/datafixers/util/Either;	b	lambda$pop$5
	m	()Lit/unimi/dsi/fastutil/longs/LongSet;	c	getAcquired
	m	(J)V	c	lambda$acquire$4
	m	(J)Ljava/util/List;	d	lambda$submit$2
	m	(J)Ljava/util/List;	e	lambda$resortChunkTasks$1
	f	I	a	PRIORITY_LEVEL_COUNT
	f	Ljava/util/List;	b	taskQueue
	f	I	c	firstQueue
	f	Ljava/lang/String;	d	name
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	e	acquired
	f	I	f	maxTasks
c	akc	net/minecraft/server/level/ChunkTaskPriorityQueueSorter
	m	(Ljava/util/List;Ljava/util/concurrent/Executor;I)V	<init>	<init>
		p	1		actors
		p	2		executor
		p	3		maxQueues
	m	()Z	a	hasWork
	m	(I)[Ljava/util/concurrent/CompletableFuture;	a	lambda$pollTask$15
	m	(ILbfq;)Lakb;	a	lambda$new$0
		p	1		actor
	m	(ILcpc;ILakb;)V	a	lambda$onLevelChange$9
		p	3		queue
	m	(Lajy;Ljava/lang/Runnable;)Lakc$a;	a	message
		p	0		holder
		p	1		task
	m	(Lajy;Ljava/util/function/Function;)Lakc$a;	a	message
		p	0		holder
		p	1		taskFunction
	m	(Lakb;Lbfq;)V	a	pollTask
		p	1		queue
		p	2		actor
	m	(Lakb;Lbfq;Ljava/lang/Void;)V	a	lambda$pollTask$16
	m	(Lbfq;)Lbfq;	a	getReleaseProcessor
		p	1		executor
	m	(Lbfq;JLjava/lang/Runnable;Z)V	a	release
		p	1		actor
		p	2		chunkPos
		p	4		callback
		p	5		clearTask
	m	(Lbfq;JZLjava/lang/Runnable;)V	a	lambda$release$11
	m	(Lbfq;Lakc$b;)V	a	lambda$getReleaseProcessor$6
		p	2		message
	m	(Lbfq;Lbfq;)Lbft$b;	a	lambda$getReleaseProcessor$8
		p	2		yield
	m	(Lbfq;Lbfq;Z)V	a	lambda$getProcessor$4
	m	(Lbfq;Lcom/mojang/datafixers/util/Either;)Ljava/util/concurrent/CompletableFuture;	a	lambda$pollTask$14
		p	1		executeOrAddBlocking
	m	(Lbfq;Ljava/util/function/Function;JLjava/util/function/IntSupplier;Z)V	a	submit
		p	1		actor
		p	2		task
		p	3		chunkPos
		p	5		lastLevelUpdatedToProvider
		p	6		addBlocker
	m	(Lbfq;Ljava/util/function/IntSupplier;JLjava/util/function/Function;Z)V	a	lambda$submit$12
	m	(Lbfq;Z)Lbfq;	a	getProcessor
		p	1		executor
		p	2		addBlocker
	m	(Lbfq;ZLakc$a;)V	a	lambda$getProcessor$3
		p	3		task
	m	(Lbfq;ZLbfq;)Lbft$b;	a	lambda$getProcessor$5
		p	3		yield
	m	(Ljava/lang/Long;)Ljava/lang/String;	a	lambda$getDebugStatus$18
		p	0		pos
	m	(Ljava/lang/Runnable;)Ljava/util/concurrent/CompletableFuture;	a	lambda$pollTask$13
		p	0		addBlocking
	m	(Ljava/lang/Runnable;JLjava/util/function/IntSupplier;)Lakc$a;	a	message
		p	0		task
		p	1		pos
		p	3		lastLevelUpdatedToProvider
	m	(Ljava/lang/Runnable;JZ)Lakc$b;	a	release
		p	0		task
		p	1		pos
		p	3		removeTask
	m	(Ljava/lang/Runnable;Lbfq;)Ljava/lang/Runnable;	a	lambda$message$2
		p	1		yield
	m	(Ljava/util/Map$Entry;)Ljava/lang/String;	a	lambda$getDebugStatus$19
		p	0		entry
	m	(Ljava/util/function/Function;JLjava/util/function/IntSupplier;)Lakc$a;	a	message
		p	0		taskFunction
		p	1		pos
		p	3		lastLevelUpdatedToProvider
	m	(Ljava/util/function/IntSupplier;Lcpc;ILjava/util/function/IntConsumer;)V	a	lambda$onLevelChange$10
	m	()Ljava/lang/String;	b	getDebugStatus
	m	(Lakb;Lbfq;)V	b	lambda$pollTask$17
	m	(Lbfq;)Lakb;	b	getQueue
		p	1		actor
	m	(Lbfq;Lbfq;)V	b	lambda$getReleaseProcessor$7
	m	(Ljava/lang/Runnable;Lbfq;)V	b	lambda$message$1
	m	(Lcpc;Ljava/util/function/IntSupplier;ILjava/util/function/IntConsumer;)V	onLevelChange	onLevelChange
		p	1		pos
		p	2		levelGetter
		p	3		targetLevel
		p	4		levelSetter
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/Map;	b	queues
	f	Ljava/util/Set;	c	sleeping
	f	Lbfr;	d	mailbox
c	akc$a	net/minecraft/server/level/ChunkTaskPriorityQueueSorter$Message
	m	(Ljava/util/function/Function;JLjava/util/function/IntSupplier;)V	<init>	<init>
		p	1		taskFunction
		p	2		pos
		p	4		lastLevelUpdatedToProvider
	f	Ljava/util/function/Function;	a	task
	f	J	b	pos
	f	Ljava/util/function/IntSupplier;	c	level
c	akc$b	net/minecraft/server/level/ChunkTaskPriorityQueueSorter$Release
	m	(Ljava/lang/Runnable;JZ)V	<init>	<init>
		p	1		callback
		p	2		pos
		p	4		removeTask
	f	Ljava/lang/Runnable;	a	task
	f	J	b	pos
	f	Z	c	clearQueue
c	akd	net/minecraft/server/level/ChunkTracker
	m	(III)V	<init>	<init>
		p	1		levelCount
		p	2		expectedLevelSize
		p	3		expectedTotalSize
	m	(J)Z	a	isSource
		p	1		id
	m	(JIZ)V	a	checkNeighborsAfterUpdate
		p	1		id
		p	3		level
		p	4		decrease
	m	(JJI)I	a	getComputedLevel
		p	1		id
		p	3		excludedId
		p	5		maxLevel
	m	(J)I	b	getLevelFromSource
		p	1		id
	m	(JIZ)V	b	update
		p	1		chunkPos
		p	3		distance
		p	4		decrease
	m	(JJI)I	b	computeLevelFromNeighbor
		p	1		sourceId
		p	3		targetId
		p	5		level
c	ake	net/minecraft/server/level/ChunkTrackingView
	m	(II)Z	a	contains
		p	1		x
		p	2		z
	m	(IIIII)Z	a	isInViewDistance
		p	0		centerX
		p	1		centerZ
		p	2		viewDistance
		p	3		x
		p	4		z
	m	(IIIIIZ)Z	a	isWithinDistance
		p	0		centerX
		p	1		centerZ
		p	2		viewDistance
		p	3		x
		p	4		z
		p	5		includeEdge
	m	(IIZ)Z	a	contains
		p	1		x
		p	2		z
		p	3		includeEdge
	m	(Lake;Lake;Ljava/util/function/Consumer;Ljava/util/function/Consumer;)V	a	difference
		p	0		oldFilter
		p	1		newFilter
		p	2		newlyIncluded
		p	3		justRemoved
	m	(Lcpc;)Z	a	contains
		p	1		pos
	m	(Lcpc;I)Lake;	a	of
		p	0		center
		p	1		viewDistance
	m	(Ljava/util/function/Consumer;)V	a	forEach
		p	1		consumer
	m	(II)Z	b	isInViewDistance
		p	1		x
		p	2		z
	f	Lake;	a	EMPTY
c	ake$1	net/minecraft/server/level/ChunkTrackingView$1
	m	(IIZ)Z	a	contains
		p	1		x
		p	2		z
		p	3		includeEdge
	m	(Ljava/util/function/Consumer;)V	a	forEach
		p	1		consumer
c	ake$a	net/minecraft/server/level/ChunkTrackingView$Positioned
	m	()Lcpc;	a	center
	m	(IIZ)Z	a	contains
		p	1		x
		p	2		z
		p	3		includeEdge
	m	(Lake$a;)Z	a	squareIntersects
		p	1		o
	m	(Ljava/util/function/Consumer;)V	a	forEach
		p	1		consumer
	m	()I	b	viewDistance
	m	()I	c	minX
	m	()I	d	minZ
	m	()I	e	maxX
	m	()I	f	maxZ
	f	Lcpc;	b	center
	f	I	c	viewDistance
c	akf	net/minecraft/server/level/ClientInformation
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Lakf;	a	createDefault
	m	(Lso;)V	a	write
		p	1		buf
	m	()Ljava/lang/String;	b	language
	m	()I	c	viewDistance
	m	()Lcbs;	d	chatVisibility
	m	()Z	e	chatColors
	m	()I	f	modelCustomisation
	m	()Lbja;	g	mainHand
	m	()Z	h	textFilteringEnabled
	m	()Z	i	allowsListing
	f	I	a	MAX_LANGUAGE_LENGTH
	f	Ljava/lang/String;	b	language
	f	I	c	viewDistance
	f	Lcbs;	d	chatVisibility
	f	Z	e	chatColors
	f	I	f	modelCustomisation
	f	Lbja;	g	mainHand
	f	Z	h	textFilteringEnabled
	f	Z	i	allowsListing
c	akg	net/minecraft/server/level/ColumnPos
	m	()Lcpc;	a	toChunkPos
	m	(II)J	a	asLong
		p	0		x
		p	1		z
	m	(J)I	a	getX
		p	0		packed
	m	()J	b	toLong
	m	(J)I	b	getZ
		p	0		packed
	m	()I	c	x
	m	()I	d	z
	f	I	a	x
	f	I	b	z
	f	J	c	COORD_BITS
	f	J	d	COORD_MASK
c	akh	net/minecraft/server/level/DemoMode
	m	(Lakr;)V	<init>	<init>
		p	1		player
	m	()V	a	tick
	m	(Lakr;Lcpv;Lcjf;Lbgx;)Lbgy;	a	useItem
		p	1		player
		p	2		world
		p	3		stack
		p	4		hand
	m	(Lakr;Lcpv;Lcjf;Lbgx;Lehj;)Lbgy;	a	useItemOn
		p	1		player
		p	2		world
		p	3		stack
		p	4		hand
		p	5		hitResult
	m	(Lgw;Lace$a;Lha;II)V	a	handleBlockBreakAction
		p	1		pos
		p	2		action
		p	3		direction
		p	4		worldHeight
		p	5		sequence
	m	()V	f	outputDemoReminder
	f	I	a	DEMO_DAYS
	f	I	b	TOTAL_PLAY_TICKS
	f	Z	e	displayedIntro
	f	Z	f	demoHasEnded
	f	I	g	demoEndedReminder
	f	I	h	gameModeTicks
c	aki	net/minecraft/server/level/DistanceManager
	m	(Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)V	<init>	<init>
		p	1		workerExecutor
		p	2		mainThreadExecutor
	m	()V	a	purgeStaleTickets
	m	(I)V	a	updatePlayerTickets
		p	1		viewDistance
	m	(J)Z	a	isChunkToRemove
		p	1		pos
	m	(JILajy;I)Lajy;	a	updateChunkScheduling
		p	1		pos
		p	3		level
		p	4		holder
	m	(JLaku;)V	a	addTicket
		p	1		position
		p	3		ticket
	m	(JLcom/mojang/datafixers/util/Either;)V	a	lambda$runAllUpdates$4
		p	3		either
	m	(Laka;)Z	a	runAllUpdates
		p	1		chunkStorage
	m	(Laka;Lajy;)V	a	lambda$runAllUpdates$0
		p	2		holder
	m	(Laku;)Z	a	lambda$runAllUpdates$1
		p	0		ticket
	m	(Lakv;Lcpc;ILjava/lang/Object;)V	a	addTicket
		p	1		type
		p	2		pos
		p	3		level
		p	4		argument
	m	(Lasm;)I	a	getTicketLevelAt
		p	0		tickets
	m	(Lcpc;Z)V	a	updateChunkForced
		p	1		pos
		p	2		forced
	m	(Lhw;Lakr;)V	a	addPlayer
		p	1		pos
		p	2		player
	m	(Ljava/lang/String;)V	a	dumpTickets
		p	1		path
	m	()I	b	getNaturalSpawnChunkCount
	m	(I)V	b	updateSimulationDistance
		p	1		simulationDistance
	m	(J)Lajy;	b	getChunk
		p	1		pos
	m	(JLaku;)V	b	removeTicket
		p	1		pos
		p	3		ticket
	m	(Lakv;Lcpc;ILjava/lang/Object;)V	b	removeTicket
		p	1		type
		p	2		pos
		p	3		level
		p	4		argument
	m	(Lhw;Lakr;)V	b	removePlayer
		p	1		pos
		p	2		player
	m	()Ljava/lang/String;	c	getDebugStatus
	m	(J)Z	c	inEntityTickingRange
		p	1		chunkPos
	m	(Lakv;Lcpc;ILjava/lang/Object;)V	c	addRegionTicket
		p	1		type
		p	2		pos
		p	3		radius
		p	4		argument
	m	()Lakw;	d	tickingTracker
	m	(J)Z	d	inBlockTickingRange
		p	1		chunkPos
	m	(Lakv;Lcpc;ILjava/lang/Object;)V	d	removeRegionTicket
		p	1		type
		p	2		pos
		p	3		radius
		p	4		argument
	m	()V	e	removeTicketsOnClosing
	m	(J)Ljava/lang/String;	e	getTicketDebugString
		p	1		pos
	m	()Z	f	hasTickets
	m	(J)Z	f	hasPlayersNearby
		p	1		chunkPos
	m	()I	g	getPlayerTicketLevel
	m	(J)Lasm;	g	getTickets
		p	1		position
	m	()V	h	lambda$runAllUpdates$2
	m	(J)Lit/unimi/dsi/fastutil/objects/ObjectSet;	h	lambda$addPlayer$6
		p	0		sectionPos
	m	(J)Lasm;	i	lambda$getTickets$5
		p	0		pos
	m	(J)V	j	lambda$runAllUpdates$3
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	I	b	PLAYER_TICKET_LEVEL
	f	I	c	INITIAL_TICKET_LIST_CAPACITY
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	d	playersPerChunk
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap;	e	tickets
	f	Laki$a;	f	ticketTracker
	f	Laki$b;	g	naturalSpawnChunkCounter
	f	Lakw;	h	tickingTicketsTracker
	f	Laki$c;	i	playerTicketManager
	f	Ljava/util/Set;	j	chunksToUpdateFutures
	f	Lakc;	k	ticketThrottler
	f	Lbfq;	l	ticketThrottlerInput
	f	Lbfq;	m	ticketThrottlerReleaser
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	n	ticketsToRelease
	f	Ljava/util/concurrent/Executor;	o	mainThreadExecutor
	f	J	p	ticketTickCounter
	f	I	q	simulationDistance
c	aki$a	net/minecraft/server/level/DistanceManager$ChunkTicketTracker
	m	(I)I	a	runDistanceUpdates
		p	1		distance
	m	(JI)V	a	setLevel
		p	1		id
		p	3		level
	m	(J)I	b	getLevelFromSource
		p	1		id
	m	(J)I	c	getLevel
		p	1		id
	f	Laki;	a	this$0
	f	I	b	MAX_LEVEL
c	aki$b	net/minecraft/server/level/DistanceManager$FixedPlayerDistanceChunkTracker
	m	(Laki;I)V	<init>	<init>
		p	2		maxDistance
	m	()V	a	runAllUpdates
	m	(JI)V	a	setLevel
		p	1		id
		p	3		level
	m	(JII)V	a	onLevelChange
		p	1		pos
		p	3		oldDistance
		p	4		distance
	m	(Ljava/lang/String;)V	a	dumpChunks
		p	1		path
	m	(J)I	b	getLevelFromSource
		p	1		id
	m	(J)I	c	getLevel
		p	1		id
	m	(J)Z	d	havePlayer
		p	1		chunkPos
	f	Lit/unimi/dsi/fastutil/longs/Long2ByteMap;	a	chunks
	f	I	b	maxDistance
	f	Laki;	c	this$0
c	aki$c	net/minecraft/server/level/DistanceManager$PlayerTicketTracker
	m	(Laki;I)V	<init>	<init>
		p	1		maxDistance
	m	()V	a	runAllUpdates
	m	(I)V	a	updateViewDistance
		p	1		watchDistance
	m	(JII)V	a	onLevelChange
		p	1		pos
		p	3		oldDistance
		p	4		distance
	m	(JIZZ)V	a	onLevelChange
		p	1		pos
		p	3		distance
		p	4		oldWithinViewDistance
		p	5		withinViewDistance
	m	(JLaku;)V	a	lambda$onLevelChange$5
	m	(JI)V	b	lambda$runAllUpdates$7
		p	3		level
	m	(JLaku;)V	b	lambda$onLevelChange$4
	m	(I)Z	c	haveTicketFor
		p	1		distance
	m	(JLaku;)V	c	lambda$onLevelChange$2
	m	()V	d	lambda$onLevelChange$0
	m	(I)I	d	lambda$onLevelChange$3
	m	(J)I	d	lambda$runAllUpdates$6
	m	(JLaku;)V	d	lambda$onLevelChange$1
	f	Laki;	d	this$0
	f	I	g	viewDistance
	f	Lit/unimi/dsi/fastutil/longs/Long2IntMap;	h	queueLevels
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	i	toUpdate
c	akj	net/minecraft/server/level/FullChunkStatus
	m	()[Lakj;	a	$values
	m	(Lakj;)Z	a	isOrAfter
		p	1		levelType
	f	Lakj;	a	INACCESSIBLE
	f	Lakj;	b	FULL
	f	Lakj;	c	BLOCK_TICKING
	f	Lakj;	d	ENTITY_TICKING
	f	[Lakj;	e	$VALUES
c	akk	net/minecraft/server/level/PlayerMap
	m	()Ljava/util/Set;	a	getAllPlayers
	m	(Lakr;)V	a	removePlayer
		p	1		player
	m	(Lakr;Z)V	a	addPlayer
		p	1		player
		p	2		inactive
	m	(Lakr;)V	b	ignorePlayer
		p	1		player
	m	(Lakr;)V	c	unIgnorePlayer
		p	1		player
	m	(Lakr;)Z	d	ignoredOrUnknown
		p	1		player
	m	(Lakr;)Z	e	ignored
		p	1		player
	f	Lit/unimi/dsi/fastutil/objects/Object2BooleanMap;	a	players
c	akl	net/minecraft/server/level/PlayerRespawnLogic
	m	(Lakq;II)Lgw;	a	getOverworldRespawnPos
		p	0		world
		p	1		x
		p	2		z
	m	(Lakq;Lcpc;)Lgw;	a	getSpawnPosInChunk
		p	0		world
		p	1		chunkPos
c	akm	net/minecraft/server/level/SectionTracker
	m	(III)V	<init>	<init>
		p	1		levelCount
		p	2		expectedLevelSize
		p	3		expectedTotalSize
	m	(JIZ)V	a	checkNeighborsAfterUpdate
		p	1		id
		p	3		level
		p	4		decrease
	m	(JJI)I	a	getComputedLevel
		p	1		id
		p	3		excludedId
		p	5		maxLevel
	m	(J)I	b	getLevelFromSource
		p	1		id
	m	(JIZ)V	b	update
		p	1		id
		p	3		level
		p	4		decrease
	m	(JJI)I	b	computeLevelFromNeighbor
		p	1		sourceId
		p	3		targetId
		p	5		level
c	akn	net/minecraft/server/level/ServerBossEvent
	m	(Ltl;Lbgo$a;Lbgo$b;)V	<init>	<init>
		p	1		displayName
		p	2		color
		p	3		style
	m	(F)V	a	setProgress
		p	1		percent
	m	(Lakr;)V	a	addPlayer
		p	1		player
	m	(Lbgo$a;)V	a	setColor
		p	1		color
	m	(Lbgo$b;)V	a	setOverlay
		p	1		style
	m	(Ljava/util/function/Function;)V	a	broadcast
		p	1		bossBarToPacketFunction
	m	(Ltl;)V	a	setName
		p	1		name
	m	(Z)Lbgo;	a	setDarkenScreen
		p	1		darkenSky
	m	()V	b	removeAllPlayers
	m	(Lakr;)V	b	removePlayer
		p	1		player
	m	(Z)Lbgo;	b	setPlayBossMusic
		p	1		dragonMusic
	m	(Z)Lbgo;	c	setCreateWorldFog
		p	1		thickenFog
	m	(Z)V	d	setVisible
		p	1		visible
	m	()Z	g	isVisible
	m	()Ljava/util/Collection;	h	getPlayers
	f	Ljava/util/Set;	h	players
	f	Ljava/util/Set;	i	unmodifiablePlayers
	f	Z	j	visible
c	ako	net/minecraft/server/level/ServerChunkCache
	m	(Lakq;Lecg$c;Lcom/mojang/datafixers/DataFixer;Ldzc;Ljava/util/concurrent/Executor;Ldhg;IIZLakz;Ldiz;Ljava/util/function/Supplier;)V	<init>	<init>
		p	1		world
		p	2		session
		p	3		dataFixer
		p	4		structureTemplateManager
		p	5		workerExecutor
		p	6		chunkGenerator
		p	7		viewDistance
		p	8		simulationDistance
		p	9		dsync
		p	10		worldGenerationProgressListener
		p	11		chunkStatusChangeListener
		p	12		persistentStateManagerFactory
	m	()Lakt;	a	getLightEngine
	m	(I)V	a	setViewDistance
		p	1		watchDistance
	m	(II)Ldhq;	a	getChunkNow
		p	1		chunkX
		p	2		chunkZ
	m	(IILdhk;Z)Ldhf;	a	getChunk
		p	1		x
		p	2		z
		p	3		leastStatus
		p	4		create
	m	(J)Z	a	isPositionTicking
		p	1		pos
	m	(JLdhf;Ldhk;)V	a	storeInCache
		p	1		pos
		p	3		chunk
		p	4		status
	m	(JLjava/util/function/Consumer;)V	a	getFullChunk
		p	1		pos
		p	3		chunkConsumer
	m	(Lajy;I)Z	a	chunkAbsent
		p	1		holder
		p	2		maxLevel
	m	(Lako$a;)V	a	lambda$tickChunks$5
		p	0		chunk
	m	(Lakr;)V	a	move
		p	1		player
	m	(Lakv;Lcpc;ILjava/lang/Object;)V	a	addRegionTicket
		p	1		ticketType
		p	2		pos
		p	3		radius
		p	4		argument
	m	(Lbiq;)V	a	removeEntity
		p	1		entity
	m	(Lbiq;Lvd;)V	a	broadcastAndSend
		p	1		entity
		p	2		packet
	m	(Lcpc;)Ljava/lang/String;	a	getChunkDebugData
		p	1		pos
	m	(Lcpc;Z)V	a	updateChunkForced
		p	1		pos
		p	2		forced
	m	(Lcqe;Lhw;)V	a	onLightUpdate
		p	1		type
		p	2		pos
	m	(Ldhf;)Ldhf;	a	lambda$getChunk$1
		p	0		chunk
	m	(Lgw;)V	a	blockChanged
		p	1		pos
	m	(Lhw;Lcqe;)V	a	lambda$onLightUpdate$6
	m	(Ljava/util/concurrent/CompletableFuture;)Ljava/util/concurrent/CompletionStage;	a	lambda$getChunkFuture$4
	m	(Ljava/util/function/BooleanSupplier;Z)V	a	tick
		p	1		shouldKeepTicking
		p	2		tickChunks
	m	(Z)V	a	save
		p	1		flush
	m	(ZLajy$a;)Ldhf;	a	lambda$getChunk$2
		p	1		unloaded
	m	(ZZ)V	a	setSpawnSettings
		p	1		spawnMonsters
		p	2		spawnAnimals
	m	()I	b	getTickingGenerated
	m	(I)V	b	setSimulationDistance
		p	1		simulationDistance
	m	(II)Z	b	hasChunk
		p	1		x
		p	2		z
	m	(IILdhk;Z)Ljava/util/concurrent/CompletableFuture;	b	getChunkFuture
		p	1		chunkX
		p	2		chunkZ
		p	3		leastStatus
		p	4		create
	m	(J)Lajy;	b	getVisibleChunkIfPresent
		p	1		pos
	m	(Lakv;Lcpc;ILjava/lang/Object;)V	b	removeRegionTicket
		p	1		ticketType
		p	2		pos
		p	3		radius
		p	4		argument
	m	(Lbiq;)V	b	addEntity
		p	1		entity
	m	(Lbiq;Lvd;)V	b	broadcast
		p	1		entity
		p	2		packet
	m	()Lcpv;	c	getLevel
	m	(II)Ldhs;	c	getChunkForLighting
		p	1		chunkX
		p	2		chunkZ
	m	(IILdhk;Z)Ljava/util/concurrent/CompletableFuture;	c	getChunkFutureMainThread
		p	1		chunkX
		p	2		chunkZ
		p	3		leastStatus
		p	4		create
	m	()Z	d	pollTask
	m	(IILdhk;Z)Ljava/util/concurrent/CompletableFuture;	d	lambda$getChunkFuture$3
	m	()Ljava/lang/String;	e	gatherStats
	m	(IILdhk;Z)Ldhf;	e	lambda$getChunk$0
	m	()I	f	getPendingTasksCount
	m	()Ldhg;	g	getGenerator
	m	()Ldhh;	h	getGeneratorState
	m	()Ldlg;	i	randomState
	m	()I	j	getLoadedChunksCount
	m	()Lecc;	k	getDataStorage
	m	()Lbuf;	l	getPoiManager
	m	()Ldif;	m	chunkScanner
	m	()Lcqg$d;	n	getLastSpawnState
	m	()V	o	removeTicketsOnClosing
	m	()Leab;	p	getLightEngine
	m	()Lcpb;	q	getLevel
	m	()V	r	clearCache
	m	()Z	s	runDistanceManagerUpdates
	m	()V	t	tickChunks
	f	Laka;	a	chunkMap
	f	Ljava/util/List;	b	CHUNK_STATUSES
	f	Laki;	c	distanceManager
	f	Lakq;	d	level
	f	Ljava/lang/Thread;	e	mainThread
	f	Lakt;	f	lightEngine
	f	Lako$b;	g	mainThreadProcessor
	f	Lecc;	h	dataStorage
	f	J	i	lastInhabitedUpdate
	f	Z	j	spawnEnemies
	f	Z	k	spawnFriendlies
	f	I	l	CACHE_SIZE
	f	[J	m	lastChunkPos
	f	[Ldhk;	n	lastChunkStatus
	f	[Ldhf;	o	lastChunk
	f	Lcqg$d;	p	lastSpawnState
c	ako$a	net/minecraft/server/level/ServerChunkCache$ChunkAndHolder
	m	()Ldhq;	a	chunk
	m	()Lajy;	b	holder
	f	Ldhq;	a	chunk
	f	Lajy;	b	holder
c	ako$b	net/minecraft/server/level/ServerChunkCache$MainThreadExecutor
	m	(Lako;Lcpv;)V	<init>	<init>
		p	2		world
	m	()Z	at	scheduleExecutables
	m	()Ljava/lang/Thread;	au	getRunningThread
	m	(Ljava/lang/Runnable;)V	d	doRunTask
		p	1		task
	m	(Ljava/lang/Runnable;)Z	e	shouldRun
		p	1		task
	m	(Ljava/lang/Runnable;)Ljava/lang/Runnable;	f	wrapRunnable
		p	1		runnable
	m	()Z	x	pollTask
	f	Lako;	a	this$0
c	akp	net/minecraft/server/level/ServerEntity
	m	(Lakq;Lbiq;IZLjava/util/function/Consumer;)V	<init>	<init>
		p	1		world
		p	2		entity
		p	3		tickInterval
		p	4		alwaysUpdateVelocity
		p	5		receiver
	m	()V	a	sendChanges
	m	(Lakr;)V	a	removePairing
		p	1		player
	m	(Lakr;Ljava/util/function/Consumer;)V	a	sendPairingData
		p	1		player
		p	2		sender
	m	(Lbiq;)V	a	lambda$sendChanges$0
		p	0		passenger
	m	(Ljava/util/List;Lbiq;)Z	a	lambda$removedPassengers$1
		p	1		passenger
	m	(Ljava/util/List;Ljava/util/List;)Ljava/util/stream/Stream;	a	removedPassengers
		p	0		passengers
		p	1		lastPassengers
	m	(Lvd;)V	a	broadcastAndSend
		p	1		packet
	m	()V	b	sendDirtyEntityData
	m	(Lakr;)V	b	addPairing
		p	1		player
	f	I	a	FORCED_POS_UPDATE_PERIOD
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	I	c	TOLERANCE_LEVEL_ROTATION
	f	D	d	TOLERANCE_LEVEL_POSITION
	f	I	e	FORCED_TELEPORT_PERIOD
	f	Lakq;	f	level
	f	Lbiq;	g	entity
	f	I	h	updateInterval
	f	Z	i	trackDelta
	f	Ljava/util/function/Consumer;	j	broadcast
	f	Lacy;	k	positionCodec
	f	I	l	yRotp
	f	I	m	xRotp
	f	I	n	yHeadRotp
	f	Lehn;	o	ap
	f	I	p	tickCount
	f	I	q	teleportDelay
	f	Ljava/util/List;	r	lastPassengers
	f	Z	s	wasRiding
	f	Z	t	wasOnGround
	f	Ljava/util/List;	u	trackedDataValues
c	akq	net/minecraft/server/level/ServerLevel
	m	(Lnet/minecraft/server/MinecraftServer;Ljava/util/concurrent/Executor;Lecg$c;Lecl;Laev;Ldit;Lakz;ZJLjava/util/List;ZLbhe;)V	<init>	<init>
		p	1		server
		p	2		workerExecutor
		p	3		session
		p	4		properties
		p	5		worldKey
		p	6		dimensionOptions
		p	7		worldGenerationProgressListener
		p	8		debugWorld
		p	9		seed
		p	11		spawners
		p	12		shouldTickTime
		p	13		randomSequencesState
	m	()J	A	getSeed
	m	()Ldiv;	B	getDragonFight
	m	()Lakq;	C	getLevel
	m	()Ljava/lang/String;	D	getWatchdogStats
	m	(Lgw;)Ljava/util/Optional;	D	findLightningRod
		p	1		pos
	m	()Ldjj;	E	getEntities
	m	(Lgw;)V	E	lambda$onBlockStateChange$11
	m	()Ljava/lang/String;	F	gatherChunkSourceStats
	m	(Lgw;)Lgw;	F	lambda$findLightningRod$6
		p	0		innerPos
	m	()Lcec;	G	enabledFeatures
	m	(Lgw;)Z	G	lambda$findLightningRod$5
		p	1		innerPos
	m	()Lbhe;	H	getRandomSequences
	m	()Leim;	I	getScoreboard
	m	()Ldhj;	J	getChunkSource
	m	()Leiv;	K	getFluidTicks
	m	()Leiv;	L	getBlockTicks
	m	()Lcqn;	a	structureManager
	m	(I)Lbiq;	a	getEntity
		p	1		id
	m	(III)Lhe;	a	getUncachedNoiseBiome
		p	1		biomeX
		p	2		biomeY
		p	3		biomeZ
	m	(IIZ)Z	a	setChunkForced
		p	1		x
		p	2		z
		p	3		forced
	m	(IIZZ)V	a	setWeatherParameters
		p	1		clearDuration
		p	2		rainDuration
		p	3		raining
		p	4		thundering
	m	(ILgw;I)V	a	destroyBlockProgress
		p	1		entityId
		p	2		pos
		p	3		progress
	m	(J)Z	a	shouldTickBlocksAt
		p	1		chunkPos
	m	(Laew;)Lasc;	a	getRandomSequence
		p	1		id
	m	(Lakq;)V	a	makeObsidianPlatform
		p	0		world
	m	(Lakq;Lgw;)V	a	lambda$makeObsidianPlatform$19
		p	1		pos
	m	(Lakr;)V	a	addDuringCommandTeleport
		p	1		player
	m	(Lakr;Lbiq$c;)V	a	removePlayerImmediately
		p	1		player
		p	2		reason
	m	(Lakr;Lit;ZDDDIDDDD)Z	a	sendParticles
		p	1		viewer
		p	2		particle
		p	3		force
		p	4		x
		p	6		y
		p	8		z
		p	10		count
		p	11		deltaX
		p	13		deltaY
		p	15		deltaZ
		p	17		speed
	m	(Lakr;ZDDDLvd;)Z	a	sendParticles
		p	1		player
		p	2		force
		p	3		x
		p	5		y
		p	7		z
		p	9		packet
	m	(Laqh;Lgw;IZ)Lgw;	a	findNearestMapStructure
		p	1		structureTag
		p	2		pos
		p	3		radius
		p	4		skipReferencedStructures
	m	(Lasb;ZZ)V	a	save
		p	1		progressListener
		p	2		flush
		p	3		savingDisabled
	m	(Lbdp;Lbiq;)V	a	lambda$tick$2
		p	2		entity
	m	(Lbiq;)V	a	tickNonPassenger
		p	1		entity
	m	(Lbiq;B)V	a	broadcastEntityEvent
		p	1		entity
		p	2		status
	m	(Lbiq;Lbho;)V	a	broadcastDamageEvent
		p	1		entity
		p	2		damageSource
	m	(Lbiq;Lbho;Lcpo;DDDFZLcpv$a;)Lcpn;	a	explode
		p	1		entity
		p	2		damageSource
		p	3		behavior
		p	4		x
		p	6		y
		p	8		z
		p	10		power
		p	11		createFire
		p	12		explosionSourceType
	m	(Lbiq;Lbiq;)V	a	tickPassenger
		p	1		vehicle
		p	2		passenger
	m	(Lbjg;)Z	a	lambda$findLightningTargetAround$7
		p	1		entity
	m	(Lbuc;Lbiq;Lbjv;)V	a	onReputationEvent
		p	1		interaction
		p	2		entity
		p	3		observer
	m	(Lcbu;DDDLhe;Lape;FFJ)V	a	playSeededSound
		p	1		except
		p	2		x
		p	4		y
		p	6		z
		p	8		sound
		p	9		category
		p	10		volume
		p	11		pitch
		p	12		seed
	m	(Lcbu;ILgw;I)V	a	levelEvent
		p	1		player
		p	2		eventId
		p	3		pos
		p	4		data
	m	(Lcbu;Lbiq;Lhe;Lape;FFJ)V	a	playSeededSound
		p	1		except
		p	2		entity
		p	3		sound
		p	4		category
		p	5		volume
		p	6		pitch
		p	7		seed
	m	(Lcbu;Lgw;)Z	a	mayInteract
		p	1		player
		p	2		pos
	m	(Lcpa;)Z	a	doBlockEvent
		p	1		event
	m	(Lcpc;)Z	a	isNaturalSpawningAllowed
		p	1		pos
	m	(Ldfj;Lgw;Lcsv;Lgw;Z)V	a	neighborChanged
		p	1		state
		p	2		pos
		p	3		sourceBlock
		p	4		sourcePos
		p	5		notify
	m	(Ldhf;)V	a	onStructureStartsAvailable
		p	1		chunk
	m	(Ldhq;)V	a	unload
		p	1		chunk
	m	(Ldhq;I)V	a	tickChunk
		p	1		chunk
		p	2		randomTickSpeed
	m	(Ldiv;)V	a	setDragonFight
		p	1		enderDragonFight
	m	(Ldjh;Ljava/util/function/Predicate;)Ljava/util/List;	a	getEntities
		p	1		filter
		p	2		predicate
	m	(Ldjh;Ljava/util/function/Predicate;Ljava/util/List;)V	a	getEntities
		p	1		filter
		p	2		predicate
		p	3		result
	m	(Ldjh;Ljava/util/function/Predicate;Ljava/util/List;I)V	a	getEntities
		p	1		filter
		p	2		predicate
		p	3		result
		p	4		limit
	m	(Ldjt;Lehn;Ldjt$a;)V	a	gameEvent
		p	1		event
		p	2		emitterPos
		p	3		emitter
	m	(Ldva;)V	a	clearBlockEvents
		p	1		box
	m	(Ldva;Lcpa;)Z	a	lambda$clearBlockEvents$15
		p	1		event
	m	(Lgw;)Lgw;	a	findLightningTargetAround
		p	1		pos
	m	(Lgw;F)V	a	setDefaultSpawnPos
		p	1		pos
		p	2		angle
	m	(Lgw;I)Z	a	isCloseToVillage
		p	1		pos
		p	2		maxDistance
	m	(Lgw;Lcsv;)V	a	updateNeighborsAt
		p	1		pos
		p	2		sourceBlock
	m	(Lgw;Lcsv;II)V	a	blockEvent
		p	1		pos
		p	2		block
		p	3		type
		p	4		data
	m	(Lgw;Lcsv;Lgw;)V	a	neighborChanged
		p	1		pos
		p	2		sourceBlock
		p	3		sourcePos
	m	(Lgw;Lcsv;Lha;)V	a	updateNeighborsAtExceptFromFacing
		p	1		pos
		p	2		sourceBlock
		p	3		direction
	m	(Lgw;Ldfj;Ldfj;)V	a	onBlockStateChange
		p	1		pos
		p	2		oldBlock
		p	3		newBlock
	m	(Lgw;Ldfj;Ldfj;I)V	a	sendBlockUpdated
		p	1		pos
		p	2		oldState
		p	3		newState
		p	4		flags
	m	(Lgw;Leal;)V	a	tickFluid
		p	1		pos
		p	2		fluid
	m	(Lgw;Lhe;)V	a	lambda$onBlockStateChange$14
		p	2		newPoiType
	m	(Lha;Z)F	a	getShade
		p	1		direction
		p	2		shaded
	m	(Lhe;)Z	a	lambda$findLightningRod$4
		p	0		poiType
	m	(Lhw;)Z	a	isVillage
		p	1		sectionPos
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntMap$Entry;)Ljava/lang/String;	a	lambda$getTypeCount$17
	m	(Lit;DDDIDDDD)I	a	sendParticles
		p	1		particle
		p	2		x
		p	4		y
		p	6		z
		p	8		count
		p	9		deltaX
		p	11		deltaY
		p	13		deltaZ
		p	15		speed
	m	(Ljava/io/Writer;)V	a	dumpBlockEntityTickers
		p	1		writer
	m	(Ljava/io/Writer;Ljava/lang/Iterable;)V	a	dumpEntities
		p	0		writer
		p	1		entities
	m	(Ljava/lang/Iterable;Ljava/util/function/Function;)Ljava/lang/String;	a	getTypeCount
		p	0		items
		p	1		classifier
	m	(Ljava/lang/String;)Lebw;	a	getMapData
		p	1		id
	m	(Ljava/lang/String;Lebw;)V	a	setMapData
		p	1		id
		p	2		state
	m	(Ljava/nio/file/Path;)V	a	saveDebugReport
		p	1		path
	m	(Ljava/util/UUID;)Lbiq;	a	getEntity
		p	1		uuid
	m	(Ljava/util/function/BooleanSupplier;)V	a	tick
		p	1		shouldKeepTicking
	m	(Ljava/util/function/Predicate;)Ljava/util/List;	a	getPlayers
		p	1		predicate
	m	(Ljava/util/function/Predicate;I)Ljava/util/List;	a	getPlayers
		p	1		predicate
		p	2		limit
	m	(Ljava/util/function/Predicate;Lgw;III)Lcom/mojang/datafixers/util/Pair;	a	findClosestBiome3d
		p	1		predicate
		p	2		pos
		p	3		radius
		p	4		horizontalBlockCheckInterval
		p	5		verticalBlockCheckInterval
	m	(Ljava/util/function/Predicate;Ljava/util/List;ILbiq;)Laqn$a;	a	lambda$getEntities$10
		p	3		entity
	m	(Ljava/util/stream/Stream;)V	a	addLegacyChunkEntities
		p	1		entities
	m	(Lnet/minecraft/server/MinecraftServer;)Lecc;	a	lambda$new$0
	m	(ZLgw;)V	a	tickIceAndSnow
		p	1		raining
		p	2		pos
	m	(ZZ)V	a	tickCustomSpawners
		p	1		spawnMonsters
		p	2		spawnAnimals
	m	()V	ap	wakeUpAllPlayers
	m	()V	aq	announceSleepStatus
	m	()V	ar	advanceWeatherCycle
	m	()V	as	resetWeatherCycle
	m	()V	at	saveLevelData
	m	()V	au	runBlockEvents
	m	()V	b	tickTime
	m	(I)Lbiq;	b	getEntityOrPart
		p	1		id
	m	(ILgw;I)V	b	globalLevelEvent
		p	1		eventId
		p	2		pos
		p	3		data
	m	(J)V	b	setDayTime
		p	1		timeOfDay
	m	(Lakq;Lgw;)V	b	lambda$makeObsidianPlatform$18
		p	1		pos
	m	(Lakr;)V	b	addDuringPortalTeleport
		p	1		player
	m	(Lbiq;)Z	b	addFreshEntity
		p	1		entity
	m	(Ldhf;)V	b	lambda$onStructureStartsAvailable$20
	m	(Ldhq;)V	b	startTickingChunk
		p	1		chunk
	m	(Lgw;)Z	b	isVillage
		p	1		pos
	m	(Lgw;Lcsv;)V	b	blockUpdated
		p	1		pos
		p	2		block
	m	(Lgw;Lhe;)V	b	lambda$onBlockStateChange$13
	m	(Lhw;)I	b	sectionsToVillage
		p	1		pos
	m	(Ljava/util/stream/Stream;)V	b	addWorldGenChunkEntities
		p	1		entities
	m	()Z	c	isHandlingTick
	m	(J)Z	c	areEntitiesLoaded
		p	1		chunkPos
	m	(Lakr;)V	c	addNewPlayer
		p	1		player
	m	(Lbiq;)Z	c	addWithUUID
		p	1		entity
	m	(Lgw;)Lcdb;	c	getRaidAt
		p	1		pos
	m	(Lgw;Lhe;)V	c	lambda$onBlockStateChange$12
		p	2		oldPoiType
	m	()Z	d	canSleepThroughNights
	m	(J)Z	d	isPositionTickingWithEntitiesLoaded
		p	1		chunkPos
	m	(Lakr;)V	d	addRespawnedPlayer
		p	1		player
	m	(Lbiq;)V	d	addDuringTeleport
		p	1		entity
	m	(Lgw;)Z	d	isRaided
		p	1		pos
	m	(Lgw;Lcsv;)V	d	tickBlock
		p	1		pos
		p	2		block
	m	()V	e	updateSleepingPlayerList
	m	(J)Lbhe;	e	lambda$new$1
	m	(Lakr;)V	e	addPlayer
		p	1		player
	m	(Lbiq;)Z	e	tryAddFreshEntityWithPassengers
		p	1		entity
	m	(Lgw;)Z	e	isPositionEntityTicking
		p	1		pos
	m	()Lafn;	f	getScoreboard
	m	(Lakr;)V	f	lambda$wakeUpAllPlayers$3
		p	0		player
	m	(Lgw;)Z	f	isNaturalSpawningAllowed
		p	1		pos
	m	()V	g	resetEmptyTime
	m	()Ljava/util/List;	h	getDragons
	m	()Lakr;	i	getRandomPlayer
	m	(Lbiq;)Z	i	shouldDiscardEntity
		p	1		entity
	m	()I	j	getLogicalHeight
	m	(Lbiq;)Z	j	addEntity
		p	1		entity
	m	()Lako;	k	getChunkSource
	m	(Lbiq;)Ljava/lang/String;	k	lambda$getWatchdogStats$16
		p	0		entity
	m	()Leiw;	l	getBlockTicks
	m	(Lbiq;)Ljava/lang/String;	l	lambda$tickPassenger$9
	m	()Leiw;	m	getFluidTicks
	m	(Lbiq;)Ljava/lang/String;	m	lambda$tickNonPassenger$8
	m	()Lnet/minecraft/server/MinecraftServer;	n	getServer
	m	()Lebi;	o	getPortalForcer
	m	()Ldzc;	p	getStructureManager
	m	()Lcml;	q	getRecipeManager
	m	()Z	r	noSave
	m	()Lecc;	s	getDataStorage
	m	()I	t	getFreeMapId
	m	()Lit/unimi/dsi/fastutil/longs/LongSet;	u	getForcedChunks
	m	()Ljava/util/List;	v	players
	m	()Lbuf;	w	getPoiManager
	m	()Lcdd;	x	getRaids
	m	()Ljava/lang/Iterable;	y	getAllEntities
	m	()Z	z	isFlat
	f	Lbgd;	D	THUNDER_DELAY
	f	Lorg/slf4j/Logger;	E	LOGGER
	f	I	F	EMPTY_TIME_NO_TICK
	f	I	G	MAX_SCHEDULED_TICKS_PER_TICK
	f	Ljava/util/List;	H	players
	f	Lako;	I	chunkSource
	f	Lnet/minecraft/server/MinecraftServer;	J	server
	f	Lecl;	K	serverLevelData
	f	Ldjg;	L	entityTickList
	f	Ldjl;	M	entityManager
	f	Ldju;	N	gameEventDispatcher
	f	Laoj;	O	sleepStatus
	f	I	P	emptyTime
	f	Lebi;	Q	portalForcer
	f	Leiw;	R	blockTicks
	f	Leiw;	S	fluidTicks
	f	Ljava/util/Set;	T	navigatingMobs
	f	Z	U	isUpdatingNavigations
	f	Lit/unimi/dsi/fastutil/objects/ObjectLinkedOpenHashSet;	V	blockEvents
	f	Ljava/util/List;	W	blockEventsToReschedule
	f	Z	X	handlingTick
	f	Ljava/util/List;	Y	customSpawners
	f	Ldiv;	Z	dragonFight
	f	Lgw;	a	END_SPAWN_POINT
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	aa	dragonParts
	f	Lcqn;	ab	structureManager
	f	Ldvj;	ac	structureCheck
	f	Z	ad	tickTime
	f	Lbhe;	ae	randomSequences
	f	Lbgd;	b	RAIN_DELAY
	f	Lbgd;	c	RAIN_DURATION
	f	Lbgd;	d	THUNDER_DURATION
	f	Z	e	noSave
	f	Lcdd;	f	raids
c	akq$a	net/minecraft/server/level/ServerLevel$EntityCallbacks
	m	(Lbiq;)V	a	onCreated
	m	(Ljava/lang/Object;)V	a	onSectionChange
		p	1		entity
	m	(Lbiq;)V	b	onDestroyed
	m	(Ljava/lang/Object;)V	b	onTrackingEnd
		p	1		entity
	m	(Lbiq;)V	c	onTickingStart
	m	(Ljava/lang/Object;)V	c	onTrackingStart
		p	1		entity
	m	(Lbiq;)V	d	onTickingEnd
		p	1		entity
	m	(Ljava/lang/Object;)V	d	onTickingEnd
		p	1		entity
	m	(Lbiq;)V	e	onTrackingStart
	m	(Ljava/lang/Object;)V	e	onTickingStart
		p	1		entity
	m	(Lbiq;)V	f	onTrackingEnd
	m	(Ljava/lang/Object;)V	f	onDestroyed
		p	1		entity
	m	(Lbiq;)V	g	onSectionChange
	m	(Ljava/lang/Object;)V	g	onCreated
		p	1		entity
	f	Lakq;	a	this$0
c	akr	net/minecraft/server/level/ServerPlayer
	m	(Lnet/minecraft/server/MinecraftServer;Lakq;Lcom/mojang/authlib/GameProfile;Lakf;)V	<init>	<init>
		p	1		server
		p	2		world
		p	3		profile
		p	4		clientOptions
	m	()Z	A	canChatInColor
	m	()Lcbs;	B	getChatVisibility
	m	()I	C	requestedViewDistance
	m	()I	D	getPermissionLevel
	m	()V	E	resetLastActionTime
	m	()Lapj;	F	getStats
	m	()Lapi;	G	getRecipeBook
	m	()V	H	updateInvisibilityStatus
	m	()Lbiq;	I	getCamera
	m	()V	J	processPortalCooldown
	m	()J	K	getLastActionTime
	m	()Ltl;	L	getTabListDisplayName
	m	()Z	M	isChangingDimension
	m	()Z	M_	isSpectator
	m	()V	N	hasChangedDimension
	m	()Lafe;	O	getAdvancements
	m	()Lgw;	P	getRespawnPosition
	m	()F	Q	getRespawnAngle
	m	()Laev;	R	getRespawnDimension
	m	()Z	S	isRespawnForced
	m	()Lhw;	T	getLastSectionPos
	m	()Lake;	U	getChunkTrackingView
	m	()Lalu;	V	getTextFilter
	m	()Z	W	isTextFilteringEnabled
	m	()Z	X	allowsListing
	m	()Ljava/util/Optional;	Y	getWardenSpawnTracker
	m	()Lub;	Z	getChatSession
	m	(DD)V	a	indicateDamage
		p	1		deltaX
		p	3		deltaZ
	m	(DDD)V	a	dismountTo
		p	1		destX
		p	3		destY
		p	5		destZ
	m	(DDDZ)V	a	doCheckFallDamage
		p	1		xDifference
		p	3		yDifference
		p	5		zDifference
		p	7		onGround
	m	(DZLdfj;Lgw;)V	a	checkFallDamage
		p	1		heightDifference
		p	3		onGround
		p	4		state
		p	5		landedPosition
	m	(FFZZ)V	a	setPlayerInput
		p	1		sidewaysSpeed
		p	2		forwardSpeed
		p	3		jumping
		p	4		sneaking
	m	(I)V	a	setExperiencePoints
		p	1		points
	m	(ILcou;IIZZ)V	a	sendMerchantOffers
		p	1		syncId
		p	2		offers
		p	3		levelProgress
		p	4		experience
		p	5		leveled
		p	6		refreshable
	m	(ILeil;)V	a	lambda$awardStat$10
		p	1		score
	m	(Ladz;)V	a	sendServerStatus
		p	1		metadata
	m	(Laev;Lgw;FZZ)V	a	setRespawnPosition
		p	1		dimension
		p	2		pos
		p	3		angle
		p	4		forced
		p	5		sendMessage
	m	(Lake;)V	a	setChunkTrackingView
		p	1		chunkFilter
	m	(Lakf;)V	a	updateOptions
		p	1		clientOptions
	m	(Lakq;)Lebj;	a	findDimensionEntryPoint
		p	1		destination
	m	(Lakq;DDDFF)V	a	teleportTo
		p	1		targetWorld
		p	2		x
		p	4		y
		p	6		z
		p	8		yaw
		p	9		pitch
	m	(Lakq;DDDLjava/util/Set;FF)Z	a	teleportTo
		p	1		world
		p	2		destX
		p	4		destY
		p	6		destZ
		p	8		flags
		p	9		yaw
		p	10		pitch
	m	(Lakq;Lgw;)V	a	createEndPlatform
		p	1		world
		p	2		centerPos
	m	(Lakq;Lgw;ZLdha;)Ljava/util/Optional;	a	getExitPortal
		p	1		destWorld
		p	2		destPos
		p	3		destIsNether
		p	4		worldBorder
	m	(Lakr;)Z	a	broadcastToPlayer
		p	1		spectator
	m	(Lakr;Z)V	a	restoreFrom
		p	1		oldPlayer
		p	2		alive
	m	(Lapc;Lape;FF)V	a	playNotifySound
		p	1		event
		p	2		category
		p	3		volume
		p	4		pitch
	m	(Lapk;)V	a	resetStat
		p	1		stat
	m	(Lapk;I)V	a	awardStat
		p	1		stat
		p	2		amount
	m	(Lasx;)V	a	lambda$startSleepInBed$9
		p	1		unit
	m	(Lbgx;)V	a	swing
		p	1		hand
	m	(Lbhb;)Ljava/util/OptionalInt;	a	openMenu
		p	1		factory
	m	(Lbho;)V	a	die
		p	1		damageSource
	m	(Lbho;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbid;)V	a	onEffectRemoved
		p	1		effect
	m	(Lbid;Lbiq;)V	a	onEffectAdded
		p	1		effect
		p	2		source
	m	(Lbid;ZLbiq;)V	a	onEffectUpdated
		p	1		effect
		p	2		reapplyEffect
		p	3		source
	m	(Lbiq;)V	a	crit
		p	1		target
	m	(Lbiq;I)V	a	take
		p	1		item
		p	2		count
	m	(Lbiq;ILbho;)V	a	awardKillScore
		p	1		entityKilled
		p	2		score
		p	3		damageSource
	m	(Lbiq;Z)Z	a	startRiding
		p	1		entity
		p	2		force
	m	(Lbji;)V	a	lambda$tellNeutralMobsThatIDied$7
		p	1		entity
	m	(Lbwq;Lbgr;)V	a	openHorseInventory
		p	1		horse
		p	2		inventory
	m	(Lbyn;)V	a	onItemPickup
		p	1		item
	m	(Lbzi;)Z	a	lambda$startSleepInBed$8
		p	1		entity
	m	(Lcba;)V	a	lambda$readAdditionalSaveData$0
		p	1		sculkShriekerWarningManager
	m	(Lcbt;I)V	a	lambda$drop$12
		p	2		index
	m	(Lcbu;)Z	a	canHarmPlayer
		p	1		player
	m	(Lcel;)V	a	initMenu
		p	1		screenHandler
	m	(Lcjf;)V	a	updateUsingItem
		p	1		stack
	m	(Lcjf;I)V	a	onEnchantmentPerformed
		p	1		enchantedItem
		p	2		experienceLevels
	m	(Lcjf;Lbgx;)V	a	openItemGui
		p	1		book
		p	2		hand
	m	(Lcjf;ZZ)Lbyn;	a	drop
		p	1		stack
		p	2		throwRandomly
		p	3		retainOwnership
	m	(Lcmk;Ljava/util/List;)V	a	triggerRecipeCrafted
		p	1		recipe
		p	2		ingredients
	m	(Lcps;)Z	a	setGameMode
		p	1		gameMode
	m	(Lcpv;Lgw;)Z	a	mayInteract
		p	1		world
		p	2		pos
	m	(Lddf;)V	a	openCommandBlock
		p	1		commandBlock
	m	(Lded;Z)V	a	openTextEdit
		p	1		sign
		p	2		front
	m	(Ldfj;)V	a	onInsideBlock
		p	1		state
	m	(Led$a;Lbiq;Led$a;)V	a	lookAt
		p	1		anchorPoint
		p	2		targetEntity
		p	3		targetAnchor
	m	(Led$a;Lehn;)V	a	lookAt
		p	1		anchorPoint
		p	2		target
	m	(Leip;I)V	a	updateScoreForCriteria
		p	1		criterion
		p	2		score
	m	(Lgw;)Lcom/mojang/datafixers/util/Either;	a	startSleepInBed
		p	1		pos
	m	(Lgw;Lha;)Z	a	bedInRange
		p	1		pos
		p	2		direction
	m	(Lhw;)V	a	setLastSectionPos
		p	1		section
	m	(Ljava/lang/String;Ljava/lang/String;[Leip;)V	a	handleTeamKill
		p	1		playerName
		p	2		team
		p	3		criterions
	m	(Ljava/util/Collection;)I	a	awardRecipes
		p	1		recipes
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lqw;Ljava/lang/String;)Lcps;	a	readPlayerMode
		p	0		nbt
		p	1		key
	m	(Lqw;Lrq;)V	a	lambda$addAdditionalSaveData$2
		p	1		encoded
	m	(Ltl;)V	a	sendSystemMessage
		p	1		message
	m	(Ltl;Luh;)Luh;	a	lambda$die$4
		p	1		style
	m	(Ltl;Z)V	a	displayClientMessage
		p	1		message
		p	2		overlay
	m	(Ltz;ZLth$a;)V	a	sendChatMessage
		p	1		message
		p	2		filterMaskEnabled
		p	3		params
	m	(Lub;)V	a	setChatSession
		p	1		session
	m	(Z)Z	a	drop
		p	1		entireStack
	m	(ZZ)V	a	stopSleepInBed
		p	1		skipSleepTimer
		p	2		updateSleepingPlayers
	m	([Laew;)V	a	awardRecipesByKey
		p	1		ids
	m	()V	aa	stopRiding
	m	()V	ad_	completeUsingItem
	m	(DDD)V	b	teleportTo
		p	1		destX
		p	3		destY
		p	5		destZ
	m	(I)V	b	setExperienceLevels
		p	1		level
	m	(ILeil;)V	b	lambda$updateScoreForCriteria$3
		p	1		innerScore
	m	(Lakq;)Lbiq;	b	changeDimension
		p	1		destination
	m	(Lakr;)Z	b	shouldFilterMessageTo
		p	1		player
	m	(Lbho;)Z	b	isInvulnerableTo
		p	1		damageSource
	m	(Lbiq;)V	b	magicCrit
		p	1		target
	m	(Lbji;)Z	b	lambda$tellNeutralMobsThatIDied$6
		p	0		entity
	m	(Lcps;)Lcps;	b	calculateGameModeForNewPlayer
		p	1		backupGameMode
	m	(Lgw;)V	b	startSleeping
		p	1		pos
	m	(Lgw;Lha;)Z	b	bedBlocked
		p	1		pos
		p	2		direction
	m	(Ljava/util/Collection;)I	b	resetRecipes
		p	1		recipes
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lqw;Lrq;)V	b	lambda$addAdditionalSaveData$1
		p	1		encoded
	m	(Ltl;Z)V	b	sendSystemMessage
		p	1		message
		p	2		overlay
	m	(DDD)V	c	teleportRelative
		p	1		offsetX
		p	3		offsetY
		p	5		offsetZ
	m	(I)V	c	giveExperienceLevels
		p	1		levels
	m	(Lakq;)V	c	setServerLevel
		p	1		world
	m	(Lbiq;)V	c	setCamera
		p	1		entity
	m	(Lgw;)V	c	onChangedBlock
		p	1		pos
	m	(Lqw;)V	c	loadGameTypes
		p	1		nbt
	m	(Ltl;)Lvd;	c	lambda$sendSystemMessage$11
	m	(DDD)V	d	moveTo
		p	1		x
		p	3		y
		p	5		z
	m	(I)V	d	giveExperiencePoints
		p	1		experience
	m	(Lakq;)Laaz;	d	createCommonSpawnInfo
		p	1		world
	m	(Lbiq;)V	d	attack
		p	1		target
	m	(Ltl;)Lvd;	d	lambda$die$5
	m	(Lakq;)V	e	fudgeSpawnLocation
		p	1		world
	m	()V	e_	onEnterCombat
	m	()Z	f	isCreative
	m	(Lakq;)V	f	triggerDimensionChangeTriggers
		p	1		origin
	m	()V	f_	onLeaveCombat
	m	()V	gr	tellNeutralMobsThatIDied
	m	()Z	gs	isPvpAllowed
	m	()V	gt	nextContainerCounter
	m	()Z	gu	acceptsChatMessages
	m	()V	h	initInventoryMenu
	m	(Lgw;)Z	i	isReachableBedBlock
		p	1		pos
	m	()Lcjb;	k	createItemCooldowns
	m	(Lqw;)V	k	storeGameTypes
		p	1		nbt
	m	()V	l	tick
	m	()V	m	doTick
	m	()V	n	resetFallDistance
	m	()V	o	trackStartFallingPosition
	m	()V	p	trackEnteredOrExitedLavaOnVehicle
	m	()V	q	closeContainer
	m	()V	r	doCloseContainer
	m	()V	s	disconnect
	m	()Z	t	hasDisconnected
	m	()V	u	resetSentInfo
	m	(I)I	u	getCoprime
		p	1		horizontalSpawnArea
	m	(Z)Z	v	acceptsSystemMessages
		p	1		overlay
	m	()V	w	onUpdateAbilities
	m	()Lakq;	x	serverLevel
	m	()Ljava/lang/String;	y	getIpAddress
	m	()Lakf;	z	clientInformation
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	I	cA	spawnInvulnerableTime
	f	Lcbs;	cB	chatVisibility
	f	Z	cC	canChatColor
	f	J	cD	lastActionTime
	f	Lbiq;	cE	camera
	f	Z	cF	isChangingDimension
	f	Z	cG	seenCredits
	f	Lapi;	cH	recipeBook
	f	Lehn;	cI	levitationStartPos
	f	I	cJ	levitationStartTime
	f	Z	cK	disconnected
	f	I	cL	requestedViewDistance
	f	Lalp;	c	connection
	f	Ljava/lang/String;	cM	language
	f	Lehn;	cN	startingToFallPosition
	f	Lehn;	cO	enteredNetherPosition
	f	Lehn;	cP	enteredLavaOnVehiclePosition
	f	Lhw;	cQ	lastSectionPos
	f	Lake;	cR	chunkTrackingView
	f	Laev;	cS	respawnDimension
	f	Lgw;	cT	respawnPosition
	f	Z	cU	respawnForced
	f	F	cV	respawnAngle
	f	Lalu;	cW	textFilter
	f	Z	cX	textFilteringEnabled
	f	Z	cY	allowsListing
	f	Lcba;	cZ	wardenSpawnTracker
	f	I	cm	NEUTRAL_MOB_DEATH_NOTIFICATION_RADII_XZ
	f	I	cn	NEUTRAL_MOB_DEATH_NOTIFICATION_RADII_Y
	f	Lafe;	co	advancements
	f	Lapj;	cp	stats
	f	F	cq	lastRecordedHealthAndAbsorption
	f	I	cr	lastRecordedFoodLevel
	f	I	cs	lastRecordedAirLevel
	f	I	ct	lastRecordedArmor
	f	I	cu	lastRecordedLevel
	f	I	cv	lastRecordedExperience
	f	F	cw	lastSentHealth
	f	I	cx	lastSentFood
	f	Z	cy	lastFoodSaturationZero
	f	I	cz	lastSentExp
	f	Lnet/minecraft/server/MinecraftServer;	d	server
	f	Lcey;	da	containerSynchronizer
	f	Lcex;	db	containerListener
	f	Lub;	dc	chatSession
	f	I	dd	containerCounter
	f	Laks;	e	gameMode
	f	Z	f	wonGame
c	akr$1	net/minecraft/server/level/ServerPlayer$1
	m	(Lcel;II)V	a	sendDataChange
		p	1		handler
		p	2		property
		p	3		value
	m	(Lcel;ILcjf;)V	a	sendSlotChange
		p	1		handler
		p	2		slot
		p	3		stack
	m	(Lcel;Lcjf;)V	a	sendCarriedChange
		p	1		handler
		p	2		stack
	m	(Lcel;Lhn;Lcjf;[I)V	a	sendInitialData
		p	1		handler
		p	2		stacks
		p	3		cursorStack
		p	4		properties
	m	(Lcel;II)V	b	broadcastDataValue
		p	1		handler
		p	2		property
		p	3		value
	f	Lakr;	a	this$0
c	akr$2	net/minecraft/server/level/ServerPlayer$2
	m	(Lcel;II)V	a	dataChanged
		p	1		handler
		p	2		property
		p	3		value
	m	(Lcel;ILcjf;)V	a	slotChanged
		p	1		handler
		p	2		slotId
		p	3		stack
	f	Lakr;	a	this$0
c	aks	net/minecraft/server/level/ServerPlayerGameMode
	m	(Lakr;)V	<init>	<init>
		p	1		player
	m	()V	a	tick
	m	(Lakq;)V	a	setLevel
		p	1		world
	m	(Lakr;Lcpv;Lcjf;Lbgx;)Lbgy;	a	useItem
		p	1		player
		p	2		world
		p	3		stack
		p	4		hand
	m	(Lakr;Lcpv;Lcjf;Lbgx;Lehj;)Lbgy;	a	useItemOn
		p	1		player
		p	2		world
		p	3		stack
		p	4		hand
		p	5		hitResult
	m	(Lcps;)Z	a	changeGameModeForPlayer
		p	1		gameMode
	m	(Lcps;Lcps;)V	a	setGameModeForPlayer
		p	1		gameMode
		p	2		previousGameMode
	m	(Ldfj;Lgw;I)F	a	incrementDestroyProgress
		p	1		state
		p	2		pos
		p	3		failedStartMiningTime
	m	(Lgw;)Z	a	destroyBlock
		p	1		pos
	m	(Lgw;ILjava/lang/String;)V	a	destroyAndAck
		p	1		pos
		p	2		sequence
		p	3		reason
	m	(Lgw;Lace$a;Lha;II)V	a	handleBlockBreakAction
		p	1		pos
		p	2		action
		p	3		direction
		p	4		worldHeight
		p	5		sequence
	m	(Lgw;ZILjava/lang/String;)V	a	debugLogging
		p	1		pos
		p	2		success
		p	3		sequence
		p	4		reason
	m	()Lcps;	b	getGameModeForPlayer
	m	()Lcps;	c	getPreviousGameModeForPlayer
	m	()Z	d	isSurvival
	m	()Z	e	isCreative
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lcps;	b	gameModeForPlayer
	f	Lakq;	c	level
	f	Lakr;	d	player
	f	Lcps;	e	previousGameModeForPlayer
	f	Z	f	isDestroyingBlock
	f	I	g	destroyProgressStart
	f	Lgw;	h	destroyPos
	f	I	i	gameTicks
	f	Z	j	hasDelayedDestroy
	f	Lgw;	k	delayedDestroyPos
	f	I	l	delayedTickStart
	f	I	m	lastSentState
c	akt	net/minecraft/server/level/ThreadedLevelLightEngine
	m	(Ldht;Laka;ZLbfr;Lbfq;)V	<init>	<init>
		p	1		chunkProvider
		p	2		chunkStorage
		p	3		hasBlockLight
		p	4		processor
		p	5		executor
	m	()I	a	runLightUpdates
	m	(II)Ljava/util/concurrent/CompletableFuture;	a	waitForPendingTasks
		p	1		x
		p	2		z
	m	(IILakt$a;Ljava/lang/Runnable;)V	a	addTask
		p	1		x
		p	2		z
		p	3		stage
		p	4		task
	m	(IILjava/lang/Runnable;)V	a	lambda$waitForPendingTasks$29
		p	3		callback
	m	(IILjava/util/function/IntSupplier;Lakt$a;Ljava/lang/Runnable;)V	a	addTask
		p	1		x
		p	2		z
		p	3		completedLevelSupplier
		p	4		stage
		p	5		task
	m	(Lakt$a;Ljava/lang/Runnable;)V	a	lambda$addTask$15
	m	(Lcpc;)V	a	updateChunkStatus
		p	1		pos
	m	(Lcpc;Ljava/lang/Runnable;)V	a	lambda$lightChunk$26
		p	2		task
	m	(Lcpc;Z)V	a	setLightEnabled
		p	1		pos
		p	2		retainData
	m	(Lcpc;ZLdhf;)Ldhf;	a	lambda$initializeLight$21
	m	(Lcqe;Lhw;Ldhl;)V	a	queueSectionData
		p	1		lightType
		p	2		pos
		p	3		nibbles
	m	(Ldhf;Lcpc;)Ldhf;	a	lambda$lightChunk$25
	m	(Ldhf;Z)Ljava/util/concurrent/CompletableFuture;	a	initializeLight
		p	1		chunk
	m	(Lgw;)V	a	checkBlock
		p	1		pos
	m	(Lhw;Z)V	a	updateSectionStatus
		p	1		pos
		p	2		notReady
	m	(ZLcpc;)V	a	lambda$lightChunk$23
	m	()V	b	tryScheduleUpdate
	m	(Lcpc;)V	b	propagateLightSources
		p	1		chunkPos
	m	(Lcpc;Ljava/lang/Runnable;)V	b	lambda$initializeLight$22
		p	2		task
	m	(Lcpc;Z)V	b	retainData
		p	1		pos
		p	2		retainData
	m	(Lcqe;Lhw;Ldhl;)V	b	lambda$queueSectionData$13
	m	(Ldhf;Lcpc;)V	b	lambda$initializeLight$19
	m	(Ldhf;Z)Ljava/util/concurrent/CompletableFuture;	b	lightChunk
		p	1		chunk
		p	2		excludeBlocks
	m	(Lgw;)Ljava/lang/String;	b	lambda$checkBlock$1
	m	(Lhw;)Ljava/lang/String;	b	lambda$queueSectionData$14
	m	(Lhw;Z)Ljava/lang/String;	b	lambda$updateSectionStatus$7
	m	(Lcpc;)Ljava/lang/String;	c	lambda$initializeLight$20
	m	(Lcpc;Z)Ljava/lang/String;	c	lambda$lightChunk$24
	m	(Lgw;)V	c	lambda$checkBlock$0
	m	(Lhw;Z)V	c	lambda$updateSectionStatus$6
	m	(Lcpc;)Ljava/lang/String;	d	lambda$retainData$18
	m	(Lcpc;Z)V	d	lambda$retainData$17
	m	(Lcpc;)Ljava/lang/String;	e	lambda$propagateLightSources$9
	m	(Lcpc;Z)Ljava/lang/String;	e	lambda$setLightEnabled$11
	m	()V	f	runUpdate
	m	(Lcpc;)V	f	lambda$propagateLightSources$8
	m	(Lcpc;Z)V	f	lambda$setLightEnabled$10
	m	()V	g	lambda$waitForPendingTasks$28
	m	(Lcpc;)Ljava/lang/String;	g	lambda$updateChunkStatus$4
	m	()V	h	lambda$tryScheduleUpdate$27
	m	(Lcpc;)V	h	lambda$updateChunkStatus$3
	m	()I	i	lambda$retainData$16
	m	()I	j	lambda$queueSectionData$12
	m	()I	k	lambda$updateSectionStatus$5
	m	()I	l	lambda$updateChunkStatus$2
	f	I	a	DEFAULT_BATCH_SIZE
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	Lbfr;	e	taskMailbox
	f	Lit/unimi/dsi/fastutil/objects/ObjectList;	f	lightTasks
	f	Laka;	g	chunkMap
	f	Lbfq;	h	sorterMailbox
	f	I	i	taskPerBatch
	f	Ljava/util/concurrent/atomic/AtomicBoolean;	j	scheduled
c	akt$a	net/minecraft/server/level/ThreadedLevelLightEngine$TaskType
	m	()[Lakt$a;	a	$values
	f	Lakt$a;	a	PRE_UPDATE
	f	Lakt$a;	b	POST_UPDATE
	f	[Lakt$a;	c	$VALUES
c	aku	net/minecraft/server/level/Ticket
	m	(Lakv;ILjava/lang/Object;)V	<init>	<init>
		p	1		type
		p	2		level
		p	3		argument
	m	()Lakv;	a	getType
	m	(J)V	a	setCreatedTick
		p	1		tickCreated
	m	(Laku;)I	a	compareTo
	m	()I	b	getTicketLevel
	m	(J)Z	b	timedOut
		p	1		currentTick
	f	Lakv;	a	type
	f	I	b	ticketLevel
	f	Ljava/lang/Object;	c	key
	f	J	d	createdTick
c	akv	net/minecraft/server/level/TicketType
	m	(Ljava/lang/String;Ljava/util/Comparator;J)V	<init>	<init>
		p	1		name
		p	2		argumentComparator
		p	3		expiryTicks
	m	()Ljava/util/Comparator;	a	getComparator
	m	(Lasx;Lasx;)I	a	lambda$static$1
		p	0		a
		p	1		b
	m	(Ljava/lang/String;Ljava/util/Comparator;)Lakv;	a	create
		p	0		name
		p	1		argumentComparator
	m	(Ljava/lang/String;Ljava/util/Comparator;I)Lakv;	a	create
		p	0		name
		p	1		argumentComparator
		p	2		expiryTicks
	m	()J	b	timeout
	m	(Lasx;Lasx;)I	b	lambda$static$0
		p	0		a
		p	1		b
	f	Lakv;	a	START
	f	Lakv;	b	DRAGON
	f	Lakv;	c	PLAYER
	f	Lakv;	d	FORCED
	f	Lakv;	e	LIGHT
	f	Lakv;	f	PORTAL
	f	Lakv;	g	POST_TELEPORT
	f	Lakv;	h	UNKNOWN
	f	Ljava/lang/String;	i	name
	f	Ljava/util/Comparator;	j	comparator
	f	J	k	timeout
c	akw	net/minecraft/server/level/TickingTracker
	m	()V	a	runAllUpdates
	m	(I)V	a	replacePlayerTicketsLevel
		p	1		level
	m	(JI)V	a	setLevel
		p	1		id
		p	3		level
	m	(JLaku;)V	a	addTicket
		p	1		pos
		p	3		ticket
	m	(Lakv;Lcpc;ILjava/lang/Object;)V	a	addTicket
		p	1		type
		p	2		pos
		p	3		level
		p	4		argument
	m	(Lasm;)I	a	getTicketLevelAt
		p	1		ticket
	m	(Lcpc;)I	a	getLevel
		p	1		pos
	m	(J)I	b	getLevelFromSource
		p	1		id
	m	(JLaku;)V	b	removeTicket
		p	1		pos
		p	3		ticket
	m	(Lakv;Lcpc;ILjava/lang/Object;)V	b	removeTicket
		p	1		type
		p	2		pos
		p	3		level
		p	4		argument
	m	(J)I	c	getLevel
		p	1		id
	m	(J)Ljava/lang/String;	d	getTicketDebugString
		p	1		pos
	m	(J)Lasm;	g	getTickets
		p	1		pos
	m	(J)Lasm;	h	lambda$getTickets$0
		p	0		p
	f	I	a	MAX_LEVEL
	f	Lit/unimi/dsi/fastutil/longs/Long2ByteMap;	b	chunks
	f	I	c	INITIAL_TICKET_LIST_CAPACITY
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap;	d	tickets
c	akx	net/minecraft/server/level/WorldGenRegion
	m	(Lakq;Ljava/util/List;Ldhk;I)V	<init>	<init>
		p	1		world
		p	2		chunks
		p	3		status
		p	4		placementRadius
	m	()J	A	getSeed
	m	()I	A_	getSkyDarken
	m	()Ldha;	B_	getWorldBorder
	m	()Lakq;	C	getLevel
	m	()Ldis;	C_	dimensionType
	m	()Lasc;	D_	getRandom
	m	()Lcqv;	E_	getBiomeManager
	m	()J	F_	nextSubTickCount
	m	()Lcec;	G	enabledFeatures
	m	()Lhr;	G_	registryAccess
	m	()I	H_	getMinBuildHeight
	m	()I	I_	getHeight
	m	()Ldhj;	J	getChunkSource
	m	()Leiv;	K	getFluidTicks
	m	()Leiv;	L	getBlockTicks
	m	()Lcpc;	a	getCenter
	m	(DDDDLjava/util/function/Predicate;)Lcbu;	a	getNearestPlayer
		p	1		x
		p	3		y
		p	5		z
		p	7		maxDistance
		p	9		targetPredicate
	m	(II)Ldhf;	a	getChunk
		p	1		chunkX
		p	2		chunkZ
	m	(III)Lhe;	a	getUncachedNoiseBiome
		p	1		biomeX
		p	2		biomeY
		p	3		biomeZ
	m	(IILdhk;Z)Ldhf;	a	getChunk
		p	1		chunkX
		p	2		chunkZ
		p	3		leastStatus
		p	4		create
	m	(Lbiq;Lehi;Ljava/util/function/Predicate;)Ljava/util/List;	a	getEntities
		p	1		except
		p	2		box
		p	3		predicate
	m	(Lcbu;ILgw;I)V	a	levelEvent
		p	1		player
		p	2		eventId
		p	3		pos
		p	4		data
	m	(Lcbu;Lgw;Lapc;Lape;FF)V	a	playSound
		p	1		except
		p	2		pos
		p	3		sound
		p	4		category
		p	5		volume
		p	6		pitch
	m	(Lcpc;I)Z	a	isOldChunkAround
		p	1		chunkPos
		p	2		checkRadius
	m	(Ldjh;Lehi;Ljava/util/function/Predicate;)Ljava/util/List;	a	getEntities
		p	1		filter
		p	2		box
		p	3		predicate
	m	(Ldjt;Lehn;Ldjt$a;)V	a	gameEvent
		p	1		event
		p	2		emitterPos
		p	3		emitter
	m	(Ldks$a;II)I	a	getHeight
		p	1		heightmap
		p	2		x
		p	3		z
	m	(Lgw;Ldfj;II)Z	a	setBlock
		p	1		pos
		p	2		state
		p	3		flags
		p	4		maxUpdateDepth
	m	(Lgw;Ljava/util/function/Predicate;)Z	a	isStateAtPosition
		p	1		pos
		p	2		state
	m	(Lgw;Z)Z	a	removeBlock
		p	1		pos
		p	2		move
	m	(Lgw;ZLbiq;I)Z	a	destroyBlock
		p	1		pos
		p	2		drop
		p	3		breakingEntity
		p	4		maxUpdateDepth
	m	(Lha;Z)F	a	getShade
		p	1		direction
		p	2		shaded
	m	(Lit;DDDDDD)V	a	addParticle
		p	1		parameters
		p	2		x
		p	4		y
		p	6		z
		p	8		velocityX
		p	10		velocityY
		p	12		velocityZ
	m	(Ljava/util/function/Supplier;)V	a	setCurrentlyGenerating
		p	1		structureName
	m	(Lgw;)Ldfj;	a_	getBlockState
		p	1		pos
	m	(II)Z	b	hasChunk
		p	1		chunkX
		p	2		chunkZ
	m	(Lbiq;)Z	b	addFreshEntity
		p	1		entity
	m	(Lgw;Ljava/util/function/Predicate;)Z	b	isFluidAtPosition
		p	1		pos
		p	2		state
	m	(Lgw;)Leam;	b_	getFluidState
		p	1		pos
	m	(Lgw;)Ldcv;	c_	getBlockEntity
		p	1		pos
	m	(Lgw;)Lbgw;	d_	getCurrentDifficultyAt
		p	1		pos
	m	(Lgw;)V	f	markPosForPostprocessing
		p	1		pos
	m	(Lgw;)Z	f_	ensureCanWrite
		p	1		pos
	m	(Lgw;)Lejc;	j	lambda$new$1
		p	1		pos
	m	(Lgw;)Lejc;	k	lambda$new$0
		p	1		pos
	m	()Lnet/minecraft/server/MinecraftServer;	n	getServer
	m	()Ljava/util/List;	v	players
	m	()Z	w_	isClientSide
	m	()Leab;	x_	getLightEngine
	m	()I	y_	getSeaLevel
	m	()Lecd;	z_	getLevelData
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/List;	b	cache
	f	Ldhf;	c	center
	f	I	d	size
	f	Lakq;	e	level
	f	J	f	seed
	f	Lecd;	g	levelData
	f	Lasc;	h	random
	f	Ldis;	i	dimensionType
	f	Leje;	j	blockTicks
	f	Leje;	k	fluidTicks
	f	Lcqv;	l	biomeManager
	f	Lcpc;	m	firstPos
	f	Lcpc;	n	lastPos
	f	Lcqn;	o	structureManager
	f	Ldhk;	p	generatingStatus
	f	I	q	writeRadiusCutoff
	f	Ljava/util/function/Supplier;	r	currentlyGenerating
	f	Ljava/util/concurrent/atomic/AtomicLong;	s	subTickCount
	f	Laew;	t	WORLDGEN_REGION_RANDOM
c	aky	net/minecraft/server/level/package-info
c	akz	net/minecraft/server/level/progress/ChunkProgressListener
	m	()V	a	start
	m	(Lcpc;)V	a	updateSpawnPos
		p	1		spawnPos
	m	(Lcpc;Ldhk;)V	a	onStatusChange
		p	1		pos
		p	2		status
	m	()V	b	stop
c	ala	net/minecraft/server/level/progress/ChunkProgressListenerFactory
	m	(I)Lakz;	create	create
		p	1		radius
c	alb	net/minecraft/server/level/progress/LoggerChunkProgressListener
	m	(I)V	<init>	<init>
		p	1		radius
	m	()V	a	start
	m	(Lcpc;)V	a	updateSpawnPos
		p	1		spawnPos
	m	(Lcpc;Ldhk;)V	a	onStatusChange
		p	1		pos
		p	2		status
	m	()V	b	stop
	m	()I	c	getProgress
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	I	b	maxCount
	f	I	c	count
	f	J	d	startTime
	f	J	e	nextTickTime
c	alc	net/minecraft/server/level/progress/ProcessorChunkProgressListener
	m	(Lakz;Ljava/util/concurrent/Executor;)V	<init>	<init>
		p	1		progressListener
		p	2		executor
	m	()V	a	start
	m	(Lakz;Ljava/util/concurrent/Executor;)Lalc;	a	createStarted
		p	0		progressListener
		p	1		executor
	m	(Lcpc;)V	a	updateSpawnPos
		p	1		spawnPos
	m	(Lcpc;Ldhk;)V	a	onStatusChange
		p	1		pos
		p	2		status
	m	()V	b	stop
	m	(Lcpc;)V	b	lambda$updateSpawnPos$0
	m	(Lcpc;Ldhk;)V	b	lambda$onStatusChange$1
	f	Lakz;	a	delegate
	f	Lbfr;	b	mailbox
c	ald	net/minecraft/server/level/progress/StoringChunkProgressListener
	m	(I)V	<init>	<init>
		p	1		radius
	m	()V	a	start
	m	(II)Ldhk;	a	getStatus
		p	1		x
		p	2		z
	m	(Lcpc;)V	a	updateSpawnPos
		p	1		spawnPos
	m	(Lcpc;Ldhk;)V	a	onStatusChange
		p	1		pos
		p	2		status
	m	()V	b	stop
	m	()I	c	getFullDiameter
	m	()I	d	getDiameter
	m	()I	e	getProgress
	f	Lalb;	a	delegate
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap;	b	statuses
	f	Lcpc;	c	spawnPos
	f	I	d	fullDiameter
	f	I	e	radius
	f	I	f	diameter
	f	Z	g	started
c	ale	net/minecraft/server/level/progress/package-info
c	alf	net/minecraft/server/network/CommonListenerCookie
	m	()Lcom/mojang/authlib/GameProfile;	a	gameProfile
	m	(Lcom/mojang/authlib/GameProfile;)Lalf;	a	createInitial
		p	0		profile
	m	()I	b	latency
	m	()Lakf;	c	clientInformation
	f	Lcom/mojang/authlib/GameProfile;	a	gameProfile
	f	I	b	latency
	f	Lakf;	c	clientInformation
c	alg	net/minecraft/server/network/ConfigurationTask
	m	()Lalg$a;	a	type
	m	(Ljava/util/function/Consumer;)V	a	start
		p	1		sender
c	alg$a	net/minecraft/server/network/ConfigurationTask$Type
	m	()Ljava/lang/String;	a	id
	f	Ljava/lang/String;	a	id
c	alh	net/minecraft/server/network/FilteredText
	m	()Ljava/lang/String;	a	filtered
	m	(Ljava/lang/String;)Lalh;	a	passThrough
		p	0		raw
	m	()Ljava/lang/String;	b	filteredOrEmpty
	m	(Ljava/lang/String;)Lalh;	b	fullyFiltered
		p	0		raw
	m	()Z	c	isFiltered
	m	()Ljava/lang/String;	d	raw
	m	()Lto;	e	mask
	f	Lalh;	a	EMPTY
	f	Ljava/lang/String;	b	raw
	f	Lto;	c	mask
c	ali	net/minecraft/server/network/LegacyProtocolUtils
	m	(Lio/netty/buffer/ByteBuf;)Ljava/lang/String;	a	readLegacyString
		p	0		buf
	m	(Lio/netty/buffer/ByteBuf;Ljava/lang/String;)V	a	writeLegacyString
		p	0		buf
		p	1		string
	f	I	a	CUSTOM_PAYLOAD_PACKET_ID
	f	Ljava/lang/String;	b	CUSTOM_PAYLOAD_PACKET_PING_CHANNEL
	f	I	c	GET_INFO_PACKET_ID
	f	I	d	GET_INFO_PACKET_VERSION_1
	f	I	e	DISCONNECT_PACKET_ID
	f	I	f	FAKE_PROTOCOL_VERSION
c	alj	net/minecraft/server/network/LegacyQueryHandler
	m	(Lafl;)V	<init>	<init>
		p	1		server
	m	(Lafl;)Ljava/lang/String;	a	createVersion0Response
		p	0		server
	m	(Lio/netty/buffer/ByteBuf;)Z	a	readCustomPayloadPacket
		p	0		buf
	m	(Lio/netty/buffer/ByteBufAllocator;Ljava/lang/String;)Lio/netty/buffer/ByteBuf;	a	createLegacyDisconnectPacket
		p	0		allocator
		p	1		string
	m	(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;)V	a	sendFlushAndClose
		p	0		context
		p	1		buf
	m	(Lafl;)Ljava/lang/String;	b	createVersion1Response
		p	0		server
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lafl;	b	server
c	alk	net/minecraft/server/network/MemoryServerHandshakePacketListenerImpl
	m	(Lnet/minecraft/server/MinecraftServer;Lsm;)V	<init>	<init>
		p	1		server
		p	2		connection
	m	(Ladb;)V	a	handleIntention
		p	1		packet
	m	(Ltl;)V	a	onDisconnect
		p	1		reason
	m	()Z	c	isAcceptingMessages
	f	Lnet/minecraft/server/MinecraftServer;	a	server
	f	Lsm;	b	connection
c	all	net/minecraft/server/network/PlayerChunkSender
	m	(Z)V	<init>	<init>
		p	1		local
	m	(F)V	a	onChunkBatchReceivedByClient
		p	1		desiredBatchSize
	m	(J)Z	a	isPending
		p	1		chunkPos
	m	(Laka;Lcpc;)Ljava/util/List;	a	collectChunksToSend
		p	1		chunkStorage
		p	2		playerPos
	m	(Lakr;)V	a	sendNextChunks
		p	1		player
	m	(Lakr;Lcpc;)V	a	dropChunk
		p	1		player
		p	2		pos
	m	(Lalp;Lakq;Ldhq;)V	a	sendChunk
		p	0		handler
		p	1		world
		p	2		chunk
	m	(Lcpc;Ldhq;)I	a	lambda$collectChunksToSend$0
		p	1		chunk
	m	(Ldhq;)V	a	markChunkPendingToSend
		p	1		chunk
	f	F	a	MIN_CHUNKS_PER_TICK
	f	F	b	MAX_CHUNKS_PER_TICK
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	F	d	START_CHUNKS_PER_TICK
	f	I	e	MAX_UNACKNOWLEDGED_BATCHES
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	f	pendingChunks
	f	Z	g	memoryConnection
	f	F	h	desiredChunksPerTick
	f	F	i	batchQuota
	f	I	j	unacknowledgedBatches
	f	I	k	maxUnacknowledgedBatches
c	alm	net/minecraft/server/network/ServerCommonPacketListenerImpl
	m	(Lnet/minecraft/server/MinecraftServer;Lsm;Lalf;)V	<init>	<init>
		p	1		server
		p	2		connection
		p	3		clientData
	m	(Lakf;)Lalf;	a	createCookie
		p	1		syncedOptions
	m	(Ltl;)V	a	onDisconnect
		p	1		reason
	m	(Lvd;Lsv;)V	a	send
		p	1		packet
		p	2		callbacks
	m	(Lvp;)V	a	handleCustomPayload
		p	1		packet
	m	(Lvq;)V	a	handleKeepAlive
		p	1		packet
	m	(Lvr;)V	a	handlePong
		p	1		packet
	m	(Lvs;)V	a	handleResourcePackResponse
		p	1		packet
	m	(Ltl;)V	b	disconnect
		p	1		reason
	m	(Lvd;)V	b	send
		p	1		packet
	m	(Ltl;)V	c	lambda$disconnect$1
	m	(Lvd;)Ljava/lang/String;	c	lambda$send$0
	m	()V	f	keepConnectionAlive
	m	()V	g	suspendFlushing
	m	()V	h	resumeFlushing
	m	()Z	i	isSingleplayerOwner
	m	()Lcom/mojang/authlib/GameProfile;	j	playerProfile
	m	()Lcom/mojang/authlib/GameProfile;	k	getOwner
	m	()I	l	latency
	f	I	a	LATENCY_CHECK_INTERVAL
	f	Lnet/minecraft/server/MinecraftServer;	b	server
	f	Lsm;	c	connection
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	Ltl;	e	TIMEOUT_DISCONNECTION_MESSAGE
	f	J	f	keepAliveTime
	f	Z	g	keepAlivePending
	f	J	h	keepAliveChallenge
	f	I	i	latency
	f	Z	j	suspendFlushingOnServerThread
c	aln	net/minecraft/server/network/ServerConfigurationPacketListenerImpl
	m	(Lnet/minecraft/server/MinecraftServer;Lsm;Lalf;)V	<init>	<init>
		p	1		server
		p	2		connection
		p	3		clientData
	m	(Lalg$a;)V	a	finishCurrentTask
		p	1		key
	m	(Lnet/minecraft/server/MinecraftServer$b;)V	a	lambda$addOptionalTasks$0
		p	1		properties
	m	(Ltl;)V	a	onDisconnect
		p	1		reason
	m	(Lvo;)V	a	handleClientInformation
		p	1		packet
	m	(Lvs;)V	a	handleResourcePackResponse
		p	1		packet
	m	(Lwu;)V	a	handleConfigurationFinished
		p	1		packet
	m	()Z	c	isAcceptingMessages
	m	()V	e	tick
	m	()Lcom/mojang/authlib/GameProfile;	j	playerProfile
	m	()V	m	startConfiguration
	m	()V	n	returnToWorld
	m	()V	o	addOptionalTasks
	m	()V	p	startNextTask
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	Ltl;	e	DISCONNECT_REASON_INVALID_DATA
	f	Lcom/mojang/authlib/GameProfile;	f	gameProfile
	f	Ljava/util/Queue;	g	configurationTasks
	f	Lalg;	h	currentTask
	f	Lakf;	i	clientInformation
c	alo	net/minecraft/server/network/ServerConnectionListener
	m	(Lnet/minecraft/server/MinecraftServer;)V	<init>	<init>
		p	1		server
	m	()Ljava/net/SocketAddress;	a	startMemoryChannel
	m	(Ljava/net/InetAddress;I)V	a	startTcpServerListener
		p	1		address
		p	2		port
	m	(Lsm;Ltl;)V	a	lambda$tick$2
	m	()V	b	stop
	m	()V	c	tick
	m	()Lnet/minecraft/server/MinecraftServer;	d	getServer
	m	()Ljava/util/List;	e	getConnections
	m	()Lio/netty/channel/epoll/EpollEventLoopGroup;	f	lambda$static$1
	m	()Lio/netty/channel/nio/NioEventLoopGroup;	g	lambda$static$0
	f	Ljava/util/function/Supplier;	a	SERVER_EVENT_GROUP
	f	Ljava/util/function/Supplier;	b	SERVER_EPOLL_EVENT_GROUP
	f	Z	c	running
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	Lnet/minecraft/server/MinecraftServer;	e	server
	f	Ljava/util/List;	f	channels
	f	Ljava/util/List;	g	connections
c	alo$1	net/minecraft/server/network/ServerConnectionListener$1
	f	Lalo;	a	this$0
c	alo$2	net/minecraft/server/network/ServerConnectionListener$2
	f	Lalo;	a	this$0
c	alo$a	net/minecraft/server/network/ServerConnectionListener$LatencySimulator
	m	(II)V	<init>	<init>
		p	1		baseDelay
		p	2		extraDelay
	m	(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;)V	a	delayDownstream
		p	1		ctx
		p	2		msg
	m	(Lio/netty/util/Timeout;)V	a	onTimeout
		p	1		timeout
	f	Lio/netty/util/Timer;	a	TIMER
	f	I	b	delay
	f	I	c	jitter
	f	Ljava/util/List;	d	queuedMessages
c	alo$a$a	net/minecraft/server/network/ServerConnectionListener$LatencySimulator$DelayedMessage
	m	(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;)V	<init>	<init>
		p	1		context
		p	2		message
	f	Lio/netty/channel/ChannelHandlerContext;	a	ctx
	f	Ljava/lang/Object;	b	msg
c	alp	net/minecraft/server/network/ServerGamePacketListenerImpl
	m	(Lnet/minecraft/server/MinecraftServer;Lsm;Lakr;Lalf;)V	<init>	<init>
		p	1		server
		p	2		connection
		p	3		player
		p	4		clientData
	m	(D)D	a	clampHorizontal
		p	0		d
	m	(DDDFF)V	a	teleport
		p	1		x
		p	3		y
		p	5		z
		p	7		yaw
		p	8		pitch
	m	(DDDFFLjava/util/Set;)V	a	teleport
		p	1		x
		p	3		y
		p	5		z
		p	7		yaw
		p	8		pitch
		p	9		flags
	m	(I)V	a	ackBlockChangesUpTo
		p	1		sequence
	m	(ILjava/util/List;)V	a	lambda$handleEditBook$3
		p	2		texts
	m	(Labf;)V	a	handleAcceptTeleportPacket
		p	1		packet
	m	(Labg;)V	a	handleBlockEntityTagQuery
		p	1		packet
	m	(Labh;)V	a	handleChangeDifficulty
		p	1		packet
	m	(Labi;)V	a	handleChatAck
		p	1		packet
	m	(Labj;)V	a	handleChatCommand
		p	1		packet
	m	(Labj;Ljava/util/Optional;)V	a	lambda$handleChatCommand$9
	m	(Labj;Ltr;)V	a	performChatCommand
		p	1		packet
		p	2		lastSeenMessages
	m	(Labj;Luc;Ltr;)Ljava/util/Map;	a	collectSignedArguments
		p	1		packet
		p	2		arguments
		p	3		lastSeenMessages
	m	(Labk;)V	a	handleChat
		p	1		packet
	m	(Labk;Ljava/util/Optional;)V	a	lambda$handleChat$8
	m	(Labk;Ltr;)Lua;	a	getSignedMessage
		p	1		packet
		p	2		lastSeenMessages
	m	(Labl;)V	a	handleChatSessionUpdate
		p	1		packet
	m	(Labm;)V	a	handleChunkBatchReceived
		p	1		packet
	m	(Labn;)V	a	handleClientCommand
		p	1		packet
	m	(Labo;)V	a	handleCustomCommandSuggestions
		p	1		packet
	m	(Labo;Lcom/mojang/brigadier/suggestion/Suggestions;)V	a	lambda$handleCustomCommandSuggestions$1
		p	2		suggestions
	m	(Labp;)V	a	handleConfigurationAcknowledged
		p	1		packet
	m	(Labq;)V	a	handleContainerButtonClick
		p	1		packet
	m	(Labr;)V	a	handleContainerClick
		p	1		packet
	m	(Labs;)V	a	handleContainerClose
		p	1		packet
	m	(Labt;)V	a	handleEditBook
		p	1		packet
	m	(Labu;)V	a	handleEntityTagQuery
		p	1		packet
	m	(Labv;)V	a	handleInteract
		p	1		packet
	m	(Labw;)V	a	handleJigsawGenerate
		p	1		packet
	m	(Labx;)V	a	handleLockDifficulty
		p	1		packet
	m	(Laby;)V	a	handleMovePlayer
		p	1		packet
	m	(Labz;)V	a	handleMoveVehicle
		p	1		packet
	m	(Laca;)V	a	handlePaddleBoat
		p	1		packet
	m	(Lacb;)V	a	handlePickItem
		p	1		packet
	m	(Lacc;)V	a	handlePlaceRecipe
		p	1		packet
	m	(Lacc;Lcmk;)V	a	lambda$handlePlaceRecipe$11
		p	2		recipe
	m	(Lacd;)V	a	handlePlayerAbilities
		p	1		packet
	m	(Lace;)V	a	handlePlayerAction
		p	1		packet
	m	(Lacf;)V	a	handlePlayerCommand
		p	1		packet
	m	(Lacg;)V	a	handlePlayerInput
		p	1		packet
	m	(Lach;)V	a	handleRecipeBookChangeSettingsPacket
		p	1		packet
	m	(Laci;)V	a	handleRecipeBookSeenRecipePacket
		p	1		packet
	m	(Lacj;)V	a	handleRenameItem
		p	1		packet
	m	(Lack;)V	a	handleSeenAdvancements
		p	1		packet
	m	(Lacl;)V	a	handleSelectTrade
		p	1		packet
	m	(Lacm;)V	a	handleSetBeaconPacket
		p	1		packet
	m	(Lacn;)V	a	handleSetCarriedItem
		p	1		packet
	m	(Laco;)V	a	handleSetCommandBlock
		p	1		packet
	m	(Lacp;)V	a	handleSetCommandMinecart
		p	1		packet
	m	(Lacq;)V	a	handleSetCreativeModeSlot
		p	1		packet
	m	(Lacr;)V	a	handleSetJigsawBlock
		p	1		packet
	m	(Lacs;)V	a	handleSetStructureBlock
		p	1		packet
	m	(Lact;)V	a	handleSignUpdate
		p	1		packet
	m	(Lact;Ljava/util/List;)V	a	updateSignText
		p	1		packet
		p	2		signText
	m	(Lacu;)V	a	handleAnimate
		p	1		packet
	m	(Lacv;)V	a	handleTeleportToEntityPacket
		p	1		packet
	m	(Lacw;)V	a	handleUseItemOn
		p	1		packet
	m	(Lacx;)V	a	handleUseItem
		p	1		packet
	m	(Laeb;)V	a	handlePingRequest
		p	1		packet
	m	(Lakr;Lcjf;)Z	a	wasBlockPlacementAttempt
		p	0		player
		p	1		stack
	m	(Lalh;Ljava/util/List;I)V	a	signBook
		p	1		title
		p	2		pages
		p	3		slotId
	m	(Lbiq;)Z	a	noBlocksAround
		p	1		entity
	m	(Lcpy;Lehi;DDD)Z	a	isPlayerCollidingWithAnythingNew
		p	1		world
		p	2		box
		p	3		newX
		p	5		newY
		p	7		newZ
	m	(Ldr;Ldt;)Ldt;	a	lambda$performChatCommand$10
		p	2		source
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	lambda$filterTextPacket$0
		p	1		filtered
	m	(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/util/concurrent/CompletableFuture;	a	filterTextPacket
		p	1		text
		p	2		filterer
	m	(Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;	a	filterTextPacket
		p	1		text
	m	(Ljava/lang/String;Ljava/time/Instant;Ltr$b;)Ljava/util/Optional;	a	tryHandleChat
		p	1		message
		p	2		timestamp
		p	3		acknowledgment
	m	(Ljava/time/Instant;)Z	a	updateChatOrder
		p	1		timestamp
	m	(Ljava/util/List;)Ljava/util/concurrent/CompletableFuture;	a	filterTextPacket
		p	1		texts
	m	(Ljava/util/List;I)V	a	updateBookContents
		p	1		pages
		p	2		slotId
	m	(Ljava/util/List;Ljava/util/function/UnaryOperator;Lcjf;)V	a	updateBookPages
		p	1		messages
		p	2		postProcessor
		p	3		book
	m	(Ljava/util/concurrent/CompletableFuture;Lua;Ltl;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	lambda$handleChat$7
		p	4		executor
	m	(Ljava/util/function/UnaryOperator;Lalh;)Lro;	a	lambda$updateBookPages$5
		p	1		message
	m	(Ltl;)V	a	onDisconnect
		p	1		reason
	m	(Ltl;Lth$a;)V	a	sendDisguisedChatMessage
		p	1		message
		p	2		params
	m	(Ltr$b;)Ljava/util/Optional;	a	unpackAndApplyLastSeen
		p	1		acknowledgment
	m	(Lua;)V	a	addPendingMessage
		p	1		message
	m	(Lua;Lth$a;)V	a	sendPlayerChatMessage
		p	1		message
		p	2		params
	m	(Lua;Ltl;Lalh;)V	a	lambda$handleChat$6
	m	(Lub;)V	a	resetPlayerChatState
		p	1		session
	m	(Lub;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	lambda$resetPlayerChatState$13
		p	2		executor
	m	(Lue$a;)V	a	handleMessageDecodeFailure
		p	1		exception
	m	(Lvd;)Z	a	shouldHandleMessage
		p	1		packet
	m	(Lvo;)V	a	handleClientInformation
		p	1		packet
	m	(D)D	b	clampVertical
		p	0		d
	m	(DDDFF)Z	b	containsInvalidValues
		p	0		x
		p	2		y
		p	4		z
		p	6		yaw
		p	7		pitch
	m	(ILjava/util/List;)V	b	lambda$handleEditBook$2
		p	2		texts
	m	(Lact;Ljava/util/List;)V	b	lambda$handleSignUpdate$12
		p	2		texts
	m	(Ljava/lang/String;)Lcom/mojang/brigadier/ParseResults;	b	parseCommand
		p	1		command
	m	(Lua;)V	b	broadcastChatMessage
		p	1		message
	m	()Z	c	isAcceptingMessages
	m	(Ljava/lang/String;)Z	c	isChatMessageIllegal
		p	0		message
	m	(Ljava/lang/String;)Ljava/lang/String;	d	lambda$signBook$4
		p	0		text
	m	()V	e	tick
	m	()Lcom/mojang/authlib/GameProfile;	j	playerProfile
	m	()V	m	resetPosition
	m	()Ljava/net/SocketAddress;	n	getRemoteAddress
	m	()V	o	switchToConfig
	m	()Lakr;	p	getPlayer
	m	()V	q	removePlayerFromWorld
	m	()V	r	detectRateSpam
	f	D	A	vehicleLastGoodZ
	f	Lehn;	B	awaitingPositionFromClient
	f	I	C	awaitingTeleport
	f	I	D	awaitingTeleportTime
	f	Z	E	clientIsFloating
	f	I	F	aboveGroundTickCount
	f	Z	G	clientVehicleIsFloating
	f	I	H	aboveGroundVehicleTickCount
	f	I	I	receivedMovePacketCount
	f	I	J	knownMovePacketCount
	f	Ljava/util/concurrent/atomic/AtomicReference;	K	lastChatTimeStamp
	f	Lub;	L	chatSession
	f	Lue$b;	M	signedMessageDecoder
	f	Ltt;	N	lastSeenMessages
	f	Ltx;	O	messageSignatureCache
	f	Larl;	P	chatMessageChain
	f	Z	Q	waitingForSwitchToConfig
	f	D	d	MAX_INTERACTION_DISTANCE
	f	Lakr;	e	player
	f	Lall;	f	chunkSender
	f	Lorg/slf4j/Logger;	g	LOGGER
	f	I	h	NO_BLOCK_UPDATES_TO_ACK
	f	I	i	TRACKED_MESSAGE_DISCONNECT_THRESHOLD
	f	Ltl;	j	CHAT_VALIDATION_FAILED
	f	I	k	tickCount
	f	I	l	ackBlockChangesUpTo
	f	I	m	chatSpamTickCount
	f	I	n	dropSpamTickCount
	f	D	o	firstGoodX
	f	D	p	firstGoodY
	f	D	q	firstGoodZ
	f	D	r	lastGoodX
	f	D	s	lastGoodY
	f	D	t	lastGoodZ
	f	Lbiq;	u	lastVehicle
	f	D	v	vehicleFirstGoodX
	f	D	w	vehicleFirstGoodY
	f	D	x	vehicleFirstGoodZ
	f	D	y	vehicleLastGoodX
	f	D	z	vehicleLastGoodY
c	alp$1	net/minecraft/server/network/ServerGamePacketListenerImpl$1
	m	()V	a	onAttack
	m	(Lbgx;)V	a	onInteraction
		p	1		hand
	m	(Lbgx;Lalp$a;)V	a	performInteraction
		p	1		hand
		p	2		action
	m	(Lbgx;Lehn;)V	a	onInteraction
		p	1		hand
		p	2		pos
	m	(Lehn;Lakr;Lbiq;Lbgx;)Lbgy;	a	lambda$onInteraction$0
		p	1		player
		p	2		entity
		p	3		handx
	f	Lakq;	a	val$level
	f	Lbiq;	b	val$target
	f	Lalp;	c	this$0
c	alp$2	net/minecraft/server/network/ServerGamePacketListenerImpl$2
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$entity$CommandBlockEntity$Mode
	f	[I	b	$SwitchMap$net$minecraft$network$protocol$game$ServerboundPlayerActionPacket$Action
	f	[I	c	$SwitchMap$net$minecraft$network$protocol$game$ServerboundPlayerCommandPacket$Action
	f	[I	d	$SwitchMap$net$minecraft$network$protocol$game$ServerboundClientCommandPacket$Action
c	alp$a	net/minecraft/server/network/ServerGamePacketListenerImpl$EntityInteraction
	m	(Lakr;Lbiq;Lbgx;)Lbgy;	run	run
		p	1		player
		p	2		entity
		p	3		hand
c	alq	net/minecraft/server/network/ServerHandshakePacketListenerImpl
	m	(Lnet/minecraft/server/MinecraftServer;Lsm;)V	<init>	<init>
		p	1		server
		p	2		connection
	m	(Ladb;)V	a	handleIntention
		p	1		packet
	m	(Ltl;)V	a	onDisconnect
		p	1		reason
	m	()Z	c	isAcceptingMessages
	f	Ltl;	a	IGNORE_STATUS_REASON
	f	Lnet/minecraft/server/MinecraftServer;	b	server
	f	Lsm;	c	connection
c	alq$1	net/minecraft/server/network/ServerHandshakePacketListenerImpl$1
	f	[I	a	$SwitchMap$net$minecraft$network$protocol$handshake$ClientIntent
c	alr	net/minecraft/server/network/ServerLoginPacketListenerImpl
	m	(Lnet/minecraft/server/MinecraftServer;Lsm;)V	<init>	<init>
		p	1		server
		p	2		connection
	m	(I)Z	a	lambda$isValidUsername$1
		p	0		c
	m	(Ladl;)V	a	handleCustomQueryPacket
		p	1		packet
	m	(Ladm;)V	a	handleHello
		p	1		packet
	m	(Ladn;)V	a	handleKey
		p	1		packet
	m	(Lado;)V	a	handleLoginAcknowledgement
		p	1		packet
	m	(Lcom/mojang/authlib/GameProfile;)Z	a	isPlayerAlreadyInWorld
		p	1		profile
	m	(Ljava/lang/String;)Z	a	isValidUsername
		p	0		name
	m	(Ltl;)V	a	onDisconnect
		p	1		reason
	m	(Lcom/mojang/authlib/GameProfile;)V	b	startClientVerification
		p	1		profile
	m	(Ljava/lang/String;)Lcom/mojang/authlib/GameProfile;	b	createOfflineProfile
		p	0		name
	m	(Ltl;)V	b	disconnect
		p	1		reason
	m	()Z	c	isAcceptingMessages
	m	(Lcom/mojang/authlib/GameProfile;)V	c	verifyLoginAndFinishConnectionSetup
		p	1		profile
	m	(Lcom/mojang/authlib/GameProfile;)V	d	finishLoginAndWaitForClient
		p	1		profile
	m	()V	e	tick
	m	()Ljava/lang/String;	f	getUserName
	m	()V	g	lambda$verifyLoginAndFinishConnectionSetup$0
	f	Ljava/util/concurrent/atomic/AtomicInteger;	a	UNIQUE_THREAD_ID
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	I	c	MAX_TICKS_BEFORE_LOGIN
	f	Ltl;	d	DISCONNECT_UNEXPECTED_QUERY
	f	[B	e	challenge
	f	Lnet/minecraft/server/MinecraftServer;	f	server
	f	Lsm;	g	connection
	f	Lalr$a;	h	state
	f	I	i	tick
	f	Ljava/lang/String;	j	requestedUsername
	f	Lcom/mojang/authlib/GameProfile;	k	authenticatedProfile
	f	Ljava/lang/String;	l	serverId
c	alr$1	net/minecraft/server/network/ServerLoginPacketListenerImpl$1
	m	()Ljava/net/InetAddress;	a	getAddress
	f	Ljava/lang/String;	a	val$digest
	f	Lalr;	b	this$0
c	alr$a	net/minecraft/server/network/ServerLoginPacketListenerImpl$State
	m	()[Lalr$a;	a	$values
	f	Lalr$a;	a	HELLO
	f	Lalr$a;	b	KEY
	f	Lalr$a;	c	AUTHENTICATING
	f	Lalr$a;	d	NEGOTIATING
	f	Lalr$a;	e	VERIFYING
	f	Lalr$a;	f	WAITING_FOR_DUPE_DISCONNECT
	f	Lalr$a;	g	PROTOCOL_SWITCHING
	f	Lalr$a;	h	ACCEPTED
	f	[Lalr$a;	i	$VALUES
c	als	net/minecraft/server/network/ServerPlayerConnection
	m	(Lvd;)V	b	send
		p	1		packet
	m	()Lakr;	p	getPlayer
c	alt	net/minecraft/server/network/ServerStatusPacketListenerImpl
	m	(Ladz;Lsm;)V	<init>	<init>
		p	1		metadata
		p	2		connection
	m	(Laeb;)V	a	handlePingRequest
		p	1		packet
	m	(Laec;)V	a	handleStatusRequest
		p	1		packet
	m	(Ltl;)V	a	onDisconnect
		p	1		reason
	m	()Z	c	isAcceptingMessages
	f	Ltl;	a	DISCONNECT_REASON
	f	Ladz;	b	status
	f	Lsm;	c	connection
	f	Z	d	hasRequestedStatus
c	alu	net/minecraft/server/network/TextFilter
	m	()V	a	join
	m	(Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;	a	processStreamMessage
		p	1		text
	m	(Ljava/util/List;)Ljava/util/concurrent/CompletableFuture;	a	processMessageBundle
		p	1		texts
	m	()V	b	leave
	f	Lalu;	a	DUMMY
c	alu$1	net/minecraft/server/network/TextFilter$1
	m	()V	a	join
	m	(Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;	a	processStreamMessage
		p	1		text
	m	(Ljava/util/List;)Ljava/util/concurrent/CompletableFuture;	a	processMessageBundle
		p	1		texts
	m	()V	b	leave
c	alv	net/minecraft/server/network/TextFilterClient
	m	(Ljava/net/URL;Lalv$c;Ljava/net/URL;Lalv$b;Ljava/net/URL;Lalv$b;Ljava/lang/String;Lalv$a;I)V	<init>	<init>
		p	1		chatEndpoint
		p	2		messageEncoder
		p	3		joinEndpoint
		p	4		joinEncoder
		p	5		leaveEndpoint
		p	6		leaveEncoder
		p	7		apiKey
		p	8		ignorer
		p	9		parallelism
	m	(ILjava/lang/String;Ljava/lang/String;Lcom/mojang/authlib/GameProfile;Ljava/lang/String;)Lcom/google/gson/JsonObject;	a	lambda$createFromConfig$2
		p	3		profile
		p	4		message
	m	(Lalv$b;Lcom/mojang/authlib/GameProfile;Ljava/net/URL;)V	a	lambda$processJoinOrLeave$4
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	a	getEndpointFromConfig
		p	0		json
		p	1		key
		p	2		fallback
	m	(Lcom/google/gson/JsonObject;Ljava/net/URL;)Lcom/google/gson/JsonObject;	a	processRequestResponse
		p	1		payload
		p	2		endpoint
	m	(Lcom/mojang/authlib/GameProfile;)Lalu;	a	createContext
		p	1		gameProfile
	m	(Lcom/mojang/authlib/GameProfile;Ljava/lang/String;Lalv$a;)Lalh;	a	lambda$requestMessageProcessing$5
	m	(Lcom/mojang/authlib/GameProfile;Ljava/lang/String;Lalv$a;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	requestMessageProcessing
		p	1		gameProfile
		p	2		message
		p	3		ignorer
		p	4		executor
	m	(Lcom/mojang/authlib/GameProfile;Ljava/net/URL;Lalv$b;Ljava/util/concurrent/Executor;)V	a	processJoinOrLeave
		p	1		gameProfile
		p	2		endpoint
		p	3		profileEncoder
		p	4		executor
	m	(Ljava/io/InputStream;)V	a	drainStream
		p	1		inputStream
	m	(Ljava/lang/Runnable;)Ljava/lang/Thread;	a	lambda$static$0
		p	0		runnable
	m	(Ljava/lang/String;)Lalv;	a	createFromConfig
		p	0		config
	m	(Ljava/lang/String;Lcom/google/gson/JsonArray;Lalv$a;)Lto;	a	parseMask
		p	1		message
		p	2		mask
		p	3		ignorer
	m	(Ljava/lang/String;Ljava/lang/String;Lcom/mojang/authlib/GameProfile;)Lcom/google/gson/JsonObject;	a	lambda$createFromConfig$1
		p	2		profile
	m	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/mojang/authlib/GameProfile;Ljava/lang/String;)Lcom/google/gson/JsonObject;	a	lambda$createFromConfig$3
		p	3		profile
		p	4		message
	m	(Ljava/net/URI;Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/String;)Ljava/net/URL;	a	getEndpoint
		p	0		root
		p	1		endpoints
		p	2		key
		p	3		fallback
	m	(Lcom/google/gson/JsonObject;Ljava/net/URL;)V	b	processRequest
		p	1		payload
		p	2		endpoint
	m	(Lcom/google/gson/JsonObject;Ljava/net/URL;)Ljava/net/HttpURLConnection;	c	makeRequest
		p	1		payload
		p	2		endpoint
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/concurrent/atomic/AtomicInteger;	b	WORKER_COUNT
	f	Ljava/util/concurrent/ThreadFactory;	c	THREAD_FACTORY
	f	Ljava/lang/String;	d	DEFAULT_ENDPOINT
	f	Ljava/net/URL;	e	chatEndpoint
	f	Lalv$c;	f	chatEncoder
	f	Ljava/net/URL;	g	joinEndpoint
	f	Lalv$b;	h	joinEncoder
	f	Ljava/net/URL;	i	leaveEndpoint
	f	Lalv$b;	j	leaveEncoder
	f	Ljava/lang/String;	k	authKey
	f	Lalv$a;	l	chatIgnoreStrategy
	f	Ljava/util/concurrent/ExecutorService;	m	workerPool
c	alv$a	net/minecraft/server/network/TextFilterClient$IgnoreStrategy
	m	(ILjava/lang/String;I)Z	a	lambda$ignoreOverThreshold$2
		p	1		hashes
		p	2		hashesSize
	m	(Ljava/lang/String;I)Z	a	lambda$static$1
		p	0		hashes
		p	1		hashesSize
	m	(Ljava/lang/String;I)Z	b	lambda$static$0
		p	0		hashes
		p	1		hashesSize
	m	(I)Lalv$a;	ignoreOverThreshold	ignoreOverThreshold
		p	0		hashesToDrop
	m	(I)Lalv$a;	select	select
		p	0		hashesToDrop
	m	(Ljava/lang/String;I)Z	shouldIgnore	shouldIgnore
		p	1		hashes
		p	2		hashesSize
	f	Lalv$a;	a	NEVER_IGNORE
	f	Lalv$a;	b	IGNORE_FULLY_FILTERED
c	alv$b	net/minecraft/server/network/TextFilterClient$JoinOrLeaveEncoder
	m	(Lcom/mojang/authlib/GameProfile;)Lcom/google/gson/JsonObject;	encode	encode
		p	1		gameProfile
c	alv$c	net/minecraft/server/network/TextFilterClient$MessageEncoder
	m	(Lcom/mojang/authlib/GameProfile;Ljava/lang/String;)Lcom/google/gson/JsonObject;	encode	encode
		p	1		gameProfile
		p	2		message
c	alv$d	net/minecraft/server/network/TextFilterClient$PlayerContext
	m	(Lalv;Lcom/mojang/authlib/GameProfile;)V	<init>	<init>
		p	2		gameProfile
	m	()V	a	join
	m	(Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;	a	processStreamMessage
		p	1		text
	m	(Ljava/lang/Throwable;)Ljava/util/List;	a	lambda$processMessageBundle$1
		p	0		throwable
	m	(Ljava/util/List;)Ljava/util/concurrent/CompletableFuture;	a	processMessageBundle
		p	1		texts
	m	()V	b	leave
	m	(Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;	b	lambda$processMessageBundle$0
		p	1		text
	f	Lalv;	b	this$0
	f	Lcom/mojang/authlib/GameProfile;	c	profile
	f	Ljava/util/concurrent/Executor;	d	streamExecutor
c	alv$e	net/minecraft/server/network/TextFilterClient$RequestFailedException
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		message
c	alw	net/minecraft/server/network/config/JoinWorldTask
	m	()Lalg$a;	a	type
	m	(Ljava/util/function/Consumer;)V	a	start
		p	1		sender
	f	Lalg$a;	a	TYPE
c	alx	net/minecraft/server/network/config/ServerResourcePackConfigurationTask
	m	(Lnet/minecraft/server/MinecraftServer$b;)V	<init>	<init>
		p	1		packProperties
	m	()Lalg$a;	a	type
	m	(Ljava/util/function/Consumer;)V	a	start
		p	1		sender
	f	Lalg$a;	a	TYPE
	f	Lnet/minecraft/server/MinecraftServer$b;	b	info
c	aly	net/minecraft/server/network/config/package-info
c	alz	net/minecraft/server/network/package-info
c	ama	net/minecraft/server/package-info
c	amb	net/minecraft/server/packs/AbstractPackResources
	m	(Ljava/lang/String;Z)V	<init>	<init>
		p	1		name
		p	2		alwaysStable
	m	()Ljava/lang/String;	a	packId
	m	(Lamt;)Ljava/lang/Object;	a	getMetadataSection
		p	1		metaReader
	m	(Lamt;Ljava/io/InputStream;)Ljava/lang/Object;	a	getMetadataFromStream
		p	0		metaReader
		p	1		inputStream
	m	()Z	b	isBuiltin
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	Ljava/lang/String;	d	name
	f	Z	e	isBuiltin
c	amc	net/minecraft/server/packs/BuiltInMetadata
	m	(Ljava/util/Map;)V	<init>	<init>
		p	1		values
	m	()Lamc;	a	of
	m	(Lamt;)Ljava/lang/Object;	a	get
		p	1		reader
	m	(Lamt;Ljava/lang/Object;)Lamc;	a	of
		p	0		reader
		p	1		value
	m	(Lamt;Ljava/lang/Object;Lamt;Ljava/lang/Object;)Lamc;	a	of
		p	0		reader
		p	1		value
		p	2		reader2
		p	3		value2
	f	Lamc;	a	EMPTY
	f	Ljava/util/Map;	b	values
c	amd	net/minecraft/server/packs/CompositePackResources
	m	(Lamh;Ljava/util/List;)V	<init>	<init>
		p	1		base
		p	2		overlays
	m	()Ljava/lang/String;	a	packId
	m	(Lami;)Ljava/util/Set;	a	getNamespaces
		p	1		type
	m	(Lami;Laew;)Lanl;	a	getResource
		p	1		type
		p	2		id
	m	(Lami;Ljava/lang/String;Ljava/lang/String;Lamh$a;)V	a	listResources
		p	1		type
		p	2		namespace
		p	3		prefix
		p	4		consumer
	m	(Lamt;)Ljava/lang/Object;	a	getMetadataSection
		p	1		metaReader
	m	([Ljava/lang/String;)Lanl;	a	getRootResource
		p	1		segments
	m	()Z	b	isBuiltin
	f	Lamh;	c	primaryPackResources
	f	Ljava/util/List;	d	packResourcesStack
c	ame	net/minecraft/server/packs/FeatureFlagsMetadataSection
	m	()Lcec;	a	flags
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	f	Lamu;	a	TYPE
	f	Lcec;	b	flags
	f	Lcom/mojang/serialization/Codec;	c	CODEC
c	amf	net/minecraft/server/packs/FilePackResources
	m	(Ljava/lang/String;Lamf$b;ZLjava/lang/String;)V	<init>	<init>
		p	1		name
		p	2		zipFile
		p	3		alwaysStable
		p	4		overlay
	m	(Lami;)Ljava/util/Set;	a	getNamespaces
		p	1		type
	m	(Lami;Laew;)Lanl;	a	getResource
		p	1		type
		p	2		id
	m	(Lami;Ljava/lang/String;Ljava/lang/String;Lamh$a;)V	a	listResources
		p	1		type
		p	2		namespace
		p	3		prefix
		p	4		consumer
	m	(Ljava/lang/String;)Ljava/lang/String;	a	addPrefix
		p	1		path
	m	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	a	extractNamespace
		p	0		prefix
		p	1		entryName
	m	([Ljava/lang/String;)Lanl;	a	getRootResource
		p	1		segments
	m	(Lami;Laew;)Ljava/lang/String;	b	getPathFromLocation
		p	0		type
		p	1		id
	m	(Ljava/lang/String;)Lanl;	b	getResource
		p	1		path
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	Lamf$b;	d	zipFileAccess
	f	Ljava/lang/String;	e	prefix
c	amf$a	net/minecraft/server/packs/FilePackResources$FileResourcesSupplier
	m	(Ljava/io/File;Z)V	<init>	<init>
		p	1		file
		p	2		alwaysStable
	m	(Ljava/nio/file/Path;Z)V	<init>	<init>
		p	1		path
		p	2		alwaysStable
	m	(Ljava/lang/String;)Lamh;	a	openPrimary
		p	1		name
	m	(Ljava/lang/String;Lanb$a;)Lamh;	a	openFull
		p	1		name
		p	2		metadata
	f	Ljava/io/File;	a	content
	f	Z	b	isBuiltin
c	amf$b	net/minecraft/server/packs/FilePackResources$SharedZipFileAccess
	m	(Ljava/io/File;)V	<init>	<init>
		p	1		file
	m	()Ljava/util/zip/ZipFile;	a	getOrCreateZipFile
	f	Ljava/io/File;	a	file
	f	Ljava/util/zip/ZipFile;	b	zipFile
	f	Z	c	failedToLoad
c	amg	net/minecraft/server/packs/OverlayMetadataSection
	m	()Ljava/util/List;	a	overlays
	m	(I)Ljava/util/List;	a	overlaysForVersion
		p	1		packFormat
	m	(ILamg$a;)Z	a	lambda$overlaysForVersion$2
		p	1		overlay
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	a	validateOverlayDir
		p	0		directoryName
	m	(Ljava/lang/String;)Ljava/lang/String;	b	lambda$validateOverlayDir$0
	f	Lamu;	a	TYPE
	f	Ljava/util/List;	b	overlays
	f	Ljava/util/regex/Pattern;	c	DIR_VALIDATOR
	f	Lcom/mojang/serialization/Codec;	d	CODEC
c	amg$a	net/minecraft/server/packs/OverlayMetadataSection$OverlayEntry
	m	()Larp;	a	format
	m	(I)Z	a	isApplicable
		p	1		packFormat
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Ljava/lang/String;	b	overlay
	f	Larp;	a	format
	f	Ljava/lang/String;	b	overlay
	f	Lcom/mojang/serialization/Codec;	c	CODEC
c	amh	net/minecraft/server/packs/PackResources
	m	()Ljava/lang/String;	a	packId
	m	(Lami;)Ljava/util/Set;	a	getNamespaces
		p	1		type
	m	(Lami;Laew;)Lanl;	a	getResource
		p	1		type
		p	2		id
	m	(Lami;Ljava/lang/String;Ljava/lang/String;Lamh$a;)V	a	listResources
		p	1		type
		p	2		namespace
		p	3		prefix
		p	4		consumer
	m	(Lamt;)Ljava/lang/Object;	a	getMetadataSection
		p	1		metaReader
	m	([Ljava/lang/String;)Lanl;	a	getRootResource
		p	1		segments
	m	()Z	b	isBuiltin
	f	Ljava/lang/String;	a	METADATA_EXTENSION
	f	Ljava/lang/String;	b	PACK_META
c	amh$a	net/minecraft/server/packs/PackResources$ResourceOutput
c	ami	net/minecraft/server/packs/PackType
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()Ljava/lang/String;	a	getDirectory
	m	()[Lami;	b	$values
	f	Lami;	a	CLIENT_RESOURCES
	f	Lami;	b	SERVER_DATA
	f	Ljava/lang/String;	c	directory
	f	[Lami;	d	$VALUES
c	amj	net/minecraft/server/packs/PathPackResources
	m	(Ljava/lang/String;Ljava/nio/file/Path;Z)V	<init>	<init>
		p	1		name
		p	2		root
		p	3		alwaysStable
	m	(Laew;Lcom/mojang/serialization/DataResult$PartialResult;)Lanl;	a	lambda$getResource$1
		p	1		result
	m	(Laew;Ljava/nio/file/Path;)Lanl;	a	getResource
		p	0		id
		p	1		path
	m	(Lami;)Ljava/util/Set;	a	getNamespaces
		p	1		type
	m	(Lami;Laew;)Lanl;	a	getResource
		p	1		type
		p	2		id
	m	(Lami;Ljava/lang/String;Lamh$a;Ljava/util/List;)V	a	lambda$listResources$2
		p	4		prefixSegments
	m	(Lami;Ljava/lang/String;Ljava/lang/String;Lamh$a;)V	a	listResources
		p	1		type
		p	2		namespace
		p	3		prefix
		p	4		consumer
	m	(Ljava/lang/String;Lcom/mojang/serialization/DataResult$PartialResult;)V	a	lambda$listResources$3
		p	1		result
	m	(Ljava/lang/String;Ljava/nio/file/Path;Ljava/util/List;Lamh$a;)V	a	listPath
		p	0		namespace
		p	1		path
		p	2		prefixSegments
		p	3		consumer
	m	(Ljava/nio/file/Path;)Z	a	validatePath
		p	0		path
	m	(Ljava/nio/file/Path;Ljava/lang/String;Lamh$a;Ljava/nio/file/Path;)V	a	lambda$listPath$5
		p	3		foundPath
	m	(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Z	a	lambda$listPath$4
		p	0		path2
		p	1		attributes
	m	(Ljava/nio/file/Path;Ljava/util/List;)Lanl;	a	lambda$getResource$0
		p	1		segments
	m	([Ljava/lang/String;)Lanl;	a	getRootResource
		p	1		segments
	m	(Ljava/nio/file/Path;)Lanl;	b	returnFileIfExists
		p	0		path
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	Lcom/google/common/base/Joiner;	d	PATH_JOINER
	f	Ljava/nio/file/Path;	e	root
c	amj$a	net/minecraft/server/packs/PathPackResources$PathResourcesSupplier
	m	(Ljava/nio/file/Path;Z)V	<init>	<init>
		p	1		path
		p	2		alwaysStable
	m	(Ljava/lang/String;)Lamh;	a	openPrimary
		p	1		name
	m	(Ljava/lang/String;Lanb$a;)Lamh;	a	openFull
		p	1		name
		p	2		metadata
	f	Ljava/nio/file/Path;	a	content
	f	Z	b	isBuiltin
c	amk	net/minecraft/server/packs/VanillaPackResources
	m	(Lamc;Ljava/util/Set;Ljava/util/List;Ljava/util/Map;)V	<init>	<init>
		p	1		metadata
		p	2		namespaces
		p	3		rootPaths
		p	4		namespacePaths
	m	()Ljava/lang/String;	a	packId
	m	(Laew;)Ljava/util/Optional;	a	lambda$asProvider$7
		p	1		name
	m	(Laew;Lami;Ljava/util/List;)Lanl;	a	lambda$getResource$4
		p	3		segments
	m	(Laew;Lami;Ljava/util/function/Consumer;Ljava/util/List;)V	a	lambda$listRawPaths$0
		p	4		segments
	m	(Laew;Lcom/mojang/serialization/DataResult$PartialResult;)Lanl;	a	lambda$getResource$5
		p	1		result
	m	(Lamh$a;Ljava/lang/String;Ljava/nio/file/Path;Ljava/util/List;)V	a	getResources
		p	0		consumer
		p	1		namespace
		p	2		root
		p	3		prefixSegments
	m	(Lami;)Ljava/util/Set;	a	getNamespaces
		p	1		type
	m	(Lami;Laew;)Lanl;	a	getResource
		p	1		type
		p	2		id
	m	(Lami;Laew;Ljava/util/function/Consumer;)V	a	listRawPaths
		p	1		type
		p	2		path
		p	3		consumer
	m	(Lami;Lamh$a;Ljava/lang/String;Ljava/util/List;)V	a	lambda$listResources$2
		p	4		segments
	m	(Lami;Ljava/lang/String;Ljava/lang/String;Lamh$a;)V	a	listResources
		p	1		type
		p	2		namespace
		p	3		prefix
		p	4		consumer
	m	(Lamt;)Ljava/lang/Object;	a	getMetadataSection
		p	1		metaReader
	m	(Lanl;)Lanr;	a	lambda$asProvider$6
		p	1		stream
	m	(Ljava/lang/String;Lcom/mojang/serialization/DataResult$PartialResult;)V	a	lambda$listResources$3
		p	1		result
	m	([Ljava/lang/String;)Lanl;	a	getRootResource
		p	1		segments
	m	()Z	b	isBuiltin
	m	(Laew;Lcom/mojang/serialization/DataResult$PartialResult;)V	b	lambda$listRawPaths$1
		p	1		result
	m	()Lanw;	c	asProvider
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	Lamc;	d	metadata
	f	Ljava/util/Set;	e	namespaces
	f	Ljava/util/List;	f	rootPaths
	f	Ljava/util/Map;	g	pathsForType
c	aml	net/minecraft/server/packs/VanillaPackResourcesBuilder
	m	()Laml;	a	pushJarResources
	m	(Lamc;)Laml;	a	setMetadata
		p	1		metadataMap
	m	(Lami;)Ljava/util/Set;	a	lambda$pushPathForType$2
		p	0		type2
	m	(Lami;Ljava/lang/Class;)Laml;	a	pushClasspathResources
		p	1		type
		p	2		clazz
	m	(Lami;Ljava/nio/file/Path;)Laml;	a	pushAssetPath
		p	1		type
		p	2		path
	m	(Laml;)V	a	lambda$static$0
		p	0		builder
	m	(Ljava/net/URI;)Ljava/nio/file/Path;	a	safeGetPath
		p	0		uri
	m	(Ljava/nio/file/Path;)Laml;	a	pushUniversalPath
		p	1		root
	m	(Ljava/util/Collection;)Ljava/util/List;	a	copyAndReverse
		p	0		paths
	m	([Ljava/lang/String;)Laml;	a	exposeNamespace
		p	1		namespaces
	m	()Laml;	b	applyDevelopmentConfig
	m	(Lami;Ljava/nio/file/Path;)V	b	pushPathForType
		p	1		type
		p	2		path
	m	(Ljava/nio/file/Path;)Z	b	validateDirPath
		p	1		path
	m	()Lamk;	c	build
	m	(Lami;Ljava/nio/file/Path;)V	c	lambda$pushJarResources$3
		p	1		type
		p	2		path
	m	(Ljava/nio/file/Path;)V	c	pushRootPath
		p	1		path
	m	()Lcom/google/common/collect/ImmutableMap;	d	lambda$static$1
	f	Ljava/util/function/Consumer;	a	developmentConfig
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ljava/util/Map;	c	ROOT_DIR_BY_TYPE
	f	Ljava/util/Set;	d	rootPaths
	f	Ljava/util/Map;	e	pathsForType
	f	Lamc;	f	metadata
	f	Ljava/util/Set;	g	namespaces
c	amm	net/minecraft/server/packs/linkfs/DummyFileAttributes
	f	Ljava/nio/file/attribute/FileTime;	a	EPOCH
c	amn	net/minecraft/server/packs/linkfs/LinkFSFileStore
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		name
	f	Ljava/lang/String;	a	name
c	amo	net/minecraft/server/packs/linkfs/LinkFSPath
	m	(Lamq;Ljava/lang/String;Lamo;Lamr;)V	<init>	<init>
		p	1		fileSystem
		p	2		name
		p	3		parent
		p	4		file
	m	()Lamq;	a	getFileSystem
	m	(I)Lamo;	a	getName
	m	(II)Lamo;	a	subpath
	m	(Lamo;Ljava/lang/String;)Lamo;	a	createRelativePath
		p	1		path
		p	2		name
	m	(Lamr;)Z	a	isRelativeOrMissing
		p	0		file
	m	(Ljava/lang/String;)Lamo;	a	resolveName
		p	1		name
	m	(Ljava/nio/file/Path;)Lamo;	a	resolve
	m	(Ljava/util/List;)Lamo;	a	resolve
		p	1		paths
	m	([Ljava/nio/file/LinkOption;)Lamo;	a	toRealPath
	m	()Lamo;	b	getRoot
	m	(Ljava/nio/file/Path;)Lamo;	b	relativize
	m	()Lamo;	c	getFileName
	m	(Ljava/nio/file/Path;)Lamo;	c	toLinkPath
		p	1		path
	m	()Lamo;	d	getParent
	m	()Lamo;	e	normalize
	m	()Lamo;	f	toAbsolutePath
	m	()Z	g	exists
	m	()Ljava/nio/file/Path;	h	getTargetPath
	m	()Lamr$a;	i	getDirectoryContents
	m	()Ljava/nio/file/attribute/BasicFileAttributeView;	j	getBasicAttributeView
	m	()Ljava/nio/file/attribute/BasicFileAttributes;	k	getBasicAttributes
	m	()Ljava/util/List;	l	pathToRoot
	m	()Z	m	hasRealContents
	m	()Ljava/lang/String;	n	pathToString
	f	Ljava/nio/file/attribute/BasicFileAttributes;	a	DIRECTORY_ATTRIBUTES
	f	Ljava/nio/file/attribute/BasicFileAttributes;	b	FILE_ATTRIBUTES
	f	Ljava/util/Comparator;	c	PATH_COMPARATOR
	f	Ljava/lang/String;	d	name
	f	Lamq;	e	fileSystem
	f	Lamo;	f	parent
	f	Ljava/util/List;	g	pathToRoot
	f	Ljava/lang/String;	h	pathString
	f	Lamr;	i	pathContents
c	amo$1	net/minecraft/server/packs/linkfs/LinkFSPath$1
c	amo$2	net/minecraft/server/packs/linkfs/LinkFSPath$2
c	amo$3	net/minecraft/server/packs/linkfs/LinkFSPath$3
	f	Lamo;	a	this$0
c	amp	net/minecraft/server/packs/linkfs/LinkFSProvider
	m	(Ljava/nio/file/Path;)Lamo;	a	toLinkPath
		p	0		path
	f	Ljava/lang/String;	a	SCHEME
c	amp$1	net/minecraft/server/packs/linkfs/LinkFSProvider$1
	m	(Lamo;)Ljava/nio/file/Path;	a	lambda$iterator$1
		p	0		child
	m	(Ljava/nio/file/DirectoryStream$Filter;Lamo;)Z	a	lambda$iterator$0
		p	1		child
	f	Lamr$a;	a	val$directoryContents
	f	Ljava/nio/file/DirectoryStream$Filter;	b	val$filter
	f	Lamp;	c	this$0
c	amp$2	net/minecraft/server/packs/linkfs/LinkFSProvider$2
	f	[I	a	$SwitchMap$java$nio$file$AccessMode
c	amq	net/minecraft/server/packs/linkfs/LinkFileSystem
	m	(Ljava/lang/String;Lamq$b;)V	<init>	<init>
		p	1		name
		p	2		root
	m	()Ljava/nio/file/FileStore;	a	store
	m	(Lamq$b;Lamq;Ljava/lang/String;Lamo;)Lamo;	a	buildPath
		p	0		root
		p	1		fileSystem
		p	2		name
		p	3		parent
	m	(Lit/unimi/dsi/fastutil/objects/Object2ObjectOpenHashMap;Lamq;Lamo;Ljava/lang/String;Lamq$b;)V	a	lambda$buildPath$1
		p	3		directoryName
		p	4		directory
	m	(Lit/unimi/dsi/fastutil/objects/Object2ObjectOpenHashMap;Lamq;Lamo;Ljava/lang/String;Ljava/nio/file/Path;)V	a	lambda$buildPath$0
		p	3		fileName
		p	4		path
	m	()Lamo;	b	rootPath
	m	()Lamq$a;	c	builder
	f	Ljava/lang/String;	a	PATH_SEPARATOR
	f	Ljava/util/Set;	b	VIEWS
	f	Lcom/google/common/base/Splitter;	c	PATH_SPLITTER
	f	Ljava/nio/file/FileStore;	d	store
	f	Ljava/nio/file/spi/FileSystemProvider;	e	provider
	f	Lamo;	f	root
c	amq$a	net/minecraft/server/packs/linkfs/LinkFileSystem$Builder
	m	(Ljava/lang/String;)Ljava/nio/file/FileSystem;	a	build
		p	1		name
	m	(Ljava/util/List;Ljava/lang/String;Ljava/nio/file/Path;)Lamq$a;	a	put
		p	1		directories
		p	2		name
		p	3		path
	m	(Ljava/util/List;Ljava/nio/file/Path;)Lamq$a;	a	put
		p	1		directories
		p	2		path
	m	(Ljava/lang/String;)Lamq$b;	b	lambda$put$0
		p	0		directory
	f	Lamq$b;	a	root
c	amq$b	net/minecraft/server/packs/linkfs/LinkFileSystem$DirectoryEntry
	m	()Ljava/util/Map;	a	children
	m	()Ljava/util/Map;	b	files
	f	Ljava/util/Map;	a	children
	f	Ljava/util/Map;	b	files
c	amr	net/minecraft/server/packs/linkfs/PathContents
	f	Lamr;	a	MISSING
	f	Lamr;	b	RELATIVE
c	amr$1	net/minecraft/server/packs/linkfs/PathContents$1
c	amr$2	net/minecraft/server/packs/linkfs/PathContents$2
c	amr$a	net/minecraft/server/packs/linkfs/PathContents$DirectoryContents
	m	()Ljava/util/Map;	a	children
	f	Ljava/util/Map;	c	children
c	amr$b	net/minecraft/server/packs/linkfs/PathContents$FileContents
	m	()Ljava/nio/file/Path;	a	contents
	f	Ljava/nio/file/Path;	c	contents
c	ams	net/minecraft/server/packs/linkfs/package-info
c	amt	net/minecraft/server/packs/metadata/MetadataSectionSerializer
	m	()Ljava/lang/String;	a	getMetadataSectionName
	m	(Lcom/google/gson/JsonObject;)Ljava/lang/Object;	a	fromJson
		p	1		json
c	amu	net/minecraft/server/packs/metadata/MetadataSectionType
	m	(Ljava/lang/Object;)Lcom/google/gson/JsonObject;	a	toJson
		p	1		metadata
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lamu;	a	fromCodec
		p	0		key
		p	1		codec
c	amu$1	net/minecraft/server/packs/metadata/MetadataSectionType$1
	m	()Ljava/lang/String;	a	getMetadataSectionName
	m	(Lcom/google/gson/JsonObject;)Ljava/lang/Object;	a	fromJson
		p	1		json
	m	(Ljava/lang/Object;)Lcom/google/gson/JsonObject;	a	toJson
		p	1		metadata
	f	Ljava/lang/String;	a	val$name
	f	Lcom/mojang/serialization/Codec;	b	val$codec
c	amv	net/minecraft/server/packs/metadata/pack/PackMetadataSection
	m	(Ltl;ILjava/util/Optional;)V	<init>	<init>
		p	1		description
		p	2		format
	m	()Ltl;	a	description
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()I	b	packFormat
	m	()Ljava/util/Optional;	c	supportedFormats
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lamu;	b	TYPE
	f	Ltl;	c	description
	f	I	d	packFormat
	f	Ljava/util/Optional;	e	supportedFormats
c	amw	net/minecraft/server/packs/metadata/pack/package-info
c	amx	net/minecraft/server/packs/metadata/package-info
c	amy	net/minecraft/server/packs/package-info
c	amz	net/minecraft/server/packs/repository/BuiltInPackSource
	m	(Lami;Lamk;Laew;Lehd;)V	<init>	<init>
		p	1		type
		p	2		resourcePack
		p	3		id
		p	4		symlinkFinder
	m	()Lamk;	a	getVanillaPack
	m	(Lamh;)Lanb;	a	createVanillaPack
		p	1		pack
	m	(Lanb$c;Ljava/lang/String;)Lanb;	a	lambda$discoverPacksInPath$2
		p	2		name
	m	(Ljava/lang/String;)Ltl;	a	getPackTitle
		p	1		id
	m	(Ljava/lang/String;Lanb$c;Ltl;)Lanb;	a	createBuiltinPack
		p	1		name
		p	2		packFactory
		p	3		displayName
	m	(Ljava/nio/file/Path;)Ljava/lang/String;	a	pathToId
		p	0		path
	m	(Ljava/nio/file/Path;Ljava/util/function/BiConsumer;)V	a	discoverPacksInPath
		p	1		namespacedPath
		p	2		consumer
	m	(Ljava/util/function/BiConsumer;)V	a	populatePackList
		p	1		consumer
	m	(Ljava/util/function/BiConsumer;Ljava/nio/file/Path;)V	a	lambda$populatePackList$1
		p	2		namespacedPath
	m	(Ljava/util/function/BiConsumer;Ljava/nio/file/Path;Lanb$c;)V	a	lambda$discoverPacksInPath$3
		p	2		profilePath
		p	3		factory
	m	(Ljava/util/function/Consumer;)V	a	loadPacks
		p	1		profileAdder
	m	(Ljava/util/function/Consumer;Ljava/lang/String;Ljava/util/function/Function;)V	a	lambda$listBundledPacks$0
		p	1		fileName
		p	2		packFactory
	m	(Lamh;)Lanb$c;	b	fixedResources
		p	0		pack
	m	(Ljava/util/function/Consumer;)V	b	listBundledPacks
		p	1		consumer
	f	Ljava/lang/String;	a	VANILLA_ID
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Lami;	c	packType
	f	Lamk;	d	vanillaPack
	f	Laew;	e	packDir
	f	Lehd;	f	validator
c	amz$1	net/minecraft/server/packs/repository/BuiltInPackSource$1
	m	(Ljava/lang/String;)Lamh;	a	openPrimary
		p	1		name
	m	(Ljava/lang/String;Lanb$a;)Lamh;	a	openFull
		p	1		name
		p	2		metadata
	f	Lamh;	a	val$instance
c	ana	net/minecraft/server/packs/repository/FolderRepositorySource
	m	(Ljava/nio/file/Path;Lami;Lanf;Lehd;)V	<init>	<init>
		p	1		packsDir
		p	2		type
		p	3		source
		p	4		symlinkFinder
	m	(Ljava/nio/file/Path;)Ljava/lang/String;	a	nameFromPath
		p	0		path
	m	(Ljava/nio/file/Path;Lehd;ZLjava/util/function/BiConsumer;)V	a	discoverPacks
		p	0		path
		p	1		symlinkFinder
		p	2		alwaysStable
		p	3		consumer
	m	(Ljava/util/function/Consumer;)V	a	loadPacks
		p	1		profileAdder
	m	(Ljava/util/function/Consumer;Ljava/nio/file/Path;Lanb$c;)V	a	lambda$loadPacks$0
		p	2		path
		p	3		packFactory
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/nio/file/Path;	b	folder
	f	Lami;	c	packType
	f	Lanf;	d	packSource
	f	Lehd;	e	validator
c	ana$a	net/minecraft/server/packs/repository/FolderRepositorySource$FolderPackDetector
	m	(Lehd;Z)V	<init>	<init>
		p	1		symlinkFinder
		p	2		alwaysStable
	m	(Ljava/nio/file/Path;)Lanb$c;	a	createZipPack
	m	(Ljava/nio/file/Path;)Lanb$c;	b	createDirectoryPack
	m	(Ljava/nio/file/Path;)Ljava/lang/Object;	c	createDirectoryPack
		p	1		path
	m	(Ljava/nio/file/Path;)Ljava/lang/Object;	d	createZipPack
		p	1		path
	f	Z	a	isBuiltin
c	anb	net/minecraft/server/packs/repository/Pack
	m	(Ljava/lang/String;ZLanb$c;Ltl;Lanb$a;Lanb$b;ZLanf;)V	<init>	<init>
		p	1		name
		p	2		alwaysEnabled
		p	3		packFactory
		p	4		displayName
		p	5		metadata
		p	6		position
		p	7		pinned
		p	8		source
	m	()Ltl;	a	getTitle
	m	(Ljava/lang/String;Lamv;)Larp;	a	getDeclaredPackVersions
		p	0		packName
		p	1		metadata
	m	(Ljava/lang/String;Lanb$c;I)Lanb$a;	a	readPackInfo
		p	0		name
		p	1		packFactory
		p	2		currentPackFormat
	m	(Ljava/lang/String;Ltl;ZLanb$c;Lami;Lanb$b;Lanf;)Lanb;	a	readMetaAndCreate
		p	0		name
		p	1		displayName
		p	2		alwaysEnabled
		p	3		packFactory
		p	4		type
		p	5		position
		p	6		source
	m	(Ljava/lang/String;Ltl;ZLanb$c;Lanb$a;Lanb$b;ZLanf;)Lanb;	a	create
		p	0		name
		p	1		displayName
		p	2		alwaysEnabled
		p	3		packFactory
		p	4		metadata
		p	5		position
		p	6		pinned
		p	7		source
	m	(Z)Ltl;	a	getChatLink
		p	1		enabled
	m	(ZLuh;)Luh;	a	lambda$getChatLink$0
		p	2		style
	m	()Ltl;	b	getDescription
	m	()Lanc;	c	getCompatibility
	m	()Lcec;	d	getRequestedFeatures
	m	()Lamh;	e	open
	m	()Ljava/lang/String;	f	getId
	m	()Z	g	isRequired
	m	()Z	h	isFixedPosition
	m	()Lanb$b;	i	getDefaultPosition
	m	()Lanf;	j	getPackSource
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/lang/String;	b	id
	f	Lanb$c;	c	resources
	f	Ltl;	d	title
	f	Lanb$a;	e	info
	f	Lanb$b;	f	defaultPosition
	f	Z	g	required
	f	Z	h	fixedPosition
	f	Lanf;	i	packSource
c	anb$a	net/minecraft/server/packs/repository/Pack$Info
	m	()Ltl;	a	description
	m	()Lanc;	b	compatibility
	m	()Lcec;	c	requestedFeatures
	m	()Ljava/util/List;	d	overlays
	f	Ltl;	a	description
	f	Lanc;	b	compatibility
	f	Lcec;	c	requestedFeatures
	f	Ljava/util/List;	d	overlays
c	anb$b	net/minecraft/server/packs/repository/Pack$Position
	m	()Lanb$b;	a	opposite
	m	(Ljava/util/List;Ljava/lang/Object;Ljava/util/function/Function;Z)I	a	insert
		p	1		items
		p	2		item
		p	3		profileGetter
		p	4		listInverted
	m	()[Lanb$b;	b	$values
	f	Lanb$b;	a	TOP
	f	Lanb$b;	b	BOTTOM
	f	[Lanb$b;	c	$VALUES
c	anb$c	net/minecraft/server/packs/repository/Pack$ResourcesSupplier
	m	(Ljava/lang/String;)Lamh;	a	openPrimary
		p	1		name
	m	(Ljava/lang/String;Lanb$a;)Lamh;	a	openFull
		p	1		name
		p	2		metadata
c	anc	net/minecraft/server/packs/repository/PackCompatibility
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		translationSuffix
	m	()Z	a	isCompatible
	m	(Larp;I)Lanc;	a	forVersion
		p	0		range
		p	1		current
	m	()Ltl;	b	getDescription
	m	()Ltl;	c	getConfirmation
	m	()[Lanc;	d	$values
	f	Lanc;	a	TOO_OLD
	f	Lanc;	b	TOO_NEW
	f	Lanc;	c	COMPATIBLE
	f	Ltl;	d	description
	f	Ltl;	e	confirmation
	f	[Lanc;	f	$VALUES
c	and	net/minecraft/server/packs/repository/PackDetector
	m	(Lehd;)V	<init>	<init>
		p	1		symlinkFinder
	m	(Ljava/nio/file/Path;Ljava/util/List;)Ljava/lang/Object;	a	detectPackResources
		p	1		path
		p	2		foundSymlinks
	m	(Ljava/nio/file/Path;)Ljava/lang/Object;	c	createDirectoryPack
		p	1		path
	m	(Ljava/nio/file/Path;)Ljava/lang/Object;	d	createZipPack
		p	1		path
	f	Lehd;	a	validator
c	ane	net/minecraft/server/packs/repository/PackRepository
	m	([Lang;)V	<init>	<init>
		p	1		providers
	m	()V	a	reload
	m	(Ljava/lang/String;)Z	a	addPack
		p	1		profile
	m	(Ljava/util/Collection;)V	a	setSelected
		p	1		enabled
	m	(Ljava/util/Map;Lanb;)V	a	lambda$discoverAvailable$0
		p	1		profile
	m	()Ljava/util/Collection;	b	getAvailableIds
	m	(Ljava/lang/String;)Z	b	removePack
		p	1		profile
	m	(Ljava/util/Collection;)Ljava/util/List;	b	rebuildSelected
		p	1		enabledNames
	m	()Ljava/util/Collection;	c	getAvailablePacks
	m	(Ljava/lang/String;)Lanb;	c	getPack
		p	1		name
	m	(Ljava/util/Collection;)Ljava/util/stream/Stream;	c	getAvailablePacks
		p	1		names
	m	()Ljava/util/Collection;	d	getSelectedIds
	m	(Ljava/lang/String;)Z	d	isAvailable
		p	1		name
	m	()Lcec;	e	getRequestedFeatureFlags
	m	()Ljava/util/Collection;	f	getSelectedPacks
	m	()Ljava/util/List;	g	openAllSelected
	m	()Ljava/util/Map;	h	discoverAvailable
	f	Ljava/util/Set;	a	sources
	f	Ljava/util/Map;	b	available
	f	Ljava/util/List;	c	selected
c	anf	net/minecraft/server/packs/repository/PackSource
	m	()Z	a	shouldAddAutomatically
	m	(Ljava/lang/String;)Ljava/util/function/UnaryOperator;	a	decorateWithSource
		p	0		translationKey
	m	(Ljava/util/function/UnaryOperator;Z)Lanf;	a	create
		p	0		sourceTextSupplier
		p	1		canBeEnabledLater
	m	(Ltl;)Ltl;	a	decorate
		p	1		packName
	m	(Ltl;Ltl;)Ltl;	a	lambda$decorateWithSource$0
		p	1		name
	f	Ljava/util/function/UnaryOperator;	a	NO_DECORATION
	f	Lanf;	b	DEFAULT
	f	Lanf;	c	BUILT_IN
	f	Lanf;	d	FEATURE
	f	Lanf;	e	WORLD
	f	Lanf;	f	SERVER
c	anf$1	net/minecraft/server/packs/repository/PackSource$1
	m	()Z	a	shouldAddAutomatically
	m	(Ltl;)Ltl;	a	decorate
		p	1		packName
	f	Ljava/util/function/UnaryOperator;	g	val$decorator
	f	Z	h	val$addAutomatically
c	ang	net/minecraft/server/packs/repository/RepositorySource
	m	(Ljava/util/function/Consumer;)V	a	loadPacks
		p	1		profileAdder
c	anh	net/minecraft/server/packs/repository/ServerPacksSource
	m	(Lehd;)V	<init>	<init>
		p	1		symlinkFinder
	m	(Lamh;)Lanb;	a	createVanillaPack
		p	1		pack
	m	(Lecg$c;)Lane;	a	createPackRepository
		p	0		session
	m	(Ljava/lang/String;)Ltl;	a	getPackTitle
		p	1		id
	m	(Ljava/lang/String;Lanb$c;Ltl;)Lanb;	a	createBuiltinPack
		p	1		name
		p	2		packFactory
		p	3		displayName
	m	(Ljava/nio/file/Path;)Z	a	lambda$createVanillaTrustedRepository$0
	m	(Ljava/nio/file/Path;Lehd;)Lane;	a	createPackRepository
		p	0		dataPacksPath
	m	()Lamk;	b	createVanillaPackSource
	m	()Lane;	c	createVanillaTrustedRepository
	f	Lamv;	b	VERSION_METADATA_SECTION
	f	Lame;	c	FEATURE_FLAGS_METADATA_SECTION
	f	Lamc;	d	BUILT_IN_METADATA
	f	Ltl;	e	VANILLA_NAME
	f	Laew;	f	PACKS_DIR
c	ani	net/minecraft/server/packs/repository/package-info
c	anj	net/minecraft/server/packs/resources/CloseableResourceManager
c	ank	net/minecraft/server/packs/resources/FallbackResourceManager
	m	(Lami;Ljava/lang/String;)V	<init>	<init>
		p	1		type
		p	2		namespace
	m	()Ljava/util/Set;	a	getNamespaces
	m	(Laew;)Ljava/util/List;	a	getResourceStack
		p	1		id
	m	(Laew;I)Lanl;	a	createStackMetadataFinder
		p	1		id
		p	2		index
	m	(Laew;Lamh;Lanl;)Lanl;	a	wrapForDebug
		p	0		id
		p	1		pack
		p	2		supplier
	m	(Lamh;)V	a	push
		p	1		pack
	m	(Lamh;Laew;)Lanv;	a	lambda$getResourceStack$1
	m	(Lamh;Laew;Lanl;Lanl;)Lanr;	a	createResource
		p	0		pack
		p	1		id
		p	2		supplier
		p	3		metadataSupplier
	m	(Lamh;Ljava/util/function/Predicate;)V	a	push
		p	1		pack
		p	2		filter
	m	(Lank$d;)Lamh;	a	lambda$listPacks$7
		p	0		pack
	m	(Lank$d;Ljava/lang/String;Ljava/util/function/Predicate;Ljava/util/Map;)V	a	listPackResources
		p	1		pack
		p	2		startingPath
		p	3		allowedPathPredicate
		p	4		idToEntryList
	m	(Lank$d;Ljava/util/Map;)V	a	applyPackFiltersToExistingResources
		p	0		pack
		p	1		idToEntryList
	m	(Lanl;)Lanl;	a	convertToMetadata
		p	0		supplier
	m	(Lanl;Laew;Lamh;)Ljava/io/InputStream;	a	lambda$wrapForDebug$0
	m	(Ljava/lang/String;Lamh;Ljava/util/function/Predicate;)V	a	pushInternal
		p	1		name
		p	2		underlyingPack
		p	3		filter
	m	(Ljava/lang/String;Ljava/util/function/Predicate;)V	a	pushFilterOnly
		p	1		name
		p	2		filter
	m	(Ljava/util/Map;Ljava/util/Map;Laew;Lank$a;)V	a	lambda$listResources$3
		p	2		id
		p	3		result
	m	(Ljava/util/function/Predicate;Ljava/util/Map;Lamh;ILjava/util/Map;Laew;Lanl;)V	a	lambda$listResources$2
		p	5		id
		p	6		supplier
	m	(Ljava/util/function/Predicate;Ljava/util/Map;Lamh;Laew;Lanl;)V	a	lambda$listPackResources$6
		p	3		id
		p	4		supplier
	m	()Ljava/util/stream/Stream;	b	listPacks
	m	(Laew;)Z	b	isMetadata
		p	0		id
	m	(Laew;I)Lanv;	b	lambda$createStackMetadataFinder$4
	m	(Lanl;)Lanv;	b	parseMetadata
		p	0		supplier
	m	(Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map;	b	listResources
		p	1		startingPath
		p	2		allowedPathPredicate
	m	(Laew;)Laew;	c	getResourceLocationFromMetadata
		p	0		id
	m	(Lanl;)Lanv;	c	lambda$convertToMetadata$5
	m	(Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map;	c	listResourceStacks
		p	1		startingPath
		p	2		allowedPathPredicate
	m	(Laew;)Laew;	d	getMetadataLocation
		p	0		id
	m	(Laew;)Ljava/util/Optional;	getResource	getResource
		p	1		id
	f	Ljava/util/List;	a	fallbacks
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Lami;	c	type
	f	Ljava/lang/String;	d	namespace
c	ank$a	net/minecraft/server/packs/resources/FallbackResourceManager$1ResourceWithSourceAndIndex
	m	()Lamh;	a	packResources
	m	()Lanl;	b	resource
	m	()I	c	packIndex
	f	Lamh;	a	packResources
	f	Lanl;	b	resource
	f	I	c	packIndex
c	ank$b	net/minecraft/server/packs/resources/FallbackResourceManager$EntryStack
	m	(Laew;)V	<init>	<init>
		p	1		id
	m	()Laew;	a	fileLocation
	m	()Laew;	b	metadataLocation
	m	()Ljava/util/List;	c	fileSources
	m	()Ljava/util/Map;	d	metaSources
	f	Laew;	a	fileLocation
	f	Laew;	b	metadataLocation
	f	Ljava/util/List;	c	fileSources
	f	Ljava/util/Map;	d	metaSources
c	ank$c	net/minecraft/server/packs/resources/FallbackResourceManager$LeakedResourceWarningInputStream
	m	(Ljava/io/InputStream;Laew;Ljava/lang/String;)V	<init>	<init>
		p	1		parent
		p	2		id
		p	3		packName
	m	(Ljava/lang/Exception;Laew;Ljava/lang/String;)Ljava/lang/String;	a	lambda$new$0
	f	Ljava/util/function/Supplier;	a	message
	f	Z	b	closed
c	ank$d	net/minecraft/server/packs/resources/FallbackResourceManager$PackEntry
	m	()Ljava/lang/String;	a	name
	m	(Laew;)Z	a	isFiltered
		p	1		id
	m	(Ljava/util/Collection;)V	a	filterAll
		p	1		ids
	m	()Lamh;	b	resources
	m	()Ljava/util/function/Predicate;	c	filter
	f	Ljava/lang/String;	a	name
	f	Lamh;	b	resources
	f	Ljava/util/function/Predicate;	c	filter
c	ank$e	net/minecraft/server/packs/resources/FallbackResourceManager$ResourceWithSource
	m	()Lamh;	a	source
	m	()Lanl;	b	resource
	f	Lamh;	a	source
	f	Lanl;	b	resource
c	anl	net/minecraft/server/packs/resources/IoSupplier
	m	(Ljava/nio/file/Path;)Ljava/io/InputStream;	a	lambda$create$0
	m	(Ljava/util/zip/ZipFile;Ljava/util/zip/ZipEntry;)Ljava/io/InputStream;	a	lambda$create$1
	m	(Ljava/nio/file/Path;)Lanl;	create	create
		p	0		path
	m	(Ljava/util/zip/ZipFile;Ljava/util/zip/ZipEntry;)Lanl;	create	create
		p	0		zipFile
		p	1		zipEntry
c	anm	net/minecraft/server/packs/resources/MultiPackResourceManager
	m	(Lami;Ljava/util/List;)V	<init>	<init>
		p	1		type
		p	2		packs
	m	()Ljava/util/Set;	a	getNamespaces
	m	(Laew;)Ljava/util/List;	a	getResourceStack
		p	1		id
	m	(Lamh;)Lans;	a	getPackFilterSection
		p	1		pack
	m	(Lami;Lamh;)Ljava/util/stream/Stream;	a	lambda$new$0
		p	1		pack
	m	(Lans;Laew;)Z	a	lambda$new$1
		p	1		id
	m	(Ljava/lang/String;)V	a	checkTrailingDirectoryPath
		p	0		startingPath
	m	()Ljava/util/stream/Stream;	b	listPacks
	m	(Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map;	b	listResources
		p	1		startingPath
		p	2		allowedPathPredicate
	m	(Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map;	c	listResourceStacks
		p	1		startingPath
		p	2		allowedPathPredicate
	m	(Laew;)Ljava/util/Optional;	getResource	getResource
		p	1		id
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/Map;	b	namespacedManagers
	f	Ljava/util/List;	c	packs
c	ann	net/minecraft/server/packs/resources/PreparableReloadListener
	m	(Lann$a;Lant;Lbdp;Lbdp;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	reload
		p	1		synchronizer
		p	2		manager
		p	3		prepareProfiler
		p	4		applyProfiler
		p	5		prepareExecutor
		p	6		applyExecutor
	m	()Ljava/lang/String;	c	getName
c	ann$a	net/minecraft/server/packs/resources/PreparableReloadListener$PreparationBarrier
	m	(Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture;	a	wait
		p	1		preparedObject
c	ano	net/minecraft/server/packs/resources/ProfiledReloadInstance
	m	(Lant;Ljava/util/List;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
		p	1		manager
		p	2		reloaders
		p	3		prepareExecutor
		p	4		applyExecutor
		p	5		initialStage
	m	(Lann;Lbdi;Lbdi;Ljava/util/concurrent/atomic/AtomicLong;Ljava/util/concurrent/atomic/AtomicLong;Ljava/lang/Void;)Lano$a;	a	lambda$new$6
		p	5		dummy
	m	(Ljava/lang/Runnable;Ljava/util/concurrent/atomic/AtomicLong;)V	a	lambda$new$4
	m	(Ljava/util/List;)Ljava/util/List;	a	finish
		p	1		summaries
	m	(Ljava/util/concurrent/Executor;Lann$a;Lant;Lann;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	lambda$new$7
		p	1		synchronizer
		p	2		resourceManager
		p	3		reloader
		p	4		prepare
		p	5		apply
	m	(Ljava/util/concurrent/Executor;Ljava/util/concurrent/atomic/AtomicLong;Ljava/lang/Runnable;)V	a	lambda$new$5
		p	2		application
	m	(Ljava/lang/Runnable;Ljava/util/concurrent/atomic/AtomicLong;)V	b	lambda$new$2
	m	(Ljava/util/concurrent/Executor;Ljava/util/concurrent/atomic/AtomicLong;Ljava/lang/Runnable;)V	b	lambda$new$3
		p	2		preparation
	m	()I	e	lambda$new$1
	m	()I	f	lambda$new$0
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	Lcom/google/common/base/Stopwatch;	d	total
c	ano$a	net/minecraft/server/packs/resources/ProfiledReloadInstance$State
	m	(Ljava/lang/String;Lbdo;Lbdo;Ljava/util/concurrent/atomic/AtomicLong;Ljava/util/concurrent/atomic/AtomicLong;)V	<init>	<init>
		p	1		name
		p	2		prepareProfile
		p	3		applyProfile
		p	4		prepareTimeMs
		p	5		applyTimeMs
	f	Ljava/lang/String;	a	name
	f	Lbdo;	b	preparationResult
	f	Lbdo;	c	reloadResult
	f	Ljava/util/concurrent/atomic/AtomicLong;	d	preparationNanos
	f	Ljava/util/concurrent/atomic/AtomicLong;	e	reloadNanos
c	anp	net/minecraft/server/packs/resources/ReloadInstance
	m	()Ljava/util/concurrent/CompletableFuture;	a	done
	m	()F	b	getActualProgress
	m	()Z	c	isDone
	m	()V	d	checkExceptions
c	anq	net/minecraft/server/packs/resources/ReloadableResourceManager
	m	(Lami;)V	<init>	<init>
		p	1		type
	m	()Ljava/util/Set;	a	getNamespaces
	m	(Laew;)Ljava/util/List;	a	getResourceStack
		p	1		id
	m	(Lann;)V	a	registerReloadListener
		p	1		reloader
	m	(Ljava/util/List;)Ljava/lang/Object;	a	lambda$createReload$0
	m	(Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/CompletableFuture;Ljava/util/List;)Lanp;	a	createReload
		p	1		prepareExecutor
		p	2		applyExecutor
		p	3		initialStage
		p	4		packs
	m	()Ljava/util/stream/Stream;	b	listPacks
	m	(Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map;	b	listResources
		p	1		startingPath
		p	2		allowedPathPredicate
	m	(Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map;	c	listResourceStacks
		p	1		startingPath
		p	2		allowedPathPredicate
	m	(Laew;)Ljava/util/Optional;	getResource	getResource
		p	1		id
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lanj;	b	resources
	f	Ljava/util/List;	c	listeners
	f	Lami;	d	type
c	anr	net/minecraft/server/packs/resources/Resource
	m	(Lamh;Lanl;)V	<init>	<init>
		p	1		pack
		p	2		inputSupplier
	m	(Lamh;Lanl;Lanl;)V	<init>	<init>
		p	1		pack
		p	2		inputSupplier
		p	3		metadataSupplier
	m	()Lamh;	a	source
	m	()Ljava/lang/String;	b	sourcePackId
	m	()Z	c	isBuiltin
	m	()Ljava/io/InputStream;	d	open
	m	()Ljava/io/BufferedReader;	e	openAsReader
	m	()Lanv;	f	metadata
	f	Lamh;	a	source
	f	Lanl;	b	streamSupplier
	f	Lanl;	c	metadataSupplier
	f	Lanv;	d	cachedMetadata
c	ans	net/minecraft/server/packs/resources/ResourceFilterSection
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		blocks
	m	(Lans;)Ljava/util/List;	a	lambda$static$0
		p	0		filter
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Ljava/lang/String;)Z	a	isNamespaceFiltered
		p	1		namespace
	m	(Ljava/lang/String;Lasd;)Z	a	lambda$isPathFiltered$3
		p	1		block
	m	(Ljava/lang/String;)Z	b	isPathFiltered
		p	1		namespace
	m	(Ljava/lang/String;Lasd;)Z	b	lambda$isNamespaceFiltered$2
		p	1		block
	f	Lamu;	a	TYPE
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Ljava/util/List;	c	blockList
c	ant	net/minecraft/server/packs/resources/ResourceManager
	m	()Ljava/util/Set;	a	getNamespaces
	m	(Laew;)Ljava/util/List;	a	getResourceStack
		p	1		id
	m	()Ljava/util/stream/Stream;	b	listPacks
	m	(Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map;	b	listResources
		p	1		startingPath
		p	2		allowedPathPredicate
	m	(Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map;	c	listResourceStacks
		p	1		startingPath
		p	2		allowedPathPredicate
c	ant$a	net/minecraft/server/packs/resources/ResourceManager$Empty
	m	()Ljava/util/Set;	a	getNamespaces
	m	(Laew;)Ljava/util/List;	a	getResourceStack
		p	1		id
	m	()Ljava/util/stream/Stream;	b	listPacks
	m	(Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map;	b	listResources
		p	1		startingPath
		p	2		allowedPathPredicate
	m	()[Lant$a;	c	$values
	m	(Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map;	c	listResourceStacks
		p	1		startingPath
		p	2		allowedPathPredicate
	m	(Laew;)Ljava/util/Optional;	getResource	getResource
		p	1		id
	f	Lant$a;	a	INSTANCE
	f	[Lant$a;	b	$VALUES
c	anu	net/minecraft/server/packs/resources/ResourceManagerReloadListener
	m	(Lann$a;Lant;Lbdp;Lbdp;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	reload
		p	1		synchronizer
		p	2		manager
		p	3		prepareProfiler
		p	4		applyProfiler
		p	5		prepareExecutor
		p	6		applyExecutor
	m	(Lant;)V	a	onResourceManagerReload
		p	1		manager
	m	(Lbdp;Lant;)V	a	lambda$reload$0
c	anv	net/minecraft/server/packs/resources/ResourceMetadata
	m	()Lanv;	a	lambda$static$0
	m	(Lamt;)Ljava/util/Optional;	a	getSection
		p	1		reader
	m	(Lanv$a;Lamt;)V	a	copySection
		p	1		builder
		p	2		reader
	m	(Lanv$a;Lamt;Ljava/lang/Object;)V	a	lambda$copySection$1
		p	2		value
	m	(Ljava/io/InputStream;)Lanv;	a	fromJsonStream
		p	0		stream
	m	(Ljava/util/Collection;)Lanv;	a	copySections
		p	1		readers
	f	Lanv;	a	EMPTY
	f	Lanl;	b	EMPTY_SUPPLIER
c	anv$1	net/minecraft/server/packs/resources/ResourceMetadata$1
	m	(Lamt;)Ljava/util/Optional;	a	getSection
		p	1		reader
c	anv$2	net/minecraft/server/packs/resources/ResourceMetadata$2
	m	(Lamt;)Ljava/util/Optional;	a	getSection
		p	1		reader
	f	Lcom/google/gson/JsonObject;	c	val$metadata
c	anv$a	net/minecraft/server/packs/resources/ResourceMetadata$Builder
	m	()Lanv;	a	build
	m	(Lamt;Ljava/lang/Object;)Lanv$a;	a	put
		p	1		reader
		p	2		value
	f	Lcom/google/common/collect/ImmutableMap$Builder;	a	map
c	anv$a$1	net/minecraft/server/packs/resources/ResourceMetadata$Builder$1
	m	(Lamt;)Ljava/util/Optional;	a	getSection
		p	1		reader
	f	Lcom/google/common/collect/ImmutableMap;	c	val$map
	f	Lanv$a;	d	this$0
c	anw	net/minecraft/server/packs/resources/ResourceProvider
	m	(Ljava/util/Map;Laew;)Ljava/util/Optional;	a	lambda$fromMap$1
		p	1		id
	m	(Laew;)Ljava/io/FileNotFoundException;	b	lambda$getResourceOrThrow$0
	m	(Ljava/util/Map;)Lanw;	fromMap	fromMap
		p	0		map
	m	(Laew;)Ljava/util/Optional;	getResource	getResource
		p	1		id
	m	(Laew;)Lanr;	getResourceOrThrow	getResourceOrThrow
		p	1		id
	m	(Laew;)Ljava/io/InputStream;	open	open
		p	1		id
	m	(Laew;)Ljava/io/BufferedReader;	openAsReader	openAsReader
		p	1		id
c	anx	net/minecraft/server/packs/resources/SimpleJsonResourceReloadListener
	m	(Lcom/google/gson/Gson;Ljava/lang/String;)V	<init>	<init>
		p	1		gson
		p	2		dataType
	m	(Lant;Lbdp;)Ljava/util/Map;	a	prepare
	m	(Lant;Ljava/lang/String;Lcom/google/gson/Gson;Ljava/util/Map;)V	a	scanDirectory
		p	0		manager
		p	1		dataType
		p	2		gson
		p	3		results
	m	(Lant;Lbdp;)Ljava/lang/Object;	b	prepare
		p	1		manager
		p	2		profiler
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lcom/google/gson/Gson;	b	gson
	f	Ljava/lang/String;	c	directory
c	any	net/minecraft/server/packs/resources/SimplePreparableReloadListener
	m	(Lann$a;Lant;Lbdp;Lbdp;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	reload
		p	1		synchronizer
		p	2		manager
		p	3		prepareProfiler
		p	4		applyProfiler
		p	5		prepareExecutor
		p	6		applyExecutor
	m	(Lant;Lbdp;)Ljava/lang/Object;	a	lambda$reload$0
	m	(Lant;Lbdp;Ljava/lang/Object;)V	a	lambda$reload$1
		p	3		prepared
	m	(Ljava/lang/Object;Lant;Lbdp;)V	a	apply
		p	1		prepared
		p	2		manager
		p	3		profiler
	m	(Lant;Lbdp;)Ljava/lang/Object;	b	prepare
		p	1		manager
		p	2		profiler
c	anz	net/minecraft/server/packs/resources/SimpleReloadInstance
	m	(Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Lant;Ljava/util/List;Lanz$a;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
		p	1		prepareExecutor
		p	2		applyExecutor
		p	3		manager
		p	4		reloaders
		p	5		factory
		p	6		initialStage
	m	()Ljava/util/concurrent/CompletableFuture;	a	done
	m	(Lant;Ljava/util/List;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/CompletableFuture;)Lanz;	a	of
		p	0		manager
		p	1		reloaders
		p	2		prepareExecutor
		p	3		applyExecutor
		p	4		initialStage
	m	(Lant;Ljava/util/List;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/CompletableFuture;Z)Lanp;	a	create
		p	0		manager
		p	1		reloaders
		p	2		prepareExecutor
		p	3		applyExecutor
		p	4		initialStage
		p	5		profiled
	m	(Ljava/lang/Runnable;)V	a	lambda$new$3
	m	(Ljava/util/concurrent/Executor;Lann$a;Lant;Lann;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	lambda$of$0
		p	1		synchronizer
		p	2		resourceManager
		p	3		reloader
		p	4		prepare
		p	5		apply
	m	(Ljava/util/concurrent/Executor;Ljava/lang/Runnable;)V	a	lambda$new$4
		p	2		application
	m	()F	b	getActualProgress
	m	(Ljava/lang/Runnable;)V	b	lambda$new$1
	m	(Ljava/util/concurrent/Executor;Ljava/lang/Runnable;)V	b	lambda$new$2
		p	2		preparation
	f	Ljava/util/concurrent/CompletableFuture;	a	allPreparations
	f	Ljava/util/concurrent/CompletableFuture;	b	allDone
	f	I	c	PREPARATION_PROGRESS_WEIGHT
	f	I	d	EXTRA_RELOAD_PROGRESS_WEIGHT
	f	I	e	LISTENER_PROGRESS_WEIGHT
	f	Ljava/util/Set;	f	preparingListeners
	f	I	g	listenerCount
	f	I	h	startedReloads
	f	I	i	finishedReloads
	f	Ljava/util/concurrent/atomic/AtomicInteger;	j	startedTaskCounter
	f	Ljava/util/concurrent/atomic/AtomicInteger;	k	doneTaskCounter
c	anz$1	net/minecraft/server/packs/resources/SimpleReloadInstance$1
	m	(Lann;)V	a	lambda$wait$0
	m	(Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture;	a	wait
		p	1		preparedObject
	m	(Ljava/lang/Object;Lasx;Ljava/lang/Object;)Ljava/lang/Object;	a	lambda$wait$1
	f	Ljava/util/concurrent/Executor;	a	val$mainThreadExecutor
	f	Lann;	b	val$listener
	f	Ljava/util/concurrent/CompletableFuture;	c	val$previousTask
	f	Lanz;	d	this$0
c	anz$a	net/minecraft/server/packs/resources/SimpleReloadInstance$StateFactory
	m	(Lann$a;Lant;Lann;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	create	create
		p	1		synchronizer
		p	2		manager
		p	3		reloader
		p	4		prepareExecutor
		p	5		applyExecutor
c	aoa	net/minecraft/server/packs/resources/package-info
c	aob	net/minecraft/server/players/BanListEntry
	m	(Ljava/lang/Object;Lcom/google/gson/JsonObject;)V	<init>	<init>
		p	1		key
		p	2		json
	m	(Ljava/lang/Object;Ljava/util/Date;Ljava/lang/String;Ljava/util/Date;Ljava/lang/String;)V	<init>	<init>
		p	1		key
		p	2		creationDate
		p	3		source
		p	4		expiryDate
		p	5		reason
	m	()Ljava/util/Date;	a	getCreated
	m	(Lcom/google/gson/JsonObject;)V	a	serialize
		p	1		json
	m	()Ljava/lang/String;	b	getSource
	m	()Ljava/util/Date;	c	getExpires
	m	()Ljava/lang/String;	d	getReason
	m	()Ltl;	e	getDisplayName
	m	()Z	f	hasExpired
	f	Ljava/text/SimpleDateFormat;	a	DATE_FORMAT
	f	Ljava/lang/String;	b	EXPIRES_NEVER
	f	Ljava/util/Date;	c	created
	f	Ljava/lang/String;	d	source
	f	Ljava/util/Date;	e	expires
	f	Ljava/lang/String;	f	reason
c	aoc	net/minecraft/server/players/GameProfileCache
	m	(Lcom/mojang/authlib/GameProfileRepository;Ljava/io/File;)V	<init>	<init>
		p	1		profileRepository
		p	2		cacheFile
	m	()V	a	clearExecutor
	m	(I)Ljava/util/stream/Stream;	a	getTopMRUProfiles
		p	1		limit
	m	(Laoc$a;)V	a	safeAdd
		p	1		entry
	m	(Laoc$a;Ljava/text/DateFormat;)Lcom/google/gson/JsonElement;	a	writeGameProfile
		p	0		entry
		p	1		dateFormat
	m	(Lcom/google/gson/JsonArray;Ljava/text/DateFormat;Laoc$a;)V	a	lambda$save$3
		p	2		entry
	m	(Lcom/google/gson/JsonElement;Ljava/text/DateFormat;)Ljava/util/Optional;	a	readGameProfile
		p	0		json
		p	1		dateFormat
	m	(Lcom/mojang/authlib/GameProfile;)V	a	add
		p	1		profile
	m	(Lcom/mojang/authlib/GameProfileRepository;Ljava/lang/String;)Ljava/util/Optional;	a	lookupGameProfile
		p	0		repository
		p	1		name
	m	(Ljava/lang/String;)Ljava/util/Optional;	a	get
		p	1		name
	m	(Ljava/lang/String;Ljava/util/Optional;Ljava/lang/Throwable;)V	a	lambda$getAsync$1
		p	2		profile
		p	3		throwable
	m	(Ljava/text/DateFormat;Ljava/util/List;Lcom/google/gson/JsonElement;)V	a	lambda$load$2
		p	2		json
	m	(Ljava/util/UUID;)Ljava/util/Optional;	a	get
		p	1		uuid
	m	(Ljava/util/concurrent/Executor;)V	a	setExecutor
		p	1		executor
	m	(Z)V	a	setUsesAuthentication
		p	0		value
	m	()Ljava/util/List;	b	load
	m	(Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;	b	getAsync
		p	1		username
	m	()V	c	save
	m	(Ljava/lang/String;)Ljava/util/Optional;	c	lambda$getAsync$0
	m	()Z	d	usesAuthentication
	m	()J	e	getNextOperation
	m	()Ljava/text/DateFormat;	f	createDateFormat
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	I	b	GAMEPROFILES_MRU_LIMIT
	f	I	c	GAMEPROFILES_EXPIRATION_MONTHS
	f	Z	d	usesAuthentication
	f	Ljava/util/Map;	e	profilesByName
	f	Ljava/util/Map;	f	profilesByUUID
	f	Ljava/util/Map;	g	requests
	f	Lcom/mojang/authlib/GameProfileRepository;	h	profileRepository
	f	Lcom/google/gson/Gson;	i	gson
	f	Ljava/io/File;	j	file
	f	Ljava/util/concurrent/atomic/AtomicLong;	k	operationCount
	f	Ljava/util/concurrent/Executor;	l	executor
c	aoc$1	net/minecraft/server/players/GameProfileCache$1
	f	Ljava/util/concurrent/atomic/AtomicReference;	a	val$result
c	aoc$a	net/minecraft/server/players/GameProfileCache$GameProfileInfo
	m	(Lcom/mojang/authlib/GameProfile;Ljava/util/Date;)V	<init>	<init>
		p	1		profile
		p	2		expirationDate
	m	()Lcom/mojang/authlib/GameProfile;	a	getProfile
	m	(J)V	a	setLastAccess
		p	1		lastAccessed
	m	()Ljava/util/Date;	b	getExpirationDate
	m	()J	c	getLastAccess
	f	Lcom/mojang/authlib/GameProfile;	a	profile
	f	Ljava/util/Date;	b	expirationDate
	f	J	c	lastAccess
c	aod	net/minecraft/server/players/IpBanList
	m	(Ljava/io/File;)V	<init>	<init>
		p	1		file
	m	(Lcom/google/gson/JsonObject;)Laok;	a	createEntry
		p	1		json
	m	(Ljava/lang/String;)Z	a	isBanned
		p	1		ip
	m	(Ljava/net/SocketAddress;)Z	a	isBanned
		p	1		ip
	m	(Ljava/net/SocketAddress;)Laoe;	b	get
		p	1		address
	m	(Ljava/net/SocketAddress;)Ljava/lang/String;	c	getIpFromAddress
		p	1		address
c	aoe	net/minecraft/server/players/IpBanListEntry
	m	(Lcom/google/gson/JsonObject;)V	<init>	<init>
		p	1		json
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		ip
	m	(Ljava/lang/String;Ljava/util/Date;Ljava/lang/String;Ljava/util/Date;Ljava/lang/String;)V	<init>	<init>
		p	1		ip
		p	2		created
		p	3		source
		p	4		expiry
		p	5		reason
	m	(Lcom/google/gson/JsonObject;)V	a	serialize
		p	1		json
	m	(Lcom/google/gson/JsonObject;)Ljava/lang/String;	b	createIpInfo
		p	0		json
	m	()Ltl;	e	getDisplayName
c	aof	net/minecraft/server/players/OldUsersConverter
	m	()Z	a	areOldUserlistsRemoved
	m	(I)[Ljava/lang/String;	a	lambda$lookupPlayers$1
	m	(Lajn;)Z	a	convertPlayers
		p	0		minecraftServer
	m	(Ljava/io/File;)V	a	ensureDirectoryExists
		p	0		directory
	m	(Ljava/io/File;Ljava/util/Map;)Ljava/util/List;	a	readOldListFormat
		p	0		file
		p	1		valueMap
	m	(Ljava/lang/String;)Z	a	lambda$lookupPlayers$0
		p	0		playerName
	m	(Ljava/lang/String;Ljava/util/Date;)Ljava/util/Date;	a	parseDate
		p	0		dateString
		p	1		fallback
	m	(Lnet/minecraft/server/MinecraftServer;)Z	a	convertUserBanlist
		p	0		server
	m	(Lnet/minecraft/server/MinecraftServer;Ljava/lang/String;)Ljava/util/UUID;	a	convertMobOwnerIfNecessary
		p	0		server
		p	1		name
	m	(Lnet/minecraft/server/MinecraftServer;Ljava/util/Collection;Lcom/mojang/authlib/ProfileLookupCallback;)V	a	lookupPlayers
		p	0		server
		p	1		bannedPlayers
		p	2		callback
	m	(Ljava/io/File;)V	b	renameOldFile
		p	0		file
	m	(Lnet/minecraft/server/MinecraftServer;)Z	b	convertIpBanlist
		p	0		server
	m	(Lnet/minecraft/server/MinecraftServer;)Z	c	convertOpsList
		p	0		server
	m	(Lnet/minecraft/server/MinecraftServer;)Z	d	convertWhiteList
		p	0		server
	m	(Lnet/minecraft/server/MinecraftServer;)Z	e	serverReadyAfterUserconversion
		p	0		server
	m	(Lnet/minecraft/server/MinecraftServer;)Z	f	areOldPlayersConverted
		p	0		server
	m	(Lnet/minecraft/server/MinecraftServer;)Ljava/io/File;	g	getWorldPlayersDirectory
		p	0		server
	f	Ljava/io/File;	a	OLD_IPBANLIST
	f	Ljava/io/File;	b	OLD_USERBANLIST
	f	Ljava/io/File;	c	OLD_OPLIST
	f	Ljava/io/File;	d	OLD_WHITELIST
	f	Lorg/slf4j/Logger;	e	LOGGER
c	aof$1	net/minecraft/server/players/OldUsersConverter$1
	f	Lnet/minecraft/server/MinecraftServer;	a	val$server
	f	Ljava/util/Map;	b	val$userMap
	f	Laom;	c	val$bans
c	aof$2	net/minecraft/server/players/OldUsersConverter$2
	f	Lnet/minecraft/server/MinecraftServer;	a	val$server
	f	Laoh;	b	val$opsList
c	aof$3	net/minecraft/server/players/OldUsersConverter$3
	f	Lnet/minecraft/server/MinecraftServer;	a	val$server
	f	Laoo;	b	val$whitelist
c	aof$4	net/minecraft/server/players/OldUsersConverter$4
	f	Lnet/minecraft/server/MinecraftServer;	a	val$server
	f	Ljava/util/List;	b	val$profiles
c	aof$5	net/minecraft/server/players/OldUsersConverter$5
	m	(Ljava/io/File;Ljava/lang/String;Ljava/lang/String;)V	a	movePlayerFile
		p	1		playerDataFolder
		p	2		fileName
		p	3		uuid
	m	(Ljava/lang/String;)Ljava/lang/String;	a	getFileNameForProfile
	f	Lajn;	a	val$server
	f	Ljava/io/File;	b	val$worldNewPlayerDirectory
	f	Ljava/io/File;	c	val$unknownPlayerDirectory
	f	Ljava/io/File;	d	val$worldPlayerDirectory
	f	[Ljava/lang/String;	e	val$names
c	aof$a	net/minecraft/server/players/OldUsersConverter$ConversionError
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		message
	m	(Ljava/lang/String;Ljava/lang/Throwable;)V	<init>	<init>
		p	1		message
		p	2		cause
c	aog	net/minecraft/server/players/PlayerList
	m	(Lnet/minecraft/server/MinecraftServer;Lhl;Lecj;I)V	<init>	<init>
		p	1		server
		p	2		registryManager
		p	3		saveHandler
		p	4		maxPlayers
	m	()V	a	reloadWhiteList
	m	(I)V	a	setViewDistance
		p	1		viewDistance
	m	(Lafn;Lakr;)V	a	updateEntireScoreboard
		p	1		scoreboard
		p	2		player
	m	(Lakq;)V	a	addWorldborderListener
		p	1		world
	m	(Lakq;Lbiq;)Lbiq;	a	lambda$placeNewPlayer$0
		p	1		vehicle
	m	(Lakr;)Lqw;	a	load
		p	1		player
	m	(Lakr;I)V	a	sendPlayerPermissionLevel
		p	1		player
		p	2		permissionLevel
	m	(Lakr;Lakq;)V	a	sendLevelInfo
		p	1		player
		p	2		world
	m	(Lakr;Z)Lakr;	a	respawn
		p	1		player
		p	2		alive
	m	(Lbiq;)V	a	lambda$remove$1
		p	0		entity
	m	(Lcbu;)Lapj;	a	getPlayerStats
		p	1		player
	m	(Lcbu;DDDDLaev;Lvd;)V	a	broadcast
		p	1		player
		p	2		x
		p	4		y
		p	6		z
		p	8		distance
		p	10		worldKey
		p	11		packet
	m	(Lcbu;Ltl;)V	a	broadcastSystemToTeam
		p	1		source
		p	2		message
	m	(Lcom/mojang/authlib/GameProfile;)V	a	op
		p	1		profile
	m	(Lcom/mojang/authlib/GameProfile;Lakf;)Lakr;	a	getPlayerForLogin
		p	1		profile
		p	2		syncedOptions
	m	(Ljava/lang/String;)Lakr;	a	getPlayerByName
		p	1		name
	m	(Ljava/net/SocketAddress;Lcom/mojang/authlib/GameProfile;)Ltl;	a	canPlayerLogin
		p	1		address
		p	2		profile
	m	(Ljava/util/UUID;)Lakr;	a	getPlayer
		p	1		uuid
	m	(Lsm;Lakr;Lalf;)V	a	placeNewPlayer
		p	1		connection
		p	2		player
		p	3		clientData
	m	(Ltl;Lakr;)Ltl;	a	lambda$broadcastSystemMessage$2
		p	1		player
	m	(Ltl;Ljava/util/function/Function;Z)V	a	broadcastSystemMessage
		p	1		message
		p	2		playerMessageFactory
		p	3		overlay
	m	(Ltl;Z)V	a	broadcastSystemMessage
		p	1		message
		p	2		overlay
	m	(Lua;)Z	a	verifyChatTrusted
		p	1		message
	m	(Lua;Lakr;Lth$a;)V	a	broadcastChatMessage
		p	1		message
		p	2		sender
		p	3		params
	m	(Lua;Ldt;Lth$a;)V	a	broadcastChatMessage
		p	1		message
		p	2		source
		p	3		params
	m	(Lua;Ljava/util/function/Predicate;Lakr;Lth$a;)V	a	broadcastChatMessage
		p	1		message
		p	2		shouldSendFiltered
		p	3		sender
		p	4		params
	m	(Lvd;)V	a	broadcastAll
		p	1		packet
	m	(Lvd;Laev;)V	a	broadcastAll
		p	1		packet
		p	2		dimension
	m	(Z)V	a	setUsingWhiteList
		p	1		whitelistEnabled
	m	(I)V	b	setSimulationDistance
		p	1		simulationDistance
	m	(Lakr;)V	b	save
		p	1		player
	m	(Lcbu;Ltl;)V	b	broadcastSystemToAllExceptTeam
		p	1		source
		p	2		message
	m	(Lcom/mojang/authlib/GameProfile;)V	b	deop
		p	1		profile
	m	(Ljava/lang/String;)Ljava/util/List;	b	getPlayersWithAddress
		p	1		ip
	m	(Z)V	b	setAllowCheatsForAllPlayers
		p	1		cheatsAllowed
	m	()Lnet/minecraft/server/MinecraftServer;	c	getServer
	m	(Lakr;)V	c	remove
		p	1		player
	m	(Lcom/mojang/authlib/GameProfile;)Z	c	isWhiteListed
		p	1		profile
	m	()V	d	tick
	m	(Lakr;)V	d	sendPlayerPermissionLevel
		p	1		player
	m	(Lcom/mojang/authlib/GameProfile;)Z	d	canBypassPlayerLimit
		p	1		profile
	m	()[Ljava/lang/String;	e	getPlayerNamesArray
	m	(Lakr;)V	e	sendAllPlayerInfo
		p	1		player
	m	(Lcom/mojang/authlib/GameProfile;)Z	e	disconnectAllPlayersWithProfile
		p	1		profile
	m	()Laom;	f	getBans
	m	(Lakr;)Lafe;	f	getPlayerAdvancements
		p	1		player
	m	(Lcom/mojang/authlib/GameProfile;)Z	f	isOp
		p	1		profile
	m	()Laod;	g	getIpBans
	m	()V	h	saveAll
	m	()Laoo;	i	getWhiteList
	m	()[Ljava/lang/String;	j	getWhiteListNames
	m	()Laoh;	k	getOps
	m	()[Ljava/lang/String;	l	getOpNames
	m	()I	m	getPlayerCount
	m	()I	n	getMaxPlayers
	m	()Z	o	isUsingWhitelist
	m	()I	p	getViewDistance
	m	()I	q	getSimulationDistance
	m	()Lqw;	r	getSingleplayerData
	m	()V	s	removeAll
	m	()Ljava/util/List;	t	getPlayers
	m	()V	u	reloadResources
	m	()Z	v	isAllowCheatsForAllPlayers
	f	I	A	sendAllPlayerInfoIn
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/io/File;	b	USERBANLIST_FILE
	f	Ljava/io/File;	c	IPBANLIST_FILE
	f	Ljava/io/File;	d	OPLIST_FILE
	f	Ljava/io/File;	e	WHITELIST_FILE
	f	Ltl;	f	CHAT_FILTERED_FULL
	f	Ltl;	g	DUPLICATE_LOGIN_DISCONNECT_MESSAGE
	f	I	h	maxPlayers
	f	I	i	SEND_PLAYER_INFO_INTERVAL
	f	Ljava/text/SimpleDateFormat;	j	BAN_DATE_FORMAT
	f	Lnet/minecraft/server/MinecraftServer;	k	server
	f	Ljava/util/List;	l	players
	f	Ljava/util/Map;	m	playersByUUID
	f	Laom;	n	bans
	f	Laod;	o	ipBans
	f	Laoh;	p	ops
	f	Laoo;	q	whitelist
	f	Ljava/util/Map;	r	stats
	f	Ljava/util/Map;	s	advancements
	f	Lecj;	t	playerIo
	f	Z	u	doWhiteList
	f	Lhl;	v	registries
	f	I	w	viewDistance
	f	I	x	simulationDistance
	f	Z	y	allowCheatsForAllPlayers
	f	Z	z	ALLOW_LOGOUTIVATOR
c	aog$1	net/minecraft/server/players/PlayerList$1
	m	(Ldha;D)V	a	onBorderSizeSet
		p	1		border
		p	2		size
	m	(Ldha;DD)V	a	onBorderCenterSet
		p	1		border
		p	2		centerX
		p	4		centerZ
	m	(Ldha;DDJ)V	a	onBorderSizeLerping
		p	1		border
		p	2		fromSize
		p	4		toSize
		p	6		time
	m	(Ldha;I)V	a	onBorderSetWarningTime
		p	1		border
		p	2		warningTime
	m	(Ldha;D)V	b	onBorderSetDamagePerBlock
		p	1		border
		p	2		damagePerBlock
	m	(Ldha;I)V	b	onBorderSetWarningBlocks
		p	1		border
		p	2		warningBlockDistance
	m	(Ldha;D)V	c	onBorderSetDamageSafeZOne
		p	1		border
		p	2		safeZoneRadius
	f	Laog;	a	this$0
c	aoh	net/minecraft/server/players/ServerOpList
	m	(Ljava/io/File;)V	<init>	<init>
		p	1		file
	m	()[Ljava/lang/String;	a	getUserList
	m	(I)[Ljava/lang/String;	a	lambda$getUserList$0
	m	(Lcom/google/gson/JsonObject;)Laok;	a	createEntry
		p	1		json
	m	(Lcom/mojang/authlib/GameProfile;)Z	a	canBypassPlayerLimit
		p	1		profile
	m	(Ljava/lang/Object;)Ljava/lang/String;	a	getKeyForUser
		p	1		profile
	m	(Lcom/mojang/authlib/GameProfile;)Ljava/lang/String;	b	getKeyForUser
c	aoi	net/minecraft/server/players/ServerOpListEntry
	m	(Lcom/google/gson/JsonObject;)V	<init>	<init>
		p	1		json
	m	(Lcom/mojang/authlib/GameProfile;IZ)V	<init>	<init>
		p	1		profile
		p	2		permissionLevel
		p	3		bypassPlayerLimit
	m	()I	a	getLevel
	m	(Lcom/google/gson/JsonObject;)V	a	serialize
		p	1		json
	m	()Z	b	getBypassesPlayerLimit
	m	(Lcom/google/gson/JsonObject;)Lcom/mojang/authlib/GameProfile;	b	createGameProfile
		p	0		json
	f	I	a	level
	f	Z	b	bypassesPlayerLimit
c	aoj	net/minecraft/server/players/SleepStatus
	m	()V	a	removeAllSleepers
	m	(I)Z	a	areEnoughSleeping
		p	1		percentage
	m	(ILjava/util/List;)Z	a	areEnoughDeepSleeping
		p	1		percentage
		p	2		players
	m	(Ljava/util/List;)Z	a	update
		p	1		players
	m	()I	b	amountSleeping
	m	(I)I	b	sleepersNeeded
		p	1		percentage
	f	I	a	activePlayers
	f	I	b	sleepingPlayers
c	aok	net/minecraft/server/players/StoredUserEntry
	m	(Ljava/lang/Object;)V	<init>	<init>
		p	1		key
	m	(Lcom/google/gson/JsonObject;)V	a	serialize
		p	1		json
	m	()Z	f	hasExpired
	m	()Ljava/lang/Object;	g	getUser
	f	Ljava/lang/Object;	a	user
c	aol	net/minecraft/server/players/StoredUserList
	m	(Ljava/io/File;)V	<init>	<init>
		p	1		file
	m	()[Ljava/lang/String;	a	getUserList
	m	(Laok;)V	a	add
		p	1		entry
	m	(Lcom/google/gson/JsonObject;)Laok;	a	createEntry
		p	1		json
	m	(Ljava/lang/Object;)Ljava/lang/String;	a	getKeyForUser
		p	1		profile
	m	()Ljava/io/File;	b	getFile
	m	(Laok;)V	b	remove
		p	1		entry
	m	(Ljava/lang/Object;)Laok;	b	get
		p	1		key
	m	()Z	c	isEmpty
	m	(Laok;)Lcom/google/gson/JsonObject;	c	lambda$save$0
		p	0		entry
	m	(Ljava/lang/Object;)V	c	remove
		p	1		key
	m	()Ljava/util/Collection;	d	getEntries
	m	(Ljava/lang/Object;)Z	d	contains
	m	()V	e	save
	m	()V	f	load
	m	()V	g	removeExpired
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lcom/google/gson/Gson;	b	GSON
	f	Ljava/io/File;	c	file
	f	Ljava/util/Map;	d	map
c	aom	net/minecraft/server/players/UserBanList
	m	(Ljava/io/File;)V	<init>	<init>
		p	1		file
	m	()[Ljava/lang/String;	a	getUserList
	m	(I)[Ljava/lang/String;	a	lambda$getUserList$0
	m	(Lcom/google/gson/JsonObject;)Laok;	a	createEntry
		p	1		json
	m	(Lcom/mojang/authlib/GameProfile;)Z	a	isBanned
		p	1		profile
	m	(Ljava/lang/Object;)Ljava/lang/String;	a	getKeyForUser
		p	1		profile
	m	(Lcom/mojang/authlib/GameProfile;)Ljava/lang/String;	b	getKeyForUser
c	aon	net/minecraft/server/players/UserBanListEntry
	m	(Lcom/google/gson/JsonObject;)V	<init>	<init>
		p	1		json
	m	(Lcom/mojang/authlib/GameProfile;)V	<init>	<init>
		p	1		profile
	m	(Lcom/mojang/authlib/GameProfile;Ljava/util/Date;Ljava/lang/String;Ljava/util/Date;Ljava/lang/String;)V	<init>	<init>
		p	1		profile
		p	2		created
		p	3		source
		p	4		expiry
		p	5		reason
	m	(Lcom/google/gson/JsonObject;)V	a	serialize
		p	1		json
	m	(Lcom/google/gson/JsonObject;)Lcom/mojang/authlib/GameProfile;	b	createGameProfile
		p	0		json
	m	()Ltl;	e	getDisplayName
c	aoo	net/minecraft/server/players/UserWhiteList
	m	(Ljava/io/File;)V	<init>	<init>
		p	1		file
	m	()[Ljava/lang/String;	a	getUserList
	m	(I)[Ljava/lang/String;	a	lambda$getUserList$0
	m	(Lcom/google/gson/JsonObject;)Laok;	a	createEntry
		p	1		json
	m	(Lcom/mojang/authlib/GameProfile;)Z	a	isWhiteListed
		p	1		profile
	m	(Ljava/lang/Object;)Ljava/lang/String;	a	getKeyForUser
		p	1		profile
	m	(Lcom/mojang/authlib/GameProfile;)Ljava/lang/String;	b	getKeyForUser
c	aop	net/minecraft/server/players/UserWhiteListEntry
	m	(Lcom/google/gson/JsonObject;)V	<init>	<init>
		p	1		json
	m	(Lcom/mojang/authlib/GameProfile;)V	<init>	<init>
		p	1		profile
	m	(Lcom/google/gson/JsonObject;)V	a	serialize
		p	1		json
	m	(Lcom/google/gson/JsonObject;)Lcom/mojang/authlib/GameProfile;	b	createGameProfile
		p	0		json
c	aoq	net/minecraft/server/players/package-info
c	aor	net/minecraft/server/rcon/NetworkDataOutputStream
	m	(I)V	<init>	<init>
		p	1		size
	m	()[B	a	toByteArray
	m	(F)V	a	writeFloat
		p	1		value
	m	(I)V	a	write
		p	1		value
	m	(Ljava/lang/String;)V	a	writeString
		p	1		value
	m	(S)V	a	writeShort
		p	1		value
	m	([B)V	a	writeBytes
		p	1		values
	m	()V	b	reset
	m	(I)V	b	writeInt
		p	1		value
	f	Ljava/io/ByteArrayOutputStream;	a	outputStream
	f	Ljava/io/DataOutputStream;	b	dataOutputStream
c	aos	net/minecraft/server/rcon/PktUtils
	m	(B)Ljava/lang/String;	a	toHexString
		p	0		b
	m	([BI)I	a	intFromByteArray
		p	0		buf
		p	1		start
	m	([BII)Ljava/lang/String;	a	stringFromByteArray
		p	0		buf
	m	([BII)I	b	intFromByteArray
		p	0		buf
		p	1		start
		p	2		limit
	m	([BII)I	c	intFromNetworkByteArray
		p	0		buf
		p	1		start
		p	2		limit
	f	I	a	MAX_PACKET_SIZE
	f	[C	b	HEX_CHAR
c	aot	net/minecraft/server/rcon/RconConsoleSource
	m	(Lnet/minecraft/server/MinecraftServer;)V	<init>	<init>
		p	1		server
	m	()Z	T_	shouldInformAdmins
	m	(Ltl;)V	a	sendSystemMessage
		p	1		message
	m	()V	e	prepareForCommand
	m	()Ljava/lang/String;	f	getCommandResponse
	m	()Ldt;	g	createCommandSourceStack
	m	()Z	j_	acceptsSuccess
	m	()Z	v_	acceptsFailure
	f	Ljava/lang/String;	b	RCON
	f	Ltl;	c	RCON_COMPONENT
	f	Ljava/lang/StringBuffer;	d	buffer
	f	Lnet/minecraft/server/MinecraftServer;	e	server
c	aou	net/minecraft/server/rcon/package-info
c	aov	net/minecraft/server/rcon/thread/GenericThread
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		description
	m	()Z	a	start
	m	()V	b	stop
	m	()Z	c	isRunning
	f	Z	a	running
	f	Ljava/lang/String;	b	name
	f	Ljava/lang/Thread;	c	thread
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	Ljava/util/concurrent/atomic/AtomicInteger;	e	UNIQUE_THREAD_ID
	f	I	f	MAX_STOP_WAIT
c	aow	net/minecraft/server/rcon/thread/QueryThreadGs4
	m	(Lafm;I)V	<init>	<init>
		p	1		server
		p	2		queryPort
	m	()Z	a	start
	m	(JLaow$a;)Z	a	lambda$pruneChallenges$0
		p	2		query
	m	(Lafm;)Laow;	a	create
		p	0		server
	m	(Ljava/lang/Exception;)V	a	recoverSocketError
		p	1		e
	m	(Ljava/net/DatagramPacket;)Z	a	processPacket
		p	1		packet
	m	(Ljava/net/SocketAddress;)[B	a	getIdentBytes
		p	1		address
	m	([BLjava/net/DatagramPacket;)V	a	sendTo
		p	1		buf
		p	2		packet
	m	(Ljava/net/DatagramPacket;)[B	b	buildRuleResponse
		p	1		packet
	m	(Ljava/net/DatagramPacket;)Ljava/lang/Boolean;	c	validChallenge
		p	1		packet
	m	()V	d	pruneChallenges
	m	(Ljava/net/DatagramPacket;)V	d	sendChallenge
		p	1		packet
	m	()Z	e	initSocket
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	Ljava/lang/String;	e	GAME_TYPE
	f	Ljava/lang/String;	f	GAME_ID
	f	J	g	CHALLENGE_CHECK_INTERVAL
	f	J	h	RESPONSE_CACHE_TIME
	f	J	i	lastChallengeCheck
	f	I	j	port
	f	I	k	serverPort
	f	I	l	maxPlayers
	f	Ljava/lang/String;	m	serverName
	f	Ljava/lang/String;	n	worldName
	f	Ljava/net/DatagramSocket;	o	socket
	f	[B	p	buffer
	f	Ljava/lang/String;	q	hostIp
	f	Ljava/lang/String;	r	serverIp
	f	Ljava/util/Map;	s	validChallenges
	f	Laor;	t	rulesResponse
	f	J	u	lastRulesResponse
	f	Lafm;	v	serverInterface
c	aow$a	net/minecraft/server/rcon/thread/QueryThreadGs4$RequestChallenge
	m	(Ljava/net/DatagramPacket;)V	<init>	<init>
		p	1		packet
	m	()I	a	getChallenge
	m	(J)Ljava/lang/Boolean;	a	before
		p	1		lastQueryTime
	m	()[B	b	getChallengeBytes
	m	()[B	c	getIdentBytes
	m	()Ljava/lang/String;	d	getIdent
	f	J	a	time
	f	I	b	challenge
	f	[B	c	identBytes
	f	[B	d	challengeBytes
	f	Ljava/lang/String;	e	ident
c	aox	net/minecraft/server/rcon/thread/RconClient
	m	(Lafm;Ljava/lang/String;Ljava/net/Socket;)V	<init>	<init>
		p	1		server
		p	2		password
		p	3		socket
	m	(IILjava/lang/String;)V	a	send
		p	1		sessionToken
		p	2		responseType
		p	3		message
	m	(ILjava/lang/String;)V	a	sendCmdResponse
		p	1		sessionToken
		p	2		message
	m	()V	b	stop
	m	()V	d	sendAuthFailure
	m	()V	e	closeSocket
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	I	e	SERVERDATA_AUTH
	f	I	f	SERVERDATA_EXECCOMMAND
	f	I	g	SERVERDATA_RESPONSE_VALUE
	f	I	h	SERVERDATA_AUTH_RESPONSE
	f	I	i	SERVERDATA_AUTH_FAILURE
	f	Z	j	authed
	f	Ljava/net/Socket;	k	client
	f	[B	l	buf
	f	Ljava/lang/String;	m	rconPassword
	f	Lafm;	n	serverInterface
c	aoy	net/minecraft/server/rcon/thread/RconThread
	m	(Lafm;Ljava/net/ServerSocket;Ljava/lang/String;)V	<init>	<init>
		p	1		server
		p	2		listener
		p	3		password
	m	(Lafm;)Laoy;	a	create
		p	0		server
	m	(Laox;)Z	a	lambda$clearClients$0
		p	0		client
	m	(Ljava/net/ServerSocket;)V	a	closeSocket
		p	1		socket
	m	()V	b	stop
	m	()V	d	clearClients
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	Ljava/net/ServerSocket;	e	socket
	f	Ljava/lang/String;	f	rconPassword
	f	Ljava/util/List;	g	clients
	f	Lafm;	h	serverInterface
c	aoz	net/minecraft/server/rcon/thread/package-info
c	apa	net/minecraft/sounds/Music
	m	(Lhe;IIZ)V	<init>	<init>
		p	1		sound
		p	2		minDelay
		p	3		maxDelay
		p	4		replaceCurrentMusic
	m	()Lhe;	a	getEvent
	m	(Lapa;)Ljava/lang/Boolean;	a	lambda$static$3
		p	0		sound
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
		p	0		instance
	m	()I	b	getMinDelay
	m	(Lapa;)Ljava/lang/Integer;	b	lambda$static$2
		p	0		sound
	m	()I	c	getMaxDelay
	m	(Lapa;)Ljava/lang/Integer;	c	lambda$static$1
		p	0		sound
	m	()Z	d	replaceCurrentMusic
	m	(Lapa;)Lhe;	d	lambda$static$0
		p	0		sound
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lhe;	b	event
	f	I	c	minDelay
	f	I	d	maxDelay
	f	Z	e	replaceCurrentMusic
c	apb	net/minecraft/sounds/Musics
	m	(Lhe;)Lapa;	a	createGameMusic
		p	0		sound
	f	Lapa;	a	MENU
	f	Lapa;	b	CREATIVE
	f	Lapa;	c	CREDITS
	f	Lapa;	d	END_BOSS
	f	Lapa;	e	END
	f	Lapa;	f	UNDER_WATER
	f	Lapa;	g	GAME
	f	I	h	ONE_SECOND
	f	I	i	THIRTY_SECONDS
	f	I	j	TEN_MINUTES
	f	I	k	TWENTY_MINUTES
	f	I	l	FIVE_MINUTES
c	apc	net/minecraft/sounds/SoundEvent
	m	(Laew;FZ)V	<init>	<init>
		p	1		id
		p	2		distanceToTravel
		p	3		useStaticDistance
	m	()Laew;	a	getLocation
	m	(F)F	a	getRange
		p	1		volume
	m	(Laew;)Lapc;	a	createVariableRangeEvent
		p	0		id
	m	(Laew;F)Lapc;	a	createFixedRangeEvent
		p	0		id
		p	1		distanceToTravel
	m	(Laew;Ljava/lang/Float;)Lapc;	a	lambda$create$1
	m	(Laew;Ljava/util/Optional;)Lapc;	a	create
		p	0		id
		p	1		distanceToTravel
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	(Lso;)V	a	writeToNetwork
		p	1		buf
	m	()Ljava/util/Optional;	b	fixedRange
	m	(Laew;)Lapc;	b	lambda$create$2
	m	(Lso;)Lapc;	b	readFromNetwork
		p	0		buf
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	F	c	DEFAULT_RANGE
	f	Laew;	d	location
	f	F	e	range
	f	Z	f	newSystem
c	apd	net/minecraft/sounds/SoundEvents
	m	()Lcom/google/common/collect/ImmutableList;	a	registerGoatHornSoundVariants
	m	(I)Lhe$c;	a	lambda$registerGoatHornSoundVariants$0
		p	0		variant
	m	(Laew;)Lapc;	a	register
		p	0		id
	m	(Laew;Laew;)Lapc;	a	register
		p	0		id
		p	1		soundId
	m	(Laew;Laew;F)Lhe;	a	register
		p	0		id
		p	1		soundId
		p	2		distanceToTravel
	m	(Ljava/lang/String;)Lapc;	a	register
		p	0		id
	m	(Laew;)Lhe$c;	b	registerForHolder
		p	0		id
	m	(Laew;Laew;)Lhe$c;	b	registerForHolder
		p	0		id
		p	1		soundId
	m	(Ljava/lang/String;)Lhe$c;	b	registerForHolder
		p	0		id
	f	Lapc;	AA	WOLF_STEP
	f	Lapc;	AB	WOLF_WHINE
	f	Lapc;	AC	WOODEN_DOOR_CLOSE
	f	Lapc;	AD	WOODEN_DOOR_OPEN
	f	Lapc;	AE	WOODEN_TRAPDOOR_CLOSE
	f	Lapc;	AF	WOODEN_TRAPDOOR_OPEN
	f	Lapc;	AG	WOODEN_BUTTON_CLICK_OFF
	f	Lapc;	AH	WOODEN_BUTTON_CLICK_ON
	f	Lapc;	AI	WOODEN_PRESSURE_PLATE_CLICK_OFF
	f	Lapc;	AJ	WOODEN_PRESSURE_PLATE_CLICK_ON
	f	Lapc;	AK	WOOD_BREAK
	f	Lapc;	AL	WOOD_FALL
	f	Lapc;	A	AMBIENT_UNDERWATER_LOOP_ADDITIONS
	f	Lapc;	AM	WOOD_HIT
	f	Lapc;	AN	WOOD_PLACE
	f	Lapc;	AO	WOOD_STEP
	f	Lapc;	AP	WOOL_BREAK
	f	Lapc;	AQ	WOOL_FALL
	f	Lapc;	AR	WOOL_HIT
	f	Lapc;	AS	WOOL_PLACE
	f	Lapc;	AT	WOOL_STEP
	f	Lapc;	AU	ZOGLIN_AMBIENT
	f	Lapc;	AV	ZOGLIN_ANGRY
	f	Lapc;	AW	ZOGLIN_ATTACK
	f	Lapc;	AX	ZOGLIN_DEATH
	f	Lapc;	AY	ZOGLIN_HURT
	f	Lapc;	AZ	ZOGLIN_STEP
	f	Lapc;	Aa	WET_SPONGE_HIT
	f	Lapc;	Ab	WET_SPONGE_PLACE
	f	Lapc;	Ac	WET_SPONGE_STEP
	f	Lapc;	Ad	WITCH_AMBIENT
	f	Lapc;	Ae	WITCH_CELEBRATE
	f	Lapc;	Af	WITCH_DEATH
	f	Lapc;	Ag	WITCH_DRINK
	f	Lapc;	Ah	WITCH_HURT
	f	Lapc;	Ai	WITCH_THROW
	f	Lapc;	Aj	WITHER_AMBIENT
	f	Lapc;	Ak	WITHER_BREAK_BLOCK
	f	Lapc;	Al	WITHER_DEATH
	f	Lapc;	Am	WITHER_HURT
	f	Lapc;	An	WITHER_SHOOT
	f	Lapc;	Ao	WITHER_SKELETON_AMBIENT
	f	Lapc;	Ap	WITHER_SKELETON_DEATH
	f	Lapc;	Aq	WITHER_SKELETON_HURT
	f	Lapc;	Ar	WITHER_SKELETON_STEP
	f	Lapc;	As	WITHER_SPAWN
	f	Lapc;	At	WOLF_AMBIENT
	f	Lapc;	Au	WOLF_DEATH
	f	Lapc;	Av	WOLF_GROWL
	f	Lapc;	Aw	WOLF_HOWL
	f	Lapc;	Ax	WOLF_HURT
	f	Lapc;	Ay	WOLF_PANT
	f	Lapc;	Az	WOLF_SHAKE
	f	Lapc;	B	AMBIENT_UNDERWATER_LOOP_ADDITIONS_RARE
	f	Lapc;	Ba	ZOMBIE_AMBIENT
	f	Lapc;	Bb	ZOMBIE_ATTACK_WOODEN_DOOR
	f	Lapc;	Bc	ZOMBIE_ATTACK_IRON_DOOR
	f	Lapc;	Bd	ZOMBIE_BREAK_WOODEN_DOOR
	f	Lapc;	Be	ZOMBIE_CONVERTED_TO_DROWNED
	f	Lapc;	Bf	ZOMBIE_DEATH
	f	Lapc;	Bg	ZOMBIE_DESTROY_EGG
	f	Lapc;	Bh	ZOMBIE_HORSE_AMBIENT
	f	Lapc;	Bi	ZOMBIE_HORSE_DEATH
	f	Lapc;	Bj	ZOMBIE_HORSE_HURT
	f	Lapc;	Bk	ZOMBIE_HURT
	f	Lapc;	Bl	ZOMBIE_INFECT
	f	Lapc;	Bm	ZOMBIFIED_PIGLIN_AMBIENT
	f	Lapc;	Bn	ZOMBIFIED_PIGLIN_ANGRY
	f	Lapc;	Bo	ZOMBIFIED_PIGLIN_DEATH
	f	Lapc;	Bp	ZOMBIFIED_PIGLIN_HURT
	f	Lapc;	Bq	ZOMBIE_STEP
	f	Lapc;	Br	ZOMBIE_VILLAGER_AMBIENT
	f	Lapc;	Bs	ZOMBIE_VILLAGER_CONVERTED
	f	Lapc;	Bt	ZOMBIE_VILLAGER_CURE
	f	Lapc;	Bu	ZOMBIE_VILLAGER_DEATH
	f	Lapc;	Bv	ZOMBIE_VILLAGER_HURT
	f	Lapc;	Bw	ZOMBIE_VILLAGER_STEP
	f	Lapc;	C	AMBIENT_UNDERWATER_LOOP_ADDITIONS_ULTRA_RARE
	f	Lapc;	D	AMETHYST_BLOCK_BREAK
	f	Lapc;	E	AMETHYST_BLOCK_CHIME
	f	Lapc;	F	AMETHYST_BLOCK_FALL
	f	Lapc;	G	AMETHYST_BLOCK_HIT
	f	Lapc;	H	AMETHYST_BLOCK_PLACE
	f	Lapc;	I	AMETHYST_BLOCK_RESONATE
	f	Lapc;	J	AMETHYST_BLOCK_STEP
	f	Lapc;	K	AMETHYST_CLUSTER_BREAK
	f	Lapc;	L	AMETHYST_CLUSTER_FALL
	f	Lapc;	M	AMETHYST_CLUSTER_HIT
	f	Lapc;	N	AMETHYST_CLUSTER_PLACE
	f	Lapc;	O	AMETHYST_CLUSTER_STEP
	f	Lapc;	P	ANCIENT_DEBRIS_BREAK
	f	Lapc;	Q	ANCIENT_DEBRIS_STEP
	f	Lapc;	R	ANCIENT_DEBRIS_PLACE
	f	Lapc;	S	ANCIENT_DEBRIS_HIT
	f	Lapc;	T	ANCIENT_DEBRIS_FALL
	f	Lapc;	U	ANVIL_BREAK
	f	Lapc;	V	ANVIL_DESTROY
	f	Lapc;	W	ANVIL_FALL
	f	Lapc;	X	ANVIL_HIT
	f	Lapc;	Y	ANVIL_LAND
	f	Lapc;	Z	ANVIL_PLACE
	f	Lapc;	aA	AXOLOTL_SPLASH
	f	Lapc;	aB	AXOLOTL_SWIM
	f	Lapc;	aC	AZALEA_BREAK
	f	Lapc;	aD	AZALEA_FALL
	f	Lapc;	aE	AZALEA_HIT
	f	Lapc;	aF	AZALEA_PLACE
	f	Lapc;	aG	AZALEA_STEP
	f	Lapc;	aH	AZALEA_LEAVES_BREAK
	f	Lapc;	aI	AZALEA_LEAVES_FALL
	f	Lapc;	aJ	AZALEA_LEAVES_HIT
	f	Lapc;	aK	AZALEA_LEAVES_PLACE
	f	Lapc;	aL	AZALEA_LEAVES_STEP
	f	Lapc;	a	ALLAY_AMBIENT_WITH_ITEM
	f	Lapc;	aM	BAMBOO_BREAK
	f	Lapc;	aN	BAMBOO_FALL
	f	Lapc;	aO	BAMBOO_HIT
	f	Lapc;	aP	BAMBOO_PLACE
	f	Lapc;	aQ	BAMBOO_STEP
	f	Lapc;	aR	BAMBOO_SAPLING_BREAK
	f	Lapc;	aS	BAMBOO_SAPLING_HIT
	f	Lapc;	aT	BAMBOO_SAPLING_PLACE
	f	Lapc;	aU	BAMBOO_WOOD_BREAK
	f	Lapc;	aV	BAMBOO_WOOD_FALL
	f	Lapc;	aW	BAMBOO_WOOD_HIT
	f	Lapc;	aX	BAMBOO_WOOD_PLACE
	f	Lapc;	aY	BAMBOO_WOOD_STEP
	f	Lapc;	aZ	BAMBOO_WOOD_DOOR_CLOSE
	f	Lapc;	aa	ANVIL_STEP
	f	Lapc;	ab	ANVIL_USE
	f	Lapc;	ac	ARMOR_EQUIP_CHAIN
	f	Lapc;	ad	ARMOR_EQUIP_DIAMOND
	f	Lapc;	ae	ARMOR_EQUIP_ELYTRA
	f	Lapc;	af	ARMOR_EQUIP_GENERIC
	f	Lapc;	ag	ARMOR_EQUIP_GOLD
	f	Lapc;	ah	ARMOR_EQUIP_IRON
	f	Lapc;	ai	ARMOR_EQUIP_LEATHER
	f	Lapc;	aj	ARMOR_EQUIP_NETHERITE
	f	Lapc;	ak	ARMOR_EQUIP_TURTLE
	f	Lapc;	al	ARMOR_STAND_BREAK
	f	Lapc;	am	ARMOR_STAND_FALL
	f	Lapc;	an	ARMOR_STAND_HIT
	f	Lapc;	ao	ARMOR_STAND_PLACE
	f	Lapc;	ap	ARROW_HIT
	f	Lapc;	aq	ARROW_HIT_PLAYER
	f	Lapc;	ar	ARROW_SHOOT
	f	Lapc;	as	AXE_STRIP
	f	Lapc;	at	AXE_SCRAPE
	f	Lapc;	au	AXE_WAX_OFF
	f	Lapc;	av	AXOLOTL_ATTACK
	f	Lapc;	aw	AXOLOTL_DEATH
	f	Lapc;	ax	AXOLOTL_HURT
	f	Lapc;	ay	AXOLOTL_IDLE_AIR
	f	Lapc;	az	AXOLOTL_IDLE_WATER
	f	Lapc;	bA	BEE_HURT
	f	Lapc;	bB	BEE_LOOP_AGGRESSIVE
	f	Lapc;	bC	BEE_LOOP
	f	Lapc;	bD	BEE_STING
	f	Lapc;	bE	BEE_POLLINATE
	f	Lapc;	bF	BEEHIVE_DRIP
	f	Lapc;	bG	BEEHIVE_ENTER
	f	Lapc;	bH	BEEHIVE_EXIT
	f	Lapc;	bI	BEEHIVE_SHEAR
	f	Lapc;	bJ	BEEHIVE_WORK
	f	Lapc;	bK	BELL_BLOCK
	f	Lapc;	bL	BELL_RESONATE
	f	Lapc;	b	ALLAY_AMBIENT_WITHOUT_ITEM
	f	Lapc;	bM	BIG_DRIPLEAF_BREAK
	f	Lapc;	bN	BIG_DRIPLEAF_FALL
	f	Lapc;	bO	BIG_DRIPLEAF_HIT
	f	Lapc;	bP	BIG_DRIPLEAF_PLACE
	f	Lapc;	bQ	BIG_DRIPLEAF_STEP
	f	Lapc;	bR	BLAZE_AMBIENT
	f	Lapc;	bS	BLAZE_BURN
	f	Lapc;	bT	BLAZE_DEATH
	f	Lapc;	bU	BLAZE_HURT
	f	Lapc;	bV	BLAZE_SHOOT
	f	Lapc;	bW	BOAT_PADDLE_LAND
	f	Lapc;	bX	BOAT_PADDLE_WATER
	f	Lapc;	bY	BONE_BLOCK_BREAK
	f	Lapc;	bZ	BONE_BLOCK_FALL
	f	Lapc;	ba	BAMBOO_WOOD_DOOR_OPEN
	f	Lapc;	bb	BAMBOO_WOOD_TRAPDOOR_CLOSE
	f	Lapc;	bc	BAMBOO_WOOD_TRAPDOOR_OPEN
	f	Lapc;	bd	BAMBOO_WOOD_BUTTON_CLICK_OFF
	f	Lapc;	be	BAMBOO_WOOD_BUTTON_CLICK_ON
	f	Lapc;	bf	BAMBOO_WOOD_PRESSURE_PLATE_CLICK_OFF
	f	Lapc;	bg	BAMBOO_WOOD_PRESSURE_PLATE_CLICK_ON
	f	Lapc;	bh	BAMBOO_WOOD_FENCE_GATE_CLOSE
	f	Lapc;	bi	BAMBOO_WOOD_FENCE_GATE_OPEN
	f	Lapc;	bj	BARREL_CLOSE
	f	Lapc;	bk	BARREL_OPEN
	f	Lapc;	bl	BASALT_BREAK
	f	Lapc;	bm	BASALT_STEP
	f	Lapc;	bn	BASALT_PLACE
	f	Lapc;	bo	BASALT_HIT
	f	Lapc;	bp	BASALT_FALL
	f	Lapc;	bq	BAT_AMBIENT
	f	Lapc;	br	BAT_DEATH
	f	Lapc;	bs	BAT_HURT
	f	Lapc;	bt	BAT_LOOP
	f	Lapc;	bu	BAT_TAKEOFF
	f	Lapc;	bv	BEACON_ACTIVATE
	f	Lapc;	bw	BEACON_AMBIENT
	f	Lapc;	bx	BEACON_DEACTIVATE
	f	Lapc;	by	BEACON_POWER_SELECT
	f	Lapc;	bz	BEE_DEATH
	f	Lapc;	cA	BUCKET_EMPTY_TADPOLE
	f	Lapc;	cB	BUCKET_FILL
	f	Lapc;	cC	BUCKET_FILL_AXOLOTL
	f	Lapc;	cD	BUCKET_FILL_FISH
	f	Lapc;	cE	BUCKET_FILL_LAVA
	f	Lapc;	cF	BUCKET_FILL_POWDER_SNOW
	f	Lapc;	cG	BUCKET_FILL_TADPOLE
	f	Lapc;	cH	BUNDLE_DROP_CONTENTS
	f	Lapc;	cI	BUNDLE_INSERT
	f	Lapc;	cJ	BUNDLE_REMOVE_ONE
	f	Lapc;	cK	CAKE_ADD_CANDLE
	f	Lapc;	cL	CALCITE_BREAK
	f	Lapc;	c	ALLAY_DEATH
	f	Lapc;	cM	CALCITE_STEP
	f	Lapc;	cN	CALCITE_PLACE
	f	Lapc;	cO	CALCITE_HIT
	f	Lapc;	cP	CALCITE_FALL
	f	Lapc;	cQ	CAMEL_AMBIENT
	f	Lapc;	cR	CAMEL_DASH
	f	Lapc;	cS	CAMEL_DASH_READY
	f	Lapc;	cT	CAMEL_DEATH
	f	Lapc;	cU	CAMEL_EAT
	f	Lapc;	cV	CAMEL_HURT
	f	Lapc;	cW	CAMEL_SADDLE
	f	Lapc;	cX	CAMEL_SIT
	f	Lapc;	cY	CAMEL_STAND
	f	Lapc;	cZ	CAMEL_STEP
	f	Lapc;	ca	BONE_BLOCK_HIT
	f	Lapc;	cb	BONE_BLOCK_PLACE
	f	Lapc;	cc	BONE_BLOCK_STEP
	f	Lapc;	cd	BONE_MEAL_USE
	f	Lapc;	ce	BOOK_PAGE_TURN
	f	Lapc;	cf	BOOK_PUT
	f	Lapc;	cg	BLASTFURNACE_FIRE_CRACKLE
	f	Lapc;	ch	BOTTLE_EMPTY
	f	Lapc;	ci	BOTTLE_FILL
	f	Lapc;	cj	BOTTLE_FILL_DRAGONBREATH
	f	Lapc;	ck	BREWING_STAND_BREW
	f	Lapc;	cl	BRUSH_GENERIC
	f	Lapc;	cm	BRUSH_SAND
	f	Lapc;	cn	BRUSH_GRAVEL
	f	Lapc;	co	BRUSH_SAND_COMPLETED
	f	Lapc;	cp	BRUSH_GRAVEL_COMPLETED
	f	Lapc;	cq	BUBBLE_COLUMN_BUBBLE_POP
	f	Lapc;	cr	BUBBLE_COLUMN_UPWARDS_AMBIENT
	f	Lapc;	cs	BUBBLE_COLUMN_UPWARDS_INSIDE
	f	Lapc;	ct	BUBBLE_COLUMN_WHIRLPOOL_AMBIENT
	f	Lapc;	cu	BUBBLE_COLUMN_WHIRLPOOL_INSIDE
	f	Lapc;	cv	BUCKET_EMPTY
	f	Lapc;	cw	BUCKET_EMPTY_AXOLOTL
	f	Lapc;	cx	BUCKET_EMPTY_FISH
	f	Lapc;	cy	BUCKET_EMPTY_LAVA
	f	Lapc;	cz	BUCKET_EMPTY_POWDER_SNOW
	f	Lapc;	dA	CHAIN_HIT
	f	Lapc;	dB	CHAIN_PLACE
	f	Lapc;	dC	CHAIN_STEP
	f	Lapc;	dD	CHERRY_WOOD_BREAK
	f	Lapc;	dE	CHERRY_WOOD_FALL
	f	Lapc;	dF	CHERRY_WOOD_HIT
	f	Lapc;	dG	CHERRY_WOOD_PLACE
	f	Lapc;	dH	CHERRY_WOOD_STEP
	f	Lapc;	dI	CHERRY_SAPLING_BREAK
	f	Lapc;	dJ	CHERRY_SAPLING_FALL
	f	Lapc;	dK	CHERRY_SAPLING_HIT
	f	Lapc;	dL	CHERRY_SAPLING_PLACE
	f	Lapc;	d	ALLAY_HURT
	f	Lapc;	dM	CHERRY_SAPLING_STEP
	f	Lapc;	dN	CHERRY_LEAVES_BREAK
	f	Lapc;	dO	CHERRY_LEAVES_FALL
	f	Lapc;	dP	CHERRY_LEAVES_HIT
	f	Lapc;	dQ	CHERRY_LEAVES_PLACE
	f	Lapc;	dR	CHERRY_LEAVES_STEP
	f	Lapc;	dS	CHERRY_WOOD_HANGING_SIGN_STEP
	f	Lapc;	dT	CHERRY_WOOD_HANGING_SIGN_BREAK
	f	Lapc;	dU	CHERRY_WOOD_HANGING_SIGN_FALL
	f	Lapc;	dV	CHERRY_WOOD_HANGING_SIGN_HIT
	f	Lapc;	dW	CHERRY_WOOD_HANGING_SIGN_PLACE
	f	Lapc;	dX	CHERRY_WOOD_DOOR_CLOSE
	f	Lapc;	dY	CHERRY_WOOD_DOOR_OPEN
	f	Lapc;	dZ	CHERRY_WOOD_TRAPDOOR_CLOSE
	f	Lapc;	da	CAMEL_STEP_SAND
	f	Lapc;	db	CAMPFIRE_CRACKLE
	f	Lapc;	dc	CANDLE_AMBIENT
	f	Lapc;	dd	CANDLE_BREAK
	f	Lapc;	de	CANDLE_EXTINGUISH
	f	Lapc;	df	CANDLE_FALL
	f	Lapc;	dg	CANDLE_HIT
	f	Lapc;	dh	CANDLE_PLACE
	f	Lapc;	di	CANDLE_STEP
	f	Lapc;	dj	CAT_AMBIENT
	f	Lapc;	dk	CAT_STRAY_AMBIENT
	f	Lapc;	dl	CAT_DEATH
	f	Lapc;	dm	CAT_EAT
	f	Lapc;	dn	CAT_HISS
	f	Lapc;	do	CAT_BEG_FOR_FOOD
	f	Lapc;	dp	CAT_HURT
	f	Lapc;	dq	CAT_PURR
	f	Lapc;	dr	CAT_PURREOW
	f	Lapc;	ds	CAVE_VINES_BREAK
	f	Lapc;	dt	CAVE_VINES_FALL
	f	Lapc;	du	CAVE_VINES_HIT
	f	Lapc;	dv	CAVE_VINES_PLACE
	f	Lapc;	dw	CAVE_VINES_STEP
	f	Lapc;	dx	CAVE_VINES_PICK_BERRIES
	f	Lapc;	dy	CHAIN_BREAK
	f	Lapc;	dz	CHAIN_FALL
	f	Lapc;	eA	CHORUS_FRUIT_TELEPORT
	f	Lapc;	eB	COD_AMBIENT
	f	Lapc;	eC	COD_DEATH
	f	Lapc;	eD	COD_FLOP
	f	Lapc;	eE	COD_HURT
	f	Lapc;	eF	COMPARATOR_CLICK
	f	Lapc;	eG	COMPOSTER_EMPTY
	f	Lapc;	eH	COMPOSTER_FILL
	f	Lapc;	eI	COMPOSTER_FILL_SUCCESS
	f	Lapc;	eJ	COMPOSTER_READY
	f	Lapc;	eK	CONDUIT_ACTIVATE
	f	Lapc;	eL	CONDUIT_AMBIENT
	f	Lapc;	e	ALLAY_ITEM_GIVEN
	f	Lapc;	eM	CONDUIT_AMBIENT_SHORT
	f	Lapc;	eN	CONDUIT_ATTACK_TARGET
	f	Lapc;	eO	CONDUIT_DEACTIVATE
	f	Lapc;	eP	COPPER_BREAK
	f	Lapc;	eQ	COPPER_STEP
	f	Lapc;	eR	COPPER_PLACE
	f	Lapc;	eS	COPPER_HIT
	f	Lapc;	eT	COPPER_FALL
	f	Lapc;	eU	CORAL_BLOCK_BREAK
	f	Lapc;	eV	CORAL_BLOCK_FALL
	f	Lapc;	eW	CORAL_BLOCK_HIT
	f	Lapc;	eX	CORAL_BLOCK_PLACE
	f	Lapc;	eY	CORAL_BLOCK_STEP
	f	Lapc;	eZ	COW_AMBIENT
	f	Lapc;	ea	CHERRY_WOOD_TRAPDOOR_OPEN
	f	Lapc;	eb	CHERRY_WOOD_BUTTON_CLICK_OFF
	f	Lapc;	ec	CHERRY_WOOD_BUTTON_CLICK_ON
	f	Lapc;	ed	CHERRY_WOOD_PRESSURE_PLATE_CLICK_OFF
	f	Lapc;	ee	CHERRY_WOOD_PRESSURE_PLATE_CLICK_ON
	f	Lapc;	ef	CHERRY_WOOD_FENCE_GATE_CLOSE
	f	Lapc;	eg	CHERRY_WOOD_FENCE_GATE_OPEN
	f	Lapc;	eh	CHEST_CLOSE
	f	Lapc;	ei	CHEST_LOCKED
	f	Lapc;	ej	CHEST_OPEN
	f	Lapc;	ek	CHICKEN_AMBIENT
	f	Lapc;	el	CHICKEN_DEATH
	f	Lapc;	em	CHICKEN_EGG
	f	Lapc;	en	CHICKEN_HURT
	f	Lapc;	eo	CHICKEN_STEP
	f	Lapc;	ep	CHISELED_BOOKSHELF_BREAK
	f	Lapc;	eq	CHISELED_BOOKSHELF_FALL
	f	Lapc;	er	CHISELED_BOOKSHELF_HIT
	f	Lapc;	es	CHISELED_BOOKSHELF_INSERT
	f	Lapc;	et	CHISELED_BOOKSHELF_INSERT_ENCHANTED
	f	Lapc;	eu	CHISELED_BOOKSHELF_STEP
	f	Lapc;	ev	CHISELED_BOOKSHELF_PICKUP
	f	Lapc;	ew	CHISELED_BOOKSHELF_PICKUP_ENCHANTED
	f	Lapc;	ex	CHISELED_BOOKSHELF_PLACE
	f	Lapc;	ey	CHORUS_FLOWER_DEATH
	f	Lapc;	ez	CHORUS_FLOWER_GROW
	f	Lapc;	fA	DEEPSLATE_BRICKS_PLACE
	f	Lapc;	fB	DEEPSLATE_BRICKS_STEP
	f	Lapc;	fC	DEEPSLATE_BREAK
	f	Lapc;	fD	DEEPSLATE_FALL
	f	Lapc;	fE	DEEPSLATE_HIT
	f	Lapc;	fF	DEEPSLATE_PLACE
	f	Lapc;	fG	DEEPSLATE_STEP
	f	Lapc;	fH	DEEPSLATE_TILES_BREAK
	f	Lapc;	fI	DEEPSLATE_TILES_FALL
	f	Lapc;	fJ	DEEPSLATE_TILES_HIT
	f	Lapc;	fK	DEEPSLATE_TILES_PLACE
	f	Lapc;	fL	DEEPSLATE_TILES_STEP
	f	Lapc;	f	ALLAY_ITEM_TAKEN
	f	Lapc;	fM	DISPENSER_DISPENSE
	f	Lapc;	fN	DISPENSER_FAIL
	f	Lapc;	fO	DISPENSER_LAUNCH
	f	Lapc;	fP	DOLPHIN_AMBIENT
	f	Lapc;	fQ	DOLPHIN_AMBIENT_WATER
	f	Lapc;	fR	DOLPHIN_ATTACK
	f	Lapc;	fS	DOLPHIN_DEATH
	f	Lapc;	fT	DOLPHIN_EAT
	f	Lapc;	fU	DOLPHIN_HURT
	f	Lapc;	fV	DOLPHIN_JUMP
	f	Lapc;	fW	DOLPHIN_PLAY
	f	Lapc;	fX	DOLPHIN_SPLASH
	f	Lapc;	fY	DOLPHIN_SWIM
	f	Lapc;	fZ	DONKEY_AMBIENT
	f	Lapc;	fa	COW_DEATH
	f	Lapc;	fb	COW_HURT
	f	Lapc;	fc	COW_MILK
	f	Lapc;	fd	COW_STEP
	f	Lapc;	fe	CREEPER_DEATH
	f	Lapc;	ff	CREEPER_HURT
	f	Lapc;	fg	CREEPER_PRIMED
	f	Lapc;	fh	CROP_BREAK
	f	Lapc;	fi	CROP_PLANTED
	f	Lapc;	fj	CROSSBOW_HIT
	f	Lapc;	fk	CROSSBOW_LOADING_END
	f	Lapc;	fl	CROSSBOW_LOADING_MIDDLE
	f	Lapc;	fm	CROSSBOW_LOADING_START
	f	Lapc;	fn	CROSSBOW_QUICK_CHARGE_1
	f	Lapc;	fo	CROSSBOW_QUICK_CHARGE_2
	f	Lapc;	fp	CROSSBOW_QUICK_CHARGE_3
	f	Lapc;	fq	CROSSBOW_SHOOT
	f	Lapc;	fr	DECORATED_POT_BREAK
	f	Lapc;	fs	DECORATED_POT_FALL
	f	Lapc;	ft	DECORATED_POT_HIT
	f	Lapc;	fu	DECORATED_POT_STEP
	f	Lapc;	fv	DECORATED_POT_PLACE
	f	Lapc;	fw	DECORATED_POT_SHATTER
	f	Lapc;	fx	DEEPSLATE_BRICKS_BREAK
	f	Lapc;	fy	DEEPSLATE_BRICKS_FALL
	f	Lapc;	fz	DEEPSLATE_BRICKS_HIT
	f	Lapc;	gA	DROWNED_HURT
	f	Lapc;	gB	DROWNED_HURT_WATER
	f	Lapc;	gC	DROWNED_SHOOT
	f	Lapc;	gD	DROWNED_STEP
	f	Lapc;	gE	DROWNED_SWIM
	f	Lapc;	gF	DYE_USE
	f	Lapc;	gG	EGG_THROW
	f	Lapc;	gH	ELDER_GUARDIAN_AMBIENT
	f	Lapc;	gI	ELDER_GUARDIAN_AMBIENT_LAND
	f	Lapc;	gJ	ELDER_GUARDIAN_CURSE
	f	Lapc;	gK	ELDER_GUARDIAN_DEATH
	f	Lapc;	gL	ELDER_GUARDIAN_DEATH_LAND
	f	Lapc;	g	ALLAY_THROW
	f	Lapc;	gM	ELDER_GUARDIAN_FLOP
	f	Lapc;	gN	ELDER_GUARDIAN_HURT
	f	Lapc;	gO	ELDER_GUARDIAN_HURT_LAND
	f	Lapc;	gP	ELYTRA_FLYING
	f	Lapc;	gQ	ENCHANTMENT_TABLE_USE
	f	Lapc;	gR	ENDER_CHEST_CLOSE
	f	Lapc;	gS	ENDER_CHEST_OPEN
	f	Lapc;	gT	ENDER_DRAGON_AMBIENT
	f	Lapc;	gU	ENDER_DRAGON_DEATH
	f	Lapc;	gV	DRAGON_FIREBALL_EXPLODE
	f	Lapc;	gW	ENDER_DRAGON_FLAP
	f	Lapc;	gX	ENDER_DRAGON_GROWL
	f	Lapc;	gY	ENDER_DRAGON_HURT
	f	Lapc;	gZ	ENDER_DRAGON_SHOOT
	f	Lapc;	ga	DONKEY_ANGRY
	f	Lapc;	gb	DONKEY_CHEST
	f	Lapc;	gc	DONKEY_DEATH
	f	Lapc;	gd	DONKEY_EAT
	f	Lapc;	ge	DONKEY_HURT
	f	Lapc;	gf	DRIPSTONE_BLOCK_BREAK
	f	Lapc;	gg	DRIPSTONE_BLOCK_STEP
	f	Lapc;	gh	DRIPSTONE_BLOCK_PLACE
	f	Lapc;	gi	DRIPSTONE_BLOCK_HIT
	f	Lapc;	gj	DRIPSTONE_BLOCK_FALL
	f	Lapc;	gk	POINTED_DRIPSTONE_BREAK
	f	Lapc;	gl	POINTED_DRIPSTONE_STEP
	f	Lapc;	gm	POINTED_DRIPSTONE_PLACE
	f	Lapc;	gn	POINTED_DRIPSTONE_HIT
	f	Lapc;	go	POINTED_DRIPSTONE_FALL
	f	Lapc;	gp	POINTED_DRIPSTONE_LAND
	f	Lapc;	gq	POINTED_DRIPSTONE_DRIP_LAVA
	f	Lapc;	gr	POINTED_DRIPSTONE_DRIP_WATER
	f	Lapc;	gs	POINTED_DRIPSTONE_DRIP_LAVA_INTO_CAULDRON
	f	Lapc;	gt	POINTED_DRIPSTONE_DRIP_WATER_INTO_CAULDRON
	f	Lapc;	gu	BIG_DRIPLEAF_TILT_DOWN
	f	Lapc;	gv	BIG_DRIPLEAF_TILT_UP
	f	Lapc;	gw	DROWNED_AMBIENT
	f	Lapc;	gx	DROWNED_AMBIENT_WATER
	f	Lapc;	gy	DROWNED_DEATH
	f	Lapc;	gz	DROWNED_DEATH_WATER
	f	Lapc;	hA	EXPERIENCE_ORB_PICKUP
	f	Lapc;	hB	FENCE_GATE_CLOSE
	f	Lapc;	hC	FENCE_GATE_OPEN
	f	Lapc;	hD	FIRECHARGE_USE
	f	Lapc;	hE	FIREWORK_ROCKET_BLAST
	f	Lapc;	hF	FIREWORK_ROCKET_BLAST_FAR
	f	Lapc;	hG	FIREWORK_ROCKET_LARGE_BLAST
	f	Lapc;	hH	FIREWORK_ROCKET_LARGE_BLAST_FAR
	f	Lapc;	hI	FIREWORK_ROCKET_LAUNCH
	f	Lapc;	hJ	FIREWORK_ROCKET_SHOOT
	f	Lapc;	hK	FIREWORK_ROCKET_TWINKLE
	f	Lapc;	hL	FIREWORK_ROCKET_TWINKLE_FAR
	f	Lhe$c;	h	AMBIENT_CAVE
	f	Lapc;	hM	FIRE_AMBIENT
	f	Lapc;	hN	FIRE_EXTINGUISH
	f	Lapc;	hO	FISH_SWIM
	f	Lapc;	hP	FISHING_BOBBER_RETRIEVE
	f	Lapc;	hQ	FISHING_BOBBER_SPLASH
	f	Lapc;	hR	FISHING_BOBBER_THROW
	f	Lapc;	hS	FLINTANDSTEEL_USE
	f	Lapc;	hT	FLOWERING_AZALEA_BREAK
	f	Lapc;	hU	FLOWERING_AZALEA_FALL
	f	Lapc;	hV	FLOWERING_AZALEA_HIT
	f	Lapc;	hW	FLOWERING_AZALEA_PLACE
	f	Lapc;	hX	FLOWERING_AZALEA_STEP
	f	Lapc;	hY	FOX_AGGRO
	f	Lapc;	hZ	FOX_AMBIENT
	f	Lapc;	ha	ENDER_EYE_DEATH
	f	Lapc;	hb	ENDER_EYE_LAUNCH
	f	Lapc;	hc	ENDERMAN_AMBIENT
	f	Lapc;	hd	ENDERMAN_DEATH
	f	Lapc;	he	ENDERMAN_HURT
	f	Lapc;	hf	ENDERMAN_SCREAM
	f	Lapc;	hg	ENDERMAN_STARE
	f	Lapc;	hh	ENDERMAN_TELEPORT
	f	Lapc;	hi	ENDERMITE_AMBIENT
	f	Lapc;	hj	ENDERMITE_DEATH
	f	Lapc;	hk	ENDERMITE_HURT
	f	Lapc;	hl	ENDERMITE_STEP
	f	Lapc;	hm	ENDER_PEARL_THROW
	f	Lapc;	hn	END_GATEWAY_SPAWN
	f	Lapc;	ho	END_PORTAL_FRAME_FILL
	f	Lapc;	hp	END_PORTAL_SPAWN
	f	Lapc;	hq	EVOKER_AMBIENT
	f	Lapc;	hr	EVOKER_CAST_SPELL
	f	Lapc;	hs	EVOKER_CELEBRATE
	f	Lapc;	ht	EVOKER_DEATH
	f	Lapc;	hu	EVOKER_FANGS_ATTACK
	f	Lapc;	hv	EVOKER_HURT
	f	Lapc;	hw	EVOKER_PREPARE_ATTACK
	f	Lapc;	hx	EVOKER_PREPARE_SUMMON
	f	Lapc;	hy	EVOKER_PREPARE_WOLOLO
	f	Lapc;	hz	EXPERIENCE_BOTTLE_THROW
	f	Lapc;	iA	FROGSPAWN_FALL
	f	Lapc;	iB	FROGSPAWN_HATCH
	f	Lapc;	iC	FROGSPAWN_HIT
	f	Lapc;	iD	FROGSPAWN_PLACE
	f	Lapc;	iE	FROG_AMBIENT
	f	Lapc;	iF	FROG_DEATH
	f	Lapc;	iG	FROG_EAT
	f	Lapc;	iH	FROG_HURT
	f	Lapc;	iI	FROG_LAY_SPAWN
	f	Lapc;	iJ	FROG_LONG_JUMP
	f	Lapc;	iK	FROG_STEP
	f	Lapc;	iL	FROG_TONGUE
	f	Lhe$c;	i	AMBIENT_BASALT_DELTAS_ADDITIONS
	f	Lapc;	iM	ROOTS_BREAK
	f	Lapc;	iN	ROOTS_STEP
	f	Lapc;	iO	ROOTS_PLACE
	f	Lapc;	iP	ROOTS_HIT
	f	Lapc;	iQ	ROOTS_FALL
	f	Lapc;	iR	FURNACE_FIRE_CRACKLE
	f	Lapc;	iS	GENERIC_BIG_FALL
	f	Lapc;	iT	GENERIC_BURN
	f	Lapc;	iU	GENERIC_DEATH
	f	Lapc;	iV	GENERIC_DRINK
	f	Lapc;	iW	GENERIC_EAT
	f	Lapc;	iX	GENERIC_EXPLODE
	f	Lapc;	iY	GENERIC_EXTINGUISH_FIRE
	f	Lapc;	iZ	GENERIC_HURT
	f	Lapc;	ia	FOX_BITE
	f	Lapc;	ib	FOX_DEATH
	f	Lapc;	ic	FOX_EAT
	f	Lapc;	id	FOX_HURT
	f	Lapc;	ie	FOX_SCREECH
	f	Lapc;	if	FOX_SLEEP
	f	Lapc;	ig	FOX_SNIFF
	f	Lapc;	ih	FOX_SPIT
	f	Lapc;	ii	FOX_TELEPORT
	f	Lapc;	ij	SUSPICIOUS_SAND_BREAK
	f	Lapc;	ik	SUSPICIOUS_SAND_STEP
	f	Lapc;	il	SUSPICIOUS_SAND_PLACE
	f	Lapc;	im	SUSPICIOUS_SAND_HIT
	f	Lapc;	in	SUSPICIOUS_SAND_FALL
	f	Lapc;	io	SUSPICIOUS_GRAVEL_BREAK
	f	Lapc;	ip	SUSPICIOUS_GRAVEL_STEP
	f	Lapc;	iq	SUSPICIOUS_GRAVEL_PLACE
	f	Lapc;	ir	SUSPICIOUS_GRAVEL_HIT
	f	Lapc;	is	SUSPICIOUS_GRAVEL_FALL
	f	Lapc;	it	FROGLIGHT_BREAK
	f	Lapc;	iu	FROGLIGHT_FALL
	f	Lapc;	iv	FROGLIGHT_HIT
	f	Lapc;	iw	FROGLIGHT_PLACE
	f	Lapc;	ix	FROGLIGHT_STEP
	f	Lapc;	iy	FROGSPAWNSTEP
	f	Lapc;	iz	FROGSPAWN_BREAK
	f	Lapc;	jA	GLOW_SQUID_DEATH
	f	Lapc;	jB	GLOW_SQUID_HURT
	f	Lapc;	jC	GLOW_SQUID_SQUIRT
	f	Lapc;	jD	GOAT_AMBIENT
	f	Lapc;	jE	GOAT_DEATH
	f	Lapc;	jF	GOAT_EAT
	f	Lapc;	jG	GOAT_HURT
	f	Lapc;	jH	GOAT_LONG_JUMP
	f	Lapc;	jI	GOAT_MILK
	f	Lapc;	jJ	GOAT_PREPARE_RAM
	f	Lapc;	jK	GOAT_RAM_IMPACT
	f	Lapc;	jL	GOAT_HORN_BREAK
	f	Lhe$c;	j	AMBIENT_BASALT_DELTAS_LOOP
	f	Lapc;	jM	GOAT_HORN_PLAY
	f	Lapc;	jN	GOAT_SCREAMING_AMBIENT
	f	Lapc;	jO	GOAT_SCREAMING_DEATH
	f	Lapc;	jP	GOAT_SCREAMING_EAT
	f	Lapc;	jQ	GOAT_SCREAMING_HURT
	f	Lapc;	jR	GOAT_SCREAMING_LONG_JUMP
	f	Lapc;	jS	GOAT_SCREAMING_MILK
	f	Lapc;	jT	GOAT_SCREAMING_PREPARE_RAM
	f	Lapc;	jU	GOAT_SCREAMING_RAM_IMPACT
	f	Lapc;	jV	GOAT_SCREAMING_HORN_BREAK
	f	Lapc;	jW	GOAT_STEP
	f	Lapc;	jX	GRASS_BREAK
	f	Lapc;	jY	GRASS_FALL
	f	Lapc;	jZ	GRASS_HIT
	f	Lapc;	ja	GENERIC_SMALL_FALL
	f	Lapc;	jb	GENERIC_SPLASH
	f	Lapc;	jc	GENERIC_SWIM
	f	Lapc;	jd	GHAST_AMBIENT
	f	Lapc;	je	GHAST_DEATH
	f	Lapc;	jf	GHAST_HURT
	f	Lapc;	jg	GHAST_SCREAM
	f	Lapc;	jh	GHAST_SHOOT
	f	Lapc;	ji	GHAST_WARN
	f	Lapc;	jj	GILDED_BLACKSTONE_BREAK
	f	Lapc;	jk	GILDED_BLACKSTONE_FALL
	f	Lapc;	jl	GILDED_BLACKSTONE_HIT
	f	Lapc;	jm	GILDED_BLACKSTONE_PLACE
	f	Lapc;	jn	GILDED_BLACKSTONE_STEP
	f	Lapc;	jo	GLASS_BREAK
	f	Lapc;	jp	GLASS_FALL
	f	Lapc;	jq	GLASS_HIT
	f	Lapc;	jr	GLASS_PLACE
	f	Lapc;	js	GLASS_STEP
	f	Lapc;	jt	GLOW_INK_SAC_USE
	f	Lapc;	ju	GLOW_ITEM_FRAME_ADD_ITEM
	f	Lapc;	jv	GLOW_ITEM_FRAME_BREAK
	f	Lapc;	jw	GLOW_ITEM_FRAME_PLACE
	f	Lapc;	jx	GLOW_ITEM_FRAME_REMOVE_ITEM
	f	Lapc;	jy	GLOW_ITEM_FRAME_ROTATE_ITEM
	f	Lapc;	jz	GLOW_SQUID_AMBIENT
	f	Lapc;	kA	HANGING_SIGN_PLACE
	f	Lapc;	kB	NETHER_WOOD_HANGING_SIGN_STEP
	f	Lapc;	kC	NETHER_WOOD_HANGING_SIGN_BREAK
	f	Lapc;	kD	NETHER_WOOD_HANGING_SIGN_FALL
	f	Lapc;	kE	NETHER_WOOD_HANGING_SIGN_HIT
	f	Lapc;	kF	NETHER_WOOD_HANGING_SIGN_PLACE
	f	Lapc;	kG	BAMBOO_WOOD_HANGING_SIGN_STEP
	f	Lapc;	kH	BAMBOO_WOOD_HANGING_SIGN_BREAK
	f	Lapc;	kI	BAMBOO_WOOD_HANGING_SIGN_FALL
	f	Lapc;	kJ	BAMBOO_WOOD_HANGING_SIGN_HIT
	f	Lapc;	kK	BAMBOO_WOOD_HANGING_SIGN_PLACE
	f	Lapc;	kL	HOE_TILL
	f	Lhe$c;	k	AMBIENT_BASALT_DELTAS_MOOD
	f	Lapc;	kM	HOGLIN_AMBIENT
	f	Lapc;	kN	HOGLIN_ANGRY
	f	Lapc;	kO	HOGLIN_ATTACK
	f	Lapc;	kP	HOGLIN_CONVERTED_TO_ZOMBIFIED
	f	Lapc;	kQ	HOGLIN_DEATH
	f	Lapc;	kR	HOGLIN_HURT
	f	Lapc;	kS	HOGLIN_RETREAT
	f	Lapc;	kT	HOGLIN_STEP
	f	Lapc;	kU	HONEY_BLOCK_BREAK
	f	Lapc;	kV	HONEY_BLOCK_FALL
	f	Lapc;	kW	HONEY_BLOCK_HIT
	f	Lapc;	kX	HONEY_BLOCK_PLACE
	f	Lapc;	kY	HONEY_BLOCK_SLIDE
	f	Lapc;	kZ	HONEY_BLOCK_STEP
	f	Lapc;	ka	GRASS_PLACE
	f	Lapc;	kb	GRASS_STEP
	f	Lapc;	kc	GRAVEL_BREAK
	f	Lapc;	kd	GRAVEL_FALL
	f	Lapc;	ke	GRAVEL_HIT
	f	Lapc;	kf	GRAVEL_PLACE
	f	Lapc;	kg	GRAVEL_STEP
	f	Lapc;	kh	GRINDSTONE_USE
	f	Lapc;	ki	GROWING_PLANT_CROP
	f	Lapc;	kj	GUARDIAN_AMBIENT
	f	Lapc;	kk	GUARDIAN_AMBIENT_LAND
	f	Lapc;	kl	GUARDIAN_ATTACK
	f	Lapc;	km	GUARDIAN_DEATH
	f	Lapc;	kn	GUARDIAN_DEATH_LAND
	f	Lapc;	ko	GUARDIAN_FLOP
	f	Lapc;	kp	GUARDIAN_HURT
	f	Lapc;	kq	GUARDIAN_HURT_LAND
	f	Lapc;	kr	HANGING_ROOTS_BREAK
	f	Lapc;	ks	HANGING_ROOTS_FALL
	f	Lapc;	kt	HANGING_ROOTS_HIT
	f	Lapc;	ku	HANGING_ROOTS_PLACE
	f	Lapc;	kv	HANGING_ROOTS_STEP
	f	Lapc;	kw	HANGING_SIGN_STEP
	f	Lapc;	kx	HANGING_SIGN_BREAK
	f	Lapc;	ky	HANGING_SIGN_FALL
	f	Lapc;	kz	HANGING_SIGN_HIT
	f	Lapc;	lA	HUSK_HURT
	f	Lapc;	lB	HUSK_STEP
	f	Lapc;	lC	ILLUSIONER_AMBIENT
	f	Lapc;	lD	ILLUSIONER_CAST_SPELL
	f	Lapc;	lE	ILLUSIONER_DEATH
	f	Lapc;	lF	ILLUSIONER_HURT
	f	Lapc;	lG	ILLUSIONER_MIRROR_MOVE
	f	Lapc;	lH	ILLUSIONER_PREPARE_BLINDNESS
	f	Lapc;	lI	ILLUSIONER_PREPARE_MIRROR
	f	Lapc;	lJ	INK_SAC_USE
	f	Lapc;	lK	IRON_DOOR_CLOSE
	f	Lapc;	lL	IRON_DOOR_OPEN
	f	Lhe$c;	l	AMBIENT_CRIMSON_FOREST_ADDITIONS
	f	Lapc;	lM	IRON_GOLEM_ATTACK
	f	Lapc;	lN	IRON_GOLEM_DAMAGE
	f	Lapc;	lO	IRON_GOLEM_DEATH
	f	Lapc;	lP	IRON_GOLEM_HURT
	f	Lapc;	lQ	IRON_GOLEM_REPAIR
	f	Lapc;	lR	IRON_GOLEM_STEP
	f	Lapc;	lS	IRON_TRAPDOOR_CLOSE
	f	Lapc;	lT	IRON_TRAPDOOR_OPEN
	f	Lapc;	lU	ITEM_FRAME_ADD_ITEM
	f	Lapc;	lV	ITEM_FRAME_BREAK
	f	Lapc;	lW	ITEM_FRAME_PLACE
	f	Lapc;	lX	ITEM_FRAME_REMOVE_ITEM
	f	Lapc;	lY	ITEM_FRAME_ROTATE_ITEM
	f	Lapc;	lZ	ITEM_BREAK
	f	Lapc;	la	HONEYCOMB_WAX_ON
	f	Lapc;	lb	HONEY_DRINK
	f	I	lc	GOAT_HORN_VARIANT_COUNT
	f	Lcom/google/common/collect/ImmutableList;	ld	GOAT_HORN_SOUND_VARIANTS
	f	Lapc;	le	HORSE_AMBIENT
	f	Lapc;	lf	HORSE_ANGRY
	f	Lapc;	lg	HORSE_ARMOR
	f	Lapc;	lh	HORSE_BREATHE
	f	Lapc;	li	HORSE_DEATH
	f	Lapc;	lj	HORSE_EAT
	f	Lapc;	lk	HORSE_GALLOP
	f	Lapc;	ll	HORSE_HURT
	f	Lapc;	lm	HORSE_JUMP
	f	Lapc;	ln	HORSE_LAND
	f	Lapc;	lo	HORSE_SADDLE
	f	Lapc;	lp	HORSE_STEP
	f	Lapc;	lq	HORSE_STEP_WOOD
	f	Lapc;	lr	HOSTILE_BIG_FALL
	f	Lapc;	ls	HOSTILE_DEATH
	f	Lapc;	lt	HOSTILE_HURT
	f	Lapc;	lu	HOSTILE_SMALL_FALL
	f	Lapc;	lv	HOSTILE_SPLASH
	f	Lapc;	lw	HOSTILE_SWIM
	f	Lapc;	lx	HUSK_AMBIENT
	f	Lapc;	ly	HUSK_CONVERTED_TO_ZOMBIE
	f	Lapc;	lz	HUSK_DEATH
	f	Lapc;	mA	LLAMA_EAT
	f	Lapc;	mB	LLAMA_HURT
	f	Lapc;	mC	LLAMA_SPIT
	f	Lapc;	mD	LLAMA_STEP
	f	Lapc;	mE	LLAMA_SWAG
	f	Lapc;	mF	MAGMA_CUBE_DEATH_SMALL
	f	Lapc;	mG	LODESTONE_BREAK
	f	Lapc;	mH	LODESTONE_STEP
	f	Lapc;	mI	LODESTONE_PLACE
	f	Lapc;	mJ	LODESTONE_HIT
	f	Lapc;	mK	LODESTONE_FALL
	f	Lapc;	mL	LODESTONE_COMPASS_LOCK
	f	Lhe$c;	m	AMBIENT_CRIMSON_FOREST_LOOP
	f	Lapc;	mM	MAGMA_CUBE_DEATH
	f	Lapc;	mN	MAGMA_CUBE_HURT
	f	Lapc;	mO	MAGMA_CUBE_HURT_SMALL
	f	Lapc;	mP	MAGMA_CUBE_JUMP
	f	Lapc;	mQ	MAGMA_CUBE_SQUISH
	f	Lapc;	mR	MAGMA_CUBE_SQUISH_SMALL
	f	Lapc;	mS	MANGROVE_ROOTS_BREAK
	f	Lapc;	mT	MANGROVE_ROOTS_FALL
	f	Lapc;	mU	MANGROVE_ROOTS_HIT
	f	Lapc;	mV	MANGROVE_ROOTS_PLACE
	f	Lapc;	mW	MANGROVE_ROOTS_STEP
	f	Lapc;	mX	MEDIUM_AMETHYST_BUD_BREAK
	f	Lapc;	mY	MEDIUM_AMETHYST_BUD_PLACE
	f	Lapc;	mZ	METAL_BREAK
	f	Lapc;	ma	ITEM_PICKUP
	f	Lapc;	mb	LADDER_BREAK
	f	Lapc;	mc	LADDER_FALL
	f	Lapc;	md	LADDER_HIT
	f	Lapc;	me	LADDER_PLACE
	f	Lapc;	mf	LADDER_STEP
	f	Lapc;	mg	LANTERN_BREAK
	f	Lapc;	mh	LANTERN_FALL
	f	Lapc;	mi	LANTERN_HIT
	f	Lapc;	mj	LANTERN_PLACE
	f	Lapc;	mk	LANTERN_STEP
	f	Lapc;	ml	LARGE_AMETHYST_BUD_BREAK
	f	Lapc;	mm	LARGE_AMETHYST_BUD_PLACE
	f	Lapc;	mn	LAVA_AMBIENT
	f	Lapc;	mo	LAVA_EXTINGUISH
	f	Lapc;	mp	LAVA_POP
	f	Lapc;	mq	LEASH_KNOT_BREAK
	f	Lapc;	mr	LEASH_KNOT_PLACE
	f	Lapc;	ms	LEVER_CLICK
	f	Lapc;	mt	LIGHTNING_BOLT_IMPACT
	f	Lapc;	mu	LIGHTNING_BOLT_THUNDER
	f	Lapc;	mv	LINGERING_POTION_THROW
	f	Lapc;	mw	LLAMA_AMBIENT
	f	Lapc;	mx	LLAMA_ANGRY
	f	Lapc;	my	LLAMA_CHEST
	f	Lapc;	mz	LLAMA_DEATH
	f	Lapc;	nA	MOSS_HIT
	f	Lapc;	nB	MOSS_PLACE
	f	Lapc;	nC	MOSS_STEP
	f	Lapc;	nD	MUD_BREAK
	f	Lapc;	nE	MUD_FALL
	f	Lapc;	nF	MUD_HIT
	f	Lapc;	nG	MUD_PLACE
	f	Lapc;	nH	MUD_STEP
	f	Lapc;	nI	MUD_BRICKS_BREAK
	f	Lapc;	nJ	MUD_BRICKS_FALL
	f	Lapc;	nK	MUD_BRICKS_HIT
	f	Lapc;	nL	MUD_BRICKS_PLACE
	f	Lhe$c;	n	AMBIENT_CRIMSON_FOREST_MOOD
	f	Lapc;	nM	MUD_BRICKS_STEP
	f	Lapc;	nN	MUDDY_MANGROVE_ROOTS_BREAK
	f	Lapc;	nO	MUDDY_MANGROVE_ROOTS_FALL
	f	Lapc;	nP	MUDDY_MANGROVE_ROOTS_HIT
	f	Lapc;	nQ	MUDDY_MANGROVE_ROOTS_PLACE
	f	Lapc;	nR	MUDDY_MANGROVE_ROOTS_STEP
	f	Lapc;	nS	MULE_AMBIENT
	f	Lapc;	nT	MULE_ANGRY
	f	Lapc;	nU	MULE_CHEST
	f	Lapc;	nV	MULE_DEATH
	f	Lapc;	nW	MULE_EAT
	f	Lapc;	nX	MULE_HURT
	f	Lhe$c;	nY	MUSIC_CREATIVE
	f	Lhe$c;	nZ	MUSIC_CREDITS
	f	Lapc;	na	METAL_FALL
	f	Lapc;	nb	METAL_HIT
	f	Lapc;	nc	METAL_PLACE
	f	Lapc;	nd	METAL_PRESSURE_PLATE_CLICK_OFF
	f	Lapc;	ne	METAL_PRESSURE_PLATE_CLICK_ON
	f	Lapc;	nf	METAL_STEP
	f	Lapc;	ng	MINECART_INSIDE_UNDERWATER
	f	Lapc;	nh	MINECART_INSIDE
	f	Lapc;	ni	MINECART_RIDING
	f	Lapc;	nj	MOOSHROOM_CONVERT
	f	Lapc;	nk	MOOSHROOM_EAT
	f	Lapc;	nl	MOOSHROOM_MILK
	f	Lapc;	nm	MOOSHROOM_MILK_SUSPICIOUSLY
	f	Lapc;	nn	MOOSHROOM_SHEAR
	f	Lapc;	no	MOSS_CARPET_BREAK
	f	Lapc;	np	MOSS_CARPET_FALL
	f	Lapc;	nq	MOSS_CARPET_HIT
	f	Lapc;	nr	MOSS_CARPET_PLACE
	f	Lapc;	ns	MOSS_CARPET_STEP
	f	Lapc;	nt	PINK_PETALS_BREAK
	f	Lapc;	nu	PINK_PETALS_FALL
	f	Lapc;	nv	PINK_PETALS_HIT
	f	Lapc;	nw	PINK_PETALS_PLACE
	f	Lapc;	nx	PINK_PETALS_STEP
	f	Lapc;	ny	MOSS_BREAK
	f	Lapc;	nz	MOSS_FALL
	f	Lhe$c;	oA	MUSIC_BIOME_LUSH_CAVES
	f	Lhe$c;	oB	MUSIC_BIOME_SWAMP
	f	Lhe$c;	oC	MUSIC_BIOME_FOREST
	f	Lhe$c;	oD	MUSIC_BIOME_OLD_GROWTH_TAIGA
	f	Lhe$c;	oE	MUSIC_BIOME_MEADOW
	f	Lhe$c;	oF	MUSIC_BIOME_CHERRY_GROVE
	f	Lhe$c;	oG	MUSIC_BIOME_NETHER_WASTES
	f	Lhe$c;	oH	MUSIC_BIOME_FROZEN_PEAKS
	f	Lhe$c;	oI	MUSIC_BIOME_SNOWY_SLOPES
	f	Lhe$c;	oJ	MUSIC_BIOME_SOUL_SAND_VALLEY
	f	Lhe$c;	oK	MUSIC_BIOME_STONY_PEAKS
	f	Lhe$c;	oL	MUSIC_BIOME_WARPED_FOREST
	f	Lhe$c;	o	AMBIENT_NETHER_WASTES_ADDITIONS
	f	Lhe$c;	oM	MUSIC_BIOME_FLOWER_FOREST
	f	Lhe$c;	oN	MUSIC_BIOME_DESERT
	f	Lhe$c;	oO	MUSIC_BIOME_BADLANDS
	f	Lhe$c;	oP	MUSIC_BIOME_JUNGLE
	f	Lhe$c;	oQ	MUSIC_BIOME_SPARSE_JUNGLE
	f	Lhe$c;	oR	MUSIC_BIOME_BAMBOO_JUNGLE
	f	Lhe$c;	oS	MUSIC_UNDER_WATER
	f	Lapc;	oT	NETHER_BRICKS_BREAK
	f	Lapc;	oU	NETHER_BRICKS_STEP
	f	Lapc;	oV	NETHER_BRICKS_PLACE
	f	Lapc;	oW	NETHER_BRICKS_HIT
	f	Lapc;	oX	NETHER_BRICKS_FALL
	f	Lapc;	oY	NETHER_WART_BREAK
	f	Lapc;	oZ	NETHER_WART_PLANTED
	f	Lapc;	oa	MUSIC_DISC_5
	f	Lapc;	ob	MUSIC_DISC_11
	f	Lapc;	oc	MUSIC_DISC_13
	f	Lapc;	od	MUSIC_DISC_BLOCKS
	f	Lapc;	oe	MUSIC_DISC_CAT
	f	Lapc;	of	MUSIC_DISC_CHIRP
	f	Lapc;	og	MUSIC_DISC_FAR
	f	Lapc;	oh	MUSIC_DISC_MALL
	f	Lapc;	oi	MUSIC_DISC_MELLOHI
	f	Lapc;	oj	MUSIC_DISC_PIGSTEP
	f	Lapc;	ok	MUSIC_DISC_STAL
	f	Lapc;	ol	MUSIC_DISC_STRAD
	f	Lapc;	om	MUSIC_DISC_WAIT
	f	Lapc;	on	MUSIC_DISC_WARD
	f	Lapc;	oo	MUSIC_DISC_OTHERSIDE
	f	Lapc;	op	MUSIC_DISC_RELIC
	f	Lhe$c;	oq	MUSIC_DRAGON
	f	Lhe$c;	or	MUSIC_END
	f	Lhe$c;	os	MUSIC_GAME
	f	Lhe$c;	ot	MUSIC_MENU
	f	Lhe$c;	ou	MUSIC_BIOME_BASALT_DELTAS
	f	Lhe$c;	ov	MUSIC_BIOME_CRIMSON_FOREST
	f	Lhe$c;	ow	MUSIC_BIOME_DEEP_DARK
	f	Lhe$c;	ox	MUSIC_BIOME_DRIPSTONE_CAVES
	f	Lhe$c;	oy	MUSIC_BIOME_GROVE
	f	Lhe$c;	oz	MUSIC_BIOME_JAGGED_PEAKS
	f	Lapc;	pA	NYLIUM_BREAK
	f	Lapc;	pB	NYLIUM_STEP
	f	Lapc;	pC	NYLIUM_PLACE
	f	Lapc;	pD	NYLIUM_HIT
	f	Lapc;	pE	NYLIUM_FALL
	f	Lapc;	pF	NETHER_SPROUTS_BREAK
	f	Lapc;	pG	NETHER_SPROUTS_STEP
	f	Lapc;	pH	NETHER_SPROUTS_PLACE
	f	Lapc;	pI	NETHER_SPROUTS_HIT
	f	Lapc;	pJ	NETHER_SPROUTS_FALL
	f	Lapc;	pK	FUNGUS_BREAK
	f	Lapc;	pL	FUNGUS_STEP
	f	Lhe$c;	p	AMBIENT_NETHER_WASTES_LOOP
	f	Lapc;	pM	FUNGUS_PLACE
	f	Lapc;	pN	FUNGUS_HIT
	f	Lapc;	pO	FUNGUS_FALL
	f	Lapc;	pP	WEEPING_VINES_BREAK
	f	Lapc;	pQ	WEEPING_VINES_STEP
	f	Lapc;	pR	WEEPING_VINES_PLACE
	f	Lapc;	pS	WEEPING_VINES_HIT
	f	Lapc;	pT	WEEPING_VINES_FALL
	f	Lapc;	pU	WART_BLOCK_BREAK
	f	Lapc;	pV	WART_BLOCK_STEP
	f	Lapc;	pW	WART_BLOCK_PLACE
	f	Lapc;	pX	WART_BLOCK_HIT
	f	Lapc;	pY	WART_BLOCK_FALL
	f	Lapc;	pZ	NETHERITE_BLOCK_BREAK
	f	Lapc;	pa	NETHER_WOOD_BREAK
	f	Lapc;	pb	NETHER_WOOD_FALL
	f	Lapc;	pc	NETHER_WOOD_HIT
	f	Lapc;	pd	NETHER_WOOD_PLACE
	f	Lapc;	pe	NETHER_WOOD_STEP
	f	Lapc;	pf	NETHER_WOOD_DOOR_CLOSE
	f	Lapc;	pg	NETHER_WOOD_DOOR_OPEN
	f	Lapc;	ph	NETHER_WOOD_TRAPDOOR_CLOSE
	f	Lapc;	pi	NETHER_WOOD_TRAPDOOR_OPEN
	f	Lapc;	pj	NETHER_WOOD_BUTTON_CLICK_OFF
	f	Lapc;	pk	NETHER_WOOD_BUTTON_CLICK_ON
	f	Lapc;	pl	NETHER_WOOD_PRESSURE_PLATE_CLICK_OFF
	f	Lapc;	pm	NETHER_WOOD_PRESSURE_PLATE_CLICK_ON
	f	Lapc;	pn	NETHER_WOOD_FENCE_GATE_CLOSE
	f	Lapc;	po	NETHER_WOOD_FENCE_GATE_OPEN
	f	Lapc;	pp	EMPTY
	f	Lapc;	pq	PACKED_MUD_BREAK
	f	Lapc;	pr	PACKED_MUD_FALL
	f	Lapc;	ps	PACKED_MUD_HIT
	f	Lapc;	pt	PACKED_MUD_PLACE
	f	Lapc;	pu	PACKED_MUD_STEP
	f	Lapc;	pv	STEM_BREAK
	f	Lapc;	pw	STEM_STEP
	f	Lapc;	px	STEM_PLACE
	f	Lapc;	py	STEM_HIT
	f	Lapc;	pz	STEM_FALL
	f	Lhe$c;	qA	NOTE_BLOCK_IMITATE_SKELETON
	f	Lhe$c;	qB	NOTE_BLOCK_IMITATE_CREEPER
	f	Lhe$c;	qC	NOTE_BLOCK_IMITATE_ENDER_DRAGON
	f	Lhe$c;	qD	NOTE_BLOCK_IMITATE_WITHER_SKELETON
	f	Lhe$c;	qE	NOTE_BLOCK_IMITATE_PIGLIN
	f	Lapc;	qF	OCELOT_HURT
	f	Lapc;	qG	OCELOT_AMBIENT
	f	Lapc;	qH	OCELOT_DEATH
	f	Lapc;	qI	PAINTING_BREAK
	f	Lapc;	qJ	PAINTING_PLACE
	f	Lapc;	qK	PANDA_PRE_SNEEZE
	f	Lapc;	qL	PANDA_SNEEZE
	f	Lhe$c;	q	AMBIENT_NETHER_WASTES_MOOD
	f	Lapc;	qM	PANDA_AMBIENT
	f	Lapc;	qN	PANDA_DEATH
	f	Lapc;	qO	PANDA_EAT
	f	Lapc;	qP	PANDA_STEP
	f	Lapc;	qQ	PANDA_CANT_BREED
	f	Lapc;	qR	PANDA_AGGRESSIVE_AMBIENT
	f	Lapc;	qS	PANDA_WORRIED_AMBIENT
	f	Lapc;	qT	PANDA_HURT
	f	Lapc;	qU	PANDA_BITE
	f	Lapc;	qV	PARROT_AMBIENT
	f	Lapc;	qW	PARROT_DEATH
	f	Lapc;	qX	PARROT_EAT
	f	Lapc;	qY	PARROT_FLY
	f	Lapc;	qZ	PARROT_HURT
	f	Lapc;	qa	NETHERITE_BLOCK_STEP
	f	Lapc;	qb	NETHERITE_BLOCK_PLACE
	f	Lapc;	qc	NETHERITE_BLOCK_HIT
	f	Lapc;	qd	NETHERITE_BLOCK_FALL
	f	Lapc;	qe	NETHERRACK_BREAK
	f	Lapc;	qf	NETHERRACK_STEP
	f	Lapc;	qg	NETHERRACK_PLACE
	f	Lapc;	qh	NETHERRACK_HIT
	f	Lapc;	qi	NETHERRACK_FALL
	f	Lhe$c;	qj	NOTE_BLOCK_BASEDRUM
	f	Lhe$c;	qk	NOTE_BLOCK_BASS
	f	Lhe$c;	ql	NOTE_BLOCK_BELL
	f	Lhe$c;	qm	NOTE_BLOCK_CHIME
	f	Lhe$c;	qn	NOTE_BLOCK_FLUTE
	f	Lhe$c;	qo	NOTE_BLOCK_GUITAR
	f	Lhe$c;	qp	NOTE_BLOCK_HARP
	f	Lhe$c;	qq	NOTE_BLOCK_HAT
	f	Lhe$c;	qr	NOTE_BLOCK_PLING
	f	Lhe$c;	qs	NOTE_BLOCK_SNARE
	f	Lhe$c;	qt	NOTE_BLOCK_XYLOPHONE
	f	Lhe$c;	qu	NOTE_BLOCK_IRON_XYLOPHONE
	f	Lhe$c;	qv	NOTE_BLOCK_COW_BELL
	f	Lhe$c;	qw	NOTE_BLOCK_DIDGERIDOO
	f	Lhe$c;	qx	NOTE_BLOCK_BIT
	f	Lhe$c;	qy	NOTE_BLOCK_BANJO
	f	Lhe$c;	qz	NOTE_BLOCK_IMITATE_ZOMBIE
	f	Lapc;	rA	PARROT_IMITATE_WARDEN
	f	Lapc;	rB	PARROT_IMITATE_WITCH
	f	Lapc;	rC	PARROT_IMITATE_WITHER
	f	Lapc;	rD	PARROT_IMITATE_WITHER_SKELETON
	f	Lapc;	rE	PARROT_IMITATE_ZOGLIN
	f	Lapc;	rF	PARROT_IMITATE_ZOMBIE
	f	Lapc;	rG	PARROT_IMITATE_ZOMBIE_VILLAGER
	f	Lapc;	rH	PARROT_STEP
	f	Lapc;	rI	PHANTOM_AMBIENT
	f	Lapc;	rJ	PHANTOM_BITE
	f	Lapc;	rK	PHANTOM_DEATH
	f	Lapc;	rL	PHANTOM_FLAP
	f	Lhe$c;	r	AMBIENT_SOUL_SAND_VALLEY_ADDITIONS
	f	Lapc;	rM	PHANTOM_HURT
	f	Lapc;	rN	PHANTOM_SWOOP
	f	Lapc;	rO	PIG_AMBIENT
	f	Lapc;	rP	PIG_DEATH
	f	Lapc;	rQ	PIG_HURT
	f	Lapc;	rR	PIG_SADDLE
	f	Lapc;	rS	PIG_STEP
	f	Lapc;	rT	PIGLIN_ADMIRING_ITEM
	f	Lapc;	rU	PIGLIN_AMBIENT
	f	Lapc;	rV	PIGLIN_ANGRY
	f	Lapc;	rW	PIGLIN_CELEBRATE
	f	Lapc;	rX	PIGLIN_DEATH
	f	Lapc;	rY	PIGLIN_JEALOUS
	f	Lapc;	rZ	PIGLIN_HURT
	f	Lapc;	ra	PARROT_IMITATE_BLAZE
	f	Lapc;	rb	PARROT_IMITATE_CREEPER
	f	Lapc;	rc	PARROT_IMITATE_DROWNED
	f	Lapc;	rd	PARROT_IMITATE_ELDER_GUARDIAN
	f	Lapc;	re	PARROT_IMITATE_ENDER_DRAGON
	f	Lapc;	rf	PARROT_IMITATE_ENDERMITE
	f	Lapc;	rg	PARROT_IMITATE_EVOKER
	f	Lapc;	rh	PARROT_IMITATE_GHAST
	f	Lapc;	ri	PARROT_IMITATE_GUARDIAN
	f	Lapc;	rj	PARROT_IMITATE_HOGLIN
	f	Lapc;	rk	PARROT_IMITATE_HUSK
	f	Lapc;	rl	PARROT_IMITATE_ILLUSIONER
	f	Lapc;	rm	PARROT_IMITATE_MAGMA_CUBE
	f	Lapc;	rn	PARROT_IMITATE_PHANTOM
	f	Lapc;	ro	PARROT_IMITATE_PIGLIN
	f	Lapc;	rp	PARROT_IMITATE_PIGLIN_BRUTE
	f	Lapc;	rq	PARROT_IMITATE_PILLAGER
	f	Lapc;	rr	PARROT_IMITATE_RAVAGER
	f	Lapc;	rs	PARROT_IMITATE_SHULKER
	f	Lapc;	rt	PARROT_IMITATE_SILVERFISH
	f	Lapc;	ru	PARROT_IMITATE_SKELETON
	f	Lapc;	rv	PARROT_IMITATE_SLIME
	f	Lapc;	rw	PARROT_IMITATE_SPIDER
	f	Lapc;	rx	PARROT_IMITATE_STRAY
	f	Lapc;	ry	PARROT_IMITATE_VEX
	f	Lapc;	rz	PARROT_IMITATE_VINDICATOR
	f	Lapc;	sA	PLAYER_HURT_DROWN
	f	Lapc;	sB	PLAYER_HURT_FREEZE
	f	Lapc;	sC	PLAYER_HURT_ON_FIRE
	f	Lapc;	sD	PLAYER_HURT_SWEET_BERRY_BUSH
	f	Lapc;	sE	PLAYER_LEVELUP
	f	Lapc;	sF	PLAYER_SMALL_FALL
	f	Lapc;	sG	PLAYER_SPLASH
	f	Lapc;	sH	PLAYER_SPLASH_HIGH_SPEED
	f	Lapc;	sI	PLAYER_SWIM
	f	Lapc;	sJ	POLAR_BEAR_AMBIENT
	f	Lapc;	sK	POLAR_BEAR_AMBIENT_BABY
	f	Lapc;	sL	POLAR_BEAR_DEATH
	f	Lhe$c;	s	AMBIENT_SOUL_SAND_VALLEY_LOOP
	f	Lapc;	sM	POLAR_BEAR_HURT
	f	Lapc;	sN	POLAR_BEAR_STEP
	f	Lapc;	sO	POLAR_BEAR_WARNING
	f	Lapc;	sP	POLISHED_DEEPSLATE_BREAK
	f	Lapc;	sQ	POLISHED_DEEPSLATE_FALL
	f	Lapc;	sR	POLISHED_DEEPSLATE_HIT
	f	Lapc;	sS	POLISHED_DEEPSLATE_PLACE
	f	Lapc;	sT	POLISHED_DEEPSLATE_STEP
	f	Lapc;	sU	PORTAL_AMBIENT
	f	Lapc;	sV	PORTAL_TRAVEL
	f	Lapc;	sW	PORTAL_TRIGGER
	f	Lapc;	sX	POWDER_SNOW_BREAK
	f	Lapc;	sY	POWDER_SNOW_FALL
	f	Lapc;	sZ	POWDER_SNOW_HIT
	f	Lapc;	sa	PIGLIN_RETREAT
	f	Lapc;	sb	PIGLIN_STEP
	f	Lapc;	sc	PIGLIN_CONVERTED_TO_ZOMBIFIED
	f	Lapc;	sd	PIGLIN_BRUTE_AMBIENT
	f	Lapc;	se	PIGLIN_BRUTE_ANGRY
	f	Lapc;	sf	PIGLIN_BRUTE_DEATH
	f	Lapc;	sg	PIGLIN_BRUTE_HURT
	f	Lapc;	sh	PIGLIN_BRUTE_STEP
	f	Lapc;	si	PIGLIN_BRUTE_CONVERTED_TO_ZOMBIFIED
	f	Lapc;	sj	PILLAGER_AMBIENT
	f	Lapc;	sk	PILLAGER_CELEBRATE
	f	Lapc;	sl	PILLAGER_DEATH
	f	Lapc;	sm	PILLAGER_HURT
	f	Lapc;	sn	PISTON_CONTRACT
	f	Lapc;	so	PISTON_EXTEND
	f	Lapc;	sp	PLAYER_ATTACK_CRIT
	f	Lapc;	sq	PLAYER_ATTACK_KNOCKBACK
	f	Lapc;	sr	PLAYER_ATTACK_NODAMAGE
	f	Lapc;	ss	PLAYER_ATTACK_STRONG
	f	Lapc;	st	PLAYER_ATTACK_SWEEP
	f	Lapc;	su	PLAYER_ATTACK_WEAK
	f	Lapc;	sv	PLAYER_BIG_FALL
	f	Lapc;	sw	PLAYER_BREATH
	f	Lapc;	sx	PLAYER_BURP
	f	Lapc;	sy	PLAYER_DEATH
	f	Lapc;	sz	PLAYER_HURT
	f	Lapc;	tA	NETHER_GOLD_ORE_HIT
	f	Lapc;	tB	NETHER_GOLD_ORE_PLACE
	f	Lapc;	tC	NETHER_GOLD_ORE_STEP
	f	Lapc;	tD	NETHER_ORE_BREAK
	f	Lapc;	tE	NETHER_ORE_FALL
	f	Lapc;	tF	NETHER_ORE_HIT
	f	Lapc;	tG	NETHER_ORE_PLACE
	f	Lapc;	tH	NETHER_ORE_STEP
	f	Lapc;	tI	REDSTONE_TORCH_BURNOUT
	f	Lapc;	tJ	RESPAWN_ANCHOR_AMBIENT
	f	Lapc;	tK	RESPAWN_ANCHOR_CHARGE
	f	Lhe$c;	tL	RESPAWN_ANCHOR_DEPLETE
	f	Lhe$c;	t	AMBIENT_SOUL_SAND_VALLEY_MOOD
	f	Lapc;	tM	RESPAWN_ANCHOR_SET_SPAWN
	f	Lapc;	tN	ROOTED_DIRT_BREAK
	f	Lapc;	tO	ROOTED_DIRT_FALL
	f	Lapc;	tP	ROOTED_DIRT_HIT
	f	Lapc;	tQ	ROOTED_DIRT_PLACE
	f	Lapc;	tR	ROOTED_DIRT_STEP
	f	Lapc;	tS	SALMON_AMBIENT
	f	Lapc;	tT	SALMON_DEATH
	f	Lapc;	tU	SALMON_FLOP
	f	Lapc;	tV	SALMON_HURT
	f	Lapc;	tW	SAND_BREAK
	f	Lapc;	tX	SAND_FALL
	f	Lapc;	tY	SAND_HIT
	f	Lapc;	tZ	SAND_PLACE
	f	Lapc;	ta	POWDER_SNOW_PLACE
	f	Lapc;	tb	POWDER_SNOW_STEP
	f	Lapc;	tc	PUFFER_FISH_AMBIENT
	f	Lapc;	td	PUFFER_FISH_BLOW_OUT
	f	Lapc;	te	PUFFER_FISH_BLOW_UP
	f	Lapc;	tf	PUFFER_FISH_DEATH
	f	Lapc;	tg	PUFFER_FISH_FLOP
	f	Lapc;	th	PUFFER_FISH_HURT
	f	Lapc;	ti	PUFFER_FISH_STING
	f	Lapc;	tj	PUMPKIN_CARVE
	f	Lapc;	tk	RABBIT_AMBIENT
	f	Lapc;	tl	RABBIT_ATTACK
	f	Lapc;	tm	RABBIT_DEATH
	f	Lapc;	tn	RABBIT_HURT
	f	Lapc;	to	RABBIT_JUMP
	f	Lhe$c;	tp	RAID_HORN
	f	Lapc;	tq	RAVAGER_AMBIENT
	f	Lapc;	tr	RAVAGER_ATTACK
	f	Lapc;	ts	RAVAGER_CELEBRATE
	f	Lapc;	tt	RAVAGER_DEATH
	f	Lapc;	tu	RAVAGER_HURT
	f	Lapc;	tv	RAVAGER_STEP
	f	Lapc;	tw	RAVAGER_STUNNED
	f	Lapc;	tx	RAVAGER_ROAR
	f	Lapc;	ty	NETHER_GOLD_ORE_BREAK
	f	Lapc;	tz	NETHER_GOLD_ORE_FALL
	f	Lapc;	uA	SCULK_SHRIEKER_BREAK
	f	Lapc;	uB	SCULK_SHRIEKER_FALL
	f	Lapc;	uC	SCULK_SHRIEKER_HIT
	f	Lapc;	uD	SCULK_SHRIEKER_PLACE
	f	Lapc;	uE	SCULK_SHRIEKER_SHRIEK
	f	Lapc;	uF	SCULK_SHRIEKER_STEP
	f	Lapc;	uG	SCULK_VEIN_BREAK
	f	Lapc;	uH	SCULK_VEIN_FALL
	f	Lapc;	uI	SCULK_VEIN_HIT
	f	Lapc;	uJ	SCULK_VEIN_PLACE
	f	Lapc;	uK	SCULK_VEIN_STEP
	f	Lapc;	uL	SHEEP_AMBIENT
	f	Lhe$c;	u	AMBIENT_WARPED_FOREST_ADDITIONS
	f	Lapc;	uM	SHEEP_DEATH
	f	Lapc;	uN	SHEEP_HURT
	f	Lapc;	uO	SHEEP_SHEAR
	f	Lapc;	uP	SHEEP_STEP
	f	Lapc;	uQ	SHIELD_BLOCK
	f	Lapc;	uR	SHIELD_BREAK
	f	Lapc;	uS	SHROOMLIGHT_BREAK
	f	Lapc;	uT	SHROOMLIGHT_STEP
	f	Lapc;	uU	SHROOMLIGHT_PLACE
	f	Lapc;	uV	SHROOMLIGHT_HIT
	f	Lapc;	uW	SHROOMLIGHT_FALL
	f	Lapc;	uX	SHOVEL_FLATTEN
	f	Lapc;	uY	SHULKER_AMBIENT
	f	Lapc;	uZ	SHULKER_BOX_CLOSE
	f	Lapc;	ua	SAND_STEP
	f	Lapc;	ub	SCAFFOLDING_BREAK
	f	Lapc;	uc	SCAFFOLDING_FALL
	f	Lapc;	ud	SCAFFOLDING_HIT
	f	Lapc;	ue	SCAFFOLDING_PLACE
	f	Lapc;	uf	SCAFFOLDING_STEP
	f	Lapc;	ug	SCULK_BLOCK_SPREAD
	f	Lapc;	uh	SCULK_BLOCK_CHARGE
	f	Lapc;	ui	SCULK_BLOCK_BREAK
	f	Lapc;	uj	SCULK_BLOCK_FALL
	f	Lapc;	uk	SCULK_BLOCK_HIT
	f	Lapc;	ul	SCULK_BLOCK_PLACE
	f	Lapc;	um	SCULK_BLOCK_STEP
	f	Lapc;	un	SCULK_CATALYST_BLOOM
	f	Lapc;	uo	SCULK_CATALYST_BREAK
	f	Lapc;	up	SCULK_CATALYST_FALL
	f	Lapc;	uq	SCULK_CATALYST_HIT
	f	Lapc;	ur	SCULK_CATALYST_PLACE
	f	Lapc;	us	SCULK_CATALYST_STEP
	f	Lapc;	ut	SCULK_CLICKING
	f	Lapc;	uu	SCULK_CLICKING_STOP
	f	Lapc;	uv	SCULK_SENSOR_BREAK
	f	Lapc;	uw	SCULK_SENSOR_FALL
	f	Lapc;	ux	SCULK_SENSOR_HIT
	f	Lapc;	uy	SCULK_SENSOR_PLACE
	f	Lapc;	uz	SCULK_SENSOR_STEP
	f	Lapc;	vA	SKELETON_SHOOT
	f	Lapc;	vB	SKELETON_STEP
	f	Lapc;	vC	SLIME_ATTACK
	f	Lapc;	vD	SLIME_DEATH
	f	Lapc;	vE	SLIME_HURT
	f	Lapc;	vF	SLIME_JUMP
	f	Lapc;	vG	SLIME_SQUISH
	f	Lapc;	vH	SLIME_BLOCK_BREAK
	f	Lapc;	vI	SLIME_BLOCK_FALL
	f	Lapc;	vJ	SLIME_BLOCK_HIT
	f	Lapc;	vK	SLIME_BLOCK_PLACE
	f	Lapc;	vL	SLIME_BLOCK_STEP
	f	Lhe$c;	v	AMBIENT_WARPED_FOREST_LOOP
	f	Lapc;	vM	SMALL_AMETHYST_BUD_BREAK
	f	Lapc;	vN	SMALL_AMETHYST_BUD_PLACE
	f	Lapc;	vO	SMALL_DRIPLEAF_BREAK
	f	Lapc;	vP	SMALL_DRIPLEAF_FALL
	f	Lapc;	vQ	SMALL_DRIPLEAF_HIT
	f	Lapc;	vR	SMALL_DRIPLEAF_PLACE
	f	Lapc;	vS	SMALL_DRIPLEAF_STEP
	f	Lapc;	vT	SOUL_SAND_BREAK
	f	Lapc;	vU	SOUL_SAND_STEP
	f	Lapc;	vV	SOUL_SAND_PLACE
	f	Lapc;	vW	SOUL_SAND_HIT
	f	Lapc;	vX	SOUL_SAND_FALL
	f	Lapc;	vY	SOUL_SOIL_BREAK
	f	Lapc;	vZ	SOUL_SOIL_STEP
	f	Lapc;	va	SHULKER_BOX_OPEN
	f	Lapc;	vb	SHULKER_BULLET_HIT
	f	Lapc;	vc	SHULKER_BULLET_HURT
	f	Lapc;	vd	SHULKER_CLOSE
	f	Lapc;	ve	SHULKER_DEATH
	f	Lapc;	vf	SHULKER_HURT
	f	Lapc;	vg	SHULKER_HURT_CLOSED
	f	Lapc;	vh	SHULKER_OPEN
	f	Lapc;	vi	SHULKER_SHOOT
	f	Lapc;	vj	SHULKER_TELEPORT
	f	Lapc;	vk	SILVERFISH_AMBIENT
	f	Lapc;	vl	SILVERFISH_DEATH
	f	Lapc;	vm	SILVERFISH_HURT
	f	Lapc;	vn	SILVERFISH_STEP
	f	Lapc;	vo	SKELETON_AMBIENT
	f	Lapc;	vp	SKELETON_CONVERTED_TO_STRAY
	f	Lapc;	vq	SKELETON_DEATH
	f	Lapc;	vr	SKELETON_HORSE_AMBIENT
	f	Lapc;	vs	SKELETON_HORSE_DEATH
	f	Lapc;	vt	SKELETON_HORSE_HURT
	f	Lapc;	vu	SKELETON_HORSE_SWIM
	f	Lapc;	vv	SKELETON_HORSE_AMBIENT_WATER
	f	Lapc;	vw	SKELETON_HORSE_GALLOP_WATER
	f	Lapc;	vx	SKELETON_HORSE_JUMP_WATER
	f	Lapc;	vy	SKELETON_HORSE_STEP_WATER
	f	Lapc;	vz	SKELETON_HURT
	f	Lapc;	wA	SNIFFER_IDLE
	f	Lapc;	wB	SNIFFER_HURT
	f	Lapc;	wC	SNIFFER_DEATH
	f	Lapc;	wD	SNIFFER_DROP_SEED
	f	Lapc;	wE	SNIFFER_SCENTING
	f	Lapc;	wF	SNIFFER_SNIFFING
	f	Lapc;	wG	SNIFFER_SEARCHING
	f	Lapc;	wH	SNIFFER_DIGGING
	f	Lapc;	wI	SNIFFER_DIGGING_STOP
	f	Lapc;	wJ	SNIFFER_HAPPY
	f	Lapc;	wK	SNIFFER_EGG_PLOP
	f	Lapc;	wL	SNIFFER_EGG_CRACK
	f	Lhe$c;	w	AMBIENT_WARPED_FOREST_MOOD
	f	Lapc;	wM	SNIFFER_EGG_HATCH
	f	Lapc;	wN	SNOWBALL_THROW
	f	Lapc;	wO	SNOW_BREAK
	f	Lapc;	wP	SNOW_FALL
	f	Lapc;	wQ	SNOW_GOLEM_AMBIENT
	f	Lapc;	wR	SNOW_GOLEM_DEATH
	f	Lapc;	wS	SNOW_GOLEM_HURT
	f	Lapc;	wT	SNOW_GOLEM_SHOOT
	f	Lapc;	wU	SNOW_GOLEM_SHEAR
	f	Lapc;	wV	SNOW_HIT
	f	Lapc;	wW	SNOW_PLACE
	f	Lapc;	wX	SNOW_STEP
	f	Lapc;	wY	SPIDER_AMBIENT
	f	Lapc;	wZ	SPIDER_DEATH
	f	Lapc;	wa	SOUL_SOIL_PLACE
	f	Lapc;	wb	SOUL_SOIL_HIT
	f	Lapc;	wc	SOUL_SOIL_FALL
	f	Lapc;	wd	SOUL_ESCAPE
	f	Lapc;	we	SPORE_BLOSSOM_BREAK
	f	Lapc;	wf	SPORE_BLOSSOM_FALL
	f	Lapc;	wg	SPORE_BLOSSOM_HIT
	f	Lapc;	wh	SPORE_BLOSSOM_PLACE
	f	Lapc;	wi	SPORE_BLOSSOM_STEP
	f	Lapc;	wj	STRIDER_AMBIENT
	f	Lapc;	wk	STRIDER_HAPPY
	f	Lapc;	wl	STRIDER_RETREAT
	f	Lapc;	wm	STRIDER_DEATH
	f	Lapc;	wn	STRIDER_HURT
	f	Lapc;	wo	STRIDER_STEP
	f	Lapc;	wp	STRIDER_STEP_LAVA
	f	Lapc;	wq	STRIDER_EAT
	f	Lapc;	wr	STRIDER_SADDLE
	f	Lapc;	ws	SLIME_DEATH_SMALL
	f	Lapc;	wt	SLIME_HURT_SMALL
	f	Lapc;	wu	SLIME_JUMP_SMALL
	f	Lapc;	wv	SLIME_SQUISH_SMALL
	f	Lapc;	ww	SMITHING_TABLE_USE
	f	Lapc;	wx	SMOKER_SMOKE
	f	Lapc;	wy	SNIFFER_STEP
	f	Lapc;	wz	SNIFFER_EAT
	f	Lapc;	xA	STRAY_DEATH
	f	Lapc;	xB	STRAY_HURT
	f	Lapc;	xC	STRAY_STEP
	f	Lapc;	xD	SWEET_BERRY_BUSH_BREAK
	f	Lapc;	xE	SWEET_BERRY_BUSH_PLACE
	f	Lapc;	xF	SWEET_BERRY_BUSH_PICK_BERRIES
	f	Lapc;	xG	TADPOLE_DEATH
	f	Lapc;	xH	TADPOLE_FLOP
	f	Lapc;	xI	TADPOLE_GROW_UP
	f	Lapc;	xJ	TADPOLE_HURT
	f	Lapc;	xK	THORNS_HIT
	f	Lapc;	xL	TNT_PRIMED
	f	Lapc;	x	AMBIENT_UNDERWATER_ENTER
	f	Lapc;	xM	TOTEM_USE
	f	Lapc;	xN	TRIDENT_HIT
	f	Lapc;	xO	TRIDENT_HIT_GROUND
	f	Lapc;	xP	TRIDENT_RETURN
	f	Lapc;	xQ	TRIDENT_RIPTIDE_1
	f	Lapc;	xR	TRIDENT_RIPTIDE_2
	f	Lapc;	xS	TRIDENT_RIPTIDE_3
	f	Lapc;	xT	TRIDENT_THROW
	f	Lapc;	xU	TRIDENT_THUNDER
	f	Lapc;	xV	TRIPWIRE_ATTACH
	f	Lapc;	xW	TRIPWIRE_CLICK_OFF
	f	Lapc;	xX	TRIPWIRE_CLICK_ON
	f	Lapc;	xY	TRIPWIRE_DETACH
	f	Lapc;	xZ	TROPICAL_FISH_AMBIENT
	f	Lapc;	xa	SPIDER_HURT
	f	Lapc;	xb	SPIDER_STEP
	f	Lapc;	xc	SPLASH_POTION_BREAK
	f	Lapc;	xd	SPLASH_POTION_THROW
	f	Lapc;	xe	SPONGE_BREAK
	f	Lapc;	xf	SPONGE_FALL
	f	Lapc;	xg	SPONGE_HIT
	f	Lapc;	xh	SPONGE_PLACE
	f	Lapc;	xi	SPONGE_STEP
	f	Lapc;	xj	SPONGE_ABSORB
	f	Lapc;	xk	SPYGLASS_USE
	f	Lapc;	xl	SPYGLASS_STOP_USING
	f	Lapc;	xm	SQUID_AMBIENT
	f	Lapc;	xn	SQUID_DEATH
	f	Lapc;	xo	SQUID_HURT
	f	Lapc;	xp	SQUID_SQUIRT
	f	Lapc;	xq	STONE_BREAK
	f	Lapc;	xr	STONE_BUTTON_CLICK_OFF
	f	Lapc;	xs	STONE_BUTTON_CLICK_ON
	f	Lapc;	xt	STONE_FALL
	f	Lapc;	xu	STONE_HIT
	f	Lapc;	xv	STONE_PLACE
	f	Lapc;	xw	STONE_PRESSURE_PLATE_CLICK_OFF
	f	Lapc;	xx	STONE_PRESSURE_PLATE_CLICK_ON
	f	Lapc;	xy	STONE_STEP
	f	Lapc;	xz	STRAY_AMBIENT
	f	Lapc;	yA	UI_TOAST_CHALLENGE_COMPLETE
	f	Lapc;	yB	UI_TOAST_IN
	f	Lapc;	yC	UI_TOAST_OUT
	f	Lapc;	yD	VEX_AMBIENT
	f	Lapc;	yE	VEX_CHARGE
	f	Lapc;	yF	VEX_DEATH
	f	Lapc;	yG	VEX_HURT
	f	Lapc;	yH	VILLAGER_AMBIENT
	f	Lapc;	yI	VILLAGER_CELEBRATE
	f	Lapc;	yJ	VILLAGER_DEATH
	f	Lapc;	yK	VILLAGER_HURT
	f	Lapc;	yL	VILLAGER_NO
	f	Lapc;	y	AMBIENT_UNDERWATER_EXIT
	f	Lapc;	yM	VILLAGER_TRADE
	f	Lapc;	yN	VILLAGER_YES
	f	Lapc;	yO	VILLAGER_WORK_ARMORER
	f	Lapc;	yP	VILLAGER_WORK_BUTCHER
	f	Lapc;	yQ	VILLAGER_WORK_CARTOGRAPHER
	f	Lapc;	yR	VILLAGER_WORK_CLERIC
	f	Lapc;	yS	VILLAGER_WORK_FARMER
	f	Lapc;	yT	VILLAGER_WORK_FISHERMAN
	f	Lapc;	yU	VILLAGER_WORK_FLETCHER
	f	Lapc;	yV	VILLAGER_WORK_LEATHERWORKER
	f	Lapc;	yW	VILLAGER_WORK_LIBRARIAN
	f	Lapc;	yX	VILLAGER_WORK_MASON
	f	Lapc;	yY	VILLAGER_WORK_SHEPHERD
	f	Lapc;	yZ	VILLAGER_WORK_TOOLSMITH
	f	Lapc;	ya	TROPICAL_FISH_DEATH
	f	Lapc;	yb	TROPICAL_FISH_FLOP
	f	Lapc;	yc	TROPICAL_FISH_HURT
	f	Lapc;	yd	TUFF_BREAK
	f	Lapc;	ye	TUFF_STEP
	f	Lapc;	yf	TUFF_PLACE
	f	Lapc;	yg	TUFF_HIT
	f	Lapc;	yh	TUFF_FALL
	f	Lapc;	yi	TURTLE_AMBIENT_LAND
	f	Lapc;	yj	TURTLE_DEATH
	f	Lapc;	yk	TURTLE_DEATH_BABY
	f	Lapc;	yl	TURTLE_EGG_BREAK
	f	Lapc;	ym	TURTLE_EGG_CRACK
	f	Lapc;	yn	TURTLE_EGG_HATCH
	f	Lapc;	yo	TURTLE_HURT
	f	Lapc;	yp	TURTLE_HURT_BABY
	f	Lapc;	yq	TURTLE_LAY_EGG
	f	Lapc;	yr	TURTLE_SHAMBLE
	f	Lapc;	ys	TURTLE_SHAMBLE_BABY
	f	Lapc;	yt	TURTLE_SWIM
	f	Lhe$c;	yu	UI_BUTTON_CLICK
	f	Lapc;	yv	UI_LOOM_SELECT_PATTERN
	f	Lapc;	yw	UI_LOOM_TAKE_RESULT
	f	Lapc;	yx	UI_CARTOGRAPHY_TABLE_TAKE_RESULT
	f	Lapc;	yy	UI_STONECUTTER_TAKE_RESULT
	f	Lapc;	yz	UI_STONECUTTER_SELECT_RECIPE
	f	Lapc;	zA	WARDEN_DIG
	f	Lapc;	zB	WARDEN_EMERGE
	f	Lapc;	zC	WARDEN_HEARTBEAT
	f	Lapc;	zD	WARDEN_HURT
	f	Lapc;	zE	WARDEN_LISTENING
	f	Lapc;	zF	WARDEN_LISTENING_ANGRY
	f	Lapc;	zG	WARDEN_NEARBY_CLOSE
	f	Lapc;	zH	WARDEN_NEARBY_CLOSER
	f	Lapc;	zI	WARDEN_NEARBY_CLOSEST
	f	Lapc;	zJ	WARDEN_ROAR
	f	Lapc;	zK	WARDEN_SNIFF
	f	Lapc;	zL	WARDEN_SONIC_BOOM
	f	Lapc;	z	AMBIENT_UNDERWATER_LOOP
	f	Lapc;	zM	WARDEN_SONIC_CHARGE
	f	Lapc;	zN	WARDEN_STEP
	f	Lapc;	zO	WARDEN_TENDRIL_CLICKS
	f	Lapc;	zP	WAXED_SIGN_INTERACT_FAIL
	f	Lapc;	zQ	WATER_AMBIENT
	f	Lapc;	zR	WEATHER_RAIN
	f	Lapc;	zS	WEATHER_RAIN_ABOVE
	f	Lapc;	zT	WET_GRASS_BREAK
	f	Lapc;	zU	WET_GRASS_FALL
	f	Lapc;	zV	WET_GRASS_HIT
	f	Lapc;	zW	WET_GRASS_PLACE
	f	Lapc;	zX	WET_GRASS_STEP
	f	Lapc;	zY	WET_SPONGE_BREAK
	f	Lapc;	zZ	WET_SPONGE_FALL
	f	Lapc;	za	VILLAGER_WORK_WEAPONSMITH
	f	Lapc;	zb	VINDICATOR_AMBIENT
	f	Lapc;	zc	VINDICATOR_CELEBRATE
	f	Lapc;	zd	VINDICATOR_DEATH
	f	Lapc;	ze	VINDICATOR_HURT
	f	Lapc;	zf	VINE_BREAK
	f	Lapc;	zg	VINE_FALL
	f	Lapc;	zh	VINE_HIT
	f	Lapc;	zi	VINE_PLACE
	f	Lapc;	zj	VINE_STEP
	f	Lapc;	zk	LILY_PAD_PLACE
	f	Lapc;	zl	WANDERING_TRADER_AMBIENT
	f	Lapc;	zm	WANDERING_TRADER_DEATH
	f	Lapc;	zn	WANDERING_TRADER_DISAPPEARED
	f	Lapc;	zo	WANDERING_TRADER_DRINK_MILK
	f	Lapc;	zp	WANDERING_TRADER_DRINK_POTION
	f	Lapc;	zq	WANDERING_TRADER_HURT
	f	Lapc;	zr	WANDERING_TRADER_NO
	f	Lapc;	zs	WANDERING_TRADER_REAPPEARED
	f	Lapc;	zt	WANDERING_TRADER_TRADE
	f	Lapc;	zu	WANDERING_TRADER_YES
	f	Lapc;	zv	WARDEN_AGITATED
	f	Lapc;	zw	WARDEN_AMBIENT
	f	Lapc;	zx	WARDEN_ANGRY
	f	Lapc;	zy	WARDEN_ATTACK_IMPACT
	f	Lapc;	zz	WARDEN_DEATH
c	ape	net/minecraft/sounds/SoundSource
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()Ljava/lang/String;	a	getName
	m	()[Lape;	b	$values
	f	Lape;	a	MASTER
	f	Lape;	b	MUSIC
	f	Lape;	c	RECORDS
	f	Lape;	d	WEATHER
	f	Lape;	e	BLOCKS
	f	Lape;	f	HOSTILE
	f	Lape;	g	NEUTRAL
	f	Lape;	h	PLAYERS
	f	Lape;	i	AMBIENT
	f	Lape;	j	VOICE
	f	Ljava/lang/String;	k	name
	f	[Lape;	l	$VALUES
c	apf	net/minecraft/sounds/package-info
c	apg	net/minecraft/stats/RecipeBook
	m	()Laph;	a	getBookSettings
	m	(Laew;)V	a	add
		p	1		id
	m	(Lapg;)V	a	copyOverData
		p	1		book
	m	(Laph;)V	a	setBookSettings
		p	1		options
	m	(Lcfv;)Z	a	isFiltering
		p	1		handler
	m	(Lcfw;)Z	a	isOpen
		p	1		category
	m	(Lcfw;Z)V	a	setOpen
		p	1		category
		p	2		open
	m	(Lcfw;ZZ)V	a	setBookSetting
		p	1		category
		p	2		guiOpen
		p	3		filteringCraftable
	m	(Lcmk;)V	a	add
		p	1		recipe
	m	(Laew;)Z	b	contains
		p	1		id
	m	(Lcfw;)Z	b	isFiltering
		p	1		category
	m	(Lcfw;Z)V	b	setFiltering
		p	1		category
		p	2		filteringCraftable
	m	(Lcmk;)Z	b	contains
		p	1		recipe
	m	(Laew;)V	c	remove
		p	1		id
	m	(Lcmk;)V	c	remove
		p	1		recipe
	m	(Laew;)V	d	addHighlight
		p	1		id
	m	(Lcmk;)Z	d	willHighlight
		p	1		recipe
	m	(Lcmk;)V	e	removeHighlight
		p	1		recipe
	m	(Lcmk;)V	f	addHighlight
		p	1		recipe
	f	Ljava/util/Set;	a	known
	f	Ljava/util/Set;	b	highlight
	f	Laph;	c	bookSettings
c	aph	net/minecraft/stats/RecipeBookSettings
	m	(Ljava/util/Map;)V	<init>	<init>
		p	1		categoryOptions
	m	()Laph;	a	copy
	m	(Laph;)V	a	replaceFrom
		p	1		other
	m	(Lcfw;)Z	a	isOpen
		p	1		category
	m	(Lcfw;Z)V	a	setOpen
		p	1		category
		p	2		open
	m	(Ljava/util/EnumMap;)V	a	lambda$new$0
		p	0		categoryOptions
	m	(Lqw;)Laph;	a	read
		p	0		nbt
	m	(Lqw;Lcfw;Lcom/mojang/datafixers/util/Pair;)V	a	lambda$write$2
		p	2		category
		p	3		pair
	m	(Lqw;Ljava/util/Map;Lcfw;Lcom/mojang/datafixers/util/Pair;)V	a	lambda$read$1
		p	2		category
		p	3		pair
	m	(Lso;)Laph;	a	read
		p	0		buf
	m	(Lcfw;)Z	b	isFiltering
		p	1		category
	m	(Lcfw;Z)V	b	setFiltering
		p	1		category
		p	2		filtering
	m	(Lqw;)V	b	write
		p	1		nbt
	m	(Lso;)V	b	write
		p	1		buf
	f	Ljava/util/Map;	a	TAG_FIELDS
	f	Ljava/util/Map;	b	states
c	aph$a	net/minecraft/stats/RecipeBookSettings$TypeSettings
	m	(ZZ)V	<init>	<init>
		p	1		guiOpen
		p	2		filteringCraftable
	m	()Laph$a;	a	copy
	f	Z	a	open
	f	Z	b	filtering
c	api	net/minecraft/stats/ServerRecipeBook
	m	(Lakr;)V	a	sendInitialRecipeBook
		p	1		player
	m	(Ljava/util/Collection;Lakr;)I	a	addRecipes
		p	1		recipes
		p	2		player
	m	(Lqw;Lcml;)V	a	fromNbt
		p	1		nbt
		p	2		recipeManager
	m	(Lrc;Ljava/util/function/Consumer;Lcml;)V	a	loadRecipes
		p	1		list
		p	2		handler
		p	3		recipeManager
	m	(Lzd$a;Lakr;Ljava/util/List;)V	a	sendRecipes
		p	1		action
		p	2		player
		p	3		recipeIds
	m	()Lqw;	b	toNbt
	m	(Ljava/util/Collection;Lakr;)I	b	removeRecipes
		p	1		recipes
		p	2		player
	f	Ljava/lang/String;	c	RECIPE_BOOK_TAG
	f	Lorg/slf4j/Logger;	d	LOGGER
c	apj	net/minecraft/stats/ServerStatsCounter
	m	(Lnet/minecraft/server/MinecraftServer;Ljava/io/File;)V	<init>	<init>
		p	1		server
		p	2		file
	m	()V	a	save
	m	(Lakr;)V	a	sendStats
		p	1		player
	m	(Lapm;)Lcom/google/gson/JsonObject;	a	lambda$toJson$4
		p	0		statType
	m	(Lapm;Ljava/lang/String;)Ljava/util/Optional;	a	getStat
		p	1		type
		p	2		id
	m	(Lcbu;Lapk;I)V	a	setValue
		p	1		player
		p	2		stat
		p	3		value
	m	(Lcom/google/gson/JsonObject;)Lqw;	a	fromJson
		p	0		json
	m	(Lcom/mojang/datafixers/DataFixer;Ljava/lang/String;)V	a	parseLocal
		p	1		dataFixer
		p	2		json
	m	(Ljava/lang/String;)V	a	lambda$parseLocal$3
	m	(Lqw;Ljava/lang/String;Lapk;)V	a	lambda$parseLocal$0
		p	3		id
	m	(Lqw;Ljava/lang/String;Lapm;)V	a	lambda$parseLocal$2
		p	3		statType
	m	()Ljava/lang/String;	b	toJson
	m	(Lapk;)Laew;	b	getKey
		p	0		stat
	m	(Ljava/lang/String;)V	b	lambda$parseLocal$1
	m	()V	c	markAllDirty
	m	()Ljava/util/Set;	d	getDirty
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Lnet/minecraft/server/MinecraftServer;	c	server
	f	Ljava/io/File;	d	file
	f	Ljava/util/Set;	e	dirty
c	apk	net/minecraft/stats/Stat
	m	(Lapm;Ljava/lang/Object;Lapl;)V	<init>	<init>
		p	1		type
		p	2		value
		p	3		formatter
	m	()Lapm;	a	getType
	m	(I)Ljava/lang/String;	a	format
		p	1		value
	m	(Laew;)Ljava/lang/String;	a	locationToKey
		p	0		id
	m	(Lapm;Ljava/lang/Object;)Ljava/lang/String;	a	buildName
		p	0		type
		p	1		value
	m	()Ljava/lang/Object;	b	getValue
	f	Lapl;	n	formatter
	f	Ljava/lang/Object;	o	value
	f	Lapm;	p	type
c	apl	net/minecraft/stats/StatFormatter
	m	(I)Ljava/lang/String;	a	lambda$static$3
		p	0		ticks
	m	(Ljava/text/DecimalFormat;)V	a	lambda$static$0
		p	0		decimalFormat
	m	(I)Ljava/lang/String;	b	lambda$static$2
		p	0		cm
	m	(I)Ljava/lang/String;	c	lambda$static$1
		p	0		i
	m	(I)Ljava/lang/String;	format	format
		p	1		value
	f	Ljava/text/DecimalFormat;	a	DECIMAL_FORMAT
	f	Lapl;	b	DEFAULT
	f	Lapl;	c	DIVIDE_BY_TEN
	f	Lapl;	d	DISTANCE
	f	Lapl;	e	TIME
c	apm	net/minecraft/stats/StatType
	m	(Lhq;Ltl;)V	<init>	<init>
		p	1		registry
		p	2		name
	m	()Lhq;	a	getRegistry
	m	(Lapl;Ljava/lang/Object;)Lapk;	a	lambda$get$0
		p	2		value
	m	(Ljava/lang/Object;)Z	a	contains
		p	1		key
	m	(Ljava/lang/Object;Lapl;)Lapk;	a	get
		p	1		key
		p	2		formatter
	m	()Ltl;	b	getDisplayName
	m	(Ljava/lang/Object;)Lapk;	b	get
		p	1		key
	f	Lhq;	a	registry
	f	Ljava/util/Map;	b	map
	f	Ltl;	c	displayName
c	apn	net/minecraft/stats/Stats
	m	(Ljava/lang/String;Lapl;)Laew;	a	makeCustomStat
		p	0		id
		p	1		formatter
	m	(Ljava/lang/String;Lhq;)Lapm;	a	makeRegistryStatType
		p	0		id
		p	1		registry
	f	Laew;	A	HORSE_ONE_CM
	f	Laew;	B	AVIATE_ONE_CM
	f	Laew;	C	SWIM_ONE_CM
	f	Laew;	D	STRIDER_ONE_CM
	f	Laew;	E	JUMP
	f	Laew;	F	DROP
	f	Laew;	G	DAMAGE_DEALT
	f	Laew;	H	DAMAGE_DEALT_ABSORBED
	f	Laew;	I	DAMAGE_DEALT_RESISTED
	f	Laew;	J	DAMAGE_TAKEN
	f	Laew;	K	DAMAGE_BLOCKED_BY_SHIELD
	f	Laew;	L	DAMAGE_ABSORBED
	f	Laew;	M	DAMAGE_RESISTED
	f	Laew;	N	DEATHS
	f	Laew;	O	MOB_KILLS
	f	Laew;	P	ANIMALS_BRED
	f	Laew;	Q	PLAYER_KILLS
	f	Laew;	R	FISH_CAUGHT
	f	Laew;	S	TALKED_TO_VILLAGER
	f	Laew;	T	TRADED_WITH_VILLAGER
	f	Laew;	U	EAT_CAKE_SLICE
	f	Laew;	V	FILL_CAULDRON
	f	Laew;	W	USE_CAULDRON
	f	Laew;	X	CLEAN_ARMOR
	f	Laew;	Y	CLEAN_BANNER
	f	Laew;	Z	CLEAN_SHULKER_BOX
	f	Laew;	aA	RAID_TRIGGER
	f	Laew;	aB	RAID_WIN
	f	Laew;	aC	INTERACT_WITH_ANVIL
	f	Laew;	aD	INTERACT_WITH_GRINDSTONE
	f	Laew;	aE	TARGET_HIT
	f	Laew;	aF	INTERACT_WITH_SMITHING_TABLE
	f	Lapm;	a	BLOCK_MINED
	f	Laew;	aa	INTERACT_WITH_BREWINGSTAND
	f	Laew;	ab	INTERACT_WITH_BEACON
	f	Laew;	ac	INSPECT_DROPPER
	f	Laew;	ad	INSPECT_HOPPER
	f	Laew;	ae	INSPECT_DISPENSER
	f	Laew;	af	PLAY_NOTEBLOCK
	f	Laew;	ag	TUNE_NOTEBLOCK
	f	Laew;	ah	POT_FLOWER
	f	Laew;	ai	TRIGGER_TRAPPED_CHEST
	f	Laew;	aj	OPEN_ENDERCHEST
	f	Laew;	ak	ENCHANT_ITEM
	f	Laew;	al	PLAY_RECORD
	f	Laew;	am	INTERACT_WITH_FURNACE
	f	Laew;	an	INTERACT_WITH_CRAFTING_TABLE
	f	Laew;	ao	OPEN_CHEST
	f	Laew;	ap	SLEEP_IN_BED
	f	Laew;	aq	OPEN_SHULKER_BOX
	f	Laew;	ar	OPEN_BARREL
	f	Laew;	as	INTERACT_WITH_BLAST_FURNACE
	f	Laew;	at	INTERACT_WITH_SMOKER
	f	Laew;	au	INTERACT_WITH_LECTERN
	f	Laew;	av	INTERACT_WITH_CAMPFIRE
	f	Laew;	aw	INTERACT_WITH_CARTOGRAPHY_TABLE
	f	Laew;	ax	INTERACT_WITH_LOOM
	f	Laew;	ay	INTERACT_WITH_STONECUTTER
	f	Laew;	az	BELL_RING
	f	Lapm;	b	ITEM_CRAFTED
	f	Lapm;	c	ITEM_USED
	f	Lapm;	d	ITEM_BROKEN
	f	Lapm;	e	ITEM_PICKED_UP
	f	Lapm;	f	ITEM_DROPPED
	f	Lapm;	g	ENTITY_KILLED
	f	Lapm;	h	ENTITY_KILLED_BY
	f	Lapm;	i	CUSTOM
	f	Laew;	j	LEAVE_GAME
	f	Laew;	k	PLAY_TIME
	f	Laew;	l	TOTAL_WORLD_TIME
	f	Laew;	m	TIME_SINCE_DEATH
	f	Laew;	n	TIME_SINCE_REST
	f	Laew;	o	CROUCH_TIME
	f	Laew;	p	WALK_ONE_CM
	f	Laew;	q	CROUCH_ONE_CM
	f	Laew;	r	SPRINT_ONE_CM
	f	Laew;	s	WALK_ON_WATER_ONE_CM
	f	Laew;	t	FALL_ONE_CM
	f	Laew;	u	CLIMB_ONE_CM
	f	Laew;	v	FLY_ONE_CM
	f	Laew;	w	WALK_UNDER_WATER_ONE_CM
	f	Laew;	x	MINECART_ONE_CM
	f	Laew;	y	BOAT_ONE_CM
	f	Laew;	z	PIG_ONE_CM
c	apo	net/minecraft/stats/StatsCounter
	m	(Lapk;)I	a	getValue
		p	1		stat
	m	(Lapm;Ljava/lang/Object;)I	a	getValue
		p	1		type
		p	2		stat
	m	(Lcbu;Lapk;I)V	a	setValue
		p	1		player
		p	2		stat
		p	3		value
	m	(Lcbu;Lapk;I)V	b	increment
		p	1		player
		p	2		stat
		p	3		value
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	a	stats
c	app	net/minecraft/stats/package-info
c	apq	net/minecraft/tags/BannerPatternTags
	m	(Ljava/lang/String;)Laqh;	a	create
		p	0		id
	f	Laqh;	a	NO_ITEM_REQUIRED
	f	Laqh;	b	PATTERN_ITEM_FLOWER
	f	Laqh;	c	PATTERN_ITEM_CREEPER
	f	Laqh;	d	PATTERN_ITEM_SKULL
	f	Laqh;	e	PATTERN_ITEM_MOJANG
	f	Laqh;	f	PATTERN_ITEM_GLOBE
	f	Laqh;	g	PATTERN_ITEM_PIGLIN
c	apr	net/minecraft/tags/BiomeTags
	m	(Ljava/lang/String;)Laqh;	a	create
		p	0		id
	f	Laqh;	A	HAS_RUINED_PORTAL_JUNGLE
	f	Laqh;	B	HAS_RUINED_PORTAL_OCEAN
	f	Laqh;	C	HAS_RUINED_PORTAL_SWAMP
	f	Laqh;	D	HAS_RUINED_PORTAL_MOUNTAIN
	f	Laqh;	E	HAS_RUINED_PORTAL_STANDARD
	f	Laqh;	F	HAS_SHIPWRECK_BEACHED
	f	Laqh;	G	HAS_SHIPWRECK
	f	Laqh;	H	HAS_STRONGHOLD
	f	Laqh;	I	HAS_SWAMP_HUT
	f	Laqh;	J	HAS_VILLAGE_DESERT
	f	Laqh;	K	HAS_VILLAGE_PLAINS
	f	Laqh;	L	HAS_VILLAGE_SAVANNA
	f	Laqh;	M	HAS_VILLAGE_SNOWY
	f	Laqh;	N	HAS_VILLAGE_TAIGA
	f	Laqh;	O	HAS_TRAIL_RUINS
	f	Laqh;	P	HAS_WOODLAND_MANSION
	f	Laqh;	Q	HAS_NETHER_FORTRESS
	f	Laqh;	R	HAS_NETHER_FOSSIL
	f	Laqh;	S	HAS_BASTION_REMNANT
	f	Laqh;	T	HAS_ANCIENT_CITY
	f	Laqh;	U	HAS_RUINED_PORTAL_NETHER
	f	Laqh;	V	HAS_END_CITY
	f	Laqh;	W	REQUIRED_OCEAN_MONUMENT_SURROUNDING
	f	Laqh;	X	MINESHAFT_BLOCKING
	f	Laqh;	Y	PLAYS_UNDERWATER_MUSIC
	f	Laqh;	Z	HAS_CLOSER_WATER_FOG
	f	Laqh;	a	IS_DEEP_OCEAN
	f	Laqh;	aa	WATER_ON_MAP_OUTLINES
	f	Laqh;	ab	PRODUCES_CORALS_FROM_BONEMEAL
	f	Laqh;	ac	INCREASED_FIRE_BURNOUT
	f	Laqh;	ad	SNOW_GOLEM_MELTS
	f	Laqh;	ae	WITHOUT_ZOMBIE_SIEGES
	f	Laqh;	af	WITHOUT_PATROL_SPAWNS
	f	Laqh;	ag	WITHOUT_WANDERING_TRADER_SPAWNS
	f	Laqh;	ah	SPAWNS_COLD_VARIANT_FROGS
	f	Laqh;	ai	SPAWNS_WARM_VARIANT_FROGS
	f	Laqh;	aj	SPAWNS_GOLD_RABBITS
	f	Laqh;	ak	SPAWNS_WHITE_RABBITS
	f	Laqh;	al	REDUCED_WATER_AMBIENT_SPAWNS
	f	Laqh;	am	ALLOWS_TROPICAL_FISH_SPAWNS_AT_ANY_HEIGHT
	f	Laqh;	an	POLAR_BEARS_SPAWN_ON_ALTERNATE_BLOCKS
	f	Laqh;	ao	MORE_FREQUENT_DROWNED_SPAWNS
	f	Laqh;	ap	ALLOWS_SURFACE_SLIME_SPAWNS
	f	Laqh;	aq	SPAWNS_SNOW_FOXES
	f	Laqh;	b	IS_OCEAN
	f	Laqh;	c	IS_BEACH
	f	Laqh;	d	IS_RIVER
	f	Laqh;	e	IS_MOUNTAIN
	f	Laqh;	f	IS_BADLANDS
	f	Laqh;	g	IS_HILL
	f	Laqh;	h	IS_TAIGA
	f	Laqh;	i	IS_JUNGLE
	f	Laqh;	j	IS_FOREST
	f	Laqh;	k	IS_SAVANNA
	f	Laqh;	l	IS_OVERWORLD
	f	Laqh;	m	IS_NETHER
	f	Laqh;	n	IS_END
	f	Laqh;	o	STRONGHOLD_BIASED_TO
	f	Laqh;	p	HAS_BURIED_TREASURE
	f	Laqh;	q	HAS_DESERT_PYRAMID
	f	Laqh;	r	HAS_IGLOO
	f	Laqh;	s	HAS_JUNGLE_TEMPLE
	f	Laqh;	t	HAS_MINESHAFT
	f	Laqh;	u	HAS_MINESHAFT_MESA
	f	Laqh;	v	HAS_OCEAN_MONUMENT
	f	Laqh;	w	HAS_OCEAN_RUIN_COLD
	f	Laqh;	x	HAS_OCEAN_RUIN_WARM
	f	Laqh;	y	HAS_PILLAGER_OUTPOST
	f	Laqh;	z	HAS_RUINED_PORTAL_DESERT
c	aps	net/minecraft/tags/BlockTags
	m	(Ljava/lang/String;)Laqh;	a	create
		p	0		id
	f	Laqh;	A	SPRUCE_LOGS
	f	Laqh;	B	MANGROVE_LOGS
	f	Laqh;	C	CRIMSON_STEMS
	f	Laqh;	D	WARPED_STEMS
	f	Laqh;	E	BAMBOO_BLOCKS
	f	Laqh;	F	WART_BLOCKS
	f	Laqh;	G	BANNERS
	f	Laqh;	H	SAND
	f	Laqh;	I	SMELTS_TO_GLASS
	f	Laqh;	J	STAIRS
	f	Laqh;	K	SLABS
	f	Laqh;	L	WALLS
	f	Laqh;	M	ANVIL
	f	Laqh;	N	RAILS
	f	Laqh;	O	LEAVES
	f	Laqh;	P	TRAPDOORS
	f	Laqh;	Q	SMALL_FLOWERS
	f	Laqh;	R	BEDS
	f	Laqh;	S	FENCES
	f	Laqh;	T	TALL_FLOWERS
	f	Laqh;	U	FLOWERS
	f	Laqh;	V	PIGLIN_REPELLENTS
	f	Laqh;	W	GOLD_ORES
	f	Laqh;	X	IRON_ORES
	f	Laqh;	Y	DIAMOND_ORES
	f	Laqh;	Z	REDSTONE_ORES
	f	Laqh;	aA	ALL_SIGNS
	f	Laqh;	aB	DRAGON_IMMUNE
	f	Laqh;	aC	DRAGON_TRANSPARENT
	f	Laqh;	aD	WITHER_IMMUNE
	f	Laqh;	aE	WITHER_SUMMON_BASE_BLOCKS
	f	Laqh;	aF	BEEHIVES
	f	Laqh;	aG	CROPS
	f	Laqh;	aH	BEE_GROWABLES
	f	Laqh;	aI	PORTALS
	f	Laqh;	aJ	FIRE
	f	Laqh;	aK	NYLIUM
	f	Laqh;	aL	BEACON_BASE_BLOCKS
	f	Laqh;	a	WOOL
	f	Laqh;	aM	SOUL_SPEED_BLOCKS
	f	Laqh;	aN	WALL_POST_OVERRIDE
	f	Laqh;	aO	CLIMBABLE
	f	Laqh;	aP	FALL_DAMAGE_RESETTING
	f	Laqh;	aQ	SHULKER_BOXES
	f	Laqh;	aR	HOGLIN_REPELLENTS
	f	Laqh;	aS	SOUL_FIRE_BASE_BLOCKS
	f	Laqh;	aT	STRIDER_WARM_BLOCKS
	f	Laqh;	aU	CAMPFIRES
	f	Laqh;	aV	GUARDED_BY_PIGLINS
	f	Laqh;	aW	PREVENT_MOB_SPAWNING_INSIDE
	f	Laqh;	aX	FENCE_GATES
	f	Laqh;	aY	UNSTABLE_BOTTOM_CENTER
	f	Laqh;	aZ	MUSHROOM_GROW_BLOCK
	f	Laqh;	aa	LAPIS_ORES
	f	Laqh;	ab	COAL_ORES
	f	Laqh;	ac	EMERALD_ORES
	f	Laqh;	ad	COPPER_ORES
	f	Laqh;	ae	CANDLES
	f	Laqh;	af	DIRT
	f	Laqh;	ag	TERRACOTTA
	f	Laqh;	ah	CONCRETE_POWDER
	f	Laqh;	ai	COMPLETES_FIND_TREE_TUTORIAL
	f	Laqh;	aj	FLOWER_POTS
	f	Laqh;	ak	ENDERMAN_HOLDABLE
	f	Laqh;	al	ICE
	f	Laqh;	am	VALID_SPAWN
	f	Laqh;	an	IMPERMEABLE
	f	Laqh;	ao	UNDERWATER_BONEMEALS
	f	Laqh;	ap	CORAL_BLOCKS
	f	Laqh;	aq	WALL_CORALS
	f	Laqh;	ar	CORAL_PLANTS
	f	Laqh;	as	CORALS
	f	Laqh;	at	BAMBOO_PLANTABLE_ON
	f	Laqh;	au	STANDING_SIGNS
	f	Laqh;	av	WALL_SIGNS
	f	Laqh;	aw	SIGNS
	f	Laqh;	ax	CEILING_HANGING_SIGNS
	f	Laqh;	ay	WALL_HANGING_SIGNS
	f	Laqh;	az	ALL_HANGING_SIGNS
	f	Laqh;	bA	MINEABLE_WITH_HOE
	f	Laqh;	bB	MINEABLE_WITH_PICKAXE
	f	Laqh;	bC	MINEABLE_WITH_SHOVEL
	f	Laqh;	bD	SWORD_EFFICIENT
	f	Laqh;	bE	NEEDS_DIAMOND_TOOL
	f	Laqh;	bF	NEEDS_IRON_TOOL
	f	Laqh;	bG	NEEDS_STONE_TOOL
	f	Laqh;	bH	FEATURES_CANNOT_REPLACE
	f	Laqh;	bI	LAVA_POOL_STONE_CANNOT_REPLACE
	f	Laqh;	bJ	GEODE_INVALID_BLOCKS
	f	Laqh;	bK	FROG_PREFER_JUMP_TO
	f	Laqh;	bL	SCULK_REPLACEABLE
	f	Laqh;	b	PLANKS
	f	Laqh;	bM	SCULK_REPLACEABLE_WORLD_GEN
	f	Laqh;	bN	ANCIENT_CITY_REPLACEABLE
	f	Laqh;	bO	VIBRATION_RESONATORS
	f	Laqh;	bP	ANIMALS_SPAWNABLE_ON
	f	Laqh;	bQ	AXOLOTLS_SPAWNABLE_ON
	f	Laqh;	bR	GOATS_SPAWNABLE_ON
	f	Laqh;	bS	MOOSHROOMS_SPAWNABLE_ON
	f	Laqh;	bT	PARROTS_SPAWNABLE_ON
	f	Laqh;	bU	POLAR_BEARS_SPAWNABLE_ON_ALTERNATE
	f	Laqh;	bV	RABBITS_SPAWNABLE_ON
	f	Laqh;	bW	FOXES_SPAWNABLE_ON
	f	Laqh;	bX	WOLVES_SPAWNABLE_ON
	f	Laqh;	bY	FROGS_SPAWNABLE_ON
	f	Laqh;	bZ	AZALEA_GROWS_ON
	f	Laqh;	ba	INFINIBURN_OVERWORLD
	f	Laqh;	bb	INFINIBURN_NETHER
	f	Laqh;	bc	INFINIBURN_END
	f	Laqh;	bd	BASE_STONE_OVERWORLD
	f	Laqh;	be	STONE_ORE_REPLACEABLES
	f	Laqh;	bf	DEEPSLATE_ORE_REPLACEABLES
	f	Laqh;	bg	BASE_STONE_NETHER
	f	Laqh;	bh	OVERWORLD_CARVER_REPLACEABLES
	f	Laqh;	bi	NETHER_CARVER_REPLACEABLES
	f	Laqh;	bj	CANDLE_CAKES
	f	Laqh;	bk	CAULDRONS
	f	Laqh;	bl	CRYSTAL_SOUND_BLOCKS
	f	Laqh;	bm	INSIDE_STEP_SOUND_BLOCKS
	f	Laqh;	bn	COMBINATION_STEP_SOUND_BLOCKS
	f	Laqh;	bo	CAMEL_SAND_STEP_SOUND_BLOCKS
	f	Laqh;	bp	OCCLUDES_VIBRATION_SIGNALS
	f	Laqh;	bq	DAMPENS_VIBRATIONS
	f	Laqh;	br	DRIPSTONE_REPLACEABLE
	f	Laqh;	bs	CAVE_VINES
	f	Laqh;	bt	MOSS_REPLACEABLE
	f	Laqh;	bu	LUSH_GROUND_REPLACEABLE
	f	Laqh;	bv	AZALEA_ROOT_REPLACEABLE
	f	Laqh;	bw	SMALL_DRIPLEAF_PLACEABLE
	f	Laqh;	bx	BIG_DRIPLEAF_PLACEABLE
	f	Laqh;	by	SNOW
	f	Laqh;	bz	MINEABLE_WITH_AXE
	f	Laqh;	c	STONE_BRICKS
	f	Laqh;	ca	CONVERTABLE_TO_MUD
	f	Laqh;	cb	MANGROVE_LOGS_CAN_GROW_THROUGH
	f	Laqh;	cc	MANGROVE_ROOTS_CAN_GROW_THROUGH
	f	Laqh;	cd	DEAD_BUSH_MAY_PLACE_ON
	f	Laqh;	ce	SNAPS_GOAT_HORN
	f	Laqh;	cf	REPLACEABLE_BY_TREES
	f	Laqh;	cg	SNOW_LAYER_CANNOT_SURVIVE_ON
	f	Laqh;	ch	SNOW_LAYER_CAN_SURVIVE_ON
	f	Laqh;	ci	INVALID_SPAWN_INSIDE
	f	Laqh;	cj	SNIFFER_DIGGABLE_BLOCK
	f	Laqh;	ck	SNIFFER_EGG_HATCH_BOOST
	f	Laqh;	cl	TRAIL_RUINS_REPLACEABLE
	f	Laqh;	cm	REPLACEABLE
	f	Laqh;	cn	ENCHANTMENT_POWER_PROVIDER
	f	Laqh;	co	ENCHANTMENT_POWER_TRANSMITTER
	f	Laqh;	cp	MAINTAINS_FARMLAND
	f	Laqh;	d	WOODEN_BUTTONS
	f	Laqh;	e	STONE_BUTTONS
	f	Laqh;	f	BUTTONS
	f	Laqh;	g	WOOL_CARPETS
	f	Laqh;	h	WOODEN_DOORS
	f	Laqh;	i	WOODEN_STAIRS
	f	Laqh;	j	WOODEN_SLABS
	f	Laqh;	k	WOODEN_FENCES
	f	Laqh;	l	PRESSURE_PLATES
	f	Laqh;	m	WOODEN_PRESSURE_PLATES
	f	Laqh;	n	STONE_PRESSURE_PLATES
	f	Laqh;	o	WOODEN_TRAPDOORS
	f	Laqh;	p	DOORS
	f	Laqh;	q	SAPLINGS
	f	Laqh;	r	LOGS_THAT_BURN
	f	Laqh;	s	OVERWORLD_NATURAL_LOGS
	f	Laqh;	t	LOGS
	f	Laqh;	u	DARK_OAK_LOGS
	f	Laqh;	v	OAK_LOGS
	f	Laqh;	w	BIRCH_LOGS
	f	Laqh;	x	ACACIA_LOGS
	f	Laqh;	y	CHERRY_LOGS
	f	Laqh;	z	JUNGLE_LOGS
c	apt	net/minecraft/tags/CatVariantTags
	m	(Ljava/lang/String;)Laqh;	a	create
		p	0		id
	f	Laqh;	a	DEFAULT_SPAWNS
	f	Laqh;	b	FULL_MOON_SPAWNS
c	apu	net/minecraft/tags/DamageTypeTags
	m	(Ljava/lang/String;)Laqh;	a	create
		p	0		id
	f	Laqh;	A	ALWAYS_KILLS_ARMOR_STANDS
	f	Laqh;	a	DAMAGES_HELMET
	f	Laqh;	b	BYPASSES_ARMOR
	f	Laqh;	c	BYPASSES_SHIELD
	f	Laqh;	d	BYPASSES_INVULNERABILITY
	f	Laqh;	e	BYPASSES_COOLDOWN
	f	Laqh;	f	BYPASSES_EFFECTS
	f	Laqh;	g	BYPASSES_RESISTANCE
	f	Laqh;	h	BYPASSES_ENCHANTMENTS
	f	Laqh;	i	IS_FIRE
	f	Laqh;	j	IS_PROJECTILE
	f	Laqh;	k	WITCH_RESISTANT_TO
	f	Laqh;	l	IS_EXPLOSION
	f	Laqh;	m	IS_FALL
	f	Laqh;	n	IS_DROWNING
	f	Laqh;	o	IS_FREEZING
	f	Laqh;	p	IS_LIGHTNING
	f	Laqh;	q	NO_ANGER
	f	Laqh;	r	NO_IMPACT
	f	Laqh;	s	ALWAYS_MOST_SIGNIFICANT_FALL
	f	Laqh;	t	WITHER_IMMUNE_TO
	f	Laqh;	u	IGNITES_ARMOR_STANDS
	f	Laqh;	v	BURNS_ARMOR_STANDS
	f	Laqh;	w	AVOIDS_GUARDIAN_THORNS
	f	Laqh;	x	ALWAYS_TRIGGERS_SILVERFISH
	f	Laqh;	y	ALWAYS_HURTS_ENDER_DRAGONS
	f	Laqh;	z	NO_KNOCKBACK
c	apv	net/minecraft/tags/EntityTypeTags
	m	(Ljava/lang/String;)Laqh;	a	create
		p	0		id
	f	Laqh;	a	SKELETONS
	f	Laqh;	b	RAIDERS
	f	Laqh;	c	BEEHIVE_INHABITORS
	f	Laqh;	d	ARROWS
	f	Laqh;	e	IMPACT_PROJECTILES
	f	Laqh;	f	POWDER_SNOW_WALKABLE_MOBS
	f	Laqh;	g	AXOLOTL_ALWAYS_HOSTILES
	f	Laqh;	h	AXOLOTL_HUNT_TARGETS
	f	Laqh;	i	FREEZE_IMMUNE_ENTITY_TYPES
	f	Laqh;	j	FREEZE_HURTS_EXTRA_TYPES
	f	Laqh;	k	FROG_FOOD
	f	Laqh;	l	FALL_DAMAGE_IMMUNE
	f	Laqh;	m	DISMOUNTS_UNDERWATER
	f	Laqh;	n	NON_CONTROLLING_RIDER
c	apw	net/minecraft/tags/FlatLevelGeneratorPresetTags
	m	(Ljava/lang/String;)Laqh;	a	create
		p	0		id
	f	Laqh;	a	VISIBLE
c	apx	net/minecraft/tags/FluidTags
	m	(Ljava/lang/String;)Laqh;	a	create
		p	0		id
	f	Laqh;	a	WATER
	f	Laqh;	b	LAVA
c	apy	net/minecraft/tags/GameEventTags
	m	(Ljava/lang/String;)Laqh;	a	create
		p	0		id
	f	Laqh;	a	VIBRATIONS
	f	Laqh;	b	WARDEN_CAN_LISTEN
	f	Laqh;	c	SHRIEKER_CAN_LISTEN
	f	Laqh;	d	IGNORE_VIBRATIONS_SNEAKING
	f	Laqh;	e	ALLAY_CAN_LISTEN
c	apz	net/minecraft/tags/InstrumentTags
	m	(Ljava/lang/String;)Laqh;	a	create
		p	0		id
	f	Laqh;	a	REGULAR_GOAT_HORNS
	f	Laqh;	b	SCREAMING_GOAT_HORNS
	f	Laqh;	c	GOAT_HORNS
c	aqa	net/minecraft/tags/ItemTags
	m	(Ljava/lang/String;)Laqh;	a	bind
		p	0		id
	f	Laqh;	A	CRIMSON_STEMS
	f	Laqh;	B	WARPED_STEMS
	f	Laqh;	C	BAMBOO_BLOCKS
	f	Laqh;	D	WART_BLOCKS
	f	Laqh;	E	BANNERS
	f	Laqh;	F	SAND
	f	Laqh;	G	SMELTS_TO_GLASS
	f	Laqh;	H	STAIRS
	f	Laqh;	I	SLABS
	f	Laqh;	J	WALLS
	f	Laqh;	K	ANVIL
	f	Laqh;	L	RAILS
	f	Laqh;	M	LEAVES
	f	Laqh;	N	TRAPDOORS
	f	Laqh;	O	SMALL_FLOWERS
	f	Laqh;	P	BEDS
	f	Laqh;	Q	FENCES
	f	Laqh;	R	TALL_FLOWERS
	f	Laqh;	S	FLOWERS
	f	Laqh;	T	PIGLIN_REPELLENTS
	f	Laqh;	U	PIGLIN_LOVED
	f	Laqh;	V	IGNORED_BY_PIGLIN_BABIES
	f	Laqh;	W	PIGLIN_FOOD
	f	Laqh;	X	FOX_FOOD
	f	Laqh;	Y	GOLD_ORES
	f	Laqh;	Z	IRON_ORES
	f	Laqh;	aA	AXOLOTL_TEMPT_ITEMS
	f	Laqh;	aB	DAMPENS_VIBRATIONS
	f	Laqh;	aC	CLUSTER_MAX_HARVESTABLES
	f	Laqh;	aD	COMPASSES
	f	Laqh;	aE	HANGING_SIGNS
	f	Laqh;	aF	CREEPER_IGNITERS
	f	Laqh;	aG	NOTE_BLOCK_TOP_INSTRUMENTS
	f	Laqh;	aH	TRIMMABLE_ARMOR
	f	Laqh;	aI	TRIM_MATERIALS
	f	Laqh;	aJ	TRIM_TEMPLATES
	f	Laqh;	aK	SNIFFER_FOOD
	f	Laqh;	aL	DECORATED_POT_SHERDS
	f	Laqh;	a	WOOL
	f	Laqh;	aM	DECORATED_POT_INGREDIENTS
	f	Laqh;	aN	SWORDS
	f	Laqh;	aO	AXES
	f	Laqh;	aP	HOES
	f	Laqh;	aQ	PICKAXES
	f	Laqh;	aR	SHOVELS
	f	Laqh;	aS	TOOLS
	f	Laqh;	aT	BREAKS_DECORATED_POTS
	f	Laqh;	aU	VILLAGER_PLANTABLE_SEEDS
	f	Laqh;	aa	DIAMOND_ORES
	f	Laqh;	ab	REDSTONE_ORES
	f	Laqh;	ac	LAPIS_ORES
	f	Laqh;	ad	COAL_ORES
	f	Laqh;	ae	EMERALD_ORES
	f	Laqh;	af	COPPER_ORES
	f	Laqh;	ag	NON_FLAMMABLE_WOOD
	f	Laqh;	ah	SOUL_FIRE_BASE_BLOCKS
	f	Laqh;	ai	CANDLES
	f	Laqh;	aj	DIRT
	f	Laqh;	ak	TERRACOTTA
	f	Laqh;	al	COMPLETES_FIND_TREE_TUTORIAL
	f	Laqh;	am	BOATS
	f	Laqh;	an	CHEST_BOATS
	f	Laqh;	ao	FISHES
	f	Laqh;	ap	SIGNS
	f	Laqh;	aq	MUSIC_DISCS
	f	Laqh;	ar	CREEPER_DROP_MUSIC_DISCS
	f	Laqh;	as	COALS
	f	Laqh;	at	ARROWS
	f	Laqh;	au	LECTERN_BOOKS
	f	Laqh;	av	BOOKSHELF_BOOKS
	f	Laqh;	aw	BEACON_PAYMENT_ITEMS
	f	Laqh;	ax	STONE_TOOL_MATERIALS
	f	Laqh;	ay	STONE_CRAFTING_MATERIALS
	f	Laqh;	az	FREEZE_IMMUNE_WEARABLES
	f	Laqh;	b	PLANKS
	f	Laqh;	c	STONE_BRICKS
	f	Laqh;	d	WOODEN_BUTTONS
	f	Laqh;	e	STONE_BUTTONS
	f	Laqh;	f	BUTTONS
	f	Laqh;	g	WOOL_CARPETS
	f	Laqh;	h	WOODEN_DOORS
	f	Laqh;	i	WOODEN_STAIRS
	f	Laqh;	j	WOODEN_SLABS
	f	Laqh;	k	WOODEN_FENCES
	f	Laqh;	l	FENCE_GATES
	f	Laqh;	m	WOODEN_PRESSURE_PLATES
	f	Laqh;	n	WOODEN_TRAPDOORS
	f	Laqh;	o	DOORS
	f	Laqh;	p	SAPLINGS
	f	Laqh;	q	LOGS_THAT_BURN
	f	Laqh;	r	LOGS
	f	Laqh;	s	DARK_OAK_LOGS
	f	Laqh;	t	OAK_LOGS
	f	Laqh;	u	BIRCH_LOGS
	f	Laqh;	v	ACACIA_LOGS
	f	Laqh;	w	CHERRY_LOGS
	f	Laqh;	x	JUNGLE_LOGS
	f	Laqh;	y	SPRUCE_LOGS
	f	Laqh;	z	MANGROVE_LOGS
c	aqb	net/minecraft/tags/PaintingVariantTags
	m	(Ljava/lang/String;)Laqh;	a	create
		p	0		id
	f	Laqh;	a	PLACEABLE
c	aqc	net/minecraft/tags/PoiTypeTags
	m	(Ljava/lang/String;)Laqh;	a	create
		p	0		id
	f	Laqh;	a	ACQUIRABLE_JOB_SITE
	f	Laqh;	b	VILLAGE
	f	Laqh;	c	BEE_HOME
c	aqd	net/minecraft/tags/StructureTags
	m	(Ljava/lang/String;)Laqh;	a	create
		p	0		id
	f	Laqh;	a	EYE_OF_ENDER_LOCATED
	f	Laqh;	b	DOLPHIN_LOCATED
	f	Laqh;	c	ON_WOODLAND_EXPLORER_MAPS
	f	Laqh;	d	ON_OCEAN_EXPLORER_MAPS
	f	Laqh;	e	ON_SAVANNA_VILLAGE_MAPS
	f	Laqh;	f	ON_DESERT_VILLAGE_MAPS
	f	Laqh;	g	ON_PLAINS_VILLAGE_MAPS
	f	Laqh;	h	ON_TAIGA_VILLAGE_MAPS
	f	Laqh;	i	ON_SNOWY_VILLAGE_MAPS
	f	Laqh;	j	ON_JUNGLE_EXPLORER_MAPS
	f	Laqh;	k	ON_SWAMP_EXPLORER_MAPS
	f	Laqh;	l	ON_TREASURE_MAPS
	f	Laqh;	m	CATS_SPAWN_IN
	f	Laqh;	n	CATS_SPAWN_AS_BLACK
	f	Laqh;	o	VILLAGE
	f	Laqh;	p	MINESHAFT
	f	Laqh;	q	SHIPWRECK
	f	Laqh;	r	RUINED_PORTAL
	f	Laqh;	s	OCEAN_RUIN
c	aqe	net/minecraft/tags/TagBuilder
	m	()Laqe;	a	create
	m	(Laew;)Laqe;	a	addElement
		p	1		id
	m	(Laqf;)Laqe;	a	add
		p	1		entry
	m	()Ljava/util/List;	b	build
	m	(Laew;)Laqe;	b	addOptionalElement
		p	1		id
	m	(Laew;)Laqe;	c	addTag
		p	1		id
	m	(Laew;)Laqe;	d	addOptionalTag
		p	1		id
	f	Ljava/util/List;	a	entries
c	aqf	net/minecraft/tags/TagEntry
	m	(Laew;ZZ)V	<init>	<init>
		p	1		id
		p	2		tag
		p	3		required
	m	(Larf$f;Z)V	<init>	<init>
		p	1		id
		p	2		required
	m	()Larf$f;	a	elementOrTag
	m	(Laew;)Laqf;	a	element
		p	0		id
	m	(Laqf$a;Ljava/util/function/Consumer;)Z	a	build
		p	1		valueGetter
		p	2		idConsumer
	m	(Laqf;)Lcom/mojang/datafixers/util/Either;	a	lambda$static$5
		p	0		entry
	m	(Larf$f;)Laqf;	a	lambda$static$2
		p	0		id
	m	(Lcom/mojang/datafixers/util/Either;)Laqf;	a	lambda$static$4
		p	0		either
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Ljava/util/function/Consumer;)V	a	visitRequiredDependencies
		p	1		idConsumer
	m	(Ljava/util/function/Predicate;Ljava/util/function/Predicate;)Z	a	verifyIfPresent
		p	1		directEntryPredicate
		p	2		tagEntryPredicate
	m	(Laew;)Laqf;	b	optionalElement
		p	0		id
	m	(Laqf;)Laqf;	b	lambda$static$3
		p	0		entry
	m	(Ljava/util/function/Consumer;)V	b	visitOptionalDependencies
		p	1		idConsumer
	m	(Laew;)Laqf;	c	tag
		p	0		id
	m	(Laqf;)Ljava/lang/Boolean;	c	lambda$static$0
		p	0		entry
	m	(Laew;)Laqf;	d	optionalTag
		p	0		id
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcom/mojang/serialization/Codec;	b	FULL_CODEC
	f	Laew;	c	id
	f	Z	d	tag
	f	Z	e	required
c	aqf$a	net/minecraft/tags/TagEntry$Lookup
	m	(Laew;)Ljava/lang/Object;	a	element
		p	1		id
	m	(Laew;)Ljava/util/Collection;	b	tag
		p	1		id
c	aqg	net/minecraft/tags/TagFile
	m	()Ljava/util/List;	a	entries
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Z	b	replace
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/List;	b	entries
	f	Z	c	replace
c	aqh	net/minecraft/tags/TagKey
	m	()Laev;	a	registry
	m	(Laev;)Lcom/mojang/serialization/Codec;	a	codec
		p	0		registry
	m	(Laev;Laew;)Laqh;	a	create
		p	0		registry
		p	1		id
	m	(Laev;Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	a	lambda$hashedCodec$3
		p	1		string
	m	(Laqh;)Ljava/lang/String;	a	lambda$hashedCodec$4
		p	0		string
	m	()Laew;	b	location
	m	(Laev;)Lcom/mojang/serialization/Codec;	b	hashedCodec
		p	0		registry
	m	(Laev;Laew;)Laqh;	b	lambda$hashedCodec$1
		p	1		id
	m	()Ljava/lang/String;	c	lambda$hashedCodec$2
	m	(Laev;)Z	c	isFor
		p	1		registryRef
	m	(Laev;Laew;)Laqh;	c	lambda$codec$0
		p	1		id
	m	(Laev;)Ljava/util/Optional;	d	cast
		p	1		registryRef
	f	Laev;	a	registry
	f	Laew;	b	location
	f	Lcom/google/common/collect/Interner;	c	VALUES
c	aqi	net/minecraft/tags/TagLoader
	m	(Ljava/util/function/Function;Ljava/lang/String;)V	<init>	<init>
		p	1		registryGetter
		p	2		dataType
	m	(Laew;)Ljava/util/List;	a	lambda$load$0
		p	0		id
	m	(Laew;Ljava/util/Collection;)V	a	lambda$build$3
		p	1		missingReferences
	m	(Lant;)Ljava/util/Map;	a	load
		p	1		resourceManager
	m	(Laqf$a;Ljava/util/List;)Lcom/mojang/datafixers/util/Either;	a	build
		p	1		valueGetter
		p	2		entries
	m	(Laqf$a;Ljava/util/Map;Laew;Laqi$b;)V	a	lambda$build$5
		p	3		id
		p	4		dependencies
	m	(Larc;Laew;Ljava/util/List;)V	a	lambda$build$2
		p	1		id
		p	2		entries
	m	(Ljava/util/List;Ljava/lang/String;Laqf;)V	a	lambda$load$1
		p	2		entry
	m	(Ljava/util/Map;)Ljava/util/Map;	a	build
		p	1		tags
	m	(Ljava/util/Map;Laew;Ljava/util/Collection;)V	a	lambda$build$4
		p	2		resolvedEntries
	m	(Lant;)Ljava/util/Map;	b	loadAndBuild
		p	1		manager
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/function/Function;	b	idToValue
	f	Ljava/lang/String;	c	directory
c	aqi$1	net/minecraft/tags/TagLoader$1
	m	(Laew;)Ljava/lang/Object;	a	element
		p	1		id
	m	(Laew;)Ljava/util/Collection;	b	tag
		p	1		id
	f	Ljava/util/Map;	a	val$newTags
	f	Laqi;	b	this$0
c	aqi$a	net/minecraft/tags/TagLoader$EntryWithSource
	m	(Laqf;Ljava/lang/String;)V	<init>	<init>
		p	2		source
	m	()Laqf;	a	entry
	m	()Ljava/lang/String;	b	source
	f	Laqf;	a	entry
	f	Ljava/lang/String;	b	source
c	aqi$b	net/minecraft/tags/TagLoader$SortingEntry
	m	()Ljava/util/List;	a	entries
	m	(Ljava/util/function/Consumer;)V	a	visitRequiredDependencies
		p	1		callback
	m	(Ljava/util/function/Consumer;Laqi$a;)V	a	lambda$visitOptionalDependencies$1
		p	1		entry
	m	(Ljava/util/function/Consumer;)V	b	visitOptionalDependencies
		p	1		callback
	m	(Ljava/util/function/Consumer;Laqi$a;)V	b	lambda$visitRequiredDependencies$0
		p	1		entry
	f	Ljava/util/List;	a	entries
c	aqj	net/minecraft/tags/TagManager
	m	(Lhr;)V	<init>	<init>
		p	1		registryManager
	m	()Ljava/util/List;	a	getResult
	m	(I)[Ljava/util/concurrent/CompletableFuture;	a	lambda$reload$1
	m	(Laev;)Ljava/lang/String;	a	getTagDir
		p	0		registry
	m	(Laev;Laqi;Lant;)Laqj$a;	a	lambda$createLoader$4
	m	(Lann$a;Lant;Lbdp;Lbdp;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	reload
		p	1		synchronizer
		p	2		manager
		p	3		prepareProfiler
		p	4		applyProfiler
		p	5		prepareExecutor
		p	6		applyExecutor
	m	(Lant;Ljava/util/concurrent/Executor;Lhr$d;)Ljava/util/concurrent/CompletableFuture;	a	createLoader
		p	1		resourceManager
		p	2		prepareExecutor
		p	3		requirement
	m	(Lhq;Laev;Laew;)Ljava/util/Optional;	a	lambda$createLoader$3
		p	2		id
	m	(Ljava/util/List;Ljava/lang/Void;)V	a	lambda$reload$2
		p	2		void_
	m	(Lant;Ljava/util/concurrent/Executor;Lhr$d;)Ljava/util/concurrent/CompletableFuture;	b	lambda$reload$0
		p	3		registry
	f	Ljava/util/Map;	a	CUSTOM_REGISTRY_DIRECTORIES
	f	Lhr;	b	registryAccess
	f	Ljava/util/List;	c	results
c	aqj$a	net/minecraft/tags/TagManager$LoadResult
	m	()Laev;	a	key
	m	()Ljava/util/Map;	b	tags
	f	Laev;	a	key
	f	Ljava/util/Map;	b	tags
c	aqk	net/minecraft/tags/TagNetworkSerialization
	m	(Laev;Lhq;Laqk$a;Laqk$b;)V	a	deserializeTagsFromNetwork
		p	0		registryKey
		p	1		registry
		p	2		serialized
		p	3		loader
	m	(Laev;Lhq;Laqk$b;Laew;Lit/unimi/dsi/fastutil/ints/IntList;)V	a	lambda$deserializeTagsFromNetwork$3
		p	3		tagId
		p	4		rawIds
	m	(Lcom/mojang/datafixers/util/Pair;)Z	a	lambda$serializeTagsToNetwork$1
		p	0		pair
	m	(Lhl;)Ljava/util/Map;	a	serializeTagsToNetwork
		p	0		dynamicRegistryManager
	m	(Lhq;)Laqk$a;	a	serializeToNetwork
		p	0		registry
	m	(Lhq;Ljava/util/Map;Lcom/mojang/datafixers/util/Pair;)V	a	lambda$serializeToNetwork$2
		p	2		pair
	m	(Lhr$d;)Lcom/mojang/datafixers/util/Pair;	a	lambda$serializeTagsToNetwork$0
		p	0		registry
c	aqk$a	net/minecraft/tags/TagNetworkSerialization$NetworkPayload
	m	(Ljava/util/Map;)V	<init>	<init>
		p	1		contents
	m	()Z	a	isEmpty
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lso;)Laqk$a;	b	read
		p	0		buf
	f	Ljava/util/Map;	a	tags
c	aqk$b	net/minecraft/tags/TagNetworkSerialization$TagOutput
	m	(Laqh;Ljava/util/List;)V	accept	accept
		p	1		tag
		p	2		entries
c	aql	net/minecraft/tags/WorldPresetTags
	m	(Ljava/lang/String;)Laqh;	a	create
		p	0		id
	f	Laqh;	a	NORMAL
	f	Laqh;	b	EXTENDED
c	aqm	net/minecraft/tags/package-info
c	aqn	net/minecraft/util/AbortableIterationConsumer
	m	(Ljava/util/function/Consumer;Ljava/lang/Object;)Laqn$a;	a	lambda$forConsumer$0
		p	1		value
	m	(Ljava/lang/Object;)Laqn$a;	accept	accept
		p	1		value
	m	(Ljava/util/function/Consumer;)Laqn;	forConsumer	forConsumer
		p	0		consumer
c	aqn$a	net/minecraft/util/AbortableIterationConsumer$Continuation
	m	()Z	a	shouldAbort
	m	()[Laqn$a;	b	$values
	f	Laqn$a;	a	CONTINUE
	f	Laqn$a;	b	ABORT
	f	[Laqn$a;	c	$VALUES
c	aqo	net/minecraft/util/ArrayListDeque
	m	(I)V	<init>	<init>
		p	1		size
	m	()I	a	capacity
	m	(I)I	a	getIndex
		p	1		index
	m	(II)V	a	verifyIndexInRange
		p	0		start
		p	1		end
	m	([Ljava/lang/Object;I)V	a	copyCount
		p	1		array
		p	2		size
	m	()V	b	grow
	m	(I)V	b	verifyIndexInRange
		p	1		index
	m	(I)Ljava/lang/Object;	c	getInner
		p	1		index
	f	I	a	MIN_GROWTH
	f	[Ljava/lang/Object;	b	contents
	f	I	c	head
	f	I	d	size
c	aqo$a	net/minecraft/util/ArrayListDeque$DescendingIterator
	f	Laqo;	a	this$0
	f	I	b	index
c	aqp	net/minecraft/util/BitStorage
	m	()[J	a	getRaw
	m	(I)I	a	get
		p	1		index
	m	(II)I	a	getAndSet
		p	1		index
		p	2		value
	m	(Ljava/util/function/IntConsumer;)V	a	getAll
		p	1		action
	m	([I)V	a	unpack
		p	1		out
	m	()I	b	getSize
	m	(II)V	b	set
		p	1		index
		p	2		value
	m	()I	c	getBits
	m	()Laqp;	d	copy
c	aqq	net/minecraft/util/Brightness
	m	()I	a	pack
	m	(I)Laqq;	a	unpack
		p	0		packed
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()I	b	block
	m	()I	c	sky
	f	Lcom/mojang/serialization/Codec;	a	LIGHT_VALUE_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Laqq;	c	FULL_BRIGHT
	f	I	d	block
	f	I	e	sky
c	aqr	net/minecraft/util/ByIdMap
	m	(I[Ljava/lang/Object;Ljava/lang/Object;I)Ljava/lang/Object;	a	lambda$continuous$1
		p	3		index
	m	(Ljava/util/function/IntFunction;Ljava/lang/Object;I)Ljava/lang/Object;	a	lambda$sparse$0
		p	2		index
	m	(Ljava/util/function/ToIntFunction;[Ljava/lang/Object;)Ljava/util/function/IntFunction;	a	createMap
		p	0		valueToIdFunction
		p	1		values
	m	(Ljava/util/function/ToIntFunction;[Ljava/lang/Object;Laqr$a;)Ljava/util/function/IntFunction;	a	continuous
		p	0		valueToIdFunction
		p	1		values
		p	2		outOfBoundsHandling
	m	(Ljava/util/function/ToIntFunction;[Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/function/IntFunction;	a	sparse
		p	0		valueToIdFunction
		p	1		values
		p	2		fallback
	m	([Ljava/lang/Object;II)Ljava/lang/Object;	a	lambda$continuous$3
		p	2		index
	m	(Ljava/util/function/ToIntFunction;[Ljava/lang/Object;)[Ljava/lang/Object;	b	createSortedArray
		p	0		valueToIndexFunction
		p	1		values
	m	([Ljava/lang/Object;II)Ljava/lang/Object;	b	lambda$continuous$2
		p	2		index
c	aqr$1	net/minecraft/util/ByIdMap$1
	f	[I	a	$SwitchMap$net$minecraft$util$ByIdMap$OutOfBoundsStrategy
c	aqr$a	net/minecraft/util/ByIdMap$OutOfBoundsStrategy
	m	()[Laqr$a;	a	$values
	f	Laqr$a;	a	ZERO
	f	Laqr$a;	b	WRAP
	f	Laqr$a;	c	CLAMP
	f	[Laqr$a;	d	$VALUES
c	aqs	net/minecraft/util/ClassInstanceMultiMap
	m	(Ljava/lang/Class;)V	<init>	<init>
		p	1		elementType
	m	()Ljava/util/List;	a	getAllInstances
	m	(Ljava/lang/Class;)Ljava/util/Collection;	a	find
		p	1		type
	m	(Ljava/lang/Class;)Ljava/util/List;	b	lambda$find$0
		p	1		typeClass
	f	Ljava/util/Map;	a	byClass
	f	Ljava/lang/Class;	b	baseClass
	f	Ljava/util/List;	c	allInstances
c	aqt	net/minecraft/util/CommonColors
	f	I	a	WHITE
	f	I	b	BLACK
	f	I	c	GRAY
	f	I	d	LIGHT_GRAY
	f	I	e	RED
c	aqu	net/minecraft/util/CommonLinks
	m	(Ljava/lang/String;Ljava/util/UUID;)Ljava/lang/String;	a	extendRealms
		p	0		subscriptionId
		p	1		uuid
	m	(Ljava/lang/String;Ljava/util/UUID;Z)Ljava/lang/String;	a	extendRealms
		p	0		subscriptionId
		p	1		uuid
		p	2		trial
	f	Ljava/lang/String;	a	GDPR
	f	Ljava/lang/String;	b	EULA
	f	Ljava/lang/String;	c	PRIVACY_STATEMENT
	f	Ljava/lang/String;	d	ATTRIBUTION
	f	Ljava/lang/String;	e	LICENSES
	f	Ljava/lang/String;	f	BUY_MINECRAFT_JAVA
	f	Ljava/lang/String;	g	ACCOUNT_SETTINGS
	f	Ljava/lang/String;	h	SNAPSHOT_FEEDBACK
	f	Ljava/lang/String;	i	RELEASE_FEEDBACK
	f	Ljava/lang/String;	j	SNAPSHOT_BUGS_FEEDBACK
	f	Ljava/lang/String;	k	ACCESSIBILITY_HELP
	f	Ljava/lang/String;	l	REPORTING_HELP
	f	Ljava/lang/String;	m	SUSPENSION_HELP
	f	Ljava/lang/String;	n	BLOCKING_HELP
	f	Ljava/lang/String;	o	SYMLINK_HELP
	f	Ljava/lang/String;	p	START_REALMS_TRIAL
	f	Ljava/lang/String;	q	BUY_REALMS
	f	Ljava/lang/String;	r	REALMS_TERMS
	f	Ljava/lang/String;	s	REALMS_CONTENT_CREATION
	f	Ljava/lang/String;	t	REALMS_UPDATE_MOJANG_ACCOUNT
c	aqv	net/minecraft/util/CrudeIncrementalIntIdentityHashBiMap
	m	(I)V	<init>	<init>
		p	1		size
	m	([Ljava/lang/Object;[I[Ljava/lang/Object;II)V	<init>	<init>
		p	1		values
		p	2		ids
		p	3		idToValues
		p	4		nextId
		p	5		size
	m	()V	a	clear
	m	(I)Ljava/lang/Object;	a	byId
		p	1		index
	m	(Ljava/lang/Object;)I	a	getId
		p	1		value
	m	(Ljava/lang/Object;I)V	a	addMapping
		p	1		value
		p	2		id
	m	()I	b	size
	m	(Ljava/lang/Object;)Z	b	contains
		p	1		value
	m	(Ljava/lang/Object;I)I	b	indexOf
		p	1		value
		p	2		id
	m	()Laqv;	c	copy
	m	(I)Laqv;	c	create
		p	0		expectedSize
	m	(Ljava/lang/Object;)I	c	add
		p	1		value
	m	()I	d	nextId
	m	(I)Z	d	contains
		p	1		index
	m	(Ljava/lang/Object;)I	d	hash
		p	1		value
	m	(I)I	e	getValue
		p	1		index
	m	(I)V	f	grow
		p	1		newSize
	m	(I)I	g	findEmpty
		p	1		size
	f	I	b	NOT_FOUND
	f	Ljava/lang/Object;	c	EMPTY_SLOT
	f	F	d	LOADFACTOR
	f	[Ljava/lang/Object;	e	keys
	f	[I	f	values
	f	[Ljava/lang/Object;	g	byId
	f	I	h	nextId
	f	I	i	size
c	aqw	net/minecraft/util/Crypt
	m	()Ljavax/crypto/SecretKey;	a	generateSecretKey
	m	(ILjava/lang/String;Ljava/security/Key;)Ljavax/crypto/Cipher;	a	setupCipher
		p	0		opMode
		p	1		algorithm
		p	2		key
	m	(ILjava/security/Key;)Ljavax/crypto/Cipher;	a	getCipher
		p	0		opMode
		p	1		key
	m	(ILjava/security/Key;[B)[B	a	cipherData
		p	0		opMode
		p	1		key
		p	2		data
	m	(Ljava/lang/String;)Ljava/security/PrivateKey;	a	stringToPemRsaPrivateKey
		p	0		key
	m	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Laqw$a;)Ljava/security/Key;	a	rsaStringToKey
		p	0		key
		p	1		prefix
		p	2		suffix
		p	3		decoder
	m	(Ljava/lang/String;Ljava/security/PublicKey;Ljavax/crypto/SecretKey;)[B	a	digestData
		p	0		baseServerId
		p	1		publicKey
		p	2		secretKey
	m	(Ljava/security/Key;[B)[B	a	encryptUsingKey
		p	0		key
		p	1		data
	m	(Ljava/security/PrivateKey;)Ljava/lang/String;	a	pemRsaPrivateKeyToString
		p	0		key
	m	(Ljava/security/PrivateKey;[B)Ljavax/crypto/SecretKey;	a	decryptByteToSecretKey
		p	0		privateKey
		p	1		encryptedSecretKey
	m	(Ljava/security/PublicKey;)Ljava/lang/String;	a	rsaPublicKeyToString
		p	0		key
	m	([B)Ljava/security/PublicKey;	a	byteToPublicKey
		p	0		key
	m	([[B)[B	a	digestData
		p	0		bytes
	m	()Ljava/security/KeyPair;	b	generateKeyPair
	m	(Ljava/lang/String;)Ljava/security/PublicKey;	b	stringToRsaPublicKey
		p	0		key
	m	(Ljava/security/Key;[B)[B	b	decryptUsingKey
		p	0		key
		p	1		data
	m	([B)Ljava/security/PrivateKey;	b	byteToPrivateKey
		p	0		key
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	c	lambda$static$1
		p	0		key
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	d	lambda$static$0
		p	0		key
	f	Ljava/lang/String;	a	SIGNING_ALGORITHM
	f	I	b	SIGNATURE_BYTES
	f	Ljava/lang/String;	c	RSA_PUBLIC_KEY_HEADER
	f	Ljava/lang/String;	d	MIME_LINE_SEPARATOR
	f	Ljava/util/Base64$Encoder;	e	MIME_ENCODER
	f	Lcom/mojang/serialization/Codec;	f	PUBLIC_KEY_CODEC
	f	Lcom/mojang/serialization/Codec;	g	PRIVATE_KEY_CODEC
	f	Ljava/lang/String;	h	SYMMETRIC_ALGORITHM
	f	I	i	SYMMETRIC_BITS
	f	Ljava/lang/String;	j	ASYMMETRIC_ALGORITHM
	f	I	k	ASYMMETRIC_BITS
	f	Ljava/lang/String;	l	BYTE_ENCODING
	f	Ljava/lang/String;	m	HASH_ALGORITHM
	f	Ljava/lang/String;	n	PEM_RSA_PRIVATE_KEY_HEADER
	f	Ljava/lang/String;	o	PEM_RSA_PRIVATE_KEY_FOOTER
	f	Ljava/lang/String;	p	RSA_PUBLIC_KEY_FOOTER
c	aqw$a	net/minecraft/util/Crypt$ByteArrayToKeyFunction
	m	([B)Ljava/security/Key;	apply	apply
		p	1		key
c	aqw$b	net/minecraft/util/Crypt$SaltSignaturePair
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Z	a	isValid
	m	(Lso;Laqw$b;)V	a	write
		p	0		buf
		p	1		signatureData
	m	()[B	b	saltAsBytes
	m	()J	c	salt
	m	()[B	d	signature
	f	Laqw$b;	a	EMPTY
	f	J	b	salt
	f	[B	c	signature
c	aqw$c	net/minecraft/util/Crypt$SaltSupplier
	m	()J	a	getLong
	f	Ljava/security/SecureRandom;	a	secureRandom
c	aqx	net/minecraft/util/CryptException
	m	(Ljava/lang/Throwable;)V	<init>	<init>
		p	1		throwable
c	aqy	net/minecraft/util/CsvOutput
	m	(Ljava/io/Writer;Ljava/util/List;)V	<init>	<init>
		p	1		writer
		p	2		columns
	m	()Laqy$a;	a	builder
	m	(Ljava/lang/Object;)Ljava/lang/String;	a	getStringValue
		p	0		o
	m	(Ljava/util/stream/Stream;)V	a	writeLine
		p	1		columns
	m	([Ljava/lang/Object;)V	a	writeRow
		p	1		columns
	f	Ljava/lang/String;	a	LINE_SEPARATOR
	f	Ljava/lang/String;	b	FIELD_SEPARATOR
	f	Ljava/io/Writer;	c	output
	f	I	d	columnCount
c	aqy$a	net/minecraft/util/CsvOutput$Builder
	m	(Ljava/io/Writer;)Laqy;	a	build
		p	1		writer
	m	(Ljava/lang/String;)Laqy$a;	a	addColumn
		p	1		name
	f	Ljava/util/List;	a	headers
c	aqz	net/minecraft/util/CubicSampler
	m	(Lehn;Laqz$a;)Lehn;	a	gaussianSampleVec3
		p	0		pos
		p	1		rgbFetcher
	f	I	a	GAUSSIAN_SAMPLE_RADIUS
	f	I	b	GAUSSIAN_SAMPLE_BREADTH
	f	[D	c	GAUSSIAN_SAMPLE_KERNEL
c	aqz$a	net/minecraft/util/CubicSampler$Vec3Fetcher
	m	(III)Lehn;	fetch	fetch
		p	1		x
		p	2		y
		p	3		z
c	ara	net/minecraft/util/CubicSpline
	m	()Ljava/lang/String;	a	parityString
	m	(F)Lara;	a	constant
		p	0		value
	m	(FLara;F)Lara$a;	a	lambda$codec$0
		p	0		location
		p	1		value
		p	2		derivative
	m	(Lara$d;)Lara;	a	mapAll
		p	1		visitor
	m	(Lara$e;)Ljava/lang/Record;	a	lambda$codec$6
		p	0		spline
	m	(Lara$e;I)Lara$a;	a	lambda$codec$2
		p	1		index
	m	(Lara;)Lcom/mojang/datafixers/util/Either;	a	lambda$codec$8
		p	0		spline
	m	(Lasv;)Lara$b;	a	builder
		p	0		locationFunction
	m	(Lasv;Lasv;)Lara$b;	a	builder
		p	0		locationFunction
		p	1		amplifier
	m	(Lasv;Ljava/util/List;)Lara$e;	a	lambda$codec$4
		p	0		locationFunction
		p	1		splines
	m	(Lcom/mojang/datafixers/util/Either;)Lara;	a	lambda$codec$7
		p	0		either
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	codec
		p	0		locationFunctionCodec
	m	(Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$codec$5
		p	2		instance
	m	(Lorg/apache/commons/lang3/mutable/MutableObject;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$codec$1
		p	1		instance
	m	(Lara$e;)Ljava/util/List;	b	lambda$codec$3
		p	0		spline
c	ara$a	net/minecraft/util/CubicSpline$1Point
	m	()F	a	location
	m	()Lara;	b	value
	m	()F	c	derivative
	f	F	a	location
	f	Lara;	b	value
	f	F	c	derivative
c	ara$b	net/minecraft/util/CubicSpline$Builder
	m	(Lasv;)V	<init>	<init>
		p	1		locationFunction
	m	(Lasv;Lasv;)V	<init>	<init>
		p	1		locationFunction
		p	2		amplifier
	m	()Lara;	a	build
	m	(FF)Lara$b;	a	addPoint
		p	1		location
		p	2		value
	m	(FFF)Lara$b;	a	addPoint
		p	1		location
		p	2		value
		p	3		derivative
	m	(FLara;)Lara$b;	a	addPoint
		p	1		location
		p	2		value
	m	(FLara;F)Lara$b;	a	addPoint
		p	1		location
		p	2		value
		p	3		derivative
	f	Lasv;	a	coordinate
	f	Lasv;	b	valueTransformer
	f	Lit/unimi/dsi/fastutil/floats/FloatList;	c	locations
	f	Ljava/util/List;	d	values
	f	Lit/unimi/dsi/fastutil/floats/FloatList;	e	derivatives
c	ara$c	net/minecraft/util/CubicSpline$Constant
	m	(F)V	<init>	<init>
		p	1		value
	m	()Ljava/lang/String;	a	parityString
	m	(Lara$d;)Lara;	a	mapAll
		p	1		visitor
	m	(Ljava/lang/Object;)F	a	apply
		p	1		x
	m	()F	b	minValue
	m	()F	c	maxValue
	m	()F	d	value
	f	F	b	value
c	ara$d	net/minecraft/util/CubicSpline$CoordinateVisitor
	m	(Ljava/lang/Object;)Ljava/lang/Object;	visit	visit
		p	1		value
c	ara$e	net/minecraft/util/CubicSpline$Multipoint
	m	()Ljava/lang/String;	a	parityString
	m	(D)Ljava/lang/String;	a	lambda$toString$2
		p	0		value
	m	(F[FF[FI)F	a	linearExtend
		p	0		point
		p	1		locations
		p	2		value
		p	3		derivatives
		p	4		i
	m	(F[FI)Z	a	lambda$findIntervalStart$0
	m	(Lara$d;)Lara;	a	mapAll
		p	1		visitor
	m	(Lara$d;Lara;)Lara;	a	lambda$mapAll$3
		p	1		value
	m	(Lasv;[FLjava/util/List;[F)Lara$e;	a	create
		p	0		locationFunction
		p	1		locations
		p	2		values
		p	3		derivatives
	m	(Ljava/lang/Object;)F	a	apply
		p	1		x
	m	([F)Ljava/lang/String;	a	toString
		p	1		values
	m	([FF)I	a	findIntervalStart
		p	0		locations
		p	1		x
	m	([FI)D	a	lambda$toString$1
		p	1		index
	m	([FLjava/util/List;[F)V	a	validateSizes
		p	0		locations
		p	1		values
		p	2		derivatives
	m	()F	b	minValue
	m	()F	c	maxValue
	m	()Lasv;	d	coordinate
	m	()[F	e	locations
	m	()Ljava/util/List;	f	values
	m	()[F	g	derivatives
	f	Lasv;	b	coordinate
	f	[F	c	locations
	f	Ljava/util/List;	d	values
	f	[F	e	derivatives
	f	F	f	minValue
	f	F	g	maxValue
c	arb	net/minecraft/util/DebugBuffer
	m	(I)V	<init>	<init>
		p	1		maxSize
	m	()Ljava/util/List;	a	dump
	m	(Ljava/lang/Object;)V	a	push
		p	1		value
	f	Ljava/util/concurrent/atomic/AtomicReferenceArray;	a	data
	f	Ljava/util/concurrent/atomic/AtomicInteger;	b	index
c	arc	net/minecraft/util/DependencySorter
	m	(Lcom/google/common/collect/Multimap;Ljava/lang/Object;Larc$a;)V	a	lambda$orderByDependencies$5
		p	1		key
		p	2		value
	m	(Lcom/google/common/collect/Multimap;Ljava/lang/Object;Ljava/lang/Object;)Z	a	isCyclic
		p	0		dependencies
		p	1		key
		p	2		dependency
	m	(Lcom/google/common/collect/Multimap;Ljava/util/Set;Ljava/lang/Object;Ljava/util/function/BiConsumer;)V	a	visitDependenciesAndElement
		p	1		parentChild
		p	2		visited
		p	3		rootKey
		p	4		callback
	m	(Lcom/google/common/collect/Multimap;Ljava/util/Set;Ljava/util/function/BiConsumer;Ljava/lang/Object;)V	a	lambda$orderByDependencies$6
		p	4		key
	m	(Ljava/lang/Object;Larc$a;)Larc;	a	addEntry
		p	1		key
		p	2		value
	m	(Ljava/util/function/BiConsumer;)V	a	orderByDependencies
		p	1		callback
	m	(Lcom/google/common/collect/Multimap;Ljava/lang/Object;Larc$a;)V	b	lambda$orderByDependencies$3
		p	1		key
		p	2		value
	m	(Lcom/google/common/collect/Multimap;Ljava/lang/Object;Ljava/lang/Object;)V	b	addDependencyIfNotCyclic
		p	0		dependencies
		p	1		key
		p	2		dependency
	m	(Lcom/google/common/collect/Multimap;Ljava/util/Set;Ljava/util/function/BiConsumer;Ljava/lang/Object;)V	b	lambda$visitDependenciesAndElement$0
		p	4		child
	m	(Lcom/google/common/collect/Multimap;Ljava/lang/Object;Ljava/lang/Object;)V	c	lambda$orderByDependencies$4
		p	2		dependency
	m	(Lcom/google/common/collect/Multimap;Ljava/lang/Object;Ljava/lang/Object;)V	d	lambda$orderByDependencies$2
		p	2		dependency
	m	(Lcom/google/common/collect/Multimap;Ljava/lang/Object;Ljava/lang/Object;)Z	e	lambda$isCyclic$1
		p	2		subdependency
	f	Ljava/util/Map;	a	contents
c	arc$a	net/minecraft/util/DependencySorter$Entry
	m	(Ljava/util/function/Consumer;)V	a	visitRequiredDependencies
		p	1		callback
	m	(Ljava/util/function/Consumer;)V	b	visitOptionalDependencies
		p	1		callback
c	ard	net/minecraft/util/DirectoryLock
	m	(Ljava/nio/channels/FileChannel;Ljava/nio/channels/FileLock;)V	<init>	<init>
		p	1		channel
		p	2		lock
	m	()Z	a	isValid
	m	(Ljava/nio/file/Path;)Lard;	a	create
		p	0		path
	m	(Ljava/nio/file/Path;)Z	b	isLocked
		p	0		path
	f	Ljava/lang/String;	a	LOCK_FILE
	f	Ljava/nio/channels/FileChannel;	b	lockFile
	f	Ljava/nio/channels/FileLock;	c	lock
	f	Ljava/nio/ByteBuffer;	d	DUMMY
c	ard$a	net/minecraft/util/DirectoryLock$LockException
	m	(Ljava/nio/file/Path;Ljava/lang/String;)V	<init>	<init>
		p	1		path
		p	2		message
	m	(Ljava/nio/file/Path;)Lard$a;	a	alreadyLocked
		p	0		path
c	are	net/minecraft/util/ExceptionCollector
	m	()V	a	throwIfPresent
	m	(Ljava/lang/Throwable;)V	a	add
		p	1		throwable
	f	Ljava/lang/Throwable;	a	result
c	arf	net/minecraft/util/ExtraCodecs
	m	()Ljava/lang/String;	a	lambda$static$81
	m	(FFLjava/util/function/Function;)Lcom/mojang/serialization/Codec;	a	floatRangeMinExclusiveWithMessage
		p	0		min
		p	1		max
		p	2		messageFactory
	m	(FFLjava/util/function/Function;Ljava/lang/Float;)Lcom/mojang/serialization/DataResult;	a	lambda$floatRangeMinExclusiveWithMessage$44
		p	3		value
	m	(II)Lcom/mojang/serialization/Codec;	a	intRange
		p	0		min
		p	1		max
	m	(IILjava/lang/Integer;)Ljava/lang/String;	a	lambda$intRange$42
		p	2		value
	m	(IILjava/lang/String;)Lcom/mojang/serialization/DataResult;	a	lambda$sizeLimitedString$87
		p	2		string
	m	(IILjava/util/function/Function;)Lcom/mojang/serialization/Codec;	a	intRangeWithMessage
		p	0		min
		p	1		max
		p	2		messageFactory
	m	(IILjava/util/function/Function;Ljava/lang/Integer;)Lcom/mojang/serialization/DataResult;	a	lambda$intRangeWithMessage$39
		p	3		value
	m	(Laew;)Larf$f;	a	lambda$static$63
		p	0		id
	m	(Lcom/google/gson/JsonElement;)Lcom/mojang/serialization/Dynamic;	a	lambda$static$1
		p	0		element
	m	(Lcom/mojang/authlib/GameProfile;Lcom/mojang/authlib/properties/PropertyMap;)Lcom/mojang/authlib/GameProfile;	a	lambda$static$79
		p	0		profile
		p	1		properties
	m	(Lcom/mojang/authlib/GameProfile;Ljava/lang/String;Lcom/mojang/authlib/properties/Property;)V	a	lambda$static$78
		p	1		key
		p	2		property
	m	(Lcom/mojang/authlib/properties/Property;)Ljava/util/Optional;	a	lambda$static$69
		p	0		property
	m	(Lcom/mojang/authlib/properties/PropertyMap;)Lcom/mojang/datafixers/util/Either;	a	lambda$static$76
		p	0		properties
	m	(Lcom/mojang/authlib/properties/PropertyMap;Ljava/lang/String;Ljava/util/List;)V	a	lambda$static$72
		p	1		key
		p	2		values
	m	(Lcom/mojang/authlib/properties/PropertyMap;Ljava/util/List;)V	a	lambda$static$74
		p	1		properties
	m	(Lcom/mojang/authlib/properties/PropertyMap;Ljava/util/Map;)V	a	lambda$static$73
		p	1		map
	m	(Lcom/mojang/datafixers/util/Either;)Ljava/lang/Object;	a	lambda$withAlternative$92
		p	0		either
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	nonEmptyList
		p	0		originalCodec
	m	(Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	xor
		p	0		first
		p	1		second
	m	(Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/Codec;Ljava/util/function/Function;)Lcom/mojang/serialization/Codec;	a	withAlternative
		p	0		serialized
		p	1		alternative
		p	2		alternativeMapper
	m	(Lcom/mojang/serialization/Codec;Ljava/lang/String;)Lcom/mojang/serialization/MapCodec;	a	strictOptionalField
		p	0		codec
		p	1		field
	m	(Lcom/mojang/serialization/Codec;Ljava/lang/String;Ljava/lang/Object;)Lcom/mojang/serialization/MapCodec;	a	strictOptionalField
		p	0		codec
		p	1		field
		p	2		fallback
	m	(Lcom/mojang/serialization/Codec;Ljava/lang/String;Ljava/lang/String;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$intervalCodec$21
		p	3		instance
	m	(Lcom/mojang/serialization/Codec;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/BiFunction;Ljava/util/function/Function;Ljava/util/function/Function;)Lcom/mojang/serialization/Codec;	a	intervalCodec
		p	0		codec
		p	1		leftFieldName
		p	2		rightFieldName
		p	3		combineFunction
		p	4		leftFunction
		p	5		rightFunction
	m	(Lcom/mojang/serialization/Codec;Ljava/util/function/Function;)Lcom/mojang/serialization/Codec;	a	validate
		p	0		codec
		p	1		validator
	m	(Lcom/mojang/serialization/Codec;Ljava/util/function/Function;Ljava/util/function/Function;)Lcom/mojang/serialization/Codec;	a	overrideLifecycle
		p	0		originalCodec
		p	1		entryLifecycleGetter
		p	2		lifecycleGetter
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/google/gson/JsonElement;	a	lambda$static$0
		p	0		dynamic
	m	(Lcom/mojang/serialization/MapCodec;)Lcom/mojang/serialization/MapCodec;	a	asOptionalLong
		p	0		codec
	m	(Lcom/mojang/serialization/MapCodec;Ljava/util/function/Function;)Lcom/mojang/serialization/MapCodec;	a	validate
		p	0		codec
		p	1		validator
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$80
		p	0		instance
	m	(Lhi;)Lcom/mojang/serialization/DataResult;	a	lambda$nonEmptyHolderSet$49
		p	0		entryList
	m	(Ljava/lang/Float;)Ljava/lang/String;	a	lambda$static$45
		p	0		v
	m	(Ljava/lang/Integer;)Ljava/lang/String;	a	lambda$static$41
		p	0		v
	m	(Ljava/lang/Object;)Lcom/mojang/serialization/Codec$ResultFunction;	a	orElsePartial
		p	0		object
	m	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Optional;	a	lambda$strictOptionalField$52
		p	1		value
	m	(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/String;	a	lambda$ensureHomogenous$53
	m	(Ljava/lang/Object;Ljava/util/Optional;)Ljava/lang/Object;	a	lambda$strictOptionalField$51
		p	1		value
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	a	lambda$static$89
		p	0		path
	m	(Ljava/lang/String;III)Ljava/lang/String;	a	lambda$sizeLimitedString$86
	m	(Ljava/lang/String;Ljava/lang/String;Ljava/util/Optional;)Lcom/mojang/authlib/properties/Property;	a	lambda$static$70
		p	0		key
		p	1		value
		p	2		signature
	m	(Ljava/lang/String;Ljava/util/regex/PatternSyntaxException;)Ljava/lang/String;	a	lambda$static$55
	m	(Ljava/time/format/DateTimeFormatter;)Lcom/mojang/serialization/Codec;	a	temporalCodec
		p	0		formatter
	m	(Ljava/time/format/DateTimeFormatter;Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	a	lambda$temporalCodec$57
	m	(Ljava/util/BitSet;)Ljava/util/stream/LongStream;	a	lambda$static$68
		p	0		set
	m	(Ljava/util/List;)Lcom/mojang/serialization/DataResult;	a	lambda$nonEmptyList$47
		p	0		list
	m	(Ljava/util/Optional;)Ljava/util/OptionalLong;	a	lambda$static$65
		p	0		optional
	m	(Ljava/util/OptionalLong;)Ljava/util/Optional;	a	lambda$static$66
		p	0		optionalLong
	m	(Ljava/util/function/BiFunction;Lcom/mojang/datafixers/util/Either;)Lcom/mojang/serialization/DataResult;	a	lambda$intervalCodec$25
		p	1		either
	m	(Ljava/util/function/BiFunction;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/serialization/DataResult;	a	lambda$intervalCodec$22
		p	1		pair
	m	(Ljava/util/function/BiFunction;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	lambda$intervalCodec$24
		p	1		object
	m	(Ljava/util/function/BiFunction;Ljava/util/List;)Lcom/mojang/serialization/DataResult;	a	lambda$intervalCodec$19
		p	1		list
	m	(Ljava/util/function/Function;)Lcom/mojang/serialization/Codec;	a	recursive
		p	0		codecFunction
	m	(Ljava/util/function/Function;Lcom/google/gson/JsonElement;)Lcom/mojang/serialization/DataResult;	a	lambda$adaptJsonSerializer$2
		p	1		json
	m	(Ljava/util/function/Function;Lcom/mojang/datafixers/util/Either;)Ljava/lang/Object;	a	lambda$withAlternative$94
		p	1		either
	m	(Ljava/util/function/Function;Ljava/lang/Float;)Ljava/lang/String;	a	lambda$floatRangeMinExclusiveWithMessage$43
	m	(Ljava/util/function/Function;Ljava/lang/Integer;)Ljava/lang/String;	a	lambda$intRangeWithMessage$38
	m	(Ljava/util/function/Function;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	lambda$stringResolverCodec$37
		p	1		element
	m	(Ljava/util/function/Function;Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	a	lambda$stringResolverCodec$34
		p	1		id
	m	(Ljava/util/function/Function;Ljava/util/Collection;)Lcom/mojang/serialization/DataResult;	a	lambda$ensureHomogenous$54
		p	1		collection
	m	(Ljava/util/function/Function;Ljava/util/function/Function;)Lcom/mojang/serialization/Codec;	a	adaptJsonSerializer
		p	0		deserializer
		p	1		serializer
	m	(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/lang/Object;)Lcom/mojang/datafixers/util/Either;	a	lambda$intervalCodec$26
		p	2		pair
	m	(Ljava/util/function/IntFunction;Ljava/lang/Integer;)Lcom/mojang/serialization/DataResult;	a	lambda$idResolverCodec$29
		p	1		rawId
	m	(Ljava/util/function/Supplier;)Lcom/mojang/serialization/Codec;	a	lazyInitializedCodec
		p	0		supplier
	m	(Ljava/util/function/Supplier;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	lambda$lazyInitializedCodec$50
		p	1		codec
	m	(Ljava/util/function/ToIntFunction;ILjava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	lambda$idResolverCodec$31
		p	2		element
	m	(Ljava/util/function/ToIntFunction;Ljava/util/function/IntFunction;I)Lcom/mojang/serialization/Codec;	a	idResolverCodec
		p	0		elementToRawId
		p	1		rawIdToElement
		p	2		errorRawId
	m	(Ljava/util/stream/LongStream;)Ljava/util/BitSet;	a	lambda$static$67
		p	0		stream
	m	(Lorg/joml/AxisAngle4f;)Lorg/joml/Vector3f;	a	lambda$static$13
		p	0		axisAngle
	m	(Lorg/joml/Matrix4f;)Ljava/util/List;	a	lambda$static$17
		p	0		matrix4f
	m	(Lorg/joml/Quaternionf;)Ljava/util/List;	a	lambda$static$11
		p	0		quaternion
	m	(Lorg/joml/Vector3f;)Ljava/util/List;	a	lambda$static$8
		p	0		vec3f
	m	(Ltl;)Lcom/mojang/serialization/DataResult;	a	lambda$static$5
		p	0		text
	m	([B)Ljava/lang/String;	a	lambda$static$60
		p	0		data
	m	()Ljava/lang/String;	b	lambda$static$58
	m	(II)Lcom/mojang/serialization/Codec;	b	sizeLimitedString
		p	0		minLength
		p	1		maxLength
	m	(Laew;)Larf$f;	b	lambda$static$62
		p	0		id
	m	(Lcom/mojang/datafixers/util/Either;)Lcom/mojang/authlib/properties/PropertyMap;	b	lambda$static$75
		p	0		either
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	b	nonEmptyHolderSet
		p	0		originalCodec
	m	(Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	b	orCompressed
		p	0		uncompressedCodec
		p	1		compressedCodec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$77
		p	0		instance
	m	(Ljava/lang/Integer;)Ljava/lang/String;	b	lambda$static$40
		p	0		v
	m	(Ljava/lang/Object;)Ljava/lang/Object;	b	lambda$withAlternative$93
		p	0		o
	m	(Ljava/lang/String;)Ljava/lang/String;	b	lambda$static$88
	m	(Ljava/lang/String;III)Ljava/lang/String;	b	lambda$sizeLimitedString$85
	m	(Ljava/util/List;)Lcom/mojang/serialization/DataResult;	b	lambda$static$16
		p	0		list
	m	(Ljava/util/function/BiFunction;Ljava/util/List;)Lcom/mojang/serialization/DataResult;	b	lambda$intervalCodec$18
		p	1		listx
	m	(Ljava/util/function/Function;)Lcom/mojang/serialization/MapCodec;	b	retrieveContext
		p	0		retriever
	m	(Ljava/util/function/Function;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	b	lambda$adaptJsonSerializer$3
		p	1		value
	m	(Ljava/util/function/Function;Ljava/util/function/Function;)Lcom/mojang/serialization/Codec;	b	stringResolverCodec
		p	0		elementToId
		p	1		idToElement
	m	(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/lang/Object;)Lcom/mojang/datafixers/util/Pair;	b	lambda$intervalCodec$23
		p	2		pair
	m	(Lorg/joml/AxisAngle4f;)Ljava/lang/Float;	b	lambda$static$12
		p	0		axisAngle
	m	()Ljava/lang/String;	c	lambda$nonEmptyHolderSet$48
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	c	catchDecoderException
		p	0		codec
	m	(Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/Codec;)Larf$b;	c	either
		p	0		first
		p	1		second
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	c	lambda$static$71
		p	0		instance
	m	(Ljava/lang/Integer;)Lcom/mojang/serialization/DataResult;	c	lambda$idResolverCodec$28
	m	(Ljava/lang/Object;)Ljava/lang/Object;	c	lambda$withAlternative$91
		p	0		o
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	c	lambda$static$84
		p	0		string
	m	(Ljava/util/List;)Lorg/joml/Matrix4f;	c	lambda$static$15
		p	0		listx
	m	(Ljava/util/function/Function;)Ljava/util/function/Function;	c	ensureHomogenous
		p	0		typeGetter
	m	(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/util/List;	c	lambda$intervalCodec$20
		p	2		pair
	m	()Ljava/lang/String;	d	lambda$nonEmptyList$46
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	d	object2BooleanMap
		p	0		keyCodec
	m	(Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/Codec;)Larf$e;	d	strictUnboundedMap
		p	0		keyCodec
		p	1		elementCodec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	d	lambda$static$14
		p	0		instance
	m	(Ljava/lang/Integer;)Ljava/lang/String;	d	lambda$idResolverCodec$27
	m	(Ljava/lang/Object;)Ljava/lang/Object;	d	lambda$withAlternative$90
		p	0		o
	m	(Ljava/lang/String;)Ljava/lang/String;	d	lambda$static$83
	m	(Ljava/util/List;)Lcom/mojang/serialization/DataResult;	d	lambda$static$10
		p	0		list
	m	(Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	e	withAlternative
		p	0		a
		p	1		b
	m	(Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	e	lambda$stringResolverCodec$36
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	e	lambda$static$82
		p	0		string
	m	(Ljava/util/List;)Lorg/joml/Quaternionf;	e	lambda$static$9
		p	0		listx
	m	(Ljava/lang/Object;)Ljava/lang/String;	f	lambda$stringResolverCodec$35
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	f	lambda$static$64
		p	0		tagEntry
	m	(Ljava/util/List;)Lcom/mojang/serialization/DataResult;	f	lambda$static$7
		p	0		list
	m	(Ljava/lang/Object;)Ljava/lang/String;	g	lambda$idResolverCodec$30
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	g	lambda$static$61
		p	0		string
	m	(Ljava/util/List;)Lorg/joml/Vector3f;	g	lambda$static$6
		p	0		listx
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	h	lambda$static$59
		p	0		encoded
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	i	lambda$static$56
		p	0		pattern
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	j	lambda$stringResolverCodec$33
	m	(Ljava/lang/String;)Ljava/lang/String;	k	lambda$stringResolverCodec$32
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	l	lambda$static$4
		p	0		json
	f	Lcom/mojang/serialization/Codec;	a	JSON
	f	Lcom/mojang/serialization/Codec;	b	COMPONENT
	f	Lcom/mojang/serialization/Codec;	c	FLAT_COMPONENT
	f	Lcom/mojang/serialization/Codec;	d	VECTOR3F
	f	Lcom/mojang/serialization/Codec;	e	QUATERNIONF_COMPONENTS
	f	Lcom/mojang/serialization/Codec;	f	AXISANGLE4F
	f	Lcom/mojang/serialization/Codec;	g	QUATERNIONF
	f	Lcom/mojang/serialization/Codec;	h	MATRIX4F
	f	Lcom/mojang/serialization/Codec;	i	NON_NEGATIVE_INT
	f	Lcom/mojang/serialization/Codec;	j	POSITIVE_INT
	f	Lcom/mojang/serialization/Codec;	k	POSITIVE_FLOAT
	f	Lcom/mojang/serialization/Codec;	l	PATTERN
	f	Lcom/mojang/serialization/Codec;	m	INSTANT_ISO8601
	f	Lcom/mojang/serialization/Codec;	n	BASE64_STRING
	f	Lcom/mojang/serialization/Codec;	o	ESCAPED_STRING
	f	Lcom/mojang/serialization/Codec;	p	TAG_OR_ELEMENT_ID
	f	Ljava/util/function/Function;	q	toOptionalLong
	f	Ljava/util/function/Function;	r	fromOptionalLong
	f	Lcom/mojang/serialization/Codec;	s	BIT_SET
	f	Lcom/mojang/serialization/Codec;	t	PROPERTY_MAP
	f	Lcom/mojang/serialization/Codec;	u	GAME_PROFILE
	f	Lcom/mojang/serialization/Codec;	v	NON_EMPTY_STRING
	f	Lcom/mojang/serialization/Codec;	w	CODEPOINT
	f	Lcom/mojang/serialization/Codec;	x	RESOURCE_PATH_CODEC
	f	Lcom/mojang/serialization/Codec;	y	PROPERTY
	f	Lcom/mojang/serialization/MapCodec;	z	GAME_PROFILE_WITHOUT_PROPERTIES
c	arf$1	net/minecraft/util/ExtraCodecs$1
	m	(Lorg/apache/commons/lang3/mutable/MutableObject;)Ljava/lang/String;	a	lambda$apply$0
	f	Ljava/lang/Object;	a	val$value
c	arf$2	net/minecraft/util/ExtraCodecs$2
	f	Lcom/mojang/serialization/Codec;	a	val$compressed
	f	Lcom/mojang/serialization/Codec;	b	val$normal
c	arf$3	net/minecraft/util/ExtraCodecs$3
	m	(Lcom/mojang/serialization/DataResult;Ljava/util/function/Function;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/serialization/DataResult;	a	lambda$apply$0
		p	2		pair
	f	Ljava/util/function/Function;	a	val$decodeLifecycle
	f	Ljava/util/function/Function;	b	val$encodeLifecycle
c	arf$4	net/minecraft/util/ExtraCodecs$4
	m	(Ljava/lang/Object;Ljava/lang/Exception;)Ljava/lang/String;	a	lambda$decode$0
	f	Lcom/mojang/serialization/Codec;	a	val$codec
c	arf$a	net/minecraft/util/ExtraCodecs$1ContextRetrievalCodec
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1		retriever
	f	Ljava/util/function/Function;	a	val$getter
c	arf$b	net/minecraft/util/ExtraCodecs$EitherCodec
	m	(Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		first
		p	2		second
	m	(Lcom/mojang/datafixers/util/Either;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	encode
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$decode$1
		p	0		pair
	m	(Lcom/mojang/datafixers/util/Pair;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$decode$2
		p	0		pair
		p	1		pair2
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	lambda$encode$4
		p	3		right
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	b	lambda$decode$0
		p	0		pair
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	b	lambda$encode$3
		p	3		left
	f	Lcom/mojang/serialization/Codec;	a	first
	f	Lcom/mojang/serialization/Codec;	b	second
c	arf$c	net/minecraft/util/ExtraCodecs$RecursiveCodec
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1		codecFunction
	m	(Ljava/util/function/Function;)Lcom/mojang/serialization/Codec;	a	lambda$new$0
	f	Ljava/util/function/Supplier;	a	wrapped
c	arf$d	net/minecraft/util/ExtraCodecs$StrictOptionalFieldCodec
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		field
		p	2		codec
	m	(Ljava/util/Optional;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/RecordBuilder;)Lcom/mojang/serialization/RecordBuilder;	a	encode
	f	Ljava/lang/String;	a	name
	f	Lcom/mojang/serialization/Codec;	b	elementCodec
c	arf$e	net/minecraft/util/ExtraCodecs$StrictUnboundedMapCodec
	m	(Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		keyCodec
		p	2		elementCodec
	m	()Ljava/lang/String;	a	lambda$decode$1
	m	(Lcom/mojang/serialization/DataResult;Lcom/mojang/serialization/DataResult;)Ljava/lang/String;	a	lambda$decode$0
	m	(Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/MapLike;)Lcom/mojang/serialization/DataResult;	a	lambda$decode$2
		p	2		map
	m	(Ljava/lang/Object;Ljava/util/Map;)Lcom/mojang/datafixers/util/Pair;	a	lambda$decode$3
		p	1		map
	m	(Ljava/util/Map;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	encode
	f	Lcom/mojang/serialization/Codec;	a	keyCodec
	f	Lcom/mojang/serialization/Codec;	b	elementCodec
c	arf$f	net/minecraft/util/ExtraCodecs$TagOrElementLocation
	m	()Laew;	a	id
	m	()Z	b	tag
	m	()Ljava/lang/String;	c	decoratedId
	f	Laew;	a	id
	f	Z	b	tag
c	arf$g	net/minecraft/util/ExtraCodecs$XorCodec
	m	(Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		first
		p	2		second
	m	()Lcom/mojang/serialization/Codec;	a	first
	m	(Lcom/mojang/datafixers/util/Either;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	encode
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$decode$1
		p	0		pair
	m	(Lcom/mojang/datafixers/util/Pair;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$decode$3
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	lambda$encode$5
		p	3		right
	m	(Ljava/util/Optional;Ljava/util/Optional;)Ljava/lang/String;	a	lambda$decode$2
	m	()Lcom/mojang/serialization/Codec;	b	second
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	b	lambda$decode$0
		p	0		pair
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	b	lambda$encode$4
		p	3		left
	f	Lcom/mojang/serialization/Codec;	a	first
	f	Lcom/mojang/serialization/Codec;	b	second
c	arg	net/minecraft/util/FastBufferedInputStream
	m	(Ljava/io/InputStream;)V	<init>	<init>
		p	1		stream
	m	(Ljava/io/InputStream;I)V	<init>	<init>
		p	1		stream
		p	2		size
	m	()I	a	bytesInBuffer
	m	()V	b	fill
	f	I	a	DEFAULT_BUFFER_SIZE
	f	Ljava/io/InputStream;	b	in
	f	[B	c	buffer
	f	I	d	limit
	f	I	e	position
c	arh	net/minecraft/util/FastColor
c	arh$a	net/minecraft/util/FastColor$ABGR32
	m	(I)I	a	alpha
		p	0		abgr
	m	(II)I	a	color
		p	0		alpha
		p	1		bgr
	m	(IIII)I	a	color
		p	0		a
		p	1		b
		p	2		g
		p	3		r
	m	(I)I	b	red
		p	0		abgr
	m	(I)I	c	green
		p	0		abgr
	m	(I)I	d	blue
		p	0		abgr
	m	(I)I	e	transparent
		p	0		abgr
	m	(I)I	f	opaque
		p	0		abgr
c	arh$b	net/minecraft/util/FastColor$ARGB32
	m	(FII)I	a	lerp
		p	0		delta
		p	1		start
		p	2		end
	m	(I)I	a	alpha
		p	0		argb
	m	(II)I	a	multiply
		p	0		first
		p	1		second
	m	(IIII)I	a	color
		p	0		alpha
		p	1		red
		p	2		green
		p	3		blue
	m	(I)I	b	red
		p	0		argb
	m	(I)I	c	green
		p	0		argb
	m	(I)I	d	blue
		p	0		argb
c	ari	net/minecraft/util/FileZipper
	m	(Ljava/nio/file/Path;)V	<init>	<init>
		p	1		file
	m	(Ljava/nio/file/Path;)V	a	add
		p	1		source
	m	(Ljava/nio/file/Path;Ljava/io/File;)V	a	add
		p	1		target
		p	2		source
	m	(Ljava/nio/file/Path;Ljava/lang/String;)V	a	add
		p	1		target
		p	2		content
	m	(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Z	a	lambda$add$0
		p	0		path
		p	1		attributes
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/nio/file/Path;	b	outputFile
	f	Ljava/nio/file/Path;	c	tempFile
	f	Ljava/nio/file/FileSystem;	d	fs
c	arj	net/minecraft/util/FormattedCharSequence
	m	(Larj;Larj;Lark;)Z	a	lambda$fromPair$7
		p	2		visitor
	m	(Lark;)Z	a	lambda$static$0
		p	0		visitor
	m	(Lark;Lit/unimi/dsi/fastutil/ints/Int2IntFunction;ILuh;I)Z	a	lambda$decorateOutput$6
		p	2		charIndex
		p	3		style
		p	4		charPoint
	m	(Ljava/lang/String;Luh;Lark;)Z	a	lambda$backward$4
		p	2		visitor
	m	(Ljava/lang/String;Luh;Lit/unimi/dsi/fastutil/ints/Int2IntFunction;Lark;)Z	a	lambda$backward$5
		p	3		visitor
	m	(Ljava/util/List;Lark;)Z	a	lambda$fromList$8
		p	1		visitor
	m	(Luh;ILark;)Z	a	lambda$codepoint$1
		p	2		visitor
	m	(Lark;)Z	accept	accept
		p	1		visitor
	m	(Ljava/lang/String;Luh;Lark;)Z	b	lambda$forward$2
		p	2		visitor
	m	(Ljava/lang/String;Luh;Lit/unimi/dsi/fastutil/ints/Int2IntFunction;Lark;)Z	b	lambda$forward$3
		p	3		visitor
	m	(Ljava/lang/String;Luh;)Larj;	backward	backward
		p	0		string
		p	1		style
	m	(Ljava/lang/String;Luh;Lit/unimi/dsi/fastutil/ints/Int2IntFunction;)Larj;	backward	backward
		p	0		string
		p	1		style
		p	2		codePointMapper
	m	(ILuh;)Larj;	codepoint	codepoint
		p	0		codePoint
		p	1		style
	m	(Larj;)Larj;	composite	composite
		p	0		text
	m	(Larj;Larj;)Larj;	composite	composite
		p	0		first
		p	1		second
	m	(Ljava/util/List;)Larj;	composite	composite
		p	0		texts
	m	([Larj;)Larj;	composite	composite
		p	0		texts
	m	(Lark;Lit/unimi/dsi/fastutil/ints/Int2IntFunction;)Lark;	decorateOutput	decorateOutput
		p	0		visitor
		p	1		codePointMapper
	m	(Ljava/lang/String;Luh;)Larj;	forward	forward
		p	0		string
		p	1		style
	m	(Ljava/lang/String;Luh;Lit/unimi/dsi/fastutil/ints/Int2IntFunction;)Larj;	forward	forward
		p	0		string
		p	1		style
		p	2		codePointMapper
	m	(Ljava/util/List;)Larj;	fromList	fromList
		p	0		texts
	m	(Larj;Larj;)Larj;	fromPair	fromPair
		p	0		text1
		p	1		text2
	f	Larj;	a	EMPTY
c	ark	net/minecraft/util/FormattedCharSink
	m	(ILuh;I)Z	accept	accept
		p	1		index
		p	2		style
		p	3		codePoint
c	arl	net/minecraft/util/FutureChain
	m	(Ljava/util/concurrent/Executor;)V	<init>	<init>
		p	1		executor
	m	(Lasr$a;Ljava/lang/Object;)Ljava/util/concurrent/CompletionStage;	a	lambda$append$1
		p	2		object
	m	(Ljava/lang/Throwable;)Ljava/lang/Object;	a	lambda$append$2
		p	0		throwable
	m	(Ljava/util/concurrent/Executor;Ljava/lang/Runnable;)V	a	lambda$new$0
		p	2		runnable
	m	(Lasr$a;)V	append	append
		p	1		future
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ljava/util/concurrent/CompletableFuture;	c	head
	f	Ljava/util/concurrent/Executor;	d	checkedExecutor
	f	Z	e	closed
c	arm	net/minecraft/util/Graph
	m	(Ljava/util/Map;Ljava/util/Set;Ljava/util/Set;Ljava/util/function/Consumer;Ljava/lang/Object;)Z	a	depthFirstSearch
		p	0		successors
		p	1		visited
		p	2		visiting
		p	3		reversedOrderConsumer
		p	4		now
c	arn	net/minecraft/util/GsonHelper
	m	(Lcom/google/gson/Gson;Ljava/io/Reader;Lcom/google/gson/reflect/TypeToken;)Ljava/lang/Object;	a	fromJson
		p	0		gson
		p	1		reader
		p	2		typeToken
	m	(Lcom/google/gson/Gson;Ljava/io/Reader;Lcom/google/gson/reflect/TypeToken;Z)Ljava/lang/Object;	a	fromNullableJson
		p	0		gson
		p	1		reader
		p	2		typeToken
		p	3		lenient
	m	(Lcom/google/gson/Gson;Ljava/io/Reader;Ljava/lang/Class;)Ljava/lang/Object;	a	fromJson
		p	0		gson
		p	1		reader
		p	2		type
	m	(Lcom/google/gson/Gson;Ljava/io/Reader;Ljava/lang/Class;Z)Ljava/lang/Object;	a	fromNullableJson
		p	0		gson
		p	1		reader
		p	2		type
		p	3		lenient
	m	(Lcom/google/gson/Gson;Ljava/lang/String;Lcom/google/gson/reflect/TypeToken;)Ljava/lang/Object;	a	fromNullableJson
		p	0		gson
		p	1		content
		p	2		typeToken
	m	(Lcom/google/gson/Gson;Ljava/lang/String;Lcom/google/gson/reflect/TypeToken;Z)Ljava/lang/Object;	a	fromNullableJson
		p	0		gson
		p	1		content
		p	2		typeToken
		p	3		lenient
	m	(Lcom/google/gson/Gson;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;	a	fromJson
		p	0		gson
		p	1		content
		p	2		type
	m	(Lcom/google/gson/Gson;Ljava/lang/String;Ljava/lang/Class;Z)Ljava/lang/Object;	a	fromJson
		p	0		gson
		p	1		content
		p	2		type
		p	3		lenient
	m	(Lcom/google/gson/JsonElement;)Z	a	isStringValue
		p	0		element
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)Ljava/lang/String;	a	convertToString
		p	0		element
		p	1		name
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;Lcom/google/gson/JsonDeserializationContext;Ljava/lang/Class;)Ljava/lang/Object;	a	convertToObject
		p	0		element
		p	1		name
		p	2		context
		p	3		type
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Z	a	isStringValue
		p	0		object
		p	1		element
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;B)B	a	getAsByte
		p	0		object
		p	1		element
		p	2		defaultByte
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;C)C	a	getAsCharacter
		p	0		object
		p	1		element
		p	2		defaultChar
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;D)D	a	getAsDouble
		p	0		object
		p	1		element
		p	2		defaultDouble
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;F)F	a	getAsFloat
		p	0		object
		p	1		element
		p	2		defaultFloat
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;I)I	a	getAsInt
		p	0		object
		p	1		element
		p	2		defaultInt
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;J)J	a	getAsLong
		p	0		object
		p	1		element
		p	2		defaultLong
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Lcom/google/gson/JsonArray;)Lcom/google/gson/JsonArray;	a	getAsJsonArray
		p	0		object
		p	1		name
		p	2		defaultArray
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Lcom/google/gson/JsonDeserializationContext;Ljava/lang/Class;)Ljava/lang/Object;	a	getAsObject
		p	0		object
		p	1		element
		p	2		context
		p	3		type
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Lcom/google/gson/JsonObject;)Lcom/google/gson/JsonObject;	a	getAsJsonObject
		p	0		object
		p	1		element
		p	2		defaultObject
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Lhe;)Lhe;	a	getAsItem
		p	0		object
		p	1		key
		p	2		defaultValue
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/Object;Lcom/google/gson/JsonDeserializationContext;Ljava/lang/Class;)Ljava/lang/Object;	a	getAsObject
		p	0		object
		p	1		element
		p	2		defaultValue
		p	3		context
		p	4		type
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	a	getAsString
		p	0		object
		p	1		element
		p	2		defaultStr
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/math/BigDecimal;)Ljava/math/BigDecimal;	a	getAsBigDecimal
		p	0		object
		p	1		element
		p	2		defaultBigDecimal
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/math/BigInteger;)Ljava/math/BigInteger;	a	getAsBigInteger
		p	0		object
		p	1		element
		p	2		defaultBigInteger
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;S)S	a	getAsShort
		p	0		object
		p	1		element
		p	2		defaultShort
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Z)Z	a	getAsBoolean
		p	0		object
		p	1		element
		p	2		defaultBoolean
	m	(Lcom/google/gson/stream/JsonWriter;Lcom/google/gson/JsonElement;Ljava/util/Comparator;)V	a	writeValue
		p	0		writer
		p	1		json
		p	2		comparator
	m	(Ljava/io/Reader;)Lcom/google/gson/JsonObject;	a	parse
		p	0		reader
	m	(Ljava/io/Reader;Z)Lcom/google/gson/JsonObject;	a	parse
		p	0		reader
		p	1		lenient
	m	(Ljava/lang/String;)Lcom/google/gson/JsonObject;	a	parse
		p	0		content
	m	(Ljava/lang/String;Ljava/lang/String;)Lcom/google/gson/JsonSyntaxException;	a	lambda$convertToItem$0
	m	(Ljava/lang/String;Z)Lcom/google/gson/JsonObject;	a	parse
		p	0		content
		p	1		lenient
	m	(Ljava/util/Collection;Ljava/util/Comparator;)Ljava/util/Collection;	a	sortByKeyIfNeeded
		p	0		entries
		p	1		comparator
	m	(Lcom/google/gson/Gson;Ljava/io/Reader;Lcom/google/gson/reflect/TypeToken;Z)Ljava/lang/Object;	b	fromJson
		p	0		gson
		p	1		reader
		p	2		typeToken
		p	3		lenient
	m	(Lcom/google/gson/Gson;Ljava/io/Reader;Ljava/lang/Class;Z)Ljava/lang/Object;	b	fromJson
		p	0		gson
		p	1		reader
		p	2		type
		p	3		lenient
	m	(Lcom/google/gson/Gson;Ljava/lang/String;Ljava/lang/Class;Z)Ljava/lang/Object;	b	fromNullableJson
		p	0		gson
		p	1		content
		p	2		type
		p	3		lenient
	m	(Lcom/google/gson/JsonElement;)Z	b	isNumberValue
		p	0		element
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)Lhe;	b	convertToItem
		p	0		element
		p	1		name
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Z	b	isNumberValue
		p	0		object
		p	1		element
	m	(Ljava/io/Reader;)Lcom/google/gson/JsonArray;	b	parseArray
		p	0		reader
	m	(Ljava/lang/String;)Lcom/google/gson/JsonArray;	b	parseArray
		p	0		content
	m	(Lcom/google/gson/JsonElement;)Z	c	isBooleanValue
		p	0		object
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)Z	c	convertToBoolean
		p	0		element
		p	1		name
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Z	c	isBooleanValue
		p	0		object
		p	1		element
	m	(Lcom/google/gson/JsonElement;)Ljava/lang/String;	d	getType
		p	0		element
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)D	d	convertToDouble
		p	0		object
		p	1		name
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Z	d	isArrayNode
		p	0		object
		p	1		element
	m	(Lcom/google/gson/JsonElement;)Ljava/lang/String;	e	toStableString
		p	0		json
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)F	e	convertToFloat
		p	0		element
		p	1		name
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Z	e	isObjectNode
		p	0		object
		p	1		element
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)J	f	convertToLong
		p	0		element
		p	1		name
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Z	f	isValidPrimitive
		p	0		object
		p	1		element
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)I	g	convertToInt
		p	0		element
		p	1		name
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Z	g	isValidNode
		p	0		object
		p	1		element
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)B	h	convertToByte
		p	0		element
		p	1		name
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Lcom/google/gson/JsonElement;	h	getNonNull
		p	0		object
		p	1		name
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)C	i	convertToCharacter
		p	0		element
		p	1		name
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/lang/String;	i	getAsString
		p	0		object
		p	1		element
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)Ljava/math/BigDecimal;	j	convertToBigDecimal
		p	0		element
		p	1		name
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Lhe;	j	getAsItem
		p	0		object
		p	1		key
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)Ljava/math/BigInteger;	k	convertToBigInteger
		p	0		element
		p	1		name
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Z	k	getAsBoolean
		p	0		object
		p	1		element
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)S	l	convertToShort
		p	0		element
		p	1		name
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)D	l	getAsDouble
		p	0		object
		p	1		element
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)Lcom/google/gson/JsonObject;	m	convertToJsonObject
		p	0		element
		p	1		name
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)F	m	getAsFloat
		p	0		object
		p	1		element
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)Lcom/google/gson/JsonArray;	n	convertToJsonArray
		p	0		element
		p	1		name
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)J	n	getAsLong
		p	0		object
		p	1		name
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)I	o	getAsInt
		p	0		object
		p	1		element
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)B	p	getAsByte
		p	0		object
		p	1		element
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)C	q	getAsCharacter
		p	0		object
		p	1		element
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/math/BigDecimal;	r	getAsBigDecimal
		p	0		object
		p	1		element
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/math/BigInteger;	s	getAsBigInteger
		p	0		object
		p	1		element
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)S	t	getAsShort
		p	0		object
		p	1		element
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Lcom/google/gson/JsonObject;	u	getAsJsonObject
		p	0		object
		p	1		element
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Lcom/google/gson/JsonArray;	v	getAsJsonArray
		p	0		object
		p	1		element
	f	Lcom/google/gson/Gson;	a	GSON
c	aro	net/minecraft/util/HttpUtil
	m	()I	a	getAvailablePort
	m	(I)Z	a	isPortAvailable
		p	0		port
	m	(Lasb;Ljava/net/URL;Ljava/net/Proxy;Ljava/util/Map;Ljava/io/File;I)Ljava/lang/Object;	a	lambda$downloadTo$0
	m	(Ljava/io/File;Ljava/net/URL;Ljava/util/Map;ILasb;Ljava/net/Proxy;)Ljava/util/concurrent/CompletableFuture;	a	downloadTo
		p	0		file
		p	1		url
		p	2		headers
		p	3		maxFileSize
		p	4		progressListener
		p	5		proxy
	f	Lcom/google/common/util/concurrent/ListeningExecutorService;	a	DOWNLOAD_EXECUTOR
	f	Lorg/slf4j/Logger;	b	LOGGER
c	arp	net/minecraft/util/InclusiveRange
	m	(Ljava/lang/Comparable;)V	<init>	<init>
		p	1		value
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;)V	<init>	<init>
		p	1		minInclusive
		p	2		maxInclusive
	m	()Ljava/lang/Comparable;	a	minInclusive
	m	(Larp;)Z	a	contains
		p	1		other
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	codec
		p	0		elementCodec
	m	(Lcom/mojang/serialization/Codec;Ljava/lang/Comparable;Ljava/lang/Comparable;)Lcom/mojang/serialization/Codec;	a	codec
		p	0		codec
		p	1		minInclusive
		p	2		maxInclusive
	m	(Ljava/lang/Comparable;)Z	a	isValueInRange
		p	1		value
	m	(Ljava/lang/Comparable;Larp;)Ljava/lang/String;	a	lambda$codec$1
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;)Lcom/mojang/serialization/DataResult;	a	create
		p	0		minInclusive
		p	1		maxInclusive
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Larp;)Lcom/mojang/serialization/DataResult;	a	lambda$codec$2
		p	2		range
	m	()Ljava/lang/Comparable;	b	maxInclusive
	m	(Ljava/lang/Comparable;Larp;)Ljava/lang/String;	b	lambda$codec$0
	m	()Ljava/lang/String;	c	lambda$create$3
	f	Lcom/mojang/serialization/Codec;	a	INT
	f	Ljava/lang/Comparable;	b	minInclusive
	f	Ljava/lang/Comparable;	c	maxInclusive
c	arq	net/minecraft/util/KeyDispatchDataCodec
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Lcom/mojang/serialization/Codec;)Larq;	a	of
		p	0		codec
	m	(Lcom/mojang/serialization/MapCodec;)Larq;	a	of
		p	0		mapCodec
	f	Lcom/mojang/serialization/Codec;	a	codec
c	arr	net/minecraft/util/LazyLoadedValue
	m	(Ljava/util/function/Supplier;)V	<init>	<init>
		p	1		delegate
	m	()Ljava/lang/Object;	a	get
	f	Ljava/util/function/Supplier;	a	factory
c	ars	net/minecraft/util/LinearCongruentialGenerator
	m	(JJ)J	a	next
		p	0		seed
		p	2		salt
	f	J	a	MULTIPLIER
	f	J	b	INCREMENT
c	art	net/minecraft/util/LowerCaseEnumTypeAdapterFactory
	m	(Ljava/lang/Object;)Ljava/lang/String;	a	toLowercase
		p	1		o
c	art$1	net/minecraft/util/LowerCaseEnumTypeAdapterFactory$1
	f	Ljava/util/Map;	a	val$lowercaseToConstant
	f	Lart;	b	this$0
c	aru	net/minecraft/util/MemoryReserve
	m	()V	a	allocate
	m	()V	b	release
	f	[B	a	reserve
c	arv	net/minecraft/util/ModCheck
	m	()Z	a	shouldReportAsModified
	m	(Larv;)Larv;	a	merge
		p	1		brand
	m	(Ljava/lang/String;Ljava/util/function/Supplier;Ljava/lang/String;Ljava/lang/Class;)Larv;	a	identify
		p	0		vanillaBrand
		p	1		brandSupplier
		p	2		environment
		p	3		clazz
	m	()Ljava/lang/String;	b	fullDescription
	m	()Larv$a;	c	confidence
	m	()Ljava/lang/String;	d	description
	f	Larv$a;	a	confidence
	f	Ljava/lang/String;	b	description
c	arv$a	net/minecraft/util/ModCheck$Confidence
	m	(Ljava/lang/String;ILjava/lang/String;Z)V	<init>	<init>
		p	3		description
		p	4		modded
	m	()[Larv$a;	a	$values
	f	Larv$a;	a	PROBABLY_NOT
	f	Larv$a;	b	VERY_LIKELY
	f	Larv$a;	c	DEFINITELY
	f	Ljava/lang/String;	d	description
	f	Z	e	shouldReportAsModified
	f	[Larv$a;	f	$VALUES
c	arw	net/minecraft/util/Mth
	m	()Ljava/util/UUID;	a	createInsecureUUID
	m	(D)I	a	floor
		p	0		value
	m	(DD)D	a	absMax
		p	0		a
		p	2		b
	m	(DDD)D	a	clamp
		p	0		value
		p	2		min
		p	4		max
	m	(DDDDD)D	a	clampedMap
		p	0		value
		p	2		oldStart
		p	4		oldEnd
		p	6		newStart
		p	8		newEnd
	m	(DDDDDD)D	a	lerp2
		p	0		deltaX
		p	2		deltaY
		p	4		x0y0
		p	6		x1y0
		p	8		x0y1
		p	10		x1y1
	m	(DDDDDDDDDDD)D	a	lerp3
		p	0		deltaX
		p	2		deltaY
		p	4		deltaZ
		p	6		x0y0z0
		p	8		x1y0z0
		p	10		x0y1z0
		p	12		x1y1z0
		p	14		x0y0z1
		p	16		x1y0z1
		p	18		x0y1z1
		p	20		x1y1z1
	m	(DI)I	a	quantize
		p	0		a
		p	2		b
	m	(F)F	a	sin
		p	0		value
	m	(FF)Z	a	equal
		p	0		a
		p	1		b
	m	(FFF)F	a	clamp
		p	0		value
		p	1		min
		p	2		max
	m	(FFFFF)F	a	catmullrom
		p	0		delta
		p	1		p0
		p	2		p1
		p	3		p2
		p	4		p3
	m	(FII)I	a	lerpInt
		p	0		delta
		p	1		start
		p	2		end
	m	(I)I	a	abs
		p	0		value
	m	(II)I	a	floorDiv
		p	0		dividend
		p	1		divisor
	m	(III)I	a	clamp
		p	0		value
		p	1		min
		p	2		max
	m	(IIII)Ljava/util/stream/IntStream;	a	outFromOrigin
		p	0		seed
		p	1		lowerBound
		p	2		upperBound
		p	3		steps
	m	(IIIII)I	a	lambda$outFromOrigin$2
		p	4		i
	m	(IILjava/util/function/IntPredicate;)I	a	binarySearch
		p	0		min
		p	1		max
		p	2		predicate
	m	(J)J	a	square
		p	0		n
	m	(JJJ)J	a	clamp
		p	0		value
		p	2		min
		p	4		max
	m	(Lasc;)Ljava/util/UUID;	a	createInsecureUUID
		p	0		random
	m	(Lasc;DD)D	a	nextDouble
		p	0		random
		p	1		min
		p	3		max
	m	(Lasc;FF)F	a	nextFloat
		p	0		random
		p	1		min
		p	2		max
	m	(Lasc;II)I	a	nextInt
		p	0		random
		p	1		min
		p	2		max
	m	(Lehn;Lehn;Lehi;)Z	a	rayIntersectsAABB
		p	0		origin
		p	1		direction
		p	2		box
	m	(Lhy;)J	a	getSeed
		p	0		vec
	m	(Ljava/lang/String;I)I	a	getInt
		p	0		string
		p	1		fallback
	m	([F)V	a	lambda$static$0
		p	0		sineTable
	m	(D)J	b	lfloor
		p	0		value
	m	(DD)Z	b	equal
		p	0		a
		p	2		b
	m	(DDD)D	b	clampedLerp
		p	0		start
		p	2		end
		p	4		delta
	m	(DDDDD)D	b	map
		p	0		value
		p	2		oldStart
		p	4		oldEnd
		p	6		newStart
		p	8		newEnd
	m	(F)F	b	cos
		p	0		value
	m	(FF)F	b	positiveModulo
		p	0		dividend
		p	1		divisor
	m	(FFF)F	b	clampedLerp
		p	0		start
		p	1		end
		p	2		delta
	m	(FFFFF)F	b	clampedMap
		p	0		value
		p	1		oldStart
		p	2		oldEnd
		p	3		newStart
		p	4		newEnd
	m	(FII)I	b	lerpDiscrete
		p	0		delta
		p	1		start
		p	2		end
	m	(I)I	b	wrapDegrees
		p	0		degrees
	m	(II)I	b	positiveModulo
		p	0		dividend
		p	1		divisor
	m	(III)J	b	getSeed
		p	0		x
		p	1		y
		p	2		z
	m	(IIII)Z	b	lambda$outFromOrigin$1
		p	3		i
	m	(Lasc;FF)F	b	randomBetween
		p	0		random
		p	1		min
		p	2		max
	m	(Lasc;II)I	b	randomBetweenInclusive
		p	0		random
		p	1		min
		p	2		max
	m	(D)I	c	ceil
		p	0		value
	m	(DD)D	c	positiveModulo
		p	0		dividend
		p	2		divisor
	m	(DDD)D	c	inverseLerp
		p	0		value
		p	2		start
		p	4		end
	m	(F)F	c	sqrt
		p	0		value
	m	(FF)F	c	degreesDifference
		p	0		start
		p	1		end
	m	(FFF)F	c	rotateIfNecessary
		p	0		value
		p	1		mean
		p	2		delta
	m	(FFFFF)F	c	map
		p	0		value
		p	1		oldStart
		p	2		oldEnd
		p	3		newStart
		p	4		newEnd
	m	(I)I	c	smallestEncompassingPowerOfTwo
		p	0		value
	m	(II)Z	c	isMultipleOf
		p	0		a
		p	1		b
	m	(III)Ljava/util/stream/IntStream;	c	outFromOrigin
		p	0		seed
		p	1		lowerBound
		p	2		upperBound
	m	(Lasc;FF)F	c	normal
		p	0		random
		p	1		mean
		p	2		deviation
	m	(D)D	d	wrapDegrees
		p	0		degrees
	m	(DD)D	d	atan2
		p	0		y
		p	2		x
	m	(DDD)D	d	lerp
		p	0		delta
		p	2		start
		p	4		end
	m	(F)I	d	floor
		p	0		value
	m	(FF)F	d	degreesDifferenceAbs
		p	0		first
		p	1		second
	m	(FFF)F	d	approach
		p	0		from
		p	1		to
		p	2		step
	m	(I)Z	d	isPowerOfTwo
		p	0		value
	m	(II)I	d	roundToward
		p	0		value
		p	1		divisor
	m	(D)D	e	frac
		p	0		value
	m	(DD)D	e	lengthSquared
		p	0		a
		p	2		b
	m	(DDD)D	e	rotLerp
		p	0		delta
		p	2		start
		p	4		end
	m	(F)F	e	abs
		p	0		value
	m	(FF)F	e	triangleWave
		p	0		value
		p	1		maxDeviation
	m	(FFF)F	e	approachDegrees
		p	0		from
		p	1		to
		p	2		step
	m	(I)I	e	ceillog2
		p	0		value
	m	(II)I	e	positiveCeilDiv
		p	0		a
		p	1		b
	m	(D)D	f	invSqrt
		p	0		x
	m	(DD)D	f	length
		p	0		a
		p	2		b
	m	(DDD)D	f	lengthSquared
		p	0		a
		p	2		b
		p	4		c
	m	(F)I	f	ceil
		p	0		value
	m	(FFF)I	f	color
		p	0		r
		p	1		g
		p	2		b
	m	(I)I	f	log2
		p	0		value
	m	(D)D	g	fastInvSqrt
		p	0		x
	m	(DDD)D	g	length
		p	0		a
		p	2		b
		p	4		c
	m	(F)F	g	wrapDegrees
		p	0		degrees
	m	(FFF)F	g	inverseLerp
		p	0		value
		p	1		start
		p	2		end
	m	(I)I	g	murmurHash3Mixer
		p	0		value
	m	(D)D	h	smoothstep
		p	0		value
	m	(F)F	h	frac
		p	0		value
	m	(FFF)I	h	hsvToRgb
		p	0		hue
		p	1		saturation
		p	2		value
	m	(I)I	h	square
		p	0		n
	m	(D)D	i	smoothstepDerivative
		p	0		value
	m	(F)F	i	invSqrt
		p	0		x
	m	(FFF)F	i	lerp
		p	0		delta
		p	1		start
		p	2		end
	m	(D)I	j	sign
		p	0		value
	m	(F)F	j	fastInvCubeRoot
		p	0		x
	m	(FFF)F	j	rotLerp
		p	0		delta
		p	1		start
		p	2		end
	m	(D)D	k	square
		p	0		n
	m	(F)F	k	square
		p	0		n
	m	(D)D	l	wobble
	f	F	a	PI
	f	F	b	HALF_PI
	f	F	c	TWO_PI
	f	F	d	DEG_TO_RAD
	f	F	e	RAD_TO_DEG
	f	F	f	EPSILON
	f	F	g	SQRT_OF_TWO
	f	J	h	UUID_VERSION
	f	J	i	UUID_VERSION_TYPE_4
	f	J	j	UUID_VARIANT
	f	J	k	UUID_VARIANT_2
	f	F	l	SIN_SCALE
	f	[F	m	SIN
	f	Lasc;	n	RANDOM
	f	[I	o	MULTIPLY_DE_BRUIJN_BIT_POSITION
	f	D	p	ONE_SIXTH
	f	I	q	FRAC_EXP
	f	I	r	LUT_SIZE
	f	D	s	FRAC_BIAS
	f	[D	t	ASIN_TAB
	f	[D	u	COS_TAB
c	arx	net/minecraft/util/NativeModuleLister
	m	()Ljava/util/List;	a	listModules
	m	(Larx$a;)Ljava/lang/String;	a	lambda$addCrashSection$1
		p	0		moduleName
	m	(Lcom/sun/jna/Pointer;Ljava/lang/String;Lcom/sun/jna/ptr/IntByReference;)Lcom/sun/jna/Pointer;	a	queryVersionValue
		p	0		pointer
		p	1		path
		p	2		lengthPointer
	m	(Ljava/lang/String;)Ljava/util/Optional;	a	tryGetVersion
		p	0		path
	m	(Ljava/lang/String;II)Ljava/lang/String;	a	langTableKey
		p	0		key
		p	1		languageId
		p	2		codePage
	m	(Lp;)V	a	addCrashSection
		p	0		section
	m	([I)Ljava/util/OptionalInt;	a	findLangAndCodepage
		p	0		indices
	m	()Ljava/lang/String;	b	lambda$addCrashSection$2
	m	(Larx$a;)Ljava/lang/String;	b	lambda$addCrashSection$0
		p	0		module
	m	(Lcom/sun/jna/Pointer;Ljava/lang/String;Lcom/sun/jna/ptr/IntByReference;)Ljava/lang/String;	b	queryVersionString
		p	0		pointer
		p	1		path
		p	2		lengthPointer
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	I	b	LANG_MASK
	f	I	c	DEFAULT_LANG
	f	I	d	CODEPAGE_MASK
	f	I	e	DEFAULT_CODEPAGE
c	arx$a	net/minecraft/util/NativeModuleLister$NativeModuleInfo
	m	(Ljava/lang/String;Ljava/util/Optional;)V	<init>	<init>
		p	1		path
		p	2		info
	m	(Larx$b;)Ljava/lang/String;	a	lambda$toString$0
		p	1		info
	f	Ljava/lang/String;	a	name
	f	Ljava/util/Optional;	b	version
c	arx$b	net/minecraft/util/NativeModuleLister$NativeModuleVersion
	m	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V	<init>	<init>
		p	1		fileDescription
		p	2		fileVersion
		p	3		companyName
	f	Ljava/lang/String;	a	description
	f	Ljava/lang/String;	b	version
	f	Ljava/lang/String;	c	company
c	ary	net/minecraft/util/OptionEnum
	m	()I	a	getId
	m	()Ljava/lang/String;	b	getKey
	m	()Ltl;	d	getCaption
c	arz	net/minecraft/util/ParticleUtils
	m	(Lasc;)Lehn;	a	getRandomSpeedRanges
		p	0		random
	m	(Lcpv;)Lehn;	a	lambda$spawnParticlesOnBlockFaces$0
	m	(Lcpv;Lgw;Lasc;Lit;)V	a	spawnParticleBelow
		p	0		world
		p	1		pos
		p	2		random
		p	3		effect
	m	(Lcpv;Lgw;Lha;Lit;Lehn;D)V	a	spawnParticleOnFace
		p	0		world
		p	1		pos
		p	2		direction
		p	3		effect
		p	4		velocity
		p	5		offsetMultiplier
	m	(Lcpv;Lgw;Lit;Lbgd;)V	a	spawnParticlesOnBlockFaces
		p	0		world
		p	1		pos
		p	2		effect
		p	3		count
	m	(Lcpv;Lgw;Lit;Lbgd;Lha;Ljava/util/function/Supplier;D)V	a	spawnParticlesOnBlockFace
		p	0		world
		p	1		pos
		p	2		effect
		p	3		count
		p	4		direction
		p	5		velocity
		p	6		offsetMultiplier
	m	(Lha$a;Lcpv;Lgw;DLit;Lbgj;)V	a	spawnParticlesAlongAxis
		p	0		axis
		p	1		world
		p	2		pos
		p	3		variance
		p	5		effect
		p	6		range
c	asa	net/minecraft/util/PngInfo
	m	()I	a	width
	m	(Ljava/io/InputStream;)Lasa;	a	fromStream
		p	0		stream
	m	([B)Lasa;	a	fromBytes
		p	0		bytes
	m	()I	b	height
	f	I	a	width
	f	I	b	height
	f	J	c	PNG_HEADER
	f	I	d	IHDR_TYPE
	f	I	e	IHDR_SIZE
c	asb	net/minecraft/util/ProgressListener
	m	()V	a	stop
	m	(I)V	a	progressStagePercentage
		p	1		percentage
	m	(Ltl;)V	a	progressStartNoAbort
		p	1		title
	m	(Ltl;)V	b	progressStart
		p	1		title
	m	(Ltl;)V	c	progressStage
		p	1		task
c	asc	net/minecraft/util/RandomSource
	m	()Lasc;	a	create
	m	(DD)D	a	triangle
		p	1		mode
		p	3		deviation
	m	(I)I	a	nextInt
		p	1		bound
	m	(II)I	a	nextIntBetweenInclusive
		p	1		min
		p	2		max
	m	(J)Lasc;	a	create
		p	0		seed
	m	()Lasc;	b	createThreadSafe
	m	(I)V	b	consumeCount
		p	1		count
	m	(II)I	b	nextInt
		p	1		min
		p	2		max
	m	(J)V	b	setSeed
		p	1		seed
	m	()Lasc;	c	createNewThreadLocalInstance
	m	()Lasc;	d	fork
	m	()Ldlf;	e	forkPositional
	m	()I	f	nextInt
	m	()J	g	nextLong
	m	()Z	h	nextBoolean
	m	()F	i	nextFloat
	m	()D	j	nextDouble
	m	()D	k	nextGaussian
	f	D	a	GAUSSIAN_SPREAD_FACTOR
c	asd	net/minecraft/util/ResourceLocationPattern
	m	(Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
		p	1		namespace
		p	2		path
	m	()Ljava/util/function/Predicate;	a	namespacePredicate
	m	(Laew;)Z	a	lambda$new$5
		p	1		id
	m	(Lasd;)Ljava/util/Optional;	a	lambda$static$1
		p	0		entry
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Ljava/lang/String;)Z	a	lambda$new$4
		p	0		path_
	m	()Ljava/util/function/Predicate;	b	pathPredicate
	m	(Lasd;)Ljava/util/Optional;	b	lambda$static$0
		p	0		entry
	m	(Ljava/lang/String;)Z	b	lambda$new$3
		p	0		namespace_
	m	()Ljava/util/function/Predicate;	c	locationPredicate
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Optional;	b	namespacePattern
	f	Ljava/util/function/Predicate;	c	namespacePredicate
	f	Ljava/util/Optional;	d	pathPattern
	f	Ljava/util/function/Predicate;	e	pathPredicate
	f	Ljava/util/function/Predicate;	f	locationPredicate
c	ase	net/minecraft/util/SampleLogger
	m	()I	a	capacity
	m	(I)J	a	get
		p	1		index
	m	(J)V	a	logSample
		p	1		value
	m	()I	b	size
	m	(I)I	b	wrapIndex
		p	1		index
	m	()V	c	reset
	f	I	a	CAPACITY
	f	[J	b	samples
	f	I	c	start
	f	I	d	size
c	asf	net/minecraft/util/SegmentedAnglePrecision
	m	(I)V	<init>	<init>
		p	1		precision
	m	()I	a	getMask
	m	(F)I	a	fromDegreesWithTurns
		p	1		degrees
	m	(I)F	a	toDegreesWithTurns
		p	1		rotation
	m	(II)Z	a	isSameAxis
		p	1		alpha
		p	2		beta
	m	(Lha;)I	a	fromDirection
		p	1		direction
	m	(F)I	b	fromDegrees
		p	1		degrees
	m	(I)F	b	toDegrees
		p	1		rotation
	m	(I)I	c	normalize
		p	1		rotationBits
	f	I	a	mask
	f	I	b	precision
	f	F	c	degreeToAngle
	f	F	d	angleToDegree
c	asg	net/minecraft/util/SignatureUpdater
	m	(Lasg$a;)V	update	update
		p	1		updater
c	asg$a	net/minecraft/util/SignatureUpdater$Output
	m	([B)V	update	update
		p	1		data
c	ash	net/minecraft/util/SignatureValidator
	m	(Lasg;[B)Z	a	lambda$static$0
		p	0		updatable
		p	1		signatureData
	m	(Lasg;[BLcom/mojang/authlib/yggdrasil/ServicesKeyInfo;)Z	a	lambda$from$3
		p	2		keyInfo
	m	(Lasg;[BLjava/security/Signature;)Z	a	verifySignature
		p	0		updatable
		p	1		signatureData
		p	2		signature
	m	(Lcom/mojang/authlib/yggdrasil/ServicesKeySet;Lcom/mojang/authlib/yggdrasil/ServicesKeyType;)Lash;	a	from
		p	0		servicesKeySet
		p	1		servicesKeyType
	m	(Ljava/lang/String;Ljava/security/PublicKey;Lasg;[B)Z	a	lambda$from$2
		p	2		updatable
		p	3		signatureData
	m	(Ljava/security/PublicKey;Ljava/lang/String;)Lash;	a	from
		p	0		publicKey
		p	1		algorithm
	m	(Ljava/util/Collection;Lasg;[B)Z	a	lambda$from$4
		p	1		updatable
		p	2		signatureData
	m	([BLasg$a;)V	a	lambda$validate$1
		p	1		updater
	m	([B[B)Z	a	validate
		p	1		signedData
		p	2		signatureData
	m	(Lasg;[B)Z	validate	validate
		p	1		updatable
		p	2		signatureData
	f	Lash;	a	NO_VALIDATION
	f	Lorg/slf4j/Logger;	b	LOGGER
c	asi	net/minecraft/util/Signer
	m	(Ljava/lang/String;Ljava/security/PrivateKey;Lasg;)[B	a	lambda$from$1
		p	2		updatable
	m	(Ljava/security/PrivateKey;Ljava/lang/String;)Lasi;	a	from
		p	0		privateKey
		p	1		algorithm
	m	([B)[B	a	sign
		p	1		data
	m	([BLasg$a;)V	a	lambda$sign$0
		p	1		updater
	m	(Lasg;)[B	sign	sign
		p	1		updatable
	f	Lorg/slf4j/Logger;	a	LOGGER
c	asj	net/minecraft/util/SimpleBitStorage
	m	(II)V	<init>	<init>
		p	1		elementBits
		p	2		size
	m	(II[I)V	<init>	<init>
		p	1		elementBits
		p	2		size
		p	3		data
	m	(II[J)V	<init>	<init>
		p	1		elementBits
		p	2		size
		p	3		data
	m	()[J	a	getRaw
	m	(I)I	a	get
		p	1		index
	m	(II)I	a	getAndSet
		p	1		index
		p	2		value
	m	(Ljava/util/function/IntConsumer;)V	a	getAll
		p	1		action
	m	([I)V	a	unpack
		p	1		out
	m	()I	b	getSize
	m	(I)I	b	cellIndex
		p	1		index
	m	(II)V	b	set
		p	1		index
		p	2		value
	m	()I	c	getBits
	m	()Laqp;	d	copy
	f	[I	a	MAGIC
	f	[J	b	data
	f	I	c	bits
	f	J	d	mask
	f	I	e	size
	f	I	f	valuesPerLong
	f	I	g	divideMul
	f	I	h	divideAdd
	f	I	i	divideShift
c	asj$a	net/minecraft/util/SimpleBitStorage$InitializationException
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		message
c	ask	net/minecraft/util/SingleKeyCache
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1		mapper
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	getValue
		p	1		input
	f	Ljava/util/function/Function;	a	computeValue
	f	Ljava/lang/Object;	b	cacheKey
	f	Ljava/lang/Object;	c	cachedValue
c	asl	net/minecraft/util/SmoothDouble
	m	()V	a	reset
	m	(DD)D	a	getNewDeltaValue
		p	1		original
		p	3		smoother
	f	D	a	targetValue
	f	D	b	remainingValue
	f	D	c	lastAmount
c	asm	net/minecraft/util/SortedArraySet
	m	(ILjava/util/Comparator;)V	<init>	<init>
		p	1		initialCapacity
		p	2		comparator
	m	()Lasm;	a	create
	m	(I)Lasm;	a	create
		p	0		initialCapacity
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	addOrGet
		p	1		object
	m	(Ljava/lang/Object;I)V	a	addInternal
		p	1		object
		p	2		index
	m	(Ljava/util/Comparator;)Lasm;	a	create
		p	0		comparator
	m	(Ljava/util/Comparator;I)Lasm;	a	create
		p	0		comparator
		p	1		initialCapacity
	m	([Ljava/lang/Object;)[Ljava/lang/Object;	a	castRawArray
		p	0		array
	m	()Ljava/lang/Object;	b	first
	m	(I)I	b	getInsertionPosition
		p	0		binarySearchResult
	m	(Ljava/lang/Object;)Ljava/lang/Object;	b	get
		p	1		object
	m	()Ljava/lang/Object;	c	last
	m	(I)V	c	grow
		p	1		minCapacity
	m	(Ljava/lang/Object;)I	c	findIndex
		p	1		object
	m	(I)V	d	removeInternal
		p	1		index
	m	(I)Ljava/lang/Object;	e	getInternal
		p	1		index
	f	I	a	DEFAULT_INITIAL_CAPACITY
	f	Ljava/util/Comparator;	b	comparator
	f	[Ljava/lang/Object;	c	contents
	f	I	d	size
c	asm$a	net/minecraft/util/SortedArraySet$ArrayIterator
	f	Lasm;	a	this$0
	f	I	b	index
	f	I	c	last
c	asn	net/minecraft/util/SpawnUtil
	m	(Lakq;ILgw$a;Lasn$a;)Z	a	moveToPossibleSpawnPosition
		p	0		world
		p	1		verticalRange
		p	2		pos
		p	3		requirements
	m	(Lbiu;Lbjk;Lakq;Lgw;IIILasn$a;)Ljava/util/Optional;	a	trySpawnMob
		p	0		entityType
		p	1		reason
		p	2		world
		p	3		pos
		p	4		tries
		p	5		horizontalRange
		p	6		verticalRange
		p	7		requirements
c	asn$a	net/minecraft/util/SpawnUtil$Strategy
	m	(Lakq;Lgw;Ldfj;Lgw;Ldfj;)Z	a	lambda$static$1
		p	0		world
		p	1		pos
		p	2		state
		p	3		abovePos
		p	4		aboveState
	m	(Lakq;Lgw;Ldfj;Lgw;Ldfj;)Z	b	lambda$static$0
		p	0		world
		p	1		pos
		p	2		state
		p	3		abovePos
		p	4		aboveState
	m	(Lakq;Lgw;Ldfj;Lgw;Ldfj;)Z	canSpawnOn	canSpawnOn
		p	1		world
		p	2		pos
		p	3		state
		p	4		abovePos
		p	5		aboveState
	f	Lasn$a;	a	LEGACY_IRON_GOLEM
	f	Lasn$a;	b	ON_TOP_OF_COLLIDER
c	aso	net/minecraft/util/StringDecomposer
	m	(Lark;Luh;Ljava/lang/String;)Ljava/util/Optional;	a	lambda$iterateFormatted$0
		p	1		stylex
		p	2		string
	m	(Ljava/lang/String;)Ljava/lang/String;	a	filterBrokenSurrogates
		p	0		text
	m	(Ljava/lang/String;ILuh;Lark;)Z	a	iterateFormatted
		p	0		text
		p	1		startIndex
		p	2		style
		p	3		visitor
	m	(Ljava/lang/String;ILuh;Luh;Lark;)Z	a	iterateFormatted
		p	0		text
		p	1		startIndex
		p	2		startingStyle
		p	3		resetStyle
		p	4		visitor
	m	(Ljava/lang/String;Luh;Lark;)Z	a	iterate
		p	0		text
		p	1		style
		p	2		visitor
	m	(Ljava/lang/StringBuilder;ILuh;I)Z	a	lambda$getPlainText$2
		p	1		index
		p	2		style
		p	3		codePoint
	m	(Ltp;)Ljava/lang/String;	a	getPlainText
		p	0		text
	m	(Ltp;Luh;Lark;)Z	a	iterateFormatted
		p	0		text
		p	1		style
		p	2		visitor
	m	(Luh;Lark;IC)Z	a	feedChar
		p	0		style
		p	1		visitor
		p	2		index
		p	3		c
	m	(Ljava/lang/String;Luh;Lark;)Z	b	iterateBackwards
		p	0		text
		p	1		style
		p	2		visitor
	m	(Ljava/lang/StringBuilder;ILuh;I)Z	b	lambda$filterBrokenSurrogates$1
		p	1		index
		p	2		style
		p	3		codePoint
	m	(Ljava/lang/String;Luh;Lark;)Z	c	iterateFormatted
		p	0		text
		p	1		style
		p	2		visitor
	f	C	a	REPLACEMENT_CHAR
	f	Ljava/util/Optional;	b	STOP_ITERATION
c	asp	net/minecraft/util/StringRepresentable
	m	(Ljava/lang/Enum;)Ljava/lang/Enum;	a	lambda$fromEnumWithMapping$2
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$fromEnum$0
		p	0		id
	m	(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/Enum;	a	lambda$fromEnumWithMapping$3
		p	1		id
	m	(Ljava/util/function/Function;Ljava/lang/Enum;)Ljava/lang/String;	a	lambda$fromEnumWithMapping$1
		p	1		enum_
	m	(Ljava/util/function/Supplier;)Lasp$a;	a	fromEnum
		p	0		enumValues
	m	(Ljava/util/function/Supplier;Ljava/util/function/Function;)Lasp$a;	a	fromEnumWithMapping
		p	0		enumValues
		p	1		valueNameTransformer
	m	([Lasp;)Lcom/mojang/serialization/Keyable;	a	keys
		p	0		values
	m	([Ljava/lang/Enum;Ljava/util/function/Function;Ljava/lang/String;)Ljava/lang/Enum;	a	lambda$fromEnumWithMapping$4
		p	2		id
	m	()Ljava/lang/String;	c	getSerializedName
	f	I	W	PRE_BUILT_MAP_THRESHOLD
c	asp$1	net/minecraft/util/StringRepresentable$1
	f	[Lasp;	a	val$values
c	asp$a	net/minecraft/util/StringRepresentable$EnumCodec
	m	([Ljava/lang/Enum;Ljava/util/function/Function;)V	<init>	<init>
		p	1		values
		p	2		idToIdentifiable
	m	(Ljava/lang/Enum;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	encode
	m	(Ljava/lang/Object;)I	a	lambda$new$1
		p	0		enum_
	m	(Ljava/lang/String;)Ljava/lang/Enum;	a	byName
		p	1		id
	m	(Ljava/lang/String;Ljava/lang/Enum;)Ljava/lang/Enum;	a	byName
		p	1		id
		p	2		fallback
	m	([Ljava/lang/Enum;I)Ljava/lang/Enum;	a	lambda$new$2
		p	1		ordinal
	m	(Ljava/lang/Object;)Ljava/lang/String;	b	lambda$new$0
		p	0		identifiable
	f	Lcom/mojang/serialization/Codec;	a	codec
	f	Ljava/util/function/Function;	b	resolver
c	asq	net/minecraft/util/StringUtil
	m	(I)Ljava/lang/String;	a	formatTickDuration
		p	0		ticks
	m	(Ljava/lang/String;)Ljava/lang/String;	a	stripColor
		p	0		text
	m	(Ljava/lang/String;IZ)Ljava/lang/String;	a	truncateStringIfNecessary
		p	0		text
		p	1		maxLength
		p	2		addEllipsis
	m	(Ljava/lang/String;)Z	b	isNullOrEmpty
		p	0		text
	m	(Ljava/lang/String;)I	c	lineCount
		p	0		text
	m	(Ljava/lang/String;)Z	d	endsWithNewLine
		p	0		text
	m	(Ljava/lang/String;)Ljava/lang/String;	e	trimChatMessage
		p	0		text
	f	Ljava/util/regex/Pattern;	a	STRIP_COLOR_PATTERN
	f	Ljava/util/regex/Pattern;	b	LINE_PATTERN
	f	Ljava/util/regex/Pattern;	c	LINE_END_PATTERN
c	asr	net/minecraft/util/TaskChainer
	m	(Ljava/lang/Throwable;)Ljava/lang/Object;	a	lambda$immediate$0
		p	0		throwable
	m	(Ljava/util/concurrent/Executor;Lasr$a;)V	a	lambda$immediate$1
		p	1		future
	m	(Lasr$a;)V	append	append
		p	1		future
	m	(Ljava/util/concurrent/Executor;)Lasr;	immediate	immediate
		p	0		executor
	f	Lorg/slf4j/Logger;	a	LOGGER
c	asr$a	net/minecraft/util/TaskChainer$DelayedTask
	m	(Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	submit	submit
		p	1		executor
c	ass	net/minecraft/util/ThreadingDetector
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		name
	m	()V	a	checkAndLock
	m	(Ljava/lang/String;Ljava/lang/Thread;)Ly;	a	makeThreadingException
		p	0		message
		p	1		thread
	m	(Ljava/lang/Thread;)Ljava/lang/String;	a	stackTrace
	m	()V	b	checkAndUnlock
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/lang/String;	b	name
	f	Ljava/util/concurrent/Semaphore;	c	lock
	f	Ljava/util/concurrent/locks/Lock;	d	stackTraceLock
	f	Ljava/lang/Thread;	e	threadThatFailedToAcquire
	f	Ly;	f	fullException
c	ast	net/minecraft/util/TimeSource
	m	(Ljava/util/concurrent/TimeUnit;)J	get	get
		p	1		timeUnit
c	ast$a	net/minecraft/util/TimeSource$NanoTimeSource
	m	(Ljava/util/concurrent/TimeUnit;)J	get	get
		p	1		timeUnit
c	asu	net/minecraft/util/TimeUtil
	m	(II)Lbgj;	a	rangeOfSeconds
		p	0		min
		p	1		max
	f	J	a	NANOSECONDS_PER_SECOND
	f	J	b	NANOSECONDS_PER_MILLISECOND
c	asv	net/minecraft/util/ToFloatFunction
	m	(F)F	a	lambda$static$0
		p	0		value
	m	(Lit/unimi/dsi/fastutil/floats/Float2FloatFunction;)Lasv;	a	createUnlimited
		p	0		delegate
	m	(Ljava/lang/Object;)F	a	apply
		p	1		x
	m	(Ljava/util/function/Function;)Lasv;	a	comap
		p	1		before
	m	()F	b	minValue
	m	()F	c	maxValue
	f	Lasv;	a	IDENTITY
c	asv$1	net/minecraft/util/ToFloatFunction$1
	m	(Ljava/lang/Float;)F	a	apply
		p	1		x
	m	(Ljava/lang/Object;)F	a	apply
		p	1		x
	m	()F	b	minValue
	m	()F	c	maxValue
	f	Lit/unimi/dsi/fastutil/floats/Float2FloatFunction;	b	val$function
c	asv$2	net/minecraft/util/ToFloatFunction$2
	m	(Ljava/lang/Object;)F	a	apply
		p	1		x
	m	()F	b	minValue
	m	()F	c	maxValue
	f	Lasv;	b	val$outer
	f	Ljava/util/function/Function;	c	val$function
	f	Lasv;	d	this$0
c	asw	net/minecraft/util/Tuple
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	<init>	<init>
		p	1		left
		p	2		right
	m	()Ljava/lang/Object;	a	getA
	m	(Ljava/lang/Object;)V	a	setA
		p	1		left
	m	()Ljava/lang/Object;	b	getB
	m	(Ljava/lang/Object;)V	b	setB
		p	1		right
c	asx	net/minecraft/util/Unit
	m	()[Lasx;	a	$values
	f	Lasx;	a	INSTANCE
	f	[Lasx;	b	$VALUES
c	asy	net/minecraft/util/VisibleForDebug
c	asz	net/minecraft/util/ZeroBitStorage
	m	(I)V	<init>	<init>
		p	1		size
	m	()[J	a	getRaw
	m	(I)I	a	get
		p	1		index
	m	(II)I	a	getAndSet
		p	1		index
		p	2		value
	m	(Ljava/util/function/IntConsumer;)V	a	getAll
		p	1		action
	m	([I)V	a	unpack
		p	1		out
	m	()I	b	getSize
	m	(II)V	b	set
		p	1		index
		p	2		value
	m	()I	c	getBits
	m	()Laqp;	d	copy
	f	[J	a	RAW
	f	I	b	size
c	ata	net/minecraft/util/datafix/DataFixTypes
	m	(Ljava/lang/String;ILcom/mojang/datafixers/DSL$TypeReference;)V	<init>	<init>
		p	3		typeReference
	m	()I	a	currentVersion
	m	(Lcom/mojang/datafixers/DataFixer;Lcom/mojang/serialization/Dynamic;I)Lcom/mojang/serialization/Dynamic;	a	updateToCurrentVersion
		p	1		dataFixer
		p	2		dynamic
		p	3		oldVersion
	m	(Lcom/mojang/datafixers/DataFixer;Lcom/mojang/serialization/Dynamic;II)Lcom/mojang/serialization/Dynamic;	a	update
		p	1		dataFixer
		p	2		dynamic
		p	3		oldVersion
		p	4		newVersion
	m	(Lcom/mojang/datafixers/DataFixer;Lqw;I)Lqw;	a	updateToCurrentVersion
		p	1		dataFixer
		p	2		nbt
		p	3		oldVersion
	m	(Lcom/mojang/datafixers/DataFixer;Lqw;II)Lqw;	a	update
		p	1		dataFixer
		p	2		nbt
		p	3		oldVersion
		p	4		newVersion
	m	(Lcom/mojang/serialization/Codec;Lcom/mojang/datafixers/DataFixer;I)Lcom/mojang/serialization/Codec;	a	wrapCodec
		p	1		baseCodec
		p	2		dataFixer
		p	3		currentDataVersion
	m	()[Lata;	b	$values
	f	Lata;	a	LEVEL
	f	Lata;	b	PLAYER
	f	Lata;	c	CHUNK
	f	Lata;	d	HOTBAR
	f	Lata;	e	OPTIONS
	f	Lata;	f	STRUCTURE
	f	Lata;	g	STATS
	f	Lata;	h	SAVED_DATA_COMMAND_STORAGE
	f	Lata;	i	SAVED_DATA_FORCED_CHUNKS
	f	Lata;	j	SAVED_DATA_MAP_DATA
	f	Lata;	k	SAVED_DATA_MAP_INDEX
	f	Lata;	l	SAVED_DATA_RAIDS
	f	Lata;	m	SAVED_DATA_RANDOM_SEQUENCES
	f	Lata;	n	SAVED_DATA_SCOREBOARD
	f	Lata;	o	SAVED_DATA_STRUCTURE_FEATURE_INDICES
	f	Lata;	p	ADVANCEMENTS
	f	Lata;	q	POI_CHUNK
	f	Lata;	r	WORLD_GEN_SETTINGS
	f	Lata;	s	ENTITY_CHUNK
	f	Ljava/util/Set;	t	TYPES_FOR_LEVEL_LIST
	f	Lcom/mojang/datafixers/DSL$TypeReference;	u	type
	f	[Lata;	v	$VALUES
c	ata$1	net/minecraft/util/datafix/DataFixTypes$1
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	lambda$encode$0
		p	1		encoded
	f	Lcom/mojang/serialization/Codec;	a	val$codec
	f	I	b	val$defaultVersion
	f	Lcom/mojang/datafixers/DataFixer;	c	val$dataFixer
	f	Lata;	d	this$0
c	atb	net/minecraft/util/datafix/DataFixers
	m	()Lcom/mojang/datafixers/DataFixer;	a	getDataFixer
	m	(Lcom/google/common/collect/ImmutableMap;Ljava/lang/String;)Ljava/lang/String;	a	lambda$addFixers$4
	m	(Lcom/mojang/datafixers/DataFixerBuilder;)V	a	addFixers
		p	0		builder
	m	(Lit/unimi/dsi/fastutil/ints/Int2ObjectOpenHashMap;)V	a	lambda$addFixers$5
		p	0		frogVariants
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$addFixers$7
	m	(Ljava/lang/String;Ljava/lang/String;)Ljava/util/function/UnaryOperator;	a	createRenamer
		p	0		old
		p	1		current
	m	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	a	lambda$createRenamer$9
		p	2		string
	m	(Ljava/util/Map;)Ljava/util/function/UnaryOperator;	a	createRenamer
		p	0		replacements
	m	(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/String;	a	lambda$createRenamer$8
		p	1		string
	m	(Ljava/util/Set;)Lcom/mojang/datafixers/DataFixer;	a	createFixerUpper
		p	0		requiredTypes
	m	(Lit/unimi/dsi/fastutil/ints/Int2ObjectOpenHashMap;)V	b	lambda$addFixers$3
		p	0		catVariants
	m	(Ljava/lang/String;)Ljava/lang/String;	b	lambda$addFixers$2
		p	0		id
	m	(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/String;	b	lambda$addFixers$6
	m	(Ljava/lang/String;)Ljava/lang/String;	c	lambda$addFixers$1
		p	0		id
	m	(Ljava/lang/String;)Ljava/lang/String;	d	lambda$addFixers$0
		p	0		id
	f	I	a	BLENDING_VERSION
	f	Ljava/util/function/BiFunction;	b	SAME
	f	Ljava/util/function/BiFunction;	c	SAME_NAMESPACED
	f	Lcom/mojang/datafixers/DataFixer;	d	dataFixer
c	atb$1	net/minecraft/util/datafix/DataFixers$1
	m	(Lcom/mojang/datafixers/schemas/Schema;ZLjava/lang/String;Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
		p	3		name
		p	4		type
		p	5		choiceName
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
c	atb$2	net/minecraft/util/datafix/DataFixers$2
	m	(Lcom/mojang/datafixers/schemas/Schema;ZLjava/lang/String;Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
		p	3		name
		p	4		type
		p	5		choiceName
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
c	atc	net/minecraft/util/datafix/PackedBitStorage
	m	(II)V	<init>	<init>
		p	1		unitSize
		p	2		length
	m	(II[J)V	<init>	<init>
		p	1		unitSize
		p	2		length
		p	3		array
	m	()[J	a	getRaw
	m	(I)I	a	get
		p	1		index
	m	(II)V	a	set
		p	1		index
		p	2		value
	m	()I	b	getBits
	f	I	a	BIT_TO_LONG_SHIFT
	f	[J	b	data
	f	I	c	bits
	f	J	d	mask
	f	I	e	size
c	atd	net/minecraft/util/datafix/fixes/AbstractArrowPickupFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	updateProjectiles
		p	1		typed
	m	(Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/Typed;	a	updateEntity
		p	1		typed
		p	2		choiceName
		p	3		updater
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	updatePickup
		p	0		arrowData
	m	(Ljava/util/function/Function;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$updateEntity$0
		p	1		t
c	ate	net/minecraft/util/datafix/fixes/AbstractPoiSectionFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)V	<init>	<init>
		p	1		outputSchema
		p	2		name
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$cap$2
		p	1		pair
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	cap
		p	1		dynamic
	m	(Lcom/mojang/serialization/Dynamic;Ljava/util/stream/Stream;)Lcom/mojang/serialization/Dynamic;	a	lambda$processSectionRecords$4
		p	2		dynamics
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$makeRule$1
		p	1		ops
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	a	processRecords
		p	1		dynamics
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	b	lambda$makeRule$0
		p	1		pair
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	processSection
		p	1		dynamic
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	processSectionRecords
		p	1		dynamic
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$cap$3
		p	1		sections
	f	Ljava/lang/String;	a	name
c	atf	net/minecraft/util/datafix/fixes/AbstractUUIDFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Lcom/mojang/datafixers/DSL$TypeReference;)V	<init>	<init>
		p	1		outputSchema
		p	2		typeReference
	m	(Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/Typed;	a	updateNamedChoice
		p	1		typed
		p	2		name
		p	3		updater
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/util/Optional;	a	createUUIDFromML
	m	(Lcom/mojang/serialization/Dynamic;JJ)Ljava/util/Optional;	a	createUUIDTag
		p	1		mostBits
		p	3		leastBits
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Ljava/util/Optional;	a	lambda$createUUIDFromString$4
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Ljava/util/Optional;	a	createUUIDFromString
		p	1		key
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional;	a	replaceUUIDString
		p	1		oldKey
		p	2		newKey
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$replaceUUIDMLTag$2
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$replaceUUIDLeastMost$3
	m	(Ljava/util/function/Function;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$updateNamedChoice$0
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional;	b	replaceUUIDMLTag
		p	1		oldKey
		p	2		newKey
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$replaceUUIDString$1
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional;	c	replaceUUIDLeastMost
		p	1		oldKey
		p	2		newKey
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional;	d	createUUIDFromLongs
		p	1		mostBitsKey
		p	2		leastBitsKey
	f	Lcom/mojang/datafixers/DSL$TypeReference;	a	typeReference
c	atg	net/minecraft/util/datafix/fixes/AddFlagIfNotPresentFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		typeReference
		p	3		key
		p	4		value
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$makeRule$0
	f	Ljava/lang/String;	a	name
	f	Z	b	flagValue
	f	Ljava/lang/String;	c	flagKey
	f	Lcom/mojang/datafixers/DSL$TypeReference;	d	typeReference
c	ath	net/minecraft/util/datafix/fixes/AddNewChoices
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Lcom/mojang/datafixers/DSL$TypeReference;)V	<init>	<init>
		p	1		outputSchema
		p	2		name
		p	3		types
	m	(Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$cap$0
	m	(Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$cap$1
	m	(Ljava/lang/String;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;)Lcom/mojang/datafixers/TypeRewriteRule;	a	cap
		p	1		name
		p	2		inputChoiceType
		p	3		outputChoiceType
	f	Ljava/lang/String;	a	name
	f	Lcom/mojang/datafixers/DSL$TypeReference;	b	type
c	ati	net/minecraft/util/datafix/fixes/AdvancementsFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$new$0
	f	Ljava/util/Map;	a	RENAMES
c	atj	net/minecraft/util/datafix/fixes/AdvancementsRenameFix
	m	(Lcom/mojang/datafixers/schemas/Schema;ZLjava/lang/String;Ljava/util/function/Function;)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
		p	3		name
		p	4		renamer
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$3
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$2
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
	f	Ljava/lang/String;	a	name
	f	Ljava/util/function/Function;	b	renamer
c	atk	net/minecraft/util/datafix/fixes/AttributesRename
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fixItemStackTag
		p	0		typed
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixName
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$fixName$1
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	a	lambda$fixEntity$7
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	fixEntity
		p	0		typed
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fixEntity$9
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	b	lambda$fixItemStackTag$3
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$fixEntity$8
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$fixEntity$6
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	e	lambda$fixItemStackTag$5
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	f	lambda$fixItemStackTag$4
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	g	lambda$fixItemStackTag$2
	f	Ljava/util/Map;	a	RENAMES
c	atl	net/minecraft/util/datafix/fixes/BedItemColorFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
c	atm	net/minecraft/util/datafix/fixes/BiomeFix
	f	Ljava/util/Map;	a	BIOMES
c	atn	net/minecraft/util/datafix/fixes/BitStorageAlignFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(II[J)[J	a	addPadding
		p	0		maxValue
		p	1		elementBits
		p	2		elements
	m	(ILcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$updateSections$8
		p	1		sectionDynamic
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
		p	5		chunk
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	updateSections
		p	0		levelSectionsFinder
		p	1		sectionFinder
		p	2		paletteFinder
		p	3		level
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$updateSections$10
		p	2		levelSection
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$updateSections$9
		p	1		section
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	updateHeightmaps
		p	1		fixedLevel
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$updateHeightmaps$5
		p	0		levelDynamic
	m	(Lcom/mojang/serialization/Dynamic;ILcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$updateSections$7
		p	2		statesDynamic
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$updateHeightmaps$3
		p	1		heightmap
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$updateHeightmaps$4
		p	1		heightmapsDynamic
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;II)Lcom/mojang/serialization/Dynamic;	a	updateBitStorage
		p	0		sectionDynamic
		p	1		statesDynamic
		p	2		maxValue
		p	3		elementBits
	m	(Ljava/util/List;)Ljava/lang/Integer;	a	lambda$updateSections$6
		p	0		palette
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$makeRule$0
		p	4		level
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$updateHeightmaps$2
		p	1		heightmapDynamic
	f	I	a	BIT_TO_LONG_SHIFT
	f	I	b	SECTION_WIDTH
	f	I	c	SECTION_HEIGHT
	f	I	d	SECTION_SIZE
	f	I	e	HEIGHTMAP_BITS
	f	I	f	HEIGHTMAP_SIZE
c	ato	net/minecraft/util/datafix/fixes/BlendingDataFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
		p	0		typed
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
		p	0		chunk
	m	(Lcom/mojang/serialization/Dynamic;II)Lcom/mojang/serialization/Dynamic;	a	updateBlendingData
		p	0		dynamic
		p	1		height
		p	2		minY
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/OptionalDynamic;)Lcom/mojang/serialization/Dynamic;	a	updateChunkTag
		p	0		chunk
		p	1		context
	f	Ljava/lang/String;	a	name
	f	Ljava/util/Set;	b	STATUSES_TO_SKIP_BLENDING
c	atp	net/minecraft/util/datafix/fixes/BlendingDataRemoveFromNetherEndFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
		p	0		typed
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
		p	0		chunk
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/OptionalDynamic;)Lcom/mojang/serialization/Dynamic;	a	updateChunkTag
		p	0		chunk
		p	1		context
c	atq	net/minecraft/util/datafix/fixes/BlockEntityBannerColorFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	a	lambda$fixTag$3
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fixTag$4
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$fixTag$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$fixTag$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	e	lambda$fixTag$0
c	atr	net/minecraft/util/datafix/fixes/BlockEntityBlockStateFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	()Ljava/lang/IllegalStateException;	a	lambda$fix$1
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
	m	()Ljava/lang/IllegalStateException;	b	lambda$fix$0
c	ats	net/minecraft/util/datafix/fixes/BlockEntityCustomNameToComponentFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
c	att	net/minecraft/util/datafix/fixes/BlockEntityIdFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$2
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$makeRule$3
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$makeRule$1
	m	(Ljava/util/HashMap;)V	a	lambda$static$0
		p	0		map
	f	Ljava/util/Map;	a	ID_MAP
c	atu	net/minecraft/util/datafix/fixes/BlockEntityJukeboxFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	()Ljava/lang/IllegalStateException;	a	lambda$fix$0
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
c	atv	net/minecraft/util/datafix/fixes/BlockEntityKeepPacked
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
c	atw	net/minecraft/util/datafix/fixes/BlockEntityRenameFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/UnaryOperator;)V	<init>	<init>
		p	1		outputSchema
		p	2		name
		p	3		renamer
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/UnaryOperator;)Lcom/mojang/datafixers/DataFix;	a	create
		p	0		outputSchema
		p	1		name
		p	2		renamer
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$0
		p	1		pair
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$makeRule$1
		p	1		ops
	f	Ljava/lang/String;	a	name
	f	Ljava/util/function/UnaryOperator;	b	nameChangeLookup
c	atx	net/minecraft/util/datafix/fixes/BlockEntityShulkerBoxColorFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fix$0
c	aty	net/minecraft/util/datafix/fixes/BlockEntitySignDoubleSidedEditableTextFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/lang/String;)V	<init>	<init>
		p	1		outputSchema
		p	2		name
		p	3		blockEntityId
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
		p	0		signData
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Ljava/util/stream/Stream;	a	getLines
		p	0		signData
		p	1		prefix
	m	(Lcom/mojang/serialization/Dynamic;Ljava/util/Optional;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixFrontTextTag$0
		p	1		text
	m	(Ljava/util/List;Ljava/util/Optional;J)Lcom/mojang/serialization/Dynamic;	a	lambda$fixFrontTextTag$1
		p	1		message
		p	2		index
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	fixFrontTextTag
		p	0		signData
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	createDefaultText
		p	0		signData
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	createEmptyLines
		p	0		signData
	f	Ljava/lang/String;	a	FILTERED_CORRECT
	f	Ljava/lang/String;	b	DEFAULT_COLOR
	f	Ljava/lang/String;	c	EMPTY_COMPONENT
c	atz	net/minecraft/util/datafix/fixes/BlockEntitySignTextStrictJsonFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fix$0
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	a	updateLine
		p	2		lineName
	f	Lcom/google/gson/Gson;	a	GSON
c	atz$1	net/minecraft/util/datafix/fixes/BlockEntitySignTextStrictJsonFix$1
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lty;	a	deserialize
c	aua	net/minecraft/util/datafix/fixes/BlockEntityUUIDFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$updateSkull$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	updateSkull
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	updateConduit
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$updateSkull$1
c	aub	net/minecraft/util/datafix/fixes/BlockNameFlatteningFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/util/Either;)Ljava/lang/String;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$2
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$makeRule$3
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$makeRule$0
c	auc	net/minecraft/util/datafix/fixes/BlockRenameFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)V	<init>	<init>
		p	1		outputSchema
		p	2		name
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$3
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/DataFix;	a	create
		p	0		outputSchema
		p	1		name
		p	2		rename
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$2
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$makeRule$1
	m	(Ljava/lang/String;)Ljava/lang/String;	a	fixBlock
		p	1		oldName
	f	Ljava/lang/String;	a	name
c	auc$1	net/minecraft/util/datafix/fixes/BlockRenameFix$1
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Function;)V	<init>	<init>
		p	1		outputSchema
		p	2		name
	m	(Ljava/lang/String;)Ljava/lang/String;	a	fixBlock
		p	1		oldName
	f	Ljava/util/function/Function;	a	val$fixBlock
c	aud	net/minecraft/util/datafix/fixes/BlockRenameFixWithJigsaw
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)V	<init>	<init>
		p	1		outputSchema
		p	2		name
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/DSL$TypeReference;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$4
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$3
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$2
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/DataFix;	b	create
		p	0		oldSchema
		p	1		name
		p	2		rename
	m	(Ljava/lang/String;)Ljava/lang/String;	b	lambda$makeRule$0
	f	Ljava/lang/String;	a	name
c	aud$1	net/minecraft/util/datafix/fixes/BlockRenameFixWithJigsaw$1
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Function;)V	<init>	<init>
		p	1		outputSchema
		p	2		name
	m	(Ljava/lang/String;)Ljava/lang/String;	a	fixBlock
		p	1		oldName
	f	Ljava/util/function/Function;	a	val$fixBlock
c	aue	net/minecraft/util/datafix/fixes/BlockStateData
	m	()V	a	bootstrap0
	m	(I)Ljava/lang/String;	a	upgradeBlock
		p	0		stateId
	m	(ILjava/lang/String;[Ljava/lang/String;)V	a	register
		p	0		oldId
		p	1		newStateStr
		p	2		oldStateStrings
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	upgradeBlockStateTag
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;)V	a	lambda$static$1
	m	(Ljava/lang/String;)Ljava/lang/String;	a	upgradeBlock
		p	0		oldBlockName
	m	()V	b	bootstrap1
	m	(I)Lcom/mojang/serialization/Dynamic;	b	getTag
		p	0		stateId
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;)V	b	lambda$static$0
	m	(Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	b	parse
		p	0		stateStr
	m	()V	c	bootstrap2
	m	()V	d	bootstrap3
	m	()V	e	bootstrap4
	m	()V	f	bootstrap5
	m	()V	g	bootstrap6
	m	()V	h	bootstrap7
	m	()V	i	bootstrap8
	m	()V	j	bootstrap9
	m	()V	k	bootstrap10
	m	()V	l	bootstrap11
	m	()V	m	bootstrap12
	m	()V	n	bootstrap13
	m	()V	o	bootstrap14
	m	()V	p	bootstrap15
	m	()V	q	finalizeMaps
	f	Ljava/lang/String;	a	FILTER_ME
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	[Lcom/mojang/serialization/Dynamic;	c	MAP
	f	[Lcom/mojang/serialization/Dynamic;	d	BLOCK_DEFAULTS
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	e	ID_BY_OLD
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	f	ID_BY_OLD_NAME
c	auf	net/minecraft/util/datafix/fixes/BlockStateStructureTemplateFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
c	aug	net/minecraft/util/datafix/fixes/CatTypeFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
c	auh	net/minecraft/util/datafix/fixes/CauldronRenameFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fix
c	aui	net/minecraft/util/datafix/fixes/CavesAndCliffsRenames
	f	Lcom/google/common/collect/ImmutableMap;	a	RENAMES
c	auj	net/minecraft/util/datafix/fixes/ChunkBedBlockEntityInjecterFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	()Ljava/lang/IllegalStateException;	a	lambda$cap$3
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$cap$5
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/templates/List$ListType;)Lcom/mojang/datafixers/TypeRewriteRule;	a	cap
		p	1		level
		p	2		blockEntities
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$cap$0
	m	(Lcom/mojang/serialization/Dynamic;IIIIJ)Ljava/util/Map;	a	lambda$cap$2
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$cap$1
	m	(Ljava/util/List;Lcom/mojang/datafixers/types/Type;Lcom/mojang/serialization/Dynamic;Ljava/util/Map;)V	a	lambda$cap$4
c	auk	net/minecraft/util/datafix/fixes/ChunkBiomeFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
c	aul	net/minecraft/util/datafix/fixes/ChunkDeleteIgnoredLightDataFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
c	aum	net/minecraft/util/datafix/fixes/ChunkDeleteLightFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$3
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$makeRule$0
c	aun	net/minecraft/util/datafix/fixes/ChunkHeightAndBiomeFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	()Ljava/lang/IllegalStateException;	a	lambda$makeRule$7
	m	(I)I	a	ceillog2
		p	0		value
	m	(IILcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$updateCarvingMasks$21
		p	3		mask
	m	(J)J	a	lambda$getFixedHeightmap$23
		p	0		entry
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$11
		p	5		chunk
	m	(Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$10
		p	4		level
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	shiftUpgradeData
		p	0		upgradeData
	m	(Lcom/mojang/serialization/Dynamic;II)Lcom/mojang/serialization/Dynamic;	a	updateCarvingMasks
		p	0		level
		p	1		sectionsPerChunk
		p	2		oldBottomSectionY
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	makePalettedContainer
		p	0		palette
		p	1		data
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;Ljava/util/List;)Lcom/mojang/serialization/Dynamic;	a	padPaletteEntries
	m	(Lcom/mojang/serialization/Dynamic;Lit/unimi/dsi/fastutil/ints/Int2IntFunction;)Lcom/mojang/serialization/Dynamic;	a	makeBiomeContainer
		p	0		level
		p	1		biomeGetter
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/Integer;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeBiomeContainer$24
		p	1		rawBiomeId
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	a	addPaddingEntries
		p	0		level
		p	1		key
	m	(Lcom/mojang/serialization/Dynamic;Ljava/util/Set;)Lcom/mojang/serialization/Dynamic;	a	predictChunkStatusBeforeSurface
		p	1		level
		p	2		blocks
	m	(Lcom/mojang/serialization/Dynamic;ZILorg/apache/commons/lang3/mutable/MutableBoolean;)[Lcom/mojang/serialization/Dynamic;	a	getBiomeContainers
		p	0		level
		p	1		overworld
		p	3		heightAlreadyUpdated
	m	(Lcom/mojang/serialization/Dynamic;ZZZLjava/util/function/Supplier;)Lcom/mojang/serialization/Dynamic;	a	updateChunkTag
		p	0		level
		p	1		overworld
		p	2		heightAlreadyUpdated
		p	3		atNoiseStatus
	m	(Ljava/util/Map;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)V	a	lambda$shiftUpgradeData$18
		p	1		key
		p	2		value
	m	(Ljava/util/Map;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;Ljava/lang/Integer;)V	a	lambda$shiftUpgradeData$17
		p	3		index
	m	(Ljava/util/Map;Ljava/util/Map;)V	a	lambda$shiftUpgradeData$19
		p	1		indicesMap
	m	(Ljava/util/Set;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$predictChunkStatusBeforeSurface$12
		p	1		status
	m	(Ljava/util/Set;Lcom/mojang/serialization/Dynamic;I[Lcom/mojang/serialization/Dynamic;Lit/unimi/dsi/fastutil/ints/IntSet;Lorg/apache/commons/lang3/mutable/MutableObject;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$6
	m	(Ljava/util/Set;Lcom/mojang/serialization/Dynamic;I[Lcom/mojang/serialization/Dynamic;Lorg/apache/commons/lang3/mutable/MutableObject;Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$8
		p	7		sections
	m	(Ljava/util/Set;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Ljava/util/Optional;	a	lambda$makeRule$4
	m	(ZLjava/util/Set;Lorg/apache/commons/lang3/mutable/MutableBoolean;Ljava/lang/String;Lorg/apache/commons/lang3/mutable/MutableObject;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$9
		p	6		level2
	m	([II)I	a	getOldBiome
		p	0		is
		p	1		index
	m	([III)I	a	lambda$getBiomeContainers$14
		p	2		sectionY
	m	()Ljava/lang/IllegalStateException;	b	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	updateHeightmaps
		p	0		level
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	makeOptimizedPalettedContainer
	m	([II)I	b	lambda$getBiomeContainers$16
		p	1		sectionY
	m	([III)I	b	lambda$getBiomeContainers$13
		p	2		sectionY
	m	()Lauq$a;	c	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	getFixedHeightmap
		p	0		heightmap
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$makeRule$3
	m	([II)I	c	lambda$getBiomeContainers$15
		p	1		sectionY
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	makePalettedContainer
		p	0		palette
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	e	lambda$updateHeightmaps$22
		p	0		heightmaps
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	f	lambda$shiftUpgradeData$20
		p	0		indices
	m	(Lcom/mojang/serialization/Dynamic;)Lauq$a;	g	lambda$makeRule$5
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/lang/String;	h	lambda$makeRule$2
	f	Ljava/lang/String;	a	DATAFIXER_CONTEXT_TAG
	f	I	b	BLOCKS_PER_SECTION
	f	Ljava/lang/String;	c	DEFAULT_BIOME
	f	Ljava/lang/String;	d	NAME
	f	I	e	OLD_SECTION_COUNT
	f	I	f	NEW_SECTION_COUNT
	f	I	g	NEW_MIN_SECTION_Y
	f	I	h	LONGS_PER_SECTION
	f	I	i	HEIGHTMAP_BITS
	f	J	j	HEIGHTMAP_MASK
	f	I	k	HEIGHTMAP_OFFSET
	f	[Ljava/lang/String;	l	HEIGHTMAP_TYPES
	f	Ljava/util/Set;	m	STATUS_IS_OR_AFTER_SURFACE
	f	Ljava/util/Set;	n	STATUS_IS_OR_AFTER_NOISE
	f	Ljava/util/Set;	o	BLOCKS_BEFORE_FEATURE_STATUS
	f	I	p	BIOME_CONTAINER_LAYER_SIZE
	f	I	q	BIOME_CONTAINER_SIZE
	f	I	r	BIOME_CONTAINER_TOP_LAYER_OFFSET
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	s	BIOMES_BY_ID
c	auo	net/minecraft/util/datafix/fixes/ChunkLightRemoveFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
c	aup	net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Laqv;Lcom/mojang/serialization/Dynamic;)I	a	idFor
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/lang/String;	a	getName
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Ljava/lang/String;	a	getProperty
	m	(Lit/unimi/dsi/fastutil/ints/Int2ObjectOpenHashMap;)V	a	lambda$static$4
		p	0		map
	m	(Ljava/util/HashMap;)V	a	lambda$static$6
		p	0		map
	m	(Ljava/util/Map;ILjava/lang/String;)V	a	addBeds
		p	0		out
		p	1		colorId
		p	2		color
	m	(Ljava/util/Map;ILjava/lang/String;Ljava/lang/String;)V	a	mapSkull
		p	0		out
		p	1		variant
		p	2		mob
		p	3		block
	m	(Ljava/util/Map;Ljava/lang/String;I)V	a	mapDoor
		p	0		out
		p	1		name
		p	2		firstStateId
	m	(ZZZZ)I	a	getSideMask
		p	0		west
		p	1		east
		p	2		north
		p	3		south
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	fix
	m	(Ljava/util/HashMap;)V	b	lambda$static$5
		p	0		map
	m	(Ljava/util/Map;ILjava/lang/String;)V	b	addBanners
		p	0		out
		p	1		colorId
		p	2		color
	m	(Ljava/util/HashMap;)V	c	lambda$static$3
		p	0		map
	m	(Ljava/util/HashMap;)V	d	lambda$static$2
		p	0		map
	m	(Ljava/util/HashMap;)V	e	lambda$static$1
		p	0		map
	m	(Ljava/util/HashMap;)V	f	lambda$static$0
		p	0		map
	f	Ljava/util/Map;	A	BED_BLOCK_MAP
	f	Ljava/util/Map;	B	BANNER_BLOCK_MAP
	f	Lcom/mojang/serialization/Dynamic;	C	AIR
	f	I	D	SIZE
	f	I	a	NORTH_WEST_MASK
	f	I	b	WEST_MASK
	f	I	c	SOUTH_WEST_MASK
	f	I	d	SOUTH_MASK
	f	I	e	SOUTH_EAST_MASK
	f	I	f	EAST_MASK
	f	I	g	NORTH_EAST_MASK
	f	I	h	NORTH_MASK
	f	Lorg/slf4j/Logger;	i	LOGGER
	f	Ljava/util/BitSet;	j	VIRTUAL
	f	Ljava/util/BitSet;	k	FIX
	f	Lcom/mojang/serialization/Dynamic;	l	PUMPKIN
	f	Lcom/mojang/serialization/Dynamic;	m	SNOWY_PODZOL
	f	Lcom/mojang/serialization/Dynamic;	n	SNOWY_GRASS
	f	Lcom/mojang/serialization/Dynamic;	o	SNOWY_MYCELIUM
	f	Lcom/mojang/serialization/Dynamic;	p	UPPER_SUNFLOWER
	f	Lcom/mojang/serialization/Dynamic;	q	UPPER_LILAC
	f	Lcom/mojang/serialization/Dynamic;	r	UPPER_TALL_GRASS
	f	Lcom/mojang/serialization/Dynamic;	s	UPPER_LARGE_FERN
	f	Lcom/mojang/serialization/Dynamic;	t	UPPER_ROSE_BUSH
	f	Lcom/mojang/serialization/Dynamic;	u	UPPER_PEONY
	f	Ljava/util/Map;	v	FLOWER_POT_MAP
	f	Ljava/util/Map;	w	SKULL_MAP
	f	Ljava/util/Map;	x	DOOR_MAP
	f	Ljava/util/Map;	y	NOTE_BLOCK_MAP
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	z	DYE_COLOR_MAP
c	aup$1	net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$1
	f	[I	a	$SwitchMap$net$minecraft$util$datafix$fixes$ChunkPalettedStorageFix$Direction$Axis
c	aup$a	net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$DataLayer
	m	([B)V	<init>	<init>
		p	1		contents
	m	(I)Z	a	isFirst
		p	1		index
	m	(III)I	a	get
		p	1		x
		p	2		y
		p	3		z
	m	(I)I	b	getPosition
		p	1		index
	f	I	a	SIZE
	f	I	b	NIBBLE_SIZE
	f	[B	c	data
c	aup$b	net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Direction
	m	(Ljava/lang/String;ILaup$b$b;Laup$b$a;)V	<init>	<init>
		p	3		direction
		p	4		axis
	m	()Laup$b$b;	a	getAxisDirection
	m	()Laup$b$a;	b	getAxis
	m	()[Laup$b;	c	$values
	f	Laup$b;	a	DOWN
	f	Laup$b;	b	UP
	f	Laup$b;	c	NORTH
	f	Laup$b;	d	SOUTH
	f	Laup$b;	e	WEST
	f	Laup$b;	f	EAST
	f	Laup$b$a;	g	axis
	f	Laup$b$b;	h	axisDirection
	f	[Laup$b;	i	$VALUES
c	aup$b$a	net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Direction$Axis
	m	()[Laup$b$a;	a	$values
	f	Laup$b$a;	a	X
	f	Laup$b$a;	b	Y
	f	Laup$b$a;	c	Z
	f	[Laup$b$a;	d	$VALUES
c	aup$b$b	net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Direction$AxisDirection
	m	(Ljava/lang/String;II)V	<init>	<init>
		p	3		offset
	m	()I	a	getStep
	m	()[Laup$b$b;	b	$values
	f	Laup$b$b;	a	POSITIVE
	f	Laup$b$b;	b	NEGATIVE
	f	I	c	step
	f	[Laup$b$b;	d	$VALUES
c	aup$c	net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Section
	m	(Lcom/mojang/serialization/Dynamic;)V	<init>	<init>
		p	1		section
	m	()Lcom/mojang/serialization/Dynamic;	a	write
	m	(I)Lcom/mojang/serialization/Dynamic;	a	getBlock
		p	1		index
	m	(II)V	a	addFix
		p	1		section
		p	2		index
	m	(ILcom/mojang/serialization/Dynamic;)V	a	setBlock
		p	1		pos
	m	(Ljava/nio/ByteBuffer;)Laup$a;	a	lambda$upgrade$1
	m	(I)I	b	upgrade
		p	1		sidesToUpgrade
	m	(Ljava/nio/ByteBuffer;)Laup$a;	b	lambda$upgrade$0
	f	I	a	y
	f	Laqv;	b	palette
	f	Ljava/util/List;	c	listTag
	f	Lcom/mojang/serialization/Dynamic;	d	section
	f	Z	e	hasData
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	f	toFix
	f	Lit/unimi/dsi/fastutil/ints/IntList;	g	update
	f	Ljava/util/Set;	h	seen
	f	[I	i	buffer
c	aup$d	net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$UpgradeChunk
	m	(Lcom/mojang/serialization/Dynamic;)V	<init>	<init>
		p	1		chunkTag
	m	()Lcom/mojang/serialization/Dynamic;	a	write
	m	(I)Lcom/mojang/serialization/Dynamic;	a	getBlock
		p	1		packedLocalPos
	m	(ILaup$b;)I	a	relative
		p	0		packedLocalPos
		p	1		direction
	m	(ILcom/mojang/serialization/Dynamic;)V	a	setBlock
		p	1		packedLocalPos
	m	(Lcom/mojang/serialization/Dynamic;)V	a	lambda$new$2
		p	1		sectionTag
	m	(Ljava/util/stream/Stream;)V	a	lambda$new$3
	m	(I)Lcom/mojang/serialization/Dynamic;	b	getBlockEntity
		p	1		packedLocalPos
	m	(Lcom/mojang/serialization/Dynamic;)V	b	lambda$new$0
		p	1		blockEntityTag
	m	(Ljava/util/stream/Stream;)V	b	lambda$new$1
	m	(I)Lcom/mojang/serialization/Dynamic;	c	removeBlockEntity
		p	1		packedLocalPos
	m	(I)Laup$c;	d	getSection
		p	1		packedLocalPos
	f	I	a	sides
	f	[Laup$c;	b	sections
	f	Lcom/mojang/serialization/Dynamic;	c	level
	f	I	d	x
	f	I	e	z
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	f	blockEntities
c	auq	net/minecraft/util/datafix/fixes/ChunkProtoTickListFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(BLcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$9
	m	(I)Z	a	lambda$makeTickList$14
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$12
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$11
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lorg/apache/commons/lang3/mutable/MutableInt;Lcom/mojang/datafixers/OpticFinder;Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)V	a	lambda$makeRule$7
	m	(Lcom/mojang/datafixers/OpticFinder;Lorg/apache/commons/lang3/mutable/MutableInt;Lcom/mojang/datafixers/OpticFinder;Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)V	a	lambda$makeRule$6
	m	(Lcom/mojang/datafixers/Typed;)Ljava/util/List;	a	lambda$makeRule$3
	m	(Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/OpticFinder;)Lauq$a;	a	lambda$makeRule$4
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/lang/String;	a	getBlock
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$10
	m	(Lcom/mojang/serialization/Dynamic;Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;BIILjava/lang/String;Ljava/util/function/Function;)Lcom/mojang/serialization/Dynamic;	a	makeTickList
	m	(Lcom/mojang/serialization/Dynamic;Ljava/util/function/Supplier;IIIILjava/util/function/Function;)Lcom/mojang/serialization/Dynamic;	a	createTick
	m	(Lcom/mojang/serialization/Dynamic;Ljava/util/function/Supplier;IIILjava/util/function/Function;I)Lcom/mojang/serialization/Dynamic;	a	lambda$makeTickList$15
	m	(Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;ILcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)V	a	lambda$makeRule$5
	m	(BLcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$makeRule$8
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/lang/String;	b	getLiquid
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;)I	c	lambda$makeTickList$13
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/util/List;	d	lambda$makeRule$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	e	lambda$makeRule$1
	f	I	a	SECTION_WIDTH
	f	Lcom/google/common/collect/ImmutableSet;	b	ALWAYS_WATERLOGGED
c	auq$a	net/minecraft/util/datafix/fixes/ChunkProtoTickListFix$PoorMansPalettedContainer
	m	()Ljava/util/List;	a	palette
	m	(III)Lcom/mojang/serialization/Dynamic;	a	get
	m	()[J	b	data
	m	(III)I	b	getIndex
	f	J	a	SIZE_BITS
	f	Ljava/util/List;	b	palette
	f	[J	c	data
	f	I	d	bits
	f	J	e	mask
	f	I	f	valuesPerLong
c	aur	net/minecraft/util/datafix/fixes/ChunkRenamesFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	appendChunkName
	m	(Lcom/mojang/datafixers/Typed;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	mergeRemainders
	m	(Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/datafixers/Typed;	a	renameField
		p	1		oldKey
		p	2		newKey
	m	(Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/lang/String;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/Typed;	a	renameFieldHelper
		p	1		oldKey
		p	2		newKey
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/MapLike;)Lcom/mojang/serialization/DataResult;	a	lambda$mergeRemainders$4
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/Dynamic;	a	lambda$mergeRemainders$5
	m	(Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$renameField$3
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$makeRule$0
c	aus	net/minecraft/util/datafix/fixes/ChunkStatusFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
c	aut	net/minecraft/util/datafix/fixes/ChunkStatusFix2
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
	f	Ljava/util/Map;	a	RENAMES_AND_DOWNGRADES
c	auu	net/minecraft/util/datafix/fixes/ChunkStructuresTemplateRenameFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixChildren
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fixChildren$2
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$fixChildren$1
	f	Lcom/google/common/collect/ImmutableMap;	a	RENAMES
c	auv	net/minecraft/util/datafix/fixes/ChunkToProtochunkFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(I)Lit/unimi/dsi/fastutil/shorts/ShortArrayList;	a	lambda$repackTicks$3
		p	0		sectionY
	m	(III)S	a	packOffsetCoordinates
		p	0		x
		p	1		y
		p	2		z
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixChunkData
	m	(Lcom/mojang/serialization/Dynamic;I)Lcom/mojang/serialization/Dynamic;	a	lambda$repackTicks$5
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$repackBiomes$2
	m	(Lcom/mojang/serialization/Dynamic;Lit/unimi/dsi/fastutil/shorts/ShortList;)Lcom/mojang/serialization/Dynamic;	a	lambda$repackTicks$6
	m	(Lcom/mojang/serialization/Dynamic;Ljava/nio/ByteBuffer;)Lcom/mojang/serialization/Dynamic;	a	lambda$repackBiomes$1
	m	(Lcom/mojang/serialization/Dynamic;Ljava/util/stream/Stream;)Lcom/mojang/serialization/Dynamic;	a	lambda$repackTicks$7
	m	(Ljava/util/List;Lcom/mojang/serialization/Dynamic;)V	a	lambda$repackTicks$4
		p	1		tickTag
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	repackBiomes
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	repackTicks
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$makeRule$0
	f	I	a	NUM_SECTIONS
c	auw	net/minecraft/util/datafix/fixes/ColorlessShulkerEntityFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fix$0
c	auy	net/minecraft/util/datafix/fixes/CriteriaRenameFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/UnaryOperator;)V	<init>	<init>
		p	1		outputSchema
		p	2		description
		p	3		advancementId
		p	4		renamer
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
		p	1		typed
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$fixAdvancements$3
		p	1		pair
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixAdvancements
		p	1		advancements
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixAdvancements$1
		p	2		keyString
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fixAdvancements$5
		p	1		advancement
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$fixAdvancements$4
		p	1		criteria
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$fixAdvancements$2
		p	1		key
	f	Ljava/lang/String;	a	name
	f	Ljava/lang/String;	b	advancementId
	f	Ljava/util/function/UnaryOperator;	c	conversions
c	auz	net/minecraft/util/datafix/fixes/DecoratedPotFieldRenameFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	f	Ljava/lang/String;	a	DECORATED_POT_ID
c	ava	net/minecraft/util/datafix/fixes/DropInvalidSignDataFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/lang/String;)V	<init>	<init>
		p	1		outputSchema
		p	2		name
		p	3		blockEntityId
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fix
		p	0		blockEntityData
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Z	a	lambda$fixText$1
		p	1		message
	m	(Ljava/util/List;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;J)Lcom/mojang/serialization/Dynamic;	a	lambda$fixText$0
		p	2		message
		p	3		index
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	fixText
		p	0		textData
	f	Ljava/lang/String;	a	EMPTY_COMPONENT
	f	[Ljava/lang/String;	b	FIELDS_TO_DROP
c	avb	net/minecraft/util/datafix/fixes/DyeItemRenameFix
	f	Ljava/util/Map;	a	RENAMED_IDS
c	avc	net/minecraft/util/datafix/fixes/EffectDurationFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixEffect
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixEffect$3
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	fix
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	updateEntity
	f	Ljava/util/Set;	a	ITEM_TYPES
c	avd	net/minecraft/util/datafix/fixes/EntityArmorStandSilentFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
c	ave	net/minecraft/util/datafix/fixes/EntityBlockStateFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	updateFallingBlock
		p	1		fallingBlock
	m	(Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/datafixers/Typed;	a	updateBlockToBlockState
		p	1		entity
		p	2		oldIdKey
		p	3		oldDataKey
		p	4		newStateKey
	m	(Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/Typed;	a	updateEntity
		p	1		entity
		p	2		entityId
		p	3		function
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$3
		p	1		projectile
	m	(Lcom/mojang/datafixers/util/Pair;)Ljava/lang/Integer;	a	lambda$updateFallingBlock$7
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/lang/Integer;	a	lambda$updateFallingBlock$8
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/util/Either;)Lcom/mojang/datafixers/util/Either;	a	lambda$updateFallingBlock$10
		p	1		state
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/util/Unit;)Ljava/lang/Integer;	a	lambda$updateFallingBlock$9
		p	1		unit
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$updateBlockToBlockState$12
		p	2		state
	m	(Ljava/lang/Integer;)Ljava/lang/Integer;	a	lambda$updateBlockToBlockState$11
		p	0		id
	m	(Ljava/lang/String;)I	a	getBlockId
		p	0		blockId
	m	(Ljava/util/HashMap;)V	a	lambda$static$0
		p	0		map
	m	(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$5
		p	4		entity
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$makeRule$4
		p	1		enderman
	m	(Ljava/lang/Integer;)Ljava/lang/Integer;	b	lambda$updateFallingBlock$6
		p	0		id
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	c	lambda$makeRule$2
		p	1		arrow
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	d	lambda$makeRule$1
		p	1		minecart
	f	Ljava/util/Map;	a	MAP
c	avf	net/minecraft/util/datafix/fixes/EntityBrushableBlockFieldsRenameFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
		p	1		dynamic
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	a	renameField
		p	1		dynamic
		p	2		oldName
		p	3		newName
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$renameField$0
c	avg	net/minecraft/util/datafix/fixes/EntityCatSplitFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair;	a	getNewNameAndTag
		p	1		choice
c	avh	net/minecraft/util/datafix/fixes/EntityCodSalmonFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Ljava/lang/String;)Ljava/lang/String;	a	rename
		p	1		oldName
	f	Ljava/util/Map;	a	RENAMED_IDS
	f	Ljava/util/Map;	b	RENAMED_EGG_IDS
c	avi	net/minecraft/util/datafix/fixes/EntityCustomNameToComponentFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTagCustomName
c	avj	net/minecraft/util/datafix/fixes/EntityElderGuardianSplitFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair;	a	getNewNameAndTag
		p	1		choice
c	avk	net/minecraft/util/datafix/fixes/EntityEquipmentToArmorAndHandFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	()Ljava/lang/IllegalStateException;	a	lambda$cap$0
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$cap$2
	m	(Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/TypeRewriteRule;	a	cap
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$cap$1
c	avl	net/minecraft/util/datafix/fixes/EntityGoatMissingStateFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fix$0
c	avm	net/minecraft/util/datafix/fixes/EntityHealthFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
	f	Ljava/util/Set;	a	ENTITIES
c	avn	net/minecraft/util/datafix/fixes/EntityHorseSaddleFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
c	avo	net/minecraft/util/datafix/fixes/EntityHorseSplitFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	()Ljava/lang/IllegalStateException;	a	lambda$fix$0
	m	(Ljava/lang/String;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/util/Pair;	a	fix
		p	1		choice
c	avp	net/minecraft/util/datafix/fixes/EntityIdFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$2
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$makeRule$3
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$makeRule$1
	m	(Ljava/util/HashMap;)V	a	lambda$static$0
		p	0		map
	f	Ljava/util/Map;	a	ID_MAP
c	avq	net/minecraft/util/datafix/fixes/EntityItemFrameDirectionFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(B)B	a	direction2dTo3d
		p	0		oldDirection
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
c	avr	net/minecraft/util/datafix/fixes/EntityMinecartIdentifiersFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	()Ljava/lang/IllegalStateException;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$makeRule$3
	m	(Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/DataResult;	a	lambda$makeRule$0
	f	Ljava/util/List;	a	MINECART_BY_ID
c	avs	net/minecraft/util/datafix/fixes/EntityPaintingFieldsRenameFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
		p	1		dynamic
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	a	renameField
		p	1		dynamic
		p	2		oldKey
		p	3		newKey
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$renameField$0
		p	3		value
c	avt	net/minecraft/util/datafix/fixes/EntityPaintingItemFrameDirectionFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$5
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$4
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$3
	m	(Lcom/mojang/serialization/Dynamic;ZZ)Lcom/mojang/serialization/Dynamic;	a	doFix
		p	2		isPainting
		p	3		isItemFrame
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$makeRule$0
	f	[[I	a	DIRECTIONS
c	avu	net/minecraft/util/datafix/fixes/EntityPaintingMotiveFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
	m	(Ljava/util/HashMap;)V	a	lambda$static$0
		p	0		map
	f	Ljava/util/Map;	a	MAP
c	avv	net/minecraft/util/datafix/fixes/EntityProjectileOwnerFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(JJ)[I	a	createUUIDArray
		p	0		most
		p	2		least
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	updateProjectiles
	m	(Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/Typed;	a	updateEntity
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	updateOwnerArrow
	m	(Lcom/mojang/serialization/Dynamic;JJ)Lcom/mojang/serialization/Dynamic;	a	setUUID
		p	2		most
		p	4		least
	m	(Ljava/util/function/Function;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$updateEntity$0
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	updateOwnerLlamaSpit
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	updateItemPotion
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	updateOwnerThrowable
c	avw	net/minecraft/util/datafix/fixes/EntityPufferfishRenameFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Ljava/lang/String;)Ljava/lang/String;	a	rename
		p	1		oldName
	f	Ljava/util/Map;	a	RENAMED_IDS
c	avx	net/minecraft/util/datafix/fixes/EntityRavagerRenameFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Ljava/lang/String;)Ljava/lang/String;	a	rename
		p	1		oldName
	f	Ljava/util/Map;	a	RENAMED_IDS
c	avy	net/minecraft/util/datafix/fixes/EntityRedundantChanceTagsFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(ILjava/util/List;)Ljava/lang/Boolean;	a	lambda$isZeroList$3
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
	m	(Lcom/mojang/serialization/OptionalDynamic;I)Z	a	isZeroList
		p	0		listTag
		p	1		expectedLength
	m	(Ljava/lang/Float;)Z	a	lambda$isZeroList$2
		p	0		chance
	f	Lcom/mojang/serialization/Codec;	a	FLOAT_LIST_CODEC
c	avz	net/minecraft/util/datafix/fixes/EntityRenameFix
	m	(Ljava/lang/String;Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		name
		p	2		outputSchema
		p	3		changesType
	m	(Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$0
	m	(Ljava/lang/Object;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/Typed;	a	getEntity
	m	(Ljava/lang/String;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/util/Pair;	a	fix
		p	1		choice
	f	Ljava/lang/String;	a	name
c	awa	net/minecraft/util/datafix/fixes/EntityRidingToPassengersFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	()Ljava/lang/IllegalStateException;	a	lambda$cap$4
	m	(Lcom/mojang/datafixers/schemas/Schema;Lcom/mojang/datafixers/schemas/Schema;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/TypeRewriteRule;	a	cap
		p	1		inputSchema
		p	2		outputSchema
		p	3		inputEntityTreeType
		p	4		outputEntityTreeType
		p	5		inputEntityType
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$cap$6
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$cap$5
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Either;	a	lambda$cap$2
	m	()Ljava/lang/IllegalStateException;	b	lambda$cap$3
	m	()Ljava/lang/IllegalStateException;	c	lambda$cap$1
	m	()Ljava/lang/IllegalStateException;	d	lambda$cap$0
c	awb	net/minecraft/util/datafix/fixes/EntityShulkerColorFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
c	awc	net/minecraft/util/datafix/fixes/EntityShulkerRotationFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/lang/Double;	b	lambda$fixTag$0
c	awd	net/minecraft/util/datafix/fixes/EntitySkeletonSplitFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair;	a	getNewNameAndTag
		p	1		choice
c	awe	net/minecraft/util/datafix/fixes/EntityStringUuidFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
c	awf	net/minecraft/util/datafix/fixes/EntityTheRenameningFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Ljava/lang/String;)Ljava/lang/String;	a	rename
		p	1		oldName
	f	Ljava/util/Map;	a	RENAMED_IDS
	f	Ljava/util/Map;	b	RENAMED_BLOCKS
	f	Ljava/util/Map;	c	RENAMED_ITEMS
	f	Ljava/lang/String;	d	MINECRAFT_BRED
c	awg	net/minecraft/util/datafix/fixes/EntityTippedArrowFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Ljava/lang/String;)Ljava/lang/String;	a	rename
		p	1		oldName
c	awh	net/minecraft/util/datafix/fixes/EntityUUIDFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$updateProjectile$14
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	updateLivingEntity
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$updateLivingEntity$13
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	updateEntityUUID
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$updateLivingEntity$11
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	updatePiglin
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$updateFox$8
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	e	updateEvokerFangs
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	e	lambda$updateFox$7
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	f	updateZombieVillager
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	g	updateAreaEffectCloud
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	h	updateShulkerBullet
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	i	updateItem
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	j	updateFox
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	k	updateHurtBy
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	l	updateAnimalOwner
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	m	updateAnimal
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	n	updateMob
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	o	updateProjectile
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	p	lambda$updateLivingEntity$12
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	q	lambda$updateLivingEntity$10
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	r	lambda$updateMob$9
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	s	lambda$updateFox$6
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	t	lambda$updateFox$5
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	u	lambda$updatePiglin$4
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	v	lambda$updatePiglin$3
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	w	lambda$updatePiglin$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	x	lambda$updatePiglin$1
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ljava/util/Set;	c	ABSTRACT_HORSES
	f	Ljava/util/Set;	d	TAMEABLE_ANIMALS
	f	Ljava/util/Set;	e	ANIMALS
	f	Ljava/util/Set;	f	MOBS
	f	Ljava/util/Set;	g	LIVING_ENTITIES
	f	Ljava/util/Set;	h	PROJECTILES
c	awi	net/minecraft/util/datafix/fixes/EntityVariantFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/IntFunction;)V	<init>	<init>
		p	1		outputSchema
		p	2		name
		p	3		type
		p	4		entityId
		p	5		variantKey
		p	6		variantIntToId
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fix$5
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/Number;)Lcom/mojang/serialization/Dynamic;	a	lambda$fix$3
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/serialization/Dynamic;	a	updateAndRename
	m	(Lcom/mojang/serialization/Dynamic;Ljava/util/function/Function;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;	a	lambda$updateAndRename$2
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;Ljava/lang/String;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object;	a	lambda$updateAndRename$1
	m	(Ljava/util/function/Function;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Ljava/lang/Object;	a	lambda$updateAndRename$0
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fix$4
	f	Ljava/lang/String;	a	fieldName
	f	Ljava/util/function/IntFunction;	b	idConversions
c	awj	net/minecraft/util/datafix/fixes/EntityWolfColorFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fixTag$0
c	awk	net/minecraft/util/datafix/fixes/EntityZombieSplitFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair;	a	getNewNameAndTag
		p	1		choice
c	awl	net/minecraft/util/datafix/fixes/EntityZombieVillagerTypeFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(I)I	a	getVillagerProfession
		p	1		type
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
	f	I	a	PROFESSION_MAX
	f	Lasc;	b	RANDOM
c	awm	net/minecraft/util/datafix/fixes/EntityZombifiedPiglinRenameFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Ljava/lang/String;)Ljava/lang/String;	a	rename
		p	1		oldName
	f	Ljava/util/Map;	a	RENAMED_IDS
c	awn	net/minecraft/util/datafix/fixes/FeatureFlagRemoveFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/Set;)V	<init>	<init>
		p	1		outputSchema
		p	2		name
		p	3		featureToggleIds
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
		p	1		dynamic
	m	(Ljava/util/List;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixTag$3
		p	3		enabledFeatures
	m	(Ljava/util/List;Lcom/mojang/serialization/Dynamic;Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	a	lambda$fixTag$2
		p	3		stream
	m	(Ljava/util/List;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Z	b	lambda$fixTag$1
		p	3		enabledFeature
	f	Ljava/lang/String;	a	name
	f	Ljava/util/Set;	b	flagsToRemove
c	awo	net/minecraft/util/datafix/fixes/FilteredBooksFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixItemStackTag
		p	1		dynamic
	m	(Ljava/lang/String;)Z	a	lambda$new$0
		p	0		itemId
c	awp	net/minecraft/util/datafix/fixes/FilteredSignsFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fix$0
		p	0		blockEntity
c	awq	net/minecraft/util/datafix/fixes/ForcePoiRebuild
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$cap$3
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	cap
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	b	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$cap$4
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$cap$2
c	awr	net/minecraft/util/datafix/fixes/FurnaceRecipeFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$cap$3
	m	(Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/TypeRewriteRule;	a	cap
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	updateFurnaceContents
	m	(Lcom/mojang/datafixers/types/Type;Ljava/util/List;ILcom/mojang/serialization/Dynamic;)V	a	lambda$updateFurnaceContents$5
	m	(Ljava/util/List;ILcom/mojang/datafixers/util/Pair;)V	a	lambda$updateFurnaceContents$4
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$cap$2
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	c	lambda$cap$1
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	d	lambda$cap$0
c	aws	net/minecraft/util/datafix/fixes/GoatHornIdFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixItemStackTag
		p	1		dynamic
	m	(Ljava/lang/String;)Z	a	lambda$new$0
		p	0		itemId
	f	[Ljava/lang/String;	a	INSTRUMENTS
c	awt	net/minecraft/util/datafix/fixes/GossipUUIDFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)V	<init>	<init>
		p	1		outputSchema
		p	2		choiceType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fix$3
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	a	lambda$fix$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fix$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$fix$0
c	awu	net/minecraft/util/datafix/fixes/HeightmapRenamingFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fix
c	awv	net/minecraft/util/datafix/fixes/IglooMetadataRemovalFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	a	lambda$removeIglooPieces$3
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	removeIglooPieces
	m	(Ljava/util/stream/Stream;)Ljava/lang/Boolean;	b	lambda$fixTag$1
	m	(Lcom/mojang/serialization/Dynamic;)Z	c	isIglooPiece
	m	(Lcom/mojang/serialization/Dynamic;)Z	d	lambda$removeIglooPieces$2
c	aww	net/minecraft/util/datafix/fixes/ItemBannerColorFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
c	awx	net/minecraft/util/datafix/fixes/ItemCustomNameToComponentFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
c	awy	net/minecraft/util/datafix/fixes/ItemIdFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(I)Ljava/lang/String;	a	getItem
		p	0		id
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$4
	m	(Lcom/mojang/datafixers/util/Either;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$3
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$2
	m	(Lit/unimi/dsi/fastutil/ints/Int2ObjectOpenHashMap;)V	a	lambda$static$0
		p	0		map
	m	(Ljava/lang/Integer;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$1
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	a	ITEM_NAMES
c	awz	net/minecraft/util/datafix/fixes/ItemLoreFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$4
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$3
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixLoreList$5
	m	(Ljava/lang/String;)Ljava/lang/String;	a	fixLoreEntry
		p	0		string
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	a	fixLoreList
		p	0		nbt
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$makeRule$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$makeRule$0
c	axa	net/minecraft/util/datafix/fixes/ItemPotionFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	([Ljava/lang/String;)V	a	lambda$static$0
	f	Ljava/lang/String;	a	DEFAULT
	f	I	b	SPLASH
	f	[Ljava/lang/String;	c	POTIONS
c	axb	net/minecraft/util/datafix/fixes/ItemRemoveBlockEntityTagFix
	m	(Lcom/mojang/datafixers/schemas/Schema;ZLjava/util/Set;)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
		p	3		itemIds
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
		p	4		typed
	f	Ljava/util/Set;	a	items
c	axc	net/minecraft/util/datafix/fixes/ItemRenameFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)V	<init>	<init>
		p	1		outputSchema
		p	2		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/DataFix;	a	create
		p	0		outputSchema
		p	1		name
		p	2		rename
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$0
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$makeRule$1
	m	(Ljava/lang/String;)Ljava/lang/String;	a	fixItem
		p	1		input
	f	Ljava/lang/String;	a	name
c	axc$1	net/minecraft/util/datafix/fixes/ItemRenameFix$1
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Function;)V	<init>	<init>
		p	1		outputSchema
		p	2		name
	m	(Ljava/lang/String;)Ljava/lang/String;	a	fixItem
		p	1		input
	f	Ljava/util/function/Function;	a	val$fixItem
c	axd	net/minecraft/util/datafix/fixes/ItemShulkerBoxColorFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
	f	[Ljava/lang/String;	a	NAMES_BY_COLOR
c	axe	net/minecraft/util/datafix/fixes/ItemSpawnEggFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	()Ljava/lang/IllegalStateException;	a	lambda$makeRule$5
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$6
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Ljava/util/Optional;	a	lambda$makeRule$3
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/DataResult;	a	lambda$makeRule$4
	m	([Ljava/lang/String;)V	a	lambda$static$0
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Ljava/util/Optional;	b	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Ljava/util/Optional;	c	lambda$makeRule$1
	f	[Ljava/lang/String;	a	ID_TO_ENTITY
c	axf	net/minecraft/util/datafix/fixes/ItemStackEnchantmentNamesFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
	m	(Lit/unimi/dsi/fastutil/ints/Int2ObjectOpenHashMap;)V	a	lambda$static$0
		p	0		map
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	a	lambda$fixTag$6
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fixTag$7
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	b	lambda$fixTag$4
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$fixTag$5
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$fixTag$3
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	a	MAP
c	axg	net/minecraft/util/datafix/fixes/ItemStackMapIdFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
c	axh	net/minecraft/util/datafix/fixes/ItemStackSpawnEggFix
	m	(Lcom/mojang/datafixers/schemas/Schema;ZLjava/lang/String;)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
		p	3		spawnEggId
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
		p	5		stack
	m	(Ljava/util/HashMap;)V	a	lambda$static$0
		p	0		map
	f	Ljava/lang/String;	a	itemType
	f	Ljava/util/Map;	b	MAP
c	axi	net/minecraft/util/datafix/fixes/ItemStackTagFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Predicate;)V	<init>	<init>
		p	1		outputSchema
		p	2		name
		p	3		itemIdPredicate
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
		p	3		typed
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
		p	1		nbt
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixItemStackTag
		p	1		dynamic
	f	Ljava/lang/String;	a	name
	f	Ljava/util/function/Predicate;	b	idFilter
c	axj	net/minecraft/util/datafix/fixes/ItemStackTheFlatteningFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$static$1
	m	(Ljava/lang/String;I)Ljava/lang/String;	a	updateItem
		p	0		originalName
		p	1		damage
	m	(Ljava/util/HashMap;)V	a	lambda$static$0
		p	0		map
	f	Ljava/util/Map;	a	MAP
	f	Ljava/util/Set;	b	IDS
	f	Ljava/util/Set;	c	DAMAGE_IDS
c	axk	net/minecraft/util/datafix/fixes/ItemStackUUIDFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$3
	m	(Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/util/Pair;)Ljava/lang/Boolean;	a	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$updateAttributeModifiers$5
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	updateAttributeModifiers
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	updateSkullOwner
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$updateSkullOwner$6
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	e	lambda$updateAttributeModifiers$4
c	axl	net/minecraft/util/datafix/fixes/ItemWaterPotionFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
c	axm	net/minecraft/util/datafix/fixes/ItemWrittenBookPagesStrictJsonFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$4
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$3
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixTag$2
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	a	lambda$fixTag$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fixTag$0
c	axn	net/minecraft/util/datafix/fixes/JigsawPropertiesFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
c	axo	net/minecraft/util/datafix/fixes/JigsawRotationFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fix
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fix$0
	f	Ljava/util/Map;	a	RENAMES
c	axp	net/minecraft/util/datafix/fixes/LeavesFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(I)I	a	getX
		p	1		packedLocalPos
	m	(III)I	a	getIndex
		p	0		localX
		p	1		localY
		p	2		localZ
	m	(Laxp$a;)Laxp$a;	a	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$7
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$6
	m	(Lcom/mojang/datafixers/OpticFinder;[ILcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$4
	m	(Lcom/mojang/datafixers/Typed;)Laxp$a;	a	lambda$makeRule$1
	m	(Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$3
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;)V	a	lambda$static$0
		p	0		map
	m	(ZZZZ)I	a	getSideMask
		p	0		westernmost
		p	1		easternmost
		p	2		northernmost
		p	3		southernmost
	m	([ILcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$5
	m	(I)I	b	getY
		p	1		packedLocalPos
	m	(I)I	c	getZ
		p	1		packedLocalPos
	f	I	a	NORTH_WEST_MASK
	f	I	b	WEST_MASK
	f	I	c	SOUTH_WEST_MASK
	f	I	d	SOUTH_MASK
	f	I	e	SOUTH_EAST_MASK
	f	I	f	EAST_MASK
	f	I	g	NORTH_EAST_MASK
	f	I	h	NORTH_MASK
	f	[[I	i	DIRECTIONS
	f	I	j	DECAY_DISTANCE
	f	I	k	SIZE_BITS
	f	I	l	SIZE
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	m	LEAVES
	f	Ljava/util/Set;	n	LOGS
c	axp$a	net/minecraft/util/datafix/fixes/LeavesFix$LeavesSection
	m	()Z	a	skippable
	m	(I)Z	a	isLog
	m	(III)V	a	setDistance
		p	3		distance
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;ZI)Lcom/mojang/serialization/Dynamic;	a	makeLeafTag
		p	1		tag
		p	2		name
		p	3		persistent
		p	4		distance
	m	(I)Z	b	isLeaf
	m	(I)I	d	getDistance
	f	Ljava/lang/String;	h	PERSISTENT
	f	Ljava/lang/String;	i	DECAYABLE
	f	Ljava/lang/String;	j	DISTANCE
	f	Lit/unimi/dsi/fastutil/ints/IntSet;	k	leaveIds
	f	Lit/unimi/dsi/fastutil/ints/IntSet;	l	logIds
	f	Lit/unimi/dsi/fastutil/ints/Int2IntMap;	m	stateToIdMap
c	axp$b	net/minecraft/util/datafix/fixes/LeavesFix$Section
	m	()Z	a	skippable
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	write
	m	(Lcom/mojang/serialization/Dynamic;)V	a	readStorage
	m	(Ljava/lang/String;ZI)I	a	getStateId
		p	1		leafBlockName
		p	2		persistent
		p	3		distance
	m	(Ljava/util/List;)Ljava/util/List;	a	lambda$new$0
	m	()Z	b	isSkippable
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair;	b	lambda$write$2
	m	()I	c	getIndex
	m	(I)I	c	getBlock
		p	1		index
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$write$1
	f	Ljava/lang/String;	a	BLOCK_STATES_TAG
	f	Ljava/lang/String;	b	NAME_TAG
	f	Ljava/lang/String;	c	PROPERTIES_TAG
	f	Lcom/mojang/datafixers/OpticFinder;	d	paletteFinder
	f	Ljava/util/List;	e	palette
	f	I	f	index
	f	Latc;	g	storage
	f	Lcom/mojang/datafixers/types/Type;	h	blockStateType
c	axq	net/minecraft/util/datafix/fixes/LegacyDragonFightFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
		p	0		typed
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
		p	0		levelData
c	axr	net/minecraft/util/datafix/fixes/LevelDataGeneratorOptionsFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	()Ljava/lang/IllegalStateException;	a	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$3
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/DataResult;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/DynamicOps;Lcom/mojang/datafixers/util/Pair;)Ljava/lang/Object;	a	lambda$convert$4
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair;	a	lambda$convert$6
	m	(Ljava/lang/String;)Lcom/mojang/datafixers/util/Pair;	a	getLayerInfoFromString
		p	0		layer
	m	(Ljava/lang/String;Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic;	a	convert
		p	0		generatorOptions
	m	(Ljava/util/HashMap;)V	a	lambda$static$0
		p	0		map
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair;	b	lambda$convert$5
	m	(Ljava/lang/String;)Ljava/util/List;	b	getLayersInfoFromString
		p	0		layers
	f	Ljava/util/Map;	a	MAP
	f	Ljava/lang/String;	b	GENERATOR_OPTIONS
c	axs	net/minecraft/util/datafix/fixes/LevelFlatGeneratorInfoFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/google/common/base/Splitter;ILjava/lang/String;)Ljava/lang/String;	a	lambda$fixString$2
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fix
	m	(Ljava/lang/String;)Ljava/lang/String;	a	fixString
		p	1		generatorOptions
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fix$1
	f	Ljava/lang/String;	a	DEFAULT
	f	Ljava/lang/String;	b	GENERATOR_OPTIONS
	f	Lcom/google/common/base/Splitter;	c	SPLITTER
	f	Lcom/google/common/base/Splitter;	d	LAYER_SPLITTER
	f	Lcom/google/common/base/Splitter;	e	OLD_AMOUNT_SPLITTER
	f	Lcom/google/common/base/Splitter;	f	AMOUNT_SPLITTER
	f	Lcom/google/common/base/Splitter;	g	BLOCK_SPLITTER
c	axt	net/minecraft/util/datafix/fixes/LevelUUIDFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$updateCustomBossEvents$11
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$updateCustomBossEvents$9
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	b	lambda$updateDragonFight$5
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	updateWanderingTrader
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	updateDragonFight
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	updateCustomBossEvents
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	e	lambda$updateCustomBossEvents$12
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	f	lambda$updateCustomBossEvents$10
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	g	lambda$updateCustomBossEvents$8
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	h	lambda$updateCustomBossEvents$7
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	i	lambda$updateDragonFight$6
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	j	lambda$updateDragonFight$4
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	k	lambda$updateDragonFight$3
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	l	lambda$makeRule$0
	f	Lorg/slf4j/Logger;	b	LOGGER
c	axu	net/minecraft/util/datafix/fixes/MapIdFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
c	axv	net/minecraft/util/datafix/fixes/MemoryExpiryDataFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)V	<init>	<init>
		p	1		outputSchema
		p	2		choiceName
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	updateMemoryEntry
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	updateBrain
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	updateMemories
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	wrapMemoryValue
c	axw	net/minecraft/util/datafix/fixes/MissingDimensionFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/FieldFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/templates/CompoundList$CompoundListType;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/types/templates/CompoundList$CompoundListType;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/types/templates/CompoundList$CompoundListType;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/Type;	a	flatType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	recreateSettings
	m	(Ljava/lang/String;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/types/Type;	a	fields
	m	(Ljava/lang/String;Lcom/mojang/datafixers/types/Type;Ljava/lang/String;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/types/Type;	a	optionalFields
	m	(Ljava/lang/String;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/types/Type;	b	optionalFields
c	axx	net/minecraft/util/datafix/fixes/MobEffectIdFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	a	blockEntityFixer
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$itemStackFixer$12
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$itemStackFixer$11
	m	(Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/Typed;	a	updateNamedChoice
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	updateMobEffectInstance
		p	0		effectDynamic
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	updateSuspiciousStewEntry
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Ljava/util/Optional;	a	getAndConvertMobEffectId
		p	1		idKey
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	a	updateMobEffectIdField
		p	1		oldKey
		p	3		newKey
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	a	renameField
		p	1		oldKey
		p	2		newKey
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;Ljava/util/Optional;)Lcom/mojang/serialization/Dynamic;	a	replaceField
		p	1		oldKey
		p	2		newKey
		p	3		value
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/util/Optional;)Lcom/mojang/serialization/Dynamic;	a	setFieldIfPresent
		p	1		key
		p	2		value
	m	(Lcom/mojang/serialization/Dynamic;Ljava/util/stream/Stream;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixSuspiciousStewTag$8
	m	(Lit/unimi/dsi/fastutil/ints/Int2ObjectOpenHashMap;)V	a	lambda$static$0
		p	0		idMap
	m	(Ljava/lang/Number;)Ljava/lang/String;	a	lambda$getAndConvertMobEffectId$1
		p	0		oldId
	m	(Ljava/util/function/Function;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$updateNamedChoice$3
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	b	entityFixer
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$itemStackFixer$9
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	updateSuspiciousStewEntry
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	b	updateMobEffectIdField
		p	1		oldKey
		p	2		newKey
	m	(Lcom/mojang/serialization/Dynamic;Ljava/util/stream/Stream;)Lcom/mojang/serialization/Dynamic;	b	lambda$updateMobEffectInstanceList$2
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	c	playerFixer
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	c	lambda$playerFixer$7
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	fixMooshroomTag
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	c	updateMobEffectInstanceList
		p	1		oldEffectListKey
		p	2		newEffectListKey
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	d	itemStackFixer
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	d	lambda$entityFixer$6
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	fixArrowTag
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	e	lambda$blockEntityFixer$5
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	e	fixAreaEffectCloudTag
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	f	updateLivingEntityTag
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	g	fixSuspiciousStewTag
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	h	lambda$itemStackFixer$10
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	i	lambda$blockEntityFixer$4
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	a	ID_MAP
	f	Ljava/util/Set;	b	MOB_EFFECT_INSTANCE_CARRIER_ITEMS
c	axy	net/minecraft/util/datafix/fixes/MobSpawnerEntityIdentifiersFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fix
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fix$0
c	axz	net/minecraft/util/datafix/fixes/NamedEntityFix
	m	(Lcom/mojang/datafixers/schemas/Schema;ZLjava/lang/String;Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
		p	3		name
		p	4		type
		p	5		choiceName
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
	f	Ljava/lang/String;	a	name
	f	Ljava/lang/String;	b	entityName
	f	Lcom/mojang/datafixers/DSL$TypeReference;	c	type
c	aya	net/minecraft/util/datafix/fixes/NamespacedTypeRenameFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Lcom/mojang/datafixers/DSL$TypeReference;Ljava/util/function/UnaryOperator;)V	<init>	<init>
		p	1		outputSchema
		p	2		name
		p	3		typeReference
		p	4		renamer
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$0
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$makeRule$1
	f	Ljava/lang/String;	a	name
	f	Lcom/mojang/datafixers/DSL$TypeReference;	b	type
	f	Ljava/util/function/UnaryOperator;	c	renamer
c	ayb	net/minecraft/util/datafix/fixes/NewVillageFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$cap$10
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$cap$9
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$cap$8
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$cap$4
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$cap$13
	m	(Lcom/mojang/datafixers/types/templates/CompoundList$CompoundListType;)Lcom/mojang/datafixers/TypeRewriteRule;	a	cap
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$cap$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$cap$12
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$cap$5
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$cap$1
	m	(Ljava/util/List;)Ljava/util/List;	a	lambda$cap$3
	m	(Lcom/mojang/datafixers/util/Pair;)Z	b	lambda$cap$0
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$cap$11
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$cap$7
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$cap$6
c	ayc	net/minecraft/util/datafix/fixes/ObjectiveDisplayNameFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$3
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$2
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$1
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$makeRule$0
c	ayd	net/minecraft/util/datafix/fixes/ObjectiveRenderTypeFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
		p	0		typed
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
		p	0		objective
	m	(Ljava/lang/String;)Ljava/lang/String;	a	getRenderType
		p	0		oldName
c	aye	net/minecraft/util/datafix/fixes/OminousBannerBlockEntityRenameFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
c	ayf	net/minecraft/util/datafix/fixes/OminousBannerRenameFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixItemStackTag
		p	1		dynamic
	m	(Ljava/lang/String;)Z	a	lambda$new$0
		p	0		itemId
c	ayg	net/minecraft/util/datafix/fixes/OptionsAccessibilityOnboardFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
		p	0		typed
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
		p	0		options
c	ayh	net/minecraft/util/datafix/fixes/OptionsAddTextBackgroundFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
	m	(Ljava/lang/String;)D	a	calculateBackground
		p	1		chatOpacity
c	ayi	net/minecraft/util/datafix/fixes/OptionsAmbientOcclusionFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
	m	(Ljava/lang/String;)Ljava/lang/String;	a	updateValue
		p	0		oldValue
c	ayj	net/minecraft/util/datafix/fixes/OptionsForceVBOFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
c	ayk	net/minecraft/util/datafix/fixes/OptionsKeyLwjgl3Fix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$4
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$3
	m	(Lcom/mojang/serialization/Dynamic;Ljava/util/Map;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$2
	m	(Lit/unimi/dsi/fastutil/ints/Int2ObjectOpenHashMap;)V	a	lambda$static$0
		p	0		map
	m	(Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$1
	f	Ljava/lang/String;	a	KEY_UNKNOWN
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	b	MAP
c	ayl	net/minecraft/util/datafix/fixes/OptionsKeyTranslationFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$3
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$2
	m	(Lcom/mojang/serialization/Dynamic;Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;Ljava/util/Map;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$1
c	aym	net/minecraft/util/datafix/fixes/OptionsLowerCaseLanguageFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
c	ayn	net/minecraft/util/datafix/fixes/OptionsProgrammerArtFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
		p	1		typed
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixList
		p	1		option
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixList$2
		p	1		value
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$makeRule$0
		p	1		options
c	ayo	net/minecraft/util/datafix/fixes/OptionsRenameFieldFix
	m	(Lcom/mojang/datafixers/schemas/Schema;ZLjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
		p	3		name
		p	4		oldName
		p	5		newName
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
	f	Ljava/lang/String;	a	fixName
	f	Ljava/lang/String;	b	fieldFrom
	f	Ljava/lang/String;	c	fieldTo
c	ayp	net/minecraft/util/datafix/fixes/OverreachingTickFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(IILcom/mojang/serialization/Dynamic;)Z	a	lambda$extractOverreachingTicks$2
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;IILjava/util/Optional;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	a	extractOverreachingTicks
		p	0		chunkTag
		p	1		chunkX
		p	2		chunkZ
		p	3		fluidTicks
		p	4		upgradeDataKey
	m	(Ljava/util/Optional;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
		p	1		chunkTag
c	ayq	net/minecraft/util/datafix/fixes/PlayerUUIDFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$3
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$makeRule$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$makeRule$0
c	ayr	net/minecraft/util/datafix/fixes/PoiTypeRemoveFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Predicate;)V	<init>	<init>
		p	1		outputSchema
		p	2		name
		p	3		removePredicate
	m	(Lcom/mojang/serialization/Dynamic;)Z	a	shouldKeepRecord
		p	1		dynamic
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	a	processRecords
		p	1		dynamics
	f	Ljava/util/function/Predicate;	a	typesToKeep
c	ays	net/minecraft/util/datafix/fixes/PoiTypeRenameFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Function;)V	<init>	<init>
		p	1		outputSchema
		p	2		name
		p	3		renamer
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$processRecords$1
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	a	processRecords
		p	1		dynamics
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$processRecords$0
	f	Ljava/util/function/Function;	a	renamer
c	ayt	net/minecraft/util/datafix/fixes/RandomSequenceSettingsFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
		p	0		typed
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$1
		p	0		randomSequencesData
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$makeRule$0
		p	0		data
c	ayu	net/minecraft/util/datafix/fixes/RecipesFix
	f	Ljava/util/Map;	a	RECIPES
c	ayv	net/minecraft/util/datafix/fixes/RecipesRenameningFix
	f	Ljava/util/Map;	a	RECIPES
c	ayw	net/minecraft/util/datafix/fixes/RedstoneWireConnectionsFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	updateRedstoneConnections
	m	(Ljava/lang/String;)Z	a	isConnected
	m	(Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$updateRedstoneConnections$4
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$updateRedstoneConnections$5
	m	(Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$updateRedstoneConnections$3
	m	(Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$updateRedstoneConnections$2
	m	(Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$updateRedstoneConnections$1
c	ayx	net/minecraft/util/datafix/fixes/References
	m	()Ljava/lang/String;	A	lambda$static$8
	m	()Ljava/lang/String;	B	lambda$static$7
	m	()Ljava/lang/String;	C	lambda$static$6
	m	()Ljava/lang/String;	D	lambda$static$5
	m	()Ljava/lang/String;	E	lambda$static$4
	m	()Ljava/lang/String;	F	lambda$static$3
	m	()Ljava/lang/String;	G	lambda$static$2
	m	()Ljava/lang/String;	H	lambda$static$1
	m	()Ljava/lang/String;	I	lambda$static$0
	m	()Ljava/lang/String;	a	lambda$static$34
	m	()Ljava/lang/String;	b	lambda$static$33
	m	()Ljava/lang/String;	c	lambda$static$32
	m	()Ljava/lang/String;	d	lambda$static$31
	m	()Ljava/lang/String;	e	lambda$static$30
	m	()Ljava/lang/String;	f	lambda$static$29
	m	()Ljava/lang/String;	g	lambda$static$28
	m	()Ljava/lang/String;	h	lambda$static$27
	m	()Ljava/lang/String;	i	lambda$static$26
	m	()Ljava/lang/String;	j	lambda$static$25
	m	()Ljava/lang/String;	k	lambda$static$24
	m	()Ljava/lang/String;	l	lambda$static$23
	m	()Ljava/lang/String;	m	lambda$static$22
	m	()Ljava/lang/String;	n	lambda$static$21
	m	()Ljava/lang/String;	o	lambda$static$20
	m	()Ljava/lang/String;	p	lambda$static$19
	m	()Ljava/lang/String;	q	lambda$static$18
	m	()Ljava/lang/String;	r	lambda$static$17
	m	()Ljava/lang/String;	s	lambda$static$16
	m	()Ljava/lang/String;	t	lambda$static$15
	m	()Ljava/lang/String;	u	lambda$static$14
	m	()Ljava/lang/String;	v	lambda$static$13
	m	()Ljava/lang/String;	w	lambda$static$12
	m	()Ljava/lang/String;	x	lambda$static$11
	m	()Ljava/lang/String;	y	lambda$static$10
	m	()Ljava/lang/String;	z	lambda$static$9
	f	Lcom/mojang/datafixers/DSL$TypeReference;	A	GAME_EVENT_NAME
	f	Lcom/mojang/datafixers/DSL$TypeReference;	B	UNTAGGED_SPAWNER
	f	Lcom/mojang/datafixers/DSL$TypeReference;	C	STRUCTURE_FEATURE
	f	Lcom/mojang/datafixers/DSL$TypeReference;	D	OBJECTIVE
	f	Lcom/mojang/datafixers/DSL$TypeReference;	E	TEAM
	f	Lcom/mojang/datafixers/DSL$TypeReference;	F	RECIPE
	f	Lcom/mojang/datafixers/DSL$TypeReference;	G	BIOME
	f	Lcom/mojang/datafixers/DSL$TypeReference;	H	MULTI_NOISE_BIOME_SOURCE_PARAMETER_LIST
	f	Lcom/mojang/datafixers/DSL$TypeReference;	I	WORLD_GEN_SETTINGS
	f	Lcom/mojang/datafixers/DSL$TypeReference;	a	LEVEL
	f	Lcom/mojang/datafixers/DSL$TypeReference;	b	PLAYER
	f	Lcom/mojang/datafixers/DSL$TypeReference;	c	CHUNK
	f	Lcom/mojang/datafixers/DSL$TypeReference;	d	HOTBAR
	f	Lcom/mojang/datafixers/DSL$TypeReference;	e	OPTIONS
	f	Lcom/mojang/datafixers/DSL$TypeReference;	f	STRUCTURE
	f	Lcom/mojang/datafixers/DSL$TypeReference;	g	STATS
	f	Lcom/mojang/datafixers/DSL$TypeReference;	h	SAVED_DATA_COMMAND_STORAGE
	f	Lcom/mojang/datafixers/DSL$TypeReference;	i	SAVED_DATA_FORCED_CHUNKS
	f	Lcom/mojang/datafixers/DSL$TypeReference;	j	SAVED_DATA_MAP_DATA
	f	Lcom/mojang/datafixers/DSL$TypeReference;	k	SAVED_DATA_MAP_INDEX
	f	Lcom/mojang/datafixers/DSL$TypeReference;	l	SAVED_DATA_RAIDS
	f	Lcom/mojang/datafixers/DSL$TypeReference;	m	SAVED_DATA_RANDOM_SEQUENCES
	f	Lcom/mojang/datafixers/DSL$TypeReference;	n	SAVED_DATA_STRUCTURE_FEATURE_INDICES
	f	Lcom/mojang/datafixers/DSL$TypeReference;	o	SAVED_DATA_SCOREBOARD
	f	Lcom/mojang/datafixers/DSL$TypeReference;	p	ADVANCEMENTS
	f	Lcom/mojang/datafixers/DSL$TypeReference;	q	POI_CHUNK
	f	Lcom/mojang/datafixers/DSL$TypeReference;	r	ENTITY_CHUNK
	f	Lcom/mojang/datafixers/DSL$TypeReference;	s	BLOCK_ENTITY
	f	Lcom/mojang/datafixers/DSL$TypeReference;	t	ITEM_STACK
	f	Lcom/mojang/datafixers/DSL$TypeReference;	u	BLOCK_STATE
	f	Lcom/mojang/datafixers/DSL$TypeReference;	v	ENTITY_NAME
	f	Lcom/mojang/datafixers/DSL$TypeReference;	w	ENTITY_TREE
	f	Lcom/mojang/datafixers/DSL$TypeReference;	x	ENTITY
	f	Lcom/mojang/datafixers/DSL$TypeReference;	y	BLOCK_NAME
	f	Lcom/mojang/datafixers/DSL$TypeReference;	z	ITEM_NAME
c	ayy	net/minecraft/util/datafix/fixes/RemapChunkStatusFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/UnaryOperator;)V	<init>	<init>
		p	1		outputSchema
		p	2		name
		p	3		mapper
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
		p	1		typed
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixStatus
		p	1		status
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$makeRule$1
		p	1		chunk
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$makeRule$0
	f	Ljava/lang/String;	a	name
	f	Ljava/util/function/UnaryOperator;	b	mapper
c	ayz	net/minecraft/util/datafix/fixes/RemoveGolemGossipFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixValue
		p	0		villagerData
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixValue$1
	m	(Lcom/mojang/serialization/Dynamic;)Z	b	lambda$fixValue$0
c	aza	net/minecraft/util/datafix/fixes/RenamedCoralFansFix
	f	Ljava/util/Map;	a	RENAMED_IDS
c	azb	net/minecraft/util/datafix/fixes/RenamedCoralFix
	f	Ljava/util/Map;	a	RENAMED_IDS
c	azc	net/minecraft/util/datafix/fixes/ReorganizePoi
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	cap
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$makeRule$1
c	azd	net/minecraft/util/datafix/fixes/SavedDataFeaturePoolElementFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(I)Ljava/lang/String;	a	lambda$get$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixFeature
		p	0		feature
	m	(Lcom/mojang/serialization/Dynamic;[Ljava/lang/String;)Lcom/mojang/serialization/OptionalDynamic;	a	get
		p	0		root
		p	1		pathParts
	m	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional;	a	getReplacement
		p	0		type
		p	1		name
		p	2		stateProviderType
		p	3		stateProviderStateName
		p	4		stateProviderFirstEntryName
		p	5		foliagePlacerType
		p	6		leavesProviderStateName
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	a	updateChildren
		p	0		children
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	fixTag
		p	0		structureFeature
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	updateChildren
		p	0		children
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$updateChildren$1
		p	0		child
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	e	lambda$updateChildren$0
		p	0		poolElement
	f	Ljava/util/regex/Pattern;	a	INDEX_PATTERN
	f	Ljava/util/Set;	b	PIECE_TYPE
	f	Ljava/util/Set;	c	FEATURES
c	aze	net/minecraft/util/datafix/fixes/SavedDataUUIDFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$7
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$makeRule$6
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$makeRule$5
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$makeRule$4
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	e	lambda$makeRule$3
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	f	lambda$makeRule$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	g	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	h	lambda$makeRule$0
	f	Lorg/slf4j/Logger;	b	LOGGER
c	azf	net/minecraft/util/datafix/fixes/ScoreboardDisplaySlotFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$5
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$4
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$3
	m	(Ljava/lang/String;)Ljava/lang/String;	a	rename
		p	0		oldName
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$makeRule$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$makeRule$0
	f	Ljava/util/Map;	a	SLOT_RENAMES
c	azg	net/minecraft/util/datafix/fixes/SimpleEntityRenameFix
	m	(Ljava/lang/String;Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		name
		p	2		outputSchema
		p	3		changesType
	m	(Ljava/lang/String;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/util/Pair;	a	fix
		p	1		choice
	m	(Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair;	a	getNewNameAndTag
		p	1		choice
c	azh	net/minecraft/util/datafix/fixes/SimplestEntityRenameFix
	m	(Ljava/lang/String;Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		name
		p	2		outputSchema
		p	3		changesType
	m	(Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Ljava/lang/String;)Ljava/lang/String;	a	lambda$makeRule$0
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$3
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$makeRule$4
	m	(Ljava/lang/String;)Ljava/lang/String;	a	rename
		p	1		oldName
	f	Ljava/lang/String;	a	name
c	azi	net/minecraft/util/datafix/fixes/SpawnerDataFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	wrapEntityToSpawnData
		p	1		spawnDataType
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/datafixers/util/Pair;	a	lambda$wrapSpawnPotentialsToWeightedEntries$3
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	wrapSpawnPotentialsToWeightedEntries
		p	1		spawnPotentialsType
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	c	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	d	lambda$makeRule$0
c	azj	net/minecraft/util/datafix/fixes/StatsCounterFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	a	makeStatFixer
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeObjectiveFixer$6
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeObjectiveFixer$4
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeStatFixer$0
	m	(Ljava/lang/String;)Lazj$a;	a	unpackLegacyKey
		p	0		old
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	b	makeObjectiveFixer
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$makeStatFixer$2
	m	(Ljava/lang/String;)Ljava/lang/String;	b	upgradeItem
		p	0		id
	m	()Ljava/lang/IllegalStateException;	c	lambda$makeObjectiveFixer$5
	m	(Ljava/lang/String;)Ljava/lang/String;	c	upgradeBlock
		p	0		id
	m	()Ljava/lang/IllegalStateException;	d	lambda$makeStatFixer$1
	m	(Ljava/lang/String;)Ljava/lang/String;	d	lambda$makeObjectiveFixer$3
		p	0		criteriaName
	f	Ljava/util/Set;	a	SPECIAL_OBJECTIVE_CRITERIA
	f	Ljava/util/Set;	b	SKIP
	f	Ljava/util/Map;	c	CUSTOM_MAP
	f	Ljava/lang/String;	d	BLOCK_KEY
	f	Ljava/lang/String;	e	NEW_BLOCK_KEY
	f	Ljava/util/Map;	f	ITEM_KEYS
	f	Ljava/util/Map;	g	ENTITY_KEYS
	f	Ljava/util/Map;	h	ENTITIES
	f	Ljava/lang/String;	i	NEW_CUSTOM_KEY
c	azj$a	net/minecraft/util/datafix/fixes/StatsCounterFix$StatType
	m	()Ljava/lang/String;	a	type
	m	()Ljava/lang/String;	b	typeKey
	f	Ljava/lang/String;	a	type
	f	Ljava/lang/String;	b	typeKey
c	azk	net/minecraft/util/datafix/fixes/StatsRenameFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/Map;)V	<init>	<init>
		p	1		outputSchema
		p	2		name
		p	3		replacements
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	a	createCriteriaRule
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$createStatRule$8
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$createStatRule$7
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$createStatRule$6
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$createStatRule$5
		p	1		old
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	b	createStatRule
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$createCriteriaRule$4
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$createCriteriaRule$3
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$createCriteriaRule$2
	m	(Ljava/lang/String;)Ljava/lang/String;	b	lambda$createCriteriaRule$1
		p	1		old
	m	()Ljava/lang/IllegalStateException;	c	lambda$createCriteriaRule$0
	f	Ljava/lang/String;	a	name
	f	Ljava/util/Map;	b	renames
c	azl	net/minecraft/util/datafix/fixes/StriderGravityFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
c	azm	net/minecraft/util/datafix/fixes/StructureReferenceCountFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	setCountToAtLeastOne
	m	(Ljava/lang/Integer;)Z	a	lambda$setCountToAtLeastOne$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$setCountToAtLeastOne$2
c	azn	net/minecraft/util/datafix/fixes/StructureSettingsFlattenFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	fixDimension
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixStructures
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$fixStructures$5
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixStructures$4
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixStructures$6
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fixDimension$3
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$fixDimension$2
c	azo	net/minecraft/util/datafix/fixes/StructuresBecomeConfiguredFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lazo$a;Lit/unimi/dsi/fastutil/objects/Object2IntArrayMap;Lcom/mojang/serialization/Dynamic;)V	a	lambda$guessConfiguration$9
	m	(Lcom/mojang/datafixers/util/Pair;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair;	a	updateStart
	m	(Lcom/mojang/datafixers/util/Pair;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$updateReference$7
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fix
	m	(Lcom/mojang/serialization/Dynamic;Lazo$a;)Ljava/util/Optional;	a	guessConfiguration
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$updateReferences$6
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	updateStarts
	m	(Ljava/util/List;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)V	a	lambda$updateReferences$5
	m	(Lazo$a;Lit/unimi/dsi/fastutil/objects/Object2IntArrayMap;Lcom/mojang/serialization/Dynamic;)V	b	lambda$guessConfiguration$8
	m	(Lcom/mojang/datafixers/util/Pair;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair;	b	updateReference
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	b	lambda$updateStarts$4
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	updateReferences
	m	(Ljava/util/List;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)V	b	lambda$updateStarts$3
	m	(Lcom/mojang/datafixers/util/Pair;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	findUpdatedStructureType
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$fix$2
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$fix$1
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	e	lambda$fix$0
	f	Ljava/util/Map;	a	CONVERSION_MAP
c	azo$a	net/minecraft/util/datafix/fixes/StructuresBecomeConfiguredFix$Conversion
	m	()Ljava/util/Map;	a	biomeMapping
	m	(Lcom/google/common/collect/ImmutableMap$Builder;Ljava/util/Map$Entry;Ljava/lang/String;)V	a	lambda$unpack$0
	m	(Ljava/lang/String;)Lazo$a;	a	trivial
		p	0		mapping
	m	(Ljava/util/Map;)Ljava/util/Map;	a	unpack
		p	0		biomeMapping
	m	(Ljava/util/Map;Ljava/lang/String;)Lazo$a;	a	biomeMapped
		p	0		biomeMapping
		p	1		fallback
	m	()Ljava/lang/String;	b	fallback
	f	Ljava/util/Map;	a	biomeMapping
	f	Ljava/lang/String;	b	fallback
c	azp	net/minecraft/util/datafix/fixes/TeamDisplayNameFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$3
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$2
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$makeRule$4
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$makeRule$0
c	azq	net/minecraft/util/datafix/fixes/TrappedChestBlockEntityFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(IILit/unimi/dsi/fastutil/ints/IntSet;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$5
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$4
	m	(Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;IILit/unimi/dsi/fastutil/ints/IntSet;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$3
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$1
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$makeRule$0
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	I	b	SIZE
	f	S	c	SIZE_BITS
c	azq$a	net/minecraft/util/datafix/fixes/TrappedChestBlockEntityFix$TrappedChestSection
	m	()Z	a	skippable
	m	(I)Z	a	isTrappedChest
		p	1		index
	f	Lit/unimi/dsi/fastutil/ints/IntSet;	h	chestIds
c	azr	net/minecraft/util/datafix/fixes/VariantRenameFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;Ljava/util/Map;)V	<init>	<init>
		p	1		outputSchema
		p	2		name
		p	3		type
		p	4		choiceName
		p	5		oldToNewNames
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fix$2
		p	1		dynamic
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	a	lambda$fix$0
		p	2		variantName
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fix$1
		p	1		variant
	f	Ljava/util/Map;	a	renames
c	azs	net/minecraft/util/datafix/fixes/VillagerDataFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)V	<init>	<init>
		p	1		outputSchema
		p	2		entity
	m	(II)Ljava/lang/String;	a	upgradeData
		p	0		professionId
		p	1		careerId
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
c	azt	net/minecraft/util/datafix/fixes/VillagerFollowRangeFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixValue
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixValue$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fixValue$0
	f	D	a	ORIGINAL_VALUE
	f	D	b	NEW_BASE_VALUE
c	azu	net/minecraft/util/datafix/fixes/VillagerRebuildLevelAndXpFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(I)I	a	getMinXpPerLevel
		p	0		level
	m	(ILcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$addXpFromLevel$6
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Ljava/lang/Integer;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$3
	m	(Lcom/mojang/datafixers/Typed;I)Lcom/mojang/datafixers/Typed;	a	addLevel
		p	1		level
	m	(ILcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$addLevel$5
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Ljava/util/Optional;	b	lambda$makeRule$0
	m	(Lcom/mojang/datafixers/Typed;I)Lcom/mojang/datafixers/Typed;	b	addXpFromLevel
		p	1		level
	m	(ILcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$addLevel$4
	f	I	a	TRADES_PER_LEVEL
	f	[I	b	LEVEL_XP_THRESHOLDS
c	azv	net/minecraft/util/datafix/fixes/VillagerTradeFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Ljava/util/function/Function;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$fix$3
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Ljava/util/function/Function;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$fix$2
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	updateItemStack
	m	(Lcom/mojang/datafixers/OpticFinder;Ljava/util/function/Function;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$fix$1
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$updateItemStack$5
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$updateItemStack$4
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$fix$0
c	azw	net/minecraft/util/datafix/fixes/WallPropertyFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	upgradeBlockStateTag
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	a	fixWallProperty
	m	(Ljava/lang/String;)Ljava/lang/String;	a	mapProperty
		p	0		value
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$upgradeBlockStateTag$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$fixWallProperty$1
	f	Ljava/util/Set;	a	WALL_BLOCKS
c	azx	net/minecraft/util/datafix/fixes/WeaponSmithChestLootTableFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fix$0
		p	0		dynamic
c	azy	net/minecraft/util/datafix/fixes/WorldGenSettingsDisallowOldCustomWorldsFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$4
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$3
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/DataResult;	a	lambda$makeRule$2
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)V	a	lambda$makeRule$0
	m	(Ljava/util/Map;)Ljava/util/Map;	a	lambda$makeRule$1
c	azz	net/minecraft/util/datafix/fixes/WorldGenSettingsFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(JLcom/mojang/serialization/DynamicLike;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	noise
	m	(Lcom/google/common/collect/ImmutableMap$Builder;Lcom/mojang/serialization/DynamicOps;Ljava/lang/String;)V	a	lambda$fix$6
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fix
	m	(Lcom/mojang/serialization/Dynamic;J)Lcom/mojang/serialization/Dynamic;	a	defaultOverworld
	m	(Lcom/mojang/serialization/Dynamic;JLcom/mojang/serialization/Dynamic;Z)Ljava/lang/Object;	a	vanillaLevels
	m	(Lcom/mojang/serialization/Dynamic;JZZ)Lcom/mojang/serialization/Dynamic;	a	vanillaBiomeSource
	m	(Lcom/mojang/serialization/Dynamic;Lorg/apache/commons/lang3/mutable/MutableBoolean;Lorg/apache/commons/lang3/mutable/MutableInt;Lorg/apache/commons/lang3/mutable/MutableInt;Lorg/apache/commons/lang3/mutable/MutableInt;Ljava/util/Map;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)V	a	lambda$fixFlatStructures$7
	m	(Lcom/mojang/serialization/Dynamic;Lorg/apache/commons/lang3/mutable/MutableBoolean;Lorg/apache/commons/lang3/mutable/MutableInt;Lorg/apache/commons/lang3/mutable/MutableInt;Lorg/apache/commons/lang3/mutable/MutableInt;Ljava/util/Map;Ljava/util/Map;)V	a	lambda$fixFlatStructures$8
	m	(Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/OptionalDynamic;)Ljava/util/Map;	a	fixFlatStructures
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/util/Map$Entry;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixFlatStructures$12
	m	(Lcom/mojang/serialization/OptionalDynamic;Ljava/util/Map$Entry;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixFlatStructures$11
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$fix$1
	m	(Ljava/lang/String;I)I	a	getInt
	m	(Ljava/lang/String;II)I	a	getInt
	m	(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;I)V	a	setSpacing
	m	(Ljava/util/Optional;Lcom/mojang/serialization/Dynamic;)Ljava/util/Optional;	a	lambda$fix$2
	m	(Lorg/apache/commons/lang3/mutable/MutableBoolean;Lorg/apache/commons/lang3/mutable/MutableInt;Lorg/apache/commons/lang3/mutable/MutableInt;Lorg/apache/commons/lang3/mutable/MutableInt;Ljava/util/Map;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)V	a	lambda$fixFlatStructures$9
	m	(Lorg/apache/commons/lang3/mutable/MutableBoolean;Lorg/apache/commons/lang3/mutable/MutableInt;Lorg/apache/commons/lang3/mutable/MutableInt;Lorg/apache/commons/lang3/mutable/MutableInt;Ljava/util/Map;Ljava/util/Map;)V	a	lambda$fixFlatStructures$10
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/util/Optional;	b	lambda$fix$5
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$fix$4
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$fix$3
	f	Ljava/lang/String;	a	VILLAGE
	f	Ljava/lang/String;	b	DESERT_PYRAMID
	f	Ljava/lang/String;	c	IGLOO
	f	Ljava/lang/String;	d	JUNGLE_TEMPLE
	f	Ljava/lang/String;	e	SWAMP_HUT
	f	Ljava/lang/String;	f	PILLAGER_OUTPOST
	f	Ljava/lang/String;	g	END_CITY
	f	Ljava/lang/String;	h	WOODLAND_MANSION
	f	Ljava/lang/String;	i	OCEAN_MONUMENT
	f	Lcom/google/common/collect/ImmutableMap;	j	DEFAULTS
c	azz$a	net/minecraft/util/datafix/fixes/WorldGenSettingsFix$StructureFeatureConfiguration
	m	(III)V	<init>	<init>
		p	1		spacing
		p	2		separation
		p	3		salt
	m	(Lazz$a;)Ljava/lang/Integer;	a	lambda$static$2
	m	(Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic;	a	serialize
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	(Lazz$a;)Ljava/lang/Integer;	b	lambda$static$1
	m	(Lazz$a;)Ljava/lang/Integer;	c	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	spacing
	f	I	c	separation
	f	I	d	salt
c	baa	net/minecraft/util/datafix/fixes/WorldGenSettingsHeightAndBiomeFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	()Ljava/lang/IllegalStateException;	a	lambda$makeRule$7
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$9
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	updateLayers
	m	(ZLorg/apache/commons/lang3/mutable/MutableBoolean;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$2
	m	(ZZLcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$8
	m	(ZZLcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$6
	m	()Ljava/lang/IllegalStateException;	b	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$makeRule$4
	m	(ZZLcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$makeRule$5
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$makeRule$3
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$makeRule$0
	f	Ljava/lang/String;	a	WAS_PREVIOUSLY_INCREASED_KEY
	f	Ljava/lang/String;	b	NAME
c	bab	net/minecraft/util/datafix/fixes/WriteAndReadFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Lcom/mojang/datafixers/DSL$TypeReference;)V	<init>	<init>
		p	1		outputSchema
		p	2		name
		p	3		type
	f	Ljava/lang/String;	a	name
	f	Lcom/mojang/datafixers/DSL$TypeReference;	b	type
c	bac	net/minecraft/util/datafix/fixes/ZombieVillagerRebuildXpFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fix$0
c	bad	net/minecraft/util/datafix/fixes/package-info
c	bae	net/minecraft/util/datafix/package-info
c	baf	net/minecraft/util/datafix/schemas/NamespacedSchema
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	()Lcom/mojang/datafixers/types/Type;	a	namespacedString
	m	(Ljava/lang/String;)Ljava/lang/String;	a	ensureNamespaced
		p	0		id
	f	Lcom/mojang/serialization/codecs/PrimitiveCodec;	a	NAMESPACED_STRING_CODEC
	f	Lcom/mojang/datafixers/types/Type;	b	NAMESPACED_STRING
c	baf$1	net/minecraft/util/datafix/schemas/NamespacedSchema$1
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/String;)Ljava/lang/Object;	a	write
c	bag	net/minecraft/util/datafix/schemas/V100
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	equipment
		p	0		schema
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$3
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerMob
		p	0		schema
		p	1		map
		p	2		entityId
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerTypes$4
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerEntities$2
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerMob$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerEntities$1
		p	1		name
c	bah	net/minecraft/util/datafix/schemas/V102
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$0
c	bai	net/minecraft/util/datafix/schemas/V1022
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$0
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$2
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerTypes$1
c	baj	net/minecraft/util/datafix/schemas/V106
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$0
c	bak	net/minecraft/util/datafix/schemas/V107
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
c	bal	net/minecraft/util/datafix/schemas/V1125
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$0
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerTypes$2
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerTypes$1
c	bam	net/minecraft/util/datafix/schemas/V135
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$1
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerTypes$0
c	ban	net/minecraft/util/datafix/schemas/V143
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
c	bao	net/minecraft/util/datafix/schemas/V1451
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerBlockEntities$0
c	bap	net/minecraft/util/datafix/schemas/V1451_1
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$0
c	baq	net/minecraft/util/datafix/schemas/V1451_2
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerBlockEntities$0
		p	1		name
c	bar	net/minecraft/util/datafix/schemas/V1451_3
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$11
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$0
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerEntities$10
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerEntities$9
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	d	lambda$registerEntities$8
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	e	lambda$registerEntities$7
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	f	lambda$registerEntities$6
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	g	lambda$registerEntities$5
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	h	lambda$registerEntities$4
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	i	lambda$registerEntities$3
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	j	lambda$registerEntities$2
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	k	lambda$registerEntities$1
c	bas	net/minecraft/util/datafix/schemas/V1451_4
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerTypes$0
c	bat	net/minecraft/util/datafix/schemas/V1451_5
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
c	bau	net/minecraft/util/datafix/schemas/V1451_6
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	a	createCriterionTypes
		p	0		schema
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/function/Supplier;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$1
	m	(Ljava/util/Map;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$2
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$createCriterionTypes$7
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$createCriterionTypes$5
	m	(Ljava/lang/String;)Ljava/lang/String;	b	packNamespacedWithDot
		p	0		id
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$createCriterionTypes$6
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$createCriterionTypes$4
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	d	lambda$createCriterionTypes$3
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	e	lambda$registerTypes$0
	f	Ljava/lang/String;	b	SPECIAL_OBJECTIVE_MARKER
	f	Lcom/mojang/datafixers/types/templates/Hook$HookFunction;	c	UNPACK_OBJECTIVE_ID
	f	Lcom/mojang/datafixers/types/templates/Hook$HookFunction;	d	REPACK_OBJECTIVE_ID
c	bau$1	net/minecraft/util/datafix/schemas/V1451_6$1
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/serialization/Dynamic;	a	lambda$apply$1
		p	1		pair
	m	(Ljava/lang/String;)Lcom/mojang/datafixers/util/Pair;	a	lambda$apply$0
		p	0		criteriaName
c	bau$2	net/minecraft/util/datafix/schemas/V1451_6$2
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$apply$1
		p	1		criteriaName
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Ljava/util/Optional;	b	lambda$apply$0
c	bav	net/minecraft/util/datafix/schemas/V1460
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$47
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerBlockEntities$26
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerMob
		p	0		schema
		p	1		map
		p	2		entityId
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/function/Supplier;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$39
	m	(Ljava/util/Map;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$42
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerTypes$46
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerTypes$44
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerBlockEntities$25
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	b	registerInventory
		p	0		schema
		p	1		map
		p	2		name
	m	(Ljava/util/Map;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerTypes$32
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerTypes$45
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerTypes$43
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerBlockEntities$24
		p	1		name
	m	(Ljava/util/Map;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerTypes$30
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	d	lambda$registerTypes$37
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	d	lambda$registerTypes$41
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	d	lambda$registerEntities$23
		p	1		name
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	e	lambda$registerTypes$36
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	e	lambda$registerTypes$40
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	e	lambda$registerEntities$22
		p	1		name
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	f	lambda$registerTypes$27
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	f	lambda$registerTypes$38
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	f	lambda$registerEntities$21
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	g	lambda$registerTypes$35
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	g	lambda$registerEntities$20
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	h	lambda$registerTypes$34
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	h	lambda$registerEntities$19
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	i	lambda$registerTypes$33
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	i	lambda$registerEntities$18
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	j	lambda$registerTypes$31
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	j	lambda$registerEntities$17
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	k	lambda$registerTypes$29
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	k	lambda$registerEntities$16
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	l	lambda$registerTypes$28
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	l	lambda$registerEntities$15
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	m	lambda$registerInventory$1
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	m	lambda$registerEntities$14
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	n	lambda$registerMob$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	n	lambda$registerEntities$13
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	o	lambda$registerEntities$12
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	p	lambda$registerEntities$11
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	q	lambda$registerEntities$10
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	r	lambda$registerEntities$9
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	s	lambda$registerEntities$8
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	t	lambda$registerEntities$7
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	u	lambda$registerEntities$6
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	v	lambda$registerEntities$5
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	w	lambda$registerEntities$4
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	x	lambda$registerEntities$3
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	y	lambda$registerEntities$2
		p	1		name
c	baw	net/minecraft/util/datafix/schemas/V1466
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$0
c	bax	net/minecraft/util/datafix/schemas/V1470
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerMob$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$1
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerMob
		p	0		schema
		p	1		map
		p	2		entityId
c	bay	net/minecraft/util/datafix/schemas/V1481
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
c	baz	net/minecraft/util/datafix/schemas/V1483
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
c	bba	net/minecraft/util/datafix/schemas/V1486
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
c	bbb	net/minecraft/util/datafix/schemas/V1510
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
c	bbc	net/minecraft/util/datafix/schemas/V1800
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$1
		p	1		name
c	bbd	net/minecraft/util/datafix/schemas/V1801
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$0
c	bbe	net/minecraft/util/datafix/schemas/V1904
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$0
c	bbf	net/minecraft/util/datafix/schemas/V1906
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerInventory$1
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerBlockEntities$0
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerInventory
		p	0		schema
		p	1		map
		p	2		name
c	bbg	net/minecraft/util/datafix/schemas/V1909
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
c	bbh	net/minecraft/util/datafix/schemas/V1920
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerInventory$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerInventory
		p	0		schema
		p	1		map
		p	2		name
c	bbi	net/minecraft/util/datafix/schemas/V1928
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	equipment
		p	0		schema
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerMob
		p	0		schema
		p	1		map
		p	2		entityId
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerMob$0
c	bbj	net/minecraft/util/datafix/schemas/V1929
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$1
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerEntities$0
		p	1		name
c	bbk	net/minecraft/util/datafix/schemas/V1931
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$0
c	bbl	net/minecraft/util/datafix/schemas/V2100
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerBlockEntities$1
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerMob
		p	0		schema
		p	1		entityTypes
		p	2		name
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerMob$0
c	bbm	net/minecraft/util/datafix/schemas/V2501
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerFurnace$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerFurnace
		p	0		schema
		p	1		map
		p	2		name
c	bbn	net/minecraft/util/datafix/schemas/V2502
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$0
c	bbo	net/minecraft/util/datafix/schemas/V2505
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$0
c	bbp	net/minecraft/util/datafix/schemas/V2509
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$0
c	bbq	net/minecraft/util/datafix/schemas/V2519
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$0
c	bbr	net/minecraft/util/datafix/schemas/V2522
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$0
c	bbs	net/minecraft/util/datafix/schemas/V2551
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$5
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerTypes$4
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerTypes$3
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	d	lambda$registerTypes$2
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	e	lambda$registerTypes$1
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	f	lambda$registerTypes$0
c	bbt	net/minecraft/util/datafix/schemas/V2568
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$0
c	bbu	net/minecraft/util/datafix/schemas/V2571
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$0
c	bbv	net/minecraft/util/datafix/schemas/V2684
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerBlockEntities$1
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerTypes$0
c	bbw	net/minecraft/util/datafix/schemas/V2686
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$0
c	bbx	net/minecraft/util/datafix/schemas/V2688
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$1
c	bby	net/minecraft/util/datafix/schemas/V2704
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$0
c	bbz	net/minecraft/util/datafix/schemas/V2707
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
c	bca	net/minecraft/util/datafix/schemas/V2831
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$0
c	bcb	net/minecraft/util/datafix/schemas/V2832
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$7
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerTypes$1
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerTypes$6
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerTypes$5
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	d	lambda$registerTypes$4
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	e	lambda$registerTypes$3
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	f	lambda$registerTypes$2
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	g	lambda$registerTypes$0
c	bcc	net/minecraft/util/datafix/schemas/V2842
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$0
c	bcd	net/minecraft/util/datafix/schemas/V3076
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
c	bce	net/minecraft/util/datafix/schemas/V3078
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerBlockEntities$1
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerMob
		p	0		schema
		p	1		map
		p	2		entityId
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerMob$0
c	bcf	net/minecraft/util/datafix/schemas/V3081
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$0
c	bcg	net/minecraft/util/datafix/schemas/V3082
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$0
		p	1		string
c	bch	net/minecraft/util/datafix/schemas/V3083
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerMob$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerMob
		p	0		schema
		p	1		map
		p	2		name
c	bci	net/minecraft/util/datafix/schemas/V3202
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
c	bcj	net/minecraft/util/datafix/schemas/V3203
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$0
c	bck	net/minecraft/util/datafix/schemas/V3204
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerBlockEntities$0
c	bcl	net/minecraft/util/datafix/schemas/V3325
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$1
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerEntities$0
c	bcm	net/minecraft/util/datafix/schemas/V3326
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$0
c	bcn	net/minecraft/util/datafix/schemas/V3327
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerBlockEntities$1
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerBlockEntities$0
c	bco	net/minecraft/util/datafix/schemas/V3328
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
c	bcp	net/minecraft/util/datafix/schemas/V3438
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
c	bcq	net/minecraft/util/datafix/schemas/V3448
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerBlockEntities$0
c	bcr	net/minecraft/util/datafix/schemas/V501
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$0
c	bcs	net/minecraft/util/datafix/schemas/V700
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$0
c	bct	net/minecraft/util/datafix/schemas/V701
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerMob$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerMob
		p	0		schema
		p	1		map
		p	2		entityId
c	bcu	net/minecraft/util/datafix/schemas/V702
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerMob$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerMob
		p	0		schema
		p	1		map
		p	2		entityId
c	bcv	net/minecraft/util/datafix/schemas/V703
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$4
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerEntities$3
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerEntities$2
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	d	lambda$registerEntities$1
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	e	lambda$registerEntities$0
c	bcw	net/minecraft/util/datafix/schemas/V704
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	()Lcom/google/common/collect/ImmutableMap;	a	lambda$static$6
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$5
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerBlockEntities$3
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerInventory
		p	0		schema
		p	1		map
		p	2		blockEntityId
	m	(Ljava/util/Map;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$4
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerInventory$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerBlockEntities$2
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerBlockEntities$1
		p	1		name
	f	Ljava/util/Map;	a	ITEM_TO_BLOCKENTITY
	f	Lcom/mojang/datafixers/types/templates/Hook$HookFunction;	b	ADD_NAMES
c	bcw$1	net/minecraft/util/datafix/schemas/V704$1
c	bcx	net/minecraft/util/datafix/schemas/V705
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$25
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$23
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerMob
		p	0		schema
		p	1		map
		p	2		entityId
	m	(Ljava/util/Map;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$24
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerThrowableProjectile$1
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerEntities$22
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	b	registerThrowableProjectile
		p	0		schema
		p	1		map
		p	2		entityId
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerMob$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerEntities$21
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	d	lambda$registerEntities$20
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	e	lambda$registerEntities$19
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	f	lambda$registerEntities$18
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	g	lambda$registerEntities$17
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	h	lambda$registerEntities$16
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	i	lambda$registerEntities$15
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	j	lambda$registerEntities$14
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	k	lambda$registerEntities$13
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	l	lambda$registerEntities$12
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	m	lambda$registerEntities$11
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	n	lambda$registerEntities$10
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	o	lambda$registerEntities$9
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	p	lambda$registerEntities$8
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	q	lambda$registerEntities$7
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	r	lambda$registerEntities$6
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	s	lambda$registerEntities$5
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	t	lambda$registerEntities$4
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	u	lambda$registerEntities$3
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	v	lambda$registerEntities$2
		p	1		name
	f	Lcom/mojang/datafixers/types/templates/Hook$HookFunction;	b	ADD_NAMES
c	bcx$1	net/minecraft/util/datafix/schemas/V705$1
c	bcy	net/minecraft/util/datafix/schemas/V808
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerInventory$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerInventory
		p	0		schema
		p	1		map
		p	2		blockEntityId
c	bcz	net/minecraft/util/datafix/schemas/V99
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$30
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	equipment
		p	0		schema
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerBlockEntities$21
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerMob
		p	0		schema
		p	1		map
		p	2		entityId
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$addNames$36
		p	2		entityTag
	m	(Lcom/mojang/serialization/Dynamic;Ljava/util/Map;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$addNames$35
		p	2		blockEntityTag
	m	(Lcom/mojang/serialization/Dynamic;Ljava/util/Map;Ljava/lang/String;)Ljava/lang/Object;	a	addNames
		p	0		stack
		p	1		renames
		p	2		newArmorStandId
	m	(Lcom/mojang/serialization/Dynamic;Ljava/util/Map;Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$addNames$37
		p	3		tag
	m	(Ljava/util/HashMap;)V	a	lambda$static$34
		p	0		map
	m	(Ljava/util/Map;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$27
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerTypes$29
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerTypes$33
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerBlockEntities$20
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	b	registerThrowableProjectile
		p	0		schema
		p	1		map
		p	2		entityId
	m	(Ljava/util/Map;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerTypes$24
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerTypes$26
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerTypes$32
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerBlockEntities$19
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	c	registerMinecart
		p	0		schema
		p	1		map
		p	2		entityId
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	d	lambda$registerTypes$31
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	d	lambda$registerEntities$18
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	d	registerInventory
		p	0		schema
		p	1		map
		p	2		entityId
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	e	lambda$registerTypes$28
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	e	lambda$registerEntities$17
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	f	lambda$registerTypes$25
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	f	lambda$registerEntities$16
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	g	lambda$registerTypes$23
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	g	lambda$registerEntities$15
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	h	lambda$registerTypes$22
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	h	lambda$registerEntities$13
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	i	lambda$registerEntities$14
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	i	lambda$registerEntities$11
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	j	lambda$registerEntities$12
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	j	lambda$registerEntities$10
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	k	lambda$registerInventory$3
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	k	lambda$registerEntities$9
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	l	lambda$registerMinecart$2
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	l	lambda$registerEntities$8
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	m	lambda$registerThrowableProjectile$1
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	m	lambda$registerEntities$7
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	n	lambda$registerMob$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	n	lambda$registerEntities$6
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	o	lambda$registerEntities$5
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	p	lambda$registerEntities$4
		p	1		name
	f	Lcom/mojang/datafixers/types/templates/Hook$HookFunction;	a	ADD_NAMES
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ljava/util/Map;	c	ITEM_TO_BLOCKENTITY
c	bcz$1	net/minecraft/util/datafix/schemas/V99$1
c	bda	net/minecraft/util/datafix/schemas/package-info
c	bdb	net/minecraft/util/eventlog/EventLogDirectory
	m	(Ljava/nio/file/Path;Ljava/lang/String;)V	<init>	<init>
		p	1		directory
		p	2		extension
	m	()Lbdb$d;	a	listFiles
	m	(Ljava/nio/channels/ReadableByteChannel;Ljava/nio/file/Path;)V	a	writeCompressed
		p	0		source
		p	1		outputPath
	m	(Ljava/nio/file/Path;)Lbdb$b;	a	parseFile
		p	1		path
	m	(Ljava/nio/file/Path;Ljava/lang/String;)Lbdb;	a	open
		p	0		directory
		p	1		extension
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;)V	a	tryCompress
		p	0		from
		p	1		to
	m	(Ljava/time/LocalDate;)Lbdb$e;	a	createNewFile
		p	1		date
	m	(Ljava/nio/file/Path;)Z	b	lambda$listFiles$0
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	I	b	COMPRESS_BUFFER_SIZE
	f	Ljava/lang/String;	c	COMPRESSED_EXTENSION
	f	Ljava/nio/file/Path;	d	root
	f	Ljava/lang/String;	e	extension
c	bdb$a	net/minecraft/util/eventlog/EventLogDirectory$CompressedFile
	m	()Ljava/io/Reader;	a	openReader
	m	()Lbdb$a;	b	compress
	m	()Ljava/nio/file/Path;	c	path
	m	()Lbdb$c;	d	id
	f	Ljava/nio/file/Path;	a	path
	f	Lbdb$c;	b	id
c	bdb$b	net/minecraft/util/eventlog/EventLogDirectory$File
	m	()Ljava/io/Reader;	a	openReader
	m	()Lbdb$a;	b	compress
	m	()Ljava/nio/file/Path;	c	path
	m	()Lbdb$c;	d	id
c	bdb$c	net/minecraft/util/eventlog/EventLogDirectory$FileId
	m	()Ljava/time/LocalDate;	a	date
	m	(Ljava/lang/String;)Lbdb$c;	a	parse
		p	0		fileName
	m	()I	b	index
	m	(Ljava/lang/String;)Ljava/lang/String;	b	toFileName
		p	1		extension
	f	Ljava/time/LocalDate;	a	date
	f	I	b	index
	f	Ljava/time/format/DateTimeFormatter;	c	DATE_FORMATTER
c	bdb$d	net/minecraft/util/eventlog/EventLogDirectory$FileList
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		logs
	m	()Lbdb$d;	a	compressAll
	m	(ILjava/time/LocalDate;Lbdb$b;)Z	a	lambda$prune$0
		p	2		log
	m	(Ljava/time/LocalDate;I)Lbdb$d;	a	prune
		p	1		currentDate
		p	2		retentionDays
	m	()Ljava/util/stream/Stream;	b	stream
	m	()Ljava/util/Set;	c	ids
	f	Ljava/util/List;	a	files
c	bdb$e	net/minecraft/util/eventlog/EventLogDirectory$RawFile
	m	()Ljava/io/Reader;	a	openReader
	m	()Lbdb$a;	b	compress
	m	()Ljava/nio/file/Path;	c	path
	m	()Lbdb$c;	d	id
	m	()Ljava/nio/channels/FileChannel;	e	openChannel
	f	Ljava/nio/file/Path;	a	path
	f	Lbdb$c;	b	id
c	bdc	net/minecraft/util/eventlog/JsonEventLog
	m	(Lcom/mojang/serialization/Codec;Ljava/nio/channels/FileChannel;)V	<init>	<init>
		p	1		codec
		p	2		channel
	m	()Lbdd;	a	openReader
	m	(Lcom/mojang/serialization/Codec;Ljava/nio/file/Path;)Lbdc;	a	open
		p	0		codec
		p	1		path
	m	(Ljava/lang/Object;)V	a	write
		p	1		object
	m	()V	b	releaseReference
	f	Lcom/google/gson/Gson;	a	GSON
	f	Lcom/mojang/serialization/Codec;	b	codec
	f	Ljava/nio/channels/FileChannel;	c	channel
	f	Ljava/util/concurrent/atomic/AtomicInteger;	d	referenceCount
c	bdc$1	net/minecraft/util/eventlog/JsonEventLog$1
	m	()Ljava/lang/Object;	a	next
	f	Lbdd;	a	val$reader
	f	Lbdc;	b	this$0
	f	J	c	position
c	bdd	net/minecraft/util/eventlog/JsonEventLogReader
	m	()Ljava/lang/Object;	a	next
	m	(Lcom/mojang/serialization/Codec;Ljava/io/Reader;)Lbdd;	a	create
		p	0		codec
		p	1		reader
c	bdd$1	net/minecraft/util/eventlog/JsonEventLogReader$1
	m	()Ljava/lang/Object;	a	next
	f	Lcom/google/gson/stream/JsonReader;	a	val$jsonReader
	f	Lcom/mojang/serialization/Codec;	b	val$codec
c	bde	net/minecraft/util/eventlog/package-info
c	bdf	net/minecraft/util/monitoring/jmx/MinecraftServerStatistics
	m	(Lnet/minecraft/server/MinecraftServer;)V	<init>	<init>
		p	1		server
	m	()F	a	getAverageTickTime
	m	(I)[Ljavax/management/MBeanAttributeInfo;	a	lambda$new$1
	m	(Lbdf$a;)Ljavax/management/Attribute;	a	lambda$getAttributes$2
		p	0		entry
	m	(Lnet/minecraft/server/MinecraftServer;)V	a	registerJmxMonitoring
		p	0		server
	m	()[J	b	getTickTimes
	m	(Lbdf$a;)Ljava/lang/String;	b	lambda$new$0
		p	0		entry
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lnet/minecraft/server/MinecraftServer;	b	server
	f	Ljavax/management/MBeanInfo;	c	mBeanInfo
	f	Ljava/util/Map;	d	attributeDescriptionByName
c	bdf$a	net/minecraft/util/monitoring/jmx/MinecraftServerStatistics$AttributeDescription
	m	(Ljava/lang/String;Ljava/util/function/Supplier;Ljava/lang/String;Ljava/lang/Class;)V	<init>	<init>
		p	1		name
		p	2		getter
		p	3		description
		p	4		type
	m	()Ljavax/management/MBeanAttributeInfo;	a	asMBeanAttributeInfo
	f	Ljava/lang/String;	a	name
	f	Ljava/util/function/Supplier;	b	getter
	f	Ljava/lang/String;	c	description
	f	Ljava/lang/Class;	d	type
c	bdg	net/minecraft/util/monitoring/jmx/package-info
c	bdh	net/minecraft/util/package-info
c	bdi	net/minecraft/util/profiling/ActiveProfiler
	m	(Ljava/util/function/LongSupplier;Ljava/util/function/IntSupplier;Z)V	<init>	<init>
		p	1		timeGetter
		p	2		tickGetter
		p	3		checkTimeout
	m	()V	a	startTick
	m	(J)Ljava/lang/Object;	a	lambda$pop$2
	m	(Lbes;)V	a	markForCharting
		p	1		type
	m	(Ljava/lang/String;)V	a	push
		p	1		location
	m	(Ljava/lang/String;I)V	a	incrementCounter
		p	1		marker
		p	2		num
	m	(Ljava/util/function/Supplier;)V	a	push
		p	1		locationGetter
	m	(Ljava/util/function/Supplier;I)V	a	incrementCounter
		p	1		markerGetter
		p	2		num
	m	()V	b	endTick
	m	(Ljava/lang/String;)V	b	popPush
		p	1		location
	m	(Ljava/util/function/Supplier;)V	b	popPush
		p	1		locationGetter
	m	()V	c	pop
	m	(Ljava/lang/String;)Lbdi$a;	c	getEntry
		p	1		name
	m	()Lbdo;	d	getResults
	m	()Ljava/util/Set;	e	getChartedPaths
	m	(Ljava/lang/String;)Lbdi$a;	e	lambda$getCurrentEntry$3
		p	0		k
	m	()Lbdi$a;	f	getCurrentEntry
	m	()Ljava/lang/Object;	g	lambda$pop$1
	m	()Ljava/lang/Object;	h	lambda$endTick$0
	f	J	a	WARNING_TIME_NANOS
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	Ljava/util/List;	d	paths
	f	Lit/unimi/dsi/fastutil/longs/LongList;	e	startTimes
	f	Ljava/util/Map;	f	entries
	f	Ljava/util/function/IntSupplier;	g	getTickTime
	f	Ljava/util/function/LongSupplier;	h	getRealTime
	f	J	i	startTimeNano
	f	I	j	startTimeTicks
	f	Ljava/lang/String;	k	path
	f	Z	l	started
	f	Lbdi$a;	m	currentEntry
	f	Z	n	warn
	f	Ljava/util/Set;	o	chartedPaths
c	bdi$a	net/minecraft/util/profiling/ActiveProfiler$PathEntry
	m	()J	a	getDuration
	m	()J	b	getMaxDuration
	m	()J	c	getCount
	m	()Lit/unimi/dsi/fastutil/objects/Object2LongMap;	d	getCounters
	f	J	a	maxDuration
	f	J	b	minDuration
	f	J	c	accumulatedDuration
	f	J	d	count
	f	Lit/unimi/dsi/fastutil/objects/Object2LongOpenHashMap;	e	counters
c	bdj	net/minecraft/util/profiling/ContinuousProfiler
	m	(Ljava/util/function/LongSupplier;Ljava/util/function/IntSupplier;)V	<init>	<init>
		p	1		timeGetter
		p	2		tickGetter
	m	()Z	a	isEnabled
	m	()V	b	disable
	m	()V	c	enable
	m	()Lbdp;	d	getFiller
	m	()Lbdo;	e	getResults
	f	Ljava/util/function/LongSupplier;	a	realTime
	f	Ljava/util/function/IntSupplier;	b	tickCount
	f	Lbdn;	c	profiler
c	bdk	net/minecraft/util/profiling/EmptyProfileResults
	m	()J	a	getStartTimeNano
	m	(Ljava/lang/String;)Ljava/util/List;	a	getTimes
		p	1		parentPath
	m	(Ljava/nio/file/Path;)Z	a	saveResults
		p	1		path
	m	()I	b	getStartTimeTicks
	m	()J	c	getEndTimeNano
	m	()I	d	getEndTimeTicks
	m	()Ljava/lang/String;	e	getProfilerResults
	f	Lbdk;	a	EMPTY
c	bdl	net/minecraft/util/profiling/FilledProfileResults
	m	(Ljava/util/Map;JIJI)V	<init>	<init>
		p	1		locationInfos
		p	2		startTime
		p	4		startTick
		p	5		endTime
		p	7		endTick
	m	()J	a	getStartTimeNano
	m	(IILjava/lang/StringBuilder;Ljava/util/Map$Entry;)V	a	lambda$appendCounterResults$5
		p	4		entry
	m	(ILjava/lang/String;Lbdl$a;ILjava/lang/StringBuilder;)V	a	appendCounterResults
		p	1		depth
		p	2		name
		p	3		info
		p	4		tickSpan
		p	5		sb
	m	(ILjava/lang/String;Ljava/lang/StringBuilder;)V	a	appendProfilerResults
		p	1		level
		p	2		name
		p	3		sb
	m	(JI)Ljava/lang/String;	a	getProfilerResults
		p	1		timeSpan
		p	3		tickSpan
	m	(Lbdl$a;)J	a	lambda$static$0
	m	(Ljava/lang/String;)Ljava/util/List;	a	getTimes
		p	1		parentPath
	m	(Ljava/lang/String;Ljava/lang/String;)Z	a	isDirectChild
		p	0		parent
		p	1		path
	m	(Ljava/lang/StringBuilder;I)Ljava/lang/StringBuilder;	a	indentLine
		p	0		sb
		p	1		size
	m	(Ljava/lang/StringBuilder;ILjava/lang/String;Lbdl$a;)V	a	lambda$appendCounters$6
		p	3		name
		p	4		info
	m	(Ljava/lang/StringBuilder;ILjava/lang/String;Ljava/lang/Long;)V	a	lambda$appendProfilerResults$4
		p	3		marker
		p	4		count
	m	(Ljava/nio/file/Path;)Z	a	saveResults
		p	1		path
	m	(Ljava/util/Map;Ljava/lang/String;Lbdq;)V	a	lambda$getCounterValues$3
		p	1		location
		p	2		info
	m	(Ljava/util/Map;Ljava/lang/StringBuilder;I)V	a	appendCounters
		p	1		counters
		p	2		sb
		p	3		tickSpan
	m	(Ljava/util/Map;Ljava/util/List;Ljava/lang/String;Ljava/lang/Long;)V	a	lambda$getCounterValues$2
		p	2		marker
		p	3		count
	m	()I	b	getStartTimeTicks
	m	()J	c	getEndTimeNano
	m	(Ljava/lang/String;)Lbdq;	c	getEntry
		p	1		path
	m	()I	d	getEndTimeTicks
	m	(Ljava/lang/String;)Lbdl$a;	d	lambda$getCounterValues$1
		p	0		k
	m	()Ljava/lang/String;	e	getProfilerResults
	m	()I	f	getTickDuration
	m	()Ljava/util/Map;	h	getCounterValues
	m	()Ljava/lang/String;	i	getComment
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lbdq;	b	EMPTY
	f	Lcom/google/common/base/Splitter;	c	SPLITTER
	f	Ljava/util/Comparator;	e	COUNTER_ENTRY_COMPARATOR
	f	Ljava/util/Map;	f	entries
	f	J	g	startTimeNano
	f	I	h	startTimeTicks
	f	J	i	endTimeNano
	f	I	j	endTimeTicks
	f	I	k	tickDuration
c	bdl$1	net/minecraft/util/profiling/FilledProfileResults$1
	m	()J	a	getDuration
	m	()J	b	getMaxDuration
	m	()J	c	getCount
	m	()Lit/unimi/dsi/fastutil/objects/Object2LongMap;	d	getCounters
c	bdl$a	net/minecraft/util/profiling/FilledProfileResults$CounterCollector
	m	(Ljava/lang/String;)Lbdl$a;	a	lambda$addValue$0
		p	0		k
	m	(Ljava/util/Iterator;J)V	a	addValue
		p	1		pathIterator
		p	2		time
	f	J	a	selfValue
	f	J	b	totalValue
	f	Ljava/util/Map;	c	children
c	bdm	net/minecraft/util/profiling/InactiveProfiler
	m	()V	a	startTick
	m	(Lbes;)V	a	markForCharting
		p	1		type
	m	(Ljava/lang/String;)V	a	push
		p	1		location
	m	(Ljava/lang/String;I)V	a	incrementCounter
		p	1		marker
		p	2		num
	m	(Ljava/util/function/Supplier;)V	a	push
		p	1		locationGetter
	m	(Ljava/util/function/Supplier;I)V	a	incrementCounter
		p	1		markerGetter
		p	2		num
	m	()V	b	endTick
	m	(Ljava/lang/String;)V	b	popPush
		p	1		location
	m	(Ljava/util/function/Supplier;)V	b	popPush
		p	1		locationGetter
	m	()V	c	pop
	m	(Ljava/lang/String;)Lbdi$a;	c	getEntry
		p	1		name
	m	()Lbdo;	d	getResults
	m	()Ljava/util/Set;	e	getChartedPaths
	f	Lbdm;	a	INSTANCE
c	bdn	net/minecraft/util/profiling/ProfileCollector
	m	(Ljava/lang/String;)Lbdi$a;	c	getEntry
		p	1		name
	m	()Lbdo;	d	getResults
	m	()Ljava/util/Set;	e	getChartedPaths
c	bdo	net/minecraft/util/profiling/ProfileResults
	m	()J	a	getStartTimeNano
	m	(Ljava/lang/String;)Ljava/util/List;	a	getTimes
		p	1		parentPath
	m	(Ljava/nio/file/Path;)Z	a	saveResults
		p	1		path
	m	()I	b	getStartTimeTicks
	m	(Ljava/lang/String;)Ljava/lang/String;	b	demanglePath
		p	0		path
	m	()J	c	getEndTimeNano
	m	()I	d	getEndTimeTicks
	m	()Ljava/lang/String;	e	getProfilerResults
	m	()I	f	getTickDuration
	m	()J	g	getNanoDuration
	f	C	d	PATH_SEPARATOR
c	bdp	net/minecraft/util/profiling/ProfilerFiller
	m	()V	a	startTick
	m	(Lbdp;Lbdp;)Lbdp;	a	tee
		p	0		a
		p	1		b
	m	(Lbes;)V	a	markForCharting
		p	1		type
	m	(Ljava/lang/String;)V	a	push
		p	1		location
	m	(Ljava/lang/String;I)V	a	incrementCounter
		p	1		marker
		p	2		num
	m	(Ljava/util/function/Supplier;)V	a	push
		p	1		locationGetter
	m	(Ljava/util/function/Supplier;I)V	a	incrementCounter
		p	1		markerGetter
		p	2		num
	m	()V	b	endTick
	m	(Ljava/lang/String;)V	b	popPush
		p	1		location
	m	(Ljava/util/function/Supplier;)V	b	popPush
		p	1		locationGetter
	m	()V	c	pop
	m	(Ljava/util/function/Supplier;)V	c	incrementCounter
		p	1		markerGetter
	m	(Ljava/lang/String;)V	d	incrementCounter
		p	1		marker
	f	Ljava/lang/String;	b	ROOT
c	bdp$1	net/minecraft/util/profiling/ProfilerFiller$1
	m	()V	a	startTick
	m	(Lbes;)V	a	markForCharting
		p	1		type
	m	(Ljava/lang/String;)V	a	push
		p	1		location
	m	(Ljava/lang/String;I)V	a	incrementCounter
		p	1		marker
		p	2		num
	m	(Ljava/util/function/Supplier;)V	a	push
		p	1		locationGetter
	m	(Ljava/util/function/Supplier;I)V	a	incrementCounter
		p	1		markerGetter
		p	2		num
	m	()V	b	endTick
	m	(Ljava/lang/String;)V	b	popPush
		p	1		location
	m	(Ljava/util/function/Supplier;)V	b	popPush
		p	1		locationGetter
	m	()V	c	pop
	f	Lbdp;	a	val$first
	f	Lbdp;	c	val$second
c	bdq	net/minecraft/util/profiling/ProfilerPathEntry
	m	()J	a	getDuration
	m	()J	b	getMaxDuration
	m	()J	c	getCount
	m	()Lit/unimi/dsi/fastutil/objects/Object2LongMap;	d	getCounters
c	bdr	net/minecraft/util/profiling/ResultField
	m	(Ljava/lang/String;DDJ)V	<init>	<init>
		p	1		name
		p	2		parentUsagePercentage
		p	4		totalUsagePercentage
		p	6		visitCount
	m	()I	a	getColor
	m	(Lbdr;)I	a	compareTo
	f	D	a	percentage
	f	D	b	globalPercentage
	f	J	c	count
	f	Ljava/lang/String;	d	name
c	bds	net/minecraft/util/profiling/SingleTickProfiler
	m	(Ljava/util/function/LongSupplier;Ljava/lang/String;J)V	<init>	<init>
		p	1		timeGetter
		p	2		filename
		p	3		overtime
	m	()Lbdp;	a	startTick
	m	(Lbdp;Lbds;)Lbdp;	a	decorateFiller
		p	0		profiler
		p	1		monitor
	m	(Ljava/lang/String;)Lbds;	a	createTickProfiler
		p	0		name
	m	()V	b	endTick
	m	()I	c	lambda$startTick$0
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/function/LongSupplier;	b	realTime
	f	J	c	saveThreshold
	f	I	d	tick
	f	Ljava/io/File;	e	location
	f	Lbdn;	f	profiler
c	bdt	net/minecraft/util/profiling/jfr/Environment
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()Ljava/lang/String;	a	getDescription
	m	(Lnet/minecraft/server/MinecraftServer;)Lbdt;	a	from
		p	0		server
	m	()[Lbdt;	b	$values
	f	Lbdt;	a	CLIENT
	f	Lbdt;	b	SERVER
	f	Ljava/lang/String;	c	description
	f	[Lbdt;	d	$VALUES
c	bdu	net/minecraft/util/profiling/jfr/JfrProfiler
	m	()Lbdu;	a	getInstance
	m	(F)V	a	onServerTick
		p	1		tickTime
	m	(Lbdt;)Z	a	start
		p	1		instanceType
	m	(Lbdt;Ljava/lang/String;Ljdk/jfr/Recording;)V	a	lambda$start$2
		p	2		recording
	m	(Lcpc;Laev;Ljava/lang/String;)Lbdy;	a	onChunkGenerate
		p	1		chunkPos
		p	2		world
		p	3		targetStatus
	m	(Ljava/io/Reader;Lbdt;)Z	a	start
		p	1		reader
		p	2		instanceType
	m	(Ljava/net/SocketAddress;)Lnet/minecraft/util/profiling/jfr/event/NetworkSummaryEvent$b;	a	networkStatFor
		p	1		address
	m	(Lsn;ILjava/net/SocketAddress;I)V	a	onPacketReceived
		p	1		state
		p	2		packetId
		p	3		remoteAddress
		p	4		bytes
	m	()Ljava/nio/file/Path;	b	stop
	m	(Lsn;ILjava/net/SocketAddress;I)V	b	onPacketSent
		p	1		state
		p	2		packetId
		p	3		remoteAddress
		p	4		bytes
	m	()Z	c	isRunning
	m	()Z	d	isAvailable
	m	()Lbdy;	e	onWorldLoadedStarted
	m	()V	f	setupSummaryListener
	m	()V	g	lambda$new$1
	m	()V	h	lambda$new$0
	f	Ljava/lang/String;	a	ROOT_CATEGORY
	f	Ljava/lang/String;	b	WORLD_GEN_CATEGORY
	f	Ljava/lang/String;	c	TICK_CATEGORY
	f	Ljava/lang/String;	d	NETWORK_CATEGORY
	f	Lorg/slf4j/Logger;	f	LOGGER
	f	Ljava/util/List;	g	CUSTOM_EVENTS
	f	Ljava/lang/String;	h	FLIGHT_RECORDER_CONFIG
	f	Ljava/time/format/DateTimeFormatter;	i	DATE_TIME_FORMATTER
	f	Lbdu;	j	INSTANCE
	f	Ljdk/jfr/Recording;	k	recording
	f	F	l	currentAverageTickTime
	f	Ljava/util/Map;	m	networkTrafficByAddress
c	bdu$1	net/minecraft/util/profiling/jfr/JfrProfiler$1
	m	()V	a	lambda$$0
	f	Lbdx;	a	summaryReporter
	f	Lbdu;	b	this$0
c	bdv	net/minecraft/util/profiling/jfr/JvmProfiler
	m	(F)V	a	onServerTick
		p	1		tickTime
	m	(Lbdt;)Z	a	start
		p	1		instanceType
	m	(Lcpc;Laev;Ljava/lang/String;)Lbdy;	a	onChunkGenerate
		p	1		chunkPos
		p	2		world
		p	3		targetStatus
	m	(Lsn;ILjava/net/SocketAddress;I)V	a	onPacketReceived
		p	1		state
		p	2		packetId
		p	3		remoteAddress
		p	4		bytes
	m	()Ljava/nio/file/Path;	b	stop
	m	(Lsn;ILjava/net/SocketAddress;I)V	b	onPacketSent
		p	1		state
		p	2		packetId
		p	3		remoteAddress
		p	4		bytes
	m	()Z	c	isRunning
	m	()Z	d	isAvailable
	m	()Lbdy;	e	onWorldLoadedStarted
	f	Lbdv;	e	INSTANCE
c	bdv$a	net/minecraft/util/profiling/jfr/JvmProfiler$NoOpProfiler
	m	()V	a	lambda$static$0
	m	(F)V	a	onServerTick
		p	1		tickTime
	m	(Lbdt;)Z	a	start
		p	1		instanceType
	m	(Lcpc;Laev;Ljava/lang/String;)Lbdy;	a	onChunkGenerate
		p	1		chunkPos
		p	2		world
		p	3		targetStatus
	m	(Lsn;ILjava/net/SocketAddress;I)V	a	onPacketReceived
		p	1		state
		p	2		packetId
		p	3		remoteAddress
		p	4		bytes
	m	()Ljava/nio/file/Path;	b	stop
	m	(Lsn;ILjava/net/SocketAddress;I)V	b	onPacketSent
		p	1		state
		p	2		packetId
		p	3		remoteAddress
		p	4		bytes
	m	()Z	c	isRunning
	m	()Z	d	isAvailable
	m	()Lbdy;	e	onWorldLoadedStarted
	f	Lbdy;	a	noOpCommit
	f	Lorg/slf4j/Logger;	b	LOGGER
c	bdw	net/minecraft/util/profiling/jfr/Percentiles
	m	(Ljava/util/Map;)Ljava/util/Map;	a	sorted
		p	0		map
	m	(Ljava/util/Map;Lit/unimi/dsi/fastutil/ints/Int2DoubleRBTreeMap;)V	a	lambda$sorted$0
		p	1		reversedMap
	m	([D)Ljava/util/Map;	a	evaluate
		p	0		values
	m	([J)Ljava/util/Map;	a	evaluate
		p	0		values
	f	Lcom/google/common/math/Quantiles$ScaleAndIndexes;	a	DEFAULT_INDEXES
c	bdx	net/minecraft/util/profiling/jfr/SummaryReporter
	m	(Ljava/lang/Runnable;)V	<init>	<init>
		p	1		stopCallback
	m	()Ljava/lang/String;	a	lambda$recordingStopped$3
	m	(Ljava/nio/file/Path;)V	a	recordingStopped
		p	1		dumpPath
	m	(Ljava/util/function/Supplier;)V	a	infoWithFallback
		p	0		logSupplier
	m	(Ljava/util/function/Supplier;Ljava/lang/Throwable;)V	a	warnWithFallback
		p	0		logSupplier
		p	1		throwable
	m	()Ljava/lang/String;	b	lambda$recordingStopped$1
	m	(Ljava/nio/file/Path;)Ljava/lang/String;	b	lambda$recordingStopped$2
	m	(Ljava/nio/file/Path;)Ljava/lang/String;	c	lambda$recordingStopped$0
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/lang/Runnable;	b	onDeregistration
c	bdy	net/minecraft/util/profiling/jfr/callback/ProfiledDuration
c	bdz	net/minecraft/util/profiling/jfr/callback/package-info
c	bea	net/minecraft/util/profiling/jfr/event/PacketEvent
	m	(Ljava/lang/String;ILjava/net/SocketAddress;I)V	<init>	<init>
		p	1		protocolId
		p	2		packetId
		p	3		remoteAddress
		p	4		bytes
c	bea$a	net/minecraft/util/profiling/jfr/event/PacketEvent$Fields
	f	Ljava/lang/String;	a	REMOTE_ADDRESS
	f	Ljava/lang/String;	b	PROTOCOL_ID
	f	Ljava/lang/String;	c	PACKET_ID
	f	Ljava/lang/String;	d	BYTES
c	beb	net/minecraft/util/profiling/jfr/event/package-info
c	bec	net/minecraft/util/profiling/jfr/package-info
c	bed	net/minecraft/util/profiling/jfr/parse/JfrStatsParser
	m	(Ljava/util/stream/Stream;)V	<init>	<init>
		p	1		events
	m	()Lbee;	a	results
	m	(Lbem$b;)Lbed$a;	a	lambda$incrementPacket$1
		p	0		packet
	m	(Ljava/nio/file/Path;)Lbee;	a	parse
		p	0		path
	m	(Ljava/time/Duration;Ljava/util/Map;)Lbem;	a	collectPacketStats
		p	0		duration
		p	1		packetsToCounter
	m	(Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair;	a	lambda$collectPacketStats$2
		p	0		entry
	m	(Ljava/util/stream/Stream;)V	a	capture
		p	1		events
	m	(Ljdk/jfr/consumer/RecordedEvent;)V	a	lambda$capture$0
		p	1		event
	m	(Ljdk/jfr/consumer/RecordedEvent;ILjava/util/Map;)V	a	incrementPacket
		p	1		event
		p	2		bytes
		p	3		packetsToCounter
	m	(Ljdk/jfr/consumer/RecordedEvent;Ljava/util/List;Ljava/lang/String;)V	a	appendFileIO
		p	1		event
		p	2		samples
		p	3		bytesKey
	f	Ljava/time/Instant;	a	recordingStarted
	f	Ljava/time/Instant;	b	recordingEnded
	f	Ljava/util/List;	c	chunkGenStats
	f	Ljava/util/List;	d	cpuLoadStat
	f	Ljava/util/Map;	e	receivedPackets
	f	Ljava/util/Map;	f	sentPackets
	f	Ljava/util/List;	g	fileWrites
	f	Ljava/util/List;	h	fileReads
	f	I	i	garbageCollections
	f	Ljava/time/Duration;	j	gcTotalDuration
	f	Ljava/util/List;	k	gcHeapStats
	f	Ljava/util/List;	l	threadAllocationStats
	f	Ljava/util/List;	m	tickTimes
	f	Ljava/time/Duration;	n	worldCreationDuration
c	bed$1	net/minecraft/util/profiling/jfr/parse/JfrStatsParser$1
	m	()Ljdk/jfr/consumer/RecordedEvent;	a	next
	f	Ljdk/jfr/consumer/RecordingFile;	a	val$recordingFile
c	bed$a	net/minecraft/util/profiling/jfr/parse/JfrStatsParser$MutableCountAndSize
	m	()Lbem$a;	a	toCountAndSize
	m	(I)V	a	increment
		p	1		bytes
	f	J	a	count
	f	J	b	totalSize
c	bee	net/minecraft/util/profiling/jfr/parse/JfrStatsResult
	m	()Ljava/util/List;	a	chunkGenSummary
	m	(Lcom/mojang/datafixers/util/Pair;)Ljava/time/Duration;	a	lambda$chunkGenSummary$1
		p	0		pair
	m	(Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair;	a	lambda$chunkGenSummary$0
		p	0		entry
	m	()Ljava/lang/String;	b	asJson
	m	()Ljava/time/Instant;	c	recordingStarted
	m	()Ljava/time/Instant;	d	recordingEnded
	m	()Ljava/time/Duration;	e	recordingDuration
	m	()Ljava/time/Duration;	f	worldCreationDuration
	m	()Ljava/util/List;	g	tickTimes
	m	()Ljava/util/List;	h	cpuLoadStats
	m	()Lbel$a;	i	heapSummary
	m	()Lben$a;	j	threadAllocationSummary
	m	()Lbem;	k	receivedPacketsSummary
	m	()Lbem;	l	sentPacketsSummary
	m	()Lbek$a;	m	fileWrites
	m	()Lbek$a;	n	fileReads
	m	()Ljava/util/List;	o	chunkGenStats
	f	Ljava/time/Instant;	a	recordingStarted
	f	Ljava/time/Instant;	b	recordingEnded
	f	Ljava/time/Duration;	c	recordingDuration
	f	Ljava/time/Duration;	d	worldCreationDuration
	f	Ljava/util/List;	e	tickTimes
	f	Ljava/util/List;	f	cpuLoadStats
	f	Lbel$a;	g	heapSummary
	f	Lben$a;	h	threadAllocationSummary
	f	Lbem;	i	receivedPacketsSummary
	f	Lbem;	j	sentPacketsSummary
	f	Lbek$a;	k	fileWrites
	f	Lbek$a;	l	fileReads
	f	Ljava/util/List;	m	chunkGenStats
c	bef	net/minecraft/util/profiling/jfr/parse/package-info
c	beg	net/minecraft/util/profiling/jfr/serialize/JfrResultJsonSerializer
	m	(Lbee;)Ljava/lang/String;	a	format
		p	1		profile
	m	(Lbei;)Lcom/google/gson/JsonElement;	a	lambda$chunkGen$4
		p	0		sample
	m	(Lbek$a;)Lcom/google/gson/JsonElement;	a	fileIoSummary
		p	1		statistics
	m	(Lbel$a;)Lcom/google/gson/JsonElement;	a	heap
		p	1		statistics
	m	(Lbem;)Lcom/google/gson/JsonElement;	a	packets
		p	1		statistics
	m	(Lben$a;)Lcom/google/gson/JsonElement;	a	threadAllocations
		p	1		statistics
	m	(Lbeo;)D	a	lambda$serverTicks$7
		p	0		sample
	m	(Lcom/google/gson/JsonArray;Lcom/mojang/datafixers/util/Pair;)V	a	lambda$packets$10
		p	1		pair
	m	(Lcom/google/gson/JsonArray;Ljava/lang/String;Ljava/lang/Double;)V	a	lambda$threadAllocations$6
		p	1		threadName
		p	2		allocation
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonArray;)V	a	lambda$chunkGen$1
		p	1		json
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonObject;)V	a	lambda$chunkGen$2
		p	1		json
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Integer;Ljava/lang/Double;)V	a	lambda$serverTicks$8
		p	1		quantile
		p	2		value
	m	(Lcom/mojang/datafixers/util/Pair;)D	a	lambda$chunkGen$0
		p	0		pair
	m	(Ljava/lang/String;Ljava/lang/Double;Lcom/google/gson/JsonObject;)V	a	lambda$threadAllocations$5
		p	2		json
	m	(Ljava/util/List;)Lcom/google/gson/JsonElement;	a	chunkGen
		p	1		statistics
	m	(Ljava/util/List;Ljava/util/function/ToDoubleFunction;)Lcom/google/gson/JsonObject;	a	lambda$cpu$11
		p	0		samplesx
		p	1		valueGetter
	m	(Lbee;)Lcom/google/gson/JsonElement;	b	fileIO
		p	1		profile
	m	(Lcom/google/gson/JsonArray;Lcom/mojang/datafixers/util/Pair;)V	b	lambda$fileIoSummary$9
		p	1		pair
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Integer;Ljava/lang/Double;)V	b	lambda$chunkGen$3
		p	1		quantile
		p	2		value
	m	(Ljava/util/List;)Lcom/google/gson/JsonElement;	b	serverTicks
		p	1		samples
	m	(Lbee;)Lcom/google/gson/JsonElement;	c	network
		p	1		profile
	m	(Ljava/util/List;)Lcom/google/gson/JsonElement;	c	cpu
		p	1		samples
	f	Lcom/google/gson/Gson;	a	gson
	f	Ljava/lang/String;	b	BYTES_PER_SECOND
	f	Ljava/lang/String;	c	COUNT
	f	Ljava/lang/String;	d	DURATION_NANOS_TOTAL
	f	Ljava/lang/String;	e	TOTAL_BYTES
	f	Ljava/lang/String;	f	COUNT_PER_SECOND
c	beh	net/minecraft/util/profiling/jfr/serialize/package-info
c	bei	net/minecraft/util/profiling/jfr/stats/ChunkGenStat
	m	(Ljava/time/Duration;Lcpc;Lakg;Ldhk;Ljava/lang/String;)V	<init>	<init>
		p	1		duration
	m	()Ljava/time/Duration;	a	duration
	m	(Ljdk/jfr/consumer/RecordedEvent;)Lbei;	a	from
		p	0		event
	m	()Lcpc;	b	chunkPos
	m	()Lakg;	c	worldPos
	m	()Ldhk;	d	status
	m	()Ljava/lang/String;	e	level
	f	Ljava/time/Duration;	a	duration
	f	Lcpc;	b	chunkPos
	f	Lakg;	c	worldPos
	f	Ldhk;	d	status
	f	Ljava/lang/String;	e	level
c	bej	net/minecraft/util/profiling/jfr/stats/CpuLoadStat
	m	()D	a	jvm
	m	(Ljdk/jfr/consumer/RecordedEvent;)Lbej;	a	from
		p	0		event
	m	()D	b	userJvm
	m	()D	c	system
	f	D	a	jvm
	f	D	b	userJvm
	f	D	c	system
c	bek	net/minecraft/util/profiling/jfr/stats/FileIOStat
	m	()Ljava/time/Duration;	a	duration
	m	(Lbek;)J	a	lambda$summary$3
		p	0		sample
	m	(Ljava/time/Duration;Ljava/util/List;)Lbek$a;	a	summary
		p	0		duration
		p	1		samples
	m	(Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair;	a	lambda$summary$4
		p	0		entry
	m	()Ljava/lang/String;	b	path
	m	(Lbek;)Ljava/lang/String;	b	lambda$summary$2
		p	0		sample
	m	()J	c	bytes
	m	(Lbek;)Z	c	lambda$summary$1
		p	0		sample
	m	(Lbek;)J	d	lambda$summary$0
		p	0		sample
	f	Ljava/time/Duration;	a	duration
	f	Ljava/lang/String;	b	path
	f	J	c	bytes
c	bek$a	net/minecraft/util/profiling/jfr/stats/FileIOStat$Summary
	m	()J	a	totalBytes
	m	()D	b	bytesPerSecond
	m	()J	c	counts
	m	()D	d	countsPerSecond
	m	()Ljava/time/Duration;	e	timeSpentInIO
	m	()Ljava/util/List;	f	topTenContributorsByTotalBytes
	f	J	a	totalBytes
	f	D	b	bytesPerSecond
	f	J	c	counts
	f	D	d	countsPerSecond
	f	Ljava/time/Duration;	e	timeSpentInIO
	f	Ljava/util/List;	f	topTenContributorsByTotalBytes
c	bel	net/minecraft/util/profiling/jfr/stats/GcHeapStat
	m	()Ljava/time/Instant;	a	timestamp
	m	(Lbel;)Lbel$b;	a	lambda$calculateAllocationRatePerSecond$0
	m	(Ljava/time/Duration;Ljava/util/List;Ljava/time/Duration;I)Lbel$a;	a	summary
		p	0		duration
		p	1		samples
		p	2		gcDuration
		p	3		count
	m	(Ljava/util/List;)D	a	calculateAllocationRatePerSecond
		p	0		samples
	m	(Ljdk/jfr/consumer/RecordedEvent;)Lbel;	a	from
		p	0		event
	m	()J	b	heapUsed
	m	()Lbel$b;	c	timing
	f	Ljava/time/Instant;	a	timestamp
	f	J	b	heapUsed
	f	Lbel$b;	c	timing
c	bel$a	net/minecraft/util/profiling/jfr/stats/GcHeapStat$Summary
	m	()F	a	gcOverHead
	m	()Ljava/time/Duration;	b	duration
	m	()Ljava/time/Duration;	c	gcTotalDuration
	m	()I	d	totalGCs
	m	()D	e	allocationRateBytesPerSecond
	f	Ljava/time/Duration;	a	duration
	f	Ljava/time/Duration;	b	gcTotalDuration
	f	I	c	totalGCs
	f	D	d	allocationRateBytesPerSecond
c	bel$b	net/minecraft/util/profiling/jfr/stats/GcHeapStat$Timing
	m	()[Lbel$b;	a	$values
	f	Lbel$b;	a	BEFORE_GC
	f	Lbel$b;	b	AFTER_GC
	f	[Lbel$b;	c	$VALUES
c	bem	net/minecraft/util/profiling/jfr/stats/NetworkPacketSummary
	m	(Ljava/time/Duration;Ljava/util/List;)V	<init>	<init>
		p	1		duration
		p	2		packetsToStatistics
	m	()D	a	getCountsPerSecond
	m	()D	b	getSizePerSecond
	m	()J	c	getTotalCount
	m	()J	d	getTotalSize
	m	()Ljava/util/List;	e	largestSizeContributors
	m	()Lbem$a;	f	lambda$new$0
	f	Lbem$a;	a	totalPacketCountAndSize
	f	Ljava/util/List;	b	largestSizeContributors
	f	Ljava/time/Duration;	c	recordingDuration
c	bem$a	net/minecraft/util/profiling/jfr/stats/NetworkPacketSummary$PacketCountAndSize
	m	()J	a	totalCount
	m	(Lbem$a;)Lbem$a;	a	add
		p	1		statistics
	m	()J	b	totalSize
	f	J	a	totalCount
	f	J	b	totalSize
	f	Ljava/util/Comparator;	c	SIZE_THEN_COUNT
c	bem$b	net/minecraft/util/profiling/jfr/stats/NetworkPacketSummary$PacketIdentification
	m	()Ljava/lang/String;	a	packetName
	m	(Lcom/google/common/collect/ImmutableMap$Builder;Lve;Lsn;Ljava/lang/Integer;Ljava/lang/Class;)V	a	lambda$static$0
		p	3		packetId
		p	4		clazz
	m	(Ljdk/jfr/consumer/RecordedEvent;)Lbem$b;	a	from
		p	0		event
	m	()Lve;	b	direction
	m	()Ljava/lang/String;	c	protocolId
	m	()I	d	packetId
	f	Lve;	a	direction
	f	Ljava/lang/String;	b	protocolId
	f	I	c	packetId
	f	Ljava/util/Map;	d	PACKET_NAME_BY_ID
c	ben	net/minecraft/util/profiling/jfr/stats/ThreadAllocationStat
	m	()Ljava/time/Instant;	a	timestamp
	m	(Lben;)Ljava/lang/String;	a	lambda$summary$0
		p	0		sample
	m	(Ljava/util/List;)Lben$a;	a	summary
		p	0		samples
	m	(Ljava/util/Map;Ljava/lang/String;Ljava/util/List;)V	a	lambda$summary$1
		p	1		threadName
		p	2		groupedSamples
	m	(Ljdk/jfr/consumer/RecordedEvent;)Lben;	a	from
		p	0		event
	m	()Ljava/lang/String;	b	threadName
	m	()J	c	totalBytes
	f	Ljava/time/Instant;	a	timestamp
	f	Ljava/lang/String;	b	threadName
	f	J	c	totalBytes
	f	Ljava/lang/String;	d	UNKNOWN_THREAD
c	ben$a	net/minecraft/util/profiling/jfr/stats/ThreadAllocationStat$Summary
	m	()Ljava/util/Map;	a	allocationsPerSecondByThread
	f	Ljava/util/Map;	a	allocationsPerSecondByThread
c	beo	net/minecraft/util/profiling/jfr/stats/TickTimeStat
	m	()Ljava/time/Instant;	a	timestamp
	m	(Ljdk/jfr/consumer/RecordedEvent;)Lbeo;	a	from
		p	0		event
	m	()Ljava/time/Duration;	b	currentAverage
	f	Ljava/time/Instant;	a	timestamp
	f	Ljava/time/Duration;	b	currentAverage
c	bep	net/minecraft/util/profiling/jfr/stats/TimedStat
	m	()Ljava/time/Duration;	a	duration
c	beq	net/minecraft/util/profiling/jfr/stats/TimedStatSummary
	m	()Lbep;	a	fastest
	m	(Lbep;)J	a	lambda$summary$0
		p	0		sample
	m	(Ljava/util/List;)Lbeq;	a	summary
		p	0		samples
	m	()Lbep;	b	slowest
	m	()Lbep;	c	secondSlowest
	m	()I	d	count
	m	()Ljava/util/Map;	e	percentilesNanos
	m	()Ljava/time/Duration;	f	totalDuration
	f	Lbep;	a	fastest
	f	Lbep;	b	slowest
	f	Lbep;	c	secondSlowest
	f	I	d	count
	f	Ljava/util/Map;	e	percentilesNanos
	f	Ljava/time/Duration;	f	totalDuration
c	ber	net/minecraft/util/profiling/jfr/stats/package-info
c	bes	net/minecraft/util/profiling/metrics/MetricCategory
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()Ljava/lang/String;	a	getDescription
	m	()[Lbes;	b	$values
	f	Lbes;	a	PATH_FINDING
	f	Lbes;	b	EVENT_LOOPS
	f	Lbes;	c	MAIL_BOXES
	f	Lbes;	d	TICK_LOOP
	f	Lbes;	e	JVM
	f	Lbes;	f	CHUNK_RENDERING
	f	Lbes;	g	CHUNK_RENDERING_DISPATCHING
	f	Lbes;	h	CPU
	f	Lbes;	i	GPU
	f	Ljava/lang/String;	j	description
	f	[Lbes;	k	$VALUES
c	bet	net/minecraft/util/profiling/metrics/MetricSampler
	m	(Ljava/lang/String;Lbes;Ljava/util/function/DoubleSupplier;Ljava/lang/Runnable;Lbet$c;)V	<init>	<init>
		p	1		name
		p	2		type
		p	3		retriever
		p	4		startAction
		p	5		deviationChecker
	m	()V	a	onStartTick
	m	(I)V	a	onEndTick
		p	1		tick
	m	(Ljava/lang/String;Lbes;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Lbet;	a	create
		p	0		name
		p	1		type
		p	2		context
		p	3		retriever
	m	(Ljava/lang/String;Lbes;Ljava/util/function/DoubleSupplier;)Lbet;	a	create
		p	0		name
		p	1		type
		p	2		retriever
	m	(Ljava/lang/String;Lbes;Ljava/util/function/ToDoubleFunction;Ljava/lang/Object;)Lbet$a;	a	builder
		p	0		name
		p	1		type
		p	2		retriever
		p	3		context
	m	()V	b	onFinished
	m	()Ljava/util/function/DoubleSupplier;	c	getSampler
	m	()Ljava/lang/String;	d	getName
	m	()Lbes;	e	getCategory
	m	()Lbet$b;	f	result
	m	()Z	g	triggersThreshold
	m	()V	h	verifyRunning
	f	Lbet$c;	a	thresholdTest
	f	Ljava/lang/String;	b	name
	f	Lbes;	c	category
	f	Ljava/util/function/DoubleSupplier;	d	sampler
	f	Lio/netty/buffer/ByteBuf;	e	ticks
	f	Lio/netty/buffer/ByteBuf;	f	values
	f	Z	g	isRunning
	f	Ljava/lang/Runnable;	h	beforeTick
	f	D	i	currentValue
c	bet$a	net/minecraft/util/profiling/metrics/MetricSampler$MetricSamplerBuilder
	m	(Ljava/lang/String;Lbes;Ljava/util/function/ToDoubleFunction;Ljava/lang/Object;)V	<init>	<init>
		p	1		name
		p	2		type
		p	3		timeFunction
		p	4		context
	m	()Lbet;	a	build
	m	(Lbet$c;)Lbet$a;	a	withThresholdAlert
		p	1		deviationChecker
	m	(Ljava/util/function/Consumer;)Lbet$a;	a	withBeforeTick
		p	1		action
	m	(Ljava/util/function/ToDoubleFunction;Ljava/lang/Object;)D	a	lambda$new$0
	m	(Ljava/util/function/Consumer;)V	b	lambda$withBeforeTick$1
	f	Ljava/lang/String;	a	name
	f	Lbes;	b	category
	f	Ljava/util/function/DoubleSupplier;	c	sampler
	f	Ljava/lang/Object;	d	context
	f	Ljava/lang/Runnable;	e	beforeTick
	f	Lbet$c;	f	thresholdTest
c	bet$b	net/minecraft/util/profiling/metrics/MetricSampler$SamplerResult
	m	(IILit/unimi/dsi/fastutil/ints/Int2DoubleMap;)V	<init>	<init>
		p	1		startTick
		p	2		endTick
		p	3		values
	m	()I	a	getFirstTick
	m	(I)D	a	valueAtTick
		p	1		tick
	m	()I	b	getLastTick
	f	Lit/unimi/dsi/fastutil/ints/Int2DoubleMap;	a	recording
	f	I	b	firstTick
	f	I	c	lastTick
c	bet$c	net/minecraft/util/profiling/metrics/MetricSampler$ThresholdTest
	m	(D)Z	test	test
		p	1		value
c	bet$d	net/minecraft/util/profiling/metrics/MetricSampler$ValueIncreasedByPercentage
	m	(F)V	<init>	<init>
		p	1		threshold
	m	(D)Z	test	test
		p	1		value
	f	F	a	percentageIncreaseThreshold
	f	D	b	previousValue
c	beu	net/minecraft/util/profiling/metrics/MetricsRegistry
	m	()Ljava/util/List;	a	getRegisteredSamplers
	m	(Lbew;)V	a	add
		p	1		executor
	m	(Ljava/util/Map$Entry;)Lbet;	a	lambda$aggregateDuplicates$1
		p	0		entry
	m	(Ljava/util/Map;)Ljava/util/List;	a	aggregateDuplicates
		p	0		samplers
	m	(Lbew;)Ljava/util/stream/Stream;	b	lambda$getRegisteredSamplers$0
		p	0		executor
	f	Lbeu;	a	INSTANCE
	f	Ljava/util/WeakHashMap;	b	measuredInstances
c	beu$a	net/minecraft/util/profiling/metrics/MetricsRegistry$AggregatedMetricSampler
	m	(Ljava/lang/String;Ljava/util/List;)V	<init>	<init>
		p	1		id
		p	2		delegates
	m	(DLbet;)Z	a	lambda$thresholdTest$2
		p	2		sampler
	m	(Ljava/util/List;)Lbet$c;	a	thresholdTest
		p	0		delegates
	m	(Ljava/util/List;D)Z	a	lambda$thresholdTest$3
		p	1		value
	m	(Ljava/util/List;)V	b	beforeTick
		p	0		samplers
	m	(Ljava/util/List;)D	c	averageValueFromDelegates
		p	0		samplers
	m	(Ljava/util/List;)V	d	lambda$new$1
	m	(Ljava/util/List;)D	e	lambda$new$0
	f	Ljava/util/List;	b	delegates
c	bev	net/minecraft/util/profiling/metrics/MetricsSamplerProvider
	m	(Ljava/util/function/Supplier;)Ljava/util/Set;	a	samplers
		p	1		profilerSupplier
c	bew	net/minecraft/util/profiling/metrics/ProfilerMeasured
	m	()Ljava/util/List;	bk	profiledMetrics
c	bex	net/minecraft/util/profiling/metrics/package-info
c	bey	net/minecraft/util/profiling/metrics/profiling/ActiveMetricsRecorder
	m	(Lbev;Ljava/util/function/LongSupplier;Ljava/util/concurrent/Executor;Lbfe;Ljava/util/function/Consumer;Ljava/util/function/Consumer;)V	<init>	<init>
		p	1		samplerSource
		p	2		timeGetter
		p	3		dumpExecutor
		p	4		dumper
		p	5		resultConsumer
		p	6		dumpConsumer
	m	()V	a	end
	m	(Lbdo;)V	a	scheduleSaveResults
		p	1		result
	m	(Lbet;)Ljava/util/List;	a	lambda$endTick$3
		p	0		s
	m	(Lbev;Ljava/util/function/LongSupplier;Ljava/util/concurrent/Executor;Lbfe;Ljava/util/function/Consumer;Ljava/util/function/Consumer;)Lbey;	a	createStarted
		p	0		source
		p	1		timeGetter
		p	2		dumpExecutor
		p	3		dumper
		p	4		resultConsumer
		p	5		dumpConsumer
	m	(Ljava/util/Collection;)V	a	cleanup
		p	1		samplers
	m	(Ljava/util/HashSet;Lbdo;)V	a	lambda$scheduleSaveResults$5
	m	(Ljava/util/function/Consumer;)V	a	registerGlobalCompletionCallback
		p	0		consumer
	m	()V	b	cancel
	m	()V	c	startTick
	m	()V	d	endTick
	m	()Z	e	isRecording
	m	()Lbdp;	f	getProfiler
	m	()V	g	verifyStarted
	m	()I	h	lambda$endTick$4
	m	()Lbdn;	i	lambda$startTick$2
	m	()I	j	lambda$new$1
	m	()I	k	lambda$new$0
	f	I	a	PROFILING_MAX_DURATION_SECONDS
	f	Ljava/util/function/Consumer;	b	globalOnReportFinished
	f	Ljava/util/Map;	c	deviationsBySampler
	f	Lbdj;	d	taskProfiler
	f	Ljava/util/concurrent/Executor;	e	ioExecutor
	f	Lbfe;	f	metricsPersister
	f	Ljava/util/function/Consumer;	g	onProfilingEnd
	f	Ljava/util/function/Consumer;	h	onReportFinished
	f	Lbev;	i	metricsSamplerProvider
	f	Ljava/util/function/LongSupplier;	j	wallTimeSource
	f	J	k	deadlineNano
	f	I	l	currentTick
	f	Lbdn;	m	singleTickProfiler
	f	Z	n	killSwitch
	f	Ljava/util/Set;	o	thisTickSamplers
c	bez	net/minecraft/util/profiling/metrics/profiling/InactiveMetricsRecorder
	m	()V	a	end
	m	()V	b	cancel
	m	()V	c	startTick
	m	()V	d	endTick
	m	()Z	e	isRecording
	m	()Lbdp;	f	getProfiler
	f	Lbfa;	a	INSTANCE
c	bfa	net/minecraft/util/profiling/metrics/profiling/MetricsRecorder
	m	()V	a	end
	m	()V	b	cancel
	m	()V	c	startTick
	m	()V	d	endTick
	m	()Z	e	isRecording
	m	()Lbdp;	f	getProfiler
c	bfb	net/minecraft/util/profiling/metrics/profiling/ProfilerSamplerAdapter
	m	(Ljava/util/function/Supplier;)Ljava/util/Set;	a	newSamplersFoundInProfiler
		p	1		profilerSupplier
	m	(Ljava/util/function/Supplier;Ljava/lang/String;)D	a	lambda$samplerForProfilingPath$2
	m	(Ljava/util/function/Supplier;Ljava/lang/String;Lbes;)Lbet;	a	samplerForProfilingPath
		p	0		profilerSupplier
		p	1		id
		p	2		type
	m	(Ljava/util/function/Supplier;Lorg/apache/commons/lang3/tuple/Pair;)Lbet;	a	lambda$newSamplersFoundInProfiler$1
		p	1		target
	m	(Lorg/apache/commons/lang3/tuple/Pair;)Z	a	lambda$newSamplersFoundInProfiler$0
		p	1		target
	f	Ljava/util/Set;	a	previouslyFoundSamplerNames
c	bfc	net/minecraft/util/profiling/metrics/profiling/ServerMetricsSamplersProvider
	m	(Ljava/util/function/LongSupplier;Z)V	<init>	<init>
		p	1		nanoTimeSupplier
		p	2		includeSystem
	m	()Ljava/util/Set;	a	runtimeIndependentSamplers
	m	(Lbfc$a;I)Lbet;	a	lambda$runtimeIndependentSamplers$1
		p	1		index
	m	(Lcom/google/common/base/Stopwatch;)D	a	lambda$tickTimeSampler$3
		p	0		watch
	m	(Ljava/util/function/LongSupplier;)Lbet;	a	tickTimeSampler
		p	0		nanoTimeSupplier
	m	(Ljava/util/function/Supplier;)Ljava/util/Set;	a	samplers
		p	1		profilerSupplier
	m	()D	b	lambda$runtimeIndependentSamplers$2
	m	(Lbfc$a;I)D	b	lambda$runtimeIndependentSamplers$0
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/Set;	b	samplers
	f	Lbfb;	c	samplerFactory
c	bfc$1	net/minecraft/util/profiling/metrics/profiling/ServerMetricsSamplersProvider$1
	f	Ljava/util/function/LongSupplier;	a	val$timeSource
c	bfc$a	net/minecraft/util/profiling/metrics/profiling/ServerMetricsSamplersProvider$CpuStats
	m	(I)D	a	loadForCpu
		p	1		index
	f	I	a	nrOfCpus
	f	Loshi/SystemInfo;	b	systemInfo
	f	Loshi/hardware/CentralProcessor;	c	processor
	f	[[J	d	previousCpuLoadTick
	f	[D	e	currentLoad
	f	J	f	lastPollMs
c	bfd	net/minecraft/util/profiling/metrics/profiling/package-info
c	bfe	net/minecraft/util/profiling/metrics/storage/MetricsPersister
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		type
	m	(I)[Ljava/lang/String;	a	lambda$saveCategory$2
	m	(ILbet$b;)Ljava/lang/String;	a	lambda$saveCategory$1
		p	1		data
	m	(Lbdo;Ljava/nio/file/Path;)V	a	saveProfilingTaskExecutionResult
		p	1		result
		p	2		directory
	m	(Lbes;Ljava/util/List;Ljava/nio/file/Path;)V	a	saveCategory
		p	1		type
		p	2		samplers
		p	3		directory
	m	(Ljava/nio/file/Path;Lbes;Ljava/util/List;)V	a	lambda$saveMetrics$0
		p	2		type
		p	3		sampler
	m	(Ljava/time/format/DateTimeFormatter;Ljava/nio/file/Path;Lbet;Lbff;)V	a	lambda$saveDeviations$3
		p	3		deviation
	m	(Ljava/time/format/DateTimeFormatter;Ljava/nio/file/Path;Lbet;Ljava/util/List;)V	a	lambda$saveDeviations$4
		p	2		sampler
		p	3		sampleDeviations
	m	(Ljava/util/Map;Ljava/nio/file/Path;)V	a	saveDeviations
		p	1		deviations
		p	2		deviationsDirectory
	m	(Ljava/util/Set;Ljava/nio/file/Path;)V	a	saveMetrics
		p	1		samplers
		p	2		directory
	m	(Ljava/util/Set;Ljava/util/Map;Lbdo;)Ljava/nio/file/Path;	a	saveReports
		p	1		samplers
		p	2		deviations
		p	3		result
	f	Ljava/nio/file/Path;	a	PROFILING_RESULTS_DIR
	f	Ljava/lang/String;	b	METRICS_DIR_NAME
	f	Ljava/lang/String;	c	DEVIATIONS_DIR_NAME
	f	Ljava/lang/String;	d	PROFILING_RESULT_FILENAME
	f	Lorg/slf4j/Logger;	e	LOGGER
	f	Ljava/lang/String;	f	rootFolderName
c	bff	net/minecraft/util/profiling/metrics/storage/RecordedDeviation
	m	(Ljava/time/Instant;ILbdo;)V	<init>	<init>
		p	1		instant
		p	2		ticks
		p	3		result
	f	Ljava/time/Instant;	a	timestamp
	f	I	b	tick
	f	Lbdo;	c	profilerResultAtTick
c	bfg	net/minecraft/util/profiling/metrics/storage/package-info
c	bfh	net/minecraft/util/profiling/package-info
c	bfi	net/minecraft/util/random/SimpleWeightedRandomList
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		entries
	m	()Lbfi$a;	a	builder
	m	(Lasc;)Ljava/util/Optional;	a	getRandomValue
		p	1		random
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	wrappedCodecAllowingEmpty
		p	0		dataCodec
	m	(Ljava/lang/Object;)Lbfi;	a	single
		p	0		object
	m	()Lbfi;	b	empty
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	b	wrappedCodec
		p	0		dataCodec
c	bfi$a	net/minecraft/util/random/SimpleWeightedRandomList$Builder
	m	()Lbfi;	a	build
	m	(Ljava/lang/Object;I)Lbfi$a;	a	add
		p	1		object
		p	2		weight
	f	Lcom/google/common/collect/ImmutableList$Builder;	a	result
c	bfj	net/minecraft/util/random/Weight
	m	(I)V	<init>	<init>
		p	1		weight
	m	()I	a	asInt
	m	(I)Lbfj;	a	of
		p	0		weight
	m	(I)V	b	validateWeight
		p	0		weight
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lbfj;	b	ONE
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	I	d	value
c	bfk	net/minecraft/util/random/WeightedEntry
	m	()Lbfj;	a	getWeight
	m	(Ljava/lang/Object;I)Lbfk$b;	a	wrap
		p	0		data
		p	1		weight
c	bfk$a	net/minecraft/util/random/WeightedEntry$IntrusiveBase
	m	(I)V	<init>	<init>
		p	1		weight
	m	(Lbfj;)V	<init>	<init>
		p	1		weight
	m	()Lbfj;	a	getWeight
	f	Lbfj;	a	weight
c	bfk$b	net/minecraft/util/random/WeightedEntry$Wrapper
	m	(Ljava/lang/Object;Lbfj;)V	<init>	<init>
		p	1		data
		p	2		weight
	m	()Lbfj;	a	getWeight
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	codec
		p	0		dataCodec
	m	(Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$codec$0
		p	1		instance
	m	()Ljava/lang/Object;	b	getData
	f	Ljava/lang/Object;	a	data
	f	Lbfj;	b	weight
c	bfl	net/minecraft/util/random/WeightedRandom
	m	(Lasc;Ljava/util/List;)Ljava/util/Optional;	a	getRandomItem
		p	0		random
		p	1		pool
	m	(Lasc;Ljava/util/List;I)Ljava/util/Optional;	a	getRandomItem
		p	0		random
		p	1		pool
		p	2		totalWeight
	m	(Ljava/util/List;)I	a	getTotalWeight
		p	0		pool
	m	(Ljava/util/List;I)Ljava/util/Optional;	a	getWeightedItem
		p	0		pool
		p	1		totalWeight
c	bfm	net/minecraft/util/random/WeightedRandomList
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		entries
	m	(Ljava/util/List;)Lbfm;	a	create
		p	0		entries
	m	([Lbfk;)Lbfm;	a	create
		p	0		entries
	m	(Lasc;)Ljava/util/Optional;	b	getRandom
		p	1		random
	m	()Lbfm;	c	create
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	c	codec
		p	0		entryCodec
	m	()Z	d	isEmpty
	m	()Ljava/util/List;	e	unwrap
	f	I	a	totalWeight
	f	Lcom/google/common/collect/ImmutableList;	b	items
c	bfn	net/minecraft/util/random/package-info
c	bfo	net/minecraft/util/thread/BlockableEventLoop
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		name
	m	(Ljava/lang/Object;)V	a	tell
		p	1		message
	m	(Ljava/lang/Runnable;)Ljava/util/concurrent/CompletableFuture;	a	submitAsync
		p	1		runnable
	m	(Ljava/util/function/Supplier;)Ljava/util/concurrent/CompletableFuture;	a	submit
		p	1		task
	m	()Z	at	scheduleExecutables
	m	()Ljava/lang/Thread;	au	getRunningThread
	m	(Ljava/lang/Runnable;)Ljava/lang/Void;	b	lambda$submitAsync$0
	m	()Ljava/util/List;	bk	profiledMetrics
	m	()Z	bl	isSameThread
	m	()I	bm	getPendingTasksCount
	m	()Ljava/lang/String;	bn	name
	m	()V	bo	dropAllTasks
	m	()V	bp	runAllTasks
	m	()V	bq	waitForTasks
	m	(Ljava/lang/Runnable;)V	c	executeIfPossible
		p	1		runnable
	m	(Ljava/util/function/BooleanSupplier;)V	c	managedBlock
		p	1		stopCondition
	m	(Ljava/lang/Runnable;)V	d	doRunTask
		p	1		task
	m	(Ljava/lang/Runnable;)Z	e	shouldRun
		p	1		task
	m	(Ljava/lang/Runnable;)Ljava/lang/Runnable;	f	wrapRunnable
		p	1		runnable
	m	(Ljava/lang/Runnable;)Ljava/util/concurrent/CompletableFuture;	g	submit
		p	1		task
	m	(Ljava/lang/Runnable;)V	h	executeBlocking
		p	1		runnable
	m	(Ljava/lang/Runnable;)V	i	tell
	m	()Z	x	pollTask
	f	Ljava/lang/String;	b	name
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	Ljava/util/Queue;	d	pendingRunnables
	f	I	e	blockingCount
c	bfp	net/minecraft/util/thread/NamedThreadFactory
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		name
	m	(Ljava/lang/Runnable;Ljava/lang/Thread;Ljava/lang/Throwable;)V	a	lambda$newThread$0
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/lang/ThreadGroup;	b	group
	f	Ljava/util/concurrent/atomic/AtomicInteger;	c	threadNumber
	f	Ljava/lang/String;	d	namePrefix
c	bfq	net/minecraft/util/thread/ProcessorHandle
	m	(Ljava/lang/Object;)V	a	tell
		p	1		message
	m	(Ljava/lang/String;Ljava/util/function/Consumer;)Lbfq;	a	of
		p	0		name
		p	1		action
	m	(Ljava/util/concurrent/CompletableFuture;Lcom/mojang/datafixers/util/Either;)V	a	lambda$askEither$0
	m	(Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;	b	ask
		p	1		messageProvider
	m	()Ljava/lang/String;	bn	name
	m	(Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;	c	askEither
		p	1		messageProvider
c	bfq$1	net/minecraft/util/thread/ProcessorHandle$1
	m	(Ljava/lang/Object;)V	a	tell
		p	1		message
	m	()Ljava/lang/String;	bn	name
	f	Ljava/lang/String;	a	val$name
	f	Ljava/util/function/Consumer;	b	val$tell
c	bfr	net/minecraft/util/thread/ProcessorMailbox
	m	(Lbft;Ljava/util/concurrent/Executor;Ljava/lang/String;)V	<init>	<init>
		p	1		queue
		p	2		executor
		p	3		name
	m	()V	a	runAll
	m	(I)Z	a	lambda$runAll$1
		p	0		runCount
	m	(Lit/unimi/dsi/fastutil/ints/Int2BooleanFunction;)I	a	pollUntil
		p	1		condition
	m	(Ljava/lang/Object;)V	a	tell
		p	1		message
	m	(Ljava/util/concurrent/Executor;Ljava/lang/String;)Lbfr;	a	create
		p	0		executor
		p	1		name
	m	()I	b	size
	m	(I)Z	b	lambda$run$0
		p	0		runCount
	m	()Ljava/util/List;	bk	profiledMetrics
	m	()Ljava/lang/String;	bn	name
	m	()Z	c	hasWork
	m	()Z	d	setAsScheduled
	m	()V	e	setAsIdle
	m	()Z	f	canBeScheduled
	m	()Z	g	shouldProcess
	m	()Z	h	pollTask
	m	()V	i	registerForExecution
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	I	b	CLOSED_BIT
	f	I	c	SCHEDULED_BIT
	f	Ljava/util/concurrent/atomic/AtomicInteger;	d	status
	f	Lbft;	e	queue
	f	Ljava/util/concurrent/Executor;	f	dispatcher
	f	Ljava/lang/String;	g	name
c	bfs	net/minecraft/util/thread/ReentrantBlockableEventLoop
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		name
	m	()Z	at	scheduleExecutables
	m	()Z	br	runningTask
	m	(Ljava/lang/Runnable;)V	d	doRunTask
		p	1		task
	f	I	b	reentrantCount
c	bft	net/minecraft/util/thread/StrictQueue
	m	()Ljava/lang/Object;	a	pop
	m	(Ljava/lang/Object;)Z	a	push
		p	1		message
	m	()Z	b	isEmpty
	m	()I	c	size
c	bft$a	net/minecraft/util/thread/StrictQueue$FixedPriorityQueue
	m	(I)V	<init>	<init>
		p	1		priorityCount
	m	()Ljava/lang/Object;	a	pop
	m	(Lbft$b;)Z	a	push
		p	1		message
	m	(Ljava/lang/Object;)Z	a	push
		p	1		message
	m	()Z	b	isEmpty
	m	()I	c	size
	m	()Ljava/lang/Runnable;	d	pop
	f	[Ljava/util/Queue;	a	queues
	f	Ljava/util/concurrent/atomic/AtomicInteger;	b	size
c	bft$b	net/minecraft/util/thread/StrictQueue$IntRunnable
	m	(ILjava/lang/Runnable;)V	<init>	<init>
		p	1		priority
		p	2		runnable
	m	()I	a	getPriority
	f	I	a	priority
	f	Ljava/lang/Runnable;	b	task
c	bft$c	net/minecraft/util/thread/StrictQueue$QueueStrictQueue
	m	(Ljava/util/Queue;)V	<init>	<init>
		p	1		queue
	m	()Ljava/lang/Object;	a	pop
	m	(Ljava/lang/Object;)Z	a	push
		p	1		message
	m	()Z	b	isEmpty
	m	()I	c	size
	f	Ljava/util/Queue;	a	queue
c	bfu	net/minecraft/util/thread/package-info
c	bfv	net/minecraft/util/valueproviders/BiasedToBottomInt
	m	(II)V	<init>	<init>
		p	1		min
		p	2		max
	m	()I	a	getMinValue
	m	(II)Lbfv;	a	of
		p	0		min
		p	1		max
	m	(Lasc;)I	a	sample
		p	1		random
	m	(Lbfv;)Lcom/mojang/serialization/DataResult;	a	lambda$static$4
		p	0		provider
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	()I	b	getMaxValue
	m	(Lbfv;)Ljava/lang/String;	b	lambda$static$3
	m	()Lbge;	c	getType
	m	(Lbfv;)Ljava/lang/Integer;	c	lambda$static$1
		p	0		provider
	m	(Lbfv;)Ljava/lang/Integer;	d	lambda$static$0
		p	0		provider
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	minInclusive
	f	I	f	maxInclusive
c	bfw	net/minecraft/util/valueproviders/ClampedInt
	m	(Lbgd;II)V	<init>	<init>
		p	1		source
		p	2		min
		p	3		max
	m	()I	a	getMinValue
	m	(Lasc;)I	a	sample
		p	1		random
	m	(Lbfw;)Lcom/mojang/serialization/DataResult;	a	lambda$static$5
		p	0		provider
	m	(Lbgd;II)Lbfw;	a	of
		p	0		source
		p	1		min
		p	2		max
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	()I	b	getMaxValue
	m	(Lbfw;)Ljava/lang/String;	b	lambda$static$4
	m	()Lbge;	c	getType
	m	(Lbfw;)Ljava/lang/Integer;	c	lambda$static$2
		p	0		provider
	m	(Lbfw;)Ljava/lang/Integer;	d	lambda$static$1
		p	0		provider
	m	(Lbfw;)Lbgd;	e	lambda$static$0
		p	0		provider
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lbgd;	b	source
	f	I	f	minInclusive
	f	I	g	maxInclusive
c	bfx	net/minecraft/util/valueproviders/ClampedNormalFloat
	m	(FFFF)V	<init>	<init>
		p	1		mean
		p	2		deviation
		p	3		min
		p	4		max
	m	()F	a	getMinValue
	m	(FFFF)Lbfx;	a	of
		p	0		mean
		p	1		deviation
		p	2		min
		p	3		max
	m	(Lasc;)F	a	sample
		p	1		random
	m	(Lasc;FFFF)F	a	sample
		p	0		random
		p	1		mean
		p	2		deviation
		p	3		min
		p	4		max
	m	(Lbfx;)Lcom/mojang/serialization/DataResult;	a	lambda$static$6
		p	0		provider
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
		p	0		instance
	m	()F	b	getMaxValue
	m	(Lbfx;)Ljava/lang/String;	b	lambda$static$5
	m	()Lbgc;	c	getType
	m	(Lbfx;)Ljava/lang/Float;	c	lambda$static$3
		p	0		provider
	m	(Lbfx;)Ljava/lang/Float;	d	lambda$static$2
		p	0		provider
	m	(Lbfx;)Ljava/lang/Float;	e	lambda$static$1
		p	0		provider
	m	(Lbfx;)Ljava/lang/Float;	f	lambda$static$0
		p	0		provider
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	F	b	mean
	f	F	d	deviation
	f	F	e	min
	f	F	f	max
c	bfy	net/minecraft/util/valueproviders/ClampedNormalInt
	m	(FFII)V	<init>	<init>
		p	1		mean
		p	2		deviation
		p	3		min
		p	4		max
	m	()I	a	getMinValue
	m	(FFII)Lbfy;	a	of
		p	0		mean
		p	1		deviation
		p	2		min
		p	3		max
	m	(Lasc;)I	a	sample
		p	1		random
	m	(Lasc;FFFF)I	a	sample
		p	0		random
		p	1		mean
		p	2		deviation
		p	3		min
		p	4		max
	m	(Lbfy;)Lcom/mojang/serialization/DataResult;	a	lambda$static$6
		p	0		provider
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
		p	0		instance
	m	()I	b	getMaxValue
	m	(Lbfy;)Ljava/lang/String;	b	lambda$static$5
	m	()Lbge;	c	getType
	m	(Lbfy;)Ljava/lang/Integer;	c	lambda$static$3
		p	0		provider
	m	(Lbfy;)Ljava/lang/Integer;	d	lambda$static$2
		p	0		provider
	m	(Lbfy;)Ljava/lang/Float;	e	lambda$static$1
		p	0		provider
	m	(Lbfy;)Ljava/lang/Float;	f	lambda$static$0
		p	0		provider
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	F	b	mean
	f	F	f	deviation
	f	I	g	min_inclusive
	f	I	h	max_inclusive
c	bfz	net/minecraft/util/valueproviders/ConstantFloat
	m	(F)V	<init>	<init>
		p	1		value
	m	()F	a	getMinValue
	m	(F)Lbfz;	a	of
		p	0		value
	m	(Lasc;)F	a	sample
		p	1		random
	m	()F	b	getMaxValue
	m	()Lbgc;	c	getType
	m	()F	d	getValue
	f	Lbfz;	a	ZERO
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	F	d	value
c	bga	net/minecraft/util/valueproviders/ConstantInt
	m	(I)V	<init>	<init>
		p	1		value
	m	()I	a	getMinValue
	m	(I)Lbga;	a	of
		p	0		value
	m	(Lasc;)I	a	sample
		p	1		random
	m	()I	b	getMaxValue
	m	()Lbge;	c	getType
	m	()I	d	getValue
	f	Lbga;	a	ZERO
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	I	f	value
c	bgb	net/minecraft/util/valueproviders/FloatProvider
	m	()F	a	getMinValue
	m	(FF)Lcom/mojang/serialization/Codec;	a	codec
		p	0		min
		p	1		max
	m	(FFLbgb;)Lcom/mojang/serialization/DataResult;	a	lambda$codec$5
		p	2		provider
	m	(FLbgb;)Ljava/lang/String;	a	lambda$codec$4
	m	(Lbgb;)Lcom/mojang/datafixers/util/Either;	a	lambda$static$2
		p	0		provider
	m	(Lcom/mojang/datafixers/util/Either;)Lbgb;	a	lambda$static$1
		p	0		either
	m	()F	b	getMaxValue
	m	(FLbgb;)Ljava/lang/String;	b	lambda$codec$3
	m	(Lbgb;)Lbgb;	b	lambda$static$0
		p	0		provider
	m	()Lbgc;	c	getType
	f	Lcom/mojang/serialization/Codec;	a	CONSTANT_OR_DISPATCH_CODEC
	f	Lcom/mojang/serialization/Codec;	c	CODEC
c	bgc	net/minecraft/util/valueproviders/FloatProviderType
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	lambda$register$0
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lbgc;	a	register
		p	0		id
		p	1		codec
	f	Lbgc;	a	CONSTANT
	f	Lbgc;	b	UNIFORM
	f	Lbgc;	c	CLAMPED_NORMAL
	f	Lbgc;	d	TRAPEZOID
c	bgd	net/minecraft/util/valueproviders/IntProvider
	m	()I	a	getMinValue
	m	(IILbgd;)Lcom/mojang/serialization/DataResult;	a	lambda$codec$5
		p	2		provider
	m	(IILcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	codec
		p	0		min
		p	1		max
		p	2		providerCodec
	m	(ILbgd;)Ljava/lang/String;	a	lambda$codec$4
	m	(Lasc;)I	a	sample
		p	1		random
	m	(Lbgd;)Lcom/mojang/datafixers/util/Either;	a	lambda$static$2
		p	0		provider
	m	(Lcom/mojang/datafixers/util/Either;)Lbgd;	a	lambda$static$1
		p	0		either
	m	()I	b	getMaxValue
	m	(II)Lcom/mojang/serialization/Codec;	b	codec
		p	0		min
		p	1		max
	m	(ILbgd;)Ljava/lang/String;	b	lambda$codec$3
	m	(Lbgd;)Lbgd;	b	lambda$static$0
		p	0		provider
	m	()Lbge;	c	getType
	f	Lcom/mojang/serialization/Codec;	a	CONSTANT_OR_DISPATCH_CODEC
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Lcom/mojang/serialization/Codec;	d	NON_NEGATIVE_CODEC
	f	Lcom/mojang/serialization/Codec;	e	POSITIVE_CODEC
c	bge	net/minecraft/util/valueproviders/IntProviderType
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	lambda$register$0
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lbge;	a	register
		p	0		id
		p	1		codec
	f	Lbge;	a	CONSTANT
	f	Lbge;	b	UNIFORM
	f	Lbge;	c	BIASED_TO_BOTTOM
	f	Lbge;	d	CLAMPED
	f	Lbge;	e	WEIGHTED_LIST
	f	Lbge;	f	CLAMPED_NORMAL
c	bgf	net/minecraft/util/valueproviders/MultipliedFloats
	m	([Lbgg;)V	<init>	<init>
		p	1		multipliers
	m	(Lasc;)F	a	sample
		p	1		random
	f	[Lbgg;	a	values
c	bgg	net/minecraft/util/valueproviders/SampledFloat
	m	(Lasc;)F	a	sample
		p	1		random
c	bgh	net/minecraft/util/valueproviders/TrapezoidFloat
	m	(FFF)V	<init>	<init>
		p	1		min
		p	2		max
		p	3		plateau
	m	()F	a	getMinValue
	m	(FFF)Lbgh;	a	of
		p	0		min
		p	1		max
		p	2		plateau
	m	(Lasc;)F	a	sample
		p	1		random
	m	(Lbgh;)Lcom/mojang/serialization/DataResult;	a	lambda$static$6
		p	0		provider
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	()F	b	getMaxValue
	m	(Lbgh;)Ljava/lang/String;	b	lambda$static$5
	m	()Lbgc;	c	getType
	m	(Lbgh;)Ljava/lang/String;	c	lambda$static$4
	m	(Lbgh;)Ljava/lang/Float;	d	lambda$static$2
		p	0		provider
	m	(Lbgh;)Ljava/lang/Float;	e	lambda$static$1
		p	0		provider
	m	(Lbgh;)Ljava/lang/Float;	f	lambda$static$0
		p	0		provider
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	F	b	min
	f	F	d	max
	f	F	e	plateau
c	bgi	net/minecraft/util/valueproviders/UniformFloat
	m	(FF)V	<init>	<init>
		p	1		min
		p	2		max
	m	()F	a	getMinValue
	m	(Lasc;)F	a	sample
		p	1		random
	m	(Lbgi;)Lcom/mojang/serialization/DataResult;	a	lambda$static$4
		p	0		provider
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	()F	b	getMaxValue
	m	(FF)Lbgi;	b	of
		p	0		min
		p	1		max
	m	(Lbgi;)Ljava/lang/String;	b	lambda$static$3
	m	()Lbgc;	c	getType
	m	(Lbgi;)Ljava/lang/Float;	c	lambda$static$1
		p	0		provider
	m	(Lbgi;)Ljava/lang/Float;	d	lambda$static$0
		p	0		provider
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	F	b	minInclusive
	f	F	d	maxExclusive
c	bgj	net/minecraft/util/valueproviders/UniformInt
	m	(II)V	<init>	<init>
		p	1		min
		p	2		max
	m	()I	a	getMinValue
	m	(II)Lbgj;	a	of
		p	0		min
		p	1		max
	m	(Lasc;)I	a	sample
		p	1		random
	m	(Lbgj;)Lcom/mojang/serialization/DataResult;	a	lambda$static$4
		p	0		provider
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	()I	b	getMaxValue
	m	(Lbgj;)Ljava/lang/String;	b	lambda$static$3
	m	()Lbge;	c	getType
	m	(Lbgj;)Ljava/lang/Integer;	c	lambda$static$1
		p	0		provider
	m	(Lbgj;)Ljava/lang/Integer;	d	lambda$static$0
		p	0		provider
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	minInclusive
	f	I	f	maxInclusive
c	bgk	net/minecraft/util/valueproviders/WeightedListInt
	m	(Lbfi;)V	<init>	<init>
		p	1		weightedList
	m	()I	a	getMinValue
	m	(Lasc;)I	a	sample
		p	1		random
	m	(Lbgk;)Lbfi;	a	lambda$static$0
		p	0		provider
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	()I	b	getMaxValue
	m	()Lbge;	c	getType
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lbfi;	b	distribution
	f	I	f	minValue
	f	I	g	maxValue
c	bgl	net/minecraft/util/valueproviders/package-info
c	bgm	net/minecraft/util/worldupdate/WorldUpgrader
	m	(Lecg$c;Lcom/mojang/datafixers/DataFixer;Lhq;Z)V	<init>	<init>
		p	1		session
		p	2		dataFixer
		p	3		dimensionOptionsRegistry
		p	4		eraseCache
	m	()V	a	cancel
	m	(Laev;)F	a	dimensionProgress
		p	1		world
	m	(Ljava/io/File;Ljava/lang/String;)Z	a	lambda$getAllChunkPos$2
		p	0		directory
		p	1		name
	m	(Ljava/lang/Thread;Ljava/lang/Throwable;)V	a	lambda$new$0
		p	1		thread
		p	2		throwable
	m	()Z	b	isFinished
	m	(Laev;)Ljava/util/List;	b	getAllChunkPos
		p	1		world
	m	()Ljava/util/Set;	c	levels
	m	()F	d	getProgress
	m	()I	e	getTotalChunks
	m	()I	f	getConverted
	m	()I	g	getSkipped
	m	()Ltl;	h	getStatus
	m	()V	i	work
	m	()Lecc;	j	lambda$work$1
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/concurrent/ThreadFactory;	b	THREAD_FACTORY
	f	Lhq;	c	dimensions
	f	Ljava/util/Set;	d	levels
	f	Z	e	eraseCache
	f	Lecg$c;	f	levelStorage
	f	Ljava/lang/Thread;	g	thread
	f	Lcom/mojang/datafixers/DataFixer;	h	dataFixer
	f	Z	i	running
	f	Z	j	finished
	f	F	k	progress
	f	I	l	totalChunks
	f	I	m	converted
	f	I	n	skipped
	f	Lit/unimi/dsi/fastutil/objects/Object2FloatMap;	o	progressMap
	f	Ltl;	p	status
	f	Ljava/util/regex/Pattern;	q	REGEX
	f	Lecc;	r	overworldDataStorage
c	bgn	net/minecraft/util/worldupdate/package-info
c	bgo	net/minecraft/world/BossEvent
	m	(Ljava/util/UUID;Ltl;Lbgo$a;Lbgo$b;)V	<init>	<init>
		p	1		uuid
		p	2		name
		p	3		color
		p	4		style
	m	(F)V	a	setProgress
		p	1		percent
	m	(Lbgo$a;)V	a	setColor
		p	1		color
	m	(Lbgo$b;)V	a	setOverlay
		p	1		style
	m	(Ltl;)V	a	setName
		p	1		name
	m	(Z)Lbgo;	a	setDarkenScreen
		p	1		darkenSky
	m	(Z)Lbgo;	b	setPlayBossMusic
		p	1		dragonMusic
	m	(Z)Lbgo;	c	setCreateWorldFog
		p	1		thickenFog
	m	()Ljava/util/UUID;	i	getId
	m	()Ltl;	j	getName
	m	()F	k	getProgress
	m	()Lbgo$a;	l	getColor
	m	()Lbgo$b;	m	getOverlay
	m	()Z	n	shouldDarkenScreen
	m	()Z	o	shouldPlayBossMusic
	m	()Z	p	shouldCreateWorldFog
	f	Ltl;	a	name
	f	F	b	progress
	f	Lbgo$a;	c	color
	f	Lbgo$b;	d	overlay
	f	Z	e	darkenScreen
	f	Z	f	playBossMusic
	f	Z	g	createWorldFog
	f	Ljava/util/UUID;	h	id
c	bgo$a	net/minecraft/world/BossEvent$BossBarColor
	m	(Ljava/lang/String;ILjava/lang/String;Ln;)V	<init>	<init>
		p	3		name
		p	4		format
	m	()Ln;	a	getFormatting
	m	(Ljava/lang/String;)Lbgo$a;	a	byName
		p	0		name
	m	()Ljava/lang/String;	b	getName
	m	()[Lbgo$a;	c	$values
	f	Lbgo$a;	a	PINK
	f	Lbgo$a;	b	BLUE
	f	Lbgo$a;	c	RED
	f	Lbgo$a;	d	GREEN
	f	Lbgo$a;	e	YELLOW
	f	Lbgo$a;	f	PURPLE
	f	Lbgo$a;	g	WHITE
	f	Ljava/lang/String;	h	name
	f	Ln;	i	formatting
	f	[Lbgo$a;	j	$VALUES
c	bgo$b	net/minecraft/world/BossEvent$BossBarOverlay
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/lang/String;)Lbgo$b;	a	byName
		p	0		name
	m	()[Lbgo$b;	b	$values
	f	Lbgo$b;	a	PROGRESS
	f	Lbgo$b;	b	NOTCHED_6
	f	Lbgo$b;	c	NOTCHED_10
	f	Lbgo$b;	d	NOTCHED_12
	f	Lbgo$b;	e	NOTCHED_20
	f	Ljava/lang/String;	f	name
	f	[Lbgo$b;	g	$VALUES
c	bgp	net/minecraft/world/Clearable
	m	()V	a	clearContent
	m	(Ljava/lang/Object;)V	a_	tryClear
		p	0		o
c	bgq	net/minecraft/world/CompoundContainer
	m	(Lbgr;Lbgr;)V	<init>	<init>
		p	1		first
		p	2		second
	m	()V	a	clearContent
	m	(I)Lcjf;	a	getItem
		p	1		slot
	m	(II)Lcjf;	a	removeItem
		p	1		slot
		p	2		amount
	m	(ILcjf;)V	a	setItem
		p	1		slot
		p	2		stack
	m	(Lbgr;)Z	a	contains
		p	1		inventory
	m	(Lcbu;)Z	a	stillValid
		p	1		player
	m	()Z	af_	isEmpty
	m	()I	ag_	getMaxStackSize
	m	()I	b	getContainerSize
	m	(I)Lcjf;	b	removeItemNoUpdate
		p	1		slot
	m	(ILcjf;)Z	b	canPlaceItem
		p	1		slot
		p	2		stack
	m	(Lcbu;)V	c	stopOpen
		p	1		player
	m	(Lcbu;)V	d_	startOpen
		p	1		player
	m	()V	e	setChanged
	f	Lbgr;	c	container1
	f	Lbgr;	d	container2
c	bgr	net/minecraft/world/Container
	m	(I)Lcjf;	a	getItem
		p	1		slot
	m	(II)Lcjf;	a	removeItem
		p	1		slot
		p	2		amount
	m	(ILcjf;)V	a	setItem
		p	1		slot
		p	2		stack
	m	(Lbgr;ILcjf;)Z	a	canTakeItem
		p	1		hopperInventory
		p	2		slot
		p	3		stack
	m	(Lcbu;)Z	a	stillValid
		p	1		player
	m	(Ldcv;Lcbu;)Z	a	stillValidBlockEntity
		p	0		blockEntity
		p	1		player
	m	(Ldcv;Lcbu;I)Z	a	stillValidBlockEntity
		p	0		blockEntity
		p	1		player
		p	2		range
	m	(Ljava/util/Set;)Z	a	hasAnyOf
		p	1		items
	m	(Ljava/util/Set;Lcjf;)Z	a	lambda$hasAnyOf$0
		p	1		stack
	m	(Lcja;)I	a_	countItem
		p	1		item
	m	(Ljava/util/function/Predicate;)Z	a_	hasAnyMatching
		p	1		predicate
	m	()Z	af_	isEmpty
	m	()I	ag_	getMaxStackSize
	m	()I	b	getContainerSize
	m	(I)Lcjf;	b	removeItemNoUpdate
		p	1		slot
	m	(ILcjf;)Z	b	canPlaceItem
		p	1		slot
		p	2		stack
	m	(Lcbu;)V	c	stopOpen
		p	1		player
	m	(Lcbu;)V	d_	startOpen
		p	1		player
	m	()V	e	setChanged
	f	I	m_	LARGE_MAX_STACK_SIZE
	f	I	n_	DEFAULT_DISTANCE_LIMIT
c	bgs	net/minecraft/world/ContainerHelper
	m	(Lbgr;Ljava/util/function/Predicate;IZ)I	a	clearOrCountMatchingItems
		p	0		inventory
		p	1		shouldRemove
		p	2		maxCount
		p	3		dryRun
	m	(Lcjf;Ljava/util/function/Predicate;IZ)I	a	clearOrCountMatchingItems
		p	0		stack
		p	1		shouldRemove
		p	2		maxCount
		p	3		dryRun
	m	(Ljava/util/List;I)Lcjf;	a	takeItem
		p	0		stacks
		p	1		slot
	m	(Ljava/util/List;II)Lcjf;	a	removeItem
		p	0		stacks
		p	1		slot
		p	2		amount
	m	(Lqw;Lhn;)Lqw;	a	saveAllItems
		p	0		nbt
		p	1		stacks
	m	(Lqw;Lhn;Z)Lqw;	a	saveAllItems
		p	0		nbt
		p	1		stacks
		p	2		setIfEmpty
	m	(Lqw;Lhn;)V	b	loadAllItems
		p	0		nbt
		p	1		stacks
c	bgt	net/minecraft/world/ContainerListener
	m	(Lbgr;)V	a	containerChanged
		p	1		sender
c	bgu	net/minecraft/world/Containers
	m	(Lcpv;DDDLbgr;)V	a	dropContents
		p	0		world
		p	1		x
		p	3		y
		p	5		z
		p	7		inventory
	m	(Lcpv;DDDLcjf;)V	a	dropItemStack
		p	0		world
		p	1		x
		p	3		y
		p	5		z
		p	7		stack
	m	(Lcpv;Lbiq;Lbgr;)V	a	dropContents
		p	0		world
		p	1		entity
		p	2		inventory
	m	(Lcpv;Lgw;Lbgr;)V	a	dropContents
		p	0		world
		p	1		pos
		p	2		inventory
	m	(Lcpv;Lgw;Lcjf;)V	a	lambda$dropContents$0
		p	2		stack
	m	(Lcpv;Lgw;Lhn;)V	a	dropContents
		p	0		world
		p	1		pos
		p	2		stacks
c	bgv	net/minecraft/world/Difficulty
	m	(Ljava/lang/String;IILjava/lang/String;)V	<init>	<init>
		p	3		id
		p	4		name
	m	()I	a	getId
	m	(I)Lbgv;	a	byId
		p	0		id
	m	(Ljava/lang/String;)Lbgv;	a	byName
		p	0		name
	m	()Ltl;	b	getDisplayName
	m	()Ljava/lang/String;	c	getSerializedName
	m	()Ltl;	d	getInfo
	m	()Ljava/lang/String;	e	getKey
	m	()[Lbgv;	f	$values
	f	Lbgv;	a	PEACEFUL
	f	Lbgv;	b	EASY
	f	Lbgv;	c	NORMAL
	f	Lbgv;	d	HARD
	f	Lasp$a;	e	CODEC
	f	Ljava/util/function/IntFunction;	f	BY_ID
	f	I	g	id
	f	Ljava/lang/String;	h	key
	f	[Lbgv;	i	$VALUES
c	bgw	net/minecraft/world/DifficultyInstance
	m	(Lbgv;JJF)V	<init>	<init>
		p	1		difficulty
		p	2		timeOfDay
		p	4		inhabitedTime
		p	6		moonSize
	m	()Lbgv;	a	getDifficulty
	m	(F)Z	a	isHarderThan
		p	1		difficulty
	m	(Lbgv;JJF)F	a	calculateDifficulty
		p	1		difficulty
		p	2		timeOfDay
		p	4		inhabitedTime
		p	6		moonSize
	m	()F	b	getEffectiveDifficulty
	m	()Z	c	isHard
	m	()F	d	getSpecialMultiplier
	f	F	a	DIFFICULTY_TIME_GLOBAL_OFFSET
	f	F	b	MAX_DIFFICULTY_TIME_GLOBAL
	f	F	c	MAX_DIFFICULTY_TIME_LOCAL
	f	Lbgv;	d	base
	f	F	e	effectiveDifficulty
c	bgx	net/minecraft/world/InteractionHand
	m	()[Lbgx;	a	$values
	f	Lbgx;	a	MAIN_HAND
	f	Lbgx;	b	OFF_HAND
	f	[Lbgx;	c	$VALUES
c	bgy	net/minecraft/world/InteractionResult
	m	()Z	a	consumesAction
	m	(Z)Lbgy;	a	sidedSuccess
		p	0		swingHand
	m	()Z	b	shouldSwing
	m	()Z	c	shouldAwardStats
	m	()[Lbgy;	d	$values
	f	Lbgy;	a	SUCCESS
	f	Lbgy;	b	CONSUME
	f	Lbgy;	c	CONSUME_PARTIAL
	f	Lbgy;	d	PASS
	f	Lbgy;	e	FAIL
	f	[Lbgy;	f	$VALUES
c	bgz	net/minecraft/world/InteractionResultHolder
	m	(Lbgy;Ljava/lang/Object;)V	<init>	<init>
		p	1		result
		p	2		value
	m	()Lbgy;	a	getResult
	m	(Ljava/lang/Object;)Lbgz;	a	success
		p	0		data
	m	(Ljava/lang/Object;Z)Lbgz;	a	sidedSuccess
		p	0		data
		p	1		swingHand
	m	()Ljava/lang/Object;	b	getObject
	m	(Ljava/lang/Object;)Lbgz;	b	consume
		p	0		data
	m	(Ljava/lang/Object;)Lbgz;	c	pass
		p	0		data
	m	(Ljava/lang/Object;)Lbgz;	d	fail
		p	0		data
	f	Lbgy;	a	result
	f	Ljava/lang/Object;	b	object
c	bha	net/minecraft/world/LockCode
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		key
	m	(Lcjf;)Z	a	unlocksWith
		p	1		stack
	m	(Lqw;)V	a	addToTag
		p	1		nbt
	m	(Lqw;)Lbha;	b	fromTag
		p	0		nbt
	f	Lbha;	a	NO_LOCK
	f	Ljava/lang/String;	b	TAG_LOCK
	f	Ljava/lang/String;	c	key
c	bhb	net/minecraft/world/MenuProvider
	m	()Ltl;	N_	getDisplayName
c	bhc	net/minecraft/world/Nameable
	m	()Ltl;	N_	getDisplayName
	m	()Ltl;	ab	getName
	m	()Z	ac	hasCustomName
	m	()Ltl;	ad	getCustomName
c	bhd	net/minecraft/world/RandomSequence
	m	(JLaew;)V	<init>	<init>
		p	1		seed
		p	3		id
	m	(JLjava/util/Optional;)V	<init>	<init>
		p	1		seed
		p	3		id
	m	(Ldlt;)V	<init>	<init>
		p	1		source
	m	()Lasc;	a	random
	m	(JLjava/util/Optional;)Ldlt;	a	createSequence
		p	0		seed
		p	2		id
	m	(Laew;)Ldlh$a;	a	seedForKey
		p	0		id
	m	(Lbhd;)Ldlt;	a	lambda$static$0
		p	0		sequence
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldlt;	b	source
c	bhe	net/minecraft/world/RandomSequences
	m	(J)V	<init>	<init>
		p	1		seed
	m	()I	a	clear
	m	(IZZ)V	a	setSeedDefaults
		p	1		salt
		p	2		includeWorldSeed
		p	3		includeSequenceId
	m	(J)Lebr$a;	a	factory
		p	0		seed
	m	(JLqw;)Lbhe;	a	load
		p	0		seed
		p	2		nbt
	m	(Laew;)Lasc;	a	get
		p	1		id
	m	(Laew;IZZ)V	a	reset
		p	1		id
		p	2		salt
		p	3		includeWorldSeed
		p	4		includeSequenceId
	m	(Ljava/util/function/BiConsumer;)V	a	forAllSequences
		p	1		consumer
	m	(Lqw;)Lqw;	a	save
		p	1		nbt
	m	(Lqw;Laew;Lbhd;)V	a	lambda$save$2
		p	1		id
		p	2		sequence
	m	(Lqw;Ljava/lang/String;Z)Z	a	getBooleanWithDefault
		p	0		nbt
		p	1		key
		p	2		fallback
	m	(J)Lbhe;	b	lambda$factory$0
	m	(JLqw;)Lbhe;	b	lambda$factory$1
		p	2		nbt
	m	(Laew;)V	b	reset
		p	1		id
	m	(Laew;IZZ)Lbhd;	b	createSequence
		p	1		id
		p	2		salt
		p	3		includeWorldSeed
		p	4		includeSequenceId
	m	(Laew;)Lbhd;	c	createSequence
		p	1		id
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	J	b	worldSeed
	f	I	c	salt
	f	Z	d	includeWorldSeed
	f	Z	e	includeSequenceId
	f	Ljava/util/Map;	f	sequences
c	bhe$a	net/minecraft/world/RandomSequences$DirtyMarkingRandomSource
	m	(Lbhe;Lasc;)V	<init>	<init>
		p	2		random
	m	(I)I	a	nextInt
		p	1		bound
	m	(J)V	b	setSeed
		p	1		seed
	m	()Lasc;	d	fork
	m	()Ldlf;	e	forkPositional
	m	()I	f	nextInt
	m	()J	g	nextLong
	m	()Z	h	nextBoolean
	m	()F	i	nextFloat
	m	()D	j	nextDouble
	m	()D	k	nextGaussian
	f	Lbhe;	b	this$0
	f	Lasc;	c	random
c	bhf	net/minecraft/world/SimpleContainer
	m	(I)V	<init>	<init>
		p	1		size
	m	([Lcjf;)V	<init>	<init>
		p	1		items
	m	()V	a	clearContent
	m	(I)Lcjf;	a	getItem
		p	1		slot
	m	(II)Lcjf;	a	removeItem
		p	1		slot
		p	2		amount
	m	(ILcjf;)V	a	setItem
		p	1		slot
		p	2		stack
	m	(Lbgt;)V	a	addListener
		p	1		listener
	m	(Lcbu;)Z	a	stillValid
		p	1		player
	m	(Lcby;)V	a	fillStackedContents
		p	1		finder
	m	(Lcja;I)Lcjf;	a	removeItemType
		p	1		item
		p	2		count
	m	(Lcjf;)Lcjf;	a	addItem
		p	1		stack
	m	(Lcjf;Lcjf;)V	a	moveItemsBetweenStacks
		p	1		source
		p	2		target
	m	(Lrc;)V	a	fromTag
		p	1		nbtList
	m	()Z	af_	isEmpty
	m	()I	b	getContainerSize
	m	(I)Lcjf;	b	removeItemNoUpdate
		p	1		slot
	m	(Lbgt;)V	b	removeListener
		p	1		listener
	m	(Lcjf;)Z	b	canAddItem
		p	1		stack
	m	(Lcjf;)V	c	moveItemToEmptySlots
		p	1		stack
	m	(Lcjf;)V	d	moveItemToOccupiedSlotsWithSameType
		p	1		stack
	m	()V	e	setChanged
	m	(Lcjf;)Z	e	lambda$toString$1
		p	0		stack
	m	()Ljava/util/List;	f	removeAllItems
	m	(Lcjf;)Z	f	lambda$removeAllItems$0
		p	0		stack
	m	()Lrc;	g	createTag
	f	I	c	size
	f	Lhn;	d	items
	f	Ljava/util/List;	e	listeners
c	bhg	net/minecraft/world/SimpleMenuProvider
	m	(Lcfp;Ltl;)V	<init>	<init>
		p	1		baseFactory
		p	2		name
	m	()Ltl;	N_	getDisplayName
	m	(ILcbt;Lcbu;)Lcel;	createMenu	createMenu
		p	1		syncId
		p	2		playerInventory
		p	3		player
	f	Ltl;	a	title
	f	Lcfp;	b	menuConstructor
c	bhh	net/minecraft/world/WorldlyContainer
	m	(ILcjf;Lha;)Z	a	canPlaceItemThroughFace
		p	1		slot
		p	2		stack
		p	3		dir
	m	(Lha;)[I	a	getSlotsForFace
		p	1		side
	m	(ILcjf;Lha;)Z	b	canTakeItemThroughFace
		p	1		slot
		p	2		stack
		p	3		dir
c	bhi	net/minecraft/world/WorldlyContainerHolder
	m	(Ldfj;Lcpw;Lgw;)Lbhh;	a	getContainer
		p	1		state
		p	2		world
		p	3		pos
c	bhj	net/minecraft/world/damagesource/CombatEntry
	m	(Lbho;FLbht;F)V	<init>	<init>
		p	1		damageSource
	m	()Lbho;	a	source
	m	()F	b	damage
	m	()Lbht;	c	fallLocation
	m	()F	d	fallDistance
	f	Lbho;	a	source
	f	F	b	damage
	f	Lbht;	c	fallLocation
	f	F	d	fallDistance
c	bhk	net/minecraft/world/damagesource/CombatRules
	m	(FF)F	a	getDamageAfterMagicAbsorb
		p	0		damageDealt
		p	1		protection
	m	(FFF)F	a	getDamageAfterAbsorb
		p	0		damage
		p	1		armor
		p	2		armorToughness
	f	F	a	MAX_ARMOR
	f	F	b	ARMOR_PROTECTION_DIVIDER
	f	F	c	BASE_ARMOR_TOUGHNESS
	f	F	d	MIN_ARMOR_RATIO
	f	I	e	NUM_ARMOR_ITEMS
c	bhl	net/minecraft/world/damagesource/CombatTracker
	m	(Lbjg;)V	<init>	<init>
		p	1		entity
	m	()Ltl;	a	getDeathMessage
	m	(Lbhj;Lbiq;)Ltl;	a	getFallMessage
		p	1		damageRecord
		p	2		attacker
	m	(Lbho;)Z	a	shouldEnterCombat
		p	0		damageSource
	m	(Lbho;F)V	a	recordDamage
		p	1		damageSource
		p	2		damage
	m	(Lbiq;)Ltl;	a	getDisplayName
		p	0		entity
	m	(Lbiq;Ltl;Ljava/lang/String;Ljava/lang/String;)Ltl;	a	getMessageForAssistedFall
		p	1		attacker
		p	2		attackerDisplayName
		p	3		itemDeathTranslationKey
		p	4		deathTranslationKey
	m	()I	b	getCombatDuration
	m	()V	c	recheckStatus
	m	()Lbhj;	d	getMostSignificantFall
	f	I	a	RESET_DAMAGE_STATUS_TIME
	f	I	b	RESET_COMBAT_STATUS_TIME
	f	Luh;	c	INTENTIONAL_GAME_DESIGN_STYLE
	f	Ljava/util/List;	d	entries
	f	Lbjg;	e	mob
	f	I	f	lastDamageTime
	f	I	g	combatStartTime
	f	I	h	combatEndTime
	f	Z	i	inCombat
	f	Z	j	takingDamage
c	bhm	net/minecraft/world/damagesource/DamageEffects
	m	(Ljava/lang/String;ILjava/lang/String;Lapc;)V	<init>	<init>
		p	3		id
		p	4		sound
	m	()Lapc;	a	sound
	m	()[Lbhm;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lbhm;	a	HURT
	f	Lbhm;	b	THORNS
	f	Lbhm;	c	DROWNING
	f	Lbhm;	d	BURNING
	f	Lbhm;	e	POKING
	f	Lbhm;	f	FREEZING
	f	Lcom/mojang/serialization/Codec;	g	CODEC
	f	Ljava/lang/String;	h	id
	f	Lapc;	i	sound
	f	[Lbhm;	j	$VALUES
c	bhn	net/minecraft/world/damagesource/DamageScaling
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		id
	m	()[Lbhn;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lbhn;	a	NEVER
	f	Lbhn;	b	WHEN_CAUSED_BY_LIVING_NON_PLAYER
	f	Lbhn;	c	ALWAYS
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	Ljava/lang/String;	e	id
	f	[Lbhn;	f	$VALUES
c	bho	net/minecraft/world/damagesource/DamageSource
	m	(Lhe;)V	<init>	<init>
		p	1		type
	m	(Lhe;Lbiq;)V	<init>	<init>
		p	1		type
		p	2		attacker
	m	(Lhe;Lbiq;Lbiq;)V	<init>	<init>
		p	1		type
		p	2		source
		p	3		attacker
	m	(Lhe;Lbiq;Lbiq;Lehn;)V	<init>	<init>
		p	1		type
		p	2		source
		p	3		attacker
		p	4		position
	m	(Lhe;Lehn;)V	<init>	<init>
		p	1		type
		p	2		position
	m	()F	a	getFoodExhaustion
	m	(Laev;)Z	a	is
		p	1		typeKey
	m	(Laqh;)Z	a	is
		p	1		tag
	m	(Lbjg;)Ltl;	a	getLocalizedDeathMessage
		p	1		killed
	m	()Z	b	isIndirect
	m	()Lbiq;	c	getDirectEntity
	m	()Lbiq;	d	getEntity
	m	()Ljava/lang/String;	e	getMsgId
	m	()Z	f	scalesWithDifficulty
	m	()Z	g	isCreativePlayer
	m	()Lehn;	h	getSourcePosition
	m	()Lehn;	i	sourcePositionRaw
	m	()Lbhq;	j	type
	m	()Lhe;	k	typeHolder
	f	Lhe;	a	type
	f	Lbiq;	b	causingEntity
	f	Lbiq;	c	directEntity
	f	Lehn;	d	damageSourcePosition
c	bho$1	net/minecraft/world/damagesource/DamageSource$1
	f	[I	a	$SwitchMap$net$minecraft$world$damagesource$DamageScaling
c	bhp	net/minecraft/world/damagesource/DamageSources
	m	(Lhr;)V	<init>	<init>
		p	1		registryManager
	m	()Lbho;	a	inFire
	m	(Laev;)Lbho;	a	source
		p	1		key
	m	(Laev;Lbiq;)Lbho;	a	source
		p	1		key
		p	2		attacker
	m	(Laev;Lbiq;Lbiq;)Lbho;	a	source
		p	1		key
		p	2		source
		p	3		attacker
	m	(Lbiq;)Lbho;	a	fallingBlock
		p	1		attacker
	m	(Lbiq;Lbiq;)Lbho;	a	trident
		p	1		source
		p	2		attacker
	m	(Lbiq;Lbjg;)Lbho;	a	mobProjectile
		p	1		source
		p	2		attacker
	m	(Lbjg;)Lbho;	a	sting
		p	1		attacker
	m	(Lcbu;)Lbho;	a	playerAttack
		p	1		attacker
	m	(Lcca;Lbiq;)Lbho;	a	arrow
		p	1		source
		p	2		attacker
	m	(Lccg;Lbiq;)Lbho;	a	fireball
		p	1		source
		p	2		attacker
	m	(Lcch;Lbiq;)Lbho;	a	fireworks
		p	1		source
		p	2		attacker
	m	(Lccz;Lbiq;)Lbho;	a	witherSkull
		p	1		source
		p	2		attacker
	m	(Lcpn;)Lbho;	a	explosion
		p	1		explosion
	m	(Lehn;)Lbho;	a	badRespawnPointExplosion
		p	1		position
	m	()Lbho;	b	lightningBolt
	m	(Lbiq;)Lbho;	b	anvil
		p	1		attacker
	m	(Lbiq;Lbiq;)Lbho;	b	thrown
		p	1		source
		p	2		attacker
	m	(Lbjg;)Lbho;	b	mobAttack
		p	1		attacker
	m	()Lbho;	c	onFire
	m	(Lbiq;)Lbho;	c	fallingStalactite
		p	1		attacker
	m	(Lbiq;Lbiq;)Lbho;	c	indirectMagic
		p	1		source
		p	2		attacker
	m	(Lbjg;)Lbho;	c	noAggroMobAttack
		p	1		attacker
	m	()Lbho;	d	lava
	m	(Lbiq;)Lbho;	d	thorns
		p	1		attacker
	m	(Lbiq;Lbiq;)Lbho;	d	explosion
		p	1		source
		p	2		attacker
	m	()Lbho;	e	hotFloor
	m	(Lbiq;)Lbho;	e	sonicBoom
		p	1		attacker
	m	()Lbho;	f	inWall
	m	()Lbho;	g	cramming
	m	()Lbho;	h	drown
	m	()Lbho;	i	starve
	m	()Lbho;	j	cactus
	m	()Lbho;	k	fall
	m	()Lbho;	l	flyIntoWall
	m	()Lbho;	m	fellOutOfWorld
	m	()Lbho;	n	generic
	m	()Lbho;	o	magic
	m	()Lbho;	p	wither
	m	()Lbho;	q	dragonBreath
	m	()Lbho;	r	dryOut
	m	()Lbho;	s	sweetBerryBush
	m	()Lbho;	t	freeze
	m	()Lbho;	u	stalagmite
	m	()Lbho;	v	outOfBorder
	m	()Lbho;	w	genericKill
	f	Lhq;	a	damageTypes
	f	Lbho;	b	inFire
	f	Lbho;	c	lightningBolt
	f	Lbho;	d	onFire
	f	Lbho;	e	lava
	f	Lbho;	f	hotFloor
	f	Lbho;	g	inWall
	f	Lbho;	h	cramming
	f	Lbho;	i	drown
	f	Lbho;	j	starve
	f	Lbho;	k	cactus
	f	Lbho;	l	fall
	f	Lbho;	m	flyIntoWall
	f	Lbho;	n	fellOutOfWorld
	f	Lbho;	o	generic
	f	Lbho;	p	magic
	f	Lbho;	q	wither
	f	Lbho;	r	dragonBreath
	f	Lbho;	s	dryOut
	f	Lbho;	t	sweetBerryBush
	f	Lbho;	u	freeze
	f	Lbho;	v	stalagmite
	f	Lbho;	w	outsideBorder
	f	Lbho;	x	genericKill
c	bhq	net/minecraft/world/damagesource/DamageType
	m	(Ljava/lang/String;F)V	<init>	<init>
		p	1		msgId
		p	2		exhaustion
	m	(Ljava/lang/String;FLbhm;)V	<init>	<init>
		p	1		msgId
		p	2		exhaustion
		p	3		effects
	m	(Ljava/lang/String;Lbhn;F)V	<init>	<init>
		p	1		msgId
		p	2		scaling
		p	3		exhaustion
	m	(Ljava/lang/String;Lbhn;FLbhm;)V	<init>	<init>
		p	1		msgId
		p	2		scaling
		p	3		exhaustion
		p	4		effects
	m	()Ljava/lang/String;	a	msgId
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Lbhn;	b	scaling
	m	()F	c	exhaustion
	m	()Lbhm;	d	effects
	m	()Lbhs;	e	deathMessageType
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/lang/String;	b	msgId
	f	Lbhn;	c	scaling
	f	F	d	exhaustion
	f	Lbhm;	e	effects
	f	Lbhs;	f	deathMessageType
c	bhr	net/minecraft/world/damagesource/DamageTypes
	m	(Lnr;)V	a	bootstrap
		p	0		damageTypeRegisterable
	f	Laev;	A	MOB_ATTACK_NO_AGGRO
	f	Laev;	B	PLAYER_ATTACK
	f	Laev;	C	ARROW
	f	Laev;	D	TRIDENT
	f	Laev;	E	MOB_PROJECTILE
	f	Laev;	F	FIREWORKS
	f	Laev;	G	FIREBALL
	f	Laev;	H	UNATTRIBUTED_FIREBALL
	f	Laev;	I	WITHER_SKULL
	f	Laev;	J	THROWN
	f	Laev;	K	INDIRECT_MAGIC
	f	Laev;	L	THORNS
	f	Laev;	M	EXPLOSION
	f	Laev;	N	PLAYER_EXPLOSION
	f	Laev;	O	SONIC_BOOM
	f	Laev;	P	BAD_RESPAWN_POINT
	f	Laev;	Q	OUTSIDE_BORDER
	f	Laev;	R	GENERIC_KILL
	f	Laev;	a	IN_FIRE
	f	Laev;	b	LIGHTNING_BOLT
	f	Laev;	c	ON_FIRE
	f	Laev;	d	LAVA
	f	Laev;	e	HOT_FLOOR
	f	Laev;	f	IN_WALL
	f	Laev;	g	CRAMMING
	f	Laev;	h	DROWN
	f	Laev;	i	STARVE
	f	Laev;	j	CACTUS
	f	Laev;	k	FALL
	f	Laev;	l	FLY_INTO_WALL
	f	Laev;	m	FELL_OUT_OF_WORLD
	f	Laev;	n	GENERIC
	f	Laev;	o	MAGIC
	f	Laev;	p	WITHER
	f	Laev;	q	DRAGON_BREATH
	f	Laev;	r	DRY_OUT
	f	Laev;	s	SWEET_BERRY_BUSH
	f	Laev;	t	FREEZE
	f	Laev;	u	STALAGMITE
	f	Laev;	v	FALLING_BLOCK
	f	Laev;	w	FALLING_ANVIL
	f	Laev;	x	FALLING_STALACTITE
	f	Laev;	y	STING
	f	Laev;	z	MOB_ATTACK
c	bhs	net/minecraft/world/damagesource/DeathMessageType
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		id
	m	()[Lbhs;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lbhs;	a	DEFAULT
	f	Lbhs;	b	FALL_VARIANTS
	f	Lbhs;	c	INTENTIONAL_GAME_DESIGN
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	Ljava/lang/String;	e	id
	f	[Lbhs;	f	$VALUES
c	bht	net/minecraft/world/damagesource/FallLocation
	m	()Ljava/lang/String;	a	languageKey
	m	(Lbjg;)Lbht;	a	getCurrentFallLocation
		p	0		entity
	m	(Ldfj;)Lbht;	a	blockToFallLocation
		p	0		state
	m	()Ljava/lang/String;	b	id
	f	Lbht;	a	GENERIC
	f	Lbht;	b	LADDER
	f	Lbht;	c	VINES
	f	Lbht;	d	WEEPING_VINES
	f	Lbht;	e	TWISTING_VINES
	f	Lbht;	f	SCAFFOLDING
	f	Lbht;	g	OTHER_CLIMBABLE
	f	Lbht;	h	WATER
	f	Ljava/lang/String;	i	id
c	bhu	net/minecraft/world/damagesource/package-info
c	bhv	net/minecraft/world/effect/AbsorptionMobEffect
	m	(Lbic;I)V	<init>	<init>
		p	1		category
		p	2		color
	m	(II)Z	a	shouldApplyEffectTickThisTick
		p	1		duration
		p	2		amplifier
	m	(Lbjg;I)V	a	applyEffectTick
		p	1		entity
		p	2		amplifier
	m	(Lbjg;I)V	b	onEffectStarted
		p	1		entity
		p	2		amplifier
c	bhw	net/minecraft/world/effect/AttributeModifierTemplate
	m	()Ljava/util/UUID;	a	getAttributeModifierId
	m	(I)Lbkk;	a	create
		p	1		amplifier
c	bhx	net/minecraft/world/effect/BadOmenMobEffect
	m	(Lbic;I)V	<init>	<init>
		p	1		category
		p	2		color
	m	(II)Z	a	shouldApplyEffectTickThisTick
		p	1		duration
		p	2		amplifier
	m	(Lbjg;I)V	a	applyEffectTick
		p	1		entity
		p	2		amplifier
c	bhy	net/minecraft/world/effect/HealOrHarmMobEffect
	m	(Lbic;IZ)V	<init>	<init>
		p	1		category
		p	2		color
		p	3		damage
	m	(Lbiq;Lbiq;Lbjg;ID)V	a	applyInstantenousEffect
		p	1		source
		p	2		attacker
		p	3		target
		p	4		amplifier
		p	5		proximity
	m	(Lbjg;I)V	a	applyEffectTick
		p	1		entity
		p	2		amplifier
	f	Z	a	isHarm
c	bhz	net/minecraft/world/effect/HungerMobEffect
	m	(Lbic;I)V	<init>	<init>
		p	1		category
		p	2		color
	m	(II)Z	a	shouldApplyEffectTickThisTick
		p	1		duration
		p	2		amplifier
	m	(Lbjg;I)V	a	applyEffectTick
		p	1		entity
		p	2		amplifier
c	bia	net/minecraft/world/effect/InstantenousMobEffect
	m	(Lbic;I)V	<init>	<init>
		p	1		category
		p	2		color
	m	()Z	a	isInstantenous
	m	(II)Z	a	shouldApplyEffectTickThisTick
		p	1		duration
		p	2		amplifier
c	bib	net/minecraft/world/effect/MobEffect
	m	(Lbic;I)V	<init>	<init>
		p	1		category
		p	2		color
	m	()Z	a	isInstantenous
	m	(II)Z	a	shouldApplyEffectTickThisTick
		p	1		duration
		p	2		amplifier
	m	(Lbiq;Lbiq;Lbjg;ID)V	a	applyInstantenousEffect
		p	1		source
		p	2		attacker
		p	3		target
		p	4		amplifier
		p	5		proximity
	m	(Lbjg;I)V	a	applyEffectTick
		p	1		entity
		p	2		amplifier
	m	(Lbkh;Ljava/lang/String;DLbkk$a;)Lbib;	a	addAttributeModifier
		p	1		attribute
		p	2		uuid
		p	3		amount
		p	5		operation
	m	(Lbkj;)V	a	removeAttributeModifiers
		p	1		attributeContainer
	m	(Lbkj;I)V	a	addAttributeModifiers
		p	1		attributeContainer
		p	2		amplifier
	m	(Ljava/util/function/Supplier;)Lbib;	a	setFactorDataFactory
		p	1		factorCalculationDataSupplier
	m	()Ljava/util/Optional;	b	createFactorData
	m	(Lbjg;I)V	b	onEffectStarted
		p	1		entity
		p	2		amplifier
	m	()Ljava/lang/String;	c	getOrCreateDescriptionId
	m	()Ljava/lang/String;	d	getDescriptionId
	m	()Ltl;	e	getDisplayName
	m	()Lbic;	f	getCategory
	m	()I	g	getColor
	m	()Ljava/util/Map;	h	getAttributeModifiers
	m	()Z	i	isBeneficial
	m	()Lhe$c;	j	builtInRegistryHolder
	m	()Lbid$a;	k	lambda$new$0
	f	Ljava/util/Map;	a	attributeModifiers
	f	Lbic;	b	category
	f	I	c	color
	f	Ljava/lang/String;	d	descriptionId
	f	Ljava/util/function/Supplier;	e	factorDataFactory
	f	Lhe$c;	f	builtInRegistryHolder
c	bib$a	net/minecraft/world/effect/MobEffect$MobEffectAttributeModifierTemplate
	m	(Lbib;Ljava/util/UUID;DLbkk$a;)V	<init>	<init>
		p	2		uuid
		p	3		baseValue
		p	5		operation
	m	()Ljava/util/UUID;	a	getAttributeModifierId
	m	(I)Lbkk;	a	create
		p	1		amplifier
	f	Lbib;	a	this$0
	f	Ljava/util/UUID;	b	id
	f	D	c	amount
	f	Lbkk$a;	d	operation
c	bic	net/minecraft/world/effect/MobEffectCategory
	m	(Ljava/lang/String;ILn;)V	<init>	<init>
		p	3		format
	m	()Ln;	a	getTooltipFormatting
	m	()[Lbic;	b	$values
	f	Lbic;	a	BENEFICIAL
	f	Lbic;	b	HARMFUL
	f	Lbic;	c	NEUTRAL
	f	Ln;	d	tooltipFormatting
	f	[Lbic;	e	$VALUES
c	bid	net/minecraft/world/effect/MobEffectInstance
	m	(Lbib;)V	<init>	<init>
		p	1		type
	m	(Lbib;I)V	<init>	<init>
		p	1		type
		p	2		duration
	m	(Lbib;II)V	<init>	<init>
		p	1		type
		p	2		duration
		p	3		amplifier
	m	(Lbib;IIZZ)V	<init>	<init>
		p	1		type
		p	2		duration
		p	3		amplifier
		p	4		ambient
		p	5		visible
	m	(Lbib;IIZZZ)V	<init>	<init>
		p	1		type
		p	2		duration
		p	3		amplifier
		p	4		ambient
		p	5		showParticles
		p	6		showIcon
	m	(Lbib;IIZZZLbid;Ljava/util/Optional;)V	<init>	<init>
		p	1		type
		p	2		duration
		p	3		amplifier
		p	4		ambient
		p	5		showParticles
		p	6		showIcon
		p	7		hiddenEffect
		p	8		factorCalculationData
	m	(Lbid;)V	<init>	<init>
		p	1		instance
	m	()Ljava/util/Optional;	a	getFactorData
	m	(I)Z	a	endsWithin
		p	1		duration
	m	(Lbib;Lqw;)Lbid;	a	loadSpecifiedEffect
		p	0		type
		p	1		nbt
	m	(Lbid$a;)V	a	lambda$tick$0
		p	1		factorCalculationData
	m	(Lbid;)V	a	setDetailsFrom
		p	1		that
	m	(Lbjg;)V	a	onEffectStarted
		p	1		entity
	m	(Lbjg;Ljava/lang/Runnable;)Z	a	tick
		p	1		entity
		p	2		overwriteCallback
	m	(Lit/unimi/dsi/fastutil/ints/Int2IntFunction;)I	a	mapDuration
		p	1		mapper
	m	(Lqw;)Lqw;	a	save
		p	1		nbt
	m	(Lqw;Lbid$a;)V	a	lambda$writeDetailsTo$3
		p	1		factorCalculationData
	m	(Lqw;Lrq;)V	a	lambda$writeDetailsTo$2
		p	1		factorCalculationDataNbt
	m	()Z	b	isInfiniteDuration
	m	(I)I	b	lambda$tickDownDuration$1
		p	0		duration
	m	(Lbid;)Z	b	update
		p	1		that
	m	(Lqw;)Lbid;	b	load
		p	0		nbt
	m	()Lbib;	c	getEffect
	m	(Lbid;)I	c	compareTo
	m	(Lqw;)V	c	writeDetailsTo
		p	1		nbt
	m	()I	d	getDuration
	m	(Lbid;)Z	d	isShorterDurationThan
		p	1		effect
	m	()I	e	getAmplifier
	m	()Z	f	isAmbient
	m	()Z	g	isVisible
	m	()Z	h	showIcon
	m	()Ljava/lang/String;	i	getDescriptionId
	m	()Z	j	hasRemainingDuration
	m	()I	k	tickDownDuration
	m	()Ljava/lang/String;	l	describeDuration
	f	I	a	INFINITE_DURATION
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ljava/lang/String;	c	TAG_ID
	f	Ljava/lang/String;	d	TAG_AMBIENT
	f	Ljava/lang/String;	e	TAG_HIDDEN_EFFECT
	f	Ljava/lang/String;	f	TAG_AMPLIFIER
	f	Ljava/lang/String;	g	TAG_DURATION
	f	Ljava/lang/String;	h	TAG_SHOW_PARTICLES
	f	Ljava/lang/String;	i	TAG_SHOW_ICON
	f	Ljava/lang/String;	j	TAG_FACTOR_CALCULATION_DATA
	f	Lbib;	k	effect
	f	I	l	duration
	f	I	m	amplifier
	f	Z	n	ambient
	f	Z	o	visible
	f	Z	p	showIcon
	f	Lbid;	q	hiddenEffect
	f	Ljava/util/Optional;	r	factorData
c	bid$a	net/minecraft/world/effect/MobEffectInstance$FactorData
	m	(I)V	<init>	<init>
		p	1		paddingDuration
	m	(IFFFIFZ)V	<init>	<init>
		p	1		paddingDuration
		p	2		factorStart
		p	3		factorTarget
		p	4		factorCurrent
		p	5		effectChangedTimestamp
		p	6		factorPreviousFrame
		p	7		hadEffectLastTick
	m	(Lbid$a;)Ljava/lang/Boolean;	a	lambda$static$6
		p	0		data
	m	(Lbid;)V	a	tick
		p	1		effect
	m	(Lbjg;F)F	a	getFactor
		p	1		entity
		p	2		tickDelta
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$7
		p	0		instance
	m	(Lbid$a;)Ljava/lang/Float;	b	lambda$static$5
		p	0		data
	m	(Lbid$a;)Ljava/lang/Integer;	c	lambda$static$4
		p	0		data
	m	(Lbid$a;)Ljava/lang/Float;	d	lambda$static$3
		p	0		data
	m	(Lbid$a;)Ljava/lang/Float;	e	lambda$static$2
		p	0		data
	m	(Lbid$a;)Ljava/lang/Float;	f	lambda$static$1
		p	0		data
	m	(Lbid$a;)Ljava/lang/Integer;	g	lambda$static$0
		p	0		data
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	paddingDuration
	f	F	c	factorStart
	f	F	d	factorTarget
	f	F	e	factorCurrent
	f	I	f	ticksActive
	f	F	g	factorPreviousFrame
	f	Z	h	hadEffectLastTick
c	bie	net/minecraft/world/effect/MobEffectUtil
	m	(Lakq;Lbiq;Lehn;DLbid;I)Ljava/util/List;	a	addEffectToPlayersAround
		p	0		world
		p	1		entity
		p	2		origin
		p	3		range
		p	5		statusEffectInstance
		p	6		duration
	m	(Lbid;F)Ltl;	a	formatDuration
		p	0		effect
		p	1		multiplier
	m	(Lbid;Lbiq;Lakr;)V	a	lambda$addEffectToPlayersAround$1
		p	2		player
	m	(Lbiq;Lehn;DLbib;Lbid;ILakr;)Z	a	lambda$addEffectToPlayersAround$0
		p	7		player
	m	(Lbjg;)Z	a	hasDigSpeed
		p	0		entity
	m	(Lbjg;)I	b	getDigSpeedAmplification
		p	0		entity
	m	(Lbjg;)Z	c	hasWaterBreathing
		p	0		entity
c	bif	net/minecraft/world/effect/MobEffects
	m	()Lbid$a;	a	lambda$static$0
	m	(Ljava/lang/String;Lbib;)Lbib;	a	register
		p	0		id
		p	1		statusEffect
	f	Lbib;	A	UNLUCK
	f	Lbib;	B	SLOW_FALLING
	f	Lbib;	C	CONDUIT_POWER
	f	Lbib;	D	DOLPHINS_GRACE
	f	Lbib;	E	BAD_OMEN
	f	Lbib;	F	HERO_OF_THE_VILLAGE
	f	Lbib;	G	DARKNESS
	f	I	H	DARKNESS_EFFECT_FACTOR_PADDING_DURATION_TICKS
	f	Lbib;	a	MOVEMENT_SPEED
	f	Lbib;	b	MOVEMENT_SLOWDOWN
	f	Lbib;	c	DIG_SPEED
	f	Lbib;	d	DIG_SLOWDOWN
	f	Lbib;	e	DAMAGE_BOOST
	f	Lbib;	f	HEAL
	f	Lbib;	g	HARM
	f	Lbib;	h	JUMP
	f	Lbib;	i	CONFUSION
	f	Lbib;	j	REGENERATION
	f	Lbib;	k	DAMAGE_RESISTANCE
	f	Lbib;	l	FIRE_RESISTANCE
	f	Lbib;	m	WATER_BREATHING
	f	Lbib;	n	INVISIBILITY
	f	Lbib;	o	BLINDNESS
	f	Lbib;	p	NIGHT_VISION
	f	Lbib;	q	HUNGER
	f	Lbib;	r	WEAKNESS
	f	Lbib;	s	POISON
	f	Lbib;	t	WITHER
	f	Lbib;	u	HEALTH_BOOST
	f	Lbib;	v	ABSORPTION
	f	Lbib;	w	SATURATION
	f	Lbib;	x	GLOWING
	f	Lbib;	y	LEVITATION
	f	Lbib;	z	LUCK
c	big	net/minecraft/world/effect/PoisonMobEffect
	m	(Lbic;I)V	<init>	<init>
		p	1		category
		p	2		color
	m	(II)Z	a	shouldApplyEffectTickThisTick
		p	1		duration
		p	2		amplifier
	m	(Lbjg;I)V	a	applyEffectTick
		p	1		entity
		p	2		amplifier
c	bih	net/minecraft/world/effect/RegenerationMobEffect
	m	(Lbic;I)V	<init>	<init>
		p	1		category
		p	2		color
	m	(II)Z	a	shouldApplyEffectTickThisTick
		p	1		duration
		p	2		amplifier
	m	(Lbjg;I)V	a	applyEffectTick
		p	1		entity
		p	2		amplifier
c	bii	net/minecraft/world/effect/SaturationMobEffect
	m	(Lbic;I)V	<init>	<init>
		p	1		category
		p	2		color
	m	(Lbjg;I)V	a	applyEffectTick
		p	1		entity
		p	2		amplifier
c	bij	net/minecraft/world/effect/WitherMobEffect
	m	(Lbic;I)V	<init>	<init>
		p	1		category
		p	2		color
	m	(II)Z	a	shouldApplyEffectTickThisTick
		p	1		duration
		p	2		amplifier
	m	(Lbjg;I)V	a	applyEffectTick
		p	1		entity
		p	2		amplifier
c	bik	net/minecraft/world/effect/package-info
c	bil	net/minecraft/world/entity/AgeableMob
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()Z	V_	canBreed
	m	(IZ)V	a	ageUp
		p	1		age
		p	2		overGrow
	m	(Laee;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Lakq;Lbil;)Lbil;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lcqk;Lbgw;Lbjk;Lbjz;Lqw;)Lbjz;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Z)V	a	setBaby
		p	1		baby
	m	()V	a_	defineSynchedData
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()V	b_	aiStep
	m	(I)V	b_	ageUp
		p	1		age
	m	(I)V	c_	setAge
		p	1		age
	m	(I)I	d_	getSpeedUpSecondsWhenFeeding
		p	0		breedingAge
	m	()I	h	getAge
	m	()V	m	ageBoundaryReached
	m	()Z	m_	isBaby
	f	I	b	BABY_START_AGE
	f	Laee;	bT	DATA_BABY_ID
	f	I	bU	FORCED_AGE_PARTICLE_TICKS
	f	I	c	age
	f	I	d	forcedAge
	f	I	e	forcedAgeTimer
c	bil$a	net/minecraft/world/entity/AgeableMob$AgeableMobGroupData
	m	(F)V	<init>	<init>
		p	1		babyChance
	m	(Z)V	<init>	<init>
		p	1		babyAllowed
	m	(ZF)V	<init>	<init>
		p	1		babyAllowed
		p	2		babyChance
	m	()I	a	getGroupSize
	m	()V	b	increaseGroupSizeByOne
	m	()Z	c	isShouldSpawnBaby
	m	()F	d	getBabySpawnChance
	f	I	a	groupSize
	f	Z	b	shouldSpawnBaby
	f	F	c	babySpawnChance
c	bim	net/minecraft/world/entity/AnimationState
	m	()V	a	stop
	m	(FF)V	a	updateTime
		p	1		animationProgress
		p	2		speedMultiplier
	m	(I)V	a	start
		p	1		age
	m	(Ljava/util/function/Consumer;)V	a	ifStarted
		p	1		consumer
	m	(ZI)V	a	animateWhen
		p	1		running
		p	2		age
	m	()J	b	getAccumulatedTime
	m	(I)V	b	startIfStopped
		p	1		age
	m	()Z	c	isStarted
	f	J	a	STOPPED
	f	J	b	lastTime
	f	J	c	accumulatedTime
c	bin	net/minecraft/world/entity/AreaEffectCloud
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcpv;DDD)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
	m	(F)V	a	setRadius
		p	1		radius
	m	(I)V	a	setFixedColor
		p	1		rgb
	m	(Laee;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Lbid;)V	a	addEffect
		p	1		effect
	m	(Lbjg;)V	a	setOwner
		p	1		owner
	m	(Lbjs;)Lbir;	a	getDimensions
		p	1		pose
	m	(Lclc;)V	a	setPotion
		p	1		potion
	m	(Lit;)V	a	setParticle
		p	1		particle
	m	(Ljava/util/Map$Entry;)Z	a	lambda$tick$0
		p	1		entry
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Z)V	a	setWaiting
		p	1		waiting
	m	()V	a_	defineSynchedData
	m	(F)V	b	setRadiusOnUse
		p	1		radiusOnUse
	m	(I)V	b	setDuration
		p	1		duration
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(F)V	c	setRadiusPerTick
		p	1		radiusGrowth
	m	(I)V	c	setDurationOnUse
		p	1		durationOnUse
	m	(I)V	d	setWaitTime
		p	1		waitTime
	m	()F	h	getRadius
	m	()I	i	getColor
	m	()V	i_	refreshDimensions
	m	()Lit;	j	getParticle
	m	()Z	k	isWaiting
	m	()V	l	tick
	m	()I	m	getDuration
	m	(I)I	m	lambda$tick$1
	m	()F	o	getRadiusOnUse
	m	()F	p	getRadiusPerTick
	m	()I	q	getDurationOnUse
	m	()Lear;	q_	getPistonPushReaction
	m	()I	r	getWaitTime
	m	()Lbjg;	s	getOwner
	m	()Lclc;	t	getPotion
	m	()Lbiq;	v	getOwner
	m	()V	w	updateColor
	f	F	aE	radiusPerTick
	f	Lbjg;	aF	owner
	f	Ljava/util/UUID;	aG	ownerUUID
	f	F	b	DEFAULT_WIDTH
	f	F	c	HEIGHT
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	I	e	TIME_BETWEEN_APPLICATIONS
	f	Laee;	f	DATA_RADIUS
	f	Laee;	g	DATA_COLOR
	f	Laee;	h	DATA_WAITING
	f	Laee;	i	DATA_PARTICLE
	f	F	j	MAX_RADIUS
	f	F	k	MINIMAL_RADIUS
	f	F	l	DEFAULT_RADIUS
	f	Ljava/lang/String;	m	TAG_EFFECTS
	f	Lclc;	n	potion
	f	Ljava/util/List;	o	effects
	f	Ljava/util/Map;	p	victims
	f	I	q	duration
	f	I	r	waitTime
	f	I	s	reapplicationDelay
	f	Z	t	fixedColor
	f	I	u	durationOnUse
	f	F	v	radiusOnUse
c	bio	net/minecraft/world/entity/Attackable
	m	()Lbjg;	S_	getLastAttacker
c	bip	net/minecraft/world/entity/Display
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()F	A	getShadowRadius
	m	()F	B	getShadowStrength
	m	()F	C	getWidth
	m	()I	E	getGlowColorOverride
	m	()F	F	getHeight
	m	()V	G	updateCulling
	m	()Lbip$k;	H	createFreshRenderState
	m	()D	K_	lerpTargetY
	m	()D	L_	lerpTargetZ
	m	(D)Z	a	shouldRenderAtSqrDistance
		p	1		distance
	m	(DDDFFI)V	a	lerpTo
		p	1		x
		p	3		y
		p	5		z
		p	7		yaw
		p	8		pitch
		p	9		interpolationSteps
	m	(F)F	a	calculateInterpolationProgress
		p	1		delta
	m	(Laee;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Laeh;)Lj;	a	createTransformation
		p	0		dataTracker
	m	(Laqq;)V	a	setBrightnessOverride
		p	1		brightness
	m	(Lbip$a;)V	a	setBillboardConstraints
		p	1		billboardMode
	m	(Lbip$k;F)Lbip$k;	a	createInterpolatedRenderState
		p	1		state
		p	2		lerpProgress
	m	(Lcom/mojang/datafixers/util/Pair;)V	a	lambda$readAdditionalSaveData$2
		p	1		pair
	m	(Lj;)V	a	setTransformation
		p	1		transformation
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lqw;Lrq;)V	a	lambda$addAdditionalSaveData$5
		p	1		brightness
	m	(ZF)V	a	updateRenderSubState
		p	1		shouldLerp
		p	2		lerpProgress
	m	()V	a_	defineSynchedData
	m	(F)V	b	setViewRange
		p	1		viewRange
	m	(I)V	b	setTransformationInterpolationDuration
		p	1		interpolationDuration
	m	(Lcom/mojang/datafixers/util/Pair;)V	b	lambda$readAdditionalSaveData$1
		p	1		pair
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lqw;Lrq;)V	b	lambda$addAdditionalSaveData$4
		p	1		billboard
	m	(F)V	c	setShadowRadius
		p	1		shadowRadius
	m	(I)V	c	setTransformationInterpolationDelay
		p	1		startInterpolation
	m	(Lcom/mojang/datafixers/util/Pair;)V	c	lambda$readAdditionalSaveData$0
		p	1		pair
	m	(Lqw;Lrq;)V	c	lambda$addAdditionalSaveData$3
		p	1		transformations
	m	(I)V	d	setPosRotInterpolationDuration
		p	1		teleportDuration
	m	()F	d_	lerpTargetXRot
	m	(DDD)V	e	setPos
		p	1		x
		p	3		y
		p	5		z
	m	()Lehi;	g_	getBoundingBoxForCulling
	m	()I	h_	getTeamColor
	m	()V	l	tick
	m	(I)V	m	setGlowColorOverride
		p	1		glowColorOverride
	m	()D	n_	lerpTargetX
	m	()F	o_	lerpTargetYRot
	m	()Z	p_	isIgnoringBlockTriggers
	m	()Lbip$k;	q	renderState
	m	()Lear;	q_	getPistonPushReaction
	m	()I	s	getTransformationInterpolationDuration
	m	()I	t	getTransformationInterpolationDelay
	m	(F)V	u	setShadowStrength
		p	1		shadowStrength
	m	()I	v	getPosRotInterpolationDuration
	m	(F)V	v	setWidth
		p	1		width
	m	()Lbip$a;	w	getBillboardConstraints
	m	(F)V	w	setHeight
		p	1		height
	m	()Laqq;	x	getBrightnessOverride
	m	()I	y	getPackedBrightnessOverride
	m	()F	z	getViewRange
	f	Laee;	aE	DATA_RIGHT_ROTATION_ID
	f	Laee;	aF	DATA_BILLBOARD_RENDER_CONSTRAINTS_ID
	f	Laee;	aG	DATA_BRIGHTNESS_OVERRIDE_ID
	f	Laee;	aH	DATA_VIEW_RANGE_ID
	f	Laee;	aI	DATA_SHADOW_RADIUS_ID
	f	Laee;	aJ	DATA_SHADOW_STRENGTH_ID
	f	Laee;	aK	DATA_WIDTH_ID
	f	Laee;	aL	DATA_HEIGHT_ID
	f	Laee;	aM	DATA_GLOW_COLOR_OVERRIDE_ID
	f	Lit/unimi/dsi/fastutil/ints/IntSet;	aN	RENDER_STATE_IDS
	f	F	aO	INITIAL_SHADOW_RADIUS
	f	F	aP	INITIAL_SHADOW_STRENGTH
	f	I	aQ	NO_GLOW_COLOR_OVERRIDE
	f	J	aR	interpolationStartClientTick
	f	I	aS	interpolationDuration
	f	F	aT	lastProgress
	f	Lehi;	aU	cullingBoundingBox
	f	Z	aV	updateStartTick
	f	Z	aW	updateInterpolationDuration
	f	Lbip$k;	aX	renderState
	f	Lbip$j;	aY	posRotInterpolationTarget
	f	I	b	NO_BRIGHTNESS_OVERRIDE
	f	Ljava/lang/String;	c	TAG_POS_ROT_INTERPOLATION_DURATION
	f	Ljava/lang/String;	d	TAG_TRANSFORMATION_INTERPOLATION_DURATION
	f	Ljava/lang/String;	e	TAG_TRANSFORMATION_START_INTERPOLATION
	f	Ljava/lang/String;	f	TAG_TRANSFORMATION
	f	Ljava/lang/String;	g	TAG_BILLBOARD
	f	Ljava/lang/String;	h	TAG_BRIGHTNESS
	f	Ljava/lang/String;	i	TAG_VIEW_RANGE
	f	Ljava/lang/String;	j	TAG_SHADOW_RADIUS
	f	Ljava/lang/String;	k	TAG_SHADOW_STRENGTH
	f	Ljava/lang/String;	l	TAG_WIDTH
	f	Ljava/lang/String;	m	TAG_HEIGHT
	f	Ljava/lang/String;	n	TAG_GLOW_COLOR_OVERRIDE
	f	Z	o	updateRenderState
	f	Lorg/slf4j/Logger;	p	LOGGER
	f	Laee;	q	DATA_TRANSFORMATION_INTERPOLATION_START_DELTA_TICKS_ID
	f	Laee;	r	DATA_TRANSFORMATION_INTERPOLATION_DURATION_ID
	f	Laee;	s	DATA_POS_ROT_INTERPOLATION_DURATION_ID
	f	Laee;	t	DATA_TRANSLATION_ID
	f	Laee;	u	DATA_SCALE_ID
	f	Laee;	v	DATA_LEFT_ROTATION_ID
c	bip$1	net/minecraft/world/entity/Display$1
	f	[I	a	$SwitchMap$net$minecraft$world$entity$Display$TextDisplay$Align
c	bip$a	net/minecraft/world/entity/Display$BillboardConstraints
	m	(Ljava/lang/String;IBLjava/lang/String;)V	<init>	<init>
		p	3		index
		p	4		name
	m	()B	a	getId
	m	()[Lbip$a;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lbip$a;	a	FIXED
	f	Lbip$a;	b	VERTICAL
	f	Lbip$a;	c	HORIZONTAL
	f	Lbip$a;	d	CENTER
	f	Lcom/mojang/serialization/Codec;	e	CODEC
	f	Ljava/util/function/IntFunction;	f	BY_ID
	f	B	g	id
	f	Ljava/lang/String;	h	name
	f	[Lbip$a;	i	$VALUES
c	bip$b	net/minecraft/world/entity/Display$BlockDisplay
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Laee;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(ZF)V	a	updateRenderSubState
		p	1		shouldLerp
		p	2		lerpProgress
	m	()V	a_	defineSynchedData
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Ldfj;)V	c	setBlockState
		p	1		state
	m	()Lbip$b$a;	s	blockRenderState
	m	()Ldfj;	t	getBlockState
	f	Ljava/lang/String;	p	TAG_BLOCK_STATE
	f	Laee;	q	DATA_BLOCK_STATE_ID
	f	Lbip$b$a;	r	blockRenderState
c	bip$b$a	net/minecraft/world/entity/Display$BlockDisplay$BlockRenderState
	m	()Ldfj;	a	blockState
	f	Ldfj;	a	blockState
c	bip$c	net/minecraft/world/entity/Display$ColorInterpolator
	m	()I	a	previous
	m	()I	b	current
	m	(F)I	get	get
		p	1		delta
	f	I	a	previous
	f	I	b	current
c	bip$d	net/minecraft/world/entity/Display$FloatInterpolator
	m	(FF)F	a	lambda$constant$0
		p	1		delta
	m	(F)Lbip$d;	constant	constant
		p	0		value
	m	(F)F	get	get
		p	1		delta
c	bip$e	net/minecraft/world/entity/Display$GenericInterpolator
	m	(Ljava/lang/Object;F)Ljava/lang/Object;	a	lambda$constant$0
		p	1		delta
	m	(Ljava/lang/Object;)Lbip$e;	constant	constant
		p	0		value
	m	(F)Ljava/lang/Object;	get	get
		p	1		delta
c	bip$f	net/minecraft/world/entity/Display$IntInterpolator
	m	(IF)I	a	lambda$constant$0
		p	1		delta
	m	(I)Lbip$f;	constant	constant
		p	0		value
	m	(F)I	get	get
		p	1		delta
c	bip$g	net/minecraft/world/entity/Display$ItemDisplay
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Laee;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Lcjc;)V	a	setItemTransform
		p	1		transformationMode
	m	(Lcjf;)V	a	setItemStack
		p	1		stack
	m	(Lcom/mojang/datafixers/util/Pair;)V	a	lambda$readAdditionalSaveData$0
		p	1		mode
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lqw;Lrq;)V	a	lambda$addAdditionalSaveData$1
		p	1		nbtx
	m	(ZF)V	a	updateRenderSubState
		p	1		shouldLerp
		p	2		lerpProgress
	m	()V	a_	defineSynchedData
	m	(I)Lbjy;	a_	getSlot
		p	1		mappedIndex
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Lbip$g$a;	s	itemRenderState
	m	()Lcjf;	t	getItemStack
	m	()Lcjc;	v	getItemTransform
	f	Ljava/lang/String;	p	TAG_ITEM
	f	Ljava/lang/String;	q	TAG_ITEM_DISPLAY
	f	Laee;	r	DATA_ITEM_STACK_ID
	f	Laee;	s	DATA_ITEM_DISPLAY_ID
	f	Lbjy;	t	slot
	f	Lbip$g$a;	u	itemRenderState
c	bip$g$1	net/minecraft/world/entity/Display$ItemDisplay$1
	m	()Lcjf;	a	get
	m	(Lcjf;)Z	a	set
		p	1		stack
	f	Lbip$g;	a	this$0
c	bip$g$a	net/minecraft/world/entity/Display$ItemDisplay$ItemRenderState
	m	()Lcjf;	a	itemStack
	m	()Lcjc;	b	itemTransform
	f	Lcjf;	a	itemStack
	f	Lcjc;	b	itemTransform
c	bip$h	net/minecraft/world/entity/Display$LinearFloatInterpolator
	m	()F	a	previous
	m	()F	b	current
	m	(F)F	get	get
		p	1		delta
	f	F	a	previous
	f	F	b	current
c	bip$i	net/minecraft/world/entity/Display$LinearIntInterpolator
	m	()I	a	previous
	m	()I	b	current
	m	(F)I	get	get
		p	1		delta
	f	I	a	previous
	f	I	b	current
c	bip$j	net/minecraft/world/entity/Display$PosRotInterpolationTarget
	m	(IDDDDD)V	<init>	<init>
		p	1		step
		p	2		x
		p	4		y
		p	6		z
		p	8		yaw
		p	10		pitch
	m	(Lbiq;)V	a	applyTargetPosAndRot
		p	1		entity
	m	(Lbiq;)V	b	applyLerpStep
		p	1		entity
	f	I	a	steps
	f	D	b	targetX
	f	D	c	targetY
	f	D	d	targetZ
	f	D	e	targetYRot
	f	D	f	targetXRot
c	bip$k	net/minecraft/world/entity/Display$RenderState
	m	()Lbip$e;	a	transformation
	m	()Lbip$a;	b	billboardConstraints
	m	()I	c	brightnessOverride
	m	()Lbip$d;	d	shadowRadius
	m	()Lbip$d;	e	shadowStrength
	m	()I	f	glowColorOverride
	f	Lbip$e;	a	transformation
	f	Lbip$a;	b	billboardConstraints
	f	I	c	brightnessOverride
	f	Lbip$d;	d	shadowRadius
	f	Lbip$d;	e	shadowStrength
	f	I	f	glowColorOverride
c	bip$l	net/minecraft/world/entity/Display$TextDisplay
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(B)Lbip$l$a;	a	getAlign
		p	0		flags
	m	(BLqw;Ljava/lang/String;B)B	a	loadFlag
		p	0		flags
		p	1		nbt
		p	2		nbtKey
		p	3		flag
	m	(Laee;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Lbip$l$d;)Lbip$l$b;	a	cacheDisplay
		p	1		splitter
	m	(Lbip$l$e;F)Lbip$l$e;	a	createInterpolatedTextRenderState
		p	1		data
		p	2		lerpProgress
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lqw;Lrq;)V	a	lambda$addAdditionalSaveData$0
	m	(ZF)V	a	updateRenderSubState
		p	1		shouldLerp
		p	2		lerpProgress
	m	()V	a_	defineSynchedData
	m	(BLqw;Ljava/lang/String;B)V	b	storeFlag
		p	0		flags
		p	1		nbt
		p	2		nbtKey
		p	3		flag
	m	(I)V	b	setLineWidth
		p	1		lineWidth
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(B)V	c	setTextOpacity
		p	1		textOpacity
	m	(I)V	c	setBackgroundColor
		p	1		background
	m	(Ltl;)V	c	setText
		p	1		text
	m	(B)V	d	setFlags
		p	1		flags
	m	()Lbip$l$e;	s	textRenderState
	m	()Ltl;	t	getText
	m	()I	v	getLineWidth
	m	()B	w	getTextOpacity
	m	()I	x	getBackgroundColor
	m	()B	y	getFlags
	m	()Lbip$l$e;	z	createFreshTextRenderState
	f	Ljava/lang/String;	aE	TAG_LINE_WIDTH
	f	Ljava/lang/String;	aF	TAG_TEXT_OPACITY
	f	Ljava/lang/String;	aG	TAG_BACKGROUND_COLOR
	f	Ljava/lang/String;	aH	TAG_SHADOW
	f	Ljava/lang/String;	aI	TAG_SEE_THROUGH
	f	Ljava/lang/String;	aJ	TAG_USE_DEFAULT_BACKGROUND
	f	Ljava/lang/String;	aK	TAG_ALIGNMENT
	f	B	aL	INITIAL_TEXT_OPACITY
	f	Laee;	aM	DATA_TEXT_ID
	f	Laee;	aN	DATA_LINE_WIDTH_ID
	f	Laee;	aO	DATA_BACKGROUND_COLOR_ID
	f	Laee;	aP	DATA_TEXT_OPACITY_ID
	f	Laee;	aQ	DATA_STYLE_FLAGS_ID
	f	Lit/unimi/dsi/fastutil/ints/IntSet;	aR	TEXT_RENDER_STATE_IDS
	f	Lbip$l$b;	aS	clientDisplayCache
	f	Lbip$l$e;	aT	textRenderState
	f	Ljava/lang/String;	p	TAG_TEXT
	f	B	q	FLAG_SHADOW
	f	B	r	FLAG_SEE_THROUGH
	f	B	s	FLAG_USE_DEFAULT_BACKGROUND
	f	B	t	FLAG_ALIGN_LEFT
	f	B	u	FLAG_ALIGN_RIGHT
	f	I	v	INITIAL_BACKGROUND
c	bip$l$a	net/minecraft/world/entity/Display$TextDisplay$Align
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()[Lbip$l$a;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lbip$l$a;	a	CENTER
	f	Lbip$l$a;	b	LEFT
	f	Lbip$l$a;	c	RIGHT
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	Ljava/lang/String;	e	name
	f	[Lbip$l$a;	f	$VALUES
c	bip$l$b	net/minecraft/world/entity/Display$TextDisplay$CachedInfo
	m	()Ljava/util/List;	a	lines
	m	()I	b	width
	f	Ljava/util/List;	a	lines
	f	I	b	width
c	bip$l$c	net/minecraft/world/entity/Display$TextDisplay$CachedLine
	m	()Larj;	a	contents
	m	()I	b	width
	f	Larj;	a	contents
	f	I	b	width
c	bip$l$d	net/minecraft/world/entity/Display$TextDisplay$LineSplitter
	m	(Ltl;I)Lbip$l$b;	split	split
		p	1		text
		p	2		lineWidth
c	bip$l$e	net/minecraft/world/entity/Display$TextDisplay$TextRenderState
	m	()Ltl;	a	text
	m	()I	b	lineWidth
	m	()Lbip$f;	c	textOpacity
	m	()Lbip$f;	d	backgroundColor
	m	()B	e	flags
	f	Ltl;	a	text
	f	I	b	lineWidth
	f	Lbip$f;	c	textOpacity
	f	Lbip$f;	d	backgroundColor
	f	B	e	flags
c	bip$m	net/minecraft/world/entity/Display$TransformationInterpolator
	m	()Lj;	a	previous
	m	(F)Lj;	a	get
	m	()Lj;	b	current
	m	(F)Ljava/lang/Object;	get	get
		p	1		delta
	f	Lj;	a	previous
	f	Lj;	b	current
c	biq	net/minecraft/world/entity/Entity
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	A	teleportPassengers
	m	()Ljava/util/stream/Stream;	B	getIndirectPassengersStream
	m	()Ljava/util/Iterator;	C	lambda$getIndirectPassengers$15
	m	()I	D	getPermissionLevel
	m	()Ljava/lang/String;	E	lambda$fillCrashReportCategory$11
	m	()Ljava/lang/String;	F	lambda$fillCrashReportCategory$10
	m	()V	J	processPortalCooldown
	m	()D	K_	lerpTargetY
	m	()Ljava/lang/String;	L	lambda$fillCrashReportCategory$9
	m	()D	L_	lerpTargetZ
	m	()Ljava/lang/String;	M	lambda$fillCrashReportCategory$8
	m	()Z	M_	isSpectator
	m	()Ltl;	N_	getDisplayName
	m	()Z	T_	shouldInformAdmins
	m	(D)Z	a	shouldRenderAtSqrDistance
		p	1		distance
	m	(DDD)V	a	dismountTo
		p	1		destX
		p	3		destY
		p	5		destZ
	m	(DDDFF)V	a	absMoveTo
		p	1		x
		p	3		y
		p	5		z
		p	7		yaw
		p	8		pitch
	m	(DDDFFI)V	a	lerpTo
		p	1		x
		p	3		y
		p	5		z
		p	7		yaw
		p	8		pitch
		p	9		interpolationSteps
	m	(DDF)Lehn;	a	getCollisionHorizontalEscapeVector
		p	0		vehicleWidth
		p	2		passengerWidth
		p	4		passengerYaw
	m	(DFZ)Lehl;	a	pick
		p	1		maxDistance
		p	3		tickDelta
		p	4		includeFluids
	m	(DZLdfj;Lgw;)V	a	checkFallDamage
		p	1		heightDifference
		p	3		onGround
		p	4		state
		p	5		landedPosition
	m	(FF)V	a	setRot
		p	1		yaw
		p	2		pitch
	m	(FFLbho;)Z	a	causeFallDamage
		p	1		fallDistance
		p	2		damageMultiplier
		p	3		damageSource
	m	(FI)V	a	lerpHeadTo
		p	1		yaw
		p	2		interpolationSteps
	m	(FLehn;)V	a	moveRelative
		p	1		speed
		p	2		movementInput
	m	(IDDDDD)V	a	lerpPositionAndRotationStep
		p	1		step
		p	2		x
		p	4		y
		p	6		z
		p	8		yaw
		p	10		pitch
	m	(Laee;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Lakq;)Lebj;	a	findDimensionEntryPoint
		p	1		destination
	m	(Lakq;DDDLjava/util/Set;FF)Z	a	teleportTo
		p	1		world
		p	2		destX
		p	4		destY
		p	6		destZ
		p	8		flags
		p	9		yaw
		p	10		pitch
	m	(Lakq;Lbjf;)V	a	thunderHit
		p	1		world
		p	2		lightning
	m	(Lakq;Lbjg;)Z	a	killedEntity
		p	1		world
		p	2		other
	m	(Lakq;Lgw;ZLdha;)Ljava/util/Optional;	a	getExitPortal
		p	1		destWorld
		p	2		destPos
		p	3		destIsNether
		p	4		worldBorder
	m	(Lakq;Ll$a;)Lebj;	a	lambda$findDimensionEntryPoint$7
		p	2		rect
	m	(Lakr;)Z	a	broadcastToPlayer
		p	1		spectator
	m	(Lapc;)V	a	playSound
		p	1		event
	m	(Lapc;FF)V	a	playSound
		p	1		sound
		p	2		volume
		p	3		pitch
	m	(Laqh;)Z	a	isEyeInFluid
		p	1		fluidTag
	m	(Laqh;D)Z	a	updateFluidHeightAndDoFluidPushing
		p	1		tag
		p	2		speed
	m	(Lbho;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbiq$c;)V	a	remove
		p	1		reason
	m	(Lbiq;)Z	a	lambda$hasExactlyOnePlayerPassenger$16
		p	0		entity
	m	(Lbiq;D)Z	a	closerThan
		p	1		entity
		p	2		radius
	m	(Lbiq;DD)Z	a	closerThan
		p	1		entity
		p	2		horizontalRadius
		p	4		verticalRadius
	m	(Lbiq;ILbho;)V	a	awardKillScore
		p	1		entityKilled
		p	2		score
		p	3		damageSource
	m	(Lbiq;Lbiq$a;)V	a	positionRider
		p	1		passenger
		p	2		positionUpdater
	m	(Lbiq;Lbiq;)Z	a	lambda$removePassenger$5
		p	1		entity
	m	(Lbiq;Lbir;F)Lorg/joml/Vector3f;	a	getPassengerAttachmentPoint
		p	1		passenger
		p	2		dimensions
		p	3		scaleFactor
	m	(Lbiq;Lehn;Lehi;Lcpv;Ljava/util/List;)Lehn;	a	collideBoundingBox
		p	0		entity
		p	1		movement
		p	2		entityBoundingBox
		p	3		world
		p	4		collisions
	m	(Lbiq;Z)Z	a	startRiding
		p	1		entity
		p	2		force
	m	(Lbir;Lehn;)V	a	lambda$refreshDimensions$14
		p	2		pos
	m	(Lbiv;Lcjf;)V	a	setItemSlot
		p	1		slot
		p	2		stack
	m	(Lbjg;Lbiq;)V	a	doEnchantDamageEffects
		p	1		attacker
		p	2		target
	m	(Lbjm;Lehn;)V	a	move
		p	1		movementType
		p	2		movement
	m	(Lbjs;)Lbir;	a	getDimensions
		p	1		pose
	m	(Lbjs;Lbir;)F	a	getEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lcbu;Lbgx;)Lbgy;	a	interact
		p	1		player
		p	2		hand
	m	(Lcbu;Lehn;Lbgx;)Lbgy;	a	interactAt
		p	1		player
		p	2		hitPos
		p	3		hand
	m	(Lcja;)Lehn;	a	getHandHoldingItemAngle
		p	1		item
	m	(Lcjf;F)Lbyn;	a	spawnAtLocation
		p	1		stack
		p	2		yOffset
	m	(Lcpn;Lcpb;Lgw;Ldfj;F)Z	a	shouldBlockExplode
		p	1		explosion
		p	2		world
		p	3		pos
		p	4		state
		p	5		explosionPower
	m	(Lcpn;Lcpb;Lgw;Ldfj;Leam;F)F	a	getBlockExplosionResistance
		p	1		explosion
		p	2		world
		p	3		pos
		p	4		blockState
		p	5		fluidState
		p	6		max
	m	(Lcpu;)Lbyn;	a	spawnAtLocation
		p	1		item
	m	(Lcpu;I)Lbyn;	a	spawnAtLocation
		p	1		item
		p	2		yOffset
	m	(Lcpv;)V	a	setLevel
		p	1		world
	m	(Lcpv;Lgw;)Z	a	mayInteract
		p	1		world
		p	2		pos
	m	(Lcxq;)F	a	mirror
		p	1		mirror
	m	(Lczh;)F	a	rotate
		p	1		rotation
	m	(Ldfj;)V	a	onInsideBlock
		p	1		state
	m	(Ldfj;Ldfj;)V	a	playCombinationStepSounds
		p	1		primaryState
		p	2		secondaryState
	m	(Ldfj;Lehn;)V	a	makeStuckInBlock
		p	1		state
		p	2		multiplier
	m	(Ldfj;Lgw;)Z	a	lambda$findDimensionEntryPoint$6
		p	2		pos
	m	(Ldjb;)V	a	setLevelCallback
		p	1		changeListener
	m	(Ldjt;)V	a	gameEvent
		p	1		event
	m	(Ldjt;Lbiq;)V	a	gameEvent
		p	1		event
		p	2		entity
	m	(Led$a;Lehn;)V	a	lookAt
		p	1		anchorPoint
		p	2		target
	m	(Lehi;)V	a	setBoundingBox
		p	1		boundingBox
	m	(Lehi;Lgw;)Z	a	lambda$isInWall$2
		p	2		pos
	m	(Lehn;)V	a	setPos
		p	1		pos
	m	(Lehn;FF)Lehn;	a	getInputVector
		p	0		movementInput
		p	1		speed
		p	2		yaw
	m	(Lehn;Lbjm;)Lehn;	a	maybeBackOffFromEdge
		p	1		movement
		p	2		type
	m	(Lehn;Lehi;Ljava/util/List;)Lehn;	a	collideWithShapes
		p	0		movement
		p	1		entityBoundingBox
		p	2		collisions
	m	(Leio;)Z	a	isAlliedTo
		p	1		team
	m	(Lgw;)Ldfj;	a	lambda$checkFallDamage$1
	m	(Lgw;FF)V	a	moveTo
		p	1		pos
		p	2		yaw
		p	3		pitch
	m	(Lgw;Ldfj;)Z	a	isColliding
		p	1		pos
		p	2		state
	m	(Lgw;Ldfj;ZZLehn;)Z	a	vibrationAndSoundEffectsFromBlock
		p	1		pos
		p	2		state
		p	3		playSound
		p	4		emitEvent
		p	5		movement
	m	(Lha$a;D)D	a	applyPistonMovementRestriction
		p	1		axis
		p	2		offsetFactor
	m	(Lha$a;Ll$a;)Lehn;	a	getRelativePortalPosition
		p	1		portalAxis
		p	2		portalRect
	m	(Ljava/lang/String;)Z	a	addTag
		p	1		tag
	m	(Ljava/util/List;)V	a	onSyncedDataUpdated
		p	1		dataEntries
	m	(Ljava/util/function/BiConsumer;)V	a	updateDynamicGameEventListener
		p	1		callback
	m	(Ljava/util/function/Predicate;)Z	a	hasPassenger
		p	1		predicate
	m	(Lp;)V	a	fillCrashReportCategory
		p	1		section
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Ltl;)V	a	sendSystemMessage
		p	1		message
	m	(Luh;)Luh;	a	lambda$getDisplayName$12
		p	1		style
	m	(Lwx;)V	a	recreateFromPacket
		p	1		packet
	m	(ZLehn;)V	a	setOnGroundWithKnownMovement
		p	1		onGround
		p	2		movement
	m	([D)Lrc;	a	newDoubleList
		p	1		values
	m	([F)Lrc;	a	newFloatList
		p	1		values
	m	()Z	aA	onGround
	m	()V	aB	tryCheckInsideBlocks
	m	()V	aC	playEntityOnFireExtinguishedSound
	m	()V	aD	extinguishFire
	m	()V	aE	processFlappingMovement
	m	()Lgw;	aF	getOnPosLegacy
	m	()Lgw;	aG	getBlockPosBelowThatAffectsMyMovement
	m	()Lgw;	aH	getOnPos
	m	()F	aI	getBlockJumpFactor
	m	()F	aJ	getBlockSpeedFactor
	m	()F	aK	nextStep
	m	()Lapc;	aL	getSwimSound
	m	()Lapc;	aM	getSwimSplashSound
	m	()Lapc;	aN	getSwimHighSpeedSplashSound
	m	()V	aO	checkInsideBlocks
	m	()V	aP	waterSwimSound
	m	()V	aQ	onFlap
	m	()Z	aR	isFlapping
	m	()Z	aS	isSilent
	m	()Z	aT	isNoGravity
	m	()Lbiq$b;	aU	getMovementEmission
	m	()Z	aV	dampensVibrations
	m	()Z	aW	fireImmune
	m	()Z	aX	isInWater
	m	()Z	aY	isInWaterOrRain
	m	()Z	aZ	isInWaterRainOrBubble
	m	()V	a_	defineSynchedData
	m	(I)Lbjy;	a_	getSlot
		p	1		mappedIndex
	m	(Ljava/util/UUID;)V	a_	setUUID
		p	1		uuid
	m	(Z)V	a_	setSharedFlagOnFire
		p	1		onFire
	m	()V	aa	stopRiding
	m	()Ltl;	ab	getName
	m	()Z	ac	hasCustomName
	m	()Ltl;	ad	getCustomName
	m	()V	ae	unRide
	m	()Lacy;	af	getPositionCodec
	m	()Lbiu;	ag	getType
	m	()I	ah	getId
	m	()Ljava/util/Set;	ai	getTags
	m	()V	aj	kill
	m	()V	ak	discard
	m	()Laeh;	al	getEntityData
	m	()V	am	onClientRemoval
	m	()Lbjs;	an	getPose
	m	()Lehi;	ao	makeBoundingBox
	m	()V	ap	reapplyPosition
	m	()V	aq	baseTick
	m	()V	ar	checkBelowWorld
	m	()V	as	setPortalCooldown
	m	()I	at	getPortalCooldown
	m	()Z	au	isOnPortalCooldown
	m	()I	av	getPortalWaitTime
	m	()V	aw	lavaHurt
	m	()I	ax	getRemainingFireTicks
	m	()V	ay	clearFire
	m	()V	az	onBelowWorld
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	(D)V	b	setViewScale
		p	0		value
	m	(DD)V	b	turn
		p	1		cursorDeltaX
		p	3		cursorDeltaY
	m	(DDD)V	b	teleportTo
		p	1		destX
		p	3		destY
		p	5		destZ
	m	(DDDFF)V	b	moveTo
		p	1		x
		p	3		y
		p	5		z
		p	7		yaw
		p	8		pitch
	m	(FF)Lehn;	b	calculateViewVector
		p	1		pitch
		p	2		yaw
	m	(IZ)V	b	setSharedFlag
		p	1		index
		p	2		value
	m	(Lakq;)Lbiq;	b	changeDimension
		p	1		destination
	m	(Laqh;)D	b	getFluidHeight
		p	1		fluid
	m	(Lbho;)Z	b	isInvulnerableTo
		p	1		damageSource
	m	(Lbiq$c;)V	b	setRemoved
		p	1		reason
	m	(Lbiq;)V	b	lambda$teleportPassengers$13
		p	0		entity
	m	(Lbjg;)Lehn;	b	getDismountLocationForPassenger
		p	1		passenger
	m	(Lbjs;)V	b	setPose
		p	1		pose
	m	(Lcjf;)Lbyn;	b	spawnAtLocation
		p	1		stack
	m	(Ldfj;)V	b	playMuffledStepSound
		p	1		state
	m	(Lehi;)Z	b	isFree
		p	1		box
	m	(Lehn;)Z	b	isHorizontalCollisionMinor
		p	1		adjustedMovement
	m	(Lgw;Ldfj;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Ljava/lang/String;)Z	b	removeTag
		p	1		tag
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Ltl;)V	b	setCustomName
		p	1		name
	m	(ZLehn;)V	b	checkSupportingBlock
		p	1		onGround
		p	2		movement
	m	()V	bA	ejectPassengers
	m	()V	bB	removeVehicle
	m	()Z	bC	couldAcceptPassenger
	m	()F	bD	getPickRadius
	m	()Lehn;	bE	getLookAngle
	m	()Lehm;	bF	getRotationVector
	m	()Lehn;	bG	getForward
	m	()V	bH	handleNetherPortal
	m	()I	bI	getDimensionChangingDelay
	m	()Ljava/lang/Iterable;	bJ	getHandSlots
	m	()Ljava/lang/Iterable;	bK	getArmorSlots
	m	()Ljava/lang/Iterable;	bL	getAllSlots
	m	()Z	bM	isOnFire
	m	()Z	bN	isPassenger
	m	()Z	bO	isVehicle
	m	()Z	bP	dismountsUnderwater
	m	()Z	bQ	canControlVehicle
	m	()Z	bR	isShiftKeyDown
	m	()Z	bS	isSteppingCarefully
	m	()Z	bT	isSuppressingBounce
	m	()Z	bU	isDiscrete
	m	()Z	bV	isDescending
	m	()Z	bW	isCrouching
	m	()Z	bX	isSprinting
	m	()Z	bY	isSwimming
	m	()Z	bZ	isVisuallySwimming
	m	(Lcbu;)V	b_	playerTouch
		p	1		player
	m	()Z	ba	isInWaterOrBubble
	m	()Z	bb	isInLiquid
	m	()Z	bc	isUnderWater
	m	()V	bd	updateSwimming
	m	()Z	be	updateInWaterStateAndDoFluidPushing
	m	()V	bf	updateInWaterStateAndDoWaterCurrentPushing
	m	()V	bg	doWaterSplashEffect
	m	()Ldfj;	bh	getBlockStateOnLegacy
	m	()Ldfj;	bi	getBlockStateOn
	m	()Z	bj	canSpawnSprintParticle
	m	()V	bk	spawnSprintParticle
	m	()Z	bl	isInLava
	m	()F	bm	getLightLevelDependentMagicValue
	m	()V	bn	setOldPosAndRot
	m	()V	bo	markHurt
	m	()Lehn;	bp	getEyePosition
	m	()Z	bq	canBeHitByProjectile
	m	()Z	br	isPickable
	m	()Z	bs	isPushable
	m	()Z	bt	repositionEntityAfterLoad
	m	()Ljava/lang/String;	bu	getEncodeId
	m	()Z	bv	isAlive
	m	()Z	bw	isInWall
	m	()Z	bx	canBeCollidedWith
	m	()V	by	rideTick
	m	()Z	bz	showVehicleHealth
	m	(D)D	c	getX
		p	1		widthScale
	m	(DDD)V	c	teleportRelative
		p	1		offsetX
		p	3		offsetY
		p	5		offsetZ
	m	(FF)Lehn;	c	calculateUpVector
		p	1		pitch
		p	2		yaw
	m	(Lakr;)V	c	startSeenByPlayer
		p	1		player
	m	(Lbho;)V	c	handleDamageEvent
		p	1		damageSource
	m	(Lbiq;)V	c	lambda$startRiding$4
		p	0		player
	m	(Lbjs;)Z	c	hasPose
		p	1		pose
	m	(Ldfj;)Z	c	isStateClimbable
		p	1		state
	m	(Lehn;)Lehn;	c	limitPistonMovement
		p	1		movement
	m	(Lgw;Ldfj;)V	c	walkingStepSound
		p	1		pos
		p	2		state
	m	(Ltl;)Ltl;	c	removeAction
		p	0		textComponent
	m	(Z)V	c	setOnGround
		p	1		onGround
	m	()Z	cA	isCustomNameVisible
	m	()Z	cB	shouldShowName
	m	()V	cC	fixupDimensions
	m	()Lha;	cD	getDirection
	m	()Lha;	cE	getMotionDirection
	m	()Ltq;	cF	createHoverEvent
	m	()Lehi;	cG	getBoundingBox
	m	()F	cH	getEyeHeight
	m	()Lehn;	cI	getLeashOffset
	m	()Lcpv;	cJ	getCommandSenderWorld
	m	()Lnet/minecraft/server/MinecraftServer;	cK	getServer
	m	()Z	cL	ignoreExplosion
	m	()Z	cM	onlyOpCanSetNbt
	m	()Lbjg;	cN	getControllingPassenger
	m	()Z	cO	hasControllingPassenger
	m	()Ljava/util/List;	cP	getPassengers
	m	()Lbiq;	cQ	getFirstPassenger
	m	()Ljava/util/stream/Stream;	cR	getSelfAndPassengers
	m	()Ljava/util/stream/Stream;	cS	getPassengersAndSelf
	m	()Ljava/lang/Iterable;	cT	getIndirectPassengers
	m	()Z	cU	hasExactlyOnePlayerPassenger
	m	()Lbiq;	cV	getRootVehicle
	m	()Z	cW	isControlledByLocalInstance
	m	()Z	cX	isEffectiveAi
	m	()Lbiq;	cY	getVehicle
	m	()Lbiq;	cZ	getControlledVehicle
	m	()Z	ca	isVisuallyCrawling
	m	()Z	cb	hasGlowingTag
	m	()Z	cc	isCurrentlyGlowing
	m	()Z	cd	isInvisible
	m	()Z	ce	isOnRails
	m	()Leio;	cf	getTeam
	m	()I	cg	getMaxAirSupply
	m	()I	ch	getAirSupply
	m	()I	ci	getTicksFrozen
	m	()F	cj	getPercentFrozen
	m	()Z	ck	isFullyFrozen
	m	()I	cl	getTicksRequiredToFreeze
	m	()V	cm	checkSlowFallDistance
	m	()Ltl;	cn	getTypeName
	m	()F	co	getYHeadRot
	m	()Z	cp	isAttackable
	m	()Z	cq	isInvulnerable
	m	()V	cr	removeAfterChangingDimensions
	m	()Z	cs	canChangeDimensions
	m	()I	ct	getMaxFallDistance
	m	()Z	cu	displayFireAnimation
	m	()Ljava/util/UUID;	cv	getUUID
	m	()Ljava/lang/String;	cw	getStringUUID
	m	()Ljava/lang/String;	cx	getScoreboardName
	m	()Z	cy	isPushedByFluid
	m	()D	cz	getViewScale
	m	(D)D	d	getRandomX
		p	1		widthScale
	m	(DDD)V	d	moveTo
		p	1		x
		p	3		y
		p	5		z
	m	(F)Lgw;	d	getOnPos
		p	1		offset
	m	(Lakr;)V	d	stopSeenByPlayer
		p	1		player
	m	(Lbiq;)Z	d	lambda$startRiding$3
		p	0		passenger
	m	(Lbjs;)F	d	getEyeHeight
		p	1		pose
	m	(Lcbu;)Z	d	isInvisibleTo
		p	1		player
	m	(Ldfj;)Z	d	shouldPlayAmethystStepSound
		p	1		state
	m	(Lehn;)V	d	moveTo
		p	1		pos
	m	(Lgw;)Z	d	isSupportedBy
		p	1		pos
	m	(Lqw;)Z	d	saveAsPassenger
		p	1		nbt
	m	(Z)V	d	setSilent
		p	1		silent
	m	()Z	dA	isFreezing
	m	()F	dB	getYRot
	m	()F	dC	getVisualRotationYInDegrees
	m	()F	dD	getXRot
	m	()Z	dE	canSprint
	m	()F	dF	maxUpStep
	m	()Z	dG	isRemoved
	m	()Lbiq$c;	dH	getRemovalReason
	m	()V	dI	unsetRemoved
	m	()Z	dJ	shouldBeSaved
	m	()Z	dK	isAlwaysTicking
	m	()Lcpv;	dL	level
	m	()Lbhp;	dM	damageSources
	m	()F	d_	lerpTargetXRot
	m	()Lape;	da	getSoundSource
	m	()I	db	getFireImmuneTicks
	m	()Ldt;	dc	createCommandSourceStack
	m	()Z	dd	touchingUnloadedChunk
	m	()D	de	getFluidJumpThreshold
	m	()F	df	getBbWidth
	m	()F	dg	getBbHeight
	m	()F	dh	getNameTagOffsetY
	m	()Lvd;	di	getAddEntityPacket
	m	()Lehn;	dj	position
	m	()Lehn;	dk	trackingPosition
	m	()Lgw;	dl	blockPosition
	m	()Ldfj;	dm	getFeetBlockState
	m	()Lcpc;	dn	chunkPosition
	m	()Lehn;	do	getDeltaMovement
	m	()I	dp	getBlockX
	m	()D	dq	getX
	m	()I	dr	getBlockY
	m	()D	ds	getY
	m	()D	dt	getRandomY
	m	()D	du	getEyeY
	m	()I	dv	getBlockZ
	m	()D	dw	getZ
	m	()V	dx	checkDespawn
	m	()Lcjf;	dy	getPickResult
	m	()Z	dz	canFreeze
	m	(D)D	e	getY
		p	1		heightScale
	m	(DDD)V	e	setPos
		p	1		x
		p	3		y
		p	5		z
	m	(F)V	e	playSwimSound
		p	1		volume
	m	(I)V	e	setId
		p	1		id
	m	(Lbiq;)F	e	distanceTo
		p	1		entity
	m	(Ldfj;)Z	e	lambda$move$0
		p	0		state
	m	(Lehn;)D	e	distanceToSqr
		p	1		vector
	m	(Lgw;)Lgw;	e	getPrimaryStepSoundBlockPos
		p	1		pos
	m	(Lqw;)Z	e	save
		p	1		nbt
	m	(Z)V	e	setNoGravity
		p	1		noGravity
	m	(D)D	f	getZ
		p	1		widthScale
	m	(DDD)V	f	syncPacketPositionCodec
		p	1		x
		p	3		y
		p	5		z
	m	(F)Lehn;	f	getViewVector
		p	1		tickDelta
	m	(I)V	f	setPortalCooldown
		p	1		portalCooldown
	m	(Lbiq;)D	f	distanceToSqr
		p	1		entity
	m	(Lehn;)V	f	setDeltaMovement
		p	1		velocity
	m	(Lgw;)V	f	handleInsidePortal
		p	1		pos
	m	(Lqw;)Lqw;	f	saveWithoutId
		p	1		nbt
	m	(Z)V	f	setShiftKeyDown
		p	1		sneaking
	m	(D)D	g	getRandomZ
		p	1		widthScale
	m	(DDD)Z	g	isFree
		p	1		offsetX
		p	3		offsetY
		p	5		offsetZ
	m	(F)F	g	getViewXRot
		p	1		tickDelta
	m	(I)V	g	setSecondsOnFire
		p	1		seconds
	m	(Lbiq;)V	g	push
		p	1		entity
	m	(Lehn;)V	g	addDeltaMovement
		p	1		velocity
	m	(Lqw;)V	g	load
		p	1		nbt
	m	(Z)V	g	setSprinting
		p	1		sprinting
	m	()Lehi;	g_	getBoundingBoxForCulling
	m	(DDD)V	h	absMoveTo
		p	1		x
		p	3		y
		p	5		z
	m	(F)F	h	getViewYRot
		p	1		tickDelta
	m	(I)V	h	setRemainingFireTicks
		p	1		fireTicks
	m	(Lbiq;)Z	h	canCollideWith
		p	1		other
	m	(Lehn;)Lehn;	h	collide
		p	1		movement
	m	(Z)V	h	setSwimming
		p	1		swimming
	m	()I	h_	getTeamColor
	m	(DDD)D	i	distanceToSqr
		p	1		x
		p	3		y
		p	5		z
	m	(F)Lehn;	i	getUpVector
		p	1		tickDelta
	m	(I)Z	i	getSharedFlag
		p	1		index
	m	(Lbiq;)V	i	positionRider
		p	1		passenger
	m	(Z)V	i	setGlowingTag
		p	1		glowing
	m	()V	i_	refreshDimensions
	m	(DDD)V	j	push
		p	1		deltaX
		p	3		deltaY
		p	5		deltaZ
	m	(F)Lehn;	j	getEyePosition
		p	1		tickDelta
	m	(I)V	j	setAirSupply
		p	1		air
	m	(Lbiq;)V	j	onPassengerTurned
		p	1		passenger
	m	(Z)V	j	setInvisible
		p	1		invisible
	m	()Z	j_	acceptsSuccess
	m	(DDD)Z	k	shouldRender
		p	1		cameraX
		p	3		cameraY
		p	5		cameraZ
	m	(F)Lehn;	k	getLightProbePosition
		p	1		tickDelta
	m	(I)V	k	setTicksFrozen
		p	1		frozenTicks
	m	(Lbiq;)F	k	getMyRidingOffset
		p	1		vehicle
	m	(Z)V	k	onAboveBubbleCol
		p	1		drag
	m	()V	l	tick
	m	(DDD)V	l	lerpMotion
		p	1		x
		p	3		y
		p	5		z
	m	(F)Lehn;	l	getPosition
		p	1		delta
	m	(I)Z	l	hasPermissions
		p	1		permissionLevel
	m	(Lbiq;)F	l	ridingOffset
		p	1		vehicle
	m	(Z)V	l	onInsideBubbleColumn
		p	1		drag
	m	(DDD)V	m	moveTowardsClosestSpace
		p	1		x
		p	3		y
		p	5		z
	m	(F)V	m	animateHurt
		p	1		yaw
	m	(Lbiq;)Lehn;	m	getPassengerRidingPosition
		p	1		passenger
	m	(Z)V	m	setInvulnerable
		p	1		invulnerable
	m	()V	n	resetFallDistance
	m	(DDD)V	n	teleportToWithTicket
		p	1		destX
		p	3		destY
		p	5		destZ
	m	(F)V	n	setYHeadRot
		p	1		headYaw
	m	(Lbiq;)Z	n	startRiding
		p	1		entity
	m	(Z)V	n	setCustomNameVisible
		p	1		visible
	m	()D	n_	lerpTargetX
	m	(DDD)V	o	setDeltaMovement
		p	1		x
		p	3		y
		p	5		z
	m	(F)V	o	setYBodyRot
		p	1		bodyYaw
	m	(Lbiq;)Z	o	canRide
		p	1		entity
	m	(Z)V	o	setIsInPowderSnow
		p	1		inPowderSnow
	m	()F	o_	lerpTargetYRot
	m	(DDD)V	p	setPosRaw
		p	1		x
		p	3		y
		p	5		z
	m	(F)Lehn;	p	getLeashOffset
		p	1		tickDelta
	m	(Lbiq;)V	p	addPassenger
		p	1		passenger
	m	()Z	p_	isIgnoringBlockTriggers
	m	(F)Lehn;	q	getRopeHoldPosition
		p	1		delta
	m	(Lbiq;)V	q	removePassenger
		p	1		passenger
	m	()Lear;	q_	getPistonPushReaction
	m	(F)V	r	setYRot
		p	1		yaw
	m	(Lbiq;)Z	r	canAddPassenger
		p	1		passenger
	m	()V	s	playAmethystStepSound
	m	(F)V	s	setXRot
		p	1		pitch
	m	(Lbiq;)Z	s	isAlliedTo
		p	1		other
	m	(F)V	t	setMaxUpStep
		p	1		stepHeight
	m	(Lbiq;)Z	t	is
		p	1		entity
	m	(Lbiq;)Z	u	skipAttackInteraction
		p	1		attacker
	m	(Lbiq;)V	v	copyPosition
		p	1		entity
	m	()Z	v_	acceptsFailure
	m	()Z	w	isInRain
	m	(Lbiq;)V	w	restoreFrom
		p	1		original
	m	()Z	x	isInBubbleColumn
	m	(Lbiq;)Z	x	hasPassenger
		p	1		passenger
	m	(Lbiq;)Z	y	isPassengerOfSameVehicle
		p	1		entity
	m	()V	z	updateFluidOnEyes
	m	(Lbiq;)Z	z	hasIndirectPassenger
		p	1		passenger
	f	I	A	MAX_ENTITY_TAG_COUNT
	f	F	B	DELTA_AFFECTED_BY_BLOCKS_BELOW_0_2
	f	D	C	DELTA_AFFECTED_BY_BLOCKS_BELOW_0_5
	f	D	D	DELTA_AFFECTED_BY_BLOCKS_BELOW_1_0
	f	F	E	BREATHING_DISTANCE_BELOW_EYES
	f	I	F	BASE_TICKS_REQUIRED_TO_FREEZE
	f	I	G	FREEZE_HURT_FREQUENCY
	f	Ljava/lang/String;	H	UUID_TAG
	f	Z	I	blocksBuilding
	f	I	J	boardingCooldown
	f	D	K	xo
	f	D	L	yo
	f	D	M	zo
	f	F	N	yRotO
	f	F	O	xRotO
	f	Z	P	horizontalCollision
	f	Z	Q	verticalCollision
	f	Z	R	verticalCollisionBelow
	f	Z	S	minorHorizontalCollision
	f	Z	T	hurtMarked
	f	Lehn;	U	stuckSpeedMultiplier
	f	F	V	DEFAULT_BB_WIDTH
	f	F	W	DEFAULT_BB_HEIGHT
	f	F	X	walkDistO
	f	F	Y	walkDist
	f	F	Z	moveDist
	f	Z	aA	isInPowderSnow
	f	Z	aB	wasInPowderSnow
	f	Z	aC	wasOnFire
	f	Ljava/util/Optional;	aD	mainSupportingBlockPos
	f	Lcpc;	aE	chunkPosition
	f	Lehn;	aF	deltaMovement
	f	F	aG	yRot
	f	F	aH	xRot
	f	Lehi;	aI	bb
	f	Z	aJ	onGround
	f	Lbiq$c;	aK	removalReason
	f	F	aL	nextStep
	f	F	aM	maxUpStep
	f	I	aN	remainingFireTicks
	f	Ljava/util/Set;	aO	fluidOnEyes
	f	I	aP	FLAG_SHIFT_KEY_DOWN
	f	I	aQ	FLAG_SPRINTING
	f	I	aR	FLAG_SWIMMING
	f	I	aS	FLAG_INVISIBLE
	f	Laee;	aT	DATA_AIR_SUPPLY_ID
	f	Laee;	aU	DATA_CUSTOM_NAME
	f	Laee;	aV	DATA_CUSTOM_NAME_VISIBLE
	f	Laee;	aW	DATA_SILENT
	f	Laee;	aX	DATA_NO_GRAVITY
	f	Laee;	aY	DATA_TICKS_FROZEN
	f	Ldjb;	aZ	levelCallback
	f	F	aa	flyDist
	f	F	ab	fallDistance
	f	D	ac	xOld
	f	D	ad	yOld
	f	D	ae	zOld
	f	Z	af	noPhysics
	f	Lasc;	ag	random
	f	I	ah	tickCount
	f	Z	ai	wasTouchingWater
	f	Lit/unimi/dsi/fastutil/objects/Object2DoubleMap;	aj	fluidHeight
	f	Z	ak	wasEyeInWater
	f	I	al	invulnerableTime
	f	Z	am	firstTick
	f	Laeh;	an	entityData
	f	Laee;	ao	DATA_SHARED_FLAGS_ID
	f	I	ap	FLAG_ONFIRE
	f	I	aq	FLAG_GLOWING
	f	I	ar	FLAG_FALL_FLYING
	f	Laee;	as	DATA_POSE
	f	Z	at	noCulling
	f	Z	au	hasImpulse
	f	Z	av	isInsidePortal
	f	I	aw	portalTime
	f	Lgw;	ax	portalEntrancePos
	f	Ljava/util/UUID;	ay	uuid
	f	Ljava/lang/String;	az	stringUUID
	f	Lacy;	ba	packetPositionCodec
	f	I	bb	portalCooldown
	f	Z	bc	invulnerable
	f	Z	bd	hasGlowingTag
	f	Ljava/util/Set;	be	tags
	f	[D	bf	pistonDeltas
	f	J	bg	pistonDeltasGameTime
	f	Lbir;	bh	dimensions
	f	F	bi	eyeHeight
	f	Z	bj	onGroundNoBlocks
	f	F	bk	crystalSoundIntensity
	f	I	bl	lastCrystalSoundPlayTick
	f	Z	bm	hasVisualFire
	f	Ldfj;	bn	feetBlockState
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	Ljava/util/concurrent/atomic/AtomicInteger;	d	ENTITY_COUNTER
	f	Ljava/util/List;	e	EMPTY_LIST
	f	Lehi;	k	INITIAL_AABB
	f	D	l	WATER_FLOW_SCALE
	f	D	m	LAVA_FAST_FLOW_SCALE
	f	D	n	LAVA_SLOW_FLOW_SCALE
	f	D	o	viewScale
	f	Lbiu;	p	type
	f	I	q	id
	f	Lcom/google/common/collect/ImmutableList;	r	passengers
	f	Lbiq;	s	vehicle
	f	Lcpv;	t	level
	f	Lehn;	u	position
	f	Lgw;	v	blockPosition
	f	Ljava/lang/String;	w	ID_TAG
	f	Ljava/lang/String;	x	PASSENGERS_TAG
	f	I	y	BOARDING_COOLDOWN
	f	I	z	TOTAL_AIR_SUPPLY
c	biq$1	net/minecraft/world/entity/Entity$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$Rotation
	f	[I	b	$SwitchMap$net$minecraft$world$level$block$Mirror
c	biq$a	net/minecraft/world/entity/Entity$MoveFunction
	m	(Lbiq;DDD)V	accept	accept
		p	1		entity
		p	2		x
		p	4		y
		p	6		z
c	biq$b	net/minecraft/world/entity/Entity$MovementEmission
	m	(Ljava/lang/String;IZZ)V	<init>	<init>
		p	3		sounds
		p	4		events
	m	()Z	a	emitsAnything
	m	()Z	b	emitsEvents
	m	()Z	c	emitsSounds
	m	()[Lbiq$b;	d	$values
	f	Lbiq$b;	a	NONE
	f	Lbiq$b;	b	SOUNDS
	f	Lbiq$b;	c	EVENTS
	f	Lbiq$b;	d	ALL
	f	Z	e	sounds
	f	Z	f	events
	f	[Lbiq$b;	g	$VALUES
c	biq$c	net/minecraft/world/entity/Entity$RemovalReason
	m	(Ljava/lang/String;IZZ)V	<init>	<init>
		p	3		destroy
		p	4		save
	m	()Z	a	shouldDestroy
	m	()Z	b	shouldSave
	m	()[Lbiq$c;	c	$values
	f	Lbiq$c;	a	KILLED
	f	Lbiq$c;	b	DISCARDED
	f	Lbiq$c;	c	UNLOADED_TO_CHUNK
	f	Lbiq$c;	d	UNLOADED_WITH_PLAYER
	f	Lbiq$c;	e	CHANGED_DIMENSION
	f	Z	f	destroy
	f	Z	g	save
	f	[Lbiq$c;	h	$VALUES
c	bir	net/minecraft/world/entity/EntityDimensions
	m	(FFZ)V	<init>	<init>
		p	1		width
		p	2		height
		p	3		fixed
	m	(DDD)Lehi;	a	makeBoundingBox
		p	1		x
		p	3		y
		p	5		z
	m	(F)Lbir;	a	scale
		p	1		ratio
	m	(FF)Lbir;	a	scale
		p	1		widthRatio
		p	2		heightRatio
	m	(Lehn;)Lehi;	a	makeBoundingBox
		p	1		pos
	m	(FF)Lbir;	b	scalable
		p	0		width
		p	1		height
	m	(FF)Lbir;	c	fixed
		p	0		width
		p	1		height
	f	F	a	width
	f	F	b	height
	f	Z	c	fixed
c	bis	net/minecraft/world/entity/EntityEvent
	f	B	A	PERMISSION_LEVEL_OWNERS
	f	B	B	ATTACK_BLOCKED
	f	B	C	SHIELD_DISABLED
	f	B	D	FISHING_ROD_REEL_IN
	f	B	E	ARMORSTAND_WOBBLE
	f	B	F	STOP_OFFER_FLOWER
	f	B	G	TALISMAN_ACTIVATE
	f	B	H	DOLPHIN_LOOKING_FOR_TREASURE
	f	B	I	RAVAGER_STUNNED
	f	B	J	TRUSTING_FAILED
	f	B	K	TRUSTING_SUCCEEDED
	f	B	L	VILLAGER_SWEAT
	f	B	M	BAD_OMEN_TRIGGERED
	f	B	N	FOX_EAT
	f	B	O	TELEPORT
	f	B	P	MAINHAND_BREAK
	f	B	Q	OFFHAND_BREAK
	f	B	R	HEAD_BREAK
	f	B	S	CHEST_BREAK
	f	B	T	LEGS_BREAK
	f	B	U	FEET_BREAK
	f	B	V	HONEY_SLIDE
	f	B	W	HONEY_JUMP
	f	B	X	SWAP_HANDS
	f	B	Y	CANCEL_SHAKE_WETNESS
	f	B	Z	START_RAM
	f	B	a	JUMP
	f	B	aa	END_RAM
	f	B	ab	POOF
	f	B	ac	TENDRILS_SHIVER
	f	B	ad	SONIC_CHARGE
	f	B	ae	SNIFFER_DIGGING_SOUND
	f	B	b	DEATH
	f	B	c	START_ATTACKING
	f	B	d	STOP_ATTACKING
	f	B	e	TAMING_FAILED
	f	B	f	TAMING_SUCCEEDED
	f	B	g	SHAKE_WETNESS
	f	B	h	USE_ITEM_COMPLETE
	f	B	i	EAT_GRASS
	f	B	j	OFFER_FLOWER
	f	B	k	LOVE_HEARTS
	f	B	l	VILLAGER_ANGRY
	f	B	m	VILLAGER_HAPPY
	f	B	n	WITCH_HAT_MAGIC
	f	B	o	ZOMBIE_CONVERTING
	f	B	p	FIREWORKS_EXPLODE
	f	B	q	IN_LOVE_HEARTS
	f	B	r	SQUID_ANIM_SYNCH
	f	B	s	SILVERFISH_MERGE_ANIM
	f	B	t	GUARDIAN_ATTACK_SOUND
	f	B	u	REDUCED_DEBUG_INFO
	f	B	v	FULL_DEBUG_INFO
	f	B	w	PERMISSION_LEVEL_ALL
	f	B	x	PERMISSION_LEVEL_MODERATORS
	f	B	y	PERMISSION_LEVEL_GAMEMASTERS
	f	B	z	PERMISSION_LEVEL_ADMINS
c	bit	net/minecraft/world/entity/EntitySelector
	m	(DDDD)Ljava/util/function/Predicate;	a	withinDistance
		p	0		x
		p	2		y
		p	4		z
		p	6		max
	m	(DDDDLbiq;)Z	a	lambda$withinDistance$5
		p	8		entity
	m	(Lbiq;)Ljava/util/function/Predicate;	a	pushableBy
		p	0		entity
	m	(Lbiq;Lbiq;)Z	a	lambda$notRiding$7
		p	1		testedEntity
	m	(Lbiq;Leio;Leio$a;Lbiq;)Z	a	lambda$pushableBy$6
		p	3		entityx
	m	(Lbiq;)Ljava/util/function/Predicate;	b	notRiding
		p	0		entity
	m	(Lbiq;)Z	c	lambda$static$4
		p	0		entity
	m	(Lbiq;)Z	d	lambda$static$3
		p	0		entity
	m	(Lbiq;)Z	e	lambda$static$2
		p	0		entity
	m	(Lbiq;)Z	f	lambda$static$1
		p	0		entity
	m	(Lbiq;)Z	g	lambda$static$0
		p	0		entity
	f	Ljava/util/function/Predicate;	a	ENTITY_STILL_ALIVE
	f	Ljava/util/function/Predicate;	b	LIVING_ENTITY_STILL_ALIVE
	f	Ljava/util/function/Predicate;	c	ENTITY_NOT_BEING_RIDDEN
	f	Ljava/util/function/Predicate;	d	CONTAINER_ENTITY_SELECTOR
	f	Ljava/util/function/Predicate;	e	NO_CREATIVE_OR_SPECTATOR
	f	Ljava/util/function/Predicate;	f	NO_SPECTATORS
	f	Ljava/util/function/Predicate;	g	CAN_BE_COLLIDED_WITH
c	bit$a	net/minecraft/world/entity/EntitySelector$MobCanWearArmorEntitySelector
	m	(Lcjf;)V	<init>	<init>
		p	1		stack
	m	(Lbiq;)Z	a	test
	f	Lcjf;	a	itemStack
c	biu	net/minecraft/world/entity/EntityType
	m	(Lbiu$b;Lbjj;ZZZZLcom/google/common/collect/ImmutableSet;Lbir;IILcec;)V	<init>	<init>
		p	1		factory
		p	2		spawnGroup
		p	3		saveable
		p	4		summonable
		p	5		fireImmune
		p	6		spawnableFarFromPlayer
		p	7		canSpawnInside
		p	8		dimensions
		p	9		maxTrackDistance
		p	10		trackTickInterval
		p	11		requiredFeatures
	m	()Ljava/lang/Class;	a	getBaseClass
	m	(DDD)Lehi;	a	getAABB
		p	1		feetX
		p	3		feetY
		p	5		feetZ
	m	(Lakq;Lcbu;Lqw;Lbiq;)V	a	lambda$appendCustomEntityStackConfig$3
		p	3		entity
	m	(Lakq;Lcjf;Lcbu;)Ljava/util/function/Consumer;	a	createDefaultStackConfig
		p	0		world
		p	1		stack
		p	2		player
	m	(Lakq;Lcjf;Lcbu;Lgw;Lbjk;ZZ)Lbiq;	a	spawn
		p	1		world
		p	2		stack
		p	3		player
		p	4		pos
		p	5		spawnReason
		p	6		alignPosition
		p	7		invertY
	m	(Lakq;Lgw;Lbjk;)Lbiq;	a	spawn
		p	1		world
		p	2		pos
		p	3		reason
	m	(Lakq;Lqw;Ljava/util/function/Consumer;Lgw;Lbjk;ZZ)Lbiq;	a	spawn
		p	1		world
		p	2		itemNbt
		p	3		afterConsumer
		p	4		pos
		p	5		reason
		p	6		alignPosition
		p	7		invertY
	m	(Laqh;)Z	a	is
		p	1		tag
	m	(Lbiq;)Lbiq;	a	tryCast
		p	1		obj
	m	(Lbiu;)Laew;	a	getKey
		p	0		type
	m	(Lcjf;Lbiq;)V	a	lambda$appendCustomNameConfig$2
		p	1		entity
	m	(Lcpv;)Lbiq;	a	create
		p	1		world
	m	(Lcpv;Lbiu;)Lbiq;	a	lambda$create$4
		p	1		entityType
	m	(Lcpv;Lcbu;Lbiq;Lqw;)V	a	updateCustomEntityTag
		p	0		world
		p	1		player
		p	2		entity
		p	3		itemNbt
	m	(Lcpy;Lgw;ZLehi;)D	a	getYOffset
		p	0		world
		p	1		pos
		p	2		invertY
		p	3		boundingBox
	m	(Ldfj;)Z	a	isBlockDangerous
		p	1		state
	m	(Lhi;)Z	a	is
		p	1		entityTypeEntryList
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	tryCast
		p	1		obj
	m	(Ljava/lang/String;)Ljava/util/Optional;	a	byString
		p	0		id
	m	(Ljava/lang/String;Lbiu$a;)Lbiu;	a	register
		p	0		id
		p	1		type
	m	(Ljava/util/List;Lcpv;)Ljava/util/stream/Stream;	a	loadEntitiesRecursive
		p	0		entityNbtList
		p	1		world
	m	(Ljava/util/function/Consumer;Lakq;Lcjf;Lcbu;)Ljava/util/function/Consumer;	a	appendDefaultStackConfig
		p	0		chained
		p	1		world
		p	2		stack
		p	3		player
	m	(Ljava/util/function/Consumer;Lcjf;)Ljava/util/function/Consumer;	a	appendCustomNameConfig
		p	0		chained
		p	1		stack
	m	(Lqw;)Ljava/util/Optional;	a	by
		p	0		nbt
	m	(Lqw;Lbiq;)V	a	lambda$create$5
		p	1		entity
	m	(Lqw;Lcpv;)Ljava/util/Optional;	a	create
		p	0		nbt
		p	1		world
	m	(Lqw;Lcpv;Ljava/util/function/Function;)Lbiq;	a	loadEntityRecursive
		p	0		nbt
		p	1		world
		p	2		entityProcessor
	m	(Lqw;Lcpv;Ljava/util/function/Function;Lbiq;)Lbiq;	a	lambda$loadEntityRecursive$7
		p	3		entity
	m	()Z	b	canSerialize
	m	(Lakq;Lqw;Ljava/util/function/Consumer;Lgw;Lbjk;ZZ)Lbiq;	b	create
		p	1		world
		p	2		itemNbt
		p	3		afterConsumer
		p	4		pos
		p	5		reason
		p	6		alignPosition
		p	7		invertY
	m	(Lbiq;)V	b	lambda$createDefaultStackConfig$1
		p	0		entity
	m	(Ljava/util/function/Consumer;Lakq;Lcjf;Lcbu;)Ljava/util/function/Consumer;	b	appendCustomEntityStackConfig
		p	0		chained
		p	1		world
		p	2		stack
		p	3		player
	m	(Lqw;)V	b	lambda$create$6
	m	(Lqw;Lcpv;)Ljava/util/Optional;	b	loadStaticEntity
		p	0		nbt
		p	1		world
	m	()Z	c	canSummon
	m	(Lbiq;)V	c	lambda$spawn$0
		p	0		entity
	m	()Z	d	fireImmune
	m	()Z	e	canSpawnFarFromPlayer
	m	()Lbjj;	f	getCategory
	m	()Ljava/lang/String;	g	getDescriptionId
	m	()Ltl;	h	getDescription
	m	()Ljava/lang/String;	i	toShortString
	m	()Laew;	j	getDefaultLootTable
	m	()F	k	getWidth
	m	()F	l	getHeight
	m	()Lcec;	m	requiredFeatures
	m	()Lbir;	n	getDimensions
	m	()I	o	clientTrackingRange
	m	()I	p	updateInterval
	m	()Z	q	trackDeltas
	m	()Lhe$c;	r	builtInRegistryHolder
	f	Lbiu;	A	ELDER_GUARDIAN
	f	Lbiu;	B	END_CRYSTAL
	f	Lbiu;	C	ENDER_DRAGON
	f	Lbiu;	D	ENDER_PEARL
	f	Lbiu;	E	ENDERMAN
	f	Lbiu;	F	ENDERMITE
	f	Lbiu;	G	EVOKER
	f	Lbiu;	H	EVOKER_FANGS
	f	Lbiu;	I	EXPERIENCE_BOTTLE
	f	Lbiu;	J	EXPERIENCE_ORB
	f	Lbiu;	K	EYE_OF_ENDER
	f	Lbiu;	L	FALLING_BLOCK
	f	Lbiu;	M	FIREWORK_ROCKET
	f	Lbiu;	N	FOX
	f	Lbiu;	O	FROG
	f	Lbiu;	P	FURNACE_MINECART
	f	Lbiu;	Q	GHAST
	f	Lbiu;	R	GIANT
	f	Lbiu;	S	GLOW_ITEM_FRAME
	f	Lbiu;	T	GLOW_SQUID
	f	Lbiu;	U	GOAT
	f	Lbiu;	V	GUARDIAN
	f	Lbiu;	W	HOGLIN
	f	Lbiu;	X	HOPPER_MINECART
	f	Lbiu;	Y	HORSE
	f	Lbiu;	Z	HUSK
	f	Lbiu;	aA	POTION
	f	Lbiu;	aB	PUFFERFISH
	f	Lbiu;	aC	RABBIT
	f	Lbiu;	aD	RAVAGER
	f	Lbiu;	aE	SALMON
	f	Lbiu;	aF	SHEEP
	f	Lbiu;	aG	SHULKER
	f	Lbiu;	aH	SHULKER_BULLET
	f	Lbiu;	aI	SILVERFISH
	f	Lbiu;	aJ	SKELETON
	f	Lbiu;	aK	SKELETON_HORSE
	f	Lbiu;	aL	SLIME
	f	Ljava/lang/String;	a	ENTITY_TAG
	f	Lbiu;	aM	SMALL_FIREBALL
	f	Lbiu;	aN	SNIFFER
	f	Lbiu;	aO	SNOW_GOLEM
	f	Lbiu;	aP	SNOWBALL
	f	Lbiu;	aQ	SPAWNER_MINECART
	f	Lbiu;	aR	SPECTRAL_ARROW
	f	Lbiu;	aS	SPIDER
	f	Lbiu;	aT	SQUID
	f	Lbiu;	aU	STRAY
	f	Lbiu;	aV	STRIDER
	f	Lbiu;	aW	TADPOLE
	f	Lbiu;	aX	TEXT_DISPLAY
	f	Lbiu;	aY	TNT
	f	Lbiu;	aZ	TNT_MINECART
	f	Lbiu;	aa	ILLUSIONER
	f	Lbiu;	ab	INTERACTION
	f	Lbiu;	ac	IRON_GOLEM
	f	Lbiu;	ad	ITEM
	f	Lbiu;	ae	ITEM_DISPLAY
	f	Lbiu;	af	ITEM_FRAME
	f	Lbiu;	ag	FIREBALL
	f	Lbiu;	ah	LEASH_KNOT
	f	Lbiu;	ai	LIGHTNING_BOLT
	f	Lbiu;	aj	LLAMA
	f	Lbiu;	ak	LLAMA_SPIT
	f	Lbiu;	al	MAGMA_CUBE
	f	Lbiu;	am	MARKER
	f	Lbiu;	an	MINECART
	f	Lbiu;	ao	MOOSHROOM
	f	Lbiu;	ap	MULE
	f	Lbiu;	aq	OCELOT
	f	Lbiu;	ar	PAINTING
	f	Lbiu;	as	PANDA
	f	Lbiu;	at	PARROT
	f	Lbiu;	au	PHANTOM
	f	Lbiu;	av	PIG
	f	Lbiu;	aw	PIGLIN
	f	Lbiu;	ax	PIGLIN_BRUTE
	f	Lbiu;	ay	PILLAGER
	f	Lbiu;	az	POLAR_BEAR
	f	Lbiu$b;	bA	factory
	f	Lbjj;	bB	category
	f	Lcom/google/common/collect/ImmutableSet;	bC	immuneTo
	f	Z	bD	serialize
	f	Z	bE	summon
	f	Z	bF	fireImmune
	f	Z	bG	canSpawnFarFromPlayer
	f	I	bH	clientTrackingRange
	f	I	bI	updateInterval
	f	Ljava/lang/String;	bJ	descriptionId
	f	Ltl;	bK	description
	f	Laew;	bL	lootTable
	f	Lbiu;	b	ALLAY
	f	Lbir;	bM	dimensions
	f	Lcec;	bN	requiredFeatures
	f	Lbiu;	ba	TRADER_LLAMA
	f	Lbiu;	bb	TRIDENT
	f	Lbiu;	bc	TROPICAL_FISH
	f	Lbiu;	bd	TURTLE
	f	Lbiu;	be	VEX
	f	Lbiu;	bf	VILLAGER
	f	Lbiu;	bg	VINDICATOR
	f	Lbiu;	bh	WANDERING_TRADER
	f	Lbiu;	bi	WARDEN
	f	Lbiu;	bj	WITCH
	f	Lbiu;	bk	WITHER
	f	Lbiu;	bl	WITHER_SKELETON
	f	Lbiu;	bm	WITHER_SKULL
	f	Lbiu;	bn	WOLF
	f	Lbiu;	bo	ZOGLIN
	f	Lbiu;	bp	ZOMBIE
	f	Lbiu;	bq	ZOMBIE_HORSE
	f	Lbiu;	br	ZOMBIE_VILLAGER
	f	Lbiu;	bs	ZOMBIFIED_PIGLIN
	f	Lbiu;	bt	PLAYER
	f	Lbiu;	bu	FISHING_BOBBER
	f	Lorg/slf4j/Logger;	bw	LOGGER
	f	Lhe$c;	bx	builtInRegistryHolder
	f	F	by	MAGIC_HORSE_WIDTH
	f	I	bz	DISPLAY_TRACKING_RANGE
	f	Lbiu;	c	AREA_EFFECT_CLOUD
	f	Lbiu;	d	ARMOR_STAND
	f	Lbiu;	e	ARROW
	f	Lbiu;	f	AXOLOTL
	f	Lbiu;	g	BAT
	f	Lbiu;	h	BEE
	f	Lbiu;	i	BLAZE
	f	Lbiu;	j	BLOCK_DISPLAY
	f	Lbiu;	k	BOAT
	f	Lbiu;	l	CAMEL
	f	Lbiu;	m	CAT
	f	Lbiu;	n	CAVE_SPIDER
	f	Lbiu;	o	CHEST_BOAT
	f	Lbiu;	p	CHEST_MINECART
	f	Lbiu;	q	CHICKEN
	f	Lbiu;	r	COD
	f	Lbiu;	s	COMMAND_BLOCK_MINECART
	f	Lbiu;	t	COW
	f	Lbiu;	u	CREEPER
	f	Lbiu;	v	DOLPHIN
	f	Lbiu;	w	DONKEY
	f	Lbiu;	x	DRAGON_FIREBALL
	f	Lbiu;	y	DROWNED
	f	Lbiu;	z	EGG
c	biu$1	net/minecraft/world/entity/EntityType$1
	m	(Lcpv;Ljava/util/function/Consumer;Lrq;)V	a	lambda$tryAdvance$1
		p	2		nbt
	m	(Ljava/util/function/Consumer;Lbiq;)Lbiq;	a	lambda$tryAdvance$0
		p	1		entity
	f	Ljava/util/Spliterator;	a	val$tagSpliterator
	f	Lcpv;	b	val$level
	f	Ljava/util/List;	c	val$entities
c	biu$a	net/minecraft/world/entity/EntityType$Builder
	m	(Lbiu$b;Lbjj;)V	<init>	<init>
		p	1		factory
		p	2		spawnGroup
	m	()Lbiu$a;	a	noSummon
	m	(FF)Lbiu$a;	a	sized
		p	1		width
		p	2		height
	m	(I)Lbiu$a;	a	clientTrackingRange
		p	1		maxTrackingRange
	m	(Lbiu$b;Lbjj;)Lbiu$a;	a	of
		p	0		factory
		p	1		spawnGroup
	m	(Lbiu;Lcpv;)Lbiq;	a	lambda$createNothing$0
		p	0		type
		p	1		world
	m	(Lbjj;)Lbiu$a;	a	createNothing
		p	0		spawnGroup
	m	(Ljava/lang/String;)Lbiu;	a	build
		p	1		id
	m	([Lcea;)Lbiu$a;	a	requiredFeatures
		p	1		features
	m	([Lcsv;)Lbiu$a;	a	immuneTo
		p	1		blocks
	m	()Lbiu$a;	b	noSave
	m	(I)Lbiu$a;	b	updateInterval
		p	1		trackingTickInterval
	m	()Lbiu$a;	c	fireImmune
	m	()Lbiu$a;	d	canSpawnFarFromPlayer
	f	Lbiu$b;	a	factory
	f	Lbjj;	b	category
	f	Lcom/google/common/collect/ImmutableSet;	c	immuneTo
	f	Z	d	serialize
	f	Z	e	summon
	f	Z	f	fireImmune
	f	Z	g	canSpawnFarFromPlayer
	f	I	h	clientTrackingRange
	f	I	i	updateInterval
	f	Lbir;	j	dimensions
	f	Lcec;	k	requiredFeatures
c	biu$b	net/minecraft/world/entity/EntityType$EntityFactory
	m	(Lbiu;Lcpv;)Lbiq;	create	create
		p	1		type
		p	2		world
c	biv	net/minecraft/world/entity/EquipmentSlot
	m	(Ljava/lang/String;ILbiv$a;IILjava/lang/String;)V	<init>	<init>
		p	3		type
		p	4		entityId
		p	5		armorStandId
		p	6		name
	m	()Lbiv$a;	a	getType
	m	(I)I	a	getIndex
		p	1		offset
	m	(Lbiv$a;I)Lbiv;	a	byTypeAndIndex
		p	0		type
		p	1		index
	m	(Ljava/lang/String;)Lbiv;	a	byName
		p	0		name
	m	()I	b	getIndex
	m	()Ljava/lang/String;	c	getSerializedName
	m	()I	d	getFilterFlag
	m	()Ljava/lang/String;	e	getName
	m	()Z	f	isArmor
	m	()[Lbiv;	g	$values
	f	Lbiv;	a	MAINHAND
	f	Lbiv;	b	OFFHAND
	f	Lbiv;	c	FEET
	f	Lbiv;	d	LEGS
	f	Lbiv;	e	CHEST
	f	Lbiv;	f	HEAD
	f	Lasp$a;	g	CODEC
	f	Lbiv$a;	h	type
	f	I	i	index
	f	I	j	filterFlag
	f	Ljava/lang/String;	k	name
	f	[Lbiv;	l	$VALUES
c	biv$a	net/minecraft/world/entity/EquipmentSlot$Type
	m	()[Lbiv$a;	a	$values
	f	Lbiv$a;	a	HAND
	f	Lbiv$a;	b	ARMOR
	f	[Lbiv$a;	c	$VALUES
c	biw	net/minecraft/world/entity/ExperienceOrb
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcpv;DDDI)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
		p	8		amount
	m	(IILbiw;)Z	a	lambda$tryMergeToExisting$0
		p	2		orb
	m	(Lakq;Lehn;I)V	a	award
		p	0		world
		p	1		pos
		p	2		amount
	m	(Lbho;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbiw;)Z	a	canMerge
		p	1		other
	m	(Lbiw;II)Z	a	canMerge
		p	0		orb
		p	1		seed
		p	2		amount
	m	(Lcbu;I)I	a	repairPlayerItems
		p	1		player
		p	2		amount
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()Lgw;	aG	getBlockPosBelowThatAffectsMyMovement
	m	()Lbiq$b;	aU	getMovementEmission
	m	()V	a_	defineSynchedData
	m	(I)I	b	getExperienceValue
		p	0		value
	m	(Lakq;Lehn;I)Z	b	tryMergeToExisting
		p	0		world
		p	1		pos
		p	2		amount
	m	(Lbiw;)V	b	merge
		p	1		other
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lcbu;)V	b_	playerTouch
		p	1		player
	m	()V	bg	doWaterSplashEffect
	m	(I)I	c	durabilityToXp
		p	1		repairAmount
	m	()Z	cp	isAttackable
	m	(I)I	d	xpToDurability
		p	1		experienceAmount
	m	()Lape;	da	getSoundSource
	m	()Lvd;	di	getAddEntityPacket
	m	()V	l	tick
	m	()I	q	getValue
	m	()I	s	getIcon
	m	()V	t	scanForEntities
	m	()V	v	setUnderwaterMovement
	f	I	b	LIFETIME
	f	I	c	ENTITY_SCAN_PERIOD
	f	I	d	MAX_FOLLOW_DIST
	f	I	e	ORB_GROUPS_PER_AREA
	f	D	f	ORB_MERGE_DISTANCE
	f	I	g	age
	f	I	h	health
	f	I	i	value
	f	I	j	count
	f	Lcbu;	k	followingPlayer
c	bix	net/minecraft/world/entity/FlyingMob
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(DZLdfj;Lgw;)V	a	checkFallDamage
		p	1		heightDifference
		p	3		onGround
		p	4		state
		p	5		landedPosition
	m	()Z	c_	onClimbable
	m	(Lehn;)V	h	travel
		p	1		movementInput
c	biy	net/minecraft/world/entity/GlowSquid
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lbho;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbiu;Lcqk;Lbjk;Lgw;Lasc;)Z	a	checkGlowSquidSpawnRules
		p	0		type
		p	1		world
		p	2		reason
		p	3		pos
		p	4		random
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()V	b_	aiStep
	m	(I)V	c	setDarkTicks
		p	1		ticks
	m	(Lbho;)Lapc;	d	getHurtSound
		p	1		source
	m	()Lapc;	l_	getDeathSound
	m	()Lit;	s	getInkParticle
	m	()Lapc;	t	getSquirtSound
	m	()Lapc;	w	getAmbientSound
	m	()I	y	getDarkTicksRemaining
	f	Laee;	bX	DATA_DARK_TICKS_REMAINING
c	biz	net/minecraft/world/entity/HasCustomInventoryScreen
	m	(Lcbu;)V	b	openCustomInventoryScreen
		p	1		player
c	bja	net/minecraft/world/entity/HumanoidArm
	m	(Ljava/lang/String;IILjava/lang/String;Ljava/lang/String;)V	<init>	<init>
		p	3		id
		p	4		name
		p	5		translationKey
	m	()I	a	getId
	m	()Ljava/lang/String;	b	getKey
	m	()Ljava/lang/String;	c	getSerializedName
	m	()Lbja;	e	getOpposite
	m	()[Lbja;	f	$values
	f	Lbja;	a	LEFT
	f	Lbja;	b	RIGHT
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Ljava/util/function/IntFunction;	d	BY_ID
	f	I	e	id
	f	Ljava/lang/String;	f	name
	f	Ljava/lang/String;	g	translationKey
	f	[Lbja;	h	$VALUES
c	bjb	net/minecraft/world/entity/Interaction
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()Lbjg;	S_	getLastAttacker
	m	(F)V	a	setWidth
		p	1		width
	m	(Laee;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Lbjs;)Lbir;	a	getDimensions
		p	1		pose
	m	(Lcbu;Lbgx;)Lbgy;	a	interact
		p	1		player
		p	2		hand
	m	(Lcom/mojang/datafixers/util/Pair;)V	a	lambda$readAdditionalSaveData$1
		p	1		pair
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lqw;Lrq;)V	a	lambda$addAdditionalSaveData$3
	m	(Z)V	a	setResponse
		p	1		response
	m	()V	a_	defineSynchedData
	m	()Lehi;	ao	makeBoundingBox
	m	(F)V	b	setHeight
		p	1		height
	m	(Lcom/mojang/datafixers/util/Pair;)V	b	lambda$readAdditionalSaveData$0
		p	1		pair
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lqw;Lrq;)V	b	lambda$addAdditionalSaveData$2
	m	()Z	bq	canBeHitByProjectile
	m	()Z	br	isPickable
	m	()V	l	tick
	m	()Z	p_	isIgnoringBlockTriggers
	m	()Lbjg;	q	getTarget
	m	()Lear;	q_	getPistonPushReaction
	m	()F	s	getWidth
	m	()F	t	getHeight
	m	(Lbiq;)Z	u	skipAttackInteraction
		p	1		attacker
	m	()Z	v	getResponse
	m	()Lbir;	w	getDimensions
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Laee;	c	DATA_WIDTH_ID
	f	Laee;	d	DATA_HEIGHT_ID
	f	Laee;	e	DATA_RESPONSE_ID
	f	Ljava/lang/String;	f	TAG_WIDTH
	f	Ljava/lang/String;	g	TAG_HEIGHT
	f	Ljava/lang/String;	h	TAG_ATTACK
	f	Ljava/lang/String;	i	TAG_INTERACTION
	f	Ljava/lang/String;	j	TAG_RESPONSE
	f	Lbjb$a;	k	attack
	f	Lbjb$a;	l	interaction
c	bjb$a	net/minecraft/world/entity/Interaction$PlayerAction
	m	()Ljava/util/UUID;	a	player
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()J	b	timestamp
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/UUID;	b	player
	f	J	c	timestamp
c	bjc	net/minecraft/world/entity/ItemBasedSteering
	m	(Laeh;Laee;Laee;)V	<init>	<init>
		p	1		dataTracker
		p	2		boostTime
		p	3		saddled
	m	()V	a	onSynced
	m	(Lasc;)Z	a	boost
		p	1		random
	m	(Lqw;)V	a	addAdditionalSaveData
		p	1		nbt
	m	(Z)V	a	setSaddle
		p	1		saddled
	m	()V	b	tickBoost
	m	(Lqw;)V	b	readAdditionalSaveData
		p	1		nbt
	m	()F	c	boostFactor
	m	()Z	d	hasSaddle
	m	()I	e	boostTimeTotal
	f	I	a	MIN_BOOST_TIME
	f	I	b	MAX_BOOST_TIME
	f	Laeh;	c	entityData
	f	Laee;	d	boostTimeAccessor
	f	Laee;	e	hasSaddleAccessor
	f	Z	f	boosting
	f	I	g	boostTime
c	bjd	net/minecraft/world/entity/ItemSteerable
	m	()Z	a	boost
c	bje	net/minecraft/world/entity/LerpingModel
	m	()Ljava/util/Map;	a	getModelRotationValues
c	bjf	net/minecraft/world/entity/LightningBolt
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(D)Z	a	shouldRenderAtSqrDistance
		p	1		distance
	m	(Lbiq;)Z	a	lambda$tick$0
	m	(Lcpv;Lgw;Ldfj;)V	a	lambda$randomStepCleaningCopper$2
		p	2		state
	m	(Lcpv;Lgw;Lgw$a;I)V	a	randomWalkCleaningCopper
		p	0		world
		p	1		pos
		p	2		mutablePos
		p	3		count
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Z)V	a	setVisualOnly
		p	1		cosmetic
	m	()V	a_	defineSynchedData
	m	(I)V	b	spawnFire
		p	1		spreadAttempts
	m	(Lakr;)V	b	setCause
		p	1		channeler
	m	(Lcpv;Lgw;)V	b	clearCopperOnLightningStrike
		p	0		world
		p	1		pos
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lcpv;Lgw;)Ljava/util/Optional;	c	randomStepCleaningCopper
		p	0		world
		p	1		pos
	m	()Lape;	da	getSoundSource
	m	(Lakr;)Z	e	lambda$tick$1
	m	()V	l	tick
	m	()Lakr;	q	getCause
	m	()I	s	getBlocksSetOnFire
	m	()Ljava/util/stream/Stream;	t	getHitEntities
	m	()V	v	powerLightningRod
	m	()Lgw;	w	getStrikePosition
	f	J	b	seed
	f	I	c	START_LIFE
	f	D	d	DAMAGE_RADIUS
	f	D	e	DETECTION_RADIUS
	f	I	f	life
	f	I	g	flashes
	f	Z	h	visualOnly
	f	Lakr;	i	cause
	f	Ljava/util/Set;	j	hitEntities
	f	I	k	blocksSetOnFire
c	bjg	net/minecraft/world/entity/LivingEntity
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	A	makePoofParticles
	m	(F)F	A	getFrictionInfluencedSpeed
		p	1		slipperiness
	m	(Lbiq;)V	A	setLastHurtMob
		p	1		target
	m	()V	B	swapHandItems
	m	(Lbiq;)D	B	getVisibilityPercent
		p	1		entity
	m	()V	C	detectEquipmentUpdates
	m	(Lbiq;)Z	C	doHurtTarget
		p	1		target
	m	(Lbiq;)V	D	doPush
		p	1		entity
	m	()Ljava/util/Map;	E	collectEquipmentChanges
	m	(Lbiq;)Z	E	hasLineOfSight
		p	1		entity
	m	()V	F	updateFallFlying
	m	()V	G	updatingUsingItem
	m	()V	H	updateInvisibilityStatus
	m	()Z	I	shouldTriggerItemUseEffects
	m	()V	K	updateSwimAmount
	m	()D	K_	lerpTargetY
	m	()Z	L	checkBedExists
	m	()D	L_	lerpTargetZ
	m	()Lbjg;	S_	getLastAttacker
	m	(DD)V	a	indicateDamage
		p	1		deltaX
		p	3		deltaZ
	m	(DDDFFI)V	a	lerpTo
		p	1		x
		p	3		y
		p	5		z
		p	7		yaw
		p	8		pitch
		p	9		interpolationSteps
	m	(DZLdfj;Lgw;)V	a	checkFallDamage
		p	1		heightDifference
		p	3		onGround
		p	4		state
		p	5		landedPosition
	m	(DZLehn;)Lehn;	a	getFluidFallingAdjustedMovement
		p	1		gravity
		p	3		falling
		p	4		motion
	m	(F)F	a	getSwimAmount
		p	1		tickDelta
	m	(FFLbho;)Z	a	causeFallDamage
		p	1		fallDistance
		p	2		damageMultiplier
		p	3		damageSource
	m	(FI)V	a	lerpHeadTo
		p	1		yaw
		p	2		interpolationSteps
	m	(ID)V	a	lerpHeadRotationStep
	m	(Laee;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Lbgx;)V	a	swing
		p	1		hand
	m	(Lbgx;Lcjf;)V	a	setItemInHand
		p	1		hand
		p	2		stack
	m	(Lbgx;Z)V	a	swing
		p	1		hand
		p	2		fromServerPlayer
	m	(Lbho;)V	a	die
		p	1		damageSource
	m	(Lbho;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbho;IZ)V	a	dropCustomDeathLoot
		p	1		source
		p	2		lootingMultiplier
		p	3		allowDrops
	m	(Lbho;Z)V	a	dropFromLootTable
		p	1		damageSource
		p	2		causedByPlayer
	m	(Lbib;)Z	a	hasEffect
		p	1		effect
	m	(Lbid;)V	a	onEffectRemoved
		p	1		effect
	m	(Lbid;Lbiq;)V	a	onEffectAdded
		p	1		effect
		p	2		source
	m	(Lbid;ZLbiq;)V	a	onEffectUpdated
		p	1		effect
		p	2		reapplyEffect
		p	3		source
	m	(Lbiq$c;)V	a	remove
		p	1		reason
	m	(Lbiq;)V	a	dismountVehicle
		p	1		vehicle
	m	(Lbiq;I)V	a	take
		p	1		item
		p	2		count
	m	(Lbiu;)Z	a	canAttackType
		p	1		type
	m	(Lbiv;)Z	a	doesEmitEquipEvent
		p	1		slot
	m	(Lbiv;Lcjf;)V	a	setItemSlot
		p	1		slot
		p	2		stack
	m	(Lbiv;Lcjf;Lcjf;)V	a	onEquipItem
		p	1		slot
		p	2		oldStack
		p	3		newStack
	m	(Lbjg;)V	a	setLastHurtByMob
		p	1		attacker
	m	(Lbjg;Lbiv;)Lbjy;	a	createEquipmentSlotAccess
		p	0		entity
		p	1		slot
	m	(Lbjg;Lbts;)Z	a	canAttack
		p	1		entity
		p	2		predicate
	m	(Lbjs;)Lbir;	a	getDimensions
		p	1		pose
	m	(Lbjs;Lbir;)F	a	getEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lbkh;)Lbki;	a	getAttribute
		p	1		attribute
	m	(Lbyn;)V	a	onItemPickup
		p	1		item
	m	(Lcbu;Lehn;)V	a	tickRidden
		p	1		controllingPlayer
		p	2		movementInput
	m	(Lcja;Lcjf;)Z	a	lambda$isHolding$4
		p	1		stack
	m	(Lcjf;)V	a	updateUsingItem
		p	1		stack
	m	(Lcjf;I)V	a	spawnItemParticles
		p	1		stack
		p	2		count
	m	(Lcjf;Lcjf;)Z	a	equipmentHasChanged
		p	1		stack
		p	2		stack2
	m	(Lcjf;Lcpv;Lbjg;)V	a	addEatEffect
		p	1		stack
		p	2		world
		p	3		targetEntity
	m	(Lcom/mojang/serialization/Dynamic;)Lbkg;	a	makeBrain
		p	1		dynamic
	m	(Lcpv;Lcjf;)Lcjf;	a	eat
		p	1		world
		p	2		stack
	m	(Leam;)Z	a	canStandOnFluid
		p	1		state
	m	(Led$a;Lehn;)V	a	lookAt
		p	1		anchorPoint
		p	2		target
	m	(Lehi;Lehi;)V	a	checkAutoSpinAttack
		p	1		a
		p	2		b
	m	(Lehn;F)Lehn;	a	handleRelativeFrictionAndCalculateMovement
		p	1		movementInput
		p	2		slipperiness
	m	(Lgw;)V	a	setPosToBed
		p	1		pos
	m	(Lgw;Z)V	a	setRecordPlayingNearby
		p	1		songPosition
		p	2		playing
	m	(Lha$a;Ll$a;)Lehn;	a	getRelativePortalPosition
		p	1		portalAxis
		p	2		portalRect
	m	(Lhe;)D	a	getAttributeValue
		p	1		attribute
	m	(Ljava/util/List;Lbiv;Lcjf;)V	a	lambda$handleEquipmentChanges$5
		p	2		slot
		p	3		stack
	m	(Ljava/util/Map;)V	a	handleHandSwap
		p	1		equipmentChanges
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lqw;Lgw;)V	a	lambda$addAdditionalSaveData$1
		p	1		pos
	m	(Lqw;Lrq;)V	a	lambda$addAdditionalSaveData$2
		p	1		brain
	m	(Lwx;)V	a	recreateFromPacket
		p	1		packet
	m	()F	aJ	getBlockSpeedFactor
	m	()V	a_	defineSynchedData
	m	(I)Lbjy;	a_	getSlot
		p	1		mappedIndex
	m	()V	aa	stopRiding
	m	()V	ad_	completeUsingItem
	m	()V	aj	kill
	m	()V	aq	baseTick
	m	()V	az	onBelowWorld
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	(DDDZ)Z	b	randomTeleport
		p	1		x
		p	3		y
		p	5		z
		p	7		particleEffects
	m	(F)V	b	heal
		p	1		amount
	m	(Lbgx;)Lcjf;	b	getItemInHand
		p	1		hand
	m	(Lbho;F)V	b	hurtArmor
		p	1		source
		p	2		amount
	m	(Lbib;)Lbid;	b	getEffect
		p	1		effect
	m	(Lbid;)Z	b	addEffect
		p	1		effect
	m	(Lbid;Lbiq;)Z	b	addEffect
		p	1		effect
		p	2		source
	m	(Lbiv;)Z	b	hasItemInSlot
		p	1		slot
	m	(Lbiv;Lcjf;)V	b	setLastArmorItem
		p	1		slot
		p	2		armor
	m	(Lbjs;Lbir;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lbkh;)D	b	getAttributeValue
		p	1		attribute
	m	(Lcbu;Lehn;)Lehn;	b	getRiddenInput
		p	1		controllingPlayer
		p	2		movementInput
	m	(Lcja;)Z	b	isHolding
		p	1		item
	m	(Lcjf;I)V	b	triggerItemUseEffects
		p	1		stack
		p	2		particleCount
	m	(Lgw;)V	b	startSleeping
		p	1		pos
	m	(Lhe;)D	b	getAttributeBaseValue
		p	1		attribute
	m	(Ljava/util/Map;)V	b	handleEquipmentChanges
		p	1		equipmentChanges
	m	(Ljava/util/function/Predicate;)Z	b	isHolding
		p	1		predicate
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Ljava/lang/Iterable;	bK	getArmorSlots
	m	()Z	bZ	isVisuallySwimming
	m	()V	b_	aiStep
	m	()Z	br	isPickable
	m	()Z	bs	isPushable
	m	()Z	bv	isAlive
	m	()Z	bw	isInWall
	m	()V	by	rideTick
	m	(F)V	c	setHealth
		p	1		health
	m	(IZ)V	c	setLivingEntityFlag
		p	1		mask
		p	2		value
	m	(Laqh;)V	c	jumpInLiquid
		p	1		fluid
	m	(Lbgx;)V	c	startUsingItem
		p	1		hand
	m	(Lbho;)V	c	handleDamageEvent
		p	1		damageSource
	m	(Lbho;F)V	c	hurtHelmet
		p	1		source
		p	2		amount
	m	(Lbib;)Lbid;	c	removeEffectNoUpdate
		p	1		type
	m	(Lbid;)Z	c	canBeAffected
		p	1		effect
	m	(Lbid;Lbiq;)V	c	forceAddEffect
		p	1		effect
		p	2		source
	m	(Lbiv;)Lcjf;	c	getItemBySlot
		p	1		slot
	m	(Lbiv;Lcjf;)V	c	setLastHandItem
		p	1		slot
		p	2		stack
	m	(Lbjg;)Z	c	canAttack
		p	1		target
	m	(Lbkh;)D	c	getAttributeBaseValue
		p	1		attribute
	m	(Lcbu;)V	c	setLastHurtByPlayer
		p	1		attacking
	m	(Lcbu;Lehn;)V	c	travelRidden
		p	1		controllingPlayer
		p	2		movementInput
	m	(Lcjf;)Lapc;	c	getDrinkingSound
		p	1		stack
	m	(Ldfj;)Z	c	shouldRemoveSoulSpeed
		p	1		landingState
	m	(Lgw;)V	c	onChangedBlock
		p	1		pos
	m	(Lgw;Ldfj;)Z	c	trapdoorUsableAsLadder
		p	1		pos
		p	2		state
	m	(Ljava/util/Collection;)Z	c	areAllEffectsAmbient
		p	0		effects
	m	()Z	cB	shouldShowName
	m	()Z	c_	onClimbable
	m	()Z	cc	isCurrentlyGlowing
	m	()F	co	getYHeadRot
	m	()Z	cs	canChangeDimensions
	m	(FF)I	d	calculateFallDamage
		p	1		fallDistance
		p	2		damageMultiplier
	m	(I)Lapc;	d	getFallDamageSound
		p	1		distance
	m	(Lbgx;)V	d	broadcastBreakEvent
		p	1		hand
	m	(Lbho;)Lapc;	d	getHurtSound
		p	1		source
	m	(Lbho;F)F	d	getDamageAfterArmorAbsorb
		p	1		source
		p	2		amount
	m	(Lbib;)Z	d	removeEffect
		p	1		type
	m	(Lbid;)V	d	sendEffectToPassengers
		p	1		effect
	m	(Lbiv;)V	d	broadcastBreakEvent
		p	1		slot
	m	(Lbiv;Lcjf;)Z	d	lambda$createEquipmentSlotAccess$10
		p	1		stack
	m	(Lbjg;)V	d	blockUsingShield
		p	1		attacker
	m	(Lbkh;)V	d	onAttributeUpdated
		p	1		attribute
	m	(Lcjf;)Lapc;	d	getEatingSound
		p	1		stack
	m	()F	dC	getVisualRotationYInDegrees
	m	()F	dF	maxUpStep
	m	()Lbkg;	dN	getBrain
	m	()Lbkg$b;	dO	brainProvider
	m	()Lbkl$a;	dP	createLivingAttributes
	m	()Z	dQ	canBreatheUnderwater
	m	()Z	dR	canSpawnSoulSpeedParticle
	m	()V	dS	spawnSoulSpeedParticle
	m	()Z	dT	onSoulSpeedBlock
	m	()V	dU	removeSoulSpeed
	m	()V	dV	tryAddSoulSpeed
	m	()V	dW	removeFrost
	m	()V	dX	tryAddFrost
	m	()F	dY	getScale
	m	()Z	dZ	isAffectedByFluids
	m	()F	d_	lerpTargetXRot
	m	()Z	dz	canFreeze
	m	(FF)F	e	tickHeadTurn
		p	1		bodyRotation
		p	2		headRotation
	m	(Lbho;)V	e	playHurtSound
		p	1		source
	m	(Lbho;F)F	e	getDamageAfterMagicAbsorb
		p	1		source
		p	2		amount
	m	(Lbid;)V	e	lambda$tickEffects$3
	m	(Lbiv;)Lcjf;	e	getLastArmorItem
		p	1		slot
	m	(Lbjg;)V	e	blockedByShield
		p	1		target
	m	(Lbjs;)Lehi;	e	getLocalBoundsForPose
		p	1		pose
	m	(Lcbu;)F	e	getRiddenSpeed
		p	1		controllingPlayer
	m	(Lcjf;)V	e	verifyEquippedItem
		p	1		stack
	m	()J	eA	getLootTableSeed
	m	()V	eB	skipDropExperience
	m	()Z	eC	wasExperienceConsumed
	m	()F	eD	getHurtDir
	m	()Lehi;	eE	getHitbox
	m	()Lbjg$a;	eF	getFallSounds
	m	()Ljava/util/Optional;	eG	getLastClimbablePos
	m	()V	eH	playBlockFallSound
	m	()I	eI	getArmorValue
	m	()Lbhl;	eJ	getCombatTracker
	m	()Lbjg;	eK	getKillCredit
	m	()F	eL	getMaxHealth
	m	()F	eM	getMaxAbsorption
	m	()I	eN	getArrowCount
	m	()I	eO	getStingerCount
	m	()V	eP	updateSwingTime
	m	()Lbkj;	eQ	getAttributes
	m	()Lbjl;	eR	getMobType
	m	()Lcjf;	eS	getMainHandItem
	m	()Lcjf;	eT	getOffhandItem
	m	()F	eU	getArmorCoverPercentage
	m	()F	eV	getSoundVolume
	m	()F	eW	getVoicePitch
	m	()Z	eX	isImmobile
	m	()F	eY	getJumpPower
	m	()F	eZ	getJumpBoostPower
	m	()V	e_	onEnterCombat
	m	()V	ea	tickDeath
	m	()Z	eb	shouldDropExperience
	m	()Z	ec	shouldDropLoot
	m	()I	ed	getExperienceReward
	m	()Z	ee	isAlwaysExperienceDropper
	m	()Lasc;	ef	getRandom
	m	()Lbjg;	eg	getLastHurtByMob
	m	()I	eh	getLastHurtByMobTimestamp
	m	()Lbjg;	ei	getLastHurtMob
	m	()I	ej	getLastHurtMobTimestamp
	m	()I	ek	getNoActionTime
	m	()Z	el	shouldDiscardFriction
	m	()V	em	tickEffects
	m	()Z	en	canBeSeenAsEnemy
	m	()Z	eo	canBeSeenByAnyone
	m	()V	ep	removeEffectParticles
	m	()Z	eq	removeAllEffects
	m	()Ljava/util/Collection;	er	getActiveEffects
	m	()Ljava/util/Map;	es	getActiveEffectsMap
	m	()Z	et	isInvertedHealAndHarm
	m	()F	eu	getHealth
	m	()Z	ev	isDeadOrDying
	m	()Lbho;	ew	getLastDamageSource
	m	()V	ex	dropEquipment
	m	()V	ey	dropExperience
	m	()Laew;	ez	getLootTable
	m	(Lbho;)Z	f	isDamageSourceBlocked
		p	1		source
	m	(Lbho;F)V	f	actuallyHurt
		p	1		source
		p	2		amount
	m	(Lbiv;)Lcjf;	f	getLastHandItem
		p	1		slot
	m	(Lbjg;)V	f	createWitherRose
		p	1		adversary
	m	(Lbjs;)Z	f	wouldNotSuffocateAtTargetPose
		p	1		pose
	m	(Lcjf;)Z	f	canTakeItem
		p	1		stack
	m	()Ljava/util/Optional;	fA	getSleepingPos
	m	()V	fB	clearSleepingPos
	m	()Z	fC	isSleeping
	m	()V	fD	stopSleeping
	m	()Lha;	fE	getBedOrientation
	m	()Z	fF	canDisableShield
	m	()V	f_	onLeaveCombat
	m	()V	fa	jumpFromGround
	m	()V	fb	goDownInWater
	m	()F	fc	getWaterSlowDown
	m	()F	fd	getFlyingSpeed
	m	()F	fe	getSpeed
	m	()Z	ff	isSensitiveToWater
	m	()V	fg	serverAiStep
	m	()V	fh	pushEntities
	m	()Z	fi	isAutoSpinAttack
	m	()F	fj	getAbsorptionAmount
	m	()V	fk	updateEffectVisibility
	m	()Lbja;	fl	getMainArm
	m	()Z	fm	isUsingItem
	m	()Lbgx;	fn	getUsedItemHand
	m	()Lcjf;	fo	getUseItem
	m	()I	fp	getUseItemRemainingTicks
	m	()I	fq	getTicksUsingItem
	m	()V	fr	releaseUsingItem
	m	()V	fs	stopUsingItem
	m	()Z	ft	isBlocking
	m	()Z	fu	isSuppressingSlidingDownLadder
	m	()Z	fv	isFallFlying
	m	()I	fw	getFallFlyingTicks
	m	()Z	fx	isAffectedByPotions
	m	()Z	fy	attackable
	m	()Lcom/google/common/collect/ImmutableList;	fz	getDismountPoses
	m	(Lbho;)V	g	dropAllDeathLoot
		p	1		source
	m	(Lbiq;)V	g	push
		p	1		entity
	m	(Lbiv;)B	g	entityEventForEquipmentBreak
		p	0		slot
	m	(Lbjg;)V	g	doAutoAttackOnTouch
		p	1		target
	m	(Lcjf;)Lcjf;	g	getProjectile
		p	1		stack
	m	(Lgw;)V	g	setSleepingPos
		p	1		pos
	m	(Z)V	g	setSprinting
		p	1		sprinting
	m	()Lehi;	g_	getBoundingBoxForCulling
	m	(F)F	h	getViewYRot
		p	1		tickDelta
	m	(Lbho;)Z	h	checkTotemDeathProtection
		p	1		source
	m	(Lbjg;)V	h	lambda$updateFallFlying$6
		p	0		player
	m	(Lcjf;)Lbiv;	h	getEquipmentSlotForItem
		p	0		stack
	m	(Lehn;)V	h	travel
		p	1		movementInput
	m	(Lgw;)V	h	lambda$stopSleeping$9
		p	1		pos
	m	(Lbjg;)V	i	lambda$tryAddSoulSpeed$0
		p	0		player
	m	(Lcjf;)V	i	breakItem
		p	1		stack
	m	(Lehn;)Lehn;	i	resetForwardDirectionOfRelativePortalPosition
		p	0		pos
	m	(Lgw;)Lehn;	i	lambda$stopSleeping$8
	m	(Lehn;)Lehn;	j	handleOnClimbable
		p	1		motion
	m	(Lgw;)Ljava/lang/Boolean;	j	lambda$checkBedExists$7
		p	1		pos
	m	(Lbiq;)F	k	getMyRidingOffset
		p	1		vehicle
	m	()V	l	tick
	m	()Lapc;	l_	getDeathSound
	m	(F)V	m	animateHurt
		p	1		yaw
	m	(I)I	m	decreaseAirSupply
		p	1		air
	m	(Lbiq;)Lehn;	m	getPassengerRidingPosition
		p	1		passenger
	m	()Z	m_	isBaby
	m	(F)V	n	setYHeadRot
		p	1		headYaw
	m	(I)I	n	increaseAirSupply
		p	1		air
	m	()D	n_	lerpTargetX
	m	(F)V	o	setYBodyRot
		p	1		bodyYaw
	m	(I)V	o	setNoActionTime
		p	1		despawnCounter
	m	()F	o_	lerpTargetYRot
	m	(I)V	p	setArrowCount
		p	1		stuckArrowCount
	m	(Z)V	p	setDiscardFriction
		p	1		noDrag
	m	(DDD)V	q	knockback
		p	1		strength
		p	3		x
		p	5		z
	m	(I)V	q	setStingerCount
		p	1		stingerCount
	m	(Z)V	q	calculateEntityAnimation
		p	1		flutter
	m	(I)Lbiv;	r	getEquipmentSlot
		p	0		slotId
	m	(Z)V	r	setJumping
		p	1		jumping
	m	()V	s	updateGlowingStatus
	m	(F)V	u	hurtCurrentlyUsedShield
		p	1		amount
	m	(F)V	v	updateWalkAnimation
		p	1		posDelta
	m	()V	w	refreshDirtyAttributes
	m	(F)V	w	setSpeed
		p	1		movementSpeed
	m	(F)F	x	getAttackAnim
		p	1		tickDelta
	m	(F)V	y	setAbsorptionAmount
		p	1		absorptionAmount
	m	()I	z	getCurrentSwingDuration
	m	(F)V	z	internalSetAbsorptionAmount
		p	1		absorptionAmount
	f	F	aE	EXTRA_RENDER_CULLING_SIZE_WITH_BIG_HAT
	f	Z	aF	swinging
	f	Lbgx;	aG	swingingArm
	f	I	aH	swingTime
	f	I	aI	removeArrowTime
	f	I	aJ	removeStingerTime
	f	I	aK	hurtTime
	f	I	aL	hurtDuration
	f	I	aM	deathTime
	f	F	aN	oAttackAnim
	f	F	aO	attackAnim
	f	I	aP	attackStrengthTicker
	f	Lbkf;	aQ	walkAnimation
	f	I	aR	invulnerableDuration
	f	F	aS	timeOffs
	f	F	aT	rotA
	f	F	aU	yBodyRot
	f	F	aV	yBodyRotO
	f	F	aW	yHeadRot
	f	F	aX	yHeadRotO
	f	Lcbu;	aY	lastHurtByPlayer
	f	I	aZ	lastHurtByPlayerTime
	f	Lbkk;	bA	SPEED_MODIFIER_SPRINTING
	f	I	bB	DAMAGE_SOURCE_TIMEOUT
	f	I	bC	WAIT_TICKS_BEFORE_ITEM_USE_EFFECTS
	f	I	bD	TICKS_PER_ELYTRA_FREE_FALL_EVENT
	f	I	bE	FREE_FALL_EVENTS_PER_ELYTRA_BREAK
	f	F	bF	BASE_JUMP_POWER
	f	D	bG	MAX_LINE_OF_SIGHT_TEST_RANGE
	f	Laee;	bH	DATA_HEALTH_ID
	f	Laee;	bI	DATA_EFFECT_COLOR_ID
	f	Laee;	bJ	DATA_EFFECT_AMBIENCE_ID
	f	Laee;	bK	DATA_ARROW_COUNT_ID
	f	Laee;	bL	DATA_STINGER_COUNT_ID
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Laee;	bM	SLEEPING_POS_ID
	f	I	bN	MAX_HEAD_ROTATION_RELATIVE_TO_BODY
	f	Lbkj;	bO	attributes
	f	Lbhl;	bP	combatTracker
	f	Ljava/util/Map;	bQ	activeEffects
	f	Lhn;	bR	lastHandItemStacks
	f	Lhn;	bS	lastArmorItemStacks
	f	Z	bT	discardFriction
	f	Z	bU	effectsDirty
	f	Lbjg;	bV	lastHurtByMob
	f	I	bW	lastHurtByMobTimestamp
	f	Lbjg;	bX	lastHurtMob
	f	I	bY	lastHurtMobTimestamp
	f	F	bZ	speed
	f	Z	ba	dead
	f	I	bb	noActionTime
	f	F	bc	oRun
	f	F	bd	run
	f	F	be	animStep
	f	F	bf	animStepO
	f	F	bg	rotOffs
	f	I	bh	deathScore
	f	F	bi	lastHurt
	f	Z	bj	jumping
	f	F	bk	xxa
	f	F	bl	yya
	f	F	bm	zza
	f	I	bn	lerpSteps
	f	D	bo	lerpX
	f	D	bp	lerpY
	f	D	bq	lerpZ
	f	D	br	lerpYRot
	f	D	bs	lerpXRot
	f	D	bt	lerpYHeadRot
	f	I	bu	lerpHeadSteps
	f	Lcjf;	bv	useItem
	f	I	bw	useItemRemaining
	f	I	bx	fallFlyTicks
	f	I	by	autoSpinAttackTicks
	f	Lbkg;	bz	brain
	f	Ljava/lang/String;	c	TAG_ACTIVE_EFFECTS
	f	I	ca	noJumpDelay
	f	F	cb	absorptionAmount
	f	Lgw;	cc	lastPos
	f	Ljava/util/Optional;	cd	lastClimbablePos
	f	Lbho;	ce	lastDamageSource
	f	J	cf	lastDamageStamp
	f	F	cg	swimAmount
	f	F	ch	swimAmountO
	f	Z	ci	skipDropExperience
	f	Ljava/util/UUID;	d	SPEED_MODIFIER_SOUL_SPEED_UUID
	f	Ljava/util/UUID;	e	SPEED_MODIFIER_POWDER_SNOW_UUID
	f	I	g	HAND_SLOTS
	f	I	h	ARMOR_SLOTS
	f	I	i	EQUIPMENT_SLOT_OFFSET
	f	I	j	ARMOR_SLOT_OFFSET
	f	I	k	SWING_DURATION
	f	I	l	PLAYER_HURT_EXPERIENCE_TIME
	f	D	m	MIN_MOVEMENT_DISTANCE
	f	D	n	DEFAULT_BASE_GRAVITY
	f	I	o	DEATH_DURATION
	f	I	p	USE_ITEM_INTERVAL
	f	I	q	LIVING_ENTITY_FLAG_IS_USING
	f	I	r	LIVING_ENTITY_FLAG_OFF_HAND
	f	I	s	LIVING_ENTITY_FLAG_SPIN_ATTACK
	f	Laee;	t	DATA_LIVING_ENTITY_FLAGS
	f	F	u	DEFAULT_EYE_HEIGHT
	f	Lbir;	v	SLEEPING_DIMENSIONS
c	bjg$1	net/minecraft/world/entity/LivingEntity$1
	f	[I	a	$SwitchMap$net$minecraft$world$entity$EquipmentSlot$Type
	f	[I	b	$SwitchMap$net$minecraft$world$entity$EquipmentSlot
c	bjg$a	net/minecraft/world/entity/LivingEntity$Fallsounds
	m	()Lapc;	a	small
	m	()Lapc;	b	big
	f	Lapc;	a	small
	f	Lapc;	b	big
c	bjh	net/minecraft/world/entity/Marker
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Z	bC	couldAcceptPassenger
	m	()Lvd;	di	getAddEntityPacket
	m	()V	l	tick
	m	(Lbiq;)V	p	addPassenger
		p	1		passenger
	m	()Z	p_	isIgnoringBlockTriggers
	m	()Lear;	q_	getPistonPushReaction
	m	(Lbiq;)Z	r	canAddPassenger
		p	1		passenger
	f	Ljava/lang/String;	b	DATA_TAG
	f	Lqw;	c	data
c	bji	net/minecraft/world/entity/Mob
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()Lbkl$a;	A	createMobAttributes
	m	(F)V	A	setZza
		p	1		forwardSpeed
	m	()Z	B	shouldPassengersInheritMalus
	m	(F)V	B	setYya
		p	1		upwardSpeed
	m	()V	C	onPathfindingStart
	m	(F)V	C	setXxa
		p	1		sidewaysSpeed
	m	(Lbiq;)Z	C	doHurtTarget
		p	1		target
	m	()V	E	onPathfindingDone
	m	()Lboz;	F	createBodyControl
	m	()Lbpd;	G	getLookControl
	m	()Lbpe;	I	getMoveControl
	m	()Lbpc;	K	getJumpControl
	m	()Lbsp;	L	getNavigation
	m	()Lbtk;	M	getSensing
	m	()V	N	ate
	m	()I	O	getAmbientSoundInterval
	m	()V	P	playAmbientSound
	m	()V	Q	spawnAnim
	m	()V	R	updateControlFlags
	m	()Laew;	S	getDefaultLootTable
	m	()Lhy;	T	getPickupReach
	m	()Z	U	requiresCustomPersistence
	m	()Z	V	shouldDespawnInPeaceful
	m	()V	W	sendDebugPackets
	m	()V	X	customServerAiStep
	m	()I	Y	getMaxHeadXRot
	m	()I	Z	getMaxHeadYRot
	m	(FFF)F	a	rotlerp
		p	1		from
		p	2		to
		p	3		max
	m	(Lasc;F)V	a	enchantSpawnedWeapon
		p	1		random
		p	2		power
	m	(Lasc;FLbiv;)V	a	enchantSpawnedArmor
		p	1		random
		p	2		power
		p	3		slot
	m	(Lasc;Lbgw;)V	a	populateDefaultEquipmentSlots
		p	1		random
		p	2		localDifficulty
	m	(Lbho;IZ)V	a	dropCustomDeathLoot
		p	1		source
		p	2		lootingMultiplier
		p	3		allowDrops
	m	(Lbho;Z)V	a	dropFromLootTable
		p	1		damageSource
		p	2		causedByPlayer
	m	(Lbiq;FF)V	a	lookAt
		p	1		targetEntity
		p	2		maxYawChange
		p	3		maxPitchChange
	m	(Lbiq;Z)Z	a	startRiding
		p	1		entity
		p	2		force
	m	(Lbiu;)Z	a	canAttackType
		p	1		type
	m	(Lbiu;Lcpw;Lbjk;Lgw;Lasc;)Z	a	checkMobSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	(Lbiu;Z)Lbji;	a	convertTo
		p	1		entityType
		p	2		keepEquipment
	m	(Lbiv;F)V	a	setDropChance
		p	1		slot
		p	2		chance
	m	(Lbiv;I)Lcja;	a	getEquipmentForSlot
		p	0		equipmentSlot
		p	1		equipmentLevel
	m	(Lbiv;Lcjf;)V	a	setItemSlot
		p	1		slot
		p	2		stack
	m	(Lbqb;)Z	a	lambda$removeFreeWill$3
		p	0		goal
	m	(Lcbu;)Z	a	canBeLeashed
		p	1		player
	m	(Lcbu;Lbgx;)Lbgy;	a	interact
		p	1		player
		p	2		hand
	m	(Lcbu;Lbji;)V	a	onOffspringSpawnedFromEgg
		p	1		player
		p	2		child
	m	(Lcbu;Lcjf;Lcjf;)V	a	maybeDisableShield
		p	1		player
		p	2		mobStack
		p	3		playerStack
	m	(Lcjv;)Z	a	canFireProjectileWeapon
		p	1		weapon
	m	(Lcpw;Lbjk;)Z	a	checkSpawnRules
		p	1		world
		p	2		spawnReason
	m	(Lcpy;)Z	a	checkSpawnObstruction
		p	1		world
	m	(Lcqk;Lbgw;Lbjk;Lbjz;Lqw;)Lbjz;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Leax;)F	a	getPathfindingMalus
		p	1		nodeType
	m	(Leax;F)V	a	setPathfindingMalus
		p	1		nodeType
		p	2		penalty
	m	(Lgw;)Z	a	isWithinRestriction
		p	1		pos
	m	(Lgw;I)V	a	restrictTo
		p	1		target
		p	2		range
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Z)V	a	setBaby
		p	1		baby
	m	(ZZ)V	a	dropLeash
		p	1		sendPacket
		p	2		dropItem
	m	()V	a_	defineSynchedData
	m	()V	aq	baseTick
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	(Lasc;Lbgw;)V	b	populateDefaultEquipmentEnchantments
		p	1		random
		p	2		localDifficulty
	m	(Lbiq;Z)V	b	setLeashedTo
		p	1		entity
		p	2		sendPacket
	m	(Lbiv;Lcjf;)V	b	setItemSlotAndDropWhenKilled
		p	1		slot
		p	2		stack
	m	(Lbyn;)V	b	pickUpItem
		p	1		item
	m	(Lcbu;Lbgx;)Lbgy;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lcbu;Lbji;)V	b	lambda$checkAndHandleImportantInteractions$2
		p	2		entity
	m	(Lcjf;Lcjf;)Z	b	canReplaceCurrentItem
		p	1		newStack
		p	2		oldStack
	m	(Lcpv;)Lbsp;	b	createNavigation
		p	1		world
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Ljava/lang/Iterable;	bJ	getHandSlots
	m	()Ljava/lang/Iterable;	bK	getArmorSlots
	m	()V	b_	aiStep
	m	(Laqh;)V	c	jumpInLiquid
		p	1		fluid
	m	(Lbiv;)Lcjf;	c	getItemBySlot
		p	1		slot
	m	(Lcbu;Lbgx;)Lbgy;	c	checkAndHandleImportantInteractions
		p	1		player
		p	2		hand
	m	(Lcjf;Lcjf;)Z	c	canReplaceEqualItem
		p	1		newStack
		p	2		oldStack
	m	(Ljava/lang/String;)Z	c	lambda$canReplaceEqualItem$1
		p	0		key
	m	(Ljava/util/function/Predicate;)V	c	removeAllGoals
		p	1		predicate
	m	()Lbjg;	cN	getControllingPassenger
	m	()Z	cX	isEffectiveAi
	m	()V	cr	removeAfterChangingDimensions
	m	()I	ct	getMaxFallDistance
	m	(I)Z	d	isMaxGroupSizeReached
		p	1		count
	m	(Ljava/lang/String;)Z	d	lambda$canReplaceEqualItem$0
		p	0		key
	m	()V	dx	checkDespawn
	m	()Lcjf;	dy	getPickResult
	m	(FF)F	e	tickHeadTurn
		p	1		bodyRotation
		p	2		headRotation
	m	(Lbho;)V	e	playHurtSound
		p	1		source
	m	(Lbiv;)V	e	setGuaranteedDrop
		p	1		slot
	m	()J	eA	getLootTableSeed
	m	()I	ed	getExperienceReward
	m	()Laew;	ez	getLootTable
	m	(Lbiv;)F	f	getEquipmentDropChance
		p	1		slot
	m	(Lcjf;)Z	f	canTakeItem
		p	1		stack
	m	()I	fG	getHeadRotSpeed
	m	()I	fH	getMaxSpawnClusterSize
	m	()V	fI	setPersistenceRequired
	m	()Z	fJ	canPickUpLoot
	m	()Z	fK	isPersistenceRequired
	m	()Z	fL	isWithinRestriction
	m	()Lgw;	fM	getRestrictCenter
	m	()F	fN	getRestrictRadius
	m	()V	fO	clearRestriction
	m	()Z	fP	hasRestriction
	m	()V	fQ	tickLeash
	m	()Z	fR	isLeashed
	m	()Lbiq;	fS	getLeashHolder
	m	()Z	fT	isNoAi
	m	()Z	fU	isLeftHanded
	m	()Z	fV	isAggressive
	m	()Lehi;	fW	getAttackBoundingBox
	m	()Z	fX	isSunBurnTick
	m	()V	fY	removeFreeWill
	m	()V	fZ	restoreLeashFromSave
	m	()V	fg	serverAiStep
	m	()Lbja;	fl	getMainArm
	m	(D)Z	h	removeWhenFarAway
		p	1		distanceSquared
	m	(Lbjg;)V	h	setTarget
		p	1		target
	m	(Lbjg;)Z	i	isWithinMeleeAttackRange
		p	1		entity
	m	(Lcjf;)Lcjf;	i	equipItemIfPossible
		p	1		stack
	m	(Lcjf;)Z	j	canHoldItem
		p	1		stack
	m	(Lcjf;)Z	k	wantsToPickUp
		p	1		stack
	m	()V	l	tick
	m	(Lcjf;)V	m	lambda$removeAfterChangingDimensions$4
		p	0		stack
	m	()Lbjg;	q	getTarget
	m	(I)V	r	setDelayedLeashHolderId
		p	1		id
	m	()V	s	resetAmbientSoundTime
	m	(Z)V	s	setCanPickUpLoot
		p	1		canPickUpLoot
	m	(Z)V	t	setNoAi
		p	1		aiDisabled
	m	(Z)V	u	setLeftHanded
		p	1		leftHanded
	m	(Z)V	v	setAggressive
		p	1		attacking
	m	()Lapc;	w	getAmbientSound
	m	(F)V	w	setSpeed
		p	1		movementSpeed
	m	()V	z	registerGoals
	f	F	bA	MAX_WEARING_ARMOR_CHANCE
	f	F	bB	MAX_PICKUP_LOOT_CHANCE
	f	F	bC	MAX_ENCHANTED_ARMOR_CHANCE
	f	F	bD	MAX_ENCHANTED_WEAPON_CHANCE
	f	Ljava/lang/String;	bE	LEASH_TAG
	f	F	bF	DEFAULT_EQUIPMENT_DROP_CHANCE
	f	I	bG	PRESERVE_ITEM_DROP_CHANCE
	f	I	bH	UPDATE_GOAL_SELECTOR_EVERY_N_TICKS
	f	I	bI	ambientSoundTime
	f	I	bJ	xpReward
	f	Lbpd;	bK	lookControl
	f	Lbpe;	bL	moveControl
	f	Laee;	b	DATA_MOB_FLAGS_ID
	f	Lbpc;	bM	jumpControl
	f	Lbsp;	bN	navigation
	f	Lbqc;	bO	goalSelector
	f	Lbqc;	bP	targetSelector
	f	[F	bQ	handDropChances
	f	[F	bR	armorDropChances
	f	Lhy;	bS	ITEM_PICKUP_REACH
	f	D	bT	DEFAULT_ATTACK_REACH
	f	Lboz;	bU	bodyRotationControl
	f	Lbjg;	bV	target
	f	Lbtk;	bW	sensing
	f	Lhn;	bX	handItems
	f	Lhn;	bY	armorItems
	f	Z	bZ	canPickUpLoot
	f	I	c	MOB_FLAG_NO_AI
	f	Z	ca	persistenceRequired
	f	Ljava/util/Map;	cb	pathfindingMalus
	f	Laew;	cc	lootTable
	f	J	cd	lootTableSeed
	f	Lbiq;	ce	leashHolder
	f	I	cf	delayedLeashHolderId
	f	Lqw;	cg	leashInfoTag
	f	Lgw;	ch	restrictCenter
	f	F	ci	restrictRadius
	f	I	d	MOB_FLAG_LEFTHANDED
	f	I	e	MOB_FLAG_AGGRESSIVE
	f	I	f	PICKUP_REACH
c	bji$1	net/minecraft/world/entity/Mob$1
	f	[I	a	$SwitchMap$net$minecraft$world$entity$EquipmentSlot$Type
	f	[I	b	$SwitchMap$net$minecraft$world$entity$EquipmentSlot
c	bjj	net/minecraft/world/entity/MobCategory
	m	(Ljava/lang/String;ILjava/lang/String;IZZI)V	<init>	<init>
		p	3		name
		p	4		spawnCap
		p	5		peaceful
		p	6		rare
		p	7		immediateDespawnRange
	m	()Ljava/lang/String;	a	getName
	m	()I	b	getMaxInstancesPerChunk
	m	()Ljava/lang/String;	c	getSerializedName
	m	()Z	d	isFriendly
	m	()Z	e	isPersistent
	m	()I	f	getDespawnDistance
	m	()I	g	getNoDespawnDistance
	m	()[Lbjj;	h	$values
	f	Lbjj;	a	MONSTER
	f	Lbjj;	b	CREATURE
	f	Lbjj;	c	AMBIENT
	f	Lbjj;	d	AXOLOTLS
	f	Lbjj;	e	UNDERGROUND_WATER_CREATURE
	f	Lbjj;	f	WATER_CREATURE
	f	Lbjj;	g	WATER_AMBIENT
	f	Lbjj;	h	MISC
	f	Lcom/mojang/serialization/Codec;	i	CODEC
	f	I	j	max
	f	Z	k	isFriendly
	f	Z	l	isPersistent
	f	Ljava/lang/String;	m	name
	f	I	n	noDespawnDistance
	f	I	o	despawnDistance
	f	[Lbjj;	p	$VALUES
c	bjk	net/minecraft/world/entity/MobSpawnType
	m	()[Lbjk;	a	$values
	f	Lbjk;	a	NATURAL
	f	Lbjk;	b	CHUNK_GENERATION
	f	Lbjk;	c	SPAWNER
	f	Lbjk;	d	STRUCTURE
	f	Lbjk;	e	BREEDING
	f	Lbjk;	f	MOB_SUMMONED
	f	Lbjk;	g	JOCKEY
	f	Lbjk;	h	EVENT
	f	Lbjk;	i	CONVERSION
	f	Lbjk;	j	REINFORCEMENT
	f	Lbjk;	k	TRIGGERED
	f	Lbjk;	l	BUCKET
	f	Lbjk;	m	SPAWN_EGG
	f	Lbjk;	n	COMMAND
	f	Lbjk;	o	DISPENSER
	f	Lbjk;	p	PATROL
	f	[Lbjk;	q	$VALUES
c	bjl	net/minecraft/world/entity/MobType
	f	Lbjl;	a	UNDEFINED
	f	Lbjl;	b	UNDEAD
	f	Lbjl;	c	ARTHROPOD
	f	Lbjl;	d	ILLAGER
	f	Lbjl;	e	WATER
c	bjm	net/minecraft/world/entity/MoverType
	m	()[Lbjm;	a	$values
	f	Lbjm;	a	SELF
	f	Lbjm;	b	PLAYER
	f	Lbjm;	c	PISTON
	f	Lbjm;	d	SHULKER_BOX
	f	Lbjm;	e	SHULKER
	f	[Lbjm;	f	$VALUES
c	bjn	net/minecraft/world/entity/NeutralMob
	m	()V	U_	stopBeingAngry
	m	()Z	X_	isAngry
	m	()V	Y_	forgetCurrentTargetAndRefreshUniversalAnger
	m	()I	a	getRemainingPersistentAngerTime
	m	(I)V	a	setRemainingPersistentAngerTime
		p	1		angerTime
	m	(Lakq;Z)V	a	updatePersistentAnger
		p	1		world
		p	2		angerPersistent
	m	(Lbjg;)V	a	setLastHurtByMob
		p	1		attacker
	m	(Lcpv;Lqw;)V	a	readPersistentAngerSaveData
		p	1		world
		p	2		nbt
	m	(Ljava/util/UUID;)V	a	setPersistentAngerTarget
		p	1		angryAt
	m	(Lbjg;)Z	a_	isAngryAt
		p	1		entity
	m	(Lcbu;)V	a_	playerDied
		p	1		player
	m	(Lcpv;)Z	a_	isAngryAtAllPlayers
		p	1		world
	m	()Ljava/util/UUID;	b	getPersistentAngerTarget
	m	()V	c	startPersistentAngerTimer
	m	(Lbjg;)Z	c	canAttack
		p	1		target
	m	(Lcbu;)V	c	setLastHurtByPlayer
		p	1		attacking
	m	(Lqw;)V	c	addPersistentAngerSaveData
		p	1		nbt
	m	()Lbjg;	eg	getLastHurtByMob
	m	(Lbjg;)V	h	setTarget
		p	1		target
	m	()Lbjg;	q	getTarget
	f	Ljava/lang/String;	a_	TAG_ANGER_TIME
	f	Ljava/lang/String;	b_	TAG_ANGRY_AT
c	bjo	net/minecraft/world/entity/OwnableEntity
	m	()Lbjg;	O_	getOwner
	m	()Ljava/util/UUID;	d	getOwnerUUID
	m	()Lcpm;	e	level
c	bjp	net/minecraft/world/entity/PathfinderMob
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(F)V	D	onLeashDistance
		p	1		leashLength
	m	(Lbrp;)Z	a	lambda$isPanicking$0
		p	0		goal
	m	(Lcpw;Lbjk;)Z	a	checkSpawnRules
		p	1		world
		p	2		spawnReason
	m	(Lgw;Lcpy;)F	a	getWalkTargetValue
		p	1		pos
		p	2		world
	m	()V	fQ	tickLeash
	m	()Z	fZ	isPathFinding
	m	()Z	ga	isPanicking
	m	()Z	gb	shouldStayCloseToLeashHolder
	m	()D	gc	followLeashSpeed
	m	(Lgw;)F	h	getWalkTargetValue
		p	1		pos
	f	F	bS	DEFAULT_WALK_TARGET_VALUE
c	bjq	net/minecraft/world/entity/PlayerRideable
c	bjr	net/minecraft/world/entity/PlayerRideableJumping
	m	()Z	a	canJump
	m	()I	aa_	getJumpCooldown
	m	()V	b	handleStopJump
	m	(I)V	b	onPlayerJump
		p	1		strength
	m	(I)V	c	handleStartJump
		p	1		height
c	bjs	net/minecraft/world/entity/Pose
	m	()[Lbjs;	a	$values
	f	Lbjs;	a	STANDING
	f	Lbjs;	b	FALL_FLYING
	f	Lbjs;	c	SLEEPING
	f	Lbjs;	d	SWIMMING
	f	Lbjs;	e	SPIN_ATTACK
	f	Lbjs;	f	CROUCHING
	f	Lbjs;	g	LONG_JUMPING
	f	Lbjs;	h	DYING
	f	Lbjs;	i	CROAKING
	f	Lbjs;	j	USING_TONGUE
	f	Lbjs;	k	SITTING
	f	Lbjs;	l	ROARING
	f	Lbjs;	m	SNIFFING
	f	Lbjs;	n	EMERGING
	f	Lbjs;	o	DIGGING
	f	[Lbjs;	p	$VALUES
c	bjt	net/minecraft/world/entity/PowerableMob
	m	()Z	a	isPowered
c	bju	net/minecraft/world/entity/RelativeMovement
	m	(Ljava/lang/String;II)V	<init>	<init>
		p	3		shift
	m	()I	a	getMask
	m	(I)Ljava/util/Set;	a	unpack
		p	0		mask
	m	(Ljava/util/Set;)I	a	pack
		p	0		flags
	m	()[Lbju;	b	$values
	m	(I)Z	b	isSet
		p	1		mask
	f	Lbju;	a	X
	f	Lbju;	b	Y
	f	Lbju;	c	Z
	f	Lbju;	d	Y_ROT
	f	Lbju;	e	X_ROT
	f	Ljava/util/Set;	f	ALL
	f	Ljava/util/Set;	g	ROTATION
	f	I	h	bit
	f	[Lbju;	i	$VALUES
c	bjv	net/minecraft/world/entity/ReputationEventHandler
	m	(Lbuc;Lbiq;)V	a	onReputationEventFrom
		p	1		interaction
		p	2		entity
c	bjw	net/minecraft/world/entity/Saddleable
	m	()Lapc;	W_	getSaddleSoundEvent
	m	(Lape;)V	a	equipSaddle
		p	1		sound
	m	()Z	g	isSaddleable
	m	()Z	i	isSaddled
c	bjx	net/minecraft/world/entity/Shearable
	m	()Z	a	readyForShearing
	m	(Lape;)V	a	shear
		p	1		shearedSoundCategory
c	bjy	net/minecraft/world/entity/SlotAccess
	m	()Lcjf;	a	get
	m	(Lbgr;I)Lbjy;	a	forContainer
		p	0		inventory
		p	1		index
	m	(Lbgr;ILjava/util/function/Predicate;)Lbjy;	a	forContainer
		p	0		inventory
		p	1		index
		p	2		stackFilter
	m	(Lbjg;Lbiv;)Lbjy;	a	forEquipmentSlot
		p	0		entity
		p	1		slot
	m	(Lbjg;Lbiv;Ljava/util/function/Predicate;)Lbjy;	a	forEquipmentSlot
		p	0		entity
		p	1		slot
		p	2		filter
	m	(Lcjf;)Z	a	set
		p	1		stack
	m	(Lcjf;)Z	b	lambda$forEquipmentSlot$1
		p	0		stack
	m	(Lcjf;)Z	c	lambda$forContainer$0
		p	0		stack
	f	Lbjy;	b	NULL
c	bjy$1	net/minecraft/world/entity/SlotAccess$1
	m	()Lcjf;	a	get
	m	(Lcjf;)Z	a	set
		p	1		stack
c	bjy$2	net/minecraft/world/entity/SlotAccess$2
	m	()Lcjf;	a	get
	m	(Lcjf;)Z	a	set
		p	1		stack
	f	Lbgr;	a	val$inventory
	f	I	c	val$id
	f	Ljava/util/function/Predicate;	d	val$validator
c	bjy$3	net/minecraft/world/entity/SlotAccess$3
	m	()Lcjf;	a	get
	m	(Lcjf;)Z	a	set
		p	1		stack
	f	Lbjg;	a	val$entity
	f	Lbiv;	c	val$slot
	f	Ljava/util/function/Predicate;	d	val$validator
c	bjz	net/minecraft/world/entity/SpawnGroupData
c	bka	net/minecraft/world/entity/SpawnPlacements
	m	(Lbiu;)Lbka$c;	a	getPlacementType
		p	0		type
	m	(Lbiu;Lbka$c;Ldks$a;Lbka$b;)V	a	register
		p	0		type
		p	1		location
		p	2		heightmapType
		p	3		predicate
	m	(Lbiu;Lcqk;Lbjk;Lgw;Lasc;)Z	a	checkSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	(Lbiu;)Ldks$a;	b	getHeightmapType
		p	0		type
	f	Ljava/util/Map;	a	DATA_BY_TYPE
c	bka$a	net/minecraft/world/entity/SpawnPlacements$Data
	m	(Ldks$a;Lbka$c;Lbka$b;)V	<init>	<init>
		p	1		heightmapType
		p	2		location
		p	3		predicate
	f	Ldks$a;	a	heightMap
	f	Lbka$c;	b	placement
	f	Lbka$b;	c	predicate
c	bka$b	net/minecraft/world/entity/SpawnPlacements$SpawnPredicate
	m	(Lbiu;Lcqk;Lbjk;Lgw;Lasc;)Z	test	test
		p	1		type
		p	2		world
		p	3		spawnReason
		p	4		pos
		p	5		random
c	bka$c	net/minecraft/world/entity/SpawnPlacements$Type
	m	(Ljava/lang/String;I)V	<init>	<init>
		p	1		name
		p	2		id
	m	()[Lbka$c;	a	$values
	f	Lbka$c;	a	ON_GROUND
	f	Lbka$c;	b	IN_WATER
	f	Lbka$c;	c	NO_RESTRICTIONS
	f	Lbka$c;	d	IN_LAVA
	f	[Lbka$c;	e	$VALUES
c	bkb	net/minecraft/world/entity/TamableAnimal
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lbho;)V	a	die
		p	1		damageSource
	m	(Lbjg;Lbjg;)Z	a	wantsToAttack
		p	1		target
		p	2		owner
	m	(Lcbu;)Z	a	canBeLeashed
		p	1		player
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	(Ljava/util/UUID;)V	b	setOwnerUUID
		p	1		uuid
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lbjg;)Z	c	canAttack
		p	1		target
	m	()Leio;	cf	getTeam
	m	()Ljava/util/UUID;	d	getOwnerUUID
	m	()Lcpm;	e	level
	m	(Lcbu;)V	f	tame
		p	1		player
	m	()Z	gd	isOrderedToSit
	m	(Lbjg;)Z	j	isOwnedBy
		p	1		entity
	m	()Z	s	isTame
	m	(Lbiq;)Z	s	isAlliedTo
		p	1		other
	m	()V	t	reassessTameGoals
	m	(Z)V	w	spawnTamingParticles
		p	1		positive
	m	(Z)V	x	setTame
		p	1		tamed
	m	()Z	y	isInSittingPose
	m	(Z)V	y	setInSittingPose
		p	1		inSittingPose
	m	(Z)V	z	setOrderedToSit
		p	1		sitting
	f	Laee;	bT	DATA_FLAGS_ID
	f	Laee;	bU	DATA_OWNERUUID_ID
	f	Z	bW	orderedToSit
c	bkc	net/minecraft/world/entity/Targeting
	m	()Lbjg;	q	getTarget
c	bkd	net/minecraft/world/entity/TraceableEntity
	m	()Lbiq;	v	getOwner
c	bke	net/minecraft/world/entity/VariantHolder
	m	(Ljava/lang/Object;)V	a	setVariant
		p	1		variant
	m	()Ljava/lang/Object;	c	getVariant
c	bkf	net/minecraft/world/entity/WalkAnimationState
	m	()F	a	speed
	m	(F)V	a	setSpeed
		p	1		speed
	m	(FF)V	a	update
		p	1		speed
		p	2		multiplier
	m	()F	b	position
	m	(F)F	b	speed
		p	1		tickDelta
	m	()Z	c	isMoving
	m	(F)F	c	position
		p	1		tickDelta
	f	F	a	speedOld
	f	F	b	speed
	f	F	c	position
c	bkg	net/minecraft/world/entity/ai/Brain
	m	(Ljava/util/Collection;Ljava/util/Collection;Lcom/google/common/collect/ImmutableList;Ljava/util/function/Supplier;)V	<init>	<init>
		p	1		memories
		p	2		sensors
		p	3		memoryEntries
		p	4		codecSupplier
	m	()V	a	clearMemories
	m	(ILcom/google/common/collect/ImmutableList;)Lcom/google/common/collect/ImmutableList;	a	createPriorityPairs
		p	1		begin
		p	2		tasks
	m	(JJ)V	a	updateActivityFromSchedule
		p	1		timeOfDay
		p	3		time
	m	(Lakq;Lbjg;)V	a	tick
		p	1		world
		p	2		entity
	m	(Lbsh;)Z	a	hasMemoryValue
		p	1		type
	m	(Lbsh;Lbsi;)Z	a	checkMemory
		p	1		type
		p	2		state
	m	(Lbsh;Ljava/lang/Object;)V	a	setMemory
		p	1		type
		p	2		value
	m	(Lbsh;Ljava/lang/Object;J)V	a	setMemoryWithExpiry
		p	1		type
		p	2		value
		p	3		expiry
	m	(Lbsh;Ljava/util/Optional;)V	a	setMemory
		p	1		type
		p	2		value
	m	(Lcdf;)V	a	setActiveActivityIfPossible
		p	1		activity
	m	(Lcdf;ILcom/google/common/collect/ImmutableList;)V	a	addActivity
		p	1		activity
		p	2		begin
		p	3		list
	m	(Lcdf;ILcom/google/common/collect/ImmutableList;Lbsh;)V	a	addActivityAndRemoveMemoryWhenStopped
		p	1		activity
		p	2		begin
		p	3		tasks
		p	4		memoryType
	m	(Lcdf;Lcom/google/common/collect/ImmutableList;)V	a	addActivity
		p	1		activity
		p	2		indexedTasks
	m	(Lcdf;Lcom/google/common/collect/ImmutableList;Ljava/util/Set;)V	a	addActivityWithConditions
		p	1		activity
		p	2		indexedTasks
		p	3		requiredMemories
	m	(Lcdf;Lcom/google/common/collect/ImmutableList;Ljava/util/Set;Ljava/util/Set;)V	a	addActivityAndRemoveMemoriesWhenStopped
		p	1		activity
		p	2		indexedTasks
		p	3		requiredMemories
		p	4		forgettingMemories
	m	(Lcdh;)V	a	setSchedule
		p	1		schedule
	m	(Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/DataResult;	a	serializeStart
		p	1		ops
	m	(Ljava/lang/Integer;)Ljava/util/Map;	a	lambda$addActivityAndRemoveMemoriesWhenStopped$3
		p	0		index
	m	(Ljava/lang/Object;)Z	a	isEmptyCollection
		p	1		value
	m	(Ljava/lang/Object;Ljava/lang/Object;)Z	a	lambda$isMemoryValue$2
		p	1		memoryValue
	m	(Ljava/util/Collection;Ljava/util/Collection;)Lbkg$b;	a	provider
		p	0		memoryModules
		p	1		sensors
	m	(Ljava/util/List;)V	a	setActiveActivityToFirstValid
		p	1		activities
	m	(Ljava/util/Map$Entry;)Lbkg$a;	a	lambda$memories$0
		p	0		entry
	m	(Ljava/util/Set;)V	a	setCoreActivities
		p	1		coreActivities
	m	()Ljava/util/Map;	b	getMemories
	m	(Lakq;Lbjg;)V	b	stopAll
		p	1		world
		p	2		entity
	m	(Lbsh;)V	b	eraseMemory
		p	1		type
	m	(Lbsh;Ljava/lang/Object;)Z	b	isMemoryValue
		p	1		type
		p	2		value
	m	(Lbsh;Ljava/util/Optional;)V	b	setMemoryInternal
		p	1		type
		p	2		memory
	m	(Lcdf;)V	b	setDefaultActivity
		p	1		activity
	m	(Ljava/util/Collection;Ljava/util/Collection;)Lcom/mojang/serialization/Codec;	b	codec
		p	0		memoryModules
		p	1		sensors
	m	()Lcdh;	c	getSchedule
	m	(Lakq;Lbjg;)V	c	tickSensors
		p	1		world
		p	2		entity
	m	(Lbsh;)Ljava/util/Optional;	c	getMemory
		p	1		type
	m	(Lcdf;)Z	c	isActive
		p	1		activity
	m	()Ljava/util/Set;	d	getActiveActivities
	m	(Lakq;Lbjg;)V	d	startEachNonRunningBehavior
		p	1		world
		p	2		entity
	m	(Lbsh;)Ljava/util/Optional;	d	getMemoryInternal
		p	1		type
	m	(Lcdf;)V	d	setActiveActivity
		p	1		except
	m	()Ljava/util/List;	e	getRunningBehaviors
	m	(Lakq;Lbjg;)V	e	tickEachRunningBehavior
		p	1		world
		p	2		entity
	m	(Lbsh;)J	e	getTimeUntilExpiry
		p	1		type
	m	(Lcdf;)V	e	eraseMemoriesForOtherActivitesThan
		p	1		except
	m	()V	f	useDefaultActivity
	m	(Lbsh;)V	f	lambda$clearMemories$1
		p	1		type
	m	(Lcdf;)Z	f	activityRequirementsAreMet
		p	1		activity
	m	()Ljava/util/Optional;	g	getActiveNonCoreActivity
	m	(Lcdf;)Ljava/util/Set;	g	lambda$addActivityAndRemoveMemoriesWhenStopped$4
		p	0		activity2
	m	()V	h	removeAllBehaviors
	m	()Lbkg;	i	copyWithoutBehaviors
	m	()Ljava/util/stream/Stream;	j	memories
	m	()V	k	forgetOutdatedMemories
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/function/Supplier;	b	codec
	f	I	c	SCHEDULE_UPDATE_DELAY
	f	Ljava/util/Map;	d	memories
	f	Ljava/util/Map;	e	sensors
	f	Ljava/util/Map;	f	availableBehaviorsByPriority
	f	Lcdh;	g	schedule
	f	Ljava/util/Map;	h	activityRequirements
	f	Ljava/util/Map;	i	activityMemoriesToEraseWhenStopped
	f	Ljava/util/Set;	j	coreActivities
	f	Ljava/util/Set;	k	activeActivities
	f	Lcdf;	l	defaultActivity
	f	J	m	lastScheduleUpdate
c	bkg$1	net/minecraft/world/entity/ai/Brain$1
	m	(Lbkg;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/RecordBuilder;)Lcom/mojang/serialization/RecordBuilder;	a	encode
	m	(Lbsh;)Lcom/mojang/serialization/DataResult;	a	lambda$captureRead$6
	m	(Lbsh;Lbsg;)Lbkg$a;	a	lambda$captureRead$8
		p	1		data
	m	(Lbsh;Lcom/mojang/serialization/Codec;)Laew;	a	lambda$keys$0
		p	1		codec
	m	(Lbsh;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	captureRead
		p	1		memoryType
		p	2		ops
		p	3		value
	m	(Lcom/mojang/serialization/DynamicOps;Laew;)Ljava/lang/Object;	a	lambda$keys$2
		p	1		id
	m	(Lcom/mojang/serialization/DynamicOps;Lcom/mojang/datafixers/util/Pair;Lbsh;)Lcom/mojang/serialization/DataResult;	a	lambda$decode$3
		p	3		memoryType
	m	(Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/RecordBuilder;Lbkg$a;)V	a	lambda$encode$9
		p	2		entry
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/DataResult;	a	lambda$captureRead$7
		p	2		codec
	m	(Lcom/mojang/serialization/DynamicOps;Lorg/apache/commons/lang3/mutable/MutableObject;Lcom/mojang/datafixers/util/Pair;)V	a	lambda$decode$4
		p	3		pair
	m	(Lbsh;)Ljava/lang/String;	b	lambda$captureRead$5
	m	(Lbsh;)Ljava/util/stream/Stream;	c	lambda$keys$1
		p	0		memoryType
	f	Ljava/util/Collection;	a	val$memoryTypes
	f	Ljava/util/Collection;	b	val$sensorTypes
	f	Lorg/apache/commons/lang3/mutable/MutableObject;	c	val$codecReference
c	bkg$a	net/minecraft/world/entity/ai/Brain$MemoryValue
	m	(Lbsh;Ljava/util/Optional;)V	<init>	<init>
		p	1		type
		p	2		data
	m	(Lbkg;)V	a	setMemoryInternal
		p	1		brain
	m	(Lbsh;Ljava/util/Optional;)Lbkg$a;	a	createUnchecked
		p	0		type
		p	1		data
	m	(Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/RecordBuilder;)V	a	serialize
		p	1		ops
		p	2		builder
	m	(Lcom/mojang/serialization/RecordBuilder;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/Codec;)V	a	lambda$serialize$1
		p	3		codec
	m	(Lcom/mojang/serialization/RecordBuilder;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/Codec;Lbsg;)V	a	lambda$serialize$0
		p	4		data
	f	Lbsh;	a	type
	f	Ljava/util/Optional;	b	value
c	bkg$b	net/minecraft/world/entity/ai/Brain$Provider
	m	(Ljava/util/Collection;Ljava/util/Collection;)V	<init>	<init>
		p	1		memoryModules
		p	2		sensors
	m	()Lbkg;	a	lambda$makeBrain$1
	m	(Lcom/mojang/serialization/Dynamic;)Lbkg;	a	makeBrain
		p	1		data
	m	()Lcom/mojang/serialization/Codec;	b	lambda$makeBrain$0
	f	Ljava/util/Collection;	a	memoryTypes
	f	Ljava/util/Collection;	b	sensorTypes
	f	Lcom/mojang/serialization/Codec;	c	codec
c	bkh	net/minecraft/world/entity/ai/attributes/Attribute
	m	(Ljava/lang/String;D)V	<init>	<init>
		p	1		translationKey
		p	2		fallback
	m	()D	a	getDefaultValue
	m	(D)D	a	sanitizeValue
		p	1		value
	m	(Z)Lbkh;	a	setSyncable
		p	1		tracked
	m	()Z	b	isClientSyncable
	m	()Ljava/lang/String;	c	getDescriptionId
	f	I	a	MAX_NAME_LENGTH
	f	D	b	defaultValue
	f	Z	c	syncable
	f	Ljava/lang/String;	d	descriptionId
c	bki	net/minecraft/world/entity/ai/attributes/AttributeInstance
	m	(Lbkh;Ljava/util/function/Consumer;)V	<init>	<init>
		p	1		type
		p	2		updateCallback
	m	()Lbkh;	a	getAttribute
	m	(D)V	a	setBaseValue
		p	1		baseValue
	m	(Lbki;)V	a	replaceFrom
		p	1		other
	m	(Lbkk$a;)Ljava/util/Set;	a	getModifiers
		p	1		operation
	m	(Lbkk$a;Ljava/util/Set;)V	a	lambda$replaceFrom$1
		p	1		operation
		p	2		modifiers
	m	(Lbkk;)Z	a	hasModifier
		p	1		modifier
	m	(Ljava/util/UUID;)Lbkk;	a	getModifier
		p	1		uuid
	m	(Lqw;)V	a	load
		p	1		nbt
	m	()D	b	getBaseValue
	m	(Lbkk$a;)Ljava/util/Collection;	b	getModifiersOrEmpty
		p	1		operation
	m	(Lbkk;)V	b	addTransientModifier
		p	1		modifier
	m	(Ljava/util/UUID;)V	b	removeModifier
		p	1		uuid
	m	()Ljava/util/Set;	c	getModifiers
	m	(Lbkk$a;)Ljava/util/Set;	c	lambda$getModifiers$0
		p	0		operationx
	m	(Lbkk;)V	c	addPermanentModifier
		p	1		modifier
	m	(Ljava/util/UUID;)Z	c	removePermanentModifier
		p	1		uuid
	m	()V	d	setDirty
	m	(Lbkk;)V	d	addModifier
		p	1		modifier
	m	()V	e	removeModifiers
	m	(Lbkk;)V	e	removeModifier
		p	1		modifier
	m	()D	f	getValue
	m	()Lqw;	g	save
	m	()D	h	calculateValue
	f	Lbkh;	a	attribute
	f	Ljava/util/Map;	b	modifiersByOperation
	f	Ljava/util/Map;	c	modifierById
	f	Ljava/util/Set;	d	permanentModifiers
	f	D	e	baseValue
	f	Z	f	dirty
	f	D	g	cachedValue
	f	Ljava/util/function/Consumer;	h	onDirty
c	bkj	net/minecraft/world/entity/ai/attributes/AttributeMap
	m	(Lbkl;)V	<init>	<init>
		p	1		defaultAttributes
	m	()Ljava/util/Set;	a	getDirtyAttributes
	m	(Lbkh;)Lbki;	a	getInstance
		p	1		attribute
	m	(Lbkh;Lbkk;)V	a	lambda$addTransientAttributeModifiers$4
		p	1		attribute
		p	2		attributeModifier
	m	(Lbkh;Ljava/util/Collection;)V	a	lambda$removeAttributeModifiers$3
		p	1		attribute
		p	2		modifiers
	m	(Lbkh;Ljava/util/UUID;)Z	a	hasModifier
		p	1		attribute
		p	2		uuid
	m	(Lbki;)V	a	onAttributeModified
		p	1		instance
	m	(Lbki;Lbkk;)V	a	lambda$removeAttributeModifiers$2
		p	1		modifier
	m	(Lbkj;)V	a	assignValues
		p	1		other
	m	(Lcom/google/common/collect/Multimap;)V	a	removeAttributeModifiers
		p	1		attributeModifiers
	m	(Lhe;)Lbki;	a	getInstance
		p	1		attribute
	m	(Lhe;Ljava/util/UUID;)Z	a	hasModifier
		p	1		attribute
		p	2		uuid
	m	(Ljava/lang/String;)V	a	lambda$load$7
	m	(Lqw;Lbkh;)V	a	lambda$load$6
		p	2		attribute
	m	(Lrc;)V	a	load
		p	1		nbt
	m	()Ljava/util/Collection;	b	getSyncableAttributes
	m	(Lbkh;)Z	b	hasAttribute
		p	1		attribute
	m	(Lbkh;Ljava/util/UUID;)D	b	getModifierValue
		p	1		attribute
		p	2		uuid
	m	(Lbki;)V	b	lambda$assignValues$5
		p	1		attributeInstance
	m	(Lcom/google/common/collect/Multimap;)V	b	addTransientAttributeModifiers
		p	1		attributeModifiers
	m	(Lhe;)Z	b	hasAttribute
		p	1		attribute
	m	(Lhe;Ljava/util/UUID;)D	b	getModifierValue
		p	1		attribute
		p	2		uuid
	m	()Lrc;	c	save
	m	(Lbkh;)D	c	getValue
		p	1		attribute
	m	(Lbki;)Z	c	lambda$getSyncableAttributes$0
		p	0		attribute
	m	(Lbkh;)D	d	getBaseValue
		p	1		attribute
	m	(Lbkh;)Lbki;	e	lambda$getInstance$1
		p	1		attributex
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/Map;	b	attributes
	f	Ljava/util/Set;	c	dirtyAttributes
	f	Lbkl;	d	supplier
c	bkk	net/minecraft/world/entity/ai/attributes/AttributeModifier
	m	(Ljava/lang/String;DLbkk$a;)V	<init>	<init>
		p	1		name
		p	2		value
		p	4		operation
	m	(Ljava/util/UUID;Ljava/lang/String;DLbkk$a;)V	<init>	<init>
		p	1		uuid
		p	2		name
		p	3		value
		p	5		operation
	m	(Ljava/util/UUID;Ljava/util/function/Supplier;DLbkk$a;)V	<init>	<init>
		p	1		uuid
		p	2		nameGetter
		p	3		value
		p	5		operation
	m	()Ljava/util/UUID;	a	getId
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$new$1
	m	(Lqw;)Lbkk;	a	load
		p	0		nbt
	m	()Ljava/lang/String;	b	getName
	m	(Ljava/lang/String;)Ljava/lang/String;	b	lambda$new$0
	m	()Lbkk$a;	c	getOperation
	m	()D	d	getAmount
	m	()Lqw;	e	save
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	D	b	amount
	f	Lbkk$a;	c	operation
	f	Ljava/util/function/Supplier;	d	nameGetter
	f	Ljava/util/UUID;	e	id
c	bkk$a	net/minecraft/world/entity/ai/attributes/AttributeModifier$Operation
	m	(Ljava/lang/String;ILjava/lang/String;I)V	<init>	<init>
		p	3		name
		p	4		id
	m	()I	a	toValue
	m	(I)Lbkk$a;	a	fromValue
		p	0		id
	m	()[Lbkk$a;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lbkk$a;	a	ADDITION
	f	Lbkk$a;	b	MULTIPLY_BASE
	f	Lbkk$a;	c	MULTIPLY_TOTAL
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	[Lbkk$a;	e	OPERATIONS
	f	Ljava/lang/String;	f	name
	f	I	g	value
	f	[Lbkk$a;	h	$VALUES
c	bkl	net/minecraft/world/entity/ai/attributes/AttributeSupplier
	m	(Ljava/util/Map;)V	<init>	<init>
		p	1		instances
	m	()Lbkl$a;	a	builder
	m	(Lbkh;)D	a	getValue
		p	1		attribute
	m	(Lbkh;Ljava/util/UUID;)D	a	getModifierValue
		p	1		attribute
		p	2		uuid
	m	(Ljava/util/function/Consumer;Lbkh;)Lbki;	a	createInstance
		p	1		updateCallback
		p	2		attribute
	m	(Lbkh;)D	b	getBaseValue
		p	1		attribute
	m	(Lbkh;Ljava/util/UUID;)Z	b	hasModifier
		p	1		type
		p	2		uuid
	m	(Lbkh;)Z	c	hasAttribute
		p	1		type
	m	(Lbkh;)Lbki;	d	getAttributeInstance
		p	1		attribute
	f	Ljava/util/Map;	a	instances
c	bkl$a	net/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder
	m	()Lbkl;	a	build
	m	(Lbkh;)Lbkl$a;	a	add
		p	1		attribute
	m	(Lbkh;D)Lbkl$a;	a	add
		p	1		attribute
		p	2		baseValue
	m	(Lbkh;Lbki;)V	a	lambda$create$0
		p	2		attributex
	m	(Lbkh;)Lbki;	b	create
		p	1		attribute
	f	Ljava/util/Map;	a	builder
	f	Z	b	instanceFrozen
c	bkm	net/minecraft/world/entity/ai/attributes/Attributes
	m	(Ljava/lang/String;Lbkh;)Lbkh;	a	register
		p	0		id
		p	1		attribute
	f	Lbkh;	a	MAX_HEALTH
	f	Lbkh;	b	FOLLOW_RANGE
	f	Lbkh;	c	KNOCKBACK_RESISTANCE
	f	Lbkh;	d	MOVEMENT_SPEED
	f	Lbkh;	e	FLYING_SPEED
	f	Lbkh;	f	ATTACK_DAMAGE
	f	Lbkh;	g	ATTACK_KNOCKBACK
	f	Lbkh;	h	ATTACK_SPEED
	f	Lbkh;	i	ARMOR
	f	Lbkh;	j	ARMOR_TOUGHNESS
	f	Lbkh;	k	LUCK
	f	Lbkh;	l	MAX_ABSORPTION
	f	Lbkh;	m	SPAWN_REINFORCEMENTS_CHANCE
	f	Lbkh;	n	JUMP_STRENGTH
c	bkn	net/minecraft/world/entity/ai/attributes/DefaultAttributes
	m	()V	a	validate
	m	(Laew;)V	a	lambda$validate$2
		p	0		id
	m	(Lbiu;)Lbkl;	a	getSupplier
		p	0		type
	m	(Lbiu;)Z	b	hasSupplier
		p	0		type
	m	(Lbiu;)Z	c	lambda$validate$1
		p	0		entityType
	m	(Lbiu;)Z	d	lambda$validate$0
		p	0		entityType
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/Map;	b	SUPPLIERS
c	bko	net/minecraft/world/entity/ai/attributes/RangedAttribute
	m	(Ljava/lang/String;DDD)V	<init>	<init>
		p	1		translationKey
		p	2		fallback
		p	4		min
		p	6		max
	m	(D)D	a	sanitizeValue
		p	1		value
	m	()D	d	getMinValue
	m	()D	e	getMaxValue
	f	D	b	minValue
	f	D	c	maxValue
c	bkp	net/minecraft/world/entity/ai/attributes/package-info
c	bkq	net/minecraft/world/entity/ai/behavior/AcquirePoi
	m	(JLit/unimi/dsi/fastutil/longs/Long2ObjectMap$Entry;)Z	a	lambda$create$0
		p	2		entry
	m	(Lakq;JJ)Lbkq$a;	a	lambda$create$5
	m	(Lakq;Lbjp;Ljava/lang/Byte;)V	a	lambda$create$3
		p	2		status
	m	(Lbji;Ljava/util/Set;)Lebb;	a	findPathToPois
		p	0		entity
		p	1		pois
	m	(Lbmh;Lbok;)Lbom;	a	lambda$create$9
		p	1		poiPos
	m	(Lbsh;Lbmh;Lboj$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$10
		p	2		context
	m	(Lbsh;ZLorg/apache/commons/lang3/mutable/MutableLong;Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;Ljava/util/function/Predicate;Ljava/util/Optional;Lboj$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$8
		p	0		context
	m	(Lbuf;Ljava/util/function/Predicate;Lgw;Lbok;Lakq;Ljava/util/Optional;Lbjp;Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;Lhe;)V	a	lambda$create$4
		p	8		poiType
	m	(Lgw;Lhe;Lgw;)Z	a	lambda$create$2
	m	(Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;JLgw;)Z	a	lambda$create$1
		p	3		pos
	m	(Ljava/util/function/Predicate;Lbsh;Lbsh;ZLjava/util/Optional;)Lbky;	a	create
		p	0		poiPredicate
		p	1		poiPosModule
		p	2		potentialPoiPosModule
		p	3		onlyRunIfChild
		p	4		entityStatus
	m	(Ljava/util/function/Predicate;Lbsh;ZLjava/util/Optional;)Lbky;	a	create
		p	0		poiPredicate
		p	1		poiPosModule
		p	2		onlyRunIfChild
		p	3		entityStatus
	m	(ZLorg/apache/commons/lang3/mutable/MutableLong;Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;Ljava/util/function/Predicate;Lbok;Ljava/util/Optional;Lakq;Lbjp;J)Z	a	lambda$create$6
		p	6		world
		p	7		entity
		p	8		time
	m	(ZLorg/apache/commons/lang3/mutable/MutableLong;Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;Ljava/util/function/Predicate;Ljava/util/Optional;Lbok;)Lbom;	a	lambda$create$7
		p	5		queryResult
	f	I	a	SCAN_RANGE
c	bkq$a	net/minecraft/world/entity/ai/behavior/AcquirePoi$JitteredLinearRetry
	m	(Lasc;J)V	<init>	<init>
		p	1		random
		p	2		time
	m	(J)V	a	markAttempt
		p	1		time
	m	(J)Z	b	isStillValid
		p	1		time
	m	(J)Z	c	shouldRetry
		p	1		time
	f	I	a	MIN_INTERVAL_INCREASE
	f	I	b	MAX_INTERVAL_INCREASE
	f	I	c	MAX_RETRY_PATHFINDING_INTERVAL
	f	Lasc;	d	random
	f	J	e	previousAttemptTimestamp
	f	J	f	nextScheduledAttemptTimestamp
	f	I	g	currentDelay
c	bkr	net/minecraft/world/entity/ai/behavior/AnimalMakeLove
	m	(Lbiu;F)V	<init>	<init>
		p	1		targetType
		p	2		speed
	m	(Lakq;Lbjg;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lakq;Lbjg;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbur;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lakq;Lbur;J)V	a	start
	m	(Lbur;)Lbur;	a	getBreedTarget
		p	1		animal
	m	(Lbur;Lbjg;)Z	a	lambda$findValidBreedPartner$0
		p	2		entity
	m	(Lakq;Lbjg;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbur;J)Z	b	canStillUse
	m	(Lbur;)Z	b	hasBreedTargetOfRightType
		p	1		animal
	m	(Lakq;Lbjg;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbur;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Lbur;)Ljava/util/Optional;	c	findValidBreedPartner
		p	1		animal
	m	(Lakq;Lbjg;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbur;J)V	d	stop
	f	I	c	BREED_RANGE
	f	I	d	MIN_DURATION
	f	I	e	MAX_DURATION
	f	Lbiu;	f	partnerType
	f	F	g	speedModifier
	f	J	h	spawnChildAtTime
c	bks	net/minecraft/world/entity/ai/behavior/AnimalPanic
	m	(F)V	<init>	<init>
		p	1		speed
	m	(FLjava/util/function/Predicate;)V	<init>	<init>
		p	1		speed
		p	2		predicate
	m	(Lakq;Lbjg;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lakq;Lbjg;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbjp;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lakq;Lbjp;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lbjp;)Z	a	lambda$static$0
		p	0		entity
	m	(Lbjp;Lakq;)Lehn;	a	getPanicPos
		p	1		entity
		p	2		world
	m	(Lcpb;Lbiq;)Ljava/util/Optional;	a	lookForWater
		p	1		world
		p	2		entity
	m	(Lcpb;Lgw;)Z	a	lambda$lookForWater$3
		p	1		pos
	m	(Lakq;Lbjg;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbjp;J)V	b	start
	m	(Lcpb;Lgw;)Z	b	lambda$lookForWater$2
		p	1		pos
	m	(Lakq;Lbjg;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbjp;J)V	c	stop
	m	(Lcpb;Lgw;)Z	c	lambda$lookForWater$1
		p	1		posx
	m	(Lakq;Lbjg;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbjp;J)V	d	tick
	f	I	c	PANIC_MIN_DURATION
	f	I	d	PANIC_MAX_DURATION
	f	I	e	PANIC_DISTANCE_HORIZONTAL
	f	I	f	PANIC_DISTANCE_VERTICAL
	f	Ljava/util/function/Predicate;	g	DEFAULT_SHOULD_PANIC_PREDICATE
	f	F	h	speedMultiplier
	f	Ljava/util/function/Predicate;	i	shouldPanic
c	bkt	net/minecraft/world/entity/ai/behavior/AssignProfessionFromJobSite
	m	()Lbky;	a	create
	m	(Lboj$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$6
		p	0		context
	m	(Lboj$b;Lbok;Lbok;)Lbom;	a	lambda$create$5
		p	1		potentialJobSite
		p	2		jobSite
	m	(Lboj$b;Lbok;Lbok;Lakq;Lcbh;J)Z	a	lambda$create$4
		p	3		world
		p	4		entity
		p	5		time
	m	(Lcbh;Lakq;Lcbk;)V	a	lambda$create$3
		p	2		profession
	m	(Lhd;Lakq;)Ljava/util/Optional;	a	lambda$create$0
		p	1		jobSiteWorld
	m	(Lhe;)Ljava/util/Optional;	a	lambda$create$2
		p	0		poiType
	m	(Lhe;Lcbk;)Z	a	lambda$create$1
		p	1		profession
c	bku	net/minecraft/world/entity/ai/behavior/BabyFollowAdult
	m	(FLbjg;)Ljava/lang/Float;	a	lambda$create$0
		p	1		entity
	m	(Lbgj;F)Lbmh;	a	create
		p	0		executionRange
		p	1		speed
	m	(Lbgj;Ljava/util/function/Function;)Lbmh;	a	create
		p	0		executionRange
		p	1		speed
	m	(Lbgj;Ljava/util/function/Function;Lboj$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$3
		p	2		context
	m	(Lboj$b;Lbgj;Ljava/util/function/Function;Lbok;Lbok;Lbok;)Lbom;	a	lambda$create$2
		p	3		nearestVisibleAdult
		p	4		lookTarget
		p	5		walkTarget
	m	(Lboj$b;Lbok;Lbgj;Ljava/util/function/Function;Lbok;Lbok;Lakq;Lbil;J)Z	a	lambda$create$1
		p	6		world
		p	7		entity
		p	8		time
c	bkv	net/minecraft/world/entity/ai/behavior/BackUpIfTooClose
	m	(IF)Lbmh;	a	create
		p	0		distance
		p	1		forwardMovement
	m	(IFLboj$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
		p	2		context
	m	(Lboj$b;IFLbok;Lbok;Lbok;Lbok;)Lbom;	a	lambda$create$1
		p	3		walkTarget
		p	4		lookTarget
		p	5		attackTarget
		p	6		visibleMobs
	m	(Lboj$b;Lbok;ILbok;Lbok;FLakq;Lbji;J)Z	a	lambda$create$0
		p	6		world
		p	7		entity
		p	8		time
c	bkw	net/minecraft/world/entity/ai/behavior/BecomePassiveIfMemoryPresent
	m	(ILbok;Lbok;Lbok;)Lbom;	a	lambda$create$2
		p	1		attackTarget
		p	2		pacified
		p	3		requiredMemoryResult
	m	(Lbok;ILbok;Lakq;Lbjg;J)Z	a	lambda$create$1
		p	3		world
		p	4		entity
		p	5		time
	m	(Lbsh;)Ljava/lang/String;	a	lambda$create$0
	m	(Lbsh;I)Lbky;	a	create
		p	0		requiredMemory
		p	1		duration
	m	(Lbsh;ILboj$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$3
		p	2		context
c	bkx	net/minecraft/world/entity/ai/behavior/Behavior
	m	(Ljava/util/Map;)V	<init>	<init>
		p	1		requiredMemoryState
	m	(Ljava/util/Map;I)V	<init>	<init>
		p	1		requiredMemoryState
		p	2		runTime
	m	(Ljava/util/Map;II)V	<init>	<init>
		p	1		requiredMemoryState
		p	2		minRunTime
		p	3		maxRunTime
	m	()Lbkx$a;	a	getStatus
	m	(J)Z	a	timedOut
		p	1		time
	m	(Lakq;Lbjg;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lakq;Lbjg;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lbjg;)Z	a	hasRequiredMemories
		p	1		entity
	m	()Ljava/lang/String;	b	debugString
	m	(Lakq;Lbjg;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbjg;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbjg;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbjg;J)Z	e	tryStart
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbjg;J)V	f	tickOrStop
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbjg;J)V	g	doStop
		p	1		world
		p	2		entity
		p	3		time
	f	I	a	DEFAULT_DURATION
	f	Ljava/util/Map;	b	entryCondition
	f	Lbkx$a;	c	status
	f	J	d	endTimestamp
	f	I	e	minDuration
	f	I	f	maxDuration
c	bkx$a	net/minecraft/world/entity/ai/behavior/Behavior$Status
	m	()[Lbkx$a;	a	$values
	f	Lbkx$a;	a	STOPPED
	f	Lbkx$a;	b	RUNNING
	f	[Lbkx$a;	c	$VALUES
c	bky	net/minecraft/world/entity/ai/behavior/BehaviorControl
	m	()Lbkx$a;	a	getStatus
	m	()Ljava/lang/String;	b	debugString
	m	(Lakq;Lbjg;J)Z	e	tryStart
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbjg;J)V	f	tickOrStop
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbjg;J)V	g	doStop
		p	1		world
		p	2		entity
		p	3		time
c	bkz	net/minecraft/world/entity/ai/behavior/BehaviorUtils
	m	(Lakq;ILhw;)Z	a	lambda$findSectionClosestToVillage$2
		p	2		sectionPos
	m	(Lakq;Lhw;I)Lhw;	a	findSectionClosestToVillage
		p	0		world
		p	1		center
		p	2		radius
	m	(Lbiq;)Lbjg;	a	lambda$getLivingEntityFromUUIDMemory$4
		p	0		target
	m	(Lbiu;Lbjg;)Z	a	lambda$targetIsValid$0
		p	1		entity
	m	(Lbjg;)Z	a	isBreeding
		p	0		entity
	m	(Lbjg;Lbiq;FI)V	a	setWalkAndLookTargetMemories
		p	0		entity
		p	1		target
		p	2		speed
		p	3		completionRange
	m	(Lbjg;Lbjg;)V	a	lookAtEntity
		p	0		entity
		p	1		target
	m	(Lbjg;Lbjg;D)Z	a	isOtherTargetMuchFurtherAwayThanCurrentAttackTarget
		p	0		source
		p	1		target
		p	2		extraDistance
	m	(Lbjg;Lbjg;F)V	a	lockGazeAndWalkToEachOther
		p	0		first
		p	1		second
		p	2		speed
	m	(Lbjg;Lbjg;Lbjg;)Lbjg;	a	getTargetNearestMe
		p	0		source
		p	1		first
		p	2		second
	m	(Lbjg;Lbmk;FI)V	a	setWalkAndLookTargetMemories
		p	0		entity
		p	1		target
		p	2		speed
		p	3		completionRange
	m	(Lbjg;Lbsh;)Ljava/util/Optional;	a	getLivingEntityFromUUIDMemory
		p	0		entity
		p	1		uuidMemoryModule
	m	(Lbjg;Lcjf;Lehn;)V	a	throwItem
		p	0		entity
		p	1		stack
		p	2		targetLocation
	m	(Lbjg;Lcjf;Lehn;Lehn;F)V	a	throwItem
		p	0		entity
		p	1		stack
		p	2		targetLocation
		p	3		velocityFactor
		p	4		yOffset
	m	(Lbjg;Lgw;FI)V	a	setWalkAndLookTargetMemories
		p	0		entity
		p	1		target
		p	2		speed
		p	3		completionRange
	m	(Lbjg;Ljava/util/Optional;Lbjg;)Lbjg;	a	getNearestTarget
		p	0		source
		p	1		first
		p	2		second
	m	(Lbjg;Ljava/util/UUID;)Lbiq;	a	lambda$getLivingEntityFromUUIDMemory$3
		p	1		uuid
	m	(Lbji;Lbjg;I)Z	a	isWithinAttackRange
		p	0		mob
		p	1		target
		p	2		rangedWeaponReachReduction
	m	(Lbjp;II)Lehn;	a	getRandomSwimmablePos
		p	0		entity
		p	1		horizontalRange
		p	2		verticalRange
	m	(Lbkg;Lbjg;)Z	a	entityIsVisible
		p	0		brain
		p	1		target
	m	(Lbkg;Lbsh;Lbiu;)Z	a	targetIsValid
		p	0		brain
		p	1		memoryModuleType
		p	2		entityType
	m	(Lbkg;Lbsh;Ljava/util/function/Predicate;)Z	a	targetIsValid
		p	0		brain
		p	1		memoryType
		p	2		filter
	m	(Lbjg;Lbjg;)Z	b	canSee
		p	0		source
		p	1		target
	m	(Lbjg;Lbjg;F)V	b	setWalkAndLookTargetMemoriesToEachOther
		p	0		first
		p	1		second
		p	2		speed
	m	(Lbkg;Lbjg;)Z	b	lambda$targetIsValid$1
		p	1		target
	m	(Lbjg;Lbjg;)V	c	lookAtEachOther
		p	0		first
		p	1		second
c	bla	net/minecraft/world/entity/ai/behavior/BlockPosTracker
	m	(Lehn;)V	<init>	<init>
		p	1		pos
	m	(Lgw;)V	<init>	<init>
		p	1		blockPos
	m	()Lehn;	a	currentPosition
	m	(Lbjg;)Z	a	isVisibleBy
		p	1		entity
	m	()Lgw;	b	currentBlockPosition
	f	Lgw;	a	blockPos
	f	Lehn;	b	centerPosition
c	blb	net/minecraft/world/entity/ai/behavior/CelebrateVillagersSurvivedRaid
	m	(II)V	<init>	<init>
		p	1		minRunTime
		p	2		maxRunTime
	m	(Lakq;Lbjg;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lakq;Lbjg;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lcbh;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lakq;Lcbh;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lcht;I)Lcjf;	a	getFirework
		p	1		color
		p	2		flight
	m	(Lakq;Lbjg;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lcbh;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbjg;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lcbh;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	f	Lcdb;	c	currentRaid
c	blc	net/minecraft/world/entity/ai/behavior/CopyMemoryWithExpiry
	m	(Lbsh;Lbsh;Ljava/util/function/Predicate;Lbgj;Lboj$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
		p	4		context
	m	(Ljava/util/function/Predicate;Lboj$b;Lbgj;Lbok;Lbok;)Lbom;	a	lambda$create$1
		p	3		source
		p	4		target
	m	(Ljava/util/function/Predicate;Lbok;Lboj$b;Lbok;Lbgj;Lakq;Lbjg;J)Z	a	lambda$create$0
		p	5		world
		p	6		entity
		p	7		time
	m	(Ljava/util/function/Predicate;Lbsh;Lbsh;Lbgj;)Lbky;	a	create
		p	0		runPredicate
		p	1		sourceType
		p	2		targetType
		p	3		expiry
c	bld	net/minecraft/world/entity/ai/behavior/CountDownCooldownTicks
	m	(Lbsh;)V	<init>	<init>
		p	1		moduleType
	m	(J)Z	a	timedOut
		p	1		time
	m	(Lakq;Lbjg;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbjg;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Lbjg;)Ljava/util/Optional;	b	getCooldownTickMemory
		p	1		entity
	m	(Lakq;Lbjg;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	f	Lbsh;	c	cooldownTicks
c	ble	net/minecraft/world/entity/ai/behavior/Croak
	m	(Lakq;Lbjg;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lakq;Lbjg;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbwg;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lakq;Lbwg;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbjg;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbwg;J)V	b	start
	m	(Lakq;Lbjg;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbwg;J)V	c	stop
	m	(Lakq;Lbjg;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbwg;J)V	d	tick
	f	I	c	CROAK_TICKS
	f	I	d	TIME_OUT_DURATION
	f	I	e	croakCounter
c	blf	net/minecraft/world/entity/ai/behavior/CrossbowAttack
	m	(Lakq;Lbjg;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lakq;Lbjg;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbji;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lakq;Lbji;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lbji;Lbjg;)V	a	crossbowAttack
		p	1		entity
		p	2		target
	m	(Lakq;Lbjg;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbji;J)V	b	tick
	m	(Lbjg;)Lbjg;	b	getAttackTarget
		p	0		entity
	m	(Lbji;Lbjg;)V	b	lookAtTarget
		p	1		entity
		p	2		target
	m	(Lakq;Lbjg;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbji;J)V	c	stop
	f	I	c	TIMEOUT
	f	I	d	attackDelay
	f	Lblf$a;	e	crossbowState
c	blf$a	net/minecraft/world/entity/ai/behavior/CrossbowAttack$CrossbowState
	m	()[Lblf$a;	a	$values
	f	Lblf$a;	a	UNCHARGED
	f	Lblf$a;	b	CHARGING
	f	Lblf$a;	c	CHARGED
	f	Lblf$a;	d	READY_TO_ATTACK
	f	[Lblf$a;	e	$VALUES
c	blg	net/minecraft/world/entity/ai/behavior/DismountOrSkipMounting
	m	(ILjava/util/function/BiPredicate;)Lbky;	a	create
		p	0		range
		p	1		alternativeRideCondition
	m	(ILjava/util/function/BiPredicate;Lboj$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
		p	2		context
	m	(Lbjg;Lbiq;I)Z	a	isVehicleValid
		p	0		entity
		p	1		vehicle
		p	2		range
	m	(Lboj$b;ILjava/util/function/BiPredicate;Lbok;)Lbom;	a	lambda$create$1
		p	3		rideTarget
	m	(Lboj$b;Lbok;ILjava/util/function/BiPredicate;Lakq;Lbjg;J)Z	a	lambda$create$0
		p	4		world
		p	5		entity
		p	6		time
c	blh	net/minecraft/world/entity/ai/behavior/DoNothing
	m	(II)V	<init>	<init>
		p	1		minRunTime
		p	2		maxRunTime
	m	()Lbkx$a;	a	getStatus
	m	()Ljava/lang/String;	b	debugString
	m	(Lakq;Lbjg;J)Z	e	tryStart
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbjg;J)V	f	tickOrStop
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbjg;J)V	g	doStop
		p	1		world
		p	2		entity
		p	3		time
	f	I	a	minDuration
	f	I	b	maxDuration
	f	Lbkx$a;	c	status
	f	J	d	endTimestamp
c	bli	net/minecraft/world/entity/ai/behavior/EntityTracker
	m	(Lbiq;Z)V	<init>	<init>
		p	1		entity
		p	2		useEyeHeight
	m	()Lehn;	a	currentPosition
	m	(Lbjg;)Z	a	isVisibleBy
		p	1		entity
	m	()Lgw;	b	currentBlockPosition
	m	()Lbiq;	c	getEntity
	f	Lbiq;	a	entity
	f	Z	b	trackEyeHeight
c	blj	net/minecraft/world/entity/ai/behavior/EraseMemoryIf
	m	(Lbsh;Ljava/util/function/Predicate;Lboj$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
		p	2		context
	m	(Ljava/util/function/Predicate;Lbok;)Lbom;	a	lambda$create$1
		p	1		queryResult
	m	(Ljava/util/function/Predicate;Lbok;Lakq;Lbjg;J)Z	a	lambda$create$0
		p	2		world
		p	3		entity
		p	4		time
	m	(Ljava/util/function/Predicate;Lbsh;)Lbky;	a	create
		p	0		condition
		p	1		memory
c	blk	net/minecraft/world/entity/ai/behavior/FollowTemptation
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1		speed
	m	(Ljava/util/function/Function;Ljava/util/function/Function;)V	<init>	<init>
		p	1		speed
		p	2		stopDistanceGetter
	m	(J)Z	a	timedOut
		p	1		time
	m	(Lakq;Lbjg;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbjp;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lbjp;)F	a	getSpeedModifier
		p	1		entity
	m	(Lakq;Lbjg;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbjp;J)V	b	start
	m	(Lbjg;)Ljava/lang/Double;	b	lambda$new$0
		p	0		entity
	m	(Lbjp;)Ljava/util/Optional;	b	getTemptingPlayer
		p	1		entity
	m	()Lcom/google/common/collect/ImmutableMap;	c	lambda$new$1
	m	(Lakq;Lbjg;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbjp;J)V	c	stop
	m	(Lakq;Lbjg;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbjp;J)V	d	tick
	f	I	c	TEMPTATION_COOLDOWN
	f	D	d	DEFAULT_CLOSE_ENOUGH_DIST
	f	D	e	BACKED_UP_CLOSE_ENOUGH_DIST
	f	Ljava/util/function/Function;	f	speedModifier
	f	Ljava/util/function/Function;	g	closeEnoughDistance
c	bll	net/minecraft/world/entity/ai/behavior/GateBehavior
	m	(Ljava/util/Map;Ljava/util/Set;Lbll$a;Lbll$b;Ljava/util/List;)V	<init>	<init>
		p	1		requiredMemoryState
		p	2		memoriesToForgetWhenStopped
		p	3		order
		p	4		runMode
		p	5		tasks
	m	()Lbkx$a;	a	getStatus
	m	(Lakq;Lbjg;JLbky;)V	a	lambda$doStop$5
		p	4		task
	m	(Lbjg;)Z	a	hasRequiredMemories
		p	1		entity
	m	(Lbky;)Z	a	lambda$toString$6
		p	0		task
	m	(Lcom/mojang/datafixers/util/Pair;)V	a	lambda$new$0
		p	1		task
	m	()Ljava/lang/String;	b	debugString
	m	(Lakq;Lbjg;JLbky;)V	b	lambda$tickOrStop$2
		p	4		task
	m	(Lbky;)Z	b	lambda$doStop$4
		p	0		task
	m	(Lbky;)Z	c	lambda$tickOrStop$3
		p	0		task
	m	(Lbky;)Z	d	lambda$tickOrStop$1
		p	0		task
	m	(Lakq;Lbjg;J)Z	e	tryStart
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbjg;J)V	f	tickOrStop
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbjg;J)V	g	doStop
		p	1		world
		p	2		entity
		p	3		time
	f	Ljava/util/Map;	a	entryCondition
	f	Ljava/util/Set;	b	exitErasedMemories
	f	Lbll$a;	c	orderPolicy
	f	Lbll$b;	d	runningPolicy
	f	Lbnf;	e	behaviors
	f	Lbkx$a;	f	status
c	bll$a	net/minecraft/world/entity/ai/behavior/GateBehavior$OrderPolicy
	m	(Ljava/lang/String;ILjava/util/function/Consumer;)V	<init>	<init>
		p	3		listModifier
	m	()[Lbll$a;	a	$values
	m	(Lbnf;)V	a	apply
		p	1		list
	m	(Lbnf;)V	b	lambda$static$0
		p	0		list
	f	Lbll$a;	a	ORDERED
	f	Lbll$a;	b	SHUFFLED
	f	Ljava/util/function/Consumer;	c	consumer
	f	[Lbll$a;	d	$VALUES
c	bll$b	net/minecraft/world/entity/ai/behavior/GateBehavior$RunningPolicy
	m	()[Lbll$b;	a	$values
	m	(Ljava/util/stream/Stream;Lakq;Lbjg;J)V	a	apply
		p	1		tasks
		p	2		world
		p	3		entity
		p	4		time
	f	Lbll$b;	a	RUN_ONE
	f	Lbll$b;	b	TRY_ALL
	f	[Lbll$b;	c	$VALUES
c	bll$b$1	net/minecraft/world/entity/ai/behavior/GateBehavior$RunningPolicy$1
	m	(Lakq;Lbjg;JLbky;)Z	a	lambda$apply$1
		p	4		task
	m	(Lbky;)Z	a	lambda$apply$0
		p	0		task
	m	(Ljava/util/stream/Stream;Lakq;Lbjg;J)V	a	apply
		p	1		tasks
		p	2		world
		p	3		entity
		p	4		time
c	bll$b$2	net/minecraft/world/entity/ai/behavior/GateBehavior$RunningPolicy$2
	m	(Lakq;Lbjg;JLbky;)V	a	lambda$apply$1
		p	4		task
	m	(Lbky;)Z	a	lambda$apply$0
		p	0		task
	m	(Ljava/util/stream/Stream;Lakq;Lbjg;J)V	a	apply
		p	1		tasks
		p	2		world
		p	3		entity
		p	4		time
c	blm	net/minecraft/world/entity/ai/behavior/GiveGiftToHero
	m	(I)V	<init>	<init>
		p	1		delay
	m	(Lakq;)I	a	calculateTimeUntilNextGift
		p	0		world
	m	(Lakq;Lbjg;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lakq;Lbjg;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lcbh;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lakq;Lcbh;J)V	a	start
	m	(Lcbh;)Ljava/util/List;	a	getItemToThrow
		p	1		villager
	m	(Lcbh;Lbjg;)V	a	throwGift
		p	1		villager
		p	2		recipient
	m	(Lcbh;Lcbu;)Z	a	isWithinThrowingDistance
		p	1		villager
		p	2		player
	m	(Lcbu;)Z	a	isHero
		p	1		player
	m	(Ljava/util/HashMap;)V	a	lambda$static$0
		p	0		gifts
	m	(Lakq;Lbjg;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lcbh;J)Z	b	canStillUse
	m	(Lcbh;)Z	b	isHeroVisible
		p	1		villager
	m	(Lakq;Lbjg;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lcbh;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Lcbh;)Ljava/util/Optional;	c	getNearestTargetableHero
		p	1		villager
	m	(Lakq;Lbjg;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lcbh;J)V	d	stop
	f	I	c	THROW_GIFT_AT_DISTANCE
	f	I	d	MIN_TIME_BETWEEN_GIFTS
	f	I	e	MAX_TIME_BETWEEN_GIFTS
	f	I	f	TIME_TO_DELAY_FOR_HEAD_TO_FINISH_TURNING
	f	Ljava/util/Map;	g	GIFTS
	f	F	h	SPEED_MODIFIER
	f	I	i	timeUntilNextGift
	f	Z	j	giftGivenDuringThisRun
	f	J	k	timeSinceStart
c	bln	net/minecraft/world/entity/ai/behavior/GoAndGiveItemsToTarget
	m	(Ljava/util/function/Function;FI)V	<init>	<init>
		p	1		lookTargetFunction
		p	2		speed
		p	3		runTime
	m	(Lakq;Lbjg;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lakq;Lbjg;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lbjg;Lbmk;)V	a	lambda$start$0
		p	2		target
	m	(Lbjg;Lcjf;Lehn;)V	a	throwItem
		p	0		entity
		p	1		stack
		p	2		target
	m	(Lbmk;)Lehn;	a	getThrowPosition
		p	0		target
	m	(Lbmk;Lcjf;Lakr;)V	a	triggerDropItemOnBlock
		p	1		target
		p	2		stack
		p	3		player
	m	(Lbjg;)Z	b	canThrowItemToTarget
		p	1		entity
	m	(Lbmk;Lcjf;Lakr;)V	b	lambda$tick$1
		p	3		player
	m	(Lakq;Lbjg;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbjg;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
	f	I	c	CLOSE_ENOUGH_DISTANCE_TO_TARGET
	f	I	d	ITEM_PICKUP_COOLDOWN_AFTER_THROWING
	f	Ljava/util/function/Function;	e	targetPositionGetter
	f	F	f	speedModifier
c	blo	net/minecraft/world/entity/ai/behavior/GoToClosestVillage
	m	(FI)Lbky;	a	create
		p	0		speed
		p	1		completionRange
	m	(FILboj$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$3
		p	2		context
	m	(FILbok;)Lbom;	a	lambda$create$2
		p	2		walkTarget
	m	(Lbok;FILakq;Lcbh;J)Z	a	lambda$create$1
		p	3		world
		p	4		entity
		p	5		time
	m	(Lbuf;Lgw;)D	a	lambda$create$0
		p	1		pos
c	blp	net/minecraft/world/entity/ai/behavior/GoToPotentialJobSite
	m	(F)V	<init>	<init>
		p	1		speed
	m	(Lakq;Lbjg;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lakq;Lbjg;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lcbh;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lakq;Lcbh;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lhd;)V	a	lambda$stop$2
		p	1		pos
	m	(Lcdf;)Ljava/lang/Boolean;	a	lambda$checkExtraStartConditions$0
		p	0		activity
	m	(Lhe;)Z	a	lambda$stop$1
		p	0		poiType
	m	(Lakq;Lbjg;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lcbh;J)V	b	tick
	m	(Lakq;Lbjg;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lcbh;J)V	c	stop
	f	F	c	speedModifier
	f	I	d	TICKS_UNTIL_TIMEOUT
c	blq	net/minecraft/world/entity/ai/behavior/GoToTargetLocation
	m	(Lasc;)I	a	getRandomOffset
		p	0		random
	m	(Lbji;Lgw;)Lgw;	a	getNearbyPos
		p	0		mob
		p	1		pos
	m	(Lboj$b;IFLbok;Lbok;Lbok;Lbok;)Lbom;	a	lambda$create$1
		p	3		pos
		p	4		attackTarget
		p	5		walkTarget
		p	6		lookTarget
	m	(Lboj$b;Lbok;IFLakq;Lbji;J)Z	a	lambda$create$0
		p	4		world
		p	5		entity
		p	6		time
	m	(Lbsh;IF)Lbmh;	a	create
		p	0		posModule
		p	1		completionRange
		p	2		speed
	m	(Lbsh;IFLboj$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
		p	3		context
c	blr	net/minecraft/world/entity/ai/behavior/GoToWantedItem
	m	(FZI)Lbky;	a	create
		p	0		speed
		p	1		requiresWalkTarget
		p	2		radius
	m	(Lbjg;)Z	a	lambda$create$0
		p	0		entity
	m	(Lboj$b;Lbok;Lbok;Ljava/util/function/Predicate;IFLbok;Lbok;Lakq;Lbjg;J)Z	a	lambda$create$1
		p	8		world
		p	9		entity
		p	10		time
	m	(Lboj$b;Ljava/util/function/Predicate;IFLbok;Lbok;Lbok;Lbok;)Lbom;	a	lambda$create$2
		p	4		lookTarget
		p	5		walkTarget
		p	6		nearestVisibleWantedItem
		p	7		itemPickupCooldownTicks
	m	(Ljava/util/function/Predicate;FZI)Lbky;	a	create
		p	0		startCondition
		p	1		speed
		p	2		requiresWalkTarget
		p	3		radius
	m	(ZLjava/util/function/Predicate;IFLboj$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$3
		p	4		context
c	bls	net/minecraft/world/entity/ai/behavior/HarvestFarmland
	m	(Lakq;)Lgw;	a	getValidFarmland
		p	1		world
	m	(Lakq;Lbjg;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lakq;Lbjg;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lcbh;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lakq;Lcbh;J)V	a	start
	m	(Lgw;Lakq;)Z	a	validPos
		p	1		pos
		p	2		world
	m	(Lakq;Lbjg;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lcbh;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbjg;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lcbh;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbjg;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lcbh;J)Z	d	canStillUse
	f	F	c	SPEED_MODIFIER
	f	I	d	HARVEST_DURATION
	f	Lgw;	e	aboveFarmlandPos
	f	J	f	nextOkStartTime
	f	I	g	timeWorkedSoFar
	f	Ljava/util/List;	h	validFarmlandAroundVillager
c	blt	net/minecraft/world/entity/ai/behavior/InsideBrownianWalk
	m	(F)Lbky;	a	create
		p	0		speed
	m	(FLboj$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$6
		p	1		context
	m	(FLbok;)Lbom;	a	lambda$create$5
		p	1		walkTarget
	m	(Lakq;Lbjp;Lgw;)Z	a	lambda$create$2
		p	2		pos
	m	(Lakq;Lgw;)Z	a	lambda$create$0
		p	1		pos
	m	(Lbok;FLakq;Lbjp;J)Z	a	lambda$create$4
		p	2		world
		p	3		entity
		p	4		time
	m	(Lbok;FLgw;)V	a	lambda$create$3
		p	2		pos
	m	(Lakq;Lbjp;Lgw;)Z	b	lambda$create$1
		p	2		pos
c	blu	net/minecraft/world/entity/ai/behavior/InteractWith
	m	(Lbiu;ILbsh;FI)Lbky;	a	of
		p	0		type
		p	1		maxDistance
		p	2		targetModule
		p	3		speed
		p	4		completionRange
	m	(Lbiu;ILjava/util/function/Predicate;Ljava/util/function/Predicate;Lbsh;FI)Lbky;	a	of
		p	0		type
		p	1		maxDistance
		p	2		entityPredicate
		p	3		targetPredicate
		p	4		targetModule
		p	5		speed
		p	6		completionRange
	m	(Lbiu;Ljava/util/function/Predicate;Lbjg;)Z	a	lambda$of$2
		p	2		entity
	m	(Lbjg;)Z	a	lambda$of$1
		p	0		entity
	m	(Lbjg;ILjava/util/function/Predicate;Lbjg;)Z	a	lambda$of$3
		p	3		target
	m	(Lboj$b;Lbok;Ljava/util/function/Predicate;Ljava/util/function/Predicate;ILbok;Lbok;Lbok;FILakq;Lbjg;J)Z	a	lambda$of$5
		p	10		world
		p	11		entity
		p	12		time
	m	(Lboj$b;Ljava/util/function/Predicate;Ljava/util/function/Predicate;IFILbok;Lbok;Lbok;Lbok;)Lbom;	a	lambda$of$6
		p	6		targetValue
		p	7		lookTarget
		p	8		walkTarget
		p	9		visibleMobs
	m	(Lbok;Lbok;Lbok;FILbjg;)V	a	lambda$of$4
		p	5		target
	m	(Lbsh;Ljava/util/function/Predicate;Ljava/util/function/Predicate;IFILboj$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$of$7
		p	6		context
	m	(Lbjg;)Z	b	lambda$of$0
		p	0		entity
c	blv	net/minecraft/world/entity/ai/behavior/InteractWithDoor
	m	()Lbky;	a	create
	m	(Lakq;Lbjg;Leaz;Leaz;Lboj$b;Lbok;Ljava/util/Set;)V	a	lambda$create$2
		p	6		doors
	m	(Lakq;Lbjg;Leaz;Leaz;Ljava/util/Set;Ljava/util/Optional;)V	a	closeDoorsThatIHaveOpenedOrPassedThrough
		p	0		world
		p	1		entity
		p	2		lastNode
		p	3		currentNode
		p	4		doors
		p	5		otherMobs
	m	(Lakq;Lbjg;Lhd;)Z	a	isDoorTooFarAway
		p	0		world
		p	1		entity
		p	2		doorPos
	m	(Lbjg;Lbjg;)Z	a	lambda$areOtherMobsComingThroughDoor$7
		p	1		mob
	m	(Lbjg;Lgw;Ljava/util/Optional;)Z	a	areOtherMobsComingThroughDoor
		p	0		entity
		p	1		pos
		p	2		otherMobs
	m	(Lbkg;Lgw;)Z	a	isMobComingThroughDoor
		p	0		brain
		p	1		pos
	m	(Lboj$b;Lbok;Lbok;Lorg/apache/commons/lang3/mutable/MutableObject;Lorg/apache/commons/lang3/mutable/MutableInt;Lbok;Lakq;Lbjg;J)Z	a	lambda$create$3
		p	6		world
		p	7		entity
		p	8		time
	m	(Lboj$b;Lorg/apache/commons/lang3/mutable/MutableObject;Lorg/apache/commons/lang3/mutable/MutableInt;Lbok;Lbok;Lbok;)Lbom;	a	lambda$create$4
		p	3		path
		p	4		doorsToClose
		p	5		mobs
	m	(Lbok;Ljava/util/Optional;Lakq;Lgw;)Ljava/util/Optional;	a	rememberDoorToClose
		p	0		queryResult
		p	1		doors
		p	2		world
		p	3		pos
	m	(Ldfi$a;)Z	a	lambda$closeDoorsThatIHaveOpenedOrPassedThrough$6
		p	0		state
	m	(Lgw;Lbjg;)Z	a	lambda$areOtherMobsComingThroughDoor$9
		p	1		mob
	m	(Lhd;Lbok;)Ljava/util/Set;	a	lambda$rememberDoorToClose$11
	m	(Lhd;Ljava/util/Set;)Ljava/util/Set;	a	lambda$rememberDoorToClose$10
		p	1		doorSet
	m	(Lorg/apache/commons/lang3/mutable/MutableObject;Lorg/apache/commons/lang3/mutable/MutableInt;Lboj$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$5
		p	2		context
	m	(Ldfi$a;)Z	b	lambda$create$1
		p	0		state
	m	(Lgw;Lbjg;)Z	b	lambda$areOtherMobsComingThroughDoor$8
		p	1		mob
	m	(Ldfi$a;)Z	c	lambda$create$0
		p	0		state
	f	I	a	COOLDOWN_BEFORE_RERUNNING_IN_SAME_NODE
	f	D	b	SKIP_CLOSING_DOOR_IF_FURTHER_AWAY_THAN
	f	D	c	MAX_DISTANCE_TO_HOLD_DOOR_OPEN_FOR_OTHER_MOBS
c	blw	net/minecraft/world/entity/ai/behavior/JumpOnBed
	m	(F)V	<init>	<init>
		p	1		walkSpeed
	m	(J)Z	a	timedOut
		p	1		time
	m	(Lakq;Lbjg;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lakq;Lbjg;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbji;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lakq;Lbji;J)V	a	start
	m	(Lakq;Lbji;Lgw;)V	a	lambda$start$0
		p	3		pos
	m	(Lakq;Lgw;)Z	a	isBed
		p	1		world
		p	2		pos
	m	(Lbji;)Ljava/util/Optional;	a	getNearestBed
		p	1		mob
	m	(Lbji;Lgw;)V	a	startWalkingTowardsBed
		p	1		mob
		p	2		pos
	m	(Lakq;Lbjg;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbji;)Z	b	nearBed
		p	1		world
		p	2		mob
	m	(Lakq;Lbji;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbjg;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbji;)Z	c	onOrOverBed
		p	1		world
		p	2		mob
	m	(Lakq;Lbji;J)Z	c	canStillUse
	m	(Lakq;Lbjg;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbji;)Z	d	onBedSurface
		p	1		world
		p	2		mob
	m	(Lakq;Lbji;J)V	d	tick
	m	(Lakq;Lbji;)Z	e	tiredOfWalking
		p	1		world
		p	2		mob
	m	(Lakq;Lbji;)Z	f	tiredOfJumping
		p	1		world
		p	2		mob
	f	I	c	MAX_TIME_TO_REACH_BED
	f	I	d	MIN_JUMPS
	f	I	e	MAX_JUMPS
	f	I	f	COOLDOWN_BETWEEN_JUMPS
	f	F	g	speedModifier
	f	Lgw;	h	targetBed
	f	I	i	remainingTimeToReachBed
	f	I	j	remainingJumps
	f	I	k	remainingCooldownUntilNextJump
c	blx	net/minecraft/world/entity/ai/behavior/LocateHidingPlace
	m	(IFI)Lbmh;	a	create
		p	0		maxDistance
		p	1		walkSpeed
		p	2		preferredDistance
	m	(IIFLboj$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$10
		p	3		context
	m	(IILboj$b;FLbok;Lbok;Lbok;Lbok;Lbok;Lbok;Lbok;)Lbom;	a	lambda$create$9
		p	4		walkTarget
		p	5		home
		p	6		hidingPlace
		p	7		path
		p	8		lookTarget
		p	9		breedTarget
		p	10		interactionTarget
	m	(IILboj$b;Lbok;Lbok;Lbok;Lbok;Lbok;Lbok;Lbok;FLakq;Lbjg;J)Z	a	lambda$create$8
		p	11		world
		p	12		entity
		p	13		time
	m	(Lakq;Lbjg;I)Ljava/util/Optional;	a	lambda$create$5
	m	(Lbjg;ILgw;)Z	a	lambda$create$2
		p	2		pos
	m	(Lboj$b;Lbok;)Ljava/util/Optional;	a	lambda$create$6
	m	(Lbok;Lbok;Lbok;Lbok;Lbok;Lakq;Lbjg;ILbok;FLgw;)V	a	lambda$create$7
		p	10		pos
	m	(Lgw;)Z	a	lambda$create$4
		p	0		pos
	m	(Lhe;)Z	a	lambda$create$3
		p	0		poiType
	m	(Lgw;)Z	b	lambda$create$1
		p	0		pos
	m	(Lhe;)Z	b	lambda$create$0
		p	0		poiType
c	bly	net/minecraft/world/entity/ai/behavior/LongJumpMidJump
	m	(Lbgj;Lapc;)V	<init>	<init>
		p	1		cooldownRange
		p	2		sound
	m	(Lakq;Lbjg;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbji;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbjg;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbji;J)V	b	start
	m	(Lakq;Lbji;J)V	c	stop
	m	(Lakq;Lbjg;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
	f	I	c	TIME_OUT_DURATION
	f	Lbgj;	d	timeBetweenLongJumps
	f	Lapc;	e	landingSound
c	blz	net/minecraft/world/entity/ai/behavior/LongJumpToPreferredBlock
	m	(Lbgj;IIFLjava/util/function/Function;Laqh;FLjava/util/function/BiPredicate;)V	<init>	<init>
		p	1		cooldownRange
		p	2		verticalRange
		p	3		horizontalRange
		p	4		maxRange
		p	5		entityToSound
		p	6		favoredBlocks
		p	7		biasChance
		p	8		jumpToPredicate
	m	(Lakq;)Ljava/util/Optional;	a	getJumpCandidate
		p	1		world
	m	(Lakq;Lbji;J)V	a	start
	m	(Lakq;Lbjg;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
	f	Laqh;	m	preferredBlockTag
	f	F	n	preferredBlocksChance
	f	Ljava/util/List;	o	notPrefferedJumpCandidates
	f	Z	p	currentlyWantingPreferredOnes
c	bma	net/minecraft/world/entity/ai/behavior/LongJumpToRandomPos
	m	(Lbgj;IIFLjava/util/function/Function;)V	<init>	<init>
		p	1		cooldownRange
		p	2		verticalRange
		p	3		horizontalRange
		p	4		maxRange
		p	5		entityToSound
	m	(Lbgj;IIFLjava/util/function/Function;Ljava/util/function/BiPredicate;)V	<init>	<init>
		p	1		cooldownRange
		p	2		verticalRange
		p	3		horizontalRange
		p	4		maxRange
		p	5		entityToSound
		p	6		jumpToPredicate
	m	(Lakq;)Ljava/util/Optional;	a	getJumpCandidate
		p	1		world
	m	(Lakq;Lbjg;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lakq;Lbjg;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbji;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lakq;Lbji;J)V	a	start
	m	(Lakq;Lbji;Lgw;)Z	a	isAcceptableLandingPosition
		p	1		world
		p	2		entity
		p	3		pos
	m	(Lbji;Lbir;Lehn;Lehn;)Z	a	isClearTransition
		p	1		entity
		p	2		dimensions
	m	(Lbji;Lehn;)Lehn;	a	calculateOptimalJumpVector
		p	1		entity
		p	2		pos
	m	(Lbji;Lehn;I)Lehn;	a	calculateJumpVectorForAngle
		p	1		entity
		p	2		pos
		p	3		range
	m	(Lbji;Lgw;)Z	a	defaultAcceptableLandingSpot
		p	0		entity
		p	1		pos
	m	(Lgw;Lgw;)Lbma$a;	a	lambda$start$1
	m	(Lakq;Lbji;J)Z	b	canStillUse
	m	(Lgw;Lgw;)Z	b	lambda$start$0
	m	(Lakq;Lbjg;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbji;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbjg;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbji;J)V	d	pickCandidate
		p	1		world
		p	2		entity
		p	3		time
	f	I	c	FIND_JUMP_TRIES
	f	I	d	MIN_PATHFIND_DISTANCE_TO_VALID_JUMP
	f	I	e	maxLongJumpHeight
	f	I	f	maxLongJumpWidth
	f	F	g	maxJumpVelocity
	f	Ljava/util/List;	h	jumpCandidates
	f	Ljava/util/Optional;	i	initialPosition
	f	Lehn;	j	chosenJump
	f	I	k	findJumpTries
	f	J	l	prepareJumpStart
	f	I	m	PREPARE_JUMP_DURATION
	f	I	n	TIME_OUT_DURATION
	f	Ljava/util/List;	o	ALLOWED_ANGLES
	f	Lbgj;	p	timeBetweenLongJumps
	f	Ljava/util/function/Function;	q	getJumpSound
	f	Ljava/util/function/BiPredicate;	r	acceptableLandingSpot
c	bma$a	net/minecraft/world/entity/ai/behavior/LongJumpToRandomPos$PossibleJump
	m	(Lgw;I)V	<init>	<init>
		p	1		pos
		p	2		weight
	m	()Lgw;	b	getJumpTarget
	f	Lgw;	a	jumpTarget
c	bmb	net/minecraft/world/entity/ai/behavior/LookAndFollowTradingPlayerSink
	m	(F)V	<init>	<init>
		p	1		speed
	m	(J)Z	a	timedOut
		p	1		time
	m	(Lakq;Lbjg;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lakq;Lbjg;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lcbh;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lakq;Lcbh;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lcbh;)V	a	followPlayer
		p	1		villager
	m	(Lakq;Lbjg;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lcbh;J)V	b	start
	m	(Lakq;Lbjg;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lcbh;J)V	c	stop
	m	(Lakq;Lbjg;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lcbh;J)V	d	tick
	f	F	c	speedModifier
c	bmc	net/minecraft/world/entity/ai/behavior/LookAtTargetSink
	m	(II)V	<init>	<init>
		p	1		minRunTime
		p	2		maxRunTime
	m	(Lakq;Lbjg;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbji;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lbji;Lbmk;)V	a	lambda$tick$1
		p	1		lookTarget
	m	(Lakq;Lbjg;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbji;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Lbji;Lbmk;)Z	b	lambda$canStillUse$0
		p	1		lookTarget
	m	(Lakq;Lbjg;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbji;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
c	bmd	net/minecraft/world/entity/ai/behavior/MeleeAttack
	m	(I)Lbmh;	a	create
		p	0		cooldown
	m	(ILboj$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
		p	1		context
	m	(Lbji;)Z	a	isHoldingUsableProjectileWeapon
		p	0		mob
	m	(Lbji;Lcjf;)Z	a	lambda$isHoldingUsableProjectileWeapon$3
		p	1		stack
	m	(Lboj$b;ILbok;Lbok;Lbok;Lbok;)Lbom;	a	lambda$create$1
		p	2		lookTarget
		p	3		attackTarget
		p	4		attackCoolingDown
		p	5		visibleMobs
	m	(Lboj$b;Lbok;Lbok;Lbok;Lbok;ILakq;Lbji;J)Z	a	lambda$create$0
		p	6		world
		p	7		entity
		p	8		time
c	bme	net/minecraft/world/entity/ai/behavior/Mount
	m	(F)Lbky;	a	create
		p	0		speed
	m	(FLboj$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
		p	1		context
	m	(Lboj$b;FLbok;Lbok;Lbok;)Lbom;	a	lambda$create$1
		p	2		lookTarget
		p	3		walkTarget
		p	4		rideTarget
	m	(Lboj$b;Lbok;Lbok;Lbok;FLakq;Lbjg;J)Z	a	lambda$create$0
		p	5		world
		p	6		entity
		p	7		time
	f	I	a	CLOSE_ENOUGH_TO_START_RIDING_DIST
c	bmf	net/minecraft/world/entity/ai/behavior/MoveToSkySeeingSpot
	m	(F)Lbmh;	a	create
		p	0		speed
	m	(FLboj$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$3
		p	1		context
	m	(FLbok;)Lbom;	a	lambda$create$2
		p	1		walkTarget
	m	(Lakq;Lbjg;)Lehn;	a	getOutdoorPosition
		p	0		world
		p	1		entity
	m	(Lakq;Lbjg;Lgw;)Z	a	hasNoBlocksAbove
		p	0		world
		p	1		entity
		p	2		pos
	m	(Lbok;FLakq;Lbjg;J)Z	a	lambda$create$1
		p	2		world
		p	3		entity
		p	4		time
	m	(Lbok;FLehn;)V	a	lambda$create$0
		p	2		pos
c	bmg	net/minecraft/world/entity/ai/behavior/MoveToTargetSink
	m	(II)V	<init>	<init>
		p	1		minRunTime
		p	2		maxRunTime
	m	(Lakq;Lbjg;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lakq;Lbjg;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbji;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lakq;Lbji;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lbji;Lbsk;)Z	a	reachedTarget
		p	1		entity
		p	2		walkTarget
	m	(Lbji;Lbsk;J)Z	a	tryComputePath
		p	1		entity
		p	2		walkTarget
		p	3		time
	m	(Lbsk;)Z	a	isWalkTargetSpectator
		p	0		target
	m	(Lakq;Lbjg;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbji;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbjg;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbji;J)V	c	start
	m	(Lakq;Lbjg;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbji;J)V	d	tick
	f	I	c	MAX_COOLDOWN_BEFORE_RETRYING
	f	I	d	remainingCooldown
	f	Lebb;	e	path
	f	Lgw;	f	lastTargetPos
	f	F	g	speedModifier
c	bmh	net/minecraft/world/entity/ai/behavior/OneShot
	m	()Lbkx$a;	a	getStatus
	m	()Ljava/lang/String;	b	debugString
	m	(Lakq;Lbjg;J)Z	e	tryStart
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbjg;J)V	f	tickOrStop
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbjg;J)V	g	doStop
		p	1		world
		p	2		entity
		p	3		time
	f	Lbkx$a;	a	status
c	bmi	net/minecraft/world/entity/ai/behavior/PlayTagWithOtherKids
	m	()Lbky;	a	create
	m	(Lbjg;)Lbjg;	a	whoAreYouChasing
		p	0		baby
	m	(Lbjg;Lbjg;)Z	a	isFriendChasingMe
		p	0		entity
		p	1		baby
	m	(Lbjg;Ljava/lang/Integer;)Ljava/lang/Integer;	a	lambda$checkHowManyChasersEachFriendHas$6
		p	0		target
		p	1		count
	m	(Lbjp;Lbjg;)Z	a	lambda$create$0
		p	1		baby
	m	(Lboj$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$4
		p	0		context
	m	(Lboj$b;Lbok;Lbok;Lbok;Lbok;)Lbom;	a	lambda$create$3
		p	1		visibleVillagerBabies
		p	2		walkTarget
		p	3		lookTarget
		p	4		interactionTarget
	m	(Lboj$b;Lbok;Lbok;Lbok;Lbok;Lakq;Lbjp;J)Z	a	lambda$create$2
		p	5		world
		p	6		entity
		p	7		time
	m	(Lbok;Lbok;Lbok;Lbjg;)V	a	chaseKid
		p	0		interactionTarget
		p	1		lookTarget
		p	2		walkTarget
		p	3		baby
	m	(Ljava/util/List;)Ljava/util/Optional;	a	findSomeoneBeingChased
		p	0		babies
	m	(Ljava/util/Map$Entry;)Z	a	lambda$findSomeoneBeingChased$5
		p	0		entry
	m	(Ljava/util/Map;Lbjg;)V	a	lambda$checkHowManyChasersEachFriendHas$7
		p	1		baby
	m	(Lbjg;)Z	b	isChasingSomeone
		p	0		baby
	m	(Lbjg;Lbjg;)Z	b	lambda$isFriendChasingMe$8
		p	1		target
	m	(Lbok;Lbok;Lbok;Lbjg;)V	b	lambda$create$1
		p	3		baby
	m	(Ljava/util/List;)Ljava/util/Map;	b	checkHowManyChasersEachFriendHas
		p	0		babies
	f	I	a	MAX_FLEE_XZ_DIST
	f	I	b	MAX_FLEE_Y_DIST
	f	F	c	FLEE_SPEED_MODIFIER
	f	F	d	CHASE_SPEED_MODIFIER
	f	I	e	MAX_CHASERS_PER_TARGET
	f	I	f	AVERAGE_WAIT_TIME_BETWEEN_RUNS
c	bmj	net/minecraft/world/entity/ai/behavior/PoiCompetitorScan
	m	()Lbky;	a	create
	m	(Lbjg;)Lcbh;	a	lambda$create$1
		p	0		villager
	m	(Lboj$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$6
		p	0		context
	m	(Lboj$b;Lbok;Lbok;)Lbom;	a	lambda$create$5
		p	1		jobSite
		p	2		mobs
	m	(Lboj$b;Lbok;Lbok;Lakq;Lcbh;J)Z	a	lambda$create$4
		p	3		world
		p	4		entity
		p	5		time
	m	(Lboj$b;Lbok;Lcbh;Lhd;Lhe;)V	a	lambda$create$3
		p	4		poiType
	m	(Lcbh;Lbjg;)Z	a	lambda$create$0
		p	1		mob
	m	(Lcbh;Lcbh;)Lcbh;	a	selectWinner
		p	0		first
		p	1		second
	m	(Lhd;Lhe;Lcbh;)Z	a	competesForSameJobsite
		p	0		pos
		p	1		poiType
		p	2		villager
	m	(Lhe;Lcbk;)Z	a	hasMatchingProfession
		p	0		poiType
		p	1		profession
	m	(Lhd;Lhe;Lcbh;)Z	b	lambda$create$2
		p	2		villager
c	bmk	net/minecraft/world/entity/ai/behavior/PositionTracker
	m	()Lehn;	a	currentPosition
	m	(Lbjg;)Z	a	isVisibleBy
		p	1		entity
	m	()Lgw;	b	currentBlockPosition
c	bml	net/minecraft/world/entity/ai/behavior/PrepareRamNearestTarget
	m	(Ljava/util/function/ToIntFunction;IIFLbts;ILjava/util/function/Function;)V	<init>	<init>
		p	1		cooldownFactory
		p	2		minDistance
		p	3		maxDistance
		p	4		speed
		p	5		targetPredicate
		p	6		prepareTime
		p	7		soundFactory
	m	(Lakq;Lbjg;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbjp;J)V	a	start
	m	(Lbjg;Lgw;)Lbml$a;	a	lambda$chooseRamPosition$4
		p	1		start
	m	(Lbjp;Lbjg;)Ljava/util/Optional;	a	calculateRammingStartPosition
		p	1		entity
		p	2		target
	m	(Lbjp;Lbsj;)Ljava/util/Optional;	a	lambda$start$1
		p	2		mob
	m	(Lbjp;Lgw;)Z	a	isWalkableBlock
		p	1		entity
		p	2		target
	m	(Lbsp;Lgw;)Z	a	lambda$calculateRammingStartPosition$3
		p	1		start
	m	(Lgw;Lgw;)Lehn;	a	getEdgeOfBlock
		p	1		start
		p	2		end
	m	(Lakq;Lbjg;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbjp;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Lbjp;Lbjg;)V	b	chooseRamPosition
		p	1		entity
		p	2		target
	m	(Lakq;Lbjg;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbjp;J)Z	c	canStillUse
	m	(Lbjp;Lbjg;)V	c	lambda$start$2
		p	2		mob
	m	(Lakq;Lbjg;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbjp;J)V	d	tick
	m	(Lbjp;Lbjg;)Z	d	lambda$start$0
		p	2		mobx
	f	I	c	TIME_OUT_DURATION
	f	Ljava/util/function/ToIntFunction;	d	getCooldownOnFail
	f	I	e	minRamDistance
	f	I	f	maxRamDistance
	f	F	g	walkSpeed
	f	Lbts;	h	ramTargeting
	f	I	i	ramPrepareTime
	f	Ljava/util/function/Function;	j	getPrepareRamSound
	f	Ljava/util/Optional;	k	reachedRamPositionTimestamp
	f	Ljava/util/Optional;	l	ramCandidate
c	bml$a	net/minecraft/world/entity/ai/behavior/PrepareRamNearestTarget$RamCandidate
	m	(Lgw;Lgw;Lbjg;)V	<init>	<init>
		p	1		start
		p	2		end
		p	3		entity
	m	()Lgw;	a	getStartPosition
	m	()Lgw;	b	getTargetPosition
	m	()Lbjg;	c	getTarget
	f	Lgw;	a	startPosition
	f	Lgw;	b	targetPosition
	f	Lbjg;	c	target
c	bmm	net/minecraft/world/entity/ai/behavior/RamTarget
	m	(Ljava/util/function/Function;Lbts;FLjava/util/function/ToDoubleFunction;Ljava/util/function/Function;Ljava/util/function/Function;)V	<init>	<init>
		p	1		cooldownRangeFactory
		p	2		targetPredicate
		p	3		speed
		p	4		strengthMultiplierFactory
		p	5		impactSoundFactory
		p	6		hornBreakSoundFactory
	m	(Lakq;Lbjg;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lakq;Lbjg;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbwm;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lakq;Lbwm;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbwm;)V	b	finishRam
		p	1		world
		p	2		goat
	m	(Lakq;Lbwm;J)V	b	start
	m	(Lakq;Lbjg;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbwm;)Z	c	hasRammedHornBreakingBlock
		p	1		world
		p	2		goat
	m	(Lakq;Lbwm;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbjg;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
	f	I	c	TIME_OUT_DURATION
	f	F	d	RAM_SPEED_FORCE_FACTOR
	f	Ljava/util/function/Function;	e	getTimeBetweenRams
	f	Lbts;	f	ramTargeting
	f	F	g	speed
	f	Ljava/util/function/ToDoubleFunction;	h	getKnockbackForce
	f	Lehn;	i	ramDirection
	f	Ljava/util/function/Function;	j	getImpactSound
	f	Ljava/util/function/Function;	k	getHornBreakSound
c	bmn	net/minecraft/world/entity/ai/behavior/RandomLookAround
	m	(Lbgd;FFF)V	<init>	<init>
		p	1		cooldown
		p	2		maxYaw
		p	3		minPitch
		p	4		maxPitch
	m	(Lakq;Lbji;J)V	a	start
	m	(Lakq;Lbjg;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
	f	Lbgd;	c	interval
	f	F	d	maxYaw
	f	F	e	minPitch
	f	F	f	pitchRange
c	bmo	net/minecraft/world/entity/ai/behavior/RandomStroll
	m	(F)Lbmh;	a	stroll
		p	0		speed
	m	(FII)Lbky;	a	stroll
		p	0		speed
		p	1		horizontalRadius
		p	2		verticalRadius
	m	(FLehn;)Lbsk;	a	lambda$strollFlyOrSwim$7
		p	1		pos
	m	(FLjava/util/function/Function;Ljava/util/function/Predicate;)Lbmh;	a	strollFlyOrSwim
		p	0		speed
		p	1		targetGetter
		p	2		shouldRun
	m	(FZ)Lbmh;	a	stroll
		p	0		speed
		p	1		strollInsideWater
	m	(IILbjp;)Lehn;	a	lambda$stroll$3
		p	2		entity
	m	(Lbjp;)Lehn;	a	getTargetSwimPos
		p	0		entity
	m	(Lbjp;II)Lehn;	a	getTargetFlyPos
		p	0		entity
		p	1		horizontalRadius
		p	2		verticalRadius
	m	(Ljava/util/function/Predicate;Ljava/util/function/Function;FLboj$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$strollFlyOrSwim$10
		p	3		context
	m	(Ljava/util/function/Predicate;Ljava/util/function/Function;FLbok;)Lbom;	a	lambda$strollFlyOrSwim$9
		p	3		walkTarget
	m	(Ljava/util/function/Predicate;Ljava/util/function/Function;Lbok;FLakq;Lbjp;J)Z	a	lambda$strollFlyOrSwim$8
		p	4		world
		p	5		entity
		p	6		time
	m	(F)Lbky;	b	fly
		p	0		speed
	m	(Lbjp;)Z	b	lambda$fly$6
		p	0		entity
	m	(F)Lbky;	c	swim
		p	0		speed
	m	(Lbjp;)Lehn;	c	lambda$fly$5
		p	0		entity
	m	(Lbjp;)Z	d	lambda$stroll$4
		p	0		entity
	m	(Lbjp;)Z	e	lambda$stroll$2
		p	0		entity
	m	(Lbjp;)Z	f	lambda$stroll$1
		p	0		entity
	m	(Lbjp;)Lehn;	g	lambda$stroll$0
		p	0		entity
	f	I	a	MAX_XZ_DIST
	f	I	b	MAX_Y_DIST
	f	[[I	c	SWIM_XY_DISTANCE_TIERS
c	bmp	net/minecraft/world/entity/ai/behavior/ReactToBell
	m	()Lbky;	a	create
	m	(Lakq;Lbjg;J)Z	a	lambda$create$0
		p	0		world
		p	1		entity
		p	2		time
	m	(Lboj$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
		p	0		context
	m	(Lbok;)Lbom;	a	lambda$create$1
		p	0		heardBellTime
c	bmq	net/minecraft/world/entity/ai/behavior/ResetProfession
	m	()Lbky;	a	create
	m	(Lakq;Lcbh;J)Z	a	lambda$create$0
		p	0		world
		p	1		entity
		p	2		time
	m	(Lboj$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
		p	0		context
	m	(Lbok;)Lbom;	a	lambda$create$1
		p	0		jobSite
c	bmr	net/minecraft/world/entity/ai/behavior/ResetRaidStatus
	m	()Lbky;	a	create
	m	(Lakq;Lbjg;J)Z	a	lambda$create$0
		p	0		world
		p	1		entity
		p	2		time
	m	(Lboj$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$1
		p	0		context
c	bms	net/minecraft/world/entity/ai/behavior/RingBell
	m	()Lbky;	a	create
	m	(Lboj$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
		p	0		context
	m	(Lboj$b;Lbok;)Lbom;	a	lambda$create$1
		p	1		meetingPoint
	m	(Lboj$b;Lbok;Lakq;Lbjg;J)Z	a	lambda$create$0
		p	2		world
		p	3		entity
		p	4		time
	f	I	a	RING_BELL_FROM_DISTANCE
	f	F	b	BELL_RING_CHANCE
c	bmt	net/minecraft/world/entity/ai/behavior/RunOne
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		tasks
	m	(Ljava/util/Map;Ljava/util/List;)V	<init>	<init>
		p	1		requiredMemoryState
		p	2		tasks
c	bmu	net/minecraft/world/entity/ai/behavior/SetClosestHomeAsWalkTarget
	m	(F)Lbky;	a	create
		p	0		speed
	m	(Lhe;)Z	a	lambda$create$2
		p	0		poiType
	m	(Lit/unimi/dsi/fastutil/longs/Long2LongMap;Lorg/apache/commons/lang3/mutable/MutableInt;Lorg/apache/commons/lang3/mutable/MutableLong;Lgw;)Z	a	lambda$create$1
		p	3		pos
	m	(Lorg/apache/commons/lang3/mutable/MutableLong;Lit/unimi/dsi/fastutil/longs/Long2LongMap$Entry;)Z	a	lambda$create$3
		p	1		entry
	m	(Lorg/apache/commons/lang3/mutable/MutableLong;Lit/unimi/dsi/fastutil/longs/Long2LongMap;FLboj$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$6
		p	0		context
	m	(Lorg/apache/commons/lang3/mutable/MutableLong;Lit/unimi/dsi/fastutil/longs/Long2LongMap;FLbok;Lbok;)Lbom;	a	lambda$create$5
		p	3		walkTarget
		p	4		home
	m	(Lorg/apache/commons/lang3/mutable/MutableLong;Lit/unimi/dsi/fastutil/longs/Long2LongMap;Lbok;FLakq;Lbjp;J)Z	a	lambda$create$4
		p	4		world
		p	5		entity
		p	6		time
	m	(Lhe;)Z	b	lambda$create$0
		p	0		poiType
	f	I	a	CACHE_TIMEOUT
	f	I	b	BATCH_SIZE
	f	I	c	RATE
	f	I	d	OK_DISTANCE_SQR
c	bmv	net/minecraft/world/entity/ai/behavior/SetEntityLookTarget
	m	(F)Lbmh;	a	create
		p	0		maxDistance
	m	(Lbiu;F)Lbmh;	a	create
		p	0		type
		p	1		maxDistance
	m	(Lbiu;Lbjg;)Z	a	lambda$create$1
		p	1		entity
	m	(Lbjg;)Z	a	lambda$create$2
		p	0		entity
	m	(Lbjg;FLbjg;)Z	a	lambda$create$3
		p	2		target
	m	(Lbjj;F)Lbky;	a	create
		p	0		spawnGroup
		p	1		maxDistance
	m	(Lbjj;Lbjg;)Z	a	lambda$create$0
		p	1		entity
	m	(Lboj$b;Lbok;Ljava/util/function/Predicate;FLbok;Lakq;Lbjg;J)Z	a	lambda$create$4
		p	5		world
		p	6		entity
		p	7		time
	m	(Lboj$b;Ljava/util/function/Predicate;FLbok;Lbok;)Lbom;	a	lambda$create$5
		p	3		lookTarget
		p	4		visibleMobs
	m	(Ljava/util/function/Predicate;F)Lbmh;	a	create
		p	0		predicate
		p	1		maxDistance
	m	(Ljava/util/function/Predicate;FLboj$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$6
		p	2		context
c	bmw	net/minecraft/world/entity/ai/behavior/SetEntityLookTargetSometimes
	m	(FLbgj;)Lbky;	a	create
		p	0		maxDistance
		p	1		interval
	m	(FLbgj;Ljava/util/function/Predicate;)Lbky;	a	create
		p	0		maxDistance
		p	1		interval
		p	2		predicate
	m	(Lbiu;FLbgj;)Lbky;	a	create
		p	0		type
		p	1		maxDistance
		p	2		interval
	m	(Lbiu;Lbjg;)Z	a	lambda$create$1
		p	1		entity
	m	(Lbjg;)Z	a	lambda$create$0
		p	0		entity
	m	(Lbjg;FLbjg;)Z	a	lambda$create$2
		p	2		other
	m	(Lboj$b;Lbok;Ljava/util/function/Predicate;FLbmw$a;Lbok;Lakq;Lbjg;J)Z	a	lambda$create$3
		p	6		world
		p	7		entity
		p	8		time
	m	(Lboj$b;Ljava/util/function/Predicate;FLbmw$a;Lbok;Lbok;)Lbom;	a	lambda$create$4
		p	4		lookTarget
		p	5		visibleMobs
	m	(Ljava/util/function/Predicate;FLbmw$a;Lboj$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$5
		p	3		context
c	bmw$a	net/minecraft/world/entity/ai/behavior/SetEntityLookTargetSometimes$Ticker
	m	(Lbgj;)V	<init>	<init>
		p	1		interval
	m	(Lasc;)Z	a	tickDownAndCheck
		p	1		random
	f	Lbgj;	a	interval
	f	I	b	ticksUntilNextStart
c	bmx	net/minecraft/world/entity/ai/behavior/SetHiddenState
	m	(II)Lbky;	a	create
		p	0		maxHiddenSeconds
		p	1		distance
	m	(Lboj$b;Lbok;Lorg/apache/commons/lang3/mutable/MutableInt;ILbok;ILakq;Lbjg;J)Z	a	lambda$create$0
		p	6		world
		p	7		entity
		p	8		time
	m	(Lboj$b;Lorg/apache/commons/lang3/mutable/MutableInt;IILbok;Lbok;)Lbom;	a	lambda$create$1
		p	4		hidingPlace
		p	5		heardBellTime
	m	(Lorg/apache/commons/lang3/mutable/MutableInt;IILboj$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
		p	3		context
	f	I	a	HIDE_TIMEOUT
c	bmy	net/minecraft/world/entity/ai/behavior/SetLookAndInteract
	m	(ILbiu;Lboj$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$3
		p	2		context
	m	(Lbiu;I)Lbky;	a	create
		p	0		type
		p	1		maxDistance
	m	(Lbjg;ILbiu;Lbjg;)Z	a	lambda$create$0
		p	3		target
	m	(Lboj$b;ILbiu;Lbok;Lbok;Lbok;)Lbom;	a	lambda$create$2
		p	3		lookTarget
		p	4		interactionTarget
		p	5		visibleMobs
	m	(Lboj$b;Lbok;ILbiu;Lbok;Lbok;Lakq;Lbjg;J)Z	a	lambda$create$1
		p	6		world
		p	7		entity
		p	8		time
c	bmz	net/minecraft/world/entity/ai/behavior/SetRaidStatus
	m	()Lbky;	a	create
	m	(Lakq;Lbjg;J)Z	a	lambda$create$0
		p	0		world
		p	1		entity
		p	2		time
	m	(Lboj$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$1
		p	0		context
c	bna	net/minecraft/world/entity/ai/behavior/SetWalkTargetAwayFrom
	m	(Lboj$b;Lbok;ZLjava/util/function/Function;Lbok;IFLakq;Lbjp;J)Z	a	lambda$create$0
		p	7		world
		p	8		entity
		p	9		time
	m	(Lboj$b;ZLjava/util/function/Function;IFLbok;Lbok;)Lbom;	a	lambda$create$1
		p	5		walkTarget
		p	6		posSourcex
	m	(Lbsh;FIZ)Lbky;	a	pos
		p	0		posModule
		p	1		speed
		p	2		range
		p	3		requiresWalkTarget
	m	(Lbsh;FIZLjava/util/function/Function;)Lbmh;	a	create
		p	0		posSource
		p	1		speed
		p	2		range
		p	3		requiresWalkTarget
		p	4		posGetter
	m	(Lbsh;ZLjava/util/function/Function;IFLboj$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
		p	5		context
	m	(Lbsh;FIZ)Lbmh;	b	entity
		p	0		entityModule
		p	1		speed
		p	2		range
		p	3		requiresWalkTarget
c	bnb	net/minecraft/world/entity/ai/behavior/SetWalkTargetFromAttackTargetIfTargetOutOfReach
	m	(F)Lbky;	a	create
		p	0		speed
	m	(FLbjg;)Ljava/lang/Float;	a	lambda$create$0
		p	1		entity
	m	(Lboj$b;Lbok;Lbok;Lbok;Lbok;Ljava/util/function/Function;Lakq;Lbji;J)Z	a	lambda$create$1
		p	6		world
		p	7		entity
		p	8		time
	m	(Lboj$b;Ljava/util/function/Function;Lbok;Lbok;Lbok;Lbok;)Lbom;	a	lambda$create$2
		p	2		walkTarget
		p	3		lookTarget
		p	4		attackTarget
		p	5		visibleMobs
	m	(Ljava/util/function/Function;)Lbky;	a	create
		p	0		speed
	m	(Ljava/util/function/Function;Lboj$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$3
		p	1		context
	f	I	a	PROJECTILE_ATTACK_RANGE_BUFFER
c	bnc	net/minecraft/world/entity/ai/behavior/SetWalkTargetFromBlockMemory
	m	(Lboj$b;ILbsh;IFILbok;Lbok;Lbok;)Lbom;	a	lambda$create$1
		p	6		cantReachWalkTargetSince
		p	7		walkTarget
		p	8		destinationResult
	m	(Lboj$b;Lbok;Lbok;ILbsh;ILbok;FILakq;Lcbh;J)Z	a	lambda$create$0
		p	9		world
		p	10		entity
		p	11		time
	m	(Lbsh;FIII)Lbmh;	a	create
		p	0		destination
		p	1		speed
		p	2		completionRange
		p	3		maxDistance
		p	4		maxRunTime
	m	(Lbsh;IIFILboj$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
		p	5		context
c	bnd	net/minecraft/world/entity/ai/behavior/SetWalkTargetFromLookTarget
	m	(FI)Lbmh;	a	create
		p	0		speed
		p	1		completionRange
	m	(FLbjg;)Ljava/lang/Float;	a	lambda$create$1
		p	1		entity
	m	(Lbjg;)Z	a	lambda$create$0
		p	0		entity
	m	(Ljava/util/function/Predicate;Lboj$b;Ljava/util/function/Function;ILbok;Lbok;)Lbom;	a	lambda$create$3
		p	4		walkTarget
		p	5		lookTarget
	m	(Ljava/util/function/Predicate;Lbok;Lboj$b;Lbok;Ljava/util/function/Function;ILakq;Lbjg;J)Z	a	lambda$create$2
		p	6		world
		p	7		entity
		p	8		time
	m	(Ljava/util/function/Predicate;Ljava/util/function/Function;I)Lbmh;	a	create
		p	0		predicate
		p	1		speed
		p	2		completionRange
	m	(Ljava/util/function/Predicate;Ljava/util/function/Function;ILboj$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$4
		p	3		context
c	bne	net/minecraft/world/entity/ai/behavior/ShowTradesToPlayer
	m	(II)V	<init>	<init>
		p	1		minRunTime
		p	2		maxRunTime
	m	(Lakq;Lbjg;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lakq;Lbjg;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lcbh;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lakq;Lcbh;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lbjg;Lcbh;)V	a	findItemsToDisplay
		p	1		customer
		p	2		villager
	m	(Lcbh;)V	a	displayFirstItem
		p	1		villager
	m	(Lcbh;Lcjf;)V	a	displayAsHeldItem
		p	0		villager
		p	1		stack
	m	(Lcot;)Z	a	playerItemStackMatchesCostOfOffer
		p	1		offer
	m	(Lakq;Lbjg;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lcbh;J)V	b	start
	m	(Lcbh;)V	b	updateDisplayItems
		p	1		villager
	m	(Lakq;Lbjg;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lcbh;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Lcbh;)V	c	clearHeldItem
		p	0		villager
	m	(Lakq;Lbjg;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lcbh;J)V	d	stop
	m	(Lcbh;)Lbjg;	d	lookAtTarget
		p	1		villager
	m	(Lcbh;)V	e	displayCyclingItems
		p	1		villager
	f	I	c	MAX_LOOK_TIME
	f	I	d	STARTING_LOOK_TIME
	f	Lcjf;	e	playerItemStack
	f	Ljava/util/List;	f	displayItems
	f	I	g	cycleCounter
	f	I	h	displayIndex
	f	I	i	lookTime
c	bnf	net/minecraft/world/entity/ai/behavior/ShufflingList
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		list
	m	()Lbnf;	a	shuffle
	m	(Lbnf$a;)V	a	lambda$shuffle$1
		p	1		entry
	m	(Lbnf;)Ljava/util/List;	a	lambda$codec$0
		p	0		weightedList
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	codec
		p	0		codec
	m	(Ljava/lang/Object;I)Lbnf;	a	add
		p	1		data
		p	2		weight
	m	()Ljava/util/stream/Stream;	b	stream
	f	Ljava/util/List;	a	entries
	f	Lasc;	b	random
c	bnf$a	net/minecraft/world/entity/ai/behavior/ShufflingList$WeightedEntry
	m	(Ljava/lang/Object;I)V	<init>	<init>
		p	1		data
		p	2		weight
	m	()Ljava/lang/Object;	a	getData
	m	(F)V	a	setRandom
		p	1		random
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	codec
		p	0		codec
	m	()I	b	getWeight
	m	()D	c	getRandWeight
	f	Ljava/lang/Object;	a	data
	f	I	b	weight
	f	D	c	randWeight
c	bnf$a$1	net/minecraft/world/entity/ai/behavior/ShufflingList$WeightedEntry$1
	m	(Lbnf$a;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	encode
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/Object;)Lbnf$a;	a	lambda$decode$0
		p	1		data
	m	(Lcom/mojang/serialization/DynamicOps;Lbnf$a;)Lcom/mojang/datafixers/util/Pair;	a	lambda$decode$1
		p	1		entry
	f	Lcom/mojang/serialization/Codec;	a	val$elementCodec
c	bng	net/minecraft/world/entity/ai/behavior/SleepInBed
	m	(J)Z	a	timedOut
		p	1		time
	m	(Lakq;Lbjg;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lakq;Lbjg;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbjg;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbjg;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
	f	I	c	COOLDOWN_AFTER_BEING_WOKEN
	f	J	d	nextOkStartTime
c	bnh	net/minecraft/world/entity/ai/behavior/SocializeAtBell
	m	()Lbmh;	a	create
	m	(Lbjg;)Z	a	lambda$create$0
		p	0		target
	m	(Lbjg;Lbjg;)Z	a	lambda$create$1
		p	1		target
	m	(Lboj$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$5
		p	0		context
	m	(Lboj$b;Lbok;Lbok;Lbok;Lbok;Lbok;)Lbom;	a	lambda$create$4
		p	1		walkTarget
		p	2		lookTarget
		p	3		meetingPoint
		p	4		visibleMobs
		p	5		interactionTarget
	m	(Lboj$b;Lbok;Lbok;Lbok;Lbok;Lbok;Lakq;Lbjg;J)Z	a	lambda$create$3
		p	6		world
		p	7		entity
		p	8		time
	m	(Lbok;Lbok;Lbok;Lbjg;)V	a	lambda$create$2
		p	3		target
	f	F	a	SPEED_MODIFIER
c	bni	net/minecraft/world/entity/ai/behavior/StartAttacking
	m	(Lbji;)Z	a	lambda$create$0
		p	0		entity
	m	(Ljava/util/function/Function;)Lbky;	a	create
		p	0		targetGetter
	m	(Ljava/util/function/Predicate;Ljava/util/function/Function;)Lbky;	a	create
		p	0		startCondition
		p	1		targetGetter
	m	(Ljava/util/function/Predicate;Ljava/util/function/Function;Lboj$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$3
		p	2		context
	m	(Ljava/util/function/Predicate;Ljava/util/function/Function;Lbok;Lbok;)Lbom;	a	lambda$create$2
		p	2		attackTarget
		p	3		cantReachWalkTargetSince
	m	(Ljava/util/function/Predicate;Ljava/util/function/Function;Lbok;Lbok;Lakq;Lbji;J)Z	a	lambda$create$1
		p	4		world
		p	5		entity
		p	6		time
c	bnj	net/minecraft/world/entity/ai/behavior/StartCelebratingIfTargetDead
	m	(ILjava/util/function/BiPredicate;)Lbky;	a	create
		p	0		celebrationDuration
		p	1		predicate
	m	(Lboj$b;Lbok;Ljava/util/function/BiPredicate;Lbok;ILbok;Lbok;Lakq;Lbjg;J)Z	a	lambda$create$0
		p	7		world
		p	8		entity
		p	9		time
	m	(Lboj$b;Ljava/util/function/BiPredicate;ILbok;Lbok;Lbok;Lbok;)Lbom;	a	lambda$create$1
		p	3		attackTarget
		p	4		angryAt
		p	5		celebrateLocation
		p	6		dancing
	m	(Ljava/util/function/BiPredicate;ILboj$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
		p	2		context
c	bnk	net/minecraft/world/entity/ai/behavior/StayCloseToTarget
	m	(Ljava/util/function/Function;Ljava/util/function/Predicate;IFILboj$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
		p	5		context
	m	(Ljava/util/function/Function;Ljava/util/function/Predicate;IFILbok;Lbok;)Lbom;	a	lambda$create$1
		p	5		lookTarget
		p	6		walkTarget
	m	(Ljava/util/function/Function;Ljava/util/function/Predicate;IIF)Lbky;	a	create
		p	0		lookTargetFunction
		p	1		predicate
		p	2		completionRange
		p	3		searchRange
		p	4		speed
	m	(Ljava/util/function/Function;Ljava/util/function/Predicate;ILbok;Lbok;FILakq;Lbjg;J)Z	a	lambda$create$0
		p	7		world
		p	8		entity
		p	9		time
c	bnl	net/minecraft/world/entity/ai/behavior/StopAttackingIfTargetInvalid
	m	()Lbky;	a	create
	m	(Lbjg;)Z	a	lambda$create$2
		p	0		entity
	m	(Lbjg;Ljava/util/Optional;)Z	a	isTiredOfTryingToReachTarget
	m	(Lbji;Lbjg;)V	a	lambda$create$3
		p	0		entity
		p	1		target
	m	(Lboj$b;Lbok;ZLbok;Ljava/util/function/Predicate;Ljava/util/function/BiConsumer;Lakq;Lbji;J)Z	a	lambda$create$4
		p	6		world
		p	7		entity
		p	8		time
	m	(Lboj$b;ZLjava/util/function/Predicate;Ljava/util/function/BiConsumer;Lbok;Lbok;)Lbom;	a	lambda$create$5
		p	4		attackTarget
		p	5		cantReachWalkTargetSince
	m	(Ljava/util/function/BiConsumer;)Lbky;	a	create
		p	0		forgetCallback
	m	(Ljava/util/function/Predicate;)Lbky;	a	create
		p	0		alternativeCondition
	m	(Ljava/util/function/Predicate;Ljava/util/function/BiConsumer;Z)Lbky;	a	create
		p	0		alternativeCondition
		p	1		forgetCallback
		p	2		shouldForgetIfTargetUnreachable
	m	(ZLjava/util/function/Predicate;Ljava/util/function/BiConsumer;Lboj$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$6
		p	3		context
	m	(Lbjg;)Z	b	lambda$create$0
		p	0		entity
	m	(Lbji;Lbjg;)V	b	lambda$create$1
		p	0		entity
		p	1		target
	f	I	a	TIMEOUT_TO_GET_WITHIN_ATTACK_RANGE
c	bnm	net/minecraft/world/entity/ai/behavior/StopBeingAngryIfTargetDead
	m	()Lbky;	a	create
	m	(Lakq;Lbjg;)Z	a	lambda$create$1
		p	1		target
	m	(Lbiq;)Lbjg;	a	lambda$create$0
		p	0		target
	m	(Lboj$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$5
		p	0		context
	m	(Lboj$b;Lbok;)Lbom;	a	lambda$create$4
		p	1		angryAt
	m	(Lboj$b;Lbok;Lakq;Lbjg;J)Z	a	lambda$create$3
		p	2		world
		p	3		entity
		p	4		time
	m	(Lbok;Lbjg;)V	a	lambda$create$2
		p	1		target
c	bnn	net/minecraft/world/entity/ai/behavior/StrollAroundPoi
	m	(FLehn;)Lbsk;	a	lambda$create$0
		p	1		targetPos
	m	(Lboj$b;ILorg/apache/commons/lang3/mutable/MutableLong;FLbok;Lbok;)Lbom;	a	lambda$create$2
		p	4		walkTarget
		p	5		pos
	m	(Lboj$b;Lbok;ILorg/apache/commons/lang3/mutable/MutableLong;Lbok;FLakq;Lbjp;J)Z	a	lambda$create$1
		p	6		world
		p	7		entity
		p	8		time
	m	(Lbsh;FI)Lbmh;	a	create
		p	0		posModule
		p	1		walkSpeed
		p	2		maxDistance
	m	(Lbsh;ILorg/apache/commons/lang3/mutable/MutableLong;FLboj$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$3
		p	4		context
	f	I	a	MIN_TIME_BETWEEN_STROLLS
	f	I	b	STROLL_MAX_XZ_DIST
	f	I	c	STROLL_MAX_Y_DIST
c	bno	net/minecraft/world/entity/ai/behavior/StrollToPoi
	m	(Lboj$b;ILorg/apache/commons/lang3/mutable/MutableLong;FILbok;Lbok;)Lbom;	a	lambda$create$1
		p	5		walkTarget
		p	6		pos
	m	(Lboj$b;Lbok;ILorg/apache/commons/lang3/mutable/MutableLong;Lbok;FILakq;Lbjp;J)Z	a	lambda$create$0
		p	7		world
		p	8		entity
		p	9		time
	m	(Lbsh;FII)Lbky;	a	create
		p	0		posModule
		p	1		walkSpeed
		p	2		completionRange
		p	3		maxDistance
	m	(Lbsh;ILorg/apache/commons/lang3/mutable/MutableLong;FILboj$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
		p	5		context
c	bnp	net/minecraft/world/entity/ai/behavior/StrollToPoiList
	m	(Lboj$b;ILorg/apache/commons/lang3/mutable/MutableLong;FILbok;Lbok;Lbok;)Lbom;	a	lambda$create$1
		p	5		walkTarget
		p	6		secondary
		p	7		primary
	m	(Lboj$b;Lbok;Lbok;ILorg/apache/commons/lang3/mutable/MutableLong;Lbok;FILakq;Lcbh;J)Z	a	lambda$create$0
		p	8		world
		p	9		entity
		p	10		time
	m	(Lbsh;FIILbsh;)Lbky;	a	create
		p	0		secondaryPositions
		p	1		speed
		p	2		completionRange
		p	3		primaryPositionActivationDistance
		p	4		primaryPosition
	m	(Lbsh;Lbsh;ILorg/apache/commons/lang3/mutable/MutableLong;FILboj$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
		p	6		context
c	bnq	net/minecraft/world/entity/ai/behavior/Swim
	m	(F)V	<init>	<init>
		p	1		chance
	m	(Lakq;Lbjg;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lakq;Lbjg;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbji;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lakq;Lbji;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbji;J)V	b	tick
	m	(Lakq;Lbjg;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	f	F	c	chance
c	bnr	net/minecraft/world/entity/ai/behavior/TradeWithVillager
	m	(Lakq;Lbjg;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lakq;Lbjg;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lcbh;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lakq;Lcbh;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lcbh;Lcbh;)Ljava/util/Set;	a	figureOutWhatIAmWillingToTrade
		p	0		entity
		p	1		target
	m	(Lcbh;Ljava/util/Set;Lbjg;)V	a	throwHalfStack
		p	0		villager
		p	1		validItems
		p	2		target
	m	(Lcom/google/common/collect/ImmutableSet;Lcja;)Z	a	lambda$figureOutWhatIAmWillingToTrade$0
		p	1		item
	m	(Lakq;Lbjg;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lcbh;J)V	b	start
	m	(Lakq;Lbjg;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lcbh;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbjg;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lcbh;J)V	d	stop
	f	I	c	INTERACT_DIST_SQR
	f	F	d	SPEED_MODIFIER
	f	Ljava/util/Set;	e	trades
c	bns	net/minecraft/world/entity/ai/behavior/TriggerGate
	m	(Lbll$a;Lbnf;Lbll$b;Lakq;Lbjg;J)Z	a	lambda$triggerGate$1
		p	3		world
		p	4		entity
		p	5		time
	m	(Lbll$a;Lbnf;Lbll$b;Lboj$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$triggerGate$2
		p	3		context
	m	(Lbnf;Lcom/mojang/datafixers/util/Pair;)V	a	lambda$triggerGate$0
		p	1		task
	m	(Ljava/util/List;)Lbmh;	a	triggerOneShuffled
		p	0		weightedTasks
	m	(Ljava/util/List;Lbll$a;Lbll$b;)Lbmh;	a	triggerGate
		p	0		weightedTasks
		p	1		order
		p	2		runMode
c	bnt	net/minecraft/world/entity/ai/behavior/TryFindLand
	m	(IF)Lbky;	a	create
		p	0		range
		p	1		speed
	m	(Lorg/apache/commons/lang3/mutable/MutableLong;IFLboj$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
		p	3		context
	m	(Lorg/apache/commons/lang3/mutable/MutableLong;IFLbok;Lbok;Lbok;)Lbom;	a	lambda$create$1
		p	3		attackTarget
		p	4		walkTarget
		p	5		lookTarget
	m	(Lorg/apache/commons/lang3/mutable/MutableLong;ILbok;Lbok;FLakq;Lbjp;J)Z	a	lambda$create$0
		p	5		world
		p	6		entity
		p	7		time
	f	I	a	COOLDOWN_TICKS
c	bnu	net/minecraft/world/entity/ai/behavior/TryFindLandNearWater
	m	(IF)Lbky;	a	create
		p	0		range
		p	1		speed
	m	(Lorg/apache/commons/lang3/mutable/MutableLong;IFLboj$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
		p	3		context
	m	(Lorg/apache/commons/lang3/mutable/MutableLong;IFLbok;Lbok;Lbok;)Lbom;	a	lambda$create$1
		p	3		attackTarget
		p	4		walkTarget
		p	5		lookTarget
	m	(Lorg/apache/commons/lang3/mutable/MutableLong;ILbok;Lbok;FLakq;Lbjp;J)Z	a	lambda$create$0
		p	5		world
		p	6		entity
		p	7		time
c	bnv	net/minecraft/world/entity/ai/behavior/TryFindWater
	m	(IF)Lbky;	a	create
		p	0		range
		p	1		speed
	m	(Lorg/apache/commons/lang3/mutable/MutableLong;IFLboj$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
		p	3		context
	m	(Lorg/apache/commons/lang3/mutable/MutableLong;IFLbok;Lbok;Lbok;)Lbom;	a	lambda$create$1
		p	3		attackTarget
		p	4		walkTarget
		p	5		lookTarget
	m	(Lorg/apache/commons/lang3/mutable/MutableLong;ILbok;Lbok;FLakq;Lbjp;J)Z	a	lambda$create$0
		p	5		world
		p	6		entity
		p	7		time
c	bnw	net/minecraft/world/entity/ai/behavior/TryLaySpawnOnWaterNearLand
	m	(Lcsv;)Lbky;	a	create
		p	0		frogSpawn
	m	(Lcsv;Lboj$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
		p	1		context
	m	(Lcsv;Lbok;Lakq;Lbjg;J)Z	a	lambda$create$0
		p	2		world
		p	3		entity
		p	4		time
	m	(Lcsv;Lbok;Lbok;Lbok;)Lbom;	a	lambda$create$1
		p	1		attackTarget
		p	2		walkTarget
		p	3		isPregnant
c	bnx	net/minecraft/world/entity/ai/behavior/UpdateActivityFromSchedule
	m	()Lbky;	a	create
	m	(Lakq;Lbjg;J)Z	a	lambda$create$0
		p	0		world
		p	1		entity
		p	2		time
	m	(Lboj$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$1
		p	0		context
c	bny	net/minecraft/world/entity/ai/behavior/UseBonemeal
	m	(Lakq;Lbjg;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lakq;Lbjg;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lcbh;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lakq;Lcbh;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lcbh;)V	a	setCurrentCropAsTarget
		p	1		villager
	m	(Lcbh;Lgw;)V	a	lambda$setCurrentCropAsTarget$0
		p	1		pos
	m	(Lgw;Lakq;)Z	a	validPos
		p	1		pos
		p	2		world
	m	(Lakq;Lbjg;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lcbh;)Ljava/util/Optional;	b	pickNextTarget
		p	1		world
		p	2		entity
	m	(Lakq;Lcbh;J)V	b	start
	m	(Lakq;Lbjg;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lcbh;J)V	c	stop
	m	(Lakq;Lbjg;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lcbh;J)V	d	tick
	f	I	c	BONEMEALING_DURATION
	f	J	d	nextWorkCycleTime
	f	J	e	lastBonemealingSession
	f	I	f	timeWorkedSoFar
	f	Ljava/util/Optional;	g	cropPos
c	bnz	net/minecraft/world/entity/ai/behavior/ValidateNearbyPoi
	m	(Lakq;Lgw;Lbjg;)Z	a	bedIsOccupied
		p	0		world
		p	1		pos
		p	2		entity
	m	(Lboj$b;Lbok;Ljava/util/function/Predicate;Lakq;Lbjg;J)Z	a	lambda$create$0
		p	3		world
		p	4		entity
		p	5		time
	m	(Lboj$b;Ljava/util/function/Predicate;Lbok;)Lbom;	a	lambda$create$1
		p	2		poiPos
	m	(Lbsh;Ljava/util/function/Predicate;Lboj$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
		p	2		context
	m	(Ljava/util/function/Predicate;Lbsh;)Lbky;	a	create
		p	0		poiTypePredicate
		p	1		poiPosModule
	f	I	a	MAX_DISTANCE
c	boa	net/minecraft/world/entity/ai/behavior/VillageBoundRandomStroll
	m	(F)Lbmh;	a	create
		p	0		walkSpeed
	m	(FII)Lbmh;	a	create
		p	0		walkSpeed
		p	1		horizontalRange
		p	2		verticalRange
	m	(FLehn;)Lbsk;	a	lambda$create$0
		p	1		pos
	m	(IIFLboj$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$3
		p	3		context
	m	(IIFLbok;)Lbom;	a	lambda$create$2
		p	3		walkTarget
	m	(IILbok;FLakq;Lbjp;J)Z	a	lambda$create$1
		p	4		world
		p	5		entity
		p	6		time
	f	I	a	MAX_XZ_DIST
	f	I	b	MAX_Y_DIST
c	bob	net/minecraft/world/entity/ai/behavior/VillagerCalmDown
	m	()Lbky;	a	create
	m	(Lbjg;Lbjg;)Z	a	lambda$create$0
		p	1		hurtByx
	m	(Lboj$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$3
		p	0		context
	m	(Lboj$b;Lbok;Lbok;Lbok;)Lbom;	a	lambda$create$2
		p	1		hurtBy
		p	2		hurtByEntity
		p	3		nearestHostile
	m	(Lboj$b;Lbok;Lbok;Lbok;Lakq;Lbjg;J)Z	a	lambda$create$1
		p	4		world
		p	5		entity
		p	6		time
	f	I	a	SAFE_DISTANCE_FROM_DANGER
c	boc	net/minecraft/world/entity/ai/behavior/VillagerGoalPackages
	m	()Lcom/mojang/datafixers/util/Pair;	a	getFullLookBehavior
	m	(F)Lcom/google/common/collect/ImmutableList;	a	getPlayPackage
		p	0		speed
	m	(Lakq;Lbjg;)Z	a	raidExistsAndActive
		p	0		world
		p	1		entity
	m	(Lcbk;F)Lcom/google/common/collect/ImmutableList;	a	getCorePackage
		p	0		profession
		p	1		speed
	m	(Lhe;)Z	a	lambda$getMeetPackage$3
		p	0		poiType
	m	()Lcom/mojang/datafixers/util/Pair;	b	getMinimalLookBehavior
	m	(Lakq;Lbjg;)Z	b	raidExistsAndNotVictory
		p	0		world
		p	1		entity
	m	(Lcbk;F)Lcom/google/common/collect/ImmutableList;	b	getWorkPackage
		p	0		profession
		p	1		speed
	m	(Lhe;)Z	b	lambda$getRestPackage$2
		p	0		poiType
	m	(Lcbk;F)Lcom/google/common/collect/ImmutableList;	c	getRestPackage
		p	0		profession
		p	1		speed
	m	(Lhe;)Z	c	lambda$getCorePackage$1
		p	0		poiType
	m	(Lcbk;F)Lcom/google/common/collect/ImmutableList;	d	getMeetPackage
		p	0		profession
		p	1		speed
	m	(Lhe;)Z	d	lambda$getCorePackage$0
		p	0		poiType
	m	(Lcbk;F)Lcom/google/common/collect/ImmutableList;	e	getIdlePackage
		p	0		profession
		p	1		speed
	m	(Lcbk;F)Lcom/google/common/collect/ImmutableList;	f	getPanicPackage
		p	0		profession
		p	1		speed
	m	(Lcbk;F)Lcom/google/common/collect/ImmutableList;	g	getPreRaidPackage
		p	0		profession
		p	1		speed
	m	(Lcbk;F)Lcom/google/common/collect/ImmutableList;	h	getRaidPackage
		p	0		profession
		p	1		speed
	m	(Lcbk;F)Lcom/google/common/collect/ImmutableList;	i	getHidePackage
		p	0		profession
		p	1		speed
	f	F	a	STROLL_SPEED_MODIFIER
c	bod	net/minecraft/world/entity/ai/behavior/VillagerMakeLove
	m	(Lakq;Lbjg;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lakq;Lbjg;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lcbh;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lakq;Lcbh;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lcbh;Lcbh;)V	a	tryToGiveBirth
		p	1		world
		p	2		first
		p	3		second
	m	(Lakq;Lcbh;Lgw;)V	a	giveBedToChild
		p	1		world
		p	2		child
		p	3		pos
	m	(Lbil;)Z	a	lambda$isBreedingPossible$0
	m	(Lcbh;)Z	a	isBreedingPossible
		p	1		villager
	m	(Lcbh;Lgw;Lhe;)Z	a	canReach
		p	1		villager
		p	2		pos
		p	3		poiType
	m	(Lcbh;Lhe;Lgw;)Z	a	lambda$takeVacantBed$2
		p	2		poiType
		p	3		pos
	m	(Lhe;)Z	a	lambda$takeVacantBed$1
		p	0		poiType
	m	(Lakq;Lbjg;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lcbh;)Ljava/util/Optional;	b	takeVacantBed
		p	1		world
		p	2		villager
	m	(Lakq;Lcbh;J)V	b	start
	m	(Lakq;Lcbh;Lcbh;)Ljava/util/Optional;	b	breed
		p	1		world
		p	2		parent
		p	3		partner
	m	(Lakq;Lbjg;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lcbh;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbjg;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lcbh;J)V	d	stop
	f	I	c	INTERACT_DIST_SQR
	f	F	d	SPEED_MODIFIER
	f	J	e	birthTimestamp
c	boe	net/minecraft/world/entity/ai/behavior/VillagerPanicTrigger
	m	(Lakq;Lbjg;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lcbh;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lcbh;J)V	b	start
	m	(Lbjg;)Z	b	hasHostile
		p	0		entity
	m	(Lakq;Lbjg;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lcbh;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Lbjg;)Z	c	isHurt
		p	0		entity
	m	(Lakq;Lbjg;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
c	bof	net/minecraft/world/entity/ai/behavior/WakeUp
	m	()Lbky;	a	create
	m	(Lakq;Lbjg;J)Z	a	lambda$create$0
		p	0		world
		p	1		entity
		p	2		time
	m	(Lboj$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$1
		p	0		context
c	bog	net/minecraft/world/entity/ai/behavior/WorkAtComposter
	m	(Lakq;Lcbh;)V	a	useWorkstation
		p	1		world
		p	2		entity
	m	(Lakq;Lcbh;Lhd;Ldfj;)V	a	compostItems
		p	1		world
		p	2		entity
		p	3		pos
		p	4		composterState
	m	(Lakq;Ldfj;Lgw;Ldfj;)V	a	spawnComposterFillEffects
		p	1		world
		p	2		oldState
		p	3		pos
		p	4		newState
	m	(Lcbh;)V	a	makeBread
		p	1		entity
	f	Ljava/util/List;	c	COMPOSTABLE_ITEMS
c	boh	net/minecraft/world/entity/ai/behavior/WorkAtPoi
	m	(Lakq;Lbjg;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lakq;Lbjg;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lcbh;)V	a	useWorkstation
		p	1		world
		p	2		entity
	m	(Lakq;Lcbh;J)V	a	start
	m	(Lbkg;Lhd;)V	a	lambda$start$0
		p	1		pos
	m	(Lakq;Lcbh;)Z	b	checkExtraStartConditions
	m	(Lakq;Lcbh;J)Z	b	canStillUse
	m	(Lakq;Lbjg;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
	f	I	c	CHECK_COOLDOWN
	f	D	d	DISTANCE
	f	J	e	lastCheck
c	boi	net/minecraft/world/entity/ai/behavior/YieldJobSite
	m	(F)Lbky;	a	create
		p	0		speed
	m	(FLboj$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$6
		p	1		context
	m	(Lbjg;)Lcbh;	a	lambda$create$1
		p	0		villager
	m	(Lbjp;Lgw;Lbui;)Z	a	canReachPos
		p	0		entity
		p	1		pos
		p	2		poiType
	m	(Lboj$b;FLbok;Lbok;Lbok;Lbok;Lbok;)Lbom;	a	lambda$create$5
		p	2		potentialJobSite
		p	3		jobSite
		p	4		mobs
		p	5		walkTarget
		p	6		lookTarget
	m	(Lboj$b;Lbok;Lbok;Lbok;Lbok;FLakq;Lcbh;J)Z	a	lambda$create$4
		p	6		world
		p	7		entity
		p	8		time
	m	(Lbok;Lbok;Lbok;Lgw;FLakq;Lcbh;)V	a	lambda$create$3
		p	6		villager
	m	(Lcbh;Lbjg;)Z	a	lambda$create$0
		p	1		mob
	m	(Lhe;Lcbh;Lgw;)Z	a	nearbyWantsJobsite
		p	0		poiType
		p	1		villager
		p	2		pos
	m	(Ljava/util/Optional;Lgw;Lcbh;)Z	a	lambda$create$2
		p	2		villager
c	boj	net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder
	m	(Lboj$e;)V	<init>	<init>
		p	1		function
	m	()Lboj$b;	a	instance
	m	(Lboj$e;)Lboj;	a	create
		p	0		function
	m	(Lbom;Lbom;)Lbmh;	a	sequence
		p	0		predicate
		p	1		task
	m	(Lbom;Lbom;Lboj$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$sequence$1
		p	2		context
	m	(Lbom;Lcom/mojang/datafixers/util/Unit;)Lbom;	a	lambda$sequence$0
		p	1		unit
	m	(Lcom/mojang/datafixers/kinds/App;)Lboj;	a	unbox
		p	0		app
	m	(Ljava/util/function/BiPredicate;)Lbmh;	a	triggerIf
		p	0		predicate
	m	(Ljava/util/function/BiPredicate;Lakq;Lbjg;J)Z	a	lambda$triggerIf$4
		p	1		world
		p	2		entity
		p	3		time
	m	(Ljava/util/function/BiPredicate;Lboj$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$triggerIf$5
		p	1		context
	m	(Ljava/util/function/Function;)Lbmh;	a	create
		p	0		creator
	m	(Ljava/util/function/Predicate;)Lbmh;	a	triggerIf
		p	0		predicate
	m	(Ljava/util/function/Predicate;Lakq;Lbjg;J)Z	a	lambda$triggerIf$2
		p	1		world
		p	2		entity
		p	3		time
	m	(Ljava/util/function/Predicate;Lbmh;)Lbmh;	a	triggerIf
		p	0		predicate
		p	1		task
	m	(Ljava/util/function/Predicate;Lboj$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$triggerIf$3
		p	1		context
	m	(Lcom/mojang/datafixers/kinds/App;)Lboj$e;	b	get
		p	0		app
	f	Lboj$e;	a	trigger
c	boj$1	net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$1
	m	()Ljava/lang/String;	b	debugString
	m	(Lakq;Lbjg;J)Z	trigger	trigger
		p	1		world
		p	2		entity
		p	3		time
	f	Lboj$e;	a	val$resolvedBuilder
c	boj$a	net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$Constant
	m	(Ljava/lang/Object;)V	<init>	<init>
		p	1		value
	m	(Ljava/lang/Object;Ljava/util/function/Supplier;)V	<init>	<init>
		p	1		value
		p	2		nameSupplier
	m	(Ljava/lang/Object;)Ljava/lang/String;	a	lambda$new$0
c	boj$a$1	net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$Constant$1
	m	()Ljava/lang/String;	a	debugString
	m	(Lakq;Lbjg;J)Ljava/lang/Object;	a	tryTrigger
		p	1		world
		p	2		entity
		p	3		time
	f	Ljava/lang/Object;	a	val$a
	f	Ljava/util/function/Supplier;	b	val$debugString
c	boj$b	net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$Instance
	m	(Lbok;)Ljava/util/Optional;	a	tryGet
		p	1		result
	m	(Lbom;)Lboj;	a	ifTriggered
		p	1		runnable
	m	(Lbsh;)Lboj;	a	registered
		p	1		type
	m	(Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;)Lcom/mojang/datafixers/kinds/App;	a	lambda$lift1$0
		p	2		app2
	m	(Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;)Lboj;	a	ap2
	m	(Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;)Lboj;	a	ap3
	m	(Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;)Lboj;	a	ap4
	m	(Ljava/lang/Object;)Lboj;	a	point
	m	(Ljava/util/function/Function;Lcom/mojang/datafixers/kinds/App;)Lboj;	a	map
	m	(Ljava/util/function/Supplier;Ljava/lang/Object;)Lboj;	a	point
		p	1		nameSupplier
		p	2		value
	m	(Lbok;)Ljava/lang/Object;	b	get
		p	1		result
	m	(Lbsh;)Lboj;	b	present
		p	1		type
	m	(Lbsh;)Lboj;	c	absent
		p	1		type
c	boj$b$1	net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$Instance$1
	m	()Ljava/lang/String;	a	debugString
	m	(Lakq;Lbjg;J)Ljava/lang/Object;	a	tryTrigger
		p	1		world
		p	2		entity
		p	3		time
	f	Lboj$e;	a	val$aTrigger
	f	Lboj$e;	b	val$fTrigger
	f	Lboj$b;	c	this$0
c	boj$b$2	net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$Instance$2
	m	()Ljava/lang/String;	a	debugString
	m	(Lakq;Lbjg;J)Ljava/lang/Object;	a	tryTrigger
		p	1		world
		p	2		entity
		p	3		time
	f	Lboj$e;	a	val$tTrigger
	f	Ljava/util/function/Function;	b	val$func
	f	Lboj$b;	c	this$0
c	boj$b$3	net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$Instance$3
	m	()Ljava/lang/String;	a	debugString
	m	(Lakq;Lbjg;J)Ljava/lang/Object;	a	tryTrigger
		p	1		world
		p	2		entity
		p	3		time
	f	Lboj$e;	a	val$aTrigger
	f	Lboj$e;	b	val$bTrigger
	f	Lboj$e;	c	val$fTrigger
	f	Lboj$b;	d	this$0
c	boj$b$4	net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$Instance$4
	m	()Ljava/lang/String;	a	debugString
	m	(Lakq;Lbjg;J)Ljava/lang/Object;	a	tryTrigger
		p	1		world
		p	2		entity
		p	3		time
	f	Lboj$e;	a	val$t1Trigger
	f	Lboj$e;	b	val$t2Trigger
	f	Lboj$e;	c	val$t3Trigger
	f	Lboj$e;	d	val$fTrigger
	f	Lboj$b;	e	this$0
c	boj$b$5	net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$Instance$5
	m	()Ljava/lang/String;	a	debugString
	m	(Lakq;Lbjg;J)Ljava/lang/Object;	a	tryTrigger
		p	1		world
		p	2		entity
		p	3		time
	f	Lboj$e;	a	val$t1Trigger
	f	Lboj$e;	b	val$t2Trigger
	f	Lboj$e;	c	val$t3Trigger
	f	Lboj$e;	d	val$t4Trigger
	f	Lboj$e;	e	val$fTrigger
	f	Lboj$b;	f	this$0
c	boj$b$a	net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$Instance$Mu
c	boj$c	net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$Mu
c	boj$d	net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$PureMemory
	m	(Lbol;)V	<init>	<init>
		p	1		query
c	boj$d$1	net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$PureMemory$1
	m	()Ljava/lang/String;	a	debugString
	m	(Lakq;Lbjg;J)Ljava/lang/Object;	a	tryTrigger
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbjg;J)Lbok;	b	tryTrigger
	f	Lbol;	a	val$condition
c	boj$e	net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$TriggerWithResult
	m	()Ljava/lang/String;	a	debugString
	m	(Lakq;Lbjg;J)Ljava/lang/Object;	a	tryTrigger
		p	1		world
		p	2		entity
		p	3		time
c	boj$f	net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$TriggerWrapper
	m	(Lbom;)V	<init>	<init>
		p	1		taskRunnable
c	boj$f$1	net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$TriggerWrapper$1
	m	()Ljava/lang/String;	a	debugString
	m	(Lakq;Lbjg;J)Ljava/lang/Object;	a	tryTrigger
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbjg;J)Lcom/mojang/datafixers/util/Unit;	b	tryTrigger
	f	Lbom;	a	val$dependentTrigger
c	bok	net/minecraft/world/entity/ai/behavior/declarative/MemoryAccessor
	m	(Lbkg;Lbsh;Lcom/mojang/datafixers/kinds/App;)V	<init>	<init>
		p	1		brain
		p	2		memory
		p	3		value
	m	()Lcom/mojang/datafixers/kinds/App;	a	value
	m	(Ljava/lang/Object;)V	a	set
		p	1		value
	m	(Ljava/lang/Object;J)V	a	setWithExpiry
		p	1		value
		p	2		expiry
	m	(Ljava/util/Optional;)V	a	setOrErase
		p	1		value
	m	()V	b	erase
	f	Lbkg;	a	brain
	f	Lbsh;	b	memoryType
	f	Lcom/mojang/datafixers/kinds/App;	c	value
c	bol	net/minecraft/world/entity/ai/behavior/declarative/MemoryCondition
	m	()Lbsh;	a	memory
	m	(Lbkg;Ljava/util/Optional;)Lbok;	a	createAccessor
		p	1		brain
		p	2		value
	m	()Lbsi;	b	condition
c	bol$a	net/minecraft/world/entity/ai/behavior/declarative/MemoryCondition$Absent
	m	()Lbsh;	a	memory
	m	(Lbkg;Ljava/util/Optional;)Lbok;	a	createAccessor
		p	1		brain
		p	2		value
	m	()Lbsi;	b	condition
	f	Lbsh;	a	memory
c	bol$b	net/minecraft/world/entity/ai/behavior/declarative/MemoryCondition$Present
	m	()Lbsh;	a	memory
	m	(Lbkg;Ljava/util/Optional;)Lbok;	a	createAccessor
		p	1		brain
		p	2		value
	m	()Lbsi;	b	condition
	f	Lbsh;	a	memory
c	bol$c	net/minecraft/world/entity/ai/behavior/declarative/MemoryCondition$Registered
	m	()Lbsh;	a	memory
	m	(Lbkg;Ljava/util/Optional;)Lbok;	a	createAccessor
		p	1		brain
		p	2		value
	m	()Lbsi;	b	condition
	f	Lbsh;	a	memory
c	bom	net/minecraft/world/entity/ai/behavior/declarative/Trigger
	m	(Lakq;Lbjg;J)Z	trigger	trigger
		p	1		world
		p	2		entity
		p	3		time
c	bon	net/minecraft/world/entity/ai/behavior/declarative/package-info
c	boo	net/minecraft/world/entity/ai/behavior/package-info
c	bop	net/minecraft/world/entity/ai/behavior/warden/Digging
	m	(I)V	<init>	<init>
		p	1		duration
	m	(Lakq;Lbjg;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lakq;Lbjg;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lcay;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lakq;Lcay;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbjg;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lcay;J)V	b	start
	m	(Lakq;Lcay;J)V	c	stop
	m	(Lakq;Lbjg;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
c	boq	net/minecraft/world/entity/ai/behavior/warden/Emerging
	m	(I)V	<init>	<init>
		p	1		duration
	m	(Lakq;Lbjg;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lcay;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbjg;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lcay;J)V	b	start
	m	(Lakq;Lcay;J)V	c	stop
	m	(Lakq;Lbjg;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
c	bor	net/minecraft/world/entity/ai/behavior/warden/ForceUnmount
	m	(Lakq;Lbjg;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lakq;Lbjg;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
c	bos	net/minecraft/world/entity/ai/behavior/warden/Roar
	m	(Lakq;Lbjg;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lcay;J)V	a	start
	m	(Lakq;Lbjg;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lcay;J)Z	b	canStillUse
	m	(Lakq;Lbjg;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lcay;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbjg;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lcay;J)V	d	stop
	f	I	c	TICKS_BEFORE_PLAYING_ROAR_SOUND
	f	I	d	ROAR_ANGER_INCREASE
c	bot	net/minecraft/world/entity/ai/behavior/warden/SetRoarTarget
	m	(Ljava/util/function/Function;)Lbky;	a	create
		p	0		targetFinder
	m	(Ljava/util/function/Function;Lboj$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
		p	1		context
	m	(Ljava/util/function/Function;Lbok;Lbok;Lakq;Lcay;J)Z	a	lambda$create$0
		p	3		world
		p	4		entity
		p	5		time
	m	(Ljava/util/function/Function;Lbok;Lbok;Lbok;)Lbom;	a	lambda$create$1
		p	1		roarTarget
		p	2		attackTarget
		p	3		cantReachWalkTargetSince
c	bou	net/minecraft/world/entity/ai/behavior/warden/SetWardenLookTarget
	m	()Lbky;	a	create
	m	(Lboj$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$3
		p	0		context
	m	(Lboj$b;Lbok;)Ljava/util/Optional;	a	lambda$create$0
	m	(Lboj$b;Lbok;Lbok;Lbok;Lakq;Lbjg;J)Z	a	lambda$create$1
		p	4		world
		p	5		entity
		p	6		time
	m	(Lboj$b;Lbok;Lbok;Lbok;Lbok;)Lbom;	a	lambda$create$2
		p	1		lookTarget
		p	2		disturbanceLocation
		p	3		roarTarget
		p	4		attackTarget
c	bov	net/minecraft/world/entity/ai/behavior/warden/Sniffing
	m	(I)V	<init>	<init>
		p	1		runTime
	m	(Lakq;Lbjg;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lcay;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lcay;Lbjg;)V	a	lambda$stop$0
		p	1		target
	m	(Lakq;Lbjg;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lcay;J)V	b	start
	m	(Lakq;Lcay;J)V	c	stop
	m	(Lakq;Lbjg;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
	f	D	c	ANGER_FROM_SNIFFING_MAX_DISTANCE_XZ
	f	D	d	ANGER_FROM_SNIFFING_MAX_DISTANCE_Y
c	bow	net/minecraft/world/entity/ai/behavior/warden/SonicBoom
	m	(Lakq;Lbjg;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lakq;Lbjg;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lcay;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lakq;Lcay;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lbjg;I)V	a	setCooldown
		p	0		warden
		p	1		cooldown
	m	(Lcay;Lakq;Lbjg;)V	a	lambda$tick$2
		p	2		target
	m	(Lcay;Lbjg;)Z	a	lambda$tick$1
		p	1		target
	m	(Lakq;Lbjg;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lcay;J)V	b	start
	m	(Lcay;Lbjg;)V	b	lambda$tick$0
		p	1		target
	m	(Lakq;Lbjg;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lcay;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbjg;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lcay;J)V	d	stop
	f	I	c	COOLDOWN
	f	I	d	DISTANCE_XZ
	f	I	e	DISTANCE_Y
	f	D	f	KNOCKBACK_VERTICAL
	f	D	g	KNOCKBACK_HORIZONTAL
	f	I	h	TICKS_BEFORE_PLAYING_SOUND
	f	I	i	DURATION
c	box	net/minecraft/world/entity/ai/behavior/warden/TryToSniff
	m	()Lbky;	a	create
	m	(Lboj$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
		p	0		context
	m	(Lbok;Lbok;Lbok;Lakq;Lbjg;J)Z	a	lambda$create$0
		p	3		world
		p	4		entity
		p	5		time
	m	(Lbok;Lbok;Lbok;Lbok;Lbok;)Lbom;	a	lambda$create$1
		p	0		isSniffing
		p	1		walkTarget
		p	2		sniffCooldown
		p	3		nearestAttackable
		p	4		disturbanceLocation
	f	Lbgd;	a	SNIFF_COOLDOWN
c	boy	net/minecraft/world/entity/ai/behavior/warden/package-info
c	boz	net/minecraft/world/entity/ai/control/BodyRotationControl
	m	(Lbji;)V	<init>	<init>
		p	1		entity
	m	()V	a	clientTick
	m	()V	b	rotateBodyIfNecessary
	m	()V	c	rotateHeadIfNecessary
	m	()V	d	rotateHeadTowardsFront
	m	()Z	e	notCarryingMobPassengers
	m	()Z	f	isMoving
	f	Lbji;	a	mob
	f	I	b	HEAD_STABLE_ANGLE
	f	I	c	DELAY_UNTIL_STARTING_TO_FACE_FORWARD
	f	I	d	HOW_LONG_IT_TAKES_TO_FACE_FORWARD
	f	I	e	headStableTime
	f	F	f	lastStableYHeadRot
c	bpa	net/minecraft/world/entity/ai/control/Control
c	bpb	net/minecraft/world/entity/ai/control/FlyingMoveControl
	m	(Lbji;IZ)V	<init>	<init>
		p	1		entity
		p	2		maxPitchChange
		p	3		noGravity
	m	()V	a	tick
	f	I	l	maxTurn
	f	Z	m	hoversInPlace
c	bpc	net/minecraft/world/entity/ai/control/JumpControl
	m	(Lbji;)V	<init>	<init>
		p	1		entity
	m	()V	a	jump
	m	()V	b	tick
	f	Z	a	jump
	f	Lbji;	b	mob
c	bpd	net/minecraft/world/entity/ai/control/LookControl
	m	(Lbji;)V	<init>	<init>
		p	1		entity
	m	()V	a	tick
	m	(DDD)V	a	setLookAt
		p	1		x
		p	3		y
		p	5		z
	m	(DDDFF)V	a	setLookAt
		p	1		x
		p	3		y
		p	5		z
		p	7		maxYawChange
		p	8		maxPitchChange
	m	(FFF)F	a	rotateTowards
		p	1		from
		p	2		to
		p	3		max
	m	(Lbiq;)V	a	setLookAt
		p	1		entity
	m	(Lbiq;FF)V	a	setLookAt
		p	1		entity
		p	2		maxYawChange
		p	3		maxPitchChange
	m	(Lehn;)V	a	setLookAt
		p	1		direction
	m	(Ljava/lang/Float;)V	a	lambda$tick$1
		p	1		pitch
	m	()V	b	clampHeadRotationToBody
	m	(Lbiq;)D	b	getWantedY
		p	0		entity
	m	(Ljava/lang/Float;)V	b	lambda$tick$0
		p	1		yaw
	m	()Z	c	resetXRotOnTick
	m	()Z	d	isLookingAtTarget
	m	()D	e	getWantedX
	m	()D	f	getWantedY
	m	()D	g	getWantedZ
	m	()Ljava/util/Optional;	h	getXRotD
	m	()Ljava/util/Optional;	i	getYRotD
	f	Lbji;	a	mob
	f	F	b	yMaxRotSpeed
	f	F	c	xMaxRotAngle
	f	I	d	lookAtCooldown
	f	D	e	wantedX
	f	D	f	wantedY
	f	D	g	wantedZ
c	bpe	net/minecraft/world/entity/ai/control/MoveControl
	m	(Lbji;)V	<init>	<init>
		p	1		entity
	m	()V	a	tick
	m	(DDDD)V	a	setWantedPosition
		p	1		x
		p	3		y
		p	5		z
		p	7		speed
	m	(FF)V	a	strafe
		p	1		forward
		p	2		sideways
	m	(FFF)F	a	rotlerp
		p	1		from
		p	2		to
		p	3		max
	m	()Z	b	hasWanted
	m	(FF)Z	b	isWalkable
		p	1		x
		p	2		z
	m	()D	c	getSpeedModifier
	m	()D	d	getWantedX
	m	()D	e	getWantedY
	m	()D	f	getWantedZ
	f	F	a	MIN_SPEED
	f	F	b	MIN_SPEED_SQR
	f	I	c	MAX_TURN
	f	Lbji;	d	mob
	f	D	e	wantedX
	f	D	f	wantedY
	f	D	g	wantedZ
	f	D	h	speedModifier
	f	F	i	strafeForwards
	f	F	j	strafeRight
	f	Lbpe$a;	k	operation
c	bpe$a	net/minecraft/world/entity/ai/control/MoveControl$Operation
	m	()[Lbpe$a;	a	$values
	f	Lbpe$a;	a	WAIT
	f	Lbpe$a;	b	MOVE_TO
	f	Lbpe$a;	c	STRAFE
	f	Lbpe$a;	d	JUMPING
	f	[Lbpe$a;	e	$VALUES
c	bpf	net/minecraft/world/entity/ai/control/SmoothSwimmingLookControl
	m	(Lbji;I)V	<init>	<init>
		p	1		entity
		p	2		yawAdjustThreshold
	m	()V	a	tick
	m	(Ljava/lang/Float;)V	a	lambda$tick$1
		p	1		pitch
	m	(Ljava/lang/Float;)V	b	lambda$tick$0
		p	1		yaw
	f	I	h	maxYRotFromCenter
	f	I	i	HEAD_TILT_X
	f	I	j	HEAD_TILT_Y
c	bpg	net/minecraft/world/entity/ai/control/SmoothSwimmingMoveControl
	m	(Lbji;IIFFZ)V	<init>	<init>
		p	1		entity
		p	2		pitchChange
		p	3		yawChange
		p	4		speedInWater
		p	5		speedInAir
		p	6		buoyant
	m	()V	a	tick
	m	(F)F	a	getTurningSpeedFactor
	f	F	l	FULL_SPEED_TURN_THRESHOLD
	f	F	m	STOP_TURN_THRESHOLD
	f	I	n	maxTurnX
	f	I	o	maxTurnY
	f	F	p	inWaterSpeedModifier
	f	F	q	outsideWaterSpeedModifier
	f	Z	r	applyGravity
c	bph	net/minecraft/world/entity/ai/control/package-info
c	bpi	net/minecraft/world/entity/ai/goal/AvoidEntityGoal
	m	(Lbjp;Ljava/lang/Class;FDD)V	<init>	<init>
		p	1		mob
		p	2		fleeFromType
		p	3		distance
		p	4		slowSpeed
		p	6		fastSpeed
	m	(Lbjp;Ljava/lang/Class;FDDLjava/util/function/Predicate;)V	<init>	<init>
		p	1		fleeingEntity
		p	2		classToFleeFrom
		p	3		fleeDistance
		p	4		fleeSlowSpeed
		p	6		fleeFastSpeed
		p	8		inclusionSelector
	m	(Lbjp;Ljava/lang/Class;Ljava/util/function/Predicate;FDDLjava/util/function/Predicate;)V	<init>	<init>
		p	1		mob
		p	2		fleeFromType
		p	3		extraInclusionSelector
		p	4		distance
		p	5		slowSpeed
		p	7		fastSpeed
		p	9		inclusionSelector
	m	()Z	a	canUse
	m	(Lbjg;)Z	a	lambda$canUse$2
	m	()Z	b	canContinueToUse
	m	(Lbjg;)Z	b	lambda$new$1
	m	()V	c	start
	m	(Lbjg;)Z	c	lambda$new$0
	m	()V	d	stop
	m	()V	e	tick
	f	Lbjp;	a	mob
	f	Lbjg;	b	toAvoid
	f	F	c	maxDist
	f	Lebb;	d	path
	f	Lbsp;	e	pathNav
	f	Ljava/lang/Class;	f	avoidClass
	f	Ljava/util/function/Predicate;	g	avoidPredicate
	f	Ljava/util/function/Predicate;	h	predicateOnAvoidEntity
	f	D	i	walkSpeedModifier
	f	D	j	sprintSpeedModifier
	f	Lbts;	k	avoidEntityTargeting
c	bpj	net/minecraft/world/entity/ai/goal/BegGoal
	m	(Lbvu;F)V	<init>	<init>
		p	1		wolf
		p	2		begDistance
	m	()Z	a	canUse
	m	(Lcbu;)Z	a	playerHoldingInteresting
		p	1		player
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lbvu;	a	wolf
	f	Lcbu;	b	player
	f	Lcpv;	c	level
	f	F	d	lookDistance
	f	I	e	lookTime
	f	Lbts;	f	begTargeting
c	bpk	net/minecraft/world/entity/ai/goal/BoatGoals
	m	()[Lbpk;	a	$values
	f	Lbpk;	a	GO_TO_BOAT
	f	Lbpk;	b	GO_IN_BOAT_DIRECTION
	f	[Lbpk;	c	$VALUES
c	bpl	net/minecraft/world/entity/ai/goal/BreakDoorGoal
	m	(Lbji;ILjava/util/function/Predicate;)V	<init>	<init>
		p	1		mob
		p	2		maxProgress
		p	3		difficultySufficientPredicate
	m	(Lbji;Ljava/util/function/Predicate;)V	<init>	<init>
		p	1		mob
		p	2		difficultySufficientPredicate
	m	()Z	a	canUse
	m	(Lbgv;)Z	a	isValidDifficulty
		p	1		difficulty
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	m	()I	f	getDoorBreakTime
	f	I	a	breakTime
	f	I	b	lastBreakProgress
	f	I	c	doorBreakTime
	f	I	g	DEFAULT_DOOR_BREAK_TIME
	f	Ljava/util/function/Predicate;	h	validDifficulties
c	bpm	net/minecraft/world/entity/ai/goal/BreathAirGoal
	m	(Lbjp;)V	<init>	<init>
		p	1		mob
	m	()Z	P_	isInterruptable
	m	()Z	a	canUse
	m	(Lcpy;Lgw;)Z	a	givesAir
		p	1		world
		p	2		pos
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	e	tick
	m	()V	h	findAirPosition
	f	Lbjp;	a	mob
c	bpn	net/minecraft/world/entity/ai/goal/BreedGoal
	m	(Lbur;D)V	<init>	<init>
		p	1		animal
		p	2		speed
	m	(Lbur;DLjava/lang/Class;)V	<init>	<init>
		p	1		animal
		p	2		speed
		p	4		entityClass
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	d	stop
	m	()V	e	tick
	m	()V	g	breed
	m	()Lbur;	h	getFreePartner
	f	Lbur;	a	animal
	f	Lcpv;	b	level
	f	Lbur;	c	partner
	f	Lbts;	d	PARTNER_TARGETING
	f	Ljava/lang/Class;	e	partnerClass
	f	I	f	loveTime
	f	D	g	speedModifier
c	bpo	net/minecraft/world/entity/ai/goal/CatLieOnBedGoal
	m	(Lbuu;DI)V	<init>	<init>
		p	1		cat
		p	2		speed
		p	4		range
	m	()Z	a	canUse
	m	(Lbjp;)I	a	nextStartTick
		p	1		mob
	m	(Lcpy;Lgw;)Z	a	isValidTarget
		p	1		world
		p	2		pos
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lbuu;	g	cat
c	bpp	net/minecraft/world/entity/ai/goal/CatSitOnBlockGoal
	m	(Lbuu;D)V	<init>	<init>
		p	1		cat
		p	2		speed
	m	()Z	a	canUse
	m	(Lcpy;Lgw;)Z	a	isValidTarget
		p	1		world
		p	2		pos
	m	(Ldfi$a;)Z	a	lambda$isValidTarget$1
		p	0		state
	m	(Ldfw;)Ljava/lang/Boolean;	a	lambda$isValidTarget$0
		p	0		part
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lbuu;	g	cat
c	bpq	net/minecraft/world/entity/ai/goal/ClimbOnTopOfPowderSnowGoal
	m	(Lbji;Lcpv;)V	<init>	<init>
		p	1		entity
		p	2		world
	m	()Z	Q_	requiresUpdateEveryTick
	m	()Z	a	canUse
	m	()V	e	tick
	f	Lbji;	a	mob
	f	Lcpv;	b	level
c	bpr	net/minecraft/world/entity/ai/goal/DolphinJumpGoal
	m	(Lbuz;I)V	<init>	<init>
		p	1		dolphin
		p	2		chance
	m	()Z	P_	isInterruptable
	m	()Z	a	canUse
	m	(Lgw;III)Z	a	waterIsClear
		p	1		pos
		p	2		offsetX
		p	3		offsetZ
		p	4		multiplier
	m	()Z	b	canContinueToUse
	m	(Lgw;III)Z	b	surfaceIsClear
		p	1		pos
		p	2		offsetX
		p	3		offsetZ
		p	4		multiplier
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	[I	a	STEPS_TO_CHECK
	f	Lbuz;	b	dolphin
	f	I	c	interval
	f	Z	d	breached
c	bps	net/minecraft/world/entity/ai/goal/DoorInteractGoal
	m	(Lbji;)V	<init>	<init>
		p	1		mob
	m	()Z	Q_	requiresUpdateEveryTick
	m	()Z	a	canUse
	m	(Z)V	a	setOpen
		p	1		open
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	e	tick
	m	()Z	h	isOpen
	f	Z	a	passed
	f	F	b	doorOpenDirX
	f	F	c	doorOpenDirZ
	f	Lbji;	d	mob
	f	Lgw;	e	doorPos
	f	Z	f	hasDoor
c	bpt	net/minecraft/world/entity/ai/goal/EatBlockGoal
	m	(Lbji;)V	<init>	<init>
		p	1		mob
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	m	()I	h	getEatAnimationTick
	f	I	a	EAT_ANIMATION_TICKS
	f	Ljava/util/function/Predicate;	b	IS_TALL_GRASS
	f	Lbji;	c	mob
	f	Lcpv;	d	level
	f	I	e	eatAnimationTick
c	bpu	net/minecraft/world/entity/ai/goal/FleeSunGoal
	m	(Lbjp;D)V	<init>	<init>
		p	1		mob
		p	2		speed
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()Z	h	setWantedPos
	m	()Lehn;	i	getHidePos
	f	Lbjp;	a	mob
	f	D	b	wantedX
	f	D	c	wantedY
	f	D	d	wantedZ
	f	D	e	speedModifier
	f	Lcpv;	f	level
c	bpv	net/minecraft/world/entity/ai/goal/FloatGoal
	m	(Lbji;)V	<init>	<init>
		p	1		mob
	m	()Z	Q_	requiresUpdateEveryTick
	m	()Z	a	canUse
	m	()V	e	tick
	f	Lbji;	a	mob
c	bpw	net/minecraft/world/entity/ai/goal/FollowBoatGoal
	m	(Lbjp;)V	<init>	<init>
		p	1		mob
	m	()Z	P_	isInterruptable
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	I	a	timeToRecalcPath
	f	Lbjp;	b	mob
	f	Lcbu;	c	following
	f	Lbpk;	d	currentGoal
c	bpx	net/minecraft/world/entity/ai/goal/FollowFlockLeaderGoal
	m	(Lbuq;)V	<init>	<init>
		p	1		fish
	m	()Z	a	canUse
	m	(Lbuq;)I	a	nextStartTick
		p	1		fish
	m	()Z	b	canContinueToUse
	m	(Lbuq;)Z	b	lambda$canUse$1
		p	0		fish
	m	()V	c	start
	m	(Lbuq;)Z	c	lambda$canUse$0
		p	0		fish
	m	()V	d	stop
	m	()V	e	tick
	f	I	a	INTERVAL_TICKS
	f	Lbuq;	b	mob
	f	I	c	timeToRecalcPath
	f	I	d	nextStartTick
c	bpy	net/minecraft/world/entity/ai/goal/FollowMobGoal
	m	(Lbji;DFF)V	<init>	<init>
		p	1		mob
		p	2		speed
		p	4		minDistance
		p	5		maxDistance
	m	()Z	a	canUse
	m	(Lbji;Lbji;)Z	a	lambda$new$0
		p	1		target
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lbji;	a	mob
	f	Ljava/util/function/Predicate;	b	followPredicate
	f	Lbji;	c	followingMob
	f	D	d	speedModifier
	f	Lbsp;	e	navigation
	f	I	f	timeToRecalcPath
	f	F	g	stopDistance
	f	F	h	oldWaterCost
	f	F	i	areaSize
c	bpz	net/minecraft/world/entity/ai/goal/FollowOwnerGoal
	m	(Lbkb;DFFZ)V	<init>	<init>
		p	1		tameable
		p	2		speed
		p	4		minDistance
		p	5		maxDistance
		p	6		leavesAllowed
	m	()Z	a	canUse
	m	(II)I	a	randomIntInclusive
		p	1		min
		p	2		max
	m	(III)Z	a	maybeTeleportTo
		p	1		x
		p	2		y
		p	3		z
	m	(Lgw;)Z	a	canTeleportTo
		p	1		pos
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	m	()Z	h	unableToMove
	m	()V	i	teleportToOwner
	f	I	a	TELEPORT_WHEN_DISTANCE_IS
	f	I	b	MIN_HORIZONTAL_DISTANCE_FROM_PLAYER_WHEN_TELEPORTING
	f	I	c	MAX_HORIZONTAL_DISTANCE_FROM_PLAYER_WHEN_TELEPORTING
	f	I	d	MAX_VERTICAL_DISTANCE_FROM_PLAYER_WHEN_TELEPORTING
	f	Lbkb;	e	tamable
	f	Lbjg;	f	owner
	f	Lcpy;	g	level
	f	D	h	speedModifier
	f	Lbsp;	i	navigation
	f	I	j	timeToRecalcPath
	f	F	k	stopDistance
	f	F	l	startDistance
	f	F	m	oldWaterCost
	f	Z	n	canFly
c	bqa	net/minecraft/world/entity/ai/goal/FollowParentGoal
	m	(Lbur;D)V	<init>	<init>
		p	1		animal
		p	2		speed
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	I	a	HORIZONTAL_SCAN_RANGE
	f	I	b	VERTICAL_SCAN_RANGE
	f	I	c	DONT_FOLLOW_IF_CLOSER_THAN
	f	Lbur;	d	animal
	f	Lbur;	e	parent
	f	D	f	speedModifier
	f	I	g	timeToRecalcPath
c	bqb	net/minecraft/world/entity/ai/goal/Goal
	m	()Z	P_	isInterruptable
	m	()Z	Q_	requiresUpdateEveryTick
	m	()Z	a	canUse
	m	(I)I	a	adjustedTickDelay
		p	1		ticks
	m	(Ljava/util/EnumSet;)V	a	setFlags
		p	1		controls
	m	()Z	b	canContinueToUse
	m	(I)I	b	reducedTickDelay
		p	0		serverTicks
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	m	()Ljava/util/EnumSet;	j	getFlags
	f	Ljava/util/EnumSet;	a	flags
c	bqb$a	net/minecraft/world/entity/ai/goal/Goal$Flag
	m	()[Lbqb$a;	a	$values
	f	Lbqb$a;	a	MOVE
	f	Lbqb$a;	b	LOOK
	f	Lbqb$a;	c	JUMP
	f	Lbqb$a;	d	TARGET
	f	[Lbqb$a;	e	$VALUES
c	bqc	net/minecraft/world/entity/ai/goal/GoalSelector
	m	(Ljava/util/function/Supplier;)V	<init>	<init>
		p	1		profiler
	m	()V	a	tick
	m	(I)V	a	setNewGoalRate
		p	1		timeInterval
	m	(ILbqb;)V	a	addGoal
		p	1		priority
		p	2		goal
	m	(Lbqb$a;)V	a	disableControlFlag
		p	1		control
	m	(Lbqb$a;Z)V	a	setControlFlag
		p	1		control
		p	2		enabled
	m	(Lbqb;)V	a	removeGoal
		p	1		goal
	m	(Lbqb;Lbrp;)Z	a	lambda$removeGoal$2
	m	(Lbrp;Ljava/util/EnumSet;)Z	a	goalContainsAnyFlags
		p	0		goal
		p	1		controls
	m	(Lbrp;Ljava/util/Map;)Z	a	goalCanBeReplacedForAllFlags
		p	0		goal
		p	1		goalsByControl
	m	(Ljava/util/function/Predicate;)V	a	removeAllGoals
		p	1		predicate
	m	(Ljava/util/function/Predicate;Lbrp;)Z	a	lambda$removeAllGoals$0
		p	1		goal
	m	(Z)V	a	tickRunningGoals
		p	1		tickAll
	m	()Ljava/util/Set;	b	getAvailableGoals
	m	(Lbqb$a;)V	b	enableControlFlag
		p	1		control
	m	(Lbqb;Lbrp;)Z	b	lambda$removeGoal$1
	m	()Ljava/util/stream/Stream;	c	getRunningGoals
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lbrp;	b	NO_GOAL
	f	Ljava/util/Map;	c	lockedFlags
	f	Ljava/util/Set;	d	availableGoals
	f	Ljava/util/function/Supplier;	e	profiler
	f	Ljava/util/EnumSet;	f	disabledFlags
	f	I	g	tickCount
	f	I	h	newGoalRate
c	bqc$1	net/minecraft/world/entity/ai/goal/GoalSelector$1
	m	()Z	a	canUse
c	bqc$2	net/minecraft/world/entity/ai/goal/GoalSelector$2
	m	(ILbqb;)V	<init>	<init>
		p	1		priority
		p	2		goal
	m	()Z	h	isRunning
c	bqd	net/minecraft/world/entity/ai/goal/GolemRandomStrollInVillageGoal
	m	(Lbjp;D)V	<init>	<init>
		p	1		entity
		p	2		speed
	m	(Lakq;Lhw;)Z	a	lambda$getRandomVillageSection$0
		p	1		sectionPos
	m	(Lcbh;)Z	a	doesVillagerWantGolem
		p	1		villager
	m	(Lhe;)Z	a	lambda$getRandomPoiWithinSection$1
	m	(Lhw;)Lgw;	a	getRandomPoiWithinSection
		p	1		pos
	m	()Lehn;	h	getPosition
	m	()Lehn;	k	getPositionTowardsAnywhere
	m	()Lehn;	l	getPositionTowardsVillagerWhoWantsGolem
	m	()Lehn;	m	getPositionTowardsPoi
	m	()Lhw;	n	getRandomVillageSection
	f	I	i	POI_SECTION_SCAN_RADIUS
	f	I	j	VILLAGER_SCAN_RADIUS
	f	I	k	RANDOM_POS_XY_DISTANCE
	f	I	l	RANDOM_POS_Y_DISTANCE
c	bqe	net/minecraft/world/entity/ai/goal/InteractGoal
	m	(Lbji;Ljava/lang/Class;F)V	<init>	<init>
		p	1		mob
		p	2		targetType
		p	3		range
	m	(Lbji;Ljava/lang/Class;FF)V	<init>	<init>
		p	1		mob
		p	2		targetType
		p	3		range
		p	4		chance
c	bqf	net/minecraft/world/entity/ai/goal/JumpGoal
c	bqg	net/minecraft/world/entity/ai/goal/LandOnOwnersShoulderGoal
	m	(Lbvo;)V	<init>	<init>
		p	1		tameable
	m	()Z	P_	isInterruptable
	m	()Z	a	canUse
	m	()V	c	start
	m	()V	e	tick
	f	Lbvo;	a	entity
	f	Lakr;	b	owner
	f	Z	c	isSittingOnShoulder
c	bqh	net/minecraft/world/entity/ai/goal/LeapAtTargetGoal
	m	(Lbji;F)V	<init>	<init>
		p	1		mob
		p	2		velocity
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	f	Lbji;	a	mob
	f	Lbjg;	b	target
	f	F	c	yd
c	bqi	net/minecraft/world/entity/ai/goal/LlamaFollowCaravanGoal
	m	(Lbwt;D)V	<init>	<init>
		p	1		llama
		p	2		speed
	m	()Z	a	canUse
	m	(Lbiq;)Z	a	lambda$canUse$0
		p	0		entity
	m	(Lbwt;I)Z	a	firstIsLeashed
		p	1		llama
		p	2		length
	m	()Z	b	canContinueToUse
	m	()V	d	stop
	m	()V	e	tick
	f	Lbwt;	a	llama
	f	D	b	speedModifier
	f	I	c	CARAVAN_LIMIT
	f	I	d	distCheckCounter
c	bqj	net/minecraft/world/entity/ai/goal/LookAtPlayerGoal
	m	(Lbji;Ljava/lang/Class;F)V	<init>	<init>
		p	1		mob
		p	2		targetType
		p	3		range
	m	(Lbji;Ljava/lang/Class;FF)V	<init>	<init>
		p	1		mob
		p	2		targetType
		p	3		range
		p	4		chance
	m	(Lbji;Ljava/lang/Class;FFZ)V	<init>	<init>
		p	1		mob
		p	2		targetType
		p	3		range
		p	4		chance
		p	5		lookForward
	m	()Z	a	canUse
	m	(Lbjg;)Z	a	lambda$canUse$1
	m	(Lbji;Lbjg;)Z	a	lambda$new$0
		p	1		entity
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	F	a	DEFAULT_PROBABILITY
	f	Lbji;	b	mob
	f	Lbiq;	c	lookAt
	f	F	d	lookDistance
	f	F	e	probability
	f	Ljava/lang/Class;	f	lookAtType
	f	Lbts;	g	lookAtContext
	f	I	h	lookTime
	f	Z	i	onlyHorizontal
c	bqk	net/minecraft/world/entity/ai/goal/LookAtTradingPlayerGoal
	m	(Lcbc;)V	<init>	<init>
		p	1		merchant
	m	()Z	a	canUse
	f	Lcbc;	h	villager
c	bql	net/minecraft/world/entity/ai/goal/MeleeAttackGoal
	m	(Lbjp;DZ)V	<init>	<init>
		p	1		mob
		p	2		speed
		p	4		pauseWhenMobIdle
	m	()Z	Q_	requiresUpdateEveryTick
	m	()Z	a	canUse
	m	(Lbjg;)V	a	checkAndPerformAttack
		p	1		target
	m	()Z	b	canContinueToUse
	m	(Lbjg;)Z	b	canPerformAttack
		p	1		target
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	m	()V	h	resetAttackCooldown
	m	()Z	i	isTimeToAttack
	m	()I	k	getTicksUntilNextAttack
	m	()I	l	getAttackInterval
	f	Lbjp;	a	mob
	f	D	b	speedModifier
	f	Z	c	followingTargetEvenIfNotSeen
	f	Lebb;	d	path
	f	D	e	pathedTargetX
	f	D	f	pathedTargetY
	f	D	g	pathedTargetZ
	f	I	h	ticksUntilNextPathRecalculation
	f	I	i	ticksUntilNextAttack
	f	I	j	attackInterval
	f	J	k	lastCanUseCheck
	f	J	l	COOLDOWN_BETWEEN_CAN_USE_CHECKS
c	bqm	net/minecraft/world/entity/ai/goal/MoveBackToVillageGoal
	m	(Lbjp;DZ)V	<init>	<init>
		p	1		entity
		p	2		speed
		p	4		canDespawn
	m	()Z	a	canUse
	m	()Lehn;	h	getPosition
	f	I	i	MAX_XZ_DIST
	f	I	j	MAX_Y_DIST
c	bqn	net/minecraft/world/entity/ai/goal/MoveThroughVillageGoal
	m	(Lbjp;DZILjava/util/function/BooleanSupplier;)V	<init>	<init>
		p	1		entity
		p	2		speed
		p	4		requiresNighttime
		p	5		distance
		p	6		doorPassingThroughGetter
	m	()Z	a	canUse
	m	(Lakq;Lgw;Lgw;)D	a	lambda$canUse$2
		p	3		pos
	m	(Lgw;)Z	a	hasNotVisited
		p	1		pos
	m	(Lgw;Lgw;)Ljava/lang/Double;	a	lambda$canUse$1
	m	(Lhe;)Z	a	lambda$canUse$3
		p	0		poiType
	m	()Z	b	canContinueToUse
	m	(Lhe;)Z	b	lambda$canUse$0
		p	0		poiType
	m	()V	c	start
	m	()V	d	stop
	m	()V	h	updateVisited
	f	Lbjp;	a	mob
	f	D	b	speedModifier
	f	Lebb;	c	path
	f	Lgw;	d	poiPos
	f	Z	e	onlyAtNight
	f	Ljava/util/List;	f	visited
	f	I	g	distanceToPoi
	f	Ljava/util/function/BooleanSupplier;	h	canDealWithDoors
c	bqo	net/minecraft/world/entity/ai/goal/MoveToBlockGoal
	m	(Lbjp;DI)V	<init>	<init>
		p	1		mob
		p	2		speed
		p	4		range
	m	(Lbjp;DII)V	<init>	<init>
		p	1		mob
		p	2		speed
		p	4		range
		p	5		maxYDifference
	m	()Z	Q_	requiresUpdateEveryTick
	m	()Z	a	canUse
	m	(Lbjp;)I	a	nextStartTick
		p	1		mob
	m	(Lcpy;Lgw;)Z	a	isValidTarget
		p	1		world
		p	2		pos
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	e	tick
	m	()V	h	moveMobToBlock
	m	()D	i	acceptedDistance
	m	()Lgw;	k	getMoveToTarget
	m	()Z	l	shouldRecalculatePath
	m	()Z	m	isReachedTarget
	m	()Z	n	findNearestBlock
	f	Lbjp;	a	mob
	f	D	b	speedModifier
	f	I	c	nextStartTick
	f	I	d	tryTicks
	f	Lgw;	e	blockPos
	f	I	f	verticalSearchStart
	f	I	g	GIVE_UP_TICKS
	f	I	h	STAY_TICKS
	f	I	i	INTERVAL_TICKS
	f	I	j	maxStayTicks
	f	Z	k	reachedTarget
	f	I	l	searchRange
	f	I	m	verticalSearchRange
c	bqp	net/minecraft/world/entity/ai/goal/MoveTowardsRestrictionGoal
	m	(Lbjp;D)V	<init>	<init>
		p	1		mob
		p	2		speed
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	f	Lbjp;	a	mob
	f	D	b	wantedX
	f	D	c	wantedY
	f	D	d	wantedZ
	f	D	e	speedModifier
c	bqq	net/minecraft/world/entity/ai/goal/MoveTowardsTargetGoal
	m	(Lbjp;DF)V	<init>	<init>
		p	1		mob
		p	2		speed
		p	4		maxDistance
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	f	Lbjp;	a	mob
	f	Lbjg;	b	target
	f	D	c	wantedX
	f	D	d	wantedY
	f	D	e	wantedZ
	f	D	f	speedModifier
	f	F	g	within
c	bqr	net/minecraft/world/entity/ai/goal/OcelotAttackGoal
	m	(Lbji;)V	<init>	<init>
		p	1		mob
	m	()Z	Q_	requiresUpdateEveryTick
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	d	stop
	m	()V	e	tick
	f	Lbji;	a	mob
	f	Lbjg;	b	target
	f	I	c	attackTime
c	bqs	net/minecraft/world/entity/ai/goal/OfferFlowerGoal
	m	(Lbvd;)V	<init>	<init>
		p	1		golem
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	I	a	OFFER_TICKS
	f	Lbts;	b	OFFER_TARGER_CONTEXT
	f	Lbvd;	c	golem
	f	Lcbh;	d	villager
	f	I	e	tick
c	bqt	net/minecraft/world/entity/ai/goal/OpenDoorGoal
	m	(Lbji;Z)V	<init>	<init>
		p	1		mob
		p	2		delayedClose
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Z	a	closeDoor
	f	I	b	forgetTime
c	bqu	net/minecraft/world/entity/ai/goal/PanicGoal
	m	(Lbjp;D)V	<init>	<init>
		p	1		mob
		p	2		speed
	m	()Z	a	canUse
	m	(Lcpb;Lbiq;I)Lgw;	a	lookForWater
		p	1		world
		p	2		entity
		p	3		rangeX
	m	(Lcpb;Lgw;)Z	a	lambda$lookForWater$0
		p	1		pos
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()Z	h	shouldPanic
	m	()Z	i	findRandomPosition
	m	()Z	k	isRunning
	f	I	a	WATER_CHECK_DISTANCE_VERTICAL
	f	Lbjp;	b	mob
	f	D	c	speedModifier
	f	D	d	posX
	f	D	e	posY
	f	D	f	posZ
	f	Z	g	isRunning
c	bqv	net/minecraft/world/entity/ai/goal/PathfindToRaidGoal
	m	(Lcdc;)V	<init>	<init>
		p	1		actor
	m	()Z	a	canUse
	m	(Lcdb;)V	a	recruitNearby
		p	1		raid
	m	(Lcdb;Lcdc;)Z	a	lambda$recruitNearby$0
		p	1		raider
	m	()Z	b	canContinueToUse
	m	()V	e	tick
	f	I	a	RECRUITMENT_SEARCH_TICK_DELAY
	f	F	b	SPEED_MODIFIER
	f	Lcdc;	c	mob
	f	I	d	recruitmentTick
c	bqw	net/minecraft/world/entity/ai/goal/RandomLookAroundGoal
	m	(Lbji;)V	<init>	<init>
		p	1		mob
	m	()Z	Q_	requiresUpdateEveryTick
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	e	tick
	f	Lbji;	a	mob
	f	D	b	relX
	f	D	c	relZ
	f	I	d	lookTime
c	bqx	net/minecraft/world/entity/ai/goal/RandomStandGoal
	m	(Lbwq;)V	<init>	<init>
		p	1		entity
	m	()Z	Q_	requiresUpdateEveryTick
	m	()Z	a	canUse
	m	(Lbwq;)V	a	resetStandInterval
		p	1		entity
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	h	playStandSound
	f	Lbwq;	a	horse
	f	I	b	nextStand
c	bqy	net/minecraft/world/entity/ai/goal/RandomStrollGoal
	m	(Lbjp;D)V	<init>	<init>
		p	1		mob
		p	2		speed
	m	(Lbjp;DI)V	<init>	<init>
		p	1		mob
		p	2		speed
		p	4		chance
	m	(Lbjp;DIZ)V	<init>	<init>
		p	1		entity
		p	2		speed
		p	4		chance
		p	5		canDespawn
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	(I)V	c	setInterval
		p	1		chance
	m	()V	d	stop
	m	()Lehn;	h	getPosition
	m	()V	i	trigger
	f	I	a	DEFAULT_INTERVAL
	f	Lbjp;	b	mob
	f	D	c	wantedX
	f	D	d	wantedY
	f	D	e	wantedZ
	f	D	f	speedModifier
	f	I	g	interval
	f	Z	h	forceTrigger
	f	Z	i	checkNoActionTime
c	bqz	net/minecraft/world/entity/ai/goal/RandomSwimmingGoal
	m	(Lbjp;DI)V	<init>	<init>
		p	1		mob
		p	2		speed
		p	4		chance
	m	()Lehn;	h	getPosition
c	bra	net/minecraft/world/entity/ai/goal/RangedAttackGoal
	m	(Lbzm;DIF)V	<init>	<init>
		p	1		mob
		p	2		mobSpeed
		p	4		intervalTicks
		p	5		maxShootRange
	m	(Lbzm;DIIF)V	<init>	<init>
		p	1		mob
		p	2		mobSpeed
		p	4		minIntervalTicks
		p	5		maxIntervalTicks
		p	6		maxShootRange
	m	()Z	Q_	requiresUpdateEveryTick
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	d	stop
	m	()V	e	tick
	f	Lbji;	a	mob
	f	Lbzm;	b	rangedAttackMob
	f	Lbjg;	c	target
	f	I	d	attackTime
	f	D	e	speedModifier
	f	I	f	seeTime
	f	I	g	attackIntervalMin
	f	I	h	attackIntervalMax
	f	F	i	attackRadius
	f	F	j	attackRadiusSqr
c	brb	net/minecraft/world/entity/ai/goal/RangedBowAttackGoal
	m	(Lbzi;DIF)V	<init>	<init>
		p	1		actor
		p	2		speed
		p	4		attackInterval
		p	5		range
	m	()Z	Q_	requiresUpdateEveryTick
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	(I)V	c	setMinAttackInterval
		p	1		attackInterval
	m	()V	d	stop
	m	()V	e	tick
	m	()Z	h	isHoldingBow
	f	Lbzi;	a	mob
	f	D	b	speedModifier
	f	I	c	attackIntervalMin
	f	F	d	attackRadiusSqr
	f	I	e	attackTime
	f	I	f	seeTime
	f	Z	g	strafingClockwise
	f	Z	h	strafingBackwards
	f	I	i	strafingTime
c	brc	net/minecraft/world/entity/ai/goal/RangedCrossbowAttackGoal
	m	(Lbzi;DF)V	<init>	<init>
		p	1		actor
		p	2		speed
		p	4		range
	m	()Z	Q_	requiresUpdateEveryTick
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	d	stop
	m	()V	e	tick
	m	()Z	h	isHoldingCrossbow
	m	()Z	i	isValidTarget
	m	()Z	k	canRun
	f	Lbgj;	a	PATHFINDING_DELAY_RANGE
	f	Lbzi;	b	mob
	f	Lbrc$a;	c	crossbowState
	f	D	d	speedModifier
	f	F	e	attackRadiusSqr
	f	I	f	seeTime
	f	I	g	attackDelay
	f	I	h	updatePathDelay
c	brc$a	net/minecraft/world/entity/ai/goal/RangedCrossbowAttackGoal$CrossbowState
	m	()[Lbrc$a;	a	$values
	f	Lbrc$a;	a	UNCHARGED
	f	Lbrc$a;	b	CHARGING
	f	Lbrc$a;	c	CHARGED
	f	Lbrc$a;	d	READY_TO_ATTACK
	f	[Lbrc$a;	e	$VALUES
c	brd	net/minecraft/world/entity/ai/goal/RemoveBlockGoal
	m	(Lcsv;Lbjp;DI)V	<init>	<init>
		p	1		targetBlock
		p	2		mob
		p	3		speed
		p	5		maxYDifference
	m	()Z	a	canUse
	m	(Lcpv;Lgw;)V	a	playBreakSound
		p	1		world
		p	2		pos
	m	(Lcpw;Lgw;)V	a	playDestroyProgressSound
		p	1		world
		p	2		pos
	m	(Lcpy;Lgw;)Z	a	isValidTarget
		p	1		world
		p	2		pos
	m	(Lgw;Lcpb;)Lgw;	a	getPosWithBlock
		p	1		pos
		p	2		world
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lcsv;	g	blockToRemove
	f	Lbji;	h	removerMob
	f	I	i	ticksSinceReachedGoal
	f	I	j	WAIT_AFTER_BLOCK_FOUND
c	bre	net/minecraft/world/entity/ai/goal/RestrictSunGoal
	m	(Lbjp;)V	<init>	<init>
		p	1		mob
	m	()Z	a	canUse
	m	()V	c	start
	m	()V	d	stop
	f	Lbjp;	a	mob
c	brf	net/minecraft/world/entity/ai/goal/RunAroundLikeCrazyGoal
	m	(Lbwq;D)V	<init>	<init>
		p	1		horse
		p	2		speed
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	e	tick
	f	Lbwq;	a	horse
	f	D	b	speedModifier
	f	D	c	posX
	f	D	d	posY
	f	D	e	posZ
c	brg	net/minecraft/world/entity/ai/goal/SitWhenOrderedToGoal
	m	(Lbkb;)V	<init>	<init>
		p	1		tameable
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	f	Lbkb;	a	mob
c	brh	net/minecraft/world/entity/ai/goal/StrollThroughVillageGoal
	m	(Lbjp;I)V	<init>	<init>
		p	1		mob
		p	2		searchRange
	m	()Z	a	canUse
	m	(Lakq;Lgw;)D	a	lambda$canUse$0
	m	()Z	b	canContinueToUse
	m	()V	e	tick
	m	()V	h	moveRandomly
	f	I	a	DISTANCE_THRESHOLD
	f	Lbjp;	b	mob
	f	I	c	interval
	f	Lgw;	d	wantedPos
c	bri	net/minecraft/world/entity/ai/goal/SwellGoal
	m	(Lbyu;)V	<init>	<init>
		p	1		creeper
	m	()Z	Q_	requiresUpdateEveryTick
	m	()Z	a	canUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lbyu;	a	creeper
	f	Lbjg;	b	target
c	brj	net/minecraft/world/entity/ai/goal/TemptGoal
	m	(Lbjp;DLcmg;Z)V	<init>	<init>
		p	1		entity
		p	2		speed
		p	4		food
		p	5		canBeScared
	m	()Z	a	canUse
	m	(Lbjg;)Z	a	shouldFollow
		p	1		entity
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	m	()Z	h	canScare
	m	()Z	i	isRunning
	f	Lbjp;	a	mob
	f	Lcbu;	b	player
	f	Lbts;	c	TEMP_TARGETING
	f	Lbts;	d	targetingConditions
	f	D	e	speedModifier
	f	D	f	px
	f	D	g	py
	f	D	h	pz
	f	D	i	pRotX
	f	D	j	pRotY
	f	I	k	calmDown
	f	Z	l	isRunning
	f	Lcmg;	m	items
	f	Z	n	canScare
c	brk	net/minecraft/world/entity/ai/goal/TradeWithPlayerGoal
	m	(Lcbc;)V	<init>	<init>
		p	1		merchant
	m	()Z	a	canUse
	m	()V	c	start
	m	()V	d	stop
	f	Lcbc;	a	mob
c	brl	net/minecraft/world/entity/ai/goal/TryFindWaterGoal
	m	(Lbjp;)V	<init>	<init>
		p	1		mob
	m	()Z	a	canUse
	m	()V	c	start
	f	Lbjp;	a	mob
c	brm	net/minecraft/world/entity/ai/goal/UseItemGoal
	m	(Lbji;Lcjf;Lapc;Ljava/util/function/Predicate;)V	<init>	<init>
		p	1		actor
		p	2		item
		p	3		sound
		p	4		condition
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	f	Lbji;	a	mob
	f	Lcjf;	b	item
	f	Ljava/util/function/Predicate;	c	canUseSelector
	f	Lapc;	d	finishUsingSound
c	brn	net/minecraft/world/entity/ai/goal/WaterAvoidingRandomFlyingGoal
	m	(Lbjp;D)V	<init>	<init>
		p	1		mob
		p	2		speed
	m	()Lehn;	h	getPosition
c	bro	net/minecraft/world/entity/ai/goal/WaterAvoidingRandomStrollGoal
	m	(Lbjp;D)V	<init>	<init>
		p	1		mob
		p	2		speed
	m	(Lbjp;DF)V	<init>	<init>
		p	1		mob
		p	2		speed
		p	4		probability
	m	()Lehn;	h	getPosition
	f	F	i	PROBABILITY
	f	F	j	probability
c	brp	net/minecraft/world/entity/ai/goal/WrappedGoal
	m	(ILbqb;)V	<init>	<init>
		p	1		priority
		p	2		goal
	m	()Z	P_	isInterruptable
	m	()Z	Q_	requiresUpdateEveryTick
	m	()Z	a	canUse
	m	(I)I	a	adjustedTickDelay
		p	1		ticks
	m	(Lbrp;)Z	a	canBeReplacedBy
		p	1		goal
	m	(Ljava/util/EnumSet;)V	a	setFlags
		p	1		controls
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	m	()Z	h	isRunning
	m	()I	i	getPriority
	m	()Ljava/util/EnumSet;	j	getFlags
	m	()Lbqb;	k	getGoal
	f	Lbqb;	a	goal
	f	I	b	priority
	f	Z	c	isRunning
c	brq	net/minecraft/world/entity/ai/goal/ZombieAttackGoal
	m	(Lcab;DZ)V	<init>	<init>
		p	1		zombie
		p	2		speed
		p	4		pauseWhenMobIdle
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lcab;	b	zombie
	f	I	c	raiseArmTicks
c	brr	net/minecraft/world/entity/ai/goal/package-info
c	brs	net/minecraft/world/entity/ai/goal/target/DefendVillageTargetGoal
	m	(Lbvd;)V	<init>	<init>
		p	1		golem
	m	()Z	a	canUse
	m	()V	c	start
	f	Lbvd;	a	golem
	f	Lbjg;	b	potentialTarget
	f	Lbts;	c	attackTargeting
c	brt	net/minecraft/world/entity/ai/goal/target/HurtByTargetGoal
	m	(Lbjp;[Ljava/lang/Class;)V	<init>	<init>
		p	1		mob
		p	2		noRevengeTypes
	m	()Z	a	canUse
	m	(Lbji;Lbjg;)V	a	alertOther
		p	1		mob
		p	2		target
	m	([Ljava/lang/Class;)Lbrt;	a	setAlertOthers
		p	1		noHelpTypes
	m	()V	c	start
	m	()V	h	alertOthers
	f	Lbts;	a	HURT_BY_TARGETING
	f	I	b	ALERT_RANGE_Y
	f	Z	c	alertSameType
	f	I	d	timestamp
	f	[Ljava/lang/Class;	i	toIgnoreDamage
	f	[Ljava/lang/Class;	j	toIgnoreAlert
c	bru	net/minecraft/world/entity/ai/goal/target/NearestAttackableTargetGoal
	m	(Lbji;Ljava/lang/Class;IZZLjava/util/function/Predicate;)V	<init>	<init>
		p	1		mob
		p	2		targetClass
		p	3		reciprocalChance
		p	4		checkVisibility
		p	5		checkCanNavigate
		p	6		targetPredicate
	m	(Lbji;Ljava/lang/Class;Z)V	<init>	<init>
		p	1		mob
		p	2		targetClass
		p	3		checkVisibility
	m	(Lbji;Ljava/lang/Class;ZLjava/util/function/Predicate;)V	<init>	<init>
		p	1		mob
		p	2		targetClass
		p	3		checkVisibility
		p	4		targetPredicate
	m	(Lbji;Ljava/lang/Class;ZZ)V	<init>	<init>
		p	1		mob
		p	2		targetClass
		p	3		checkVisibility
		p	4		checkCanNavigate
	m	()Z	a	canUse
	m	(D)Lehi;	a	getTargetSearchArea
		p	1		distance
	m	(Lbjg;)V	a	setTarget
		p	1		targetEntity
	m	(Lbjg;)Z	b	lambda$findTarget$0
	m	()V	c	start
	m	()V	h	findTarget
	f	Ljava/lang/Class;	a	targetType
	f	I	b	randomInterval
	f	Lbjg;	c	target
	f	Lbts;	d	targetConditions
	f	I	i	DEFAULT_RANDOM_INTERVAL
c	brv	net/minecraft/world/entity/ai/goal/target/NearestAttackableWitchTargetGoal
	m	(Lcdc;Ljava/lang/Class;IZZLjava/util/function/Predicate;)V	<init>	<init>
		p	1		actor
		p	2		targetEntityClass
		p	3		reciprocalChance
		p	4		checkVisibility
		p	5		checkCanNavigate
		p	6		targetPredicate
	m	()Z	a	canUse
	m	(Z)V	a	setCanAttack
		p	1		enabled
	f	Z	i	canAttack
c	brw	net/minecraft/world/entity/ai/goal/target/NearestHealableRaiderTargetGoal
	m	(Lcdc;Ljava/lang/Class;ZLjava/util/function/Predicate;)V	<init>	<init>
		p	1		raider
		p	2		targetEntityClass
		p	3		checkVisibility
		p	4		targetPredicate
	m	()Z	a	canUse
	m	()V	c	start
	m	()I	i	getCooldown
	m	()V	k	decrementCooldown
	f	I	i	DEFAULT_COOLDOWN
	f	I	j	cooldown
c	brx	net/minecraft/world/entity/ai/goal/target/NonTameRandomTargetGoal
	m	(Lbkb;Ljava/lang/Class;ZLjava/util/function/Predicate;)V	<init>	<init>
		p	1		tameable
		p	2		targetClass
		p	3		checkVisibility
		p	4		targetPredicate
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	f	Lbkb;	i	tamableMob
c	bry	net/minecraft/world/entity/ai/goal/target/OwnerHurtByTargetGoal
	m	(Lbkb;)V	<init>	<init>
		p	1		tameable
	m	()Z	a	canUse
	m	()V	c	start
	f	Lbkb;	a	tameAnimal
	f	Lbjg;	b	ownerLastHurtBy
	f	I	c	timestamp
c	brz	net/minecraft/world/entity/ai/goal/target/OwnerHurtTargetGoal
	m	(Lbkb;)V	<init>	<init>
		p	1		tameable
	m	()Z	a	canUse
	m	()V	c	start
	f	Lbkb;	a	tameAnimal
	f	Lbjg;	b	ownerLastHurt
	f	I	c	timestamp
c	bsa	net/minecraft/world/entity/ai/goal/target/ResetUniversalAngerTargetGoal
	m	(Lbji;Z)V	<init>	<init>
		p	1		mob
		p	2		triggerOthers
	m	()Z	a	canUse
	m	(Lbji;)Lbjn;	a	lambda$start$1
		p	0		entity
	m	(Lbji;)Z	b	lambda$start$0
		p	1		entity
	m	()V	c	start
	m	()Z	h	wasHurtByPlayer
	m	()Ljava/util/List;	i	getNearbyMobsOfSameType
	f	I	a	ALERT_RANGE_Y
	f	Lbji;	b	mob
	f	Z	c	alertOthersOfSameType
	f	I	d	lastHurtByPlayerTimestamp
c	bsb	net/minecraft/world/entity/ai/goal/target/TargetGoal
	m	(Lbji;Z)V	<init>	<init>
		p	1		mob
		p	2		checkVisibility
	m	(Lbji;ZZ)V	<init>	<init>
		p	1		mob
		p	2		checkVisibility
		p	3		checkNavigable
	m	(Lbjg;)Z	a	canReach
		p	1		entity
	m	(Lbjg;Lbts;)Z	a	canAttack
		p	1		target
		p	2		targetPredicate
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	(I)Lbsb;	c	setUnseenMemoryTicks
		p	1		time
	m	()V	d	stop
	m	()D	l	getFollowDistance
	f	I	a	EMPTY_REACH_CACHE
	f	I	b	CAN_REACH_CACHE
	f	I	c	CANT_REACH_CACHE
	f	Z	d	mustReach
	f	Lbji;	e	mob
	f	Z	f	mustSee
	f	Lbjg;	g	targetMob
	f	I	h	unseenMemoryTicks
	f	I	i	reachCache
	f	I	j	reachCacheTime
	f	I	k	unseenTicks
c	bsc	net/minecraft/world/entity/ai/goal/target/package-info
c	bsd	net/minecraft/world/entity/ai/gossip/GossipContainer
	m	()Ljava/util/Map;	a	getGossipEntries
	m	(II)I	a	mergeValuesForTransfer
		p	0		left
		p	1		right
	m	(Lasc;I)Ljava/util/Collection;	a	selectGossipsForTransfer
		p	1		random
		p	2		count
	m	(Lbsd$b;)V	a	lambda$update$9
		p	1		entry
	m	(Lbsd;Lasc;I)V	a	transferFrom
		p	1		from
		p	2		random
		p	3		count
	m	(Lbse;)V	a	remove
		p	1		type
	m	(Lbse;II)I	a	mergeValuesForAddition
		p	1		type
		p	2		left
		p	3		right
	m	(Lbse;Ljava/util/function/DoublePredicate;)J	a	getCountForType
		p	1		type
		p	2		predicate
	m	(Lcom/mojang/datafixers/util/Pair;)Ljava/util/stream/Stream;	a	lambda$update$8
	m	(Lcom/mojang/serialization/Dynamic;)V	a	update
		p	1		dynamic
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/lang/Object;	a	store
		p	1		ops
	m	(Ljava/lang/String;)V	a	lambda$update$7
		p	0		error
	m	(Ljava/util/Map$Entry;)Ljava/util/stream/Stream;	a	lambda$unpack$1
		p	0		entry
	m	(Ljava/util/Map;Ljava/util/UUID;)V	a	lambda$getGossipEntries$0
		p	2		uuid
	m	(Ljava/util/UUID;)Lbsd$a;	a	getOrCreate
		p	1		target
	m	(Ljava/util/UUID;Lbse;)V	a	remove
		p	1		target
		p	2		type
	m	(Ljava/util/UUID;Lbse;I)V	a	add
		p	1		target
		p	2		type
		p	3		value
	m	(Ljava/util/UUID;Ljava/util/function/Predicate;)I	a	getReputation
		p	1		target
		p	2		gossipTypeFilter
	m	(Ljava/util/function/DoublePredicate;Lbse;Lbsd$a;)Z	a	lambda$getCountForType$4
		p	2		reputation
	m	()V	b	decay
	m	(Lbsd$b;)V	b	lambda$transferFrom$3
		p	1		gossip
	m	(Lbse;II)I	b	lambda$add$5
		p	2		left
		p	3		right
	m	(Ljava/lang/String;)V	b	lambda$store$6
		p	0		error
	m	(Ljava/util/UUID;)Lbsd$a;	b	lambda$getOrCreate$2
		p	0		uuid
	m	(Ljava/util/UUID;Lbse;I)V	b	remove
		p	1		target
		p	2		type
		p	3		value
	m	()Ljava/util/stream/Stream;	c	unpack
	f	I	a	DISCARD_THRESHOLD
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ljava/util/Map;	c	gossips
c	bsd$a	net/minecraft/world/entity/ai/gossip/GossipContainer$EntityGossips
	m	()V	a	decay
	m	(Lbse;)V	a	makeSureValueIsntTooLowOrTooHigh
		p	1		gossipType
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntMap$Entry;)I	a	lambda$weightedValue$1
		p	0		entry
	m	(Ljava/util/UUID;)Ljava/util/stream/Stream;	a	unpack
		p	1		target
	m	(Ljava/util/UUID;Lit/unimi/dsi/fastutil/objects/Object2IntMap$Entry;)Lbsd$b;	a	lambda$unpack$2
		p	1		entry
	m	(Ljava/util/function/Predicate;)I	a	weightedValue
		p	1		gossipTypeFilter
	m	(Ljava/util/function/Predicate;Lit/unimi/dsi/fastutil/objects/Object2IntMap$Entry;)Z	a	lambda$weightedValue$0
		p	1		entry
	m	()Z	b	isEmpty
	m	(Lbse;)V	b	remove
		p	1		gossipType
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	a	entries
c	bsd$b	net/minecraft/world/entity/ai/gossip/GossipContainer$GossipEntry
	m	(Ljava/util/UUID;Lbse;I)V	<init>	<init>
		p	1		target
		p	2		type
		p	3		value
	m	()I	a	weightedValue
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Ljava/util/UUID;	b	target
	m	()Lbse;	c	type
	m	()I	d	value
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcom/mojang/serialization/Codec;	b	LIST_CODEC
	f	Ljava/util/UUID;	c	target
	f	Lbse;	d	type
	f	I	e	value
c	bse	net/minecraft/world/entity/ai/gossip/GossipType
	m	(Ljava/lang/String;ILjava/lang/String;IIII)V	<init>	<init>
		p	3		key
		p	4		multiplier
		p	5		maxReputation
		p	6		decay
		p	7		shareDecrement
	m	()[Lbse;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lbse;	a	MAJOR_NEGATIVE
	f	Lbse;	b	MINOR_NEGATIVE
	f	Lbse;	c	MINOR_POSITIVE
	f	Lbse;	d	MAJOR_POSITIVE
	f	Lbse;	e	TRADING
	f	I	f	REPUTATION_CHANGE_PER_EVENT
	f	I	g	REPUTATION_CHANGE_PER_EVERLASTING_MEMORY
	f	I	h	REPUTATION_CHANGE_PER_TRADE
	f	Ljava/lang/String;	i	id
	f	I	j	weight
	f	I	k	max
	f	I	l	decayPerDay
	f	I	m	decayPerTransfer
	f	Lcom/mojang/serialization/Codec;	n	CODEC
	f	[Lbse;	o	$VALUES
c	bsf	net/minecraft/world/entity/ai/gossip/package-info
c	bsg	net/minecraft/world/entity/ai/memory/ExpirableValue
	m	(Ljava/lang/Object;J)V	<init>	<init>
		p	1		value
		p	2		expiry
	m	()V	a	tick
	m	(Lbsg;)Ljava/util/Optional;	a	lambda$codec$1
		p	0		memory
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	codec
		p	0		codec
	m	(Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$codec$3
		p	1		instance
	m	(Ljava/lang/Object;)Lbsg;	a	of
		p	0		value
	m	(Ljava/lang/Object;J)Lbsg;	a	of
		p	0		value
		p	1		expiry
	m	(Ljava/lang/Object;Ljava/util/Optional;)Lbsg;	a	lambda$codec$2
		p	0		value
		p	1		expiry
	m	()J	b	getTimeToLive
	m	(Lbsg;)Ljava/lang/Object;	b	lambda$codec$0
		p	0		memory
	m	()Ljava/lang/Object;	c	getValue
	m	()Z	d	hasExpired
	m	()Z	e	canExpire
	f	Ljava/lang/Object;	a	value
	f	J	b	timeToLive
c	bsh	net/minecraft/world/entity/ai/memory/MemoryModuleType
	m	(Ljava/util/Optional;)V	<init>	<init>
		p	1		codec
	m	()Ljava/util/Optional;	a	getCodec
	m	(Ljava/lang/String;)Lbsh;	a	register
		p	0		id
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lbsh;	a	register
		p	0		id
		p	1		codec
	f	Lbsh;	A	NEAREST_HOSTILE
	f	Lbsh;	B	NEAREST_ATTACKABLE
	f	Lbsh;	C	HIDING_PLACE
	f	Lbsh;	D	HEARD_BELL_TIME
	f	Lbsh;	E	CANT_REACH_WALK_TARGET_SINCE
	f	Lbsh;	F	GOLEM_DETECTED_RECENTLY
	f	Lbsh;	G	LAST_SLEPT
	f	Lbsh;	H	LAST_WOKEN
	f	Lbsh;	I	LAST_WORKED_AT_POI
	f	Lbsh;	J	NEAREST_VISIBLE_ADULT
	f	Lbsh;	K	NEAREST_VISIBLE_WANTED_ITEM
	f	Lbsh;	L	NEAREST_VISIBLE_NEMESIS
	f	Lbsh;	M	PLAY_DEAD_TICKS
	f	Lbsh;	N	TEMPTING_PLAYER
	f	Lbsh;	O	TEMPTATION_COOLDOWN_TICKS
	f	Lbsh;	P	GAZE_COOLDOWN_TICKS
	f	Lbsh;	Q	IS_TEMPTED
	f	Lbsh;	R	LONG_JUMP_COOLDOWN_TICKS
	f	Lbsh;	S	LONG_JUMP_MID_JUMP
	f	Lbsh;	T	HAS_HUNTING_COOLDOWN
	f	Lbsh;	U	RAM_COOLDOWN_TICKS
	f	Lbsh;	V	RAM_TARGET
	f	Lbsh;	W	IS_IN_WATER
	f	Lbsh;	X	IS_PREGNANT
	f	Lbsh;	Y	IS_PANICKING
	f	Lbsh;	Z	UNREACHABLE_TONGUE_TARGETS
	f	Lbsh;	aA	IS_SNIFFING
	f	Lbsh;	aB	IS_EMERGING
	f	Lbsh;	aC	ROAR_SOUND_DELAY
	f	Lbsh;	aD	DIG_COOLDOWN
	f	Lbsh;	aE	ROAR_SOUND_COOLDOWN
	f	Lbsh;	aF	SNIFF_COOLDOWN
	f	Lbsh;	aG	TOUCH_COOLDOWN
	f	Lbsh;	aH	VIBRATION_COOLDOWN
	f	Lbsh;	aI	SONIC_BOOM_COOLDOWN
	f	Lbsh;	aJ	SONIC_BOOM_SOUND_COOLDOWN
	f	Lbsh;	aK	SONIC_BOOM_SOUND_DELAY
	f	Lbsh;	aL	LIKED_PLAYER
	f	Lbsh;	a	DUMMY
	f	Lbsh;	aM	LIKED_NOTEBLOCK_POSITION
	f	Lbsh;	aN	LIKED_NOTEBLOCK_COOLDOWN_TICKS
	f	Lbsh;	aO	ITEM_PICKUP_COOLDOWN_TICKS
	f	Lbsh;	aP	SNIFFER_EXPLORED_POSITIONS
	f	Lbsh;	aQ	SNIFFER_SNIFFING_TARGET
	f	Lbsh;	aR	SNIFFER_DIGGING
	f	Lbsh;	aS	SNIFFER_HAPPY
	f	Ljava/util/Optional;	aT	codec
	f	Lbsh;	aa	ANGRY_AT
	f	Lbsh;	ab	UNIVERSAL_ANGER
	f	Lbsh;	ac	ADMIRING_ITEM
	f	Lbsh;	ad	TIME_TRYING_TO_REACH_ADMIRE_ITEM
	f	Lbsh;	ae	DISABLE_WALK_TO_ADMIRE_ITEM
	f	Lbsh;	af	ADMIRING_DISABLED
	f	Lbsh;	ag	HUNTED_RECENTLY
	f	Lbsh;	ah	CELEBRATE_LOCATION
	f	Lbsh;	ai	DANCING
	f	Lbsh;	aj	NEAREST_VISIBLE_HUNTABLE_HOGLIN
	f	Lbsh;	ak	NEAREST_VISIBLE_BABY_HOGLIN
	f	Lbsh;	al	NEAREST_TARGETABLE_PLAYER_NOT_WEARING_GOLD
	f	Lbsh;	am	NEARBY_ADULT_PIGLINS
	f	Lbsh;	an	NEAREST_VISIBLE_ADULT_PIGLINS
	f	Lbsh;	ao	NEAREST_VISIBLE_ADULT_HOGLINS
	f	Lbsh;	ap	NEAREST_VISIBLE_ADULT_PIGLIN
	f	Lbsh;	aq	NEAREST_VISIBLE_ZOMBIFIED
	f	Lbsh;	ar	VISIBLE_ADULT_PIGLIN_COUNT
	f	Lbsh;	as	VISIBLE_ADULT_HOGLIN_COUNT
	f	Lbsh;	at	NEAREST_PLAYER_HOLDING_WANTED_ITEM
	f	Lbsh;	au	ATE_RECENTLY
	f	Lbsh;	av	NEAREST_REPELLENT
	f	Lbsh;	aw	PACIFIED
	f	Lbsh;	ax	ROAR_TARGET
	f	Lbsh;	ay	DISTURBANCE_LOCATION
	f	Lbsh;	az	RECENT_PROJECTILE
	f	Lbsh;	b	HOME
	f	Lbsh;	c	JOB_SITE
	f	Lbsh;	d	POTENTIAL_JOB_SITE
	f	Lbsh;	e	MEETING_POINT
	f	Lbsh;	f	SECONDARY_JOB_SITE
	f	Lbsh;	g	NEAREST_LIVING_ENTITIES
	f	Lbsh;	h	NEAREST_VISIBLE_LIVING_ENTITIES
	f	Lbsh;	i	VISIBLE_VILLAGER_BABIES
	f	Lbsh;	j	NEAREST_PLAYERS
	f	Lbsh;	k	NEAREST_VISIBLE_PLAYER
	f	Lbsh;	l	NEAREST_VISIBLE_ATTACKABLE_PLAYER
	f	Lbsh;	m	WALK_TARGET
	f	Lbsh;	n	LOOK_TARGET
	f	Lbsh;	o	ATTACK_TARGET
	f	Lbsh;	p	ATTACK_COOLING_DOWN
	f	Lbsh;	q	INTERACTION_TARGET
	f	Lbsh;	r	BREED_TARGET
	f	Lbsh;	s	RIDE_TARGET
	f	Lbsh;	t	PATH
	f	Lbsh;	u	INTERACTABLE_DOORS
	f	Lbsh;	v	DOORS_TO_CLOSE
	f	Lbsh;	w	NEAREST_BED
	f	Lbsh;	x	HURT_BY
	f	Lbsh;	y	HURT_BY_ENTITY
	f	Lbsh;	z	AVOID_TARGET
c	bsi	net/minecraft/world/entity/ai/memory/MemoryStatus
	m	()[Lbsi;	a	$values
	f	Lbsi;	a	VALUE_PRESENT
	f	Lbsi;	b	VALUE_ABSENT
	f	Lbsi;	c	REGISTERED
	f	[Lbsi;	d	$VALUES
c	bsj	net/minecraft/world/entity/ai/memory/NearestVisibleLivingEntities
	m	(Lbjg;Ljava/util/List;)V	<init>	<init>
		p	1		owner
		p	2		entities
	m	()Lbsj;	a	empty
	m	(Lbjg;)Z	a	contains
		p	1		entity
	m	(Lbjg;Lbjg;)Z	a	lambda$new$1
		p	1		entity
	m	(Lit/unimi/dsi/fastutil/objects/Object2BooleanOpenHashMap;Ljava/util/function/Predicate;Lbjg;)Z	a	lambda$new$2
		p	2		entity
	m	(Ljava/util/function/Predicate;)Ljava/util/Optional;	a	findClosest
		p	1		predicate
	m	(Ljava/util/function/Predicate;Lbjg;)Z	a	lambda$find$4
		p	2		entity
	m	(Lbjg;)Z	b	lambda$new$0
		p	0		entity
	m	(Ljava/util/function/Predicate;)Ljava/lang/Iterable;	b	findAll
		p	1		predicate
	m	(Ljava/util/function/Predicate;Lbjg;)Z	b	lambda$findAll$3
		p	2		entity
	m	(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;	c	find
		p	1		predicate
	m	(Ljava/util/function/Predicate;)Z	d	contains
		p	1		predicate
	f	Lbsj;	a	EMPTY
	f	Ljava/util/List;	b	nearbyEntities
	f	Ljava/util/function/Predicate;	c	lineOfSightTest
c	bsk	net/minecraft/world/entity/ai/memory/WalkTarget
	m	(Lbiq;FI)V	<init>	<init>
		p	1		entity
		p	2		speed
		p	3		completionRange
	m	(Lbmk;FI)V	<init>	<init>
		p	1		lookTarget
		p	2		speed
		p	3		completionRange
	m	(Lehn;FI)V	<init>	<init>
		p	1		pos
		p	2		speed
		p	3		completionRange
	m	(Lgw;FI)V	<init>	<init>
		p	1		pos
		p	2		speed
		p	3		completionRange
	m	()Lbmk;	a	getTarget
	m	()F	b	getSpeedModifier
	m	()I	c	getCloseEnoughDist
	f	Lbmk;	a	target
	f	F	b	speedModifier
	f	I	c	closeEnoughDist
c	bsl	net/minecraft/world/entity/ai/memory/package-info
c	bsm	net/minecraft/world/entity/ai/navigation/AmphibiousPathNavigation
	m	(Lbji;Lcpv;)V	<init>	<init>
		p	2		world
	m	()Z	a	canUpdatePath
	m	(I)Lebd;	a	createPathFinder
		p	1		range
	m	(Lehn;)D	a	getGroundY
		p	1		pos
	m	(Lehn;Lehn;)Z	a	canMoveDirectly
		p	1		origin
		p	2		target
	m	(Lgw;)Z	a	isStableDestination
		p	1		pos
	m	(Z)V	a	setCanFloat
		p	1		canSwim
	m	()Lehn;	b	getTempMobPos
c	bsn	net/minecraft/world/entity/ai/navigation/FlyingPathNavigation
	m	(Lbji;Lcpv;)V	<init>	<init>
		p	1		entity
		p	2		world
	m	()Z	a	canUpdatePath
	m	(I)Lebd;	a	createPathFinder
		p	1		range
	m	(Lbiq;I)Lebb;	a	createPath
		p	1		entity
		p	2		distance
	m	(Lehn;Lehn;)Z	a	canMoveDirectly
		p	1		origin
		p	2		target
	m	(Lgw;)Z	a	isStableDestination
		p	1		pos
	m	()Lehn;	b	getTempMobPos
	m	(Z)V	b	setCanOpenDoors
		p	1		canPathThroughDoors
	m	()V	c	tick
	m	(Z)V	c	setCanPassDoors
		p	1		canEnterOpenDoors
	m	()Z	d	canPassDoors
	m	()Z	e	canOpenDoors
c	bso	net/minecraft/world/entity/ai/navigation/GroundPathNavigation
	m	(Lbji;Lcpv;)V	<init>	<init>
		p	1		entity
		p	2		world
	m	()V	R_	trimPath
	m	()Z	a	canUpdatePath
	m	(I)Lebd;	a	createPathFinder
		p	1		range
	m	(Lbiq;I)Lebb;	a	createPath
		p	1		entity
		p	2		distance
	m	(Leax;)Z	a	hasValidPathType
		p	1		pathType
	m	(Lgw;I)Lebb;	a	createPath
		p	1		target
		p	2		distance
	m	()Lehn;	b	getTempMobPos
	m	(Z)V	b	setCanOpenDoors
		p	1		canPathThroughDoors
	m	(Z)V	c	setCanPassDoors
		p	1		canEnterOpenDoors
	m	(Z)V	d	setAvoidSun
		p	1		avoidSunlight
	m	()Z	e	canPassDoors
	m	(Z)V	e	setCanWalkOverFences
		p	1		canWalkOverFences
	m	()Z	f	canOpenDoors
	m	()I	s	getSurfaceY
	f	Z	p	avoidSun
c	bsp	net/minecraft/world/entity/ai/navigation/PathNavigation
	m	(Lbji;Lcpv;)V	<init>	<init>
		p	1		entity
		p	2		world
	m	()V	R_	trimPath
	m	()Z	a	canUpdatePath
	m	(D)V	a	setSpeedModifier
		p	1		speed
	m	(DDDD)Z	a	moveTo
		p	1		x
		p	3		y
		p	5		z
		p	7		speed
	m	(DDDI)Lebb;	a	createPath
		p	1		x
		p	3		y
		p	5		z
		p	7		distance
	m	(F)V	a	setMaxVisitedNodesMultiplier
		p	1		rangeMultiplier
	m	(I)Lebd;	a	createPathFinder
		p	1		range
	m	(Lbiq;D)Z	a	moveTo
		p	1		entity
		p	2		speed
	m	(Lbiq;I)Lebb;	a	createPath
		p	1		entity
		p	2		distance
	m	(Lbji;Lehn;Lehn;Z)Z	a	isClearForMovementBetween
		p	0		entity
		p	1		startPos
		p	2		entityPos
		p	3		includeFluids
	m	(Lebb;D)Z	a	moveTo
		p	1		path
		p	2		speed
	m	(Lehn;)D	a	getGroundY
		p	1		pos
	m	(Lehn;Lehn;)Z	a	canMoveDirectly
		p	1		origin
		p	2		target
	m	(Lgw;)Z	a	isStableDestination
		p	1		pos
	m	(Lgw;I)Lebb;	a	createPath
		p	1		target
		p	2		distance
	m	(Lgw;II)Lebb;	a	createPath
		p	1		target
		p	2		minDistance
		p	3		maxDistance
	m	(Ljava/util/Set;I)Lebb;	a	createPath
		p	1		positions
		p	2		distance
	m	(Ljava/util/Set;IZI)Lebb;	a	createPath
		p	1		positions
		p	2		range
		p	3		useHeadPos
		p	4		distance
	m	(Ljava/util/Set;IZIF)Lebb;	a	createPath
		p	1		positions
		p	2		range
		p	3		useHeadPos
		p	4		distance
		p	5		followRange
	m	(Ljava/util/stream/Stream;I)Lebb;	a	createPath
		p	1		positions
		p	2		distance
	m	(Z)V	a	setCanFloat
		p	1		canSwim
	m	()Lehn;	b	getTempMobPos
	m	(Leax;)Z	b	canCutCorner
		p	1		nodeType
	m	(Lehn;)V	b	doStuckDetection
		p	1		currentPos
	m	(Lgw;)Z	b	shouldRecomputePath
		p	1		pos
	m	()V	c	tick
	m	(Lehn;)Z	c	shouldTargetNextNodeInDirection
		p	1		currentPos
	m	()V	e	timeoutPath
	m	()V	f	resetStuckTimeout
	m	()V	g	resetMaxVisitedNodesMultiplier
	m	()Lgw;	h	getTargetPos
	m	()V	i	recomputePath
	m	()Lebb;	j	getPath
	m	()V	k	followThePath
	m	()Z	l	isDone
	m	()Z	m	isInProgress
	m	()V	n	stop
	m	()Leba;	o	getNodeEvaluator
	m	()Z	p	canFloat
	m	()F	q	getMaxDistanceToWaypoint
	m	()Z	r	isStuck
	f	Lbji;	a	mob
	f	Lcpv;	b	level
	f	Lebb;	c	path
	f	D	d	speedModifier
	f	I	e	tick
	f	I	f	lastStuckCheck
	f	Lehn;	g	lastStuckCheckPos
	f	Lhy;	h	timeoutCachedNode
	f	J	i	timeoutTimer
	f	J	j	lastTimeoutCheck
	f	D	k	timeoutLimit
	f	F	l	maxDistanceToWaypoint
	f	Z	m	hasDelayedRecomputation
	f	J	n	timeLastRecompute
	f	Leba;	o	nodeEvaluator
	f	I	p	MAX_TIME_RECOMPUTE
	f	I	q	STUCK_CHECK_INTERVAL
	f	F	r	STUCK_THRESHOLD_DISTANCE_FACTOR
	f	Lgw;	s	targetPos
	f	I	t	reachRange
	f	F	u	maxVisitedNodesMultiplier
	f	Lebd;	v	pathFinder
	f	Z	w	isStuck
c	bsq	net/minecraft/world/entity/ai/navigation/WallClimberNavigation
	m	(Lbji;Lcpv;)V	<init>	<init>
		p	1		entity
		p	2		world
	m	(Lbiq;D)Z	a	moveTo
		p	1		entity
		p	2		speed
	m	(Lbiq;I)Lebb;	a	createPath
		p	1		entity
		p	2		distance
	m	(Lgw;I)Lebb;	a	createPath
		p	1		target
		p	2		distance
	m	()V	c	tick
	f	Lgw;	p	pathToPosition
c	bsr	net/minecraft/world/entity/ai/navigation/WaterBoundPathNavigation
	m	(Lbji;Lcpv;)V	<init>	<init>
		p	1		entity
		p	2		world
	m	()Z	a	canUpdatePath
	m	(I)Lebd;	a	createPathFinder
		p	1		range
	m	(Lehn;)D	a	getGroundY
		p	1		pos
	m	(Lehn;Lehn;)Z	a	canMoveDirectly
		p	1		origin
		p	2		target
	m	(Lgw;)Z	a	isStableDestination
		p	1		pos
	m	(Z)V	a	setCanFloat
		p	1		canSwim
	m	()Lehn;	b	getTempMobPos
	f	Z	p	allowBreaching
c	bss	net/minecraft/world/entity/ai/navigation/package-info
c	bst	net/minecraft/world/entity/ai/package-info
c	bsu	net/minecraft/world/entity/ai/sensing/AdultSensor
	m	()Ljava/util/Set;	a	requires
	m	(Lakq;Lbil;)V	a	doTick
		p	1		world
		p	2		entity
	m	(Lakq;Lbjg;)V	a	doTick
		p	1		world
		p	2		entity
	m	(Lbil;Lbjg;)Z	a	lambda$setNearestVisibleAdult$1
	m	(Lbil;Lbsj;)V	a	setNearestVisibleAdult
		p	1		entity
	m	(Lbil;Lbsj;)V	b	lambda$doTick$0
c	bsv	net/minecraft/world/entity/ai/sensing/AxolotlAttackablesSensor
	m	(Lbjg;Lbjg;)Z	a	isMatchingEntity
		p	1		entity
		p	2		target
	m	()Lbsh;	b	getMemory
	m	(Lbjg;)Z	b	isHostileTarget
		p	1		axolotl
	m	(Lbjg;Lbjg;)Z	e	isHuntTarget
		p	1		axolotl
		p	2		target
	m	(Lbjg;Lbjg;)Z	f	isClose
		p	1		axolotl
		p	2		target
	f	F	a	TARGET_DETECTION_DISTANCE
c	bsw	net/minecraft/world/entity/ai/sensing/DummySensor
	m	()Ljava/util/Set;	a	requires
	m	(Lakq;Lbjg;)V	a	doTick
		p	1		world
		p	2		entity
c	bsx	net/minecraft/world/entity/ai/sensing/FrogAttackablesSensor
	m	(Lbjg;Lbjg;)Z	a	isMatchingEntity
		p	1		entity
		p	2		target
	m	()Lbsh;	b	getMemory
	m	(Lbjg;Lbjg;)Z	e	isUnreachableAttackTarget
		p	1		entity
		p	2		target
	f	F	a	TARGET_DETECTION_DISTANCE
c	bsy	net/minecraft/world/entity/ai/sensing/GolemSensor
	m	(I)V	<init>	<init>
		p	1		senseInterval
	m	()Ljava/util/Set;	a	requires
	m	(Lakq;Lbjg;)V	a	doTick
		p	1		world
		p	2		entity
	m	(Lbjg;)V	a	checkForNearbyGolem
		p	0		entity
	m	(Lbjg;)V	b	golemDetected
		p	0		entity
	m	(Lbjg;)Z	c	lambda$checkForNearbyGolem$0
	f	I	a	GOLEM_SCAN_RATE
	f	I	c	MEMORY_TIME_TO_LIVE
c	bsz	net/minecraft/world/entity/ai/sensing/HoglinSpecificSensor
	m	()Ljava/util/Set;	a	requires
	m	(Lakq;Lbjg;)V	a	doTick
		p	1		world
		p	2		entity
	m	(Lakq;Lcae;)V	a	doTick
		p	1		world
		p	2		entity
	m	(Lakq;Lgw;)Z	a	lambda$findNearestRepellent$1
		p	1		pos
	m	(Lbjg;)Z	a	lambda$doTick$0
	m	(Lakq;Lcae;)Ljava/util/Optional;	b	findNearestRepellent
		p	1		world
		p	2		hoglin
c	bta	net/minecraft/world/entity/ai/sensing/HurtBySensor
	m	()Ljava/util/Set;	a	requires
	m	(Lakq;Lbjg;)V	a	doTick
		p	1		world
		p	2		entity
	m	(Lakq;Lbkg;Lbjg;)V	a	lambda$doTick$0
c	btb	net/minecraft/world/entity/ai/sensing/IsInWaterSensor
	m	()Ljava/util/Set;	a	requires
	m	(Lakq;Lbjg;)V	a	doTick
		p	1		world
		p	2		entity
c	btc	net/minecraft/world/entity/ai/sensing/NearestBedSensor
	m	()Ljava/util/Set;	a	requires
	m	(Lakq;Lbjg;)V	a	doTick
		p	1		world
		p	2		entity
	m	(Lakq;Lbji;)V	a	doTick
		p	1		world
		p	2		entity
	m	(Lgw;)Z	a	lambda$doTick$0
		p	1		pos
	m	(Lhe;)Z	a	lambda$doTick$1
	m	(Lit/unimi/dsi/fastutil/longs/Long2LongMap$Entry;)Z	a	lambda$doTick$2
	f	I	a	CACHE_TIMEOUT
	f	I	c	BATCH_SIZE
	f	I	d	RATE
	f	Lit/unimi/dsi/fastutil/longs/Long2LongMap;	e	batchCache
	f	I	f	triedCount
	f	J	g	lastUpdate
c	btd	net/minecraft/world/entity/ai/sensing/NearestItemSensor
	m	()Ljava/util/Set;	a	requires
	m	(Lakq;Lbjg;)V	a	doTick
		p	1		world
		p	2		entity
	m	(Lakq;Lbji;)V	a	doTick
		p	1		world
		p	2		entity
	m	(Lbji;Lbyn;)Z	a	lambda$doTick$2
		p	1		itemEntity
	m	(Lbyn;)Z	a	lambda$doTick$0
		p	0		itemEntity
	m	(Lbji;Lbyn;)Z	b	lambda$doTick$1
		p	1		itemEntity
	f	I	a	MAX_DISTANCE_TO_WANTED_ITEM
	f	J	c	XZ_RANGE
	f	J	d	Y_RANGE
c	bte	net/minecraft/world/entity/ai/sensing/NearestLivingEntitySensor
	m	()Ljava/util/Set;	a	requires
	m	(Lakq;Lbjg;)V	a	doTick
		p	1		world
		p	2		entity
	m	(Lbjg;Lbjg;)Z	a	lambda$doTick$0
		p	1		e
	m	()I	b	radiusXZ
	m	()I	c	radiusY
c	btf	net/minecraft/world/entity/ai/sensing/NearestVisibleLivingEntitySensor
	m	()Ljava/util/Set;	a	requires
	m	(Lakq;Lbjg;)V	a	doTick
		p	1		world
		p	2		entity
	m	(Lbjg;)Ljava/util/Optional;	a	getVisibleEntities
		p	1		entity
	m	(Lbjg;Lbjg;)Z	a	isMatchingEntity
		p	1		entity
		p	2		target
	m	(Lbjg;Lbsj;)Ljava/util/Optional;	a	lambda$getNearestEntity$1
	m	()Lbsh;	b	getMemory
	m	(Lbjg;)Ljava/util/Optional;	b	getNearestEntity
		p	1		entity
	m	(Lbjg;Lbjg;)Z	e	lambda$getNearestEntity$0
c	btg	net/minecraft/world/entity/ai/sensing/PiglinBruteSpecificSensor
	m	()Ljava/util/Set;	a	requires
	m	(Lakq;Lbjg;)V	a	doTick
		p	1		world
		p	2		entity
	m	(Lbjg;)Z	a	lambda$doTick$0
c	bth	net/minecraft/world/entity/ai/sensing/PiglinSpecificSensor
	m	()Ljava/util/Set;	a	requires
	m	(Lakq;Lbjg;)V	a	doTick
		p	1		world
		p	2		entity
	m	(Lakq;Lgw;)Z	a	isValidRepellent
		p	0		world
		p	1		pos
	m	(Lbjg;)Z	a	lambda$doTick$0
	m	(Lakq;Lgw;)Z	b	lambda$findNearestRepellent$1
		p	1		pos
	m	(Lakq;Lbjg;)Ljava/util/Optional;	c	findNearestRepellent
		p	0		world
		p	1		entity
c	bti	net/minecraft/world/entity/ai/sensing/PlayerSensor
	m	()Ljava/util/Set;	a	requires
	m	(Lakq;Lbjg;)V	a	doTick
		p	1		world
		p	2		entity
	m	(Lbjg;Lakr;)Z	a	lambda$doTick$0
		p	1		player
	m	(Lbjg;Lcbu;)Z	a	lambda$doTick$2
		p	1		player
	m	(Lbjg;Lcbu;)Z	b	lambda$doTick$1
		p	1		player
c	btj	net/minecraft/world/entity/ai/sensing/SecondaryPoiSensor
	m	()Ljava/util/Set;	a	requires
	m	(Lakq;Lbjg;)V	a	doTick
		p	1		world
		p	2		entity
	m	(Lakq;Lcbh;)V	a	doTick
		p	1		world
		p	2		entity
	f	I	a	SCAN_RATE
c	btk	net/minecraft/world/entity/ai/sensing/Sensing
	m	(Lbji;)V	<init>	<init>
		p	1		owner
	m	()V	a	tick
	m	(Lbiq;)Z	a	hasLineOfSight
		p	1		entity
	f	Lbji;	a	mob
	f	Lit/unimi/dsi/fastutil/ints/IntSet;	b	seen
	f	Lit/unimi/dsi/fastutil/ints/IntSet;	c	unseen
c	btl	net/minecraft/world/entity/ai/sensing/Sensor
	m	(I)V	<init>	<init>
		p	1		senseInterval
	m	()Ljava/util/Set;	a	requires
	m	(Lakq;Lbjg;)V	a	doTick
		p	1		world
		p	2		entity
	m	(Lakq;Lbjg;)V	b	tick
		p	1		world
		p	2		entity
	m	(Lbjg;Lbjg;)Z	b	isEntityTargetable
		p	0		entity
		p	1		target
	m	(Lbjg;Lbjg;)Z	c	isEntityAttackable
		p	0		entity
		p	1		target
	m	(Lbjg;Lbjg;)Z	d	isEntityAttackableIgnoringLineOfSight
		p	0		entity
		p	1		target
	f	Lasc;	a	RANDOM
	f	I	b	TARGETING_RANGE
	f	I	c	DEFAULT_SCAN_RATE
	f	Lbts;	d	TARGET_CONDITIONS
	f	Lbts;	e	TARGET_CONDITIONS_IGNORE_INVISIBILITY_TESTING
	f	Lbts;	f	ATTACK_TARGET_CONDITIONS
	f	Lbts;	g	ATTACK_TARGET_CONDITIONS_IGNORE_INVISIBILITY_TESTING
	f	Lbts;	h	ATTACK_TARGET_CONDITIONS_IGNORE_LINE_OF_SIGHT
	f	Lbts;	i	ATTACK_TARGET_CONDITIONS_IGNORE_INVISIBILITY_AND_LINE_OF_SIGHT
	f	I	j	scanRate
	f	J	k	timeToTick
c	btm	net/minecraft/world/entity/ai/sensing/SensorType
	m	(Ljava/util/function/Supplier;)V	<init>	<init>
		p	1		factory
	m	()Lbtl;	a	create
	m	(Ljava/lang/String;Ljava/util/function/Supplier;)Lbtm;	a	register
		p	0		id
		p	1		factory
	m	()Lbtn;	b	lambda$static$4
	m	()Lbtn;	c	lambda$static$3
	m	()Lbtn;	d	lambda$static$2
	m	()Lbtn;	e	lambda$static$1
	m	()Lbtn;	f	lambda$static$0
	f	Lbtm;	a	DUMMY
	f	Lbtm;	b	NEAREST_ITEMS
	f	Lbtm;	c	NEAREST_LIVING_ENTITIES
	f	Lbtm;	d	NEAREST_PLAYERS
	f	Lbtm;	e	NEAREST_BED
	f	Lbtm;	f	HURT_BY
	f	Lbtm;	g	VILLAGER_HOSTILES
	f	Lbtm;	h	VILLAGER_BABIES
	f	Lbtm;	i	SECONDARY_POIS
	f	Lbtm;	j	GOLEM_DETECTED
	f	Lbtm;	k	PIGLIN_SPECIFIC_SENSOR
	f	Lbtm;	l	PIGLIN_BRUTE_SPECIFIC_SENSOR
	f	Lbtm;	m	HOGLIN_SPECIFIC_SENSOR
	f	Lbtm;	n	NEAREST_ADULT
	f	Lbtm;	o	AXOLOTL_ATTACKABLES
	f	Lbtm;	p	AXOLOTL_TEMPTATIONS
	f	Lbtm;	q	GOAT_TEMPTATIONS
	f	Lbtm;	r	FROG_TEMPTATIONS
	f	Lbtm;	s	CAMEL_TEMPTATIONS
	f	Lbtm;	t	FROG_ATTACKABLES
	f	Lbtm;	u	IS_IN_WATER
	f	Lbtm;	v	WARDEN_ENTITY_SENSOR
	f	Lbtm;	w	SNIFFER_TEMPTATIONS
	f	Ljava/util/function/Supplier;	x	factory
c	btn	net/minecraft/world/entity/ai/sensing/TemptingSensor
	m	(Lcmg;)V	<init>	<init>
		p	1		ingredient
	m	()Ljava/util/Set;	a	requires
	m	(Lakq;Lbjg;)V	a	doTick
		p	1		world
		p	2		entity
	m	(Lakq;Lbjp;)V	a	doTick
		p	1		world
		p	2		entity
	m	(Lbjp;Lakr;)Z	a	lambda$doTick$2
	m	(Lcbu;)Z	a	playerHoldingTemptation
		p	1		player
	m	(Lcjf;)Z	a	isTemptation
		p	1		stack
	m	(Lbjp;Lakr;)Z	b	lambda$doTick$1
		p	1		player
	m	(Lbjp;Lakr;)Z	c	lambda$doTick$0
		p	1		player
	f	I	a	TEMPTATION_RANGE
	f	Lbts;	c	TEMPT_TARGETING
	f	Lcmg;	d	temptations
c	bto	net/minecraft/world/entity/ai/sensing/VillagerBabiesSensor
	m	()Ljava/util/Set;	a	requires
	m	(Lakq;Lbjg;)V	a	doTick
		p	1		world
		p	2		entity
	m	(Lbjg;)Ljava/util/List;	a	getNearestVillagerBabies
		p	1		entities
	m	(Lbjg;)Z	b	isVillagerBaby
		p	1		entity
	m	(Lbjg;)Lbsj;	c	getVisibleEntities
		p	1		entity
c	btp	net/minecraft/world/entity/ai/sensing/VillagerHostilesSensor
	m	(Lbjg;Lbjg;)Z	a	isMatchingEntity
		p	1		entity
		p	2		target
	m	()Lbsh;	b	getMemory
	m	(Lbjg;)Z	b	isHostile
		p	1		entity
	m	(Lbjg;Lbjg;)Z	e	isClose
		p	1		villager
		p	2		target
	f	Lcom/google/common/collect/ImmutableMap;	a	ACCEPTABLE_DISTANCE_FROM_HOSTILES
c	btq	net/minecraft/world/entity/ai/sensing/WardenEntitySensor
	m	()Ljava/util/Set;	a	requires
	m	(Lakq;Lbjg;)V	a	doTick
		p	1		world
		p	2		entity
	m	(Lakq;Lcay;)V	a	doTick
		p	1		world
		p	2		entity
	m	(Lbjg;)Z	a	lambda$doTick$1
		p	0		entityx
	m	(Lcay;)V	a	lambda$doTick$4
	m	(Lcay;Lbjg;)V	a	lambda$doTick$3
		p	1		entityx
	m	(Lcay;Ljava/util/function/Predicate;)Ljava/util/Optional;	a	getClosest
		p	0		warden
		p	1		targetPredicate
	m	()I	b	radiusXZ
	m	(Lbjg;)Z	b	lambda$doTick$0
		p	0		entityx
	m	(Lcay;)Ljava/util/Optional;	b	lambda$doTick$2
	m	()I	c	radiusY
c	btr	net/minecraft/world/entity/ai/sensing/package-info
c	bts	net/minecraft/world/entity/ai/targeting/TargetingConditions
	m	(Z)V	<init>	<init>
		p	1		attackable
	m	()Lbts;	a	forCombat
	m	(D)Lbts;	a	range
		p	1		baseMaxDistance
	m	(Lbjg;Lbjg;)Z	a	test
		p	1		baseEntity
		p	2		targetEntity
	m	(Ljava/util/function/Predicate;)Lbts;	a	selector
		p	1		predicate
	m	()Lbts;	b	forNonCombat
	m	()Lbts;	c	copy
	m	()Lbts;	d	ignoreLineOfSight
	m	()Lbts;	e	ignoreInvisibilityTesting
	f	Lbts;	a	DEFAULT
	f	D	b	MIN_VISIBILITY_DISTANCE_FOR_INVISIBLE_TARGET
	f	Z	c	isCombat
	f	D	d	range
	f	Z	e	checkLineOfSight
	f	Z	f	testInvisible
	f	Ljava/util/function/Predicate;	g	selector
c	btt	net/minecraft/world/entity/ai/targeting/package-info
c	btu	net/minecraft/world/entity/ai/util/AirAndWaterRandomPos
	m	(Lbjp;IIIDDD)Lehn;	a	getPos
		p	0		entity
		p	1		horizontalRange
		p	2		verticalRange
		p	3		startHeight
		p	4		directionX
		p	6		directionZ
		p	8		rangeAngle
	m	(Lbjp;IIIDDDZ)Lgw;	a	generateRandomPos
		p	0		entity
		p	1		horizontalRange
		p	2		verticalRange
		p	3		startHeight
		p	4		directionX
		p	6		directionZ
		p	8		rangeAngle
		p	10		posTargetInRange
	m	(Lbjp;Lgw;)Z	a	lambda$generateRandomPos$1
		p	1		pos
	m	(Lbjp;IIIDDDZ)Lgw;	b	lambda$getPos$0
c	btv	net/minecraft/world/entity/ai/util/AirRandomPos
	m	(Lbjp;IIILehn;D)Lehn;	a	getPosTowards
		p	0		entity
		p	1		horizontalRange
		p	2		verticalRange
		p	3		startHeight
		p	4		direction
		p	5		angleRange
	m	(Lbjp;IIILehn;DZ)Lgw;	a	lambda$getPosTowards$0
c	btw	net/minecraft/world/entity/ai/util/DefaultRandomPos
	m	(Lbjp;II)Lehn;	a	getPos
		p	0		entity
		p	1		horizontalRange
		p	2		verticalRange
	m	(Lbjp;IILehn;)Lehn;	a	getPosAway
		p	0		entity
		p	1		horizontalRange
		p	2		verticalRange
		p	3		start
	m	(Lbjp;IILehn;D)Lehn;	a	getPosTowards
		p	0		entity
		p	1		horizontalRange
		p	2		verticalRange
		p	3		end
		p	4		angleRange
	m	(Lbjp;IILehn;DZ)Lgw;	a	lambda$getPosTowards$1
	m	(Lbjp;IILehn;Z)Lgw;	a	lambda$getPosAway$2
	m	(Lbjp;IIZ)Lgw;	a	lambda$getPos$0
	m	(Lbjp;IZLgw;)Lgw;	a	generateRandomPosTowardDirection
		p	0		entity
		p	1		horizontalRange
		p	2		posTargetInRange
		p	3		fuzz
c	btx	net/minecraft/world/entity/ai/util/GoalUtils
	m	(Lbji;)Z	a	hasGroundPathNavigation
		p	0		entity
	m	(Lbjp;I)Z	a	mobRestricted
		p	0		entity
		p	1		extraDistance
	m	(Lbjp;Lgw;)Z	a	isWater
		p	0		entity
		p	1		pos
	m	(Lbsp;Lgw;)Z	a	isNotStable
		p	0		navigation
		p	1		pos
	m	(Lgw;Lbjp;)Z	a	isOutsideLimits
		p	0		pos
		p	1		entity
	m	(ZLbjp;Lgw;)Z	a	isRestricted
		p	0		posTargetInRange
		p	1		entity
		p	2		pos
	m	(Lbjp;Lgw;)Z	b	hasMalus
		p	0		entity
		p	1		pos
	m	(Lbjp;Lgw;)Z	c	isSolid
		p	0		entity
		p	1		pos
c	bty	net/minecraft/world/entity/ai/util/HoverRandomPos
	m	(Lbjp;IIDDFII)Lehn;	a	getPos
		p	0		entity
		p	1		horizontalRange
		p	2		verticalRange
		p	3		x
		p	5		z
		p	7		angle
		p	8		maxAboveSolid
		p	9		minAboveSolid
	m	(Lbjp;IIDDFZII)Lgw;	a	lambda$getPos$1
	m	(Lbjp;Lgw;)Z	a	lambda$getPos$0
		p	1		pos
c	btz	net/minecraft/world/entity/ai/util/LandRandomPos
	m	(Lbjp;II)Lehn;	a	getPos
		p	0		entity
		p	1		horizontalRange
		p	2		verticalRange
	m	(Lbjp;IILehn;)Lehn;	a	getPosTowards
		p	0		entity
		p	1		horizontalRange
		p	2		verticalRange
		p	3		end
	m	(Lbjp;IILehn;Z)Lehn;	a	getPosInDirection
		p	0		entity
		p	1		horizontalRange
		p	2		verticalRange
		p	3		direction
		p	4		posTargetInRange
	m	(Lbjp;IILjava/util/function/ToDoubleFunction;)Lehn;	a	getPos
		p	0		entity
		p	1		horizontalRange
		p	2		verticalRange
		p	3		scorer
	m	(Lbjp;IIZ)Lgw;	a	lambda$getPos$0
	m	(Lbjp;IZLgw;)Lgw;	a	generateRandomPosTowardDirection
		p	0		entity
		p	1		horizontalRange
		p	2		posTargetInRange
		p	3		relativeInRangePos
	m	(Lbjp;Lgw;)Lgw;	a	movePosUpOutOfSolid
		p	0		entity
		p	1		pos
	m	(Lbjp;IILehn;)Lehn;	b	getPosAway
		p	0		entity
		p	1		horizontalRange
		p	2		verticalRange
		p	3		start
	m	(Lbjp;IILehn;Z)Lgw;	b	lambda$getPosInDirection$1
	m	(Lbjp;Lgw;)Z	b	lambda$movePosUpOutOfSolid$2
		p	1		currentPos
c	bua	net/minecraft/world/entity/ai/util/RandomPos
	m	(Lasc;II)Lgw;	a	generateRandomDirection
		p	0		random
		p	1		horizontalRange
		p	2		verticalRange
	m	(Lasc;IIIDDD)Lgw;	a	generateRandomDirectionWithinRadians
		p	0		random
		p	1		horizontalRange
		p	2		verticalRange
		p	3		startHeight
		p	4		directionX
		p	6		directionZ
		p	8		angleRange
	m	(Lbjp;ILasc;Lgw;)Lgw;	a	generateRandomPosTowardDirection
		p	0		entity
		p	1		horizontalRange
		p	2		random
		p	3		fuzz
	m	(Lbjp;Ljava/util/function/Supplier;)Lehn;	a	generateRandomPos
		p	0		entity
		p	1		factory
	m	(Lgw;IILjava/util/function/Predicate;)Lgw;	a	moveUpToAboveSolid
		p	0		pos
		p	1		extraAbove
		p	2		max
		p	3		condition
	m	(Lgw;ILjava/util/function/Predicate;)Lgw;	a	moveUpOutOfSolid
		p	0		pos
		p	1		maxY
		p	2		condition
	m	(Ljava/util/function/Supplier;Ljava/util/function/ToDoubleFunction;)Lehn;	a	generateRandomPos
		p	0		factory
		p	1		scorer
	f	I	a	RANDOM_POS_ATTEMPTS
c	bub	net/minecraft/world/entity/ai/util/package-info
c	buc	net/minecraft/world/entity/ai/village/ReputationEventType
	m	(Ljava/lang/String;)Lbuc;	a	register
		p	0		key
	f	Lbuc;	a	ZOMBIE_VILLAGER_CURED
	f	Lbuc;	b	GOLEM_KILLED
	f	Lbuc;	c	VILLAGER_HURT
	f	Lbuc;	d	VILLAGER_KILLED
	f	Lbuc;	e	TRADE
c	buc$1	net/minecraft/world/entity/ai/village/ReputationEventType$1
	f	Ljava/lang/String;	f	val$name
c	bud	net/minecraft/world/entity/ai/village/VillageSiege
	m	(Lakq;)Z	a	tryToSetupSiege
		p	1		world
	m	(Lakq;Lgw;)Lehn;	a	findRandomSpawnPos
		p	1		world
		p	2		pos
	m	(Lakq;ZZ)I	a	tick
		p	1		world
		p	2		spawnMonsters
		p	3		spawnAnimals
	m	(Lakq;)V	b	trySpawn
		p	1		world
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Z	b	hasSetupSiege
	f	Lbud$a;	c	siegeState
	f	I	d	zombiesToSpawn
	f	I	e	nextSpawnTime
	f	I	f	spawnX
	f	I	g	spawnY
	f	I	h	spawnZ
c	bud$a	net/minecraft/world/entity/ai/village/VillageSiege$State
	m	()[Lbud$a;	a	$values
	f	Lbud$a;	a	SIEGE_CAN_ACTIVATE
	f	Lbud$a;	b	SIEGE_TONIGHT
	f	Lbud$a;	c	SIEGE_DONE
	f	[Lbud$a;	d	$VALUES
c	bue	net/minecraft/world/entity/ai/village/package-info
c	buf	net/minecraft/world/entity/ai/village/poi/PoiManager
	m	(Ljava/nio/file/Path;Lcom/mojang/datafixers/DataFixer;ZLhr;Lcpx;)V	<init>	<init>
		p	1		path
		p	2		dataFixer
		p	3		dsync
		p	4		registryManager
		p	5		world
	m	(J)V	a	setDirty
		p	1		pos
	m	(Laev;Lgw;)Z	a	existsAtPosition
		p	1		type
		p	2		pos
	m	(Laev;Lhe;)Z	a	lambda$existsAtPosition$1
		p	1		entry
	m	(Lbug;)Lgw;	a	lambda$take$15
		p	0		poi
	m	(Lbuh;)Ljava/lang/Boolean;	a	lambda$isVillageCenter$23
		p	0		poiSet
	m	(Lcom/mojang/datafixers/util/Pair;)Lcpc;	a	lambda$ensureLoadedAndValid$31
	m	(Lcpc;Ljava/lang/Integer;)Ljava/util/Optional;	a	lambda$getInChunk$5
	m	(Lcpy;Lcpc;)V	a	lambda$ensureLoadedAndValid$33
	m	(Lcpy;Lgw;I)V	a	ensureLoadedAndValid
		p	1		world
		p	2		pos
		p	3		radius
	m	(Ldhr;)Z	a	mayHavePoi
		p	0		chunkSection
	m	(Ldhr;Lhw;)V	a	lambda$checkConsistencyWithBlocks$26
	m	(Ldhr;Lhw;Lbuh;)V	a	lambda$checkConsistencyWithBlocks$25
		p	3		poiSet
	m	(Ldhr;Lhw;Ljava/util/function/BiConsumer;)V	a	updateFromSection
		p	1		chunkSection
		p	2		sectionPos
		p	3		populator
	m	(Ldhr;Ljava/util/function/BiConsumer;Lgw;)V	a	lambda$updateFromSection$28
		p	2		pos
	m	(Lgw;)V	a	remove
		p	1		pos
	m	(Lgw;ILbug;)Z	a	lambda$getInRange$4
		p	2		poi
	m	(Lgw;Lbug;)D	a	lambda$findClosestWithType$11
		p	1		poi
	m	(Lgw;Lbuh;)Ljava/lang/Integer;	a	lambda$getFreeTickets$21
		p	1		poiSet
	m	(Lgw;Lcom/mojang/datafixers/util/Pair;)D	a	lambda$findAllClosestFirstWithType$9
	m	(Lgw;Lgw;)D	a	lambda$findClosest$13
	m	(Lgw;Lhe;)V	a	add
		p	1		pos
		p	2		type
	m	(Lgw;Ljava/util/function/Predicate;)Z	a	exists
		p	1		pos
		p	2		predicate
	m	(Lgw;Ljava/util/function/Predicate;Lbuh;)Ljava/lang/Boolean;	a	lambda$exists$19
		p	2		poiSet
	m	(Lhe;)Z	a	lambda$isVillageCenter$22
		p	0		entry
	m	(Lhw;)I	a	sectionsToVillage
		p	1		pos
	m	(Lhw;Ldhr;)V	a	checkConsistencyWithBlocks
		p	1		sectionPos
		p	2		chunkSection
	m	(Ljava/util/function/BiConsumer;Lgw;Lhe;)V	a	lambda$updateFromSection$27
		p	2		poiType
	m	(Ljava/util/function/BiPredicate;Lbug;)Z	a	lambda$take$14
		p	1		poi
	m	(Ljava/util/function/BooleanSupplier;)V	a	tick
		p	1		shouldKeepTicking
	m	(Ljava/util/function/Predicate;Lbuf$b;Lcpc;)Ljava/util/stream/Stream;	a	lambda$getInSquare$2
		p	3		chunkPos
	m	(Ljava/util/function/Predicate;Lbuf$b;Ljava/util/Optional;)Ljava/util/stream/Stream;	a	lambda$getInChunk$6
	m	(Ljava/util/function/Predicate;Lbug;)Z	a	lambda$getRandom$16
		p	1		poi
	m	(Ljava/util/function/Predicate;Lcpc;Lbuf$b;)Ljava/util/stream/Stream;	a	getInChunk
		p	1		typePredicate
		p	2		chunkPos
		p	3		occupationStatus
	m	(Ljava/util/function/Predicate;Lgw;ILbuf$b;)J	a	getCountInRange
		p	1		typePredicate
		p	2		pos
		p	3		radius
		p	4		occupationStatus
	m	(Ljava/util/function/Predicate;Ljava/util/function/BiPredicate;Lgw;I)Ljava/util/Optional;	a	take
		p	1		typePredicate
		p	3		pos
		p	4		radius
	m	(Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lbuf$b;Lgw;ILasc;)Ljava/util/Optional;	a	getRandom
		p	1		typePredicate
		p	2		positionPredicate
		p	3		occupationStatus
		p	4		pos
		p	5		radius
		p	6		random
	m	(Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lgw;ILbuf$b;)Ljava/util/stream/Stream;	a	findAll
		p	1		typePredicate
		p	2		posPredicate
		p	3		pos
		p	4		radius
		p	5		occupationStatus
	m	(J)V	b	onSectionLoad
		p	1		pos
	m	(Lbug;)Lcom/mojang/datafixers/util/Pair;	b	lambda$findClosestWithType$12
		p	0		poi
	m	(Lcom/mojang/datafixers/util/Pair;)Z	b	lambda$ensureLoadedAndValid$30
	m	(Lcpc;)Z	b	lambda$ensureLoadedAndValid$32
		p	1		chunkPos
	m	(Ldhr;Lhw;Ljava/util/function/BiConsumer;)V	b	lambda$checkConsistencyWithBlocks$24
		p	3		populator
	m	(Lgw;)Z	b	release
		p	1		pos
	m	(Lgw;ILbug;)Z	b	lambda$getInSquare$3
		p	2		poi
	m	(Lgw;Lbuh;)Ljava/util/Optional;	b	lambda$getType$20
		p	1		poiSet
	m	(Lgw;Lgw;)D	b	lambda$findClosest$10
	m	(Lhw;)Lcom/mojang/datafixers/util/Pair;	b	lambda$ensureLoadedAndValid$29
		p	1		sectionPos
	m	(Ljava/util/function/Predicate;Lbug;)Z	b	lambda$findAllWithType$7
		p	1		poi
	m	(Ljava/util/function/Predicate;Lgw;ILbuf$b;)Ljava/util/stream/Stream;	b	getInSquare
		p	1		typePredicate
		p	2		pos
		p	3		radius
		p	4		occupationStatus
	m	(Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lgw;ILbuf$b;)Ljava/util/stream/Stream;	b	findAllWithType
		p	1		typePredicate
		p	2		posPredicate
		p	3		pos
		p	4		radius
		p	5		occupationStatus
	m	(Lbug;)Lcom/mojang/datafixers/util/Pair;	c	lambda$findAllWithType$8
		p	0		poi
	m	(Lgw;)Ljava/util/Optional;	c	getType
		p	1		pos
	m	(Lgw;Lbuh;)Ljava/lang/Boolean;	c	lambda$release$17
		p	1		poiSet
	m	(Ljava/util/function/Predicate;Lgw;ILbuf$b;)Ljava/util/stream/Stream;	c	getInRange
		p	1		typePredicate
		p	2		pos
		p	3		radius
		p	4		occupationStatus
	m	(Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lgw;ILbuf$b;)Ljava/util/stream/Stream;	c	findAllClosestFirstWithType
		p	1		typePredicate
		p	2		posPredicate
		p	3		pos
		p	4		radius
		p	5		occupationStatus
	m	(Lgw;)I	d	getFreeTickets
		p	1		pos
	m	(Lgw;Lbuh;)V	d	lambda$remove$0
		p	1		poiSet
	m	(Ljava/util/function/Predicate;Lgw;ILbuf$b;)Ljava/util/Optional;	d	findClosest
		p	1		typePredicate
		p	2		pos
		p	3		radius
		p	4		occupationStatus
	m	(Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lgw;ILbuf$b;)Ljava/util/Optional;	d	find
		p	1		typePredicate
		p	2		posPredicate
		p	3		pos
		p	4		radius
		p	5		occupationStatus
	m	(Lgw;)Ljava/lang/IllegalStateException;	e	lambda$release$18
	m	(Ljava/util/function/Predicate;Lgw;ILbuf$b;)Ljava/util/Optional;	e	findClosestWithType
		p	1		typePredicate
		p	2		pos
		p	3		radius
		p	4		occupationStatus
	m	(Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lgw;ILbuf$b;)Ljava/util/Optional;	e	findClosest
		p	1		typePredicate
		p	2		posPredicate
		p	3		pos
		p	4		radius
		p	5		occupationStatus
	m	(J)Z	g	isVillageCenter
		p	1		pos
	f	I	a	MAX_VILLAGE_DISTANCE
	f	I	b	VILLAGE_SECTION_SIZE
	f	Lbuf$a;	d	distanceTracker
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	e	loadedChunks
c	buf$a	net/minecraft/world/entity/ai/village/poi/PoiManager$DistanceTracker
	m	()V	a	runAllUpdates
	m	(JI)V	a	setLevel
		p	1		id
		p	3		level
	m	(J)I	b	getLevelFromSource
		p	1		id
	m	(J)I	c	getLevel
		p	1		id
	f	Lbuf;	a	this$0
	f	Lit/unimi/dsi/fastutil/longs/Long2ByteMap;	b	levels
c	buf$b	net/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy
	m	(Ljava/lang/String;ILjava/util/function/Predicate;)V	<init>	<init>
		p	3		predicate
	m	()Ljava/util/function/Predicate;	a	getTest
	m	(Lbug;)Z	a	lambda$static$0
		p	0		poi
	m	()[Lbuf$b;	b	$values
	f	Lbuf$b;	a	HAS_SPACE
	f	Lbuf$b;	b	IS_OCCUPIED
	f	Lbuf$b;	c	ANY
	f	Ljava/util/function/Predicate;	d	test
	f	[Lbuf$b;	e	$VALUES
c	bug	net/minecraft/world/entity/ai/village/poi/PoiRecord
	m	(Lgw;Lhe;ILjava/lang/Runnable;)V	<init>	<init>
		p	1		pos
		p	2		type
		p	3		freeTickets
		p	4		updateListener
	m	(Lgw;Lhe;Ljava/lang/Runnable;)V	<init>	<init>
		p	1		pos
		p	2		type
		p	3		updateListener
	m	()I	a	getFreeTickets
	m	(Lbug;)Ljava/lang/Integer;	a	lambda$codec$2
		p	0		poi
	m	(Ljava/lang/Runnable;)Lcom/mojang/serialization/Codec;	a	codec
		p	0		updateListener
	m	(Ljava/lang/Runnable;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$codec$3
		p	1		instance
	m	()Z	b	acquireTicket
	m	(Lbug;)Lhe;	b	lambda$codec$1
		p	0		poi
	m	()Z	c	releaseTicket
	m	(Lbug;)Lgw;	c	lambda$codec$0
		p	0		poi
	m	()Z	d	hasSpace
	m	()Z	e	isOccupied
	m	()Lgw;	f	getPos
	m	()Lhe;	g	getPoiType
	f	Lgw;	a	pos
	f	Lhe;	b	poiType
	f	I	c	freeTickets
	f	Ljava/lang/Runnable;	d	setDirty
c	buh	net/minecraft/world/entity/ai/village/poi/PoiSection
	m	(Ljava/lang/Runnable;)V	<init>	<init>
		p	1		updateListener
	m	(Ljava/lang/Runnable;ZLjava/util/List;)V	<init>	<init>
		p	1		updateListener
		p	2		valid
		p	3		pois
	m	()Z	a	isValid
	m	(Laev;)Ljava/lang/String;	a	lambda$add$6
		p	0		key
	m	(Lbug;)Z	a	add
		p	1		poi
	m	(Lbuh;)Ljava/util/List;	a	lambda$codec$1
		p	0		poiSet
	m	(Lgw;)V	a	remove
		p	1		pos
	m	(Lgw;Lhe;)V	a	add
		p	1		pos
		p	2		type
	m	(Lgw;Lhe;S)Lbug;	a	lambda$refresh$8
	m	(Lgw;Ljava/util/function/Predicate;)Z	a	exists
		p	1		pos
		p	2		predicate
	m	(Lhe;)Ljava/util/Set;	a	lambda$add$7
		p	0		type
	m	(Lit/unimi/dsi/fastutil/shorts/Short2ObjectMap;Lgw;Lhe;)V	a	lambda$refresh$9
		p	2		pos
	m	(Ljava/lang/Runnable;)Lcom/mojang/serialization/Codec;	a	codec
		p	0		updateListener
	m	(Ljava/lang/Runnable;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$codec$2
		p	1		instance
	m	(Ljava/util/Map$Entry;)Ljava/util/stream/Stream;	a	lambda$getRecords$5
		p	0		entry
	m	(Ljava/util/function/Consumer;)V	a	refresh
		p	1		updater
	m	(Ljava/util/function/Predicate;Lbuf$b;)Ljava/util/stream/Stream;	a	getRecords
		p	1		predicate
		p	2		occupationStatus
	m	(Ljava/util/function/Predicate;Ljava/util/Map$Entry;)Z	a	lambda$getRecords$4
		p	1		entry
	m	()V	b	clear
	m	(Lbuh;)Ljava/lang/Boolean;	b	lambda$codec$0
		p	0		poiSet
	m	(Lgw;)I	b	getFreeTickets
		p	1		pos
	m	(Ljava/lang/Runnable;)Lbuh;	b	lambda$codec$3
	m	(Lgw;)Z	c	release
		p	1		pos
	m	(Lgw;)Ljava/util/Optional;	d	getType
		p	1		pos
	m	(Lgw;)Ljava/util/Optional;	e	getPoiRecord
		p	1		pos
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lit/unimi/dsi/fastutil/shorts/Short2ObjectMap;	b	records
	f	Ljava/util/Map;	c	byType
	f	Ljava/lang/Runnable;	d	setDirty
	f	Z	e	isValid
c	bui	net/minecraft/world/entity/ai/village/poi/PoiType
	m	()Ljava/util/Set;	a	matchingStates
	m	(Ldfj;)Z	a	is
		p	1		state
	m	(Lhe;)Z	a	lambda$static$0
		p	0		type
	m	()I	b	maxTickets
	m	()I	c	validRange
	f	Ljava/util/function/Predicate;	a	NONE
	f	Ljava/util/Set;	b	matchingStates
	f	I	c	maxTickets
	f	I	d	validRange
c	buj	net/minecraft/world/entity/ai/village/poi/PoiTypes
	m	(Lcsv;)Ljava/util/Set;	a	getBlockStates
		p	0		block
	m	(Ldfj;)Ljava/util/Optional;	a	forState
		p	0		state
	m	(Lhe;Ldfj;)V	a	lambda$registerBlockStates$3
		p	1		state
	m	(Lhe;Ljava/util/Set;)V	a	registerBlockStates
		p	0		poiTypeEntry
		p	1		states
	m	(Lhq;)Lbui;	a	bootstrap
		p	0		registry
	m	(Lhq;Laev;Ljava/util/Set;II)Lbui;	a	register
		p	0		registry
		p	1		key
		p	2		states
		p	3		ticketCount
		p	4		searchDistance
	m	(Ljava/lang/String;)Laev;	a	createKey
		p	0		id
	m	(Lcsv;)Ljava/util/stream/Stream;	b	lambda$static$2
	m	(Ldfj;)Z	b	hasPoi
		p	0		state
	m	(Lcsv;)Ljava/util/stream/Stream;	c	lambda$static$0
	m	(Ldfj;)Z	c	lambda$static$1
	f	Laev;	a	ARMORER
	f	Laev;	b	BUTCHER
	f	Laev;	c	CARTOGRAPHER
	f	Laev;	d	CLERIC
	f	Laev;	e	FARMER
	f	Laev;	f	FISHERMAN
	f	Laev;	g	FLETCHER
	f	Laev;	h	LEATHERWORKER
	f	Laev;	i	LIBRARIAN
	f	Laev;	j	MASON
	f	Laev;	k	SHEPHERD
	f	Laev;	l	TOOLSMITH
	f	Laev;	m	WEAPONSMITH
	f	Laev;	n	HOME
	f	Laev;	o	MEETING
	f	Laev;	p	BEEHIVE
	f	Laev;	q	BEE_NEST
	f	Laev;	r	NETHER_PORTAL
	f	Laev;	s	LODESTONE
	f	Laev;	t	LIGHTNING_ROD
	f	Ljava/util/Set;	u	BEDS
	f	Ljava/util/Set;	v	CAULDRONS
	f	Ljava/util/Map;	w	TYPE_BY_STATE
c	buk	net/minecraft/world/entity/ai/village/poi/package-info
c	bul	net/minecraft/world/entity/ambient/AmbientCreature
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcbu;)Z	a	canBeLeashed
		p	1		player
c	bum	net/minecraft/world/entity/ambient/Bat
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lbiq;)V	D	doPush
		p	1		entity
	m	()V	X	customServerAiStep
	m	(DZLdfj;Lgw;)V	a	checkFallDamage
		p	1		heightDifference
		p	3		onGround
		p	4		state
		p	5		landedPosition
	m	(Lbho;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()Z	aR	isFlapping
	m	()Lbiq$b;	aU	getMovementEmission
	m	()V	a_	defineSynchedData
	m	(Lbiu;Lcpw;Lbjk;Lgw;Lasc;)Z	b	checkBatSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	(Lbjs;Lbir;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Z	bs	isPushable
	m	(Lbho;)Lapc;	d	getHurtSound
		p	1		source
	m	()F	eV	getSoundVolume
	m	()F	eW	getVoicePitch
	m	()V	fh	pushEntities
	m	()V	l	tick
	m	()Lapc;	l_	getDeathSound
	m	()Z	p_	isIgnoringBlockTriggers
	m	()Lbkl$a;	s	createAttributes
	m	()Z	t	isResting
	m	()Lapc;	w	getAmbientSound
	m	(Z)V	w	setResting
		p	1		roosting
	m	()Z	y	isHalloween
	f	F	b	FLAP_DEGREES_PER_TICK
	f	Lbts;	bS	BAT_RESTING_TARGETING
	f	Lgw;	bT	targetPosition
	f	I	c	TICKS_PER_FLAP
	f	Laee;	d	DATA_ID_FLAGS
	f	I	e	FLAG_RESTING
c	bun	net/minecraft/world/entity/ambient/package-info
c	buo	net/minecraft/world/entity/animal/AbstractFish
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()Z	U	requiresCustomPersistence
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()Lapc;	aL	getSwimSound
	m	()V	a_	defineSynchedData
	m	(Lbjs;Lbir;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lcbu;Lbgx;)Lbgy;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lcpv;)Lbsp;	b	createNavigation
		p	1		world
	m	(Lgw;Ldfj;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()V	b_	aiStep
	m	(Lqw;)V	c	loadFromBucketTag
		p	1		nbt
	m	()I	fH	getMaxSpawnClusterSize
	m	()Z	gd	canRandomSwim
	m	()Lapc;	ge	getFlopSound
	m	(D)Z	h	removeWhenFarAway
		p	1		distanceSquared
	m	(Lehn;)V	h	travel
		p	1		movementInput
	m	(Lcjf;)V	l	saveToBucketTag
		p	1		stack
	m	()Lbkl$a;	s	createAttributes
	m	()Z	t	fromBucket
	m	(Z)V	w	setFromBucket
		p	1		fromBucket
	m	()Lapc;	y	getPickupSound
	m	()V	z	registerGoals
	f	Laee;	b	FROM_BUCKET
c	buo$a	net/minecraft/world/entity/animal/AbstractFish$FishMoveControl
	m	(Lbuo;)V	<init>	<init>
		p	1		owner
	m	()V	a	tick
	f	Lbuo;	l	fish
c	buo$b	net/minecraft/world/entity/animal/AbstractFish$FishSwimGoal
	m	(Lbuo;)V	<init>	<init>
		p	1		fish
	m	()Z	a	canUse
	f	Lbuo;	i	fish
c	bup	net/minecraft/world/entity/animal/AbstractGolem
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()I	O	getAmbientSoundInterval
	m	(Lbho;)Lapc;	d	getHurtSound
		p	1		source
	m	(D)Z	h	removeWhenFarAway
		p	1		distanceSquared
	m	()Lapc;	l_	getDeathSound
	m	()Lapc;	w	getAmbientSound
c	buq	net/minecraft/world/entity/animal/AbstractSchoolingFish
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lbuq;)Lbuq;	a	startFollowing
		p	1		groupLeader
	m	(Lcqk;Lbgw;Lbjk;Lbjz;Lqw;)Lbjz;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Ljava/util/stream/Stream;)V	a	addFollowers
		p	1		fish
	m	(Lbuq;)V	b	lambda$addFollowers$1
		p	1		fishx
	m	(Lbuq;)Z	c	lambda$addFollowers$0
		p	1		fishx
	m	()I	fH	getMaxSpawnClusterSize
	m	()Z	gd	canRandomSwim
	m	()I	gf	getMaxSchoolSize
	m	()Z	gg	isFollower
	m	()V	gh	stopFollowing
	m	()Z	gi	canBeFollowed
	m	()Z	gj	hasFollowers
	m	()Z	gk	inRangeOfLeader
	m	()V	gl	pathToLeader
	m	()V	gm	addFollower
	m	()V	gn	removeFollower
	m	()V	l	tick
	m	()V	z	registerGoals
	f	Lbuq;	b	leader
	f	I	c	schoolSize
c	buq$a	net/minecraft/world/entity/animal/AbstractSchoolingFish$SchoolSpawnGroupData
	m	(Lbuq;)V	<init>	<init>
		p	1		leader
	f	Lbuq;	a	leader
c	bur	net/minecraft/world/entity/animal/Animal
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()I	O	getAmbientSoundInterval
	m	()V	X	customServerAiStep
	m	(Lakq;Lbur;)V	a	spawnChildFromBreeding
		p	1		world
		p	2		other
	m	(Lakq;Lbur;Lbil;)V	a	finalizeSpawnChildFromBreeding
		p	1		world
		p	2		other
		p	3		baby
	m	(Lbho;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbur;)Z	a	canMate
		p	1		other
	m	(Lbur;Lbil;Lakr;)V	a	lambda$finalizeSpawnChildFromBreeding$1
		p	3		player
	m	(Lcbu;Lbgx;Lcjf;)V	a	usePlayerItem
		p	1		player
		p	2		hand
		p	3		stack
	m	(Lcoy;Lgw;)Z	a	isBrightEnoughToSpawn
		p	0		world
		p	1		pos
	m	(Lgw;Lcpy;)F	a	getWalkTargetValue
		p	1		pos
		p	2		world
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	(Lbiu;Lcpw;Lbjk;Lgw;Lasc;)Z	b	checkAnimalSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	(Lbur;)Ljava/util/Optional;	b	lambda$finalizeSpawnChildFromBreeding$0
	m	(Lcbu;Lbgx;)Lbgy;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()V	b_	aiStep
	m	()I	ed	getExperienceReward
	m	(Lcbu;)V	g	setInLove
		p	1		player
	m	()Z	ge	canFallInLove
	m	()I	gf	getInLoveTime
	m	()Lakr;	gg	getLoveCause
	m	()Z	gh	isInLove
	m	()V	gi	resetLove
	m	(D)Z	h	removeWhenFarAway
		p	1		distanceSquared
	m	(Lcjf;)Z	m	isFood
		p	1		stack
	m	(I)V	s	setInLoveTime
		p	1		loveTicks
	f	I	bT	inLove
	f	Ljava/util/UUID;	bU	loveCause
	f	I	bV	PARENT_AGE_AFTER_BREEDING
c	bus	net/minecraft/world/entity/animal/Bee
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lbus;)Lasc;	A	access$2600
	m	(Lbus;)Lasc;	B	access$2700
	m	(Lbiq;)Z	C	doHurtTarget
		p	1		target
	m	(Lbus;)Lasc;	C	access$2800
	m	(F)F	E	getRollAmount
		p	1		tickDelta
	m	()V	W	sendDebugPackets
	m	()V	X	customServerAiStep
	m	()I	a	getRemainingPersistentAngerTime
	m	(DZLdfj;Lgw;)V	a	checkFallDamage
		p	1		heightDifference
		p	3		onGround
		p	4		state
		p	5		landedPosition
	m	(I)V	a	setRemainingPersistentAngerTime
		p	1		angerTime
	m	(Lakq;Lbil;)Lbil;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lbho;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbus;)Lbsp;	a	access$000
	m	(Lcpv;DDDDDLit;)V	a	spawnFluidParticle
		p	1		world
		p	2		lastX
		p	4		x
		p	6		lastZ
		p	8		z
		p	10		y
		p	12		effect
	m	(Lgw;Lcpy;)F	a	getWalkTargetValue
		p	1		pos
		p	2		world
	m	(Ljava/util/UUID;)V	a	setPersistentAngerTarget
		p	1		angryAt
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()Z	aR	isFlapping
	m	()V	a_	defineSynchedData
	m	()Ljava/util/UUID;	b	getPersistentAngerTarget
	m	(Lakq;Lbil;)Lbus;	b	getBreedOffspring
	m	(Lbjs;Lbir;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lbus;)Lasc;	b	access$100
	m	(Lcpv;)Lbsp;	b	createNavigation
		p	1		world
	m	(Lgw;I)Z	b	closerThan
		p	1		pos
		p	2		distance
	m	(Lgw;Ldfj;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()V	b_	aiStep
	m	()V	c	startPersistentAngerTimer
	m	(Laqh;)V	c	jumpInLiquid
		p	1		fluid
	m	(Lbus;)Lbsp;	c	access$200
	m	()Lehn;	cI	getLeashOffset
	m	(IZ)V	d	setFlag
		p	1		bit
		p	2		value
	m	(Lbho;)Lapc;	d	getHurtSound
		p	1		source
	m	(Lbus;)Lbsp;	d	access$300
	m	(Lbus;)Lbsp;	e	access$400
	m	()Lbjl;	eR	getMobType
	m	()F	eV	getSoundVolume
	m	(Lbus;)Lbsp;	f	access$500
	m	(Lbus;)Lbsp;	g	access$600
	m	()Z	gA	isRolling
	m	()Ljava/util/List;	gd	getBlacklistedHives
	m	()V	gj	resetTicksWithoutNectarSinceExitingHive
	m	()Z	gk	hasHive
	m	()Lgw;	gl	getHivePos
	m	()Lbqc;	gm	getGoalSelector
	m	()Z	gn	hasNectar
	m	()Z	go	hasStung
	m	()Lbkl$a;	gp	createAttributes
	m	()Z	gq	isFlying
	m	()V	gr	dropOffNectar
	m	()Z	gs	isTiredOfLookingForNectar
	m	()Z	gt	wantsToEnterHive
	m	()V	gu	updateRollAmount
	m	()Z	gv	isHiveNearFire
	m	()I	gw	getCropsGrownSincePollination
	m	()V	gx	resetNumCropsGrownSincePollination
	m	()V	gy	incrementNumCropsGrownSincePollination
	m	()Z	gz	isHiveValid
	m	(Lbus;)Lbsp;	h	access$700
	m	(Lbus;)Lbsp;	i	access$800
	m	(Lgw;)V	i	setSavedFlowerPos
		p	1		flowerPos
	m	(Lbus;)Lbsp;	j	access$900
	m	(Lgw;)V	j	pathfindRandomlyTowards
		p	1		pos
	m	(Lbus;)Lbsp;	k	access$1000
	m	(Lgw;)Z	k	doesHiveHaveSpace
		p	1		pos
	m	()V	l	tick
	m	(Lbus;)Lbsp;	l	access$1100
	m	(Lgw;)Z	l	isTooFarAway
		p	1		pos
	m	()Lapc;	l_	getDeathSound
	m	(Lbus;)Lbsp;	m	access$1200
	m	(Lcjf;)Z	m	isFood
		p	1		stack
	m	(Lgw;)Z	m	isFlowerValid
		p	1		pos
	m	(Lbus;)Lbsp;	n	access$1300
	m	(Lbus;)Lbsp;	o	access$1400
	m	(Lbus;)Lbsp;	p	access$1500
	m	(Lbus;)Lbsp;	q	access$1600
	m	(Lbus;)Lbsp;	r	access$1700
	m	()Lgw;	s	getSavedFlowerPos
	m	(Lbus;)Lbsp;	s	access$1800
	m	()Z	t	hasSavedFlowerPos
	m	(I)V	t	setStayOutOfHiveCountdown
		p	1		cannotEnterHiveTicks
	m	(Lbus;)Lasc;	t	access$1900
	m	(I)Z	u	getFlag
		p	1		location
	m	(Lbus;)Lasc;	u	access$2000
	m	(Lbus;)Lbsp;	v	access$2100
	m	()Lapc;	w	getAmbientSound
	m	(Lbus;)Lasc;	w	access$2200
	m	(Z)V	w	setHasNectar
		p	1		hasNectar
	m	(Lbus;)Lbsp;	x	access$2300
	m	(Z)V	x	setHasStung
		p	1		hasStung
	m	()I	y	getTravellingTicks
	m	(Lbus;)Lasc;	y	access$2400
	m	(Z)V	y	setRolling
		p	1		nearTarget
	m	()V	z	registerGoals
	m	(Lbus;)Lasc;	z	access$2500
	f	F	bT	FLAP_DEGREES_PER_TICK
	f	I	bU	TICKS_PER_FLAP
	f	Ljava/lang/String;	bW	TAG_CROPS_GROWN_SINCE_POLLINATION
	f	Ljava/lang/String;	bX	TAG_CANNOT_ENTER_HIVE_TICKS
	f	Ljava/lang/String;	bY	TAG_TICKS_SINCE_POLLINATION
	f	Ljava/lang/String;	bZ	TAG_HAS_STUNG
	f	I	cA	numCropsGrownSincePollination
	f	I	cB	COOLDOWN_BEFORE_LOCATING_NEW_HIVE
	f	I	cC	remainingCooldownBeforeLocatingNewHive
	f	I	cD	COOLDOWN_BEFORE_LOCATING_NEW_FLOWER
	f	I	cE	remainingCooldownBeforeLocatingNewFlower
	f	Lgw;	cF	savedFlowerPos
	f	Lgw;	cG	hivePos
	f	Lbus$k;	cH	beePollinateGoal
	f	Lbus$e;	cI	goToHiveGoal
	f	Lbus$f;	cJ	goToKnownFlowerGoal
	f	I	cK	underWaterTicks
	f	Ljava/lang/String;	ca	TAG_HAS_NECTAR
	f	Ljava/lang/String;	cb	TAG_FLOWER_POS
	f	Ljava/lang/String;	cc	TAG_HIVE_POS
	f	Laee;	cd	DATA_FLAGS_ID
	f	Laee;	ce	DATA_REMAINING_ANGER_TIME
	f	I	cf	FLAG_ROLL
	f	I	cg	FLAG_HAS_STUNG
	f	I	ch	FLAG_HAS_NECTAR
	f	I	ci	STING_DEATH_COUNTDOWN
	f	I	cj	TICKS_BEFORE_GOING_TO_KNOWN_FLOWER
	f	I	ck	TICKS_WITHOUT_NECTAR_BEFORE_GOING_HOME
	f	I	cl	MIN_ATTACK_DIST
	f	I	cm	MAX_CROPS_GROWABLE
	f	I	cn	POISON_SECONDS_NORMAL
	f	I	co	POISON_SECONDS_HARD
	f	I	cp	TOO_FAR_DISTANCE
	f	I	cq	HIVE_CLOSE_ENOUGH_DISTANCE
	f	I	cr	PATHFIND_TO_HIVE_WHEN_CLOSER_THAN
	f	I	cs	HIVE_SEARCH_DISTANCE
	f	Lbgj;	ct	PERSISTENT_ANGER_TIME
	f	Ljava/util/UUID;	cu	persistentAngerTarget
	f	F	cv	rollAmount
	f	F	cw	rollAmountO
	f	I	cx	timeSinceSting
	f	I	cy	ticksWithoutNectarSinceExitingHive
	f	I	cz	stayOutOfHiveCountdown
c	bus$1	net/minecraft/world/entity/animal/Bee$1
	m	(Lbus;Lbji;Lcpv;)V	<init>	<init>
		p	2		entity
		p	3		world
	m	(Lgw;)Z	a	isStableDestination
		p	1		pos
	m	()V	c	tick
	f	Lbus;	p	this$0
c	bus$a	net/minecraft/world/entity/animal/Bee$BaseBeeGoal
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()Z	h	canBeeUse
	m	()Z	i	canBeeContinueToUse
	f	Lbus;	a	this$0
c	bus$b	net/minecraft/world/entity/animal/Bee$BeeAttackGoal
	m	(Lbus;Lbjp;DZ)V	<init>	<init>
		p	2		mob
		p	3		speed
		p	5		pauseWhenMobIdle
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	f	Lbus;	b	this$0
c	bus$c	net/minecraft/world/entity/animal/Bee$BeeBecomeAngryTargetGoal
	m	(Lbus;)V	<init>	<init>
		p	1		bee
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()Z	i	beeCanTarget
c	bus$d	net/minecraft/world/entity/animal/Bee$BeeEnterHiveGoal
	m	()V	c	start
	m	()Z	h	canBeeUse
	m	()Z	i	canBeeContinueToUse
	f	Lbus;	b	this$0
c	bus$e	net/minecraft/world/entity/animal/Bee$BeeGoToHiveGoal
	m	()Z	a	canUse
	m	(Lgw;)Z	a	pathfindDirectlyTowards
		p	1		pos
	m	()Z	b	canContinueToUse
	m	(Lgw;)Z	b	isTargetBlacklisted
		p	1		pos
	m	()V	c	start
	m	(Lgw;)V	c	blacklistTarget
		p	1		pos
	m	()V	d	stop
	m	(Lgw;)Z	d	hasReachedTarget
		p	1		pos
	m	()V	e	tick
	m	()Z	h	canBeeUse
	m	()Z	i	canBeeContinueToUse
	m	()V	k	clearBlacklist
	m	()V	l	dropAndBlacklistHive
	m	()V	m	dropHive
	f	I	b	MAX_TRAVELLING_TICKS
	f	Lbus;	c	this$0
	f	I	d	travellingTicks
	f	I	e	MAX_BLACKLISTED_TARGETS
	f	Ljava/util/List;	f	blacklistedTargets
	f	Lebb;	g	lastPath
	f	I	h	TICKS_BEFORE_HIVE_DROP
	f	I	i	ticksStuck
c	bus$f	net/minecraft/world/entity/animal/Bee$BeeGoToKnownFlowerGoal
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	m	()Z	h	canBeeUse
	m	()Z	i	canBeeContinueToUse
	m	()Z	k	wantsToGoToKnownFlower
	f	Lbus;	b	this$0
	f	I	c	MAX_TRAVELLING_TICKS
	f	I	d	travellingTicks
c	bus$g	net/minecraft/world/entity/animal/Bee$BeeGrowCropGoal
	m	()V	e	tick
	m	()Z	h	canBeeUse
	m	()Z	i	canBeeContinueToUse
	f	I	b	GROW_CHANCE
	f	Lbus;	c	this$0
c	bus$h	net/minecraft/world/entity/animal/Bee$BeeHurtByOtherGoal
	m	(Lbus;Lbus;)V	<init>	<init>
		p	2		bee
	m	(Lbji;Lbjg;)V	a	alertOther
		p	1		mob
		p	2		target
	m	()Z	b	canContinueToUse
	f	Lbus;	a	this$0
c	bus$i	net/minecraft/world/entity/animal/Bee$BeeLocateHiveGoal
	m	(Lgw;Lgw;)D	a	lambda$findNearbyHivesWithSpace$1
	m	(Lhe;)Z	a	lambda$findNearbyHivesWithSpace$0
		p	0		poiType
	m	()V	c	start
	m	()Z	h	canBeeUse
	m	()Z	i	canBeeContinueToUse
	m	()Ljava/util/List;	k	findNearbyHivesWithSpace
	f	Lbus;	b	this$0
c	bus$j	net/minecraft/world/entity/animal/Bee$BeeLookControl
	m	(Lbus;Lbji;)V	<init>	<init>
		p	2		entity
	m	()V	a	tick
	m	()Z	c	resetXRotOnTick
	f	Lbus;	h	this$0
c	bus$k	net/minecraft/world/entity/animal/Bee$BeePollinateGoal
	m	()Z	Q_	requiresUpdateEveryTick
	m	(Ldfj;)Z	a	lambda$new$0
		p	0		state
	m	(Ljava/util/function/Predicate;D)Ljava/util/Optional;	a	findNearestBlock
		p	1		predicate
		p	2		searchDistance
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	m	()Z	h	canBeeUse
	m	()Z	i	canBeeContinueToUse
	m	()Z	k	hasPollinatedLongEnough
	m	()Z	l	isPollinating
	m	()V	m	stopPollinating
	m	()V	n	setWantedPos
	m	()F	o	getOffset
	m	()Ljava/util/Optional;	p	findNearbyFlower
	f	Lbus;	b	this$0
	f	I	c	MIN_POLLINATION_TICKS
	f	I	d	MIN_FIND_FLOWER_RETRY_COOLDOWN
	f	I	e	MAX_FIND_FLOWER_RETRY_COOLDOWN
	f	Ljava/util/function/Predicate;	f	VALID_POLLINATION_BLOCKS
	f	D	g	ARRIVAL_THRESHOLD
	f	I	h	POSITION_CHANGE_CHANCE
	f	F	i	SPEED_MODIFIER
	f	F	j	HOVER_HEIGHT_WITHIN_FLOWER
	f	F	k	HOVER_POS_OFFSET
	f	I	l	successfulPollinatingTicks
	f	I	m	lastSoundPlayedTick
	f	Z	n	pollinating
	f	Lehn;	o	hoverPos
	f	I	p	pollinatingTicks
	f	I	q	MAX_POLLINATING_TICKS
c	bus$l	net/minecraft/world/entity/animal/Bee$BeeWanderGoal
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()Lehn;	h	findPos
	f	Lbus;	a	this$0
	f	I	b	WANDER_THRESHOLD
c	but	net/minecraft/world/entity/animal/Bucketable
	m	(Lbji;Lcjf;)V	a	saveDefaultDataToBucketTag
		p	0		entity
		p	1		stack
	m	(Lbji;Lqw;)V	a	loadDefaultDataFromBucketTag
		p	0		entity
		p	1		nbt
	m	(Lcbu;Lbgx;Lbjg;)Ljava/util/Optional;	a	bucketMobPickup
		p	0		player
		p	1		hand
		p	2		entity
	m	()Lcjf;	b	getBucketItemStack
	m	(Lqw;)V	c	loadFromBucketTag
		p	1		nbt
	m	(Lcjf;)V	l	saveToBucketTag
		p	1		stack
	m	()Z	t	fromBucket
	m	(Z)V	w	setFromBucket
		p	1		fromBucket
	m	()Lapc;	y	getPickupSound
c	buu	net/minecraft/world/entity/animal/Cat
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Z)V	A	setLying
		p	1		sleeping
	m	(Z)V	B	setRelaxStateOne
		p	1		headDown
	m	(Lbiq;)Z	C	doHurtTarget
		p	1		target
	m	(F)F	E	getLieDownAmount
		p	1		tickDelta
	m	(F)F	F	getLieDownAmountTail
		p	1		tickDelta
	m	(F)F	G	getRelaxStateOneAmount
		p	1		tickDelta
	m	()I	O	getAmbientSoundInterval
	m	()V	X	customServerAiStep
	m	(Lakq;Lbil;)Lbil;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lbiq;Lbir;F)Lorg/joml/Vector3f;	a	getPassengerAttachmentPoint
		p	1		passenger
		p	2		dimensions
		p	3		scaleFactor
	m	(Lbur;)Z	a	canMate
		p	1		other
	m	(Lbuv;)V	a	setVariant
		p	1		variant
	m	(Lcbu;Lbgx;Lcjf;)V	a	usePlayerItem
		p	1		player
		p	2		hand
		p	3		stack
	m	(Lcht;)V	a	setCollarColor
		p	1		color
	m	(Lcqk;Lbgw;Lbjk;Lbjz;Lqw;)Lbjz;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lcqk;Lhi$c;)Ljava/util/Optional;	a	lambda$finalizeSpawn$0
		p	1		list
	m	(Ljava/lang/Object;)V	a	setVariant
		p	1		variant
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(Lakq;Lbil;)Lbuu;	b	getBreedOffspring
	m	(Lbjs;Lbir;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lcbu;Lbgx;)Lbgy;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Z	bS	isSteppingCarefully
	m	()Ljava/lang/Object;	c	getVariant
	m	(Lhe;)V	c	lambda$finalizeSpawn$1
		p	1		variant
	m	(Lbho;)Lapc;	d	getHurtSound
		p	1		source
	m	()Laew;	gj	getResourceLocation
	m	()Lbuv;	gk	getVariant
	m	()Z	gl	isLying
	m	()Z	gm	isRelaxStateOne
	m	()Lcht;	gn	getCollarColor
	m	()V	go	hiss
	m	()Lbkl$a;	gp	createAttributes
	m	()F	gq	getAttackDamage
	m	()V	gr	handleLieDown
	m	()V	gs	updateLieDownAmount
	m	()V	gt	updateRelaxStateOneAmount
	m	(D)Z	h	removeWhenFarAway
		p	1		distanceSquared
	m	()V	l	tick
	m	()Lapc;	l_	getDeathSound
	m	(Lcjf;)Z	m	isFood
		p	1		stack
	m	()V	t	reassessTameGoals
	m	()Lapc;	w	getAmbientSound
	m	()V	z	registerGoals
	f	D	bW	TEMPT_SPEED_MOD
	f	D	bX	WALK_SPEED_MOD
	f	D	bY	SPRINT_SPEED_MOD
	f	Lcmg;	bZ	TEMPT_INGREDIENT
	f	Laee;	ca	DATA_VARIANT_ID
	f	Laee;	cb	IS_LYING
	f	Laee;	cc	RELAX_STATE_ONE
	f	Laee;	cd	DATA_COLLAR_COLOR
	f	Lbuu$a;	ce	avoidPlayersGoal
	f	Lbrj;	cf	temptGoal
	f	F	cg	lieDownAmount
	f	F	ch	lieDownAmountO
	f	F	ci	lieDownAmountTail
	f	F	cj	lieDownAmountOTail
	f	F	ck	relaxStateOneAmount
	f	F	cl	relaxStateOneAmountO
c	buu$a	net/minecraft/world/entity/animal/Cat$CatAvoidEntityGoal
	m	(Lbuu;Ljava/lang/Class;FDD)V	<init>	<init>
		p	1		cat
		p	2		fleeFromType
		p	3		distance
		p	4		slowSpeed
		p	6		fastSpeed
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	f	Lbuu;	i	cat
c	buu$b	net/minecraft/world/entity/animal/Cat$CatRelaxOnOwnerGoal
	m	(Lbuu;)V	<init>	<init>
		p	1		cat
	m	()Z	a	canUse
	m	(Lgw;)Lgw;	a	lambda$canUse$1
	m	(Lgw;Lha;)Lgw;	a	lambda$canUse$0
		p	1		direction
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	m	()Z	h	spaceIsOccupied
	m	()V	i	giveMorningGift
	f	Lbuu;	a	cat
	f	Lcbu;	b	ownerPlayer
	f	Lgw;	c	goalPos
	f	I	d	onBedTicks
c	buu$c	net/minecraft/world/entity/animal/Cat$CatTemptGoal
	m	(Lbuu;DLcmg;Z)V	<init>	<init>
		p	1		cat
		p	2		speed
		p	4		food
		p	5		canBeScared
	m	()Z	a	canUse
	m	()V	e	tick
	m	()Z	h	canScare
	f	Lcbu;	c	selectedPlayer
	f	Lbuu;	d	cat
c	buv	net/minecraft/world/entity/animal/CatVariant
	m	()Laew;	a	texture
	m	(Lhq;)Lbuv;	a	bootstrap
		p	0		registry
	m	(Lhq;Laev;Ljava/lang/String;)Lbuv;	a	register
		p	0		registry
		p	1		key
		p	2		textureId
	m	(Ljava/lang/String;)Laev;	a	createKey
		p	0		id
	f	Laev;	a	TABBY
	f	Laev;	b	BLACK
	f	Laev;	c	RED
	f	Laev;	d	SIAMESE
	f	Laev;	e	BRITISH_SHORTHAIR
	f	Laev;	f	CALICO
	f	Laev;	g	PERSIAN
	f	Laev;	h	RAGDOLL
	f	Laev;	i	WHITE
	f	Laev;	j	JELLIE
	f	Laev;	k	ALL_BLACK
	f	Laew;	l	texture
c	buw	net/minecraft/world/entity/animal/Chicken
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lakq;Lbil;)Lbil;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lbiq;Lbiq$a;)V	a	positionRider
		p	1		passenger
		p	2		positionUpdater
	m	(Lbiq;Lbir;F)Lorg/joml/Vector3f;	a	getPassengerAttachmentPoint
		p	1		passenger
		p	2		dimensions
		p	3		scaleFactor
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	aQ	onFlap
	m	()Z	aR	isFlapping
	m	(Lakq;Lbil;)Lbuw;	b	getBreedOffspring
	m	(Lbjs;Lbir;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lgw;Ldfj;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()V	b_	aiStep
	m	(Lbho;)Lapc;	d	getHurtSound
		p	1		source
	m	()I	ed	getExperienceReward
	m	(D)Z	h	removeWhenFarAway
		p	1		distanceSquared
	m	()Lapc;	l_	getDeathSound
	m	(Lcjf;)Z	m	isFood
		p	1		stack
	m	()Lbkl$a;	s	createAttributes
	m	()Z	t	isChickenJockey
	m	()Lapc;	w	getAmbientSound
	m	(Z)V	w	setChickenJockey
		p	1		hasJockey
	m	()V	z	registerGoals
	f	F	bT	flap
	f	F	bU	flapSpeed
	f	F	bW	oFlapSpeed
	f	F	bX	oFlap
	f	F	bY	flapping
	f	I	bZ	eggTime
	f	Z	ca	isChickenJockey
	f	Lcmg;	cb	FOOD_ITEMS
	f	F	cc	nextFlap
c	bux	net/minecraft/world/entity/animal/Cod
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()Lcjf;	b	getBucketItemStack
	m	(Lbho;)Lapc;	d	getHurtSound
		p	1		source
	m	()Lapc;	ge	getFlopSound
	m	()Lapc;	l_	getDeathSound
	m	()Lapc;	w	getAmbientSound
c	buy	net/minecraft/world/entity/animal/Cow
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lakq;Lbil;)Lbil;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lbiq;Lbir;F)Lorg/joml/Vector3f;	a	getPassengerAttachmentPoint
		p	1		passenger
		p	2		dimensions
		p	3		scaleFactor
	m	(Lakq;Lbil;)Lbuy;	b	getBreedOffspring
	m	(Lbjs;Lbir;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lcbu;Lbgx;)Lbgy;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lgw;Ldfj;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lbho;)Lapc;	d	getHurtSound
		p	1		source
	m	()F	eV	getSoundVolume
	m	()Lapc;	l_	getDeathSound
	m	()Lbkl$a;	s	createAttributes
	m	()Lapc;	w	getAmbientSound
	m	()V	z	registerGoals
c	buz	net/minecraft/world/entity/animal/Dolphin
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lbiq;)Z	C	doHurtTarget
		p	1		target
	m	()I	Y	getMaxHeadXRot
	m	()I	Z	getMaxHeadYRot
	m	(Lbuz;)Lasc;	a	access$000
	m	(Lcbu;)Z	a	canBeLeashed
		p	1		player
	m	(Lcqk;Lbgw;Lbjk;Lbjz;Lqw;)Lbjz;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lit;)V	a	addParticlesAroundSelf
		p	1		parameters
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()Lapc;	aL	getSwimSound
	m	()Lapc;	aM	getSwimSplashSound
	m	()V	a_	defineSynchedData
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	(I)V	b	handleAirSupply
		p	1		air
	m	(Lbjs;Lbir;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lbuz;)Lasc;	b	access$100
	m	(Lbyn;)V	b	pickUpItem
		p	1		item
	m	(Lcbu;Lbgx;)Lbgy;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lcpv;)Lbsp;	b	createNavigation
		p	1		world
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(I)V	c	setMoisntessLevel
		p	1		moistness
	m	(Lbuz;)Lasc;	c	access$200
	m	(Lbyn;)Z	c	lambda$static$0
		p	0		item
	m	()I	cg	getMaxAirSupply
	m	(Lbho;)Lapc;	d	getHurtSound
		p	1		source
	m	()Z	dQ	canBreatheUnderwater
	m	(Lcjf;)Z	f	canTakeItem
		p	1		stack
	m	()Lbkl$a;	gd	createAttributes
	m	()Z	ge	closeToNextPos
	m	(Lehn;)V	h	travel
		p	1		movementInput
	m	(Lgw;)V	i	setTreasurePos
		p	1		treasurePos
	m	()V	l	tick
	m	()Lapc;	l_	getDeathSound
	m	(I)I	n	increaseAirSupply
		p	1		air
	m	(Lbiq;)Z	o	canRide
		p	1		entity
	m	()Lgw;	s	getTreasurePos
	m	()Z	t	gotFish
	m	()Lapc;	w	getAmbientSound
	m	(Z)V	w	setGotFish
		p	1		hasFish
	m	()I	y	getMoistnessLevel
	m	()V	z	registerGoals
	f	I	b	TOTAL_AIR_SUPPLY
	f	Laee;	bT	MOISTNESS_LEVEL
	f	Lbts;	bU	SWIM_WITH_PLAYER_TARGETING
	f	I	bV	TOTAL_MOISTNESS_LEVEL
	f	Ljava/util/function/Predicate;	c	ALLOWED_ITEMS
	f	Laee;	d	TREASURE_POS
	f	Laee;	e	GOT_FISH
c	buz$a	net/minecraft/world/entity/animal/Dolphin$DolphinSwimToTreasureGoal
	m	(Lbuz;)V	<init>	<init>
		p	1		dolphin
	m	()Z	P_	isInterruptable
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lbuz;	a	dolphin
	f	Z	b	stuck
c	buz$b	net/minecraft/world/entity/animal/Dolphin$DolphinSwimWithPlayerGoal
	m	(Lbuz;D)V	<init>	<init>
		p	1		dolphin
		p	2		speed
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lbuz;	a	dolphin
	f	D	b	speedModifier
	f	Lcbu;	c	player
c	buz$c	net/minecraft/world/entity/animal/Dolphin$PlayWithItemsGoal
	m	()Z	a	canUse
	m	(Lcjf;)V	a	drop
		p	1		stack
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lbuz;	a	this$0
	f	I	b	cooldown
c	bva	net/minecraft/world/entity/animal/FlyingAnimal
	m	()Z	gq	isFlying
c	bvb	net/minecraft/world/entity/animal/Fox
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Z)V	A	setFaceplanted
		p	1		walking
	m	(Z)V	B	setDefending
		p	1		aggressive
	m	(Z)V	C	setSleeping
		p	1		sleeping
	m	(F)F	E	getHeadRollAngle
		p	1		tickDelta
	m	(F)F	F	getCrouchAmount
		p	1		tickDelta
	m	()V	P	playAmbientSound
	m	(Lakq;Lbil;)Lbil;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lasc;Lbgw;)V	a	populateDefaultEquipmentSlots
		p	1		random
		p	2		localDifficulty
	m	(Lbiq;)Z	a	lambda$static$3
		p	0		entity
	m	(Lbiq;Lbir;F)Lorg/joml/Vector3f;	a	getPassengerAttachmentPoint
		p	1		passenger
		p	2		dimensions
		p	3		scaleFactor
	m	(Lbvb$v;)V	a	setVariant
		p	1		variant
	m	(Lbvb;)Z	a	access$000
	m	(Lbvb;Lbjg;)Z	a	isPathClear
		p	0		fox
		p	1		chasedEntity
	m	(Lcbu;Lbgx;Lcjf;)V	a	usePlayerItem
		p	1		player
		p	2		hand
		p	3		stack
	m	(Lcbu;Lbji;)V	a	onOffspringSpawnedFromEgg
		p	1		player
		p	2		child
	m	(Lcqk;Lbgw;Lbjk;Lbjz;Lqw;)Lbjz;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Ljava/lang/Object;)V	a	setVariant
		p	1		variant
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	(Lakq;Lbil;)Lbvb;	b	getBreedOffspring
	m	(Lbiq;)Z	b	lambda$static$2
		p	0		entity
	m	(Lbjs;Lbir;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lbvb;)Lasc;	b	access$100
	m	(Lbyn;)V	b	pickUpItem
		p	1		item
	m	(Ljava/util/UUID;)V	b	addTrustedUUID
		p	1		uuid
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Z	bW	isCrouching
	m	()V	b_	aiStep
	m	()Ljava/lang/Object;	c	getVariant
	m	(Lbiq;)Z	c	lambda$static$1
		p	0		entity
	m	(Lbiu;Lcpw;Lbjk;Lgw;Lasc;)Z	c	checkFoxSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	(Lbvb;)Lasc;	c	access$200
	m	(Lbyn;)Z	c	lambda$static$0
		p	0		item
	m	(Ljava/util/UUID;)Z	c	trusts
		p	1		uuid
	m	()Lehn;	cI	getLeashOffset
	m	(FF)I	d	calculateFallDamage
		p	1		fallDistance
		p	2		damageMultiplier
	m	(IZ)V	d	setFlag
		p	1		mask
		p	2		value
	m	(Lbho;)Lapc;	d	getHurtSound
		p	1		source
	m	(Lbvb;)Lasc;	d	access$300
	m	(Lcjf;)Lapc;	d	getEatingSound
		p	1		stack
	m	()Z	eX	isImmobile
	m	(Lcjf;)Z	f	canTakeItem
		p	1		stack
	m	()Z	fC	isSleeping
	m	(Lbho;)V	g	dropAllDeathLoot
		p	1		source
	m	()Z	gd	isFaceplanted
	m	()Z	gj	isPouncing
	m	()Z	gk	isJumping
	m	()Z	gl	isFullyCrouched
	m	()Z	gm	isInterested
	m	()V	gn	setTargetGoals
	m	()Ljava/util/List;	go	getTrustedUUIDs
	m	()Z	gp	isDefending
	m	()V	gq	wakeUp
	m	()V	gr	clearStates
	m	()Z	gs	canMove
	m	(Lbjg;)V	h	setTarget
		p	1		target
	m	(Lbjg;)Z	j	lambda$registerGoals$9
		p	1		entity
	m	(Lcjf;)Z	j	canHoldItem
		p	1		stack
	m	(Lbjg;)Z	k	lambda$registerGoals$8
		p	1		entity
	m	()V	l	tick
	m	(Lbjg;)Z	l	lambda$registerGoals$7
		p	1		entity
	m	(Lcjf;)Z	l	canEat
		p	1		stack
	m	()Lapc;	l_	getDeathSound
	m	(Lbjg;)Z	m	lambda$registerGoals$6
		p	1		entity
	m	(Lcjf;)Z	m	isFood
		p	1		stack
	m	(Lbjg;)Z	n	lambda$registerGoals$5
		p	0		entity
	m	(Lcjf;)V	n	spitOutItem
		p	1		stack
	m	(Lbjg;)Z	o	lambda$registerGoals$4
		p	0		entity
	m	(Lcjf;)V	o	dropItemStack
		p	1		stack
	m	()Lbkl$a;	s	createAttributes
	m	()Lbvb$v;	t	getVariant
	m	(I)Z	t	getFlag
		p	1		bitmask
	m	()Lapc;	w	getAmbientSound
	m	(Z)V	w	setSitting
		p	1		sitting
	m	(Z)V	x	setIsPouncing
		p	1		chasing
	m	()Z	y	isSitting
	m	(Z)V	y	setIsCrouching
		p	1		crouching
	m	()V	z	registerGoals
	m	(Z)V	z	setIsInterested
		p	1		rollingHead
	f	I	bT	FLAG_CROUCHING
	f	I	bU	FLAG_INTERESTED
	f	I	bW	FLAG_POUNCING
	f	Laee;	bX	DATA_TYPE_ID
	f	Laee;	bY	DATA_FLAGS_ID
	f	I	bZ	FLAG_SITTING
	f	I	ca	FLAG_SLEEPING
	f	I	cb	FLAG_FACEPLANTED
	f	I	cc	FLAG_DEFENDING
	f	Laee;	cd	DATA_TRUSTED_ID_0
	f	Laee;	ce	DATA_TRUSTED_ID_1
	f	Ljava/util/function/Predicate;	cf	ALLOWED_ITEMS
	f	Ljava/util/function/Predicate;	cg	TRUSTED_TARGET_SELECTOR
	f	Ljava/util/function/Predicate;	ch	STALKABLE_PREY
	f	Ljava/util/function/Predicate;	ci	AVOID_PLAYERS
	f	I	cj	MIN_TICKS_BEFORE_EAT
	f	Lbqb;	ck	landTargetGoal
	f	Lbqb;	cl	turtleEggTargetGoal
	f	Lbqb;	cm	fishTargetGoal
	f	F	cn	interestedAngle
	f	F	co	interestedAngleO
	f	F	cp	crouchAmount
	f	F	cq	crouchAmountO
	f	I	cr	ticksSinceEaten
c	bvb$a	net/minecraft/world/entity/animal/Fox$DefendTrustedTargetGoal
	m	(Lbvb;Ljava/lang/Class;ZZLjava/util/function/Predicate;)V	<init>	<init>
		p	2		targetEntityClass
		p	3		checkVisibility
		p	4		checkCanNavigate
		p	5		targetPredicate
	m	()Z	a	canUse
	m	()V	c	start
	f	Lbvb;	i	this$0
	f	Lbjg;	j	trustedLastHurtBy
	f	Lbjg;	k	trustedLastHurt
	f	I	l	timestamp
c	bvb$b	net/minecraft/world/entity/animal/Fox$FaceplantGoal
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	I	a	countdown
	f	Lbvb;	b	this$0
c	bvb$c	net/minecraft/world/entity/animal/Fox$FoxAlertableEntitiesSelector
	m	(Lbjg;)Z	a	test
	f	Lbvb;	a	this$0
c	bvb$d	net/minecraft/world/entity/animal/Fox$FoxBehaviorGoal
	m	()Z	h	hasShelter
	m	()Z	i	alertable
	f	Lbvb;	a	this$0
	f	Lbts;	b	alertableTargeting
c	bvb$e	net/minecraft/world/entity/animal/Fox$FoxBreedGoal
	m	(Lbvb;D)V	<init>	<init>
		p	2		chance
	m	()V	c	start
	m	()V	g	breed
	f	Lbvb;	d	this$0
c	bvb$f	net/minecraft/world/entity/animal/Fox$FoxEatBerriesGoal
	m	(Lbvb;DII)V	<init>	<init>
		p	2		speed
		p	4		range
		p	5		maxYDifference
	m	()Z	a	canUse
	m	(Lcpy;Lgw;)Z	a	isValidTarget
		p	1		world
		p	2		pos
	m	(Ldfj;)V	a	pickGlowBerry
		p	1		state
	m	(Ldfj;)V	b	pickSweetBerries
		p	1		state
	m	()V	c	start
	m	()V	e	tick
	m	()D	i	acceptedDistance
	m	()Z	l	shouldRecalculatePath
	m	()V	o	onReachedTarget
	f	I	g	ticksWaited
	f	Lbvb;	h	this$0
	f	I	i	WAIT_TICKS
c	bvb$g	net/minecraft/world/entity/animal/Fox$FoxFloatGoal
	m	(Lbvb;)V	<init>	<init>
		p	1		mob
	m	()Z	a	canUse
	m	()V	c	start
	f	Lbvb;	a	this$0
c	bvb$h	net/minecraft/world/entity/animal/Fox$FoxFollowParentGoal
	m	(Lbvb;Lbvb;D)V	<init>	<init>
		p	2		fox
		p	3		speed
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	f	Lbvb;	d	this$0
	f	Lbvb;	e	fox
c	bvb$i	net/minecraft/world/entity/animal/Fox$FoxGroupData
	m	(Lbvb$v;)V	<init>	<init>
		p	1		type
	f	Lbvb$v;	a	type
c	bvb$j	net/minecraft/world/entity/animal/Fox$FoxLookAtPlayerGoal
	m	(Lbvb;Lbji;Ljava/lang/Class;F)V	<init>	<init>
		p	2		fox
		p	3		targetType
		p	4		range
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	f	Lbvb;	h	this$0
c	bvb$k	net/minecraft/world/entity/animal/Fox$FoxLookControl
	m	(Lbvb;)V	<init>	<init>
		p	1		entity
	m	()V	a	tick
	m	()Z	c	resetXRotOnTick
	f	Lbvb;	h	this$0
c	bvb$l	net/minecraft/world/entity/animal/Fox$FoxMeleeAttackGoal
	m	(Lbvb;DZ)V	<init>	<init>
		p	2		speed
		p	4		pauseWhenIdle
	m	()Z	a	canUse
	m	(Lbjg;)V	a	checkAndPerformAttack
		p	1		target
	m	()V	c	start
	f	Lbvb;	b	this$0
c	bvb$m	net/minecraft/world/entity/animal/Fox$FoxMoveControl
	m	(Lbvb;)V	<init>	<init>
		p	1		entity
	m	()V	a	tick
	f	Lbvb;	l	this$0
c	bvb$n	net/minecraft/world/entity/animal/Fox$FoxPanicGoal
	m	(Lbvb;D)V	<init>	<init>
		p	2		speed
	m	()Z	h	shouldPanic
	f	Lbvb;	h	this$0
c	bvb$o	net/minecraft/world/entity/animal/Fox$FoxPounceGoal
	m	()Z	P_	isInterruptable
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lbvb;	a	this$0
c	bvb$p	net/minecraft/world/entity/animal/Fox$FoxSearchForItemsGoal
	m	()Z	a	canUse
	m	()V	c	start
	m	()V	e	tick
	f	Lbvb;	a	this$0
c	bvb$q	net/minecraft/world/entity/animal/Fox$FoxStrollThroughVillageGoal
	m	(Lbvb;II)V	<init>	<init>
		p	2		unused
		p	3		searchRange
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()Z	h	canFoxMove
	f	Lbvb;	a	this$0
c	bvb$r	net/minecraft/world/entity/animal/Fox$PerchAndSearchGoal
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	m	()V	k	resetLook
	f	Lbvb;	b	this$0
	f	D	c	relX
	f	D	d	relZ
	f	I	e	lookTime
	f	I	f	looksRemaining
c	bvb$s	net/minecraft/world/entity/animal/Fox$SeekShelterGoal
	m	(Lbvb;D)V	<init>	<init>
		p	2		speed
	m	()Z	a	canUse
	m	()V	c	start
	f	Lbvb;	b	this$0
	f	I	c	interval
c	bvb$t	net/minecraft/world/entity/animal/Fox$SleepGoal
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()Z	k	canSleep
	f	Lbvb;	b	this$0
	f	I	c	WAIT_TIME_BEFORE_SLEEP
	f	I	d	countdown
c	bvb$u	net/minecraft/world/entity/animal/Fox$StalkPreyGoal
	m	()Z	a	canUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lbvb;	a	this$0
c	bvb$v	net/minecraft/world/entity/animal/Fox$Type
	m	(Ljava/lang/String;IILjava/lang/String;)V	<init>	<init>
		p	3		id
		p	4		key
	m	()I	a	getId
	m	(I)Lbvb$v;	a	byId
		p	0		id
	m	(Lhe;)Lbvb$v;	a	byBiome
		p	0		biome
	m	(Ljava/lang/String;)Lbvb$v;	a	byName
		p	0		name
	m	()[Lbvb$v;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lbvb$v;	a	RED
	f	Lbvb$v;	b	SNOW
	f	Lasp$a;	c	CODEC
	f	Ljava/util/function/IntFunction;	d	BY_ID
	f	I	e	id
	f	Ljava/lang/String;	f	name
	f	[Lbvb$v;	g	$VALUES
c	bvc	net/minecraft/world/entity/animal/FrogVariant
	m	()Laew;	a	texture
	m	(Ljava/lang/String;Ljava/lang/String;)Lbvc;	a	register
		p	0		id
		p	1		textureId
	f	Lbvc;	a	TEMPERATE
	f	Lbvc;	b	WARM
	f	Lbvc;	c	COLD
	f	Laew;	d	texture
c	bvd	net/minecraft/world/entity/animal/IronGolem
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lbiq;)Z	C	doHurtTarget
		p	1		target
	m	(Lbiq;)V	D	doPush
		p	1		entity
	m	()I	a	getRemainingPersistentAngerTime
	m	(I)V	a	setRemainingPersistentAngerTime
		p	1		angerTime
	m	(Lbho;)V	a	die
		p	1		damageSource
	m	(Lbho;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbiu;)Z	a	canAttackType
		p	1		type
	m	(Lcpy;)Z	a	checkSpawnObstruction
		p	1		world
	m	(Ljava/util/UUID;)V	a	setPersistentAngerTarget
		p	1		angryAt
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	()Ljava/util/UUID;	b	getPersistentAngerTarget
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	(Lcbu;Lbgx;)Lbgy;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lgw;Ldfj;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()V	b_	aiStep
	m	()Z	bj	canSpawnSprintParticle
	m	()V	c	startPersistentAngerTimer
	m	()Lehn;	cI	getLeashOffset
	m	(Lbho;)Lapc;	d	getHurtSound
		p	1		source
	m	()I	gd	getOfferFlowerTick
	m	()Z	ge	isPlayerCreated
	m	()F	gf	getAttackDamage
	m	(Lbjg;)Z	j	lambda$registerGoals$0
		p	0		entity
	m	()Lapc;	l_	getDeathSound
	m	(I)I	m	decreaseAirSupply
		p	1		air
	m	()Lbkl$a;	s	createAttributes
	m	()Lbvd$a;	t	getCrackiness
	m	(Z)V	w	offerFlower
		p	1		lookingAtVillager
	m	(Z)V	x	setPlayerCreated
		p	1		playerCreated
	m	()I	y	getAttackAnimationTick
	m	()V	z	registerGoals
	f	I	bT	offerFlowerTick
	f	Lbgj;	bU	PERSISTENT_ANGER_TIME
	f	I	bV	remainingPersistentAngerTime
	f	Ljava/util/UUID;	bW	persistentAngerTarget
	f	Laee;	c	DATA_FLAGS_ID
	f	I	d	IRON_INGOT_HEAL_AMOUNT
	f	I	e	attackAnimationTick
c	bvd$a	net/minecraft/world/entity/animal/IronGolem$Crackiness
	m	(Ljava/lang/String;IF)V	<init>	<init>
		p	3		maxHealthFraction
	m	()[Lbvd$a;	a	$values
	m	(F)Lbvd$a;	a	byFraction
		p	0		healthFraction
	m	(Lbvd$a;)D	a	lambda$static$0
	f	Lbvd$a;	a	NONE
	f	Lbvd$a;	b	LOW
	f	Lbvd$a;	c	MEDIUM
	f	Lbvd$a;	d	HIGH
	f	Ljava/util/List;	e	BY_DAMAGE
	f	F	f	fraction
	f	[Lbvd$a;	g	$VALUES
c	bve	net/minecraft/world/entity/animal/MushroomCow
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()Z	a	readyForShearing
	m	(Lakq;Lbil;)Lbil;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lakq;Lbjf;)V	a	thunderHit
		p	1		world
		p	2		lightning
	m	(Lape;)V	a	shear
		p	1		shearedSoundCategory
	m	(Lbgx;Lcbu;)V	a	lambda$mobInteract$0
		p	1		playerx
	m	(Lbve$a;)V	a	setVariant
		p	1		variant
	m	(Lbve;)Lbve$a;	a	getOffspringType
		p	1		mooshroom
	m	(Lgw;Lcpy;)F	a	getWalkTargetValue
		p	1		pos
		p	2		world
	m	(Ljava/lang/Object;)V	a	setVariant
		p	1		variant
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lqw;Lrq;)V	a	lambda$addAdditionalSaveData$1
	m	()V	a_	defineSynchedData
	m	(Lakq;Lbil;)Lbuy;	b	getBreedOffspring
	m	(Lcbu;Lbgx;)Lbgy;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Ljava/util/List;)V	b	lambda$readAdditionalSaveData$2
		p	1		stewEffects
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Ljava/lang/Object;	c	getVariant
	m	(Lakq;Lbil;)Lbve;	c	getBreedOffspring
	m	(Lbiu;Lcpw;Lbjk;Lgw;Lasc;)Z	c	checkMushroomSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	(Lcjf;)Ljava/util/Optional;	l	getEffectsFromItemStack
		p	1		flower
	m	()Lbve$a;	t	getVariant
	f	Laee;	bT	DATA_TYPE
	f	I	bU	MUTATE_CHANCE
	f	Ljava/lang/String;	bW	TAG_STEW_EFFECTS
	f	Ljava/util/List;	bX	stewEffects
	f	Ljava/util/UUID;	bY	lastLightningBoltUUID
c	bve$a	net/minecraft/world/entity/animal/MushroomCow$MushroomType
	m	(Ljava/lang/String;ILjava/lang/String;Ldfj;)V	<init>	<init>
		p	3		name
		p	4		mushroom
	m	()Ldfj;	a	getBlockState
	m	(Ljava/lang/String;)Lbve$a;	a	byType
		p	0		name
	m	()[Lbve$a;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lbve$a;	a	RED
	f	Lbve$a;	b	BROWN
	f	Lasp$a;	c	CODEC
	f	Ljava/lang/String;	d	type
	f	Ldfj;	e	blockState
	f	[Lbve$a;	f	$VALUES
c	bvf	net/minecraft/world/entity/animal/Ocelot
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lbiq;)Z	C	doHurtTarget
		p	1		target
	m	()I	O	getAmbientSoundInterval
	m	()V	X	customServerAiStep
	m	(Lakq;Lbil;)Lbil;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lbiq;Lbir;F)Lorg/joml/Vector3f;	a	getPassengerAttachmentPoint
		p	1		passenger
		p	2		dimensions
		p	3		scaleFactor
	m	(Lcpy;)Z	a	checkSpawnObstruction
		p	1		world
	m	(Lcqk;Lbgw;Lbjk;Lbjz;Lqw;)Lbjz;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	(Lakq;Lbil;)Lbvf;	b	getBreedOffspring
	m	(Lcbu;Lbgx;)Lbgy;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Z	bS	isSteppingCarefully
	m	(Lbiu;Lcpw;Lbjk;Lgw;Lasc;)Z	c	checkOcelotSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	()Lehn;	cI	getLeashOffset
	m	(Lbho;)Lapc;	d	getHurtSound
		p	1		source
	m	()F	gd	getAttackDamage
	m	(D)Z	h	removeWhenFarAway
		p	1		distanceSquared
	m	()Lapc;	l_	getDeathSound
	m	(Lcjf;)Z	m	isFood
		p	1		stack
	m	()Lbkl$a;	s	createAttributes
	m	()V	t	reassessTrustingGoals
	m	()Lapc;	w	getAmbientSound
	m	(Z)V	w	setTrusting
		p	1		trusting
	m	(Z)V	x	spawnTrustingParticles
		p	1		positive
	m	()Z	y	isTrusting
	m	()V	z	registerGoals
	f	D	bT	CROUCH_SPEED_MOD
	f	D	bU	WALK_SPEED_MOD
	f	D	bW	SPRINT_SPEED_MOD
	f	Lcmg;	bX	TEMPT_INGREDIENT
	f	Laee;	bY	DATA_TRUSTING
	f	Lbvf$a;	bZ	ocelotAvoidPlayersGoal
	f	Lbvf$b;	ca	temptGoal
c	bvf$a	net/minecraft/world/entity/animal/Ocelot$OcelotAvoidEntityGoal
	m	(Lbvf;Ljava/lang/Class;FDD)V	<init>	<init>
		p	1		ocelot
		p	2		fleeFromType
		p	3		distance
		p	4		slowSpeed
		p	6		fastSpeed
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	f	Lbvf;	i	ocelot
c	bvf$b	net/minecraft/world/entity/animal/Ocelot$OcelotTemptGoal
	m	(Lbvf;DLcmg;Z)V	<init>	<init>
		p	1		ocelot
		p	2		speed
		p	4		food
		p	5		canBeScared
	m	()Z	h	canScare
	f	Lbvf;	c	ocelot
c	bvg	net/minecraft/world/entity/animal/Panda
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Z)V	A	roll
		p	1		playing
	m	(Lbiq;)Z	C	doHurtTarget
		p	1		target
	m	(F)F	E	getSitAmount
		p	1		tickDelta
	m	(F)F	F	getLieOnBackAmount
		p	1		tickDelta
	m	(F)F	G	getRollAmount
		p	1		tickDelta
	m	(Lakq;Lbil;)Lbil;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lbho;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbiq;Lbir;F)Lorg/joml/Vector3f;	a	getPassengerAttachmentPoint
		p	1		passenger
		p	2		dimensions
		p	3		scaleFactor
	m	(Lbvg$a;)V	a	setMainGene
		p	1		gene
	m	(Lbvg;)Lasc;	a	access$000
	m	(Lbvg;Lbvg;)V	a	setGeneFromParents
		p	1		mother
		p	2		father
	m	(Lcbu;)Z	a	canBeLeashed
		p	1		player
	m	(Lcqk;Lbgw;Lbjk;Lbjz;Lqw;)Lbjz;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(Lbvg$a;)V	b	setHiddenGene
		p	1		gene
	m	(Lbvg;)Lasc;	b	access$100
	m	(Lbyn;)V	b	pickUpItem
		p	1		item
	m	(Lcbu;Lbgx;)Lbgy;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lgw;Ldfj;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lbvg;)Lasc;	c	access$200
	m	(Lbyn;)Z	c	lambda$static$0
		p	0		item
	m	(IZ)V	d	setFlag
		p	1		mask
		p	2		value
	m	(Lbho;)Lapc;	d	getHurtSound
		p	1		source
	m	(Lbvg;)Lasc;	d	access$300
	m	(Lbvg;)Lasc;	e	access$400
	m	(Lbvg;)Lasc;	f	access$500
	m	(Lcjf;)Z	f	canTakeItem
		p	1		stack
	m	()Z	fV	isAggressive
	m	(Lbvg;)Lasc;	g	access$600
	m	()V	gA	addEatingParticles
	m	()V	gB	updateSitAmount
	m	()V	gC	updateOnBackAnimation
	m	()V	gD	updateRollAmount
	m	()V	gE	handleRoll
	m	()V	gF	afterSneeze
	m	()Lbvg$a;	gG	getOneOfGenesRandomly
	m	()V	gH	tryToSit
	m	()Z	gd	isOnBack
	m	()Z	gj	isEating
	m	()I	gk	getSneezeCounter
	m	()Lbvg$a;	gl	getMainGene
	m	()Lbvg$a;	gm	getHiddenGene
	m	()Z	gn	isRolling
	m	()Lbkl$a;	go	createAttributes
	m	()Lbvg$a;	gp	getVariant
	m	()Z	gq	isLazy
	m	()Z	gr	isWorried
	m	()Z	gs	isPlayful
	m	()Z	gt	isBrown
	m	()Z	gu	isWeak
	m	()Z	gv	isScared
	m	()V	gw	setAttributes
	m	()Z	gx	canPerformAction
	m	()I	gy	getEatCounter
	m	()V	gz	handleEating
	m	(Lbvg;)Lasc;	h	access$700
	m	(Lbvg;)Lasc;	i	access$800
	m	(Lbvg;)Lasc;	j	access$900
	m	(Lbvg;)Lasc;	k	access$1000
	m	()V	l	tick
	m	(Lcjf;)Z	l	isFoodOrCake
		p	1		stack
	m	()Lapc;	l_	getDeathSound
	m	(Lcjf;)Z	m	isFood
		p	1		stack
	m	()I	s	getUnhappyCounter
	m	()Z	t	isSneezing
	m	(I)V	t	setUnhappyCounter
		p	1		askForBambooTicks
	m	(I)V	u	setSneezeCounter
		p	1		sneezeProgress
	m	(I)V	v	setEatCounter
		p	1		eatingTicks
	m	()Lapc;	w	getAmbientSound
	m	(I)Z	w	getFlag
		p	1		bitmask
	m	(Z)V	w	sit
		p	1		sitting
	m	(Z)V	x	setOnBack
		p	1		lyingOnBack
	m	()Z	y	isSitting
	m	(Z)V	y	eat
		p	1		eating
	m	()V	z	registerGoals
	m	(Z)V	z	sneeze
		p	1		sneezing
	f	I	bT	TOTAL_ROLL_STEPS
	f	I	bU	rollCounter
	f	Laee;	bW	UNHAPPY_COUNTER
	f	Laee;	bX	SNEEZE_COUNTER
	f	Laee;	bY	EAT_COUNTER
	f	Laee;	bZ	MAIN_GENE_ID
	f	Laee;	ca	HIDDEN_GENE_ID
	f	Laee;	cb	DATA_ID_FLAGS
	f	Lbts;	cc	BREED_TARGETING
	f	I	cd	FLAG_SNEEZE
	f	I	ce	FLAG_ROLL
	f	I	cf	FLAG_SIT
	f	I	cg	FLAG_ON_BACK
	f	I	ch	EAT_TICK_INTERVAL
	f	I	ci	TOTAL_UNHAPPY_TIME
	f	Z	cj	gotBamboo
	f	Z	ck	didBite
	f	Lehn;	cl	rollDelta
	f	F	cm	sitAmount
	f	F	cn	sitAmountO
	f	F	co	onBackAmount
	f	F	cp	onBackAmountO
	f	F	cq	rollAmount
	f	F	cr	rollAmountO
	f	Lbvg$g;	cs	lookAtPlayerGoal
	f	Ljava/util/function/Predicate;	ct	PANDA_ITEMS
c	bvg$a	net/minecraft/world/entity/animal/Panda$Gene
	m	(Ljava/lang/String;IILjava/lang/String;Z)V	<init>	<init>
		p	3		id
		p	4		name
		p	5		recessive
	m	()I	a	getId
	m	(I)Lbvg$a;	a	byId
		p	0		id
	m	(Lasc;)Lbvg$a;	a	getRandom
		p	0		random
	m	(Lbvg$a;Lbvg$a;)Lbvg$a;	a	getVariantFromGenes
		p	0		mainGene
		p	1		hiddenGene
	m	(Ljava/lang/String;)Lbvg$a;	a	byName
		p	0		name
	m	()Z	b	isRecessive
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Lbvg$a;	d	$values
	f	Lbvg$a;	a	NORMAL
	f	Lbvg$a;	b	LAZY
	f	Lbvg$a;	c	WORRIED
	f	Lbvg$a;	d	PLAYFUL
	f	Lbvg$a;	e	BROWN
	f	Lbvg$a;	f	WEAK
	f	Lbvg$a;	g	AGGRESSIVE
	f	Lasp$a;	h	CODEC
	f	Ljava/util/function/IntFunction;	i	BY_ID
	f	I	j	MAX_GENE
	f	I	k	id
	f	Ljava/lang/String;	l	name
	f	Z	m	isRecessive
	f	[Lbvg$a;	n	$VALUES
c	bvg$b	net/minecraft/world/entity/animal/Panda$PandaAttackGoal
	m	(Lbvg;DZ)V	<init>	<init>
		p	1		panda
		p	2		speed
		p	4		pauseWhenMobIdle
	m	()Z	a	canUse
	f	Lbvg;	b	panda
c	bvg$c	net/minecraft/world/entity/animal/Panda$PandaAvoidGoal
	m	(Lbvg;Ljava/lang/Class;FDD)V	<init>	<init>
		p	1		panda
		p	2		fleeFromType
		p	3		distance
		p	4		slowSpeed
		p	6		fastSpeed
	m	()Z	a	canUse
	f	Lbvg;	i	panda
c	bvg$d	net/minecraft/world/entity/animal/Panda$PandaBreedGoal
	m	(Lbvg;D)V	<init>	<init>
		p	1		panda
		p	2		chance
	m	()Z	a	canUse
	m	()Z	h	canFindBamboo
	f	Lbvg;	d	panda
	f	I	e	unhappyCooldown
c	bvg$e	net/minecraft/world/entity/animal/Panda$PandaHurtByTargetGoal
	m	(Lbvg;[Ljava/lang/Class;)V	<init>	<init>
		p	1		panda
		p	2		noRevengeTypes
	m	(Lbji;Lbjg;)V	a	alertOther
		p	1		mob
		p	2		target
	m	()Z	b	canContinueToUse
	f	Lbvg;	a	panda
c	bvg$f	net/minecraft/world/entity/animal/Panda$PandaLieOnBackGoal
	m	(Lbvg;)V	<init>	<init>
		p	1		panda
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	f	Lbvg;	a	panda
	f	I	b	cooldown
c	bvg$g	net/minecraft/world/entity/animal/Panda$PandaLookAtPlayerGoal
	m	(Lbvg;Ljava/lang/Class;F)V	<init>	<init>
		p	1		panda
		p	2		targetType
		p	3		range
	m	()Z	a	canUse
	m	(Lbjg;)V	a	setTarget
		p	1		target
	m	()Z	b	canContinueToUse
	m	(Lbjg;)Z	b	lambda$canUse$0
	m	()V	e	tick
	f	Lbvg;	h	panda
c	bvg$h	net/minecraft/world/entity/animal/Panda$PandaMoveControl
	m	(Lbvg;)V	<init>	<init>
		p	1		panda
	m	()V	a	tick
	f	Lbvg;	l	panda
c	bvg$i	net/minecraft/world/entity/animal/Panda$PandaPanicGoal
	m	(Lbvg;D)V	<init>	<init>
		p	1		panda
		p	2		speed
	m	()Z	b	canContinueToUse
	m	()Z	h	shouldPanic
	f	Lbvg;	h	panda
c	bvg$j	net/minecraft/world/entity/animal/Panda$PandaRollGoal
	m	(Lbvg;)V	<init>	<init>
		p	1		panda
	m	()Z	P_	isInterruptable
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	f	Lbvg;	a	panda
c	bvg$k	net/minecraft/world/entity/animal/Panda$PandaSitGoal
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lbvg;	a	this$0
	f	I	b	cooldown
c	bvg$l	net/minecraft/world/entity/animal/Panda$PandaSneezeGoal
	m	(Lbvg;)V	<init>	<init>
		p	1		panda
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	f	Lbvg;	a	panda
c	bvh	net/minecraft/world/entity/animal/Parrot
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lbiq;)Z	C	doHurtTarget
		p	1		target
	m	(Lbiq;)V	D	doPush
		p	1		entity
	m	(DZLdfj;Lgw;)V	a	checkFallDamage
		p	1		heightDifference
		p	3		onGround
		p	4		state
		p	5		landedPosition
	m	(Lakq;Lbil;)Lbil;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lasc;)F	a	getPitch
		p	0		random
	m	(Lbho;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbiq;Lbir;F)Lorg/joml/Vector3f;	a	getPassengerAttachmentPoint
		p	1		passenger
		p	2		dimensions
		p	3		scaleFactor
	m	(Lbur;)Z	a	canMate
		p	1		other
	m	(Lbvh$b;)V	a	setVariant
		p	1		variant
	m	(Lcpv;Lasc;)Lapc;	a	getAmbient
		p	0		world
		p	1		random
	m	(Lcpv;Lbiq;)Z	a	imitateNearbyMobs
		p	0		world
		p	1		parrot
	m	(Lcqk;Lbgw;Lbjk;Lbjz;Lqw;)Lbjz;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lgw;Z)V	a	setRecordPlayingNearby
		p	1		songPosition
		p	2		playing
	m	(Ljava/lang/Object;)V	a	setVariant
		p	1		variant
	m	(Ljava/util/HashMap;)V	a	lambda$static$0
		p	0		map
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	aQ	onFlap
	m	()Z	aR	isFlapping
	m	()V	a_	defineSynchedData
	m	(Lbiu;)Lapc;	b	getImitatedSound
		p	0		imitate
	m	(Lbjs;Lbir;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lcbu;Lbgx;)Lbgy;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lcpv;)Lbsp;	b	createNavigation
		p	1		world
	m	(Lgw;Ldfj;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()V	b_	aiStep
	m	()Z	bs	isPushable
	m	()Ljava/lang/Object;	c	getVariant
	m	(Lbiu;Lcpw;Lbjk;Lgw;Lasc;)Z	c	checkParrotSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	()Lehn;	cI	getLeashOffset
	m	(Lbho;)Lapc;	d	getHurtSound
		p	1		source
	m	()Lape;	da	getSoundSource
	m	()F	eW	getVoicePitch
	m	()Lbkl$a;	gj	createAttributes
	m	()Z	gk	isPartyParrot
	m	()Lbvh$b;	gl	getVariant
	m	()V	gn	calculateFlapping
	m	()Z	gq	isFlying
	m	()Lapc;	l_	getDeathSound
	m	(Lcjf;)Z	m	isFood
		p	1		stack
	m	()Z	m_	isBaby
	m	()Lapc;	w	getAmbientSound
	m	()V	z	registerGoals
	f	F	bW	flap
	f	F	bX	flapSpeed
	f	F	bY	oFlapSpeed
	f	F	bZ	oFlap
	f	Laee;	ca	DATA_VARIANT_ID
	f	Ljava/util/function/Predicate;	cb	NOT_PARROT_PREDICATE
	f	Lcja;	cc	POISONOUS_FOOD
	f	Ljava/util/Set;	cd	TAME_FOOD
	f	Ljava/util/Map;	ce	MOB_SOUND_MAP
	f	F	cf	flapping
	f	F	cg	nextFlap
	f	Z	ch	partyParrot
	f	Lgw;	ci	jukebox
c	bvh$1	net/minecraft/world/entity/animal/Parrot$1
	m	(Lbji;)Z	a	test
c	bvh$a	net/minecraft/world/entity/animal/Parrot$ParrotWanderGoal
	m	(Lbjp;D)V	<init>	<init>
		p	1		mob
		p	2		speed
	m	()Lehn;	h	getPosition
	m	()Lehn;	k	getTreePos
c	bvh$b	net/minecraft/world/entity/animal/Parrot$Variant
	m	(Ljava/lang/String;IILjava/lang/String;)V	<init>	<init>
		p	3		id
		p	4		name
	m	()I	a	getId
	m	(I)Lbvh$b;	a	byId
		p	0		index
	m	()[Lbvh$b;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lbvh$b;	a	RED_BLUE
	f	Lbvh$b;	b	BLUE
	f	Lbvh$b;	c	GREEN
	f	Lbvh$b;	d	YELLOW_BLUE
	f	Lbvh$b;	e	GRAY
	f	Lcom/mojang/serialization/Codec;	f	CODEC
	f	Ljava/util/function/IntFunction;	g	BY_ID
	f	I	h	id
	f	Ljava/lang/String;	i	name
	f	[Lbvh$b;	j	$VALUES
c	bvi	net/minecraft/world/entity/animal/Pig
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()Z	a	boost
	m	(Laee;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Lakq;Lbil;)Lbil;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lakq;Lbjf;)V	a	thunderHit
		p	1		world
		p	2		lightning
	m	(Lape;)V	a	equipSaddle
		p	1		sound
	m	(Lbiq;Lbir;F)Lorg/joml/Vector3f;	a	getPassengerAttachmentPoint
		p	1		passenger
		p	2		dimensions
		p	3		scaleFactor
	m	(Lcbu;Lehn;)V	a	tickRidden
		p	1		controllingPlayer
		p	2		movementInput
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(Lakq;Lbil;)Lbvi;	b	getBreedOffspring
	m	(Lbjg;)Lehn;	b	getDismountLocationForPassenger
		p	1		passenger
	m	(Lcbu;Lbgx;)Lbgy;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lcbu;Lehn;)Lehn;	b	getRiddenInput
		p	1		controllingPlayer
		p	2		movementInput
	m	(Lgw;Ldfj;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Lehn;	cI	getLeashOffset
	m	()Lbjg;	cN	getControllingPassenger
	m	(Lbho;)Lapc;	d	getHurtSound
		p	1		source
	m	(Lcbu;)F	e	getRiddenSpeed
		p	1		controllingPlayer
	m	()V	ex	dropEquipment
	m	()Z	g	isSaddleable
	m	()Z	i	isSaddled
	m	()Lapc;	l_	getDeathSound
	m	(Lcjf;)Z	m	isFood
		p	1		stack
	m	()Lbkl$a;	s	createAttributes
	m	()Lapc;	w	getAmbientSound
	m	()V	z	registerGoals
	f	Laee;	bT	DATA_SADDLE_ID
	f	Laee;	bU	DATA_BOOST_TIME
	f	Lcmg;	bW	FOOD_ITEMS
	f	Lbjc;	bX	steering
c	bvj	net/minecraft/world/entity/animal/PolarBear
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lbiq;)Z	C	doHurtTarget
		p	1		target
	m	(F)F	E	getStandingAnimationScale
		p	1		tickDelta
	m	()I	a	getRemainingPersistentAngerTime
	m	(I)V	a	setRemainingPersistentAngerTime
		p	1		angerTime
	m	(Lakq;Lbil;)Lbil;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lbjs;)Lbir;	a	getDimensions
		p	1		pose
	m	(Lcqk;Lbgw;Lbjk;Lbjz;Lqw;)Lbjz;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Ljava/util/UUID;)V	a	setPersistentAngerTarget
		p	1		angryAt
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	()Ljava/util/UUID;	b	getPersistentAngerTarget
	m	(Lgw;Ldfj;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()V	c	startPersistentAngerTimer
	m	(Lbiu;Lcpw;Lbjk;Lgw;Lasc;)Z	c	checkPolarBearSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	(Lbho;)Lapc;	d	getHurtSound
		p	1		source
	m	()F	fc	getWaterSlowDown
	m	()V	l	tick
	m	()Lapc;	l_	getDeathSound
	m	(Lcjf;)Z	m	isFood
		p	1		stack
	m	()Lbkl$a;	s	createAttributes
	m	()V	t	playWarningSound
	m	()Lapc;	w	getAmbientSound
	m	(Z)V	w	setStanding
		p	1		warning
	m	()Z	y	isStanding
	m	()V	z	registerGoals
	f	Laee;	bT	DATA_STANDING_ID
	f	F	bU	STAND_ANIMATION_TICKS
	f	F	bW	clientSideStandAnimationO
	f	F	bX	clientSideStandAnimation
	f	I	bY	warningSoundTicks
	f	Lbgj;	bZ	PERSISTENT_ANGER_TIME
	f	I	ca	remainingPersistentAngerTime
	f	Ljava/util/UUID;	cb	persistentAngerTarget
c	bvj$a	net/minecraft/world/entity/animal/PolarBear$PolarBearAttackPlayersGoal
	m	(Lbvj;)V	<init>	<init>
		p	1		mob
	m	()Z	a	canUse
	m	()D	l	getFollowDistance
	f	Lbvj;	i	this$0
c	bvj$b	net/minecraft/world/entity/animal/PolarBear$PolarBearHurtByTargetGoal
	m	(Lbvj;)V	<init>	<init>
		p	1		mob
	m	(Lbji;Lbjg;)V	a	alertOther
		p	1		mob
		p	2		target
	m	()V	c	start
	f	Lbvj;	a	this$0
c	bvj$c	net/minecraft/world/entity/animal/PolarBear$PolarBearMeleeAttackGoal
	m	(Lbvj;)V	<init>	<init>
		p	1		mob
	m	(Lbjg;)V	a	checkAndPerformAttack
		p	1		target
	m	()V	d	stop
	f	Lbvj;	b	this$0
c	bvj$d	net/minecraft/world/entity/animal/PolarBear$PolarBearPanicGoal
	m	(Lbvj;)V	<init>	<init>
		p	1		mob
	m	()Z	h	shouldPanic
	f	Lbvj;	h	this$0
c	bvk	net/minecraft/world/entity/animal/Pufferfish
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Laee;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Lbji;)V	a	touch
		p	1		mob
	m	(Lbjs;)Lbir;	a	getDimensions
		p	1		pose
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	()Lcjf;	b	getBucketItemStack
	m	(Lbji;)Z	b	lambda$aiStep$1
		p	1		entity
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()V	b_	aiStep
	m	(Lcbu;)V	b_	playerTouch
		p	1		player
	m	(I)V	c	setPuffState
		p	1		puffState
	m	(Lbho;)Lapc;	d	getHurtSound
		p	1		source
	m	()Lapc;	ge	getFlopSound
	m	()I	gf	getPuffState
	m	(Lbjg;)Z	j	lambda$static$0
		p	0		entity
	m	()V	l	tick
	m	()Lapc;	l_	getDeathSound
	m	(I)F	s	getScale
		p	0		puffState
	m	()Lapc;	w	getAmbientSound
	m	()V	z	registerGoals
	f	I	b	STATE_SMALL
	f	I	bT	inflateCounter
	f	I	bU	deflateTimer
	f	Ljava/util/function/Predicate;	bV	SCARY_MOB
	f	Lbts;	bW	targetingConditions
	f	I	c	STATE_MID
	f	I	d	STATE_FULL
	f	Laee;	e	PUFF_STATE
c	bvk$a	net/minecraft/world/entity/animal/Pufferfish$PufferfishPuffGoal
	m	(Lbvk;)V	<init>	<init>
		p	1		pufferfish
	m	()Z	a	canUse
	m	(Lbjg;)Z	a	lambda$canUse$0
	m	()V	c	start
	m	()V	d	stop
	f	Lbvk;	a	fish
c	bvl	net/minecraft/world/entity/animal/Rabbit
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lbiq;)Z	C	doHurtTarget
		p	1		target
	m	(F)F	E	getJumpCompletion
		p	1		delta
	m	()V	X	customServerAiStep
	m	(Lakq;Lbil;)Lbil;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lbvl$g;)V	a	setVariant
		p	1		variant
	m	(Lbvl;)Z	a	access$000
	m	(Lcpw;Lgw;)Lbvl$g;	a	getRandomRabbitVariant
		p	0		world
		p	1		pos
	m	(Lcqk;Lbgw;Lbjk;Lbjz;Lqw;)Lbjz;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Ljava/lang/Object;)V	a	setVariant
		p	1		variant
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	(Lakq;Lbil;)Lbvl;	b	getBreedOffspring
	m	(Lbvl;)Lbpc;	b	access$100
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()V	b_	aiStep
	m	()Z	bj	canSpawnSprintParticle
	m	()Ljava/lang/Object;	c	getVariant
	m	(DD)V	c	facePoint
		p	1		x
		p	3		z
	m	(Lbiu;Lcpw;Lbjk;Lgw;Lasc;)Z	c	checkRabbitSpawnRules
		p	0		entity
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	()Lehn;	cI	getLeashOffset
	m	(Lbho;)Lapc;	d	getHurtSound
		p	1		source
	m	()Lape;	da	getSoundSource
	m	()F	eY	getJumpPower
	m	()V	fa	jumpFromGround
	m	()Lbvl$g;	gd	getVariant
	m	()V	gj	enableJumpControl
	m	()V	gk	disableJumpControl
	m	()V	gl	setLandingDelay
	m	()V	gm	checkLandingDelay
	m	()Z	gn	wantsMoreFood
	m	(D)V	i	setSpeedModifier
		p	1		speed
	m	(Lcjf;)Z	l	isTemptingItem
		p	0		stack
	m	()Lapc;	l_	getDeathSound
	m	(Lcjf;)Z	m	isFood
		p	1		stack
	m	(Z)V	r	setJumping
		p	1		jumping
	m	()V	s	startJumping
	m	()Lbkl$a;	t	createAttributes
	m	()Lapc;	w	getAmbientSound
	m	()Lapc;	y	getJumpSound
	m	()V	z	registerGoals
	f	D	bT	STROLL_SPEED_MOD
	f	D	bU	BREED_SPEED_MOD
	f	D	bW	FOLLOW_SPEED_MOD
	f	D	bX	FLEE_SPEED_MOD
	f	D	bY	ATTACK_SPEED_MOD
	f	I	bZ	EVIL_ATTACK_POWER
	f	I	ca	EVIL_ARMOR_VALUE
	f	Laee;	cb	DATA_TYPE_ID
	f	Laew;	cc	KILLER_BUNNY
	f	I	cd	MORE_CARROTS_DELAY
	f	I	ce	jumpTicks
	f	I	cf	jumpDuration
	f	Z	cg	wasOnGround
	f	I	ch	jumpDelayTicks
	f	I	ci	moreCarrotTicks
c	bvl$a	net/minecraft/world/entity/animal/Rabbit$RabbitAvoidEntityGoal
	m	(Lbvl;Ljava/lang/Class;FDD)V	<init>	<init>
		p	1		rabbit
		p	2		fleeFromType
		p	3		distance
		p	4		slowSpeed
		p	6		fastSpeed
	m	()Z	a	canUse
	f	Lbvl;	i	rabbit
c	bvl$b	net/minecraft/world/entity/animal/Rabbit$RabbitGroupData
	m	(Lbvl$g;)V	<init>	<init>
		p	1		type
	f	Lbvl$g;	a	variant
c	bvl$c	net/minecraft/world/entity/animal/Rabbit$RabbitJumpControl
	m	(Lbvl;)V	<init>	<init>
		p	1		rabbit
	m	(Z)V	a	setCanJump
		p	1		canJump
	m	()V	b	tick
	m	()Z	c	wantJump
	m	()Z	d	canJump
	f	Lbvl;	b	rabbit
	f	Z	c	canJump
c	bvl$d	net/minecraft/world/entity/animal/Rabbit$RabbitMoveControl
	m	(Lbvl;)V	<init>	<init>
		p	1		owner
	m	()V	a	tick
	m	(DDDD)V	a	setWantedPosition
		p	1		x
		p	3		y
		p	5		z
		p	7		speed
	f	Lbvl;	l	rabbit
	f	D	m	nextJumpSpeed
c	bvl$e	net/minecraft/world/entity/animal/Rabbit$RabbitPanicGoal
	m	(Lbvl;D)V	<init>	<init>
		p	1		rabbit
		p	2		speed
	m	()V	e	tick
	f	Lbvl;	h	rabbit
c	bvl$f	net/minecraft/world/entity/animal/Rabbit$RaidGardenGoal
	m	(Lbvl;)V	<init>	<init>
		p	1		rabbit
	m	()Z	a	canUse
	m	(Lcpy;Lgw;)Z	a	isValidTarget
		p	1		world
		p	2		pos
	m	()Z	b	canContinueToUse
	m	()V	e	tick
	f	Lbvl;	g	rabbit
	f	Z	h	wantsToRaid
	f	Z	i	canRaid
c	bvl$g	net/minecraft/world/entity/animal/Rabbit$Variant
	m	(Ljava/lang/String;IILjava/lang/String;)V	<init>	<init>
		p	3		id
		p	4		name
	m	()I	a	id
	m	(I)Lbvl$g;	a	byId
		p	0		id
	m	()[Lbvl$g;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lbvl$g;	a	BROWN
	f	Lbvl$g;	b	WHITE
	f	Lbvl$g;	c	BLACK
	f	Lbvl$g;	d	WHITE_SPLOTCHED
	f	Lbvl$g;	e	GOLD
	f	Lbvl$g;	f	SALT
	f	Lbvl$g;	g	EVIL
	f	Lcom/mojang/serialization/Codec;	h	CODEC
	f	Ljava/util/function/IntFunction;	i	BY_ID
	f	I	j	id
	f	Ljava/lang/String;	k	name
	f	[Lbvl$g;	l	$VALUES
c	bvm	net/minecraft/world/entity/animal/Salmon
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()Lcjf;	b	getBucketItemStack
	m	(Lbho;)Lapc;	d	getHurtSound
		p	1		source
	m	()Lapc;	ge	getFlopSound
	m	()I	gf	getMaxSchoolSize
	m	()Lapc;	l_	getDeathSound
	m	()Lapc;	w	getAmbientSound
c	bvn	net/minecraft/world/entity/animal/Sheep
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(F)F	E	getHeadEatPositionScale
		p	1		delta
	m	(F)F	F	getHeadEatAngleScale
		p	1		delta
	m	()V	N	ate
	m	()Laew;	S	getDefaultLootTable
	m	()V	X	customServerAiStep
	m	()Z	a	readyForShearing
	m	(Lakq;Lbil;)Lbil;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lape;)V	a	shear
		p	1		shearedSoundCategory
	m	(Lasc;)Lcht;	a	getRandomSheepColor
		p	0		random
	m	(Lbgx;Lcbu;)V	a	lambda$mobInteract$2
		p	1		playerx
	m	(Lbiq;Lbir;F)Lorg/joml/Vector3f;	a	getPassengerAttachmentPoint
		p	1		passenger
		p	2		dimensions
		p	3		scaleFactor
	m	(Lbur;Lbur;)Lcht;	a	getOffspringColor
		p	1		firstParent
		p	2		secondParent
	m	(Lcez;Lcmk;)Lcjf;	a	lambda$getOffspringColor$3
	m	(Lcht;)[F	a	getColorArray
		p	0		dyeColor
	m	(Lcht;Lcht;)Lcez;	a	makeContainer
		p	0		firstColor
		p	1		secondColor
	m	(Lcqk;Lbgw;Lbjk;Lbjz;Lqw;)Lbjz;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Ljava/util/EnumMap;)V	a	lambda$static$0
		p	0		map
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	(Lakq;Lbil;)Lbvn;	b	getBreedOffspring
	m	(Lbjs;Lbir;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lcbu;Lbgx;)Lbgy;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lcht;)V	b	setColor
		p	1		color
	m	(Lcht;Lcht;)Lcht;	b	lambda$getOffspringColor$4
	m	(Lgw;Ldfj;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()V	b_	aiStep
	m	(Lcht;)[F	c	createSheepColor
		p	0		color
	m	(Lbho;)Lapc;	d	getHurtSound
		p	1		source
	m	(Lcht;)Lcht;	d	lambda$static$1
		p	0		color
	m	()Lapc;	l_	getDeathSound
	m	()Lbkl$a;	s	createAttributes
	m	()Lcht;	t	getColor
	m	()Lapc;	w	getAmbientSound
	m	(Z)V	w	setSheared
		p	1		sheared
	m	()Z	y	isSheared
	m	()V	z	registerGoals
	f	I	bT	EAT_ANIMATION_TICKS
	f	Laee;	bU	DATA_WOOL_ID
	f	Ljava/util/Map;	bW	ITEM_BY_DYE
	f	Ljava/util/Map;	bX	COLORARRAY_BY_COLOR
	f	I	bY	eatAnimationTick
	f	Lbpt;	bZ	eatBlockGoal
c	bvn$1	net/minecraft/world/entity/animal/Sheep$1
	m	(Lcfq;I)V	<init>	<init>
		p	1		type
		p	2		syncId
	m	(Lcbu;)Z	a	stillValid
		p	1		player
	m	(Lcbu;I)Lcjf;	a	quickMoveStack
		p	1		player
		p	2		slot
c	bvn$2	net/minecraft/world/entity/animal/Sheep$2
	f	[I	a	$SwitchMap$net$minecraft$world$item$DyeColor
c	bvo	net/minecraft/world/entity/animal/ShoulderRidingEntity
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lakr;)Z	b	setEntityOnShoulder
		p	1		player
	m	()Z	gm	canSitOnShoulder
	m	()V	l	tick
	f	I	bW	RIDE_COOLDOWN
	f	I	bX	rideCooldownCounter
c	bvp	net/minecraft/world/entity/animal/SnowGolem
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()Z	a	readyForShearing
	m	(Lape;)V	a	shear
		p	1		shearedSoundCategory
	m	(Lbgx;Lcbu;)V	a	lambda$mobInteract$1
		p	1		playerx
	m	(Lbjg;F)V	a	performRangedAttack
		p	1		target
		p	2		pullProgress
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(Lbjs;Lbir;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lcbu;Lbgx;)Lbgy;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()V	b_	aiStep
	m	()Lehn;	cI	getLeashOffset
	m	(Lbho;)Lapc;	d	getHurtSound
		p	1		source
	m	()Z	ff	isSensitiveToWater
	m	(Lbjg;)Z	j	lambda$registerGoals$0
		p	0		entity
	m	()Lapc;	l_	getDeathSound
	m	()Lbkl$a;	s	createAttributes
	m	()Z	t	hasPumpkin
	m	()Lapc;	w	getAmbientSound
	m	(Z)V	w	setPumpkin
		p	1		hasPumpkin
	m	()V	z	registerGoals
	f	Laee;	b	DATA_PUMPKIN_ID
	f	B	c	PUMPKIN_FLAG
	f	F	d	EYE_HEIGHT
c	bvq	net/minecraft/world/entity/animal/Squid
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(FFF)V	a	setMovementVector
		p	1		x
		p	2		y
		p	3		z
	m	(Lbho;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbvq;)Z	a	access$000
	m	(Lcbu;)Z	a	canBeLeashed
		p	1		player
	m	()Lbiq$b;	aU	getMovementEmission
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	(Lbjs;Lbir;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	()V	b_	aiStep
	m	(Lbho;)Lapc;	d	getHurtSound
		p	1		source
	m	()F	eV	getSoundVolume
	m	()Lbkl$a;	gd	createAttributes
	m	()Z	ge	hasMovementVector
	m	(Lehn;)V	h	travel
		p	1		movementInput
	m	(Lehn;)Lehn;	j	rotateVector
		p	1		shootVector
	m	()Lapc;	l_	getDeathSound
	m	()Lit;	s	getInkParticle
	m	()Lapc;	t	getSquirtSound
	m	()Lapc;	w	getAmbientSound
	m	()V	y	spawnInk
	m	()V	z	registerGoals
	f	F	b	xBodyRot
	f	F	bT	tentacleMovement
	f	F	bU	oldTentacleMovement
	f	F	bV	tentacleAngle
	f	F	bW	oldTentacleAngle
	f	F	bX	speed
	f	F	bY	tentacleSpeed
	f	F	bZ	rotateSpeed
	f	F	c	xBodyRotO
	f	F	ca	tx
	f	F	cb	ty
	f	F	cc	tz
	f	F	d	zBodyRot
	f	F	e	zBodyRotO
c	bvq$a	net/minecraft/world/entity/animal/Squid$SquidFleeGoal
	m	()Z	Q_	requiresUpdateEveryTick
	m	()Z	a	canUse
	m	()V	c	start
	m	()V	e	tick
	f	Lbvq;	a	this$0
	f	F	b	SQUID_FLEE_SPEED
	f	F	c	SQUID_FLEE_MIN_DISTANCE
	f	F	d	SQUID_FLEE_MAX_DISTANCE
	f	I	e	fleeTicks
c	bvq$b	net/minecraft/world/entity/animal/Squid$SquidRandomMovementGoal
	m	(Lbvq;Lbvq;)V	<init>	<init>
		p	2		squid
	m	()Z	a	canUse
	m	()V	e	tick
	f	Lbvq;	a	this$0
	f	Lbvq;	b	squid
c	bvr	net/minecraft/world/entity/animal/TropicalFish
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lbvr$b;)V	a	setVariant
		p	1		variant
	m	(Lbvr$b;Lcht;Lcht;)I	a	packVariant
		p	0		variety
		p	1		baseColor
		p	2		patternColor
	m	(Lcqk;Lbgw;Lbjk;Lbjz;Lqw;)Lbjz;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Ljava/lang/Object;)V	a	setVariant
		p	1		variant
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	()Lcjf;	b	getBucketItemStack
	m	(Lbiu;Lcpw;Lbjk;Lgw;Lasc;)Z	b	checkTropicalFishSpawnRules
		p	0		type
		p	1		world
		p	2		reason
		p	3		pos
		p	4		random
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Ljava/lang/Object;	c	getVariant
	m	(I)Ljava/lang/String;	c	getPredefinedName
		p	0		variant
	m	(I)Z	d	isMaxGroupSizeReached
		p	1		count
	m	(Lbho;)Lapc;	d	getHurtSound
		p	1		source
	m	()Lapc;	ge	getFlopSound
	m	()Lcht;	gm	getBaseColor
	m	()Lcht;	gn	getPatternColor
	m	()Lbvr$b;	go	getVariant
	m	()I	gp	getPackedVariant
	m	(Lcjf;)V	l	saveToBucketTag
		p	1		stack
	m	()Lapc;	l_	getDeathSound
	m	(I)Lcht;	s	getBaseColor
		p	0		variant
	m	(I)Lcht;	t	getPatternColor
		p	0		variant
	m	(I)Lbvr$b;	u	getPattern
		p	0		variant
	m	(I)V	v	setPackedVariant
		p	1		variant
	m	()Lapc;	w	getAmbientSound
	f	Ljava/lang/String;	b	BUCKET_VARIANT_TAG
	f	Ljava/util/List;	c	COMMON_VARIANTS
	f	Laee;	d	DATA_ID_TYPE_VARIANT
	f	Z	e	isSchool
c	bvr$a	net/minecraft/world/entity/animal/TropicalFish$Base
	m	(Ljava/lang/String;II)V	<init>	<init>
		p	3		id
	m	()[Lbvr$a;	a	$values
	f	Lbvr$a;	a	SMALL
	f	Lbvr$a;	b	LARGE
	f	I	c	id
	f	[Lbvr$a;	d	$VALUES
c	bvr$b	net/minecraft/world/entity/animal/TropicalFish$Pattern
	m	(Ljava/lang/String;ILjava/lang/String;Lbvr$a;I)V	<init>	<init>
		p	3		name
		p	4		size
		p	5		id
	m	()Lbvr$a;	a	base
	m	(I)Lbvr$b;	a	byId
		p	0		id
	m	()I	b	getPackedId
	m	()Ljava/lang/String;	c	getSerializedName
	m	()Ltl;	d	displayName
	m	()[Lbvr$b;	e	$values
	f	Lbvr$b;	a	KOB
	f	Lbvr$b;	b	SUNSTREAK
	f	Lbvr$b;	c	SNOOPER
	f	Lbvr$b;	d	DASHER
	f	Lbvr$b;	e	BRINELY
	f	Lbvr$b;	f	SPOTTY
	f	Lbvr$b;	g	FLOPPER
	f	Lbvr$b;	h	STRIPEY
	f	Lbvr$b;	i	GLITTER
	f	Lbvr$b;	j	BLOCKFISH
	f	Lbvr$b;	k	BETTY
	f	Lbvr$b;	l	CLAYFISH
	f	Lcom/mojang/serialization/Codec;	m	CODEC
	f	Ljava/util/function/IntFunction;	n	BY_ID
	f	Ljava/lang/String;	o	name
	f	Ltl;	p	displayName
	f	Lbvr$a;	q	base
	f	I	r	packedId
	f	[Lbvr$b;	s	$VALUES
c	bvr$c	net/minecraft/world/entity/animal/TropicalFish$TropicalFishGroupData
	m	(Lbvr;Lbvr$d;)V	<init>	<init>
		p	1		leader
		p	2		variant
	f	Lbvr$d;	b	variant
c	bvr$d	net/minecraft/world/entity/animal/TropicalFish$Variant
	m	()I	a	getPackedId
	m	()Lbvr$b;	b	pattern
	m	()Lcht;	c	baseColor
	m	()Lcht;	d	patternColor
	f	Lbvr$b;	a	pattern
	f	Lcht;	b	baseColor
	f	Lcht;	c	patternColor
c	bvs	net/minecraft/world/entity/animal/Turtle
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()I	O	getAmbientSoundInterval
	m	(Lakq;Lbil;)Lbil;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lakq;Lbjf;)V	a	thunderHit
		p	1		world
		p	2		lightning
	m	(Lbiq;Lbir;F)Lorg/joml/Vector3f;	a	getPassengerAttachmentPoint
		p	1		passenger
		p	2		dimensions
		p	3		scaleFactor
	m	(Lbvs;)Lasc;	a	access$000
	m	(Lcbu;)Z	a	canBeLeashed
		p	1		player
	m	(Lcqk;Lbgw;Lbjk;Lbjz;Lqw;)Lbjz;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lgw;Lcpy;)F	a	getWalkTargetValue
		p	1		pos
		p	2		world
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()F	aK	nextStep
	m	()Lapc;	aL	getSwimSound
	m	()V	a_	defineSynchedData
	m	(Lbvs;)Lasc;	b	access$100
	m	(Lcpv;)Lbsp;	b	createNavigation
		p	1		world
	m	(Lgw;Ldfj;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()V	b_	aiStep
	m	(Lbiu;Lcpw;Lbjk;Lgw;Lasc;)Z	c	checkTurtleSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	()Z	cy	isPushedByFluid
	m	(Lbho;)Lapc;	d	getHurtSound
		p	1		source
	m	()Z	dQ	canBreatheUnderwater
	m	()F	dY	getScale
	m	(F)V	e	playSwimSound
		p	1		volume
	m	()Lbjl;	eR	getMobType
	m	()Lgw;	gd	getHomePos
	m	()Z	ge	canFallInLove
	m	()Lgw;	gj	getTravelPos
	m	()Z	gk	isGoingHome
	m	()Z	gl	isTravelling
	m	(Lehn;)V	h	travel
		p	1		movementInput
	m	(Lgw;)V	i	setHomePos
		p	1		pos
	m	(Lbjg;)Z	j	lambda$static$0
		p	0		entity
	m	(Lgw;)V	j	setTravelPos
		p	1		pos
	m	()Lapc;	l_	getDeathSound
	m	()V	m	ageBoundaryReached
	m	(Lcjf;)Z	m	isFood
		p	1		stack
	m	()Z	s	hasEgg
	m	()Z	t	isLayingEgg
	m	()Lapc;	w	getAmbientSound
	m	(Z)V	w	setHasEgg
		p	1		hasEgg
	m	(Z)V	x	setLayingEgg
		p	1		diggingSand
	m	()Lbkl$a;	y	createAttributes
	m	(Z)V	y	setGoingHome
		p	1		landBound
	m	()V	z	registerGoals
	m	(Z)V	z	setTravelling
		p	1		traveling
	f	Lcmg;	bT	FOOD_ITEMS
	f	Ljava/util/function/Predicate;	bU	BABY_ON_LAND_SELECTOR
	f	Laee;	bW	HOME_POS
	f	Laee;	bX	HAS_EGG
	f	Laee;	bY	LAYING_EGG
	f	Laee;	bZ	TRAVEL_POS
	f	Laee;	ca	GOING_HOME
	f	Laee;	cb	TRAVELLING
	f	I	cc	layEggCounter
c	bvs$a	net/minecraft/world/entity/animal/Turtle$TurtleBreedGoal
	m	(Lbvs;D)V	<init>	<init>
		p	1		turtle
		p	2		speed
	m	()Z	a	canUse
	m	()V	g	breed
	f	Lbvs;	d	turtle
c	bvs$b	net/minecraft/world/entity/animal/Turtle$TurtleGoHomeGoal
	m	(Lbvs;D)V	<init>	<init>
		p	1		turtle
		p	2		speed
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lbvs;	a	turtle
	f	D	b	speedModifier
	f	Z	c	stuck
	f	I	d	closeToHomeTryTicks
	f	I	e	GIVE_UP_TICKS
c	bvs$c	net/minecraft/world/entity/animal/Turtle$TurtleGoToWaterGoal
	m	(Lbvs;D)V	<init>	<init>
		p	1		turtle
		p	2		speed
	m	()Z	a	canUse
	m	(Lcpy;Lgw;)Z	a	isValidTarget
		p	1		world
		p	2		pos
	m	()Z	b	canContinueToUse
	m	()Z	l	shouldRecalculatePath
	f	I	g	GIVE_UP_TICKS
	f	Lbvs;	h	turtle
c	bvs$d	net/minecraft/world/entity/animal/Turtle$TurtleLayEggGoal
	m	(Lbvs;D)V	<init>	<init>
		p	1		turtle
		p	2		speed
	m	()Z	a	canUse
	m	(Lcpy;Lgw;)Z	a	isValidTarget
		p	1		world
		p	2		pos
	m	()Z	b	canContinueToUse
	m	()V	e	tick
	f	Lbvs;	g	turtle
c	bvs$e	net/minecraft/world/entity/animal/Turtle$TurtleMoveControl
	m	(Lbvs;)V	<init>	<init>
		p	1		turtle
	m	()V	a	tick
	m	()V	g	updateSpeed
	f	Lbvs;	l	turtle
c	bvs$f	net/minecraft/world/entity/animal/Turtle$TurtlePanicGoal
	m	(Lbvs;D)V	<init>	<init>
		p	1		turtle
		p	2		speed
	m	()Z	a	canUse
c	bvs$g	net/minecraft/world/entity/animal/Turtle$TurtlePathNavigation
	m	(Lbvs;Lcpv;)V	<init>	<init>
		p	1		owner
		p	2		world
	m	(Lgw;)Z	a	isStableDestination
		p	1		pos
c	bvs$h	net/minecraft/world/entity/animal/Turtle$TurtleRandomStrollGoal
	m	(Lbvs;DI)V	<init>	<init>
		p	1		turtle
		p	2		speed
		p	4		chance
	m	()Z	a	canUse
	f	Lbvs;	i	turtle
c	bvs$i	net/minecraft/world/entity/animal/Turtle$TurtleTravelGoal
	m	(Lbvs;D)V	<init>	<init>
		p	1		turtle
		p	2		speed
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lbvs;	a	turtle
	f	D	b	speedModifier
	f	Z	c	stuck
c	bvt	net/minecraft/world/entity/animal/WaterAnimal
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()I	O	getAmbientSoundInterval
	m	(Lcbu;)Z	a	canBeLeashed
		p	1		player
	m	(Lcpy;)Z	a	checkSpawnObstruction
		p	1		world
	m	()V	aq	baseTick
	m	(I)V	b	handleAirSupply
		p	1		air
	m	(Lbiu;Lcpw;Lbjk;Lgw;Lasc;)Z	c	checkSurfaceWaterAnimalSpawnRules
		p	0		type
		p	1		world
		p	2		reason
		p	3		pos
		p	4		random
	m	()Z	cy	isPushedByFluid
	m	()Z	dQ	canBreatheUnderwater
	m	()Lbjl;	eR	getMobType
	m	()I	ed	getExperienceReward
c	bvu	net/minecraft/world/entity/animal/Wolf
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Z)V	A	setIsInterested
		p	1		begging
	m	(Lbiq;)Z	C	doHurtTarget
		p	1		target
	m	(F)F	E	getWetShade
		p	1		tickDelta
	m	(F)F	F	getHeadRollAngle
		p	1		tickDelta
	m	()I	Y	getMaxHeadXRot
	m	()I	a	getRemainingPersistentAngerTime
	m	(I)V	a	setRemainingPersistentAngerTime
		p	1		angerTime
	m	(Lakq;Lbil;)Lbil;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lbho;)V	a	die
		p	1		damageSource
	m	(Lbho;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbiq;Lbir;F)Lorg/joml/Vector3f;	a	getPassengerAttachmentPoint
		p	1		passenger
		p	2		dimensions
		p	3		scaleFactor
	m	(Lbjg;Lbjg;)Z	a	wantsToAttack
		p	1		target
		p	2		owner
	m	(Lbur;)Z	a	canMate
		p	1		other
	m	(Lbvu;)Lasc;	a	access$000
	m	(Lcbu;)Z	a	canBeLeashed
		p	1		player
	m	(Lcht;)V	a	setCollarColor
		p	1		color
	m	(Ljava/util/UUID;)V	a	setPersistentAngerTarget
		p	1		angryAt
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	()Ljava/util/UUID;	b	getPersistentAngerTarget
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	(Lakq;Lbil;)Lbvu;	b	getBreedOffspring
	m	(Lbjs;Lbir;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lcbu;Lbgx;)Lbgy;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lgw;Ldfj;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()V	b_	aiStep
	m	()V	c	startPersistentAngerTimer
	m	(Lbiu;Lcpw;Lbjk;Lgw;Lasc;)Z	c	checkWolfSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	()Lehn;	cI	getLeashOffset
	m	(Lbho;)Lapc;	d	getHurtSound
		p	1		source
	m	()F	eV	getSoundVolume
	m	(FF)F	f	getBodyRollAngle
		p	1		tickDelta
	m	()I	fH	getMaxSpawnClusterSize
	m	()Lbkl$a;	gj	createAttributes
	m	()Z	gk	isWet
	m	()F	gl	getTailAngle
	m	()Lcht;	gm	getCollarColor
	m	()Z	gn	isInterested
	m	()V	go	cancelShake
	m	(Lbjg;)Z	k	lambda$static$0
		p	0		entity
	m	()V	l	tick
	m	()Lapc;	l_	getDeathSound
	m	(Lcjf;)Z	m	isFood
		p	1		stack
	m	()Lapc;	w	getAmbientSound
	m	(Z)V	x	setTame
		p	1		tamed
	m	()V	z	registerGoals
	f	Ljava/util/function/Predicate;	bW	PREY_SELECTOR
	f	Laee;	bX	DATA_INTERESTED_ID
	f	Laee;	bY	DATA_COLLAR_COLOR
	f	Laee;	bZ	DATA_REMAINING_ANGER_TIME
	f	F	ca	START_HEALTH
	f	F	cb	TAME_HEALTH
	f	F	cc	interestedAngle
	f	F	cd	interestedAngleO
	f	Z	ce	isWet
	f	Z	cf	isShaking
	f	F	cg	shakeAnim
	f	F	ch	shakeAnimO
	f	Lbgj;	ci	PERSISTENT_ANGER_TIME
	f	Ljava/util/UUID;	cj	persistentAngerTarget
c	bvu$a	net/minecraft/world/entity/animal/Wolf$WolfAvoidEntityGoal
	m	(Lbvu;Lbvu;Ljava/lang/Class;FDD)V	<init>	<init>
		p	2		wolf
		p	3		fleeFromType
		p	4		distance
		p	5		slowSpeed
		p	7		fastSpeed
	m	()Z	a	canUse
	m	(Lbwt;)Z	a	avoidLlama
		p	1		llama
	m	()V	c	start
	m	()V	e	tick
	f	Lbvu;	i	this$0
	f	Lbvu;	j	wolf
c	bvu$b	net/minecraft/world/entity/animal/Wolf$WolfPanicGoal
	m	(Lbvu;D)V	<init>	<init>
		p	2		speed
	m	()Z	h	shouldPanic
	f	Lbvu;	h	this$0
c	bvv	net/minecraft/world/entity/animal/allay/Allay
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(F)F	E	getHoldingItemAnimationProgress
	m	(F)F	F	getSpinningProgress
	m	()Lhy;	T	getPickupReach
	m	()V	W	sendDebugPackets
	m	()V	X	customServerAiStep
	m	(DZLdfj;Lgw;)V	a	checkFallDamage
		p	1		heightDifference
		p	3		onGround
		p	4		state
		p	5		landedPosition
	m	(Lbho;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lcbu;Lcjf;)V	a	removeInteractionItem
		p	1		player
		p	2		stack
	m	(Lcjf;Lcjf;)Z	a	equipmentHasChanged
		p	1		stack
		p	2		stack2
	m	(Lcom/mojang/serialization/Dynamic;)Lbkg;	a	makeBrain
		p	1		dynamic
	m	(Ldkc$a;)V	a	lambda$readAdditionalSaveData$1
	m	(Ljava/util/function/BiConsumer;)V	a	updateDynamicGameEventListener
		p	1		callback
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lqw;Lrq;)V	a	lambda$addAdditionalSaveData$0
	m	()Z	aR	isFlapping
	m	()V	a_	defineSynchedData
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	(Lbjs;Lbir;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lbyn;)V	b	pickUpItem
		p	1		item
	m	(Lcbu;Lbgx;)Lbgy;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lcpv;)Lbsp;	b	createNavigation
		p	1		world
	m	(Lgw;Ldfj;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lgw;Z)V	b	setJukeboxPlaying
		p	1		jukeboxPos
		p	2		playing
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()V	b_	aiStep
	m	()Lehn;	cI	getLeashOffset
	m	(Lbho;)Lapc;	d	getHurtSound
		p	1		source
	m	(Lcjf;Lcjf;)Z	d	allayConsidersItemEqual
		p	1		stack
		p	2		stack2
	m	()Lbkg;	dN	getBrain
	m	()Lbkg$b;	dO	brainProvider
	m	(Lcjf;Lcjf;)Z	e	hasNonMatchingPotion
		p	1		stack
		p	2		stack2
	m	()F	eV	getSoundVolume
	m	()V	ex	dropEquipment
	m	(Lcjf;)Z	f	canTakeItem
		p	1		stack
	m	()Z	fJ	canPickUpLoot
	m	()Z	gb	shouldStayCloseToLeashHolder
	m	()Z	gd	isDancing
	m	()Z	ge	isSpinning
	m	()Ldkc$a;	gf	getVibrationData
	m	()Ldkc$d;	gg	getVibrationUser
	m	()Z	gh	isOnPickupCooldown
	m	()Z	gi	shouldStopDancing
	m	()V	gj	updateDuplicationCooldown
	m	()V	gk	duplicateAllay
	m	()V	gl	resetDuplicationCooldown
	m	()Z	gm	canDuplicate
	m	()V	gn	spawnHeartParticle
	m	(D)Z	h	removeWhenFarAway
		p	1		distanceSquared
	m	(Lehn;)V	h	travel
		p	1		movementInput
	m	(Lcjf;)Z	k	wantsToPickUp
		p	1		stack
	m	()V	l	tick
	m	(Lbiq;)F	l	ridingOffset
		p	1		vehicle
	m	(Lcjf;)Z	l	isDuplicationItem
		p	1		stack
	m	()Lapc;	l_	getDeathSound
	m	()Lbkl$a;	s	createAttributes
	m	()Z	t	hasItemInHand
	m	()Lapc;	w	getAmbientSound
	m	(Z)V	w	setDancing
		p	1		dancing
	m	()Lbhf;	y	getInventory
	f	Lcom/google/common/collect/ImmutableList;	b	SENSOR_TYPES
	f	Lhy;	bT	ITEM_PICKUP_REACH
	f	I	bU	LIFTING_ITEM_ANIMATION_DURATION
	f	F	bV	DANCING_LOOP_DURATION
	f	F	bW	SPINNING_ANIMATION_DURATION
	f	Lcmg;	bX	DUPLICATION_ITEM
	f	I	bY	DUPLICATION_COOLDOWN_TICKS
	f	I	bZ	NUM_OF_DUPLICATION_HEARTS
	f	Lcom/google/common/collect/ImmutableList;	c	MEMORY_TYPES
	f	Laee;	ca	DATA_DANCING
	f	Laee;	cb	DATA_CAN_DUPLICATE
	f	Ldjq;	cc	dynamicVibrationListener
	f	Ldkc$a;	cd	vibrationData
	f	Ldkc$d;	ce	vibrationUser
	f	Ldjq;	cf	dynamicJukeboxListener
	f	Lbhf;	cg	inventory
	f	Lgw;	ch	jukeboxPos
	f	J	ci	duplicationCooldown
	f	F	cj	holdingItemAnimationTicks
	f	F	ck	holdingItemAnimationTicks0
	f	F	cl	dancingAnimationTicks
	f	F	cm	spinningAnimationTicks
	f	F	cn	spinningAnimationTicks0
	f	Lcom/google/common/collect/ImmutableList;	d	THROW_SOUND_PITCHES
	f	Lorg/slf4j/Logger;	e	LOGGER
c	bvv$a	net/minecraft/world/entity/animal/allay/Allay$JukeboxListener
	m	(Lbvv;Ldjx;I)V	<init>	<init>
		p	2		positionSource
		p	3		range
	m	()Ldjx;	a	getListenerSource
	m	(Lakq;Ldjt;Ldjt$a;Lehn;)Z	a	handleGameEvent
		p	1		world
		p	2		event
		p	3		emitter
		p	4		emitterPos
	m	()I	b	getListenerRadius
	f	Lbvv;	a	this$0
	f	Ldjx;	b	listenerSource
	f	I	c	listenerRadius
c	bvv$b	net/minecraft/world/entity/animal/allay/Allay$VibrationUser
	m	()I	a	getListenerRadius
	m	(Lakq;Lgw;Ldjt;Lbiq;Lbiq;F)V	a	onReceiveVibration
		p	1		world
		p	2		pos
		p	3		event
		p	4		sourceEntity
		p	5		entity
		p	6		distance
	m	(Lakq;Lgw;Ldjt;Ldjt$a;)Z	a	canReceiveVibration
		p	1		world
		p	2		pos
		p	3		event
		p	4		emitter
	m	()Ldjx;	b	getPositionSource
	m	()Laqh;	c	getListenableEvents
	f	Lbvv;	a	this$0
	f	I	b	VIBRATION_EVENT_LISTENER_RANGE
	f	Ldjx;	c	positionSource
c	bvw	net/minecraft/world/entity/animal/allay/AllayAi
	m	(Lakr;)Lbmk;	a	lambda$getLikedPlayerPositionTracker$1
		p	0		player
	m	(Lbjg;)Ljava/util/Optional;	a	getLikedPlayer
		p	0		allay
	m	(Lbjg;Lbkg;Lhd;)Z	a	shouldDepositItemsAtLikedNoteblock
		p	0		allay
		p	1		brain
		p	2		pos
	m	(Lbjg;Lgw;)V	a	hearNoteblock
		p	0		allay
		p	1		pos
	m	(Lbkg;)Lbkg;	a	makeBrain
		p	0		brain
	m	(Lbvv;)V	a	updateActivity
		p	0		allay
	m	(Lbjg;)Ljava/util/Optional;	b	getItemDepositPosition
		p	0		allay
	m	(Lbkg;)V	b	initCoreActivity
		p	0		brain
	m	(Lbvv;)Z	b	lambda$initIdleActivity$0
		p	0		allay
	m	(Lbjg;)Z	c	hasWantedItem
		p	0		entity
	m	(Lbkg;)V	c	initIdleActivity
		p	0		brain
	m	(Lbjg;)Ljava/util/Optional;	d	getLikedPlayerPositionTracker
		p	0		allay
	f	F	a	SPEED_MULTIPLIER_WHEN_IDLING
	f	F	b	SPEED_MULTIPLIER_WHEN_FOLLOWING_DEPOSIT_TARGET
	f	F	c	SPEED_MULTIPLIER_WHEN_RETRIEVING_ITEM
	f	F	d	SPEED_MULTIPLIER_WHEN_PANICKING
	f	I	e	CLOSE_ENOUGH_TO_TARGET
	f	I	f	TOO_FAR_FROM_TARGET
	f	I	g	MAX_LOOK_DISTANCE
	f	I	h	MIN_WAIT_DURATION
	f	I	i	MAX_WAIT_DURATION
	f	I	j	TIME_TO_FORGET_NOTEBLOCK
	f	I	k	DISTANCE_TO_WANTED_ITEM
	f	I	l	GIVE_ITEM_TIMEOUT_DURATION
c	bvx	net/minecraft/world/entity/animal/allay/package-info
c	bvy	net/minecraft/world/entity/animal/axolotl/Axolotl
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lbiq;)Z	C	doHurtTarget
		p	1		target
	m	()V	P	playAmbientSound
	m	()Z	U	requiresCustomPersistence
	m	()V	W	sendDebugPackets
	m	()V	X	customServerAiStep
	m	()I	Y	getMaxHeadXRot
	m	()I	Z	getMaxHeadYRot
	m	()Ljava/util/Map;	a	getModelRotationValues
	m	(Lakq;Lbil;)Lbil;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lasc;)Z	a	useRareVariant
		p	0		random
	m	(Lbho;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbiu;Lcqk;Lbjk;Lgw;Lasc;)Z	a	checkAxolotlSpawnRules
		p	0		type
		p	1		world
		p	2		reason
		p	3		pos
		p	4		random
	m	(Lbvy$d;)V	a	setVariant
		p	1		variant
	m	(Lbvy;Lbjg;)V	a	onStopAttacking
		p	0		axolotl
		p	1		entity
	m	(Lcbu;)Z	a	canBeLeashed
		p	1		player
	m	(Lcbu;Lbgx;Lcjf;)V	a	usePlayerItem
		p	1		player
		p	2		hand
		p	3		stack
	m	(Lcom/mojang/serialization/Dynamic;)Lbkg;	a	makeBrain
		p	1		dynamic
	m	(Lcpy;)Z	a	checkSpawnObstruction
		p	1		world
	m	(Lcqk;Lbgw;Lbjk;Lbjz;Lqw;)Lbjz;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lgw;Lcpy;)F	a	getWalkTargetValue
		p	1		pos
		p	2		world
	m	(Ljava/lang/Object;)V	a	setVariant
		p	1		variant
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()Lapc;	aL	getSwimSound
	m	()Lapc;	aM	getSwimSplashSound
	m	()V	a_	defineSynchedData
	m	()V	aq	baseTick
	m	()Lcjf;	b	getBucketItemStack
	m	(Lbjs;Lbir;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lcbu;Lbgx;)Lbgy;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lcpv;)Lbsp;	b	createNavigation
		p	1		world
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Ljava/lang/Object;	c	getVariant
	m	(Lqw;)V	c	loadFromBucketTag
		p	1		nbt
	m	()I	cg	getMaxAirSupply
	m	()Z	cy	isPushedByFluid
	m	(Lbho;)Lapc;	d	getHurtSound
		p	1		source
	m	()Lbkg;	dN	getBrain
	m	()Lbkg$b;	dO	brainProvider
	m	()Z	dQ	canBreatheUnderwater
	m	()Lbjl;	eR	getMobType
	m	()Z	en	canBeSeenAsEnemy
	m	(Lcbu;)V	f	applySupportingEffects
		p	1		player
	m	()Lbvy$d;	gd	getVariant
	m	()Z	gj	isPlayingDead
	m	()Lbkl$a;	gk	createAttributes
	m	(D)Z	h	removeWhenFarAway
		p	1		distanceSquared
	m	(Lehn;)V	h	travel
		p	1		movementInput
	m	(Lcjf;)V	l	saveToBucketTag
		p	1		stack
	m	()Lapc;	l_	getDeathSound
	m	(Lcjf;)Z	m	isFood
		p	1		stack
	m	()V	s	rehydrate
	m	()Z	t	fromBucket
	m	(I)V	t	handleAirSupply
		p	1		air
	m	()Lapc;	w	getAmbientSound
	m	(Z)V	w	setFromBucket
		p	1		fromBucket
	m	(Z)V	x	setPlayingDead
		p	1		playingDead
	m	()Lapc;	y	getPickupSound
	f	I	bT	TOTAL_PLAYDEAD_TIME
	f	Lcom/google/common/collect/ImmutableList;	bU	SENSOR_TYPES
	f	Lcom/google/common/collect/ImmutableList;	bW	MEMORY_TYPES
	f	D	bX	PLAYER_REGEN_DETECTION_RANGE
	f	I	bY	RARE_VARIANT_CHANCE
	f	Ljava/lang/String;	bZ	VARIANT_TAG
	f	Laee;	ca	DATA_VARIANT
	f	Laee;	cb	DATA_PLAYING_DEAD
	f	Laee;	cc	FROM_BUCKET
	f	I	cd	AXOLOTL_TOTAL_AIR_SUPPLY
	f	I	ce	REHYDRATE_AIR_SUPPLY
	f	I	cf	REGEN_BUFF_MAX_DURATION
	f	Ljava/util/Map;	cg	modelRotationValues
	f	I	ch	REGEN_BUFF_BASE_DURATION
c	bvy$a	net/minecraft/world/entity/animal/axolotl/Axolotl$AxolotlGroupData
	m	([Lbvy$d;)V	<init>	<init>
		p	1		variants
	m	(Lasc;)Lbvy$d;	a	getVariant
		p	1		random
	f	[Lbvy$d;	a	types
c	bvy$b	net/minecraft/world/entity/animal/axolotl/Axolotl$AxolotlLookControl
	m	(Lbvy;Lbvy;I)V	<init>	<init>
		p	2		axolotl
		p	3		yawAdjustThreshold
	m	()V	a	tick
	f	Lbvy;	h	this$0
c	bvy$c	net/minecraft/world/entity/animal/axolotl/Axolotl$AxolotlMoveControl
	m	(Lbvy;)V	<init>	<init>
		p	1		axolotl
	m	()V	a	tick
	f	Lbvy;	l	axolotl
c	bvy$d	net/minecraft/world/entity/animal/axolotl/Axolotl$Variant
	m	(Ljava/lang/String;IILjava/lang/String;Z)V	<init>	<init>
		p	3		id
		p	4		name
		p	5		natural
	m	()I	a	getId
	m	(I)Lbvy$d;	a	byId
		p	0		id
	m	(Lasc;)Lbvy$d;	a	getCommonSpawnVariant
		p	0		random
	m	(Lasc;Z)Lbvy$d;	a	getSpawnVariant
		p	0		random
		p	1		natural
	m	(ZLbvy$d;)Z	a	lambda$getSpawnVariant$0
		p	1		variant
	m	()Ljava/lang/String;	b	getName
	m	(I)[Lbvy$d;	b	lambda$getSpawnVariant$1
	m	(Lasc;)Lbvy$d;	b	getRareSpawnVariant
		p	0		random
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Lbvy$d;	d	$values
	f	Lbvy$d;	a	LUCY
	f	Lbvy$d;	b	WILD
	f	Lbvy$d;	c	GOLD
	f	Lbvy$d;	d	CYAN
	f	Lbvy$d;	e	BLUE
	f	Lcom/mojang/serialization/Codec;	f	CODEC
	f	Ljava/util/function/IntFunction;	g	BY_ID
	f	I	h	id
	f	Ljava/lang/String;	i	name
	f	Z	j	common
	f	[Lbvy$d;	k	$VALUES
c	bvz	net/minecraft/world/entity/animal/axolotl/AxolotlAi
	m	()Lcmg;	a	getTemptations
	m	(Lbjg;)Z	a	canSetWalkTargetFromLookTarget
		p	0		entity
	m	(Lbkg;)Lbkg;	a	makeBrain
		p	0		brain
	m	(Lbvy;)V	a	updateActivity
		p	0		axolotl
	m	(Lbjg;)F	b	getSpeedModifierChasing
		p	0		entity
	m	(Lbkg;)V	b	initPlayDeadActivity
		p	0		brain
	m	(Lbvy;)Ljava/util/Optional;	b	findNearestValidAttackTarget
		p	0		axolotl
	m	(Lbjg;)F	c	getSpeedModifierFollowingAdult
		p	0		entity
	m	(Lbkg;)V	c	initFightActivity
		p	0		brain
	m	(Lbjg;)F	d	getSpeedModifier
		p	0		entity
	m	(Lbkg;)V	d	initCoreActivity
		p	0		brain
	m	(Lbkg;)V	e	initIdleActivity
		p	0		brain
	f	Lbgj;	a	ADULT_FOLLOW_RANGE
	f	F	b	SPEED_MULTIPLIER_WHEN_MAKING_LOVE
	f	F	c	SPEED_MULTIPLIER_ON_LAND
	f	F	d	SPEED_MULTIPLIER_WHEN_IDLING_IN_WATER
	f	F	e	SPEED_MULTIPLIER_WHEN_CHASING_IN_WATER
	f	F	f	SPEED_MULTIPLIER_WHEN_FOLLOWING_ADULT_IN_WATER
c	bwa	net/minecraft/world/entity/animal/axolotl/PlayDead
	m	(Lakq;Lbjg;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lakq;Lbjg;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbvy;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lakq;Lbvy;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbvy;J)V	b	start
	m	(Lakq;Lbjg;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
c	bwb	net/minecraft/world/entity/animal/axolotl/ValidatePlayDead
	m	()Lbky;	a	create
	m	(Lboj$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
		p	0		context
	m	(Lboj$b;Lbok;Lbok;)Lbom;	a	lambda$create$1
		p	1		playDeadTicks
		p	2		hurtByEntity
	m	(Lboj$b;Lbok;Lbok;Lakq;Lbjg;J)Z	a	lambda$create$0
		p	3		world
		p	4		entity
		p	5		time
c	bwc	net/minecraft/world/entity/animal/axolotl/package-info
c	bwd	net/minecraft/world/entity/animal/camel/Camel
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(F)V	D	onLeashDistance
		p	1		leashLength
	m	()Lboz;	F	createBodyControl
	m	()V	W	sendDebugPackets
	m	()Lapc;	W_	getSaddleSoundEvent
	m	()V	X	customServerAiStep
	m	()I	Z	getMaxHeadYRot
	m	()Z	a	canJump
	m	(J)V	a	resetLastPoseChangeTick
		p	1		lastPoseTick
	m	(Laee;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Lakq;Lbil;)Lbil;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lbiq;F)V	a	clampHeadRotationToBody
		p	1		entity
		p	2		range
	m	(Lbiq;Lbir;F)Lorg/joml/Vector3f;	a	getPassengerAttachmentPoint
		p	1		passenger
		p	2		dimensions
		p	3		scaleFactor
	m	(Lbjs;)Lbir;	a	getDimensions
		p	1		pose
	m	(Lbur;)Z	a	canMate
		p	1		other
	m	(Lcbu;Lcjf;)Z	a	handleEating
		p	1		player
		p	2		item
	m	(Lcbu;Lehn;)V	a	tickRidden
		p	1		controllingPlayer
		p	2		movementInput
	m	(Lcom/mojang/serialization/Dynamic;)Lbkg;	a	makeBrain
		p	1		dynamic
	m	(Lcqk;Lbgw;Lbjk;Lbjz;Lqw;)Lbjz;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(ZFLbir;F)D	a	getBodyAnchorAnimationYOffset
		p	1		primaryPassenger
		p	2		tickDelta
		p	3		dimensions
		p	4		scaleFactor
	m	()V	a_	defineSynchedData
	m	()I	aa_	getJumpCooldown
	m	()V	b	handleStopJump
	m	(FLehn;)V	b	executeRidersJump
		p	1		strength
		p	2		movementInput
	m	(I)V	b	onPlayerJump
		p	1		strength
	m	(J)V	b	resetLastPoseChangeTickToFullStand
		p	1		time
	m	(Lakq;Lbil;)Lbwd;	b	getBreedOffspring
	m	(Lbjs;Lbir;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lcbu;)V	b	openCustomInventoryScreen
		p	1		player
	m	(Lcbu;Lbgx;)Lbgy;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lcbu;Lehn;)Lehn;	b	getRiddenInput
		p	1		controllingPlayer
		p	2		movementInput
	m	(Lgw;Ldfj;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(I)V	c	handleStartJump
		p	1		height
	m	(Lbho;)Lapc;	d	getHurtSound
		p	1		source
	m	()Z	dE	canSprint
	m	()Lbkg$b;	dO	brainProvider
	m	()F	dY	getScale
	m	(Lcbu;)F	e	getRiddenSpeed
		p	1		controllingPlayer
	m	(Lbho;F)V	f	actuallyHurt
		p	1		source
		p	2		amount
	m	()V	gP	setupAnimationStates
	m	()Z	gQ	isVisuallySittingDown
	m	()Z	gd	canCamelChangePose
	m	()Z	gj	canPerformRearing
	m	()Lapc;	gk	getEatingSound
	m	()Z	gl	isCamelSitting
	m	()Z	gm	isCamelVisuallySitting
	m	()Z	gn	isInPoseTransition
	m	()V	go	sitDown
	m	()V	gp	standUp
	m	()V	gq	standUpInstantly
	m	()J	gr	getPoseTime
	m	()Z	gs	isTamed
	m	(Lehn;)V	h	travel
		p	1		movementInput
	m	(Lbjg;)Lehm;	j	getRiddenRotation
		p	1		controllingPassenger
	m	()V	l	tick
	m	()Lapc;	l_	getDeathSound
	m	(Lcjf;)Z	m	isFood
		p	1		stack
	m	(F)Lehn;	p	getLeashOffset
		p	1		tickDelta
	m	(Lbiq;)Z	r	canAddPassenger
		p	1		passenger
	m	()Lbkl$a;	s	createAttributes
	m	()Z	t	refuseToMove
	m	(F)V	v	updateWalkAnimation
		p	1		posDelta
	m	()Lapc;	w	getAmbientSound
	m	(Z)V	w	setDashing
		p	1		dashing
	m	()Z	y	isDashing
	m	()V	z	registerGoals
	f	Lcmg;	bT	TEMPTATION_ITEM
	f	F	bU	BABY_SCALE
	f	I	bW	DASH_COOLDOWN_TICKS
	f	I	bX	MAX_HEAD_Y_ROT
	f	Laee;	bY	DASH
	f	Laee;	bZ	LAST_POSE_CHANGE_TICK
	f	I	cA	STANDUP_DURATION_TICKS
	f	I	cB	IDLE_MINIMAL_DURATION_TICKS
	f	F	cC	SITTING_HEIGHT_DIFFERENCE
	f	Lbir;	cD	SITTING_DIMENSIONS
	f	I	cE	dashCooldown
	f	I	cF	idleAnimationTimeout
	f	Lbim;	ca	sitAnimationState
	f	Lbim;	cb	sitPoseAnimationState
	f	Lbim;	cc	sitUpAnimationState
	f	Lbim;	cd	idleAnimationState
	f	Lbim;	ce	dashAnimationState
	f	F	cv	RUNNING_SPEED_BONUS
	f	F	cw	DASH_VERTICAL_MOMENTUM
	f	F	cx	DASH_HORIZONTAL_MOMENTUM
	f	I	cy	DASH_MINIMUM_DURATION_TICKS
	f	I	cz	SITDOWN_DURATION_TICKS
c	bwd$a	net/minecraft/world/entity/animal/camel/Camel$CamelBodyRotationControl
	m	(Lbwd;Lbwd;)V	<init>	<init>
		p	2		camel
	m	()V	a	clientTick
	f	Lbwd;	a	this$0
c	bwd$b	net/minecraft/world/entity/animal/camel/Camel$CamelLookControl
	m	(Lbwd;)V	<init>	<init>
		p	1		entity
	m	()V	a	tick
	f	Lbwd;	h	this$0
c	bwd$c	net/minecraft/world/entity/animal/camel/Camel$CamelMoveControl
	m	(Lbwd;)V	<init>	<init>
		p	1		entity
	m	()V	a	tick
	f	Lbwd;	l	this$0
c	bwe	net/minecraft/world/entity/animal/camel/CamelAi
	m	()Lbkg$b;	a	brainProvider
	m	(Lbjg;)Ljava/lang/Double;	a	lambda$initIdleActivity$1
		p	0		entity
	m	(Lbkg;)Lbkg;	a	makeBrain
		p	0		brain
	m	(Lbwd;)V	a	updateActivity
		p	0		camel
	m	(Lbwd;Lasc;)V	a	initMemories
		p	0		camel
		p	1		random
	m	()Lcmg;	b	getTemptations
	m	(Lbjg;)Ljava/lang/Float;	b	lambda$initIdleActivity$0
		p	0		entity
	m	(Lbkg;)V	b	initCoreActivity
		p	0		brain
	m	(Lbkg;)V	c	initIdleActivity
		p	0		brain
	f	F	a	SPEED_MULTIPLIER_WHEN_PANICKING
	f	F	b	SPEED_MULTIPLIER_WHEN_IDLING
	f	F	c	SPEED_MULTIPLIER_WHEN_TEMPTED
	f	F	d	SPEED_MULTIPLIER_WHEN_FOLLOWING_ADULT
	f	F	e	SPEED_MULTIPLIER_WHEN_MAKING_LOVE
	f	Lbgj;	f	ADULT_FOLLOW_RANGE
	f	Lcom/google/common/collect/ImmutableList;	g	SENSOR_TYPES
	f	Lcom/google/common/collect/ImmutableList;	h	MEMORY_TYPES
c	bwe$a	net/minecraft/world/entity/animal/camel/CamelAi$CamelPanic
	m	(F)V	<init>	<init>
		p	1		speed
	m	(Lakq;Lbjp;J)V	b	start
	m	(Lakq;Lbjg;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
c	bwe$b	net/minecraft/world/entity/animal/camel/CamelAi$RandomSitting
	m	(I)V	<init>	<init>
		p	1		lastPoseSecondsDelta
	m	(Lakq;Lbjg;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lakq;Lbwd;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lakq;Lbwd;J)V	a	start
	m	(Lakq;Lbjg;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
	f	I	c	minimalPoseTicks
c	bwf	net/minecraft/world/entity/animal/camel/package-info
c	bwg	net/minecraft/world/entity/animal/frog/Frog
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	W	sendDebugPackets
	m	()V	X	customServerAiStep
	m	()I	Z	getMaxHeadYRot
	m	(Laee;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Lakq;Lbil;)Lbil;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lakq;Lbur;)V	a	spawnChildFromBreeding
		p	1		world
		p	2		other
	m	(Lbiq;)V	a	setTongueTarget
		p	1		entity
	m	(Lbiq;Lbir;F)Lorg/joml/Vector3f;	a	getPassengerAttachmentPoint
		p	1		passenger
		p	2		dimensions
		p	3		scaleFactor
	m	(Lbvc;)V	a	setVariant
		p	1		variant
	m	(Lcom/mojang/serialization/Dynamic;)Lbkg;	a	makeBrain
		p	1		dynamic
	m	(Lcqk;Lbgw;Lbjk;Lbjz;Lqw;)Lbjz;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Ljava/lang/Object;)V	a	setVariant
		p	1		variant
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Z)V	a	setBaby
		p	1		baby
	m	()V	a_	defineSynchedData
	m	(Lcpv;)Lbsp;	b	createNavigation
		p	1		world
	m	(Lgw;Ldfj;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Ljava/lang/Object;	c	getVariant
	m	(Lbiu;Lcpw;Lbjk;Lgw;Lasc;)Z	c	checkFrogSpawnRules
		p	0		type
		p	1		world
		p	2		reason
		p	3		pos
		p	4		random
	m	()Z	cy	isPushedByFluid
	m	(FF)I	d	calculateFallDamage
		p	1		fallDistance
		p	2		damageMultiplier
	m	(Lbho;)Lapc;	d	getHurtSound
		p	1		source
	m	()Lbkg;	dN	getBrain
	m	()Lbkg$b;	dO	brainProvider
	m	()Z	dQ	canBreatheUnderwater
	m	()I	fG	getHeadRotSpeed
	m	()Lbkl$a;	gd	createAttributes
	m	(Lehn;)V	h	travel
		p	1		movementInput
	m	(Lbjg;)Z	j	canEat
		p	0		entity
	m	()V	l	tick
	m	()Lapc;	l_	getDeathSound
	m	(Lcjf;)Z	m	isFood
		p	1		stack
	m	()Z	m_	isBaby
	m	()V	s	eraseTongueTarget
	m	()Ljava/util/Optional;	t	getTongueTarget
	m	(F)V	v	updateWalkAnimation
		p	1		posDelta
	m	()Lapc;	w	getAmbientSound
	m	()Lbvc;	y	getVariant
	f	Lcmg;	bT	TEMPTATION_ITEM
	f	Lcom/google/common/collect/ImmutableList;	bU	SENSOR_TYPES
	f	Lcom/google/common/collect/ImmutableList;	bW	MEMORY_TYPES
	f	Ljava/lang/String;	bX	VARIANT_KEY
	f	Lbim;	bY	jumpAnimationState
	f	Lbim;	bZ	croakAnimationState
	f	Lbim;	ca	tongueAnimationState
	f	Lbim;	cb	swimIdleAnimationState
	f	Laee;	cc	DATA_VARIANT_ID
	f	Laee;	cd	DATA_TONGUE_TARGET_ID
	f	I	ce	FROG_FALL_DAMAGE_REDUCTION
c	bwg$a	net/minecraft/world/entity/animal/frog/Frog$FrogLookControl
	m	(Lbwg;Lbji;)V	<init>	<init>
		p	2		entity
	m	()Z	c	resetXRotOnTick
	f	Lbwg;	h	this$0
c	bwg$b	net/minecraft/world/entity/animal/frog/Frog$FrogNodeEvaluator
	m	(Z)V	<init>	<init>
		p	1		penalizeDeepWater
	m	()Leaz;	a	getStart
	m	(Lcpb;III)Leax;	a	getBlockPathType
		p	1		world
		p	2		x
		p	3		y
		p	4		z
	f	Lgw$a;	l	belowPos
c	bwg$c	net/minecraft/world/entity/animal/frog/Frog$FrogPathNavigation
	m	(Lbwg;Lcpv;)V	<init>	<init>
		p	1		frog
		p	2		world
	m	(I)Lebd;	a	createPathFinder
		p	1		range
	m	(Leax;)Z	b	canCutCorner
		p	1		nodeType
c	bwh	net/minecraft/world/entity/animal/frog/FrogAi
	m	()Lcmg;	a	getTemptations
	m	(Lbjg;)Ljava/lang/Float;	a	lambda$initSwimActivity$2
		p	0		frog
	m	(Lbji;Lgw;)Z	a	isAcceptableLandingSpot
		p	0		frog
		p	1		pos
	m	(Lbkg;)Lbkg;	a	makeBrain
		p	0		brain
	m	(Lbwg;)V	a	updateActivity
		p	0		frog
	m	(Lbwg;Lasc;)V	a	initMemories
		p	0		frog
		p	1		random
	m	(Lbjg;)Ljava/lang/Float;	b	lambda$initIdleActivity$0
		p	0		frog
	m	(Lbkg;)V	b	initCoreActivity
		p	0		brain
	m	(Lbwg;)Z	b	canAttack
		p	0		frog
	m	(Lbkg;)V	c	initIdleActivity
		p	0		brain
	m	(Lbwg;)Lapc;	c	lambda$initJumpActivity$5
		p	0		frog
	m	(Lbkg;)V	d	initSwimActivity
		p	0		brain
	m	(Lbwg;)Ljava/util/Optional;	d	lambda$initLaySpawnActivity$4
		p	0		frog
	m	(Lbkg;)V	e	initLaySpawnActivity
		p	0		brain
	m	(Lbwg;)Ljava/util/Optional;	e	lambda$initSwimActivity$3
		p	0		frog
	m	(Lbkg;)V	f	initJumpActivity
		p	0		brain
	m	(Lbwg;)Ljava/util/Optional;	f	lambda$initIdleActivity$1
		p	0		frog
	m	(Lbkg;)V	g	initTongueActivity
		p	0		brain
	f	F	a	SPEED_MULTIPLIER_WHEN_PANICKING
	f	F	b	SPEED_MULTIPLIER_WHEN_MAKING_LOVE
	f	F	c	SPEED_MULTIPLIER_WHEN_IDLING
	f	F	d	SPEED_MULTIPLIER_ON_LAND
	f	F	e	SPEED_MULTIPLIER_IN_WATER
	f	Lbgj;	f	TIME_BETWEEN_LONG_JUMPS
	f	I	g	MAX_LONG_JUMP_HEIGHT
	f	I	h	MAX_LONG_JUMP_WIDTH
	f	F	i	MAX_JUMP_VELOCITY
	f	F	j	SPEED_MULTIPLIER_WHEN_TEMPTED
c	bwi	net/minecraft/world/entity/animal/frog/ShootTongue
	m	(Lapc;Lapc;)V	<init>	<init>
		p	1		tongueSound
		p	2		eatSound
	m	(Lakq;Lbjg;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lakq;Lbjg;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbwg;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lakq;Lbwg;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lbwg;Lbjg;)Z	a	canPathfindToTarget
		p	1		entity
		p	2		target
	m	(Lakq;Lbjg;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbwg;)V	b	eatEntity
		p	1		world
		p	2		frog
	m	(Lakq;Lbwg;J)V	b	start
	m	(Lbwg;Lbjg;)V	b	addUnreachableTargetToMemory
		p	1		entity
		p	2		target
	m	(Lakq;Lbjg;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbwg;J)V	c	stop
	m	(Lakq;Lbjg;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbwg;J)V	d	tick
	f	I	c	TIME_OUT_DURATION
	f	I	d	CATCH_ANIMATION_DURATION
	f	I	e	TONGUE_ANIMATION_DURATION
	f	I	f	UNREACHABLE_TONGUE_TARGETS_COOLDOWN_DURATION
	f	I	g	MAX_UNREACHBLE_TONGUE_TARGETS_IN_MEMORY
	f	F	h	EATING_DISTANCE
	f	F	i	EATING_MOVEMENT_FACTOR
	f	I	j	eatAnimationTimer
	f	I	k	calculatePathCounter
	f	Lapc;	l	tongueSound
	f	Lapc;	m	eatSound
	f	Lehn;	n	itemSpawnPos
	f	Lbwi$a;	o	state
c	bwi$1	net/minecraft/world/entity/animal/frog/ShootTongue$1
	f	[I	a	$SwitchMap$net$minecraft$world$entity$animal$frog$ShootTongue$State
c	bwi$a	net/minecraft/world/entity/animal/frog/ShootTongue$State
	m	()[Lbwi$a;	a	$values
	f	Lbwi$a;	a	MOVE_TO_TARGET
	f	Lbwi$a;	b	CATCH_ANIMATION
	f	Lbwi$a;	c	EAT_ANIMATION
	f	Lbwi$a;	d	DONE
	f	[Lbwi$a;	e	$VALUES
c	bwj	net/minecraft/world/entity/animal/frog/Tadpole
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	W	sendDebugPackets
	m	()V	X	customServerAiStep
	m	(Lcbu;Lcjf;)V	a	feed
		p	1		player
		p	2		stack
	m	(Lcom/mojang/serialization/Dynamic;)Lbkg;	a	makeBrain
		p	1		dynamic
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()Lcjf;	b	getBucketItemStack
	m	(Lcbu;Lbgx;)Lbgy;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lcbu;Lcjf;)V	b	usePlayerItem
		p	1		player
		p	2		stack
	m	(Lcpv;)Lbsp;	b	createNavigation
		p	1		world
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()V	b_	aiStep
	m	(I)V	c	ageUp
		p	1		seconds
	m	(Lqw;)V	c	loadFromBucketTag
		p	1		nbt
	m	(Lbho;)Lapc;	d	getHurtSound
		p	1		source
	m	()Lbkg;	dN	getBrain
	m	()Lbkg$b;	dO	brainProvider
	m	()Z	eb	shouldDropExperience
	m	()Lapc;	ge	getFlopSound
	m	()Lbkl$a;	gf	createAttributes
	m	()I	gg	getAge
	m	()V	gh	ageUp
	m	()I	gi	getTicksLeftUntilAdult
	m	(Lcjf;)V	l	saveToBucketTag
		p	1		stack
	m	()Lapc;	l_	getDeathSound
	m	(Lcjf;)Z	m	isFood
		p	1		stack
	m	(I)V	s	setAge
		p	1		tadpoleAge
	m	()Z	t	fromBucket
	m	()Lapc;	w	getAmbientSound
	m	(Z)V	w	setFromBucket
		p	1		fromBucket
	m	()Lapc;	y	getPickupSound
	f	I	b	ticksToBeFrog
	f	Lcom/google/common/collect/ImmutableList;	bT	MEMORY_TYPES
	f	I	bU	age
	f	F	c	HITBOX_WIDTH
	f	F	d	HITBOX_HEIGHT
	f	Lcom/google/common/collect/ImmutableList;	e	SENSOR_TYPES
c	bwk	net/minecraft/world/entity/animal/frog/TadpoleAi
	m	(Lbjg;)Ljava/lang/Float;	a	lambda$initIdleActivity$0
	m	(Lbkg;)Lbkg;	a	makeBrain
		p	0		brain
	m	(Lbwj;)V	a	updateActivity
		p	0		tadpole
	m	(Lbkg;)V	b	initCoreActivity
		p	0		brain
	m	(Lbkg;)V	c	initIdleActivity
		p	0		brain
	f	F	a	SPEED_MULTIPLIER_WHEN_PANICKING
	f	F	b	SPEED_MULTIPLIER_WHEN_IDLING_IN_WATER
	f	F	c	SPEED_MULTIPLIER_WHEN_TEMPTED
c	bwl	net/minecraft/world/entity/animal/frog/package-info
c	bwm	net/minecraft/world/entity/animal/goat/Goat
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	W	sendDebugPackets
	m	()V	X	customServerAiStep
	m	()I	Z	getMaxHeadYRot
	m	(Lakq;Lbil;)Lbil;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lbiq;Lbir;F)Lorg/joml/Vector3f;	a	getPassengerAttachmentPoint
		p	1		passenger
		p	2		dimensions
		p	3		scaleFactor
	m	(Lbjs;)Lbir;	a	getDimensions
		p	1		pose
	m	(Lcom/mojang/serialization/Dynamic;)Lbkg;	a	makeBrain
		p	1		dynamic
	m	(Lcqk;Lbgw;Lbjk;Lbjz;Lqw;)Lbjz;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	(Lakq;Lbil;)Lbwm;	b	getBreedOffspring
	m	(Lcbu;Lbgx;)Lbgy;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lgw;Ldfj;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()V	b_	aiStep
	m	(Lbiu;Lcpw;Lbjk;Lgw;Lasc;)Z	c	checkGoatSpawnRules
		p	0		entityType
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	(FF)I	d	calculateFallDamage
		p	1		fallDistance
		p	2		damageMultiplier
	m	(Lbho;)Lapc;	d	getHurtSound
		p	1		source
	m	(Lcjf;)Lapc;	d	getEatingSound
		p	1		stack
	m	()Lbkg;	dN	getBrain
	m	()Lbkg$b;	dO	brainProvider
	m	()Z	gd	hasLeftHorn
	m	()Z	gj	hasRightHorn
	m	()Z	gk	dropHorn
	m	()V	gl	addHorns
	m	()V	gm	removeHorns
	m	()Z	gn	isScreamingGoat
	m	()F	go	getRammingXHeadRot
	m	()Lapc;	l_	getDeathSound
	m	()V	m	ageBoundaryReached
	m	(F)V	n	setYHeadRot
		p	1		headYaw
	m	()Lcjf;	s	createHorn
	m	()Lbkl$a;	t	createAttributes
	m	()Lapc;	w	getAmbientSound
	m	(Z)V	w	setScreamingGoat
		p	1		screaming
	m	()Lapc;	y	getMilkingSound
	f	Lbir;	bT	LONG_JUMPING_DIMENSIONS
	f	Lcom/google/common/collect/ImmutableList;	bU	SENSOR_TYPES
	f	Lcom/google/common/collect/ImmutableList;	bW	MEMORY_TYPES
	f	I	bX	GOAT_FALL_DAMAGE_REDUCTION
	f	D	bY	GOAT_SCREAMING_CHANCE
	f	D	bZ	UNIHORN_CHANCE
	f	I	ca	ADULT_ATTACK_DAMAGE
	f	I	cb	BABY_ATTACK_DAMAGE
	f	Laee;	cc	DATA_IS_SCREAMING_GOAT
	f	Laee;	cd	DATA_HAS_LEFT_HORN
	f	Laee;	ce	DATA_HAS_RIGHT_HORN
	f	Z	cf	isLoweringHead
	f	I	cg	lowerHeadTick
c	bwn	net/minecraft/world/entity/animal/goat/GoatAi
	m	()Lcmg;	a	getTemptations
	m	(Lbjg;)Ljava/lang/Float;	a	lambda$initIdleActivity$1
		p	0		goat
	m	(Lbkg;)Lbkg;	a	makeBrain
		p	0		brain
	m	(Lbwm;)V	a	updateActivity
		p	0		goat
	m	(Lbwm;Lasc;)V	a	initMemories
		p	0		goat
		p	1		random
	m	(Lbjg;)Z	b	lambda$static$0
		p	0		entity
	m	(Lbkg;)V	b	initCoreActivity
		p	0		brain
	m	(Lbwm;)Lapc;	b	lambda$initRamActivity$8
		p	0		goat
	m	(Lbkg;)V	c	initIdleActivity
		p	0		brain
	m	(Lbwm;)I	c	lambda$initRamActivity$7
		p	0		goat
	m	(Lbkg;)V	d	initLongJumpActivity
		p	0		brain
	m	(Lbwm;)Lapc;	d	lambda$initRamActivity$6
		p	0		goat
	m	(Lbkg;)V	e	initRamActivity
		p	0		brain
	m	(Lbwm;)Lapc;	e	lambda$initRamActivity$5
		p	0		goat
	m	(Lbwm;)D	f	lambda$initRamActivity$4
		p	0		goat
	m	(Lbwm;)Lbgj;	g	lambda$initRamActivity$3
		p	0		goat
	m	(Lbwm;)Lapc;	h	lambda$initLongJumpActivity$2
		p	0		goat
	f	I	a	RAM_PREPARE_TIME
	f	I	b	RAM_MAX_DISTANCE
	f	I	c	MAX_LONG_JUMP_HEIGHT
	f	I	d	MAX_LONG_JUMP_WIDTH
	f	F	e	MAX_JUMP_VELOCITY
	f	I	f	RAM_MIN_DISTANCE
	f	F	g	ADULT_RAM_KNOCKBACK_FORCE
	f	F	h	BABY_RAM_KNOCKBACK_FORCE
	f	Lbgj;	i	ADULT_FOLLOW_RANGE
	f	F	j	SPEED_MULTIPLIER_WHEN_MAKING_LOVE
	f	F	k	SPEED_MULTIPLIER_WHEN_IDLING
	f	F	l	SPEED_MULTIPLIER_WHEN_FOLLOWING_ADULT
	f	F	m	SPEED_MULTIPLIER_WHEN_TEMPTED
	f	F	n	SPEED_MULTIPLIER_WHEN_PANICKING
	f	F	o	SPEED_MULTIPLIER_WHEN_PREPARING_TO_RAM
	f	Lbgj;	p	TIME_BETWEEN_LONG_JUMPS
	f	Lbgj;	q	TIME_BETWEEN_RAMS
	f	Lbgj;	r	TIME_BETWEEN_RAMS_SCREAMER
	f	Lbts;	s	RAM_TARGET_CONDITIONS
	f	F	t	SPEED_MULTIPLIER_WHEN_RAMMING
c	bwo	net/minecraft/world/entity/animal/goat/package-info
c	bwp	net/minecraft/world/entity/animal/horse/AbstractChestedHorse
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()I	Z_	getInventorySize
	m	(Lasc;)V	a	randomizeAttributes
		p	1		random
	m	(Lbir;F)F	a	getPassengersRidingOffsetY
		p	1		dimensions
		p	2		scaleFactor
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(I)Lbjy;	a_	getSlot
		p	1		mappedIndex
	m	(Lcbu;Lbgx;)Lbgy;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lcbu;Lcjf;)V	d	equipChest
		p	1		player
		p	2		chest
	m	()V	ex	dropEquipment
	m	()V	gd	playChestEquipsSound
	m	()I	gl	getInventoryColumns
	m	()Lbkl$a;	s	createBaseChestedHorseAttributes
	m	()Z	t	hasChest
	m	(Z)V	w	setChest
		p	1		hasChest
	f	I	bT	INV_CHEST_COUNT
	f	Laee;	bU	DATA_ID_CHEST
c	bwp$1	net/minecraft/world/entity/animal/horse/AbstractChestedHorse$1
	m	()Lcjf;	a	get
	m	(Lcjf;)Z	a	set
		p	1		stack
	f	Lbwp;	a	this$0
c	bwq	net/minecraft/world/entity/animal/horse/AbstractHorse
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Z)V	A	setEating
		p	1		eatingGrass
	m	(Z)V	B	setStanding
		p	1		angry
	m	(Z)V	C	spawnTamingParticles
		p	1		positive
	m	(F)V	D	onLeashDistance
		p	1		leashLength
	m	(F)F	E	getEatAnim
		p	1		tickDelta
	m	(F)F	F	getStandAnim
		p	1		tickDelta
	m	(F)F	G	getMouthAnim
		p	1		tickDelta
	m	()I	O	getAmbientSoundInterval
	m	()I	Z_	getInventorySize
	m	()Z	a	canJump
	m	(DDDDLasc;)D	a	createOffspringAttribute
		p	0		parentBase
		p	2		otherParentBase
		p	4		min
		p	6		max
		p	8		random
	m	(FFLbho;)Z	a	causeFallDamage
		p	1		fallDistance
		p	2		damageMultiplier
		p	3		damageSource
	m	(ILjava/util/function/Predicate;)Lbjy;	a	createEquipmentSlotAccess
		p	1		slot
		p	2		predicate
	m	(Lakq;Lbil;)Lbil;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lape;)V	a	equipSaddle
		p	1		sound
	m	(Lasc;)V	a	randomizeAttributes
		p	1		random
	m	(Lbgr;)V	a	containerChanged
		p	1		sender
	m	(Lbho;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbil;Lbwq;)V	a	setOffspringAttributes
		p	1		other
		p	2		child
	m	(Lbil;Lbwq;Lbkh;DD)V	a	setOffspringAttribute
		p	1		other
		p	2		child
		p	3		attribute
		p	4		min
		p	6		max
	m	(Lbiq;Lbiq$a;)V	a	positionRider
		p	1		passenger
		p	2		positionUpdater
	m	(Lbiq;Lbir;F)Lorg/joml/Vector3f;	a	getPassengerAttachmentPoint
		p	1		passenger
		p	2		dimensions
		p	3		scaleFactor
	m	(Lbir;F)F	a	getPassengersRidingOffsetY
		p	1		dimensions
		p	2		scaleFactor
	m	(Lbur;)Z	a	canMate
		p	1		other
	m	(Lcbu;Lcjf;)Z	a	handleEating
		p	1		player
		p	2		item
	m	(Lcbu;Lehn;)V	a	tickRidden
		p	1		controllingPlayer
		p	2		movementInput
	m	(Lcqk;Lbgw;Lbjk;Lbjz;Lqw;)Lbjz;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Ldai;)V	a	playGallopSound
		p	1		group
	m	(Lehn;Lbjg;)Lehn;	a	getDismountLocationInDirection
		p	1		offset
		p	2		passenger
	m	(Ljava/util/function/DoubleSupplier;)D	a	generateJumpStrength
		p	0		randomDoubleGetter
	m	(Ljava/util/function/IntUnaryOperator;)F	a	generateMaxHealth
		p	0		randomIntGetter
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(I)Lbjy;	a_	getSlot
		p	1		mappedIndex
	m	()V	b	handleStopJump
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	(FLehn;)V	b	executeRidersJump
		p	1		strength
		p	2		movementInput
	m	(I)V	b	onPlayerJump
		p	1		strength
	m	(Lbgr;)Z	b	hasInventoryChanged
		p	1		inventory
	m	(Lbjg;)Lehn;	b	getDismountLocationForPassenger
		p	1		passenger
	m	(Lbjs;Lbir;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lcbu;)V	b	openCustomInventoryScreen
		p	1		player
	m	(Lcbu;Lbgx;)Lbgy;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lcbu;Lcjf;)V	b	equipArmor
		p	1		player
		p	2		stack
	m	(Lcbu;Lehn;)Lehn;	b	getRiddenInput
		p	1		controllingPlayer
		p	2		movementInput
	m	(Ldai;)Z	b	isWoodSoundType
		p	1		soundGroup
	m	(Lgw;Ldfj;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Ljava/util/UUID;)V	b	setOwnerUUID
		p	1		ownerUuid
	m	(Ljava/util/function/DoubleSupplier;)D	b	generateSpeed
		p	0		randomDoubleGetter
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()V	b_	aiStep
	m	()Z	bs	isPushable
	m	(I)V	c	handleStartJump
		p	1		height
	m	(Lcbu;Lcjf;)Lbgy;	c	fedFood
		p	1		player
		p	2		stack
	m	()Lbjg;	cN	getControllingPassenger
	m	()Z	c_	onClimbable
	m	()Ljava/util/UUID;	d	getOwnerUUID
	m	(FF)I	d	calculateFallDamage
		p	1		fallDistance
		p	2		damageMultiplier
	m	(IZ)V	d	setFlag
		p	1		bitmask
		p	2		flag
	m	()Lcpm;	e	level
	m	(Lcbu;)F	e	getRiddenSpeed
		p	1		controllingPlayer
	m	()F	eV	getSoundVolume
	m	()Z	eX	isImmobile
	m	()V	ex	dropEquipment
	m	(Lcbu;)V	f	doPlayerRide
		p	1		player
	m	()I	fH	getMaxSpawnClusterSize
	m	()Z	g	isSaddleable
	m	()V	gA	updateContainerEquipment
	m	()D	gB	getCustomJump
	m	()Lapc;	gC	getAngrySound
	m	()Lbkl$a;	gD	createBaseHorseAttributes
	m	()I	gE	getMaxTemper
	m	()V	gF	followMommy
	m	()Z	gG	canEatGrass
	m	()Lapc;	gH	getAmbientStandSound
	m	()V	gI	standIfPossible
	m	()V	gJ	makeMad
	m	()V	gK	playJumpSound
	m	()Z	gL	canParent
	m	()Z	gM	canWearArmor
	m	()Z	gN	isWearingArmor
	m	()I	gO	getAmbientStandInterval
	m	()V	gd	openMouth
	m	()Z	gj	canPerformRearing
	m	()Lapc;	gk	getEatingSound
	m	()D	gl	lambda$static$3
	m	()D	gm	lambda$static$2
	m	()D	gn	lambda$static$1
	m	()D	go	lambda$static$0
	m	()Z	gs	isTamed
	m	()V	gt	addBehaviourGoals
	m	()Z	gu	isJumping
	m	()Z	gv	isEating
	m	()Z	gw	isStanding
	m	()Z	gx	isBred
	m	()I	gy	getTemper
	m	()V	gz	createInventory
	m	(Lcbu;)Z	h	tameWithName
		p	1		player
	m	()Z	i	isSaddled
	m	(Lbjg;)Lehm;	j	getRiddenRotation
		p	1		controllingPassenger
	m	(Lbjg;)Z	k	lambda$static$6
		p	0		entity
	m	()V	l	tick
	m	(Lcjf;)Z	l	isArmor
		p	1		item
	m	(Lcjf;)Z	m	isFood
		p	1		stack
	m	(Lcjf;)Z	n	lambda$getSlot$8
		p	1		stack
	m	(Lcjf;)Z	o	lambda$getSlot$7
		p	0		stack
	m	()V	s	eating
	m	()V	t	moveTail
	m	(I)Z	t	getFlag
		p	1		bitmask
	m	(I)V	u	setTemper
		p	1		temper
	m	(I)I	v	modifyTemper
		p	1		difference
	m	(I)I	w	lambda$static$5
		p	0		max
	m	(I)I	x	lambda$static$4
		p	0		max
	m	(Z)V	x	setTamed
		p	1		tame
	m	(Z)V	y	setIsJumping
		p	1		inAir
	m	()V	z	registerGoals
	m	(Z)V	z	setBred
		p	1		bred
	f	F	bT	MIN_MOVEMENT_SPEED
	f	F	bU	MAX_MOVEMENT_SPEED
	f	F	bW	MIN_JUMP_STRENGTH
	f	F	bX	MAX_JUMP_STRENGTH
	f	F	bY	MIN_HEALTH
	f	F	bZ	MAX_HEALTH
	f	I	cA	FLAG_STANDING
	f	I	cB	FLAG_OPEN_MOUTH
	f	I	cC	eatingCounter
	f	I	cD	mouthCounter
	f	I	cE	standCounter
	f	F	cF	eatAnim
	f	F	cG	eatAnimO
	f	F	cH	standAnim
	f	F	cI	standAnimO
	f	F	cJ	mouthAnim
	f	F	cK	mouthAnimO
	f	Ljava/util/UUID;	cL	owner
	f	F	ca	BACKWARDS_MOVE_SPEED_FACTOR
	f	F	cb	SIDEWAYS_MOVE_SPEED_FACTOR
	f	Ljava/util/function/Predicate;	cc	PARENT_HORSE_SELECTOR
	f	Lbts;	cd	MOMMY_TARGETING
	f	Lcmg;	ce	FOOD_ITEMS
	f	I	cf	EQUIPMENT_SLOT_OFFSET
	f	I	cg	CHEST_SLOT_OFFSET
	f	I	ch	INVENTORY_SLOT_OFFSET
	f	D	ci	BREEDING_CROSS_FACTOR
	f	I	cj	INV_SLOT_SADDLE
	f	I	ck	INV_SLOT_ARMOR
	f	I	cl	INV_BASE_COUNT
	f	I	cm	tailCounter
	f	I	cn	sprintCounter
	f	Z	co	isJumping
	f	Lbhf;	cp	inventory
	f	I	cq	temper
	f	F	cr	playerJumpPendingScale
	f	Z	cs	allowStandSliding
	f	Z	ct	canGallop
	f	I	cu	gallopSoundCounter
	f	Laee;	cv	DATA_ID_FLAGS
	f	I	cw	FLAG_TAME
	f	I	cx	FLAG_SADDLE
	f	I	cy	FLAG_BRED
	f	I	cz	FLAG_EATING
c	bwq$1	net/minecraft/world/entity/animal/horse/AbstractHorse$1
	m	()Lcjf;	a	get
	m	(Lcjf;)Z	a	set
		p	1		stack
	f	I	a	val$slot
	f	Ljava/util/function/Predicate;	c	val$check
	f	Lbwq;	d	this$0
c	bwr	net/minecraft/world/entity/animal/horse/Donkey
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lakq;Lbil;)Lbil;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lbur;)Z	a	canMate
		p	1		other
	m	(Lbho;)Lapc;	d	getHurtSound
		p	1		source
	m	()Lapc;	gC	getAngrySound
	m	()Lapc;	gk	getEatingSound
	m	()Lapc;	l_	getDeathSound
	m	()Lapc;	w	getAmbientSound
c	bws	net/minecraft/world/entity/animal/horse/Horse
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lakq;Lbil;)Lbil;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lasc;)V	a	randomizeAttributes
		p	1		random
	m	(Lbgr;)V	a	containerChanged
		p	1		sender
	m	(Lbur;)Z	a	canMate
		p	1		other
	m	(Lbwz;)V	a	setVariant
		p	1		variant
	m	(Lbwz;Lbwu;)V	a	setVariantAndMarkings
		p	1		color
		p	2		marking
	m	(Lcqk;Lbgw;Lbjk;Lbjz;Lqw;)Lbjz;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Ldai;)V	a	playGallopSound
		p	1		group
	m	(Ljava/lang/Object;)V	a	setVariant
		p	1		variant
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(Lcbu;Lbgx;)Lbgy;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Ljava/lang/Object;	c	getVariant
	m	(Lbho;)Lapc;	d	getHurtSound
		p	1		source
	m	()V	gA	updateContainerEquipment
	m	()Lapc;	gC	getAngrySound
	m	()Z	gM	canWearArmor
	m	()Lbwu;	gd	getMarkings
	m	()Lapc;	gk	getEatingSound
	m	()I	gl	getTypeVariant
	m	(Lcjf;)Z	l	isArmor
		p	1		item
	m	()Lapc;	l_	getDeathSound
	m	(Lcjf;)V	n	setArmor
		p	1		stack
	m	(Lcjf;)V	o	setArmorEquipment
		p	1		stack
	m	()Lcjf;	s	getArmor
	m	()Lbwz;	t	getVariant
	m	()Lapc;	w	getAmbientSound
	m	(I)V	w	setTypeVariant
		p	1		variant
	f	Ljava/util/UUID;	bT	ARMOR_MODIFIER_UUID
	f	Laee;	bU	DATA_ID_TYPE_VARIANT
c	bws$a	net/minecraft/world/entity/animal/horse/Horse$HorseGroupData
	m	(Lbwz;)V	<init>	<init>
		p	1		color
	f	Lbwz;	a	variant
c	bwt	net/minecraft/world/entity/animal/horse/Llama
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Z)V	D	setDidSpit
		p	1		spit
	m	()I	Z_	getInventorySize
	m	(FFLbho;)Z	a	causeFallDamage
		p	1		fallDistance
		p	2		damageMultiplier
		p	3		damageSource
	m	(Lakq;Lbil;)Lbil;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lbgr;)V	a	containerChanged
		p	1		sender
	m	(Lbiq;Lbir;F)Lorg/joml/Vector3f;	a	getPassengerAttachmentPoint
		p	1		passenger
		p	2		dimensions
		p	3		scaleFactor
	m	(Lbjg;F)V	a	performRangedAttack
		p	1		target
		p	2		pullProgress
	m	(Lbur;)Z	a	canMate
		p	1		other
	m	(Lbwt$d;)V	a	setVariant
		p	1		variant
	m	(Lbwt;)V	a	joinCaravan
		p	1		llama
	m	(Lcbu;Lcjf;)Z	a	handleEating
		p	1		player
		p	2		item
	m	(Lcht;)V	a	setSwag
		p	1		color
	m	(Lcqk;Lbgw;Lbjk;Lbjz;Lqw;)Lbjz;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Ljava/lang/Object;)V	a	setVariant
		p	1		variant
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(Lakq;Lbil;)Lbwt;	b	getBreedOffspring
	m	(Lasc;)V	b	setRandomStrength
		p	1		random
	m	(Lgw;Ldfj;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Ljava/lang/Object;	c	getVariant
	m	()Lehn;	cI	getLeashOffset
	m	(Lbho;)Lapc;	d	getHurtSound
		p	1		source
	m	()Z	eX	isImmobile
	m	()Z	g	isSaddleable
	m	()V	gA	updateContainerEquipment
	m	()Lapc;	gC	getAngrySound
	m	()I	gE	getMaxTemper
	m	()V	gF	followMommy
	m	()Z	gG	canEatGrass
	m	()Z	gM	canWearArmor
	m	()Z	gN	isWearingArmor
	m	()V	gP	leaveCaravan
	m	()Z	gQ	hasCaravanTail
	m	()Z	gR	inCaravan
	m	()Lbwt;	gS	getCaravanHead
	m	()D	gc	followLeashSpeed
	m	()V	gd	playChestEquipsSound
	m	()Z	gj	canPerformRearing
	m	()Lapc;	gk	getEatingSound
	m	()I	gl	getInventoryColumns
	m	()Z	gm	isTraderLlama
	m	()I	gn	getStrength
	m	()Lbkl$a;	go	createAttributes
	m	()Lbwt$d;	gp	getVariant
	m	()Lcht;	gq	getSwag
	m	()Lbwt;	gr	makeNewLlama
	m	(Lbjg;)V	k	spit
		p	1		target
	m	(Lcjf;)Z	l	isArmor
		p	1		item
	m	()Lapc;	l_	getDeathSound
	m	(Lcjf;)Z	m	isFood
		p	1		stack
	m	(Lcjf;)Lcht;	n	getDyeColor
		p	0		color
	m	()Lapc;	w	getAmbientSound
	m	(I)V	w	setStrength
		p	1		strength
	m	()V	z	registerGoals
	f	I	bU	MAX_STRENGTH
	f	Lcmg;	bW	FOOD_ITEMS
	f	Laee;	bX	DATA_STRENGTH_ID
	f	Laee;	bY	DATA_SWAG_ID
	f	Laee;	bZ	DATA_VARIANT_ID
	f	Z	ca	didSpit
	f	Lbwt;	cb	caravanHead
	f	Lbwt;	cc	caravanTail
c	bwt$a	net/minecraft/world/entity/animal/horse/Llama$LlamaAttackWolfGoal
	m	(Lbwt;)V	<init>	<init>
		p	1		llama
	m	(Lbjg;)Z	b	lambda$new$0
		p	0		wolf
	m	()D	l	getFollowDistance
c	bwt$b	net/minecraft/world/entity/animal/horse/Llama$LlamaGroupData
	m	(Lbwt$d;)V	<init>	<init>
		p	1		variant
	f	Lbwt$d;	a	variant
c	bwt$c	net/minecraft/world/entity/animal/horse/Llama$LlamaHurtByTargetGoal
	m	(Lbwt;)V	<init>	<init>
		p	1		llama
	m	()Z	b	canContinueToUse
c	bwt$d	net/minecraft/world/entity/animal/horse/Llama$Variant
	m	(Ljava/lang/String;IILjava/lang/String;)V	<init>	<init>
		p	3		id
		p	4		name
	m	()I	a	getId
	m	(I)Lbwt$d;	a	byId
		p	0		id
	m	()[Lbwt$d;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lbwt$d;	a	CREAMY
	f	Lbwt$d;	b	WHITE
	f	Lbwt$d;	c	BROWN
	f	Lbwt$d;	d	GRAY
	f	Lcom/mojang/serialization/Codec;	e	CODEC
	f	Ljava/util/function/IntFunction;	f	BY_ID
	f	I	g	id
	f	Ljava/lang/String;	h	name
	f	[Lbwt$d;	i	$VALUES
c	bwu	net/minecraft/world/entity/animal/horse/Markings
	m	(Ljava/lang/String;II)V	<init>	<init>
		p	3		id
	m	()I	a	getId
	m	(I)Lbwu;	a	byId
		p	0		index
	m	()[Lbwu;	b	$values
	f	Lbwu;	a	NONE
	f	Lbwu;	b	WHITE
	f	Lbwu;	c	WHITE_FIELD
	f	Lbwu;	d	WHITE_DOTS
	f	Lbwu;	e	BLACK_DOTS
	f	Ljava/util/function/IntFunction;	f	BY_ID
	f	I	g	id
	f	[Lbwu;	h	$VALUES
c	bwv	net/minecraft/world/entity/animal/horse/Mule
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lakq;Lbil;)Lbil;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lbho;)Lapc;	d	getHurtSound
		p	1		source
	m	()Lapc;	gC	getAngrySound
	m	()V	gd	playChestEquipsSound
	m	()Lapc;	gk	getEatingSound
	m	()Lapc;	l_	getDeathSound
	m	()Lapc;	w	getAmbientSound
c	bww	net/minecraft/world/entity/animal/horse/SkeletonHorse
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lakq;Lbil;)Lbil;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lasc;)V	a	randomizeAttributes
		p	1		random
	m	(Lbiq;Lbir;F)Lorg/joml/Vector3f;	a	getPassengerAttachmentPoint
		p	1		passenger
		p	2		dimensions
		p	3		scaleFactor
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()Lapc;	aL	getSwimSound
	m	(Lcbu;Lbgx;)Lbgy;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()V	b_	aiStep
	m	(Lbho;)Lapc;	d	getHurtSound
		p	1		source
	m	(F)V	e	playSwimSound
		p	1		volume
	m	()Lbjl;	eR	getMobType
	m	()F	fc	getWaterSlowDown
	m	()V	gK	playJumpSound
	m	()V	gt	addBehaviourGoals
	m	()Lapc;	l_	getDeathSound
	m	()Lbkl$a;	s	createAttributes
	m	()Z	t	isTrap
	m	()Lapc;	w	getAmbientSound
	m	(Z)V	w	setTrap
		p	1		trapped
	f	Lbwx;	bT	skeletonTrapGoal
	f	I	bU	TRAP_MAX_LIFE
	f	Z	bW	isTrap
	f	I	bX	trapTime
c	bwx	net/minecraft/world/entity/animal/horse/SkeletonTrapGoal
	m	(Lbww;)V	<init>	<init>
		p	1		skeletonHorse
	m	()Z	a	canUse
	m	(Lbgw;)Lbwq;	a	createHorse
		p	1		localDifficulty
	m	(Lbgw;Lbwq;)Lbzq;	a	createSkeleton
		p	1		localDifficulty
		p	2		vehicle
	m	(Lcjf;)Lcjf;	a	disenchant
		p	1		stack
	m	()V	e	tick
	f	Lbww;	a	horse
c	bwy	net/minecraft/world/entity/animal/horse/TraderLlama
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcqk;Lbgw;Lbjk;Lbjz;Lqw;)Lbjz;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()V	b_	aiStep
	m	(Lcbu;)V	f	doPlayerRide
		p	1		player
	m	()V	gT	maybeDespawn
	m	()Z	gU	canDespawn
	m	()Z	gV	isLeashedToWanderingTrader
	m	()Z	gW	isLeashedToSomethingOtherThanTheWanderingTrader
	m	()Z	gm	isTraderLlama
	m	()Lbwt;	gr	makeNewLlama
	m	(I)V	w	setDespawnDelay
		p	1		despawnDelay
	m	()V	z	registerGoals
	f	I	bU	despawnDelay
c	bwy$a	net/minecraft/world/entity/animal/horse/TraderLlama$TraderLlamaDefendWanderingTraderGoal
	m	(Lbwt;)V	<init>	<init>
		p	1		llama
	m	()Z	a	canUse
	m	()V	c	start
	f	Lbwt;	a	llama
	f	Lbjg;	b	ownerLastHurtBy
	f	I	c	timestamp
c	bwz	net/minecraft/world/entity/animal/horse/Variant
	m	(Ljava/lang/String;IILjava/lang/String;)V	<init>	<init>
		p	3		id
		p	4		name
	m	()I	a	getId
	m	(I)Lbwz;	a	byId
		p	0		id
	m	()[Lbwz;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lbwz;	a	WHITE
	f	Lbwz;	b	CREAMY
	f	Lbwz;	c	CHESTNUT
	f	Lbwz;	d	BROWN
	f	Lbwz;	e	BLACK
	f	Lbwz;	f	GRAY
	f	Lbwz;	g	DARK_BROWN
	f	Lcom/mojang/serialization/Codec;	h	CODEC
	f	Ljava/util/function/IntFunction;	i	BY_ID
	f	I	j	id
	f	Ljava/lang/String;	k	name
	f	[Lbwz;	l	$VALUES
c	bxa	net/minecraft/world/entity/animal/horse/ZombieHorse
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lakq;Lbil;)Lbil;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lasc;)V	a	randomizeAttributes
		p	1		random
	m	(Lbir;F)F	a	getPassengersRidingOffsetY
		p	1		dimensions
		p	2		scaleFactor
	m	(Lcbu;Lbgx;)Lbgy;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lbho;)Lapc;	d	getHurtSound
		p	1		source
	m	()Lbjl;	eR	getMobType
	m	()V	gt	addBehaviourGoals
	m	()Lapc;	l_	getDeathSound
	m	()Lbkl$a;	s	createAttributes
	m	()Lapc;	w	getAmbientSound
c	bxb	net/minecraft/world/entity/animal/horse/package-info
c	bxc	net/minecraft/world/entity/animal/package-info
c	bxd	net/minecraft/world/entity/animal/sniffer/Sniffer
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	C	onPathfindingStart
	m	()V	E	onPathfindingDone
	m	()V	W	sendDebugPackets
	m	()V	X	customServerAiStep
	m	()I	Z	getMaxHeadYRot
	m	(Laee;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Lakq;Lbil;)Lbil;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lakq;Lbur;)V	a	spawnChildFromBreeding
		p	1		world
		p	2		other
	m	(Lbho;)V	a	die
		p	1		damageSource
	m	(Lbim;)Lbxd;	a	emitDiggingParticles
		p	1		diggingAnimationState
	m	(Lbiq;Lbir;F)Lorg/joml/Vector3f;	a	getPassengerAttachmentPoint
		p	1		passenger
		p	2		dimensions
		p	3		scaleFactor
	m	(Lbjs;)Lbir;	a	getDimensions
		p	1		pose
	m	(Lbur;)Z	a	canMate
		p	1		other
	m	(Lbxd$a;)Lbxd;	a	transitionTo
		p	1		state
	m	(Lcom/mojang/serialization/Dynamic;)Lbkg;	a	makeBrain
		p	1		dynamic
	m	(Lgw;Lhd;)Z	a	lambda$canDig$2
	m	(Z)V	a	setBaby
		p	1		baby
	m	(Lbjs;Lbir;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lbxd$a;)Lbxd;	b	setState
		p	1		state
	m	(Lcbu;Lbgx;)Lbgy;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lgw;Ldfj;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lbho;)Lapc;	d	getHurtSound
		p	1		source
	m	(Lcjf;)Lapc;	d	getEatingSound
		p	1		stack
	m	()Lbkg;	dN	getBrain
	m	()Lbkg$b;	dO	brainProvider
	m	()F	dh	getNameTagOffsetY
	m	()V	fa	jumpFromGround
	m	()Lehi;	g_	getBoundingBoxForCulling
	m	()Z	gd	canSniff
	m	()Z	gj	canPlayDiggingSound
	m	()Ljava/util/Optional;	gk	calculateDigPosition
	m	()Z	gl	canDig
	m	()Lgw;	gm	getHeadBlock
	m	()Lehn;	gn	getHeadPosition
	m	()Lbxd$a;	go	getState
	m	()V	gp	resetAnimations
	m	()Lbxd;	gq	onScentingStart
	m	()Lbxd;	gr	onDiggingStart
	m	()V	gs	dropSeed
	m	()Ljava/util/stream/Stream;	gt	getExploredPositions
	m	()V	gu	playSearchingSound
	m	(Lgw;)Z	i	canDig
		p	1		pos
	m	(Lgw;)Lbxd;	j	storeExploredPosition
		p	1		pos
	m	(Lgw;)Z	k	lambda$calculateDigPosition$1
		p	1		pos
	m	()V	l	tick
	m	()Lapc;	l_	getDeathSound
	m	(Lcjf;)Z	m	isFood
		p	1		stack
	m	()Lbkl$a;	s	createAttributes
	m	()Z	t	isSearching
	m	(I)Lehn;	t	lambda$calculateDigPosition$0
	m	()Lapc;	w	getAmbientSound
	m	(Z)Lbxd;	w	onDiggingComplete
		p	1		explored
	m	()Z	y	isTempted
	f	Lbim;	bT	feelingHappyAnimationState
	f	Lbim;	bU	scentingAnimationState
	f	Lbim;	bW	sniffingAnimationState
	f	Lbim;	bX	diggingAnimationState
	f	Lbim;	bY	risingAnimationState
	f	I	bZ	DIGGING_PARTICLES_DELAY_TICKS
	f	I	ca	DIGGING_PARTICLES_DURATION_TICKS
	f	I	cb	DIGGING_PARTICLES_AMOUNT
	f	I	cc	DIGGING_DROP_SEED_OFFSET_TICKS
	f	I	cd	SNIFFER_BABY_AGE_TICKS
	f	F	ce	DIGGING_BB_HEIGHT_OFFSET
	f	Lbir;	cf	DIGGING_DIMENSIONS
	f	Laee;	cg	DATA_STATE
	f	Laee;	ch	DATA_DROP_SEED_AT_TICK
c	bxd$1	net/minecraft/world/entity/animal/sniffer/Sniffer$1
	f	[I	a	$SwitchMap$net$minecraft$world$entity$animal$sniffer$Sniffer$State
c	bxd$a	net/minecraft/world/entity/animal/sniffer/Sniffer$State
	m	()[Lbxd$a;	a	$values
	f	Lbxd$a;	a	IDLING
	f	Lbxd$a;	b	FEELING_HAPPY
	f	Lbxd$a;	c	SCENTING
	f	Lbxd$a;	d	SNIFFING
	f	Lbxd$a;	e	SEARCHING
	f	Lbxd$a;	f	DIGGING
	f	Lbxd$a;	g	RISING
	f	[Lbxd$a;	h	$VALUES
c	bxe	net/minecraft/world/entity/animal/sniffer/SnifferAi
	m	()Lcmg;	a	getTemptations
	m	(Lbjg;)Ljava/lang/Double;	a	lambda$initIdleActivity$1
		p	0		sniffer
	m	(Lbkg;)Lbkg;	a	makeBrain
		p	0		brain
	m	(Lbxd;)V	a	updateActivity
		p	0		sniffer
	m	(Lbjg;)Ljava/lang/Float;	b	lambda$initIdleActivity$0
		p	0		sniffer
	m	(Lbkg;)V	b	initCoreActivity
		p	0		brain
	m	(Lbxd;)Lbxd;	b	resetSniffing
		p	0		sniffer
	m	(Lbkg;)V	c	initSniffingActivity
		p	0		brain
	m	(Lbkg;)V	d	initDigActivity
		p	0		brain
	m	(Lbkg;)V	e	initIdleActivity
		p	0		brain
	f	Ljava/util/List;	a	SENSOR_TYPES
	f	Ljava/util/List;	b	MEMORY_TYPES
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	I	d	MAX_LOOK_DISTANCE
	f	I	e	SNIFFING_COOLDOWN_TICKS
	f	F	f	SPEED_MULTIPLIER_WHEN_IDLING
	f	F	g	SPEED_MULTIPLIER_WHEN_PANICKING
	f	F	h	SPEED_MULTIPLIER_WHEN_SNIFFING
	f	F	i	SPEED_MULTIPLIER_WHEN_TEMPTED
c	bxe$1	net/minecraft/world/entity/animal/sniffer/SnifferAi$1
	m	(F)V	<init>	<init>
		p	1		speed
	m	(Lakq;Lbjp;J)V	b	start
	m	(Lakq;Lbjg;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
c	bxe$2	net/minecraft/world/entity/animal/sniffer/SnifferAi$2
	m	(Lbiu;F)V	<init>	<init>
		p	1		targetType
		p	2		speed
	m	(Lakq;Lbur;J)V	a	start
	m	(Lakq;Lbjg;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
c	bxe$3	net/minecraft/world/entity/animal/sniffer/SnifferAi$3
	m	(Ljava/util/function/Function;Ljava/util/function/Function;)V	<init>	<init>
		p	1		speed
		p	2		stopDistanceGetter
	m	(Lakq;Lbjp;J)V	b	start
	m	(Lakq;Lbjg;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
c	bxe$a	net/minecraft/world/entity/animal/sniffer/SnifferAi$Digging
	m	(II)V	<init>	<init>
		p	1		minRunTime
		p	2		maxRunTime
	m	(Lakq;Lbjg;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lakq;Lbjg;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbxd;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lakq;Lbxd;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbjg;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbxd;J)V	b	start
	m	(Lakq;Lbxd;J)V	c	stop
	m	(Lakq;Lbjg;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
c	bxe$b	net/minecraft/world/entity/animal/sniffer/SnifferAi$FeelingHappy
	m	(II)V	<init>	<init>
		p	1		minRunTime
		p	2		maxRunTime
	m	(Lakq;Lbjg;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbxd;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbjg;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbxd;J)V	b	start
	m	(Lakq;Lbxd;J)V	c	stop
	m	(Lakq;Lbjg;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
c	bxe$c	net/minecraft/world/entity/animal/sniffer/SnifferAi$FinishedDigging
	m	(I)V	<init>	<init>
		p	1		runTime
	m	(Lakq;Lbjg;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lakq;Lbjg;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbxd;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lakq;Lbxd;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbjg;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbxd;J)V	b	start
	m	(Lakq;Lbxd;J)V	c	stop
	m	(Lakq;Lbjg;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
c	bxe$d	net/minecraft/world/entity/animal/sniffer/SnifferAi$Scenting
	m	(II)V	<init>	<init>
		p	1		minRunTime
		p	2		maxRunTime
	m	(Lakq;Lbjg;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lakq;Lbjg;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbxd;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lakq;Lbxd;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbjg;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbxd;J)V	b	start
	m	(Lakq;Lbxd;J)V	c	stop
	m	(Lakq;Lbjg;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
c	bxe$e	net/minecraft/world/entity/animal/sniffer/SnifferAi$Searching
	m	(Lakq;Lbjg;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lakq;Lbjg;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbxd;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lakq;Lbxd;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbjg;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbxd;J)V	b	start
	m	(Lakq;Lbxd;J)V	c	stop
	m	(Lakq;Lbjg;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
c	bxe$f	net/minecraft/world/entity/animal/sniffer/SnifferAi$Sniffing
	m	(II)V	<init>	<init>
		p	1		minRunTime
		p	2		maxRunTime
	m	(Lakq;Lbjg;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lakq;Lbjg;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbxd;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Lakq;Lbxd;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lbxd;Lgw;)V	a	lambda$stop$0
		p	1		pos
	m	(Lakq;Lbjg;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Lakq;Lbxd;J)V	b	start
	m	(Lakq;Lbxd;J)V	c	stop
	m	(Lakq;Lbjg;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
c	bxf	net/minecraft/world/entity/boss/EnderDragonPart
	m	(Lbxh;Ljava/lang/String;FF)V	<init>	<init>
		p	1		owner
		p	2		name
		p	3		width
		p	4		height
	m	(Lbho;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbjs;)Lbir;	a	getDimensions
		p	1		pose
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Z	br	isPickable
	m	()Z	dJ	shouldBeSaved
	m	()Lvd;	di	getAddEntityPacket
	m	()Lcjf;	dy	getPickResult
	m	(Lbiq;)Z	t	is
		p	1		entity
	f	Lbxh;	b	parentMob
	f	Ljava/lang/String;	c	name
	f	Lbir;	d	size
c	bxg	net/minecraft/world/entity/boss/enderdragon/EndCrystal
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcpv;DDD)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
	m	(D)Z	a	shouldRenderAtSqrDistance
		p	1		distance
	m	(Lbho;)V	a	onDestroyedBy
		p	1		source
	m	(Lbho;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lgw;)V	a	setBeamTarget
		p	1		beamTarget
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Z)V	a	setShowBottom
		p	1		showBottom
	m	()Lbiq$b;	aU	getMovementEmission
	m	()V	a_	defineSynchedData
	m	()V	aj	kill
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Z	br	isPickable
	m	()Lcjf;	dy	getPickResult
	m	()V	l	tick
	m	()Lgw;	q	getBeamTarget
	m	()Z	s	showsBottom
	f	I	b	time
	f	Laee;	c	DATA_BEAM_TARGET
	f	Laee;	d	DATA_SHOW_BOTTOM
c	bxh	net/minecraft/world/entity/boss/enderdragon/EnderDragon
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	2		world
	m	(F)Lehn;	D	getHeadLookVector
		p	1		tickDelta
	m	(IF)[D	a	getLatencyPos
		p	1		segmentNumber
		p	2		tickDelta
	m	(IILeaz;)Lebb;	a	findPath
		p	1		from
		p	2		to
		p	3		pathNode
	m	(I[D[D)F	a	getHeadPartYOffset
		p	1		segmentOffset
		p	2		segment1
		p	3		segment2
	m	(Laee;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Lbho;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbiq;Lbir;F)Lorg/joml/Vector3f;	a	getPassengerAttachmentPoint
		p	1		passenger
		p	2		dimensions
		p	3		scaleFactor
	m	(Lbxf;DDD)V	a	tickPart
		p	1		enderDragonPart
		p	2		dx
		p	4		dy
		p	6		dz
	m	(Lbxf;Lbho;F)Z	a	hurt
		p	1		part
		p	2		source
		p	3		amount
	m	(Lbxg;Lgw;Lbho;)V	a	onCrystalDestroyed
		p	1		endCrystal
		p	2		pos
		p	3		source
	m	(Ldiv;)V	a	setDragonFight
		p	1		fight
	m	(Leaz;Leaz;)Lebb;	a	reconstructPath
		p	1		unused
		p	2		node
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lwx;)V	a	recreateFromPacket
		p	1		packet
	m	()V	aQ	onFlap
	m	()Z	aR	isFlapping
	m	()V	a_	defineSynchedData
	m	()V	aj	kill
	m	(Lbid;Lbiq;)Z	b	addEffect
		p	1		effect
		p	2		source
	m	(Lehi;)Z	b	checkWalls
		p	1		box
	m	(Ljava/util/List;)V	b	knockBack
		p	1		entities
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()V	b_	aiStep
	m	()Z	br	isPickable
	m	(Lbjg;)Z	c	canAttack
		p	1		target
	m	(Ljava/util/List;)V	c	hurt
		p	1		entities
	m	()Z	cs	canChangeDimensions
	m	(Lbho;)Lapc;	d	getHurtSound
		p	1		source
	m	()Lape;	da	getSoundSource
	m	()V	dx	checkDespawn
	m	()F	eV	getSoundVolume
	m	()V	ea	tickDeath
	m	()[Lbxf;	fZ	getSubEntities
	m	(Lbho;F)Z	g	reallyHurt
		p	1		source
		p	2		amount
	m	()Lbxy;	ga	getPhaseManager
	m	()Ldiv;	gb	getDragonFight
	m	()F	gc	getHeadYOffset
	m	()V	gd	checkCrystals
	m	(Lgw;)V	h	setFightOrigin
		p	1		fightOrigin
	m	(D)F	i	rotWrap
		p	1		yawDegrees
	m	(Lbiq;)Z	o	canRide
		p	1		entity
	m	(DDD)I	r	findClosestNode
		p	1		x
		p	3		y
		p	5		z
	m	()Lgw;	s	getFightOrigin
	m	()Lbkl$a;	t	createAttributes
	m	()Lapc;	w	getAmbientSound
	m	()I	y	findClosestNode
	f	Laee;	b	DATA_PHASE
	f	F	bS	oFlapTime
	f	F	bT	flapTime
	f	Z	bU	inWall
	f	I	bV	dragonDeathTime
	f	F	bW	yRotA
	f	Lbxg;	bX	nearestCrystal
	f	Lorg/slf4j/Logger;	bY	LOGGER
	f	Lbts;	bZ	CRYSTAL_DESTROY_TARGETING
	f	[[D	c	positions
	f	I	ca	GROWL_INTERVAL_MIN
	f	I	cb	GROWL_INTERVAL_MAX
	f	F	cc	SITTING_ALLOWED_DAMAGE_PERCENTAGE
	f	Ljava/lang/String;	cd	DRAGON_DEATH_TIME_KEY
	f	Ljava/lang/String;	ce	DRAGON_PHASE_KEY
	f	[Lbxf;	cf	subEntities
	f	Lbxf;	cg	neck
	f	Lbxf;	ch	body
	f	Lbxf;	ci	tail1
	f	Lbxf;	cj	tail2
	f	Lbxf;	ck	tail3
	f	Lbxf;	cl	wing1
	f	Lbxf;	cm	wing2
	f	Ldiv;	cn	dragonFight
	f	Lgw;	co	fightOrigin
	f	Lbxy;	cp	phaseManager
	f	I	cq	growlTime
	f	F	cr	sittingDamageReceived
	f	[Leaz;	cs	nodes
	f	[I	ct	nodeAdjacency
	f	Leaw;	cu	openSet
	f	I	d	posPointer
	f	Lbxf;	e	head
c	bxi	net/minecraft/world/entity/boss/enderdragon/package-info
c	bxj	net/minecraft/world/entity/boss/enderdragon/phases/AbstractDragonPhaseInstance
	m	(Lbxh;)V	<init>	<init>
		p	1		dragon
	m	()Z	a	isSitting
	m	(Lbho;F)F	a	onHurt
		p	1		damageSource
		p	2		damage
	m	(Lbxg;Lgw;Lbho;Lcbu;)V	a	onCrystalDestroyed
		p	1		crystal
		p	2		pos
		p	3		source
		p	4		player
	m	()V	b	doClientTick
	m	()V	c	doServerTick
	m	()V	d	begin
	m	()V	e	end
	m	()F	f	getFlySpeed
	m	()Lehn;	g	getFlyTargetLocation
	m	()F	h	getTurnSpeed
	f	Lbxh;	a	dragon
c	bxk	net/minecraft/world/entity/boss/enderdragon/phases/AbstractDragonSittingPhase
	m	(Lbxh;)V	<init>	<init>
		p	1		dragon
	m	()Z	a	isSitting
	m	(Lbho;F)F	a	onHurt
		p	1		damageSource
		p	2		damage
c	bxl	net/minecraft/world/entity/boss/enderdragon/phases/DragonChargePlayerPhase
	m	(Lbxh;)V	<init>	<init>
		p	1		dragon
	m	(Lehn;)V	a	setTarget
		p	1		pathTarget
	m	()V	c	doServerTick
	m	()V	d	begin
	m	()F	f	getFlySpeed
	m	()Lehn;	g	getFlyTargetLocation
	m	()Lbxx;	i	getPhase
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	I	c	CHARGE_RECOVERY_TIME
	f	Lehn;	d	targetLocation
	f	I	e	timeSinceCharge
c	bxm	net/minecraft/world/entity/boss/enderdragon/phases/DragonDeathPhase
	m	(Lbxh;)V	<init>	<init>
		p	1		dragon
	m	()V	b	doClientTick
	m	()V	c	doServerTick
	m	()V	d	begin
	m	()F	f	getFlySpeed
	m	()Lehn;	g	getFlyTargetLocation
	m	()Lbxx;	i	getPhase
	f	Lehn;	b	targetLocation
	f	I	c	time
c	bxn	net/minecraft/world/entity/boss/enderdragon/phases/DragonHoldingPatternPhase
	m	(Lbxh;)V	<init>	<init>
		p	1		dragon
	m	(Lbxg;Lgw;Lbho;Lcbu;)V	a	onCrystalDestroyed
		p	1		crystal
		p	2		pos
		p	3		source
		p	4		player
	m	(Lcbu;)V	a	strafePlayer
		p	1		player
	m	()V	c	doServerTick
	m	()V	d	begin
	m	()Lehn;	g	getFlyTargetLocation
	m	()Lbxx;	i	getPhase
	m	()V	j	findNewTarget
	m	()V	k	navigateToNextPathNode
	f	Lbts;	b	NEW_TARGET_TARGETING
	f	Lebb;	c	currentPath
	f	Lehn;	d	targetLocation
	f	Z	e	clockwise
c	bxo	net/minecraft/world/entity/boss/enderdragon/phases/DragonHoverPhase
	m	(Lbxh;)V	<init>	<init>
		p	1		dragon
	m	()Z	a	isSitting
	m	()V	c	doServerTick
	m	()V	d	begin
	m	()F	f	getFlySpeed
	m	()Lehn;	g	getFlyTargetLocation
	m	()Lbxx;	i	getPhase
	f	Lehn;	b	targetLocation
c	bxp	net/minecraft/world/entity/boss/enderdragon/phases/DragonLandingApproachPhase
	m	(Lbxh;)V	<init>	<init>
		p	1		dragon
	m	()V	c	doServerTick
	m	()V	d	begin
	m	()Lehn;	g	getFlyTargetLocation
	m	()Lbxx;	i	getPhase
	m	()V	j	findNewTarget
	m	()V	k	navigateToNextPathNode
	f	Lbts;	b	NEAR_EGG_TARGETING
	f	Lebb;	c	currentPath
	f	Lehn;	d	targetLocation
c	bxq	net/minecraft/world/entity/boss/enderdragon/phases/DragonLandingPhase
	m	(Lbxh;)V	<init>	<init>
		p	1		dragon
	m	()V	b	doClientTick
	m	()V	c	doServerTick
	m	()V	d	begin
	m	()F	f	getFlySpeed
	m	()Lehn;	g	getFlyTargetLocation
	m	()F	h	getTurnSpeed
	m	()Lbxx;	i	getPhase
	f	Lehn;	b	targetLocation
c	bxr	net/minecraft/world/entity/boss/enderdragon/phases/DragonPhaseInstance
	m	()Z	a	isSitting
	m	(Lbho;F)F	a	onHurt
		p	1		damageSource
		p	2		damage
	m	(Lbxg;Lgw;Lbho;Lcbu;)V	a	onCrystalDestroyed
		p	1		crystal
		p	2		pos
		p	3		source
		p	4		player
	m	()V	b	doClientTick
	m	()V	c	doServerTick
	m	()V	d	begin
	m	()V	e	end
	m	()F	f	getFlySpeed
	m	()Lehn;	g	getFlyTargetLocation
	m	()F	h	getTurnSpeed
	m	()Lbxx;	i	getPhase
c	bxs	net/minecraft/world/entity/boss/enderdragon/phases/DragonSittingAttackingPhase
	m	(Lbxh;)V	<init>	<init>
		p	1		dragon
	m	()V	b	doClientTick
	m	()V	c	doServerTick
	m	()V	d	begin
	m	()Lbxx;	i	getPhase
	f	I	b	ROAR_DURATION
	f	I	c	attackingTicks
c	bxt	net/minecraft/world/entity/boss/enderdragon/phases/DragonSittingFlamingPhase
	m	(Lbxh;)V	<init>	<init>
		p	1		dragon
	m	()V	b	doClientTick
	m	()V	c	doServerTick
	m	()V	d	begin
	m	()V	e	end
	m	()Lbxx;	i	getPhase
	m	()V	j	resetFlameCount
	f	I	b	FLAME_DURATION
	f	I	c	SITTING_FLAME_ATTACKS_COUNT
	f	I	d	WARMUP_TIME
	f	I	e	flameTicks
	f	I	f	flameCount
	f	Lbin;	g	flame
c	bxu	net/minecraft/world/entity/boss/enderdragon/phases/DragonSittingScanningPhase
	m	(Lbxh;)V	<init>	<init>
		p	1		dragon
	m	(Lbxh;Lbjg;)Z	a	lambda$new$0
		p	1		player
	m	()V	c	doServerTick
	m	()V	d	begin
	m	()Lbxx;	i	getPhase
	f	I	b	SITTING_SCANNING_IDLE_TICKS
	f	I	c	SITTING_ATTACK_Y_VIEW_RANGE
	f	I	d	SITTING_ATTACK_VIEW_RANGE
	f	I	e	SITTING_CHARGE_VIEW_RANGE
	f	Lbts;	f	CHARGE_TARGETING
	f	Lbts;	g	scanTargeting
	f	I	h	scanningTime
c	bxv	net/minecraft/world/entity/boss/enderdragon/phases/DragonStrafePlayerPhase
	m	(Lbxh;)V	<init>	<init>
		p	1		dragon
	m	(Lbjg;)V	a	setTarget
		p	1		targetEntity
	m	()V	c	doServerTick
	m	()V	d	begin
	m	()Lehn;	g	getFlyTargetLocation
	m	()Lbxx;	i	getPhase
	m	()V	j	findNewTarget
	m	()V	k	navigateToNextPathNode
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	I	c	FIREBALL_CHARGE_AMOUNT
	f	I	d	fireballCharge
	f	Lebb;	e	currentPath
	f	Lehn;	f	targetLocation
	f	Lbjg;	g	attackTarget
	f	Z	h	holdingPatternClockwise
c	bxw	net/minecraft/world/entity/boss/enderdragon/phases/DragonTakeoffPhase
	m	(Lbxh;)V	<init>	<init>
		p	1		dragon
	m	()V	c	doServerTick
	m	()V	d	begin
	m	()Lehn;	g	getFlyTargetLocation
	m	()Lbxx;	i	getPhase
	m	()V	j	findNewTarget
	m	()V	k	navigateToNextPathNode
	f	Z	b	firstTick
	f	Lebb;	c	currentPath
	f	Lehn;	d	targetLocation
c	bxx	net/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase
	m	(ILjava/lang/Class;Ljava/lang/String;)V	<init>	<init>
		p	1		id
		p	2		phaseClass
		p	3		name
	m	()Ljava/lang/reflect/Constructor;	a	getConstructor
	m	(I)Lbxx;	a	getById
		p	0		id
	m	(Lbxh;)Lbxr;	a	createInstance
		p	1		dragon
	m	(Ljava/lang/Class;Ljava/lang/String;)Lbxx;	a	create
		p	0		phaseClass
		p	1		name
	m	()I	b	getId
	m	()I	c	getCount
	f	Lbxx;	a	HOLDING_PATTERN
	f	Lbxx;	b	STRAFE_PLAYER
	f	Lbxx;	c	LANDING_APPROACH
	f	Lbxx;	d	LANDING
	f	Lbxx;	e	TAKEOFF
	f	Lbxx;	f	SITTING_FLAMING
	f	Lbxx;	g	SITTING_SCANNING
	f	Lbxx;	h	SITTING_ATTACKING
	f	Lbxx;	i	CHARGING_PLAYER
	f	Lbxx;	j	DYING
	f	Lbxx;	k	HOVERING
	f	[Lbxx;	l	phases
	f	Ljava/lang/Class;	m	instanceClass
	f	I	n	id
	f	Ljava/lang/String;	o	name
c	bxy	net/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhaseManager
	m	(Lbxh;)V	<init>	<init>
		p	1		dragon
	m	()Lbxr;	a	getCurrentPhase
	m	(Lbxx;)V	a	setPhase
		p	1		type
	m	(Lbxx;)Lbxr;	b	getPhase
		p	1		type
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lbxh;	b	dragon
	f	[Lbxr;	c	phases
	f	Lbxr;	d	currentPhase
c	bxz	net/minecraft/world/entity/boss/enderdragon/phases/package-info
c	bya	net/minecraft/world/entity/boss/package-info
c	byb	net/minecraft/world/entity/boss/wither/WitherBoss
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	X	customServerAiStep
	m	()Z	a	isPowered
	m	(FFF)F	a	rotlerp
		p	1		prevAngle
		p	2		desiredAngle
		p	3		maxDifference
	m	(IDDDZ)V	a	performRangedAttack
		p	1		headIndex
		p	2		targetX
		p	4		targetY
		p	6		targetZ
		p	8		charged
	m	(II)V	a	setAlternativeTarget
		p	1		headIndex
		p	2		id
	m	(ILbjg;)V	a	performRangedAttack
		p	1		headIndex
		p	2		target
	m	(Lbho;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbho;IZ)V	a	dropCustomDeathLoot
		p	1		source
		p	2		lootingMultiplier
		p	3		allowDrops
	m	(Lbjg;F)V	a	performRangedAttack
		p	1		target
		p	2		pullProgress
	m	(Ldfj;Lehn;)V	a	makeStuckInBlock
		p	1		state
		p	2		multiplier
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(I)F	b	getHeadYRot
		p	1		headIndex
	m	(Lbid;Lbiq;)Z	b	addEffect
		p	1		effect
		p	2		source
	m	(Lcpv;)Lbsp;	b	createNavigation
		p	1		world
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Ltl;)V	b	setCustomName
		p	1		name
	m	()V	b_	aiStep
	m	(I)F	c	getHeadXRot
		p	1		headIndex
	m	(Lakr;)V	c	startSeenByPlayer
		p	1		player
	m	(Lbid;)Z	c	canBeAffected
		p	1		effect
	m	()Z	cs	canChangeDimensions
	m	(Lakr;)V	d	stopSeenByPlayer
		p	1		player
	m	(Lbho;)Lapc;	d	getHurtSound
		p	1		source
	m	(Ldfj;)Z	d	canDestroy
		p	0		block
	m	()V	dx	checkDespawn
	m	()Lbjl;	eR	getMobType
	m	(Lbjg;)Z	j	lambda$static$0
		p	0		entity
	m	()Lapc;	l_	getDeathSound
	m	(Lbiq;)Z	o	canRide
		p	1		entity
	m	()V	s	makeInvulnerable
	m	(I)V	s	setInvulnerableTicks
		p	1		ticks
	m	()Lbkl$a;	t	createAttributes
	m	(I)I	t	getAlternativeTarget
		p	1		headIndex
	m	(I)D	u	getHeadX
		p	1		headIndex
	m	(I)D	v	getHeadY
		p	1		headIndex
	m	()Lapc;	w	getAmbientSound
	m	(I)D	w	getHeadZ
		p	1		headIndex
	m	()I	y	getInvulnerableTicks
	m	()V	z	registerGoals
	f	Laee;	b	DATA_TARGET_A
	f	Laee;	bT	DATA_ID_INV
	f	I	bU	INVULNERABLE_TICKS
	f	[F	bV	xRotHeads
	f	[F	bW	yRotHeads
	f	[F	bX	xRotOHeads
	f	[F	bY	yRotOHeads
	f	[I	bZ	nextHeadUpdate
	f	Laee;	c	DATA_TARGET_B
	f	[I	ca	idleHeadUpdates
	f	I	cb	destroyBlocksTick
	f	Lakn;	cc	bossEvent
	f	Ljava/util/function/Predicate;	cd	LIVING_ENTITY_SELECTOR
	f	Lbts;	ce	TARGETING_CONDITIONS
	f	Laee;	d	DATA_TARGET_C
	f	Ljava/util/List;	e	DATA_TARGETS
c	byb$a	net/minecraft/world/entity/boss/wither/WitherBoss$WitherDoNothingGoal
	m	()Z	a	canUse
	f	Lbyb;	a	this$0
c	byc	net/minecraft/world/entity/boss/wither/package-info
c	byd	net/minecraft/world/entity/decoration/ArmorStand
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcpv;DDD)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
	m	()Lhv;	A	getBodyPose
	m	()Lhv;	B	getLeftArmPose
	m	()Lhv;	C	getRightArmPose
	m	(Lbiq;)V	D	doPush
		p	1		entity
	m	()Lhv;	E	getLeftLegPose
	m	()Lhv;	F	getRightLegPose
	m	()Z	G	hasPhysics
	m	()V	H	updateInvisibilityStatus
	m	()Lqw;	I	writePose
	m	()V	K	showBreakingParticles
	m	()V	L	playBrokenSound
	m	(BIZ)B	a	setBit
		p	1		value
		p	2		bitField
		p	3		set
	m	(D)Z	a	shouldRenderAtSqrDistance
		p	1		distance
	m	(Laee;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Lakq;Lbjf;)V	a	thunderHit
		p	1		world
		p	2		lightning
	m	(Lbho;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbiq;)Z	a	lambda$static$0
		p	0		entity
	m	(Lbiv;Lcjf;)V	a	setItemSlot
		p	1		slot
		p	2		stack
	m	(Lbjs;)Lbir;	a	getDimensions
		p	1		pose
	m	(Lcbu;Lbiv;Lcjf;Lbgx;)Z	a	swapItem
		p	1		player
		p	2		slot
		p	3		stack
		p	4		hand
	m	(Lcbu;Lehn;Lbgx;)Lbgy;	a	interactAt
		p	1		player
		p	2		hitPos
		p	3		hand
	m	(Lhv;)V	a	setHeadPose
		p	1		angle
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Z)V	a	setShowArms
		p	1		showArms
	m	()V	a_	defineSynchedData
	m	()V	aj	kill
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	(Lbjs;Lbir;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lhv;)V	b	setBodyPose
		p	1		angle
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Ljava/lang/Iterable;	bJ	getHandSlots
	m	()Ljava/lang/Iterable;	bK	getArmorSlots
	m	()Z	br	isPickable
	m	()Z	bs	isPushable
	m	(Lbiv;)Lcjf;	c	getItemBySlot
		p	1		slot
	m	(Lhv;)V	c	setLeftArmPose
		p	1		angle
	m	(Lqw;)V	c	readPose
		p	1		nbt
	m	()Z	cL	ignoreExplosion
	m	()Z	cX	isEffectiveAi
	m	(Lbho;)Lapc;	d	getHurtSound
		p	1		source
	m	(Lhv;)V	d	setRightArmPose
		p	1		angle
	m	()Lcjf;	dy	getPickResult
	m	(FF)F	e	tickHeadTurn
		p	1		bodyRotation
		p	2		headRotation
	m	(Lbiv;)Z	e	isDisabled
		p	1		slot
	m	(Lhv;)V	e	setLeftLegPose
		p	1		angle
	m	()Lbjg$a;	eF	getFallSounds
	m	()Z	eo	canBeSeenByAnyone
	m	(Lcjf;)Z	f	canTakeItem
		p	1		stack
	m	(Lhv;)V	f	setRightLegPose
		p	1		angle
	m	()V	fh	pushEntities
	m	()Lbja;	fl	getMainArm
	m	()Z	fx	isAffectedByPotions
	m	()Z	fy	attackable
	m	(Lbho;F)V	g	causeDamage
		p	1		damageSource
		p	2		amount
	m	(Lbho;)V	h	brokenByPlayer
		p	1		damageSource
	m	(Lehn;)V	h	travel
		p	1		movementInput
	m	(Lbho;)V	i	brokenByAnything
		p	1		damageSource
	m	()V	i_	refreshDimensions
	m	(Lehn;)Lbiv;	j	getClickedSlot
		p	1		hitPos
	m	(Z)V	j	setInvisible
		p	1		invisible
	m	(F)Lehn;	k	getLightProbePosition
		p	1		tickDelta
	m	()V	l	tick
	m	()Lapc;	l_	getDeathSound
	m	()Z	m_	isBaby
	m	(F)V	n	setYHeadRot
		p	1		headYaw
	m	(F)V	o	setYBodyRot
		p	1		bodyYaw
	m	()Z	p_	isIgnoringBlockTriggers
	m	()Lear;	q_	getPistonPushReaction
	m	()Z	s	isSmall
	m	(Z)V	s	setNoBasePlate
		p	1		hideBasePlate
	m	()Z	t	isShowArms
	m	(Z)V	t	setSmall
		p	1		small
	m	(Lbiq;)Z	u	skipAttackInteraction
		p	1		attacker
	m	(Z)V	u	setMarker
		p	1		marker
	m	(Z)Lbir;	v	getDimensionsMarker
		p	1		marker
	m	()Z	w	isNoBasePlate
	m	()Z	y	isMarker
	m	()Lhv;	z	getHeadPose
	f	I	bA	CLIENT_FLAG_NO_BASEPLATE
	f	I	bB	CLIENT_FLAG_MARKER
	f	Laee;	bC	DATA_CLIENT_FLAGS
	f	Laee;	bD	DATA_HEAD_POSE
	f	Laee;	bE	DATA_BODY_POSE
	f	Laee;	bF	DATA_LEFT_ARM_POSE
	f	Laee;	bG	DATA_RIGHT_ARM_POSE
	f	Laee;	bH	DATA_LEFT_LEG_POSE
	f	I	b	WOBBLE_TIME
	f	Laee;	bI	DATA_RIGHT_LEG_POSE
	f	J	bJ	lastHit
	f	Z	bK	ENABLE_ARMS
	f	Lhv;	bL	DEFAULT_HEAD_POSE
	f	Lhv;	bM	DEFAULT_BODY_POSE
	f	Lhv;	bN	DEFAULT_LEFT_ARM_POSE
	f	Lhv;	bO	DEFAULT_RIGHT_ARM_POSE
	f	Lhv;	bP	DEFAULT_LEFT_LEG_POSE
	f	Lhv;	bQ	DEFAULT_RIGHT_LEG_POSE
	f	Lbir;	bR	MARKER_DIMENSIONS
	f	Lbir;	bS	BABY_DIMENSIONS
	f	D	bT	FEET_OFFSET
	f	D	bU	CHEST_OFFSET
	f	D	bV	LEGS_OFFSET
	f	D	bW	HEAD_OFFSET
	f	Ljava/util/function/Predicate;	bX	RIDABLE_MINECARTS
	f	Lhn;	bY	handItems
	f	Lhn;	bZ	armorItems
	f	I	c	DISABLE_TAKING_OFFSET
	f	Z	ca	invisible
	f	I	cb	disabledSlots
	f	Lhv;	cc	headPose
	f	Lhv;	cd	bodyPose
	f	Lhv;	ce	leftArmPose
	f	Lhv;	cf	rightArmPose
	f	Lhv;	cg	leftLegPose
	f	Lhv;	ch	rightLegPose
	f	I	d	DISABLE_PUTTING_OFFSET
	f	I	e	CLIENT_FLAG_SMALL
	f	I	f	CLIENT_FLAG_SHOW_ARMS
c	byd$1	net/minecraft/world/entity/decoration/ArmorStand$1
	f	[I	a	$SwitchMap$net$minecraft$world$entity$EquipmentSlot$Type
c	bye	net/minecraft/world/entity/decoration/GlowItemFrame
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcpv;Lgw;Lha;)V	<init>	<init>
		p	1		world
		p	2		pos
		p	3		facing
	m	()Lapc;	q	getRemoveItemSound
	m	()Lapc;	s	getBreakSound
	m	()Lapc;	t	getPlaceSound
	m	()Lapc;	v	getAddItemSound
	m	()Lapc;	w	getRotateItemSound
	m	()Lcjf;	x	getFrameItemStack
c	byf	net/minecraft/world/entity/decoration/HangingEntity
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lbiu;Lcpv;Lgw;)V	<init>	<init>
		p	1		type
		p	2		world
		p	3		pos
	m	()I	A	getWidth
	m	()I	B	getHeight
	m	()V	C	playPlacementSound
	m	()Lgw;	E	getPos
	m	(Lakq;Lbjf;)V	a	thunderHit
		p	1		world
		p	2		lightning
	m	(Lbho;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbiq;)V	a	dropItem
		p	1		entity
	m	(Lbjm;Lehn;)V	a	move
		p	1		movementType
		p	2		movement
	m	(Lcjf;F)Lbyn;	a	spawnAtLocation
		p	1		stack
		p	2		yOffset
	m	(Lcxq;)F	a	mirror
		p	1		mirror
	m	(Lczh;)F	a	rotate
		p	1		rotation
	m	(Lha;)V	a	setDirection
		p	1		facing
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(I)D	b	offs
	m	(Lbiq;)Z	b	lambda$static$0
		p	0		entity
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Z	br	isPickable
	m	()Z	bt	repositionEntityAfterLoad
	m	()Lha;	cD	getDirection
	m	(DDD)V	e	setPos
		p	1		x
		p	3		y
		p	5		z
	m	()V	i_	refreshDimensions
	m	(DDD)V	j	push
		p	1		deltaX
		p	3		deltaY
		p	5		deltaZ
	m	()V	l	tick
	m	(Lbiq;)Z	u	skipAttackInteraction
		p	1		attacker
	m	()V	y	recalculateBoundingBox
	m	()Z	z	survives
	f	Ljava/util/function/Predicate;	b	HANGING_ENTITY
	f	Lgw;	c	pos
	f	Lha;	d	direction
	f	Lorg/slf4j/Logger;	e	LOGGER
	f	I	f	checkInterval
c	byf$1	net/minecraft/world/entity/decoration/HangingEntity$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$Rotation
c	byg	net/minecraft/world/entity/decoration/ItemFrame
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lbiu;Lcpv;Lgw;Lha;)V	<init>	<init>
		p	1		type
		p	2		world
		p	3		pos
		p	4		facing
	m	(Lcpv;Lgw;Lha;)V	<init>	<init>
		p	1		world
		p	2		pos
		p	3		facing
	m	()I	A	getWidth
	m	()I	B	getHeight
	m	()V	C	playPlacementSound
	m	()Lcjf;	F	getItem
	m	()Ljava/util/OptionalInt;	G	getFramedMapId
	m	()Z	H	hasFramedMap
	m	()I	I	getRotation
	m	()I	K	getAnalogOutput
	m	(D)Z	a	shouldRenderAtSqrDistance
		p	1		distance
	m	(IZ)V	a	setRotation
		p	1		value
		p	2		updateComparators
	m	(Laee;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Lbho;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbiq;)V	a	dropItem
		p	1		entity
	m	(Lbjm;Lehn;)V	a	move
		p	1		movementType
		p	2		movement
	m	(Lbjs;Lbir;)F	a	getEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lcbu;Lbgx;)Lbgy;	a	interact
		p	1		player
		p	2		hand
	m	(Lcjf;)V	a	setItem
		p	1		stack
	m	(Lcjf;Z)V	a	setItem
		p	1		value
		p	2		update
	m	(Lha;)V	a	setDirection
		p	1		facing
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lwx;)V	a	recreateFromPacket
		p	1		packet
	m	()V	a_	defineSynchedData
	m	(I)Lbjy;	a_	getSlot
		p	1		mappedIndex
	m	()V	aj	kill
	m	(I)V	b	setRotation
		p	1		value
	m	(Lbiq;Z)V	b	dropItem
		p	1		entity
		p	2		alwaysDrop
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()F	bD	getPickRadius
	m	(I)V	c	lambda$removeFramedMap$0
	m	(Lcjf;)V	c	removeFramedMap
	m	(Lcjf;)V	d	onItemChanged
		p	1		stack
	m	()F	dC	getVisualRotationYInDegrees
	m	()Lvd;	di	getAddEntityPacket
	m	()Lcjf;	dy	getPickResult
	m	(DDD)V	j	push
		p	1		deltaX
		p	3		deltaY
		p	5		deltaZ
	m	()Lapc;	q	getRemoveItemSound
	m	()Lapc;	s	getBreakSound
	m	()Lapc;	t	getPlaceSound
	m	()Lapc;	v	getAddItemSound
	m	()Lapc;	w	getRotateItemSound
	m	()Lcjf;	x	getFrameItemStack
	m	()V	y	recalculateBoundingBox
	m	()Z	z	survives
	f	I	e	NUM_ROTATIONS
	f	Lorg/slf4j/Logger;	f	LOGGER
	f	Laee;	g	DATA_ITEM
	f	Laee;	h	DATA_ROTATION
	f	F	i	dropChance
	f	Z	j	fixed
c	byg$1	net/minecraft/world/entity/decoration/ItemFrame$1
	m	()Lcjf;	a	get
	m	(Lcjf;)Z	a	set
		p	1		stack
	f	Lbyg;	a	this$0
c	byg$2	net/minecraft/world/entity/decoration/ItemFrame$2
	f	[I	a	$SwitchMap$net$minecraft$core$Direction$Axis
c	byh	net/minecraft/world/entity/decoration/LeashFenceKnotEntity
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcpv;Lgw;)V	<init>	<init>
		p	1		world
		p	2		pos
	m	()I	A	getWidth
	m	()I	B	getHeight
	m	()V	C	playPlacementSound
	m	(D)Z	a	shouldRenderAtSqrDistance
		p	1		distance
	m	(Lbiq;)V	a	dropItem
		p	1		entity
	m	(Lbjs;Lbir;)F	a	getEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lcbu;Lbgx;)Lbgy;	a	interact
		p	1		player
		p	2		hand
	m	(Lha;)V	a	setDirection
		p	1		facing
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lcpv;Lgw;)Lbyh;	b	getOrCreateKnot
		p	0		world
		p	1		pos
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Lvd;	di	getAddEntityPacket
	m	()Lcjf;	dy	getPickResult
	m	(F)Lehn;	q	getRopeHoldPosition
		p	1		delta
	m	()V	y	recalculateBoundingBox
	m	()Z	z	survives
	f	D	e	OFFSET_Y
c	byi	net/minecraft/world/entity/decoration/Painting
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcpv;Lgw;)V	<init>	<init>
		p	1		world
		p	2		pos
	m	(Lcpv;Lgw;Lha;Lhe;)V	<init>	<init>
		p	1		world
		p	2		pos
		p	3		direction
		p	4		variant
	m	()I	A	getWidth
	m	()I	B	getHeight
	m	()V	C	playPlacementSound
	m	(DDDFFI)V	a	lerpTo
		p	1		x
		p	3		y
		p	5		z
		p	7		yaw
		p	8		pitch
		p	9		interpolationSteps
	m	(ILhe;)Z	a	lambda$create$1
		p	1		variant
	m	(Laee;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Laew;)Laev;	a	lambda$loadVariant$2
		p	0		id
	m	(Lbiq;)V	a	dropItem
		p	1		entity
	m	(Lbyi;Lhe;)Z	a	lambda$create$0
		p	1		variant
	m	(Lcpv;Lgw;Lha;)Ljava/util/Optional;	a	create
		p	0		world
		p	1		pos
		p	2		facing
	m	(Lhe;)V	a	setVariant
		p	1		variant
	m	(Ljava/lang/Object;)V	a	setVariant
		p	1		variant
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lqw;Lhe;)V	a	storeVariant
		p	0		nbt
		p	1		variant
	m	(Lwx;)V	a	recreateFromPacket
		p	1		packet
	m	()V	a_	defineSynchedData
	m	(DDDFF)V	b	moveTo
		p	1		x
		p	3		y
		p	5		z
		p	7		yaw
		p	8		pitch
	m	(Lhe;)I	b	variantArea
		p	0		variant
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Ljava/lang/Object;	c	getVariant
	m	(Lqw;)Ljava/util/Optional;	c	loadVariant
		p	0		nbt
	m	()Lvd;	di	getAddEntityPacket
	m	()Lehn;	dk	trackingPosition
	m	()Lcjf;	dy	getPickResult
	m	()Lhe;	q	getVariant
	m	()Lhe;	s	getDefaultVariant
	f	Ljava/lang/String;	e	VARIANT_TAG
	f	Laee;	f	DATA_PAINTING_VARIANT_ID
	f	Laev;	g	DEFAULT_VARIANT
c	byj	net/minecraft/world/entity/decoration/PaintingVariant
	m	(II)V	<init>	<init>
		p	1		width
		p	2		height
	m	()I	a	getWidth
	m	()I	b	getHeight
	f	I	a	width
	f	I	b	height
c	byk	net/minecraft/world/entity/decoration/PaintingVariants
	m	(Lhq;)Lbyj;	a	bootstrap
		p	0		registry
	m	(Ljava/lang/String;)Laev;	a	create
		p	0		id
	f	Laev;	A	EARTH
	f	Laev;	B	WIND
	f	Laev;	C	WATER
	f	Laev;	D	FIRE
	f	Laev;	a	KEBAB
	f	Laev;	b	AZTEC
	f	Laev;	c	ALBAN
	f	Laev;	d	AZTEC2
	f	Laev;	e	BOMB
	f	Laev;	f	PLANT
	f	Laev;	g	WASTELAND
	f	Laev;	h	POOL
	f	Laev;	i	COURBET
	f	Laev;	j	SEA
	f	Laev;	k	SUNSET
	f	Laev;	l	CREEBET
	f	Laev;	m	WANDERER
	f	Laev;	n	GRAHAM
	f	Laev;	o	MATCH
	f	Laev;	p	BUST
	f	Laev;	q	STAGE
	f	Laev;	r	VOID
	f	Laev;	s	SKULL_AND_ROSES
	f	Laev;	t	WITHER
	f	Laev;	u	FIGHTERS
	f	Laev;	v	POINTER
	f	Laev;	w	PIGSCENE
	f	Laev;	x	BURNING_SKULL
	f	Laev;	y	SKELETON
	f	Laev;	z	DONKEY_KONG
c	byl	net/minecraft/world/entity/decoration/package-info
c	bym	net/minecraft/world/entity/item/FallingBlockEntity
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcpv;DDDLdfj;)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
		p	8		block
	m	(FFLbho;)Z	a	causeFallDamage
		p	1		fallDistance
		p	2		damageMultiplier
		p	3		damageSource
	m	(Lbho;FLbiq;)V	a	lambda$causeFallDamage$0
		p	2		entity
	m	(Lcpv;Lgw;Ldfj;)Lbym;	a	fall
		p	0		world
		p	1		pos
		p	2		state
	m	(Lcsv;Lgw;)V	a	callOnBrokenAfterFall
		p	1		block
		p	2		pos
	m	(Lgw;)V	a	setStartPos
		p	1		pos
	m	(Lp;)V	a	fillCrashReportCategory
		p	1		section
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lwx;)V	a	recreateFromPacket
		p	1		packet
	m	()Lbiq$b;	aU	getMovementEmission
	m	()V	a_	defineSynchedData
	m	(FI)V	b	setHurtsEntities
		p	1		fallHurtAmount
		p	2		fallHurtMax
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Z	br	isPickable
	m	()Z	cM	onlyOpCanSetNbt
	m	()Ltl;	cn	getTypeName
	m	()Z	cp	isAttackable
	m	()Z	cu	displayFireAnimation
	m	()Lvd;	di	getAddEntityPacket
	m	()V	l	tick
	m	()Lgw;	q	getStartPos
	m	()V	s	disableDrop
	m	()Ldfj;	t	getBlockState
	f	I	b	time
	f	Z	c	dropItem
	f	Lqw;	d	blockData
	f	Laee;	e	DATA_START_POS
	f	Lorg/slf4j/Logger;	f	LOGGER
	f	Ldfj;	g	blockState
	f	Z	h	cancelDrop
	f	Z	i	hurtEntities
	f	I	j	fallDamageMax
	f	F	k	fallDamagePerDistance
c	byn	net/minecraft/world/entity/item/ItemEntity
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lbyn;)V	<init>	<init>
		p	1		entity
	m	(Lcpv;DDDLcjf;)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
		p	8		stack
	m	(Lcpv;DDDLcjf;DDD)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
		p	8		stack
		p	9		velocityX
		p	11		velocityY
		p	13		velocityZ
	m	()V	A	setExtendedLifetime
	m	()V	B	makeFakeItem
	m	()Lbyn;	C	copy
	m	()V	E	setUnderwaterMovement
	m	()V	F	setUnderLavaMovement
	m	()V	G	mergeWithNeighbours
	m	()Z	H	isMergable
	m	(F)F	a	getSpin
		p	1		tickDelta
	m	(Laee;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Lbho;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbyn;)V	a	tryToMerge
		p	1		other
	m	(Lbyn;Lcjf;Lbyn;Lcjf;)V	a	merge
		p	0		targetEntity
		p	1		targetStack
		p	2		sourceEntity
		p	3		sourceStack
	m	(Lbyn;Lcjf;Lcjf;)V	a	merge
		p	0		targetEntity
		p	1		stack1
		p	2		stack2
	m	(Lcjf;)V	a	setItem
		p	1		stack
	m	(Lcjf;Lcjf;)Z	a	areMergable
		p	0		stack1
		p	1		stack2
	m	(Lcjf;Lcjf;I)Lcjf;	a	merge
		p	0		stack1
		p	1		stack2
		p	2		maxCount
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()Lgw;	aG	getBlockPosBelowThatAffectsMyMovement
	m	()Lbiq$b;	aU	getMovementEmission
	m	()Z	aV	dampensVibrations
	m	()Z	aW	fireImmune
	m	()V	a_	defineSynchedData
	m	()Ltl;	ab	getName
	m	(I)V	b	setPickUpDelay
		p	1		pickupDelay
	m	(Lakq;)Lbiq;	b	changeDimension
		p	1		destination
	m	(Lbyn;)Z	b	lambda$mergeWithNeighbours$0
		p	1		otherItemEntity
	m	(Ljava/util/UUID;)V	b	setTarget
		p	1		owner
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lcbu;)V	b_	playerTouch
		p	1		player
	m	(Ljava/util/UUID;)V	c	setThrower
		p	1		thrower
	m	()Z	cp	isAttackable
	m	()F	dC	getVisualRotationYInDegrees
	m	()Lape;	da	getSoundSource
	m	()V	l	tick
	m	()Lcjf;	q	getItem
	m	()I	s	getAge
	m	()V	t	setDefaultPickUpDelay
	m	()Lbiq;	v	getOwner
	m	()V	w	setNoPickUpDelay
	m	()V	x	setNeverPickUp
	m	()Z	y	hasPickUpDelay
	m	()V	z	setUnlimitedLifetime
	f	F	b	bobOffs
	f	Laee;	c	DATA_ITEM
	f	I	d	LIFETIME
	f	I	e	INFINITE_PICKUP_DELAY
	f	I	f	INFINITE_LIFETIME
	f	I	g	age
	f	I	h	pickupDelay
	f	I	i	health
	f	Ljava/util/UUID;	j	thrower
	f	Ljava/util/UUID;	k	target
c	byo	net/minecraft/world/entity/item/PrimedTnt
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcpv;DDDLbjg;)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
		p	8		igniter
	m	(Lbjs;Lbir;)F	a	getEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()Lbiq$b;	aU	getMovementEmission
	m	()V	a_	defineSynchedData
	m	(I)V	b	setFuse
		p	1		fuse
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Z	br	isPickable
	m	()V	l	tick
	m	()Lbjg;	q	getOwner
	m	()I	s	getFuse
	m	()V	t	explode
	m	()Lbiq;	v	getOwner
	f	Laee;	b	DATA_FUSE_ID
	f	I	c	DEFAULT_FUSE_TIME
	f	Lbjg;	d	owner
c	byp	net/minecraft/world/entity/item/package-info
c	byq	net/minecraft/world/entity/monster/AbstractIllager
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lbiq;Lbir;F)Lorg/joml/Vector3f;	a	getPassengerAttachmentPoint
		p	1		passenger
		p	2		dimensions
		p	3		scaleFactor
	m	(Lbjg;)Z	c	canAttack
		p	1		target
	m	()Lbjl;	eR	getMobType
	m	(Lbiq;)F	l	ridingOffset
		p	1		vehicle
	m	()Lbyq$a;	s	getArmPose
	m	()V	z	registerGoals
c	byq$a	net/minecraft/world/entity/monster/AbstractIllager$IllagerArmPose
	m	()[Lbyq$a;	a	$values
	f	Lbyq$a;	a	CROSSED
	f	Lbyq$a;	b	ATTACKING
	f	Lbyq$a;	c	SPELLCASTING
	f	Lbyq$a;	d	BOW_AND_ARROW
	f	Lbyq$a;	e	CROSSBOW_HOLD
	f	Lbyq$a;	f	CROSSBOW_CHARGE
	f	Lbyq$a;	g	CELEBRATING
	f	Lbyq$a;	h	NEUTRAL
	f	[Lbyq$a;	i	$VALUES
c	byq$b	net/minecraft/world/entity/monster/AbstractIllager$RaiderOpenDoorGoal
	m	(Lbyq;Lcdc;)V	<init>	<init>
		p	2		raider
	m	()Z	a	canUse
	f	Lbyq;	a	this$0
c	byr	net/minecraft/world/entity/monster/AbstractSkeleton
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lasc;Lbgw;)V	a	populateDefaultEquipmentSlots
		p	1		random
		p	2		localDifficulty
	m	(Lbiv;Lcjf;)V	a	setItemSlot
		p	1		slot
		p	2		stack
	m	(Lbjg;F)V	a	performRangedAttack
		p	1		target
		p	2		pullProgress
	m	(Lcjv;)Z	a	canFireProjectileWeapon
		p	1		weapon
	m	(Lcqk;Lbgw;Lbjk;Lbjz;Lqw;)Lbjz;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lbjs;Lbir;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lcjf;F)Lcca;	b	getArrow
		p	1		arrow
		p	2		damageModifier
	m	(Lgw;Ldfj;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	()V	b_	aiStep
	m	()V	by	rideTick
	m	()Lbjl;	eR	getMobType
	m	()Z	gd	isShaking
	m	(Lbiq;)F	l	ridingOffset
		p	1		vehicle
	m	()Lbkl$a;	s	createAttributes
	m	()Lapc;	t	getStepSound
	m	()V	y	reassessWeaponGoal
	m	()V	z	registerGoals
	f	Lbrb;	b	bowGoal
	f	Lbql;	c	meleeGoal
c	byr$1	net/minecraft/world/entity/monster/AbstractSkeleton$1
	m	(Lbyr;Lbjp;DZ)V	<init>	<init>
		p	2		mob
		p	3		speed
		p	5		pauseWhenMobIdle
	m	()V	c	start
	m	()V	d	stop
	f	Lbyr;	b	this$0
c	bys	net/minecraft/world/entity/monster/Blaze
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	X	customServerAiStep
	m	()V	a_	defineSynchedData
	m	()Z	bM	isOnFire
	m	()V	b_	aiStep
	m	()F	bm	getLightLevelDependentMagicValue
	m	(Lbho;)Lapc;	d	getHurtSound
		p	1		source
	m	()Z	ff	isSensitiveToWater
	m	()Lapc;	l_	getDeathSound
	m	()Lbkl$a;	s	createAttributes
	m	()Z	t	isCharged
	m	()Lapc;	w	getAmbientSound
	m	(Z)V	w	setCharged
		p	1		fireActive
	m	()V	z	registerGoals
	f	F	b	allowedHeightOffset
	f	I	c	nextHeightOffsetChangeTick
	f	Laee;	d	DATA_FLAGS_ID
c	bys$a	net/minecraft/world/entity/monster/Blaze$BlazeAttackGoal
	m	(Lbys;)V	<init>	<init>
		p	1		blaze
	m	()Z	Q_	requiresUpdateEveryTick
	m	()Z	a	canUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	m	()D	h	getFollowDistance
	f	Lbys;	a	blaze
	f	I	b	attackStep
	f	I	c	attackTime
	f	I	d	lastSeen
c	byt	net/minecraft/world/entity/monster/CaveSpider
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lbiq;)Z	C	doHurtTarget
		p	1		target
	m	(Lbiq;Lbir;F)Lorg/joml/Vector3f;	a	getPassengerAttachmentPoint
		p	1		passenger
		p	2		dimensions
		p	3		scaleFactor
	m	(Lcqk;Lbgw;Lbjk;Lbjz;Lqw;)Lbjz;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lbjs;Lbir;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lbiq;)F	l	ridingOffset
		p	1		vehicle
	m	()Lbkl$a;	s	createCaveSpider
c	byu	net/minecraft/world/entity/monster/Creeper
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lbiq;)Z	C	doHurtTarget
		p	1		target
	m	(F)F	E	getSwelling
		p	1		timeDelta
	m	()Z	a	isPowered
	m	(FFLbho;)Z	a	causeFallDamage
		p	1		fallDistance
		p	2		damageMultiplier
		p	3		damageSource
	m	(Lakq;Lbjf;)V	a	thunderHit
		p	1		world
		p	2		lightning
	m	(Lbgx;Lcbu;)V	a	lambda$mobInteract$0
		p	1		playerx
	m	(Lbho;IZ)V	a	dropCustomDeathLoot
		p	1		source
		p	2		lootingMultiplier
		p	3		allowDrops
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(I)V	b	setSwellDir
		p	1		fuseSpeed
	m	(Lcbu;Lbgx;)Lbgy;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()I	ct	getMaxFallDistance
	m	(Lbho;)Lapc;	d	getHurtSound
		p	1		source
	m	()V	gd	ignite
	m	()Z	ge	canDropMobsSkull
	m	()V	gf	increaseDroppedSkulls
	m	()V	gg	explodeCreeper
	m	()V	gh	spawnLingeringCloud
	m	(Lbjg;)V	h	setTarget
		p	1		target
	m	()V	l	tick
	m	()Lapc;	l_	getDeathSound
	m	()Lbkl$a;	s	createAttributes
	m	()I	t	getSwellDir
	m	()Z	y	isIgnited
	m	()V	z	registerGoals
	f	Laee;	b	DATA_SWELL_DIR
	f	I	bT	swell
	f	I	bU	maxSwell
	f	I	bV	explosionRadius
	f	I	bW	droppedSkulls
	f	Laee;	c	DATA_IS_POWERED
	f	Laee;	d	DATA_IS_IGNITED
	f	I	e	oldSwell
c	byv	net/minecraft/world/entity/monster/CrossbowAttackMob
	m	()V	a	onCrossbowAttackPerformed
	m	(Lbjg;Lbjg;Lccm;FF)V	a	shootCrossbowProjectile
		p	1		entity
		p	2		target
		p	3		projectile
		p	4		multishotSpray
		p	5		speed
	m	(Lbjg;Lcjf;Lccm;F)V	a	shootCrossbowProjectile
		p	1		target
		p	2		crossbow
		p	3		projectile
		p	4		multiShotSpray
	m	(Lbjg;Lehn;F)Lorg/joml/Vector3f;	a	getProjectileShotVector
		p	1		entity
		p	2		positionDelta
		p	3		multishotSpray
	m	(Lbjg;F)V	b	performCrossbowAttack
		p	1		entity
		p	2		speed
	m	(Z)V	b	setChargingCrossbow
		p	1		charging
	m	()Lbjg;	q	getTarget
c	byw	net/minecraft/world/entity/monster/Drowned
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lasc;Lbgw;)V	a	populateDefaultEquipmentSlots
		p	1		random
		p	2		localDifficulty
	m	(Lbiu;Lcqk;Lbjk;Lgw;Lasc;)Z	a	checkDrownedSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	(Lbjg;F)V	a	performRangedAttack
		p	1		target
		p	2		pullProgress
	m	(Lbyw;Lbsp;)Lbsp;	a	access$002
	m	(Lcpw;Lgw;)Z	a	isDeepEnoughToSpawn
		p	0		world
		p	1		pos
	m	(Lcpy;)Z	a	checkSpawnObstruction
		p	1		world
	m	(Lcqk;Lbgw;Lbjk;Lbjz;Lqw;)Lbjz;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	()Lapc;	aL	getSwimSound
	m	(Lcjf;Lcjf;)Z	b	canReplaceCurrentItem
		p	1		newStack
		p	2		oldStack
	m	()Z	bZ	isVisuallySwimming
	m	()V	bd	updateSwimming
	m	()Z	cy	isPushedByFluid
	m	(Lbho;)Lapc;	d	getHurtSound
		p	1		source
	m	()Lcjf;	gd	getSkull
	m	()Z	ge	convertsInWater
	m	()Z	gf	closeToNextPos
	m	()Z	gn	wantsToSwim
	m	(Lehn;)V	h	travel
		p	1		movementInput
	m	(Lbjg;)Z	j	okTarget
		p	1		target
	m	()Lapc;	l_	getDeathSound
	m	()V	s	addBehaviourGoals
	m	()Z	t	supportsBreakDoorGoal
	m	()Lapc;	w	getAmbientSound
	m	(Z)V	w	setSearchingForLand
		p	1		targetingUnderwater
	m	()Lapc;	y	getStepSound
	f	F	b	NAUTILUS_SHELL_CHANCE
	f	Z	bX	searchingForLand
	f	Lbsr;	c	waterNavigation
	f	Lbso;	d	groundNavigation
c	byw$a	net/minecraft/world/entity/monster/Drowned$DrownedAttackGoal
	m	(Lbyw;DZ)V	<init>	<init>
		p	1		drowned
		p	2		speed
		p	4		pauseWhenMobIdle
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	f	Lbyw;	b	drowned
c	byw$b	net/minecraft/world/entity/monster/Drowned$DrownedGoToBeachGoal
	m	(Lbyw;D)V	<init>	<init>
		p	1		drowned
		p	2		speed
	m	()Z	a	canUse
	m	(Lcpy;Lgw;)Z	a	isValidTarget
		p	1		world
		p	2		pos
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	f	Lbyw;	g	drowned
c	byw$c	net/minecraft/world/entity/monster/Drowned$DrownedGoToWaterGoal
	m	(Lbjp;D)V	<init>	<init>
		p	1		mob
		p	2		speed
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()Lehn;	h	getWaterPos
	f	Lbjp;	a	mob
	f	D	b	wantedX
	f	D	c	wantedY
	f	D	d	wantedZ
	f	D	e	speedModifier
	f	Lcpv;	f	level
c	byw$d	net/minecraft/world/entity/monster/Drowned$DrownedMoveControl
	m	(Lbyw;)V	<init>	<init>
		p	1		drowned
	m	()V	a	tick
	f	Lbyw;	l	drowned
c	byw$e	net/minecraft/world/entity/monster/Drowned$DrownedSwimUpGoal
	m	(Lbyw;DI)V	<init>	<init>
		p	1		drowned
		p	2		speed
		p	4		minY
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lbyw;	a	drowned
	f	D	b	speedModifier
	f	I	c	seaLevel
	f	Z	d	stuck
c	byw$f	net/minecraft/world/entity/monster/Drowned$DrownedTridentAttackGoal
	m	(Lbzm;DIF)V	<init>	<init>
		p	1		mob
		p	2		mobSpeed
		p	4		intervalTicks
		p	5		maxShootRange
	m	()Z	a	canUse
	m	()V	c	start
	m	()V	d	stop
	f	Lbyw;	a	drowned
c	byx	net/minecraft/world/entity/monster/ElderGuardian
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	X	customServerAiStep
	m	(Lbiq;Lbir;F)Lorg/joml/Vector3f;	a	getPassengerAttachmentPoint
		p	1		passenger
		p	2		dimensions
		p	3		scaleFactor
	m	(Lakr;)V	b	lambda$customServerAiStep$0
	m	(Lbho;)Lapc;	d	getHurtSound
		p	1		source
	m	()Lapc;	l_	getDeathSound
	m	()Lbkl$a;	s	createAttributes
	m	()I	t	getAttackDuration
	m	()Lapc;	w	getAmbientSound
	m	()Lapc;	y	getFlopSound
	f	F	b	ELDER_SIZE_SCALE
	f	I	bT	EFFECT_RADIUS
	f	I	bU	EFFECT_DURATION
	f	I	bV	EFFECT_AMPLIFIER
	f	I	bW	EFFECT_DISPLAY_LIMIT
	f	I	e	EFFECT_INTERVAL
c	byy	net/minecraft/world/entity/monster/EnderMan
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()Z	U	requiresCustomPersistence
	m	()V	X	customServerAiStep
	m	()I	a	getRemainingPersistentAngerTime
	m	(I)V	a	setRemainingPersistentAngerTime
		p	1		angerTime
	m	(Laee;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Lbho;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbho;IZ)V	a	dropCustomDeathLoot
		p	1		source
		p	2		lootingMultiplier
		p	3		allowDrops
	m	(Lbho;Lccx;F)Z	a	hurtWithCleanWater
		p	1		source
		p	2		potion
		p	3		amount
	m	(Lbiq;)Z	a	teleportTowards
		p	1		entity
	m	(Lbiq;Lbir;F)Lorg/joml/Vector3f;	a	getPassengerAttachmentPoint
		p	1		passenger
		p	2		dimensions
		p	3		scaleFactor
	m	(Ljava/util/UUID;)V	a	setPersistentAngerTarget
		p	1		angryAt
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	()Ljava/util/UUID;	b	getPersistentAngerTarget
	m	(Lbjs;Lbir;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()V	b_	aiStep
	m	()V	c	startPersistentAngerTimer
	m	(Lbho;)Lapc;	d	getHurtSound
		p	1		source
	m	(Ldfj;)V	d	setCarriedBlock
		p	1		state
	m	()Z	ff	isSensitiveToWater
	m	(Lcbu;)Z	g	isLookingAtMe
		p	1		player
	m	()Ldfj;	gd	getCarriedBlock
	m	()Z	ge	isCreepy
	m	()Z	gf	hasBeenStaredAt
	m	()V	gg	setBeingStaredAt
	m	(Lbjg;)V	h	setTarget
		p	1		target
	m	()Lapc;	l_	getDeathSound
	m	(DDD)Z	r	teleport
		p	1		x
		p	3		y
		p	5		z
	m	()Lbkl$a;	s	createAttributes
	m	()V	t	playStareSound
	m	()Lapc;	w	getAmbientSound
	m	()Z	y	teleport
	m	()V	z	registerGoals
	f	I	bT	MIN_DEAGGRESSION_TIME
	f	Laee;	bU	DATA_CARRY_STATE
	f	Laee;	bV	DATA_CREEPY
	f	Laee;	bW	DATA_STARED_AT
	f	I	bX	lastStareSound
	f	I	bY	targetChangeTime
	f	Lbgj;	bZ	PERSISTENT_ANGER_TIME
	f	Ljava/util/UUID;	c	SPEED_MODIFIER_ATTACKING_UUID
	f	I	ca	remainingPersistentAngerTime
	f	Ljava/util/UUID;	cb	persistentAngerTarget
	f	Lbkk;	d	SPEED_MODIFIER_ATTACKING
	f	I	e	DELAY_BETWEEN_CREEPY_STARE_SOUND
c	byy$a	net/minecraft/world/entity/monster/EnderMan$EndermanFreezeWhenLookedAt
	m	(Lbyy;)V	<init>	<init>
		p	1		enderman
	m	()Z	a	canUse
	m	()V	c	start
	m	()V	e	tick
	f	Lbyy;	a	enderman
	f	Lbjg;	b	target
c	byy$b	net/minecraft/world/entity/monster/EnderMan$EndermanLeaveBlockGoal
	m	(Lbyy;)V	<init>	<init>
		p	1		enderman
	m	()Z	a	canUse
	m	(Lcpv;Lgw;Ldfj;Ldfj;Ldfj;Lgw;)Z	a	canPlaceBlock
		p	1		world
		p	2		posAbove
		p	3		carriedState
		p	4		stateAbove
		p	5		state
		p	6		pos
	m	()V	e	tick
	f	Lbyy;	a	enderman
c	byy$c	net/minecraft/world/entity/monster/EnderMan$EndermanLookForPlayerGoal
	m	(Lbyy;Ljava/util/function/Predicate;)V	<init>	<init>
		p	1		enderman
		p	2		targetPredicate
	m	()Z	a	canUse
	m	(Lbyy;Lbjg;)Z	a	lambda$new$0
		p	1		playerEntity
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lbyy;	i	enderman
	f	Lcbu;	j	pendingTarget
	f	I	k	aggroTime
	f	I	l	teleportTime
	f	Lbts;	m	startAggroTargetConditions
	f	Lbts;	n	continueAggroTargetConditions
	f	Ljava/util/function/Predicate;	o	isAngerInducing
c	byy$d	net/minecraft/world/entity/monster/EnderMan$EndermanTakeBlockGoal
	m	(Lbyy;)V	<init>	<init>
		p	1		enderman
	m	()Z	a	canUse
	m	()V	e	tick
	f	Lbyy;	a	enderman
c	byz	net/minecraft/world/entity/monster/Endermite
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lbiq;Lbir;F)Lorg/joml/Vector3f;	a	getPassengerAttachmentPoint
		p	1		passenger
		p	2		dimensions
		p	3		scaleFactor
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()Lbiq$b;	aU	getMovementEmission
	m	(Lbiu;Lcpw;Lbjk;Lgw;Lasc;)Z	b	checkEndermiteSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	(Lbjs;Lbir;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lgw;Ldfj;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()V	b_	aiStep
	m	(Lbho;)Lapc;	d	getHurtSound
		p	1		source
	m	()Lbjl;	eR	getMobType
	m	()V	l	tick
	m	()Lapc;	l_	getDeathSound
	m	(F)V	o	setYBodyRot
		p	1		bodyYaw
	m	()Lbkl$a;	s	createAttributes
	m	()Lapc;	w	getAmbientSound
	m	()V	z	registerGoals
	f	I	b	MAX_LIFE
	f	I	c	life
c	bza	net/minecraft/world/entity/monster/Enemy
	f	I	f_	XP_REWARD_NONE
	f	I	g_	XP_REWARD_SMALL
	f	I	h_	XP_REWARD_MEDIUM
	f	I	i_	XP_REWARD_LARGE
	f	I	j_	XP_REWARD_HUGE
	f	I	k_	XP_REWARD_BOSS
c	bzb	net/minecraft/world/entity/monster/Evoker
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	X	customServerAiStep
	m	(IZ)V	a	applyRaidBuffs
		p	1		wave
		p	2		unused
	m	(Lbvn;)V	a	setWololoTarget
		p	1		wololoTarget
	m	(Lbzb;)Lasc;	a	access$000
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	()Lapc;	ac_	getCelebrateSound
	m	(Lbzb;)Lasc;	b	access$100
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lbzb;)Lasc;	c	access$200
	m	(Lbho;)Lapc;	d	getHurtSound
		p	1		source
	m	(Lbzb;)Lasc;	d	access$300
	m	(Lbzb;)Lasc;	e	access$400
	m	()Lapc;	gd	getCastingSoundEvent
	m	()Lbvn;	gw	getWololoTarget
	m	()Lapc;	l_	getDeathSound
	m	(Lbiq;)Z	s	isAlliedTo
		p	1		other
	m	()Lbkl$a;	t	createAttributes
	m	()Lapc;	w	getAmbientSound
	m	()V	z	registerGoals
	f	Lbvn;	e	wololoTarget
c	bzb$a	net/minecraft/world/entity/monster/Evoker$EvokerAttackSpellGoal
	m	(DDDDFI)V	a	createSpellEntity
		p	1		x
		p	3		z
		p	5		maxY
		p	7		y
		p	9		yaw
		p	10		warmup
	m	()I	h	getCastingTime
	m	()I	i	getCastingInterval
	m	()V	k	performSpellCasting
	m	()Lapc;	l	getSpellPrepareSound
	m	()Lbzs$a;	m	getSpell
	f	Lbzb;	a	this$0
c	bzb$b	net/minecraft/world/entity/monster/Evoker$EvokerCastingSpellGoal
	m	()V	e	tick
	f	Lbzb;	a	this$0
c	bzb$c	net/minecraft/world/entity/monster/Evoker$EvokerSummonSpellGoal
	m	()Z	a	canUse
	m	()I	h	getCastingTime
	m	()I	i	getCastingInterval
	m	()V	k	performSpellCasting
	m	()Lapc;	l	getSpellPrepareSound
	m	()Lbzs$a;	m	getSpell
	f	Lbzb;	a	this$0
	f	Lbts;	e	vexCountTargeting
c	bzb$d	net/minecraft/world/entity/monster/Evoker$EvokerWololoSpellGoal
	m	()Z	a	canUse
	m	(Lbjg;)Z	a	lambda$new$0
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	m	()I	h	getCastingTime
	m	()I	i	getCastingInterval
	m	()V	k	performSpellCasting
	m	()Lapc;	l	getSpellPrepareSound
	m	()Lbzs$a;	m	getSpell
	m	()I	n	getCastWarmupTime
	f	Lbzb;	a	this$0
	f	Lbts;	e	wololoTargeting
c	bzc	net/minecraft/world/entity/monster/Ghast
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()Z	V	shouldDespawnInPeaceful
	m	(Lbho;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbiq;Lbir;F)Lorg/joml/Vector3f;	a	getPassengerAttachmentPoint
		p	1		passenger
		p	2		dimensions
		p	3		scaleFactor
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(Lbho;)Z	b	isInvulnerableTo
		p	1		damageSource
	m	(Lbiu;Lcpw;Lbjk;Lgw;Lasc;)Z	b	checkGhastSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	(Lbjs;Lbir;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lbho;)Lapc;	d	getHurtSound
		p	1		source
	m	()Lape;	da	getSoundSource
	m	()F	eV	getSoundVolume
	m	()I	fH	getMaxSpawnClusterSize
	m	(Lbho;)Z	h	isReflectedFireball
		p	0		damageSource
	m	(Lbjg;)Z	j	lambda$registerGoals$0
		p	1		entity
	m	(Lbiq;)F	l	ridingOffset
		p	1		vehicle
	m	()Lapc;	l_	getDeathSound
	m	()Z	s	isCharging
	m	()I	t	getExplosionPower
	m	()Lapc;	w	getAmbientSound
	m	(Z)V	w	setCharging
		p	1		shooting
	m	()Lbkl$a;	y	createAttributes
	m	()V	z	registerGoals
	f	Laee;	b	DATA_IS_CHARGING
	f	I	c	explosionPower
c	bzc$a	net/minecraft/world/entity/monster/Ghast$GhastLookGoal
	m	(Lbzc;)V	<init>	<init>
		p	1		ghast
	m	()Z	Q_	requiresUpdateEveryTick
	m	()Z	a	canUse
	m	()V	e	tick
	f	Lbzc;	a	ghast
c	bzc$b	net/minecraft/world/entity/monster/Ghast$GhastMoveControl
	m	(Lbzc;)V	<init>	<init>
		p	1		ghast
	m	()V	a	tick
	m	(Lehn;I)Z	a	canReach
		p	1		direction
		p	2		steps
	f	Lbzc;	l	ghast
	f	I	m	floatDuration
c	bzc$c	net/minecraft/world/entity/monster/Ghast$GhastShootFireballGoal
	m	(Lbzc;)V	<init>	<init>
		p	1		ghast
	m	()Z	Q_	requiresUpdateEveryTick
	m	()Z	a	canUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	I	a	chargeTime
	f	Lbzc;	b	ghast
c	bzc$d	net/minecraft/world/entity/monster/Ghast$RandomFloatAroundGoal
	m	(Lbzc;)V	<init>	<init>
		p	1		ghast
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	f	Lbzc;	a	ghast
c	bzd	net/minecraft/world/entity/monster/Giant
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lgw;Lcpy;)F	a	getWalkTargetValue
		p	1		pos
		p	2		world
	m	(Lbjs;Lbir;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lbiq;)F	l	ridingOffset
		p	1		vehicle
	m	()Lbkl$a;	s	createAttributes
c	bze	net/minecraft/world/entity/monster/Guardian
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(F)F	E	getTailAnimation
		p	1		tickDelta
	m	(F)F	F	getSpikesAnimation
		p	1		tickDelta
	m	(F)F	G	getAttackAnimationScale
		p	1		tickDelta
	m	()I	O	getAmbientSoundInterval
	m	()I	Y	getMaxHeadXRot
	m	(Laee;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Lbho;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbiq;Lbir;F)Lorg/joml/Vector3f;	a	getPassengerAttachmentPoint
		p	1		passenger
		p	2		dimensions
		p	3		scaleFactor
	m	(Lcpy;)Z	a	checkSpawnObstruction
		p	1		world
	m	(Lgw;Lcpy;)F	a	getWalkTargetValue
		p	1		pos
		p	2		world
	m	()Lbiq$b;	aU	getMovementEmission
	m	()V	a_	defineSynchedData
	m	(I)V	b	setActiveAttackTarget
		p	1		entityId
	m	(Lbiu;Lcpw;Lbjk;Lgw;Lasc;)Z	b	checkGuardianSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	(Lbjs;Lbir;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lcpv;)Lbsp;	b	createNavigation
		p	1		world
	m	()V	b_	aiStep
	m	(Lbho;)Lapc;	d	getHurtSound
		p	1		source
	m	()Z	dQ	canBreatheUnderwater
	m	()Lbjl;	eR	getMobType
	m	()Lbkl$a;	gd	createAttributes
	m	()Z	ge	isMoving
	m	()Z	gf	hasActiveAttackTarget
	m	()Lbjg;	gg	getActiveAttackTarget
	m	()F	gh	getClientSideAttackTime
	m	(Lehn;)V	h	travel
		p	1		movementInput
	m	()Lapc;	l_	getDeathSound
	m	()I	t	getAttackDuration
	m	()Lapc;	w	getAmbientSound
	m	(Z)V	w	setMoving
		p	1		retracted
	m	()Lapc;	y	getFlopSound
	m	()V	z	registerGoals
	f	Laee;	b	DATA_ID_MOVING
	f	F	bT	clientSideTailAnimation
	f	F	bU	clientSideTailAnimationO
	f	F	bV	clientSideTailAnimationSpeed
	f	F	bW	clientSideSpikesAnimation
	f	F	bX	clientSideSpikesAnimationO
	f	Lbjg;	bY	clientSideCachedAttackTarget
	f	I	bZ	clientSideAttackTime
	f	I	c	ATTACK_TIME
	f	Z	ca	clientSideTouchedGround
	f	Lbqy;	d	randomStrollGoal
	f	Laee;	e	DATA_ID_ATTACK_TARGET
c	bze$a	net/minecraft/world/entity/monster/Guardian$GuardianAttackGoal
	m	(Lbze;)V	<init>	<init>
		p	1		guardian
	m	()Z	Q_	requiresUpdateEveryTick
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lbze;	a	guardian
	f	I	b	attackTime
	f	Z	c	elder
c	bze$b	net/minecraft/world/entity/monster/Guardian$GuardianAttackSelector
	m	(Lbze;)V	<init>	<init>
		p	1		owner
	m	(Lbjg;)Z	a	test
	f	Lbze;	a	guardian
c	bze$c	net/minecraft/world/entity/monster/Guardian$GuardianMoveControl
	m	(Lbze;)V	<init>	<init>
		p	1		guardian
	m	()V	a	tick
	f	Lbze;	l	guardian
c	bzf	net/minecraft/world/entity/monster/Husk
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lbiq;)Z	C	doHurtTarget
		p	1		target
	m	(Lbiq;Lbir;F)Lorg/joml/Vector3f;	a	getPassengerAttachmentPoint
		p	1		passenger
		p	2		dimensions
		p	3		scaleFactor
	m	(Lbiu;Lcqk;Lbjk;Lgw;Lasc;)Z	a	checkHuskSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	()Z	ab_	isSunSensitive
	m	(Lbho;)Lapc;	d	getHurtSound
		p	1		source
	m	()Lcjf;	gd	getSkull
	m	()Z	ge	convertsInWater
	m	()V	gg	doUnderWaterConversion
	m	()Lapc;	l_	getDeathSound
	m	()Lapc;	w	getAmbientSound
	m	()Lapc;	y	getStepSound
c	bzg	net/minecraft/world/entity/monster/Illusioner
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(F)[Lehn;	E	getIllusionOffsets
		p	1		tickDelta
	m	(IZ)V	a	applyRaidBuffs
		p	1		wave
		p	2		unused
	m	(Lbjg;F)V	a	performRangedAttack
		p	1		target
		p	2		pullProgress
	m	(Lcqk;Lbgw;Lbjk;Lbjz;Lqw;)Lbjz;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	()V	a_	defineSynchedData
	m	()Lapc;	ac_	getCelebrateSound
	m	()V	b_	aiStep
	m	(Lbho;)Lapc;	d	getHurtSound
		p	1		source
	m	()Lehi;	g_	getBoundingBoxForCulling
	m	()Lapc;	gd	getCastingSoundEvent
	m	()Lapc;	l_	getDeathSound
	m	()Lbyq$a;	s	getArmPose
	m	(Lbiq;)Z	s	isAlliedTo
		p	1		other
	m	()Lbkl$a;	t	createAttributes
	m	()Lapc;	w	getAmbientSound
	m	()V	z	registerGoals
	f	I	bT	ILLUSION_TRANSITION_TICKS
	f	I	bU	ILLUSION_SPREAD
	f	I	bV	clientSideIllusionTicks
	f	[[Lehn;	bW	clientSideIllusionOffsets
	f	I	e	NUM_ILLUSIONS
c	bzg$a	net/minecraft/world/entity/monster/Illusioner$IllusionerBlindnessSpellGoal
	m	()Z	a	canUse
	m	()V	c	start
	m	()I	h	getCastingTime
	m	()I	i	getCastingInterval
	m	()V	k	performSpellCasting
	m	()Lapc;	l	getSpellPrepareSound
	m	()Lbzs$a;	m	getSpell
	f	Lbzg;	a	this$0
	f	I	e	lastTargetId
c	bzg$b	net/minecraft/world/entity/monster/Illusioner$IllusionerMirrorSpellGoal
	m	()Z	a	canUse
	m	()I	h	getCastingTime
	m	()I	i	getCastingInterval
	m	()V	k	performSpellCasting
	m	()Lapc;	l	getSpellPrepareSound
	m	()Lbzs$a;	m	getSpell
	f	Lbzg;	a	this$0
c	bzh	net/minecraft/world/entity/monster/MagmaCube
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(IZ)V	a	setSize
		p	1		size
		p	2		heal
	m	(Lcpy;)Z	a	checkSpawnObstruction
		p	1		world
	m	(Lbiu;Lcpw;Lbjk;Lgw;Lasc;)Z	b	checkMagmaCubeSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	()Z	bM	isOnFire
	m	()F	bm	getLightLevelDependentMagicValue
	m	(Laqh;)V	c	jumpInLiquid
		p	1		fluid
	m	(Lbho;)Lapc;	d	getHurtSound
		p	1		source
	m	()V	fZ	decreaseSquish
	m	()V	fa	jumpFromGround
	m	()Z	ga	isDealsDamage
	m	()F	gb	getAttackDamage
	m	()Lapc;	gc	getSquishSound
	m	()Lapc;	gd	getJumpSound
	m	()Lapc;	l_	getDeathSound
	m	()Lbkl$a;	s	createAttributes
	m	()Lit;	t	getParticleType
	m	()I	y	getJumpDelay
c	bzi	net/minecraft/world/entity/monster/Monster
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()Z	V	shouldDespawnInPeaceful
	m	(Lcqk;Lgw;Lasc;)Z	a	isDarkEnoughToSpawn
		p	0		world
		p	1		pos
		p	2		random
	m	(Lgw;Lcpy;)F	a	getWalkTargetValue
		p	1		pos
		p	2		world
	m	()Lapc;	aL	getSwimSound
	m	()Lapc;	aM	getSwimSplashSound
	m	(Lbiu;Lcqk;Lbjk;Lgw;Lasc;)Z	b	checkMonsterSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	()V	b_	aiStep
	m	(Lbiu;Lcpw;Lbjk;Lgw;Lasc;)Z	c	checkAnyLightMonsterSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	(Lbho;)Lapc;	d	getHurtSound
		p	1		source
	m	()Lape;	da	getSoundSource
	m	()Lbjg$a;	eF	getFallSounds
	m	()Z	eb	shouldDropExperience
	m	()Z	ec	shouldDropLoot
	m	(Lcbu;)Z	f	isPreventingPlayerRest
		p	1		player
	m	(Lcjf;)Lcjf;	g	getProjectile
		p	1		stack
	m	()V	gi	updateNoActionTime
	m	()Lbkl$a;	gj	createMonsterAttributes
	m	()Lapc;	l_	getDeathSound
c	bzj	net/minecraft/world/entity/monster/PatrollingMonster
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcqk;Lbgw;Lbjk;Lbjz;Lqw;)Lbjz;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lbiu;Lcpw;Lbjk;Lgw;Lasc;)Z	b	checkPatrollingMonsterSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Z	ge	canBeLeader
	m	()Lgw;	gf	getPatrolTarget
	m	()Z	gg	hasPatrolTarget
	m	()Z	gh	isPatrolLeader
	m	()Z	gk	canJoinPatrol
	m	()V	gl	findPatrolTarget
	m	()Z	gm	isPatrolling
	m	(D)Z	h	removeWhenFarAway
		p	1		distanceSquared
	m	(Lgw;)V	i	setPatrolTarget
		p	1		targetPos
	m	(Z)V	w	setPatrolLeader
		p	1		patrolLeader
	m	(Z)V	x	setPatrolling
		p	1		patrolling
	m	()V	z	registerGoals
	f	Lgw;	b	patrolTarget
	f	Z	c	patrolLeader
	f	Z	d	patrolling
c	bzj$a	net/minecraft/world/entity/monster/PatrollingMonster$LongDistancePatrolGoal
	m	(Lbzj;DD)V	<init>	<init>
		p	1		entity
		p	2		leaderSpeed
		p	4		followSpeed
	m	()Z	a	canUse
	m	(Lbzj;)Z	a	lambda$findPatrolCompanions$0
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	m	()Ljava/util/List;	h	findPatrolCompanions
	m	()Z	i	moveRandomly
	f	I	a	NAVIGATION_FAILED_COOLDOWN
	f	Lbzj;	b	mob
	f	D	c	speedModifier
	f	D	d	leaderSpeedModifier
	f	J	e	cooldownUntil
c	bzk	net/minecraft/world/entity/monster/Phantom
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()Lboz;	F	createBodyControl
	m	()Z	V	shouldDespawnInPeaceful
	m	()V	X	customServerAiStep
	m	(D)Z	a	shouldRenderAtSqrDistance
		p	1		distance
	m	(Laee;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Lbiq;Lbir;F)Lorg/joml/Vector3f;	a	getPassengerAttachmentPoint
		p	1		passenger
		p	2		dimensions
		p	3		scaleFactor
	m	(Lbiu;)Z	a	canAttackType
		p	1		type
	m	(Lbjs;)Lbir;	a	getDimensions
		p	1		pose
	m	(Lbzk;)Lasc;	a	access$000
	m	(Lcqk;Lbgw;Lbjk;Lbjz;Lqw;)Lbjz;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()Z	aR	isFlapping
	m	()V	a_	defineSynchedData
	m	(I)V	b	setPhantomSize
		p	1		size
	m	(Lbjs;Lbir;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lbzk;)Lasc;	b	access$100
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()V	b_	aiStep
	m	(Lbzk;)Lasc;	c	access$200
	m	(Lbho;)Lapc;	d	getHurtSound
		p	1		source
	m	(Lbzk;)Lasc;	d	access$300
	m	()Lape;	da	getSoundSource
	m	(Lbzk;)Lasc;	e	access$400
	m	()Lbjl;	eR	getMobType
	m	()F	eV	getSoundVolume
	m	(Lbzk;)Lasc;	f	access$500
	m	(Lbzk;)Lasc;	g	access$600
	m	(Lbzk;)Lasc;	h	access$700
	m	(Lbzk;)Lasc;	i	access$800
	m	(Lbzk;)Lasc;	j	access$900
	m	(Lbzk;)Lasc;	k	access$1000
	m	()V	l	tick
	m	(Lbiq;)F	l	ridingOffset
		p	1		vehicle
	m	(Lbzk;)Lasc;	l	access$1100
	m	()Lapc;	l_	getDeathSound
	m	()I	s	getPhantomSize
	m	()I	t	getUniqueFlapTickOffset
	m	()Lapc;	w	getAmbientSound
	m	()V	y	updatePhantomSizeInfo
	m	()V	z	registerGoals
	f	F	b	FLAP_DEGREES_PER_TICK
	f	Lgw;	bS	anchorPoint
	f	Lbzk$a;	bT	attackPhase
	f	I	c	TICKS_PER_FLAP
	f	Laee;	d	ID_SIZE
	f	Lehn;	e	moveTargetPoint
c	bzk$a	net/minecraft/world/entity/monster/Phantom$AttackPhase
	m	()[Lbzk$a;	a	$values
	f	Lbzk$a;	a	CIRCLE
	f	Lbzk$a;	b	SWOOP
	f	[Lbzk$a;	c	$VALUES
c	bzk$b	net/minecraft/world/entity/monster/Phantom$PhantomAttackPlayerTargetGoal
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	f	Lbzk;	a	this$0
	f	Lbts;	b	attackTargeting
	f	I	c	nextScanTick
c	bzk$c	net/minecraft/world/entity/monster/Phantom$PhantomAttackStrategyGoal
	m	()Z	a	canUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	m	()V	h	setAnchorAboveTarget
	f	Lbzk;	a	this$0
	f	I	b	nextSweepTick
c	bzk$d	net/minecraft/world/entity/monster/Phantom$PhantomBodyRotationControl
	m	(Lbzk;Lbji;)V	<init>	<init>
		p	2		entity
	m	()V	a	clientTick
	f	Lbzk;	a	this$0
c	bzk$e	net/minecraft/world/entity/monster/Phantom$PhantomCircleAroundAnchorGoal
	m	()Z	a	canUse
	m	()V	c	start
	m	()V	e	tick
	m	()V	i	selectNext
	f	Lbzk;	a	this$0
	f	F	c	angle
	f	F	d	distance
	f	F	e	height
	f	F	f	clockwise
c	bzk$f	net/minecraft/world/entity/monster/Phantom$PhantomLookControl
	m	(Lbzk;Lbji;)V	<init>	<init>
		p	2		entity
	m	()V	a	tick
	f	Lbzk;	h	this$0
c	bzk$g	net/minecraft/world/entity/monster/Phantom$PhantomMoveControl
	m	(Lbzk;Lbji;)V	<init>	<init>
		p	2		owner
	m	()V	a	tick
	f	Lbzk;	l	this$0
	f	F	m	speed
c	bzk$h	net/minecraft/world/entity/monster/Phantom$PhantomMoveTargetGoal
	m	()Z	h	touchingTarget
	f	Lbzk;	b	this$0
c	bzk$i	net/minecraft/world/entity/monster/Phantom$PhantomSweepAttackGoal
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lbzk;	a	this$0
	f	I	c	CAT_SEARCH_TICK_DELAY
	f	Z	d	isScaredOfCat
	f	I	e	catSearchTick
c	bzl	net/minecraft/world/entity/monster/Pillager
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	a	onCrossbowAttackPerformed
	m	(IZ)V	a	applyRaidBuffs
		p	1		wave
		p	2		unused
	m	(Lasc;F)V	a	enchantSpawnedWeapon
		p	1		random
		p	2		power
	m	(Lasc;Lbgw;)V	a	populateDefaultEquipmentSlots
		p	1		random
		p	2		localDifficulty
	m	(Lbjg;F)V	a	performRangedAttack
		p	1		target
		p	2		pullProgress
	m	(Lbjg;Lcjf;Lccm;F)V	a	shootCrossbowProjectile
		p	1		target
		p	2		crossbow
		p	3		projectile
		p	4		multiShotSpray
	m	(Lcjv;)Z	a	canFireProjectileWeapon
		p	1		weapon
	m	(Lcqk;Lbgw;Lbjk;Lbjz;Lqw;)Lbjz;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lgw;Lcpy;)F	a	getWalkTargetValue
		p	1		pos
		p	2		world
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(I)Lbjy;	a_	getSlot
		p	1		mappedIndex
	m	()Lapc;	ac_	getCelebrateSound
	m	(Lbyn;)V	b	pickUpItem
		p	1		item
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Z)V	b	setChargingCrossbow
		p	1		charging
	m	(Lbho;)Lapc;	d	getHurtSound
		p	1		source
	m	()I	fH	getMaxSpawnClusterSize
	m	()Z	gd	isChargingCrossbow
	m	(Lcjf;)Z	l	wantsItem
		p	1		stack
	m	()Lapc;	l_	getDeathSound
	m	()Lbyq$a;	s	getArmPose
	m	(Lbiq;)Z	s	isAlliedTo
		p	1		other
	m	()Lbkl$a;	t	createAttributes
	m	()Lapc;	w	getAmbientSound
	m	()Lbhf;	y	getInventory
	m	()V	z	registerGoals
	f	Laee;	b	IS_CHARGING_CROSSBOW
	f	I	bT	SLOT_OFFSET
	f	F	bU	CROSSBOW_POWER
	f	Lbhf;	bV	inventory
	f	I	e	INVENTORY_SIZE
c	bzm	net/minecraft/world/entity/monster/RangedAttackMob
	m	(Lbjg;F)V	a	performRangedAttack
		p	1		target
		p	2		pullProgress
c	bzn	net/minecraft/world/entity/monster/Ravager
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lbiq;)Z	C	doHurtTarget
		p	1		target
	m	(Lbiq;)Z	E	hasLineOfSight
		p	1		entity
	m	()V	R	updateControlFlags
	m	()I	Z	getMaxHeadYRot
	m	(IZ)V	a	applyRaidBuffs
		p	1		wave
		p	2		unused
	m	(Lbiq;)V	a	strongKnockback
		p	1		entity
	m	(Lbiq;Lbir;F)Lorg/joml/Vector3f;	a	getPassengerAttachmentPoint
		p	1		passenger
		p	2		dimensions
		p	3		scaleFactor
	m	(Lcpy;)Z	a	checkSpawnObstruction
		p	1		world
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()Lapc;	ac_	getCelebrateSound
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	(Lbiq;)Z	b	lambda$static$0
		p	0		entity
	m	(Lgw;Ldfj;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()V	b_	aiStep
	m	(Lbho;)Lapc;	d	getHurtSound
		p	1		source
	m	(Lbjg;)V	e	blockedByShield
		p	1		target
	m	()Z	eX	isImmobile
	m	()Lehi;	fW	getAttackBoundingBox
	m	()I	gd	getStunnedTick
	m	()Z	ge	canBeLeader
	m	()I	gn	getRoarTick
	m	()V	go	stunEffect
	m	()V	gp	roar
	m	(Lbjg;)Z	j	lambda$registerGoals$1
		p	0		entity
	m	()Lapc;	l_	getDeathSound
	m	()Lbkl$a;	s	createAttributes
	m	()I	t	getAttackTick
	m	()Lapc;	w	getAmbientSound
	m	()V	z	registerGoals
	f	I	b	STUN_DURATION
	f	D	bT	BASE_MOVEMENT_SPEED
	f	D	bU	ATTACK_MOVEMENT_SPEED
	f	I	bV	STUNNED_COLOR
	f	D	bW	STUNNED_COLOR_BLUE
	f	D	bX	STUNNED_COLOR_GREEN
	f	D	bY	STUNNED_COLOR_RED
	f	I	bZ	ATTACK_DURATION
	f	I	ca	attackTick
	f	I	cb	stunnedTick
	f	I	cc	roarTick
	f	Ljava/util/function/Predicate;	e	NO_RAVAGER_AND_ALIVE
c	bzo	net/minecraft/world/entity/monster/Shulker
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(F)F	E	getClientPeekAmount
		p	1		delta
	m	()Lboz;	F	createBodyControl
	m	(F)Ljava/util/Optional;	F	getRenderPosition
		p	1		tickDelta
	m	(F)F	G	getPhysicalPeek
		p	0		openProgress
	m	()V	P	playAmbientSound
	m	()I	Y	getMaxHeadXRot
	m	()I	Z	getMaxHeadYRot
	m	(DDDFFI)V	a	lerpTo
		p	1		x
		p	3		y
		p	5		z
		p	7		yaw
		p	8		pitch
		p	9		interpolationSteps
	m	(Laee;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Lbho;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbiq;)Z	a	lambda$onPeekAmountChange$1
	m	(Lbiq;Z)Z	a	startRiding
		p	1		entity
		p	2		force
	m	(Lbjm;Lehn;)V	a	move
		p	1		movementType
		p	2		movement
	m	(Lbzo;)Lasc;	a	access$000
	m	(Lcht;)Ljava/lang/Byte;	a	lambda$setVariant$2
		p	0		color
	m	(Lcqk;Lbgw;Lbjk;Lbjz;Lqw;)Lbjz;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lgw;Lha;)Z	a	canStayAt
		p	1		pos
		p	2		direction
	m	(Lha;)V	a	setAttachFace
		p	1		face
	m	(Lha;F)Lehi;	a	getProgressAabb
		p	0		direction
		p	1		extraLength
	m	(Lha;FF)Lehi;	a	getProgressDeltaAabb
		p	0		direction
		p	1		prevExtraLength
		p	2		extraLength
	m	(Ljava/lang/Object;)V	a	setVariant
		p	1		variant
	m	(Ljava/util/Optional;)V	a	setVariant
		p	1		variant
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lwx;)V	a	recreateFromPacket
		p	1		packet
	m	()Lbiq$b;	aU	getMovementEmission
	m	()V	a_	defineSynchedData
	m	()V	aa	stopRiding
	m	()Lehi;	ao	makeBoundingBox
	m	(I)V	b	setRawPeekAmount
		p	1		peekAmount
	m	(Lbjs;Lbir;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lbzo;)Lasc;	b	access$100
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()F	bD	getPickRadius
	m	()Z	bx	canBeCollidedWith
	m	()Ljava/lang/Object;	c	getVariant
	m	(Lbzo;)Lasc;	c	access$200
	m	(Lbho;)Lapc;	d	getHurtSound
		p	1		source
	m	(Lbzo;)Lasc;	d	access$300
	m	()Lape;	da	getSoundSource
	m	()Lehn;	do	getDeltaMovement
	m	(DDD)V	e	setPos
		p	1		x
		p	3		y
		p	5		z
	m	(Lbzo;)Lasc;	e	access$400
	m	(Lehn;)V	f	setDeltaMovement
		p	1		velocity
	m	(Lbiq;)V	g	push
		p	1		entity
	m	()Ljava/util/Optional;	gd	getVariant
	m	()Lcht;	ge	getColor
	m	()V	gf	findNewAttachment
	m	()Z	gg	updatePeekAmount
	m	()V	gh	onPeekAmountChange
	m	()Z	gi	isClosed
	m	()V	gj	hitByShulkerBullet
	m	()I	gk	getRawPeekAmount
	m	()Lorg/joml/Vector3f;	gl	lambda$static$0
	m	(Lgw;)Lha;	i	findAttachableSurface
		p	1		pos
	m	(Lgw;)Z	j	isPositionBlocked
		p	1		pos
	m	()V	l	tick
	m	()Lapc;	l_	getDeathSound
	m	()Lbkl$a;	s	createAttributes
	m	()Z	t	teleportSomewhere
	m	()Lapc;	w	getAmbientSound
	m	()Lha;	y	getAttachFace
	m	()V	z	registerGoals
	f	Laee;	b	DATA_ATTACH_FACE_ID
	f	Lbkk;	bT	COVERED_ARMOR_MODIFIER
	f	I	bU	TELEPORT_STEPS
	f	B	bV	NO_COLOR
	f	B	bW	DEFAULT_COLOR
	f	I	bX	MAX_TELEPORT_DISTANCE
	f	I	bY	OTHER_SHULKER_SCAN_RADIUS
	f	I	bZ	OTHER_SHULKER_LIMIT
	f	Laee;	c	DATA_PEEK_ID
	f	F	ca	PEEK_PER_TICK
	f	Lorg/joml/Vector3f;	cb	FORWARD
	f	F	cc	currentPeekAmountO
	f	F	cd	currentPeekAmount
	f	Lgw;	ce	clientOldAttachPosition
	f	I	cf	clientSideTeleportInterpolation
	f	F	cg	MAX_LID_OPEN
	f	Laee;	d	DATA_COLOR_ID
	f	Ljava/util/UUID;	e	COVERED_ARMOR_MODIFIER_UUID
c	bzo$a	net/minecraft/world/entity/monster/Shulker$ShulkerAttackGoal
	m	()Z	Q_	requiresUpdateEveryTick
	m	()Z	a	canUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lbzo;	a	this$0
	f	I	b	attackTime
c	bzo$b	net/minecraft/world/entity/monster/Shulker$ShulkerBodyRotationControl
	m	(Lbji;)V	<init>	<init>
		p	1		entity
	m	()V	a	clientTick
c	bzo$c	net/minecraft/world/entity/monster/Shulker$ShulkerDefenseAttackGoal
	m	(Lbzo;)V	<init>	<init>
		p	1		shulker
	m	()Z	a	canUse
	m	(D)Lehi;	a	getTargetSearchArea
		p	1		distance
	m	(Lbjg;)Z	b	lambda$new$0
		p	0		entity
c	bzo$d	net/minecraft/world/entity/monster/Shulker$ShulkerLookControl
	m	(Lbzo;Lbji;)V	<init>	<init>
		p	2		entity
	m	()V	b	clampHeadRotationToBody
	m	()Ljava/util/Optional;	h	getXRotD
	m	()Ljava/util/Optional;	i	getYRotD
	f	Lbzo;	h	this$0
c	bzo$e	net/minecraft/world/entity/monster/Shulker$ShulkerNearestAttackGoal
	m	(Lbzo;Lbzo;)V	<init>	<init>
		p	2		shulker
	m	()Z	a	canUse
	m	(D)Lehi;	a	getTargetSearchArea
		p	1		distance
	f	Lbzo;	i	this$0
c	bzo$f	net/minecraft/world/entity/monster/Shulker$ShulkerPeekGoal
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lbzo;	a	this$0
	f	I	b	peekTime
c	bzp	net/minecraft/world/entity/monster/Silverfish
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lbho;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbiq;Lbir;F)Lorg/joml/Vector3f;	a	getPassengerAttachmentPoint
		p	1		passenger
		p	2		dimensions
		p	3		scaleFactor
	m	(Lgw;Lcpy;)F	a	getWalkTargetValue
		p	1		pos
		p	2		world
	m	()Lbiq$b;	aU	getMovementEmission
	m	(Lbiu;Lcpw;Lbjk;Lgw;Lasc;)Z	b	checkSilverfishSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	(Lbjs;Lbir;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lgw;Ldfj;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lbho;)Lapc;	d	getHurtSound
		p	1		source
	m	()Lbjl;	eR	getMobType
	m	()V	l	tick
	m	()Lapc;	l_	getDeathSound
	m	(F)V	o	setYBodyRot
		p	1		bodyYaw
	m	()Lbkl$a;	s	createAttributes
	m	()Lapc;	w	getAmbientSound
	m	()V	z	registerGoals
	f	Lbzp$b;	b	friendsGoal
c	bzp$a	net/minecraft/world/entity/monster/Silverfish$SilverfishMergeWithStoneGoal
	m	(Lbzp;)V	<init>	<init>
		p	1		silverfish
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	f	Lha;	i	selectedDirection
	f	Z	j	doMerge
c	bzp$b	net/minecraft/world/entity/monster/Silverfish$SilverfishWakeUpFriendsGoal
	m	(Lbzp;)V	<init>	<init>
		p	1		silverfish
	m	()Z	a	canUse
	m	()V	e	tick
	m	()V	h	notifyHurt
	f	Lbzp;	a	silverfish
	f	I	b	lookForFriends
c	bzq	net/minecraft/world/entity/monster/Skeleton
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lbho;IZ)V	a	dropCustomDeathLoot
		p	1		source
		p	2		lootingMultiplier
		p	3		allowDrops
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(I)V	b	startFreezeConversion
		p	1		time
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lbho;)Lapc;	d	getHurtSound
		p	1		source
	m	()Z	dz	canFreeze
	m	()Z	gd	isShaking
	m	()Z	ge	isFreezeConverting
	m	()V	gf	doFreezeConversion
	m	()V	l	tick
	m	()Lapc;	l_	getDeathSound
	m	()Lapc;	t	getStepSound
	m	()Lapc;	w	getAmbientSound
	m	(Z)V	w	setFreezeConverting
		p	1		converting
	f	Ljava/lang/String;	b	CONVERSION_TAG
	f	I	bT	conversionTime
	f	I	c	TOTAL_CONVERSION_TIME
	f	Laee;	d	DATA_STRAY_CONVERSION_ID
	f	I	e	inPowderSnowTime
c	bzr	net/minecraft/world/entity/monster/Slime
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()Z	V	shouldDespawnInPeaceful
	m	()I	Y	getMaxHeadXRot
	m	(IZ)V	a	setSize
		p	1		size
		p	2		heal
	m	(Laee;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Lbiq$c;)V	a	remove
		p	1		reason
	m	(Lbiq;Lbir;F)Lorg/joml/Vector3f;	a	getPassengerAttachmentPoint
		p	1		passenger
		p	2		dimensions
		p	3		scaleFactor
	m	(Lbjs;)Lbir;	a	getDimensions
		p	1		pose
	m	(Lcqk;Lbgw;Lbjk;Lbjz;Lqw;)Lbjz;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	()Lbiu;	ag	getType
	m	(Lbjs;Lbir;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lcbu;)V	b_	playerTouch
		p	1		player
	m	(Lbiu;Lcpw;Lbjk;Lgw;Lasc;)Z	c	checkSlimeSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	(Lbho;)Lapc;	d	getHurtSound
		p	1		source
	m	()Lape;	da	getSoundSource
	m	()F	eV	getSoundVolume
	m	()V	fZ	decreaseSquish
	m	()V	fa	jumpFromGround
	m	(Lbiq;)V	g	push
		p	1		entity
	m	()Z	ga	isDealsDamage
	m	()F	gb	getAttackDamage
	m	()Lapc;	gc	getSquishSound
	m	()Lapc;	gd	getJumpSound
	m	()I	ge	getSize
	m	()Z	gf	isTiny
	m	()Z	gg	doPlayJumpSound
	m	()V	i_	refreshDimensions
	m	(Lbjg;)V	j	dealDamage
		p	1		target
	m	(Lbjg;)Z	k	lambda$registerGoals$0
	m	()V	l	tick
	m	()Lapc;	l_	getDeathSound
	m	()F	s	getSoundPitch
	m	()Lit;	t	getParticleType
	m	()I	y	getJumpDelay
	m	()V	z	registerGoals
	f	I	b	MIN_SIZE
	f	F	bS	oSquish
	f	Laee;	bT	ID_SIZE
	f	Z	bU	wasOnGround
	f	I	c	MAX_SIZE
	f	F	d	targetSquish
	f	F	e	squish
c	bzr$a	net/minecraft/world/entity/monster/Slime$SlimeAttackGoal
	m	(Lbzr;)V	<init>	<init>
		p	1		slime
	m	()Z	Q_	requiresUpdateEveryTick
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	e	tick
	f	Lbzr;	a	slime
	f	I	b	growTiredTimer
c	bzr$b	net/minecraft/world/entity/monster/Slime$SlimeFloatGoal
	m	(Lbzr;)V	<init>	<init>
		p	1		slime
	m	()Z	Q_	requiresUpdateEveryTick
	m	()Z	a	canUse
	m	()V	e	tick
	f	Lbzr;	a	slime
c	bzr$c	net/minecraft/world/entity/monster/Slime$SlimeKeepOnJumpingGoal
	m	(Lbzr;)V	<init>	<init>
		p	1		slime
	m	()Z	a	canUse
	m	()V	e	tick
	f	Lbzr;	a	slime
c	bzr$d	net/minecraft/world/entity/monster/Slime$SlimeMoveControl
	m	(Lbzr;)V	<init>	<init>
		p	1		slime
	m	()V	a	tick
	m	(D)V	a	setWantedMovement
		p	1		speed
	m	(FZ)V	a	setDirection
		p	1		targetYaw
		p	2		jumpOften
	f	F	l	yRot
	f	I	m	jumpDelay
	f	Lbzr;	n	slime
	f	Z	o	isAggressive
c	bzr$e	net/minecraft/world/entity/monster/Slime$SlimeRandomDirectionGoal
	m	(Lbzr;)V	<init>	<init>
		p	1		slime
	m	()Z	a	canUse
	m	()V	e	tick
	f	Lbzr;	a	slime
	f	F	b	chosenDegrees
	f	I	c	nextRandomizeTime
c	bzs	net/minecraft/world/entity/monster/SpellcasterIllager
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	X	customServerAiStep
	m	(Lbzs$a;)V	a	setIsCastingSpell
		p	1		spell
	m	(Lbzs;)Lbsp;	a	access$000
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Lapc;	gd	getCastingSoundEvent
	m	()Z	gn	isCastingSpell
	m	()Lbzs$a;	go	getCurrentSpell
	m	()I	gp	getSpellCastingTime
	m	()V	l	tick
	m	()Lbyq$a;	s	getArmPose
	f	I	b	spellCastingTickCount
	f	Lbzs$a;	bT	currentSpell
	f	Laee;	e	DATA_SPELL_CASTING_ID
c	bzs$a	net/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell
	m	(Ljava/lang/String;IIDDD)V	<init>	<init>
		p	3		id
		p	4		particleVelocityX
		p	6		particleVelocityY
		p	8		particleVelocityZ
	m	()[Lbzs$a;	a	$values
	m	(I)Lbzs$a;	a	byId
		p	0		id
	m	(Lbzs$a;)I	a	lambda$static$0
		p	0		spell
	f	Lbzs$a;	a	NONE
	f	Lbzs$a;	b	SUMMON_VEX
	f	Lbzs$a;	c	FANGS
	f	Lbzs$a;	d	WOLOLO
	f	Lbzs$a;	e	DISAPPEAR
	f	Lbzs$a;	f	BLINDNESS
	f	Ljava/util/function/IntFunction;	g	BY_ID
	f	I	h	id
	f	[D	i	spellColor
	f	[Lbzs$a;	j	$VALUES
c	bzs$b	net/minecraft/world/entity/monster/SpellcasterIllager$SpellcasterCastingSpellGoal
	m	()Z	a	canUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lbzs;	b	this$0
c	bzs$c	net/minecraft/world/entity/monster/SpellcasterIllager$SpellcasterUseSpellGoal
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	e	tick
	m	()I	h	getCastingTime
	m	()I	i	getCastingInterval
	m	()V	k	performSpellCasting
	m	()Lapc;	l	getSpellPrepareSound
	m	()Lbzs$a;	m	getSpell
	m	()I	n	getCastWarmupTime
	f	I	b	attackWarmupDelay
	f	I	c	nextAttackTickCount
	f	Lbzs;	d	this$0
c	bzt	net/minecraft/world/entity/monster/Spider
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lbiq;Lbir;F)Lorg/joml/Vector3f;	a	getPassengerAttachmentPoint
		p	1		passenger
		p	2		dimensions
		p	3		scaleFactor
	m	(Lcqk;Lbgw;Lbjk;Lbjz;Lqw;)Lbjz;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Ldfj;Lehn;)V	a	makeStuckInBlock
		p	1		state
		p	2		multiplier
	m	()V	a_	defineSynchedData
	m	(Lbjs;Lbir;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lcpv;)Lbsp;	b	createNavigation
		p	1		world
	m	(Lgw;Ldfj;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lbid;)Z	c	canBeAffected
		p	1		effect
	m	()Z	c_	onClimbable
	m	(Lbho;)Lapc;	d	getHurtSound
		p	1		source
	m	()Lbjl;	eR	getMobType
	m	()V	l	tick
	m	(Lbiq;)F	l	ridingOffset
		p	1		vehicle
	m	()Lapc;	l_	getDeathSound
	m	()Lbkl$a;	t	createAttributes
	m	()Lapc;	w	getAmbientSound
	m	(Z)V	w	setClimbing
		p	1		climbing
	m	()Z	y	isClimbing
	m	()V	z	registerGoals
	f	Laee;	b	DATA_FLAGS_ID
	f	F	c	SPIDER_SPECIAL_EFFECT_CHANCE
c	bzt$a	net/minecraft/world/entity/monster/Spider$SpiderAttackGoal
	m	(Lbzt;)V	<init>	<init>
		p	1		spider
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
c	bzt$b	net/minecraft/world/entity/monster/Spider$SpiderEffectsGroupData
	m	(Lasc;)V	a	setRandomEffect
		p	1		random
	f	Lbib;	a	effect
c	bzt$c	net/minecraft/world/entity/monster/Spider$SpiderTargetGoal
	m	(Lbzt;Ljava/lang/Class;)V	<init>	<init>
		p	1		spider
		p	2		targetEntityClass
	m	()Z	a	canUse
c	bzu	net/minecraft/world/entity/monster/Stray
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lbiu;Lcqk;Lbjk;Lgw;Lasc;)Z	a	checkStraySpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	(Lcjf;F)Lcca;	b	getArrow
		p	1		arrow
		p	2		damageModifier
	m	(Lbho;)Lapc;	d	getHurtSound
		p	1		source
	m	()Lapc;	l_	getDeathSound
	m	()Lapc;	t	getStepSound
	m	()Lapc;	w	getAmbientSound
c	bzv	net/minecraft/world/entity/monster/Strider
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()Z	B	shouldPassengersInheritMalus
	m	()Z	a	boost
	m	(DZLdfj;Lgw;)V	a	checkFallDamage
		p	1		heightDifference
		p	3		onGround
		p	4		state
		p	5		landedPosition
	m	(Laee;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Lakq;Lbil;)Lbil;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lape;)V	a	equipSaddle
		p	1		sound
	m	(Lbiq;Lbir;F)Lorg/joml/Vector3f;	a	getPassengerAttachmentPoint
		p	1		passenger
		p	2		dimensions
		p	3		scaleFactor
	m	(Lcbu;Lehn;)V	a	tickRidden
		p	1		controllingPlayer
		p	2		movementInput
	m	(Lcpy;)Z	a	checkSpawnObstruction
		p	1		world
	m	(Lcqk;Lbgw;Lbji;Lbjz;)Lbjz;	a	spawnJockey
		p	1		world
		p	2		difficulty
		p	3		rider
		p	4		entityData
	m	(Lcqk;Lbgw;Lbjk;Lbjz;Lqw;)Lbjz;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Leam;)Z	a	canStandOnFluid
		p	1		state
	m	(Lgw;Lcpy;)F	a	getWalkTargetValue
		p	1		pos
		p	2		world
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()F	aK	nextStep
	m	()V	a_	defineSynchedData
	m	(Lakq;Lbil;)Lbzv;	b	getBreedOffspring
	m	(Lbjg;)Lehn;	b	getDismountLocationForPassenger
		p	1		passenger
	m	(Lcbu;Lbgx;)Lbgy;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lcbu;Lehn;)Lehn;	b	getRiddenInput
		p	1		controllingPlayer
		p	2		movementInput
	m	(Lcpv;)Lbsp;	b	createNavigation
		p	1		world
	m	(Lgw;Ldfj;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Z	bM	isOnFire
	m	(Lbiu;Lcpw;Lbjk;Lgw;Lasc;)Z	c	checkStriderSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	()Lehn;	cI	getLeashOffset
	m	()Lbjg;	cN	getControllingPassenger
	m	(Lbho;)Lapc;	d	getHurtSound
		p	1		source
	m	(Lcbu;)F	e	getRiddenSpeed
		p	1		controllingPlayer
	m	()V	ex	dropEquipment
	m	()Z	ff	isSensitiveToWater
	m	()Z	g	isSaddleable
	m	()V	gd	floatStrider
	m	()Z	i	isSaddled
	m	()V	l	tick
	m	()Lapc;	l_	getDeathSound
	m	(Lcjf;)Z	m	isFood
		p	1		stack
	m	(Lbiq;)Z	r	canAddPassenger
		p	1		passenger
	m	()Z	s	isSuffocating
	m	()Lbkl$a;	t	createAttributes
	m	()Lapc;	w	getAmbientSound
	m	(Z)V	w	setSuffocating
		p	1		cold
	m	()Z	y	isBeingTempted
	m	()V	z	registerGoals
	f	Ljava/util/UUID;	bT	SUFFOCATING_MODIFIER_UUID
	f	Lbkk;	bU	SUFFOCATING_MODIFIER
	f	F	bW	SUFFOCATE_STEERING_MODIFIER
	f	F	bX	STEERING_MODIFIER
	f	Lcmg;	bY	FOOD_ITEMS
	f	Lcmg;	bZ	TEMPT_ITEMS
	f	Laee;	ca	DATA_BOOST_TIME
	f	Laee;	cb	DATA_SUFFOCATING
	f	Laee;	cc	DATA_SADDLE_ID
	f	Lbjc;	cd	steering
	f	Lbrj;	ce	temptGoal
c	bzv$a	net/minecraft/world/entity/monster/Strider$StriderGoToLavaGoal
	m	(Lbzv;D)V	<init>	<init>
		p	1		strider
		p	2		speed
	m	()Z	a	canUse
	m	(Lcpy;Lgw;)Z	a	isValidTarget
		p	1		world
		p	2		pos
	m	()Z	b	canContinueToUse
	m	()Lgw;	k	getMoveToTarget
	m	()Z	l	shouldRecalculatePath
	f	Lbzv;	g	strider
c	bzv$b	net/minecraft/world/entity/monster/Strider$StriderPathNavigation
	m	(Lbzv;Lcpv;)V	<init>	<init>
		p	1		entity
		p	2		world
	m	(I)Lebd;	a	createPathFinder
		p	1		range
	m	(Leax;)Z	a	hasValidPathType
		p	1		pathType
	m	(Lgw;)Z	a	isStableDestination
		p	1		pos
c	bzw	net/minecraft/world/entity/monster/Vex
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(IZ)V	a	setVexFlag
		p	1		mask
		p	2		value
	m	(Lasc;Lbgw;)V	a	populateDefaultEquipmentSlots
		p	1		random
		p	2		localDifficulty
	m	(Lbiq;Lbir;F)Lorg/joml/Vector3f;	a	getPassengerAttachmentPoint
		p	1		passenger
		p	2		dimensions
		p	3		scaleFactor
	m	(Lbji;)V	a	setOwner
		p	1		owner
	m	(Lbjm;Lehn;)V	a	move
		p	1		movementType
		p	2		movement
	m	(Lbzw;)Lasc;	a	access$000
	m	(Lcqk;Lbgw;Lbjk;Lbjz;Lqw;)Lbjz;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()Z	aR	isFlapping
	m	()V	a_	defineSynchedData
	m	(I)V	b	setLimitedLife
		p	1		lifeTicks
	m	(Lbjs;Lbir;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lbzw;)Lbpe;	b	access$100
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()F	bm	getLightLevelDependentMagicValue
	m	(I)Z	c	getVexFlag
		p	1		mask
	m	(Lbzw;)Lbpe;	c	access$200
	m	(Lbho;)Lapc;	d	getHurtSound
		p	1		source
	m	(Lbzw;)Lasc;	d	access$300
	m	(Lbzw;)Lasc;	e	access$400
	m	(Lbzw;)Lasc;	f	access$500
	m	(Lbzw;)Lasc;	g	access$600
	m	()Z	gd	isCharging
	m	(Lbzw;)Lbpe;	h	access$700
	m	(Lgw;)V	i	setBoundOrigin
		p	1		bounds
	m	()V	l	tick
	m	(Lbiq;)F	l	ridingOffset
		p	1		vehicle
	m	()Lapc;	l_	getDeathSound
	m	()Lbkl$a;	s	createAttributes
	m	()Lbji;	t	getOwner
	m	()Lbiq;	v	getOwner
	m	()Lapc;	w	getAmbientSound
	m	(Z)V	w	setIsCharging
		p	1		charging
	m	()Lgw;	y	getBoundOrigin
	m	()V	z	registerGoals
	f	F	b	FLAP_DEGREES_PER_TICK
	f	Lbji;	bT	owner
	f	Lgw;	bU	boundOrigin
	f	Z	bV	hasLimitedLife
	f	I	bW	limitedLifeTicks
	f	I	c	TICKS_PER_FLAP
	f	Laee;	d	DATA_FLAGS_ID
	f	I	e	FLAG_IS_CHARGING
c	bzw$a	net/minecraft/world/entity/monster/Vex$VexChargeAttackGoal
	m	()Z	Q_	requiresUpdateEveryTick
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lbzw;	a	this$0
c	bzw$b	net/minecraft/world/entity/monster/Vex$VexCopyOwnerTargetGoal
	m	(Lbzw;Lbjp;)V	<init>	<init>
		p	2		mob
	m	()Z	a	canUse
	m	()V	c	start
	f	Lbzw;	a	this$0
	f	Lbts;	b	copyOwnerTargeting
c	bzw$c	net/minecraft/world/entity/monster/Vex$VexMoveControl
	m	(Lbzw;Lbzw;)V	<init>	<init>
		p	2		owner
	m	()V	a	tick
	f	Lbzw;	l	this$0
c	bzw$d	net/minecraft/world/entity/monster/Vex$VexRandomMoveGoal
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	e	tick
	f	Lbzw;	a	this$0
c	bzx	net/minecraft/world/entity/monster/Vindicator
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	X	customServerAiStep
	m	(IZ)V	a	applyRaidBuffs
		p	1		wave
		p	2		unused
	m	(Lasc;Lbgw;)V	a	populateDefaultEquipmentSlots
		p	1		random
		p	2		localDifficulty
	m	(Lbgv;)Z	a	lambda$static$0
		p	0		difficulty
	m	(Lbzx;)Lasc;	a	access$000
	m	(Lcqk;Lbgw;Lbjk;Lbjz;Lqw;)Lbjz;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()Lapc;	ac_	getCelebrateSound
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Ltl;)V	b	setCustomName
		p	1		name
	m	(Lbho;)Lapc;	d	getHurtSound
		p	1		source
	m	()Lapc;	l_	getDeathSound
	m	()Lbyq$a;	s	getArmPose
	m	(Lbiq;)Z	s	isAlliedTo
		p	1		other
	m	()Lbkl$a;	t	createAttributes
	m	()Lapc;	w	getAmbientSound
	m	()V	z	registerGoals
	f	Ljava/lang/String;	b	TAG_JOHNNY
	f	Z	bT	isJohnny
	f	Ljava/util/function/Predicate;	e	DOOR_BREAKING_PREDICATE
c	bzx$a	net/minecraft/world/entity/monster/Vindicator$VindicatorBreakDoorGoal
	m	(Lbji;)V	<init>	<init>
		p	1		mob
	m	()Z	a	canUse
	m	()Z	b	canContinueToUse
	m	()V	c	start
c	bzx$b	net/minecraft/world/entity/monster/Vindicator$VindicatorJohnnyAttackGoal
	m	(Lbzx;)V	<init>	<init>
		p	1		vindicator
	m	()Z	a	canUse
	m	()V	c	start
c	bzy	net/minecraft/world/entity/monster/Witch
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(IZ)V	a	applyRaidBuffs
		p	1		wave
		p	2		unused
	m	(Lbiq;Lbir;F)Lorg/joml/Vector3f;	a	getPassengerAttachmentPoint
		p	1		passenger
		p	2		dimensions
		p	3		scaleFactor
	m	(Lbjg;F)V	a	performRangedAttack
		p	1		target
		p	2		pullProgress
	m	()V	a_	defineSynchedData
	m	()Lapc;	ac_	getCelebrateSound
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	(Lbjs;Lbir;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	()V	b_	aiStep
	m	(Lbho;)Lapc;	d	getHurtSound
		p	1		source
	m	(Lbho;F)F	e	getDamageAfterMagicAbsorb
		p	1		source
		p	2		amount
	m	()Z	ge	canBeLeader
	m	(Lbjg;)Z	j	lambda$registerGoals$0
		p	1		entity
	m	()Lapc;	l_	getDeathSound
	m	()Z	s	isDrinkingPotion
	m	()Lbkl$a;	t	createAttributes
	m	()Lapc;	w	getAmbientSound
	m	(Z)V	y	setUsingItem
		p	1		drinking
	m	()V	z	registerGoals
	f	Ljava/util/UUID;	b	SPEED_MODIFIER_DRINKING_UUID
	f	Laee;	bT	DATA_USING_ITEM
	f	I	bU	usingTime
	f	Lbrw;	bV	healRaidersGoal
	f	Lbrv;	bW	attackPlayersGoal
	f	Lbkk;	e	SPEED_MODIFIER_DRINKING
c	bzz	net/minecraft/world/entity/monster/WitherSkeleton
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lbiq;)Z	C	doHurtTarget
		p	1		target
	m	(Lasc;Lbgw;)V	a	populateDefaultEquipmentSlots
		p	1		random
		p	2		localDifficulty
	m	(Lbho;IZ)V	a	dropCustomDeathLoot
		p	1		source
		p	2		lootingMultiplier
		p	3		allowDrops
	m	(Lcqk;Lbgw;Lbjk;Lbjz;Lqw;)Lbjz;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lasc;Lbgw;)V	b	populateDefaultEquipmentEnchantments
		p	1		random
		p	2		localDifficulty
	m	(Lbjs;Lbir;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lcjf;F)Lcca;	b	getArrow
		p	1		arrow
		p	2		damageModifier
	m	(Lbid;)Z	c	canBeAffected
		p	1		effect
	m	(Lbho;)Lapc;	d	getHurtSound
		p	1		source
	m	(Lbiq;)F	l	ridingOffset
		p	1		vehicle
	m	()Lapc;	l_	getDeathSound
	m	()Lapc;	t	getStepSound
	m	()Lapc;	w	getAmbientSound
	m	()V	z	registerGoals
c	caa	net/minecraft/world/entity/monster/Zoglin
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lbiq;)Z	C	doHurtTarget
		p	1		target
	m	()V	W	sendDebugPackets
	m	()V	X	customServerAiStep
	m	(Laee;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Lbho;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbiq;Lbir;F)Lorg/joml/Vector3f;	a	getPassengerAttachmentPoint
		p	1		passenger
		p	2		dimensions
		p	3		scaleFactor
	m	(Lbkg;)V	a	initCoreActivity
		p	0		brain
	m	(Lcbu;)Z	a	canBeLeashed
		p	1		player
	m	(Lcom/mojang/serialization/Dynamic;)Lbkg;	a	makeBrain
		p	1		dynamic
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Z)V	a	setBaby
		p	1		baby
	m	()V	a_	defineSynchedData
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	(Lbkg;)V	b	initIdleActivity
		p	0		brain
	m	(Lgw;Ldfj;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()V	b_	aiStep
	m	(Lbkg;)V	c	initFightActivity
		p	0		brain
	m	(Lbho;)Lapc;	d	getHurtSound
		p	1		source
	m	()Lbkg;	dN	getBrain
	m	()Lbkg$b;	dO	brainProvider
	m	(Lbjg;)V	e	blockedByShield
		p	1		target
	m	()Lbjl;	eR	getMobType
	m	()I	gd	getAttackAnimationRemainingTicks
	m	()V	ge	playAngrySound
	m	()Ljava/util/Optional;	gf	findNearestValidAttackTarget
	m	(Lbjg;)Z	j	isTargetable
		p	1		entity
	m	(Lbjg;)V	k	setAttackTarget
		p	1		entity
	m	()Lapc;	l_	getDeathSound
	m	()Z	m_	isBaby
	m	()Lbkl$a;	s	createAttributes
	m	()Z	t	isAdult
	m	()Lapc;	w	getAmbientSound
	m	()V	y	updateActivity
	f	Lcom/google/common/collect/ImmutableList;	b	SENSOR_TYPES
	f	I	bT	ATTACK_KNOCKBACK
	f	F	bU	KNOCKBACK_RESISTANCE
	f	I	bV	ATTACK_DAMAGE
	f	F	bW	BABY_ATTACK_DAMAGE
	f	I	bX	ATTACK_INTERVAL
	f	I	bY	BABY_ATTACK_INTERVAL
	f	I	bZ	ATTACK_DURATION
	f	Lcom/google/common/collect/ImmutableList;	c	MEMORY_TYPES
	f	F	ca	MOVEMENT_SPEED_WHEN_FIGHTING
	f	F	cb	SPEED_MULTIPLIER_WHEN_IDLING
	f	I	cc	attackAnimationRemainingTicks
	f	Laee;	d	DATA_BABY_ID
	f	I	e	MAX_HEALTH
c	cab	net/minecraft/world/entity/monster/Zombie
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcpv;)V	<init>	<init>
		p	1		world
	m	(Lbiq;)Z	C	doHurtTarget
		p	1		target
	m	(F)V	E	handleAttributes
		p	1		chanceMultiplier
	m	(Laee;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Lakq;Lbjg;)Z	a	killedEntity
		p	1		world
		p	2		other
	m	(Lasc;)Z	a	getSpawnAsBabyOdds
		p	0		random
	m	(Lasc;Lbgw;)V	a	populateDefaultEquipmentSlots
		p	1		random
		p	2		localDifficulty
	m	(Lbgv;)Z	a	lambda$static$0
		p	0		difficulty
	m	(Lbho;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbho;IZ)V	a	dropCustomDeathLoot
		p	1		source
		p	2		lootingMultiplier
		p	3		allowDrops
	m	(Lbiq;Lbir;F)Lorg/joml/Vector3f;	a	getPassengerAttachmentPoint
		p	1		passenger
		p	2		dimensions
		p	3		scaleFactor
	m	(Lcab;)Lasc;	a	access$000
	m	(Lcqk;Lbgw;Lbjk;Lbjz;Lqw;)Lbjz;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Z)V	a	setBaby
		p	1		baby
	m	()V	a_	defineSynchedData
	m	()Z	ab_	isSunSensitive
	m	(I)V	b	startUnderWaterConversion
		p	1		ticksUntilWaterConversion
	m	(Lbiu;)V	b	convertToZombieType
		p	1		entityType
	m	(Lbjs;Lbir;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lgw;Ldfj;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()V	b_	aiStep
	m	(Lbho;)Lapc;	d	getHurtSound
		p	1		source
	m	()Lbjl;	eR	getMobType
	m	()I	ed	getExperienceReward
	m	()Lcjf;	gd	getSkull
	m	()Z	ge	convertsInWater
	m	()V	gg	doUnderWaterConversion
	m	()Lbkl$a;	gh	createAttributes
	m	()Z	gk	isUnderWaterConverting
	m	()Z	gl	canBreakDoors
	m	()V	gm	randomizeReinforcementsChance
	m	(Lcjf;)Z	j	canHoldItem
		p	1		stack
	m	(Lcjf;)Z	k	wantsToPickUp
		p	1		stack
	m	()V	l	tick
	m	(Lbiq;)F	l	ridingOffset
		p	1		vehicle
	m	()Lapc;	l_	getDeathSound
	m	()Z	m_	isBaby
	m	()V	s	addBehaviourGoals
	m	()Z	t	supportsBreakDoorGoal
	m	()Lapc;	w	getAmbientSound
	m	(Z)V	x	setCanBreakDoors
		p	1		canBreakDoors
	m	()Lapc;	y	getStepSound
	m	()V	z	registerGoals
	f	Ljava/util/UUID;	b	SPEED_MODIFIER_BABY_UUID
	f	I	bT	REINFORCEMENT_ATTEMPTS
	f	I	bU	REINFORCEMENT_RANGE_MAX
	f	I	bV	REINFORCEMENT_RANGE_MIN
	f	F	bW	BABY_EYE_HEIGHT_ADJUSTMENT
	f	Laee;	bX	DATA_SPECIAL_TYPE_ID
	f	Laee;	bY	DATA_DROWNED_CONVERSION_ID
	f	F	bZ	BREAK_DOOR_CHANCE
	f	Lbkk;	c	SPEED_MODIFIER_BABY
	f	Ljava/util/function/Predicate;	ca	DOOR_BREAKING_PREDICATE
	f	Lbpl;	cb	breakDoorGoal
	f	Z	cc	canBreakDoors
	f	I	cd	inWaterTime
	f	I	ce	conversionTime
	f	Laee;	d	DATA_BABY_ID
	f	F	e	ZOMBIE_LEADER_CHANCE
c	cab$a	net/minecraft/world/entity/monster/Zombie$ZombieAttackTurtleEggGoal
	m	(Lcab;Lbjp;DI)V	<init>	<init>
		p	2		mob
		p	3		speed
		p	5		maxYDifference
	m	(Lcpv;Lgw;)V	a	playBreakSound
		p	1		world
		p	2		pos
	m	(Lcpw;Lgw;)V	a	playDestroyProgressSound
		p	1		world
		p	2		pos
	m	()D	i	acceptedDistance
	f	Lcab;	g	this$0
c	cab$b	net/minecraft/world/entity/monster/Zombie$ZombieGroupData
	m	(ZZ)V	<init>	<init>
		p	1		baby
		p	2		tryChickenJockey
	f	Z	a	isBaby
	f	Z	b	canSpawnJockey
c	cac	net/minecraft/world/entity/monster/ZombieVillager
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lbiq;Lbir;F)Lorg/joml/Vector3f;	a	getPassengerAttachmentPoint
		p	1		passenger
		p	2		dimensions
		p	3		scaleFactor
	m	(Lcbi;)V	a	setVillagerData
		p	1		villagerData
	m	(Lcqk;Lbgw;Lbjk;Lbjz;Lqw;)Lbjz;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lhe$c;)V	a	lambda$new$0
		p	1		profession
	m	(Ljava/util/UUID;I)V	a	startConverting
		p	1		uuid
		p	2		delay
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lqw;Lrq;)V	a	lambda$addAdditionalSaveData$1
	m	(Lrq;)V	a	setGossips
		p	1		gossipData
	m	()V	a_	defineSynchedData
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	(I)V	b	setVillagerXp
		p	1		xp
	m	(Lcbu;Lbgx;)Lbgy;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lakq;)V	c	finishConversion
		p	1		world
	m	(Lqw;)V	c	setTradeOffers
		p	1		offerData
	m	(Lbho;)Lapc;	d	getHurtSound
		p	1		source
	m	()F	eW	getVoicePitch
	m	()Lcjf;	gd	getSkull
	m	()Z	ge	convertsInWater
	m	()Z	gn	isConverting
	m	()Lcbi;	go	getVillagerData
	m	()I	gp	getVillagerXp
	m	()I	gq	getConversionProgress
	m	(D)Z	h	removeWhenFarAway
		p	1		distanceSquared
	m	()V	l	tick
	m	()Lapc;	l_	getDeathSound
	m	()Lapc;	w	getAmbientSound
	m	()Lapc;	y	getStepSound
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	I	bX	VILLAGER_CONVERSION_WAIT_MIN
	f	I	bY	VILLAGER_CONVERSION_WAIT_MAX
	f	I	bZ	MAX_SPECIAL_BLOCKS_COUNT
	f	Laee;	c	DATA_CONVERTING_ID
	f	I	ca	SPECIAL_BLOCK_RADIUS
	f	I	cb	villagerConversionTime
	f	Ljava/util/UUID;	cc	conversionStarter
	f	Lrq;	cd	gossips
	f	Lqw;	ce	tradeOffers
	f	I	cf	villagerXp
	f	Laee;	d	DATA_VILLAGER_DATA
c	cad	net/minecraft/world/entity/monster/ZombifiedPiglin
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	X	customServerAiStep
	m	()I	a	getRemainingPersistentAngerTime
	m	(I)V	a	setRemainingPersistentAngerTime
		p	1		angerTime
	m	(Lasc;Lbgw;)V	a	populateDefaultEquipmentSlots
		p	1		random
		p	2		localDifficulty
	m	(Lbiq;Lbir;F)Lorg/joml/Vector3f;	a	getPassengerAttachmentPoint
		p	1		passenger
		p	2		dimensions
		p	3		scaleFactor
	m	(Lcad;)V	a	lambda$alertOthers$3
		p	1		zombifiedPiglin
	m	(Lcpy;)Z	a	checkSpawnObstruction
		p	1		world
	m	(Ljava/util/UUID;)V	a	setPersistentAngerTarget
		p	1		angryAt
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()Ljava/util/UUID;	b	getPersistentAngerTarget
	m	(Lbiu;Lcpw;Lbjk;Lgw;Lasc;)Z	b	checkZombifiedPiglinSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	(Lbjs;Lbir;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lcad;)Z	b	lambda$alertOthers$2
		p	1		zombifiedPiglin
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()V	c	startPersistentAngerTimer
	m	(Lcad;)Z	c	lambda$alertOthers$1
		p	0		zombifiedPiglin
	m	(Lbho;)Lapc;	d	getHurtSound
		p	1		source
	m	(Lcad;)Z	d	lambda$alertOthers$0
		p	1		zombifiedPiglin
	m	(Lcbu;)Z	f	isPreventingPlayerRest
		p	1		player
	m	()Lcjf;	gd	getSkull
	m	()Z	ge	convertsInWater
	m	()V	gm	randomizeReinforcementsChance
	m	()Lbkl$a;	gn	createAttributes
	m	()V	go	maybePlayFirstAngerSound
	m	()V	gp	maybeAlertOthers
	m	()V	gq	alertOthers
	m	()V	gr	playAngerSound
	m	(Lbjg;)V	h	setTarget
		p	1		target
	m	(Lcjf;)Z	k	wantsToPickUp
		p	1		stack
	m	()Lapc;	l_	getDeathSound
	m	()V	s	addBehaviourGoals
	m	()Lapc;	w	getAmbientSound
	f	Lbgj;	bX	FIRST_ANGER_SOUND_DELAY
	f	I	bY	playFirstAngerSoundIn
	f	Lbgj;	bZ	PERSISTENT_ANGER_TIME
	f	Ljava/util/UUID;	c	SPEED_MODIFIER_ATTACKING_UUID
	f	I	ca	remainingPersistentAngerTime
	f	Ljava/util/UUID;	cb	persistentAngerTarget
	f	I	cc	ALERT_RANGE_Y
	f	Lbgj;	cd	ALERT_INTERVAL
	f	I	ce	ticksUntilNextAlert
	f	F	cf	ZOMBIFIED_PIGLIN_EYE_HEIGHT
	f	F	cg	ZOMBIFIED_PIGLIN_BABY_EYE_HEIGHT_ADJUSTMENT
	f	Lbkk;	d	SPEED_MODIFIER_ATTACKING
c	cae	net/minecraft/world/entity/monster/hoglin/Hoglin
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lbiq;)Z	C	doHurtTarget
		p	1		target
	m	()V	W	sendDebugPackets
	m	()V	X	customServerAiStep
	m	(Lakq;Lbil;)Lbil;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lbho;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbiq;Lbir;F)Lorg/joml/Vector3f;	a	getPassengerAttachmentPoint
		p	1		passenger
		p	2		dimensions
		p	3		scaleFactor
	m	(Lcbu;)Z	a	canBeLeashed
		p	1		player
	m	(Lcom/mojang/serialization/Dynamic;)Lbkg;	a	makeBrain
		p	1		dynamic
	m	(Lcqk;Lbgw;Lbjk;Lbjz;Lqw;)Lbjz;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lgw;Lcpy;)F	a	getWalkTargetValue
		p	1		pos
		p	2		world
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()Lapc;	aL	getSwimSound
	m	()Lapc;	aM	getSwimSplashSound
	m	()V	a_	defineSynchedData
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	(Lapc;)V	b	playSoundEvent
		p	1		sound
	m	(Lcbu;Lbgx;)Lbgy;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lgw;Ldfj;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()V	b_	aiStep
	m	(Lakq;)V	c	finishConversion
		p	1		word
	m	(Lbiu;Lcpw;Lbjk;Lgw;Lasc;)Z	c	checkHoglinSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	(Lbho;)Lapc;	d	getHurtSound
		p	1		source
	m	()Lbkg;	dN	getBrain
	m	()Lbkg$b;	dO	brainProvider
	m	()Lape;	da	getSoundSource
	m	(Lbjg;)V	e	blockedByShield
		p	1		target
	m	()Z	eb	shouldDropExperience
	m	()I	ed	getExperienceReward
	m	()I	gd	getAttackAnimationRemainingTicks
	m	()Z	ge	canFallInLove
	m	()Z	gj	canBeHunted
	m	()Z	gk	isImmuneToZombification
	m	(D)Z	h	removeWhenFarAway
		p	1		distanceSquared
	m	()Lapc;	l_	getDeathSound
	m	()V	m	ageBoundaryReached
	m	(Lcjf;)Z	m	isFood
		p	1		stack
	m	()Lbkl$a;	s	createAttributes
	m	()Z	t	isAdult
	m	()Lapc;	w	getAmbientSound
	m	(Z)V	w	setImmuneToZombification
		p	1		immuneToZombification
	m	(Z)V	x	setCannotBeHunted
		p	1		cannotBeHunted
	m	()Z	y	isConverting
	f	Lcom/google/common/collect/ImmutableList;	bT	SENSOR_TYPES
	f	Lcom/google/common/collect/ImmutableList;	bU	MEMORY_TYPES
	f	Laee;	bW	DATA_IMMUNE_TO_ZOMBIFICATION
	f	F	bX	PROBABILITY_OF_SPAWNING_AS_BABY
	f	I	bY	MAX_HEALTH
	f	F	bZ	MOVEMENT_SPEED_WHEN_FIGHTING
	f	I	ca	ATTACK_KNOCKBACK
	f	F	cb	KNOCKBACK_RESISTANCE
	f	I	cc	ATTACK_DAMAGE
	f	F	cd	BABY_ATTACK_DAMAGE
	f	I	ce	CONVERSION_TIME
	f	I	cf	attackAnimationRemainingTicks
	f	I	cg	timeInOverworld
	f	Z	ch	cannotBeHunted
c	caf	net/minecraft/world/entity/monster/hoglin/HoglinAi
	m	()Lbmt;	a	createIdleMovementBehaviors
	m	(Lbjg;Lcae;)V	a	lambda$broadcastAttackTarget$1
		p	1		hoglinx
	m	(Lbkg;)Lbkg;	a	makeBrain
		p	0		brain
	m	(Lcae;)V	a	updateActivity
		p	0		hoglin
	m	(Lcae;Lbjg;)V	a	onHitTarget
		p	0		hoglin
		p	1		target
	m	(Lcae;Lcdf;)Lapc;	a	getSoundForActivity
		p	0		hoglin
		p	1		activity
	m	(Lcae;Lgw;)Z	a	isPosNearNearestRepellent
		p	0		hoglin
		p	1		pos
	m	(Lbjg;Lcae;)V	b	lambda$broadcastRetreat$0
		p	1		hoglinx
	m	(Lbkg;)V	b	initCoreActivity
		p	0		brain
	m	(Lcae;)Ljava/util/Optional;	b	getSoundForCurrentActivity
		p	0		hoglin
	m	(Lcae;Lbjg;)V	b	wasHurtBy
		p	0		hoglin
		p	1		attacker
	m	(Lcae;Lcdf;)Lapc;	b	lambda$getSoundForCurrentActivity$2
		p	1		activity
	m	(Lbkg;)V	c	initIdleActivity
		p	0		brain
	m	(Lcae;)Z	c	isPacified
		p	0		hoglin
	m	(Lcae;Lbjg;)V	c	broadcastRetreat
		p	0		hoglin
		p	1		target
	m	(Lbkg;)V	d	initFightActivity
		p	0		brain
	m	(Lcae;)Ljava/util/Optional;	d	findNearestValidAttackTarget
		p	0		hoglin
	m	(Lcae;Lbjg;)V	d	retreatFromNearestTarget
		p	0		hoglin
		p	1		target
	m	(Lbkg;)V	e	initRetreatActivity
		p	0		brain
	m	(Lcae;)Z	e	wantsToStopFleeing
		p	0		hoglin
	m	(Lcae;Lbjg;)V	e	setAvoidTarget
		p	0		hoglin
		p	1		target
	m	(Lcae;)Z	f	piglinsOutnumberHoglins
		p	0		hoglin
	m	(Lcae;Lbjg;)V	f	maybeRetaliate
		p	0		hoglin
		p	1		target
	m	(Lcae;)Ljava/util/List;	g	getVisibleAdultHoglins
		p	0		hoglin
	m	(Lcae;Lbjg;)V	g	setAttackTarget
		p	0		hoglin
		p	1		target
	m	(Lcae;)Z	h	isNearRepellent
		p	0		hoglin
	m	(Lcae;Lbjg;)V	h	broadcastAttackTarget
		p	0		hoglin
		p	1		target
	m	(Lcae;)Z	i	isBreeding
		p	0		hoglin
	m	(Lcae;Lbjg;)V	i	setAttackTargetIfCloserThanCurrent
		p	0		hoglin
		p	1		targetCandidate
	f	I	a	REPELLENT_DETECTION_RANGE_HORIZONTAL
	f	I	b	REPELLENT_DETECTION_RANGE_VERTICAL
	f	Lbgj;	c	RETREAT_DURATION
	f	I	d	ATTACK_DURATION
	f	I	e	DESIRED_DISTANCE_FROM_PIGLIN_WHEN_IDLING
	f	I	f	DESIRED_DISTANCE_FROM_PIGLIN_WHEN_RETREATING
	f	I	g	ATTACK_INTERVAL
	f	I	h	BABY_ATTACK_INTERVAL
	f	I	i	REPELLENT_PACIFY_TIME
	f	Lbgj;	j	ADULT_FOLLOW_RANGE
	f	F	k	SPEED_MULTIPLIER_WHEN_AVOIDING_REPELLENT
	f	F	l	SPEED_MULTIPLIER_WHEN_RETREATING
	f	F	m	SPEED_MULTIPLIER_WHEN_MAKING_LOVE
	f	F	n	SPEED_MULTIPLIER_WHEN_IDLING
	f	F	o	SPEED_MULTIPLIER_WHEN_FOLLOWING_ADULT
c	cag	net/minecraft/world/entity/monster/hoglin/HoglinBase
	m	(Lbjg;Lbjg;)Z	a	hurtAndThrowTarget
		p	0		attacker
		p	1		target
	m	(Lbjg;Lbjg;)V	b	throwTarget
		p	0		attacker
		p	1		target
	m	()I	gd	getAttackAnimationRemainingTicks
	f	I	l_	ATTACK_ANIMATION_DURATION
c	cah	net/minecraft/world/entity/monster/hoglin/package-info
c	cai	net/minecraft/world/entity/monster/package-info
c	caj	net/minecraft/world/entity/monster/piglin/AbstractPiglin
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	P	playAmbientSound
	m	()V	W	sendDebugPackets
	m	()V	X	customServerAiStep
	m	(Lbiq;Lbir;F)Lorg/joml/Vector3f;	a	getPassengerAttachmentPoint
		p	1		passenger
		p	2		dimensions
		p	3		scaleFactor
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(Lbjs;Lbir;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lakq;)V	c	finishConversion
		p	1		world
	m	()Z	gd	isConverting
	m	()Z	ge	isAdult
	m	()Lcam;	gf	getArmPose
	m	()Z	gg	isHoldingMeleeWeapon
	m	()V	gh	playConvertedSound
	m	(Lbiq;)F	l	ridingOffset
		p	1		vehicle
	m	()Lbjg;	q	getTarget
	m	()Z	s	canHunt
	m	()Z	t	isImmuneToZombification
	m	(Z)V	w	setImmuneToZombification
		p	1		immuneToZombification
	m	()V	y	applyOpenDoorsAbility
	f	Laee;	b	DATA_IMMUNE_TO_ZOMBIFICATION
	f	I	c	CONVERSION_TIME
	f	F	d	PIGLIN_EYE_HEIGHT
	f	I	e	timeInOverworld
c	cak	net/minecraft/world/entity/monster/piglin/Piglin
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()Z	V	shouldDespawnInPeaceful
	m	()V	X	customServerAiStep
	m	()V	a	onCrossbowAttackPerformed
	m	(Laee;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Lasc;Lbgw;)V	a	populateDefaultEquipmentSlots
		p	1		random
		p	2		localDifficulty
	m	(Lbho;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbho;IZ)V	a	dropCustomDeathLoot
		p	1		source
		p	2		lootingMultiplier
		p	3		allowDrops
	m	(Lbiq;Z)Z	a	startRiding
		p	1		entity
		p	2		force
	m	(Lbiv;Lcjf;Lasc;)V	a	maybeWearArmor
		p	1		slot
		p	2		stack
		p	3		random
	m	(Lbjg;F)V	a	performRangedAttack
		p	1		target
		p	2		pullProgress
	m	(Lbjg;Lcjf;Lccm;F)V	a	shootCrossbowProjectile
		p	1		target
		p	2		crossbow
		p	3		projectile
		p	4		multiShotSpray
	m	(Lcjv;)Z	a	canFireProjectileWeapon
		p	1		weapon
	m	(Lcom/mojang/serialization/Dynamic;)Lbkg;	a	makeBrain
		p	1		dynamic
	m	(Lcqk;Lbgw;Lbjk;Lbjz;Lqw;)Lbjz;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Z)V	a	setBaby
		p	1		baby
	m	()V	a_	defineSynchedData
	m	(Lapc;)V	b	playSoundEvent
		p	1		sound
	m	(Lbiq;I)Lbiq;	b	getTopPassenger
		p	1		entity
		p	2		maxLevel
	m	(Lbiu;Lcpw;Lbjk;Lgw;Lasc;)Z	b	checkPiglinSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	(Lbjs;Lbir;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lbyn;)V	b	pickUpItem
		p	1		item
	m	(Lcbu;Lbgx;)Lbgy;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lcjf;Lcjf;)Z	b	canReplaceCurrentItem
		p	1		newStack
		p	2		oldStack
	m	(Lgw;Ldfj;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Z)V	b	setChargingCrossbow
		p	1		charging
	m	(Lakq;)V	c	finishConversion
		p	1		world
	m	(Lbho;)Lapc;	d	getHurtSound
		p	1		source
	m	()Lbkg;	dN	getBrain
	m	()Lbkg$b;	dO	brainProvider
	m	()I	ed	getExperienceReward
	m	()Lcam;	gf	getArmPose
	m	()V	gh	playConvertedSound
	m	()Lbkl$a;	gk	createAttributes
	m	()Z	gl	isDancing
	m	()Lcjf;	gm	createSpawnWeapon
	m	()Z	gn	isChargingCrossbow
	m	(D)Z	h	removeWhenFarAway
		p	1		distanceSquared
	m	(Lcjf;)Z	k	wantsToPickUp
		p	1		stack
	m	(Lcjf;)Lcjf;	l	addToInventory
		p	1		stack
	m	()Lapc;	l_	getDeathSound
	m	(Lcjf;)Z	m	canAddToInventory
		p	1		stack
	m	()Z	m_	isBaby
	m	(Lcjf;)V	n	holdInMainHand
		p	1		stack
	m	(Lcjf;)V	o	holdInOffHand
		p	1		stack
	m	(Lcjf;)Z	p	canReplaceCurrentItem
		p	1		stack
	m	()Z	s	canHunt
	m	()Lapc;	w	getAmbientSound
	m	(Z)V	x	setDancing
		p	1		dancing
	m	()Lbhf;	y	getInventory
	m	(Z)V	y	setCannotHunt
		p	1		cannotHunt
	f	Lcom/google/common/collect/ImmutableList;	bT	SENSOR_TYPES
	f	Lcom/google/common/collect/ImmutableList;	bU	MEMORY_TYPES
	f	Laee;	bV	DATA_BABY_ID
	f	Laee;	bW	DATA_IS_CHARGING_CROSSBOW
	f	Laee;	bX	DATA_IS_DANCING
	f	Ljava/util/UUID;	bY	SPEED_MODIFIER_BABY_UUID
	f	Lbkk;	bZ	SPEED_MODIFIER_BABY
	f	I	ca	MAX_HEALTH
	f	F	cb	MOVEMENT_SPEED_WHEN_FIGHTING
	f	I	cc	ATTACK_DAMAGE
	f	F	cd	CROSSBOW_POWER
	f	F	ce	CHANCE_OF_WEARING_EACH_ARMOUR_ITEM
	f	I	cf	MAX_PASSENGERS_ON_ONE_HOGLIN
	f	F	cg	PROBABILITY_OF_SPAWNING_AS_BABY
	f	F	ch	BABY_EYE_HEIGHT_ADJUSTMENT
	f	D	ci	PROBABILITY_OF_SPAWNING_WITH_CROSSBOW_INSTEAD_OF_SWORD
	f	Lbhf;	cj	inventory
	f	Z	ck	cannotHunt
c	cal	net/minecraft/world/entity/monster/piglin/PiglinAi
	m	()Lcom/google/common/collect/ImmutableList;	a	createLookBehaviors
	m	(Lbiu;)Z	a	isZombified
		p	0		entityType
	m	(Lbjg;)Z	a	isWearingGold
		p	0		entity
	m	(Lbjg;Lbjg;)Z	a	wantsToDance
		p	0		piglin
		p	1		target
	m	(Lbjg;Lbkg;Lbjg;)V	a	lambda$wasHurtBy$6
		p	2		avoiding
	m	(Lbjg;Lcaj;)V	a	lambda$broadcastRetreat$13
		p	1		piglinx
	m	(Lbkg;)V	a	initCoreActivity
		p	0		piglin
	m	(Lbmw$a;Lbjg;)Z	a	lambda$babySometimesRideBabyHoglin$8
		p	1		entity
	m	(Lbyn;)Lcjf;	a	removeOneItemFromItemEntity
		p	0		stack
	m	(Lcaj;)V	a	broadcastUniversalAnger
		p	0		piglin
	m	(Lcaj;Lbjg;)V	a	maybeRetaliate
		p	0		piglin
		p	1		target
	m	(Lcaj;Lcbu;)V	a	lambda$broadcastUniversalAnger$10
		p	1		player
	m	(Lcak;)V	a	updateActivity
		p	0		piglin
	m	(Lcak;Lasc;)V	a	initMemories
		p	0		piglin
		p	1		random
	m	(Lcak;Lbiq;)Z	a	wantsToStopRiding
		p	0		piglin
		p	1		ridden
	m	(Lcak;Lbjg;)V	a	wasHurtBy
		p	0		piglin
		p	1		attacker
	m	(Lcak;Lbkg;)Lbkg;	a	makeBrain
		p	0		piglin
		p	1		brain
	m	(Lcak;Lbyn;)V	a	pickUpItem
		p	0		piglin
		p	1		drop
	m	(Lcak;Lcbu;Lbgx;)Lbgy;	a	mobInteract
		p	0		piglin
		p	1		player
		p	2		hand
	m	(Lcak;Lcbu;Ljava/util/List;)V	a	throwItemsTowardPlayer
		p	0		piglin
		p	1		player
		p	2		items
	m	(Lcak;Lcdf;)Lapc;	a	getSoundForActivity
		p	0		piglin
		p	1		activity
	m	(Lcak;Lcjf;)Z	a	wantsToPickup
		p	0		piglin
		p	1		stack
	m	(Lcak;Ljava/util/List;)V	a	throwItems
		p	0		piglin
		p	1		items
	m	(Lcak;Ljava/util/List;Lehn;)V	a	throwItemsTowardPos
		p	0		piglin
		p	1		items
		p	2		pos
	m	(Lcak;Z)V	a	stopHoldingOffHandItem
		p	0		piglin
		p	1		barter
	m	(Lcbu;Lcak;)V	a	lambda$angerNearbyPiglins$5
		p	1		piglin
	m	(Lcbu;Z)V	a	angerNearbyPiglins
		p	0		player
		p	1		blockOpen
	m	(Lcjf;)Z	a	isLovedItem
		p	0		stack
	m	(ZLcbu;Lcak;)Z	a	lambda$angerNearbyPiglins$4
		p	2		piglin
	m	()Lbmt;	b	createIdleLookBehaviors
	m	(Lbjg;)Z	b	isPlayerHoldingLovedItem
		p	0		target
	m	(Lbjg;Lbjg;)Z	b	lambda$isNearestValidAttackTarget$3
		p	1		preferredTarget
	m	(Lbjg;Lcaj;)V	b	lambda$broadcastAngerTarget$9
		p	1		nearbyPiglin
	m	(Lbkg;)V	b	initIdleActivity
		p	0		piglin
	m	(Lcaj;)Ljava/util/Optional;	b	getNearestVisibleTargetablePlayer
		p	0		piglin
	m	(Lcaj;Lbjg;)V	b	broadcastAngerTarget
		p	0		piglin
		p	1		target
	m	(Lcak;)V	b	cancelAdmiring
		p	0		piglin
	m	(Lcak;Lbjg;)Z	b	isNearestValidAttackTarget
		p	0		piglin
		p	1		target
	m	(Lcak;Lbkg;)V	b	initFightActivity
		p	0		piglin
		p	1		brain
	m	(Lcak;Lcdf;)Lapc;	b	lambda$getSoundForCurrentActivity$7
		p	1		activity
	m	(Lcak;Lcjf;)Z	b	canAdmire
		p	0		piglin
		p	1		nearbyItems
	m	(Lcak;Ljava/util/List;)V	b	throwItemsTowardRandomPos
		p	0		piglin
		p	1		items
	m	(Lcjf;)Z	b	isBarterCurrency
		p	0		stack
	m	()Lbmt;	c	createIdleMovementBehaviors
	m	(Lbjg;)Z	c	hasCrossbow
		p	0		piglin
	m	(Lbkg;)V	c	initCelebrateActivity
		p	0		brain
	m	(Lcaj;)V	c	dontKillAnyMoreHoglinsForAWhile
		p	0		piglin
	m	(Lcaj;Lbjg;)V	c	setAngerTarget
		p	0		piglin
		p	1		target
	m	(Lcak;)Ljava/util/Optional;	c	getSoundForCurrentActivity
		p	0		piglin
	m	(Lcak;Lbjg;)V	c	broadcastRetreat
		p	0		piglin
		p	1		target
	m	(Lcak;Lcjf;)V	c	holdInOffhand
		p	0		piglin
		p	1		stack
	m	(Lcjf;)Z	c	isFood
		p	0		stack
	m	()Lbky;	d	avoidRepellent
	m	(Lbjg;)V	d	admireGoldItem
		p	0		entity
	m	(Lbkg;)V	d	initAdmireItemActivity
		p	0		brain
	m	(Lcaj;)Z	d	isIdle
		p	0		piglin
	m	(Lcaj;Lbjg;)V	d	setAngerTargetToNearestTargetablePlayerIfFound
		p	0		piglin
		p	1		player
	m	(Lcak;)Ljava/util/List;	d	getVisibleAdultPiglins
		p	0		piglin
	m	(Lcak;Lbjg;)V	d	retreatFromNearestTarget
		p	0		piglin
		p	1		target
	m	(Lcak;Lcjf;)V	d	putInInventory
		p	0		piglin
		p	1		stack
	m	()Lbky;	e	babyAvoidNemesis
	m	(Lbjg;)Z	e	seesPlayerHoldingLovedItem
		p	0		entity
	m	(Lbkg;)V	e	initRetreatActivity
		p	0		brain
	m	(Lcaj;)Ljava/util/List;	e	getAdultPiglins
		p	0		piglin
	m	(Lcaj;Lbjg;)V	e	setAngerTargetIfCloserThanCurrent
		p	0		piglin
		p	1		target
	m	(Lcak;)Ljava/util/Optional;	e	getAvoidTarget
		p	0		piglin
	m	(Lcak;Lbjg;)V	e	setAvoidTargetAndDontHuntForAWhile
		p	0		piglin
		p	1		target
	m	()Lbky;	f	avoidZombified
	m	(Lbjg;)Z	f	doesntSeeAnyPlayerHoldingLovedItem
		p	0		piglin
	m	(Lbkg;)V	f	initRideHoglinActivity
		p	0		brain
	m	(Lcaj;)Ljava/util/Optional;	f	getAngerTarget
		p	0		piglin
	m	(Lcak;)Z	f	isBabyRidingBaby
		p	0		piglin
	m	(Lcak;Lbjg;)Z	f	lambda$initFightActivity$0
		p	1		target
	m	()Lbky;	g	babySometimesRideBabyHoglin
	m	(Lbjg;)Z	g	wasHurtRecently
		p	0		piglin
	m	(Lcaj;)Z	g	lambda$broadcastRetreat$12
		p	0		nearbyVisiblePiglin
	m	(Lcak;)Ljava/util/List;	g	getBarterResponseItems
		p	0		piglin
	m	(Lcaj;)V	h	lambda$broadcastUniversalAnger$11
		p	0		nearbyPiglin
	m	(Lcak;)Z	h	isNearZombified
		p	0		piglin
	m	(Lcak;)Ljava/util/Optional;	i	findNearestValidAttackTarget
		p	0		piglin
	m	(Lcak;)Z	j	isNearAvoidTarget
		p	0		piglin
	m	(Lcak;)V	k	stopWalking
		p	0		piglin
	m	(Lcak;)Z	l	wantsToStopFleeing
		p	0		piglin
	m	(Lcak;)Z	m	piglinsEqualOrOutnumberHoglins
		p	0		piglin
	m	(Lcak;)Z	n	hoglinsOutnumberPiglins
		p	0		piglins
	m	(Lcak;)V	o	eat
		p	0		piglin
	m	(Lcak;)Lehn;	p	getRandomNearbyPos
		p	0		piglin
	m	(Lcak;)Z	q	hasEatenRecently
		p	0		piglin
	m	(Lcak;)Z	r	isAdmiringItem
		p	0		entity
	m	(Lcak;)Z	s	isNearRepellent
		p	0		piglin
	m	(Lcak;)Z	t	isAdmiringDisabled
		p	0		piglin
	m	(Lcak;)Z	u	isHoldingItemInOffHand
		p	0		piglin
	m	(Lcak;)Z	v	isNotHoldingLovedItemInOffHand
		p	0		piglin
	m	(Lcak;)Z	w	lambda$initRideHoglinActivity$2
	m	(Lcak;)Z	x	lambda$initCelebrateActivity$1
		p	0		piglin
	f	Lbgj;	A	AVOID_ZOMBIFIED_DURATION
	f	Lbgj;	B	BABY_AVOID_NEMESIS_DURATION
	f	F	C	PROBABILITY_OF_CELEBRATION_DANCE
	f	F	D	SPEED_MULTIPLIER_WHEN_AVOIDING
	f	F	E	SPEED_MULTIPLIER_WHEN_RETREATING
	f	F	F	SPEED_MULTIPLIER_WHEN_MOUNTING
	f	F	G	SPEED_MULTIPLIER_WHEN_GOING_TO_WANTED_ITEM
	f	F	H	SPEED_MULTIPLIER_WHEN_GOING_TO_CELEBRATE_LOCATION
	f	F	I	SPEED_MULTIPLIER_WHEN_DANCING
	f	F	J	SPEED_MULTIPLIER_WHEN_IDLING
	f	I	a	REPELLENT_DETECTION_RANGE_HORIZONTAL
	f	I	b	REPELLENT_DETECTION_RANGE_VERTICAL
	f	Lcja;	c	BARTERING_ITEM
	f	Lbgj;	d	TIME_BETWEEN_HUNTS
	f	I	e	PLAYER_ANGER_RANGE
	f	I	f	ANGER_DURATION
	f	I	g	ADMIRE_DURATION
	f	I	h	MAX_DISTANCE_TO_WALK_TO_ITEM
	f	I	i	MAX_TIME_TO_WALK_TO_ITEM
	f	I	j	HOW_LONG_TIME_TO_DISABLE_ADMIRE_WALKING_IF_CANT_REACH_ITEM
	f	I	k	CELEBRATION_TIME
	f	I	l	BABY_FLEE_DURATION_AFTER_GETTING_HIT
	f	I	m	HIT_BY_PLAYER_MEMORY_TIMEOUT
	f	I	n	MAX_WALK_DISTANCE_TO_START_RIDING
	f	Lbgj;	o	RIDE_START_INTERVAL
	f	Lbgj;	p	RIDE_DURATION
	f	Lbgj;	q	RETREAT_DURATION
	f	I	r	MELEE_ATTACK_COOLDOWN
	f	I	s	EAT_COOLDOWN
	f	I	t	DESIRED_DISTANCE_FROM_ENTITY_WHEN_AVOIDING
	f	I	u	MAX_LOOK_DIST
	f	I	v	MAX_LOOK_DIST_FOR_PLAYER_HOLDING_LOVED_ITEM
	f	I	w	INTERACTION_RANGE
	f	I	x	MIN_DESIRED_DIST_FROM_TARGET_WHEN_HOLDING_CROSSBOW
	f	F	y	SPEED_WHEN_STRAFING_BACK_FROM_TARGET
	f	I	z	DESIRED_DISTANCE_FROM_ZOMBIFIED
c	cam	net/minecraft/world/entity/monster/piglin/PiglinArmPose
	m	()[Lcam;	a	$values
	f	Lcam;	a	ATTACKING_WITH_MELEE_WEAPON
	f	Lcam;	b	CROSSBOW_HOLD
	f	Lcam;	c	CROSSBOW_CHARGE
	f	Lcam;	d	ADMIRING_ITEM
	f	Lcam;	e	DANCING
	f	Lcam;	f	DEFAULT
	f	[Lcam;	g	$VALUES
c	can	net/minecraft/world/entity/monster/piglin/PiglinBrute
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	X	customServerAiStep
	m	(Lasc;Lbgw;)V	a	populateDefaultEquipmentSlots
		p	1		random
		p	2		localDifficulty
	m	(Lbho;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lcom/mojang/serialization/Dynamic;)Lbkg;	a	makeBrain
		p	1		dynamic
	m	(Lcqk;Lbgw;Lbjk;Lbjz;Lqw;)Lbjz;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lgw;Ldfj;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lbho;)Lapc;	d	getHurtSound
		p	1		source
	m	()Lbkg;	dN	getBrain
	m	()Lbkg$b;	dO	brainProvider
	m	()Lcam;	gf	getArmPose
	m	()V	gh	playConvertedSound
	m	()V	gk	playAngrySound
	m	(Lcjf;)Z	k	wantsToPickUp
		p	1		stack
	m	()Lapc;	l_	getDeathSound
	m	()Z	s	canHunt
	m	()Lapc;	w	getAmbientSound
	m	()Lbkl$a;	y	createAttributes
	f	Lcom/google/common/collect/ImmutableList;	bT	SENSOR_TYPES
	f	Lcom/google/common/collect/ImmutableList;	bU	MEMORY_TYPES
	f	I	bV	MAX_HEALTH
	f	F	bW	MOVEMENT_SPEED_WHEN_FIGHTING
	f	I	bX	ATTACK_DAMAGE
c	cao	net/minecraft/world/entity/monster/piglin/PiglinBruteAi
	m	()Lbmt;	a	createIdleLookBehaviors
	m	(Lbjg;Lbjg;)Z	a	lambda$isNearestValidAttackTarget$1
		p	1		target
	m	(Lcaj;)Ljava/util/Optional;	a	findNearestValidAttackTarget
		p	0		piglin
	m	(Lcaj;Lbjg;)Z	a	isNearestValidAttackTarget
		p	0		piglin
		p	1		entity
	m	(Lcaj;Lbsh;)Ljava/util/Optional;	a	getTargetIfWithinRange
		p	0		piglin
		p	1		targetMemoryModule
	m	(Lcan;)V	a	initMemories
		p	0		piglinBrute
	m	(Lcan;Lbjg;)V	a	wasHurtBy
		p	0		piglinBrute
		p	1		target
	m	(Lcan;Lbkg;)Lbkg;	a	makeBrain
		p	0		piglinBrute
		p	1		brain
	m	(Lcan;Lcdf;)V	a	lambda$playActivitySound$3
		p	1		activity
	m	()Lbmt;	b	createIdleMovementBehaviors
	m	(Lcaj;Lbjg;)Z	b	lambda$getTargetIfWithinRange$2
		p	1		target
	m	(Lcan;)V	b	updateActivity
		p	0		piglinBrute
	m	(Lcan;Lbjg;)V	b	setAngerTarget
		p	0		piglinBrute
		p	1		target
	m	(Lcan;Lbkg;)V	b	initCoreActivity
		p	0		piglinBrute
		p	1		brain
	m	(Lcan;)V	c	maybePlayActivitySound
		p	0		piglinBrute
	m	(Lcan;Lbjg;)Z	c	lambda$initFightActivity$0
		p	1		entity
	m	(Lcan;Lbkg;)V	c	initIdleActivity
		p	0		piglinBrute
		p	1		brain
	m	(Lcan;)V	d	playActivitySound
		p	0		piglinBrute
	m	(Lcan;Lbkg;)V	d	initFightActivity
		p	0		piglinBrute
		p	1		brain
	f	I	a	ANGER_DURATION
	f	I	b	MELEE_ATTACK_COOLDOWN
	f	D	c	ACTIVITY_SOUND_LIKELIHOOD_PER_TICK
	f	I	d	MAX_LOOK_DIST
	f	I	e	INTERACTION_RANGE
	f	D	f	TARGETING_RANGE
	f	F	g	SPEED_MULTIPLIER_WHEN_IDLING
	f	I	h	HOME_CLOSE_ENOUGH_DISTANCE
	f	I	i	HOME_TOO_FAR_DISTANCE
	f	I	j	HOME_STROLL_AROUND_DISTANCE
c	cap	net/minecraft/world/entity/monster/piglin/RememberIfHoglinWasKilled
	m	()Lbky;	a	create
	m	(Lboj$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
		p	0		context
	m	(Lboj$b;Lbok;Lbok;)Lbom;	a	lambda$create$1
		p	1		attackTarget
		p	2		huntedRecently
	m	(Lboj$b;Lbok;Lbok;Lakq;Lbjg;J)Z	a	lambda$create$0
		p	3		world
		p	4		entity
		p	5		time
c	caq	net/minecraft/world/entity/monster/piglin/StartAdmiringItemIfSeen
	m	(I)Lbky;	a	create
		p	0		duration
	m	(ILboj$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
		p	1		context
	m	(Lboj$b;ILbok;Lbok;Lbok;Lbok;)Lbom;	a	lambda$create$1
		p	2		nearestVisibleWantedItem
		p	3		admiringItem
		p	4		admiringDisabled
		p	5		disableWalkToAdmireItem
	m	(Lboj$b;Lbok;Lbok;ILakq;Lbjg;J)Z	a	lambda$create$0
		p	4		world
		p	5		entity
		p	6		time
c	car	net/minecraft/world/entity/monster/piglin/StartHuntingHoglin
	m	()Lbmh;	a	create
	m	(Lboj$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$4
		p	0		context
	m	(Lboj$b;Lbok;Lbok;Lakq;Lcak;J)Z	a	lambda$create$2
		p	3		world
		p	4		entity
		p	5		time
	m	(Lboj$b;Lbok;Lbok;Lbok;Lbok;)Lbom;	a	lambda$create$3
		p	1		nearestVisibleHuntableHoglin
		p	2		angryAt
		p	3		huntedRecently
		p	4		nearestVisibleAdultPiglins
	m	(Lcaj;)Z	a	hasHuntedRecently
		p	0		piglin
	m	(Ljava/util/List;)V	a	lambda$create$1
		p	0		piglin
	m	(Ljava/util/List;)Ljava/lang/Boolean;	b	lambda$create$0
		p	0		piglin
c	cas	net/minecraft/world/entity/monster/piglin/StopAdmiringIfItemTooFarAway
	m	(I)Lbky;	a	create
		p	0		range
	m	(ILboj$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
		p	1		context
	m	(Lboj$b;ILbok;Lbok;)Lbom;	a	lambda$create$1
		p	2		admiringItem
		p	3		nearestVisibleWantedItem
	m	(Lboj$b;Lbok;ILbok;Lakq;Lbjg;J)Z	a	lambda$create$0
		p	4		world
		p	5		entity
		p	6		time
c	cat	net/minecraft/world/entity/monster/piglin/StopAdmiringIfTiredOfTryingToReachItem
	m	(II)Lbky;	a	create
		p	0		cooldown
		p	1		timeLimit
	m	(IILboj$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
		p	2		context
	m	(Lboj$b;IILbok;Lbok;Lbok;Lbok;)Lbom;	a	lambda$create$1
		p	3		admiringItem
		p	4		nearestVisibleWantedItem
		p	5		timeTryingToReachAdmireItem
		p	6		disableWalkToAdmireItem
	m	(Lboj$b;Lbok;ILbok;Lbok;ILakq;Lbjg;J)Z	a	lambda$create$0
		p	6		world
		p	7		entity
		p	8		time
c	cau	net/minecraft/world/entity/monster/piglin/StopHoldingItemIfNoLongerAdmiring
	m	()Lbky;	a	create
	m	(Lakq;Lcak;J)Z	a	lambda$create$0
		p	0		world
		p	1		entity
		p	2		time
	m	(Lboj$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
		p	0		context
	m	(Lbok;)Lbom;	a	lambda$create$1
		p	0		admiringItem
c	cav	net/minecraft/world/entity/monster/piglin/package-info
c	caw	net/minecraft/world/entity/monster/warden/AngerLevel
	m	(Ljava/lang/String;IILapc;Lapc;)V	<init>	<init>
		p	3		threshold
		p	4		sound
		p	5		listeningSound
	m	()I	a	getMinimumAnger
	m	(I)Lcaw;	a	byAnger
		p	0		anger
	m	(Lcaw;Lcaw;)I	a	lambda$static$0
		p	0		a
		p	1		b
	m	([Lcaw;)V	a	lambda$static$1
		p	0		values
	m	()Lapc;	b	getAmbientSound
	m	()Lapc;	c	getListeningSound
	m	()Z	d	isAngry
	m	()[Lcaw;	e	$values
	f	Lcaw;	a	CALM
	f	Lcaw;	b	AGITATED
	f	Lcaw;	c	ANGRY
	f	[Lcaw;	d	SORTED_LEVELS
	f	I	e	minimumAnger
	f	Lapc;	f	ambientSound
	f	Lapc;	g	listeningSound
	f	[Lcaw;	h	$VALUES
c	cax	net/minecraft/world/entity/monster/warden/AngerManagement
	m	(Ljava/util/function/Predicate;Ljava/util/List;)V	<init>	<init>
		p	1		suspectPredicate
		p	2		suspectUuidsToAngerLevel
	m	()Ljava/util/Optional;	a	getActiveEntity
	m	(ILbiq;Ljava/lang/Integer;)Ljava/lang/Integer;	a	lambda$increaseAnger$6
		p	1		suspect
		p	2		anger
	m	(Lakq;)V	a	convertFromUuids
		p	1		world
	m	(Lakq;Ljava/util/function/Predicate;)V	a	tick
		p	1		world
		p	2		suspectPredicate
	m	(Lbiq;)V	a	clearAnger
		p	1		entity
	m	(Lbiq;I)I	a	increaseAnger
		p	1		entity
		p	2		amount
	m	(Lcom/mojang/datafixers/util/Pair;)V	a	lambda$new$3
		p	1		suspect
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntMap$Entry;)Lcom/mojang/datafixers/util/Pair;	a	lambda$createUuidAngerPairs$5
		p	0		suspect
	m	(Ljava/util/function/Predicate;)Lcom/mojang/serialization/Codec;	a	codec
		p	0		suspectPredicate
	m	(Ljava/util/function/Predicate;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$codec$2
		p	1		instance
	m	(Ljava/util/function/Predicate;Ljava/util/List;)Lcax;	a	lambda$codec$1
		p	1		suspectUuidsToAngerLevel
	m	()Ljava/util/List;	b	createUuidAngerPairs
	m	(Lbiq;)I	b	getActiveAnger
		p	1		entity
	m	()V	c	sortAndUpdateHighestAnger
	m	(Lbiq;)Lbjg;	c	lambda$getActiveEntity$8
		p	0		suspect
	m	()Lbiq;	d	getTopSuspect
	m	(Lbiq;)Z	d	lambda$getActiveEntity$7
		p	0		suspect
	m	(Lbiq;)Lcom/mojang/datafixers/util/Pair;	e	lambda$createUuidAngerPairs$4
		p	1		suspect
	f	I	a	CONVERSION_DELAY
	f	I	b	MAX_ANGER
	f	Ljava/util/ArrayList;	c	suspects
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	d	angerBySuspect
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	e	angerByUuid
	f	I	f	DEFAULT_ANGER_DECREASE
	f	I	g	conversionDelay
	f	I	h	highestAnger
	f	Lcom/mojang/serialization/Codec;	i	SUSPECT_ANGER_PAIR
	f	Ljava/util/function/Predicate;	j	filter
	f	Lcax$a;	k	suspectSorter
c	cax$1	net/minecraft/world/entity/monster/warden/AngerManagement$1
	f	[I	a	$SwitchMap$net$minecraft$world$entity$Entity$RemovalReason
c	cax$a	net/minecraft/world/entity/monster/warden/AngerManagement$Sorter
	m	()Lcax;	a	angerManagement
	m	(Lbiq;Lbiq;)I	a	compare
	f	Lcax;	a	angerManagement
c	cay	net/minecraft/world/entity/monster/warden/Warden
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lbiq;)Z	C	doHurtTarget
		p	1		target
	m	(Lbiq;)V	D	doPush
		p	1		entity
	m	(F)F	E	getTendrilAnimation
		p	1		tickDelta
	m	(F)F	F	getHeartAnimation
		p	1		tickDelta
	m	()V	W	sendDebugPackets
	m	()V	X	customServerAiStep
	m	(Laee;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Lakq;Lehn;Lbiq;I)V	a	applyDarknessAround
		p	0		world
		p	1		pos
		p	2		entity
		p	3		range
	m	(Lbho;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbim;)V	a	clientDiggingParticles
		p	1		animationState
	m	(Lbiq;)Z	a	canTargetEntity
		p	1		entity
	m	(Lbiq;IZ)V	a	increaseAngerAt
		p	1		entity
		p	2		amount
		p	3		listening
	m	(Lbiq;Lbir;F)Lorg/joml/Vector3f;	a	getPassengerAttachmentPoint
		p	1		passenger
		p	2		dimensions
		p	3		scaleFactor
	m	(Lbjs;)Lbir;	a	getDimensions
		p	1		pose
	m	(Lcax;)V	a	lambda$readAdditionalSaveData$2
		p	1		angerManager
	m	(Lcay;)Lbkg;	a	access$000
	m	(Lcom/mojang/serialization/Dynamic;)Lbkg;	a	makeBrain
		p	1		dynamic
	m	(Lcpy;)Z	a	checkSpawnObstruction
		p	1		world
	m	(Lcqk;Lbgw;Lbjk;Lbjz;Lqw;)Lbjz;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Ldkc$a;)V	a	lambda$readAdditionalSaveData$3
		p	1		listenerData
	m	(Lgw;Lcpy;)F	a	getWalkTargetValue
		p	1		pos
		p	2		world
	m	(Ljava/util/function/BiConsumer;)V	a	updateDynamicGameEventListener
		p	1		callback
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lqw;Lrq;)V	a	lambda$addAdditionalSaveData$1
		p	1		listenerData
	m	(Lwx;)V	a	recreateFromPacket
		p	1		packet
	m	()F	aK	nextStep
	m	()Z	aV	dampensVibrations
	m	()V	a_	defineSynchedData
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	(Lbho;)Z	b	isInvulnerableTo
		p	1		damageSource
	m	(Lbiq;)V	b	clearAnger
		p	1		entity
	m	(Lcpv;)Lbsp;	b	createNavigation
		p	1		world
	m	(Lgw;Ldfj;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lqw;Lrq;)V	b	lambda$addAdditionalSaveData$0
		p	1		angerNbt
	m	()Z	bs	isPushable
	m	(Lbiq;)V	c	increaseAngerAt
		p	1		entity
	m	()Z	cL	ignoreExplosion
	m	(Lbho;)Lapc;	d	getHurtSound
		p	1		source
	m	()Lbkg;	dN	getBrain
	m	()Lvd;	di	getAddEntityPacket
	m	()F	eV	getSoundVolume
	m	()Z	fF	canDisableShield
	m	()Ljava/util/Optional;	gd	getEntityAngryAt
	m	()Lcax;	ge	getAngerManagement
	m	()Ldkc$a;	gf	getVibrationData
	m	()Ldkc$d;	gg	getVibrationUser
	m	()Z	gh	isDiggingOrEmerging
	m	()V	gk	syncClientAngerLevel
	m	()I	gl	getHeartBeatDelay
	m	()V	gm	playListeningSound
	m	()I	gn	getActiveAnger
	m	(D)Z	h	removeWhenFarAway
		p	1		distanceSquared
	m	(Lbjg;)V	j	setAttackTarget
		p	1		target
	m	()V	l	tick
	m	()Lapc;	l_	getDeathSound
	m	(Lbiq;)Z	o	canRide
		p	1		entity
	m	()Lbjg;	q	getTarget
	m	()Lbkl$a;	s	createAttributes
	m	()I	t	getClientAngerLevel
	m	()Lapc;	w	getAmbientSound
	m	()Lcaw;	y	getAngerLevel
	f	Lbim;	b	roarAnimationState
	f	Lbim;	bT	attackAnimationState
	f	Lbim;	bU	sonicBoomAnimationState
	f	Lorg/slf4j/Logger;	bV	LOGGER
	f	I	bW	VIBRATION_COOLDOWN_TICKS
	f	I	bX	TIME_TO_USE_MELEE_UNTIL_SONIC_BOOM
	f	I	bY	MAX_HEALTH
	f	F	bZ	MOVEMENT_SPEED_WHEN_FIGHTING
	f	Lbim;	c	sniffAnimationState
	f	F	ca	KNOCKBACK_RESISTANCE
	f	F	cb	ATTACK_KNOCKBACK
	f	I	cc	ATTACK_DAMAGE
	f	Laee;	cd	CLIENT_ANGER_LEVEL
	f	I	ce	DARKNESS_DISPLAY_LIMIT
	f	I	cf	DARKNESS_DURATION
	f	I	cg	DARKNESS_RADIUS
	f	I	ch	DARKNESS_INTERVAL
	f	I	ci	ANGERMANAGEMENT_TICK_DELAY
	f	I	cj	DEFAULT_ANGER
	f	I	ck	PROJECTILE_ANGER
	f	I	cl	ON_HURT_ANGER_BOOST
	f	I	cm	RECENT_PROJECTILE_TICK_THRESHOLD
	f	I	cn	TOUCH_COOLDOWN_TICKS
	f	I	co	DIGGING_PARTICLES_AMOUNT
	f	F	cp	DIGGING_PARTICLES_DURATION
	f	F	cq	DIGGING_PARTICLES_OFFSET
	f	I	cr	PROJECTILE_ANGER_DISTANCE
	f	I	cs	tendrilAnimation
	f	I	ct	tendrilAnimationO
	f	I	cu	heartAnimation
	f	I	cv	heartAnimationO
	f	Ldjq;	cw	dynamicGameEventListener
	f	Ldkc$d;	cx	vibrationUser
	f	Ldkc$a;	cy	vibrationData
	f	Lcax;	cz	angerManagement
	f	Lbim;	d	emergeAnimationState
	f	Lbim;	e	diggingAnimationState
c	cay$1	net/minecraft/world/entity/monster/warden/Warden$1
	m	(Lcay;Lbji;Lcpv;)V	<init>	<init>
		p	2		entity
		p	3		world
	m	(I)Lebd;	a	createPathFinder
		p	1		range
	f	Lcay;	p	this$0
c	cay$1$1	net/minecraft/world/entity/monster/warden/Warden$1$1
	m	(Lcay$1;Leba;I)V	<init>	<init>
		p	2		pathNodeMaker
		p	3		range
	m	(Leaz;Leaz;)F	a	distance
		p	1		a
		p	2		b
	f	Lcay$1;	a	this$1
c	cay$2	net/minecraft/world/entity/monster/warden/Warden$2
	f	[I	a	$SwitchMap$net$minecraft$world$entity$Pose
c	cay$a	net/minecraft/world/entity/monster/warden/Warden$VibrationUser
	m	()I	a	getListenerRadius
	m	(Lakq;Lgw;Ldjt;Lbiq;Lbiq;F)V	a	onReceiveVibration
		p	1		world
		p	2		pos
		p	3		event
		p	4		sourceEntity
		p	5		entity
		p	6		distance
	m	(Lakq;Lgw;Ldjt;Ldjt$a;)Z	a	canReceiveVibration
		p	1		world
		p	2		pos
		p	3		event
		p	4		emitter
	m	()Ldjx;	b	getPositionSource
	m	()Laqh;	c	getListenableEvents
	m	()Z	d	canTriggerAvoidVibration
	f	Lcay;	a	this$0
	f	I	b	GAME_EVENT_LISTENER_RANGE
	f	Ldjx;	c	positionSource
c	caz	net/minecraft/world/entity/monster/warden/WardenAi
	m	(Lbjg;)V	a	setDigCooldown
		p	0		warden
	m	(Lbjg;Lbjg;)Z	a	lambda$isTarget$5
		p	1		entityx
	m	(Lbkg;)V	a	initCoreActivity
		p	0		brain
	m	(Lboj$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		context
	m	(Lboj$b;Lbok;)Lbom;	a	lambda$static$1
		p	1		digCooldown
	m	(Lboj$b;Lbok;Lakq;Lcay;J)Z	a	lambda$static$0
		p	2		world
		p	3		entity
		p	4		time
	m	(Lcay;)V	a	updateActivity
		p	0		warden
	m	(Lcay;Lbjg;)Z	a	isTarget
		p	0		warden
		p	1		entity
	m	(Lcay;Lbkg;)V	a	initFightActivity
		p	0		warden
		p	1		brain
	m	(Lcay;Lcom/mojang/serialization/Dynamic;)Lbkg;	a	makeBrain
		p	0		warden
		p	1		dynamic
	m	(Lcay;Lgw;)V	a	setDisturbanceLocation
		p	0		warden
		p	1		pos
	m	(Lbkg;)V	b	initEmergeActivity
		p	0		brain
	m	(Lcay;Lbjg;)V	b	onTargetInvalid
		p	0		warden
		p	1		suspect
	m	(Lbkg;)V	c	initDiggingActivity
		p	0		brain
	m	(Lcay;Lbjg;)Z	c	lambda$initFightActivity$4
		p	1		entity
	m	(Lbkg;)V	d	initIdleActivity
		p	0		brain
	m	(Lcay;Lbjg;)Z	d	lambda$initFightActivity$3
		p	1		entity
	m	(Lbkg;)V	e	initInvestigateActivity
		p	0		brain
	m	(Lbkg;)V	f	initSniffingActivity
		p	0		brain
	m	(Lbkg;)V	g	initRoarActivity
		p	0		brain
	f	I	a	EMERGE_DURATION
	f	I	b	ROAR_DURATION
	f	I	c	DIGGING_COOLDOWN
	f	F	d	SPEED_MULTIPLIER_WHEN_IDLING
	f	F	e	SPEED_MULTIPLIER_WHEN_INVESTIGATING
	f	F	f	SPEED_MULTIPLIER_WHEN_FIGHTING
	f	I	g	MELEE_ATTACK_COOLDOWN
	f	I	h	DIGGING_DURATION
	f	I	i	SNIFFING_DURATION
	f	I	j	DISTURBANCE_LOCATION_EXPIRY_TIME
	f	Ljava/util/List;	k	SENSOR_TYPES
	f	Ljava/util/List;	l	MEMORY_TYPES
	f	Lbky;	m	DIG_COOLDOWN_SETTER
c	cba	net/minecraft/world/entity/monster/warden/WardenSpawnTracker
	m	(III)V	<init>	<init>
		p	1		ticksSinceLastWarning
		p	2		warningLevel
		p	3		cooldownTicks
	m	()V	a	tick
	m	(I)V	a	setWarningLevel
		p	1		warningLevel
	m	(Lakq;Lgw;)Z	a	hasNearbyWarden
		p	0		world
		p	1		pos
	m	(Lakq;Lgw;Lakr;)Ljava/util/OptionalInt;	a	tryWarn
		p	0		world
		p	1		pos
		p	2		player
	m	(Lakr;)Ljava/util/stream/Stream;	a	lambda$tryWarn$5
		p	0		playerx
	m	(Lcba;)V	a	copyData
		p	1		other
	m	(Lcba;Lakr;)V	a	lambda$tryWarn$7
		p	1		nearbyPlayer
	m	(Lcba;Lcba;)V	a	lambda$tryWarn$6
		p	1		warningManager
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	(Lehn;Lakr;)Z	a	lambda$getNearbyPlayers$8
		p	1		player
	m	()V	b	reset
	m	(Lakq;Lgw;)Ljava/util/List;	b	getNearbyPlayers
		p	0		world
		p	1		pos
	m	(Lakr;)Z	b	lambda$tryWarn$4
		p	0		nearbyPlayer
	m	(Lcba;)Ljava/lang/Integer;	b	lambda$static$2
		p	0		manager
	m	()I	c	getWarningLevel
	m	(Lcba;)Ljava/lang/Integer;	c	lambda$static$1
		p	0		manager
	m	()Z	d	onCooldown
	m	(Lcba;)Ljava/lang/Integer;	d	lambda$static$0
		p	0		manager
	m	()V	e	increaseWarningLevel
	m	()V	f	decreaseWarningLevel
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	MAX_WARNING_LEVEL
	f	D	c	PLAYER_SEARCH_RADIUS
	f	I	d	WARNING_CHECK_DIAMETER
	f	I	e	DECREASE_WARNING_LEVEL_EVERY_INTERVAL
	f	I	f	WARNING_LEVEL_INCREASE_COOLDOWN
	f	I	g	ticksSinceLastWarning
	f	I	h	warningLevel
	f	I	i	cooldownTicks
c	cbb	net/minecraft/world/entity/monster/warden/package-info
c	cbc	net/minecraft/world/entity/npc/AbstractVillager
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lbho;)V	a	die
		p	1		damageSource
	m	(Lcbu;)Z	a	canBeLeashed
		p	1		player
	m	(Lcot;)V	a	notifyTrade
		p	1		offer
	m	(Lcou;)V	a	overrideOffers
		p	1		offers
	m	(Lcou;[Lcbl$g;I)V	a	addOffersFromItemListings
		p	1		recipeList
		p	2		pool
		p	3		count
	m	(Lcqk;Lbgw;Lbjk;Lbjz;Lqw;)Lbjz;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lit;)V	a	addParticlesAroundSelf
		p	1		parameters
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(I)Lbjy;	a_	getSlot
		p	1		mappedIndex
	m	(Lakq;)Lbiq;	b	changeDimension
		p	1		destination
	m	(Lbjs;Lbir;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lcot;)V	b	rewardTradeXp
		p	1		offer
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lcbu;)V	f	setTradingPlayer
		p	1		customer
	m	()Lcbu;	gd	getTradingPlayer
	m	()Z	ge	isTrading
	m	()Lcou;	gf	getOffers
	m	()Z	gg	showProgressBar
	m	()Lapc;	gh	getNotifyTradeSound
	m	()V	gi	playCelebrateSound
	m	()V	gj	stopTrading
	m	()V	gk	updateTrades
	m	()Z	gl	isClientSide
	m	(Lcjf;)V	l	notifyTradeUpdated
		p	1		stack
	m	(F)Lehn;	q	getRopeHoldPosition
		p	1		delta
	m	()I	s	getUnhappyCounter
	m	(I)V	s	setUnhappyCounter
		p	1		ticks
	m	()I	t	getVillagerXp
	m	(I)V	t	overrideXp
		p	1		experience
	m	(Z)Lapc;	w	getTradeUpdatedSound
		p	1		sold
	m	()Lbhf;	y	getInventory
	f	I	bT	VILLAGER_SLOT_OFFSET
	f	Lcou;	bU	offers
	f	Laee;	bV	DATA_UNHAPPY_COUNTER
	f	I	bW	VILLAGER_INVENTORY_SIZE
	f	Lcbu;	bX	tradingPlayer
	f	Lbhf;	bY	inventory
c	cbd	net/minecraft/world/entity/npc/CatSpawner
	m	(Lakq;Lgw;)I	a	spawnInVillage
		p	1		world
		p	2		pos
	m	(Lakq;ZZ)I	a	tick
		p	1		world
		p	2		spawnMonsters
		p	3		spawnAnimals
	m	(Lgw;Lakq;)I	a	spawnCat
		p	1		pos
		p	2		world
	m	(Lhe;)Z	a	lambda$spawnInVillage$0
		p	0		entry
	m	(Lakq;Lgw;)I	b	spawnInHut
		p	1		world
		p	2		pos
	f	I	a	TICK_DELAY
	f	I	b	nextTick
c	cbe	net/minecraft/world/entity/npc/ClientSideMerchant
	m	(Lcbu;)V	<init>	<init>
		p	1		player
	m	(Lcot;)V	a	notifyTrade
		p	1		offer
	m	(Lcou;)V	a	overrideOffers
		p	1		offers
	m	(Lcbu;)V	f	setTradingPlayer
		p	1		customer
	m	()Lcbu;	gd	getTradingPlayer
	m	()Lcou;	gf	getOffers
	m	()Z	gg	showProgressBar
	m	()Lapc;	gh	getNotifyTradeSound
	m	()Z	gl	isClientSide
	m	(Lcjf;)V	l	notifyTradeUpdated
		p	1		stack
	m	()I	t	getVillagerXp
	m	(I)V	t	overrideXp
		p	1		experience
	f	Lcbu;	a	source
	f	Lcou;	b	offers
	f	I	c	xp
c	cbf	net/minecraft/world/entity/npc/InventoryCarrier
	m	(Lbji;Lcbf;Lbyn;)V	a	pickUpItem
		p	0		entity
		p	1		inventoryOwner
		p	2		item
	m	(Lqw;)V	a_	writeInventoryToTag
		p	1		nbt
	m	(Lqw;)V	c	readInventoryFromTag
		p	1		nbt
	m	()Lbhf;	y	getInventory
	f	Ljava/lang/String;	c_	TAG_INVENTORY
c	cbg	net/minecraft/world/entity/npc/Npc
c	cbh	net/minecraft/world/entity/npc/Villager
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		entityType
		p	2		world
	m	(Lbiu;Lcpv;Lcbm;)V	<init>	<init>
		p	1		entityType
		p	2		world
		p	3		type
	m	()Z	V_	canBreed
	m	()V	W	sendDebugPackets
	m	()V	X	customServerAiStep
	m	(J)Z	a	wantsToSpawnGolem
		p	1		time
	m	(JLcbh;)Z	a	lambda$spawnGolemIfNeeded$10
		p	2		villager
	m	(Lakq;JI)V	a	spawnGolemIfNeeded
		p	1		world
		p	2		time
		p	4		requiredCount
	m	(Lakq;Lbil;)Lbil;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lakq;Lbiq;Lbjg;)V	a	lambda$tellWitnessesThatIWasMurdered$5
		p	2		observer
	m	(Lakq;Lbjf;)V	a	thunderHit
		p	1		world
		p	2		lightning
	m	(Lakq;Lcbh;J)V	a	gossip
		p	1		world
		p	2		villager
		p	3		time
	m	(Lbhf;Ljava/util/Map$Entry;)I	a	lambda$countFoodPointsInInventory$8
		p	1		item
	m	(Lbho;)V	a	die
		p	1		damageSource
	m	(Lbiq;)V	a	tellWitnessesThatIWasMurdered
		p	1		killer
	m	(Lbjg;)V	a	setLastHurtByMob
		p	1		attacker
	m	(Lbkg;)V	a	registerBrainGoals
		p	1		brain
	m	(Lbse;)Z	a	lambda$getPlayerReputation$7
		p	0		gossipType
	m	(Lbsh;)V	a	releasePoi
		p	1		pos
	m	(Lbuc;Lbiq;)V	a	onReputationEventFrom
		p	1		interaction
		p	2		entity
	m	(Lcbh;Lhe;)Z	a	lambda$static$3
		p	0		villager
	m	(Lcbi;)V	a	setVillagerData
		p	1		villagerData
	m	(Lcom/mojang/serialization/Dynamic;)Lbkg;	a	makeBrain
		p	1		dynamic
	m	(Lcqk;Lbgw;Lbjk;Lbjz;Lqw;)Lbjz;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lnet/minecraft/server/MinecraftServer;Lbsh;Lhd;)V	a	lambda$releasePoi$6
		p	3		posx
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lqw;Lrq;)V	a	lambda$addAdditionalSaveData$4
	m	(Lrq;)V	a	setGossips
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	(J)Z	b	golemSpawnConditionsMet
		p	1		worldTime
	m	(Lakq;Lbil;)Lcbh;	b	getBreedOffspring
	m	(Lbyn;)V	b	pickUpItem
		p	1		item
	m	(Lcbh;Lhe;)Z	b	lambda$static$2
		p	0		villager
	m	(Lcbu;Lbgx;)Lbgy;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lcot;)V	b	rewardTradeXp
		p	1		offer
	m	(Lcou;)V	b	setOffers
		p	1		offers
	m	(Lgw;)V	b	startSleeping
		p	1		pos
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lakq;)V	c	refreshBrain
		p	1		world
	m	(Lcbh;Lhe;)Z	c	lambda$static$1
		p	0		villager
	m	()Ltl;	cn	getTypeName
	m	(Lbho;)Lapc;	d	getHurtSound
		p	1		source
	m	(Lcbh;Lhe;)Z	d	lambda$static$0
		p	0		villager
	m	()Lbkg;	dN	getBrain
	m	()Lbkg$b;	dO	brainProvider
	m	(Lcbu;)V	f	setTradingPlayer
		p	1		customer
	m	()V	fD	stopSleeping
	m	(Lcbu;)I	g	getPlayerReputation
		p	1		player
	m	()V	gA	resetSpecialPrices
	m	()V	gB	resendOffersToTradingPlayer
	m	()Z	gC	needsToRestock
	m	()Z	gD	allowedToRestock
	m	()V	gE	catchUpDemand
	m	()V	gF	updateDemand
	m	()V	gG	releaseAllPois
	m	()Z	gH	hungry
	m	()V	gI	eatUntilFull
	m	()Z	gJ	shouldIncreaseLevel
	m	()V	gK	increaseMerchantCareer
	m	()I	gL	countFoodPointsInInventory
	m	()V	gM	maybeDecayGossip
	m	()V	gN	resetNumberOfRestocks
	m	()V	gj	stopTrading
	m	()V	gk	updateTrades
	m	()Z	gl	isClientSide
	m	()Lbkl$a;	gm	createAttributes
	m	()Z	gn	assignProfessionWhenSpawned
	m	()Lcbi;	go	getVillagerData
	m	()Z	gp	canRestock
	m	()V	gq	restock
	m	()Z	gr	shouldRestock
	m	()V	gs	playWorkSound
	m	()Z	gt	isChasing
	m	()V	gu	eatAndDigestFood
	m	()Z	gv	hasExcessFood
	m	()Z	gw	wantsMoreFood
	m	()Z	gx	hasFarmSeeds
	m	()Lbsd;	gy	getGossips
	m	()V	gz	setUnhappy
	m	(D)Z	h	removeWhenFarAway
		p	1		distanceSquared
	m	(Lcbu;)V	h	startTrading
		p	1		customer
	m	(Lcbu;)V	i	updateSpecialPrices
		p	1		player
	m	(Lcjf;)Z	k	wantsToPickUp
		p	1		stack
	m	()V	l	tick
	m	()Lapc;	l_	getDeathSound
	m	()V	m	ageBoundaryReached
	m	(Lcjf;)Z	m	lambda$hasFarmSeeds$9
		p	0		stack
	m	()I	t	getVillagerXp
	m	(I)V	u	setVillagerXp
		p	1		experience
	m	(I)V	v	digestFood
		p	1		amount
	m	()Lapc;	w	getAmbientSound
	m	(Z)V	x	setChasing
	f	I	bV	BREEDING_FOOD_THRESHOLD
	f	Ljava/util/Map;	bW	FOOD_POINTS
	f	F	bX	SPEED_MODIFIER
	f	Ljava/util/Map;	bY	POI_MEMORIES
	f	Lorg/slf4j/Logger;	bZ	LOGGER
	f	Laee;	ca	DATA_VILLAGER_DATA
	f	I	cb	TRADES_PER_LEVEL
	f	Ljava/util/Set;	cc	WANTED_ITEMS
	f	I	cd	MAX_GOSSIP_TOPICS
	f	I	ce	GOSSIP_COOLDOWN
	f	I	cf	GOSSIP_DECAY_INTERVAL
	f	I	cg	REPUTATION_CHANGE_PER_EVENT
	f	I	ch	HOW_FAR_AWAY_TO_TALK_TO_OTHER_VILLAGERS_ABOUT_GOLEMS
	f	I	ci	HOW_MANY_VILLAGERS_NEED_TO_AGREE_TO_SPAWN_A_GOLEM
	f	J	cj	TIME_SINCE_SLEEPING_FOR_GOLEM_SPAWNING
	f	I	ck	updateMerchantTimer
	f	Z	cl	increaseProfessionLevelOnUpdate
	f	Lcbu;	cm	lastTradedPlayer
	f	Z	cn	chasing
	f	I	co	foodLevel
	f	Lbsd;	cp	gossips
	f	J	cq	lastGossipTime
	f	J	cr	lastGossipDecayTime
	f	I	cs	villagerXp
	f	J	ct	lastRestockGameTime
	f	I	cu	numberOfRestocksToday
	f	J	cv	lastRestockCheckDayTime
	f	Z	cw	assignProfessionWhenSpawned
	f	Lcom/google/common/collect/ImmutableList;	cx	MEMORY_TYPES
	f	Lcom/google/common/collect/ImmutableList;	cy	SENSOR_TYPES
c	cbi	net/minecraft/world/entity/npc/VillagerData
	m	(Lcbm;Lcbk;I)V	<init>	<init>
		p	1		type
		p	2		profession
		p	3		level
	m	()Lcbm;	a	getType
	m	(I)Lcbi;	a	setLevel
		p	1		level
	m	(Lcbi;)Ljava/lang/Integer;	a	lambda$static$4
	m	(Lcbk;)Lcbi;	a	setProfession
		p	1		profession
	m	(Lcbm;)Lcbi;	a	setType
		p	1		type
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$5
		p	0		instance
	m	()Lcbk;	b	getProfession
	m	(I)I	b	getMinXpPerLevel
		p	0		level
	m	(Lcbi;)Lcbk;	b	lambda$static$3
	m	()I	c	getLevel
	m	(I)I	c	getMaxXpPerLevel
		p	0		level
	m	(Lcbi;)Lcbm;	c	lambda$static$1
	m	()Lcbk;	d	lambda$static$2
	m	(I)Z	d	canLevelUp
		p	0		level
	m	()Lcbm;	e	lambda$static$0
	f	I	a	MIN_VILLAGER_LEVEL
	f	I	b	MAX_VILLAGER_LEVEL
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	[I	d	NEXT_LEVEL_XP_THRESHOLDS
	f	Lcbm;	e	type
	f	Lcbk;	f	profession
	f	I	g	level
c	cbj	net/minecraft/world/entity/npc/VillagerDataHolder
	m	()Lcbm;	a	getVariant
	m	(Lcbi;)V	a	setVillagerData
		p	1		villagerData
	m	(Lcbm;)V	a	setVariant
		p	1		variant
	m	(Ljava/lang/Object;)V	a	setVariant
		p	1		variant
	m	()Ljava/lang/Object;	c	getVariant
	m	()Lcbi;	go	getVillagerData
c	cbk	net/minecraft/world/entity/npc/VillagerProfession
	m	(Ljava/lang/String;Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lcom/google/common/collect/ImmutableSet;Lcom/google/common/collect/ImmutableSet;Lapc;)V	<init>	<init>
		p	1		id
	m	()Ljava/lang/String;	a	name
	m	(Laev;Lhe;)Z	a	lambda$register$4
		p	1		entry
	m	(Lhe;)Z	a	lambda$static$0
		p	0		poiType
	m	(Ljava/lang/String;Laev;Lapc;)Lcbk;	a	register
		p	0		id
		p	1		heldWorkstation
		p	2		workSound
	m	(Ljava/lang/String;Laev;Lcom/google/common/collect/ImmutableSet;Lcom/google/common/collect/ImmutableSet;Lapc;)Lcbk;	a	register
		p	0		id
		p	1		heldWorkstation
		p	2		gatherableItems
		p	3		secondaryJobSites
		p	4		workSound
	m	(Ljava/lang/String;Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lapc;)Lcbk;	a	register
		p	0		id
		p	1		heldWorkstation
		p	2		acquirableWorkstation
		p	3		workSound
	m	(Ljava/lang/String;Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lcom/google/common/collect/ImmutableSet;Lcom/google/common/collect/ImmutableSet;Lapc;)Lcbk;	a	register
		p	0		id
		p	1		heldWorkstation
		p	2		acquirableWorkstation
		p	3		gatherableItems
		p	4		secondaryJobSites
		p	5		workSound
	m	()Ljava/util/function/Predicate;	b	heldJobSite
	m	(Laev;Lhe;)Z	b	lambda$register$3
		p	1		entry
	m	()Ljava/util/function/Predicate;	c	acquirableJobSite
	m	(Laev;Lhe;)Z	c	lambda$register$2
		p	1		entry
	m	()Lcom/google/common/collect/ImmutableSet;	d	requestedItems
	m	(Laev;Lhe;)Z	d	lambda$register$1
		p	1		entry
	m	()Lcom/google/common/collect/ImmutableSet;	e	secondaryPoi
	m	()Lapc;	f	workSound
	f	Ljava/util/function/Predicate;	a	ALL_ACQUIRABLE_JOBS
	f	Lcbk;	b	NONE
	f	Lcbk;	c	ARMORER
	f	Lcbk;	d	BUTCHER
	f	Lcbk;	e	CARTOGRAPHER
	f	Lcbk;	f	CLERIC
	f	Lcbk;	g	FARMER
	f	Lcbk;	h	FISHERMAN
	f	Lcbk;	i	FLETCHER
	f	Lcbk;	j	LEATHERWORKER
	f	Lcbk;	k	LIBRARIAN
	f	Lcbk;	l	MASON
	f	Lcbk;	m	NITWIT
	f	Lcbk;	n	SHEPHERD
	f	Lcbk;	o	TOOLSMITH
	f	Lcbk;	p	WEAPONSMITH
	f	Ljava/lang/String;	q	name
	f	Ljava/util/function/Predicate;	r	heldJobSite
	f	Ljava/util/function/Predicate;	s	acquirableJobSite
	f	Lcom/google/common/collect/ImmutableSet;	t	requestedItems
	f	Lcom/google/common/collect/ImmutableSet;	u	secondaryPoi
	f	Lapc;	v	workSound
c	cbl	net/minecraft/world/entity/npc/VillagerTrades
	m	()Lcbl$g;	a	specialBooks
	m	(I)Lcbl$g;	a	commonBooks
		p	0		experience
	m	(Lcja;Lcno;I)Lcjf;	a	enchant
		p	0		item
		p	1		enchantment
		p	2		level
	m	(Lclc;)Lcjf;	a	potion
		p	0		potion
	m	(Lcom/google/common/collect/ImmutableMap;)Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	a	toIntMap
		p	0		map
	m	(Ljava/util/HashMap;)V	a	lambda$static$0
		p	0		map
	f	Ljava/util/Map;	a	TRADES
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	b	WANDERING_TRADER_TRADES
	f	Ljava/util/Map;	c	EXPERIMENTAL_TRADES
	f	Ljava/util/List;	d	EXPERIMENTAL_WANDERING_TRADER_TRADES
	f	I	e	DEFAULT_SUPPLY
	f	I	f	COMMON_ITEMS_SUPPLY
	f	I	g	UNCOMMON_ITEMS_SUPPLY
	f	I	h	XP_LEVEL_1_SELL
	f	I	i	XP_LEVEL_1_BUY
	f	I	j	XP_LEVEL_2_SELL
	f	I	k	XP_LEVEL_2_BUY
	f	I	l	XP_LEVEL_3_SELL
	f	I	m	XP_LEVEL_3_BUY
	f	I	n	XP_LEVEL_4_SELL
	f	I	o	XP_LEVEL_4_BUY
	f	I	p	XP_LEVEL_5_TRADE
	f	F	q	LOW_TIER_PRICE_MULTIPLIER
	f	F	r	HIGH_TIER_PRICE_MULTIPLIER
	f	Lcbl$l;	s	DESERT_MAP
	f	Lcbl$l;	t	SAVANNA_MAP
	f	Lcbl$l;	u	PLAINS_MAP
	f	Lcbl$l;	v	TAIGA_MAP
	f	Lcbl$l;	w	SNOWY_MAP
	f	Lcbl$l;	x	JUNGLE_MAP
	f	Lcbl$l;	y	SWAMP_MAP
c	cbl$a	net/minecraft/world/entity/npc/VillagerTrades$DyedArmorForEmeralds
	m	(Lcja;I)V	<init>	<init>
		p	1		item
		p	2		price
	m	(Lcja;III)V	<init>	<init>
		p	1		item
		p	2		price
		p	3		maxUses
		p	4		experience
	m	(Lasc;)Lchu;	a	getRandomDye
		p	0		random
	m	(Lbiq;Lasc;)Lcot;	a	getOffer
		p	1		entity
		p	2		random
	f	Lcja;	a	item
	f	I	b	value
	f	I	c	maxUses
	f	I	d	villagerXp
c	cbl$b	net/minecraft/world/entity/npc/VillagerTrades$EmeraldForItems
	m	(Lcjf;III)V	<init>	<init>
		p	1		stack
		p	2		maxUses
		p	3		experience
		p	4		price
	m	(Lcpu;III)V	<init>	<init>
		p	1		item
		p	2		count
		p	3		maxUses
		p	4		experience
	m	(Lcpu;IIII)V	<init>	<init>
		p	1		item
		p	2		count
		p	3		maxUses
		p	4		experience
		p	5		price
	m	(Lbiq;Lasc;)Lcot;	a	getOffer
		p	1		entity
		p	2		random
	f	Lcjf;	a	itemStack
	f	I	b	maxUses
	f	I	c	villagerXp
	f	I	d	emeraldAmount
	f	F	e	priceMultiplier
c	cbl$c	net/minecraft/world/entity/npc/VillagerTrades$EmeraldsForVillagerTypeItem
	m	(IIILjava/util/Map;)V	<init>	<init>
		p	1		count
		p	2		maxUses
		p	3		experience
		p	4		map
	m	(Lbiq;Lasc;)Lcot;	a	getOffer
		p	1		entity
		p	2		random
	m	(Lcbm;)V	a	lambda$new$1
		p	0		villagerType
	m	(Ljava/util/Map;Lcbm;)Z	a	lambda$new$0
		p	1		villagerType
	f	Ljava/util/Map;	a	trades
	f	I	b	cost
	f	I	c	maxUses
	f	I	d	villagerXp
c	cbl$d	net/minecraft/world/entity/npc/VillagerTrades$EnchantBookForEmeralds
	m	(I)V	<init>	<init>
		p	1		experience
	m	(III[Lcno;)V	<init>	<init>
		p	1		experience
		p	2		minLevel
		p	3		maxLevel
		p	4		possibleEnchantments
	m	(I[Lcno;)V	<init>	<init>
		p	1		experience
		p	2		possibleEnchantments
	m	(I)[Lcno;	a	lambda$new$0
	m	(Lbiq;Lasc;)Lcot;	a	getOffer
		p	1		entity
		p	2		random
	f	I	a	villagerXp
	f	Ljava/util/List;	b	tradeableEnchantments
	f	I	c	minLevel
	f	I	d	maxLevel
c	cbl$e	net/minecraft/world/entity/npc/VillagerTrades$EnchantedItemForEmeralds
	m	(Lcja;III)V	<init>	<init>
		p	1		item
		p	2		basePrice
		p	3		maxUses
		p	4		experience
	m	(Lcja;IIIF)V	<init>	<init>
		p	1		item
		p	2		basePrice
		p	3		maxUses
		p	4		experience
		p	5		multiplier
	m	(Lbiq;Lasc;)Lcot;	a	getOffer
		p	1		entity
		p	2		random
	f	Lcjf;	a	itemStack
	f	I	b	baseEmeraldCost
	f	I	c	maxUses
	f	I	d	villagerXp
	f	F	e	priceMultiplier
c	cbl$f	net/minecraft/world/entity/npc/VillagerTrades$FailureItemListing
	m	(Lbiq;Lasc;)Lcot;	a	getOffer
		p	1		entity
		p	2		random
c	cbl$g	net/minecraft/world/entity/npc/VillagerTrades$ItemListing
	m	(Lbiq;Lasc;)Lcot;	a	getOffer
		p	1		entity
		p	2		random
c	cbl$h	net/minecraft/world/entity/npc/VillagerTrades$ItemsAndEmeraldsToItems
	m	(Lcpu;IILcja;IIIF)V	<init>	<init>
		p	1		item
		p	2		count
		p	3		price
		p	4		processed
		p	5		processedCount
		p	6		maxUses
		p	7		experience
		p	8		multiplier
	m	(Lcpu;IILcjf;IIIF)V	<init>	<init>
		p	1		item
		p	2		count
		p	3		price
		p	4		processed
		p	5		processedCount
		p	6		maxUses
		p	7		experience
		p	8		multiplier
	m	(Lbiq;Lasc;)Lcot;	a	getOffer
		p	1		entity
		p	2		random
	f	Lcjf;	a	fromItem
	f	I	b	emeraldCost
	f	Lcjf;	c	toItem
	f	I	d	maxUses
	f	I	e	villagerXp
	f	F	f	priceMultiplier
c	cbl$i	net/minecraft/world/entity/npc/VillagerTrades$ItemsForEmeralds
	m	(Lcja;III)V	<init>	<init>
		p	1		item
		p	2		price
		p	3		count
		p	4		experience
	m	(Lcja;IIII)V	<init>	<init>
		p	1		item
		p	2		price
		p	3		count
		p	4		maxUses
		p	5		experience
	m	(Lcja;IIIIF)V	<init>	<init>
		p	1		item
		p	2		price
		p	3		count
		p	4		maxUses
		p	5		experience
		p	6		multiplier
	m	(Lcjf;IIII)V	<init>	<init>
		p	1		stack
		p	2		price
		p	3		count
		p	4		maxUses
		p	5		experience
	m	(Lcjf;IIIIF)V	<init>	<init>
		p	1		sell
		p	2		price
		p	3		count
		p	4		maxUses
		p	5		experience
		p	6		multiplier
	m	(Lcsv;IIII)V	<init>	<init>
		p	1		block
		p	2		price
		p	3		count
		p	4		maxUses
		p	5		experience
	m	(Lbiq;Lasc;)Lcot;	a	getOffer
		p	1		entity
		p	2		random
	f	Lcjf;	a	itemStack
	f	I	b	emeraldCost
	f	I	c	maxUses
	f	I	d	villagerXp
	f	F	e	priceMultiplier
c	cbl$j	net/minecraft/world/entity/npc/VillagerTrades$SuspiciousStewForEmerald
	m	(Lbib;II)V	<init>	<init>
		p	1		effect
		p	2		duration
		p	3		experience
	m	(Ljava/util/List;IF)V	<init>	<init>
		p	1		stewEffects
		p	2		experience
		p	3		multiplier
	m	(Lbiq;Lasc;)Lcot;	a	getOffer
		p	1		entity
		p	2		random
	f	Ljava/util/List;	a	effects
	f	I	b	xp
	f	F	c	priceMultiplier
c	cbl$k	net/minecraft/world/entity/npc/VillagerTrades$TippedArrowForItemsAndEmeralds
	m	(Lcja;ILcja;IIII)V	<init>	<init>
		p	1		arrow
		p	2		secondCount
		p	3		tippedArrow
		p	4		sellCount
		p	5		price
		p	6		maxUses
		p	7		experience
	m	(Lbiq;Lasc;)Lcot;	a	getOffer
		p	1		entity
		p	2		random
	m	(Lclc;)Z	a	lambda$getOffer$0
		p	0		potion
	f	Lcjf;	a	toItem
	f	I	b	toCount
	f	I	c	emeraldCost
	f	I	d	maxUses
	f	I	e	villagerXp
	f	Lcja;	f	fromItem
	f	I	g	fromCount
	f	F	h	priceMultiplier
c	cbl$l	net/minecraft/world/entity/npc/VillagerTrades$TreasureMapForEmeralds
	m	(ILaqh;Ljava/lang/String;Lebt$a;II)V	<init>	<init>
		p	1		price
		p	2		structure
		p	3		nameKey
		p	4		iconType
		p	5		maxUses
		p	6		experience
	m	(Lbiq;Lasc;)Lcot;	a	getOffer
		p	1		entity
		p	2		random
	f	I	a	emeraldCost
	f	Laqh;	b	destination
	f	Ljava/lang/String;	c	displayName
	f	Lebt$a;	d	destinationType
	f	I	e	maxUses
	f	I	f	villagerXp
c	cbl$m	net/minecraft/world/entity/npc/VillagerTrades$TypeSpecificTrade
	m	()Ljava/util/Map;	a	trades
	m	(Lbiq;Lasc;)Lcot;	a	getOffer
		p	1		entity
		p	2		random
	m	(Lcbl$g;Lcbm;)Lcbl$g;	a	lambda$oneTradeInBiomes$1
		p	1		type
	m	(Lcbl$g;[Lcbm;)Lcbl$m;	a	oneTradeInBiomes
		p	0		factory
		p	1		types
	m	(Lcbm;)Lcbm;	a	lambda$oneTradeInBiomes$0
		p	0		type
	f	Ljava/util/Map;	a	trades
c	cbm	net/minecraft/world/entity/npc/VillagerType
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		name
	m	(Lhe;)Lcbm;	a	byBiome
		p	0		biomeEntry
	m	(Ljava/lang/String;)Lcbm;	a	register
		p	0		id
	m	(Ljava/util/HashMap;)V	a	lambda$static$0
		p	0		map
	f	Lcbm;	a	DESERT
	f	Lcbm;	b	JUNGLE
	f	Lcbm;	c	PLAINS
	f	Lcbm;	d	SAVANNA
	f	Lcbm;	e	SNOW
	f	Lcbm;	f	SWAMP
	f	Lcbm;	g	TAIGA
	f	Ljava/lang/String;	h	name
	f	Ljava/util/Map;	i	BY_BIOME
c	cbn	net/minecraft/world/entity/npc/WanderingTrader
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lakq;Lbil;)Lbil;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lcbn;)Lbsp;	a	access$000
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lcbn;)Lbsp;	b	access$100
	m	(Lcbu;Lbgx;)Lbgy;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lcot;)V	b	rewardTradeXp
		p	1		offer
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()V	b_	aiStep
	m	(Lcbn;)Lbsp;	c	access$200
	m	(Lcjf;)Lapc;	c	getDrinkingSound
		p	1		stack
	m	(Lbho;)Lapc;	d	getHurtSound
		p	1		source
	m	(Lcbn;)Lbsp;	d	access$300
	m	(Lcbn;)Z	e	lambda$registerGoals$1
		p	1		wanderingTrader
	m	(Lcbn;)Z	f	lambda$registerGoals$0
		p	1		wanderingTrader
	m	()Z	gg	showProgressBar
	m	()Lapc;	gh	getNotifyTradeSound
	m	()V	gk	updateTrades
	m	()I	gm	getDespawnDelay
	m	()V	gn	experimentalUpdateTrades
	m	()V	go	maybeDespawn
	m	()Lgw;	gq	getWanderTarget
	m	(D)Z	h	removeWhenFarAway
		p	1		distanceSquared
	m	(Lgw;)V	i	setWanderTarget
		p	1		wanderTarget
	m	()Lapc;	l_	getDeathSound
	m	(I)V	u	setDespawnDelay
		p	1		despawnDelay
	m	()Lapc;	w	getAmbientSound
	m	(Z)Lapc;	w	getTradeUpdatedSound
		p	1		sold
	m	()V	z	registerGoals
	f	I	bV	NUMBER_OF_TRADE_OFFERS
	f	Lgw;	bW	wanderTarget
	f	I	bX	despawnDelay
c	cbn$a	net/minecraft/world/entity/npc/WanderingTrader$WanderToPositionGoal
	m	(Lcbn;Lcbn;DD)V	<init>	<init>
		p	2		trader
		p	3		proximityDistance
		p	5		speed
	m	()Z	a	canUse
	m	(Lgw;D)Z	a	isTooFarAway
		p	1		pos
		p	2		proximityDistance
	m	()V	d	stop
	m	()V	e	tick
	f	Lcbn;	a	trader
	f	D	b	stopDistance
	f	D	c	speedModifier
	f	Lcbn;	d	this$0
c	cbo	net/minecraft/world/entity/npc/WanderingTraderSpawner
	m	(Lecl;)V	<init>	<init>
		p	1		properties
	m	(Lakq;)Z	a	spawn
		p	1		world
	m	(Lakq;Lcbn;I)V	a	tryToSpawnLlamaFor
		p	1		world
		p	2		wanderingTrader
		p	3		range
	m	(Lakq;ZZ)I	a	tick
		p	1		world
		p	2		spawnMonsters
		p	3		spawnAnimals
	m	(Lcpb;Lgw;)Z	a	hasEnoughSpace
		p	1		world
		p	2		pos
	m	(Lcpy;Lgw;I)Lgw;	a	findSpawnPositionNear
		p	1		world
		p	2		pos
		p	3		range
	m	(Lgw;)Z	a	lambda$spawn$1
		p	0		pos
	m	(Lhe;)Z	a	lambda$spawn$0
		p	0		poiType
	f	I	a	DEFAULT_SPAWN_DELAY
	f	I	b	DEFAULT_TICK_DELAY
	f	I	c	MIN_SPAWN_CHANCE
	f	I	d	MAX_SPAWN_CHANCE
	f	I	e	SPAWN_CHANCE_INCREASE
	f	I	f	SPAWN_ONE_IN_X_CHANCE
	f	I	g	NUMBER_OF_SPAWN_ATTEMPTS
	f	Lasc;	h	random
	f	Lecl;	i	serverLevelData
	f	I	j	tickDelay
	f	I	k	spawnDelay
	f	I	l	spawnChance
c	cbp	net/minecraft/world/entity/npc/package-info
c	cbq	net/minecraft/world/entity/package-info
c	cbr	net/minecraft/world/entity/player/Abilities
	m	()F	a	getFlyingSpeed
	m	(F)V	a	setFlyingSpeed
		p	1		flySpeed
	m	(Lqw;)V	a	addSaveData
		p	1		nbt
	m	()F	b	getWalkingSpeed
	m	(F)V	b	setWalkingSpeed
		p	1		walkSpeed
	m	(Lqw;)V	b	loadSaveData
		p	1		nbt
	f	Z	a	invulnerable
	f	Z	b	flying
	f	Z	c	mayfly
	f	Z	d	instabuild
	f	Z	e	mayBuild
	f	F	f	flyingSpeed
	f	F	g	walkingSpeed
c	cbs	net/minecraft/world/entity/player/ChatVisiblity
	m	(Ljava/lang/String;IILjava/lang/String;)V	<init>	<init>
		p	3		id
		p	4		translationKey
	m	()I	a	getId
	m	(I)Lcbs;	a	byId
		p	0		id
	m	()Ljava/lang/String;	b	getKey
	m	()[Lcbs;	c	$values
	f	Lcbs;	a	FULL
	f	Lcbs;	b	SYSTEM
	f	Lcbs;	c	HIDDEN
	f	Ljava/util/function/IntFunction;	d	BY_ID
	f	I	e	id
	f	Ljava/lang/String;	f	key
	f	[Lcbs;	g	$VALUES
c	cbt	net/minecraft/world/entity/player/Inventory
	m	(Lcbu;)V	<init>	<init>
		p	1		player
	m	()V	a	clearContent
	m	(D)V	a	swapPaint
		p	1		scrollAmount
	m	(I)Lcjf;	a	getItem
		p	1		slot
	m	(II)Lcjf;	a	removeItem
		p	1		slot
		p	2		amount
	m	(ILcbu;)V	a	lambda$hurtArmor$1
		p	1		player
	m	(ILcjf;)V	a	setItem
		p	1		slot
		p	2		stack
	m	(Laqh;)Z	a	contains
		p	1		tag
	m	(Lbho;F[I)V	a	hurtArmor
		p	1		damageSource
		p	2		amount
		p	3		slots
	m	(Lcbt;)V	a	replaceWith
		p	1		other
	m	(Lcbu;)Z	a	stillValid
		p	1		player
	m	(Lcby;)V	a	fillStackedContents
		p	1		finder
	m	(Lcjf;)V	a	setPickedItem
		p	1		stack
	m	(Lcjf;Lcjf;)Z	a	hasRemainingSpaceForItem
		p	1		existingStack
		p	2		stack
	m	(Lcjf;Z)V	a	placeItemBackInInventory
		p	1		stack
		p	2		notifiesClient
	m	(Ldfj;)F	a	getDestroySpeed
		p	1		block
	m	(Ljava/util/function/Predicate;ILbgr;)I	a	clearOrCountMatchingItems
		p	1		shouldRemove
		p	2		maxCount
		p	3		craftingInventory
	m	(Lrc;)Lrc;	a	save
		p	1		nbtList
	m	(Z)Lcjf;	a	removeFromSelected
		p	1		entireStack
	m	()Ltl;	ab	getName
	m	()Z	af_	isEmpty
	m	()I	b	getContainerSize
	m	(I)Lcjf;	b	removeItemNoUpdate
		p	1		slot
	m	(Lcjf;)I	b	findSlotMatchingItem
		p	1		stack
	m	(Lrc;)V	b	load
		p	1		nbtList
	m	(I)V	c	pickSlot
		p	1		slot
	m	(ILcjf;)Z	c	add
		p	1		slot
		p	2		stack
	m	(Lcjf;)I	c	findSlotMatchingUnusedItem
		p	1		stack
	m	(I)Z	d	isHotbarSlot
		p	0		slot
	m	(ILcjf;)I	d	addResource
		p	1		slot
		p	2		stack
	m	(Lcjf;)I	d	getSlotWithRemainingSpace
		p	1		stack
	m	()V	e	setChanged
	m	(I)Lcjf;	e	getArmor
		p	1		slot
	m	(Lcjf;)Z	e	add
		p	1		stack
	m	()Lcjf;	f	getSelected
	m	(Lcjf;)V	f	placeItemBackInInventory
		p	1		stack
	m	()I	g	getSelectionSize
	m	(Lcjf;)V	g	removeItem
		p	1		stack
	m	()I	h	getFreeSlot
	m	(Lcjf;)Z	h	contains
		p	1		stack
	m	()I	i	getSuitableHotbarSlot
	m	(Lcjf;)I	i	addResource
		p	1		stack
	m	()V	j	tick
	m	(Lcjf;)Ljava/lang/String;	j	lambda$add$0
	m	()V	k	dropAll
	m	()I	l	getTimesChanged
	f	I	c	POP_TIME_DURATION
	f	I	d	INVENTORY_SIZE
	f	I	e	SLOT_OFFHAND
	f	I	f	NOT_FOUND_INDEX
	f	[I	g	ALL_ARMOR_SLOTS
	f	[I	h	HELMET_SLOT_ONLY
	f	Lhn;	i	items
	f	Lhn;	j	armor
	f	Lhn;	k	offhand
	f	I	l	selected
	f	Lcbu;	m	player
	f	I	n	SELECTION_SIZE
	f	Ljava/util/List;	o	compartments
	f	I	p	timesChanged
c	cbu	net/minecraft/world/entity/player/Player
	m	(Lcpv;Lgw;FLcom/mojang/authlib/GameProfile;)V	<init>	<init>
		p	1		world
		p	2		pos
		p	3		yaw
		p	4		gameProfile
	m	(F)V	A	causeFoodExhaustion
		p	1		exhaustion
	m	(F)F	B	getAttackStrengthScale
		p	1		baseTime
	m	(Lbiq;)V	F	lambda$respawnEntityOnShoulder$5
		p	1		entity
	m	()Z	M_	isSpectator
	m	()Ltl;	N_	getDisplayName
	m	()Z	W	isTextFilteringEnabled
	m	()Ljava/util/Optional;	Y	getWardenSpawnTracker
	m	(FFLbho;)Z	a	causeFallDamage
		p	1		fallDistance
		p	2		damageMultiplier
		p	3		damageSource
	m	(ILcou;IIZZ)V	a	sendMerchantOffers
		p	1		syncId
		p	2		offers
		p	3		levelProgress
		p	4		experience
		p	5		leveled
		p	6		refreshable
	m	(Laew;)V	a	awardStat
		p	1		stat
	m	(Laew;I)V	a	awardStat
		p	1		stat
		p	2		amount
	m	(Lakq;Lbjg;)Z	a	killedEntity
		p	1		world
		p	2		other
	m	(Lakq;Lgw;FZZ)Ljava/util/Optional;	a	findRespawnPositionAndUseSpawnBlock
		p	0		world
		p	1		pos
		p	2		angle
		p	3		forced
		p	4		alive
	m	(Lapc;FF)V	a	playSound
		p	1		sound
		p	2		volume
		p	3		pitch
	m	(Lapc;Lape;FF)V	a	playNotifySound
		p	1		event
		p	2		category
		p	3		volume
		p	4		pitch
	m	(Lapk;)V	a	resetStat
		p	1		stat
	m	(Lapk;I)V	a	awardStat
		p	1		stat
		p	2		amount
	m	(Lbgx;Lcbu;)V	a	lambda$hurtCurrentlyUsedShield$4
		p	1		player
	m	(Lbhb;)Ljava/util/OptionalInt;	a	openMenu
		p	1		factory
	m	(Lbho;)V	a	die
		p	1		damageSource
	m	(Lbho;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbiq$c;)V	a	remove
		p	1		reason
	m	(Lbiq;)V	a	crit
		p	1		target
	m	(Lbiq;Lbgx;)Lbgy;	a	interactOn
		p	1		entity
		p	2		hand
	m	(Lbiv;)Z	a	doesEmitEquipEvent
		p	1		slot
	m	(Lbiv;Lcjf;)V	a	setItemSlot
		p	1		slot
		p	2		stack
	m	(Lbja;)V	a	setMainArm
		p	1		arm
	m	(Lbjs;)Lbir;	a	getDimensions
		p	1		pose
	m	(Lbwq;Lbgr;)V	a	openHorseInventory
		p	1		horse
		p	2		inventory
	m	(Lcbu;)Z	a	canHarmPlayer
		p	1		player
	m	(Lcbv;)Z	a	isModelPartShown
		p	1		modelPart
	m	(Lcjf;I)V	a	onEnchantmentPerformed
		p	1		enchantedItem
		p	2		experienceLevels
	m	(Lcjf;Lbgx;)V	a	openItemGui
		p	1		book
		p	2		hand
	m	(Lcjf;Lcjf;Lcet;)V	a	updateTutorialInventoryAction
		p	1		cursorStack
		p	2		slotStack
		p	3		clickType
	m	(Lcjf;Z)Lbyn;	a	drop
		p	1		stack
		p	2		retainOwnership
	m	(Lcjf;ZZ)Lbyn;	a	drop
		p	1		stack
		p	2		throwRandomly
		p	3		retainOwnership
	m	(Lcmk;Ljava/util/List;)V	a	triggerRecipeCrafted
		p	1		recipe
		p	2		ingredients
	m	(Lcow;)V	a	openMinecartCommandBlock
		p	1		commandBlockExecutor
	m	(Lcpv;Lcjf;)Lcjf;	a	eat
		p	1		world
		p	2		stack
	m	(Lcpv;Lgw;Lcps;)Z	a	blockActionRestricted
		p	1		world
		p	2		pos
		p	3		gameMode
	m	(Lddf;)V	a	openCommandBlock
		p	1		commandBlock
	m	(Lddu;)V	a	openJigsawBlock
		p	1		jigsaw
	m	(Lded;Z)V	a	openTextEdit
		p	1		sign
		p	2		front
	m	(Ldei;)V	a	openStructureBlock
		p	1		structureBlock
	m	(Ldfj;Lehn;)V	a	makeStuckInBlock
		p	1		state
		p	2		multiplier
	m	(Lehn;Lbjm;)Lehn;	a	maybeBackOffFromEdge
		p	1		movement
		p	2		type
	m	(Lgw;)Lcom/mojang/datafixers/util/Either;	a	startSleepInBed
		p	1		pos
	m	(Lgw;Lha;Lcjf;)Z	a	mayUseItemAt
		p	1		pos
		p	2		facing
		p	3		stack
	m	(Lhd;)Ljava/util/Optional;	a	lambda$addAdditionalSaveData$2
		p	0		pos
	m	(Lit;)V	a	addParticlesAroundSelf
		p	1		parameters
	m	(Ljava/lang/String;Luh;)Luh;	a	lambda$decorateDisplayNameComponent$6
		p	2		style
	m	(Ljava/util/Collection;)I	a	awardRecipes
		p	1		recipes
	m	(Ljava/util/Optional;)V	a	setLastDeathLocation
		p	1		lastDeathPos
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lqw;Lrq;)V	a	lambda$addAdditionalSaveData$3
		p	1		pos
	m	(Ltl;Z)V	a	displayClientMessage
		p	1		message
		p	2		overlay
	m	(Lty;)Lty;	a	decorateDisplayNameComponent
		p	1		component
	m	(ZZ)V	a	stopSleepInBed
		p	1		skipSleepTimer
		p	2		updateSleepingPlayers
	m	([Laew;)V	a	awardRecipesByKey
		p	1		ids
	m	()F	aJ	getBlockSpeedFactor
	m	()Lapc;	aL	getSwimSound
	m	()Lapc;	aM	getSwimSplashSound
	m	()Lapc;	aN	getSwimHighSpeedSplashSound
	m	()Lbiq$b;	aU	getMovementEmission
	m	()V	a_	defineSynchedData
	m	(I)Lbjy;	a_	getSlot
		p	1		mappedIndex
	m	()Ltl;	ab	getName
	m	()I	av	getPortalWaitTime
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	(Lapk;)V	b	awardStat
		p	1		stat
	m	(Lbho;)Z	b	isInvulnerableTo
		p	1		damageSource
	m	(Lbho;F)V	b	hurtArmor
		p	1		source
		p	2		amount
	m	(Lbiq;)V	b	magicCrit
		p	1		target
	m	(Lbiu;)V	b	lambda$playShoulderEntityAmbientSound$1
		p	1		parrotType
	m	(Lbjs;Lbir;)F	b	getStandingEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lgw;Ldfj;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Ljava/util/Collection;)I	b	resetRecipes
		p	1		recipes
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()V	bB	removeVehicle
	m	()I	bI	getDimensionChangingDelay
	m	()Ljava/lang/Iterable;	bJ	getHandSlots
	m	()Ljava/lang/Iterable;	bK	getArmorSlots
	m	()Z	bY	isSwimming
	m	()V	b_	aiStep
	m	()V	bd	updateSwimming
	m	()V	bg	doWaterSplashEffect
	m	()Z	bq	canBeHitByProjectile
	m	()V	by	rideTick
	m	(I)V	c	giveExperienceLevels
		p	1		levels
	m	(Lbho;F)V	c	hurtHelmet
		p	1		source
		p	2		amount
	m	(Lbiq;)V	c	touch
		p	1		entity
	m	(Lbiu;)Z	c	lambda$playShoulderEntityAmbientSound$0
		p	0		entityType
	m	(Lbiv;)Lcjf;	c	getItemBySlot
		p	1		slot
	m	(Ldfj;)Z	c	shouldRemoveSoulSpeed
		p	1		landingState
	m	(Lqw;)V	c	playShoulderEntityAmbientSound
		p	1		entityNbt
	m	()Z	cB	shouldShowName
	m	()Ljava/lang/String;	cx	getScoreboardName
	m	()Z	cy	isPushedByFluid
	m	(I)V	d	giveExperiencePoints
		p	1		experience
	m	(Lbho;)Lapc;	d	getHurtSound
		p	1		source
	m	(Lbiq;)V	d	attack
		p	1		target
	m	(Lbjg;)V	d	blockUsingShield
		p	1		attacker
	m	(Ldfj;)F	d	getDestroySpeed
		p	1		block
	m	()Z	dE	canSprint
	m	()Z	dJ	shouldBeSaved
	m	()Z	dK	isAlwaysTicking
	m	()Z	dT	onSoulSpeedBlock
	m	()Z	dZ	isAffectedByFluids
	m	()Lape;	da	getSoundSource
	m	()I	db	getFireImmuneTicks
	m	(Ldfj;)Z	e	hasCorrectToolForDrops
		p	1		state
	m	()F	eD	getHurtDir
	m	()Lbjg$a;	eF	getFallSounds
	m	()Z	eX	isImmobile
	m	()I	ed	getExperienceReward
	m	()Z	ee	isAlwaysExperienceDropper
	m	()Z	en	canBeSeenAsEnemy
	m	()V	ex	dropEquipment
	m	()Z	f	isCreative
	m	(Lbho;F)V	f	actuallyHurt
		p	1		source
		p	2		amount
	m	(Lcjf;)Z	f	canTakeItem
		p	1		stack
	m	()V	fD	stopSleeping
	m	()Lbkl$a;	fG	createAttributes
	m	()Z	fH	isSecondaryUseActive
	m	()Z	fI	wantsToStopRiding
	m	()Z	fJ	isStayingOnGroundSurface
	m	()Z	fK	updateIsUnderwater
	m	()V	fL	updatePlayerPose
	m	()I	fM	getScore
	m	()V	fN	destroyVanishingCursedItems
	m	()V	fO	sweepAttack
	m	()V	fP	respawn
	m	()Lcom/mojang/authlib/GameProfile;	fQ	getGameProfile
	m	()Lcbt;	fR	getInventory
	m	()Lcbr;	fS	getAbilities
	m	()Z	fT	hasContainerOpen
	m	()Z	fU	isSleepingLongEnough
	m	()I	fV	getSleepTimer
	m	()Z	fW	tryToStartFallFlying
	m	()V	fX	startFallFlying
	m	()V	fY	stopFallFlying
	m	()I	fZ	getEnchantmentSeed
	m	()V	fa	jumpFromGround
	m	()F	fd	getFlyingSpeed
	m	()F	fe	getSpeed
	m	()V	fg	serverAiStep
	m	()F	fj	getAbsorptionAmount
	m	()Lbja;	fl	getMainArm
	m	()Lcom/google/common/collect/ImmutableList;	fz	getDismountPoses
	m	()Z	g	isLocalPlayer
	m	(Lbjg;)V	g	doAutoAttackOnTouch
		p	1		target
	m	(Lbjs;)Z	g	canPlayerFitWithinBlocksAndEntitiesWhen
		p	1		pose
	m	(Lcjf;)Lcjf;	g	getProjectile
		p	1		stack
	m	()I	ga	getXpNeededForNextLevel
	m	()Lceh;	gb	getFoodData
	m	()Z	gc	isHurt
	m	()Z	gd	mayBuild
	m	()Lcfu;	ge	getEnderChestInventory
	m	()V	gf	removeEntitiesOnShoulder
	m	()Leim;	gg	getScoreboard
	m	()Z	gh	isReducedDebugInfo
	m	()Lqw;	gi	getShoulderEntityLeft
	m	()Lqw;	gj	getShoulderEntityRight
	m	()F	gk	getCurrentItemAttackStrengthDelay
	m	()V	gl	resetAttackStrengthTicker
	m	()Lcjb;	gm	getCooldowns
	m	()F	gn	getLuck
	m	()Z	go	canUseGameMasterBlocks
	m	()Z	gp	isScoping
	m	()Ljava/util/Optional;	gq	getLastDeathLocation
	m	(I)V	h	setRemainingFireTicks
		p	1		fireTicks
	m	(Lehn;)V	h	travel
		p	1		movementInput
	m	(Lgw;)Z	h	freeAt
		p	1		pos
	m	(Lqw;)Z	h	setEntityOnShoulder
		p	1		entityNbt
	m	(Lcjf;)Z	i	addItem
		p	1		stack
	m	(Lqw;)V	i	setShoulderEntityLeft
		p	1		entityNbt
	m	(Lqw;)V	j	setShoulderEntityRight
		p	1		entityNbt
	m	()Lcjb;	k	createItemCooldowns
	m	(Lqw;)V	k	respawnEntityOnShoulder
		p	1		entityNbt
	m	()V	l	tick
	m	(Lbiq;)F	l	ridingOffset
		p	1		vehicle
	m	()Lapc;	l_	getDeathSound
	m	(F)V	m	animateHurt
		p	1		yaw
	m	()V	q	closeContainer
	m	(F)Lehn;	q	getRopeHoldPosition
		p	1		delta
	m	()V	r	doCloseContainer
	m	(DDD)V	r	checkMovementStatistics
		p	1		dx
		p	3		dy
		p	5		dz
	m	(I)V	r	setScore
		p	1		score
	m	()V	s	turtleHelmetTick
	m	(DDD)V	s	checkRidingStatistics
		p	1		dx
		p	3		dy
		p	5		dz
	m	(I)V	s	increaseScore
		p	1		score
	m	(Z)V	s	disableShield
		p	1		sprinting
	m	()V	t	moveCloak
	m	(I)V	t	startAutoSpinAttack
		p	1		riptideTicks
	m	(Z)Z	t	canEat
		p	1		ignoreHunger
	m	(F)V	u	hurtCurrentlyUsedShield
		p	1		amount
	m	(Z)V	u	setReducedDebugInfo
		p	1		reducedDebugInfo
	m	()V	w	onUpdateAbilities
	m	()Z	y	isAboveGround
	m	(F)V	z	internalSetAbsorptionAmount
		p	1		absorptionAmount
	f	I	bA	MAX_NAME_LENGTH
	f	Lbja;	bB	DEFAULT_MAIN_HAND
	f	I	bC	DEFAULT_MODEL_CUSTOMIZATION
	f	I	bD	MAX_HEALTH
	f	I	bE	SLEEP_DURATION
	f	I	bF	WAKE_UP_DURATION
	f	I	bG	ENDER_SLOT_OFFSET
	f	F	bH	CROUCH_BB_HEIGHT
	f	F	bI	SWIMMING_BB_WIDTH
	f	F	bJ	SWIMMING_BB_HEIGHT
	f	F	bK	DEFAULT_EYE_HEIGHT
	f	Lbir;	bL	STANDING_DIMENSIONS
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Laee;	bM	DATA_PLAYER_MODE_CUSTOMISATION
	f	Laee;	bN	DATA_PLAYER_MAIN_HAND
	f	Laee;	bO	DATA_SHOULDER_LEFT
	f	Laee;	bP	DATA_SHOULDER_RIGHT
	f	Lcfu;	bQ	enderChestInventory
	f	Lcfk;	bR	inventoryMenu
	f	Lcel;	bS	containerMenu
	f	Lceh;	bT	foodData
	f	I	bU	jumpTriggerTime
	f	F	bV	oBob
	f	F	bW	bob
	f	I	bX	takeXpDelay
	f	D	bY	xCloakO
	f	D	bZ	yCloakO
	f	Ljava/util/Map;	c	POSES
	f	D	ca	zCloakO
	f	D	cb	xCloak
	f	D	cc	yCloak
	f	D	cd	zCloak
	f	Z	ce	wasUnderwater
	f	I	cf	experienceLevel
	f	I	cg	totalExperience
	f	F	ch	experienceProgress
	f	I	ci	enchantmentSeed
	f	F	cj	defaultFlySpeed
	f	Lcci;	ck	fishing
	f	F	cl	hurtDir
	f	J	cm	timeEntitySatOnShoulder
	f	Lcbt;	cn	inventory
	f	I	co	sleepCounter
	f	Lcbr;	cp	abilities
	f	I	cq	lastLevelUpTime
	f	Lcom/mojang/authlib/GameProfile;	cr	gameProfile
	f	Z	cs	reducedDebugInfo
	f	Lcjf;	ct	lastItemInMainHand
	f	Lcjb;	cu	cooldowns
	f	Ljava/util/Optional;	cv	lastDeathLocation
	f	I	d	FLY_ACHIEVEMENT_SPEED
	f	Laee;	e	DATA_PLAYER_ABSORPTION_ID
	f	Laee;	f	DATA_SCORE_ID
c	cbu$1	net/minecraft/world/entity/player/Player$1
	f	[I	a	$SwitchMap$net$minecraft$world$entity$Pose
c	cbu$a	net/minecraft/world/entity/player/Player$BedSleepingProblem
	m	(Ljava/lang/String;ILtl;)V	<init>	<init>
		p	3		message
	m	()Ltl;	a	getMessage
	m	()[Lcbu$a;	b	$values
	f	Lcbu$a;	a	NOT_POSSIBLE_HERE
	f	Lcbu$a;	b	NOT_POSSIBLE_NOW
	f	Lcbu$a;	c	TOO_FAR_AWAY
	f	Lcbu$a;	d	OBSTRUCTED
	f	Lcbu$a;	e	OTHER_PROBLEM
	f	Lcbu$a;	f	NOT_SAFE
	f	Ltl;	g	message
	f	[Lcbu$a;	h	$VALUES
c	cbv	net/minecraft/world/entity/player/PlayerModelPart
	m	(Ljava/lang/String;IILjava/lang/String;)V	<init>	<init>
		p	3		id
		p	4		name
	m	()I	a	getMask
	m	()I	b	getBit
	m	()Ljava/lang/String;	c	getId
	m	()Ltl;	d	getName
	m	()[Lcbv;	e	$values
	f	Lcbv;	a	CAPE
	f	Lcbv;	b	JACKET
	f	Lcbv;	c	LEFT_SLEEVE
	f	Lcbv;	d	RIGHT_SLEEVE
	f	Lcbv;	e	LEFT_PANTS_LEG
	f	Lcbv;	f	RIGHT_PANTS_LEG
	f	Lcbv;	g	HAT
	f	I	h	bit
	f	I	i	mask
	f	Ljava/lang/String;	j	id
	f	Ltl;	k	name
	f	[Lcbv;	l	$VALUES
c	cbw	net/minecraft/world/entity/player/ProfileKeyPair
	m	()Z	a	dueRefresh
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Ljava/security/PrivateKey;	b	privateKey
	m	()Lcbx;	c	publicKey
	m	()Ljava/time/Instant;	d	refreshedAfter
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/security/PrivateKey;	b	privateKey
	f	Lcbx;	c	publicKey
	f	Ljava/time/Instant;	d	refreshedAfter
c	cbx	net/minecraft/world/entity/player/ProfilePublicKey
	m	()Lash;	a	createSignatureValidator
	m	(Lash;Ljava/util/UUID;Lcbx$a;)Lcbx;	a	createValidated
		p	0		servicesSignatureVerifier
		p	1		playerUuid
		p	2		publicKeyData
	m	()Lcbx$a;	b	data
	f	Ltl;	a	EXPIRED_PROFILE_PUBLIC_KEY
	f	Ljava/time/Duration;	b	EXPIRY_GRACE_PERIOD
	f	Lcom/mojang/serialization/Codec;	c	TRUSTED_CODEC
	f	Lcbx$a;	d	data
	f	Ltl;	e	INVALID_SIGNATURE
c	cbx$a	net/minecraft/world/entity/player/ProfilePublicKey$Data
	m	(Lso;)V	<init>	<init>
		p	1		buf
	m	()Z	a	hasExpired
	m	(Lash;Ljava/util/UUID;)Z	a	validateSignature
		p	1		servicesSignatureVerifier
		p	2		playerUuid
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ljava/time/Duration;)Z	a	hasExpired
		p	1		gracePeriod
	m	(Ljava/util/UUID;)[B	a	signedPayload
		p	1		playerUuid
	m	(Lso;)V	a	write
		p	1		buf
	m	()Ljava/time/Instant;	b	expiresAt
	m	()Ljava/security/PublicKey;	c	key
	m	()[B	d	keySignature
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/time/Instant;	b	expiresAt
	f	Ljava/security/PublicKey;	c	key
	f	[B	d	keySignature
	f	I	e	MAX_KEY_SIGNATURE_SIZE
c	cbx$b	net/minecraft/world/entity/player/ProfilePublicKey$ValidationException
	m	(Ltl;)V	<init>	<init>
		p	1		messageText
c	cby	net/minecraft/world/entity/player/StackedContents
	m	()V	a	clear
	m	(I)Lcjf;	a	fromStackingIndex
		p	0		itemId
	m	(II)I	a	take
		p	1		itemId
		p	2		count
	m	(Lcjf;)V	a	accountSimpleStack
		p	1		stack
	m	(Lcjf;I)V	a	accountStack
		p	1		stack
		p	2		maxCount
	m	(Lcmj;Lit/unimi/dsi/fastutil/ints/IntList;)Z	a	canCraft
		p	1		recipe
		p	2		output
	m	(Lcmj;Lit/unimi/dsi/fastutil/ints/IntList;I)Z	a	canCraft
		p	1		recipe
		p	2		output
		p	3		multiplier
	m	(Lcmk;ILit/unimi/dsi/fastutil/ints/IntList;)I	a	getBiggestCraftableStack
		p	1		recipe
		p	2		limit
		p	3		output
	m	(Lcmk;Lit/unimi/dsi/fastutil/ints/IntList;)I	a	getBiggestCraftableStack
		p	1		recipe
		p	2		output
	m	(I)Z	b	has
		p	1		itemId
	m	(II)V	b	put
		p	1		itemId
		p	2		count
	m	(Lcjf;)V	b	accountStack
		p	1		stack
	m	(Lcjf;)I	c	getStackingIndex
		p	0		stack
	f	Lit/unimi/dsi/fastutil/ints/Int2IntMap;	a	contents
	f	I	b	EMPTY
c	cby$a	net/minecraft/world/entity/player/StackedContents$RecipePicker
	m	(Lcby;Lcmj;)V	<init>	<init>
		p	2		recipe
	m	()[I	a	getUniqueAvailableIngredientItems
	m	(I)Z	a	dfs
		p	1		multiplier
	m	(ILit/unimi/dsi/fastutil/ints/IntList;)Z	a	tryPick
		p	1		multiplier
		p	2		output
	m	(ZI)V	a	visit
		p	1		reversed
		p	2		itemId
	m	(ZII)Z	a	hasConnection
		p	1		reversed
		p	2		itemIndex
		p	3		ingredientIndex
	m	()I	b	getMinIngredientCount
	m	(I)Z	b	isSatisfied
		p	1		itemId
	m	(ILit/unimi/dsi/fastutil/ints/IntList;)I	b	tryPickAll
		p	1		minimum
		p	2		output
	m	(ZI)Z	b	hasVisited
		p	1		reversed
		p	2		itemId
	m	(ZII)Z	b	hasResidual
		p	1		reversed
		p	2		itemIndex
		p	3		ingredientIndex
	m	(I)V	c	setSatisfied
		p	1		itemId
	m	(ZI)I	c	getVisitedIndex
		p	1		reversed
		p	2		itemId
	m	(ZII)V	c	toggleResidual
		p	1		reversed
		p	2		itemIndex
		p	3		ingredientIndex
	m	(I)I	d	getSatisfiedIndex
		p	1		itemId
	m	(ZII)I	d	getIndex
		p	1		reversed
		p	2		itemIndex
		p	3		ingredientIndex
	f	Lcby;	a	this$0
	f	Lcmj;	b	recipe
	f	Ljava/util/List;	c	ingredients
	f	I	d	ingredientCount
	f	[I	e	items
	f	I	f	itemCount
	f	Ljava/util/BitSet;	g	data
	f	Lit/unimi/dsi/fastutil/ints/IntList;	h	path
c	cbz	net/minecraft/world/entity/player/package-info
c	cca	net/minecraft/world/entity/projectile/AbstractArrow
	m	(Lbiu;DDDLcpv;)V	<init>	<init>
		p	1		type
		p	2		x
		p	4		y
		p	6		z
		p	8		world
	m	(Lbiu;Lbjg;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		owner
		p	3		world
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()Z	A	shotFromCrossbow
	m	()B	B	getPierceLevel
	m	()F	C	getWaterInertia
	m	()Z	E	isNoPhysics
	m	()Z	F	shouldFall
	m	()V	I	startFalling
	m	()V	K	resetPiercedEntities
	m	(B)V	a	setPierceLevel
		p	1		level
	m	(D)Z	a	shouldRenderAtSqrDistance
		p	1		distance
	m	(DDDFFI)V	a	lerpTo
		p	1		x
		p	3		y
		p	5		z
		p	7		yaw
		p	8		pitch
		p	9		interpolationSteps
	m	(IZ)V	a	setFlag
		p	1		index
		p	2		flag
	m	(Lbiq;)Z	a	canHitEntity
		p	1		entity
	m	(Lbjg;)V	a	doPostHurtEffects
		p	1		target
	m	(Lbjg;F)V	a	setEnchantmentEffectsFromEntity
		p	1		entity
		p	2		damageModifier
	m	(Lbjm;Lehn;)V	a	move
		p	1		movementType
		p	2		movement
	m	(Lbjs;Lbir;)F	a	getEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lcbu;)Z	a	tryPickup
		p	1		player
	m	(Lehj;)V	a	onHitBlock
		p	1		blockHitResult
	m	(Lehk;)V	a	onHitEntity
		p	1		entityHitResult
	m	(Lehn;Lehn;)Lehk;	a	findHitEntity
		p	1		currentPosition
		p	2		nextPosition
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Z)V	a	setCritArrow
		p	1		critical
	m	()Lbiq$b;	aU	getMovementEmission
	m	()V	a_	defineSynchedData
	m	(I)V	b	setKnockback
		p	1		punch
	m	(Lapc;)V	b	setSoundEvent
		p	1		sound
	m	(Lbiq;)V	b	setOwner
		p	1		entity
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lcbu;)V	b_	playerTouch
		p	1		player
	m	(DDDFF)V	c	shoot
		p	1		x
		p	3		y
		p	5		z
		p	7		speed
		p	8		divergence
	m	()Z	cp	isAttackable
	m	(D)V	h	setBaseDamage
		p	1		damage
	m	()V	l	tick
	m	(DDD)V	l	lerpMotion
		p	1		x
		p	3		y
		p	5		z
	m	(Z)V	p	setNoPhysics
		p	1		noClip
	m	()V	q	tickDespawn
	m	(Z)V	q	setShotFromCrossbow
		p	1		shotFromCrossbow
	m	()Lapc;	s	getDefaultHitGroundSoundEvent
	m	()Lapc;	t	getHitGroundSoundEvent
	m	()Lcjf;	w	getPickupItem
	m	()D	x	getBaseDamage
	m	()I	y	getKnockback
	m	()Z	z	isCritArrow
	f	Z	b	inGround
	f	I	c	inGroundTime
	f	Lcca$a;	d	pickup
	f	I	e	shakeTime
	f	D	f	ARROW_BASE_DAMAGE
	f	Laee;	g	ID_FLAGS
	f	Laee;	h	PIERCE_LEVEL
	f	I	i	FLAG_CRIT
	f	I	j	FLAG_NOPHYSICS
	f	I	k	FLAG_CROSSBOW
	f	Ldfj;	l	lastState
	f	I	m	life
	f	D	n	baseDamage
	f	I	o	knockback
	f	Lapc;	p	soundEvent
	f	Lit/unimi/dsi/fastutil/ints/IntOpenHashSet;	q	piercingIgnoreEntityIds
	f	Ljava/util/List;	r	piercedAndKilledEntities
c	cca$1	net/minecraft/world/entity/projectile/AbstractArrow$1
	f	[I	a	$SwitchMap$net$minecraft$world$entity$projectile$AbstractArrow$Pickup
c	cca$a	net/minecraft/world/entity/projectile/AbstractArrow$Pickup
	m	()[Lcca$a;	a	$values
	m	(I)Lcca$a;	a	byOrdinal
		p	0		ordinal
	f	Lcca$a;	a	DISALLOWED
	f	Lcca$a;	b	ALLOWED
	f	Lcca$a;	c	CREATIVE_ONLY
	f	[Lcca$a;	d	$VALUES
c	ccb	net/minecraft/world/entity/projectile/AbstractHurtingProjectile
	m	(Lbiu;DDDDDDLcpv;)V	<init>	<init>
		p	1		type
		p	2		x
		p	4		y
		p	6		z
		p	8		directionX
		p	10		directionY
		p	12		directionZ
		p	14		world
	m	(Lbiu;Lbjg;DDDLcpv;)V	<init>	<init>
		p	1		type
		p	2		owner
		p	3		directionX
		p	5		directionY
		p	7		directionZ
		p	9		world
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(D)Z	a	shouldRenderAtSqrDistance
		p	1		distance
	m	(Lbho;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbiq;)Z	a	canHitEntity
		p	1		entity
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lwx;)V	a	recreateFromPacket
		p	1		packet
	m	()V	a_	defineSynchedData
	m	()Z	ae_	shouldBurn
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()F	bD	getPickRadius
	m	()F	bm	getLightLevelDependentMagicValue
	m	()Z	br	isPickable
	m	()Lvd;	di	getAddEntityPacket
	m	()V	l	tick
	m	()Lit;	s	getTrailParticle
	m	()F	t	getInertia
	f	D	b	xPower
	f	D	c	yPower
	f	D	d	zPower
c	ccc	net/minecraft/world/entity/projectile/Arrow
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcpv;DDD)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
	m	(Lcpv;Lbjg;)V	<init>	<init>
		p	1		world
		p	2		owner
	m	()I	F	getColor
	m	()V	I	updateColor
	m	(Lbid;)V	a	addEffect
		p	1		effect
	m	(Lbjg;)V	a	doPostHurtEffects
		p	1		target
	m	(Lcjf;)V	a	setEffectsFromItem
		p	1		stack
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(I)V	c	makeParticle
		p	1		amount
	m	(Lcjf;)I	c	getCustomColor
		p	0		stack
	m	(I)V	d	setFixedColor
		p	1		color
	m	()V	l	tick
	m	(I)I	m	lambda$doPostHurtEffects$0
	m	()Lcjf;	w	getPickupItem
	f	I	f	EXPOSED_POTION_DECAY_TIME
	f	I	g	NO_EFFECT_COLOR
	f	Laee;	h	ID_EFFECT_COLOR
	f	B	i	EVENT_POTION_PUFF
	f	Lclc;	j	potion
	f	Ljava/util/Set;	k	effects
	f	Z	l	fixedColor
c	ccd	net/minecraft/world/entity/projectile/DragonFireball
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcpv;Lbjg;DDD)V	<init>	<init>
		p	1		world
		p	2		owner
		p	3		directionX
		p	5		directionY
		p	7		directionZ
	m	(Lbho;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lehl;)V	a	onHit
		p	1		hitResult
	m	()Z	ae_	shouldBurn
	m	()Z	br	isPickable
	m	()Lit;	s	getTrailParticle
	f	F	e	SPLASH_RANGE
c	cce	net/minecraft/world/entity/projectile/EvokerFangs
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcpv;DDDFILbjg;)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
		p	8		yaw
		p	9		warmup
		p	10		owner
	m	(F)F	a	getAnimationProgress
		p	1		tickDelta
	m	(Lbjg;)V	a	setOwner
		p	1		owner
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lbjg;)V	c	dealDamageTo
		p	1		target
	m	()V	l	tick
	m	()Lbjg;	q	getOwner
	m	()Lbiq;	v	getOwner
	f	I	b	ATTACK_DURATION
	f	I	c	LIFE_OFFSET
	f	I	d	ATTACK_TRIGGER_TICKS
	f	I	e	warmupDelayTicks
	f	Z	f	sentSpikeEvent
	f	I	g	lifeTicks
	f	Z	h	clientSideAttackStarted
	f	Lbjg;	i	owner
	f	Ljava/util/UUID;	j	ownerUUID
c	ccf	net/minecraft/world/entity/projectile/EyeOfEnder
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcpv;DDD)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
	m	(D)Z	a	shouldRenderAtSqrDistance
		p	1		distance
	m	(Lcjf;)V	a	setItem
		p	1		stack
	m	(Lgw;)V	a	signalTo
		p	1		pos
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()F	bm	getLightLevelDependentMagicValue
	m	()Z	cp	isAttackable
	m	()V	l	tick
	m	(DDD)V	l	lerpMotion
		p	1		x
		p	3		y
		p	5		z
	m	()Lcjf;	q	getItem
	m	()Lcjf;	s	getItemRaw
	f	Laee;	b	DATA_ITEM_STACK
	f	D	c	tx
	f	D	d	ty
	f	D	e	tz
	f	I	f	life
	f	Z	g	surviveAfterDeath
c	ccg	net/minecraft/world/entity/projectile/Fireball
	m	(Lbiu;DDDDDDLcpv;)V	<init>	<init>
		p	1		type
		p	2		x
		p	4		y
		p	6		z
		p	8		directionX
		p	10		directionY
		p	12		directionZ
		p	14		world
	m	(Lbiu;Lbjg;DDDLcpv;)V	<init>	<init>
		p	1		type
		p	2		owner
		p	3		directionX
		p	5		directionY
		p	7		directionZ
		p	9		world
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcjf;)V	a	setItem
		p	1		stack
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Lcjf;	q	getItem
	m	()Lcjf;	w	getItemRaw
	f	Laee;	e	DATA_ITEM_STACK
c	cch	net/minecraft/world/entity/projectile/FireworkRocketEntity
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcpv;DDDLcjf;)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
		p	8		stack
	m	(Lcpv;Lbiq;DDDLcjf;)V	<init>	<init>
		p	1		world
		p	2		entity
		p	3		x
		p	5		y
		p	7		z
		p	9		stack
	m	(Lcpv;Lcjf;DDDZ)V	<init>	<init>
		p	1		world
		p	2		stack
		p	3		x
		p	5		y
		p	7		z
		p	9		shotAtAngle
	m	(Lcpv;Lcjf;Lbiq;DDDZ)V	<init>	<init>
		p	1		world
		p	2		stack
		p	3		entity
		p	4		x
		p	6		y
		p	8		z
		p	10		shotAtAngle
	m	(Lcpv;Lcjf;Lbjg;)V	<init>	<init>
		p	1		world
		p	2		stack
		p	3		shooter
	m	(D)Z	a	shouldRenderAtSqrDistance
		p	1		distance
	m	(Lehj;)V	a	onHitBlock
		p	1		blockHitResult
	m	(Lehk;)V	a	onHitEntity
		p	1		entityHitResult
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	(I)V	b	lambda$tick$0
		p	1		id
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Z	cp	isAttackable
	m	(DDD)Z	k	shouldRender
		p	1		cameraX
		p	3		cameraY
		p	5		cameraZ
	m	()V	l	tick
	m	()Lcjf;	q	getItem
	m	()Z	s	isShotAtAngle
	m	()V	t	explode
	m	()Z	w	hasExplosion
	m	()V	x	dealExplosionDamage
	m	()Z	y	isAttachedToEntity
	f	Laee;	b	DATA_ID_FIREWORKS_ITEM
	f	Laee;	c	DATA_ATTACHED_TO_TARGET
	f	Laee;	d	DATA_SHOT_AT_ANGLE
	f	I	e	life
	f	I	f	lifetime
	f	Lbjg;	g	attachedToEntity
c	cci	net/minecraft/world/entity/projectile/FishingHook
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lbiu;Lcpv;II)V	<init>	<init>
		p	1		type
		p	2		world
		p	3		luckOfTheSeaLevel
		p	4		lureLevel
	m	(Lcbu;Lcpv;II)V	<init>	<init>
		p	1		thrower
		p	2		world
		p	3		luckOfTheSeaLevel
		p	4		lureLevel
	m	(Lbiq;)V	A	setHookedEntity
		p	1		entity
	m	(D)Z	a	shouldRenderAtSqrDistance
		p	1		distance
	m	(DDDFFI)V	a	lerpTo
		p	1		x
		p	3		y
		p	5		z
		p	7		yaw
		p	8		pitch
		p	9		interpolationSteps
	m	(Laee;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Lbiq$c;)V	a	remove
		p	1		reason
	m	(Lbiq;)Z	a	canHitEntity
		p	1		entity
	m	(Lcbu;)Z	a	shouldStopFishing
		p	1		player
	m	(Lcci$b;Lcci$b;)Lcci$b;	a	lambda$getOpenWaterTypeForArea$0
	m	(Lcci;)V	a	updateOwnerInfo
		p	1		fishingBobber
	m	(Lcjf;)I	a	retrieve
		p	1		usedItem
	m	(Lehj;)V	a	onHitBlock
		p	1		blockHitResult
	m	(Lehk;)V	a	onHitEntity
		p	1		entityHitResult
	m	(Lgw;)V	a	catchingFish
		p	1		pos
	m	(Lgw;Lgw;)Lcci$b;	a	getOpenWaterTypeForArea
		p	1		start
		p	2		end
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lwx;)V	a	recreateFromPacket
		p	1		packet
	m	()Lbiq$b;	aU	getMovementEmission
	m	()V	a_	defineSynchedData
	m	()V	am	onClientRemoval
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	(Lbiq;)V	b	setOwner
		p	1		entity
	m	(Lgw;)Z	b	calculateOpenWater
		p	1		pos
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lbiq;)V	c	pullEntity
		p	1		entity
	m	(Lgw;)Lcci$b;	c	getOpenWaterTypeForBlock
		p	1		pos
	m	()Z	cs	canChangeDimensions
	m	()Lvd;	di	getAddEntityPacket
	m	()V	l	tick
	m	()Z	q	isOpenWaterFishing
	m	()Lcbu;	s	getPlayerOwner
	m	()Lbiq;	t	getHookedIn
	m	()V	w	checkCollision
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Lasc;	c	syncronizedRandom
	f	Z	d	biting
	f	I	e	outOfWaterTime
	f	I	f	MAX_OUT_OF_WATER_TIME
	f	Laee;	g	DATA_HOOKED_ENTITY
	f	Laee;	h	DATA_BITING
	f	I	i	life
	f	I	j	nibble
	f	I	k	timeUntilLured
	f	I	l	timeUntilHooked
	f	F	m	fishAngle
	f	Z	n	openWater
	f	Lbiq;	o	hookedIn
	f	Lcci$a;	p	currentState
	f	I	q	luck
	f	I	r	lureSpeed
c	cci$1	net/minecraft/world/entity/projectile/FishingHook$1
	f	[I	a	$SwitchMap$net$minecraft$world$entity$projectile$FishingHook$OpenWaterType
c	cci$a	net/minecraft/world/entity/projectile/FishingHook$FishHookState
	m	()[Lcci$a;	a	$values
	f	Lcci$a;	a	FLYING
	f	Lcci$a;	b	HOOKED_IN_ENTITY
	f	Lcci$a;	c	BOBBING
	f	[Lcci$a;	d	$VALUES
c	cci$b	net/minecraft/world/entity/projectile/FishingHook$OpenWaterType
	m	()[Lcci$b;	a	$values
	f	Lcci$b;	a	ABOVE_WATER
	f	Lcci$b;	b	INSIDE_WATER
	f	Lcci$b;	c	INVALID
	f	[Lcci$b;	d	$VALUES
c	ccj	net/minecraft/world/entity/projectile/ItemSupplier
	m	()Lcjf;	q	getItem
c	cck	net/minecraft/world/entity/projectile/LargeFireball
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcpv;Lbjg;DDDI)V	<init>	<init>
		p	1		world
		p	2		owner
		p	3		velocityX
		p	5		velocityY
		p	7		velocityZ
		p	9		explosionPower
	m	(Lehk;)V	a	onHitEntity
		p	1		entityHitResult
	m	(Lehl;)V	a	onHit
		p	1		hitResult
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	f	I	e	explosionPower
c	ccl	net/minecraft/world/entity/projectile/LlamaSpit
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcpv;Lbwt;)V	<init>	<init>
		p	1		world
		p	2		owner
	m	(Lehj;)V	a	onHitBlock
		p	1		blockHitResult
	m	(Lehk;)V	a	onHitEntity
		p	1		entityHitResult
	m	(Lwx;)V	a	recreateFromPacket
		p	1		packet
	m	()V	a_	defineSynchedData
	m	()V	l	tick
c	ccm	net/minecraft/world/entity/projectile/Projectile
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()Lbiq;	G	getEffectSource
	m	()V	H	updateRotation
	m	(Lbiq;)Z	a	canHitEntity
		p	1		entity
	m	(Lbiq;FFFFF)V	a	shootFromRotation
		p	1		shooter
		p	2		pitch
		p	3		yaw
		p	4		roll
		p	5		speed
		p	6		divergence
	m	(Lcpv;Lgw;)Z	a	mayInteract
		p	1		world
		p	2		pos
	m	(Lehj;)V	a	onHitBlock
		p	1		blockHitResult
	m	(Lehk;)V	a	onHitEntity
		p	1		entityHitResult
	m	(Lehl;)V	a	onHit
		p	1		hitResult
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lwx;)V	a	recreateFromPacket
		p	1		packet
	m	(Lbiq;)V	b	setOwner
		p	1		entity
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(DDDFF)V	c	shoot
		p	1		x
		p	3		y
		p	5		z
		p	7		speed
		p	8		divergence
	m	(Lbiq;)Z	c	lambda$checkLeftOwner$0
		p	0		entity
	m	(FF)F	d	lerpRotation
		p	0		prevRot
		p	1		newRot
	m	(Lbiq;)Z	d	ownedBy
		p	1		entity
	m	()Lvd;	di	getAddEntityPacket
	m	()V	l	tick
	m	(DDD)V	l	lerpMotion
		p	1		x
		p	3		y
		p	5		z
	m	()Z	s	checkLeftOwner
	m	()Lbiq;	v	getOwner
	f	Ljava/util/UUID;	b	ownerUUID
	f	Lbiq;	c	cachedOwner
	f	Z	d	leftOwner
	f	Z	e	hasBeenShot
c	ccn	net/minecraft/world/entity/projectile/ProjectileUtil
	m	(Lbiq;F)V	a	rotateTowardsMovement
		p	0		entity
		p	1		delta
	m	(Lbiq;Lehn;Lehn;Lehi;Ljava/util/function/Predicate;D)Lehk;	a	getEntityHitResult
		p	0		entity
		p	1		min
		p	2		max
		p	3		box
		p	4		predicate
	m	(Lbiq;Ljava/util/function/Predicate;)Lehl;	a	getHitResultOnMoveVector
		p	0		entity
		p	1		predicate
	m	(Lbiq;Ljava/util/function/Predicate;D)Lehl;	a	getHitResultOnViewVector
		p	0		entity
		p	1		predicate
		p	2		range
	m	(Lbjg;Lcja;)Lbgx;	a	getWeaponHoldingHand
		p	0		entity
		p	1		item
	m	(Lbjg;Lcjf;F)Lcca;	a	getMobArrow
		p	0		entity
		p	1		stack
		p	2		damageModifier
	m	(Lcpv;Lbiq;Lehn;Lehn;Lehi;Ljava/util/function/Predicate;)Lehk;	a	getEntityHitResult
		p	0		world
		p	1		entity
		p	2		min
		p	3		max
		p	4		box
		p	5		predicate
	m	(Lcpv;Lbiq;Lehn;Lehn;Lehi;Ljava/util/function/Predicate;F)Lehk;	a	getEntityHitResult
		p	0		world
		p	1		entity
		p	2		min
		p	3		max
		p	4		box
		p	5		predicate
		p	6		margin
	m	(Lehn;Lbiq;Ljava/util/function/Predicate;Lehn;Lcpv;)Lehl;	a	getHitResult
		p	0		pos
		p	1		entity
		p	2		predicate
		p	3		velocity
		p	4		world
c	cco	net/minecraft/world/entity/projectile/ShulkerBullet
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcpv;Lbjg;Lbiq;Lha$a;)V	<init>	<init>
		p	1		world
		p	2		owner
		p	3		target
		p	4		axis
	m	(D)Z	a	shouldRenderAtSqrDistance
		p	1		distance
	m	(Lbho;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbiq;)Z	a	canHitEntity
		p	1		entity
	m	(Lehj;)V	a	onHitBlock
		p	1		blockHitResult
	m	(Lehk;)V	a	onHitEntity
		p	1		entityHitResult
	m	(Lehl;)V	a	onHit
		p	1		hitResult
	m	(Lha$a;)V	a	selectNextMoveDirection
		p	1		axis
	m	(Lha;)V	a	setMoveDirection
		p	1		direction
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lwx;)V	a	recreateFromPacket
		p	1		packet
	m	()V	a_	defineSynchedData
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Z	bM	isOnFire
	m	()F	bm	getLightLevelDependentMagicValue
	m	()Z	br	isPickable
	m	()Lape;	da	getSoundSource
	m	()V	dx	checkDespawn
	m	()V	l	tick
	m	()Lha;	q	getMoveDirection
	m	()V	s	destroy
	f	D	b	SPEED
	f	Lbiq;	c	finalTarget
	f	Lha;	d	currentMoveDirection
	f	I	e	flightSteps
	f	D	f	targetDeltaX
	f	D	g	targetDeltaY
	f	D	h	targetDeltaZ
	f	Ljava/util/UUID;	i	targetId
c	ccp	net/minecraft/world/entity/projectile/SmallFireball
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcpv;DDDDDD)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
		p	8		velocityX
		p	10		velocityY
		p	12		velocityZ
	m	(Lcpv;Lbjg;DDD)V	<init>	<init>
		p	1		world
		p	2		owner
		p	3		velocityX
		p	5		velocityY
		p	7		velocityZ
	m	(Lbho;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lehj;)V	a	onHitBlock
		p	1		blockHitResult
	m	(Lehk;)V	a	onHitEntity
		p	1		entityHitResult
	m	(Lehl;)V	a	onHit
		p	1		hitResult
	m	()Z	br	isPickable
c	ccq	net/minecraft/world/entity/projectile/Snowball
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcpv;DDD)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
	m	(Lcpv;Lbjg;)V	<init>	<init>
		p	1		world
		p	2		owner
	m	(Lehk;)V	a	onHitEntity
		p	1		entityHitResult
	m	(Lehl;)V	a	onHit
		p	1		hitResult
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	()Lcja;	s	getDefaultItem
	m	()Lit;	x	getParticle
c	ccr	net/minecraft/world/entity/projectile/SpectralArrow
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcpv;DDD)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
	m	(Lcpv;Lbjg;)V	<init>	<init>
		p	1		world
		p	2		owner
	m	(Lbjg;)V	a	doPostHurtEffects
		p	1		target
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()V	l	tick
	m	()Lcjf;	w	getPickupItem
	f	I	f	duration
c	ccs	net/minecraft/world/entity/projectile/ThrowableItemProjectile
	m	(Lbiu;DDDLcpv;)V	<init>	<init>
		p	1		type
		p	2		x
		p	4		y
		p	6		z
		p	8		world
	m	(Lbiu;Lbjg;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		owner
		p	3		world
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcjf;)V	a	setItem
		p	1		item
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Lcjf;	q	getItem
	m	()Lcja;	s	getDefaultItem
	m	()Lcjf;	t	getItemRaw
	f	Laee;	b	DATA_ITEM_STACK
c	cct	net/minecraft/world/entity/projectile/ThrowableProjectile
	m	(Lbiu;DDDLcpv;)V	<init>	<init>
		p	1		type
		p	2		x
		p	4		y
		p	6		z
		p	8		world
	m	(Lbiu;Lbjg;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		owner
		p	3		world
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(D)Z	a	shouldRenderAtSqrDistance
		p	1		distance
	m	()V	l	tick
	m	()F	w	getGravity
c	ccu	net/minecraft/world/entity/projectile/ThrownEgg
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcpv;DDD)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
	m	(Lcpv;Lbjg;)V	<init>	<init>
		p	1		world
		p	2		owner
	m	(Lehk;)V	a	onHitEntity
		p	1		entityHitResult
	m	(Lehl;)V	a	onHit
		p	1		hitResult
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	()Lcja;	s	getDefaultItem
c	ccv	net/minecraft/world/entity/projectile/ThrownEnderpearl
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcpv;Lbjg;)V	<init>	<init>
		p	1		world
		p	2		owner
	m	(Lehk;)V	a	onHitEntity
		p	1		entityHitResult
	m	(Lehl;)V	a	onHit
		p	1		hitResult
	m	(Lakq;)Lbiq;	b	changeDimension
		p	1		destination
	m	()V	l	tick
	m	()Lcja;	s	getDefaultItem
c	ccw	net/minecraft/world/entity/projectile/ThrownExperienceBottle
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcpv;DDD)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
	m	(Lcpv;Lbjg;)V	<init>	<init>
		p	1		world
		p	2		owner
	m	(Lehl;)V	a	onHit
		p	1		hitResult
	m	()Lcja;	s	getDefaultItem
	m	()F	w	getGravity
c	ccx	net/minecraft/world/entity/projectile/ThrownPotion
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcpv;DDD)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
	m	(Lcpv;Lbjg;)V	<init>	<init>
		p	1		world
		p	2		owner
	m	(DI)I	a	lambda$applySplash$1
	m	(Lbjg;)Z	a	lambda$static$0
		p	0		entity
	m	(Lcjf;Lclc;)V	a	makeAreaOfEffectCloud
		p	1		stack
		p	2		potion
	m	(Lehj;)V	a	onHitBlock
		p	1		blockHitResult
	m	(Lehl;)V	a	onHit
		p	1		hitResult
	m	(Lgw;)V	a	dowseFire
		p	1		pos
	m	(Ljava/util/List;Lbiq;)V	a	applySplash
		p	1		statusEffects
		p	2		entity
	m	()Lcja;	s	getDefaultItem
	m	()F	w	getGravity
	m	()V	x	applyWater
	m	()Z	y	isLingering
	f	D	b	SPLASH_RANGE
	f	Ljava/util/function/Predicate;	c	WATER_SENSITIVE_OR_ON_FIRE
	f	D	d	SPLASH_RANGE_SQ
c	ccy	net/minecraft/world/entity/projectile/ThrownTrident
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcpv;Lbjg;Lcjf;)V	<init>	<init>
		p	1		world
		p	2		owner
		p	3		stack
	m	()F	C	getWaterInertia
	m	()Z	F	isFoil
	m	()Z	I	isChanneling
	m	()Z	K	isAcceptibleReturnOwner
	m	(Lcbu;)Z	a	tryPickup
		p	1		player
	m	(Lehk;)V	a	onHitEntity
		p	1		entityHitResult
	m	(Lehn;Lehn;)Lehk;	a	findHitEntity
		p	1		currentPosition
		p	2		nextPosition
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lcbu;)V	b_	playerTouch
		p	1		player
	m	(DDD)Z	k	shouldRender
		p	1		cameraX
		p	3		cameraY
		p	5		cameraZ
	m	()V	l	tick
	m	()V	q	tickDespawn
	m	()Lapc;	s	getDefaultHitGroundSoundEvent
	m	()Lcjf;	w	getPickupItem
	f	I	f	clientSideReturnTridentTickCount
	f	Laee;	g	ID_LOYALTY
	f	Laee;	h	ID_FOIL
	f	Lcjf;	i	tridentItem
	f	Z	j	dealtDamage
c	ccz	net/minecraft/world/entity/projectile/WitherSkull
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcpv;Lbjg;DDD)V	<init>	<init>
		p	1		world
		p	2		owner
		p	3		directionX
		p	5		directionY
		p	7		directionZ
	m	(Lbho;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lcpn;Lcpb;Lgw;Ldfj;Leam;F)F	a	getBlockExplosionResistance
		p	1		explosion
		p	2		world
		p	3		pos
		p	4		blockState
		p	5		fluidState
		p	6		max
	m	(Lehk;)V	a	onHitEntity
		p	1		entityHitResult
	m	(Lehl;)V	a	onHit
		p	1		hitResult
	m	(Z)V	a	setDangerous
		p	1		charged
	m	()V	a_	defineSynchedData
	m	()Z	ae_	shouldBurn
	m	()Z	bM	isOnFire
	m	()Z	br	isPickable
	m	()F	t	getInertia
	m	()Z	w	isDangerous
	f	Laee;	e	DATA_DANGEROUS
c	cda	net/minecraft/world/entity/projectile/package-info
c	cdb	net/minecraft/world/entity/raid/Raid
	m	(ILakq;Lgw;)V	<init>	<init>
		p	1		id
		p	2		world
		p	3		pos
	m	(Lakq;Lqw;)V	<init>	<init>
		p	1		world
		p	2		nbt
	m	()Z	A	hasMoreWaves
	m	()Z	B	isFinalWave
	m	()Z	C	hasBonusWave
	m	()Z	D	hasSpawnedBonusWave
	m	()Z	E	shouldSpawnBonusGroup
	m	()V	F	updateRaiders
	m	()Z	G	shouldSpawnGroup
	m	()V	H	setDirty
	m	()Z	a	isOver
	m	(I)V	a	setBadOmenLevel
		p	1		badOmenLevel
	m	(II)Lgw;	a	findRandomSpawnPos
		p	1		proximity
		p	2		tries
	m	(ILcdc;)V	a	setLeader
		p	1		wave
		p	2		entity
	m	(ILcdc;Lgw;Z)V	a	joinRaid
		p	1		wave
		p	2		raider
		p	3		pos
		p	4		existing
	m	(ILcdc;Z)Z	a	addWaveMob
		p	1		wave
		p	2		entity
		p	3		countHealth
	m	(Lakr;)Z	a	lambda$validPlayer$0
		p	1		player
	m	(Lbgv;)I	a	getNumGroups
		p	1		difficulty
	m	(Lbiq;)V	a	addHeroOfTheVillage
		p	1		entity
	m	(Lcbu;)V	a	absorbBadOmen
		p	1		player
	m	(Lcdb$b;IZ)I	a	getDefaultNumSpawns
		p	1		member
		p	2		wave
		p	3		extra
	m	(Lcdb$b;Lasc;ILbgw;Z)I	a	getPotentialBonusSpawns
		p	1		member
		p	2		random
		p	3		wave
		p	4		localDifficulty
		p	5		extra
	m	(Lcdc;Z)V	a	removeFromRaid
		p	1		entity
		p	2		countHealth
	m	(Lgw;)V	a	playSound
		p	1		pos
	m	(Ljava/lang/Integer;)Ljava/util/Set;	a	lambda$addWaveMob$2
		p	0		wavex
	m	(Lqw;)Lqw;	a	save
		p	1		nbt
	m	()Z	b	isBetweenWaves
	m	(I)Lcdc;	b	getLeader
		p	1		wave
	m	(ILcdc;)Z	b	addWaveMob
		p	1		wave
		p	2		entity
	m	(Lgw;)V	b	spawnGroup
		p	1		pos
	m	()Z	c	hasFirstWaveSpawned
	m	(I)V	c	removeLeader
		p	1		wave
	m	(Lgw;)V	c	setCenter
		p	1		center
	m	()Z	d	isStopped
	m	(I)Ljava/util/Optional;	d	getValidSpawnPos
		p	1		proximity
	m	(Lgw;)D	d	lambda$moveRaidCenterToNearbyVillageSection$1
		p	1		pos
	m	()Z	e	isVictory
	m	()Z	f	isLoss
	m	()F	g	getTotalHealth
	m	()Ljava/util/Set;	h	getAllRaiders
	m	()Lcpv;	i	getLevel
	m	()Z	j	isStarted
	m	()I	k	getGroupsSpawned
	m	()I	l	getMaxBadOmenLevel
	m	()I	m	getBadOmenLevel
	m	()V	n	stop
	m	()V	o	tick
	m	()V	p	updateBossbar
	m	()F	q	getHealthOfLivingRaiders
	m	()I	r	getTotalRaidersAlive
	m	()Lcjf;	s	getLeaderBannerInstance
	m	()Lgw;	t	getCenter
	m	()I	u	getId
	m	()Z	v	isActive
	m	()F	w	getEnchantOdds
	m	()Ljava/util/function/Predicate;	x	validPlayer
	m	()V	y	updatePlayers
	m	()V	z	moveRaidCenterToNearbyVillageSection
	f	Ljava/util/Set;	A	heroesOfTheVillage
	f	J	B	ticksActive
	f	Lgw;	C	center
	f	Lakq;	D	level
	f	Z	E	started
	f	I	F	id
	f	F	G	totalHealth
	f	I	H	badOmenLevel
	f	Z	I	active
	f	I	J	groupsSpawned
	f	Lakn;	K	raidEvent
	f	I	L	postRaidTicks
	f	I	M	raidCooldownTicks
	f	Lasc;	N	random
	f	I	O	numGroups
	f	Lcdb$a;	P	status
	f	I	Q	celebrationTicks
	f	Ljava/util/Optional;	R	waveSpawnPos
	f	I	a	VILLAGE_RADIUS_BUFFER
	f	I	b	MAX_NO_ACTION_TIME
	f	I	c	MAX_CELEBRATION_TICKS
	f	I	d	TICKS_PER_DAY
	f	I	e	DEFAULT_MAX_BAD_OMEN_LEVEL
	f	I	f	VALID_RAID_RADIUS_SQR
	f	I	g	RAID_REMOVAL_THRESHOLD_SQR
	f	I	h	SECTION_RADIUS_FOR_FINDING_NEW_VILLAGE_CENTER
	f	I	i	ATTEMPT_RAID_FARTHEST
	f	I	j	ATTEMPT_RAID_CLOSE
	f	I	k	ATTEMPT_RAID_INSIDE
	f	I	l	VILLAGE_SEARCH_RADIUS
	f	I	m	RAID_TIMEOUT_TICKS
	f	I	n	NUM_SPAWN_ATTEMPTS
	f	Ljava/lang/String;	o	OMINOUS_BANNER_PATTERN_NAME
	f	Ljava/lang/String;	p	RAIDERS_REMAINING
	f	I	q	POST_RAID_TICK_LIMIT
	f	I	r	DEFAULT_PRE_RAID_TICKS
	f	I	s	OUTSIDE_RAID_BOUNDS_TIMEOUT
	f	I	t	LOW_MOB_THRESHOLD
	f	Ltl;	u	RAID_NAME_COMPONENT
	f	Ltl;	v	RAID_BAR_VICTORY_COMPONENT
	f	Ltl;	w	RAID_BAR_DEFEAT_COMPONENT
	f	I	x	HERO_OF_THE_VILLAGE_DURATION
	f	Ljava/util/Map;	y	groupToLeaderMap
	f	Ljava/util/Map;	z	groupRaiderMap
c	cdb$1	net/minecraft/world/entity/raid/Raid$1
	f	[I	a	$SwitchMap$net$minecraft$world$entity$raid$Raid$RaiderType
	f	[I	b	$SwitchMap$net$minecraft$world$Difficulty
c	cdb$a	net/minecraft/world/entity/raid/Raid$RaidStatus
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/lang/String;)Lcdb$a;	a	getByName
		p	0		name
	m	()[Lcdb$a;	b	$values
	f	Lcdb$a;	a	ONGOING
	f	Lcdb$a;	b	VICTORY
	f	Lcdb$a;	c	LOSS
	f	Lcdb$a;	d	STOPPED
	f	[Lcdb$a;	e	VALUES
	f	[Lcdb$a;	f	$VALUES
c	cdb$b	net/minecraft/world/entity/raid/Raid$RaiderType
	m	(Ljava/lang/String;ILbiu;[I)V	<init>	<init>
		p	3		type
		p	4		countInWave
	m	()[Lcdb$b;	a	$values
	f	Lcdb$b;	a	VINDICATOR
	f	Lcdb$b;	b	EVOKER
	f	Lcdb$b;	c	PILLAGER
	f	Lcdb$b;	d	WITCH
	f	Lcdb$b;	e	RAVAGER
	f	[Lcdb$b;	f	VALUES
	f	Lbiu;	g	entityType
	f	[I	h	spawnsPerWaveBeforeBonus
	f	[Lcdb$b;	i	$VALUES
c	cdc	net/minecraft/world/entity/raid/Raider
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Z)V	A	setCelebrating
		p	1		celebrating
	m	()Z	U	requiresCustomPersistence
	m	(IZ)V	a	applyRaidBuffs
		p	1		wave
		p	2		unused
	m	(Lbho;)V	a	die
		p	1		damageSource
	m	(Lbho;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lcdb;)V	a	setCurrentRaid
		p	1		raid
	m	(Lcdc;)Lasc;	a	access$000
	m	(Lcqk;Lbgw;Lbjk;Lbjz;Lqw;)Lbjz;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
		p	5		entityNbt
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	()Lapc;	ac_	getCelebrateSound
	m	(I)V	b	setWave
		p	1		wave
	m	(Lbyn;)V	b	pickUpItem
		p	1		item
	m	(Lcdc;)F	b	access$100
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()V	b_	aiStep
	m	(I)V	c	setTicksOutsideRaid
		p	1		outOfRaidCounter
	m	(Lbyn;)Z	c	lambda$static$0
		p	0		itemEntity
	m	(Lcdc;)Lasc;	c	access$200
	m	(Lcdc;)Z	d	access$300
	m	(Lcdc;)Lasc;	e	access$400
	m	(Lcdc;)Lasc;	f	access$500
	m	()V	gi	updateNoActionTime
	m	()Z	gk	canJoinPatrol
	m	()Z	gq	canJoinRaid
	m	()Lcdb;	gr	getCurrentRaid
	m	()Z	gs	hasActiveRaid
	m	()I	gt	getWave
	m	()Z	gu	isCelebrating
	m	()I	gv	getTicksOutsideRaid
	m	(D)Z	h	removeWhenFarAway
		p	1		distanceSquared
	m	()V	z	registerGoals
	m	(Z)V	z	setCanJoinRaid
		p	1		ableToJoinRaid
	f	Ljava/util/function/Predicate;	b	ALLOWED_ITEMS
	f	Z	bT	canJoinRaid
	f	I	bU	ticksOutsideRaid
	f	Laee;	c	IS_CELEBRATING
	f	Lcdb;	d	raid
	f	I	e	wave
c	cdc$a	net/minecraft/world/entity/raid/Raider$HoldGroundAttackGoal
	m	(Lcdc;Lbyq;F)V	<init>	<init>
		p	2		illager
		p	3		distance
	m	()Z	Q_	requiresUpdateEveryTick
	m	()Z	a	canUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lbts;	a	shoutTargeting
	f	Lcdc;	b	this$0
	f	Lcdc;	c	mob
	f	F	d	hostileRadiusSqr
c	cdc$b	net/minecraft/world/entity/raid/Raider$ObtainRaidLeaderBannerGoal
	m	(Lcdc;Lcdc;)V	<init>	<init>
		p	2		actor
	m	()Z	a	canUse
	m	()V	e	tick
	f	Lcdc;	a	this$0
	f	Lcdc;	b	mob
c	cdc$c	net/minecraft/world/entity/raid/Raider$RaiderCelebration
	m	(Lcdc;Lcdc;)V	<init>	<init>
		p	2		raider
	m	()Z	a	canUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	f	Lcdc;	a	this$0
	f	Lcdc;	b	mob
c	cdc$d	net/minecraft/world/entity/raid/Raider$RaiderMoveThroughVillageGoal
	m	(Lcdc;DI)V	<init>	<init>
		p	1		raider
		p	2		speed
		p	4		distance
	m	()Z	a	canUse
	m	(Lgw;)Z	a	hasNotVisited
		p	1		pos
	m	(Lhe;)Z	a	lambda$hasSuitablePoi$0
	m	()Z	b	canContinueToUse
	m	()V	c	start
	m	()V	d	stop
	m	()V	e	tick
	m	()Z	h	isValidRaid
	m	()Z	i	hasSuitablePoi
	m	()V	k	updateVisited
	f	Lcdc;	a	raider
	f	D	b	speedModifier
	f	Lgw;	c	poiPos
	f	Ljava/util/List;	d	visited
	f	I	e	distanceToPoi
	f	Z	f	stuck
c	cdd	net/minecraft/world/entity/raid/Raids
	m	(Lakq;)V	<init>	<init>
		p	1		world
	m	()V	a	tick
	m	(I)Lcdb;	a	get
		p	1		id
	m	(Lakq;)Lebr$a;	a	factory
		p	0		world
	m	(Lakq;Lgw;)Lcdb;	a	getOrCreateRaid
		p	1		world
		p	2		pos
	m	(Lakq;Lqw;)Lcdd;	a	load
		p	0		world
		p	1		nbt
	m	(Lakr;)Lcdb;	a	createOrExtendRaid
		p	1		player
	m	(Lcdc;Lcdb;)Z	a	canJoinRaid
		p	0		raider
		p	1		raid
	m	(Lgw;I)Lcdb;	a	getNearbyRaid
		p	1		pos
		p	2		searchDistance
	m	(Lhe;)Ljava/lang/String;	a	getFileId
		p	0		dimensionTypeEntry
	m	(Lqw;)Lqw;	a	save
		p	1		nbt
	m	()I	b	getUniqueId
	m	(Lakq;)Lcdd;	b	lambda$factory$0
	m	(Lakq;Lqw;)Lcdd;	b	lambda$factory$1
		p	1		nbt
	m	(Lhe;)Z	b	lambda$createOrExtendRaid$2
		p	0		poiType
	f	Ljava/lang/String;	a	RAID_FILE_ID
	f	Ljava/util/Map;	b	raidMap
	f	Lakq;	c	level
	f	I	d	nextAvailableID
	f	I	e	tick
c	cde	net/minecraft/world/entity/raid/package-info
c	cdf	net/minecraft/world/entity/schedule/Activity
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		id
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/lang/String;)Lcdf;	a	register
		p	0		id
	f	Ljava/lang/String;	A	name
	f	I	B	hashCode
	f	Lcdf;	a	CORE
	f	Lcdf;	b	IDLE
	f	Lcdf;	c	WORK
	f	Lcdf;	d	PLAY
	f	Lcdf;	e	REST
	f	Lcdf;	f	MEET
	f	Lcdf;	g	PANIC
	f	Lcdf;	h	RAID
	f	Lcdf;	i	PRE_RAID
	f	Lcdf;	j	HIDE
	f	Lcdf;	k	FIGHT
	f	Lcdf;	l	CELEBRATE
	f	Lcdf;	m	ADMIRE_ITEM
	f	Lcdf;	n	AVOID
	f	Lcdf;	o	RIDE
	f	Lcdf;	p	PLAY_DEAD
	f	Lcdf;	q	LONG_JUMP
	f	Lcdf;	r	RAM
	f	Lcdf;	s	TONGUE
	f	Lcdf;	t	SWIM
	f	Lcdf;	u	LAY_SPAWN
	f	Lcdf;	v	SNIFF
	f	Lcdf;	w	INVESTIGATE
	f	Lcdf;	x	ROAR
	f	Lcdf;	y	EMERGE
	f	Lcdf;	z	DIG
c	cdg	net/minecraft/world/entity/schedule/Keyframe
	m	(IF)V	<init>	<init>
		p	1		startTime
		p	2		priority
	m	()I	a	getTimeStamp
	m	()F	b	getValue
	f	I	a	timeStamp
	f	F	b	value
c	cdh	net/minecraft/world/entity/schedule/Schedule
	m	(I)Lcdf;	a	getActivityAt
		p	1		time
	m	(ILjava/util/Map$Entry;)D	a	lambda$getActivityAt$1
		p	1		rule
	m	(Lcdf;)V	a	ensureTimelineExistsFor
		p	1		activity
	m	(Lcdf;Ljava/util/Map$Entry;)Z	a	lambda$getAllTimelinesExceptFor$0
		p	1		rule
	m	(Ljava/lang/String;)Lcdi;	a	register
		p	0		id
	m	(Lcdf;)Lcdj;	b	getTimelineFor
		p	1		activity
	m	(Lcdf;)Ljava/util/List;	c	getAllTimelinesExceptFor
		p	1		activity
	f	I	a	WORK_START_TIME
	f	I	b	TOTAL_WORK_TIME
	f	Lcdh;	c	EMPTY
	f	Lcdh;	d	SIMPLE
	f	Lcdh;	e	VILLAGER_BABY
	f	Lcdh;	f	VILLAGER_DEFAULT
	f	Ljava/util/Map;	g	timelines
c	cdi	net/minecraft/world/entity/schedule/ScheduleBuilder
	m	(Lcdh;)V	<init>	<init>
		p	1		schedule
	m	()Lcdh;	a	build
	m	(ILcdf;)Lcdi;	a	changeActivityAt
		p	1		startTime
		p	2		activity
	m	(Lcdi$a;)V	a	lambda$build$1
		p	1		activity
	m	(Lcdi$a;Lcdj;)V	a	lambda$build$0
		p	1		rule
	f	Lcdh;	a	schedule
	f	Ljava/util/List;	b	transitions
c	cdi$a	net/minecraft/world/entity/schedule/ScheduleBuilder$ActivityTransition
	m	(ILcdf;)V	<init>	<init>
		p	1		startTime
		p	2		activity
	m	()I	a	getTime
	m	()Lcdf;	b	getActivity
	f	I	a	time
	f	Lcdf;	b	activity
c	cdj	net/minecraft/world/entity/schedule/Timeline
	m	()Lcom/google/common/collect/ImmutableList;	a	getKeyframes
	m	(I)F	a	getValueAt
		p	1		time
	m	(IF)Lcdj;	a	addKeyframe
		p	1		startTime
		p	2		priority
	m	(Lit/unimi/dsi/fastutil/ints/Int2ObjectSortedMap;Lcdg;)V	a	lambda$sortAndDeduplicateKeyframes$0
		p	0		entry
	m	(Ljava/util/Collection;)Lcdj;	a	addKeyframes
		p	1		entries
	m	()V	b	sortAndDeduplicateKeyframes
	f	Ljava/util/List;	a	keyframes
	f	I	b	previousIndex
c	cdk	net/minecraft/world/entity/schedule/package-info
c	cdl	net/minecraft/world/entity/vehicle/AbstractMinecart
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lbiu;Lcpv;DDD)V	<init>	<init>
		p	1		type
		p	2		world
		p	3		x
		p	5		y
		p	7		z
	m	()Ldfj;	A	getDisplayBlockState
	m	()Ldfj;	B	getDefaultDisplayBlockState
	m	()I	C	getDisplayOffset
	m	()I	E	getDefaultDisplayOffset
	m	()Z	F	hasCustomDisplay
	m	()D	K_	lerpTargetY
	m	()D	L_	lerpTargetZ
	m	(DDDD)Lehn;	a	getPosOffs
		p	1		x
		p	3		y
		p	5		z
		p	7		offset
	m	(DDDFFI)V	a	lerpTo
		p	1		x
		p	3		y
		p	5		z
		p	7		yaw
		p	8		pitch
		p	9		interpolationSteps
	m	(F)V	a	setDamage
		p	1		damageWobbleStrength
	m	(IIIZ)V	a	activateMinecart
		p	1		x
		p	2		y
		p	3		z
		p	4		powered
	m	(Lbho;)V	a	destroy
		p	1		damageSource
	m	(Lbho;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbiq;Lbir;F)Lorg/joml/Vector3f;	a	getPassengerAttachmentPoint
		p	1		passenger
		p	2		dimensions
		p	3		scaleFactor
	m	(Lcpv;DDDLcdl$a;)Lcdl;	a	createMinecart
		p	0		world
		p	1		x
		p	3		y
		p	5		z
		p	7		type
	m	(Ldgn;)Lcom/mojang/datafixers/util/Pair;	a	exits
		p	0		shape
	m	(Lgw$a;)Leig;	a	lambda$getDismountLocationForPassenger$0
	m	(Lgw;)Z	a	isRedstoneConductor
		p	1		pos
	m	(Lha$a;Ll$a;)Lehn;	a	getRelativePortalPosition
		p	1		portalAxis
		p	2		portalRect
	m	(Ljava/util/EnumMap;)V	a	lambda$static$2
		p	0		map
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Z)V	a	setCustomDisplay
		p	1		present
	m	()F	aJ	getBlockSpeedFactor
	m	()Lbiq$b;	aU	getMovementEmission
	m	()V	a_	defineSynchedData
	m	(Lbjg;)Lehn;	b	getDismountLocationForPassenger
		p	1		passenger
	m	(Lgw;)Leig;	b	lambda$getDismountLocationForPassenger$1
		p	1		pos
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Z	br	isPickable
	m	()Z	bs	isPushable
	m	(I)V	c	setHurtTime
		p	1		wobbleTicks
	m	(Ldfj;)V	c	setDisplayBlockState
		p	1		state
	m	(Lgw;Ldfj;)V	c	moveAlongTrack
		p	1		pos
		p	2		state
	m	()Lha;	cE	getMotionDirection
	m	()Z	ce	isOnRails
	m	(I)V	d	setHurtDir
		p	1		wobbleSide
	m	()F	d_	lerpTargetXRot
	m	()Lcjf;	dy	getPickResult
	m	(Lbiq;)V	g	push
		p	1		entity
	m	()Lehi;	g_	getBoundingBoxForCulling
	m	(Lbiq;)Z	h	canCollideWith
		p	1		other
	m	()V	l	tick
	m	(DDD)V	l	lerpMotion
		p	1		x
		p	3		y
		p	5		z
	m	(F)V	m	animateHurt
		p	1		yaw
	m	(I)V	m	setDisplayOffset
		p	1		offset
	m	()D	n_	lerpTargetX
	m	()F	o_	lerpTargetYRot
	m	()Lcja;	q	getDropItem
	m	(DDD)Lehn;	q	getPos
		p	1		x
		p	3		y
		p	5		z
	m	()D	s	getMaxSpeed
	m	()V	t	comeOffTrack
	m	()V	v	applyNaturalSlowdown
	m	()F	w	getDamage
	m	()I	x	getHurtTime
	m	()I	y	getHurtDir
	m	()Lcdl$a;	z	getMinecartType
	f	F	b	WATER_SLOWDOWN_FACTOR
	f	F	c	LOWERED_PASSENGER_ATTACHMENT_Y
	f	F	d	PASSENGER_ATTACHMENT_Y
	f	Laee;	e	DATA_ID_HURT
	f	Laee;	f	DATA_ID_HURTDIR
	f	Laee;	g	DATA_ID_DAMAGE
	f	Laee;	h	DATA_ID_DISPLAY_BLOCK
	f	Laee;	i	DATA_ID_DISPLAY_OFFSET
	f	Laee;	j	DATA_ID_CUSTOM_DISPLAY
	f	Lcom/google/common/collect/ImmutableMap;	k	POSE_DISMOUNT_HEIGHTS
	f	Z	l	flipped
	f	Z	m	onRails
	f	I	n	lerpSteps
	f	D	o	lerpX
	f	D	p	lerpY
	f	D	q	lerpZ
	f	D	r	lerpYRot
	f	D	s	lerpXRot
	f	Lehn;	t	targetDeltaMovement
	f	Ljava/util/Map;	u	EXITS
c	cdl$1	net/minecraft/world/entity/vehicle/AbstractMinecart$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$state$properties$RailShape
	f	[I	b	$SwitchMap$net$minecraft$world$entity$vehicle$AbstractMinecart$Type
c	cdl$a	net/minecraft/world/entity/vehicle/AbstractMinecart$Type
	m	()[Lcdl$a;	a	$values
	f	Lcdl$a;	a	RIDEABLE
	f	Lcdl$a;	b	CHEST
	f	Lcdl$a;	c	FURNACE
	f	Lcdl$a;	d	TNT
	f	Lcdl$a;	e	SPAWNER
	f	Lcdl$a;	f	HOPPER
	f	Lcdl$a;	g	COMMAND_BLOCK
	f	[Lcdl$a;	h	$VALUES
c	cdm	net/minecraft/world/entity/vehicle/AbstractMinecartContainer
	m	(Lbiu;DDDLcpv;)V	<init>	<init>
		p	1		type
		p	2		x
		p	4		y
		p	6		z
		p	8		world
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()Laew;	G	getLootTable
	m	()J	H	getLootTableSeed
	m	()Lhn;	I	getItemStacks
	m	()V	K	clearItemStacks
	m	()V	a	clearContent
	m	(I)Lcjf;	a	getItem
		p	1		slot
	m	(II)Lcjf;	a	removeItem
		p	1		slot
		p	2		amount
	m	(ILcbt;)Lcel;	a	createMenu
		p	1		syncId
		p	2		playerInventory
	m	(ILcjf;)V	a	setItem
		p	1		slot
		p	2		stack
	m	(J)V	a	setLootTableSeed
		p	1		lootTableSeed
	m	(Laew;)V	a	setLootTable
		p	1		lootTableId
	m	(Laew;J)V	a	setLootTable
		p	1		id
		p	2		lootSeed
	m	(Lbho;)V	a	destroy
		p	1		damageSource
	m	(Lbiq$c;)V	a	remove
		p	1		reason
	m	(Lcbu;)Z	a	stillValid
		p	1		player
	m	(Lcbu;Lbgx;)Lbgy;	a	interact
		p	1		player
		p	2		hand
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(I)Lbjy;	a_	getSlot
		p	1		mappedIndex
	m	(I)Lcjf;	b	removeItemNoUpdate
		p	1		slot
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(ILcbt;Lcbu;)Lcel;	createMenu	createMenu
		p	1		syncId
		p	2		playerInventory
		p	3		player
	m	()V	e	setChanged
	m	()V	v	applyNaturalSlowdown
	f	Lhn;	c	itemStacks
	f	Laew;	d	lootTable
	f	J	e	lootTableSeed
c	cdn	net/minecraft/world/entity/vehicle/Boat
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcpv;DDD)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
	m	()Lcdn$b;	A	getVariant
	m	()I	B	getMaxPassengers
	m	()V	C	tickBubbleColumn
	m	()V	E	tickLerp
	m	()Lcdn$a;	F	getStatus
	m	()Z	G	checkInWater
	m	()Lcdn$a;	H	isUnderwater
	m	()V	I	floatBoat
	m	()V	K	controlBoat
	m	()D	K_	lerpTargetY
	m	()I	L	getBubbleTime
	m	()D	L_	lerpTargetZ
	m	(DDDFFI)V	a	lerpTo
		p	1		x
		p	3		y
		p	5		z
		p	7		yaw
		p	8		pitch
		p	9		interpolationSteps
	m	(DZLdfj;Lgw;)V	a	checkFallDamage
		p	1		heightDifference
		p	3		onGround
		p	4		state
		p	5		landedPosition
	m	(F)V	a	setDamage
		p	1		wobbleStrength
	m	(IF)F	a	getRowingTime
		p	1		paddle
		p	2		tickDelta
	m	(Lbho;)V	a	destroy
		p	1		source
	m	(Lbho;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbiq;)Z	a	hasEnoughSpaceFor
		p	1		entity
	m	(Lbiq;Lbiq$a;)V	a	positionRider
		p	1		passenger
		p	2		positionUpdater
	m	(Lbiq;Lbiq;)Z	a	canVehicleCollide
		p	0		entity
		p	1		other
	m	(Lbiq;Lbir;F)Lorg/joml/Vector3f;	a	getPassengerAttachmentPoint
		p	1		passenger
		p	2		dimensions
		p	3		scaleFactor
	m	(Lbjs;Lbir;)F	a	getEyeHeight
		p	1		pose
		p	2		dimensions
	m	(Lcbu;Lbgx;)Lbgy;	a	interact
		p	1		player
		p	2		hand
	m	(Lcdn$b;)V	a	setVariant
		p	1		variant
	m	(Lha$a;Ll$a;)Lehn;	a	getRelativePortalPosition
		p	1		portalAxis
		p	2		portalRect
	m	(Ljava/lang/Object;)V	a	setVariant
		p	1		variant
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(ZZ)V	a	setPaddleState
		p	1		leftMoving
		p	2		rightMoving
	m	(ZZZZ)V	a	setInput
		p	1		pressingLeft
		p	2		pressingRight
		p	3		pressingForward
		p	4		pressingBack
	m	()Lbiq$b;	aU	getMovementEmission
	m	()V	a_	defineSynchedData
	m	(F)F	b	getBubbleAngle
		p	1		tickDelta
	m	(I)V	b	setBubbleTime
		p	1		wobbleTicks
	m	(Lbiq;)V	b	clampRotation
		p	1		passenger
	m	(Lbjg;)Lehn;	b	getDismountLocationForPassenger
		p	1		passenger
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Z	bc	isUnderWater
	m	()Z	br	isPickable
	m	()Z	bs	isPushable
	m	()Z	bx	canBeCollidedWith
	m	()Ljava/lang/Object;	c	getVariant
	m	(I)Z	c	getPaddleState
		p	1		paddle
	m	(Lbiq;)Z	c	lambda$tickBubbleColumn$0
		p	0		entity
	m	()Lha;	cE	getMotionDirection
	m	()Lbjg;	cN	getControllingPassenger
	m	()Ltl;	cn	getTypeName
	m	(I)V	d	setHurtTime
		p	1		wobbleTicks
	m	()F	d_	lerpTargetXRot
	m	()Lcjf;	dy	getPickResult
	m	(Lbiq;)V	g	push
		p	1		entity
	m	(Lbiq;)Z	h	canCollideWith
		p	1		other
	m	(Lbiq;)V	j	onPassengerTurned
		p	1		passenger
	m	(Z)V	k	onAboveBubbleCol
		p	1		drag
	m	()V	l	tick
	m	(F)V	m	animateHurt
		p	1		yaw
	m	(I)V	m	setHurtDir
		p	1		side
	m	()D	n_	lerpTargetX
	m	()F	o_	lerpTargetYRot
	m	()Lcja;	q	getDropItem
	m	(Lbiq;)Z	r	canAddPassenger
		p	1		passenger
	m	()Lapc;	s	getPaddleSound
	m	()F	t	getWaterLevelAbove
	m	()F	v	getGroundFriction
	m	()F	w	getSinglePassengerXOffset
	m	()F	x	getDamage
	m	()I	y	getHurtTime
	m	()I	z	getHurtDir
	f	D	aE	lerpYRot
	f	D	aF	lerpXRot
	f	Z	aG	inputLeft
	f	Z	aH	inputRight
	f	Z	aI	inputUp
	f	Z	aJ	inputDown
	f	D	aK	waterLevel
	f	F	aL	landFriction
	f	Lcdn$a;	aM	status
	f	Lcdn$a;	aN	oldStatus
	f	D	aO	lastYd
	f	Z	aP	isAboveBubbleColumn
	f	Z	aQ	bubbleColumnDirectionIsDown
	f	F	aR	bubbleMultiplier
	f	F	aS	bubbleAngle
	f	F	aT	bubbleAngleO
	f	I	b	PADDLE_LEFT
	f	I	c	PADDLE_RIGHT
	f	D	d	PADDLE_SOUND_TIME
	f	I	e	BUBBLE_TIME
	f	Laee;	f	DATA_ID_HURT
	f	Laee;	g	DATA_ID_HURTDIR
	f	Laee;	h	DATA_ID_DAMAGE
	f	Laee;	i	DATA_ID_TYPE
	f	Laee;	j	DATA_ID_PADDLE_LEFT
	f	Laee;	k	DATA_ID_PADDLE_RIGHT
	f	Laee;	l	DATA_ID_BUBBLE_TIME
	f	I	m	TIME_TO_EJECT
	f	F	n	PADDLE_SPEED
	f	[F	o	paddlePositions
	f	F	p	invFriction
	f	F	q	outOfControlTicks
	f	F	r	deltaRotation
	f	I	s	lerpSteps
	f	D	t	lerpX
	f	D	u	lerpY
	f	D	v	lerpZ
c	cdn$1	net/minecraft/world/entity/vehicle/Boat$1
	f	[I	a	$SwitchMap$net$minecraft$world$entity$vehicle$Boat$Type
	f	[I	b	$SwitchMap$net$minecraft$world$entity$vehicle$Boat$Status
c	cdn$a	net/minecraft/world/entity/vehicle/Boat$Status
	m	()[Lcdn$a;	a	$values
	f	Lcdn$a;	a	IN_WATER
	f	Lcdn$a;	b	UNDER_WATER
	f	Lcdn$a;	c	UNDER_FLOWING_WATER
	f	Lcdn$a;	d	ON_LAND
	f	Lcdn$a;	e	IN_AIR
	f	[Lcdn$a;	f	$VALUES
c	cdn$b	net/minecraft/world/entity/vehicle/Boat$Type
	m	(Ljava/lang/String;ILcsv;Ljava/lang/String;)V	<init>	<init>
		p	3		baseBlock
		p	4		name
	m	()Ljava/lang/String;	a	getName
	m	(I)Lcdn$b;	a	byId
		p	0		type
	m	(Ljava/lang/String;)Lcdn$b;	a	byName
		p	0		name
	m	()Lcsv;	b	getPlanks
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Lcdn$b;	d	$values
	f	Lcdn$b;	a	OAK
	f	Lcdn$b;	b	SPRUCE
	f	Lcdn$b;	c	BIRCH
	f	Lcdn$b;	d	JUNGLE
	f	Lcdn$b;	e	ACACIA
	f	Lcdn$b;	f	CHERRY
	f	Lcdn$b;	g	DARK_OAK
	f	Lcdn$b;	h	MANGROVE
	f	Lcdn$b;	i	BAMBOO
	f	Lasp$a;	j	CODEC
	f	Ljava/lang/String;	k	name
	f	Lcsv;	l	planks
	f	Ljava/util/function/IntFunction;	m	BY_ID
	f	[Lcdn$b;	n	$VALUES
c	cdo	net/minecraft/world/entity/vehicle/ChestBoat
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcpv;DDD)V	<init>	<init>
		p	1		world
	m	()I	B	getMaxPassengers
	m	()Laew;	G	getLootTable
	m	()J	H	getLootTableSeed
	m	()Lhn;	I	getItemStacks
	m	()V	K	clearItemStacks
	m	()V	a	clearContent
	m	(I)Lcjf;	a	getItem
		p	1		slot
	m	(II)Lcjf;	a	removeItem
		p	1		slot
		p	2		amount
	m	(ILcjf;)V	a	setItem
		p	1		slot
		p	2		stack
	m	(J)V	a	setLootTableSeed
		p	1		lootTableSeed
	m	(Laew;)V	a	setLootTable
		p	1		lootTableId
	m	(Lbho;)V	a	destroy
		p	1		source
	m	(Lbiq$c;)V	a	remove
		p	1		reason
	m	(Lcbu;)Z	a	stillValid
		p	1		player
	m	(Lcbu;Lbgx;)Lbgy;	a	interact
		p	1		player
		p	2		hand
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(I)Lbjy;	a_	getSlot
		p	1		mappedIndex
	m	()I	b	getContainerSize
	m	(I)Lcjf;	b	removeItemNoUpdate
		p	1		slot
	m	(Lcbu;)V	b	openCustomInventoryScreen
		p	1		player
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lcbu;)V	c	stopOpen
		p	1		player
	m	(ILcbt;Lcbu;)Lcel;	createMenu	createMenu
		p	1		syncId
		p	2		playerInventory
		p	3		player
	m	()V	e	setChanged
	m	(Lcbu;)V	e	unpackLootTable
		p	1		player
	m	()Lcja;	q	getDropItem
	m	()F	w	getSinglePassengerXOffset
	f	I	f	CONTAINER_SIZE
	f	Lhn;	g	itemStacks
	f	Laew;	h	lootTable
	f	J	i	lootTableSeed
c	cdo$1	net/minecraft/world/entity/vehicle/ChestBoat$1
	f	[I	a	$SwitchMap$net$minecraft$world$entity$vehicle$Boat$Type
c	cdp	net/minecraft/world/entity/vehicle/ContainerEntity
	m	()Laew;	G	getLootTable
	m	()J	H	getLootTableSeed
	m	()Lhn;	I	getItemStacks
	m	()V	K	clearItemStacks
	m	(J)V	a	setLootTableSeed
		p	1		lootTableSeed
	m	(Laew;)V	a	setLootTable
		p	1		lootTableId
	m	(Lbho;Lcpv;Lbiq;)V	a	chestVehicleDestroyed
		p	1		source
		p	2		world
		p	3		vehicle
	m	()Z	af_	isEmpty
	m	(II)Lcjf;	b	removeChestVehicleItem
		p	1		slot
		p	2		amount
	m	(Lqw;)V	b_	readChestVehicleSaveData
		p	1		nbt
	m	(ILcjf;)V	c	setChestVehicleItem
		p	1		slot
		p	2		stack
	m	(Lqw;)V	c	addChestVehicleSaveData
		p	1		nbt
	m	(Lcbu;)Lbgy;	c_	interactWithContainerVehicle
		p	1		player
	m	()Z	dG	isRemoved
	m	()Lcpv;	dL	level
	m	()Lehn;	dj	position
	m	(I)Lcjf;	e_	removeChestVehicleItemNoUpdate
		p	1		slot
	m	()V	f	clearChestVehicleContent
	m	(Lcbu;)V	f	unpackChestVehicleLootTable
		p	1		player
	m	(I)Lcjf;	f_	getChestVehicleItem
		p	1		slot
	m	()Z	g	isChestVehicleEmpty
	m	(Lcbu;)Z	g	isChestVehicleStillValid
		p	1		player
	m	(I)Lbjy;	g_	getChestVehicleSlot
		p	1		slot
c	cdp$1	net/minecraft/world/entity/vehicle/ContainerEntity$1
	m	()Lcjf;	a	get
	m	(Lcjf;)Z	a	set
		p	1		stack
	f	I	a	val$slot
	f	Lcdp;	c	this$0
c	cdq	net/minecraft/world/entity/vehicle/DismountHelper
	m	(D)Z	a	isBlockFloorValid
		p	0		height
	m	(Lbiu;Lcpf;Lgw;Z)Lehn;	a	findSafeDismountLocation
		p	0		entityType
		p	1		world
		p	2		pos
		p	3		ignoreInvalidPos
	m	(Lcpb;Lgw;)Leig;	a	nonClimbableShape
		p	0		world
		p	1		pos
	m	(Lcpf;Lbjg;Lehi;)Z	a	canDismountTo
		p	0		world
		p	1		entity
		p	2		targetBox
	m	(Lcpf;Lehn;Lbjg;Lbjs;)Z	a	canDismountTo
		p	0		world
		p	1		offset
		p	2		entity
		p	3		pose
	m	(Lcpf;Lgw;)Leig;	a	lambda$findSafeDismountLocation$0
	m	(Lgw;ILjava/util/function/Function;)D	a	findCeilingFrom
		p	0		pos
		p	1		maxDistance
		p	2		collisionShapeGetter
	m	(Lha;)[[I	a	offsetsForDirection
		p	0		movementDirection
c	cdr	net/minecraft/world/entity/vehicle/Minecart
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcpv;DDD)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
	m	(IIIZ)V	a	activateMinecart
		p	1		x
		p	2		y
		p	3		z
		p	4		powered
	m	(Lcbu;Lbgx;)Lbgy;	a	interact
		p	1		player
		p	2		hand
	m	()Lcja;	q	getDropItem
	m	()Lcdl$a;	z	getMinecartType
c	cds	net/minecraft/world/entity/vehicle/MinecartChest
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcpv;DDD)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
	m	()Ldfj;	B	getDefaultDisplayBlockState
	m	()I	E	getDefaultDisplayOffset
	m	(ILcbt;)Lcel;	a	createMenu
		p	1		syncId
		p	2		playerInventory
	m	(Lcbu;Lbgx;)Lbgy;	a	interact
		p	1		player
		p	2		hand
	m	()I	b	getContainerSize
	m	(Lcbu;)V	c	stopOpen
		p	1		player
	m	()Lcja;	q	getDropItem
	m	()Lcdl$a;	z	getMinecartType
c	cdt	net/minecraft/world/entity/vehicle/MinecartCommandBlock
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcpv;DDD)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
	m	()Ldfj;	B	getDefaultDisplayBlockState
	m	()Lcow;	G	getCommandBlock
	m	(IIIZ)V	a	activateMinecart
		p	1		x
		p	2		y
		p	3		z
		p	4		powered
	m	(Laee;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Lcbu;Lbgx;)Lbgy;	a	interact
		p	1		player
		p	2		hand
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Z	cM	onlyOpCanSetNbt
	m	()Lcja;	q	getDropItem
	m	()Lcdl$a;	z	getMinecartType
	f	Laee;	c	DATA_ID_COMMAND_NAME
	f	Laee;	d	DATA_ID_LAST_OUTPUT
	f	Lcow;	e	commandBlock
	f	I	f	ACTIVATION_DELAY
	f	I	g	lastActivated
c	cdt$a	net/minecraft/world/entity/vehicle/MinecartCommandBlock$MinecartCommandBase
	m	()Lakq;	e	getLevel
	m	()V	f	onUpdated
	m	()Lehn;	g	getPosition
	m	()Lcdt;	h	getMinecart
	m	()Ldt;	i	createCommandSourceStack
	m	()Z	j	isValid
	f	Lcdt;	b	this$0
c	cdu	net/minecraft/world/entity/vehicle/MinecartFurnace
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcpv;DDD)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
	m	()Ldfj;	B	getDefaultDisplayBlockState
	m	()Z	G	hasFuel
	m	(Lcbu;Lbgx;)Lbgy;	a	interact
		p	1		player
		p	2		hand
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	a_	defineSynchedData
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lgw;Ldfj;)V	c	moveAlongTrack
		p	1		pos
		p	2		state
	m	()V	l	tick
	m	(Z)V	p	setHasFuel
		p	1		lit
	m	()Lcja;	q	getDropItem
	m	()D	s	getMaxSpeed
	m	()V	v	applyNaturalSlowdown
	m	()Lcdl$a;	z	getMinecartType
	f	D	c	xPush
	f	D	d	zPush
	f	Laee;	e	DATA_ID_FUEL
	f	I	f	fuel
	f	Lcmg;	g	INGREDIENT
c	cdv	net/minecraft/world/entity/vehicle/MinecartHopper
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcpv;DDD)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
	m	()Ldfj;	B	getDefaultDisplayBlockState
	m	()I	E	getDefaultDisplayOffset
	m	()Z	L	isEnabled
	m	()D	M	getLevelX
	m	()D	N	getLevelY
	m	()D	O	getLevelZ
	m	()Z	P	suckInItems
	m	(IIIZ)V	a	activateMinecart
		p	1		x
		p	2		y
		p	3		z
		p	4		powered
	m	(ILcbt;)Lcel;	a	createMenu
		p	1		syncId
		p	2		playerInventory
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()I	b	getContainerSize
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()V	l	tick
	m	(Z)V	p	setEnabled
		p	1		enabled
	m	()Lcja;	q	getDropItem
	m	()Lcdl$a;	z	getMinecartType
	f	Z	f	enabled
c	cdw	net/minecraft/world/entity/vehicle/MinecartSpawner
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcpv;DDD)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
	m	()Ldfj;	B	getDefaultDisplayBlockState
	m	()Lcox;	G	getSpawner
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	(Lcpv;)Ljava/lang/Runnable;	b	createTicker
		p	1		world
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lcpv;)V	c	lambda$createTicker$1
	m	()Z	cM	onlyOpCanSetNbt
	m	(Lcpv;)V	d	lambda$createTicker$0
	m	()V	l	tick
	m	()Lcja;	q	getDropItem
	m	()Lcdl$a;	z	getMinecartType
	f	Lcox;	c	spawner
	f	Ljava/lang/Runnable;	d	ticker
c	cdw$1	net/minecraft/world/entity/vehicle/MinecartSpawner$1
	m	(Lcpv;Lgw;I)V	a	broadcastEvent
		p	1		world
		p	2		pos
		p	3		status
	f	Lcdw;	a	this$0
c	cdx	net/minecraft/world/entity/vehicle/MinecartTNT
	m	(Lbiu;Lcpv;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcpv;DDD)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
	m	()Ldfj;	B	getDefaultDisplayBlockState
	m	()V	G	primeFuse
	m	()I	H	getFuse
	m	()Z	I	isPrimed
	m	(FFLbho;)Z	a	causeFallDamage
		p	1		fallDistance
		p	2		damageMultiplier
		p	3		damageSource
	m	(IIIZ)V	a	activateMinecart
		p	1		x
		p	2		y
		p	3		z
		p	4		powered
	m	(Lbho;)V	a	destroy
		p	1		damageSource
	m	(Lbho;D)V	a	explode
		p	1		damageSource
		p	2		power
	m	(Lbho;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lcpn;Lcpb;Lgw;Ldfj;F)Z	a	shouldBlockExplode
		p	1		explosion
		p	2		world
		p	3		pos
		p	4		state
		p	5		explosionPower
	m	(Lcpn;Lcpb;Lgw;Ldfj;Leam;F)F	a	getBlockExplosionResistance
		p	1		explosion
		p	2		world
		p	3		pos
		p	4		blockState
		p	5		fluidState
		p	6		max
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(D)V	h	explode
		p	1		power
	m	()V	l	tick
	m	()Lcja;	q	getDropItem
	m	()Lcdl$a;	z	getMinecartType
	f	B	c	EVENT_PRIME
	f	I	d	fuse
c	cdy	net/minecraft/world/entity/vehicle/package-info
c	cdz	net/minecraft/world/flag/FeatureElement
	m	(Lcec;)Z	a	isEnabled
		p	1		enabledFeatures
	m	()Lcec;	m	requiredFeatures
	f	Ljava/util/Set;	bv	FILTERED_REGISTRIES
c	cea	net/minecraft/world/flag/FeatureFlag
	m	(Lced;I)V	<init>	<init>
		p	1		universe
		p	2		id
	f	Lced;	a	universe
	f	J	b	mask
c	ceb	net/minecraft/world/flag/FeatureFlagRegistry
	m	(Lced;Lcec;Ljava/util/Map;)V	<init>	<init>
		p	1		universe
		p	2		featureSet
		p	3		featureFlags
	m	()Lcec;	a	allFlags
	m	(Laew;)V	a	lambda$fromNames$0
		p	0		feature
	m	(Lcec;)Z	a	isSubset
		p	1		features
	m	(Lcec;Ljava/util/Set;Laew;Lcea;)V	a	lambda$toNames$1
		p	2		identifier
		p	3		featureFlag
	m	(Ljava/lang/Iterable;)Lcec;	a	fromNames
		p	1		features
	m	(Ljava/lang/Iterable;Ljava/util/function/Consumer;)Lcec;	a	fromNames
		p	1		features
		p	2		unknownFlagConsumer
	m	(Ljava/util/List;)Lcom/mojang/serialization/DataResult;	a	lambda$codec$3
		p	1		featureIds
	m	(Ljava/util/Set;)Ljava/lang/String;	a	lambda$codec$2
	m	([Lcea;)Lcec;	a	subset
		p	1		features
	m	()Lcom/mojang/serialization/Codec;	b	codec
	m	(Lcec;)Ljava/util/Set;	b	toNames
		p	1		features
	m	(Lcec;)Ljava/util/List;	c	lambda$codec$4
		p	1		features
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lced;	b	universe
	f	Ljava/util/Map;	c	names
	f	Lcec;	d	allFlags
c	ceb$a	net/minecraft/world/flag/FeatureFlagRegistry$Builder
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		universe
	m	()Lceb;	a	build
	m	(Laew;)Lcea;	a	create
		p	1		feature
	m	(Ljava/lang/String;)Lcea;	a	createVanilla
		p	1		feature
	f	Lced;	a	universe
	f	I	b	id
	f	Ljava/util/Map;	c	flags
c	cec	net/minecraft/world/flag/FeatureFlagSet
	m	(Lced;J)V	<init>	<init>
		p	1		universe
		p	2		featuresMask
	m	()Lcec;	a	of
	m	(Lcea;)Lcec;	a	of
		p	0		feature
	m	(Lcea;[Lcea;)Lcec;	a	of
		p	0		feature1
		p	1		features
	m	(Lcec;)Z	a	isSubsetOf
		p	1		features
	m	(Lced;JLjava/lang/Iterable;)J	a	computeMask
		p	0		universe
		p	1		featuresMask
		p	3		newFeatures
	m	(Lced;Ljava/util/Collection;)Lcec;	a	create
		p	0		universe
		p	1		features
	m	(Lcea;)Z	b	contains
		p	1		feature
	m	(Lcec;)Lcec;	b	join
		p	1		features
	f	I	a	MAX_CONTAINER_SIZE
	f	Lcec;	b	EMPTY
	f	Lced;	c	universe
	f	J	d	mask
c	ced	net/minecraft/world/flag/FeatureFlagUniverse
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		name
	f	Ljava/lang/String;	a	id
c	cee	net/minecraft/world/flag/FeatureFlags
	m	(Lceb;Lcec;Lcec;)Ljava/lang/String;	a	printMissingFlags
		p	0		featureManager
		p	1		featuresToCheck
		p	2		features
	m	(Lcec;)Z	a	isExperimental
		p	0		features
	m	(Lcec;Lcec;)Ljava/lang/String;	a	printMissingFlags
		p	0		featuresToCheck
		p	1		features
	m	(Ljava/util/Set;Laew;)Z	a	lambda$printMissingFlags$0
		p	1		id
	f	Lcea;	a	VANILLA
	f	Lcea;	b	BUNDLE
	f	Lcea;	c	TRADE_REBALANCE
	f	Lceb;	d	REGISTRY
	f	Lcom/mojang/serialization/Codec;	e	CODEC
	f	Lcec;	f	VANILLA_SET
	f	Lcec;	g	DEFAULT_FLAGS
c	cef	net/minecraft/world/flag/package-info
c	ceg	net/minecraft/world/food/FoodConstants
	f	I	a	MAX_FOOD
	f	F	b	MAX_SATURATION
	f	F	c	START_SATURATION
	f	F	d	SATURATION_FLOOR
	f	F	e	EXHAUSTION_DROP
	f	I	f	HEALTH_TICK_COUNT
	f	I	g	HEALTH_TICK_COUNT_SATURATED
	f	I	h	HEAL_LEVEL
	f	I	i	SPRINT_LEVEL
	f	I	j	STARVE_LEVEL
	f	F	k	FOOD_SATURATION_POOR
	f	F	l	FOOD_SATURATION_LOW
	f	F	m	FOOD_SATURATION_NORMAL
	f	F	n	FOOD_SATURATION_GOOD
	f	F	o	FOOD_SATURATION_MAX
	f	F	p	FOOD_SATURATION_SUPERNATURAL
	f	F	q	EXHAUSTION_HEAL
	f	F	r	EXHAUSTION_JUMP
	f	F	s	EXHAUSTION_SPRINT_JUMP
	f	F	t	EXHAUSTION_MINE
	f	F	u	EXHAUSTION_ATTACK
	f	F	v	EXHAUSTION_WALK
	f	F	w	EXHAUSTION_CROUCH
	f	F	x	EXHAUSTION_SPRINT
	f	F	y	EXHAUSTION_SWIM
c	ceh	net/minecraft/world/food/FoodData
	m	()I	a	getFoodLevel
	m	(F)V	a	addExhaustion
		p	1		exhaustion
	m	(I)V	a	setFoodLevel
		p	1		foodLevel
	m	(IF)V	a	eat
		p	1		food
		p	2		saturationModifier
	m	(Lcbu;)V	a	tick
		p	1		player
	m	(Lcja;Lcjf;)V	a	eat
		p	1		item
		p	2		stack
	m	(Lqw;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()I	b	getLastFoodLevel
	m	(F)V	b	setSaturation
		p	1		saturationLevel
	m	(Lqw;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Z	c	needsFood
	m	(F)V	c	setExhaustion
		p	1		exhaustion
	m	()F	d	getExhaustionLevel
	m	()F	e	getSaturationLevel
	f	I	a	foodLevel
	f	F	b	saturationLevel
	f	F	c	exhaustionLevel
	f	I	d	tickTimer
	f	I	e	lastFoodLevel
c	cei	net/minecraft/world/food/FoodProperties
	m	(IFZZZLjava/util/List;)V	<init>	<init>
		p	1		hunger
		p	2		saturationModifier
		p	3		meat
		p	4		alwaysEdible
		p	5		snack
		p	6		statusEffects
	m	()I	a	getNutrition
	m	()F	b	getSaturationModifier
	m	()Z	c	isMeat
	m	()Z	d	canAlwaysEat
	m	()Z	e	isFastFood
	m	()Ljava/util/List;	f	getEffects
	f	I	a	nutrition
	f	F	b	saturationModifier
	f	Z	c	isMeat
	f	Z	d	canAlwaysEat
	f	Z	e	fastFood
	f	Ljava/util/List;	f	effects
c	cei$a	net/minecraft/world/food/FoodProperties$Builder
	m	()Lcei$a;	a	meat
	m	(F)Lcei$a;	a	saturationMod
		p	1		saturationModifier
	m	(I)Lcei$a;	a	nutrition
		p	1		hunger
	m	(Lbid;F)Lcei$a;	a	effect
		p	1		effect
		p	2		chance
	m	()Lcei$a;	b	alwaysEat
	m	()Lcei$a;	c	fast
	m	()Lcei;	d	build
	f	I	a	nutrition
	f	F	b	saturationModifier
	f	Z	c	isMeat
	f	Z	d	canAlwaysEat
	f	Z	e	fastFood
	f	Ljava/util/List;	f	effects
c	cej	net/minecraft/world/food/Foods
	m	(I)Lcei$a;	a	stew
		p	0		hunger
	f	Lcei;	A	POISONOUS_POTATO
	f	Lcei;	B	PORKCHOP
	f	Lcei;	C	POTATO
	f	Lcei;	D	PUFFERFISH
	f	Lcei;	E	PUMPKIN_PIE
	f	Lcei;	F	RABBIT
	f	Lcei;	G	RABBIT_STEW
	f	Lcei;	H	ROTTEN_FLESH
	f	Lcei;	I	SALMON
	f	Lcei;	J	SPIDER_EYE
	f	Lcei;	K	SUSPICIOUS_STEW
	f	Lcei;	L	SWEET_BERRIES
	f	Lcei;	M	GLOW_BERRIES
	f	Lcei;	N	TROPICAL_FISH
	f	Lcei;	a	APPLE
	f	Lcei;	b	BAKED_POTATO
	f	Lcei;	c	BEEF
	f	Lcei;	d	BEETROOT
	f	Lcei;	e	BEETROOT_SOUP
	f	Lcei;	f	BREAD
	f	Lcei;	g	CARROT
	f	Lcei;	h	CHICKEN
	f	Lcei;	i	CHORUS_FRUIT
	f	Lcei;	j	COD
	f	Lcei;	k	COOKED_BEEF
	f	Lcei;	l	COOKED_CHICKEN
	f	Lcei;	m	COOKED_COD
	f	Lcei;	n	COOKED_MUTTON
	f	Lcei;	o	COOKED_PORKCHOP
	f	Lcei;	p	COOKED_RABBIT
	f	Lcei;	q	COOKED_SALMON
	f	Lcei;	r	COOKIE
	f	Lcei;	s	DRIED_KELP
	f	Lcei;	t	ENCHANTED_GOLDEN_APPLE
	f	Lcei;	u	GOLDEN_APPLE
	f	Lcei;	v	GOLDEN_CARROT
	f	Lcei;	w	HONEY_BOTTLE
	f	Lcei;	x	MELON_SLICE
	f	Lcei;	y	MUSHROOM_STEW
	f	Lcei;	z	MUTTON
c	cek	net/minecraft/world/food/package-info
c	cel	net/minecraft/world/inventory/AbstractContainerMenu
	m	(Lcfq;I)V	<init>	<init>
		p	1		type
		p	2		syncId
	m	()Lcfq;	a	getType
	m	(I)Z	a	isValidSlotIndex
		p	1		slot
	m	(II)V	a	setData
		p	1		id
		p	2		value
	m	(IILceu;Lcbu;)V	a	clicked
		p	1		slotIndex
		p	2		button
		p	3		actionType
		p	4		player
	m	(IILcjf;)V	a	setItem
		p	1		slot
		p	2		revision
		p	3		stack
	m	(ILcbu;)Z	a	isValidQuickcraftType
		p	0		stage
		p	1		player
	m	(ILcjf;)V	a	setRemoteSlot
		p	1		slot
		p	2		stack
	m	(ILcjf;Ljava/util/function/Supplier;)V	a	triggerSlotListeners
		p	1		slot
		p	2		stack
		p	3		copySupplier
	m	(ILjava/util/List;Lcjf;)V	a	initializeContents
		p	1		revision
		p	2		stacks
		p	3		cursorStack
	m	(Lbgr;)V	a	slotsChanged
		p	1		inventory
	m	(Lbgr;I)V	a	checkContainerSize
		p	0		inventory
		p	1		expectedSize
	m	(Lcbu;)Z	a	stillValid
		p	1		player
	m	(Lcbu;I)Lcjf;	a	quickMoveStack
		p	1		player
		p	2		slot
	m	(Lcbu;Lbgr;)V	a	clearContainer
		p	1		player
		p	2		inventory
	m	(Lcbu;Lcet;Lcgd;Lcjf;Lcjf;)Z	a	tryItemClickBehaviourOverride
		p	1		player
		p	2		clickType
		p	3		slot
		p	4		stack
		p	5		cursorStack
	m	(Lcel;)V	a	transferState
		p	1		handler
	m	(Lcev;)V	a	addDataSlots
		p	1		propertyDelegate
	m	(Lcev;I)V	a	checkContainerDataCount
		p	0		data
		p	1		expectedCount
	m	(Lcew;Lcbu;Lcsv;)Z	a	stillValid
		p	0		context
		p	1		player
		p	2		block
	m	(Lcex;)V	a	addSlotListener
		p	1		listener
	m	(Lcey;)V	a	setSynchronizer
		p	1		handler
	m	(Lcfb;)Lcfb;	a	addDataSlot
		p	1		property
	m	(Lcgd;)Lcgd;	a	addSlot
		p	1		slot
	m	(Lcgd;Lcbu;Lcjf;)V	a	lambda$doClick$3
		p	3		stack
	m	(Lcgd;Lcjf;Z)Z	a	canItemQuickReplace
		p	0		slot
		p	1		stack
		p	2		allowOverflow
	m	(Lcjf;)V	a	setRemoteCarried
		p	1		stack
	m	(Lcjf;IIZ)Z	a	moveItemStackTo
		p	1		stack
		p	2		startIndex
		p	3		endIndex
		p	4		fromLast
	m	(Lcjf;Lcgd;)Z	a	canTakeItemForPickAll
		p	1		stack
		p	2		slot
	m	(Lcjf;Lcgd;Lcbu;Lcjf;)V	a	lambda$doClick$4
		p	3		stack
	m	(Lcsv;Lcbu;Lcpv;Lgw;)Ljava/lang/Boolean;	a	lambda$stillValid$0
		p	2		world
		p	3		pos
	m	(Ldcv;)I	a	getRedstoneSignalFromBlockEntity
		p	0		entity
	m	(Ljava/util/Set;ILcjf;)I	a	getQuickCraftPlaceCount
		p	0		slots
		p	1		mode
		p	2		stack
	m	()V	b	sendAllDataToRemote
	m	(I)Lcgd;	b	getSlot
		p	1		index
	m	(II)I	b	getQuickcraftMask
		p	0		quickCraftStage
		p	1		buttonId
	m	(IILceu;Lcbu;)V	b	doClick
		p	1		slotIndex
		p	2		button
		p	3		actionType
		p	4		player
	m	(ILcjf;)V	b	setRemoteSlotNoCopy
		p	1		slot
		p	2		stack
	m	(ILcjf;Ljava/util/function/Supplier;)V	b	synchronizeSlotToRemote
		p	1		slot
		p	2		stack
		p	3		copySupplier
	m	(Lbgr;)I	b	getRedstoneSignalFromContainer
		p	0		inventory
	m	(Lbgr;I)Ljava/util/OptionalInt;	b	findSlot
		p	1		inventory
		p	2		index
	m	(Lcbu;)V	b	removed
		p	1		player
	m	(Lcbu;I)Z	b	clickMenuButton
		p	1		player
		p	2		id
	m	(Lcex;)V	b	removeSlotListener
		p	1		listener
	m	(Lcgd;)Z	b	canDragTo
		p	1		slot
	m	(Lcjf;)V	b	setCarried
		p	1		stack
	m	()Lhn;	c	getItems
	m	(I)I	c	getQuickcraftType
		p	0		quickCraftData
	m	(II)V	c	updateDataSlotListeners
		p	1		index
		p	2		value
	m	()V	d	broadcastChanges
	m	(I)I	d	getQuickcraftHeader
		p	0		quickCraftData
	m	(II)V	d	synchronizeDataSlotToRemote
		p	1		id
		p	2		value
	m	()V	e	broadcastFullState
	m	()V	f	resetQuickCraft
	m	()Lcjf;	g	getCarried
	m	()V	h	suppressRemoteUpdates
	m	()V	i	resumeRemoteUpdates
	m	()I	j	getStateId
	m	()I	k	incrementStateId
	m	()V	l	synchronizeCarriedToRemote
	m	()Lbjy;	m	createCarriedSlotAccess
	m	()Ljava/lang/String;	n	lambda$clicked$2
	m	()Ljava/lang/String;	o	lambda$clicked$1
	f	I	a	SLOT_CLICKED_OUTSIDE
	f	I	b	QUICKCRAFT_TYPE_CHARITABLE
	f	I	c	QUICKCRAFT_TYPE_GREEDY
	f	I	d	QUICKCRAFT_TYPE_CLONE
	f	I	e	QUICKCRAFT_HEADER_START
	f	I	f	QUICKCRAFT_HEADER_CONTINUE
	f	I	g	QUICKCRAFT_HEADER_END
	f	I	h	CARRIED_SLOT_SIZE
	f	Lhn;	i	slots
	f	I	j	containerId
	f	Lorg/slf4j/Logger;	k	LOGGER
	f	Lhn;	l	lastSlots
	f	Ljava/util/List;	m	dataSlots
	f	Lcjf;	n	carried
	f	Lhn;	o	remoteSlots
	f	Lit/unimi/dsi/fastutil/ints/IntList;	p	remoteDataSlots
	f	Lcjf;	q	remoteCarried
	f	I	r	stateId
	f	Lcfq;	s	menuType
	f	I	t	quickcraftType
	f	I	u	quickcraftStatus
	f	Ljava/util/Set;	v	quickcraftSlots
	f	Ljava/util/List;	w	containerListeners
	f	Lcey;	x	synchronizer
	f	Z	y	suppressRemoteUpdates
c	cel$1	net/minecraft/world/inventory/AbstractContainerMenu$1
	m	()Lcjf;	a	get
	m	(Lcjf;)Z	a	set
		p	1		stack
	f	Lcel;	a	this$0
c	cem	net/minecraft/world/inventory/AbstractFurnaceMenu
	m	(Lcfq;Lcmn;Lcfw;ILcbt;)V	<init>	<init>
		p	1		type
		p	2		recipeType
		p	3		category
		p	4		syncId
		p	5		playerInventory
	m	(Lcfq;Lcmn;Lcfw;ILcbt;Lbgr;Lcev;)V	<init>	<init>
		p	1		type
		p	2		recipeType
		p	3		category
		p	4		syncId
		p	5		playerInventory
		p	6		inventory
		p	7		propertyDelegate
	m	(Lcbu;)Z	a	stillValid
		p	1		player
	m	(Lcbu;I)Lcjf;	a	quickMoveStack
		p	1		player
		p	2		slot
	m	(Lcby;)V	a	fillCraftSlotsStackedContents
		p	1		finder
	m	(Lcmk;)Z	a	recipeMatches
		p	1		recipe
	m	(Lcjf;)Z	c	canSmelt
		p	1		itemStack
	m	(Lcjf;)Z	d	isFuel
		p	1		itemStack
	m	(I)Z	e	shouldMoveToInventory
		p	1		index
	m	()V	l	clearCraftingContent
	m	()I	m	getResultSlotIndex
	m	()I	n	getGridWidth
	m	()I	o	getGridHeight
	m	()I	p	getSize
	m	()F	q	getBurnProgress
	m	()F	r	getLitProgress
	m	()Z	s	isLit
	m	()Lcfw;	t	getRecipeBookType
	f	I	k	INGREDIENT_SLOT
	f	I	l	FUEL_SLOT
	f	I	m	RESULT_SLOT
	f	I	n	SLOT_COUNT
	f	I	o	DATA_COUNT
	f	Lcpv;	p	level
	f	I	q	INV_SLOT_START
	f	I	r	INV_SLOT_END
	f	I	s	USE_ROW_SLOT_START
	f	I	t	USE_ROW_SLOT_END
	f	Lbgr;	u	container
	f	Lcev;	v	data
	f	Lcmn;	w	recipeType
	f	Lcfw;	x	recipeBookType
c	cen	net/minecraft/world/inventory/AnvilMenu
	m	(ILcbt;)V	<init>	<init>
		p	1		syncId
		p	2		inventory
	m	(ILcbt;Lcew;)V	<init>	<init>
		p	1		syncId
		p	2		inventory
		p	3		context
	m	(Lcbu;Lcjf;)V	a	onTake
		p	1		player
		p	2		stack
	m	(Lcbu;Lcpv;Lgw;)V	a	lambda$onTake$2
		p	1		world
		p	2		pos
	m	(Lcbu;Z)Z	a	mayPickup
		p	1		player
		p	2		present
	m	(Ldfj;)Z	a	isValidBlock
		p	1		state
	m	(Ljava/lang/String;)Z	a	setItemName
		p	1		newItemName
	m	(Ljava/lang/String;)Ljava/lang/String;	b	validateName
		p	0		name
	m	(I)I	e	calculateIncreasedRepairCost
		p	0		cost
	m	(Lcjf;)Z	e	lambda$createInputSlotDefinitions$1
		p	0		stack
	m	(Lcjf;)Z	f	lambda$createInputSlotDefinitions$0
		p	0		stack
	m	()Lcfm;	l	createInputSlotDefinitions
	m	()V	m	createResult
	m	()I	n	getCost
	f	I	A	COST_REPAIR_MATERIAL
	f	I	B	COST_REPAIR_SACRIFICE
	f	I	C	COST_INCOMPATIBLE_PENALTY
	f	I	D	COST_RENAME
	f	I	E	INPUT_SLOT_X_PLACEMENT
	f	I	F	ADDITIONAL_SLOT_X_PLACEMENT
	f	I	G	RESULT_SLOT_X_PLACEMENT
	f	I	H	SLOT_Y_PLACEMENT
	f	I	k	INPUT_SLOT
	f	I	l	ADDITIONAL_SLOT
	f	I	m	RESULT_SLOT
	f	I	n	MAX_NAME_LENGTH
	f	Lorg/slf4j/Logger;	s	LOGGER
	f	Z	t	DEBUG_COST
	f	I	u	repairItemCountCost
	f	Ljava/lang/String;	v	itemName
	f	Lcfb;	w	cost
	f	I	x	COST_FAIL
	f	I	y	COST_BASE
	f	I	z	COST_ADDED_BASE
c	cen$1	net/minecraft/world/inventory/AnvilMenu$1
	f	[I	a	$SwitchMap$net$minecraft$world$item$enchantment$Enchantment$Rarity
c	ceo	net/minecraft/world/inventory/BeaconMenu
	m	(ILbgr;)V	<init>	<init>
		p	1		syncId
		p	2		inventory
	m	(ILbgr;Lcev;Lcew;)V	<init>	<init>
		p	1		syncId
		p	2		inventory
		p	3		propertyDelegate
		p	4		context
	m	(II)V	a	setData
		p	1		id
		p	2		value
	m	(Lbib;)I	a	encodeEffect
		p	0		statusEffect
	m	(Lcbu;)Z	a	stillValid
		p	1		player
	m	(Lcbu;I)Lcjf;	a	quickMoveStack
		p	1		player
		p	2		slot
	m	(Ljava/util/Optional;Ljava/util/Optional;)V	a	updateEffects
		p	1		primary
		p	2		secondary
	m	(Lcbu;)V	b	removed
		p	1		player
	m	(I)Lbib;	e	decodeEffect
		p	0		id
	m	()I	l	getLevels
	m	()Lbib;	m	getPrimaryEffect
	m	()Lbib;	n	getSecondaryEffect
	m	()Z	o	hasPayment
	f	I	k	PAYMENT_SLOT
	f	I	l	SLOT_COUNT
	f	I	m	DATA_COUNT
	f	I	n	INV_SLOT_START
	f	I	o	INV_SLOT_END
	f	I	p	USE_ROW_SLOT_START
	f	I	q	USE_ROW_SLOT_END
	f	I	r	NO_EFFECT
	f	Lbgr;	s	beacon
	f	Lceo$a;	t	paymentSlot
	f	Lcew;	u	access
	f	Lcev;	v	beaconData
c	ceo$1	net/minecraft/world/inventory/BeaconMenu$1
	m	(Lceo;I)V	<init>	<init>
		p	2		size
	m	()I	ag_	getMaxStackSize
	m	(ILcjf;)Z	b	canPlaceItem
		p	1		slot
		p	2		stack
	f	Lceo;	c	this$0
c	ceo$a	net/minecraft/world/inventory/BeaconMenu$PaymentSlot
	m	(Lceo;Lbgr;III)V	<init>	<init>
		p	2		inventory
		p	3		index
		p	4		x
		p	5		y
	m	()I	a	getMaxStackSize
	m	(Lcjf;)Z	a	mayPlace
		p	1		stack
	f	Lceo;	a	this$0
c	cep	net/minecraft/world/inventory/BlastFurnaceMenu
	m	(ILcbt;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
	m	(ILcbt;Lbgr;Lcev;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
		p	3		inventory
		p	4		propertyDelegate
c	ceq	net/minecraft/world/inventory/BrewingStandMenu
	m	(ILcbt;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
	m	(ILcbt;Lbgr;Lcev;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
		p	3		inventory
		p	4		propertyDelegate
	m	(Lcbu;)Z	a	stillValid
		p	1		player
	m	(Lcbu;I)Lcjf;	a	quickMoveStack
		p	1		player
		p	2		slot
	m	()I	l	getFuel
	m	()I	m	getBrewingTicks
	f	I	k	BOTTLE_SLOT_START
	f	I	l	BOTTLE_SLOT_END
	f	I	m	INGREDIENT_SLOT
	f	I	n	FUEL_SLOT
	f	I	o	SLOT_COUNT
	f	I	p	DATA_COUNT
	f	I	q	INV_SLOT_START
	f	I	r	INV_SLOT_END
	f	I	s	USE_ROW_SLOT_START
	f	I	t	USE_ROW_SLOT_END
	f	Lbgr;	u	brewingStand
	f	Lcev;	v	brewingStandData
	f	Lcgd;	w	ingredientSlot
c	ceq$a	net/minecraft/world/inventory/BrewingStandMenu$FuelSlot
	m	(Lbgr;III)V	<init>	<init>
		p	1		inventory
		p	2		index
		p	3		x
		p	4		y
	m	()I	a	getMaxStackSize
	m	(Lcjf;)Z	a	mayPlace
		p	1		stack
	m	(Lcjf;)Z	b	mayPlaceItem
		p	0		stack
c	ceq$b	net/minecraft/world/inventory/BrewingStandMenu$IngredientsSlot
	m	(Lbgr;III)V	<init>	<init>
		p	1		inventory
		p	2		index
		p	3		x
		p	4		y
	m	()I	a	getMaxStackSize
	m	(Lcjf;)Z	a	mayPlace
		p	1		stack
c	ceq$c	net/minecraft/world/inventory/BrewingStandMenu$PotionSlot
	m	(Lbgr;III)V	<init>	<init>
		p	1		inventory
		p	2		index
		p	3		x
		p	4		y
	m	()I	a	getMaxStackSize
	m	(Lcbu;Lcjf;)V	a	onTake
		p	1		player
		p	2		stack
	m	(Lcjf;)Z	a	mayPlace
		p	1		stack
	m	(Lcjf;)Z	b	mayPlaceItem
		p	0		stack
c	cer	net/minecraft/world/inventory/CartographyTableMenu
	m	(ILcbt;)V	<init>	<init>
		p	1		syncId
		p	2		inventory
	m	(ILcbt;Lcew;)V	<init>	<init>
		p	1		syncId
		p	2		inventory
		p	3		context
	m	(Lbgr;)V	a	slotsChanged
		p	1		inventory
	m	(Lcbu;)Z	a	stillValid
		p	1		player
	m	(Lcbu;I)Lcjf;	a	quickMoveStack
		p	1		player
		p	2		slot
	m	(Lcbu;Lcpv;Lgw;)V	a	lambda$removed$1
		p	2		world
		p	3		pos
	m	(Lcjf;Lcgd;)Z	a	canTakeItemForPickAll
		p	1		stack
		p	2		slot
	m	(Lcjf;Lcjf;Lcjf;)V	a	setupResultSlot
		p	1		map
		p	2		item
		p	3		oldResult
	m	(Lcjf;Lcjf;Lcjf;Lcpv;Lgw;)V	a	lambda$setupResultSlot$0
		p	4		world
		p	5		pos
	m	(Lcbu;)V	b	removed
		p	1		player
	f	I	k	MAP_SLOT
	f	I	l	ADDITIONAL_SLOT
	f	I	m	RESULT_SLOT
	f	Lbgr;	n	container
	f	I	o	INV_SLOT_START
	f	I	p	INV_SLOT_END
	f	I	q	USE_ROW_SLOT_START
	f	I	r	USE_ROW_SLOT_END
	f	Lcew;	s	access
	f	J	t	lastSoundTime
	f	Lcfy;	u	resultContainer
c	cer$1	net/minecraft/world/inventory/CartographyTableMenu$1
	m	(Lcer;I)V	<init>	<init>
		p	2		size
	m	()V	e	setChanged
	f	Lcer;	c	this$0
c	cer$2	net/minecraft/world/inventory/CartographyTableMenu$2
	m	()V	e	setChanged
	f	Lcer;	c	this$0
c	cer$3	net/minecraft/world/inventory/CartographyTableMenu$3
	m	(Lcer;Lbgr;III)V	<init>	<init>
		p	2		inventory
		p	3		index
		p	4		x
		p	5		y
	m	(Lcjf;)Z	a	mayPlace
		p	1		stack
	f	Lcer;	a	this$0
c	cer$4	net/minecraft/world/inventory/CartographyTableMenu$4
	m	(Lcer;Lbgr;III)V	<init>	<init>
		p	2		inventory
		p	3		index
		p	4		x
		p	5		y
	m	(Lcjf;)Z	a	mayPlace
		p	1		stack
	f	Lcer;	a	this$0
c	cer$5	net/minecraft/world/inventory/CartographyTableMenu$5
	m	(Lcer;Lbgr;IIILcew;)V	<init>	<init>
		p	2		inventory
		p	3		index
		p	4		x
		p	5		y
	m	(Lcbu;Lcjf;)V	a	onTake
		p	1		player
		p	2		stack
	m	(Lcjf;)Z	a	mayPlace
		p	1		stack
	m	(Lcpv;Lgw;)V	a	lambda$onTake$0
		p	1		world
		p	2		pos
	f	Lcew;	a	val$access
	f	Lcer;	b	this$0
c	ces	net/minecraft/world/inventory/ChestMenu
	m	(Lcfq;ILcbt;I)V	<init>	<init>
		p	1		type
		p	2		syncId
		p	3		playerInventory
		p	4		rows
	m	(Lcfq;ILcbt;Lbgr;I)V	<init>	<init>
		p	1		type
		p	2		syncId
		p	3		playerInventory
		p	4		inventory
		p	5		rows
	m	(ILcbt;)Lces;	a	oneRow
		p	0		syncId
		p	1		playerInventory
	m	(ILcbt;Lbgr;)Lces;	a	threeRows
		p	0		syncId
		p	1		playerInventory
		p	2		inventory
	m	(Lcbu;)Z	a	stillValid
		p	1		player
	m	(Lcbu;I)Lcjf;	a	quickMoveStack
		p	1		player
		p	2		slot
	m	(ILcbt;)Lces;	b	twoRows
		p	0		syncId
		p	1		playerInventory
	m	(ILcbt;Lbgr;)Lces;	b	sixRows
		p	0		syncId
		p	1		playerInventory
		p	2		inventory
	m	(Lcbu;)V	b	removed
		p	1		player
	m	(ILcbt;)Lces;	c	threeRows
		p	0		syncId
		p	1		playerInventory
	m	(ILcbt;)Lces;	d	fourRows
		p	0		syncId
		p	1		playerInventory
	m	(ILcbt;)Lces;	e	fiveRows
		p	0		syncId
		p	1		playerInventory
	m	(ILcbt;)Lces;	f	sixRows
		p	0		syncId
		p	1		playerInventory
	m	()Lbgr;	l	getContainer
	m	()I	m	getRowCount
	f	I	k	SLOTS_PER_ROW
	f	Lbgr;	l	container
	f	I	m	containerRows
c	cet	net/minecraft/world/inventory/ClickAction
	m	()[Lcet;	a	$values
	f	Lcet;	a	PRIMARY
	f	Lcet;	b	SECONDARY
	f	[Lcet;	c	$VALUES
c	ceu	net/minecraft/world/inventory/ClickType
	m	()[Lceu;	a	$values
	f	Lceu;	a	PICKUP
	f	Lceu;	b	QUICK_MOVE
	f	Lceu;	c	SWAP
	f	Lceu;	d	CLONE
	f	Lceu;	e	THROW
	f	Lceu;	f	QUICK_CRAFT
	f	Lceu;	g	PICKUP_ALL
	f	[Lceu;	h	$VALUES
c	cev	net/minecraft/world/inventory/ContainerData
	m	()I	a	getCount
	m	(I)I	a	get
		p	1		index
	m	(II)V	a	set
		p	1		index
		p	2		value
c	cew	net/minecraft/world/inventory/ContainerLevelAccess
	m	(Lcpv;Lgw;)Lcew;	a	create
		p	0		world
		p	1		pos
	m	(Ljava/util/function/BiConsumer;)V	a	execute
		p	1		function
	m	(Ljava/util/function/BiConsumer;Lcpv;Lgw;)Ljava/util/Optional;	a	lambda$execute$0
		p	1		world
		p	2		pos
	m	(Ljava/util/function/BiFunction;)Ljava/util/Optional;	a	evaluate
		p	1		getter
	m	(Ljava/util/function/BiFunction;Ljava/lang/Object;)Ljava/lang/Object;	a	evaluate
		p	1		getter
		p	2		defaultValue
	f	Lcew;	a	NULL
c	cew$1	net/minecraft/world/inventory/ContainerLevelAccess$1
	m	(Ljava/util/function/BiFunction;)Ljava/util/Optional;	a	evaluate
		p	1		getter
c	cew$2	net/minecraft/world/inventory/ContainerLevelAccess$2
	m	(Ljava/util/function/BiFunction;)Ljava/util/Optional;	a	evaluate
		p	1		getter
	f	Lcpv;	b	val$level
	f	Lgw;	c	val$pos
c	cex	net/minecraft/world/inventory/ContainerListener
	m	(Lcel;II)V	a	dataChanged
		p	1		handler
		p	2		property
		p	3		value
	m	(Lcel;ILcjf;)V	a	slotChanged
		p	1		handler
		p	2		slotId
		p	3		stack
c	cey	net/minecraft/world/inventory/ContainerSynchronizer
	m	(Lcel;II)V	a	sendDataChange
		p	1		handler
		p	2		property
		p	3		value
	m	(Lcel;ILcjf;)V	a	sendSlotChange
		p	1		handler
		p	2		slot
		p	3		stack
	m	(Lcel;Lcjf;)V	a	sendCarriedChange
		p	1		handler
		p	2		stack
	m	(Lcel;Lhn;Lcjf;[I)V	a	sendInitialData
		p	1		handler
		p	2		stacks
		p	3		cursorStack
		p	4		properties
c	cez	net/minecraft/world/inventory/CraftingContainer
	m	()I	f	getWidth
	m	()I	g	getHeight
	m	()Ljava/util/List;	h	getItems
c	cfa	net/minecraft/world/inventory/CraftingMenu
	m	(ILcbt;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
	m	(ILcbt;Lcew;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
		p	3		context
	m	(Lbgr;)V	a	slotsChanged
		p	1		inventory
	m	(Lcbu;)Z	a	stillValid
		p	1		player
	m	(Lcbu;I)Lcjf;	a	quickMoveStack
		p	1		player
		p	2		slot
	m	(Lcbu;Lcpv;Lgw;)V	a	lambda$removed$1
		p	2		world
		p	3		pos
	m	(Lcby;)V	a	fillCraftSlotsStackedContents
		p	1		finder
	m	(Lcel;Lcpv;Lcbu;Lcez;Lcfy;)V	a	slotChangedCraftingGrid
		p	0		handler
		p	1		world
		p	2		player
		p	3		craftingInventory
		p	4		resultInventory
	m	(Lcjf;Lcbu;Lcpv;Lgw;)V	a	lambda$quickMoveStack$2
		p	2		world
		p	3		pos
	m	(Lcjf;Lcgd;)Z	a	canTakeItemForPickAll
		p	1		stack
		p	2		slot
	m	(Lcmk;)Z	a	recipeMatches
		p	1		recipe
	m	(Lcpv;Lgw;)V	a	lambda$slotsChanged$0
		p	1		world
		p	2		pos
	m	(Lcbu;)V	b	removed
		p	1		player
	m	(I)Z	e	shouldMoveToInventory
		p	1		index
	m	()V	l	clearCraftingContent
	m	()I	m	getResultSlotIndex
	m	()I	n	getGridWidth
	m	()I	o	getGridHeight
	m	()I	p	getSize
	m	()Lcfw;	t	getRecipeBookType
	f	I	k	RESULT_SLOT
	f	I	l	CRAFT_SLOT_START
	f	I	m	CRAFT_SLOT_END
	f	I	n	INV_SLOT_START
	f	I	o	INV_SLOT_END
	f	I	p	USE_ROW_SLOT_START
	f	I	q	USE_ROW_SLOT_END
	f	Lcez;	r	craftSlots
	f	Lcfy;	s	resultSlots
	f	Lcew;	t	access
	f	Lcbu;	u	player
c	cfb	net/minecraft/world/inventory/DataSlot
	m	()Lcfb;	a	standalone
	m	(I)V	a	set
		p	1		value
	m	(Lcev;I)Lcfb;	a	forContainer
		p	0		delegate
		p	1		index
	m	([II)Lcfb;	a	shared
		p	0		array
		p	1		index
	m	()I	b	get
	m	()Z	c	checkAndClearUpdateFlag
	f	I	a	prevValue
c	cfb$1	net/minecraft/world/inventory/DataSlot$1
	m	(I)V	a	set
		p	1		value
	m	()I	b	get
	f	Lcev;	a	val$container
	f	I	b	val$dataId
c	cfb$2	net/minecraft/world/inventory/DataSlot$2
	m	(I)V	a	set
		p	1		value
	m	()I	b	get
	f	[I	a	val$storage
	f	I	b	val$index
c	cfb$3	net/minecraft/world/inventory/DataSlot$3
	m	(I)V	a	set
		p	1		value
	m	()I	b	get
	f	I	a	value
c	cfc	net/minecraft/world/inventory/DispenserMenu
	m	(ILcbt;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
	m	(ILcbt;Lbgr;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
		p	3		inventory
	m	(Lcbu;)Z	a	stillValid
		p	1		player
	m	(Lcbu;I)Lcjf;	a	quickMoveStack
		p	1		player
		p	2		slot
	m	(Lcbu;)V	b	removed
		p	1		player
	f	I	k	SLOT_COUNT
	f	I	l	INV_SLOT_START
	f	I	m	INV_SLOT_END
	f	I	n	USE_ROW_SLOT_START
	f	I	o	USE_ROW_SLOT_END
	f	Lbgr;	p	dispenser
c	cfd	net/minecraft/world/inventory/EnchantmentMenu
	m	(ILcbt;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
	m	(ILcbt;Lcew;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
		p	3		context
	m	(Lbgr;)V	a	slotsChanged
		p	1		inventory
	m	(Lcbu;)Z	a	stillValid
		p	1		player
	m	(Lcbu;I)Lcjf;	a	quickMoveStack
		p	1		player
		p	2		slot
	m	(Lcbu;Lcpv;Lgw;)V	a	lambda$removed$2
		p	2		world
		p	3		pos
	m	(Lcjf;II)Ljava/util/List;	a	getEnchantmentList
		p	1		stack
		p	2		slot
		p	3		level
	m	(Lcjf;ILcbu;ILcjf;Lcpv;Lgw;)V	a	lambda$clickMenuButton$1
		p	6		world
		p	7		pos
	m	(Lcjf;Lcpv;Lgw;)V	a	lambda$slotsChanged$0
		p	2		world
		p	3		pos
	m	(Lcbu;)V	b	removed
		p	1		player
	m	(Lcbu;I)Z	b	clickMenuButton
		p	1		player
		p	2		id
	m	()I	l	getGoldCount
	m	()I	m	getEnchantmentSeed
	f	[I	k	costs
	f	[I	l	enchantClue
	f	[I	m	levelClue
	f	Laew;	n	EMPTY_SLOT_LAPIS_LAZULI
	f	Lbgr;	o	enchantSlots
	f	Lcew;	p	access
	f	Lasc;	q	random
	f	Lcfb;	r	enchantmentSeed
c	cfd$1	net/minecraft/world/inventory/EnchantmentMenu$1
	m	(Lcfd;I)V	<init>	<init>
		p	2		size
	m	()V	e	setChanged
	f	Lcfd;	c	this$0
c	cfd$2	net/minecraft/world/inventory/EnchantmentMenu$2
	m	(Lcfd;Lbgr;III)V	<init>	<init>
		p	2		inventory
		p	3		index
		p	4		x
		p	5		y
	m	()I	a	getMaxStackSize
	f	Lcfd;	a	this$0
c	cfd$3	net/minecraft/world/inventory/EnchantmentMenu$3
	m	(Lcfd;Lbgr;III)V	<init>	<init>
		p	2		inventory
		p	3		index
		p	4		x
		p	5		y
	m	(Lcjf;)Z	a	mayPlace
		p	1		stack
	m	()Lcom/mojang/datafixers/util/Pair;	b	getNoItemIcon
	f	Lcfd;	a	this$0
c	cfe	net/minecraft/world/inventory/FurnaceFuelSlot
	m	(Lcem;Lbgr;III)V	<init>	<init>
		p	1		handler
		p	2		inventory
		p	3		index
		p	4		x
		p	5		y
	m	(Lcjf;)Z	a	mayPlace
		p	1		stack
	m	(Lcjf;)I	a_	getMaxStackSize
		p	1		stack
	m	(Lcjf;)Z	c	isBucket
		p	0		stack
	f	Lcem;	a	menu
c	cff	net/minecraft/world/inventory/FurnaceMenu
	m	(ILcbt;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
	m	(ILcbt;Lbgr;Lcev;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
		p	3		inventory
		p	4		propertyDelegate
c	cfg	net/minecraft/world/inventory/FurnaceResultSlot
	m	(Lcbu;Lbgr;III)V	<init>	<init>
		p	1		player
		p	2		inventory
		p	3		index
		p	4		x
		p	5		y
	m	(I)Lcjf;	a	remove
		p	1		amount
	m	(Lcbu;Lcjf;)V	a	onTake
		p	1		player
		p	2		stack
	m	(Lcjf;)Z	a	mayPlace
		p	1		stack
	m	(Lcjf;I)V	a	onQuickCraft
		p	1		stack
		p	2		amount
	m	(Lcjf;)V	b_	checkTakeAchievements
		p	1		stack
	f	Lcbu;	a	player
	f	I	b	removeCount
c	cfh	net/minecraft/world/inventory/GrindstoneMenu
	m	(ILcbt;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
	m	(ILcbt;Lcew;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
		p	3		context
	m	(Lbgr;)V	a	slotsChanged
		p	1		inventory
	m	(Lcbu;)Z	a	stillValid
		p	1		player
	m	(Lcbu;I)Lcjf;	a	quickMoveStack
		p	1		player
		p	2		slot
	m	(Lcbu;Lcpv;Lgw;)V	a	lambda$removed$1
		p	2		world
		p	3		pos
	m	(Lcjf;II)Lcjf;	a	removeNonCurses
		p	1		item
		p	2		damage
		p	3		amount
	m	(Lcjf;Lcjf;)Lcjf;	a	mergeEnchants
		p	1		target
		p	2		source
	m	(Ljava/util/Map$Entry;)Z	a	lambda$removeNonCurses$0
	m	(Lcbu;)V	b	removed
		p	1		player
	m	()V	l	createResult
	f	I	k	MAX_NAME_LENGTH
	f	I	l	INPUT_SLOT
	f	I	m	ADDITIONAL_SLOT
	f	I	n	RESULT_SLOT
	f	I	o	INV_SLOT_START
	f	I	p	INV_SLOT_END
	f	I	q	USE_ROW_SLOT_START
	f	I	r	USE_ROW_SLOT_END
	f	Lbgr;	s	resultSlots
	f	Lbgr;	t	repairSlots
	f	Lcew;	u	access
c	cfh$1	net/minecraft/world/inventory/GrindstoneMenu$1
	m	(Lcfh;I)V	<init>	<init>
		p	2		size
	m	()V	e	setChanged
	f	Lcfh;	c	this$0
c	cfh$2	net/minecraft/world/inventory/GrindstoneMenu$2
	m	(Lcfh;Lbgr;III)V	<init>	<init>
		p	2		inventory
		p	3		index
		p	4		x
		p	5		y
	m	(Lcjf;)Z	a	mayPlace
		p	1		stack
	f	Lcfh;	a	this$0
c	cfh$3	net/minecraft/world/inventory/GrindstoneMenu$3
	m	(Lcfh;Lbgr;III)V	<init>	<init>
		p	2		inventory
		p	3		index
		p	4		x
		p	5		y
	m	(Lcjf;)Z	a	mayPlace
		p	1		stack
	f	Lcfh;	a	this$0
c	cfh$4	net/minecraft/world/inventory/GrindstoneMenu$4
	m	(Lcfh;Lbgr;IIILcew;)V	<init>	<init>
		p	2		inventory
		p	3		index
		p	4		x
		p	5		y
	m	(Lcbu;Lcjf;)V	a	onTake
		p	1		player
		p	2		stack
	m	(Lcjf;)Z	a	mayPlace
		p	1		stack
	m	(Lcpv;)I	a	getExperienceAmount
		p	1		world
	m	(Lcpv;Lgw;)V	a	lambda$onTake$0
		p	1		world
		p	2		pos
	m	(Lcjf;)I	g	getExperienceFromItem
		p	1		stack
	f	Lcew;	a	val$access
	f	Lcfh;	b	this$0
c	cfi	net/minecraft/world/inventory/HopperMenu
	m	(ILcbt;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
	m	(ILcbt;Lbgr;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
		p	3		inventory
	m	(Lcbu;)Z	a	stillValid
		p	1		player
	m	(Lcbu;I)Lcjf;	a	quickMoveStack
		p	1		player
		p	2		slot
	m	(Lcbu;)V	b	removed
		p	1		player
	f	I	k	CONTAINER_SIZE
	f	Lbgr;	l	hopper
c	cfj	net/minecraft/world/inventory/HorseInventoryMenu
	m	(ILcbt;Lbgr;Lbwq;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
		p	3		inventory
		p	4		entity
	m	(Lbwq;)Z	a	hasChest
		p	1		horse
	m	(Lcbu;)Z	a	stillValid
		p	1		player
	m	(Lcbu;I)Lcjf;	a	quickMoveStack
		p	1		player
		p	2		slot
	m	(Lcbu;)V	b	removed
		p	1		player
	f	Lbgr;	k	horseContainer
	f	Lbwq;	l	horse
c	cfj$1	net/minecraft/world/inventory/HorseInventoryMenu$1
	m	(Lcfj;Lbgr;IIILbwq;)V	<init>	<init>
		p	2		inventory
		p	3		index
		p	4		x
		p	5		y
	m	(Lcjf;)Z	a	mayPlace
		p	1		stack
	m	()Z	c	isActive
	f	Lbwq;	a	val$horse
	f	Lcfj;	b	this$0
c	cfj$2	net/minecraft/world/inventory/HorseInventoryMenu$2
	m	(Lcfj;Lbgr;IIILbwq;)V	<init>	<init>
		p	2		inventory
		p	3		index
		p	4		x
		p	5		y
	m	()I	a	getMaxStackSize
	m	(Lcjf;)Z	a	mayPlace
		p	1		stack
	m	()Z	c	isActive
	f	Lbwq;	a	val$horse
	f	Lcfj;	b	this$0
c	cfk	net/minecraft/world/inventory/InventoryMenu
	m	(Lcbt;ZLcbu;)V	<init>	<init>
		p	1		inventory
		p	2		onServer
		p	3		owner
	m	(Lbgr;)V	a	slotsChanged
		p	1		inventory
	m	(Lcbu;)Z	a	stillValid
		p	1		player
	m	(Lcbu;I)Lcjf;	a	quickMoveStack
		p	1		player
		p	2		slot
	m	(Lcbu;Lbiv;Lcjf;Lcjf;)V	a	onEquipItem
		p	0		player
		p	1		slot
		p	2		newStack
		p	3		currentStack
	m	(Lcby;)V	a	fillCraftSlotsStackedContents
		p	1		finder
	m	(Lcjf;Lcgd;)Z	a	canTakeItemForPickAll
		p	1		stack
		p	2		slot
	m	(Lcmk;)Z	a	recipeMatches
		p	1		recipe
	m	(Lcbu;)V	b	removed
		p	1		player
	m	(I)Z	e	shouldMoveToInventory
		p	1		index
	m	(I)Z	f	isHotbarSlot
		p	0		slot
	m	()V	l	clearCraftingContent
	m	()I	m	getResultSlotIndex
	m	()I	n	getGridWidth
	m	()I	o	getGridHeight
	m	()I	p	getSize
	m	()Lcez;	q	getCraftSlots
	m	()Lcfw;	t	getRecipeBookType
	f	Laew;	A	EMPTY_ARMOR_SLOT_SHIELD
	f	Z	B	active
	f	[Laew;	C	TEXTURE_EMPTY_SLOTS
	f	[Lbiv;	D	SLOT_IDS
	f	Lcez;	E	craftSlots
	f	Lcfy;	F	resultSlots
	f	Lcbu;	G	owner
	f	I	k	CONTAINER_ID
	f	I	l	RESULT_SLOT
	f	I	m	CRAFT_SLOT_START
	f	I	n	CRAFT_SLOT_END
	f	I	o	ARMOR_SLOT_START
	f	I	p	ARMOR_SLOT_END
	f	I	q	INV_SLOT_START
	f	I	r	INV_SLOT_END
	f	I	s	USE_ROW_SLOT_START
	f	I	t	USE_ROW_SLOT_END
	f	I	u	SHIELD_SLOT
	f	Laew;	v	BLOCK_ATLAS
	f	Laew;	w	EMPTY_ARMOR_SLOT_HELMET
	f	Laew;	x	EMPTY_ARMOR_SLOT_CHESTPLATE
	f	Laew;	y	EMPTY_ARMOR_SLOT_LEGGINGS
	f	Laew;	z	EMPTY_ARMOR_SLOT_BOOTS
c	cfk$1	net/minecraft/world/inventory/InventoryMenu$1
	m	(Lcfk;Lbgr;IIILcbu;Lbiv;)V	<init>	<init>
		p	2		inventory
		p	3		index
		p	4		x
		p	5		y
	m	()I	a	getMaxStackSize
	m	(Lcbu;)Z	a	mayPickup
		p	1		playerEntity
	m	(Lcjf;)Z	a	mayPlace
		p	1		stack
	m	(Lcjf;Lcjf;)V	a	setByPlayer
		p	1		stack
		p	2		previousStack
	m	()Lcom/mojang/datafixers/util/Pair;	b	getNoItemIcon
	f	Lcbu;	a	val$owner
	f	Lbiv;	b	val$slot
	f	Lcfk;	c	this$0
c	cfk$2	net/minecraft/world/inventory/InventoryMenu$2
	m	(Lcfk;Lbgr;IIILcbu;)V	<init>	<init>
		p	2		inventory
		p	3		index
		p	4		x
		p	5		y
	m	(Lcjf;Lcjf;)V	a	setByPlayer
		p	1		stack
		p	2		previousStack
	m	()Lcom/mojang/datafixers/util/Pair;	b	getNoItemIcon
	f	Lcbu;	a	val$owner
	f	Lcfk;	b	this$0
c	cfl	net/minecraft/world/inventory/ItemCombinerMenu
	m	(Lcfq;ILcbt;Lcew;)V	<init>	<init>
		p	1		type
		p	2		syncId
		p	3		playerInventory
		p	4		context
	m	(Lbgr;)V	a	slotsChanged
		p	1		inventory
	m	(Lcbt;)V	a	createInventorySlots
		p	1		playerInventory
	m	(Lcbu;)Z	a	stillValid
		p	1		player
	m	(Lcbu;I)Lcjf;	a	quickMoveStack
		p	1		player
		p	2		slot
	m	(Lcbu;Lcjf;)V	a	onTake
		p	1		player
		p	2		stack
	m	(Lcbu;Lcpv;Lgw;)Ljava/lang/Boolean;	a	lambda$stillValid$1
		p	2		world
		p	3		pos
	m	(Lcbu;Z)Z	a	mayPickup
		p	1		player
		p	2		present
	m	(Lcfm;)V	a	createInputSlots
		p	1		forgingSlotsManager
	m	(Ldfj;)Z	a	isValidBlock
		p	1		state
	m	(Lcbu;)V	b	removed
		p	1		player
	m	(Lcbu;Lcpv;Lgw;)V	b	lambda$removed$0
		p	2		world
		p	3		pos
	m	(Lcfm;)V	b	createResultSlot
		p	1		forgingSlotsManager
	m	(Lcjf;)Z	c	canMoveIntoInputSlots
		p	1		stack
	m	(Lcjf;)I	d	getSlotToQuickMoveTo
		p	1		stack
	m	(I)Lbhf;	e	createContainer
		p	1		size
	m	()Lcfm;	l	createInputSlotDefinitions
	m	()V	m	createResult
	m	()I	n	getInventorySlotStart
	m	()I	o	getResultSlot
	m	()I	p	getInventorySlotEnd
	m	()I	q	getUseRowStart
	m	()I	r	getUseRowEnd
	f	I	k	INVENTORY_SLOTS_PER_ROW
	f	I	l	INVENTORY_SLOTS_PER_COLUMN
	f	Ljava/util/List;	m	inputSlotIndexes
	f	I	n	resultSlotIndex
	f	Lcew;	o	access
	f	Lcbu;	p	player
	f	Lbgr;	q	inputSlots
	f	Lcfy;	r	resultSlots
c	cfl$1	net/minecraft/world/inventory/ItemCombinerMenu$1
	m	(Lcfl;Lbgr;IIILcfm$b;)V	<init>	<init>
		p	2		inventory
		p	3		index
		p	4		x
		p	5		y
	m	(Lcjf;)Z	a	mayPlace
		p	1		stack
	f	Lcfm$b;	a	val$slot
	f	Lcfl;	b	this$0
c	cfl$2	net/minecraft/world/inventory/ItemCombinerMenu$2
	m	(Lcfl;Lbgr;III)V	<init>	<init>
		p	2		inventory
		p	3		index
		p	4		x
		p	5		y
	m	(Lcbu;)Z	a	mayPickup
		p	1		playerEntity
	m	(Lcbu;Lcjf;)V	a	onTake
		p	1		player
		p	2		stack
	m	(Lcjf;)Z	a	mayPlace
		p	1		stack
	f	Lcfl;	a	this$0
c	cfl$3	net/minecraft/world/inventory/ItemCombinerMenu$3
	m	(Lcfl;I)V	<init>	<init>
		p	2		size
	m	()V	e	setChanged
	f	Lcfl;	c	this$0
c	cfm	net/minecraft/world/inventory/ItemCombinerMenuSlotDefinition
	m	(Ljava/util/List;Lcfm$b;)V	<init>	<init>
		p	1		inputSlots
		p	2		resultSlot
	m	()Lcfm$a;	a	create
	m	(I)Z	a	hasSlot
		p	1		index
	m	()Lcfm$b;	b	getResultSlot
	m	(I)Lcfm$b;	b	getSlot
		p	1		index
	m	()Ljava/util/List;	c	getSlots
	m	()I	d	getNumOfInputSlots
	m	()I	e	getResultSlotIndex
	m	()Ljava/util/List;	f	getInputSlotIndexes
	f	Ljava/util/List;	a	slots
	f	Lcfm$b;	b	resultSlot
c	cfm$a	net/minecraft/world/inventory/ItemCombinerMenuSlotDefinition$Builder
	m	()Lcfm;	a	build
	m	(III)Lcfm$a;	a	withResultSlot
		p	1		slotId
		p	2		x
		p	3		y
	m	(IIILjava/util/function/Predicate;)Lcfm$a;	a	withSlot
		p	1		slotId
		p	2		x
		p	3		y
		p	4		mayPlace
	m	(Lcjf;)Z	a	lambda$withResultSlot$0
		p	0		stack
	f	Ljava/util/List;	a	slots
	f	Lcfm$b;	b	resultSlot
c	cfm$b	net/minecraft/world/inventory/ItemCombinerMenuSlotDefinition$SlotDefinition
	m	()I	a	slotIndex
	m	(Lcjf;)Z	a	lambda$static$0
		p	0		stack
	m	()I	b	x
	m	()I	c	y
	m	()Ljava/util/function/Predicate;	d	mayPlace
	f	I	a	slotIndex
	f	I	b	x
	f	I	c	y
	f	Ljava/util/function/Predicate;	d	mayPlace
	f	Lcfm$b;	e	EMPTY
c	cfn	net/minecraft/world/inventory/LecternMenu
	m	(I)V	<init>	<init>
		p	1		syncId
	m	(ILbgr;Lcev;)V	<init>	<init>
		p	1		syncId
		p	2		inventory
		p	3		propertyDelegate
	m	(II)V	a	setData
		p	1		id
		p	2		value
	m	(Lcbu;)Z	a	stillValid
		p	1		player
	m	(Lcbu;I)Lcjf;	a	quickMoveStack
		p	1		player
		p	2		slot
	m	(Lcbu;I)Z	b	clickMenuButton
		p	1		player
		p	2		id
	m	()Lcjf;	l	getBook
	m	()I	m	getPage
	f	I	k	BUTTON_PREV_PAGE
	f	I	l	BUTTON_NEXT_PAGE
	f	I	m	BUTTON_TAKE_BOOK
	f	I	n	BUTTON_PAGE_JUMP_RANGE_START
	f	I	o	DATA_COUNT
	f	I	p	SLOT_COUNT
	f	Lbgr;	q	lectern
	f	Lcev;	r	lecternData
c	cfn$1	net/minecraft/world/inventory/LecternMenu$1
	m	(Lcfn;Lbgr;III)V	<init>	<init>
		p	2		inventory
		p	3		index
		p	4		x
		p	5		y
	m	()V	d	setChanged
	f	Lcfn;	a	this$0
c	cfo	net/minecraft/world/inventory/LoomMenu
	m	(ILcbt;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
	m	(ILcbt;Lcew;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
		p	3		context
	m	(Lbgr;)V	a	slotsChanged
		p	1		inventory
	m	(Lcbu;)Z	a	stillValid
		p	1		player
	m	(Lcbu;I)Lcjf;	a	quickMoveStack
		p	1		player
		p	2		slot
	m	(Lcbu;Lcpv;Lgw;)V	a	lambda$removed$1
		p	2		world
		p	3		pos
	m	(Lhe;)V	a	setupResultSlot
		p	1		pattern
	m	(Ljava/lang/Runnable;)V	a	registerUpdateListener
		p	1		inventoryChangeListener
	m	(Lcbu;)V	b	removed
		p	1		player
	m	(Lcbu;I)Z	b	clickMenuButton
		p	1		player
		p	2		id
	m	(Lcjf;)Ljava/util/List;	c	getSelectablePatterns
		p	1		stack
	m	(I)Z	e	isValidPatternIndex
		p	1		index
	m	()Ljava/util/List;	l	getSelectablePatterns
	m	()I	m	getSelectedBannerPatternIndex
	m	()Lcgd;	n	getBannerSlot
	m	()Lcgd;	o	getDyeSlot
	m	()Lcgd;	p	getPatternSlot
	m	()Lcgd;	q	getResultSlot
	m	()V	r	lambda$new$0
	f	I	k	PATTERN_NOT_SET
	f	I	l	INV_SLOT_START
	f	I	m	INV_SLOT_END
	f	I	n	USE_ROW_SLOT_START
	f	I	o	USE_ROW_SLOT_END
	f	Lcew;	p	access
	f	Lcfb;	q	selectedBannerPatternIndex
	f	Ljava/util/List;	r	selectablePatterns
	f	Ljava/lang/Runnable;	s	slotUpdateListener
	f	Lcgd;	t	bannerSlot
	f	Lcgd;	u	dyeSlot
	f	Lcgd;	v	patternSlot
	f	Lcgd;	w	resultSlot
	f	J	x	lastSoundTime
	f	Lbgr;	y	inputContainer
	f	Lbgr;	z	outputContainer
c	cfo$1	net/minecraft/world/inventory/LoomMenu$1
	m	(Lcfo;I)V	<init>	<init>
		p	2		size
	m	()V	e	setChanged
	f	Lcfo;	c	this$0
c	cfo$2	net/minecraft/world/inventory/LoomMenu$2
	m	(Lcfo;I)V	<init>	<init>
		p	2		size
	m	()V	e	setChanged
	f	Lcfo;	c	this$0
c	cfo$3	net/minecraft/world/inventory/LoomMenu$3
	m	(Lcfo;Lbgr;III)V	<init>	<init>
		p	2		inventory
		p	3		index
		p	4		x
		p	5		y
	m	(Lcjf;)Z	a	mayPlace
		p	1		stack
	f	Lcfo;	a	this$0
c	cfo$4	net/minecraft/world/inventory/LoomMenu$4
	m	(Lcfo;Lbgr;III)V	<init>	<init>
		p	2		inventory
		p	3		index
		p	4		x
		p	5		y
	m	(Lcjf;)Z	a	mayPlace
		p	1		stack
	f	Lcfo;	a	this$0
c	cfo$5	net/minecraft/world/inventory/LoomMenu$5
	m	(Lcfo;Lbgr;III)V	<init>	<init>
		p	2		inventory
		p	3		index
		p	4		x
		p	5		y
	m	(Lcjf;)Z	a	mayPlace
		p	1		stack
	f	Lcfo;	a	this$0
c	cfo$6	net/minecraft/world/inventory/LoomMenu$6
	m	(Lcfo;Lbgr;IIILcew;)V	<init>	<init>
		p	2		inventory
		p	3		index
		p	4		x
		p	5		y
	m	(Lcbu;Lcjf;)V	a	onTake
		p	1		player
		p	2		stack
	m	(Lcjf;)Z	a	mayPlace
		p	1		stack
	m	(Lcpv;Lgw;)V	a	lambda$onTake$0
		p	1		world
		p	2		pos
	f	Lcew;	a	val$access
	f	Lcfo;	b	this$0
c	cfp	net/minecraft/world/inventory/MenuConstructor
	m	(ILcbt;Lcbu;)Lcel;	createMenu	createMenu
		p	1		syncId
		p	2		playerInventory
		p	3		player
c	cfq	net/minecraft/world/inventory/MenuType
	m	(Lcfq$a;Lcec;)V	<init>	<init>
		p	1		factory
		p	2		requiredFeatures
	m	(ILcbt;)Lcel;	a	create
		p	1		syncId
		p	2		playerInventory
	m	(Ljava/lang/String;Lcfq$a;)Lcfq;	a	register
		p	0		id
		p	1		factory
	m	(Ljava/lang/String;Lcfq$a;[Lcea;)Lcfq;	a	register
		p	0		id
		p	1		factory
		p	2		requiredFeatures
	m	(ILcbt;)Lcfn;	b	lambda$static$0
		p	0		syncId
		p	1		playerInventory
	m	()Lcec;	m	requiredFeatures
	f	Lcfq;	a	GENERIC_9x1
	f	Lcfq;	b	GENERIC_9x2
	f	Lcfq;	c	GENERIC_9x3
	f	Lcfq;	d	GENERIC_9x4
	f	Lcfq;	e	GENERIC_9x5
	f	Lcfq;	f	GENERIC_9x6
	f	Lcfq;	g	GENERIC_3x3
	f	Lcfq;	h	ANVIL
	f	Lcfq;	i	BEACON
	f	Lcfq;	j	BLAST_FURNACE
	f	Lcfq;	k	BREWING_STAND
	f	Lcfq;	l	CRAFTING
	f	Lcfq;	m	ENCHANTMENT
	f	Lcfq;	n	FURNACE
	f	Lcfq;	o	GRINDSTONE
	f	Lcfq;	p	HOPPER
	f	Lcfq;	q	LECTERN
	f	Lcfq;	r	LOOM
	f	Lcfq;	s	MERCHANT
	f	Lcfq;	t	SHULKER_BOX
	f	Lcfq;	u	SMITHING
	f	Lcfq;	v	SMOKER
	f	Lcfq;	w	CARTOGRAPHY_TABLE
	f	Lcfq;	x	STONECUTTER
	f	Lcec;	y	requiredFeatures
	f	Lcfq$a;	z	constructor
c	cfq$a	net/minecraft/world/inventory/MenuType$MenuSupplier
	m	(ILcbt;)Lcel;	create	create
		p	1		syncId
		p	2		playerInventory
c	cfr	net/minecraft/world/inventory/MerchantContainer
	m	(Lcos;)V	<init>	<init>
		p	1		merchant
	m	()V	a	clearContent
	m	(I)Lcjf;	a	getItem
		p	1		slot
	m	(II)Lcjf;	a	removeItem
		p	1		slot
		p	2		amount
	m	(ILcjf;)V	a	setItem
		p	1		slot
		p	2		stack
	m	(Lcbu;)Z	a	stillValid
		p	1		player
	m	()Z	af_	isEmpty
	m	()I	b	getContainerSize
	m	(I)Lcjf;	b	removeItemNoUpdate
		p	1		slot
	m	(I)V	c	setSelectionHint
		p	1		index
	m	(I)Z	d	isPaymentSlot
		p	1		slot
	m	()V	e	setChanged
	m	()V	f	updateSellItem
	m	()Lcot;	g	getActiveOffer
	m	()I	h	getFutureXp
	f	Lcos;	c	merchant
	f	Lhn;	d	itemStacks
	f	Lcot;	e	activeOffer
	f	I	f	selectionHint
	f	I	g	futureXp
c	cfs	net/minecraft/world/inventory/MerchantMenu
	m	(ILcbt;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
	m	(ILcbt;Lcos;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
		p	3		merchant
	m	(Lbgr;)V	a	slotsChanged
		p	1		inventory
	m	(Lcbu;)Z	a	stillValid
		p	1		player
	m	(Lcbu;I)Lcjf;	a	quickMoveStack
		p	1		player
		p	2		slot
	m	(Lcjf;Lcgd;)Z	a	canTakeItemForPickAll
		p	1		stack
		p	2		slot
	m	(Lcou;)V	a	setOffers
		p	1		offers
	m	(Z)V	a	setShowProgressBar
		p	1		leveled
	m	(Lcbu;)V	b	removed
		p	1		player
	m	(Z)V	b	setCanRestock
		p	1		canRefreshTrades
	m	(ILcjf;)V	c	moveFromInventoryToPaymentSlot
		p	1		slot
		p	2		stack
	m	(I)V	e	setSelectionHint
		p	1		index
	m	(I)V	f	setXp
		p	1		experience
	m	(I)V	g	setMerchantLevel
		p	1		levelProgress
	m	(I)V	h	tryMoveItems
		p	1		recipeIndex
	m	()I	l	getTraderXp
	m	()I	m	getFutureTraderXp
	m	()I	n	getTraderLevel
	m	()Z	o	canRestock
	m	()Lcou;	p	getOffers
	m	()Z	q	showProgressBar
	m	()V	r	playTradeSound
	f	I	k	PAYMENT1_SLOT
	f	I	l	PAYMENT2_SLOT
	f	I	m	RESULT_SLOT
	f	I	n	INV_SLOT_START
	f	I	o	INV_SLOT_END
	f	I	p	USE_ROW_SLOT_START
	f	I	q	USE_ROW_SLOT_END
	f	I	r	SELLSLOT1_X
	f	I	s	SELLSLOT2_X
	f	I	t	BUYSLOT_X
	f	I	u	ROW_Y
	f	Lcos;	v	trader
	f	Lcfr;	w	tradeContainer
	f	I	x	merchantLevel
	f	Z	y	showProgressBar
	f	Z	z	canRestock
c	cft	net/minecraft/world/inventory/MerchantResultSlot
	m	(Lcbu;Lcos;Lcfr;III)V	<init>	<init>
		p	1		player
		p	2		merchant
		p	3		merchantInventory
		p	4		index
		p	5		x
		p	6		y
	m	(I)Lcjf;	a	remove
		p	1		amount
	m	(Lcbu;Lcjf;)V	a	onTake
		p	1		player
		p	2		stack
	m	(Lcjf;)Z	a	mayPlace
		p	1		stack
	m	(Lcjf;I)V	a	onQuickCraft
		p	1		stack
		p	2		amount
	m	(Lcjf;)V	b_	checkTakeAchievements
		p	1		stack
	f	Lcfr;	a	slots
	f	Lcbu;	b	player
	f	I	c	removeCount
	f	Lcos;	h	merchant
c	cfu	net/minecraft/world/inventory/PlayerEnderChestContainer
	m	(Lcbu;)Z	a	stillValid
		p	1		player
	m	(Lddp;)V	a	setActiveChest
		p	1		blockEntity
	m	(Lrc;)V	a	fromTag
		p	1		nbtList
	m	(Lddp;)Z	b	isActiveChest
		p	1		blockEntity
	m	(Lcbu;)V	c	stopOpen
		p	1		player
	m	(Lcbu;)V	d_	startOpen
		p	1		player
	m	()Lrc;	g	createTag
	f	Lddp;	c	activeChest
c	cfv	net/minecraft/world/inventory/RecipeBookMenu
	m	(Lcfq;I)V	<init>	<init>
		p	1		type
		p	2		syncId
	m	(Lcby;)V	a	fillCraftSlotsStackedContents
		p	1		finder
	m	(Lcmk;)Z	a	recipeMatches
		p	1		recipe
	m	(ZLcmk;Lakr;)V	a	handlePlacement
		p	1		craftAll
		p	2		recipe
		p	3		player
	m	(I)Z	e	shouldMoveToInventory
		p	1		index
	m	()V	l	clearCraftingContent
	m	()I	m	getResultSlotIndex
	m	()I	n	getGridWidth
	m	()I	o	getGridHeight
	m	()I	p	getSize
	m	()Lcfw;	t	getRecipeBookType
c	cfw	net/minecraft/world/inventory/RecipeBookType
	m	()[Lcfw;	a	$values
	f	Lcfw;	a	CRAFTING
	f	Lcfw;	b	FURNACE
	f	Lcfw;	c	BLAST_FURNACE
	f	Lcfw;	d	SMOKER
	f	[Lcfw;	e	$VALUES
c	cfx	net/minecraft/world/inventory/RecipeCraftingHolder
	m	(Lcbu;Ljava/util/List;)V	a	awardUsedRecipes
		p	1		player
		p	2		ingredients
	m	(Lcmk;)V	a	setRecipeUsed
		p	1		recipe
	m	(Lcpv;Lakr;Lcmk;)Z	a	setRecipeUsed
		p	1		world
		p	2		player
		p	3		recipe
	m	()Lcmk;	d	getRecipeUsed
c	cfy	net/minecraft/world/inventory/ResultContainer
	m	()V	a	clearContent
	m	(I)Lcjf;	a	getItem
		p	1		slot
	m	(II)Lcjf;	a	removeItem
		p	1		slot
		p	2		amount
	m	(ILcjf;)V	a	setItem
		p	1		slot
		p	2		stack
	m	(Lcbu;)Z	a	stillValid
		p	1		player
	m	(Lcmk;)V	a	setRecipeUsed
		p	1		recipe
	m	()Z	af_	isEmpty
	m	()I	b	getContainerSize
	m	(I)Lcjf;	b	removeItemNoUpdate
		p	1		slot
	m	()Lcmk;	d	getRecipeUsed
	m	()V	e	setChanged
	f	Lhn;	c	itemStacks
	f	Lcmk;	d	recipeUsed
c	cfz	net/minecraft/world/inventory/ResultSlot
	m	(Lcbu;Lcez;Lbgr;III)V	<init>	<init>
		p	1		player
		p	2		input
		p	3		inventory
		p	4		index
		p	5		x
		p	6		y
	m	(I)Lcjf;	a	remove
		p	1		amount
	m	(Lcbu;Lcjf;)V	a	onTake
		p	1		player
		p	2		stack
	m	(Lcjf;)Z	a	mayPlace
		p	1		stack
	m	(Lcjf;I)V	a	onQuickCraft
		p	1		stack
		p	2		amount
	m	(I)V	b	onSwapCraft
		p	1		amount
	m	(Lcjf;)V	b_	checkTakeAchievements
		p	1		stack
	f	Lcez;	a	craftSlots
	f	Lcbu;	b	player
	f	I	c	removeCount
c	cga	net/minecraft/world/inventory/ShulkerBoxMenu
	m	(ILcbt;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
	m	(ILcbt;Lbgr;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
		p	3		inventory
	m	(Lcbu;)Z	a	stillValid
		p	1		player
	m	(Lcbu;I)Lcjf;	a	quickMoveStack
		p	1		player
		p	2		slot
	m	(Lcbu;)V	b	removed
		p	1		player
	f	I	k	CONTAINER_SIZE
	f	Lbgr;	l	container
c	cgb	net/minecraft/world/inventory/ShulkerBoxSlot
	m	(Lbgr;III)V	<init>	<init>
		p	1		inventory
		p	2		index
		p	3		x
		p	4		y
	m	(Lcjf;)Z	a	mayPlace
		p	1		stack
c	cgc	net/minecraft/world/inventory/SimpleContainerData
	m	(I)V	<init>	<init>
		p	1		size
	m	()I	a	getCount
	m	(I)I	a	get
		p	1		index
	m	(II)V	a	set
		p	1		index
		p	2		value
	f	[I	a	ints
c	cgd	net/minecraft/world/inventory/Slot
	m	(Lbgr;III)V	<init>	<init>
		p	1		inventory
		p	2		index
		p	3		x
		p	4		y
	m	()I	a	getMaxStackSize
	m	(I)Lcjf;	a	remove
		p	1		amount
	m	(IILcbu;)Ljava/util/Optional;	a	tryRemove
		p	1		min
		p	2		max
		p	3		player
	m	(Lcbu;)Z	a	mayPickup
		p	1		playerEntity
	m	(Lcbu;Lcjf;)V	a	onTake
		p	1		player
		p	2		stack
	m	(Lcjf;)Z	a	mayPlace
		p	1		stack
	m	(Lcjf;I)V	a	onQuickCraft
		p	1		stack
		p	2		amount
	m	(Lcjf;Lcjf;)V	a	setByPlayer
		p	1		stack
		p	2		previousStack
	m	(Lcjf;)I	a_	getMaxStackSize
		p	1		stack
	m	()Lcom/mojang/datafixers/util/Pair;	b	getNoItemIcon
	m	(I)V	b	onSwapCraft
		p	1		amount
	m	(IILcbu;)Lcjf;	b	safeTake
		p	1		min
		p	2		max
		p	3		player
	m	(Lcbu;)Z	b	allowModification
		p	1		player
	m	(Lcbu;Lcjf;)V	b	lambda$safeTake$0
		p	2		stack
	m	(Lcjf;I)Lcjf;	b	safeInsert
		p	1		stack
		p	2		count
	m	(Lcjf;Lcjf;)V	b	onQuickCraft
		p	1		newItem
		p	2		original
	m	(Lcjf;)V	b_	checkTakeAchievements
		p	1		stack
	m	()Z	c	isActive
	m	()V	d	setChanged
	m	(Lcjf;)V	d	setByPlayer
		p	1		stack
	m	()Lcjf;	e	getItem
	m	(Lcjf;)V	e	set
		p	1		stack
	m	()Z	f	hasItem
	m	(Lcjf;)Lcjf;	f	safeInsert
		p	1		stack
	m	()I	g	getContainerSlot
	m	()Z	h	isHighlightable
	f	I	a	slot
	f	Lbgr;	d	container
	f	I	e	index
	f	I	f	x
	f	I	g	y
c	cge	net/minecraft/world/inventory/SmithingMenu
	m	(ILcbt;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
	m	(ILcbt;Lcew;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
		p	3		context
	m	(Lcbu;Lcjf;)V	a	onTake
		p	1		player
		p	2		stack
	m	(Lcbu;Z)Z	a	mayPickup
		p	1		player
		p	2		present
	m	(Lcjf;Lcgd;)Z	a	canTakeItemForPickAll
		p	1		stack
		p	2		slot
	m	(Lcjf;Lcmk;)Ljava/util/stream/IntStream;	a	lambda$findSlotToQuickMoveTo$7
		p	1		recipe
	m	(Lcmx;Lcjf;)Ljava/util/OptionalInt;	a	findSlotMatchingIngredient
		p	0		recipe
		p	1		stack
	m	(Lcpv;Lgw;)V	a	lambda$onTake$6
		p	0		world
		p	1		pos
	m	(Ldfj;)Z	a	isValidBlock
		p	1		state
	m	(Lcjf;Lcmk;)Z	b	lambda$createInputSlotDefinitions$4
		p	1		recipe
	m	(Lcjf;)Z	c	canMoveIntoInputSlots
		p	1		stack
	m	(Lcjf;Lcmk;)Z	c	lambda$createInputSlotDefinitions$2
		p	1		recipe
	m	(Lcjf;)I	d	getSlotToQuickMoveTo
		p	1		stack
	m	(Lcjf;Lcmk;)Z	d	lambda$createInputSlotDefinitions$0
		p	1		recipe
	m	(I)V	e	shrinkStackInSlot
		p	1		slot
	m	(Lcjf;)Ljava/util/OptionalInt;	e	findSlotToQuickMoveTo
		p	1		stack
	m	(I)Z	f	lambda$findSlotToQuickMoveTo$8
		p	1		slot
	m	(Lcjf;)Z	f	lambda$createInputSlotDefinitions$5
		p	1		stack
	m	(Lcjf;)Z	g	lambda$createInputSlotDefinitions$3
		p	1		stack
	m	(Lcjf;)Z	h	lambda$createInputSlotDefinitions$1
		p	1		stack
	m	()Lcfm;	l	createInputSlotDefinitions
	m	()V	m	createResult
	m	()Ljava/util/List;	n	getRelevantItems
	f	I	k	TEMPLATE_SLOT
	f	I	l	BASE_SLOT
	f	I	m	ADDITIONAL_SLOT
	f	I	n	RESULT_SLOT
	f	I	s	TEMPLATE_SLOT_X_PLACEMENT
	f	I	t	BASE_SLOT_X_PLACEMENT
	f	I	u	ADDITIONAL_SLOT_X_PLACEMENT
	f	I	v	SLOT_Y_PLACEMENT
	f	I	w	RESULT_SLOT_X_PLACEMENT
	f	Lcpv;	x	level
	f	Lcmk;	y	selectedRecipe
	f	Ljava/util/List;	z	recipes
c	cgf	net/minecraft/world/inventory/SmokerMenu
	m	(ILcbt;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
	m	(ILcbt;Lbgr;Lcev;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
		p	3		inventory
		p	4		propertyDelegate
c	cgg	net/minecraft/world/inventory/StackedContentsCompatible
	m	(Lcby;)V	a	fillStackedContents
		p	1		finder
c	cgh	net/minecraft/world/inventory/StonecutterMenu
	m	(ILcbt;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
	m	(ILcbt;Lcew;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
		p	3		context
	m	()Lcfq;	a	getType
	m	(Lbgr;)V	a	slotsChanged
		p	1		inventory
	m	(Lbgr;Lcjf;)V	a	setupRecipeList
		p	1		input
		p	2		stack
	m	(Lcbu;)Z	a	stillValid
		p	1		player
	m	(Lcbu;I)Lcjf;	a	quickMoveStack
		p	1		player
		p	2		slot
	m	(Lcbu;Lcpv;Lgw;)V	a	lambda$removed$1
		p	2		world
		p	3		pos
	m	(Lcjf;Lcgd;)Z	a	canTakeItemForPickAll
		p	1		stack
		p	2		slot
	m	(Ljava/lang/Runnable;)V	a	registerUpdateListener
		p	1		contentsChangedListener
	m	(Lcbu;)V	b	removed
		p	1		player
	m	(Lcbu;I)Z	b	clickMenuButton
		p	1		player
		p	2		id
	m	(I)Z	e	isValidRecipeIndex
		p	1		id
	m	()I	l	getSelectedRecipeIndex
	m	()Ljava/util/List;	m	getRecipes
	m	()I	n	getNumRecipes
	m	()Z	o	hasInputItem
	m	()V	p	setupResultSlot
	m	()V	q	lambda$new$0
	f	Lcfy;	A	resultContainer
	f	I	k	INPUT_SLOT
	f	I	l	RESULT_SLOT
	f	Lcgd;	m	inputSlot
	f	Lcgd;	n	resultSlot
	f	Lbgr;	o	container
	f	I	p	INV_SLOT_START
	f	I	q	INV_SLOT_END
	f	I	r	USE_ROW_SLOT_START
	f	I	s	USE_ROW_SLOT_END
	f	Lcew;	t	access
	f	Lcfb;	u	selectedRecipeIndex
	f	Lcpv;	v	level
	f	Ljava/util/List;	w	recipes
	f	Lcjf;	x	input
	f	J	y	lastSoundTime
	f	Ljava/lang/Runnable;	z	slotUpdateListener
c	cgh$1	net/minecraft/world/inventory/StonecutterMenu$1
	m	(Lcgh;I)V	<init>	<init>
		p	2		size
	m	()V	e	setChanged
	f	Lcgh;	c	this$0
c	cgh$2	net/minecraft/world/inventory/StonecutterMenu$2
	m	(Lcgh;Lbgr;IIILcew;)V	<init>	<init>
		p	2		inventory
		p	3		index
		p	4		x
		p	5		y
	m	(Lcbu;Lcjf;)V	a	onTake
		p	1		player
		p	2		stack
	m	(Lcjf;)Z	a	mayPlace
		p	1		stack
	m	(Lcpv;Lgw;)V	a	lambda$onTake$0
		p	1		world
		p	2		pos
	m	()Ljava/util/List;	i	getRelevantItems
	f	Lcew;	a	val$access
	f	Lcgh;	b	this$0
c	cgi	net/minecraft/world/inventory/TransientCraftingContainer
	m	(Lcel;II)V	<init>	<init>
		p	1		handler
		p	2		width
		p	3		height
	m	(Lcel;IILhn;)V	<init>	<init>
		p	1		handler
		p	2		width
		p	3		height
		p	4		stacks
	m	()V	a	clearContent
	m	(I)Lcjf;	a	getItem
		p	1		slot
	m	(II)Lcjf;	a	removeItem
		p	1		slot
		p	2		amount
	m	(ILcjf;)V	a	setItem
		p	1		slot
		p	2		stack
	m	(Lcbu;)Z	a	stillValid
		p	1		player
	m	(Lcby;)V	a	fillStackedContents
		p	1		finder
	m	()Z	af_	isEmpty
	m	()I	b	getContainerSize
	m	(I)Lcjf;	b	removeItemNoUpdate
		p	1		slot
	m	()V	e	setChanged
	m	()I	f	getWidth
	m	()I	g	getHeight
	m	()Ljava/util/List;	h	getItems
	f	Lhn;	c	items
	f	I	d	width
	f	I	e	height
	f	Lcel;	f	menu
c	cgj	net/minecraft/world/inventory/package-info
c	cgk	net/minecraft/world/inventory/tooltip/BundleTooltip
	m	(Lhn;I)V	<init>	<init>
		p	1		inventory
		p	2		bundleOccupancy
	m	()Lhn;	a	getItems
	m	()I	b	getWeight
	f	Lhn;	a	items
	f	I	b	weight
c	cgl	net/minecraft/world/inventory/tooltip/TooltipComponent
c	cgm	net/minecraft/world/inventory/tooltip/package-info
c	cgn	net/minecraft/world/item/AdventureModeCheck
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		key
	m	(Lcjf;Lhq;Ldfn;)Z	a	test
		p	1		stack
		p	2		blockRegistry
		p	3		pos
	m	(Ldfn;Ldfn;Z)Z	a	areSameBlocks
		p	0		pos
		p	1		cachedPos
		p	2		nbtAware
	f	Ljava/lang/String;	a	tagName
	f	Ldfn;	b	lastCheckedBlock
	f	Z	c	lastResult
	f	Z	d	checksBlockEntity
c	cgo	net/minecraft/world/item/AirItem
	m	(Lcsv;Lcja$a;)V	<init>	<init>
		p	1		block
		p	2		settings
	m	()Ljava/lang/String;	a	getDescriptionId
	m	(Lcjf;Lcpv;Ljava/util/List;Lckw;)V	a	appendHoverText
		p	1		stack
		p	2		world
		p	3		tooltip
		p	4		context
	f	Lcsv;	a	block
c	cgp	net/minecraft/world/item/ArmorItem
	m	(Lcgq;Lcgp$a;Lcja$a;)V	<init>	<init>
		p	1		material
		p	2		type
		p	3		settings
	m	(Lbiv;)Lcom/google/common/collect/Multimap;	a	getDefaultAttributeModifiers
		p	1		slot
	m	(Lcjf;Lcjf;)Z	a	isValidRepairItem
		p	1		stack
		p	2		ingredient
	m	(Lcpv;Lcbu;Lbgx;)Lbgz;	a	use
		p	1		world
		p	2		user
		p	3		hand
	m	(Lid;Lcjf;)Z	a	dispenseArmor
		p	0		pointer
		p	1		armor
	m	(Ljava/util/EnumMap;)V	a	lambda$static$0
		p	0		uuidMap
	m	()Lapc;	ao_	getEquipSound
	m	()Lcgp$a;	b	getType
	m	()I	c	getEnchantmentValue
	m	()Lcgq;	d	getMaterial
	m	()I	e	getDefense
	m	()F	f	getToughness
	m	()Lbiv;	g	getEquipmentSlot
	f	Lih;	a	DISPENSE_ITEM_BEHAVIOR
	f	Lcgp$a;	b	type
	f	F	c	knockbackResistance
	f	Lcgq;	d	material
	f	Ljava/util/EnumMap;	e	ARMOR_MODIFIER_UUID_PER_TYPE
	f	I	f	defense
	f	F	g	toughness
	f	Lcom/google/common/collect/Multimap;	h	defaultModifiers
c	cgp$1	net/minecraft/world/item/ArmorItem$1
	m	(Lid;Lcjf;)Lcjf;	a	execute
		p	1		pointer
		p	2		stack
c	cgp$a	net/minecraft/world/item/ArmorItem$Type
	m	(Ljava/lang/String;ILbiv;Ljava/lang/String;)V	<init>	<init>
		p	3		equipmentSlot
		p	4		name
	m	()Lbiv;	a	getSlot
	m	()Ljava/lang/String;	b	getName
	m	()[Lcgp$a;	c	$values
	f	Lcgp$a;	a	HELMET
	f	Lcgp$a;	b	CHESTPLATE
	f	Lcgp$a;	c	LEGGINGS
	f	Lcgp$a;	d	BOOTS
	f	Lbiv;	e	slot
	f	Ljava/lang/String;	f	name
	f	[Lcgp$a;	g	$VALUES
c	cgq	net/minecraft/world/item/ArmorMaterial
	m	()I	a	getEnchantmentValue
	m	(Lcgp$a;)I	a	getDurabilityForType
		p	1		type
	m	()Lapc;	b	getEquipSound
	m	(Lcgp$a;)I	b	getDefenseForType
		p	1		type
	m	()Lcmg;	d	getRepairIngredient
	m	()Ljava/lang/String;	e	getName
	m	()F	f	getToughness
	m	()F	g	getKnockbackResistance
c	cgr	net/minecraft/world/item/ArmorMaterials
	m	(Ljava/lang/String;ILjava/lang/String;ILjava/util/EnumMap;ILapc;FFLjava/util/function/Supplier;)V	<init>	<init>
		p	3		name
		p	4		durabilityMultiplier
		p	5		protectionAmounts
		p	6		enchantability
		p	7		equipSound
		p	8		toughness
		p	9		knockbackResistance
		p	10		repairIngredientSupplier
	m	()I	a	getEnchantmentValue
	m	(Lcgp$a;)I	a	getDurabilityForType
		p	1		type
	m	(Ljava/util/EnumMap;)V	a	lambda$static$14
		p	0		map
	m	()Lapc;	b	getEquipSound
	m	(Lcgp$a;)I	b	getDefenseForType
		p	1		type
	m	(Ljava/util/EnumMap;)V	b	lambda$static$12
		p	0		map
	m	()Ljava/lang/String;	c	getSerializedName
	m	(Ljava/util/EnumMap;)V	c	lambda$static$10
		p	0		map
	m	()Lcmg;	d	getRepairIngredient
	m	(Ljava/util/EnumMap;)V	d	lambda$static$8
		p	0		map
	m	()Ljava/lang/String;	e	getName
	m	(Ljava/util/EnumMap;)V	e	lambda$static$6
		p	0		map
	m	()F	f	getToughness
	m	(Ljava/util/EnumMap;)V	f	lambda$static$4
		p	0		map
	m	()F	g	getKnockbackResistance
	m	(Ljava/util/EnumMap;)V	g	lambda$static$2
		p	0		map
	m	()Lcmg;	h	lambda$static$13
	m	(Ljava/util/EnumMap;)V	h	lambda$static$0
		p	0		map
	m	()Lcmg;	i	lambda$static$11
	m	()Lcmg;	j	lambda$static$9
	m	()Lcmg;	k	lambda$static$7
	m	()Lcmg;	l	lambda$static$5
	m	()Lcmg;	m	lambda$static$3
	m	()Lcmg;	n	lambda$static$1
	m	()[Lcgr;	o	$values
	f	Lcgr;	a	LEATHER
	f	Lcgr;	b	CHAIN
	f	Lcgr;	c	IRON
	f	Lcgr;	d	GOLD
	f	Lcgr;	e	DIAMOND
	f	Lcgr;	f	TURTLE
	f	Lcgr;	g	NETHERITE
	f	Lasp$a;	h	CODEC
	f	Ljava/util/EnumMap;	i	HEALTH_FUNCTION_FOR_TYPE
	f	Ljava/lang/String;	j	name
	f	I	k	durabilityMultiplier
	f	Ljava/util/EnumMap;	l	protectionFunctionForType
	f	I	m	enchantmentValue
	f	Lapc;	n	sound
	f	F	o	toughness
	f	F	p	knockbackResistance
	f	Larr;	q	repairIngredient
	f	[Lcgr;	r	$VALUES
c	cgs	net/minecraft/world/item/ArmorStandItem
	m	(Lcja$a;)V	<init>	<init>
		p	1		settings
	m	(Lclp;)Lbgy;	a	useOn
		p	1		context
c	cgt	net/minecraft/world/item/ArrowItem
	m	(Lcja$a;)V	<init>	<init>
		p	1		settings
	m	(Lcpv;Lcjf;Lbjg;)Lcca;	a	createArrow
		p	1		world
		p	2		stack
		p	3		shooter
c	cgu	net/minecraft/world/item/AxeItem
	m	(Lcks;FFLcja$a;)V	<init>	<init>
		p	1		material
		p	2		attackDamage
		p	3		attackSpeed
		p	4		settings
	m	(Lclp;)Lbgy;	a	useOn
		p	1		context
	m	(Lclp;Lcbu;)V	a	lambda$useOn$1
		p	1		p
	m	(Ldfj;Lcsv;)Ldfj;	a	lambda$getStripped$2
		p	1		block
	m	(Ldfj;)Ljava/util/Optional;	b	getStripped
		p	1		state
	m	(Ldfj;Lcsv;)Ldfj;	b	lambda$useOn$0
		p	1		block
	f	Ljava/util/Map;	a	STRIPPABLES
c	cgv	net/minecraft/world/item/BannerItem
	m	(Lcsv;Lcsv;Lcja$a;)V	<init>	<init>
		p	1		bannerBlock
		p	2		wallBannerBlock
		p	3		settings
	m	(Laev;)Ljava/lang/String;	a	lambda$appendHoverTextFromBannerBlockEntityTag$0
		p	0		key
	m	(Lcjf;Lcpv;Ljava/util/List;Lckw;)V	a	appendHoverText
		p	1		stack
		p	2		world
		p	3		tooltip
		p	4		context
	m	(Lcjf;Ljava/util/List;)V	a	appendHoverTextFromBannerBlockEntityTag
		p	0		stack
		p	1		tooltip
	m	(Ljava/util/List;Lcht;Ljava/lang/String;)V	a	lambda$appendHoverTextFromBannerBlockEntityTag$1
		p	2		translationKey
	m	()Lcht;	b	getColor
	f	Ljava/lang/String;	c	PATTERN_PREFIX
c	cgw	net/minecraft/world/item/BannerPatternItem
	m	(Laqh;Lcja$a;)V	<init>	<init>
		p	1		patternItemTag
		p	2		settings
	m	(Lcjf;Lcpv;Ljava/util/List;Lckw;)V	a	appendHoverText
		p	1		stack
		p	2		world
		p	3		tooltip
		p	4		context
	m	()Laqh;	b	getBannerPattern
	m	()Lty;	d	getDisplayName
	f	Laqh;	a	bannerPattern
c	cgx	net/minecraft/world/item/BedItem
	m	(Lcsv;Lcja$a;)V	<init>	<init>
		p	1		block
		p	2		settings
	m	(Lcln;Ldfj;)Z	a	placeBlock
		p	1		context
		p	2		state
c	cgy	net/minecraft/world/item/BlockItem
	m	(Lcsv;Lcja$a;)V	<init>	<init>
		p	1		block
		p	2		settings
	m	()Ljava/lang/String;	a	getDescriptionId
	m	(Lbyn;)V	a	onDestroyed
		p	1		entity
	m	(Lcjf;)Lqw;	a	getBlockEntityData
		p	0		stack
	m	(Lcjf;Lcpv;Ljava/util/List;Lckw;)V	a	appendHoverText
		p	1		stack
		p	2		world
		p	3		tooltip
		p	4		context
	m	(Lcjf;Ldcx;Lqw;)V	a	setBlockEntityData
		p	0		stack
		p	1		blockEntityType
		p	2		tag
	m	(Lcln;)Lbgy;	a	place
		p	1		context
	m	(Lcln;Ldfj;)Z	a	placeBlock
		p	1		context
		p	2		state
	m	(Lclp;)Lbgy;	a	useOn
		p	1		context
	m	(Lcpv;Lcbu;Lgw;Lcjf;)Z	a	updateCustomBlockEntityTag
		p	0		world
		p	1		player
		p	2		pos
		p	3		stack
	m	(Ldfj;)Lapc;	a	getPlaceSound
		p	1		state
	m	(Ldfj;Ldgm;Ljava/lang/Comparable;)Ldfj;	a	lambda$updateState$0
		p	2		value
	m	(Ldfj;Ldgm;Ljava/lang/String;)Ldfj;	a	updateState
		p	0		state
		p	1		property
		p	2		name
	m	(Lgw;Lcpv;Lcbu;Lcjf;Ldfj;)Z	a	updateCustomBlockEntityTag
		p	1		pos
		p	2		world
		p	3		player
		p	4		stack
		p	5		state
	m	(Lgw;Lcpv;Lcjf;Ldfj;)Ldfj;	a	updateBlockStateFromTag
		p	1		pos
		p	2		world
		p	3		stack
		p	4		state
	m	(Ljava/util/Map;Lcja;)V	a	registerBlocks
		p	1		map
		p	2		item
	m	()Z	al_	canFitInsideContainerItems
	m	(Lcln;)Lcln;	b	updatePlacementContext
		p	1		context
	m	(Lcln;Ldfj;)Z	b	canPlace
		p	1		context
		p	2		state
	m	(Lcln;)Ldfj;	c	getPlacementState
		p	1		context
	m	()Z	d	mustSurvive
	m	()Lcsv;	e	getBlock
	m	()Lcec;	m	requiredFeatures
	f	Ljava/lang/String;	a	BLOCK_ENTITY_TAG
	f	Ljava/lang/String;	b	BLOCK_STATE_TAG
	f	Lcsv;	c	block
c	cgz	net/minecraft/world/item/BoatItem
	m	(ZLcdn$b;Lcja$a;)V	<init>	<init>
		p	1		chest
		p	2		type
		p	3		settings
	m	(Lcpv;Lcbu;Lbgx;)Lbgz;	a	use
		p	1		world
		p	2		user
		p	3		hand
	m	(Lcpv;Lehl;)Lcdn;	a	getBoat
		p	1		world
		p	2		hitResult
	f	Ljava/util/function/Predicate;	a	ENTITY_PREDICATE
	f	Lcdn$b;	b	type
	f	Z	c	hasChest
c	cha	net/minecraft/world/item/BoneMealItem
	m	(Lcja$a;)V	<init>	<init>
		p	1		settings
	m	(Lcjf;Lcpv;Lgw;)Z	a	growCrop
		p	0		stack
		p	1		world
		p	2		pos
	m	(Lcjf;Lcpv;Lgw;Lha;)Z	a	growWaterPlant
		p	0		stack
		p	1		world
		p	2		blockPos
		p	3		facing
	m	(Lclp;)Lbgy;	a	useOn
		p	1		context
	m	(Lcpv;Lhi$c;)Ljava/util/Optional;	a	lambda$growWaterPlant$2
		p	1		blocks
	m	(Lcpw;Lgw;I)V	a	addGrowthParticles
		p	0		world
		p	1		pos
		p	2		count
	m	(Ldfi$a;)Z	a	lambda$growWaterPlant$4
		p	0		state
	m	(Lhe;)Ldfj;	a	lambda$growWaterPlant$3
		p	0		blockEntry
	m	(Lcpv;Lhi$c;)Ljava/util/Optional;	b	lambda$growWaterPlant$0
		p	1		blocks
	m	(Lhe;)Ldfj;	b	lambda$growWaterPlant$1
		p	0		blockEntry
	f	I	a	GRASS_SPREAD_WIDTH
	f	I	b	GRASS_SPREAD_HEIGHT
	f	I	c	GRASS_COUNT_MULTIPLIER
c	chb	net/minecraft/world/item/BookItem
	m	(Lcja$a;)V	<init>	<init>
		p	1		settings
	m	()I	c	getEnchantmentValue
	m	(Lcjf;)Z	d_	isEnchantable
		p	1		stack
c	chc	net/minecraft/world/item/BottleItem
	m	(Lcja$a;)V	<init>	<init>
		p	1		settings
	m	(Lbin;)Z	a	lambda$use$0
		p	0		entity
	m	(Lcjf;Lcbu;Lcjf;)Lcjf;	a	turnBottleIntoItem
		p	1		stack
		p	2		player
		p	3		outputStack
	m	(Lcpv;Lcbu;Lbgx;)Lbgz;	a	use
		p	1		world
		p	2		user
		p	3		hand
c	chd	net/minecraft/world/item/BowItem
	m	(Lcja$a;)V	<init>	<init>
		p	1		settings
	m	(I)F	a	getPowerForTime
		p	0		useTicks
	m	(Lcbu;Lcbu;)V	a	lambda$releaseUsing$0
		p	1		p
	m	(Lcjf;Lcpv;Lbjg;I)V	a	releaseUsing
		p	1		stack
		p	2		world
		p	3		user
		p	4		remainingUseTicks
	m	(Lcpv;Lcbu;Lbgx;)Lbgz;	a	use
		p	1		world
		p	2		user
		p	3		hand
	m	()Ljava/util/function/Predicate;	b	getAllSupportedProjectiles
	m	(Lcjf;)I	b	getUseDuration
		p	1		stack
	m	(Lcjf;)Lcky;	c	getUseAnimation
		p	1		stack
	m	()I	d	getDefaultProjectileRange
	f	I	a	MAX_DRAW_DURATION
	f	I	b	DEFAULT_RANGE
c	che	net/minecraft/world/item/BowlFoodItem
	m	(Lcja$a;)V	<init>	<init>
		p	1		settings
	m	(Lcjf;Lcpv;Lbjg;)Lcjf;	a	finishUsingItem
		p	1		stack
		p	2		world
		p	3		user
c	chf	net/minecraft/world/item/BrushItem
	m	(Lcja$a;)V	<init>	<init>
		p	1		settings
	m	(Lbiq;)Z	a	lambda$calculateHitResult$1
		p	0		entity
	m	(Lbiv;Lbjg;)V	a	lambda$onUseTick$0
		p	1		userx
	m	(Lbjg;)Lehl;	a	calculateHitResult
		p	1		user
	m	(Lclp;)Lbgy;	a	useOn
		p	1		context
	m	(Lcpv;Lbjg;Lcjf;I)V	a	onUseTick
		p	1		world
		p	2		user
		p	3		stack
		p	4		remainingUseTicks
	m	(Lcpv;Lehj;Ldfj;Lehn;Lbja;)V	a	spawnDustParticles
		p	1		world
		p	2		hitResult
		p	3		state
		p	4		userRotation
		p	5		arm
	m	(Lcjf;)I	b	getUseDuration
		p	1		stack
	m	(Lcjf;)Lcky;	c	getUseAnimation
		p	1		stack
	f	I	a	ANIMATION_DURATION
	f	I	b	USE_DURATION
	f	D	c	MAX_BRUSH_DISTANCE
c	chf$1	net/minecraft/world/item/BrushItem$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	chf$a	net/minecraft/world/item/BrushItem$DustParticlesDelta
	m	()D	a	xd
	m	(Lehn;Lha;)Lchf$a;	a	fromDirection
		p	0		userRotation
		p	1		side
	m	()D	b	yd
	m	()D	c	zd
	f	D	a	xd
	f	D	b	yd
	f	D	c	zd
	f	D	d	ALONG_SIDE_DELTA
	f	D	e	OUT_FROM_SIDE_DELTA
c	chg	net/minecraft/world/item/BucketItem
	m	(Leal;Lcja$a;)V	<init>	<init>
		p	1		fluid
		p	2		settings
	m	(Lcbu;Lapc;)V	a	lambda$use$0
		p	1		sound
	m	(Lcbu;Lcpv;Lcjf;Lgw;)V	a	checkExtraContent
		p	1		player
		p	2		world
		p	3		stack
		p	4		pos
	m	(Lcbu;Lcpv;Lgw;Lehj;)Z	a	emptyContents
		p	1		player
		p	2		world
		p	3		pos
		p	4		hitResult
	m	(Lcbu;Lcpw;Lgw;)V	a	playEmptySound
		p	1		player
		p	2		world
		p	3		pos
	m	(Lcjf;Lcbu;)Lcjf;	a	getEmptySuccessItem
		p	0		stack
		p	1		player
	m	(Lcpv;Lcbu;Lbgx;)Lbgz;	a	use
		p	1		world
		p	2		user
		p	3		hand
	f	Leal;	a	content
c	chh	net/minecraft/world/item/BundleItem
	m	(Lcja$a;)V	<init>	<init>
		p	1		settings
	m	(Lbiq;)V	a	playRemoveOneSound
		p	1		entity
	m	(Lbyn;)V	a	onDestroyed
		p	1		entity
	m	(Lcbu;Lbjy;Lcjf;)V	a	lambda$overrideOtherStackedOnMe$1
	m	(Lcjf;Lcbu;)Z	a	dropContents
		p	0		stack
		p	1		player
	m	(Lcjf;Lcgd;Lcet;Lcbu;)Z	a	overrideStackedOnOther
		p	1		stack
		p	2		slot
		p	3		clickType
		p	4		player
	m	(Lcjf;Lcgd;Lcjf;)V	a	lambda$overrideStackedOnOther$0
		p	2		removedStack
	m	(Lcjf;Lcjf;Lcgd;Lcet;Lcbu;Lbjy;)Z	a	overrideOtherStackedOnMe
		p	1		stack
		p	2		otherStack
		p	3		slot
		p	4		clickType
		p	5		player
		p	6		cursorStackReference
	m	(Lcjf;Lcpv;Ljava/util/List;Lckw;)V	a	appendHoverText
		p	1		stack
		p	2		world
		p	3		tooltip
		p	4		context
	m	(Lcjf;Lqw;)Z	a	lambda$getMatchingItem$2
		p	1		item
	m	(Lcjf;Lrc;)Ljava/util/Optional;	a	getMatchingItem
		p	0		stack
		p	1		items
	m	(Lcpv;Lcbu;Lbgx;)Lbgz;	a	use
		p	1		world
		p	2		user
		p	3		hand
	m	(Lbiq;)V	b	playInsertSound
		p	1		entity
	m	(Lcjf;Lcjf;)I	b	add
		p	0		bundle
		p	1		stack
	m	(Lbiq;)V	c	playDropContentsSound
		p	1		entity
	m	(Lcjf;)F	d	getFullnessDisplay
		p	0		stack
	m	(Lcjf;)Z	e	isBarVisible
		p	1		stack
	m	(Lcjf;)I	f	getBarWidth
		p	1		stack
	m	(Lcjf;)I	g	getBarColor
		p	1		stack
	m	(Lcjf;)Ljava/util/Optional;	h	getTooltipImage
		p	1		stack
	m	(Lcjf;)I	k	getWeight
		p	0		stack
	m	(Lcjf;)I	o	getContentWeight
		p	0		stack
	m	(Lcjf;)Ljava/util/Optional;	p	removeOne
		p	0		stack
	m	(Lcjf;)Ljava/util/stream/Stream;	q	getContents
		p	0		stack
	m	(Lcjf;)I	r	lambda$getContentWeight$3
	f	I	a	MAX_WEIGHT
	f	Ljava/lang/String;	b	TAG_ITEMS
	f	I	c	BUNDLE_IN_BUNDLE_WEIGHT
	f	I	d	BAR_COLOR
c	chi	net/minecraft/world/item/ChorusFruitItem
	m	(Lcja$a;)V	<init>	<init>
		p	1		settings
	m	(Lcjf;Lcpv;Lbjg;)Lcjf;	a	finishUsingItem
		p	1		stack
		p	2		world
		p	3		user
c	chj	net/minecraft/world/item/CompassItem
	m	(Lcja$a;)V	<init>	<init>
		p	1		settings
	m	(Laev;Lgw;Lqw;)V	a	addLodestoneTags
		p	1		worldKey
		p	2		pos
		p	3		nbt
	m	(Lcjf;Lcpv;Lbiq;IZ)V	a	inventoryTick
		p	1		stack
		p	2		world
		p	3		entity
		p	4		slot
		p	5		selected
	m	(Lclp;)Lbgy;	a	useOn
		p	1		context
	m	(Lcpv;)Lhd;	a	getSpawnPosition
		p	0		world
	m	(Lqw;)Lhd;	a	getLodestonePosition
		p	0		nbt
	m	(Lqw;Lrq;)V	a	lambda$addLodestoneTags$0
	m	(Lqw;)Ljava/util/Optional;	c	getLodestoneDimension
		p	0		nbt
	m	(Lcjf;)Z	d	isLodestoneCompass
		p	0		stack
	m	(Lcjf;)Z	i	isFoil
		p	1		stack
	m	(Lcjf;)Ljava/lang/String;	j	getDescriptionId
		p	1		stack
	f	Ljava/lang/String;	a	TAG_LODESTONE_POS
	f	Ljava/lang/String;	b	TAG_LODESTONE_DIMENSION
	f	Ljava/lang/String;	c	TAG_LODESTONE_TRACKED
	f	Lorg/slf4j/Logger;	d	LOGGER
c	chk	net/minecraft/world/item/ComplexItem
	m	(Lcja$a;)V	<init>	<init>
		p	1		settings
	m	(Lcjf;Lcpv;Lcbu;)Lvd;	a	getUpdatePacket
		p	1		stack
		p	2		world
		p	3		player
	m	()Z	ah_	isComplex
c	chl	net/minecraft/world/item/CreativeModeTab
	m	(Lchl$f;ILchl$h;Ltl;Ljava/util/function/Supplier;Lchl$b;)V	<init>	<init>
		p	1		row
		p	2		column
		p	3		type
		p	4		displayName
		p	5		iconSupplier
		p	6		entryCollector
	m	()Ltl;	a	getDisplayName
	m	(Lchl$d;)V	a	buildContents
		p	1		displayContext
	m	(Lchl$f;I)Lchl$a;	a	builder
		p	0		location
		p	1		column
	m	(Lcjf;)Z	a	contains
		p	1		stack
	m	(Ljava/util/function/Consumer;)V	a	setSearchTreeBuilder
		p	1		searchProviderReloader
	m	()Lcjf;	b	getIconItem
	m	()Ljava/lang/String;	c	getBackgroundSuffix
	m	()Z	d	showTitle
	m	()Z	e	canScroll
	m	()I	f	column
	m	()Lchl$f;	g	row
	m	()Z	h	hasAnyItems
	m	()Z	i	shouldDisplay
	m	()Z	j	isAlignedRight
	m	()Lchl$h;	k	getType
	m	()Ljava/util/Collection;	l	getDisplayItems
	m	()Ljava/util/Collection;	m	getSearchTabDisplayItems
	m	()V	n	rebuildSearchTree
	m	()Ljava/lang/IllegalStateException;	o	lambda$buildContents$0
	f	Ltl;	a	displayName
	f	Ljava/lang/String;	b	backgroundSuffix
	f	Z	c	canScroll
	f	Z	d	showTitle
	f	Z	e	alignedRight
	f	Lchl$f;	f	row
	f	I	g	column
	f	Lchl$h;	h	type
	f	Lcjf;	i	iconItemStack
	f	Ljava/util/Collection;	j	displayItems
	f	Ljava/util/Set;	k	displayItemsSearchTab
	f	Ljava/util/function/Consumer;	l	searchTreeBuilder
	f	Ljava/util/function/Supplier;	m	iconGenerator
	f	Lchl$b;	n	displayItemsGenerator
c	chl$1	net/minecraft/world/item/CreativeModeTab$1
	f	[I	a	$SwitchMap$net$minecraft$world$item$CreativeModeTab$TabVisibility
c	chl$a	net/minecraft/world/item/CreativeModeTab$Builder
	m	(Lchl$f;I)V	<init>	<init>
		p	1		row
		p	2		column
	m	()Lchl$a;	a	alignedRight
	m	(Lchl$b;)Lchl$a;	a	displayItems
		p	1		entryCollector
	m	(Lchl$d;Lchl$e;)V	a	lambda$static$0
		p	0		displayContext
		p	1		entries
	m	(Lchl$h;)Lchl$a;	a	type
		p	1		type
	m	(Ljava/lang/String;)Lchl$a;	a	backgroundSuffix
		p	1		texture
	m	(Ljava/util/function/Supplier;)Lchl$a;	a	icon
		p	1		iconSupplier
	m	(Ltl;)Lchl$a;	a	title
		p	1		displayName
	m	()Lchl$a;	b	hideTitle
	m	()Lchl$a;	c	noScrollBar
	m	()Lchl;	d	build
	m	()Lcjf;	e	lambda$new$1
	f	Lchl$b;	a	EMPTY_GENERATOR
	f	Lchl$f;	b	row
	f	I	c	column
	f	Ltl;	d	displayName
	f	Ljava/util/function/Supplier;	e	iconGenerator
	f	Lchl$b;	f	displayItemsGenerator
	f	Z	g	canScroll
	f	Z	h	showTitle
	f	Z	i	alignedRight
	f	Lchl$h;	j	type
	f	Ljava/lang/String;	k	backgroundSuffix
c	chl$b	net/minecraft/world/item/CreativeModeTab$DisplayItemsGenerator
	m	(Lchl$d;Lchl$e;)V	accept	accept
		p	1		displayContext
		p	2		entries
c	chl$c	net/minecraft/world/item/CreativeModeTab$ItemDisplayBuilder
	m	(Lchl;Lcec;)V	<init>	<init>
		p	1		group
		p	2		enabledFeatures
	m	(Lcjf;Lchl$g;)V	a	accept
		p	1		stack
		p	2		visibility
	f	Ljava/util/Collection;	a	tabContents
	f	Ljava/util/Set;	b	searchTabContents
	f	Lchl;	c	tab
	f	Lcec;	d	featureFlagSet
c	chl$d	net/minecraft/world/item/CreativeModeTab$ItemDisplayParameters
	m	()Lcec;	a	enabledFeatures
	m	(Lcec;ZLhg$b;)Z	a	needsUpdate
		p	1		enabledFeatures
		p	2		hasPermissions
		p	3		lookup
	m	()Z	b	hasPermissions
	m	()Lhg$b;	c	holders
	f	Lcec;	a	enabledFeatures
	f	Z	b	hasPermissions
	f	Lhg$b;	c	holders
c	chl$e	net/minecraft/world/item/CreativeModeTab$Output
	m	(Lchl$g;Lcjf;)V	a	lambda$acceptAll$0
		p	2		stack
	m	(Lcjf;)V	a	accept
		p	1		stack
	m	(Lcjf;Lchl$g;)V	a	accept
		p	1		stack
		p	2		visibility
	m	(Lcpu;)V	a	accept
		p	1		item
	m	(Lcpu;Lchl$g;)V	a	accept
		p	1		item
		p	2		visibility
	m	(Ljava/util/Collection;)V	a	acceptAll
		p	1		stacks
	m	(Ljava/util/Collection;Lchl$g;)V	a	acceptAll
		p	1		stacks
		p	2		visibility
c	chl$f	net/minecraft/world/item/CreativeModeTab$Row
	m	()[Lchl$f;	a	$values
	f	Lchl$f;	a	TOP
	f	Lchl$f;	b	BOTTOM
	f	[Lchl$f;	c	$VALUES
c	chl$g	net/minecraft/world/item/CreativeModeTab$TabVisibility
	m	()[Lchl$g;	a	$values
	f	Lchl$g;	a	PARENT_AND_SEARCH_TABS
	f	Lchl$g;	b	PARENT_TAB_ONLY
	f	Lchl$g;	c	SEARCH_TAB_ONLY
	f	[Lchl$g;	d	$VALUES
c	chl$h	net/minecraft/world/item/CreativeModeTab$Type
	m	()[Lchl$h;	a	$values
	f	Lchl$h;	a	CATEGORY
	f	Lchl$h;	b	INVENTORY
	f	Lchl$h;	c	HOTBAR
	f	Lchl$h;	d	SEARCH
	f	[Lchl$h;	e	$VALUES
c	chm	net/minecraft/world/item/CreativeModeTabs
	m	()V	a	validate
	m	(Lbyj;)I	a	lambda$static$34
		p	0		paintingVariant
	m	(Lcec;ZLhg$b;)Z	a	tryRebuildTabContents
		p	0		enabledFeatures
		p	1		operatorEnabled
		p	2		lookup
	m	(Lchl$d;)V	a	buildAllTabContents
		p	0		displayContext
	m	(Lchl$d;Lchl$e;)V	a	lambda$bootstrap$32
		p	0		displayContext
		p	1		entries
	m	(Lchl$d;Lchl;)V	a	lambda$buildAllTabContents$52
		p	1		group
	m	(Lchl$e;Lchl$g;)V	a	generateSuspiciousStews
		p	0		entries
		p	1		visibility
	m	(Lchl$e;Lchl$g;Lcjf;)V	a	lambda$generateInstrumentTypes$46
		p	2		stack
	m	(Lchl$e;Lchl$g;Lhe$c;)V	a	lambda$generatePresetPaintings$48
		p	2		variant
	m	(Lchl$e;Lhg$c;)V	a	lambda$bootstrap$31
		p	1		wrapper
	m	(Lchl$e;Lhg$c;Ljava/util/function/Predicate;Lchl$g;)V	a	generatePresetPaintings
		p	0		entries
		p	1		registryWrapper
		p	2		predicate
		p	3		visibility
	m	(Lchl$e;Lhg;Lcja;Laqh;Lchl$g;)V	a	generateInstrumentTypes
		p	0		entries
		p	1		registryWrapper
		p	2		item
		p	3		instrumentTag
		p	4		visibility
	m	(Lchl$e;Lhg;Lcja;Lchl$g;)V	a	generatePotionEffectTypes
		p	0		entries
		p	1		registryWrapper
		p	2		item
		p	3		visibility
	m	(Lchl$e;Lhg;Ljava/util/Set;Lchl$g;)V	a	generateEnchantmentBookTypesOnlyMaxLevel
		p	0		entries
		p	1		registryWrapper
		p	2		enchantmentTargets
		p	3		visibility
	m	(Lchl$e;Ljava/util/Set;Lhg$c;)V	a	lambda$bootstrap$25
		p	2		wrapper
	m	(Lchl;)Z	a	lambda$buildAllTabContents$51
		p	0		group
	m	(Lcja;Lchl$e;Lchl$g;Lhi$c;)V	a	lambda$generateInstrumentTypes$47
		p	3		entryList
	m	(Lcja;Lhe$c;)Lcjf;	a	lambda$generatePotionEffectTypes$36
		p	1		entry
	m	(Lcja;Lhe;)Lcjf;	a	lambda$generateInstrumentTypes$45
		p	1		instrument
	m	(Lcno;)Ljava/util/stream/Stream;	a	lambda$generateEnchantmentBookTypesAllLevels$43
		p	0		enchantment
	m	(Lcno;I)Lcjf;	a	lambda$generateEnchantmentBookTypesAllLevels$42
		p	1		level
	m	(Lhe$c;)Z	a	lambda$generatePotionEffectTypes$35
		p	0		entry
	m	(Lhe;)Z	a	lambda$bootstrap$30
		p	0		registryEntry
	m	(Lhq;)Lchl;	a	bootstrap
		p	0		registry
	m	(Lhq;Lchl$d;Lchl$e;)V	a	lambda$bootstrap$14
		p	1		displayContext
		p	2		entries
	m	(Ljava/lang/String;)Laev;	a	createKey
		p	0		id
	m	(Ljava/util/Set;Lcno;)Z	a	lambda$generateEnchantmentBookTypesAllLevels$41
		p	1		enchantment
	m	()Lchl;	b	getDefaultTab
	m	(Lchl$d;Lchl$e;)V	b	lambda$bootstrap$28
		p	0		displayContext
		p	1		entries
	m	(Lchl$d;Lchl;)V	b	lambda$buildAllTabContents$50
		p	1		group
	m	(Lchl$e;Lchl$g;)V	b	generateFireworksAllDurations
		p	0		entries
		p	1		visibility
	m	(Lchl$e;Lchl$g;Lcjf;)V	b	lambda$generateEnchantmentBookTypesAllLevels$44
		p	2		stack
	m	(Lchl$e;Lhg$c;)V	b	lambda$bootstrap$22
		p	1		wrapper
	m	(Lchl$e;Lhg;Ljava/util/Set;Lchl$g;)V	b	generateEnchantmentBookTypesAllLevels
		p	0		entries
		p	1		registryWrapper
		p	2		enchantmentTargets
		p	3		visibility
	m	(Lchl;)Z	b	lambda$buildAllTabContents$49
		p	0		group
	m	(Lcno;)Lcjf;	b	lambda$generateEnchantmentBookTypesOnlyMaxLevel$39
		p	0		enchantment
	m	(Lhe;)Z	b	lambda$bootstrap$7
		p	0		registryEntry
	m	(Ljava/util/Set;Lcno;)Z	b	lambda$generateEnchantmentBookTypesOnlyMaxLevel$38
		p	1		enchantment
	m	()Ljava/util/List;	c	tabs
	m	(Lchl$d;Lchl$e;)V	c	lambda$bootstrap$26
		p	0		displayContext
		p	1		entries
	m	(Lchl$e;Lchl$g;Lcjf;)V	c	lambda$generateEnchantmentBookTypesOnlyMaxLevel$40
		p	2		stack
	m	(Lchl$e;Lhg$c;)V	c	lambda$bootstrap$19
		p	1		wrapper
	m	()Ljava/util/List;	d	allTabs
	m	(Lchl$d;Lchl$e;)V	d	lambda$bootstrap$23
		p	0		displayContext
		p	1		entries
	m	(Lchl$e;Lchl$g;Lcjf;)V	d	lambda$generatePotionEffectTypes$37
		p	2		stack
	m	(Lchl$e;Lhg$c;)V	d	lambda$bootstrap$16
		p	1		wrapper
	m	()Lchl;	e	searchTab
	m	(Lchl$d;Lchl$e;)V	e	lambda$bootstrap$20
		p	0		displayContext
		p	1		entries
	m	(Lchl$e;Lhg$c;)V	e	lambda$bootstrap$8
		p	1		wrapper
	m	()Ljava/util/stream/Stream;	f	streamAllTabs
	m	(Lchl$d;Lchl$e;)V	f	lambda$bootstrap$17
		p	0		displayContext
		p	1		entries
	m	()Lcjf;	g	lambda$bootstrap$33
	m	(Lchl$d;Lchl$e;)V	g	lambda$bootstrap$11
		p	0		displayContext
		p	1		entries
	m	()Lcjf;	h	lambda$bootstrap$29
	m	(Lchl$d;Lchl$e;)V	h	lambda$bootstrap$9
		p	0		displayContext
		p	1		entries
	m	()Lcjf;	i	lambda$bootstrap$27
	m	(Lchl$d;Lchl$e;)V	i	lambda$bootstrap$5
		p	0		displayContext
		p	1		entries
	m	()Lcjf;	j	lambda$bootstrap$24
	m	(Lchl$d;Lchl$e;)V	j	lambda$bootstrap$3
		p	0		displayContext
		p	1		entries
	m	()Lcjf;	k	lambda$bootstrap$21
	m	(Lchl$d;Lchl$e;)V	k	lambda$bootstrap$1
		p	0		displayContext
		p	1		entries
	m	()Lcjf;	l	lambda$bootstrap$18
	m	()Lcjf;	m	lambda$bootstrap$15
	m	()Lcjf;	n	lambda$bootstrap$13
	m	()Lcjf;	o	lambda$bootstrap$12
	m	()Lcjf;	p	lambda$bootstrap$10
	m	()Lcjf;	q	lambda$bootstrap$6
	m	()Lcjf;	r	lambda$bootstrap$4
	m	()Lcjf;	s	lambda$bootstrap$2
	m	()Lcjf;	t	lambda$bootstrap$0
	f	Laev;	a	BUILDING_BLOCKS
	f	Laev;	b	COLORED_BLOCKS
	f	Laev;	c	NATURAL_BLOCKS
	f	Laev;	d	FUNCTIONAL_BLOCKS
	f	Laev;	e	REDSTONE_BLOCKS
	f	Laev;	f	HOTBAR
	f	Laev;	g	SEARCH
	f	Laev;	h	TOOLS_AND_UTILITIES
	f	Laev;	i	COMBAT
	f	Laev;	j	FOOD_AND_DRINKS
	f	Laev;	k	INGREDIENTS
	f	Laev;	l	SPAWN_EGGS
	f	Laev;	m	OP_BLOCKS
	f	Laev;	n	INVENTORY
	f	Ljava/util/Comparator;	o	PAINTING_COMPARATOR
	f	Lchl$d;	p	CACHED_PARAMETERS
c	chn	net/minecraft/world/item/CrossbowItem
	m	(Lcja$a;)V	<init>	<init>
		p	1		settings
	m	(I)Lapc;	a	getStartSound
		p	1		stage
	m	(ILcjf;)F	a	getPowerForTime
		p	0		useTicks
		p	1		stack
	m	(Lasc;)[F	a	getShotPitches
		p	0		random
	m	(Lbgx;Lbjg;)V	a	lambda$shootProjectile$1
		p	1		e
	m	(Lbjg;Lcjf;)Z	a	tryLoadProjectiles
		p	0		shooter
		p	1		crossbow
	m	(Lbjg;Lcjf;Lcjf;ZZ)Z	a	loadProjectile
		p	0		shooter
		p	1		crossbow
		p	2		projectile
		p	3		simulated
		p	4		creative
	m	(Lcja;Lcjf;)Z	a	lambda$containsChargedProjectile$0
		p	1		s
	m	(Lcjf;Lcja;)Z	a	containsChargedProjectile
		p	0		crossbow
		p	1		projectile
	m	(Lcjf;Lcpv;Lbjg;I)V	a	releaseUsing
		p	1		stack
		p	2		world
		p	3		user
		p	4		remainingUseTicks
	m	(Lcjf;Lcpv;Ljava/util/List;Lckw;)V	a	appendHoverText
		p	1		stack
		p	2		world
		p	3		tooltip
		p	4		context
	m	(Lcjf;Z)V	a	setCharged
		p	0		stack
		p	1		charged
	m	(Lcpv;Lbjg;Lbgx;Lcjf;FF)V	a	performShooting
		p	0		world
		p	1		entity
		p	2		hand
		p	3		stack
		p	4		speed
		p	5		divergence
	m	(Lcpv;Lbjg;Lbgx;Lcjf;Lcjf;FZFFF)V	a	shootProjectile
		p	0		world
		p	1		shooter
		p	2		hand
		p	3		crossbow
		p	4		projectile
		p	5		soundPitch
		p	6		creative
		p	7		speed
		p	8		divergence
		p	9		simulated
	m	(Lcpv;Lbjg;Lcjf;)V	a	onCrossbowShot
		p	0		world
		p	1		entity
		p	2		stack
	m	(Lcpv;Lbjg;Lcjf;I)V	a	onUseTick
		p	1		world
		p	2		user
		p	3		stack
		p	4		remainingUseTicks
	m	(Lcpv;Lbjg;Lcjf;Lcjf;)Lcca;	a	getArrow
		p	0		world
		p	1		entity
		p	2		crossbow
		p	3		arrow
	m	(Lcpv;Lcbu;Lbgx;)Lbgz;	a	use
		p	1		world
		p	2		user
		p	3		hand
	m	(ZLasc;)F	a	getRandomShotPitch
		p	0		flag
		p	1		random
	m	()Ljava/util/function/Predicate;	b	getAllSupportedProjectiles
	m	(Lcjf;)I	b	getUseDuration
		p	1		stack
	m	(Lcjf;Lcjf;)V	b	addChargedProjectile
		p	0		crossbow
		p	1		projectile
	m	(Lcjf;)Lcky;	c	getUseAnimation
		p	1		stack
	m	()I	d	getDefaultProjectileRange
	m	(Lcjf;)Z	d	isCharged
		p	0		stack
	m	()Ljava/util/function/Predicate;	e	getSupportedHeldProjectiles
	m	(Lcjf;)I	k	getChargeDuration
		p	0		stack
	m	(Lcjf;)Z	l	useOnRelease
		p	1		stack
	m	(Lcjf;)F	o	getShootingPower
		p	0		stack
	m	(Lcjf;)Ljava/util/List;	p	getChargedProjectiles
		p	0		crossbow
	m	(Lcjf;)V	q	clearChargedProjectiles
		p	0		crossbow
	f	I	a	DEFAULT_RANGE
	f	Ljava/lang/String;	b	TAG_CHARGED
	f	Ljava/lang/String;	e	TAG_CHARGED_PROJECTILES
	f	I	f	MAX_CHARGE_DURATION
	f	Z	g	startSoundPlayed
	f	Z	h	midLoadSoundPlayed
	f	F	i	START_SOUND_PERCENT
	f	F	j	MID_SOUND_PERCENT
	f	F	k	ARROW_POWER
	f	F	r	FIREWORK_POWER
c	cho	net/minecraft/world/item/DebugStickItem
	m	(Lcja$a;)V	<init>	<init>
		p	1		settings
	m	(Lcbu;Ldfj;Lcpw;Lgw;ZLcjf;)Z	a	handleInteraction
		p	1		player
		p	2		state
		p	3		world
		p	4		pos
		p	5		update
		p	6		stack
	m	(Lcbu;Ltl;)V	a	message
		p	0		player
		p	1		message
	m	(Lclp;)Lbgy;	a	useOn
		p	1		context
	m	(Ldfj;Lcpv;Lgw;Lcbu;)Z	a	canAttackBlock
		p	1		state
		p	2		world
		p	3		pos
		p	4		miner
	m	(Ldfj;Ldgm;)Ljava/lang/String;	a	getNameHelper
		p	0		state
		p	1		property
	m	(Ldfj;Ldgm;Z)Ldfj;	a	cycleState
		p	0		state
		p	1		property
		p	2		inverse
	m	(Ljava/lang/Iterable;Ljava/lang/Object;Z)Ljava/lang/Object;	a	getRelative
		p	0		elements
		p	1		current
		p	2		inverse
	m	(Lcjf;)Z	i	isFoil
		p	1		stack
c	chp	net/minecraft/world/item/DiggerItem
	m	(FFLcks;Laqh;Lcja$a;)V	<init>	<init>
		p	1		attackDamage
		p	2		attackSpeed
		p	3		material
		p	4		effectiveBlocks
		p	5		settings
	m	(Lbiv;)Lcom/google/common/collect/Multimap;	a	getDefaultAttributeModifiers
		p	1		slot
	m	(Lbjg;)V	a	lambda$mineBlock$1
		p	0		e
	m	(Lcjf;Lbjg;Lbjg;)Z	a	hurtEnemy
		p	1		stack
		p	2		target
		p	3		attacker
	m	(Lcjf;Lcpv;Ldfj;Lgw;Lbjg;)Z	a	mineBlock
		p	1		stack
		p	2		world
		p	3		state
		p	4		pos
		p	5		miner
	m	(Lcjf;Ldfj;)F	a	getDestroySpeed
		p	1		stack
		p	2		state
	m	(Ldfj;)Z	a_	isCorrectToolForDrops
		p	1		state
	m	(Lbjg;)V	b	lambda$hurtEnemy$0
		p	0		e
	m	()F	d	getAttackDamage
	f	Laqh;	a	blocks
	f	F	b	speed
	f	F	c	attackDamageBaseline
	f	Lcom/google/common/collect/Multimap;	d	defaultModifiers
c	chq	net/minecraft/world/item/DiscFragmentItem
	m	(Lcja$a;)V	<init>	<init>
		p	1		settings
	m	(Lcjf;Lcpv;Ljava/util/List;Lckw;)V	a	appendHoverText
		p	1		stack
		p	2		world
		p	3		tooltip
		p	4		context
	m	()Lty;	d	getDisplayName
c	chr	net/minecraft/world/item/DispensibleContainerItem
	m	(Lcbu;Lcpv;Lcjf;Lgw;)V	a	checkExtraContent
		p	1		player
		p	2		world
		p	3		stack
		p	4		pos
	m	(Lcbu;Lcpv;Lgw;Lehj;)Z	a	emptyContents
		p	1		player
		p	2		world
		p	3		pos
		p	4		hitResult
c	chs	net/minecraft/world/item/DoubleHighBlockItem
	m	(Lcsv;Lcja$a;)V	<init>	<init>
		p	1		block
		p	2		settings
	m	(Lcln;Ldfj;)Z	a	placeBlock
		p	1		context
		p	2		state
c	cht	net/minecraft/world/item/DyeColor
	m	(Ljava/lang/String;IILjava/lang/String;ILeaq;II)V	<init>	<init>
		p	3		id
		p	4		name
		p	5		color
		p	6		mapColor
		p	7		fireworkColor
		p	8		signColor
	m	()I	a	getId
	m	(I)Lcht;	a	byId
		p	0		id
	m	(Lcht;)Lcht;	a	lambda$static$1
		p	0		color
	m	(Ljava/lang/String;Lcht;)Lcht;	a	byName
		p	0		name
		p	1		defaultColor
	m	()Ljava/lang/String;	b	getName
	m	(I)Lcht;	b	byFireworkColor
		p	0		color
	m	(Lcht;)Ljava/lang/Integer;	b	lambda$static$0
		p	0		color
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[F	d	getTextureDiffuseColors
	m	()Leaq;	e	getMapColor
	m	()I	f	getFireworkColor
	m	()I	g	getTextColor
	m	()[Lcht;	h	$values
	f	Lcht;	a	WHITE
	f	Lcht;	b	ORANGE
	f	Lcht;	c	MAGENTA
	f	Lcht;	d	LIGHT_BLUE
	f	Lcht;	e	YELLOW
	f	Lcht;	f	LIME
	f	Lcht;	g	PINK
	f	Lcht;	h	GRAY
	f	Lcht;	i	LIGHT_GRAY
	f	Lcht;	j	CYAN
	f	Lcht;	k	PURPLE
	f	Lcht;	l	BLUE
	f	Lcht;	m	BROWN
	f	Lcht;	n	GREEN
	f	Lcht;	o	RED
	f	Lcht;	p	BLACK
	f	Lasp$a;	q	CODEC
	f	Ljava/util/function/IntFunction;	r	BY_ID
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectOpenHashMap;	s	BY_FIREWORK_COLOR
	f	I	t	id
	f	Ljava/lang/String;	u	name
	f	Leaq;	v	mapColor
	f	[F	w	textureDiffuseColors
	f	I	x	fireworkColor
	f	I	y	textColor
	f	[Lcht;	z	$VALUES
c	chu	net/minecraft/world/item/DyeItem
	m	(Lcht;Lcja$a;)V	<init>	<init>
		p	1		color
		p	2		settings
	m	(Lcht;)Lchu;	a	byColor
		p	0		color
	m	(Lcjf;Lcbu;Lbjg;Lbgx;)Lbgy;	a	interactLivingEntity
		p	1		stack
		p	2		user
		p	3		entity
		p	4		hand
	m	(Lcpv;Lded;ZLcbu;)Z	a	tryApplyToSign
		p	1		world
		p	2		signBlockEntity
		p	3		front
		p	4		player
	m	(Ldee;)Ldee;	a	lambda$tryApplyToSign$0
		p	1		text
	m	()Lcht;	d	getDyeColor
	f	Ljava/util/Map;	a	ITEM_BY_COLOR
	f	Lcht;	b	dyeColor
c	chv	net/minecraft/world/item/DyeableArmorItem
	m	(Lcgq;Lcgp$a;Lcja$a;)V	<init>	<init>
		p	1		material
		p	2		type
		p	3		settings
c	chw	net/minecraft/world/item/DyeableHorseArmorItem
	m	(ILjava/lang/String;Lcja$a;)V	<init>	<init>
		p	1		bonus
		p	2		name
		p	3		settings
c	chx	net/minecraft/world/item/DyeableLeatherItem
	m	(Lcjf;)Z	a	hasCustomColor
		p	1		stack
	m	(Lcjf;I)V	a	setColor
		p	1		stack
		p	2		color
	m	(Lcjf;Ljava/util/List;)Lcjf;	a	dyeArmor
		p	0		stack
		p	1		colors
	m	(Lcjf;)I	e_	getColor
		p	1		stack
	m	(Lcjf;)V	f_	clearColor
		p	1		stack
	f	Ljava/lang/String;	o_	TAG_COLOR
	f	Ljava/lang/String;	p_	TAG_DISPLAY
	f	I	q_	DEFAULT_LEATHER_COLOR
c	chy	net/minecraft/world/item/EggItem
	m	(Lcja$a;)V	<init>	<init>
		p	1		settings
	m	(Lcpv;Lcbu;Lbgx;)Lbgz;	a	use
		p	1		world
		p	2		user
		p	3		hand
c	chz	net/minecraft/world/item/ElytraItem
	m	(Lcja$a;)V	<init>	<init>
		p	1		settings
	m	(Lcjf;Lcjf;)Z	a	isValidRepairItem
		p	1		stack
		p	2		ingredient
	m	(Lcpv;Lcbu;Lbgx;)Lbgz;	a	use
		p	1		world
		p	2		user
		p	3		hand
	m	()Lapc;	ao_	getEquipSound
	m	(Lcjf;)Z	d	isFlyEnabled
		p	0		stack
	m	()Lbiv;	g	getEquipmentSlot
c	cia	net/minecraft/world/item/EmptyMapItem
	m	(Lcja$a;)V	<init>	<init>
		p	1		settings
	m	(Lcpv;Lcbu;Lbgx;)Lbgz;	a	use
		p	1		world
		p	2		user
		p	3		hand
c	cib	net/minecraft/world/item/EnchantedBookItem
	m	(Lcja$a;)V	<init>	<init>
		p	1		settings
	m	(Lcjf;Lcnr;)V	a	addEnchantment
		p	0		stack
		p	1		entry
	m	(Lcjf;Lcpv;Ljava/util/List;Lckw;)V	a	appendHoverText
		p	1		stack
		p	2		world
		p	3		tooltip
		p	4		context
	m	(Lcnr;)Lcjf;	a	createForEnchantment
		p	0		info
	m	(Lcjf;)Lrc;	d	getEnchantments
		p	0		stack
	m	(Lcjf;)Z	d_	isEnchantable
		p	1		stack
	m	(Lcjf;)Z	i	isFoil
		p	1		stack
	f	Ljava/lang/String;	a	TAG_STORED_ENCHANTMENTS
c	cic	net/minecraft/world/item/EnchantedGoldenAppleItem
	m	(Lcja$a;)V	<init>	<init>
		p	1		settings
	m	(Lcjf;)Z	i	isFoil
		p	1		stack
c	cid	net/minecraft/world/item/EndCrystalItem
	m	(Lcja$a;)V	<init>	<init>
		p	1		settings
	m	(Lclp;)Lbgy;	a	useOn
		p	1		context
	m	(Lcjf;)Z	i	isFoil
		p	1		stack
c	cie	net/minecraft/world/item/EnderEyeItem
	m	(Lcja$a;)V	<init>	<init>
		p	1		settings
	m	(Lclp;)Lbgy;	a	useOn
		p	1		context
	m	(Lcpv;Lcbu;Lbgx;)Lbgz;	a	use
		p	1		world
		p	2		user
		p	3		hand
c	cif	net/minecraft/world/item/EnderpearlItem
	m	(Lcja$a;)V	<init>	<init>
		p	1		settings
	m	(Lcpv;Lcbu;Lbgx;)Lbgz;	a	use
		p	1		world
		p	2		user
		p	3		hand
c	cig	net/minecraft/world/item/Equipable
	m	(Lcja;Lcpv;Lcbu;Lbgx;)Lbgz;	a	swapWithEquipmentSlot
		p	1		item
		p	2		world
		p	3		user
		p	4		hand
	m	()Lapc;	ao_	getEquipSound
	m	(Lcjf;)Lcig;	c_	get
		p	0		stack
	m	()Lbiv;	g	getEquipmentSlot
c	cih	net/minecraft/world/item/ExperienceBottleItem
	m	(Lcja$a;)V	<init>	<init>
		p	1		settings
	m	(Lcpv;Lcbu;Lbgx;)Lbgz;	a	use
		p	1		world
		p	2		user
		p	3		hand
	m	(Lcjf;)Z	i	isFoil
		p	1		stack
c	cii	net/minecraft/world/item/FireChargeItem
	m	(Lcja$a;)V	<init>	<init>
		p	1		settings
	m	(Lclp;)Lbgy;	a	useOn
		p	1		context
	m	(Lcpv;Lgw;)V	a	playSound
		p	1		world
		p	2		pos
c	cij	net/minecraft/world/item/FireworkRocketItem
	m	(Lcja$a;)V	<init>	<init>
		p	1		settings
	m	(Lcjf;B)V	a	setDuration
		p	0		stack
		p	1		flight
	m	(Lcjf;Lcpv;Ljava/util/List;Lckw;)V	a	appendHoverText
		p	1		stack
		p	2		world
		p	3		tooltip
		p	4		context
	m	(Lclp;)Lbgy;	a	useOn
		p	1		context
	m	(Lcpv;Lcbu;Lbgx;)Lbgz;	a	use
		p	1		world
		p	2		user
		p	3		hand
	m	()Lcjf;	ai_	getDefaultInstance
	f	[B	a	CRAFTABLE_DURATIONS
	f	Ljava/lang/String;	b	TAG_FIREWORKS
	f	Ljava/lang/String;	c	TAG_EXPLOSION
	f	Ljava/lang/String;	d	TAG_EXPLOSIONS
	f	Ljava/lang/String;	e	TAG_FLIGHT
	f	Ljava/lang/String;	f	TAG_EXPLOSION_TYPE
	f	Ljava/lang/String;	g	TAG_EXPLOSION_TRAIL
	f	Ljava/lang/String;	h	TAG_EXPLOSION_FLICKER
	f	Ljava/lang/String;	i	TAG_EXPLOSION_COLORS
	f	Ljava/lang/String;	j	TAG_EXPLOSION_FADECOLORS
	f	D	k	ROCKET_PLACEMENT_OFFSET
c	cij$a	net/minecraft/world/item/FireworkRocketItem$Shape
	m	(Ljava/lang/String;IILjava/lang/String;)V	<init>	<init>
		p	3		id
		p	4		name
	m	()I	a	getId
	m	(I)Lcij$a;	a	byId
		p	0		id
	m	()Ljava/lang/String;	b	getName
	m	()[Lcij$a;	c	$values
	f	Lcij$a;	a	SMALL_BALL
	f	Lcij$a;	b	LARGE_BALL
	f	Lcij$a;	c	STAR
	f	Lcij$a;	d	CREEPER
	f	Lcij$a;	e	BURST
	f	Ljava/util/function/IntFunction;	f	BY_ID
	f	I	g	id
	f	Ljava/lang/String;	h	name
	f	[Lcij$a;	i	$VALUES
c	cik	net/minecraft/world/item/FireworkStarItem
	m	(Lcja$a;)V	<init>	<init>
		p	1		settings
	m	(I)Ltl;	a	getColorName
		p	0		color
	m	(Lcjf;Lcpv;Ljava/util/List;Lckw;)V	a	appendHoverText
		p	1		stack
		p	2		world
		p	3		tooltip
		p	4		context
	m	(Lqw;Ljava/util/List;)V	a	appendHoverText
		p	0		nbt
		p	1		tooltip
	m	(Lty;[I)Ltl;	a	appendColors
		p	0		line
		p	1		colors
c	cil	net/minecraft/world/item/FishingRodItem
	m	(Lcja$a;)V	<init>	<init>
		p	1		settings
	m	(Lbgx;Lcbu;)V	a	lambda$use$0
		p	1		p
	m	(Lcpv;Lcbu;Lbgx;)Lbgz;	a	use
		p	1		world
		p	2		user
		p	3		hand
	m	()I	c	getEnchantmentValue
c	cim	net/minecraft/world/item/FlintAndSteelItem
	m	(Lcja$a;)V	<init>	<init>
		p	1		settings
	m	(Lclp;)Lbgy;	a	useOn
		p	1		context
	m	(Lclp;Lcbu;)V	a	lambda$useOn$1
		p	1		p
	m	(Lclp;Lcbu;)V	b	lambda$useOn$0
		p	1		p
c	cin	net/minecraft/world/item/FoodOnAStickItem
	m	(Lcja$a;Lbiu;I)V	<init>	<init>
		p	1		settings
		p	2		target
		p	3		damagePerUse
	m	(Lbgx;Lcbu;)V	a	lambda$use$0
		p	1		p
	m	(Lcpv;Lcbu;Lbgx;)Lbgz;	a	use
		p	1		world
		p	2		user
		p	3		hand
	f	Lbiu;	a	canInteractWith
	f	I	b	consumeItemDamage
c	cio	net/minecraft/world/item/GameMasterBlockItem
	m	(Lcsv;Lcja$a;)V	<init>	<init>
		p	1		block
		p	2		settings
	m	(Lcln;)Ldfj;	c	getPlacementState
		p	1		context
c	cip	net/minecraft/world/item/GlowInkSacItem
	m	(Lcja$a;)V	<init>	<init>
		p	1		settings
	m	(Lcpv;Lded;ZLcbu;)Z	a	tryApplyToSign
		p	1		world
		p	2		signBlockEntity
		p	3		front
		p	4		player
	m	(Ldee;)Ldee;	a	lambda$tryApplyToSign$0
		p	0		text
c	ciq	net/minecraft/world/item/HangingEntityItem
	m	(Lbiu;Lcja$a;)V	<init>	<init>
		p	1		type
		p	2		settings
	m	(Lcbu;Lha;Lcjf;Lgw;)Z	a	mayPlace
		p	1		player
		p	2		side
		p	3		stack
		p	4		pos
	m	(Lcjf;Lcpv;Ljava/util/List;Lckw;)V	a	appendHoverText
		p	1		stack
		p	2		world
		p	3		tooltip
		p	4		context
	m	(Lclp;)Lbgy;	a	useOn
		p	1		context
	m	(Ljava/util/List;)V	a	lambda$appendHoverText$2
	m	(Ljava/util/List;Laev;)V	a	lambda$appendHoverText$0
		p	1		key
	m	(Ljava/util/List;Lhe;)V	a	lambda$appendHoverText$1
		p	1		variant
	f	Ltl;	a	TOOLTIP_RANDOM_VARIANT
	f	Lbiu;	b	type
c	cir	net/minecraft/world/item/HangingSignItem
	m	(Lcsv;Lcsv;Lcja$a;)V	<init>	<init>
		p	1		hangingSign
		p	2		wallHangingSign
		p	3		settings
	m	(Lcpy;Ldfj;Lgw;)Z	a	canPlace
		p	1		world
		p	2		state
		p	3		pos
c	cis	net/minecraft/world/item/HoeItem
	m	(Lcks;IFLcja$a;)V	<init>	<init>
		p	1		material
		p	2		attackDamage
		p	3		attackSpeed
		p	4		settings
	m	(Lclp;)Lbgy;	a	useOn
		p	1		context
	m	(Lclp;Lcbu;)V	a	lambda$useOn$1
		p	1		p
	m	(Ldfj;Lclp;)V	a	lambda$changeIntoState$2
		p	1		context
	m	(Ldfj;Lcpu;)Ljava/util/function/Consumer;	a	changeIntoStateAndDropItem
		p	0		result
		p	1		droppedItem
	m	(Ldfj;Lcpu;Lclp;)V	a	lambda$changeIntoStateAndDropItem$3
		p	2		context
	m	(Lclp;)Z	b	onlyIfAirAbove
		p	0		context
	m	(Ldfj;)Ljava/util/function/Consumer;	b	changeIntoState
		p	0		result
	m	(Lclp;)Z	c	lambda$static$0
	f	Ljava/util/Map;	a	TILLABLES
c	cit	net/minecraft/world/item/HoneyBottleItem
	m	(Lcja$a;)V	<init>	<init>
		p	1		settings
	m	(Lcjf;Lcpv;Lbjg;)Lcjf;	a	finishUsingItem
		p	1		stack
		p	2		world
		p	3		user
	m	(Lcpv;Lcbu;Lbgx;)Lbgz;	a	use
		p	1		world
		p	2		user
		p	3		hand
	m	()Lapc;	aj_	getDrinkingSound
	m	()Lapc;	ak_	getEatingSound
	m	(Lcjf;)I	b	getUseDuration
		p	1		stack
	m	(Lcjf;)Lcky;	c	getUseAnimation
		p	1		stack
	f	I	a	DRINK_DURATION
c	ciu	net/minecraft/world/item/HoneycombItem
	m	(Lcja$a;)V	<init>	<init>
		p	1		settings
	m	(Lclp;)Lbgy;	a	useOn
		p	1		context
	m	(Lclp;Lgw;Lcpv;Ldfj;)Lbgy;	a	lambda$useOn$2
		p	3		state
	m	(Lcpv;Lded;ZLcbu;)Z	a	tryApplyToSign
		p	1		world
		p	2		signBlockEntity
		p	3		front
		p	4		player
	m	(Ldee;Lcbu;)Z	a	canApplyToSign
		p	1		signText
		p	2		player
	m	(Ldfj;Lcsv;)Ldfj;	a	lambda$getWaxed$3
		p	1		block
	m	(Ldfj;)Ljava/util/Optional;	b	getWaxed
		p	0		state
	m	()Lcom/google/common/collect/BiMap;	h	lambda$static$1
	m	()Lcom/google/common/collect/BiMap;	i	lambda$static$0
	f	Ljava/util/function/Supplier;	a	WAXABLES
	f	Ljava/util/function/Supplier;	b	WAX_OFF_BY_BLOCK
c	civ	net/minecraft/world/item/HorseArmorItem
	m	(ILjava/lang/String;Lcja$a;)V	<init>	<init>
		p	1		bonus
		p	2		name
		p	3		settings
	m	()Laew;	h	getTexture
	m	()I	i	getProtection
	f	Ljava/lang/String;	a	TEX_FOLDER
	f	I	b	protection
	f	Ljava/lang/String;	c	texture
c	ciw	net/minecraft/world/item/InkSacItem
	m	(Lcja$a;)V	<init>	<init>
		p	1		settings
	m	(Lcpv;Lded;ZLcbu;)Z	a	tryApplyToSign
		p	1		world
		p	2		signBlockEntity
		p	3		front
		p	4		player
	m	(Ldee;)Ldee;	a	lambda$tryApplyToSign$0
		p	0		text
c	cix	net/minecraft/world/item/Instrument
	m	()Lhe;	a	soundEvent
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()I	b	useDuration
	m	()F	c	range
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lhe;	b	soundEvent
	f	I	c	useDuration
	f	F	d	range
c	ciy	net/minecraft/world/item/InstrumentItem
	m	(Lcja$a;Laqh;)V	<init>	<init>
		p	1		settings
		p	2		instrumentTag
	m	(Lasc;Lhi$c;)Ljava/util/Optional;	a	lambda$setRandom$0
		p	1		entryList
	m	(Lcja;Lhe;)Lcjf;	a	create
		p	0		item
		p	1		instrument
	m	(Lcjf;Laqh;Lasc;)V	a	setRandom
		p	0		stack
		p	1		instrumentTag
		p	2		random
	m	(Lcjf;Lcpv;Ljava/util/List;Lckw;)V	a	appendHoverText
		p	1		stack
		p	2		world
		p	3		tooltip
		p	4		context
	m	(Lcjf;Lhe;)V	a	setSoundVariantId
		p	0		stack
		p	1		instrument
	m	(Lcpv;Lcbu;Lbgx;)Lbgz;	a	use
		p	1		world
		p	2		user
		p	3		hand
	m	(Lcpv;Lcbu;Lcix;)V	a	play
		p	0		world
		p	1		player
		p	2		instrument
	m	(Lhe;)Ljava/lang/Integer;	a	lambda$getUseDuration$3
		p	0		instrument
	m	(Lcjf;)I	b	getUseDuration
		p	1		stack
	m	(Lcjf;Lhe;)V	b	lambda$setRandom$1
		p	1		instrument
	m	(Lcjf;)Lcky;	c	getUseAnimation
		p	1		stack
	m	(Lcjf;)Ljava/util/Optional;	d	getInstrument
		p	1		stack
	m	()Ljava/lang/IllegalStateException;	h	lambda$setSoundVariantId$2
	f	Ljava/lang/String;	a	TAG_INSTRUMENT
	f	Laqh;	b	instruments
c	ciz	net/minecraft/world/item/Instruments
	m	(Lhq;)Lcix;	a	bootstrap
		p	0		registry
	m	(Ljava/lang/String;)Laev;	a	create
		p	0		id
	f	I	a	GOAT_HORN_RANGE_BLOCKS
	f	I	b	GOAT_HORN_DURATION
	f	Laev;	c	PONDER_GOAT_HORN
	f	Laev;	d	SING_GOAT_HORN
	f	Laev;	e	SEEK_GOAT_HORN
	f	Laev;	f	FEEL_GOAT_HORN
	f	Laev;	g	ADMIRE_GOAT_HORN
	f	Laev;	h	CALL_GOAT_HORN
	f	Laev;	i	YEARN_GOAT_HORN
	f	Laev;	j	DREAM_GOAT_HORN
c	cja	net/minecraft/world/item/Item
	m	(Lcja$a;)V	<init>	<init>
		p	1		settings
	m	()Ljava/lang/String;	a	getDescriptionId
	m	(Lbho;)Z	a	canBeHurtBy
		p	1		source
	m	(Lbiv;)Lcom/google/common/collect/Multimap;	a	getDefaultAttributeModifiers
		p	1		slot
	m	(Lbyn;)V	a	onDestroyed
		p	1		entity
	m	(Lcja;)I	a	getId
		p	0		item
	m	(Lcjf;Lbjg;Lbjg;)Z	a	hurtEnemy
		p	1		stack
		p	2		target
		p	3		attacker
	m	(Lcjf;Lcbu;Lbjg;Lbgx;)Lbgy;	a	interactLivingEntity
		p	1		stack
		p	2		user
		p	3		entity
		p	4		hand
	m	(Lcjf;Lcgd;Lcet;Lcbu;)Z	a	overrideStackedOnOther
		p	1		stack
		p	2		slot
		p	3		clickType
		p	4		player
	m	(Lcjf;Lcjf;)Z	a	isValidRepairItem
		p	1		stack
		p	2		ingredient
	m	(Lcjf;Lcjf;Lcgd;Lcet;Lcbu;Lbjy;)Z	a	overrideOtherStackedOnMe
		p	1		stack
		p	2		otherStack
		p	3		slot
		p	4		clickType
		p	5		player
		p	6		cursorStackReference
	m	(Lcjf;Lcpv;Lbiq;IZ)V	a	inventoryTick
		p	1		stack
		p	2		world
		p	3		entity
		p	4		slot
		p	5		selected
	m	(Lcjf;Lcpv;Lbjg;)Lcjf;	a	finishUsingItem
		p	1		stack
		p	2		world
		p	3		user
	m	(Lcjf;Lcpv;Lbjg;I)V	a	releaseUsing
		p	1		stack
		p	2		world
		p	3		user
		p	4		remainingUseTicks
	m	(Lcjf;Lcpv;Ldfj;Lgw;Lbjg;)Z	a	mineBlock
		p	1		stack
		p	2		world
		p	3		state
		p	4		pos
		p	5		miner
	m	(Lcjf;Lcpv;Ljava/util/List;Lckw;)V	a	appendHoverText
		p	1		stack
		p	2		world
		p	3		tooltip
		p	4		context
	m	(Lcjf;Ldfj;)F	a	getDestroySpeed
		p	1		stack
		p	2		state
	m	(Lclp;)Lbgy;	a	useOn
		p	1		context
	m	(Lcpv;Lbjg;Lcjf;I)V	a	onUseTick
		p	1		world
		p	2		user
		p	3		stack
		p	4		remainingUseTicks
	m	(Lcpv;Lcbu;Lbgx;)Lbgz;	a	use
		p	1		world
		p	2		user
		p	3		hand
	m	(Lcpv;Lcbu;Lcpe$b;)Lehj;	a	getPlayerPOVHitResult
		p	0		world
		p	1		player
		p	2		fluidHandling
	m	(Lcsv;)Lcja;	a	byBlock
		p	0		block
	m	(Ldfj;Lcpv;Lgw;Lcbu;)Z	a	canAttackBlock
		p	1		state
		p	2		world
		p	3		pos
		p	4		miner
	m	(Ldfj;)Z	a_	isCorrectToolForDrops
		p	1		state
	m	()Z	ah_	isComplex
	m	()Lcjf;	ai_	getDefaultInstance
	m	()Lapc;	aj_	getDrinkingSound
	m	()Lapc;	ak_	getEatingSound
	m	()Z	al_	canFitInsideContainerItems
	m	(I)Lcja;	b	byId
		p	0		id
	m	(Lcjf;)I	b	getUseDuration
		p	1		stack
	m	(Lcjf;Lcpv;Lcbu;)V	b	onCraftedBy
		p	1		stack
		p	2		world
		p	3		player
	m	(Lqw;)V	b	verifyTagAfterLoad
		p	1		nbt
	m	()I	c	getEnchantmentValue
	m	(Lcjf;)Lcky;	c	getUseAnimation
		p	1		stack
	m	(Lcjf;)Z	d_	isEnchantable
		p	1		stack
	m	(Lcjf;)Z	e	isBarVisible
		p	1		stack
	m	(Lcjf;)I	f	getBarWidth
		p	1		stack
	m	(Lcjf;)I	g	getBarColor
		p	1		stack
	m	(Lcjf;)Ljava/util/Optional;	h	getTooltipImage
		p	1		stack
	m	(Lcjf;)Z	i	isFoil
		p	1		stack
	m	()Lhe$c;	j	builtInRegistryHolder
	m	(Lcjf;)Ljava/lang/String;	j	getDescriptionId
		p	1		stack
	m	()Lcja;	k	asItem
	m	()I	l	getMaxStackSize
	m	(Lcjf;)Z	l	useOnRelease
		p	1		stack
	m	()Lcec;	m	requiredFeatures
	m	(Lcjf;)Ltl;	m	getName
		p	1		stack
	m	()I	n	getMaxDamage
	m	(Lcjf;)Lcjw;	n	getRarity
		p	1		stack
	m	()Z	o	canBeDepleted
	m	()Ltl;	p	getDescription
	m	()Ljava/lang/String;	q	getOrCreateDescriptionId
	m	()Z	r	shouldOverrideMultiplayerNbt
	m	()Lcja;	s	getCraftingRemainingItem
	m	()Z	t	hasCraftingRemainingItem
	m	()Z	u	isEdible
	m	()Lcei;	v	getFoodProperties
	m	()Z	w	isFireResistant
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lhe$c;	b	builtInRegistryHolder
	f	Lcjw;	c	rarity
	f	I	d	maxStackSize
	f	I	e	maxDamage
	f	Z	f	isFireResistant
	f	Lcja;	g	craftingRemainingItem
	f	Ljava/lang/String;	h	descriptionId
	f	Lcei;	i	foodProperties
	f	Lcec;	j	requiredFeatures
	f	Ljava/util/Map;	l	BY_BLOCK
	f	Ljava/util/UUID;	m	BASE_ATTACK_DAMAGE_UUID
	f	Ljava/util/UUID;	n	BASE_ATTACK_SPEED_UUID
	f	I	o	MAX_STACK_SIZE
	f	I	p	EAT_DURATION
	f	I	q	MAX_BAR_WIDTH
c	cja$1	net/minecraft/world/item/Item$1
	f	[I	a	$SwitchMap$net$minecraft$world$item$Rarity
c	cja$a	net/minecraft/world/item/Item$Properties
	m	()Lcja$a;	a	fireResistant
	m	(I)Lcja$a;	a	stacksTo
		p	1		maxCount
	m	(Lcei;)Lcja$a;	a	food
		p	1		foodComponent
	m	(Lcja;)Lcja$a;	a	craftRemainder
		p	1		recipeRemainder
	m	(Lcjw;)Lcja$a;	a	rarity
		p	1		rarity
	m	([Lcea;)Lcja$a;	a	requiredFeatures
		p	1		features
	m	(I)Lcja$a;	b	defaultDurability
		p	1		maxDamage
	m	(I)Lcja$a;	c	durability
		p	1		maxDamage
	f	I	a	maxStackSize
	f	I	b	maxDamage
	f	Lcja;	c	craftingRemainingItem
	f	Lcjw;	d	rarity
	f	Lcei;	e	foodProperties
	f	Z	f	isFireResistant
	f	Lcec;	g	requiredFeatures
c	cjb	net/minecraft/world/item/ItemCooldowns
	m	()V	a	tick
	m	(Lcja;)Z	a	isOnCooldown
		p	1		item
	m	(Lcja;F)F	a	getCooldownPercent
		p	1		item
		p	2		tickDelta
	m	(Lcja;I)V	a	addCooldown
		p	1		item
		p	2		duration
	m	(Lcja;)V	b	removeCooldown
		p	1		item
	m	(Lcja;I)V	b	onCooldownStarted
		p	1		item
		p	2		duration
	m	(Lcja;)V	c	onCooldownEnded
		p	1		item
	f	Ljava/util/Map;	a	cooldowns
	f	I	b	tickCount
c	cjb$a	net/minecraft/world/item/ItemCooldowns$CooldownInstance
	m	(II)V	<init>	<init>
		p	1		startTick
		p	2		endTick
	f	I	a	startTime
	f	I	b	endTime
c	cjc	net/minecraft/world/item/ItemDisplayContext
	m	(Ljava/lang/String;IILjava/lang/String;)V	<init>	<init>
		p	3		index
		p	4		name
	m	()B	a	getId
	m	()Z	b	firstPerson
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Lcjc;	d	$values
	f	Lcjc;	a	NONE
	f	Lcjc;	b	THIRD_PERSON_LEFT_HAND
	f	Lcjc;	c	THIRD_PERSON_RIGHT_HAND
	f	Lcjc;	d	FIRST_PERSON_LEFT_HAND
	f	Lcjc;	e	FIRST_PERSON_RIGHT_HAND
	f	Lcjc;	f	HEAD
	f	Lcjc;	g	GUI
	f	Lcjc;	h	GROUND
	f	Lcjc;	i	FIXED
	f	Lcom/mojang/serialization/Codec;	j	CODEC
	f	Ljava/util/function/IntFunction;	k	BY_ID
	f	B	l	id
	f	Ljava/lang/String;	m	name
	f	[Lcjc;	n	$VALUES
c	cjd	net/minecraft/world/item/ItemFrameItem
	m	(Lbiu;Lcja$a;)V	<init>	<init>
		p	1		type
		p	2		settings
	m	(Lcbu;Lha;Lcjf;Lgw;)Z	a	mayPlace
		p	1		player
		p	2		side
		p	3		stack
		p	4		pos
c	cje	net/minecraft/world/item/ItemNameBlockItem
	m	(Lcsv;Lcja$a;)V	<init>	<init>
		p	1		block
		p	2		settings
	m	()Ljava/lang/String;	a	getDescriptionId
c	cjf	net/minecraft/world/item/ItemStack
	m	(Lcpu;)V	<init>	<init>
		p	1		item
	m	(Lcpu;I)V	<init>	<init>
		p	1		item
		p	2		count
	m	(Lcpu;ILjava/util/Optional;)V	<init>	<init>
		p	1		item
		p	2		count
		p	3		nbt
	m	(Lhe;)V	<init>	<init>
		p	1		entry
	m	(Lhe;I)V	<init>	<init>
		p	1		itemEntry
		p	2		count
	m	(Lqw;)V	<init>	<init>
		p	1		nbt
	m	()Z	A	hasCustomHoverName
	m	()Z	B	hasFoil
	m	()Lcjw;	C	getRarity
	m	()Z	D	isEnchantable
	m	()Z	E	isEnchanted
	m	()Z	F	isFramed
	m	()Lbyg;	G	getFrame
	m	()Lbiq;	H	getEntityRepresentation
	m	()I	I	getBaseRepairCost
	m	()Ltl;	J	getDisplayName
	m	()I	K	getPopTime
	m	()I	L	getCount
	m	()Z	M	isEdible
	m	()Lapc;	N	getDrinkingSound
	m	()Lapc;	O	getEatingSound
	m	()I	P	getHideFlags
	m	()Ljava/util/Optional;	a	getTooltipImage
	m	(I)Lcjf;	a	split
		p	1		amount
	m	(ILasc;Lakr;)Z	a	hurt
		p	1		amount
		p	2		random
		p	3		player
	m	(ILbjg;Ljava/util/function/Consumer;)V	a	hurtAndBreak
		p	1		amount
		p	2		entity
		p	3		breakCallback
	m	(ILcjf$a;)Z	a	shouldShowInTooltip
		p	0		flags
		p	1		tooltipSection
	m	(Laqh;)Z	a	is
		p	1		tag
	m	(Lbiq;)V	a	setEntityRepresentation
		p	1		holder
	m	(Lbiv;)Lcom/google/common/collect/Multimap;	a	getAttributeModifiers
		p	1		slot
	m	(Lbjg;Lcbu;)V	a	hurtEnemy
		p	1		target
		p	2		attacker
	m	(Lbkh;Lbkk;Lbiv;)V	a	addAttributeModifier
		p	1		attribute
		p	2		modifier
		p	3		slot
	m	(Lbyn;)V	a	onDestroyed
		p	1		entity
	m	(Lcbu;Lbjg;Lbgx;)Lbgy;	a	interactLivingEntity
		p	1		user
		p	2		entity
		p	3		hand
	m	(Lcbu;Lckw;)Ljava/util/List;	a	getTooltipLines
		p	1		player
		p	2		context
	m	(Lcec;)Z	a	isItemEnabled
		p	1		enabledFeatures
	m	(Lcgd;Lcet;Lcbu;)Z	a	overrideStackedOnOther
		p	1		slot
		p	2		clickType
		p	3		player
	m	(Lcja;)Z	a	is
		p	1		item
	m	(Lcjf$a;)V	a	hideTooltipPart
		p	1		tooltipSection
	m	(Lcjf;)Ljava/util/Optional;	a	lambda$static$0
		p	0		stack
	m	(Lcjf;Lcgd;Lcet;Lcbu;Lbjy;)Z	a	overrideOtherStackedOnMe
		p	1		stack
		p	2		slot
		p	3		clickType
		p	4		player
		p	5		cursorStackReference
	m	(Lcjf;Lcjf;)Z	a	matches
		p	0		left
		p	1		right
	m	(Lclp;)Lbgy;	a	useOn
		p	1		context
	m	(Lcno;I)V	a	enchant
		p	1		enchantment
		p	2		level
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Lcpv;Lbiq;IZ)V	a	inventoryTick
		p	1		world
		p	2		entity
		p	3		slot
		p	4		selected
	m	(Lcpv;Lbjg;)Lcjf;	a	finishUsingItem
		p	1		world
		p	2		user
	m	(Lcpv;Lbjg;I)V	a	releaseUsing
		p	1		world
		p	2		user
		p	3		remainingUseTicks
	m	(Lcpv;Lcbu;I)V	a	onCraftedBy
		p	1		world
		p	2		player
		p	3		amount
	m	(Lcpv;Lcbu;Lbgx;)Lbgz;	a	use
		p	1		world
		p	2		user
		p	3		hand
	m	(Lcpv;Ldfj;Lgw;Lcbu;)V	a	mineBlock
		p	1		world
		p	2		state
		p	3		pos
		p	4		miner
	m	(Ldfj;)F	a	getDestroySpeed
		p	1		state
	m	(Lfi$a;)Ljava/util/List;	a	lambda$expandBlockState$4
	m	(Lfi$b;)Ljava/util/List;	a	lambda$expandBlockState$6
	m	(Lhe;)Z	a	is
		p	1		itemEntry
	m	(Lhi;)Z	a	is
		p	1		registryEntryList
	m	(Lhq;Ldfn;)Z	a	hasAdventureModePlaceTagForBlock
		p	1		blockRegistry
		p	2		pos
	m	(Ljava/lang/String;)Lqw;	a	getOrCreateTagElement
		p	1		key
	m	(Ljava/lang/String;Lrq;)V	a	addTagElement
		p	1		key
		p	2		element
	m	(Ljava/text/DecimalFormat;)V	a	lambda$static$2
		p	0		decimalFormat
	m	(Ljava/util/List;Lqw;Lcno;)V	a	lambda$appendEnchantmentNames$3
		p	2		e
	m	(Ljava/util/List;Lrc;)V	a	appendEnchantmentNames
		p	0		tooltip
		p	1		enchantments
	m	(Ljava/util/function/Predicate;)Z	a	is
		p	1		predicate
	m	(Lqw;)Lcjf;	a	of
		p	0		nbt
	m	(Ltl;)Lcjf;	a	setHoverName
		p	1		name
	m	(Luh;)Luh;	a	lambda$getDisplayName$7
		p	1		style
	m	()Z	b	isEmpty
	m	(I)V	b	setDamageValue
		p	1		damage
	m	(Lcjf;Lcjf;)Z	b	isSameItem
		p	0		left
		p	1		right
	m	(Lcpv;Lbjg;I)V	b	onUseTick
		p	1		world
		p	2		user
		p	3		remainingUseTicks
	m	(Ldfj;)Z	b	isCorrectToolForDrops
		p	1		state
	m	(Lhe;)Lty;	b	lambda$expandBlockState$5
	m	(Lhq;Ldfn;)Z	b	hasAdventureModeBreakTagForBlock
		p	1		blockRegistry
		p	2		pos
	m	(Ljava/lang/String;)Lqw;	b	getTagElement
		p	1		key
	m	(Lqw;)Lqw;	b	save
		p	1		nbt
	m	()Lcjf;	c	copyAndClear
	m	(I)Lcjf;	c	copyWithCount
		p	1		count
	m	(Lcjf;Lcjf;)Z	c	isSameItemSameTags
		p	0		stack
		p	1		otherStack
	m	(Ljava/lang/String;)V	c	removeTagKey
		p	1		key
	m	(Lqw;)V	c	setTag
		p	1		nbt
	m	()Lcja;	d	getItem
	m	(I)V	d	setRepairCost
		p	1		repairCost
	m	(Ljava/lang/String;)Ljava/util/Collection;	d	expandBlockState
		p	0		tag
	m	()Lhe;	e	getItemHolder
	m	(I)V	e	setPopTime
		p	1		bobbingAnimationTime
	m	()Ljava/util/stream/Stream;	f	getTags
	m	(I)V	f	setCount
		p	1		count
	m	()I	g	getMaxStackSize
	m	(I)V	g	grow
		p	1		amount
	m	()Z	h	isStackable
	m	(I)V	h	shrink
		p	1		amount
	m	()Z	i	isDamageableItem
	m	()Z	j	isDamaged
	m	()I	k	getDamageValue
	m	()I	l	getMaxDamage
	m	()Z	m	isBarVisible
	m	()I	n	getBarWidth
	m	()I	o	getBarColor
	m	()Lcjf;	p	copy
	m	()Ljava/lang/String;	q	getDescriptionId
	m	()I	r	getUseDuration
	m	()Lcky;	s	getUseAnimation
	m	()Z	t	useOnRelease
	m	()Z	u	hasTag
	m	()Lqw;	v	getTag
	m	()Lqw;	w	getOrCreateTag
	m	()Lrc;	x	getEnchantmentTags
	m	()Ltl;	y	getHoverName
	m	()V	z	resetHoverName
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcjf;	b	EMPTY
	f	Ljava/text/DecimalFormat;	c	ATTRIBUTE_MODIFIER_FORMAT
	f	Ljava/lang/String;	d	TAG_ENCH
	f	Ljava/lang/String;	e	TAG_DISPLAY
	f	Ljava/lang/String;	f	TAG_DISPLAY_NAME
	f	Ljava/lang/String;	g	TAG_LORE
	f	Ljava/lang/String;	h	TAG_DAMAGE
	f	Ljava/lang/String;	i	TAG_COLOR
	f	Lorg/slf4j/Logger;	j	LOGGER
	f	Ljava/lang/String;	k	TAG_UNBREAKABLE
	f	Ljava/lang/String;	l	TAG_REPAIR_COST
	f	Ljava/lang/String;	m	TAG_CAN_DESTROY_BLOCK_LIST
	f	Ljava/lang/String;	n	TAG_CAN_PLACE_ON_BLOCK_LIST
	f	Ljava/lang/String;	o	TAG_HIDE_FLAGS
	f	Ltl;	p	DISABLED_ITEM_TOOLTIP
	f	I	q	DONT_HIDE_TOOLTIP
	f	Luh;	r	LORE_STYLE
	f	I	s	count
	f	I	t	popTime
	f	Lcja;	u	item
	f	Lqw;	v	tag
	f	Lbiq;	w	entityRepresentation
	f	Lcgn;	x	adventureBreakCheck
	f	Lcgn;	y	adventurePlaceCheck
c	cjf$a	net/minecraft/world/item/ItemStack$TooltipPart
	m	()I	a	getMask
	m	()[Lcjf$a;	b	$values
	f	Lcjf$a;	a	ENCHANTMENTS
	f	Lcjf$a;	b	MODIFIERS
	f	Lcjf$a;	c	UNBREAKABLE
	f	Lcjf$a;	d	CAN_DESTROY
	f	Lcjf$a;	e	CAN_PLACE
	f	Lcjf$a;	f	ADDITIONAL
	f	Lcjf$a;	g	DYE
	f	Lcjf$a;	h	UPGRADES
	f	I	i	mask
	f	[Lcjf$a;	j	$VALUES
c	cjg	net/minecraft/world/item/ItemStackLinkedSet
	m	()Ljava/util/Set;	a	createTypeAndTagSet
	m	(Lcjf;)I	a	hashStackAndTag
		p	0		stack
	f	Lit/unimi/dsi/fastutil/Hash$Strategy;	a	TYPE_AND_TAG
c	cjg$1	net/minecraft/world/item/ItemStackLinkedSet$1
	m	(Lcjf;)I	a	hashCode
	m	(Lcjf;Lcjf;)Z	a	equals
c	cjh	net/minecraft/world/item/ItemUtils
	m	(Lbyn;Ljava/util/stream/Stream;)V	a	onContainerDestroyed
		p	0		itemEntity
		p	1		contents
	m	(Lcjf;Lcbu;Lcjf;)Lcjf;	a	createFilledResult
		p	0		inputStack
		p	1		player
		p	2		outputStack
	m	(Lcjf;Lcbu;Lcjf;Z)Lcjf;	a	createFilledResult
		p	0		inputStack
		p	1		player
		p	2		outputStack
		p	3		creativeOverride
	m	(Lcpv;Lbyn;Lcjf;)V	a	lambda$onContainerDestroyed$0
		p	2		stack
	m	(Lcpv;Lcbu;Lbgx;)Lbgz;	a	startUsingInstantly
		p	0		world
		p	1		player
		p	2		hand
c	cji	net/minecraft/world/item/Items
	m	(Laev;Lcja;)Lcja;	a	registerItem
		p	0		key
		p	1		item
	m	(Laew;Lcja;)Lcja;	a	registerItem
		p	0		id
		p	1		item
	m	(Lcgy;)Lcja;	a	registerBlock
		p	0		item
	m	(Lcsv;)Lcja;	a	registerBlock
		p	0		block
	m	(Lcsv;Lcja;)Lcja;	a	registerBlock
		p	0		block
		p	1		item
	m	(Lcsv;[Lcsv;)Lcja;	a	registerBlock
		p	0		block
		p	1		blocks
	m	(Ljava/lang/String;Lcja;)Lcja;	a	registerItem
		p	0		id
		p	1		item
	f	Lcja;	A	JUNGLE_PLANKS
	f	Lcja;	B	ACACIA_PLANKS
	f	Lcja;	C	CHERRY_PLANKS
	f	Lcja;	D	DARK_OAK_PLANKS
	f	Lcja;	E	MANGROVE_PLANKS
	f	Lcja;	F	BAMBOO_PLANKS
	f	Lcja;	G	CRIMSON_PLANKS
	f	Lcja;	H	WARPED_PLANKS
	f	Lcja;	I	BAMBOO_MOSAIC
	f	Lcja;	J	OAK_SAPLING
	f	Lcja;	K	SPRUCE_SAPLING
	f	Lcja;	L	BIRCH_SAPLING
	f	Lcja;	M	JUNGLE_SAPLING
	f	Lcja;	N	ACACIA_SAPLING
	f	Lcja;	O	CHERRY_SAPLING
	f	Lcja;	P	DARK_OAK_SAPLING
	f	Lcja;	Q	MANGROVE_PROPAGULE
	f	Lcja;	R	BEDROCK
	f	Lcja;	S	SAND
	f	Lcja;	T	SUSPICIOUS_SAND
	f	Lcja;	U	SUSPICIOUS_GRAVEL
	f	Lcja;	V	RED_SAND
	f	Lcja;	W	GRAVEL
	f	Lcja;	X	COAL_ORE
	f	Lcja;	Y	DEEPSLATE_COAL_ORE
	f	Lcja;	Z	IRON_ORE
	f	Lcja;	aA	NETHERITE_BLOCK
	f	Lcja;	aB	EXPOSED_COPPER
	f	Lcja;	aC	WEATHERED_COPPER
	f	Lcja;	aD	OXIDIZED_COPPER
	f	Lcja;	aE	CUT_COPPER
	f	Lcja;	aF	EXPOSED_CUT_COPPER
	f	Lcja;	aG	WEATHERED_CUT_COPPER
	f	Lcja;	aH	OXIDIZED_CUT_COPPER
	f	Lcja;	aI	CUT_COPPER_STAIRS
	f	Lcja;	aJ	EXPOSED_CUT_COPPER_STAIRS
	f	Lcja;	aK	WEATHERED_CUT_COPPER_STAIRS
	f	Lcja;	aL	OXIDIZED_CUT_COPPER_STAIRS
	f	Lcja;	a	AIR
	f	Lcja;	aM	CUT_COPPER_SLAB
	f	Lcja;	aN	EXPOSED_CUT_COPPER_SLAB
	f	Lcja;	aO	WEATHERED_CUT_COPPER_SLAB
	f	Lcja;	aP	OXIDIZED_CUT_COPPER_SLAB
	f	Lcja;	aQ	WAXED_COPPER_BLOCK
	f	Lcja;	aR	WAXED_EXPOSED_COPPER
	f	Lcja;	aS	WAXED_WEATHERED_COPPER
	f	Lcja;	aT	WAXED_OXIDIZED_COPPER
	f	Lcja;	aU	WAXED_CUT_COPPER
	f	Lcja;	aV	WAXED_EXPOSED_CUT_COPPER
	f	Lcja;	aW	WAXED_WEATHERED_CUT_COPPER
	f	Lcja;	aX	WAXED_OXIDIZED_CUT_COPPER
	f	Lcja;	aY	WAXED_CUT_COPPER_STAIRS
	f	Lcja;	aZ	WAXED_EXPOSED_CUT_COPPER_STAIRS
	f	Lcja;	aa	DEEPSLATE_IRON_ORE
	f	Lcja;	ab	COPPER_ORE
	f	Lcja;	ac	DEEPSLATE_COPPER_ORE
	f	Lcja;	ad	GOLD_ORE
	f	Lcja;	ae	DEEPSLATE_GOLD_ORE
	f	Lcja;	af	REDSTONE_ORE
	f	Lcja;	ag	DEEPSLATE_REDSTONE_ORE
	f	Lcja;	ah	EMERALD_ORE
	f	Lcja;	ai	DEEPSLATE_EMERALD_ORE
	f	Lcja;	aj	LAPIS_ORE
	f	Lcja;	ak	DEEPSLATE_LAPIS_ORE
	f	Lcja;	al	DIAMOND_ORE
	f	Lcja;	am	DEEPSLATE_DIAMOND_ORE
	f	Lcja;	an	NETHER_GOLD_ORE
	f	Lcja;	ao	NETHER_QUARTZ_ORE
	f	Lcja;	ap	ANCIENT_DEBRIS
	f	Lcja;	aq	COAL_BLOCK
	f	Lcja;	ar	RAW_IRON_BLOCK
	f	Lcja;	as	RAW_COPPER_BLOCK
	f	Lcja;	at	RAW_GOLD_BLOCK
	f	Lcja;	au	AMETHYST_BLOCK
	f	Lcja;	av	BUDDING_AMETHYST
	f	Lcja;	aw	IRON_BLOCK
	f	Lcja;	ax	COPPER_BLOCK
	f	Lcja;	ay	GOLD_BLOCK
	f	Lcja;	az	DIAMOND_BLOCK
	f	Lcja;	bA	STRIPPED_MANGROVE_LOG
	f	Lcja;	bB	STRIPPED_CRIMSON_STEM
	f	Lcja;	bC	STRIPPED_WARPED_STEM
	f	Lcja;	bD	STRIPPED_OAK_WOOD
	f	Lcja;	bE	STRIPPED_SPRUCE_WOOD
	f	Lcja;	bF	STRIPPED_BIRCH_WOOD
	f	Lcja;	bG	STRIPPED_JUNGLE_WOOD
	f	Lcja;	bH	STRIPPED_ACACIA_WOOD
	f	Lcja;	bI	STRIPPED_CHERRY_WOOD
	f	Lcja;	bJ	STRIPPED_DARK_OAK_WOOD
	f	Lcja;	bK	STRIPPED_MANGROVE_WOOD
	f	Lcja;	bL	STRIPPED_CRIMSON_HYPHAE
	f	Lcja;	b	STONE
	f	Lcja;	bM	STRIPPED_WARPED_HYPHAE
	f	Lcja;	bN	STRIPPED_BAMBOO_BLOCK
	f	Lcja;	bO	OAK_WOOD
	f	Lcja;	bP	SPRUCE_WOOD
	f	Lcja;	bQ	BIRCH_WOOD
	f	Lcja;	bR	JUNGLE_WOOD
	f	Lcja;	bS	ACACIA_WOOD
	f	Lcja;	bT	CHERRY_WOOD
	f	Lcja;	bU	DARK_OAK_WOOD
	f	Lcja;	bV	MANGROVE_WOOD
	f	Lcja;	bW	CRIMSON_HYPHAE
	f	Lcja;	bX	WARPED_HYPHAE
	f	Lcja;	bY	OAK_LEAVES
	f	Lcja;	bZ	SPRUCE_LEAVES
	f	Lcja;	ba	WAXED_WEATHERED_CUT_COPPER_STAIRS
	f	Lcja;	bb	WAXED_OXIDIZED_CUT_COPPER_STAIRS
	f	Lcja;	bc	WAXED_CUT_COPPER_SLAB
	f	Lcja;	bd	WAXED_EXPOSED_CUT_COPPER_SLAB
	f	Lcja;	be	WAXED_WEATHERED_CUT_COPPER_SLAB
	f	Lcja;	bf	WAXED_OXIDIZED_CUT_COPPER_SLAB
	f	Lcja;	bg	OAK_LOG
	f	Lcja;	bh	SPRUCE_LOG
	f	Lcja;	bi	BIRCH_LOG
	f	Lcja;	bj	JUNGLE_LOG
	f	Lcja;	bk	ACACIA_LOG
	f	Lcja;	bl	CHERRY_LOG
	f	Lcja;	bm	DARK_OAK_LOG
	f	Lcja;	bn	MANGROVE_LOG
	f	Lcja;	bo	MANGROVE_ROOTS
	f	Lcja;	bp	MUDDY_MANGROVE_ROOTS
	f	Lcja;	bq	CRIMSON_STEM
	f	Lcja;	br	WARPED_STEM
	f	Lcja;	bs	BAMBOO_BLOCK
	f	Lcja;	bt	STRIPPED_OAK_LOG
	f	Lcja;	bu	STRIPPED_SPRUCE_LOG
	f	Lcja;	bv	STRIPPED_BIRCH_LOG
	f	Lcja;	bw	STRIPPED_JUNGLE_LOG
	f	Lcja;	bx	STRIPPED_ACACIA_LOG
	f	Lcja;	by	STRIPPED_CHERRY_LOG
	f	Lcja;	bz	STRIPPED_DARK_OAK_LOG
	f	Lcja;	cA	MAGENTA_WOOL
	f	Lcja;	cB	LIGHT_BLUE_WOOL
	f	Lcja;	cC	YELLOW_WOOL
	f	Lcja;	cD	LIME_WOOL
	f	Lcja;	cE	PINK_WOOL
	f	Lcja;	cF	GRAY_WOOL
	f	Lcja;	cG	LIGHT_GRAY_WOOL
	f	Lcja;	cH	CYAN_WOOL
	f	Lcja;	cI	PURPLE_WOOL
	f	Lcja;	cJ	BLUE_WOOL
	f	Lcja;	cK	BROWN_WOOL
	f	Lcja;	cL	GREEN_WOOL
	f	Lcja;	c	GRANITE
	f	Lcja;	cM	RED_WOOL
	f	Lcja;	cN	BLACK_WOOL
	f	Lcja;	cO	DANDELION
	f	Lcja;	cP	POPPY
	f	Lcja;	cQ	BLUE_ORCHID
	f	Lcja;	cR	ALLIUM
	f	Lcja;	cS	AZURE_BLUET
	f	Lcja;	cT	RED_TULIP
	f	Lcja;	cU	ORANGE_TULIP
	f	Lcja;	cV	WHITE_TULIP
	f	Lcja;	cW	PINK_TULIP
	f	Lcja;	cX	OXEYE_DAISY
	f	Lcja;	cY	CORNFLOWER
	f	Lcja;	cZ	LILY_OF_THE_VALLEY
	f	Lcja;	ca	BIRCH_LEAVES
	f	Lcja;	cb	JUNGLE_LEAVES
	f	Lcja;	cc	ACACIA_LEAVES
	f	Lcja;	cd	CHERRY_LEAVES
	f	Lcja;	ce	DARK_OAK_LEAVES
	f	Lcja;	cf	MANGROVE_LEAVES
	f	Lcja;	cg	AZALEA_LEAVES
	f	Lcja;	ch	FLOWERING_AZALEA_LEAVES
	f	Lcja;	ci	SPONGE
	f	Lcja;	cj	WET_SPONGE
	f	Lcja;	ck	GLASS
	f	Lcja;	cl	TINTED_GLASS
	f	Lcja;	cm	LAPIS_BLOCK
	f	Lcja;	cn	SANDSTONE
	f	Lcja;	co	CHISELED_SANDSTONE
	f	Lcja;	cp	CUT_SANDSTONE
	f	Lcja;	cq	COBWEB
	f	Lcja;	cr	GRASS
	f	Lcja;	cs	FERN
	f	Lcja;	ct	AZALEA
	f	Lcja;	cu	FLOWERING_AZALEA
	f	Lcja;	cv	DEAD_BUSH
	f	Lcja;	cw	SEAGRASS
	f	Lcja;	cx	SEA_PICKLE
	f	Lcja;	cy	WHITE_WOOL
	f	Lcja;	cz	ORANGE_WOOL
	f	Lcja;	dA	ACACIA_SLAB
	f	Lcja;	dB	CHERRY_SLAB
	f	Lcja;	dC	DARK_OAK_SLAB
	f	Lcja;	dD	MANGROVE_SLAB
	f	Lcja;	dE	BAMBOO_SLAB
	f	Lcja;	dF	BAMBOO_MOSAIC_SLAB
	f	Lcja;	dG	CRIMSON_SLAB
	f	Lcja;	dH	WARPED_SLAB
	f	Lcja;	dI	STONE_SLAB
	f	Lcja;	dJ	SMOOTH_STONE_SLAB
	f	Lcja;	dK	SANDSTONE_SLAB
	f	Lcja;	dL	CUT_STANDSTONE_SLAB
	f	Lcja;	d	POLISHED_GRANITE
	f	Lcja;	dM	PETRIFIED_OAK_SLAB
	f	Lcja;	dN	COBBLESTONE_SLAB
	f	Lcja;	dO	BRICK_SLAB
	f	Lcja;	dP	STONE_BRICK_SLAB
	f	Lcja;	dQ	MUD_BRICK_SLAB
	f	Lcja;	dR	NETHER_BRICK_SLAB
	f	Lcja;	dS	QUARTZ_SLAB
	f	Lcja;	dT	RED_SANDSTONE_SLAB
	f	Lcja;	dU	CUT_RED_SANDSTONE_SLAB
	f	Lcja;	dV	PURPUR_SLAB
	f	Lcja;	dW	PRISMARINE_SLAB
	f	Lcja;	dX	PRISMARINE_BRICK_SLAB
	f	Lcja;	dY	DARK_PRISMARINE_SLAB
	f	Lcja;	dZ	SMOOTH_QUARTZ
	f	Lcja;	da	WITHER_ROSE
	f	Lcja;	db	TORCHFLOWER
	f	Lcja;	dc	PITCHER_PLANT
	f	Lcja;	dd	SPORE_BLOSSOM
	f	Lcja;	de	BROWN_MUSHROOM
	f	Lcja;	df	RED_MUSHROOM
	f	Lcja;	dg	CRIMSON_FUNGUS
	f	Lcja;	dh	WARPED_FUNGUS
	f	Lcja;	di	CRIMSON_ROOTS
	f	Lcja;	dj	WARPED_ROOTS
	f	Lcja;	dk	NETHER_SPROUTS
	f	Lcja;	dl	WEEPING_VINES
	f	Lcja;	dm	TWISTING_VINES
	f	Lcja;	dn	SUGAR_CANE
	f	Lcja;	do	KELP
	f	Lcja;	dp	MOSS_CARPET
	f	Lcja;	dq	PINK_PETALS
	f	Lcja;	dr	MOSS_BLOCK
	f	Lcja;	ds	HANGING_ROOTS
	f	Lcja;	dt	BIG_DRIPLEAF
	f	Lcja;	du	SMALL_DRIPLEAF
	f	Lcja;	dv	BAMBOO
	f	Lcja;	dw	OAK_SLAB
	f	Lcja;	dx	SPRUCE_SLAB
	f	Lcja;	dy	BIRCH_SLAB
	f	Lcja;	dz	JUNGLE_SLAB
	f	Lcja;	eA	CACTUS
	f	Lcja;	eB	CLAY
	f	Lcja;	eC	JUKEBOX
	f	Lcja;	eD	OAK_FENCE
	f	Lcja;	eE	SPRUCE_FENCE
	f	Lcja;	eF	BIRCH_FENCE
	f	Lcja;	eG	JUNGLE_FENCE
	f	Lcja;	eH	ACACIA_FENCE
	f	Lcja;	eI	CHERRY_FENCE
	f	Lcja;	eJ	DARK_OAK_FENCE
	f	Lcja;	eK	MANGROVE_FENCE
	f	Lcja;	eL	BAMBOO_FENCE
	f	Lcja;	e	DIORITE
	f	Lcja;	eM	CRIMSON_FENCE
	f	Lcja;	eN	WARPED_FENCE
	f	Lcja;	eO	PUMPKIN
	f	Lcja;	eP	CARVED_PUMPKIN
	f	Lcja;	eQ	JACK_O_LANTERN
	f	Lcja;	eR	NETHERRACK
	f	Lcja;	eS	SOUL_SAND
	f	Lcja;	eT	SOUL_SOIL
	f	Lcja;	eU	BASALT
	f	Lcja;	eV	POLISHED_BASALT
	f	Lcja;	eW	SMOOTH_BASALT
	f	Lcja;	eX	SOUL_TORCH
	f	Lcja;	eY	GLOWSTONE
	f	Lcja;	eZ	INFESTED_STONE
	f	Lcja;	ea	SMOOTH_RED_SANDSTONE
	f	Lcja;	eb	SMOOTH_SANDSTONE
	f	Lcja;	ec	SMOOTH_STONE
	f	Lcja;	ed	BRICKS
	f	Lcja;	ee	BOOKSHELF
	f	Lcja;	ef	CHISELED_BOOKSHELF
	f	Lcja;	eg	DECORATED_POT
	f	Lcja;	eh	MOSSY_COBBLESTONE
	f	Lcja;	ei	OBSIDIAN
	f	Lcja;	ej	TORCH
	f	Lcja;	ek	END_ROD
	f	Lcja;	el	CHORUS_PLANT
	f	Lcja;	em	CHORUS_FLOWER
	f	Lcja;	en	PURPUR_BLOCK
	f	Lcja;	eo	PURPUR_PILLAR
	f	Lcja;	ep	PURPUR_STAIRS
	f	Lcja;	eq	SPAWNER
	f	Lcja;	er	CHEST
	f	Lcja;	es	CRAFTING_TABLE
	f	Lcja;	et	FARMLAND
	f	Lcja;	eu	FURNACE
	f	Lcja;	ev	LADDER
	f	Lcja;	ew	COBBLESTONE_STAIRS
	f	Lcja;	ex	SNOW
	f	Lcja;	ey	ICE
	f	Lcja;	ez	SNOW_BLOCK
	f	Lcja;	fA	GLOW_LICHEN
	f	Lcja;	fB	BRICK_STAIRS
	f	Lcja;	fC	STONE_BRICK_STAIRS
	f	Lcja;	fD	MUD_BRICK_STAIRS
	f	Lcja;	fE	MYCELIUM
	f	Lcja;	fF	LILY_PAD
	f	Lcja;	fG	NETHER_BRICKS
	f	Lcja;	fH	CRACKED_NETHER_BRICKS
	f	Lcja;	fI	CHISELED_NETHER_BRICKS
	f	Lcja;	fJ	NETHER_BRICK_FENCE
	f	Lcja;	fK	NETHER_BRICK_STAIRS
	f	Lcja;	fL	SCULK
	f	Lcja;	f	POLISHED_DIORITE
	f	Lcja;	fM	SCULK_VEIN
	f	Lcja;	fN	SCULK_CATALYST
	f	Lcja;	fO	SCULK_SHRIEKER
	f	Lcja;	fP	ENCHANTING_TABLE
	f	Lcja;	fQ	END_PORTAL_FRAME
	f	Lcja;	fR	END_STONE
	f	Lcja;	fS	END_STONE_BRICKS
	f	Lcja;	fT	DRAGON_EGG
	f	Lcja;	fU	SANDSTONE_STAIRS
	f	Lcja;	fV	ENDER_CHEST
	f	Lcja;	fW	EMERALD_BLOCK
	f	Lcja;	fX	OAK_STAIRS
	f	Lcja;	fY	SPRUCE_STAIRS
	f	Lcja;	fZ	BIRCH_STAIRS
	f	Lcja;	fa	INFESTED_COBBLESTONE
	f	Lcja;	fb	INFESTED_STONE_BRICKS
	f	Lcja;	fc	INFESTED_MOSSY_STONE_BRICKS
	f	Lcja;	fd	INFESTED_CRACKED_STONE_BRICKS
	f	Lcja;	fe	INFESTED_CHISELED_STONE_BRICKS
	f	Lcja;	ff	INFESTED_DEEPSLATE
	f	Lcja;	fg	STONE_BRICKS
	f	Lcja;	fh	MOSSY_STONE_BRICKS
	f	Lcja;	fi	CRACKED_STONE_BRICKS
	f	Lcja;	fj	CHISELED_STONE_BRICKS
	f	Lcja;	fk	PACKED_MUD
	f	Lcja;	fl	MUD_BRICKS
	f	Lcja;	fm	DEEPSLATE_BRICKS
	f	Lcja;	fn	CRACKED_DEEPSLATE_BRICKS
	f	Lcja;	fo	DEEPSLATE_TILES
	f	Lcja;	fp	CRACKED_DEEPSLATE_TILES
	f	Lcja;	fq	CHISELED_DEEPSLATE
	f	Lcja;	fr	REINFORCED_DEEPSLATE
	f	Lcja;	fs	BROWN_MUSHROOM_BLOCK
	f	Lcja;	ft	RED_MUSHROOM_BLOCK
	f	Lcja;	fu	MUSHROOM_STEM
	f	Lcja;	fv	IRON_BARS
	f	Lcja;	fw	CHAIN
	f	Lcja;	fx	GLASS_PANE
	f	Lcja;	fy	MELON
	f	Lcja;	fz	VINE
	f	Lcja;	gA	BLACKSTONE_WALL
	f	Lcja;	gB	POLISHED_BLACKSTONE_WALL
	f	Lcja;	gC	POLISHED_BLACKSTONE_BRICK_WALL
	f	Lcja;	gD	COBBLED_DEEPSLATE_WALL
	f	Lcja;	gE	POLISHED_DEEPSLATE_WALL
	f	Lcja;	gF	DEEPSLATE_BRICK_WALL
	f	Lcja;	gG	DEEPSLATE_TILE_WALL
	f	Lcja;	gH	ANVIL
	f	Lcja;	gI	CHIPPED_ANVIL
	f	Lcja;	gJ	DAMAGED_ANVIL
	f	Lcja;	gK	CHISELED_QUARTZ_BLOCK
	f	Lcja;	gL	QUARTZ_BLOCK
	f	Lcja;	g	ANDESITE
	f	Lcja;	gM	QUARTZ_BRICKS
	f	Lcja;	gN	QUARTZ_PILLAR
	f	Lcja;	gO	QUARTZ_STAIRS
	f	Lcja;	gP	WHITE_TERRACOTTA
	f	Lcja;	gQ	ORANGE_TERRACOTTA
	f	Lcja;	gR	MAGENTA_TERRACOTTA
	f	Lcja;	gS	LIGHT_BLUE_TERRACOTTA
	f	Lcja;	gT	YELLOW_TERRACOTTA
	f	Lcja;	gU	LIME_TERRACOTTA
	f	Lcja;	gV	PINK_TERRACOTTA
	f	Lcja;	gW	GRAY_TERRACOTTA
	f	Lcja;	gX	LIGHT_GRAY_TERRACOTTA
	f	Lcja;	gY	CYAN_TERRACOTTA
	f	Lcja;	gZ	PURPLE_TERRACOTTA
	f	Lcja;	ga	JUNGLE_STAIRS
	f	Lcja;	gb	ACACIA_STAIRS
	f	Lcja;	gc	CHERRY_STAIRS
	f	Lcja;	gd	DARK_OAK_STAIRS
	f	Lcja;	ge	MANGROVE_STAIRS
	f	Lcja;	gf	BAMBOO_STAIRS
	f	Lcja;	gg	BAMBOO_MOSAIC_STAIRS
	f	Lcja;	gh	CRIMSON_STAIRS
	f	Lcja;	gi	WARPED_STAIRS
	f	Lcja;	gj	COMMAND_BLOCK
	f	Lcja;	gk	BEACON
	f	Lcja;	gl	COBBLESTONE_WALL
	f	Lcja;	gm	MOSSY_COBBLESTONE_WALL
	f	Lcja;	gn	BRICK_WALL
	f	Lcja;	go	PRISMARINE_WALL
	f	Lcja;	gp	RED_SANDSTONE_WALL
	f	Lcja;	gq	MOSSY_STONE_BRICK_WALL
	f	Lcja;	gr	GRANITE_WALL
	f	Lcja;	gs	STONE_BRICK_WALL
	f	Lcja;	gt	MUD_BRICK_WALL
	f	Lcja;	gu	NETHER_BRICK_WALL
	f	Lcja;	gv	ANDESITE_WALL
	f	Lcja;	gw	RED_NETHER_BRICK_WALL
	f	Lcja;	gx	SANDSTONE_WALL
	f	Lcja;	gy	END_STONE_BRICK_WALL
	f	Lcja;	gz	DIORITE_WALL
	f	Lcja;	hA	DIRT_PATH
	f	Lcja;	hB	SUNFLOWER
	f	Lcja;	hC	LILAC
	f	Lcja;	hD	ROSE_BUSH
	f	Lcja;	hE	PEONY
	f	Lcja;	hF	TALL_GRASS
	f	Lcja;	hG	LARGE_FERN
	f	Lcja;	hH	WHITE_STAINED_GLASS
	f	Lcja;	hI	ORANGE_STAINED_GLASS
	f	Lcja;	hJ	MAGENTA_STAINED_GLASS
	f	Lcja;	hK	LIGHT_BLUE_STAINED_GLASS
	f	Lcja;	hL	YELLOW_STAINED_GLASS
	f	Lcja;	h	POLISHED_ANDESITE
	f	Lcja;	hM	LIME_STAINED_GLASS
	f	Lcja;	hN	PINK_STAINED_GLASS
	f	Lcja;	hO	GRAY_STAINED_GLASS
	f	Lcja;	hP	LIGHT_GRAY_STAINED_GLASS
	f	Lcja;	hQ	CYAN_STAINED_GLASS
	f	Lcja;	hR	PURPLE_STAINED_GLASS
	f	Lcja;	hS	BLUE_STAINED_GLASS
	f	Lcja;	hT	BROWN_STAINED_GLASS
	f	Lcja;	hU	GREEN_STAINED_GLASS
	f	Lcja;	hV	RED_STAINED_GLASS
	f	Lcja;	hW	BLACK_STAINED_GLASS
	f	Lcja;	hX	WHITE_STAINED_GLASS_PANE
	f	Lcja;	hY	ORANGE_STAINED_GLASS_PANE
	f	Lcja;	hZ	MAGENTA_STAINED_GLASS_PANE
	f	Lcja;	ha	BLUE_TERRACOTTA
	f	Lcja;	hb	BROWN_TERRACOTTA
	f	Lcja;	hc	GREEN_TERRACOTTA
	f	Lcja;	hd	RED_TERRACOTTA
	f	Lcja;	he	BLACK_TERRACOTTA
	f	Lcja;	hf	BARRIER
	f	Lcja;	hg	LIGHT
	f	Lcja;	hh	HAY_BLOCK
	f	Lcja;	hi	WHITE_CARPET
	f	Lcja;	hj	ORANGE_CARPET
	f	Lcja;	hk	MAGENTA_CARPET
	f	Lcja;	hl	LIGHT_BLUE_CARPET
	f	Lcja;	hm	YELLOW_CARPET
	f	Lcja;	hn	LIME_CARPET
	f	Lcja;	ho	PINK_CARPET
	f	Lcja;	hp	GRAY_CARPET
	f	Lcja;	hq	LIGHT_GRAY_CARPET
	f	Lcja;	hr	CYAN_CARPET
	f	Lcja;	hs	PURPLE_CARPET
	f	Lcja;	ht	BLUE_CARPET
	f	Lcja;	hu	BROWN_CARPET
	f	Lcja;	hv	GREEN_CARPET
	f	Lcja;	hw	RED_CARPET
	f	Lcja;	hx	BLACK_CARPET
	f	Lcja;	hy	TERRACOTTA
	f	Lcja;	hz	PACKED_ICE
	f	Lcja;	iA	MAGMA_BLOCK
	f	Lcja;	iB	NETHER_WART_BLOCK
	f	Lcja;	iC	WARPED_WART_BLOCK
	f	Lcja;	iD	RED_NETHER_BRICKS
	f	Lcja;	iE	BONE_BLOCK
	f	Lcja;	iF	STRUCTURE_VOID
	f	Lcja;	iG	SHULKER_BOX
	f	Lcja;	iH	WHITE_SHULKER_BOX
	f	Lcja;	iI	ORANGE_SHULKER_BOX
	f	Lcja;	iJ	MAGENTA_SHULKER_BOX
	f	Lcja;	iK	LIGHT_BLUE_SHULKER_BOX
	f	Lcja;	iL	YELLOW_SHULKER_BOX
	f	Lcja;	i	DEEPSLATE
	f	Lcja;	iM	LIME_SHULKER_BOX
	f	Lcja;	iN	PINK_SHULKER_BOX
	f	Lcja;	iO	GRAY_SHULKER_BOX
	f	Lcja;	iP	LIGHT_GRAY_SHULKER_BOX
	f	Lcja;	iQ	CYAN_SHULKER_BOX
	f	Lcja;	iR	PURPLE_SHULKER_BOX
	f	Lcja;	iS	BLUE_SHULKER_BOX
	f	Lcja;	iT	BROWN_SHULKER_BOX
	f	Lcja;	iU	GREEN_SHULKER_BOX
	f	Lcja;	iV	RED_SHULKER_BOX
	f	Lcja;	iW	BLACK_SHULKER_BOX
	f	Lcja;	iX	WHITE_GLAZED_TERRACOTTA
	f	Lcja;	iY	ORANGE_GLAZED_TERRACOTTA
	f	Lcja;	iZ	MAGENTA_GLAZED_TERRACOTTA
	f	Lcja;	ia	LIGHT_BLUE_STAINED_GLASS_PANE
	f	Lcja;	ib	YELLOW_STAINED_GLASS_PANE
	f	Lcja;	ic	LIME_STAINED_GLASS_PANE
	f	Lcja;	id	PINK_STAINED_GLASS_PANE
	f	Lcja;	ie	GRAY_STAINED_GLASS_PANE
	f	Lcja;	if	LIGHT_GRAY_STAINED_GLASS_PANE
	f	Lcja;	ig	CYAN_STAINED_GLASS_PANE
	f	Lcja;	ih	PURPLE_STAINED_GLASS_PANE
	f	Lcja;	ii	BLUE_STAINED_GLASS_PANE
	f	Lcja;	ij	BROWN_STAINED_GLASS_PANE
	f	Lcja;	ik	GREEN_STAINED_GLASS_PANE
	f	Lcja;	il	RED_STAINED_GLASS_PANE
	f	Lcja;	im	BLACK_STAINED_GLASS_PANE
	f	Lcja;	in	PRISMARINE
	f	Lcja;	io	PRISMARINE_BRICKS
	f	Lcja;	ip	DARK_PRISMARINE
	f	Lcja;	iq	PRISMARINE_STAIRS
	f	Lcja;	ir	PRISMARINE_BRICK_STAIRS
	f	Lcja;	is	DARK_PRISMARINE_STAIRS
	f	Lcja;	it	SEA_LANTERN
	f	Lcja;	iu	RED_SANDSTONE
	f	Lcja;	iv	CHISELED_RED_SANDSTONE
	f	Lcja;	iw	CUT_RED_SANDSTONE
	f	Lcja;	ix	RED_SANDSTONE_STAIRS
	f	Lcja;	iy	REPEATING_COMMAND_BLOCK
	f	Lcja;	iz	CHAIN_COMMAND_BLOCK
	f	Lcja;	jA	GREEN_CONCRETE
	f	Lcja;	jB	RED_CONCRETE
	f	Lcja;	jC	BLACK_CONCRETE
	f	Lcja;	jD	WHITE_CONCRETE_POWDER
	f	Lcja;	jE	ORANGE_CONCRETE_POWDER
	f	Lcja;	jF	MAGENTA_CONCRETE_POWDER
	f	Lcja;	jG	LIGHT_BLUE_CONCRETE_POWDER
	f	Lcja;	jH	YELLOW_CONCRETE_POWDER
	f	Lcja;	jI	LIME_CONCRETE_POWDER
	f	Lcja;	jJ	PINK_CONCRETE_POWDER
	f	Lcja;	jK	GRAY_CONCRETE_POWDER
	f	Lcja;	jL	LIGHT_GRAY_CONCRETE_POWDER
	f	Lcja;	j	COBBLED_DEEPSLATE
	f	Lcja;	jM	CYAN_CONCRETE_POWDER
	f	Lcja;	jN	PURPLE_CONCRETE_POWDER
	f	Lcja;	jO	BLUE_CONCRETE_POWDER
	f	Lcja;	jP	BROWN_CONCRETE_POWDER
	f	Lcja;	jQ	GREEN_CONCRETE_POWDER
	f	Lcja;	jR	RED_CONCRETE_POWDER
	f	Lcja;	jS	BLACK_CONCRETE_POWDER
	f	Lcja;	jT	TURTLE_EGG
	f	Lcja;	jU	SNIFFER_EGG
	f	Lcja;	jV	DEAD_TUBE_CORAL_BLOCK
	f	Lcja;	jW	DEAD_BRAIN_CORAL_BLOCK
	f	Lcja;	jX	DEAD_BUBBLE_CORAL_BLOCK
	f	Lcja;	jY	DEAD_FIRE_CORAL_BLOCK
	f	Lcja;	jZ	DEAD_HORN_CORAL_BLOCK
	f	Lcja;	ja	LIGHT_BLUE_GLAZED_TERRACOTTA
	f	Lcja;	jb	YELLOW_GLAZED_TERRACOTTA
	f	Lcja;	jc	LIME_GLAZED_TERRACOTTA
	f	Lcja;	jd	PINK_GLAZED_TERRACOTTA
	f	Lcja;	je	GRAY_GLAZED_TERRACOTTA
	f	Lcja;	jf	LIGHT_GRAY_GLAZED_TERRACOTTA
	f	Lcja;	jg	CYAN_GLAZED_TERRACOTTA
	f	Lcja;	jh	PURPLE_GLAZED_TERRACOTTA
	f	Lcja;	ji	BLUE_GLAZED_TERRACOTTA
	f	Lcja;	jj	BROWN_GLAZED_TERRACOTTA
	f	Lcja;	jk	GREEN_GLAZED_TERRACOTTA
	f	Lcja;	jl	RED_GLAZED_TERRACOTTA
	f	Lcja;	jm	BLACK_GLAZED_TERRACOTTA
	f	Lcja;	jn	WHITE_CONCRETE
	f	Lcja;	jo	ORANGE_CONCRETE
	f	Lcja;	jp	MAGENTA_CONCRETE
	f	Lcja;	jq	LIGHT_BLUE_CONCRETE
	f	Lcja;	jr	YELLOW_CONCRETE
	f	Lcja;	js	LIME_CONCRETE
	f	Lcja;	jt	PINK_CONCRETE
	f	Lcja;	ju	GRAY_CONCRETE
	f	Lcja;	jv	LIGHT_GRAY_CONCRETE
	f	Lcja;	jw	CYAN_CONCRETE
	f	Lcja;	jx	PURPLE_CONCRETE
	f	Lcja;	jy	BLUE_CONCRETE
	f	Lcja;	jz	BROWN_CONCRETE
	f	Lcja;	kA	CONDUIT
	f	Lcja;	kB	POLISHED_GRANITE_STAIRS
	f	Lcja;	kC	SMOOTH_RED_SANDSTONE_STAIRS
	f	Lcja;	kD	MOSSY_STONE_BRICK_STAIRS
	f	Lcja;	kE	POLISHED_DIORITE_STAIRS
	f	Lcja;	kF	MOSSY_COBBLESTONE_STAIRS
	f	Lcja;	kG	END_STONE_BRICK_STAIRS
	f	Lcja;	kH	STONE_STAIRS
	f	Lcja;	kI	SMOOTH_SANDSTONE_STAIRS
	f	Lcja;	kJ	SMOOTH_QUARTZ_STAIRS
	f	Lcja;	kK	GRANITE_STAIRS
	f	Lcja;	kL	ANDESITE_STAIRS
	f	Lcja;	k	POLISHED_DEEPSLATE
	f	Lcja;	kM	RED_NETHER_BRICK_STAIRS
	f	Lcja;	kN	POLISHED_ANDESITE_STAIRS
	f	Lcja;	kO	DIORITE_STAIRS
	f	Lcja;	kP	COBBLED_DEEPSLATE_STAIRS
	f	Lcja;	kQ	POLISHED_DEEPSLATE_STAIRS
	f	Lcja;	kR	DEEPSLATE_BRICK_STAIRS
	f	Lcja;	kS	DEEPSLATE_TILE_STAIRS
	f	Lcja;	kT	POLISHED_GRANITE_SLAB
	f	Lcja;	kU	SMOOTH_RED_SANDSTONE_SLAB
	f	Lcja;	kV	MOSSY_STONE_BRICK_SLAB
	f	Lcja;	kW	POLISHED_DIORITE_SLAB
	f	Lcja;	kX	MOSSY_COBBLESTONE_SLAB
	f	Lcja;	kY	END_STONE_BRICK_SLAB
	f	Lcja;	kZ	SMOOTH_SANDSTONE_SLAB
	f	Lcja;	ka	TUBE_CORAL_BLOCK
	f	Lcja;	kb	BRAIN_CORAL_BLOCK
	f	Lcja;	kc	BUBBLE_CORAL_BLOCK
	f	Lcja;	kd	FIRE_CORAL_BLOCK
	f	Lcja;	ke	HORN_CORAL_BLOCK
	f	Lcja;	kf	TUBE_CORAL
	f	Lcja;	kg	BRAIN_CORAL
	f	Lcja;	kh	BUBBLE_CORAL
	f	Lcja;	ki	FIRE_CORAL
	f	Lcja;	kj	HORN_CORAL
	f	Lcja;	kk	DEAD_BRAIN_CORAL
	f	Lcja;	kl	DEAD_BUBBLE_CORAL
	f	Lcja;	km	DEAD_FIRE_CORAL
	f	Lcja;	kn	DEAD_HORN_CORAL
	f	Lcja;	ko	DEAD_TUBE_CORAL
	f	Lcja;	kp	TUBE_CORAL_FAN
	f	Lcja;	kq	BRAIN_CORAL_FAN
	f	Lcja;	kr	BUBBLE_CORAL_FAN
	f	Lcja;	ks	FIRE_CORAL_FAN
	f	Lcja;	kt	HORN_CORAL_FAN
	f	Lcja;	ku	DEAD_TUBE_CORAL_FAN
	f	Lcja;	kv	DEAD_BRAIN_CORAL_FAN
	f	Lcja;	kw	DEAD_BUBBLE_CORAL_FAN
	f	Lcja;	kx	DEAD_FIRE_CORAL_FAN
	f	Lcja;	ky	DEAD_HORN_CORAL_FAN
	f	Lcja;	kz	BLUE_ICE
	f	Lcja;	lA	LEVER
	f	Lcja;	lB	LIGHTNING_ROD
	f	Lcja;	lC	DAYLIGHT_DETECTOR
	f	Lcja;	lD	SCULK_SENSOR
	f	Lcja;	lE	CALIBRATED_SCULK_SENSOR
	f	Lcja;	lF	TRIPWIRE_HOOK
	f	Lcja;	lG	TRAPPED_CHEST
	f	Lcja;	lH	TNT
	f	Lcja;	lI	REDSTONE_LAMP
	f	Lcja;	lJ	NOTE_BLOCK
	f	Lcja;	lK	STONE_BUTTON
	f	Lcja;	lL	POLISHED_BLACKSTONE_BUTTON
	f	Lcja;	l	CALCITE
	f	Lcja;	lM	OAK_BUTTON
	f	Lcja;	lN	SPRUCE_BUTTON
	f	Lcja;	lO	BIRCH_BUTTON
	f	Lcja;	lP	JUNGLE_BUTTON
	f	Lcja;	lQ	ACACIA_BUTTON
	f	Lcja;	lR	CHERRY_BUTTON
	f	Lcja;	lS	DARK_OAK_BUTTON
	f	Lcja;	lT	MANGROVE_BUTTON
	f	Lcja;	lU	BAMBOO_BUTTON
	f	Lcja;	lV	CRIMSON_BUTTON
	f	Lcja;	lW	WARPED_BUTTON
	f	Lcja;	lX	STONE_PRESSURE_PLATE
	f	Lcja;	lY	POLISHED_BLACKSTONE_PRESSURE_PLATE
	f	Lcja;	lZ	LIGHT_WEIGHTED_PRESSURE_PLATE
	f	Lcja;	la	SMOOTH_QUARTZ_SLAB
	f	Lcja;	lb	GRANITE_SLAB
	f	Lcja;	lc	ANDESITE_SLAB
	f	Lcja;	ld	RED_NETHER_BRICK_SLAB
	f	Lcja;	le	POLISHED_ANDESITE_SLAB
	f	Lcja;	lf	DIORITE_SLAB
	f	Lcja;	lg	COBBLED_DEEPSLATE_SLAB
	f	Lcja;	lh	POLISHED_DEEPSLATE_SLAB
	f	Lcja;	li	DEEPSLATE_BRICK_SLAB
	f	Lcja;	lj	DEEPSLATE_TILE_SLAB
	f	Lcja;	lk	SCAFFOLDING
	f	Lcja;	ll	REDSTONE
	f	Lcja;	lm	REDSTONE_TORCH
	f	Lcja;	ln	REDSTONE_BLOCK
	f	Lcja;	lo	REPEATER
	f	Lcja;	lp	COMPARATOR
	f	Lcja;	lq	PISTON
	f	Lcja;	lr	STICKY_PISTON
	f	Lcja;	ls	SLIME_BLOCK
	f	Lcja;	lt	HONEY_BLOCK
	f	Lcja;	lu	OBSERVER
	f	Lcja;	lv	HOPPER
	f	Lcja;	lw	DISPENSER
	f	Lcja;	lx	DROPPER
	f	Lcja;	ly	LECTERN
	f	Lcja;	lz	TARGET
	f	Lcja;	mA	SPRUCE_TRAPDOOR
	f	Lcja;	mB	BIRCH_TRAPDOOR
	f	Lcja;	mC	JUNGLE_TRAPDOOR
	f	Lcja;	mD	ACACIA_TRAPDOOR
	f	Lcja;	mE	CHERRY_TRAPDOOR
	f	Lcja;	mF	DARK_OAK_TRAPDOOR
	f	Lcja;	mG	MANGROVE_TRAPDOOR
	f	Lcja;	mH	BAMBOO_TRAPDOOR
	f	Lcja;	mI	CRIMSON_TRAPDOOR
	f	Lcja;	mJ	WARPED_TRAPDOOR
	f	Lcja;	mK	OAK_FENCE_GATE
	f	Lcja;	mL	SPRUCE_FENCE_GATE
	f	Lcja;	m	TUFF
	f	Lcja;	mM	BIRCH_FENCE_GATE
	f	Lcja;	mN	JUNGLE_FENCE_GATE
	f	Lcja;	mO	ACACIA_FENCE_GATE
	f	Lcja;	mP	CHERRY_FENCE_GATE
	f	Lcja;	mQ	DARK_OAK_FENCE_GATE
	f	Lcja;	mR	MANGROVE_FENCE_GATE
	f	Lcja;	mS	BAMBOO_FENCE_GATE
	f	Lcja;	mT	CRIMSON_FENCE_GATE
	f	Lcja;	mU	WARPED_FENCE_GATE
	f	Lcja;	mV	POWERED_RAIL
	f	Lcja;	mW	DETECTOR_RAIL
	f	Lcja;	mX	RAIL
	f	Lcja;	mY	ACTIVATOR_RAIL
	f	Lcja;	mZ	SADDLE
	f	Lcja;	ma	HEAVY_WEIGHTED_PRESSURE_PLATE
	f	Lcja;	mb	OAK_PRESSURE_PLATE
	f	Lcja;	mc	SPRUCE_PRESSURE_PLATE
	f	Lcja;	md	BIRCH_PRESSURE_PLATE
	f	Lcja;	me	JUNGLE_PRESSURE_PLATE
	f	Lcja;	mf	ACACIA_PRESSURE_PLATE
	f	Lcja;	mg	CHERRY_PRESSURE_PLATE
	f	Lcja;	mh	DARK_OAK_PRESSURE_PLATE
	f	Lcja;	mi	MANGROVE_PRESSURE_PLATE
	f	Lcja;	mj	BAMBOO_PRESSURE_PLATE
	f	Lcja;	mk	CRIMSON_PRESSURE_PLATE
	f	Lcja;	ml	WARPED_PRESSURE_PLATE
	f	Lcja;	mm	IRON_DOOR
	f	Lcja;	mn	OAK_DOOR
	f	Lcja;	mo	SPRUCE_DOOR
	f	Lcja;	mp	BIRCH_DOOR
	f	Lcja;	mq	JUNGLE_DOOR
	f	Lcja;	mr	ACACIA_DOOR
	f	Lcja;	ms	CHERRY_DOOR
	f	Lcja;	mt	DARK_OAK_DOOR
	f	Lcja;	mu	MANGROVE_DOOR
	f	Lcja;	mv	BAMBOO_DOOR
	f	Lcja;	mw	CRIMSON_DOOR
	f	Lcja;	mx	WARPED_DOOR
	f	Lcja;	my	IRON_TRAPDOOR
	f	Lcja;	mz	OAK_TRAPDOOR
	f	Lcja;	nA	STRUCTURE_BLOCK
	f	Lcja;	nB	JIGSAW
	f	Lcja;	nC	TURTLE_HELMET
	f	Lcja;	nD	SCUTE
	f	Lcja;	nE	FLINT_AND_STEEL
	f	Lcja;	nF	APPLE
	f	Lcja;	nG	BOW
	f	Lcja;	nH	ARROW
	f	Lcja;	nI	COAL
	f	Lcja;	nJ	CHARCOAL
	f	Lcja;	nK	DIAMOND
	f	Lcja;	nL	EMERALD
	f	Lcja;	n	DRIPSTONE_BLOCK
	f	Lcja;	nM	LAPIS_LAZULI
	f	Lcja;	nN	QUARTZ
	f	Lcja;	nO	AMETHYST_SHARD
	f	Lcja;	nP	RAW_IRON
	f	Lcja;	nQ	IRON_INGOT
	f	Lcja;	nR	RAW_COPPER
	f	Lcja;	nS	COPPER_INGOT
	f	Lcja;	nT	RAW_GOLD
	f	Lcja;	nU	GOLD_INGOT
	f	Lcja;	nV	NETHERITE_INGOT
	f	Lcja;	nW	NETHERITE_SCRAP
	f	Lcja;	nX	WOODEN_SWORD
	f	Lcja;	nY	WOODEN_SHOVEL
	f	Lcja;	nZ	WOODEN_PICKAXE
	f	Lcja;	na	MINECART
	f	Lcja;	nb	CHEST_MINECART
	f	Lcja;	nc	FURNACE_MINECART
	f	Lcja;	nd	TNT_MINECART
	f	Lcja;	ne	HOPPER_MINECART
	f	Lcja;	nf	CARROT_ON_A_STICK
	f	Lcja;	ng	WARPED_FUNGUS_ON_A_STICK
	f	Lcja;	nh	ELYTRA
	f	Lcja;	ni	OAK_BOAT
	f	Lcja;	nj	OAK_CHEST_BOAT
	f	Lcja;	nk	SPRUCE_BOAT
	f	Lcja;	nl	SPRUCE_CHEST_BOAT
	f	Lcja;	nm	BIRCH_BOAT
	f	Lcja;	nn	BIRCH_CHEST_BOAT
	f	Lcja;	no	JUNGLE_BOAT
	f	Lcja;	np	JUNGLE_CHEST_BOAT
	f	Lcja;	nq	ACACIA_BOAT
	f	Lcja;	nr	ACACIA_CHEST_BOAT
	f	Lcja;	ns	CHERRY_BOAT
	f	Lcja;	nt	CHERRY_CHEST_BOAT
	f	Lcja;	nu	DARK_OAK_BOAT
	f	Lcja;	nv	DARK_OAK_CHEST_BOAT
	f	Lcja;	nw	MANGROVE_BOAT
	f	Lcja;	nx	MANGROVE_CHEST_BOAT
	f	Lcja;	ny	BAMBOO_RAFT
	f	Lcja;	nz	BAMBOO_CHEST_RAFT
	f	Lcja;	oA	NETHERITE_HOE
	f	Lcja;	oB	STICK
	f	Lcja;	oC	BOWL
	f	Lcja;	oD	MUSHROOM_STEW
	f	Lcja;	oE	STRING
	f	Lcja;	oF	FEATHER
	f	Lcja;	oG	GUNPOWDER
	f	Lcja;	oH	WHEAT_SEEDS
	f	Lcja;	oI	WHEAT
	f	Lcja;	oJ	BREAD
	f	Lcja;	oK	LEATHER_HELMET
	f	Lcja;	oL	LEATHER_CHESTPLATE
	f	Lcja;	o	GRASS_BLOCK
	f	Lcja;	oM	LEATHER_LEGGINGS
	f	Lcja;	oN	LEATHER_BOOTS
	f	Lcja;	oO	CHAINMAIL_HELMET
	f	Lcja;	oP	CHAINMAIL_CHESTPLATE
	f	Lcja;	oQ	CHAINMAIL_LEGGINGS
	f	Lcja;	oR	CHAINMAIL_BOOTS
	f	Lcja;	oS	IRON_HELMET
	f	Lcja;	oT	IRON_CHESTPLATE
	f	Lcja;	oU	IRON_LEGGINGS
	f	Lcja;	oV	IRON_BOOTS
	f	Lcja;	oW	DIAMOND_HELMET
	f	Lcja;	oX	DIAMOND_CHESTPLATE
	f	Lcja;	oY	DIAMOND_LEGGINGS
	f	Lcja;	oZ	DIAMOND_BOOTS
	f	Lcja;	oa	WOODEN_AXE
	f	Lcja;	ob	WOODEN_HOE
	f	Lcja;	oc	STONE_SWORD
	f	Lcja;	od	STONE_SHOVEL
	f	Lcja;	oe	STONE_PICKAXE
	f	Lcja;	of	STONE_AXE
	f	Lcja;	og	STONE_HOE
	f	Lcja;	oh	GOLDEN_SWORD
	f	Lcja;	oi	GOLDEN_SHOVEL
	f	Lcja;	oj	GOLDEN_PICKAXE
	f	Lcja;	ok	GOLDEN_AXE
	f	Lcja;	ol	GOLDEN_HOE
	f	Lcja;	om	IRON_SWORD
	f	Lcja;	on	IRON_SHOVEL
	f	Lcja;	oo	IRON_PICKAXE
	f	Lcja;	op	IRON_AXE
	f	Lcja;	oq	IRON_HOE
	f	Lcja;	or	DIAMOND_SWORD
	f	Lcja;	os	DIAMOND_SHOVEL
	f	Lcja;	ot	DIAMOND_PICKAXE
	f	Lcja;	ou	DIAMOND_AXE
	f	Lcja;	ov	DIAMOND_HOE
	f	Lcja;	ow	NETHERITE_SWORD
	f	Lcja;	ox	NETHERITE_SHOVEL
	f	Lcja;	oy	NETHERITE_PICKAXE
	f	Lcja;	oz	NETHERITE_AXE
	f	Lcja;	pA	SPRUCE_HANGING_SIGN
	f	Lcja;	pB	BIRCH_HANGING_SIGN
	f	Lcja;	pC	JUNGLE_HANGING_SIGN
	f	Lcja;	pD	ACACIA_HANGING_SIGN
	f	Lcja;	pE	CHERRY_HANGING_SIGN
	f	Lcja;	pF	DARK_OAK_HANGING_SIGN
	f	Lcja;	pG	MANGROVE_HANGING_SIGN
	f	Lcja;	pH	BAMBOO_HANGING_SIGN
	f	Lcja;	pI	CRIMSON_HANGING_SIGN
	f	Lcja;	pJ	WARPED_HANGING_SIGN
	f	Lcja;	pK	BUCKET
	f	Lcja;	pL	WATER_BUCKET
	f	Lcja;	p	DIRT
	f	Lcja;	pM	LAVA_BUCKET
	f	Lcja;	pN	POWDER_SNOW_BUCKET
	f	Lcja;	pO	SNOWBALL
	f	Lcja;	pP	LEATHER
	f	Lcja;	pQ	MILK_BUCKET
	f	Lcja;	pR	PUFFERFISH_BUCKET
	f	Lcja;	pS	SALMON_BUCKET
	f	Lcja;	pT	COD_BUCKET
	f	Lcja;	pU	TROPICAL_FISH_BUCKET
	f	Lcja;	pV	AXOLOTL_BUCKET
	f	Lcja;	pW	TADPOLE_BUCKET
	f	Lcja;	pX	BRICK
	f	Lcja;	pY	CLAY_BALL
	f	Lcja;	pZ	DRIED_KELP_BLOCK
	f	Lcja;	pa	GOLDEN_HELMET
	f	Lcja;	pb	GOLDEN_CHESTPLATE
	f	Lcja;	pc	GOLDEN_LEGGINGS
	f	Lcja;	pd	GOLDEN_BOOTS
	f	Lcja;	pe	NETHERITE_HELMET
	f	Lcja;	pf	NETHERITE_CHESTPLATE
	f	Lcja;	pg	NETHERITE_LEGGINGS
	f	Lcja;	ph	NETHERITE_BOOTS
	f	Lcja;	pi	FLINT
	f	Lcja;	pj	PORKCHOP
	f	Lcja;	pk	COOKED_PORKCHOP
	f	Lcja;	pl	PAINTING
	f	Lcja;	pm	GOLDEN_APPLE
	f	Lcja;	pn	ENCHANTED_GOLDEN_APPLE
	f	Lcja;	po	OAK_SIGN
	f	Lcja;	pp	SPRUCE_SIGN
	f	Lcja;	pq	BIRCH_SIGN
	f	Lcja;	pr	JUNGLE_SIGN
	f	Lcja;	ps	ACACIA_SIGN
	f	Lcja;	pt	CHERRY_SIGN
	f	Lcja;	pu	DARK_OAK_SIGN
	f	Lcja;	pv	MANGROVE_SIGN
	f	Lcja;	pw	BAMBOO_SIGN
	f	Lcja;	px	CRIMSON_SIGN
	f	Lcja;	py	WARPED_SIGN
	f	Lcja;	pz	OAK_HANGING_SIGN
	f	Lcja;	qA	PINK_DYE
	f	Lcja;	qB	GRAY_DYE
	f	Lcja;	qC	LIGHT_GRAY_DYE
	f	Lcja;	qD	CYAN_DYE
	f	Lcja;	qE	PURPLE_DYE
	f	Lcja;	qF	BLUE_DYE
	f	Lcja;	qG	BROWN_DYE
	f	Lcja;	qH	GREEN_DYE
	f	Lcja;	qI	RED_DYE
	f	Lcja;	qJ	BLACK_DYE
	f	Lcja;	qK	BONE_MEAL
	f	Lcja;	qL	BONE
	f	Lcja;	q	COARSE_DIRT
	f	Lcja;	qM	SUGAR
	f	Lcja;	qN	CAKE
	f	Lcja;	qO	WHITE_BED
	f	Lcja;	qP	ORANGE_BED
	f	Lcja;	qQ	MAGENTA_BED
	f	Lcja;	qR	LIGHT_BLUE_BED
	f	Lcja;	qS	YELLOW_BED
	f	Lcja;	qT	LIME_BED
	f	Lcja;	qU	PINK_BED
	f	Lcja;	qV	GRAY_BED
	f	Lcja;	qW	LIGHT_GRAY_BED
	f	Lcja;	qX	CYAN_BED
	f	Lcja;	qY	PURPLE_BED
	f	Lcja;	qZ	BLUE_BED
	f	Lcja;	qa	PAPER
	f	Lcja;	qb	BOOK
	f	Lcja;	qc	SLIME_BALL
	f	Lcja;	qd	EGG
	f	Lcja;	qe	COMPASS
	f	Lcja;	qf	RECOVERY_COMPASS
	f	Lcja;	qg	BUNDLE
	f	Lcja;	qh	FISHING_ROD
	f	Lcja;	qi	CLOCK
	f	Lcja;	qj	SPYGLASS
	f	Lcja;	qk	GLOWSTONE_DUST
	f	Lcja;	ql	COD
	f	Lcja;	qm	SALMON
	f	Lcja;	qn	TROPICAL_FISH
	f	Lcja;	qo	PUFFERFISH
	f	Lcja;	qp	COOKED_COD
	f	Lcja;	qq	COOKED_SALMON
	f	Lcja;	qr	INK_SAC
	f	Lcja;	qs	GLOW_INK_SAC
	f	Lcja;	qt	COCOA_BEANS
	f	Lcja;	qu	WHITE_DYE
	f	Lcja;	qv	ORANGE_DYE
	f	Lcja;	qw	MAGENTA_DYE
	f	Lcja;	qx	LIGHT_BLUE_DYE
	f	Lcja;	qy	YELLOW_DYE
	f	Lcja;	qz	LIME_DYE
	f	Lcja;	rA	MAGMA_CREAM
	f	Lcja;	rB	BREWING_STAND
	f	Lcja;	rC	CAULDRON
	f	Lcja;	rD	ENDER_EYE
	f	Lcja;	rE	GLISTERING_MELON_SLICE
	f	Lcja;	rF	ALLAY_SPAWN_EGG
	f	Lcja;	rG	AXOLOTL_SPAWN_EGG
	f	Lcja;	rH	BAT_SPAWN_EGG
	f	Lcja;	rI	BEE_SPAWN_EGG
	f	Lcja;	rJ	BLAZE_SPAWN_EGG
	f	Lcja;	rK	CAT_SPAWN_EGG
	f	Lcja;	rL	CAMEL_SPAWN_EGG
	f	Lcja;	r	PODZOL
	f	Lcja;	rM	CAVE_SPIDER_SPAWN_EGG
	f	Lcja;	rN	CHICKEN_SPAWN_EGG
	f	Lcja;	rO	COD_SPAWN_EGG
	f	Lcja;	rP	COW_SPAWN_EGG
	f	Lcja;	rQ	CREEPER_SPAWN_EGG
	f	Lcja;	rR	DOLPHIN_SPAWN_EGG
	f	Lcja;	rS	DONKEY_SPAWN_EGG
	f	Lcja;	rT	DROWNED_SPAWN_EGG
	f	Lcja;	rU	ELDER_GUARDIAN_SPAWN_EGG
	f	Lcja;	rV	ENDER_DRAGON_SPAWN_EGG
	f	Lcja;	rW	ENDERMAN_SPAWN_EGG
	f	Lcja;	rX	ENDERMITE_SPAWN_EGG
	f	Lcja;	rY	EVOKER_SPAWN_EGG
	f	Lcja;	rZ	FOX_SPAWN_EGG
	f	Lcja;	ra	BROWN_BED
	f	Lcja;	rb	GREEN_BED
	f	Lcja;	rc	RED_BED
	f	Lcja;	rd	BLACK_BED
	f	Lcja;	re	COOKIE
	f	Lcja;	rf	FILLED_MAP
	f	Lcja;	rg	SHEARS
	f	Lcja;	rh	MELON_SLICE
	f	Lcja;	ri	DRIED_KELP
	f	Lcja;	rj	PUMPKIN_SEEDS
	f	Lcja;	rk	MELON_SEEDS
	f	Lcja;	rl	BEEF
	f	Lcja;	rm	COOKED_BEEF
	f	Lcja;	rn	CHICKEN
	f	Lcja;	ro	COOKED_CHICKEN
	f	Lcja;	rp	ROTTEN_FLESH
	f	Lcja;	rq	ENDER_PEARL
	f	Lcja;	rr	BLAZE_ROD
	f	Lcja;	rs	GHAST_TEAR
	f	Lcja;	rt	GOLD_NUGGET
	f	Lcja;	ru	NETHER_WART
	f	Lcja;	rv	POTION
	f	Lcja;	rw	GLASS_BOTTLE
	f	Lcja;	rx	SPIDER_EYE
	f	Lcja;	ry	FERMENTED_SPIDER_EYE
	f	Lcja;	rz	BLAZE_POWDER
	f	Lcja;	sA	SHEEP_SPAWN_EGG
	f	Lcja;	sB	SHULKER_SPAWN_EGG
	f	Lcja;	sC	SILVERFISH_SPAWN_EGG
	f	Lcja;	sD	SKELETON_SPAWN_EGG
	f	Lcja;	sE	SKELETON_HORSE_SPAWN_EGG
	f	Lcja;	sF	SLIME_SPAWN_EGG
	f	Lcja;	sG	SNIFFER_SPAWN_EGG
	f	Lcja;	sH	SNOW_GOLEM_SPAWN_EGG
	f	Lcja;	sI	SPIDER_SPAWN_EGG
	f	Lcja;	sJ	SQUID_SPAWN_EGG
	f	Lcja;	sK	STRAY_SPAWN_EGG
	f	Lcja;	sL	STRIDER_SPAWN_EGG
	f	Lcja;	s	ROOTED_DIRT
	f	Lcja;	sM	TADPOLE_SPAWN_EGG
	f	Lcja;	sN	TRADER_LLAMA_SPAWN_EGG
	f	Lcja;	sO	TROPICAL_FISH_SPAWN_EGG
	f	Lcja;	sP	TURTLE_SPAWN_EGG
	f	Lcja;	sQ	VEX_SPAWN_EGG
	f	Lcja;	sR	VILLAGER_SPAWN_EGG
	f	Lcja;	sS	VINDICATOR_SPAWN_EGG
	f	Lcja;	sT	WANDERING_TRADER_SPAWN_EGG
	f	Lcja;	sU	WARDEN_SPAWN_EGG
	f	Lcja;	sV	WITCH_SPAWN_EGG
	f	Lcja;	sW	WITHER_SPAWN_EGG
	f	Lcja;	sX	WITHER_SKELETON_SPAWN_EGG
	f	Lcja;	sY	WOLF_SPAWN_EGG
	f	Lcja;	sZ	ZOGLIN_SPAWN_EGG
	f	Lcja;	sa	FROG_SPAWN_EGG
	f	Lcja;	sb	GHAST_SPAWN_EGG
	f	Lcja;	sc	GLOW_SQUID_SPAWN_EGG
	f	Lcja;	sd	GOAT_SPAWN_EGG
	f	Lcja;	se	GUARDIAN_SPAWN_EGG
	f	Lcja;	sf	HOGLIN_SPAWN_EGG
	f	Lcja;	sg	HORSE_SPAWN_EGG
	f	Lcja;	sh	HUSK_SPAWN_EGG
	f	Lcja;	si	IRON_GOLEM_SPAWN_EGG
	f	Lcja;	sj	LLAMA_SPAWN_EGG
	f	Lcja;	sk	MAGMA_CUBE_SPAWN_EGG
	f	Lcja;	sl	MOOSHROOM_SPAWN_EGG
	f	Lcja;	sm	MULE_SPAWN_EGG
	f	Lcja;	sn	OCELOT_SPAWN_EGG
	f	Lcja;	so	PANDA_SPAWN_EGG
	f	Lcja;	sp	PARROT_SPAWN_EGG
	f	Lcja;	sq	PHANTOM_SPAWN_EGG
	f	Lcja;	sr	PIG_SPAWN_EGG
	f	Lcja;	ss	PIGLIN_SPAWN_EGG
	f	Lcja;	st	PIGLIN_BRUTE_SPAWN_EGG
	f	Lcja;	su	PILLAGER_SPAWN_EGG
	f	Lcja;	sv	POLAR_BEAR_SPAWN_EGG
	f	Lcja;	sw	PUFFERFISH_SPAWN_EGG
	f	Lcja;	sx	RABBIT_SPAWN_EGG
	f	Lcja;	sy	RAVAGER_SPAWN_EGG
	f	Lcja;	sz	SALMON_SPAWN_EGG
	f	Lcja;	tA	FIREWORK_ROCKET
	f	Lcja;	tB	FIREWORK_STAR
	f	Lcja;	tC	ENCHANTED_BOOK
	f	Lcja;	tD	NETHER_BRICK
	f	Lcja;	tE	PRISMARINE_SHARD
	f	Lcja;	tF	PRISMARINE_CRYSTALS
	f	Lcja;	tG	RABBIT
	f	Lcja;	tH	COOKED_RABBIT
	f	Lcja;	tI	RABBIT_STEW
	f	Lcja;	tJ	RABBIT_FOOT
	f	Lcja;	tK	RABBIT_HIDE
	f	Lcja;	tL	ARMOR_STAND
	f	Lcja;	t	MUD
	f	Lcja;	tM	IRON_HORSE_ARMOR
	f	Lcja;	tN	GOLDEN_HORSE_ARMOR
	f	Lcja;	tO	DIAMOND_HORSE_ARMOR
	f	Lcja;	tP	LEATHER_HORSE_ARMOR
	f	Lcja;	tQ	LEAD
	f	Lcja;	tR	NAME_TAG
	f	Lcja;	tS	COMMAND_BLOCK_MINECART
	f	Lcja;	tT	MUTTON
	f	Lcja;	tU	COOKED_MUTTON
	f	Lcja;	tV	WHITE_BANNER
	f	Lcja;	tW	ORANGE_BANNER
	f	Lcja;	tX	MAGENTA_BANNER
	f	Lcja;	tY	LIGHT_BLUE_BANNER
	f	Lcja;	tZ	YELLOW_BANNER
	f	Lcja;	ta	ZOMBIE_SPAWN_EGG
	f	Lcja;	tb	ZOMBIE_HORSE_SPAWN_EGG
	f	Lcja;	tc	ZOMBIE_VILLAGER_SPAWN_EGG
	f	Lcja;	td	ZOMBIFIED_PIGLIN_SPAWN_EGG
	f	Lcja;	te	EXPERIENCE_BOTTLE
	f	Lcja;	tf	FIRE_CHARGE
	f	Lcja;	tg	WRITABLE_BOOK
	f	Lcja;	th	WRITTEN_BOOK
	f	Lcja;	ti	ITEM_FRAME
	f	Lcja;	tj	GLOW_ITEM_FRAME
	f	Lcja;	tk	FLOWER_POT
	f	Lcja;	tl	CARROT
	f	Lcja;	tm	POTATO
	f	Lcja;	tn	BAKED_POTATO
	f	Lcja;	to	POISONOUS_POTATO
	f	Lcja;	tp	MAP
	f	Lcja;	tq	GOLDEN_CARROT
	f	Lcja;	tr	SKELETON_SKULL
	f	Lcja;	ts	WITHER_SKELETON_SKULL
	f	Lcja;	tt	PLAYER_HEAD
	f	Lcja;	tu	ZOMBIE_HEAD
	f	Lcja;	tv	CREEPER_HEAD
	f	Lcja;	tw	DRAGON_HEAD
	f	Lcja;	tx	PIGLIN_HEAD
	f	Lcja;	ty	NETHER_STAR
	f	Lcja;	tz	PUMPKIN_PIE
	f	Lcja;	uA	SHULKER_SHELL
	f	Lcja;	uB	IRON_NUGGET
	f	Lcja;	uC	KNOWLEDGE_BOOK
	f	Lcja;	uD	DEBUG_STICK
	f	Lcja;	uE	MUSIC_DISC_13
	f	Lcja;	uF	MUSIC_DISC_CAT
	f	Lcja;	uG	MUSIC_DISC_BLOCKS
	f	Lcja;	uH	MUSIC_DISC_CHIRP
	f	Lcja;	uI	MUSIC_DISC_FAR
	f	Lcja;	uJ	MUSIC_DISC_MALL
	f	Lcja;	uK	MUSIC_DISC_MELLOHI
	f	Lcja;	uL	MUSIC_DISC_STAL
	f	Lcja;	u	CRIMSON_NYLIUM
	f	Lcja;	uM	MUSIC_DISC_STRAD
	f	Lcja;	uN	MUSIC_DISC_WARD
	f	Lcja;	uO	MUSIC_DISC_11
	f	Lcja;	uP	MUSIC_DISC_WAIT
	f	Lcja;	uQ	MUSIC_DISC_OTHERSIDE
	f	Lcja;	uR	MUSIC_DISC_RELIC
	f	Lcja;	uS	MUSIC_DISC_5
	f	Lcja;	uT	MUSIC_DISC_PIGSTEP
	f	Lcja;	uU	DISC_FRAGMENT_5
	f	Lcja;	uV	TRIDENT
	f	Lcja;	uW	PHANTOM_MEMBRANE
	f	Lcja;	uX	NAUTILUS_SHELL
	f	Lcja;	uY	HEART_OF_THE_SEA
	f	Lcja;	uZ	CROSSBOW
	f	Lcja;	ua	LIME_BANNER
	f	Lcja;	ub	PINK_BANNER
	f	Lcja;	uc	GRAY_BANNER
	f	Lcja;	ud	LIGHT_GRAY_BANNER
	f	Lcja;	ue	CYAN_BANNER
	f	Lcja;	uf	PURPLE_BANNER
	f	Lcja;	ug	BLUE_BANNER
	f	Lcja;	uh	BROWN_BANNER
	f	Lcja;	ui	GREEN_BANNER
	f	Lcja;	uj	RED_BANNER
	f	Lcja;	uk	BLACK_BANNER
	f	Lcja;	ul	END_CRYSTAL
	f	Lcja;	um	CHORUS_FRUIT
	f	Lcja;	un	POPPED_CHORUS_FRUIT
	f	Lcja;	uo	TORCHFLOWER_SEEDS
	f	Lcja;	up	PITCHER_POD
	f	Lcja;	uq	BEETROOT
	f	Lcja;	ur	BEETROOT_SEEDS
	f	Lcja;	us	BEETROOT_SOUP
	f	Lcja;	ut	DRAGON_BREATH
	f	Lcja;	uu	SPLASH_POTION
	f	Lcja;	uv	SPECTRAL_ARROW
	f	Lcja;	uw	TIPPED_ARROW
	f	Lcja;	ux	LINGERING_POTION
	f	Lcja;	uy	SHIELD
	f	Lcja;	uz	TOTEM_OF_UNDYING
	f	Lcja;	vA	HONEYCOMB
	f	Lcja;	vB	BEE_NEST
	f	Lcja;	vC	BEEHIVE
	f	Lcja;	vD	HONEY_BOTTLE
	f	Lcja;	vE	HONEYCOMB_BLOCK
	f	Lcja;	vF	LODESTONE
	f	Lcja;	vG	CRYING_OBSIDIAN
	f	Lcja;	vH	BLACKSTONE
	f	Lcja;	vI	BLACKSTONE_SLAB
	f	Lcja;	vJ	BLACKSTONE_STAIRS
	f	Lcja;	vK	GILDED_BLACKSTONE
	f	Lcja;	vL	POLISHED_BLACKSTONE
	f	Lcja;	v	WARPED_NYLIUM
	f	Lcja;	vM	POLISHED_BLACKSTONE_SLAB
	f	Lcja;	vN	POLISHED_BLACKSTONE_STAIRS
	f	Lcja;	vO	CHISELED_POLISHED_BLACKSTONE
	f	Lcja;	vP	POLISHED_BLACKSTONE_BRICKS
	f	Lcja;	vQ	POLISHED_BLACKSTONE_BRICK_SLAB
	f	Lcja;	vR	POLISHED_BLACKSTONE_BRICK_STAIRS
	f	Lcja;	vS	CRACKED_POLISHED_BLACKSTONE_BRICKS
	f	Lcja;	vT	RESPAWN_ANCHOR
	f	Lcja;	vU	CANDLE
	f	Lcja;	vV	WHITE_CANDLE
	f	Lcja;	vW	ORANGE_CANDLE
	f	Lcja;	vX	MAGENTA_CANDLE
	f	Lcja;	vY	LIGHT_BLUE_CANDLE
	f	Lcja;	vZ	YELLOW_CANDLE
	f	Lcja;	va	SUSPICIOUS_STEW
	f	Lcja;	vb	LOOM
	f	Lcja;	vc	FLOWER_BANNER_PATTERN
	f	Lcja;	vd	CREEPER_BANNER_PATTERN
	f	Lcja;	ve	SKULL_BANNER_PATTERN
	f	Lcja;	vf	MOJANG_BANNER_PATTERN
	f	Lcja;	vg	GLOBE_BANNER_PATTERN
	f	Lcja;	vh	PIGLIN_BANNER_PATTERN
	f	Lcja;	vi	GOAT_HORN
	f	Lcja;	vj	COMPOSTER
	f	Lcja;	vk	BARREL
	f	Lcja;	vl	SMOKER
	f	Lcja;	vm	BLAST_FURNACE
	f	Lcja;	vn	CARTOGRAPHY_TABLE
	f	Lcja;	vo	FLETCHING_TABLE
	f	Lcja;	vp	GRINDSTONE
	f	Lcja;	vq	SMITHING_TABLE
	f	Lcja;	vr	STONECUTTER
	f	Lcja;	vs	BELL
	f	Lcja;	vt	LANTERN
	f	Lcja;	vu	SOUL_LANTERN
	f	Lcja;	vv	SWEET_BERRIES
	f	Lcja;	vw	GLOW_BERRIES
	f	Lcja;	vx	CAMPFIRE
	f	Lcja;	vy	SOUL_CAMPFIRE
	f	Lcja;	vz	SHROOMLIGHT
	f	Lcja;	wA	WILD_ARMOR_TRIM_SMITHING_TEMPLATE
	f	Lcja;	wB	WARD_ARMOR_TRIM_SMITHING_TEMPLATE
	f	Lcja;	wC	EYE_ARMOR_TRIM_SMITHING_TEMPLATE
	f	Lcja;	wD	VEX_ARMOR_TRIM_SMITHING_TEMPLATE
	f	Lcja;	wE	TIDE_ARMOR_TRIM_SMITHING_TEMPLATE
	f	Lcja;	wF	SNOUT_ARMOR_TRIM_SMITHING_TEMPLATE
	f	Lcja;	wG	RIB_ARMOR_TRIM_SMITHING_TEMPLATE
	f	Lcja;	wH	SPIRE_ARMOR_TRIM_SMITHING_TEMPLATE
	f	Lcja;	wI	WAYFINDER_ARMOR_TRIM_SMITHING_TEMPLATE
	f	Lcja;	wJ	SHAPER_ARMOR_TRIM_SMITHING_TEMPLATE
	f	Lcja;	wK	SILENCE_ARMOR_TRIM_SMITHING_TEMPLATE
	f	Lcja;	wL	RAISER_ARMOR_TRIM_SMITHING_TEMPLATE
	f	Lcja;	w	COBBLESTONE
	f	Lcja;	wM	HOST_ARMOR_TRIM_SMITHING_TEMPLATE
	f	Lcja;	wN	ANGLER_POTTERY_SHERD
	f	Lcja;	wO	ARCHER_POTTERY_SHERD
	f	Lcja;	wP	ARMS_UP_POTTERY_SHERD
	f	Lcja;	wQ	BLADE_POTTERY_SHERD
	f	Lcja;	wR	BREWER_POTTERY_SHERD
	f	Lcja;	wS	BURN_POTTERY_SHERD
	f	Lcja;	wT	DANGER_POTTERY_SHERD
	f	Lcja;	wU	EXPLORER_POTTERY_SHERD
	f	Lcja;	wV	FRIEND_POTTERY_SHERD
	f	Lcja;	wW	HEART_POTTERY_SHERD
	f	Lcja;	wX	HEARTBREAK_POTTERY_SHERD
	f	Lcja;	wY	HOWL_POTTERY_SHERD
	f	Lcja;	wZ	MINER_POTTERY_SHERD
	f	Lcja;	wa	LIME_CANDLE
	f	Lcja;	wb	PINK_CANDLE
	f	Lcja;	wc	GRAY_CANDLE
	f	Lcja;	wd	LIGHT_GRAY_CANDLE
	f	Lcja;	we	CYAN_CANDLE
	f	Lcja;	wf	PURPLE_CANDLE
	f	Lcja;	wg	BLUE_CANDLE
	f	Lcja;	wh	BROWN_CANDLE
	f	Lcja;	wi	GREEN_CANDLE
	f	Lcja;	wj	RED_CANDLE
	f	Lcja;	wk	BLACK_CANDLE
	f	Lcja;	wl	SMALL_AMETHYST_BUD
	f	Lcja;	wm	MEDIUM_AMETHYST_BUD
	f	Lcja;	wn	LARGE_AMETHYST_BUD
	f	Lcja;	wo	AMETHYST_CLUSTER
	f	Lcja;	wp	POINTED_DRIPSTONE
	f	Lcja;	wq	OCHRE_FROGLIGHT
	f	Lcja;	wr	VERDANT_FROGLIGHT
	f	Lcja;	ws	PEARLESCENT_FROGLIGHT
	f	Lcja;	wt	FROGSPAWN
	f	Lcja;	wu	ECHO_SHARD
	f	Lcja;	wv	BRUSH
	f	Lcja;	ww	NETHERITE_UPGRADE_SMITHING_TEMPLATE
	f	Lcja;	wx	SENTRY_ARMOR_TRIM_SMITHING_TEMPLATE
	f	Lcja;	wy	DUNE_ARMOR_TRIM_SMITHING_TEMPLATE
	f	Lcja;	wz	COAST_ARMOR_TRIM_SMITHING_TEMPLATE
	f	Lcja;	x	OAK_PLANKS
	f	Lcja;	xa	MOURNER_POTTERY_SHERD
	f	Lcja;	xb	PLENTY_POTTERY_SHERD
	f	Lcja;	xc	PRIZE_POTTERY_SHERD
	f	Lcja;	xd	SHEAF_POTTERY_SHERD
	f	Lcja;	xe	SHELTER_POTTERY_SHERD
	f	Lcja;	xf	SKULL_POTTERY_SHERD
	f	Lcja;	xg	SNORT_POTTERY_SHERD
	f	Lcja;	y	SPRUCE_PLANKS
	f	Lcja;	z	BIRCH_PLANKS
c	cjj	net/minecraft/world/item/KnowledgeBookItem
	m	(Lcja$a;)V	<init>	<init>
		p	1		settings
	m	(Lcpv;Lcbu;Lbgx;)Lbgz;	a	use
		p	1		world
		p	2		user
		p	3		hand
	f	Ljava/lang/String;	a	RECIPE_TAG
	f	Lorg/slf4j/Logger;	b	LOGGER
c	cjk	net/minecraft/world/item/LeadItem
	m	(Lcja$a;)V	<init>	<init>
		p	1		settings
	m	(Lcbu;Lcpv;Lgw;)Lbgy;	a	bindPlayerMobs
		p	0		player
		p	1		world
		p	2		pos
	m	(Lclp;)Lbgy;	a	useOn
		p	1		context
c	cjl	net/minecraft/world/item/LingeringPotionItem
	m	(Lcja$a;)V	<init>	<init>
		p	1		settings
	m	(Lcjf;Lcpv;Ljava/util/List;Lckw;)V	a	appendHoverText
		p	1		stack
		p	2		world
		p	3		tooltip
		p	4		context
	m	(Lcpv;Lcbu;Lbgx;)Lbgz;	a	use
		p	1		world
		p	2		user
		p	3		hand
c	cjm	net/minecraft/world/item/MapItem
	m	(Lcja$a;)V	<init>	<init>
		p	1		settings
	m	(I)Ljava/lang/String;	a	makeKey
		p	0		mapId
	m	(Lakq;Lcjf;)V	a	renderBiomePreviewMap
		p	0		world
		p	1		map
	m	(Lcjf;I)V	a	storeMapData
		p	0		stack
		p	1		id
	m	(Lcjf;Lcpv;)Lebw;	a	getSavedData
		p	0		map
		p	1		world
	m	(Lcjf;Lcpv;I)V	a	scaleMap
		p	0		map
		p	1		world
		p	2		amount
	m	(Lcjf;Lcpv;IIIZZLaev;)V	a	createAndStoreSavedData
		p	0		stack
		p	1		world
		p	2		x
		p	3		z
		p	4		scale
		p	5		showIcons
		p	6		unlimitedTracking
		p	7		dimension
	m	(Lcjf;Lcpv;Lbiq;IZ)V	a	inventoryTick
		p	1		stack
		p	2		world
		p	3		entity
		p	4		slot
		p	5		selected
	m	(Lcjf;Lcpv;Lcbu;)Lvd;	a	getUpdatePacket
		p	1		stack
		p	2		world
		p	3		player
	m	(Lcjf;Lcpv;Ljava/util/List;Lckw;)V	a	appendHoverText
		p	1		stack
		p	2		world
		p	3		tooltip
		p	4		context
	m	(Lclp;)Lbgy;	a	useOn
		p	1		context
	m	(Lcpv;IIBZZ)Lcjf;	a	create
		p	0		world
		p	1		x
		p	2		z
		p	3		scale
		p	4		showIcons
		p	5		unlimitedTracking
	m	(Lcpv;IIIZZLaev;)I	a	createNewSavedData
		p	0		world
		p	1		x
		p	2		z
		p	3		scale
		p	4		showIcons
		p	5		unlimitedTracking
		p	6		dimension
	m	(Lcpv;Lbiq;Lebw;)V	a	update
		p	1		world
		p	2		entity
		p	3		state
	m	(Lcpv;Lcjf;)V	a	lockMap
		p	0		world
		p	1		stack
	m	(Lcpv;Ldfj;Lgw;)Ldfj;	a	getCorrectStateForFluidBlock
		p	1		world
		p	2		state
		p	3		pos
	m	(Ljava/lang/Integer;Lcpv;)Lebw;	a	getSavedData
		p	0		id
		p	1		world
	m	([ZII)Z	a	isBiomeWatery
		p	0		biomes
		p	1		x
		p	2		z
	m	(Lcjf;Lcpv;Lcbu;)V	b	onCraftedBy
		p	1		stack
		p	2		world
		p	3		player
	m	(I)Ltl;	c	getTooltipForId
		p	0		id
	m	(Lcjf;)Ljava/lang/Integer;	d	getMapId
		p	0		stack
	m	(Lcjf;)Ltl;	k	getTooltipForId
		p	0		stack
	m	(Lcjf;)I	o	getColor
		p	0		stack
	f	I	a	IMAGE_WIDTH
	f	I	b	IMAGE_HEIGHT
	f	Ljava/lang/String;	c	MAP_SCALE_TAG
	f	Ljava/lang/String;	d	MAP_LOCK_TAG
	f	I	e	DEFAULT_MAP_COLOR
	f	Ljava/lang/String;	f	TAG_MAP
c	cjn	net/minecraft/world/item/MilkBucketItem
	m	(Lcja$a;)V	<init>	<init>
		p	1		settings
	m	(Lcjf;Lcpv;Lbjg;)Lcjf;	a	finishUsingItem
		p	1		stack
		p	2		world
		p	3		user
	m	(Lcpv;Lcbu;Lbgx;)Lbgz;	a	use
		p	1		world
		p	2		user
		p	3		hand
	m	(Lcjf;)I	b	getUseDuration
		p	1		stack
	m	(Lcjf;)Lcky;	c	getUseAnimation
		p	1		stack
	f	I	a	DRINK_DURATION
c	cjo	net/minecraft/world/item/MinecartItem
	m	(Lcdl$a;Lcja$a;)V	<init>	<init>
		p	1		type
		p	2		settings
	m	(Lclp;)Lbgy;	a	useOn
		p	1		context
	f	Lih;	a	DISPENSE_ITEM_BEHAVIOR
	f	Lcdl$a;	b	type
c	cjo$1	net/minecraft/world/item/MinecartItem$1
	m	(Lid;)V	a	playSound
		p	1		pointer
	m	(Lid;Lcjf;)Lcjf;	a	execute
		p	1		pointer
		p	2		stack
	f	Lig;	c	defaultDispenseItemBehavior
c	cjp	net/minecraft/world/item/MobBucketItem
	m	(Lbiu;Leal;Lapc;Lcja$a;)V	<init>	<init>
		p	1		type
		p	2		fluid
		p	3		emptyingSound
		p	4		settings
	m	(Lakq;Lcjf;Lgw;)V	a	spawn
		p	1		world
		p	2		stack
		p	3		pos
	m	(Lcbu;Lcpv;Lcjf;Lgw;)V	a	checkExtraContent
		p	1		player
		p	2		world
		p	3		stack
		p	4		pos
	m	(Lcbu;Lcpw;Lgw;)V	a	playEmptySound
		p	1		player
		p	2		world
		p	3		pos
	m	(Lcjf;Lcpv;Ljava/util/List;Lckw;)V	a	appendHoverText
		p	1		stack
		p	2		world
		p	3		tooltip
		p	4		context
	f	Lbiu;	a	type
	f	Lapc;	b	emptySound
c	cjq	net/minecraft/world/item/NameTagItem
	m	(Lcja$a;)V	<init>	<init>
		p	1		settings
	m	(Lcjf;Lcbu;Lbjg;Lbgx;)Lbgy;	a	interactLivingEntity
		p	1		stack
		p	2		user
		p	3		entity
		p	4		hand
c	cjr	net/minecraft/world/item/PickaxeItem
	m	(Lcks;IFLcja$a;)V	<init>	<init>
		p	1		material
		p	2		attackDamage
		p	3		attackSpeed
		p	4		settings
c	cjs	net/minecraft/world/item/PlaceOnWaterBlockItem
	m	(Lcsv;Lcja$a;)V	<init>	<init>
		p	1		block
		p	2		settings
	m	(Lclp;)Lbgy;	a	useOn
		p	1		context
	m	(Lcpv;Lcbu;Lbgx;)Lbgz;	a	use
		p	1		world
		p	2		user
		p	3		hand
c	cjt	net/minecraft/world/item/PlayerHeadItem
	m	(Lcsv;Lcsv;Lcja$a;)V	<init>	<init>
		p	1		block
		p	2		wallBlock
		p	3		settings
	m	(Lqw;)V	b	verifyTagAfterLoad
		p	1		nbt
	m	(Lcjf;)Ltl;	m	getName
		p	1		stack
	f	Ljava/lang/String;	c	TAG_SKULL_OWNER
c	cju	net/minecraft/world/item/PotionItem
	m	(Lcja$a;)V	<init>	<init>
		p	1		settings
	m	(Lcjf;Lcpv;Lbjg;)Lcjf;	a	finishUsingItem
		p	1		stack
		p	2		world
		p	3		user
	m	(Lcjf;Lcpv;Ljava/util/List;Lckw;)V	a	appendHoverText
		p	1		stack
		p	2		world
		p	3		tooltip
		p	4		context
	m	(Lclp;)Lbgy;	a	useOn
		p	1		context
	m	(Lcpv;Lcbu;Lbgx;)Lbgz;	a	use
		p	1		world
		p	2		user
		p	3		hand
	m	()Lcjf;	ai_	getDefaultInstance
	m	(Lcjf;)I	b	getUseDuration
		p	1		stack
	m	(Lcjf;)Lcky;	c	getUseAnimation
		p	1		stack
	m	(Lcjf;)Ljava/lang/String;	j	getDescriptionId
		p	1		stack
	f	I	a	DRINK_DURATION
c	cjv	net/minecraft/world/item/ProjectileWeaponItem
	m	(Lcja$a;)V	<init>	<init>
		p	1		settings
	m	(Lbjg;Ljava/util/function/Predicate;)Lcjf;	a	getHeldProjectile
		p	0		entity
		p	1		predicate
	m	()Ljava/util/function/Predicate;	b	getAllSupportedProjectiles
	m	()I	c	getEnchantmentValue
	m	()I	d	getDefaultProjectileRange
	m	(Lcjf;)Z	d	lambda$static$1
		p	0		stack
	m	()Ljava/util/function/Predicate;	e	getSupportedHeldProjectiles
	m	(Lcjf;)Z	k	lambda$static$0
		p	0		stack
	f	Ljava/util/function/Predicate;	c	ARROW_ONLY
	f	Ljava/util/function/Predicate;	d	ARROW_OR_FIREWORK
c	cjw	net/minecraft/world/item/Rarity
	m	(Ljava/lang/String;ILn;)V	<init>	<init>
		p	3		formatting
	m	()[Lcjw;	a	$values
	f	Lcjw;	a	COMMON
	f	Lcjw;	b	UNCOMMON
	f	Lcjw;	c	RARE
	f	Lcjw;	d	EPIC
	f	Ln;	e	color
	f	[Lcjw;	f	$VALUES
c	cjx	net/minecraft/world/item/RecordItem
	m	(ILapc;Lcja$a;I)V	<init>	<init>
		p	1		comparatorOutput
		p	2		sound
		p	3		settings
		p	4		lengthInSeconds
	m	(Lapc;)Lcjx;	a	getBySound
		p	0		sound
	m	(Lcjf;Lcpv;Ljava/util/List;Lckw;)V	a	appendHoverText
		p	1		stack
		p	2		world
		p	3		tooltip
		p	4		context
	m	(Lclp;)Lbgy;	a	useOn
		p	1		context
	m	()I	h	getAnalogOutput
	m	()Lty;	i	getDisplayName
	m	()Lapc;	x	getSound
	m	()I	y	getLengthInTicks
	f	Ljava/util/Map;	a	BY_NAME
	f	I	b	analogOutput
	f	Lapc;	c	sound
	f	I	d	lengthInTicks
c	cjy	net/minecraft/world/item/SaddleItem
	m	(Lcja$a;)V	<init>	<init>
		p	1		settings
	m	(Lcjf;Lcbu;Lbjg;Lbgx;)Lbgy;	a	interactLivingEntity
		p	1		stack
		p	2		user
		p	3		entity
		p	4		hand
c	cjz	net/minecraft/world/item/ScaffoldingBlockItem
	m	(Lcsv;Lcja$a;)V	<init>	<init>
		p	1		block
		p	2		settings
	m	(Lcln;)Lcln;	b	updatePlacementContext
		p	1		context
	m	()Z	d	mustSurvive
c	cka	net/minecraft/world/item/ServerItemCooldowns
	m	(Lakr;)V	<init>	<init>
		p	1		player
	m	(Lcja;I)V	b	onCooldownStarted
		p	1		item
		p	2		duration
	m	(Lcja;)V	c	onCooldownEnded
		p	1		item
	f	Lakr;	a	player
c	ckb	net/minecraft/world/item/ShearsItem
	m	(Lcja$a;)V	<init>	<init>
		p	1		settings
	m	(Lbjg;)V	a	lambda$mineBlock$0
		p	0		e
	m	(Lcjf;Lcpv;Ldfj;Lgw;Lbjg;)Z	a	mineBlock
		p	1		stack
		p	2		world
		p	3		state
		p	4		pos
		p	5		miner
	m	(Lcjf;Ldfj;)F	a	getDestroySpeed
		p	1		stack
		p	2		state
	m	(Lclp;)Lbgy;	a	useOn
		p	1		context
	m	(Lclp;Lcbu;)V	a	lambda$useOn$1
		p	1		player
	m	(Ldfj;)Z	a_	isCorrectToolForDrops
		p	1		state
c	ckc	net/minecraft/world/item/ShieldItem
	m	(Lcja$a;)V	<init>	<init>
		p	1		settings
	m	(Lcjf;Lcjf;)Z	a	isValidRepairItem
		p	1		stack
		p	2		ingredient
	m	(Lcjf;Lcpv;Ljava/util/List;Lckw;)V	a	appendHoverText
		p	1		stack
		p	2		world
		p	3		tooltip
		p	4		context
	m	(Lcpv;Lcbu;Lbgx;)Lbgz;	a	use
		p	1		world
		p	2		user
		p	3		hand
	m	(Lcjf;)I	b	getUseDuration
		p	1		stack
	m	(Lcjf;)Lcky;	c	getUseAnimation
		p	1		stack
	m	(Lcjf;)Lcht;	d	getColor
		p	0		stack
	m	()Lbiv;	g	getEquipmentSlot
	m	(Lcjf;)Ljava/lang/String;	j	getDescriptionId
		p	1		stack
	f	I	a	EFFECTIVE_BLOCK_DELAY
	f	F	b	MINIMUM_DURABILITY_DAMAGE
	f	Ljava/lang/String;	c	TAG_BASE_COLOR
c	ckd	net/minecraft/world/item/ShovelItem
	m	(Lcks;FFLcja$a;)V	<init>	<init>
		p	1		material
		p	2		attackDamage
		p	3		attackSpeed
		p	4		settings
	m	(Lclp;)Lbgy;	a	useOn
		p	1		context
	m	(Lclp;Lcbu;)V	a	lambda$useOn$0
		p	1		p
	f	Ljava/util/Map;	a	FLATTENABLES
c	cke	net/minecraft/world/item/SignApplicator
	m	(Lcpv;Lded;ZLcbu;)Z	a	tryApplyToSign
		p	1		world
		p	2		signBlockEntity
		p	3		front
		p	4		player
	m	(Ldee;Lcbu;)Z	a	canApplyToSign
		p	1		signText
		p	2		player
c	ckf	net/minecraft/world/item/SignItem
	m	(Lcja$a;Lcsv;Lcsv;)V	<init>	<init>
		p	1		settings
		p	2		standingBlock
		p	3		wallBlock
	m	(Lcja$a;Lcsv;Lcsv;Lha;)V	<init>	<init>
		p	1		settings
		p	2		standingBlock
		p	3		wallBlock
		p	4		verticalAttachmentDirection
	m	(Lgw;Lcpv;Lcbu;Lcjf;Ldfj;)Z	a	updateCustomBlockEntityTag
		p	1		pos
		p	2		world
		p	3		player
		p	4		stack
		p	5		state
c	ckg	net/minecraft/world/item/SimpleFoiledItem
	m	(Lcja$a;)V	<init>	<init>
		p	1		settings
	m	(Lcjf;)Z	i	isFoil
		p	1		stack
c	ckh	net/minecraft/world/item/SmithingTemplateItem
	m	(Ltl;Ltl;Ltl;Ltl;Ltl;Ljava/util/List;Ljava/util/List;)V	<init>	<init>
		p	1		appliesToText
		p	2		ingredientsText
		p	3		titleText
		p	4		baseSlotDescriptionText
		p	5		additionsSlotDescriptionText
		p	6		emptyBaseSlotTextures
		p	7		emptyAdditionsSlotTextures
	m	()Ljava/util/List;	A	createTrimmableArmorIconList
	m	()Ljava/util/List;	B	createTrimmableMaterialIconList
	m	()Ljava/util/List;	C	createNetheriteUpgradeIconList
	m	()Ljava/util/List;	D	createNetheriteUpgradeMaterialList
	m	(Laev;)Lckh;	a	createArmorTrimTemplate
		p	0		trimPattern
	m	(Laew;)Lckh;	a	createArmorTrimTemplate
		p	0		trimPatternIn
	m	(Lcjf;Lcpv;Ljava/util/List;Lckw;)V	a	appendHoverText
		p	1		stack
		p	2		world
		p	3		tooltip
		p	4		context
	m	()Lckh;	h	createNetheriteUpgradeTemplate
	m	()Ltl;	i	getBaseSlotDescription
	m	()Ltl;	x	getAdditionSlotDescription
	m	()Ljava/util/List;	y	getBaseSlotEmptyIcons
	m	()Ljava/util/List;	z	getAdditionalSlotEmptyIcons
	f	Laew;	A	EMPTY_SLOT_SHOVEL
	f	Laew;	B	EMPTY_SLOT_PICKAXE
	f	Laew;	C	EMPTY_SLOT_INGOT
	f	Laew;	D	EMPTY_SLOT_REDSTONE_DUST
	f	Laew;	E	EMPTY_SLOT_QUARTZ
	f	Laew;	F	EMPTY_SLOT_EMERALD
	f	Laew;	G	EMPTY_SLOT_DIAMOND
	f	Laew;	H	EMPTY_SLOT_LAPIS_LAZULI
	f	Laew;	I	EMPTY_SLOT_AMETHYST_SHARD
	f	Ltl;	J	appliesTo
	f	Ltl;	K	ingredients
	f	Ltl;	L	upgradeDescription
	f	Ltl;	M	baseSlotDescription
	f	Ltl;	N	additionsSlotDescription
	f	Ljava/util/List;	O	baseSlotEmptyIcons
	f	Ljava/util/List;	P	additionalSlotEmptyIcons
	f	Ln;	a	TITLE_FORMAT
	f	Ln;	b	DESCRIPTION_FORMAT
	f	Ltl;	c	INGREDIENTS_TITLE
	f	Ltl;	d	APPLIES_TO_TITLE
	f	Ltl;	e	NETHERITE_UPGRADE
	f	Ltl;	f	ARMOR_TRIM_APPLIES_TO
	f	Ltl;	g	ARMOR_TRIM_INGREDIENTS
	f	Ltl;	h	ARMOR_TRIM_BASE_SLOT_DESCRIPTION
	f	Ltl;	i	ARMOR_TRIM_ADDITIONS_SLOT_DESCRIPTION
	f	Ltl;	j	NETHERITE_UPGRADE_APPLIES_TO
	f	Ltl;	k	NETHERITE_UPGRADE_INGREDIENTS
	f	Ltl;	r	NETHERITE_UPGRADE_BASE_SLOT_DESCRIPTION
	f	Ltl;	s	NETHERITE_UPGRADE_ADDITIONS_SLOT_DESCRIPTION
	f	Laew;	t	EMPTY_SLOT_HELMET
	f	Laew;	u	EMPTY_SLOT_CHESTPLATE
	f	Laew;	v	EMPTY_SLOT_LEGGINGS
	f	Laew;	w	EMPTY_SLOT_BOOTS
	f	Laew;	x	EMPTY_SLOT_HOE
	f	Laew;	y	EMPTY_SLOT_AXE
	f	Laew;	z	EMPTY_SLOT_SWORD
c	cki	net/minecraft/world/item/SnowballItem
	m	(Lcja$a;)V	<init>	<init>
		p	1		settings
	m	(Lcpv;Lcbu;Lbgx;)Lbgz;	a	use
		p	1		world
		p	2		user
		p	3		hand
c	ckj	net/minecraft/world/item/SolidBucketItem
	m	(Lcsv;Lapc;Lcja$a;)V	<init>	<init>
		p	1		block
		p	2		placeSound
		p	3		settings
	m	()Ljava/lang/String;	a	getDescriptionId
	m	(Lcbu;Lcpv;Lgw;Lehj;)Z	a	emptyContents
		p	1		player
		p	2		world
		p	3		pos
		p	4		hitResult
	m	(Lclp;)Lbgy;	a	useOn
		p	1		context
	m	(Ldfj;)Lapc;	a	getPlaceSound
		p	1		state
	f	Lapc;	c	placeSound
c	ckk	net/minecraft/world/item/SpawnEggItem
	m	(Lbiu;IILcja$a;)V	<init>	<init>
		p	1		type
		p	2		primaryColor
		p	3		secondaryColor
		p	4		settings
	m	(I)I	a	getColor
		p	1		tintIndex
	m	(Lbiu;)Lckk;	a	byId
		p	0		type
	m	(Lcbu;Lbji;Lbiu;Lakq;Lehn;Lcjf;)Ljava/util/Optional;	a	spawnOffspringFromSpawnEgg
		p	1		user
		p	2		entity
		p	3		entityType
		p	4		world
		p	5		pos
		p	6		stack
	m	(Lclp;)Lbgy;	a	useOn
		p	1		context
	m	(Lcpv;Lcbu;Lbgx;)Lbgz;	a	use
		p	1		world
		p	2		user
		p	3		hand
	m	(Lqw;)Lbiu;	a	getType
		p	1		nbt
	m	(Lqw;Lbiu;)Z	a	spawnsEntity
		p	1		nbt
		p	2		type
	m	()Ljava/lang/Iterable;	h	eggs
	m	()Lcec;	m	requiredFeatures
	f	Ljava/util/Map;	a	BY_ID
	f	I	b	backgroundColor
	f	I	c	highlightColor
	f	Lbiu;	d	defaultType
c	ckl	net/minecraft/world/item/SpectralArrowItem
	m	(Lcja$a;)V	<init>	<init>
		p	1		settings
	m	(Lcpv;Lcjf;Lbjg;)Lcca;	a	createArrow
		p	1		world
		p	2		stack
		p	3		shooter
c	ckm	net/minecraft/world/item/SplashPotionItem
	m	(Lcja$a;)V	<init>	<init>
		p	1		settings
	m	(Lcpv;Lcbu;Lbgx;)Lbgz;	a	use
		p	1		world
		p	2		user
		p	3		hand
c	ckn	net/minecraft/world/item/SpyglassItem
	m	(Lcja$a;)V	<init>	<init>
		p	1		settings
	m	(Lbjg;)V	a	stopUsing
		p	1		user
	m	(Lcjf;Lcpv;Lbjg;)Lcjf;	a	finishUsingItem
		p	1		stack
		p	2		world
		p	3		user
	m	(Lcjf;Lcpv;Lbjg;I)V	a	releaseUsing
		p	1		stack
		p	2		world
		p	3		user
		p	4		remainingUseTicks
	m	(Lcpv;Lcbu;Lbgx;)Lbgz;	a	use
		p	1		world
		p	2		user
		p	3		hand
	m	(Lcjf;)I	b	getUseDuration
		p	1		stack
	m	(Lcjf;)Lcky;	c	getUseAnimation
		p	1		stack
	f	I	a	USE_DURATION
	f	F	b	ZOOM_FOV_MODIFIER
c	cko	net/minecraft/world/item/StandingAndWallBlockItem
	m	(Lcsv;Lcsv;Lcja$a;Lha;)V	<init>	<init>
		p	1		standingBlock
		p	2		wallBlock
		p	3		settings
		p	4		verticalAttachmentDirection
	m	(Lcpy;Ldfj;Lgw;)Z	a	canPlace
		p	1		world
		p	2		state
		p	3		pos
	m	(Ljava/util/Map;Lcja;)V	a	registerBlocks
		p	1		map
		p	2		item
	m	(Lcln;)Ldfj;	c	getPlacementState
		p	1		context
	f	Lha;	c	attachmentDirection
	f	Lcsv;	d	wallBlock
c	ckp	net/minecraft/world/item/SuspiciousStewItem
	m	(Lcja$a;)V	<init>	<init>
		p	1		settings
	m	(Lbjg;Lday$a;)V	a	lambda$finishUsingItem$4
		p	1		effect
	m	(Lcjf;Lcpv;Lbjg;)Lcjf;	a	finishUsingItem
		p	1		stack
		p	2		world
		p	3		user
	m	(Lcjf;Lcpv;Ljava/util/List;Lckw;)V	a	appendHoverText
		p	1		stack
		p	2		world
		p	3		tooltip
		p	4		context
	m	(Lcjf;Ljava/util/List;)V	a	saveMobEffects
		p	0		stew
		p	1		stewEffects
	m	(Lcjf;Ljava/util/function/Consumer;)V	a	listPotionEffects
		p	0		stew
		p	1		effectConsumer
	m	(Ljava/util/List;Lday$a;)V	a	lambda$appendHoverText$3
		p	1		effect
	m	(Ljava/util/function/Consumer;Ljava/util/List;)V	a	lambda$listPotionEffects$2
	m	(Lqw;Lrq;)V	a	lambda$appendMobEffects$1
	m	(Lcjf;Ljava/util/List;)V	b	appendMobEffects
		p	0		stew
		p	1		stewEffects
	m	(Lqw;Lrq;)V	b	lambda$saveMobEffects$0
	f	Ljava/lang/String;	a	EFFECTS_TAG
	f	I	b	DEFAULT_DURATION
c	ckq	net/minecraft/world/item/SwordItem
	m	(Lcks;IFLcja$a;)V	<init>	<init>
		p	1		toolMaterial
		p	2		attackDamage
		p	3		attackSpeed
		p	4		settings
	m	(Lbiv;)Lcom/google/common/collect/Multimap;	a	getDefaultAttributeModifiers
		p	1		slot
	m	(Lbjg;)V	a	lambda$mineBlock$1
		p	0		e
	m	(Lcjf;Lbjg;Lbjg;)Z	a	hurtEnemy
		p	1		stack
		p	2		target
		p	3		attacker
	m	(Lcjf;Lcpv;Ldfj;Lgw;Lbjg;)Z	a	mineBlock
		p	1		stack
		p	2		world
		p	3		state
		p	4		pos
		p	5		miner
	m	(Lcjf;Ldfj;)F	a	getDestroySpeed
		p	1		stack
		p	2		state
	m	(Ldfj;Lcpv;Lgw;Lcbu;)Z	a	canAttackBlock
		p	1		state
		p	2		world
		p	3		pos
		p	4		miner
	m	(Ldfj;)Z	a_	isCorrectToolForDrops
		p	1		state
	m	(Lbjg;)V	b	lambda$hurtEnemy$0
		p	0		e
	m	()F	h	getDamage
	f	F	a	attackDamage
	f	Lcom/google/common/collect/Multimap;	b	defaultModifiers
c	ckr	net/minecraft/world/item/ThrowablePotionItem
	m	(Lcja$a;)V	<init>	<init>
		p	1		settings
	m	(Lcpv;Lcbu;Lbgx;)Lbgz;	a	use
		p	1		world
		p	2		user
		p	3		hand
c	cks	net/minecraft/world/item/Tier
	m	()I	a	getUses
	m	()F	b	getSpeed
	m	()F	c	getAttackDamageBonus
	m	()I	d	getLevel
	m	()I	e	getEnchantmentValue
	m	()Lcmg;	f	getRepairIngredient
c	ckt	net/minecraft/world/item/TieredItem
	m	(Lcks;Lcja$a;)V	<init>	<init>
		p	1		material
		p	2		settings
	m	(Lcjf;Lcjf;)Z	a	isValidRepairItem
		p	1		stack
		p	2		ingredient
	m	()I	c	getEnchantmentValue
	m	()Lcks;	i	getTier
	f	Lcks;	a	tier
c	cku	net/minecraft/world/item/Tiers
	m	(Ljava/lang/String;IIIFFILjava/util/function/Supplier;)V	<init>	<init>
		p	3		miningLevel
		p	4		itemDurability
		p	5		miningSpeed
		p	6		attackDamage
		p	7		enchantability
		p	8		repairIngredient
	m	()I	a	getUses
	m	()F	b	getSpeed
	m	()F	c	getAttackDamageBonus
	m	()I	d	getLevel
	m	()I	e	getEnchantmentValue
	m	()Lcmg;	f	getRepairIngredient
	m	()Lcmg;	g	lambda$static$5
	m	()Lcmg;	h	lambda$static$4
	m	()Lcmg;	i	lambda$static$3
	m	()Lcmg;	j	lambda$static$2
	m	()Lcmg;	k	lambda$static$1
	m	()Lcmg;	l	lambda$static$0
	m	()[Lcku;	m	$values
	f	Lcku;	a	WOOD
	f	Lcku;	b	STONE
	f	Lcku;	c	IRON
	f	Lcku;	d	DIAMOND
	f	Lcku;	e	GOLD
	f	Lcku;	f	NETHERITE
	f	I	g	level
	f	I	h	uses
	f	F	i	speed
	f	F	j	damage
	f	I	k	enchantmentValue
	f	Larr;	l	repairIngredient
	f	[Lcku;	m	$VALUES
c	ckv	net/minecraft/world/item/TippedArrowItem
	m	(Lcja$a;)V	<init>	<init>
		p	1		settings
	m	(Lcjf;Lcpv;Ljava/util/List;Lckw;)V	a	appendHoverText
		p	1		stack
		p	2		world
		p	3		tooltip
		p	4		context
	m	()Lcjf;	ai_	getDefaultInstance
	m	(Lcjf;)Ljava/lang/String;	j	getDescriptionId
		p	1		stack
c	ckw	net/minecraft/world/item/TooltipFlag
	m	()Z	a	isAdvanced
	m	()Z	b	isCreative
	f	Lckw$a;	a	NORMAL
	f	Lckw$a;	b	ADVANCED
c	ckw$a	net/minecraft/world/item/TooltipFlag$Default
	m	()Z	a	isAdvanced
	m	()Z	b	isCreative
	m	()Lckw$a;	c	asCreative
	m	()Z	d	advanced
	m	()Z	e	creative
	f	Z	c	advanced
	f	Z	d	creative
c	ckx	net/minecraft/world/item/TridentItem
	m	(Lcja$a;)V	<init>	<init>
		p	1		settings
	m	(Lbiv;)Lcom/google/common/collect/Multimap;	a	getDefaultAttributeModifiers
		p	1		slot
	m	(Lbjg;)V	a	lambda$mineBlock$2
		p	0		e
	m	(Lbjg;Lcbu;)V	a	lambda$releaseUsing$0
		p	1		p
	m	(Lcjf;Lbjg;Lbjg;)Z	a	hurtEnemy
		p	1		stack
		p	2		target
		p	3		attacker
	m	(Lcjf;Lcpv;Lbjg;I)V	a	releaseUsing
		p	1		stack
		p	2		world
		p	3		user
		p	4		remainingUseTicks
	m	(Lcjf;Lcpv;Ldfj;Lgw;Lbjg;)Z	a	mineBlock
		p	1		stack
		p	2		world
		p	3		state
		p	4		pos
		p	5		miner
	m	(Lcpv;Lcbu;Lbgx;)Lbgz;	a	use
		p	1		world
		p	2		user
		p	3		hand
	m	(Ldfj;Lcpv;Lgw;Lcbu;)Z	a	canAttackBlock
		p	1		state
		p	2		world
		p	3		pos
		p	4		miner
	m	(Lbjg;)V	b	lambda$hurtEnemy$1
		p	0		e
	m	(Lcjf;)I	b	getUseDuration
		p	1		stack
	m	()I	c	getEnchantmentValue
	m	(Lcjf;)Lcky;	c	getUseAnimation
		p	1		stack
	f	I	a	THROW_THRESHOLD_TIME
	f	F	b	BASE_DAMAGE
	f	F	c	SHOOT_POWER
	f	Lcom/google/common/collect/Multimap;	d	defaultModifiers
c	cky	net/minecraft/world/item/UseAnim
	m	()[Lcky;	a	$values
	f	Lcky;	a	NONE
	f	Lcky;	b	EAT
	f	Lcky;	c	DRINK
	f	Lcky;	d	BLOCK
	f	Lcky;	e	BOW
	f	Lcky;	f	SPEAR
	f	Lcky;	g	CROSSBOW
	f	Lcky;	h	SPYGLASS
	f	Lcky;	i	TOOT_HORN
	f	Lcky;	j	BRUSH
	f	[Lcky;	k	$VALUES
c	ckz	net/minecraft/world/item/Vanishable
c	cla	net/minecraft/world/item/WritableBookItem
	m	(Lcja$a;)V	<init>	<init>
		p	1		settings
	m	(Lclp;)Lbgy;	a	useOn
		p	1		context
	m	(Lcpv;Lcbu;Lbgx;)Lbgz;	a	use
		p	1		world
		p	2		user
		p	3		hand
	m	(Lqw;)Z	a	makeSureTagIsValid
		p	0		nbt
c	clb	net/minecraft/world/item/WrittenBookItem
	m	(Lcja$a;)V	<init>	<init>
		p	1		settings
	m	(Lcjf;Lcpv;Ljava/util/List;Lckw;)V	a	appendHoverText
		p	1		stack
		p	2		world
		p	3		tooltip
		p	4		context
	m	(Lcjf;Ldt;Lcbu;)Z	a	resolveBookComponents
		p	0		book
		p	1		commandSource
		p	2		player
	m	(Lclp;)Lbgy;	a	useOn
		p	1		context
	m	(Lcpv;Lcbu;Lbgx;)Lbgz;	a	use
		p	1		world
		p	2		user
		p	3		hand
	m	(Ldt;Lcbu;Ljava/lang/String;)Ljava/lang/String;	a	resolvePage
		p	0		commandSource
		p	1		player
		p	2		text
	m	(Lqw;)Z	a	makeSureTagIsValid
		p	0		nbt
	m	(Lcjf;)I	d	getGeneration
		p	0		stack
	m	(Lcjf;)Z	i	isFoil
		p	1		stack
	m	(Lcjf;)I	k	getPageCount
		p	0		stack
	m	(Lcjf;)Ltl;	m	getName
		p	1		stack
	f	I	a	TITLE_LENGTH
	f	I	b	TITLE_MAX_LENGTH
	f	I	c	PAGE_EDIT_LENGTH
	f	I	d	PAGE_LENGTH
	f	I	e	MAX_PAGES
	f	I	f	MAX_GENERATION
	f	Ljava/lang/String;	g	TAG_TITLE
	f	Ljava/lang/String;	h	TAG_FILTERED_TITLE
	f	Ljava/lang/String;	i	TAG_AUTHOR
	f	Ljava/lang/String;	j	TAG_PAGES
	f	Ljava/lang/String;	k	TAG_FILTERED_PAGES
	f	Ljava/lang/String;	r	TAG_GENERATION
	f	Ljava/lang/String;	s	TAG_RESOLVED
c	clc	net/minecraft/world/item/alchemy/Potion
	m	(Ljava/lang/String;[Lbid;)V	<init>	<init>
		p	1		baseName
		p	2		effects
	m	([Lbid;)V	<init>	<init>
		p	1		effects
	m	()Ljava/util/List;	a	getEffects
	m	(Ljava/lang/String;)Lclc;	a	byName
		p	0		id
	m	()Z	b	hasInstantEffects
	m	(Ljava/lang/String;)Ljava/lang/String;	b	getName
		p	1		prefix
	m	()Lhe$c;	c	builtInRegistryHolder
	f	Ljava/lang/String;	a	name
	f	Lcom/google/common/collect/ImmutableList;	b	effects
	f	Lhe$c;	c	builtInRegistryHolder
c	cld	net/minecraft/world/item/alchemy/PotionBrewing
	m	()V	a	bootStrap
	m	(Lcja;)V	a	addContainer
		p	0		item
	m	(Lcja;Lcja;Lcja;)V	a	addContainerRecipe
		p	0		input
		p	1		ingredient
		p	2		output
	m	(Lcjf;)Z	a	isIngredient
		p	0		stack
	m	(Lcjf;Lcjf;)Z	a	hasMix
		p	0		input
		p	1		ingredient
	m	(Lclc;)Z	a	isBrewablePotion
		p	0		potion
	m	(Lclc;Lcja;Lclc;)V	a	addMix
		p	0		input
		p	1		item
		p	2		output
	m	(Lcjf;)Z	b	isContainerIngredient
		p	0		stack
	m	(Lcjf;Lcjf;)Z	b	hasContainerMix
		p	0		input
		p	1		ingredient
	m	(Lcjf;)Z	c	isPotionIngredient
		p	0		stack
	m	(Lcjf;Lcjf;)Z	c	hasPotionMix
		p	0		input
		p	1		ingredient
	m	(Lcjf;)Z	d	lambda$static$0
		p	0		stack
	m	(Lcjf;Lcjf;)Lcjf;	d	mix
		p	0		ingredient
		p	1		input
	f	I	a	BREWING_TIME_SECONDS
	f	Ljava/util/List;	b	POTION_MIXES
	f	Ljava/util/List;	c	CONTAINER_MIXES
	f	Ljava/util/List;	d	ALLOWED_CONTAINERS
	f	Ljava/util/function/Predicate;	e	ALLOWED_CONTAINER
c	cld$a	net/minecraft/world/item/alchemy/PotionBrewing$Mix
	m	(Ljava/lang/Object;Lcmg;Ljava/lang/Object;)V	<init>	<init>
		p	1		input
		p	2		ingredient
		p	3		output
	f	Ljava/lang/Object;	a	from
	f	Lcmg;	b	ingredient
	f	Ljava/lang/Object;	c	to
c	cle	net/minecraft/world/item/alchemy/PotionUtils
	m	(Lcjf;)Ljava/util/List;	a	getMobEffects
		p	0		stack
	m	(Lcjf;Lclc;)Lcjf;	a	setPotion
		p	0		stack
		p	1		potion
	m	(Lcjf;Ljava/util/Collection;)Lcjf;	a	setCustomEffects
		p	0		stack
		p	1		effects
	m	(Lcjf;Ljava/util/List;F)V	a	addPotionTooltip
		p	0		stack
		p	1		list
		p	2		durationMultiplier
	m	(Lclc;)I	a	getColor
		p	0		potion
	m	(Lclc;Ljava/util/Collection;)Ljava/util/List;	a	getAllEffects
		p	0		potion
		p	1		custom
	m	(Ljava/util/Collection;)I	a	getColor
		p	0		effects
	m	(Ljava/util/List;Ljava/util/List;F)V	a	addPotionTooltip
		p	0		statusEffects
		p	1		list
		p	2		durationMultiplier
	m	(Lqw;)Ljava/util/List;	a	getAllEffects
		p	0		nbt
	m	(Lqw;Ljava/util/List;)V	a	getCustomEffects
		p	0		nbt
		p	1		list
	m	(Lcjf;)Ljava/util/List;	b	getCustomEffects
		p	0		stack
	m	(Lqw;)Ljava/util/List;	b	getCustomEffects
		p	0		nbt
	m	(Lcjf;)I	c	getColor
		p	0		stack
	m	(Lqw;)Lclc;	c	getPotion
		p	0		compound
	m	(Lcjf;)Lclc;	d	getPotion
		p	0		stack
	f	Ljava/lang/String;	a	TAG_CUSTOM_POTION_EFFECTS
	f	Ljava/lang/String;	b	TAG_CUSTOM_POTION_COLOR
	f	Ljava/lang/String;	c	TAG_POTION
	f	I	d	EMPTY_COLOR
	f	Ltl;	e	NO_EFFECT
c	clf	net/minecraft/world/item/alchemy/Potions
	m	(Laev;Lclc;)Lclc;	a	register
		p	0		key
		p	1		potion
	m	(Ljava/lang/String;Lclc;)Lclc;	a	register
		p	0		name
		p	1		potion
	f	Lclc;	A	HEALING
	f	Lclc;	B	STRONG_HEALING
	f	Lclc;	C	HARMING
	f	Lclc;	D	STRONG_HARMING
	f	Lclc;	E	POISON
	f	Lclc;	F	LONG_POISON
	f	Lclc;	G	STRONG_POISON
	f	Lclc;	H	REGENERATION
	f	Lclc;	I	LONG_REGENERATION
	f	Lclc;	J	STRONG_REGENERATION
	f	Lclc;	K	STRENGTH
	f	Lclc;	L	LONG_STRENGTH
	f	Lclc;	M	STRONG_STRENGTH
	f	Lclc;	N	WEAKNESS
	f	Lclc;	O	LONG_WEAKNESS
	f	Lclc;	P	LUCK
	f	Lclc;	Q	SLOW_FALLING
	f	Lclc;	R	LONG_SLOW_FALLING
	f	Laev;	a	EMPTY_ID
	f	Lclc;	b	EMPTY
	f	Lclc;	c	WATER
	f	Lclc;	d	MUNDANE
	f	Lclc;	e	THICK
	f	Lclc;	f	AWKWARD
	f	Lclc;	g	NIGHT_VISION
	f	Lclc;	h	LONG_NIGHT_VISION
	f	Lclc;	i	INVISIBILITY
	f	Lclc;	j	LONG_INVISIBILITY
	f	Lclc;	k	LEAPING
	f	Lclc;	l	LONG_LEAPING
	f	Lclc;	m	STRONG_LEAPING
	f	Lclc;	n	FIRE_RESISTANCE
	f	Lclc;	o	LONG_FIRE_RESISTANCE
	f	Lclc;	p	SWIFTNESS
	f	Lclc;	q	LONG_SWIFTNESS
	f	Lclc;	r	STRONG_SWIFTNESS
	f	Lclc;	s	SLOWNESS
	f	Lclc;	t	LONG_SLOWNESS
	f	Lclc;	u	STRONG_SLOWNESS
	f	Lclc;	v	TURTLE_MASTER
	f	Lclc;	w	LONG_TURTLE_MASTER
	f	Lclc;	x	STRONG_TURTLE_MASTER
	f	Lclc;	y	WATER_BREATHING
	f	Lclc;	z	LONG_WATER_BREATHING
c	clg	net/minecraft/world/item/alchemy/package-info
c	clh	net/minecraft/world/item/armortrim/ArmorTrim
	m	(Lhe;Lhe;)V	<init>	<init>
		p	1		material
		p	2		pattern
	m	()Lhe;	a	pattern
	m	(Lcgq;)Laew;	a	innerTexture
		p	1		armorMaterial
	m	(Lcjf;Lhr;Ljava/util/List;)V	a	appendUpgradeHoverText
		p	0		stack
		p	1		registryManager
		p	2		tooltip
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lhe;Lcgq;)Laew;	a	lambda$new$4
		p	2		armorMaterial
	m	(Lhe;Lhe;)Z	a	hasPatternAndMaterial
		p	1		pattern
		p	2		material
	m	(Lhr;Lcjf;Lclh;)Z	a	setTrim
		p	0		registryManager
		p	1		stack
		p	2		trim
	m	(Lhr;Lcjf;Z)Ljava/util/Optional;	a	getTrim
		p	0		registryManager
		p	1		stack
		p	2		suppressError
	m	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	a	lambda$new$3
		p	1		path
	m	(ZLjava/lang/String;)V	a	lambda$getTrim$5
		p	1		error
	m	()Lhe;	b	material
	m	(Lcgq;)Laew;	b	outerTexture
		p	1		armorMaterial
	m	(Lhe;Lcgq;)Laew;	b	lambda$new$2
		p	2		armorMaterial
	m	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	b	lambda$new$1
		p	1		path
	m	(Lcgq;)Ljava/lang/String;	c	getColorPaletteSuffix
		p	1		armorMaterial
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/lang/String;	b	TAG_TRIM_ID
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	Ltl;	d	UPGRADE_TITLE
	f	Lhe;	e	material
	f	Lhe;	f	pattern
	f	Ljava/util/function/Function;	g	innerTexture
	f	Ljava/util/function/Function;	h	outerTexture
c	cli	net/minecraft/world/item/armortrim/TrimMaterial
	m	()Ljava/lang/String;	a	assetName
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ljava/lang/String;Lcja;FLtl;Ljava/util/Map;)Lcli;	a	create
		p	0		assetName
		p	1		ingredient
		p	2		itemModelIndex
		p	3		description
		p	4		overrideArmorMaterials
	m	()Lhe;	b	ingredient
	m	()F	c	itemModelIndex
	m	()Ljava/util/Map;	d	overrideArmorMaterials
	m	()Ltl;	e	description
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Ljava/lang/String;	c	assetName
	f	Lhe;	d	ingredient
	f	F	e	itemModelIndex
	f	Ljava/util/Map;	f	overrideArmorMaterials
	f	Ltl;	g	description
c	clj	net/minecraft/world/item/armortrim/TrimMaterials
	m	(Lcjf;Lhe$c;)Z	a	lambda$getFromIngredient$0
		p	1		recipe
	m	(Lhr;Lcjf;)Ljava/util/Optional;	a	getFromIngredient
		p	0		registryManager
		p	1		stack
	m	(Ljava/lang/String;)Laev;	a	registryKey
		p	0		id
	m	(Lnr;)V	a	bootstrap
		p	0		registry
	m	(Lnr;Laev;Lcja;Luh;F)V	a	register
		p	0		registry
		p	1		key
		p	2		ingredient
		p	3		style
		p	4		itemModelIndex
	m	(Lnr;Laev;Lcja;Luh;FLjava/util/Map;)V	a	register
		p	0		registry
		p	1		key
		p	2		ingredient
		p	3		style
		p	4		itemModelIndex
		p	5		overrideArmorMaterials
	f	Laev;	a	QUARTZ
	f	Laev;	b	IRON
	f	Laev;	c	NETHERITE
	f	Laev;	d	REDSTONE
	f	Laev;	e	COPPER
	f	Laev;	f	GOLD
	f	Laev;	g	EMERALD
	f	Laev;	h	DIAMOND
	f	Laev;	i	LAPIS
	f	Laev;	j	AMETHYST
c	clk	net/minecraft/world/item/armortrim/TrimPattern
	m	()Laew;	a	assetId
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lhe;)Ltl;	a	copyWithStyle
		p	1		material
	m	()Lhe;	b	templateItem
	m	()Ltl;	c	description
	m	()Z	d	decal
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Laew;	c	assetId
	f	Lhe;	d	templateItem
	f	Ltl;	e	description
	f	Z	f	decal
c	cll	net/minecraft/world/item/armortrim/TrimPatterns
	m	(Lcjf;Lhe$c;)Z	a	lambda$getFromTemplate$0
		p	1		pattern
	m	(Lhr;Lcjf;)Ljava/util/Optional;	a	getFromTemplate
		p	0		registryManager
		p	1		stack
	m	(Ljava/lang/String;)Laev;	a	registryKey
		p	0		id
	m	(Lnr;)V	a	bootstrap
		p	0		registry
	m	(Lnr;Lcja;Laev;)V	a	register
		p	0		registry
		p	1		template
		p	2		key
	f	Laev;	a	SENTRY
	f	Laev;	b	DUNE
	f	Laev;	c	COAST
	f	Laev;	d	WILD
	f	Laev;	e	WARD
	f	Laev;	f	EYE
	f	Laev;	g	VEX
	f	Laev;	h	TIDE
	f	Laev;	i	SNOUT
	f	Laev;	j	RIB
	f	Laev;	k	SPIRE
	f	Laev;	l	WAYFINDER
	f	Laev;	m	SHAPER
	f	Laev;	n	SILENCE
	f	Laev;	o	RAISER
	f	Laev;	p	HOST
c	clm	net/minecraft/world/item/armortrim/package-info
c	cln	net/minecraft/world/item/context/BlockPlaceContext
	m	(Lcbu;Lbgx;Lcjf;Lehj;)V	<init>	<init>
		p	1		player
		p	2		hand
		p	3		stack
		p	4		hitResult
	m	(Lclp;)V	<init>	<init>
		p	1		context
	m	(Lcpv;Lcbu;Lbgx;Lcjf;Lehj;)V	<init>	<init>
		p	1		world
		p	2		player
		p	3		hand
		p	4		stack
		p	5		hit
	m	()Lgw;	a	getClickedPos
	m	(Lcln;Lgw;Lha;)Lcln;	a	at
		p	0		context
		p	1		pos
		p	2		side
	m	()Z	b	canPlace
	m	()Z	c	replacingClickedOnBlock
	m	()Lha;	d	getNearestLookingDirection
	m	()Lha;	e	getNearestLookingVerticalDirection
	m	()[Lha;	f	getNearestLookingDirections
	f	Z	a	replaceClicked
	f	Lgw;	b	relativePos
c	clo	net/minecraft/world/item/context/DirectionalPlaceContext
	m	(Lcpv;Lgw;Lha;Lcjf;Lha;)V	<init>	<init>
		p	1		world
		p	2		pos
		p	3		facing
		p	4		stack
		p	5		side
	m	()Lgw;	a	getClickedPos
	m	()Z	b	canPlace
	m	()Z	c	replacingClickedOnBlock
	m	()Lha;	d	getNearestLookingDirection
	m	()[Lha;	f	getNearestLookingDirections
	m	()Lha;	g	getHorizontalDirection
	m	()Z	h	isSecondaryUseActive
	m	()F	i	getRotation
	f	Lha;	b	direction
c	clo$1	net/minecraft/world/item/context/DirectionalPlaceContext$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	clp	net/minecraft/world/item/context/UseOnContext
	m	(Lcbu;Lbgx;Lehj;)V	<init>	<init>
		p	1		player
		p	2		hand
		p	3		hit
	m	(Lcpv;Lcbu;Lbgx;Lcjf;Lehj;)V	<init>	<init>
		p	1		world
		p	2		player
		p	3		hand
		p	4		stack
		p	5		hit
	m	()Lgw;	a	getClickedPos
	m	()Lha;	g	getHorizontalDirection
	m	()Z	h	isSecondaryUseActive
	m	()F	i	getRotation
	m	()Lehj;	j	getHitResult
	m	()Lha;	k	getClickedFace
	m	()Lehn;	l	getClickLocation
	m	()Z	m	isInside
	m	()Lcjf;	n	getItemInHand
	m	()Lcbu;	o	getPlayer
	m	()Lbgx;	p	getHand
	m	()Lcpv;	q	getLevel
	f	Lcbu;	a	player
	f	Lbgx;	b	hand
	f	Lehj;	c	hitResult
	f	Lcpv;	d	level
	f	Lcjf;	e	itemStack
c	clq	net/minecraft/world/item/context/package-info
c	clr	net/minecraft/world/item/crafting/AbstractCookingRecipe
	m	(Lcmn;Ljava/lang/String;Lclx;Lcmg;Lcjf;FI)V	<init>	<init>
		p	1		type
		p	2		group
		p	3		category
		p	4		ingredient
		p	5		result
		p	6		experience
		p	7		cookingTime
	m	()Lhn;	a	getIngredients
	m	(II)Z	a	canCraftInDimensions
		p	1		width
		p	2		height
	m	(Lbgr;Lcpv;)Z	a	matches
		p	1		inventory
		p	2		world
	m	(Lbgr;Lhr;)Lcjf;	a	assemble
		p	1		inventory
		p	2		registryManager
	m	(Lhr;)Lcjf;	a	getResultItem
		p	1		registryManager
	m	()F	b	getExperience
	m	()Ljava/lang/String;	c	getGroup
	m	()I	d	getCookingTime
	m	()Lcmn;	e	getType
	m	()Lclx;	f	category
	f	Lcmn;	a	type
	f	Lclx;	b	category
	f	Ljava/lang/String;	c	group
	f	Lcmg;	d	ingredient
	f	Lcjf;	e	result
	f	F	f	experience
	f	I	g	cookingTime
c	cls	net/minecraft/world/item/crafting/ArmorDyeRecipe
	m	(Lcly;)V	<init>	<init>
		p	1		category
	m	(II)Z	a	canCraftInDimensions
		p	1		width
		p	2		height
	m	(Lbgr;Lcpv;)Z	a	matches
		p	1		inventory
		p	2		world
	m	(Lbgr;Lhr;)Lcjf;	a	assemble
		p	1		inventory
		p	2		registryManager
	m	(Lcez;Lcpv;)Z	a	matches
		p	1		inventory
		p	2		world
	m	(Lcez;Lhr;)Lcjf;	a	assemble
		p	1		inventory
		p	2		registryManager
	m	()Lcmm;	an_	getSerializer
c	clt	net/minecraft/world/item/crafting/BannerDuplicateRecipe
	m	(Lcly;)V	<init>	<init>
		p	1		category
	m	(II)Z	a	canCraftInDimensions
		p	1		width
		p	2		height
	m	(Lbgr;)Lhn;	a	getRemainingItems
		p	1		inventory
	m	(Lbgr;Lcpv;)Z	a	matches
		p	1		inventory
		p	2		world
	m	(Lbgr;Lhr;)Lcjf;	a	assemble
		p	1		inventory
		p	2		registryManager
	m	(Lcez;)Lhn;	a	getRemainingItems
		p	1		inventory
	m	(Lcez;Lcpv;)Z	a	matches
		p	1		inventory
		p	2		world
	m	(Lcez;Lhr;)Lcjf;	a	assemble
		p	1		inventory
		p	2		registryManager
	m	()Lcmm;	an_	getSerializer
c	clu	net/minecraft/world/item/crafting/BlastingRecipe
	m	(Ljava/lang/String;Lclx;Lcmg;Lcjf;FI)V	<init>	<init>
		p	1		group
		p	2		category
		p	3		ingredient
		p	4		result
		p	5		experience
		p	6		cookingTime
	m	()Lcmm;	an_	getSerializer
	m	()Lcjf;	g	getToastSymbol
c	clv	net/minecraft/world/item/crafting/BookCloningRecipe
	m	(Lcly;)V	<init>	<init>
		p	1		category
	m	(II)Z	a	canCraftInDimensions
		p	1		width
		p	2		height
	m	(Lbgr;)Lhn;	a	getRemainingItems
		p	1		inventory
	m	(Lbgr;Lcpv;)Z	a	matches
		p	1		inventory
		p	2		world
	m	(Lbgr;Lhr;)Lcjf;	a	assemble
		p	1		inventory
		p	2		registryManager
	m	(Lcez;)Lhn;	a	getRemainingItems
		p	1		inventory
	m	(Lcez;Lcpv;)Z	a	matches
		p	1		inventory
		p	2		world
	m	(Lcez;Lhr;)Lcjf;	a	assemble
		p	1		inventory
		p	2		registryManager
	m	()Lcmm;	an_	getSerializer
c	clw	net/minecraft/world/item/crafting/CampfireCookingRecipe
	m	(Ljava/lang/String;Lclx;Lcmg;Lcjf;FI)V	<init>	<init>
		p	1		group
		p	2		category
		p	3		ingredient
		p	4		result
		p	5		experience
		p	6		cookingTime
	m	()Lcmm;	an_	getSerializer
	m	()Lcjf;	g	getToastSymbol
c	clx	net/minecraft/world/item/crafting/CookingBookCategory
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		id
	m	()[Lclx;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lclx;	a	FOOD
	f	Lclx;	b	BLOCKS
	f	Lclx;	c	MISC
	f	Lasp$a;	d	CODEC
	f	Ljava/lang/String;	e	name
	f	[Lclx;	f	$VALUES
c	cly	net/minecraft/world/item/crafting/CraftingBookCategory
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		id
	m	()[Lcly;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lcly;	a	BUILDING
	f	Lcly;	b	REDSTONE
	f	Lcly;	c	EQUIPMENT
	f	Lcly;	d	MISC
	f	Lasp$a;	e	CODEC
	f	Ljava/lang/String;	f	name
	f	[Lcly;	g	$VALUES
c	clz	net/minecraft/world/item/crafting/CraftingRecipe
	m	()Lcly;	d	category
	m	()Lcmn;	e	getType
c	cma	net/minecraft/world/item/crafting/CraftingRecipeCodecs
	m	()Ljava/lang/String;	a	lambda$static$3
	m	(Lcja;)Lcom/mojang/serialization/DataResult;	a	lambda$static$4
		p	0		item
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	()Ljava/lang/String;	b	lambda$static$0
	m	(Lcja;)Lcom/mojang/serialization/DataResult;	b	lambda$static$1
		p	0		item
	f	Lcom/mojang/serialization/Codec;	a	ITEMSTACK_OBJECT_CODEC
	f	Lcom/mojang/serialization/Codec;	b	ITEMSTACK_NONAIR_CODEC
	f	Lcom/mojang/serialization/Codec;	c	ITEM_NONAIR_CODEC
c	cmb	net/minecraft/world/item/crafting/CustomRecipe
	m	(Lcly;)V	<init>	<init>
		p	1		category
	m	(Lhr;)Lcjf;	a	getResultItem
		p	1		registryManager
	m	()Z	am_	isSpecial
	m	()Lcly;	d	category
	f	Lcly;	a	category
c	cmc	net/minecraft/world/item/crafting/DecoratedPotRecipe
	m	(Lcly;)V	<init>	<init>
		p	1		category
	m	(II)Z	a	canCraftInDimensions
		p	1		width
		p	2		height
	m	(Lbgr;Lcpv;)Z	a	matches
		p	1		inventory
		p	2		world
	m	(Lbgr;Lhr;)Lcjf;	a	assemble
		p	1		inventory
		p	2		registryManager
	m	(Lcez;Lcpv;)Z	a	matches
		p	1		inventory
		p	2		world
	m	(Lcez;Lhr;)Lcjf;	a	assemble
		p	1		inventory
		p	2		registryManager
	m	()Lcmm;	an_	getSerializer
c	cmd	net/minecraft/world/item/crafting/FireworkRocketRecipe
	m	(Lcly;)V	<init>	<init>
		p	1		category
	m	(II)Z	a	canCraftInDimensions
		p	1		width
		p	2		height
	m	(Lbgr;Lcpv;)Z	a	matches
		p	1		inventory
		p	2		world
	m	(Lbgr;Lhr;)Lcjf;	a	assemble
		p	1		inventory
		p	2		registryManager
	m	(Lcez;Lcpv;)Z	a	matches
		p	1		inventory
		p	2		world
	m	(Lcez;Lhr;)Lcjf;	a	assemble
		p	1		inventory
		p	2		registryManager
	m	(Lhr;)Lcjf;	a	getResultItem
		p	1		registryManager
	m	()Lcmm;	an_	getSerializer
	f	Lcmg;	a	PAPER_INGREDIENT
	f	Lcmg;	b	GUNPOWDER_INGREDIENT
	f	Lcmg;	c	STAR_INGREDIENT
c	cme	net/minecraft/world/item/crafting/FireworkStarFadeRecipe
	m	(Lcly;)V	<init>	<init>
		p	1		category
	m	(II)Z	a	canCraftInDimensions
		p	1		width
		p	2		height
	m	(Lbgr;Lcpv;)Z	a	matches
		p	1		inventory
		p	2		world
	m	(Lbgr;Lhr;)Lcjf;	a	assemble
		p	1		inventory
		p	2		registryManager
	m	(Lcez;Lcpv;)Z	a	matches
		p	1		inventory
		p	2		world
	m	(Lcez;Lhr;)Lcjf;	a	assemble
		p	1		inventory
		p	2		registryManager
	m	()Lcmm;	an_	getSerializer
	f	Lcmg;	a	STAR_INGREDIENT
c	cmf	net/minecraft/world/item/crafting/FireworkStarRecipe
	m	(Lcly;)V	<init>	<init>
		p	1		category
	m	(II)Z	a	canCraftInDimensions
		p	1		width
		p	2		height
	m	(Lbgr;Lcpv;)Z	a	matches
		p	1		inventory
		p	2		world
	m	(Lbgr;Lhr;)Lcjf;	a	assemble
		p	1		inventory
		p	2		registryManager
	m	(Lcez;Lcpv;)Z	a	matches
		p	1		inventory
		p	2		world
	m	(Lcez;Lhr;)Lcjf;	a	assemble
		p	1		inventory
		p	2		registryManager
	m	(Lhr;)Lcjf;	a	getResultItem
		p	1		registryManager
	m	(Ljava/util/HashMap;)V	a	lambda$static$0
		p	0		typeModifiers
	m	()Lcmm;	an_	getSerializer
	f	Lcmg;	a	SHAPE_INGREDIENT
	f	Lcmg;	b	TRAIL_INGREDIENT
	f	Lcmg;	c	FLICKER_INGREDIENT
	f	Ljava/util/Map;	d	SHAPE_BY_ITEM
	f	Lcmg;	e	GUNPOWDER_INGREDIENT
c	cmg	net/minecraft/world/item/crafting/Ingredient
	m	(Ljava/util/stream/Stream;)V	<init>	<init>
		p	1		entries
	m	([Lcmg$c;)V	<init>	<init>
		p	1		entries
	m	()[Lcjf;	a	getItems
	m	(I)[Lcjf;	a	lambda$getItems$2
	m	(Laqh;)Lcmg;	a	of
		p	0		tag
	m	(Lcjf;)Z	a	test
	m	(Lcmg$c;)Lcmg;	a	lambda$codec$6
		p	0		entry
	m	(Lcom/mojang/datafixers/util/Either;)Lcmg;	a	lambda$codec$7
		p	0		either
	m	(Ljava/util/stream/Stream;)Lcmg;	a	of
		p	0		stacks
	m	(Lso;)V	a	toNetwork
		p	1		buf
	m	(Z)Lcom/google/gson/JsonElement;	a	toJson
		p	1		allowEmpty
	m	(ZLcmg;)Lcom/mojang/serialization/DataResult;	a	lambda$codec$9
		p	1		ingredient
	m	(ZLjava/util/List;)Lcom/mojang/serialization/DataResult;	a	lambda$codec$5
		p	1		entries
	m	([Lcjf;)Lcmg;	a	of
		p	0		stacks
	m	([Lcpu;)Lcmg;	a	of
		p	0		items
	m	()Lit/unimi/dsi/fastutil/ints/IntList;	b	getStackingIds
	m	(I)[Lcmg$c;	b	lambda$new$0
	m	(Lcjf;)Z	b	lambda$of$3
		p	0		stack
	m	(Lcmg$c;)Ljava/util/stream/Stream;	b	lambda$getItems$1
		p	0		entry
	m	(Ljava/util/stream/Stream;)Lcmg;	b	fromValues
		p	0		entries
	m	(Lso;)Lcmg;	b	fromNetwork
		p	0		buf
	m	(Z)Lcom/mojang/serialization/Codec;	b	codec
		p	0		allowEmpty
	m	()Z	c	isEmpty
	m	()Lcmg;	d	of
	m	()Ljava/lang/String;	e	lambda$codec$8
	m	()Ljava/lang/String;	f	lambda$codec$4
	f	Lcmg;	a	EMPTY
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lcom/mojang/serialization/Codec;	c	CODEC_NONEMPTY
	f	[Lcmg$c;	d	values
	f	[Lcjf;	e	itemStacks
	f	Lit/unimi/dsi/fastutil/ints/IntList;	f	stackingIds
c	cmg$a	net/minecraft/world/item/crafting/Ingredient$ItemValue
	m	(Lcjf;)V	<init>	<init>
		p	1		stack
	m	()Ljava/util/Collection;	a	getItems
	m	(Lcmg$a;)Lcjf;	a	lambda$static$0
		p	0		entry
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	()Lcjf;	b	item
	f	Lcjf;	b	item
	f	Lcom/mojang/serialization/Codec;	c	CODEC
c	cmg$b	net/minecraft/world/item/crafting/Ingredient$TagValue
	m	(Laqh;)V	<init>	<init>
		p	1		tag
	m	()Ljava/util/Collection;	a	getItems
	m	(Lcmg$b;)Laqh;	a	lambda$static$0
		p	0		entry
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	()Laqh;	b	tag
	f	Laqh;	b	tag
	f	Lcom/mojang/serialization/Codec;	c	CODEC
c	cmg$c	net/minecraft/world/item/crafting/Ingredient$Value
	m	()Ljava/util/Collection;	a	getItems
	m	(Lcmg$a;)Ljava/lang/Record;	a	lambda$static$0
		p	0		stackEntry
	m	(Lcmg$b;)Ljava/lang/Record;	a	lambda$static$1
		p	0		tagEntry
	m	(Lcmg$c;)Lcom/mojang/datafixers/util/Either;	a	lambda$static$3
		p	0		entry
	m	(Lcom/mojang/datafixers/util/Either;)Lcmg$c;	a	lambda$static$2
		p	0		either
	f	Lcom/mojang/serialization/Codec;	a	CODEC
c	cmh	net/minecraft/world/item/crafting/MapCloningRecipe
	m	(Lcly;)V	<init>	<init>
		p	1		category
	m	(II)Z	a	canCraftInDimensions
		p	1		width
		p	2		height
	m	(Lbgr;Lcpv;)Z	a	matches
		p	1		inventory
		p	2		world
	m	(Lbgr;Lhr;)Lcjf;	a	assemble
		p	1		inventory
		p	2		registryManager
	m	(Lcez;Lcpv;)Z	a	matches
		p	1		inventory
		p	2		world
	m	(Lcez;Lhr;)Lcjf;	a	assemble
		p	1		inventory
		p	2		registryManager
	m	()Lcmm;	an_	getSerializer
c	cmi	net/minecraft/world/item/crafting/MapExtendingRecipe
	m	(Lcly;)V	<init>	<init>
		p	1		category
	m	(Lbgr;Lcpv;)Z	a	matches
		p	1		inventory
		p	2		world
	m	(Lbgr;Lhr;)Lcjf;	a	assemble
		p	1		inventory
		p	2		registryManager
	m	(Lcez;)Lcjf;	a	findFilledMap
		p	0		inventory
	m	(Lcez;Lcpv;)Z	a	matches
		p	1		inventory
		p	2		world
	m	(Lcez;Lhr;)Lcjf;	a	assemble
		p	1		inventory
		p	2		registryManager
	m	()Z	am_	isSpecial
	m	()Lcmm;	an_	getSerializer
c	cmj	net/minecraft/world/item/crafting/Recipe
	m	()Lhn;	a	getIngredients
	m	(II)Z	a	canCraftInDimensions
		p	1		width
		p	2		height
	m	(Lbgr;)Lhn;	a	getRemainingItems
		p	1		inventory
	m	(Lbgr;Lcpv;)Z	a	matches
		p	1		inventory
		p	2		world
	m	(Lbgr;Lhr;)Lcjf;	a	assemble
		p	1		inventory
		p	2		registryManager
	m	(Lcmg;)Z	a	lambda$isIncomplete$0
		p	0		ingredient
	m	(Lhr;)Lcjf;	a	getResultItem
		p	1		registryManager
	m	()Z	am_	isSpecial
	m	()Lcmm;	an_	getSerializer
	m	()Ljava/lang/String;	c	getGroup
	m	()Lcmn;	e	getType
	m	()Lcjf;	g	getToastSymbol
	m	()Z	h	showNotification
	m	()Z	i	isIncomplete
c	cmk	net/minecraft/world/item/crafting/RecipeHolder
	m	()Laew;	a	id
	m	()Lcmj;	b	value
	f	Laew;	a	id
	f	Lcmj;	b	value
c	cml	net/minecraft/world/item/crafting/RecipeManager
	m	()Z	a	hadErrorsLoading
	m	(Laew;)Ljava/util/Optional;	a	byKey
		p	1		id
	m	(Laew;Lcom/google/gson/JsonObject;)Lcmk;	a	fromJson
		p	0		id
		p	1		json
	m	(Lbgr;Lcpv;Lcmk;)Z	a	lambda$getRecipesFor$5
		p	2		recipe
	m	(Lbgr;Lcpv;Ljava/util/Map$Entry;)Z	a	lambda$getRecipeFor$3
		p	2		entry
	m	(Lcmn;)Ljava/util/List;	a	getAllRecipesFor
		p	1		type
	m	(Lcmn;Lbgr;Lcpv;)Ljava/util/Optional;	a	getRecipeFor
		p	1		type
		p	2		inventory
		p	3		world
	m	(Lcmn;Lbgr;Lcpv;Laew;)Ljava/util/Optional;	a	getRecipeFor
		p	1		type
		p	2		inventory
		p	3		world
		p	4		id
	m	(Lcpv;Lcmk;)Ljava/lang/String;	a	lambda$getRecipesFor$6
	m	(Ljava/lang/Iterable;)V	a	replaceRecipes
		p	1		recipes
	m	(Ljava/lang/Object;Lant;Lbdp;)V	a	apply
		p	1		prepared
		p	2		manager
		p	3		profiler
	m	(Ljava/lang/String;)Lcom/google/gson/JsonSyntaxException;	a	lambda$fromJson$9
	m	(Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair;	a	lambda$getRecipeFor$4
		p	0		entry
	m	(Ljava/util/Map;)Ljava/util/stream/Stream;	a	lambda$getRecipeIds$8
		p	0		map
	m	(Ljava/util/Map;Lant;Lbdp;)V	a	apply
		p	1		prepared
		p	2		manager
		p	3		profiler
	m	(Ljava/util/Map;Lcom/google/common/collect/ImmutableMap$Builder;Lcmk;)V	a	lambda$replaceRecipes$11
		p	2		recipe
	m	()Ljava/util/Collection;	b	getRecipes
	m	(Lbgr;Lcpv;Lcmk;)Z	b	lambda$getRecipeFor$2
		p	2		recipe
	m	(Lcmn;)Lcml$a;	b	createCheck
		p	0		type
	m	(Lcmn;Lbgr;Lcpv;)Ljava/util/List;	b	getRecipesFor
		p	1		type
		p	2		inventory
		p	3		world
	m	(Ljava/util/Map$Entry;)Ljava/util/Map;	b	lambda$apply$1
		p	0		entry
	m	(Ljava/util/Map;)Ljava/util/stream/Stream;	b	lambda$getRecipes$7
		p	0		map
	m	(Lcmn;)Ljava/util/Map;	c	byType
		p	1		type
	m	(Lcmn;Lbgr;Lcpv;)Lhn;	c	getRemainingItemsFor
		p	1		type
		p	2		inventory
		p	3		world
	m	()Ljava/util/stream/Stream;	d	getRecipeIds
	m	(Lcmn;)Ljava/util/Map;	d	lambda$replaceRecipes$10
		p	0		t
	m	(Lcmn;)Lcom/google/common/collect/ImmutableMap$Builder;	e	lambda$apply$0
		p	0		recipeType
	f	Lcom/google/gson/Gson;	a	GSON
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ljava/util/Map;	c	recipes
	f	Ljava/util/Map;	d	byName
	f	Z	e	hasErrors
c	cml$1	net/minecraft/world/item/crafting/RecipeManager$1
	m	(Lbgr;Lcpv;)Ljava/util/Optional;	a	getRecipeFor
		p	1		inventory
		p	2		world
	f	Lcmn;	a	val$type
	f	Laew;	b	lastRecipe
c	cml$a	net/minecraft/world/item/crafting/RecipeManager$CachedCheck
	m	(Lbgr;Lcpv;)Ljava/util/Optional;	a	getRecipeFor
		p	1		inventory
		p	2		world
c	cmm	net/minecraft/world/item/crafting/RecipeSerializer
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Ljava/lang/String;Lcmm;)Lcmm;	a	register
		p	0		id
		p	1		serializer
	m	(Lso;)Lcmj;	a	fromNetwork
		p	1		buf
	m	(Lso;Lcmj;)V	a	toNetwork
		p	1		buf
		p	2		recipe
	f	Lcmm;	a	SHAPED_RECIPE
	f	Lcmm;	b	SHAPELESS_RECIPE
	f	Lcmm;	c	ARMOR_DYE
	f	Lcmm;	d	BOOK_CLONING
	f	Lcmm;	e	MAP_CLONING
	f	Lcmm;	f	MAP_EXTENDING
	f	Lcmm;	g	FIREWORK_ROCKET
	f	Lcmm;	h	FIREWORK_STAR
	f	Lcmm;	i	FIREWORK_STAR_FADE
	f	Lcmm;	j	TIPPED_ARROW
	f	Lcmm;	k	BANNER_DUPLICATE
	f	Lcmm;	l	SHIELD_DECORATION
	f	Lcmm;	m	SHULKER_BOX_COLORING
	f	Lcmm;	n	SUSPICIOUS_STEW
	f	Lcmm;	o	REPAIR_ITEM
	f	Lcmm;	p	SMELTING_RECIPE
	f	Lcmm;	q	BLASTING_RECIPE
	f	Lcmm;	r	SMOKING_RECIPE
	f	Lcmm;	s	CAMPFIRE_COOKING_RECIPE
	f	Lcmm;	t	STONECUTTER
	f	Lcmm;	u	SMITHING_TRANSFORM
	f	Lcmm;	v	SMITHING_TRIM
	f	Lcmm;	w	DECORATED_POT_RECIPE
c	cmn	net/minecraft/world/item/crafting/RecipeType
	m	(Ljava/lang/String;)Lcmn;	a	register
		p	0		id
	f	Lcmn;	a	CRAFTING
	f	Lcmn;	b	SMELTING
	f	Lcmn;	c	BLASTING
	f	Lcmn;	d	SMOKING
	f	Lcmn;	e	CAMPFIRE_COOKING
	f	Lcmn;	f	STONECUTTING
	f	Lcmn;	g	SMITHING
c	cmn$1	net/minecraft/world/item/crafting/RecipeType$1
	f	Ljava/lang/String;	h	val$name
c	cmo	net/minecraft/world/item/crafting/RepairItemRecipe
	m	(Lcly;)V	<init>	<init>
		p	1		category
	m	(II)Z	a	canCraftInDimensions
		p	1		width
		p	2		height
	m	(Lbgr;Lcpv;)Z	a	matches
		p	1		inventory
		p	2		world
	m	(Lbgr;Lhr;)Lcjf;	a	assemble
		p	1		inventory
		p	2		registryManager
	m	(Lcez;Lcpv;)Z	a	matches
		p	1		inventory
		p	2		world
	m	(Lcez;Lhr;)Lcjf;	a	assemble
		p	1		inventory
		p	2		registryManager
	m	(Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Lcno;)V	a	lambda$assemble$0
		p	3		enchantment
	m	()Lcmm;	an_	getSerializer
c	cmp	net/minecraft/world/item/crafting/ShapedRecipe
	m	(Ljava/lang/String;Lcly;IILhn;Lcjf;)V	<init>	<init>
		p	1		group
		p	2		category
		p	3		width
		p	4		height
		p	5		ingredients
		p	6		result
	m	(Ljava/lang/String;Lcly;IILhn;Lcjf;Z)V	<init>	<init>
		p	1		group
		p	2		category
		p	3		width
		p	4		height
		p	5		ingredients
		p	6		result
		p	7		showNotification
	m	()Lhn;	a	getIngredients
	m	(II)Z	a	canCraftInDimensions
		p	1		width
		p	2		height
	m	(Lbgr;Lcpv;)Z	a	matches
		p	1		inventory
		p	2		world
	m	(Lbgr;Lhr;)Lcjf;	a	assemble
		p	1		inventory
		p	2		registryManager
	m	(Lcez;IIZ)Z	a	matches
		p	1		inv
		p	2		offsetX
		p	3		offsetY
		p	4		flipped
	m	(Lcez;Lcpv;)Z	a	matches
		p	1		inventory
		p	2		world
	m	(Lcez;Lhr;)Lcjf;	a	assemble
		p	1		inventory
		p	2		registryManager
	m	(Lcmg;)Z	a	lambda$isIncomplete$1
		p	0		ingredient
	m	(Lhr;)Lcjf;	a	getResultItem
		p	1		registryManager
	m	(Ljava/lang/String;)I	a	firstNonSpace
		p	0		line
	m	(Ljava/util/List;)[Ljava/lang/String;	a	shrink
		p	0		pattern
	m	()Lcmm;	an_	getSerializer
	m	(Lcmg;)Z	b	lambda$isIncomplete$0
		p	0		ingredient
	m	(Ljava/lang/String;)I	b	lastNonSpace
		p	0		pattern
	m	()Ljava/lang/String;	c	getGroup
	m	()Lcly;	d	category
	m	()Z	h	showNotification
	m	()Z	i	isIncomplete
	m	()I	j	getWidth
	m	()I	k	getHeight
	f	I	a	width
	f	I	b	height
	f	Lhn;	c	recipeItems
	f	Lcjf;	d	result
	f	Ljava/lang/String;	e	group
	f	Lcly;	f	category
	f	Z	g	showNotification
c	cmp$a	net/minecraft/world/item/crafting/ShapedRecipe$Serializer
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Lcmp$a$a;)Lcom/mojang/serialization/DataResult;	a	lambda$static$10
		p	0		recipe
	m	(Lcmp;)Lcom/mojang/serialization/DataResult;	a	lambda$static$11
		p	0		recipe
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$static$8
	m	(Ljava/util/List;)Lcom/mojang/serialization/DataResult;	a	lambda$static$4
		p	0		rows
	m	(Ljava/util/Set;)Ljava/lang/String;	a	lambda$static$9
	m	(Lso;)Lcmj;	a	fromNetwork
		p	1		buf
	m	(Lso;Lcmj;)V	a	toNetwork
		p	1		buf
		p	2		recipe
	m	(Lso;Lcmp;)V	a	toNetwork
		p	1		buf
		p	2		recipe
	m	()Ljava/lang/String;	b	lambda$static$6
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	b	lambda$static$7
		p	0		keyEntry
	m	(Lso;)Lcmp;	b	fromNetwork
	m	()Ljava/lang/String;	c	lambda$static$3
	m	(Ljava/lang/String;)Ljava/lang/String;	c	lambda$static$5
	m	()Ljava/lang/String;	d	lambda$static$2
	m	()Ljava/lang/String;	e	lambda$static$1
	m	()Ljava/lang/String;	f	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	x	PATTERN_CODEC
	f	Lcom/mojang/serialization/Codec;	y	SINGLE_CHARACTER_STRING_CODEC
	f	Lcom/mojang/serialization/Codec;	z	CODEC
c	cmp$a$a	net/minecraft/world/item/crafting/ShapedRecipe$Serializer$RawShapedRecipe
	m	()Ljava/lang/String;	a	group
	m	(Lcmp$a$a;)Ljava/lang/Boolean;	a	lambda$static$5
		p	0		recipe
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$6
		p	0		instance
	m	()Lcly;	b	category
	m	(Lcmp$a$a;)Lcjf;	b	lambda$static$4
		p	0		recipe
	m	()Ljava/util/Map;	c	key
	m	(Lcmp$a$a;)Ljava/util/List;	c	lambda$static$3
		p	0		recipe
	m	()Ljava/util/List;	d	pattern
	m	(Lcmp$a$a;)Ljava/util/Map;	d	lambda$static$2
		p	0		recipe
	m	()Lcjf;	e	result
	m	(Lcmp$a$a;)Lcly;	e	lambda$static$1
		p	0		recipe
	m	()Z	f	showNotification
	m	(Lcmp$a$a;)Ljava/lang/String;	f	lambda$static$0
		p	0		recipe
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/lang/String;	b	group
	f	Lcly;	c	category
	f	Ljava/util/Map;	d	key
	f	Ljava/util/List;	e	pattern
	f	Lcjf;	f	result
	f	Z	g	showNotification
c	cmq	net/minecraft/world/item/crafting/ShapelessRecipe
	m	(Ljava/lang/String;Lcly;Lcjf;Lhn;)V	<init>	<init>
		p	1		group
		p	2		category
		p	3		result
		p	4		ingredients
	m	()Lhn;	a	getIngredients
	m	(II)Z	a	canCraftInDimensions
		p	1		width
		p	2		height
	m	(Lbgr;Lcpv;)Z	a	matches
		p	1		inventory
		p	2		world
	m	(Lbgr;Lhr;)Lcjf;	a	assemble
		p	1		inventory
		p	2		registryManager
	m	(Lcez;Lcpv;)Z	a	matches
		p	1		inventory
		p	2		world
	m	(Lcez;Lhr;)Lcjf;	a	assemble
		p	1		inventory
		p	2		registryManager
	m	(Lhr;)Lcjf;	a	getResultItem
		p	1		registryManager
	m	()Lcmm;	an_	getSerializer
	m	()Ljava/lang/String;	c	getGroup
	m	()Lcly;	d	category
	f	Ljava/lang/String;	a	group
	f	Lcly;	b	category
	f	Lcjf;	c	result
	f	Lhn;	d	ingredients
c	cmq$a	net/minecraft/world/item/crafting/ShapelessRecipe$Serializer
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(I)[Lcmg;	a	lambda$static$4
	m	(Lcmg;)Z	a	lambda$static$3
		p	0		ingredient
	m	(Lcmq;)Lhn;	a	lambda$static$8
		p	0		recipe
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$9
		p	0		instance
	m	(Ljava/util/List;)Lcom/mojang/serialization/DataResult;	a	lambda$static$7
		p	0		ingredients
	m	(Lso;)Lcmj;	a	fromNetwork
		p	1		buf
	m	(Lso;Lcmj;)V	a	toNetwork
		p	1		buf
		p	2		recipe
	m	(Lso;Lcmq;)V	a	toNetwork
		p	1		buf
		p	2		recipe
	m	()Ljava/lang/String;	b	lambda$static$6
	m	(Lcmq;)Lcjf;	b	lambda$static$2
		p	0		recipe
	m	(Lso;)Lcmq;	b	fromNetwork
	m	()Ljava/lang/String;	c	lambda$static$5
	m	(Lcmq;)Lcly;	c	lambda$static$1
		p	0		recipe
	m	(Lcmq;)Ljava/lang/String;	d	lambda$static$0
		p	0		recipe
	f	Lcom/mojang/serialization/Codec;	x	CODEC
c	cmr	net/minecraft/world/item/crafting/ShieldDecorationRecipe
	m	(Lcly;)V	<init>	<init>
		p	1		category
	m	(II)Z	a	canCraftInDimensions
		p	1		width
		p	2		height
	m	(Lbgr;Lcpv;)Z	a	matches
		p	1		inventory
		p	2		world
	m	(Lbgr;Lhr;)Lcjf;	a	assemble
		p	1		inventory
		p	2		registryManager
	m	(Lcez;Lcpv;)Z	a	matches
		p	1		inventory
		p	2		world
	m	(Lcez;Lhr;)Lcjf;	a	assemble
		p	1		inventory
		p	2		registryManager
	m	()Lcmm;	an_	getSerializer
c	cms	net/minecraft/world/item/crafting/ShulkerBoxColoring
	m	(Lcly;)V	<init>	<init>
		p	1		category
	m	(II)Z	a	canCraftInDimensions
		p	1		width
		p	2		height
	m	(Lbgr;Lcpv;)Z	a	matches
		p	1		inventory
		p	2		world
	m	(Lbgr;Lhr;)Lcjf;	a	assemble
		p	1		inventory
		p	2		registryManager
	m	(Lcez;Lcpv;)Z	a	matches
		p	1		inventory
		p	2		world
	m	(Lcez;Lhr;)Lcjf;	a	assemble
		p	1		inventory
		p	2		registryManager
	m	()Lcmm;	an_	getSerializer
c	cmt	net/minecraft/world/item/crafting/SimpleCookingSerializer
	m	(Lcmt$a;I)V	<init>	<init>
		p	1		recipeFactory
		p	2		cookingTime
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(ILcmt$a;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$new$6
		p	2		instance
	m	(Lclr;)Ljava/lang/Integer;	a	lambda$new$5
		p	0		recipe
	m	(Lso;)Lcmj;	a	fromNetwork
		p	1		buf
	m	(Lso;Lclr;)V	a	toNetwork
		p	1		buf
		p	2		recipe
	m	(Lso;Lcmj;)V	a	toNetwork
		p	1		buf
		p	2		recipe
	m	(Lclr;)Ljava/lang/Float;	b	lambda$new$4
		p	0		recipe
	m	(Lso;)Lclr;	b	fromNetwork
	m	(Lclr;)Lcjf;	c	lambda$new$3
		p	0		recipe
	m	(Lclr;)Lcmg;	d	lambda$new$2
		p	0		recipe
	m	(Lclr;)Lclx;	e	lambda$new$1
		p	0		recipe
	m	(Lclr;)Ljava/lang/String;	f	lambda$new$0
		p	0		recipe
	f	Lcmt$a;	x	factory
	f	Lcom/mojang/serialization/Codec;	y	codec
c	cmt$a	net/minecraft/world/item/crafting/SimpleCookingSerializer$CookieBaker
	m	(Ljava/lang/String;Lclx;Lcmg;Lcjf;FI)Lclr;	create	create
		p	1		group
		p	2		category
		p	3		ingredient
		p	4		result
		p	5		experience
		p	6		cookingTime
c	cmu	net/minecraft/world/item/crafting/SimpleCraftingRecipeSerializer
	m	(Lcmu$a;)V	<init>	<init>
		p	1		factory
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Lcmu$a;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$new$0
		p	1		instance
	m	(Lso;)Lcmj;	a	fromNetwork
		p	1		buf
	m	(Lso;Lclz;)V	a	toNetwork
		p	1		buf
		p	2		recipe
	m	(Lso;Lcmj;)V	a	toNetwork
		p	1		buf
		p	2		recipe
	m	(Lso;)Lclz;	b	fromNetwork
	f	Lcmu$a;	x	constructor
	f	Lcom/mojang/serialization/Codec;	y	codec
c	cmu$a	net/minecraft/world/item/crafting/SimpleCraftingRecipeSerializer$Factory
	m	(Lcly;)Lclz;	create	create
		p	1		category
c	cmv	net/minecraft/world/item/crafting/SingleItemRecipe
	m	(Lcmn;Lcmm;Ljava/lang/String;Lcmg;Lcjf;)V	<init>	<init>
		p	1		type
		p	2		serializer
		p	3		group
		p	4		ingredient
		p	5		result
	m	()Lhn;	a	getIngredients
	m	(II)Z	a	canCraftInDimensions
		p	1		width
		p	2		height
	m	(Lbgr;Lhr;)Lcjf;	a	assemble
		p	1		inventory
		p	2		registryManager
	m	(Lhr;)Lcjf;	a	getResultItem
		p	1		registryManager
	m	()Lcmm;	an_	getSerializer
	m	()Ljava/lang/String;	c	getGroup
	m	()Lcmn;	e	getType
	f	Lcmg;	a	ingredient
	f	Lcjf;	b	result
	f	Ljava/lang/String;	c	group
	f	Lcmn;	d	type
	f	Lcmm;	e	serializer
c	cmv$a	net/minecraft/world/item/crafting/SingleItemRecipe$Serializer
	m	(Lcmv$a$a;)V	<init>	<init>
		p	1		recipeFactory
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Lcmv$a$a;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$new$4
		p	1		instance
	m	(Lcmv;)Lcjf;	a	lambda$new$3
		p	0		recipe
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lso;)Lcmj;	a	fromNetwork
		p	1		buf
	m	(Lso;Lcmj;)V	a	toNetwork
		p	1		buf
		p	2		recipe
	m	(Lso;Lcmv;)V	a	toNetwork
		p	1		buf
		p	2		recipe
	m	(Lcmv;)Lcmg;	b	lambda$new$2
		p	0		recipe
	m	(Lso;)Lcmv;	b	fromNetwork
	m	(Lcmv;)Ljava/lang/String;	c	lambda$new$1
		p	0		recipe
	f	Lcmv$a$a;	x	factory
	f	Lcom/mojang/serialization/MapCodec;	y	RESULT_CODEC
	f	Lcom/mojang/serialization/Codec;	z	codec
c	cmv$a$a	net/minecraft/world/item/crafting/SingleItemRecipe$Serializer$SingleItemMaker
	m	(Ljava/lang/String;Lcmg;Lcjf;)Lcmv;	create	create
		p	1		group
		p	2		ingredient
		p	3		result
c	cmw	net/minecraft/world/item/crafting/SmeltingRecipe
	m	(Ljava/lang/String;Lclx;Lcmg;Lcjf;FI)V	<init>	<init>
		p	1		group
		p	2		category
		p	3		ingredient
		p	4		result
		p	5		experience
		p	6		cookingTime
	m	()Lcmm;	an_	getSerializer
	m	()Lcjf;	g	getToastSymbol
c	cmx	net/minecraft/world/item/crafting/SmithingRecipe
	m	(II)Z	a	canCraftInDimensions
		p	1		width
		p	2		height
	m	(Lcjf;)Z	a	isTemplateIngredient
		p	1		stack
	m	(Lcjf;)Z	b	isBaseIngredient
		p	1		stack
	m	(Lcjf;)Z	c	isAdditionIngredient
		p	1		stack
	m	()Lcmn;	e	getType
	m	()Lcjf;	g	getToastSymbol
c	cmy	net/minecraft/world/item/crafting/SmithingTransformRecipe
	m	(Lcmg;Lcmg;Lcmg;Lcjf;)V	<init>	<init>
		p	1		template
		p	2		base
		p	3		addition
		p	4		result
	m	(Lbgr;Lcpv;)Z	a	matches
		p	1		inventory
		p	2		world
	m	(Lbgr;Lhr;)Lcjf;	a	assemble
		p	1		inventory
		p	2		registryManager
	m	(Lcjf;)Z	a	isTemplateIngredient
		p	1		stack
	m	(Lhr;)Lcjf;	a	getResultItem
		p	1		registryManager
	m	()Lcmm;	an_	getSerializer
	m	(Lcjf;)Z	b	isBaseIngredient
		p	1		stack
	m	(Lcjf;)Z	c	isAdditionIngredient
		p	1		stack
	m	()Z	i	isIncomplete
	f	Lcmg;	a	template
	f	Lcmg;	b	base
	f	Lcmg;	c	addition
	f	Lcjf;	d	result
c	cmy$a	net/minecraft/world/item/crafting/SmithingTransformRecipe$Serializer
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Lcmy;)Lcjf;	a	lambda$static$3
		p	0		recipe
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
		p	0		instance
	m	(Lso;)Lcmj;	a	fromNetwork
		p	1		buf
	m	(Lso;Lcmj;)V	a	toNetwork
		p	1		buf
		p	2		recipe
	m	(Lso;Lcmy;)V	a	toNetwork
		p	1		buf
		p	2		recipe
	m	(Lcmy;)Lcmg;	b	lambda$static$2
		p	0		recipe
	m	(Lso;)Lcmy;	b	fromNetwork
	m	(Lcmy;)Lcmg;	c	lambda$static$1
		p	0		recipe
	m	(Lcmy;)Lcmg;	d	lambda$static$0
		p	0		recipe
	f	Lcom/mojang/serialization/Codec;	x	CODEC
c	cmz	net/minecraft/world/item/crafting/SmithingTrimRecipe
	m	(Lcmg;Lcmg;Lcmg;)V	<init>	<init>
		p	1		template
		p	2		base
		p	3		addition
	m	(Lbgr;Lcpv;)Z	a	matches
		p	1		inventory
		p	2		world
	m	(Lbgr;Lhr;)Lcjf;	a	assemble
		p	1		inventory
		p	2		registryManager
	m	(Lcjf;)Z	a	isTemplateIngredient
		p	1		stack
	m	(Lhr;)Lcjf;	a	getResultItem
		p	1		registryManager
	m	()Lcmm;	an_	getSerializer
	m	(Lcjf;)Z	b	isBaseIngredient
		p	1		stack
	m	(Lcjf;)Z	c	isAdditionIngredient
		p	1		stack
	m	()Z	i	isIncomplete
	f	Lcmg;	a	template
	f	Lcmg;	b	base
	f	Lcmg;	c	addition
c	cmz$a	net/minecraft/world/item/crafting/SmithingTrimRecipe$Serializer
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Lcmz;)Lcmg;	a	lambda$static$2
		p	0		recipe
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	(Lso;)Lcmj;	a	fromNetwork
		p	1		buf
	m	(Lso;Lcmj;)V	a	toNetwork
		p	1		buf
		p	2		recipe
	m	(Lso;Lcmz;)V	a	toNetwork
		p	1		buf
		p	2		recipe
	m	(Lcmz;)Lcmg;	b	lambda$static$1
		p	0		recipe
	m	(Lso;)Lcmz;	b	fromNetwork
	m	(Lcmz;)Lcmg;	c	lambda$static$0
		p	0		recipe
	f	Lcom/mojang/serialization/Codec;	x	CODEC
c	cna	net/minecraft/world/item/crafting/SmokingRecipe
	m	(Ljava/lang/String;Lclx;Lcmg;Lcjf;FI)V	<init>	<init>
		p	1		group
		p	2		category
		p	3		ingredient
		p	4		result
		p	5		experience
		p	6		cookingTime
	m	()Lcmm;	an_	getSerializer
	m	()Lcjf;	g	getToastSymbol
c	cnb	net/minecraft/world/item/crafting/StonecutterRecipe
	m	(Ljava/lang/String;Lcmg;Lcjf;)V	<init>	<init>
		p	1		group
		p	2		ingredient
		p	3		result
	m	(Lbgr;Lcpv;)Z	a	matches
		p	1		inventory
		p	2		world
	m	()Lcjf;	g	getToastSymbol
c	cnc	net/minecraft/world/item/crafting/SuspiciousStewRecipe
	m	(Lcly;)V	<init>	<init>
		p	1		category
	m	(II)Z	a	canCraftInDimensions
		p	1		width
		p	2		height
	m	(Lbgr;Lcpv;)Z	a	matches
		p	1		inventory
		p	2		world
	m	(Lbgr;Lhr;)Lcjf;	a	assemble
		p	1		inventory
		p	2		registryManager
	m	(Lcez;Lcpv;)Z	a	matches
		p	1		inventory
		p	2		world
	m	(Lcez;Lhr;)Lcjf;	a	assemble
		p	1		inventory
		p	2		registryManager
	m	()Lcmm;	an_	getSerializer
c	cnd	net/minecraft/world/item/crafting/TippedArrowRecipe
	m	(Lcly;)V	<init>	<init>
		p	1		category
	m	(II)Z	a	canCraftInDimensions
		p	1		width
		p	2		height
	m	(Lbgr;Lcpv;)Z	a	matches
		p	1		inventory
		p	2		world
	m	(Lbgr;Lhr;)Lcjf;	a	assemble
		p	1		inventory
		p	2		registryManager
	m	(Lcez;Lcpv;)Z	a	matches
		p	1		inventory
		p	2		world
	m	(Lcez;Lhr;)Lcjf;	a	assemble
		p	1		inventory
		p	2		registryManager
	m	()Lcmm;	an_	getSerializer
c	cne	net/minecraft/world/item/crafting/package-info
c	cnf	net/minecraft/world/item/enchantment/ArrowDamageEnchantment
	m	(Lcno$a;[Lbiv;)V	<init>	<init>
		p	1		weight
		p	2		slotTypes
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
		p	1		level
	m	(I)I	b	getMaxCost
		p	1		level
c	cng	net/minecraft/world/item/enchantment/ArrowFireEnchantment
	m	(Lcno$a;[Lbiv;)V	<init>	<init>
		p	1		weight
		p	2		slotTypes
	m	(I)I	a	getMinCost
		p	1		level
	m	(I)I	b	getMaxCost
		p	1		level
c	cnh	net/minecraft/world/item/enchantment/ArrowInfiniteEnchantment
	m	(Lcno$a;[Lbiv;)V	<init>	<init>
		p	1		weight
		p	2		slotTypes
	m	(I)I	a	getMinCost
		p	1		level
	m	(Lcno;)Z	a	checkCompatibility
		p	1		other
	m	(I)I	b	getMaxCost
		p	1		level
c	cni	net/minecraft/world/item/enchantment/ArrowKnockbackEnchantment
	m	(Lcno$a;[Lbiv;)V	<init>	<init>
		p	1		weight
		p	2		slotTypes
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
		p	1		level
	m	(I)I	b	getMaxCost
		p	1		level
c	cnj	net/minecraft/world/item/enchantment/ArrowPiercingEnchantment
	m	(Lcno$a;[Lbiv;)V	<init>	<init>
		p	1		weight
		p	2		slotTypes
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
		p	1		level
	m	(Lcno;)Z	a	checkCompatibility
		p	1		other
	m	(I)I	b	getMaxCost
		p	1		level
c	cnk	net/minecraft/world/item/enchantment/BindingCurseEnchantment
	m	(Lcno$a;[Lbiv;)V	<init>	<init>
		p	1		weight
		p	2		slotTypes
	m	(I)I	a	getMinCost
		p	1		level
	m	(Lcjf;)Z	a	canEnchant
		p	1		stack
	m	()Z	b	isTreasureOnly
	m	(I)I	b	getMaxCost
		p	1		level
	m	()Z	c	isCurse
c	cnl	net/minecraft/world/item/enchantment/DamageEnchantment
	m	(Lcno$a;I[Lbiv;)V	<init>	<init>
		p	1		weight
		p	2		typeIndex
		p	3		slots
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
		p	1		level
	m	(ILbjl;)F	a	getDamageBonus
		p	1		level
		p	2		group
	m	(Lbjg;Lbiq;I)V	a	doPostAttack
		p	1		user
		p	2		target
		p	3		level
	m	(Lcjf;)Z	a	canEnchant
		p	1		stack
	m	(Lcno;)Z	a	checkCompatibility
		p	1		other
	m	(I)I	b	getMaxCost
		p	1		level
	f	I	a	ALL
	f	I	b	UNDEAD
	f	I	c	ARTHROPODS
	f	I	d	type
	f	[Ljava/lang/String;	g	NAMES
	f	[I	h	MIN_COST
	f	[I	i	LEVEL_COST
	f	[I	j	LEVEL_COST_SPAN
c	cnm	net/minecraft/world/item/enchantment/DigDurabilityEnchantment
	m	(Lcno$a;[Lbiv;)V	<init>	<init>
		p	1		weight
		p	2		slotTypes
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
		p	1		level
	m	(Lcjf;)Z	a	canEnchant
		p	1		stack
	m	(Lcjf;ILasc;)Z	a	shouldIgnoreDurabilityDrop
		p	0		item
		p	1		level
		p	2		random
	m	(I)I	b	getMaxCost
		p	1		level
c	cnn	net/minecraft/world/item/enchantment/DiggingEnchantment
	m	(Lcno$a;[Lbiv;)V	<init>	<init>
		p	1		weight
		p	2		slotTypes
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
		p	1		level
	m	(Lcjf;)Z	a	canEnchant
		p	1		stack
	m	(I)I	b	getMaxCost
		p	1		level
c	cno	net/minecraft/world/item/enchantment/Enchantment
	m	(Lcno$a;Lcnp;[Lbiv;)V	<init>	<init>
		p	1		rarity
		p	2		target
		p	3		slotTypes
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
		p	1		level
	m	(ILbho;)I	a	getDamageProtection
		p	1		level
		p	2		source
	m	(ILbjl;)F	a	getDamageBonus
		p	1		level
		p	2		group
	m	(Lbjg;)Ljava/util/Map;	a	getSlotItems
		p	1		entity
	m	(Lbjg;Lbiq;I)V	a	doPostAttack
		p	1		user
		p	2		target
		p	3		level
	m	(Lcjf;)Z	a	canEnchant
		p	1		stack
	m	(Lcno;)Z	a	checkCompatibility
		p	1		other
	m	()Z	b	isTreasureOnly
	m	(I)I	b	getMaxCost
		p	1		level
	m	(Lbjg;Lbiq;I)V	b	doPostHurt
		p	1		user
		p	2		attacker
		p	3		level
	m	(Lcno;)Z	b	isCompatibleWith
		p	1		other
	m	()Z	c	isCurse
	m	(I)Lcno;	c	byId
		p	0		id
	m	()Lcno$a;	d	getRarity
	m	(I)Ltl;	d	getFullname
		p	1		level
	m	()I	e	getMinLevel
	m	()Ljava/lang/String;	f	getOrCreateDescriptionId
	m	()Ljava/lang/String;	g	getDescriptionId
	m	()Z	h	isTradeable
	m	()Z	i	isDiscoverable
	m	()Lhe$c;	j	builtInRegistryHolder
	f	[Lbiv;	a	slots
	f	Lcno$a;	b	rarity
	f	Lhe$c;	c	builtInRegistryHolder
	f	Lcnp;	e	category
	f	Ljava/lang/String;	f	descriptionId
c	cno$a	net/minecraft/world/item/enchantment/Enchantment$Rarity
	m	(Ljava/lang/String;II)V	<init>	<init>
		p	3		weight
	m	()I	a	getWeight
	m	()[Lcno$a;	b	$values
	f	Lcno$a;	a	COMMON
	f	Lcno$a;	b	UNCOMMON
	f	Lcno$a;	c	RARE
	f	Lcno$a;	d	VERY_RARE
	f	I	e	weight
	f	[Lcno$a;	f	$VALUES
c	cnp	net/minecraft/world/item/enchantment/EnchantmentCategory
	m	()[Lcnp;	a	$values
	m	(Lcja;)Z	a	canEnchant
		p	1		item
	f	Lcnp;	a	ARMOR
	f	Lcnp;	b	ARMOR_FEET
	f	Lcnp;	c	ARMOR_LEGS
	f	Lcnp;	d	ARMOR_CHEST
	f	Lcnp;	e	ARMOR_HEAD
	f	Lcnp;	f	WEAPON
	f	Lcnp;	g	DIGGER
	f	Lcnp;	h	FISHING_ROD
	f	Lcnp;	i	TRIDENT
	f	Lcnp;	j	BREAKABLE
	f	Lcnp;	k	BOW
	f	Lcnp;	l	WEARABLE
	f	Lcnp;	m	CROSSBOW
	f	Lcnp;	n	VANISHABLE
	f	[Lcnp;	o	$VALUES
c	cnp$1	net/minecraft/world/item/enchantment/EnchantmentCategory$1
	m	(Lcja;)Z	a	canEnchant
		p	1		item
c	cnp$2	net/minecraft/world/item/enchantment/EnchantmentCategory$10
	m	(Lcja;)Z	a	canEnchant
		p	1		item
c	cnp$3	net/minecraft/world/item/enchantment/EnchantmentCategory$11
	m	(Lcja;)Z	a	canEnchant
		p	1		item
c	cnp$4	net/minecraft/world/item/enchantment/EnchantmentCategory$12
	m	(Lcja;)Z	a	canEnchant
		p	1		item
c	cnp$5	net/minecraft/world/item/enchantment/EnchantmentCategory$13
	m	(Lcja;)Z	a	canEnchant
		p	1		item
c	cnp$6	net/minecraft/world/item/enchantment/EnchantmentCategory$14
	m	(Lcja;)Z	a	canEnchant
		p	1		item
c	cnp$7	net/minecraft/world/item/enchantment/EnchantmentCategory$2
	m	(Lcja;)Z	a	canEnchant
		p	1		item
c	cnp$8	net/minecraft/world/item/enchantment/EnchantmentCategory$3
	m	(Lcja;)Z	a	canEnchant
		p	1		item
c	cnp$9	net/minecraft/world/item/enchantment/EnchantmentCategory$4
	m	(Lcja;)Z	a	canEnchant
		p	1		item
c	cnp$10	net/minecraft/world/item/enchantment/EnchantmentCategory$5
	m	(Lcja;)Z	a	canEnchant
		p	1		item
c	cnp$11	net/minecraft/world/item/enchantment/EnchantmentCategory$6
	m	(Lcja;)Z	a	canEnchant
		p	1		item
c	cnp$12	net/minecraft/world/item/enchantment/EnchantmentCategory$7
	m	(Lcja;)Z	a	canEnchant
		p	1		item
c	cnp$13	net/minecraft/world/item/enchantment/EnchantmentCategory$8
	m	(Lcja;)Z	a	canEnchant
		p	1		item
c	cnp$14	net/minecraft/world/item/enchantment/EnchantmentCategory$9
	m	(Lcja;)Z	a	canEnchant
		p	1		item
c	cnq	net/minecraft/world/item/enchantment/EnchantmentHelper
	m	(ILcjf;Z)Ljava/util/List;	a	getAvailableEnchantmentResults
		p	0		power
		p	1		stack
		p	2		treasureAllowed
	m	(Laew;I)Lqw;	a	storeEnchantment
		p	0		id
		p	1		lvl
	m	(Lasc;IILcjf;)I	a	getEnchantmentCost
		p	0		random
		p	1		slotIndex
		p	2		bookshelfCount
		p	3		stack
	m	(Lasc;Lcjf;IZ)Lcjf;	a	enchantItem
		p	0		random
		p	1		target
		p	2		level
		p	3		treasureAllowed
	m	(Lbjg;)F	a	getSweepingDamageRatio
		p	0		entity
	m	(Lbjg;Lbiq;)V	a	doPostHurtEffects
		p	0		user
		p	1		attacker
	m	(Lbjg;Lbiq;Lcno;I)V	a	lambda$doPostDamageEffects$5
		p	2		enchantment
		p	3		level
	m	(Lcjf;)Ljava/util/Map;	a	getEnchantments
		p	0		stack
	m	(Lcjf;Lbjl;)F	a	getDamageBonus
		p	0		stack
		p	1		group
	m	(Lcno;)Laew;	a	getEnchantmentId
		p	0		enchantment
	m	(Lcno;Lbjg;)I	a	getEnchantmentLevel
		p	0		enchantment
		p	1		entity
	m	(Lcno;Lbjg;Ljava/util/function/Predicate;)Ljava/util/Map$Entry;	a	getRandomItemWith
		p	0		enchantment
		p	1		entity
		p	2		condition
	m	(Lcno;Lcjf;)I	a	getItemEnchantmentLevel
		p	0		enchantment
		p	1		stack
	m	(Lcnq$a;Lcjf;)V	a	runIterationOnItem
		p	0		consumer
		p	1		stack
	m	(Lcnq$a;Ljava/lang/Iterable;)V	a	runIterationOnInventory
		p	0		consumer
		p	1		stacks
	m	(Lcnq$a;Lqw;Lcno;)V	a	lambda$runIterationOnItem$1
		p	2		enchantment
	m	(Ljava/lang/Iterable;Lbho;)I	a	getDamageProtection
		p	0		equipment
		p	1		source
	m	(Ljava/util/Collection;Lcno;)Z	a	isEnchantmentCompatible
		p	0		existing
		p	1		candidate
	m	(Ljava/util/List;Lcnr;)V	a	filterCompatibleEnchantments
		p	0		possibleEntries
		p	1		pickedEntry
	m	(Ljava/util/Map;Lcjf;)V	a	setEnchantments
		p	0		enchantments
		p	1		stack
	m	(Ljava/util/Map;Lqw;Lcno;)V	a	lambda$deserializeEnchantments$0
		p	2		enchantment
	m	(Lorg/apache/commons/lang3/mutable/MutableFloat;Lbjl;Lcno;I)V	a	lambda$getDamageBonus$3
		p	2		enchantment
		p	3		level
	m	(Lorg/apache/commons/lang3/mutable/MutableInt;Lbho;Lcno;I)V	a	lambda$getDamageProtection$2
		p	2		enchantment
		p	3		level
	m	(Lqw;)I	a	getEnchantmentLevel
		p	0		nbt
	m	(Lqw;I)V	a	setEnchantmentLevel
		p	0		nbt
		p	1		lvl
	m	(Lrc;)Ljava/util/Map;	a	deserializeEnchantments
		p	0		list
	m	(Lasc;Lcjf;IZ)Ljava/util/List;	b	selectEnchantment
		p	0		random
		p	1		stack
		p	2		level
		p	3		treasureAllowed
	m	(Lbjg;)F	b	getSneakingSpeedBonus
		p	0		entity
	m	(Lbjg;Lbiq;)V	b	doPostDamageEffects
		p	0		user
		p	1		target
	m	(Lbjg;Lbiq;Lcno;I)V	b	lambda$doPostHurtEffects$4
		p	2		enchantment
		p	3		level
	m	(Lcjf;)I	b	getFishingLuckBonus
		p	0		stack
	m	(Lcno;Lbjg;)Ljava/util/Map$Entry;	b	getRandomItemWith
		p	0		enchantment
		p	1		entity
	m	(Lqw;)Laew;	b	getEnchantmentId
		p	0		nbt
	m	(Lbjg;)I	c	getKnockbackBonus
		p	0		entity
	m	(Lcjf;)I	c	getFishingSpeedBonus
		p	0		stack
	m	(Lbjg;)I	d	getFireAspect
		p	0		entity
	m	(Lcjf;)Z	d	hasBindingCurse
		p	0		stack
	m	(Lbjg;)I	e	getRespiration
		p	0		entity
	m	(Lcjf;)Z	e	hasVanishingCurse
		p	0		stack
	m	(Lbjg;)I	f	getDepthStrider
		p	0		entity
	m	(Lcjf;)Z	f	hasSilkTouch
		p	0		stack
	m	(Lbjg;)I	g	getBlockEfficiency
		p	0		entity
	m	(Lcjf;)I	g	getLoyalty
		p	0		stack
	m	(Lbjg;)I	h	getMobLooting
		p	0		entity
	m	(Lcjf;)I	h	getRiptide
		p	0		stack
	m	(Lbjg;)Z	i	hasAquaAffinity
		p	0		entity
	m	(Lcjf;)Z	i	hasChanneling
		p	0		stack
	m	(Lbjg;)Z	j	hasFrostWalker
		p	0		entity
	m	(Lcjf;)Z	j	lambda$getRandomItemWith$6
		p	0		stack
	m	(Lbjg;)Z	k	hasSoulSpeed
		p	0		entity
	f	Ljava/lang/String;	a	TAG_ENCH_ID
	f	Ljava/lang/String;	b	TAG_ENCH_LEVEL
	f	F	c	SWIFT_SNEAK_EXTRA_FACTOR
c	cnq$a	net/minecraft/world/item/enchantment/EnchantmentHelper$EnchantmentVisitor
	m	(Lcno;I)V	accept	accept
		p	1		enchantment
		p	2		level
c	cnr	net/minecraft/world/item/enchantment/EnchantmentInstance
	m	(Lcno;I)V	<init>	<init>
		p	1		enchantment
		p	2		level
	f	Lcno;	a	enchantment
	f	I	b	level
c	cns	net/minecraft/world/item/enchantment/Enchantments
	m	(Ljava/lang/String;Lcno;)Lcno;	a	register
		p	0		name
		p	1		enchantment
	f	Lcno;	A	FLAMING_ARROWS
	f	Lcno;	B	INFINITY_ARROWS
	f	Lcno;	C	FISHING_LUCK
	f	Lcno;	D	FISHING_SPEED
	f	Lcno;	E	LOYALTY
	f	Lcno;	F	IMPALING
	f	Lcno;	G	RIPTIDE
	f	Lcno;	H	CHANNELING
	f	Lcno;	I	MULTISHOT
	f	Lcno;	J	QUICK_CHARGE
	f	Lcno;	K	PIERCING
	f	Lcno;	L	MENDING
	f	Lcno;	M	VANISHING_CURSE
	f	[Lbiv;	N	ARMOR_SLOTS
	f	Lcno;	a	ALL_DAMAGE_PROTECTION
	f	Lcno;	b	FIRE_PROTECTION
	f	Lcno;	c	FALL_PROTECTION
	f	Lcno;	d	BLAST_PROTECTION
	f	Lcno;	e	PROJECTILE_PROTECTION
	f	Lcno;	f	RESPIRATION
	f	Lcno;	g	AQUA_AFFINITY
	f	Lcno;	h	THORNS
	f	Lcno;	i	DEPTH_STRIDER
	f	Lcno;	j	FROST_WALKER
	f	Lcno;	k	BINDING_CURSE
	f	Lcno;	l	SOUL_SPEED
	f	Lcno;	m	SWIFT_SNEAK
	f	Lcno;	n	SHARPNESS
	f	Lcno;	o	SMITE
	f	Lcno;	p	BANE_OF_ARTHROPODS
	f	Lcno;	q	KNOCKBACK
	f	Lcno;	r	FIRE_ASPECT
	f	Lcno;	s	MOB_LOOTING
	f	Lcno;	t	SWEEPING_EDGE
	f	Lcno;	u	BLOCK_EFFICIENCY
	f	Lcno;	v	SILK_TOUCH
	f	Lcno;	w	UNBREAKING
	f	Lcno;	x	BLOCK_FORTUNE
	f	Lcno;	y	POWER_ARROWS
	f	Lcno;	z	PUNCH_ARROWS
c	cnt	net/minecraft/world/item/enchantment/FireAspectEnchantment
	m	(Lcno$a;[Lbiv;)V	<init>	<init>
		p	1		weight
		p	2		slotTypes
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
		p	1		level
	m	(I)I	b	getMaxCost
		p	1		level
c	cnu	net/minecraft/world/item/enchantment/FishingSpeedEnchantment
	m	(Lcno$a;Lcnp;[Lbiv;)V	<init>	<init>
		p	1		rarity
		p	2		target
		p	3		slotTypes
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
		p	1		level
	m	(I)I	b	getMaxCost
		p	1		level
c	cnv	net/minecraft/world/item/enchantment/FrostWalkerEnchantment
	m	(Lcno$a;[Lbiv;)V	<init>	<init>
		p	1		weight
		p	2		slotTypes
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
		p	1		level
	m	(Lbjg;Lcpv;Lgw;I)V	a	onEntityMoved
		p	0		entity
		p	1		world
		p	2		blockPos
		p	3		level
	m	(Lcno;)Z	a	checkCompatibility
		p	1		other
	m	()Z	b	isTreasureOnly
	m	(I)I	b	getMaxCost
		p	1		level
c	cnw	net/minecraft/world/item/enchantment/KnockbackEnchantment
	m	(Lcno$a;[Lbiv;)V	<init>	<init>
		p	1		weight
		p	2		slot
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
		p	1		level
	m	(I)I	b	getMaxCost
		p	1		level
c	cnx	net/minecraft/world/item/enchantment/LootBonusEnchantment
	m	(Lcno$a;Lcnp;[Lbiv;)V	<init>	<init>
		p	1		rarity
		p	2		target
		p	3		slotTypes
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
		p	1		level
	m	(Lcno;)Z	a	checkCompatibility
		p	1		other
	m	(I)I	b	getMaxCost
		p	1		level
c	cny	net/minecraft/world/item/enchantment/MendingEnchantment
	m	(Lcno$a;[Lbiv;)V	<init>	<init>
		p	1		weight
		p	2		slotTypes
	m	(I)I	a	getMinCost
		p	1		level
	m	()Z	b	isTreasureOnly
	m	(I)I	b	getMaxCost
		p	1		level
c	cnz	net/minecraft/world/item/enchantment/MultiShotEnchantment
	m	(Lcno$a;[Lbiv;)V	<init>	<init>
		p	1		weight
		p	2		slotTypes
	m	(I)I	a	getMinCost
		p	1		level
	m	(Lcno;)Z	a	checkCompatibility
		p	1		other
	m	(I)I	b	getMaxCost
		p	1		level
c	coa	net/minecraft/world/item/enchantment/OxygenEnchantment
	m	(Lcno$a;[Lbiv;)V	<init>	<init>
		p	1		weight
		p	2		slotTypes
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
		p	1		level
	m	(I)I	b	getMaxCost
		p	1		level
c	cob	net/minecraft/world/item/enchantment/ProtectionEnchantment
	m	(Lcno$a;Lcob$a;[Lbiv;)V	<init>	<init>
		p	1		weight
		p	2		protectionType
		p	3		slotTypes
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
		p	1		level
	m	(ILbho;)I	a	getDamageProtection
		p	1		level
		p	2		source
	m	(Lbjg;D)D	a	getExplosionKnockbackAfterDampener
		p	0		entity
		p	1		velocity
	m	(Lbjg;I)I	a	getFireAfterDampener
		p	0		entity
		p	1		duration
	m	(Lcno;)Z	a	checkCompatibility
		p	1		other
	m	(I)I	b	getMaxCost
		p	1		level
	f	Lcob$a;	a	type
c	cob$a	net/minecraft/world/item/enchantment/ProtectionEnchantment$Type
	m	(Ljava/lang/String;III)V	<init>	<init>
		p	3		basePower
		p	4		powerPerLevel
	m	()I	a	getMinCost
	m	()I	b	getLevelCost
	m	()[Lcob$a;	c	$values
	f	Lcob$a;	a	ALL
	f	Lcob$a;	b	FIRE
	f	Lcob$a;	c	FALL
	f	Lcob$a;	d	EXPLOSION
	f	Lcob$a;	e	PROJECTILE
	f	I	f	minCost
	f	I	g	levelCost
	f	[Lcob$a;	h	$VALUES
c	coc	net/minecraft/world/item/enchantment/QuickChargeEnchantment
	m	(Lcno$a;[Lbiv;)V	<init>	<init>
		p	1		weight
		p	2		slot
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
		p	1		level
	m	(I)I	b	getMaxCost
		p	1		level
c	cod	net/minecraft/world/item/enchantment/SoulSpeedEnchantment
	m	(Lcno$a;[Lbiv;)V	<init>	<init>
		p	1		weight
		p	2		slotTypes
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
		p	1		level
	m	()Z	b	isTreasureOnly
	m	(I)I	b	getMaxCost
		p	1		level
	m	()Z	h	isTradeable
	m	()Z	i	isDiscoverable
c	coe	net/minecraft/world/item/enchantment/SweepingEdgeEnchantment
	m	(Lcno$a;[Lbiv;)V	<init>	<init>
		p	1		weight
		p	2		slotTypes
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
		p	1		level
	m	(I)I	b	getMaxCost
		p	1		level
	m	(I)F	e	getSweepingDamageRatio
		p	0		level
c	cof	net/minecraft/world/item/enchantment/SwiftSneakEnchantment
	m	(Lcno$a;[Lbiv;)V	<init>	<init>
		p	1		rarity
		p	2		slots
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
		p	1		level
	m	()Z	b	isTreasureOnly
	m	(I)I	b	getMaxCost
		p	1		level
	m	()Z	h	isTradeable
	m	()Z	i	isDiscoverable
c	cog	net/minecraft/world/item/enchantment/ThornsEnchantment
	m	(Lcno$a;[Lbiv;)V	<init>	<init>
		p	1		weight
		p	2		slotTypes
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
		p	1		level
	m	(ILasc;)Z	a	shouldHit
		p	0		level
		p	1		random
	m	(Lcjf;)Z	a	canEnchant
		p	1		stack
	m	(Ljava/util/Map$Entry;Lbjg;)V	a	lambda$doPostHurt$0
		p	1		entity
	m	(I)I	b	getMaxCost
		p	1		level
	m	(ILasc;)I	b	getDamage
		p	0		level
		p	1		random
	m	(Lbjg;Lbiq;I)V	b	doPostHurt
		p	1		user
		p	2		attacker
		p	3		level
	f	F	a	CHANCE_PER_LEVEL
c	coh	net/minecraft/world/item/enchantment/TridentChannelingEnchantment
	m	(Lcno$a;[Lbiv;)V	<init>	<init>
		p	1		weight
		p	2		slotTypes
	m	(I)I	a	getMinCost
		p	1		level
	m	(I)I	b	getMaxCost
		p	1		level
c	coi	net/minecraft/world/item/enchantment/TridentImpalerEnchantment
	m	(Lcno$a;[Lbiv;)V	<init>	<init>
		p	1		weight
		p	2		slotTypes
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
		p	1		level
	m	(ILbjl;)F	a	getDamageBonus
		p	1		level
		p	2		group
	m	(I)I	b	getMaxCost
		p	1		level
c	coj	net/minecraft/world/item/enchantment/TridentLoyaltyEnchantment
	m	(Lcno$a;[Lbiv;)V	<init>	<init>
		p	1		weight
		p	2		slotTypes
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
		p	1		level
	m	(I)I	b	getMaxCost
		p	1		level
c	cok	net/minecraft/world/item/enchantment/TridentRiptideEnchantment
	m	(Lcno$a;[Lbiv;)V	<init>	<init>
		p	1		weight
		p	2		slotTypes
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
		p	1		level
	m	(Lcno;)Z	a	checkCompatibility
		p	1		other
	m	(I)I	b	getMaxCost
		p	1		level
c	col	net/minecraft/world/item/enchantment/UntouchingEnchantment
	m	(Lcno$a;[Lbiv;)V	<init>	<init>
		p	1		weight
		p	2		slotTypes
	m	(I)I	a	getMinCost
		p	1		level
	m	(Lcno;)Z	a	checkCompatibility
		p	1		other
	m	(I)I	b	getMaxCost
		p	1		level
c	com	net/minecraft/world/item/enchantment/VanishingCurseEnchantment
	m	(Lcno$a;[Lbiv;)V	<init>	<init>
		p	1		weight
		p	2		slotTypes
	m	(I)I	a	getMinCost
		p	1		level
	m	()Z	b	isTreasureOnly
	m	(I)I	b	getMaxCost
		p	1		level
	m	()Z	c	isCurse
c	coo	net/minecraft/world/item/enchantment/WaterWalkerEnchantment
	m	(Lcno$a;[Lbiv;)V	<init>	<init>
		p	1		weight
		p	2		slotTypes
	m	()I	a	getMaxLevel
	m	(I)I	a	getMinCost
		p	1		level
	m	(Lcno;)Z	a	checkCompatibility
		p	1		other
	m	(I)I	b	getMaxCost
		p	1		level
c	cop	net/minecraft/world/item/enchantment/WaterWorkerEnchantment
	m	(Lcno$a;[Lbiv;)V	<init>	<init>
		p	1		weight
		p	2		slotTypes
	m	(I)I	a	getMinCost
		p	1		level
	m	(I)I	b	getMaxCost
		p	1		level
c	coq	net/minecraft/world/item/enchantment/package-info
c	cor	net/minecraft/world/item/package-info
c	cos	net/minecraft/world/item/trading/Merchant
	m	(ILcbt;Lcbu;)Lcel;	a	lambda$openTradingScreen$0
		p	1		syncId
		p	2		playerInventory
		p	3		playerx
	m	(Lcbu;Ltl;I)V	a	openTradingScreen
		p	1		player
		p	2		name
		p	3		levelProgress
	m	(Lcot;)V	a	notifyTrade
		p	1		offer
	m	(Lcou;)V	a	overrideOffers
		p	1		offers
	m	(Lcbu;)V	f	setTradingPlayer
		p	1		customer
	m	()Lcbu;	gd	getTradingPlayer
	m	()Lcou;	gf	getOffers
	m	()Z	gg	showProgressBar
	m	()Lapc;	gh	getNotifyTradeSound
	m	()Z	gl	isClientSide
	m	()Z	gp	canRestock
	m	(Lcjf;)V	l	notifyTradeUpdated
		p	1		stack
	m	()I	t	getVillagerXp
	m	(I)V	t	overrideXp
		p	1		experience
c	cot	net/minecraft/world/item/trading/MerchantOffer
	m	(Lcjf;Lcjf;IIF)V	<init>	<init>
		p	1		buyItem
		p	2		sellItem
		p	3		maxUses
		p	4		merchantExperience
		p	5		priceMultiplier
	m	(Lcjf;Lcjf;Lcjf;IIF)V	<init>	<init>
		p	1		firstBuyItem
		p	2		secondBuyItem
		p	3		sellItem
		p	4		maxUses
		p	5		merchantExperience
		p	6		priceMultiplier
	m	(Lcjf;Lcjf;Lcjf;IIIF)V	<init>	<init>
		p	1		firstBuyItem
		p	2		secondBuyItem
		p	3		sellItem
		p	4		uses
		p	5		maxUses
		p	6		merchantExperience
		p	7		priceMultiplier
	m	(Lcjf;Lcjf;Lcjf;IIIFI)V	<init>	<init>
		p	1		firstBuyItem
		p	2		secondBuyItem
		p	3		sellItem
		p	4		uses
		p	5		maxUses
		p	6		merchantExperience
		p	7		priceMultiplier
		p	8		demandBonus
	m	(Lcot;)V	<init>	<init>
		p	1		offer
	m	(Lqw;)V	<init>	<init>
		p	1		nbt
	m	()Lcjf;	a	getBaseCostA
	m	(I)V	a	addToSpecialPriceDiff
		p	1		increment
	m	(Lcjf;Lcjf;)Z	a	satisfiedBy
		p	1		first
		p	2		second
	m	()Lcjf;	b	getCostA
	m	(I)V	b	setSpecialPriceDiff
		p	1		specialPrice
	m	(Lcjf;Lcjf;)Z	b	take
		p	1		firstBuyStack
		p	2		secondBuyStack
	m	()Lcjf;	c	getCostB
	m	(Lcjf;Lcjf;)Z	c	isRequiredItem
		p	1		given
		p	2		sample
	m	()Lcjf;	d	getResult
	m	()V	e	updateDemand
	m	()Lcjf;	f	assemble
	m	()I	g	getUses
	m	()V	h	resetUses
	m	()I	i	getMaxUses
	m	()V	j	increaseUses
	m	()I	k	getDemand
	m	()V	l	resetSpecialPriceDiff
	m	()I	m	getSpecialPriceDiff
	m	()F	n	getPriceMultiplier
	m	()I	o	getXp
	m	()Z	p	isOutOfStock
	m	()V	q	setToOutOfStock
	m	()Z	r	needsRestock
	m	()Z	s	shouldRewardExp
	m	()Lqw;	t	createTag
	m	()Lcot;	u	copy
	f	Lcjf;	a	baseCostA
	f	Lcjf;	b	costB
	f	Lcjf;	c	result
	f	I	d	uses
	f	I	e	maxUses
	f	Z	f	rewardExp
	f	I	g	specialPriceDiff
	f	I	h	demand
	f	F	i	priceMultiplier
	f	I	j	xp
c	cou	net/minecraft/world/item/trading/MerchantOffers
	m	(I)V	<init>	<init>
		p	1		size
	m	(Lqw;)V	<init>	<init>
		p	1		nbt
	m	()Lqw;	a	createTag
	m	(Lcjf;Lcjf;I)Lcot;	a	getRecipeFor
		p	1		firstBuyItem
		p	2		secondBuyItem
		p	3		index
	m	(Lso;)V	a	writeToStream
		p	1		buf
	m	(Lso;Lcot;)V	a	lambda$writeToStream$0
		p	0		buf2
		p	1		offer
	m	()Lcou;	b	copy
	m	(Lso;)Lcou;	b	createFromStream
		p	0		buf
	m	(Lso;)Lcot;	c	lambda$createFromStream$1
		p	0		buf2
c	cov	net/minecraft/world/item/trading/package-info
c	cow	net/minecraft/world/level/BaseCommandBlock
	m	()Z	T_	shouldInformAdmins
	m	(I)V	a	setSuccessCount
		p	1		successCount
	m	(Lcbu;)Lbgy;	a	usedBy
		p	1		player
	m	(Lcom/mojang/brigadier/context/CommandContext;ZI)V	a	lambda$performCommand$0
		p	1		context
		p	2		success
		p	3		result
	m	(Lcpv;)Z	a	performCommand
		p	1		world
	m	(Ljava/lang/String;)V	a	setCommand
		p	1		command
	m	(Lqw;)Lqw;	a	save
		p	1		nbt
	m	(Ltl;)V	a	sendSystemMessage
		p	1		message
	m	(Z)V	a	setTrackOutput
		p	1		trackOutput
	m	(Lqw;)V	b	load
		p	1		nbt
	m	(Ltl;)V	b	setName
		p	1		name
	m	(Ltl;)V	c	setLastOutput
		p	1		lastOutput
	m	()Lakq;	e	getLevel
	m	()V	f	onUpdated
	m	()Lehn;	g	getPosition
	m	()Ljava/lang/String;	h	lambda$performCommand$1
	m	()Ldt;	i	createCommandSourceStack
	m	()Z	j	isValid
	m	()Z	j_	acceptsSuccess
	m	()I	k	getSuccessCount
	m	()Ltl;	l	getLastOutput
	m	()Ljava/lang/String;	m	getCommand
	m	()Ltl;	n	getName
	m	()Z	o	isTrackOutput
	m	()Z	v_	acceptsFailure
	f	Ljava/text/SimpleDateFormat;	b	TIME_FORMAT
	f	Ltl;	c	DEFAULT_NAME
	f	J	d	lastExecution
	f	Z	e	updateLastExecution
	f	I	f	successCount
	f	Z	g	trackOutput
	f	Ltl;	h	lastOutput
	f	Ljava/lang/String;	i	command
	f	Ltl;	j	name
c	cox	net/minecraft/world/level/BaseSpawner
	m	()D	a	getSpin
	m	(DDDLbiq;)Lbiq;	a	lambda$serverTick$0
		p	6		entity
	m	(Lakq;Lgw;)V	a	serverTick
		p	1		world
		p	2		pos
	m	(Lbiu;Lcpv;Lasc;Lgw;)V	a	setEntityId
		p	1		type
		p	2		world
		p	3		random
		p	4		pos
	m	(Lcpv;I)Z	a	onEventTriggered
		p	1		world
		p	2		status
	m	(Lcpv;Lasc;Lgw;)Lbiq;	a	getOrCreateDisplayEntity
		p	1		world
		p	2		random
		p	3		pos
	m	(Lcpv;Lgw;)V	a	clientTick
		p	1		world
		p	2		pos
	m	(Lcpv;Lgw;I)V	a	broadcastEvent
		p	1		world
		p	2		pos
		p	3		status
	m	(Lcpv;Lgw;Lbfk$b;)V	a	lambda$delay$1
		p	3		spawnPotential
	m	(Lcpv;Lgw;Lcqm;)V	a	setNextSpawnData
		p	1		world
		p	2		pos
		p	3		spawnEntry
	m	(Lcpv;Lgw;Lqw;)V	a	load
		p	1		world
		p	2		pos
		p	3		nbt
	m	(Ljava/lang/String;)V	a	lambda$load$3
		p	0		error
	m	(Lqw;)Lqw;	a	save
		p	1		nbt
	m	()D	b	getoSpin
	m	(Lcpv;Lasc;Lgw;)Lcqm;	b	getOrCreateNextSpawnData
		p	1		world
		p	2		random
		p	3		pos
	m	(Lcpv;Lgw;)Z	b	isNearPlayer
		p	1		world
		p	2		pos
	m	(Ljava/lang/String;)V	b	lambda$load$2
	m	()Ljava/lang/IllegalStateException;	c	lambda$save$4
	m	(Lcpv;Lgw;)V	c	delay
		p	1		world
		p	2		pos
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/lang/String;	b	SPAWN_DATA_TAG
	f	I	c	EVENT_SPAWN
	f	I	d	spawnDelay
	f	Lbfi;	e	spawnPotentials
	f	Lcqm;	f	nextSpawnData
	f	D	g	spin
	f	D	h	oSpin
	f	I	i	minSpawnDelay
	f	I	j	maxSpawnDelay
	f	I	k	spawnCount
	f	Lbiq;	l	displayEntity
	f	I	m	maxNearbyEntities
	f	I	n	requiredPlayerRange
	f	I	o	spawnRange
c	coy	net/minecraft/world/level/BlockAndTintGetter
	m	(Lcqe;Lgw;)I	a	getBrightness
		p	1		type
		p	2		pos
	m	(Lgw;Lcpg;)I	a	getBlockTint
		p	1		pos
		p	2		colorResolver
	m	(Lha;Z)F	a	getShade
		p	1		direction
		p	2		shaded
	m	(Lgw;I)I	b	getRawBrightness
		p	1		pos
		p	2		ambientDarkness
	m	(Lgw;)Z	g	canSeeSky
		p	1		pos
	m	()Leab;	x_	getLightEngine
c	coz	net/minecraft/world/level/BlockCollisions
	m	(Lcpf;Lbiq;Lehi;ZLjava/util/function/BiFunction;)V	<init>	<init>
		p	1		world
		p	2		entity
		p	3		box
		p	4		forEntity
		p	5		resultFunction
	m	(II)Lcpb;	a	getChunk
		p	1		x
		p	2		z
	f	Lehi;	a	box
	f	Lehs;	b	context
	f	Lgx;	c	cursor
	f	Lgw$a;	d	pos
	f	Leig;	e	entityShape
	f	Lcpf;	f	collisionGetter
	f	Z	g	onlySuffocatingBlocks
	f	Lcpb;	h	cachedBlockGetter
	f	J	i	cachedBlockGetterPos
	f	Ljava/util/function/BiFunction;	j	resultProvider
c	cpa	net/minecraft/world/level/BlockEventData
	m	(Lgw;Lcsv;II)V	<init>	<init>
		p	1		pos
		p	2		block
		p	3		type
		p	4		data
	m	()Lgw;	a	pos
	m	()Lcsv;	b	block
	m	()I	c	paramA
	m	()I	d	paramB
	f	Lgw;	a	pos
	f	Lcsv;	b	block
	f	I	c	paramA
	f	I	d	paramB
c	cpb	net/minecraft/world/level/BlockGetter
	m	()I	M	getMaxLightLevel
	m	(Lcpd;)Lehj;	a	isBlockInLine
		p	1		context
	m	(Lcpd;Lgw;)Lehj;	a	lambda$isBlockInLine$0
		p	1		innerContext
		p	2		pos
	m	(Lcpe;)Lehj;	a	clip
		p	1		context
	m	(Lcpe;Lgw;)Lehj;	a	lambda$clip$2
		p	1		innerContext
		p	2		pos
	m	(Lehi;)Ljava/util/stream/Stream;	a	getBlockStates
		p	1		box
	m	(Lehn;Lehn;Lgw;Leig;Ldfj;)Lehj;	a	clipWithInteractionOverride
		p	1		start
		p	2		end
		p	3		pos
		p	4		shape
		p	5		state
	m	(Lehn;Lehn;Ljava/lang/Object;Ljava/util/function/BiFunction;Ljava/util/function/Function;)Ljava/lang/Object;	a	traverseBlocks
		p	0		start
		p	1		end
		p	2		context
		p	3		blockHitFactory
		p	4		missFactory
	m	(Leig;Ljava/util/function/Supplier;)D	a	getBlockFloorHeight
		p	1		blockCollisionShape
		p	2		belowBlockCollisionShapeGetter
	m	(Lgw;Ldcx;)Ljava/util/Optional;	a	getBlockEntity
		p	1		pos
		p	2		type
	m	(Lgw;)Ldfj;	a_	getBlockState
		p	1		pos
	m	(Lcpd;)Lehj;	b	lambda$isBlockInLine$1
		p	0		innerContext
	m	(Lcpe;)Lehj;	b	lambda$clip$3
		p	0		innerContext
	m	(Lgw;)Leam;	b_	getFluidState
		p	1		pos
	m	(Lgw;)Ldcv;	c_	getBlockEntity
		p	1		pos
	m	(Lgw;)Leig;	f	lambda$getBlockFloorHeight$4
	m	(Lgw;)I	h	getLightEmission
		p	1		pos
	m	(Lgw;)D	i	getBlockFloorHeight
		p	1		pos
c	cpc	net/minecraft/world/level/ChunkPos
	m	(II)V	<init>	<init>
		p	1		x
		p	2		z
	m	(J)V	<init>	<init>
		p	1		pos
	m	(Lgw;)V	<init>	<init>
		p	1		pos
	m	()J	a	toLong
	m	(I)I	a	getBlockX
		p	1		offset
	m	(II)Lcpc;	a	minFromRegion
		p	0		x
		p	1		z
	m	(III)Lgw;	a	getBlockAt
		p	1		offsetX
		p	2		y
		p	3		offsetZ
	m	(J)I	a	getX
		p	0		pos
	m	(Lcpc;)I	a	getChessboardDistance
		p	1		pos
	m	(Lcpc;I)Ljava/util/stream/Stream;	a	rangeClosed
		p	0		center
		p	1		radius
	m	(Lcpc;Lcpc;)Ljava/util/stream/Stream;	a	rangeClosed
		p	0		pos1
		p	1		pos2
	m	(Lgw;)J	a	asLong
		p	0		pos
	m	()I	b	getMiddleBlockX
	m	(I)I	b	getBlockZ
		p	1		offset
	m	(II)Lcpc;	b	maxFromRegion
		p	0		x
		p	1		z
	m	(J)I	b	getZ
		p	0		pos
	m	(Lcpc;)I	b	distanceSquared
		p	1		pos
	m	()I	c	getMiddleBlockZ
	m	(I)Lgw;	c	getMiddleBlockPosition
		p	1		y
	m	(II)J	c	asLong
		p	0		chunkX
		p	1		chunkZ
	m	(J)I	c	distanceSquared
		p	1		pos
	m	()I	d	getMinBlockX
	m	(II)I	d	hash
		p	0		x
		p	1		z
	m	()I	e	getMinBlockZ
	m	(II)I	e	distanceSquared
		p	1		x
		p	2		z
	m	()I	f	getMaxBlockX
	m	()I	g	getMaxBlockZ
	m	()I	h	getRegionX
	m	()I	i	getRegionZ
	m	()I	j	getRegionLocalX
	m	()I	k	getRegionLocalZ
	m	()Lgw;	l	getWorldPosition
	f	J	a	INVALID_CHUNK_POS
	f	Lcpc;	b	ZERO
	f	I	c	REGION_SIZE
	f	I	d	REGION_MAX_INDEX
	f	I	e	x
	f	I	f	z
	f	I	g	SAFETY_MARGIN
	f	J	h	COORD_BITS
	f	J	i	COORD_MASK
	f	I	j	REGION_BITS
	f	I	k	REGION_MASK
	f	I	l	HASH_A
	f	I	m	HASH_C
	f	I	n	HASH_Z_XOR
c	cpc$1	net/minecraft/world/level/ChunkPos$1
	f	Lcpc;	a	val$from
	f	Lcpc;	b	val$to
	f	I	c	val$zDiff
	f	I	d	val$xDiff
	f	Lcpc;	e	pos
c	cpd	net/minecraft/world/level/ClipBlockStateContext
	m	(Lehn;Lehn;Ljava/util/function/Predicate;)V	<init>	<init>
		p	1		start
		p	2		end
		p	3		statePredicate
	m	()Lehn;	a	getTo
	m	()Lehn;	b	getFrom
	m	()Ljava/util/function/Predicate;	c	isTargetBlock
	f	Lehn;	a	from
	f	Lehn;	b	to
	f	Ljava/util/function/Predicate;	c	block
c	cpe	net/minecraft/world/level/ClipContext
	m	(Lehn;Lehn;Lcpe$a;Lcpe$b;Lbiq;)V	<init>	<init>
		p	1		start
		p	2		end
		p	3		shapeType
		p	4		fluidHandling
		p	5		entity
	m	()Lehn;	a	getTo
	m	(Ldfj;Lcpb;Lgw;)Leig;	a	getBlockShape
		p	1		state
		p	2		world
		p	3		pos
	m	(Leam;Lcpb;Lgw;)Leig;	a	getFluidShape
		p	1		state
		p	2		world
		p	3		pos
	m	()Lehn;	b	getFrom
	f	Lehn;	a	from
	f	Lehn;	b	to
	f	Lcpe$a;	c	block
	f	Lcpe$b;	d	fluid
	f	Lehs;	e	collisionContext
c	cpe$a	net/minecraft/world/level/ClipContext$Block
	m	(Ljava/lang/String;ILcpe$c;)V	<init>	<init>
		p	3		provider
	m	()[Lcpe$a;	a	$values
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	lambda$static$0
		p	0		state
		p	1		world
		p	2		pos
		p	3		context
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	get	get
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	f	Lcpe$a;	a	COLLIDER
	f	Lcpe$a;	b	OUTLINE
	f	Lcpe$a;	c	VISUAL
	f	Lcpe$a;	d	FALLDAMAGE_RESETTING
	f	Lcpe$c;	e	shapeGetter
	f	[Lcpe$a;	f	$VALUES
c	cpe$b	net/minecraft/world/level/ClipContext$Fluid
	m	(Ljava/lang/String;ILjava/util/function/Predicate;)V	<init>	<init>
		p	3		predicate
	m	()[Lcpe$b;	a	$values
	m	(Leam;)Z	a	canPick
		p	1		state
	m	(Leam;)Z	b	lambda$static$2
		p	0		state
	m	(Leam;)Z	c	lambda$static$1
		p	0		state
	m	(Leam;)Z	d	lambda$static$0
		p	0		state
	f	Lcpe$b;	a	NONE
	f	Lcpe$b;	b	SOURCE_ONLY
	f	Lcpe$b;	c	ANY
	f	Lcpe$b;	d	WATER
	f	Ljava/util/function/Predicate;	e	canPick
	f	[Lcpe$b;	f	$VALUES
c	cpe$c	net/minecraft/world/level/ClipContext$ShapeGetter
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	get	get
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
c	cpf	net/minecraft/world/level/CollisionGetter
	m	()Ldha;	B_	getWorldBorder
	m	(DDDLehi;)Lehi;	a	lambda$findFreePosition$6
	m	(Lbiq;Lehi;)Z	a	noCollision
		p	1		entity
		p	2		box
	m	(Lbiq;Leig;)Z	a	isUnobstructed
		p	1		except
		p	2		shape
	m	(Lbiq;Leig;Lehn;DDD)Ljava/util/Optional;	a	findFreePosition
		p	1		entity
		p	2		shape
		p	3		target
		p	4		x
		p	6		y
		p	8		z
	m	(Ldfj;Lgw;Lehs;)Z	a	isUnobstructed
		p	1		state
		p	2		pos
		p	3		context
	m	(Leig;)Ljava/util/stream/Stream;	a	lambda$findFreePosition$5
	m	(Lgw$a;Leig;)Lgw;	a	lambda$findSupportingBlock$3
		p	0		pos
		p	1		voxelShape
	m	(Lbiq;Lehi;)Z	b	noBlockCollision
		p	1		entity
		p	2		box
	m	(Lehi;)Z	b	noCollision
		p	1		box
	m	(Leig;)Z	b	lambda$findFreePosition$4
	m	(Lgw$a;Leig;)Leig;	b	lambda$collidesWithSuffocatingBlock$2
		p	0		pos
		p	1		voxelShape
	m	(II)Lcpb;	c	getChunkForCollisions
		p	1		chunkX
		p	2		chunkZ
	m	(Lbiq;Lehi;)Ljava/util/List;	c	getEntityCollisions
		p	1		entity
		p	2		box
	m	(Lgw$a;Leig;)Leig;	c	lambda$getBlockCollisions$0
		p	0		pos
		p	1		voxelShape
	m	(Lbiq;Lehi;)Ljava/lang/Iterable;	d	getCollisions
		p	1		entity
		p	2		box
	m	(Lbiq;Lehi;)Ljava/lang/Iterable;	e	getBlockCollisions
		p	1		entity
		p	2		box
	m	(Lbiq;)Z	f	isUnobstructed
		p	1		entity
	m	(Lbiq;Lehi;)Z	f	collidesWithSuffocatingBlock
		p	1		entity
		p	2		box
	m	(Lbiq;)Z	g	noCollision
		p	1		entity
	m	(Lbiq;Lehi;)Ljava/util/Optional;	g	findSupportingBlock
		p	1		entity
		p	2		box
	m	(Lbiq;Lehi;)Leig;	h	borderCollision
		p	1		entity
		p	2		box
	m	(Lbiq;Lehi;)Ljava/util/Iterator;	i	lambda$getBlockCollisions$1
c	cpg	net/minecraft/world/level/ColorResolver
	m	(Lcqt;DD)I	getColor	getColor
		p	1		biome
		p	2		x
		p	4		z
c	cph	net/minecraft/world/level/CommonLevelAccessor
	m	(Lbiq;Leig;)Z	a	isUnobstructed
		p	1		except
		p	2		shape
	m	(Ldks$a;Lgw;)Lgw;	a	getHeightmapPos
		p	1		heightmap
		p	2		pos
	m	(Lgw;Ldcx;)Ljava/util/Optional;	a	getBlockEntity
		p	1		pos
		p	2		type
	m	(Lbiq;Lehi;)Ljava/util/List;	c	getEntityCollisions
		p	1		entity
		p	2		box
c	cpi	net/minecraft/world/level/CustomSpawner
	m	(Lakq;ZZ)I	a	tick
		p	1		world
		p	2		spawnMonsters
		p	3		spawnAnimals
c	cpj	net/minecraft/world/level/DataPackConfig
	m	(Ljava/util/List;Ljava/util/List;)V	<init>	<init>
		p	1		enabled
		p	2		disabled
	m	()Ljava/util/List;	a	getEnabled
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Lcpj;)Ljava/util/List;	a	lambda$static$1
		p	0		settings
	m	()Ljava/util/List;	b	getDisabled
	m	(Lcpj;)Ljava/util/List;	b	lambda$static$0
		p	0		settings
	f	Lcpj;	a	DEFAULT
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Ljava/util/List;	c	enabled
	f	Ljava/util/List;	d	disabled
c	cpk	net/minecraft/world/level/EmptyBlockGetter
	m	()I	H_	getMinBuildHeight
	m	()I	I_	getHeight
	m	()[Lcpk;	a	$values
	m	(Lgw;)Ldfj;	a_	getBlockState
		p	1		pos
	m	(Lgw;)Leam;	b_	getFluidState
		p	1		pos
	m	(Lgw;)Ldcv;	c_	getBlockEntity
		p	1		pos
	f	Lcpk;	a	INSTANCE
	f	[Lcpk;	b	$VALUES
c	cpl	net/minecraft/world/level/EntityBasedExplosionDamageCalculator
	m	(Lbiq;)V	<init>	<init>
		p	1		entity
	m	(Lcpn;Lcpb;Lgw;Ldfj;F)Z	a	shouldBlockExplode
		p	1		explosion
		p	2		world
		p	3		pos
		p	4		state
		p	5		power
	m	(Lcpn;Lcpb;Lgw;Ldfj;Leam;)Ljava/util/Optional;	a	getBlockExplosionResistance
		p	1		explosion
		p	2		world
		p	3		pos
		p	4		blockState
		p	5		fluidState
	m	(Lcpn;Lcpb;Lgw;Ldfj;Leam;Ljava/lang/Float;)Ljava/lang/Float;	a	lambda$getBlockExplosionResistance$0
		p	6		max
	f	Lbiq;	a	source
c	cpm	net/minecraft/world/level/EntityGetter
	m	(DDDD)Z	a	hasNearbyAlivePlayer
		p	1		x
		p	3		y
		p	5		z
		p	7		range
	m	(DDDDLjava/util/function/Predicate;)Lcbu;	a	getNearestPlayer
		p	1		x
		p	3		y
		p	5		z
		p	7		maxDistance
		p	9		targetPredicate
	m	(DDDDZ)Lcbu;	a	getNearestPlayer
		p	1		x
		p	3		y
		p	5		z
		p	7		maxDistance
		p	9		ignoreCreative
	m	(Lbiq;D)Lcbu;	a	getNearestPlayer
		p	1		entity
		p	2		maxDistance
	m	(Lbiq;Lehi;Ljava/util/function/Predicate;)Ljava/util/List;	a	getEntities
		p	1		except
		p	2		box
		p	3		predicate
	m	(Lbiq;Leig;)Z	a	isUnobstructed
		p	1		except
		p	2		shape
	m	(Lbjg;)Z	a	lambda$getNearbyEntities$1
	m	(Lbts;DDD)Lcbu;	a	getNearestPlayer
		p	1		targetPredicate
		p	2		x
		p	4		y
		p	6		z
	m	(Lbts;Lbjg;)Lcbu;	a	getNearestPlayer
		p	1		targetPredicate
		p	2		entity
	m	(Lbts;Lbjg;DDD)Lcbu;	a	getNearestPlayer
		p	1		targetPredicate
		p	2		entity
		p	3		x
		p	5		y
		p	7		z
	m	(Lbts;Lbjg;Lehi;)Ljava/util/List;	a	getNearbyPlayers
		p	1		targetPredicate
		p	2		entity
		p	3		box
	m	(Ldjh;Lehi;Ljava/util/function/Predicate;)Ljava/util/List;	a	getEntities
		p	1		filter
		p	2		box
		p	3		predicate
	m	(Ljava/lang/Class;Lbts;Lbjg;DDDLehi;)Lbjg;	a	getNearestEntity
		p	1		entityClass
		p	2		targetPredicate
		p	3		entity
		p	4		x
		p	6		y
		p	8		z
		p	10		box
	m	(Ljava/lang/Class;Lbts;Lbjg;Lehi;)Ljava/util/List;	a	getNearbyEntities
		p	1		entityClass
		p	2		targetPredicate
		p	3		targetingEntity
		p	4		box
	m	(Ljava/lang/Class;Lehi;)Ljava/util/List;	a	getEntitiesOfClass
		p	1		entityClass
		p	2		box
	m	(Ljava/lang/Class;Lehi;Ljava/util/function/Predicate;)Ljava/util/List;	a	getEntitiesOfClass
		p	1		entityClass
		p	2		box
		p	3		predicate
	m	(Ljava/util/List;Lbts;Lbjg;DDD)Lbjg;	a	getNearestEntity
		p	1		entityList
		p	2		targetPredicate
		p	3		entity
		p	4		x
		p	6		y
		p	8		z
	m	(Lbiq;Lehi;)Ljava/util/List;	a_	getEntities
		p	1		except
		p	2		box
	m	(Lbjg;)Z	b	lambda$getNearestEntity$0
		p	0		entityOfClass
	m	(Ljava/util/UUID;)Lcbu;	b	getPlayerByUUID
		p	1		uuid
	m	(Lbiq;Lehi;)Ljava/util/List;	c	getEntityCollisions
		p	1		entity
		p	2		box
	m	()Ljava/util/List;	v	players
c	cpn	net/minecraft/world/level/Explosion
	m	(Lcpv;Lbiq;DDDFLjava/util/List;)V	<init>	<init>
		p	1		world
		p	2		entity
		p	3		x
		p	5		y
		p	7		z
		p	9		power
		p	10		affectedBlocks
	m	(Lcpv;Lbiq;DDDFZLcpn$a;)V	<init>	<init>
		p	1		world
		p	2		entity
		p	3		x
		p	5		y
		p	7		z
		p	9		power
		p	10		createFire
		p	11		destructionType
	m	(Lcpv;Lbiq;DDDFZLcpn$a;Ljava/util/List;)V	<init>	<init>
		p	1		world
		p	2		entity
		p	3		x
		p	5		y
		p	7		z
		p	9		power
		p	10		createFire
		p	11		destructionType
		p	12		affectedBlocks
	m	(Lcpv;Lbiq;Lbho;Lcpo;DDDFZLcpn$a;)V	<init>	<init>
		p	1		world
		p	2		entity
		p	3		damageSource
		p	4		behavior
		p	5		x
		p	7		y
		p	9		z
		p	11		power
		p	12		createFire
		p	13		destructionType
	m	()V	a	explode
	m	(Lbiq;)Lcpo;	a	makeDamageCalculator
		p	1		entity
	m	(Lehn;Lbiq;)F	a	getSeenPercent
		p	0		source
		p	1		entity
	m	(Lit/unimi/dsi/fastutil/objects/ObjectArrayList;Lcjf;Lgw;)V	a	addBlockDrops
		p	0		stacks
		p	1		stack
		p	2		pos
	m	(Lit/unimi/dsi/fastutil/objects/ObjectArrayList;Lgw;Lcjf;)V	a	lambda$finalizeExplosion$0
		p	2		stack
	m	(Z)V	a	finalizeExplosion
		p	1		particles
	m	()Z	b	interactsWithBlocks
	m	()Lbho;	c	getDamageSource
	m	()Ljava/util/Map;	d	getHitPlayers
	m	()Lbjg;	e	getIndirectSourceEntity
	m	()Lbiq;	f	getDirectSourceEntity
	m	()V	g	clearToBlow
	m	()Ljava/util/List;	h	getToBlow
	f	Lcpo;	a	EXPLOSION_DAMAGE_CALCULATOR
	f	I	b	MAX_DROPS_PER_COMBINED_STACK
	f	Z	c	fire
	f	Lcpn$a;	d	blockInteraction
	f	Lasc;	e	random
	f	Lcpv;	f	level
	f	D	g	x
	f	D	h	y
	f	D	i	z
	f	Lbiq;	j	source
	f	F	k	radius
	f	Lbho;	l	damageSource
	f	Lcpo;	m	damageCalculator
	f	Lit/unimi/dsi/fastutil/objects/ObjectArrayList;	n	toBlow
	f	Ljava/util/Map;	o	hitPlayers
c	cpn$a	net/minecraft/world/level/Explosion$BlockInteraction
	m	()[Lcpn$a;	a	$values
	f	Lcpn$a;	a	KEEP
	f	Lcpn$a;	b	DESTROY
	f	Lcpn$a;	c	DESTROY_WITH_DECAY
	f	[Lcpn$a;	d	$VALUES
c	cpo	net/minecraft/world/level/ExplosionDamageCalculator
	m	(Lcpn;Lcpb;Lgw;Ldfj;F)Z	a	shouldBlockExplode
		p	1		explosion
		p	2		world
		p	3		pos
		p	4		state
		p	5		power
	m	(Lcpn;Lcpb;Lgw;Ldfj;Leam;)Ljava/util/Optional;	a	getBlockExplosionResistance
		p	1		explosion
		p	2		world
		p	3		pos
		p	4		blockState
		p	5		fluidState
c	cpp	net/minecraft/world/level/FoliageColor
	m	()I	a	getEvergreenColor
	m	(DD)I	a	get
		p	0		temperature
		p	2		humidity
	m	([I)V	a	init
		p	0		pixels
	m	()I	b	getBirchColor
	m	()I	c	getDefaultColor
	m	()I	d	getMangroveColor
	f	[I	a	pixels
c	cpq	net/minecraft/world/level/ForcedChunksSavedData
	m	(Lit/unimi/dsi/fastutil/longs/LongSet;)V	<init>	<init>
		p	1		chunks
	m	()Lebr$a;	a	factory
	m	(Lqw;)Lqw;	a	save
		p	1		nbt
	m	()Lit/unimi/dsi/fastutil/longs/LongSet;	b	getChunks
	m	(Lqw;)Lcpq;	b	load
		p	0		nbt
	f	Ljava/lang/String;	a	FILE_ID
	f	Ljava/lang/String;	b	TAG_FORCED
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	c	chunks
c	cpr	net/minecraft/world/level/GameRules
	m	(Lcom/mojang/serialization/DynamicLike;)V	<init>	<init>
		p	1		dynamic
	m	(Ljava/util/Map;)V	<init>	<init>
		p	1		rules
	m	()Lqw;	a	createTag
	m	(Lcom/mojang/serialization/DynamicLike;)V	a	loadFromTag
		p	1		dynamic
	m	(Lcom/mojang/serialization/DynamicLike;Lcpr$e;Lcpr$g;)V	a	lambda$loadFromTag$6
		p	1		key
		p	2		rule
	m	(Lcpr$c;)V	a	visitGameRuleTypes
		p	0		visitor
	m	(Lcpr$c;Lcpr$e;Lcpr$f;)V	a	callVisitorCap
		p	0		consumer
		p	1		key
		p	2		type
	m	(Lcpr$e;)Lcpr$g;	a	getRule
		p	1		key
	m	(Lcpr$e;Lcpr;Lnet/minecraft/server/MinecraftServer;)V	a	assignCap
		p	1		key
		p	2		rules
		p	3		server
	m	(Lcpr;Lnet/minecraft/server/MinecraftServer;)V	a	assignFrom
		p	1		rules
		p	2		server
	m	(Lcpr;Lnet/minecraft/server/MinecraftServer;Lcpr$e;)V	a	lambda$assignFrom$9
		p	3		key
	m	(Ljava/lang/String;Lcpr$b;Lcpr$f;)Lcpr$e;	a	register
		p	0		name
		p	1		category
		p	2		type
	m	(Ljava/util/Map$Entry;)Lcpr$g;	a	lambda$copy$7
		p	0		entry
	m	(Lnet/minecraft/server/MinecraftServer;Lcpr$a;)V	a	lambda$static$3
	m	(Lqw;Lcpr$e;Lcpr$g;)V	a	lambda$createTag$5
		p	1		key
		p	2		rule
	m	()Lcpr;	b	copy
	m	(Lcpr$c;Lcpr$e;Lcpr$f;)V	b	lambda$visitGameRuleTypes$8
		p	1		key
		p	2		type
	m	(Lcpr$e;)Z	b	getBoolean
		p	1		rule
	m	(Ljava/util/Map$Entry;)Lcpr$g;	b	lambda$new$4
		p	0		e
	m	(Lnet/minecraft/server/MinecraftServer;Lcpr$a;)V	b	lambda$static$2
		p	0		server
		p	1		rule
	m	(Lcpr$e;)I	c	getInt
		p	1		rule
	m	(Lnet/minecraft/server/MinecraftServer;Lcpr$a;)V	c	lambda$static$1
		p	0		server
		p	1		rule
	m	(Lcpr$e;)Ljava/lang/String;	d	lambda$static$0
		p	0		key
	f	Lcpr$e;	A	RULE_DOINSOMNIA
	f	Lcpr$e;	B	RULE_DO_IMMEDIATE_RESPAWN
	f	Lcpr$e;	C	RULE_DROWNING_DAMAGE
	f	Lcpr$e;	D	RULE_FALL_DAMAGE
	f	Lcpr$e;	E	RULE_FIRE_DAMAGE
	f	Lcpr$e;	F	RULE_FREEZE_DAMAGE
	f	Lcpr$e;	G	RULE_DO_PATROL_SPAWNING
	f	Lcpr$e;	H	RULE_DO_TRADER_SPAWNING
	f	Lcpr$e;	I	RULE_DO_WARDEN_SPAWNING
	f	Lcpr$e;	J	RULE_FORGIVE_DEAD_PLAYERS
	f	Lcpr$e;	K	RULE_UNIVERSAL_ANGER
	f	Lcpr$e;	L	RULE_PLAYERS_SLEEPING_PERCENTAGE
	f	Lcpr$e;	M	RULE_BLOCK_EXPLOSION_DROP_DECAY
	f	Lcpr$e;	N	RULE_MOB_EXPLOSION_DROP_DECAY
	f	Lcpr$e;	O	RULE_TNT_EXPLOSION_DROP_DECAY
	f	Lcpr$e;	P	RULE_SNOW_ACCUMULATION_HEIGHT
	f	Lcpr$e;	Q	RULE_WATER_SOURCE_CONVERSION
	f	Lcpr$e;	R	RULE_LAVA_SOURCE_CONVERSION
	f	Lcpr$e;	S	RULE_GLOBAL_SOUND_EVENTS
	f	Lcpr$e;	T	RULE_DO_VINES_SPREAD
	f	Lcpr$e;	U	RULE_ENDER_PEARLS_VANISH_ON_DEATH
	f	Lorg/slf4j/Logger;	V	LOGGER
	f	Ljava/util/Map;	W	GAME_RULE_TYPES
	f	Ljava/util/Map;	X	rules
	f	I	a	DEFAULT_RANDOM_TICK_SPEED
	f	Lcpr$e;	b	RULE_DOFIRETICK
	f	Lcpr$e;	c	RULE_MOBGRIEFING
	f	Lcpr$e;	d	RULE_KEEPINVENTORY
	f	Lcpr$e;	e	RULE_DOMOBSPAWNING
	f	Lcpr$e;	f	RULE_DOMOBLOOT
	f	Lcpr$e;	g	RULE_DOBLOCKDROPS
	f	Lcpr$e;	h	RULE_DOENTITYDROPS
	f	Lcpr$e;	i	RULE_COMMANDBLOCKOUTPUT
	f	Lcpr$e;	j	RULE_NATURAL_REGENERATION
	f	Lcpr$e;	k	RULE_DAYLIGHT
	f	Lcpr$e;	l	RULE_LOGADMINCOMMANDS
	f	Lcpr$e;	m	RULE_SHOWDEATHMESSAGES
	f	Lcpr$e;	n	RULE_RANDOMTICKING
	f	Lcpr$e;	o	RULE_SENDCOMMANDFEEDBACK
	f	Lcpr$e;	p	RULE_REDUCEDDEBUGINFO
	f	Lcpr$e;	q	RULE_SPECTATORSGENERATECHUNKS
	f	Lcpr$e;	r	RULE_SPAWN_RADIUS
	f	Lcpr$e;	s	RULE_DISABLE_ELYTRA_MOVEMENT_CHECK
	f	Lcpr$e;	t	RULE_MAX_ENTITY_CRAMMING
	f	Lcpr$e;	u	RULE_WEATHER_CYCLE
	f	Lcpr$e;	v	RULE_LIMITED_CRAFTING
	f	Lcpr$e;	w	RULE_MAX_COMMAND_CHAIN_LENGTH
	f	Lcpr$e;	x	RULE_COMMAND_MODIFICATION_BLOCK_LIMIT
	f	Lcpr$e;	y	RULE_ANNOUNCE_ADVANCEMENTS
	f	Lcpr$e;	z	RULE_DISABLE_RAIDS
c	cpr$a	net/minecraft/world/level/GameRules$BooleanValue
	m	(Lcpr$f;Z)V	<init>	<init>
		p	1		type
		p	2		initialValue
	m	()Z	a	get
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)V	a	updateFromArgument
		p	1		context
		p	2		name
	m	(Lcpr$a;Lnet/minecraft/server/MinecraftServer;)V	a	setFrom
		p	1		rule
		p	2		server
	m	(Lcpr$g;Lnet/minecraft/server/MinecraftServer;)V	a	setFrom
		p	1		rule
		p	2		server
	m	(Ljava/lang/String;)V	a	deserialize
		p	1		value
	m	(Lnet/minecraft/server/MinecraftServer;Lcpr$a;)V	a	lambda$create$1
		p	0		server
		p	1		rule
	m	(Z)Lcpr$f;	a	create
		p	0		initialValue
	m	(ZLcpr$f;)Lcpr$a;	a	lambda$create$0
		p	1		type
	m	(ZLjava/util/function/BiConsumer;)Lcpr$f;	a	create
		p	0		initialValue
		p	1		changeCallback
	m	(ZLnet/minecraft/server/MinecraftServer;)V	a	set
		p	1		value
		p	2		server
	m	()Ljava/lang/String;	b	serialize
	m	()I	c	getCommandResult
	m	()Lcpr$a;	d	getSelf
	m	()Lcpr$a;	e	copy
	m	()Lcpr$g;	f	copy
	m	()Lcpr$g;	g	getSelf
	f	Z	b	value
c	cpr$b	net/minecraft/world/level/GameRules$Category
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		category
	m	()Ljava/lang/String;	a	getDescriptionId
	m	()[Lcpr$b;	b	$values
	f	Lcpr$b;	a	PLAYER
	f	Lcpr$b;	b	MOBS
	f	Lcpr$b;	c	SPAWNING
	f	Lcpr$b;	d	DROPS
	f	Lcpr$b;	e	UPDATES
	f	Lcpr$b;	f	CHAT
	f	Lcpr$b;	g	MISC
	f	Ljava/lang/String;	h	descriptionId
	f	[Lcpr$b;	i	$VALUES
c	cpr$c	net/minecraft/world/level/GameRules$GameRuleTypeVisitor
	m	(Lcpr$e;Lcpr$f;)V	a	visit
		p	1		key
		p	2		type
	m	(Lcpr$e;Lcpr$f;)V	b	visitBoolean
		p	1		key
		p	2		type
	m	(Lcpr$e;Lcpr$f;)V	c	visitInteger
		p	1		key
		p	2		type
c	cpr$d	net/minecraft/world/level/GameRules$IntegerValue
	m	(Lcpr$f;I)V	<init>	<init>
		p	1		rule
		p	2		initialValue
	m	()I	a	get
	m	(I)Lcpr$f;	a	create
		p	0		initialValue
	m	(ILcpr$f;)Lcpr$d;	a	lambda$create$0
		p	1		type
	m	(ILjava/util/function/BiConsumer;)Lcpr$f;	a	create
		p	0		initialValue
		p	1		changeCallback
	m	(ILnet/minecraft/server/MinecraftServer;)V	a	set
		p	1		value
		p	2		server
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)V	a	updateFromArgument
		p	1		context
		p	2		name
	m	(Lcpr$d;Lnet/minecraft/server/MinecraftServer;)V	a	setFrom
		p	1		rule
		p	2		server
	m	(Lcpr$g;Lnet/minecraft/server/MinecraftServer;)V	a	setFrom
		p	1		rule
		p	2		server
	m	(Ljava/lang/String;)V	a	deserialize
		p	1		value
	m	(Lnet/minecraft/server/MinecraftServer;Lcpr$d;)V	a	lambda$create$1
		p	0		server
		p	1		rule
	m	()Ljava/lang/String;	b	serialize
	m	(Ljava/lang/String;)Z	b	tryDeserialize
		p	1		input
	m	()I	c	getCommandResult
	m	(Ljava/lang/String;)I	c	safeParse
		p	0		input
	m	()Lcpr$d;	d	getSelf
	m	()Lcpr$d;	e	copy
	m	()Lcpr$g;	f	copy
	m	()Lcpr$g;	g	getSelf
	f	I	b	value
c	cpr$e	net/minecraft/world/level/GameRules$Key
	m	(Ljava/lang/String;Lcpr$b;)V	<init>	<init>
		p	1		name
		p	2		category
	m	()Ljava/lang/String;	a	getId
	m	()Ljava/lang/String;	b	getDescriptionId
	m	()Lcpr$b;	c	getCategory
	f	Ljava/lang/String;	a	id
	f	Lcpr$b;	b	category
c	cpr$f	net/minecraft/world/level/GameRules$Type
	m	(Ljava/util/function/Supplier;Ljava/util/function/Function;Ljava/util/function/BiConsumer;Lcpr$h;)V	<init>	<init>
		p	1		argumentType
		p	2		ruleFactory
		p	3		changeCallback
		p	4		ruleAcceptor
	m	()Lcpr$g;	a	createRule
	m	(Lcpr$c;Lcpr$e;)V	a	callVisitor
		p	1		consumer
		p	2		key
	m	(Ljava/lang/String;)Lcom/mojang/brigadier/builder/RequiredArgumentBuilder;	a	createArgument
		p	1		name
	f	Ljava/util/function/Supplier;	a	argument
	f	Ljava/util/function/Function;	b	constructor
	f	Ljava/util/function/BiConsumer;	c	callback
	f	Lcpr$h;	d	visitorCaller
c	cpr$g	net/minecraft/world/level/GameRules$Value
	m	(Lcpr$f;)V	<init>	<init>
		p	1		type
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)V	a	updateFromArgument
		p	1		context
		p	2		name
	m	(Lcpr$g;Lnet/minecraft/server/MinecraftServer;)V	a	setFrom
		p	1		rule
		p	2		server
	m	(Ljava/lang/String;)V	a	deserialize
		p	1		value
	m	(Lnet/minecraft/server/MinecraftServer;)V	a	onChanged
		p	1		server
	m	()Ljava/lang/String;	b	serialize
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)V	b	setFromArgument
		p	1		context
		p	2		name
	m	()I	c	getCommandResult
	m	()Lcpr$g;	f	copy
	m	()Lcpr$g;	g	getSelf
	f	Lcpr$f;	a	type
c	cpr$h	net/minecraft/world/level/GameRules$VisitorCaller
	m	(Lcpr$c;Lcpr$e;Lcpr$f;)V	call	call
		p	1		consumer
		p	2		key
		p	3		type
c	cps	net/minecraft/world/level/GameType
	m	(Ljava/lang/String;IILjava/lang/String;)V	<init>	<init>
		p	3		id
		p	4		name
	m	()I	a	getId
	m	(I)Lcps;	a	byId
		p	0		id
	m	(Lcbr;)V	a	updatePlayerAbilities
		p	1		abilities
	m	(Lcps;)I	a	getNullableId
		p	0		gameMode
	m	(Ljava/lang/String;)Lcps;	a	byName
		p	0		name
	m	(Ljava/lang/String;Lcps;)Lcps;	a	byName
		p	0		name
		p	1		defaultMode
	m	()Ljava/lang/String;	b	getName
	m	(I)Lcps;	b	byNullableId
		p	0		id
	m	()Ljava/lang/String;	c	getSerializedName
	m	()Ltl;	d	getLongDisplayName
	m	()Ltl;	e	getShortDisplayName
	m	()Z	f	isBlockPlacingRestricted
	m	()Z	g	isCreative
	m	()Z	h	isSurvival
	m	()[Lcps;	i	$values
	f	Lcps;	a	SURVIVAL
	f	Lcps;	b	CREATIVE
	f	Lcps;	c	ADVENTURE
	f	Lcps;	d	SPECTATOR
	f	Lcps;	e	DEFAULT_MODE
	f	Lasp$a;	f	CODEC
	f	Ljava/util/function/IntFunction;	g	BY_ID
	f	I	h	NOT_SET
	f	I	i	id
	f	Ljava/lang/String;	j	name
	f	Ltl;	k	shortName
	f	Ltl;	l	longName
	f	[Lcps;	m	$VALUES
c	cpt	net/minecraft/world/level/GrassColor
	m	()I	a	getDefaultColor
	m	(DD)I	a	get
		p	0		temperature
		p	2		humidity
	m	([I)V	a	init
		p	0		map
	f	[I	a	pixels
c	cpu	net/minecraft/world/level/ItemLike
	m	()Lcja;	k	asItem
c	cpv	net/minecraft/world/level/Level
	m	(Lecn;Laev;Lhr;Lhe;Ljava/util/function/Supplier;ZZJI)V	<init>	<init>
		p	1		properties
		p	2		registryRef
		p	3		registryManager
		p	4		dimensionEntry
		p	5		profiler
		p	6		isClient
		p	7		debugWorld
		p	8		biomeAccess
		p	10		maxChainedNeighborUpdates
	m	()I	A_	getSkyDarken
	m	()Ldha;	B_	getWorldBorder
	m	()Ldis;	C_	dimensionType
	m	(Lgw;)Z	D	isInWorldBoundsHorizontal
		p	0		pos
	m	()Lasc;	D_	getRandom
	m	()Ldjj;	E	getEntities
	m	()Lcqv;	E_	getBiomeManager
	m	()Ljava/lang/String;	F	gatherChunkSourceStats
	m	()J	F_	nextSubTickCount
	m	()Lhr;	G_	registryAccess
	m	()Leim;	I	getScoreboard
	m	()Z	N	isDay
	m	()Z	O	isNight
	m	()V	P	tickBlockEntities
	m	()V	Q	updateSkyBrightness
	m	()Lgw;	R	getSharedSpawnPos
	m	()F	S	getSharedSpawnAngle
	m	()V	T	prepareWeather
	m	()V	U	disconnect
	m	()J	V	getGameTime
	m	()J	W	getDayTime
	m	()Lcpr;	X	getGameRules
	m	()Z	Y	isThundering
	m	()Z	Z	isRaining
	m	()Ljava/lang/String;	a	lambda$fillReportDetails$4
	m	(DDDDDDLqw;)V	a	createFireworks
		p	1		x
		p	3		y
		p	5		z
		p	7		velocityX
		p	9		velocityY
		p	11		velocityZ
		p	13		nbt
	m	(DDDLapc;Lape;FFZ)V	a	playLocalSound
		p	1		x
		p	3		y
		p	5		z
		p	7		sound
		p	8		category
		p	9		volume
		p	10		pitch
		p	11		useDistance
	m	(F)F	a	getSunAngle
		p	1		tickDelta
	m	(I)Lbiq;	a	getEntity
		p	1		id
	m	(II)Ldhf;	a	getChunk
		p	1		chunkX
		p	2		chunkZ
	m	(IIII)Lgw;	a	getBlockRandomPos
		p	1		x
		p	2		y
		p	3		z
	m	(IILdhk;Z)Ldhf;	a	getChunk
		p	1		chunkX
		p	2		chunkZ
		p	3		leastStatus
		p	4		create
	m	(ILgw;I)V	a	destroyBlockProgress
		p	1		entityId
		p	2		pos
		p	3		progress
	m	(J)Z	a	shouldTickBlocksAt
		p	1		chunkPos
	m	(Lbiq;B)V	a	broadcastEntityEvent
		p	1		entity
		p	2		status
	m	(Lbiq;DDDFLcpv$a;)Lcpn;	a	explode
		p	1		entity
		p	2		x
		p	4		y
		p	6		z
		p	8		power
		p	9		explosionSourceType
	m	(Lbiq;DDDFZLcpv$a;)Lcpn;	a	explode
		p	1		entity
		p	2		x
		p	4		y
		p	6		z
		p	8		power
		p	9		createFire
		p	10		explosionSourceType
	m	(Lbiq;Lbho;)V	a	broadcastDamageEvent
		p	1		entity
		p	2		damageSource
	m	(Lbiq;Lbho;Lcpo;DDDFZLcpv$a;)Lcpn;	a	explode
		p	1		entity
		p	2		damageSource
		p	3		behavior
		p	4		x
		p	6		y
		p	8		z
		p	10		power
		p	11		createFire
		p	12		explosionSourceType
	m	(Lbiq;Lbho;Lcpo;DDDFZLcpv$a;Z)Lcpn;	a	explode
		p	1		entity
		p	2		damageSource
		p	3		behavior
		p	4		x
		p	6		y
		p	8		z
		p	10		power
		p	11		createFire
		p	12		explosionSourceType
		p	13		particles
	m	(Lbiq;Lbho;Lcpo;Lehn;FZLcpv$a;)Lcpn;	a	explode
		p	1		entity
		p	2		damageSource
		p	3		behavior
		p	4		pos
		p	5		power
		p	6		createFire
		p	7		explosionSourceType
	m	(Lbiq;Lehi;Ljava/util/function/Predicate;)Ljava/util/List;	a	getEntities
		p	1		except
		p	2		box
		p	3		predicate
	m	(Lbiq;Lgw;Lapc;Lape;FF)V	a	playSound
		p	1		except
		p	2		pos
		p	3		sound
		p	4		category
		p	5		volume
		p	6		pitch
	m	(Lbiq;Ljava/util/function/Predicate;Ljava/util/List;Lbiq;)V	a	lambda$getEntities$1
		p	3		entity
	m	(Lcbu;DDDLapc;Lape;FF)V	a	playSound
		p	1		except
		p	2		x
		p	4		y
		p	6		z
		p	8		sound
		p	9		category
		p	10		volume
		p	11		pitch
	m	(Lcbu;DDDLapc;Lape;FFJ)V	a	playSeededSound
		p	1		except
		p	2		x
		p	4		y
		p	6		z
		p	8		sound
		p	9		category
		p	10		volume
		p	11		pitch
		p	12		seed
	m	(Lcbu;DDDLhe;Lape;FFJ)V	a	playSeededSound
		p	1		except
		p	2		x
		p	4		y
		p	6		z
		p	8		sound
		p	9		category
		p	10		volume
		p	11		pitch
		p	12		seed
	m	(Lcbu;Lbiq;Lapc;Lape;FF)V	a	playSound
		p	1		except
		p	2		entity
		p	3		sound
		p	4		category
		p	5		volume
		p	6		pitch
	m	(Lcbu;Lbiq;Lhe;Lape;FFJ)V	a	playSeededSound
		p	1		except
		p	2		entity
		p	3		sound
		p	4		category
		p	5		volume
		p	6		pitch
		p	7		seed
	m	(Lcbu;Lgw;)Z	a	mayInteract
		p	1		player
		p	2		pos
	m	(Lcbu;Lgw;Lapc;Lape;FF)V	a	playSound
		p	1		except
		p	2		pos
		p	3		sound
		p	4		category
		p	5		volume
		p	6		pitch
	m	(Lcpr$e;)Lcpn$a;	a	getDestroyType
		p	1		gameRuleKey
	m	(Ldcv;)V	a	setBlockEntity
		p	1		blockEntity
	m	(Ldel;)V	a	addBlockEntityTicker
		p	1		ticker
	m	(Ldfj;Lgw;Lcsv;Lgw;Z)V	a	neighborChanged
		p	1		state
		p	2		pos
		p	3		sourceBlock
		p	4		sourcePos
		p	5		notify
	m	(Ldjh;Lehi;Ljava/util/function/Predicate;)Ljava/util/List;	a	getEntities
		p	1		filter
		p	2		box
		p	3		predicate
	m	(Ldjh;Lehi;Ljava/util/function/Predicate;Ljava/util/List;)V	a	getEntities
		p	1		filter
		p	2		box
		p	3		predicate
		p	4		result
	m	(Ldjh;Lehi;Ljava/util/function/Predicate;Ljava/util/List;I)V	a	getEntities
		p	1		filter
		p	2		box
		p	3		predicate
		p	4		result
		p	5		limit
	m	(Ldks$a;II)I	a	getHeight
		p	1		heightmap
		p	2		x
		p	3		z
	m	(Lgw;Lapc;Lape;FFZ)V	a	playLocalSound
		p	1		pos
		p	2		sound
		p	3		category
		p	4		volume
		p	5		pitch
		p	6		useDistance
	m	(Lgw;Lbiq;)Z	a	loadedAndEntityCanStandOn
		p	1		pos
		p	2		entity
	m	(Lgw;Lbiq;Lha;)Z	a	loadedAndEntityCanStandOnFace
		p	1		pos
		p	2		entity
		p	3		direction
	m	(Lgw;Lcsv;)V	a	updateNeighborsAt
		p	1		pos
		p	2		sourceBlock
	m	(Lgw;Lcsv;II)V	a	blockEvent
		p	1		pos
		p	2		block
		p	3		type
		p	4		data
	m	(Lgw;Lcsv;Lgw;)V	a	neighborChanged
		p	1		pos
		p	2		sourceBlock
		p	3		sourcePos
	m	(Lgw;Lcsv;Lha;)V	a	updateNeighborsAtExceptFromFacing
		p	1		pos
		p	2		sourceBlock
		p	3		direction
	m	(Lgw;Ldfj;)V	a	addDestroyBlockEffect
		p	1		pos
		p	2		state
	m	(Lgw;Ldfj;I)Z	a	setBlock
		p	1		pos
		p	2		state
		p	3		flags
	m	(Lgw;Ldfj;II)Z	a	setBlock
		p	1		pos
		p	2		state
		p	3		flags
		p	4		maxUpdateDepth
	m	(Lgw;Ldfj;Ldfj;)V	a	onBlockStateChange
		p	1		pos
		p	2		oldBlock
		p	3		newBlock
	m	(Lgw;Ldfj;Ldfj;I)V	a	sendBlockUpdated
		p	1		pos
		p	2		oldState
		p	3		newState
		p	4		flags
	m	(Lgw;Ljava/util/function/Predicate;)Z	a	isStateAtPosition
		p	1		pos
		p	2		state
	m	(Lgw;Z)Z	a	removeBlock
		p	1		pos
		p	2		move
	m	(Lgw;ZLbiq;I)Z	a	destroyBlock
		p	1		pos
		p	2		drop
		p	3		breakingEntity
		p	4		maxUpdateDepth
	m	(Lha;Ldfj;Lgw;Lgw;II)V	a	neighborShapeChanged
		p	1		direction
		p	2		neighborState
		p	3		pos
		p	4		neighborPos
		p	5		flags
		p	6		maxUpdateDepth
	m	(Lhe;)Ljava/lang/IllegalArgumentException;	a	lambda$new$0
	m	(Lit;DDDDDD)V	a	addParticle
		p	1		parameters
		p	2		x
		p	4		y
		p	6		z
		p	8		velocityX
		p	10		velocityY
		p	12		velocityZ
	m	(Lit;ZDDDDDD)V	a	addParticle
		p	1		parameters
		p	2		alwaysSpawn
		p	3		x
		p	5		y
		p	7		z
		p	9		velocityX
		p	11		velocityY
		p	13		velocityZ
	m	(Ljava/lang/String;)Lebw;	a	getMapData
		p	1		id
	m	(Ljava/lang/String;Lebw;)V	a	setMapData
		p	1		id
		p	2		state
	m	(Ljava/util/function/Consumer;Lbiq;)V	a	guardEntityTick
		p	1		tickConsumer
		p	2		entity
	m	(Ljava/util/function/Predicate;Ljava/util/List;ILdjh;Lbiq;)Laqn$a;	a	lambda$getEntities$2
		p	4		entity
	m	(Lo;)Lp;	a	fillReportDetails
		p	1		report
	m	(Lvd;)V	a	sendPacketToServer
		p	1		packet
	m	(Lgw;)Ldfj;	a_	getBlockState
		p	1		pos
	m	()Laev;	aa	dimensionTypeId
	m	()Lhe;	ab	dimensionTypeRegistration
	m	()Laev;	ac	dimension
	m	()Lbdp;	ad	getProfiler
	m	()Ljava/util/function/Supplier;	ae	getProfilerSupplier
	m	()Z	af	isDebug
	m	()Lbhp;	ag	damageSources
	m	(F)F	b	getThunderLevel
		p	1		delta
	m	(I)Z	b	isOutsideSpawnableHeight
		p	0		y
	m	(ILgw;I)V	b	globalLevelEvent
		p	1		eventId
		p	2		pos
		p	3		data
	m	(Lgw;Ldfj;)Z	b	setBlockAndUpdate
		p	1		pos
		p	2		state
	m	(Lgw;Ldfj;Ldfj;)V	b	setBlocksDirty
		p	1		pos
		p	2		old
		p	3		updated
	m	(Lgw;Ljava/util/function/Predicate;)Z	b	isFluidAtPosition
		p	1		pos
		p	2		state
	m	(Lit;DDDDDD)V	b	addAlwaysVisibleParticle
		p	1		parameters
		p	2		x
		p	4		y
		p	6		z
		p	8		velocityX
		p	10		velocityY
		p	12		velocityZ
	m	(Lit;ZDDDDDD)V	b	addAlwaysVisibleParticle
		p	1		parameters
		p	2		alwaysSpawn
		p	3		x
		p	5		y
		p	7		z
		p	9		velocityX
		p	11		velocityY
		p	13		velocityZ
	m	(ZZ)V	b	setSpawnSettings
		p	1		spawnMonsters
		p	2		spawnAnimals
	m	(Lgw;)Leam;	b_	getFluidState
		p	1		pos
	m	(F)V	c	setThunderLevel
		p	1		thunderGradient
	m	(I)V	c	setSkyFlashTime
		p	1		lightningTicksLeft
	m	(II)Lcpb;	c	getChunkForCollisions
		p	1		chunkX
		p	2		chunkZ
	m	(Lgw;Lcsv;)V	c	updateNeighbourForOutputSignal
		p	1		pos
		p	2		block
	m	(Lgw;)Ldcv;	c_	getBlockEntity
		p	1		pos
	m	(F)F	d	getRainLevel
		p	1		delta
	m	(II)Ldhq;	d	getChunk
	m	(Lgw;)Lbgw;	d_	getCurrentDifficultyAt
		p	1		pos
	m	(F)V	e	setRainLevel
		p	1		rainGradient
	m	(Lbiq;)Z	h	shouldTickDeath
		p	1		entity
	m	(Lgw;)Z	j	isInWorldBounds
		p	1		pos
	m	(Lgw;)Z	k	isInSpawnableBounds
		p	0		pos
	m	(Lgw;)Ldhq;	l	getChunkAt
		p	1		pos
	m	(Lgw;)Z	m	shouldTickBlocksAt
		p	1		pos
	m	()Lnet/minecraft/server/MinecraftServer;	n	getServer
	m	(Lgw;)V	n	removeBlockEntity
		p	1		pos
	m	(Lgw;)Z	o	isLoaded
		p	1		pos
	m	()Ljava/lang/String;	p	lambda$fillReportDetails$3
	m	(Lgw;)V	p	blockEntityChanged
		p	1		pos
	m	()Lcml;	q	getRecipeManager
	m	(Lgw;)Z	q	isRainingAt
		p	1		pos
	m	()Z	r	noSave
	m	()I	t	getFreeMapId
	m	()Z	w_	isClientSide
	m	()Leab;	x_	getLightEngine
	m	()I	y_	getSeaLevel
	m	()Lecd;	z_	getLevelData
	f	Lecn;	A	levelData
	f	Z	B	isClientSide
	f	Laev;	D	dimensionTypeId
	f	Lhe;	E	dimensionTypeRegistration
	f	Ljava/util/function/Supplier;	F	profiler
	f	Ldha;	G	worldBorder
	f	Lcqv;	H	biomeManager
	f	Laev;	I	dimension
	f	Lhr;	J	registryAccess
	f	Lbhp;	K	damageSources
	f	J	L	subTickCount
	f	Ljava/util/List;	a	pendingBlockEntityTickers
	f	Z	b	tickingBlockEntities
	f	Ljava/lang/Thread;	c	thread
	f	Z	d	isDebug
	f	I	e	skyDarken
	f	Lasc;	f	threadSafeRandom
	f	Lcom/mojang/serialization/Codec;	g	RESOURCE_KEY_CODEC
	f	Laev;	h	OVERWORLD
	f	Laev;	i	NETHER
	f	Laev;	j	END
	f	I	k	MAX_LEVEL_SIZE
	f	I	l	LONG_PARTICLE_CLIP_RANGE
	f	I	m	SHORT_PARTICLE_CLIP_RANGE
	f	I	n	MAX_BRIGHTNESS
	f	I	o	TICKS_PER_DAY
	f	I	p	MAX_ENTITY_SPAWN_Y
	f	I	q	MIN_ENTITY_SPAWN_Y
	f	Ljava/util/List;	r	blockEntityTickers
	f	Lebo;	s	neighborUpdater
	f	I	t	randValue
	f	I	u	addend
	f	F	v	oRainLevel
	f	F	w	rainLevel
	f	F	x	oThunderLevel
	f	F	y	thunderLevel
	f	Lasc;	z	random
c	cpv$1	net/minecraft/world/level/Level$1
	m	()D	a	getCenterX
	m	()D	b	getCenterZ
	f	Ldis;	a	val$dimensionType
	f	Lcpv;	b	this$0
c	cpv$2	net/minecraft/world/level/Level$2
	f	[I	a	$SwitchMap$net$minecraft$world$level$Level$ExplosionInteraction
c	cpv$a	net/minecraft/world/level/Level$ExplosionInteraction
	m	()[Lcpv$a;	a	$values
	f	Lcpv$a;	a	NONE
	f	Lcpv$a;	b	BLOCK
	f	Lcpv$a;	c	MOB
	f	Lcpv$a;	d	TNT
	f	[Lcpv$a;	e	$VALUES
c	cpw	net/minecraft/world/level/LevelAccessor
	m	()Lasc;	D_	getRandom
	m	()J	F_	nextSubTickCount
	m	()Ldhj;	J	getChunkSource
	m	()Leiv;	K	getFluidTicks
	m	()Leiv;	L	getBlockTicks
	m	(Lbiq;Ldjt;Lehn;)V	a	gameEvent
		p	1		entity
		p	2		event
		p	3		pos
	m	(Lbiq;Ldjt;Lgw;)V	a	gameEvent
		p	1		entity
		p	2		event
		p	3		pos
	m	(Lcbu;ILgw;I)V	a	levelEvent
		p	1		player
		p	2		eventId
		p	3		pos
		p	4		data
	m	(Lcbu;Lgw;Lapc;Lape;)V	a	playSound
		p	1		except
		p	2		pos
		p	3		sound
		p	4		category
	m	(Lcbu;Lgw;Lapc;Lape;FF)V	a	playSound
		p	1		except
		p	2		pos
		p	3		sound
		p	4		category
		p	5		volume
		p	6		pitch
	m	(Ldjt;Lehn;Ldjt$a;)V	a	gameEvent
		p	1		event
		p	2		emitterPos
		p	3		emitter
	m	(Ldjt;Lgw;Ldjt$a;)V	a	gameEvent
		p	1		event
		p	2		pos
		p	3		emitter
	m	(Lgw;Lcsv;I)V	a	scheduleTick
		p	1		pos
		p	2		block
		p	3		delay
	m	(Lgw;Lcsv;ILejd;)V	a	scheduleTick
		p	1		pos
		p	2		block
		p	3		delay
		p	4		priority
	m	(Lgw;Leal;I)V	a	scheduleTick
		p	1		pos
		p	2		fluid
		p	3		delay
	m	(Lgw;Leal;ILejd;)V	a	scheduleTick
		p	1		pos
		p	2		fluid
		p	3		delay
		p	4		priority
	m	(Lgw;Ljava/lang/Object;I)Leiz;	a	createTick
		p	1		pos
		p	2		type
		p	3		delay
	m	(Lgw;Ljava/lang/Object;ILejd;)Leiz;	a	createTick
		p	1		pos
		p	2		type
		p	3		delay
		p	4		priority
	m	(Lha;Ldfj;Lgw;Lgw;II)V	a	neighborShapeChanged
		p	1		direction
		p	2		neighborState
		p	3		pos
		p	4		neighborPos
		p	5		flags
		p	6		maxUpdateDepth
	m	(Lit;DDDDDD)V	a	addParticle
		p	1		parameters
		p	2		x
		p	4		y
		p	6		z
		p	8		velocityX
		p	10		velocityY
		p	12		velocityZ
	m	()J	ah	dayTime
	m	()Lbgv;	ai	getDifficulty
	m	(II)Z	b	hasChunk
		p	1		chunkX
		p	2		chunkZ
	m	(Lgw;Lcsv;)V	b	blockUpdated
		p	1		pos
		p	2		block
	m	(ILgw;I)V	c	levelEvent
		p	1		eventId
		p	2		pos
		p	3		data
	m	(Lgw;)Lbgw;	d_	getCurrentDifficultyAt
		p	1		pos
	m	()Lnet/minecraft/server/MinecraftServer;	n	getServer
	m	()Lecd;	z_	getLevelData
c	cpx	net/minecraft/world/level/LevelHeightAccessor
	m	()I	H_	getMinBuildHeight
	m	()I	I_	getHeight
	m	()I	aj	getMaxBuildHeight
	m	()I	ak	getSectionsCount
	m	()I	al	getMinSection
	m	()I	am	getMaxSection
	m	(I)Z	d	isOutsideBuildHeight
		p	1		y
	m	(I)I	e	getSectionIndex
		p	1		y
	m	(II)Lcpx;	e	create
		p	0		bottomY
		p	1		height
	m	(I)I	f	getSectionIndexFromSectionY
		p	1		coord
	m	(I)I	g	getSectionYFromSectionIndex
		p	1		index
	m	(Lgw;)Z	r	isOutsideBuildHeight
		p	1		pos
c	cpx$1	net/minecraft/world/level/LevelHeightAccessor$1
	m	()I	H_	getMinBuildHeight
	m	()I	I_	getHeight
	f	I	a	val$height
	f	I	b	val$minBuildHeight
c	cpy	net/minecraft/world/level/LevelReader
	m	(Lgw;)Z	A	hasChunkAt
		p	1		pos
	m	()I	A_	getSkyDarken
	m	()Ldis;	C_	dimensionType
	m	()Lcqv;	E_	getBiomeManager
	m	()Lcec;	G	enabledFeatures
	m	()Lhr;	G_	registryAccess
	m	()I	H_	getMinBuildHeight
	m	()I	I_	getHeight
	m	(II)Ldhf;	a	getChunk
		p	1		chunkX
		p	2		chunkZ
	m	(III)Lhe;	a	getUncachedNoiseBiome
		p	1		biomeX
		p	2		biomeY
		p	3		biomeZ
	m	(IIIIII)Z	a	hasChunksAt
		p	1		minX
		p	2		minY
		p	3		minZ
		p	4		maxX
		p	5		maxY
		p	6		maxZ
	m	(IILdhk;)Ldhf;	a	getChunk
		p	1		chunkX
		p	2		chunkZ
		p	3		status
	m	(IILdhk;Z)Ldhf;	a	getChunk
		p	1		chunkX
		p	2		chunkZ
		p	3		leastStatus
		p	4		create
	m	(Laev;)Lhg;	a	holderLookup
		p	1		registryRef
	m	(Ldks$a;II)I	a	getHeight
		p	1		heightmap
		p	2		x
		p	3		z
	m	(Ldks$a;Lgw;)Lgw;	a	getHeightmapPos
		p	1		heightmap
		p	2		pos
	m	(Lgw;Lcpg;)I	a	getBlockTint
		p	1		pos
		p	2		colorResolver
	m	(Lgw;Lgw;)Z	a	hasChunksAt
		p	1		min
		p	2		max
	m	(II)Z	b	hasChunk
		p	1		chunkX
		p	2		chunkZ
	m	(IIII)Z	b	hasChunksAt
		p	1		minX
		p	2		minZ
		p	3		maxX
		p	4		maxZ
	m	(II)Lcpb;	c	getChunkForCollisions
		p	1		chunkX
		p	2		chunkZ
	m	(Lehi;)Ljava/util/stream/Stream;	c	getBlockStatesIfLoaded
		p	1		box
	m	(Lgw;I)I	c	getMaxLocalRawBrightness
		p	1		pos
		p	2		ambientDarkness
	m	(Lehi;)Z	d	containsAnyLiquid
		p	1		box
	m	(II)Z	f	hasChunkAt
		p	1		x
		p	2		z
	m	(III)Lhe;	getNoiseBiome	getNoiseBiome
		p	1		biomeX
		p	2		biomeY
		p	3		biomeZ
	m	(Lgw;)Lhe;	s	getBiome
		p	1		pos
	m	(Lgw;)Z	t	isEmptyBlock
		p	1		pos
	m	(Lgw;)Z	u	canSeeSkyFromBelowWater
		p	1		pos
	m	(Lgw;)F	v	getPathfindingCostFromLightLevels
		p	1		pos
	m	(Lgw;)F	w	getLightLevelDependentMagicValue
		p	1		pos
	m	()Z	w_	isClientSide
	m	(Lgw;)Ldhf;	x	getChunk
		p	1		pos
	m	(Lgw;)Z	y	isWaterAt
		p	1		pos
	m	()I	y_	getSeaLevel
	m	(Lgw;)I	z	getMaxLocalRawBrightness
		p	1		pos
c	cpz	net/minecraft/world/level/LevelSettings
	m	(Ljava/lang/String;Lcps;ZLbgv;ZLcpr;Lcqo;)V	<init>	<init>
		p	1		name
		p	2		gameMode
		p	3		hardcore
		p	4		difficulty
		p	5		allowCommands
		p	6		gameRules
		p	7		dataConfiguration
	m	()Ljava/lang/String;	a	levelName
	m	(Lbgv;)Lcpz;	a	withDifficulty
		p	1		difficulty
	m	(Lcom/mojang/serialization/Dynamic;Lcqo;)Lcpz;	a	parse
		p	0		dynamic
		p	1		dataConfiguration
	m	(Lcps;)Lcpz;	a	withGameType
		p	1		mode
	m	(Lcqo;)Lcpz;	a	withDataConfiguration
		p	1		dataConfiguration
	m	(Ljava/lang/Number;)Lbgv;	a	lambda$parse$0
		p	0		difficulty
	m	()Lcps;	b	gameType
	m	()Z	c	hardcore
	m	()Lbgv;	d	difficulty
	m	()Z	e	allowCommands
	m	()Lcpr;	f	gameRules
	m	()Lcqo;	g	getDataConfiguration
	m	()Lcpz;	h	copy
	f	Ljava/lang/String;	a	levelName
	f	Lcps;	b	gameType
	f	Z	c	hardcore
	f	Lbgv;	d	difficulty
	f	Z	e	allowCommands
	f	Lcpr;	f	gameRules
	f	Lcqo;	g	dataConfiguration
c	cqa	net/minecraft/world/level/LevelSimulatedRW
c	cqb	net/minecraft/world/level/LevelSimulatedReader
	m	(Ldks$a;Lgw;)Lgw;	a	getHeightmapPos
		p	1		heightmap
		p	2		pos
	m	(Lgw;Ldcx;)Ljava/util/Optional;	a	getBlockEntity
		p	1		pos
		p	2		type
	m	(Lgw;Ljava/util/function/Predicate;)Z	a	isStateAtPosition
		p	1		pos
		p	2		state
	m	(Lgw;Ljava/util/function/Predicate;)Z	b	isFluidAtPosition
		p	1		pos
		p	2		state
c	cqc	net/minecraft/world/level/LevelTimeAccess
	m	()J	ah	dayTime
	m	()F	an	getMoonBrightness
	m	()I	ao	getMoonPhase
	m	(F)F	f	getTimeOfDay
		p	1		tickDelta
c	cqd	net/minecraft/world/level/LevelWriter
	m	(Lgw;Ldfj;I)Z	a	setBlock
		p	1		pos
		p	2		state
		p	3		flags
	m	(Lgw;Ldfj;II)Z	a	setBlock
		p	1		pos
		p	2		state
		p	3		flags
		p	4		maxUpdateDepth
	m	(Lgw;Z)Z	a	removeBlock
		p	1		pos
		p	2		move
	m	(Lgw;ZLbiq;)Z	a	destroyBlock
		p	1		pos
		p	2		drop
		p	3		breakingEntity
	m	(Lgw;ZLbiq;I)Z	a	destroyBlock
		p	1		pos
		p	2		drop
		p	3		breakingEntity
		p	4		maxUpdateDepth
	m	(Lbiq;)Z	b	addFreshEntity
		p	1		entity
	m	(Lgw;Z)Z	b	destroyBlock
		p	1		pos
		p	2		drop
c	cqe	net/minecraft/world/level/LightLayer
	m	()[Lcqe;	a	$values
	f	Lcqe;	a	SKY
	f	Lcqe;	b	BLOCK
	f	[Lcqe;	c	$VALUES
c	cqf	net/minecraft/world/level/LocalMobCapCalculator
	m	(Laka;)V	<init>	<init>
		p	1		threadedAnvilChunkStorage
	m	(Lakr;)Lcqf$a;	a	lambda$addMob$1
		p	0		player
	m	(Lbjj;Lcpc;)Z	a	canSpawn
		p	1		spawnGroup
		p	2		chunkPos
	m	(Lcpc;)Ljava/util/List;	a	getPlayersNear
		p	1		chunkPos
	m	(Lcpc;J)Ljava/util/List;	a	lambda$getPlayersNear$0
		p	2		pos
	m	(Lcpc;Lbjj;)V	a	addMob
		p	1		chunkPos
		p	2		spawnGroup
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	a	playersNearChunk
	f	Ljava/util/Map;	b	playerMobCounts
	f	Laka;	c	chunkMap
c	cqf$a	net/minecraft/world/level/LocalMobCapCalculator$MobCounts
	m	(Lbjj;)V	a	add
		p	1		spawnGroup
	m	(Lbjj;Ljava/lang/Integer;)Ljava/lang/Integer;	a	lambda$add$0
		p	0		group
		p	1		density
	m	(Lbjj;)Z	b	canSpawn
		p	1		spawnGroup
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	a	counts
c	cqg	net/minecraft/world/level/NaturalSpawner
	m	(I)[Lbjj;	a	lambda$static$1
	m	(ILjava/lang/Iterable;Lcqg$b;Lcqf;)Lcqg$d;	a	createState
		p	0		spawningChunkCount
		p	1		entities
		p	2		chunkSource
		p	3		densityCapper
	m	(Lakq;Lbiu;)Lbji;	a	getMobForSpawn
		p	0		world
		p	1		type
	m	(Lakq;Lbji;D)Z	a	isValidPositionForMob
		p	0		world
		p	1		entity
		p	2		squaredDistance
	m	(Lakq;Lbjj;Lcqn;Ldhg;Lcrf$c;Lgw$a;D)Z	a	isValidSpawnPostitionForType
		p	0		world
		p	1		group
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		spawnEntry
		p	5		pos
		p	6		squaredDistance
	m	(Lakq;Lcqn;Ldhg;Lbjj;Lasc;Lgw;)Ljava/util/Optional;	a	getRandomSpawnMobAt
		p	0		world
		p	1		structureAccessor
		p	2		chunkGenerator
		p	3		spawnGroup
		p	4		random
		p	5		pos
	m	(Lakq;Lcqn;Ldhg;Lbjj;Lcrf$c;Lgw;)Z	a	canSpawnMobAt
		p	0		world
		p	1		structureAccessor
		p	2		chunkGenerator
		p	3		spawnGroup
		p	4		spawnEntry
		p	5		pos
	m	(Lakq;Lcqn;Ldhg;Lbjj;Lgw;Lhe;)Lbfm;	a	mobsAt
		p	0		world
		p	1		structureAccessor
		p	2		chunkGenerator
		p	3		spawnGroup
		p	4		pos
		p	5		biomeEntry
	m	(Lakq;Ldhf;Lgw$a;D)Z	a	isRightDistanceToPlayerAndSpawnPoint
		p	0		world
		p	1		chunk
		p	2		pos
		p	3		squaredDistance
	m	(Lakq;Ldhq;Lcqg$d;ZZZ)V	a	spawnForChunk
		p	0		world
		p	1		chunk
		p	2		info
		p	3		spawnAnimals
		p	4		spawnMonsters
		p	5		rareSpawn
	m	(Lbiu;Lgw;Ldhf;)Z	a	lambda$spawnCategoryForPosition$3
		p	0		type
		p	1		posx
		p	2		chunk
	m	(Lbji;Ldhf;)V	a	lambda$spawnCategoryForPosition$4
		p	0		entity
		p	1		chunk
	m	(Lbjj;)Z	a	lambda$static$0
		p	0		spawnGroup
	m	(Lbjj;Lakq;Ldhf;Lgw;Lcqg$c;Lcqg$a;)V	a	spawnCategoryForPosition
		p	0		group
		p	1		world
		p	2		chunk
		p	3		pos
		p	4		checker
		p	5		runner
	m	(Lbjj;Lakq;Ldhq;Lcqg$c;Lcqg$a;)V	a	spawnCategoryForChunk
		p	0		group
		p	1		world
		p	2		chunk
		p	3		checker
		p	4		runner
	m	(Lbjj;Lakq;Lgw;)V	a	spawnCategoryForPosition
		p	0		group
		p	1		world
		p	2		pos
	m	(Lbka$c;Lcpy;Lgw;Lbiu;)Z	a	isSpawnPositionOk
		p	0		location
		p	1		world
		p	2		pos
		p	3		entityType
	m	(Lcpb;Lgw;Ldfj;Leam;Lbiu;)Z	a	isValidEmptySpawnBlock
		p	0		blockView
		p	1		pos
		p	2		state
		p	3		fluidState
		p	4		entityType
	m	(Lcpv;Ldhq;)Lgw;	a	getRandomPosWithin
		p	0		world
		p	1		chunk
	m	(Lcpy;Lbiu;II)Lgw;	a	getTopNonCollidingPos
		p	0		world
		p	1		entityType
		p	2		x
		p	3		z
	m	(Lcqk;Lhe;Lcpc;Lasc;)V	a	spawnMobsForChunkGeneration
		p	0		world
		p	1		biomeEntry
		p	2		chunkPos
		p	3		random
	m	(Lgw;Lakq;Lbjj;Lcqn;)Z	a	isInNetherFortressBounds
		p	0		pos
		p	1		world
		p	2		spawnGroup
		p	3		structureAccessor
	m	(Lgw;Lbiq;Lcqj;Lcqf;Lbjj;Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;Ldhq;)V	a	lambda$createState$2
		p	6		chunk
	m	(Lgw;Ldhf;)Lcqt;	a	getRoughBiome
		p	0		pos
		p	1		chunk
	f	I	a	SPAWN_DISTANCE_CHUNK
	f	I	b	SPAWN_DISTANCE_BLOCK
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	I	d	MIN_SPAWN_DISTANCE
	f	I	e	MAGIC_NUMBER
	f	[Lbjj;	f	SPAWNING_CATEGORIES
c	cqg$1	net/minecraft/world/level/NaturalSpawner$1
	f	[I	a	$SwitchMap$net$minecraft$world$entity$SpawnPlacements$Type
c	cqg$a	net/minecraft/world/level/NaturalSpawner$AfterSpawnCallback
	m	(Lbji;Ldhf;)V	run	run
		p	1		entity
		p	2		chunk
c	cqg$b	net/minecraft/world/level/NaturalSpawner$ChunkGetter
	m	(JLjava/util/function/Consumer;)V	query	query
		p	1		pos
		p	3		chunkConsumer
c	cqg$c	net/minecraft/world/level/NaturalSpawner$SpawnPredicate
	m	(Lbiu;Lgw;Ldhf;)Z	test	test
		p	1		type
		p	2		pos
		p	3		chunk
c	cqg$d	net/minecraft/world/level/NaturalSpawner$SpawnState
	m	(ILit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;Lcqj;Lcqf;)V	<init>	<init>
		p	1		spawningChunkCount
		p	2		groupToCount
		p	3		densityField
		p	4		densityCapper
	m	()I	a	getSpawnableChunkCount
	m	(Lbiu;Lgw;Ldhf;)Z	a	canSpawn
		p	1		type
		p	2		pos
		p	3		chunk
	m	(Lbji;Ldhf;)V	a	afterSpawn
		p	1		entity
		p	2		chunk
	m	(Lbjj;Lcpc;)Z	a	canSpawnForCategory
		p	1		group
		p	2		chunkPos
	m	()Lit/unimi/dsi/fastutil/objects/Object2IntMap;	b	getMobCategoryCounts
	f	I	a	spawnableChunkCount
	f	Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;	b	mobCategoryCounts
	f	Lcqj;	c	spawnPotential
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	d	unmodifiableMobCategoryCounts
	f	Lcqf;	e	localMobCapCalculator
	f	Lgw;	f	lastCheckedPos
	f	Lbiu;	g	lastCheckedType
	f	D	h	lastCharge
c	cqh	net/minecraft/world/level/NoiseColumn
	m	(I[Ldfj;)V	<init>	<init>
		p	1		startY
		p	2		states
	m	(I)Ldfj;	a	getBlock
		p	1		y
	m	(ILdfj;)V	a	setBlock
		p	1		y
		p	2		state
	f	I	a	minY
	f	[Ldfj;	b	column
c	cqi	net/minecraft/world/level/PathNavigationRegion
	m	(Lcpv;Lgw;Lgw;)V	<init>	<init>
		p	1		world
		p	2		minPos
		p	3		maxPos
	m	()Ldha;	B_	getWorldBorder
	m	()I	H_	getMinBuildHeight
	m	()I	I_	getHeight
	m	()Lbdp;	a	getProfiler
	m	(II)Ldhf;	a	getChunk
		p	1		chunkX
		p	2		chunkZ
	m	(Lcpv;)Lhe;	a	lambda$new$0
	m	(Lgw;)Ldfj;	a_	getBlockState
		p	1		pos
	m	(Lgw;)Leam;	b_	getFluidState
		p	1		pos
	m	(II)Lcpb;	c	getChunkForCollisions
		p	1		chunkX
		p	2		chunkZ
	m	(Lbiq;Lehi;)Ljava/util/List;	c	getEntityCollisions
		p	1		entity
		p	2		box
	m	(Lgw;)Ldcv;	c_	getBlockEntity
		p	1		pos
	m	(Lgw;)Ldhf;	d	getChunk
		p	1		pos
	f	I	a	centerX
	f	I	b	centerZ
	f	[[Ldhf;	c	chunks
	f	Z	d	allEmpty
	f	Lcpv;	e	level
	f	Ljava/util/function/Supplier;	f	plains
c	cqj	net/minecraft/world/level/PotentialCalculator
	m	(Lgw;D)V	a	addCharge
		p	1		pos
		p	2		mass
	m	(Lgw;D)D	b	getPotentialEnergyChange
		p	1		pos
		p	2		mass
	f	Ljava/util/List;	a	charges
c	cqj$a	net/minecraft/world/level/PotentialCalculator$PointCharge
	m	(Lgw;D)V	<init>	<init>
		p	1		pos
		p	2		mass
	m	(Lgw;)D	a	getPotentialChange
		p	1		pos
	f	Lgw;	a	pos
	f	D	b	charge
c	cqk	net/minecraft/world/level/ServerLevelAccessor
	m	()Lakq;	C	getLevel
	m	(Lbiq;)V	a_	addFreshEntityWithPassengers
		p	1		entity
c	cql	net/minecraft/world/level/SignalGetter
	m	(Lgw;)Z	B	hasNeighborSignal
		p	1		pos
	m	(Lgw;)I	C	getBestNeighborSignal
		p	1		pos
	m	(Lgw;Lha;)I	a	getDirectSignal
		p	1		pos
		p	2		direction
	m	(Lgw;Lha;Z)I	a	getControlInputSignal
		p	1		pos
		p	2		direction
		p	3		onlyFromGate
	m	(Lgw;Lha;)Z	b	hasSignal
		p	1		pos
		p	2		direction
	m	(Lgw;Lha;)I	c	getSignal
		p	1		pos
		p	2		direction
	m	(Lgw;)I	e_	getDirectSignalTo
		p	1		pos
	f	[Lha;	C	DIRECTIONS
c	cqm	net/minecraft/world/level/SpawnData
	m	()Lqw;	a	getEntityToSpawn
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Lcqm;)Ljava/util/Optional;	a	lambda$static$1
		p	0		entry
	m	()Ljava/util/Optional;	b	getCustomSpawnRules
	m	(Lcqm;)Lqw;	b	lambda$static$0
		p	0		entry
	m	()Lqw;	c	entityToSpawn
	m	()Ljava/util/Optional;	d	customSpawnRules
	f	Ljava/lang/String;	a	ENTITY_TAG
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lcom/mojang/serialization/Codec;	c	LIST_CODEC
	f	Lqw;	d	entityToSpawn
	f	Ljava/util/Optional;	e	customSpawnRules
c	cqm$a	net/minecraft/world/level/SpawnData$CustomSpawnRules
	m	()Larp;	a	blockLightLimit
	m	(Larp;)Lcom/mojang/serialization/DataResult;	a	checkLightBoundaries
		p	0		provider
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	(Lcqm$a;)Larp;	a	lambda$static$2
		p	0		rules
	m	(Ljava/lang/String;)Lcom/mojang/serialization/MapCodec;	a	lightLimit
		p	0		name
	m	()Larp;	b	skyLightLimit
	m	(Lcqm$a;)Larp;	b	lambda$static$1
		p	0		rules
	m	()Ljava/lang/String;	c	lambda$checkLightBoundaries$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Larp;	b	blockLightLimit
	f	Larp;	c	skyLightLimit
	f	Larp;	d	LIGHT_RANGE
c	cqn	net/minecraft/world/level/StructureManager
	m	(Lcpw;Ldlq;Ldvj;)V	<init>	<init>
		p	1		world
		p	2		options
		p	3		locator
	m	()Z	a	shouldGenerateStructures
	m	(Lakx;)Lcqn;	a	forWorldGenRegion
		p	1		region
	m	(Laqh;Lhe$c;)Ljava/lang/Boolean;	a	lambda$getStructureWithPieceAt$0
	m	(Lcpc;Ldvi;Z)Ldvk;	a	checkStructurePresence
		p	1		chunkPos
		p	2		structure
		p	3		skipExistingChunk
	m	(Lcpc;Ljava/util/function/Predicate;)Ljava/util/List;	a	startsForStructure
		p	1		pos
		p	2		predicate
	m	(Ldvi;Lit/unimi/dsi/fastutil/longs/LongSet;Ljava/util/function/Consumer;)V	a	fillStartsForStructure
		p	1		structure
		p	2		structureStartPositions
		p	3		consumer
	m	(Ldvq;)V	a	addReference
		p	1		structureStart
	m	(Lgw;)Z	a	hasAnyStructureAt
		p	1		pos
	m	(Lgw;Laev;)Ldvq;	a	getStructureWithPieceAt
		p	1		pos
		p	2		structure
	m	(Lgw;Laqh;)Ldvq;	a	getStructureWithPieceAt
		p	1		pos
		p	2		structureTag
	m	(Lgw;Ldvi;)Ldvq;	a	getStructureAt
		p	1		pos
		p	2		structure
	m	(Lgw;Ldvq;)Z	a	structureHasPieceAt
		p	1		pos
		p	2		structureStart
	m	(Lhq;Laqh;Ldvi;)Z	a	lambda$getStructureWithPieceAt$1
		p	2		structure
	m	(Lhw;Ldvi;)Ljava/util/List;	a	startsForStructure
		p	1		sectionPos
		p	2		structure
	m	(Lhw;Ldvi;JLdic;)V	a	addReferenceForStructure
		p	1		pos
		p	2		structure
		p	3		reference
		p	5		holder
	m	(Lhw;Ldvi;Ldic;)Ldvq;	a	getStartForStructure
		p	1		pos
		p	2		structure
		p	3		holder
	m	(Lhw;Ldvi;Ldvq;Ldic;)V	a	setStartForStructure
		p	1		pos
		p	2		structure
		p	3		structureStart
		p	4		holder
	m	()Lhr;	b	registryAccess
	m	(Lgw;)Ljava/util/Map;	b	getAllStructuresAt
		p	1		pos
	m	(Lgw;Ldvi;)Ldvq;	b	getStructureWithPieceAt
		p	1		pos
		p	2		structure
	f	Lcpw;	a	level
	f	Ldlq;	b	worldOptions
	f	Ldvj;	c	structureCheck
c	cqo	net/minecraft/world/level/WorldDataConfiguration
	m	()Lcpj;	a	dataPacks
	m	(Lcec;)Lcqo;	a	expandFeatures
		p	1		features
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Lcec;	b	enabledFeatures
	f	Ljava/lang/String;	a	ENABLED_FEATURES_ID
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lcqo;	c	DEFAULT
	f	Lcpj;	d	dataPacks
	f	Lcec;	e	enabledFeatures
c	cqp	net/minecraft/world/level/WorldGenLevel
	m	()J	A	getSeed
	m	(Ljava/util/function/Supplier;)V	a	setCurrentlyGenerating
		p	1		structureName
	m	(Lgw;)Z	f_	ensureCanWrite
		p	1		pos
c	cqq	net/minecraft/world/level/biome/AmbientAdditionsSettings
	m	(Lhe;D)V	<init>	<init>
		p	1		sound
		p	2		chance
	m	()Lhe;	a	getSoundEvent
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Lcqq;)Ljava/lang/Double;	a	lambda$static$1
		p	0		sound
	m	()D	b	getTickChance
	m	(Lcqq;)Lhe;	b	lambda$static$0
		p	0		sound
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lhe;	b	soundEvent
	f	D	c	tickChance
c	cqr	net/minecraft/world/level/biome/AmbientMoodSettings
	m	(Lhe;IID)V	<init>	<init>
		p	1		sound
		p	2		cultivationTicks
		p	3		spawnRange
		p	4		extraDistance
	m	()Lhe;	a	getSoundEvent
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
		p	0		instance
	m	(Lcqr;)Ljava/lang/Double;	a	lambda$static$3
		p	0		sound
	m	()I	b	getTickDelay
	m	(Lcqr;)Ljava/lang/Integer;	b	lambda$static$2
		p	0		sound
	m	()I	c	getBlockSearchExtent
	m	(Lcqr;)Ljava/lang/Integer;	c	lambda$static$1
		p	0		sound
	m	()D	d	getSoundPositionOffset
	m	(Lcqr;)Lhe;	d	lambda$static$0
		p	0		sound
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcqr;	b	LEGACY_CAVE_SETTINGS
	f	Lhe;	c	soundEvent
	f	I	d	tickDelay
	f	I	e	blockSearchExtent
	f	D	f	soundPositionOffset
c	cqs	net/minecraft/world/level/biome/AmbientParticleSettings
	m	(Lit;F)V	<init>	<init>
		p	1		particle
		p	2		probability
	m	()Lit;	a	getOptions
	m	(Lasc;)Z	a	canSpawn
		p	1		random
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Lcqs;)Ljava/lang/Float;	a	lambda$static$1
		p	0		config
	m	(Lcqs;)Lit;	b	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lit;	b	options
	f	F	c	probability
c	cqt	net/minecraft/world/level/biome/Biome
	m	(Lcqt$b;Lcqz;Lcqu;Lcrf;)V	<init>	<init>
		p	1		weather
		p	2		effects
		p	3		generationSettings
		p	4		spawnSettings
	m	()I	a	getSkyColor
	m	(DD)I	a	getGrassColor
		p	1		x
		p	3		z
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$8
		p	0		instance
	m	(Lcpy;Lgw;)Z	a	shouldFreeze
		p	1		world
		p	2		blockPos
	m	(Lcpy;Lgw;Z)Z	a	shouldFreeze
		p	1		world
		p	2		pos
		p	3		doWaterCheck
	m	(Lcqt$b;Lcqz;)Lcqt;	a	lambda$static$7
		p	0		weather
		p	1		effects
	m	(Lcqt;)Lcqz;	a	lambda$static$6
		p	0		biome
	m	(Lgw;)Lcqt$c;	a	getPrecipitationAt
		p	1		pos
	m	()Lcrf;	b	getMobSettings
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$4
		p	0		instance
	m	(Lcpy;Lgw;)Z	b	shouldSnow
		p	1		world
		p	2		pos
	m	(Lcqt;)Lcqt$b;	b	lambda$static$5
		p	0		biome
	m	(Lgw;)Z	b	coldEnoughToSnow
		p	1		pos
	m	()Z	c	hasPrecipitation
	m	(Lcqt;)Lcrf;	c	lambda$static$3
		p	0		biome
	m	(Lgw;)Z	c	warmEnoughToRain
		p	1		pos
	m	()Lcqu;	d	getGenerationSettings
	m	(Lcqt;)Lcqu;	d	lambda$static$2
		p	0		biome
	m	(Lgw;)Z	d	shouldMeltFrozenOceanIcebergSlightly
		p	1		pos
	m	()I	e	getFogColor
	m	(Lcqt;)Lcqz;	e	lambda$static$1
		p	0		biome
	m	(Lgw;)F	e	getHeightAdjustedTemperature
		p	1		pos
	m	()I	f	getFoliageColor
	m	(Lcqt;)Lcqt$b;	f	lambda$static$0
		p	0		biome
	m	(Lgw;)F	f	getTemperature
		p	1		blockPos
	m	()F	g	getBaseTemperature
	m	()Lcqz;	h	getSpecialEffects
	m	()I	i	getWaterColor
	m	()I	j	getWaterFogColor
	m	()Ljava/util/Optional;	k	getAmbientParticle
	m	()Ljava/util/Optional;	l	getAmbientLoop
	m	()Ljava/util/Optional;	m	getAmbientMood
	m	()Ljava/util/Optional;	n	getAmbientAdditions
	m	()Ljava/util/Optional;	o	getBackgroundMusic
	m	()I	p	getGrassColorFromTexture
	m	()I	q	getFoliageColorFromTexture
	m	()Lit/unimi/dsi/fastutil/longs/Long2FloatLinkedOpenHashMap;	r	lambda$new$10
	m	()Lit/unimi/dsi/fastutil/longs/Long2FloatLinkedOpenHashMap;	s	lambda$new$9
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	b	NETWORK_CODEC
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Lcom/mojang/serialization/Codec;	d	LIST_CODEC
	f	Ldzr;	e	BIOME_INFO_NOISE
	f	Ldzr;	f	TEMPERATURE_NOISE
	f	Ldzr;	g	FROZEN_TEMPERATURE_NOISE
	f	I	h	TEMPERATURE_CACHE_SIZE
	f	Lcqt$b;	i	climateSettings
	f	Lcqu;	j	generationSettings
	f	Lcrf;	k	mobSettings
	f	Lcqz;	l	specialEffects
	f	Ljava/lang/ThreadLocal;	m	temperatureCache
c	cqt$1	net/minecraft/world/level/biome/Biome$1
	f	Lcqt;	a	this$0
c	cqt$a	net/minecraft/world/level/biome/Biome$BiomeBuilder
	m	()Lcqt;	a	build
	m	(F)Lcqt$a;	a	temperature
		p	1		temperature
	m	(Lcqt$d;)Lcqt$a;	a	temperatureAdjustment
		p	1		temperatureModifier
	m	(Lcqu;)Lcqt$a;	a	generationSettings
		p	1		generationSettings
	m	(Lcqz;)Lcqt$a;	a	specialEffects
		p	1		effects
	m	(Lcrf;)Lcqt$a;	a	mobSpawnSettings
		p	1		spawnSettings
	m	(Z)Lcqt$a;	a	hasPrecipitation
		p	1		precipitation
	m	(F)Lcqt$a;	b	downfall
		p	1		downfall
	f	Z	a	hasPrecipitation
	f	Ljava/lang/Float;	b	temperature
	f	Lcqt$d;	c	temperatureModifier
	f	Ljava/lang/Float;	d	downfall
	f	Lcqz;	e	specialEffects
	f	Lcrf;	f	mobSpawnSettings
	f	Lcqu;	g	generationSettings
c	cqt$b	net/minecraft/world/level/biome/Biome$ClimateSettings
	m	(ZFLcqt$d;F)V	<init>	<init>
		p	2		temperature
		p	3		temperatureModifier
		p	4		downfall
	m	()Z	a	hasPrecipitation
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
		p	0		instance
	m	(Lcqt$b;)Ljava/lang/Float;	a	lambda$static$3
		p	0		weather
	m	()F	b	temperature
	m	(Lcqt$b;)Lcqt$d;	b	lambda$static$2
		p	0		weather
	m	()Lcqt$d;	c	temperatureModifier
	m	(Lcqt$b;)Ljava/lang/Float;	c	lambda$static$1
		p	0		weather
	m	()F	d	downfall
	m	(Lcqt$b;)Ljava/lang/Boolean;	d	lambda$static$0
		p	0		weather
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Z	b	hasPrecipitation
	f	F	c	temperature
	f	Lcqt$d;	d	temperatureModifier
	f	F	e	downfall
c	cqt$c	net/minecraft/world/level/biome/Biome$Precipitation
	m	()[Lcqt$c;	a	$values
	f	Lcqt$c;	a	NONE
	f	Lcqt$c;	b	RAIN
	f	Lcqt$c;	c	SNOW
	f	[Lcqt$c;	d	$VALUES
c	cqt$d	net/minecraft/world/level/biome/Biome$TemperatureModifier
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()Ljava/lang/String;	a	getName
	m	(Lgw;F)F	a	modifyTemperature
		p	1		pos
		p	2		temperature
	m	()[Lcqt$d;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lcqt$d;	a	NONE
	f	Lcqt$d;	b	FROZEN
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Ljava/lang/String;	d	name
	f	[Lcqt$d;	e	$VALUES
c	cqt$d$1	net/minecraft/world/level/biome/Biome$TemperatureModifier$1
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	(Lgw;F)F	a	modifyTemperature
		p	1		pos
		p	2		temperature
c	cqt$d$2	net/minecraft/world/level/biome/Biome$TemperatureModifier$2
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	(Lgw;F)F	a	modifyTemperature
		p	1		pos
		p	2		temperature
c	cqu	net/minecraft/world/level/biome/BiomeGenerationSettings
	m	(Ljava/util/Map;Ljava/util/List;)V	<init>	<init>
		p	1		carvers
		p	2		features
	m	()Ljava/util/List;	a	getFlowerFeatures
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Lcqu;)Ljava/util/List;	a	lambda$static$1
		p	0		generationSettings
	m	(Ldko$a;)Ljava/lang/Iterable;	a	getCarvers
		p	1		carverStep
	m	(Ldnj;)Z	a	lambda$new$3
		p	0		feature
	m	(Ldum;)Z	a	hasFeature
		p	1		feature
	m	(Ljava/util/List;)Ljava/util/Set;	a	lambda$new$5
	m	()Ljava/util/List;	b	features
	m	(Lcqu;)Ljava/util/Map;	b	lambda$static$0
		p	0		generationSettings
	m	(Ljava/util/List;)Ljava/util/List;	b	lambda$new$4
	f	Lcqu;	a	EMPTY
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	Ljava/util/Map;	d	carvers
	f	Ljava/util/List;	e	features
	f	Ljava/util/function/Supplier;	f	flowerFeatures
	f	Ljava/util/function/Supplier;	g	featureSet
c	cqu$a	net/minecraft/world/level/biome/BiomeGenerationSettings$Builder
	m	(Lhf;Lhf;)V	<init>	<init>
		p	1		placedFeatureLookup
		p	2		configuredCarverLookup
	m	(Ldko$a;Laev;)Lcqu$a;	a	addCarver
		p	1		carverStep
		p	2		carverKey
	m	(Ldko$b;Laev;)Lcqu$a;	a	addFeature
		p	1		featureStep
		p	2		featureKey
	f	Lhf;	a	placedFeatures
	f	Lhf;	b	worldCarvers
c	cqu$b	net/minecraft/world/level/biome/BiomeGenerationSettings$PlainBuilder
	m	()Lcqu;	a	build
	m	(I)V	a	addFeatureStepsUpTo
		p	1		size
	m	(ILhe;)Lcqu$b;	a	addFeature
		p	1		ordinal
		p	2		featureEntry
	m	(Ldko$a;)Ljava/util/List;	a	lambda$addCarver$0
		p	0		step
	m	(Ldko$a;Lhe;)Lcqu$b;	a	addCarver
		p	1		carverStep
		p	2		carverEntry
	m	(Ldko$b;Lhe;)Lcqu$b;	a	addFeature
		p	1		featureStep
		p	2		featureEntry
	m	(Ljava/util/Map$Entry;)Lhi;	a	lambda$build$1
	f	Ljava/util/Map;	a	carvers
	f	Ljava/util/List;	b	features
c	cqv	net/minecraft/world/level/biome/BiomeManager
	m	(Lcqv$a;J)V	<init>	<init>
		p	1		storage
		p	2		seed
	m	(DDD)Lhe;	a	getNoiseBiomeAtPosition
		p	1		x
		p	3		y
		p	5		z
	m	(III)Lhe;	a	getNoiseBiomeAtQuart
		p	1		biomeX
		p	2		biomeY
		p	3		biomeZ
	m	(J)J	a	obfuscateSeed
		p	0		seed
	m	(JIIIDDD)D	a	getFiddledDistance
	m	(Lcqv$a;)Lcqv;	a	withDifferentSource
		p	1		storage
	m	(Lgw;)Lhe;	a	getBiome
		p	1		pos
	m	(J)D	b	getFiddle
	m	(Lgw;)Lhe;	b	getNoiseBiomeAtPosition
		p	1		pos
	f	I	a	CHUNK_CENTER_QUART
	f	I	b	ZOOM_BITS
	f	I	c	ZOOM
	f	I	d	ZOOM_MASK
	f	Lcqv$a;	e	noiseBiomeSource
	f	J	f	biomeZoomSeed
c	cqv$a	net/minecraft/world/level/biome/BiomeManager$NoiseBiomeSource
	m	(III)Lhe;	getNoiseBiome	getNoiseBiome
		p	1		biomeX
		p	2		biomeY
		p	3		biomeZ
c	cqw	net/minecraft/world/level/biome/BiomeResolver
	m	(IIILcrc$f;)Lhe;	getNoiseBiome	getNoiseBiome
		p	1		x
		p	2		y
		p	3		z
		p	4		noise
c	cqx	net/minecraft/world/level/biome/BiomeSource
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(IIIIILjava/util/function/Predicate;Lasc;ZLcrc$f;)Lcom/mojang/datafixers/util/Pair;	a	findBiomeHorizontal
		p	1		x
		p	2		y
		p	3		z
		p	4		radius
		p	5		blockCheckInterval
		p	6		predicate
		p	7		random
		p	9		noiseSampler
	m	(IIIILcrc$f;)Ljava/util/Set;	a	getBiomesWithin
		p	1		x
		p	2		y
		p	3		z
		p	4		radius
		p	5		sampler
	m	(IIIILjava/util/function/Predicate;Lasc;Lcrc$f;)Lcom/mojang/datafixers/util/Pair;	a	findBiomeHorizontal
		p	1		x
		p	2		y
		p	3		z
		p	4		radius
		p	5		predicate
		p	6		random
		p	7		noiseSampler
	m	(Lgw;IIILjava/util/function/Predicate;Lcrc$f;Lcpy;)Lcom/mojang/datafixers/util/Pair;	a	findClosestBiome3d
		p	1		origin
		p	2		radius
		p	3		horizontalBlockCheckInterval
		p	4		verticalBlockCheckInterval
		p	5		predicate
		p	6		noiseSampler
		p	7		world
	m	(Ljava/util/List;Lgw;Lcrc$f;)V	a	addDebugInfo
		p	1		info
		p	2		pos
		p	3		noiseSampler
	m	()Ljava/util/stream/Stream;	b	collectPossibleBiomes
	m	()Ljava/util/Set;	c	possibleBiomes
	m	()Ljava/util/Set;	d	lambda$new$0
	m	(IIILcrc$f;)Lhe;	getNoiseBiome	getNoiseBiome
		p	1		x
		p	2		y
		p	3		z
		p	4		noise
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/function/Supplier;	b	possibleBiomes
c	cqy	net/minecraft/world/level/biome/BiomeSources
	m	(Lhq;)Lcom/mojang/serialization/Codec;	a	bootstrap
		p	0		registry
c	cqz	net/minecraft/world/level/biome/BiomeSpecialEffects
	m	(IIIILjava/util/Optional;Ljava/util/Optional;Lcqz$b;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
		p	1		fogColor
		p	2		waterColor
		p	3		waterFogColor
		p	4		skyColor
		p	5		foliageColor
		p	6		grassColor
		p	7		grassColorModifier
		p	8		particleConfig
		p	9		loopSound
		p	10		moodSound
		p	11		additionsSound
		p	12		music
	m	()I	a	getFogColor
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$12
		p	0		instance
	m	(Lcqz;)Ljava/util/Optional;	a	lambda$static$11
		p	0		effects
	m	()I	b	getWaterColor
	m	(Lcqz;)Ljava/util/Optional;	b	lambda$static$10
		p	0		effects
	m	()I	c	getWaterFogColor
	m	(Lcqz;)Ljava/util/Optional;	c	lambda$static$9
		p	0		effects
	m	()I	d	getSkyColor
	m	(Lcqz;)Ljava/util/Optional;	d	lambda$static$8
		p	0		effects
	m	()Ljava/util/Optional;	e	getFoliageColorOverride
	m	(Lcqz;)Ljava/util/Optional;	e	lambda$static$7
		p	0		effects
	m	()Ljava/util/Optional;	f	getGrassColorOverride
	m	(Lcqz;)Lcqz$b;	f	lambda$static$6
		p	0		effects
	m	()Lcqz$b;	g	getGrassColorModifier
	m	(Lcqz;)Ljava/util/Optional;	g	lambda$static$5
		p	0		effects
	m	()Ljava/util/Optional;	h	getAmbientParticleSettings
	m	(Lcqz;)Ljava/util/Optional;	h	lambda$static$4
		p	0		effects
	m	()Ljava/util/Optional;	i	getAmbientLoopSoundEvent
	m	(Lcqz;)Ljava/lang/Integer;	i	lambda$static$3
		p	0		effects
	m	()Ljava/util/Optional;	j	getAmbientMoodSettings
	m	(Lcqz;)Ljava/lang/Integer;	j	lambda$static$2
		p	0		effects
	m	()Ljava/util/Optional;	k	getAmbientAdditionsSettings
	m	(Lcqz;)Ljava/lang/Integer;	k	lambda$static$1
		p	0		effects
	m	()Ljava/util/Optional;	l	getBackgroundMusic
	m	(Lcqz;)Ljava/lang/Integer;	l	lambda$static$0
		p	0		effects
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	fogColor
	f	I	c	waterColor
	f	I	d	waterFogColor
	f	I	e	skyColor
	f	Ljava/util/Optional;	f	foliageColorOverride
	f	Ljava/util/Optional;	g	grassColorOverride
	f	Lcqz$b;	h	grassColorModifier
	f	Ljava/util/Optional;	i	ambientParticleSettings
	f	Ljava/util/Optional;	j	ambientLoopSoundEvent
	f	Ljava/util/Optional;	k	ambientMoodSettings
	f	Ljava/util/Optional;	l	ambientAdditionsSettings
	f	Ljava/util/Optional;	m	backgroundMusic
c	cqz$a	net/minecraft/world/level/biome/BiomeSpecialEffects$Builder
	m	()Lcqz;	a	build
	m	(I)Lcqz$a;	a	fogColor
		p	1		fogColor
	m	(Lapa;)Lcqz$a;	a	backgroundMusic
		p	1		music
	m	(Lcqq;)Lcqz$a;	a	ambientAdditionsSound
		p	1		additionsSound
	m	(Lcqr;)Lcqz$a;	a	ambientMoodSound
		p	1		moodSound
	m	(Lcqs;)Lcqz$a;	a	ambientParticle
		p	1		particleConfig
	m	(Lcqz$b;)Lcqz$a;	a	grassColorModifier
		p	1		grassColorModifier
	m	(Lhe;)Lcqz$a;	a	ambientLoopSound
		p	1		loopSound
	m	()Ljava/lang/IllegalStateException;	b	lambda$build$3
	m	(I)Lcqz$a;	b	waterColor
		p	1		waterColor
	m	()Ljava/lang/IllegalStateException;	c	lambda$build$2
	m	(I)Lcqz$a;	c	waterFogColor
		p	1		waterFogColor
	m	()Ljava/lang/IllegalStateException;	d	lambda$build$1
	m	(I)Lcqz$a;	d	skyColor
		p	1		skyColor
	m	()Ljava/lang/IllegalStateException;	e	lambda$build$0
	m	(I)Lcqz$a;	e	foliageColorOverride
		p	1		foliageColor
	m	(I)Lcqz$a;	f	grassColorOverride
		p	1		grassColor
	f	Ljava/util/OptionalInt;	a	fogColor
	f	Ljava/util/OptionalInt;	b	waterColor
	f	Ljava/util/OptionalInt;	c	waterFogColor
	f	Ljava/util/OptionalInt;	d	skyColor
	f	Ljava/util/Optional;	e	foliageColorOverride
	f	Ljava/util/Optional;	f	grassColorOverride
	f	Lcqz$b;	g	grassColorModifier
	f	Ljava/util/Optional;	h	ambientParticle
	f	Ljava/util/Optional;	i	ambientLoopSoundEvent
	f	Ljava/util/Optional;	j	ambientMoodSettings
	f	Ljava/util/Optional;	k	ambientAdditionsSettings
	f	Ljava/util/Optional;	l	backgroundMusic
c	cqz$b	net/minecraft/world/level/biome/BiomeSpecialEffects$GrassColorModifier
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()Ljava/lang/String;	a	getName
	m	(DDI)I	a	modifyColor
		p	1		x
		p	3		z
		p	5		color
	m	()[Lcqz$b;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lcqz$b;	a	NONE
	f	Lcqz$b;	b	DARK_FOREST
	f	Lcqz$b;	c	SWAMP
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	Ljava/lang/String;	e	name
	f	[Lcqz$b;	f	$VALUES
c	cqz$b$1	net/minecraft/world/level/biome/BiomeSpecialEffects$GrassColorModifier$1
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	(DDI)I	a	modifyColor
		p	1		x
		p	3		z
		p	5		color
c	cqz$b$2	net/minecraft/world/level/biome/BiomeSpecialEffects$GrassColorModifier$2
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	(DDI)I	a	modifyColor
		p	1		x
		p	3		z
		p	5		color
c	cqz$b$3	net/minecraft/world/level/biome/BiomeSpecialEffects$GrassColorModifier$3
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	(DDI)I	a	modifyColor
		p	1		x
		p	3		z
		p	5		color
c	cra	net/minecraft/world/level/biome/Biomes
	m	(Ljava/lang/String;)Laev;	a	register
		p	0		name
	f	Laev;	A	BADLANDS
	f	Laev;	B	ERODED_BADLANDS
	f	Laev;	C	WOODED_BADLANDS
	f	Laev;	D	MEADOW
	f	Laev;	E	CHERRY_GROVE
	f	Laev;	F	GROVE
	f	Laev;	G	SNOWY_SLOPES
	f	Laev;	H	FROZEN_PEAKS
	f	Laev;	I	JAGGED_PEAKS
	f	Laev;	J	STONY_PEAKS
	f	Laev;	K	RIVER
	f	Laev;	L	FROZEN_RIVER
	f	Laev;	M	BEACH
	f	Laev;	N	SNOWY_BEACH
	f	Laev;	O	STONY_SHORE
	f	Laev;	P	WARM_OCEAN
	f	Laev;	Q	LUKEWARM_OCEAN
	f	Laev;	R	DEEP_LUKEWARM_OCEAN
	f	Laev;	S	OCEAN
	f	Laev;	T	DEEP_OCEAN
	f	Laev;	U	COLD_OCEAN
	f	Laev;	V	DEEP_COLD_OCEAN
	f	Laev;	W	FROZEN_OCEAN
	f	Laev;	X	DEEP_FROZEN_OCEAN
	f	Laev;	Y	MUSHROOM_FIELDS
	f	Laev;	Z	DRIPSTONE_CAVES
	f	Laev;	a	THE_VOID
	f	Laev;	aa	LUSH_CAVES
	f	Laev;	ab	DEEP_DARK
	f	Laev;	ac	NETHER_WASTES
	f	Laev;	ad	WARPED_FOREST
	f	Laev;	ae	CRIMSON_FOREST
	f	Laev;	af	SOUL_SAND_VALLEY
	f	Laev;	ag	BASALT_DELTAS
	f	Laev;	ah	THE_END
	f	Laev;	ai	END_HIGHLANDS
	f	Laev;	aj	END_MIDLANDS
	f	Laev;	ak	SMALL_END_ISLANDS
	f	Laev;	al	END_BARRENS
	f	Laev;	b	PLAINS
	f	Laev;	c	SUNFLOWER_PLAINS
	f	Laev;	d	SNOWY_PLAINS
	f	Laev;	e	ICE_SPIKES
	f	Laev;	f	DESERT
	f	Laev;	g	SWAMP
	f	Laev;	h	MANGROVE_SWAMP
	f	Laev;	i	FOREST
	f	Laev;	j	FLOWER_FOREST
	f	Laev;	k	BIRCH_FOREST
	f	Laev;	l	DARK_FOREST
	f	Laev;	m	OLD_GROWTH_BIRCH_FOREST
	f	Laev;	n	OLD_GROWTH_PINE_TAIGA
	f	Laev;	o	OLD_GROWTH_SPRUCE_TAIGA
	f	Laev;	p	TAIGA
	f	Laev;	q	SNOWY_TAIGA
	f	Laev;	r	SAVANNA
	f	Laev;	s	SAVANNA_PLATEAU
	f	Laev;	t	WINDSWEPT_HILLS
	f	Laev;	u	WINDSWEPT_GRAVELLY_HILLS
	f	Laev;	v	WINDSWEPT_FOREST
	f	Laev;	w	WINDSWEPT_SAVANNA
	f	Laev;	x	JUNGLE
	f	Laev;	y	SPARSE_JUNGLE
	f	Laev;	z	BAMBOO_JUNGLE
c	crb	net/minecraft/world/level/biome/CheckerboardColumnBiomeSource
	m	(Lhi;I)V	<init>	<init>
		p	1		biomes
		p	2		size
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Lcrb;)Ljava/lang/Integer;	a	lambda$static$1
		p	0		biomeSource
	m	()Ljava/util/stream/Stream;	b	collectPossibleBiomes
	m	(Lcrb;)Lhi;	b	lambda$static$0
		p	0		biomeSource
	m	(IIILcrc$f;)Lhe;	getNoiseBiome	getNoiseBiome
		p	1		x
		p	2		y
		p	3		z
		p	4		noise
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lhi;	c	allowedBiomes
	f	I	d	bitShift
	f	I	e	size
c	crc	net/minecraft/world/level/biome/Climate
	m	()Lcrc$f;	a	empty
	m	(F)J	a	quantizeCoord
		p	0		value
	m	(FFFFFF)Lcrc$h;	a	target
		p	0		temperatureNoise
		p	1		humidityNoise
		p	2		continentalnessNoise
		p	3		erosionNoise
		p	4		depth
		p	5		weirdnessNoise
	m	(FFFFFFF)Lcrc$d;	a	parameters
		p	0		temperature
		p	1		humidity
		p	2		continentalness
		p	3		erosion
		p	4		depth
		p	5		weirdness
		p	6		offset
	m	(J)F	a	unquantizeCoord
		p	0		value
	m	(Lcrc$b;Lcrc$b;Lcrc$b;Lcrc$b;Lcrc$b;Lcrc$b;F)Lcrc$d;	a	parameters
		p	0		temperature
		p	1		humidity
		p	2		continentalness
		p	3		erosion
		p	4		depth
		p	5		weirdness
		p	6		offset
	m	(Ljava/util/List;Lcrc$f;)Lgw;	a	findSpawnPosition
		p	0		noises
		p	1		sampler
	f	I	a	PARAMETER_COUNT
	f	Z	b	DEBUG_SLOW_BIOME_SEARCH
	f	F	c	QUANTIZATION_FACTOR
c	crc$a	net/minecraft/world/level/biome/Climate$DistanceMetric
	m	(Lcrc$e$b;[J)J	distance	distance
		p	1		node
		p	2		otherParameters
c	crc$b	net/minecraft/world/level/biome/Climate$Parameter
	m	()J	a	min
	m	(F)Lcrc$b;	a	point
		p	0		point
	m	(FF)Lcrc$b;	a	span
		p	0		min
		p	1		max
	m	(J)J	a	distance
		p	1		noise
	m	(Lcrc$b;)J	a	distance
		p	1		other
	m	(Lcrc$b;Lcrc$b;)Lcrc$b;	a	span
		p	0		min
		p	1		max
	m	(Ljava/lang/Float;Ljava/lang/Float;)Lcom/mojang/serialization/DataResult;	a	lambda$static$1
		p	0		min
		p	1		max
	m	()J	b	max
	m	(Lcrc$b;)Lcrc$b;	b	span
		p	1		other
	m	(Ljava/lang/Float;Ljava/lang/Float;)Ljava/lang/String;	b	lambda$static$0
	m	(Lcrc$b;)Ljava/lang/Float;	c	lambda$static$3
	m	(Lcrc$b;)Ljava/lang/Float;	d	lambda$static$2
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	J	b	min
	f	J	c	max
c	crc$c	net/minecraft/world/level/biome/Climate$ParameterList
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		entries
	m	()Ljava/util/List;	a	values
	m	(Lcom/mojang/serialization/MapCodec;)Lcom/mojang/serialization/Codec;	a	codec
		p	0		entryCodec
	m	(Lcom/mojang/serialization/MapCodec;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$codec$0
		p	1		instance
	m	(Lcrc$h;)Ljava/lang/Object;	a	findValue
		p	1		point
	m	(Lcrc$h;Lcrc$a;)Ljava/lang/Object;	a	findValueIndex
		p	1		point
		p	2		distanceFunction
	m	(Lcrc$h;)Ljava/lang/Object;	b	findValueBruteForce
		p	1		point
	m	(Lcrc$h;)Ljava/lang/Object;	c	findValueIndex
		p	1		point
	f	Ljava/util/List;	a	values
	f	Lcrc$e;	b	index
c	crc$d	net/minecraft/world/level/biome/Climate$ParameterPoint
	m	(Lcrc$b;Lcrc$b;Lcrc$b;Lcrc$b;Lcrc$b;Lcrc$b;J)V	<init>	<init>
		p	1		temperature
		p	2		humidity
		p	3		continentalness
		p	4		erosion
		p	5		depth
		p	6		weirdness
	m	()Ljava/util/List;	a	parameterSpace
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$7
		p	0		instance
	m	(Lcrc$d;)Ljava/lang/Long;	a	lambda$static$6
	m	(Lcrc$h;)J	a	fitness
		p	1		point
	m	()Lcrc$b;	b	temperature
	m	(Lcrc$d;)Lcrc$b;	b	lambda$static$5
	m	()Lcrc$b;	c	humidity
	m	(Lcrc$d;)Lcrc$b;	c	lambda$static$4
	m	()Lcrc$b;	d	continentalness
	m	(Lcrc$d;)Lcrc$b;	d	lambda$static$3
	m	()Lcrc$b;	e	erosion
	m	(Lcrc$d;)Lcrc$b;	e	lambda$static$2
	m	()Lcrc$b;	f	depth
	m	(Lcrc$d;)Lcrc$b;	f	lambda$static$1
	m	()Lcrc$b;	g	weirdness
	m	(Lcrc$d;)Lcrc$b;	g	lambda$static$0
	m	()J	h	offset
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcrc$b;	b	temperature
	f	Lcrc$b;	c	humidity
	f	Lcrc$b;	d	continentalness
	f	Lcrc$b;	e	erosion
	f	Lcrc$b;	f	depth
	f	Lcrc$b;	g	weirdness
	f	J	h	offset
c	crc$e	net/minecraft/world/level/biome/Climate$RTree
	m	(Lcrc$e$b;)V	<init>	<init>
		p	1		firstNode
	m	(ILcrc$e$b;)J	a	lambda$build$1
		p	1		node
	m	(ILcrc$e$c;)Lcrc$e$b;	a	lambda$build$2
		p	1		node
	m	(ILjava/util/List;)Lcrc$e$b;	a	build
		p	0		parameterNumber
		p	1		subTree
	m	(IZ)Ljava/util/Comparator;	a	comparator
		p	0		currentParameter
		p	1		abs
	m	(IZLcrc$e$b;)J	a	lambda$comparator$3
	m	(Lcom/mojang/datafixers/util/Pair;)Lcrc$e$a;	a	lambda$create$0
		p	0		entry
	m	(Lcrc$h;Lcrc$a;)Ljava/lang/Object;	a	search
		p	1		point
		p	2		distanceFunction
	m	(Ljava/util/List;)Lcrc$e;	a	create
		p	0		entries
	m	(Ljava/util/List;IIZ)V	a	sort
		p	0		subTree
		p	1		parameterNumber
		p	2		currentParameter
		p	3		abs
	m	([Lcrc$b;)J	a	cost
		p	0		parameters
	m	(Ljava/util/List;)Ljava/util/List;	b	bucketize
		p	0		nodes
	m	(Ljava/util/List;)Ljava/util/List;	c	buildParameterSpace
		p	0		subTree
	f	I	a	CHILDREN_PER_NODE
	f	Lcrc$e$b;	b	root
	f	Ljava/lang/ThreadLocal;	c	lastResult
c	crc$e$a	net/minecraft/world/level/biome/Climate$RTree$Leaf
	m	(Lcrc$d;Ljava/lang/Object;)V	<init>	<init>
		p	1		parameters
		p	2		value
	m	([JLcrc$e$a;Lcrc$a;)Lcrc$e$a;	a	search
		p	1		otherParameters
		p	2		alternative
		p	3		distanceFunction
	f	Ljava/lang/Object;	b	value
c	crc$e$b	net/minecraft/world/level/biome/Climate$RTree$Node
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		parameters
	m	([J)J	a	distance
		p	1		otherParameters
	m	([JLcrc$e$a;Lcrc$a;)Lcrc$e$a;	a	search
		p	1		otherParameters
		p	2		alternative
		p	3		distanceFunction
	f	[Lcrc$b;	a	parameterSpace
c	crc$e$c	net/minecraft/world/level/biome/Climate$RTree$SubTree
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		subTree
	m	(Ljava/util/List;Ljava/util/List;)V	<init>	<init>
		p	1		parameters
		p	2		subTree
	m	([JLcrc$e$a;Lcrc$a;)Lcrc$e$a;	a	search
		p	1		otherParameters
		p	2		alternative
		p	3		distanceFunction
	f	[Lcrc$e$b;	b	children
c	crc$f	net/minecraft/world/level/biome/Climate$Sampler
	m	()Lgw;	a	findSpawnPosition
	m	(III)Lcrc$h;	a	sample
		p	1		x
		p	2		y
		p	3		z
	m	()Ldkl;	b	temperature
	m	()Ldkl;	c	humidity
	m	()Ldkl;	d	continentalness
	m	()Ldkl;	e	erosion
	m	()Ldkl;	f	depth
	m	()Ldkl;	g	weirdness
	m	()Ljava/util/List;	h	spawnTarget
	f	Ldkl;	a	temperature
	f	Ldkl;	b	humidity
	f	Ldkl;	c	continentalness
	f	Ldkl;	d	erosion
	f	Ldkl;	e	depth
	f	Ldkl;	f	weirdness
	f	Ljava/util/List;	g	spawnTarget
c	crc$g	net/minecraft/world/level/biome/Climate$SpawnFinder
	m	(Ljava/util/List;Lcrc$f;)V	<init>	<init>
		p	1		noises
		p	2		sampler
	m	(Ljava/util/List;Lcrc$f;FF)V	a	radialSearch
		p	1		noises
		p	2		sampler
		p	3		maxDistance
		p	4		step
	m	(Ljava/util/List;Lcrc$f;II)Lcrc$g$a;	a	getSpawnPositionAndFitness
		p	0		noises
		p	1		sampler
		p	2		x
		p	3		z
	f	Lcrc$g$a;	a	result
c	crc$g$a	net/minecraft/world/level/biome/Climate$SpawnFinder$Result
	m	()Lgw;	a	location
	m	()J	b	fitness
	f	Lgw;	a	location
	f	J	b	fitness
c	crc$h	net/minecraft/world/level/biome/Climate$TargetPoint
	m	()[J	a	toParameterArray
	m	()J	b	temperature
	m	()J	c	humidity
	m	()J	d	continentalness
	m	()J	e	erosion
	m	()J	f	depth
	m	()J	g	weirdness
	f	J	a	temperature
	f	J	b	humidity
	f	J	c	continentalness
	f	J	d	erosion
	f	J	e	depth
	f	J	f	weirdness
c	crd	net/minecraft/world/level/biome/FeatureSorter
	m	(ILcrd$a;)Z	a	lambda$buildFeaturesPerStep$2
		p	1		feature
	m	(Ljava/util/Comparator;Lcrd$a;)Ljava/util/Set;	a	lambda$buildFeaturesPerStep$1
		p	1		feature
	m	(Ljava/util/List;Ljava/util/function/Function;Z)Ljava/util/List;	a	buildFeaturesPerStep
		p	0		biomes
		p	1		biomesToPlacedFeaturesList
		p	2		listInvolvedBiomesOnFailure
	m	(Lorg/apache/commons/lang3/mutable/MutableInt;Ljava/lang/Object;)I	a	lambda$buildFeaturesPerStep$0
		p	1		feature
c	crd$a	net/minecraft/world/level/biome/FeatureSorter$1FeatureData
	m	()I	a	featureIndex
	m	()I	b	step
	m	()Ldum;	c	feature
	f	I	a	featureIndex
	f	I	b	step
	f	Ldum;	c	feature
c	crd$b	net/minecraft/world/level/biome/FeatureSorter$StepFeatureData
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		features
	m	()Ljava/util/List;	a	features
	m	(I)Lit/unimi/dsi/fastutil/objects/Object2IntMap;	a	lambda$new$0
		p	0		size
	m	()Ljava/util/function/ToIntFunction;	b	indexMapping
	f	Ljava/util/List;	a	features
	f	Ljava/util/function/ToIntFunction;	b	indexMapping
c	cre	net/minecraft/world/level/biome/FixedBiomeSource
	m	(Lhe;)V	<init>	<init>
		p	1		biome
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(IIIIILjava/util/function/Predicate;Lasc;ZLcrc$f;)Lcom/mojang/datafixers/util/Pair;	a	findBiomeHorizontal
		p	1		x
		p	2		y
		p	3		z
		p	4		radius
		p	5		blockCheckInterval
		p	6		predicate
		p	7		random
		p	9		noiseSampler
	m	(IIIILcrc$f;)Ljava/util/Set;	a	getBiomesWithin
		p	1		x
		p	2		y
		p	3		z
		p	4		radius
		p	5		sampler
	m	(Lcre;)Lhe;	a	lambda$static$0
		p	0		biomeSource
	m	(Lgw;IIILjava/util/function/Predicate;Lcrc$f;Lcpy;)Lcom/mojang/datafixers/util/Pair;	a	findClosestBiome3d
		p	1		origin
		p	2		radius
		p	3		horizontalBlockCheckInterval
		p	4		verticalBlockCheckInterval
		p	5		predicate
		p	6		noiseSampler
		p	7		world
	m	()Ljava/util/stream/Stream;	b	collectPossibleBiomes
	m	(III)Lhe;	getNoiseBiome	getNoiseBiome
		p	1		biomeX
		p	2		biomeY
		p	3		biomeZ
	m	(IIILcrc$f;)Lhe;	getNoiseBiome	getNoiseBiome
		p	1		x
		p	2		y
		p	3		z
		p	4		noise
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lhe;	c	biome
c	crf	net/minecraft/world/level/biome/MobSpawnSettings
	m	(FLjava/util/Map;Ljava/util/Map;)V	<init>	<init>
		p	1		creatureSpawnProbability
		p	2		spawners
		p	3		spawnCosts
	m	()F	a	getCreatureProbability
	m	(Lbiu;)Lcrf$b;	a	getMobSpawnCost
		p	1		entityType
	m	(Lbjj;)Lbfm;	a	getMobs
		p	1		spawnGroup
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	(Lcrf;)Ljava/util/Map;	a	lambda$static$2
	m	(Lcrf;)Ljava/util/Map;	b	lambda$static$1
	m	(Lcrf;)Ljava/lang/Float;	c	lambda$static$0
	f	Lbfm;	a	EMPTY_MOB_LIST
	f	Lcrf;	b	EMPTY
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	F	e	DEFAULT_CREATURE_SPAWN_PROBABILITY
	f	F	f	creatureGenerationProbability
	f	Ljava/util/Map;	g	spawners
	f	Ljava/util/Map;	h	mobSpawnCosts
c	crf$a	net/minecraft/world/level/biome/MobSpawnSettings$Builder
	m	()Lcrf;	a	build
	m	(F)Lcrf$a;	a	creatureGenerationProbability
		p	1		probability
	m	(Lbiu;DD)Lcrf$a;	a	addMobCharge
		p	1		entityType
		p	2		mass
		p	4		gravityLimit
	m	(Lbjj;)Ljava/util/List;	a	lambda$new$1
	m	(Lbjj;Lcrf$c;)Lcrf$a;	a	addSpawn
		p	1		spawnGroup
		p	2		spawnEntry
	m	(Ljava/util/Map$Entry;)Lbfm;	a	lambda$build$2
	m	(Lbjj;)Lbjj;	b	lambda$new$0
	f	Ljava/util/Map;	a	spawners
	f	Ljava/util/Map;	b	mobSpawnCosts
	f	F	c	creatureGenerationProbability
c	crf$b	net/minecraft/world/level/biome/MobSpawnSettings$MobSpawnCost
	m	(DD)V	<init>	<init>
		p	1		gravityLimit
		p	3		mass
	m	()D	a	energyBudget
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Lcrf$b;)Ljava/lang/Double;	a	lambda$static$1
		p	0		spawnDensity
	m	()D	b	charge
	m	(Lcrf$b;)Ljava/lang/Double;	b	lambda$static$0
		p	0		spawnDensity
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	D	b	energyBudget
	f	D	c	charge
c	crf$c	net/minecraft/world/level/biome/MobSpawnSettings$SpawnerData
	m	(Lbiu;III)V	<init>	<init>
		p	1		type
		p	2		weight
		p	3		minGroupSize
		p	4		maxGroupSize
	m	(Lbiu;Lbfj;II)V	<init>	<init>
		p	1		type
		p	2		weight
		p	3		minGroupSize
		p	4		maxGroupSize
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	(Lcrf$c;)Lcom/mojang/serialization/DataResult;	a	lambda$static$5
		p	0		spawnEntry
	m	()Ljava/lang/String;	b	lambda$static$4
	m	(Lcrf$c;)Ljava/lang/Integer;	b	lambda$static$2
		p	0		spawnEntry
	m	(Lcrf$c;)Ljava/lang/Integer;	c	lambda$static$1
		p	0		spawnEntry
	m	(Lcrf$c;)Lbiu;	d	lambda$static$0
		p	0		spawnEntry
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lbiu;	b	type
	f	I	c	minCount
	f	I	d	maxCount
c	crg	net/minecraft/world/level/biome/MultiNoiseBiomeSource
	m	(Lcom/mojang/datafixers/util/Either;)V	<init>	<init>
		p	1		biomeEntries
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Laev;)Z	a	stable
		p	1		parameterList
	m	(Lcrc$c;)Lcrg;	a	createFromList
		p	0		biomeEntries
	m	(Lcrc$h;)Lhe;	a	getNoiseBiome
		p	1		point
	m	(Lcrg;)Lcom/mojang/datafixers/util/Either;	a	lambda$static$0
		p	0		source
	m	(Lhe;)Lcrg;	a	createFromPreset
		p	0		biomeEntries
	m	(Ljava/util/List;Lgw;Lcrc$f;)V	a	addDebugInfo
		p	1		info
		p	2		pos
		p	3		noiseSampler
	m	()Ljava/util/stream/Stream;	b	collectPossibleBiomes
	m	(Lcrc$c;)Lcrc$c;	b	lambda$parameters$1
		p	0		entries
	m	(Lhe;)Lcrc$c;	b	lambda$parameters$2
		p	0		parameterListEntry
	m	()Lcrc$c;	d	parameters
	m	(IIILcrc$f;)Lhe;	getNoiseBiome	getNoiseBiome
		p	1		x
		p	2		y
		p	3		z
		p	4		noise
	f	Lcom/mojang/serialization/MapCodec;	b	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Lcom/mojang/serialization/MapCodec;	d	ENTRY_CODEC
	f	Lcom/mojang/serialization/MapCodec;	e	PRESET_CODEC
	f	Lcom/mojang/datafixers/util/Either;	f	parameters
c	crh	net/minecraft/world/level/biome/MultiNoiseBiomeSourceParameterList
	m	(Lcrh$a;Lhf;)V	<init>	<init>
		p	1		preset
		p	2		biomeLookup
	m	()Lcrc$c;	a	parameters
	m	(Laev;)Laev;	a	lambda$knownPresets$3
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Lcrh$a;)Lcrc$c;	a	lambda$knownPresets$4
		p	0		preset
	m	(Lcrh;)Lcrh$a;	a	lambda$static$0
	m	()Ljava/util/Map;	b	knownPresets
	m	(Lcrh$a;)Lcrh$a;	b	lambda$knownPresets$2
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lcrh$a;	c	preset
	f	Lcrc$c;	d	parameters
c	crh$a	net/minecraft/world/level/biome/MultiNoiseBiomeSourceParameterList$Preset
	m	(Laew;Lcrh$a$a;)V	<init>	<init>
		p	1		id
		p	2		biomeSourceFunction
	m	()Ljava/util/stream/Stream;	a	usedBiomes
	m	(Laev;)Laev;	a	lambda$usedBiomes$6
	m	(Laew;)Lcom/mojang/serialization/DataResult;	a	lambda$static$3
	m	(Lcom/google/common/collect/ImmutableList$Builder;Ljava/util/function/Function;Lcom/mojang/datafixers/util/Pair;)V	a	lambda$generateOverworldBiomes$5
		p	2		pair
	m	(Lcrh$a;)Lcom/mojang/serialization/DataResult;	a	lambda$static$4
	m	(Ljava/util/function/Function;)Lcrc$c;	a	generateOverworldBiomes
		p	0		biomeEntryGetter
	m	()Laew;	b	id
	m	(Laew;)Lcom/mojang/serialization/DataResult;	b	lambda$static$2
	m	(Lcrh$a;)Lcrh$a;	b	lambda$static$0
	m	()Lcrh$a$a;	c	provider
	m	(Laew;)Ljava/lang/String;	c	lambda$static$1
	f	Lcrh$a;	a	NETHER
	f	Lcrh$a;	b	OVERWORLD
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Laew;	d	id
	f	Lcrh$a$a;	e	provider
	f	Ljava/util/Map;	f	BY_NAME
c	crh$a$1	net/minecraft/world/level/biome/MultiNoiseBiomeSourceParameterList$Preset$1
	m	(Ljava/util/function/Function;)Lcrc$c;	apply	apply
		p	1		biomeEntryGetter
c	crh$a$2	net/minecraft/world/level/biome/MultiNoiseBiomeSourceParameterList$Preset$2
	m	(Ljava/util/function/Function;)Lcrc$c;	apply	apply
		p	1		biomeEntryGetter
c	crh$a$a	net/minecraft/world/level/biome/MultiNoiseBiomeSourceParameterList$Preset$SourceProvider
	m	(Ljava/util/function/Function;)Lcrc$c;	apply	apply
		p	1		biomeEntryGetter
c	cri	net/minecraft/world/level/biome/MultiNoiseBiomeSourceParameterLists
	m	(Ljava/lang/String;)Laev;	a	register
		p	0		id
	m	(Lnr;)V	a	bootstrap
		p	0		registry
	f	Laev;	a	NETHER
	f	Laev;	b	OVERWORLD
c	crj	net/minecraft/world/level/biome/OverworldBiomeBuilder
	m	()Ljava/util/List;	a	spawnTarget
	m	(D)Ljava/lang/String;	a	getDebugStringForPeaksAndValleys
		p	0		weirdness
	m	(D[Lcrc$b;)Ljava/lang/String;	a	getDebugStringForNoiseValue
		p	0		noisePoint
		p	2		noiseRanges
	m	(II)Laev;	a	pickBeachBiome
		p	1		temperature
		p	2		humidity
	m	(IILcrc$b;)Laev;	a	pickMiddleBiome
		p	1		temperature
		p	2		humidity
		p	3		weirdness
	m	(IILcrc$b;Laev;)Laev;	a	maybePickWindsweptSavannaBiome
		p	1		temperature
		p	2		humidity
		p	3		weirdness
		p	4		biomeKey
	m	(ILcrc$b;)Laev;	a	pickBadlandsBiome
		p	1		humidity
		p	2		weirdness
	m	(Ldkl;Ldkl;Ldkl$b;)Z	a	isDeepDarkRegion
		p	0		erosion
		p	1		depth
		p	2		pos
	m	(Ljava/util/function/Consumer;)V	a	addBiomes
		p	1		parameters
	m	(Ljava/util/function/Consumer;Lcrc$b;)V	a	addPeaks
		p	1		parameters
		p	2		weirdness
	m	(Ljava/util/function/Consumer;Lcrc$b;Lcrc$b;Lcrc$b;Lcrc$b;Lcrc$b;FLaev;)V	a	addSurfaceBiome
		p	1		parameters
		p	2		temperature
		p	3		humidity
		p	4		continentalness
		p	5		erosion
		p	6		weirdness
		p	7		offset
		p	8		biome
	m	()[Lcrc$b;	b	getTemperatureThresholds
	m	(D)Ljava/lang/String;	b	getDebugStringForContinentalness
		p	1		continentalness
	m	(IILcrc$b;)Laev;	b	pickMiddleBiomeOrBadlandsIfHot
		p	1		temperature
		p	2		humidity
		p	3		weirdness
	m	(Ljava/util/function/Consumer;)V	b	addDebugBiomes
		p	1		parameters
	m	(Ljava/util/function/Consumer;Lcrc$b;)V	b	addHighSlice
		p	1		parameters
		p	2		weirdness
	m	(Ljava/util/function/Consumer;Lcrc$b;Lcrc$b;Lcrc$b;Lcrc$b;Lcrc$b;FLaev;)V	b	addUndergroundBiome
		p	1		parameters
		p	2		temperature
		p	3		humidity
		p	4		continentalness
		p	5		erosion
		p	6		weirdness
		p	7		offset
		p	8		biome
	m	()[Lcrc$b;	c	getHumidityThresholds
	m	(D)Ljava/lang/String;	c	getDebugStringForErosion
		p	1		erosion
	m	(IILcrc$b;)Laev;	c	pickMiddleBiomeOrBadlandsIfHotOrSlopeIfCold
		p	1		temperature
		p	2		humidity
		p	3		weirdness
	m	(Ljava/util/function/Consumer;)V	c	addOffCoastBiomes
		p	1		parameters
	m	(Ljava/util/function/Consumer;Lcrc$b;)V	c	addMidSlice
		p	1		parameters
		p	2		weirdness
	m	(Ljava/util/function/Consumer;Lcrc$b;Lcrc$b;Lcrc$b;Lcrc$b;Lcrc$b;FLaev;)V	c	addBottomBiome
		p	1		parameters
		p	2		temperature
		p	3		humidity
		p	4		continentalness
		p	5		erosion
		p	6		weirdness
		p	7		offset
		p	8		biome
	m	()[Lcrc$b;	d	getErosionThresholds
	m	(D)Ljava/lang/String;	d	getDebugStringForTemperature
		p	1		temperature
	m	(IILcrc$b;)Laev;	d	pickShatteredCoastBiome
		p	1		temperature
		p	2		humidity
		p	3		weirdness
	m	(Ljava/util/function/Consumer;)V	d	addInlandBiomes
		p	1		parameters
	m	(Ljava/util/function/Consumer;Lcrc$b;)V	d	addLowSlice
		p	1		parameters
		p	2		weirdness
	m	()[Lcrc$b;	e	getContinentalnessThresholds
	m	(D)Ljava/lang/String;	e	getDebugStringForHumidity
		p	1		humidity
	m	(IILcrc$b;)Laev;	e	pickPlateauBiome
		p	1		temperature
		p	2		humidity
		p	3		weirdness
	m	(Ljava/util/function/Consumer;)V	e	addUndergroundBiomes
		p	1		parameters
	m	(Ljava/util/function/Consumer;Lcrc$b;)V	e	addValleys
		p	1		parameters
		p	2		weirdness
	m	()[Lcrc$b;	f	getPeaksAndValleysThresholds
	m	(IILcrc$b;)Laev;	f	pickPeakBiome
		p	1		temperature
		p	2		humidity
		p	3		weirdness
	m	()[Lcrc$b;	g	getWeirdnessThresholds
	m	(IILcrc$b;)Laev;	g	pickSlopeBiome
		p	1		temperature
		p	2		humidity
		p	3		weirdness
	m	(IILcrc$b;)Laev;	h	pickShatteredBiome
		p	1		temperature
		p	2		humidity
		p	3		weirdness
	f	Lcrc$b;	A	midInlandContinentalness
	f	Lcrc$b;	B	farInlandContinentalness
	f	[[Laev;	C	OCEANS
	f	[[Laev;	D	MIDDLE_BIOMES
	f	[[Laev;	E	MIDDLE_BIOMES_VARIANT
	f	[[Laev;	F	PLATEAU_BIOMES
	f	[[Laev;	G	PLATEAU_BIOMES_VARIANT
	f	[[Laev;	H	SHATTERED_BIOMES
	f	F	a	HIGH_START
	f	F	b	PEAK_START
	f	F	c	NEAR_INLAND_START
	f	F	d	MID_INLAND_START
	f	F	e	FAR_INLAND_START
	f	F	f	EROSION_INDEX_1_START
	f	F	g	EROSION_INDEX_2_START
	f	F	h	VALLEY_SIZE
	f	F	i	LOW_START
	f	F	j	HIGH_END
	f	F	k	PEAK_SIZE
	f	F	l	PEAK_END
	f	F	m	EROSION_DEEP_DARK_DRYNESS_THRESHOLD
	f	F	n	DEPTH_DEEP_DARK_DRYNESS_THRESHOLD
	f	Lcrc$b;	o	FULL_RANGE
	f	[Lcrc$b;	p	temperatures
	f	[Lcrc$b;	q	humidities
	f	[Lcrc$b;	r	erosions
	f	Lcrc$b;	s	FROZEN_RANGE
	f	Lcrc$b;	t	UNFROZEN_RANGE
	f	Lcrc$b;	u	mushroomFieldsContinentalness
	f	Lcrc$b;	v	deepOceanContinentalness
	f	Lcrc$b;	w	oceanContinentalness
	f	Lcrc$b;	x	coastContinentalness
	f	Lcrc$b;	y	inlandContinentalness
	f	Lcrc$b;	z	nearInlandContinentalness
c	crk	net/minecraft/world/level/biome/TheEndBiomeSource
	m	(Lhe;Lhe;Lhe;Lhe;Lhe;)V	<init>	<init>
		p	1		centerBiome
		p	2		highlandsBiome
		p	3		midlandsBiome
		p	4		smallIslandsBiome
		p	5		barrensBiome
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lhf;)Lcrk;	a	create
		p	0		biomeLookup
	m	()Ljava/util/stream/Stream;	b	collectPossibleBiomes
	m	(IIILcrc$f;)Lhe;	getNoiseBiome	getNoiseBiome
		p	1		x
		p	2		y
		p	3		z
		p	4		noise
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lhe;	c	end
	f	Lhe;	d	highlands
	f	Lhe;	e	midlands
	f	Lhe;	f	islands
	f	Lhe;	g	barrens
c	crl	net/minecraft/world/level/biome/package-info
c	crm	net/minecraft/world/level/block/AbstractBannerBlock
	m	(Lcht;Ldfi$d;)V	<init>	<init>
		p	1		color
		p	2		settings
	m	()Lcht;	a	getColor
	m	(Lcjf;Ldcl;)V	a	lambda$setPlacedBy$1
		p	1		blockEntity
	m	(Lcpb;Lgw;Ldfj;)Lcjf;	a	getCloneItemStack
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcpv;Lgw;Ldfj;Lbjg;Lcjf;)V	a	setPlacedBy
		p	1		world
		p	2		pos
		p	3		state
		p	4		placer
		p	5		itemStack
	m	(Ldfj;)Z	a	isPossibleToRespawnInThis
		p	1		state
	m	(Lgw;Ldfj;)Ldcv;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Lcjf;Ldcl;)V	b	lambda$setPlacedBy$0
		p	1		blockEntity
	f	Lcht;	a	color
c	crn	net/minecraft/world/level/block/AbstractCandleBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lcbu;Ldfj;Lcpw;Lgw;)V	a	extinguish
		p	0		player
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcpv;Ldfj;Lehj;Lccm;)V	a	onProjectileHit
		p	1		world
		p	2		state
		p	3		hit
		p	4		projectile
	m	(Lcpv;Lehn;Lasc;)V	a	addParticlesAndSound
		p	0		world
		p	1		vec3d
		p	2		random
	m	(Lcpv;Lgw;Lasc;Lehn;)V	a	lambda$animateTick$0
		p	3		offset
	m	(Lcpw;Ldfj;Lgw;Z)V	a	setLit
		p	0		world
		p	1		state
		p	2		pos
		p	3		lit
	m	(Lcpw;Lgw;Lehn;)V	a	lambda$extinguish$1
		p	2		offset
	m	(Ldfj;Lcpv;Lgw;Lasc;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;)Ljava/lang/Iterable;	b	getParticleOffsets
		p	1		state
	m	(Ldfj;)Z	c	isLit
		p	0		state
	m	(Ldfj;)Z	d	canBeLit
		p	1		state
	f	I	a	LIGHT_PER_CANDLE
	f	Ldga;	b	LIT
c	cro	net/minecraft/world/level/block/AbstractCauldronBlock
	m	(Ldfi$d;Ljava/util/Map;)V	<init>	<init>
		p	1		settings
		p	2		behaviorMap
	m	(Ldfj;Lakq;Lgw;Lasc;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lcpb;Lgw;)Leig;	a	getInteractionShape
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lcpb;Lgw;Lebc;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpv;Lgw;Lcbu;Lbgx;Lehj;)Lbgy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldfj;Lcpv;Lgw;Leal;)V	a	receiveStalactiteDrip
		p	1		state
		p	2		world
		p	3		pos
		p	4		fluid
	m	(Ldfj;Lgw;Lbiq;)Z	a	isEntityInsideContent
		p	1		state
		p	2		pos
		p	3		entity
	m	(Leal;)Z	a	canReceiveStalactiteDrip
		p	1		fluid
	m	(Ldfj;)D	b	getContentHeight
		p	1		state
	m	(Ldfj;)Z	d	isFull
		p	1		state
	m	(Ldfj;)Z	d_	hasAnalogOutputSignal
		p	1		state
	f	I	a	FLOOR_LEVEL
	f	Leig;	b	SHAPE
	f	I	c	SIDE_THICKNESS
	f	I	d	LEG_WIDTH
	f	I	e	LEG_HEIGHT
	f	I	f	LEG_DEPTH
	f	Leig;	g	INSIDE
	f	Ljava/util/Map;	h	interactions
c	crp	net/minecraft/world/level/block/AbstractChestBlock
	m	(Ldfi$d;Ljava/util/function/Supplier;)V	<init>	<init>
		p	1		settings
		p	2		entityTypeSupplier
	m	(Ldfj;Lcpv;Lgw;Z)Lcuy$c;	a	combine
		p	1		state
		p	2		world
		p	3		pos
		p	4		ignoreBlocked
	f	Ljava/util/function/Supplier;	a	blockEntityType
c	crq	net/minecraft/world/level/block/AbstractFurnaceBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Lcpv;Ldcx;Ldcx;)Ldcw;	a	createFurnaceTicker
		p	0		world
		p	1		givenType
		p	2		expectedType
	m	(Lcpv;Lgw;Lcbu;)V	a	openContainer
		p	1		world
		p	2		pos
		p	3		player
	m	(Lcpv;Lgw;Ldfj;Lbjg;Lcjf;)V	a	setPlacedBy
		p	1		world
		p	2		pos
		p	3		state
		p	4		placer
		p	5		itemStack
	m	(Ldfj;Lcpv;Lgw;)I	a	getAnalogOutputSignal
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lcpv;Lgw;Lcbu;Lbgx;Lehj;)Lbgy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldfj;Lcpv;Lgw;Ldfj;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Ldfj;Lcxq;)Ldfj;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldfj;Lczh;)Ldfj;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldfj;)Lcza;	b_	getRenderShape
		p	1		state
	m	(Ldfj;)Z	d_	hasAnalogOutputSignal
		p	1		state
	f	Ldgd;	a	FACING
	f	Ldga;	b	LIT
c	crr	net/minecraft/world/level/block/AbstractGlassBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Ldfj;Lcpb;Lgw;)F	b	getShadeBrightness
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	b	getVisualShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpb;Lgw;)Z	c	propagatesSkylightDown
		p	1		state
		p	2		world
		p	3		pos
c	crs	net/minecraft/world/level/block/AbstractSkullBlock
	m	(Lczx$a;Ldfi$d;)V	<init>	<init>
		p	1		type
		p	2		settings
	m	()Lczx$a;	a	getType
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Lcpv;Ldfj;Ldcx;)Ldcw;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Ldfj;Lcpb;Lgw;Lebc;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldfj;Lcpv;Lgw;Lcsv;Lgw;Z)V	a	neighborChanged
		p	1		state
		p	2		world
		p	3		pos
		p	4		sourceBlock
		p	5		sourcePos
		p	6		notify
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lgw;Ldfj;)Ldcv;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	()Lbiv;	g	getEquipmentSlot
	f	Ldga;	a	POWERED
	f	Lczx$a;	b	type
c	crt	net/minecraft/world/level/block/AirBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;)Lcza;	b_	getRenderShape
		p	1		state
c	cru	net/minecraft/world/level/block/AmethystBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lcpv;Ldfj;Lehj;Lccm;)V	a	onProjectileHit
		p	1		world
		p	2		state
		p	3		hit
		p	4		projectile
c	crv	net/minecraft/world/level/block/AmethystClusterBlock
	m	(IILdfi$d;)V	<init>	<init>
		p	1		height
		p	2		xzOffset
		p	3		settings
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpy;Lgw;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lcxq;)Ldfj;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldfj;Lczh;)Ldfj;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldfj;)Leam;	c_	getFluidState
		p	1		state
	f	Ldga;	a	WATERLOGGED
	f	Ldgd;	b	FACING
	f	Leig;	c	northAabb
	f	Leig;	d	southAabb
	f	Leig;	e	eastAabb
	f	Leig;	f	westAabb
	f	Leig;	g	upAabb
	f	Leig;	h	downAabb
c	crv$1	net/minecraft/world/level/block/AmethystClusterBlock$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	crw	net/minecraft/world/level/block/AnvilBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lbiq;)Lbho;	a	getFallDamageSource
		p	1		attacker
	m	(Lbym;)V	a	falling
		p	1		entity
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Lcpv;Lgw;ILcbt;Lcbu;)Lcel;	a	lambda$getMenuProvider$0
		p	2		syncId
		p	3		inventory
		p	4		player
	m	(Lcpv;Lgw;Lbym;)V	a	onBrokenAfterFall
		p	1		world
		p	2		pos
		p	3		fallingBlockEntity
	m	(Lcpv;Lgw;Ldfj;Ldfj;Lbym;)V	a	onLand
		p	1		world
		p	2		pos
		p	3		fallingBlockState
		p	4		currentStateInPos
		p	5		fallingBlockEntity
	m	(Ldfj;Lcpb;Lgw;Lebc;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpv;Lgw;Lcbu;Lbgx;Lehj;)Lbgy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldfj;Lczh;)Ldfj;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldfj;Lcpv;Lgw;)Lbhb;	b	getMenuProvider
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lcpb;Lgw;)I	d	getDustColor
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;)Ldfj;	e	damage
		p	0		fallingState
	f	Ldgd;	a	FACING
	f	Leig;	b	BASE
	f	Leig;	c	X_LEG1
	f	Leig;	d	X_LEG2
	f	Leig;	e	X_TOP
	f	Leig;	f	Z_LEG1
	f	Leig;	g	Z_LEG2
	f	Leig;	h	Z_TOP
	f	Leig;	i	X_AXIS_AABB
	f	Leig;	j	Z_AXIS_AABB
	f	Ltl;	k	CONTAINER_TITLE
	f	F	l	FALL_DAMAGE_PER_DISTANCE
	f	I	m	FALL_DAMAGE_MAX
c	crx	net/minecraft/world/level/block/AttachedStemBlock
	m	(Ldas;Ljava/util/function/Supplier;Ldfi$d;)V	<init>	<init>
		p	1		gourdBlock
		p	2		pickBlockItem
		p	3		settings
	m	(Lcpb;Lgw;Ldfj;)Lcjf;	a	getCloneItemStack
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcxq;)Ldfj;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldfj;Lczh;)Ldfj;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldfj;Lcpb;Lgw;)Z	d	mayPlaceOn
		p	1		floor
		p	2		world
		p	3		pos
	f	Ldgd;	a	FACING
	f	F	b	AABB_OFFSET
	f	Ljava/util/Map;	c	AABBS
	f	Ldas;	d	fruit
	f	Ljava/util/function/Supplier;	e	seedSupplier
c	cry	net/minecraft/world/level/block/AzaleaBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lakq;Lasc;Lgw;Ldfj;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcpv;Lasc;Lgw;Ldfj;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcpy;Lgw;Ldfj;)Z	a	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpb;Lgw;)Z	d	mayPlaceOn
		p	1		floor
		p	2		world
		p	3		pos
	f	Lder;	a	TREE_GROWER
	f	Leig;	b	SHAPE
c	crz	net/minecraft/world/level/block/BambooSaplingBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lakq;Lasc;Lgw;Ldfj;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcpb;Lgw;Ldfj;)Lcjf;	a	getCloneItemStack
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcpv;Lasc;Lgw;Ldfj;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcpv;Lgw;)V	a	growBamboo
		p	1		world
		p	2		pos
	m	(Lcpy;Lgw;Ldfj;)Z	a	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldfj;Lcbu;Lcpb;Lgw;)F	a	getDestroyProgress
		p	1		state
		p	2		player
		p	3		world
		p	4		pos
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpy;Lgw;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldfj;Lakq;Lgw;Lasc;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	f	F	a	SAPLING_AABB_OFFSET
	f	Leig;	b	SAPLING_SHAPE
c	csa	net/minecraft/world/level/block/BambooStalkBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lakq;Lasc;Lgw;Ldfj;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Lcpb;Lgw;)I	a	getHeightAboveUpToMax
		p	1		world
		p	2		pos
	m	(Lcpv;Lasc;Lgw;Ldfj;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcpy;Lgw;Ldfj;)Z	a	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldfj;Lakq;Lgw;Lasc;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lcbu;Lcpb;Lgw;)F	a	getDestroyProgress
		p	1		state
		p	2		player
		p	3		world
		p	4		pos
	m	(Ldfj;Lcpb;Lgw;Lebc;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpv;Lgw;Lasc;I)V	a	growBamboo
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
		p	5		height
	m	(Ldfj;Lcpy;Lgw;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldfj;Lcpb;Lgw;)Z	a_	isCollisionShapeFullBlock
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcpb;Lgw;)I	b	getHeightBelowUpToMax
		p	1		world
		p	2		pos
	m	(Ldfj;Lakq;Lgw;Lasc;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lcpb;Lgw;)Z	c	propagatesSkylightDown
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	c	getCollisionShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;)Z	e_	isRandomlyTicking
		p	1		state
	f	F	a	SMALL_LEAVES_AABB_OFFSET
	f	F	b	LARGE_LEAVES_AABB_OFFSET
	f	F	c	COLLISION_AABB_OFFSET
	f	Leig;	d	SMALL_SHAPE
	f	Leig;	e	LARGE_SHAPE
	f	Leig;	f	COLLISION_SHAPE
	f	Ldgj;	g	AGE
	f	Ldgh;	h	LEAVES
	f	Ldgj;	i	STAGE
	f	I	j	MAX_HEIGHT
	f	I	k	STAGE_GROWING
	f	I	l	STAGE_DONE_GROWING
	f	I	m	AGE_THIN_BAMBOO
	f	I	n	AGE_THICK_BAMBOO
c	csb	net/minecraft/world/level/block/BannerBlock
	m	(Lcht;Ldfi$d;)V	<init>	<init>
		p	1		color
		p	2		settings
	m	(Lcht;)Lcsv;	a	byColor
		p	0		color
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpy;Lgw;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lcxq;)Ldfj;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldfj;Lczh;)Ldfj;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	f	Ldgj;	a	ROTATION
	f	Ljava/util/Map;	b	BY_COLOR
	f	Leig;	c	SHAPE
c	csc	net/minecraft/world/level/block/BarrelBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Lcpv;Lgw;Ldfj;Lbjg;Lcjf;)V	a	setPlacedBy
		p	1		world
		p	2		pos
		p	3		state
		p	4		placer
		p	5		itemStack
	m	(Ldfj;Lakq;Lgw;Lasc;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lcpv;Lgw;)I	a	getAnalogOutputSignal
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lcpv;Lgw;Lcbu;Lbgx;Lehj;)Lbgy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldfj;Lcpv;Lgw;Ldfj;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Ldfj;Lcxq;)Ldfj;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldfj;Lczh;)Ldfj;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lgw;Ldfj;)Ldcv;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Ldfj;)Lcza;	b_	getRenderShape
		p	1		state
	m	(Ldfj;)Z	d_	hasAnalogOutputSignal
		p	1		state
	f	Ldgd;	a	FACING
	f	Ldga;	b	OPEN
c	csd	net/minecraft/world/level/block/BarrierBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lcbu;Lcpb;Lgw;Ldfj;Leal;)Z	a	canPlaceLiquid
		p	1		player
		p	2		world
		p	3		pos
		p	4		state
		p	5		fluid
	m	(Lcbu;Lcpw;Lgw;Ldfj;)Lcjf;	a	pickupBlock
		p	1		player
		p	2		world
		p	3		pos
		p	4		state
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldfj;Lcpb;Lgw;)F	b	getShadeBrightness
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;)Lcza;	b_	getRenderShape
		p	1		state
	m	(Ldfj;Lcpb;Lgw;)Z	c	propagatesSkylightDown
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;)Leam;	c_	getFluidState
		p	1		state
	f	Ldga;	a	WATERLOGGED
c	cse	net/minecraft/world/level/block/BaseCoralFanBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	f	Leig;	a	AABB
c	csf	net/minecraft/world/level/block/BaseCoralPlantBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	f	F	a	AABB_OFFSET
	f	Leig;	b	SHAPE
c	csg	net/minecraft/world/level/block/BaseCoralPlantTypeBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpw;Lgw;)V	a	tryScheduleDieTick
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lcpy;Lgw;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldfj;)Leam;	c_	getFluidState
		p	1		state
	m	(Ldfj;Lcpb;Lgw;)Z	e	scanForWater
		p	0		state
		p	1		world
		p	2		pos
	f	Leig;	a	AABB
	f	Ldga;	c	WATERLOGGED
c	csh	net/minecraft/world/level/block/BaseCoralWallFanBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpy;Lgw;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lcxq;)Ldfj;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldfj;Lczh;)Ldfj;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	f	Ldgd;	a	FACING
	f	Ljava/util/Map;	b	SHAPES
c	csi	net/minecraft/world/level/block/BaseEntityBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Ldcx;Ldcx;Ldcw;)Ldcw;	a	createTickerHelper
		p	0		givenType
		p	1		expectedType
		p	2		ticker
	m	(Ldfj;Lcpv;Lgw;II)Z	a	triggerEvent
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
		p	5		data
	m	(Ldfj;Lcpv;Lgw;)Lbhb;	b	getMenuProvider
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;)Lcza;	b_	getRenderShape
		p	1		state
c	csj	net/minecraft/world/level/block/BaseFireBlock
	m	(Ldfi$d;F)V	<init>	<init>
		p	1		settings
		p	2		damage
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Lcpb;Lgw;)Ldfj;	a	getState
		p	0		world
		p	1		pos
	m	(Lcpv;)Z	a	inPortalDimension
		p	0		world
	m	(Lcpv;Lcbu;Lgw;Ldfj;)V	a	spawnDestroyParticles
		p	1		world
		p	2		player
		p	3		pos
		p	4		state
	m	(Lcpv;Lgw;Ldfj;Lcbu;)V	a	playerWillDestroy
		p	1		world
		p	2		pos
		p	3		state
		p	4		player
	m	(Lcpv;Lgw;Lha;)Z	a	canBePlacedAt
		p	0		world
		p	1		pos
		p	2		direction
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpv;Lgw;Lasc;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lcpv;Lgw;Lbiq;)V	a	entityInside
		p	1		state
		p	2		world
		p	3		pos
		p	4		entity
	m	(Lcpv;Lgw;Lha;)Z	b	isPortal
		p	0		world
		p	1		pos
		p	2		direction
	m	(Ldfj;Lcpv;Lgw;Ldfj;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	m	(Ldfj;)Z	f	canBurn
		p	1		state
	f	F	a	AABB_OFFSET
	f	Leig;	b	DOWN_AABB
	f	I	c	SECONDS_ON_FIRE
	f	F	d	fireDamage
c	csk	net/minecraft/world/level/block/BasePressurePlateBlock
	m	(Ldfi$d;Ldfy;)V	<init>	<init>
		p	1		settings
		p	2		blockSetType
	m	()I	a	getPressedTime
	m	(Lbiq;)Z	a	lambda$getEntityCount$0
		p	0		entity
	m	(Lbiq;Lcpv;Lgw;Ldfj;I)V	a	checkPressed
		p	1		entity
		p	2		world
		p	3		pos
		p	4		state
		p	5		output
	m	(Lcpv;Lehi;Ljava/lang/Class;)I	a	getEntityCount
		p	0		world
		p	1		box
		p	2		entityClass
	m	(Lcpv;Lgw;)V	a	updateNeighbours
		p	1		world
		p	2		pos
	m	(Ldfj;)Z	a	isPossibleToRespawnInThis
		p	1		state
	m	(Ldfj;I)Ldfj;	a	setSignalForState
		p	1		state
		p	2		rsOut
	m	(Ldfj;Lakq;Lgw;Lasc;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpb;Lgw;Lha;)I	a	getSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldfj;Lcpv;Lgw;Lbiq;)V	a	entityInside
		p	1		state
		p	2		world
		p	3		pos
		p	4		entity
	m	(Ldfj;Lcpv;Lgw;Ldfj;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Ldfj;Lcpy;Lgw;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lcpv;Lgw;)I	b	getSignalStrength
		p	1		world
		p	2		pos
	m	(Ldfj;Lcpb;Lgw;Lha;)I	b	getDirectSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldfj;)Z	f_	isSignalSource
		p	1		state
	m	(Ldfj;)I	g	getSignalForState
		p	1		state
	f	Leig;	a	PRESSED_AABB
	f	Leig;	b	AABB
	f	Lehi;	c	TOUCH_AABB
	f	Ldfy;	d	type
c	csl	net/minecraft/world/level/block/BaseRailBlock
	m	(ZLdfi$d;)V	<init>	<init>
		p	1		forbidCurves
		p	2		settings
	m	()Z	a	isStraight
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Lcpv;Lgw;)Z	a	isRail
		p	0		world
		p	1		pos
	m	(Lcpv;Lgw;Ldfj;Z)Ldfj;	a	updateDir
		p	1		world
		p	2		pos
		p	3		state
		p	4		forceUpdate
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpv;Lgw;Lcsv;)V	a	updateState
		p	1		state
		p	2		world
		p	3		pos
		p	4		neighbor
	m	(Ldfj;Lcpv;Lgw;Lcsv;Lgw;Z)V	a	neighborChanged
		p	1		state
		p	2		world
		p	3		pos
		p	4		sourceBlock
		p	5		sourcePos
		p	6		notify
	m	(Ldfj;Lcpv;Lgw;Ldfj;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Ldfj;Lcpv;Lgw;Z)Ldfj;	a	updateState
		p	1		state
		p	2		world
		p	3		pos
		p	4		notify
	m	(Ldfj;Lcpy;Lgw;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lgw;Lcpv;Ldgn;)Z	a	shouldBeRemoved
		p	0		pos
		p	1		world
		p	2		shape
	m	()Ldgm;	b	getShapeProperty
	m	(Ldfj;Lcpv;Lgw;Ldfj;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	m	(Ldfj;)Leam;	c_	getFluidState
		p	1		state
	m	(Ldfj;)Z	g	isRail
		p	0		state
	f	Leig;	a	FLAT_AABB
	f	Leig;	b	HALF_BLOCK_AABB
	f	Ldga;	c	WATERLOGGED
	f	Z	d	isStraight
c	csl$1	net/minecraft/world/level/block/BaseRailBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$state$properties$RailShape
c	csm	net/minecraft/world/level/block/BeaconBeamBlock
	m	()Lcht;	a	getColor
c	csn	net/minecraft/world/level/block/BeaconBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	()Lcht;	a	getColor
	m	(Lcpv;Ldfj;Ldcx;)Ldcw;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Lcpv;Lgw;Ldfj;Lbjg;Lcjf;)V	a	setPlacedBy
		p	1		world
		p	2		pos
		p	3		state
		p	4		placer
		p	5		itemStack
	m	(Ldfj;Lcpv;Lgw;Lcbu;Lbgx;Lehj;)Lbgy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Lgw;Ldfj;)Ldcv;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Ldfj;)Lcza;	b_	getRenderShape
		p	1		state
c	cso	net/minecraft/world/level/block/BedBlock
	m	(Lcht;Ldfi$d;)V	<init>	<init>
		p	1		color
		p	2		settings
	m	()Lcht;	a	getColor
	m	(Lbiq;)V	a	bounceUp
		p	1		entity
	m	(Lbiu;Lcpf;Lgw;Lha;F)Ljava/util/Optional;	a	findStandUpPosition
		p	0		type
		p	1		world
		p	2		pos
		p	3		bedDirection
		p	4		spawnAngle
	m	(Lbiu;Lcpf;Lgw;Lha;Lha;)Ljava/util/Optional;	a	findBunkBedStandUpPosition
		p	0		type
		p	1		world
		p	2		pos
		p	3		bedDirection
		p	4		respawnDirection
	m	(Lbiu;Lcpf;Lgw;[[IZ)Ljava/util/Optional;	a	findStandUpPositionAtOffset
		p	0		type
		p	1		world
		p	2		pos
		p	3		possibleOffsets
		p	4		ignoreInvalidPos
	m	(Lcbu;Lcbu$a;)V	a	lambda$use$0
		p	1		reason
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Lcpb;Lbiq;)V	a	updateEntityAfterFallOn
		p	1		world
		p	2		entity
	m	(Lcpb;Lgw;)Lha;	a	getBedOrientation
		p	0		world
		p	1		pos
	m	(Lcpv;)Z	a	canSetSpawn
		p	0		world
	m	(Lcpv;Ldfj;Lgw;Lbiq;F)V	a	fallOn
		p	1		world
		p	2		state
		p	3		pos
		p	4		entity
		p	5		fallDistance
	m	(Lcpv;Lgw;)Z	a	kickVillagerOutOfBed
		p	1		world
		p	2		pos
	m	(Lcpv;Lgw;Ldfj;Lbjg;Lcjf;)V	a	setPlacedBy
		p	1		world
		p	2		pos
		p	3		state
		p	4		placer
		p	5		itemStack
	m	(Lcpv;Lgw;Ldfj;Lcbu;)V	a	playerWillDestroy
		p	1		world
		p	2		pos
		p	3		state
		p	4		player
	m	(Ldfj;Lcpb;Lgw;Lebc;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpv;Lgw;Lcbu;Lbgx;Lehj;)Lbgy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldfj;Lgw;)J	a	getSeed
		p	1		state
		p	2		pos
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldfw;Lha;)Lha;	a	getNeighbourDirection
		p	0		part
		p	1		direction
	m	(Lgw;Ldfj;)Ldcv;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Lha;)[[I	a	bedAboveStandUpOffsets
		p	0		bedDirection
	m	(Lha;Lha;)[[I	a	bedStandUpOffsets
		p	0		bedDirection
		p	1		respawnDirection
	m	(Lcpb;Lgw;)Z	b	isBunkBed
		p	0		world
		p	1		pos
	m	(Lha;Lha;)[[I	b	bedSurroundStandUpOffsets
		p	0		bedDirection
		p	1		respawnDirection
	m	(Ldfj;)Lcza;	b_	getRenderShape
		p	1		state
	m	(Ldfj;)Lha;	g	getConnectedDirection
		p	0		state
	m	(Ldfj;)Lcuy$a;	h	getBlockType
		p	0		state
	f	Ldgh;	a	PART
	f	Ldga;	b	OCCUPIED
	f	I	c	HEIGHT
	f	Leig;	d	BASE
	f	Leig;	e	LEG_NORTH_WEST
	f	Leig;	f	LEG_SOUTH_WEST
	f	Leig;	g	LEG_NORTH_EAST
	f	Leig;	h	LEG_SOUTH_EAST
	f	Leig;	i	NORTH_SHAPE
	f	Leig;	j	SOUTH_SHAPE
	f	Leig;	k	WEST_SHAPE
	f	Leig;	l	EAST_SHAPE
	f	I	m	LEG_WIDTH
	f	Lcht;	n	color
c	cso$1	net/minecraft/world/level/block/BedBlock$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	csp	net/minecraft/world/level/block/BeehiveBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lbgx;Lcbu;)V	a	lambda$use$0
		p	1		playerx
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Lcpv;DDDDD)V	a	spawnFluidParticle
		p	1		world
		p	2		minX
		p	4		maxX
		p	6		minZ
		p	8		maxZ
		p	10		height
	m	(Lcpv;Lcbu;Lgw;Ldfj;Ldcv;Lcjf;)V	a	playerDestroy
		p	1		world
		p	2		player
		p	3		pos
		p	4		state
		p	5		blockEntity
		p	6		tool
	m	(Lcpv;Ldfj;Ldcx;)Ldcw;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Lcpv;Ldfj;Lgw;)V	a	resetHoneyLevel
		p	1		world
		p	2		state
		p	3		pos
	m	(Lcpv;Ldfj;Lgw;Lcbu;Ldcs$b;)V	a	releaseBeesAndResetHoneyLevel
		p	1		world
		p	2		state
		p	3		pos
		p	4		player
		p	5		beeState
	m	(Lcpv;Lgw;)V	a	dropHoneycomb
		p	0		world
		p	1		pos
	m	(Lcpv;Lgw;Ldfj;)V	a	trySpawnDripParticles
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcpv;Lgw;Ldfj;Lcbu;)V	a	playerWillDestroy
		p	1		world
		p	2		pos
		p	3		state
		p	4		player
	m	(Lcpv;Lgw;Leig;D)V	a	spawnParticle
		p	1		world
		p	2		pos
		p	3		shape
		p	4		height
	m	(Ldfj;Lcpv;Lgw;)I	a	getAnalogOutputSignal
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lcpv;Lgw;Lasc;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lcpv;Lgw;Lcbu;Lbgx;Lehj;)Lbgy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldfj;Lecw$a;)Ljava/util/List;	a	getDrops
		p	1		state
		p	2		builder
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lgw;Ldfj;)Ldcv;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Lcpv;Lgw;)V	b	angerNearbyBees
		p	1		world
		p	2		pos
	m	(Ldfj;)Lcza;	b_	getRenderShape
		p	1		state
	m	(Lcpv;Lgw;)Z	c	hiveContainsBees
		p	1		world
		p	2		pos
	m	(Ldfj;)Z	d_	hasAnalogOutputSignal
		p	1		state
	f	Ldgd;	a	FACING
	f	Ldgj;	b	HONEY_LEVEL
	f	I	c	MAX_HONEY_LEVELS
	f	I	d	SHEARED_HONEYCOMB_COUNT
c	csq	net/minecraft/world/level/block/BeetrootBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	()Ldgj;	a	getAgeProperty
	m	(Lcpv;)I	a	getBonemealAgeIncrease
		p	1		world
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	()I	b	getMaxAge
	m	(Ldfj;Lakq;Lgw;Lasc;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	()Lcpu;	c	getBaseSeedId
	f	I	a	MAX_AGE
	f	Ldgj;	b	AGE
	f	[Leig;	e	SHAPE_BY_AGE
c	csr	net/minecraft/world/level/block/BellBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lbiq;Lcpv;Lgw;Lha;)Z	a	attemptToRing
		p	1		entity
		p	2		world
		p	3		pos
		p	4		direction
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Lcpv;Ldfj;Ldcx;)Ldcw;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Lcpv;Ldfj;Lehj;Lcbu;Z)Z	a	onHit
		p	1		world
		p	2		state
		p	3		hitResult
		p	4		player
		p	5		checkHitPos
	m	(Lcpv;Ldfj;Lehj;Lccm;)V	a	onProjectileHit
		p	1		world
		p	2		state
		p	3		hit
		p	4		projectile
	m	(Lcpv;Lgw;Lha;)Z	a	attemptToRing
		p	1		world
		p	2		pos
		p	3		direction
	m	(Ldfj;Lcpb;Lgw;Lebc;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpv;Lgw;Lcbu;Lbgx;Lehj;)Lbgy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldfj;Lcpv;Lgw;Lcsv;Lgw;Z)V	a	neighborChanged
		p	1		state
		p	2		world
		p	3		pos
		p	4		sourceBlock
		p	5		sourcePos
		p	6		notify
	m	(Ldfj;Lcpy;Lgw;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lha;D)Z	a	isProperHit
		p	1		state
		p	2		side
		p	3		y
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lgw;Ldfj;)Ldcv;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Ldfj;)Lcza;	b_	getRenderShape
		p	1		state
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	c	getCollisionShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;)Leig;	h	getVoxelShape
		p	1		state
	m	(Ldfj;)Lha;	n	getConnectedDirection
		p	0		state
	f	Leig;	D	TO_SOUTH
	f	Leig;	E	CEILING_SHAPE
	f	Ldgd;	a	FACING
	f	Ldgh;	b	ATTACHMENT
	f	Ldga;	c	POWERED
	f	I	d	EVENT_BELL_RING
	f	Leig;	e	NORTH_SOUTH_FLOOR_SHAPE
	f	Leig;	f	EAST_WEST_FLOOR_SHAPE
	f	Leig;	g	BELL_TOP_SHAPE
	f	Leig;	h	BELL_BOTTOM_SHAPE
	f	Leig;	i	BELL_SHAPE
	f	Leig;	j	NORTH_SOUTH_BETWEEN
	f	Leig;	k	EAST_WEST_BETWEEN
	f	Leig;	l	TO_WEST
	f	Leig;	m	TO_EAST
	f	Leig;	n	TO_NORTH
c	csr$1	net/minecraft/world/level/block/BellBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$state$properties$BellAttachType
c	css	net/minecraft/world/level/block/BigDripleafBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lakq;Lasc;Lgw;Ldfj;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Lcpv;Lasc;Lgw;Ldfj;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcpv;Ldfj;Lehj;Lccm;)V	a	onProjectileHit
		p	1		world
		p	2		state
		p	3		hit
		p	4		projectile
	m	(Lcpv;Lgw;Lapc;)V	a	playTiltSound
		p	0		world
		p	1		pos
		p	2		soundEvent
	m	(Lcpw;Lasc;Lgw;Lha;)V	a	placeWithRandomHeight
		p	0		world
		p	1		random
		p	2		pos
		p	3		direction
	m	(Lcpw;Lgw;Leam;Lha;)Z	a	place
		p	0		world
		p	1		pos
		p	2		fluidState
		p	3		direction
	m	(Lcpx;Lgw;Ldfj;)Z	a	canPlaceAt
		p	0		world
		p	1		pos
		p	2		state
	m	(Lcpy;Lgw;Ldfj;)Z	a	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldfj;Lakq;Lgw;Lasc;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpv;Lgw;Lbiq;)V	a	entityInside
		p	1		state
		p	2		world
		p	3		pos
		p	4		entity
	m	(Ldfj;Lcpv;Lgw;Lcsv;Lgw;Z)V	a	neighborChanged
		p	1		state
		p	2		world
		p	3		pos
		p	4		sourceBlock
		p	5		sourcePos
		p	6		notify
	m	(Ldfj;Lcpv;Lgw;Ldgu;)V	a	setTilt
		p	0		state
		p	1		world
		p	2		pos
		p	3		tilt
	m	(Ldfj;Lcpv;Lgw;Ldgu;Lapc;)V	a	setTiltAndScheduleTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		tilt
		p	5		sound
	m	(Ldfj;Lcpy;Lgw;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lgw;Lbiq;)Z	a	canEntityTilt
		p	0		pos
		p	1		entity
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntArrayMap;)V	a	lambda$static$0
		p	0		delays
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	c	getCollisionShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;)Leam;	c_	getFluidState
		p	1		state
	m	(Ldfj;Lcpv;Lgw;)V	d	resetTilt
		p	0		state
		p	1		world
		p	2		pos
	m	(Ldfj;)Leig;	h	calculateShape
		p	0		state
	m	(Ldfj;)Z	n	canReplace
		p	0		state
	f	Ldga;	a	WATERLOGGED
	f	Ldgh;	b	TILT
	f	I	c	NO_TICK
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	d	DELAY_UNTIL_NEXT_TILT_STATE
	f	I	e	MAX_GEN_HEIGHT
	f	I	f	STEM_WIDTH
	f	I	g	ENTITY_DETECTION_MIN_Y
	f	I	h	LOWEST_LEAF_TOP
	f	Ljava/util/Map;	i	LEAF_SHAPES
	f	Leig;	j	STEM_SLICER
	f	Ljava/util/Map;	k	STEM_SHAPES
	f	Ljava/util/Map;	l	shapesCache
c	cst	net/minecraft/world/level/block/BigDripleafStemBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lakq;Lasc;Lgw;Ldfj;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcpb;Lgw;Ldfj;)Lcjf;	a	getCloneItemStack
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcpv;Lasc;Lgw;Ldfj;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcpw;Lgw;Leam;Lha;)Z	a	place
		p	0		world
		p	1		pos
		p	2		fluidState
		p	3		direction
	m	(Lcpy;Lgw;Ldfj;)Z	a	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldfj;Lakq;Lgw;Lasc;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpy;Lgw;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldfj;)Leam;	c_	getFluidState
		p	1		state
	f	Leig;	a	NORTH_SHAPE
	f	Leig;	b	SOUTH_SHAPE
	f	Leig;	c	EAST_SHAPE
	f	Leig;	d	WEST_SHAPE
	f	Ldga;	e	WATERLOGGED
	f	I	f	STEM_WIDTH
c	cst$1	net/minecraft/world/level/block/BigDripleafStemBlock$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	csu	net/minecraft/world/level/block/BlastFurnaceBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lcpv;Ldfj;Ldcx;)Ldcw;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Lcpv;Lgw;Lcbu;)V	a	openContainer
		p	1		world
		p	2		pos
		p	3		player
	m	(Ldfj;Lcpv;Lgw;Lasc;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lgw;Ldfj;)Ldcv;	a	newBlockEntity
		p	1		pos
		p	2		state
c	csv	net/minecraft/world/level/block/Block
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(DDDDDD)Leig;	a	box
		p	0		minX
		p	2		minY
		p	4		minZ
		p	6		maxX
		p	8		maxY
		p	10		maxZ
	m	(I)Ldfj;	a	stateById
		p	0		stateId
	m	(Lakq;Lgw;I)V	a	popExperience
		p	1		world
		p	2		pos
		p	3		size
	m	(Lakq;Lgw;Lcjf;Lbgd;)V	a	tryDropExperience
		p	1		world
		p	2		pos
		p	3		tool
		p	4		experience
	m	(Lcja;)Lcsv;	a	byItem
		p	0		item
	m	(Lcjf;Lcpb;Ljava/util/List;Lckw;)V	a	appendHoverText
		p	1		stack
		p	2		world
		p	3		tooltip
		p	4		options
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Lcpb;Lbiq;)V	a	updateEntityAfterFallOn
		p	1		world
		p	2		entity
	m	(Lcpb;Lgw;Ldfj;)Lcjf;	a	getCloneItemStack
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcpn;)Z	a	dropFromExplosion
		p	1		explosion
	m	(Lcpv;DDDLcjf;)Lbyn;	a	lambda$popResource$4
	m	(Lcpv;DDDLcjf;DDD)Lbyn;	a	lambda$popResourceFromFace$5
	m	(Lcpv;Lcbu;Lgw;Ldfj;)V	a	spawnDestroyParticles
		p	1		world
		p	2		player
		p	3		pos
		p	4		state
	m	(Lcpv;Lcbu;Lgw;Ldfj;Ldcv;Lcjf;)V	a	playerDestroy
		p	1		world
		p	2		player
		p	3		pos
		p	4		state
		p	5		blockEntity
		p	6		tool
	m	(Lcpv;Ldfj;Lgw;Lbiq;F)V	a	fallOn
		p	1		world
		p	2		state
		p	3		pos
		p	4		entity
		p	5		fallDistance
	m	(Lcpv;Lgw;Lcjf;)V	a	popResource
		p	0		world
		p	1		pos
		p	2		stack
	m	(Lcpv;Lgw;Lcpn;)V	a	wasExploded
		p	1		world
		p	2		pos
		p	3		explosion
	m	(Lcpv;Lgw;Ldfj;Lbiq;)V	a	stepOn
		p	1		world
		p	2		pos
		p	3		state
		p	4		entity
	m	(Lcpv;Lgw;Ldfj;Lbjg;Lcjf;)V	a	setPlacedBy
		p	1		world
		p	2		pos
		p	3		state
		p	4		placer
		p	5		itemStack
	m	(Lcpv;Lgw;Ldfj;Lcbu;)V	a	playerWillDestroy
		p	1		world
		p	2		pos
		p	3		state
		p	4		player
	m	(Lcpv;Lgw;Lha;Lcjf;)V	a	popResourceFromFace
		p	0		world
		p	1		pos
		p	2		direction
		p	3		stack
	m	(Lcpv;Ljava/util/function/Supplier;Lcjf;)V	a	popResource
		p	0		world
		p	1		itemEntitySupplier
		p	2		stack
	m	(Lcpw;Lgw;Lcjf;)V	a	lambda$dropResources$2
		p	2		stack
	m	(Lcpw;Lgw;Ldfj;)V	a	destroy
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcpy;Lgw;Lha;)Z	a	canSupportCenter
		p	0		world
		p	1		pos
		p	2		side
	m	(Ldfj;)Z	a	isPossibleToRespawnInThis
		p	1		state
	m	(Ldfj;Lakq;Lgw;Ldcv;)Ljava/util/List;	a	getDrops
		p	0		state
		p	1		world
		p	2		pos
		p	3		blockEntity
	m	(Ldfj;Lakq;Lgw;Ldcv;Lbiq;Lcjf;)Ljava/util/List;	a	getDrops
		p	0		state
		p	1		world
		p	2		pos
		p	3		blockEntity
		p	4		entity
		p	5		stack
	m	(Ldfj;Lcpb;Lgw;Lha;Lgw;)Z	a	shouldRenderFace
		p	0		state
		p	1		world
		p	2		pos
		p	3		side
		p	4		otherPos
	m	(Ldfj;Lcpv;Lgw;Lasc;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lcpv;Lgw;Lcqt$c;)V	a	handlePrecipitation
		p	1		state
		p	2		world
		p	3		pos
		p	4		precipitation
	m	(Ldfj;Lcpv;Lgw;Ldcv;Lbiq;Lcjf;)V	a	dropResources
		p	0		state
		p	1		world
		p	2		pos
		p	3		blockEntity
		p	4		entity
		p	5		tool
	m	(Ldfj;Lcpw;Lgw;Ldcv;)V	a	dropResources
		p	0		state
		p	1		world
		p	2		pos
		p	3		blockEntity
	m	(Ldfj;Ldfj;Lcpw;Lgw;)Ldfj;	a	pushEntitiesUp
		p	0		from
		p	1		to
		p	2		world
		p	3		pos
	m	(Ldfj;Ldfj;Lcpw;Lgw;I)V	a	updateOrDestroy
		p	0		state
		p	1		newState
		p	2		world
		p	3		pos
		p	4		flags
	m	(Ldfj;Ldfj;Lcpw;Lgw;II)V	a	updateOrDestroy
		p	0		state
		p	1		newState
		p	2		world
		p	3		pos
		p	4		flags
		p	5		maxUpdateDepth
	m	(Ldfj;Ldfj;Ldgm;)Ldfj;	a	copyProperty
		p	0		source
		p	1		target
		p	2		property
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Leig;)Z	a	isShapeFullBlock
		p	0		shape
	m	(Leig;Lha;)Z	a	isFaceFull
		p	0		shape
		p	1		side
	m	(Ljava/util/function/Function;)Lcom/google/common/collect/ImmutableMap;	a	getShapeForEachState
		p	1		stateToShape
	m	(Lcpv;Lgw;Lcjf;)V	b	lambda$dropResources$3
		p	2		stack
	m	(Ldfj;Lcpw;Lgw;)Ldfj;	b	updateFromNeighbourShapes
		p	0		state
		p	1		world
		p	2		pos
	m	(Lcpb;Lgw;)Z	c	canSupportRigidBlock
		p	0		world
		p	1		pos
	m	(Lcpv;Lgw;Lcjf;)V	c	lambda$dropResources$1
		p	2		stack
	m	(Ldfj;Lcpb;Lgw;)Z	c	propagatesSkylightDown
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lcpv;Lgw;)V	c	dropResources
		p	0		state
		p	1		world
		p	2		pos
	m	()F	d	getExplosionResistance
	m	()Lty;	e	getName
	m	(Ldfj;)Z	e_	isRandomlyTicking
		p	1		state
	m	()Ljava/lang/String;	f	getDescriptionId
	m	()F	h	getFriction
	m	()F	i	getSpeedFactor
	m	(Ldfj;)I	i	getId
		p	0		state
	m	()F	j	getJumpFactor
	m	(Ldfj;)Z	j	isExceptionForConnection
		p	0		state
	m	()Lcja;	k	asItem
	m	(Ldfj;)V	k	registerDefaultState
		p	1		state
	m	()Ldfk;	l	getStateDefinition
	m	(Ldfj;)Ldfj;	l	withPropertiesOf
		p	1		state
	m	(Ldfj;)Ldai;	m	getSoundType
		p	1		state
	m	()Ldfj;	n	defaultBlockState
	m	()Z	o	hasDynamicShape
	m	()Lcsv;	p	asBlock
	m	()Lhe$c;	q	builtInRegistryHolder
	m	()Lit/unimi/dsi/fastutil/objects/Object2ByteLinkedOpenHashMap;	u	lambda$static$0
	f	F	A	INSTANT
	f	I	B	UPDATE_LIMIT
	f	Ldfk;	C	stateDefinition
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lhe$c;	b	builtInRegistryHolder
	f	Lcom/google/common/cache/LoadingCache;	c	SHAPE_FULL_BLOCK_CACHE
	f	Ldfj;	d	defaultBlockState
	f	Ljava/lang/String;	e	descriptionId
	f	Lcja;	f	item
	f	I	g	CACHE_SIZE
	f	Ljava/lang/ThreadLocal;	h	OCCLUSION_CACHE
	f	Lhk;	o	BLOCK_STATE_REGISTRY
	f	I	p	UPDATE_NEIGHBORS
	f	I	q	UPDATE_CLIENTS
	f	I	r	UPDATE_INVISIBLE
	f	I	s	UPDATE_IMMEDIATE
	f	I	t	UPDATE_KNOWN_SHAPE
	f	I	u	UPDATE_SUPPRESS_DROPS
	f	I	v	UPDATE_MOVE_BY_PISTON
	f	I	w	UPDATE_NONE
	f	I	x	UPDATE_ALL
	f	I	y	UPDATE_ALL_IMMEDIATE
	f	F	z	INDESTRUCTIBLE
c	csv$1	net/minecraft/world/level/block/Block$1
	m	(Leig;)Ljava/lang/Boolean;	a	load
c	csv$2	net/minecraft/world/level/block/Block$2
c	csv$a	net/minecraft/world/level/block/Block$BlockStatePairKey
	m	(Ldfj;Ldfj;Lha;)V	<init>	<init>
		p	1		self
		p	2		other
		p	3		facing
	f	Ldfj;	a	first
	f	Ldfj;	b	second
	f	Lha;	c	direction
c	csw	net/minecraft/world/level/block/Blocks
	m	(Ldfj;)I	A	lambda$static$26
		p	0		state
	m	(Ldfj;)I	B	lambda$static$25
		p	0		state
	m	(Ldfj;)I	C	lambda$static$20
		p	0		state
	m	(Ldfj;)I	D	lambda$static$19
		p	0		state
	m	(Ldfj;)I	E	lambda$static$18
		p	0		state
	m	(Ldfj;)I	F	lambda$static$17
		p	0		state
	m	(Ldfj;)I	G	lambda$static$16
		p	0		state
	m	(Ldfj;)I	H	lambda$static$12
		p	0		state
	m	(Ldfj;)I	I	lambda$static$11
		p	0		state
	m	(Ldfj;)I	J	lambda$static$10
		p	0		state
	m	(Ldfj;)I	K	lambda$static$9
		p	0		state
	m	(Ldfj;)I	L	lambda$static$8
		p	0		state
	m	(Ldfj;)I	M	lambda$static$7
		p	0		state
	m	()V	a	rebuildCache
	m	(I)Ljava/util/function/ToIntFunction;	a	litBlockEmission
		p	0		litLevel
	m	(ILdfj;)I	a	lambda$litBlockEmission$0
		p	1		state
	m	(Laew;Lcsv;)Lcsv;	a	register
		p	0		id
		p	1		block
	m	(Lcht;)Lcso;	a	bed
		p	0		color
	m	(Lcht;Ldfi$d;)Lczu;	a	shulkerBox
		p	0		color
		p	1		settings
	m	(Lcht;Ldfj;)Leaq;	a	lambda$bed$1
		p	1		state
	m	(Lcsv;[Lcea;)Lcvu;	a	flowerPot
		p	0		flower
		p	1		requiredFeatures
	m	(Ldai;)Lcxc;	a	leaves
		p	0		soundGroup
	m	(Ldfj;)I	a	lambda$static$55
		p	0		state
	m	(Ldfj;Lcpb;Lgw;)Z	a	always
		p	0		state
		p	1		world
		p	2		pos
	m	(Ldfj;Lcpb;Lgw;Lbiu;)Ljava/lang/Boolean;	a	never
		p	0		state
		p	1		world
		p	2		pos
		p	3		type
	m	(Ldfy;[Lcea;)Lcte;	a	woodenButton
		p	0		blockSetType
		p	1		requiredFeatures
	m	(Leaq;)Lcsv;	a	netherStem
		p	0		mapColor
	m	(Leaq;Ldfj;)Leaq;	a	lambda$netherStem$4
		p	1		state
	m	(Leaq;Leaq;)Lczg;	a	log
		p	0		topMapColor
		p	1		sideMapColor
	m	(Leaq;Leaq;Ldai;)Lczg;	a	log
		p	0		topMapColor
		p	1		sideMapColor
		p	2		soundGroup
	m	(Leaq;Leaq;Ldfj;)Leaq;	a	lambda$log$3
		p	2		state
	m	(Ljava/lang/String;Lcsv;)Lcsv;	a	register
		p	0		id
		p	1		block
	m	(Z)Ldfc;	a	pistonBase
		p	0		sticky
	m	()Lcte;	b	stoneButton
	m	(Lcht;)Ldan;	b	stainedGlass
		p	0		color
	m	(Ldfj;)I	b	lambda$static$54
		p	0		state
	m	(Ldfj;Lcpb;Lgw;)Z	b	never
		p	0		state
		p	1		world
		p	2		pos
	m	(Ldfj;Lcpb;Lgw;Lbiu;)Ljava/lang/Boolean;	b	always
		p	0		state
		p	1		world
		p	2		pos
		p	3		type
	m	(Leaq;)Lctj;	b	candle
		p	0		color
	m	(Leaq;Leaq;Ldfj;)Leaq;	b	lambda$log$2
		p	2		state
	m	()Lcja;	c	lambda$static$24
	m	(Ldfj;)I	c	lambda$static$53
		p	0		state
	m	(Ldfj;Lcpb;Lgw;)Z	c	lambda$static$51
		p	0		state
		p	1		world
		p	2		pos
	m	(Ldfj;Lcpb;Lgw;Lbiu;)Ljava/lang/Boolean;	c	ocelotOrParrot
		p	0		state
		p	1		world
		p	2		pos
		p	3		type
	m	()Lcja;	d	lambda$static$23
	m	(Ldfj;)I	d	lambda$static$52
		p	0		state
	m	(Ldfj;Lcpb;Lgw;)Z	d	lambda$static$14
		p	0		state
		p	1		world
		p	2		pos
	m	(Ldfj;Lcpb;Lgw;Lbiu;)Z	d	lambda$static$38
		p	0		state
		p	1		world
		p	2		pos
		p	3		entityType
	m	()Lcja;	e	lambda$static$22
	m	(Ldfj;)I	e	lambda$static$50
		p	0		state
	m	(Ldfj;Lcpb;Lgw;)Z	e	lambda$pistonBase$6
		p	0		state
		p	1		world
		p	2		pos
	m	(Ldfj;Lcpb;Lgw;Lbiu;)Z	e	lambda$static$36
		p	0		state
		p	1		world
		p	2		pos
		p	3		entityType
	m	()Lcja;	f	lambda$static$21
	m	(Ldfj;)I	f	lambda$static$49
		p	0		state
	m	(Ldfj;Lcpb;Lgw;)Z	f	lambda$shulkerBox$5
		p	0		state
		p	1		world
		p	2		pos
	m	(Ldfj;Lcpb;Lgw;Lbiu;)Z	f	lambda$static$15
		p	0		state
		p	1		world
		p	2		pos
		p	3		entityType
	m	()Ldcx;	g	lambda$static$13
	m	(Ldfj;)I	g	lambda$static$48
		p	0		state
	m	(Ldfj;)I	h	lambda$static$47
		p	0		state
	m	(Ldfj;)I	i	lambda$static$46
		p	0		state
	m	(Ldfj;)I	j	lambda$static$45
		p	0		state
	m	(Ldfj;)I	k	lambda$static$44
		p	0		state
	m	(Ldfj;)I	l	lambda$static$43
		p	0		state
	m	(Ldfj;)I	m	lambda$static$42
		p	0		state
	m	(Ldfj;)I	n	lambda$static$41
		p	0		state
	m	(Ldfj;)I	o	lambda$static$40
		p	0		state
	m	(Ldfj;)I	p	lambda$static$39
		p	0		state
	m	(Ldfj;)I	q	lambda$static$37
		p	0		state
	m	(Ldfj;)I	r	lambda$static$35
		p	0		state
	m	(Ldfj;)I	s	lambda$static$34
		p	0		state
	m	(Ldfj;)I	t	lambda$static$33
		p	0		state
	m	(Ldfj;)I	u	lambda$static$32
		p	0		state
	m	(Ldfj;)I	v	lambda$static$31
		p	0		state
	m	(Ldfj;)I	w	lambda$static$30
		p	0		state
	m	(Ldfj;)I	x	lambda$static$29
		p	0		state
	m	(Ldfj;)I	y	lambda$static$28
		p	0		state
	m	(Ldfj;)I	z	lambda$static$27
		p	0		state
	f	Lcsv;	A	JUNGLE_SAPLING
	f	Lcsv;	B	ACACIA_SAPLING
	f	Lcsv;	C	CHERRY_SAPLING
	f	Lcsv;	D	DARK_OAK_SAPLING
	f	Lcsv;	E	MANGROVE_PROPAGULE
	f	Lcsv;	F	BEDROCK
	f	Lcsv;	G	WATER
	f	Lcsv;	H	LAVA
	f	Lcsv;	I	SAND
	f	Lcsv;	J	SUSPICIOUS_SAND
	f	Lcsv;	K	RED_SAND
	f	Lcsv;	L	GRAVEL
	f	Lcsv;	M	SUSPICIOUS_GRAVEL
	f	Lcsv;	N	GOLD_ORE
	f	Lcsv;	O	DEEPSLATE_GOLD_ORE
	f	Lcsv;	P	IRON_ORE
	f	Lcsv;	Q	DEEPSLATE_IRON_ORE
	f	Lcsv;	R	COAL_ORE
	f	Lcsv;	S	DEEPSLATE_COAL_ORE
	f	Lcsv;	T	NETHER_GOLD_ORE
	f	Lcsv;	U	OAK_LOG
	f	Lcsv;	V	SPRUCE_LOG
	f	Lcsv;	W	BIRCH_LOG
	f	Lcsv;	X	JUNGLE_LOG
	f	Lcsv;	Y	ACACIA_LOG
	f	Lcsv;	Z	CHERRY_LOG
	f	Lcsv;	aA	STRIPPED_ACACIA_WOOD
	f	Lcsv;	aB	STRIPPED_CHERRY_WOOD
	f	Lcsv;	aC	STRIPPED_DARK_OAK_WOOD
	f	Lcsv;	aD	STRIPPED_MANGROVE_WOOD
	f	Lcsv;	aE	OAK_LEAVES
	f	Lcsv;	aF	SPRUCE_LEAVES
	f	Lcsv;	aG	BIRCH_LEAVES
	f	Lcsv;	aH	JUNGLE_LEAVES
	f	Lcsv;	aI	ACACIA_LEAVES
	f	Lcsv;	aJ	CHERRY_LEAVES
	f	Lcsv;	aK	DARK_OAK_LEAVES
	f	Lcsv;	aL	MANGROVE_LEAVES
	f	Lcsv;	a	AIR
	f	Lcsv;	aM	AZALEA_LEAVES
	f	Lcsv;	aN	FLOWERING_AZALEA_LEAVES
	f	Lcsv;	aO	SPONGE
	f	Lcsv;	aP	WET_SPONGE
	f	Lcsv;	aQ	GLASS
	f	Lcsv;	aR	LAPIS_ORE
	f	Lcsv;	aS	DEEPSLATE_LAPIS_ORE
	f	Lcsv;	aT	LAPIS_BLOCK
	f	Lcsv;	aU	DISPENSER
	f	Lcsv;	aV	SANDSTONE
	f	Lcsv;	aW	CHISELED_SANDSTONE
	f	Lcsv;	aX	CUT_SANDSTONE
	f	Lcsv;	aY	NOTE_BLOCK
	f	Lcsv;	aZ	WHITE_BED
	f	Lcsv;	aa	DARK_OAK_LOG
	f	Lcsv;	ab	MANGROVE_LOG
	f	Lcsv;	ac	MANGROVE_ROOTS
	f	Lcsv;	ad	MUDDY_MANGROVE_ROOTS
	f	Lcsv;	ae	BAMBOO_BLOCK
	f	Lcsv;	af	STRIPPED_SPRUCE_LOG
	f	Lcsv;	ag	STRIPPED_BIRCH_LOG
	f	Lcsv;	ah	STRIPPED_JUNGLE_LOG
	f	Lcsv;	ai	STRIPPED_ACACIA_LOG
	f	Lcsv;	aj	STRIPPED_CHERRY_LOG
	f	Lcsv;	ak	STRIPPED_DARK_OAK_LOG
	f	Lcsv;	al	STRIPPED_OAK_LOG
	f	Lcsv;	am	STRIPPED_MANGROVE_LOG
	f	Lcsv;	an	STRIPPED_BAMBOO_BLOCK
	f	Lcsv;	ao	OAK_WOOD
	f	Lcsv;	ap	SPRUCE_WOOD
	f	Lcsv;	aq	BIRCH_WOOD
	f	Lcsv;	ar	JUNGLE_WOOD
	f	Lcsv;	as	ACACIA_WOOD
	f	Lcsv;	at	CHERRY_WOOD
	f	Lcsv;	au	DARK_OAK_WOOD
	f	Lcsv;	av	MANGROVE_WOOD
	f	Lcsv;	aw	STRIPPED_OAK_WOOD
	f	Lcsv;	ax	STRIPPED_SPRUCE_WOOD
	f	Lcsv;	ay	STRIPPED_BIRCH_WOOD
	f	Lcsv;	az	STRIPPED_JUNGLE_WOOD
	f	Lcsv;	bA	WHITE_WOOL
	f	Lcsv;	bB	ORANGE_WOOL
	f	Lcsv;	bC	MAGENTA_WOOL
	f	Lcsv;	bD	LIGHT_BLUE_WOOL
	f	Lcsv;	bE	YELLOW_WOOL
	f	Lcsv;	bF	LIME_WOOL
	f	Lcsv;	bG	PINK_WOOL
	f	Lcsv;	bH	GRAY_WOOL
	f	Lcsv;	bI	LIGHT_GRAY_WOOL
	f	Lcsv;	bJ	CYAN_WOOL
	f	Lcsv;	bK	PURPLE_WOOL
	f	Lcsv;	bL	BLUE_WOOL
	f	Lcsv;	b	STONE
	f	Lcsv;	bM	BROWN_WOOL
	f	Lcsv;	bN	GREEN_WOOL
	f	Lcsv;	bO	RED_WOOL
	f	Lcsv;	bP	BLACK_WOOL
	f	Lcsv;	bQ	MOVING_PISTON
	f	Lcsv;	bR	DANDELION
	f	Lcsv;	bS	TORCHFLOWER
	f	Lcsv;	bT	POPPY
	f	Lcsv;	bU	BLUE_ORCHID
	f	Lcsv;	bV	ALLIUM
	f	Lcsv;	bW	AZURE_BLUET
	f	Lcsv;	bX	RED_TULIP
	f	Lcsv;	bY	ORANGE_TULIP
	f	Lcsv;	bZ	WHITE_TULIP
	f	Lcsv;	ba	ORANGE_BED
	f	Lcsv;	bb	MAGENTA_BED
	f	Lcsv;	bc	LIGHT_BLUE_BED
	f	Lcsv;	bd	YELLOW_BED
	f	Lcsv;	be	LIME_BED
	f	Lcsv;	bf	PINK_BED
	f	Lcsv;	bg	GRAY_BED
	f	Lcsv;	bh	LIGHT_GRAY_BED
	f	Lcsv;	bi	CYAN_BED
	f	Lcsv;	bj	PURPLE_BED
	f	Lcsv;	bk	BLUE_BED
	f	Lcsv;	bl	BROWN_BED
	f	Lcsv;	bm	GREEN_BED
	f	Lcsv;	bn	RED_BED
	f	Lcsv;	bo	BLACK_BED
	f	Lcsv;	bp	POWERED_RAIL
	f	Lcsv;	bq	DETECTOR_RAIL
	f	Lcsv;	br	STICKY_PISTON
	f	Lcsv;	bs	COBWEB
	f	Lcsv;	bt	GRASS
	f	Lcsv;	bu	FERN
	f	Lcsv;	bv	DEAD_BUSH
	f	Lcsv;	bw	SEAGRASS
	f	Lcsv;	bx	TALL_SEAGRASS
	f	Lcsv;	by	PISTON
	f	Lcsv;	bz	PISTON_HEAD
	f	Lcsv;	cA	CRAFTING_TABLE
	f	Lcsv;	cB	WHEAT
	f	Lcsv;	cC	FARMLAND
	f	Lcsv;	cD	FURNACE
	f	Lcsv;	cE	OAK_SIGN
	f	Lcsv;	cF	SPRUCE_SIGN
	f	Lcsv;	cG	BIRCH_SIGN
	f	Lcsv;	cH	ACACIA_SIGN
	f	Lcsv;	cI	CHERRY_SIGN
	f	Lcsv;	cJ	JUNGLE_SIGN
	f	Lcsv;	cK	DARK_OAK_SIGN
	f	Lcsv;	cL	MANGROVE_SIGN
	f	Lcsv;	c	GRANITE
	f	Lcsv;	cM	BAMBOO_SIGN
	f	Lcsv;	cN	OAK_DOOR
	f	Lcsv;	cO	LADDER
	f	Lcsv;	cP	RAIL
	f	Lcsv;	cQ	COBBLESTONE_STAIRS
	f	Lcsv;	cR	OAK_WALL_SIGN
	f	Lcsv;	cS	SPRUCE_WALL_SIGN
	f	Lcsv;	cT	BIRCH_WALL_SIGN
	f	Lcsv;	cU	ACACIA_WALL_SIGN
	f	Lcsv;	cV	CHERRY_WALL_SIGN
	f	Lcsv;	cW	JUNGLE_WALL_SIGN
	f	Lcsv;	cX	DARK_OAK_WALL_SIGN
	f	Lcsv;	cY	MANGROVE_WALL_SIGN
	f	Lcsv;	cZ	BAMBOO_WALL_SIGN
	f	Lcsv;	ca	PINK_TULIP
	f	Lcsv;	cb	OXEYE_DAISY
	f	Lcsv;	cc	CORNFLOWER
	f	Lcsv;	cd	WITHER_ROSE
	f	Lcsv;	ce	LILY_OF_THE_VALLEY
	f	Lcsv;	cf	BROWN_MUSHROOM
	f	Lcsv;	cg	RED_MUSHROOM
	f	Lcsv;	ch	GOLD_BLOCK
	f	Lcsv;	ci	IRON_BLOCK
	f	Lcsv;	cj	BRICKS
	f	Lcsv;	ck	TNT
	f	Lcsv;	cl	BOOKSHELF
	f	Lcsv;	cm	CHISELED_BOOKSHELF
	f	Lcsv;	cn	MOSSY_COBBLESTONE
	f	Lcsv;	co	OBSIDIAN
	f	Lcsv;	cp	TORCH
	f	Lcsv;	cq	WALL_TORCH
	f	Lcsv;	cr	FIRE
	f	Lcsv;	cs	SOUL_FIRE
	f	Lcsv;	ct	SPAWNER
	f	Lcsv;	cu	OAK_STAIRS
	f	Lcsv;	cv	CHEST
	f	Lcsv;	cw	REDSTONE_WIRE
	f	Lcsv;	cx	DIAMOND_ORE
	f	Lcsv;	cy	DEEPSLATE_DIAMOND_ORE
	f	Lcsv;	cz	DIAMOND_BLOCK
	f	Lcsv;	dA	SPRUCE_PRESSURE_PLATE
	f	Lcsv;	dB	BIRCH_PRESSURE_PLATE
	f	Lcsv;	dC	JUNGLE_PRESSURE_PLATE
	f	Lcsv;	dD	ACACIA_PRESSURE_PLATE
	f	Lcsv;	dE	CHERRY_PRESSURE_PLATE
	f	Lcsv;	dF	DARK_OAK_PRESSURE_PLATE
	f	Lcsv;	dG	MANGROVE_PRESSURE_PLATE
	f	Lcsv;	dH	BAMBOO_PRESSURE_PLATE
	f	Lcsv;	dI	REDSTONE_ORE
	f	Lcsv;	dJ	DEEPSLATE_REDSTONE_ORE
	f	Lcsv;	dK	REDSTONE_TORCH
	f	Lcsv;	dL	REDSTONE_WALL_TORCH
	f	Lcsv;	d	POLISHED_GRANITE
	f	Lcsv;	dM	STONE_BUTTON
	f	Lcsv;	dN	SNOW
	f	Lcsv;	dO	ICE
	f	Lcsv;	dP	SNOW_BLOCK
	f	Lcsv;	dQ	CACTUS
	f	Lcsv;	dR	CLAY
	f	Lcsv;	dS	SUGAR_CANE
	f	Lcsv;	dT	JUKEBOX
	f	Lcsv;	dU	OAK_FENCE
	f	Lcsv;	dV	PUMPKIN
	f	Lcsv;	dW	NETHERRACK
	f	Lcsv;	dX	SOUL_SAND
	f	Lcsv;	dY	SOUL_SOIL
	f	Lcsv;	dZ	BASALT
	f	Lcsv;	da	OAK_HANGING_SIGN
	f	Lcsv;	db	SPRUCE_HANGING_SIGN
	f	Lcsv;	dc	BIRCH_HANGING_SIGN
	f	Lcsv;	dd	ACACIA_HANGING_SIGN
	f	Lcsv;	de	CHERRY_HANGING_SIGN
	f	Lcsv;	df	JUNGLE_HANGING_SIGN
	f	Lcsv;	dg	DARK_OAK_HANGING_SIGN
	f	Lcsv;	dh	CRIMSON_HANGING_SIGN
	f	Lcsv;	di	WARPED_HANGING_SIGN
	f	Lcsv;	dj	MANGROVE_HANGING_SIGN
	f	Lcsv;	dk	BAMBOO_HANGING_SIGN
	f	Lcsv;	dl	OAK_WALL_HANGING_SIGN
	f	Lcsv;	dm	SPRUCE_WALL_HANGING_SIGN
	f	Lcsv;	dn	BIRCH_WALL_HANGING_SIGN
	f	Lcsv;	do	ACACIA_WALL_HANGING_SIGN
	f	Lcsv;	dp	CHERRY_WALL_HANGING_SIGN
	f	Lcsv;	dq	JUNGLE_WALL_HANGING_SIGN
	f	Lcsv;	dr	DARK_OAK_WALL_HANGING_SIGN
	f	Lcsv;	ds	MANGROVE_WALL_HANGING_SIGN
	f	Lcsv;	dt	CRIMSON_WALL_HANGING_SIGN
	f	Lcsv;	du	WARPED_WALL_HANGING_SIGN
	f	Lcsv;	dv	BAMBOO_WALL_HANGING_SIGN
	f	Lcsv;	dw	LEVER
	f	Lcsv;	dx	STONE_PRESSURE_PLATE
	f	Lcsv;	dy	IRON_DOOR
	f	Lcsv;	dz	OAK_PRESSURE_PLATE
	f	Lcsv;	eA	SPRUCE_TRAPDOOR
	f	Lcsv;	eB	BIRCH_TRAPDOOR
	f	Lcsv;	eC	JUNGLE_TRAPDOOR
	f	Lcsv;	eD	ACACIA_TRAPDOOR
	f	Lcsv;	eE	CHERRY_TRAPDOOR
	f	Lcsv;	eF	DARK_OAK_TRAPDOOR
	f	Lcsv;	eG	MANGROVE_TRAPDOOR
	f	Lcsv;	eH	BAMBOO_TRAPDOOR
	f	Lcsv;	eI	STONE_BRICKS
	f	Lcsv;	eJ	MOSSY_STONE_BRICKS
	f	Lcsv;	eK	CRACKED_STONE_BRICKS
	f	Lcsv;	eL	CHISELED_STONE_BRICKS
	f	Lcsv;	e	DIORITE
	f	Lcsv;	eM	PACKED_MUD
	f	Lcsv;	eN	MUD_BRICKS
	f	Lcsv;	eO	INFESTED_STONE
	f	Lcsv;	eP	INFESTED_COBBLESTONE
	f	Lcsv;	eQ	INFESTED_STONE_BRICKS
	f	Lcsv;	eR	INFESTED_MOSSY_STONE_BRICKS
	f	Lcsv;	eS	INFESTED_CRACKED_STONE_BRICKS
	f	Lcsv;	eT	INFESTED_CHISELED_STONE_BRICKS
	f	Lcsv;	eU	BROWN_MUSHROOM_BLOCK
	f	Lcsv;	eV	RED_MUSHROOM_BLOCK
	f	Lcsv;	eW	MUSHROOM_STEM
	f	Lcsv;	eX	IRON_BARS
	f	Lcsv;	eY	CHAIN
	f	Lcsv;	eZ	GLASS_PANE
	f	Lcsv;	ea	POLISHED_BASALT
	f	Lcsv;	eb	SOUL_TORCH
	f	Lcsv;	ec	SOUL_WALL_TORCH
	f	Lcsv;	ed	GLOWSTONE
	f	Lcsv;	ee	NETHER_PORTAL
	f	Lcsv;	ef	CARVED_PUMPKIN
	f	Lcsv;	eg	JACK_O_LANTERN
	f	Lcsv;	eh	CAKE
	f	Lcsv;	ei	REPEATER
	f	Lcsv;	ej	WHITE_STAINED_GLASS
	f	Lcsv;	ek	ORANGE_STAINED_GLASS
	f	Lcsv;	el	MAGENTA_STAINED_GLASS
	f	Lcsv;	em	LIGHT_BLUE_STAINED_GLASS
	f	Lcsv;	en	YELLOW_STAINED_GLASS
	f	Lcsv;	eo	LIME_STAINED_GLASS
	f	Lcsv;	ep	PINK_STAINED_GLASS
	f	Lcsv;	eq	GRAY_STAINED_GLASS
	f	Lcsv;	er	LIGHT_GRAY_STAINED_GLASS
	f	Lcsv;	es	CYAN_STAINED_GLASS
	f	Lcsv;	et	PURPLE_STAINED_GLASS
	f	Lcsv;	eu	BLUE_STAINED_GLASS
	f	Lcsv;	ev	BROWN_STAINED_GLASS
	f	Lcsv;	ew	GREEN_STAINED_GLASS
	f	Lcsv;	ex	RED_STAINED_GLASS
	f	Lcsv;	ey	BLACK_STAINED_GLASS
	f	Lcsv;	ez	OAK_TRAPDOOR
	f	Lcsv;	fA	DRAGON_EGG
	f	Lcsv;	fB	REDSTONE_LAMP
	f	Lcsv;	fC	COCOA
	f	Lcsv;	fD	SANDSTONE_STAIRS
	f	Lcsv;	fE	EMERALD_ORE
	f	Lcsv;	fF	DEEPSLATE_EMERALD_ORE
	f	Lcsv;	fG	ENDER_CHEST
	f	Lcsv;	fH	TRIPWIRE_HOOK
	f	Lcsv;	fI	TRIPWIRE
	f	Lcsv;	fJ	EMERALD_BLOCK
	f	Lcsv;	fK	SPRUCE_STAIRS
	f	Lcsv;	fL	BIRCH_STAIRS
	f	Lcsv;	f	POLISHED_DIORITE
	f	Lcsv;	fM	JUNGLE_STAIRS
	f	Lcsv;	fN	COMMAND_BLOCK
	f	Lcsv;	fO	BEACON
	f	Lcsv;	fP	COBBLESTONE_WALL
	f	Lcsv;	fQ	MOSSY_COBBLESTONE_WALL
	f	Lcsv;	fR	FLOWER_POT
	f	Lcsv;	fS	POTTED_TORCHFLOWER
	f	Lcsv;	fT	POTTED_OAK_SAPLING
	f	Lcsv;	fU	POTTED_SPRUCE_SAPLING
	f	Lcsv;	fV	POTTED_BIRCH_SAPLING
	f	Lcsv;	fW	POTTED_JUNGLE_SAPLING
	f	Lcsv;	fX	POTTED_ACACIA_SAPLING
	f	Lcsv;	fY	POTTED_CHERRY_SAPLING
	f	Lcsv;	fZ	POTTED_DARK_OAK_SAPLING
	f	Lcsv;	fa	MELON
	f	Lcsv;	fb	ATTACHED_PUMPKIN_STEM
	f	Lcsv;	fc	ATTACHED_MELON_STEM
	f	Lcsv;	fd	PUMPKIN_STEM
	f	Lcsv;	fe	MELON_STEM
	f	Lcsv;	ff	VINE
	f	Lcsv;	fg	GLOW_LICHEN
	f	Lcsv;	fh	OAK_FENCE_GATE
	f	Lcsv;	fi	BRICK_STAIRS
	f	Lcsv;	fj	STONE_BRICK_STAIRS
	f	Lcsv;	fk	MUD_BRICK_STAIRS
	f	Lcsv;	fl	MYCELIUM
	f	Lcsv;	fm	LILY_PAD
	f	Lcsv;	fn	NETHER_BRICKS
	f	Lcsv;	fo	NETHER_BRICK_FENCE
	f	Lcsv;	fp	NETHER_BRICK_STAIRS
	f	Lcsv;	fq	NETHER_WART
	f	Lcsv;	fr	ENCHANTING_TABLE
	f	Lcsv;	fs	BREWING_STAND
	f	Lcsv;	ft	CAULDRON
	f	Lcsv;	fu	WATER_CAULDRON
	f	Lcsv;	fv	LAVA_CAULDRON
	f	Lcsv;	fw	POWDER_SNOW_CAULDRON
	f	Lcsv;	fx	END_PORTAL
	f	Lcsv;	fy	END_PORTAL_FRAME
	f	Lcsv;	fz	END_STONE
	f	Lcsv;	gA	CHERRY_BUTTON
	f	Lcsv;	gB	DARK_OAK_BUTTON
	f	Lcsv;	gC	MANGROVE_BUTTON
	f	Lcsv;	gD	BAMBOO_BUTTON
	f	Lcsv;	gE	SKELETON_SKULL
	f	Lcsv;	gF	SKELETON_WALL_SKULL
	f	Lcsv;	gG	WITHER_SKELETON_SKULL
	f	Lcsv;	gH	WITHER_SKELETON_WALL_SKULL
	f	Lcsv;	gI	ZOMBIE_HEAD
	f	Lcsv;	gJ	ZOMBIE_WALL_HEAD
	f	Lcsv;	gK	PLAYER_HEAD
	f	Lcsv;	gL	PLAYER_WALL_HEAD
	f	Lcsv;	g	ANDESITE
	f	Lcsv;	gM	CREEPER_HEAD
	f	Lcsv;	gN	CREEPER_WALL_HEAD
	f	Lcsv;	gO	DRAGON_HEAD
	f	Lcsv;	gP	DRAGON_WALL_HEAD
	f	Lcsv;	gQ	PIGLIN_HEAD
	f	Lcsv;	gR	PIGLIN_WALL_HEAD
	f	Lcsv;	gS	ANVIL
	f	Lcsv;	gT	CHIPPED_ANVIL
	f	Lcsv;	gU	DAMAGED_ANVIL
	f	Lcsv;	gV	TRAPPED_CHEST
	f	Lcsv;	gW	LIGHT_WEIGHTED_PRESSURE_PLATE
	f	Lcsv;	gX	HEAVY_WEIGHTED_PRESSURE_PLATE
	f	Lcsv;	gY	COMPARATOR
	f	Lcsv;	gZ	DAYLIGHT_DETECTOR
	f	Lcsv;	ga	POTTED_MANGROVE_PROPAGULE
	f	Lcsv;	gb	POTTED_FERN
	f	Lcsv;	gc	POTTED_DANDELION
	f	Lcsv;	gd	POTTED_POPPY
	f	Lcsv;	ge	POTTED_BLUE_ORCHID
	f	Lcsv;	gf	POTTED_ALLIUM
	f	Lcsv;	gg	POTTED_AZURE_BLUET
	f	Lcsv;	gh	POTTED_RED_TULIP
	f	Lcsv;	gi	POTTED_ORANGE_TULIP
	f	Lcsv;	gj	POTTED_WHITE_TULIP
	f	Lcsv;	gk	POTTED_PINK_TULIP
	f	Lcsv;	gl	POTTED_OXEYE_DAISY
	f	Lcsv;	gm	POTTED_CORNFLOWER
	f	Lcsv;	gn	POTTED_LILY_OF_THE_VALLEY
	f	Lcsv;	go	POTTED_WITHER_ROSE
	f	Lcsv;	gp	POTTED_RED_MUSHROOM
	f	Lcsv;	gq	POTTED_BROWN_MUSHROOM
	f	Lcsv;	gr	POTTED_DEAD_BUSH
	f	Lcsv;	gs	POTTED_CACTUS
	f	Lcsv;	gt	CARROTS
	f	Lcsv;	gu	POTATOES
	f	Lcsv;	gv	OAK_BUTTON
	f	Lcsv;	gw	SPRUCE_BUTTON
	f	Lcsv;	gx	BIRCH_BUTTON
	f	Lcsv;	gy	JUNGLE_BUTTON
	f	Lcsv;	gz	ACACIA_BUTTON
	f	Lcsv;	hA	ORANGE_STAINED_GLASS_PANE
	f	Lcsv;	hB	MAGENTA_STAINED_GLASS_PANE
	f	Lcsv;	hC	LIGHT_BLUE_STAINED_GLASS_PANE
	f	Lcsv;	hD	YELLOW_STAINED_GLASS_PANE
	f	Lcsv;	hE	LIME_STAINED_GLASS_PANE
	f	Lcsv;	hF	PINK_STAINED_GLASS_PANE
	f	Lcsv;	hG	GRAY_STAINED_GLASS_PANE
	f	Lcsv;	hH	LIGHT_GRAY_STAINED_GLASS_PANE
	f	Lcsv;	hI	CYAN_STAINED_GLASS_PANE
	f	Lcsv;	hJ	PURPLE_STAINED_GLASS_PANE
	f	Lcsv;	hK	BLUE_STAINED_GLASS_PANE
	f	Lcsv;	hL	BROWN_STAINED_GLASS_PANE
	f	Lcsv;	h	POLISHED_ANDESITE
	f	Lcsv;	hM	GREEN_STAINED_GLASS_PANE
	f	Lcsv;	hN	RED_STAINED_GLASS_PANE
	f	Lcsv;	hO	BLACK_STAINED_GLASS_PANE
	f	Lcsv;	hP	ACACIA_STAIRS
	f	Lcsv;	hQ	CHERRY_STAIRS
	f	Lcsv;	hR	DARK_OAK_STAIRS
	f	Lcsv;	hS	MANGROVE_STAIRS
	f	Lcsv;	hT	BAMBOO_STAIRS
	f	Lcsv;	hU	BAMBOO_MOSAIC_STAIRS
	f	Lcsv;	hV	SLIME_BLOCK
	f	Lcsv;	hW	BARRIER
	f	Lcsv;	hX	LIGHT
	f	Lcsv;	hY	IRON_TRAPDOOR
	f	Lcsv;	hZ	PRISMARINE
	f	Lcsv;	ha	REDSTONE_BLOCK
	f	Lcsv;	hb	NETHER_QUARTZ_ORE
	f	Lcsv;	hc	HOPPER
	f	Lcsv;	hd	QUARTZ_BLOCK
	f	Lcsv;	he	CHISELED_QUARTZ_BLOCK
	f	Lcsv;	hf	QUARTZ_PILLAR
	f	Lcsv;	hg	QUARTZ_STAIRS
	f	Lcsv;	hh	ACTIVATOR_RAIL
	f	Lcsv;	hi	DROPPER
	f	Lcsv;	hj	WHITE_TERRACOTTA
	f	Lcsv;	hk	ORANGE_TERRACOTTA
	f	Lcsv;	hl	MAGENTA_TERRACOTTA
	f	Lcsv;	hm	LIGHT_BLUE_TERRACOTTA
	f	Lcsv;	hn	YELLOW_TERRACOTTA
	f	Lcsv;	ho	LIME_TERRACOTTA
	f	Lcsv;	hp	PINK_TERRACOTTA
	f	Lcsv;	hq	GRAY_TERRACOTTA
	f	Lcsv;	hr	LIGHT_GRAY_TERRACOTTA
	f	Lcsv;	hs	CYAN_TERRACOTTA
	f	Lcsv;	ht	PURPLE_TERRACOTTA
	f	Lcsv;	hu	BLUE_TERRACOTTA
	f	Lcsv;	hv	BROWN_TERRACOTTA
	f	Lcsv;	hw	GREEN_TERRACOTTA
	f	Lcsv;	hx	RED_TERRACOTTA
	f	Lcsv;	hy	BLACK_TERRACOTTA
	f	Lcsv;	hz	WHITE_STAINED_GLASS_PANE
	f	Lcsv;	iA	TERRACOTTA
	f	Lcsv;	iB	COAL_BLOCK
	f	Lcsv;	iC	PACKED_ICE
	f	Lcsv;	iD	SUNFLOWER
	f	Lcsv;	iE	LILAC
	f	Lcsv;	iF	ROSE_BUSH
	f	Lcsv;	iG	PEONY
	f	Lcsv;	iH	TALL_GRASS
	f	Lcsv;	iI	LARGE_FERN
	f	Lcsv;	iJ	WHITE_BANNER
	f	Lcsv;	iK	ORANGE_BANNER
	f	Lcsv;	iL	MAGENTA_BANNER
	f	Lcsv;	i	GRASS_BLOCK
	f	Lcsv;	iM	LIGHT_BLUE_BANNER
	f	Lcsv;	iN	YELLOW_BANNER
	f	Lcsv;	iO	LIME_BANNER
	f	Lcsv;	iP	PINK_BANNER
	f	Lcsv;	iQ	GRAY_BANNER
	f	Lcsv;	iR	LIGHT_GRAY_BANNER
	f	Lcsv;	iS	CYAN_BANNER
	f	Lcsv;	iT	PURPLE_BANNER
	f	Lcsv;	iU	BLUE_BANNER
	f	Lcsv;	iV	BROWN_BANNER
	f	Lcsv;	iW	GREEN_BANNER
	f	Lcsv;	iX	RED_BANNER
	f	Lcsv;	iY	BLACK_BANNER
	f	Lcsv;	iZ	WHITE_WALL_BANNER
	f	Lcsv;	ia	PRISMARINE_BRICKS
	f	Lcsv;	ib	DARK_PRISMARINE
	f	Lcsv;	ic	PRISMARINE_STAIRS
	f	Lcsv;	id	PRISMARINE_BRICK_STAIRS
	f	Lcsv;	ie	DARK_PRISMARINE_STAIRS
	f	Lcsv;	if	PRISMARINE_SLAB
	f	Lcsv;	ig	PRISMARINE_BRICK_SLAB
	f	Lcsv;	ih	DARK_PRISMARINE_SLAB
	f	Lcsv;	ii	SEA_LANTERN
	f	Lcsv;	ij	HAY_BLOCK
	f	Lcsv;	ik	WHITE_CARPET
	f	Lcsv;	il	ORANGE_CARPET
	f	Lcsv;	im	MAGENTA_CARPET
	f	Lcsv;	in	LIGHT_BLUE_CARPET
	f	Lcsv;	io	YELLOW_CARPET
	f	Lcsv;	ip	LIME_CARPET
	f	Lcsv;	iq	PINK_CARPET
	f	Lcsv;	ir	GRAY_CARPET
	f	Lcsv;	is	LIGHT_GRAY_CARPET
	f	Lcsv;	it	CYAN_CARPET
	f	Lcsv;	iu	PURPLE_CARPET
	f	Lcsv;	iv	BLUE_CARPET
	f	Lcsv;	iw	BROWN_CARPET
	f	Lcsv;	ix	GREEN_CARPET
	f	Lcsv;	iy	RED_CARPET
	f	Lcsv;	iz	BLACK_CARPET
	f	Lcsv;	jA	MANGROVE_SLAB
	f	Lcsv;	jB	BAMBOO_SLAB
	f	Lcsv;	jC	BAMBOO_MOSAIC_SLAB
	f	Lcsv;	jD	STONE_SLAB
	f	Lcsv;	jE	SMOOTH_STONE_SLAB
	f	Lcsv;	jF	SANDSTONE_SLAB
	f	Lcsv;	jG	CUT_SANDSTONE_SLAB
	f	Lcsv;	jH	PETRIFIED_OAK_SLAB
	f	Lcsv;	jI	COBBLESTONE_SLAB
	f	Lcsv;	jJ	BRICK_SLAB
	f	Lcsv;	jK	STONE_BRICK_SLAB
	f	Lcsv;	jL	MUD_BRICK_SLAB
	f	Lcsv;	j	DIRT
	f	Lcsv;	jM	NETHER_BRICK_SLAB
	f	Lcsv;	jN	QUARTZ_SLAB
	f	Lcsv;	jO	RED_SANDSTONE_SLAB
	f	Lcsv;	jP	CUT_RED_SANDSTONE_SLAB
	f	Lcsv;	jQ	PURPUR_SLAB
	f	Lcsv;	jR	SMOOTH_STONE
	f	Lcsv;	jS	SMOOTH_SANDSTONE
	f	Lcsv;	jT	SMOOTH_QUARTZ
	f	Lcsv;	jU	SMOOTH_RED_SANDSTONE
	f	Lcsv;	jV	SPRUCE_FENCE_GATE
	f	Lcsv;	jW	BIRCH_FENCE_GATE
	f	Lcsv;	jX	JUNGLE_FENCE_GATE
	f	Lcsv;	jY	ACACIA_FENCE_GATE
	f	Lcsv;	jZ	CHERRY_FENCE_GATE
	f	Lcsv;	ja	ORANGE_WALL_BANNER
	f	Lcsv;	jb	MAGENTA_WALL_BANNER
	f	Lcsv;	jc	LIGHT_BLUE_WALL_BANNER
	f	Lcsv;	jd	YELLOW_WALL_BANNER
	f	Lcsv;	je	LIME_WALL_BANNER
	f	Lcsv;	jf	PINK_WALL_BANNER
	f	Lcsv;	jg	GRAY_WALL_BANNER
	f	Lcsv;	jh	LIGHT_GRAY_WALL_BANNER
	f	Lcsv;	ji	CYAN_WALL_BANNER
	f	Lcsv;	jj	PURPLE_WALL_BANNER
	f	Lcsv;	jk	BLUE_WALL_BANNER
	f	Lcsv;	jl	BROWN_WALL_BANNER
	f	Lcsv;	jm	GREEN_WALL_BANNER
	f	Lcsv;	jn	RED_WALL_BANNER
	f	Lcsv;	jo	BLACK_WALL_BANNER
	f	Lcsv;	jp	RED_SANDSTONE
	f	Lcsv;	jq	CHISELED_RED_SANDSTONE
	f	Lcsv;	jr	CUT_RED_SANDSTONE
	f	Lcsv;	js	RED_SANDSTONE_STAIRS
	f	Lcsv;	jt	OAK_SLAB
	f	Lcsv;	ju	SPRUCE_SLAB
	f	Lcsv;	jv	BIRCH_SLAB
	f	Lcsv;	jw	JUNGLE_SLAB
	f	Lcsv;	jx	ACACIA_SLAB
	f	Lcsv;	jy	CHERRY_SLAB
	f	Lcsv;	jz	DARK_OAK_SLAB
	f	Lcsv;	kA	TORCHFLOWER_CROP
	f	Lcsv;	kB	PITCHER_CROP
	f	Lcsv;	kC	PITCHER_PLANT
	f	Lcsv;	kD	BEETROOTS
	f	Lcsv;	kE	DIRT_PATH
	f	Lcsv;	kF	END_GATEWAY
	f	Lcsv;	kG	REPEATING_COMMAND_BLOCK
	f	Lcsv;	kH	CHAIN_COMMAND_BLOCK
	f	Lcsv;	kI	FROSTED_ICE
	f	Lcsv;	kJ	MAGMA_BLOCK
	f	Lcsv;	kK	NETHER_WART_BLOCK
	f	Lcsv;	kL	RED_NETHER_BRICKS
	f	Lcsv;	k	COARSE_DIRT
	f	Lcsv;	kM	BONE_BLOCK
	f	Lcsv;	kN	STRUCTURE_VOID
	f	Lcsv;	kO	OBSERVER
	f	Lcsv;	kP	SHULKER_BOX
	f	Lcsv;	kQ	WHITE_SHULKER_BOX
	f	Lcsv;	kR	ORANGE_SHULKER_BOX
	f	Lcsv;	kS	MAGENTA_SHULKER_BOX
	f	Lcsv;	kT	LIGHT_BLUE_SHULKER_BOX
	f	Lcsv;	kU	YELLOW_SHULKER_BOX
	f	Lcsv;	kV	LIME_SHULKER_BOX
	f	Lcsv;	kW	PINK_SHULKER_BOX
	f	Lcsv;	kX	GRAY_SHULKER_BOX
	f	Lcsv;	kY	LIGHT_GRAY_SHULKER_BOX
	f	Lcsv;	kZ	CYAN_SHULKER_BOX
	f	Lcsv;	ka	DARK_OAK_FENCE_GATE
	f	Lcsv;	kb	MANGROVE_FENCE_GATE
	f	Lcsv;	kc	BAMBOO_FENCE_GATE
	f	Lcsv;	kd	SPRUCE_FENCE
	f	Lcsv;	ke	BIRCH_FENCE
	f	Lcsv;	kf	JUNGLE_FENCE
	f	Lcsv;	kg	ACACIA_FENCE
	f	Lcsv;	kh	CHERRY_FENCE
	f	Lcsv;	ki	DARK_OAK_FENCE
	f	Lcsv;	kj	MANGROVE_FENCE
	f	Lcsv;	kk	BAMBOO_FENCE
	f	Lcsv;	kl	SPRUCE_DOOR
	f	Lcsv;	km	BIRCH_DOOR
	f	Lcsv;	kn	JUNGLE_DOOR
	f	Lcsv;	ko	ACACIA_DOOR
	f	Lcsv;	kp	CHERRY_DOOR
	f	Lcsv;	kq	DARK_OAK_DOOR
	f	Lcsv;	kr	MANGROVE_DOOR
	f	Lcsv;	ks	BAMBOO_DOOR
	f	Lcsv;	kt	END_ROD
	f	Lcsv;	ku	CHORUS_PLANT
	f	Lcsv;	kv	CHORUS_FLOWER
	f	Lcsv;	kw	PURPUR_BLOCK
	f	Lcsv;	kx	PURPUR_PILLAR
	f	Lcsv;	ky	PURPUR_STAIRS
	f	Lcsv;	kz	END_STONE_BRICKS
	f	Lcsv;	lA	YELLOW_CONCRETE
	f	Lcsv;	lB	LIME_CONCRETE
	f	Lcsv;	lC	PINK_CONCRETE
	f	Lcsv;	lD	GRAY_CONCRETE
	f	Lcsv;	lE	LIGHT_GRAY_CONCRETE
	f	Lcsv;	lF	CYAN_CONCRETE
	f	Lcsv;	lG	PURPLE_CONCRETE
	f	Lcsv;	lH	BLUE_CONCRETE
	f	Lcsv;	lI	BROWN_CONCRETE
	f	Lcsv;	lJ	GREEN_CONCRETE
	f	Lcsv;	lK	RED_CONCRETE
	f	Lcsv;	lL	BLACK_CONCRETE
	f	Lcsv;	l	PODZOL
	f	Lcsv;	lM	WHITE_CONCRETE_POWDER
	f	Lcsv;	lN	ORANGE_CONCRETE_POWDER
	f	Lcsv;	lO	MAGENTA_CONCRETE_POWDER
	f	Lcsv;	lP	LIGHT_BLUE_CONCRETE_POWDER
	f	Lcsv;	lQ	YELLOW_CONCRETE_POWDER
	f	Lcsv;	lR	LIME_CONCRETE_POWDER
	f	Lcsv;	lS	PINK_CONCRETE_POWDER
	f	Lcsv;	lT	GRAY_CONCRETE_POWDER
	f	Lcsv;	lU	LIGHT_GRAY_CONCRETE_POWDER
	f	Lcsv;	lV	CYAN_CONCRETE_POWDER
	f	Lcsv;	lW	PURPLE_CONCRETE_POWDER
	f	Lcsv;	lX	BLUE_CONCRETE_POWDER
	f	Lcsv;	lY	BROWN_CONCRETE_POWDER
	f	Lcsv;	lZ	GREEN_CONCRETE_POWDER
	f	Lcsv;	la	PURPLE_SHULKER_BOX
	f	Lcsv;	lb	BLUE_SHULKER_BOX
	f	Lcsv;	lc	BROWN_SHULKER_BOX
	f	Lcsv;	ld	GREEN_SHULKER_BOX
	f	Lcsv;	le	RED_SHULKER_BOX
	f	Lcsv;	lf	BLACK_SHULKER_BOX
	f	Lcsv;	lg	WHITE_GLAZED_TERRACOTTA
	f	Lcsv;	lh	ORANGE_GLAZED_TERRACOTTA
	f	Lcsv;	li	MAGENTA_GLAZED_TERRACOTTA
	f	Lcsv;	lj	LIGHT_BLUE_GLAZED_TERRACOTTA
	f	Lcsv;	lk	YELLOW_GLAZED_TERRACOTTA
	f	Lcsv;	ll	LIME_GLAZED_TERRACOTTA
	f	Lcsv;	lm	PINK_GLAZED_TERRACOTTA
	f	Lcsv;	ln	GRAY_GLAZED_TERRACOTTA
	f	Lcsv;	lo	LIGHT_GRAY_GLAZED_TERRACOTTA
	f	Lcsv;	lp	CYAN_GLAZED_TERRACOTTA
	f	Lcsv;	lq	PURPLE_GLAZED_TERRACOTTA
	f	Lcsv;	lr	BLUE_GLAZED_TERRACOTTA
	f	Lcsv;	ls	BROWN_GLAZED_TERRACOTTA
	f	Lcsv;	lt	GREEN_GLAZED_TERRACOTTA
	f	Lcsv;	lu	RED_GLAZED_TERRACOTTA
	f	Lcsv;	lv	BLACK_GLAZED_TERRACOTTA
	f	Lcsv;	lw	WHITE_CONCRETE
	f	Lcsv;	lx	ORANGE_CONCRETE
	f	Lcsv;	ly	MAGENTA_CONCRETE
	f	Lcsv;	lz	LIGHT_BLUE_CONCRETE
	f	Lcsv;	mA	HORN_CORAL
	f	Lcsv;	mB	DEAD_TUBE_CORAL_FAN
	f	Lcsv;	mC	DEAD_BRAIN_CORAL_FAN
	f	Lcsv;	mD	DEAD_BUBBLE_CORAL_FAN
	f	Lcsv;	mE	DEAD_FIRE_CORAL_FAN
	f	Lcsv;	mF	DEAD_HORN_CORAL_FAN
	f	Lcsv;	mG	TUBE_CORAL_FAN
	f	Lcsv;	mH	BRAIN_CORAL_FAN
	f	Lcsv;	mI	BUBBLE_CORAL_FAN
	f	Lcsv;	mJ	FIRE_CORAL_FAN
	f	Lcsv;	mK	HORN_CORAL_FAN
	f	Lcsv;	mL	DEAD_TUBE_CORAL_WALL_FAN
	f	Lcsv;	m	COBBLESTONE
	f	Lcsv;	mM	DEAD_BRAIN_CORAL_WALL_FAN
	f	Lcsv;	mN	DEAD_BUBBLE_CORAL_WALL_FAN
	f	Lcsv;	mO	DEAD_FIRE_CORAL_WALL_FAN
	f	Lcsv;	mP	DEAD_HORN_CORAL_WALL_FAN
	f	Lcsv;	mQ	TUBE_CORAL_WALL_FAN
	f	Lcsv;	mR	BRAIN_CORAL_WALL_FAN
	f	Lcsv;	mS	BUBBLE_CORAL_WALL_FAN
	f	Lcsv;	mT	FIRE_CORAL_WALL_FAN
	f	Lcsv;	mU	HORN_CORAL_WALL_FAN
	f	Lcsv;	mV	SEA_PICKLE
	f	Lcsv;	mW	BLUE_ICE
	f	Lcsv;	mX	CONDUIT
	f	Lcsv;	mY	BAMBOO_SAPLING
	f	Lcsv;	mZ	BAMBOO
	f	Lcsv;	ma	RED_CONCRETE_POWDER
	f	Lcsv;	mb	BLACK_CONCRETE_POWDER
	f	Lcsv;	mc	KELP
	f	Lcsv;	md	KELP_PLANT
	f	Lcsv;	me	DRIED_KELP_BLOCK
	f	Lcsv;	mf	TURTLE_EGG
	f	Lcsv;	mg	SNIFFER_EGG
	f	Lcsv;	mh	DEAD_TUBE_CORAL_BLOCK
	f	Lcsv;	mi	DEAD_BRAIN_CORAL_BLOCK
	f	Lcsv;	mj	DEAD_BUBBLE_CORAL_BLOCK
	f	Lcsv;	mk	DEAD_FIRE_CORAL_BLOCK
	f	Lcsv;	ml	DEAD_HORN_CORAL_BLOCK
	f	Lcsv;	mm	TUBE_CORAL_BLOCK
	f	Lcsv;	mn	BRAIN_CORAL_BLOCK
	f	Lcsv;	mo	BUBBLE_CORAL_BLOCK
	f	Lcsv;	mp	FIRE_CORAL_BLOCK
	f	Lcsv;	mq	HORN_CORAL_BLOCK
	f	Lcsv;	mr	DEAD_TUBE_CORAL
	f	Lcsv;	ms	DEAD_BRAIN_CORAL
	f	Lcsv;	mt	DEAD_BUBBLE_CORAL
	f	Lcsv;	mu	DEAD_FIRE_CORAL
	f	Lcsv;	mv	DEAD_HORN_CORAL
	f	Lcsv;	mw	TUBE_CORAL
	f	Lcsv;	mx	BRAIN_CORAL
	f	Lcsv;	my	BUBBLE_CORAL
	f	Lcsv;	mz	FIRE_CORAL
	f	Lcsv;	nA	GRANITE_SLAB
	f	Lcsv;	nB	ANDESITE_SLAB
	f	Lcsv;	nC	RED_NETHER_BRICK_SLAB
	f	Lcsv;	nD	POLISHED_ANDESITE_SLAB
	f	Lcsv;	nE	DIORITE_SLAB
	f	Lcsv;	nF	BRICK_WALL
	f	Lcsv;	nG	PRISMARINE_WALL
	f	Lcsv;	nH	RED_SANDSTONE_WALL
	f	Lcsv;	nI	MOSSY_STONE_BRICK_WALL
	f	Lcsv;	nJ	GRANITE_WALL
	f	Lcsv;	nK	STONE_BRICK_WALL
	f	Lcsv;	nL	MUD_BRICK_WALL
	f	Lcsv;	n	OAK_PLANKS
	f	Lcsv;	nM	NETHER_BRICK_WALL
	f	Lcsv;	nN	ANDESITE_WALL
	f	Lcsv;	nO	RED_NETHER_BRICK_WALL
	f	Lcsv;	nP	SANDSTONE_WALL
	f	Lcsv;	nQ	END_STONE_BRICK_WALL
	f	Lcsv;	nR	DIORITE_WALL
	f	Lcsv;	nS	SCAFFOLDING
	f	Lcsv;	nT	LOOM
	f	Lcsv;	nU	BARREL
	f	Lcsv;	nV	SMOKER
	f	Lcsv;	nW	BLAST_FURNACE
	f	Lcsv;	nX	CARTOGRAPHY_TABLE
	f	Lcsv;	nY	FLETCHING_TABLE
	f	Lcsv;	nZ	GRINDSTONE
	f	Lcsv;	na	POTTED_BAMBOO
	f	Lcsv;	nb	VOID_AIR
	f	Lcsv;	nc	CAVE_AIR
	f	Lcsv;	nd	BUBBLE_COLUMN
	f	Lcsv;	ne	POLISHED_GRANITE_STAIRS
	f	Lcsv;	nf	SMOOTH_RED_SANDSTONE_STAIRS
	f	Lcsv;	ng	MOSSY_STONE_BRICK_STAIRS
	f	Lcsv;	nh	POLISHED_DIORITE_STAIRS
	f	Lcsv;	ni	MOSSY_COBBLESTONE_STAIRS
	f	Lcsv;	nj	END_STONE_BRICK_STAIRS
	f	Lcsv;	nk	STONE_STAIRS
	f	Lcsv;	nl	SMOOTH_SANDSTONE_STAIRS
	f	Lcsv;	nm	SMOOTH_QUARTZ_STAIRS
	f	Lcsv;	nn	GRANITE_STAIRS
	f	Lcsv;	no	ANDESITE_STAIRS
	f	Lcsv;	np	RED_NETHER_BRICK_STAIRS
	f	Lcsv;	nq	POLISHED_ANDESITE_STAIRS
	f	Lcsv;	nr	DIORITE_STAIRS
	f	Lcsv;	ns	POLISHED_GRANITE_SLAB
	f	Lcsv;	nt	SMOOTH_RED_SANDSTONE_SLAB
	f	Lcsv;	nu	MOSSY_STONE_BRICK_SLAB
	f	Lcsv;	nv	POLISHED_DIORITE_SLAB
	f	Lcsv;	nw	MOSSY_COBBLESTONE_SLAB
	f	Lcsv;	nx	END_STONE_BRICK_SLAB
	f	Lcsv;	ny	SMOOTH_SANDSTONE_SLAB
	f	Lcsv;	nz	SMOOTH_QUARTZ_SLAB
	f	Lcsv;	oA	WEEPING_VINES_PLANT
	f	Lcsv;	oB	TWISTING_VINES
	f	Lcsv;	oC	TWISTING_VINES_PLANT
	f	Lcsv;	oD	CRIMSON_ROOTS
	f	Lcsv;	oE	CRIMSON_PLANKS
	f	Lcsv;	oF	WARPED_PLANKS
	f	Lcsv;	oG	CRIMSON_SLAB
	f	Lcsv;	oH	WARPED_SLAB
	f	Lcsv;	oI	CRIMSON_PRESSURE_PLATE
	f	Lcsv;	oJ	WARPED_PRESSURE_PLATE
	f	Lcsv;	oK	CRIMSON_FENCE
	f	Lcsv;	oL	WARPED_FENCE
	f	Lcsv;	o	SPRUCE_PLANKS
	f	Lcsv;	oM	CRIMSON_TRAPDOOR
	f	Lcsv;	oN	WARPED_TRAPDOOR
	f	Lcsv;	oO	CRIMSON_FENCE_GATE
	f	Lcsv;	oP	WARPED_FENCE_GATE
	f	Lcsv;	oQ	CRIMSON_STAIRS
	f	Lcsv;	oR	WARPED_STAIRS
	f	Lcsv;	oS	CRIMSON_BUTTON
	f	Lcsv;	oT	WARPED_BUTTON
	f	Lcsv;	oU	CRIMSON_DOOR
	f	Lcsv;	oV	WARPED_DOOR
	f	Lcsv;	oW	CRIMSON_SIGN
	f	Lcsv;	oX	WARPED_SIGN
	f	Lcsv;	oY	CRIMSON_WALL_SIGN
	f	Lcsv;	oZ	WARPED_WALL_SIGN
	f	Lcsv;	oa	LECTERN
	f	Lcsv;	ob	SMITHING_TABLE
	f	Lcsv;	oc	STONECUTTER
	f	Lcsv;	od	BELL
	f	Lcsv;	oe	LANTERN
	f	Lcsv;	of	SOUL_LANTERN
	f	Lcsv;	og	CAMPFIRE
	f	Lcsv;	oh	SOUL_CAMPFIRE
	f	Lcsv;	oi	SWEET_BERRY_BUSH
	f	Lcsv;	oj	WARPED_STEM
	f	Lcsv;	ok	STRIPPED_WARPED_STEM
	f	Lcsv;	ol	WARPED_HYPHAE
	f	Lcsv;	om	STRIPPED_WARPED_HYPHAE
	f	Lcsv;	on	WARPED_NYLIUM
	f	Lcsv;	oo	WARPED_FUNGUS
	f	Lcsv;	op	WARPED_WART_BLOCK
	f	Lcsv;	oq	WARPED_ROOTS
	f	Lcsv;	or	NETHER_SPROUTS
	f	Lcsv;	os	CRIMSON_STEM
	f	Lcsv;	ot	STRIPPED_CRIMSON_STEM
	f	Lcsv;	ou	CRIMSON_HYPHAE
	f	Lcsv;	ov	STRIPPED_CRIMSON_HYPHAE
	f	Lcsv;	ow	CRIMSON_NYLIUM
	f	Lcsv;	ox	CRIMSON_FUNGUS
	f	Lcsv;	oy	SHROOMLIGHT
	f	Lcsv;	oz	WEEPING_VINES
	f	Lcsv;	pA	POLISHED_BLACKSTONE_BRICK_STAIRS
	f	Lcsv;	pB	POLISHED_BLACKSTONE_BRICK_WALL
	f	Lcsv;	pC	GILDED_BLACKSTONE
	f	Lcsv;	pD	POLISHED_BLACKSTONE_STAIRS
	f	Lcsv;	pE	POLISHED_BLACKSTONE_SLAB
	f	Lcsv;	pF	POLISHED_BLACKSTONE_PRESSURE_PLATE
	f	Lcsv;	pG	POLISHED_BLACKSTONE_BUTTON
	f	Lcsv;	pH	POLISHED_BLACKSTONE_WALL
	f	Lcsv;	pI	CHISELED_NETHER_BRICKS
	f	Lcsv;	pJ	CRACKED_NETHER_BRICKS
	f	Lcsv;	pK	QUARTZ_BRICKS
	f	Lcsv;	pL	CANDLE
	f	Lcsv;	p	BIRCH_PLANKS
	f	Lcsv;	pM	WHITE_CANDLE
	f	Lcsv;	pN	ORANGE_CANDLE
	f	Lcsv;	pO	MAGENTA_CANDLE
	f	Lcsv;	pP	LIGHT_BLUE_CANDLE
	f	Lcsv;	pQ	YELLOW_CANDLE
	f	Lcsv;	pR	LIME_CANDLE
	f	Lcsv;	pS	PINK_CANDLE
	f	Lcsv;	pT	GRAY_CANDLE
	f	Lcsv;	pU	LIGHT_GRAY_CANDLE
	f	Lcsv;	pV	CYAN_CANDLE
	f	Lcsv;	pW	PURPLE_CANDLE
	f	Lcsv;	pX	BLUE_CANDLE
	f	Lcsv;	pY	BROWN_CANDLE
	f	Lcsv;	pZ	GREEN_CANDLE
	f	Lcsv;	pa	STRUCTURE_BLOCK
	f	Lcsv;	pb	JIGSAW
	f	Lcsv;	pc	COMPOSTER
	f	Lcsv;	pd	TARGET
	f	Lcsv;	pe	BEE_NEST
	f	Lcsv;	pf	BEEHIVE
	f	Lcsv;	pg	HONEY_BLOCK
	f	Lcsv;	ph	HONEYCOMB_BLOCK
	f	Lcsv;	pi	NETHERITE_BLOCK
	f	Lcsv;	pj	ANCIENT_DEBRIS
	f	Lcsv;	pk	CRYING_OBSIDIAN
	f	Lcsv;	pl	RESPAWN_ANCHOR
	f	Lcsv;	pm	POTTED_CRIMSON_FUNGUS
	f	Lcsv;	pn	POTTED_WARPED_FUNGUS
	f	Lcsv;	po	POTTED_CRIMSON_ROOTS
	f	Lcsv;	pp	POTTED_WARPED_ROOTS
	f	Lcsv;	pq	LODESTONE
	f	Lcsv;	pr	BLACKSTONE
	f	Lcsv;	ps	BLACKSTONE_STAIRS
	f	Lcsv;	pt	BLACKSTONE_WALL
	f	Lcsv;	pu	BLACKSTONE_SLAB
	f	Lcsv;	pv	POLISHED_BLACKSTONE
	f	Lcsv;	pw	POLISHED_BLACKSTONE_BRICKS
	f	Lcsv;	px	CRACKED_POLISHED_BLACKSTONE_BRICKS
	f	Lcsv;	py	CHISELED_POLISHED_BLACKSTONE
	f	Lcsv;	pz	POLISHED_BLACKSTONE_BRICK_SLAB
	f	Lcsv;	qA	CALCITE
	f	Lcsv;	qB	TINTED_GLASS
	f	Lcsv;	qC	POWDER_SNOW
	f	Lcsv;	qD	SCULK_SENSOR
	f	Lcsv;	qE	CALIBRATED_SCULK_SENSOR
	f	Lcsv;	qF	SCULK
	f	Lcsv;	qG	SCULK_VEIN
	f	Lcsv;	qH	SCULK_CATALYST
	f	Lcsv;	qI	SCULK_SHRIEKER
	f	Lcsv;	qJ	OXIDIZED_COPPER
	f	Lcsv;	qK	WEATHERED_COPPER
	f	Lcsv;	qL	EXPOSED_COPPER
	f	Lcsv;	q	JUNGLE_PLANKS
	f	Lcsv;	qM	COPPER_BLOCK
	f	Lcsv;	qN	COPPER_ORE
	f	Lcsv;	qO	DEEPSLATE_COPPER_ORE
	f	Lcsv;	qP	OXIDIZED_CUT_COPPER
	f	Lcsv;	qQ	WEATHERED_CUT_COPPER
	f	Lcsv;	qR	EXPOSED_CUT_COPPER
	f	Lcsv;	qS	CUT_COPPER
	f	Lcsv;	qT	OXIDIZED_CUT_COPPER_STAIRS
	f	Lcsv;	qU	WEATHERED_CUT_COPPER_STAIRS
	f	Lcsv;	qV	EXPOSED_CUT_COPPER_STAIRS
	f	Lcsv;	qW	CUT_COPPER_STAIRS
	f	Lcsv;	qX	OXIDIZED_CUT_COPPER_SLAB
	f	Lcsv;	qY	WEATHERED_CUT_COPPER_SLAB
	f	Lcsv;	qZ	EXPOSED_CUT_COPPER_SLAB
	f	Lcsv;	qa	RED_CANDLE
	f	Lcsv;	qb	BLACK_CANDLE
	f	Lcsv;	qc	CANDLE_CAKE
	f	Lcsv;	qd	WHITE_CANDLE_CAKE
	f	Lcsv;	qe	ORANGE_CANDLE_CAKE
	f	Lcsv;	qf	MAGENTA_CANDLE_CAKE
	f	Lcsv;	qg	LIGHT_BLUE_CANDLE_CAKE
	f	Lcsv;	qh	YELLOW_CANDLE_CAKE
	f	Lcsv;	qi	LIME_CANDLE_CAKE
	f	Lcsv;	qj	PINK_CANDLE_CAKE
	f	Lcsv;	qk	GRAY_CANDLE_CAKE
	f	Lcsv;	ql	LIGHT_GRAY_CANDLE_CAKE
	f	Lcsv;	qm	CYAN_CANDLE_CAKE
	f	Lcsv;	qn	PURPLE_CANDLE_CAKE
	f	Lcsv;	qo	BLUE_CANDLE_CAKE
	f	Lcsv;	qp	BROWN_CANDLE_CAKE
	f	Lcsv;	qq	GREEN_CANDLE_CAKE
	f	Lcsv;	qr	RED_CANDLE_CAKE
	f	Lcsv;	qs	BLACK_CANDLE_CAKE
	f	Lcsv;	qt	AMETHYST_BLOCK
	f	Lcsv;	qu	BUDDING_AMETHYST
	f	Lcsv;	qv	AMETHYST_CLUSTER
	f	Lcsv;	qw	LARGE_AMETHYST_BUD
	f	Lcsv;	qx	MEDIUM_AMETHYST_BUD
	f	Lcsv;	qy	SMALL_AMETHYST_BUD
	f	Lcsv;	qz	TUFF
	f	Lcsv;	rA	PINK_PETALS
	f	Lcsv;	rB	MOSS_BLOCK
	f	Lcsv;	rC	BIG_DRIPLEAF
	f	Lcsv;	rD	BIG_DRIPLEAF_STEM
	f	Lcsv;	rE	SMALL_DRIPLEAF
	f	Lcsv;	rF	HANGING_ROOTS
	f	Lcsv;	rG	ROOTED_DIRT
	f	Lcsv;	rH	MUD
	f	Lcsv;	rI	DEEPSLATE
	f	Lcsv;	rJ	COBBLED_DEEPSLATE
	f	Lcsv;	rK	COBBLED_DEEPSLATE_STAIRS
	f	Lcsv;	rL	COBBLED_DEEPSLATE_SLAB
	f	Lcsv;	r	ACACIA_PLANKS
	f	Lcsv;	rM	COBBLED_DEEPSLATE_WALL
	f	Lcsv;	rN	POLISHED_DEEPSLATE
	f	Lcsv;	rO	POLISHED_DEEPSLATE_STAIRS
	f	Lcsv;	rP	POLISHED_DEEPSLATE_SLAB
	f	Lcsv;	rQ	POLISHED_DEEPSLATE_WALL
	f	Lcsv;	rR	DEEPSLATE_TILES
	f	Lcsv;	rS	DEEPSLATE_TILE_STAIRS
	f	Lcsv;	rT	DEEPSLATE_TILE_SLAB
	f	Lcsv;	rU	DEEPSLATE_TILE_WALL
	f	Lcsv;	rV	DEEPSLATE_BRICKS
	f	Lcsv;	rW	DEEPSLATE_BRICK_STAIRS
	f	Lcsv;	rX	DEEPSLATE_BRICK_SLAB
	f	Lcsv;	rY	DEEPSLATE_BRICK_WALL
	f	Lcsv;	rZ	CHISELED_DEEPSLATE
	f	Lcsv;	ra	CUT_COPPER_SLAB
	f	Lcsv;	rb	WAXED_COPPER_BLOCK
	f	Lcsv;	rc	WAXED_WEATHERED_COPPER
	f	Lcsv;	rd	WAXED_EXPOSED_COPPER
	f	Lcsv;	re	WAXED_OXIDIZED_COPPER
	f	Lcsv;	rf	WAXED_OXIDIZED_CUT_COPPER
	f	Lcsv;	rg	WAXED_WEATHERED_CUT_COPPER
	f	Lcsv;	rh	WAXED_EXPOSED_CUT_COPPER
	f	Lcsv;	ri	WAXED_CUT_COPPER
	f	Lcsv;	rj	WAXED_OXIDIZED_CUT_COPPER_STAIRS
	f	Lcsv;	rk	WAXED_WEATHERED_CUT_COPPER_STAIRS
	f	Lcsv;	rl	WAXED_EXPOSED_CUT_COPPER_STAIRS
	f	Lcsv;	rm	WAXED_CUT_COPPER_STAIRS
	f	Lcsv;	rn	WAXED_OXIDIZED_CUT_COPPER_SLAB
	f	Lcsv;	ro	WAXED_WEATHERED_CUT_COPPER_SLAB
	f	Lcsv;	rp	WAXED_EXPOSED_CUT_COPPER_SLAB
	f	Lcsv;	rq	WAXED_CUT_COPPER_SLAB
	f	Lcsv;	rr	LIGHTNING_ROD
	f	Lcsv;	rs	POINTED_DRIPSTONE
	f	Lcsv;	rt	DRIPSTONE_BLOCK
	f	Lcsv;	ru	CAVE_VINES
	f	Lcsv;	rv	CAVE_VINES_PLANT
	f	Lcsv;	rw	SPORE_BLOSSOM
	f	Lcsv;	rx	AZALEA
	f	Lcsv;	ry	FLOWERING_AZALEA
	f	Lcsv;	rz	MOSS_CARPET
	f	Lcsv;	s	CHERRY_PLANKS
	f	Lcsv;	sa	CRACKED_DEEPSLATE_BRICKS
	f	Lcsv;	sb	CRACKED_DEEPSLATE_TILES
	f	Lcsv;	sc	INFESTED_DEEPSLATE
	f	Lcsv;	sd	SMOOTH_BASALT
	f	Lcsv;	se	RAW_IRON_BLOCK
	f	Lcsv;	sf	RAW_COPPER_BLOCK
	f	Lcsv;	sg	RAW_GOLD_BLOCK
	f	Lcsv;	sh	POTTED_AZALEA
	f	Lcsv;	si	POTTED_FLOWERING_AZALEA
	f	Lcsv;	sj	OCHRE_FROGLIGHT
	f	Lcsv;	sk	VERDANT_FROGLIGHT
	f	Lcsv;	sl	PEARLESCENT_FROGLIGHT
	f	Lcsv;	sm	FROGSPAWN
	f	Lcsv;	sn	REINFORCED_DEEPSLATE
	f	Lcsv;	so	DECORATED_POT
	f	Lcsv;	t	DARK_OAK_PLANKS
	f	Lcsv;	u	MANGROVE_PLANKS
	f	Lcsv;	v	BAMBOO_PLANKS
	f	Lcsv;	w	BAMBOO_MOSAIC
	f	Lcsv;	x	OAK_SAPLING
	f	Lcsv;	y	SPRUCE_SAPLING
	f	Lcsv;	z	BIRCH_SAPLING
c	csx	net/minecraft/world/level/block/BonemealableBlock
	m	(Lakq;Lasc;Lgw;Ldfj;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcpv;Lasc;Lgw;Ldfj;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcpy;Lgw;Ldfj;)Z	a	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
c	csy	net/minecraft/world/level/block/BrewingStandBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lcpv;Ldfj;Ldcx;)Ldcw;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Lcpv;Lgw;Ldfj;Lbjg;Lcjf;)V	a	setPlacedBy
		p	1		world
		p	2		pos
		p	3		state
		p	4		placer
		p	5		itemStack
	m	(Ldfj;Lcpb;Lgw;Lebc;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpv;Lgw;)I	a	getAnalogOutputSignal
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lcpv;Lgw;Lasc;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lcpv;Lgw;Lcbu;Lbgx;Lehj;)Lbgy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldfj;Lcpv;Lgw;Ldfj;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lgw;Ldfj;)Ldcv;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Ldfj;)Lcza;	b_	getRenderShape
		p	1		state
	m	(Ldfj;)Z	d_	hasAnalogOutputSignal
		p	1		state
	f	[Ldga;	a	HAS_BOTTLE
	f	Leig;	b	SHAPE
c	csz	net/minecraft/world/level/block/BrushableBlock
	m	(Lcsv;Ldfi$d;Lapc;Lapc;)V	<init>	<init>
		p	1		baseBlock
		p	2		settings
		p	3		brushingSound
		p	4		brushingCompleteSound
	m	()Lcsv;	a	getTurnsInto
	m	(Lcpv;Lgw;Lbym;)V	a	onBrokenAfterFall
		p	1		world
		p	2		pos
		p	3		fallingBlockEntity
	m	(Ldfj;Lakq;Lgw;Lasc;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lcpv;Lgw;Lasc;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lgw;Ldfj;)Ldcv;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	()Lapc;	b	getBrushSound
	m	(Ldfj;Lcpv;Lgw;Ldfj;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	m	(Ldfj;)Lcza;	b_	getRenderShape
		p	1		state
	m	()Lapc;	c	getBrushCompletedSound
	f	I	a	TICK_DELAY
	f	Ldgj;	b	DUSTED
	f	Lcsv;	c	turnsInto
	f	Lapc;	d	brushSound
	f	Lapc;	e	brushCompletedSound
c	cta	net/minecraft/world/level/block/BubbleColumnBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lcbu;Lcpw;Lgw;Ldfj;)Lcjf;	a	pickupBlock
		p	1		player
		p	2		world
		p	3		pos
		p	4		state
	m	(Lcpw;Lgw;Ldfj;Ldfj;)V	a	updateColumn
		p	0		world
		p	1		pos
		p	2		water
		p	3		bubbleSource
	m	(Ldfj;Lakq;Lgw;Lasc;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpv;Lgw;Lasc;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lcpv;Lgw;Lbiq;)V	a	entityInside
		p	1		state
		p	2		world
		p	3		pos
		p	4		entity
	m	(Ldfj;Lcpy;Lgw;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	()Ljava/util/Optional;	aq_	getPickupSound
	m	(Lcpw;Lgw;Ldfj;)V	b	updateColumn
		p	0		world
		p	1		pos
		p	2		state
	m	(Ldfj;)Lcza;	b_	getRenderShape
		p	1		state
	m	(Ldfj;)Leam;	c_	getFluidState
		p	1		state
	m	(Ldfj;)Z	h	canExistIn
		p	0		state
	m	(Ldfj;)Ldfj;	n	getColumnState
		p	0		state
	f	Ldga;	a	DRAG_DOWN
	f	I	b	CHECK_PERIOD
c	ctb	net/minecraft/world/level/block/BucketPickup
	m	(Lcbu;Lcpw;Lgw;Ldfj;)Lcjf;	a	pickupBlock
		p	1		player
		p	2		world
		p	3		pos
		p	4		state
	m	()Ljava/util/Optional;	aq_	getPickupSound
c	ctc	net/minecraft/world/level/block/BuddingAmethystBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Ldfj;Lakq;Lgw;Lasc;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;)Z	g	canClusterGrowAtState
		p	0		state
	f	I	a	GROWTH_CHANCE
	f	[Lha;	b	DIRECTIONS
c	ctd	net/minecraft/world/level/block/BushBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Ldfj;Lcpb;Lgw;Lebc;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldfj;Lcpy;Lgw;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldfj;Lcpb;Lgw;)Z	c	propagatesSkylightDown
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lcpb;Lgw;)Z	d	mayPlaceOn
		p	1		floor
		p	2		world
		p	3		pos
c	cte	net/minecraft/world/level/block/ButtonBlock
	m	(Ldfi$d;Ldfy;IZ)V	<init>	<init>
		p	1		settings
		p	2		blockSetType
		p	3		pressTicks
		p	4		wooden
	m	(Lcbu;Lcpw;Lgw;Z)V	a	playSound
		p	1		player
		p	2		world
		p	3		pos
		p	4		powered
	m	(Ldfj;Lakq;Lgw;Lasc;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpb;Lgw;Lha;)I	a	getSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldfj;Lcpv;Lgw;Lbiq;)V	a	entityInside
		p	1		state
		p	2		world
		p	3		pos
		p	4		entity
	m	(Ldfj;Lcpv;Lgw;Lcbu;Lbgx;Lehj;)Lbgy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldfj;Lcpv;Lgw;Ldfj;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Z)Lapc;	a	getSound
		p	1		powered
	m	(Ldfj;Lcpb;Lgw;Lha;)I	b	getDirectSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldfj;Lcpv;Lgw;)V	d	press
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lcpv;Lgw;)V	e	checkPressed
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lcpv;Lgw;)V	f	updateNeighbours
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;)Z	f_	isSignalSource
		p	1		state
	f	Leig;	D	PRESSED_FLOOR_AABB_Z
	f	Leig;	E	PRESSED_NORTH_AABB
	f	Leig;	F	PRESSED_SOUTH_AABB
	f	Leig;	G	PRESSED_WEST_AABB
	f	Leig;	H	PRESSED_EAST_AABB
	f	I	J	PRESSED_DEPTH
	f	I	K	UNPRESSED_DEPTH
	f	Ldfy;	L	type
	f	I	M	ticksToStayPressed
	f	Z	N	arrowsCanPress
	f	Ldga;	a	POWERED
	f	I	b	HALF_AABB_HEIGHT
	f	I	c	HALF_AABB_WIDTH
	f	Leig;	d	CEILING_AABB_X
	f	Leig;	e	CEILING_AABB_Z
	f	Leig;	f	FLOOR_AABB_X
	f	Leig;	g	FLOOR_AABB_Z
	f	Leig;	h	NORTH_AABB
	f	Leig;	i	SOUTH_AABB
	f	Leig;	j	WEST_AABB
	f	Leig;	k	EAST_AABB
	f	Leig;	l	PRESSED_CEILING_AABB_X
	f	Leig;	m	PRESSED_CEILING_AABB_Z
	f	Leig;	n	PRESSED_FLOOR_AABB_X
c	cte$1	net/minecraft/world/level/block/ButtonBlock$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
	f	[I	b	$SwitchMap$net$minecraft$world$level$block$state$properties$AttachFace
c	ctf	net/minecraft/world/level/block/CactusBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Ldfj;Lakq;Lgw;Lasc;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lcpb;Lgw;Lebc;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpv;Lgw;Lbiq;)V	a	entityInside
		p	1		state
		p	2		world
		p	3		pos
		p	4		entity
	m	(Ldfj;Lcpy;Lgw;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldfj;Lakq;Lgw;Lasc;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	c	getCollisionShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	f	Ldgj;	a	AGE
	f	I	b	MAX_AGE
	f	I	c	AABB_OFFSET
	f	Leig;	d	COLLISION_SHAPE
	f	Leig;	e	OUTLINE_SHAPE
c	ctg	net/minecraft/world/level/block/CakeBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lcpw;Lgw;Ldfj;Lcbu;)Lbgy;	a	eat
		p	0		world
		p	1		pos
		p	2		state
		p	3		player
	m	(Ldfj;Lcpb;Lgw;Lebc;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpv;Lgw;)I	a	getAnalogOutputSignal
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lcpv;Lgw;Lcbu;Lbgx;Lehj;)Lbgy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldfj;Lcpy;Lgw;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(I)I	b	getOutputSignal
		p	0		bites
	m	(Ldfj;)Z	d_	hasAnalogOutputSignal
		p	1		state
	f	I	a	MAX_BITES
	f	Ldgj;	b	BITES
	f	I	c	FULL_CAKE_SIGNAL
	f	F	d	AABB_OFFSET
	f	F	e	AABB_SIZE_PER_BITE
	f	[Leig;	f	SHAPE_BY_BITE
c	cth	net/minecraft/world/level/block/CalibratedSculkSensorBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Lcpv;Ldfj;Ldcx;)Ldcw;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Lcpv;Lgw;Ldfj;Ldda;)V	a	lambda$getTicker$0
		p	0		worldx
		p	1		pos
		p	2		statex
		p	3		blockEntity
	m	(Ldfj;Lcpb;Lgw;Lha;)I	a	getSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldfj;Lcxq;)Ldfj;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldfj;Lczh;)Ldfj;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lgw;Ldfj;)Ldcv;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	()I	b	getActiveTicks
	f	Ldgd;	a	FACING
c	cti	net/minecraft/world/level/block/CampfireBlock
	m	(ZILdfi$d;)V	<init>	<init>
		p	1		emitsParticles
		p	2		fireDamage
		p	3		settings
	m	(Lbiq;Lcpw;Lgw;Ldfj;)V	a	dowse
		p	0		entity
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Lcpv;Ldfj;Ldcx;)Ldcw;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Lcpv;Ldfj;Lehj;Lccm;)V	a	onProjectileHit
		p	1		world
		p	2		state
		p	3		hit
		p	4		projectile
	m	(Lcpv;Lgw;)Z	a	isSmokeyPos
		p	0		world
		p	1		pos
	m	(Lcpv;Lgw;ZZ)V	a	makeParticles
		p	0		world
		p	1		pos
		p	2		isSignal
		p	3		lotsOfSmoke
	m	(Lcpw;Lgw;Ldfj;Leam;)Z	a	placeLiquid
		p	1		world
		p	2		pos
		p	3		state
		p	4		fluidState
	m	(Ldfi$a;)Z	a	lambda$canLight$0
		p	0		statex
	m	(Ldfj;Lcpb;Lgw;Lebc;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpv;Lgw;Lasc;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lcpv;Lgw;Lbiq;)V	a	entityInside
		p	1		state
		p	2		world
		p	3		pos
		p	4		entity
	m	(Ldfj;Lcpv;Lgw;Lcbu;Lbgx;Lehj;)Lbgy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldfj;Lcpv;Lgw;Ldfj;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Ldfj;Lcxq;)Ldfj;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldfj;Lczh;)Ldfj;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lgw;Ldfj;)Ldcv;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Ldfj;)Lcza;	b_	getRenderShape
		p	1		state
	m	(Ldfj;)Leam;	c_	getFluidState
		p	1		state
	m	(Ldfj;)Z	g	isLitCampfire
		p	0		state
	m	(Ldfj;)Z	h	canLight
		p	0		state
	m	(Ldfj;)Z	n	isSmokeSource
		p	1		state
	f	Leig;	a	SHAPE
	f	Ldga;	b	LIT
	f	Ldga;	c	SIGNAL_FIRE
	f	Ldga;	d	WATERLOGGED
	f	Ldgd;	e	FACING
	f	Leig;	f	VIRTUAL_FENCE_POST
	f	I	g	SMOKE_DISTANCE
	f	Z	h	spawnParticles
	f	I	i	fireDamage
c	ctj	net/minecraft/world/level/block/CandleBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Lcpw;Lgw;Ldfj;Leam;)Z	a	placeLiquid
		p	1		world
		p	2		pos
		p	3		state
		p	4		fluidState
	m	(Ldfi$a;)Z	a	lambda$canLight$2
		p	0		statex
	m	(Ldfj;Lcln;)Z	a	canBeReplaced
		p	1		state
		p	2		context
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpv;Lgw;Lcbu;Lbgx;Lehj;)Lbgy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldfj;Lcpy;Lgw;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldfj;)Ljava/lang/Iterable;	b	getParticleOffsets
		p	1		state
	m	(Ldfj;)Leam;	c_	getFluidState
		p	1		state
	m	(Ldfj;)Z	d	canBeLit
		p	1		state
	m	()Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	g	lambda$static$1
	m	(Ldfj;)Z	g	canLight
		p	0		state
	m	(Ldfj;)I	h	lambda$static$0
		p	0		state
	f	I	c	MIN_CANDLES
	f	I	d	MAX_CANDLES
	f	Ldgj;	e	CANDLES
	f	Ldga;	f	LIT
	f	Ldga;	g	WATERLOGGED
	f	Ljava/util/function/ToIntFunction;	h	LIGHT_EMISSION
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	i	PARTICLE_OFFSETS
	f	Leig;	j	ONE_AABB
	f	Leig;	k	TWO_AABB
	f	Leig;	l	THREE_AABB
	f	Leig;	m	FOUR_AABB
c	ctk	net/minecraft/world/level/block/CandleCakeBlock
	m	(Lcsv;Ldfi$d;)V	<init>	<init>
		p	1		candle
		p	2		settings
	m	(Lcpb;Lgw;Ldfj;)Lcjf;	a	getCloneItemStack
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcsv;)Ldfj;	a	byCandle
		p	0		candle
	m	(Ldfj;Lcpb;Lgw;Lebc;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpv;Lgw;)I	a	getAnalogOutputSignal
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lcpv;Lgw;Lcbu;Lbgx;Lehj;)Lbgy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldfj;Lcpy;Lgw;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Ldfi$a;)Z	a	lambda$canLight$0
		p	1		statex
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lehj;)Z	a	candleHit
		p	0		hitResult
	m	(Ldfj;)Ljava/lang/Iterable;	b	getParticleOffsets
		p	1		state
	m	(Ldfj;)Z	d_	hasAnalogOutputSignal
		p	1		state
	m	(Ldfj;)Z	g	canLight
		p	0		state
	f	Ldga;	c	LIT
	f	F	d	AABB_OFFSET
	f	Leig;	e	CAKE_SHAPE
	f	Leig;	f	CANDLE_SHAPE
	f	Leig;	g	SHAPE
	f	Ljava/util/Map;	h	BY_CANDLE
	f	Ljava/lang/Iterable;	i	PARTICLE_OFFSETS
c	ctl	net/minecraft/world/level/block/CarpetBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpy;Lgw;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	f	Leig;	a	SHAPE
c	ctm	net/minecraft/world/level/block/CarrotBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	()Lcpu;	c	getBaseSeedId
	f	[Leig;	a	SHAPE_BY_AGE
c	ctn	net/minecraft/world/level/block/CartographyTableBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lcpv;Lgw;ILcbt;Lcbu;)Lcel;	a	lambda$getMenuProvider$0
		p	2		syncId
		p	3		inventory
		p	4		player
	m	(Ldfj;Lcpv;Lgw;Lcbu;Lbgx;Lehj;)Lbgy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldfj;Lcpv;Lgw;)Lbhb;	b	getMenuProvider
		p	1		state
		p	2		world
		p	3		pos
	f	Ltl;	a	CONTAINER_TITLE
c	cto	net/minecraft/world/level/block/CarvedPumpkinBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	()Ldfo;	a	getOrCreateSnowGolemBase
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Lcpv;Ldfo$b;)V	a	clearPatternBlocks
		p	0		world
		p	1		patternResult
	m	(Lcpv;Ldfo$b;Lbiq;Lgw;)V	a	spawnGolemInWorld
		p	0		world
		p	1		patternResult
		p	2		entity
		p	3		pos
	m	(Lcpv;Lgw;)V	a	trySpawnGolem
		p	1		world
		p	2		pos
	m	(Lcpy;Lgw;)Z	a	canSpawnGolem
		p	1		world
		p	2		pos
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldfn;)Z	a	lambda$getOrCreateIronGolemFull$2
		p	0		pos
	m	(Lcpv;Ldfo$b;)V	b	updatePatternBlocks
		p	0		world
		p	1		patternResult
	m	(Ldfj;Lcpv;Lgw;Ldfj;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	m	(Ldfn;)Z	b	lambda$getOrCreateIronGolemBase$1
		p	0		pos
	m	()Ldfo;	g	getOrCreateSnowGolemFull
	m	(Ldfj;)Z	h	lambda$static$0
		p	0		state
	m	()Ldfo;	u	getOrCreateIronGolemBase
	m	()Ldfo;	v	getOrCreateIronGolemFull
	f	Ldgd;	a	FACING
	f	Ldfo;	b	snowGolemBase
	f	Ldfo;	c	snowGolemFull
	f	Ldfo;	d	ironGolemBase
	f	Ldfo;	e	ironGolemFull
	f	Ljava/util/function/Predicate;	f	PUMPKINS_PREDICATE
c	ctp	net/minecraft/world/level/block/CauldronBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lcpv;Lcqt$c;)Z	a	shouldHandlePrecipitation
		p	0		world
		p	1		precipitation
	m	(Ldfj;Lcpv;Lgw;Lcqt$c;)V	a	handlePrecipitation
		p	1		state
		p	2		world
		p	3		pos
		p	4		precipitation
	m	(Ldfj;Lcpv;Lgw;Leal;)V	a	receiveStalactiteDrip
		p	1		state
		p	2		world
		p	3		pos
		p	4		fluid
	m	(Leal;)Z	a	canReceiveStalactiteDrip
		p	1		fluid
	m	(Ldfj;)Z	d	isFull
		p	1		state
	f	F	c	RAIN_FILL_CHANCE
	f	F	d	POWDER_SNOW_FILL_CHANCE
c	ctq	net/minecraft/world/level/block/CaveVines
	m	(ILdfj;)I	a	lambda$emission$0
		p	1		state
	m	(Lbiq;Ldfj;Lcpv;Lgw;)Lbgy;	a	use
		p	0		picker
		p	1		state
		p	2		world
		p	3		pos
	m	(I)Ljava/util/function/ToIntFunction;	h_	emission
		p	0		luminance
	m	(Ldfj;)Z	h_	hasGlowBerries
		p	0		state
	f	Leig;	r_	SHAPE
	f	Ldga;	s_	BERRIES
c	ctr	net/minecraft/world/level/block/CaveVinesBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	()Lcsv;	a	getBodyBlock
	m	(Lakq;Lasc;Lgw;Ldfj;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lasc;)I	a	getBlocksToGrowWhenBonemealed
		p	1		random
	m	(Lcpb;Lgw;Ldfj;)Lcjf;	a	getCloneItemStack
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcpv;Lasc;Lgw;Ldfj;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcpy;Lgw;Ldfj;)Z	a	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldfj;Lasc;)Ldfj;	a	getGrowIntoState
		p	1		state
		p	2		random
	m	(Ldfj;Lcpv;Lgw;Lcbu;Lbgx;Lehj;)Lbgy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldfj;Ldfj;)Ldfj;	a	updateBodyAfterConvertedFromHead
		p	1		from
		p	2		to
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldfj;)Z	g	canGrowInto
		p	1		state
	f	F	f	CHANCE_OF_BERRIES_ON_GROWTH
c	cts	net/minecraft/world/level/block/CaveVinesPlantBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lakq;Lasc;Lgw;Ldfj;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcpb;Lgw;Ldfj;)Lcjf;	a	getCloneItemStack
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcpv;Lasc;Lgw;Ldfj;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcpy;Lgw;Ldfj;)Z	a	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldfj;Lcpv;Lgw;Lcbu;Lbgx;Lehj;)Lbgy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldfj;Ldfj;)Ldfj;	a	updateHeadAfterConvertedFromBody
		p	1		from
		p	2		to
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	()Lcwi;	b	getHeadBlock
c	ctt	net/minecraft/world/level/block/CeilingHangingSignBlock
	m	(Ldfi$d;Ldgw;)V	<init>	<init>
		p	1		settings
		p	2		type
	m	(Lcbu;Lehj;Lded;Lcjf;)Z	a	shouldTryToChainAnotherHangingSign
		p	1		player
		p	2		hitResult
		p	3		sign
		p	4		stack
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Lcpv;Ldfj;Ldcx;)Ldcw;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpv;Lgw;Lcbu;Lbgx;Lehj;)Lbgy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldfj;Lcpy;Lgw;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lcxq;)Ldfj;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldfj;Lczh;)Ldfj;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lgw;Ldfj;)Ldcv;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Ldfj;Lcpb;Lgw;)Leig;	b_	getBlockSupportShape
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;)F	g	getYRotationDegrees
		p	1		state
	f	Ldgj;	a	ROTATION
	f	Ldga;	b	ATTACHED
	f	F	c	AABB_OFFSET
	f	Leig;	d	SHAPE
	f	Ljava/util/Map;	h	AABBS
c	ctu	net/minecraft/world/level/block/ChainBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Ldfj;Lcpb;Lgw;Lebc;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldfj;)Leam;	c_	getFluidState
		p	1		state
	f	Ldga;	a	WATERLOGGED
	f	F	b	AABB_MIN
	f	F	c	AABB_MAX
	f	Leig;	d	Y_AXIS_AABB
	f	Leig;	e	Z_AXIS_AABB
	f	Leig;	f	X_AXIS_AABB
c	ctu$1	net/minecraft/world/level/block/ChainBlock$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction$Axis
c	ctv	net/minecraft/world/level/block/ChangeOverTimeBlock
	m	()F	a	getChanceModifier
	m	(Lakq;Lgw;Ldfj;)V	a	lambda$applyChangeOverTime$0
		p	2		statex
	m	(Ldfj;Lakq;Lgw;Lasc;)V	a_	onRandomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	()Ljava/lang/Enum;	b	getAge
	m	(Ldfj;Lakq;Lgw;Lasc;)V	c	applyChangeOverTime
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;)Ljava/util/Optional;	i_	getNext
		p	1		state
	f	I	w_	SCAN_DISTANCE
c	ctw	net/minecraft/world/level/block/CherryLeavesBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Ldfj;Lcpv;Lgw;Lasc;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
c	ctx	net/minecraft/world/level/block/ChestBlock
	m	(Ldfi$d;Ljava/util/function/Supplier;)V	<init>	<init>
		p	1		settings
		p	2		entityTypeSupplier
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Lcln;Lha;)Lha;	a	candidatePartnerFacing
		p	1		ctx
		p	2		dir
	m	(Lcpb;Lgw;)Z	a	isBlockedChestByBlock
		p	0		world
		p	1		pos
	m	(Lcpv;Ldfj;Ldcx;)Ldcw;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Lcpv;Lgw;Ldfj;Lbjg;Lcjf;)V	a	setPlacedBy
		p	1		world
		p	2		pos
		p	3		state
		p	4		placer
		p	5		itemStack
	m	(Lcpw;Lgw;)Z	a	isChestBlockedAt
		p	0		world
		p	1		pos
	m	(Lctx;Ldfj;Lcpv;Lgw;Z)Lbgr;	a	getContainer
		p	0		block
		p	1		state
		p	2		world
		p	3		pos
		p	4		ignoreBlocked
	m	(Lddx;)Lcuy$b;	a	opennessCombiner
		p	0		progress
	m	(Ldfj;Lakq;Lgw;Lasc;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lcpb;Lgw;Lebc;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpv;Lgw;)I	a	getAnalogOutputSignal
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lcpv;Lgw;Lcbu;Lbgx;Lehj;)Lbgy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldfj;Lcpv;Lgw;Ldfj;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Ldfj;Lcpv;Lgw;Z)Lcuy$c;	a	combine
		p	1		state
		p	2		world
		p	3		pos
		p	4		ignoreBlocked
	m	(Ldfj;Lcxq;)Ldfj;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldfj;Lczh;)Ldfj;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lgw;Ldfj;)Ldcv;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	()Lapk;	b	getOpenChestStat
	m	(Lcpw;Lgw;)Z	b	isCatSittingOnChest
		p	0		world
		p	1		pos
	m	(Ldfj;Lcpv;Lgw;)Lbhb;	b	getMenuProvider
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;)Lcza;	b_	getRenderShape
		p	1		state
	m	()Ldcx;	c	blockEntityType
	m	(Lcpw;Lgw;)Z	c	lambda$combine$0
		p	0		worldx
		p	1		posx
	m	(Ldfj;)Leam;	c_	getFluidState
		p	1		state
	m	(Ldfj;)Z	d_	hasAnalogOutputSignal
		p	1		state
	m	(Ldfj;)Lcuy$a;	g	getBlockType
		p	0		state
	m	(Ldfj;)Lha;	h	getConnectedDirection
		p	0		state
	f	Ldgd;	b	FACING
	f	Ldgh;	c	TYPE
	f	Ldga;	d	WATERLOGGED
	f	I	e	EVENT_SET_OPEN_COUNT
	f	I	f	AABB_OFFSET
	f	I	g	AABB_HEIGHT
	f	Leig;	h	NORTH_AABB
	f	Leig;	i	SOUTH_AABB
	f	Leig;	j	WEST_AABB
	f	Leig;	k	EAST_AABB
	f	Leig;	l	AABB
	f	Lcuy$b;	m	CHEST_COMBINER
	f	Lcuy$b;	n	MENU_PROVIDER_COMBINER
c	ctx$1	net/minecraft/world/level/block/ChestBlock$1
	m	()Ljava/util/Optional;	a	acceptNone
	m	(Lddc;)Ljava/util/Optional;	a	acceptSingle
		p	1		single
	m	(Lddc;Lddc;)Ljava/util/Optional;	a	acceptDouble
		p	1		first
		p	2		second
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	acceptSingle
		p	1		single
	m	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;	a	acceptDouble
		p	1		first
		p	2		second
	m	()Ljava/lang/Object;	b	acceptNone
c	ctx$2	net/minecraft/world/level/block/ChestBlock$2
	m	()Ljava/util/Optional;	a	acceptNone
	m	(Lddc;)Ljava/util/Optional;	a	acceptSingle
		p	1		single
	m	(Lddc;Lddc;)Ljava/util/Optional;	a	acceptDouble
		p	1		first
		p	2		second
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	acceptSingle
		p	1		single
	m	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;	a	acceptDouble
		p	1		first
		p	2		second
	m	()Ljava/lang/Object;	b	acceptNone
c	ctx$2$1	net/minecraft/world/level/block/ChestBlock$2$1
	m	()Ltl;	N_	getDisplayName
	m	(ILcbt;Lcbu;)Lcel;	createMenu	createMenu
		p	1		syncId
		p	2		playerInventory
		p	3		player
	f	Lddc;	a	val$first
	f	Lddc;	b	val$second
	f	Lbgr;	c	val$container
	f	Lctx$2;	d	this$0
c	ctx$3	net/minecraft/world/level/block/ChestBlock$3
	m	()Lit/unimi/dsi/fastutil/floats/Float2FloatFunction;	a	acceptNone
	m	(Lddc;)Lit/unimi/dsi/fastutil/floats/Float2FloatFunction;	a	acceptSingle
		p	1		single
	m	(Lddc;Lddc;)Lit/unimi/dsi/fastutil/floats/Float2FloatFunction;	a	acceptDouble
		p	1		first
		p	2		second
	m	(Lddc;Lddc;F)F	a	lambda$acceptDouble$0
		p	2		tickDelta
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	acceptSingle
		p	1		single
	m	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;	a	acceptDouble
		p	1		first
		p	2		second
	m	()Ljava/lang/Object;	b	acceptNone
	f	Lddx;	a	val$entity
c	ctx$4	net/minecraft/world/level/block/ChestBlock$4
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	cty	net/minecraft/world/level/block/ChiseledBookShelfBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(F)I	a	getSection
		p	0		x
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Lcpv;Lgw;Lcbu;Ldde;I)V	a	removeBook
		p	0		world
		p	1		pos
		p	2		player
		p	3		blockEntity
		p	4		slot
	m	(Lcpv;Lgw;Lcbu;Ldde;Lcjf;I)V	a	addBook
		p	0		world
		p	1		pos
		p	2		player
		p	3		blockEntity
		p	4		stack
		p	5		slot
	m	(Ldfj;Lcpv;Lgw;)I	a	getAnalogOutputSignal
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lcpv;Lgw;Lcbu;Lbgx;Lehj;)Lbgy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldfj;Lcpv;Lgw;Ldfj;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Ldfj;Lcxq;)Ldfj;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldfj;Lczh;)Ldfj;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldfk$a;Ldgm;)V	a	lambda$createBlockStateDefinition$0
		p	1		property
	m	(Lehj;Lha;)Ljava/util/Optional;	a	getRelativeHitCoordinatesForBlockFace
		p	0		hit
		p	1		facing
	m	(Lehm;)I	a	getHitSlot
		p	0		hitPos
	m	(Lgw;Ldfj;)Ldcv;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Ldfj;)Lcza;	b_	getRenderShape
		p	1		state
	m	(Ldfj;)Z	d_	hasAnalogOutputSignal
		p	1		state
	f	I	a	BOOKS_PER_ROW
	f	Ljava/util/List;	b	SLOT_OCCUPIED_PROPERTIES
	f	I	c	MAX_BOOKS_IN_STORAGE
c	cty$1	net/minecraft/world/level/block/ChiseledBookShelfBlock$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	ctz	net/minecraft/world/level/block/ChorusFlowerBlock
	m	(Lcua;Ldfi$d;)V	<init>	<init>
		p	1		plantBlock
		p	2		settings
	m	(Lcpv;Ldfj;Lehj;Lccm;)V	a	onProjectileHit
		p	1		world
		p	2		state
		p	3		hit
		p	4		projectile
	m	(Lcpv;Lgw;)V	a	placeDeadFlower
		p	1		world
		p	2		pos
	m	(Lcpv;Lgw;I)V	a	placeGrownFlower
		p	1		world
		p	2		pos
		p	3		age
	m	(Lcpw;Lgw;Lasc;I)V	a	generatePlant
		p	0		world
		p	1		pos
		p	2		random
		p	3		size
	m	(Lcpw;Lgw;Lasc;Lgw;II)V	a	growTreeRecursive
		p	0		world
		p	1		pos
		p	2		random
		p	3		rootPos
		p	4		size
		p	5		layer
	m	(Ldfj;Lakq;Lgw;Lasc;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lcpy;Lgw;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lcpy;Lgw;Lha;)Z	b	allNeighborsEmpty
		p	0		world
		p	1		pos
		p	2		exceptDirection
	m	(Ldfj;Lakq;Lgw;Lasc;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lcpb;Lgw;)Leig;	b_	getBlockSupportShape
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;)Z	e_	isRandomlyTicking
		p	1		state
	f	I	a	DEAD_AGE
	f	Ldgj;	b	AGE
	f	Leig;	c	BLOCK_SUPPORT_SHAPE
	f	Lcua;	d	plant
c	cua	net/minecraft/world/level/block/ChorusPlantBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Lcpb;Lgw;)Ldfj;	a	getStateForPlacement
		p	1		world
		p	2		pos
	m	(Ldfj;Lakq;Lgw;Lasc;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lcpb;Lgw;Lebc;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldfj;Lcpy;Lgw;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
c	cub	net/minecraft/world/level/block/CocoaBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lakq;Lasc;Lgw;Ldfj;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Lcpv;Lasc;Lgw;Ldfj;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcpy;Lgw;Ldfj;)Z	a	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldfj;Lcpb;Lgw;Lebc;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpy;Lgw;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldfj;Lakq;Lgw;Lasc;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;)Z	e_	isRandomlyTicking
		p	1		state
	f	[Leig;	D	SOUTH_AABB
	f	I	a	MAX_AGE
	f	Ldgj;	b	AGE
	f	I	c	AGE_0_WIDTH
	f	I	d	AGE_0_HEIGHT
	f	I	e	AGE_0_HALFWIDTH
	f	I	f	AGE_1_WIDTH
	f	I	g	AGE_1_HEIGHT
	f	I	h	AGE_1_HALFWIDTH
	f	I	i	AGE_2_WIDTH
	f	I	j	AGE_2_HEIGHT
	f	I	k	AGE_2_HALFWIDTH
	f	[Leig;	l	EAST_AABB
	f	[Leig;	m	WEST_AABB
	f	[Leig;	n	NORTH_AABB
c	cub$1	net/minecraft/world/level/block/CocoaBlock$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	cuc	net/minecraft/world/level/block/CommandBlock
	m	(Ldfi$d;Z)V	<init>	<init>
		p	1		settings
		p	2		auto
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Lcpv;Lgw;Ldfj;Lbjg;Lcjf;)V	a	setPlacedBy
		p	1		world
		p	2		pos
		p	3		state
		p	4		placer
		p	5		itemStack
	m	(Lcpv;Lgw;Lha;)V	a	executeChain
		p	0		world
		p	1		pos
		p	2		facing
	m	(Ldfj;Lakq;Lgw;Lasc;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lcpv;Lgw;)I	a	getAnalogOutputSignal
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lcpv;Lgw;Lcbu;Lbgx;Lehj;)Lbgy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldfj;Lcpv;Lgw;Lcow;Z)V	a	execute
		p	1		state
		p	2		world
		p	3		pos
		p	4		executor
		p	5		hasCommand
	m	(Ldfj;Lcpv;Lgw;Lcsv;Lgw;Z)V	a	neighborChanged
		p	1		state
		p	2		world
		p	3		pos
		p	4		sourceBlock
		p	5		sourcePos
		p	6		notify
	m	(Ldfj;Lcxq;)Ldfj;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldfj;Lczh;)Ldfj;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lgw;Ldfj;)Ldcv;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Ldfj;)Lcza;	b_	getRenderShape
		p	1		state
	m	(Ldfj;)Z	d_	hasAnalogOutputSignal
		p	1		state
	f	Ldgd;	a	FACING
	f	Ldga;	b	CONDITIONAL
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	Z	d	automatic
c	cud	net/minecraft/world/level/block/ComparatorBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lcpv;Lgw;Ldfj;)Z	a	shouldTurnOn
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcpv;Lha;Lgw;)Lbyg;	a	getItemFrame
		p	1		world
		p	2		facing
		p	3		pos
	m	(Ldfj;Lakq;Lgw;Lasc;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lcpv;Lgw;II)Z	a	triggerEvent
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
		p	5		data
	m	(Ldfj;Lcpv;Lgw;Lcbu;Lbgx;Lehj;)Lbgy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lgw;Ldfj;)Ldcv;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Lha;Lbyg;)Z	a	lambda$getItemFrame$0
		p	1		itemFrame
	m	(Lcpb;Lgw;Ldfj;)I	b	getOutputSignal
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcpv;Lgw;Ldfj;)I	b	getInputSignal
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcpv;Lgw;Ldfj;)V	c	checkTickOnNeighbor
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcpv;Lgw;Ldfj;)I	e	calculateOutputSignal
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcpv;Lgw;Ldfj;)V	f	refreshOutputState
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldfj;)I	g	getDelay
		p	1		state
	f	Ldgh;	a	MODE
c	cue	net/minecraft/world/level/block/ComposterBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	()V	a	bootStrap
	m	(FLcpu;)V	a	add
		p	0		levelIncreaseChance
		p	1		item
	m	(Lbiq;Ldfj;Lakq;Lcjf;Lgw;)Ldfj;	a	insertItem
		p	0		user
		p	1		state
		p	2		world
		p	3		stack
		p	4		pos
	m	(Lbiq;Ldfj;Lcpv;Lgw;)Ldfj;	a	extractProduce
		p	0		user
		p	1		state
		p	2		world
		p	3		pos
	m	(Lbiq;Ldfj;Lcpw;Lgw;)Ldfj;	a	empty
		p	0		user
		p	1		state
		p	2		world
		p	3		pos
	m	(Lbiq;Ldfj;Lcpw;Lgw;Lcjf;)Ldfj;	a	addItem
		p	0		user
		p	1		state
		p	2		world
		p	3		pos
		p	4		stack
	m	(Lcpv;Lgw;Z)V	a	handleFill
		p	0		world
		p	1		pos
		p	2		fill
	m	(Ldfj;Lakq;Lgw;Lasc;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lcpb;Lgw;)Leig;	a	getInteractionShape
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lcpb;Lgw;Lebc;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpv;Lgw;)I	a	getAnalogOutputSignal
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lcpv;Lgw;Lcbu;Lbgx;Lehj;)Lbgy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldfj;Lcpw;Lgw;)Lbhh;	a	getContainer
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	([Leig;)V	a	lambda$static$0
		p	0		shapes
	m	(Ldfj;Lcpv;Lgw;Ldfj;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	c	getCollisionShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;)Z	d_	hasAnalogOutputSignal
		p	1		state
	f	I	a	READY
	f	I	b	MIN_LEVEL
	f	I	c	MAX_LEVEL
	f	Ldgj;	d	LEVEL
	f	Lit/unimi/dsi/fastutil/objects/Object2FloatMap;	e	COMPOSTABLES
	f	I	f	AABB_SIDE_THICKNESS
	f	Leig;	g	OUTER_SHAPE
	f	[Leig;	h	SHAPES
c	cue$a	net/minecraft/world/level/block/ComposterBlock$EmptyContainer
	m	(ILcjf;Lha;)Z	a	canPlaceItemThroughFace
		p	1		slot
		p	2		stack
		p	3		dir
	m	(Lha;)[I	a	getSlotsForFace
		p	1		side
	m	(ILcjf;Lha;)Z	b	canTakeItemThroughFace
		p	1		slot
		p	2		stack
		p	3		dir
c	cue$b	net/minecraft/world/level/block/ComposterBlock$InputContainer
	m	(Ldfj;Lcpw;Lgw;)V	<init>	<init>
		p	1		state
		p	2		world
		p	3		pos
	m	(ILcjf;Lha;)Z	a	canPlaceItemThroughFace
		p	1		slot
		p	2		stack
		p	3		dir
	m	(Lha;)[I	a	getSlotsForFace
		p	1		side
	m	()I	ag_	getMaxStackSize
	m	(ILcjf;Lha;)Z	b	canTakeItemThroughFace
		p	1		slot
		p	2		stack
		p	3		dir
	m	()V	e	setChanged
	f	Ldfj;	c	state
	f	Lcpw;	d	level
	f	Lgw;	e	pos
	f	Z	f	changed
c	cue$c	net/minecraft/world/level/block/ComposterBlock$OutputContainer
	m	(Ldfj;Lcpw;Lgw;Lcjf;)V	<init>	<init>
		p	1		state
		p	2		world
		p	3		pos
		p	4		outputItem
	m	(ILcjf;Lha;)Z	a	canPlaceItemThroughFace
		p	1		slot
		p	2		stack
		p	3		dir
	m	(Lha;)[I	a	getSlotsForFace
		p	1		side
	m	()I	ag_	getMaxStackSize
	m	(ILcjf;Lha;)Z	b	canTakeItemThroughFace
		p	1		slot
		p	2		stack
		p	3		dir
	m	()V	e	setChanged
	f	Ldfj;	c	state
	f	Lcpw;	d	level
	f	Lgw;	e	pos
	f	Z	f	changed
c	cuf	net/minecraft/world/level/block/ConcretePowderBlock
	m	(Lcsv;Ldfi$d;)V	<init>	<init>
		p	1		hardened
		p	2		settings
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Lcpb;Lgw;)Z	a	touchesLiquid
		p	0		world
		p	1		pos
	m	(Lcpv;Lgw;Ldfj;Ldfj;Lbym;)V	a	onLand
		p	1		world
		p	2		pos
		p	3		fallingBlockState
		p	4		currentStateInPos
		p	5		fallingBlockEntity
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lcpb;Lgw;Ldfj;)Z	b	shouldSolidify
		p	0		world
		p	1		pos
		p	2		state
	m	(Ldfj;Lcpb;Lgw;)I	d	getDustColor
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;)Z	n	canSolidify
		p	0		state
	f	Ldfj;	a	concrete
c	cug	net/minecraft/world/level/block/ConduitBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Lcpv;Ldfj;Ldcx;)Ldcw;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Lcpv;Lgw;Ldfj;Lbjg;Lcjf;)V	a	setPlacedBy
		p	1		world
		p	2		pos
		p	3		state
		p	4		placer
		p	5		itemStack
	m	(Ldfj;Lcpb;Lgw;Lebc;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lgw;Ldfj;)Ldcv;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Ldfj;)Lcza;	b_	getRenderShape
		p	1		state
	m	(Ldfj;)Leam;	c_	getFluidState
		p	1		state
	f	Ldga;	a	WATERLOGGED
	f	Leig;	b	SHAPE
	f	I	c	SIZE
c	cuh	net/minecraft/world/level/block/CoralBlock
	m	(Lcsv;Ldfi$d;)V	<init>	<init>
		p	1		deadCoralBlock
		p	2		settings
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Lcpb;Lgw;)Z	a	scanForWater
		p	1		world
		p	2		pos
	m	(Ldfj;Lakq;Lgw;Lasc;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	f	Lcsv;	a	deadBlock
c	cui	net/minecraft/world/level/block/CoralFanBlock
	m	(Lcsv;Ldfi$d;)V	<init>	<init>
		p	1		deadCoralBlock
		p	2		settings
	m	(Ldfj;Lakq;Lgw;Lasc;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldfj;Lcpv;Lgw;Ldfj;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	f	Lcsv;	a	deadBlock
c	cuj	net/minecraft/world/level/block/CoralPlantBlock
	m	(Lcsv;Ldfi$d;)V	<init>	<init>
		p	1		deadCoralBlock
		p	2		settings
	m	(Ldfj;Lakq;Lgw;Lasc;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldfj;Lcpv;Lgw;Ldfj;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	f	F	a	AABB_OFFSET
	f	Leig;	b	SHAPE
	f	Lcsv;	d	deadBlock
c	cuk	net/minecraft/world/level/block/CoralWallFanBlock
	m	(Lcsv;Ldfi$d;)V	<init>	<init>
		p	1		deadCoralBlock
		p	2		settings
	m	(Ldfj;Lakq;Lgw;Lasc;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldfj;Lcpv;Lgw;Ldfj;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	f	Lcsv;	b	deadBlock
c	cul	net/minecraft/world/level/block/CraftingTableBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lcpv;Lgw;ILcbt;Lcbu;)Lcel;	a	lambda$getMenuProvider$0
		p	2		syncId
		p	3		inventory
		p	4		player
	m	(Ldfj;Lcpv;Lgw;Lcbu;Lbgx;Lehj;)Lbgy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldfj;Lcpv;Lgw;)Lbhb;	b	getMenuProvider
		p	1		state
		p	2		world
		p	3		pos
	f	Ltl;	a	CONTAINER_TITLE
c	cum	net/minecraft/world/level/block/CropBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	()Ldgj;	a	getAgeProperty
	m	(Lakq;Lasc;Lgw;Ldfj;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcpb;Lgw;Ldfj;)Lcjf;	a	getCloneItemStack
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcpv;)I	a	getBonemealAgeIncrease
		p	1		world
	m	(Lcpv;Lasc;Lgw;Ldfj;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcpv;Lgw;Ldfj;)V	a	growCrops
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcpy;Lgw;)Z	a	hasSufficientLight
		p	0		world
		p	1		pos
	m	(Lcpy;Lgw;Ldfj;)Z	a	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcsv;Lcpb;Lgw;)F	a	getGrowthSpeed
		p	0		block
		p	1		world
		p	2		pos
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpv;Lgw;Lbiq;)V	a	entityInside
		p	1		state
		p	2		world
		p	3		pos
		p	4		entity
	m	(Ldfj;Lcpy;Lgw;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	()I	b	getMaxAge
	m	(I)Ldfj;	b	getStateForAge
		p	1		age
	m	(Ldfj;Lakq;Lgw;Lasc;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	()Lcpu;	c	getBaseSeedId
	m	(Ldfj;Lcpb;Lgw;)Z	d	mayPlaceOn
		p	1		floor
		p	2		world
		p	3		pos
	m	(Ldfj;)Z	e_	isRandomlyTicking
		p	1		state
	m	(Ldfj;)I	g	getAge
		p	1		state
	m	(Ldfj;)Z	h	isMaxAge
	f	[Leig;	a	SHAPE_BY_AGE
	f	I	c	MAX_AGE
	f	Ldgj;	d	AGE
c	cun	net/minecraft/world/level/block/CrossCollisionBlock
	m	(FFFFFLdfi$d;)V	<init>	<init>
		p	1		radius1
		p	2		radius2
		p	3		boundingHeight1
		p	4		boundingHeight2
		p	5		collisionHeight
		p	6		settings
	m	(FFFFF)[Leig;	a	makeShapes
		p	1		radius1
		p	2		radius2
		p	3		height1
		p	4		offset2
		p	5		height2
	m	(Ldfj;Lcpb;Lgw;Lebc;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcxq;)Ldfj;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldfj;Lczh;)Ldfj;	a	rotate
		p	1		state
		p	2		rotation
	m	(Lha;)I	a	indexFor
		p	0		dir
	m	(Ljava/util/Map$Entry;)Z	a	lambda$static$0
		p	0		entry
	m	(Ldfj;Lcpb;Lgw;)Z	c	propagatesSkylightDown
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	c	getCollisionShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;)Leam;	c_	getFluidState
		p	1		state
	m	(Ldfj;)I	g	getAABBIndex
		p	1		state
	m	(Ldfj;)I	h	lambda$getAABBIndex$1
		p	0		statex
	f	Ldga;	a	NORTH
	f	Ldga;	b	EAST
	f	Ldga;	c	SOUTH
	f	Ldga;	d	WEST
	f	Ldga;	e	WATERLOGGED
	f	Ljava/util/Map;	f	PROPERTY_BY_DIRECTION
	f	[Leig;	g	collisionShapeByIndex
	f	[Leig;	h	shapeByIndex
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	i	stateToIndex
c	cun$1	net/minecraft/world/level/block/CrossCollisionBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$Rotation
	f	[I	b	$SwitchMap$net$minecraft$world$level$block$Mirror
c	cuo	net/minecraft/world/level/block/CryingObsidianBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Ldfj;Lcpv;Lgw;Lasc;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
c	cup	net/minecraft/world/level/block/DaylightDetectorBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lcpv;Ldfj;Ldcx;)Ldcw;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Lcpv;Lgw;Ldfj;Lddj;)V	a	tickEntity
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpb;Lgw;Lha;)I	a	getSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldfj;Lcpv;Lgw;Lcbu;Lbgx;Lehj;)Lbgy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lgw;Ldfj;)Ldcv;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Ldfj;)Lcza;	b_	getRenderShape
		p	1		state
	m	(Ldfj;Lcpv;Lgw;)V	d	updateSignalStrength
		p	0		state
		p	1		world
		p	2		pos
	m	(Ldfj;)Z	f_	isSignalSource
		p	1		state
	m	(Ldfj;)Z	g_	useShapeForLightOcclusion
		p	1		state
	f	Ldgj;	a	POWER
	f	Ldga;	b	INVERTED
	f	Leig;	c	SHAPE
c	cuq	net/minecraft/world/level/block/DeadBushBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpb;Lgw;)Z	d	mayPlaceOn
		p	1		floor
		p	2		world
		p	3		pos
	f	F	a	AABB_OFFSET
	f	Leig;	b	SHAPE
c	cur	net/minecraft/world/level/block/DecoratedPotBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lcjf;Lcpb;Ljava/util/List;Lckw;)V	a	appendHoverText
		p	1		stack
		p	2		world
		p	3		tooltip
		p	4		options
	m	(Lcjf;Lddk;)V	a	lambda$setPlacedBy$0
		p	1		blockEntity
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Lcpb;Lgw;Ldfj;)Lcjf;	a	getCloneItemStack
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcpv;Lgw;Ldfj;Lbjg;Lcjf;)V	a	setPlacedBy
		p	1		world
		p	2		pos
		p	3		state
		p	4		placer
		p	5		itemStack
	m	(Lcpv;Lgw;Ldfj;Lcbu;)V	a	playerWillDestroy
		p	1		world
		p	2		pos
		p	3		state
		p	4		player
	m	(Lddk;Ljava/util/function/Consumer;)V	a	lambda$getDrops$1
		p	1		lootConsumer
	m	(Ldfj;Lcpb;Lgw;Lebc;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lecw$a;)Ljava/util/List;	a	getDrops
		p	1		state
		p	2		builder
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lgw;Ldfj;)Ldcv;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Ljava/util/List;Lcja;)V	a	lambda$appendHoverText$2
		p	1		sherd
	m	(Ldfj;)Leam;	c_	getFluidState
		p	1		state
	m	(Ldfj;)Ldai;	m	getSoundType
		p	1		state
	f	Laew;	a	SHERDS_DYNAMIC_DROP_ID
	f	Leig;	b	BOUNDING_BOX
	f	Ldgd;	c	HORIZONTAL_FACING
	f	Ldga;	d	CRACKED
	f	Ldga;	e	WATERLOGGED
c	cus	net/minecraft/world/level/block/DetectorRailBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lbiq;)Z	a	lambda$getAnalogOutputSignal$1
		p	0		cart
	m	(Lcpv;Lgw;Ldfj;)V	a	checkPressed
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcpv;Lgw;Ljava/lang/Class;Ljava/util/function/Predicate;)Ljava/util/List;	a	getInteractingMinecartOfType
		p	1		world
		p	2		pos
		p	3		entityClass
		p	4		entityPredicate
	m	(Ldfj;Lakq;Lgw;Lasc;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lcpb;Lgw;Lha;)I	a	getSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldfj;Lcpv;Lgw;)I	a	getAnalogOutputSignal
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lcpv;Lgw;Lbiq;)V	a	entityInside
		p	1		state
		p	2		world
		p	3		pos
		p	4		entity
	m	(Ldfj;Lcxq;)Ldfj;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldfj;Lczh;)Ldfj;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lgw;)Lehi;	a	getSearchBB
		p	1		pos
	m	()Ldgm;	b	getShapeProperty
	m	(Lbiq;)Z	b	lambda$checkPressed$0
		p	0		entity
	m	(Lcpv;Lgw;Ldfj;Z)V	b	updatePowerToConnected
		p	1		world
		p	2		pos
		p	3		state
		p	4		unpowering
	m	(Ldfj;Lcpb;Lgw;Lha;)I	b	getDirectSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldfj;Lcpv;Lgw;Ldfj;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	m	(Ldfj;)Z	d_	hasAnalogOutputSignal
		p	1		state
	m	(Ldfj;)Z	f_	isSignalSource
		p	1		state
	f	Ldgh;	d	SHAPE
	f	Ldga;	e	POWERED
	f	I	f	PRESSED_CHECK_PERIOD
c	cus$1	net/minecraft/world/level/block/DetectorRailBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$state$properties$RailShape
	f	[I	b	$SwitchMap$net$minecraft$world$level$block$Rotation
	f	[I	c	$SwitchMap$net$minecraft$world$level$block$Mirror
c	cut	net/minecraft/world/level/block/DiodeBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	()Z	a	sideInputDiodesOnly
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Lcpv;Lgw;Ldfj;)Z	a	shouldTurnOn
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcpv;Lgw;Ldfj;Lbjg;Lcjf;)V	a	setPlacedBy
		p	1		world
		p	2		pos
		p	3		state
		p	4		placer
		p	5		itemStack
	m	(Lcpy;Lgw;Ldfj;)Z	a	canSurviveOn
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcql;Lgw;Ldfj;)I	a	getAlternateSignal
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldfj;Lakq;Lgw;Lasc;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpb;Lgw;Lha;)I	a	getSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldfj;Lcpv;Lgw;Lcsv;Lgw;Z)V	a	neighborChanged
		p	1		state
		p	2		world
		p	3		pos
		p	4		sourceBlock
		p	5		sourcePos
		p	6		notify
	m	(Ldfj;Lcpv;Lgw;Ldfj;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Ldfj;Lcpy;Lgw;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcpb;Lgw;Ldfj;)I	b	getOutputSignal
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcpv;Lgw;Ldfj;)I	b	getInputSignal
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcpy;Lgw;Ldfj;)Z	b	isLocked
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldfj;Lcpb;Lgw;Lha;)I	b	getDirectSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldfj;Lcpv;Lgw;Ldfj;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	m	(Lcpb;Lgw;Ldfj;)Z	c	shouldPrioritize
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcpv;Lgw;Ldfj;)V	c	checkTickOnNeighbor
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcpv;Lgw;Ldfj;)V	d	updateNeighborsInFront
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldfj;)Z	f_	isSignalSource
		p	1		state
	m	(Ldfj;)I	g	getDelay
		p	1		state
	m	(Ldfj;)Z	h	isDiode
		p	0		state
	f	Leig;	b	SHAPE
	f	Ldga;	c	POWERED
c	cuu	net/minecraft/world/level/block/DirectionalBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	f	Ldgd;	a	FACING
c	cuv	net/minecraft/world/level/block/DirtPathBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Ldfj;Lakq;Lgw;Lasc;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lcpb;Lgw;Lebc;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpy;Lgw;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldfj;)Z	g_	useShapeForLightOcclusion
		p	1		state
	f	Leig;	a	SHAPE
c	cuw	net/minecraft/world/level/block/DispenserBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lakq;Ldfj;Lgw;)V	a	dispenseFrom
		p	1		world
		p	2		state
		p	3		pos
	m	(Lcjf;)Lih;	a	getDispenseMethod
		p	1		stack
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Lcpu;Lih;)V	a	registerBehavior
		p	0		provider
		p	1		behavior
	m	(Lcpv;Lgw;Ldfj;Lbjg;Lcjf;)V	a	setPlacedBy
		p	1		world
		p	2		pos
		p	3		state
		p	4		placer
		p	5		itemStack
	m	(Ldfj;Lakq;Lgw;Lasc;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lcpv;Lgw;)I	a	getAnalogOutputSignal
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lcpv;Lgw;Lcbu;Lbgx;Lehj;)Lbgy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldfj;Lcpv;Lgw;Lcsv;Lgw;Z)V	a	neighborChanged
		p	1		state
		p	2		world
		p	3		pos
		p	4		sourceBlock
		p	5		sourcePos
		p	6		notify
	m	(Ldfj;Lcpv;Lgw;Ldfj;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Ldfj;Lcxq;)Ldfj;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldfj;Lczh;)Ldfj;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lgw;Ldfj;)Ldcv;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Lid;)Lho;	a	getDispensePosition
		p	0		pointer
	m	(Lit/unimi/dsi/fastutil/objects/Object2ObjectOpenHashMap;)V	a	lambda$static$0
		p	0		map
	m	(Ldfj;)Lcza;	b_	getRenderShape
		p	1		state
	m	(Ldfj;)Z	d_	hasAnalogOutputSignal
		p	1		state
	f	Ldgd;	a	FACING
	f	Ldga;	b	TRIGGERED
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	Ljava/util/Map;	d	DISPENSER_REGISTRY
	f	I	e	TRIGGER_DURATION
c	cux	net/minecraft/world/level/block/DoorBlock
	m	(Ldfi$d;Ldfy;)V	<init>	<init>
		p	1		settings
		p	2		blockSetType
	m	()Ldfy;	a	type
	m	(Lbiq;Lcpv;Ldfj;Lgw;Z)V	a	setOpen
		p	1		entity
		p	2		world
		p	3		state
		p	4		pos
		p	5		open
	m	(Lbiq;Lcpv;Lgw;Z)V	a	playSound
		p	1		entity
		p	2		world
		p	3		pos
		p	4		open
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Lcpv;Lgw;)Z	a	isWoodenDoor
		p	0		world
		p	1		pos
	m	(Lcpv;Lgw;Ldfj;Lbjg;Lcjf;)V	a	setPlacedBy
		p	1		world
		p	2		pos
		p	3		state
		p	4		placer
		p	5		itemStack
	m	(Lcpv;Lgw;Ldfj;Lcbu;)V	a	playerWillDestroy
		p	1		world
		p	2		pos
		p	3		state
		p	4		player
	m	(Ldfj;Lcpb;Lgw;Lebc;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpv;Lgw;Lcbu;Lbgx;Lehj;)Lbgy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldfj;Lcpv;Lgw;Lcsv;Lgw;Z)V	a	neighborChanged
		p	1		state
		p	2		world
		p	3		pos
		p	4		sourceBlock
		p	5		sourcePos
		p	6		notify
	m	(Ldfj;Lcpy;Lgw;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lcxq;)Ldfj;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldfj;Lczh;)Ldfj;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldfj;Lgw;)J	a	getSeed
		p	1		state
		p	2		pos
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lcln;)Ldge;	b	getHinge
		p	1		ctx
	m	(Ldfj;)Z	h	isOpen
		p	1		state
	m	(Ldfj;)Z	n	isWoodenDoor
		p	0		state
	f	Ldgd;	a	FACING
	f	Ldga;	b	OPEN
	f	Ldgh;	c	HINGE
	f	Ldga;	d	POWERED
	f	Ldgh;	e	HALF
	f	F	f	AABB_DOOR_THICKNESS
	f	Leig;	g	SOUTH_AABB
	f	Leig;	h	NORTH_AABB
	f	Leig;	i	WEST_AABB
	f	Leig;	j	EAST_AABB
	f	Ldfy;	k	type
c	cux$1	net/minecraft/world/level/block/DoorBlock$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
	f	[I	b	$SwitchMap$net$minecraft$world$level$pathfinder$PathComputationType
c	cuy	net/minecraft/world/level/block/DoubleBlockCombiner
	m	(Ldcx;Ljava/util/function/Function;Ljava/util/function/Function;Ldgd;Ldfj;Lcpw;Lgw;Ljava/util/function/BiPredicate;)Lcuy$c;	a	combineWithNeigbour
		p	0		blockEntityType
		p	1		typeMapper
		p	4		state
		p	5		world
		p	6		pos
		p	7		fallbackTester
c	cuy$a	net/minecraft/world/level/block/DoubleBlockCombiner$BlockType
	m	()[Lcuy$a;	a	$values
	f	Lcuy$a;	a	SINGLE
	f	Lcuy$a;	b	FIRST
	f	Lcuy$a;	c	SECOND
	f	[Lcuy$a;	d	$VALUES
c	cuy$b	net/minecraft/world/level/block/DoubleBlockCombiner$Combiner
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	acceptSingle
		p	1		single
	m	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;	a	acceptDouble
		p	1		first
		p	2		second
	m	()Ljava/lang/Object;	b	acceptNone
c	cuy$c	net/minecraft/world/level/block/DoubleBlockCombiner$NeighborCombineResult
	m	(Lcuy$b;)Ljava/lang/Object;	apply	apply
		p	1		retriever
c	cuy$c$a	net/minecraft/world/level/block/DoubleBlockCombiner$NeighborCombineResult$Double
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	<init>	<init>
		p	1		first
		p	2		second
	m	(Lcuy$b;)Ljava/lang/Object;	apply	apply
		p	1		retriever
	f	Ljava/lang/Object;	a	first
	f	Ljava/lang/Object;	b	second
c	cuy$c$b	net/minecraft/world/level/block/DoubleBlockCombiner$NeighborCombineResult$Single
	m	(Ljava/lang/Object;)V	<init>	<init>
		p	1		single
	m	(Lcuy$b;)Ljava/lang/Object;	apply	apply
		p	1		retriever
	f	Ljava/lang/Object;	a	single
c	cuz	net/minecraft/world/level/block/DoublePlantBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Lcpv;Lcbu;Lgw;Ldfj;Ldcv;Lcjf;)V	a	playerDestroy
		p	1		world
		p	2		player
		p	3		pos
		p	4		state
		p	5		blockEntity
		p	6		tool
	m	(Lcpv;Lgw;Ldfj;Lbjg;Lcjf;)V	a	setPlacedBy
		p	1		world
		p	2		pos
		p	3		state
		p	4		placer
		p	5		itemStack
	m	(Lcpv;Lgw;Ldfj;Lcbu;)V	a	playerWillDestroy
		p	1		world
		p	2		pos
		p	3		state
		p	4		player
	m	(Lcpw;Ldfj;Lgw;I)V	a	placeAt
		p	0		world
		p	1		state
		p	2		pos
		p	3		flags
	m	(Ldfj;Lcpy;Lgw;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lgw;)J	a	getSeed
		p	1		state
		p	2		pos
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lcpv;Lgw;Ldfj;Lcbu;)V	b	preventCreativeDropFromBottomPart
		p	0		world
		p	1		pos
		p	2		state
		p	3		player
	m	(Lcpy;Lgw;Ldfj;)Ldfj;	b	copyWaterloggedFrom
		p	0		world
		p	1		pos
		p	2		state
	f	Ldgh;	a	HALF
c	cva	net/minecraft/world/level/block/DragonEggBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	()I	a	getDelayAfterPlace
	m	(Ldfj;Lcpb;Lgw;Lebc;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpv;Lgw;Lcbu;)V	a	attack
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
	m	(Ldfj;Lcpv;Lgw;Lcbu;Lbgx;Lehj;)Lbgy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldfj;Lcpv;Lgw;)V	d	teleport
		p	1		state
		p	2		world
		p	3		pos
	f	Leig;	a	SHAPE
c	cvb	net/minecraft/world/level/block/DropExperienceBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Ldfi$d;Lbgd;)V	<init>	<init>
		p	1		settings
		p	2		experience
	m	(Ldfj;Lakq;Lgw;Lcjf;Z)V	a	spawnAfterBreak
		p	1		state
		p	2		world
		p	3		pos
		p	4		tool
		p	5		dropExperience
	f	Lbgd;	a	xpRange
c	cvc	net/minecraft/world/level/block/DropperBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lakq;Ldfj;Lgw;)V	a	dispenseFrom
		p	1		world
		p	2		state
		p	3		pos
	m	(Lcjf;)Lih;	a	getDispenseMethod
		p	1		stack
	m	(Lgw;Ldfj;)Ldcv;	a	newBlockEntity
		p	1		pos
		p	2		state
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	Lih;	d	DISPENSE_BEHAVIOUR
c	cvd	net/minecraft/world/level/block/EnchantmentTableBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lcpv;Ldfj;Ldcx;)Ldcw;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Lcpv;Lgw;ILcbt;Lcbu;)Lcel;	a	lambda$getMenuProvider$1
		p	2		syncId
		p	3		inventory
		p	4		player
	m	(Lcpv;Lgw;Ldfj;Lbjg;Lcjf;)V	a	setPlacedBy
		p	1		world
		p	2		pos
		p	3		state
		p	4		placer
		p	5		itemStack
	m	(Lcpv;Lgw;Lgw;)Z	a	isValidBookShelf
		p	0		world
		p	1		tablePos
		p	2		providerOffset
	m	(Ldfj;Lcpb;Lgw;Lebc;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpv;Lgw;Lasc;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lcpv;Lgw;Lcbu;Lbgx;Lehj;)Lbgy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Lgw;)Z	a	lambda$static$0
		p	0		pos
	m	(Lgw;Ldfj;)Ldcv;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Ldfj;Lcpv;Lgw;)Lbhb;	b	getMenuProvider
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;)Lcza;	b_	getRenderShape
		p	1		state
	m	(Ldfj;)Z	g_	useShapeForLightOcclusion
		p	1		state
	f	Leig;	a	SHAPE
	f	Ljava/util/List;	b	BOOKSHELF_OFFSETS
c	cve	net/minecraft/world/level/block/EndGatewayBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lcpb;Lgw;Ldfj;)Lcjf;	a	getCloneItemStack
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcpv;Ldfj;Ldcx;)Ldcw;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Ldfj;Lcpv;Lgw;Lasc;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Leal;)Z	a	canBeReplaced
		p	1		state
		p	2		fluid
	m	(Lgw;Ldfj;)Ldcv;	a	newBlockEntity
		p	1		pos
		p	2		state
c	cvf	net/minecraft/world/level/block/EndPortalBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lcpb;Lgw;Ldfj;)Lcjf;	a	getCloneItemStack
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpv;Lgw;Lasc;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lcpv;Lgw;Lbiq;)V	a	entityInside
		p	1		state
		p	2		world
		p	3		pos
		p	4		entity
	m	(Ldfj;Leal;)Z	a	canBeReplaced
		p	1		state
		p	2		fluid
	m	(Lgw;Ldfj;)Ldcv;	a	newBlockEntity
		p	1		pos
		p	2		state
	f	Leig;	a	SHAPE
c	cvg	net/minecraft/world/level/block/EndPortalFrameBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	()Ldfo;	a	getOrCreatePortalShape
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Ldfj;Lcpb;Lgw;Lebc;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpv;Lgw;)I	a	getAnalogOutputSignal
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lcxq;)Ldfj;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldfj;Lczh;)Ldfj;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldfj;)Z	d_	hasAnalogOutputSignal
		p	1		state
	m	(Ldfj;)Z	g_	useShapeForLightOcclusion
		p	1		state
	f	Ldgd;	a	FACING
	f	Ldga;	b	HAS_EYE
	f	Leig;	c	BASE_SHAPE
	f	Leig;	d	EYE_SHAPE
	f	Leig;	e	FULL_SHAPE
	f	Ldfo;	f	portalShape
c	cvh	net/minecraft/world/level/block/EndRodBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Ldfj;Lcpv;Lgw;Lasc;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
c	cvi	net/minecraft/world/level/block/EnderChestBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lcfu;ILcbt;Lcbu;)Lcel;	a	lambda$use$1
		p	1		syncId
		p	2		inventory
		p	3		playerx
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Lcpv;Ldfj;Ldcx;)Ldcw;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Ldfj;Lakq;Lgw;Lasc;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lcpb;Lgw;Lebc;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpv;Lgw;Lasc;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lcpv;Lgw;Lcbu;Lbgx;Lehj;)Lbgy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldfj;Lcpv;Lgw;Z)Lcuy$c;	a	combine
		p	1		state
		p	2		world
		p	3		pos
		p	4		ignoreBlocked
	m	(Ldfj;Lcxq;)Ldfj;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldfj;Lczh;)Ldfj;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lgw;Ldfj;)Ldcv;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Ldfj;)Lcza;	b_	getRenderShape
		p	1		state
	m	(Ldfj;)Leam;	c_	getFluidState
		p	1		state
	m	()Ldcx;	g	lambda$new$0
	f	Ldgd;	b	FACING
	f	Ldga;	c	WATERLOGGED
	f	Leig;	d	SHAPE
	f	Ltl;	e	CONTAINER_TITLE
c	cvj	net/minecraft/world/level/block/EntityBlock
	m	(Lakq;Ldcv;)Ldjv;	a	getListener
		p	1		world
		p	2		blockEntity
	m	(Lcpv;Ldfj;Ldcx;)Ldcw;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Lgw;Ldfj;)Ldcv;	a	newBlockEntity
		p	1		pos
		p	2		state
c	cvk	net/minecraft/world/level/block/EquipableCarvedPumpkinBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	()Lbiv;	g	getEquipmentSlot
c	cvl	net/minecraft/world/level/block/FaceAttachedHorizontalDirectionalBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Ldfj;Lcpy;Lgw;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lcpy;Lgw;Lha;)Z	b	canAttach
		p	0		world
		p	1		pos
		p	2		direction
	m	(Ldfj;)Lha;	h	getConnectedDirection
		p	0		state
	f	Ldgh;	I	FACE
c	cvl$1	net/minecraft/world/level/block/FaceAttachedHorizontalDirectionalBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$state$properties$AttachFace
c	cvm	net/minecraft/world/level/block/Fallable
	m	(Lbiq;)Lbho;	a	getFallDamageSource
		p	1		attacker
	m	(Lcpv;Lgw;Lbym;)V	a	onBrokenAfterFall
		p	1		world
		p	2		pos
		p	3		fallingBlockEntity
	m	(Lcpv;Lgw;Ldfj;Ldfj;Lbym;)V	a	onLand
		p	1		world
		p	2		pos
		p	3		fallingBlockState
		p	4		currentStateInPos
		p	5		fallingBlockEntity
c	cvn	net/minecraft/world/level/block/FallingBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	()I	a	getDelayAfterPlace
	m	(Lbym;)V	a	falling
		p	1		entity
	m	(Ldfj;Lakq;Lgw;Lasc;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lcpv;Lgw;Lasc;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldfj;Lcpv;Lgw;Ldfj;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	m	(Ldfj;Lcpb;Lgw;)I	d	getDustColor
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;)Z	h	isFree
		p	0		state
c	cvo	net/minecraft/world/level/block/FarmBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lbiq;Ldfj;Lcpv;Lgw;)V	a	turnToDirt
		p	0		entity
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Lcpb;Lgw;)Z	a	shouldMaintainFarmland
		p	0		world
		p	1		pos
	m	(Lcpv;Ldfj;Lgw;Lbiq;F)V	a	fallOn
		p	1		world
		p	2		state
		p	3		pos
		p	4		entity
		p	5		fallDistance
	m	(Lcpy;Lgw;)Z	a	isNearWater
		p	0		world
		p	1		pos
	m	(Ldfj;Lakq;Lgw;Lasc;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lcpb;Lgw;Lebc;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpy;Lgw;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldfj;Lakq;Lgw;Lasc;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;)Z	g_	useShapeForLightOcclusion
		p	1		state
	f	Ldgj;	a	MOISTURE
	f	Leig;	b	SHAPE
	f	I	c	MAX_MOISTURE
c	cvp	net/minecraft/world/level/block/FenceBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Ldfj;Lcpb;Lgw;Lebc;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldfj;Lcpv;Lgw;Lcbu;Lbgx;Lehj;)Lbgy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldfj;ZLha;)Z	a	connectsTo
		p	1		state
		p	2		neighborIsFullSquare
		p	3		dir
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	b	getVisualShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpb;Lgw;)Leig;	f	getOcclusionShape
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;)Z	h	isSameFence
		p	1		state
	f	[Leig;	i	occlusionByIndex
c	cvq	net/minecraft/world/level/block/FenceGateBlock
	m	(Ldfi$d;Ldgw;)V	<init>	<init>
		p	1		settings
		p	2		type
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Ldfj;Lcpb;Lgw;Lebc;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpv;Lgw;Lcbu;Lbgx;Lehj;)Lbgy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldfj;Lcpv;Lgw;Lcsv;Lgw;Z)V	a	neighborChanged
		p	1		state
		p	2		world
		p	3		pos
		p	4		sourceBlock
		p	5		sourcePos
		p	6		notify
	m	(Ldfj;Lha;)Z	a	connectsToDirection
		p	0		state
		p	1		side
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldfj;Lcpb;Lgw;)Leig;	b_	getBlockSupportShape
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	c	getCollisionShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpb;Lgw;)Leig;	f	getOcclusionShape
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;)Z	h	isWall
		p	1		state
	f	Leig;	D	X_OCCLUSION_SHAPE_LOW
	f	Ldgw;	E	type
	f	Ldga;	a	OPEN
	f	Ldga;	b	POWERED
	f	Ldga;	c	IN_WALL
	f	Leig;	d	Z_SHAPE
	f	Leig;	e	X_SHAPE
	f	Leig;	f	Z_SHAPE_LOW
	f	Leig;	g	X_SHAPE_LOW
	f	Leig;	h	Z_COLLISION_SHAPE
	f	Leig;	i	X_COLLISION_SHAPE
	f	Leig;	j	Z_SUPPORT_SHAPE
	f	Leig;	k	X_SUPPORT_SHAPE
	f	Leig;	l	Z_OCCLUSION_SHAPE
	f	Leig;	m	X_OCCLUSION_SHAPE
	f	Leig;	n	Z_OCCLUSION_SHAPE_LOW
c	cvq$1	net/minecraft/world/level/block/FenceGateBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$pathfinder$PathComputationType
c	cvr	net/minecraft/world/level/block/FireBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	()V	a	bootStrap
	m	(Lasc;)I	a	getFireTickDelay
		p	0		random
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Lcpv;Lgw;)Z	a	isNearRain
		p	1		world
		p	2		pos
	m	(Lcpv;Lgw;ILasc;I)V	a	checkBurnOut
		p	1		world
		p	2		pos
		p	3		spreadFactor
		p	4		random
		p	5		currentAge
	m	(Lcpw;Lgw;I)Ldfj;	a	getStateWithAge
		p	1		world
		p	2		pos
		p	3		age
	m	(Lcpy;Lgw;)I	a	getIgniteOdds
		p	1		world
		p	2		pos
	m	(Lcsv;II)V	a	setFlammable
		p	1		block
		p	2		burnChance
		p	3		spreadChance
	m	(Ldfj;Lakq;Lgw;Lasc;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpy;Lgw;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ljava/util/Map$Entry;)Z	a	lambda$static$0
		p	0		entry
	m	(Lcpb;Lgw;)Ldfj;	b	getStateForPlacement
		p	1		world
		p	2		pos
	m	(Ldfj;Lcpv;Lgw;Ldfj;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	m	(Lcpb;Lgw;)Z	d	isValidFireLocation
		p	1		world
		p	2		pos
	m	(Ldfj;)Z	f	canBurn
		p	1		state
	m	(Ldfj;)Leig;	h	calculateShape
		p	0		state
	m	(Ldfj;)I	n	getBurnOdds
		p	1		state
	m	(Ldfj;)I	o	getIgniteOdds
		p	1		state
	m	(Ldfj;)Z	p	lambda$new$1
		p	0		state
	f	Leig;	D	SOUTH_AABB
	f	Ljava/util/Map;	E	shapesCache
	f	I	F	IGNITE_INSTANT
	f	I	G	IGNITE_EASY
	f	I	H	IGNITE_MEDIUM
	f	I	I	IGNITE_HARD
	f	I	J	BURN_INSTANT
	f	I	K	BURN_EASY
	f	I	L	BURN_MEDIUM
	f	I	M	BURN_HARD
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	N	igniteOdds
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	O	burnOdds
	f	I	c	MAX_AGE
	f	Ldgj;	d	AGE
	f	Ldga;	e	NORTH
	f	Ldga;	f	EAST
	f	Ldga;	g	SOUTH
	f	Ldga;	h	WEST
	f	Ldga;	i	UP
	f	Ljava/util/Map;	j	PROPERTY_BY_DIRECTION
	f	Leig;	k	UP_AABB
	f	Leig;	l	WEST_AABB
	f	Leig;	m	EAST_AABB
	f	Leig;	n	NORTH_AABB
c	cvs	net/minecraft/world/level/block/FletchingTableBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Ldfj;Lcpv;Lgw;Lcbu;Lbgx;Lehj;)Lbgy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
c	cvt	net/minecraft/world/level/block/FlowerBlock
	m	(Lbib;ILdfi$d;)V	<init>	<init>
		p	1		suspiciousStewEffect
		p	2		effectDuration
		p	3		settings
	m	()Ljava/util/List;	a	getSuspiciousEffects
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	f	F	a	AABB_OFFSET
	f	Leig;	b	SHAPE
	f	Ljava/util/List;	c	suspiciousStewEffects
c	cvu	net/minecraft/world/level/block/FlowerPotBlock
	m	(Lcsv;Ldfi$d;)V	<init>	<init>
		p	1		content
		p	2		settings
	m	()Lcsv;	a	getContent
	m	(Lcpb;Lgw;Ldfj;)Lcjf;	a	getCloneItemStack
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldfj;Lcpb;Lgw;Lebc;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpv;Lgw;Lcbu;Lbgx;Lehj;)Lbgy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldfj;)Lcza;	b_	getRenderShape
		p	1		state
	m	()Z	g	isEmpty
	f	F	a	AABB_SIZE
	f	Leig;	b	SHAPE
	f	Ljava/util/Map;	c	POTTED_BY_CONTENT
	f	Lcsv;	d	content
c	cvv	net/minecraft/world/level/block/FrogspawnBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	()V	a	setDefaultHatchDelay
	m	(II)V	a	setHatchDelay
		p	0		min
		p	1		max
	m	(Lakq;Lgw;Lasc;)V	a	hatchFrogspawn
		p	1		world
		p	2		pos
		p	3		random
	m	(Lasc;)I	a	getFrogspawnHatchDelay
		p	0		random
	m	(Lcpb;Lgw;)Z	a	mayPlaceOn
		p	0		world
		p	1		pos
	m	(Lcpv;Lgw;)V	a	destroyBlock
		p	1		world
		p	2		pos
	m	(Ldfj;Lakq;Lgw;Lasc;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpv;Lgw;Lbiq;)V	a	entityInside
		p	1		state
		p	2		world
		p	3		pos
		p	4		entity
	m	(Ldfj;Lcpy;Lgw;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lakq;Lgw;Lasc;)V	b	spawnTadpoles
		p	1		world
		p	2		pos
		p	3		random
	m	(Lasc;)D	b	getRandomTadpolePositionOffset
		p	1		random
	m	(Ldfj;Lcpv;Lgw;Ldfj;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	f	Leig;	a	SHAPE
	f	I	b	MIN_TADPOLES_SPAWN
	f	I	c	MAX_TADPOLES_SPAWN
	f	I	d	DEFAULT_MIN_HATCH_TICK_DELAY
	f	I	e	DEFAULT_MAX_HATCH_TICK_DELAY
	f	I	f	minHatchTickDelay
	f	I	g	maxHatchTickDelay
c	cvw	net/minecraft/world/level/block/FrostedIceBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lcpb;Lgw;I)Z	a	fewerNeigboursThan
		p	1		world
		p	2		pos
		p	3		maxNeighbors
	m	(Lcpb;Lgw;Ldfj;)Lcjf;	a	getCloneItemStack
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldfj;Lakq;Lgw;Lasc;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lcpv;Lgw;Lcsv;Lgw;Z)V	a	neighborChanged
		p	1		state
		p	2		world
		p	3		pos
		p	4		sourceBlock
		p	5		sourcePos
		p	6		notify
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldfj;Lakq;Lgw;Lasc;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lcpv;Lgw;)Z	e	slightlyMelt
		p	1		state
		p	2		world
		p	3		pos
	f	I	a	MAX_AGE
	f	Ldgj;	b	AGE
	f	I	c	NEIGHBORS_TO_AGE
	f	I	d	NEIGHBORS_TO_MELT
c	cvx	net/minecraft/world/level/block/FungusBlock
	m	(Ldfi$d;Laev;Lcsv;)V	<init>	<init>
		p	1		settings
		p	2		featureKey
		p	3		nylium
	m	(Lakq;Lasc;Lgw;Ldfj;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lakq;Lasc;Lgw;Lhe;)V	a	lambda$performBonemeal$0
		p	3		featureEntry
	m	(Lcpv;Lasc;Lgw;Ldfj;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcpy;)Ljava/util/Optional;	a	getFeature
		p	1		world
	m	(Lcpy;Lgw;Ldfj;)Z	a	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpb;Lgw;)Z	d	mayPlaceOn
		p	1		floor
		p	2		world
		p	3		pos
	f	Leig;	a	SHAPE
	f	D	b	BONEMEAL_SUCCESS_PROBABILITY
	f	Lcsv;	c	requiredBlock
	f	Laev;	d	feature
c	cvy	net/minecraft/world/level/block/FurnaceBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lcpv;Ldfj;Ldcx;)Ldcw;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Lcpv;Lgw;Lcbu;)V	a	openContainer
		p	1		world
		p	2		pos
		p	3		player
	m	(Ldfj;Lcpv;Lgw;Lasc;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lgw;Ldfj;)Ldcv;	a	newBlockEntity
		p	1		pos
		p	2		state
c	cvz	net/minecraft/world/level/block/GameMasterBlock
c	cwa	net/minecraft/world/level/block/GlassBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
c	cwb	net/minecraft/world/level/block/GlazedTerracottaBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
c	cwc	net/minecraft/world/level/block/GlowLichenBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(ILdfj;)I	a	lambda$emission$0
		p	1		state
	m	(Lakq;Lasc;Lgw;Ldfj;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcpv;Lasc;Lgw;Ldfj;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcpy;Lgw;Ldfj;)Z	a	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldfj;Lcln;)Z	a	canBeReplaced
		p	1		state
		p	2		context
	m	(Ldfj;Lcpy;Lgw;Lha;)Z	a	lambda$isValidBonemealTarget$1
		p	4		direction
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	()Lcxu;	b	getSpreader
	m	(I)Ljava/util/function/ToIntFunction;	b	emission
		p	0		luminance
	m	(Ldfj;Lcpb;Lgw;)Z	c	propagatesSkylightDown
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;)Leam;	c_	getFluidState
		p	1		state
	f	Ldga;	b	WATERLOGGED
	f	Lcxu;	c	spreader
c	cwd	net/minecraft/world/level/block/GrassBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lakq;Lasc;Lgw;Ldfj;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcpv;Lasc;Lgw;Ldfj;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcpy;Lgw;Ldfj;)Z	a	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
c	cwe	net/minecraft/world/level/block/GravelBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Ldfj;Lcpb;Lgw;)I	d	getDustColor
		p	1		state
		p	2		world
		p	3		pos
c	cwf	net/minecraft/world/level/block/GrindstoneBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lcpv;Lgw;ILcbt;Lcbu;)Lcel;	a	lambda$getMenuProvider$0
		p	2		syncId
		p	3		inventory
		p	4		player
	m	(Ldfj;Lcpb;Lgw;Lebc;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpv;Lgw;Lcbu;Lbgx;Lehj;)Lbgy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldfj;Lcpy;Lgw;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lcxq;)Ldfj;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldfj;Lczh;)Ldfj;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldfj;Lcpv;Lgw;)Lbhb;	b	getMenuProvider
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;)Lcza;	b_	getRenderShape
		p	1		state
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	c	getCollisionShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;)Leig;	n	getVoxelShape
		p	1		state
	f	Leig;	D	FLOOR_EAST_WEST_ALL_LEGS
	f	Leig;	E	FLOOR_EAST_WEST_GRINDSTONE
	f	Leig;	F	WALL_SOUTH_LEFT_POST
	f	Leig;	G	WALL_SOUTH_RIGHT_POST
	f	Leig;	H	WALL_SOUTH_LEFT_PIVOT
	f	Leig;	J	WALL_SOUTH_RIGHT_PIVOT
	f	Leig;	K	WALL_SOUTH_LEFT_LEG
	f	Leig;	L	WALL_SOUTH_RIGHT_LEG
	f	Leig;	M	WALL_SOUTH_ALL_LEGS
	f	Leig;	N	WALL_SOUTH_GRINDSTONE
	f	Leig;	O	WALL_NORTH_LEFT_POST
	f	Leig;	P	WALL_NORTH_RIGHT_POST
	f	Leig;	Q	WALL_NORTH_LEFT_PIVOT
	f	Leig;	R	WALL_NORTH_RIGHT_PIVOT
	f	Leig;	S	WALL_NORTH_LEFT_LEG
	f	Leig;	T	WALL_NORTH_RIGHT_LEG
	f	Leig;	U	WALL_NORTH_ALL_LEGS
	f	Leig;	V	WALL_NORTH_GRINDSTONE
	f	Leig;	W	WALL_WEST_LEFT_POST
	f	Leig;	X	WALL_WEST_RIGHT_POST
	f	Leig;	Y	WALL_WEST_LEFT_PIVOT
	f	Leig;	Z	WALL_WEST_RIGHT_PIVOT
	f	Leig;	aA	CEILING_EAST_WEST_ALL_LEGS
	f	Leig;	aB	CEILING_EAST_WEST_GRINDSTONE
	f	Leig;	a	FLOOR_NORTH_SOUTH_LEFT_POST
	f	Ltl;	aP	CONTAINER_TITLE
	f	Leig;	aa	WALL_WEST_LEFT_LEG
	f	Leig;	ab	WALL_WEST_RIGHT_LEG
	f	Leig;	ac	WALL_WEST_ALL_LEGS
	f	Leig;	ad	WALL_WEST_GRINDSTONE
	f	Leig;	ae	WALL_EAST_LEFT_POST
	f	Leig;	af	WALL_EAST_RIGHT_POST
	f	Leig;	ag	WALL_EAST_LEFT_PIVOT
	f	Leig;	ah	WALL_EAST_RIGHT_PIVOT
	f	Leig;	ai	WALL_EAST_LEFT_LEG
	f	Leig;	aj	WALL_EAST_RIGHT_LEG
	f	Leig;	ak	WALL_EAST_ALL_LEGS
	f	Leig;	al	WALL_EAST_GRINDSTONE
	f	Leig;	am	CEILING_NORTH_SOUTH_LEFT_POST
	f	Leig;	an	CEILING_NORTH_SOUTH_RIGHT_POST
	f	Leig;	ao	CEILING_NORTH_SOUTH_LEFT_PIVOT
	f	Leig;	ap	CEILING_NORTH_SOUTH_RIGHT_PIVOT
	f	Leig;	aq	CEILING_NORTH_SOUTH_LEFT_LEG
	f	Leig;	ar	CEILING_NORTH_SOUTH_RIGHT_LEG
	f	Leig;	as	CEILING_NORTH_SOUTH_ALL_LEGS
	f	Leig;	at	CEILING_NORTH_SOUTH_GRINDSTONE
	f	Leig;	au	CEILING_EAST_WEST_LEFT_POST
	f	Leig;	av	CEILING_EAST_WEST_RIGHT_POST
	f	Leig;	aw	CEILING_EAST_WEST_LEFT_PIVOT
	f	Leig;	ax	CEILING_EAST_WEST_RIGHT_PIVOT
	f	Leig;	ay	CEILING_EAST_WEST_LEFT_LEG
	f	Leig;	az	CEILING_EAST_WEST_RIGHT_LEG
	f	Leig;	b	FLOOR_NORTH_SOUTH_RIGHT_POST
	f	Leig;	c	FLOOR_NORTH_SOUTH_LEFT_PIVOT
	f	Leig;	d	FLOOR_NORTH_SOUTH_RIGHT_PIVOT
	f	Leig;	e	FLOOR_NORTH_SOUTH_LEFT_LEG
	f	Leig;	f	FLOOR_NORTH_SOUTH_RIGHT_LEG
	f	Leig;	g	FLOOR_NORTH_SOUTH_ALL_LEGS
	f	Leig;	h	FLOOR_NORTH_SOUTH_GRINDSTONE
	f	Leig;	i	FLOOR_EAST_WEST_LEFT_POST
	f	Leig;	j	FLOOR_EAST_WEST_RIGHT_POST
	f	Leig;	k	FLOOR_EAST_WEST_LEFT_PIVOT
	f	Leig;	l	FLOOR_EAST_WEST_RIGHT_PIVOT
	f	Leig;	m	FLOOR_EAST_WEST_LEFT_LEG
	f	Leig;	n	FLOOR_EAST_WEST_RIGHT_LEG
c	cwf$1	net/minecraft/world/level/block/GrindstoneBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$state$properties$AttachFace
c	cwg	net/minecraft/world/level/block/GrowingPlantBlock
	m	(Ldfi$d;Lha;Leig;Z)V	<init>	<init>
		p	1		settings
		p	2		growthDirection
		p	3		outlineShape
		p	4		tickWater
	m	()Lcsv;	a	getBodyBlock
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Lcpw;)Ldfj;	a	getStateForPlacement
		p	1		world
	m	(Ldfj;Lakq;Lgw;Lasc;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpy;Lgw;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	()Lcwi;	b	getHeadBlock
	m	(Ldfj;)Z	h	canAttachTo
		p	1		state
	f	Lha;	a	growthDirection
	f	Z	b	scheduleFluidTicks
	f	Leig;	c	shape
c	cwh	net/minecraft/world/level/block/GrowingPlantBodyBlock
	m	(Ldfi$d;Lha;Leig;Z)V	<init>	<init>
		p	1		settings
		p	2		growthDirection
		p	3		outlineShape
		p	4		tickWater
	m	()Lcsv;	a	getBodyBlock
	m	(Lakq;Lasc;Lgw;Ldfj;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcpb;Lgw;Lcsv;)Ljava/util/Optional;	a	getHeadPos
		p	1		world
		p	2		pos
		p	3		block
	m	(Lcpb;Lgw;Ldfj;)Lcjf;	a	getCloneItemStack
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcpv;Lasc;Lgw;Ldfj;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcpy;Lgw;Ldfj;)Z	a	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldfj;Lcln;)Z	a	canBeReplaced
		p	1		state
		p	2		context
	m	(Ldfj;Ldfj;)Ldfj;	a	updateHeadAfterConvertedFromBody
		p	1		from
		p	2		to
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
c	cwi	net/minecraft/world/level/block/GrowingPlantHeadBlock
	m	(Ldfi$d;Lha;Leig;ZD)V	<init>	<init>
		p	1		settings
		p	2		growthDirection
		p	3		outlineShape
		p	4		tickWater
		p	5		growthChance
	m	(Lakq;Lasc;Lgw;Ldfj;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lasc;)I	a	getBlocksToGrowWhenBonemealed
		p	1		random
	m	(Lcpv;Lasc;Lgw;Ldfj;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcpw;)Ldfj;	a	getStateForPlacement
		p	1		world
	m	(Lcpy;Lgw;Ldfj;)Z	a	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldfj;Lasc;)Ldfj;	a	getGrowIntoState
		p	1		state
		p	2		random
	m	(Ldfj;Ldfj;)Ldfj;	a	updateBodyAfterConvertedFromHead
		p	1		from
		p	2		to
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	()Lcwi;	b	getHeadBlock
	m	(Ldfj;Lakq;Lgw;Lasc;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;)Z	e_	isRandomlyTicking
		p	1		state
	m	(Ldfj;)Z	g	canGrowInto
		p	1		state
	m	(Ldfj;)Ldfj;	n	getMaxAgeState
		p	1		state
	m	(Ldfj;)Z	o	isMaxAge
		p	1		state
	f	Ldgj;	d	AGE
	f	I	e	MAX_AGE
	f	D	f	growPerTickProbability
c	cwj	net/minecraft/world/level/block/HalfTransparentBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Ldfj;Ldfj;Lha;)Z	a	skipRendering
		p	1		state
		p	2		stateFrom
		p	3		direction
c	cwk	net/minecraft/world/level/block/HangingRootsBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpy;Lgw;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldfj;)Leam;	c_	getFluidState
		p	1		state
	f	Leig;	a	SHAPE
	f	Ldga;	b	WATERLOGGED
c	cwl	net/minecraft/world/level/block/HayBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lcpv;Ldfj;Lgw;Lbiq;F)V	a	fallOn
		p	1		world
		p	2		state
		p	3		pos
		p	4		entity
		p	5		fallDistance
c	cwm	net/minecraft/world/level/block/HoneyBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lbiq;)V	a	showSlideParticles
		p	0		entity
	m	(Lbiq;I)V	a	showParticles
		p	0		entity
		p	1		count
	m	(Lbiq;Lgw;)V	a	maybeDoSlideAchievement
		p	1		entity
		p	2		pos
	m	(Lcpv;Lbiq;)V	a	maybeDoSlideEffects
		p	1		world
		p	2		entity
	m	(Lcpv;Ldfj;Lgw;Lbiq;F)V	a	fallOn
		p	1		world
		p	2		state
		p	3		pos
		p	4		entity
		p	5		fallDistance
	m	(Ldfj;Lcpv;Lgw;Lbiq;)V	a	entityInside
		p	1		state
		p	2		world
		p	3		pos
		p	4		entity
	m	(Lgw;Lbiq;)Z	a	isSlidingDown
		p	1		pos
		p	2		entity
	m	(Lbiq;)V	b	showJumpParticles
		p	0		entity
	m	(Lbiq;)Z	c	doesEntityDoHoneyBlockSlideEffects
		p	0		entity
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	c	getCollisionShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lbiq;)V	d	doSlideMovement
		p	1		entity
	f	Leig;	a	SHAPE
	f	D	b	SLIDE_STARTS_WHEN_VERTICAL_SPEED_IS_AT_LEAST
	f	D	c	MIN_FALL_SPEED_TO_BE_CONSIDERED_SLIDING
	f	D	d	THROTTLE_SLIDE_SPEED_TO
	f	I	e	SLIDE_ADVANCEMENT_CHECK_INTERVAL
c	cwn	net/minecraft/world/level/block/HopperBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Lcpv;Ldfj;Ldcx;)Ldcw;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Lcpv;Lgw;Ldfj;)V	a	checkPoweredState
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcpv;Lgw;Ldfj;Lbjg;Lcjf;)V	a	setPlacedBy
		p	1		world
		p	2		pos
		p	3		state
		p	4		placer
		p	5		itemStack
	m	(Ldfj;Lcpb;Lgw;)Leig;	a	getInteractionShape
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lcpb;Lgw;Lebc;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpv;Lgw;)I	a	getAnalogOutputSignal
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lcpv;Lgw;Lbiq;)V	a	entityInside
		p	1		state
		p	2		world
		p	3		pos
		p	4		entity
	m	(Ldfj;Lcpv;Lgw;Lcbu;Lbgx;Lehj;)Lbgy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldfj;Lcpv;Lgw;Lcsv;Lgw;Z)V	a	neighborChanged
		p	1		state
		p	2		world
		p	3		pos
		p	4		sourceBlock
		p	5		sourcePos
		p	6		notify
	m	(Ldfj;Lcpv;Lgw;Ldfj;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Ldfj;Lcxq;)Ldfj;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldfj;Lczh;)Ldfj;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lgw;Ldfj;)Ldcv;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Ldfj;Lcpv;Lgw;Ldfj;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	m	(Ldfj;)Lcza;	b_	getRenderShape
		p	1		state
	m	(Ldfj;)Z	d_	hasAnalogOutputSignal
		p	1		state
	f	Leig;	D	SOUTH_INTERACTION_SHAPE
	f	Leig;	E	WEST_INTERACTION_SHAPE
	f	Ldgd;	a	FACING
	f	Ldga;	b	ENABLED
	f	Leig;	c	TOP
	f	Leig;	d	FUNNEL
	f	Leig;	e	CONVEX_BASE
	f	Leig;	f	BASE
	f	Leig;	g	DOWN_SHAPE
	f	Leig;	h	EAST_SHAPE
	f	Leig;	i	NORTH_SHAPE
	f	Leig;	j	SOUTH_SHAPE
	f	Leig;	k	WEST_SHAPE
	f	Leig;	l	DOWN_INTERACTION_SHAPE
	f	Leig;	m	EAST_INTERACTION_SHAPE
	f	Leig;	n	NORTH_INTERACTION_SHAPE
c	cwn$1	net/minecraft/world/level/block/HopperBlock$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	cwo	net/minecraft/world/level/block/HorizontalDirectionalBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Ldfj;Lcxq;)Ldfj;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldfj;Lczh;)Ldfj;	a	rotate
		p	1		state
		p	2		rotation
	f	Ldgd;	aC	FACING
c	cwp	net/minecraft/world/level/block/HugeMushroomBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Ldfj;Lcxq;)Ldfj;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldfj;Lczh;)Ldfj;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	f	Ldga;	a	NORTH
	f	Ldga;	b	EAST
	f	Ldga;	c	SOUTH
	f	Ldga;	d	WEST
	f	Ldga;	e	UP
	f	Ldga;	f	DOWN
	f	Ljava/util/Map;	g	PROPERTY_BY_DIRECTION
c	cwq	net/minecraft/world/level/block/IceBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	()Ldfj;	a	meltsInto
	m	(Lcpv;Lcbu;Lgw;Ldfj;Ldcv;Lcjf;)V	a	playerDestroy
		p	1		world
		p	2		player
		p	3		pos
		p	4		state
		p	5		blockEntity
		p	6		tool
	m	(Ldfj;Lakq;Lgw;Lasc;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lcpv;Lgw;)V	d	melt
		p	1		state
		p	2		world
		p	3		pos
c	cwr	net/minecraft/world/level/block/InfestedBlock
	m	(Lcsv;Ldfi$d;)V	<init>	<init>
		p	1		regularBlock
		p	2		settings
	m	()Lcsv;	a	getHostBlock
	m	(Lakq;Lgw;)V	a	spawnInfestation
		p	1		world
		p	2		pos
	m	(Ldfj;Lakq;Lgw;Lcjf;Z)V	a	spawnAfterBreak
		p	1		state
		p	2		world
		p	3		pos
		p	4		tool
		p	5		dropExperience
	m	(Ljava/util/Map;Ldfj;Ljava/util/function/Supplier;)Ldfj;	a	getNewStateWithProperties
		p	0		stateMap
		p	1		fromState
		p	2		toStateSupplier
	m	(Ljava/util/function/Supplier;Ldfj;)Ldfj;	a	lambda$getNewStateWithProperties$2
		p	1		infestedState
	m	()Ldfj;	g	lambda$hostStateByInfested$1
	m	(Ldfj;)Z	h	isCompatibleHostBlock
		p	0		block
	m	(Ldfj;)Ldfj;	n	infestedStateByHost
		p	0		regularState
	m	(Ldfj;)Ldfj;	o	hostStateByInfested
		p	1		infestedState
	m	(Ldfj;)Ldfj;	p	lambda$infestedStateByHost$0
	f	Lcsv;	a	hostBlock
	f	Ljava/util/Map;	b	BLOCK_BY_HOST_BLOCK
	f	Ljava/util/Map;	c	HOST_TO_INFESTED_STATES
	f	Ljava/util/Map;	d	INFESTED_TO_HOST_STATES
c	cws	net/minecraft/world/level/block/InfestedRotatedPillarBlock
	m	(Lcsv;Ldfi$d;)V	<init>	<init>
		p	1		regularBlock
		p	2		settings
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Ldfj;Lczh;)Ldfj;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
c	cwt	net/minecraft/world/level/block/IronBarsBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Ldfj;Ldfj;Lha;)Z	a	skipRendering
		p	1		state
		p	2		stateFrom
		p	3		direction
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldfj;Z)Z	a	attachsTo
		p	1		state
		p	2		sideSolidFullSquare
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	b	getVisualShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
c	cwu	net/minecraft/world/level/block/JigsawBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Ldfj;Lcpv;Lgw;Lcbu;Lbgx;Lehj;)Lbgy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldfj;Lcxq;)Ldfj;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldfj;Lczh;)Ldfj;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldzb$c;Ldzb$c;)Z	a	canAttach
		p	0		info1
		p	1		info2
	m	(Lgw;Ldfj;)Ldcv;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Lha;)Lddu$a;	a	lambda$canAttach$0
	m	(Ldfj;)Lha;	h	getFrontFacing
		p	0		state
	m	(Ldfj;)Lha;	n	getTopFacing
		p	0		state
	f	Ldgh;	a	ORIENTATION
c	cwv	net/minecraft/world/level/block/JukeboxBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lcpv;Ldfj;Ldcx;)Ldcw;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Lcpv;Lgw;Ldfj;Lbjg;Lcjf;)V	a	setPlacedBy
		p	1		world
		p	2		pos
		p	3		state
		p	4		placer
		p	5		itemStack
	m	(Ldfj;Lcpb;Lgw;Lha;)I	a	getSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldfj;Lcpv;Lgw;)I	a	getAnalogOutputSignal
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lcpv;Lgw;Lcbu;Lbgx;Lehj;)Lbgy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldfj;Lcpv;Lgw;Ldfj;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lgw;Ldfj;)Ldcv;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Ldfj;)Lcza;	b_	getRenderShape
		p	1		state
	m	(Ldfj;)Z	d_	hasAnalogOutputSignal
		p	1		state
	m	(Ldfj;)Z	f_	isSignalSource
		p	1		state
	f	Ldga;	a	HAS_RECORD
c	cww	net/minecraft/world/level/block/KelpBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	()Lcsv;	a	getBodyBlock
	m	(Lasc;)I	a	getBlocksToGrowWhenBonemealed
		p	1		random
	m	(Lcbu;Lcpb;Lgw;Ldfj;Leal;)Z	a	canPlaceLiquid
		p	1		player
		p	2		world
		p	3		pos
		p	4		state
		p	5		fluid
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Lcpw;Lgw;Ldfj;Leam;)Z	a	placeLiquid
		p	1		world
		p	2		pos
		p	3		state
		p	4		fluidState
	m	(Ldfj;)Leam;	c_	getFluidState
		p	1		state
	m	(Ldfj;)Z	g	canGrowInto
		p	1		state
	m	(Ldfj;)Z	h	canAttachTo
		p	1		state
	f	Leig;	f	SHAPE
	f	D	g	GROW_PER_TICK_PROBABILITY
c	cwx	net/minecraft/world/level/block/KelpPlantBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lcbu;Lcpb;Lgw;Ldfj;Leal;)Z	a	canPlaceLiquid
		p	1		player
		p	2		world
		p	3		pos
		p	4		state
		p	5		fluid
	m	(Lcpw;Lgw;Ldfj;Leam;)Z	a	placeLiquid
		p	1		world
		p	2		pos
		p	3		state
		p	4		fluidState
	m	()Lcwi;	b	getHeadBlock
	m	(Ldfj;)Leam;	c_	getFluidState
		p	1		state
	m	(Ldfj;)Z	h	canAttachTo
		p	1		state
c	cwy	net/minecraft/world/level/block/LadderBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Lcpb;Lgw;Lha;)Z	a	canAttachTo
		p	1		world
		p	2		pos
		p	3		side
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpy;Lgw;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lcxq;)Ldfj;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldfj;Lczh;)Ldfj;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldfj;)Leam;	c_	getFluidState
		p	1		state
	f	Ldgd;	a	FACING
	f	Ldga;	b	WATERLOGGED
	f	F	c	AABB_OFFSET
	f	Leig;	d	EAST_AABB
	f	Leig;	e	WEST_AABB
	f	Leig;	f	SOUTH_AABB
	f	Leig;	g	NORTH_AABB
c	cwy$1	net/minecraft/world/level/block/LadderBlock$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	cwz	net/minecraft/world/level/block/LanternBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Ldfj;Lcpb;Lgw;Lebc;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpy;Lgw;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldfj;)Leam;	c_	getFluidState
		p	1		state
	m	(Ldfj;)Lha;	h	getConnectedDirection
		p	0		state
	f	Ldga;	a	HANGING
	f	Ldga;	b	WATERLOGGED
	f	Leig;	c	AABB
	f	Leig;	d	HANGING_AABB
c	cxa	net/minecraft/world/level/block/LavaCauldronBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Ldfj;Lcpv;Lgw;)I	a	getAnalogOutputSignal
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lcpv;Lgw;Lbiq;)V	a	entityInside
		p	1		state
		p	2		world
		p	3		pos
		p	4		entity
	m	(Ldfj;)D	b	getContentHeight
		p	1		state
	m	(Ldfj;)Z	d	isFull
		p	1		state
c	cxb	net/minecraft/world/level/block/LayeredCauldronBlock
	m	(Ldfi$d;Ljava/util/function/Predicate;Ljava/util/Map;)V	<init>	<init>
		p	1		settings
		p	2		precipitationPredicate
		p	3		behaviorMap
	m	(Lcqt$c;)Z	a	lambda$static$1
		p	0		precipitation
	m	(Ldfj;Lcpv;Lgw;)I	a	getAnalogOutputSignal
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lcpv;Lgw;Lbiq;)V	a	entityInside
		p	1		state
		p	2		world
		p	3		pos
		p	4		entity
	m	(Ldfj;Lcpv;Lgw;Lcqt$c;)V	a	handlePrecipitation
		p	1		state
		p	2		world
		p	3		pos
		p	4		precipitation
	m	(Ldfj;Lcpv;Lgw;Leal;)V	a	receiveStalactiteDrip
		p	1		state
		p	2		world
		p	3		pos
		p	4		fluid
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Leal;)Z	a	canReceiveStalactiteDrip
		p	1		fluid
	m	(Lcqt$c;)Z	b	lambda$static$0
		p	0		precipitation
	m	(Ldfj;)D	b	getContentHeight
		p	1		state
	m	(Ldfj;)Z	d	isFull
		p	1		state
	m	(Ldfj;Lcpv;Lgw;)V	d	handleEntityOnFireInside
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lcpv;Lgw;)V	e	lowerFillLevel
		p	0		state
		p	1		world
		p	2		pos
	f	I	c	MIN_FILL_LEVEL
	f	I	d	MAX_FILL_LEVEL
	f	Ldgj;	e	LEVEL
	f	Ljava/util/function/Predicate;	f	RAIN
	f	Ljava/util/function/Predicate;	g	SNOW
	f	I	h	BASE_CONTENT_HEIGHT
	f	D	i	HEIGHT_PER_LEVEL
	f	Ljava/util/function/Predicate;	j	fillPredicate
c	cxc	net/minecraft/world/level/block/LeavesBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Ldfj;Lakq;Lgw;Lasc;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lcpv;Lgw;Lasc;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lcpw;Lgw;)Ldfj;	a	updateDistance
		p	0		state
		p	1		world
		p	2		pos
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldfj;Lakq;Lgw;Lasc;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lcpb;Lgw;)Leig;	b_	getBlockSupportShape
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;)Leam;	c_	getFluidState
		p	1		state
	m	(Ldfj;)Z	e_	isRandomlyTicking
		p	1		state
	m	(Ldfj;Lcpb;Lgw;)I	g	getLightBlock
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;)Z	h	decaying
		p	1		state
	m	(Ldfj;)Ljava/util/OptionalInt;	n	getOptionalDistanceAt
		p	0		state
	m	(Ldfj;)I	o	getDistanceAt
		p	0		state
	f	I	a	DECAY_DISTANCE
	f	Ldgj;	b	DISTANCE
	f	Ldga;	c	PERSISTENT
	f	Ldga;	d	WATERLOGGED
	f	I	e	TICK_DELAY
c	cxd	net/minecraft/world/level/block/LecternBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lbiq;Lcpv;Lgw;Ldfj;Lcjf;)Z	a	tryPlaceBook
		p	0		user
		p	1		world
		p	2		pos
		p	3		state
		p	4		stack
	m	(Lbiq;Lcpv;Lgw;Ldfj;Z)V	a	resetBookState
		p	0		user
		p	1		world
		p	2		pos
		p	3		state
		p	4		hasBook
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Lcpv;Lgw;Lcbu;)V	a	openScreen
		p	1		world
		p	2		pos
		p	3		player
	m	(Lcpv;Lgw;Ldfj;)V	a	signalPageChange
		p	0		world
		p	1		pos
		p	2		state
	m	(Lcpv;Lgw;Ldfj;Z)V	a	changePowered
		p	0		world
		p	1		pos
		p	2		state
		p	3		powered
	m	(Ldfj;Lakq;Lgw;Lasc;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lcpb;Lgw;Lebc;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpb;Lgw;Lha;)I	a	getSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldfj;Lcpv;Lgw;)I	a	getAnalogOutputSignal
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lcpv;Lgw;Lcbu;Lbgx;Lehj;)Lbgy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldfj;Lcpv;Lgw;Ldfj;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Ldfj;Lcxq;)Ldfj;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldfj;Lczh;)Ldfj;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lgw;Ldfj;)Ldcv;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Lbiq;Lcpv;Lgw;Ldfj;Lcjf;)V	b	placeBook
		p	0		user
		p	1		world
		p	2		pos
		p	3		state
		p	4		stack
	m	(Lcpv;Lgw;Ldfj;)V	b	updateBelow
		p	0		world
		p	1		pos
		p	2		state
	m	(Ldfj;Lcpb;Lgw;Lha;)I	b	getDirectSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldfj;Lcpv;Lgw;)Lbhb;	b	getMenuProvider
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;)Lcza;	b_	getRenderShape
		p	1		state
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	c	getCollisionShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpv;Lgw;)V	d	popBook
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;)Z	d_	hasAnalogOutputSignal
		p	1		state
	m	(Ldfj;Lcpb;Lgw;)Leig;	f	getOcclusionShape
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;)Z	f_	isSignalSource
		p	1		state
	m	(Ldfj;)Z	g_	useShapeForLightOcclusion
		p	1		state
	f	Ldgd;	a	FACING
	f	Ldga;	b	POWERED
	f	Ldga;	c	HAS_BOOK
	f	Leig;	d	SHAPE_BASE
	f	Leig;	e	SHAPE_POST
	f	Leig;	f	SHAPE_COMMON
	f	Leig;	g	SHAPE_TOP_PLATE
	f	Leig;	h	SHAPE_COLLISION
	f	Leig;	i	SHAPE_WEST
	f	Leig;	j	SHAPE_NORTH
	f	Leig;	k	SHAPE_EAST
	f	Leig;	l	SHAPE_SOUTH
	f	I	m	PAGE_CHANGE_IMPULSE_TICKS
c	cxd$1	net/minecraft/world/level/block/LecternBlock$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	cxe	net/minecraft/world/level/block/LevelEvent
	f	I	A	SOUND_CHORUS_GROW
	f	I	B	SOUND_CHORUS_DEATH
	f	I	C	SOUND_BREWING_STAND_BREW
	f	I	D	SOUND_END_PORTAL_SPAWN
	f	I	E	SOUND_PHANTOM_BITE
	f	I	F	SOUND_ZOMBIE_TO_DROWNED
	f	I	G	SOUND_HUSK_TO_ZOMBIE
	f	I	H	SOUND_GRINDSTONE_USED
	f	I	I	SOUND_PAGE_TURN
	f	I	J	SOUND_SMITHING_TABLE_USED
	f	I	K	SOUND_POINTED_DRIPSTONE_LAND
	f	I	L	SOUND_DRIP_LAVA_INTO_CAULDRON
	f	I	M	SOUND_DRIP_WATER_INTO_CAULDRON
	f	I	N	SOUND_SKELETON_TO_STRAY
	f	I	O	COMPOSTER_FILL
	f	I	P	LAVA_FIZZ
	f	I	Q	REDSTONE_TORCH_BURNOUT
	f	I	R	END_PORTAL_FRAME_FILL
	f	I	S	DRIPSTONE_DRIP
	f	I	T	PARTICLES_AND_SOUND_PLANT_GROWTH
	f	I	U	PARTICLES_SHOOT
	f	I	V	PARTICLES_DESTROY_BLOCK
	f	I	W	PARTICLES_SPELL_POTION_SPLASH
	f	I	X	PARTICLES_EYE_OF_ENDER_DEATH
	f	I	Y	PARTICLES_MOBBLOCK_SPAWN
	f	I	Z	PARTICLES_PLANT_GROWTH
	f	I	a	SOUND_DISPENSER_DISPENSE
	f	I	aa	PARTICLES_DRAGON_FIREBALL_SPLASH
	f	I	ab	PARTICLES_INSTANT_POTION_SPLASH
	f	I	ac	PARTICLES_DRAGON_BLOCK_BREAK
	f	I	ad	PARTICLES_WATER_EVAPORATING
	f	I	ae	ANIMATION_END_GATEWAY_SPAWN
	f	I	af	ANIMATION_DRAGON_SUMMON_ROAR
	f	I	ag	PARTICLES_ELECTRIC_SPARK
	f	I	ah	PARTICLES_AND_SOUND_WAX_ON
	f	I	ai	PARTICLES_WAX_OFF
	f	I	aj	PARTICLES_SCRAPE
	f	I	ak	PARTICLES_SCULK_CHARGE
	f	I	al	PARTICLES_SCULK_SHRIEK
	f	I	am	PARTICLES_AND_SOUND_BRUSH_BLOCK_COMPLETE
	f	I	an	PARTICLES_EGG_CRACK
	f	I	b	SOUND_DISPENSER_FAIL
	f	I	c	SOUND_DISPENSER_PROJECTILE_LAUNCH
	f	I	d	SOUND_ENDER_EYE_LAUNCH
	f	I	e	SOUND_FIREWORK_SHOOT
	f	I	f	SOUND_EXTINGUISH_FIRE
	f	I	g	SOUND_PLAY_JUKEBOX_SONG
	f	I	h	SOUND_STOP_JUKEBOX_SONG
	f	I	i	SOUND_GHAST_WARNING
	f	I	j	SOUND_GHAST_FIREBALL
	f	I	k	SOUND_DRAGON_FIREBALL
	f	I	l	SOUND_BLAZE_FIREBALL
	f	I	m	SOUND_ZOMBIE_WOODEN_DOOR
	f	I	n	SOUND_ZOMBIE_IRON_DOOR
	f	I	o	SOUND_ZOMBIE_DOOR_CRASH
	f	I	p	SOUND_WITHER_BLOCK_BREAK
	f	I	q	SOUND_WITHER_BOSS_SPAWN
	f	I	r	SOUND_WITHER_BOSS_SHOOT
	f	I	s	SOUND_BAT_LIFTOFF
	f	I	t	SOUND_ZOMBIE_INFECTED
	f	I	u	SOUND_ZOMBIE_CONVERTED
	f	I	v	SOUND_DRAGON_DEATH
	f	I	w	SOUND_ANVIL_BROKEN
	f	I	x	SOUND_ANVIL_USED
	f	I	y	SOUND_ANVIL_LAND
	f	I	z	SOUND_PORTAL_TRAVEL
c	cxf	net/minecraft/world/level/block/LeverBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpb;Lgw;Lha;)I	a	getSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldfj;Lcpv;Lgw;Lasc;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lcpv;Lgw;Lcbu;Lbgx;Lehj;)Lbgy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldfj;Lcpv;Lgw;Ldfj;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Ldfj;Lcpw;Lgw;F)V	a	makeParticle
		p	0		state
		p	1		world
		p	2		pos
		p	3		alpha
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldfj;Lcpb;Lgw;Lha;)I	b	getDirectSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldfj;Lcpv;Lgw;)Ldfj;	d	pull
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lcpv;Lgw;)V	e	updateNeighbours
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;)Z	f_	isSignalSource
		p	1		state
	f	Ldga;	a	POWERED
	f	I	b	DEPTH
	f	I	c	WIDTH
	f	I	d	HEIGHT
	f	Leig;	e	NORTH_AABB
	f	Leig;	f	SOUTH_AABB
	f	Leig;	g	WEST_AABB
	f	Leig;	h	EAST_AABB
	f	Leig;	i	UP_AABB_Z
	f	Leig;	j	UP_AABB_X
	f	Leig;	k	DOWN_AABB_Z
	f	Leig;	l	DOWN_AABB_X
c	cxf$1	net/minecraft/world/level/block/LeverBlock$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction$Axis
	f	[I	b	$SwitchMap$net$minecraft$core$Direction
	f	[I	c	$SwitchMap$net$minecraft$world$level$block$state$properties$AttachFace
c	cxg	net/minecraft/world/level/block/LightBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lcjf;I)Lcjf;	a	setLightOnStack
		p	0		stack
		p	1		level
	m	(Lcpb;Lgw;Ldfj;)Lcjf;	a	getCloneItemStack
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpv;Lgw;Lcbu;Lbgx;Lehj;)Lbgy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldfj;Lcpb;Lgw;)F	b	getShadeBrightness
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;)Lcza;	b_	getRenderShape
		p	1		state
	m	(Ldfj;Lcpb;Lgw;)Z	c	propagatesSkylightDown
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;)Leam;	c_	getFluidState
		p	1		state
	m	(Ldfj;)I	h	lambda$static$0
		p	0		state
	f	I	a	MAX_LEVEL
	f	Ldgj;	b	LEVEL
	f	Ldga;	c	WATERLOGGED
	f	Ljava/util/function/ToIntFunction;	d	LIGHT_EMISSION
c	cxh	net/minecraft/world/level/block/LightningRodBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Lcpv;Ldfj;Lehj;Lccm;)V	a	onProjectileHit
		p	1		world
		p	2		state
		p	3		hit
		p	4		projectile
	m	(Ldfj;Lakq;Lgw;Lasc;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lcpb;Lgw;Lha;)I	a	getSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldfj;Lcpv;Lgw;Lasc;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lcpv;Lgw;Ldfj;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldfj;Lcpb;Lgw;Lha;)I	b	getDirectSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldfj;Lcpv;Lgw;Ldfj;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	m	(Ldfj;)Leam;	c_	getFluidState
		p	1		state
	m	(Ldfj;Lcpv;Lgw;)V	d	onLightningStrike
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lcpv;Lgw;)V	e	updateNeighbours
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;)Z	f_	isSignalSource
		p	1		state
	f	Ldga;	b	WATERLOGGED
	f	Ldga;	c	POWERED
	f	I	d	RANGE
	f	I	j	ACTIVATION_TICKS
	f	I	k	SPARK_CYCLE
c	cxi	net/minecraft/world/level/block/LiquidBlock
	m	(Leak;Ldfi$d;)V	<init>	<init>
		p	1		fluid
		p	2		settings
	m	(Lcbu;Lcpw;Lgw;Ldfj;)Lcjf;	a	pickupBlock
		p	1		player
		p	2		world
		p	3		pos
		p	4		state
	m	(Lcpv;Lgw;Ldfj;)Z	a	shouldSpreadLiquid
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcpw;Lgw;)V	a	fizz
		p	1		world
		p	2		pos
	m	(Ldfj;Lcpb;Lgw;Lebc;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpv;Lgw;Lcsv;Lgw;Z)V	a	neighborChanged
		p	1		state
		p	2		world
		p	3		pos
		p	4		sourceBlock
		p	5		sourcePos
		p	6		notify
	m	(Ldfj;Ldfj;Lha;)Z	a	skipRendering
		p	1		state
		p	2		stateFrom
		p	3		direction
	m	(Ldfj;Lecw$a;)Ljava/util/List;	a	getDrops
		p	1		state
		p	2		builder
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	()Ljava/util/Optional;	aq_	getPickupSound
	m	(Ldfj;Lakq;Lgw;Lasc;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lcpv;Lgw;Ldfj;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	m	(Ldfj;)Lcza;	b_	getRenderShape
		p	1		state
	m	(Ldfj;Lcpb;Lgw;)Z	c	propagatesSkylightDown
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	c	getCollisionShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;)Leam;	c_	getFluidState
		p	1		state
	m	(Ldfj;)Z	e_	isRandomlyTicking
		p	1		state
	f	Ldgj;	a	LEVEL
	f	Leak;	b	fluid
	f	Leig;	c	STABLE_SHAPE
	f	Lcom/google/common/collect/ImmutableList;	d	POSSIBLE_FLOW_DIRECTIONS
	f	Ljava/util/List;	e	stateCache
c	cxj	net/minecraft/world/level/block/LiquidBlockContainer
	m	(Lcbu;Lcpb;Lgw;Ldfj;Leal;)Z	a	canPlaceLiquid
		p	1		player
		p	2		world
		p	3		pos
		p	4		state
		p	5		fluid
	m	(Lcpw;Lgw;Ldfj;Leam;)Z	a	placeLiquid
		p	1		world
		p	2		pos
		p	3		state
		p	4		fluidState
c	cxk	net/minecraft/world/level/block/LoomBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Lcpv;Lgw;ILcbt;Lcbu;)Lcel;	a	lambda$getMenuProvider$0
		p	2		syncId
		p	3		inventory
		p	4		player
	m	(Ldfj;Lcpv;Lgw;Lcbu;Lbgx;Lehj;)Lbgy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldfj;Lcpv;Lgw;)Lbhb;	b	getMenuProvider
		p	1		state
		p	2		world
		p	3		pos
	f	Ltl;	a	CONTAINER_TITLE
c	cxl	net/minecraft/world/level/block/MagmaBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lcpv;Lgw;Ldfj;Lbiq;)V	a	stepOn
		p	1		world
		p	2		pos
		p	3		state
		p	4		entity
	m	(Ldfj;Lakq;Lgw;Lasc;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldfj;Lcpv;Lgw;Ldfj;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	f	I	a	BUBBLE_COLUMN_CHECK_DELAY
c	cxm	net/minecraft/world/level/block/MangroveLeavesBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lakq;Lasc;Lgw;Ldfj;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcpv;Lasc;Lgw;Ldfj;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcpy;Lgw;Ldfj;)Z	a	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
c	cxn	net/minecraft/world/level/block/MangrovePropaguleBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lakq;Lasc;Lgw;Ldfj;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Lcpv;Lasc;Lgw;Ldfj;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcpy;Lgw;Ldfj;)Z	a	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpy;Lgw;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	()Ldfj;	b	createNewHangingPropagule
	m	(I)Ldfj;	b	createNewHangingPropagule
		p	0		age
	m	(Ldfj;Lakq;Lgw;Lasc;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;)Leam;	c_	getFluidState
		p	1		state
	m	(Ldfj;Lcpb;Lgw;)Z	d	mayPlaceOn
		p	1		floor
		p	2		world
		p	3		pos
	m	(Ldfj;)Z	h	isHanging
		p	0		state
	m	(Ldfj;)Z	n	isFullyGrown
		p	0		state
	f	Ldgj;	a	AGE
	f	I	b	MAX_AGE
	f	Ldga;	c	HANGING
	f	[Leig;	g	SHAPE_PER_AGE
	f	Ldga;	h	WATERLOGGED
	f	F	i	GROW_TALL_MANGROVE_PROBABILITY
c	cxo	net/minecraft/world/level/block/MangroveRootsBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Ldfj;Ldfj;Lha;)Z	a	skipRendering
		p	1		state
		p	2		stateFrom
		p	3		direction
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldfj;)Leam;	c_	getFluidState
		p	1		state
	f	Ldga;	a	WATERLOGGED
c	cxp	net/minecraft/world/level/block/MelonBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	()Ldar;	a	getStem
	m	()Lcrx;	b	getAttachedStem
c	cxq	net/minecraft/world/level/block/Mirror
	m	(Ljava/lang/String;ILjava/lang/String;Lh;)V	<init>	<init>
		p	3		id
		p	4		directionTransformation
	m	()Lh;	a	rotation
	m	(II)I	a	mirror
		p	1		rotation
		p	2		fullTurn
	m	(Lha;)Lczh;	a	getRotation
		p	1		direction
	m	()Ltl;	b	symbol
	m	(Lha;)Lha;	b	mirror
		p	1		direction
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Lcxq;	d	$values
	f	Lcxq;	a	NONE
	f	Lcxq;	b	LEFT_RIGHT
	f	Lcxq;	c	FRONT_BACK
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	Ljava/lang/String;	e	id
	f	Ltl;	f	symbol
	f	Lh;	g	rotation
	f	[Lcxq;	h	$VALUES
c	cxq$1	net/minecraft/world/level/block/Mirror$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$Mirror
c	cxr	net/minecraft/world/level/block/MossBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lakq;Lasc;Lgw;Ldfj;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lakq;Lasc;Lgw;Lhe$c;)V	a	lambda$performBonemeal$1
	m	(Lcpv;Lasc;Lgw;Ldfj;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcpy;Lgw;Ldfj;)Z	a	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
	m	(Lhq;)Ljava/util/Optional;	a	lambda$performBonemeal$0
c	cxs	net/minecraft/world/level/block/MudBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Ldfj;Lcpb;Lgw;Lebc;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldfj;Lcpb;Lgw;)F	b	getShadeBrightness
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	b	getVisualShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpb;Lgw;)Leig;	b_	getBlockSupportShape
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	c	getCollisionShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	f	Leig;	a	SHAPE
c	cxt	net/minecraft/world/level/block/MultifaceBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(B)Ljava/util/Set;	a	unpack
		p	0		flag
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Lcpb;Ldfj;Lgw;Lha;)Z	a	isValidStateForPlacement
		p	1		world
		p	2		state
		p	3		pos
		p	4		direction
	m	(Lcpb;Lha;Lgw;Ldfj;)Z	a	canAttachTo
		p	0		world
		p	1		direction
		p	2		pos
		p	3		state
	m	(Ldfj;Lcln;)Z	a	canBeReplaced
		p	1		state
		p	2		context
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpv;Lgw;Lha;)Ldfj;	a	lambda$getStateForPlacement$1
		p	4		direction
	m	(Ldfj;Lcpy;Lgw;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lcxq;)Ldfj;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldfj;Lczh;)Ldfj;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldfj;Ldga;)Ldfj;	a	removeFace
		p	0		state
		p	1		direction
	m	(Ldfj;Lha;)Z	a	hasFace
		p	0		state
		p	1		direction
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldfj;Ljava/util/function/Function;)Ldfj;	a	mapDirections
		p	1		state
		p	2		mirror
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldfk;)Ldfj;	a	getDefaultMultifaceState
		p	0		stateManager
	m	(Lha;)Z	a	isFaceSupported
		p	1		direction
	m	(Ljava/util/Collection;)B	a	pack
		p	0		directions
	m	(Ljava/util/EnumMap;)V	a	lambda$static$0
		p	0		shapes
	m	()Lcxu;	b	getSpreader
	m	(Ldfj;Lha;)Z	b	lambda$hasAnyVacantFace$3
		p	1		direction
	m	(Lha;)Ldga;	b	getFaceProperty
		p	0		direction
	m	(Ldfj;Lcpb;Lgw;Lha;)Ldfj;	c	getStateForPlacement
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldfj;Lha;)Z	c	lambda$hasAnyFace$2
		p	1		direction
	m	()Z	g	isWaterloggable
	m	(Ldfj;)Ljava/util/Set;	h	availableFaces
		p	0		state
	m	(Ldfj;)Z	n	hasAnyFace
		p	0		state
	m	(Ldfj;)Leig;	o	calculateMultifaceShape
		p	0		state
	m	(Ldfj;)Z	p	hasAnyVacantFace
		p	0		state
	f	[Lha;	a	DIRECTIONS
	f	F	b	AABB_OFFSET
	f	Leig;	c	UP_AABB
	f	Leig;	d	DOWN_AABB
	f	Leig;	e	WEST_AABB
	f	Leig;	f	EAST_AABB
	f	Leig;	g	NORTH_AABB
	f	Leig;	h	SOUTH_AABB
	f	Ljava/util/Map;	i	PROPERTY_BY_DIRECTION
	f	Ljava/util/Map;	j	SHAPE_BY_DIRECTION
	f	Lcom/google/common/collect/ImmutableMap;	k	shapesCache
	f	Z	l	canRotate
	f	Z	m	canMirrorX
	f	Z	n	canMirrorZ
c	cxu	net/minecraft/world/level/block/MultifaceSpreader
	m	(Lcxt;)V	<init>	<init>
		p	1		lichen
	m	(Lcxu$b;)V	<init>	<init>
		p	1		growChecker
	m	(Lcpw;Lcxu$c;Z)Ljava/util/Optional;	a	spreadToFace
		p	1		world
		p	2		pos
		p	3		markForPostProcessing
	m	(Lcpw;ZLcxu$c;)Ljava/util/Optional;	a	lambda$spreadFromFaceTowardDirection$7
		p	3		growPos
	m	(Ldfj;Lcpb;Lgw;Lha;)Z	a	canSpreadInAnyDirection
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldfj;Lcpb;Lgw;Lha;Lha;)Z	a	lambda$canSpreadInAnyDirection$0
		p	5		direction2
	m	(Ldfj;Lcpb;Lgw;Lha;Lha;Lcxu$d;)Ljava/util/Optional;	a	getSpreadFromFaceTowardDirection
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldDirection
		p	5		newDirection
		p	6		predicate
	m	(Ldfj;Lcpw;Lgw;Lasc;)Ljava/util/Optional;	a	spreadFromRandomFaceTowardRandomDirection
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lcpw;Lgw;Lasc;Lha;)Ljava/util/Optional;	a	lambda$spreadFromRandomFaceTowardRandomDirection$2
		p	5		direction
	m	(Ldfj;Lcpw;Lgw;Lha;Lasc;Z)Ljava/util/Optional;	a	spreadFromFaceTowardRandomDirection
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
		p	5		random
		p	6		markForPostProcessing
	m	(Ldfj;Lcpw;Lgw;Lha;Lha;Z)Ljava/util/Optional;	a	spreadFromFaceTowardDirection
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldDirection
		p	5		newDirection
		p	6		markForPostProcessing
	m	(Ldfj;Lcpw;Lgw;Lha;Z)J	a	spreadFromFaceTowardAllDirections
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
		p	5		markForPostProcessing
	m	(Ldfj;Lcpw;Lgw;Lha;ZLha;)Ljava/util/Optional;	a	lambda$spreadFromFaceTowardAllDirections$6
		p	6		direction2
	m	(Ldfj;Lcpw;Lgw;Z)J	a	spreadAll
		p	1		state
		p	2		world
		p	3		pos
		p	4		markForPostProcessing
	m	(Ldfj;Lcpw;Lgw;ZLha;)Ljava/lang/Long;	a	lambda$spreadAll$4
		p	5		direction
	m	(Ldfj;Lha;)Z	a	lambda$spreadAll$3
		p	2		direction
	m	(Ldfj;Lcpw;Lgw;Lha;ZLha;)Ljava/util/Optional;	b	lambda$spreadFromFaceTowardRandomDirection$5
		p	6		direction2
	m	(Ldfj;Lha;)Z	b	lambda$spreadFromRandomFaceTowardRandomDirection$1
		p	2		direction
	f	[Lcxu$e;	a	DEFAULT_SPREAD_ORDER
	f	Lcxu$b;	b	config
c	cxu$a	net/minecraft/world/level/block/MultifaceSpreader$DefaultSpreaderConfig
	m	(Lcxt;)V	<init>	<init>
		p	1		lichen
	m	(Lcpb;Lgw;Lcxu$c;)Z	a	canSpreadInto
		p	1		world
		p	2		pos
		p	3		growPos
	m	(Lcpb;Lgw;Lgw;Lha;Ldfj;)Z	a	stateCanBeReplaced
		p	1		world
		p	2		pos
		p	3		growPos
		p	4		direction
		p	5		state
	m	(Ldfj;Lcpb;Lgw;Lha;)Ldfj;	a	getStateForPlacement
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	f	Lcxt;	a	block
c	cxu$b	net/minecraft/world/level/block/MultifaceSpreader$SpreadConfig
	m	()[Lcxu$e;	a	getSpreadTypes
	m	(Lcpb;Lgw;Lcxu$c;)Z	a	canSpreadInto
		p	1		world
		p	2		pos
		p	3		growPos
	m	(Lcpw;Lcxu$c;Ldfj;Z)Z	a	placeBlock
		p	1		world
		p	2		growPos
		p	3		state
		p	4		markForPostProcessing
	m	(Ldfj;)Z	a	isOtherBlockValidAsSource
		p	1		state
	m	(Ldfj;Lcpb;Lgw;Lha;)Ldfj;	a	getStateForPlacement
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldfj;Lha;)Z	a	hasFace
		p	1		state
		p	2		direction
	m	(Ldfj;Lha;)Z	b	canSpreadFrom
		p	1		state
		p	2		direction
c	cxu$c	net/minecraft/world/level/block/MultifaceSpreader$SpreadPos
	m	()Lgw;	a	pos
	m	()Lha;	b	face
	f	Lgw;	a	pos
	f	Lha;	b	face
c	cxu$d	net/minecraft/world/level/block/MultifaceSpreader$SpreadPredicate
	m	(Lcpb;Lgw;Lcxu$c;)Z	test	test
		p	1		world
		p	2		pos
		p	3		growPos
c	cxu$e	net/minecraft/world/level/block/MultifaceSpreader$SpreadType
	m	()[Lcxu$e;	a	$values
	m	(Lgw;Lha;Lha;)Lcxu$c;	a	getSpreadPos
		p	1		pos
		p	2		newDirection
		p	3		oldDirection
	f	Lcxu$e;	a	SAME_POSITION
	f	Lcxu$e;	b	SAME_PLANE
	f	Lcxu$e;	c	WRAP_AROUND
	f	[Lcxu$e;	d	$VALUES
c	cxu$e$1	net/minecraft/world/level/block/MultifaceSpreader$SpreadType$1
	m	(Lgw;Lha;Lha;)Lcxu$c;	a	getSpreadPos
		p	1		pos
		p	2		newDirection
		p	3		oldDirection
c	cxu$e$2	net/minecraft/world/level/block/MultifaceSpreader$SpreadType$2
	m	(Lgw;Lha;Lha;)Lcxu$c;	a	getSpreadPos
		p	1		pos
		p	2		newDirection
		p	3		oldDirection
c	cxu$e$3	net/minecraft/world/level/block/MultifaceSpreader$SpreadType$3
	m	(Lgw;Lha;Lha;)Lcxu$c;	a	getSpreadPos
		p	1		pos
		p	2		newDirection
		p	3		oldDirection
c	cxv	net/minecraft/world/level/block/MushroomBlock
	m	(Ldfi$d;Laev;)V	<init>	<init>
		p	1		settings
		p	2		featureKey
	m	(Lakq;Lasc;Lgw;Ldfj;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lakq;Lgw;Ldfj;Lasc;)Z	a	growMushroom
		p	1		world
		p	2		pos
		p	3		state
		p	4		random
	m	(Lcpv;Lasc;Lgw;Ldfj;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcpy;Lgw;Ldfj;)Z	a	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpy;Lgw;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lakq;Lgw;Lasc;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lcpb;Lgw;)Z	d	mayPlaceOn
		p	1		floor
		p	2		world
		p	3		pos
	f	F	a	AABB_OFFSET
	f	Leig;	b	SHAPE
	f	Laev;	c	feature
c	cxw	net/minecraft/world/level/block/MyceliumBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Ldfj;Lcpv;Lgw;Lasc;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
c	cxx	net/minecraft/world/level/block/NetherPortalBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lcpb;Lgw;Ldfj;)Lcjf;	a	getCloneItemStack
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpv;Lgw;Lasc;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lcpv;Lgw;Lbiq;)V	a	entityInside
		p	1		state
		p	2		world
		p	3		pos
		p	4		entity
	m	(Ldfj;Lczh;)Ldfj;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldfj;Lakq;Lgw;Lasc;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	f	Ldgh;	a	AXIS
	f	I	b	AABB_OFFSET
	f	Leig;	c	X_AXIS_AABB
	f	Leig;	d	Z_AXIS_AABB
c	cxx$1	net/minecraft/world/level/block/NetherPortalBlock$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction$Axis
	f	[I	b	$SwitchMap$net$minecraft$world$level$block$Rotation
c	cxy	net/minecraft/world/level/block/NetherSproutsBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpb;Lgw;)Z	d	mayPlaceOn
		p	1		floor
		p	2		world
		p	3		pos
	f	Leig;	a	SHAPE
c	cxz	net/minecraft/world/level/block/NetherVines
	m	(Lasc;)I	a	getBlocksToGrowWhenBonemealed
		p	0		random
	m	(Ldfj;)Z	a	isValidGrowthState
		p	0		state
	f	D	a	GROW_PER_TICK_PROBABILITY
	f	D	b	BONEMEAL_GROW_PROBABILITY_DECREASE_RATE
c	cya	net/minecraft/world/level/block/NetherWartBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lcpb;Lgw;Ldfj;)Lcjf;	a	getCloneItemStack
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldfj;Lakq;Lgw;Lasc;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lcpb;Lgw;)Z	d	mayPlaceOn
		p	1		floor
		p	2		world
		p	3		pos
	m	(Ldfj;)Z	e_	isRandomlyTicking
		p	1		state
	f	I	a	MAX_AGE
	f	Ldgj;	b	AGE
	f	[Leig;	c	SHAPE_BY_AGE
c	cyb	net/minecraft/world/level/block/NetherrackBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lakq;Lasc;Lgw;Ldfj;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcpv;Lasc;Lgw;Ldfj;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcpy;Lgw;Ldfj;)Z	a	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
c	cyc	net/minecraft/world/level/block/NoteBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lbiq;Ldfj;Lcpv;Lgw;)V	a	playNote
		p	1		entity
		p	2		state
		p	3		world
		p	4		pos
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Lcpv;Lgw;)Laew;	a	getCustomSoundId
		p	1		world
		p	2		pos
	m	(Ldfj;Lcpv;Lgw;II)Z	a	triggerEvent
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
		p	5		data
	m	(Ldfj;Lcpv;Lgw;Lcbu;)V	a	attack
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
	m	(Ldfj;Lcpv;Lgw;Lcbu;Lbgx;Lehj;)Lbgy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldfj;Lcpv;Lgw;Lcsv;Lgw;Z)V	a	neighborChanged
		p	1		state
		p	2		world
		p	3		pos
		p	4		sourceBlock
		p	5		sourcePos
		p	6		notify
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(I)F	b	getPitchFromNote
		p	0		note
	m	(Lcpw;Lgw;Ldfj;)Ldfj;	b	setInstrument
		p	1		world
		p	2		pos
		p	3		state
	f	Ldgh;	a	INSTRUMENT
	f	Ldga;	b	POWERED
	f	Ldgj;	c	NOTE
	f	I	d	NOTE_VOLUME
c	cyd	net/minecraft/world/level/block/NyliumBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lakq;Lasc;Lgw;Ldfj;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lakq;Ldhg;Lasc;Lgw;Lhe$c;)V	a	lambda$place$0
		p	4		entry
	m	(Lcpv;Lasc;Lgw;Ldfj;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcpy;Lgw;Ldfj;)Z	a	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
	m	(Lhq;Laev;Lakq;Ldhg;Lasc;Lgw;)V	a	place
		p	1		registry
		p	2		key
		p	3		world
		p	4		chunkGenerator
		p	5		random
		p	6		pos
	m	(Ldfj;Lakq;Lgw;Lasc;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lcpy;Lgw;)Z	b	canBeNylium
		p	0		state
		p	1		world
		p	2		pos
c	cye	net/minecraft/world/level/block/ObserverBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Lcpv;Lgw;Ldfj;)V	a	updateNeighborsInFront
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcpw;Lgw;)V	a	startSignal
		p	1		world
		p	2		pos
	m	(Ldfj;Lakq;Lgw;Lasc;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lcpb;Lgw;Lha;)I	a	getSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldfj;Lcpv;Lgw;Ldfj;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Ldfj;Lcxq;)Ldfj;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldfj;Lczh;)Ldfj;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldfj;Lcpb;Lgw;Lha;)I	b	getDirectSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldfj;Lcpv;Lgw;Ldfj;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	m	(Ldfj;)Z	f_	isSignalSource
		p	1		state
	f	Ldga;	b	POWERED
c	cyf	net/minecraft/world/level/block/PiglinWallSkullBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	f	Ljava/util/Map;	c	AABBS
c	cyg	net/minecraft/world/level/block/PinkPetalsBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lakq;Lasc;Lgw;Ldfj;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Lcpv;Lasc;Lgw;Ldfj;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcpy;Lgw;Ldfj;)Z	a	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldfj;Lcln;)Z	a	canBeReplaced
		p	1		state
		p	2		context
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcxq;)Ldfj;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldfj;Lczh;)Ldfj;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lha;Ljava/lang/Integer;)Leig;	a	lambda$static$0
		p	0		facing
		p	1		flowerAmount
	f	I	a	MIN_FLOWERS
	f	I	b	MAX_FLOWERS
	f	Ldgd;	c	FACING
	f	Ldgj;	d	AMOUNT
	f	Ljava/util/function/BiFunction;	e	SHAPE_BY_PROPERTIES
c	cyh	net/minecraft/world/level/block/PipeBlock
	m	(FLdfi$d;)V	<init>	<init>
		p	1		radius
		p	2		settings
	m	(F)[Leig;	a	makeShapes
		p	1		radius
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ljava/util/EnumMap;)V	a	lambda$static$0
		p	0		directions
	m	(Ldfj;Lcpb;Lgw;)Z	c	propagatesSkylightDown
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;)I	h	getAABBIndex
		p	1		state
	f	Ldga;	a	NORTH
	f	Ldga;	b	EAST
	f	Ldga;	c	SOUTH
	f	Ldga;	d	WEST
	f	Ldga;	e	UP
	f	Ldga;	f	DOWN
	f	Ljava/util/Map;	g	PROPERTY_BY_DIRECTION
	f	[Leig;	h	shapeByIndex
	f	[Lha;	i	DIRECTIONS
c	cyi	net/minecraft/world/level/block/PitcherCropBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lakq;Lasc;Lgw;Ldfj;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lakq;Ldfj;Lgw;I)V	a	grow
		p	1		world
		p	2		state
		p	3		pos
		p	4		amount
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Lcpv;Lasc;Lgw;Ldfj;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcpv;Lgw;Ldfj;Lbjg;Lcjf;)V	a	setPlacedBy
		p	1		world
		p	2		pos
		p	3		state
		p	4		placer
		p	5		itemStack
	m	(Lcpy;Lgw;)Z	a	canGrowInto
		p	0		world
		p	1		pos
	m	(Lcpy;Lgw;Ldfj;)Z	a	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcpy;Lgw;Ldfj;I)Z	a	canGrow
		p	1		world
		p	2		pos
		p	3		state
		p	4		age
	m	(Ldfj;Lcln;)Z	a	canBeReplaced
		p	1		state
		p	2		context
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpv;Lgw;Lbiq;)V	a	entityInside
		p	1		state
		p	2		world
		p	3		pos
		p	4		entity
	m	(Ldfj;Lcpy;Lgw;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(I)Z	b	isDouble
		p	0		age
	m	(Lcpy;Lgw;)Z	b	sufficientLight
		p	0		world
		p	1		pos
	m	(Ldfj;Lakq;Lgw;Lasc;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lcpy;Lgw;Ldfj;)Lcyi$a;	c	getLowerHalf
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	c	getCollisionShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpb;Lgw;)Z	d	mayPlaceOn
		p	1		floor
		p	2		world
		p	3		pos
	m	(Ldfj;)Z	e_	isRandomlyTicking
		p	1		state
	m	(Ldfj;)Z	h	isLower
		p	0		state
	m	(Ldfj;)Z	n	isMaxAge
		p	1		state
	f	Ldgj;	b	AGE
	f	I	c	MAX_AGE
	f	I	d	DOUBLE_PLANT_AGE_INTERSECTION
	f	I	e	BONEMEAL_INCREASE
	f	Leig;	f	FULL_UPPER_SHAPE
	f	Leig;	g	FULL_LOWER_SHAPE
	f	Leig;	h	COLLISION_SHAPE_BULB
	f	Leig;	i	COLLISION_SHAPE_CROP
	f	[Leig;	j	UPPER_SHAPE_BY_AGE
	f	[Leig;	k	LOWER_SHAPE_BY_AGE
c	cyi$a	net/minecraft/world/level/block/PitcherCropBlock$PosAndState
	m	()Lgw;	a	pos
	m	()Ldfj;	b	state
	f	Lgw;	a	pos
	f	Ldfj;	b	state
c	cyj	net/minecraft/world/level/block/PlayerHeadBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lcpv;Lgw;Ldfj;Lbjg;Lcjf;)V	a	setPlacedBy
		p	1		world
		p	2		pos
		p	3		state
		p	4		placer
		p	5		itemStack
c	cyk	net/minecraft/world/level/block/PlayerWallHeadBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lcpv;Lgw;Ldfj;Lbjg;Lcjf;)V	a	setPlacedBy
		p	1		world
		p	2		pos
		p	3		state
		p	4		placer
		p	5		itemStack
	m	(Ldfj;Lecw$a;)Ljava/util/List;	a	getDrops
		p	1		state
		p	2		builder
c	cyl	net/minecraft/world/level/block/PointedDripstoneBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(FLcyl$a;)Z	a	lambda$animateTick$0
		p	1		fluid
	m	(Lakq;Lgw;)Leal;	a	getCauldronFillFluidType
		p	0		world
		p	1		pos
	m	(Lakq;Lgw;Lha;)V	a	grow
		p	0		world
		p	1		pos
		p	2		direction
	m	(Lbiq;)Lbho;	a	getFallDamageSource
		p	1		attacker
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Lcpv;Ldfj;Lehj;Lccm;)V	a	onProjectileHit
		p	1		world
		p	2		state
		p	3		hit
		p	4		projectile
	m	(Lcpv;Ldfj;Lgw;Lbiq;F)V	a	fallOn
		p	1		world
		p	2		state
		p	3		pos
		p	4		entity
		p	5		fallDistance
	m	(Lcpv;Leal;)Leal;	a	getDripFluid
		p	0		world
		p	1		fluid
	m	(Lcpv;Lgw;)Lgw;	a	findStalactiteTipAboveCauldron
		p	0		world
		p	1		pos
	m	(Lcpv;Lgw;Lbym;)V	a	onBrokenAfterFall
		p	1		world
		p	2		pos
		p	3		fallingBlockEntity
	m	(Lcpv;Lgw;Ldfj;)V	a	spawnDripParticle
		p	0		world
		p	1		pos
		p	2		state
	m	(Lcpv;Lgw;Ldfj;I)Ljava/util/Optional;	a	findRootBlock
		p	0		world
		p	1		pos
		p	2		state
		p	3		range
	m	(Lcpv;Lgw;Ldfj;Lcyl$a;)V	a	lambda$spawnDripParticle$2
		p	3		fluid
	m	(Lcpv;Lgw;Ldfj;Leal;)V	a	spawnDripParticle
		p	0		world
		p	1		pos
		p	2		state
		p	3		fluid
	m	(Lcpv;Lgw;Leal;)Lgw;	a	findFillableCauldronBelowStalactiteTip
		p	0		world
		p	1		pos
		p	2		fluid
	m	(Lcpw;Lgw;Lha$b;Ljava/util/function/BiPredicate;Ljava/util/function/Predicate;I)Ljava/util/Optional;	a	findBlockVertical
		p	0		world
		p	1		pos
		p	2		direction
		p	3		continuePredicate
		p	4		stopPredicate
		p	5		range
	m	(Lcpw;Lgw;Lha;Ldgg;)V	a	createDripstone
		p	0		world
		p	1		pos
		p	2		direction
		p	3		thickness
	m	(Lcpy;Lgw;Lha;Z)Ldgg;	a	calculateDripstoneThickness
		p	0		world
		p	1		pos
		p	2		direction
		p	3		tryMerge
	m	(Lcyl$a;)Leal;	a	lambda$getCauldronFillFluidType$10
		p	0		fluid
	m	(Ldfj;Lakq;Lgw;)V	a	spawnFallingStalactite
		p	0		state
		p	1		world
		p	2		pos
	m	(Ldfj;Lakq;Lgw;F)V	a	maybeTransferFluid
		p	0		state
		p	1		world
		p	2		pos
		p	3		dripChance
	m	(Ldfj;Lakq;Lgw;Lasc;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lcpb;Lgw;Lebc;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpv;Lgw;Lasc;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lcpw;Lgw;)V	a	createMergedTips
		p	0		state
		p	1		world
		p	2		pos
	m	(Ldfj;Lcpw;Lgw;IZ)Lgw;	a	findTip
		p	0		state
		p	1		world
		p	2		pos
		p	3		range
		p	4		allowMerged
	m	(Ldfj;Lcpy;Lgw;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Ldfj;)Z	a	canGrow
		p	0		dripstoneBlockState
		p	1		waterState
	m	(Ldfj;Lha;)Z	a	isUnmergedTipWithDirection
		p	0		state
		p	1		direction
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldfj;Z)Z	a	isTip
		p	0		state
		p	1		allowMerged
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Leal;)Z	a	canFillCauldron
		p	0		fluid
	m	(Leal;Ldfj;)Z	a	lambda$findFillableCauldronBelowStalactiteTip$7
		p	1		state
	m	(Lha;Lgw;Ldfj;)Z	a	lambda$findRootBlock$5
		p	1		posx
		p	2		statex
	m	(ZLdfj;)Z	a	lambda$findTip$4
		p	1		statex
	m	(Ldfj;Lcpb;Lgw;)Z	a_	isCollisionShapeFullBlock
		p	1		state
		p	2		world
		p	3		pos
	m	()F	ap_	getMaxHorizontalOffset
	m	(Lakq;Lgw;)V	b	growStalagmiteBelow
		p	0		world
		p	1		pos
	m	(Lcpb;Lgw;Ldfj;)Z	b	canDripThrough
		p	0		world
		p	1		pos
		p	2		state
	m	(Lcpv;Lgw;)Lcyl$a;	b	lambda$getFluidAboveStalactite$11
		p	1		posx
	m	(Lcpv;Lgw;Ldfj;)Ljava/util/Optional;	b	getFluidAboveStalactite
		p	0		world
		p	1		pos
		p	2		state
	m	(Lcpv;Lgw;Ldfj;Lcyl$a;)V	b	lambda$animateTick$1
		p	3		fluid
	m	(Lcpy;Lgw;Lha;)Lha;	b	calculateTipDirection
		p	0		world
		p	1		pos
		p	2		direction
	m	(Ldfj;Lakq;Lgw;)Z	b	canTipGrow
		p	0		state
		p	1		world
		p	2		pos
	m	(Ldfj;Lakq;Lgw;Lasc;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lcpy;Lgw;)Z	b	isStalactiteStartPos
		p	0		state
		p	1		world
		p	2		pos
	m	(Ldfj;Lha;)Z	b	isPointedDripstoneWithDirection
		p	0		state
		p	1		direction
	m	(Lha;Lgw;Ldfj;)Z	b	lambda$findTip$3
		p	1		posx
		p	2		statex
	m	(Lcpv;Lgw;Ldfj;)Z	c	lambda$findStalactiteTipAboveCauldron$9
		p	1		posx
		p	2		state
	m	(Lcpy;Lgw;Lha;)Z	c	isValidPointedDripstonePlacement
		p	0		world
		p	1		pos
		p	2		direction
	m	(Ldfj;Lakq;Lgw;Lasc;)V	c	growStalactiteOrStalagmiteIfPossible
		p	0		state
		p	1		world
		p	2		pos
		p	3		random
	m	(Ldfj;)Leam;	c_	getFluidState
		p	1		state
	m	(Lcpv;Lgw;Ldfj;)Z	d	lambda$findFillableCauldronBelowStalactiteTip$8
		p	1		posx
		p	2		state
	m	(Ldfj;Lcpb;Lgw;)Leig;	f	getOcclusionShape
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;)Z	h	canDrip
		p	0		state
	m	(Ldfj;)Z	n	isStalactite
		p	0		state
	m	(Ldfj;)Z	o	isStalagmite
		p	0		state
	m	(Ldfj;)Z	p	lambda$findRootBlock$6
		p	0		statex
	f	F	D	STALAGMITE_FALL_DISTANCE_OFFSET
	f	I	E	STALAGMITE_FALL_DAMAGE_MODIFIER
	f	F	F	AVERAGE_DAYS_PER_GROWTH
	f	F	G	GROWTH_PROBABILITY_PER_RANDOM_TICK
	f	I	H	MAX_GROWTH_LENGTH
	f	I	I	MAX_STALAGMITE_SEARCH_RANGE_WHEN_GROWING
	f	F	J	STALACTITE_DRIP_START_PIXEL
	f	Leig;	K	TIP_MERGE_SHAPE
	f	Leig;	L	TIP_SHAPE_UP
	f	Leig;	M	TIP_SHAPE_DOWN
	f	Leig;	N	FRUSTUM_SHAPE
	f	Leig;	O	MIDDLE_SHAPE
	f	Leig;	P	BASE_SHAPE
	f	F	Q	MAX_HORIZONTAL_OFFSET
	f	Leig;	R	REQUIRED_SPACE_TO_DRIP_THROUGH_NON_SOLID_BLOCK
	f	Ldgd;	a	TIP_DIRECTION
	f	Ldgh;	b	THICKNESS
	f	Ldga;	c	WATERLOGGED
	f	I	d	MAX_SEARCH_LENGTH_WHEN_CHECKING_DRIP_TYPE
	f	I	e	DELAY_BEFORE_FALLING
	f	F	f	DRIP_PROBABILITY_PER_ANIMATE_TICK
	f	F	g	DRIP_PROBABILITY_PER_ANIMATE_TICK_IF_UNDER_LIQUID_SOURCE
	f	I	h	MAX_SEARCH_LENGTH_BETWEEN_STALACTITE_TIP_AND_CAULDRON
	f	F	i	WATER_TRANSFER_PROBABILITY_PER_RANDOM_TICK
	f	F	j	LAVA_TRANSFER_PROBABILITY_PER_RANDOM_TICK
	f	D	k	MIN_TRIDENT_VELOCITY_TO_BREAK_DRIPSTONE
	f	F	l	STALACTITE_DAMAGE_PER_FALL_DISTANCE_AND_SIZE
	f	I	m	STALACTITE_MAX_DAMAGE
	f	I	n	MAX_STALACTITE_HEIGHT_FOR_DAMAGE_CALCULATION
c	cyl$a	net/minecraft/world/level/block/PointedDripstoneBlock$FluidInfo
	m	()Lgw;	a	pos
	m	()Leal;	b	fluid
	m	()Ldfj;	c	sourceState
	f	Lgw;	a	pos
	f	Leal;	b	fluid
	f	Ldfj;	c	sourceState
c	cym	net/minecraft/world/level/block/PotatoBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	()Lcpu;	c	getBaseSeedId
	f	[Leig;	a	SHAPE_BY_AGE
c	cyn	net/minecraft/world/level/block/PowderSnowBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lbiq;)Z	a	canEntityWalkOnPowderSnow
		p	0		entity
	m	(Lcbu;Lcpw;Lgw;Ldfj;)Lcjf;	a	pickupBlock
		p	1		player
		p	2		world
		p	3		pos
		p	4		state
	m	(Lcpv;Ldfj;Lgw;Lbiq;F)V	a	fallOn
		p	1		world
		p	2		state
		p	3		pos
		p	4		entity
		p	5		fallDistance
	m	(Ldfj;Lcpb;Lgw;Lebc;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldfj;Lcpv;Lgw;Lbiq;)V	a	entityInside
		p	1		state
		p	2		world
		p	3		pos
		p	4		entity
	m	(Ldfj;Ldfj;Lha;)Z	a	skipRendering
		p	1		state
		p	2		stateFrom
		p	3		direction
	m	()Ljava/util/Optional;	aq_	getPickupSound
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	b	getVisualShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	c	getCollisionShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpb;Lgw;)Leig;	f	getOcclusionShape
		p	1		state
		p	2		world
		p	3		pos
	f	F	a	HORIZONTAL_PARTICLE_MOMENTUM_FACTOR
	f	F	b	IN_BLOCK_HORIZONTAL_SPEED_MULTIPLIER
	f	F	c	IN_BLOCK_VERTICAL_SPEED_MULTIPLIER
	f	F	d	NUM_BLOCKS_TO_FALL_INTO_BLOCK
	f	Leig;	e	FALLING_COLLISION_SHAPE
	f	D	f	MINIMUM_FALL_DISTANCE_FOR_SOUND
	f	D	g	MINIMUM_FALL_DISTANCE_FOR_BIG_SOUND
c	cyo	net/minecraft/world/level/block/PowderSnowCauldronBlock
	m	(Ldfi$d;Ljava/util/function/Predicate;Ljava/util/Map;)V	<init>	<init>
		p	1		settings
		p	2		precipitationPredicate
		p	3		behaviorMap
	m	(Ldfj;Lcpv;Lgw;)V	d	handleEntityOnFireInside
		p	1		state
		p	2		world
		p	3		pos
c	cyp	net/minecraft/world/level/block/PoweredBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Ldfj;Lcpb;Lgw;Lha;)I	a	getSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldfj;)Z	f_	isSignalSource
		p	1		state
c	cyq	net/minecraft/world/level/block/PoweredRailBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lcpv;Lgw;Ldfj;ZI)Z	a	findPoweredRailSignal
		p	1		world
		p	2		pos
		p	3		state
		p	5		distance
	m	(Lcpv;Lgw;ZILdgn;)Z	a	isSameRailWithPower
		p	1		world
		p	2		pos
		p	4		distance
		p	5		shape
	m	(Ldfj;Lcpv;Lgw;Lcsv;)V	a	updateState
		p	1		state
		p	2		world
		p	3		pos
		p	4		neighbor
	m	(Ldfj;Lcxq;)Ldfj;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldfj;Lczh;)Ldfj;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	()Ldgm;	b	getShapeProperty
	f	Ldgh;	d	SHAPE
	f	Ldga;	e	POWERED
c	cyq$1	net/minecraft/world/level/block/PoweredRailBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$state$properties$RailShape
	f	[I	b	$SwitchMap$net$minecraft$world$level$block$Rotation
	f	[I	c	$SwitchMap$net$minecraft$world$level$block$Mirror
c	cyr	net/minecraft/world/level/block/PressurePlateBlock
	m	(Lcyr$a;Ldfi$d;Ldfy;)V	<init>	<init>
		p	1		type
		p	2		settings
		p	3		blockSetType
	m	(Ldfj;I)Ldfj;	a	setSignalForState
		p	1		state
		p	2		rsOut
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lcpv;Lgw;)I	b	getSignalStrength
		p	1		world
		p	2		pos
	m	(Ldfj;)I	g	getSignalForState
		p	1		state
	f	Ldga;	d	POWERED
	f	Lcyr$a;	e	sensitivity
c	cyr$1	net/minecraft/world/level/block/PressurePlateBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$PressurePlateBlock$Sensitivity
c	cyr$a	net/minecraft/world/level/block/PressurePlateBlock$Sensitivity
	m	()[Lcyr$a;	a	$values
	f	Lcyr$a;	a	EVERYTHING
	f	Lcyr$a;	b	MOBS
	f	[Lcyr$a;	c	$VALUES
c	cys	net/minecraft/world/level/block/PumpkinBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	()Ldar;	a	getStem
	m	(Lbgx;Lcbu;)V	a	lambda$use$0
		p	1		playerx
	m	(Ldfj;Lcpv;Lgw;Lcbu;Lbgx;Lehj;)Lbgy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	()Lcrx;	b	getAttachedStem
c	cyt	net/minecraft/world/level/block/RailBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Ldfj;Lcpv;Lgw;Lcsv;)V	a	updateState
		p	1		state
		p	2		world
		p	3		pos
		p	4		neighbor
	m	(Ldfj;Lcxq;)Ldfj;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldfj;Lczh;)Ldfj;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	()Ldgm;	b	getShapeProperty
	f	Ldgh;	d	SHAPE
c	cyt$1	net/minecraft/world/level/block/RailBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$state$properties$RailShape
	f	[I	b	$SwitchMap$net$minecraft$world$level$block$Rotation
	f	[I	c	$SwitchMap$net$minecraft$world$level$block$Mirror
c	cyu	net/minecraft/world/level/block/RailState
	m	(Lcpv;Lgw;Ldfj;)V	<init>	<init>
		p	1		world
		p	2		pos
		p	3		state
	m	()Ljava/util/List;	a	getConnections
	m	(Lcyu;)Z	a	connectsTo
		p	1		other
	m	(Ldgn;)V	a	updateConnections
		p	1		shape
	m	(Lgw;)Z	a	hasRail
		p	1		pos
	m	(ZZLdgn;)Lcyu;	a	place
		p	1		powered
		p	2		forceUpdate
		p	3		railShape
	m	()I	b	countPotentialConnections
	m	(Lcyu;)Z	b	canConnectTo
		p	1		placementHelper
	m	(Lgw;)Lcyu;	b	getRail
		p	1		pos
	m	()Ldfj;	c	getState
	m	(Lcyu;)V	c	connectTo
		p	1		placementHelper
	m	(Lgw;)Z	c	hasConnection
		p	1		pos
	m	()V	d	removeSoftConnections
	m	(Lgw;)Z	d	hasNeighborRail
		p	1		pos
	f	Lcpv;	a	level
	f	Lgw;	b	pos
	f	Lcsl;	c	block
	f	Ldfj;	d	state
	f	Z	e	isStraight
	f	Ljava/util/List;	f	connections
c	cyu$1	net/minecraft/world/level/block/RailState$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$state$properties$RailShape
c	cyv	net/minecraft/world/level/block/RedStoneOreBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lcpv;Lgw;)V	a	spawnParticles
		p	0		world
		p	1		pos
	m	(Lcpv;Lgw;Ldfj;Lbiq;)V	a	stepOn
		p	1		world
		p	2		pos
		p	3		state
		p	4		entity
	m	(Ldfj;Lakq;Lgw;Lcjf;Z)V	a	spawnAfterBreak
		p	1		state
		p	2		world
		p	3		pos
		p	4		tool
		p	5		dropExperience
	m	(Ldfj;Lcpv;Lgw;Lasc;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lcpv;Lgw;Lcbu;)V	a	attack
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
	m	(Ldfj;Lcpv;Lgw;Lcbu;Lbgx;Lehj;)Lbgy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldfj;Lakq;Lgw;Lasc;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lcpv;Lgw;)V	d	interact
		p	0		state
		p	1		world
		p	2		pos
	m	(Ldfj;)Z	e_	isRandomlyTicking
		p	1		state
	f	Ldga;	a	LIT
c	cyw	net/minecraft/world/level/block/RedStoneWireBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Lcpb;Ldfj;Lgw;)Ldfj;	a	getConnectionState
		p	1		world
		p	2		state
		p	3		pos
	m	(Lcpb;Lgw;Lha;)Ldgo;	a	getConnectingSide
		p	1		world
		p	2		pos
		p	3		direction
	m	(Lcpb;Lgw;Lha;Z)Ldgo;	a	getConnectingSide
		p	1		world
		p	2		pos
		p	3		direction
	m	(Lcpv;Lasc;Lgw;Lehn;Lha;Lha;FF)V	a	spawnParticlesAlongLine
		p	1		world
		p	2		random
		p	3		pos
		p	4		color
	m	(Lcpv;Lgw;)I	a	calculateTargetStrength
		p	1		world
		p	2		pos
	m	(Lcpv;Lgw;Ldfj;)V	a	updatePowerStrength
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcpv;Lgw;Ldfj;Ldfj;)V	a	updatesOnShapeChange
		p	1		world
		p	2		pos
		p	3		oldState
		p	4		newState
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpb;Lgw;Lha;)I	a	getSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldfj;Lcpv;Lgw;Lasc;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lcpv;Lgw;Lcbu;Lbgx;Lehj;)Lbgy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldfj;Lcpv;Lgw;Lcsv;Lgw;Z)V	a	neighborChanged
		p	1		state
		p	2		world
		p	3		pos
		p	4		sourceBlock
		p	5		sourcePos
		p	6		notify
	m	(Ldfj;Lcpv;Lgw;Ldfj;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Ldfj;Lcpw;Lgw;II)V	a	updateIndirectNeighbourShapes
		p	1		state
		p	2		world
		p	3		pos
		p	4		flags
		p	5		maxUpdateDepth
	m	(Ldfj;Lcpy;Lgw;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lcxq;)Ldfj;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldfj;Lczh;)Ldfj;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldfj;Lha;)Z	a	shouldConnectTo
		p	0		state
		p	1		dir
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	([Lehn;)V	a	lambda$static$0
		p	0		colors
	m	(I)I	b	getColorForPower
		p	0		powerLevel
	m	(Lcpb;Ldfj;Lgw;)Ldfj;	b	getMissingConnections
		p	1		world
		p	2		state
		p	3		pos
	m	(Lcpb;Lgw;Ldfj;)Z	b	canSurviveOn
		p	1		world
		p	2		pos
		p	3		floor
	m	(Lcpv;Lgw;)V	b	checkCornerChangeAt
		p	1		world
		p	2		pos
	m	(Ldfj;Lcpb;Lgw;Lha;)I	b	getDirectSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldfj;Lcpv;Lgw;Ldfj;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	m	(Lcpv;Lgw;)V	c	updateNeighborsOfNeighboringWires
		p	1		world
		p	2		pos
	m	(Ldfj;)Z	f_	isSignalSource
		p	1		state
	m	(Ldfj;)Z	h	shouldConnectTo
		p	0		state
	m	(Ldfj;)Leig;	n	calculateShape
		p	1		state
	m	(Ldfj;)Z	o	isCross
		p	0		state
	m	(Ldfj;)Z	p	isDot
		p	0		state
	m	(Ldfj;)I	q	getWireSignal
		p	1		state
	f	Ljava/util/Map;	D	SHAPES_CACHE
	f	[Lehn;	E	COLORS
	f	F	F	PARTICLE_DENSITY
	f	Ldfj;	G	crossState
	f	Z	H	shouldSignal
	f	Ldgh;	a	NORTH
	f	Ldgh;	b	EAST
	f	Ldgh;	c	SOUTH
	f	Ldgh;	d	WEST
	f	Ldgj;	e	POWER
	f	Ljava/util/Map;	f	PROPERTY_BY_DIRECTION
	f	I	g	H
	f	I	h	W
	f	I	i	E
	f	I	j	N
	f	I	k	S
	f	Leig;	l	SHAPE_DOT
	f	Ljava/util/Map;	m	SHAPES_FLOOR
	f	Ljava/util/Map;	n	SHAPES_UP
c	cyw$1	net/minecraft/world/level/block/RedStoneWireBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$state$properties$RedstoneSide
	f	[I	b	$SwitchMap$net$minecraft$world$level$block$Rotation
	f	[I	c	$SwitchMap$net$minecraft$world$level$block$Mirror
c	cyx	net/minecraft/world/level/block/RedstoneLampBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Ldfj;Lakq;Lgw;Lasc;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lcpv;Lgw;Lcsv;Lgw;Z)V	a	neighborChanged
		p	1		state
		p	2		world
		p	3		pos
		p	4		sourceBlock
		p	5		sourcePos
		p	6		notify
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	f	Ldga;	a	LIT
c	cyy	net/minecraft/world/level/block/RedstoneTorchBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lcpb;)Ljava/util/List;	a	lambda$isToggledTooFrequently$0
		p	0		worldx
	m	(Lcpv;Lgw;Ldfj;)Z	a	hasNeighborSignal
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcpv;Lgw;Z)Z	a	isToggledTooFrequently
		p	0		world
		p	1		pos
		p	2		addNew
	m	(Ldfj;Lakq;Lgw;Lasc;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lcpb;Lgw;Lha;)I	a	getSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldfj;Lcpv;Lgw;Lasc;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lcpv;Lgw;Lcsv;Lgw;Z)V	a	neighborChanged
		p	1		state
		p	2		world
		p	3		pos
		p	4		sourceBlock
		p	5		sourcePos
		p	6		notify
	m	(Ldfj;Lcpv;Lgw;Ldfj;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldfj;Lcpb;Lgw;Lha;)I	b	getDirectSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldfj;Lcpv;Lgw;Ldfj;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	m	(Ldfj;)Z	f_	isSignalSource
		p	1		state
	f	Ldga;	a	LIT
	f	I	b	RECENT_TOGGLE_TIMER
	f	I	c	MAX_RECENT_TOGGLES
	f	I	d	RESTART_DELAY
	f	Ljava/util/Map;	e	RECENT_TOGGLES
	f	I	f	TOGGLE_DELAY
c	cyy$a	net/minecraft/world/level/block/RedstoneTorchBlock$Toggle
	m	(Lgw;J)V	<init>	<init>
		p	1		pos
		p	2		time
	f	Lgw;	a	pos
	f	J	b	when
c	cyz	net/minecraft/world/level/block/RedstoneWallTorchBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Lcpv;Lgw;Ldfj;)Z	a	hasNeighborSignal
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpb;Lgw;Lha;)I	a	getSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldfj;Lcpv;Lgw;Lasc;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lcpy;Lgw;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lcxq;)Ldfj;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldfj;Lczh;)Ldfj;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	()Ljava/lang/String;	f	getDescriptionId
	f	Ldgd;	e	FACING
	f	Ldga;	f	LIT
c	cza	net/minecraft/world/level/block/RenderShape
	m	()[Lcza;	a	$values
	f	Lcza;	a	INVISIBLE
	f	Lcza;	b	ENTITYBLOCK_ANIMATED
	f	Lcza;	c	MODEL
	f	[Lcza;	d	$VALUES
c	czb	net/minecraft/world/level/block/RepeaterBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	()Z	a	sideInputDiodesOnly
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Ldfj;Lcpv;Lgw;Lasc;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lcpv;Lgw;Lcbu;Lbgx;Lehj;)Lbgy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lcpy;Lgw;Ldfj;)Z	b	isLocked
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldfj;)I	g	getDelay
		p	1		state
	f	Ldga;	a	LOCKED
	f	Ldgj;	d	DELAY
c	czc	net/minecraft/world/level/block/RespawnAnchorBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lbiq;Lcpv;Lgw;Ldfj;)V	a	charge
		p	0		charger
		p	1		world
		p	2		pos
		p	3		state
	m	(Lbiu;Lcpf;Lgw;)Ljava/util/Optional;	a	findStandUpPosition
		p	0		entity
		p	1		world
		p	2		pos
	m	(Lbiu;Lcpf;Lgw;Z)Ljava/util/Optional;	a	findStandUpPosition
		p	0		entity
		p	1		world
		p	2		pos
		p	3		ignoreInvalidPos
	m	(Lcjf;)Z	a	isRespawnFuel
		p	0		stack
	m	(Lcpv;)Z	a	canSetSpawn
		p	0		world
	m	(Lcpv;Lgw;)Z	a	lambda$explode$0
		p	1		pos
	m	(Ldfj;I)I	a	getScaledChargeLevel
		p	0		state
		p	1		maxLevel
	m	(Ldfj;Lcpb;Lgw;Lebc;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldfj;Lcpv;Lgw;)I	a	getAnalogOutputSignal
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lcpv;Lgw;Lasc;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lcpv;Lgw;Lcbu;Lbgx;Lehj;)Lbgy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lgw;Lcpv;)Z	a	isWaterThatWouldFlow
		p	0		pos
		p	1		world
	m	(Ldfj;Lcpv;Lgw;)V	d	explode
		p	1		state
		p	2		world
		p	3		explodedPos
	m	(Ldfj;)Z	d_	hasAnalogOutputSignal
		p	1		state
	m	(Ldfj;)Z	h	canBeCharged
		p	0		state
	f	I	a	MIN_CHARGES
	f	I	b	MAX_CHARGES
	f	Ldgj;	c	CHARGE
	f	Lcom/google/common/collect/ImmutableList;	d	RESPAWN_HORIZONTAL_OFFSETS
	f	Lcom/google/common/collect/ImmutableList;	e	RESPAWN_OFFSETS
c	czc$1	net/minecraft/world/level/block/RespawnAnchorBlock$1
	m	(Lcpn;Lcpb;Lgw;Ldfj;Leam;)Ljava/util/Optional;	a	getBlockExplosionResistance
		p	1		explosion
		p	2		world
		p	3		pos
		p	4		blockState
		p	5		fluidState
	f	Lgw;	a	val$pos
	f	Z	b	val$inWater
	f	Lczc;	c	this$0
c	czd	net/minecraft/world/level/block/RodBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Ldfj;Lcpb;Lgw;Lebc;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcxq;)Ldfj;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldfj;Lczh;)Ldfj;	a	rotate
		p	1		state
		p	2		rotation
	f	F	e	AABB_MIN
	f	F	f	AABB_MAX
	f	Leig;	g	Y_AXIS_AABB
	f	Leig;	h	Z_AXIS_AABB
	f	Leig;	i	X_AXIS_AABB
c	czd$1	net/minecraft/world/level/block/RodBlock$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction$Axis
c	cze	net/minecraft/world/level/block/RootedDirtBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lakq;Lasc;Lgw;Ldfj;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcpv;Lasc;Lgw;Ldfj;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcpy;Lgw;Ldfj;)Z	a	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
c	czf	net/minecraft/world/level/block/RootsBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpb;Lgw;)Z	d	mayPlaceOn
		p	1		floor
		p	2		world
		p	3		pos
	f	F	a	AABB_OFFSET
	f	Leig;	b	SHAPE
c	czg	net/minecraft/world/level/block/RotatedPillarBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Ldfj;Lczh;)Ldfj;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldfj;Lczh;)Ldfj;	b	rotatePillar
		p	0		state
		p	1		rotation
	f	Ldgh;	g	AXIS
c	czg$1	net/minecraft/world/level/block/RotatedPillarBlock$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction$Axis
	f	[I	b	$SwitchMap$net$minecraft$world$level$block$Rotation
c	czh	net/minecraft/world/level/block/Rotation
	m	(Ljava/lang/String;ILjava/lang/String;Lh;)V	<init>	<init>
		p	3		id
		p	4		directionTransformation
	m	()Lh;	a	rotation
	m	(II)I	a	rotate
		p	1		rotation
		p	2		fullTurn
	m	(Lasc;)Lczh;	a	getRandom
		p	0		random
	m	(Lczh;)Lczh;	a	getRotated
		p	1		rotation
	m	(Lha;)Lha;	a	rotate
		p	1		direction
	m	()[Lczh;	b	$values
	m	(Lasc;)Ljava/util/List;	b	getShuffled
		p	0		random
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lczh;	a	NONE
	f	Lczh;	b	CLOCKWISE_90
	f	Lczh;	c	CLOCKWISE_180
	f	Lczh;	d	COUNTERCLOCKWISE_90
	f	Lcom/mojang/serialization/Codec;	e	CODEC
	f	Ljava/lang/String;	f	id
	f	Lh;	g	rotation
	f	[Lczh;	h	$VALUES
c	czh$1	net/minecraft/world/level/block/Rotation$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$Rotation
c	czi	net/minecraft/world/level/block/SandBlock
	m	(ILdfi$d;)V	<init>	<init>
		p	1		color
		p	2		settings
	m	(Ldfj;Lcpb;Lgw;)I	d	getDustColor
		p	1		state
		p	2		world
		p	3		pos
	f	I	a	dustColor
c	czj	net/minecraft/world/level/block/SaplingBlock
	m	(Ldep;Ldfi$d;)V	<init>	<init>
		p	1		generator
		p	2		settings
	m	(Lakq;Lasc;Lgw;Ldfj;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lakq;Lgw;Ldfj;Lasc;)V	a	advanceTree
		p	1		world
		p	2		pos
		p	3		state
		p	4		random
	m	(Lcpv;Lasc;Lgw;Ldfj;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcpy;Lgw;Ldfj;)Z	a	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldfj;Lakq;Lgw;Lasc;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	f	Ldep;	a	treeGrower
	f	Ldgj;	d	STAGE
	f	F	e	AABB_OFFSET
	f	Leig;	f	SHAPE
c	czk	net/minecraft/world/level/block/ScaffoldingBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Lcpb;Lgw;)I	a	getDistance
		p	0		world
		p	1		pos
	m	(Lcpb;Lgw;I)Z	a	isBottom
		p	1		world
		p	2		pos
		p	3		distance
	m	(Ldfj;Lakq;Lgw;Lasc;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lcln;)Z	a	canBeReplaced
		p	1		state
		p	2		context
	m	(Ldfj;Lcpb;Lgw;)Leig;	a	getInteractionShape
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpy;Lgw;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldfj;Lcpv;Lgw;Ldfj;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	c	getCollisionShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;)Leam;	c_	getFluidState
		p	1		state
	f	I	a	STABILITY_MAX_DISTANCE
	f	Ldgj;	b	DISTANCE
	f	Ldga;	c	WATERLOGGED
	f	Ldga;	d	BOTTOM
	f	I	e	TICK_DELAY
	f	Leig;	f	STABLE_SHAPE
	f	Leig;	g	UNSTABLE_SHAPE
	f	Leig;	h	UNSTABLE_SHAPE_BOTTOM
	f	Leig;	i	BELOW_BLOCK
c	czl	net/minecraft/world/level/block/SculkBehaviour
	m	()B	a	getSculkSpreadDelay
	m	(Lcpw;Ldfj;Lgw;Lasc;)V	a	onDischarged
		p	1		world
		p	2		state
		p	3		pos
		p	4		random
	m	(Lcpw;Lgw;Lasc;)Z	a	depositCharge
		p	1		world
		p	2		pos
		p	3		random
	m	(Lcpw;Lgw;Ldfj;Ljava/util/Collection;Z)Z	a	attemptSpreadVein
		p	1		world
		p	2		pos
		p	3		state
		p	4		directions
		p	5		markForPostProcessing
	m	(Lczq$a;Lcpw;Lgw;Lasc;Lczq;Z)I	a	attemptUseCharge
		p	1		cursor
		p	2		world
		p	3		catalystPos
		p	4		random
		p	5		spreadManager
		p	6		shouldConvertToBlock
	m	()Z	c	canChangeBlockStateOnSpread
	m	(I)I	i_	updateDecayDelay
		p	1		oldDecay
	f	Lczl;	t_	DEFAULT
c	czl$1	net/minecraft/world/level/block/SculkBehaviour$1
	m	(Lcpw;Lgw;Ldfj;Ljava/util/Collection;Z)Z	a	attemptSpreadVein
		p	1		world
		p	2		pos
		p	3		state
		p	4		directions
		p	5		markForPostProcessing
	m	(Lczq$a;Lcpw;Lgw;Lasc;Lczq;Z)I	a	attemptUseCharge
		p	1		cursor
		p	2		world
		p	3		catalystPos
		p	4		random
		p	5		spreadManager
		p	6		shouldConvertToBlock
	m	(I)I	i_	updateDecayDelay
		p	1		oldDecay
c	czm	net/minecraft/world/level/block/SculkBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lcpw;Lgw;)Z	a	canPlaceGrowth
		p	0		world
		p	1		pos
	m	(Lcpw;Lgw;Lasc;Z)Ldfj;	a	getRandomGrowthState
		p	1		world
		p	2		pos
		p	3		random
		p	4		allowShrieker
	m	(Lczq$a;Lcpw;Lgw;Lasc;Lczq;Z)I	a	attemptUseCharge
		p	1		cursor
		p	2		world
		p	3		catalystPos
		p	4		random
		p	5		spreadManager
		p	6		shouldConvertToBlock
	m	(Lczq;Lgw;Lgw;I)I	a	getDecayPenalty
		p	0		spreadManager
		p	1		cursorPos
		p	2		catalystPos
		p	3		charge
	m	()Z	c	canChangeBlockStateOnSpread
c	czn	net/minecraft/world/level/block/SculkCatalystBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lcpv;Ldfj;Ldcx;)Ldcw;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Ldfj;Lakq;Lgw;Lasc;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lakq;Lgw;Lcjf;Z)V	a	spawnAfterBreak
		p	1		state
		p	2		world
		p	3		pos
		p	4		tool
		p	5		dropExperience
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lgw;Ldfj;)Ldcv;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Ldfj;)Lcza;	b_	getRenderShape
		p	1		state
	f	Ldga;	a	PULSE
	f	Lbgd;	b	xpRange
c	czo	net/minecraft/world/level/block/SculkSensorBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lbiq;Lcpv;Lgw;I)V	a	tryResonateVibration
		p	0		sourceEntity
		p	1		world
		p	2		pos
		p	3		frequency
	m	(Lbiq;Lcpv;Lgw;Ldfj;II)V	a	activate
		p	1		sourceEntity
		p	2		world
		p	3		pos
		p	4		state
		p	5		power
		p	6		frequency
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Lcpv;Ldfj;Ldcx;)Ldcw;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Lcpv;Lgw;Ldfj;)V	a	deactivate
		p	0		world
		p	1		pos
		p	2		state
	m	(Lcpv;Lgw;Ldfj;Lbiq;)V	a	stepOn
		p	1		world
		p	2		pos
		p	3		state
		p	4		entity
	m	(Lcpv;Lgw;Ldfj;Ldea;)V	a	lambda$getTicker$1
		p	0		worldx
		p	1		pos
		p	2		statex
		p	3		blockEntity
	m	(Ldfj;Lakq;Lgw;Lasc;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lakq;Lgw;Lcjf;Z)V	a	spawnAfterBreak
		p	1		state
		p	2		world
		p	3		pos
		p	4		tool
		p	5		dropExperience
	m	(Ldfj;Lcpb;Lgw;Lebc;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpb;Lgw;Lha;)I	a	getSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldfj;Lcpv;Lgw;)I	a	getAnalogOutputSignal
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lcpv;Lgw;Lasc;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lcpv;Lgw;Ldfj;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lgw;Ldfj;)Ldcv;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	([F)V	a	lambda$static$0
		p	0		frequency
	m	()I	b	getActiveTicks
	m	(Lcpv;Lgw;Ldfj;)V	b	updateNeighbours
		p	0		world
		p	1		pos
		p	2		state
	m	(Ldfj;Lcpb;Lgw;Lha;)I	b	getDirectSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldfj;Lcpv;Lgw;Ldfj;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	m	(Ldfj;)Lcza;	b_	getRenderShape
		p	1		state
	m	(Ldfj;)Leam;	c_	getFluidState
		p	1		state
	m	(Ldfj;)Z	d_	hasAnalogOutputSignal
		p	1		state
	m	(Ldfj;)Z	f_	isSignalSource
		p	1		state
	m	(Ldfj;)Z	g_	useShapeForLightOcclusion
		p	1		state
	m	(Ldfj;)Ldgq;	h	getPhase
		p	0		state
	m	(Ldfj;)Z	n	canActivate
		p	0		state
	f	[F	a	RESONANCE_PITCH_BEND
	f	I	b	ACTIVE_TICKS
	f	I	c	COOLDOWN_TICKS
	f	Ldgh;	d	PHASE
	f	Ldgj;	e	POWER
	f	Ldga;	f	WATERLOGGED
	f	Leig;	g	SHAPE
c	czp	net/minecraft/world/level/block/SculkShriekerBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lakq;Lakr;Ldeb;)V	a	lambda$stepOn$0
		p	2		blockEntity
	m	(Lakq;Ldeb;)V	a	lambda$tick$2
		p	1		blockEntity
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Lcpv;Ldfj;Ldcx;)Ldcw;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Lcpv;Lgw;Ldfj;Lbiq;)V	a	stepOn
		p	1		world
		p	2		pos
		p	3		state
		p	4		entity
	m	(Lcpv;Lgw;Ldfj;Ldeb;)V	a	lambda$getTicker$3
		p	1		pos
		p	2		statex
	m	(Ldfj;Lakq;Lgw;Lasc;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lakq;Lgw;Lcjf;Z)V	a	spawnAfterBreak
		p	1		state
		p	2		world
		p	3		pos
		p	4		tool
		p	5		dropExperience
	m	(Ldfj;Lcpv;Lgw;Ldfj;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lgw;Ldfj;)Ldcv;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Lakq;Ldeb;)V	b	lambda$onRemove$1
		p	1		blockEntity
	m	(Ldfj;)Lcza;	b_	getRenderShape
		p	1		state
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	c	getCollisionShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;)Leam;	c_	getFluidState
		p	1		state
	m	(Ldfj;Lcpb;Lgw;)Leig;	f	getOcclusionShape
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;)Z	g_	useShapeForLightOcclusion
		p	1		state
	f	Ldga;	a	SHRIEKING
	f	Ldga;	b	WATERLOGGED
	f	Ldga;	c	CAN_SUMMON
	f	Leig;	d	COLLIDER
	f	D	e	TOP_Y
c	czq	net/minecraft/world/level/block/SculkSpreader
	m	(ZLaqh;IIII)V	<init>	<init>
		p	1		worldGen
		p	2		replaceableTag
		p	3		extraBlockChance
		p	4		maxDistance
		p	5		spreadChance
		p	6		decayChance
	m	()Lczq;	a	createLevelSpreader
	m	(Lcpw;Lgw;Lasc;Z)V	a	updateCursors
		p	1		world
		p	2		pos
		p	3		random
		p	4		shouldConvertToBlock
	m	(Lczq$a;)V	a	addCursor
		p	1		cursor
	m	(Lczq$a;Lgw;Ljava/lang/Integer;)Ljava/lang/Integer;	a	lambda$updateCursors$2
		p	1		posx
		p	2		charge
	m	(Lgw;I)V	a	addCursors
		p	1		pos
		p	2		charge
	m	(Lqw;)V	a	load
		p	1		nbt
	m	(Lqw;Lrq;)V	a	lambda$save$0
		p	1		cursorsNbt
	m	()Lczq;	b	createWorldGenSpreader
	m	(Lczq$a;)Ljava/lang/Integer;	b	lambda$save$1
	m	(Lqw;)V	b	save
		p	1		nbt
	m	()Laqh;	c	replaceableBlocks
	m	()I	d	growthSpawnCost
	m	()I	e	noGrowthRadius
	m	()I	f	chargeDecayRate
	m	()I	g	additionalDecayRate
	m	()Z	h	isWorldGeneration
	m	()Ljava/util/List;	i	getCursors
	m	()V	j	clear
	f	I	a	MAX_GROWTH_RATE_RADIUS
	f	I	b	MAX_CHARGE
	f	F	c	MAX_DECAY_FACTOR
	f	I	d	SHRIEKER_PLACEMENT_RATE
	f	I	e	MAX_CURSORS
	f	Z	f	isWorldGeneration
	f	Laqh;	g	replaceableBlocks
	f	I	h	growthSpawnCost
	f	I	i	noGrowthRadius
	f	I	j	chargeDecayRate
	f	I	k	additionalDecayRate
	f	Ljava/util/List;	l	cursors
	f	Lorg/slf4j/Logger;	m	LOGGER
c	czq$a	net/minecraft/world/level/block/SculkSpreader$ChargeCursor
	m	(Lgw;I)V	<init>	<init>
		p	1		pos
		p	2		charge
	m	(Lgw;IIILjava/util/Optional;)V	<init>	<init>
		p	1		pos
		p	2		charge
		p	3		decay
		p	4		update
		p	5		faces
	m	()Lgw;	a	getPos
	m	(Lasc;)Ljava/util/List;	a	getRandomizedNonCornerNeighbourOffsets
		p	0		random
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$5
		p	0		instance
	m	(Lcpw;Lgw;Lasc;)Lgw;	a	getValidMovementPos
		p	0		world
		p	1		pos
		p	2		random
	m	(Lcpw;Lgw;Lasc;Lczq;Z)V	a	update
		p	1		world
		p	2		pos
		p	3		random
		p	4		spreadManager
		p	5		shouldConvertToBlock
	m	(Lcpw;Lgw;Lgw;)Z	a	isMovementUnobstructed
		p	0		world
		p	1		sourcePos
		p	2		targetPos
	m	(Lcpw;Lgw;Lha;)Z	a	isUnobstructed
		p	0		world
		p	1		pos
		p	2		direction
	m	(Lcpw;Lgw;Z)Z	a	shouldUpdate
		p	1		world
		p	2		pos
		p	3		worldGen
	m	(Lczq$a;)V	a	mergeWith
		p	1		cursor
	m	(Ldfj;)Lczl;	a	getBlockBehaviour
		p	0		state
	m	(Lgw;)Z	a	lambda$static$0
		p	0		pos
	m	(Lit/unimi/dsi/fastutil/objects/ObjectArrayList;)V	a	lambda$static$1
	m	(Ljava/util/List;)Ljava/util/Set;	a	lambda$static$2
		p	0		directions
	m	()I	b	getCharge
	m	(Lczq$a;)Ljava/util/Optional;	b	lambda$static$4
		p	0		cursor
	m	()I	c	getDecayDelay
	m	(Lczq$a;)Ljava/lang/Integer;	c	lambda$static$3
		p	0		cursor
	m	()Ljava/util/Set;	d	getFacingData
	f	I	a	MAX_CURSOR_DECAY_DELAY
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lit/unimi/dsi/fastutil/objects/ObjectArrayList;	c	NON_CORNER_NEIGHBOURS
	f	Lgw;	d	pos
	f	I	e	charge
	f	I	f	updateDelay
	f	I	g	decayDelay
	f	Ljava/util/Set;	h	facings
	f	Lcom/mojang/serialization/Codec;	i	DIRECTION_SET
c	czr	net/minecraft/world/level/block/SculkVeinBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lcpw;Ldfj;Lgw;)Z	a	hasSubstrateAccess
		p	0		world
		p	1		state
		p	2		pos
	m	(Lcpw;Ldfj;Lgw;Lasc;)V	a	onDischarged
		p	1		world
		p	2		state
		p	3		pos
		p	4		random
	m	(Lcpw;Lgw;Ldfj;Ljava/util/Collection;)Z	a	regrow
		p	0		world
		p	1		pos
		p	2		state
		p	3		directions
	m	(Lczq$a;Lcpw;Lgw;Lasc;Lczq;Z)I	a	attemptUseCharge
		p	1		cursor
		p	2		world
		p	3		catalystPos
		p	4		random
		p	5		spreadManager
		p	6		shouldConvertToBlock
	m	(Lczq;Lcpw;Lgw;Lasc;)Z	a	attemptPlaceSculk
		p	1		spreadManager
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lcln;)Z	a	canBeReplaced
		p	1		state
		p	2		context
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	()Lcxu;	b	getSpreader
	m	(Ldfj;)Leam;	c_	getFluidState
		p	1		state
	m	()Lcxu;	g	getSameSpaceSpreader
	f	Ldga;	b	WATERLOGGED
	f	Lcxu;	c	veinSpreader
	f	Lcxu;	d	sameSpaceSpreader
c	czr$a	net/minecraft/world/level/block/SculkVeinBlock$SculkVeinSpreaderConfig
	m	(Lczr;[Lcxu$e;)V	<init>	<init>
		p	2		growTypes
	m	()[Lcxu$e;	a	getSpreadTypes
	m	(Lcpb;Lgw;Lgw;Lha;Ldfj;)Z	a	stateCanBeReplaced
		p	1		world
		p	2		pos
		p	3		growPos
		p	4		direction
		p	5		state
	m	(Ldfj;)Z	a	isOtherBlockValidAsSource
		p	1		state
	f	Lczr;	b	this$0
	f	[Lcxu$e;	c	spreadTypes
c	czs	net/minecraft/world/level/block/SeaPickleBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lakq;Lasc;Lgw;Ldfj;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Lcpv;Lasc;Lgw;Ldfj;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcpy;Lgw;Ldfj;)Z	a	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldfj;Lcln;)Z	a	canBeReplaced
		p	1		state
		p	2		context
	m	(Ldfj;Lcpb;Lgw;Lebc;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpy;Lgw;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldfj;)Leam;	c_	getFluidState
		p	1		state
	m	(Ldfj;Lcpb;Lgw;)Z	d	mayPlaceOn
		p	1		floor
		p	2		world
		p	3		pos
	m	(Ldfj;)Z	h	isDead
		p	0		state
	f	I	a	MAX_PICKLES
	f	Ldgj;	b	PICKLES
	f	Ldga;	c	WATERLOGGED
	f	Leig;	d	ONE_AABB
	f	Leig;	e	TWO_AABB
	f	Leig;	f	THREE_AABB
	f	Leig;	g	FOUR_AABB
c	czt	net/minecraft/world/level/block/SeagrassBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lakq;Lasc;Lgw;Ldfj;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcbu;Lcpb;Lgw;Ldfj;Leal;)Z	a	canPlaceLiquid
		p	1		player
		p	2		world
		p	3		pos
		p	4		state
		p	5		fluid
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Lcpv;Lasc;Lgw;Ldfj;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcpw;Lgw;Ldfj;Leam;)Z	a	placeLiquid
		p	1		world
		p	2		pos
		p	3		state
		p	4		fluidState
	m	(Lcpy;Lgw;Ldfj;)Z	a	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldfj;)Leam;	c_	getFluidState
		p	1		state
	m	(Ldfj;Lcpb;Lgw;)Z	d	mayPlaceOn
		p	1		floor
		p	2		world
		p	3		pos
	f	F	a	AABB_OFFSET
	f	Leig;	b	SHAPE
c	czu	net/minecraft/world/level/block/ShulkerBoxBlock
	m	(Lcht;Ldfi$d;)V	<init>	<init>
		p	1		color
		p	2		settings
	m	()Lcht;	a	getColor
	m	(Lcht;)Lcsv;	a	getBlockByColor
		p	0		dyeColor
	m	(Lcjf;Lcpb;Ljava/util/List;Lckw;)V	a	appendHoverText
		p	1		stack
		p	2		world
		p	3		tooltip
		p	4		options
	m	(Lcjf;Ldec;)V	a	lambda$getCloneItemStack$2
		p	1		blockEntity
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Lcpb;Lgw;Ldfj;)Lcjf;	a	getCloneItemStack
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcpv;Ldfj;Ldcx;)Ldcw;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Lcpv;Lgw;Ldfj;Lbjg;Lcjf;)V	a	setPlacedBy
		p	1		world
		p	2		pos
		p	3		state
		p	4		placer
		p	5		itemStack
	m	(Lcpv;Lgw;Ldfj;Lcbu;)V	a	playerWillDestroy
		p	1		world
		p	2		pos
		p	3		state
		p	4		player
	m	(Lcsv;)Lcht;	a	getColorFromBlock
		p	0		block
	m	(Ldec;Ljava/util/function/Consumer;)V	a	lambda$getDrops$1
		p	1		lootConsumer
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpv;Lgw;)I	a	getAnalogOutputSignal
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lcpv;Lgw;Lcbu;Lbgx;Lehj;)Lbgy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldfj;Lcpv;Lgw;Ldec;)Z	a	canOpen
		p	0		state
		p	1		world
		p	2		pos
		p	3		entity
	m	(Ldfj;Lcpv;Lgw;Ldfj;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Ldfj;Lcxq;)Ldfj;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldfj;Lczh;)Ldfj;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldfj;Lecw$a;)Ljava/util/List;	a	getDrops
		p	1		state
		p	2		builder
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lgw;Ldfj;)Ldcv;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Ljava/util/EnumMap;)V	a	lambda$static$0
		p	0		map
	m	(Lcht;)Lcjf;	b	getColoredItemStack
		p	0		color
	m	(Lcja;)Lcht;	b	getColorFromItem
		p	0		item
	m	(Ldfj;)Lcza;	b_	getRenderShape
		p	1		state
	m	(Ldfj;Lcpb;Lgw;)Leig;	b_	getBlockSupportShape
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;)Z	d_	hasAnalogOutputSignal
		p	1		state
	f	Ldgh;	a	FACING
	f	Laew;	b	CONTENTS
	f	F	c	OPEN_AABB_SIZE
	f	Leig;	d	UP_OPEN_AABB
	f	Leig;	e	DOWN_OPEN_AABB
	f	Leig;	f	WES_OPEN_AABB
	f	Leig;	g	EAST_OPEN_AABB
	f	Leig;	h	NORTH_OPEN_AABB
	f	Leig;	i	SOUTH_OPEN_AABB
	f	Ljava/util/Map;	j	OPEN_SHAPE_BY_DIRECTION
	f	Lcht;	k	color
c	czu$1	net/minecraft/world/level/block/ShulkerBoxBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$item$DyeColor
c	czv	net/minecraft/world/level/block/SignBlock
	m	(Ldfi$d;Ldgw;)V	<init>	<init>
		p	1		settings
		p	2		type
	m	(Lcbu;Lded;)Z	a	otherPlayerIsEditingSign
		p	1		player
		p	2		blockEntity
	m	(Lcbu;Lded;Z)V	a	openTextEdit
		p	1		player
		p	2		blockEntity
		p	3		front
	m	(Lcpv;Ldfj;Ldcx;)Ldcw;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Lcsv;)Ldgw;	a	getWoodType
		p	0		block
	m	(Ldfj;)Z	a	isPossibleToRespawnInThis
		p	1		state
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpv;Lgw;Lcbu;Lbgx;Lehj;)Lbgy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Lgw;Ldfj;)Ldcv;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Ltl;)Z	a	lambda$hasEditableText$0
		p	0		message
	m	(Z)Lbgy;	a	getInteractionResult
		p	1		usedSignChanger
	m	(Lcbu;Lded;Z)Z	b	hasEditableText
		p	1		player
		p	2		blockEntity
		p	3		front
	m	()Ldgw;	c	type
	m	(Ldfj;)Leam;	c_	getFluidState
		p	1		state
	m	(Ldfj;)F	g	getYRotationDegrees
		p	1		state
	m	(Ldfj;)Lehn;	h	getSignHitboxCenterPosition
		p	1		state
	f	Ldgw;	a	type
	f	Ldga;	e	WATERLOGGED
	f	F	f	AABB_OFFSET
	f	Leig;	g	SHAPE
c	czw	net/minecraft/world/level/block/SimpleWaterloggedBlock
	m	(Lcbu;Lcpb;Lgw;Ldfj;Leal;)Z	a	canPlaceLiquid
		p	1		player
		p	2		world
		p	3		pos
		p	4		state
		p	5		fluid
	m	(Lcbu;Lcpw;Lgw;Ldfj;)Lcjf;	a	pickupBlock
		p	1		player
		p	2		world
		p	3		pos
		p	4		state
	m	(Lcpw;Lgw;Ldfj;Leam;)Z	a	placeLiquid
		p	1		world
		p	2		pos
		p	3		state
		p	4		fluidState
	m	()Ljava/util/Optional;	aq_	getPickupSound
c	czx	net/minecraft/world/level/block/SkullBlock
	m	(Lczx$a;Ldfi$d;)V	<init>	<init>
		p	1		type
		p	2		settings
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcxq;)Ldfj;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldfj;Lczh;)Ldfj;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldfj;Lcpb;Lgw;)Leig;	f	getOcclusionShape
		p	1		state
		p	2		world
		p	3		pos
	f	I	b	MAX
	f	Ldgj;	c	ROTATION
	f	Leig;	d	SHAPE
	f	Leig;	e	PIGLIN_SHAPE
	f	I	f	ROTATIONS
c	czx$a	net/minecraft/world/level/block/SkullBlock$Type
c	czx$b	net/minecraft/world/level/block/SkullBlock$Types
	m	()[Lczx$b;	a	$values
	f	Lczx$b;	a	SKELETON
	f	Lczx$b;	b	WITHER_SKELETON
	f	Lczx$b;	c	PLAYER
	f	Lczx$b;	d	ZOMBIE
	f	Lczx$b;	e	CREEPER
	f	Lczx$b;	f	PIGLIN
	f	Lczx$b;	g	DRAGON
	f	[Lczx$b;	h	$VALUES
c	czy	net/minecraft/world/level/block/SlabBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lcbu;Lcpb;Lgw;Ldfj;Leal;)Z	a	canPlaceLiquid
		p	1		player
		p	2		world
		p	3		pos
		p	4		state
		p	5		fluid
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Lcpw;Lgw;Ldfj;Leam;)Z	a	placeLiquid
		p	1		world
		p	2		pos
		p	3		state
		p	4		fluidState
	m	(Ldfj;Lcln;)Z	a	canBeReplaced
		p	1		state
		p	2		context
	m	(Ldfj;Lcpb;Lgw;Lebc;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldfj;)Leam;	c_	getFluidState
		p	1		state
	m	(Ldfj;)Z	g_	useShapeForLightOcclusion
		p	1		state
	f	Ldgh;	a	TYPE
	f	Ldga;	b	WATERLOGGED
	f	Leig;	c	BOTTOM_AABB
	f	Leig;	d	TOP_AABB
c	czy$1	net/minecraft/world/level/block/SlabBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$state$properties$SlabType
	f	[I	b	$SwitchMap$net$minecraft$world$level$pathfinder$PathComputationType
c	czz	net/minecraft/world/level/block/SlimeBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lbiq;)V	a	bounceUp
		p	1		entity
	m	(Lcpb;Lbiq;)V	a	updateEntityAfterFallOn
		p	1		world
		p	2		entity
	m	(Lcpv;Ldfj;Lgw;Lbiq;F)V	a	fallOn
		p	1		world
		p	2		state
		p	3		pos
		p	4		entity
		p	5		fallDistance
	m	(Lcpv;Lgw;Ldfj;Lbiq;)V	a	stepOn
		p	1		world
		p	2		pos
		p	3		state
		p	4		entity
c	daa	net/minecraft/world/level/block/SmallDripleafBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lakq;Lasc;Lgw;Ldfj;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Lcpv;Lasc;Lgw;Ldfj;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcpv;Lgw;Ldfj;Lbjg;Lcjf;)V	a	setPlacedBy
		p	1		world
		p	2		pos
		p	3		state
		p	4		placer
		p	5		itemStack
	m	(Lcpy;Lgw;Ldfj;)Z	a	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpy;Lgw;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lcxq;)Ldfj;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldfj;Lczh;)Ldfj;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	()F	ar_	getMaxVerticalOffset
	m	(Ldfj;)Leam;	c_	getFluidState
		p	1		state
	m	(Ldfj;Lcpb;Lgw;)Z	d	mayPlaceOn
		p	1		floor
		p	2		world
		p	3		pos
	f	Ldgd;	b	FACING
	f	F	c	AABB_OFFSET
	f	Leig;	d	SHAPE
	f	Ldga;	e	WATERLOGGED
c	dab	net/minecraft/world/level/block/SmithingTableBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lcpv;Lgw;ILcbt;Lcbu;)Lcel;	a	lambda$getMenuProvider$0
		p	2		syncId
		p	3		inventory
		p	4		player
	m	(Ldfj;Lcpv;Lgw;Lcbu;Lbgx;Lehj;)Lbgy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldfj;Lcpv;Lgw;)Lbhb;	b	getMenuProvider
		p	1		state
		p	2		world
		p	3		pos
	f	Ltl;	a	CONTAINER_TITLE
c	dac	net/minecraft/world/level/block/SmokerBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lcpv;Ldfj;Ldcx;)Ldcw;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Lcpv;Lgw;Lcbu;)V	a	openContainer
		p	1		world
		p	2		pos
		p	3		player
	m	(Ldfj;Lcpv;Lgw;Lasc;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lgw;Ldfj;)Ldcv;	a	newBlockEntity
		p	1		pos
		p	2		state
c	dad	net/minecraft/world/level/block/SnifferEggBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lcpb;Lgw;)Z	a	hatchBoost
		p	0		world
		p	1		pos
	m	(Ldfj;Lakq;Lgw;Lasc;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lcpb;Lgw;Lebc;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldfj;Lcpv;Lgw;Ldfj;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	m	(Ldfj;)I	h	getHatchLevel
		p	1		state
	m	(Ldfj;)Z	n	isReadyToHatch
		p	1		state
	f	I	a	MAX_HATCH_LEVEL
	f	Ldgj;	b	HATCH
	f	I	c	REGULAR_HATCH_TIME_TICKS
	f	I	d	BOOSTED_HATCH_TIME_TICKS
	f	I	e	RANDOM_HATCH_OFFSET_TICKS
	f	Leig;	f	SHAPE
c	dae	net/minecraft/world/level/block/SnowLayerBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Ldfj;Lcln;)Z	a	canBeReplaced
		p	1		state
		p	2		context
	m	(Ldfj;Lcpb;Lgw;Lebc;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpy;Lgw;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldfj;Lakq;Lgw;Lasc;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lcpb;Lgw;)F	b	getShadeBrightness
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	b	getVisualShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpb;Lgw;)Leig;	b_	getBlockSupportShape
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	c	getCollisionShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;)Z	g_	useShapeForLightOcclusion
		p	1		state
	f	I	a	MAX_HEIGHT
	f	Ldgj;	b	LAYERS
	f	[Leig;	c	SHAPE_BY_LAYER
	f	I	d	HEIGHT_IMPASSABLE
c	dae$1	net/minecraft/world/level/block/SnowLayerBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$pathfinder$PathComputationType
c	daf	net/minecraft/world/level/block/SnowyDirtBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldfj;)Z	h	isSnowySetting
		p	0		state
	f	Ldga;	a	SNOWY
c	dag	net/minecraft/world/level/block/SoulFireBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Ldfj;Lcpy;Lgw;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldfj;)Z	f	canBurn
		p	1		state
	m	(Ldfj;)Z	h	canSurviveOnBlock
		p	0		state
c	dah	net/minecraft/world/level/block/SoulSandBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Ldfj;Lakq;Lgw;Lasc;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lcpb;Lgw;Lebc;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldfj;Lcpb;Lgw;)F	b	getShadeBrightness
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	b	getVisualShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpv;Lgw;Ldfj;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	m	(Ldfj;Lcpb;Lgw;)Leig;	b_	getBlockSupportShape
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	c	getCollisionShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	f	Leig;	a	SHAPE
	f	I	b	BUBBLE_COLUMN_CHECK_DELAY
c	dai	net/minecraft/world/level/block/SoundType
	m	(FFLapc;Lapc;Lapc;Lapc;Lapc;)V	<init>	<init>
		p	1		volume
		p	2		pitch
		p	3		breakSound
		p	4		stepSound
		p	5		placeSound
		p	6		hitSound
		p	7		fallSound
	m	()F	a	getVolume
	m	()F	b	getPitch
	m	()Lapc;	c	getBreakSound
	m	()Lapc;	d	getStepSound
	m	()Lapc;	e	getPlaceSound
	m	()Lapc;	f	getHitSound
	m	()Lapc;	g	getFallSound
	f	Ldai;	A	LANTERN
	f	Ldai;	B	STEM
	f	Ldai;	C	NYLIUM
	f	Ldai;	D	FUNGUS
	f	Ldai;	E	ROOTS
	f	Ldai;	F	SHROOMLIGHT
	f	Ldai;	G	WEEPING_VINES
	f	Ldai;	H	TWISTING_VINES
	f	Ldai;	I	SOUL_SAND
	f	Ldai;	J	SOUL_SOIL
	f	Ldai;	K	BASALT
	f	Ldai;	L	WART_BLOCK
	f	Ldai;	M	NETHERRACK
	f	Ldai;	N	NETHER_BRICKS
	f	Ldai;	O	NETHER_SPROUTS
	f	Ldai;	P	NETHER_ORE
	f	Ldai;	Q	BONE_BLOCK
	f	Ldai;	R	NETHERITE_BLOCK
	f	Ldai;	S	ANCIENT_DEBRIS
	f	Ldai;	T	LODESTONE
	f	Ldai;	U	CHAIN
	f	Ldai;	V	NETHER_GOLD_ORE
	f	Ldai;	W	GILDED_BLACKSTONE
	f	Ldai;	X	CANDLE
	f	Ldai;	Y	AMETHYST
	f	Ldai;	Z	AMETHYST_CLUSTER
	f	Ldai;	aA	DEEPSLATE
	f	Ldai;	aB	DEEPSLATE_BRICKS
	f	Ldai;	aC	DEEPSLATE_TILES
	f	Ldai;	aD	POLISHED_DEEPSLATE
	f	Ldai;	aE	FROGLIGHT
	f	Ldai;	aF	FROGSPAWN
	f	Ldai;	aG	MANGROVE_ROOTS
	f	Ldai;	aH	MUDDY_MANGROVE_ROOTS
	f	Ldai;	aI	MUD
	f	Ldai;	aJ	MUD_BRICKS
	f	Ldai;	aK	PACKED_MUD
	f	Ldai;	aL	HANGING_SIGN
	f	Ldai;	a	EMPTY
	f	Ldai;	aM	NETHER_WOOD_HANGING_SIGN
	f	Ldai;	aN	BAMBOO_WOOD_HANGING_SIGN
	f	Ldai;	aO	BAMBOO_WOOD
	f	Ldai;	aP	NETHER_WOOD
	f	Ldai;	aQ	CHERRY_WOOD
	f	Ldai;	aR	CHERRY_SAPLING
	f	Ldai;	aS	CHERRY_LEAVES
	f	Ldai;	aT	CHERRY_WOOD_HANGING_SIGN
	f	Ldai;	aU	CHISELED_BOOKSHELF
	f	Ldai;	aV	SUSPICIOUS_SAND
	f	Ldai;	aW	SUSPICIOUS_GRAVEL
	f	Ldai;	aX	DECORATED_POT
	f	Ldai;	aY	DECORATED_POT_CRACKED
	f	Ldai;	aZ	SPONGE
	f	Ldai;	aa	SMALL_AMETHYST_BUD
	f	Ldai;	ab	MEDIUM_AMETHYST_BUD
	f	Ldai;	ac	LARGE_AMETHYST_BUD
	f	Ldai;	ad	TUFF
	f	Ldai;	ae	CALCITE
	f	Ldai;	af	DRIPSTONE_BLOCK
	f	Ldai;	ag	POINTED_DRIPSTONE
	f	Ldai;	ah	COPPER
	f	Ldai;	ai	CAVE_VINES
	f	Ldai;	aj	SPORE_BLOSSOM
	f	Ldai;	ak	AZALEA
	f	Ldai;	al	FLOWERING_AZALEA
	f	Ldai;	am	MOSS_CARPET
	f	Ldai;	an	PINK_PETALS
	f	Ldai;	ao	MOSS
	f	Ldai;	ap	BIG_DRIPLEAF
	f	Ldai;	aq	SMALL_DRIPLEAF
	f	Ldai;	ar	ROOTED_DIRT
	f	Ldai;	as	HANGING_ROOTS
	f	Ldai;	at	AZALEA_LEAVES
	f	Ldai;	au	SCULK_SENSOR
	f	Ldai;	av	SCULK_CATALYST
	f	Ldai;	aw	SCULK
	f	Ldai;	ax	SCULK_VEIN
	f	Ldai;	ay	SCULK_SHRIEKER
	f	Ldai;	az	GLOW_LICHEN
	f	Ldai;	b	WOOD
	f	Ldai;	ba	WET_SPONGE
	f	F	bb	volume
	f	F	bc	pitch
	f	Lapc;	bd	breakSound
	f	Lapc;	be	stepSound
	f	Lapc;	bf	placeSound
	f	Lapc;	bg	hitSound
	f	Lapc;	bh	fallSound
	f	Ldai;	c	GRAVEL
	f	Ldai;	d	GRASS
	f	Ldai;	e	LILY_PAD
	f	Ldai;	f	STONE
	f	Ldai;	g	METAL
	f	Ldai;	h	GLASS
	f	Ldai;	i	WOOL
	f	Ldai;	j	SAND
	f	Ldai;	k	SNOW
	f	Ldai;	l	POWDER_SNOW
	f	Ldai;	m	LADDER
	f	Ldai;	n	ANVIL
	f	Ldai;	o	SLIME_BLOCK
	f	Ldai;	p	HONEY_BLOCK
	f	Ldai;	q	WET_GRASS
	f	Ldai;	r	CORAL_BLOCK
	f	Ldai;	s	BAMBOO
	f	Ldai;	t	BAMBOO_SAPLING
	f	Ldai;	u	SCAFFOLDING
	f	Ldai;	v	SWEET_BERRY_BUSH
	f	Ldai;	w	CROP
	f	Ldai;	x	HARD_CROP
	f	Ldai;	y	VINE
	f	Ldai;	z	NETHER_WART
c	daj	net/minecraft/world/level/block/SpawnerBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lbiu;)Ltl;	a	lambda$getSpawnEntityDisplayName$0
		p	0		entityType
	m	(Lcjf;)Ljava/util/Optional;	a	getSpawnEntityDisplayName
		p	1		stack
	m	(Lcjf;Lcpb;Ljava/util/List;Lckw;)V	a	appendHoverText
		p	1		stack
		p	2		world
		p	3		tooltip
		p	4		options
	m	(Lcpv;Ldfj;Ldcx;)Ldcw;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Ldfj;Lakq;Lgw;Lcjf;Z)V	a	spawnAfterBreak
		p	1		state
		p	2		world
		p	3		pos
		p	4		tool
		p	5		dropExperience
	m	(Lgw;Ldfj;)Ldcv;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Ldfj;)Lcza;	b_	getRenderShape
		p	1		state
c	dak	net/minecraft/world/level/block/SpongeBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lcpv;Lgw;)V	a	tryAbsorbWater
		p	1		world
		p	2		pos
	m	(Ldfj;Lcpv;Lgw;Lcsv;Lgw;Z)V	a	neighborChanged
		p	1		state
		p	2		world
		p	3		pos
		p	4		sourceBlock
		p	5		sourcePos
		p	6		notify
	m	(Lgw;Lcpv;Lgw;)Z	a	lambda$removeWaterBreadthFirstSearch$1
		p	2		currentPos
	m	(Lgw;Ljava/util/function/Consumer;)V	a	lambda$removeWaterBreadthFirstSearch$0
		p	0		currentPos
		p	1		queuer
	m	(Lcpv;Lgw;)Z	b	removeWaterBreadthFirstSearch
		p	1		world
		p	2		pos
	m	(Ldfj;Lcpv;Lgw;Ldfj;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	f	I	a	MAX_DEPTH
	f	I	b	MAX_COUNT
	f	[Lha;	c	ALL_DIRECTIONS
c	dal	net/minecraft/world/level/block/SporeBlossomBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpv;Lgw;Lasc;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lcpy;Lgw;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	f	Leig;	a	SHAPE
	f	I	b	ADD_PARTICLE_ATTEMPTS
	f	I	c	PARTICLE_XZ_RADIUS
	f	I	d	PARTICLE_Y_MAX
c	dam	net/minecraft/world/level/block/SpreadingSnowyDirtBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Ldfj;Lakq;Lgw;Lasc;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lcpy;Lgw;)Z	b	canBeGrass
		p	0		state
		p	1		world
		p	2		pos
	m	(Ldfj;Lcpy;Lgw;)Z	c	canPropagate
		p	0		state
		p	1		world
		p	2		pos
c	dan	net/minecraft/world/level/block/StainedGlassBlock
	m	(Lcht;Ldfi$d;)V	<init>	<init>
		p	1		color
		p	2		settings
	m	()Lcht;	a	getColor
	f	Lcht;	a	color
c	dao	net/minecraft/world/level/block/StainedGlassPaneBlock
	m	(Lcht;Ldfi$d;)V	<init>	<init>
		p	1		color
		p	2		settings
	m	()Lcht;	a	getColor
	f	Lcht;	i	color
c	dap	net/minecraft/world/level/block/StairBlock
	m	(Ldfj;Ldfi$d;)V	<init>	<init>
		p	1		baseBlockState
		p	2		settings
	m	(ILeig;Leig;Leig;Leig;Leig;)Leig;	a	makeStairShape
		p	0		i
		p	1		base
		p	2		northWest
		p	3		northEast
		p	4		southWest
		p	5		southEast
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Lcpv;Lgw;Lcpn;)V	a	wasExploded
		p	1		world
		p	2		pos
		p	3		explosion
	m	(Lcpv;Lgw;Ldfj;Lbiq;)V	a	stepOn
		p	1		world
		p	2		pos
		p	3		state
		p	4		entity
	m	(Lcpw;Lgw;Ldfj;)V	a	destroy
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldfj;Lakq;Lgw;Lasc;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lcpb;Lgw;Lebc;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpv;Lgw;Lasc;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lcpv;Lgw;Lcbu;)V	a	attack
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
	m	(Ldfj;Lcpv;Lgw;Lcbu;Lbgx;Lehj;)Lbgy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldfj;Lcpv;Lgw;Ldfj;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Ldfj;Lcxq;)Ldfj;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldfj;Lczh;)Ldfj;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Leig;Leig;Leig;Leig;Leig;)[Leig;	a	makeShapes
		p	0		base
		p	1		northWest
		p	2		northEast
		p	3		southWest
		p	4		southEast
	m	(Leig;Leig;Leig;Leig;Leig;I)Leig;	a	lambda$makeShapes$0
		p	5		i
	m	(I)[Leig;	b	lambda$makeShapes$1
	m	(Ldfj;Lakq;Lgw;Lasc;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lcpv;Lgw;Ldfj;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	m	(Ldfj;Lcpb;Lgw;Lha;)Z	c	canTakeShape
		p	0		state
		p	1		world
		p	2		pos
		p	3		dir
	m	(Ldfj;)Leam;	c_	getFluidState
		p	1		state
	m	()F	d	getExplosionResistance
	m	(Ldfj;)Z	e_	isRandomlyTicking
		p	1		state
	m	(Ldfj;)Z	g_	useShapeForLightOcclusion
		p	1		state
	m	(Ldfj;)Z	h	isStairs
		p	0		state
	m	(Ldfj;Lcpb;Lgw;)Ldgs;	i	getStairsShape
		p	0		state
		p	1		world
		p	2		pos
	m	(Ldfj;)I	n	getShapeIndex
		p	1		state
	f	[Leig;	D	TOP_SHAPES
	f	[Leig;	E	BOTTOM_SHAPES
	f	[I	F	SHAPE_BY_STATE
	f	Lcsv;	G	base
	f	Ldfj;	H	baseState
	f	Ldgd;	a	FACING
	f	Ldgh;	b	HALF
	f	Ldgh;	c	SHAPE
	f	Ldga;	d	WATERLOGGED
	f	Leig;	e	TOP_AABB
	f	Leig;	f	BOTTOM_AABB
	f	Leig;	g	OCTET_NNN
	f	Leig;	h	OCTET_NNP
	f	Leig;	i	OCTET_NPN
	f	Leig;	j	OCTET_NPP
	f	Leig;	k	OCTET_PNN
	f	Leig;	l	OCTET_PNP
	f	Leig;	m	OCTET_PPN
	f	Leig;	n	OCTET_PPP
c	dap$1	net/minecraft/world/level/block/StairBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$state$properties$StairsShape
	f	[I	b	$SwitchMap$net$minecraft$world$level$block$Mirror
c	daq	net/minecraft/world/level/block/StandingSignBlock
	m	(Ldfi$d;Ldgw;)V	<init>	<init>
		p	1		settings
		p	2		type
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Ldfj;Lcpy;Lgw;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lcxq;)Ldfj;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldfj;Lczh;)Ldfj;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldfj;)F	g	getYRotationDegrees
		p	1		state
	f	Ldgj;	a	ROTATION
c	dar	net/minecraft/world/level/block/StemBlock
	m	(Ldas;Ljava/util/function/Supplier;Ldfi$d;)V	<init>	<init>
		p	1		gourdBlock
		p	2		pickBlockItem
		p	3		settings
	m	()Ldas;	a	getFruit
	m	(Lakq;Lasc;Lgw;Ldfj;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcpb;Lgw;Ldfj;)Lcjf;	a	getCloneItemStack
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcpv;Lasc;Lgw;Ldfj;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcpy;Lgw;Ldfj;)Z	a	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldfj;Lakq;Lgw;Lasc;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lcpb;Lgw;)Z	d	mayPlaceOn
		p	1		floor
		p	2		world
		p	3		pos
	f	I	a	MAX_AGE
	f	Ldgj;	b	AGE
	f	F	c	AABB_OFFSET
	f	[Leig;	d	SHAPE_BY_AGE
	f	Ldas;	e	fruit
	f	Ljava/util/function/Supplier;	f	seedSupplier
c	das	net/minecraft/world/level/block/StemGrownBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	()Ldar;	a	getStem
	m	()Lcrx;	b	getAttachedStem
c	dat	net/minecraft/world/level/block/StonecutterBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Lcpv;Lgw;ILcbt;Lcbu;)Lcel;	a	lambda$getMenuProvider$0
		p	2		syncId
		p	3		playerInventory
		p	4		player
	m	(Ldfj;Lcpb;Lgw;Lebc;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpv;Lgw;Lcbu;Lbgx;Lehj;)Lbgy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldfj;Lcxq;)Ldfj;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldfj;Lczh;)Ldfj;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldfj;Lcpv;Lgw;)Lbhb;	b	getMenuProvider
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;)Lcza;	b_	getRenderShape
		p	1		state
	m	(Ldfj;)Z	g_	useShapeForLightOcclusion
		p	1		state
	f	Ldgd;	a	FACING
	f	Leig;	b	SHAPE
	f	Ltl;	c	CONTAINER_TITLE
c	dau	net/minecraft/world/level/block/StructureBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lakq;Ldei;)V	a	trigger
		p	1		world
		p	2		blockEntity
	m	(Lcpv;Lgw;Ldfj;Lbjg;Lcjf;)V	a	setPlacedBy
		p	1		world
		p	2		pos
		p	3		state
		p	4		placer
		p	5		itemStack
	m	(Ldfj;Lcpv;Lgw;Lcbu;Lbgx;Lehj;)Lbgy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldfj;Lcpv;Lgw;Lcsv;Lgw;Z)V	a	neighborChanged
		p	1		state
		p	2		world
		p	3		pos
		p	4		sourceBlock
		p	5		sourcePos
		p	6		notify
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lgw;Ldfj;)Ldcv;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Ldfj;)Lcza;	b_	getRenderShape
		p	1		state
	f	Ldgh;	a	MODE
c	dau$1	net/minecraft/world/level/block/StructureBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$state$properties$StructureMode
c	dav	net/minecraft/world/level/block/StructureVoidBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpb;Lgw;)F	b	getShadeBrightness
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;)Lcza;	b_	getRenderShape
		p	1		state
	f	D	a	SIZE
	f	Leig;	b	SHAPE
c	daw	net/minecraft/world/level/block/SugarCaneBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Ldfj;Lakq;Lgw;Lasc;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpy;Lgw;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldfj;Lakq;Lgw;Lasc;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	f	Ldgj;	a	AGE
	f	F	b	AABB_OFFSET
	f	Leig;	c	SHAPE
c	dax	net/minecraft/world/level/block/SupportType
	m	()[Ldax;	a	$values
	m	(Ldfj;Lcpb;Lgw;Lha;)Z	a	isSupporting
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	f	Ldax;	a	FULL
	f	Ldax;	b	CENTER
	f	Ldax;	c	RIGID
	f	[Ldax;	d	$VALUES
c	dax$1	net/minecraft/world/level/block/SupportType$1
	m	(Ldfj;Lcpb;Lgw;Lha;)Z	a	isSupporting
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
c	dax$2	net/minecraft/world/level/block/SupportType$2
	m	(Ldfj;Lcpb;Lgw;Lha;)Z	a	isSupporting
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	f	I	d	CENTER_SUPPORT_WIDTH
	f	Leig;	e	CENTER_SUPPORT_SHAPE
c	dax$3	net/minecraft/world/level/block/SupportType$3
	m	(Ldfj;Lcpb;Lgw;Lha;)Z	a	isSupporting
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	f	I	d	RIGID_SUPPORT_WIDTH
	f	Leig;	e	RIGID_SUPPORT_SHAPE
c	day	net/minecraft/world/level/block/SuspiciousEffectHolder
	m	()Ljava/util/List;	a	getSuspiciousEffects
	m	(Lcpu;)Lday;	a	tryGet
		p	0		item
	m	()Ljava/util/List;	b	getAllEffectHolders
c	day$a	net/minecraft/world/level/block/SuspiciousEffectHolder$EffectEntry
	m	()Lbid;	a	createEffectInstance
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()Lbib;	b	effect
	m	()I	c	duration
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcom/mojang/serialization/Codec;	b	LIST_CODEC
	f	Lbib;	c	effect
	f	I	d	duration
c	daz	net/minecraft/world/level/block/SweetBerryBushBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lakq;Lasc;Lgw;Ldfj;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcpb;Lgw;Ldfj;)Lcjf;	a	getCloneItemStack
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcpv;Lasc;Lgw;Ldfj;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcpy;Lgw;Ldfj;)Z	a	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpv;Lgw;Lbiq;)V	a	entityInside
		p	1		state
		p	2		world
		p	3		pos
		p	4		entity
	m	(Ldfj;Lcpv;Lgw;Lcbu;Lbgx;Lehj;)Lbgy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldfj;Lakq;Lgw;Lasc;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;)Z	e_	isRandomlyTicking
		p	1		state
	f	I	a	MAX_AGE
	f	Ldgj;	b	AGE
	f	F	c	HURT_SPEED_THRESHOLD
	f	Leig;	d	SAPLING_SHAPE
	f	Leig;	e	MID_GROWTH_SHAPE
c	dba	net/minecraft/world/level/block/TallFlowerBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lakq;Lasc;Lgw;Ldfj;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcpv;Lasc;Lgw;Ldfj;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcpy;Lgw;Ldfj;)Z	a	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
c	dbb	net/minecraft/world/level/block/TallGrassBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lakq;Lasc;Lgw;Ldfj;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcpv;Lasc;Lgw;Ldfj;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcpy;Lgw;Ldfj;)Z	a	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	f	F	a	AABB_OFFSET
	f	Leig;	b	SHAPE
c	dbc	net/minecraft/world/level/block/TallSeagrassBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lcbu;Lcpb;Lgw;Ldfj;Leal;)Z	a	canPlaceLiquid
		p	1		player
		p	2		world
		p	3		pos
		p	4		state
		p	5		fluid
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Lcpb;Lgw;Ldfj;)Lcjf;	a	getCloneItemStack
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcpw;Lgw;Ldfj;Leam;)Z	a	placeLiquid
		p	1		world
		p	2		pos
		p	3		state
		p	4		fluidState
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpy;Lgw;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;)Leam;	c_	getFluidState
		p	1		state
	m	(Ldfj;Lcpb;Lgw;)Z	d	mayPlaceOn
		p	1		floor
		p	2		world
		p	3		pos
	f	Ldgh;	b	HALF
	f	F	c	AABB_OFFSET
	f	Leig;	d	SHAPE
c	dbd	net/minecraft/world/level/block/TargetBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lcpv;Ldfj;Lehj;Lccm;)V	a	onProjectileHit
		p	1		world
		p	2		state
		p	3		hit
		p	4		projectile
	m	(Lcpw;Ldfj;ILgw;I)V	a	setOutputPower
		p	0		world
		p	1		state
		p	2		power
		p	3		pos
		p	4		delay
	m	(Lcpw;Ldfj;Lehj;Lbiq;)I	a	updateRedstoneOutput
		p	0		world
		p	1		state
		p	2		hitResult
		p	3		entity
	m	(Ldfj;Lakq;Lgw;Lasc;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lcpb;Lgw;Lha;)I	a	getSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lehj;Lehn;)I	a	getRedstoneStrength
		p	0		hitResult
		p	1		pos
	m	(Ldfj;Lcpv;Lgw;Ldfj;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	m	(Ldfj;)Z	f_	isSignalSource
		p	1		state
	f	Ldgj;	a	OUTPUT_POWER
	f	I	b	ACTIVATION_TICKS_ARROWS
	f	I	c	ACTIVATION_TICKS_OTHER
c	dbe	net/minecraft/world/level/block/TintedGlassBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Ldfj;Lcpb;Lgw;)Z	c	propagatesSkylightDown
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lcpb;Lgw;)I	g	getLightBlock
		p	1		state
		p	2		world
		p	3		pos
c	dbf	net/minecraft/world/level/block/TntBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lbgx;Lcbu;)V	a	lambda$use$0
		p	1		playerx
	m	(Lcpn;)Z	a	dropFromExplosion
		p	1		explosion
	m	(Lcpv;Ldfj;Lehj;Lccm;)V	a	onProjectileHit
		p	1		world
		p	2		state
		p	3		hit
		p	4		projectile
	m	(Lcpv;Lgw;)V	a	explode
		p	0		world
		p	1		pos
	m	(Lcpv;Lgw;Lbjg;)V	a	explode
		p	0		world
		p	1		pos
		p	2		igniter
	m	(Lcpv;Lgw;Lcpn;)V	a	wasExploded
		p	1		world
		p	2		pos
		p	3		explosion
	m	(Lcpv;Lgw;Ldfj;Lcbu;)V	a	playerWillDestroy
		p	1		world
		p	2		pos
		p	3		state
		p	4		player
	m	(Ldfj;Lcpv;Lgw;Lcbu;Lbgx;Lehj;)Lbgy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldfj;Lcpv;Lgw;Lcsv;Lgw;Z)V	a	neighborChanged
		p	1		state
		p	2		world
		p	3		pos
		p	4		sourceBlock
		p	5		sourcePos
		p	6		notify
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldfj;Lcpv;Lgw;Ldfj;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	f	Ldga;	a	UNSTABLE
c	dbg	net/minecraft/world/level/block/TorchBlock
	m	(Ldfi$d;Lit;)V	<init>	<init>
		p	1		settings
		p	2		particle
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpv;Lgw;Lasc;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lcpy;Lgw;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	f	I	g	AABB_STANDING_OFFSET
	f	Leig;	h	AABB
	f	Lit;	i	flameParticle
c	dbh	net/minecraft/world/level/block/TorchflowerCropBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	()Ldgj;	a	getAgeProperty
	m	(Lcpv;)I	a	getBonemealAgeIncrease
		p	1		world
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	()I	b	getMaxAge
	m	(I)Ldfj;	b	getStateForAge
		p	1		age
	m	(Ldfj;Lakq;Lgw;Lasc;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	()Lcpu;	c	getBaseSeedId
	f	I	a	MAX_AGE
	f	Ldgj;	b	AGE
	f	F	e	AABB_OFFSET
	f	[Leig;	f	SHAPE_BY_AGE
	f	I	g	BONEMEAL_INCREASE
c	dbi	net/minecraft/world/level/block/TrapDoorBlock
	m	(Ldfi$d;Ldfy;)V	<init>	<init>
		p	1		settings
		p	2		blockSetType
	m	(Lcbu;Lcpv;Lgw;Z)V	a	playSound
		p	1		player
		p	2		world
		p	3		pos
		p	4		open
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Ldfj;Lcpb;Lgw;Lebc;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpv;Lgw;Lcbu;Lbgx;Lehj;)Lbgy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldfj;Lcpv;Lgw;Lcsv;Lgw;Z)V	a	neighborChanged
		p	1		state
		p	2		world
		p	3		pos
		p	4		sourceBlock
		p	5		sourcePos
		p	6		notify
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldfj;)Leam;	c_	getFluidState
		p	1		state
	f	Ldga;	a	OPEN
	f	Ldgh;	b	HALF
	f	Ldga;	c	POWERED
	f	Ldga;	d	WATERLOGGED
	f	I	e	AABB_THICKNESS
	f	Leig;	f	EAST_OPEN_AABB
	f	Leig;	g	WEST_OPEN_AABB
	f	Leig;	h	SOUTH_OPEN_AABB
	f	Leig;	i	NORTH_OPEN_AABB
	f	Leig;	j	BOTTOM_AABB
	f	Leig;	k	TOP_AABB
	f	Ldfy;	l	type
c	dbi$1	net/minecraft/world/level/block/TrapDoorBlock$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
	f	[I	b	$SwitchMap$net$minecraft$world$level$pathfinder$PathComputationType
c	dbj	net/minecraft/world/level/block/TrappedChestBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Ldfj;Lcpb;Lgw;Lha;)I	a	getSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Lgw;Ldfj;)Ldcv;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	()Lapk;	b	getOpenChestStat
	m	(Ldfj;Lcpb;Lgw;Lha;)I	b	getDirectSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldfj;)Z	f_	isSignalSource
		p	1		state
	m	()Ldcx;	g	lambda$new$0
c	dbk	net/minecraft/world/level/block/TripWireBlock
	m	(Ldbl;Ldfi$d;)V	<init>	<init>
		p	1		hookBlock
		p	2		settings
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Lcpv;Lgw;)V	a	checkPressed
		p	1		world
		p	2		pos
	m	(Lcpv;Lgw;Ldfj;)V	a	updateSource
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcpv;Lgw;Ldfj;Lcbu;)V	a	playerWillDestroy
		p	1		world
		p	2		pos
		p	3		state
		p	4		player
	m	(Ldfj;Lakq;Lgw;Lasc;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpv;Lgw;Lbiq;)V	a	entityInside
		p	1		state
		p	2		world
		p	3		pos
		p	4		entity
	m	(Ldfj;Lcpv;Lgw;Ldfj;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Ldfj;Lcxq;)Ldfj;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldfj;Lczh;)Ldfj;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldfj;Lha;)Z	a	shouldConnectTo
		p	1		state
		p	2		facing
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldfj;Lcpv;Lgw;Ldfj;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	f	Ldga;	a	POWERED
	f	Ldga;	b	ATTACHED
	f	Ldga;	c	DISARMED
	f	Ldga;	d	NORTH
	f	Ldga;	e	EAST
	f	Ldga;	f	SOUTH
	f	Ldga;	g	WEST
	f	Leig;	h	AABB
	f	Leig;	i	NOT_ATTACHED_AABB
	f	Ljava/util/Map;	j	PROPERTY_BY_DIRECTION
	f	I	k	RECHECK_PERIOD
	f	Ldbl;	l	hook
c	dbk$1	net/minecraft/world/level/block/TripWireBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$Rotation
	f	[I	b	$SwitchMap$net$minecraft$world$level$block$Mirror
c	dbl	net/minecraft/world/level/block/TripWireHookBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Lcpv;Lgw;Ldfj;Lbjg;Lcjf;)V	a	setPlacedBy
		p	1		world
		p	2		pos
		p	3		state
		p	4		placer
		p	5		itemStack
	m	(Lcpv;Lgw;Ldfj;ZZILdfj;)V	a	calculateState
		p	1		world
		p	2		pos
		p	3		state
		p	4		beingRemoved
	m	(Lcpv;Lgw;Lha;)V	a	notifyNeighbors
		p	1		world
		p	2		pos
		p	3		direction
	m	(Lcpv;Lgw;ZZZZ)V	a	emitState
		p	1		world
		p	2		pos
		p	3		attached
		p	4		on
		p	5		detached
		p	6		off
	m	(Ldfj;Lakq;Lgw;Lasc;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpb;Lgw;Lha;)I	a	getSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldfj;Lcpv;Lgw;Ldfj;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Ldfj;Lcpy;Lgw;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lcxq;)Ldfj;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldfj;Lczh;)Ldfj;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldfj;Lcpb;Lgw;Lha;)I	b	getDirectSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldfj;)Z	f_	isSignalSource
		p	1		state
	f	Ldgd;	a	FACING
	f	Ldga;	b	POWERED
	f	Ldga;	c	ATTACHED
	f	I	d	WIRE_DIST_MIN
	f	I	e	WIRE_DIST_MAX
	f	I	f	AABB_OFFSET
	f	Leig;	g	NORTH_AABB
	f	Leig;	h	SOUTH_AABB
	f	Leig;	i	WEST_AABB
	f	Leig;	j	EAST_AABB
	f	I	k	RECHECK_PERIOD
c	dbl$1	net/minecraft/world/level/block/TripWireHookBlock$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	dbm	net/minecraft/world/level/block/TurtleEggBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Lcpb;Lgw;)Z	a	onSand
		p	0		world
		p	1		pos
	m	(Lcpv;)Z	a	shouldUpdateHatchLevel
		p	1		world
	m	(Lcpv;Lbiq;)Z	a	canDestroyEgg
		p	1		world
		p	2		entity
	m	(Lcpv;Lcbu;Lgw;Ldfj;Ldcv;Lcjf;)V	a	playerDestroy
		p	1		world
		p	2		player
		p	3		pos
		p	4		state
		p	5		blockEntity
		p	6		tool
	m	(Lcpv;Ldfj;Lgw;Lbiq;F)V	a	fallOn
		p	1		world
		p	2		state
		p	3		pos
		p	4		entity
		p	5		fallDistance
	m	(Lcpv;Ldfj;Lgw;Lbiq;I)V	a	destroyEgg
		p	1		world
		p	2		state
		p	3		pos
		p	4		entity
		p	5		inverseChance
	m	(Lcpv;Lgw;Ldfj;)V	a	decreaseEggs
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcpv;Lgw;Ldfj;Lbiq;)V	a	stepOn
		p	1		world
		p	2		pos
		p	3		state
		p	4		entity
	m	(Ldfj;Lcln;)Z	a	canBeReplaced
		p	1		state
		p	2		context
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lcpb;Lgw;)Z	b	isSand
		p	0		world
		p	1		pos
	m	(Ldfj;Lakq;Lgw;Lasc;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lcpv;Lgw;Ldfj;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	f	I	a	MAX_HATCH_LEVEL
	f	I	b	MIN_EGGS
	f	I	c	MAX_EGGS
	f	Ldgj;	d	HATCH
	f	Ldgj;	e	EGGS
	f	Leig;	f	ONE_EGG_AABB
	f	Leig;	g	MULTIPLE_EGGS_AABB
c	dbn	net/minecraft/world/level/block/TwistingVinesBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	()Lcsv;	a	getBodyBlock
	m	(Lasc;)I	a	getBlocksToGrowWhenBonemealed
		p	1		random
	m	(Ldfj;)Z	g	canGrowInto
		p	1		state
	f	Leig;	f	SHAPE
c	dbo	net/minecraft/world/level/block/TwistingVinesPlantBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	()Lcwi;	b	getHeadBlock
	f	Leig;	d	SHAPE
c	dbp	net/minecraft/world/level/block/VineBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Lcpb;Lgw;)Z	a	canSpread
		p	1		world
		p	2		pos
	m	(Lcpb;Lgw;Lha;)Z	a	isAcceptableNeighbour
		p	0		world
		p	1		pos
		p	2		direction
	m	(Ldfj;Lcln;)Z	a	canBeReplaced
		p	1		state
		p	2		context
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpy;Lgw;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lcxq;)Ldfj;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldfj;Lczh;)Ldfj;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldfj;Ldfj;Lasc;)Ldfj;	a	copyRandomFaces
		p	1		above
		p	2		state
		p	3		random
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lha;)Ldga;	a	getPropertyForFace
		p	0		direction
	m	(Ljava/util/Map$Entry;)Z	a	lambda$static$0
		p	0		entry
	m	(Lcpb;Lgw;Lha;)Z	b	canSupportAtFace
		p	1		world
		p	2		pos
		p	3		side
	m	(Ldfj;Lakq;Lgw;Lasc;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lcpb;Lgw;)Z	c	propagatesSkylightDown
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;)Leig;	h	calculateShape
		p	0		state
	m	(Ldfj;Lcpb;Lgw;)Ldfj;	i	getUpdatedState
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;)Z	n	hasFaces
		p	1		state
	m	(Ldfj;)I	o	countFaces
		p	1		state
	m	(Ldfj;)Z	p	hasHorizontalConnection
		p	1		state
	f	Ldga;	a	UP
	f	Ldga;	b	NORTH
	f	Ldga;	c	EAST
	f	Ldga;	d	SOUTH
	f	Ldga;	e	WEST
	f	Ljava/util/Map;	f	PROPERTY_BY_DIRECTION
	f	F	g	AABB_OFFSET
	f	Leig;	h	UP_AABB
	f	Leig;	i	WEST_AABB
	f	Leig;	j	EAST_AABB
	f	Leig;	k	NORTH_AABB
	f	Leig;	l	SOUTH_AABB
	f	Ljava/util/Map;	m	shapesCache
c	dbp$1	net/minecraft/world/level/block/VineBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$Rotation
	f	[I	b	$SwitchMap$net$minecraft$world$level$block$Mirror
c	dbq	net/minecraft/world/level/block/WallBannerBlock
	m	(Lcht;Ldfi$d;)V	<init>	<init>
		p	1		color
		p	2		settings
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpy;Lgw;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lcxq;)Ldfj;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldfj;Lczh;)Ldfj;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	()Ljava/lang/String;	f	getDescriptionId
	f	Ldgd;	a	FACING
	f	Ljava/util/Map;	b	SHAPES
c	dbr	net/minecraft/world/level/block/WallBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(FFFFFF)Ljava/util/Map;	a	makeShapes
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Lcpy;Ldfj;Lgw;Ldfj;)Ldfj;	a	topUpdate
		p	1		world
		p	2		state
		p	3		pos
		p	4		aboveState
	m	(Lcpy;Ldfj;Lgw;Ldfj;ZZZZ)Ldfj;	a	updateShape
		p	1		world
		p	2		state
		p	3		pos
		p	4		aboveState
		p	5		north
		p	6		east
		p	7		south
		p	8		west
	m	(Lcpy;Lgw;Ldfj;Lgw;Ldfj;Lha;)Ldfj;	a	sideUpdate
		p	1		world
		p	2		pos
		p	3		state
		p	4		neighborPos
		p	5		neighborState
		p	6		direction
	m	(Ldfj;Lcpb;Lgw;Lebc;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcxq;)Ldfj;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldfj;Lczh;)Ldfj;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldfj;Ldfj;Leig;)Z	a	shouldRaisePost
		p	1		state
		p	2		aboveState
		p	3		aboveShape
	m	(Ldfj;Ldgm;)Z	a	isConnected
		p	0		state
		p	1		property
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldfj;ZLha;)Z	a	connectsTo
		p	1		state
		p	2		faceFullSquare
		p	3		side
	m	(Ldfj;ZZZZLeig;)Ldfj;	a	updateSides
		p	1		state
		p	2		north
		p	3		east
		p	4		south
		p	5		west
		p	6		aboveShape
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Leig;Ldgv;Leig;Leig;)Leig;	a	applyWallShape
		p	0		base
		p	1		wallShape
		p	2		tall
		p	3		low
	m	(Leig;Leig;)Z	a	isCovered
		p	0		aboveShape
		p	1		tallShape
	m	(ZLeig;Leig;)Ldgv;	a	makeWallState
		p	1		connected
		p	2		aboveShape
		p	3		tallShape
	m	(Ldfj;Lcpb;Lgw;)Z	c	propagatesSkylightDown
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	c	getCollisionShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;)Leam;	c_	getFluidState
		p	1		state
	f	Leig;	D	POST_TEST
	f	Leig;	E	NORTH_TEST
	f	Leig;	F	SOUTH_TEST
	f	Leig;	G	WEST_TEST
	f	Leig;	H	EAST_TEST
	f	Ldga;	a	UP
	f	Ldgh;	b	EAST_WALL
	f	Ldgh;	c	NORTH_WALL
	f	Ldgh;	d	SOUTH_WALL
	f	Ldgh;	e	WEST_WALL
	f	Ldga;	f	WATERLOGGED
	f	Ljava/util/Map;	g	shapeByIndex
	f	Ljava/util/Map;	h	collisionShapeByIndex
	f	I	i	WALL_WIDTH
	f	I	j	WALL_HEIGHT
	f	I	k	POST_WIDTH
	f	I	l	POST_COVER_WIDTH
	f	I	m	WALL_COVER_START
	f	I	n	WALL_COVER_END
c	dbr$1	net/minecraft/world/level/block/WallBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$Rotation
	f	[I	b	$SwitchMap$net$minecraft$world$level$block$Mirror
c	dbs	net/minecraft/world/level/block/WallHangingSignBlock
	m	(Ldfi$d;Ldgw;)V	<init>	<init>
		p	1		settings
		p	2		type
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Lcpv;Ldfj;Ldcx;)Ldcw;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Lcpy;Ldfj;Lgw;Lha;)Z	a	canAttachTo
		p	1		world
		p	2		state
		p	3		toPos
		p	4		direction
	m	(Ldfj;Lcbu;Lehj;Lded;Lcjf;)Z	a	shouldTryToChainAnotherHangingSign
		p	1		state
		p	2		player
		p	3		hitResult
		p	4		sign
		p	5		stack
	m	(Ldfj;Lcpb;Lgw;Lebc;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpv;Lgw;Lcbu;Lbgx;Lehj;)Lbgy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldfj;Lcxq;)Ldfj;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldfj;Lczh;)Ldfj;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lehj;Ldfj;)Z	a	isHittingEditableSide
		p	1		hitResult
		p	2		state
	m	(Lgw;Ldfj;)Ldcv;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Ldfj;Lcpy;Lgw;)Z	b	canPlace
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lcpb;Lgw;)Leig;	b_	getBlockSupportShape
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	c	getCollisionShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	()Ljava/lang/String;	f	getDescriptionId
	m	(Ldfj;)F	g	getYRotationDegrees
		p	1		state
	f	Ldgd;	a	FACING
	f	Leig;	b	PLANK_NORTHSOUTH
	f	Leig;	c	PLANK_EASTWEST
	f	Leig;	d	SHAPE_NORTHSOUTH
	f	Leig;	h	SHAPE_EASTWEST
	f	Ljava/util/Map;	i	AABBS
c	dbs$1	net/minecraft/world/level/block/WallHangingSignBlock$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	dbt	net/minecraft/world/level/block/WallSignBlock
	m	(Ldfi$d;Ldgw;)V	<init>	<init>
		p	1		settings
		p	2		type
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpy;Lgw;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lcxq;)Ldfj;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldfj;Lczh;)Ldfj;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	()Ljava/lang/String;	f	getDescriptionId
	m	(Ldfj;)F	g	getYRotationDegrees
		p	1		state
	m	(Ldfj;)Lehn;	h	getSignHitboxCenterPosition
		p	1		state
	f	Ldgd;	a	FACING
	f	F	b	AABB_THICKNESS
	f	F	c	AABB_BOTTOM
	f	F	d	AABB_TOP
	f	Ljava/util/Map;	h	AABBS
c	dbu	net/minecraft/world/level/block/WallSkullBlock
	m	(Lczx$a;Ldfi$d;)V	<init>	<init>
		p	1		type
		p	2		settings
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcxq;)Ldfj;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldfj;Lczh;)Ldfj;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	()Ljava/lang/String;	f	getDescriptionId
	f	Ldgd;	b	FACING
	f	Ljava/util/Map;	c	AABBS
c	dbv	net/minecraft/world/level/block/WallTorchBlock
	m	(Ldfi$d;Lit;)V	<init>	<init>
		p	1		settings
		p	2		particle
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpv;Lgw;Lasc;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lcpy;Lgw;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lcxq;)Ldfj;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldfj;Lczh;)Ldfj;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	()Ljava/lang/String;	f	getDescriptionId
	m	(Ldfj;)Leig;	h	getShape
		p	0		state
	f	Ldgd;	a	FACING
	f	F	b	AABB_OFFSET
	f	Ljava/util/Map;	c	AABBS
c	dbw	net/minecraft/world/level/block/WaterlilyBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpv;Lgw;Lbiq;)V	a	entityInside
		p	1		state
		p	2		world
		p	3		pos
		p	4		entity
	m	(Ldfj;Lcpb;Lgw;)Z	d	mayPlaceOn
		p	1		floor
		p	2		world
		p	3		pos
	f	Leig;	a	AABB
c	dbx	net/minecraft/world/level/block/WeatheringCopper
	m	()F	a	getChanceModifier
	m	(Lcsv;)Ljava/util/Optional;	a	getPrevious
		p	0		block
	m	(Ldfj;Lcsv;)Ldfj;	a	lambda$getNext$3
		p	1		block
	m	(Lcsv;)Lcsv;	b	getFirst
		p	0		block
	m	(Ldfj;)Ljava/util/Optional;	b	getPrevious
		p	0		state
	m	(Ldfj;Lcsv;)Ldfj;	b	lambda$getPrevious$2
		p	1		block
	m	()Lcom/google/common/collect/BiMap;	c	lambda$static$1
	m	(Lcsv;)Ljava/util/Optional;	c	getNext
		p	0		block
	m	(Ldfj;)Ldfj;	c	getFirst
		p	0		state
	m	()Lcom/google/common/collect/BiMap;	d	lambda$static$0
	m	(Ldfj;)Ljava/util/Optional;	i_	getNext
		p	1		state
	f	Ljava/util/function/Supplier;	u_	NEXT_BY_BLOCK
	f	Ljava/util/function/Supplier;	v_	PREVIOUS_BY_BLOCK
c	dbx$a	net/minecraft/world/level/block/WeatheringCopper$WeatherState
	m	()[Ldbx$a;	a	$values
	f	Ldbx$a;	a	UNAFFECTED
	f	Ldbx$a;	b	EXPOSED
	f	Ldbx$a;	c	WEATHERED
	f	Ldbx$a;	d	OXIDIZED
	f	[Ldbx$a;	e	$VALUES
c	dby	net/minecraft/world/level/block/WeatheringCopperFullBlock
	m	(Ldbx$a;Ldfi$d;)V	<init>	<init>
		p	1		oxidationLevel
		p	2		settings
	m	()Ljava/lang/Enum;	b	getAge
	m	(Ldfj;Lakq;Lgw;Lasc;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;)Z	e_	isRandomlyTicking
		p	1		state
	m	()Ldbx$a;	g	getAge
	f	Ldbx$a;	d	weatherState
c	dbz	net/minecraft/world/level/block/WeatheringCopperSlabBlock
	m	(Ldbx$a;Ldfi$d;)V	<init>	<init>
		p	1		oxidationLevel
		p	2		settings
	m	()Ljava/lang/Enum;	b	getAge
	m	(Ldfj;Lakq;Lgw;Lasc;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;)Z	e_	isRandomlyTicking
		p	1		state
	m	()Ldbx$a;	g	getAge
	f	Ldbx$a;	e	weatherState
c	dca	net/minecraft/world/level/block/WeatheringCopperStairBlock
	m	(Ldbx$a;Ldfj;Ldfi$d;)V	<init>	<init>
		p	1		oxidationLevel
		p	2		baseBlockState
		p	3		settings
	m	()Ljava/lang/Enum;	b	getAge
	m	(Ldfj;Lakq;Lgw;Lasc;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;)Z	e_	isRandomlyTicking
		p	1		state
	m	()Ldbx$a;	g	getAge
	f	Ldbx$a;	F	weatherState
c	dcb	net/minecraft/world/level/block/WebBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Ldfj;Lcpv;Lgw;Lbiq;)V	a	entityInside
		p	1		state
		p	2		world
		p	3		pos
		p	4		entity
c	dcc	net/minecraft/world/level/block/WeepingVinesBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	()Lcsv;	a	getBodyBlock
	m	(Lasc;)I	a	getBlocksToGrowWhenBonemealed
		p	1		random
	m	(Ldfj;)Z	g	canGrowInto
		p	1		state
	f	Leig;	f	SHAPE
c	dcd	net/minecraft/world/level/block/WeepingVinesPlantBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	()Lcwi;	b	getHeadBlock
	f	Leig;	d	SHAPE
c	dce	net/minecraft/world/level/block/WeightedPressurePlateBlock
	m	(ILdfi$d;Ldfy;)V	<init>	<init>
		p	1		weight
		p	2		settings
		p	3		blockSetType
	m	()I	a	getPressedTime
	m	(Ldfj;I)Ldfj;	a	setSignalForState
		p	1		state
		p	2		rsOut
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lcpv;Lgw;)I	b	getSignalStrength
		p	1		world
		p	2		pos
	m	(Ldfj;)I	g	getSignalForState
		p	1		state
	f	Ldgj;	d	POWER
	f	I	e	maxWeight
c	dcf	net/minecraft/world/level/block/WetSpongeBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Ldfj;Lcpv;Lgw;Lasc;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lcpv;Lgw;Ldfj;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
c	dcg	net/minecraft/world/level/block/WitherRoseBlock
	m	(Lbib;Ldfi$d;)V	<init>	<init>
		p	1		effect
		p	2		settings
	m	(Ldfj;Lcpv;Lgw;Lasc;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lcpv;Lgw;Lbiq;)V	a	entityInside
		p	1		state
		p	2		world
		p	3		pos
		p	4		entity
	m	(Ldfj;Lcpb;Lgw;)Z	d	mayPlaceOn
		p	1		floor
		p	2		world
		p	3		pos
c	dch	net/minecraft/world/level/block/WitherSkullBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lcpv;Lgw;Ldef;)V	a	checkSpawn
		p	0		world
		p	1		pos
		p	2		blockEntity
	m	(Lcpv;Lgw;Ldfj;Lbjg;Lcjf;)V	a	setPlacedBy
		p	1		world
		p	2		pos
		p	3		state
		p	4		placer
		p	5		itemStack
	m	(Ldfn;)Z	a	lambda$getOrCreateWitherBase$3
		p	0		pos
	m	(Lcpv;Lgw;Lcjf;)Z	b	canSpawnMob
		p	0		world
		p	1		pos
		p	2		stack
	m	(Ldfn;)Z	b	lambda$getOrCreateWitherBase$2
		p	0		pos
	m	(Ldfn;)Z	c	lambda$getOrCreateWitherFull$1
		p	0		pos
	m	(Ldfn;)Z	d	lambda$getOrCreateWitherFull$0
		p	0		pos
	m	()Ldfo;	u	getOrCreateWitherFull
	m	()Ldfo;	v	getOrCreateWitherBase
	f	Ldfo;	f	witherPatternFull
	f	Ldfo;	g	witherPatternBase
c	dci	net/minecraft/world/level/block/WitherWallSkullBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lcpv;Lgw;Ldfj;Lbjg;Lcjf;)V	a	setPlacedBy
		p	1		world
		p	2		pos
		p	3		state
		p	4		placer
		p	5		itemStack
c	dcj	net/minecraft/world/level/block/WoolCarpetBlock
	m	(Lcht;Ldfi$d;)V	<init>	<init>
		p	1		dyeColor
		p	2		settings
	m	()Lcht;	a	getColor
	f	Lcht;	b	color
c	dck	net/minecraft/world/level/block/entity/AbstractFurnaceBlockEntity
	m	(Ldcx;Lgw;Ldfj;Lcmn;)V	<init>	<init>
		p	1		blockEntityType
		p	2		pos
		p	3		state
		p	4		recipeType
	m	()V	a	clearContent
	m	(I)Lcjf;	a	getItem
		p	1		slot
	m	(II)Lcjf;	a	removeItem
		p	1		slot
		p	2		amount
	m	(ILcjf;)V	a	setItem
		p	1		slot
		p	2		stack
	m	(ILcjf;Lha;)Z	a	canPlaceItemThroughFace
		p	1		slot
		p	2		stack
		p	3		dir
	m	(Lakq;Lehn;)Ljava/util/List;	a	getRecipesToAwardAndPopExperience
		p	1		world
		p	2		pos
	m	(Lakq;Lehn;IF)V	a	createExperience
		p	0		world
		p	1		pos
		p	2		multiplier
		p	3		experience
	m	(Lakr;)V	a	awardUsedRecipesAndPopExperience
		p	1		player
	m	(Lcbu;)Z	a	stillValid
		p	1		player
	m	(Lcbu;Ljava/util/List;)V	a	awardUsedRecipes
		p	1		player
		p	2		ingredients
	m	(Lcby;)V	a	fillStackedContents
		p	1		finder
	m	(Lcjf;)I	a	getBurnDuration
		p	1		fuel
	m	(Lcmk;)V	a	setRecipeUsed
		p	1		recipe
	m	(Lcpv;Ldck;)I	a	getTotalCookTime
		p	0		world
		p	1		furnace
	m	(Lcpv;Lgw;Ldfj;Ldck;)V	a	serverTick
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Lha;)[I	a	getSlotsForFace
		p	1		side
	m	(Lhr;Lcmk;Lhn;I)Z	a	canBurn
		p	0		registryManager
		p	1		recipe
		p	2		slots
		p	3		count
	m	(Ljava/util/List;Lakq;Lehn;Lit/unimi/dsi/fastutil/objects/Object2IntMap$Entry;Lcmk;)V	a	lambda$getRecipesToAwardAndPopExperience$2
		p	4		recipe
	m	(Ljava/util/Map;Laqh;I)V	a	add
		p	0		fuelTimes
		p	1		tag
		p	2		fuelTime
	m	(Ljava/util/Map;Lcpu;I)V	a	add
		p	0		fuelTimes
		p	1		item
		p	2		fuelTime
	m	(Lqw;)V	a	load
		p	1		nbt
	m	(Lqw;Laew;Ljava/lang/Integer;)V	a	lambda$saveAdditional$0
		p	1		identifier
		p	2		count
	m	()Z	af_	isEmpty
	m	()I	b	getContainerSize
	m	(I)Lcjf;	b	removeItemNoUpdate
		p	1		slot
	m	(ILcjf;)Z	b	canPlaceItem
		p	1		slot
		p	2		stack
	m	(ILcjf;Lha;)Z	b	canTakeItemThroughFace
		p	1		slot
		p	2		stack
		p	3		dir
	m	(Lcja;)Z	b	isNeverAFurnaceFuel
		p	0		item
	m	(Lcjf;)Z	b	isFuel
		p	0		stack
	m	(Lcmk;)Ljava/lang/Integer;	b	lambda$getTotalCookTime$1
		p	0		recipe
	m	(Lhr;Lcmk;Lhn;I)Z	b	burn
		p	0		registryManager
		p	1		recipe
		p	2		slots
		p	3		count
	m	(Lqw;)V	b	saveAdditional
		p	1		nbt
	m	()Lcmk;	d	getRecipeUsed
	m	()Ljava/util/Map;	f	getFuel
	m	()Z	i	isLit
	f	I	c	SLOT_INPUT
	f	I	d	SLOT_FUEL
	f	I	e	SLOT_RESULT
	f	I	f	DATA_LIT_TIME
	f	I	g	DATA_LIT_DURATION
	f	I	h	DATA_COOKING_PROGRESS
	f	I	i	DATA_COOKING_TOTAL_TIME
	f	I	j	NUM_DATA_VALUES
	f	I	k	BURN_TIME_STANDARD
	f	I	l	BURN_COOL_SPEED
	f	Lhn;	m	items
	f	Lcev;	n	dataAccess
	f	[I	r	SLOTS_FOR_UP
	f	[I	s	SLOTS_FOR_DOWN
	f	[I	t	SLOTS_FOR_SIDES
	f	I	u	litTime
	f	I	v	litDuration
	f	I	w	cookingProgress
	f	I	x	cookingTotalTime
	f	Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;	y	recipesUsed
	f	Lcml$a;	z	quickCheck
c	dck$1	net/minecraft/world/level/block/entity/AbstractFurnaceBlockEntity$1
	m	()I	a	getCount
	m	(I)I	a	get
		p	1		index
	m	(II)V	a	set
		p	1		index
		p	2		value
	f	Ldck;	a	this$0
c	dcl	net/minecraft/world/level/block/entity/BannerBlockEntity
	m	(Lgw;Ldfj;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(Lgw;Ldfj;Lcht;)V	<init>	<init>
		p	1		pos
		p	2		state
		p	3		baseColor
	m	()Lxd;	a	getUpdatePacket
	m	(Lcht;Lrc;)Ljava/util/List;	a	createPatterns
		p	0		baseColor
		p	1		patternListNbt
	m	(Lcjf;)Lrc;	a	getItemPatterns
		p	0		stack
	m	(Lcjf;Lcht;)V	a	fromItem
		p	1		stack
		p	2		baseColor
	m	(Lqw;)V	a	load
		p	1		nbt
	m	(Ltl;)V	a	setCustomName
		p	1		customName
	m	()Ltl;	ab	getName
	m	()Ltl;	ad	getCustomName
	m	()Lqw;	as_	getUpdateTag
	m	(Lcjf;)V	b	fromItem
		p	1		stack
	m	(Lqw;)V	b	saveAdditional
		p	1		nbt
	m	()Ljava/util/List;	c	getPatterns
	m	(Lcjf;)I	c	getPatternCount
		p	0		stack
	m	(Lcjf;)V	d	removeLastPattern
		p	0		stack
	m	()Lcjf;	f	getItem
	m	()Lcht;	g	getBaseColor
	m	()Lvd;	h	getUpdatePacket
	f	I	a	MAX_PATTERNS
	f	Ljava/lang/String;	b	TAG_PATTERNS
	f	Ljava/lang/String;	c	TAG_PATTERN
	f	Ljava/lang/String;	d	TAG_COLOR
	f	Ltl;	e	name
	f	Lcht;	f	baseColor
	f	Lrc;	g	itemPatterns
	f	Ljava/util/List;	h	patterns
c	dcm	net/minecraft/world/level/block/entity/BannerPattern
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		id
	m	()Ljava/lang/String;	a	getHashname
	m	(Laev;Z)Laew;	a	location
		p	0		pattern
		p	1		banner
	m	(Ljava/lang/String;)Lhe;	a	byHash
		p	0		id
	m	(Ljava/lang/String;Lhe$c;)Z	a	lambda$byHash$0
		p	1		pattern
	f	Ljava/lang/String;	a	hashname
c	dcm$a	net/minecraft/world/level/block/entity/BannerPattern$Builder
	m	()Lrc;	a	toListTag
	m	(Laev;Lcht;)Ldcm$a;	a	addPattern
		p	1		pattern
		p	2		color
	m	(Lcom/mojang/datafixers/util/Pair;)Ldcm$a;	a	addPattern
		p	1		pattern
	m	(Lhe;Lcht;)Ldcm$a;	a	addPattern
		p	1		pattern
		p	2		color
	f	Ljava/util/List;	a	patterns
c	dcn	net/minecraft/world/level/block/entity/BannerPatterns
	m	(Lhq;)Ldcm;	a	bootstrap
		p	0		registry
	m	(Ljava/lang/String;)Laev;	a	create
		p	0		id
	f	Laev;	A	HALF_VERTICAL
	f	Laev;	B	HALF_HORIZONTAL
	f	Laev;	C	HALF_VERTICAL_MIRROR
	f	Laev;	D	HALF_HORIZONTAL_MIRROR
	f	Laev;	E	BORDER
	f	Laev;	F	CURLY_BORDER
	f	Laev;	G	GRADIENT
	f	Laev;	H	GRADIENT_UP
	f	Laev;	I	BRICKS
	f	Laev;	J	GLOBE
	f	Laev;	K	CREEPER
	f	Laev;	L	SKULL
	f	Laev;	M	FLOWER
	f	Laev;	N	MOJANG
	f	Laev;	O	PIGLIN
	f	Laev;	a	BASE
	f	Laev;	b	SQUARE_BOTTOM_LEFT
	f	Laev;	c	SQUARE_BOTTOM_RIGHT
	f	Laev;	d	SQUARE_TOP_LEFT
	f	Laev;	e	SQUARE_TOP_RIGHT
	f	Laev;	f	STRIPE_BOTTOM
	f	Laev;	g	STRIPE_TOP
	f	Laev;	h	STRIPE_LEFT
	f	Laev;	i	STRIPE_RIGHT
	f	Laev;	j	STRIPE_CENTER
	f	Laev;	k	STRIPE_MIDDLE
	f	Laev;	l	STRIPE_DOWNRIGHT
	f	Laev;	m	STRIPE_DOWNLEFT
	f	Laev;	n	STRIPE_SMALL
	f	Laev;	o	CROSS
	f	Laev;	p	STRAIGHT_CROSS
	f	Laev;	q	TRIANGLE_BOTTOM
	f	Laev;	r	TRIANGLE_TOP
	f	Laev;	s	TRIANGLES_BOTTOM
	f	Laev;	t	TRIANGLES_TOP
	f	Laev;	u	DIAGONAL_LEFT
	f	Laev;	v	DIAGONAL_RIGHT
	f	Laev;	w	DIAGONAL_LEFT_MIRROR
	f	Laev;	x	DIAGONAL_RIGHT_MIRROR
	f	Laev;	y	CIRCLE_MIDDLE
	f	Laev;	z	RHOMBUS_MIDDLE
c	dco	net/minecraft/world/level/block/entity/BarrelBlockEntity
	m	(Lgw;Ldfj;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(ILcbt;)Lcel;	a	createMenu
		p	1		syncId
		p	2		playerInventory
	m	(Ldfj;Lapc;)V	a	playSound
		p	1		state
		p	2		soundEvent
	m	(Ldfj;Z)V	a	updateBlockState
		p	1		state
		p	2		open
	m	(Lhn;)V	a	setItems
		p	1		list
	m	(Lqw;)V	a	load
		p	1		nbt
	m	()I	b	getContainerSize
	m	(Lqw;)V	b	saveAdditional
		p	1		nbt
	m	(Lcbu;)V	c	stopOpen
		p	1		player
	m	(Lcbu;)V	d_	startOpen
		p	1		player
	m	()Lhn;	f	getItems
	m	()Ltl;	g	getDefaultName
	m	()V	i	recheckOpen
	f	Lhn;	c	items
	f	Lddi;	f	openersCounter
c	dco$1	net/minecraft/world/level/block/entity/BarrelBlockEntity$1
	m	(Lcbu;)Z	a	isOwnContainer
		p	1		player
	m	(Lcpv;Lgw;Ldfj;)V	a	onOpen
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcpv;Lgw;Ldfj;II)V	a	openerCountChanged
		p	1		world
		p	2		pos
		p	3		state
		p	4		oldViewerCount
		p	5		newViewerCount
	m	(Lcpv;Lgw;Ldfj;)V	b	onClose
		p	1		world
		p	2		pos
		p	3		state
	f	Ldco;	a	this$0
c	dcp	net/minecraft/world/level/block/entity/BaseContainerBlockEntity
	m	(Ldcx;Lgw;Ldfj;)V	<init>	<init>
		p	1		type
		p	2		pos
		p	3		state
	m	()Ltl;	N_	getDisplayName
	m	(ILcbt;)Lcel;	a	createMenu
		p	1		syncId
		p	2		playerInventory
	m	(Lcbu;Lbha;Ltl;)Z	a	canUnlock
		p	0		player
		p	1		lock
		p	2		containerName
	m	(Lqw;)V	a	load
		p	1		nbt
	m	(Ltl;)V	a	setCustomName
		p	1		customName
	m	()Ltl;	ab	getName
	m	()Ltl;	ad	getCustomName
	m	(Lqw;)V	b	saveAdditional
		p	1		nbt
	m	(ILcbt;Lcbu;)Lcel;	createMenu	createMenu
		p	1		syncId
		p	2		playerInventory
		p	3		player
	m	(Lcbu;)Z	d	canOpen
		p	1		player
	m	()Ltl;	g	getDefaultName
	f	Lbha;	c	lockKey
	f	Ltl;	d	name
c	dcq	net/minecraft/world/level/block/entity/BeaconBlockEntity
	m	(Lgw;Ldfj;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	()Ltl;	N_	getDisplayName
	m	(Lbib;)Lbib;	a	filterEffect
		p	0		effect
	m	(Lcpv;)V	a	setLevel
		p	1		world
	m	(Lcpv;III)I	a	updateBase
		p	0		world
		p	1		x
		p	2		y
		p	3		z
	m	(Lcpv;Lgw;ILbib;Lbib;)V	a	applyEffects
		p	0		world
		p	1		pos
		p	2		beaconLevel
		p	3		primaryEffect
		p	4		secondaryEffect
	m	(Lcpv;Lgw;Lapc;)V	a	playSound
		p	0		world
		p	1		pos
		p	2		sound
	m	(Lcpv;Lgw;Ldfj;Ldcq;)V	a	tick
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Lqw;)V	a	load
		p	1		nbt
	m	(Lqw;Ljava/lang/String;)Lbib;	a	loadEffect
		p	0		nbt
		p	1		key
	m	(Lqw;Ljava/lang/String;Lbib;)V	a	storeEffect
		p	0		nbt
		p	1		key
		p	2		effect
	m	(Ltl;)V	a	setCustomName
		p	1		customName
	m	()Ltl;	ab	getName
	m	()Ltl;	ad	getCustomName
	m	()Lqw;	as_	getUpdateTag
	m	()V	at_	setRemoved
	m	(Lqw;)V	b	saveAdditional
		p	1		nbt
	m	()Ljava/util/List;	c	getBeamSections
	m	(ILcbt;Lcbu;)Lcel;	createMenu	createMenu
		p	1		syncId
		p	2		playerInventory
		p	3		player
	m	()Lxd;	f	getUpdatePacket
	m	()Lvd;	h	getUpdatePacket
	f	[[Lbib;	a	BEACON_EFFECTS
	f	I	b	DATA_LEVELS
	f	I	c	DATA_PRIMARY
	f	I	d	DATA_SECONDARY
	f	I	e	NUM_DATA_VALUES
	f	I	f	MAX_LEVELS
	f	Ljava/util/Set;	g	VALID_EFFECTS
	f	I	h	BLOCKS_CHECK_PER_TICK
	f	Ltl;	i	DEFAULT_NAME
	f	Ljava/lang/String;	j	TAG_PRIMARY
	f	Ljava/lang/String;	k	TAG_SECONDARY
	f	Ljava/util/List;	l	beamSections
	f	Ljava/util/List;	m	checkingBeamSections
	f	I	n	levels
	f	I	r	lastCheckY
	f	Lbib;	s	primaryPower
	f	Lbib;	t	secondaryPower
	f	Ltl;	u	name
	f	Lbha;	v	lockKey
	f	Lcev;	w	dataAccess
c	dcq$1	net/minecraft/world/level/block/entity/BeaconBlockEntity$1
	m	()I	a	getCount
	m	(I)I	a	get
		p	1		index
	m	(II)V	a	set
		p	1		index
		p	2		value
	f	Ldcq;	a	this$0
c	dcq$a	net/minecraft/world/level/block/entity/BeaconBlockEntity$BeaconBeamSection
	m	([F)V	<init>	<init>
		p	1		color
	m	()V	a	increaseHeight
	m	()[F	b	getColor
	m	()I	c	getHeight
	f	[F	a	color
	f	I	b	height
c	dcr	net/minecraft/world/level/block/entity/BedBlockEntity
	m	(Lgw;Ldfj;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(Lgw;Ldfj;Lcht;)V	<init>	<init>
		p	1		pos
		p	2		state
		p	3		color
	m	(Lcht;)V	a	setColor
		p	1		color
	m	()Lxd;	c	getUpdatePacket
	m	()Lcht;	d	getColor
	m	()Lvd;	h	getUpdatePacket
	f	Lcht;	a	color
c	dcs	net/minecraft/world/level/block/entity/BeehiveBlockEntity
	m	(Lgw;Ldfj;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(ILbus;)V	a	setBeeReleaseData
		p	0		ticks
		p	1		bee
	m	(Lbiq;)Lbiq;	a	lambda$releaseOccupant$1
	m	(Lbiq;Z)V	a	addOccupant
		p	1		entity
		p	2		hasNectar
	m	(Lbiq;ZI)V	a	addOccupantWithPresetTicks
		p	1		entity
		p	2		hasNectar
		p	3		ticksInHive
	m	(Lcbu;Ldfj;Ldcs$b;)V	a	emptyAllLivingFromHive
		p	1		player
		p	2		state
		p	3		beeState
	m	(Lcpv;Lgw;Ldfj;Ldcs$a;Ljava/util/List;Ldcs$b;Lgw;)Z	a	releaseOccupant
		p	0		world
		p	1		pos
		p	2		state
		p	3		bee
		p	4		entities
		p	5		beeState
		p	6		flowerPos
	m	(Lcpv;Lgw;Ldfj;Ldcs;)V	a	serverTick
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Lcpv;Lgw;Ldfj;Ljava/util/List;Lgw;)V	a	tickOccupants
		p	0		world
		p	1		pos
		p	2		state
		p	3		bees
		p	4		flowerPos
	m	(Ldfi$a;)Z	a	lambda$releaseOccupant$2
		p	0		statex
	m	(Ldfj;)I	a	getHoneyLevel
		p	0		state
	m	(Ldfj;Ldcs$b;)Ljava/util/List;	a	releaseAllOccupants
		p	1		state
		p	2		beeState
	m	(Ldfj;Ljava/util/List;Ldcs$b;Ldcs$a;)Z	a	lambda$releaseAllOccupants$0
		p	4		bee
	m	(Lqw;)V	a	load
		p	1		nbt
	m	(Lqw;IZ)V	a	storeBee
		p	1		nbtCompound
		p	2		ticksInHive
		p	3		hasNectar
	m	(Lqw;)V	b	saveAdditional
		p	1		nbt
	m	()Z	c	isFireNearby
	m	()Z	d	isEmpty
	m	(Lqw;)V	d	removeIgnoredBeeTags
		p	0		compound
	m	()V	e	setChanged
	m	()Z	f	isFull
	m	()I	g	getOccupantCount
	m	()Z	i	isSedated
	m	()Lrc;	j	writeBees
	m	()Z	v	hasSavedFlowerPos
	f	Ljava/lang/String;	a	TAG_FLOWER_POS
	f	Ljava/lang/String;	b	MIN_OCCUPATION_TICKS
	f	Ljava/lang/String;	c	ENTITY_DATA
	f	Ljava/lang/String;	d	TICKS_IN_HIVE
	f	Ljava/lang/String;	e	HAS_NECTAR
	f	Ljava/lang/String;	f	BEES
	f	I	g	MAX_OCCUPANTS
	f	I	h	MIN_OCCUPATION_TICKS_NECTARLESS
	f	Ljava/util/List;	i	IGNORED_BEE_TAGS
	f	I	j	MIN_TICKS_BEFORE_REENTERING_HIVE
	f	I	k	MIN_OCCUPATION_TICKS_NECTAR
	f	Ljava/util/List;	l	stored
	f	Lgw;	m	savedFlowerPos
c	dcs$a	net/minecraft/world/level/block/entity/BeehiveBlockEntity$BeeData
	m	(Lqw;II)V	<init>	<init>
		p	1		entityData
		p	2		ticksInHive
		p	3		minOccupationTicks
	f	Lqw;	a	entityData
	f	I	b	ticksInHive
	f	I	c	minOccupationTicks
c	dcs$b	net/minecraft/world/level/block/entity/BeehiveBlockEntity$BeeReleaseStatus
	m	()[Ldcs$b;	a	$values
	f	Ldcs$b;	a	HONEY_DELIVERED
	f	Ldcs$b;	b	BEE_RELEASED
	f	Ldcs$b;	c	EMERGENCY
	f	[Ldcs$b;	d	$VALUES
c	dct	net/minecraft/world/level/block/entity/BellBlockEntity
	m	(Lgw;Ldfj;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(Lbjg;)V	a	glow
		p	0		entity
	m	(Lcpv;Lgw;Ldfj;Ldct;)V	a	clientTick
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Lcpv;Lgw;Ldfj;Ldct;Ldct$a;)V	a	tick
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
		p	4		bellEffect
	m	(Lcpv;Lgw;Ljava/util/List;)V	a	makeRaidersGlow
		p	0		world
		p	1		pos
		p	2		hearingEntities
	m	(Lgw;ILorg/apache/commons/lang3/mutable/MutableInt;Lcpv;Lbjg;)V	a	lambda$showBellParticles$3
		p	4		entity
	m	(Lgw;Lbjg;)Z	a	isRaiderWithinRange
		p	0		pos
		p	1		entity
	m	(Lgw;Ljava/util/List;)Z	a	areRaidersNearby
		p	0		pos
		p	1		hearingEntities
	m	(Lha;)V	a	onHit
		p	1		direction
	m	(II)Z	a_	triggerEvent
		p	1		type
		p	2		data
	m	(Lcpv;Lgw;Ldfj;Ldct;)V	b	serverTick
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Lcpv;Lgw;Ljava/util/List;)V	b	showBellParticles
		p	0		world
		p	1		pos
		p	2		hearingEntities
	m	(Lgw;Lbjg;)Z	b	lambda$showBellParticles$2
		p	1		entity
	m	()V	c	updateEntities
	m	(Lgw;Lbjg;)Z	c	lambda$showBellParticles$1
		p	1		entity
	m	(Lgw;Lbjg;)Z	d	lambda$makeRaidersGlow$0
		p	1		entity
	f	I	a	ticks
	f	Z	b	shaking
	f	Lha;	c	clickDirection
	f	I	d	DURATION
	f	I	e	GLOW_DURATION
	f	I	f	MIN_TICKS_BETWEEN_SEARCHES
	f	I	g	MAX_RESONATION_TICKS
	f	I	h	TICKS_BEFORE_RESONATION
	f	I	i	SEARCH_RADIUS
	f	I	j	HEAR_BELL_RADIUS
	f	I	k	HIGHLIGHT_RAIDERS_RADIUS
	f	J	l	lastRingTimestamp
	f	Ljava/util/List;	m	nearbyEntities
	f	Z	n	resonating
	f	I	r	resonationTicks
c	dct$a	net/minecraft/world/level/block/entity/BellBlockEntity$ResonationEndAction
	m	(Lcpv;Lgw;Ljava/util/List;)V	run	run
		p	1		world
		p	2		pos
		p	3		hearingEntities
c	dcu	net/minecraft/world/level/block/entity/BlastFurnaceBlockEntity
	m	(Lgw;Ldfj;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(ILcbt;)Lcel;	a	createMenu
		p	1		syncId
		p	2		playerInventory
	m	(Lcjf;)I	a	getBurnDuration
		p	1		fuel
	m	()Ltl;	g	getDefaultName
c	dcv	net/minecraft/world/level/block/entity/BlockEntity
	m	(Ldcx;Lgw;Ldfj;)V	<init>	<init>
		p	1		type
		p	2		pos
		p	3		state
	m	(Lcpv;)V	a	setLevel
		p	1		world
	m	(Lcpv;Lgw;Ldfj;)V	a	setChanged
		p	0		world
		p	1		pos
		p	2		state
	m	(Lgw;Ldfj;Ljava/lang/String;Ldcx;)Ldcv;	a	lambda$loadStatic$0
		p	3		type
	m	(Lgw;Ldfj;Lqw;)Ldcv;	a	loadStatic
		p	0		pos
		p	1		state
		p	2		nbt
	m	(Ljava/lang/String;)Ldcv;	a	lambda$loadStatic$2
	m	(Lp;)V	a	fillCrashReportCategory
		p	1		crashReportSection
	m	(Lqw;)V	a	load
		p	1		nbt
	m	(Lqw;Ldcx;)V	a	addEntityType
		p	0		nbt
		p	1		type
	m	(Lqw;Ljava/lang/String;Ldcv;)Ldcv;	a	lambda$loadStatic$1
		p	2		blockEntity
	m	(II)Z	a_	triggerEvent
		p	1		type
		p	2		data
	m	()Lqw;	as_	getUpdateTag
	m	()V	at_	setRemoved
	m	(Ldfj;)V	b	setBlockState
		p	1		state
	m	(Lqw;)V	b	saveAdditional
		p	1		nbt
	m	(Lqw;)Lgw;	c	getPosFromTag
		p	0		nbt
	m	(Lqw;)V	d	saveId
		p	1		nbt
	m	()V	e	setChanged
	m	(Lcjf;)V	e	saveToItem
		p	1		stack
	m	(Lqw;)V	e	saveMetadata
		p	1		nbt
	m	()Ljava/lang/String;	f	lambda$fillCrashReportCategory$3
	m	()Lvd;	h	getUpdatePacket
	m	()Lcpv;	k	getLevel
	m	()Z	l	hasLevel
	m	()Lqw;	m	saveWithFullMetadata
	m	()Lqw;	n	saveWithId
	m	()Lqw;	o	saveWithoutMetadata
	m	()Lgw;	p	getBlockPos
	m	()Ldfj;	q	getBlockState
	m	()Z	r	isRemoved
	m	()V	s	clearRemoved
	m	()Z	t	onlyOpCanSetNbt
	m	()Ldcx;	u	getType
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	Ldcx;	d	type
	f	Ldfj;	e	blockState
	f	Lcpv;	o	level
	f	Lgw;	p	worldPosition
	f	Z	q	remove
c	dcw	net/minecraft/world/level/block/entity/BlockEntityTicker
	m	(Lcpv;Lgw;Ldfj;Ldcv;)V	tick	tick
		p	1		world
		p	2		pos
		p	3		state
		p	4		blockEntity
c	dcx	net/minecraft/world/level/block/entity/BlockEntityType
	m	(Ldcx$a;Ljava/util/Set;Lcom/mojang/datafixers/types/Type;)V	<init>	<init>
		p	1		factory
		p	2		blocks
		p	3		type
	m	()Lhe$c;	a	builtInRegistryHolder
	m	(Lcpb;Lgw;)Ldcv;	a	getBlockEntity
		p	1		world
		p	2		pos
	m	(Ldcx;)Laew;	a	getKey
		p	0		type
	m	(Ldfj;)Z	a	isValid
		p	1		state
	m	(Lgw;Ldfj;)Ldcv;	a	create
		p	1		pos
		p	2		state
	m	(Ljava/lang/String;Ldcx$b;)Ldcx;	a	register
		p	0		id
		p	1		builder
	f	Ldcx;	A	BARREL
	f	Ldcx;	B	SMOKER
	f	Ldcx;	C	BLAST_FURNACE
	f	Ldcx;	D	LECTERN
	f	Ldcx;	E	BELL
	f	Ldcx;	F	JIGSAW
	f	Ldcx;	G	CAMPFIRE
	f	Ldcx;	H	BEEHIVE
	f	Ldcx;	I	SCULK_SENSOR
	f	Ldcx;	J	CALIBRATED_SCULK_SENSOR
	f	Ldcx;	K	SCULK_CATALYST
	f	Ldcx;	L	SCULK_SHRIEKER
	f	Ldcx;	M	CHISELED_BOOKSHELF
	f	Ldcx;	N	BRUSHABLE_BLOCK
	f	Ldcx;	O	DECORATED_POT
	f	Lorg/slf4j/Logger;	P	LOGGER
	f	Ldcx$a;	Q	factory
	f	Ljava/util/Set;	R	validBlocks
	f	Lcom/mojang/datafixers/types/Type;	S	dataType
	f	Lhe$c;	T	builtInRegistryHolder
	f	Ldcx;	a	FURNACE
	f	Ldcx;	b	CHEST
	f	Ldcx;	c	TRAPPED_CHEST
	f	Ldcx;	d	ENDER_CHEST
	f	Ldcx;	e	JUKEBOX
	f	Ldcx;	f	DISPENSER
	f	Ldcx;	g	DROPPER
	f	Ldcx;	h	SIGN
	f	Ldcx;	i	HANGING_SIGN
	f	Ldcx;	j	MOB_SPAWNER
	f	Ldcx;	k	PISTON
	f	Ldcx;	l	BREWING_STAND
	f	Ldcx;	m	ENCHANTING_TABLE
	f	Ldcx;	n	END_PORTAL
	f	Ldcx;	o	BEACON
	f	Ldcx;	p	SKULL
	f	Ldcx;	q	DAYLIGHT_DETECTOR
	f	Ldcx;	r	HOPPER
	f	Ldcx;	s	COMPARATOR
	f	Ldcx;	t	BANNER
	f	Ldcx;	u	STRUCTURE_BLOCK
	f	Ldcx;	v	END_GATEWAY
	f	Ldcx;	w	COMMAND_BLOCK
	f	Ldcx;	x	SHULKER_BOX
	f	Ldcx;	y	BED
	f	Ldcx;	z	CONDUIT
c	dcx$a	net/minecraft/world/level/block/entity/BlockEntityType$BlockEntitySupplier
	m	(Lgw;Ldfj;)Ldcv;	create	create
		p	1		pos
		p	2		state
c	dcx$b	net/minecraft/world/level/block/entity/BlockEntityType$Builder
	m	(Ldcx$a;Ljava/util/Set;)V	<init>	<init>
		p	1		factory
		p	2		blocks
	m	(Lcom/mojang/datafixers/types/Type;)Ldcx;	a	build
		p	1		type
	m	(Ldcx$a;[Lcsv;)Ldcx$b;	a	of
		p	0		factory
		p	1		blocks
	f	Ldcx$a;	a	factory
	f	Ljava/util/Set;	b	validBlocks
c	dcy	net/minecraft/world/level/block/entity/BrewingStandBlockEntity
	m	(Lgw;Ldfj;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	()V	a	clearContent
	m	(I)Lcjf;	a	getItem
		p	1		slot
	m	(II)Lcjf;	a	removeItem
		p	1		slot
		p	2		amount
	m	(ILcbt;)Lcel;	a	createMenu
		p	1		syncId
		p	2		playerInventory
	m	(ILcjf;)V	a	setItem
		p	1		slot
		p	2		stack
	m	(ILcjf;Lha;)Z	a	canPlaceItemThroughFace
		p	1		slot
		p	2		stack
		p	3		dir
	m	(Lcbu;)Z	a	stillValid
		p	1		player
	m	(Lcpv;Lgw;Ldfj;Ldcy;)V	a	serverTick
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Lcpv;Lgw;Lhn;)V	a	doBrew
		p	0		world
		p	1		pos
		p	2		slots
	m	(Lha;)[I	a	getSlotsForFace
		p	1		side
	m	(Lhn;)Z	a	isBrewable
		p	0		slots
	m	(Lqw;)V	a	load
		p	1		nbt
	m	()Z	af_	isEmpty
	m	()I	b	getContainerSize
	m	(I)Lcjf;	b	removeItemNoUpdate
		p	1		slot
	m	(ILcjf;)Z	b	canPlaceItem
		p	1		slot
		p	2		stack
	m	(ILcjf;Lha;)Z	b	canTakeItemThroughFace
		p	1		slot
		p	2		stack
		p	3		dir
	m	(Lqw;)V	b	saveAdditional
		p	1		nbt
	m	()[Z	f	getPotionBits
	m	()Ltl;	g	getDefaultName
	f	I	c	FUEL_USES
	f	I	d	DATA_BREW_TIME
	f	I	e	DATA_FUEL_USES
	f	I	f	NUM_DATA_VALUES
	f	Lcev;	g	dataAccess
	f	I	h	INGREDIENT_SLOT
	f	I	i	FUEL_SLOT
	f	[I	j	SLOTS_FOR_UP
	f	[I	k	SLOTS_FOR_DOWN
	f	[I	l	SLOTS_FOR_SIDES
	f	Lhn;	m	items
	f	I	n	brewTime
	f	[Z	r	lastPotionCount
	f	Lcja;	s	ingredient
	f	I	t	fuel
c	dcy$1	net/minecraft/world/level/block/entity/BrewingStandBlockEntity$1
	m	()I	a	getCount
	m	(I)I	a	get
		p	1		index
	m	(II)V	a	set
		p	1		index
		p	2		value
	f	Ldcy;	a	this$0
c	dcz	net/minecraft/world/level/block/entity/BrushableBlockEntity
	m	(Lgw;Ldfj;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(JLcbu;Lha;)Z	a	brush
		p	1		worldTime
		p	3		player
		p	4		hitDirection
	m	(Laew;J)V	a	setLootTable
		p	1		lootTable
		p	2		seed
	m	(Lcbu;)V	a	unpackLootTable
		p	1		player
	m	(Lqw;)V	a	load
		p	1		nbt
	m	()Lqw;	as_	getUpdateTag
	m	(Lcbu;)V	b	brushingCompleted
		p	1		player
	m	(Lqw;)V	b	saveAdditional
		p	1		nbt
	m	()V	c	checkReset
	m	(Lcbu;)V	c	dropContent
		p	1		player
	m	()Lxd;	d	getUpdatePacket
	m	(Lqw;)Z	d	tryLoadLootTable
		p	1		nbt
	m	(Lqw;)Z	e	trySaveLootTable
		p	1		nbt
	m	()Lha;	f	getHitDirection
	m	()Lcjf;	g	getItem
	m	()Lvd;	h	getUpdatePacket
	m	()I	i	getCompletionState
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/lang/String;	b	LOOT_TABLE_TAG
	f	Ljava/lang/String;	c	LOOT_TABLE_SEED_TAG
	f	Ljava/lang/String;	d	HIT_DIRECTION_TAG
	f	Ljava/lang/String;	e	ITEM_TAG
	f	I	f	BRUSH_COOLDOWN_TICKS
	f	I	g	BRUSH_RESET_TICKS
	f	I	h	REQUIRED_BRUSHES_TO_BREAK
	f	I	i	brushCount
	f	J	j	brushCountResetsAtTick
	f	J	k	coolDownEndsAtTick
	f	Lcjf;	l	item
	f	Lha;	m	hitDirection
	f	Laew;	n	lootTable
	f	J	r	lootTableSeed
c	dda	net/minecraft/world/level/block/entity/CalibratedSculkSensorBlockEntity
	m	(Lgw;Ldfj;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	()Ldkc$d;	c	createVibrationUser
c	dda$a	net/minecraft/world/level/block/entity/CalibratedSculkSensorBlockEntity$VibrationUser
	m	(Ldda;Lgw;)V	<init>	<init>
		p	2		pos
	m	()I	a	getListenerRadius
	m	(Lakq;Lgw;Ldjt;Ldjt$a;)Z	a	canReceiveVibration
		p	1		world
		p	2		pos
		p	3		event
		p	4		emitter
	m	(Lcpv;Lgw;Ldfj;)I	a	getBackSignal
		p	1		world
		p	2		pos
		p	3		state
	f	Ldda;	a	this$0
c	ddb	net/minecraft/world/level/block/entity/CampfireBlockEntity
	m	(Lgw;Ldfj;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	()V	a	clearContent
	m	(Lbgr;Lcpv;Lcmk;)Lcjf;	a	lambda$cookTick$0
	m	(Lbiq;Lcjf;I)Z	a	placeFood
		p	1		user
		p	2		stack
		p	3		cookTime
	m	(Lcjf;)Ljava/util/Optional;	a	getCookableRecipe
		p	1		stack
	m	(Lcpv;Lgw;Ldfj;Lddb;)V	a	cookTick
		p	0		world
		p	1		pos
		p	2		state
		p	3		campfire
	m	(Lqw;)V	a	load
		p	1		nbt
	m	()Lqw;	as_	getUpdateTag
	m	(Lcpv;Lgw;Ldfj;Lddb;)V	b	cooldownTick
		p	0		world
		p	1		pos
		p	2		state
		p	3		campfire
	m	(Lqw;)V	b	saveAdditional
		p	1		nbt
	m	()Lhn;	c	getItems
	m	(Lcpv;Lgw;Ldfj;Lddb;)V	c	particleTick
		p	0		world
		p	1		pos
		p	2		state
		p	3		campfire
	m	()Lxd;	d	getUpdatePacket
	m	()V	f	dowse
	m	()V	g	markUpdated
	m	()Lvd;	h	getUpdatePacket
	f	I	a	BURN_COOL_SPEED
	f	I	b	NUM_SLOTS
	f	Lhn;	c	items
	f	[I	d	cookingProgress
	f	[I	e	cookingTime
	f	Lcml$a;	f	quickCheck
c	ddc	net/minecraft/world/level/block/entity/ChestBlockEntity
	m	(Ldcx;Lgw;Ldfj;)V	<init>	<init>
		p	1		type
		p	2		pos
		p	3		state
	m	(Lgw;Ldfj;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(F)F	a	getOpenNess
		p	1		tickDelta
	m	(ILcbt;)Lcel;	a	createMenu
		p	1		syncId
		p	2		playerInventory
	m	(Lcpb;Lgw;)I	a	getOpenCount
		p	0		world
		p	1		pos
	m	(Lcpv;Lgw;Ldfj;II)V	a	signalOpenCount
		p	1		world
		p	2		pos
		p	3		state
		p	4		oldViewerCount
		p	5		newViewerCount
	m	(Lcpv;Lgw;Ldfj;Lapc;)V	a	playSound
		p	0		world
		p	1		pos
		p	2		state
		p	3		soundEvent
	m	(Lcpv;Lgw;Ldfj;Lddc;)V	a	lidAnimateTick
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Lddc;Lddc;)V	a	swapContents
		p	0		from
		p	1		to
	m	(Lhn;)V	a	setItems
		p	1		list
	m	(Lqw;)V	a	load
		p	1		nbt
	m	(II)Z	a_	triggerEvent
		p	1		type
		p	2		data
	m	()I	b	getContainerSize
	m	(Lqw;)V	b	saveAdditional
		p	1		nbt
	m	(Lcbu;)V	c	stopOpen
		p	1		player
	m	(Lcbu;)V	d_	startOpen
		p	1		player
	m	()Lhn;	f	getItems
	m	()Ltl;	g	getDefaultName
	m	()V	i	recheckOpen
	f	I	c	EVENT_SET_OPEN_COUNT
	f	Lhn;	f	items
	f	Lddi;	g	openersCounter
	f	Lddd;	j	chestLidController
c	ddc$1	net/minecraft/world/level/block/entity/ChestBlockEntity$1
	m	(Lcbu;)Z	a	isOwnContainer
		p	1		player
	m	(Lcpv;Lgw;Ldfj;)V	a	onOpen
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcpv;Lgw;Ldfj;II)V	a	openerCountChanged
		p	1		world
		p	2		pos
		p	3		state
		p	4		oldViewerCount
		p	5		newViewerCount
	m	(Lcpv;Lgw;Ldfj;)V	b	onClose
		p	1		world
		p	2		pos
		p	3		state
	f	Lddc;	a	this$0
c	ddd	net/minecraft/world/level/block/entity/ChestLidController
	m	()V	a	tickLid
	m	(F)F	a	getOpenness
		p	1		delta
	m	(Z)V	a	shouldBeOpen
		p	1		open
	f	Z	a	shouldBeOpen
	f	F	b	openness
	f	F	c	oOpenness
c	dde	net/minecraft/world/level/block/entity/ChiseledBookShelfBlockEntity
	m	(Lgw;Ldfj;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	()V	a	clearContent
	m	(I)Lcjf;	a	getItem
		p	1		slot
	m	(II)Lcjf;	a	removeItem
		p	1		slot
		p	2		amount
	m	(ILcjf;)V	a	setItem
		p	1		slot
		p	2		stack
	m	(Lbgr;ILcjf;)Z	a	canTakeItem
		p	1		hopperInventory
		p	2		slot
		p	3		stack
	m	(Lcbu;)Z	a	stillValid
		p	1		player
	m	(Lcjf;Lbgr;Lcjf;)Z	a	lambda$canTakeItem$0
	m	(Lqw;)V	a	load
		p	1		nbt
	m	()Z	af_	isEmpty
	m	()I	ag_	getMaxStackSize
	m	()I	b	getContainerSize
	m	(I)Lcjf;	b	removeItemNoUpdate
		p	1		slot
	m	(ILcjf;)Z	b	canPlaceItem
		p	1		slot
		p	2		stack
	m	(Lqw;)V	b	saveAdditional
		p	1		nbt
	m	(I)V	c	updateState
		p	1		interactedSlot
	m	()I	f	count
	m	()I	g	getLastInteractedSlot
	f	I	c	MAX_BOOKS_IN_STORAGE
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	Lhn;	e	items
	f	I	f	lastInteractedSlot
c	ddf	net/minecraft/world/level/block/entity/CommandBlockEntity
	m	(Lgw;Ldfj;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(Lqw;)V	a	load
		p	1		nbt
	m	(Z)V	a	setPowered
		p	1		powered
	m	(Lqw;)V	b	saveAdditional
		p	1		nbt
	m	(Z)V	b	setAutomatic
		p	1		auto
	m	()Lcow;	c	getCommandBlock
	m	()Z	d	isPowered
	m	()Z	f	isAutomatic
	m	()V	g	onModeSwitch
	m	()Z	i	wasConditionMet
	m	()Z	j	markConditionMet
	m	()Z	t	onlyOpCanSetNbt
	m	()Lddf$a;	v	getMode
	m	()Z	w	isConditional
	m	()V	x	scheduleTick
	f	Z	a	powered
	f	Z	b	auto
	f	Z	c	conditionMet
	f	Lcow;	d	commandBlock
c	ddf$1	net/minecraft/world/level/block/entity/CommandBlockEntity$1
	m	(Ljava/lang/String;)V	a	setCommand
		p	1		command
	m	()Lakq;	e	getLevel
	m	()V	f	onUpdated
	m	()Lehn;	g	getPosition
	m	()Ldt;	i	createCommandSourceStack
	m	()Z	j	isValid
	f	Lddf;	b	this$0
c	ddf$a	net/minecraft/world/level/block/entity/CommandBlockEntity$Mode
	m	()[Lddf$a;	a	$values
	f	Lddf$a;	a	SEQUENCE
	f	Lddf$a;	b	AUTO
	f	Lddf$a;	c	REDSTONE
	f	[Lddf$a;	d	$VALUES
c	ddg	net/minecraft/world/level/block/entity/ComparatorBlockEntity
	m	(Lgw;Ldfj;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(I)V	a	setOutputSignal
		p	1		outputSignal
	m	(Lqw;)V	a	load
		p	1		nbt
	m	(Lqw;)V	b	saveAdditional
		p	1		nbt
	m	()I	c	getOutputSignal
	f	I	a	output
c	ddh	net/minecraft/world/level/block/entity/ConduitBlockEntity
	m	(Lgw;Ldfj;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(F)F	a	getActiveRotation
		p	1		tickDelta
	m	(Lbjg;)Z	a	lambda$updateDestroyTarget$0
		p	0		entity
	m	(Lcpv;Lgw;Lddh;)V	a	updateClientTarget
		p	0		world
		p	1		pos
		p	2		blockEntity
	m	(Lcpv;Lgw;Ldfj;Lddh;)V	a	clientTick
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Lcpv;Lgw;Ldfj;Ljava/util/List;Lddh;)V	a	updateDestroyTarget
		p	0		world
		p	1		pos
		p	2		state
		p	3		activatingBlocks
		p	4		blockEntity
	m	(Lcpv;Lgw;Ljava/util/List;)Z	a	updateShape
		p	0		world
		p	1		pos
		p	2		activatingBlocks
	m	(Lcpv;Lgw;Ljava/util/List;Lbiq;I)V	a	animationTick
		p	0		world
		p	1		pos
		p	2		activatingBlocks
		p	3		entity
		p	4		ticks
	m	(Lcpv;Lgw;Ljava/util/UUID;)Lbjg;	a	findDestroyTarget
		p	0		world
		p	1		pos
		p	2		uuid
	m	(Lddh;Ljava/util/List;)V	a	updateHunting
		p	0		blockEntity
		p	1		activatingBlocks
	m	(Lgw;)Lehi;	a	getDestroyRangeAABB
		p	0		pos
	m	(Ljava/util/UUID;Lbjg;)Z	a	lambda$findDestroyTarget$1
		p	1		entity
	m	(Lqw;)V	a	load
		p	1		nbt
	m	(Z)V	a	setHunting
		p	1		eyeOpen
	m	()Lqw;	as_	getUpdateTag
	m	(Lcpv;Lgw;Ldfj;Lddh;)V	b	serverTick
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Lcpv;Lgw;Ljava/util/List;)V	b	applyEffects
		p	0		world
		p	1		pos
		p	2		activatingBlocks
	m	(Lqw;)V	b	saveAdditional
		p	1		nbt
	m	()Lxd;	c	getUpdatePacket
	m	()Z	d	isActive
	m	()Z	f	isHunting
	m	()Lvd;	h	getUpdatePacket
	f	I	a	tickCount
	f	I	b	BLOCK_REFRESH_RATE
	f	I	c	EFFECT_DURATION
	f	F	d	ROTATION_SPEED
	f	I	e	MIN_ACTIVE_SIZE
	f	I	f	MIN_KILL_SIZE
	f	I	g	KILL_RANGE
	f	[Lcsv;	h	VALID_BLOCKS
	f	F	i	activeRotation
	f	Z	j	isActive
	f	Z	k	isHunting
	f	Ljava/util/List;	l	effectBlocks
	f	Lbjg;	m	destroyTarget
	f	Ljava/util/UUID;	n	destroyTargetUUID
	f	J	r	nextAmbientSoundActivation
c	ddi	net/minecraft/world/level/block/entity/ContainerOpenersCounter
	m	()I	a	getOpenerCount
	m	(Lcbu;)Z	a	isOwnContainer
		p	1		player
	m	(Lcbu;Lcpv;Lgw;Ldfj;)V	a	incrementOpeners
		p	1		player
		p	2		world
		p	3		pos
		p	4		state
	m	(Lcpv;Lgw;)I	a	getOpenCount
		p	1		world
		p	2		pos
	m	(Lcpv;Lgw;Ldfj;)V	a	onOpen
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcpv;Lgw;Ldfj;II)V	a	openerCountChanged
		p	1		world
		p	2		pos
		p	3		state
		p	4		oldViewerCount
		p	5		newViewerCount
	m	(Lcbu;Lcpv;Lgw;Ldfj;)V	b	decrementOpeners
		p	1		player
		p	2		world
		p	3		pos
		p	4		state
	m	(Lcpv;Lgw;Ldfj;)V	b	onClose
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcpv;Lgw;Ldfj;)V	c	recheckOpeners
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcpv;Lgw;Ldfj;)V	d	scheduleRecheck
		p	0		world
		p	1		pos
		p	2		state
	f	I	a	CHECK_TICK_DELAY
	f	I	b	openCount
c	ddj	net/minecraft/world/level/block/entity/DaylightDetectorBlockEntity
	m	(Lgw;Ldfj;)V	<init>	<init>
		p	1		pos
		p	2		state
c	ddk	net/minecraft/world/level/block/entity/DecoratedPotBlockEntity
	m	(Lgw;Ldfj;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(Lcjf;)V	a	setFromItem
		p	1		stack
	m	(Lddk$a;)Lcjf;	a	createDecoratedPotItem
		p	0		sherds
	m	(Lqw;)V	a	load
		p	1		nbt
	m	()Lqw;	as_	getUpdateTag
	m	(Lqw;)V	b	saveAdditional
		p	1		nbt
	m	()Lxd;	c	getUpdatePacket
	m	()Lha;	d	getDirection
	m	()Lddk$a;	f	getDecorations
	m	()Lcjf;	g	getItem
	m	()Lvd;	h	getUpdatePacket
	f	Ljava/lang/String;	a	TAG_SHERDS
	f	Lddk$a;	b	decorations
c	ddk$a	net/minecraft/world/level/block/entity/DecoratedPotBlockEntity$Decorations
	m	()Ljava/util/stream/Stream;	a	sorted
	m	(Lqw;)Lqw;	a	save
		p	1		nbt
	m	(Lrc;I)Lcja;	a	itemFromTag
		p	0		list
		p	1		index
	m	(Lrc;Lcja;)V	a	lambda$save$0
		p	1		sherd
	m	()Lcja;	b	back
	m	(Lqw;)Lddk$a;	b	load
		p	0		nbt
	m	()Lcja;	c	left
	m	()Lcja;	d	right
	m	()Lcja;	e	front
	f	Lddk$a;	a	EMPTY
	f	Lcja;	b	back
	f	Lcja;	c	left
	f	Lcja;	d	right
	f	Lcja;	e	front
c	ddl	net/minecraft/world/level/block/entity/DecoratedPotPatterns
	m	(Laev;)Laew;	a	location
		p	0		key
	m	(Lcja;)Laev;	a	getResourceKey
		p	0		sherd
	m	(Lhq;)Ljava/lang/String;	a	bootstrap
		p	0		registry
	m	(Ljava/lang/String;)Laev;	a	create
		p	0		path
	f	Laev;	A	ARMS_UP
	f	Laev;	B	BLADE
	f	Laev;	C	BREWER
	f	Laev;	D	BURN
	f	Laev;	E	DANGER
	f	Laev;	F	EXPLORER
	f	Laev;	G	FRIEND
	f	Laev;	H	HEART
	f	Laev;	I	HEARTBREAK
	f	Laev;	J	HOWL
	f	Laev;	K	MINER
	f	Laev;	L	MOURNER
	f	Laev;	M	PLENTY
	f	Laev;	N	PRIZE
	f	Laev;	O	SHEAF
	f	Laev;	P	SHELTER
	f	Laev;	Q	SKULL
	f	Laev;	R	SNORT
	f	Ljava/util/Map;	S	ITEM_TO_POT_TEXTURE
	f	Laev;	a	BASE
	f	Ljava/lang/String;	b	BASE_NAME
	f	Ljava/lang/String;	c	BRICK_NAME
	f	Ljava/lang/String;	d	ANGLER_NAME
	f	Ljava/lang/String;	e	ARCHER_NAME
	f	Ljava/lang/String;	f	ARMS_UP_NAME
	f	Ljava/lang/String;	g	BLADE_NAME
	f	Ljava/lang/String;	h	BREWER_NAME
	f	Ljava/lang/String;	i	BURN_NAME
	f	Ljava/lang/String;	j	DANGER_NAME
	f	Ljava/lang/String;	k	EXPLORER_NAME
	f	Ljava/lang/String;	l	FRIEND_NAME
	f	Ljava/lang/String;	m	HEART_NAME
	f	Ljava/lang/String;	n	HEARTBREAK_NAME
	f	Ljava/lang/String;	o	HOWL_NAME
	f	Ljava/lang/String;	p	MINER_NAME
	f	Ljava/lang/String;	q	MOURNER_NAME
	f	Ljava/lang/String;	r	PLENTY_NAME
	f	Ljava/lang/String;	s	PRIZE_NAME
	f	Ljava/lang/String;	t	SHEAF_NAME
	f	Ljava/lang/String;	u	SHELTER_NAME
	f	Ljava/lang/String;	v	SKULL_NAME
	f	Ljava/lang/String;	w	SNORT_NAME
	f	Laev;	x	BRICK
	f	Laev;	y	ANGLER
	f	Laev;	z	ARCHER
c	ddm	net/minecraft/world/level/block/entity/DispenserBlockEntity
	m	(Ldcx;Lgw;Ldfj;)V	<init>	<init>
		p	1		type
		p	2		pos
		p	3		state
	m	(Lgw;Ldfj;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(ILcbt;)Lcel;	a	createMenu
		p	1		syncId
		p	2		playerInventory
	m	(Lasc;)I	a	getRandomSlot
		p	1		random
	m	(Lcjf;)I	a	addItem
		p	1		stack
	m	(Lhn;)V	a	setItems
		p	1		list
	m	(Lqw;)V	a	load
		p	1		nbt
	m	()I	b	getContainerSize
	m	(Lqw;)V	b	saveAdditional
		p	1		nbt
	m	()Lhn;	f	getItems
	m	()Ltl;	g	getDefaultName
	f	I	c	CONTAINER_SIZE
	f	Lhn;	f	items
c	ddn	net/minecraft/world/level/block/entity/DropperBlockEntity
	m	(Lgw;Ldfj;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	()Ltl;	g	getDefaultName
c	ddo	net/minecraft/world/level/block/entity/EnchantmentTableBlockEntity
	m	(Lgw;Ldfj;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(Lcpv;Lgw;Ldfj;Lddo;)V	a	bookAnimationTick
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Lqw;)V	a	load
		p	1		nbt
	m	(Ltl;)V	a	setCustomName
		p	1		customName
	m	()Ltl;	ab	getName
	m	()Ltl;	ad	getCustomName
	m	(Lqw;)V	b	saveAdditional
		p	1		nbt
	f	I	a	time
	f	F	b	flip
	f	F	c	oFlip
	f	F	d	flipT
	f	F	e	flipA
	f	F	f	open
	f	F	g	oOpen
	f	F	h	rot
	f	F	i	oRot
	f	F	j	tRot
	f	Lasc;	k	RANDOM
	f	Ltl;	l	name
c	ddp	net/minecraft/world/level/block/entity/EnderChestBlockEntity
	m	(Lgw;Ldfj;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(F)F	a	getOpenNess
		p	1		tickDelta
	m	(Lcbu;)V	a	startOpen
		p	1		player
	m	(Lcpv;Lgw;Ldfj;Lddp;)V	a	lidAnimateTick
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(II)Z	a_	triggerEvent
		p	1		type
		p	2		data
	m	(Lcbu;)V	b	stopOpen
		p	1		player
	m	()V	c	recheckOpen
	m	(Lcbu;)Z	c	stillValid
		p	1		player
	f	Lddd;	a	chestLidController
	f	Lddi;	b	openersCounter
c	ddp$1	net/minecraft/world/level/block/entity/EnderChestBlockEntity$1
	m	(Lcbu;)Z	a	isOwnContainer
		p	1		player
	m	(Lcpv;Lgw;Ldfj;)V	a	onOpen
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcpv;Lgw;Ldfj;II)V	a	openerCountChanged
		p	1		world
		p	2		pos
		p	3		state
		p	4		oldViewerCount
		p	5		newViewerCount
	m	(Lcpv;Lgw;Ldfj;)V	b	onClose
		p	1		world
		p	2		pos
		p	3		state
	f	Lddp;	a	this$0
c	ddq	net/minecraft/world/level/block/entity/FurnaceBlockEntity
	m	(Lgw;Ldfj;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(ILcbt;)Lcel;	a	createMenu
		p	1		syncId
		p	2		playerInventory
	m	()Ltl;	g	getDefaultName
c	ddr	net/minecraft/world/level/block/entity/HangingSignBlockEntity
	m	(Lgw;Ldfj;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	()I	c	getTextLineHeight
	m	()I	d	getMaxTextLineWidth
	f	I	a	MAX_TEXT_LINE_WIDTH
	f	I	b	TEXT_LINE_HEIGHT
c	dds	net/minecraft/world/level/block/entity/Hopper
	m	()D	M	getLevelX
	m	()D	N	getLevelY
	m	()D	O	getLevelZ
	m	()Leig;	au_	getSuckShape
	f	Leig;	c	INSIDE
	f	Leig;	x_	ABOVE
	f	Leig;	y_	SUCK
c	ddt	net/minecraft/world/level/block/entity/HopperBlockEntity
	m	(Lgw;Ldfj;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	()D	M	getLevelX
	m	()D	N	getLevelY
	m	()D	O	getLevelZ
	m	(II)Lcjf;	a	removeItem
		p	1		slot
		p	2		amount
	m	(ILcbt;)Lcel;	a	createMenu
		p	1		syncId
		p	2		playerInventory
	m	(ILcjf;)V	a	setItem
		p	1		slot
		p	2		stack
	m	(Lbgr;I)Z	a	lambda$isEmptyContainer$2
		p	1		slot
	m	(Lbgr;Lbgr;Lcjf;ILha;)Z	a	canTakeItemFromContainer
		p	0		hopperInventory
		p	1		fromInventory
		p	2		stack
		p	3		slot
		p	4		facing
	m	(Lbgr;Lbgr;Lcjf;Lha;)Lcjf;	a	addItem
		p	0		from
		p	1		to
		p	2		stack
		p	3		side
	m	(Lbgr;Lbyn;)Z	a	addItem
		p	0		inventory
		p	1		itemEntity
	m	(Lbgr;Lcjf;ILha;)Z	a	canPlaceItemInContainer
		p	0		inventory
		p	1		stack
		p	2		slot
		p	3		side
	m	(Lbgr;Lha;)Ljava/util/stream/IntStream;	a	getSlots
		p	0		inventory
		p	1		side
	m	(Lcjf;Lcjf;)Z	a	canMergeItems
		p	0		first
		p	1		second
	m	(Lcpv;DDD)Lbgr;	a	getContainerAt
		p	0		world
		p	1		x
		p	3		y
		p	5		z
	m	(Lcpv;Ldds;)Z	a	suckInItems
		p	0		world
		p	1		hopper
	m	(Lcpv;Ldds;Lehi;)Ljava/util/stream/Stream;	a	lambda$getItemsAtAndAbove$4
		p	2		box
	m	(Lcpv;Lddt;)Z	a	lambda$pushItemsTick$0
	m	(Lcpv;Lgw;)Lbgr;	a	getContainerAt
		p	0		world
		p	1		pos
	m	(Lcpv;Lgw;Ldfj;Lbgr;)Z	a	ejectItems
		p	0		world
		p	1		pos
		p	2		state
		p	3		inventory
	m	(Lcpv;Lgw;Ldfj;Lbiq;Lddt;)V	a	entityInside
		p	0		world
		p	1		pos
		p	2		state
		p	3		entity
		p	4		blockEntity
	m	(Lcpv;Lgw;Ldfj;Lddt;)V	a	pushItemsTick
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Lcpv;Lgw;Ldfj;Lddt;Ljava/util/function/BooleanSupplier;)Z	a	tryMoveItems
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Ldds;Lbgr;ILha;)Z	a	tryTakeInItemFromSlot
		p	0		hopper
		p	1		inventory
		p	2		slot
		p	3		side
	m	(Ldds;Lbgr;Lha;I)Z	a	lambda$suckInItems$3
		p	3		slot
	m	(Lddt;Lbyn;)Z	a	lambda$entityInside$5
	m	(Lhn;)V	a	setItems
		p	1		list
	m	(Lqw;)V	a	load
		p	1		nbt
	m	()I	b	getContainerSize
	m	(Lbgr;I)Z	b	lambda$isFullContainer$1
		p	1		slot
	m	(Lbgr;Lbgr;Lcjf;ILha;)Lcjf;	b	tryMoveInItem
		p	0		from
		p	1		to
		p	2		stack
		p	3		slot
		p	4		side
	m	(Lbgr;Lha;)Z	b	isFullContainer
		p	0		inventory
		p	1		direction
	m	(Lcpv;Ldds;)Ljava/util/List;	b	getItemsAtAndAbove
		p	0		world
		p	1		hopper
	m	(Lcpv;Lgw;Ldfj;)Lbgr;	b	getAttachedContainer
		p	0		world
		p	1		pos
		p	2		state
	m	(Lqw;)V	b	saveAdditional
		p	1		nbt
	m	(I)V	c	setCooldown
		p	1		transferCooldown
	m	(Lbgr;Lha;)Z	c	isEmptyContainer
		p	0		inv
		p	1		facing
	m	(Lcpv;Ldds;)Lbgr;	c	getSourceContainer
		p	0		world
		p	1		hopper
	m	()Lhn;	f	getItems
	m	()Ltl;	g	getDefaultName
	m	()Z	i	inventoryFull
	m	()Z	j	isOnCooldown
	m	()Z	v	isOnCustomCooldown
	f	I	f	MOVE_ITEM_SPEED
	f	I	g	HOPPER_CONTAINER_SIZE
	f	Lhn;	j	items
	f	I	k	cooldownTime
	f	J	l	tickedGameTime
c	ddu	net/minecraft/world/level/block/entity/JigsawBlockEntity
	m	(Lgw;Ldfj;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(Laev;)V	a	setPool
		p	1		pool
	m	(Laew;)V	a	setName
		p	1		name
	m	(Lakq;IZ)V	a	generate
		p	1		world
		p	2		maxDepth
		p	3		keepJigsaws
	m	(Lddu$a;)V	a	setJoint
		p	1		joint
	m	(Ljava/lang/String;)V	a	setFinalState
		p	1		finalState
	m	(Lqw;)V	a	load
		p	1		nbt
	m	()Lqw;	as_	getUpdateTag
	m	(Laew;)V	b	setTarget
		p	1		target
	m	(Lqw;)V	b	saveAdditional
		p	1		nbt
	m	()Laew;	c	getName
	m	()Laew;	d	getTarget
	m	()Laev;	f	getPool
	m	()Ljava/lang/String;	g	getFinalState
	m	()Lvd;	h	getUpdatePacket
	m	()Lddu$a;	i	getJoint
	m	()Lxd;	j	getUpdatePacket
	m	()Lddu$a;	v	lambda$load$0
	f	Ljava/lang/String;	a	TARGET
	f	Ljava/lang/String;	b	POOL
	f	Ljava/lang/String;	c	JOINT
	f	Ljava/lang/String;	d	NAME
	f	Ljava/lang/String;	e	FINAL_STATE
	f	Laew;	f	name
	f	Laew;	g	target
	f	Laev;	h	pool
	f	Lddu$a;	i	joint
	f	Ljava/lang/String;	j	finalState
c	ddu$a	net/minecraft/world/level/block/entity/JigsawBlockEntity$JointType
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()Ltl;	a	getTranslatedName
	m	(Ljava/lang/String;)Ljava/util/Optional;	a	byName
		p	0		name
	m	(Ljava/lang/String;Lddu$a;)Z	a	lambda$byName$0
		p	1		joint
	m	()[Lddu$a;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lddu$a;	a	ROLLABLE
	f	Lddu$a;	b	ALIGNED
	f	Ljava/lang/String;	c	name
	f	[Lddu$a;	d	$VALUES
c	ddv	net/minecraft/world/level/block/entity/JukeboxBlockEntity
	m	(Lgw;Ldfj;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(I)Lcjf;	a	getItem
		p	1		slot
	m	(II)Lcjf;	a	removeItem
		p	1		slot
		p	2		amount
	m	(ILcjf;)V	a	setItem
		p	1		slot
		p	2		stack
	m	(Lbgr;ILcjf;)Z	a	canTakeItem
		p	1		hopperInventory
		p	2		slot
		p	3		stack
	m	(Lbiq;Z)V	a	setHasRecordBlockState
		p	1		entity
		p	2		hasRecord
	m	(Lcbu;)Z	a	stillValid
		p	1		player
	m	(Lcjf;)V	a	setRecordWithoutPlaying
		p	1		stack
	m	(Lcjx;)Z	a	shouldRecordStopPlaying
		p	1		musicDisc
	m	(Lcpv;Lgw;)V	a	spawnMusicParticles
		p	1		world
		p	2		pos
	m	(Lcpv;Lgw;Ldfj;Lddv;)V	a	playRecordTick
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Lqw;)V	a	load
		p	1		nbt
	m	()I	ag_	getMaxStackSize
	m	(ILcjf;)Z	b	canPlaceItem
		p	1		slot
		p	2		stack
	m	(Lcpv;Lgw;Ldfj;)V	b	tick
		p	1		world
		p	2		pos
		p	3		state
	m	(Lqw;)V	b	saveAdditional
		p	1		nbt
	m	()Z	f	isRecordPlaying
	m	()V	g	startPlaying
	m	()V	i	popOutRecord
	m	()V	v	stopPlaying
	m	()Z	w	shouldSendJukeboxPlayingEvent
	f	I	c	SONG_END_PADDING
	f	Lhn;	d	items
	f	I	e	ticksSinceLastEvent
	f	J	f	tickCount
	f	J	g	recordStartedTick
	f	Z	h	isPlaying
c	ddw	net/minecraft/world/level/block/entity/LecternBlockEntity
	m	(Lgw;Ldfj;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	()Ltl;	N_	getDisplayName
	m	()V	a	clearContent
	m	(I)V	a	setPage
		p	1		currentPage
	m	(Lcbu;)Ldt;	a	createCommandSourceStack
		p	1		player
	m	(Lcjf;)V	a	setBook
		p	1		book
	m	(Lcjf;Lcbu;)V	a	setBook
		p	1		book
		p	2		player
	m	(Lqw;)V	a	load
		p	1		nbt
	m	(Lcjf;Lcbu;)Lcjf;	b	resolveBook
		p	1		book
		p	2		player
	m	(Lqw;)V	b	saveAdditional
		p	1		nbt
	m	()Lcjf;	c	getBook
	m	(ILcbt;Lcbu;)Lcel;	createMenu	createMenu
		p	1		syncId
		p	2		playerInventory
		p	3		player
	m	()Z	f	hasBook
	m	()I	g	getPage
	m	()I	i	getRedstoneSignal
	m	()V	j	onBookItemRemove
	m	()Z	t	onlyOpCanSetNbt
	f	I	a	DATA_PAGE
	f	I	b	NUM_DATA
	f	I	c	SLOT_BOOK
	f	I	d	NUM_SLOTS
	f	Lbgr;	e	bookAccess
	f	Lcev;	f	dataAccess
	f	Lcjf;	g	book
	f	I	h	page
	f	I	i	pageCount
c	ddw$1	net/minecraft/world/level/block/entity/LecternBlockEntity$1
	m	()V	a	clearContent
	m	(I)Lcjf;	a	getItem
		p	1		slot
	m	(II)Lcjf;	a	removeItem
		p	1		slot
		p	2		amount
	m	(ILcjf;)V	a	setItem
		p	1		slot
		p	2		stack
	m	(Lcbu;)Z	a	stillValid
		p	1		player
	m	()Z	af_	isEmpty
	m	()I	ag_	getMaxStackSize
	m	()I	b	getContainerSize
	m	(I)Lcjf;	b	removeItemNoUpdate
		p	1		slot
	m	(ILcjf;)Z	b	canPlaceItem
		p	1		slot
		p	2		stack
	m	()V	e	setChanged
	f	Lddw;	c	this$0
c	ddw$2	net/minecraft/world/level/block/entity/LecternBlockEntity$2
	m	()I	a	getCount
	m	(I)I	a	get
		p	1		index
	m	(II)V	a	set
		p	1		index
		p	2		value
	f	Lddw;	a	this$0
c	ddx	net/minecraft/world/level/block/entity/LidBlockEntity
	m	(F)F	a	getOpenNess
		p	1		tickDelta
c	ddy	net/minecraft/world/level/block/entity/RandomizableContainerBlockEntity
	m	(Ldcx;Lgw;Ldfj;)V	<init>	<init>
		p	1		type
		p	2		pos
		p	3		state
	m	()V	a	clearContent
	m	(I)Lcjf;	a	getItem
		p	1		slot
	m	(II)Lcjf;	a	removeItem
		p	1		slot
		p	2		amount
	m	(ILcjf;)V	a	setItem
		p	1		slot
		p	2		stack
	m	(Laew;J)V	a	setLootTable
		p	1		id
		p	2		seed
	m	(Lcbu;)Z	a	stillValid
		p	1		player
	m	(Lcpb;Lasc;Lgw;Laew;)V	a	setLootTable
		p	0		world
		p	1		random
		p	2		pos
		p	3		id
	m	(Lhn;)V	a	setItems
		p	1		list
	m	()Z	af_	isEmpty
	m	(I)Lcjf;	b	removeItemNoUpdate
		p	1		slot
	m	(ILcbt;Lcbu;)Lcel;	createMenu	createMenu
		p	1		syncId
		p	2		playerInventory
		p	3		player
	m	(Lcbu;)Z	d	canOpen
		p	1		player
	m	(Lqw;)Z	d	tryLoadLootTable
		p	1		nbt
	m	(Lcbu;)V	e	unpackLootTable
		p	1		player
	m	(Lqw;)Z	e	trySaveLootTable
		p	1		nbt
	m	()Lhn;	f	getItems
	f	Ljava/lang/String;	d	LOOT_TABLE_TAG
	f	Ljava/lang/String;	e	LOOT_TABLE_SEED_TAG
	f	Laew;	h	lootTable
	f	J	i	lootTableSeed
c	ddz	net/minecraft/world/level/block/entity/SculkCatalystBlockEntity
	m	(Lgw;Ldfj;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(Lcpv;Lgw;Ldfj;Lddz;)V	a	serverTick
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Lqw;)V	a	load
		p	1		nbt
	m	(Lqw;)V	b	saveAdditional
		p	1		nbt
	m	()Lddz$a;	c	getListener
	m	()Ldjv;	d	getListener
	f	Lddz$a;	a	catalystListener
c	ddz$a	net/minecraft/world/level/block/entity/SculkCatalystBlockEntity$CatalystListener
	m	(Ldfj;Ldjx;)V	<init>	<init>
		p	1		state
		p	2		positionSource
	m	()Ldjx;	a	getListenerSource
	m	(Lakq;Ldjt;Ldjt$a;Lehn;)Z	a	handleGameEvent
		p	1		world
		p	2		event
		p	3		emitter
		p	4		emitterPos
	m	(Lakq;Lehn;)V	a	lambda$handleGameEvent$0
		p	2		pos
	m	(Lakq;Lgw;Ldfj;Lasc;)V	a	bloom
		p	1		world
		p	2		pos
		p	3		state
		p	4		random
	m	(Lcpv;Lbjg;)V	a	tryAwardItSpreadsAdvancement
		p	1		world
		p	2		deadEntity
	m	()I	b	getListenerRadius
	m	()Ldjv$a;	c	getDeliveryMode
	m	()Lczq;	d	getSculkSpreader
	f	I	a	PULSE_TICKS
	f	Lczq;	b	sculkSpreader
	f	Ldfj;	c	blockState
	f	Ldjx;	d	positionSource
c	dea	net/minecraft/world/level/block/entity/SculkSensorBlockEntity
	m	(Ldcx;Lgw;Ldfj;)V	<init>	<init>
		p	1		type
		p	2		pos
		p	3		state
	m	(Lgw;Ldfj;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(I)V	a	setLastVibrationFrequency
		p	1		lastVibrationFrequency
	m	(Ldkc$a;)V	a	lambda$load$0
		p	1		listener
	m	(Lqw;)V	a	load
		p	1		nbt
	m	(Lqw;Lrq;)V	a	lambda$saveAdditional$1
		p	1		listenerNbt
	m	(Lqw;)V	b	saveAdditional
		p	1		nbt
	m	()Ldkc$d;	c	createVibrationUser
	m	()Ldjv;	d	getListener
	m	()I	f	getLastVibrationFrequency
	m	()Ldkc$b;	g	getListener
	m	()Ldkc$a;	gf	getVibrationData
	m	()Ldkc$d;	gg	getVibrationUser
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ldkc$a;	c	vibrationData
	f	Ldkc$b;	d	vibrationListener
	f	Ldkc$d;	e	vibrationUser
	f	I	g	lastVibrationFrequency
c	dea$a	net/minecraft/world/level/block/entity/SculkSensorBlockEntity$VibrationUser
	m	(Ldea;Lgw;)V	<init>	<init>
		p	2		pos
	m	()I	a	getListenerRadius
	m	(Lakq;Lgw;Ldjt;Lbiq;Lbiq;F)V	a	onReceiveVibration
		p	1		world
		p	2		pos
		p	3		event
		p	4		sourceEntity
		p	5		entity
		p	6		distance
	m	(Lakq;Lgw;Ldjt;Ldjt$a;)Z	a	canReceiveVibration
		p	1		world
		p	2		pos
		p	3		event
		p	4		emitter
	m	()Ldjx;	b	getPositionSource
	m	()Z	d	canTriggerAvoidVibration
	m	()V	e	onDataChanged
	m	()Z	f	requiresAdjacentChunksToBeTicking
	f	Ldjx;	a	positionSource
	f	I	b	LISTENER_RANGE
	f	Lgw;	c	blockPos
	f	Ldea;	d	this$0
c	deb	net/minecraft/world/level/block/entity/SculkShriekerBlockEntity
	m	(Lgw;Ldfj;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(I)V	a	lambda$tryToWarn$3
		p	1		warningLevel
	m	(Lakq;)V	a	tryRespond
		p	1		world
	m	(Lakq;Lakr;)V	a	tryShriek
		p	1		world
		p	2		player
	m	(Lakq;Lbiq;)V	a	shriek
		p	1		world
		p	2		entity
	m	(Lbiq;)Lakr;	a	tryGetPlayer
		p	0		entity
	m	(Ldkc$a;)V	a	lambda$load$1
		p	1		vibrationListener
	m	(Lit/unimi/dsi/fastutil/ints/Int2ObjectOpenHashMap;)V	a	lambda$static$0
		p	0		warningSounds
	m	(Lqw;)V	a	load
		p	1		nbt
	m	(Lqw;Lrq;)V	a	lambda$saveAdditional$2
	m	(Lakq;)Z	b	canRespond
		p	1		world
	m	(Lakq;Lakr;)Z	b	tryToWarn
		p	1		world
		p	2		player
	m	(Lcpv;)V	b	playWardenReplySound
		p	1		world
	m	(Lqw;)V	b	saveAdditional
		p	1		nbt
	m	()Ldkc$b;	c	getListener
	m	(Lakq;)Z	c	trySummonWarden
		p	1		world
	m	()Ldjv;	d	getListener
	m	()Ldkc$a;	gf	getVibrationData
	m	()Ldkc$d;	gg	getVibrationUser
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	I	c	WARNING_SOUND_RADIUS
	f	I	d	WARDEN_SPAWN_ATTEMPTS
	f	I	e	WARDEN_SPAWN_RANGE_XZ
	f	I	g	WARDEN_SPAWN_RANGE_Y
	f	I	h	DARKNESS_RADIUS
	f	I	i	SHRIEKING_TICKS
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	j	SOUND_BY_LEVEL
	f	I	k	warningLevel
	f	Ldkc$d;	l	vibrationUser
	f	Ldkc$a;	m	vibrationData
	f	Ldkc$b;	n	vibrationListener
c	deb$a	net/minecraft/world/level/block/entity/SculkShriekerBlockEntity$VibrationUser
	m	()I	a	getListenerRadius
	m	(Lakq;Lgw;Ldjt;Lbiq;Lbiq;F)V	a	onReceiveVibration
		p	1		world
		p	2		pos
		p	3		event
		p	4		sourceEntity
		p	5		entity
		p	6		distance
	m	(Lakq;Lgw;Ldjt;Ldjt$a;)Z	a	canReceiveVibration
		p	1		world
		p	2		pos
		p	3		event
		p	4		emitter
	m	()Ldjx;	b	getPositionSource
	m	()Laqh;	c	getListenableEvents
	m	()V	e	onDataChanged
	m	()Z	f	requiresAdjacentChunksToBeTicking
	f	Ldeb;	a	this$0
	f	I	b	LISTENER_RADIUS
	f	Ldjx;	c	positionSource
c	dec	net/minecraft/world/level/block/entity/ShulkerBoxBlockEntity
	m	(Lcht;Lgw;Ldfj;)V	<init>	<init>
		p	1		color
		p	2		pos
		p	3		state
	m	(Lgw;Ldfj;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(F)F	a	getProgress
		p	1		delta
	m	(ILcbt;)Lcel;	a	createMenu
		p	1		syncId
		p	2		playerInventory
	m	(ILcjf;Lha;)Z	a	canPlaceItemThroughFace
		p	1		slot
		p	2		stack
		p	3		dir
	m	(Lcpv;Lgw;Ldfj;Ldec;)V	a	tick
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Ldfj;)Lehi;	a	getBoundingBox
		p	1		state
	m	(Lha;)[I	a	getSlotsForFace
		p	1		side
	m	(Lhn;)V	a	setItems
		p	1		list
	m	(Lqw;)V	a	load
		p	1		nbt
	m	(II)Z	a_	triggerEvent
		p	1		type
		p	2		data
	m	()I	b	getContainerSize
	m	(ILcjf;Lha;)Z	b	canTakeItemThroughFace
		p	1		slot
		p	2		stack
		p	3		dir
	m	(Lcpv;Lgw;Ldfj;)V	b	updateAnimation
		p	1		world
		p	2		pos
		p	3		state
	m	(Lqw;)V	b	saveAdditional
		p	1		nbt
	m	(Lcbu;)V	c	stopOpen
		p	1		player
	m	(Lcpv;Lgw;Ldfj;)V	c	moveCollidedEntities
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcpv;Lgw;Ldfj;)V	d	doNeighborUpdates
		p	0		world
		p	1		pos
		p	2		state
	m	(Lcbu;)V	d_	startOpen
		p	1		player
	m	()Lhn;	f	getItems
	m	(Lqw;)V	f	loadFromTag
		p	1		nbt
	m	()Ltl;	g	getDefaultName
	m	()Ldec$a;	i	getAnimationStatus
	m	()Lcht;	j	getColor
	m	()Z	v	isClosed
	f	I	c	COLUMNS
	f	I	f	ROWS
	f	I	g	CONTAINER_SIZE
	f	I	j	EVENT_SET_OPEN_COUNT
	f	I	k	OPENING_TICK_LENGTH
	f	F	l	MAX_LID_HEIGHT
	f	F	m	MAX_LID_ROTATION
	f	Ljava/lang/String;	n	ITEMS_TAG
	f	[I	r	SLOTS
	f	Lhn;	s	itemStacks
	f	I	t	openCount
	f	Ldec$a;	u	animationStatus
	f	F	v	progress
	f	F	w	progressOld
	f	Lcht;	x	color
c	dec$1	net/minecraft/world/level/block/entity/ShulkerBoxBlockEntity$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$entity$ShulkerBoxBlockEntity$AnimationStatus
c	dec$a	net/minecraft/world/level/block/entity/ShulkerBoxBlockEntity$AnimationStatus
	m	()[Ldec$a;	a	$values
	f	Ldec$a;	a	CLOSED
	f	Ldec$a;	b	OPENING
	f	Ldec$a;	c	OPENED
	f	Ldec$a;	d	CLOSING
	f	[Ldec$a;	e	$VALUES
c	ded	net/minecraft/world/level/block/entity/SignBlockEntity
	m	(Ldcx;Lgw;Ldfj;)V	<init>	<init>
		p	1		type
		p	2		pos
		p	3		state
	m	(Lgw;Ldfj;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(Lcbu;)Z	a	isFacingFrontText
		p	1		player
	m	(Lcbu;Lcpv;Lgw;)Ldt;	a	createCommandSourceStack
		p	0		player
		p	1		world
		p	2		pos
	m	(Lcbu;Lcpv;Lgw;Z)Z	a	executeClickCommandsIfPresent
		p	1		player
		p	2		world
		p	3		pos
		p	4		front
	m	(Lcbu;Ljava/util/List;Ldee;)Ldee;	a	setMessages
		p	1		player
		p	2		messages
		p	3		text
	m	(Lcbu;ZLjava/util/List;)V	a	updateSignText
		p	1		player
		p	2		front
		p	3		messages
	m	(Lcpv;Lgw;Ldfj;Lded;)V	a	tick
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Lded;Lcpv;Ljava/util/UUID;)V	a	clearInvalidPlayerWhoMayEdit
		p	1		blockEntity
		p	2		world
		p	3		uuid
	m	(Ldee;)Ldee;	a	loadLines
		p	1		signText
	m	(Ldee;Z)Z	a	setText
		p	1		text
		p	2		front
	m	(Ljava/util/UUID;)V	a	setAllowedPlayerEditor
		p	1		editor
	m	(Ljava/util/function/UnaryOperator;Z)Z	a	updateText
		p	1		textChanger
		p	2		front
	m	(Lqw;)V	a	load
		p	1		nbt
	m	(Lqw;Lrq;)V	a	lambda$saveAdditional$1
		p	1		backText
	m	(Ltl;)Ltl;	a	loadLine
		p	1		text
	m	(Z)Ldee;	a	getText
		p	1		front
	m	(ZLcbu;)Z	a	canExecuteClickCommands
		p	1		front
		p	2		player
	m	()Lqw;	as_	getUpdateTag
	m	(Lcbu;)Ldee;	b	getTextFacingPlayer
		p	1		player
	m	(Lcbu;Ljava/util/List;Ldee;)Ldee;	b	lambda$updateSignText$4
		p	3		text
	m	(Ldee;)Z	b	setBackText
		p	1		backText
	m	(Ljava/util/UUID;)Z	b	playerIsTooFarAwayToEdit
		p	1		uuid
	m	(Lqw;)V	b	saveAdditional
		p	1		nbt
	m	(Lqw;Lrq;)V	b	lambda$saveAdditional$0
		p	1		frontText
	m	(Z)Z	b	setWaxed
		p	1		waxed
	m	()I	c	getTextLineHeight
	m	(Ldee;)Z	c	setFrontText
		p	1		frontText
	m	()I	d	getMaxTextLineWidth
	m	(Ldee;)V	d	lambda$load$3
		p	1		signText
	m	(Ldee;)V	e	lambda$load$2
		p	1		signText
	m	()Ldee;	f	createDefaultSignText
	m	()Ldee;	g	getFrontText
	m	()Lvd;	h	getUpdatePacket
	m	()Ldee;	i	getBackText
	m	()Lxd;	j	getUpdatePacket
	m	()Z	t	onlyOpCanSetNbt
	m	()Ljava/util/UUID;	v	getPlayerWhoMayEdit
	m	()Z	w	isWaxed
	m	()V	x	markUpdated
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	I	b	MAX_TEXT_LINE_WIDTH
	f	I	c	TEXT_LINE_HEIGHT
	f	Ljava/util/UUID;	d	playerWhoMayEdit
	f	Ldee;	e	frontText
	f	Ldee;	f	backText
	f	Z	g	isWaxed
c	dee	net/minecraft/world/level/block/entity/SignText
	m	([Ltl;[Ltl;Lcht;Z)V	<init>	<init>
		p	1		messages
		p	2		filteredMessages
		p	3		color
		p	4		glowing
	m	()Z	a	hasGlowingText
	m	(ILtl;)Ldee;	a	setMessage
		p	1		line
		p	2		message
	m	(ILtl;Ltl;)Ldee;	a	setMessage
		p	1		line
		p	2		message
		p	3		filteredMessage
	m	(IZ)Ltl;	a	getMessage
		p	1		line
		p	2		filtered
	m	(Lcbu;)Z	a	hasMessage
		p	1		player
	m	(Lcht;)Ldee;	a	setColor
		p	1		color
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$6
		p	0		instance
	m	(Ldee;)Ljava/lang/Boolean;	a	lambda$static$5
		p	0		signText
	m	(Ljava/util/List;)Lcom/mojang/serialization/DataResult;	a	lambda$static$1
		p	0		messages
	m	(Ltl;)Z	a	lambda$hasMessage$7
		p	0		text
	m	(Z)Ldee;	a	setHasGlowingText
		p	1		glowing
	m	(ZLjava/util/function/Function;)[Larj;	a	getRenderMessages
		p	1		filtered
		p	2		messageOrderer
	m	([Ltl;)Ljava/util/List;	a	lambda$static$2
		p	0		messages
	m	([Ltl;Ljava/util/Optional;Lcht;Z)Ldee;	a	load
		p	0		messages
		p	1		filteredMessages
		p	2		color
		p	3		glowing
	m	()Lcht;	b	getColor
	m	(Lcbu;)Z	b	hasAnyClickCommands
		p	1		player
	m	(Ldee;)Lcht;	b	lambda$static$4
		p	0		signText
	m	(Ljava/util/List;)[Ltl;	b	lambda$static$0
	m	(Z)[Ltl;	b	getMessages
		p	1		filtered
	m	()[Ltl;	c	emptyMessages
	m	(Ldee;)[Ltl;	c	lambda$static$3
		p	0		signText
	m	()Ljava/util/Optional;	d	filteredMessages
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	I	b	LINES
	f	Lcom/mojang/serialization/Codec;	c	LINES_CODEC
	f	[Ltl;	d	messages
	f	[Ltl;	e	filteredMessages
	f	Lcht;	f	color
	f	Z	g	hasGlowingText
	f	[Larj;	h	renderMessages
	f	Z	i	renderMessagedFiltered
c	def	net/minecraft/world/level/block/entity/SkullBlockEntity
	m	(Lgw;Ldfj;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(F)F	a	getAnimation
		p	1		tickDelta
	m	(Lafo;Ljava/util/concurrent/Executor;)V	a	setup
		p	0		apiServices
		p	1		executor
	m	(Lcom/mojang/authlib/GameProfile;)V	a	setOwner
		p	1		owner
	m	(Lcpv;Lgw;Ldfj;Ldef;)V	a	animation
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Ljava/lang/Runnable;)V	a	lambda$static$0
		p	0		runnable
	m	(Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;	a	fetchGameProfile
		p	0		name
	m	(Ljava/util/Optional;)Ljava/util/Optional;	a	lambda$fetchGameProfile$4
		p	0		profile
	m	(Lqw;)V	a	load
		p	1		nbt
	m	(Lqw;Ljava/lang/String;)V	a	resolveGameProfile
		p	0		nbt
		p	1		name
	m	(Lqw;Ljava/lang/String;Ljava/util/Optional;)V	a	lambda$resolveGameProfile$2
		p	2		profile
	m	()Lqw;	as_	getUpdateTag
	m	(Lcom/mojang/authlib/GameProfile;)Ljava/util/concurrent/CompletableFuture;	b	fillProfileTextures
		p	0		profile
	m	(Ljava/util/Optional;)Ljava/util/concurrent/CompletionStage;	b	lambda$fetchGameProfile$3
		p	0		profile
	m	(Lqw;)V	b	saveAdditional
		p	1		nbt
	m	()V	c	clear
	m	(Lcom/mojang/authlib/GameProfile;)Z	c	hasTextures
		p	0		profile
	m	(Ljava/util/Optional;)V	c	lambda$updateOwnerProfile$1
		p	1		profile
	m	()Lcom/mojang/authlib/GameProfile;	d	getOwnerProfile
	m	(Lcom/mojang/authlib/GameProfile;)Ljava/util/Optional;	d	lambda$fillProfileTextures$5
	m	(Lqw;)Lcom/mojang/authlib/GameProfile;	d	getOrResolveGameProfile
		p	0		nbt
	m	(Lqw;)V	e	resolveGameProfile
		p	0		nbt
	m	()Laew;	f	getNoteBlockSound
	m	()Lxd;	g	getUpdatePacket
	m	()Lvd;	h	getUpdatePacket
	m	()V	i	updateOwnerProfile
	f	Ljava/lang/String;	a	TAG_SKULL_OWNER
	f	Ljava/lang/String;	b	TAG_NOTE_BLOCK_SOUND
	f	Laoc;	c	profileCache
	f	Lcom/mojang/authlib/minecraft/MinecraftSessionService;	d	sessionService
	f	Ljava/util/concurrent/Executor;	e	mainThreadExecutor
	f	Ljava/util/concurrent/Executor;	f	CHECKED_MAIN_THREAD_EXECUTOR
	f	Lcom/mojang/authlib/GameProfile;	g	owner
	f	Laew;	h	noteBlockSound
	f	I	i	animationTickCount
	f	Z	j	isAnimating
c	deg	net/minecraft/world/level/block/entity/SmokerBlockEntity
	m	(Lgw;Ldfj;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(ILcbt;)Lcel;	a	createMenu
		p	1		syncId
		p	2		playerInventory
	m	(Lcjf;)I	a	getBurnDuration
		p	1		fuel
	m	()Ltl;	g	getDefaultName
c	deh	net/minecraft/world/level/block/entity/SpawnerBlockEntity
	m	(Lgw;Ldfj;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(Lbiu;Lasc;)V	a	setEntityId
		p	1		entityType
		p	2		random
	m	(Lcpv;Lgw;Ldfj;Ldeh;)V	a	clientTick
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Lqw;)V	a	load
		p	1		nbt
	m	(II)Z	a_	triggerEvent
		p	1		type
		p	2		data
	m	()Lqw;	as_	getUpdateTag
	m	(Lcpv;Lgw;Ldfj;Ldeh;)V	b	serverTick
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Lqw;)V	b	saveAdditional
		p	1		nbt
	m	()Lxd;	c	getUpdatePacket
	m	()Lcox;	d	getSpawner
	m	()Lvd;	h	getUpdatePacket
	m	()Z	t	onlyOpCanSetNbt
	f	Lcox;	a	spawner
c	deh$1	net/minecraft/world/level/block/entity/SpawnerBlockEntity$1
	m	(Lcpv;Lgw;I)V	a	broadcastEvent
		p	1		world
		p	2		pos
		p	3		status
	m	(Lcpv;Lgw;Lcqm;)V	a	setNextSpawnData
		p	1		world
		p	2		pos
		p	3		spawnEntry
	f	Ldeh;	a	this$0
c	dei	net/minecraft/world/level/block/entity/StructureBlockEntity
	m	(Lgw;Ldfj;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	()F	A	getIntegrity
	m	()J	B	getSeed
	m	()Z	C	detectSize
	m	()Z	D	saveStructure
	m	()V	E	unloadStructure
	m	()Z	F	isStructureLoadable
	m	()Z	G	isPowered
	m	()Z	H	getShowAir
	m	()Z	I	getShowBoundingBox
	m	()V	J	updateBlockState
	m	(F)V	a	setIntegrity
		p	1		integrity
	m	(J)V	a	setSeed
		p	1		seed
	m	(Laew;)V	a	setStructureName
		p	1		templateName
	m	(Lakq;)Z	a	loadStructure
		p	1		world
	m	(Lakq;Lgw;)V	a	lambda$loadStructure$5
		p	0		world
		p	1		pos
	m	(Lakq;Z)Z	a	loadStructure
		p	1		world
		p	2		interactive
	m	(Lakq;ZLdzb;)Z	a	loadStructure
		p	1		world
		p	2		interactive
		p	3		template
	m	(Lbjg;)V	a	createdBy
		p	1		entity
	m	(Lcbu;)Z	a	usedBy
		p	1		player
	m	(Lcxq;)V	a	setMirror
		p	1		mirror
	m	(Lczh;)V	a	setRotation
		p	1		rotation
	m	(Ldcv;)Ldei;	a	lambda$getRelatedCorners$3
		p	0		blockEntity
	m	(Ldei;)Z	a	lambda$getRelatedCorners$4
		p	1		blockEntity
	m	(Ldgt;)V	a	setMode
		p	1		mode
	m	(Lgw;)V	a	setStructurePos
		p	1		offset
	m	(Lgw;Ldva;)Z	a	lambda$detectSize$0
		p	2		box
	m	(Lgw;Lgw;)Ljava/util/stream/Stream;	a	getRelatedCorners
		p	1		start
		p	2		end
	m	(Lgw;Ljava/util/stream/Stream;)Ljava/util/Optional;	a	calculateEnclosingBoundingBox
		p	0		pos
		p	1		corners
	m	(Lhy;)V	a	setStructureSize
		p	1		size
	m	(Ljava/lang/String;)V	a	setStructureName
		p	1		templateName
	m	(Lqw;)V	a	load
		p	1		nbt
	m	(Z)V	a	setIgnoreEntities
		p	1		ignoreEntities
	m	()Lqw;	as_	getUpdateTag
	m	(J)Lasc;	b	createRandom
		p	0		seed
	m	(Ldcv;)Z	b	lambda$getRelatedCorners$2
		p	0		blockEntity
	m	(Lgw;)Z	b	lambda$getRelatedCorners$1
		p	1		pos
	m	(Ljava/lang/String;)V	b	setMetaData
		p	1		metadata
	m	(Lqw;)V	b	saveAdditional
		p	1		nbt
	m	(Z)Z	b	saveStructure
		p	1		interactive
	m	()Lxd;	c	getUpdatePacket
	m	(Z)V	c	setPowered
		p	1		powered
	m	()Ljava/lang/String;	d	getStructureName
	m	(Z)V	d	setShowAir
		p	1		showAir
	m	(Z)V	e	setShowBoundingBox
		p	1		showBoundingBox
	m	()Ljava/lang/String;	f	getStructurePath
	m	()Z	g	hasStructureName
	m	()Lvd;	h	getUpdatePacket
	m	()Lgw;	i	getStructurePos
	m	()Lhy;	j	getStructureSize
	m	()Lcxq;	v	getMirror
	m	()Lczh;	w	getRotation
	m	()Ljava/lang/String;	x	getMetaData
	m	()Ldgt;	y	getMode
	m	()Z	z	isIgnoreEntities
	f	I	a	MAX_OFFSET_PER_AXIS
	f	I	b	MAX_SIZE_PER_AXIS
	f	Ljava/lang/String;	c	AUTHOR_TAG
	f	I	d	SCAN_CORNER_BLOCKS_RANGE
	f	Laew;	e	structureName
	f	Ljava/lang/String;	f	author
	f	Ljava/lang/String;	g	metaData
	f	Lgw;	h	structurePos
	f	Lhy;	i	structureSize
	f	Lcxq;	j	mirror
	f	Lczh;	k	rotation
	f	Ldgt;	l	mode
	f	Z	m	ignoreEntities
	f	Z	n	powered
	f	Z	r	showAir
	f	Z	s	showBoundingBox
	f	F	t	integrity
	f	J	u	seed
c	dei$a	net/minecraft/world/level/block/entity/StructureBlockEntity$UpdateType
	m	()[Ldei$a;	a	$values
	f	Ldei$a;	a	UPDATE_DATA
	f	Ldei$a;	b	SAVE_AREA
	f	Ldei$a;	c	LOAD_AREA
	f	Ldei$a;	d	SCAN_AREA
	f	[Ldei$a;	e	$VALUES
c	dej	net/minecraft/world/level/block/entity/TheEndGatewayBlockEntity
	m	(Lgw;Ldfj;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(F)F	a	getSpawnPercent
		p	1		tickDelta
	m	(Lakq;Lehn;)Z	a	isChunkEmpty
		p	0		world
		p	1		pos
	m	(Lakq;Lgw;)Lgw;	a	findOrCreateValidTeleportPos
		p	0		world
		p	1		pos
	m	(Lakq;Lgw;Ldpz;)V	a	spawnGatewayPortal
		p	0		world
		p	1		pos
		p	2		config
	m	(Lakq;Lgw;Lhe$c;)V	a	lambda$findOrCreateValidTeleportPos$1
	m	(Lbiq;)Z	a	canEntityTeleport
		p	0		entity
	m	(Lcpb;Lgw;IZ)Lgw;	a	findTallestBlock
		p	0		world
		p	1		pos
		p	2		searchRadius
		p	3		force
	m	(Lcpv;Lehn;)Ldhq;	a	getChunk
		p	0		world
		p	1		pos
	m	(Lcpv;Lgw;)Lgw;	a	findExitPosition
		p	0		world
		p	1		pos
	m	(Lcpv;Lgw;Ldfj;Lbiq;Ldej;)V	a	teleportEntity
		p	0		world
		p	1		pos
		p	2		state
		p	3		entity
		p	4		blockEntity
	m	(Lcpv;Lgw;Ldfj;Ldej;)V	a	beamAnimationTick
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Ldhq;)Lgw;	a	findValidSpawnInChunk
		p	0		chunk
	m	(Lgw;Z)V	a	setExitPosition
		p	1		pos
		p	2		exactTeleport
	m	(Lha;)Z	a	shouldRenderFace
		p	1		direction
	m	(Lhq;)Ljava/util/Optional;	a	lambda$findOrCreateValidTeleportPos$0
	m	(Lqw;)V	a	load
		p	1		nbt
	m	(II)Z	a_	triggerEvent
		p	1		type
		p	2		data
	m	()Lqw;	as_	getUpdateTag
	m	(F)F	b	getCooldownPercent
		p	1		tickDelta
	m	(Lakq;Lgw;)Lehn;	b	findExitPortalXZPosTentative
		p	0		world
		p	1		pos
	m	(Lcpv;Lgw;Ldfj;Ldej;)V	b	teleportTick
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Lqw;)V	b	saveAdditional
		p	1		nbt
	m	()Z	c	isSpawning
	m	(Lcpv;Lgw;Ldfj;Ldej;)V	c	triggerCooldown
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	()Z	d	isCoolingDown
	m	()Lxd;	f	getUpdatePacket
	m	()I	g	getParticleAmount
	m	()Lvd;	h	getUpdatePacket
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	I	b	SPAWN_TIME
	f	I	c	COOLDOWN_TIME
	f	I	d	ATTENTION_INTERVAL
	f	I	e	EVENT_COOLDOWN
	f	I	f	GATEWAY_HEIGHT_ABOVE_SURFACE
	f	J	g	age
	f	I	h	teleportCooldown
	f	Lgw;	i	exitPortal
	f	Z	j	exactTeleport
c	dek	net/minecraft/world/level/block/entity/TheEndPortalBlockEntity
	m	(Ldcx;Lgw;Ldfj;)V	<init>	<init>
		p	1		type
		p	2		pos
		p	3		state
	m	(Lgw;Ldfj;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(Lha;)Z	a	shouldRenderFace
		p	1		direction
c	del	net/minecraft/world/level/block/entity/TickingBlockEntity
	m	()V	a	tick
	m	()Z	b	isRemoved
	m	()Lgw;	c	getPos
	m	()Ljava/lang/String;	d	getType
c	dem	net/minecraft/world/level/block/entity/TrappedChestBlockEntity
	m	(Lgw;Ldfj;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(Lcpv;Lgw;Ldfj;II)V	a	signalOpenCount
		p	1		world
		p	2		pos
		p	3		state
		p	4		oldViewerCount
		p	5		newViewerCount
c	den	net/minecraft/world/level/block/entity/package-info
c	deo	net/minecraft/world/level/block/grower/AbstractMegaTreeGrower
	m	(Lakq;Ldhg;Lgw;Ldfj;Lasc;)Z	a	growTree
		p	1		world
		p	2		chunkGenerator
		p	3		pos
		p	4		state
		p	5		random
	m	(Lakq;Ldhg;Lgw;Ldfj;Lasc;II)Z	a	placeMega
		p	1		world
		p	2		chunkGenerator
		p	3		pos
		p	4		state
		p	5		random
		p	6		x
		p	7		z
	m	(Lasc;)Laev;	a	getConfiguredMegaFeature
		p	1		random
	m	(Ldfj;Lcpb;Lgw;II)Z	a	isTwoByTwoSapling
		p	0		state
		p	1		world
		p	2		pos
		p	3		x
		p	4		z
c	dep	net/minecraft/world/level/block/grower/AbstractTreeGrower
	m	(Lakq;Ldhg;Lgw;Ldfj;Lasc;)Z	a	growTree
		p	1		world
		p	2		chunkGenerator
		p	3		pos
		p	4		state
		p	5		random
	m	(Lasc;Z)Laev;	a	getConfiguredFeature
		p	1		random
		p	2		bees
	m	(Lcpw;Lgw;)Z	a	hasFlowers
		p	1		world
		p	2		pos
c	deq	net/minecraft/world/level/block/grower/AcaciaTreeGrower
	m	(Lasc;Z)Laev;	a	getConfiguredFeature
		p	1		random
		p	2		bees
c	der	net/minecraft/world/level/block/grower/AzaleaTreeGrower
	m	(Lasc;Z)Laev;	a	getConfiguredFeature
		p	1		random
		p	2		bees
c	des	net/minecraft/world/level/block/grower/BirchTreeGrower
	m	(Lasc;Z)Laev;	a	getConfiguredFeature
		p	1		random
		p	2		bees
c	det	net/minecraft/world/level/block/grower/CherryTreeGrower
	m	(Lasc;Z)Laev;	a	getConfiguredFeature
		p	1		random
		p	2		bees
c	deu	net/minecraft/world/level/block/grower/DarkOakTreeGrower
	m	(Lasc;)Laev;	a	getConfiguredMegaFeature
		p	1		random
	m	(Lasc;Z)Laev;	a	getConfiguredFeature
		p	1		random
		p	2		bees
c	dev	net/minecraft/world/level/block/grower/JungleTreeGrower
	m	(Lasc;)Laev;	a	getConfiguredMegaFeature
		p	1		random
	m	(Lasc;Z)Laev;	a	getConfiguredFeature
		p	1		random
		p	2		bees
c	dew	net/minecraft/world/level/block/grower/MangroveTreeGrower
	m	(F)V	<init>	<init>
		p	1		tallChance
	m	(Lasc;Z)Laev;	a	getConfiguredFeature
		p	1		random
		p	2		bees
	f	F	a	tallProbability
c	dex	net/minecraft/world/level/block/grower/OakTreeGrower
	m	(Lasc;Z)Laev;	a	getConfiguredFeature
		p	1		random
		p	2		bees
c	dey	net/minecraft/world/level/block/grower/SpruceTreeGrower
	m	(Lasc;)Laev;	a	getConfiguredMegaFeature
		p	1		random
	m	(Lasc;Z)Laev;	a	getConfiguredFeature
		p	1		random
		p	2		bees
c	dez	net/minecraft/world/level/block/grower/package-info
c	dfa	net/minecraft/world/level/block/package-info
c	dfb	net/minecraft/world/level/block/piston/MovingPistonBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lcpb;Lgw;)Ldff;	a	getBlockEntity
		p	1		world
		p	2		pos
	m	(Lcpb;Lgw;Ldfj;)Lcjf;	a	getCloneItemStack
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcpv;Ldfj;Ldcx;)Ldcw;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Lcpw;Lgw;Ldfj;)V	a	destroy
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldfj;Lcpb;Lgw;Lebc;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpv;Lgw;Lcbu;Lbgx;Lehj;)Lbgy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldfj;Lcpv;Lgw;Ldfj;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Ldfj;Lcxq;)Ldfj;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldfj;Lczh;)Ldfj;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldfj;Lecw$a;)Ljava/util/List;	a	getDrops
		p	1		state
		p	2		builder
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lgw;Ldfj;)Ldcv;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Lgw;Ldfj;Ldfj;Lha;ZZ)Ldcv;	a	newMovingBlockEntity
		p	0		pos
		p	1		state
		p	2		pushedBlock
		p	3		facing
		p	4		extending
		p	5		source
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	c	getCollisionShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	f	Ldgd;	a	FACING
	f	Ldgh;	b	TYPE
c	dfc	net/minecraft/world/level/block/piston/PistonBaseBlock
	m	(ZLdfi$d;)V	<init>	<init>
		p	1		sticky
		p	2		settings
	m	(Lcln;)Ldfj;	a	getStateForPlacement
		p	1		ctx
	m	(Lcpv;Lgw;Ldfj;)V	a	checkIfExtend
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcpv;Lgw;Ldfj;Lbjg;Lcjf;)V	a	setPlacedBy
		p	1		world
		p	2		pos
		p	3		state
		p	4		placer
		p	5		itemStack
	m	(Lcpv;Lgw;Lha;Z)Z	a	moveBlocks
		p	1		world
		p	2		pos
		p	3		dir
		p	4		retract
	m	(Lcql;Lgw;Lha;)Z	a	getNeighborSignal
		p	1		world
		p	2		pos
		p	3		pistonFace
	m	(Ldfj;Lcpb;Lgw;Lebc;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpv;Lgw;II)Z	a	triggerEvent
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
		p	5		data
	m	(Ldfj;Lcpv;Lgw;Lcsv;Lgw;Z)V	a	neighborChanged
		p	1		state
		p	2		world
		p	3		pos
		p	4		sourceBlock
		p	5		sourcePos
		p	6		notify
	m	(Ldfj;Lcpv;Lgw;Lha;ZLha;)Z	a	isPushable
		p	0		state
		p	1		world
		p	2		pos
		p	3		direction
		p	4		canBreak
		p	5		pistonDir
	m	(Ldfj;Lcxq;)Ldfj;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldfj;Lczh;)Ldfj;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldfj;Lcpv;Lgw;Ldfj;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	m	(Ldfj;)Z	g_	useShapeForLightOcclusion
		p	1		state
	f	Ldga;	b	EXTENDED
	f	I	c	TRIGGER_EXTEND
	f	I	d	TRIGGER_CONTRACT
	f	I	e	TRIGGER_DROP
	f	F	f	PLATFORM_THICKNESS
	f	Leig;	g	EAST_AABB
	f	Leig;	h	WEST_AABB
	f	Leig;	i	SOUTH_AABB
	f	Leig;	j	NORTH_AABB
	f	Leig;	k	UP_AABB
	f	Leig;	l	DOWN_AABB
	f	Z	m	isSticky
c	dfc$1	net/minecraft/world/level/block/piston/PistonBaseBlock$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
	f	[I	b	$SwitchMap$net$minecraft$world$level$material$PushReaction
c	dfd	net/minecraft/world/level/block/piston/PistonHeadBlock
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lcpb;Lgw;Ldfj;)Lcjf;	a	getCloneItemStack
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcpv;Lgw;Ldfj;Lcbu;)V	a	playerWillDestroy
		p	1		world
		p	2		pos
		p	3		state
		p	4		player
	m	(Ldfj;Lcpb;Lgw;Lebc;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpv;Lgw;Lcsv;Lgw;Z)V	a	neighborChanged
		p	1		state
		p	2		world
		p	3		pos
		p	4		sourceBlock
		p	5		sourcePos
		p	6		notify
	m	(Ldfj;Lcpv;Lgw;Ldfj;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Ldfj;Lcpy;Lgw;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lcxq;)Ldfj;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldfj;Lczh;)Ldfj;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldfj;Ldfj;)Z	a	isFittingBase
		p	1		headState
		p	2		pistonState
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldfk$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lha;Z)Leig;	a	calculateShape
		p	0		direction
		p	1		shortHead
	m	(Z)[Leig;	a	makeShapes
		p	0		shortHead
	m	(ZLha;)Leig;	a	lambda$makeShapes$0
		p	1		direction
	m	(I)[Leig;	b	lambda$makeShapes$1
	m	(Ldfj;)Z	g_	useShapeForLightOcclusion
		p	1		state
	f	Leig;	D	DOWN_ARM_AABB
	f	Leig;	E	SOUTH_ARM_AABB
	f	Leig;	F	NORTH_ARM_AABB
	f	Leig;	G	EAST_ARM_AABB
	f	Leig;	H	WEST_ARM_AABB
	f	Leig;	I	SHORT_UP_ARM_AABB
	f	Leig;	J	SHORT_DOWN_ARM_AABB
	f	Leig;	K	SHORT_SOUTH_ARM_AABB
	f	Leig;	L	SHORT_NORTH_ARM_AABB
	f	Leig;	M	SHORT_EAST_ARM_AABB
	f	Leig;	N	SHORT_WEST_ARM_AABB
	f	[Leig;	O	SHAPES_SHORT
	f	[Leig;	P	SHAPES_LONG
	f	Ldgh;	b	TYPE
	f	Ldga;	c	SHORT
	f	F	d	PLATFORM
	f	Leig;	e	EAST_AABB
	f	Leig;	f	WEST_AABB
	f	Leig;	g	SOUTH_AABB
	f	Leig;	h	NORTH_AABB
	f	Leig;	i	UP_AABB
	f	Leig;	j	DOWN_AABB
	f	F	k	AABB_OFFSET
	f	F	l	EDGE_MIN
	f	F	m	EDGE_MAX
	f	Leig;	n	UP_ARM_AABB
c	dfd$1	net/minecraft/world/level/block/piston/PistonHeadBlock$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	dfe	net/minecraft/world/level/block/piston/PistonMath
	m	(Lehi;Lha;D)Lehi;	a	getMovementArea
		p	0		box
		p	1		direction
		p	2		length
c	dfe$1	net/minecraft/world/level/block/piston/PistonMath$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	dff	net/minecraft/world/level/block/piston/PistonMovingBlockEntity
	m	(Lgw;Ldfj;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(Lgw;Ldfj;Ldfj;Lha;ZZ)V	<init>	<init>
		p	1		pos
		p	2		state
		p	3		pushedBlock
		p	4		facing
		p	5		extending
		p	6		source
	m	(F)F	a	getProgress
		p	1		tickDelta
	m	(Lcpb;Lgw;)Leig;	a	getCollisionShape
		p	1		world
		p	2		pos
	m	(Lcpv;)V	a	setLevel
		p	1		world
	m	(Lcpv;Lgw;FLdff;)V	a	moveCollidedEntities
		p	0		world
		p	1		pos
		p	3		blockEntity
	m	(Lcpv;Lgw;Ldfj;Ldff;)V	a	tick
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Lehi;Lbiq;Lgw;)Z	a	matchesStickyCritera
		p	0		box
		p	1		entity
		p	2		pos
	m	(Lehi;Lgw;Lbiq;)Z	a	lambda$moveStuckEntities$1
		p	2		entity
	m	(Lehi;Lha;Lehi;)D	a	getMovement
	m	(Lgw;Lbiq;Lha;D)V	a	fixEntityWithinPistonBase
		p	0		pos
		p	1		entity
		p	2		direction
		p	3		amount
	m	(Lgw;Lehi;Ldff;)Lehi;	a	moveByPositionAndProgress
		p	0		pos
		p	1		box
		p	2		blockEntity
	m	(Lha;Lbiq;DLha;)V	a	moveEntityByPiston
		p	0		direction
		p	1		entity
		p	2		distance
		p	4		movementDirection
	m	(Lqw;)V	a	load
		p	1		nbt
	m	()Lqw;	as_	getUpdateTag
	m	(F)F	b	getXOff
		p	1		tickDelta
	m	(Lcpv;Lgw;FLdff;)V	b	moveStuckEntities
		p	0		world
		p	1		pos
		p	3		blockEntity
	m	(Lqw;)V	b	saveAdditional
		p	1		nbt
	m	()Z	c	isExtending
	m	(F)F	c	getYOff
		p	1		tickDelta
	m	()Lha;	d	getDirection
	m	(F)F	d	getZOff
		p	1		tickDelta
	m	(F)F	e	getExtendedProgress
		p	1		progress
	m	()Z	f	isSourcePiston
	m	()Lha;	g	getMovementDirection
	m	()Ldfj;	i	getMovedState
	m	()V	j	finalTick
	m	()J	v	getLastTicked
	m	()Ldfj;	w	getCollisionRelatedBlockState
	m	()Z	x	isStickyForEntities
	m	()Lha;	y	lambda$static$0
	f	D	a	TICK_MOVEMENT
	f	I	b	TICKS_TO_EXTEND
	f	D	c	PUSH_OFFSET
	f	Ldfj;	d	movedState
	f	Lha;	e	direction
	f	Z	f	extending
	f	Z	g	isSourcePiston
	f	Ljava/lang/ThreadLocal;	h	NOCLIP
	f	F	i	progress
	f	F	j	progressO
	f	J	k	lastTicked
	f	I	l	deathTicks
c	dff$1	net/minecraft/world/level/block/piston/PistonMovingBlockEntity$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction$Axis
	f	[I	b	$SwitchMap$net$minecraft$core$Direction
c	dfg	net/minecraft/world/level/block/piston/PistonStructureResolver
	m	(Lcpv;Lgw;Lha;Z)V	<init>	<init>
		p	1		world
		p	2		pos
		p	3		dir
		p	4		retracted
	m	()Z	a	resolve
	m	(II)V	a	reorderListAtCollision
		p	1		from
		p	2		to
	m	(Ldfj;)Z	a	isSticky
		p	0		state
	m	(Ldfj;Ldfj;)Z	a	canStickToEachOther
		p	0		state
		p	1		adjacentState
	m	(Lgw;)Z	a	addBranchingBlocks
		p	1		pos
	m	(Lgw;Lha;)Z	a	addBlockLine
		p	1		pos
		p	2		dir
	m	()Lha;	b	getPushDirection
	m	()Ljava/util/List;	c	getToPush
	m	()Ljava/util/List;	d	getToDestroy
	f	I	a	MAX_PUSH_DEPTH
	f	Lcpv;	b	level
	f	Lgw;	c	pistonPos
	f	Z	d	extending
	f	Lgw;	e	startPos
	f	Lha;	f	pushDirection
	f	Ljava/util/List;	g	toPush
	f	Ljava/util/List;	h	toDestroy
	f	Lha;	i	pistonDirection
c	dfh	net/minecraft/world/level/block/piston/package-info
c	dfi	net/minecraft/world/level/block/state/BlockBehaviour
	m	(Ldfi$d;)V	<init>	<init>
		p	1		settings
	m	(Lcpv;Ldfj;Lehj;Lccm;)V	a	onProjectileHit
		p	1		world
		p	2		state
		p	3		hit
		p	4		projectile
	m	(Ldfj;Lakq;Lgw;Lasc;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lakq;Lgw;Lcjf;Z)V	a	spawnAfterBreak
		p	1		state
		p	2		world
		p	3		pos
		p	4		tool
		p	5		dropExperience
	m	(Ldfj;Lcbu;Lcpb;Lgw;)F	a	getDestroyProgress
		p	1		state
		p	2		player
		p	3		world
		p	4		pos
	m	(Ldfj;Lcln;)Z	a	canBeReplaced
		p	1		state
		p	2		context
	m	(Ldfj;Lcpb;Lgw;)Leig;	a	getInteractionShape
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lcpb;Lgw;Lebc;)Z	a	isPathfindable
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpb;Lgw;Lha;)I	a	getSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldfj;Lcpv;Lgw;)I	a	getAnalogOutputSignal
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lcpv;Lgw;II)Z	a	triggerEvent
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
		p	5		data
	m	(Ldfj;Lcpv;Lgw;Lbiq;)V	a	entityInside
		p	1		state
		p	2		world
		p	3		pos
		p	4		entity
	m	(Ldfj;Lcpv;Lgw;Lcbu;)V	a	attack
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
	m	(Ldfj;Lcpv;Lgw;Lcbu;Lbgx;Lehj;)Lbgy;	a	use
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		hit
	m	(Ldfj;Lcpv;Lgw;Lcsv;Lgw;Z)V	a	neighborChanged
		p	1		state
		p	2		world
		p	3		pos
		p	4		sourceBlock
		p	5		sourcePos
		p	6		notify
	m	(Ldfj;Lcpv;Lgw;Ldfj;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Ldfj;Lcpw;Lgw;II)V	a	updateIndirectNeighbourShapes
		p	1		state
		p	2		world
		p	3		pos
		p	4		flags
		p	5		maxUpdateDepth
	m	(Ldfj;Lcpy;Lgw;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lcxq;)Ldfj;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldfj;Lczh;)Ldfj;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldfj;Ldfj;Lha;)Z	a	skipRendering
		p	1		state
		p	2		stateFrom
		p	3		direction
	m	(Ldfj;Leal;)Z	a	canBeReplaced
		p	1		state
		p	2		fluid
	m	(Ldfj;Lecw$a;)Ljava/util/List;	a	getDrops
		p	1		state
		p	2		builder
	m	(Ldfj;Lgw;)J	a	getSeed
		p	1		state
		p	2		pos
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldfj;Lcpb;Lgw;)Z	a_	isCollisionShapeFullBlock
		p	1		state
		p	2		world
		p	3		pos
	m	()F	ap_	getMaxHorizontalOffset
	m	()F	ar_	getMaxVerticalOffset
	m	(Ldfj;Lakq;Lgw;Lasc;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldfj;Lcpb;Lgw;)F	b	getShadeBrightness
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	b	getVisualShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;Lcpb;Lgw;Lha;)I	b	getDirectSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldfj;Lcpv;Lgw;)Lbhb;	b	getMenuProvider
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lcpv;Lgw;Ldfj;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	m	(Ldfj;)Lcza;	b_	getRenderShape
		p	1		state
	m	(Ldfj;Lcpb;Lgw;)Leig;	b_	getBlockSupportShape
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;Lcpb;Lgw;Lehs;)Leig;	c	getCollisionShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldfj;)Leam;	c_	getFluidState
		p	1		state
	m	(Ldfj;)Z	d_	hasAnalogOutputSignal
		p	1		state
	m	(Ldfj;Lcpb;Lgw;)Leig;	f	getOcclusionShape
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;)Z	f_	isSignalSource
		p	1		state
	m	(Ldfj;Lcpb;Lgw;)I	g	getLightBlock
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldfj;)Z	g_	useShapeForLightOcclusion
		p	1		state
	m	(Ldfj;Lcpb;Lgw;)Z	h	isOcclusionShapeFullBlock
		p	1		state
		p	2		world
		p	3		pos
	m	()Lcja;	k	asItem
	m	()Lcec;	m	requiredFeatures
	m	()Lcsv;	p	asBlock
	m	()Laew;	r	getLootTable
	m	()Leaq;	s	defaultMapColor
	m	()F	t	defaultDestroyTime
	f	[Lha;	aD	UPDATE_SHAPE_ORDER
	f	Z	aE	hasCollision
	f	F	aF	explosionResistance
	f	Z	aG	isRandomlyTicking
	f	Ldai;	aH	soundType
	f	F	aI	friction
	f	F	aJ	speedFactor
	f	F	aK	jumpFactor
	f	Z	aL	dynamicShape
	f	Lcec;	aM	requiredFeatures
	f	Ldfi$d;	aN	properties
	f	Laew;	aO	drops
c	dfi$1	net/minecraft/world/level/block/state/BlockBehaviour$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$pathfinder$PathComputationType
	f	[I	b	$SwitchMap$net$minecraft$world$level$block$state$BlockBehaviour$OffsetType
c	dfi$a	net/minecraft/world/level/block/state/BlockBehaviour$BlockStateBase
	m	(Lcsv;Lcom/google/common/collect/ImmutableMap;Lcom/mojang/serialization/MapCodec;)V	<init>	<init>
		p	1		block
		p	2		propertyMap
		p	3		codec
	m	()Ldgk;	A	instrument
	m	()Z	D	calculateSolid
	m	()V	a	initCache
	m	(Lakq;Lgw;Lasc;)V	a	tick
		p	1		world
		p	2		pos
		p	3		random
	m	(Lakq;Lgw;Lcjf;Z)V	a	spawnAfterBreak
		p	1		world
		p	2		pos
		p	3		tool
		p	4		dropExperience
	m	(Laqh;)Z	a	is
		p	1		tag
	m	(Laqh;Ljava/util/function/Predicate;)Z	a	is
		p	1		tag
		p	2		predicate
	m	(Lcbu;Lcpb;Lgw;)F	a	getDestroyProgress
		p	1		player
		p	2		world
		p	3		pos
	m	(Lcln;)Z	a	canBeReplaced
		p	1		context
	m	(Lcpb;Lgw;)Z	a	propagatesSkylightDown
		p	1		world
		p	2		pos
	m	(Lcpb;Lgw;Lbiq;)Z	a	entityCanStandOn
		p	1		world
		p	2		pos
		p	3		entity
	m	(Lcpb;Lgw;Lbiq;Lha;)Z	a	entityCanStandOnFace
		p	1		world
		p	2		pos
		p	3		entity
		p	4		direction
	m	(Lcpb;Lgw;Lbiu;)Z	a	isValidSpawn
		p	1		world
		p	2		pos
		p	3		type
	m	(Lcpb;Lgw;Ldfi$b;)Lehn;	a	lambda$getOffset$0
		p	3		offsetter
	m	(Lcpb;Lgw;Lebc;)Z	a	isPathfindable
		p	1		world
		p	2		pos
		p	3		type
	m	(Lcpb;Lgw;Lehs;)Leig;	a	getShape
		p	1		world
		p	2		pos
		p	3		context
	m	(Lcpb;Lgw;Lha;)Leig;	a	getFaceOcclusionShape
		p	1		world
		p	2		pos
		p	3		direction
	m	(Lcpb;Lgw;Lha;Ldax;)Z	a	isFaceSturdy
		p	1		world
		p	2		pos
		p	3		direction
		p	4		shapeType
	m	(Lcpv;Lcbu;Lbgx;Lehj;)Lbgy;	a	use
		p	1		world
		p	2		player
		p	3		hand
		p	4		hit
	m	(Lcpv;Ldcx;)Ldcw;	a	getTicker
		p	1		world
		p	2		blockEntityType
	m	(Lcpv;Ldfj;Lehj;Lccm;)V	a	onProjectileHit
		p	1		world
		p	2		state
		p	3		hit
		p	4		projectile
	m	(Lcpv;Lgw;)I	a	getAnalogOutputSignal
		p	1		world
		p	2		pos
	m	(Lcpv;Lgw;II)Z	a	triggerEvent
		p	1		world
		p	2		pos
		p	3		type
		p	4		data
	m	(Lcpv;Lgw;Lbiq;)V	a	entityInside
		p	1		world
		p	2		pos
		p	3		entity
	m	(Lcpv;Lgw;Lcbu;)V	a	attack
		p	1		world
		p	2		pos
		p	3		player
	m	(Lcpv;Lgw;Lcsv;Lgw;Z)V	a	neighborChanged
		p	1		world
		p	2		pos
		p	3		sourceBlock
		p	4		sourcePos
		p	5		notify
	m	(Lcpv;Lgw;Ldfj;Z)V	a	onPlace
		p	1		world
		p	2		pos
		p	3		state
		p	4		notify
	m	(Lcpw;Lgw;I)V	a	updateNeighbourShapes
		p	1		world
		p	2		pos
		p	3		flags
	m	(Lcpw;Lgw;II)V	a	updateNeighbourShapes
		p	1		world
		p	2		pos
		p	3		flags
		p	4		maxUpdateDepth
	m	(Lcpy;Lgw;)Z	a	canSurvive
		p	1		world
		p	2		pos
	m	(Lcsv;)Z	a	is
		p	1		block
	m	(Lcxq;)Ldfj;	a	mirror
		p	1		mirror
	m	(Lczh;)Ldfj;	a	rotate
		p	1		rotation
	m	(Ldfj;Lha;)Z	a	skipRendering
		p	1		state
		p	2		direction
	m	(Leal;)Z	a	canBeReplaced
		p	1		fluid
	m	(Lecw$a;)Ljava/util/List;	a	getDrops
		p	1		builder
	m	(Lgw;)J	a	getSeed
		p	1		pos
	m	(Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		direction
		p	2		neighborState
		p	3		world
		p	4		pos
		p	5		neighborPos
	m	(Lhe;)Z	a	is
		p	1		blockEntry
	m	(Lhi;)Z	a	is
		p	1		blocks
	m	()Lcsv;	b	getBlock
	m	(Lakq;Lgw;Lasc;)V	b	randomTick
		p	1		world
		p	2		pos
		p	3		random
	m	(Lcpb;Lgw;)I	b	getLightBlock
		p	1		world
		p	2		pos
	m	(Lcpb;Lgw;Lehs;)Leig;	b	getCollisionShape
		p	1		world
		p	2		pos
		p	3		context
	m	(Lcpb;Lgw;Lha;)I	b	getSignal
		p	1		world
		p	2		pos
		p	3		direction
	m	(Lcpv;Lgw;)Lbhb;	b	getMenuProvider
		p	1		world
		p	2		pos
	m	(Lcpv;Lgw;Ldfj;Z)V	b	onRemove
		p	1		world
		p	2		pos
		p	3		state
		p	4		moved
	m	(Lcpw;Lgw;I)V	b	updateIndirectNeighbourShapes
		p	1		world
		p	2		pos
		p	3		flags
	m	(Lcpw;Lgw;II)V	b	updateIndirectNeighbourShapes
		p	1		world
		p	2		pos
		p	3		flags
		p	4		maxUpdateDepth
	m	()Lhe;	c	getBlockHolder
	m	(Lcpb;Lgw;)Leig;	c	getOcclusionShape
		p	1		world
		p	2		pos
	m	(Lcpb;Lgw;Lehs;)Leig;	c	getVisualShape
		p	1		world
		p	2		pos
		p	3		context
	m	(Lcpb;Lgw;Lha;)I	c	getDirectSignal
		p	1		world
		p	2		pos
		p	3		direction
	m	()Z	d	blocksMotion
	m	(Lcpb;Lgw;)Leaq;	d	getMapColor
		p	1		world
		p	2		pos
	m	(Lcpb;Lgw;Lha;)Z	d	isFaceSturdy
		p	1		world
		p	2		pos
		p	3		direction
	m	()Z	e	isSolid
	m	(Lcpb;Lgw;)Z	e	emissiveRendering
		p	1		world
		p	2		pos
	m	()Z	f	hasLargeCollisionShape
	m	(Lcpb;Lgw;)F	f	getShadeBrightness
		p	1		world
		p	2		pos
	m	()Z	g	useShapeForLightOcclusion
	m	(Lcpb;Lgw;)Z	g	isRedstoneConductor
		p	1		world
		p	2		pos
	m	()I	h	getLightEmission
	m	(Lcpb;Lgw;)F	h	getDestroySpeed
		p	1		world
		p	2		pos
	m	()Z	i	isAir
	m	(Lcpb;Lgw;)Z	i	isSolidRender
		p	1		world
		p	2		pos
	m	()Z	j	ignitedByLava
	m	(Lcpb;Lgw;)Leig;	j	getShape
		p	1		world
		p	2		pos
	m	()Z	k	liquid
	m	(Lcpb;Lgw;)Leig;	k	getCollisionShape
		p	1		world
		p	2		pos
	m	()Lcza;	l	getRenderShape
	m	(Lcpb;Lgw;)Leig;	l	getBlockSupportShape
		p	1		world
		p	2		pos
	m	()Z	m	isSignalSource
	m	(Lcpb;Lgw;)Leig;	m	getInteractionShape
		p	1		world
		p	2		pos
	m	()Z	n	hasAnalogOutputSignal
	m	(Lcpb;Lgw;)Lehn;	n	getOffset
		p	1		world
		p	2		pos
	m	()Lear;	o	getPistonPushReaction
	m	(Lcpb;Lgw;)Z	o	isSuffocating
		p	1		world
		p	2		pos
	m	()Z	p	canOcclude
	m	(Lcpb;Lgw;)Z	p	isViewBlocking
		p	1		world
		p	2		pos
	m	()Z	q	hasOffsetFunction
	m	(Lcpb;Lgw;)Z	q	hasPostProcess
		p	1		world
		p	2		pos
	m	()Z	r	canBeReplaced
	m	(Lcpb;Lgw;)Z	r	isCollisionShapeFullBlock
		p	1		world
		p	2		pos
	m	()Ljava/util/stream/Stream;	s	getTags
	m	()Z	t	hasBlockEntity
	m	()Leam;	u	getFluidState
	m	()Z	v	isRandomlyTicking
	m	()Ldai;	w	getSoundType
	m	()Ldfj;	x	asState
	m	()Z	y	requiresCorrectToolForDrops
	m	()Z	z	shouldSpawnTerrainParticles
	f	Z	A	isRandomlyTicking
	f	Ldfi$a$a;	a	cache
	f	I	b	lightEmission
	f	Z	g	useShapeForLightOcclusion
	f	Z	h	isAir
	f	Z	i	ignitedByLava
	f	Z	j	liquid
	f	Z	k	legacySolid
	f	Lear;	l	pushReaction
	f	Leaq;	m	mapColor
	f	F	n	destroySpeed
	f	Z	o	requiresCorrectToolForDrops
	f	Z	p	canOcclude
	f	Ldfi$f;	q	isRedstoneConductor
	f	Ldfi$f;	r	isSuffocating
	f	Ldfi$f;	s	isViewBlocking
	f	Ldfi$f;	t	hasPostProcess
	f	Ldfi$f;	u	emissiveRendering
	f	Ljava/util/Optional;	v	offsetFunction
	f	Z	w	spawnTerrainParticles
	f	Ldgk;	x	instrument
	f	Z	y	replaceable
	f	Leam;	z	fluidState
c	dfi$a$a	net/minecraft/world/level/block/state/BlockBehaviour$BlockStateBase$Cache
	m	(Ldfj;)V	<init>	<init>
		p	1		state
	m	(Lha$a;)Z	a	lambda$new$0
		p	1		axis
	m	(Lha;Ldax;)Z	a	isFaceSturdy
		p	1		direction
		p	2		shapeType
	m	(Lha;Ldax;)I	b	getFaceSupportIndex
		p	0		direction
		p	1		shapeType
	f	Z	a	solidRender
	f	Leig;	b	collisionShape
	f	Z	c	largeCollisionShape
	f	Z	d	isCollisionShapeFullBlock
	f	[Lha;	e	DIRECTIONS
	f	I	f	SUPPORT_TYPE_COUNT
	f	Z	g	propagatesSkylightDown
	f	I	h	lightBlock
	f	[Leig;	i	occlusionShapes
	f	[Z	j	faceSturdy
c	dfi$b	net/minecraft/world/level/block/state/BlockBehaviour$OffsetFunction
	m	(Ldfj;Lcpb;Lgw;)Lehn;	evaluate	evaluate
		p	1		state
		p	2		world
		p	3		pos
c	dfi$c	net/minecraft/world/level/block/state/BlockBehaviour$OffsetType
	m	()[Ldfi$c;	a	$values
	f	Ldfi$c;	a	NONE
	f	Ldfi$c;	b	XZ
	f	Ldfi$c;	c	XYZ
	f	[Ldfi$c;	d	$VALUES
c	dfi$d	net/minecraft/world/level/block/state/BlockBehaviour$Properties
	m	()Ldfi$d;	a	of
	m	(F)Ldfi$d;	a	friction
		p	1		slipperiness
	m	(FF)Ldfi$d;	a	strength
		p	1		hardness
		p	2		resistance
	m	(Lcht;)Ldfi$d;	a	mapColor
		p	1		color
	m	(Lcht;Ldfj;)Leaq;	a	lambda$mapColor$7
		p	1		state
	m	(Lcsv;)Ldfi$d;	a	dropsLike
		p	1		source
	m	(Ldai;)Ldfi$d;	a	sound
		p	1		soundGroup
	m	(Ldfi$c;)Ldfi$d;	a	offsetType
		p	1		offsetType
	m	(Ldfi$e;)Ldfi$d;	a	isValidSpawn
		p	1		predicate
	m	(Ldfi$f;)Ldfi$d;	a	isRedstoneConductor
		p	1		predicate
	m	(Ldfi;)Ldfi$d;	a	copy
		p	0		block
	m	(Ldfj;)I	a	lambda$new$1
		p	0		state
	m	(Ldfj;Lcpb;Lgw;)Lehn;	a	lambda$offsetType$10
		p	0		state
		p	1		world
		p	2		pos
	m	(Ldfj;Lcpb;Lgw;Lbiu;)Z	a	lambda$new$2
		p	0		state
		p	1		world
		p	2		pos
		p	3		type
	m	(Ldgk;)Ldfi$d;	a	instrument
		p	1		instrument
	m	(Leaq;)Ldfi$d;	a	mapColor
		p	1		color
	m	(Leaq;Ldfj;)Leaq;	a	lambda$mapColor$8
		p	1		state
	m	(Lear;)Ldfi$d;	a	pushReaction
		p	1		pistonBehavior
	m	(Ljava/util/function/Function;)Ldfi$d;	a	mapColor
		p	1		mapColorProvider
	m	(Ljava/util/function/ToIntFunction;)Ldfi$d;	a	lightLevel
		p	1		luminance
	m	([Lcea;)Ldfi$d;	a	requiredFeatures
		p	1		features
	m	()Ldfi$d;	b	noCollission
	m	(F)Ldfi$d;	b	speedFactor
		p	1		velocityMultiplier
	m	(Ldfi$f;)Ldfi$d;	b	isSuffocating
		p	1		predicate
	m	(Ldfj;)Leaq;	b	lambda$new$0
		p	0		state
	m	(Ldfj;Lcpb;Lgw;)Lehn;	b	lambda$offsetType$9
		p	0		state
		p	1		world
		p	2		pos
	m	()Ldfi$d;	c	noOcclusion
	m	(F)Ldfi$d;	c	jumpFactor
		p	1		jumpVelocityMultiplier
	m	(Ldfi$f;)Ldfi$d;	c	isViewBlocking
		p	1		predicate
	m	(Ldfj;Lcpb;Lgw;)Z	c	lambda$new$6
		p	0		state
		p	1		world
		p	2		pos
	m	()Ldfi$d;	d	instabreak
	m	(F)Ldfi$d;	d	strength
		p	1		strength
	m	(Ldfi$f;)Ldfi$d;	d	hasPostProcess
		p	1		predicate
	m	(Ldfj;Lcpb;Lgw;)Z	d	lambda$new$5
		p	0		state
		p	1		world
		p	2		pos
	m	()Ldfi$d;	e	randomTicks
	m	(F)Ldfi$d;	e	destroyTime
		p	1		hardness
	m	(Ldfi$f;)Ldfi$d;	e	emissiveRendering
		p	1		predicate
	m	(Ldfj;Lcpb;Lgw;)Z	e	lambda$new$4
		p	0		state
		p	1		world
		p	2		pos
	m	()Ldfi$d;	f	dynamicShape
	m	(F)Ldfi$d;	f	explosionResistance
		p	1		resistance
	m	(Ldfj;Lcpb;Lgw;)Z	f	lambda$new$3
		p	0		state
		p	1		world
		p	2		pos
	m	()Ldfi$d;	g	noLootTable
	m	()Ldfi$d;	h	ignitedByLava
	m	()Ldfi$d;	i	liquid
	m	()Ldfi$d;	j	forceSolidOn
	m	()Ldfi$d;	k	forceSolidOff
	m	()Ldfi$d;	l	air
	m	()Ldfi$d;	m	requiresCorrectToolForDrops
	m	()Ldfi$d;	n	noTerrainParticles
	m	()Ldfi$d;	o	replaceable
	f	Ldfi$f;	A	hasPostProcess
	f	Ldfi$f;	B	emissiveRendering
	f	Z	C	dynamicShape
	f	Lcec;	D	requiredFeatures
	f	Ljava/util/Optional;	E	offsetFunction
	f	Ljava/util/function/Function;	a	mapColor
	f	Z	b	hasCollision
	f	Ldai;	c	soundType
	f	Ljava/util/function/ToIntFunction;	d	lightEmission
	f	F	e	explosionResistance
	f	F	f	destroyTime
	f	Z	g	requiresCorrectToolForDrops
	f	Z	h	isRandomlyTicking
	f	F	i	friction
	f	F	j	speedFactor
	f	F	k	jumpFactor
	f	Laew;	l	drops
	f	Z	m	canOcclude
	f	Z	n	isAir
	f	Z	o	ignitedByLava
	f	Z	p	liquid
	f	Z	q	forceSolidOff
	f	Z	r	forceSolidOn
	f	Lear;	s	pushReaction
	f	Z	t	spawnTerrainParticles
	f	Ldgk;	u	instrument
	f	Z	v	replaceable
	f	Ldfi$e;	w	isValidSpawn
	f	Ldfi$f;	x	isRedstoneConductor
	f	Ldfi$f;	y	isSuffocating
	f	Ldfi$f;	z	isViewBlocking
c	dfi$e	net/minecraft/world/level/block/state/BlockBehaviour$StateArgumentPredicate
	m	(Ldfj;Lcpb;Lgw;Ljava/lang/Object;)Z	test	test
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
c	dfi$f	net/minecraft/world/level/block/state/BlockBehaviour$StatePredicate
	m	(Ldfj;Lcpb;Lgw;)Z	test	test
		p	1		state
		p	2		world
		p	3		pos
c	dfj	net/minecraft/world/level/block/state/BlockState
	m	(Lcsv;Lcom/google/common/collect/ImmutableMap;Lcom/mojang/serialization/MapCodec;)V	<init>	<init>
		p	1		block
		p	2		propertyMap
		p	3		codec
	m	()Ldfj;	x	asState
	f	Lcom/mojang/serialization/Codec;	b	CODEC
c	dfk	net/minecraft/world/level/block/state/StateDefinition
	m	(Ljava/util/function/Function;Ljava/lang/Object;Ldfk$b;Ljava/util/Map;)V	<init>	<init>
		p	1		defaultStateGetter
		p	2		owner
		p	3		factory
		p	4		propertiesMap
	m	()Lcom/google/common/collect/ImmutableList;	a	getPossibleStates
	m	(Lcom/mojang/serialization/MapCodec;Ljava/util/function/Supplier;Ljava/lang/String;Ldgm;)Lcom/mojang/serialization/MapCodec;	a	appendPropertyCodec
		p	0		mapCodec
		p	1		defaultStateGetter
		p	2		key
		p	3		property
	m	(Ldfk$b;Ljava/lang/Object;Lcom/mojang/serialization/MapCodec;Ljava/util/Map;Ljava/util/List;Ljava/util/List;)V	a	lambda$new$3
	m	(Ldgm;Lcom/mojang/datafixers/util/Pair;)Ldfl;	a	lambda$appendPropertyCodec$6
	m	(Ldgm;Ldfl;)Lcom/mojang/datafixers/util/Pair;	a	lambda$appendPropertyCodec$7
	m	(Ldgm;Ljava/util/List;)Ljava/util/stream/Stream;	a	lambda$new$2
	m	(Ldgm;Ljava/util/function/Supplier;)Ldgm$a;	a	lambda$appendPropertyCodec$5
	m	(Ljava/lang/String;)Ldgm;	a	getProperty
		p	1		name
	m	(Ljava/util/List;Ldgm;Ljava/lang/Comparable;)Ljava/util/List;	a	lambda$new$1
	m	(Ljava/util/function/Function;Ljava/lang/Object;)Ldfl;	a	lambda$new$0
	m	()Ldfl;	b	any
	m	(Ljava/lang/String;)V	b	lambda$appendPropertyCodec$4
	m	()Ljava/lang/Object;	c	getOwner
	m	()Ljava/util/Collection;	d	getProperties
	f	Ljava/util/regex/Pattern;	a	NAME_PATTERN
	f	Ljava/lang/Object;	b	owner
	f	Lcom/google/common/collect/ImmutableSortedMap;	c	propertiesByName
	f	Lcom/google/common/collect/ImmutableList;	d	states
c	dfk$a	net/minecraft/world/level/block/state/StateDefinition$Builder
	m	(Ljava/lang/Object;)V	<init>	<init>
		p	1		owner
	m	(Ldgm;)V	a	validateProperty
		p	1		property
	m	(Ljava/util/function/Function;Ldfk$b;)Ldfk;	a	create
		p	1		defaultStateGetter
		p	2		factory
	m	([Ldgm;)Ldfk$a;	a	add
		p	1		properties
	f	Ljava/lang/Object;	a	owner
	f	Ljava/util/Map;	b	properties
c	dfk$b	net/minecraft/world/level/block/state/StateDefinition$Factory
	m	(Ljava/lang/Object;Lcom/google/common/collect/ImmutableMap;Lcom/mojang/serialization/MapCodec;)Ljava/lang/Object;	create	create
		p	1		owner
		p	2		entries
		p	3		codec
c	dfl	net/minecraft/world/level/block/state/StateHolder
	m	(Ljava/lang/Object;Lcom/google/common/collect/ImmutableMap;Lcom/mojang/serialization/MapCodec;)V	<init>	<init>
		p	1		owner
		p	2		entries
		p	3		codec
	m	()Ljava/util/Collection;	B	getProperties
	m	()Lcom/google/common/collect/ImmutableMap;	C	getValues
	m	(Lcom/mojang/serialization/Codec;Ljava/util/function/Function;)Lcom/mojang/serialization/Codec;	a	codec
		p	1		ownerToStateFunction
	m	(Ldfl;)Ljava/lang/Object;	a	lambda$codec$0
	m	(Ldfl;Ljava/util/Optional;)Ldfl;	a	lambda$codec$1
	m	(Ldgm;)Ljava/lang/Object;	a	cycle
		p	1		property
	m	(Ldgm;Ljava/lang/Comparable;)Ljava/lang/Object;	a	setValue
		p	1		property
		p	2		value
	m	(Ljava/util/Collection;Ljava/lang/Object;)Ljava/lang/Object;	a	findNextInCollection
		p	0		values
		p	1		value
	m	(Ljava/util/Map;)V	a	populateNeighbours
		p	1		states
	m	(Ljava/util/function/Function;Ljava/lang/Object;)Lcom/mojang/serialization/Codec;	a	lambda$codec$2
	m	(Ldgm;)Z	b	hasProperty
		p	1		property
	m	(Ldgm;Ljava/lang/Comparable;)Ljava/lang/Object;	b	trySetValue
		p	1		property
		p	2		value
	m	(Ldgm;)Ljava/lang/Comparable;	c	getValue
		p	1		property
	m	(Ldgm;Ljava/lang/Comparable;)Ljava/util/Map;	c	makeNeighbourValues
		p	1		property
		p	2		value
	m	(Ldgm;)Ljava/util/Optional;	d	getOptionalValue
		p	1		property
	f	Ljava/util/function/Function;	a	PROPERTY_ENTRY_TO_STRING_FUNCTION
	f	Lcom/google/common/collect/ImmutableMap;	b	values
	f	Ljava/lang/String;	c	NAME_TAG
	f	Ljava/lang/String;	d	PROPERTIES_TAG
	f	Ljava/lang/Object;	e	owner
	f	Lcom/mojang/serialization/MapCodec;	f	propertiesCodec
	f	Lcom/google/common/collect/Table;	g	neighbours
c	dfl$1	net/minecraft/world/level/block/state/StateHolder$1
	m	(Ldgm;Ljava/lang/Comparable;)Ljava/lang/String;	a	getName
		p	1		property
		p	2		value
	m	(Ljava/util/Map$Entry;)Ljava/lang/String;	a	apply
c	dfm	net/minecraft/world/level/block/state/package-info
c	dfn	net/minecraft/world/level/block/state/pattern/BlockInWorld
	m	(Lcpy;Lgw;Z)V	<init>	<init>
		p	1		world
		p	2		pos
		p	3		forceLoad
	m	()Ldfj;	a	getState
	m	(Ljava/util/function/Predicate;)Ljava/util/function/Predicate;	a	hasState
		p	0		state
	m	(Ljava/util/function/Predicate;Ldfn;)Z	a	lambda$hasState$0
		p	1		pos
	m	()Ldcv;	b	getEntity
	m	()Lcpy;	c	getLevel
	m	()Lgw;	d	getPos
	f	Lcpy;	a	level
	f	Lgw;	b	pos
	f	Z	c	loadChunks
	f	Ldfj;	d	state
	f	Ldcv;	e	entity
	f	Z	f	cachedEntity
c	dfo	net/minecraft/world/level/block/state/pattern/BlockPattern
	m	([[[Ljava/util/function/Predicate;)V	<init>	<init>
		p	1		pattern
	m	()I	a	getDepth
	m	(Lcpy;Lgw;)Ldfo$b;	a	find
		p	1		world
		p	2		pos
	m	(Lcpy;Lgw;Lha;Lha;)Ldfo$b;	a	matches
		p	1		world
		p	2		frontTopLeft
		p	3		forwards
		p	4		up
	m	(Lcpy;Z)Lcom/google/common/cache/LoadingCache;	a	createLevelCache
		p	0		world
		p	1		forceLoad
	m	(Lgw;Lha;Lha;III)Lgw;	a	translateAndRotate
		p	0		pos
		p	1		forwards
		p	2		up
		p	3		offsetLeft
		p	4		offsetDown
		p	5		offsetForwards
	m	(Lgw;Lha;Lha;Lcom/google/common/cache/LoadingCache;)Ldfo$b;	a	matches
		p	1		frontTopLeft
		p	2		forwards
		p	3		up
		p	4		cache
	m	()I	b	getHeight
	m	()I	c	getWidth
	m	()[[[Ljava/util/function/Predicate;	d	getPattern
	f	[[[Ljava/util/function/Predicate;	a	pattern
	f	I	b	depth
	f	I	c	height
	f	I	d	width
c	dfo$a	net/minecraft/world/level/block/state/pattern/BlockPattern$BlockCacheLoader
	m	(Lcpy;Z)V	<init>	<init>
		p	1		world
		p	2		forceLoad
	m	(Lgw;)Ldfn;	a	load
	f	Lcpy;	a	level
	f	Z	b	loadChunks
c	dfo$b	net/minecraft/world/level/block/state/pattern/BlockPattern$BlockPatternMatch
	m	(Lgw;Lha;Lha;Lcom/google/common/cache/LoadingCache;III)V	<init>	<init>
		p	1		frontTopLeft
		p	2		forwards
		p	3		up
		p	4		cache
		p	5		width
		p	6		height
		p	7		depth
	m	()Lgw;	a	getFrontTopLeft
	m	(III)Ldfn;	a	getBlock
		p	1		offsetLeft
		p	2		offsetDown
		p	3		offsetForwards
	m	()Lha;	b	getForwards
	m	()Lha;	c	getUp
	m	()I	d	getWidth
	m	()I	e	getHeight
	m	()I	f	getDepth
	f	Lgw;	a	frontTopLeft
	f	Lha;	b	forwards
	f	Lha;	c	up
	f	Lcom/google/common/cache/LoadingCache;	d	cache
	f	I	e	width
	f	I	f	height
	f	I	g	depth
c	dfp	net/minecraft/world/level/block/state/pattern/BlockPatternBuilder
	m	()Ldfp;	a	start
	m	(CLjava/util/function/Predicate;)Ldfp;	a	where
		p	1		key
		p	2		predicate
	m	(Ldfn;)Z	a	lambda$new$0
		p	0		pos
	m	([Ljava/lang/String;)Ldfp;	a	aisle
		p	1		pattern
	m	()Ldfo;	b	build
	m	()[[[Ljava/util/function/Predicate;	c	createPattern
	m	()V	d	ensureAllCharactersMatched
	f	Lcom/google/common/base/Joiner;	a	COMMA_JOINED
	f	Ljava/util/List;	b	pattern
	f	Ljava/util/Map;	c	lookup
	f	I	d	height
	f	I	e	width
c	dfq	net/minecraft/world/level/block/state/pattern/package-info
c	dfr	net/minecraft/world/level/block/state/predicate/BlockPredicate
	m	(Lcsv;)V	<init>	<init>
		p	1		block
	m	(Lcsv;)Ldfr;	a	forBlock
		p	0		block
	m	(Ldfj;)Z	a	test
	f	Lcsv;	a	block
c	dfs	net/minecraft/world/level/block/state/predicate/BlockStatePredicate
	m	(Ldfk;)V	<init>	<init>
		p	1		manager
	m	(Lcsv;)Ldfs;	a	forBlock
		p	0		block
	m	(Ldfj;)Z	a	test
	m	(Ldfj;Ldgm;Ljava/util/function/Predicate;)Z	a	applies
		p	1		blockState
		p	2		property
		p	3		predicate
	m	(Ldgm;Ljava/util/function/Predicate;)Ldfs;	a	where
		p	1		property
		p	2		predicate
	m	(Ldfj;)Z	b	lambda$static$0
		p	0		state
	f	Ljava/util/function/Predicate;	a	ANY
	f	Ldfk;	b	definition
	f	Ljava/util/Map;	c	properties
c	dft	net/minecraft/world/level/block/state/predicate/package-info
c	dfu	net/minecraft/world/level/block/state/properties/AttachFace
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()[Ldfu;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Ldfu;	a	FLOOR
	f	Ldfu;	b	WALL
	f	Ldfu;	c	CEILING
	f	Ljava/lang/String;	d	name
	f	[Ldfu;	e	$VALUES
c	dfv	net/minecraft/world/level/block/state/properties/BambooLeaves
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()[Ldfv;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Ldfv;	a	NONE
	f	Ldfv;	b	SMALL
	f	Ldfv;	c	LARGE
	f	Ljava/lang/String;	d	name
	f	[Ldfv;	e	$VALUES
c	dfw	net/minecraft/world/level/block/state/properties/BedPart
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()[Ldfw;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Ldfw;	a	HEAD
	f	Ldfw;	b	FOOT
	f	Ljava/lang/String;	c	name
	f	[Ldfw;	d	$VALUES
c	dfx	net/minecraft/world/level/block/state/properties/BellAttachType
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()[Ldfx;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Ldfx;	a	FLOOR
	f	Ldfx;	b	CEILING
	f	Ldfx;	c	SINGLE_WALL
	f	Ldfx;	d	DOUBLE_WALL
	f	Ljava/lang/String;	e	name
	f	[Ldfx;	f	$VALUES
c	dfy	net/minecraft/world/level/block/state/properties/BlockSetType
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		name
	m	()Ljava/util/stream/Stream;	a	values
	m	(Ldfy;)Ldfy;	a	register
		p	0		blockSetType
	m	()Ljava/lang/String;	b	name
	m	()Z	c	canOpenByHand
	m	()Ldai;	d	soundType
	m	()Lapc;	e	doorClose
	m	()Lapc;	f	doorOpen
	m	()Lapc;	g	trapdoorClose
	m	()Lapc;	h	trapdoorOpen
	m	()Lapc;	i	pressurePlateClickOff
	m	()Lapc;	j	pressurePlateClickOn
	m	()Lapc;	k	buttonClickOff
	m	()Lapc;	l	buttonClickOn
	f	Ljava/util/Set;	A	VALUES
	f	Ldfy;	a	IRON
	f	Ldfy;	b	GOLD
	f	Ldfy;	c	STONE
	f	Ldfy;	d	POLISHED_BLACKSTONE
	f	Ldfy;	e	OAK
	f	Ldfy;	f	SPRUCE
	f	Ldfy;	g	BIRCH
	f	Ldfy;	h	ACACIA
	f	Ldfy;	i	CHERRY
	f	Ldfy;	j	JUNGLE
	f	Ldfy;	k	DARK_OAK
	f	Ldfy;	l	CRIMSON
	f	Ldfy;	m	WARPED
	f	Ldfy;	n	MANGROVE
	f	Ldfy;	o	BAMBOO
	f	Ljava/lang/String;	p	name
	f	Z	q	canOpenByHand
	f	Ldai;	r	soundType
	f	Lapc;	s	doorClose
	f	Lapc;	t	doorOpen
	f	Lapc;	u	trapdoorClose
	f	Lapc;	v	trapdoorOpen
	f	Lapc;	w	pressurePlateClickOff
	f	Lapc;	x	pressurePlateClickOn
	f	Lapc;	y	buttonClickOff
	f	Lapc;	z	buttonClickOn
c	dfz	net/minecraft/world/level/block/state/properties/BlockStateProperties
	m	(Ldgn;)Z	a	lambda$static$1
		p	0		shape
	m	(Lha;)Z	a	lambda$static$0
		p	0		facing
	f	Ldga;	A	TRIGGERED
	f	Ldga;	B	UNSTABLE
	f	Ldga;	C	WATERLOGGED
	f	Ldga;	D	BERRIES
	f	Ldga;	E	BLOOM
	f	Ldga;	F	SHRIEKING
	f	Ldga;	G	CAN_SUMMON
	f	Ldgh;	H	HORIZONTAL_AXIS
	f	Ldgh;	I	AXIS
	f	Ldga;	J	UP
	f	Ldga;	K	DOWN
	f	Ldga;	L	NORTH
	f	Ldga;	M	EAST
	f	Ldga;	N	SOUTH
	f	Ldga;	O	WEST
	f	Ldgd;	P	FACING
	f	Ldgd;	Q	FACING_HOPPER
	f	Ldgd;	R	HORIZONTAL_FACING
	f	Ldgj;	S	FLOWER_AMOUNT
	f	Ldgh;	T	ORIENTATION
	f	Ldgh;	U	ATTACH_FACE
	f	Ldgh;	V	BELL_ATTACHMENT
	f	Ldgh;	W	EAST_WALL
	f	Ldgh;	X	NORTH_WALL
	f	Ldgh;	Y	SOUTH_WALL
	f	Ldgh;	Z	WEST_WALL
	f	Ldgj;	aA	DELAY
	f	I	aB	MAX_DISTANCE
	f	Ldgj;	aC	DISTANCE
	f	Ldgj;	aD	EGGS
	f	Ldgj;	aE	HATCH
	f	Ldgj;	aF	LAYERS
	f	I	aG	MIN_LEVEL
	f	I	aH	MIN_LEVEL_CAULDRON
	f	I	aI	MAX_LEVEL_3
	f	I	aJ	MAX_LEVEL_8
	f	Ldgj;	aK	LEVEL_CAULDRON
	f	Ldgj;	aL	LEVEL_COMPOSTER
	f	Ldga;	a	ATTACHED
	f	Ldgj;	aM	LEVEL_FLOWING
	f	Ldgj;	aN	LEVEL_HONEY
	f	I	aO	MAX_LEVEL_15
	f	Ldgj;	aP	LEVEL
	f	Ldgj;	aQ	MOISTURE
	f	Ldgj;	aR	NOTE
	f	Ldgj;	aS	PICKLES
	f	Ldgj;	aT	POWER
	f	Ldgj;	aU	STAGE
	f	I	aV	STABILITY_MAX_DISTANCE
	f	Ldgj;	aW	STABILITY_DISTANCE
	f	I	aX	MIN_RESPAWN_ANCHOR_CHARGES
	f	I	aY	MAX_RESPAWN_ANCHOR_CHARGES
	f	Ldgj;	aZ	RESPAWN_ANCHOR_CHARGES
	f	Ldgh;	aa	EAST_REDSTONE
	f	Ldgh;	ab	NORTH_REDSTONE
	f	Ldgh;	ac	SOUTH_REDSTONE
	f	Ldgh;	ad	WEST_REDSTONE
	f	Ldgh;	ae	DOUBLE_BLOCK_HALF
	f	Ldgh;	af	HALF
	f	Ldgh;	ag	RAIL_SHAPE
	f	Ldgh;	ah	RAIL_SHAPE_STRAIGHT
	f	I	ai	MAX_AGE_1
	f	I	aj	MAX_AGE_2
	f	I	ak	MAX_AGE_3
	f	I	al	MAX_AGE_4
	f	I	am	MAX_AGE_5
	f	I	an	MAX_AGE_7
	f	I	ao	MAX_AGE_15
	f	I	ap	MAX_AGE_25
	f	Ldgj;	aq	AGE_1
	f	Ldgj;	ar	AGE_2
	f	Ldgj;	as	AGE_3
	f	Ldgj;	at	AGE_4
	f	Ldgj;	au	AGE_5
	f	Ldgj;	av	AGE_7
	f	Ldgj;	aw	AGE_15
	f	Ldgj;	ax	AGE_25
	f	Ldgj;	ay	BITES
	f	Ldgj;	az	CANDLES
	f	Ldga;	b	BOTTOM
	f	Ldgj;	ba	ROTATION_16
	f	Ldgh;	bb	BED_PART
	f	Ldgh;	bc	CHEST_TYPE
	f	Ldgh;	bd	MODE_COMPARATOR
	f	Ldgh;	be	DOOR_HINGE
	f	Ldgh;	bf	NOTEBLOCK_INSTRUMENT
	f	Ldgh;	bg	PISTON_TYPE
	f	Ldgh;	bh	SLAB_TYPE
	f	Ldgh;	bi	STAIRS_SHAPE
	f	Ldgh;	bj	STRUCTUREBLOCK_MODE
	f	Ldgh;	bk	BAMBOO_LEAVES
	f	Ldgh;	bl	TILT
	f	Ldgd;	bm	VERTICAL_DIRECTION
	f	Ldgh;	bn	DRIPSTONE_THICKNESS
	f	Ldgh;	bo	SCULK_SENSOR_PHASE
	f	Ldga;	bp	CHISELED_BOOKSHELF_SLOT_0_OCCUPIED
	f	Ldga;	bq	CHISELED_BOOKSHELF_SLOT_1_OCCUPIED
	f	Ldga;	br	CHISELED_BOOKSHELF_SLOT_2_OCCUPIED
	f	Ldga;	bs	CHISELED_BOOKSHELF_SLOT_3_OCCUPIED
	f	Ldga;	bt	CHISELED_BOOKSHELF_SLOT_4_OCCUPIED
	f	Ldga;	bu	CHISELED_BOOKSHELF_SLOT_5_OCCUPIED
	f	Ldgj;	bv	DUSTED
	f	Ldga;	bw	CRACKED
	f	Ldga;	c	CONDITIONAL
	f	Ldga;	d	DISARMED
	f	Ldga;	e	DRAG
	f	Ldga;	f	ENABLED
	f	Ldga;	g	EXTENDED
	f	Ldga;	h	EYE
	f	Ldga;	i	FALLING
	f	Ldga;	j	HANGING
	f	Ldga;	k	HAS_BOTTLE_0
	f	Ldga;	l	HAS_BOTTLE_1
	f	Ldga;	m	HAS_BOTTLE_2
	f	Ldga;	n	HAS_RECORD
	f	Ldga;	o	HAS_BOOK
	f	Ldga;	p	INVERTED
	f	Ldga;	q	IN_WALL
	f	Ldga;	r	LIT
	f	Ldga;	s	LOCKED
	f	Ldga;	t	OCCUPIED
	f	Ldga;	u	OPEN
	f	Ldga;	v	PERSISTENT
	f	Ldga;	w	POWERED
	f	Ldga;	x	SHORT
	f	Ldga;	y	SIGNAL_FIRE
	f	Ldga;	z	SNOWY
c	dga	net/minecraft/world/level/block/state/properties/BooleanProperty
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		name
	m	()Ljava/util/Collection;	a	getPossibleValues
	m	(Ljava/lang/Boolean;)Ljava/lang/String;	a	getName
		p	1		value
	m	(Ljava/lang/Comparable;)Ljava/lang/String;	a	getName
		p	1		value
	m	(Ljava/lang/String;)Ldga;	a	create
		p	0		name
	m	()I	b	generateHashCode
	m	(Ljava/lang/String;)Ljava/util/Optional;	b	getValue
		p	1		name
	f	Lcom/google/common/collect/ImmutableSet;	a	values
c	dgb	net/minecraft/world/level/block/state/properties/ChestType
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()Ldgb;	a	getOpposite
	m	()[Ldgb;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Ldgb;	a	SINGLE
	f	Ldgb;	b	LEFT
	f	Ldgb;	c	RIGHT
	f	Ljava/lang/String;	d	name
	f	[Ldgb;	e	$VALUES
c	dgb$1	net/minecraft/world/level/block/state/properties/ChestType$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$state$properties$ChestType
c	dgc	net/minecraft/world/level/block/state/properties/ComparatorMode
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()[Ldgc;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Ldgc;	a	COMPARE
	f	Ldgc;	b	SUBTRACT
	f	Ljava/lang/String;	c	name
	f	[Ldgc;	d	$VALUES
c	dgd	net/minecraft/world/level/block/state/properties/DirectionProperty
	m	(Ljava/lang/String;Ljava/util/Collection;)V	<init>	<init>
		p	1		name
		p	2		values
	m	(Lha;)Z	a	lambda$create$0
	m	(Ljava/lang/String;)Ldgd;	a	create
		p	0		name
	m	(Ljava/lang/String;Ljava/util/Collection;)Ldgd;	a	create
		p	0		name
		p	1		values
	m	(Ljava/lang/String;Ljava/util/function/Predicate;)Ldgd;	a	create
		p	0		name
		p	1		filter
	m	(Ljava/lang/String;[Lha;)Ldgd;	a	create
		p	0		name
		p	1		values
c	dge	net/minecraft/world/level/block/state/properties/DoorHingeSide
	m	()[Ldge;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Ldge;	a	LEFT
	f	Ldge;	b	RIGHT
	f	[Ldge;	c	$VALUES
c	dgf	net/minecraft/world/level/block/state/properties/DoubleBlockHalf
	m	()[Ldgf;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Ldgf;	a	UPPER
	f	Ldgf;	b	LOWER
	f	[Ldgf;	c	$VALUES
c	dgg	net/minecraft/world/level/block/state/properties/DripstoneThickness
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()[Ldgg;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Ldgg;	a	TIP_MERGE
	f	Ldgg;	b	TIP
	f	Ldgg;	c	FRUSTUM
	f	Ldgg;	d	MIDDLE
	f	Ldgg;	e	BASE
	f	Ljava/lang/String;	f	name
	f	[Ldgg;	g	$VALUES
c	dgh	net/minecraft/world/level/block/state/properties/EnumProperty
	m	(Ljava/lang/String;Ljava/lang/Class;Ljava/util/Collection;)V	<init>	<init>
		p	1		name
		p	2		type
		p	3		values
	m	()Ljava/util/Collection;	a	getPossibleValues
	m	(Ljava/lang/Comparable;)Ljava/lang/String;	a	getName
		p	1		value
	m	(Ljava/lang/Enum;)Ljava/lang/String;	a	getName
		p	1		value
	m	(Ljava/lang/String;Ljava/lang/Class;)Ldgh;	a	create
		p	0		name
		p	1		type
	m	(Ljava/lang/String;Ljava/lang/Class;Ljava/util/Collection;)Ldgh;	a	create
		p	0		name
		p	1		type
		p	2		values
	m	(Ljava/lang/String;Ljava/lang/Class;Ljava/util/function/Predicate;)Ldgh;	a	create
		p	0		name
		p	1		type
		p	2		filter
	m	(Ljava/lang/String;Ljava/lang/Class;[Ljava/lang/Enum;)Ldgh;	a	create
		p	0		name
		p	1		type
		p	2		values
	m	()I	b	generateHashCode
	m	(Ljava/lang/Enum;)Z	b	lambda$create$0
	m	(Ljava/lang/String;)Ljava/util/Optional;	b	getValue
		p	1		name
	f	Lcom/google/common/collect/ImmutableSet;	a	values
	f	Ljava/util/Map;	b	names
c	dgi	net/minecraft/world/level/block/state/properties/Half
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()[Ldgi;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Ldgi;	a	TOP
	f	Ldgi;	b	BOTTOM
	f	Ljava/lang/String;	c	name
	f	[Ldgi;	d	$VALUES
c	dgj	net/minecraft/world/level/block/state/properties/IntegerProperty
	m	(Ljava/lang/String;II)V	<init>	<init>
		p	1		name
		p	2		min
		p	3		max
	m	()Ljava/util/Collection;	a	getPossibleValues
	m	(Ljava/lang/Comparable;)Ljava/lang/String;	a	getName
		p	1		value
	m	(Ljava/lang/Integer;)Ljava/lang/String;	a	getName
		p	1		value
	m	(Ljava/lang/String;II)Ldgj;	a	create
		p	0		name
		p	1		min
		p	2		max
	m	()I	b	generateHashCode
	m	(Ljava/lang/String;)Ljava/util/Optional;	b	getValue
		p	1		name
	f	Lcom/google/common/collect/ImmutableSet;	a	values
	f	I	b	min
	f	I	c	max
c	dgk	net/minecraft/world/level/block/state/properties/NoteBlockInstrument
	m	(Ljava/lang/String;ILjava/lang/String;Lhe;Ldgk$a;)V	<init>	<init>
		p	3		name
		p	4		sound
		p	5		type
	m	()Lhe;	a	getSoundEvent
	m	()Z	b	isTunable
	m	()Ljava/lang/String;	c	getSerializedName
	m	()Z	d	hasCustomSound
	m	()Z	e	worksAboveNoteBlock
	m	()[Ldgk;	f	$values
	f	[Ldgk;	A	$VALUES
	f	Ldgk;	a	HARP
	f	Ldgk;	b	BASEDRUM
	f	Ldgk;	c	SNARE
	f	Ldgk;	d	HAT
	f	Ldgk;	e	BASS
	f	Ldgk;	f	FLUTE
	f	Ldgk;	g	BELL
	f	Ldgk;	h	GUITAR
	f	Ldgk;	i	CHIME
	f	Ldgk;	j	XYLOPHONE
	f	Ldgk;	k	IRON_XYLOPHONE
	f	Ldgk;	l	COW_BELL
	f	Ldgk;	m	DIDGERIDOO
	f	Ldgk;	n	BIT
	f	Ldgk;	o	BANJO
	f	Ldgk;	p	PLING
	f	Ldgk;	q	ZOMBIE
	f	Ldgk;	r	SKELETON
	f	Ldgk;	s	CREEPER
	f	Ldgk;	t	DRAGON
	f	Ldgk;	u	WITHER_SKELETON
	f	Ldgk;	v	PIGLIN
	f	Ldgk;	w	CUSTOM_HEAD
	f	Ljava/lang/String;	x	name
	f	Lhe;	y	soundEvent
	f	Ldgk$a;	z	type
c	dgk$a	net/minecraft/world/level/block/state/properties/NoteBlockInstrument$Type
	m	()[Ldgk$a;	a	$values
	f	Ldgk$a;	a	BASE_BLOCK
	f	Ldgk$a;	b	MOB_HEAD
	f	Ldgk$a;	c	CUSTOM
	f	[Ldgk$a;	d	$VALUES
c	dgl	net/minecraft/world/level/block/state/properties/PistonType
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()[Ldgl;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Ldgl;	a	DEFAULT
	f	Ldgl;	b	STICKY
	f	Ljava/lang/String;	c	name
	f	[Ldgl;	d	$VALUES
c	dgm	net/minecraft/world/level/block/state/properties/Property
	m	(Ljava/lang/String;Ljava/lang/Class;)V	<init>	<init>
		p	1		name
		p	2		type
	m	()Ljava/util/Collection;	a	getPossibleValues
	m	(Lcom/mojang/serialization/DynamicOps;Ldfl;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	parseValue
		p	1		ops
		p	2		state
		p	3		input
	m	(Ldfl;)Ldgm$a;	a	value
		p	1		state
	m	(Ldfl;Ljava/lang/Comparable;)Ldfl;	a	lambda$parseValue$3
		p	2		property
	m	(Ljava/lang/Comparable;)Ljava/lang/String;	a	getName
		p	1		value
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	a	lambda$new$2
		p	1		value
	m	()I	b	generateHashCode
	m	(Ljava/lang/Comparable;)Ldgm$a;	b	value
		p	1		value
	m	(Ljava/lang/String;)Ljava/util/Optional;	b	getValue
		p	1		name
	m	()Ljava/util/stream/Stream;	c	getAllValues
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	c	lambda$new$1
	m	()Lcom/mojang/serialization/Codec;	d	codec
	m	(Ljava/lang/String;)Ljava/lang/String;	d	lambda$new$0
	m	()Lcom/mojang/serialization/Codec;	e	valueCodec
	m	()Ljava/lang/String;	f	getName
	m	()Ljava/lang/Class;	g	getValueClass
	f	Ljava/lang/Class;	a	clazz
	f	Ljava/lang/String;	b	name
	f	Ljava/lang/Integer;	c	hashCode
	f	Lcom/mojang/serialization/Codec;	d	codec
	f	Lcom/mojang/serialization/Codec;	e	valueCodec
c	dgm$a	net/minecraft/world/level/block/state/properties/Property$Value
	m	(Ldgm;Ljava/lang/Comparable;)V	<init>	<init>
		p	1		property
		p	2		value
	m	()Ldgm;	a	property
	m	()Ljava/lang/Comparable;	b	value
	f	Ldgm;	a	property
	f	Ljava/lang/Comparable;	b	value
c	dgn	net/minecraft/world/level/block/state/properties/RailShape
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()Ljava/lang/String;	a	getName
	m	()Z	b	isAscending
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Ldgn;	d	$values
	f	Ldgn;	a	NORTH_SOUTH
	f	Ldgn;	b	EAST_WEST
	f	Ldgn;	c	ASCENDING_EAST
	f	Ldgn;	d	ASCENDING_WEST
	f	Ldgn;	e	ASCENDING_NORTH
	f	Ldgn;	f	ASCENDING_SOUTH
	f	Ldgn;	g	SOUTH_EAST
	f	Ldgn;	h	SOUTH_WEST
	f	Ldgn;	i	NORTH_WEST
	f	Ldgn;	j	NORTH_EAST
	f	Ljava/lang/String;	k	name
	f	[Ldgn;	l	$VALUES
c	dgo	net/minecraft/world/level/block/state/properties/RedstoneSide
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()Z	a	isConnected
	m	()[Ldgo;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Ldgo;	a	UP
	f	Ldgo;	b	SIDE
	f	Ldgo;	c	NONE
	f	Ljava/lang/String;	d	name
	f	[Ldgo;	e	$VALUES
c	dgp	net/minecraft/world/level/block/state/properties/RotationSegment
	m	()I	a	getMaxSegmentIndex
	m	(F)I	a	convertToSegment
		p	0		yaw
	m	(I)Ljava/util/Optional;	a	convertToDirection
		p	0		rotation
	m	(Lha;)I	a	convertToSegment
		p	0		direction
	m	(I)F	b	convertToDegrees
		p	0		rotation
	f	Lasf;	a	SEGMENTED_ANGLE16
	f	I	b	MAX_SEGMENT_INDEX
	f	I	c	NORTH_0
	f	I	d	EAST_90
	f	I	e	SOUTH_180
	f	I	f	WEST_270
c	dgq	net/minecraft/world/level/block/state/properties/SculkSensorPhase
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()[Ldgq;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Ldgq;	a	INACTIVE
	f	Ldgq;	b	ACTIVE
	f	Ldgq;	c	COOLDOWN
	f	Ljava/lang/String;	d	name
	f	[Ldgq;	e	$VALUES
c	dgr	net/minecraft/world/level/block/state/properties/SlabType
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()[Ldgr;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Ldgr;	a	TOP
	f	Ldgr;	b	BOTTOM
	f	Ldgr;	c	DOUBLE
	f	Ljava/lang/String;	d	name
	f	[Ldgr;	e	$VALUES
c	dgs	net/minecraft/world/level/block/state/properties/StairsShape
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()[Ldgs;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Ldgs;	a	STRAIGHT
	f	Ldgs;	b	INNER_LEFT
	f	Ldgs;	c	INNER_RIGHT
	f	Ldgs;	d	OUTER_LEFT
	f	Ldgs;	e	OUTER_RIGHT
	f	Ljava/lang/String;	f	name
	f	[Ldgs;	g	$VALUES
c	dgt	net/minecraft/world/level/block/state/properties/StructureMode
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()Ltl;	a	getDisplayName
	m	()[Ldgt;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Ldgt;	a	SAVE
	f	Ldgt;	b	LOAD
	f	Ldgt;	c	CORNER
	f	Ldgt;	d	DATA
	f	Ljava/lang/String;	e	name
	f	Ltl;	f	displayName
	f	[Ldgt;	g	$VALUES
c	dgu	net/minecraft/world/level/block/state/properties/Tilt
	m	(Ljava/lang/String;ILjava/lang/String;Z)V	<init>	<init>
		p	3		name
		p	4		stable
	m	()Z	a	causesVibration
	m	()[Ldgu;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Ldgu;	a	NONE
	f	Ldgu;	b	UNSTABLE
	f	Ldgu;	c	PARTIAL
	f	Ldgu;	d	FULL
	f	Ljava/lang/String;	e	name
	f	Z	f	causesVibration
	f	[Ldgu;	g	$VALUES
c	dgv	net/minecraft/world/level/block/state/properties/WallSide
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()[Ldgv;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Ldgv;	a	NONE
	f	Ldgv;	b	LOW
	f	Ldgv;	c	TALL
	f	Ljava/lang/String;	d	name
	f	[Ldgv;	e	$VALUES
c	dgw	net/minecraft/world/level/block/state/properties/WoodType
	m	(Ljava/lang/String;Ldfy;)V	<init>	<init>
		p	1		name
		p	2		setType
	m	()Ljava/util/stream/Stream;	a	values
	m	(Ldgw;)Ldgw;	a	register
		p	0		type
	m	()Ljava/lang/String;	b	name
	m	()Ldfy;	c	setType
	m	()Ldai;	d	soundType
	m	()Ldai;	e	hangingSignSoundType
	m	()Lapc;	f	fenceGateClose
	m	()Lapc;	g	fenceGateOpen
	f	Ldgw;	a	OAK
	f	Ldgw;	b	SPRUCE
	f	Ldgw;	c	BIRCH
	f	Ldgw;	d	ACACIA
	f	Ldgw;	e	CHERRY
	f	Ldgw;	f	JUNGLE
	f	Ldgw;	g	DARK_OAK
	f	Ldgw;	h	CRIMSON
	f	Ldgw;	i	WARPED
	f	Ldgw;	j	MANGROVE
	f	Ldgw;	k	BAMBOO
	f	Ljava/lang/String;	l	name
	f	Ldfy;	m	setType
	f	Ldai;	n	soundType
	f	Ldai;	o	hangingSignSoundType
	f	Lapc;	p	fenceGateClose
	f	Lapc;	q	fenceGateOpen
	f	Ljava/util/Set;	r	VALUES
c	dgx	net/minecraft/world/level/block/state/properties/package-info
c	dgy	net/minecraft/world/level/border/BorderChangeListener
	m	(Ldha;D)V	a	onBorderSizeSet
		p	1		border
		p	2		size
	m	(Ldha;DD)V	a	onBorderCenterSet
		p	1		border
		p	2		centerX
		p	4		centerZ
	m	(Ldha;DDJ)V	a	onBorderSizeLerping
		p	1		border
		p	2		fromSize
		p	4		toSize
		p	6		time
	m	(Ldha;I)V	a	onBorderSetWarningTime
		p	1		border
		p	2		warningTime
	m	(Ldha;D)V	b	onBorderSetDamagePerBlock
		p	1		border
		p	2		damagePerBlock
	m	(Ldha;I)V	b	onBorderSetWarningBlocks
		p	1		border
		p	2		warningBlockDistance
	m	(Ldha;D)V	c	onBorderSetDamageSafeZOne
		p	1		border
		p	2		safeZoneRadius
c	dgy$a	net/minecraft/world/level/border/BorderChangeListener$DelegateBorderChangeListener
	m	(Ldha;)V	<init>	<init>
		p	1		border
	m	(Ldha;D)V	a	onBorderSizeSet
		p	1		border
		p	2		size
	m	(Ldha;DD)V	a	onBorderCenterSet
		p	1		border
		p	2		centerX
		p	4		centerZ
	m	(Ldha;DDJ)V	a	onBorderSizeLerping
		p	1		border
		p	2		fromSize
		p	4		toSize
		p	6		time
	m	(Ldha;I)V	a	onBorderSetWarningTime
		p	1		border
		p	2		warningTime
	m	(Ldha;D)V	b	onBorderSetDamagePerBlock
		p	1		border
		p	2		damagePerBlock
	m	(Ldha;I)V	b	onBorderSetWarningBlocks
		p	1		border
		p	2		warningBlockDistance
	m	(Ldha;D)V	c	onBorderSetDamageSafeZOne
		p	1		border
		p	2		safeZoneRadius
	f	Ldha;	a	worldBorder
c	dgz	net/minecraft/world/level/border/BorderStatus
	m	(Ljava/lang/String;II)V	<init>	<init>
		p	3		color
	m	()I	a	getColor
	m	()[Ldgz;	b	$values
	f	Ldgz;	a	GROWING
	f	Ldgz;	b	SHRINKING
	f	Ldgz;	c	STATIONARY
	f	I	d	color
	f	[Ldgz;	e	$VALUES
c	dha	net/minecraft/world/level/border/WorldBorder
	m	()D	a	getCenterX
	m	(D)V	a	setSize
		p	1		size
	m	(DD)Z	a	isWithinBounds
		p	1		x
		p	3		z
	m	(DDD)Z	a	isWithinBounds
		p	1		x
		p	3		z
		p	5		margin
	m	(DDJ)V	a	lerpSizeBetween
		p	1		fromSize
		p	3		toSize
		p	5		time
	m	(I)V	a	setAbsoluteMaxSize
		p	1		maxRadius
	m	(Lbiq;)D	a	getDistanceToBorder
		p	1		entity
	m	(Lbiq;Lehi;)Z	a	isInsideCloseToBorder
		p	1		entity
		p	2		box
	m	(Lcpc;)Z	a	isWithinBounds
		p	1		pos
	m	(Ldgy;)V	a	addListener
		p	1		listener
	m	(Ldha$c;)V	a	applySettings
		p	1		properties
	m	(Lehi;)Z	a	isWithinBounds
		p	1		box
	m	(Lgw;)Z	a	isWithinBounds
		p	1		pos
	m	()D	b	getCenterZ
	m	(D)V	b	setDamageSafeZone
		p	1		safeZone
	m	(DD)D	b	getDistanceToBorder
		p	1		x
		p	3		z
	m	(DDD)Lgw;	b	clampToBounds
		p	1		x
		p	3		y
		p	5		z
	m	(I)V	b	setWarningTime
		p	1		warningTime
	m	(Ldgy;)V	b	removeListener
		p	1		listener
	m	()Leig;	c	getCollisionShape
	m	(D)V	c	setDamagePerBlock
		p	1		damagePerBlock
	m	(DD)V	c	setCenter
		p	1		x
		p	3		z
	m	(I)V	c	setWarningBlocks
		p	1		warningBlocks
	m	()Ldgz;	d	getStatus
	m	()D	e	getMinX
	m	()D	f	getMinZ
	m	()D	g	getMaxX
	m	()D	h	getMaxZ
	m	()D	i	getSize
	m	()J	j	getLerpRemainingTime
	m	()D	k	getLerpTarget
	m	()Ljava/util/List;	l	getListeners
	m	()I	m	getAbsoluteMaxSize
	m	()D	n	getDamageSafeZone
	m	()D	o	getDamagePerBlock
	m	()D	p	getLerpSpeed
	m	()I	q	getWarningTime
	m	()I	r	getWarningBlocks
	m	()V	s	tick
	m	()Ldha$c;	t	createSettings
	f	Ljava/util/List;	a	listeners
	f	D	b	damagePerBlock
	f	D	c	MAX_SIZE
	f	D	d	MAX_CENTER_COORDINATE
	f	Ldha$c;	e	DEFAULT_SETTINGS
	f	D	f	damageSafeZone
	f	I	g	warningTime
	f	I	h	warningBlocks
	f	D	i	centerX
	f	D	j	centerZ
	f	I	k	absoluteMaxSize
	f	Ldha$a;	l	extent
c	dha$a	net/minecraft/world/level/border/WorldBorder$BorderExtent
	m	()D	a	getMinX
	m	()D	b	getMaxX
	m	()D	c	getMinZ
	m	()D	d	getMaxZ
	m	()D	e	getSize
	m	()D	f	getLerpSpeed
	m	()J	g	getLerpRemainingTime
	m	()D	h	getLerpTarget
	m	()Ldgz;	i	getStatus
	m	()V	j	onAbsoluteMaxSizeChange
	m	()V	k	onCenterChange
	m	()Ldha$a;	l	update
	m	()Leig;	m	getCollisionShape
c	dha$b	net/minecraft/world/level/border/WorldBorder$MovingBorderExtent
	m	(Ldha;DDJ)V	<init>	<init>
		p	2		oldSize
		p	4		newSize
		p	6		timeDuration
	m	()D	a	getMinX
	m	()D	b	getMaxX
	m	()D	c	getMinZ
	m	()D	d	getMaxZ
	m	()D	e	getSize
	m	()D	f	getLerpSpeed
	m	()J	g	getLerpRemainingTime
	m	()D	h	getLerpTarget
	m	()Ldgz;	i	getStatus
	m	()V	j	onAbsoluteMaxSizeChange
	m	()V	k	onCenterChange
	m	()Ldha$a;	l	update
	m	()Leig;	m	getCollisionShape
	f	Ldha;	a	this$0
	f	D	b	from
	f	D	c	to
	f	J	d	lerpEnd
	f	J	e	lerpBegin
	f	D	f	lerpDuration
c	dha$c	net/minecraft/world/level/border/WorldBorder$Settings
	m	(DDDDIIDJD)V	<init>	<init>
		p	1		centerX
		p	3		centerZ
		p	5		damagePerBlock
		p	7		safeZone
		p	9		warningBlocks
		p	10		warningTime
		p	11		size
		p	13		sizeLerpTime
		p	15		sizeLerpTarget
	m	(Ldha;)V	<init>	<init>
		p	1		worldBorder
	m	()D	a	getCenterX
	m	(Lcom/mojang/serialization/DynamicLike;Ldha$c;)Ldha$c;	a	read
		p	0		dynamic
		p	1		properties
	m	(Lqw;)V	a	write
		p	1		nbt
	m	()D	b	getCenterZ
	m	()D	c	getDamagePerBlock
	m	()D	d	getSafeZone
	m	()I	e	getWarningBlocks
	m	()I	f	getWarningTime
	m	()D	g	getSize
	m	()J	h	getSizeLerpTime
	m	()D	i	getSizeLerpTarget
	f	D	a	centerX
	f	D	b	centerZ
	f	D	c	damagePerBlock
	f	D	d	safeZone
	f	I	e	warningBlocks
	f	I	f	warningTime
	f	D	g	size
	f	J	h	sizeLerpTime
	f	D	i	sizeLerpTarget
c	dha$d	net/minecraft/world/level/border/WorldBorder$StaticBorderExtent
	m	(Ldha;D)V	<init>	<init>
		p	2		size
	m	()D	a	getMinX
	m	()D	b	getMaxX
	m	()D	c	getMinZ
	m	()D	d	getMaxZ
	m	()D	e	getSize
	m	()D	f	getLerpSpeed
	m	()J	g	getLerpRemainingTime
	m	()D	h	getLerpTarget
	m	()Ldgz;	i	getStatus
	m	()V	j	onAbsoluteMaxSizeChange
	m	()V	k	onCenterChange
	m	()Ldha$a;	l	update
	m	()Leig;	m	getCollisionShape
	m	()V	n	updateBox
	f	Ldha;	a	this$0
	f	D	b	size
	f	D	c	minX
	f	D	d	minZ
	f	D	e	maxX
	f	D	f	maxZ
	f	Leig;	g	shape
c	dhb	net/minecraft/world/level/border/package-info
c	dhc	net/minecraft/world/level/chunk/BlockColumn
	m	(I)Ldfj;	a	getBlock
		p	1		y
	m	(ILdfj;)V	a	setBlock
		p	1		y
		p	2		state
c	dhd	net/minecraft/world/level/chunk/BulkSectionAccess
	m	(Lcpw;)V	<init>	<init>
		p	1		world
	m	(Lgw;)Ldhr;	a	getSection
		p	1		pos
	m	(Lgw;IJ)Ldhr;	a	lambda$getSection$0
	m	(Lgw;)Ldfj;	b	getBlockState
		p	1		pos
	f	Lcpw;	a	level
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	b	acquiredSections
	f	Ldhr;	c	lastSection
	f	J	d	lastSectionKey
c	dhe	net/minecraft/world/level/chunk/CarvingMask
	m	(II)V	<init>	<init>
		p	1		height
		p	2		bottomY
	m	([JI)V	<init>	<init>
		p	1		mask
		p	2		bottomY
	m	()[J	a	toArray
	m	(III)V	a	set
		p	1		offsetX
		p	2		y
		p	3		offsetZ
	m	(Lcpc;)Ljava/util/stream/Stream;	a	stream
		p	1		chunkPos
	m	(Lcpc;I)Lgw;	a	lambda$stream$1
		p	2		mask
	m	(Ldhe$a;)V	a	setAdditionalMask
		p	1		maskPredicate
	m	(III)Z	b	get
		p	1		offsetX
		p	2		y
		p	3		offsetZ
	m	(III)I	c	getIndex
		p	1		offsetX
		p	2		y
		p	3		offsetZ
	m	(III)Z	d	lambda$new$0
		p	0		offsetX
		p	1		y
		p	2		offsetZ
	f	I	a	minY
	f	Ljava/util/BitSet;	b	mask
	f	Ldhe$a;	c	additionalMask
c	dhe$a	net/minecraft/world/level/chunk/CarvingMask$Mask
	m	(III)Z	test	test
		p	1		offsetX
		p	2		y
		p	3		offsetZ
c	dhf	net/minecraft/world/level/chunk/ChunkAccess
	m	(Lcpc;Ldid;Lcpx;Lhq;J[Ldhr;Ldlv;)V	<init>	<init>
		p	1		pos
		p	2		upgradeData
		p	3		heightLimitView
		p	4		biomeRegistry
		p	5		inhabitedTime
		p	7		sectionArray
		p	8		blendingData
	m	()V	A	initializeLightSources
	m	()Ldzw;	B	getSkyLightSources
	m	()I	H_	getMinBuildHeight
	m	()I	I_	getHeight
	m	()I	a	getHighestFilledSectionIndex
	m	(I)Ldjw;	a	getListenerRegistry
		p	1		ySectionCoord
	m	(II)Z	a	isYSpaceEmpty
		p	1		lowerHeight
		p	2		upperHeight
	m	(III)Ljava/lang/String;	a	lambda$getNoiseBiome$3
	m	(J)V	a	incrementInhabitedTime
		p	1		delta
	m	(Lbiq;)V	a	addEntity
		p	1		entity
	m	(Lcqw;Lcrc$f;)V	a	fillBiomesFromNoise
		p	1		biomeSupplier
		p	2		sampler
	m	(Ldcv;)V	a	setBlockEntity
		p	1		blockEntity
	m	(Ldfj;)Z	a	lambda$findBlockLightSources$2
		p	0		blockState
	m	(Ldks$a;)Ldks;	a	getOrCreateHeightmapUnprimed
		p	1		type
	m	(Ldks$a;II)I	a	getHeight
		p	1		type
		p	2		x
		p	3		z
	m	(Ldks$a;[J)V	a	setHeightmap
		p	1		type
		p	2		heightmap
	m	(Ldlv;)V	a	setBlendingData
		p	1		blendingData
	m	(Ldvi;)Ldvq;	a	getStartForStructure
		p	1		structure
	m	(Ldvi;J)V	a	addReferenceForStructure
		p	1		structure
		p	2		reference
	m	(Ldvi;Ldvq;)V	a	setStartForStructure
		p	1		structure
		p	2		start
	m	(Lgw;Ldfj;Z)Ldfj;	a	setBlockState
		p	1		pos
		p	2		state
		p	3		moved
	m	(Lhq;[Ldhr;)V	a	replaceMissingSections
		p	0		biomeRegistry
		p	1		sectionArray
	m	(Ljava/util/Map;)V	a	setAllStarts
		p	1		structureStarts
	m	(Ljava/util/function/BiConsumer;)V	a	findBlockLightSources
		p	1		callback
	m	(Ljava/util/function/Function;)Ldkw;	a	getOrCreateNoiseChunk
		p	1		chunkNoiseSamplerCreator
	m	(Ljava/util/function/Predicate;Ljava/util/function/BiConsumer;)V	a	findBlocks
		p	1		predicate
		p	2		consumer
	m	(Ljava/util/function/Supplier;)Lcqu;	a	carverBiome
		p	1		generationSettingsCreator
	m	(Lqw;)V	a	setBlockEntityNbt
		p	1		nbt
	m	(SI)V	a	addPackedPostProcess
		p	1		packedPos
		p	2		index
	m	(Z)V	a	setUnsaved
		p	1		needsSaving
	m	([Lit/unimi/dsi/fastutil/shorts/ShortList;I)Lit/unimi/dsi/fastutil/shorts/ShortList;	a	getOrCreateOffsetList
		p	0		lists
		p	1		index
	m	()I	b	getHighestSectionPosition
	m	(I)Ldhr;	b	getSection
		p	1		yIndex
	m	(J)V	b	setInhabitedTime
		p	1		inhabitedTime
	m	(Ldks$a;)Z	b	hasPrimedHeightmap
		p	1		type
	m	(Ldvi;)Lit/unimi/dsi/fastutil/longs/LongSet;	b	getReferencesForStructure
		p	1		structure
	m	(Ljava/util/Map;)V	b	setAllReferences
		p	1		structureReferences
	m	(Z)V	b	setLightCorrect
		p	1		lightOn
	m	()Ljava/util/Set;	c	getBlockEntitiesPos
	m	(Ldks$a;)Ldks;	c	lambda$getOrCreateHeightmapUnprimed$0
		p	1		type2
	m	(Ldvi;)Lit/unimi/dsi/fastutil/longs/LongSet;	c	lambda$addReferenceForStructure$1
		p	0		type2
	m	()[Ldhr;	d	getSections
	m	(Lgw;)V	d	removeBlockEntity
		p	1		pos
	m	()Ljava/util/Collection;	e	getHeightmaps
	m	(Lgw;)V	e	markPosForPostprocessing
		p	1		pos
	m	()Lcpc;	f	getPos
	m	(Lgw;)Lqw;	f	getBlockEntityNbt
		p	1		pos
	m	()Ljava/util/Map;	g	getAllStarts
	m	(Lgw;)Lqw;	g	getBlockEntityNbtForSaving
		p	1		pos
	m	(III)Lhe;	getNoiseBiome	getNoiseBiome
		p	1		biomeX
		p	2		biomeY
		p	3		biomeZ
	m	()Ljava/util/Map;	h	getAllReferences
	m	()Z	i	isUnsaved
	m	()Ldhk;	j	getStatus
	m	()Ldhk;	k	getHighestGeneratedStatus
	m	()[Lit/unimi/dsi/fastutil/shorts/ShortList;	n	getPostProcessing
	m	()Lejc;	o	getBlockTicks
	m	()Lejc;	p	getFluidTicks
	m	()Ldhf$a;	q	getTicksForSerialization
	m	()Ldid;	r	getUpgradeData
	m	()Z	s	isOldNoiseGeneration
	m	()Ldlv;	t	getBlendingData
	m	()J	u	getInhabitedTime
	m	()Z	v	isLightCorrect
	m	()Z	w	hasAnyStructureReferences
	m	()Ldkg;	x	getBelowZeroRetrogen
	m	()Z	y	isUpgrading
	m	()Lcpx;	z	getHeightAccessorForGeneration
	f	I	a	NO_FILLED_SECTION
	f	[Lit/unimi/dsi/fastutil/shorts/ShortList;	b	postProcessing
	f	Z	c	unsaved
	f	Lcpc;	d	chunkPos
	f	Ldkw;	e	noiseChunk
	f	Ldid;	f	upgradeData
	f	Ldlv;	g	blendingData
	f	Ljava/util/Map;	h	heightmaps
	f	Ldzw;	i	skyLightSources
	f	Ljava/util/Map;	j	pendingBlockEntities
	f	Ljava/util/Map;	k	blockEntities
	f	Lcpx;	l	levelHeightAccessor
	f	[Ldhr;	m	sections
	f	Lorg/slf4j/Logger;	n	LOGGER
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	o	EMPTY_REFERENCE_SET
	f	Z	p	isLightCorrect
	f	J	q	inhabitedTime
	f	Lcqu;	r	carverBiomeSettings
	f	Ljava/util/Map;	s	structureStarts
	f	Ljava/util/Map;	t	structuresRefences
c	dhf$a	net/minecraft/world/level/chunk/ChunkAccess$TicksToSave
	m	()Leja;	a	blocks
	m	()Leja;	b	fluids
	f	Leja;	a	blocks
	f	Leja;	b	fluids
c	dhg	net/minecraft/world/level/chunk/ChunkGenerator
	m	(Lcqx;)V	<init>	<init>
		p	1		biomeSource
	m	(Lcqx;Ljava/util/function/Function;)V	<init>	<init>
		p	1		biomeSource
		p	2		generationSettingsGetter
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(IILcpx;Ldlg;)Lcqh;	a	getBaseColumn
		p	1		x
		p	2		z
		p	3		world
		p	4		noiseConfig
	m	(IILdks$a;Lcpx;Ldlg;)I	a	getBaseHeight
		p	1		x
		p	2		z
		p	3		heightmap
		p	4		world
		p	5		noiseConfig
	m	(Lakq;Lhi;Lgw;IZ)Lcom/mojang/datafixers/util/Pair;	a	findNearestMapStructure
		p	1		world
		p	2		structures
		p	3		center
		p	4		radius
		p	5		skipReferencedStructures
	m	(Lakx;)V	a	spawnOriginalMobs
		p	1		region
	m	(Lakx;JLdlg;Lcqv;Lcqn;Ldhf;Ldko$a;)V	a	applyCarvers
		p	1		chunkRegion
		p	2		seed
		p	4		noiseConfig
		p	5		biomeAccess
		p	6		structureAccessor
		p	7		chunk
		p	8		carverStep
	m	(Lakx;Lcqn;Ldlg;Ldhf;)V	a	buildSurface
		p	1		region
		p	2		structures
		p	3		noiseConfig
		p	4		chunk
	m	(Lcpx;)I	a	getSpawnHeight
		p	1		world
	m	(Lcqn;Ldhf;Lhw;Ldvi;)I	a	fetchReferences
		p	0		structureAccessor
		p	1		chunk
		p	2		sectionPos
		p	3		structure
	m	(Lcqn;Ldvq;)Z	a	tryAddReference
		p	0		structureAccessor
		p	1		start
	m	(Lcqn;Lgw;Ldvq;)Z	a	lambda$getMobsAt$11
		p	2		start
	m	(Lcqn;Lhw;Ldhf;Ldhh;Lcpc;Lhr;Ldlg;Ldzc;Lhe;)V	a	lambda$createStructures$14
		p	9		structureSet
	m	(Lcqp;Lcqn;Ldhf;)V	a	createReferences
		p	1		world
		p	2		structureAccessor
		p	3		chunk
	m	(Lcqp;Lcqn;Ldlr;Ldhf;Lcpc;Ldvq;)V	a	lambda$applyBiomeDecoration$8
		p	6		start
	m	(Lcqp;Ldhf;Lcqn;)V	a	applyBiomeDecoration
		p	1		world
		p	2		chunk
		p	3		structureAccessor
	m	(Lcqp;Ljava/util/Set;Lcpc;)V	a	lambda$applyBiomeDecoration$6
		p	0		pos
	m	(Lcqx;Ljava/util/function/Function;)Ljava/util/List;	a	lambda$new$2
	m	(Ldhf;)Ldva;	a	getWritableArea
		p	0		chunk
	m	(Ldhf;Ldlg;)Ldhf;	a	lambda$createBiomes$3
	m	(Ldvi;)Ljava/lang/Integer;	a	lambda$applyBiomeDecoration$5
		p	0		structureType
	m	(Ldvo$a;Lcqn;Lhr;Ldlg;Ldzc;JLdhf;Lcpc;Lhw;)Z	a	tryGenerateStructure
		p	1		weightedEntry
		p	2		structureAccessor
		p	3		dynamicRegistryManager
		p	4		noiseConfig
		p	5		structureManager
		p	6		seed
		p	8		chunk
		p	9		pos
		p	10		sectionPos
	m	(Ldvq;)Ljava/lang/String;	a	lambda$createReferences$18
	m	(Ldvq;Lhq;)Ljava/lang/String;	a	lambda$createReferences$15
		p	1		structureTypeRegistry
	m	(Ldwf;)Ljava/util/Set;	a	lambda$findNearestMapStructure$4
		p	0		placement
	m	(Lgw;Ldvq;)Z	a	lambda$getMobsAt$12
		p	1		start
	m	(Lhe;)Lcqu;	a	getBiomeGenerationSettings
		p	1		biomeEntry
	m	(Lhe;Lcqn;Lbjj;Lgw;)Lbfm;	a	getMobsAt
		p	1		biome
		p	2		accessor
		p	3		group
		p	4		pos
	m	(Lhg;Ldlg;J)Ldhh;	a	createState
		p	1		structureSetRegistry
		p	2		noiseConfig
		p	3		seed
	m	(Lhq;Ldum;)Ljava/lang/String;	a	lambda$applyBiomeDecoration$10
	m	(Lhq;Ldvi;)Ljava/lang/String;	a	lambda$applyBiomeDecoration$7
	m	(Lhr;Ldhh;Lcqn;Ldhf;Ldzc;)V	a	createStructures
		p	1		registryManager
		p	2		placementCalculator
		p	3		structureAccessor
		p	4		chunk
		p	5		structureTemplateManager
	m	(Lit/unimi/dsi/fastutil/ints/IntSet;Lcrd$b;Ldum;)V	a	lambda$applyBiomeDecoration$9
		p	0		feature
	m	(Ljava/util/List;Ldlg;Lgw;)V	a	addDebugScreenInfo
		p	1		text
		p	2		noiseConfig
		p	3		pos
	m	(Ljava/util/Optional;Ldvq;)Ljava/lang/String;	a	lambda$createReferences$16
	m	(Ljava/util/Set;Lakq;Lcqn;Lgw;ZLdwc;)Lcom/mojang/datafixers/util/Pair;	a	getNearestGeneratedStructure
		p	1		structures
		p	2		world
		p	3		structureAccessor
		p	4		center
		p	5		skipReferencedStructures
		p	6		placement
	m	(Ljava/util/Set;Lcpy;Lcqn;IIIZJLdwd;)Lcom/mojang/datafixers/util/Pair;	a	getNearestGeneratedStructure
		p	0		structures
		p	1		world
		p	2		structureAccessor
		p	3		centerChunkX
		p	4		centerChunkZ
		p	5		radius
		p	6		skipReferencedStructures
		p	7		seed
		p	9		placement
	m	(Ljava/util/Set;Lcpy;Lcqn;ZLdwf;Lcpc;)Lcom/mojang/datafixers/util/Pair;	a	getStructureGeneratingAt
		p	0		structures
		p	1		world
		p	2		structureAccessor
		p	3		skipReferencedStructures
		p	4		placement
		p	5		pos
	m	(Ljava/util/concurrent/Executor;Ldlg;Ldlu;Lcqn;Ldhf;)Ljava/util/concurrent/CompletableFuture;	a	createBiomes
		p	1		executor
		p	2		noiseConfig
		p	3		blender
		p	4		structureAccessor
		p	5		chunk
	m	(Ljava/util/concurrent/Executor;Ldlu;Ldlg;Lcqn;Ldhf;)Ljava/util/concurrent/CompletableFuture;	a	fillFromNoise
		p	1		executor
		p	2		blender
		p	3		noiseConfig
		p	4		structureAccessor
		p	5		chunk
	m	(Ljava/util/function/Function;Lhe;)Ljava/util/List;	a	lambda$new$1
		p	1		biomeEntry
	m	(Lorg/apache/commons/lang3/mutable/MutableBoolean;Ljava/util/function/Predicate;Ldvq;)V	a	lambda$getMobsAt$13
		p	2		start
	m	()Ljava/util/Optional;	b	getTypeNameForDataFixer
	m	(IILdks$a;Lcpx;Ldlg;)I	b	getFirstFreeHeight
		p	1		x
		p	2		z
		p	3		heightmap
		p	4		world
		p	5		noiseConfig
	m	(Ldvq;)Ljava/lang/String;	b	lambda$createReferences$17
	m	(Lhe;)Lcqu;	b	lambda$new$0
		p	0		biomeEntry
	m	()Lcqx;	c	getBiomeSource
	m	(IILdks$a;Lcpx;Ldlg;)I	c	getFirstOccupiedHeight
		p	1		x
		p	2		z
		p	3		heightmap
		p	4		world
		p	5		noiseConfig
	m	()I	d	getGenDepth
	m	()I	e	getSeaLevel
	m	()I	f	getMinY
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcqx;	b	biomeSource
	f	Ljava/util/function/Supplier;	c	featuresPerStep
	f	Ljava/util/function/Function;	d	generationSettingsGetter
c	dhh	net/minecraft/world/level/chunk/ChunkGeneratorStructureState
	m	(Ldlg;Lcqx;JJLjava/util/List;)V	<init>	<init>
		p	1		noiseConfig
		p	2		biomeSource
		p	3		structureSeed
		p	5		concentricRingSeed
		p	7		structureSets
	m	()Ljava/util/List;	a	possibleStructureSets
	m	(IILhi;Lasc;)Lcpc;	a	lambda$generateRingPositions$5
	m	(Lcom/google/common/base/Stopwatch;Lhe;Ljava/util/List;)Ljava/util/List;	a	lambda$generateRingPositions$6
		p	2		positions
	m	(Lcqx;Lhe$c;)Z	a	lambda$createForNormal$1
		p	1		structureSet
	m	(Lcqx;Lhe;)Z	a	lambda$createForFlat$0
		p	1		structureSet
	m	(Ldlg;JLcqx;Lhg;)Ldhh;	a	createForNormal
		p	0		noiseConfig
		p	1		seed
		p	3		biomeSource
		p	4		structureSetRegistry
	m	(Ldlg;JLcqx;Ljava/util/stream/Stream;)Ldhh;	a	createForFlat
		p	0		noiseConfig
		p	1		seed
		p	3		biomeSource
		p	4		structureSets
	m	(Ldvi;)Ljava/util/List;	a	lambda$generatePositions$3
		p	0		structure
	m	(Ldvo$a;)Ljava/util/stream/Stream;	a	lambda$hasBiomesForStructureSet$2
		p	0		structure
	m	(Ldvo;Lcqx;)Z	a	hasBiomesForStructureSet
		p	0		structureSet
		p	1		biomeSource
	m	(Ldwc;)Ljava/util/List;	a	getRingPositionsFor
		p	1		placement
	m	(Lhe;)Ljava/util/List;	a	getPlacementsForStructure
		p	1		structureEntry
	m	(Lhe;III)Z	a	hasStructureChunkInRange
		p	1		structureSetEntry
		p	2		centerChunkX
		p	3		centerChunkZ
		p	4		chunkCount
	m	(Lhe;Ldwc;)Ljava/util/concurrent/CompletableFuture;	a	generateRingPositions
		p	1		structureSetEntry
		p	2		placement
	m	(Ljava/util/Set;Lhe;)V	a	lambda$generatePositions$4
		p	2		structureSet
	m	()V	b	ensureStructuresGenerated
	m	()Ldlg;	c	randomState
	m	()J	d	getLevelSeed
	m	()V	e	generatePositions
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ldlg;	b	randomState
	f	Lcqx;	c	biomeSource
	f	J	d	levelSeed
	f	J	e	concentricRingsSeed
	f	Ljava/util/Map;	f	placementsForStructure
	f	Ljava/util/Map;	g	ringPositions
	f	Z	h	hasGeneratedPositions
	f	Ljava/util/List;	i	possibleStructureSets
c	dhi	net/minecraft/world/level/chunk/ChunkGenerators
	m	(Lhq;)Lcom/mojang/serialization/Codec;	a	bootstrap
		p	0		registry
c	dhj	net/minecraft/world/level/chunk/ChunkSource
	m	(II)Ldhq;	a	getChunkNow
		p	1		chunkX
		p	2		chunkZ
	m	(IILdhk;Z)Ldhf;	a	getChunk
		p	1		x
		p	2		z
		p	3		leastStatus
		p	4		create
	m	(IIZ)Ldhq;	a	getChunk
		p	1		chunkX
		p	2		chunkZ
		p	3		create
	m	(Lcpc;Z)V	a	updateChunkForced
		p	1		pos
		p	2		forced
	m	(Ljava/util/function/BooleanSupplier;Z)V	a	tick
		p	1		shouldKeepTicking
		p	2		tickChunks
	m	(ZZ)V	a	setSpawnSettings
		p	1		spawnMonsters
		p	2		spawnAnimals
	m	(II)Z	b	hasChunk
		p	1		x
		p	2		z
	m	(II)Ldhs;	c	getChunkForLighting
		p	1		chunkX
		p	2		chunkZ
	m	()Ljava/lang/String;	e	gatherStats
	m	()I	j	getLoadedChunksCount
	m	()Leab;	p	getLightEngine
c	dhk	net/minecraft/world/level/chunk/ChunkStatus
	m	(Ldhk;IZLjava/util/EnumSet;Ldhk$a;Ldhk$b;Ldhk$c;)V	<init>	<init>
		p	1		previous
		p	2		taskMargin
		p	3		shouldAlwaysUpgrade
		p	4		heightMapTypes
		p	5		chunkType
		p	6		generationTask
		p	7		loadTask
	m	()Ljava/util/List;	a	getStatusList
	m	(I)Ldhk;	a	getStatusAroundFullChunk
		p	0		level
	m	(Lakq;Ldzc;Lakt;Ljava/util/function/Function;Ldhf;)Ljava/util/concurrent/CompletableFuture;	a	load
		p	1		world
		p	2		structureTemplateManager
		p	3		lightingProvider
		p	4		fullChunkConverter
		p	5		chunk
	m	(Lakt;Ldhf;)Ljava/util/concurrent/CompletableFuture;	a	initializeLight
		p	0		lightingProvider
		p	1		chunk
	m	(Lbdy;Lcom/mojang/datafixers/util/Either;)Lcom/mojang/datafixers/util/Either;	a	lambda$generate$21
		p	2		chunk
	m	(Ldhf;)Z	a	isLighted
		p	0		chunk
	m	(Ldhk;)I	a	getDistance
		p	0		status
	m	(Ldhk;Lakq;Ldhg;Ljava/util/List;Ldhf;)V	a	lambda$static$16
		p	0		targetStatus
		p	1		world
		p	2		generator
		p	3		chunks
		p	4		chunk
	m	(Ldhk;Lakq;Ldzc;Lakt;Ljava/util/function/Function;Ldhf;)Ljava/util/concurrent/CompletableFuture;	a	lambda$static$18
		p	0		targetStatus
		p	1		world
		p	2		structureTemplateManager
		p	3		lightingProvider
		p	4		fullChunkConverter
		p	5		chunk
	m	(Ldhk;Ljava/util/concurrent/Executor;Lakq;Ldhg;Ldzc;Lakt;Ljava/util/function/Function;Ljava/util/List;Ldhf;)Ljava/util/concurrent/CompletableFuture;	a	lambda$static$17
		p	0		targetStatus
		p	1		executor
		p	2		world
		p	3		generator
		p	4		structureTemplateManager
		p	5		lightingProvider
		p	6		fullChunkConverter
		p	7		chunks
		p	8		chunk
	m	(Lit/unimi/dsi/fastutil/ints/IntArrayList;)V	a	lambda$static$19
		p	0		statusToDistance
	m	(Ljava/lang/String;)Ldhk;	a	byName
		p	0		id
	m	(Ljava/lang/String;Ldhk;ILjava/util/EnumSet;Ldhk$a;Ldhk$b;)Ldhk;	a	register
		p	0		id
		p	1		previous
		p	2		taskMargin
		p	3		heightMapTypes
		p	4		chunkType
		p	5		task
	m	(Ljava/lang/String;Ldhk;ILjava/util/EnumSet;Ldhk$a;Ldhk$d;)Ldhk;	a	registerSimple
		p	0		id
		p	1		previous
		p	2		taskMargin
		p	3		heightMapTypes
		p	4		chunkType
		p	5		task
	m	(Ljava/lang/String;Ldhk;IZLjava/util/EnumSet;Ldhk$a;Ldhk$b;Ldhk$c;)Ldhk;	a	register
		p	0		id
		p	1		previous
		p	2		taskMargin
		p	3		shouldAlwaysUpgrade
		p	4		heightMapTypes
		p	5		chunkType
		p	6		generationTask
		p	7		loadTask
	m	(Ljava/util/concurrent/Executor;Lakq;Ldhg;Ldzc;Lakt;Ljava/util/function/Function;Ljava/util/List;)Ljava/util/concurrent/CompletableFuture;	a	generate
		p	1		executor
		p	2		world
		p	3		generator
		p	4		structureTemplateManager
		p	5		lightingProvider
		p	6		fullChunkConverter
		p	7		chunks
	m	()I	b	maxDistance
	m	(Lakt;Ldhf;)Ljava/util/concurrent/CompletableFuture;	b	lightChunk
		p	0		lightingProvider
		p	1		chunk
	m	(Ldhf;)V	b	lambda$generate$20
		p	1		c
	m	(Ldhk;)Z	b	isOrAfter
		p	1		chunkStatus
	m	(Ldhk;Lakq;Ldhg;Ljava/util/List;Ldhf;)V	b	lambda$static$11
		p	0		targetStatus
		p	1		world
		p	2		generator
		p	3		chunks
		p	4		chunk
	m	(Ldhk;Lakq;Ldzc;Lakt;Ljava/util/function/Function;Ldhf;)Ljava/util/concurrent/CompletableFuture;	b	lambda$static$15
		p	0		targetStatus
		p	1		world
		p	2		structureTemplateManager
		p	3		lightingProvider
		p	4		fullChunkConverter
		p	5		chunk
	m	(Ldhk;Ljava/util/concurrent/Executor;Lakq;Ldhg;Ldzc;Lakt;Ljava/util/function/Function;Ljava/util/List;Ldhf;)Ljava/util/concurrent/CompletableFuture;	b	lambda$static$14
		p	0		targetStatus
		p	1		executor
		p	2		world
		p	3		generator
		p	4		structureTemplateManager
		p	5		lightingProvider
		p	6		fullChunkConverter
		p	7		chunks
		p	8		chunk
	m	()I	c	getIndex
	m	(Ldhf;)Lcom/mojang/datafixers/util/Either;	c	lambda$static$7
		p	0		populatedChunk
	m	(Ldhk;Lakq;Ldhg;Ljava/util/List;Ldhf;)V	c	lambda$static$10
		p	0		targetStatus
		p	1		world
		p	2		generator
		p	3		chunks
		p	4		chunk
	m	(Ldhk;Lakq;Ldzc;Lakt;Ljava/util/function/Function;Ldhf;)Ljava/util/concurrent/CompletableFuture;	c	lambda$static$13
		p	0		status
		p	1		world
		p	2		structureTemplateManager
		p	3		lightingProvider
		p	4		fullChunkConverter
		p	5		chunk
	m	(Ldhk;Ljava/util/concurrent/Executor;Lakq;Ldhg;Ldzc;Lakt;Ljava/util/function/Function;Ljava/util/List;Ldhf;)Ljava/util/concurrent/CompletableFuture;	c	lambda$static$12
		p	0		targetStatus
		p	1		executor
		p	2		world
		p	3		generator
		p	4		structureTemplateManager
		p	5		lightingProvider
		p	6		fullChunkConverter
		p	7		chunks
		p	8		chunk
	m	()Ldhk;	d	getParent
	m	(Ldhf;)Lcom/mojang/datafixers/util/Either;	d	lambda$static$5
		p	0		populatedChunk
	m	(Ldhk;Lakq;Ldhg;Ljava/util/List;Ldhf;)V	d	lambda$static$9
		p	0		targetStatus
		p	1		world
		p	2		generator
		p	3		chunks
		p	4		chunk
	m	(Ldhk;Lakq;Ldzc;Lakt;Ljava/util/function/Function;Ldhf;)Ljava/util/concurrent/CompletableFuture;	d	lambda$static$3
		p	0		targetStatus
		p	1		world
		p	2		structureTemplateManager
		p	3		lightingProvider
		p	4		fullChunkConverter
		p	5		chunk
	m	(Ldhk;Ljava/util/concurrent/Executor;Lakq;Ldhg;Ldzc;Lakt;Ljava/util/function/Function;Ljava/util/List;Ldhf;)Ljava/util/concurrent/CompletableFuture;	d	lambda$static$8
		p	0		targetStatus
		p	1		executor
		p	2		world
		p	3		generator
		p	4		structureTemplateManager
		p	5		lightingProvider
		p	6		fullChunkConverter
		p	7		chunks
		p	8		chunk
	m	()I	e	getRange
	m	(Ldhk;Lakq;Ldhg;Ljava/util/List;Ldhf;)V	e	lambda$static$4
		p	0		targetStatus
		p	1		world
		p	2		generator
		p	3		chunks
		p	4		chunk
	m	(Ldhk;Lakq;Ldzc;Lakt;Ljava/util/function/Function;Ldhf;)Ljava/util/concurrent/CompletableFuture;	e	lambda$static$0
		p	0		targetStatus
		p	1		world
		p	2		structureTemplateManager
		p	3		lightingProvider
		p	4		fullChunkConverter
		p	5		chunk
	m	(Ldhk;Ljava/util/concurrent/Executor;Lakq;Ldhg;Ldzc;Lakt;Ljava/util/function/Function;Ljava/util/List;Ldhf;)Ljava/util/concurrent/CompletableFuture;	e	lambda$static$6
		p	0		targetStatus
		p	1		executor
		p	2		world
		p	3		generator
		p	4		structureTemplateManager
		p	5		lightingProvider
		p	6		fullChunkConverter
		p	7		chunks
		p	8		chunk
	m	()Z	f	hasLoadDependencies
	m	(Ldhk;Lakq;Ldhg;Ljava/util/List;Ldhf;)V	f	lambda$static$1
		p	0		targetStatus
		p	1		world
		p	2		chunkGenerator
		p	3		chunks
		p	4		chunk
	m	(Ldhk;Ljava/util/concurrent/Executor;Lakq;Ldhg;Ldzc;Lakt;Ljava/util/function/Function;Ljava/util/List;Ldhf;)Ljava/util/concurrent/CompletableFuture;	f	lambda$static$2
		p	0		targetStatus
		p	1		executor
		p	2		world
		p	3		generator
		p	4		structureTemplateManager
		p	5		lightingProvider
		p	6		fullChunkConverter
		p	7		chunks
		p	8		chunk
	m	()Ldhk$a;	g	getChunkType
	m	()Ljava/util/EnumSet;	h	heightmapsAfter
	f	I	a	MAX_STRUCTURE_DISTANCE
	f	Ljava/util/EnumSet;	b	POST_FEATURES
	f	Ldhk;	c	EMPTY
	f	Ldhk;	d	STRUCTURE_STARTS
	f	Ldhk;	e	STRUCTURE_REFERENCES
	f	Ldhk;	f	BIOMES
	f	Ldhk;	g	NOISE
	f	Ldhk;	h	SURFACE
	f	Ldhk;	i	CARVERS
	f	Ldhk;	j	FEATURES
	f	Ldhk;	k	INITIALIZE_LIGHT
	f	Ldhk;	l	LIGHT
	f	Ldhk;	m	SPAWN
	f	Ldhk;	n	FULL
	f	Ljava/util/EnumSet;	o	PRE_FEATURES
	f	Ldhk$c;	p	PASSTHROUGH_LOAD_TASK
	f	Ljava/util/List;	q	STATUS_BY_RANGE
	f	Lit/unimi/dsi/fastutil/ints/IntList;	r	RANGE_BY_STATUS
	f	I	s	index
	f	Ldhk;	t	parent
	f	Ldhk$b;	u	generationTask
	f	Ldhk$c;	v	loadingTask
	f	I	w	range
	f	Z	x	hasLoadDependencies
	f	Ldhk$a;	y	chunkType
	f	Ljava/util/EnumSet;	z	heightmapsAfter
c	dhk$a	net/minecraft/world/level/chunk/ChunkStatus$ChunkType
	m	()[Ldhk$a;	a	$values
	f	Ldhk$a;	a	PROTOCHUNK
	f	Ldhk$a;	b	LEVELCHUNK
	f	[Ldhk$a;	c	$VALUES
c	dhk$b	net/minecraft/world/level/chunk/ChunkStatus$GenerationTask
	m	(Ldhk;Ljava/util/concurrent/Executor;Lakq;Ldhg;Ldzc;Lakt;Ljava/util/function/Function;Ljava/util/List;Ldhf;)Ljava/util/concurrent/CompletableFuture;	doWork	doWork
		p	1		targetStatus
		p	2		executor
		p	3		world
		p	4		generator
		p	5		structureTemplateManager
		p	6		lightingProvider
		p	7		fullChunkConverter
		p	8		chunks
		p	9		chunk
c	dhk$c	net/minecraft/world/level/chunk/ChunkStatus$LoadingTask
	m	(Ldhk;Lakq;Ldzc;Lakt;Ljava/util/function/Function;Ldhf;)Ljava/util/concurrent/CompletableFuture;	doWork	doWork
		p	1		targetStatus
		p	2		world
		p	3		structureTemplateManager
		p	4		lightingProvider
		p	5		fullChunkConverter
		p	6		chunk
c	dhk$d	net/minecraft/world/level/chunk/ChunkStatus$SimpleGenerationTask
	m	(Ldhk;Lakq;Ldhg;Ljava/util/List;Ldhf;)V	doWork	doWork
		p	1		targetStatus
		p	2		world
		p	3		chunkGenerator
		p	4		chunks
		p	5		chunk
	m	(Ldhk;Ljava/util/concurrent/Executor;Lakq;Ldhg;Ldzc;Lakt;Ljava/util/function/Function;Ljava/util/List;Ldhf;)Ljava/util/concurrent/CompletableFuture;	doWork	doWork
		p	1		targetStatus
		p	2		executor
		p	3		world
		p	4		generator
		p	5		structureTemplateManager
		p	6		lightingProvider
		p	7		fullChunkConverter
		p	8		chunks
		p	9		chunk
c	dhl	net/minecraft/world/level/chunk/DataLayer
	m	(I)V	<init>	<init>
		p	1		defaultValue
	m	([B)V	<init>	<init>
		p	1		bytes
	m	()[B	a	getData
	m	(I)V	a	fill
		p	1		defaultValue
	m	(II)V	a	set
		p	1		index
		p	2		value
	m	(III)I	a	get
		p	1		x
		p	2		y
		p	3		z
	m	(IIII)V	a	set
		p	1		x
		p	2		y
		p	3		z
		p	4		value
	m	()Ldhl;	b	copy
	m	(I)Ljava/lang/String;	b	layerToString
		p	1		unused
	m	(III)I	b	getIndex
		p	0		x
		p	1		y
		p	2		z
	m	()Z	c	isDefinitelyHomogenous
	m	(I)Z	c	isDefinitelyFilledWith
		p	1		expectedDefaultValue
	m	()Z	d	isEmpty
	m	(I)I	d	get
		p	1		index
	m	(I)I	e	getNibbleIndex
		p	0		i
	m	(I)I	f	getByteIndex
		p	0		i
	m	(I)B	g	packFilled
		p	0		value
	f	I	a	LAYER_COUNT
	f	I	b	LAYER_SIZE
	f	I	c	SIZE
	f	[B	d	data
	f	I	e	NIBBLE_SIZE
	f	I	f	defaultValue
c	dhm	net/minecraft/world/level/chunk/EmptyLevelChunk
	m	(Lcpv;Lcpc;Lhe;)V	<init>	<init>
		p	1		world
		p	2		pos
		p	3		biomeEntry
	m	()Z	C	isEmpty
	m	()Lakj;	D	getFullStatus
	m	(II)Z	a	isYSpaceEmpty
		p	1		lowerHeight
		p	2		upperHeight
	m	(Ldcv;)V	a	setBlockEntity
		p	1		blockEntity
	m	(Lgw;Ldfj;Z)Ldfj;	a	setBlockState
		p	1		pos
		p	2		state
		p	3		moved
	m	(Lgw;Ldhq$b;)Ldcv;	a	getBlockEntity
		p	1		pos
		p	2		creationType
	m	(Lgw;)Ldfj;	a_	getBlockState
		p	1		pos
	m	(Ldcv;)V	b	addAndRegisterBlockEntity
		p	1		blockEntity
	m	(Lgw;)Leam;	b_	getFluidState
		p	1		pos
	m	(Lgw;)V	d	removeBlockEntity
		p	1		pos
	m	(III)Lhe;	getNoiseBiome	getNoiseBiome
		p	1		biomeX
		p	2		biomeY
		p	3		biomeZ
	m	(Lgw;)I	h	getLightEmission
		p	1		pos
	f	Lhe;	n	biome
c	dhn	net/minecraft/world/level/chunk/GlobalPalette
	m	(Lhj;)V	<init>	<init>
		p	1		idList
	m	()I	a	getSerializedSize
	m	(I)Ljava/lang/Object;	a	valueFor
		p	1		id
	m	(ILhj;Ldhx;Ljava/util/List;)Ldhw;	a	create
		p	0		bits
		p	1		idList
		p	2		listener
	m	(Ljava/lang/Object;)I	a	idFor
		p	1		object
	m	(Ljava/util/function/Predicate;)Z	a	maybeHas
		p	1		predicate
	m	(Lso;)V	a	read
		p	1		buf
	m	()I	b	getSize
	m	(Lso;)V	b	write
		p	1		buf
	m	()Ldhw;	c	copy
	f	Lhj;	a	registry
c	dho	net/minecraft/world/level/chunk/HashMapPalette
	m	(Lhj;ILdhx;)V	<init>	<init>
		p	1		idList
		p	2		indexBits
		p	3		listener
	m	(Lhj;ILdhx;Laqv;)V	<init>	<init>
		p	1		idList
		p	2		indexBits
		p	3		listener
		p	4		map
	m	(Lhj;ILdhx;Ljava/util/List;)V	<init>	<init>
		p	1		idList
		p	2		bits
		p	3		listener
		p	4		entries
	m	()I	a	getSerializedSize
	m	(I)Ljava/lang/Object;	a	valueFor
		p	1		id
	m	(ILhj;Ldhx;Ljava/util/List;)Ldhw;	a	create
		p	0		bits
		p	1		idList
		p	2		listener
		p	3		entries
	m	(Ljava/lang/Object;)I	a	idFor
		p	1		object
	m	(Ljava/util/function/Predicate;)Z	a	maybeHas
		p	1		predicate
	m	(Lso;)V	a	read
		p	1		buf
	m	()I	b	getSize
	m	(Lso;)V	b	write
		p	1		buf
	m	()Ldhw;	c	copy
	m	()Ljava/util/List;	d	getEntries
	f	Lhj;	a	registry
	f	Laqv;	b	values
	f	Ldhx;	c	resizeHandler
	f	I	d	bits
c	dhp	net/minecraft/world/level/chunk/ImposterProtoChunk
	m	(Ldhq;Z)V	<init>	<init>
		p	1		wrapped
		p	2		propagateToWrapped
	m	()V	A	initializeLightSources
	m	()Ldzw;	B	getSkyLightSources
	m	()Ldhq;	C	getWrapped
	m	()I	M	getMaxLightLevel
	m	(Lbiq;)V	a	addEntity
		p	1		entity
	m	(Lcqw;Lcrc$f;)V	a	fillBiomesFromNoise
		p	1		biomeSupplier
		p	2		sampler
	m	(Ldcv;)V	a	setBlockEntity
		p	1		blockEntity
	m	(Ldhk;)V	a	setStatus
		p	1		status
	m	(Ldko$a;)Ldhe;	a	getCarvingMask
		p	1		step
	m	(Ldks$a;)Ldks;	a	getOrCreateHeightmapUnprimed
		p	1		type
	m	(Ldks$a;II)I	a	getHeight
		p	1		type
		p	2		x
		p	3		z
	m	(Ldks$a;[J)V	a	setHeightmap
		p	1		type
		p	2		heightmap
	m	(Ldlv;)V	a	setBlendingData
		p	1		blendingData
	m	(Ldvi;)Ldvq;	a	getStartForStructure
		p	1		structure
	m	(Ldvi;J)V	a	addReferenceForStructure
		p	1		structure
		p	2		reference
	m	(Ldvi;Ldvq;)V	a	setStartForStructure
		p	1		structure
		p	2		start
	m	(Lgw;Ldfj;Z)Ldfj;	a	setBlockState
		p	1		pos
		p	2		state
		p	3		moved
	m	(Ljava/util/Map;)V	a	setAllStarts
		p	1		structureStarts
	m	(Ljava/util/function/Predicate;Ljava/util/function/BiConsumer;)V	a	findBlocks
		p	1		predicate
		p	2		consumer
	m	(Lqw;)V	a	setBlockEntityNbt
		p	1		nbt
	m	(Z)V	a	setUnsaved
		p	1		needsSaving
	m	(Lgw;)Ldfj;	a_	getBlockState
		p	1		pos
	m	(I)Ldhr;	b	getSection
		p	1		yIndex
	m	(Ldko$a;)Ldhe;	b	getOrCreateCarvingMask
		p	1		step
	m	(Ldvi;)Lit/unimi/dsi/fastutil/longs/LongSet;	b	getReferencesForStructure
		p	1		structure
	m	(Ljava/util/Map;)V	b	setAllReferences
		p	1		structureReferences
	m	(Z)V	b	setLightCorrect
		p	1		lightOn
	m	(Lgw;)Leam;	b_	getFluidState
		p	1		pos
	m	(Ldks$a;)Ldks$a;	c	fixType
		p	1		type
	m	(Lgw;)Ldcv;	c_	getBlockEntity
		p	1		pos
	m	()[Ldhr;	d	getSections
	m	(Lgw;)V	d	removeBlockEntity
		p	1		pos
	m	(Lgw;)V	e	markPosForPostprocessing
		p	1		pos
	m	()Lcpc;	f	getPos
	m	(Lgw;)Lqw;	f	getBlockEntityNbt
		p	1		pos
	m	()Ljava/util/Map;	g	getAllStarts
	m	(Lgw;)Lqw;	g	getBlockEntityNbtForSaving
		p	1		pos
	m	(III)Lhe;	getNoiseBiome	getNoiseBiome
		p	1		biomeX
		p	2		biomeY
		p	3		biomeZ
	m	()Ljava/util/Map;	h	getAllReferences
	m	()Z	i	isUnsaved
	m	()Ldhk;	j	getStatus
	m	()Lejc;	o	getBlockTicks
	m	()Lejc;	p	getFluidTicks
	m	()Ldhf$a;	q	getTicksForSerialization
	m	()Ldlv;	t	getBlendingData
	m	()Z	v	isLightCorrect
	f	Ldhq;	n	wrapped
	f	Z	o	allowWrites
c	dhq	net/minecraft/world/level/chunk/LevelChunk
	m	(Lakq;Ldia;Ldhq$c;)V	<init>	<init>
		p	1		world
		p	2		protoChunk
		p	3		entityLoader
	m	(Lcpv;Lcpc;)V	<init>	<init>
		p	1		world
		p	2		pos
	m	(Lcpv;Lcpc;Ldid;Leiu;Leiu;J[Ldhr;Ldhq$c;Ldlv;)V	<init>	<init>
		p	1		world
		p	2		pos
		p	3		upgradeData
		p	4		blockTickScheduler
		p	5		fluidTickScheduler
		p	6		inhabitedTime
		p	8		sectionArrayInitializer
		p	9		entityLoader
		p	10		blendingData
	m	()Z	C	isEmpty
	m	()Lakj;	D	getFullStatus
	m	()V	E	runPostLoad
	m	()Lcpv;	F	getLevel
	m	()Ljava/util/Map;	G	getBlockEntities
	m	()V	H	postProcessGeneration
	m	()V	I	clearAllBlockEntities
	m	()V	J	registerAllBlockEntitiesAfterLevelLoad
	m	()Z	K	isInLevel
	m	(I)Ldjw;	a	getListenerRegistry
		p	1		ySectionCoord
	m	(III)Leam;	a	getFluidState
		p	1		x
		p	2		y
		p	3		z
	m	(Lakq;)V	a	registerTickContainerInLevel
		p	1		world
	m	(Lakq;II)Ldjw;	a	lambda$getListenerRegistry$0
		p	3		sectionCoord
	m	(Lbiq;)V	a	addEntity
		p	1		entity
	m	(Ldcv;)V	a	setBlockEntity
		p	1		blockEntity
	m	(Ldcv;Lakq;)V	a	removeGameEventListener
		p	1		blockEntity
		p	2		world
	m	(Ldcv;Ldcw;)Ldel;	a	createTicker
		p	1		blockEntity
		p	2		blockEntityTicker
	m	(Ldcv;Ldcw;Lgw;Ldhq$d;)Ldhq$d;	a	lambda$updateBlockEntityTicker$6
		p	3		pos
		p	4		ticker
	m	(Ldhq$d;)V	a	lambda$clearAllBlockEntities$4
		p	0		ticker
	m	(Lgw;Ldcx;Lqw;)V	a	lambda$replaceWithPacketData$3
		p	1		pos
		p	2		blockEntityType
		p	3		nbtx
	m	(Lgw;Ldfj;Z)Ldfj;	a	setBlockState
		p	1		pos
		p	2		state
		p	3		moved
	m	(Lgw;Ldhq$b;)Ldcv;	a	getBlockEntity
		p	1		pos
		p	2		creationType
	m	(Lgw;Lqw;)Ldcv;	a	promotePendingBlockEntity
		p	1		pos
		p	2		nbt
	m	(Lso;)V	a	replaceBiomes
		p	1		buf
	m	(Lso;Lqw;Ljava/util/function/Consumer;)V	a	replaceWithPacketData
		p	1		buf
		p	2		nbt
	m	(Lgw;)Ldfj;	a_	getBlockState
		p	1		pos
	m	(III)Ljava/lang/String;	b	lambda$getFluidState$2
	m	(Lakq;)V	b	unregisterTickContainerFromLevel
		p	1		world
	m	(Ldcv;)V	b	addAndRegisterBlockEntity
		p	1		blockEntity
	m	(Ldcv;Lakq;)V	b	addGameEventListener
		p	1		blockEntity
		p	2		world
	m	(Ljava/util/function/Supplier;)V	b	setFullStatus
		p	1		levelTypeProvider
	m	(Lgw;)Leam;	b_	getFluidState
		p	1		pos
	m	(I)V	c	removeGameEventListenerRegistry
		p	1		ySectionCoord
	m	(III)Ljava/lang/String;	c	lambda$getBlockState$1
	m	(J)V	c	unpackTicks
		p	1		time
	m	(Ldcv;)V	c	updateBlockEntityTicker
		p	1		blockEntity
	m	(Z)V	c	setLoaded
		p	1		loadedToWorld
	m	(Lgw;)Ldcv;	c_	getBlockEntity
		p	1		pos
	m	(Ldcv;)V	d	lambda$registerAllBlockEntitiesAfterLevelLoad$5
		p	1		blockEntity
	m	(Lgw;)V	d	removeBlockEntity
		p	1		pos
	m	(Lgw;)Lqw;	g	getBlockEntityNbtForSaving
		p	1		pos
	m	()Ldhk;	j	getStatus
	m	(Lgw;)Ldcv;	j	createBlockEntity
		p	1		pos
	m	(Lgw;)Z	k	isTicking
		p	1		pos
	m	(Lgw;)V	l	removeBlockEntityTicker
		p	1		pos
	m	()Lejc;	o	getBlockTicks
	m	()Lejc;	p	getFluidTicks
	m	()Ldhf$a;	q	getTicksForSerialization
	f	Lorg/slf4j/Logger;	n	LOGGER
	f	Ldel;	o	NULL_TICKER
	f	Ljava/util/Map;	p	tickersInLevel
	f	Z	q	loaded
	f	Lcpv;	r	level
	f	Ljava/util/function/Supplier;	s	fullStatus
	f	Ldhq$c;	t	postLoad
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	u	gameEventListenerRegistrySections
	f	Leiu;	v	blockTicks
	f	Leiu;	w	fluidTicks
c	dhq$1	net/minecraft/world/level/chunk/LevelChunk$1
	m	()V	a	tick
	m	()Z	b	isRemoved
	m	()Lgw;	c	getPos
	m	()Ljava/lang/String;	d	getType
c	dhq$a	net/minecraft/world/level/chunk/LevelChunk$BoundTickingBlockEntity
	m	(Ldhq;Ldcv;Ldcw;)V	<init>	<init>
		p	2		blockEntity
		p	3		ticker
	m	()V	a	tick
	m	()Z	b	isRemoved
	m	()Lgw;	c	getPos
	m	()Ljava/lang/String;	d	getType
	f	Ldhq;	a	this$0
	f	Ldcv;	b	blockEntity
	f	Ldcw;	c	ticker
	f	Z	d	loggedInvalidBlockState
c	dhq$b	net/minecraft/world/level/chunk/LevelChunk$EntityCreationType
	m	()[Ldhq$b;	a	$values
	f	Ldhq$b;	a	IMMEDIATE
	f	Ldhq$b;	b	QUEUED
	f	Ldhq$b;	c	CHECK
	f	[Ldhq$b;	d	$VALUES
c	dhq$c	net/minecraft/world/level/chunk/LevelChunk$PostLoadProcessor
	m	(Ldhq;)V	run	run
		p	1		chunk
c	dhq$d	net/minecraft/world/level/chunk/LevelChunk$RebindableTickingBlockEntityWrapper
	m	(Ldhq;Ldel;)V	<init>	<init>
		p	2		wrapped
	m	()V	a	tick
	m	(Ldel;)V	a	rebind
		p	1		wrapped
	m	()Z	b	isRemoved
	m	()Lgw;	c	getPos
	m	()Ljava/lang/String;	d	getType
	f	Ldhq;	a	this$0
	f	Ldel;	b	ticker
c	dhr	net/minecraft/world/level/chunk/LevelChunkSection
	m	(Ldhy;Ldhz;)V	<init>	<init>
		p	1		blockStateContainer
		p	2		biomeContainer
	m	(Lhq;)V	<init>	<init>
		p	1		biomeRegistry
	m	()V	a	acquire
	m	(III)Ldfj;	a	getBlockState
		p	1		x
		p	2		y
		p	3		z
	m	(IIILdfj;)Ldfj;	a	setBlockState
		p	1		x
		p	2		y
		p	3		z
		p	4		state
	m	(IIILdfj;Z)Ldfj;	a	setBlockState
		p	1		x
		p	2		y
		p	3		z
		p	4		state
		p	5		lock
	m	(Lcqw;Lcrc$f;III)V	a	fillBiomesFromNoise
		p	1		biomeSupplier
		p	2		sampler
		p	3		x
		p	4		y
		p	5		z
	m	(Ljava/util/function/Predicate;)Z	a	maybeHas
		p	1		predicate
	m	(Lso;)V	a	read
		p	1		buf
	m	()V	b	release
	m	(III)Leam;	b	getFluidState
		p	1		x
		p	2		y
		p	3		z
	m	(Lso;)V	b	readBiomes
		p	1		buf
	m	()Z	c	hasOnlyAir
	m	(III)Lhe;	c	getNoiseBiome
		p	1		x
		p	2		y
		p	3		z
	m	(Lso;)V	c	write
		p	1		buf
	m	()Z	d	isRandomlyTicking
	m	()Z	e	isRandomlyTickingBlocks
	m	()Z	f	isRandomlyTickingFluids
	m	()V	g	recalcBlockCounts
	m	()Ldhy;	h	getStates
	m	()Ldhz;	i	getBiomes
	m	()I	j	getSerializedSize
	f	I	a	SECTION_WIDTH
	f	I	b	SECTION_HEIGHT
	f	I	c	SECTION_SIZE
	f	I	d	BIOME_CONTAINER_BITS
	f	S	e	nonEmptyBlockCount
	f	S	f	tickingBlockCount
	f	S	g	tickingFluidCount
	f	Ldhy;	h	states
	f	Ldhz;	i	biomes
c	dhr$a	net/minecraft/world/level/chunk/LevelChunkSection$1BlockCounter
	m	(Ldfj;I)V	a	accept
	m	(Ljava/lang/Object;I)V	accept	accept
		p	1		object
		p	2		count
	f	I	a	nonEmptyBlockCount
	f	I	b	tickingBlockCount
	f	I	c	tickingFluidCount
	f	Ldhr;	d	this$0
c	dhs	net/minecraft/world/level/chunk/LightChunk
	m	()Ldzw;	B	getSkyLightSources
	m	(Ljava/util/function/BiConsumer;)V	a	findBlockLightSources
		p	1		callback
c	dht	net/minecraft/world/level/chunk/LightChunkGetter
	m	(Lcqe;Lhw;)V	a	onLightUpdate
		p	1		type
		p	2		pos
	m	(II)Ldhs;	c	getChunkForLighting
		p	1		chunkX
		p	2		chunkZ
	m	()Lcpb;	q	getLevel
c	dhu	net/minecraft/world/level/chunk/LinearPalette
	m	(Lhj;ILdhx;Ljava/util/List;)V	<init>	<init>
		p	1		idList
		p	2		bits
		p	3		listener
		p	4		list
	m	(Lhj;[Ljava/lang/Object;Ldhx;II)V	<init>	<init>
		p	1		idList
		p	2		array
		p	3		listener
		p	4		indexBits
		p	5		size
	m	()I	a	getSerializedSize
	m	(I)Ljava/lang/Object;	a	valueFor
		p	1		id
	m	(ILhj;Ldhx;Ljava/util/List;)Ldhw;	a	create
		p	0		bits
		p	1		idList
		p	2		listener
		p	3		list
	m	(Ljava/lang/Object;)I	a	idFor
		p	1		object
	m	(Ljava/util/function/Predicate;)Z	a	maybeHas
		p	1		predicate
	m	(Lso;)V	a	read
		p	1		buf
	m	()I	b	getSize
	m	(Lso;)V	b	write
		p	1		buf
	m	()Ldhw;	c	copy
	f	Lhj;	a	registry
	f	[Ljava/lang/Object;	b	values
	f	Ldhx;	c	resizeHandler
	f	I	d	bits
	f	I	e	size
c	dhv	net/minecraft/world/level/chunk/MissingPaletteEntryException
	m	(I)V	<init>	<init>
		p	1		index
c	dhw	net/minecraft/world/level/chunk/Palette
	m	()I	a	getSerializedSize
	m	(I)Ljava/lang/Object;	a	valueFor
		p	1		id
	m	(Ljava/lang/Object;)I	a	idFor
		p	1		object
	m	(Ljava/util/function/Predicate;)Z	a	maybeHas
		p	1		predicate
	m	(Lso;)V	a	read
		p	1		buf
	m	()I	b	getSize
	m	(Lso;)V	b	write
		p	1		buf
	m	()Ldhw;	c	copy
c	dhw$a	net/minecraft/world/level/chunk/Palette$Factory
	m	(ILhj;Ldhx;Ljava/util/List;)Ldhw;	create	create
		p	1		bits
		p	2		idList
		p	3		listener
c	dhx	net/minecraft/world/level/chunk/PaletteResize
	m	(ILjava/lang/Object;)I	onResize	onResize
		p	1		newBits
		p	2		object
c	dhy	net/minecraft/world/level/chunk/PalettedContainer
	m	(Lhj;Ldhy$d;Ldhy$a;Laqp;Ljava/util/List;)V	<init>	<init>
		p	1		idList
		p	2		paletteProvider
		p	3		dataProvider
		p	4		storage
		p	5		paletteEntries
	m	(Lhj;Ldhy$d;Ldhy$c;)V	<init>	<init>
		p	1		idList
		p	2		paletteProvider
		p	3		data
	m	(Lhj;Ljava/lang/Object;Ldhy$d;)V	<init>	<init>
		p	1		idList
		p	2		object
		p	3		paletteProvider
	m	()V	a	acquire
	m	(I)Ljava/lang/Object;	a	get
		p	1		index
	m	(III)Ljava/lang/Object;	a	get
		p	1		x
		p	2		y
		p	3		z
	m	(IIILjava/lang/Object;)Ljava/lang/Object;	a	getAndSet
		p	1		x
		p	2		y
		p	3		z
		p	4		value
	m	(ILjava/lang/Object;)Ljava/lang/Object;	a	getAndSet
		p	1		index
		p	2		value
	m	(Lasj$a;)Ljava/lang/String;	a	lambda$unpack$10
	m	(Lcom/mojang/serialization/Codec;Ljava/lang/Object;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$codec$3
		p	2		instance
	m	(Ldho;I)I	a	lambda$pack$11
		p	2		id
	m	(Ldhy$b;)V	a	count
		p	1		counter
	m	(Ldhy$b;Lit/unimi/dsi/fastutil/ints/Int2IntMap$Entry;)V	a	lambda$count$13
		p	2		entry
	m	(Ldhy$c;I)Ldhy$c;	a	createOrReuseData
		p	1		previousData
		p	2		bits
	m	(Ldhy;)Ldhz;	a	lambda$codecRO$1
		p	0		result
	m	(Ldhz$b;Lhj;Ldhy$d;Ldhz$a;)Lcom/mojang/serialization/DataResult;	a	lambda$codec$4
		p	3		serialized
	m	(Lhj;Lcom/mojang/serialization/Codec;Ldhy$d;Ljava/lang/Object;)Lcom/mojang/serialization/Codec;	a	codecRW
		p	0		idList
		p	1		entryCodec
		p	2		paletteProvider
		p	3		defaultValue
	m	(Lhj;Lcom/mojang/serialization/Codec;Ldhy$d;Ljava/lang/Object;Ldhz$b;)Lcom/mojang/serialization/Codec;	a	codec
		p	0		idList
		p	1		entryCodec
		p	2		provider
		p	3		defaultValue
		p	4		reader
	m	(Lhj;Ldhw;I)I	a	lambda$unpack$9
		p	2		id
	m	(Lhj;Ldhy$d;)Ldhz$a;	a	pack
		p	1		idList
		p	2		paletteProvider
	m	(Lhj;Ldhy$d;Ldhz$a;)Lcom/mojang/serialization/DataResult;	a	unpack
		p	0		idList
		p	1		paletteProvider
		p	2		serialized
	m	(Lhj;Ldhy$d;Ldhz;)Ldhz$a;	a	lambda$codec$5
		p	2		container
	m	(Lit/unimi/dsi/fastutil/ints/Int2IntOpenHashMap;I)V	a	lambda$count$12
		p	1		key
	m	(Ljava/util/function/Consumer;)V	a	getAll
		p	1		action
	m	(Ljava/util/function/Consumer;Ldhw;I)V	a	lambda$getAll$6
		p	2		id
	m	(Ljava/util/function/Predicate;)Z	a	maybeHas
		p	1		predicate
	m	(Lso;)V	a	read
		p	1		buf
	m	([ILjava/util/function/IntUnaryOperator;)V	a	swapPalette
		p	0		is
		p	1		applier
	m	()V	b	release
	m	(IIILjava/lang/Object;)Ljava/lang/Object;	b	getAndSetUnchecked
		p	1		x
		p	2		y
		p	3		z
		p	4		value
	m	(ILjava/lang/Object;)V	b	set
		p	1		index
		p	2		value
	m	(Lhj;Lcom/mojang/serialization/Codec;Ldhy$d;Ljava/lang/Object;)Lcom/mojang/serialization/Codec;	b	codecRO
		p	0		idList
		p	1		entryCodec
		p	2		paletteProvider
		p	3		defaultValue
	m	(Lhj;Ldhy$d;Ldhz$a;)Lcom/mojang/serialization/DataResult;	b	lambda$codecRO$2
		p	0		idListx
		p	1		paletteProviderx
		p	2		serialized
	m	(Lso;)V	b	write
		p	1		buf
	m	()I	c	getSerializedSize
	m	(IIILjava/lang/Object;)V	c	set
		p	1		x
		p	2		y
		p	3		z
		p	4		value
	m	(ILjava/lang/Object;)I	c	lambda$unpack$8
		p	0		id
		p	1		value
	m	()Ldhy;	d	copy
	m	(ILjava/lang/Object;)I	d	lambda$new$0
		p	0		newSize
		p	1		added
	m	()Ldhy;	e	recreate
	m	()Ljava/lang/String;	f	lambda$unpack$7
	m	(ILjava/lang/Object;)I	onResize	onResize
		p	1		newBits
		p	2		object
	f	I	a	MIN_PALETTE_BITS
	f	Ldhx;	b	dummyPaletteResize
	f	Lhj;	c	registry
	f	Ldhy$c;	d	data
	f	Ldhy$d;	e	strategy
	f	Lass;	f	threadingDetector
c	dhy$a	net/minecraft/world/level/chunk/PalettedContainer$Configuration
	m	()Ldhw$a;	a	factory
	m	(Lhj;Ldhx;I)Ldhy$c;	a	createData
		p	1		idList
		p	2		listener
		p	3		size
	m	()I	b	bits
	f	Ldhw$a;	a	factory
	f	I	b	bits
c	dhy$b	net/minecraft/world/level/chunk/PalettedContainer$CountConsumer
	m	(Ljava/lang/Object;I)V	accept	accept
		p	1		object
		p	2		count
c	dhy$c	net/minecraft/world/level/chunk/PalettedContainer$Data
	m	(Ldhy$a;Laqp;Ldhw;)V	<init>	<init>
		p	1		configuration
		p	2		storage
		p	3		palette
	m	()I	a	getSerializedSize
	m	(Ldhw;Laqp;)V	a	copyFrom
		p	1		palette
		p	2		storage
	m	(Lso;)V	a	write
		p	1		buf
	m	()Ldhy$c;	b	copy
	m	()Ldhy$a;	c	configuration
	m	()Laqp;	d	storage
	m	()Ldhw;	e	palette
	f	Ldhy$a;	a	configuration
	f	Laqp;	b	storage
	f	Ldhw;	c	palette
c	dhy$d	net/minecraft/world/level/chunk/PalettedContainer$Strategy
	m	(I)V	<init>	<init>
		p	1		edgeBits
	m	()I	a	size
	m	(III)I	a	getIndex
		p	1		x
		p	2		y
		p	3		z
	m	(Lhj;I)Ldhy$a;	a	getConfiguration
		p	1		idList
		p	2		bits
	m	(Lhj;I)I	b	calculateBitsForSerialization
		p	1		idList
		p	2		size
	f	Ldhw$a;	a	SINGLE_VALUE_PALETTE_FACTORY
	f	Ldhw$a;	b	LINEAR_PALETTE_FACTORY
	f	Ldhw$a;	c	HASHMAP_PALETTE_FACTORY
	f	Ldhy$d;	d	SECTION_STATES
	f	Ldhy$d;	e	SECTION_BIOMES
	f	Ldhw$a;	f	GLOBAL_PALETTE_FACTORY
	f	I	g	sizeBits
c	dhy$d$1	net/minecraft/world/level/chunk/PalettedContainer$Strategy$1
	m	(I)V	<init>	<init>
		p	1		edgeBits
	m	(Lhj;I)Ldhy$a;	a	getConfiguration
		p	1		idList
		p	2		bits
c	dhy$d$2	net/minecraft/world/level/chunk/PalettedContainer$Strategy$2
	m	(I)V	<init>	<init>
		p	1		edgeBits
	m	(Lhj;I)Ldhy$a;	a	getConfiguration
		p	1		idList
		p	2		bits
c	dhz	net/minecraft/world/level/chunk/PalettedContainerRO
	m	(III)Ljava/lang/Object;	a	get
		p	1		x
		p	2		y
		p	3		z
	m	(Ldhy$b;)V	a	count
		p	1		counter
	m	(Lhj;Ldhy$d;)Ldhz$a;	a	pack
		p	1		idList
		p	2		paletteProvider
	m	(Ljava/util/function/Consumer;)V	a	getAll
		p	1		action
	m	(Ljava/util/function/Predicate;)Z	a	maybeHas
		p	1		predicate
	m	(Lso;)V	b	write
		p	1		buf
	m	()I	c	getSerializedSize
	m	()Ldhy;	e	recreate
c	dhz$a	net/minecraft/world/level/chunk/PalettedContainerRO$PackedData
	m	()Ljava/util/List;	a	paletteEntries
	m	()Ljava/util/Optional;	b	storage
	f	Ljava/util/List;	a	paletteEntries
	f	Ljava/util/Optional;	b	storage
c	dhz$b	net/minecraft/world/level/chunk/PalettedContainerRO$Unpacker
	m	(Lhj;Ldhy$d;Ldhz$a;)Lcom/mojang/serialization/DataResult;	read	read
		p	1		idList
		p	2		paletteProvider
		p	3		serialize
c	dia	net/minecraft/world/level/chunk/ProtoChunk
	m	(Lcpc;Ldid;Lcpx;Lhq;Ldlv;)V	<init>	<init>
		p	1		pos
		p	2		upgradeData
		p	3		world
		p	4		biomeRegistry
		p	5		blendingData
	m	(Lcpc;Ldid;[Ldhr;Leix;Leix;Lcpx;Lhq;Ldlv;)V	<init>	<init>
		p	1		pos
		p	2		upgradeData
		p	3		sections
		p	4		blockTickScheduler
		p	5		fluidTickScheduler
		p	6		world
		p	7		biomeRegistry
		p	8		blendingData
	m	()Ljava/util/Map;	D	getBlockEntities
	m	()Ljava/util/List;	E	getEntities
	m	()Ljava/util/Map;	F	getBlockEntityNbts
	m	()Leiu;	G	unpackBlockTicks
	m	()Leiu;	H	unpackFluidTicks
	m	(Lbiq;)V	a	addEntity
		p	1		entity
	m	(Ldcv;)V	a	setBlockEntity
		p	1		blockEntity
	m	(Ldhk;)V	a	setStatus
		p	1		status
	m	(Ldkg;)V	a	setBelowZeroRetrogen
		p	1		belowZeroRetrogen
	m	(Ldko$a;)Ldhe;	a	getCarvingMask
		p	1		step
	m	(Ldko$a;Ldhe;)V	a	setCarvingMask
		p	1		step
		p	2		carvingMask
	m	(Ldvi;Ldvq;)V	a	setStartForStructure
		p	1		structure
		p	2		start
	m	(Leab;)V	a	setLightEngine
		p	1		lightingProvider
	m	(Leix;)Leiu;	a	unpackTicks
		p	0		tickScheduler
	m	(Lgw;Ldfj;Z)Ldfj;	a	setBlockState
		p	1		pos
		p	2		state
		p	3		moved
	m	(SI)V	a	addPackedPostProcess
		p	1		packedPos
		p	2		index
	m	(SILcpc;)Lgw;	a	unpackOffsetCoordinates
		p	0		sectionRel
		p	1		sectionY
		p	2		chunkPos
	m	(Lgw;)Ldfj;	a_	getBlockState
		p	1		pos
	m	(Ldko$a;)Ldhe;	b	getOrCreateCarvingMask
		p	1		step
	m	(Lqw;)V	b	addEntity
		p	1		entityNbt
	m	(Lgw;)Leam;	b_	getFluidState
		p	1		pos
	m	(Ldko$a;)Ldhe;	c	lambda$getOrCreateCarvingMask$0
		p	1		step2
	m	(Lgw;)Ldcv;	c_	getBlockEntity
		p	1		pos
	m	(Lgw;)V	d	removeBlockEntity
		p	1		pos
	m	(Lgw;)V	e	markPosForPostprocessing
		p	1		pos
	m	(Lgw;)Lqw;	g	getBlockEntityNbtForSaving
		p	1		pos
	m	(III)Lhe;	getNoiseBiome	getNoiseBiome
		p	1		biomeX
		p	2		biomeY
		p	3		biomeZ
	m	()Ldhk;	j	getStatus
	m	(Lgw;)S	j	packOffsetCoordinates
		p	0		pos
	m	()Lejc;	o	getBlockTicks
	m	()Lejc;	p	getFluidTicks
	m	()Ldhf$a;	q	getTicksForSerialization
	m	()Ldkg;	x	getBelowZeroRetrogen
	m	()Lcpx;	z	getHeightAccessorForGeneration
	f	Leab;	n	lightEngine
	f	Ldhk;	o	status
	f	Ljava/util/List;	p	entities
	f	Ljava/util/Map;	q	carvingMasks
	f	Ldkg;	r	belowZeroRetrogen
	f	Leix;	s	blockTicks
	f	Leix;	t	fluidTicks
c	dib	net/minecraft/world/level/chunk/SingleValuePalette
	m	(Lhj;Ldhx;Ljava/util/List;)V	<init>	<init>
		p	1		idList
		p	2		listener
		p	3		entries
	m	()I	a	getSerializedSize
	m	(I)Ljava/lang/Object;	a	valueFor
		p	1		id
	m	(ILhj;Ldhx;Ljava/util/List;)Ldhw;	a	create
		p	0		bitSize
		p	1		idList
		p	2		listener
		p	3		entries
	m	(Ljava/lang/Object;)I	a	idFor
		p	1		object
	m	(Ljava/util/function/Predicate;)Z	a	maybeHas
		p	1		predicate
	m	(Lso;)V	a	read
		p	1		buf
	m	()I	b	getSize
	m	(Lso;)V	b	write
		p	1		buf
	m	()Ldhw;	c	copy
	f	Lhj;	a	registry
	f	Ljava/lang/Object;	b	value
	f	Ldhx;	c	resizeHandler
c	dic	net/minecraft/world/level/chunk/StructureAccess
	m	(Ldvi;)Ldvq;	a	getStartForStructure
		p	1		structure
	m	(Ldvi;J)V	a	addReferenceForStructure
		p	1		structure
		p	2		reference
	m	(Ldvi;Ldvq;)V	a	setStartForStructure
		p	1		structure
		p	2		start
	m	(Ldvi;)Lit/unimi/dsi/fastutil/longs/LongSet;	b	getReferencesForStructure
		p	1		structure
	m	(Ljava/util/Map;)V	b	setAllReferences
		p	1		structureReferences
	m	()Ljava/util/Map;	h	getAllReferences
c	did	net/minecraft/world/level/chunk/UpgradeData
	m	(Lcpx;)V	<init>	<init>
		p	1		world
	m	(Lqw;Lcpx;)V	<init>	<init>
		p	1		nbt
		p	2		world
	m	()Z	a	isEmpty
	m	(Lcpv;Ldid$a;)V	a	lambda$upgrade$6
		p	1		logic
	m	(Lcpv;Leiy;)V	a	lambda$upgrade$5
		p	1		tick
	m	(Lcsv;)Ljava/lang/String;	a	lambda$write$7
		p	0		block
	m	(Ldfj;Lha;Lcpw;Lgw;Lgw;)Ldfj;	a	updateState
		p	0		oldState
		p	1		dir
		p	2		world
		p	3		currentPos
		p	4		otherPos
	m	(Ldhq;)V	a	upgrade
		p	1		chunk
	m	(Ldhq;Lhb;)V	a	upgradeSides
		p	0		chunk
		p	1		side
	m	(Leal;)Ljava/lang/String;	a	lambda$write$9
		p	0		fluid
	m	(Ljava/lang/String;)Ljava/util/Optional;	a	lambda$new$3
		p	0		id
	m	(Lqw;Ljava/lang/String;Ljava/util/function/Function;Ljava/util/List;)V	a	loadTicks
		p	0		nbt
		p	1		key
		p	2		nameToType
		p	3		ticks
	m	(Lrc;Leiy;)V	a	lambda$write$10
		p	0		tick
		p	1		fluidTick
	m	()Lqw;	b	write
	m	(Lcpv;Leiy;)V	b	lambda$upgrade$4
		p	1		tick
	m	(Ldhq;)V	b	upgradeInside
		p	1		chunk
	m	(Ljava/lang/String;)Ljava/util/Optional;	b	lambda$new$1
		p	0		id
	m	(Lrc;Leiy;)V	b	lambda$write$8
		p	0		tick
		p	1		blockTick
	m	()Ljava/util/Optional;	c	lambda$new$2
	m	()Ljava/util/Optional;	d	lambda$new$0
	f	Ldid;	a	EMPTY
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ljava/lang/String;	c	TAG_INDICES
	f	[Lhb;	d	DIRECTIONS
	f	Ljava/util/EnumSet;	e	sides
	f	Ljava/util/List;	f	neighborBlockTicks
	f	Ljava/util/List;	g	neighborFluidTicks
	f	[[I	h	index
	f	Ljava/util/Map;	i	MAP
	f	Ljava/util/Set;	j	CHUNKY_FIXERS
c	did$a	net/minecraft/world/level/chunk/UpgradeData$BlockFixer
	m	(Lcpw;)V	a	processChunk
		p	1		world
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		oldState
		p	2		direction
		p	3		otherState
		p	4		world
		p	5		currentPos
		p	6		otherPos
c	did$b	net/minecraft/world/level/chunk/UpgradeData$BlockFixers
	m	(Ljava/lang/String;IZ[Lcsv;)V	<init>	<init>
		p	3		addCallback
		p	4		blocks
	m	(Ljava/lang/String;I[Lcsv;)V	<init>	<init>
		p	3		blocks
	m	()[Ldid$b;	a	$values
	f	Ldid$b;	a	BLACKLIST
	f	Ldid$b;	b	DEFAULT
	f	Ldid$b;	c	CHEST
	f	Ldid$b;	d	LEAVES
	f	Ldid$b;	e	STEM_BLOCK
	f	[Lha;	f	DIRECTIONS
	f	[Ldid$b;	g	$VALUES
c	did$b$1	net/minecraft/world/level/chunk/UpgradeData$BlockFixers$1
	m	(Ljava/lang/String;I[Lcsv;)V	<init>	<init>
		p	3		blocks
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		oldState
		p	2		direction
		p	3		otherState
		p	4		world
		p	5		currentPos
		p	6		otherPos
c	did$b$2	net/minecraft/world/level/chunk/UpgradeData$BlockFixers$2
	m	(Ljava/lang/String;I[Lcsv;)V	<init>	<init>
		p	3		blocks
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		oldState
		p	2		direction
		p	3		otherState
		p	4		world
		p	5		currentPos
		p	6		otherPos
c	did$b$3	net/minecraft/world/level/chunk/UpgradeData$BlockFixers$3
	m	(Ljava/lang/String;I[Lcsv;)V	<init>	<init>
		p	3		blocks
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		oldState
		p	2		direction
		p	3		otherState
		p	4		world
		p	5		currentPos
		p	6		otherPos
c	did$b$4	net/minecraft/world/level/chunk/UpgradeData$BlockFixers$4
	m	(Ljava/lang/String;IZ[Lcsv;)V	<init>	<init>
		p	3		addCallback
		p	4		blocks
	m	()Ljava/util/List;	a	lambda$$0
	m	(Lcpw;)V	a	processChunk
		p	1		world
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		oldState
		p	2		direction
		p	3		otherState
		p	4		world
		p	5		currentPos
		p	6		otherPos
	f	Ljava/lang/ThreadLocal;	g	queue
c	did$b$5	net/minecraft/world/level/chunk/UpgradeData$BlockFixers$5
	m	(Ljava/lang/String;I[Lcsv;)V	<init>	<init>
		p	3		blocks
	m	(Ldfj;Lha;Ldfj;Lcpw;Lgw;Lgw;)Ldfj;	a	updateShape
		p	1		oldState
		p	2		direction
		p	3		otherState
		p	4		world
		p	5		currentPos
		p	6		otherPos
c	die	net/minecraft/world/level/chunk/package-info
c	dif	net/minecraft/world/level/chunk/storage/ChunkScanAccess
	m	(Lcpc;Lrn;)Ljava/util/concurrent/CompletableFuture;	a	scanChunk
		p	1		pos
		p	2		scanner
c	dig	net/minecraft/world/level/chunk/storage/ChunkSerializer
	m	(Lakq;Lbuf;Lcpc;Lqw;)Ldia;	a	read
		p	0		world
		p	1		poiStorage
		p	2		chunkPos
		p	3		nbt
	m	(Lakq;Ldhf;)Lqw;	a	write
		p	0		world
		p	1		chunk
	m	(Lakq;Lqw;)Ldhq$c;	a	postLoadChunk
		p	0		world
		p	1		nbt
	m	(Lakq;Lqw;Ldhf$a;)V	a	saveTicks
		p	0		world
		p	1		nbt
		p	2		tickSchedulers
	m	(Lcpc;ILjava/lang/String;)V	a	logErrors
		p	0		chunkPos
		p	1		y
		p	2		message
	m	(Lcpc;Laew;J)Z	a	lambda$unpackStructureReferences$11
		p	2		packedPos
	m	(Lcsv;)Ljava/lang/String;	a	lambda$saveTicks$8
		p	0		block
	m	(Ldvy;Lcpc;Ljava/util/Map;Ljava/util/Map;)Lqw;	a	packStructureData
		p	0		context
		p	1		pos
		p	2		starts
		p	3		references
	m	(Ldvy;Lqw;J)Ljava/util/Map;	a	unpackStructureStart
		p	0		context
		p	1		nbt
		p	2		worldSeed
	m	(Leal;)Ljava/lang/String;	a	lambda$saveTicks$9
		p	0		fluid
	m	(Lhq;)Lcom/mojang/serialization/Codec;	a	makeBiomeCodec
		p	0		biomeRegistry
	m	(Lhr;Lcpc;Lqw;)Ljava/util/Map;	a	unpackStructureReferences
		p	0		registryManager
		p	1		pos
		p	2		nbt
	m	(Ljava/lang/String;)Ljava/util/Optional;	a	lambda$read$5
		p	0		id
	m	(Lqw;)Ldhk$a;	a	getChunkTypeFromTag
		p	0		nbt
	m	(Lqw;Ljava/lang/String;)Lrc;	a	getListOfCompoundsOrNull
		p	0		nbt
		p	1		key
	m	(Lqw;Lrq;)V	a	lambda$write$7
	m	(Lrc;Lakq;Lrc;Ldhq;)V	a	lambda$postLoadChunk$10
		p	3		chunk
	m	([Lit/unimi/dsi/fastutil/shorts/ShortList;)Lrc;	a	packOffsets
		p	0		lists
	m	(Lcpc;ILjava/lang/String;)V	b	lambda$read$1
		p	2		errorMessage
	m	(Ljava/lang/String;)Ljava/util/Optional;	b	lambda$read$4
		p	0		id
	m	(Lqw;Lrq;)V	b	lambda$write$6
	m	(Lcpc;ILjava/lang/String;)V	c	lambda$read$0
		p	2		errorMessage
	m	(Ljava/lang/String;)Ljava/util/Optional;	c	lambda$read$3
		p	0		id
	m	(Ljava/lang/String;)Ljava/util/Optional;	d	lambda$read$2
		p	0		id
	f	Ljava/lang/String;	a	X_POS_TAG
	f	Ljava/lang/String;	b	Z_POS_TAG
	f	Ljava/lang/String;	c	HEIGHTMAPS_TAG
	f	Ljava/lang/String;	d	IS_LIGHT_ON_TAG
	f	Ljava/lang/String;	e	SECTIONS_TAG
	f	Ljava/lang/String;	f	BLOCK_LIGHT_TAG
	f	Ljava/lang/String;	g	SKY_LIGHT_TAG
	f	Lcom/mojang/serialization/Codec;	h	BLOCK_STATE_CODEC
	f	Lorg/slf4j/Logger;	i	LOGGER
	f	Ljava/lang/String;	j	TAG_UPGRADE_DATA
	f	Ljava/lang/String;	k	BLOCK_TICKS_TAG
	f	Ljava/lang/String;	l	FLUID_TICKS_TAG
c	dih	net/minecraft/world/level/chunk/storage/ChunkStorage
	m	(Ljava/nio/file/Path;Lcom/mojang/datafixers/DataFixer;Z)V	<init>	<init>
		p	1		directory
		p	2		dataFixer
		p	3		dsync
	m	(Laev;Ljava/util/function/Supplier;)Ldvd;	a	getLegacyStructureHandler
		p	1		worldKey
		p	2		stateManagerGetter
	m	(Laev;Ljava/util/function/Supplier;Lqw;Ljava/util/Optional;)Lqw;	a	upgradeChunkTag
		p	1		worldKey
		p	2		persistentStateManagerFactory
		p	3		nbt
		p	4		generatorCodecKey
	m	(Lcpc;Lqw;)V	a	write
		p	1		chunkPos
		p	2		nbt
	m	(Lqw;)I	a	getVersion
		p	0		nbt
	m	(Lqw;Laev;)V	a	lambda$injectDatafixingContext$0
		p	1		key
	m	(Lqw;Laev;Ljava/util/Optional;)V	a	injectDatafixingContext
		p	0		nbt
		p	1		worldKey
		p	2		generatorCodecKey
	m	(Lcpc;I)Z	b	isOldChunkAround
		p	1		chunkPos
		p	2		checkRadius
	m	(Lcpc;)Ljava/util/concurrent/CompletableFuture;	e	read
		p	1		chunkPos
	m	()V	o	flushWorker
	m	()Ldif;	p	chunkScanner
	f	Ldij;	a	worker
	f	Ldvd;	b	legacyStructureHandler
	f	I	d	LAST_MONOLYTH_STRUCTURE_DATA_VERSION
	f	Lcom/mojang/datafixers/DataFixer;	e	fixerUpper
c	dii	net/minecraft/world/level/chunk/storage/EntityStorage
	m	(Lakq;Ljava/nio/file/Path;Lcom/mojang/datafixers/DataFixer;ZLjava/util/concurrent/Executor;)V	<init>	<init>
		p	1		world
		p	2		path
		p	3		dataFixer
		p	4		dsync
		p	5		executor
	m	(Lcpc;)Ljava/util/concurrent/CompletableFuture;	a	loadEntities
		p	1		pos
	m	(Lcpc;Ljava/lang/Throwable;)Ljava/lang/Void;	a	lambda$storeEntities$2
		p	1		ex
	m	(Lcpc;Ljava/util/Optional;)Ldiy;	a	lambda$loadEntities$0
		p	2		nbt
	m	(Ldiy;)V	a	storeEntities
		p	1		dataList
	m	(Lqw;)Lcpc;	a	readChunkPos
		p	0		chunkNbt
	m	(Lqw;Lcpc;)V	a	writeChunkPos
		p	0		chunkNbt
		p	1		pos
	m	(Lrc;Lbiq;)V	a	lambda$storeEntities$1
		p	1		entity
	m	(Z)V	a	flush
		p	1		sync
	m	(Lcpc;)Ldiy;	b	emptyChunk
		p	0		pos
	m	(Lqw;)Lqw;	b	upgradeChunkTag
		p	1		chunkNbt
	f	Lcom/mojang/datafixers/DataFixer;	a	fixerUpper
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ljava/lang/String;	c	ENTITIES_TAG
	f	Ljava/lang/String;	d	POSITION_TAG
	f	Lakq;	e	level
	f	Ldij;	f	worker
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	g	emptyChunks
	f	Lbfr;	h	entityDeserializerQueue
c	dij	net/minecraft/world/level/chunk/storage/IOWorker
	m	(Ljava/nio/file/Path;ZLjava/lang/String;)V	<init>	<init>
		p	1		directory
		p	2		dsync
		p	3		name
	m	()V	a	storePendingChunk
	m	(I)[Ljava/util/concurrent/CompletableFuture;	a	lambda$synchronize$6
	m	(II)Ljava/util/concurrent/CompletableFuture;	a	getOrCreateOldDataForRegion
		p	1		chunkX
		p	2		chunkZ
	m	(Lbfq;)Lbft$b;	a	lambda$close$16
		p	0		listener
	m	(Lbfq;Ljava/util/function/Supplier;)V	a	lambda$submitTask$13
	m	(Lcpc;)Ljava/util/concurrent/CompletableFuture;	a	loadAsync
		p	1		pos
	m	(Lcpc;I)Z	a	isOldChunkAround
		p	1		chunkPos
		p	2		checkRadius
	m	(Lcpc;Ldij$a;)V	a	runStore
		p	1		pos
		p	2		result
	m	(Lcpc;Lqw;)Ljava/util/concurrent/CompletableFuture;	a	store
		p	1		pos
		p	2		nbt
	m	(Lcpc;Lrn;)Ljava/util/concurrent/CompletableFuture;	a	scanChunk
		p	1		pos
		p	2		scanner
	m	(Ldij$a;)Ljava/util/concurrent/CompletableFuture;	a	lambda$synchronize$5
	m	(Ljava/lang/Void;)Ljava/util/concurrent/CompletionStage;	a	lambda$synchronize$11
		p	1		void_
	m	(Ljava/util/BitSet;Lcpc;)V	a	lambda$createOldDataForRegion$0
		p	2		chunkPos
	m	(Ljava/util/function/Supplier;)Ljava/util/concurrent/CompletableFuture;	a	submitTask
		p	1		task
	m	(Ljava/util/function/Supplier;Lbfq;)Lbft$b;	a	lambda$submitTask$14
		p	2		listener
	m	(Lqw;)Z	a	isOldChunk
		p	1		nbt
	m	(Lqw;Lcpc;)Ldij$a;	a	lambda$store$2
		p	1		pos2
	m	(Z)Ljava/util/concurrent/CompletableFuture;	a	synchronize
		p	1		sync
	m	()V	b	tellStorePending
	m	(II)Ljava/util/concurrent/CompletableFuture;	b	createOldDataForRegion
		p	1		chunkX
		p	2		chunkZ
	m	(Lbfq;)V	b	lambda$close$15
	m	(Lcpc;)Lcom/mojang/datafixers/util/Either;	b	lambda$loadAsync$4
	m	(Lcpc;Lqw;)Lcom/mojang/datafixers/util/Either;	b	lambda$store$3
	m	(Lcpc;Lrn;)Lcom/mojang/datafixers/util/Either;	b	lambda$scanChunk$12
	m	(Ljava/lang/Void;)Ljava/util/concurrent/CompletionStage;	b	lambda$synchronize$9
		p	1		void_
	m	()Lcom/mojang/datafixers/util/Either;	c	lambda$synchronize$10
	m	(II)Ljava/util/BitSet;	c	lambda$createOldDataForRegion$1
	m	()Lcom/mojang/datafixers/util/Either;	d	lambda$synchronize$8
	m	()Lcom/mojang/datafixers/util/Either;	e	lambda$synchronize$7
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/concurrent/atomic/AtomicBoolean;	b	shutdownRequested
	f	Lbfr;	c	mailbox
	f	Ldim;	d	storage
	f	Ljava/util/Map;	e	pendingWrites
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectLinkedOpenHashMap;	f	regionCacheForBlender
	f	I	g	REGION_CACHE_SIZE
c	dij$a	net/minecraft/world/level/chunk/storage/IOWorker$PendingStore
	m	(Lqw;)V	<init>	<init>
		p	1		nbt
	f	Lqw;	a	data
	f	Ljava/util/concurrent/CompletableFuture;	b	result
c	dij$b	net/minecraft/world/level/chunk/storage/IOWorker$Priority
	m	()[Ldij$b;	a	$values
	f	Ldij$b;	a	FOREGROUND
	f	Ldij$b;	b	BACKGROUND
	f	Ldij$b;	c	SHUTDOWN
	f	[Ldij$b;	d	$VALUES
c	dik	net/minecraft/world/level/chunk/storage/RegionBitmap
	m	()Lit/unimi/dsi/fastutil/ints/IntSet;	a	getUsed
	m	(I)I	a	allocate
		p	1		size
	m	(II)V	a	force
		p	1		start
		p	2		size
	m	(II)V	b	free
		p	1		start
		p	2		size
	f	Ljava/util/BitSet;	a	used
c	dil	net/minecraft/world/level/chunk/storage/RegionFile
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;Ldin;Z)V	<init>	<init>
		p	1		file
		p	2		directory
		p	3		outputChunkStreamVersion
		p	4		dsync
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;Z)V	<init>	<init>
		p	1		file
		p	2		directory
		p	3		dsync
	m	()V	a	flush
	m	(B)Z	a	isExternalStreamChunk
		p	0		flags
	m	(I)I	a	getNumSectors
		p	0		sectorData
	m	(II)I	a	packSectorOffset
		p	1		offset
		p	2		size
	m	(Lcpc;)Ljava/io/DataInputStream;	a	getChunkDataInputStream
		p	1		pos
	m	(Lcpc;B)Ljava/io/DataInputStream;	a	createExternalChunkInputStream
		p	1		pos
		p	2		flags
	m	(Lcpc;BLjava/io/InputStream;)Ljava/io/DataInputStream;	a	createChunkInputStream
		p	1		pos
		p	2		flags
		p	3		stream
	m	(Lcpc;Ljava/nio/ByteBuffer;)V	a	write
		p	1		pos
		p	2		buf
	m	(Ljava/nio/ByteBuffer;I)Ljava/io/ByteArrayInputStream;	a	createStream
		p	0		buffer
		p	1		length
	m	(Ljava/nio/file/Path;Ljava/nio/ByteBuffer;)Ldil$b;	a	writeToExternalFile
		p	1		path
		p	2		buf
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;)V	a	lambda$writeToExternalFile$1
	m	()I	b	getTimestamp
	m	(B)B	b	getExternalChunkVersion
		p	0		flags
	m	(I)I	b	getSectorNumber
		p	0		sectorData
	m	(Lcpc;)Z	b	doesChunkExist
		p	1		pos
	m	()Ljava/nio/ByteBuffer;	c	createExternalStub
	m	(I)I	c	sizeToSectors
		p	0		byteCount
	m	(Lcpc;)Ljava/io/DataOutputStream;	c	getChunkDataOutputStream
		p	1		pos
	m	()V	d	writeHeader
	m	(Lcpc;)V	d	clear
		p	1		pos
	m	()V	e	padToFullSector
	m	(Lcpc;)Z	e	hasChunk
		p	1		pos
	m	(Lcpc;)Ljava/nio/file/Path;	f	getExternalChunkPath
		p	1		chunkPos
	m	(Lcpc;)I	g	getOffset
		p	1		pos
	m	(Lcpc;)I	h	getOffsetIndex
		p	0		pos
	m	(Lcpc;)V	i	lambda$write$0
	f	I	a	SECTOR_INTS
	f	Ldik;	b	usedSectors
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	I	d	SECTOR_BYTES
	f	I	e	CHUNK_HEADER_SIZE
	f	I	f	HEADER_OFFSET
	f	Ljava/nio/ByteBuffer;	g	PADDING_BUFFER
	f	Ljava/lang/String;	h	EXTERNAL_FILE_EXTENSION
	f	I	i	EXTERNAL_STREAM_FLAG
	f	I	j	EXTERNAL_CHUNK_THRESHOLD
	f	I	k	CHUNK_NOT_PRESENT
	f	Ljava/nio/channels/FileChannel;	l	file
	f	Ljava/nio/file/Path;	m	externalFileDir
	f	Ldin;	n	version
	f	Ljava/nio/ByteBuffer;	o	header
	f	Ljava/nio/IntBuffer;	p	offsets
	f	Ljava/nio/IntBuffer;	q	timestamps
c	dil$a	net/minecraft/world/level/chunk/storage/RegionFile$ChunkBuffer
	m	(Ldil;Lcpc;)V	<init>	<init>
		p	2		pos
	f	Ldil;	a	this$0
	f	Lcpc;	b	pos
c	dil$b	net/minecraft/world/level/chunk/storage/RegionFile$CommitOp
c	dim	net/minecraft/world/level/chunk/storage/RegionFileStorage
	m	(Ljava/nio/file/Path;Z)V	<init>	<init>
		p	1		directory
		p	2		dsync
	m	()V	a	flush
	m	(Lcpc;)Lqw;	a	read
		p	1		pos
	m	(Lcpc;Lqw;)V	a	write
		p	1		pos
		p	2		nbt
	m	(Lcpc;Lrn;)V	a	scanChunk
		p	1		chunkPos
		p	2		scanner
	m	(Lcpc;)Ldil;	b	getRegionFile
		p	1		pos
	f	Ljava/lang/String;	a	ANVIL_EXTENSION
	f	I	b	MAX_CACHE_SIZE
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectLinkedOpenHashMap;	c	regionCache
	f	Ljava/nio/file/Path;	d	folder
	f	Z	e	sync
c	din	net/minecraft/world/level/chunk/storage/RegionFileVersion
	m	(ILdin$a;Ldin$a;)V	<init>	<init>
		p	1		id
		p	2		inputStreamWrapper
		p	3		outputStreamWrapper
	m	()I	a	getId
	m	(I)Ldin;	a	fromId
		p	0		id
	m	(Ldin;)Ldin;	a	register
		p	0		version
	m	(Ljava/io/InputStream;)Ljava/io/InputStream;	a	wrap
		p	1		inputStream
	m	(Ljava/io/OutputStream;)Ljava/io/OutputStream;	a	wrap
		p	1		outputStream
	m	(I)Z	b	isValidVersion
		p	0		id
	m	(Ljava/io/InputStream;)Ljava/io/InputStream;	b	lambda$static$4
		p	0		stream
	m	(Ljava/io/OutputStream;)Ljava/io/OutputStream;	b	lambda$static$5
		p	0		stream
	m	(Ljava/io/InputStream;)Ljava/io/InputStream;	c	lambda$static$2
		p	0		stream
	m	(Ljava/io/OutputStream;)Ljava/io/OutputStream;	c	lambda$static$3
		p	0		stream
	m	(Ljava/io/InputStream;)Ljava/io/InputStream;	d	lambda$static$0
		p	0		stream
	m	(Ljava/io/OutputStream;)Ljava/io/OutputStream;	d	lambda$static$1
		p	0		stream
	f	Ldin;	a	VERSION_GZIP
	f	Ldin;	b	VERSION_DEFLATE
	f	Ldin;	c	VERSION_NONE
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	d	VERSIONS
	f	I	e	id
	f	Ldin$a;	f	inputWrapper
	f	Ldin$a;	g	outputWrapper
c	din$a	net/minecraft/world/level/chunk/storage/RegionFileVersion$StreamWrapper
	m	(Ljava/lang/Object;)Ljava/lang/Object;	wrap	wrap
		p	1		object
c	dio	net/minecraft/world/level/chunk/storage/SectionStorage
	m	(Ljava/nio/file/Path;Ljava/util/function/Function;Ljava/util/function/Function;Lcom/mojang/datafixers/DataFixer;Lata;ZLhr;Lcpx;)V	<init>	<init>
		p	1		path
		p	2		codecFactory
		p	3		factory
		p	4		dataFixer
		p	5		dataFixTypes
		p	6		dsync
		p	7		dynamicRegistryManager
		p	8		world
	m	()Z	a	hasWork
	m	(J)V	a	setDirty
		p	1		pos
	m	(JLcom/mojang/serialization/Dynamic;)Ljava/util/Optional;	a	lambda$readColumn$3
		p	3		dynamic
	m	(JZLjava/lang/Object;)V	a	lambda$readColumn$4
		p	4		sections
	m	(Lcom/mojang/serialization/Dynamic;)I	a	getVersion
		p	0		dynamic
	m	(Lcpc;)V	a	flush
		p	1		pos
	m	(Lcpc;I)J	a	getKey
		p	0		chunkPos
		p	1		y
	m	(Lcpc;Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic;	a	writeColumn
		p	1		chunkPos
		p	2		ops
	m	(Lcpc;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)V	a	readColumn
		p	1		pos
		p	2		ops
		p	3		data
	m	(Lcpc;Ljava/lang/Throwable;)Ljava/util/Optional;	a	lambda$tryRead$1
		p	1		throwable
	m	(Ljava/util/Map;Lcom/mojang/serialization/DynamicOps;Ljava/lang/String;Ljava/lang/Object;)V	a	lambda$writeColumn$6
		p	3		object
	m	(Ljava/util/function/BooleanSupplier;)V	a	tick
		p	1		shouldKeepTicking
	m	(J)V	b	onSectionLoad
		p	1		pos
	m	(Lcpc;)V	b	readColumn
		p	1		pos
	m	(J)Ljava/util/Optional;	c	get
		p	1		pos
	m	(Lcpc;)Ljava/util/concurrent/CompletableFuture;	c	tryRead
		p	1		pos
	m	(J)Ljava/util/Optional;	d	getOrLoad
		p	1		pos
	m	(Lcpc;)V	d	writeColumn
		p	1		pos
	m	(J)Z	e	outsideStoredRange
		p	1		pos
	m	(J)Ljava/lang/Object;	f	getOrCreate
		p	1		pos
	m	(J)V	g	lambda$writeColumn$5
	m	(J)V	h	lambda$readColumn$2
	m	(J)V	i	lambda$getOrCreate$0
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/lang/String;	b	SECTIONS_TAG
	f	Lcpx;	c	levelHeightAccessor
	f	Ldij;	d	worker
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	e	storage
	f	Lit/unimi/dsi/fastutil/longs/LongLinkedOpenHashSet;	f	dirty
	f	Ljava/util/function/Function;	g	codec
	f	Ljava/util/function/Function;	h	factory
	f	Lcom/mojang/datafixers/DataFixer;	i	fixerUpper
	f	Lata;	j	type
	f	Lhr;	k	registryAccess
c	dip	net/minecraft/world/level/chunk/storage/package-info
c	diq	net/minecraft/world/level/dimension/BuiltinDimensionTypes
	m	(Ljava/lang/String;)Laev;	a	register
		p	0		id
	f	Laev;	a	OVERWORLD
	f	Laev;	b	NETHER
	f	Laev;	c	END
	f	Laev;	d	OVERWORLD_CAVES
	f	Laew;	e	OVERWORLD_EFFECTS
	f	Laew;	f	NETHER_EFFECTS
	f	Laew;	g	END_EFFECTS
c	dir	net/minecraft/world/level/dimension/DimensionDefaults
	f	I	a	OVERWORLD_MIN_Y
	f	I	b	OVERWORLD_LEVEL_HEIGHT
	f	I	c	OVERWORLD_GENERATION_HEIGHT
	f	I	d	OVERWORLD_LOGICAL_HEIGHT
	f	I	e	NETHER_MIN_Y
	f	I	f	NETHER_LEVEL_HEIGHT
	f	I	g	NETHER_GENERATION_HEIGHT
	f	I	h	NETHER_LOGICAL_HEIGHT
	f	I	i	END_MIN_Y
	f	I	j	END_LEVEL_HEIGHT
	f	I	k	END_GENERATION_HEIGHT
	f	I	l	END_LOGICAL_HEIGHT
c	dis	net/minecraft/world/level/dimension/DimensionType
	m	(Ljava/util/OptionalLong;ZZZZDZZIIILaqh;Laew;FLdis$a;)V	<init>	<init>
		p	1		fixedTime
		p	2		hasSkylight
		p	4		ultrawarm
		p	6		coordinateScale
		p	9		piglinSafe
	m	()Z	a	hasFixedTime
	m	(J)F	a	timeOfDay
		p	1		time
	m	(Laev;Ljava/nio/file/Path;)Ljava/nio/file/Path;	a	getStorageFolder
		p	0		worldRef
		p	1		worldDirectory
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/DataResult;	a	parseLegacy
		p	0		nbt
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ldis;Ldis;)D	a	getTeleportationScale
		p	0		fromDimension
		p	1		toDimension
	m	()Z	b	piglinSafe
	m	(J)I	b	moonPhase
		p	1		time
	m	()Z	c	hasRaids
	m	()Lbgd;	d	monsterSpawnLightTest
	m	()I	e	monsterSpawnBlockLightLimit
	m	()Ljava/util/OptionalLong;	f	fixedTime
	m	()Z	g	hasSkyLight
	m	()Z	h	hasCeiling
	m	()Z	i	ultraWarm
	m	()Z	j	natural
	m	()D	k	coordinateScale
	m	()Z	l	bedWorks
	m	()Z	m	respawnAnchorWorks
	m	()I	n	minY
	m	()I	o	height
	m	()I	p	logicalHeight
	m	()Laqh;	q	infiniburn
	m	()Laew;	r	effectsLocation
	m	()F	s	ambientLight
	m	()Ldis$a;	t	monsterSettings
	f	I	a	BITS_FOR_Y
	f	I	b	MIN_HEIGHT
	f	I	c	Y_SIZE
	f	I	d	MAX_Y
	f	I	e	MIN_Y
	f	I	f	WAY_ABOVE_MAX_Y
	f	I	g	WAY_BELOW_MIN_Y
	f	Lcom/mojang/serialization/Codec;	h	DIRECT_CODEC
	f	[F	i	MOON_BRIGHTNESS_PER_PHASE
	f	Lcom/mojang/serialization/Codec;	j	CODEC
	f	Ljava/util/OptionalLong;	k	fixedTime
	f	Z	l	hasSkyLight
	f	Z	m	hasCeiling
	f	Z	n	ultraWarm
	f	Z	o	natural
	f	D	p	coordinateScale
	f	Z	q	bedWorks
	f	Z	r	respawnAnchorWorks
	f	I	s	minY
	f	I	t	height
	f	I	u	logicalHeight
	f	Laqh;	v	infiniburn
	f	Laew;	w	effectsLocation
	f	F	x	ambientLight
	f	Ldis$a;	y	monsterSettings
	f	I	z	MOON_PHASES
c	dis$a	net/minecraft/world/level/dimension/DimensionType$MonsterSettings
	m	()Z	a	piglinSafe
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Z	b	hasRaids
	m	()Lbgd;	c	monsterSpawnLightTest
	m	()I	d	monsterSpawnBlockLightLimit
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Z	b	piglinSafe
	f	Z	c	hasRaids
	f	Lbgd;	d	monsterSpawnLightTest
	f	I	e	monsterSpawnBlockLightLimit
c	dit	net/minecraft/world/level/dimension/LevelStem
	m	(Lhe;Ldhg;)V	<init>	<init>
		p	1		dimensionTypeEntry
		p	2		chunkGenerator
	m	()Lhe;	a	type
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Ldhg;	b	generator
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Laev;	b	OVERWORLD
	f	Laev;	c	NETHER
	f	Laev;	d	END
	f	Lhe;	e	type
	f	Ldhg;	f	generator
c	diu	net/minecraft/world/level/dimension/end/DragonRespawnAnimation
	m	()[Ldiu;	a	$values
	m	(Lakq;Ldiv;Ljava/util/List;ILgw;)V	a	tick
		p	1		world
		p	2		fight
		p	3		crystals
		p	4		tick
		p	5		pos
	f	Ldiu;	a	START
	f	Ldiu;	b	PREPARING_TO_SUMMON_PILLARS
	f	Ldiu;	c	SUMMONING_PILLARS
	f	Ldiu;	d	SUMMONING_DRAGON
	f	Ldiu;	e	END
	f	[Ldiu;	f	$VALUES
c	diu$1	net/minecraft/world/level/dimension/end/DragonRespawnAnimation$1
	m	(Lakq;Ldiv;Ljava/util/List;ILgw;)V	a	tick
		p	1		world
		p	2		fight
		p	3		crystals
		p	4		tick
		p	5		pos
c	diu$2	net/minecraft/world/level/dimension/end/DragonRespawnAnimation$2
	m	(Lakq;Ldiv;Ljava/util/List;ILgw;)V	a	tick
		p	1		world
		p	2		fight
		p	3		crystals
		p	4		tick
		p	5		pos
c	diu$3	net/minecraft/world/level/dimension/end/DragonRespawnAnimation$3
	m	(Lakq;Ldiv;Ljava/util/List;ILgw;)V	a	tick
		p	1		world
		p	2		fight
		p	3		crystals
		p	4		tick
		p	5		pos
c	diu$4	net/minecraft/world/level/dimension/end/DragonRespawnAnimation$4
	m	(Lakq;Ldiv;Ljava/util/List;ILgw;)V	a	tick
		p	1		world
		p	2		fight
		p	3		crystals
		p	4		tick
		p	5		pos
c	diu$5	net/minecraft/world/level/dimension/end/DragonRespawnAnimation$5
	m	(Lakq;Ldiv;Ljava/util/List;ILgw;)V	a	tick
		p	1		world
		p	2		fight
		p	3		crystals
		p	4		tick
		p	5		pos
c	div	net/minecraft/world/level/dimension/end/EndDragonFight
	m	(Lakq;JLdiv$a;)V	<init>	<init>
		p	1		world
		p	2		gatewaysSeed
		p	4		data
	m	(Lakq;JLdiv$a;Lgw;)V	<init>	<init>
		p	1		world
		p	2		gatewaysSeed
		p	4		data
		p	5		origin
	m	()V	a	skipArenaLoadedCheck
	m	(J)Ljava/util/List;	a	lambda$new$0
	m	(Lbxg;Lbho;)V	a	onCrystalDestroyed
		p	1		enderCrystal
		p	2		source
	m	(Lbxh;)V	a	setDragonKilled
		p	1		dragon
	m	(Ldiu;)V	a	setRespawnStage
		p	1		spawnState
	m	(Lgw;)V	a	spawnNewGateway
		p	1		pos
	m	(Lgw;Lhe$c;)V	a	lambda$spawnNewGateway$2
	m	(Lhq;)Ljava/util/Optional;	a	lambda$spawnNewGateway$1
	m	(Ljava/util/List;)V	a	respawnDragon
		p	1		crystals
	m	(Z)V	a	spawnExitPortal
		p	1		previouslyKilled
	m	()Ldiv$a;	b	saveData
	m	(Lbxh;)V	b	updateDragon
		p	1		dragon
	m	()V	c	tick
	m	()V	d	removeAllGateways
	m	()I	e	getCrystalsAlive
	m	()Z	f	hasPreviouslyKilledDragon
	m	()V	g	tryRespawn
	m	()V	h	resetSpikeCrystals
	m	()Ljava/util/UUID;	i	getDragonUUID
	m	()V	j	scanState
	m	()V	k	findOrCreateDragon
	m	()Z	l	hasActiveExitPortal
	m	()Ldfo$b;	m	findExitPortal
	m	()Z	n	isArenaLoaded
	m	()V	o	updatePlayers
	m	()V	p	updateCrystalCount
	m	()V	q	spawnNewGateway
	m	()Lbxh;	r	createNewDragon
	f	I	A	respawnTime
	f	Ljava/util/List;	B	respawnCrystals
	f	I	a	TIME_BETWEEN_PLAYER_SCANS
	f	I	b	ARENA_TICKET_LEVEL
	f	I	c	DRAGON_SPAWN_Y
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	I	e	MAX_TICKS_BEFORE_DRAGON_RESPAWN
	f	I	f	TIME_BETWEEN_CRYSTAL_SCANS
	f	I	g	ARENA_SIZE_CHUNKS
	f	I	h	GATEWAY_COUNT
	f	I	i	GATEWAY_DISTANCE
	f	Ljava/util/function/Predicate;	j	validPlayer
	f	Lakn;	k	dragonEvent
	f	Lakq;	l	level
	f	Lgw;	m	origin
	f	Lit/unimi/dsi/fastutil/objects/ObjectArrayList;	n	gateways
	f	Ldfo;	o	exitPortalPattern
	f	I	p	ticksSinceDragonSeen
	f	I	q	crystalsAlive
	f	I	r	ticksSinceCrystalsScanned
	f	I	s	ticksSinceLastPlayerScan
	f	Z	t	dragonKilled
	f	Z	u	previouslyKilled
	f	Z	v	skipArenaLoadedCheck
	f	Ljava/util/UUID;	w	dragonUUID
	f	Z	x	needsStateScanning
	f	Lgw;	y	portalLocation
	f	Ldiu;	z	respawnStage
c	div$a	net/minecraft/world/level/dimension/end/EndDragonFight$Data
	m	()Z	a	needsStateScanning
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Z	b	dragonKilled
	m	()Z	c	previouslyKilled
	m	()Z	d	isRespawning
	m	()Ljava/util/Optional;	e	dragonUUID
	m	()Ljava/util/Optional;	f	exitPortalLocation
	m	()Ljava/util/Optional;	g	gateways
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldiv$a;	b	DEFAULT
	f	Z	c	needsStateScanning
	f	Z	d	dragonKilled
	f	Z	e	previouslyKilled
	f	Z	f	isRespawning
	f	Ljava/util/Optional;	g	dragonUUID
	f	Ljava/util/Optional;	h	exitPortalLocation
	f	Ljava/util/Optional;	i	gateways
c	diw	net/minecraft/world/level/dimension/end/package-info
c	dix	net/minecraft/world/level/dimension/package-info
c	diy	net/minecraft/world/level/entity/ChunkEntities
	m	(Lcpc;Ljava/util/List;)V	<init>	<init>
		p	1		pos
		p	2		list
	m	()Lcpc;	a	getPos
	m	()Ljava/util/stream/Stream;	b	getEntities
	m	()Z	c	isEmpty
	f	Lcpc;	a	pos
	f	Ljava/util/List;	b	entities
c	diz	net/minecraft/world/level/entity/ChunkStatusUpdateListener
	m	(Lcpc;Lakj;)V	onChunkStatusChange	onChunkStatusChange
		p	1		pos
		p	2		levelType
c	dja	net/minecraft/world/level/entity/EntityAccess
	m	(Ldjb;)V	a	setLevelCallback
		p	1		changeListener
	m	()I	ah	getId
	m	(Lbiq$c;)V	b	setRemoved
		p	1		reason
	m	()Lehi;	cG	getBoundingBox
	m	()Ljava/util/stream/Stream;	cR	getSelfAndPassengers
	m	()Ljava/util/stream/Stream;	cS	getPassengersAndSelf
	m	()Ljava/util/UUID;	cv	getUUID
	m	()Z	dJ	shouldBeSaved
	m	()Z	dK	isAlwaysTicking
	m	()Lgw;	dl	blockPosition
c	djb	net/minecraft/world/level/entity/EntityInLevelCallback
	m	()V	a	onMove
	m	(Lbiq$c;)V	a	onRemove
		p	1		reason
	f	Ldjb;	a	NULL
c	djb$1	net/minecraft/world/level/entity/EntityInLevelCallback$1
	m	()V	a	onMove
	m	(Lbiq$c;)V	a	onRemove
		p	1		reason
c	djc	net/minecraft/world/level/entity/EntityLookup
	m	()Ljava/lang/Iterable;	a	getAllEntities
	m	(I)Ldja;	a	getEntity
		p	1		id
	m	(Ldja;)V	a	add
		p	1		entity
	m	(Ldjh;Laqn;)V	a	getEntities
		p	1		filter
		p	2		consumer
	m	(Ljava/util/UUID;)Ldja;	a	getEntity
		p	1		uuid
	m	()I	b	count
	m	(Ldja;)V	b	remove
		p	1		entity
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	b	byId
	f	Ljava/util/Map;	c	byUuid
c	djd	net/minecraft/world/level/entity/EntityPersistentStorage
	m	(Lcpc;)Ljava/util/concurrent/CompletableFuture;	a	loadEntities
		p	1		pos
	m	(Ldiy;)V	a	storeEntities
		p	1		dataList
	m	(Z)V	a	flush
		p	1		sync
c	dje	net/minecraft/world/level/entity/EntitySection
	m	(Ljava/lang/Class;Ldjn;)V	<init>	<init>
		p	1		entityClass
		p	2		status
	m	()Z	a	isEmpty
	m	(Ldja;)V	a	add
		p	1		entity
	m	(Ldjh;Lehi;Laqn;)Laqn$a;	a	getEntities
		p	1		type
		p	2		box
		p	3		consumer
	m	(Ldjn;)Ldjn;	a	updateChunkStatus
		p	1		status
	m	(Lehi;Laqn;)Laqn$a;	a	getEntities
		p	1		box
		p	2		consumer
	m	()Ljava/util/stream/Stream;	b	getEntities
	m	(Ldja;)Z	b	remove
		p	1		entity
	m	()Ldjn;	c	getStatus
	m	()I	d	size
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Laqs;	b	storage
	f	Ldjn;	c	chunkStatus
c	djf	net/minecraft/world/level/entity/EntitySectionStorage
	m	(Ljava/lang/Class;Lit/unimi/dsi/fastutil/longs/Long2ObjectFunction;)V	<init>	<init>
		p	1		entityClass
		p	2		chunkStatusDiscriminator
	m	()Lit/unimi/dsi/fastutil/longs/LongSet;	a	getAllChunksWithExistingSections
	m	(II)Lit/unimi/dsi/fastutil/longs/LongSortedSet;	a	getChunkSections
		p	1		chunkX
		p	2		chunkZ
	m	(J)Ljava/util/stream/LongStream;	a	getExistingSectionPositionsInChunk
		p	1		chunkPos
	m	(Ldjh;Lehi;Laqn;)V	a	getEntities
		p	1		filter
		p	2		box
		p	3		consumer
	m	(Ldjh;Lehi;Laqn;Ldje;)Laqn$a;	a	lambda$getEntities$2
		p	3		section
	m	(Lehi;Laqn;)V	a	forEachAccessibleNonEmptySection
		p	1		box
		p	2		consumer
	m	(Lehi;Laqn;Ldje;)Laqn$a;	a	lambda$getEntities$1
		p	2		section
	m	(Lit/unimi/dsi/fastutil/longs/LongSet;J)V	a	lambda$getAllChunksWithExistingSections$0
		p	0		trackingSection
		p	1		sectionPos
	m	()I	b	count
	m	(J)Ljava/util/stream/Stream;	b	getExistingSectionsInChunk
		p	1		chunkPos
	m	(Lehi;Laqn;)V	b	getEntities
		p	1		box
		p	2		consumer
	m	(J)Ldje;	c	getOrCreateSection
		p	1		sectionPos
	m	(J)Ldje;	d	getSection
		p	1		sectionPos
	m	(J)V	e	remove
		p	1		sectionPos
	m	(J)J	f	getChunkKeyFromSectionKey
		p	0		sectionPos
	m	(J)Ldje;	g	createSection
		p	1		sectionPos
	f	Ljava/lang/Class;	a	entityClass
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectFunction;	b	intialSectionVisibility
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	c	sections
	f	Lit/unimi/dsi/fastutil/longs/LongSortedSet;	d	sectionIds
c	djg	net/minecraft/world/level/entity/EntityTickList
	m	()V	a	ensureActiveIsNotIterated
	m	(Lbiq;)V	a	add
		p	1		entity
	m	(Ljava/util/function/Consumer;)V	a	forEach
		p	1		action
	m	(Lbiq;)V	b	remove
		p	1		entity
	m	(Lbiq;)Z	c	contains
		p	1		entity
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	a	active
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	b	passive
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	c	iterated
c	djh	net/minecraft/world/level/entity/EntityTypeTest
	m	()Ljava/lang/Class;	a	getBaseClass
	m	(Ljava/lang/Class;)Ldjh;	a	forClass
		p	0		cls
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	tryCast
		p	1		obj
c	djh$1	net/minecraft/world/level/entity/EntityTypeTest$1
	m	()Ljava/lang/Class;	a	getBaseClass
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	tryCast
		p	1		obj
	f	Ljava/lang/Class;	a	val$cls
c	dji	net/minecraft/world/level/entity/LevelCallback
	m	(Ljava/lang/Object;)V	a	onSectionChange
		p	1		entity
	m	(Ljava/lang/Object;)V	b	onTrackingEnd
		p	1		entity
	m	(Ljava/lang/Object;)V	c	onTrackingStart
		p	1		entity
	m	(Ljava/lang/Object;)V	d	onTickingEnd
		p	1		entity
	m	(Ljava/lang/Object;)V	e	onTickingStart
		p	1		entity
	m	(Ljava/lang/Object;)V	f	onDestroyed
		p	1		entity
	m	(Ljava/lang/Object;)V	g	onCreated
		p	1		entity
c	djj	net/minecraft/world/level/entity/LevelEntityGetter
	m	()Ljava/lang/Iterable;	a	getAll
	m	(I)Ldja;	a	get
		p	1		id
	m	(Ldjh;Laqn;)V	a	get
		p	1		filter
		p	2		consumer
	m	(Ldjh;Lehi;Laqn;)V	a	get
		p	1		filter
		p	2		box
		p	3		consumer
	m	(Lehi;Ljava/util/function/Consumer;)V	a	get
		p	1		box
		p	2		action
	m	(Ljava/util/UUID;)Ldja;	a	get
		p	1		uuid
c	djk	net/minecraft/world/level/entity/LevelEntityGetterAdapter
	m	(Ldjc;Ldjf;)V	<init>	<init>
		p	1		index
		p	2		cache
	m	()Ljava/lang/Iterable;	a	getAll
	m	(I)Ldja;	a	get
		p	1		id
	m	(Ldjh;Laqn;)V	a	get
		p	1		filter
		p	2		consumer
	m	(Ldjh;Lehi;Laqn;)V	a	get
		p	1		filter
		p	2		box
		p	3		consumer
	m	(Lehi;Ljava/util/function/Consumer;)V	a	get
		p	1		box
		p	2		action
	m	(Ljava/util/UUID;)Ldja;	a	get
		p	1		uuid
	f	Ldjc;	a	visibleEntities
	f	Ldjf;	b	sectionStorage
c	djl	net/minecraft/world/level/entity/PersistentEntitySectionManager
	m	(Ljava/lang/Class;Ldji;Ldjd;)V	<init>	<init>
		p	1		entityClass
		p	2		handler
		p	3		dataAccess
	m	()V	a	tick
	m	(J)Z	a	areEntitiesLoaded
		p	1		chunkPos
	m	(JLdje;)V	a	removeSectionIfEmpty
		p	1		sectionPos
		p	3		section
	m	(JLjava/util/function/Consumer;)Z	a	storeChunkSections
		p	1		chunkPos
		p	3		action
	m	(Laqy;J)V	a	lambda$dumpSections$17
		p	2		chunkPos
	m	(Laqy;Ldjl$b;J)V	a	lambda$dumpSections$16
		p	3		sectionPos
	m	(Lcpc;)Z	a	canPositionTick
		p	1		pos
	m	(Lcpc;Lakj;)V	a	updateChunkStatus
		p	1		chunkPos
		p	2		levelType
	m	(Lcpc;Ldjn;)V	a	updateChunkStatus
		p	1		chunkPos
		p	2		trackingStatus
	m	(Lcpc;Ljava/lang/Throwable;)Ljava/lang/Void;	a	lambda$requestChunkLoad$8
		p	1		throwable
	m	(Ldja;)Z	a	addNewEntity
		p	1		entity
	m	(Ldja;Ldjn;)Ldjn;	a	getEffectiveStatus
		p	0		entity
		p	1		current
	m	(Ldja;Z)Z	a	addEntity
		p	1		entity
		p	2		existing
	m	(Ldje;)Ljava/util/stream/Stream;	a	lambda$storeChunkSections$7
		p	0		section
	m	(Ldjn;Ldje;)V	a	lambda$updateChunkStatus$6
		p	2		group
	m	(Lgw;)Z	a	canPositionTick
		p	1		pos
	m	(Ljava/io/Writer;)V	a	dumpSections
		p	1		writer
	m	(Ljava/util/UUID;)Z	a	isLoaded
		p	1		uuid
	m	(Ljava/util/stream/Stream;)V	a	addLegacyChunkEntities
		p	1		entities
	m	()V	b	autoSave
	m	(J)V	b	ensureChunkQueuedForLoad
		p	1		chunkPos
	m	(Ldja;)Z	b	addEntityUuid
		p	1		entity
	m	(Ljava/util/stream/Stream;)V	b	addWorldGenChunkEntities
		p	1		entities
	m	()V	c	saveAll
	m	(J)V	c	requestChunkLoad
		p	1		chunkPos
	m	(Ldja;)V	c	startTicking
		p	1		entity
	m	()Ldjj;	d	getEntityGetter
	m	(J)Z	d	processChunkUnload
		p	1		chunkPos
	m	(Ldja;)V	d	stopTicking
		p	1		entity
	m	()Ljava/lang/String;	e	gatherStats
	m	(J)Z	e	lambda$saveAll$15
		p	1		pos
	m	(Ldja;)V	e	startTracking
		p	1		entity
	m	()V	f	processUnloads
	m	(J)V	f	lambda$autoSave$13
		p	1		pos
	m	(Ldja;)V	f	stopTracking
		p	1		entity
	m	()V	g	processPendingLoads
	m	(J)Z	g	lambda$processUnloads$10
		p	1		pos
	m	(Ldja;)V	g	unloadEntity
		p	1		entity
	m	()Lit/unimi/dsi/fastutil/longs/LongSet;	h	getAllChunksToSave
	m	(Ldja;)V	h	lambda$saveAll$14
		p	0		entity
	m	(Ldja;)V	i	lambda$autoSave$12
		p	0		entity
	m	(Ldja;)V	j	lambda$processPendingLoads$11
		p	1		entity
	m	(Ldja;)V	k	lambda$processChunkUnload$9
		p	1		entity
	m	(Ldja;)Z	l	lambda$updateChunkStatus$5
		p	0		entity
	m	(Ldja;)Z	m	lambda$updateChunkStatus$4
		p	0		entity
	m	(Ldja;)Z	n	lambda$updateChunkStatus$3
		p	0		entity
	m	(Ldja;)Z	o	lambda$updateChunkStatus$2
		p	0		entity
	m	(Ldja;)V	p	lambda$addWorldGenChunkEntities$1
		p	1		entity
	m	(Ldja;)V	q	lambda$addLegacyChunkEntities$0
		p	1		entity
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/Set;	b	knownUuids
	f	Ldji;	c	callbacks
	f	Ldjd;	d	permanentStorage
	f	Ldjc;	e	visibleEntityStorage
	f	Ldjf;	f	sectionStorage
	f	Ldjj;	g	entityGetter
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	h	chunkVisibility
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	i	chunkLoadStatuses
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	j	chunksToUnload
	f	Ljava/util/Queue;	k	loadingInbox
c	djl$a	net/minecraft/world/level/entity/PersistentEntitySectionManager$Callback
	m	(Ldjl;Ldja;JLdje;)V	<init>	<init>
		p	2		entity
		p	3		sectionPos
		p	5		section
	m	()V	a	onMove
	m	(Lbiq$c;)V	a	onRemove
		p	1		reason
	m	(Ldjn;Ldjn;)V	a	updateStatus
		p	1		oldStatus
		p	2		newStatus
	f	Ldjl;	b	this$0
	f	Ldja;	c	entity
	f	J	d	currentSectionKey
	f	Ldje;	e	currentSection
c	djl$b	net/minecraft/world/level/entity/PersistentEntitySectionManager$ChunkLoadStatus
	m	()[Ldjl$b;	a	$values
	f	Ldjl$b;	a	FRESH
	f	Ldjl$b;	b	PENDING
	f	Ldjl$b;	c	LOADED
	f	[Ldjl$b;	d	$VALUES
c	djm	net/minecraft/world/level/entity/TransientEntitySectionManager
	m	(Ljava/lang/Class;Ldji;)V	<init>	<init>
		p	1		entityClass
		p	2		handler
	m	()Ldjj;	a	getEntityGetter
	m	(J)Ldjn;	a	lambda$new$0
		p	1		pos
	m	(JLdje;)V	a	removeSectionIfEmpty
		p	1		packedChunkSection
		p	3		entities
	m	(Lcpc;)V	a	startTicking
		p	1		pos
	m	(Ldja;)V	a	addEntity
		p	1		entity
	m	(Ldje;)V	a	lambda$stopTicking$4
		p	1		sections
	m	()I	b	count
	m	(Lcpc;)V	b	stopTicking
		p	1		pos
	m	(Ldja;)Z	b	lambda$stopTicking$3
		p	0		e
	m	(Ldje;)V	b	lambda$startTicking$2
		p	1		sections
	m	()Ljava/lang/String;	c	gatherStats
	m	(Ldja;)Z	c	lambda$startTicking$1
		p	0		e
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ldji;	b	callbacks
	f	Ldjc;	c	entityStorage
	f	Ldjf;	d	sectionStorage
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	e	tickingChunks
	f	Ldjj;	f	entityGetter
c	djm$a	net/minecraft/world/level/entity/TransientEntitySectionManager$Callback
	m	(Ldjm;Ldja;JLdje;)V	<init>	<init>
		p	2		entity
		p	3		pos
		p	5		section
	m	()V	a	onMove
	m	(Lbiq$c;)V	a	onRemove
		p	1		reason
	f	Ldjm;	b	this$0
	f	Ldja;	c	entity
	f	J	d	currentSectionKey
	f	Ldje;	e	currentSection
c	djn	net/minecraft/world/level/entity/Visibility
	m	(Ljava/lang/String;IZZ)V	<init>	<init>
		p	3		tracked
		p	4		tick
	m	()Z	a	isTicking
	m	(Lakj;)Ldjn;	a	fromFullChunkStatus
		p	0		levelType
	m	()Z	b	isAccessible
	m	()[Ldjn;	c	$values
	f	Ldjn;	a	HIDDEN
	f	Ldjn;	b	TRACKED
	f	Ldjn;	c	TICKING
	f	Z	d	accessible
	f	Z	e	ticking
	f	[Ldjn;	f	$VALUES
c	djo	net/minecraft/world/level/entity/package-info
c	djp	net/minecraft/world/level/gameevent/BlockPositionSource
	m	(Lgw;)V	<init>	<init>
		p	1		pos
	m	()Ldjy;	a	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Lcpv;)Ljava/util/Optional;	a	getPosition
		p	1		world
	m	(Ldjp;)Lgw;	a	lambda$static$0
		p	0		blockPositionSource
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lgw;	c	pos
c	djp$a	net/minecraft/world/level/gameevent/BlockPositionSource$Type
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Lso;)Ldjp;	a	read
	m	(Lso;Ldjp;)V	a	write
		p	1		buf
		p	2		positionSource
	m	(Lso;Ldjx;)V	a	write
		p	1		buf
		p	2		positionSource
	m	(Lso;)Ldjx;	b	read
		p	1		buf
c	djq	net/minecraft/world/level/gameevent/DynamicGameEventListener
	m	(Ldjv;)V	<init>	<init>
		p	1		listener
	m	()Ldjv;	a	getListener
	m	(Lakq;)V	a	add
		p	1		world
	m	(Lakq;Lhw;)V	a	lambda$move$3
		p	2		sectionPos
	m	(Lcpy;Lhw;Ljava/util/function/Consumer;)V	a	ifChunkExists
		p	0		world
		p	1		sectionPos
		p	2		dispatcherConsumer
	m	(Ldjw;)V	a	lambda$move$2
		p	1		dispatcher
	m	(Lakq;)V	b	remove
		p	1		world
	m	(Ldjw;)V	b	lambda$move$1
		p	1		dispatcher
	m	(Lakq;)V	c	move
		p	1		world
	m	(Ldjw;)V	c	lambda$remove$0
		p	1		dispatcher
	f	Ldjv;	a	listener
	f	Lhw;	b	lastSection
c	djr	net/minecraft/world/level/gameevent/EntityPositionSource
	m	(Lbiq;F)V	<init>	<init>
		p	1		entity
		p	2		yOffset
	m	(Lcom/mojang/datafixers/util/Either;F)V	<init>	<init>
		p	1		source
		p	2		yOffset
	m	()Ldjy;	a	getType
	m	(Lbiq;)V	a	lambda$resolveEntity$6
		p	1		entity
	m	(Lcom/mojang/datafixers/util/Either;)Ljava/lang/Integer;	a	lambda$getId$10
		p	0		entityId
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Lcpv;)Ljava/util/Optional;	a	getPosition
		p	1		world
	m	(Lcpv;Lcom/mojang/datafixers/util/Either;)Ljava/util/Optional;	a	lambda$resolveEntity$5
		p	1		entityId
	m	(Lcpv;Ljava/util/UUID;)Lbiq;	a	lambda$resolveEntity$4
		p	1		uuid
	m	(Ldjr;)Ljava/lang/Float;	a	lambda$static$0
		p	0		entityPositionSource
	m	(Ljava/lang/Integer;)Ljava/util/UUID;	a	lambda$getUuid$7
		p	0		entityIdx
	m	(Ljava/util/UUID;)Ljava/lang/Integer;	a	lambda$getId$9
		p	0		uuid
	m	(Ljava/util/UUID;Ljava/lang/Float;)Ldjr;	a	lambda$static$1
		p	0		uuid
		p	1		yOffset
	m	()Ljava/util/UUID;	b	getUuid
	m	(Lbiq;)Lehn;	b	lambda$getPosition$3
		p	1		entity
	m	(Lcom/mojang/datafixers/util/Either;)Ljava/util/UUID;	b	lambda$getUuid$8
		p	0		entityId
	m	(Lcpv;)V	b	resolveEntity
		p	1		world
	m	()I	c	getId
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcom/mojang/datafixers/util/Either;	c	entityOrUuidOrId
	f	F	d	yOffset
c	djr$a	net/minecraft/world/level/gameevent/EntityPositionSource$Type
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Lso;)Ldjr;	a	read
	m	(Lso;Ldjr;)V	a	write
		p	1		buf
		p	2		positionSource
	m	(Lso;Ldjx;)V	a	write
		p	1		buf
		p	2		positionSource
	m	(Lso;)Ldjx;	b	read
		p	1		buf
c	djs	net/minecraft/world/level/gameevent/EuclideanGameEventListenerRegistry
	m	(Lakq;ILdjs$a;)V	<init>	<init>
		p	1		world
		p	2		ySectionCoord
		p	3		disposalCallback
	m	()Z	a	isEmpty
	m	(Lakq;Lehn;Ldjv;)Ljava/util/Optional;	a	getPostableListenerPosition
		p	0		world
		p	1		listenerPos
		p	2		listener
	m	(Ldjt;Lehn;Ldjt$a;Ldjw$a;)Z	a	visitInRangeListeners
		p	1		event
		p	2		pos
		p	3		emitter
		p	4		callback
	m	(Ldjv;)V	a	register
		p	1		listener
	m	(Ldjv;)V	b	unregister
		p	1		listener
	f	Ljava/util/List;	b	listeners
	f	Ljava/util/Set;	c	listenersToRemove
	f	Ljava/util/List;	d	listenersToAdd
	f	Z	e	processing
	f	Lakq;	f	level
	f	I	g	sectionY
	f	Ldjs$a;	h	onEmptyAction
c	djs$a	net/minecraft/world/level/gameevent/EuclideanGameEventListenerRegistry$OnEmptyAction
	m	(I)V	apply	apply
		p	1		ySectionCoord
c	djt	net/minecraft/world/level/gameevent/GameEvent
	m	(I)V	<init>	<init>
		p	1		range
	m	()I	a	getNotificationRadius
	m	(Laqh;)Z	a	is
		p	1		tag
	m	(Ljava/lang/String;)Ldjt;	a	register
		p	0		id
	m	(Ljava/lang/String;I)Ldjt;	a	register
		p	0		id
		p	1		range
	m	()Lhe$c;	b	builtInRegistryHolder
	f	Ldjt;	A	HIT_GROUND
	f	Ldjt;	B	INSTRUMENT_PLAY
	f	Ldjt;	C	ITEM_INTERACT_FINISH
	f	Ldjt;	D	ITEM_INTERACT_START
	f	Ldjt;	E	JUKEBOX_PLAY
	f	Ldjt;	F	JUKEBOX_STOP_PLAY
	f	Ldjt;	G	LIGHTNING_STRIKE
	f	Ldjt;	H	NOTE_BLOCK_PLAY
	f	Ldjt;	I	PRIME_FUSE
	f	Ldjt;	J	PROJECTILE_LAND
	f	Ldjt;	K	PROJECTILE_SHOOT
	f	Ldjt;	L	SCULK_SENSOR_TENDRILS_CLICKING
	f	Ldjt;	M	SHEAR
	f	Ldjt;	N	SHRIEK
	f	Ldjt;	O	SPLASH
	f	Ldjt;	P	STEP
	f	Ldjt;	Q	SWIM
	f	Ldjt;	R	TELEPORT
	f	Ldjt;	S	UNEQUIP
	f	Ldjt;	T	RESONATE_1
	f	Ldjt;	U	RESONATE_2
	f	Ldjt;	V	RESONATE_3
	f	Ldjt;	W	RESONATE_4
	f	Ldjt;	X	RESONATE_5
	f	Ldjt;	Y	RESONATE_6
	f	Ldjt;	Z	RESONATE_7
	f	Ldjt;	a	BLOCK_ACTIVATE
	f	Ldjt;	aa	RESONATE_8
	f	Ldjt;	ab	RESONATE_9
	f	Ldjt;	ac	RESONATE_10
	f	Ldjt;	ad	RESONATE_11
	f	Ldjt;	ae	RESONATE_12
	f	Ldjt;	af	RESONATE_13
	f	Ldjt;	ag	RESONATE_14
	f	Ldjt;	ah	RESONATE_15
	f	I	ai	DEFAULT_NOTIFICATION_RADIUS
	f	I	aj	notificationRadius
	f	Lhe$c;	ak	builtInRegistryHolder
	f	Ldjt;	b	BLOCK_ATTACH
	f	Ldjt;	c	BLOCK_CHANGE
	f	Ldjt;	d	BLOCK_CLOSE
	f	Ldjt;	e	BLOCK_DEACTIVATE
	f	Ldjt;	f	BLOCK_DESTROY
	f	Ldjt;	g	BLOCK_DETACH
	f	Ldjt;	h	BLOCK_OPEN
	f	Ldjt;	i	BLOCK_PLACE
	f	Ldjt;	j	CONTAINER_CLOSE
	f	Ldjt;	k	CONTAINER_OPEN
	f	Ldjt;	l	DRINK
	f	Ldjt;	m	EAT
	f	Ldjt;	n	ELYTRA_GLIDE
	f	Ldjt;	o	ENTITY_DAMAGE
	f	Ldjt;	p	ENTITY_DIE
	f	Ldjt;	q	ENTITY_DISMOUNT
	f	Ldjt;	r	ENTITY_INTERACT
	f	Ldjt;	s	ENTITY_MOUNT
	f	Ldjt;	t	ENTITY_PLACE
	f	Ldjt;	u	ENTITY_ACTION
	f	Ldjt;	v	EQUIP
	f	Ldjt;	w	EXPLODE
	f	Ldjt;	x	FLAP
	f	Ldjt;	y	FLUID_PICKUP
	f	Ldjt;	z	FLUID_PLACE
c	djt$a	net/minecraft/world/level/gameevent/GameEvent$Context
	m	()Lbiq;	a	sourceEntity
	m	(Lbiq;)Ldjt$a;	a	of
		p	0		sourceEntity
	m	(Lbiq;Ldfj;)Ldjt$a;	a	of
		p	0		sourceEntity
		p	1		affectedState
	m	(Ldfj;)Ldjt$a;	a	of
		p	0		affectedState
	m	()Ldfj;	b	affectedState
	f	Lbiq;	a	sourceEntity
	f	Ldfj;	b	affectedState
c	djt$b	net/minecraft/world/level/gameevent/GameEvent$ListenerInfo
	m	(Ldjt;Lehn;Ldjt$a;Ldjv;Lehn;)V	<init>	<init>
		p	1		event
		p	2		emitterPos
		p	3		emitter
		p	4		listener
		p	5		listenerPos
	m	()Ldjt;	a	gameEvent
	m	(Ldjt$b;)I	a	compareTo
	m	()Lehn;	b	source
	m	()Ldjt$a;	c	context
	m	()Ldjv;	d	recipient
	f	Ldjt;	a	gameEvent
	f	Lehn;	b	source
	f	Ldjt$a;	c	context
	f	Ldjv;	d	recipient
	f	D	e	distanceToRecipient
c	dju	net/minecraft/world/level/gameevent/GameEventDispatcher
	m	(Lakq;)V	<init>	<init>
		p	1		world
	m	(Ldjt;Lehn;Ldjt$a;)V	a	post
		p	1		event
		p	2		emitterPos
		p	3		emitter
	m	(Ljava/util/List;)V	a	handleGameEventMessagesInQueue
		p	1		messages
	m	(Ljava/util/List;Ldjt;Lehn;Ldjt$a;Ldjv;Lehn;)V	a	lambda$post$0
		p	5		listener
		p	6		listenerPos
	f	Lakq;	a	level
c	djv	net/minecraft/world/level/gameevent/GameEventListener
	m	()Ldjx;	a	getListenerSource
	m	(Lakq;Ldjt;Ldjt$a;Lehn;)Z	a	handleGameEvent
		p	1		world
		p	2		event
		p	3		emitter
		p	4		emitterPos
	m	()I	b	getListenerRadius
	m	()Ldjv$a;	c	getDeliveryMode
c	djv$a	net/minecraft/world/level/gameevent/GameEventListener$DeliveryMode
	m	()[Ldjv$a;	a	$values
	f	Ldjv$a;	a	UNSPECIFIED
	f	Ldjv$a;	b	BY_DISTANCE
	f	[Ldjv$a;	c	$VALUES
c	djv$b	net/minecraft/world/level/gameevent/GameEventListener$Holder
	m	()Ldjv;	d	getListener
c	djw	net/minecraft/world/level/gameevent/GameEventListenerRegistry
	m	()Z	a	isEmpty
	m	(Ldjt;Lehn;Ldjt$a;Ldjw$a;)Z	a	visitInRangeListeners
		p	1		event
		p	2		pos
		p	3		emitter
		p	4		callback
	m	(Ldjv;)V	a	register
		p	1		listener
	m	(Ldjv;)V	b	unregister
		p	1		listener
	f	Ldjw;	a	NOOP
c	djw$1	net/minecraft/world/level/gameevent/GameEventListenerRegistry$1
	m	()Z	a	isEmpty
	m	(Ldjt;Lehn;Ldjt$a;Ldjw$a;)Z	a	visitInRangeListeners
		p	1		event
		p	2		pos
		p	3		emitter
		p	4		callback
	m	(Ldjv;)V	a	register
		p	1		listener
	m	(Ldjv;)V	b	unregister
		p	1		listener
c	djw$a	net/minecraft/world/level/gameevent/GameEventListenerRegistry$ListenerVisitor
	m	(Ldjv;Lehn;)V	visit	visit
		p	1		listener
		p	2		listenerPos
c	djx	net/minecraft/world/level/gameevent/PositionSource
	m	()Ldjy;	a	getType
	m	(Lcpv;)Ljava/util/Optional;	a	getPosition
		p	1		world
	f	Lcom/mojang/serialization/Codec;	b	CODEC
c	djy	net/minecraft/world/level/gameevent/PositionSourceType
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Laew;)Ljava/lang/IllegalArgumentException;	a	lambda$fromNetwork$0
	m	(Ldjx;Lso;)V	a	toNetwork
		p	0		positionSource
		p	1		buf
	m	(Ljava/lang/String;Ldjy;)Ldjy;	a	register
		p	0		id
		p	1		positionSourceType
	m	(Lso;Ldjx;)V	a	write
		p	1		buf
		p	2		positionSource
	m	(Lso;)Ldjx;	b	read
		p	1		buf
	m	(Lso;)Ldjx;	c	fromNetwork
		p	0		buf
	f	Ldjy;	a	BLOCK
	f	Ldjy;	b	ENTITY
c	djz	net/minecraft/world/level/gameevent/package-info
c	dka	net/minecraft/world/level/gameevent/vibrations/VibrationInfo
	m	(Ldjt;FLehn;Lbiq;)V	<init>	<init>
		p	1		gameEvent
		p	2		distance
		p	3		pos
		p	4		entity
	m	(Ldjt;FLehn;Ljava/util/UUID;Ljava/util/UUID;)V	<init>	<init>
		p	1		gameEvent
		p	2		distance
		p	3		pos
		p	4		uuid
		p	5		projectileOwnerUuid
	m	()Ldjt;	a	gameEvent
	m	(Lakq;)Ljava/util/Optional;	a	getEntity
		p	1		world
	m	(Lbiq;)Ljava/util/UUID;	a	getProjectileOwner
		p	0		entity
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	(Ldjt;Ljava/lang/Float;Lehn;Ljava/util/Optional;Ljava/util/Optional;)Ldka;	a	lambda$static$2
		p	0		event
		p	1		distance
		p	2		pos
		p	3		uuid
		p	4		projectileOwnerUuid
	m	(Ldka;)Ljava/util/Optional;	a	lambda$static$1
		p	0		vibration
	m	()F	b	distance
	m	(Lakq;)Ljava/util/Optional;	b	getProjectileOwner
		p	1		world
	m	(Lbiq;)Lccm;	b	lambda$getProjectileOwner$6
		p	0		entity
	m	(Ldka;)Ljava/util/Optional;	b	lambda$static$0
		p	0		vibration
	m	()Lehn;	c	pos
	m	(Lakq;)Ljava/util/Optional;	c	lambda$getProjectileOwner$7
	m	(Lbiq;)Z	c	lambda$getProjectileOwner$5
		p	0		entity
	m	()Ljava/util/UUID;	d	uuid
	m	(Lakq;)Ljava/util/Optional;	d	lambda$getEntity$4
	m	()Ljava/util/UUID;	e	projectileOwnerUuid
	m	()Lbiq;	f	entity
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldjt;	b	gameEvent
	f	F	c	distance
	f	Lehn;	d	pos
	f	Ljava/util/UUID;	e	uuid
	f	Ljava/util/UUID;	f	projectileOwnerUuid
	f	Lbiq;	g	entity
c	dkb	net/minecraft/world/level/gameevent/vibrations/VibrationSelector
	m	(Ljava/util/Optional;J)V	<init>	<init>
		p	1		vibration
		p	2		tick
	m	()V	a	startOver
	m	(J)Ljava/util/Optional;	a	chosenCandidate
		p	1		currentTick
	m	(JLdka;)Lorg/apache/commons/lang3/tuple/Pair;	a	lambda$new$3
		p	2		vibration2
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Ldka;J)V	a	addCandidate
		p	1		vibration
		p	2		tick
	m	(Ldkb;)Ljava/lang/Long;	a	lambda$static$1
	m	(Ldka;J)Z	b	shouldReplaceVibration
		p	1		vibration
		p	2		tick
	m	(Ldkb;)Ljava/util/Optional;	b	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Optional;	b	currentVibrationData
c	dkc	net/minecraft/world/level/gameevent/vibrations/VibrationSystem
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;)V	a	lambda$static$0
		p	0		frequencies
	m	(FI)I	a_	getRedstoneStrengthForDistance
		p	0		distance
		p	1		range
	m	(Ldjt;)I	a_	getGameEventFrequency
		p	0		event
	m	(I)Ldjt;	b	getResonanceEventByFrequency
		p	0		frequency
	m	()Ldkc$a;	gf	getVibrationData
	m	()Ldkc$d;	gg	getVibrationUser
	f	[Ldjt;	d_	RESONANCE_EVENTS
	f	Ljava/util/function/ToIntFunction;	e_	VIBRATION_FREQUENCY_FOR_EVENT
c	dkc$a	net/minecraft/world/level/gameevent/vibrations/VibrationSystem$Data
	m	(Ldka;Ldkb;IZ)V	<init>	<init>
		p	1		vibration
		p	2		vibrationSelector
		p	3		delay
		p	4		spawnParticle
	m	()Ldkb;	a	getSelectionStrategy
	m	(I)V	a	setTravelTimeInTicks
		p	1		delay
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Ldka;)V	a	setCurrentVibration
		p	1		vibration
	m	(Ldkc$a;)Ljava/util/Optional;	a	lambda$static$0
		p	0		listenerData
	m	(Ljava/util/Optional;Ldkb;Ljava/lang/Integer;)Ldkc$a;	a	lambda$static$1
		p	0		vibration
		p	1		selector
		p	2		delay
	m	(Z)V	a	setReloadVibrationParticle
		p	1		spawnParticle
	m	()Ldka;	b	getCurrentVibration
	m	()I	c	getTravelTimeInTicks
	m	()V	d	decrementTravelTime
	m	()Z	e	shouldReloadVibrationParticle
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/lang/String;	b	NBT_TAG_KEY
	f	Ldka;	c	currentVibration
	f	I	d	travelTimeInTicks
	f	Ldkb;	e	selectionStrategy
	f	Z	f	reloadVibrationParticle
c	dkc$b	net/minecraft/world/level/gameevent/vibrations/VibrationSystem$Listener
	m	(Ldkc;)V	<init>	<init>
		p	1		receiver
	m	()Ldjx;	a	getListenerSource
	m	(Lakq;Ldjt;Ldjt$a;Lehn;)Z	a	handleGameEvent
		p	1		world
		p	2		event
		p	3		emitter
		p	4		emitterPos
	m	(Lakq;Ldjt;Ldjt$a;Lehn;Lehn;)V	a	lambda$forceScheduleVibration$0
		p	5		pos
	m	(Lakq;Ldkc$a;Ldjt;Ldjt$a;Lehn;Lehn;)V	a	scheduleVibration
		p	1		world
		p	2		listenerData
		p	3		event
		p	4		emitter
		p	5		emitterPos
		p	6		listenerPos
	m	(Lcpv;Lehn;Lehn;)Z	a	isOccluded
		p	0		world
		p	1		emitterPos
		p	2		listenerPos
	m	(Ldfj;)Z	a	lambda$isOccluded$1
		p	0		state
	m	(Lgw;Lgw;)F	a	distanceBetweenInBlocks
		p	0		emitterPos
		p	1		listenerPos
	m	()I	b	getListenerRadius
	m	(Lakq;Ldjt;Ldjt$a;Lehn;)V	b	forceScheduleVibration
		p	1		world
		p	2		event
		p	3		emitter
		p	4		emitterPos
	f	Ldkc;	a	system
c	dkc$c	net/minecraft/world/level/gameevent/vibrations/VibrationSystem$Ticker
	m	(Lakq;Ldkc$a;Ldkc$d;)V	a	trySelectAndScheduleVibration
		p	0		world
		p	1		listenerData
		p	2		callback
	m	(Lakq;Ldkc$a;Ldkc$d;Ldka;)Z	a	receiveVibration
		p	0		world
		p	1		listenerData
		p	2		callback
		p	3		vibration
	m	(Lcpv;Ldkc$a;Ldkc$d;)V	a	tick
		p	0		world
		p	1		listenerData
		p	2		callback
	m	(Lcpv;Lgw;)Z	a	areAdjacentChunksTicking
		p	0		world
		p	1		pos
	m	(Ldkc$a;Ldkc$d;Lakq;Ldka;)V	a	lambda$trySelectAndScheduleVibration$0
		p	3		vibration
	m	(Lakq;Ldkc$a;Ldkc$d;)V	b	tryReloadVibrationParticle
		p	0		world
		p	1		listenerData
		p	2		callback
c	dkc$d	net/minecraft/world/level/gameevent/vibrations/VibrationSystem$User
	m	()I	a	getListenerRadius
	m	(F)I	a	calculateTravelTimeInTicks
		p	1		distance
	m	(Lakq;Lgw;Ldjt;Lbiq;Lbiq;F)V	a	onReceiveVibration
		p	1		world
		p	2		pos
		p	3		event
		p	4		sourceEntity
		p	5		entity
		p	6		distance
	m	(Lakq;Lgw;Ldjt;Ldjt$a;)Z	a	canReceiveVibration
		p	1		world
		p	2		pos
		p	3		event
		p	4		emitter
	m	(Ldjt;Ldjt$a;)Z	a	isValidVibration
		p	1		gameEvent
		p	2		emitter
	m	()Ldjx;	b	getPositionSource
	m	()Laqh;	c	getListenableEvents
	m	()Z	d	canTriggerAvoidVibration
	m	()V	e	onDataChanged
	m	()Z	f	requiresAdjacentChunksToBeTicking
c	dkd	net/minecraft/world/level/gameevent/vibrations/package-info
c	dke	net/minecraft/world/level/levelgen/Aquifer
	m	()Z	a	shouldScheduleFluidUpdate
	m	(Ldke$a;)Ldke;	a	createDisabled
		p	0		fluidLevelSampler
	m	(Ldkl$b;D)Ldfj;	a	computeSubstance
		p	1		pos
		p	2		density
	m	(Ldkw;Lcpc;Ldky;Ldlf;IILdke$a;)Ldke;	a	create
		p	0		chunkNoiseSampler
		p	1		chunkPos
		p	2		noiseRouter
		p	3		randomSplitter
		p	4		minimumY
		p	5		height
		p	6		fluidLevelSampler
c	dke$1	net/minecraft/world/level/levelgen/Aquifer$1
	m	()Z	a	shouldScheduleFluidUpdate
	m	(Ldkl$b;D)Ldfj;	a	computeSubstance
		p	1		pos
		p	2		density
	f	Ldke$a;	a	val$fluidRule
c	dke$a	net/minecraft/world/level/levelgen/Aquifer$FluidPicker
	m	(III)Ldke$b;	computeFluid	computeFluid
		p	1		x
		p	2		y
		p	3		z
c	dke$b	net/minecraft/world/level/levelgen/Aquifer$FluidStatus
	m	(ILdfj;)V	<init>	<init>
		p	1		y
		p	2		state
	m	(I)Ldfj;	a	at
		p	1		y
	f	I	a	fluidLevel
	f	Ldfj;	b	fluidType
c	dke$c	net/minecraft/world/level/levelgen/Aquifer$NoiseBasedAquifer
	m	(Ldkw;Lcpc;Ldky;Ldlf;IILdke$a;)V	<init>	<init>
		p	1		chunkNoiseSampler
		p	2		chunkPos
		p	3		noiseRouter
		p	4		randomSplitter
		p	5		minimumY
		p	6		height
		p	7		fluidLevelSampler
	m	()Z	a	shouldScheduleFluidUpdate
	m	(I)I	a	gridX
		p	1		x
	m	(II)D	a	similarity
		p	1		a
	m	(III)I	a	getIndex
		p	1		x
		p	2		y
		p	3		z
	m	(IIII)I	a	computeRandomizedFluidSurfaceLevel
		p	1		blockX
		p	2		blockY
		p	3		blockZ
		p	4		surfaceHeightEstimate
	m	(IIILdke$b;I)Ldfj;	a	computeFluidType
		p	1		blockX
		p	2		blockY
		p	3		blockZ
		p	4		defaultFluidLevel
		p	5		fluidLevel
	m	(IIILdke$b;IZ)I	a	computeSurfaceLevel
		p	1		blockX
		p	2		blockY
		p	3		blockZ
		p	4		defaultFluidLevel
		p	5		surfaceHeightEstimate
	m	(J)Ldke$b;	a	getAquiferStatus
		p	1		pos
	m	(Ldkl$b;D)Ldfj;	a	computeSubstance
		p	1		pos
		p	2		density
	m	(Ldkl$b;Lorg/apache/commons/lang3/mutable/MutableDouble;Ldke$b;Ldke$b;)D	a	calculatePressure
		p	1		pos
	m	(I)I	b	gridY
		p	1		y
	m	(III)Ldke$b;	b	computeFluid
		p	1		blockX
		p	2		blockY
		p	3		blockZ
	m	(I)I	c	gridZ
		p	1		z
	f	I	A	gridSizeX
	f	I	B	gridSizeZ
	f	[[I	C	SURFACE_SAMPLING_OFFSETS_IN_CHUNKS
	f	I	a	X_RANGE
	f	I	b	Y_RANGE
	f	I	c	Z_RANGE
	f	I	d	X_SEPARATION
	f	I	e	Y_SEPARATION
	f	I	f	Z_SEPARATION
	f	I	g	X_SPACING
	f	I	h	Y_SPACING
	f	I	i	Z_SPACING
	f	I	j	MAX_REASONABLE_DISTANCE_TO_AQUIFER_CENTER
	f	D	k	FLOWING_UPDATE_SIMULARITY
	f	Ldkw;	l	noiseChunk
	f	Ldkl;	m	barrierNoise
	f	Ldkl;	n	fluidLevelFloodednessNoise
	f	Ldkl;	o	fluidLevelSpreadNoise
	f	Ldkl;	p	lavaNoise
	f	Ldlf;	q	positionalRandomFactory
	f	[Ldke$b;	r	aquiferCache
	f	[J	s	aquiferLocationCache
	f	Ldke$a;	t	globalFluidPicker
	f	Ldkl;	u	erosion
	f	Ldkl;	v	depth
	f	Z	w	shouldScheduleFluidUpdate
	f	I	x	minGridX
	f	I	y	minGridY
	f	I	z	minGridZ
c	dkf	net/minecraft/world/level/levelgen/Beardifier
	m	(Lit/unimi/dsi/fastutil/objects/ObjectListIterator;Lit/unimi/dsi/fastutil/objects/ObjectListIterator;)V	<init>	<init>
		p	1		pieceIterator
		p	2		junctionIterator
	m	()D	a	minValue
	m	(I)Z	a	isInKernelRange
		p	0		i
	m	(IDI)D	a	computeBeardContribution
		p	0		x
		p	1		y
		p	3		z
	m	(III)D	a	getBuryContribution
		p	0		x
		p	1		y
		p	2		z
	m	(IIII)D	a	getBeardContribution
		p	0		x
		p	1		y
		p	2		z
		p	3		yy
	m	(Lcpc;Lit/unimi/dsi/fastutil/objects/ObjectList;IILit/unimi/dsi/fastutil/objects/ObjectList;Ldvq;)V	a	lambda$forStructuresInChunk$2
		p	0		pos
		p	1		piecesOut
		p	2		startX
		p	3		startZ
		p	4		jigsawJunctionsOut
		p	5		start
	m	(Lcqn;Lcpc;)Ldkf;	a	forStructuresInChunk
		p	0		world
		p	1		pos
	m	(Ldkl$b;)D	a	compute
		p	1		pos
	m	(Ldvi;)Z	a	lambda$forStructuresInChunk$1
		p	0		structure
	m	([F)V	a	lambda$static$0
		p	0		array
	m	()D	b	maxValue
	m	(III)D	b	computeBeardContribution
		p	0		x
		p	1		y
		p	2		z
	f	I	a	BEARD_KERNEL_RADIUS
	f	I	f	BEARD_KERNEL_SIZE
	f	[F	g	BEARD_KERNEL
	f	Lit/unimi/dsi/fastutil/objects/ObjectListIterator;	h	pieceIterator
	f	Lit/unimi/dsi/fastutil/objects/ObjectListIterator;	i	junctionIterator
c	dkf$1	net/minecraft/world/level/levelgen/Beardifier$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$levelgen$structure$TerrainAdjustment
c	dkf$a	net/minecraft/world/level/levelgen/Beardifier$Rigid
	m	()Ldva;	a	box
	m	()Ldvt;	b	terrainAdjustment
	m	()I	c	groundLevelDelta
	f	Ldva;	a	box
	f	Ldvt;	b	terrainAdjustment
	f	I	c	groundLevelDelta
c	dkg	net/minecraft/world/level/levelgen/BelowZeroRetrogen
	m	(Ldhk;Ljava/util/Optional;)V	<init>	<init>
		p	1		targetStatus
		p	2		missingBedrock
	m	()Ldhk;	a	targetStatus
	m	(II)Z	a	hasBedrockHole
		p	1		x
		p	2		z
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$5
		p	0		instance
	m	(Lcqw;Ldhf;)Lcqw;	a	getBiomeResolver
		p	0		biomeSupplier
		p	1		chunk
	m	(Lcqw;Ljava/util/function/Predicate;Ldhf;IIILcrc$f;)Lhe;	a	lambda$getBiomeResolver$8
		p	3		x
		p	4		y
		p	5		z
		p	6		noise
	m	(Ldhk;)Lcom/mojang/serialization/DataResult;	a	lambda$static$3
		p	0		status
	m	(Ldia;)V	a	replaceOldBedrock
		p	0		chunk
	m	(Ldia;Lgw;)V	a	lambda$applyBedrockMask$7
		p	1		pos
	m	(Ldkg;)Ljava/util/Optional;	a	lambda$static$4
		p	0		belowZeroRetrogen
	m	(Ljava/util/BitSet;)Ljava/util/stream/LongStream;	a	lambda$static$1
		p	0		bedrockBitSet
	m	(Ljava/util/stream/LongStream;)Ljava/util/BitSet;	a	lambda$static$0
		p	0		serializedBedrockBitSet
	m	(Lqw;)Ldkg;	a	read
		p	0		nbt
	m	()Z	b	hasBedrockHoles
	m	(Ldia;)V	b	applyBedrockMask
		p	1		chunk
	m	(Ldia;Lgw;)V	b	lambda$replaceOldBedrock$6
		p	1		pos
	m	()Ljava/lang/String;	c	lambda$static$2
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcpx;	b	UPGRADE_HEIGHT_ACCESSOR
	f	Ljava/util/BitSet;	c	EMPTY
	f	Lcom/mojang/serialization/Codec;	d	BITSET_CODEC
	f	Lcom/mojang/serialization/Codec;	e	NON_EMPTY_CHUNK_STATUS
	f	Ljava/util/Set;	f	RETAINED_RETROGEN_BIOMES
	f	Ldhk;	g	targetStatus
	f	Ljava/util/BitSet;	h	missingBedrock
c	dkg$1	net/minecraft/world/level/levelgen/BelowZeroRetrogen$1
	m	()I	H_	getMinBuildHeight
	m	()I	I_	getHeight
c	dkh	net/minecraft/world/level/levelgen/BitRandomSource
	m	(I)I	a	nextInt
		p	1		bound
	m	(I)I	c	next
		p	1		bits
	m	()I	f	nextInt
	m	()J	g	nextLong
	m	()Z	h	nextBoolean
	m	()F	i	nextFloat
	m	()D	j	nextDouble
	f	F	b	FLOAT_MULTIPLIER
	f	D	c	DOUBLE_MULTIPLIER
c	dki	net/minecraft/world/level/levelgen/Column
	m	()Ldki;	a	line
	m	(I)Ldki;	a	below
		p	0		ceiling
	m	(II)Ldki$b;	a	around
	m	(Lcqb;ILjava/util/function/Predicate;Ljava/util/function/Predicate;Lgw$a;ILha;)Ljava/util/OptionalInt;	a	scanDirection
		p	0		world
		p	1		height
		p	2		canGenerate
		p	3		canReplace
		p	4		mutablePos
		p	5		y
		p	6		direction
	m	(Lcqb;Lgw;ILjava/util/function/Predicate;Ljava/util/function/Predicate;)Ljava/util/Optional;	a	scan
		p	0		world
		p	1		pos
		p	2		height
		p	3		canGenerate
		p	4		canReplace
	m	(Ljava/util/OptionalInt;)Ldki;	a	withFloor
		p	1		floor
	m	(Ljava/util/OptionalInt;Ljava/util/OptionalInt;)Ldki;	a	create
		p	0		ceilingHeight
		p	1		floorHeight
	m	()Ljava/util/OptionalInt;	b	getCeiling
	m	(I)Ldki;	b	fromHighest
	m	(II)Ldki$b;	b	inside
		p	0		floor
		p	1		ceiling
	m	(Ljava/util/OptionalInt;)Ldki;	b	withCeiling
		p	1		ceiling
	m	()Ljava/util/OptionalInt;	c	getFloor
	m	(I)Ldki;	c	above
		p	0		floor
	m	()Ljava/util/OptionalInt;	d	getHeight
	m	(I)Ldki;	d	fromLowest
c	dki$a	net/minecraft/world/level/levelgen/Column$Line
	m	()Ljava/util/OptionalInt;	b	getCeiling
	m	()Ljava/util/OptionalInt;	c	getFloor
	m	()Ljava/util/OptionalInt;	d	getHeight
	f	Ldki$a;	a	INSTANCE
c	dki$b	net/minecraft/world/level/levelgen/Column$Range
	m	(II)V	<init>	<init>
		p	1		floor
		p	2		ceiling
	m	()Ljava/util/OptionalInt;	b	getCeiling
	m	()Ljava/util/OptionalInt;	c	getFloor
	m	()Ljava/util/OptionalInt;	d	getHeight
	m	()I	e	ceiling
	m	()I	f	floor
	m	()I	g	height
	f	I	a	floor
	f	I	b	ceiling
c	dki$c	net/minecraft/world/level/levelgen/Column$Ray
	m	(IZ)V	<init>	<init>
		p	1		height
		p	2		floor
	m	()Ljava/util/OptionalInt;	b	getCeiling
	m	()Ljava/util/OptionalInt;	c	getFloor
	m	()Ljava/util/OptionalInt;	d	getHeight
	f	I	a	edge
	f	Z	b	pointingUp
c	dkj	net/minecraft/world/level/levelgen/DebugLevelSource
	m	(Lhe$c;)V	<init>	<init>
		p	1		biomeEntry
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(II)Ldfj;	a	getBlockStateFor
		p	0		x
		p	1		z
	m	(IILcpx;Ldlg;)Lcqh;	a	getBaseColumn
		p	1		x
		p	2		z
		p	3		world
		p	4		noiseConfig
	m	(IILdks$a;Lcpx;Ldlg;)I	a	getBaseHeight
		p	1		x
		p	2		z
		p	3		heightmap
		p	4		world
		p	5		noiseConfig
	m	(Lakx;)V	a	spawnOriginalMobs
		p	1		region
	m	(Lakx;JLdlg;Lcqv;Lcqn;Ldhf;Ldko$a;)V	a	applyCarvers
		p	1		chunkRegion
		p	2		seed
		p	4		noiseConfig
		p	5		biomeAccess
		p	6		structureAccessor
		p	7		chunk
		p	8		carverStep
	m	(Lakx;Lcqn;Ldlg;Ldhf;)V	a	buildSurface
		p	1		region
		p	2		structures
		p	3		noiseConfig
		p	4		chunk
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lcqp;Ldhf;Lcqn;)V	a	applyBiomeDecoration
		p	1		world
		p	2		chunk
		p	3		structureAccessor
	m	(Lcsv;)Ljava/util/stream/Stream;	a	lambda$static$1
		p	0		block
	m	(Ljava/util/List;Ldlg;Lgw;)V	a	addDebugScreenInfo
		p	1		text
		p	2		noiseConfig
		p	3		pos
	m	(Ljava/util/concurrent/Executor;Ldlu;Ldlg;Lcqn;Ldhf;)Ljava/util/concurrent/CompletableFuture;	a	fillFromNoise
		p	1		executor
		p	2		blender
		p	3		noiseConfig
		p	4		structureAccessor
		p	5		chunk
	m	()I	d	getGenDepth
	m	()I	e	getSeaLevel
	m	()I	f	getMinY
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Ldfj;	d	AIR
	f	Ldfj;	e	BARRIER
	f	I	f	HEIGHT
	f	I	g	BARRIER_HEIGHT
	f	I	h	BLOCK_MARGIN
	f	Ljava/util/List;	i	ALL_BLOCKS
	f	I	j	GRID_WIDTH
	f	I	k	GRID_HEIGHT
c	dkk	net/minecraft/world/level/levelgen/Density
	f	D	a	SURFACE
	f	D	b	UNRECOVERABLY_DENSE
	f	D	c	UNRECOVERABLY_THIN
c	dkl	net/minecraft/world/level/levelgen/DensityFunction
	m	()D	a	minValue
	m	(DD)Ldkl;	a	clamp
		p	1		min
		p	3		max
	m	(Ldkl$b;)D	a	compute
		p	1		pos
	m	(Ldkl$f;)Ldkl;	a	mapAll
		p	1		visitor
	m	(Ldkl;)Lhe;	a	lambda$static$0
		p	0		function
	m	([DLdkl$a;)V	a	fillArray
		p	1		densities
		p	2		applier
	m	()D	b	maxValue
	m	()Larq;	c	codec
	m	()Ldkl;	d	abs
	m	()Ldkl;	e	square
	m	()Ldkl;	f	cube
	m	()Ldkl;	g	halfNegative
	m	()Ldkl;	h	quarterNegative
	m	()Ldkl;	i	squeeze
	f	Lcom/mojang/serialization/Codec;	b	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Lcom/mojang/serialization/Codec;	d	HOLDER_HELPER_CODEC
c	dkl$a	net/minecraft/world/level/levelgen/DensityFunction$ContextProvider
	m	(I)Ldkl$b;	a	forIndex
		p	1		index
	m	([DLdkl;)V	a	fillAllDirectly
		p	1		densities
		p	2		densityFunction
c	dkl$b	net/minecraft/world/level/levelgen/DensityFunction$FunctionContext
	m	()I	a	blockX
	m	()I	b	blockY
	m	()I	c	blockZ
	m	()Ldlu;	d	getBlender
c	dkl$c	net/minecraft/world/level/levelgen/DensityFunction$NoiseHolder
	m	(Lhe;)V	<init>	<init>
		p	1		noiseData
	m	()D	a	maxValue
	m	(DDD)D	a	getValue
		p	1		x
		p	3		y
		p	5		z
	m	(Lhe;)Ldkl$c;	a	lambda$static$0
		p	0		noiseData
	m	()Lhe;	b	noiseData
	m	()Ldzp;	c	noise
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lhe;	b	noiseData
	f	Ldzp;	c	noise
c	dkl$d	net/minecraft/world/level/levelgen/DensityFunction$SimpleFunction
	m	(Ldkl$f;)Ldkl;	a	mapAll
		p	1		visitor
	m	([DLdkl$a;)V	a	fillArray
		p	1		densities
		p	2		applier
c	dkl$e	net/minecraft/world/level/levelgen/DensityFunction$SinglePointContext
	m	()I	a	blockX
	m	()I	b	blockY
	m	()I	c	blockZ
	f	I	a	blockX
	f	I	b	blockY
	f	I	c	blockZ
c	dkl$f	net/minecraft/world/level/levelgen/DensityFunction$Visitor
	m	(Ldkl$c;)Ldkl$c;	a	visitNoise
		p	1		noiseDensityFunction
	m	(Ldkl;)Ldkl;	apply	apply
		p	1		densityFunction
c	dkm	net/minecraft/world/level/levelgen/DensityFunctions
	m	()Ldkl;	a	zero
	m	(D)Ldkl;	a	constant
		p	0		density
	m	(IIDD)Ldkl;	a	yClampedGradient
		p	0		fromY
		p	1		toY
		p	2		fromValue
		p	4		toValue
	m	(J)Ldkl;	a	endIslands
		p	0		seed
	m	(Lara;)Ldkl;	a	spline
		p	0		spline
	m	(Lcom/mojang/datafixers/util/Either;)Ldkl;	a	lambda$static$1
		p	0		either
	m	(Lcom/mojang/serialization/Codec;Ljava/util/function/Function;Ljava/util/function/Function;)Larq;	a	singleArgumentCodec
		p	0		codec
		p	1		creator
		p	2		argumentGetter
	m	(Lcom/mojang/serialization/MapCodec;)Larq;	a	makeCodec
		p	0		mapCodec
	m	(Ldkl;)Ldkl;	a	interpolated
		p	0		inputFunction
	m	(Ldkl;DD)Ldkl;	a	mapFromUnitTo
		p	0		function
		p	1		min
		p	3		max
	m	(Ldkl;DDLdkl;Ldkl;)Ldkl;	a	rangeChoice
		p	0		input
		p	1		minInclusive
		p	3		maxExclusive
		p	5		whenInRange
		p	6		whenOutOfRange
	m	(Ldkl;DLdkl;)Ldkl;	a	lerp
		p	0		delta
		p	1		start
		p	3		end
	m	(Ldkl;Ldkl;)Ldkl;	a	add
		p	0		a
		p	1		b
	m	(Ldkl;Ldkl;DLhe;)Ldkl;	a	shiftedNoise2d
		p	0		shiftX
		p	1		shiftZ
		p	2		xzScale
		p	4		noiseParameters
	m	(Ldkl;Ldkl;Ldkl;)Ldkl;	a	lerp
		p	0		delta
		p	1		start
		p	2		end
	m	(Ldkl;Ldkm$k$a;)Ldkl;	a	map
		p	0		input
		p	1		type
	m	(Ldkl;Lhe;Ldkm$z$a;)Ldkl;	a	weirdScaledSampler
		p	0		input
		p	1		parameters
		p	2		mapper
	m	(Lhe;)Ldkl;	a	noise
		p	0		noiseParameters
	m	(Lhe;D)Ldkl;	a	noise
		p	0		noiseParameters
		p	1		scaleY
	m	(Lhe;DD)Ldkl;	a	mappedNoise
		p	0		noiseParameters
		p	1		min
		p	3		max
	m	(Lhe;DDD)Ldkl;	a	mappedNoise
		p	0		noiseParameters
		p	1		scaleY
		p	3		min
		p	5		max
	m	(Lhe;DDDD)Ldkl;	a	mappedNoise
		p	0		noiseParameters
		p	1		scaleXz
		p	3		scaleY
		p	5		min
		p	7		max
	m	(Lhq;)Lcom/mojang/serialization/Codec;	a	bootstrap
		p	0		registry
	m	(Lhq;Ljava/lang/String;Larq;)Lcom/mojang/serialization/Codec;	a	register
		p	0		registry
		p	1		id
		p	2		codecHolder
	m	(Ljava/util/function/BiFunction;Ljava/util/function/Function;Ljava/util/function/Function;)Larq;	a	doubleFunctionArgumentCodec
		p	0		creator
		p	1		argument1Getter
		p	2		argument2Getter
	m	(Ljava/util/function/Function;Ljava/util/function/Function;)Larq;	a	singleFunctionArgumentCodec
		p	0		creator
		p	1		argumentGetter
	m	(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/BiFunction;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$doubleFunctionArgumentCodec$3
		p	3		instance
	m	()Ldkl;	b	blendAlpha
	m	(Ldkl;)Ldkl;	b	flatCache
		p	0		inputFunction
	m	(Ldkl;Ldkl;)Ldkl;	b	mul
		p	0		a
		p	1		b
	m	(Lhe;)Ldkl;	b	shiftA
		p	0		noiseParameters
	m	(Lhe;DD)Ldkl;	b	noise
		p	0		noiseParameters
		p	1		scaleXz
		p	3		scaleY
	m	()Ldkl;	c	blendOffset
	m	(Ldkl;)Ldkl;	c	cache2d
		p	0		inputFunction
	m	(Ldkl;Ldkl;)Ldkl;	c	min
		p	0		a
		p	1		b
	m	(Lhe;)Ldkl;	c	shiftB
		p	0		noiseParameters
	m	(Ldkl;)Ldkl;	d	cacheOnce
		p	0		inputFunction
	m	(Ldkl;Ldkl;)Ldkl;	d	max
		p	0		a
		p	1		b
	m	(Lhe;)Ldkl;	d	shift
		p	0		noiseParameters
	m	(Ldkl;)Ldkl;	e	cacheAllInCell
		p	0		inputFunction
	m	(Ldkl;)Ldkl;	f	blendDensity
		p	0		input
	m	(Ldkl;)Lcom/mojang/datafixers/util/Either;	g	lambda$static$2
		p	0		densityFunction
	m	(Ldkl;)Lcom/mojang/serialization/Codec;	h	lambda$static$0
		p	0		densityFunction
	f	D	a	MAX_REASONABLE_NOISE_VALUE
	f	Lcom/mojang/serialization/Codec;	b	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Lcom/mojang/serialization/Codec;	d	NOISE_VALUE_CODEC
c	dkm$1	net/minecraft/world/level/levelgen/DensityFunctions$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$levelgen$DensityFunctions$Mapped$Type
	f	[I	b	$SwitchMap$net$minecraft$world$level$levelgen$DensityFunctions$TwoArgumentSimpleFunction$Type
	f	[I	c	$SwitchMap$net$minecraft$world$level$levelgen$DensityFunctions$MulOrAdd$Type
c	dkm$a	net/minecraft/world/level/levelgen/DensityFunctions$Ap2
	m	()D	a	minValue
	m	(Ldkl$b;)D	a	compute
		p	1		pos
	m	(Ldkl$f;)Ldkl;	a	mapAll
		p	1		visitor
	m	([DLdkl$a;)V	a	fillArray
		p	1		densities
		p	2		applier
	m	()D	b	maxValue
	m	()Ldkm$y$a;	j	type
	m	()Ldkl;	k	argument1
	m	()Ldkl;	l	argument2
	f	Ldkm$y$a;	e	type
	f	Ldkl;	f	argument1
	f	Ldkl;	g	argument2
	f	D	h	minValue
	f	D	i	maxValue
c	dkm$b	net/minecraft/world/level/levelgen/DensityFunctions$BeardifierMarker
	m	()D	a	minValue
	m	(Ldkl$b;)D	a	compute
		p	1		pos
	m	([DLdkl$a;)V	a	fillArray
		p	1		densities
		p	2		applier
	m	()D	b	maxValue
	m	()[Ldkm$b;	j	$values
	f	Ldkm$b;	a	INSTANCE
	f	[Ldkm$b;	f	$VALUES
c	dkm$c	net/minecraft/world/level/levelgen/DensityFunctions$BeardifierOrMarker
	m	()Larq;	c	codec
	f	Larq;	e	CODEC
c	dkm$d	net/minecraft/world/level/levelgen/DensityFunctions$BlendAlpha
	m	()D	a	minValue
	m	(Ldkl$b;)D	a	compute
		p	1		pos
	m	([DLdkl$a;)V	a	fillArray
		p	1		densities
		p	2		applier
	m	()D	b	maxValue
	m	()Larq;	c	codec
	m	()[Ldkm$d;	j	$values
	f	Ldkm$d;	a	INSTANCE
	f	Larq;	e	CODEC
	f	[Ldkm$d;	f	$VALUES
c	dkm$e	net/minecraft/world/level/levelgen/DensityFunctions$BlendDensity
	m	()D	a	minValue
	m	(Ldkl$b;D)D	a	transform
		p	1		pos
		p	2		density
	m	(Ldkl$f;)Ldkl;	a	mapAll
		p	1		visitor
	m	()D	b	maxValue
	m	()Larq;	c	codec
	m	()Ldkl;	j	input
	f	Ldkl;	a	input
	f	Larq;	e	CODEC
c	dkm$f	net/minecraft/world/level/levelgen/DensityFunctions$BlendOffset
	m	()D	a	minValue
	m	(Ldkl$b;)D	a	compute
		p	1		pos
	m	([DLdkl$a;)V	a	fillArray
		p	1		densities
		p	2		applier
	m	()D	b	maxValue
	m	()Larq;	c	codec
	m	()[Ldkm$f;	j	$values
	f	Ldkm$f;	a	INSTANCE
	f	Larq;	e	CODEC
	f	[Ldkm$f;	f	$VALUES
c	dkm$g	net/minecraft/world/level/levelgen/DensityFunctions$Clamp
	m	()D	a	minValue
	m	(D)D	a	transform
		p	1		density
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ldkl$f;)Ldkl;	a	mapAll
		p	1		visitor
	m	()Ldkl;	aw_	input
	m	()D	b	maxValue
	m	()Larq;	c	codec
	f	Larq;	a	CODEC
	f	Ldkl;	e	input
	f	D	f	minValue
	f	D	g	maxValue
	f	Lcom/mojang/serialization/MapCodec;	h	DATA_CODEC
c	dkm$h	net/minecraft/world/level/levelgen/DensityFunctions$Constant
	m	()D	a	minValue
	m	(Ldkl$b;)D	a	compute
		p	1		pos
	m	([DLdkl$a;)V	a	fillArray
		p	1		densities
		p	2		applier
	m	()D	b	maxValue
	m	()Larq;	c	codec
	m	()D	j	value
	f	D	a	value
	f	Larq;	e	CODEC
	f	Ldkm$h;	f	ZERO
c	dkm$i	net/minecraft/world/level/levelgen/DensityFunctions$EndIslandDensityFunction
	m	(J)V	<init>	<init>
		p	1		seed
	m	()D	a	minValue
	m	(Ldkl$b;)D	a	compute
		p	1		pos
	m	(Ldzs;II)F	a	getHeightValue
		p	0		sampler
		p	1		x
		p	2		z
	m	()D	b	maxValue
	m	()Larq;	c	codec
	f	Larq;	a	CODEC
	f	F	e	ISLAND_THRESHOLD
	f	Ldzs;	f	islandNoise
c	dkm$j	net/minecraft/world/level/levelgen/DensityFunctions$HolderHolder
	m	()D	a	minValue
	m	(Ldkl$b;)D	a	compute
		p	1		pos
	m	(Ldkl$f;)Ldkl;	a	mapAll
		p	1		visitor
	m	([DLdkl$a;)V	a	fillArray
		p	1		densities
		p	2		applier
	m	()D	b	maxValue
	m	()Larq;	c	codec
	m	()Lhe;	j	function
	f	Lhe;	a	function
c	dkm$k	net/minecraft/world/level/levelgen/DensityFunctions$Mapped
	m	()D	a	minValue
	m	(D)D	a	transform
		p	1		density
	m	(Ldkl$f;)Ldkl;	a	mapAll
		p	1		visitor
	m	(Ldkm$k$a;D)D	a	transform
		p	0		type
		p	1		density
	m	(Ldkm$k$a;Ldkl;)Ldkm$k;	a	create
		p	0		type
		p	1		input
	m	()Ldkl;	aw_	input
	m	()D	b	maxValue
	m	(Ldkl$f;)Ldkm$k;	b	mapAll
	m	()Larq;	c	codec
	m	()Ldkm$k$a;	k	type
	f	Ldkm$k$a;	a	type
	f	Ldkl;	e	input
	f	D	f	minValue
	f	D	g	maxValue
c	dkm$k$a	net/minecraft/world/level/levelgen/DensityFunctions$Mapped$Type
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()[Ldkm$k$a;	a	$values
	m	(Ldkl;)Ldkm$k;	a	lambda$new$0
		p	1		input
	m	()Ljava/lang/String;	c	getSerializedName
	f	Ldkm$k$a;	a	ABS
	f	Ldkm$k$a;	b	SQUARE
	f	Ldkm$k$a;	c	CUBE
	f	Ldkm$k$a;	d	HALF_NEGATIVE
	f	Ldkm$k$a;	e	QUARTER_NEGATIVE
	f	Ldkm$k$a;	f	SQUEEZE
	f	Ljava/lang/String;	g	name
	f	Larq;	h	codec
	f	[Ldkm$k$a;	i	$VALUES
c	dkm$l	net/minecraft/world/level/levelgen/DensityFunctions$Marker
	m	()D	a	minValue
	m	(Ldkl$b;)D	a	compute
		p	1		pos
	m	([DLdkl$a;)V	a	fillArray
		p	1		densities
		p	2		applier
	m	()D	b	maxValue
	m	()Ldkm$l$a;	j	type
	m	()Ldkl;	k	wrapped
	f	Ldkm$l$a;	a	type
	f	Ldkl;	e	wrapped
c	dkm$l$a	net/minecraft/world/level/levelgen/DensityFunctions$Marker$Type
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()[Ldkm$l$a;	a	$values
	m	(Ldkl;)Ldkm$m;	a	lambda$new$0
	m	()Ljava/lang/String;	c	getSerializedName
	f	Ldkm$l$a;	a	Interpolated
	f	Ldkm$l$a;	b	FlatCache
	f	Ldkm$l$a;	c	Cache2D
	f	Ldkm$l$a;	d	CacheOnce
	f	Ldkm$l$a;	e	CacheAllInCell
	f	Ljava/lang/String;	f	name
	f	Larq;	g	codec
	f	[Ldkm$l$a;	h	$VALUES
c	dkm$m	net/minecraft/world/level/levelgen/DensityFunctions$MarkerOrMarked
	m	(Ldkl$f;)Ldkl;	a	mapAll
		p	1		visitor
	m	()Larq;	c	codec
	m	()Ldkm$l$a;	j	type
	m	()Ldkl;	k	wrapped
c	dkm$n	net/minecraft/world/level/levelgen/DensityFunctions$MulOrAdd
	m	()D	a	minValue
	m	(D)D	a	transform
		p	1		density
	m	(Ldkl$f;)Ldkl;	a	mapAll
		p	1		visitor
	m	()Ldkl;	aw_	input
	m	()D	b	maxValue
	m	()Ldkm$y$a;	j	type
	m	()Ldkl;	k	argument1
	m	()Ldkl;	l	argument2
	m	()Ldkm$n$a;	m	specificType
	m	()D	n	argument
	f	Ldkm$n$a;	e	specificType
	f	Ldkl;	f	input
	f	D	g	minValue
	f	D	h	maxValue
	f	D	i	argument
c	dkm$n$a	net/minecraft/world/level/levelgen/DensityFunctions$MulOrAdd$Type
	m	()[Ldkm$n$a;	a	$values
	f	Ldkm$n$a;	a	MUL
	f	Ldkm$n$a;	b	ADD
	f	[Ldkm$n$a;	c	$VALUES
c	dkm$o	net/minecraft/world/level/levelgen/DensityFunctions$Noise
	m	()D	a	minValue
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ldkl$b;)D	a	compute
		p	1		pos
	m	(Ldkl$f;)Ldkl;	a	mapAll
		p	1		visitor
	m	([DLdkl$a;)V	a	fillArray
		p	1		densities
		p	2		applier
	m	()D	b	maxValue
	m	()Larq;	c	codec
	m	()Ldkl$c;	j	noise
	m	()D	k	xzScale
	m	()D	l	yScale
	f	Lcom/mojang/serialization/MapCodec;	a	DATA_CODEC
	f	Larq;	e	CODEC
	f	Ldkl$c;	f	noise
	f	D	g	xzScale
	f	D	h	yScale
c	dkm$p	net/minecraft/world/level/levelgen/DensityFunctions$PureTransformer
	m	(D)D	a	transform
		p	1		density
	m	(Ldkl$b;)D	a	compute
		p	1		pos
	m	([DLdkl$a;)V	a	fillArray
		p	1		densities
		p	2		applier
	m	()Ldkl;	aw_	input
c	dkm$q	net/minecraft/world/level/levelgen/DensityFunctions$RangeChoice
	m	()D	a	minValue
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ldkl$b;)D	a	compute
		p	1		pos
	m	(Ldkl$f;)Ldkl;	a	mapAll
		p	1		visitor
	m	([DLdkl$a;)V	a	fillArray
		p	1		densities
		p	2		applier
	m	()D	b	maxValue
	m	()Larq;	c	codec
	m	()Ldkl;	j	input
	m	()D	k	minInclusive
	m	()D	l	maxExclusive
	m	()Ldkl;	m	whenInRange
	m	()Ldkl;	n	whenOutOfRange
	f	Lcom/mojang/serialization/MapCodec;	a	DATA_CODEC
	f	Larq;	e	CODEC
	f	Ldkl;	f	input
	f	D	g	minInclusive
	f	D	h	maxExclusive
	f	Ldkl;	i	whenInRange
	f	Ldkl;	j	whenOutOfRange
c	dkm$r	net/minecraft/world/level/levelgen/DensityFunctions$Shift
	m	(Ldkl$b;)D	a	compute
		p	1		pos
	m	(Ldkl$f;)Ldkl;	a	mapAll
		p	1		visitor
	m	()Larq;	c	codec
	m	()Ldkl$c;	j	offsetNoise
	f	Ldkl$c;	a	offsetNoise
	f	Larq;	e	CODEC
c	dkm$s	net/minecraft/world/level/levelgen/DensityFunctions$ShiftA
	m	(Ldkl$b;)D	a	compute
		p	1		pos
	m	(Ldkl$f;)Ldkl;	a	mapAll
		p	1		visitor
	m	()Larq;	c	codec
	m	()Ldkl$c;	j	offsetNoise
	f	Ldkl$c;	a	offsetNoise
	f	Larq;	e	CODEC
c	dkm$t	net/minecraft/world/level/levelgen/DensityFunctions$ShiftB
	m	(Ldkl$b;)D	a	compute
		p	1		pos
	m	(Ldkl$f;)Ldkl;	a	mapAll
		p	1		visitor
	m	()Larq;	c	codec
	m	()Ldkl$c;	j	offsetNoise
	f	Ldkl$c;	a	offsetNoise
	f	Larq;	e	CODEC
c	dkm$u	net/minecraft/world/level/levelgen/DensityFunctions$ShiftNoise
	m	()D	a	minValue
	m	(DDD)D	a	compute
		p	1		x
		p	3		y
		p	5		z
	m	([DLdkl$a;)V	a	fillArray
		p	1		densities
		p	2		applier
	m	()D	b	maxValue
	m	()Ldkl$c;	j	offsetNoise
c	dkm$v	net/minecraft/world/level/levelgen/DensityFunctions$ShiftedNoise
	m	()D	a	minValue
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ldkl$b;)D	a	compute
		p	1		pos
	m	(Ldkl$f;)Ldkl;	a	mapAll
		p	1		visitor
	m	([DLdkl$a;)V	a	fillArray
		p	1		densities
		p	2		applier
	m	()D	b	maxValue
	m	()Larq;	c	codec
	m	()Ldkl;	j	shiftX
	m	()Ldkl;	k	shiftY
	m	()Ldkl;	l	shiftZ
	m	()D	m	xzScale
	m	()D	n	yScale
	m	()Ldkl$c;	o	noise
	f	Larq;	a	CODEC
	f	Ldkl;	e	shiftX
	f	Ldkl;	f	shiftY
	f	Ldkl;	g	shiftZ
	f	D	h	xzScale
	f	D	i	yScale
	f	Ldkl$c;	j	noise
	f	Lcom/mojang/serialization/MapCodec;	k	DATA_CODEC
c	dkm$w	net/minecraft/world/level/levelgen/DensityFunctions$Spline
	m	()D	a	minValue
	m	(Ldkl$b;)D	a	compute
		p	1		pos
	m	(Ldkl$f;)Ldkl;	a	mapAll
		p	1		visitor
	m	(Ldkl$f;Ldkm$w$a;)Ldkm$w$a;	a	lambda$mapAll$0
		p	1		densityFunctionWrapper
	m	([DLdkl$a;)V	a	fillArray
		p	1		densities
		p	2		applier
	m	()D	b	maxValue
	m	()Larq;	c	codec
	m	()Lara;	j	spline
	f	Larq;	a	CODEC
	f	Lara;	e	spline
	f	Lcom/mojang/serialization/Codec;	f	SPLINE_CODEC
	f	Lcom/mojang/serialization/MapCodec;	g	DATA_CODEC
c	dkm$w$a	net/minecraft/world/level/levelgen/DensityFunctions$Spline$Coordinate
	m	()Lhe;	a	function
	m	(Ldkl$f;)Ldkm$w$a;	a	mapAll
		p	1		visitor
	m	(Ldkm$w$b;)F	a	apply
		p	1		x
	m	(Ljava/lang/Object;)F	a	apply
		p	1		x
	m	()F	b	minValue
	m	()F	c	maxValue
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lhe;	c	function
c	dkm$w$b	net/minecraft/world/level/levelgen/DensityFunctions$Spline$Point
	m	()Ldkl$b;	a	context
	f	Ldkl$b;	a	context
c	dkm$x	net/minecraft/world/level/levelgen/DensityFunctions$TransformerWithContext
	m	(Ldkl$b;)D	a	compute
		p	1		pos
	m	(Ldkl$b;D)D	a	transform
		p	1		pos
		p	2		density
	m	([DLdkl$a;)V	a	fillArray
		p	1		densities
		p	2		applier
	m	()Ldkl;	j	input
c	dkm$y	net/minecraft/world/level/levelgen/DensityFunctions$TwoArgumentSimpleFunction
	m	(Ldkm$y$a;Ldkl;Ldkl;)Ldkm$y;	a	create
		p	0		type
		p	1		argument1
		p	2		argument2
	m	()Larq;	c	codec
	m	()Ldkm$y$a;	j	type
	m	()Ldkl;	k	argument1
	m	()Ldkl;	l	argument2
	f	Lorg/slf4j/Logger;	a	LOGGER
c	dkm$y$a	net/minecraft/world/level/levelgen/DensityFunctions$TwoArgumentSimpleFunction$Type
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()[Ldkm$y$a;	a	$values
	m	(Ldkl;Ldkl;)Ldkm$y;	a	lambda$new$0
	m	()Ljava/lang/String;	c	getSerializedName
	f	Ldkm$y$a;	a	ADD
	f	Ldkm$y$a;	b	MUL
	f	Ldkm$y$a;	c	MIN
	f	Ldkm$y$a;	d	MAX
	f	Larq;	e	codec
	f	Ljava/lang/String;	f	name
	f	[Ldkm$y$a;	g	$VALUES
c	dkm$z	net/minecraft/world/level/levelgen/DensityFunctions$WeirdScaledSampler
	m	()D	a	minValue
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ldkl$b;D)D	a	transform
		p	1		pos
		p	2		density
	m	(Ldkl$f;)Ldkl;	a	mapAll
		p	1		visitor
	m	()D	b	maxValue
	m	()Larq;	c	codec
	m	()Ldkl;	j	input
	m	()Ldkl$c;	k	noise
	m	()Ldkm$z$a;	l	rarityValueMapper
	f	Larq;	a	CODEC
	f	Ldkl;	e	input
	f	Ldkl$c;	f	noise
	f	Ldkm$z$a;	g	rarityValueMapper
	f	Lcom/mojang/serialization/MapCodec;	h	DATA_CODEC
c	dkm$z$a	net/minecraft/world/level/levelgen/DensityFunctions$WeirdScaledSampler$RarityValueMapper
	m	(Ljava/lang/String;ILjava/lang/String;Lit/unimi/dsi/fastutil/doubles/Double2DoubleFunction;D)V	<init>	<init>
		p	3		name
		p	4		scaleFunction
		p	5		maxValueMultiplier
	m	()[Ldkm$z$a;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Ldkm$z$a;	a	TYPE1
	f	Ldkm$z$a;	b	TYPE2
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Ljava/lang/String;	d	name
	f	Lit/unimi/dsi/fastutil/doubles/Double2DoubleFunction;	e	mapper
	f	D	f	maxRarity
	f	[Ldkm$z$a;	g	$VALUES
c	dkm$aa	net/minecraft/world/level/levelgen/DensityFunctions$YClampedGradient
	m	()D	a	minValue
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ldkl$b;)D	a	compute
		p	1		pos
	m	()D	b	maxValue
	m	()Larq;	c	codec
	m	()I	j	fromY
	m	()I	k	toY
	m	()D	l	fromValue
	m	()D	m	toValue
	f	Larq;	a	CODEC
	f	I	e	fromY
	f	I	f	toY
	f	D	g	fromValue
	f	D	h	toValue
	f	Lcom/mojang/serialization/MapCodec;	i	DATA_CODEC
c	dkn	net/minecraft/world/level/levelgen/FlatLevelSource
	m	(Ldtl;)V	<init>	<init>
		p	1		config
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(I)[Ldfj;	a	lambda$getBaseColumn$4
	m	(IILcpx;Ldlg;)Lcqh;	a	getBaseColumn
		p	1		x
		p	2		z
		p	3		world
		p	4		noiseConfig
	m	(IILdks$a;Lcpx;Ldlg;)I	a	getBaseHeight
		p	1		x
		p	2		z
		p	3		heightmap
		p	4		world
		p	5		noiseConfig
	m	(Lakx;)V	a	spawnOriginalMobs
		p	1		region
	m	(Lakx;JLdlg;Lcqv;Lcqn;Ldhf;Ldko$a;)V	a	applyCarvers
		p	1		chunkRegion
		p	2		seed
		p	4		noiseConfig
		p	5		biomeAccess
		p	6		structureAccessor
		p	7		chunk
		p	8		carverStep
	m	(Lakx;Lcqn;Ldlg;Ldhf;)V	a	buildSurface
		p	1		region
		p	2		structures
		p	3		noiseConfig
		p	4		chunk
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lcpx;)I	a	getSpawnHeight
		p	1		world
	m	(Ldfj;)Ldfj;	a	lambda$getBaseColumn$3
		p	0		state
	m	(Lhe$c;)Lhe;	a	lambda$createState$1
	m	(Lhg;)Ljava/util/stream/Stream;	a	lambda$createState$2
	m	(Lhg;Ldlg;J)Ldhh;	a	createState
		p	1		structureSetRegistry
		p	2		noiseConfig
		p	3		seed
	m	(Ljava/util/List;Ldlg;Lgw;)V	a	addDebugScreenInfo
		p	1		text
		p	2		noiseConfig
		p	3		pos
	m	(Ljava/util/concurrent/Executor;Ldlu;Ldlg;Lcqn;Ldhf;)Ljava/util/concurrent/CompletableFuture;	a	fillFromNoise
		p	1		executor
		p	2		blender
		p	3		noiseConfig
		p	4		structureAccessor
		p	5		chunk
	m	()I	d	getGenDepth
	m	()I	e	getSeaLevel
	m	()I	f	getMinY
	m	()Ldtl;	g	settings
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Ldtl;	d	settings
c	dko	net/minecraft/world/level/levelgen/GenerationStep
c	dko$a	net/minecraft/world/level/levelgen/GenerationStep$Carving
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()Ljava/lang/String;	a	getName
	m	()[Ldko$a;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Ldko$a;	a	AIR
	f	Ldko$a;	b	LIQUID
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Ljava/lang/String;	d	name
	f	[Ldko$a;	e	$VALUES
c	dko$b	net/minecraft/world/level/levelgen/GenerationStep$Decoration
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()Ljava/lang/String;	a	getName
	m	()[Ldko$b;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Ldko$b;	a	RAW_GENERATION
	f	Ldko$b;	b	LAKES
	f	Ldko$b;	c	LOCAL_MODIFICATIONS
	f	Ldko$b;	d	UNDERGROUND_STRUCTURES
	f	Ldko$b;	e	SURFACE_STRUCTURES
	f	Ldko$b;	f	STRONGHOLDS
	f	Ldko$b;	g	UNDERGROUND_ORES
	f	Ldko$b;	h	UNDERGROUND_DECORATION
	f	Ldko$b;	i	FLUID_SPRINGS
	f	Ldko$b;	j	VEGETAL_DECORATION
	f	Ldko$b;	k	TOP_LAYER_MODIFICATION
	f	Lcom/mojang/serialization/Codec;	l	CODEC
	f	Ljava/lang/String;	m	name
	f	[Ldko$b;	n	$VALUES
c	dkp	net/minecraft/world/level/levelgen/GeodeBlockSettings
	m	(Ldsb;Ldsb;Ldsb;Ldsb;Ldsb;Ljava/util/List;Laqh;Laqh;)V	<init>	<init>
		p	1		fillingProvider
		p	2		innerLayerProvider
		p	3		alternateInnerLayerProvider
		p	4		middleLayerProvider
		p	5		outerLayerProvider
		p	6		innerBlocks
		p	7		cannotReplace
		p	8		invalidBlocks
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$8
		p	0		instance
	m	(Ldkp;)Laqh;	a	lambda$static$7
		p	0		config
	m	(Ldkp;)Laqh;	b	lambda$static$6
		p	0		config
	m	(Ldkp;)Ljava/util/List;	c	lambda$static$5
		p	0		config
	m	(Ldkp;)Ldsb;	d	lambda$static$4
		p	0		config
	m	(Ldkp;)Ldsb;	e	lambda$static$3
		p	0		config
	m	(Ldkp;)Ldsb;	f	lambda$static$2
		p	0		config
	m	(Ldkp;)Ldsb;	g	lambda$static$1
		p	0		config
	m	(Ldkp;)Ldsb;	h	lambda$static$0
		p	0		config
	f	Ldsb;	a	fillingProvider
	f	Ldsb;	b	innerLayerProvider
	f	Ldsb;	c	alternateInnerLayerProvider
	f	Ldsb;	d	middleLayerProvider
	f	Ldsb;	e	outerLayerProvider
	f	Ljava/util/List;	f	innerPlacements
	f	Laqh;	g	cannotReplace
	f	Laqh;	h	invalidBlocks
	f	Lcom/mojang/serialization/Codec;	i	CODEC
c	dkq	net/minecraft/world/level/levelgen/GeodeCrackSettings
	m	(DDI)V	<init>	<init>
		p	1		generateCrackChance
		p	3		baseCrackSize
		p	5		crackPointOffset
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	(Ldkq;)Ljava/lang/Integer;	a	lambda$static$2
		p	0		config
	m	(Ldkq;)Ljava/lang/Double;	b	lambda$static$1
		p	0		config
	m	(Ldkq;)Ljava/lang/Double;	c	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	D	b	generateCrackChance
	f	D	c	baseCrackSize
	f	I	d	crackPointOffset
c	dkr	net/minecraft/world/level/levelgen/GeodeLayerSettings
	m	(DDDD)V	<init>	<init>
		p	1		filling
		p	3		innerLayer
		p	5		middleLayer
		p	7		outerLayer
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
		p	0		instance
	m	(Ldkr;)Ljava/lang/Double;	a	lambda$static$3
		p	0		config
	m	(Ldkr;)Ljava/lang/Double;	b	lambda$static$2
		p	0		config
	m	(Ldkr;)Ljava/lang/Double;	c	lambda$static$1
		p	0		config
	m	(Ldkr;)Ljava/lang/Double;	d	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	D	b	filling
	f	D	c	innerLayer
	f	D	d	middleLayer
	f	D	e	outerLayer
	f	Lcom/mojang/serialization/Codec;	f	LAYER_RANGE
c	dks	net/minecraft/world/level/levelgen/Heightmap
	m	(Ldhf;Ldks$a;)V	<init>	<init>
		p	1		chunk
		p	2		type
	m	()[J	a	getRawData
	m	(I)I	a	getFirstAvailable
		p	1		index
	m	(II)I	a	getFirstAvailable
		p	1		x
		p	2		z
	m	(III)V	a	setHeight
		p	1		x
		p	2		z
		p	3		height
	m	(IIILdfj;)Z	a	update
		p	1		x
		p	2		y
		p	3		z
		p	4		state
	m	(Ldfj;)Z	a	lambda$static$0
		p	0		state
	m	(Ldhf;Ldks$a;[J)V	a	setRawData
		p	1		chunk
		p	2		type
		p	3		values
	m	(Ldhf;Ljava/util/Set;)V	a	primeHeightmaps
		p	0		chunk
		p	1		types
	m	(II)I	b	getHighestTaken
		p	1		x
		p	2		z
	m	(II)I	c	getIndex
		p	0		x
		p	1		z
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/function/Predicate;	b	NOT_AIR
	f	Ljava/util/function/Predicate;	c	MATERIAL_MOTION_BLOCKING
	f	Laqp;	d	data
	f	Ljava/util/function/Predicate;	e	isOpaque
	f	Ldhf;	f	chunk
c	dks$a	net/minecraft/world/level/levelgen/Heightmap$Types
	m	(Ljava/lang/String;ILjava/lang/String;Ldks$b;Ljava/util/function/Predicate;)V	<init>	<init>
		p	3		name
		p	4		purpose
		p	5		blockPredicate
	m	()Ljava/lang/String;	a	getSerializationKey
	m	(Ldfj;)Z	a	lambda$static$1
		p	0		state
	m	()Z	b	sendToClient
	m	(Ldfj;)Z	b	lambda$static$0
		p	0		state
	m	()Ljava/lang/String;	c	getSerializedName
	m	()Z	d	keepAfterWorldgen
	m	()Ljava/util/function/Predicate;	e	isOpaque
	m	()[Ldks$a;	f	$values
	f	Ldks$a;	a	WORLD_SURFACE_WG
	f	Ldks$a;	b	WORLD_SURFACE
	f	Ldks$a;	c	OCEAN_FLOOR_WG
	f	Ldks$a;	d	OCEAN_FLOOR
	f	Ldks$a;	e	MOTION_BLOCKING
	f	Ldks$a;	f	MOTION_BLOCKING_NO_LEAVES
	f	Lcom/mojang/serialization/Codec;	g	CODEC
	f	Ljava/lang/String;	h	serializationKey
	f	Ldks$b;	i	usage
	f	Ljava/util/function/Predicate;	j	isOpaque
	f	[Ldks$a;	k	$VALUES
c	dks$b	net/minecraft/world/level/levelgen/Heightmap$Usage
	m	()[Ldks$b;	a	$values
	f	Ldks$b;	a	WORLDGEN
	f	Ldks$b;	b	LIVE_WORLD
	f	Ldks$b;	c	CLIENT
	f	[Ldks$b;	d	$VALUES
c	dkt	net/minecraft/world/level/levelgen/LegacyRandomSource
	m	(J)V	<init>	<init>
		p	1		seed
	m	(J)V	b	setSeed
		p	1		seed
	m	(I)I	c	next
		p	1		bits
	m	()Lasc;	d	fork
	m	()Ldlf;	e	forkPositional
	m	()D	k	nextGaussian
	f	I	d	MODULUS_BITS
	f	J	e	MODULUS_MASK
	f	J	f	MULTIPLIER
	f	J	g	INCREMENT
	f	Ljava/util/concurrent/atomic/AtomicLong;	h	seed
	f	Ldku;	i	gaussianSource
c	dkt$a	net/minecraft/world/level/levelgen/LegacyRandomSource$LegacyPositionalRandomFactory
	m	(J)V	<init>	<init>
		p	1		seed
	m	(III)Lasc;	a	at
		p	1		x
		p	2		y
		p	3		z
	m	(Ljava/lang/String;)Lasc;	a	fromHashOf
		p	1		seed
	m	(Ljava/lang/StringBuilder;)V	a	parityConfigString
		p	1		info
	f	J	a	seed
c	dku	net/minecraft/world/level/levelgen/MarsagliaPolarGaussian
	m	(Lasc;)V	<init>	<init>
		p	1		baseRandom
	m	()V	a	reset
	m	()D	b	nextGaussian
	f	Lasc;	a	randomSource
	f	D	b	nextNextGaussian
	f	Z	c	haveNextNextGaussian
c	dkv	net/minecraft/world/level/levelgen/NoiseBasedChunkGenerator
	m	(Lcqx;Lhe;)V	<init>	<init>
		p	1		biomeSource
		p	2		settings
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(IILcpx;Ldlg;)Lcqh;	a	getBaseColumn
		p	1		x
		p	2		z
		p	3		world
		p	4		noiseConfig
	m	(IILdks$a;Lcpx;Ldlg;)I	a	getBaseHeight
		p	1		x
		p	2		z
		p	3		heightmap
		p	4		world
		p	5		noiseConfig
	m	(Laev;)Z	a	stable
		p	1		settings
	m	(Lakx;)V	a	spawnOriginalMobs
		p	1		region
	m	(Lakx;JLdlg;Lcqv;Lcqn;Ldhf;Ldko$a;)V	a	applyCarvers
		p	1		chunkRegion
		p	2		seed
		p	4		noiseConfig
		p	5		biomeAccess
		p	6		structureAccessor
		p	7		chunk
		p	8		carverStep
	m	(Lakx;Lcqn;Ldlg;Ldhf;)V	a	buildSurface
		p	1		region
		p	2		structures
		p	3		noiseConfig
		p	4		chunk
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Lcpc;Ldlg;)Lcqu;	a	lambda$applyCarvers$10
	m	(Lcpx;Ldlg;IILorg/apache/commons/lang3/mutable/MutableObject;Ljava/util/function/Predicate;)Ljava/util/OptionalInt;	a	iterateNoiseColumn
		p	1		world
		p	2		noiseConfig
		p	3		x
		p	4		z
		p	5		columnSample
		p	6		stopPredicate
	m	(Lcqn;Lakx;Ldlg;Ldhf;)Ldkw;	a	lambda$applyCarvers$9
		p	4		chunkx
	m	(Lcqn;Ldlu;Ldlg;Ldhf;)Ldkw;	a	lambda$doFill$13
		p	4		chunkx
	m	(Ldhf;Lcqn;Ldlu;Ldlg;)Ldkw;	a	createNoiseChunk
		p	1		chunk
		p	2		world
		p	3		blender
		p	4		noiseConfig
	m	(Ldhf;Ldlp;Ldlg;Lcqn;Lcqv;Lhq;Ldlu;)V	a	buildSurface
		p	1		chunk
		p	2		heightContext
		p	3		noiseConfig
		p	4		structureAccessor
		p	5		biomeAccess
		p	6		biomeRegistry
		p	7		blender
	m	(Ldke$b;ILdke$b;Ldke$b;III)Ldke$b;	a	lambda$createFluidPicker$4
		p	4		x
		p	5		y
		p	6		z
	m	(Ldkv;)Lhe;	a	lambda$static$1
		p	0		generator
	m	(Ldkw;IIILdfj;)Ldfj;	a	debugPreliminarySurfaceLevel
		p	1		chunkNoiseSampler
		p	2		x
		p	3		y
		p	4		z
		p	5		state
	m	(Ldkx;)Ldke$a;	a	createFluidPicker
		p	0		settings
	m	(Ldlg;III)Lhe;	a	lambda$applyCarvers$8
		p	2		biomeX
		p	3		biomeY
		p	4		biomeZ
	m	(Ldlu;Lcqn;Ldlg;Ldhf;II)Ldhf;	a	doFill
		p	1		blender
		p	2		structureAccessor
		p	3		noiseConfig
		p	4		chunk
		p	5		minimumCellY
		p	6		cellHeight
	m	(Ldlu;Ldlg;Lcqn;Ldhf;)V	a	doCreateBiomes
		p	1		blender
		p	2		noiseConfig
		p	3		structureAccessor
		p	4		chunk
	m	(Ljava/util/List;Ldlg;Lgw;)V	a	addDebugScreenInfo
		p	1		text
		p	2		noiseConfig
		p	3		pos
	m	(Ljava/util/Set;Ldhf;Ljava/lang/Throwable;)V	a	lambda$fillFromNoise$12
	m	(Ljava/util/concurrent/Executor;Ldlg;Ldlu;Lcqn;Ldhf;)Ljava/util/concurrent/CompletableFuture;	a	createBiomes
		p	1		executor
		p	2		noiseConfig
		p	3		blender
		p	4		structureAccessor
		p	5		chunk
	m	(Ljava/util/concurrent/Executor;Ldlu;Ldlg;Lcqn;Ldhf;)Ljava/util/concurrent/CompletableFuture;	a	fillFromNoise
		p	1		executor
		p	2		blender
		p	3		noiseConfig
		p	4		structureAccessor
		p	5		chunk
	m	(Lcqn;Ldlu;Ldlg;Ldhf;)Ldkw;	b	lambda$buildSurface$7
		p	4		chunkx
	m	(Ldkv;)Lcqx;	b	lambda$static$0
		p	0		generator
	m	(Ldlu;Lcqn;Ldlg;Ldhf;II)Ldhf;	b	lambda$fillFromNoise$11
	m	(Ldlu;Ldlg;Lcqn;Ldhf;)Ldhf;	b	lambda$createBiomes$5
	m	(Lhe;)Ldke$a;	b	lambda$new$3
	m	(Lcqn;Ldlu;Ldlg;Ldhf;)Ldkw;	c	lambda$doCreateBiomes$6
		p	4		chunkx
	m	()I	d	getGenDepth
	m	()I	e	getSeaLevel
	m	()I	f	getMinY
	m	()Lhe;	g	generatorSettings
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Ldfj;	d	AIR
	f	Lhe;	e	settings
	f	Ljava/util/function/Supplier;	f	globalFluidPicker
c	dkw	net/minecraft/world/level/levelgen/NoiseChunk
	m	(ILdlg;IILdla;Ldkm$c;Ldkx;Ldke$a;Ldlu;)V	<init>	<init>
		p	1		horizontalCellCount
		p	2		noiseConfig
		p	3		startBlockX
		p	4		startBlockZ
		p	5		generationShapeConfig
		p	6		beardifying
		p	7		chunkGeneratorSettings
		p	8		fluidLevelSampler
		p	9		blender
	m	()I	a	blockX
	m	(DLdkw$i;)V	a	lambda$updateForZ$4
		p	2		interpolator
	m	(I)Ldkl$b;	a	forIndex
		p	1		index
	m	(ID)V	a	updateForY
		p	1		blockY
		p	2		deltaY
	m	(II)I	a	preliminarySurfaceLevel
		p	1		blockX
		p	2		blockZ
	m	(IILdkw$i;)V	a	lambda$selectCellYZ$1
		p	2		interpolator
	m	(J)I	a	computePreliminarySurfaceLevel
		p	1		columnPos
	m	(Ldhf;Ldlg;Ldkm$c;Ldkx;Ldke$a;Ldlu;)Ldkw;	a	forChunk
		p	0		chunk
		p	1		noiseConfig
		p	2		beardifying
		p	3		chunkGeneratorSettings
		p	4		fluidLevelSampler
		p	5		blender
	m	(Ldkl;)Ldkl;	a	wrap
		p	1		function
	m	(Ldkl;Ldkl$b;)Ldfj;	a	lambda$new$0
		p	2		pos
	m	(Ldky;Ljava/util/List;)Lcrc$f;	a	cachedClimateSampler
		p	1		noiseRouter
		p	2		spawnTarget
	m	(ZI)V	a	fillSlice
		p	1		start
		p	2		cellX
	m	([DLdkl;)V	a	fillAllDirectly
		p	1		densities
		p	2		densityFunction
	m	()I	b	blockY
	m	(DLdkw$i;)V	b	lambda$updateForX$3
		p	2		interpolator
	m	(I)V	b	advanceCellX
		p	1		cellX
	m	(ID)V	b	updateForX
		p	1		blockX
		p	2		deltaX
	m	(II)V	b	selectCellYZ
		p	1		cellY
		p	2		cellZ
	m	(Ldkl;)Ldkl;	b	wrapNew
		p	1		function
	m	()I	c	blockZ
	m	(DLdkw$i;)V	c	lambda$updateForY$2
		p	2		interpolator
	m	(I)Ldkw;	c	forIndex
	m	(ID)V	c	updateForZ
		p	1		blockZ
		p	2		deltaZ
	m	(II)Ldlu$a;	c	getOrComputeBlendingOutput
		p	1		blockX
		p	2		blockZ
	m	()Ldlu;	d	getBlender
	m	()Ldfj;	e	getInterpolatedState
	m	()V	f	initializeForFirstCellX
	m	()V	g	stopInterpolation
	m	()V	h	swapSlices
	m	()Ldke;	i	aquifer
	m	()I	j	cellWidth
	m	()I	k	cellHeight
	f	I	A	cellStartBlockX
	f	I	B	cellStartBlockY
	f	I	C	cellStartBlockZ
	f	I	D	inCellX
	f	I	E	inCellY
	f	I	F	inCellZ
	f	J	G	interpolationCounter
	f	J	H	arrayInterpolationCounter
	f	I	I	arrayIndex
	f	Ldkl$a;	J	sliceFillingContextProvider
	f	Ldla;	a	noiseSettings
	f	I	b	cellCountXZ
	f	I	c	cellCountY
	f	I	d	cellNoiseMinY
	f	I	e	firstCellX
	f	I	f	firstCellZ
	f	I	g	firstNoiseX
	f	I	h	firstNoiseZ
	f	Ljava/util/List;	i	interpolators
	f	Ljava/util/List;	j	cellCaches
	f	Ljava/util/Map;	k	wrapped
	f	Lit/unimi/dsi/fastutil/longs/Long2IntMap;	l	preliminarySurfaceLevel
	f	Ldke;	m	aquifer
	f	Ldkl;	n	initialDensityNoJaggedness
	f	Ldkw$c;	o	blockStateRule
	f	Ldlu;	p	blender
	f	Ldkw$g;	q	blendAlpha
	f	Ldkw$g;	r	blendOffset
	f	Ldkm$c;	s	beardifier
	f	J	t	lastBlendingDataPos
	f	Ldlu$a;	u	lastBlendingOutput
	f	I	v	noiseSizeXZ
	f	I	w	cellWidth
	f	I	x	cellHeight
	f	Z	y	interpolating
	f	Z	z	fillingCell
c	dkw$1	net/minecraft/world/level/levelgen/NoiseChunk$1
	m	(I)Ldkl$b;	a	forIndex
		p	1		index
	m	([DLdkl;)V	a	fillAllDirectly
		p	1		densities
		p	2		densityFunction
	f	Ldkw;	a	this$0
c	dkw$2	net/minecraft/world/level/levelgen/NoiseChunk$2
	f	[I	a	$SwitchMap$net$minecraft$world$level$levelgen$DensityFunctions$Marker$Type
c	dkw$a	net/minecraft/world/level/levelgen/NoiseChunk$BlendAlpha
	m	()D	a	minValue
	m	(Ldkl$b;)D	a	compute
		p	1		pos
	m	(Ldkl$f;)Ldkl;	a	mapAll
		p	1		visitor
	m	([DLdkl$a;)V	a	fillArray
		p	1		densities
		p	2		applier
	m	()D	b	maxValue
	m	()Larq;	c	codec
	m	()Ldkl;	k	wrapped
	f	Ldkw;	a	this$0
c	dkw$b	net/minecraft/world/level/levelgen/NoiseChunk$BlendOffset
	m	()D	a	minValue
	m	(Ldkl$b;)D	a	compute
		p	1		pos
	m	(Ldkl$f;)Ldkl;	a	mapAll
		p	1		visitor
	m	([DLdkl$a;)V	a	fillArray
		p	1		densities
		p	2		applier
	m	()D	b	maxValue
	m	()Larq;	c	codec
	m	()Ldkl;	k	wrapped
	f	Ldkw;	a	this$0
c	dkw$c	net/minecraft/world/level/levelgen/NoiseChunk$BlockStateFiller
	m	(Ldkl$b;)Ldfj;	calculate	calculate
		p	1		pos
c	dkw$d	net/minecraft/world/level/levelgen/NoiseChunk$Cache2D
	m	(Ldkl;)V	<init>	<init>
		p	1		delegate
	m	(Ldkl$b;)D	a	compute
		p	1		pos
	m	([DLdkl$a;)V	a	fillArray
		p	1		densities
		p	2		applier
	m	()Ldkm$l$a;	j	type
	m	()Ldkl;	k	wrapped
	f	Ldkl;	a	function
	f	J	e	lastPos2D
	f	D	f	lastValue
c	dkw$e	net/minecraft/world/level/levelgen/NoiseChunk$CacheAllInCell
	m	(Ldkw;Ldkl;)V	<init>	<init>
		p	2		delegate
	m	(Ldkl$b;)D	a	compute
		p	1		pos
	m	([DLdkl$a;)V	a	fillArray
		p	1		densities
		p	2		applier
	m	()Ldkm$l$a;	j	type
	m	()Ldkl;	k	wrapped
	f	Ldkw;	a	this$0
	f	Ldkl;	e	noiseFiller
	f	[D	f	values
c	dkw$f	net/minecraft/world/level/levelgen/NoiseChunk$CacheOnce
	m	(Ldkw;Ldkl;)V	<init>	<init>
		p	2		delegate
	m	(Ldkl$b;)D	a	compute
		p	1		pos
	m	([DLdkl$a;)V	a	fillArray
		p	1		densities
		p	2		applier
	m	()Ldkm$l$a;	j	type
	m	()Ldkl;	k	wrapped
	f	Ldkw;	a	this$0
	f	Ldkl;	e	function
	f	J	f	lastCounter
	f	J	g	lastArrayCounter
	f	D	h	lastValue
	f	[D	i	lastArray
c	dkw$g	net/minecraft/world/level/levelgen/NoiseChunk$FlatCache
	m	(Ldkw;Ldkl;Z)V	<init>	<init>
		p	2		delegate
		p	3		sample
	m	(Ldkl$b;)D	a	compute
		p	1		pos
	m	([DLdkl$a;)V	a	fillArray
		p	1		densities
		p	2		applier
	m	()Ldkm$l$a;	j	type
	m	()Ldkl;	k	wrapped
	f	Ldkw;	a	this$0
	f	Ldkl;	e	noiseFiller
	f	[[D	f	values
c	dkw$h	net/minecraft/world/level/levelgen/NoiseChunk$NoiseChunkDensityFunction
	m	()D	a	minValue
	m	()D	b	maxValue
	m	()Ldkl;	k	wrapped
c	dkw$i	net/minecraft/world/level/levelgen/NoiseChunk$NoiseInterpolator
	m	(Ldkw;Ldkl;)V	<init>	<init>
		p	2		delegate
	m	(D)V	a	updateForY
		p	1		deltaY
	m	(II)[[D	a	allocateSlice
		p	1		sizeZ
		p	2		sizeX
	m	(Ldkl$b;)D	a	compute
		p	1		pos
	m	([DLdkl$a;)V	a	fillArray
		p	1		densities
		p	2		applier
	m	(D)V	b	updateForX
		p	1		deltaX
	m	(II)V	b	selectCellYZ
		p	1		cellY
		p	2		cellZ
	m	(D)V	c	updateForZ
		p	1		deltaZ
	m	()Ldkm$l$a;	j	type
	m	()Ldkl;	k	wrapped
	m	()V	l	swapSlices
	f	Ldkw;	a	this$0
	f	[[D	e	slice0
	f	[[D	f	slice1
	f	Ldkl;	g	noiseFiller
	f	D	h	noise000
	f	D	i	noise001
	f	D	j	noise100
	f	D	k	noise101
	f	D	l	noise010
	f	D	m	noise011
	f	D	n	noise110
	f	D	o	noise111
	f	D	p	valueXZ00
	f	D	q	valueXZ10
	f	D	r	valueXZ01
	f	D	s	valueXZ11
	f	D	t	valueZ0
	f	D	u	valueZ1
	f	D	v	value
c	dkx	net/minecraft/world/level/levelgen/NoiseGeneratorSettings
	m	(Ldla;Ldfj;Ldfj;Ldky;Ldlj$o;Ljava/util/List;IZZZZ)V	<init>	<init>
		p	5		surfaceRule
	m	()Z	a	disableMobGeneration
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lnr;)V	a	bootstrap
		p	0		chunkGenerationSettingsRegisterable
	m	(Lnr;ZZ)Ldkx;	a	overworld
		p	0		registerable
		p	1		amplified
		p	2		largeBiomes
	m	()Z	b	isAquifersEnabled
	m	(Lnr;)Ldkx;	b	end
		p	0		registerable
	m	()Z	c	oreVeinsEnabled
	m	(Lnr;)Ldkx;	c	nether
		p	0		registerable
	m	()Ldlr$a;	d	getRandomSource
	m	(Lnr;)Ldkx;	d	caves
		p	0		registerable
	m	()Ldkx;	e	dummy
	m	(Lnr;)Ldkx;	e	floatingIslands
		p	0		registerable
	m	()Ldla;	f	noiseSettings
	m	()Ldfj;	g	defaultBlock
	m	()Ldfj;	h	defaultFluid
	m	()Ldky;	i	noiseRouter
	m	()Ldlj$o;	j	surfaceRule
	m	()Ljava/util/List;	k	spawnTarget
	m	()I	l	seaLevel
	m	()Z	m	aquifersEnabled
	m	()Z	n	useLegacyRandomSource
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Laev;	c	OVERWORLD
	f	Laev;	d	LARGE_BIOMES
	f	Laev;	e	AMPLIFIED
	f	Laev;	f	NETHER
	f	Laev;	g	END
	f	Laev;	h	CAVES
	f	Laev;	i	FLOATING_ISLANDS
	f	Ldla;	j	noiseSettings
	f	Ldfj;	k	defaultBlock
	f	Ldfj;	l	defaultFluid
	f	Ldky;	m	noiseRouter
	f	Ldlj$o;	n	surfaceRule
	f	Ljava/util/List;	o	spawnTarget
	f	I	p	seaLevel
	f	Z	q	disableMobGeneration
	f	Z	r	aquifersEnabled
	f	Z	s	oreVeinsEnabled
	f	Z	t	useLegacyRandomSource
c	dky	net/minecraft/world/level/levelgen/NoiseRouter
	m	()Ldkl;	a	barrierNoise
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	(Ldkl$f;)Ldky;	a	mapAll
		p	1		visitor
	m	(Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/serialization/codecs/RecordCodecBuilder;	a	field
		p	0		name
		p	1		getter
	m	()Ldkl;	b	fluidLevelFloodednessNoise
	m	()Ldkl;	c	fluidLevelSpreadNoise
	m	()Ldkl;	d	lavaNoise
	m	()Ldkl;	e	temperature
	m	()Ldkl;	f	vegetation
	m	()Ldkl;	g	continents
	m	()Ldkl;	h	erosion
	m	()Ldkl;	i	depth
	m	()Ldkl;	j	ridges
	m	()Ldkl;	k	initialDensityWithoutJaggedness
	m	()Ldkl;	l	finalDensity
	m	()Ldkl;	m	veinToggle
	m	()Ldkl;	n	veinRidged
	m	()Ldkl;	o	veinGap
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldkl;	b	barrierNoise
	f	Ldkl;	c	fluidLevelFloodednessNoise
	f	Ldkl;	d	fluidLevelSpreadNoise
	f	Ldkl;	e	lavaNoise
	f	Ldkl;	f	temperature
	f	Ldkl;	g	vegetation
	f	Ldkl;	h	continents
	f	Ldkl;	i	erosion
	f	Ldkl;	j	depth
	f	Ldkl;	k	ridges
	f	Ldkl;	l	initialDensityWithoutJaggedness
	f	Ldkl;	m	finalDensity
	f	Ldkl;	n	veinToggle
	f	Ldkl;	o	veinRidged
	f	Ldkl;	p	veinGap
c	dkz	net/minecraft/world/level/levelgen/NoiseRouterData
	m	()Ldky;	a	none
	m	(F)F	a	peaksAndValleys
		p	0		weirdness
	m	(Ldkl;)Ldkl;	a	peaksAndValleys
		p	0		input
	m	(Ldkl;II)Ldkl;	a	slideEndLike
		p	0		function
		p	1		minY
		p	2		maxY
	m	(Ldkl;IIIIDIID)Ldkl;	a	slide
		p	0		density
		p	1		minY
		p	2		maxY
		p	3		topRelativeMinY
		p	4		topRelativeMaxY
		p	5		topDensity
		p	7		bottomRelativeMinY
		p	8		bottomRelativeMaxY
		p	9		bottomDensity
	m	(Ldkl;Ldkl;)Ldkl;	a	splineWithBlending
		p	0		function
		p	1		blendOffset
	m	(Ldkl;Ldkl;III)Ldkl;	a	yLimitedInterpolatable
		p	0		y
		p	1		whenInRange
		p	2		minInclusive
		p	3		maxInclusive
		p	4		whenOutOfRange
	m	(Ldlc$a;)I	a	lambda$overworld$1
		p	0		veinType
	m	(Lhf;)Ldky;	a	end
		p	0		densityFunctionLookup
	m	(Lhf;II)Ldkl;	a	slideNetherLike
		p	0		densityFunctionLookup
		p	1		minY
		p	2		maxY
	m	(Lhf;Laev;)Ldkl;	a	getFunction
		p	0		densityFunctionRegisterable
		p	1		key
	m	(Lhf;Lhf;)Ldky;	a	nether
		p	0		densityFunctionLookup
		p	1		noiseParametersLookup
	m	(Lhf;Lhf;Ldkl;)Ldkl;	a	underground
		p	0		densityFunctionLookup
		p	1		noiseParametersLookup
		p	2		slopedCheese
	m	(Lhf;Lhf;ZZ)Ldky;	a	overworld
		p	0		densityFunctionLookup
		p	1		noiseParametersLookup
		p	2		largeBiomes
		p	3		amplified
	m	(Ljava/lang/String;)Laev;	a	createKey
		p	0		id
	m	(Lnr;)Lhe;	a	bootstrap
		p	0		densityFunctionRegisterable
	m	(Lnr;Laev;Ldkl;)Ldkl;	a	registerAndWrap
		p	0		densityFunctionRegisterable
		p	1		key
		p	2		densityFunction
	m	(Lnr;Lhf;Ldkl;Lhe;Lhe;Laev;Laev;Laev;Laev;Laev;Z)V	a	registerTerrainNoises
		p	0		densityFunctionRegisterable
		p	1		densityFunctionLookup
		p	2		jaggedNoise
		p	3		continents
		p	4		erosion
		p	5		offsetKey
		p	6		factorKey
		p	7		jaggednessKey
		p	8		depthKey
		p	9		slopedCheeseKey
		p	10		amplified
	m	(ZLdkl;)Ldkl;	a	slideOverworld
		p	0		amplified
		p	1		density
	m	(Ldkl;)Ldkl;	b	postProcess
		p	0		density
	m	(Ldkl;Ldkl;)Ldkl;	b	noiseGradientDensity
		p	0		factor
		p	1		depth
	m	(Ldlc$a;)I	b	lambda$overworld$0
		p	0		veinType
	m	(Lhf;)Ldkl;	b	spaghettiRoughnessFunction
		p	0		noiseParametersLookup
	m	(Lhf;Lhf;)Ldky;	b	caves
		p	0		densityFunctionLookup
		p	1		noiseParametersLookup
	m	(Lhf;Lhf;Ldkl;)Ldky;	b	noNewCaves
		p	0		densityFunctionLookup
		p	1		noiseParametersLookup
		p	2		density
	m	(Ldkl;)Ldkl;	c	slideEnd
		p	0		slopedCheese
	m	(Lhf;)Ldkl;	c	pillars
		p	0		noiseParametersLookup
	m	(Lhf;Lhf;)Ldky;	c	floatingIslands
		p	0		densityFunctionLookup
		p	1		noiseParametersLookup
	m	(Lhf;Lhf;)Ldkl;	d	entrances
		p	0		densityFunctionLookup
		p	1		noiseParametersLookup
	m	(Lhf;Lhf;)Ldkl;	e	noodle
		p	0		densityFunctionLookup
		p	1		noiseParametersLookup
	m	(Lhf;Lhf;)Ldkl;	f	spaghetti2D
		p	0		densityFunctionLookup
		p	1		noiseParametersLookup
	f	Laev;	A	BASE_3D_NOISE_END
	f	Laev;	B	SLOPED_CHEESE
	f	Laev;	C	OFFSET_LARGE
	f	Laev;	D	FACTOR_LARGE
	f	Laev;	E	JAGGEDNESS_LARGE
	f	Laev;	F	DEPTH_LARGE
	f	Laev;	G	SLOPED_CHEESE_LARGE
	f	Laev;	H	OFFSET_AMPLIFIED
	f	Laev;	I	FACTOR_AMPLIFIED
	f	Laev;	J	JAGGEDNESS_AMPLIFIED
	f	Laev;	K	DEPTH_AMPLIFIED
	f	Laev;	L	SLOPED_CHEESE_AMPLIFIED
	f	Laev;	M	SLOPED_CHEESE_END
	f	Laev;	N	SPAGHETTI_ROUGHNESS_FUNCTION
	f	Laev;	O	ENTRANCES
	f	Laev;	P	NOODLE
	f	Laev;	Q	PILLARS
	f	Laev;	R	SPAGHETTI_2D_THICKNESS_MODULATOR
	f	Laev;	S	SPAGHETTI_2D
	f	F	a	GLOBAL_OFFSET
	f	I	b	ISLAND_CHUNK_DISTANCE
	f	J	c	ISLAND_CHUNK_DISTANCE_SQR
	f	Laev;	d	CONTINENTS
	f	Laev;	e	EROSION
	f	Laev;	f	RIDGES
	f	Laev;	g	RIDGES_FOLDED
	f	Laev;	h	OFFSET
	f	Laev;	i	FACTOR
	f	Laev;	j	JAGGEDNESS
	f	Laev;	k	DEPTH
	f	Laev;	l	CONTINENTS_LARGE
	f	Laev;	m	EROSION_LARGE
	f	F	n	ORE_THICKNESS
	f	D	o	VEININESS_FREQUENCY
	f	D	p	NOODLE_SPACING_AND_STRAIGHTNESS
	f	D	q	SURFACE_DENSITY_THRESHOLD
	f	D	r	CHEESE_NOISE_TARGET
	f	Ldkl;	s	BLENDING_FACTOR
	f	Ldkl;	t	BLENDING_JAGGEDNESS
	f	Laev;	u	ZERO
	f	Laev;	v	Y
	f	Laev;	w	SHIFT_X
	f	Laev;	x	SHIFT_Z
	f	Laev;	y	BASE_3D_NOISE_OVERWORLD
	f	Laev;	z	BASE_3D_NOISE_NETHER
c	dkz$a	net/minecraft/world/level/levelgen/NoiseRouterData$QuantizedSpaghettiRarity
	m	(D)D	a	getSphaghettiRarity2D
		p	0		value
	m	(D)D	b	getSpaghettiRarity3D
		p	0		value
c	dla	net/minecraft/world/level/levelgen/NoiseSettings
	m	(IIII)V	<init>	<init>
		p	1		minimumY
		p	2		height
	m	()I	a	getCellHeight
	m	(IIII)Ldla;	a	create
		p	0		minimumY
		p	1		height
		p	2		horizontalSize
		p	3		verticalSize
	m	(Lcom/mojang/serialization/DataResult$PartialResult;)V	a	lambda$create$4
		p	0		result
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lcpx;)Ldla;	a	clampToHeightAccessor
		p	1		world
	m	(Ldla;)Lcom/mojang/serialization/DataResult;	a	guardY
		p	0		config
	m	()I	b	getCellWidth
	m	()I	c	minY
	m	()I	d	height
	m	()I	e	noiseSizeHorizontal
	m	()I	f	noiseSizeVertical
	m	()Ljava/lang/String;	g	lambda$guardY$3
	m	()Ljava/lang/String;	h	lambda$guardY$2
	m	()Ljava/lang/String;	i	lambda$guardY$1
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldla;	b	OVERWORLD_NOISE_SETTINGS
	f	Ldla;	c	NETHER_NOISE_SETTINGS
	f	Ldla;	d	END_NOISE_SETTINGS
	f	Ldla;	e	CAVES_NOISE_SETTINGS
	f	Ldla;	f	FLOATING_ISLANDS_NOISE_SETTINGS
	f	I	g	minY
	f	I	h	height
	f	I	i	noiseSizeHorizontal
	f	I	j	noiseSizeVertical
c	dlb	net/minecraft/world/level/levelgen/Noises
	m	(Lhf;Ldlf;Laev;)Ldzp;	a	instantiate
		p	0		noiseParametersLookup
		p	1		splitter
		p	2		key
	m	(Ljava/lang/String;)Laev;	a	createKey
		p	0		id
	f	Laev;	A	SPAGHETTI_ROUGHNESS_MODULATOR
	f	Laev;	B	CAVE_ENTRANCE
	f	Laev;	C	CAVE_LAYER
	f	Laev;	D	CAVE_CHEESE
	f	Laev;	E	ORE_VEININESS
	f	Laev;	F	ORE_VEIN_A
	f	Laev;	G	ORE_VEIN_B
	f	Laev;	H	ORE_GAP
	f	Laev;	I	NOODLE
	f	Laev;	J	NOODLE_THICKNESS
	f	Laev;	K	NOODLE_RIDGE_A
	f	Laev;	L	NOODLE_RIDGE_B
	f	Laev;	M	JAGGED
	f	Laev;	N	SURFACE
	f	Laev;	O	SURFACE_SECONDARY
	f	Laev;	P	CLAY_BANDS_OFFSET
	f	Laev;	Q	BADLANDS_PILLAR
	f	Laev;	R	BADLANDS_PILLAR_ROOF
	f	Laev;	S	BADLANDS_SURFACE
	f	Laev;	T	ICEBERG_PILLAR
	f	Laev;	U	ICEBERG_PILLAR_ROOF
	f	Laev;	V	ICEBERG_SURFACE
	f	Laev;	W	SWAMP
	f	Laev;	X	CALCITE
	f	Laev;	Y	GRAVEL
	f	Laev;	Z	POWDER_SNOW
	f	Laev;	a	TEMPERATURE
	f	Laev;	aa	PACKED_ICE
	f	Laev;	ab	ICE
	f	Laev;	ac	SOUL_SAND_LAYER
	f	Laev;	ad	GRAVEL_LAYER
	f	Laev;	ae	PATCH
	f	Laev;	af	NETHERRACK
	f	Laev;	ag	NETHER_WART
	f	Laev;	ah	NETHER_STATE_SELECTOR
	f	Laev;	b	VEGETATION
	f	Laev;	c	CONTINENTALNESS
	f	Laev;	d	EROSION
	f	Laev;	e	TEMPERATURE_LARGE
	f	Laev;	f	VEGETATION_LARGE
	f	Laev;	g	CONTINENTALNESS_LARGE
	f	Laev;	h	EROSION_LARGE
	f	Laev;	i	RIDGE
	f	Laev;	j	SHIFT
	f	Laev;	k	AQUIFER_BARRIER
	f	Laev;	l	AQUIFER_FLUID_LEVEL_FLOODEDNESS
	f	Laev;	m	AQUIFER_LAVA
	f	Laev;	n	AQUIFER_FLUID_LEVEL_SPREAD
	f	Laev;	o	PILLAR
	f	Laev;	p	PILLAR_RARENESS
	f	Laev;	q	PILLAR_THICKNESS
	f	Laev;	r	SPAGHETTI_2D
	f	Laev;	s	SPAGHETTI_2D_ELEVATION
	f	Laev;	t	SPAGHETTI_2D_MODULATOR
	f	Laev;	u	SPAGHETTI_2D_THICKNESS
	f	Laev;	v	SPAGHETTI_3D_1
	f	Laev;	w	SPAGHETTI_3D_2
	f	Laev;	x	SPAGHETTI_3D_RARITY
	f	Laev;	y	SPAGHETTI_3D_THICKNESS
	f	Laev;	z	SPAGHETTI_ROUGHNESS
c	dlc	net/minecraft/world/level/levelgen/OreVeinifier
	m	(Ldkl;Ldfj;Ldlf;Ldkl;Ldkl;Ldkl$b;)Ldfj;	a	lambda$create$0
		p	5		pos
	m	(Ldkl;Ldkl;Ldkl;Ldlf;)Ldkw$c;	a	create
		p	0		veinToggle
		p	1		veinRidged
		p	2		veinGap
		p	3		randomDeriver
	f	F	a	VEININESS_THRESHOLD
	f	I	b	EDGE_ROUNDOFF_BEGIN
	f	D	c	MAX_EDGE_ROUNDOFF
	f	F	d	VEIN_SOLIDNESS
	f	F	e	MIN_RICHNESS
	f	F	f	MAX_RICHNESS
	f	F	g	MAX_RICHNESS_THRESHOLD
	f	F	h	CHANCE_OF_RAW_ORE_BLOCK
	f	F	i	SKIP_ORE_IF_GAP_NOISE_IS_BELOW
c	dlc$a	net/minecraft/world/level/levelgen/OreVeinifier$VeinType
	m	(Ljava/lang/String;ILdfj;Ldfj;Ldfj;II)V	<init>	<init>
		p	3		ore
		p	4		rawOreBlock
		p	5		stone
		p	6		minY
		p	7		maxY
	m	()[Ldlc$a;	a	$values
	f	Ldlc$a;	a	COPPER
	f	Ldlc$a;	b	IRON
	f	I	c	minY
	f	I	d	maxY
	f	Ldfj;	e	ore
	f	Ldfj;	f	rawOreBlock
	f	Ldfj;	g	filler
	f	[Ldlc$a;	h	$VALUES
c	dld	net/minecraft/world/level/levelgen/PatrolSpawner
	m	(Lakq;Lgw;Lasc;Z)Z	a	spawnPatrolMember
		p	1		world
		p	2		pos
		p	3		random
		p	4		captain
	m	(Lakq;ZZ)I	a	tick
		p	1		world
		p	2		spawnMonsters
		p	3		spawnAnimals
	f	I	a	nextTick
c	dle	net/minecraft/world/level/levelgen/PhantomSpawner
	m	(Lakq;ZZ)I	a	tick
		p	1		world
		p	2		spawnMonsters
		p	3		spawnAnimals
	f	I	a	nextTick
c	dlf	net/minecraft/world/level/levelgen/PositionalRandomFactory
	m	(III)Lasc;	a	at
		p	1		x
		p	2		y
		p	3		z
	m	(Laew;)Lasc;	a	fromHashOf
		p	1		seed
	m	(Lgw;)Lasc;	a	at
		p	1		pos
	m	(Ljava/lang/String;)Lasc;	a	fromHashOf
		p	1		seed
	m	(Ljava/lang/StringBuilder;)V	a	parityConfigString
		p	1		info
c	dlg	net/minecraft/world/level/levelgen/RandomState
	m	(Ldkx;Lhf;J)V	<init>	<init>
		p	1		chunkGeneratorSettings
		p	2		noiseParametersLookup
		p	3		seed
	m	()Ldky;	a	router
	m	(Laev;)Ldzp;	a	getOrCreateNoise
		p	1		noiseParametersKey
	m	(Laev;Laev;)Ldzp;	a	lambda$getOrCreateNoise$0
		p	2		key
	m	(Laew;)Ldlf;	a	getOrCreateRandomFactory
		p	1		id
	m	(Laew;Laew;)Ldlf;	a	lambda$getOrCreateRandomFactory$1
		p	2		id2
	m	(Ldkx;Lhf;J)Ldlg;	a	create
		p	0		chunkGeneratorSettings
		p	1		noiseParametersLookup
		p	2		legacyWorldSeed
	m	(Lhf$a;Laev;J)Ldlg;	a	create
		p	0		registryLookup
		p	1		chunkGeneratorSettingsKey
		p	2		legacyWorldSeed
	m	()Lcrc$f;	b	sampler
	m	()Ldlk;	c	surfaceSystem
	m	()Ldlf;	d	aquiferRandom
	m	()Ldlf;	e	oreRandom
	f	Ldlf;	a	random
	f	Lhf;	b	noises
	f	Ldky;	c	router
	f	Lcrc$f;	d	sampler
	f	Ldlk;	e	surfaceSystem
	f	Ldlf;	f	aquiferRandom
	f	Ldlf;	g	oreRandom
	f	Ljava/util/Map;	h	noiseIntances
	f	Ljava/util/Map;	i	positionalRandoms
c	dlg$1	net/minecraft/world/level/levelgen/RandomState$1
	m	(Ldkl;)Ldkl;	a	wrapNew
		p	1		densityFunction
	m	(Ldkl;)Ldkl;	apply	apply
		p	1		densityFunction
	f	Ldlg;	a	this$0
	f	Ljava/util/Map;	b	wrapped
c	dlg$a	net/minecraft/world/level/levelgen/RandomState$1NoiseWiringHelper
	m	(J)Lasc;	a	newLegacyInstance
		p	1		seed
	m	(Ldkl$c;)Ldkl$c;	a	visitNoise
		p	1		noiseDensityFunction
	m	(Ldkl;)Ldkl;	a	wrapNew
		p	1		densityFunction
	m	(Ldkl;)Ldkl;	apply	apply
		p	1		densityFunction
	f	J	a	val$seed
	f	Z	b	val$useLegacyInit
	f	Ldlg;	c	this$0
	f	Ljava/util/Map;	d	wrapped
c	dlh	net/minecraft/world/level/levelgen/RandomSupport
	m	()J	a	generateUniqueSeed
	m	(J)J	a	mixStafford13
		p	0		seed
	m	(Ljava/lang/String;)Ldlh$a;	a	seedFromHashOf
		p	0		seed
	m	(J)Ldlh$a;	b	upgradeSeedTo128bitUnmixed
		p	0		seed
	m	(J)Ldlh$a;	c	upgradeSeedTo128bit
		p	0		seed
	m	(J)J	d	lambda$generateUniqueSeed$0
		p	0		seedUniquifier
	f	J	a	GOLDEN_RATIO_64
	f	J	b	SILVER_RATIO_64
	f	Lcom/google/common/hash/HashFunction;	c	MD5_128
	f	Ljava/util/concurrent/atomic/AtomicLong;	d	SEED_UNIQUIFIER
c	dlh$a	net/minecraft/world/level/levelgen/RandomSupport$Seed128bit
	m	()Ldlh$a;	a	mixed
	m	(JJ)Ldlh$a;	a	xor
		p	1		seedLo
		p	3		seedHi
	m	(Ldlh$a;)Ldlh$a;	a	xor
		p	1		seed
	m	()J	b	seedLo
	m	()J	c	seedHi
	f	J	a	seedLo
	f	J	b	seedHi
c	dli	net/minecraft/world/level/levelgen/SingleThreadedRandomSource
	m	(J)V	<init>	<init>
		p	1		seed
	m	(J)V	b	setSeed
		p	1		seed
	m	(I)I	c	next
		p	1		bits
	m	()Lasc;	d	fork
	m	()Ldlf;	e	forkPositional
	m	()D	k	nextGaussian
	f	I	d	MODULUS_BITS
	f	J	e	MODULUS_MASK
	f	J	f	MULTIPLIER
	f	J	g	INCREMENT
	f	J	h	seed
	f	Ldku;	i	gaussianSource
c	dlj	net/minecraft/world/level/levelgen/SurfaceRules
	m	()Ldlj$f;	a	steep
	m	(II)Ldlj$f;	a	waterBlockCheck
		p	0		offset
		p	1		runDepthMultiplier
	m	(IZILdud;)Ldlj$f;	a	stoneDepthCheck
		p	0		offset
		p	1		addSurfaceDepth
		p	2		secondaryDepthRange
		p	3		verticalSurfaceType
	m	(IZLdud;)Ldlj$f;	a	stoneDepthCheck
		p	0		offset
		p	1		addSurfaceDepth
		p	2		verticalSurfaceType
	m	(Laev;D)Ldlj$f;	a	noiseCondition
		p	0		noise
		p	1		min
	m	(Laev;DD)Ldlj$f;	a	noiseCondition
		p	0		noise
		p	1		min
		p	3		max
	m	(Ldfj;)Ldlj$o;	a	state
		p	0		state
	m	(Ldlj$f;)Ldlj$f;	a	not
		p	0		target
	m	(Ldlj$f;Ldlj$o;)Ldlj$o;	a	ifTrue
		p	0		condition
		p	1		rule
	m	(Ldlm;I)Ldlj$f;	a	yBlockCheck
		p	0		anchor
		p	1		runDepthMultiplier
	m	(Lhq;Ljava/lang/String;Larq;)Lcom/mojang/serialization/Codec;	a	register
		p	0		registry
		p	1		id
		p	2		codecHolder
	m	(Ljava/lang/String;Ldlm;Ldlm;)Ldlj$f;	a	verticalGradient
		p	0		id
		p	1		trueAtAndBelow
		p	2		falseAtAndAbove
	m	(Ljava/util/List;)Ldlj$c;	a	isBiome
		p	0		biomes
	m	([Laev;)Ldlj$f;	a	isBiome
		p	0		biomes
	m	([Ldlj$o;)Ldlj$o;	a	sequence
		p	0		rules
	m	()Ldlj$f;	b	hole
	m	(II)Ldlj$f;	b	waterStartCheck
		p	0		offset
		p	1		runDepthMultiplier
	m	(Ldlm;I)Ldlj$f;	b	yStartCheck
		p	0		anchor
		p	1		runDepthMultiplier
	m	()Ldlj$f;	c	abovePreliminarySurface
	m	()Ldlj$f;	d	temperature
	m	()Ldlj$o;	e	bandlands
	f	Ldlj$f;	a	ON_FLOOR
	f	Ldlj$f;	b	UNDER_FLOOR
	f	Ldlj$f;	c	DEEP_UNDER_FLOOR
	f	Ldlj$f;	d	VERY_DEEP_UNDER_FLOOR
	f	Ldlj$f;	e	ON_CEILING
	f	Ldlj$f;	f	UNDER_CEILING
c	dlj$a	net/minecraft/world/level/levelgen/SurfaceRules$AbovePreliminarySurface
	m	()Larq;	a	codec
	m	(Ldlj$g;)Ldlj$e;	a	apply
	m	()[Ldlj$a;	b	$values
	f	Ldlj$a;	a	INSTANCE
	f	Larq;	c	CODEC
	f	[Ldlj$a;	d	$VALUES
c	dlj$b	net/minecraft/world/level/levelgen/SurfaceRules$Bandlands
	m	()Larq;	a	codec
	m	(Ldlj$g;)Ldlj$u;	a	apply
	m	()[Ldlj$b;	b	$values
	f	Ldlj$b;	a	INSTANCE
	f	Larq;	c	CODEC
	f	[Ldlj$b;	d	$VALUES
c	dlj$c	net/minecraft/world/level/levelgen/SurfaceRules$BiomeConditionSource
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		biomes
	m	()Larq;	a	codec
	m	(Ldlj$c;)Ljava/util/List;	a	lambda$static$0
	m	(Ldlj$g;)Ldlj$e;	a	apply
	f	Larq;	a	CODEC
	f	Ljava/util/List;	c	biomes
	f	Ljava/util/function/Predicate;	d	biomeNameTest
c	dlj$c$a	net/minecraft/world/level/levelgen/SurfaceRules$BiomeConditionSource$1BiomeCondition
	m	(Ldlj$c;Ldlj$g;)V	<init>	<init>
		p	2		context
	m	()Z	a	compute
	f	Ldlj$g;	a	val$ruleContext
	f	Ldlj$c;	b	this$0
c	dlj$d	net/minecraft/world/level/levelgen/SurfaceRules$BlockRuleSource
	m	(Ldfj;)V	<init>	<init>
		p	1		resultState
	m	()Larq;	a	codec
	m	(Ldlj$g;)Ldlj$u;	a	apply
	m	()Ldfj;	b	resultState
	m	()Ldlj$r;	c	rule
	f	Ldfj;	a	resultState
	f	Ldlj$r;	c	rule
	f	Larq;	d	CODEC
c	dlj$e	net/minecraft/world/level/levelgen/SurfaceRules$Condition
	m	()Z	b	test
c	dlj$f	net/minecraft/world/level/levelgen/SurfaceRules$ConditionSource
	m	()Larq;	a	codec
	m	(Ldlj$f;)Lcom/mojang/serialization/Codec;	a	lambda$static$0
	m	(Lhq;)Lcom/mojang/serialization/Codec;	a	bootstrap
		p	0		registry
	f	Lcom/mojang/serialization/Codec;	b	CODEC
c	dlj$g	net/minecraft/world/level/levelgen/SurfaceRules$Context
	m	(Ldlk;Ldlg;Ldhf;Ldkw;Ljava/util/function/Function;Lhq;Ldlp;)V	<init>	<init>
		p	1		surfaceBuilder
		p	2		noiseConfig
		p	3		chunk
		p	4		chunkNoiseSampler
		p	5		posToBiome
		p	7		heightContext
	m	()D	a	getSurfaceSecondary
	m	(I)I	a	blockCoordToSurfaceCell
		p	0		blockCoord
	m	(II)V	a	updateXZ
		p	1		blockX
		p	2		blockZ
	m	(III)Lhe;	a	lambda$updateY$0
	m	(IIIIII)V	a	updateY
		p	1		stoneDepthAbove
		p	2		stoneDepthBelow
		p	3		fluidHeight
		p	4		blockX
		p	5		blockY
		p	6		blockZ
	m	()I	b	getMinSurfaceLevel
	m	(I)I	b	surfaceCellToBlockCoord
		p	0		chunkCoord
	f	Ljava/util/function/Supplier;	A	biome
	f	I	B	blockY
	f	I	C	waterHeight
	f	I	D	stoneDepthBelow
	f	I	E	stoneDepthAbove
	f	I	a	HOW_FAR_BELOW_PRELIMINARY_SURFACE_LEVEL_TO_BUILD_SURFACE
	f	I	b	SURFACE_CELL_BITS
	f	I	c	SURFACE_CELL_SIZE
	f	I	d	SURFACE_CELL_MASK
	f	Ldlk;	e	system
	f	Ldlj$e;	f	temperature
	f	Ldlj$e;	g	steep
	f	Ldlj$e;	h	hole
	f	Ldlj$e;	i	abovePreliminarySurface
	f	Ldlg;	j	randomState
	f	Ldhf;	k	chunk
	f	Ldkw;	l	noiseChunk
	f	Ljava/util/function/Function;	m	biomeGetter
	f	Ldlp;	n	context
	f	J	o	lastPreliminarySurfaceCellOrigin
	f	[I	p	preliminarySurfaceCache
	f	J	q	lastUpdateXZ
	f	I	r	blockX
	f	I	s	blockZ
	f	I	t	surfaceDepth
	f	J	u	lastSurfaceDepth2Update
	f	D	v	surfaceSecondary
	f	J	w	lastMinSurfaceLevelUpdate
	f	I	x	minSurfaceLevel
	f	J	y	lastUpdateY
	f	Lgw$a;	z	pos
c	dlj$g$a	net/minecraft/world/level/levelgen/SurfaceRules$Context$AbovePreliminarySurfaceCondition
	m	()Z	b	test
	f	Ldlj$g;	a	this$0
c	dlj$g$b	net/minecraft/world/level/levelgen/SurfaceRules$Context$HoleCondition
	m	(Ldlj$g;)V	<init>	<init>
		p	1		context
	m	()Z	a	compute
c	dlj$g$c	net/minecraft/world/level/levelgen/SurfaceRules$Context$SteepMaterialCondition
	m	(Ldlj$g;)V	<init>	<init>
		p	1		context
	m	()Z	a	compute
c	dlj$g$d	net/minecraft/world/level/levelgen/SurfaceRules$Context$TemperatureHelperCondition
	m	(Ldlj$g;)V	<init>	<init>
		p	1		context
	m	()Z	a	compute
c	dlj$h	net/minecraft/world/level/levelgen/SurfaceRules$Hole
	m	()Larq;	a	codec
	m	(Ldlj$g;)Ldlj$e;	a	apply
	m	()[Ldlj$h;	b	$values
	f	Ldlj$h;	a	INSTANCE
	f	Larq;	c	CODEC
	f	[Ldlj$h;	d	$VALUES
c	dlj$i	net/minecraft/world/level/levelgen/SurfaceRules$LazyCondition
	m	(Ldlj$g;)V	<init>	<init>
		p	1		context
	m	()Z	a	compute
	m	()Z	b	test
	m	()J	c	getContextLastUpdate
	f	J	a	lastUpdate
	f	Ldlj$g;	c	context
	f	Ljava/lang/Boolean;	d	result
c	dlj$j	net/minecraft/world/level/levelgen/SurfaceRules$LazyXZCondition
	m	(Ldlj$g;)V	<init>	<init>
		p	1		context
	m	()J	c	getContextLastUpdate
c	dlj$k	net/minecraft/world/level/levelgen/SurfaceRules$LazyYCondition
	m	(Ldlj$g;)V	<init>	<init>
		p	1		context
	m	()J	c	getContextLastUpdate
c	dlj$l	net/minecraft/world/level/levelgen/SurfaceRules$NoiseThresholdConditionSource
	m	()Larq;	a	codec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	(Ldlj$g;)Ldlj$e;	a	apply
	m	()Laev;	b	noise
	m	()D	c	minThreshold
	m	()D	d	maxThreshold
	f	Laev;	a	noise
	f	D	c	minThreshold
	f	D	d	maxThreshold
	f	Larq;	e	CODEC
c	dlj$l$a	net/minecraft/world/level/levelgen/SurfaceRules$NoiseThresholdConditionSource$1NoiseThresholdCondition
	m	(Ldlj$l;Ldlj$g;Ldzp;)V	<init>	<init>
		p	2		context
	m	()Z	a	compute
	f	Ldlj$g;	a	val$ruleContext
	f	Ldzp;	b	val$noise
	f	Ldlj$l;	e	this$0
c	dlj$m	net/minecraft/world/level/levelgen/SurfaceRules$NotCondition
	m	()Ldlj$e;	a	target
	m	()Z	b	test
	f	Ldlj$e;	a	target
c	dlj$n	net/minecraft/world/level/levelgen/SurfaceRules$NotConditionSource
	m	()Larq;	a	codec
	m	(Ldlj$g;)Ldlj$e;	a	apply
	m	()Ldlj$f;	b	target
	f	Ldlj$f;	a	target
	f	Larq;	c	CODEC
c	dlj$o	net/minecraft/world/level/levelgen/SurfaceRules$RuleSource
	m	()Larq;	a	codec
	m	(Ldlj$o;)Lcom/mojang/serialization/Codec;	a	lambda$static$0
	m	(Lhq;)Lcom/mojang/serialization/Codec;	a	bootstrap
		p	0		registry
	f	Lcom/mojang/serialization/Codec;	b	CODEC
c	dlj$p	net/minecraft/world/level/levelgen/SurfaceRules$SequenceRule
	m	()Ljava/util/List;	a	rules
	m	(III)Ldfj;	tryApply	tryApply
		p	1		x
		p	2		y
		p	3		z
	f	Ljava/util/List;	a	rules
c	dlj$q	net/minecraft/world/level/levelgen/SurfaceRules$SequenceRuleSource
	m	()Larq;	a	codec
	m	(Ldlj$g;)Ldlj$u;	a	apply
	m	()Ljava/util/List;	b	sequence
	f	Ljava/util/List;	a	sequence
	f	Larq;	c	CODEC
c	dlj$r	net/minecraft/world/level/levelgen/SurfaceRules$StateRule
	m	()Ldfj;	a	state
	m	(III)Ldfj;	tryApply	tryApply
		p	1		x
		p	2		y
		p	3		z
	f	Ldfj;	a	state
c	dlj$s	net/minecraft/world/level/levelgen/SurfaceRules$Steep
	m	()Larq;	a	codec
	m	(Ldlj$g;)Ldlj$e;	a	apply
	m	()[Ldlj$s;	b	$values
	f	Ldlj$s;	a	INSTANCE
	f	Larq;	c	CODEC
	f	[Ldlj$s;	d	$VALUES
c	dlj$t	net/minecraft/world/level/levelgen/SurfaceRules$StoneDepthCheck
	m	()Larq;	a	codec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	(Ldlj$g;)Ldlj$e;	a	apply
	m	()I	b	offset
	m	()Z	c	addSurfaceDepth
	m	()I	d	secondaryDepthRange
	m	()Ldud;	e	surfaceType
	f	I	a	offset
	f	Z	c	addSurfaceDepth
	f	I	d	secondaryDepthRange
	f	Ldud;	e	surfaceType
	f	Larq;	f	CODEC
c	dlj$t$a	net/minecraft/world/level/levelgen/SurfaceRules$StoneDepthCheck$1StoneDepthCondition
	m	(Ldlj$t;Ldlj$g;Z)V	<init>	<init>
		p	2		context
	m	()Z	a	compute
	f	Ldlj$g;	a	val$ruleContext
	f	Z	b	val$ceiling
	f	Ldlj$t;	e	this$0
c	dlj$u	net/minecraft/world/level/levelgen/SurfaceRules$SurfaceRule
	m	(III)Ldfj;	tryApply	tryApply
		p	1		x
		p	2		y
		p	3		z
c	dlj$v	net/minecraft/world/level/levelgen/SurfaceRules$Temperature
	m	()Larq;	a	codec
	m	(Ldlj$g;)Ldlj$e;	a	apply
	m	()[Ldlj$v;	b	$values
	f	Ldlj$v;	a	INSTANCE
	f	Larq;	c	CODEC
	f	[Ldlj$v;	d	$VALUES
c	dlj$w	net/minecraft/world/level/levelgen/SurfaceRules$TestRule
	m	()Ldlj$e;	a	condition
	m	()Ldlj$u;	b	followup
	m	(III)Ldfj;	tryApply	tryApply
		p	1		x
		p	2		y
		p	3		z
	f	Ldlj$e;	a	condition
	f	Ldlj$u;	b	followup
c	dlj$x	net/minecraft/world/level/levelgen/SurfaceRules$TestRuleSource
	m	()Larq;	a	codec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	(Ldlj$g;)Ldlj$u;	a	apply
	m	()Ldlj$f;	b	ifTrue
	m	()Ldlj$o;	c	thenRun
	f	Ldlj$f;	a	ifTrue
	f	Ldlj$o;	c	thenRun
	f	Larq;	d	CODEC
c	dlj$y	net/minecraft/world/level/levelgen/SurfaceRules$VerticalGradientConditionSource
	m	()Larq;	a	codec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	(Ldlj$g;)Ldlj$e;	a	apply
	m	()Laew;	b	randomName
	m	()Ldlm;	c	trueAtAndBelow
	m	()Ldlm;	d	falseAtAndAbove
	f	Laew;	a	randomName
	f	Ldlm;	c	trueAtAndBelow
	f	Ldlm;	d	falseAtAndAbove
	f	Larq;	e	CODEC
c	dlj$y$a	net/minecraft/world/level/levelgen/SurfaceRules$VerticalGradientConditionSource$1VerticalGradientCondition
	m	(Ldlj$y;Ldlj$g;IILdlf;)V	<init>	<init>
		p	2		context
	m	()Z	a	compute
	f	Ldlj$g;	a	val$ruleContext
	f	I	b	val$trueAtAndBelow
	f	I	e	val$falseAtAndAbove
	f	Ldlf;	f	val$randomFactory
	f	Ldlj$y;	g	this$0
c	dlj$z	net/minecraft/world/level/levelgen/SurfaceRules$WaterConditionSource
	m	()Larq;	a	codec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	(Ldlj$g;)Ldlj$e;	a	apply
	m	()I	b	offset
	m	()I	c	surfaceDepthMultiplier
	m	()Z	d	addStoneDepth
	f	I	a	offset
	f	I	c	surfaceDepthMultiplier
	f	Z	d	addStoneDepth
	f	Larq;	e	CODEC
c	dlj$z$a	net/minecraft/world/level/levelgen/SurfaceRules$WaterConditionSource$1WaterCondition
	m	(Ldlj$z;Ldlj$g;)V	<init>	<init>
		p	2		context
	m	()Z	a	compute
	f	Ldlj$g;	a	val$ruleContext
	f	Ldlj$z;	b	this$0
c	dlj$aa	net/minecraft/world/level/levelgen/SurfaceRules$YConditionSource
	m	()Larq;	a	codec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	(Ldlj$g;)Ldlj$e;	a	apply
	m	()Ldlm;	b	anchor
	m	()I	c	surfaceDepthMultiplier
	m	()Z	d	addStoneDepth
	f	Ldlm;	a	anchor
	f	I	c	surfaceDepthMultiplier
	f	Z	d	addStoneDepth
	f	Larq;	e	CODEC
c	dlj$aa$a	net/minecraft/world/level/levelgen/SurfaceRules$YConditionSource$1YCondition
	m	(Ldlj$aa;Ldlj$g;)V	<init>	<init>
		p	2		context
	m	()Z	a	compute
	f	Ldlj$g;	a	val$ruleContext
	f	Ldlj$aa;	b	this$0
c	dlk	net/minecraft/world/level/levelgen/SurfaceSystem
	m	(Ldlg;Ldfj;ILdlf;)V	<init>	<init>
		p	1		noiseConfig
		p	2		defaultState
		p	3		seaLevel
		p	4		randomDeriver
	m	(II)I	a	getSurfaceDepth
		p	1		blockX
		p	2		blockZ
	m	(III)Ldfj;	a	getBand
		p	1		x
		p	2		y
		p	3		z
	m	(ILcqt;Ldhc;Lgw$a;III)V	a	frozenOceanExtension
		p	1		minY
		p	2		biome
		p	3		column
		p	4		mutablePos
		p	5		x
		p	6		z
		p	7		surfaceY
	m	(Lasc;)[Ldfj;	a	generateBands
		p	0		random
	m	(Lasc;[Ldfj;ILdfj;)V	a	makeBands
		p	0		random
		p	1		terracottaBands
		p	2		minBandSize
		p	3		state
	m	(Ldfj;)Z	a	isStone
		p	1		state
	m	(Ldhc;IIILcpx;)V	a	erodedBadlandsExtension
		p	1		column
		p	2		x
		p	3		z
		p	4		surfaceY
		p	5		chunk
	m	(Ldlg;Lcqv;Lhq;ZLdlp;Ldhf;Ldkw;Ldlj$o;)V	a	buildSurface
		p	1		noiseConfig
		p	2		biomeAccess
		p	3		biomeRegistry
		p	4		useLegacyRandom
		p	5		heightContext
		p	6		chunk
		p	7		chunkNoiseSampler
		p	8		materialRule
	m	(Ldlj$o;Ldms;Ljava/util/function/Function;Ldhf;Ldkw;Lgw;Z)Ljava/util/Optional;	a	topMaterial
		p	1		rule
		p	2		context
		p	3		posToBiome
		p	4		chunk
		p	5		chunkNoiseSampler
		p	6		pos
		p	7		hasFluid
	m	(II)D	b	getSurfaceSecondary
		p	1		blockX
		p	2		blockZ
	f	Ldfj;	a	WHITE_TERRACOTTA
	f	Ldfj;	b	ORANGE_TERRACOTTA
	f	Ldfj;	c	TERRACOTTA
	f	Ldfj;	d	YELLOW_TERRACOTTA
	f	Ldfj;	e	BROWN_TERRACOTTA
	f	Ldfj;	f	RED_TERRACOTTA
	f	Ldfj;	g	LIGHT_GRAY_TERRACOTTA
	f	Ldfj;	h	PACKED_ICE
	f	Ldfj;	i	SNOW_BLOCK
	f	Ldfj;	j	defaultBlock
	f	I	k	seaLevel
	f	[Ldfj;	l	clayBands
	f	Ldzp;	m	clayBandsOffsetNoise
	f	Ldzp;	n	badlandsPillarNoise
	f	Ldzp;	o	badlandsPillarRoofNoise
	f	Ldzp;	p	badlandsSurfaceNoise
	f	Ldzp;	q	icebergPillarNoise
	f	Ldzp;	r	icebergPillarRoofNoise
	f	Ldzp;	s	icebergSurfaceNoise
	f	Ldlf;	t	noiseRandom
	f	Ldzp;	u	surfaceNoise
	f	Ldzp;	v	surfaceSecondaryNoise
c	dlk$1	net/minecraft/world/level/levelgen/SurfaceSystem$1
	m	(I)Ldfj;	a	getBlock
		p	1		y
	m	(ILdfj;)V	a	setBlock
		p	1		y
		p	2		state
	f	Ldhf;	a	val$protoChunk
	f	Lgw$a;	b	val$columnPos
	f	Lcpc;	c	val$chunkPos
	f	Ldlk;	d	this$0
c	dll	net/minecraft/world/level/levelgen/ThreadSafeLegacyRandomSource
	m	(J)V	<init>	<init>
		p	1		seed
	m	(J)V	b	setSeed
		p	1		seed
	m	(I)I	c	next
		p	1		bits
	m	()Lasc;	d	fork
	m	()Ldlf;	e	forkPositional
	m	()D	k	nextGaussian
	f	I	d	MODULUS_BITS
	f	J	e	MODULUS_MASK
	f	J	f	MULTIPLIER
	f	J	g	INCREMENT
	f	Ljava/util/concurrent/atomic/AtomicLong;	h	seed
	f	Ldku;	i	gaussianSource
c	dlm	net/minecraft/world/level/levelgen/VerticalAnchor
	m	()Ldlm;	a	bottom
	m	(I)Ldlm;	a	absolute
		p	0		offset
	m	(Lcom/mojang/datafixers/util/Either;)Ldlm;	a	merge
		p	0		either
	m	(Ldlm;)Lcom/mojang/datafixers/util/Either;	a	split
		p	0		yOffset
	m	(Ldlp;)I	a	resolveY
		p	1		context
	m	()Ldlm;	b	top
	m	(I)Ldlm;	b	aboveBottom
		p	0		offset
	m	(Lcom/mojang/datafixers/util/Either;)Ljava/lang/Record;	b	lambda$merge$0
	m	(I)Ldlm;	c	belowTop
		p	0		offset
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldlm;	b	BOTTOM
	f	Ldlm;	c	TOP
c	dlm$a	net/minecraft/world/level/levelgen/VerticalAnchor$AboveBottom
	m	(Ldlp;)I	a	resolveY
		p	1		context
	m	()I	c	offset
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	I	e	offset
c	dlm$b	net/minecraft/world/level/levelgen/VerticalAnchor$Absolute
	m	(Ldlp;)I	a	resolveY
		p	1		context
	m	()I	c	y
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	I	e	y
c	dlm$c	net/minecraft/world/level/levelgen/VerticalAnchor$BelowTop
	m	(Ldlp;)I	a	resolveY
		p	1		context
	m	()I	c	offset
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	I	e	offset
c	dln	net/minecraft/world/level/levelgen/WorldDimensions
	m	()Ldhg;	a	overworld
	m	(Laev;)Ljava/util/Optional;	a	get
		p	1		key
	m	(Laev;Ldit;)Lcom/mojang/serialization/Lifecycle;	a	checkStability
		p	0		key
		p	1		dimensionOptions
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ldit;)Z	a	isStableOverworld
		p	0		dimensionOptions
	m	(Lhq;)Ldln$b;	a	bake
		p	1		existingRegistry
	m	(Lhq;Lhe;Ldhg;)Lhq;	a	withOverworld
		p	0		currentRegistry
		p	1		overworldEntry
		p	2		chunkGenerator
	m	(Lhq;Lhq;Ldhg;)Lhq;	a	withOverworld
		p	0		dynamicRegistry
		p	1		currentRegistry
		p	2		chunkGenerator
	m	(Lhq;Ljava/util/List;Laev;)V	a	lambda$bake$5
		p	3		key
	m	(Lhr;Ldhg;)Ldln;	a	replaceOverworldGenerator
		p	1		dynamicRegistryManager
		p	2		chunkGenerator
	m	(Lhz;Ldln$a;)V	a	lambda$bake$6
		p	1		entry
	m	(Ljava/util/List;Laev;Ldit;)V	a	lambda$bake$4
		p	2		dimensionOptions
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	a	keysInOrder
		p	0		otherKeys
	m	()Lcom/google/common/collect/ImmutableSet;	b	levels
	m	(Laev;)Ljava/util/Optional;	b	lambda$bake$3
	m	(Laev;Ldit;)Z	b	isVanillaLike
		p	0		key
		p	1		dimensionOptions
	m	(Ldit;)Z	b	isStableNether
		p	0		dimensionOptions
	m	(Lhq;)Leck$a;	b	specialWorldProperty
		p	0		dimensionOptionsRegistry
	m	()Z	c	isDebug
	m	(Laev;)Z	c	lambda$keysInOrder$1
		p	0		key
	m	(Ldit;)Z	c	isStableEnd
		p	0		dimensionOptions
	m	()Lhq;	d	dimensions
	m	(Ldit;)Leck$a;	d	lambda$specialWorldProperty$2
		p	0		overworldEntry
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lhq;	b	dimensions
	f	Ljava/util/Set;	c	BUILTIN_ORDER
	f	I	d	VANILLA_DIMENSION_COUNT
c	dln$a	net/minecraft/world/level/levelgen/WorldDimensions$1Entry
	m	()Laev;	a	key
	m	()Ldit;	b	value
	m	()Lcom/mojang/serialization/Lifecycle;	c	lifecycle
	f	Laev;	a	key
	f	Ldit;	b	value
c	dln$b	net/minecraft/world/level/levelgen/WorldDimensions$Complete
	m	()Lcom/mojang/serialization/Lifecycle;	a	lifecycle
	m	()Lhr$b;	b	dimensionsRegistryAccess
	m	()Lhq;	c	dimensions
	m	()Leck$a;	d	specialWorldProperty
	f	Lhq;	a	dimensions
	f	Leck$a;	b	specialWorldProperty
c	dlo	net/minecraft/world/level/levelgen/WorldGenSettings
	m	()Ldlq;	a	options
	m	(Lcom/mojang/serialization/DynamicOps;Ldlq;Ldln;)Lcom/mojang/serialization/DataResult;	a	encode
		p	0		registryOps
		p	1		generatorOptions
		p	2		dimensionOptionsRegistryHolder
	m	(Lcom/mojang/serialization/DynamicOps;Ldlq;Lhr;)Lcom/mojang/serialization/DataResult;	a	encode
		p	0		registryOps
		p	1		generatorOptions
		p	2		dynamicRegistryManager
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Ldln;	b	dimensions
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldlq;	b	options
	f	Ldln;	c	dimensions
c	dlp	net/minecraft/world/level/levelgen/WorldGenerationContext
	m	(Ldhg;Lcpx;)V	<init>	<init>
		p	1		generator
		p	2		world
	m	()I	a	getMinGenY
	m	()I	b	getGenDepth
	f	I	a	minY
	f	I	b	height
c	dlq	net/minecraft/world/level/levelgen/WorldOptions
	m	(JZZ)V	<init>	<init>
		p	1		seed
		p	3		generateStructures
		p	4		bonusChest
	m	(JZZLjava/util/Optional;)V	<init>	<init>
		p	1		seed
		p	3		generateStructures
		p	4		bonusChest
		p	5		legacyCustomOptions
	m	()Ldlq;	a	defaultWithRandomSeed
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Ldlq;)Ljava/util/Optional;	a	lambda$static$0
		p	0		generatorOptions
	m	(Ljava/lang/String;)Ljava/util/OptionalLong;	a	parseSeed
		p	0		seed
	m	(Ljava/util/OptionalLong;)Ldlq;	a	withSeed
		p	1		seed
	m	(Z)Ldlq;	a	withBonusChest
		p	1		bonusChest
	m	()J	b	seed
	m	(Z)Ldlq;	b	withStructures
		p	1		structures
	m	()Z	c	generateStructures
	m	()Z	d	generateBonusChest
	m	()Z	e	isOldCustomizedWorld
	m	()J	f	randomSeed
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ldlq;	b	DEMO_OPTIONS
	f	J	c	seed
	f	Z	d	generateStructures
	f	Z	e	generateBonusChest
	f	Ljava/util/Optional;	f	legacyCustomOptions
c	dlr	net/minecraft/world/level/levelgen/WorldgenRandom
	m	(Lasc;)V	<init>	<init>
		p	1		baseRandom
	m	(IIJJ)Lasc;	a	seedSlimeChunk
		p	0		chunkX
		p	1		chunkZ
		p	2		worldSeed
		p	4		scrambler
	m	(JII)J	a	setDecorationSeed
		p	1		worldSeed
		p	3		blockX
		p	4		blockZ
	m	(JIII)V	a	setLargeFeatureWithSalt
		p	1		worldSeed
		p	3		regionX
		p	4		regionZ
		p	5		salt
	m	(J)V	b	setSeed
		p	1		seed
	m	(JII)V	b	setFeatureSeed
		p	1		populationSeed
		p	3		index
		p	4		step
	m	(I)I	c	next
		p	1		bits
	m	(JII)V	c	setLargeFeatureSeed
		p	1		worldSeed
		p	3		chunkX
		p	4		chunkZ
	m	()Lasc;	d	fork
	m	()Ldlf;	e	forkPositional
	m	()I	l	getCount
	f	Lasc;	d	randomSource
	f	I	e	count
c	dlr$a	net/minecraft/world/level/levelgen/WorldgenRandom$Algorithm
	m	(Ljava/lang/String;ILjava/util/function/LongFunction;)V	<init>	<init>
		p	3		provider
	m	()[Ldlr$a;	a	$values
	m	(J)Lasc;	a	newInstance
		p	1		seed
	f	Ldlr$a;	a	LEGACY
	f	Ldlr$a;	b	XOROSHIRO
	f	Ljava/util/function/LongFunction;	c	constructor
	f	[Ldlr$a;	d	$VALUES
c	dls	net/minecraft/world/level/levelgen/Xoroshiro128PlusPlus
	m	(JJ)V	<init>	<init>
		p	1		seedLo
		p	3		seedHi
	m	(Ldlh$a;)V	<init>	<init>
		p	1		seed
	m	()J	a	nextLong
	m	(Ldls;)Ljava/util/stream/LongStream;	a	lambda$static$2
		p	0		random
	m	(Ljava/util/stream/LongStream;)Lcom/mojang/serialization/DataResult;	a	lambda$static$1
		p	0		stream
	m	([J)Ldls;	a	lambda$static$0
		p	0		seeds
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	J	b	seedLo
	f	J	c	seedHi
c	dlt	net/minecraft/world/level/levelgen/XoroshiroRandomSource
	m	(J)V	<init>	<init>
		p	1		seed
	m	(JJ)V	<init>	<init>
		p	1		seedLo
		p	3		seedHi
	m	(Ldlh$a;)V	<init>	<init>
		p	1		seed
	m	(Ldls;)V	<init>	<init>
		p	1		implementation
	m	(I)I	a	nextInt
		p	1		bound
	m	(Ldls;)Ldlt;	a	lambda$static$0
		p	0		implementation
	m	(Ldlt;)Ldls;	a	lambda$static$1
		p	0		random
	m	(I)V	b	consumeCount
		p	1		count
	m	(J)V	b	setSeed
		p	1		seed
	m	(I)J	c	nextBits
		p	1		bits
	m	()Lasc;	d	fork
	m	()Ldlf;	e	forkPositional
	m	()I	f	nextInt
	m	()J	g	nextLong
	m	()Z	h	nextBoolean
	m	()F	i	nextFloat
	m	()D	j	nextDouble
	m	()D	k	nextGaussian
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	F	c	FLOAT_UNIT
	f	D	d	DOUBLE_UNIT
	f	Ldls;	e	randomNumberGenerator
	f	Ldku;	f	gaussianSource
c	dlt$a	net/minecraft/world/level/levelgen/XoroshiroRandomSource$XoroshiroPositionalRandomFactory
	m	(JJ)V	<init>	<init>
		p	1		seedLo
		p	3		seedHi
	m	(III)Lasc;	a	at
		p	1		x
		p	2		y
		p	3		z
	m	(Ljava/lang/String;)Lasc;	a	fromHashOf
		p	1		seed
	m	(Ljava/lang/StringBuilder;)V	a	parityConfigString
		p	1		info
	f	J	a	seedLo
	f	J	b	seedHi
c	dlu	net/minecraft/world/level/levelgen/blending/Blender
	m	(Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap;Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap;)V	<init>	<init>
		p	1		blendingData
		p	2		closeBlendingData
	m	()Ldlu;	a	empty
	m	(D)D	a	heightToOffset
		p	0		height
	m	(DDDDDD)D	a	distanceToCube
		p	0		x1
		p	2		y1
		p	4		z1
		p	6		x2
		p	8		y2
		p	10		z2
	m	(DDDDDDD)D	a	lambda$makeOffsetOldChunkDistanceGetter$11
		p	8		offsetX
		p	10		y
		p	12		offsetZ
	m	(II)Ldlu$a;	a	blendOffsetAndFactor
		p	1		blockX
		p	2		blockZ
	m	(III)Lhe;	a	blendBiome
		p	1		x
		p	2		y
		p	3		z
	m	(IIILdlu$b;)D	a	getBlendingDataValue
		p	1		biomeX
		p	2		biomeY
		p	3		biomeZ
		p	4		sampler
	m	(IIILorg/apache/commons/lang3/mutable/MutableDouble;Lorg/apache/commons/lang3/mutable/MutableDouble;Lorg/apache/commons/lang3/mutable/MutableDouble;IIID)V	a	lambda$blendDensity$2
		p	6		biomeX
		p	7		halfSectionY
		p	8		biomeZ
		p	9		collidableBlockDensity
	m	(IIILorg/apache/commons/lang3/mutable/MutableDouble;Lorg/apache/commons/lang3/mutable/MutableDouble;Lorg/apache/commons/lang3/mutable/MutableDouble;Ljava/lang/Long;Ldlv;)V	a	lambda$blendDensity$3
		p	6		chunkPos
		p	7		data
	m	(IIILorg/apache/commons/lang3/mutable/MutableDouble;Lorg/apache/commons/lang3/mutable/MutableObject;Ljava/lang/Long;Ldlv;)V	a	lambda$blendBiome$6
		p	5		chunkPos
		p	6		data
	m	(IILorg/apache/commons/lang3/mutable/MutableDouble;Lorg/apache/commons/lang3/mutable/MutableDouble;Lorg/apache/commons/lang3/mutable/MutableDouble;IID)V	a	lambda$blendOffsetAndFactor$0
		p	5		biomeX
		p	6		biomeZ
		p	7		height
	m	(IILorg/apache/commons/lang3/mutable/MutableDouble;Lorg/apache/commons/lang3/mutable/MutableDouble;Lorg/apache/commons/lang3/mutable/MutableDouble;Ljava/lang/Long;Ldlv;)V	a	lambda$blendOffsetAndFactor$1
		p	5		chunkPos
		p	6		data
	m	(IILorg/apache/commons/lang3/mutable/MutableDouble;Lorg/apache/commons/lang3/mutable/MutableObject;IILhe;)V	a	lambda$blendBiome$5
		p	4		biomeX
		p	5		biomeZ
		p	6		biome
	m	(Lakx;)Ldlu;	a	of
		p	0		chunkRegion
	m	(Lakx;Ldhf;)V	a	generateBorderTicks
		p	0		chunkRegion
		p	1		chunk
	m	(Lcqp;Ldia;)V	a	addAroundOldChunksCarvingMaskFilter
		p	0		world
		p	1		chunk
	m	(Lcqw;)Lcqw;	a	getBiomeResolver
		p	1		biomeSupplier
	m	(Lcqw;IIILcrc$f;)Lhe;	a	lambda$getBiomeResolver$4
		p	2		x
		p	3		y
		p	4		z
		p	5		noise
	m	(Ldhe$a;Ldhe;)V	a	lambda$addAroundOldChunksCarvingMaskFilter$8
		p	1		mask
	m	(Ldhf;Lgw;)V	a	generateBorderTick
		p	0		chunk
		p	1		pos
	m	(Ldkl$b;D)D	a	blendDensity
		p	1		pos
		p	2		density
	m	(Ldlu$b;IIIII)D	a	getBlendingDataValue
		p	1		sampler
		p	2		chunkX
		p	3		chunkZ
		p	4		biomeX
		p	5		biomeY
		p	6		biomeZ
	m	(Ldlu$c;III)Z	a	lambda$addAroundOldChunksCarvingMaskFilter$7
		p	1		offsetX
		p	2		y
		p	3		offsetZ
	m	(Ldlv;Ljava/util/Map;)Ldlu$c;	a	makeOldChunkDistanceGetter
		p	0		data
		p	1		neighborData
	m	(Lhb;Ldlv;)Ldlu$c;	a	makeOffsetOldChunkDistanceGetter
		p	0		direction
		p	1		data
	m	(Ljava/util/List;DDD)D	a	lambda$makeOldChunkDistanceGetter$10
		p	1		offsetX
		p	3		y
		p	5		offsetZ
	m	(Ljava/util/List;Lhb;Ldlv;)V	a	lambda$makeOldChunkDistanceGetter$9
		p	1		direction
		p	2		datax
	f	Ldlu;	a	EMPTY
	f	Ldzp;	b	SHIFT_NOISE
	f	I	c	HEIGHT_BLENDING_RANGE_CELLS
	f	I	d	HEIGHT_BLENDING_RANGE_CHUNKS
	f	I	e	DENSITY_BLENDING_RANGE_CELLS
	f	I	f	DENSITY_BLENDING_RANGE_CHUNKS
	f	D	g	OLD_CHUNK_XZ_RADIUS
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap;	h	heightAndBiomeBlendingData
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap;	i	densityBlendingData
c	dlu$1	net/minecraft/world/level/levelgen/blending/Blender$1
	m	(Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap;Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap;)V	<init>	<init>
		p	1		blendingData
		p	2		closeBlendingData
	m	(II)Ldlu$a;	a	blendOffsetAndFactor
		p	1		blockX
		p	2		blockZ
	m	(Lcqw;)Lcqw;	a	getBiomeResolver
		p	1		biomeSupplier
	m	(Ldkl$b;D)D	a	blendDensity
		p	1		pos
		p	2		density
c	dlu$a	net/minecraft/world/level/levelgen/blending/Blender$BlendingOutput
	m	()D	a	alpha
	m	()D	b	blendingOffset
	f	D	a	alpha
	f	D	b	blendingOffset
c	dlu$b	net/minecraft/world/level/levelgen/blending/Blender$CellValueGetter
	m	(Ldlv;III)D	get	get
		p	1		data
		p	2		biomeX
		p	3		biomeY
		p	4		biomeZ
c	dlu$c	net/minecraft/world/level/levelgen/blending/Blender$DistanceGetter
	m	(DDD)D	getDistance	getDistance
		p	1		offsetX
		p	3		y
		p	5		offsetZ
c	dlv	net/minecraft/world/level/levelgen/blending/BlendingData
	m	(IILjava/util/Optional;)V	<init>	<init>
		p	1		oldBottomSectionY
		p	2		oldTopSectionY
		p	3		heights
	m	()Lcpx;	a	getAreaWithOldGeneration
	m	(D)Z	a	lambda$static$2
		p	0		height
	m	(I)I	a	getCellYIndex
		p	1		halfSectionY
	m	(II)I	a	getInsideIndex
		p	0		chunkBiomeX
		p	1		chunkBiomeZ
	m	(III)D	a	getHeight
		p	1		biomeX
		p	2		biomeY
		p	3		biomeZ
	m	(IIIILdlv$b;)V	a	iterateDensities
		p	1		biomeX
		p	2		biomeZ
		p	3		minHalfSectionY
		p	4		maxHalfSectionY
		p	5		consumer
	m	(IIILdlv$a;)V	a	iterateBiomes
		p	1		biomeX
		p	2		biomeY
		p	3		biomeZ
		p	4		consumer
	m	(IILdlv$c;)V	a	iterateHeights
		p	1		biomeX
		p	2		biomeZ
		p	3		consumer
	m	(ILdhf;II)V	a	addValuesForColumn
		p	1		index
		p	2		chunk
		p	3		chunkBlockX
		p	4		chunkBlockZ
	m	(Lakx;II)Ldlv;	a	getOrUpdateBlendingData
		p	0		chunkRegion
		p	1		chunkX
		p	2		chunkZ
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
		p	0		instance
	m	(Lcqp;IIZ)Ljava/util/Set;	a	sideByGenerationAge
		p	0		access
		p	1		chunkX
		p	2		chunkZ
		p	3		oldNoise
	m	(Ldhf;II)I	a	getHeightAtXZ
		p	1		chunk
		p	2		blockX
		p	3		blockZ
	m	(Ldhf;III)[D	a	getDensityColumn
		p	1		chunk
		p	2		chunkBlockX
		p	3		chunkBlockZ
		p	4		surfaceHeight
	m	(Ldhf;Lgw$a;)D	a	read1
		p	0		chunk
		p	1		mutablePos
	m	(Ldhf;Lgw;)Z	a	isGround
		p	0		chunk
		p	1		pos
	m	(Ldhf;Ljava/util/Set;)V	a	calculateData
		p	1		chunk
		p	2		newNoiseChunkDirections
	m	(Ldlv;)Lcom/mojang/serialization/DataResult;	a	validateArraySize
		p	0		data
	m	([D)V	a	lambda$new$6
		p	0		heights2
	m	([DI)D	a	getDensity
		p	1		collidableBlockDensityColumn
		p	2		halfSectionY
	m	()I	b	cellCountPerColumn
	m	(I)I	b	getX
		p	0		index
	m	(II)I	b	getOutsideIndex
		p	0		chunkBiomeX
		p	1		chunkBiomeZ
	m	(III)D	b	getDensity
		p	1		chunkBiomeX
		p	2		halfSectionY
		p	3		chunkBiomeZ
	m	(Ldhf;II)Ljava/util/List;	b	getBiomeColumn
		p	1		chunk
		p	2		chunkBlockX
		p	3		chunkBlockZ
	m	(Ldhf;Lgw$a;)D	b	read7
		p	0		chunk
		p	1		mutablePos
	m	(Ldlv;)Ljava/util/Optional;	b	lambda$static$3
		p	0		blendingData
	m	()I	c	quartCountPerColumn
	m	(I)I	c	getZ
		p	0		index
	m	(Ldlv;)Ljava/lang/Integer;	c	lambda$static$1
		p	0		blendingData
	m	()I	d	getColumnMinY
	m	(I)I	d	zeroIfNegative
	m	(Ldlv;)Ljava/lang/Integer;	d	lambda$static$0
		p	0		blendingData
	m	()I	e	getMinY
	m	()Ljava/lang/String;	f	lambda$validateArraySize$5
	f	I	a	CELL_WIDTH
	f	I	b	CELL_HEIGHT
	f	I	c	CELL_RATIO
	f	D	d	NO_VALUE
	f	Lcom/mojang/serialization/Codec;	e	CODEC
	f	D	f	BLENDING_DENSITY_FACTOR
	f	D	g	SOLID_DENSITY
	f	D	h	AIR_DENSITY
	f	I	i	CELLS_PER_SECTION_Y
	f	I	j	QUARTS_PER_SECTION
	f	I	k	CELL_HORIZONTAL_MAX_INDEX_INSIDE
	f	I	l	CELL_HORIZONTAL_MAX_INDEX_OUTSIDE
	f	I	m	CELL_COLUMN_INSIDE_COUNT
	f	I	n	CELL_COLUMN_OUTSIDE_COUNT
	f	I	o	CELL_COLUMN_COUNT
	f	Lcpx;	p	areaWithOldGeneration
	f	Ljava/util/List;	q	SURFACE_BLOCKS
	f	Z	r	hasCalculatedData
	f	[D	s	heights
	f	Ljava/util/List;	t	biomes
	f	[[D	u	densities
	f	Lcom/mojang/serialization/Codec;	v	DOUBLE_ARRAY_CODEC
c	dlv$a	net/minecraft/world/level/levelgen/blending/BlendingData$BiomeConsumer
	m	(IILhe;)V	consume	consume
		p	1		biomeX
		p	2		biomeZ
		p	3		biome
c	dlv$b	net/minecraft/world/level/levelgen/blending/BlendingData$DensityConsumer
	m	(IIID)V	consume	consume
		p	1		biomeX
		p	2		halfSectionY
		p	3		biomeZ
		p	4		collidableBlockDensity
c	dlv$c	net/minecraft/world/level/levelgen/blending/BlendingData$HeightConsumer
	m	(IID)V	consume	consume
		p	1		biomeX
		p	2		biomeZ
		p	3		height
c	dlw	net/minecraft/world/level/levelgen/blending/package-info
c	dlx	net/minecraft/world/level/levelgen/blockpredicates/AllOfPredicate
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		predicates
	m	()Ldma;	a	type
	m	(Lcqp;Lgw;)Z	a	test
	f	Lcom/mojang/serialization/Codec;	a	CODEC
c	dly	net/minecraft/world/level/levelgen/blockpredicates/AnyOfPredicate
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		predicates
	m	()Ldma;	a	type
	m	(Lcqp;Lgw;)Z	a	test
	f	Lcom/mojang/serialization/Codec;	a	CODEC
c	dlz	net/minecraft/world/level/levelgen/blockpredicates/BlockPredicate
	m	()Ldma;	a	type
	m	(Laqh;)Ldlz;	a	matchesTag
		p	0		offset
	m	(Ldfj;Lhy;)Ldlz;	a	wouldSurvive
		p	0		state
		p	1		offset
	m	(Ldlz;)Ldlz;	a	not
		p	0		predicate
	m	(Ldlz;Ldlz;)Ldlz;	a	allOf
		p	0		first
		p	1		second
	m	(Lha;)Ldlz;	a	hasSturdyFace
		p	0		face
	m	(Lhy;)Ldlz;	a	replaceable
		p	0		offset
	m	(Lhy;Laqh;)Ldlz;	a	matchesTag
		p	0		offset
		p	1		tag
	m	(Lhy;Lha;)Ldlz;	a	hasSturdyFace
		p	0		offset
		p	1		face
	m	(Lhy;Ljava/util/List;)Ldlz;	a	matchesBlocks
		p	0		offset
		p	1		blocks
	m	(Lhy;[Lcsv;)Ldlz;	a	matchesBlocks
		p	0		offset
		p	1		blocks
	m	(Lhy;[Leal;)Ldlz;	a	matchesFluids
		p	0		offset
		p	1		fluids
	m	(Ljava/util/List;)Ldlz;	a	allOf
		p	0		predicates
	m	([Lcsv;)Ldlz;	a	matchesBlocks
		p	0		blocks
	m	([Ldlz;)Ldlz;	a	allOf
		p	0		predicates
	m	([Leal;)Ldlz;	a	matchesFluids
		p	0		fluids
	m	()Ldlz;	b	replaceable
	m	(Ldlz;Ldlz;)Ldlz;	b	anyOf
		p	0		first
		p	1		second
	m	(Lhy;)Ldlz;	b	solid
		p	0		offset
	m	(Lhy;Ljava/util/List;)Ldlz;	b	matchesFluids
		p	0		offset
		p	1		fluids
	m	(Ljava/util/List;)Ldlz;	b	anyOf
		p	0		predicates
	m	([Ldlz;)Ldlz;	b	anyOf
		p	0		predicates
	m	()Ldlz;	c	solid
	m	(Lhy;)Ldlz;	c	noFluid
		p	0		offset
	m	(Ljava/util/List;)Ldlz;	c	matchesBlocks
		p	0		blocks
	m	()Ldlz;	d	noFluid
	m	(Lhy;)Ldlz;	d	insideWorld
		p	0		offset
	m	()Ldlz;	e	alwaysTrue
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Ldlz;	c	ONLY_IN_AIR_PREDICATE
	f	Ldlz;	d	ONLY_IN_AIR_OR_WATER_PREDICATE
c	dma	net/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	lambda$register$0
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Ldma;	a	register
		p	0		id
		p	1		codec
	f	Ldma;	a	MATCHING_BLOCKS
	f	Ldma;	b	MATCHING_BLOCK_TAG
	f	Ldma;	c	MATCHING_FLUIDS
	f	Ldma;	d	HAS_STURDY_FACE
	f	Ldma;	e	SOLID
	f	Ldma;	f	REPLACEABLE
	f	Ldma;	g	WOULD_SURVIVE
	f	Ldma;	h	INSIDE_WORLD_BOUNDS
	f	Ldma;	i	ANY_OF
	f	Ldma;	j	ALL_OF
	f	Ldma;	k	NOT
	f	Ldma;	l	TRUE
c	dmb	net/minecraft/world/level/levelgen/blockpredicates/CombiningPredicate
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		predicates
	m	(Ldmb;)Ljava/util/List;	a	lambda$codec$0
		p	0		predicate
	m	(Ljava/util/function/Function;)Lcom/mojang/serialization/Codec;	a	codec
		p	0		combiner
	m	(Ljava/util/function/Function;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$codec$1
		p	1		instance
	f	Ljava/util/List;	e	predicates
c	dmc	net/minecraft/world/level/levelgen/blockpredicates/HasSturdyFacePredicate
	m	(Lhy;Lha;)V	<init>	<init>
		p	1		offset
		p	2		face
	m	()Ldma;	a	type
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Lcqp;Lgw;)Z	a	test
	m	(Ldmc;)Lha;	a	lambda$static$1
		p	0		predicate
	m	(Ldmc;)Lhy;	b	lambda$static$0
		p	0		predicate
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lhy;	e	offset
	f	Lha;	f	direction
c	dmd	net/minecraft/world/level/levelgen/blockpredicates/InsideWorldBoundsPredicate
	m	(Lhy;)V	<init>	<init>
		p	1		offset
	m	()Ldma;	a	type
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Lcqp;Lgw;)Z	a	test
	m	(Ldmd;)Lhy;	a	lambda$static$0
		p	0		predicate
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lhy;	e	offset
c	dme	net/minecraft/world/level/levelgen/blockpredicates/MatchingBlockTagPredicate
	m	(Lhy;Laqh;)V	<init>	<init>
		p	1		offset
		p	2		tag
	m	()Ldma;	a	type
	m	(Ldfj;)Z	a	test
		p	1		state
	m	(Ldme;)Laqh;	a	lambda$static$0
		p	0		predicate
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$1
		p	0		instance
	f	Laqh;	a	tag
	f	Lcom/mojang/serialization/Codec;	e	CODEC
c	dmf	net/minecraft/world/level/levelgen/blockpredicates/MatchingBlocksPredicate
	m	(Lhy;Lhi;)V	<init>	<init>
		p	1		offset
		p	2		blocks
	m	()Ldma;	a	type
	m	(Ldfj;)Z	a	test
		p	1		state
	m	(Ldmf;)Lhi;	a	lambda$static$0
		p	0		predicate
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$1
		p	0		instance
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lhi;	e	blocks
c	dmg	net/minecraft/world/level/levelgen/blockpredicates/MatchingFluidsPredicate
	m	(Lhy;Lhi;)V	<init>	<init>
		p	1		offset
		p	2		fluids
	m	()Ldma;	a	type
	m	(Ldfj;)Z	a	test
		p	1		state
	m	(Ldmg;)Lhi;	a	lambda$static$0
		p	0		predicate
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$1
		p	0		instance
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lhi;	e	fluids
c	dmh	net/minecraft/world/level/levelgen/blockpredicates/NotPredicate
	m	(Ldlz;)V	<init>	<init>
		p	1		predicate
	m	()Ldma;	a	type
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Lcqp;Lgw;)Z	a	test
	m	(Ldmh;)Ldlz;	a	lambda$static$0
		p	0		predicate
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldlz;	e	predicate
c	dmi	net/minecraft/world/level/levelgen/blockpredicates/ReplaceablePredicate
	m	(Lhy;)V	<init>	<init>
		p	1		offset
	m	()Ldma;	a	type
	m	(Ldfj;)Z	a	test
		p	1		state
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$0
		p	0		instance
	f	Lcom/mojang/serialization/Codec;	a	CODEC
c	dmj	net/minecraft/world/level/levelgen/blockpredicates/SolidPredicate
	m	(Lhy;)V	<init>	<init>
		p	1		offset
	m	()Ldma;	a	type
	m	(Ldfj;)Z	a	test
		p	1		state
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$0
		p	0		instance
	f	Lcom/mojang/serialization/Codec;	a	CODEC
c	dmk	net/minecraft/world/level/levelgen/blockpredicates/StateTestingPredicate
	m	(Lhy;)V	<init>	<init>
		p	1		offset
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P1;	a	stateTestingCodec
		p	0		instance
	m	(Lcqp;Lgw;)Z	a	test
	m	(Ldfj;)Z	a	test
		p	1		state
	m	(Ldmk;)Lhy;	a	lambda$stateTestingCodec$0
		p	0		predicate
	f	Lhy;	f	offset
c	dml	net/minecraft/world/level/levelgen/blockpredicates/TrueBlockPredicate
	m	()Ldma;	a	type
	m	(Lcqp;Lgw;)Z	a	test
	m	()Ldml;	f	lambda$static$0
	f	Ldml;	a	INSTANCE
	f	Lcom/mojang/serialization/Codec;	e	CODEC
c	dmm	net/minecraft/world/level/levelgen/blockpredicates/WouldSurvivePredicate
	m	(Lhy;Ldfj;)V	<init>	<init>
		p	1		offset
		p	2		state
	m	()Ldma;	a	type
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Lcqp;Lgw;)Z	a	test
	m	(Ldmm;)Ldfj;	a	lambda$static$1
		p	0		predicate
	m	(Ldmm;)Lhy;	b	lambda$static$0
		p	0		predicate
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lhy;	e	offset
	f	Ldfj;	f	state
c	dmn	net/minecraft/world/level/levelgen/blockpredicates/package-info
c	dmo	net/minecraft/world/level/levelgen/carver/CanyonCarverConfiguration
	m	(FLdtp;Lbgb;Ldlm;Ldmr;Lhi;Lbgb;Ldmo$a;)V	<init>	<init>
		p	1		probability
		p	2		y
		p	3		yScale
		p	4		lavaLevel
		p	5		debugConfig
		p	6		replaceable
		p	7		verticalRotation
		p	8		shape
	m	(Ldmq;Lbgb;Ldmo$a;)V	<init>	<init>
		p	1		config
		p	2		verticalRotation
		p	3		shape
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	(Ldmo;)Ldmo$a;	a	lambda$static$2
		p	0		config
	m	(Ldmo;)Lbgb;	b	lambda$static$1
		p	0		config
	m	(Ldmo;)Ldmq;	c	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lbgb;	b	verticalRotation
	f	Ldmo$a;	c	shape
c	dmo$a	net/minecraft/world/level/levelgen/carver/CanyonCarverConfiguration$CanyonShapeConfiguration
	m	(Lbgb;Lbgb;ILbgb;FF)V	<init>	<init>
		p	1		distanceFactor
		p	2		thickness
		p	3		widthSmoothness
		p	4		horizontalRadiusFactor
		p	5		verticalRadiusDefaultFactor
		p	6		verticalRadiusCenterFactor
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$6
		p	0		instance
	m	(Ldmo$a;)Ljava/lang/Float;	a	lambda$static$5
		p	0		shape
	m	(Ldmo$a;)Ljava/lang/Float;	b	lambda$static$4
		p	0		shape
	m	(Ldmo$a;)Lbgb;	c	lambda$static$3
		p	0		shape
	m	(Ldmo$a;)Ljava/lang/Integer;	d	lambda$static$2
		p	0		shape
	m	(Ldmo$a;)Lbgb;	e	lambda$static$1
		p	0		shape
	m	(Ldmo$a;)Lbgb;	f	lambda$static$0
		p	0		shape
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lbgb;	b	distanceFactor
	f	Lbgb;	c	thickness
	f	I	d	widthSmoothness
	f	Lbgb;	e	horizontalRadiusFactor
	f	F	f	verticalRadiusDefaultFactor
	f	F	g	verticalRadiusCenterFactor
c	dmp	net/minecraft/world/level/levelgen/carver/CanyonWorldCarver
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldmo;Lasc;)Z	a	isStartChunk
		p	1		config
		p	2		random
	m	(Ldmo;Lasc;DFF)D	a	updateVerticalRadius
		p	1		config
		p	2		random
		p	3		pitch
		p	5		branchCount
		p	6		branchIndex
	m	(Ldmq;Lasc;)Z	a	isStartChunk
		p	1		config
		p	2		random
	m	(Ldms;Ldmo;Lasc;)[F	a	initWidthFactors
		p	1		context
		p	2		config
		p	3		random
	m	(Ldms;Ldmo;Ldhf;Ljava/util/function/Function;JLdke;DDDFFFIIDLdhe;)V	a	doCarve
		p	1		context
		p	2		config
		p	3		chunk
		p	4		posToBiome
		p	5		seed
		p	7		aquiferSampler
		p	8		x
		p	10		y
		p	12		z
		p	14		width
		p	15		yaw
		p	16		pitch
		p	17		branchStartIndex
		p	18		branchCount
		p	19		yawPitchRatio
		p	21		mask
	m	(Ldms;Ldmo;Ldhf;Ljava/util/function/Function;Lasc;Ldke;Lcpc;Ldhe;)Z	a	carve
		p	1		context
		p	2		config
		p	3		chunk
		p	4		posToBiome
		p	5		random
		p	6		aquiferSampler
		p	7		pos
		p	8		mask
	m	(Ldms;Ldmq;Ldhf;Ljava/util/function/Function;Lasc;Ldke;Lcpc;Ldhe;)Z	a	carve
		p	1		context
		p	2		config
		p	3		chunk
		p	4		posToBiome
		p	5		random
		p	6		aquiferSampler
		p	7		pos
		p	8		mask
	m	(Ldms;[FDDDI)Z	a	shouldSkip
		p	1		context
		p	2		horizontalStretchFactors
		p	3		scaledRelativeX
		p	5		scaledRelativeY
		p	7		scaledRelativeZ
		p	9		y
	m	([FLdms;DDDI)Z	a	lambda$doCarve$0
		p	2		contextx
		p	3		scaledRelativeX
		p	5		scaledRelativeY
		p	7		scaledRelativeZ
		p	9		yx
c	dmq	net/minecraft/world/level/levelgen/carver/CarverConfiguration
	m	(FLdtp;Lbgb;Ldlm;Ldmr;Lhi;)V	<init>	<init>
		p	1		probability
		p	2		y
		p	3		yScale
		p	4		lavaLevel
		p	5		debugConfig
		p	6		replaceable
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$6
		p	0		instance
	m	(Ldmq;)Lhi;	a	lambda$static$5
		p	0		config
	m	(Ldmq;)Ldmr;	b	lambda$static$4
		p	0		config
	m	(Ldmq;)Ldlm;	c	lambda$static$3
		p	0		config
	m	(Ldmq;)Lbgb;	d	lambda$static$2
		p	0		config
	m	(Ldmq;)Ldtp;	e	lambda$static$1
		p	0		config
	m	(Ldmq;)Ljava/lang/Float;	f	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/MapCodec;	d	CODEC
	f	Ldtp;	e	y
	f	Lbgb;	f	yScale
	f	Ldlm;	g	lavaLevel
	f	Ldmr;	h	debugSettings
	f	Lhi;	i	replaceable
c	dmr	net/minecraft/world/level/levelgen/carver/CarverDebugSettings
	m	(ZLdfj;Ldfj;Ldfj;Ldfj;)V	<init>	<init>
		p	1		debugMode
		p	2		airState
		p	3		waterState
		p	4		lavaState
		p	5		barrierState
	m	()Z	a	isDebugMode
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ldfj;Ldfj;Ldfj;Ldfj;)Ldmr;	a	of
		p	0		airState
		p	1		waterState
		p	2		lavaState
		p	3		barrierState
	m	(ZLdfj;)Ldmr;	a	of
		p	0		debugMode
		p	1		debugState
	m	(ZLdfj;Ldfj;Ldfj;Ldfj;)Ldmr;	a	of
		p	0		debugMode
		p	1		airState
		p	2		waterState
		p	3		lavaState
		p	4		barrierState
	m	()Ldfj;	b	getAirState
	m	()Ldfj;	c	getWaterState
	m	()Ldfj;	d	getLavaState
	m	()Ldfj;	e	getBarrierState
	f	Ldmr;	a	DEFAULT
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Z	c	debugMode
	f	Ldfj;	d	airState
	f	Ldfj;	e	waterState
	f	Ldfj;	f	lavaState
	f	Ldfj;	g	barrierState
c	dms	net/minecraft/world/level/levelgen/carver/CarvingContext
	m	(Ldkv;Lhr;Lcpx;Ldkw;Ldlg;Ldlj$o;)V	<init>	<init>
		p	1		noiseChunkGenerator
		p	2		registryManager
		p	3		heightLimitView
		p	4		chunkNoiseSampler
		p	5		noiseConfig
		p	6		materialRule
	m	(Ljava/util/function/Function;Ldhf;Lgw;Z)Ljava/util/Optional;	a	topMaterial
		p	1		posToBiome
		p	2		chunk
		p	3		pos
		p	4		hasFluid
	m	()Lhr;	c	registryAccess
	m	()Ldlg;	d	randomState
	f	Lhr;	a	registryAccess
	f	Ldkw;	b	noiseChunk
	f	Ldlg;	c	randomState
	f	Ldlj$o;	d	surfaceRule
c	dmt	net/minecraft/world/level/levelgen/carver/CaveCarverConfiguration
	m	(FLdtp;Lbgb;Ldlm;Ldmr;Lhi;Lbgb;Lbgb;Lbgb;)V	<init>	<init>
		p	1		probability
		p	2		y
		p	3		yScale
		p	4		lavaLevel
		p	5		debugConfig
		p	6		replaceable
		p	7		horizontalRadiusMultiplier
		p	8		verticalRadiusMultiplier
		p	9		floorLevel
	m	(FLdtp;Lbgb;Ldlm;Lhi;Lbgb;Lbgb;Lbgb;)V	<init>	<init>
		p	1		probability
		p	2		y
		p	3		yScale
		p	4		lavaLevel
		p	5		replaceable
		p	6		horizontalRadiusMultiplier
		p	7		verticalRadiusMultiplier
		p	8		floorLevel
	m	(Ldmq;Lbgb;Lbgb;Lbgb;)V	<init>	<init>
		p	1		config
		p	2		horizontalRadiusMultiplier
		p	3		verticalRadiusMultiplier
		p	4		floorLevel
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
		p	0		instance
	m	(Ldmt;)Lbgb;	a	lambda$static$3
		p	0		config
	m	(Ldmt;)Lbgb;	b	lambda$static$2
		p	0		config
	m	(Ldmt;)Lbgb;	c	lambda$static$1
		p	0		config
	m	(Ldmt;)Ldmq;	d	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lbgb;	b	horizontalRadiusMultiplier
	f	Lbgb;	c	verticalRadiusMultiplier
	f	Lbgb;	j	floorLevel
c	dmu	net/minecraft/world/level/levelgen/carver/CaveWorldCarver
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	()I	a	getCaveBound
	m	(DDDD)Z	a	shouldSkip
		p	0		scaledRelativeX
		p	2		scaledRelativeY
		p	4		scaledRelativeZ
		p	6		floorY
	m	(DLdms;DDDI)Z	a	lambda$carve$0
		p	2		contextx
		p	3		scaledRelativeX
		p	5		scaledRelativeY
		p	7		scaledRelativeZ
		p	9		y
	m	(Lasc;)F	a	getThickness
		p	1		random
	m	(Ldmq;Lasc;)Z	a	isStartChunk
		p	1		config
		p	2		random
	m	(Ldms;Ldmq;Ldhf;Ljava/util/function/Function;Lasc;Ldke;Lcpc;Ldhe;)Z	a	carve
		p	1		context
		p	2		config
		p	3		chunk
		p	4		posToBiome
		p	5		random
		p	6		aquiferSampler
		p	7		pos
		p	8		mask
	m	(Ldms;Ldmt;Ldhf;Ljava/util/function/Function;JLdke;DDDDDFFFIIDLdhe;Ldmx$a;)V	a	createTunnel
		p	1		context
		p	2		config
		p	3		chunk
		p	4		posToBiome
		p	5		seed
		p	7		aquiferSampler
		p	8		x
		p	10		y
		p	12		z
		p	14		horizontalScale
		p	16		verticalScale
		p	18		width
		p	19		yaw
		p	20		pitch
		p	21		branchStartIndex
		p	22		branchCount
		p	23		yawPitchRatio
		p	25		mask
		p	26		skipPredicate
	m	(Ldms;Ldmt;Ldhf;Ljava/util/function/Function;Lasc;Ldke;Lcpc;Ldhe;)Z	a	carve
		p	1		context
		p	2		config
		p	3		chunk
		p	4		posToBiome
		p	5		random
		p	6		aquiferSampler
		p	7		pos
		p	8		mask
	m	(Ldms;Ldmt;Ldhf;Ljava/util/function/Function;Ldke;DDDFDLdhe;Ldmx$a;)V	a	createRoom
		p	1		context
		p	2		config
		p	3		chunk
		p	4		posToBiome
		p	5		aquiferSampler
		p	15		mask
		p	16		skipPredicate
	m	(Ldmt;Lasc;)Z	a	isStartChunk
		p	1		config
		p	2		random
	m	()D	b	getYScale
c	dmv	net/minecraft/world/level/levelgen/carver/ConfiguredWorldCarver
	m	(Ldmx;Ldmq;)V	<init>	<init>
		p	1		carver
		p	2		config
	m	()Ldmx;	a	worldCarver
	m	(Lasc;)Z	a	isStartChunk
		p	1		random
	m	(Ldms;Ldhf;Ljava/util/function/Function;Lasc;Ldke;Lcpc;Ldhe;)Z	a	carve
		p	1		context
		p	2		chunk
		p	3		posToBiome
		p	4		random
		p	5		aquiferSampler
		p	6		pos
		p	7		mask
	m	(Ldmv;)Ldmx;	a	lambda$static$0
		p	0		configuredCarver
	m	()Ldmq;	b	config
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lcom/mojang/serialization/Codec;	c	LIST_CODEC
	f	Ldmx;	d	worldCarver
	f	Ldmq;	e	config
c	dmw	net/minecraft/world/level/levelgen/carver/NetherWorldCarver
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	()I	a	getCaveBound
	m	(Lasc;)F	a	getThickness
		p	1		random
	m	(Ldms;Ldmq;Ldhf;Ljava/util/function/Function;Ldhe;Lgw$a;Lgw$a;Ldke;Lorg/apache/commons/lang3/mutable/MutableBoolean;)Z	a	carveBlock
		p	1		context
		p	2		config
		p	3		chunk
		p	4		posToBiome
		p	5		mask
		p	6		pos
		p	7		tmp
		p	8		aquiferSampler
		p	9		replacedGrassy
	m	(Ldms;Ldmt;Ldhf;Ljava/util/function/Function;Ldhe;Lgw$a;Lgw$a;Ldke;Lorg/apache/commons/lang3/mutable/MutableBoolean;)Z	a	carveBlock
		p	1		context
		p	2		config
		p	3		chunk
		p	4		posToBiome
		p	5		mask
		p	6		pos
		p	7		tmp
		p	8		aquiferSampler
		p	9		replacedGrassy
	m	()D	b	getYScale
c	dmx	net/minecraft/world/level/levelgen/carver/WorldCarver
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lcpc;DDIIF)Z	a	canReach
		p	0		pos
		p	1		x
		p	3		z
		p	5		branchIndex
		p	6		branchCount
		p	7		baseWidth
	m	(Ldhf;Lgw$a;Ldfj;)V	a	lambda$carveBlock$0
		p	2		state
	m	(Ldmq;)Ldmv;	a	configured
		p	1		config
	m	(Ldmq;Lasc;)Z	a	isStartChunk
		p	1		config
		p	2		random
	m	(Ldmq;Ldfj;)Z	a	canReplaceBlock
		p	1		config
		p	2		state
	m	(Ldms;Ldmq;Ldhf;Ljava/util/function/Function;Lasc;Ldke;Lcpc;Ldhe;)Z	a	carve
		p	1		context
		p	2		config
		p	3		chunk
		p	4		posToBiome
		p	5		random
		p	6		aquiferSampler
		p	7		pos
		p	8		mask
	m	(Ldms;Ldmq;Ldhf;Ljava/util/function/Function;Ldhe;Lgw$a;Lgw$a;Ldke;Lorg/apache/commons/lang3/mutable/MutableBoolean;)Z	a	carveBlock
		p	1		context
		p	2		config
		p	3		chunk
		p	4		posToBiome
		p	5		mask
		p	6		pos
		p	7		tmp
		p	8		aquiferSampler
		p	9		replacedGrassy
	m	(Ldms;Ldmq;Ldhf;Ljava/util/function/Function;Ldke;DDDDDLdhe;Ldmx$a;)Z	a	carveEllipsoid
		p	1		context
		p	2		config
		p	3		chunk
		p	4		posToBiome
		p	5		aquiferSampler
		p	6		x
		p	8		y
		p	10		z
		p	12		width
		p	14		height
		p	16		mask
		p	17		skipPredicate
	m	(Ldms;Ldmq;Lgw;Ldke;)Ldfj;	a	getCarveState
		p	1		context
		p	2		config
		p	3		pos
		p	4		sampler
	m	(Ljava/lang/String;Ldmx;)Ldmx;	a	register
		p	0		name
		p	1		carver
	m	(Ldmq;)Z	b	isDebugEnabled
		p	0		config
	m	(Ldmq;Ldfj;)Ldfj;	b	getDebugState
		p	0		config
		p	1		state
	m	()Lcom/mojang/serialization/Codec;	c	configuredCodec
	m	()I	d	getRange
	f	Ldmx;	a	CAVE
	f	Ldmx;	b	NETHER_CAVE
	f	Ldmx;	c	CANYON
	f	Ldfj;	d	AIR
	f	Ldfj;	e	CAVE_AIR
	f	Leam;	f	WATER
	f	Leam;	g	LAVA
	f	Ljava/util/Set;	h	liquids
	f	Lcom/mojang/serialization/Codec;	i	configuredCodec
c	dmx$a	net/minecraft/world/level/levelgen/carver/WorldCarver$CarveSkipChecker
	m	(Ldms;DDDI)Z	shouldSkip	shouldSkip
		p	1		context
		p	2		scaledRelativeX
		p	4		scaledRelativeY
		p	6		scaledRelativeZ
		p	8		y
c	dmy	net/minecraft/world/level/levelgen/carver/package-info
c	dmz	net/minecraft/world/level/levelgen/feature/AbstractHugeMushroomFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(IIII)I	a	getTreeRadiusForHeight
		p	3		capSize
		p	4		y
	m	(Lasc;)I	a	getTreeHeight
		p	1		random
	m	(Lcpw;Lasc;Lgw;ILgw$a;Ldqc;)V	a	makeCap
		p	1		world
		p	2		random
		p	3		start
		p	4		y
		p	5		mutable
		p	6		config
	m	(Lcpw;Lasc;Lgw;Ldqc;ILgw$a;)V	a	placeTrunk
		p	1		world
		p	2		random
		p	3		pos
		p	4		config
		p	5		height
		p	6		mutablePos
	m	(Lcpw;Lgw;ILgw$a;Ldqc;)Z	a	isValidPosition
		p	1		world
		p	2		pos
		p	3		height
		p	4		mutablePos
		p	5		config
	m	(Ldny;)Z	a	place
		p	1		context
c	dna	net/minecraft/world/level/levelgen/feature/BambooFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldny;)Z	a	place
		p	1		context
	f	Ldfj;	a	BAMBOO_TRUNK
	f	Ldfj;	b	BAMBOO_FINAL_LARGE
	f	Ldfj;	c	BAMBOO_TOP_LARGE
	f	Ldfj;	d	BAMBOO_TOP_SMALL
c	dnb	net/minecraft/world/level/levelgen/feature/BasaltColumnsFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lcpw;ILgw$a;)Z	a	canPlaceAt
		p	0		world
		p	1		seaLevel
		p	2		mutablePos
	m	(Lcpw;ILgw$a;I)Lgw;	a	findSurface
		p	0		world
		p	1		seaLevel
		p	2		mutablePos
		p	3		distance
	m	(Lcpw;ILgw;)Z	a	isAirOrLavaOcean
		p	0		world
		p	1		seaLevel
		p	2		pos
	m	(Lcpw;ILgw;II)Z	a	placeColumn
		p	1		world
		p	2		seaLevel
		p	3		pos
		p	4		height
		p	5		reach
	m	(Lcpw;Lgw$a;I)Lgw;	a	findAir
		p	0		world
		p	1		mutablePos
		p	2		distance
	m	(Ldny;)Z	a	place
		p	1		context
	f	Lcom/google/common/collect/ImmutableList;	a	CANNOT_PLACE_ON
	f	I	an	UNCLUSTERED_SIZE
	f	I	b	CLUSTERED_REACH
	f	I	c	CLUSTERED_SIZE
	f	I	d	UNCLUSTERED_REACH
c	dnc	net/minecraft/world/level/levelgen/feature/BasaltPillarFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lcpw;Lasc;Lgw;)V	a	placeBaseHangOff
		p	1		world
		p	2		random
		p	3		pos
	m	(Ldny;)Z	a	place
		p	1		context
	m	(Lcpw;Lasc;Lgw;)Z	b	placeHangOff
		p	1		world
		p	2		random
		p	3		pos
c	dnd	net/minecraft/world/level/levelgen/feature/BlockBlobFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldny;)Z	a	place
		p	1		context
c	dne	net/minecraft/world/level/levelgen/feature/BlockColumnFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldny;)Z	a	place
		p	1		context
	m	([IIIZ)V	a	truncate
		p	0		layerHeights
		p	1		expectedHeight
		p	2		actualHeight
		p	3		prioritizeTip
c	dnf	net/minecraft/world/level/levelgen/feature/BlockPileFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lcpw;Lgw;Lasc;)Z	a	mayPlaceOn
		p	1		world
		p	2		pos
		p	3		random
	m	(Lcpw;Lgw;Lasc;Ldps;)V	a	tryPlaceBlock
		p	1		world
		p	2		pos
		p	3		random
		p	4		config
	m	(Ldny;)Z	a	place
		p	1		context
c	dng	net/minecraft/world/level/levelgen/feature/BlueIceFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldny;)Z	a	place
		p	1		context
c	dnh	net/minecraft/world/level/levelgen/feature/BonusChestFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldny;)Z	a	place
		p	1		context
c	dni	net/minecraft/world/level/levelgen/feature/ChorusPlantFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldny;)Z	a	place
		p	1		context
c	dnj	net/minecraft/world/level/levelgen/feature/ConfiguredFeature
	m	(Ldnw;Ldqa;)V	<init>	<init>
		p	1		feature
		p	2		config
	m	()Ljava/util/stream/Stream;	a	getFeatures
	m	(Lcqp;Ldhg;Lasc;Lgw;)Z	a	place
		p	1		world
		p	2		chunkGenerator
		p	3		random
		p	4		origin
	m	(Ldnj;)Ldnw;	a	lambda$static$0
		p	0		configuredFeature
	m	()Ldnw;	b	feature
	m	()Ldqa;	c	config
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lcom/mojang/serialization/Codec;	c	LIST_CODEC
	f	Ldnw;	d	feature
	f	Ldqa;	e	config
c	dnk	net/minecraft/world/level/levelgen/feature/CoralClawFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lcpw;Lasc;Lgw;Ldfj;)Z	a	placeFeature
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
c	dnl	net/minecraft/world/level/levelgen/feature/CoralFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lasc;Lhi$c;)Ljava/util/Optional;	a	lambda$placeCoralBlock$3
		p	1		blocks
	m	(Lcpw;Lasc;Lgw;Ldfj;)Z	a	placeFeature
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcpw;Lgw;Lcsv;)V	a	lambda$placeCoralBlock$2
		p	2		block
	m	(Ldny;)Z	a	place
		p	1		context
	m	(Lha;Lcpw;Lgw;Lcsv;)V	a	lambda$placeCoralBlock$4
		p	3		block
	m	(Lasc;Lhi$c;)Ljava/util/Optional;	b	lambda$placeCoralBlock$1
		p	1		blocks
	m	(Lcpw;Lasc;Lgw;Ldfj;)Z	b	placeCoralBlock
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lasc;Lhi$c;)Ljava/util/Optional;	c	lambda$place$0
		p	1		blocks
c	dnm	net/minecraft/world/level/levelgen/feature/CoralMushroomFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lcpw;Lasc;Lgw;Ldfj;)Z	a	placeFeature
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
c	dnn	net/minecraft/world/level/levelgen/feature/CoralTreeFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lcpw;Lasc;Lgw;Ldfj;)Z	a	placeFeature
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
c	dno	net/minecraft/world/level/levelgen/feature/DeltaFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lcpw;Lgw;Ldpw;)Z	a	isClear
		p	0		world
		p	1		pos
		p	2		config
	m	(Ldny;)Z	a	place
		p	1		context
	f	Lcom/google/common/collect/ImmutableList;	a	CANNOT_REPLACE
	f	[Lha;	b	DIRECTIONS
	f	D	c	RIM_SPAWN_CHANCE
c	dnp	net/minecraft/world/level/levelgen/feature/DesertWellFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldny;)Z	a	place
		p	1		context
	m	(Lgw;Ldcz;)V	a	lambda$placeSusSand$0
		p	1		blockEntity
	m	(Lcqp;Lgw;)V	b	placeSusSand
		p	0		world
		p	1		pos
	f	Ldfs;	a	IS_SAND
	f	Ldfj;	an	water
	f	Ldfj;	b	sand
	f	Ldfj;	c	sandSlab
	f	Ldfj;	d	sandstone
c	dnq	net/minecraft/world/level/levelgen/feature/DiskFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldny;)Z	a	place
		p	1		context
	m	(Ldpx;Lcqp;Lasc;IILgw$a;)Z	a	placeColumn
		p	1		config
		p	2		world
		p	3		random
		p	4		topY
		p	5		bottomY
		p	6		pos
c	dnr	net/minecraft/world/level/levelgen/feature/DripstoneClusterFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(IIIILdpy;)D	a	getChanceOfStalagmiteOrStalactite
		p	1		radiusX
		p	2		radiusZ
		p	3		localX
		p	4		localZ
		p	5		config
	m	(Lasc;FFFF)F	a	randomBetweenBiased
		p	0		random
		p	1		min
		p	2		max
		p	3		mean
		p	4		deviation
	m	(Lasc;IIFILdpy;)I	a	getDripstoneHeight
		p	1		random
		p	2		localX
		p	3		localZ
		p	4		density
		p	5		height
		p	6		config
	m	(Lcpw;Lgw;)Z	a	canBeAdjacentToWater
		p	1		world
		p	2		pos
	m	(Lcpy;Lgw;)Z	a	isLava
		p	1		world
		p	2		pos
	m	(Lcqp;Lasc;Lgw;IIFDIFLdpy;)V	a	placeColumn
		p	1		world
		p	2		random
		p	3		pos
		p	4		localX
		p	5		localZ
		p	6		wetness
		p	7		dripstoneChance
		p	9		height
		p	10		density
		p	11		config
	m	(Lcqp;Lgw;ILha;)V	a	replaceBlocksWithDripstoneBlocks
		p	1		world
		p	2		pos
		p	3		height
		p	4		direction
	m	(Ldny;)Z	a	place
		p	1		context
	m	(Lcqp;Lgw;)Z	b	canPlacePool
		p	1		world
		p	2		pos
c	dns	net/minecraft/world/level/levelgen/feature/DripstoneUtils
	m	(DDDD)D	a	getDripstoneHeight
		p	0		radius
		p	2		scale
		p	4		heightScale
		p	6		bluntness
	m	(Lcpw;Lgw$a;Lha;Ldfj;)V	a	lambda$growPointedDripstone$0
		p	3		state
	m	(Lcpw;Lgw;)Z	a	isEmptyOrWater
		p	0		world
		p	1		pos
	m	(Lcpw;Lgw;Lha;IZ)V	a	growPointedDripstone
		p	0		world
		p	1		pos
		p	2		direction
		p	3		height
		p	4		merge
	m	(Lcqp;Lgw;I)Z	a	isCircleMostlyEmbeddedInStone
		p	0		world
		p	1		pos
		p	2		height
	m	(Ldfj;)Z	a	isDripstoneBaseOrLava
		p	0		state
	m	(Lha;IZLjava/util/function/Consumer;)V	a	buildBaseToTipColumn
		p	0		direction
		p	1		height
		p	2		merge
		p	3		callback
	m	(Lha;Ldgg;)Ldfj;	a	createPointedDripstone
		p	0		direction
		p	1		thickness
	m	(Lcpw;Lgw;)Z	b	isEmptyOrWaterOrLava
		p	0		world
		p	1		pos
	m	(Ldfj;)Z	b	isDripstoneBase
		p	0		state
	m	(Lcpw;Lgw;)Z	c	placeDripstoneBlockIfPossible
		p	0		world
		p	1		pos
	m	(Ldfj;)Z	c	isEmptyOrWater
		p	0		state
	m	(Ldfj;)Z	d	isNeitherEmptyNorWater
		p	0		state
	m	(Ldfj;)Z	e	isEmptyOrWaterOrLava
		p	0		state
c	dnt	net/minecraft/world/level/levelgen/feature/EndGatewayFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lcqp;Lgw;Ldpz;Lgw;)V	a	lambda$place$0
		p	3		pos
	m	(Ldny;)Z	a	place
		p	1		context
c	dnu	net/minecraft/world/level/levelgen/feature/EndIslandFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldny;)Z	a	place
		p	1		context
c	dnv	net/minecraft/world/level/levelgen/feature/EndPodiumFeature
	m	(Z)V	<init>	<init>
		p	1		open
	m	(Ldny;)Z	a	place
		p	1		context
	m	(Lgw;)Lgw;	a	getLocation
		p	0		pos
	f	I	a	PODIUM_RADIUS
	f	Lgw;	an	END_PODIUM_LOCATION
	f	Z	ao	active
	f	I	b	PODIUM_PILLAR_HEIGHT
	f	I	c	RIM_RADIUS
	f	F	d	CORNER_ROUNDING
c	dnw	net/minecraft/world/level/levelgen/feature/Feature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	()Lcom/mojang/serialization/Codec;	a	configuredCodec
	m	(Laqh;)Ljava/util/function/Predicate;	a	isReplaceable
		p	0		tag
	m	(Laqh;Ldfj;)Z	a	lambda$isReplaceable$1
		p	1		state
	m	(Lcqb;Lgw;)Z	a	isGrassOrDirt
		p	0		world
		p	1		pos
	m	(Lcqd;Lgw;Ldfj;)V	a	setBlock
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcqp;Lgw;)V	a	markAboveForPostProcessing
		p	1		world
		p	2		pos
	m	(Lcqp;Lgw;Ldfj;Ljava/util/function/Predicate;)V	a	safeSetBlock
		p	1		world
		p	2		pos
		p	3		state
		p	4		predicate
	m	(Ldfj;)Z	a	isStone
		p	0		state
	m	(Ldny;)Z	a	place
		p	1		context
	m	(Ldqa;)Ldnj;	a	lambda$new$0
		p	1		config
	m	(Ldqa;Lcqp;Ldhg;Lasc;Lgw;)Z	a	place
		p	1		config
		p	2		world
		p	3		chunkGenerator
		p	4		random
		p	5		pos
	m	(Ljava/lang/String;Ldnw;)Ldnw;	a	register
		p	0		name
		p	1		feature
	m	(Ljava/util/function/Function;Lgw;)Z	a	isAdjacentToAir
		p	0		posToState
		p	1		pos
	m	(Ljava/util/function/Function;Lgw;Ljava/util/function/Predicate;)Z	a	checkNeighbors
		p	0		posToState
		p	1		pos
		p	2		predicate
	m	(Ldfj;)Z	b	isDirt
		p	0		state
	f	Ldnw;	A	MULTIFACE_GROWTH
	f	Ldnw;	B	UNDERWATER_MAGMA
	f	Ldnw;	C	MONSTER_ROOM
	f	Ldnw;	D	BLUE_ICE
	f	Ldnw;	E	ICEBERG
	f	Ldnw;	F	FOREST_ROCK
	f	Ldnw;	G	DISK
	f	Ldnw;	H	LAKE
	f	Ldnw;	I	ORE
	f	Ldnw;	J	END_SPIKE
	f	Ldnw;	K	END_ISLAND
	f	Ldnw;	L	END_GATEWAY
	f	Ldpc;	M	SEAGRASS
	f	Ldnw;	N	KELP
	f	Ldnw;	O	CORAL_TREE
	f	Ldnw;	P	CORAL_MUSHROOM
	f	Ldnw;	Q	CORAL_CLAW
	f	Ldnw;	R	SEA_PICKLE
	f	Ldnw;	S	SIMPLE_BLOCK
	f	Ldnw;	T	BAMBOO
	f	Ldnw;	U	HUGE_FUNGUS
	f	Ldnw;	V	NETHER_FOREST_VEGETATION
	f	Ldnw;	W	WEEPING_VINES
	f	Ldnw;	X	TWISTING_VINES
	f	Ldnw;	Y	BASALT_COLUMNS
	f	Ldnw;	Z	DELTA_FEATURE
	f	Lcom/mojang/serialization/Codec;	a	configuredCodec
	f	Ldnw;	aa	REPLACE_BLOBS
	f	Ldnw;	ab	FILL_LAYER
	f	Ldnh;	ac	BONUS_CHEST
	f	Ldnw;	ad	BASALT_PILLAR
	f	Ldnw;	ae	SCATTERED_ORE
	f	Ldnw;	af	RANDOM_SELECTOR
	f	Ldnw;	ag	SIMPLE_RANDOM_SELECTOR
	f	Ldnw;	ah	RANDOM_BOOLEAN_SELECTOR
	f	Ldnw;	ai	GEODE
	f	Ldnw;	aj	DRIPSTONE_CLUSTER
	f	Ldnw;	ak	LARGE_DRIPSTONE
	f	Ldnw;	al	POINTED_DRIPSTONE
	f	Ldnw;	am	SCULK_PATCH
	f	Ldnw;	e	NO_OP
	f	Ldnw;	f	TREE
	f	Ldnw;	g	FLOWER
	f	Ldnw;	h	NO_BONEMEAL_FLOWER
	f	Ldnw;	i	RANDOM_PATCH
	f	Ldnw;	j	BLOCK_PILE
	f	Ldnw;	k	SPRING
	f	Ldnw;	l	CHORUS_PLANT
	f	Ldnw;	m	REPLACE_SINGLE_BLOCK
	f	Ldnw;	n	VOID_START_PLATFORM
	f	Ldnw;	o	DESERT_WELL
	f	Ldnw;	p	FOSSIL
	f	Ldnw;	q	HUGE_RED_MUSHROOM
	f	Ldnw;	r	HUGE_BROWN_MUSHROOM
	f	Ldnw;	s	ICE_SPIKE
	f	Ldnw;	t	GLOWSTONE_BLOB
	f	Ldnw;	u	FREEZE_TOP_LAYER
	f	Ldnw;	v	VINES
	f	Ldnw;	w	BLOCK_COLUMN
	f	Ldnw;	x	VEGETATION_PATCH
	f	Ldnw;	y	WATERLOGGED_VEGETATION_PATCH
	f	Ldnw;	z	ROOT_SYSTEM
c	dnx	net/minecraft/world/level/levelgen/feature/FeatureCountTracker
	m	()V	a	clearCounts
	m	(Lakq;)V	a	chunkDecorated
		p	0		world
	m	(Lakq;Ldnj;Ljava/util/Optional;)V	a	featurePlaced
		p	0		world
		p	1		configuredFeature
		p	2		placedFeature
	m	(Lakq;Ldnx$b;)V	a	lambda$logCounts$2
		p	0		world
		p	1		features
	m	(Ldnx$a;Ljava/lang/Integer;)Ljava/lang/Integer;	a	lambda$featurePlaced$0
		p	0		featureData
		p	1		count
	m	(Ljava/lang/String;Ljava/lang/Integer;Lhq;Ldnx$a;Ljava/lang/Integer;)V	a	lambda$logCounts$1
		p	3		featureData
		p	4		count
	m	()V	b	logCounts
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lcom/google/common/cache/LoadingCache;	b	data
c	dnx$1	net/minecraft/world/level/levelgen/feature/FeatureCountTracker$1
	m	(Lakq;)Ldnx$b;	a	load
c	dnx$a	net/minecraft/world/level/levelgen/feature/FeatureCountTracker$FeatureData
	m	()Ldnj;	a	feature
	m	()Ljava/util/Optional;	b	topFeature
	f	Ldnj;	a	feature
	f	Ljava/util/Optional;	b	topFeature
c	dnx$b	net/minecraft/world/level/levelgen/feature/FeatureCountTracker$LevelData
	m	()Lit/unimi/dsi/fastutil/objects/Object2IntMap;	a	featureData
	m	()Lorg/apache/commons/lang3/mutable/MutableInt;	b	chunksWithFeatures
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	a	featureData
	f	Lorg/apache/commons/lang3/mutable/MutableInt;	b	chunksWithFeatures
c	dny	net/minecraft/world/level/levelgen/feature/FeaturePlaceContext
	m	(Ljava/util/Optional;Lcqp;Ldhg;Lasc;Lgw;Ldqa;)V	<init>	<init>
		p	1		feature
		p	2		world
		p	3		generator
		p	4		random
		p	5		origin
		p	6		config
	m	()Ljava/util/Optional;	a	topFeature
	m	()Lcqp;	b	level
	m	()Ldhg;	c	chunkGenerator
	m	()Lasc;	d	random
	m	()Lgw;	e	origin
	m	()Ldqa;	f	config
	f	Ljava/util/Optional;	a	topFeature
	f	Lcqp;	b	level
	f	Ldhg;	c	chunkGenerator
	f	Lasc;	d	random
	f	Lgw;	e	origin
	f	Ldqa;	f	config
c	dnz	net/minecraft/world/level/levelgen/feature/FillLayerFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldny;)Z	a	place
		p	1		context
c	doa	net/minecraft/world/level/levelgen/feature/FossilFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lcqp;Ldva;)I	a	countEmptyCorners
		p	0		world
		p	1		box
	m	(Lcqp;Lorg/apache/commons/lang3/mutable/MutableInt;Lgw;)V	a	lambda$countEmptyCorners$0
		p	2		pos
	m	(Ldny;)Z	a	place
		p	1		context
c	dob	net/minecraft/world/level/levelgen/feature/FossilFeatureConfiguration
	m	(Ljava/util/List;Ljava/util/List;Lhe;Lhe;I)V	<init>	<init>
		p	1		fossilStructures
		p	2		overlayStructures
		p	3		fossilProcessors
		p	4		overlayProcessors
		p	5		maxEmptyCorners
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$5
		p	0		instance
	m	(Ldob;)Ljava/lang/Integer;	a	lambda$static$4
		p	0		config
	m	(Ldob;)Lhe;	b	lambda$static$3
		p	0		config
	m	(Ldob;)Lhe;	c	lambda$static$2
		p	0		config
	m	(Ldob;)Ljava/util/List;	d	lambda$static$1
		p	0		config
	m	(Ldob;)Ljava/util/List;	e	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/List;	b	fossilStructures
	f	Ljava/util/List;	c	overlayStructures
	f	Lhe;	d	fossilProcessors
	f	Lhe;	e	overlayProcessors
	f	I	f	maxEmptyCornersAllowed
c	doc	net/minecraft/world/level/levelgen/feature/GeodeFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldny;)Z	a	place
		p	1		context
	f	[Lha;	a	DIRECTIONS
c	dod	net/minecraft/world/level/levelgen/feature/GlowstoneFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldny;)Z	a	place
		p	1		context
c	doe	net/minecraft/world/level/levelgen/feature/HugeBrownMushroomFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(IIII)I	a	getTreeRadiusForHeight
		p	3		capSize
		p	4		y
	m	(Lcpw;Lasc;Lgw;ILgw$a;Ldqc;)V	a	makeCap
		p	1		world
		p	2		random
		p	3		start
		p	4		y
		p	5		mutable
		p	6		config
c	dof	net/minecraft/world/level/levelgen/feature/HugeFungusConfiguration
	m	(Ldfj;Ldfj;Ldfj;Ldfj;Ldlz;Z)V	<init>	<init>
		p	1		validBaseBlock
		p	2		stemState
		p	3		hatState
		p	4		decorationState
		p	5		replaceableBlocks
		p	6		planted
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$6
		p	0		instance
	m	(Ldof;)Ljava/lang/Boolean;	a	lambda$static$5
		p	0		config
	m	(Ldof;)Ldlz;	b	lambda$static$4
		p	0		config
	m	(Ldof;)Ldfj;	c	lambda$static$3
		p	0		config
	m	(Ldof;)Ldfj;	d	lambda$static$2
		p	0		config
	m	(Ldof;)Ldfj;	e	lambda$static$1
		p	0		config
	m	(Ldof;)Ldfj;	f	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldfj;	b	validBaseState
	f	Ldfj;	c	stemState
	f	Ldfj;	d	hatState
	f	Ldfj;	e	decorState
	f	Ldlz;	f	replaceableBlocks
	f	Z	g	planted
c	dog	net/minecraft/world/level/levelgen/feature/HugeFungusFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lcpw;Lasc;Ldof;Lgw$a;FFF)V	a	placeHatBlock
		p	1		world
		p	2		random
		p	3		config
		p	4		pos
		p	5		decorationChance
		p	6		generationChance
		p	7		vineChance
	m	(Lcpw;Lasc;Lgw;Ldfj;Z)V	a	placeHatDropBlock
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
		p	5		vines
	m	(Lcqp;Lasc;Ldof;Lgw;IZ)V	a	placeStem
		p	1		world
		p	2		random
		p	3		config
		p	4		pos
		p	5		stemHeight
		p	6		thickStem
	m	(Lcqp;Lgw;Ldof;Z)Z	a	isReplaceable
		p	0		world
		p	1		pos
		p	2		config
		p	3		checkConfig
	m	(Ldny;)Z	a	place
		p	1		context
	m	(Lgw;Lcpw;Lasc;)V	a	tryPlaceWeepingVines
		p	0		pos
		p	1		world
		p	2		random
	m	(Lcqp;Lasc;Ldof;Lgw;IZ)V	b	placeHat
		p	1		world
		p	2		random
		p	3		config
		p	4		pos
		p	5		hatHeight
		p	6		thickStem
	f	F	a	HUGE_PROBABILITY
c	doh	net/minecraft/world/level/levelgen/feature/HugeRedMushroomFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(IIII)I	a	getTreeRadiusForHeight
		p	3		capSize
		p	4		y
	m	(Lcpw;Lasc;Lgw;ILgw$a;Ldqc;)V	a	makeCap
		p	1		world
		p	2		random
		p	3		start
		p	4		y
		p	5		mutable
		p	6		config
c	doi	net/minecraft/world/level/levelgen/feature/IceSpikeFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldny;)Z	a	place
		p	1		context
c	doj	net/minecraft/world/level/levelgen/feature/IcebergFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(III)I	a	getEllipseC
		p	1		y
		p	2		height
		p	3		value
	m	(IILgw;IID)D	a	signedDistanceEllipse
		p	1		x
		p	2		z
		p	3		pos
		p	4		divisor1
		p	5		divisor2
		p	6		randomSine
	m	(IILgw;ILasc;)D	a	signedDistanceCircle
		p	1		x
		p	2		z
		p	3		pos
		p	5		random
	m	(IILgw;Lcpw;ZDLgw;II)V	a	carve
		p	2		y
		p	3		pos
		p	4		world
		p	5		placeWater
	m	(Lasc;III)I	a	heightDependentRadiusRound
		p	1		random
		p	2		y
		p	3		height
		p	4		factor
	m	(Lasc;Lcpw;IILgw;ZIDI)V	a	generateCutOut
		p	1		random
		p	2		world
		p	5		pos
	m	(Lcpb;Lgw;)Z	a	belowIsAir
		p	1		world
		p	2		pos
	m	(Lcpw;Lasc;Lgw;IIIIIIZIDZLdfj;)V	a	generateIcebergBlock
		p	1		world
		p	2		random
		p	3		pos
		p	4		height
		p	5		offsetX
		p	6		offsetY
		p	7		offsetZ
		p	12		randomSine
		p	14		placeSnow
		p	15		state
	m	(Lcpw;Lgw;)V	a	removeFloatingSnowLayer
		p	1		world
		p	2		pos
	m	(Lcpw;Lgw;IIZI)V	a	smooth
		p	1		world
		p	2		pos
		p	4		height
	m	(Ldny;)Z	a	place
		p	1		context
	m	(Lgw;Lcpw;Lasc;IIZZLdfj;)V	a	setIcebergBlock
		p	1		pos
		p	2		world
		p	3		random
		p	4		heightRemaining
		p	5		height
		p	6		lessSnow
		p	7		placeSnow
		p	8		state
	m	(III)I	b	heightDependentRadiusEllipse
		p	1		y
		p	2		height
		p	3		factor
	m	(Lasc;III)I	b	heightDependentRadiusSteep
		p	1		random
		p	2		y
		p	3		height
		p	4		factor
	m	(Ldfj;)Z	c	isIcebergState
		p	0		state
c	dok	net/minecraft/world/level/levelgen/feature/KelpFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldny;)Z	a	place
		p	1		context
c	dol	net/minecraft/world/level/levelgen/feature/LakeFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldny;)Z	a	place
		p	1		context
	m	(Ldfj;)Z	c	canReplaceBlock
		p	1		state
	f	Ldfj;	a	AIR
c	dol$a	net/minecraft/world/level/levelgen/feature/LakeFeature$Configuration
	m	()Ldsb;	a	fluid
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()Ldsb;	b	barrier
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldsb;	b	fluid
	f	Ldsb;	c	barrier
c	dom	net/minecraft/world/level/levelgen/feature/LargeDripstoneFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lcqp;Lgw;Ldki$b;Ldom$b;)V	a	placeDebugMarkers
		p	1		world
		p	2		pos
		p	3		surface
		p	4		wind
	m	(Ldny;)Z	a	place
		p	1		context
	m	(Lgw;ZLasc;ILbgb;Lbgb;)Ldom$a;	a	makeDripstone
		p	0		pos
		p	1		isStalagmite
		p	3		scale
		p	4		bluntness
		p	5		heightScale
c	dom$a	net/minecraft/world/level/levelgen/feature/LargeDripstoneFeature$LargeDripstone
	m	(Lgw;ZIDD)V	<init>	<init>
		p	1		pos
		p	2		isStalagmite
		p	3		scale
		p	4		bluntness
		p	6		heightScale
	m	()I	a	getHeight
	m	(F)I	a	getHeightAtRadius
		p	1		height
	m	(Lcqp;Lasc;Ldom$b;)V	a	placeBlocks
		p	1		world
		p	3		wind
	m	(Lcqp;Ldom$b;)Z	a	moveBackUntilBaseIsInsideStoneAndShrinkRadiusIfNecessary
		p	1		world
		p	2		wind
	m	(Ldqd;)Z	a	isSuitableForWind
		p	1		config
	m	()I	b	getMinY
	m	()I	c	getMaxY
	f	Lgw;	a	root
	f	Z	b	pointingUp
	f	I	c	radius
	f	D	d	bluntness
	f	D	e	scale
c	dom$b	net/minecraft/world/level/levelgen/feature/LargeDripstoneFeature$WindOffsetter
	m	(ILasc;Lbgb;)V	<init>	<init>
		p	1		y
		p	2		random
		p	3		wind
	m	()Ldom$b;	a	noWind
	m	(Lgw;)Lgw;	a	offset
		p	1		pos
	f	I	a	originY
	f	Lehn;	b	windSpeed
c	don	net/minecraft/world/level/levelgen/feature/MonsterRoomFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lasc;)Lbiu;	a	randomEntityId
		p	1		random
	m	(Ldny;)Z	a	place
		p	1		context
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	[Lbiu;	b	MOBS
	f	Ldfj;	c	AIR
c	doo	net/minecraft/world/level/levelgen/feature/MultifaceGrowthFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lcqp;Lgw;Ldfj;Ldqf;Lasc;Ljava/util/List;)Z	a	placeGrowthIfPossible
		p	0		world
		p	1		pos
		p	2		state
		p	3		config
		p	4		random
		p	5		directions
	m	(Ldny;)Z	a	place
		p	1		context
	m	(Ldfj;)Z	c	isAirOrWater
		p	0		state
c	dop	net/minecraft/world/level/levelgen/feature/NetherForestVegetationFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldny;)Z	a	place
		p	1		context
c	doq	net/minecraft/world/level/levelgen/feature/NoOpFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldny;)Z	a	place
		p	1		context
c	dor	net/minecraft/world/level/levelgen/feature/OreFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lasc;F)Z	a	shouldSkipAirCheck
		p	0		random
		p	1		chance
	m	(Lcqp;Lasc;Ldqi;DDDDDDIIIII)Z	a	doPlace
		p	1		world
		p	2		random
		p	3		config
		p	4		startX
		p	6		endX
		p	8		startZ
		p	10		endZ
		p	12		startY
		p	14		endY
		p	16		x
		p	17		y
		p	18		z
		p	19		horizontalSize
		p	20		verticalSize
	m	(Ldfj;Ljava/util/function/Function;Lasc;Ldqi;Ldqi$a;Lgw$a;)Z	a	canPlaceOre
		p	0		state
		p	1		posToState
		p	2		random
		p	3		config
		p	4		target
		p	5		pos
	m	(Ldny;)Z	a	place
		p	1		context
c	dos	net/minecraft/world/level/levelgen/feature/PointedDripstoneFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lcpw;Lasc;Lgw;Ldqj;)V	a	createPatchOfDripstoneBlocks
		p	0		world
		p	1		random
		p	2		pos
		p	3		config
	m	(Lcpw;Lgw;Lasc;)Ljava/util/Optional;	a	getTipDirection
		p	0		world
		p	1		pos
		p	2		random
	m	(Ldny;)Z	a	place
		p	1		context
c	dot	net/minecraft/world/level/levelgen/feature/RandomBooleanSelectorFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldny;)Z	a	place
		p	1		context
c	dou	net/minecraft/world/level/levelgen/feature/RandomPatchFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldny;)Z	a	place
		p	1		context
c	dov	net/minecraft/world/level/levelgen/feature/RandomSelectorFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldny;)Z	a	place
		p	1		context
c	dow	net/minecraft/world/level/levelgen/feature/ReplaceBlobsFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lcpw;Lgw$a;Lcsv;)Lgw;	a	findTarget
		p	0		world
		p	1		mutablePos
		p	2		target
	m	(Ldny;)Z	a	place
		p	1		context
c	dox	net/minecraft/world/level/levelgen/feature/ReplaceBlockFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldny;)Z	a	place
		p	1		context
c	doy	net/minecraft/world/level/levelgen/feature/RootSystemFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lcqp;Ldhg;Ldqq;Lasc;Lgw$a;Lgw;)Z	a	placeDirtAndTree
		p	0		world
		p	1		generator
		p	2		config
		p	3		random
		p	4		mutablePos
		p	5		pos
	m	(Lcqp;Ldqq;Lasc;IILgw$a;)V	a	placeRootedDirt
		p	0		world
		p	1		config
		p	2		random
		p	3		x
		p	4		z
		p	5		mutablePos
	m	(Lcqp;Ldqq;Lasc;Lgw;Lgw$a;)V	a	placeRoots
		p	0		world
		p	1		config
		p	2		random
		p	3		pos
		p	4		mutablePos
	m	(Lcqp;Ldqq;Lgw;)Z	a	spaceForTree
		p	0		world
		p	1		config
		p	2		pos
	m	(Ldfj;II)Z	a	isAllowedTreeSpace
		p	0		state
		p	1		height
		p	2		allowedVerticalWaterForTree
	m	(Ldny;)Z	a	place
		p	1		context
	m	(Ldqq;Ldfj;)Z	a	lambda$placeRootedDirt$0
		p	1		state
	m	(Lgw;ILcqp;Ldqq;Lasc;)V	a	placeDirt
		p	0		pos
		p	1		maxY
		p	2		world
		p	3		config
		p	4		random
c	doz	net/minecraft/world/level/levelgen/feature/ScatteredOreFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lasc;I)I	a	getRandomPlacementInOneAxisRelativeToOrigin
		p	1		random
		p	2		spread
	m	(Ldny;)Z	a	place
		p	1		context
	m	(Lgw$a;Lasc;Lgw;I)V	a	offsetTargetPos
		p	1		mutable
		p	2		random
		p	3		origin
		p	4		spread
	f	I	a	MAX_DIST_FROM_ORIGIN
c	dpa	net/minecraft/world/level/levelgen/feature/SculkPatchFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lcpw;Lgw;)Z	a	canSpreadFrom
		p	1		world
		p	2		pos
	m	(Ldny;)Z	a	place
		p	1		context
	m	(Lcpw;Lgw;)Z	b	lambda$canSpreadFrom$0
		p	1		pos2
c	dpb	net/minecraft/world/level/levelgen/feature/SeaPickleFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldny;)Z	a	place
		p	1		context
c	dpc	net/minecraft/world/level/levelgen/feature/SeagrassFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldny;)Z	a	place
		p	1		context
c	dpd	net/minecraft/world/level/levelgen/feature/SimpleBlockFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldny;)Z	a	place
		p	1		context
c	dpe	net/minecraft/world/level/levelgen/feature/SimpleRandomSelectorFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldny;)Z	a	place
		p	1		context
c	dpf	net/minecraft/world/level/levelgen/feature/SnowAndFreezeFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldny;)Z	a	place
		p	1		context
c	dpg	net/minecraft/world/level/levelgen/feature/SpikeFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lcqk;Lasc;Ldqu;Ldpg$a;)V	a	placeSpike
		p	1		world
		p	2		random
		p	3		config
		p	4		spike
	m	(Lcqp;)Ljava/util/List;	a	getSpikesForLevel
		p	0		world
	m	(Ldny;)Z	a	place
		p	1		context
	f	I	a	NUMBER_OF_SPIKES
	f	I	b	SPIKE_DISTANCE
	f	Lcom/google/common/cache/LoadingCache;	c	SPIKE_CACHE
c	dpg$a	net/minecraft/world/level/levelgen/feature/SpikeFeature$EndSpike
	m	(IIIIZ)V	<init>	<init>
		p	1		centerX
		p	2		centerZ
		p	3		radius
		p	4		height
		p	5		guarded
	m	()I	a	getCenterX
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$5
		p	0		instance
	m	(Ldpg$a;)Ljava/lang/Boolean;	a	lambda$static$4
		p	0		spike
	m	(Lgw;)Z	a	isCenterWithinChunk
		p	1		pos
	m	()I	b	getCenterZ
	m	(Ldpg$a;)Ljava/lang/Integer;	b	lambda$static$3
		p	0		spike
	m	()I	c	getRadius
	m	(Ldpg$a;)Ljava/lang/Integer;	c	lambda$static$2
		p	0		spike
	m	()I	d	getHeight
	m	(Ldpg$a;)Ljava/lang/Integer;	d	lambda$static$1
		p	0		spike
	m	()Z	e	isGuarded
	m	(Ldpg$a;)Ljava/lang/Integer;	e	lambda$static$0
		p	0		spike
	m	()Lehi;	f	getTopBoundingBox
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	centerX
	f	I	c	centerZ
	f	I	d	radius
	f	I	e	height
	f	Z	f	guarded
	f	Lehi;	g	topBoundingBox
c	dpg$b	net/minecraft/world/level/levelgen/feature/SpikeFeature$SpikeCacheLoader
	m	(Ljava/lang/Long;)Ljava/util/List;	a	load
c	dph	net/minecraft/world/level/levelgen/feature/SpringFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldny;)Z	a	place
		p	1		context
c	dpi	net/minecraft/world/level/levelgen/feature/TreeFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lcpw;Ldva;Ljava/util/Set;Ljava/util/Set;Ljava/util/Set;)Lehw;	a	updateLeaves
		p	0		world
		p	1		box
		p	2		trunkPositions
		p	3		decorationPositions
		p	4		rootPositions
	m	(Lcqb;ILgw;Ldqw;)I	a	getMaxFreeTreeHeight
		p	1		world
		p	2		height
		p	3		pos
		p	4		config
	m	(Lcqd;Lgw;Ldfj;)V	a	setBlock
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcqp;Lasc;Lgw;Ljava/util/function/BiConsumer;Ljava/util/function/BiConsumer;Ldrm$b;Ldqw;)Z	a	doPlace
		p	1		world
		p	2		random
		p	3		pos
		p	4		rootPlacerReplacer
		p	5		trunkPlacerReplacer
		p	6		blockPlacer
		p	7		config
	m	(Lcqp;Ljava/util/Set;Ljava/util/Set;Ljava/util/Set;Ldva;)Ljava/lang/Boolean;	a	lambda$place$9
		p	4		box
	m	(Ldny;)Z	a	place
		p	1		context
	m	(Ldqw;Lcqp;Ldrm$b;Lasc;IIILdrm$a;)V	a	lambda$doPlace$4
		p	7		node
	m	(Ldss$a;Ldss;)V	a	lambda$place$8
		p	1		decorator
	m	(Lgw;Lasc;Ldry;)Lgw;	a	lambda$doPlace$3
		p	2		rootPlacer
	m	(Ljava/util/Set;Lcqp;Lgw;Ldfj;)V	a	lambda$place$7
		p	2		pos
		p	3		state
	m	(Lcqb;Lgw;)Z	b	isAirOrLeaves
		p	0		world
		p	1		pos
	m	(Lcqd;Lgw;Ldfj;)V	b	setBlockKnownShape
		p	0		world
		p	1		pos
		p	2		state
	m	(Ljava/util/Set;Lcqp;Lgw;Ldfj;)V	b	lambda$place$6
		p	2		pos
		p	3		state
	m	(Lcqb;Lgw;)Z	c	validTreePos
		p	0		world
		p	1		pos
	m	(Ldfj;)Z	c	lambda$validTreePos$2
		p	0		state
	m	(Ljava/util/Set;Lcqp;Lgw;Ldfj;)V	c	lambda$place$5
		p	2		pos
		p	3		state
	m	(Lcqb;Lgw;)Z	d	isVine
		p	0		world
		p	1		pos
	m	(Ldfj;)Z	d	lambda$isAirOrLeaves$1
		p	0		state
	m	(Ldfj;)Z	e	lambda$isVine$0
		p	0		state
	f	I	a	BLOCK_UPDATE_FLAGS
c	dpi$1	net/minecraft/world/level/levelgen/feature/TreeFeature$1
	m	(Lgw;)Z	a	isSet
		p	1		pos
	m	(Lgw;Ldfj;)V	a	set
		p	1		pos
		p	2		state
	f	Ljava/util/Set;	a	val$foliage
	f	Lcqp;	b	val$level
	f	Ldpi;	c	this$0
c	dpj	net/minecraft/world/level/levelgen/feature/TwistingVinesFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lcpw;Lasc;Lgw$a;III)V	a	placeWeepingVinesColumn
		p	0		world
		p	1		random
		p	2		pos
		p	3		maxLength
		p	4		minAge
		p	5		maxAge
	m	(Lcpw;Lgw$a;)Z	a	findFirstAirBlockAboveGround
		p	0		world
		p	1		pos
	m	(Lcpw;Lgw;)Z	a	isInvalidPlacementLocation
		p	0		world
		p	1		pos
	m	(Ldny;)Z	a	place
		p	1		context
c	dpk	net/minecraft/world/level/levelgen/feature/UnderwaterMagmaFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lasc;Ldqy;Lgw;)Z	a	lambda$place$0
		p	2		pos
	m	(Lcpw;Lgw;)Z	a	isWaterOrAir
		p	1		world
		p	2		pos
	m	(Lcqp;Lgw;Ldqy;)Ljava/util/OptionalInt;	a	getFloorY
		p	0		world
		p	1		pos
		p	2		config
	m	(Ldny;)Z	a	place
		p	1		context
	m	(Lcqp;Lgw;)Z	b	isValidPlacement
		p	1		world
		p	2		pos
	m	(Lcqp;Lgw;)I	c	lambda$place$2
		p	1		pos
	m	(Ldfj;)Z	c	lambda$getFloorY$4
		p	0		state
	m	(Lcqp;Lgw;)Z	d	lambda$place$1
		p	2		pos
	m	(Ldfj;)Z	d	lambda$getFloorY$3
		p	0		state
c	dpl	net/minecraft/world/level/levelgen/feature/VegetationPatchFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lcqp;Ldqz;Lasc;Lgw;Ljava/util/function/Predicate;II)Ljava/util/Set;	a	placeGroundPatch
		p	1		world
		p	2		config
		p	3		random
		p	4		pos
		p	5		replaceable
		p	6		radiusX
		p	7		radiusZ
	m	(Lcqp;Ldqz;Ldhg;Lasc;Lgw;)Z	a	placeVegetation
		p	1		world
		p	2		config
		p	3		generator
		p	4		random
		p	5		pos
	m	(Lcqp;Ldqz;Ljava/util/function/Predicate;Lasc;Lgw$a;I)Z	a	placeGround
		p	1		world
		p	2		config
		p	3		replaceable
		p	4		random
		p	5		pos
		p	6		depth
	m	(Ldny;)Z	a	place
		p	1		context
	m	(Ldny;Lcqp;Ldqz;Lasc;Ljava/util/Set;II)V	a	distributeVegetation
		p	1		context
		p	2		world
		p	3		config
		p	4		random
		p	5		positions
		p	6		radiusX
		p	7		radiusZ
	m	(Ldqz;Ldfj;)Z	a	lambda$place$0
		p	1		state
	m	(Ldfj;)Z	c	lambda$placeGroundPatch$1
		p	0		state
c	dpm	net/minecraft/world/level/levelgen/feature/VinesFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldny;)Z	a	place
		p	1		context
c	dpn	net/minecraft/world/level/levelgen/feature/VoidStartPlatformFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(IIII)I	a	checkerboardDistance
		p	0		x1
		p	1		z1
		p	2		x2
		p	3		z2
	m	(Ldny;)Z	a	place
		p	1		context
	f	Lgw;	a	PLATFORM_OFFSET
	f	Lcpc;	b	PLATFORM_ORIGIN_CHUNK
	f	I	c	PLATFORM_RADIUS
	f	I	d	PLATFORM_RADIUS_CHUNKS
c	dpo	net/minecraft/world/level/levelgen/feature/WaterloggedVegetationPatchFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lcqp;Ldqz;Lasc;Lgw;Ljava/util/function/Predicate;II)Ljava/util/Set;	a	placeGroundPatch
		p	1		world
		p	2		config
		p	3		random
		p	4		pos
		p	5		replaceable
		p	6		radiusX
		p	7		radiusZ
	m	(Lcqp;Ldqz;Ldhg;Lasc;Lgw;)Z	a	placeVegetation
		p	1		world
		p	2		config
		p	3		generator
		p	4		random
		p	5		pos
	m	(Lcqp;Lgw;Lgw$a;Lha;)Z	a	isExposedDirection
		p	0		world
		p	1		pos
		p	2		mutablePos
		p	3		direction
	m	(Lcqp;Ljava/util/Set;Lgw;Lgw$a;)Z	a	isExposed
		p	0		world
		p	1		positions
		p	2		pos
		p	3		mutablePos
c	dpp	net/minecraft/world/level/levelgen/feature/WeepingVinesFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lcpw;Lasc;Lgw$a;III)V	a	placeWeepingVinesColumn
		p	0		world
		p	1		random
		p	2		pos
		p	3		length
		p	4		minAge
		p	5		maxAge
	m	(Lcpw;Lasc;Lgw;)V	a	placeRoofNetherWart
		p	1		world
		p	2		random
		p	3		pos
	m	(Ldny;)Z	a	place
		p	1		context
	m	(Lcpw;Lasc;Lgw;)V	b	placeRoofWeepingVines
		p	1		world
		p	2		random
		p	3		pos
	f	[Lha;	a	DIRECTIONS
c	dpq	net/minecraft/world/level/levelgen/feature/WeightedPlacedFeature
	m	(Lhe;F)V	<init>	<init>
		p	1		feature
		p	2		chance
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Lcqp;Ldhg;Lasc;Lgw;)Z	a	place
		p	1		world
		p	2		chunkGenerator
		p	3		random
		p	4		pos
	m	(Ldpq;)Ljava/lang/Float;	a	lambda$static$1
		p	0		config
	m	(Ldpq;)Lhe;	b	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lhe;	b	feature
	f	F	c	chance
c	dpr	net/minecraft/world/level/levelgen/feature/configurations/BlockColumnConfiguration
	m	()Ljava/util/List;	a	layers
	m	(Lbgd;Ldsb;)Ldpr$a;	a	layer
		p	0		height
		p	1		state
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()Lha;	b	direction
	m	(Lbgd;Ldsb;)Ldpr;	b	simple
		p	0		height
		p	1		state
	m	()Ldlz;	c	allowedPlacement
	m	()Z	d	prioritizeTip
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/List;	b	layers
	f	Lha;	c	direction
	f	Ldlz;	d	allowedPlacement
	f	Z	e	prioritizeTip
c	dpr$a	net/minecraft/world/level/levelgen/feature/configurations/BlockColumnConfiguration$Layer
	m	()Lbgd;	a	height
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()Ldsb;	b	state
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lbgd;	b	height
	f	Ldsb;	c	state
c	dps	net/minecraft/world/level/levelgen/feature/configurations/BlockPileConfiguration
	m	(Ldsb;)V	<init>	<init>
		p	1		stateProvider
	m	(Ldps;)Ldsb;	a	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldsb;	b	stateProvider
c	dpt	net/minecraft/world/level/levelgen/feature/configurations/BlockStateConfiguration
	m	(Ldfj;)V	<init>	<init>
		p	1		state
	m	(Ldpt;)Ldfj;	a	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldfj;	b	state
c	dpu	net/minecraft/world/level/levelgen/feature/configurations/ColumnFeatureConfiguration
	m	(Lbgd;Lbgd;)V	<init>	<init>
		p	1		reach
		p	2		height
	m	()Lbgd;	a	reach
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Ldpu;)Lbgd;	a	lambda$static$1
		p	0		config
	m	()Lbgd;	b	height
	m	(Ldpu;)Lbgd;	b	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lbgd;	b	reach
	f	Lbgd;	c	height
c	dpv	net/minecraft/world/level/levelgen/feature/configurations/CountConfiguration
	m	(I)V	<init>	<init>
		p	1		count
	m	(Lbgd;)V	<init>	<init>
		p	1		distribution
	m	()Lbgd;	a	count
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lbgd;	b	count
c	dpw	net/minecraft/world/level/levelgen/feature/configurations/DeltaFeatureConfiguration
	m	(Ldfj;Ldfj;Lbgd;Lbgd;)V	<init>	<init>
		p	1		contents
		p	2		rim
		p	3		size
		p	4		rimSize
	m	()Ldfj;	a	contents
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
		p	0		instance
	m	(Ldpw;)Lbgd;	a	lambda$static$3
		p	0		config
	m	()Ldfj;	b	rim
	m	(Ldpw;)Lbgd;	b	lambda$static$2
		p	0		config
	m	()Lbgd;	c	size
	m	(Ldpw;)Ldfj;	c	lambda$static$1
		p	0		config
	m	()Lbgd;	d	rimSize
	m	(Ldpw;)Ldfj;	d	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldfj;	b	contents
	f	Ldfj;	c	rim
	f	Lbgd;	d	size
	f	Lbgd;	e	rimSize
c	dpx	net/minecraft/world/level/levelgen/feature/configurations/DiskConfiguration
	m	()Ldsj;	a	stateProvider
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()Ldlz;	b	target
	m	()Lbgd;	c	radius
	m	()I	d	halfHeight
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldsj;	b	stateProvider
	f	Ldlz;	c	target
	f	Lbgd;	d	radius
	f	I	e	halfHeight
c	dpy	net/minecraft/world/level/levelgen/feature/configurations/DripstoneClusterConfiguration
	m	(ILbgd;Lbgd;IILbgd;Lbgb;Lbgb;FII)V	<init>	<init>
		p	1		floorToCeilingSearchRange
		p	2		height
		p	3		radius
		p	4		maxStalagmiteStalactiteHeightDiff
		p	5		heightDeviation
		p	6		dripstoneBlockLayerThickness
		p	7		density
		p	8		wetness
		p	9		wetnessMean
		p	10		maxDistanceFromCenterAffectingChanceOfDripstoneColumn
		p	11		maxDistanceFromCenterAffectingHeightBias
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$11
		p	0		instance
	m	(Ldpy;)Ljava/lang/Integer;	a	lambda$static$10
		p	0		config
	m	(Ldpy;)Ljava/lang/Integer;	b	lambda$static$9
		p	0		config
	m	(Ldpy;)Ljava/lang/Float;	c	lambda$static$8
		p	0		config
	m	(Ldpy;)Lbgb;	d	lambda$static$7
		p	0		config
	m	(Ldpy;)Lbgb;	e	lambda$static$6
		p	0		config
	m	(Ldpy;)Lbgd;	f	lambda$static$5
		p	0		config
	m	(Ldpy;)Ljava/lang/Integer;	g	lambda$static$4
		p	0		config
	m	(Ldpy;)Ljava/lang/Integer;	h	lambda$static$3
		p	0		config
	m	(Ldpy;)Lbgd;	i	lambda$static$2
		p	0		config
	m	(Ldpy;)Lbgd;	j	lambda$static$1
		p	0		config
	m	(Ldpy;)Ljava/lang/Integer;	k	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	floorToCeilingSearchRange
	f	Lbgd;	c	height
	f	Lbgd;	d	radius
	f	I	e	maxStalagmiteStalactiteHeightDiff
	f	I	f	heightDeviation
	f	Lbgd;	g	dripstoneBlockLayerThickness
	f	Lbgb;	h	density
	f	Lbgb;	i	wetness
	f	F	j	chanceOfDripstoneColumnAtMaxDistanceFromCenter
	f	I	k	maxDistanceFromEdgeAffectingChanceOfDripstoneColumn
	f	I	l	maxDistanceFromCenterAffectingHeightBias
c	dpz	net/minecraft/world/level/levelgen/feature/configurations/EndGatewayConfiguration
	m	(Ljava/util/Optional;Z)V	<init>	<init>
		p	1		exitPos
		p	2		exact
	m	()Ldpz;	a	delayedExitSearch
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Ldpz;)Ljava/lang/Boolean;	a	lambda$static$1
		p	0		config
	m	(Lgw;Z)Ldpz;	a	knownExit
		p	0		exitPortalPosition
		p	1		exitsAtSpawn
	m	()Ljava/util/Optional;	b	getExit
	m	(Ldpz;)Ljava/util/Optional;	b	lambda$static$0
		p	0		config
	m	()Z	c	isExitExact
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Optional;	b	exit
	f	Z	c	exact
c	dqa	net/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration
	m	()Ljava/util/stream/Stream;	e	getFeatures
	f	Ldqh;	m	NONE
c	dqb	net/minecraft/world/level/levelgen/feature/configurations/GeodeConfiguration
	m	(Ldkp;Ldkr;Ldkq;DDZLbgd;Lbgd;Lbgd;IIDI)V	<init>	<init>
		p	1		layerConfig
		p	2		layerThicknessConfig
		p	3		crackConfig
		p	4		usePotentialPlacementsChance
		p	6		useAlternateLayer0Chance
		p	8		placementsRequireLayer0Alternate
		p	9		outerWallDistance
		p	10		distributionPoints
		p	11		pointOffset
		p	12		maxDistributionPoints
		p	13		minPointOffset
		p	14		noiseMultiplier
		p	16		maxGenOffset
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$13
		p	0		instance
	m	(Ldqb;)Ljava/lang/Integer;	a	lambda$static$12
		p	0		config
	m	(Ldqb;)Ljava/lang/Double;	b	lambda$static$11
		p	0		config
	m	(Ldqb;)Ljava/lang/Integer;	c	lambda$static$10
		p	0		config
	m	(Ldqb;)Ljava/lang/Integer;	d	lambda$static$9
		p	0		config
	m	(Ldqb;)Lbgd;	e	lambda$static$8
		p	0		config
	m	(Ldqb;)Lbgd;	f	lambda$static$7
		p	0		config
	m	(Ldqb;)Lbgd;	g	lambda$static$6
		p	0		config
	m	(Ldqb;)Ljava/lang/Boolean;	h	lambda$static$5
		p	0		config
	m	(Ldqb;)Ljava/lang/Double;	i	lambda$static$4
		p	0		config
	m	(Ldqb;)Ljava/lang/Double;	j	lambda$static$3
		p	0		config
	m	(Ldqb;)Ldkq;	k	lambda$static$2
		p	0		config
	m	(Ldqb;)Ldkr;	l	lambda$static$1
		p	0		config
	m	(Ldqb;)Ldkp;	m	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CHANCE_RANGE
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Ldkp;	c	geodeBlockSettings
	f	Ldkr;	d	geodeLayerSettings
	f	Ldkq;	e	geodeCrackSettings
	f	D	f	usePotentialPlacementsChance
	f	D	g	useAlternateLayer0Chance
	f	Z	h	placementsRequireLayer0Alternate
	f	Lbgd;	i	outerWallDistance
	f	Lbgd;	j	distributionPoints
	f	Lbgd;	k	pointOffset
	f	I	l	minGenOffset
	f	I	n	maxGenOffset
	f	D	o	noiseMultiplier
	f	I	p	invalidBlocksThreshold
c	dqc	net/minecraft/world/level/levelgen/feature/configurations/HugeMushroomFeatureConfiguration
	m	(Ldsb;Ldsb;I)V	<init>	<init>
		p	1		capProvider
		p	2		stemProvider
		p	3		foliageRadius
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	(Ldqc;)Ljava/lang/Integer;	a	lambda$static$2
	m	(Ldqc;)Ldsb;	b	lambda$static$1
	m	(Ldqc;)Ldsb;	c	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldsb;	b	capProvider
	f	Ldsb;	c	stemProvider
	f	I	d	foliageRadius
c	dqd	net/minecraft/world/level/levelgen/feature/configurations/LargeDripstoneConfiguration
	m	(ILbgd;Lbgb;FLbgb;Lbgb;Lbgb;IF)V	<init>	<init>
		p	1		floorToCeilingSearchRange
		p	2		columnRadius
		p	3		heightScale
		p	4		maxColumnRadiusToCaveHeightRatio
		p	5		stalactiteBluntness
		p	6		stalagmiteBluntness
		p	7		windSpeed
		p	8		minRadiusForWind
		p	9		minBluntnessForWind
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$9
		p	0		instance
	m	(Ldqd;)Ljava/lang/Float;	a	lambda$static$8
		p	0		config
	m	(Ldqd;)Ljava/lang/Integer;	b	lambda$static$7
		p	0		config
	m	(Ldqd;)Lbgb;	c	lambda$static$6
		p	0		config
	m	(Ldqd;)Lbgb;	d	lambda$static$5
		p	0		config
	m	(Ldqd;)Lbgb;	e	lambda$static$4
		p	0		config
	m	(Ldqd;)Ljava/lang/Float;	f	lambda$static$3
		p	0		config
	m	(Ldqd;)Lbgb;	g	lambda$static$2
		p	0		config
	m	(Ldqd;)Lbgd;	h	lambda$static$1
		p	0		config
	m	(Ldqd;)Ljava/lang/Integer;	i	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	floorToCeilingSearchRange
	f	Lbgd;	c	columnRadius
	f	Lbgb;	d	heightScale
	f	F	e	maxColumnRadiusToCaveHeightRatio
	f	Lbgb;	f	stalactiteBluntness
	f	Lbgb;	g	stalagmiteBluntness
	f	Lbgb;	h	windSpeed
	f	I	i	minRadiusForWind
	f	F	j	minBluntnessForWind
c	dqe	net/minecraft/world/level/levelgen/feature/configurations/LayerConfiguration
	m	(ILdfj;)V	<init>	<init>
		p	1		height
		p	2		state
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Ldqe;)Ldfj;	a	lambda$static$1
		p	0		config
	m	(Ldqe;)Ljava/lang/Integer;	b	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	height
	f	Ldfj;	c	state
c	dqf	net/minecraft/world/level/levelgen/feature/configurations/MultifaceGrowthConfiguration
	m	(Lcxt;IZZZFLhi;)V	<init>	<init>
		p	1		lichen
		p	2		searchRange
		p	3		placeOnFloor
		p	4		placeOnCeiling
		p	5		placeOnWalls
		p	6		spreadChance
		p	7		canPlaceOn
	m	()Ljava/lang/String;	a	lambda$apply$8
	m	(Lasc;)Ljava/util/List;	a	getShuffledDirections
		p	1		random
	m	(Lasc;Lha;)Ljava/util/List;	a	getShuffledDirectionsExcept
		p	1		random
		p	2		excluded
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$7
		p	0		instance
	m	(Lcsv;)Lcom/mojang/serialization/DataResult;	a	apply
		p	0		block
	m	(Ldqf;)Lhi;	a	lambda$static$6
		p	0		config
	m	(Lha;Lha;)Z	a	lambda$getShuffledDirectionsExcept$9
		p	1		direction
	m	(Ldqf;)Ljava/lang/Float;	b	lambda$static$5
		p	0		config
	m	(Ldqf;)Ljava/lang/Boolean;	c	lambda$static$4
		p	0		config
	m	(Ldqf;)Ljava/lang/Boolean;	d	lambda$static$3
		p	0		config
	m	(Ldqf;)Ljava/lang/Boolean;	e	lambda$static$2
		p	0		config
	m	(Ldqf;)Ljava/lang/Integer;	f	lambda$static$1
		p	0		config
	m	(Ldqf;)Lcxt;	g	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcxt;	b	placeBlock
	f	I	c	searchRange
	f	Z	d	canPlaceOnFloor
	f	Z	e	canPlaceOnCeiling
	f	Z	f	canPlaceOnWall
	f	F	g	chanceOfSpreading
	f	Lhi;	h	canBePlacedOn
	f	Lit/unimi/dsi/fastutil/objects/ObjectArrayList;	i	validDirections
c	dqg	net/minecraft/world/level/levelgen/feature/configurations/NetherForestVegetationConfig
	m	(Ldsb;II)V	<init>	<init>
		p	1		stateProvider
		p	2		spreadWidth
		p	3		spreadHeight
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
	m	(Ldqg;)Ljava/lang/Integer;	a	lambda$static$2
		p	0		config
	m	(Ldqg;)Ljava/lang/Integer;	b	lambda$static$1
		p	0		config
	m	(Ldqg;)Ldsb;	c	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	I	d	spreadWidth
	f	I	e	spreadHeight
c	dqh	net/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration
	m	()Ldqh;	a	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldqh;	b	INSTANCE
c	dqi	net/minecraft/world/level/levelgen/feature/configurations/OreConfiguration
	m	(Ldyv;Ldfj;I)V	<init>	<init>
		p	1		test
		p	2		state
		p	3		size
	m	(Ldyv;Ldfj;IF)V	<init>	<init>
		p	1		test
		p	2		state
		p	3		size
		p	4		discardOnAirChance
	m	(Ljava/util/List;I)V	<init>	<init>
		p	1		targets
		p	2		size
	m	(Ljava/util/List;IF)V	<init>	<init>
		p	1		targets
		p	2		size
		p	3		discardOnAirChance
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	(Ldqi;)Ljava/lang/Float;	a	lambda$static$2
		p	0		config
	m	(Ldyv;Ldfj;)Ldqi$a;	a	target
		p	0		test
		p	1		state
	m	(Ldqi;)Ljava/lang/Integer;	b	lambda$static$1
		p	0		config
	m	(Ldqi;)Ljava/util/List;	c	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/List;	b	targetStates
	f	I	c	size
	f	F	d	discardChanceOnAirExposure
c	dqi$a	net/minecraft/world/level/levelgen/feature/configurations/OreConfiguration$TargetBlockState
	m	(Ldyv;Ldfj;)V	<init>	<init>
		p	1		target
		p	2		state
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Ldqi$a;)Ldfj;	a	lambda$static$1
		p	0		target
	m	(Ldqi$a;)Ldyv;	b	lambda$static$0
		p	0		target
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldyv;	b	target
	f	Ldfj;	c	state
c	dqj	net/minecraft/world/level/levelgen/feature/configurations/PointedDripstoneConfiguration
	m	(FFFF)V	<init>	<init>
		p	1		chanceOfTallerDripstone
		p	2		chanceOfDirectionalSpread
		p	3		chanceOfSpreadRadius2
		p	4		chanceOfSpreadRadius3
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
		p	0		instance
	m	(Ldqj;)Ljava/lang/Float;	a	lambda$static$3
		p	0		config
	m	(Ldqj;)Ljava/lang/Float;	b	lambda$static$2
		p	0		config
	m	(Ldqj;)Ljava/lang/Float;	c	lambda$static$1
		p	0		config
	m	(Ldqj;)Ljava/lang/Float;	d	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	F	b	chanceOfTallerDripstone
	f	F	c	chanceOfDirectionalSpread
	f	F	d	chanceOfSpreadRadius2
	f	F	e	chanceOfSpreadRadius3
c	dqk	net/minecraft/world/level/levelgen/feature/configurations/ProbabilityFeatureConfiguration
	m	(F)V	<init>	<init>
		p	1		probability
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Ldqk;)Ljava/lang/Float;	a	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	k	CODEC
	f	F	l	probability
c	dql	net/minecraft/world/level/levelgen/feature/configurations/RandomBooleanFeatureConfiguration
	m	(Lhe;Lhe;)V	<init>	<init>
		p	1		featureTrue
		p	2		featureFalse
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Ldql;)Lhe;	a	lambda$static$1
		p	0		config
	m	(Ldql;)Lhe;	b	lambda$static$0
		p	0		config
	m	()Ljava/util/stream/Stream;	e	getFeatures
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lhe;	b	featureTrue
	f	Lhe;	c	featureFalse
c	dqm	net/minecraft/world/level/levelgen/feature/configurations/RandomFeatureConfiguration
	m	(Ljava/util/List;Lhe;)V	<init>	<init>
		p	1		features
		p	2		defaultFeature
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Ldpq;)Ljava/util/stream/Stream;	a	lambda$getFeatures$3
		p	0		entry
	m	(Ldqm;)Lhe;	a	lambda$static$1
		p	0		config
	m	(Ldqm;)Ljava/util/List;	b	lambda$static$0
		p	0		config
	m	()Ljava/util/stream/Stream;	e	getFeatures
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/List;	b	features
	f	Lhe;	c	defaultFeature
c	dqn	net/minecraft/world/level/levelgen/feature/configurations/RandomPatchConfiguration
	m	()I	a	tries
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()I	b	xzSpread
	m	()I	c	ySpread
	m	()Lhe;	d	feature
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	tries
	f	I	c	xzSpread
	f	I	d	ySpread
	f	Lhe;	e	feature
c	dqo	net/minecraft/world/level/levelgen/feature/configurations/ReplaceBlockConfiguration
	m	(Ldfj;Ldfj;)V	<init>	<init>
		p	1		target
		p	2		state
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		targets
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Ldqo;)Ljava/util/List;	a	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/List;	b	targetStates
c	dqp	net/minecraft/world/level/levelgen/feature/configurations/ReplaceSphereConfiguration
	m	(Ldfj;Ldfj;Lbgd;)V	<init>	<init>
		p	1		target
		p	2		state
		p	3		radius
	m	()Lbgd;	a	radius
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	(Ldqp;)Lbgd;	a	lambda$static$2
		p	0		config
	m	(Ldqp;)Ldfj;	b	lambda$static$1
		p	0		config
	m	(Ldqp;)Ldfj;	c	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldfj;	b	targetState
	f	Ldfj;	c	replaceState
	f	Lbgd;	d	radius
c	dqq	net/minecraft/world/level/levelgen/feature/configurations/RootSystemConfiguration
	m	(Lhe;IILaqh;Ldsb;IIIILdsb;IILdlz;)V	<init>	<init>
		p	1		feature
		p	2		requiredVerticalSpaceForTree
		p	3		rootRadius
		p	4		rootReplaceable
		p	5		rootStateProvider
		p	6		rootPlacementAttempts
		p	7		maxRootColumnHeight
		p	8		hangingRootRadius
		p	9		hangingRootVerticalSpan
		p	10		hangingRootStateProvider
		p	11		hangingRootPlacementAttempts
		p	12		allowedVerticalWaterForTree
		p	13		predicate
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$13
		p	0		instance
	m	(Ldqq;)Ldlz;	a	lambda$static$12
		p	0		config
	m	(Ldqq;)Ljava/lang/Integer;	b	lambda$static$11
		p	0		config
	m	(Ldqq;)Ljava/lang/Integer;	c	lambda$static$10
		p	0		config
	m	(Ldqq;)Ldsb;	d	lambda$static$9
		p	0		config
	m	(Ldqq;)Ljava/lang/Integer;	e	lambda$static$8
		p	0		config
	m	(Ldqq;)Ljava/lang/Integer;	f	lambda$static$7
		p	0		config
	m	(Ldqq;)Ljava/lang/Integer;	g	lambda$static$6
		p	0		config
	m	(Ldqq;)Ljava/lang/Integer;	h	lambda$static$5
		p	0		config
	m	(Ldqq;)Ldsb;	i	lambda$static$4
		p	0		config
	m	(Ldqq;)Laqh;	j	lambda$static$3
		p	0		config
	m	(Ldqq;)Ljava/lang/Integer;	k	lambda$static$2
		p	0		config
	m	(Ldqq;)Ljava/lang/Integer;	l	lambda$static$1
		p	0		config
	m	(Ldqq;)Lhe;	m	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lhe;	b	treeFeature
	f	I	c	requiredVerticalSpaceForTree
	f	I	d	rootRadius
	f	Laqh;	e	rootReplaceable
	f	Ldsb;	f	rootStateProvider
	f	I	g	rootPlacementAttempts
	f	I	h	rootColumnMaxHeight
	f	I	i	hangingRootRadius
	f	I	j	hangingRootsVerticalSpan
	f	Ldsb;	k	hangingRootStateProvider
	f	I	l	hangingRootPlacementAttempts
	f	I	n	allowedVerticalWaterForTree
	f	Ldlz;	o	allowedTreePosition
c	dqr	net/minecraft/world/level/levelgen/feature/configurations/SculkPatchConfiguration
	m	()I	a	chargeCount
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()I	b	amountPerCharge
	m	()I	c	spreadAttempts
	m	()I	d	growthRounds
	m	()I	f	spreadRounds
	m	()Lbgd;	g	extraRareGrowths
	m	()F	h	catalystChance
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	chargeCount
	f	I	c	amountPerCharge
	f	I	d	spreadAttempts
	f	I	e	growthRounds
	f	I	f	spreadRounds
	f	Lbgd;	g	extraRareGrowths
	f	F	h	catalystChance
c	dqs	net/minecraft/world/level/levelgen/feature/configurations/SimpleBlockConfiguration
	m	(Ldsb;)V	<init>	<init>
		p	1		toPlace
	m	()Ldsb;	a	toPlace
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Ldqs;)Ldsb;	a	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldsb;	b	toPlace
c	dqt	net/minecraft/world/level/levelgen/feature/configurations/SimpleRandomFeatureConfiguration
	m	(Lhi;)V	<init>	<init>
		p	1		features
	m	(Ldqt;)Lhi;	a	lambda$static$0
		p	0		config
	m	(Lhe;)Ljava/util/stream/Stream;	a	lambda$getFeatures$1
		p	0		feature
	m	()Ljava/util/stream/Stream;	e	getFeatures
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lhi;	b	features
c	dqu	net/minecraft/world/level/levelgen/feature/configurations/SpikeConfiguration
	m	(ZLjava/util/List;Lgw;)V	<init>	<init>
		p	1		crystalInvulnerable
		p	2		spikes
		p	3		crystalBeamTarget
	m	(ZLjava/util/List;Ljava/util/Optional;)V	<init>	<init>
		p	1		crystalInvulnerable
		p	2		spikes
		p	3		crystalBeamTarget
	m	()Z	a	isCrystalInvulnerable
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	(Ldqu;)Ljava/util/Optional;	a	lambda$static$2
		p	0		config
	m	()Ljava/util/List;	b	getSpikes
	m	(Ldqu;)Ljava/util/List;	b	lambda$static$1
		p	0		config
	m	()Lgw;	c	getCrystalBeamTarget
	m	(Ldqu;)Ljava/lang/Boolean;	c	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Z	b	crystalInvulnerable
	f	Ljava/util/List;	c	spikes
	f	Lgw;	d	crystalBeamTarget
c	dqv	net/minecraft/world/level/levelgen/feature/configurations/SpringConfiguration
	m	(Leam;ZIILhi;)V	<init>	<init>
		p	1		state
		p	2		requiresBlockBelow
		p	3		rockCount
		p	4		holeCount
		p	5		validBlocks
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$5
		p	0		instance
	m	(Ldqv;)Lhi;	a	lambda$static$4
		p	0		config
	m	(Ldqv;)Ljava/lang/Integer;	b	lambda$static$3
		p	0		config
	m	(Ldqv;)Ljava/lang/Integer;	c	lambda$static$2
		p	0		config
	m	(Ldqv;)Ljava/lang/Boolean;	d	lambda$static$1
		p	0		config
	m	(Ldqv;)Leam;	e	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Leam;	b	state
	f	Z	c	requiresBlockBelow
	f	I	d	rockCount
	f	I	e	holeCount
	f	Lhi;	f	validBlocks
c	dqw	net/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration
	m	(Ldsb;Ldte;Ldsb;Ldrm;Ljava/util/Optional;Ldsb;Ldrb;Ljava/util/List;ZZ)V	<init>	<init>
		p	1		trunkProvider
		p	2		trunkPlacer
		p	3		foliageProvider
		p	4		foliagePlacer
		p	5		rootPlacer
		p	6		dirtProvider
		p	7		minimumSize
		p	8		decorators
		p	9		ignoreVines
		p	10		forceDirt
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$10
		p	0		instance
	m	(Ldqw;)Ljava/lang/Boolean;	a	lambda$static$9
		p	0		config
	m	(Ldqw;)Ljava/lang/Boolean;	b	lambda$static$8
		p	0		config
	m	(Ldqw;)Ljava/util/List;	c	lambda$static$7
		p	0		config
	m	(Ldqw;)Ldrb;	d	lambda$static$6
		p	0		config
	m	(Ldqw;)Ldsb;	e	lambda$static$5
		p	0		config
	m	(Ldqw;)Ljava/util/Optional;	f	lambda$static$4
		p	0		config
	m	(Ldqw;)Ldrm;	g	lambda$static$3
		p	0		config
	m	(Ldqw;)Ldsb;	h	lambda$static$2
		p	0		config
	m	(Ldqw;)Ldte;	i	lambda$static$1
		p	0		config
	m	(Ldqw;)Ldsb;	j	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldsb;	b	trunkProvider
	f	Ldsb;	c	dirtProvider
	f	Ldte;	d	trunkPlacer
	f	Ldsb;	e	foliageProvider
	f	Ldrm;	f	foliagePlacer
	f	Ljava/util/Optional;	g	rootPlacer
	f	Ldrb;	h	minimumSize
	f	Ljava/util/List;	i	decorators
	f	Z	j	ignoreVines
	f	Z	k	forceDirt
c	dqw$a	net/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration$TreeConfigurationBuilder
	m	(Ldsb;Ldte;Ldsb;Ldrm;Ldrb;)V	<init>	<init>
		p	1		trunkProvider
		p	2		trunkPlacer
		p	3		foliageProvider
		p	4		foliagePlacer
		p	5		minimumSize
	m	(Ldsb;Ldte;Ldsb;Ldrm;Ljava/util/Optional;Ldrb;)V	<init>	<init>
		p	1		trunkProvider
		p	2		trunkPlacer
		p	3		foliageProvider
		p	4		foliagePlacer
		p	5		rootPlacer
		p	6		minimumSize
	m	()Ldqw$a;	a	ignoreVines
	m	(Ldsb;)Ldqw$a;	a	dirt
		p	1		dirtProvider
	m	(Ljava/util/List;)Ldqw$a;	a	decorators
		p	1		decorators
	m	()Ldqw$a;	b	forceDirt
	m	()Ldqw;	c	build
	f	Ldsb;	a	trunkProvider
	f	Ldsb;	b	foliageProvider
	f	Ldte;	c	trunkPlacer
	f	Ldrm;	d	foliagePlacer
	f	Ljava/util/Optional;	e	rootPlacer
	f	Ldsb;	f	dirtProvider
	f	Ldrb;	g	minimumSize
	f	Ljava/util/List;	h	decorators
	f	Z	i	ignoreVines
	f	Z	j	forceDirt
c	dqx	net/minecraft/world/level/levelgen/feature/configurations/TwistingVinesConfig
	m	()I	a	spreadWidth
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()I	b	spreadHeight
	m	()I	c	maxHeight
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	spreadWidth
	f	I	c	spreadHeight
	f	I	d	maxHeight
c	dqy	net/minecraft/world/level/levelgen/feature/configurations/UnderwaterMagmaConfiguration
	m	(IIF)V	<init>	<init>
		p	1		minDistanceBelowSurface
		p	2		floorSearchRange
		p	3		placementProbabilityPerValidPosition
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	(Ldqy;)Ljava/lang/Float;	a	lambda$static$2
		p	0		config
	m	(Ldqy;)Ljava/lang/Integer;	b	lambda$static$1
		p	0		config
	m	(Ldqy;)Ljava/lang/Integer;	c	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	floorSearchRange
	f	I	c	placementRadiusAroundFloor
	f	F	d	placementProbabilityPerValidPosition
c	dqz	net/minecraft/world/level/levelgen/feature/configurations/VegetationPatchConfiguration
	m	(Laqh;Ldsb;Lhe;Ldud;Lbgd;FIFLbgd;F)V	<init>	<init>
		p	1		replaceable
		p	2		groundState
		p	3		vegetationFeature
		p	4		surface
		p	5		depth
		p	6		extraBottomBlockChance
		p	7		verticalRange
		p	8		vegetationChance
		p	9		horizontalRadius
		p	10		extraEdgeColumnChance
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$10
		p	0		instance
	m	(Ldqz;)Ljava/lang/Float;	a	lambda$static$9
		p	0		config
	m	(Ldqz;)Lbgd;	b	lambda$static$8
		p	0		config
	m	(Ldqz;)Ljava/lang/Float;	c	lambda$static$7
		p	0		config
	m	(Ldqz;)Ljava/lang/Integer;	d	lambda$static$6
		p	0		config
	m	(Ldqz;)Ljava/lang/Float;	e	lambda$static$5
		p	0		config
	m	(Ldqz;)Lbgd;	f	lambda$static$4
		p	0		config
	m	(Ldqz;)Ldud;	g	lambda$static$3
		p	0		config
	m	(Ldqz;)Lhe;	h	lambda$static$2
		p	0		config
	m	(Ldqz;)Ldsb;	i	lambda$static$1
		p	0		config
	m	(Ldqz;)Laqh;	j	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Laqh;	b	replaceable
	f	Ldsb;	c	groundState
	f	Lhe;	d	vegetationFeature
	f	Ldud;	e	surface
	f	Lbgd;	f	depth
	f	F	g	extraBottomBlockChance
	f	I	h	verticalRange
	f	F	i	vegetationChance
	f	Lbgd;	j	xzRadius
	f	F	k	extraEdgeColumnChance
c	dra	net/minecraft/world/level/levelgen/feature/configurations/package-info
c	drb	net/minecraft/world/level/levelgen/feature/featuresize/FeatureSize
	m	(Ljava/util/OptionalInt;)V	<init>	<init>
		p	1		minClippedHeight
	m	()Lcom/mojang/serialization/codecs/RecordCodecBuilder;	a	minClippedHeightCodec
	m	(II)I	a	getSizeAtHeight
		p	1		height
		p	2		y
	m	(Ldrb;)Ljava/util/OptionalInt;	a	lambda$minClippedHeightCodec$2
	m	(Ljava/util/Optional;)Ljava/util/OptionalInt;	a	lambda$minClippedHeightCodec$0
		p	0		minClippedHeight
	m	(Ljava/util/OptionalInt;)Ljava/util/Optional;	a	lambda$minClippedHeightCodec$1
		p	0		minClippedHeight
	m	()Ldrc;	b	type
	m	()Ljava/util/OptionalInt;	c	minClippedHeight
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	MAX_WIDTH
	f	Ljava/util/OptionalInt;	c	minClippedHeight
c	drc	net/minecraft/world/level/levelgen/feature/featuresize/FeatureSizeType
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		codec
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Ldrc;	a	register
		p	0		id
		p	1		codec
	f	Ldrc;	a	TWO_LAYERS_FEATURE_SIZE
	f	Ldrc;	b	THREE_LAYERS_FEATURE_SIZE
	f	Lcom/mojang/serialization/Codec;	c	codec
c	drd	net/minecraft/world/level/levelgen/feature/featuresize/ThreeLayersFeatureSize
	m	(IIIIILjava/util/OptionalInt;)V	<init>	<init>
		p	1		limit
		p	2		upperLimit
		p	3		lowerSize
		p	4		middleSize
		p	5		upperSize
		p	6		minClippedHeight
	m	(II)I	a	getSizeAtHeight
		p	1		height
		p	2		y
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$5
		p	0		instance
	m	(Ldrd;)Ljava/lang/Integer;	a	lambda$static$4
	m	()Ldrc;	b	type
	m	(Ldrd;)Ljava/lang/Integer;	b	lambda$static$3
	m	(Ldrd;)Ljava/lang/Integer;	c	lambda$static$2
	m	(Ldrd;)Ljava/lang/Integer;	d	lambda$static$1
	m	(Ldrd;)Ljava/lang/Integer;	e	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	I	e	limit
	f	I	f	upperLimit
	f	I	g	lowerSize
	f	I	h	middleSize
	f	I	i	upperSize
c	dre	net/minecraft/world/level/levelgen/feature/featuresize/TwoLayersFeatureSize
	m	(III)V	<init>	<init>
		p	1		limit
		p	2		lowerSize
		p	3		upperSize
	m	(IIILjava/util/OptionalInt;)V	<init>	<init>
		p	1		limit
		p	2		lowerSize
		p	3		upperSize
		p	4		minClippedHeight
	m	(II)I	a	getSizeAtHeight
		p	1		height
		p	2		y
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	(Ldre;)Ljava/lang/Integer;	a	lambda$static$2
	m	()Ldrc;	b	type
	m	(Ldre;)Ljava/lang/Integer;	b	lambda$static$1
	m	(Ldre;)Ljava/lang/Integer;	c	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	I	e	limit
	f	I	f	lowerSize
	f	I	g	upperSize
c	drf	net/minecraft/world/level/levelgen/feature/featuresize/package-info
c	drg	net/minecraft/world/level/levelgen/feature/foliageplacers/AcaciaFoliagePlacer
	m	(Lbgd;Lbgd;)V	<init>	<init>
		p	1		radius
		p	2		offset
	m	()Ldrn;	a	type
	m	(Lasc;IIIIZ)Z	a	shouldSkipLocation
		p	1		random
		p	2		dx
		p	3		y
		p	4		dz
		p	5		radius
		p	6		giantTrunk
	m	(Lasc;ILdqw;)I	a	foliageHeight
		p	1		random
		p	2		trunkHeight
		p	3		config
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lcqb;Ldrm$b;Lasc;Ldqw;ILdrm$a;III)V	a	createFoliage
		p	1		world
		p	2		placer
		p	3		random
		p	4		config
		p	5		trunkHeight
		p	6		treeNode
		p	7		foliageHeight
		p	8		radius
		p	9		offset
	f	Lcom/mojang/serialization/Codec;	a	CODEC
c	drh	net/minecraft/world/level/levelgen/feature/foliageplacers/BlobFoliagePlacer
	m	(Lbgd;Lbgd;I)V	<init>	<init>
		p	1		radius
		p	2		offset
		p	3		height
	m	()Ldrn;	a	type
	m	(Lasc;IIIIZ)Z	a	shouldSkipLocation
		p	1		random
		p	2		dx
		p	3		y
		p	4		dz
		p	5		radius
		p	6		giantTrunk
	m	(Lasc;ILdqw;)I	a	foliageHeight
		p	1		random
		p	2		trunkHeight
		p	3		config
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P3;	a	blobParts
		p	0		builder
	m	(Lcqb;Ldrm$b;Lasc;Ldqw;ILdrm$a;III)V	a	createFoliage
		p	1		world
		p	2		placer
		p	3		random
		p	4		config
		p	5		trunkHeight
		p	6		treeNode
		p	7		foliageHeight
		p	8		radius
		p	9		offset
	m	(Ldrh;)Ljava/lang/Integer;	a	lambda$blobParts$1
		p	0		placer
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	c	lambda$static$0
		p	0		instance
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	height
c	dri	net/minecraft/world/level/levelgen/feature/foliageplacers/BushFoliagePlacer
	m	(Lbgd;Lbgd;I)V	<init>	<init>
		p	1		radius
		p	2		offset
		p	3		height
	m	()Ldrn;	a	type
	m	(Lasc;IIIIZ)Z	a	shouldSkipLocation
		p	1		random
		p	2		dx
		p	3		y
		p	4		dz
		p	5		radius
		p	6		giantTrunk
	m	(Lcqb;Ldrm$b;Lasc;Ldqw;ILdrm$a;III)V	a	createFoliage
		p	1		world
		p	2		placer
		p	3		random
		p	4		config
		p	5		trunkHeight
		p	6		treeNode
		p	7		foliageHeight
		p	8		radius
		p	9		offset
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	c	lambda$static$0
		p	0		instance
	f	Lcom/mojang/serialization/Codec;	c	CODEC
c	drj	net/minecraft/world/level/levelgen/feature/foliageplacers/CherryFoliagePlacer
	m	(Lbgd;Lbgd;Lbgd;FFFF)V	<init>	<init>
		p	1		radius
		p	2		offset
		p	3		height
		p	4		wideBottomLayerHoleChance
		p	5		cornerHoleChance
		p	6		hangingLeavesChance
		p	7		hangingLeavesExtensionChance
	m	()Ldrn;	a	type
	m	(Lasc;IIIIZ)Z	a	shouldSkipLocation
		p	1		random
		p	2		dx
		p	3		y
		p	4		dz
		p	5		radius
		p	6		giantTrunk
	m	(Lasc;ILdqw;)I	a	foliageHeight
		p	1		random
		p	2		trunkHeight
		p	3		config
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$5
	m	(Lcqb;Ldrm$b;Lasc;Ldqw;ILdrm$a;III)V	a	createFoliage
		p	1		world
		p	2		placer
		p	3		random
		p	4		config
		p	5		trunkHeight
		p	6		treeNode
		p	7		foliageHeight
		p	8		radius
		p	9		offset
	m	(Ldrj;)Ljava/lang/Float;	a	lambda$static$4
		p	0		foliagePlacer
	m	(Ldrj;)Ljava/lang/Float;	b	lambda$static$3
		p	0		foliagePlacer
	m	(Ldrj;)Ljava/lang/Float;	c	lambda$static$2
		p	0		foliagePlacer
	m	(Ldrj;)Ljava/lang/Float;	d	lambda$static$1
		p	0		foliagePlacer
	m	(Ldrj;)Lbgd;	e	lambda$static$0
		p	0		foliagePlacer
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lbgd;	b	height
	f	F	c	wideBottomLayerHoleChance
	f	F	g	cornerHoleChance
	f	F	h	hangingLeavesChance
	f	F	i	hangingLeavesExtensionChance
c	drk	net/minecraft/world/level/levelgen/feature/foliageplacers/DarkOakFoliagePlacer
	m	(Lbgd;Lbgd;)V	<init>	<init>
		p	1		radius
		p	2		offset
	m	()Ldrn;	a	type
	m	(Lasc;IIIIZ)Z	a	shouldSkipLocation
		p	1		random
		p	2		dx
		p	3		y
		p	4		dz
		p	5		radius
		p	6		giantTrunk
	m	(Lasc;ILdqw;)I	a	foliageHeight
		p	1		random
		p	2		trunkHeight
		p	3		config
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lcqb;Ldrm$b;Lasc;Ldqw;ILdrm$a;III)V	a	createFoliage
		p	1		world
		p	2		placer
		p	3		random
		p	4		config
		p	5		trunkHeight
		p	6		treeNode
		p	7		foliageHeight
		p	8		radius
		p	9		offset
	m	(Lasc;IIIIZ)Z	b	shouldSkipLocationSigned
		p	1		random
		p	2		dx
		p	3		y
		p	4		dz
		p	5		radius
		p	6		giantTrunk
	f	Lcom/mojang/serialization/Codec;	a	CODEC
c	drl	net/minecraft/world/level/levelgen/feature/foliageplacers/FancyFoliagePlacer
	m	(Lbgd;Lbgd;I)V	<init>	<init>
		p	1		radius
		p	2		offset
		p	3		height
	m	()Ldrn;	a	type
	m	(Lasc;IIIIZ)Z	a	shouldSkipLocation
		p	1		random
		p	2		dx
		p	3		y
		p	4		dz
		p	5		radius
		p	6		giantTrunk
	m	(Lcqb;Ldrm$b;Lasc;Ldqw;ILdrm$a;III)V	a	createFoliage
		p	1		world
		p	2		placer
		p	3		random
		p	4		config
		p	5		trunkHeight
		p	6		treeNode
		p	7		foliageHeight
		p	8		radius
		p	9		offset
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	c	lambda$static$0
		p	0		instance
	f	Lcom/mojang/serialization/Codec;	c	CODEC
c	drm	net/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer
	m	(Lbgd;Lbgd;)V	<init>	<init>
		p	1		radius
		p	2		offset
	m	()Ldrn;	a	type
	m	(Lasc;)I	a	offset
		p	1		random
	m	(Lasc;I)I	a	foliageRadius
		p	1		random
		p	2		baseHeight
	m	(Lasc;IIIIZ)Z	a	shouldSkipLocation
		p	1		random
		p	2		dx
		p	3		y
		p	4		dz
		p	5		radius
		p	6		giantTrunk
	m	(Lasc;ILdqw;)I	a	foliageHeight
		p	1		random
		p	2		trunkHeight
		p	3		config
	m	(Lcqb;Ldrm$b;Lasc;Ldqw;FLgw;Lgw$a;)Z	a	tryPlaceExtension
		p	0		world
		p	1		placer
		p	2		random
		p	3		config
		p	4		chance
		p	5		origin
		p	6		pos
	m	(Lcqb;Ldrm$b;Lasc;Ldqw;ILdrm$a;II)V	a	createFoliage
		p	1		world
		p	2		placer
		p	3		random
		p	4		config
		p	5		trunkHeight
		p	6		treeNode
		p	7		foliageHeight
		p	8		radius
	m	(Lcqb;Ldrm$b;Lasc;Ldqw;ILdrm$a;III)V	a	createFoliage
		p	1		world
		p	2		placer
		p	3		random
		p	4		config
		p	5		trunkHeight
		p	6		treeNode
		p	7		foliageHeight
		p	8		radius
		p	9		offset
	m	(Lcqb;Ldrm$b;Lasc;Ldqw;Lgw;)Z	a	tryPlaceLeaf
		p	0		world
		p	1		placer
		p	2		random
		p	3		config
		p	4		pos
	m	(Lcqb;Ldrm$b;Lasc;Ldqw;Lgw;IIZ)V	a	placeLeavesRow
		p	1		world
		p	2		placer
		p	3		random
		p	4		config
		p	5		centerPos
		p	6		radius
		p	7		y
		p	8		giantTrunk
	m	(Lcqb;Ldrm$b;Lasc;Ldqw;Lgw;IIZFF)V	a	placeLeavesRowWithHangingLeavesBelow
		p	1		world
		p	2		placer
		p	3		random
		p	4		config
		p	5		centerPos
		p	6		radius
		p	7		y
		p	8		giantTrunk
		p	9		hangingLeavesChance
		p	10		hangingLeavesExtensionChance
	m	(Ldrm;)Lbgd;	a	lambda$foliagePlacerParts$1
		p	0		placer
	m	(Leam;)Z	a	lambda$tryPlaceLeaf$2
		p	0		fluidState
	m	(Lasc;IIIIZ)Z	b	shouldSkipLocationSigned
		p	1		random
		p	2		dx
		p	3		y
		p	4		dz
		p	5		radius
		p	6		giantTrunk
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P2;	b	foliagePlacerParts
		p	0		instance
	m	(Ldrm;)Lbgd;	b	lambda$foliagePlacerParts$0
		p	0		placer
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	Lbgd;	e	radius
	f	Lbgd;	f	offset
c	drm$a	net/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment
	m	(Lgw;IZ)V	<init>	<init>
		p	1		center
		p	2		foliageRadius
		p	3		giantTrunk
	m	()Lgw;	a	pos
	m	()I	b	radiusOffset
	m	()Z	c	doubleTrunk
	f	Lgw;	a	pos
	f	I	b	radiusOffset
	f	Z	c	doubleTrunk
c	drm$b	net/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageSetter
	m	(Lgw;)Z	a	isSet
		p	1		pos
	m	(Lgw;Ldfj;)V	a	set
		p	1		pos
		p	2		state
c	drn	net/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		codec
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Ldrn;	a	register
		p	0		id
		p	1		codec
	f	Ldrn;	a	BLOB_FOLIAGE_PLACER
	f	Ldrn;	b	SPRUCE_FOLIAGE_PLACER
	f	Ldrn;	c	PINE_FOLIAGE_PLACER
	f	Ldrn;	d	ACACIA_FOLIAGE_PLACER
	f	Ldrn;	e	BUSH_FOLIAGE_PLACER
	f	Ldrn;	f	FANCY_FOLIAGE_PLACER
	f	Ldrn;	g	MEGA_JUNGLE_FOLIAGE_PLACER
	f	Ldrn;	h	MEGA_PINE_FOLIAGE_PLACER
	f	Ldrn;	i	DARK_OAK_FOLIAGE_PLACER
	f	Ldrn;	j	RANDOM_SPREAD_FOLIAGE_PLACER
	f	Ldrn;	k	CHERRY_FOLIAGE_PLACER
	f	Lcom/mojang/serialization/Codec;	l	codec
c	dro	net/minecraft/world/level/levelgen/feature/foliageplacers/MegaJungleFoliagePlacer
	m	(Lbgd;Lbgd;I)V	<init>	<init>
		p	1		radius
		p	2		offset
		p	3		height
	m	()Ldrn;	a	type
	m	(Lasc;IIIIZ)Z	a	shouldSkipLocation
		p	1		random
		p	2		dx
		p	3		y
		p	4		dz
		p	5		radius
		p	6		giantTrunk
	m	(Lasc;ILdqw;)I	a	foliageHeight
		p	1		random
		p	2		trunkHeight
		p	3		config
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Lcqb;Ldrm$b;Lasc;Ldqw;ILdrm$a;III)V	a	createFoliage
		p	1		world
		p	2		placer
		p	3		random
		p	4		config
		p	5		trunkHeight
		p	6		treeNode
		p	7		foliageHeight
		p	8		radius
		p	9		offset
	m	(Ldro;)Ljava/lang/Integer;	a	lambda$static$0
		p	0		placer
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	height
c	drp	net/minecraft/world/level/levelgen/feature/foliageplacers/MegaPineFoliagePlacer
	m	(Lbgd;Lbgd;Lbgd;)V	<init>	<init>
		p	1		radius
		p	2		offset
		p	3		crownHeight
	m	()Ldrn;	a	type
	m	(Lasc;IIIIZ)Z	a	shouldSkipLocation
		p	1		random
		p	2		dx
		p	3		y
		p	4		dz
		p	5		radius
		p	6		giantTrunk
	m	(Lasc;ILdqw;)I	a	foliageHeight
		p	1		random
		p	2		trunkHeight
		p	3		config
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Lcqb;Ldrm$b;Lasc;Ldqw;ILdrm$a;III)V	a	createFoliage
		p	1		world
		p	2		placer
		p	3		random
		p	4		config
		p	5		trunkHeight
		p	6		treeNode
		p	7		foliageHeight
		p	8		radius
		p	9		offset
	m	(Ldrp;)Lbgd;	a	lambda$static$0
		p	0		placer
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lbgd;	b	crownHeight
c	drq	net/minecraft/world/level/levelgen/feature/foliageplacers/PineFoliagePlacer
	m	(Lbgd;Lbgd;Lbgd;)V	<init>	<init>
		p	1		radius
		p	2		offset
		p	3		height
	m	()Ldrn;	a	type
	m	(Lasc;I)I	a	foliageRadius
		p	1		random
		p	2		baseHeight
	m	(Lasc;IIIIZ)Z	a	shouldSkipLocation
		p	1		random
		p	2		dx
		p	3		y
		p	4		dz
		p	5		radius
		p	6		giantTrunk
	m	(Lasc;ILdqw;)I	a	foliageHeight
		p	1		random
		p	2		trunkHeight
		p	3		config
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Lcqb;Ldrm$b;Lasc;Ldqw;ILdrm$a;III)V	a	createFoliage
		p	1		world
		p	2		placer
		p	3		random
		p	4		config
		p	5		trunkHeight
		p	6		treeNode
		p	7		foliageHeight
		p	8		radius
		p	9		offset
	m	(Ldrq;)Lbgd;	a	lambda$static$0
		p	0		placer
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lbgd;	b	height
c	drr	net/minecraft/world/level/levelgen/feature/foliageplacers/RandomSpreadFoliagePlacer
	m	(Lbgd;Lbgd;Lbgd;I)V	<init>	<init>
		p	1		radius
		p	2		offset
		p	3		foliageHeight
		p	4		leafPlacementAttempts
	m	()Ldrn;	a	type
	m	(Lasc;IIIIZ)Z	a	shouldSkipLocation
		p	1		random
		p	2		dx
		p	3		y
		p	4		dz
		p	5		radius
		p	6		giantTrunk
	m	(Lasc;ILdqw;)I	a	foliageHeight
		p	1		random
		p	2		trunkHeight
		p	3		config
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Lcqb;Ldrm$b;Lasc;Ldqw;ILdrm$a;III)V	a	createFoliage
		p	1		world
		p	2		placer
		p	3		random
		p	4		config
		p	5		trunkHeight
		p	6		treeNode
		p	7		foliageHeight
		p	8		radius
		p	9		offset
	m	(Ldrr;)Ljava/lang/Integer;	a	lambda$static$1
		p	0		placer
	m	(Ldrr;)Lbgd;	b	lambda$static$0
		p	0		placer
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lbgd;	b	foliageHeight
	f	I	c	leafPlacementAttempts
c	drs	net/minecraft/world/level/levelgen/feature/foliageplacers/SpruceFoliagePlacer
	m	(Lbgd;Lbgd;Lbgd;)V	<init>	<init>
		p	1		radius
		p	2		offset
		p	3		trunkHeight
	m	()Ldrn;	a	type
	m	(Lasc;IIIIZ)Z	a	shouldSkipLocation
		p	1		random
		p	2		dx
		p	3		y
		p	4		dz
		p	5		radius
		p	6		giantTrunk
	m	(Lasc;ILdqw;)I	a	foliageHeight
		p	1		random
		p	2		trunkHeight
		p	3		config
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Lcqb;Ldrm$b;Lasc;Ldqw;ILdrm$a;III)V	a	createFoliage
		p	1		world
		p	2		placer
		p	3		random
		p	4		config
		p	5		trunkHeight
		p	6		treeNode
		p	7		foliageHeight
		p	8		radius
		p	9		offset
	m	(Ldrs;)Lbgd;	a	lambda$static$0
		p	0		placer
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lbgd;	b	trunkHeight
c	drt	net/minecraft/world/level/levelgen/feature/foliageplacers/package-info
c	dru	net/minecraft/world/level/levelgen/feature/package-info
c	drv	net/minecraft/world/level/levelgen/feature/rootplacers/AboveRootPlacement
	m	()Ldsb;	a	aboveRootProvider
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Ldrv;)Ljava/lang/Float;	a	lambda$static$1
		p	0		aboveRootPlacement
	m	()F	b	aboveRootPlacementChance
	m	(Ldrv;)Ldsb;	b	lambda$static$0
		p	0		aboveRootPlacement
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldsb;	b	aboveRootProvider
	f	F	c	aboveRootPlacementChance
c	drw	net/minecraft/world/level/levelgen/feature/rootplacers/MangroveRootPlacement
	m	()Lhi;	a	canGrowThrough
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$6
	m	(Ldrw;)Ljava/lang/Float;	a	lambda$static$5
		p	0		rootPlacement
	m	()Lhi;	b	muddyRootsIn
	m	(Ldrw;)Ljava/lang/Integer;	b	lambda$static$4
		p	0		rootPlacement
	m	()Ldsb;	c	muddyRootsProvider
	m	(Ldrw;)Ljava/lang/Integer;	c	lambda$static$3
		p	0		rootPlacement
	m	()I	d	maxRootWidth
	m	(Ldrw;)Ldsb;	d	lambda$static$2
		p	0		rootPlacement
	m	()I	e	maxRootLength
	m	(Ldrw;)Lhi;	e	lambda$static$1
		p	0		rootPlacement
	m	()F	f	randomSkewChance
	m	(Ldrw;)Lhi;	f	lambda$static$0
		p	0		rootPlacement
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lhi;	b	canGrowThrough
	f	Lhi;	c	muddyRootsIn
	f	Ldsb;	d	muddyRootsProvider
	f	I	e	maxRootWidth
	f	I	f	maxRootLength
	f	F	g	randomSkewChance
c	drx	net/minecraft/world/level/levelgen/feature/rootplacers/MangroveRootPlacer
	m	(Lbgd;Ldsb;Ljava/util/Optional;Ldrw;)V	<init>	<init>
		p	1		trunkOffsetY
		p	2		rootProvider
		p	3		aboveRootPlacement
		p	4		mangroveRootPlacement
	m	()Ldrz;	a	type
	m	(Lcqb;Lasc;Lgw;Lha;Lgw;Ljava/util/List;I)Z	a	simulateRoots
		p	1		world
		p	2		random
		p	3		pos
		p	4		direction
		p	5		origin
		p	6		offshootPositions
		p	7		rootLength
	m	(Lcqb;Lgw;)Z	a	canPlaceRoot
		p	1		world
		p	2		pos
	m	(Lcqb;Ljava/util/function/BiConsumer;Lasc;Lgw;Ldqw;)V	a	placeRoot
		p	1		world
		p	2		replacer
		p	3		random
		p	4		pos
		p	5		config
	m	(Lcqb;Ljava/util/function/BiConsumer;Lasc;Lgw;Lgw;Ldqw;)Z	a	placeRoots
		p	1		world
		p	2		replacer
		p	3		random
		p	4		pos
		p	5		trunkPos
		p	6		config
	m	(Ldfj;)Z	a	lambda$placeRoot$3
		p	1		state
	m	(Ldrx;)Ldrw;	a	lambda$static$0
		p	0		rootPlacer
	m	(Lgw;Lha;Lasc;Lgw;)Ljava/util/List;	a	potentialRootPositions
		p	1		pos
		p	2		direction
		p	3		random
		p	4		origin
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$1
	m	(Ldfj;)Z	b	lambda$canPlaceRoot$2
		p	1		state
	f	I	a	ROOT_WIDTH_LIMIT
	f	I	b	ROOT_LENGTH_LIMIT
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Ldrw;	h	mangroveRootPlacement
c	dry	net/minecraft/world/level/levelgen/feature/rootplacers/RootPlacer
	m	(Lbgd;Ldsb;Ljava/util/Optional;)V	<init>	<init>
		p	1		trunkOffsetY
		p	2		rootProvider
		p	3		aboveRootPlacement
	m	()Ldrz;	a	type
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P3;	a	rootPlacerParts
	m	(Lcqb;Lgw;)Z	a	canPlaceRoot
		p	1		world
		p	2		pos
	m	(Lcqb;Lgw;Ldfj;)Ldfj;	a	getPotentiallyWaterloggedState
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcqb;Ljava/util/function/BiConsumer;Lasc;Lgw;Ldqw;)V	a	placeRoot
		p	1		world
		p	2		replacer
		p	3		random
		p	4		pos
		p	5		config
	m	(Lcqb;Ljava/util/function/BiConsumer;Lasc;Lgw;Lgw;Ldqw;)Z	a	placeRoots
		p	1		world
		p	2		replacer
		p	3		random
		p	4		pos
		p	5		trunkPos
		p	6		config
	m	(Ldry;)Ljava/util/Optional;	a	lambda$rootPlacerParts$2
		p	0		rootPlacer
	m	(Leam;)Z	a	lambda$getPotentiallyWaterloggedState$3
		p	0		fluidState
	m	(Lgw;Lasc;)Lgw;	a	getTrunkOrigin
		p	1		pos
		p	2		random
	m	(Ldry;)Ldsb;	b	lambda$rootPlacerParts$1
		p	0		rootPlacer
	m	(Ldry;)Lbgd;	c	lambda$rootPlacerParts$0
		p	0		rootPlacer
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	Lbgd;	e	trunkOffsetY
	f	Ldsb;	f	rootProvider
	f	Ljava/util/Optional;	g	aboveRootPlacement
c	drz	net/minecraft/world/level/levelgen/feature/rootplacers/RootPlacerType
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		codec
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Ldrz;	a	register
		p	0		id
		p	1		codec
	f	Ldrz;	a	MANGROVE_ROOT_PLACER
	f	Lcom/mojang/serialization/Codec;	b	codec
c	dsa	net/minecraft/world/level/levelgen/feature/rootplacers/package-info
c	dsb	net/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProvider
	m	()Ldsc;	a	type
	m	(Lasc;Lgw;)Ldfj;	a	getState
		p	1		random
		p	2		pos
	m	(Lcsv;)Ldsk;	a	simple
		p	0		block
	m	(Ldfj;)Ldsk;	a	simple
		p	0		state
	f	Lcom/mojang/serialization/Codec;	a	CODEC
c	dsc	net/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProviderType
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		codec
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Ldsc;	a	register
		p	0		id
		p	1		codec
	f	Ldsc;	a	SIMPLE_STATE_PROVIDER
	f	Ldsc;	b	WEIGHTED_STATE_PROVIDER
	f	Ldsc;	c	NOISE_THRESHOLD_PROVIDER
	f	Ldsc;	d	NOISE_PROVIDER
	f	Ldsc;	e	DUAL_NOISE_PROVIDER
	f	Ldsc;	f	ROTATED_BLOCK_PROVIDER
	f	Ldsc;	g	RANDOMIZED_INT_STATE_PROVIDER
	f	Lcom/mojang/serialization/Codec;	h	codec
c	dsd	net/minecraft/world/level/levelgen/feature/stateproviders/DualNoiseProvider
	m	(Larp;Ldzp$a;FJLdzp$a;FLjava/util/List;)V	<init>	<init>
		p	1		variety
		p	2		slowNoiseParameters
		p	3		slowScale
		p	4		seed
		p	6		noiseParameters
		p	7		scale
		p	8		states
	m	()Ldsc;	a	type
	m	(Lasc;Lgw;)Ldfj;	a	getState
		p	1		random
		p	2		pos
	m	(Ldsd;)Ljava/lang/Float;	a	lambda$static$2
	m	(Lgw;)D	a	getSlowNoiseValue
		p	1		pos
	m	(Ldsd;)Ldzp$a;	b	lambda$static$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	c	lambda$static$3
	m	(Ldsd;)Larp;	c	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Larp;	i	variety
	f	Ldzp$a;	j	slowNoiseParameters
	f	F	k	slowScale
	f	Ldzp;	l	slowNoise
c	dse	net/minecraft/world/level/levelgen/feature/stateproviders/NoiseBasedStateProvider
	m	(JLdzp$a;F)V	<init>	<init>
		p	1		seed
		p	3		noiseParameters
		p	4		scale
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P3;	a	noiseCodec
		p	0		instance
	m	(Ldse;)Ljava/lang/Float;	a	lambda$noiseCodec$2
	m	(Lgw;D)D	a	getNoiseValue
		p	1		pos
		p	2		scale
	m	(Ldse;)Ldzp$a;	b	lambda$noiseCodec$1
	m	(Ldse;)Ljava/lang/Long;	c	lambda$noiseCodec$0
	f	J	c	seed
	f	Ldzp$a;	d	parameters
	f	F	e	scale
	f	Ldzp;	f	noise
c	dsf	net/minecraft/world/level/levelgen/feature/stateproviders/NoiseProvider
	m	(JLdzp$a;FLjava/util/List;)V	<init>	<init>
		p	1		seed
		p	3		noiseParameters
		p	4		scale
		p	5		states
	m	()Ldsc;	a	type
	m	(Lasc;Lgw;)Ldfj;	a	getState
		p	1		random
		p	2		pos
	m	(Ldsf;)Ljava/util/List;	a	lambda$noiseProviderCodec$0
	m	(Ljava/util/List;D)Ldfj;	a	getRandomState
		p	1		states
		p	2		value
	m	(Ljava/util/List;Lgw;D)Ldfj;	a	getRandomState
		p	1		states
		p	2		pos
		p	3		scale
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P4;	b	noiseProviderCodec
		p	0		instance
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	c	lambda$static$1
	f	Lcom/mojang/serialization/Codec;	g	CODEC
	f	Ljava/util/List;	h	states
c	dsg	net/minecraft/world/level/levelgen/feature/stateproviders/NoiseThresholdProvider
	m	(JLdzp$a;FFFLdfj;Ljava/util/List;Ljava/util/List;)V	<init>	<init>
		p	1		seed
		p	3		noiseParameters
		p	4		scale
		p	5		threshold
		p	6		highChance
		p	7		defaultState
		p	8		lowStates
		p	9		highStates
	m	()Ldsc;	a	type
	m	(Lasc;Lgw;)Ldfj;	a	getState
		p	1		random
		p	2		pos
	m	(Ldsg;)Ljava/util/List;	a	lambda$static$4
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$5
	m	(Ldsg;)Ljava/util/List;	b	lambda$static$3
	m	(Ldsg;)Ldfj;	c	lambda$static$2
	m	(Ldsg;)Ljava/lang/Float;	d	lambda$static$1
	m	(Ldsg;)Ljava/lang/Float;	e	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	F	g	threshold
	f	F	h	highChance
	f	Ldfj;	i	defaultState
	f	Ljava/util/List;	j	lowStates
	f	Ljava/util/List;	k	highStates
c	dsh	net/minecraft/world/level/levelgen/feature/stateproviders/RandomizedIntStateProvider
	m	(Ldsb;Ldgj;Lbgd;)V	<init>	<init>
		p	1		source
		p	2		property
		p	3		values
	m	(Ldsb;Ljava/lang/String;Lbgd;)V	<init>	<init>
		p	1		source
		p	2		propertyName
		p	3		values
	m	()Ldsc;	a	type
	m	(Lasc;Lgw;)Ldfj;	a	getState
		p	1		random
		p	2		pos
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	(Ldfj;Ljava/lang/String;)Ldgj;	a	findProperty
		p	0		state
		p	1		propertyName
	m	(Ldgm;)Ldgj;	a	lambda$findProperty$6
		p	0		property
	m	(Ldsh;)Lbgd;	a	lambda$static$2
	m	(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;	a	lambda$findProperty$7
	m	(Ljava/lang/String;Ldgm;)Z	a	lambda$findProperty$4
		p	1		property
	m	(Ldgm;)Z	b	lambda$findProperty$5
		p	0		property
	m	(Ldsh;)Ljava/lang/String;	b	lambda$static$1
	m	(Ldsh;)Ldsb;	c	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Ldsb;	c	source
	f	Ljava/lang/String;	d	propertyName
	f	Ldgj;	e	property
	f	Lbgd;	f	values
c	dsi	net/minecraft/world/level/levelgen/feature/stateproviders/RotatedBlockProvider
	m	(Lcsv;)V	<init>	<init>
		p	1		block
	m	()Ldsc;	a	type
	m	(Lasc;Lgw;)Ldfj;	a	getState
		p	1		random
		p	2		pos
	m	(Ldsi;)Lcsv;	a	lambda$static$0
		p	0		provider
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lcsv;	c	block
c	dsj	net/minecraft/world/level/levelgen/feature/stateproviders/RuleBasedBlockStateProvider
	m	()Ldsb;	a	fallback
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	(Lcqp;Lasc;Lgw;)Ldfj;	a	getState
		p	1		world
		p	2		random
		p	3		pos
	m	(Lcsv;)Ldsj;	a	simple
		p	0		block
	m	(Ldsb;)Ldsj;	a	simple
		p	0		stateProvider
	m	()Ljava/util/List;	b	rules
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldsb;	b	fallback
	f	Ljava/util/List;	c	rules
c	dsj$a	net/minecraft/world/level/levelgen/feature/stateproviders/RuleBasedBlockStateProvider$Rule
	m	()Ldlz;	a	ifTrue
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()Ldsb;	b	then
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldlz;	b	ifTrue
	f	Ldsb;	c	then
c	dsk	net/minecraft/world/level/levelgen/feature/stateproviders/SimpleStateProvider
	m	(Ldfj;)V	<init>	<init>
		p	1		state
	m	()Ldsc;	a	type
	m	(Lasc;Lgw;)Ldfj;	a	getState
		p	1		random
		p	2		pos
	m	(Ldsk;)Ldfj;	a	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Ldfj;	c	state
c	dsl	net/minecraft/world/level/levelgen/feature/stateproviders/WeightedStateProvider
	m	(Lbfi$a;)V	<init>	<init>
		p	1		states
	m	(Lbfi;)V	<init>	<init>
		p	1		states
	m	()Ldsc;	a	type
	m	(Lasc;Lgw;)Ldfj;	a	getState
		p	1		random
		p	2		pos
	m	(Lbfi;)Lcom/mojang/serialization/DataResult;	a	create
		p	0		states
	m	(Ldsl;)Lbfi;	a	lambda$static$0
	m	()Ljava/lang/String;	b	lambda$create$1
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lbfi;	c	weightedList
c	dsm	net/minecraft/world/level/levelgen/feature/stateproviders/package-info
c	dsn	net/minecraft/world/level/levelgen/feature/treedecorators/AlterGroundDecorator
	m	(Ldsb;)V	<init>	<init>
		p	1		provider
	m	()Ldst;	a	type
	m	(ILgw;)Z	a	lambda$place$1
		p	1		pos
	m	(Ldsn;)Ldsb;	a	lambda$static$0
		p	0		decorator
	m	(Ldss$a;)V	a	place
		p	1		generator
	m	(Ldss$a;Lgw;)V	a	placeCircle
		p	1		generator
		p	2		origin
	m	(Ldss$a;Lgw;)V	b	placeBlockAt
		p	1		generator
		p	2		origin
	m	(Ldss$a;Lgw;)V	c	lambda$place$2
		p	2		pos
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldsb;	b	provider
c	dso	net/minecraft/world/level/levelgen/feature/treedecorators/AttachedToLeavesDecorator
	m	(FIILdsb;ILjava/util/List;)V	<init>	<init>
		p	1		probability
		p	2		exclusionRadiusXZ
		p	3		exclusionRadiusY
		p	4		blockProvider
		p	5		requiredEmptyBlocks
		p	6		directions
	m	()Ldst;	a	type
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$6
	m	(Ldso;)Ljava/util/List;	a	lambda$static$5
		p	0		treeDecorator
	m	(Ldss$a;)V	a	place
		p	1		generator
	m	(Ldss$a;Lgw;Lha;)Z	a	hasRequiredEmptyBlocks
		p	1		generator
		p	2		pos
		p	3		direction
	m	(Ldso;)Ljava/lang/Integer;	b	lambda$static$4
		p	0		treeDecorator
	m	(Ldso;)Ldsb;	c	lambda$static$3
		p	0		treeDecorator
	m	(Ldso;)Ljava/lang/Integer;	d	lambda$static$2
		p	0		treeDecorator
	m	(Ldso;)Ljava/lang/Integer;	e	lambda$static$1
		p	0		treeDecorator
	m	(Ldso;)Ljava/lang/Float;	f	lambda$static$0
		p	0		treeDecorator
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	F	b	probability
	f	I	c	exclusionRadiusXZ
	f	I	d	exclusionRadiusY
	f	Ldsb;	e	blockProvider
	f	I	f	requiredEmptyBlocks
	f	Ljava/util/List;	g	directions
c	dsp	net/minecraft/world/level/levelgen/feature/treedecorators/BeehiveDecorator
	m	(F)V	<init>	<init>
		p	1		probability
	m	()Ldst;	a	type
	m	(I)[Lha;	a	lambda$static$2
	m	(ILgw;)Z	a	lambda$place$3
		p	1		pos
	m	(Lasc;Ldcs;)V	a	lambda$place$6
		p	1		blockEntity
	m	(Ldsp;)Ljava/lang/Float;	a	lambda$static$0
		p	0		decorator
	m	(Ldss$a;)V	a	place
		p	1		generator
	m	(Ldss$a;Lgw;)Z	a	lambda$place$5
		p	1		pos
	m	(Lgw;)Ljava/util/stream/Stream;	a	lambda$place$4
		p	0		pos
	m	(Lha;)Z	a	lambda$static$1
		p	0		direction
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lha;	b	WORLDGEN_FACING
	f	[Lha;	c	SPAWN_DIRECTIONS
	f	F	d	probability
c	dsq	net/minecraft/world/level/levelgen/feature/treedecorators/CocoaDecorator
	m	(F)V	<init>	<init>
		p	1		probability
	m	()Ldst;	a	type
	m	(ILgw;)Z	a	lambda$place$1
		p	1		pos
	m	(Lasc;Ldss$a;Lgw;)V	a	lambda$place$2
		p	2		pos
	m	(Ldsq;)Ljava/lang/Float;	a	lambda$static$0
		p	0		decorator
	m	(Ldss$a;)V	a	place
		p	1		generator
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	F	b	probability
c	dsr	net/minecraft/world/level/levelgen/feature/treedecorators/LeaveVineDecorator
	m	(F)V	<init>	<init>
		p	1		probability
	m	()Ldst;	a	type
	m	(Lasc;Ldss$a;Lgw;)V	a	lambda$place$1
		p	3		pos
	m	(Ldsr;)Ljava/lang/Float;	a	lambda$static$0
		p	0		treeDecorator
	m	(Ldss$a;)V	a	place
		p	1		generator
	m	(Lgw;Ldga;Ldss$a;)V	a	addHangingVine
		p	0		pos
		p	1		faceProperty
		p	2		generator
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	F	b	probability
c	dss	net/minecraft/world/level/levelgen/feature/treedecorators/TreeDecorator
	m	()Ldst;	a	type
	m	(Ldss$a;)V	a	place
		p	1		generator
	f	Lcom/mojang/serialization/Codec;	h	CODEC
c	dss$a	net/minecraft/world/level/levelgen/feature/treedecorators/TreeDecorator$Context
	m	(Lcqb;Ljava/util/function/BiConsumer;Lasc;Ljava/util/Set;Ljava/util/Set;Ljava/util/Set;)V	<init>	<init>
		p	1		world
		p	2		replacer
		p	3		random
		p	4		logPositions
		p	5		leavesPositions
		p	6		rootPositions
	m	()Lcqb;	a	level
	m	(Lgw;)Z	a	isAir
		p	1		pos
	m	(Lgw;Ldfj;)V	a	setBlock
		p	1		pos
		p	2		state
	m	(Lgw;Ldga;)V	a	placeVine
		p	1		pos
		p	2		faceProperty
	m	()Lasc;	b	random
	m	()Lit/unimi/dsi/fastutil/objects/ObjectArrayList;	c	logs
	m	()Lit/unimi/dsi/fastutil/objects/ObjectArrayList;	d	leaves
	m	()Lit/unimi/dsi/fastutil/objects/ObjectArrayList;	e	roots
	f	Lcqb;	a	level
	f	Ljava/util/function/BiConsumer;	b	decorationSetter
	f	Lasc;	c	random
	f	Lit/unimi/dsi/fastutil/objects/ObjectArrayList;	d	logs
	f	Lit/unimi/dsi/fastutil/objects/ObjectArrayList;	e	leaves
	f	Lit/unimi/dsi/fastutil/objects/ObjectArrayList;	f	roots
c	dst	net/minecraft/world/level/levelgen/feature/treedecorators/TreeDecoratorType
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		codec
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Ldst;	a	register
		p	0		id
		p	1		codec
	f	Ldst;	a	TRUNK_VINE
	f	Ldst;	b	LEAVE_VINE
	f	Ldst;	c	COCOA
	f	Ldst;	d	BEEHIVE
	f	Ldst;	e	ALTER_GROUND
	f	Ldst;	f	ATTACHED_TO_LEAVES
	f	Lcom/mojang/serialization/Codec;	g	codec
c	dsu	net/minecraft/world/level/levelgen/feature/treedecorators/TrunkVineDecorator
	m	()Ldst;	a	type
	m	(Lasc;Ldss$a;Lgw;)V	a	lambda$place$1
		p	2		pos
	m	(Ldss$a;)V	a	place
		p	1		generator
	m	()Ldsu;	b	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldsu;	b	INSTANCE
c	dsv	net/minecraft/world/level/levelgen/feature/treedecorators/package-info
c	dsw	net/minecraft/world/level/levelgen/feature/trunkplacers/BendingTrunkPlacer
	m	(IIIILbgd;)V	<init>	<init>
		p	1		baseHeight
		p	2		firstRandomHeight
		p	3		secondRandomHeight
		p	4		minHeightForLeaves
		p	5		bendLength
	m	()Ldtf;	a	type
	m	(Lcqb;Ljava/util/function/BiConsumer;Lasc;ILgw;Ldqw;)Ljava/util/List;	a	placeTrunk
		p	1		world
		p	2		replacer
		p	3		random
		p	4		height
		p	5		startPos
		p	6		config
	m	(Ldsw;)Lbgd;	a	lambda$static$1
		p	0		placer
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$2
		p	0		instance
	m	(Ldsw;)Ljava/lang/Integer;	b	lambda$static$0
		p	0		placer
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	minHeightForLeaves
	f	Lbgd;	h	bendLength
c	dsx	net/minecraft/world/level/levelgen/feature/trunkplacers/CherryTrunkPlacer
	m	(IIILbgd;Lbgd;Lbgj;Lbgd;)V	<init>	<init>
		p	1		baseHeight
		p	2		firstRandomHeight
		p	3		secondRandomHeight
		p	4		branchCount
		p	5		branchHorizontalLength
		p	6		branchStartOffsetFromTop
		p	7		branchEndOffsetFromTop
	m	()Ldtf;	a	type
	m	(Lbgj;)Lcom/mojang/serialization/DataResult;	a	lambda$static$1
		p	0		branchStartOffsetFromTop
	m	(Lcqb;Ljava/util/function/BiConsumer;Lasc;ILgw;Ldqw;)Ljava/util/List;	a	placeTrunk
		p	1		world
		p	2		replacer
		p	3		random
		p	4		height
		p	5		startPos
		p	6		config
	m	(Lcqb;Ljava/util/function/BiConsumer;Lasc;ILgw;Ldqw;Ljava/util/function/Function;Lha;IZLgw$a;)Ldrm$a;	a	generateBranch
		p	1		world
		p	2		replacer
		p	3		random
		p	4		height
		p	5		startPos
		p	6		config
		p	7		withAxisFunction
		p	8		direction
		p	9		branchStartOffset
		p	10		branchBelowHeight
		p	11		mutablePos
	m	(Ldsx;)Lbgd;	a	lambda$static$5
		p	0		trunkPlacer
	m	(Lha;Ldfj;)Ldfj;	a	lambda$placeTrunk$7
		p	1		state
	m	()Ljava/lang/String;	b	lambda$static$0
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$6
		p	0		instance
	m	(Ldsx;)Lbgj;	b	lambda$static$4
		p	0		trunkPlacer
	m	(Ldsx;)Lbgd;	c	lambda$static$3
		p	0		trunkPlacer
	m	(Ldsx;)Lbgd;	d	lambda$static$2
		p	0		trunkPlacer
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcom/mojang/serialization/Codec;	b	BRANCH_START_CODEC
	f	Lbgd;	h	branchCount
	f	Lbgd;	i	branchHorizontalLength
	f	Lbgj;	j	branchStartOffsetFromTop
	f	Lbgj;	k	secondBranchStartOffsetFromTop
	f	Lbgd;	l	branchEndOffsetFromTop
c	dsy	net/minecraft/world/level/levelgen/feature/trunkplacers/DarkOakTrunkPlacer
	m	(III)V	<init>	<init>
		p	1		baseHeight
		p	2		firstRandomHeight
		p	3		secondRandomHeight
	m	()Ldtf;	a	type
	m	(Lcqb;Ljava/util/function/BiConsumer;Lasc;ILgw;Ldqw;)Ljava/util/List;	a	placeTrunk
		p	1		world
		p	2		replacer
		p	3		random
		p	4		height
		p	5		startPos
		p	6		config
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$0
		p	0		instance
	f	Lcom/mojang/serialization/Codec;	a	CODEC
c	dsz	net/minecraft/world/level/levelgen/feature/trunkplacers/FancyTrunkPlacer
	m	(III)V	<init>	<init>
		p	1		baseHeight
		p	2		firstRandomHeight
		p	3		secondRandomHeight
	m	()Ldtf;	a	type
	m	(II)Z	a	trimBranches
		p	1		treeHeight
		p	2		height
	m	(Lcqb;Ljava/util/function/BiConsumer;Lasc;ILgw;Ldqw;)Ljava/util/List;	a	placeTrunk
		p	1		world
		p	2		replacer
		p	3		random
		p	4		height
		p	5		startPos
		p	6		config
	m	(Lcqb;Ljava/util/function/BiConsumer;Lasc;ILgw;Ljava/util/List;Ldqw;)V	a	makeBranches
		p	1		world
		p	2		replacer
		p	3		random
		p	4		treeHeight
		p	5		startPos
		p	6		branchPositions
		p	7		config
	m	(Lcqb;Ljava/util/function/BiConsumer;Lasc;Lgw;Lgw;ZLdqw;)Z	a	makeLimb
		p	1		world
		p	2		replacer
		p	3		random
		p	4		startPos
		p	5		branchPos
		p	6		make
		p	7		config
	m	(Lgw;)I	a	getSteps
		p	1		offset
	m	(Lgw;Lgw;)Lha$a;	a	getLogAxis
		p	1		branchStart
		p	2		branchEnd
	m	(Lgw;Lgw;Ldfj;)Ldfj;	a	lambda$makeLimb$1
		p	3		state
	m	(II)F	b	treeShape
		p	0		treeHeight
		p	1		height
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$0
		p	0		instance
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	D	b	TRUNK_HEIGHT_SCALE
	f	D	h	CLUSTER_DENSITY_MAGIC
	f	D	i	BRANCH_SLOPE
	f	D	j	BRANCH_LENGTH_MAGIC
c	dsz$a	net/minecraft/world/level/levelgen/feature/trunkplacers/FancyTrunkPlacer$FoliageCoords
	m	(Lgw;I)V	<init>	<init>
		p	1		pos
		p	2		width
	m	()I	a	getBranchBase
	f	Ldrm$a;	a	attachment
	f	I	b	branchBase
c	dta	net/minecraft/world/level/levelgen/feature/trunkplacers/ForkingTrunkPlacer
	m	(III)V	<init>	<init>
		p	1		baseHeight
		p	2		firstRandomHeight
		p	3		secondRandomHeight
	m	()Ldtf;	a	type
	m	(Lcqb;Ljava/util/function/BiConsumer;Lasc;ILgw;Ldqw;)Ljava/util/List;	a	placeTrunk
		p	1		world
		p	2		replacer
		p	3		random
		p	4		height
		p	5		startPos
		p	6		config
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$0
		p	0		instance
	f	Lcom/mojang/serialization/Codec;	a	CODEC
c	dtb	net/minecraft/world/level/levelgen/feature/trunkplacers/GiantTrunkPlacer
	m	(III)V	<init>	<init>
		p	1		baseHeight
		p	2		firstRandomHeight
		p	3		secondRandomHeight
	m	()Ldtf;	a	type
	m	(Lcqb;Ljava/util/function/BiConsumer;Lasc;ILgw;Ldqw;)Ljava/util/List;	a	placeTrunk
		p	1		world
		p	2		replacer
		p	3		random
		p	4		height
		p	5		startPos
		p	6		config
	m	(Lcqb;Ljava/util/function/BiConsumer;Lasc;Lgw$a;Ldqw;Lgw;III)V	a	placeLogIfFreeWithOffset
		p	1		world
		p	2		replacer
		p	3		random
		p	4		tmpPos
		p	5		config
		p	6		startPos
		p	7		dx
		p	8		dy
		p	9		dz
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$0
		p	0		instance
	f	Lcom/mojang/serialization/Codec;	a	CODEC
c	dtc	net/minecraft/world/level/levelgen/feature/trunkplacers/MegaJungleTrunkPlacer
	m	(III)V	<init>	<init>
		p	1		baseHeight
		p	2		firstRandomHeight
		p	3		secondRandomHeight
	m	()Ldtf;	a	type
	m	(Lcqb;Ljava/util/function/BiConsumer;Lasc;ILgw;Ldqw;)Ljava/util/List;	a	placeTrunk
		p	1		world
		p	2		replacer
		p	3		random
		p	4		height
		p	5		startPos
		p	6		config
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$0
		p	0		instance
	f	Lcom/mojang/serialization/Codec;	b	CODEC
c	dtd	net/minecraft/world/level/levelgen/feature/trunkplacers/StraightTrunkPlacer
	m	(III)V	<init>	<init>
		p	1		baseHeight
		p	2		firstRandomHeight
		p	3		secondRandomHeight
	m	()Ldtf;	a	type
	m	(Lcqb;Ljava/util/function/BiConsumer;Lasc;ILgw;Ldqw;)Ljava/util/List;	a	placeTrunk
		p	1		world
		p	2		replacer
		p	3		random
		p	4		height
		p	5		startPos
		p	6		config
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$0
		p	0		instance
	f	Lcom/mojang/serialization/Codec;	a	CODEC
c	dte	net/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacer
	m	(III)V	<init>	<init>
		p	1		baseHeight
		p	2		firstRandomHeight
		p	3		secondRandomHeight
	m	()Ldtf;	a	type
	m	(Lasc;)I	a	getTreeHeight
		p	1		random
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P3;	a	trunkPlacerParts
		p	0		instance
	m	(Lcqb;Lgw;)Z	a	validTreePos
		p	1		world
		p	2		pos
	m	(Lcqb;Ljava/util/function/BiConsumer;Lasc;ILgw;Ldqw;)Ljava/util/List;	a	placeTrunk
		p	1		world
		p	2		replacer
		p	3		random
		p	4		height
		p	5		startPos
		p	6		config
	m	(Lcqb;Ljava/util/function/BiConsumer;Lasc;Lgw$a;Ldqw;)V	a	placeLogIfFree
		p	1		world
		p	2		replacer
		p	3		random
		p	4		pos
		p	5		config
	m	(Lcqb;Ljava/util/function/BiConsumer;Lasc;Lgw;Ldqw;)V	a	setDirtAt
		p	0		world
		p	1		replacer
		p	2		random
		p	3		pos
		p	4		config
	m	(Lcqb;Ljava/util/function/BiConsumer;Lasc;Lgw;Ldqw;Ljava/util/function/Function;)Z	a	placeLog
		p	1		world
		p	2		replacer
		p	3		random
		p	4		pos
		p	5		config
	m	(Ldfj;)Z	a	lambda$isFree$4
		p	0		state
	m	(Ldte;)Ljava/lang/Integer;	a	lambda$trunkPlacerParts$2
		p	0		placer
	m	(Lcqb;Lgw;)Z	b	isFree
		p	1		world
		p	2		pos
	m	(Lcqb;Ljava/util/function/BiConsumer;Lasc;Lgw;Ldqw;)Z	b	placeLog
		p	1		world
		p	2		replacer
		p	3		random
		p	4		pos
		p	5		config
	m	(Ldfj;)Z	b	lambda$isDirt$3
		p	0		state
	m	(Ldte;)Ljava/lang/Integer;	b	lambda$trunkPlacerParts$1
		p	0		placer
	m	(Lcqb;Lgw;)Z	c	isDirt
		p	0		world
		p	1		pos
	m	(Ldte;)Ljava/lang/Integer;	c	lambda$trunkPlacerParts$0
		p	0		placer
	f	I	a	MAX_BASE_HEIGHT
	f	I	b	MAX_RAND
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	I	d	MAX_HEIGHT
	f	I	e	baseHeight
	f	I	f	heightRandA
	f	I	g	heightRandB
c	dtf	net/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerType
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		codec
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Ldtf;	a	register
		p	0		id
		p	1		codec
	f	Ldtf;	a	STRAIGHT_TRUNK_PLACER
	f	Ldtf;	b	FORKING_TRUNK_PLACER
	f	Ldtf;	c	GIANT_TRUNK_PLACER
	f	Ldtf;	d	MEGA_JUNGLE_TRUNK_PLACER
	f	Ldtf;	e	DARK_OAK_TRUNK_PLACER
	f	Ldtf;	f	FANCY_TRUNK_PLACER
	f	Ldtf;	g	BENDING_TRUNK_PLACER
	f	Ldtf;	h	UPWARDS_BRANCHING_TRUNK_PLACER
	f	Ldtf;	i	CHERRY_TRUNK_PLACER
	f	Lcom/mojang/serialization/Codec;	j	codec
c	dtg	net/minecraft/world/level/levelgen/feature/trunkplacers/UpwardsBranchingTrunkPlacer
	m	(IIILbgd;FLbgd;Lhi;)V	<init>	<init>
		p	1		baseHeight
		p	2		firstRandomHeight
		p	3		secondRandomHeight
		p	4		extraBranchSteps
		p	5		placeBranchPerLogProbability
		p	6		extraBranchLength
		p	7		canGrowThrough
	m	()Ldtf;	a	type
	m	(Lcqb;Lgw;)Z	a	validTreePos
		p	1		world
		p	2		pos
	m	(Lcqb;Ljava/util/function/BiConsumer;Lasc;ILdqw;Ljava/util/List;Lgw$a;ILha;II)V	a	placeBranch
		p	1		world
		p	2		replacer
		p	3		random
		p	4		height
		p	5		config
		p	6		nodes
		p	7		pos
		p	8		yOffset
		p	9		direction
		p	10		length
		p	11		steps
	m	(Lcqb;Ljava/util/function/BiConsumer;Lasc;ILgw;Ldqw;)Ljava/util/List;	a	placeTrunk
		p	1		world
		p	2		replacer
		p	3		random
		p	4		height
		p	5		startPos
		p	6		config
	m	(Ldfj;)Z	a	lambda$validTreePos$5
		p	1		state
	m	(Ldtg;)Lhi;	a	lambda$static$3
		p	0		trunkPlacer
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$4
	m	(Ldtg;)Lbgd;	b	lambda$static$2
		p	0		trunkPlacer
	m	(Ldtg;)Ljava/lang/Float;	c	lambda$static$1
		p	0		trunkPlacer
	m	(Ldtg;)Lbgd;	d	lambda$static$0
		p	0		trunkPlacer
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lbgd;	b	extraBranchSteps
	f	F	h	placeBranchPerLogProbability
	f	Lbgd;	i	extraBranchLength
	f	Lhi;	j	canGrowThrough
c	dth	net/minecraft/world/level/levelgen/feature/trunkplacers/package-info
c	dti	net/minecraft/world/level/levelgen/flat/FlatLayerInfo
	m	(ILcsv;)V	<init>	<init>
		p	1		thickness
		p	2		block
	m	()I	a	getHeight
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Ldti;)Lcsv;	a	lambda$static$0
		p	0		layer
	m	()Ldfj;	b	getBlockState
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcsv;	b	block
	f	I	c	height
c	dtj	net/minecraft/world/level/levelgen/flat/FlatLevelGeneratorPreset
	m	()Lhe;	a	displayItem
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Ldtj;)Ldtl;	a	lambda$static$1
		p	0		preset
	m	()Ldtl;	b	settings
	m	(Ldtj;)Lhe;	b	lambda$static$0
		p	0		preset
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lhe;	c	displayItem
	f	Ldtl;	d	settings
c	dtk	net/minecraft/world/level/levelgen/flat/FlatLevelGeneratorPresets
	m	(Ljava/lang/String;)Laev;	a	register
		p	0		id
	m	(Lnr;)V	a	bootstrap
		p	0		presetRegisterable
	f	Laev;	a	CLASSIC_FLAT
	f	Laev;	b	TUNNELERS_DREAM
	f	Laev;	c	WATER_WORLD
	f	Laev;	d	OVERWORLD
	f	Laev;	e	SNOWY_KINGDOM
	f	Laev;	f	BOTTOMLESS_PIT
	f	Laev;	g	DESERT
	f	Laev;	h	REDSTONE_READY
	f	Laev;	i	THE_VOID
c	dtk$a	net/minecraft/world/level/levelgen/flat/FlatLevelGeneratorPresets$Bootstrap
	m	(Lnr;)V	<init>	<init>
		p	1		presetRegisterable
	m	()V	a	run
	m	(Laev;Lcpu;Laev;Ljava/util/Set;ZZ[Ldti;)V	a	register
		p	1		registryKey
		p	2		icon
		p	3		biome
		p	4		structureSetKeys
		p	5		hasFeatures
		p	6		hasLakes
		p	7		layers
	f	Lnr;	a	context
c	dtl	net/minecraft/world/level/levelgen/flat/FlatLevelGeneratorSettings
	m	(Ljava/util/Optional;Lhe;Ljava/util/List;)V	<init>	<init>
		p	1		structureOverrides
		p	2		biome
		p	3		features
	m	(Ljava/util/Optional;Ljava/util/List;ZZLjava/util/Optional;Lhe$c;Lhe;Lhe;)V	<init>	<init>
		p	1		structureOverrides
		p	2		layers
		p	3		lakes
		p	4		features
		p	5		biome
		p	6		fallback
		p	7		undergroundLavaLakeFeature
		p	8		surfaceLavaLakeFeature
	m	()V	a	setDecoration
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
		p	0		instance
	m	(Ldfj;)Z	a	lambda$updateLayers$6
		p	0		state
	m	(Ldtl;)Lcom/mojang/serialization/DataResult;	a	validateHeight
		p	0		config
	m	(Lhe;)Lcqu;	a	adjustGenerationSettings
		p	1		biomeEntry
	m	(Lhf;)Lhe;	a	getDefaultBiome
		p	0		biomeLookup
	m	(Lhf;Lhf;Lhf;)Ldtl;	a	getDefault
		p	0		biomeLookup
		p	1		structureSetLookup
		p	2		featureLookup
	m	(Ljava/util/List;Ljava/util/Optional;Lhe;)Ldtl;	a	withBiomeAndLayers
		p	1		layers
		p	2		structureOverrides
		p	3		biome
	m	(Ljava/util/Optional;Lhe;)Lhe;	a	getBiome
		p	0		biome
		p	1		fallback
	m	()V	b	setAddLakes
	m	(Ldtl;)Ljava/util/Optional;	b	lambda$static$3
		p	0		config
	m	(Lhf;)Ljava/util/List;	b	createLakesList
		p	0		featureLookup
	m	()Ljava/util/Optional;	c	structureOverrides
	m	(Ldtl;)Ljava/lang/Boolean;	c	lambda$static$2
		p	0		config
	m	()Lhe;	d	getBiome
	m	(Ldtl;)Ljava/lang/Boolean;	d	lambda$static$1
		p	0		config
	m	()Ljava/util/List;	e	getLayersInfo
	m	(Ldtl;)Ljava/util/Optional;	e	lambda$static$0
		p	0		config
	m	()Ljava/util/List;	f	getLayers
	m	()V	g	updateLayers
	m	()Ljava/lang/String;	h	lambda$validateHeight$5
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ljava/util/Optional;	c	structureOverrides
	f	Ljava/util/List;	d	layersInfo
	f	Lhe;	e	biome
	f	Ljava/util/List;	f	layers
	f	Z	g	voidGen
	f	Z	h	decoration
	f	Z	i	addLakes
	f	Ljava/util/List;	j	lakes
c	dtm	net/minecraft/world/level/levelgen/flat/package-info
c	dtn	net/minecraft/world/level/levelgen/heightproviders/BiasedToBottomHeight
	m	(Ldlm;Ldlm;I)V	<init>	<init>
		p	1		minOffset
		p	2		maxOffset
		p	3		inner
	m	()Ldtq;	a	getType
	m	(Lasc;Ldlp;)I	a	sample
		p	1		random
		p	2		context
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	(Ldlm;Ldlm;I)Ldtn;	a	of
		p	0		minOffset
		p	1		maxOffset
		p	2		inner
	m	(Ldtn;)Ljava/lang/Integer;	a	lambda$static$2
		p	0		provider
	m	(Ldtn;)Ldlm;	b	lambda$static$1
		p	0		provider
	m	(Ldtn;)Ldlm;	c	lambda$static$0
		p	0		provider
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ldlm;	d	minInclusive
	f	Ldlm;	e	maxInclusive
	f	I	f	inner
c	dto	net/minecraft/world/level/levelgen/heightproviders/ConstantHeight
	m	(Ldlm;)V	<init>	<init>
		p	1		offset
	m	()Ldtq;	a	getType
	m	(Lasc;Ldlp;)I	a	sample
		p	1		random
		p	2		context
	m	(Ldlm;)Ldto;	a	of
		p	0		offset
	m	()Ldlm;	b	getValue
	f	Ldto;	a	ZERO
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Ldlm;	d	value
c	dtp	net/minecraft/world/level/levelgen/heightproviders/HeightProvider
	m	()Ldtq;	a	getType
	m	(Lasc;Ldlp;)I	a	sample
		p	1		random
		p	2		context
	m	(Lcom/mojang/datafixers/util/Either;)Ldtp;	a	lambda$static$1
		p	0		either
	m	(Ldtp;)Lcom/mojang/datafixers/util/Either;	a	lambda$static$2
		p	0		provider
	m	(Ldtp;)Ldtp;	b	lambda$static$0
		p	0		provider
	f	Lcom/mojang/serialization/Codec;	a	CONSTANT_OR_DISPATCH_CODEC
	f	Lcom/mojang/serialization/Codec;	c	CODEC
c	dtq	net/minecraft/world/level/levelgen/heightproviders/HeightProviderType
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	lambda$register$0
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Ldtq;	a	register
		p	0		id
		p	1		codec
	f	Ldtq;	a	CONSTANT
	f	Ldtq;	b	UNIFORM
	f	Ldtq;	c	BIASED_TO_BOTTOM
	f	Ldtq;	d	VERY_BIASED_TO_BOTTOM
	f	Ldtq;	e	TRAPEZOID
	f	Ldtq;	f	WEIGHTED_LIST
c	dtr	net/minecraft/world/level/levelgen/heightproviders/TrapezoidHeight
	m	(Ldlm;Ldlm;I)V	<init>	<init>
		p	1		minOffset
		p	2		maxOffset
		p	3		plateau
	m	()Ldtq;	a	getType
	m	(Lasc;Ldlp;)I	a	sample
		p	1		random
		p	2		context
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	(Ldlm;Ldlm;)Ldtr;	a	of
		p	0		minOffset
		p	1		maxOffset
	m	(Ldlm;Ldlm;I)Ldtr;	a	of
		p	0		minOffset
		p	1		maxOffset
		p	2		plateau
	m	(Ldtr;)Ljava/lang/Integer;	a	lambda$static$2
	m	(Ldtr;)Ldlm;	b	lambda$static$1
		p	0		provider
	m	(Ldtr;)Ldlm;	c	lambda$static$0
		p	0		provider
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ldlm;	d	minInclusive
	f	Ldlm;	e	maxInclusive
	f	I	f	plateau
c	dts	net/minecraft/world/level/levelgen/heightproviders/UniformHeight
	m	(Ldlm;Ldlm;)V	<init>	<init>
		p	1		minOffset
		p	2		maxOffset
	m	()Ldtq;	a	getType
	m	(Lasc;Ldlp;)I	a	sample
		p	1		random
		p	2		context
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Ldlm;Ldlm;)Ldts;	a	of
		p	0		minOffset
		p	1		maxOffset
	m	(Ldts;)Ldlm;	a	lambda$static$1
		p	0		provider
	m	(Ldts;)Ldlm;	b	lambda$static$0
		p	0		provider
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ldlm;	d	minInclusive
	f	Ldlm;	e	maxInclusive
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	f	warnedFor
c	dtt	net/minecraft/world/level/levelgen/heightproviders/VeryBiasedToBottomHeight
	m	(Ldlm;Ldlm;I)V	<init>	<init>
		p	1		minOffset
		p	2		maxOffset
		p	3		inner
	m	()Ldtq;	a	getType
	m	(Lasc;Ldlp;)I	a	sample
		p	1		random
		p	2		context
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	(Ldlm;Ldlm;I)Ldtt;	a	of
		p	0		minOffset
		p	1		maxOffset
		p	2		inner
	m	(Ldtt;)Ljava/lang/Integer;	a	lambda$static$2
		p	0		provider
	m	(Ldtt;)Ldlm;	b	lambda$static$1
		p	0		provider
	m	(Ldtt;)Ldlm;	c	lambda$static$0
		p	0		provider
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ldlm;	d	minInclusive
	f	Ldlm;	e	maxInclusive
	f	I	f	inner
c	dtu	net/minecraft/world/level/levelgen/heightproviders/WeightedListHeight
	m	(Lbfi;)V	<init>	<init>
		p	1		weightedList
	m	()Ldtq;	a	getType
	m	(Lasc;Ldlp;)I	a	sample
		p	1		random
		p	2		context
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Ldtu;)Lbfi;	a	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lbfi;	b	distribution
c	dtv	net/minecraft/world/level/levelgen/heightproviders/package-info
c	dtw	net/minecraft/world/level/levelgen/material/MaterialRuleList
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		samplers
	m	()Ljava/util/List;	a	materialRuleList
	m	(Ldkl$b;)Ldfj;	calculate	calculate
		p	1		pos
	f	Ljava/util/List;	a	materialRuleList
c	dtx	net/minecraft/world/level/levelgen/material/WorldGenMaterialRule
	m	(Ldkw;III)Ldfj;	a	apply
		p	1		sampler
		p	2		x
		p	3		y
		p	4		z
c	dty	net/minecraft/world/level/levelgen/material/package-info
c	dtz	net/minecraft/world/level/levelgen/package-info
c	dua	net/minecraft/world/level/levelgen/placement/BiomeFilter
	m	()Ldua;	a	biome
	m	(Ldun;Lasc;Lgw;)Z	a	shouldPlace
		p	1		context
		p	2		random
		p	3		pos
	m	()Lduq;	b	type
	m	()Ljava/lang/IllegalStateException;	c	lambda$shouldPlace$1
	m	()Ldua;	d	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldua;	c	INSTANCE
c	dub	net/minecraft/world/level/levelgen/placement/BlockPredicateFilter
	m	(Ldlz;)V	<init>	<init>
		p	1		predicate
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Ldlz;)Ldub;	a	forPredicate
		p	0		predicate
	m	(Ldub;)Ldlz;	a	lambda$static$0
	m	(Ldun;Lasc;Lgw;)Z	a	shouldPlace
		p	1		context
		p	2		random
		p	3		pos
	m	()Lduq;	b	type
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldlz;	c	predicate
c	duc	net/minecraft/world/level/levelgen/placement/CarvingMaskPlacement
	m	(Ldko$a;)V	<init>	<init>
		p	1		step
	m	(Ldko$a;)Lduc;	a	forStep
		p	0		step
	m	(Lduc;)Ldko$a;	a	lambda$static$0
		p	0		config
	m	(Ldun;Lasc;Lgw;)Ljava/util/stream/Stream;	a_	getPositions
		p	1		context
		p	2		random
		p	3		pos
	m	()Lduq;	b	type
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldko$a;	c	step
c	dud	net/minecraft/world/level/levelgen/placement/CaveSurface
	m	(Ljava/lang/String;ILha;ILjava/lang/String;)V	<init>	<init>
		p	3		direction
		p	4		offset
		p	5		name
	m	()Lha;	a	getDirection
	m	()I	b	getY
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Ldud;	d	$values
	f	Ldud;	a	CEILING
	f	Ldud;	b	FLOOR
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Lha;	d	direction
	f	I	e	y
	f	Ljava/lang/String;	f	id
	f	[Ldud;	g	$VALUES
c	due	net/minecraft/world/level/levelgen/placement/CountOnEveryLayerPlacement
	m	(Lbgd;)V	<init>	<init>
		p	1		count
	m	(I)Ldue;	a	of
		p	0		count
	m	(Lbgd;)Ldue;	a	of
		p	0		count
	m	(Ldfj;)Z	a	isEmpty
		p	0		state
	m	(Ldue;)Lbgd;	a	lambda$static$0
	m	(Ldun;IIII)I	a	findOnGroundYPosition
		p	0		context
		p	1		x
		p	2		y
		p	3		z
		p	4		targetY
	m	(Ldun;Lasc;Lgw;)Ljava/util/stream/Stream;	a_	getPositions
		p	1		context
		p	2		random
		p	3		pos
	m	()Lduq;	b	type
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lbgd;	c	count
c	duf	net/minecraft/world/level/levelgen/placement/CountPlacement
	m	(Lbgd;)V	<init>	<init>
		p	1		count
	m	(I)Lduf;	a	of
		p	0		count
	m	(Lasc;Lgw;)I	a	count
		p	1		random
		p	2		pos
	m	(Lbgd;)Lduf;	a	of
		p	0		count
	m	(Lduf;)Lbgd;	a	lambda$static$0
	m	()Lduq;	b	type
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lbgd;	c	count
c	dug	net/minecraft/world/level/levelgen/placement/EnvironmentScanPlacement
	m	(Lha;Ldlz;Ldlz;I)V	<init>	<init>
		p	1		direction
		p	2		targetPredicate
		p	3		allowedSearchPredicate
		p	4		maxSteps
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
	m	(Ldug;)Ljava/lang/Integer;	a	lambda$static$3
	m	(Lha;Ldlz;I)Ldug;	a	scanningFor
		p	0		direction
		p	1		targetPredicate
		p	2		maxSteps
	m	(Lha;Ldlz;Ldlz;I)Ldug;	a	scanningFor
		p	0		direction
		p	1		targetPredicate
		p	2		allowedSearchPredicate
		p	3		maxSteps
	m	(Ldun;Lasc;Lgw;)Ljava/util/stream/Stream;	a_	getPositions
		p	1		context
		p	2		random
		p	3		pos
	m	()Lduq;	b	type
	m	(Ldug;)Ldlz;	b	lambda$static$2
	m	(Ldug;)Ldlz;	c	lambda$static$1
	m	(Ldug;)Lha;	d	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lha;	c	directionOfSearch
	f	Ldlz;	d	targetCondition
	f	Ldlz;	e	allowedSearchCondition
	f	I	f	maxSteps
c	duh	net/minecraft/world/level/levelgen/placement/HeightRangePlacement
	m	(Ldtp;)V	<init>	<init>
		p	1		height
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Ldlm;Ldlm;)Lduh;	a	uniform
		p	0		minOffset
		p	1		maxOffset
	m	(Ldtp;)Lduh;	a	of
		p	0		height
	m	(Lduh;)Ldtp;	a	lambda$static$0
	m	(Ldun;Lasc;Lgw;)Ljava/util/stream/Stream;	a_	getPositions
		p	1		context
		p	2		random
		p	3		pos
	m	()Lduq;	b	type
	m	(Ldlm;Ldlm;)Lduh;	b	triangle
		p	0		minOffset
		p	1		maxOffset
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldtp;	c	height
c	dui	net/minecraft/world/level/levelgen/placement/HeightmapPlacement
	m	(Ldks$a;)V	<init>	<init>
		p	1		heightmap
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Ldks$a;)Ldui;	a	onHeightmap
		p	0		heightmap
	m	(Ldui;)Ldks$a;	a	lambda$static$0
	m	(Ldun;Lasc;Lgw;)Ljava/util/stream/Stream;	a_	getPositions
		p	1		context
		p	2		random
		p	3		pos
	m	()Lduq;	b	type
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldks$a;	c	heightmap
c	duj	net/minecraft/world/level/levelgen/placement/InSquarePlacement
	m	()Lduj;	a	spread
	m	(Ldun;Lasc;Lgw;)Ljava/util/stream/Stream;	a_	getPositions
		p	1		context
		p	2		random
		p	3		pos
	m	()Lduq;	b	type
	m	()Lduj;	c	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lduj;	c	INSTANCE
c	duk	net/minecraft/world/level/levelgen/placement/NoiseBasedCountPlacement
	m	(IDD)V	<init>	<init>
		p	1		noiseToCountRatio
		p	2		noiseFactor
		p	4		noiseOffset
	m	(IDD)Lduk;	a	of
		p	0		noiseToCountRatio
		p	1		noiseFactor
		p	3		noiseOffset
	m	(Lasc;Lgw;)I	a	count
		p	1		random
		p	2		pos
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	(Lduk;)Ljava/lang/Double;	a	lambda$static$2
	m	()Lduq;	b	type
	m	(Lduk;)Ljava/lang/Double;	b	lambda$static$1
	m	(Lduk;)Ljava/lang/Integer;	c	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	c	noiseToCountRatio
	f	D	d	noiseFactor
	f	D	e	noiseOffset
c	dul	net/minecraft/world/level/levelgen/placement/NoiseThresholdCountPlacement
	m	(DII)V	<init>	<init>
		p	1		noiseLevel
		p	3		belowNoise
		p	4		aboveNoise
	m	(DII)Ldul;	a	of
		p	0		noiseLevel
		p	2		belowNoise
		p	3		aboveNoise
	m	(Lasc;Lgw;)I	a	count
		p	1		random
		p	2		pos
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	(Ldul;)Ljava/lang/Integer;	a	lambda$static$2
	m	()Lduq;	b	type
	m	(Ldul;)Ljava/lang/Integer;	b	lambda$static$1
	m	(Ldul;)Ljava/lang/Double;	c	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	D	c	noiseLevel
	f	I	d	belowNoise
	f	I	e	aboveNoise
c	dum	net/minecraft/world/level/levelgen/placement/PlacedFeature
	m	(Lhe;Ljava/util/List;)V	<init>	<init>
		p	2		placementModifiers
	m	()Ljava/util/stream/Stream;	a	getFeatures
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Lcqp;Ldhg;Lasc;Lgw;)Z	a	place
		p	1		world
		p	2		generator
		p	3		random
		p	4		pos
	m	(Ldnj;Ldun;Lasc;Lorg/apache/commons/lang3/mutable/MutableBoolean;Lgw;)V	a	lambda$placeWithContext$4
		p	4		placedPos
	m	(Ldum;)Ljava/util/List;	a	lambda$static$1
	m	(Ldun;Lasc;Lgw;)Z	a	placeWithContext
		p	1		context
		p	2		random
		p	3		pos
	m	(Ldup;Ldun;Lasc;Lgw;)Ljava/util/stream/Stream;	a	lambda$placeWithContext$3
		p	3		posx
	m	()Lhe;	b	feature
	m	(Lcqp;Ldhg;Lasc;Lgw;)Z	b	placeWithBiomeCheck
		p	1		world
		p	2		generator
		p	3		random
		p	4		pos
	m	(Ldum;)Lhe;	b	lambda$static$0
	m	()Ljava/util/List;	c	placement
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lcom/mojang/serialization/Codec;	c	LIST_CODEC
	f	Lcom/mojang/serialization/Codec;	d	LIST_OF_LISTS_CODEC
	f	Lhe;	e	feature
	f	Ljava/util/List;	f	placement
c	dun	net/minecraft/world/level/levelgen/placement/PlacementContext
	m	(Lcqp;Ldhg;Ljava/util/Optional;)V	<init>	<init>
		p	1		world
		p	2		generator
		p	3		placedFeature
	m	(Lcpc;Ldko$a;)Ldhe;	a	getCarvingMask
		p	1		chunkPos
		p	2		carver
	m	(Ldks$a;II)I	a	getHeight
		p	1		heightmap
		p	2		x
		p	3		z
	m	(Lgw;)Ldfj;	a	getBlockState
		p	1		pos
	m	()I	c	getMinBuildHeight
	m	()Lcqp;	d	getLevel
	m	()Ljava/util/Optional;	e	topFeature
	m	()Ldhg;	f	generator
	f	Lcqp;	a	level
	f	Ldhg;	b	generator
	f	Ljava/util/Optional;	c	topFeature
c	duo	net/minecraft/world/level/levelgen/placement/PlacementFilter
	m	(Ldun;Lasc;Lgw;)Z	a	shouldPlace
		p	1		context
		p	2		random
		p	3		pos
	m	(Ldun;Lasc;Lgw;)Ljava/util/stream/Stream;	a_	getPositions
		p	1		context
		p	2		random
		p	3		pos
c	dup	net/minecraft/world/level/levelgen/placement/PlacementModifier
	m	(Ldun;Lasc;Lgw;)Ljava/util/stream/Stream;	a_	getPositions
		p	1		context
		p	2		random
		p	3		pos
	m	()Lduq;	b	type
	f	Lcom/mojang/serialization/Codec;	b	CODEC
c	duq	net/minecraft/world/level/levelgen/placement/PlacementModifierType
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	lambda$register$0
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lduq;	a	register
		p	0		id
		p	1		codec
	f	Lduq;	a	BLOCK_PREDICATE_FILTER
	f	Lduq;	b	RARITY_FILTER
	f	Lduq;	c	SURFACE_RELATIVE_THRESHOLD_FILTER
	f	Lduq;	d	SURFACE_WATER_DEPTH_FILTER
	f	Lduq;	e	BIOME_FILTER
	f	Lduq;	f	COUNT
	f	Lduq;	g	NOISE_BASED_COUNT
	f	Lduq;	h	NOISE_THRESHOLD_COUNT
	f	Lduq;	i	COUNT_ON_EVERY_LAYER
	f	Lduq;	j	ENVIRONMENT_SCAN
	f	Lduq;	k	HEIGHTMAP
	f	Lduq;	l	HEIGHT_RANGE
	f	Lduq;	m	IN_SQUARE
	f	Lduq;	n	RANDOM_OFFSET
	f	Lduq;	o	CARVING_MASK_PLACEMENT
c	dur	net/minecraft/world/level/levelgen/placement/RandomOffsetPlacement
	m	(Lbgd;Lbgd;)V	<init>	<init>
		p	1		xzSpread
		p	2		ySpread
	m	(Lbgd;)Ldur;	a	vertical
		p	0		spreadY
	m	(Lbgd;Lbgd;)Ldur;	a	of
		p	0		spreadXz
		p	1		spreadY
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Ldur;)Lbgd;	a	lambda$static$1
	m	(Ldun;Lasc;Lgw;)Ljava/util/stream/Stream;	a_	getPositions
		p	1		context
		p	2		random
		p	3		pos
	m	()Lduq;	b	type
	m	(Lbgd;)Ldur;	b	horizontal
		p	0		spreadXz
	m	(Ldur;)Lbgd;	b	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lbgd;	c	xzSpread
	f	Lbgd;	d	ySpread
c	dus	net/minecraft/world/level/levelgen/placement/RarityFilter
	m	(I)V	<init>	<init>
		p	1		chance
	m	(I)Ldus;	a	onAverageOnceEvery
		p	0		chance
	m	(Ldun;Lasc;Lgw;)Z	a	shouldPlace
		p	1		context
		p	2		random
		p	3		pos
	m	(Ldus;)Ljava/lang/Integer;	a	lambda$static$0
	m	()Lduq;	b	type
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	c	chance
c	dut	net/minecraft/world/level/levelgen/placement/RepeatingPlacement
	m	(Lasc;Lgw;)I	a	count
		p	1		random
		p	2		pos
	m	(Lgw;I)Lgw;	a	lambda$getPositions$0
	m	(Ldun;Lasc;Lgw;)Ljava/util/stream/Stream;	a_	getPositions
		p	1		context
		p	2		random
		p	3		pos
c	duu	net/minecraft/world/level/levelgen/placement/SurfaceRelativeThresholdFilter
	m	(Ldks$a;II)V	<init>	<init>
		p	1		heightmap
		p	2		min
		p	3		max
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
	m	(Ldks$a;II)Lduu;	a	of
		p	0		heightmap
		p	1		min
		p	2		max
	m	(Ldun;Lasc;Lgw;)Z	a	shouldPlace
		p	1		context
		p	2		random
		p	3		pos
	m	(Lduu;)Ljava/lang/Integer;	a	lambda$static$2
	m	()Lduq;	b	type
	m	(Lduu;)Ljava/lang/Integer;	b	lambda$static$1
	m	(Lduu;)Ldks$a;	c	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldks$a;	c	heightmap
	f	I	d	minInclusive
	f	I	e	maxInclusive
c	duv	net/minecraft/world/level/levelgen/placement/SurfaceWaterDepthFilter
	m	(I)V	<init>	<init>
		p	1		maxWaterDepth
	m	(I)Lduv;	a	forMaxDepth
		p	0		maxWaterDepth
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Ldun;Lasc;Lgw;)Z	a	shouldPlace
		p	1		context
		p	2		random
		p	3		pos
	m	(Lduv;)Ljava/lang/Integer;	a	lambda$static$0
	m	()Lduq;	b	type
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	c	maxWaterDepth
c	duw	net/minecraft/world/level/levelgen/placement/package-info
c	dux	net/minecraft/world/level/levelgen/presets/WorldPreset
	m	(Ljava/util/Map;)V	<init>	<init>
		p	1		dimensions
	m	()Ldln;	a	createWorldDimensions
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Ldux;)Lcom/mojang/serialization/DataResult;	a	requireOverworld
		p	0		preset
	m	(Lhz;Laev;)V	a	lambda$createRegistry$2
		p	2		registryKey
	m	()Ljava/util/Optional;	b	overworld
	m	(Ldux;)Ljava/util/Map;	b	lambda$static$0
		p	0		preset
	m	()Lhq;	c	createRegistry
	m	()Ljava/lang/String;	d	lambda$requireOverworld$3
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Ljava/util/Map;	c	dimensions
c	duy	net/minecraft/world/level/levelgen/presets/WorldPresets
	m	(Ldit;)Ljava/util/Optional;	a	lambda$fromSettings$0
		p	0		overworld
	m	(Lhq;)Ljava/util/Optional;	a	fromSettings
		p	0		registry
	m	(Lhr;)Ldln;	a	createNormalWorldDimensions
		p	0		dynamicRegistryManager
	m	(Ljava/lang/String;)Laev;	a	register
		p	0		id
	m	(Lnr;)V	a	bootstrap
		p	0		presetRegisterable
	m	(Lhr;)Ldit;	b	getNormalOverworld
		p	0		dynamicRegistryManager
	f	Laev;	a	NORMAL
	f	Laev;	b	FLAT
	f	Laev;	c	LARGE_BIOMES
	f	Laev;	d	AMPLIFIED
	f	Laev;	e	SINGLE_BIOME_SURFACE
	f	Laev;	f	DEBUG
c	duy$a	net/minecraft/world/level/levelgen/presets/WorldPresets$Bootstrap
	m	(Lnr;)V	<init>	<init>
		p	1		presetRegisterable
	m	()V	a	bootstrap
	m	(Laev;Ldit;)V	a	registerCustomOverworldPreset
		p	1		key
		p	2		dimensionOptions
	m	(Lcqx;)V	a	registerOverworlds
		p	1		biomeSource
	m	(Lcqx;Lhe;)Ldit;	a	makeNoiseBasedOverworld
		p	1		biomeSource
		p	2		chunkGeneratorSettings
	m	(Ldhg;)Ldit;	a	makeOverworld
		p	1		chunkGenerator
	m	(Ldit;)Ldux;	a	createPresetWithCustomOverworld
		p	1		dimensionOptions
	f	Lnr;	a	context
	f	Lhf;	b	noiseSettings
	f	Lhf;	c	biomes
	f	Lhf;	d	placedFeatures
	f	Lhf;	e	structureSets
	f	Lhf;	f	multiNoiseBiomeSourceParameterLists
	f	Lhe;	g	overworldDimensionType
	f	Ldit;	h	netherStem
	f	Ldit;	i	endStem
c	duz	net/minecraft/world/level/levelgen/presets/package-info
c	dva	net/minecraft/world/level/levelgen/structure/BoundingBox
	m	(IIIIII)V	<init>	<init>
		p	1		minX
		p	2		minY
		p	3		minZ
		p	4		maxX
		p	5		maxY
		p	6		maxZ
	m	(Lgw;)V	<init>	<init>
		p	1		pos
	m	()Ldva;	a	infinite
	m	(I)Ldva;	a	inflatedBy
		p	1		offset
	m	(III)Ldva;	a	move
		p	1		dx
		p	2		dy
		p	3		dz
	m	(IIII)Z	a	intersects
		p	1		minX
		p	2		minZ
		p	3		maxX
		p	4		maxZ
	m	(IIIIIIIIILha;)Ldva;	a	orientBox
		p	0		x
		p	1		y
		p	2		z
		p	3		offsetX
		p	4		offsetY
		p	5		offsetZ
		p	6		sizeX
		p	7		sizeY
		p	8		sizeZ
		p	9		facing
	m	(Ldva;)Z	a	intersects
		p	1		other
	m	(Lgw;)Ldva;	a	encapsulate
		p	1		pos
	m	(Lhy;)Ldva;	a	move
		p	1		vec
	m	(Lhy;Lhy;)Ldva;	a	fromCorners
		p	0		first
		p	1		second
	m	(Ljava/lang/Iterable;)Ljava/util/Optional;	a	encapsulatingPositions
		p	0		positions
	m	(Ljava/util/function/Consumer;)V	a	forAllCorners
		p	1		consumer
	m	(Ljava/util/stream/IntStream;)Lcom/mojang/serialization/DataResult;	a	lambda$static$1
		p	0		values
	m	([I)Ldva;	a	lambda$static$0
		p	0		array
	m	()Lhy;	b	getLength
	m	(III)Ldva;	b	moved
		p	1		x
		p	2		y
		p	3		z
	m	(Ldva;)Ldva;	b	encapsulate
		p	1		box
	m	(Lhy;)Z	b	isInside
		p	1		pos
	m	(Ljava/lang/Iterable;)Ljava/util/Optional;	b	encapsulatingBoxes
		p	0		boxes
	m	()I	c	getXSpan
	m	(III)Z	c	isInside
		p	1		x
		p	2		y
		p	3		z
	m	(Ldva;)Ljava/util/stream/IntStream;	c	lambda$static$2
		p	0		box
	m	()I	d	getYSpan
	m	()I	e	getZSpan
	m	()Lgw;	f	getCenter
	m	()I	g	minX
	m	()I	h	minY
	m	()I	i	minZ
	m	()I	j	maxX
	m	()I	k	maxY
	m	()I	l	maxZ
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	I	c	minX
	f	I	d	minY
	f	I	e	minZ
	f	I	f	maxX
	f	I	g	maxY
	f	I	h	maxZ
c	dva$1	net/minecraft/world/level/levelgen/structure/BoundingBox$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	dvb	net/minecraft/world/level/levelgen/structure/BuiltinStructureSets
	m	(Ljava/lang/String;)Laev;	a	register
		p	0		id
	f	Laev;	a	VILLAGES
	f	Laev;	b	DESERT_PYRAMIDS
	f	Laev;	c	IGLOOS
	f	Laev;	d	JUNGLE_TEMPLES
	f	Laev;	e	SWAMP_HUTS
	f	Laev;	f	PILLAGER_OUTPOSTS
	f	Laev;	g	OCEAN_MONUMENTS
	f	Laev;	h	WOODLAND_MANSIONS
	f	Laev;	i	BURIED_TREASURES
	f	Laev;	j	MINESHAFTS
	f	Laev;	k	RUINED_PORTALS
	f	Laev;	l	SHIPWRECKS
	f	Laev;	m	OCEAN_RUINS
	f	Laev;	n	NETHER_COMPLEXES
	f	Laev;	o	NETHER_FOSSILS
	f	Laev;	p	END_CITIES
	f	Laev;	q	ANCIENT_CITIES
	f	Laev;	r	STRONGHOLDS
	f	Laev;	s	TRAIL_RUINS
c	dvc	net/minecraft/world/level/levelgen/structure/BuiltinStructures
	m	(Ljava/lang/String;)Laev;	a	createKey
		p	0		id
	f	Laev;	A	RUINED_PORTAL_JUNGLE
	f	Laev;	B	RUINED_PORTAL_SWAMP
	f	Laev;	C	RUINED_PORTAL_MOUNTAIN
	f	Laev;	D	RUINED_PORTAL_OCEAN
	f	Laev;	E	RUINED_PORTAL_NETHER
	f	Laev;	F	ANCIENT_CITY
	f	Laev;	G	TRAIL_RUINS
	f	Laev;	a	PILLAGER_OUTPOST
	f	Laev;	b	MINESHAFT
	f	Laev;	c	MINESHAFT_MESA
	f	Laev;	d	WOODLAND_MANSION
	f	Laev;	e	JUNGLE_TEMPLE
	f	Laev;	f	DESERT_PYRAMID
	f	Laev;	g	IGLOO
	f	Laev;	h	SHIPWRECK
	f	Laev;	i	SHIPWRECK_BEACHED
	f	Laev;	j	SWAMP_HUT
	f	Laev;	k	STRONGHOLD
	f	Laev;	l	OCEAN_MONUMENT
	f	Laev;	m	OCEAN_RUIN_COLD
	f	Laev;	n	OCEAN_RUIN_WARM
	f	Laev;	o	FORTRESS
	f	Laev;	p	NETHER_FOSSIL
	f	Laev;	q	END_CITY
	f	Laev;	r	BURIED_TREASURE
	f	Laev;	s	BASTION_REMNANT
	f	Laev;	t	VILLAGE_PLAINS
	f	Laev;	u	VILLAGE_DESERT
	f	Laev;	v	VILLAGE_SAVANNA
	f	Laev;	w	VILLAGE_SNOWY
	f	Laev;	x	VILLAGE_TAIGA
	f	Laev;	y	RUINED_PORTAL_STANDARD
	f	Laev;	z	RUINED_PORTAL_DESERT
c	dvd	net/minecraft/world/level/levelgen/structure/LegacyStructureDataHandler
	m	(Lecc;Ljava/util/List;Ljava/util/List;)V	<init>	<init>
		p	1		persistentStateManager
		p	2		oldNames
		p	3		newNames
	m	(II)Z	a	isUnhandledStructureStart
		p	1		chunkX
		p	2		chunkZ
	m	(IILjava/lang/String;)Z	a	hasLegacyStart
		p	1		chunkX
		p	2		chunkZ
		p	3		id
	m	(J)V	a	removeIndex
		p	1		chunkPos
	m	(Laev;Lecc;)Ldvd;	a	getLegacyStructureHandler
		p	0		world
		p	1		persistentStateManager
	m	(Lecc;)V	a	populateCaches
		p	1		persistentStateManager
	m	(Ljava/lang/String;)Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	a	lambda$populateCaches$2
	m	(Ljava/util/HashMap;)V	a	lambda$static$1
		p	0		map
	m	(Lqw;)Lqw;	a	updateFromLegacy
		p	1		nbt
	m	(Lqw;Lcpc;)Lqw;	a	updateStructureStart
		p	1		nbt
		p	2		pos
	m	(Ljava/util/HashMap;)V	b	lambda$static$0
		p	0		map
	f	Ljava/util/Map;	a	CURRENT_TO_LEGACY_MAP
	f	Ljava/util/Map;	b	LEGACY_TO_CURRENT_MAP
	f	Ljava/util/Set;	c	OLD_STRUCTURE_REGISTRY_KEYS
	f	Z	d	hasLegacyData
	f	Ljava/util/Map;	e	dataMap
	f	Ljava/util/Map;	f	indexMap
	f	Ljava/util/List;	g	legacyKeys
	f	Ljava/util/List;	h	currentKeys
c	dve	net/minecraft/world/level/levelgen/structure/PoolElementStructurePiece
	m	(Ldvy;Lqw;)V	<init>	<init>
		p	1		context
		p	2		nbt
	m	(Ldzc;Ldwp;Lgw;ILczh;Ldva;)V	<init>	<init>
		p	1		structureTemplateManager
		p	2		poolElement
		p	3		pos
		p	4		groundLevelDelta
		p	5		rotation
		p	6		boundingBox
	m	()Lczh;	a	getRotation
	m	(III)V	a	move
		p	1		x
		p	2		y
		p	3		z
	m	(Lcom/mojang/serialization/DynamicOps;Lrq;)V	a	lambda$new$1
		p	2		junctionTag
	m	(Lcqp;Lcqn;Ldhg;Lasc;Ldva;Lcpc;Lgw;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Lcqp;Lcqn;Ldhg;Lasc;Ldva;Lgw;Z)V	a	place
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		boundingBox
		p	6		pivot
		p	7		keepJigsaws
	m	(Ldvy;Lqw;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	m	(Ldwk;)V	a	addJunction
		p	1		junction
	m	(Lqw;Lrq;)V	a	lambda$addAdditionalSaveData$2
	m	()Ldwp;	b	getElement
	m	()Lgw;	c	getPosition
	m	()I	d	getGroundLevelDelta
	m	()Ljava/util/List;	e	getJunctions
	m	()Ljava/lang/IllegalStateException;	l	lambda$new$0
	f	Ldwp;	a	element
	f	Lgw;	b	position
	f	Lczh;	c	rotation
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	I	h	groundLevelDelta
	f	Ljava/util/List;	i	junctions
	f	Ldzc;	j	structureTemplateManager
c	dvf	net/minecraft/world/level/levelgen/structure/PostPlacementProcessor
	m	(Lcqp;Lcqn;Ldhg;Lasc;Ldva;Lcpc;Ldvx;)V	a	lambda$static$0
		p	0		world
		p	1		structureAccessor
		p	2		chunkGenerator
		p	3		random
		p	4		chunkBox
		p	5		pos
		p	6		children
	m	(Lcqp;Lcqn;Ldhg;Lasc;Ldva;Lcpc;Ldvx;)V	afterPlace	afterPlace
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		pos
		p	7		children
	f	Ldvf;	a	NONE
c	dvg	net/minecraft/world/level/levelgen/structure/ScatteredFeaturePiece
	m	(Ldvz;IIIIIILha;)V	<init>	<init>
		p	1		type
		p	2		x
		p	3		y
		p	4		z
		p	5		width
		p	6		height
		p	7		depth
		p	8		orientation
	m	(Ldvz;Lqw;)V	<init>	<init>
		p	1		type
		p	2		nbt
	m	(Lcpw;I)Z	a	updateHeightPositionToLowestGroundHeight
		p	1		world
		p	2		yOffset
	m	(Lcpw;Ldva;I)Z	a	updateAverageGroundHeight
		p	1		world
		p	2		boundingBox
		p	3		deltaY
	m	(Ldvy;Lqw;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	f	I	a	width
	f	I	b	height
	f	I	c	depth
	f	I	d	heightPosition
c	dvh	net/minecraft/world/level/levelgen/structure/SinglePieceStructure
	m	(Ldvh$a;IILdvi$c;)V	<init>	<init>
		p	1		constructor
		p	2		width
		p	3		height
		p	4		config
	m	(Ldvi$a;)Ljava/util/Optional;	a	findGenerationPoint
		p	1		context
	m	(Ldvi$a;Ldwa;)V	a	lambda$findGenerationPoint$0
		p	2		collector
	m	(Ldwa;Ldvi$a;)V	a	generatePieces
		p	1		collector
		p	2		context
	f	Ldvh$a;	d	constructor
	f	I	e	width
	f	I	f	depth
c	dvh$a	net/minecraft/world/level/levelgen/structure/SinglePieceStructure$PieceConstructor
	m	(Ldlr;II)Ldvm;	construct	construct
		p	1		random
		p	2		startX
		p	3		startZ
c	dvi	net/minecraft/world/level/levelgen/structure/Structure
	m	(Ldvi$c;)V	<init>	<init>
		p	1		config
	m	()Lhi;	a	biomes
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/serialization/codecs/RecordCodecBuilder;	a	settingsCodec
		p	0		instance
	m	(Lcqp;Lcqn;Ldhg;Lasc;Ldva;Lcpc;Ldvx;)V	a	afterPlace
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		box
		p	6		chunkPos
		p	7		pieces
	m	(Ldva;)Ldva;	a	adjustBoundingBox
		p	1		box
	m	(Ldvi$a;)Ljava/util/Optional;	a	findGenerationPoint
		p	1		context
	m	(Ldvi$a;II)I	a	getLowestY
		p	0		context
		p	1		width
		p	2		height
	m	(Ldvi$a;IIII)I	a	getLowestY
		p	0		context
		p	1		x
		p	2		z
		p	3		width
		p	4		height
	m	(Ldvi$a;Lczh;)Lgw;	a	getLowestYIn5by5BoxOffset7Blocks
		p	1		context
		p	2		rotation
	m	(Ldvi$a;Ldks$a;Ljava/util/function/Consumer;)Ljava/util/Optional;	a	onTopOfChunkCenter
		p	0		context
		p	1		heightmap
		p	2		generator
	m	(Ldvi$a;Ldvi$b;)Z	a	lambda$findValidGenerationPoint$2
		p	1		position
	m	(Ldvi$b;Ldvi$a;)Z	a	isValidBiome
		p	0		result
		p	1		context
	m	(Ldvi;)Ldvi$c;	a	lambda$settingsCodec$0
		p	0		feature
	m	(Lhr;Ldhg;Lcqx;Ldlg;Ldzc;JLcpc;ILcpx;Ljava/util/function/Predicate;)Ldvq;	a	generate
		p	1		dynamicRegistryManager
		p	2		chunkGenerator
		p	3		biomeSource
		p	4		noiseConfig
		p	5		structureTemplateManager
		p	6		seed
		p	8		chunkPos
		p	9		references
		p	10		world
		p	11		validBiomes
	m	(Ljava/util/function/Function;)Lcom/mojang/serialization/Codec;	a	simpleCodec
		p	0		featureCreator
	m	(Ljava/util/function/Function;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$simpleCodec$1
		p	1		instance
	m	()Ljava/util/Map;	b	spawnOverrides
	m	(Ldvi$a;)Ljava/util/Optional;	b	findValidGenerationPoint
		p	1		context
	m	(Ldvi$a;IIII)[I	b	getCornerHeights
		p	0		context
		p	1		x
		p	2		width
		p	3		z
		p	4		height
	m	()Ldko$b;	c	step
	m	()Ldvt;	d	terrainAdaptation
	m	()Ldvr;	e	type
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Ldvi$c;	c	settings
c	dvi$a	net/minecraft/world/level/levelgen/structure/Structure$GenerationContext
	m	(Lhr;Ldhg;Lcqx;Ldlg;Ldzc;JLcpc;Lcpx;Ljava/util/function/Predicate;)V	<init>	<init>
		p	1		dynamicRegistryManager
		p	2		chunkGenerator
		p	3		biomeSource
		p	4		noiseConfig
		p	5		structureTemplateManager
		p	6		seed
		p	8		chunkPos
		p	9		world
		p	10		biomePredicate
	m	()Lhr;	a	registryAccess
	m	(JLcpc;)Ldlr;	a	makeRandom
		p	0		seed
		p	2		chunkPos
	m	()Ldhg;	b	chunkGenerator
	m	()Lcqx;	c	biomeSource
	m	()Ldlg;	d	randomState
	m	()Ldzc;	e	structureTemplateManager
	m	()Ldlr;	f	random
	m	()J	g	seed
	m	()Lcpc;	h	chunkPos
	m	()Lcpx;	i	heightAccessor
	m	()Ljava/util/function/Predicate;	j	validBiome
	f	Lhr;	a	registryAccess
	f	Ldhg;	b	chunkGenerator
	f	Lcqx;	c	biomeSource
	f	Ldlg;	d	randomState
	f	Ldzc;	e	structureTemplateManager
	f	Ldlr;	f	random
	f	J	g	seed
	f	Lcpc;	h	chunkPos
	f	Lcpx;	i	heightAccessor
	f	Ljava/util/function/Predicate;	j	validBiome
c	dvi$b	net/minecraft/world/level/levelgen/structure/Structure$GenerationStub
	m	(Lgw;Ljava/util/function/Consumer;)V	<init>	<init>
		p	1		pos
		p	2		generator
	m	()Ldwa;	a	getPiecesBuilder
	m	(Ldwa;)Ldwa;	a	lambda$getPiecesBuilder$1
		p	0		collector
	m	(Ljava/util/function/Consumer;)Ldwa;	a	lambda$getPiecesBuilder$0
		p	0		generator
	m	()Lgw;	b	position
	m	()Lcom/mojang/datafixers/util/Either;	c	generator
	f	Lgw;	a	position
	f	Lcom/mojang/datafixers/util/Either;	b	generator
c	dvi$c	net/minecraft/world/level/levelgen/structure/Structure$StructureSettings
	m	()Lhi;	a	biomes
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Ljava/util/Map;	b	spawnOverrides
	m	()Ldko$b;	c	step
	m	()Ldvt;	d	terrainAdaptation
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lhi;	b	biomes
	f	Ljava/util/Map;	c	spawnOverrides
	f	Ldko$b;	d	step
	f	Ldvt;	e	terrainAdaptation
c	dvj	net/minecraft/world/level/levelgen/structure/StructureCheck
	m	(Ldif;Lhr;Ldzc;Laev;Ldhg;Ldlg;Lcpx;Lcqx;JLcom/mojang/datafixers/DataFixer;)V	<init>	<init>
		p	1		chunkIoWorker
		p	2		registryManager
		p	3		structureTemplateManager
		p	4		worldKey
		p	5		chunkGenerator
		p	6		noiseConfig
		p	7		world
		p	8		biomeSource
		p	9		seed
		p	11		dataFixer
	m	(JLit/unimi/dsi/fastutil/longs/Long2BooleanMap;)V	a	lambda$storeFullResults$3
		p	2		generationPossibilityByChunkPos
	m	(JLit/unimi/dsi/fastutil/objects/Object2IntMap;)V	a	storeFullResults
		p	1		pos
		p	3		referencesByStructure
	m	(Lcpc;Ldvi;)V	a	incrementReference
		p	1		pos
		p	2		structure
	m	(Lcpc;Ldvi;J)Z	a	lambda$checkStart$1
		p	3		chunkPos
	m	(Lcpc;Ldvi;Z)Ldvk;	a	checkStart
		p	1		pos
		p	2		type
		p	3		skipReferencedStructures
	m	(Lcpc;Ldvi;ZJ)Ldvk;	a	tryLoadFromStorage
		p	1		pos
		p	2		structure
		p	3		skipReferencedStructures
		p	4		posLong
	m	(Lcpc;Ljava/util/Map;)V	a	onStructureLoad
		p	1		pos
		p	2		structureStarts
	m	(Ldvi;)Lit/unimi/dsi/fastutil/longs/Long2BooleanMap;	a	lambda$checkStart$0
		p	0		structure2
	m	(Ldvi;Ljava/lang/Integer;)Ljava/lang/Integer;	a	lambda$incrementReference$4
		p	0		feature
		p	1		references
	m	(Ldvi;Ljava/lang/Long;Lit/unimi/dsi/fastutil/objects/Object2IntMap;)Lit/unimi/dsi/fastutil/objects/Object2IntMap;	a	lambda$incrementReference$5
		p	1		posx
		p	2		referencesByStructure
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntMap;)Lit/unimi/dsi/fastutil/objects/Object2IntMap;	a	deduplicateEmptyMap
		p	0		map
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntMap;Ldvi;Ldvq;)V	a	lambda$onStructureLoad$2
		p	0		structure
		p	1		start
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntMap;Ldvi;Z)Ldvk;	a	checkStructureInfo
		p	1		referencesByStructure
		p	2		structure
		p	3		skipReferencedStructures
	m	(Lqw;)Lit/unimi/dsi/fastutil/objects/Object2IntMap;	a	loadStructures
		p	1		nbt
	m	(Lcpc;Ldvi;)Z	b	canCreateStructure
		p	1		pos
		p	2		structure
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	I	b	NO_STRUCTURE
	f	Ldif;	c	storageAccess
	f	Lhr;	d	registryAccess
	f	Lhq;	e	biomes
	f	Lhq;	f	structureConfigs
	f	Ldzc;	g	structureTemplateManager
	f	Laev;	h	dimension
	f	Ldhg;	i	chunkGenerator
	f	Ldlg;	j	randomState
	f	Lcpx;	k	heightAccessor
	f	Lcqx;	l	biomeSource
	f	J	m	seed
	f	Lcom/mojang/datafixers/DataFixer;	n	fixerUpper
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	o	loadedChunks
	f	Ljava/util/Map;	p	featureChecks
c	dvk	net/minecraft/world/level/levelgen/structure/StructureCheckResult
	m	()[Ldvk;	a	$values
	f	Ldvk;	a	START_PRESENT
	f	Ldvk;	b	START_NOT_PRESENT
	f	Ldvk;	c	CHUNK_LOAD_NEEDED
	f	[Ldvk;	d	$VALUES
c	dvl	net/minecraft/world/level/levelgen/structure/StructureFeatureIndexSavedData
	m	(Lit/unimi/dsi/fastutil/longs/LongSet;Lit/unimi/dsi/fastutil/longs/LongSet;)V	<init>	<init>
		p	1		all
		p	2		remaining
	m	()Lebr$a;	a	factory
	m	(J)V	a	addIndex
		p	1		pos
	m	(Lqw;)Lqw;	a	save
		p	1		nbt
	m	()Lit/unimi/dsi/fastutil/longs/LongSet;	b	getAll
	m	(J)Z	b	hasStartIndex
		p	1		pos
	m	(Lqw;)Ldvl;	b	load
		p	0		nbt
	m	(J)Z	c	hasUnhandledIndex
		p	1		pos
	m	(J)V	d	removeIndex
		p	1		pos
	f	Ljava/lang/String;	a	TAG_REMAINING_INDEXES
	f	Ljava/lang/String;	b	TAG_All_INDEXES
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	c	all
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	d	remaining
c	dvm	net/minecraft/world/level/levelgen/structure/StructurePiece
	m	(Ldvz;ILdva;)V	<init>	<init>
		p	1		type
		p	2		length
		p	3		boundingBox
	m	(Ldvz;Lqw;)V	<init>	<init>
		p	1		type
		p	2		nbt
	m	()Lczh;	a	getRotation
	m	(I)V	a	setGenDepth
		p	1		chainLength
	m	(II)I	a	getWorldX
		p	1		x
		p	2		z
	m	(III)V	a	move
		p	1		x
		p	2		y
		p	3		z
	m	(IIILha;III)Ldva;	a	makeBoundingBox
		p	0		x
		p	1		y
		p	2		z
		p	3		orientation
		p	4		width
		p	5		height
		p	6		depth
	m	(Lasc;)Lha;	a	getRandomHorizontalDirection
		p	0		random
	m	(Lcpb;IIILdva;)Ldfj;	a	getBlock
		p	1		world
		p	2		x
		p	3		y
		p	4		z
		p	5		box
	m	(Lcpb;Lgw;Ldfj;)Ldfj;	a	reorient
		p	0		world
		p	1		pos
		p	2		state
	m	(Lcpc;I)Z	a	isCloseToChunk
		p	1		pos
		p	2		offset
	m	(Lcpy;IIILdva;)Z	a	canBeReplaced
		p	1		world
		p	2		x
		p	3		y
		p	4		z
		p	5		box
	m	(Lcqk;Ldva;Lasc;Lgw;Laew;Ldfj;)Z	a	createChest
		p	1		world
		p	2		boundingBox
		p	3		random
		p	4		pos
		p	5		lootTableId
		p	6		block
	m	(Lcqp;Lcqn;Ldhg;Lasc;Ldva;Lcpc;Lgw;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Lcqp;Ldfj;IIILdva;)V	a	placeBlock
		p	1		world
		p	2		block
		p	3		x
		p	4		y
		p	5		z
		p	6		box
	m	(Lcqp;Ldva;IIIIII)V	a	generateAirBox
		p	1		world
		p	2		bounds
		p	3		minX
		p	4		minY
		p	5		minZ
		p	6		maxX
		p	7		maxY
		p	8		maxZ
	m	(Lcqp;Ldva;IIIIIILdfj;Ldfj;Z)V	a	generateBox
		p	1		world
		p	2		box
		p	3		minX
		p	4		minY
		p	5		minZ
		p	6		maxX
		p	7		maxY
		p	8		maxZ
		p	9		outline
		p	10		inside
		p	11		cantReplaceAir
	m	(Lcqp;Ldva;IIIIIILdfj;Z)V	a	generateUpperHalfSphere
		p	1		world
		p	2		bounds
		p	3		minX
		p	4		minY
		p	5		minZ
		p	6		maxX
		p	7		maxY
		p	8		maxZ
		p	9		block
		p	10		cantReplaceAir
	m	(Lcqp;Ldva;IIIIIIZLasc;Ldvm$a;)V	a	generateBox
		p	1		world
		p	2		box
		p	3		minX
		p	4		minY
		p	5		minZ
		p	6		maxX
		p	7		maxY
		p	8		maxZ
		p	9		cantReplaceAir
		p	10		random
		p	11		randomizer
	m	(Lcqp;Ldva;Lasc;FIIIIIILdfj;Ldfj;ZZ)V	a	generateMaybeBox
		p	1		world
		p	2		box
		p	3		random
		p	4		blockChance
		p	5		minX
		p	6		minY
		p	7		minZ
		p	8		maxX
		p	9		maxY
		p	10		maxZ
		p	11		outline
		p	12		inside
		p	13		cantReplaceAir
		p	14		stayBelowSeaLevel
	m	(Lcqp;Ldva;Lasc;FIIILdfj;)V	a	maybeGenerateBlock
		p	1		world
		p	2		bounds
		p	3		random
		p	4		threshold
		p	5		x
		p	6		y
		p	7		z
		p	8		state
	m	(Lcqp;Ldva;Lasc;IIILaew;)Z	a	createChest
		p	1		world
		p	2		boundingBox
		p	3		random
		p	4		x
		p	5		y
		p	6		z
		p	7		lootTableId
	m	(Lcqp;Ldva;Lasc;IIILha;Laew;)Z	a	createDispenser
		p	1		world
		p	2		boundingBox
		p	3		random
		p	4		x
		p	5		y
		p	6		z
		p	7		facing
		p	8		lootTableId
	m	(Lcqp;Ldva;Ldva;Ldfj;Ldfj;Z)V	a	generateBox
		p	1		world
		p	2		box
		p	3		fillBox
		p	4		outline
		p	5		inside
		p	6		cantReplaceAir
	m	(Lcqp;Ldva;Ldva;ZLasc;Ldvm$a;)V	a	generateBox
		p	1		world
		p	2		box
		p	3		fillBox
		p	4		cantReplaceAir
		p	5		random
		p	6		randomizer
	m	(Ldfj;)Z	a	isReplaceableByStructures
		p	1		state
	m	(Ldvm;Ldvn;Lasc;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Ldvy;)Lqw;	a	createTag
		p	1		context
	m	(Ldvy;Lqw;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	m	(Lha;)V	a	setOrientation
		p	1		orientation
	m	(Ljava/util/List;Ldva;)Ldvm;	a	findCollisionPiece
		p	0		pieces
		p	1		box
	m	(Ljava/util/stream/Stream;)Ldva;	a	createBoundingBox
		p	0		pieces
	m	(Lqw;Lrq;)V	a	lambda$createTag$1
	m	()Ljava/lang/IllegalStateException;	b	lambda$createBoundingBox$2
	m	(I)I	b	getWorldY
		p	1		y
	m	(II)I	b	getWorldZ
		p	1		x
		p	2		z
	m	(III)Lgw$a;	b	getWorldPos
		p	1		x
		p	2		y
		p	3		z
	m	(Lcpy;IIILdva;)Z	b	isInterior
		p	1		world
		p	2		x
		p	3		z
		p	4		y
		p	5		box
	m	(Lcqp;Ldfj;IIILdva;)V	b	fillColumnDown
		p	1		world
		p	2		state
		p	3		x
		p	4		y
		p	5		z
		p	6		box
	m	()Ljava/lang/IllegalArgumentException;	c	lambda$new$0
	m	()Ldva;	f	getBoundingBox
	m	()I	g	getGenDepth
	m	()Lgw;	h	getLocatorPosition
	m	()Lha;	i	getOrientation
	m	()Lcxq;	j	getMirror
	m	()Ldvz;	k	getType
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lha;	b	orientation
	f	Lcxq;	c	mirror
	f	Lczh;	d	rotation
	f	Ldfj;	e	CAVE_AIR
	f	Ldva;	f	boundingBox
	f	I	g	genDepth
	f	Ldvz;	h	type
	f	Ljava/util/Set;	i	SHAPE_CHECK_BLOCKS
c	dvm$1	net/minecraft/world/level/levelgen/structure/StructurePiece$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	dvm$a	net/minecraft/world/level/levelgen/structure/StructurePiece$BlockSelector
	m	()Ldfj;	a	getNext
	m	(Lasc;IIIZ)V	a	next
		p	1		random
		p	2		x
		p	3		y
		p	4		z
		p	5		placeBlock
	f	Ldfj;	a	next
c	dvn	net/minecraft/world/level/levelgen/structure/StructurePieceAccessor
	m	(Ldva;)Ldvm;	a	findCollisionPiece
		p	1		box
	m	(Ldvm;)V	a	addPiece
		p	1		piece
c	dvo	net/minecraft/world/level/levelgen/structure/StructureSet
	m	(Lhe;Ldwf;)V	<init>	<init>
		p	1		structure
		p	2		placement
	m	()Ljava/util/List;	a	structures
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lhe;)Ldvo$a;	a	entry
		p	0		structure
	m	(Lhe;I)Ldvo$a;	a	entry
		p	0		structure
		p	1		weight
	m	()Ldwf;	b	placement
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Ljava/util/List;	c	structures
	f	Ldwf;	d	placement
c	dvo$a	net/minecraft/world/level/levelgen/structure/StructureSet$StructureSelectionEntry
	m	()Lhe;	a	structure
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()I	b	weight
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lhe;	b	structure
	f	I	c	weight
c	dvp	net/minecraft/world/level/levelgen/structure/StructureSpawnOverride
	m	()Ldvp$a;	a	boundingBox
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Lbfm;	b	spawns
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldvp$a;	b	boundingBox
	f	Lbfm;	c	spawns
c	dvp$a	net/minecraft/world/level/levelgen/structure/StructureSpawnOverride$BoundingBoxType
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()[Ldvp$a;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Ldvp$a;	a	PIECE
	f	Ldvp$a;	b	STRUCTURE
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Ljava/lang/String;	d	id
	f	[Ldvp$a;	e	$VALUES
c	dvq	net/minecraft/world/level/levelgen/structure/StructureStart
	m	(Ldvi;Lcpc;ILdvx;)V	<init>	<init>
		p	1		structure
		p	2		pos
		p	3		references
		p	4		children
	m	()Ldva;	a	getBoundingBox
	m	(Lcqp;Lcqn;Ldhg;Lasc;Ldva;Lcpc;)V	a	placeInChunk
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
	m	(Ldvy;Lcpc;)Lqw;	a	createTag
		p	1		context
		p	2		chunkPos
	m	(Ldvy;Lqw;J)Ldvq;	a	loadStaticStart
		p	0		context
		p	1		nbt
		p	2		seed
	m	()Z	b	isValid
	m	()Lcpc;	c	getChunkPos
	m	()Z	d	canBeReferenced
	m	()V	e	addReference
	m	()I	f	getReferences
	m	()I	g	getMaxReferences
	m	()Ldvi;	h	getStructure
	m	()Ljava/util/List;	i	getPieces
	f	Ljava/lang/String;	a	INVALID_START_ID
	f	Ldvq;	b	INVALID_START
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	Ldvi;	d	structure
	f	Ldvx;	e	pieceContainer
	f	Lcpc;	f	chunkPos
	f	I	g	references
	f	Ldva;	h	cachedBoundingBox
c	dvr	net/minecraft/world/level/levelgen/structure/StructureType
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	lambda$register$0
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Ldvr;	a	register
		p	0		id
		p	1		codec
	f	Ldvr;	a	BURIED_TREASURE
	f	Ldvr;	b	DESERT_PYRAMID
	f	Ldvr;	c	END_CITY
	f	Ldvr;	d	FORTRESS
	f	Ldvr;	e	IGLOO
	f	Ldvr;	f	JIGSAW
	f	Ldvr;	g	JUNGLE_TEMPLE
	f	Ldvr;	h	MINESHAFT
	f	Ldvr;	i	NETHER_FOSSIL
	f	Ldvr;	j	OCEAN_MONUMENT
	f	Ldvr;	k	OCEAN_RUIN
	f	Ldvr;	l	RUINED_PORTAL
	f	Ldvr;	m	SHIPWRECK
	f	Ldvr;	n	STRONGHOLD
	f	Ldvr;	o	SWAMP_HUT
	f	Ldvr;	p	WOODLAND_MANSION
c	dvs	net/minecraft/world/level/levelgen/structure/TemplateStructurePiece
	m	(Ldvz;ILdzc;Laew;Ljava/lang/String;Ldyx;Lgw;)V	<init>	<init>
		p	1		type
		p	2		length
		p	3		structureTemplateManager
		p	4		id
		p	5		template
		p	6		placementData
		p	7		pos
	m	(Ldvz;Lqw;Ldzc;Ljava/util/function/Function;)V	<init>	<init>
		p	1		type
		p	2		nbt
		p	3		structureTemplateManager
		p	4		placementDataGetter
	m	()Lczh;	a	getRotation
	m	(III)V	a	move
		p	1		x
		p	2		y
		p	3		z
	m	(Lcqp;Lcqn;Ldhg;Lasc;Ldva;Lcpc;Lgw;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldvy;Lqw;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	m	(Ljava/lang/String;Lgw;Lcqk;Lasc;Ldva;)V	a	handleDataMarker
		p	1		metadata
		p	2		pos
		p	3		world
		p	4		random
		p	5		boundingBox
	m	()Laew;	b	makeTemplateLocation
	m	()Ldzb;	c	template
	m	()Lgw;	d	templatePosition
	m	()Ldyx;	e	placeSettings
	f	Ljava/lang/String;	a	templateName
	f	Ldzb;	b	template
	f	Ldyx;	c	placeSettings
	f	Lgw;	d	templatePosition
	f	Lorg/slf4j/Logger;	h	LOGGER
c	dvt	net/minecraft/world/level/levelgen/structure/TerrainAdjustment
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()[Ldvt;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Ldvt;	a	NONE
	f	Ldvt;	b	BURY
	f	Ldvt;	c	BEARD_THIN
	f	Ldvt;	d	BEARD_BOX
	f	Lcom/mojang/serialization/Codec;	e	CODEC
	f	Ljava/lang/String;	f	id
	f	[Ldvt;	g	$VALUES
c	dvu	net/minecraft/world/level/levelgen/structure/package-info
c	dvv	net/minecraft/world/level/levelgen/structure/pieces/PieceGenerator
	m	(Ldwa;Ldvv$a;)V	generatePieces	generatePieces
		p	1		collector
		p	2		context
c	dvv$a	net/minecraft/world/level/levelgen/structure/pieces/PieceGenerator$Context
	m	()Ldqa;	a	config
	m	()Ldhg;	b	chunkGenerator
	m	()Ldzc;	c	structureTemplateManager
	m	()Lcpc;	d	chunkPos
	m	()Lcpx;	e	heightAccessor
	m	()Ldlr;	f	random
	m	()J	g	seed
	f	Ldqa;	a	config
	f	Ldhg;	b	chunkGenerator
	f	Ldzc;	c	structureTemplateManager
	f	Lcpc;	d	chunkPos
	f	Lcpx;	e	heightAccessor
	f	Ldlr;	f	random
	f	J	g	seed
c	dvw	net/minecraft/world/level/levelgen/structure/pieces/PieceGeneratorSupplier
	m	(Ldks$a;Ldvw$a;)Z	a	lambda$checkForBiomeOnTop$1
		p	1		context
	m	(Ljava/util/function/Predicate;Ljava/util/Optional;Ldvw$a;)Ljava/util/Optional;	a	lambda$simple$0
		p	2		context
	m	(Ldks$a;)Ljava/util/function/Predicate;	checkForBiomeOnTop	checkForBiomeOnTop
		p	0		heightmapType
	m	(Ldvw$a;)Ljava/util/Optional;	createGenerator	createGenerator
		p	1		context
	m	(Ljava/util/function/Predicate;Ldvv;)Ldvw;	simple	simple
		p	0		predicate
		p	1		generator
c	dvw$a	net/minecraft/world/level/levelgen/structure/pieces/PieceGeneratorSupplier$Context
	m	()Ldhg;	a	chunkGenerator
	m	(Ldks$a;)Z	a	validBiomeOnTop
		p	1		heightmapType
	m	()Lcqx;	b	biomeSource
	m	()Ldlg;	c	randomState
	m	()J	d	seed
	m	()Lcpc;	e	chunkPos
	m	()Ldqa;	f	config
	m	()Lcpx;	g	heightAccessor
	m	()Ljava/util/function/Predicate;	h	validBiome
	m	()Ldzc;	i	structureTemplateManager
	m	()Lhr;	j	registryAccess
	f	Ldhg;	a	chunkGenerator
	f	Lcqx;	b	biomeSource
	f	Ldlg;	c	randomState
	f	J	d	seed
	f	Lcpc;	e	chunkPos
	f	Ldqa;	f	config
	f	Lcpx;	g	heightAccessor
	f	Ljava/util/function/Predicate;	h	validBiome
	f	Ldzc;	i	structureTemplateManager
	f	Lhr;	j	registryAccess
c	dvx	net/minecraft/world/level/levelgen/structure/pieces/PiecesContainer
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		pieces
	m	()Z	a	isEmpty
	m	(Ldvy;)Lrq;	a	save
		p	1		context
	m	(Lgw;)Z	a	isInsidePiece
		p	1		pos
	m	(Lrc;Ldvy;)Ldvx;	a	load
		p	0		list
		p	1		context
	m	()Ldva;	b	calculateBoundingBox
	m	()Ljava/util/List;	c	pieces
	f	Ljava/util/List;	a	pieces
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Laew;	c	JIGSAW_RENAME
	f	Ljava/util/Map;	d	RENAMES
c	dvy	net/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext
	m	()Lant;	a	resourceManager
	m	(Lakq;)Ldvy;	a	fromLevel
		p	0		world
	m	()Lhr;	b	registryAccess
	m	()Ldzc;	c	structureTemplateManager
	f	Lant;	a	resourceManager
	f	Lhr;	b	registryAccess
	f	Ldzc;	c	structureTemplateManager
c	dvz	net/minecraft/world/level/levelgen/structure/pieces/StructurePieceType
	m	(Ldvz$a;Ljava/lang/String;)Ldvz;	a	setPieceId
		p	0		type
		p	1		id
	m	(Ldvz$b;Ljava/lang/String;)Ldvz;	a	setTemplatePieceId
		p	0		type
		p	1		id
	m	(Ldvz;Ljava/lang/String;)Ldvz;	a	setFullContextPieceId
		p	0		type
		p	1		id
	m	(Ldvy;Lqw;)Ldvm;	load	load
		p	1		context
		p	2		nbt
	f	Ldvz;	A	STRONGHOLD_RIGHT_TURN
	f	Ldvz;	B	STRONGHOLD_ROOM_CROSSING
	f	Ldvz;	C	STRONGHOLD_STAIRS_DOWN
	f	Ldvz;	D	STRONGHOLD_START
	f	Ldvz;	E	STRONGHOLD_STRAIGHT
	f	Ldvz;	F	STRONGHOLD_STRAIGHT_STAIRS_DOWN
	f	Ldvz;	G	JUNGLE_PYRAMID_PIECE
	f	Ldvz;	H	OCEAN_RUIN
	f	Ldvz;	I	IGLOO
	f	Ldvz;	J	RUINED_PORTAL
	f	Ldvz;	K	SWAMPLAND_HUT
	f	Ldvz;	L	DESERT_PYRAMID_PIECE
	f	Ldvz;	M	OCEAN_MONUMENT_BUILDING
	f	Ldvz;	N	OCEAN_MONUMENT_CORE_ROOM
	f	Ldvz;	O	OCEAN_MONUMENT_DOUBLE_X_ROOM
	f	Ldvz;	P	OCEAN_MONUMENT_DOUBLE_XY_ROOM
	f	Ldvz;	Q	OCEAN_MONUMENT_DOUBLE_Y_ROOM
	f	Ldvz;	R	OCEAN_MONUMENT_DOUBLE_YZ_ROOM
	f	Ldvz;	S	OCEAN_MONUMENT_DOUBLE_Z_ROOM
	f	Ldvz;	T	OCEAN_MONUMENT_ENTRY_ROOM
	f	Ldvz;	U	OCEAN_MONUMENT_PENTHOUSE
	f	Ldvz;	V	OCEAN_MONUMENT_SIMPLE_ROOM
	f	Ldvz;	W	OCEAN_MONUMENT_SIMPLE_TOP_ROOM
	f	Ldvz;	X	OCEAN_MONUMENT_WING_ROOM
	f	Ldvz;	Y	END_CITY_PIECE
	f	Ldvz;	Z	WOODLAND_MANSION_PIECE
	f	Ldvz;	a	MINE_SHAFT_CORRIDOR
	f	Ldvz;	aa	BURIED_TREASURE_PIECE
	f	Ldvz;	ab	SHIPWRECK_PIECE
	f	Ldvz;	ac	NETHER_FOSSIL
	f	Ldvz;	ad	JIGSAW
	f	Ldvz;	b	MINE_SHAFT_CROSSING
	f	Ldvz;	c	MINE_SHAFT_ROOM
	f	Ldvz;	d	MINE_SHAFT_STAIRS
	f	Ldvz;	e	NETHER_FORTRESS_BRIDGE_CROSSING
	f	Ldvz;	f	NETHER_FORTRESS_BRIDGE_END_FILLER
	f	Ldvz;	g	NETHER_FORTRESS_BRIDGE_STRAIGHT
	f	Ldvz;	h	NETHER_FORTRESS_CASTLE_CORRIDOR_STAIRS
	f	Ldvz;	i	NETHER_FORTRESS_CASTLE_CORRIDOR_T_BALCONY
	f	Ldvz;	j	NETHER_FORTRESS_CASTLE_ENTRANCE
	f	Ldvz;	k	NETHER_FORTRESS_CASTLE_SMALL_CORRIDOR_CROSSING
	f	Ldvz;	l	NETHER_FORTRESS_CASTLE_SMALL_CORRIDOR_LEFT_TURN
	f	Ldvz;	m	NETHER_FORTRESS_CASTLE_SMALL_CORRIDOR
	f	Ldvz;	n	NETHER_FORTRESS_CASTLE_SMALL_CORRIDOR_RIGHT_TURN
	f	Ldvz;	o	NETHER_FORTRESS_CASTLE_STALK_ROOM
	f	Ldvz;	p	NETHER_FORTRESS_MONSTER_THRONE
	f	Ldvz;	q	NETHER_FORTRESS_ROOM_CROSSING
	f	Ldvz;	r	NETHER_FORTRESS_STAIRS_ROOM
	f	Ldvz;	s	NETHER_FORTRESS_START
	f	Ldvz;	t	STRONGHOLD_CHEST_CORRIDOR
	f	Ldvz;	u	STRONGHOLD_FILLER_CORRIDOR
	f	Ldvz;	v	STRONGHOLD_FIVE_CROSSING
	f	Ldvz;	w	STRONGHOLD_LEFT_TURN
	f	Ldvz;	x	STRONGHOLD_LIBRARY
	f	Ldvz;	y	STRONGHOLD_PORTAL_ROOM
	f	Ldvz;	z	STRONGHOLD_PRISON_HALL
c	dvz$a	net/minecraft/world/level/levelgen/structure/pieces/StructurePieceType$ContextlessType
	m	(Ldvy;Lqw;)Ldvm;	load	load
		p	1		context
		p	2		nbt
	m	(Lqw;)Ldvm;	load	load
		p	1		nbt
c	dvz$b	net/minecraft/world/level/levelgen/structure/pieces/StructurePieceType$StructureTemplateType
	m	(Ldvy;Lqw;)Ldvm;	load	load
		p	1		context
		p	2		nbt
	m	(Ldzc;Lqw;)Ldvm;	load	load
		p	1		structureTemplateManager
		p	2		nbt
c	dwa	net/minecraft/world/level/levelgen/structure/pieces/StructurePiecesBuilder
	m	()Ldvx;	a	build
	m	(I)V	a	offsetPiecesVertically
		p	1		y
	m	(IILasc;I)I	a	moveBelowSeaLevel
		p	1		topY
		p	2		bottomY
		p	3		random
		p	4		topPenalty
	m	(Lasc;II)V	a	moveInsideHeights
		p	1		random
		p	2		baseY
		p	3		topY
	m	(Ldva;)Ldvm;	a	findCollisionPiece
		p	1		box
	m	(Ldvm;)V	a	addPiece
		p	1		piece
	m	()V	b	clear
	m	()Z	c	isEmpty
	m	()Ldva;	d	getBoundingBox
	f	Ljava/util/List;	a	pieces
c	dwb	net/minecraft/world/level/levelgen/structure/pieces/package-info
c	dwc	net/minecraft/world/level/levelgen/structure/placement/ConcentricRingsStructurePlacement
	m	(IIILhi;)V	<init>	<init>
		p	1		distance
		p	2		spread
		p	3		structureCount
		p	4		preferredBiomes
	m	(Lhy;Ldwf$c;FILjava/util/Optional;IIILhi;)V	<init>	<init>
		p	1		locateOffset
		p	2		generationPredicateType
		p	3		frequency
		p	4		salt
		p	5		exclusionZone
		p	6		distance
		p	7		spread
		p	8		structureCount
		p	9		preferredBiomes
	m	()I	a	distance
	m	(Ldhh;II)Z	a	isPlacementChunk
		p	1		calculator
		p	2		chunkX
		p	3		chunkZ
	m	()I	b	spread
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P9;	b	codec
		p	0		instance
	m	()I	c	count
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	c	lambda$static$0
		p	0		instance
	m	()Lhi;	d	preferredBiomes
	m	()Ldwg;	e	type
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	c	distance
	f	I	d	spread
	f	I	e	count
	f	Lhi;	f	preferredBiomes
c	dwd	net/minecraft/world/level/levelgen/structure/placement/RandomSpreadStructurePlacement
	m	(IILdwe;I)V	<init>	<init>
		p	1		spacing
		p	2		separation
		p	3		spreadType
		p	4		salt
	m	(Lhy;Ldwf$c;FILjava/util/Optional;IILdwe;)V	<init>	<init>
		p	1		locateOffset
		p	2		frequencyReductionMethod
		p	3		frequency
		p	4		salt
		p	5		exclusionZone
		p	6		spacing
		p	7		separation
		p	8		spreadType
	m	()I	a	spacing
	m	(JII)Lcpc;	a	getPotentialStructureChunk
		p	1		seed
		p	3		chunkX
		p	4		chunkZ
	m	(Ldhh;II)Z	a	isPlacementChunk
		p	1		calculator
		p	2		chunkX
		p	3		chunkZ
	m	(Ldwd;)Lcom/mojang/serialization/DataResult;	a	validate
		p	0		structurePlacement
	m	()I	b	separation
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$0
		p	0		instance
	m	()Ldwe;	c	spreadType
	m	()Ljava/lang/String;	d	lambda$validate$1
	m	()Ldwg;	e	type
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	c	spacing
	f	I	d	separation
	f	Ldwe;	e	spreadType
c	dwe	net/minecraft/world/level/levelgen/structure/placement/RandomSpreadType
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()[Ldwe;	a	$values
	m	(Lasc;I)I	a	evaluate
		p	1		random
		p	2		bound
	m	()Ljava/lang/String;	c	getSerializedName
	f	Ldwe;	a	LINEAR
	f	Ldwe;	b	TRIANGULAR
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Ljava/lang/String;	d	id
	f	[Ldwe;	e	$VALUES
c	dwe$1	net/minecraft/world/level/levelgen/structure/placement/RandomSpreadType$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$levelgen$structure$placement$RandomSpreadType
c	dwf	net/minecraft/world/level/levelgen/structure/placement/StructurePlacement
	m	(Lhy;Ldwf$c;FILjava/util/Optional;)V	<init>	<init>
		p	1		locateOffset
		p	2		frequencyReductionMethod
		p	3		frequency
		p	4		salt
		p	5		exclusionZone
	m	(JIIIF)Z	a	probabilityReducer
		p	0		seed
		p	2		salt
		p	3		chunkX
		p	4		chunkZ
		p	5		frequency
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P5;	a	placementCodec
		p	0		instance
	m	(Lcpc;)Lgw;	a	getLocatePos
		p	1		chunkPos
	m	(Ldhh;II)Z	a	isPlacementChunk
		p	1		calculator
		p	2		chunkX
		p	3		chunkZ
	m	(JIIIF)Z	b	legacyProbabilityReducerWithDouble
		p	0		seed
		p	2		salt
		p	3		chunkX
		p	4		chunkZ
		p	5		frequency
	m	(Ldhh;II)Z	b	isStructureChunk
		p	1		calculator
		p	2		chunkX
		p	3		chunkZ
	m	(JIIIF)Z	c	legacyArbitrarySaltProbabilityReducer
		p	0		seed
		p	2		salt
		p	3		chunkX
		p	4		chunkZ
		p	5		frequency
	m	(JIIIF)Z	d	legacyPillagerOutpostReducer
		p	0		seed
		p	2		salt
		p	3		chunkX
		p	4		chunkZ
		p	5		frequency
	m	()Ldwg;	e	type
	m	()Lhy;	f	locateOffset
	m	()Ldwf$c;	g	frequencyReductionMethod
	m	()F	h	frequency
	m	()I	i	salt
	m	()Ljava/util/Optional;	j	exclusionZone
	f	I	a	HIGHLY_ARBITRARY_RANDOM_SALT
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lhy;	c	locateOffset
	f	Ldwf$c;	d	frequencyReductionMethod
	f	F	e	frequency
	f	I	f	salt
	f	Ljava/util/Optional;	g	exclusionZone
c	dwf$a	net/minecraft/world/level/levelgen/structure/placement/StructurePlacement$ExclusionZone
	m	()Lhe;	a	otherSet
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ldhh;II)Z	a	isPlacementForbidden
		p	1		calculator
		p	2		centerChunkX
		p	3		centerChunkZ
	m	()I	b	chunkCount
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lhe;	b	otherSet
	f	I	c	chunkCount
c	dwf$b	net/minecraft/world/level/levelgen/structure/placement/StructurePlacement$FrequencyReducer
	m	(JIIIF)Z	shouldGenerate	shouldGenerate
		p	1		seed
		p	3		salt
		p	4		chunkX
		p	5		chunkZ
		p	6		chance
c	dwf$c	net/minecraft/world/level/levelgen/structure/placement/StructurePlacement$FrequencyReductionMethod
	m	(Ljava/lang/String;ILjava/lang/String;Ldwf$b;)V	<init>	<init>
		p	3		name
		p	4		generationPredicate
	m	()[Ldwf$c;	a	$values
	m	(JIIIF)Z	a	shouldGenerate
		p	1		seed
		p	3		salt
		p	4		chunkX
		p	5		chunkZ
		p	6		chance
	m	()Ljava/lang/String;	c	getSerializedName
	f	Ldwf$c;	a	DEFAULT
	f	Ldwf$c;	b	LEGACY_TYPE_1
	f	Ldwf$c;	c	LEGACY_TYPE_2
	f	Ldwf$c;	d	LEGACY_TYPE_3
	f	Lcom/mojang/serialization/Codec;	e	CODEC
	f	Ljava/lang/String;	f	name
	f	Ldwf$b;	g	reducer
	f	[Ldwf$c;	h	$VALUES
c	dwg	net/minecraft/world/level/levelgen/structure/placement/StructurePlacementType
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	lambda$register$0
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Ldwg;	a	register
		p	0		id
		p	1		codec
	f	Ldwg;	a	RANDOM_SPREAD
	f	Ldwg;	b	CONCENTRIC_RINGS
c	dwh	net/minecraft/world/level/levelgen/structure/placement/package-info
c	dwi	net/minecraft/world/level/levelgen/structure/pools/EmptyPoolElement
	m	()Ldwq;	a	getType
	m	(Ldzc;Lcqp;Lcqn;Ldhg;Lgw;Lgw;Lczh;Ldva;Lasc;Z)Z	a	place
		p	1		structureTemplateManager
		p	2		world
		p	3		structureAccessor
		p	4		chunkGenerator
		p	5		pos
		p	6		pivot
		p	7		rotation
		p	8		box
		p	9		random
		p	10		keepJigsaws
	m	(Ldzc;Lczh;)Lhy;	a	getSize
		p	1		structureTemplateManager
		p	2		rotation
	m	(Ldzc;Lgw;Lczh;)Ldva;	a	getBoundingBox
		p	1		structureTemplateManager
		p	2		pos
		p	3		rotation
	m	(Ldzc;Lgw;Lczh;Lasc;)Ljava/util/List;	a	getShuffledJigsawBlocks
		p	1		structureTemplateManager
		p	2		pos
		p	3		rotation
		p	4		random
	m	()Ldwi;	b	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldwi;	b	INSTANCE
c	dwj	net/minecraft/world/level/levelgen/structure/pools/FeaturePoolElement
	m	(Lhe;Ldwr$a;)V	<init>	<init>
		p	1		feature
		p	2		projection
	m	()Ldwq;	a	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Ldwj;)Lhe;	a	lambda$static$0
		p	0		pool
	m	(Ldzc;Lcqp;Lcqn;Ldhg;Lgw;Lgw;Lczh;Ldva;Lasc;Z)Z	a	place
		p	1		structureTemplateManager
		p	2		world
		p	3		structureAccessor
		p	4		chunkGenerator
		p	5		pos
		p	6		pivot
		p	7		rotation
		p	8		box
		p	9		random
		p	10		keepJigsaws
	m	(Ldzc;Lczh;)Lhy;	a	getSize
		p	1		structureTemplateManager
		p	2		rotation
	m	(Ldzc;Lgw;Lczh;)Ldva;	a	getBoundingBox
		p	1		structureTemplateManager
		p	2		pos
		p	3		rotation
	m	(Ldzc;Lgw;Lczh;Lasc;)Ljava/util/List;	a	getShuffledJigsawBlocks
		p	1		structureTemplateManager
		p	2		pos
		p	3		rotation
		p	4		random
	m	()Lqw;	b	fillDefaultJigsawNBT
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lhe;	b	feature
	f	Lqw;	c	defaultJigsawNBT
c	dwk	net/minecraft/world/level/levelgen/structure/pools/JigsawJunction
	m	(IIIILdwr$a;)V	<init>	<init>
		p	1		sourceX
		p	2		sourceGroundY
		p	3		sourceZ
		p	4		deltaY
		p	5		destProjection
	m	()I	a	getSourceX
	m	(Lcom/mojang/serialization/Dynamic;)Ldwk;	a	deserialize
		p	0		dynamic
	m	(Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic;	a	serialize
		p	1		ops
	m	()I	b	getSourceGroundY
	m	()I	c	getSourceZ
	m	()I	d	getDeltaY
	m	()Ldwr$a;	e	getDestProjection
	f	I	a	sourceX
	f	I	b	sourceGroundY
	f	I	c	sourceZ
	f	I	d	deltaY
	f	Ldwr$a;	e	destProjection
c	dwl	net/minecraft/world/level/levelgen/structure/pools/JigsawPlacement
	m	(Laev;)Ljava/lang/String;	a	lambda$addPieces$0
		p	0		key
	m	(Lakq;Lhe;Laew;ILgw;Z)Z	a	generateJigsaw
		p	0		world
		p	1		structurePool
		p	2		id
		p	3		size
		p	4		pos
		p	5		keepJigsaws
	m	(Ldlg;IZLdhg;Ldzc;Lcpx;Lasc;Lhq;Ldve;Ljava/util/List;Leig;)V	a	addPieces
		p	0		noiseConfig
		p	1		maxSize
		p	2		modifyBoundingBox
		p	3		chunkGenerator
		p	4		structureTemplateManager
		p	5		heightLimitView
		p	6		random
		p	7		structurePoolRegistry
		p	8		firstPiece
		p	9		pieces
		p	10		pieceShape
	m	(Ldve;IIIIILdva;Ldvi$a;ZLdhg;Ldzc;Lcpx;Ldlr;Lhq;Ldwa;)V	a	lambda$addPieces$1
		p	14		collector
	m	(Ldvi$a;Lhe;Ljava/util/Optional;ILgw;ZLjava/util/Optional;I)Ljava/util/Optional;	a	addPieces
		p	0		context
		p	1		structurePool
		p	2		id
		p	3		size
		p	4		pos
		p	5		useExpansionHack
		p	6		projectStartToHeightmap
		p	7		maxDistanceFromCenter
	m	(Ldwp;Laew;Lgw;Lczh;Ldzc;Ldlr;)Ljava/util/Optional;	a	getRandomNamedJigsaw
		p	0		pool
		p	1		id
		p	2		pos
		p	3		rotation
		p	4		structureManager
		p	5		random
	m	(Lhe;)Z	a	lambda$generateJigsaw$2
		p	0		biome
	f	Lorg/slf4j/Logger;	a	LOGGER
c	dwl$a	net/minecraft/world/level/levelgen/structure/pools/JigsawPlacement$PieceState
	m	(Ldve;Lorg/apache/commons/lang3/mutable/MutableObject;I)V	<init>	<init>
		p	1		piece
		p	2		pieceShape
		p	3		currentSize
	f	Ldve;	a	piece
	f	Lorg/apache/commons/lang3/mutable/MutableObject;	b	free
	f	I	c	depth
c	dwl$b	net/minecraft/world/level/levelgen/structure/pools/JigsawPlacement$Placer
	m	(Lhq;ILdhg;Ldzc;Ljava/util/List;Lasc;)V	<init>	<init>
		p	1		registry
		p	2		maxSize
		p	3		chunkGenerator
		p	4		structureTemplateManager
		p	5		children
		p	6		random
	m	(Laev;)Ljava/lang/String;	a	lambda$tryPlacingChildren$0
		p	0		key
	m	(Ldva;Ldzb$c;)I	a	lambda$tryPlacingChildren$4
		p	2		blockInfo
	m	(Ldve;Lorg/apache/commons/lang3/mutable/MutableObject;IZLcpx;Ldlg;)V	a	tryPlacingChildren
		p	1		piece
		p	2		pieceShape
		p	3		minY
		p	4		modifyBoundingBox
		p	5		world
		p	6		noiseConfig
	m	(Ldzb$c;)Laev;	a	readPoolName
		p	0		blockInfo
	m	(Lhe;)Ljava/lang/Integer;	a	lambda$tryPlacingChildren$3
		p	1		entry
	m	(Lhe;)Ljava/lang/Integer;	b	lambda$tryPlacingChildren$2
		p	1		entry
	m	(Lhe;)Lhe;	c	lambda$tryPlacingChildren$1
		p	0		entry
	f	Lhq;	a	pools
	f	I	b	maxDepth
	f	Ldhg;	c	chunkGenerator
	f	Ldzc;	d	structureTemplateManager
	f	Ljava/util/List;	e	pieces
	f	Lasc;	f	random
	f	Ljava/util/Deque;	g	placing
c	dwm	net/minecraft/world/level/levelgen/structure/pools/LegacySinglePoolElement
	m	(Lcom/mojang/datafixers/util/Either;Lhe;Ldwr$a;)V	<init>	<init>
		p	1		location
		p	2		processors
		p	3		projection
	m	()Ldwq;	a	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lczh;Ldva;Z)Ldyx;	a	getSettings
		p	1		rotation
		p	2		box
		p	3		keepJigsaws
	f	Lcom/mojang/serialization/Codec;	a	CODEC
c	dwn	net/minecraft/world/level/levelgen/structure/pools/ListPoolElement
	m	(Ljava/util/List;Ldwr$a;)V	<init>	<init>
		p	1		elements
		p	2		projection
	m	()Ldwq;	a	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Ldwn;)Ljava/util/List;	a	lambda$static$0
		p	0		pool
	m	(Ldwp;)Z	a	lambda$getBoundingBox$2
		p	0		element
	m	(Ldwr$a;)Ldwp;	a	setProjection
		p	1		projection
	m	(Ldwr$a;Ldwp;)V	a	lambda$setProjectionOnEachElement$5
		p	1		element
	m	(Ldzc;Lcqp;Lcqn;Ldhg;Lgw;Lgw;Lczh;Ldva;Lasc;Z)Z	a	place
		p	1		structureTemplateManager
		p	2		world
		p	3		structureAccessor
		p	4		chunkGenerator
		p	5		pos
		p	6		pivot
		p	7		rotation
		p	8		box
		p	9		random
		p	10		keepJigsaws
	m	(Ldzc;Lczh;)Lhy;	a	getSize
		p	1		structureTemplateManager
		p	2		rotation
	m	(Ldzc;Lgw;Lczh;)Ldva;	a	getBoundingBox
		p	1		structureTemplateManager
		p	2		pos
		p	3		rotation
	m	(Ldzc;Lgw;Lczh;Lasc;)Ljava/util/List;	a	getShuffledJigsawBlocks
		p	1		structureTemplateManager
		p	2		pos
		p	3		rotation
		p	4		random
	m	(Ldzc;Lgw;Lczh;Ldwp;)Ldva;	a	lambda$getBoundingBox$3
		p	3		element
	m	()Ljava/lang/IllegalStateException;	b	lambda$getBoundingBox$4
	m	(Ldwr$a;)V	b	setProjectionOnEachElement
		p	1		projection
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/List;	b	elements
c	dwo	net/minecraft/world/level/levelgen/structure/pools/SinglePoolElement
	m	(Lcom/mojang/datafixers/util/Either;Lhe;Ldwr$a;)V	<init>	<init>
		p	1		location
		p	2		processors
		p	3		projection
	m	()Ldwq;	a	getType
	m	(Lcom/mojang/datafixers/util/Either;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	encodeTemplate
		p	0		location
		p	1		ops
		p	2		prefix
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Lczh;Ldva;Z)Ldyx;	a	getSettings
		p	1		rotation
		p	2		box
		p	3		keepJigsaws
	m	(Ldwo;)Lcom/mojang/datafixers/util/Either;	a	lambda$templateCodec$3
		p	0		pool
	m	(Ldzc;)Ldzb;	a	getTemplate
		p	1		structureTemplateManager
	m	(Ldzc;Lcqp;Lcqn;Ldhg;Lgw;Lgw;Lczh;Ldva;Lasc;Z)Z	a	place
		p	1		structureTemplateManager
		p	2		world
		p	3		structureAccessor
		p	4		chunkGenerator
		p	5		pos
		p	6		pivot
		p	7		rotation
		p	8		box
		p	9		random
		p	10		keepJigsaws
	m	(Ldzc;Lczh;)Lhy;	a	getSize
		p	1		structureTemplateManager
		p	2		rotation
	m	(Ldzc;Lgw;Lczh;)Ldva;	a	getBoundingBox
		p	1		structureTemplateManager
		p	2		pos
		p	3		rotation
	m	(Ldzc;Lgw;Lczh;Lasc;)Ljava/util/List;	a	getShuffledJigsawBlocks
		p	1		structureTemplateManager
		p	2		pos
		p	3		rotation
		p	4		random
	m	(Ldzc;Lgw;Lczh;Z)Ljava/util/List;	a	getDataMarkers
		p	1		structureTemplateManager
		p	2		pos
		p	3		rotation
		p	4		mirroredAndRotated
	m	()Lcom/mojang/serialization/codecs/RecordCodecBuilder;	b	processorsCodec
	m	(Ldwo;)Lhe;	b	lambda$processorsCodec$2
		p	0		pool
	m	()Lcom/mojang/serialization/codecs/RecordCodecBuilder;	c	templateCodec
	m	()Ljava/lang/String;	h	lambda$encodeTemplate$0
	f	Lcom/mojang/serialization/Codec;	a	TEMPLATE_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lcom/mojang/datafixers/util/Either;	c	template
	f	Lhe;	d	processors
c	dwp	net/minecraft/world/level/levelgen/structure/pools/StructurePoolElement
	m	(Ldwr$a;)V	<init>	<init>
		p	1		projection
	m	()Ldwq;	a	getType
	m	(Lcpw;Ldzb$c;Lgw;Lczh;Lasc;Ldva;)V	a	handleDataMarker
		p	1		world
		p	2		structureBlockInfo
		p	3		pos
		p	4		rotation
		p	5		random
		p	6		box
	m	(Ldwr$a;)Ldwp;	a	setProjection
		p	1		projection
	m	(Ldwr$a;Ljava/util/function/Function;)Ldwp;	a	lambda$list$6
		p	1		elementGetter
	m	(Ldzc;Lcqp;Lcqn;Ldhg;Lgw;Lgw;Lczh;Ldva;Lasc;Z)Z	a	place
		p	1		structureTemplateManager
		p	2		world
		p	3		structureAccessor
		p	4		chunkGenerator
		p	5		pos
		p	6		pivot
		p	7		rotation
		p	8		box
		p	9		random
		p	10		keepJigsaws
	m	(Ldzc;Lczh;)Lhy;	a	getSize
		p	1		structureTemplateManager
		p	2		rotation
	m	(Ldzc;Lgw;Lczh;)Ldva;	a	getBoundingBox
		p	1		structureTemplateManager
		p	2		pos
		p	3		rotation
	m	(Ldzc;Lgw;Lczh;Lasc;)Ljava/util/List;	a	getShuffledJigsawBlocks
		p	1		structureTemplateManager
		p	2		pos
		p	3		rotation
		p	4		random
	m	(Lhe;)Ljava/util/function/Function;	a	feature
		p	0		placedFeatureEntry
	m	(Lhe;Ldwr$a;)Ldwj;	a	lambda$feature$5
		p	1		projection
	m	(Ljava/lang/String;)Ljava/util/function/Function;	a	legacy
		p	0		id
	m	(Ljava/lang/String;Ldwr$a;)Ldwo;	a	lambda$single$3
		p	1		projection
	m	(Ljava/lang/String;Lhe;)Ljava/util/function/Function;	a	legacy
		p	0		id
		p	1		processorListEntry
	m	(Ljava/lang/String;Lhe;Ldwr$a;)Ldwo;	a	lambda$single$4
		p	2		projection
	m	(Ljava/util/List;)Ljava/util/function/Function;	a	list
		p	0		elementGetters
	m	(Ljava/util/List;Ldwr$a;)Ldwn;	a	lambda$list$7
		p	1		projection
	m	(Ldwr$a;)Ldwi;	b	lambda$empty$0
		p	0		projection
	m	(Ljava/lang/String;)Ljava/util/function/Function;	b	single
		p	0		id
	m	(Ljava/lang/String;Ldwr$a;)Ldwm;	b	lambda$legacy$1
		p	1		projection
	m	(Ljava/lang/String;Lhe;)Ljava/util/function/Function;	b	single
		p	0		id
		p	1		processorListEntry
	m	(Ljava/lang/String;Lhe;Ldwr$a;)Ldwm;	b	lambda$legacy$2
		p	2		projection
	m	()Lcom/mojang/serialization/codecs/RecordCodecBuilder;	d	projectionCodec
	m	()Ldwr$a;	e	getProjection
	m	()I	f	getGroundLevelDelta
	m	()Ljava/util/function/Function;	g	empty
	f	Lhe;	a	EMPTY
	f	Ldwr$a;	b	projection
	f	Lcom/mojang/serialization/Codec;	e	CODEC
c	dwq	net/minecraft/world/level/levelgen/structure/pools/StructurePoolElementType
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	lambda$register$0
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Ldwq;	a	register
		p	0		id
		p	1		codec
	f	Ldwq;	a	SINGLE
	f	Ldwq;	b	LIST
	f	Ldwq;	c	FEATURE
	f	Ldwq;	d	EMPTY
	f	Ldwq;	e	LEGACY
c	dwr	net/minecraft/world/level/levelgen/structure/pools/StructureTemplatePool
	m	(Lhe;Ljava/util/List;)V	<init>	<init>
		p	1		fallback
		p	2		elementCounts
	m	(Lhe;Ljava/util/List;Ldwr$a;)V	<init>	<init>
		p	1		fallback
		p	2		elementCountsByGetters
		p	3		projection
	m	()Lhe;	a	getFallback
	m	(Lasc;)Ldwp;	a	getRandomTemplate
		p	1		random
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Ldwp;)Z	a	lambda$getMaxSize$2
		p	0		element
	m	(Ldwr;)Ljava/util/List;	a	lambda$static$0
		p	0		pool
	m	(Ldzc;)I	a	getMaxSize
		p	1		structureTemplateManager
	m	(Ldzc;Ldwp;)I	a	lambda$getMaxSize$3
		p	1		element
	m	()I	b	size
	m	(Lasc;)Ljava/util/List;	b	getShuffledTemplates
		p	1		random
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	I	c	SIZE_UNSET
	f	Lorg/apache/commons/lang3/mutable/MutableObject;	d	CODEC_REFERENCE
	f	Ljava/util/List;	e	rawTemplates
	f	Lit/unimi/dsi/fastutil/objects/ObjectArrayList;	f	templates
	f	Lhe;	g	fallback
	f	I	h	maxSize
c	dwr$a	net/minecraft/world/level/levelgen/structure/pools/StructureTemplatePool$Projection
	m	(Ljava/lang/String;ILjava/lang/String;Lcom/google/common/collect/ImmutableList;)V	<init>	<init>
		p	3		id
		p	4		processors
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/lang/String;)Ldwr$a;	a	byName
		p	0		id
	m	()Lcom/google/common/collect/ImmutableList;	b	getProcessors
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Ldwr$a;	d	$values
	f	Ldwr$a;	a	TERRAIN_MATCHING
	f	Ldwr$a;	b	RIGID
	f	Lasp$a;	c	CODEC
	f	Ljava/lang/String;	d	name
	f	Lcom/google/common/collect/ImmutableList;	e	processors
	f	[Ldwr$a;	f	$VALUES
c	dws	net/minecraft/world/level/levelgen/structure/pools/package-info
c	dwt	net/minecraft/world/level/levelgen/structure/structures/BuriedTreasurePieces
c	dwt$a	net/minecraft/world/level/levelgen/structure/structures/BuriedTreasurePieces$BuriedTreasurePiece
	m	(Lgw;)V	<init>	<init>
		p	1		pos
	m	(Lqw;)V	<init>	<init>
		p	1		nbt
	m	(Lcqp;Lcqn;Ldhg;Lasc;Ldva;Lcpc;Lgw;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldvy;Lqw;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	m	(Ldfj;)Z	b	isLiquid
		p	1		state
c	dwu	net/minecraft/world/level/levelgen/structure/structures/BuriedTreasureStructure
	m	(Ldvi$c;)V	<init>	<init>
		p	1		config
	m	(Ldvi$a;)Ljava/util/Optional;	a	findGenerationPoint
		p	1		context
	m	(Ldvi$a;Ldwa;)V	a	lambda$findGenerationPoint$0
		p	1		collector
	m	(Ldwa;Ldvi$a;)V	a	generatePieces
		p	0		collector
		p	1		context
	m	()Ldvr;	e	type
	f	Lcom/mojang/serialization/Codec;	d	CODEC
c	dwv	net/minecraft/world/level/levelgen/structure/structures/DesertPyramidPiece
	m	(Lasc;II)V	<init>	<init>
		p	1		random
		p	2		x
		p	3		z
	m	(Lqw;)V	<init>	<init>
		p	1		nbt
	m	(IIIIII)V	a	placeSandBox
		p	1		startX
		p	2		startY
		p	3		startZ
		p	4		endX
		p	5		endY
		p	6		endZ
	m	(Lcqp;IIILdva;)V	a	placeCollapsedRoofPiece
		p	1		world
		p	2		x
		p	3		y
		p	4		z
		p	5		chunkBox
	m	(Lcqp;Lcqn;Ldhg;Lasc;Ldva;Lcpc;Lgw;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Lcqp;Ldva;)V	a	addCellar
		p	1		world
		p	2		chunkBox
	m	(Lcqp;Ldva;IIIII)V	a	placeCollapsedRoof
		p	1		world
		p	2		chunkBox
		p	3		startX
		p	4		y
		p	5		startZ
		p	6		endX
		p	7		endZ
	m	(Ldvy;Lqw;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	m	(Lgw;Lcqp;Ldva;)V	a	addCellarStairs
		p	1		pos
		p	2		world
		p	3		chunkBox
	m	()Ljava/util/List;	b	getPotentialSuspiciousSandWorldPositions
	m	(Lgw;Lcqp;Ldva;)V	b	addCellarRoom
		p	1		pos
		p	2		world
		p	3		chunkBox
	m	()Lgw;	c	getRandomCollapsedRoofPos
	m	(III)V	c	placeSand
		p	1		x
		p	2		y
		p	3		z
	f	I	h	WIDTH
	f	I	i	DEPTH
	f	[Z	j	hasPlacedChest
	f	Ljava/util/List;	k	potentialSuspiciousSandWorldPositions
	f	Lgw;	l	randomCollapsedRoofPos
c	dww	net/minecraft/world/level/levelgen/structure/structures/DesertPyramidStructure
	m	(Ldvi$c;)V	<init>	<init>
		p	1		config
	m	(Lcqp;Lcqn;Ldhg;Lasc;Ldva;Lcpc;Ldvx;)V	a	afterPlace
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		box
		p	6		chunkPos
		p	7		pieces
	m	(Ldva;Lcqp;Lgw;)V	a	placeSuspiciousSand
		p	0		box
		p	1		world
		p	2		pos
	m	(Lgw;Ldcz;)V	a	lambda$placeSuspiciousSand$0
		p	1		blockEntity
	m	()Ldvr;	e	type
	f	Lcom/mojang/serialization/Codec;	d	CODEC
c	dwx	net/minecraft/world/level/levelgen/structure/structures/EndCityPieces
	m	(Ldzc;Ldwx$a;Lgw;Ljava/lang/String;Lczh;Z)Ldwx$a;	a	addPiece
		p	0		structureTemplateManager
		p	1		lastPiece
		p	2		relativePosition
		p	3		template
		p	4		rotation
		p	5		ignoreAir
	m	(Ldzc;Ldwx$b;ILdwx$a;Lgw;Ljava/util/List;Lasc;)Z	a	recursiveChildren
		p	0		manager
		p	1		piece
		p	2		depth
		p	3		parent
		p	4		pos
		p	5		pieces
		p	6		random
	m	(Ldzc;Lgw;Lczh;Ljava/util/List;Lasc;)V	a	startHouseTower
		p	0		structureTemplateManager
		p	1		pos
		p	2		rotation
		p	3		pieces
		p	4		random
	m	(Ljava/util/List;Ldwx$a;)Ldwx$a;	a	addHelper
		p	0		pieces
		p	1		piece
	f	I	a	MAX_GEN_DEPTH
	f	Ldwx$b;	b	HOUSE_TOWER_GENERATOR
	f	Ljava/util/List;	c	TOWER_BRIDGES
	f	Ldwx$b;	d	TOWER_GENERATOR
	f	Ldwx$b;	e	TOWER_BRIDGE_GENERATOR
	f	Ljava/util/List;	f	FAT_TOWER_BRIDGES
	f	Ldwx$b;	g	FAT_TOWER_GENERATOR
c	dwx$1	net/minecraft/world/level/levelgen/structure/structures/EndCityPieces$1
	m	()V	a	init
	m	(Ldzc;ILdwx$a;Lgw;Ljava/util/List;Lasc;)Z	a	generate
		p	1		manager
		p	2		depth
		p	3		root
		p	4		pos
		p	5		pieces
		p	6		random
c	dwx$2	net/minecraft/world/level/levelgen/structure/structures/EndCityPieces$2
	m	()V	a	init
	m	(Ldzc;ILdwx$a;Lgw;Ljava/util/List;Lasc;)Z	a	generate
		p	1		manager
		p	2		depth
		p	3		root
		p	4		pos
		p	5		pieces
		p	6		random
c	dwx$3	net/minecraft/world/level/levelgen/structure/structures/EndCityPieces$3
	m	()V	a	init
	m	(Ldzc;ILdwx$a;Lgw;Ljava/util/List;Lasc;)Z	a	generate
		p	1		manager
		p	2		depth
		p	3		root
		p	4		pos
		p	5		pieces
		p	6		random
	f	Z	a	shipCreated
c	dwx$4	net/minecraft/world/level/levelgen/structure/structures/EndCityPieces$4
	m	()V	a	init
	m	(Ldzc;ILdwx$a;Lgw;Ljava/util/List;Lasc;)Z	a	generate
		p	1		manager
		p	2		depth
		p	3		root
		p	4		pos
		p	5		pieces
		p	6		random
c	dwx$a	net/minecraft/world/level/levelgen/structure/structures/EndCityPieces$EndCityPiece
	m	(Ldzc;Ljava/lang/String;Lgw;Lczh;Z)V	<init>	<init>
		p	1		manager
		p	2		template
		p	3		pos
		p	4		rotation
		p	5		includeAir
	m	(Ldzc;Lqw;)V	<init>	<init>
		p	1		manager
		p	2		nbt
	m	(Ldvy;Lqw;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	m	(Ljava/lang/String;)Laew;	a	makeResourceLocation
		p	0		template
	m	(Ljava/lang/String;Lgw;Lcqk;Lasc;Ldva;)V	a	handleDataMarker
		p	1		metadata
		p	2		pos
		p	3		world
		p	4		random
		p	5		boundingBox
	m	(Lqw;Laew;)Ldyx;	a	lambda$new$0
		p	1		id
	m	(ZLczh;)Ldyx;	a	makeSettings
		p	0		includeAir
		p	1		rotation
	m	()Laew;	b	makeTemplateLocation
c	dwx$b	net/minecraft/world/level/levelgen/structure/structures/EndCityPieces$SectionGenerator
	m	()V	a	init
	m	(Ldzc;ILdwx$a;Lgw;Ljava/util/List;Lasc;)Z	a	generate
		p	1		manager
		p	2		depth
		p	3		root
		p	4		pos
		p	5		pieces
		p	6		random
c	dwy	net/minecraft/world/level/levelgen/structure/structures/EndCityStructure
	m	(Ldvi$c;)V	<init>	<init>
		p	1		config
	m	(Ldvi$a;)Ljava/util/Optional;	a	findGenerationPoint
		p	1		context
	m	(Ldwa;Lgw;Lczh;Ldvi$a;)V	a	generatePieces
		p	1		collector
		p	2		pos
		p	3		rotation
		p	4		context
	m	(Lgw;Lczh;Ldvi$a;Ldwa;)V	a	lambda$findGenerationPoint$0
		p	4		collector
	m	()Ldvr;	e	type
	f	Lcom/mojang/serialization/Codec;	d	CODEC
c	dwz	net/minecraft/world/level/levelgen/structure/structures/IglooPieces
	m	(Ldzc;Lgw;Lczh;Ldvn;Lasc;)V	a	addPieces
		p	0		manager
		p	1		pos
		p	2		rotation
		p	3		holder
		p	4		random
	f	I	a	GENERATION_HEIGHT
	f	Laew;	b	STRUCTURE_LOCATION_IGLOO
	f	Laew;	c	STRUCTURE_LOCATION_LADDER
	f	Laew;	d	STRUCTURE_LOCATION_LABORATORY
	f	Ljava/util/Map;	e	PIVOTS
	f	Ljava/util/Map;	f	OFFSETS
c	dwz$a	net/minecraft/world/level/levelgen/structure/structures/IglooPieces$IglooPiece
	m	(Ldzc;Laew;Lgw;Lczh;I)V	<init>	<init>
		p	1		manager
		p	2		identifier
		p	3		pos
		p	4		rotation
		p	5		yOffset
	m	(Ldzc;Lqw;)V	<init>	<init>
		p	1		manager
		p	2		nbt
	m	(Laew;Lgw;I)Lgw;	a	makePosition
		p	0		identifier
		p	1		pos
		p	2		yOffset
	m	(Lcqp;Lcqn;Ldhg;Lasc;Ldva;Lcpc;Lgw;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Lczh;Laew;)Ldyx;	a	makeSettings
		p	0		rotation
		p	1		identifier
	m	(Ldvy;Lqw;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	m	(Ljava/lang/String;Lgw;Lcqk;Lasc;Ldva;)V	a	handleDataMarker
		p	1		metadata
		p	2		pos
		p	3		world
		p	4		random
		p	5		boundingBox
	m	(Lqw;Laew;)Ldyx;	a	lambda$new$0
		p	1		identifier
c	dxa	net/minecraft/world/level/levelgen/structure/structures/IglooStructure
	m	(Ldvi$c;)V	<init>	<init>
		p	1		config
	m	(Ldvi$a;)Ljava/util/Optional;	a	findGenerationPoint
		p	1		context
	m	(Ldvi$a;Ldwa;)V	a	lambda$findGenerationPoint$0
		p	2		collector
	m	(Ldwa;Ldvi$a;)V	a	generatePieces
		p	1		collector
		p	2		context
	m	()Ldvr;	e	type
	f	Lcom/mojang/serialization/Codec;	d	CODEC
c	dxb	net/minecraft/world/level/levelgen/structure/structures/JigsawStructure
	m	(Ldvi$c;Lhe;ILdtp;Z)V	<init>	<init>
		p	1		config
		p	2		startPool
		p	3		size
		p	4		startHeight
		p	5		useExpansionHack
	m	(Ldvi$c;Lhe;ILdtp;ZLdks$a;)V	<init>	<init>
		p	1		config
		p	2		startPool
		p	3		size
		p	4		startHeight
		p	5		useExpansionHack
		p	6		projectStartToHeightmap
	m	(Ldvi$c;Lhe;Ljava/util/Optional;ILdtp;ZLjava/util/Optional;I)V	<init>	<init>
		p	1		config
		p	2		startPool
		p	3		startJigsawName
		p	4		size
		p	5		startHeight
		p	6		useExpansionHack
		p	7		projectStartToHeightmap
		p	8		maxDistanceFromCenter
	m	(Ldvi$a;)Ljava/util/Optional;	a	findGenerationPoint
		p	1		context
	m	(Ldxb;)Lcom/mojang/serialization/DataResult;	a	verifyRange
		p	0		structure
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$7
		p	0		instance
	m	(Ldxb;)Ljava/lang/Integer;	b	lambda$static$6
		p	0		structure
	m	(Ldxb;)Ljava/util/Optional;	c	lambda$static$5
		p	0		structure
	m	(Ldxb;)Ljava/lang/Boolean;	d	lambda$static$4
		p	0		structure
	m	()Ldvr;	e	type
	m	(Ldxb;)Ldtp;	e	lambda$static$3
		p	0		structure
	m	()Ljava/lang/String;	f	lambda$verifyRange$8
	m	(Ldxb;)Ljava/lang/Integer;	f	lambda$static$2
		p	0		structure
	m	(Ldxb;)Ljava/util/Optional;	g	lambda$static$1
		p	0		structure
	m	(Ldxb;)Lhe;	h	lambda$static$0
		p	0		structure
	f	I	d	MAX_TOTAL_STRUCTURE_RANGE
	f	Lcom/mojang/serialization/Codec;	e	CODEC
	f	Lhe;	f	startPool
	f	Ljava/util/Optional;	g	startJigsawName
	f	I	h	maxDepth
	f	Ldtp;	i	startHeight
	f	Z	j	useExpansionHack
	f	Ljava/util/Optional;	k	projectStartToHeightmap
	f	I	l	maxDistanceFromCenter
c	dxb$1	net/minecraft/world/level/levelgen/structure/structures/JigsawStructure$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$levelgen$structure$TerrainAdjustment
c	dxc	net/minecraft/world/level/levelgen/structure/structures/JungleTemplePiece
	m	(Lasc;II)V	<init>	<init>
		p	1		random
		p	2		x
		p	3		z
	m	(Lqw;)V	<init>	<init>
		p	1		nbt
	m	(Lcqp;Lcqn;Ldhg;Lasc;Ldva;Lcpc;Lgw;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldvy;Lqw;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	f	I	h	WIDTH
	f	I	i	DEPTH
	f	Z	j	placedMainChest
	f	Z	k	placedHiddenChest
	f	Z	l	placedTrap1
	f	Z	m	placedTrap2
	f	Ldxc$a;	n	STONE_SELECTOR
c	dxc$a	net/minecraft/world/level/levelgen/structure/structures/JungleTemplePiece$MossStoneSelector
	m	(Lasc;IIIZ)V	a	next
		p	1		random
		p	2		x
		p	3		y
		p	4		z
		p	5		placeBlock
c	dxd	net/minecraft/world/level/levelgen/structure/structures/JungleTempleStructure
	m	(Ldvi$c;)V	<init>	<init>
		p	1		config
	m	()Ldvr;	e	type
	f	Lcom/mojang/serialization/Codec;	d	CODEC
c	dxe	net/minecraft/world/level/levelgen/structure/structures/MineshaftPieces
	m	(Ldvm;Ldvn;Lasc;IIILha;I)Ldxe$c;	a	generateAndAddPiece
		p	0		start
		p	1		holder
		p	2		random
		p	3		x
		p	4		y
		p	5		z
		p	6		orientation
		p	7		chainLength
	m	(Ldvn;Lasc;IIILha;ILdxf$a;)Ldxe$c;	a	createRandomShaftPiece
		p	0		holder
		p	1		random
		p	2		x
		p	3		y
		p	4		z
		p	5		orientation
		p	6		chainLength
		p	7		type
	f	I	a	MAGIC_START_Y
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	I	c	DEFAULT_SHAFT_WIDTH
	f	I	d	DEFAULT_SHAFT_HEIGHT
	f	I	e	DEFAULT_SHAFT_LENGTH
	f	I	f	MAX_PILLAR_HEIGHT
	f	I	g	MAX_CHAIN_HEIGHT
	f	I	h	MAX_DEPTH
c	dxe$1	net/minecraft/world/level/levelgen/structure/structures/MineshaftPieces$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	dxe$a	net/minecraft/world/level/levelgen/structure/structures/MineshaftPieces$MineShaftCorridor
	m	(ILasc;Ldva;Lha;Ldxf$a;)V	<init>	<init>
		p	1		chainLength
		p	2		random
		p	3		boundingBox
		p	4		orientation
		p	5		type
	m	(Lqw;)V	<init>	<init>
		p	1		nbt
	m	(Lcpy;Lgw;Ldfj;)Z	a	canPlaceColumnOnTopOf
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcqp;Lcqn;Ldhg;Lasc;Ldva;Lcpc;Lgw;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Lcqp;Ldfj;Lgw$a;II)V	a	fillColumnBetween
		p	0		world
		p	1		state
		p	2		pos
		p	3		startY
		p	4		endY
	m	(Lcqp;Ldva;III)V	a	placeDoubleLowerOrUpperSupport
		p	1		world
		p	2		box
		p	3		x
		p	4		y
		p	5		z
	m	(Lcqp;Ldva;IIII)Z	a	hasSturdyNeighbours
		p	1		world
		p	2		box
		p	3		x
		p	4		y
		p	5		z
		p	6		count
	m	(Lcqp;Ldva;IIIIILasc;)V	a	placeSupport
		p	1		world
		p	2		boundingBox
		p	3		minX
		p	4		minY
		p	5		z
		p	6		maxY
		p	7		maxX
		p	8		random
	m	(Lcqp;Ldva;Lasc;FIII)V	a	maybePlaceCobWeb
		p	1		world
		p	2		box
		p	3		random
		p	4		threshold
		p	5		x
		p	6		y
		p	7		z
	m	(Lcqp;Ldva;Lasc;IIILaew;)Z	a	createChest
		p	1		world
		p	2		boundingBox
		p	3		random
		p	4		x
		p	5		y
		p	6		z
		p	7		lootTableId
	m	(Ldvm;Ldvn;Lasc;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Ldvn;Lasc;IIILha;)Ldva;	a	findCorridorSize
		p	0		holder
		p	1		random
		p	2		x
		p	3		y
		p	4		z
		p	5		orientation
	m	(Ldvy;Lqw;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	m	(Lcpy;Lgw;Ldfj;)Z	b	canHangChainBelow
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcqp;Ldfj;IIILdva;)V	b	fillColumnDown
		p	1		world
		p	2		state
		p	3		x
		p	4		y
		p	5		z
		p	6		box
	m	(Lcqp;Ldfj;IIILdva;)V	c	fillPillarDownOrChainUp
		p	1		world
		p	2		state
		p	3		x
		p	4		y
		p	5		z
		p	6		box
	f	Z	b	hasRails
	f	Z	c	spiderCorridor
	f	Z	d	hasPlacedSpider
	f	I	h	numSections
c	dxe$b	net/minecraft/world/level/levelgen/structure/structures/MineshaftPieces$MineShaftCrossing
	m	(ILdva;Lha;Ldxf$a;)V	<init>	<init>
		p	1		chainLength
		p	2		boundingBox
		p	3		orientation
		p	4		type
	m	(Lqw;)V	<init>	<init>
		p	1		nbt
	m	(Lcqp;Lcqn;Ldhg;Lasc;Ldva;Lcpc;Lgw;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Lcqp;Ldva;IIII)V	a	placeSupportPillar
		p	1		world
		p	2		boundingBox
		p	3		x
		p	4		minY
		p	5		z
		p	6		maxY
	m	(Ldvm;Ldvn;Lasc;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Ldvn;Lasc;IIILha;)Ldva;	a	findCrossing
		p	0		holder
		p	1		random
		p	2		x
		p	3		y
		p	4		z
		p	5		orientation
	m	(Ldvy;Lqw;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	f	Lha;	b	direction
	f	Z	c	isTwoFloored
c	dxe$c	net/minecraft/world/level/levelgen/structure/structures/MineshaftPieces$MineShaftPiece
	m	(Ldvz;ILdxf$a;Ldva;)V	<init>	<init>
		p	1		structurePieceType
		p	2		chainLength
		p	3		type
		p	4		box
	m	(Ldvz;Lqw;)V	<init>	<init>
		p	1		type
		p	2		nbt
	m	(Lcpb;Ldva;IIII)Z	a	isSupportingBox
		p	1		world
		p	2		boundingBox
		p	3		minX
		p	4		maxX
		p	5		y
		p	6		z
	m	(Lcpw;Ldva;)Z	a	isInInvalidLocation
		p	1		world
		p	2		box
	m	(Lcpy;IIILdva;)Z	a	canBeReplaced
		p	1		world
		p	2		x
		p	3		y
		p	4		z
		p	5		box
	m	(Lcqp;Ldva;Ldfj;III)V	a	setPlanksBlock
		p	1		world
		p	2		box
		p	3		state
		p	4		x
		p	5		y
		p	6		z
	m	(Ldvy;Lqw;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	f	Ldxf$a;	a	type
c	dxe$d	net/minecraft/world/level/levelgen/structure/structures/MineshaftPieces$MineShaftRoom
	m	(ILasc;IILdxf$a;)V	<init>	<init>
		p	1		chainLength
		p	2		random
		p	3		x
		p	4		z
		p	5		type
	m	(Lqw;)V	<init>	<init>
		p	1		nbt
	m	(III)V	a	move
		p	1		x
		p	2		y
		p	3		z
	m	(Lcqp;Lcqn;Ldhg;Lasc;Ldva;Lcpc;Lgw;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldvm;Ldvn;Lasc;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Ldvy;Lqw;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	m	(Lqw;Lrq;)V	a	lambda$addAdditionalSaveData$0
	f	Ljava/util/List;	b	childEntranceBoxes
c	dxe$e	net/minecraft/world/level/levelgen/structure/structures/MineshaftPieces$MineShaftStairs
	m	(ILdva;Lha;Ldxf$a;)V	<init>	<init>
		p	1		chainLength
		p	2		boundingBox
		p	3		orientation
		p	4		type
	m	(Lqw;)V	<init>	<init>
		p	1		nbt
	m	(Lcqp;Lcqn;Ldhg;Lasc;Ldva;Lcpc;Lgw;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldvm;Ldvn;Lasc;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Ldvn;Lasc;IIILha;)Ldva;	a	findStairs
		p	0		holder
		p	1		random
		p	2		x
		p	3		y
		p	4		z
		p	5		orientation
c	dxf	net/minecraft/world/level/levelgen/structure/structures/MineshaftStructure
	m	(Ldvi$c;Ldxf$a;)V	<init>	<init>
		p	1		config
		p	2		type
	m	(Ldvi$a;)Ljava/util/Optional;	a	findGenerationPoint
		p	1		context
	m	(Ldwa;Ldvi$a;)I	a	generatePiecesAndAdjust
		p	1		collector
		p	2		context
	m	(Ldxf;)Ldxf$a;	a	lambda$static$0
		p	0		mineshaftStructure
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$1
	m	()Ldvr;	e	type
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	Ldxf$a;	e	type
c	dxf$a	net/minecraft/world/level/levelgen/structure/structures/MineshaftStructure$Type
	m	(Ljava/lang/String;ILjava/lang/String;Lcsv;Lcsv;Lcsv;)V	<init>	<init>
		p	3		name
		p	4		log
		p	5		planks
		p	6		fence
	m	()Ljava/lang/String;	a	getName
	m	(I)Ldxf$a;	a	byId
		p	0		id
	m	()Ldfj;	b	getWoodState
	m	()Ljava/lang/String;	c	getSerializedName
	m	()Ldfj;	d	getPlanksState
	m	()Ldfj;	e	getFenceState
	m	()[Ldxf$a;	f	$values
	f	Ldxf$a;	a	NORMAL
	f	Ldxf$a;	b	MESA
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Ljava/util/function/IntFunction;	d	BY_ID
	f	Ljava/lang/String;	e	name
	f	Ldfj;	f	woodState
	f	Ldfj;	g	planksState
	f	Ldfj;	h	fenceState
	f	[Ldxf$a;	i	$VALUES
c	dxg	net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces
	m	(Ldxg$n;Ldvn;Lasc;IIILha;I)Ldxg$m;	a	findAndCreateBridgePieceFactory
		p	0		pieceData
		p	1		holder
		p	2		random
		p	3		x
		p	4		y
		p	5		z
		p	6		orientation
		p	7		chainLength
	f	I	a	MAGIC_START_Y
	f	I	b	MAX_DEPTH
	f	I	c	LOWEST_Y_POSITION
	f	[Ldxg$n;	d	BRIDGE_PIECE_WEIGHTS
	f	[Ldxg$n;	e	CASTLE_PIECE_WEIGHTS
c	dxg$1	net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	dxg$a	net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$BridgeCrossing
	m	(IILha;)V	<init>	<init>
		p	1		x
		p	2		z
		p	3		orientation
	m	(ILdva;Lha;)V	<init>	<init>
		p	1		chainLength
		p	2		boundingBox
		p	3		orientation
	m	(Ldvz;Lqw;)V	<init>	<init>
		p	1		type
		p	2		nbt
	m	(Lqw;)V	<init>	<init>
		p	1		nbt
	m	(Lcqp;Lcqn;Ldhg;Lasc;Ldva;Lcpc;Lgw;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldvm;Ldvn;Lasc;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Ldvn;IIILha;I)Ldxg$a;	a	createPiece
		p	0		holder
		p	1		x
		p	2		y
		p	3		z
		p	4		orientation
		p	5		chainLength
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
c	dxg$b	net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$BridgeEndFiller
	m	(ILasc;Ldva;Lha;)V	<init>	<init>
		p	1		chainLength
		p	2		random
		p	3		boundingBox
		p	4		orientation
	m	(Lqw;)V	<init>	<init>
		p	1		nbt
	m	(Lcqp;Lcqn;Ldhg;Lasc;Ldva;Lcpc;Lgw;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldvn;Lasc;IIILha;I)Ldxg$b;	a	createPiece
		p	0		holder
		p	1		random
		p	2		x
		p	3		y
		p	4		z
		p	5		orientation
		p	6		chainLength
	m	(Ldvy;Lqw;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
	f	I	d	selfSeed
c	dxg$c	net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$BridgeStraight
	m	(ILasc;Ldva;Lha;)V	<init>	<init>
		p	1		chainLength
		p	2		random
		p	3		boundingBox
		p	4		orientation
	m	(Lqw;)V	<init>	<init>
		p	1		nbt
	m	(Lcqp;Lcqn;Ldhg;Lasc;Ldva;Lcpc;Lgw;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldvm;Ldvn;Lasc;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Ldvn;Lasc;IIILha;I)Ldxg$c;	a	createPiece
		p	0		holder
		p	1		random
		p	2		x
		p	3		y
		p	4		z
		p	5		orientation
		p	6		chainLength
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
c	dxg$d	net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleCorridorStairsPiece
	m	(ILdva;Lha;)V	<init>	<init>
		p	1		chainLength
		p	2		boundingBox
		p	3		orientation
	m	(Lqw;)V	<init>	<init>
		p	1		nbt
	m	(Lcqp;Lcqn;Ldhg;Lasc;Ldva;Lcpc;Lgw;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldvm;Ldvn;Lasc;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Ldvn;IIILha;I)Ldxg$d;	a	createPiece
		p	0		holder
		p	1		x
		p	2		y
		p	3		z
		p	4		orientation
		p	5		chainLength
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
c	dxg$e	net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleCorridorTBalconyPiece
	m	(ILdva;Lha;)V	<init>	<init>
		p	1		chainLength
		p	2		boundingBox
		p	3		orientation
	m	(Lqw;)V	<init>	<init>
		p	1		nbt
	m	(Lcqp;Lcqn;Ldhg;Lasc;Ldva;Lcpc;Lgw;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldvm;Ldvn;Lasc;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Ldvn;IIILha;I)Ldxg$e;	a	createPiece
		p	0		holder
		p	1		x
		p	2		y
		p	3		z
		p	4		orientation
		p	5		chainLength
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
c	dxg$f	net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleEntrance
	m	(ILasc;Ldva;Lha;)V	<init>	<init>
		p	1		chainLength
		p	2		random
		p	3		boundingBox
		p	4		orientation
	m	(Lqw;)V	<init>	<init>
		p	1		nbt
	m	(Lcqp;Lcqn;Ldhg;Lasc;Ldva;Lcpc;Lgw;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldvm;Ldvn;Lasc;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Ldvn;Lasc;IIILha;I)Ldxg$f;	a	createPiece
		p	0		holder
		p	1		random
		p	2		x
		p	3		y
		p	4		z
		p	5		orientation
		p	6		chainLength
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
c	dxg$g	net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleSmallCorridorCrossingPiece
	m	(ILdva;Lha;)V	<init>	<init>
		p	1		chainLength
		p	2		boundingBox
		p	3		orientation
	m	(Lqw;)V	<init>	<init>
		p	1		nbt
	m	(Lcqp;Lcqn;Ldhg;Lasc;Ldva;Lcpc;Lgw;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldvm;Ldvn;Lasc;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Ldvn;IIILha;I)Ldxg$g;	a	createPiece
		p	0		holder
		p	1		x
		p	2		y
		p	3		z
		p	4		orientation
		p	5		chainLength
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
c	dxg$h	net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleSmallCorridorLeftTurnPiece
	m	(ILasc;Ldva;Lha;)V	<init>	<init>
		p	1		chainLength
		p	2		random
		p	3		boundingBox
		p	4		orientation
	m	(Lqw;)V	<init>	<init>
		p	1		nbt
	m	(Lcqp;Lcqn;Ldhg;Lasc;Ldva;Lcpc;Lgw;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldvm;Ldvn;Lasc;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Ldvn;Lasc;IIILha;I)Ldxg$h;	a	createPiece
		p	0		holder
		p	1		random
		p	2		x
		p	3		y
		p	4		z
		p	5		orientation
		p	6		chainLength
	m	(Ldvy;Lqw;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
	f	Z	d	isNeedingChest
c	dxg$i	net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleSmallCorridorPiece
	m	(ILdva;Lha;)V	<init>	<init>
		p	1		chainLength
		p	2		boundingBox
		p	3		orientation
	m	(Lqw;)V	<init>	<init>
		p	1		nbt
	m	(Lcqp;Lcqn;Ldhg;Lasc;Ldva;Lcpc;Lgw;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldvm;Ldvn;Lasc;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Ldvn;IIILha;I)Ldxg$i;	a	createPiece
		p	0		holder
		p	1		x
		p	2		y
		p	3		z
		p	4		orientation
		p	5		chainLength
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
c	dxg$j	net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleSmallCorridorRightTurnPiece
	m	(ILasc;Ldva;Lha;)V	<init>	<init>
		p	1		chainLength
		p	2		random
		p	3		boundingBox
		p	4		orientation
	m	(Lqw;)V	<init>	<init>
		p	1		nbt
	m	(Lcqp;Lcqn;Ldhg;Lasc;Ldva;Lcpc;Lgw;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldvm;Ldvn;Lasc;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Ldvn;Lasc;IIILha;I)Ldxg$j;	a	createPiece
		p	0		holder
		p	1		random
		p	2		x
		p	3		y
		p	4		z
		p	5		orientation
		p	6		chainLength
	m	(Ldvy;Lqw;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
	f	Z	d	isNeedingChest
c	dxg$k	net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleStalkRoom
	m	(ILdva;Lha;)V	<init>	<init>
		p	1		chainLength
		p	2		boundingBox
		p	3		orientation
	m	(Lqw;)V	<init>	<init>
		p	1		nbt
	m	(Lcqp;Lcqn;Ldhg;Lasc;Ldva;Lcpc;Lgw;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldvm;Ldvn;Lasc;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Ldvn;IIILha;I)Ldxg$k;	a	createPiece
		p	0		holder
		p	1		x
		p	2		y
		p	3		z
		p	4		orientation
		p	5		chainlength
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
c	dxg$l	net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$MonsterThrone
	m	(ILdva;Lha;)V	<init>	<init>
		p	1		chainLength
		p	2		boundingBox
		p	3		orientation
	m	(Lqw;)V	<init>	<init>
		p	1		nbt
	m	(Lcqp;Lcqn;Ldhg;Lasc;Ldva;Lcpc;Lgw;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldvn;IIIILha;)Ldxg$l;	a	createPiece
		p	0		holder
		p	1		x
		p	2		y
		p	3		z
		p	4		chainLength
		p	5		orientation
	m	(Ldvy;Lqw;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
	f	Z	d	hasPlacedSpawner
c	dxg$m	net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$NetherBridgePiece
	m	(Ldvz;ILdva;)V	<init>	<init>
		p	1		type
		p	2		length
		p	3		boundingBox
	m	(Ldvz;Lqw;)V	<init>	<init>
		p	1		type
		p	2		nbt
	m	(Ldva;)Z	a	isOkBox
		p	0		boundingBox
	m	(Ldvy;Lqw;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	m	(Ldxg$q;Ldvn;Lasc;IIILha;IZ)Ldvm;	a	generateAndAddPiece
		p	1		start
		p	2		holder
		p	3		random
		p	4		x
		p	5		y
		p	6		z
		p	7		orientation
		p	8		chainLength
		p	9		inside
	m	(Ldxg$q;Ldvn;Lasc;IIZ)Ldvm;	a	generateChildForward
		p	1		start
		p	2		holder
		p	3		random
		p	4		leftRightOffset
		p	5		heightOffset
		p	6		inside
	m	(Ldxg$q;Ljava/util/List;Ldvn;Lasc;IIILha;I)Ldxg$m;	a	generatePiece
		p	1		start
		p	2		possiblePieces
		p	3		holder
		p	4		random
		p	5		x
		p	6		y
		p	7		z
		p	8		orientation
		p	9		chainLength
	m	(Ljava/util/List;)I	a	updatePieceWeight
		p	1		possiblePieces
	m	(Ldxg$q;Ldvn;Lasc;IIZ)Ldvm;	b	generateChildLeft
		p	1		start
		p	2		holder
		p	3		random
		p	4		heightOffset
		p	5		leftRightOffset
		p	6		inside
	m	(Ldxg$q;Ldvn;Lasc;IIZ)Ldvm;	c	generateChildRight
		p	1		start
		p	2		holder
		p	3		random
		p	4		heightOffset
		p	5		leftRightOffset
		p	6		inside
c	dxg$n	net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$PieceWeight
	m	(Ljava/lang/Class;II)V	<init>	<init>
		p	1		pieceType
		p	2		weight
		p	3		limit
	m	(Ljava/lang/Class;IIZ)V	<init>	<init>
		p	1		pieceType
		p	2		weight
		p	3		limit
		p	4		repeatable
	m	()Z	a	isValid
	m	(I)Z	a	doPlace
		p	1		chainLength
	f	Ljava/lang/Class;	a	pieceClass
	f	I	b	weight
	f	I	c	placeCount
	f	I	d	maxPlaceCount
	f	Z	e	allowInRow
c	dxg$o	net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$RoomCrossing
	m	(ILdva;Lha;)V	<init>	<init>
		p	1		chainLength
		p	2		boundingBox
		p	3		orientation
	m	(Lqw;)V	<init>	<init>
		p	1		nbt
	m	(Lcqp;Lcqn;Ldhg;Lasc;Ldva;Lcpc;Lgw;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldvm;Ldvn;Lasc;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Ldvn;IIILha;I)Ldxg$o;	a	createPiece
		p	0		holder
		p	1		x
		p	2		y
		p	3		z
		p	4		orientation
		p	5		chainLength
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
c	dxg$p	net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$StairsRoom
	m	(ILdva;Lha;)V	<init>	<init>
		p	1		chainLength
		p	2		boundingBox
		p	3		orientation
	m	(Lqw;)V	<init>	<init>
		p	1		nbt
	m	(Lcqp;Lcqn;Ldhg;Lasc;Ldva;Lcpc;Lgw;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldvm;Ldvn;Lasc;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Ldvn;IIIILha;)Ldxg$p;	a	createPiece
		p	0		holder
		p	1		x
		p	2		y
		p	3		z
		p	4		chainlength
		p	5		orientation
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
c	dxg$q	net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$StartPiece
	m	(Lasc;II)V	<init>	<init>
		p	1		random
		p	2		x
		p	3		z
	m	(Lqw;)V	<init>	<init>
		p	1		nbt
	f	Ldxg$n;	a	previousPiece
	f	Ljava/util/List;	b	availableBridgePieces
	f	Ljava/util/List;	c	availableCastlePieces
	f	Ljava/util/List;	d	pendingChildren
c	dxh	net/minecraft/world/level/levelgen/structure/structures/NetherFortressStructure
	m	(Ldvi$c;)V	<init>	<init>
		p	1		config
	m	(Ldvi$a;)Ljava/util/Optional;	a	findGenerationPoint
		p	1		context
	m	(Ldvi$a;Ldwa;)V	a	lambda$findGenerationPoint$0
		p	1		collector
	m	(Ldwa;Ldvi$a;)V	a	generatePieces
		p	0		collector
		p	1		context
	m	()Ldvr;	e	type
	f	Lbfm;	d	FORTRESS_ENEMIES
	f	Lcom/mojang/serialization/Codec;	e	CODEC
c	dxi	net/minecraft/world/level/levelgen/structure/structures/NetherFossilPieces
	m	(Ldzc;Ldvn;Lasc;Lgw;)V	a	addPieces
		p	0		manager
		p	1		holder
		p	2		random
		p	3		pos
	f	[Laew;	a	FOSSILS
c	dxi$a	net/minecraft/world/level/levelgen/structure/structures/NetherFossilPieces$NetherFossilPiece
	m	(Ldzc;Laew;Lgw;Lczh;)V	<init>	<init>
		p	1		manager
		p	2		template
		p	3		pos
		p	4		rotation
	m	(Ldzc;Lqw;)V	<init>	<init>
		p	1		manager
		p	2		nbt
	m	(Lcqp;Lcqn;Ldhg;Lasc;Ldva;Lcpc;Lgw;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Lczh;)Ldyx;	a	makeSettings
		p	0		rotation
	m	(Ldvy;Lqw;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	m	(Ljava/lang/String;Lgw;Lcqk;Lasc;Ldva;)V	a	handleDataMarker
		p	1		metadata
		p	2		pos
		p	3		world
		p	4		random
		p	5		boundingBox
	m	(Lqw;Laew;)Ldyx;	a	lambda$new$0
		p	1		id
c	dxj	net/minecraft/world/level/levelgen/structure/structures/NetherFossilStructure
	m	(Ldvi$c;Ldtp;)V	<init>	<init>
		p	1		config
		p	2		height
	m	(Ldvi$a;)Ljava/util/Optional;	a	findGenerationPoint
		p	1		context
	m	(Ldvi$a;Ldlr;Lgw;Ldwa;)V	a	lambda$findGenerationPoint$2
		p	0		collector
		p	3		holder
	m	(Ldxj;)Ldtp;	a	lambda$static$0
		p	0		structure
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$1
	m	()Ldvr;	e	type
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	Ldtp;	e	height
c	dxk	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces
c	dxk$1	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	dxk$a	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$FitDoubleXRoom
	m	(Ldxk$v;)Z	a	fits
		p	1		setting
	m	(Lha;Ldxk$v;Lasc;)Ldxk$r;	a	create
		p	1		direction
		p	2		setting
		p	3		random
c	dxk$b	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$FitDoubleXYRoom
	m	(Ldxk$v;)Z	a	fits
		p	1		setting
	m	(Lha;Ldxk$v;Lasc;)Ldxk$r;	a	create
		p	1		direction
		p	2		setting
		p	3		random
c	dxk$c	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$FitDoubleYRoom
	m	(Ldxk$v;)Z	a	fits
		p	1		setting
	m	(Lha;Ldxk$v;Lasc;)Ldxk$r;	a	create
		p	1		direction
		p	2		setting
		p	3		random
c	dxk$d	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$FitDoubleYZRoom
	m	(Ldxk$v;)Z	a	fits
		p	1		setting
	m	(Lha;Ldxk$v;Lasc;)Ldxk$r;	a	create
		p	1		direction
		p	2		setting
		p	3		random
c	dxk$e	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$FitDoubleZRoom
	m	(Ldxk$v;)Z	a	fits
		p	1		setting
	m	(Lha;Ldxk$v;Lasc;)Ldxk$r;	a	create
		p	1		direction
		p	2		setting
		p	3		random
c	dxk$f	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$FitSimpleRoom
	m	(Ldxk$v;)Z	a	fits
		p	1		setting
	m	(Lha;Ldxk$v;Lasc;)Ldxk$r;	a	create
		p	1		direction
		p	2		setting
		p	3		random
c	dxk$g	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$FitSimpleTopRoom
	m	(Ldxk$v;)Z	a	fits
		p	1		setting
	m	(Lha;Ldxk$v;Lasc;)Ldxk$r;	a	create
		p	1		direction
		p	2		setting
		p	3		random
c	dxk$h	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$MonumentBuilding
	m	(Lasc;IILha;)V	<init>	<init>
		p	1		random
		p	2		x
		p	3		z
		p	4		orientation
	m	(Lqw;)V	<init>	<init>
		p	1		nbt
	m	(Lcqp;Lasc;Ldva;)V	a	generateEntranceArchs
		p	1		world
		p	2		random
		p	3		box
	m	(Lcqp;Lcqn;Ldhg;Lasc;Ldva;Lcpc;Lgw;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(ZILcqp;Lasc;Ldva;)V	a	generateWing
		p	3		world
		p	4		random
		p	5		box
	m	(Lasc;)Ljava/util/List;	b	generateRoomGraph
		p	1		random
	m	(Lcqp;Lasc;Ldva;)V	b	generateEntranceWall
		p	1		world
		p	2		random
		p	3		box
	m	(Lcqp;Lasc;Ldva;)V	c	generateRoofPiece
		p	1		world
		p	2		random
		p	3		box
	m	(Lcqp;Lasc;Ldva;)V	d	generateLowerWall
		p	1		world
		p	2		random
		p	3		box
	m	(Lcqp;Lasc;Ldva;)V	e	generateMiddleWall
		p	1		world
		p	2		random
		p	3		box
	m	(Lcqp;Lasc;Ldva;)V	f	generateUpperWall
		p	1		world
		p	2		random
		p	3		box
	f	I	C	WIDTH
	f	I	D	HEIGHT
	f	I	E	DEPTH
	f	I	F	TOP_POSITION
	f	Ldxk$v;	G	sourceRoom
	f	Ldxk$v;	H	coreRoom
	f	Ljava/util/List;	I	childPieces
	f	I	a	BIOME_RANGE_CHECK
c	dxk$i	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$MonumentRoomFitter
	m	(Ldxk$v;)Z	a	fits
		p	1		setting
	m	(Lha;Ldxk$v;Lasc;)Ldxk$r;	a	create
		p	1		direction
		p	2		setting
		p	3		random
c	dxk$j	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentCoreRoom
	m	(Lha;Ldxk$v;)V	<init>	<init>
		p	1		orientation
		p	2		setting
	m	(Lqw;)V	<init>	<init>
		p	1		nbt
	m	(Lcqp;Lcqn;Ldhg;Lasc;Ldva;Lcpc;Lgw;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
c	dxk$k	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentDoubleXRoom
	m	(Lha;Ldxk$v;)V	<init>	<init>
		p	1		orientation
		p	2		setting
	m	(Lqw;)V	<init>	<init>
		p	1		nbt
	m	(Lcqp;Lcqn;Ldhg;Lasc;Ldva;Lcpc;Lgw;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
c	dxk$l	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentDoubleXYRoom
	m	(Lha;Ldxk$v;)V	<init>	<init>
		p	1		orientation
		p	2		setting
	m	(Lqw;)V	<init>	<init>
		p	1		nbt
	m	(Lcqp;Lcqn;Ldhg;Lasc;Ldva;Lcpc;Lgw;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
c	dxk$m	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentDoubleYRoom
	m	(Lha;Ldxk$v;)V	<init>	<init>
		p	1		orientation
		p	2		setting
	m	(Lqw;)V	<init>	<init>
		p	1		nbt
	m	(Lcqp;Lcqn;Ldhg;Lasc;Ldva;Lcpc;Lgw;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
c	dxk$n	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentDoubleYZRoom
	m	(Lha;Ldxk$v;)V	<init>	<init>
		p	1		orientation
		p	2		setting
	m	(Lqw;)V	<init>	<init>
		p	1		nbt
	m	(Lcqp;Lcqn;Ldhg;Lasc;Ldva;Lcpc;Lgw;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
c	dxk$o	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentDoubleZRoom
	m	(Lha;Ldxk$v;)V	<init>	<init>
		p	1		orientation
		p	2		setting
	m	(Lqw;)V	<init>	<init>
		p	1		nbt
	m	(Lcqp;Lcqn;Ldhg;Lasc;Ldva;Lcpc;Lgw;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
c	dxk$p	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentEntryRoom
	m	(Lha;Ldxk$v;)V	<init>	<init>
		p	1		orientation
		p	2		setting
	m	(Lqw;)V	<init>	<init>
		p	1		nbt
	m	(Lcqp;Lcqn;Ldhg;Lasc;Ldva;Lcpc;Lgw;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
c	dxk$q	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentPenthouse
	m	(Lha;Ldva;)V	<init>	<init>
		p	1		orientation
		p	2		box
	m	(Lqw;)V	<init>	<init>
		p	1		nbt
	m	(Lcqp;Lcqn;Ldhg;Lasc;Ldva;Lcpc;Lgw;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
c	dxk$r	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentPiece
	m	(Ldvz;ILha;Ldxk$v;III)V	<init>	<init>
		p	1		type
		p	2		length
		p	3		orientation
		p	4		setting
	m	(Ldvz;Lha;ILdva;)V	<init>	<init>
		p	1		type
		p	2		orientation
		p	3		length
		p	4		box
	m	(Ldvz;Lqw;)V	<init>	<init>
		p	1		type
		p	2		nbt
	m	(Lcqp;Ldva;III)V	a	spawnElder
		p	1		world
		p	2		box
		p	3		x
		p	4		y
		p	5		z
	m	(Lcqp;Ldva;IIIIIILdfj;)V	a	generateBoxOnFillOnly
		p	1		world
		p	2		box
		p	3		x
		p	4		y
		p	5		z
		p	6		width
		p	7		height
		p	8		depth
		p	9		state
	m	(Lcqp;Ldva;IIZ)V	a	generateDefaultFloor
		p	1		world
		p	2		box
		p	3		x
		p	4		z
	m	(Ldva;IIII)Z	a	chunkIntersects
		p	1		box
		p	2		x1
		p	3		z1
		p	4		x2
		p	5		z2
	m	(Ldvy;Lqw;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	m	(Lha;Ldxk$v;III)Ldva;	a	makeBoundingBox
		p	0		orientation
		p	1		setting
	m	(Lcqp;Ldva;IIIIII)V	b	generateWaterBox
		p	1		world
		p	2		box
		p	3		x
		p	4		y
		p	5		z
		p	6		width
		p	7		height
		p	8		depth
	m	(III)I	c	getRoomIndex
		p	0		x
		p	1		y
		p	2		z
	f	I	A	PENTHOUSE_INDEX
	f	Ldxk$v;	B	roomDefinition
	f	Ldfj;	b	BASE_GRAY
	f	Ldfj;	c	BASE_LIGHT
	f	Ldfj;	d	BASE_BLACK
	f	Ldfj;	h	DOT_DECO_DATA
	f	Ldfj;	i	LAMP_BLOCK
	f	Z	j	DO_FILL
	f	Ldfj;	k	FILL_BLOCK
	f	Ljava/util/Set;	l	FILL_KEEP
	f	I	m	GRIDROOM_WIDTH
	f	I	n	GRIDROOM_DEPTH
	f	I	o	GRIDROOM_HEIGHT
	f	I	p	GRID_WIDTH
	f	I	q	GRID_DEPTH
	f	I	r	GRID_HEIGHT
	f	I	s	GRID_FLOOR_COUNT
	f	I	t	GRID_SIZE
	f	I	u	GRIDROOM_SOURCE_INDEX
	f	I	v	GRIDROOM_TOP_CONNECT_INDEX
	f	I	w	GRIDROOM_LEFTWING_CONNECT_INDEX
	f	I	x	GRIDROOM_RIGHTWING_CONNECT_INDEX
	f	I	y	LEFTWING_INDEX
	f	I	z	RIGHTWING_INDEX
c	dxk$s	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentSimpleRoom
	m	(Lha;Ldxk$v;Lasc;)V	<init>	<init>
		p	1		orientation
		p	2		setting
		p	3		random
	m	(Lqw;)V	<init>	<init>
		p	1		nbt
	m	(Lcqp;Lcqn;Ldhg;Lasc;Ldva;Lcpc;Lgw;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	f	I	a	mainDesign
c	dxk$t	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentSimpleTopRoom
	m	(Lha;Ldxk$v;)V	<init>	<init>
		p	1		orientation
		p	2		setting
	m	(Lqw;)V	<init>	<init>
		p	1		nbt
	m	(Lcqp;Lcqn;Ldhg;Lasc;Ldva;Lcpc;Lgw;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
c	dxk$u	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentWingRoom
	m	(Lha;Ldva;I)V	<init>	<init>
		p	1		orientation
		p	2		box
	m	(Lqw;)V	<init>	<init>
		p	1		nbt
	m	(Lcqp;Lcqn;Ldhg;Lasc;Ldva;Lcpc;Lgw;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	f	I	a	mainDesign
c	dxk$v	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$RoomDefinition
	m	(I)V	<init>	<init>
		p	1		index
	m	()V	a	updateOpenings
	m	(I)Z	a	findSource
	m	(Lha;Ldxk$v;)V	a	setConnection
		p	1		orientation
		p	2		setting
	m	()Z	b	isSpecial
	m	()I	c	countOpenings
	f	I	a	index
	f	[Ldxk$v;	b	connections
	f	[Z	c	hasOpening
	f	Z	d	claimed
	f	Z	e	isSource
	f	I	f	scanIndex
c	dxl	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentStructure
	m	(Ldvi$c;)V	<init>	<init>
		p	1		config
	m	(Lcpc;JLdvx;)Ldvx;	a	regeneratePiecesAfterLoad
		p	0		pos
		p	1		worldSeed
		p	3		pieces
	m	(Lcpc;Ldlr;)Ldvm;	a	createTopPiece
		p	0		pos
		p	1		random
	m	(Ldvi$a;)Ljava/util/Optional;	a	findGenerationPoint
		p	1		context
	m	(Ldvi$a;Ldwa;)V	a	lambda$findGenerationPoint$0
		p	1		collector
	m	(Ldwa;Ldvi$a;)V	a	generatePieces
		p	0		collector
		p	1		context
	m	()Ldvr;	e	type
	f	Lcom/mojang/serialization/Codec;	d	CODEC
c	dxm	net/minecraft/world/level/levelgen/structure/structures/OceanRuinPieces
	m	(Lasc;)Laew;	a	getSmallWarmRuin
		p	0		random
	m	(Lasc;Lgw;)Ljava/util/List;	a	allPositions
		p	0		random
		p	1		pos
	m	(Lcsv;Lcsv;Laew;)Ldyy;	a	archyRuleProcessor
		p	0		baseBlock
		p	1		suspiciousBlock
		p	2		lootTableId
	m	(Ldzc;Lasc;Lczh;Lgw;Ldxn;Ldvn;)V	a	addClusterRuins
		p	0		manager
		p	1		random
		p	2		rotation
		p	3		pos
		p	4		structure
		p	5		pieces
	m	(Ldzc;Lgw;Lczh;Ldvn;Lasc;Ldxn;)V	a	addPieces
		p	0		manager
		p	1		pos
		p	2		rotation
		p	3		holder
		p	4		random
		p	5		structure
	m	(Ldzc;Lgw;Lczh;Ldvn;Lasc;Ldxn;ZF)V	a	addPiece
		p	0		manager
		p	1		pos
		p	2		rotation
		p	3		holder
		p	4		random
		p	5		structure
		p	6		large
		p	7		integrity
	m	(Lasc;)Laew;	b	getBigWarmRuin
		p	0		random
	f	Ldyy;	a	WARM_SUSPICIOUS_BLOCK_PROCESSOR
	f	Ldyy;	b	COLD_SUSPICIOUS_BLOCK_PROCESSOR
	f	[Laew;	c	WARM_RUINS
	f	[Laew;	d	RUINS_BRICK
	f	[Laew;	e	RUINS_CRACKED
	f	[Laew;	f	RUINS_MOSSY
	f	[Laew;	g	BIG_RUINS_BRICK
	f	[Laew;	h	BIG_RUINS_MOSSY
	f	[Laew;	i	BIG_RUINS_CRACKED
	f	[Laew;	j	BIG_WARM_RUINS
c	dxm$1	net/minecraft/world/level/levelgen/structure/structures/OceanRuinPieces$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$levelgen$structure$structures$OceanRuinStructure$Type
c	dxm$a	net/minecraft/world/level/levelgen/structure/structures/OceanRuinPieces$OceanRuinPiece
	m	(Ldzc;Laew;Lgw;Lczh;FLdxn$a;Z)V	<init>	<init>
		p	1		structureTemplateManager
		p	2		template
		p	3		pos
		p	4		rotation
		p	5		integrity
		p	6		biomeType
		p	7		large
	m	(Ldzc;Lqw;Lczh;FLdxn$a;Z)V	<init>	<init>
		p	1		holder
		p	2		nbt
		p	3		rotation
		p	4		integrity
		p	5		biomeType
		p	6		large
	m	(Lcqp;Lcqn;Ldhg;Lasc;Ldva;Lcpc;Lgw;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Lczh;FLdxn$a;)Ldyx;	a	makeSettings
		p	0		rotation
		p	1		integrity
		p	2		temperature
	m	(Lczh;FLdxn$a;Laew;)Ldyx;	a	lambda$new$0
	m	(Ldvy;Lqw;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	m	(Ldzc;Lqw;)Ldxm$a;	a	create
		p	0		structureTemplateManager
		p	1		nbt
	m	(Lgw;Lcpb;Lgw;)I	a	getHeight
		p	1		start
		p	2		world
		p	3		end
	m	(Ljava/lang/String;Lgw;Lcqk;Lasc;Ldva;)V	a	handleDataMarker
		p	1		metadata
		p	2		pos
		p	3		world
		p	4		random
		p	5		boundingBox
	f	Ldxn$a;	h	biomeType
	f	F	i	integrity
	f	Z	j	isLarge
c	dxn	net/minecraft/world/level/levelgen/structure/structures/OceanRuinStructure
	m	(Ldvi$c;Ldxn$a;FF)V	<init>	<init>
		p	1		config
		p	2		biomeTemperature
		p	3		largeProbability
		p	4		clusterProbability
	m	(Ldvi$a;)Ljava/util/Optional;	a	findGenerationPoint
		p	1		context
	m	(Ldvi$a;Ldwa;)V	a	lambda$findGenerationPoint$4
		p	2		collector
	m	(Ldwa;Ldvi$a;)V	a	generatePieces
		p	1		collector
		p	2		context
	m	(Ldxn;)Ljava/lang/Float;	a	lambda$static$2
		p	0		structure
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$3
	m	(Ldxn;)Ljava/lang/Float;	b	lambda$static$1
		p	0		structure
	m	(Ldxn;)Ldxn$a;	c	lambda$static$0
		p	0		structure
	m	()Ldvr;	e	type
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	Ldxn$a;	e	biomeTemp
	f	F	f	largeProbability
	f	F	g	clusterProbability
c	dxn$a	net/minecraft/world/level/levelgen/structure/structures/OceanRuinStructure$Type
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()Ljava/lang/String;	a	getName
	m	()[Ldxn$a;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Ldxn$a;	a	WARM
	f	Ldxn$a;	b	COLD
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Ljava/lang/String;	d	name
	f	[Ldxn$a;	e	$VALUES
c	dxo	net/minecraft/world/level/levelgen/structure/structures/RuinedPortalPiece
	m	(Ldzc;Lgw;Ldxo$b;Ldxo$a;Laew;Ldzb;Lczh;Lcxq;Lgw;)V	<init>	<init>
		p	1		manager
		p	2		pos
		p	3		verticalPlacement
		p	4		properties
		p	5		id
		p	6		template
		p	7		rotation
		p	8		mirror
	m	(Ldzc;Lqw;)V	<init>	<init>
		p	1		manager
		p	2		nbt
	m	(Lasc;Lcpw;)V	a	addNetherrackDripColumnsBelowPortal
		p	1		random
		p	2		world
	m	(Lasc;Lcpw;Lgw;)V	a	maybeAddVines
		p	1		random
		p	2		world
		p	3		pos
	m	(Lasc;Lcqp;Lgw;)V	a	lambda$postProcess$2
		p	3		pos
	m	(Lcpw;IILdxo$b;)I	a	getSurfaceY
		p	0		world
		p	1		x
		p	2		y
		p	3		verticalPlacement
	m	(Lcpw;Lgw;)Z	a	canBlockBeReplacedByNetherrackOrMagma
		p	1		world
		p	2		pos
	m	(Lcqp;Lcqn;Ldhg;Lasc;Ldva;Lcpc;Lgw;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Lcsv;FLcsv;)Ldyq;	a	getBlockReplaceRule
		p	0		old
		p	1		chance
		p	2		updated
	m	(Lcsv;Lcsv;)Ldyq;	a	getBlockReplaceRule
		p	0		old
		p	1		updated
	m	(Lcxq;Lczh;Ldxo$b;Lgw;Ldxo$a;)Ldyx;	a	makeSettings
		p	0		mirror
		p	1		rotation
		p	2		verticalPlacement
		p	3		pos
		p	4		properties
	m	(Ldvy;Lqw;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	m	(Ldxo$b;)Ldks$a;	a	getHeightMapType
		p	0		verticalPlacement
	m	(Ldxo$b;Ldxo$a;)Ldyq;	a	getLavaProcessorRule
		p	0		verticalPlacement
		p	1		properties
	m	(Ldzc;Lqw;Laew;)Ldyx;	a	makeSettings
		p	0		manager
		p	1		nbt
		p	2		id
	m	(Ljava/lang/String;Lgw;Lcqk;Lasc;Ldva;)V	a	handleDataMarker
		p	1		metadata
		p	2		pos
		p	3		world
		p	4		random
		p	5		boundingBox
	m	(Lqw;Lrq;)V	a	lambda$addAdditionalSaveData$1
	m	(Lasc;Lcpw;)V	b	spreadNetherrack
		p	1		random
		p	2		world
	m	(Lasc;Lcpw;Lgw;)V	b	maybeAddLeavesAbove
		p	1		random
		p	2		world
		p	3		pos
	m	(Ldzc;Lqw;Laew;)Ldyx;	b	lambda$new$0
		p	2		id
	m	(Lasc;Lcpw;Lgw;)V	c	addNetherrackDripColumn
		p	1		random
		p	2		world
		p	3		pos
	m	(Lasc;Lcpw;Lgw;)V	d	placeNetherrackOrMagma
		p	1		random
		p	2		world
		p	3		pos
	f	Lorg/slf4j/Logger;	h	LOGGER
	f	F	i	PROBABILITY_OF_GOLD_GONE
	f	F	j	PROBABILITY_OF_MAGMA_INSTEAD_OF_NETHERRACK
	f	F	k	PROBABILITY_OF_MAGMA_INSTEAD_OF_LAVA
	f	Ldxo$b;	l	verticalPlacement
	f	Ldxo$a;	m	properties
c	dxo$a	net/minecraft/world/level/levelgen/structure/structures/RuinedPortalPiece$Properties
	m	(ZFZZZZ)V	<init>	<init>
		p	1		cold
		p	2		mossiness
		p	3		airPocket
		p	4		overgrown
		p	5		vines
		p	6		replaceWithBlackstone
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$6
		p	0		instance
	m	(Ldxo$a;)Ljava/lang/Boolean;	a	lambda$static$5
	m	(Ldxo$a;)Ljava/lang/Boolean;	b	lambda$static$4
	m	(Ldxo$a;)Ljava/lang/Boolean;	c	lambda$static$3
	m	(Ldxo$a;)Ljava/lang/Boolean;	d	lambda$static$2
	m	(Ldxo$a;)Ljava/lang/Float;	e	lambda$static$1
	m	(Ldxo$a;)Ljava/lang/Boolean;	f	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Z	b	cold
	f	F	c	mossiness
	f	Z	d	airPocket
	f	Z	e	overgrown
	f	Z	f	vines
	f	Z	g	replaceWithBlackstone
c	dxo$b	net/minecraft/world/level/levelgen/structure/structures/RuinedPortalPiece$VerticalPlacement
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		id
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/lang/String;)Ldxo$b;	a	byName
		p	0		id
	m	()[Ldxo$b;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Ldxo$b;	a	ON_LAND_SURFACE
	f	Ldxo$b;	b	PARTLY_BURIED
	f	Ldxo$b;	c	ON_OCEAN_FLOOR
	f	Ldxo$b;	d	IN_MOUNTAIN
	f	Ldxo$b;	e	UNDERGROUND
	f	Ldxo$b;	f	IN_NETHER
	f	Lasp$a;	g	CODEC
	f	Ljava/lang/String;	h	name
	f	[Ldxo$b;	i	$VALUES
c	dxp	net/minecraft/world/level/levelgen/structure/structures/RuinedPortalStructure
	m	(Ldvi$c;Ldxp$a;)V	<init>	<init>
		p	1		config
		p	2		setup
	m	(Ldvi$c;Ljava/util/List;)V	<init>	<init>
		p	1		config
		p	2		setups
	m	(Lasc;II)I	a	getRandomWithinInterval
		p	0		random
		p	1		min
		p	2		max
	m	(Lasc;Ldhg;Ldxo$b;ZIILdva;Lcpx;Ldlg;)I	a	findSuitableY
		p	0		random
		p	1		chunkGenerator
		p	2		verticalPlacement
		p	3		airPocket
		p	4		height
		p	5		blockCountY
		p	6		box
		p	7		world
		p	8		noiseConfig
	m	(Ldhg;Lcpx;Ldlg;Lgw;)Lcqh;	a	lambda$findSuitableY$3
		p	3		pos
	m	(Ldlr;F)Z	a	sample
		p	0		random
		p	1		probability
	m	(Ldvi$a;)Ljava/util/Optional;	a	findGenerationPoint
		p	1		context
	m	(Ldxp$a;Ldxo$a;Lgw;Ldvi$a;Ldlg;Laew;Ldzb;Lczh;Lcxq;Lgw;Ldwa;)V	a	lambda$findGenerationPoint$2
		p	10		collector
	m	(Ldxp;)Ljava/util/List;	a	lambda$static$0
		p	0		structure
	m	(Lgw;Lhe;)Z	a	isCold
		p	0		pos
		p	1		biome
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$1
	m	()Ldvr;	e	type
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	[Ljava/lang/String;	e	STRUCTURE_LOCATION_PORTALS
	f	[Ljava/lang/String;	f	STRUCTURE_LOCATION_GIANT_PORTALS
	f	F	g	PROBABILITY_OF_GIANT_PORTAL
	f	I	h	MIN_Y_INDEX
	f	Ljava/util/List;	i	setups
c	dxp$a	net/minecraft/world/level/levelgen/structure/structures/RuinedPortalStructure$Setup
	m	()Ldxo$b;	a	placement
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()F	b	airPocketProbability
	m	()F	c	mossiness
	m	()Z	d	overgrown
	m	()Z	e	vines
	m	()Z	f	canBeCold
	m	()Z	g	replaceWithBlackstone
	m	()F	h	weight
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldxo$b;	b	placement
	f	F	c	airPocketProbability
	f	F	d	mossiness
	f	Z	e	overgrown
	f	Z	f	vines
	f	Z	g	canBeCold
	f	Z	h	replaceWithBlackstone
	f	F	i	weight
c	dxq	net/minecraft/world/level/levelgen/structure/structures/ShipwreckPieces
	m	(Ldzc;Lgw;Lczh;Ldvn;Lasc;Z)V	a	addPieces
		p	0		structureTemplateManager
		p	1		pos
		p	2		rotation
		p	3		holder
		p	4		random
		p	5		beached
	f	Lgw;	a	PIVOT
	f	[Laew;	b	STRUCTURE_LOCATION_BEACHED
	f	[Laew;	c	STRUCTURE_LOCATION_OCEAN
	f	Ljava/util/Map;	d	MARKERS_TO_LOOT
c	dxq$a	net/minecraft/world/level/levelgen/structure/structures/ShipwreckPieces$ShipwreckPiece
	m	(Ldzc;Laew;Lgw;Lczh;Z)V	<init>	<init>
		p	1		manager
		p	2		identifier
		p	3		pos
		p	4		rotation
		p	5		grounded
	m	(Ldzc;Lqw;)V	<init>	<init>
		p	1		manager
		p	2		nbt
	m	(Lcqp;Lcqn;Ldhg;Lasc;Ldva;Lcpc;Lgw;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Lczh;)Ldyx;	a	makeSettings
		p	0		rotation
	m	(Ldvy;Lqw;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	m	(Ljava/lang/String;Lgw;Lcqk;Lasc;Ldva;)V	a	handleDataMarker
		p	1		metadata
		p	2		pos
		p	3		world
		p	4		random
		p	5		boundingBox
	m	(Lqw;Laew;)Ldyx;	a	lambda$new$0
		p	1		id
	f	Z	h	isBeached
c	dxr	net/minecraft/world/level/levelgen/structure/structures/ShipwreckStructure
	m	(Ldvi$c;Z)V	<init>	<init>
		p	1		config
		p	2		beached
	m	(Ldvi$a;)Ljava/util/Optional;	a	findGenerationPoint
		p	1		context
	m	(Ldvi$a;Ldwa;)V	a	lambda$findGenerationPoint$2
		p	2		collector
	m	(Ldwa;Ldvi$a;)V	a	generatePieces
		p	1		collector
		p	2		context
	m	(Ldxr;)Ljava/lang/Boolean;	a	lambda$static$0
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$1
	m	()Ldvr;	e	type
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	Z	e	isBeached
c	dxs	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces
	m	()V	a	resetPieces
	m	(Ldxs$m;Ldvn;Lasc;IIILha;I)Ldxs$p;	a	generatePieceFromSmallDoor
		p	0		start
		p	1		holder
		p	2		random
		p	3		x
		p	4		y
		p	5		z
		p	6		orientation
		p	7		chainLength
	m	(Ljava/lang/Class;Ldvn;Lasc;IIILha;I)Ldxs$p;	a	findAndCreatePieceFactory
		p	0		pieceType
		p	1		holder
		p	2		random
		p	3		x
		p	4		y
		p	5		z
		p	6		orientation
		p	7		chainLength
	m	()Z	b	updatePieceWeight
	m	(Ldxs$m;Ldvn;Lasc;IIILha;I)Ldvm;	b	generateAndAddPiece
		p	0		start
		p	1		holder
		p	2		random
		p	3		x
		p	4		y
		p	5		z
		p	6		orientation
		p	7		chainLength
	f	I	a	MAGIC_START_Y
	f	I	b	SMALL_DOOR_WIDTH
	f	I	c	SMALL_DOOR_HEIGHT
	f	I	d	MAX_DEPTH
	f	I	e	LOWEST_Y_POSITION
	f	Z	f	CHECK_AIR
	f	[Ldxs$f;	g	STRONGHOLD_PIECE_WEIGHTS
	f	Ljava/util/List;	h	currentPieces
	f	Ljava/lang/Class;	i	imposedPiece
	f	I	j	totalWeight
	f	Ldxs$k;	k	SMOOTH_STONE_SELECTOR
c	dxs$1	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$1
	m	(Ljava/lang/Class;II)V	<init>	<init>
		p	1		pieceType
		p	2		weight
		p	3		limit
	m	(I)Z	a	doPlace
		p	1		chainLength
c	dxs$2	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$2
	m	(Ljava/lang/Class;II)V	<init>	<init>
		p	1		pieceType
		p	2		weight
		p	3		limit
	m	(I)Z	a	doPlace
		p	1		chainLength
c	dxs$3	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$3
	f	[I	a	$SwitchMap$net$minecraft$world$level$levelgen$structure$structures$StrongholdPieces$StrongholdPiece$SmallDoorType
	f	[I	b	$SwitchMap$net$minecraft$core$Direction
c	dxs$a	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$ChestCorridor
	m	(ILasc;Ldva;Lha;)V	<init>	<init>
		p	1		chainLength
		p	2		random
		p	3		boundingBox
		p	4		orientation
	m	(Lqw;)V	<init>	<init>
		p	1		nbt
	m	(Lcqp;Lcqn;Ldhg;Lasc;Ldva;Lcpc;Lgw;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldvm;Ldvn;Lasc;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Ldvn;Lasc;IIILha;I)Ldxs$a;	a	createPiece
		p	0		holder
		p	1		random
		p	2		x
		p	3		y
		p	4		z
		p	5		orientation
		p	6		chainlength
	m	(Ldvy;Lqw;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
	f	Z	d	hasPlacedChest
c	dxs$b	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$FillerCorridor
	m	(ILdva;Lha;)V	<init>	<init>
		p	1		chainLength
		p	2		boundingBox
		p	3		orientation
	m	(Lqw;)V	<init>	<init>
		p	1		nbt
	m	(Lcqp;Lcqn;Ldhg;Lasc;Ldva;Lcpc;Lgw;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldvn;Lasc;IIILha;)Ldva;	a	findPieceBox
		p	0		holder
		p	1		random
		p	2		x
		p	3		y
		p	4		z
		p	5		orientation
	m	(Ldvy;Lqw;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	f	I	a	steps
c	dxs$c	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$FiveCrossing
	m	(ILasc;Ldva;Lha;)V	<init>	<init>
		p	1		chainLength
		p	2		random
		p	3		boundingBox
		p	4		orientation
	m	(Lqw;)V	<init>	<init>
		p	1		nbt
	m	(Lcqp;Lcqn;Ldhg;Lasc;Ldva;Lcpc;Lgw;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldvm;Ldvn;Lasc;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Ldvn;Lasc;IIILha;I)Ldxs$c;	a	createPiece
		p	0		holder
		p	1		random
		p	2		x
		p	3		y
		p	4		z
		p	5		orientation
		p	6		chainLength
	m	(Ldvy;Lqw;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
	f	Z	d	leftLow
	f	Z	i	leftHigh
	f	Z	j	rightLow
	f	Z	k	rightHigh
c	dxs$d	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$LeftTurn
	m	(ILasc;Ldva;Lha;)V	<init>	<init>
		p	1		chainLength
		p	2		random
		p	3		boundingBox
		p	4		orientation
	m	(Lqw;)V	<init>	<init>
		p	1		nbt
	m	(Lcqp;Lcqn;Ldhg;Lasc;Ldva;Lcpc;Lgw;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldvm;Ldvn;Lasc;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Ldvn;Lasc;IIILha;I)Ldxs$d;	a	createPiece
		p	0		holder
		p	1		random
		p	2		x
		p	3		y
		p	4		z
		p	5		orientation
		p	6		chainLength
c	dxs$e	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$Library
	m	(ILasc;Ldva;Lha;)V	<init>	<init>
		p	1		chainLength
		p	2		random
		p	3		boundingBox
		p	4		orientation
	m	(Lqw;)V	<init>	<init>
		p	1		nbt
	m	(Lcqp;Lcqn;Ldhg;Lasc;Ldva;Lcpc;Lgw;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldvn;Lasc;IIILha;I)Ldxs$e;	a	createPiece
		p	0		holder
		p	1		random
		p	2		x
		p	3		y
		p	4		z
		p	5		orientation
		p	6		chainLength
	m	(Ldvy;Lqw;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	TALL_HEIGHT
	f	I	d	DEPTH
	f	Z	i	isTall
c	dxs$f	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$PieceWeight
	m	(Ljava/lang/Class;II)V	<init>	<init>
		p	1		pieceType
		p	2		weight
		p	3		limit
	m	()Z	a	isValid
	m	(I)Z	a	doPlace
		p	1		chainLength
	f	Ljava/lang/Class;	a	pieceClass
	f	I	b	weight
	f	I	c	placeCount
	f	I	d	maxPlaceCount
c	dxs$g	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$PortalRoom
	m	(ILdva;Lha;)V	<init>	<init>
		p	1		chainLength
		p	2		boundingBox
		p	3		orientation
	m	(Lqw;)V	<init>	<init>
		p	1		nbt
	m	(Lcqp;Lcqn;Ldhg;Lasc;Ldva;Lcpc;Lgw;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldvm;Ldvn;Lasc;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Ldvn;IIILha;I)Ldxs$g;	a	createPiece
		p	0		holder
		p	1		x
		p	2		y
		p	3		z
		p	4		orientation
		p	5		chainLength
	m	(Ldvy;Lqw;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
	f	Z	d	hasPlacedSpawner
c	dxs$h	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$PrisonHall
	m	(ILasc;Ldva;Lha;)V	<init>	<init>
		p	1		chainLength
		p	2		random
		p	3		boundingBox
		p	4		orientation
	m	(Lqw;)V	<init>	<init>
		p	1		nbt
	m	(Lcqp;Lcqn;Ldhg;Lasc;Ldva;Lcpc;Lgw;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldvm;Ldvn;Lasc;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Ldvn;Lasc;IIILha;I)Ldxs$h;	a	createPiece
		p	0		holder
		p	1		random
		p	2		x
		p	3		y
		p	4		z
		p	5		orientation
		p	6		chainLength
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
c	dxs$i	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$RightTurn
	m	(ILasc;Ldva;Lha;)V	<init>	<init>
		p	1		chainLength
		p	2		random
		p	3		boundingBox
		p	4		orientation
	m	(Lqw;)V	<init>	<init>
		p	1		nbt
	m	(Lcqp;Lcqn;Ldhg;Lasc;Ldva;Lcpc;Lgw;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldvm;Ldvn;Lasc;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Ldvn;Lasc;IIILha;I)Ldxs$i;	a	createPiece
		p	0		holder
		p	1		random
		p	2		x
		p	3		y
		p	4		z
		p	5		orientation
		p	6		chainLength
c	dxs$j	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$RoomCrossing
	m	(ILasc;Ldva;Lha;)V	<init>	<init>
		p	1		chainLength
		p	2		random
		p	3		boundingBox
		p	4		orientation
	m	(Lqw;)V	<init>	<init>
		p	1		nbt
	m	(Lcqp;Lcqn;Ldhg;Lasc;Ldva;Lcpc;Lgw;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldvm;Ldvn;Lasc;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Ldvn;Lasc;IIILha;I)Ldxs$j;	a	createPiece
		p	0		holder
		p	1		random
		p	2		x
		p	3		y
		p	4		z
		p	5		orientation
		p	6		chainLength
	m	(Ldvy;Lqw;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
	f	I	d	type
c	dxs$k	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$SmoothStoneSelector
	m	(Lasc;IIIZ)V	a	next
		p	1		random
		p	2		x
		p	3		y
		p	4		z
		p	5		placeBlock
c	dxs$l	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$StairsDown
	m	(ILasc;Ldva;Lha;)V	<init>	<init>
		p	1		chainLength
		p	2		random
		p	3		boundingBox
		p	4		orientation
	m	(Ldvz;IIILha;)V	<init>	<init>
		p	1		structurePieceType
		p	2		chainLength
		p	3		x
		p	4		z
		p	5		orientation
	m	(Ldvz;Lqw;)V	<init>	<init>
		p	1		type
		p	2		nbt
	m	(Lqw;)V	<init>	<init>
		p	1		nbt
	m	(Lcqp;Lcqn;Ldhg;Lasc;Ldva;Lcpc;Lgw;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldvm;Ldvn;Lasc;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Ldvn;Lasc;IIILha;I)Ldxs$l;	a	createPiece
		p	0		holder
		p	1		random
		p	2		x
		p	3		y
		p	4		z
		p	5		orientation
		p	6		chainLength
	m	(Ldvy;Lqw;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
	f	Z	d	isSource
c	dxs$m	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$StartPiece
	m	(Lasc;II)V	<init>	<init>
		p	1		random
	m	(Lqw;)V	<init>	<init>
		p	1		nbt
	m	()Lgw;	h	getLocatorPosition
	f	Ldxs$f;	a	previousPiece
	f	Ldxs$g;	b	portalRoomPiece
	f	Ljava/util/List;	c	pendingChildren
c	dxs$n	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$Straight
	m	(ILasc;Ldva;Lha;)V	<init>	<init>
		p	1		chainLength
		p	2		random
		p	3		boundingBox
		p	4		orientation
	m	(Lqw;)V	<init>	<init>
		p	1		nbt
	m	(Lcqp;Lcqn;Ldhg;Lasc;Ldva;Lcpc;Lgw;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldvm;Ldvn;Lasc;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Ldvn;Lasc;IIILha;I)Ldxs$n;	a	createPiece
		p	0		holder
		p	1		random
		p	2		x
		p	3		y
		p	4		z
		p	5		orientation
		p	6		chainLength
	m	(Ldvy;Lqw;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
	f	Z	d	leftChild
	f	Z	i	rightChild
c	dxs$o	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$StraightStairsDown
	m	(ILasc;Ldva;Lha;)V	<init>	<init>
		p	1		chainLength
		p	2		random
		p	3		boundingBox
		p	4		orientation
	m	(Lqw;)V	<init>	<init>
		p	1		nbt
	m	(Lcqp;Lcqn;Ldhg;Lasc;Ldva;Lcpc;Lgw;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldvm;Ldvn;Lasc;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Ldvn;Lasc;IIILha;I)Ldxs$o;	a	createPiece
		p	0		holder
		p	1		random
		p	2		x
		p	3		y
		p	4		z
		p	5		orientation
		p	6		chainLength
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
c	dxs$p	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$StrongholdPiece
	m	(Ldvz;ILdva;)V	<init>	<init>
		p	1		type
		p	2		length
		p	3		boundingBox
	m	(Ldvz;Lqw;)V	<init>	<init>
		p	1		type
		p	2		nbt
	m	(Lcqp;Lasc;Ldva;Ldxs$p$a;III)V	a	generateSmallDoor
		p	1		world
		p	2		random
		p	3		boundingBox
		p	4		type
		p	5		x
		p	6		y
		p	7		z
	m	(Ldva;)Z	a	isOkBox
		p	0		boundingBox
	m	(Ldvy;Lqw;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	m	(Ldxs$m;Ldvn;Lasc;II)Ldvm;	a	generateSmallDoorChildForward
		p	1		start
		p	2		holder
		p	3		random
		p	4		leftRightOffset
		p	5		heightOffset
	m	(Lasc;)Ldxs$p$a;	b	randomSmallDoor
		p	1		random
	m	(Ldxs$m;Ldvn;Lasc;II)Ldvm;	b	generateSmallDoorChildLeft
		p	1		start
		p	2		holder
		p	3		random
		p	4		heightOffset
		p	5		leftRightOffset
	m	(Ldxs$m;Ldvn;Lasc;II)Ldvm;	c	generateSmallDoorChildRight
		p	1		start
		p	2		holder
		p	3		random
		p	4		heightOffset
		p	5		leftRightOffset
	f	Ldxs$p$a;	h	entryDoor
c	dxs$p$a	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$StrongholdPiece$SmallDoorType
	m	()[Ldxs$p$a;	a	$values
	f	Ldxs$p$a;	a	OPENING
	f	Ldxs$p$a;	b	WOOD_DOOR
	f	Ldxs$p$a;	c	GRATES
	f	Ldxs$p$a;	d	IRON_DOOR
	f	[Ldxs$p$a;	e	$VALUES
c	dxs$q	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$Turn
	m	(Ldvz;ILdva;)V	<init>	<init>
		p	1		type
		p	2		length
		p	3		boundingBox
	m	(Ldvz;Lqw;)V	<init>	<init>
		p	1		type
		p	2		nbt
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
c	dxt	net/minecraft/world/level/levelgen/structure/structures/StrongholdStructure
	m	(Ldvi$c;)V	<init>	<init>
		p	1		config
	m	(Ldvi$a;)Ljava/util/Optional;	a	findGenerationPoint
		p	1		context
	m	(Ldvi$a;Ldwa;)V	a	lambda$findGenerationPoint$0
		p	1		collector
	m	(Ldwa;Ldvi$a;)V	a	generatePieces
		p	0		collector
		p	1		context
	m	()Ldvr;	e	type
	f	Lcom/mojang/serialization/Codec;	d	CODEC
c	dxu	net/minecraft/world/level/levelgen/structure/structures/SwampHutPiece
	m	(Lasc;II)V	<init>	<init>
		p	1		random
		p	2		x
		p	3		z
	m	(Lqw;)V	<init>	<init>
		p	1		nbt
	m	(Lcqk;Ldva;)V	a	spawnCat
		p	1		world
		p	2		box
	m	(Lcqp;Lcqn;Ldhg;Lasc;Ldva;Lcpc;Lgw;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldvy;Lqw;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	f	Z	h	spawnedWitch
	f	Z	i	spawnedCat
c	dxv	net/minecraft/world/level/levelgen/structure/structures/SwampHutStructure
	m	(Ldvi$c;)V	<init>	<init>
		p	1		config
	m	(Ldvi$a;)Ljava/util/Optional;	a	findGenerationPoint
		p	1		context
	m	(Ldvi$a;Ldwa;)V	a	lambda$findGenerationPoint$0
		p	1		collector
	m	(Ldwa;Ldvi$a;)V	a	generatePieces
		p	0		collector
		p	1		context
	m	()Ldvr;	e	type
	f	Lcom/mojang/serialization/Codec;	d	CODEC
c	dxw	net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces
	m	(Ldzc;Lgw;Lczh;Ljava/util/List;Lasc;)V	a	generateMansion
		p	0		manager
		p	1		pos
		p	2		rotation
		p	3		pieces
		p	4		random
c	dxw$a	net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$FirstFloorRoomCollection
	m	(Lasc;)Ljava/lang/String;	a	get1x1
		p	1		random
	m	(Lasc;Z)Ljava/lang/String;	a	get1x2SideEntrance
		p	1		random
		p	2		staircase
	m	(Lasc;)Ljava/lang/String;	b	get1x1Secret
		p	1		random
	m	(Lasc;Z)Ljava/lang/String;	b	get1x2FrontEntrance
		p	1		random
		p	2		staircase
	m	(Lasc;)Ljava/lang/String;	c	get1x2Secret
		p	1		random
	m	(Lasc;)Ljava/lang/String;	d	get2x2
		p	1		random
	m	(Lasc;)Ljava/lang/String;	e	get2x2Secret
		p	1		random
c	dxw$b	net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$FloorRoomCollection
	m	(Lasc;)Ljava/lang/String;	a	get1x1
		p	1		random
	m	(Lasc;Z)Ljava/lang/String;	a	get1x2SideEntrance
		p	1		random
		p	2		staircase
	m	(Lasc;)Ljava/lang/String;	b	get1x1Secret
		p	1		random
	m	(Lasc;Z)Ljava/lang/String;	b	get1x2FrontEntrance
		p	1		random
		p	2		staircase
	m	(Lasc;)Ljava/lang/String;	c	get1x2Secret
		p	1		random
	m	(Lasc;)Ljava/lang/String;	d	get2x2
		p	1		random
	m	(Lasc;)Ljava/lang/String;	e	get2x2Secret
		p	1		random
c	dxw$c	net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$MansionGrid
	m	(Lasc;)V	<init>	<init>
		p	1		random
	m	()V	a	setupThirdFloor
	m	(Ldxw$g;)Z	a	cleanEdges
		p	1		layout
	m	(Ldxw$g;II)Z	a	isHouse
		p	0		layout
		p	1		i
		p	2		j
	m	(Ldxw$g;IIII)Z	a	isRoomId
		p	1		layout
		p	2		i
		p	3		j
		p	4		floor
		p	5		roomId
	m	(Ldxw$g;IILha;I)V	a	recursiveCorridor
		p	1		layout
		p	2		i
		p	3		j
		p	4		direction
		p	5		length
	m	(Ldxw$g;Ldxw$g;)V	a	identifyRooms
		p	1		layout
		p	2		roomFlags
	m	(Ldxw$g;IIII)Lha;	b	get1x2RoomDirection
		p	1		layout
		p	2		i
		p	3		j
		p	4		floor
		p	5		roomId
	f	I	a	DEFAULT_SIZE
	f	I	b	CLEAR
	f	I	c	CORRIDOR
	f	I	d	ROOM
	f	I	e	START_ROOM
	f	I	f	TEST_ROOM
	f	I	g	BLOCKED
	f	I	h	ROOM_1x1
	f	I	i	ROOM_1x2
	f	I	j	ROOM_2x2
	f	I	k	ROOM_ORIGIN_FLAG
	f	I	l	ROOM_DOOR_FLAG
	f	I	m	ROOM_STAIRS_FLAG
	f	I	n	ROOM_CORRIDOR_FLAG
	f	I	o	ROOM_TYPE_MASK
	f	I	p	ROOM_ID_MASK
	f	Lasc;	q	random
	f	Ldxw$g;	r	baseGrid
	f	Ldxw$g;	s	thirdFloorGrid
	f	[Ldxw$g;	t	floorRooms
	f	I	u	entranceX
	f	I	v	entranceY
c	dxw$d	net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$MansionPiecePlacer
	m	(Ldzc;Lasc;)V	<init>	<init>
		p	1		manager
		p	2		random
	m	(Lgw;Lczh;Ljava/util/List;Ldxw$c;)V	a	createMansion
		p	1		pos
		p	2		rotation
		p	3		pieces
		p	4		parameters
	m	(Ljava/util/List;Ldxw$e;)V	a	entrance
		p	1		pieces
		p	2		wallPiece
	m	(Ljava/util/List;Ldxw$e;Ldxw$g;Lha;IIII)V	a	traverseOuterWalls
		p	1		pieces
		p	2		wallPiece
		p	3		layout
		p	4		direction
		p	5		startI
		p	6		startJ
		p	7		endI
		p	8		endJ
	m	(Ljava/util/List;Lgw;Lczh;Ldxw$b;)V	a	addRoom2x2Secret
		p	1		pieces
		p	2		pos
		p	3		rotation
		p	4		pool
	m	(Ljava/util/List;Lgw;Lczh;Ldxw$g;Ldxw$g;)V	a	createRoof
		p	1		pieces
		p	2		pos
		p	3		rotation
		p	4		layout
		p	5		nextFloorLayout
	m	(Ljava/util/List;Lgw;Lczh;Lha;Ldxw$b;)V	a	addRoom1x1
		p	1		pieces
		p	2		pos
		p	3		rotation
		p	4		direction
		p	5		pool
	m	(Ljava/util/List;Lgw;Lczh;Lha;Lha;Ldxw$b;)V	a	addRoom2x2
		p	1		pieces
		p	2		pos
		p	3		rotation
		p	4		connectedRoomDirection
		p	5		entranceDirection
		p	6		pool
	m	(Ljava/util/List;Lgw;Lczh;Lha;Lha;Ldxw$b;Z)V	a	addRoom1x2
		p	1		pieces
		p	2		pos
		p	3		rotation
		p	4		connectedRoomDirection
		p	5		entranceDirection
		p	6		pool
		p	7		staircase
	m	(Ljava/util/List;Ldxw$e;)V	b	traverseWallPiece
		p	1		pieces
		p	2		wallPiece
	m	(Ljava/util/List;Ldxw$e;)V	c	traverseTurn
		p	1		pieces
		p	2		wallPiece
	m	(Ljava/util/List;Ldxw$e;)V	d	traverseInnerTurn
		p	1		pieces
		p	2		wallPiece
	f	Ldzc;	a	structureTemplateManager
	f	Lasc;	b	random
	f	I	c	startX
	f	I	d	startY
c	dxw$e	net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$PlacementData
	f	Lczh;	a	rotation
	f	Lgw;	b	position
	f	Ljava/lang/String;	c	wallType
c	dxw$f	net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$SecondFloorRoomCollection
	m	(Lasc;)Ljava/lang/String;	a	get1x1
		p	1		random
	m	(Lasc;Z)Ljava/lang/String;	a	get1x2SideEntrance
		p	1		random
		p	2		staircase
	m	(Lasc;)Ljava/lang/String;	b	get1x1Secret
		p	1		random
	m	(Lasc;Z)Ljava/lang/String;	b	get1x2FrontEntrance
		p	1		random
		p	2		staircase
	m	(Lasc;)Ljava/lang/String;	c	get1x2Secret
		p	1		random
	m	(Lasc;)Ljava/lang/String;	d	get2x2
		p	1		random
	m	(Lasc;)Ljava/lang/String;	e	get2x2Secret
		p	1		random
c	dxw$g	net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$SimpleGrid
	m	(III)V	<init>	<init>
		p	1		n
		p	2		m
		p	3		fallback
	m	(II)I	a	get
		p	1		i
		p	2		j
	m	(III)V	a	set
		p	1		i
		p	2		j
		p	3		value
	m	(IIII)V	a	setif
		p	1		i
		p	2		j
		p	3		expected
		p	4		newValue
	m	(IIIII)V	a	set
		p	1		i0
		p	2		j0
		p	3		i1
		p	4		j1
		p	5		value
	m	(III)Z	b	edgesTo
		p	1		i
		p	2		j
		p	3		value
	f	[[I	a	grid
	f	I	b	width
	f	I	c	height
	f	I	d	valueIfOutside
c	dxw$h	net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$ThirdFloorRoomCollection
c	dxw$i	net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$WoodlandMansionPiece
	m	(Ldzc;Ljava/lang/String;Lgw;Lczh;)V	<init>	<init>
		p	1		manager
		p	2		template
		p	3		pos
		p	4		rotation
	m	(Ldzc;Ljava/lang/String;Lgw;Lczh;Lcxq;)V	<init>	<init>
		p	1		manager
		p	2		template
		p	3		pos
		p	4		rotation
		p	5		mirror
	m	(Ldzc;Lqw;)V	<init>	<init>
		p	1		manager
		p	2		nbt
	m	(Lcxq;Lczh;)Ldyx;	a	makeSettings
		p	0		mirror
		p	1		rotation
	m	(Ldvy;Lqw;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	m	(Ljava/lang/String;)Laew;	a	makeLocation
		p	0		identifier
	m	(Ljava/lang/String;Lgw;Lcqk;Lasc;Ldva;)V	a	handleDataMarker
		p	1		metadata
		p	2		pos
		p	3		world
		p	4		random
		p	5		boundingBox
	m	(Lqw;Laew;)Ldyx;	a	lambda$new$0
		p	1		id
	m	()Laew;	b	makeTemplateLocation
c	dxx	net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionStructure
	m	(Ldvi$c;)V	<init>	<init>
		p	1		config
	m	(Lcqp;Lcqn;Ldhg;Lasc;Ldva;Lcpc;Ldvx;)V	a	afterPlace
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		box
		p	6		chunkPos
		p	7		pieces
	m	(Ldvi$a;)Ljava/util/Optional;	a	findGenerationPoint
		p	1		context
	m	(Ldvi$a;Lgw;Lczh;Ldwa;)V	a	lambda$findGenerationPoint$0
		p	4		collector
	m	(Ldwa;Ldvi$a;Lgw;Lczh;)V	a	generatePieces
		p	1		collector
		p	2		context
		p	3		pos
		p	4		rotation
	m	()Ldvr;	e	type
	f	Lcom/mojang/serialization/Codec;	d	CODEC
c	dxy	net/minecraft/world/level/levelgen/structure/structures/package-info
c	dxz	net/minecraft/world/level/levelgen/structure/templatesystem/AlwaysTrueTest
	m	()Ldyw;	a	getType
	m	(Ldfj;Lasc;)Z	a	test
		p	1		state
		p	2		random
	m	()Ldxz;	b	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldxz;	b	INSTANCE
c	dya	net/minecraft/world/level/levelgen/structure/templatesystem/AxisAlignedLinearPosTest
	m	(FFIILha$a;)V	<init>	<init>
		p	1		minChance
		p	2		maxChance
		p	3		minDistance
		p	4		maxDistance
		p	5		axis
	m	()Ldyp;	a	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$5
		p	0		instance
	m	(Ldya;)Lha$a;	a	lambda$static$4
		p	0		ruleTest
	m	(Lgw;Lgw;Lgw;Lasc;)Z	a	test
		p	1		originalPos
		p	2		currentPos
		p	3		pivot
		p	4		random
	m	(Ldya;)Ljava/lang/Integer;	b	lambda$static$3
		p	0		ruleTest
	m	(Ldya;)Ljava/lang/Integer;	c	lambda$static$2
		p	0		ruleTest
	m	(Ldya;)Ljava/lang/Float;	d	lambda$static$1
		p	0		ruleTest
	m	(Ldya;)Ljava/lang/Float;	e	lambda$static$0
		p	0		ruleTest
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	F	b	minChance
	f	F	d	maxChance
	f	I	e	minDist
	f	I	f	maxDist
	f	Lha$a;	g	axis
c	dyb	net/minecraft/world/level/levelgen/structure/templatesystem/BlackstoneReplaceProcessor
	m	()Ldza;	a	getType
	m	(Lcpy;Lgw;Lgw;Ldzb$c;Ldzb$c;Ldyx;)Ldzb$c;	a	processBlock
		p	1		world
		p	2		pos
		p	3		pivot
		p	4		originalBlockInfo
		p	5		currentBlockInfo
		p	6		data
	m	(Ljava/util/HashMap;)V	a	lambda$new$1
		p	0		replacements
	m	()Ldyb;	b	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldyb;	b	INSTANCE
	f	Ljava/util/Map;	c	replacements
c	dyc	net/minecraft/world/level/levelgen/structure/templatesystem/BlockAgeProcessor
	m	(F)V	<init>	<init>
		p	1		mossiness
	m	()Ldza;	a	getType
	m	(Lasc;)Ldfj;	a	maybeReplaceFullStoneBlock
		p	1		random
	m	(Lasc;Lcsv;)Ldfj;	a	getRandomFacingStairs
		p	0		random
		p	1		stairs
	m	(Lasc;Ldfj;)Ldfj;	a	maybeReplaceStairs
		p	1		random
		p	2		state
	m	(Lasc;[Ldfj;)Ldfj;	a	getRandomBlock
		p	0		random
		p	1		states
	m	(Lasc;[Ldfj;[Ldfj;)Ldfj;	a	getRandomBlock
		p	1		random
		p	2		regularStates
		p	3		mossyStates
	m	(Lcpy;Lgw;Lgw;Ldzb$c;Ldzb$c;Ldyx;)Ldzb$c;	a	processBlock
		p	1		world
		p	2		pos
		p	3		pivot
		p	4		originalBlockInfo
		p	5		currentBlockInfo
		p	6		data
	m	(Ldyc;)Ljava/lang/Float;	a	lambda$static$0
		p	0		processor
	m	(Lasc;)Ldfj;	b	maybeReplaceSlab
		p	1		random
	m	(Lasc;)Ldfj;	c	maybeReplaceWall
		p	1		random
	m	(Lasc;)Ldfj;	d	maybeReplaceObsidian
		p	1		random
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	F	b	PROBABILITY_OF_REPLACING_FULL_BLOCK
	f	F	c	PROBABILITY_OF_REPLACING_STAIRS
	f	F	d	PROBABILITY_OF_REPLACING_OBSIDIAN
	f	[Ldfj;	e	NON_MOSSY_REPLACEMENTS
	f	F	f	mossiness
c	dyd	net/minecraft/world/level/levelgen/structure/templatesystem/BlockIgnoreProcessor
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		blocks
	m	()Ldza;	a	getType
	m	(Lcpy;Lgw;Lgw;Ldzb$c;Ldzb$c;Ldyx;)Ldzb$c;	a	processBlock
		p	1		world
		p	2		pos
		p	3		pivot
		p	4		originalBlockInfo
		p	5		currentBlockInfo
		p	6		data
	m	(Ldyd;)Ljava/util/List;	a	lambda$static$0
		p	0		processor
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldyd;	b	STRUCTURE_BLOCK
	f	Ldyd;	c	AIR
	f	Ldyd;	d	STRUCTURE_AND_AIR
	f	Lcom/google/common/collect/ImmutableList;	e	toIgnore
c	dye	net/minecraft/world/level/levelgen/structure/templatesystem/BlockMatchTest
	m	(Lcsv;)V	<init>	<init>
		p	1		block
	m	()Ldyw;	a	getType
	m	(Ldfj;Lasc;)Z	a	test
		p	1		state
		p	2		random
	m	(Ldye;)Lcsv;	a	lambda$static$0
		p	0		ruleTest
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcsv;	b	block
c	dyf	net/minecraft/world/level/levelgen/structure/templatesystem/BlockRotProcessor
	m	(F)V	<init>	<init>
		p	1		integrity
	m	(Lhi;F)V	<init>	<init>
		p	1		rottableBlocks
		p	2		integrity
	m	(Ljava/util/Optional;F)V	<init>	<init>
		p	1		rottableBlocks
		p	2		integrity
	m	()Ldza;	a	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Lcpy;Lgw;Lgw;Ldzb$c;Ldzb$c;Ldyx;)Ldzb$c;	a	processBlock
		p	1		world
		p	2		pos
		p	3		pivot
		p	4		originalBlockInfo
		p	5		currentBlockInfo
		p	6		data
	m	(Ldyf;)Ljava/lang/Float;	a	lambda$static$1
		p	0		processor
	m	(Ldyf;)Ljava/util/Optional;	b	lambda$static$0
		p	0		processor
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Optional;	b	rottableBlocks
	f	F	c	integrity
c	dyg	net/minecraft/world/level/levelgen/structure/templatesystem/BlockStateMatchTest
	m	(Ldfj;)V	<init>	<init>
		p	1		blockState
	m	()Ldyw;	a	getType
	m	(Ldfj;Lasc;)Z	a	test
		p	1		state
		p	2		random
	m	(Ldyg;)Ldfj;	a	lambda$static$0
		p	0		ruleTest
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldfj;	b	blockState
c	dyh	net/minecraft/world/level/levelgen/structure/templatesystem/CappedProcessor
	m	(Ldyy;Lbgd;)V	<init>	<init>
		p	1		delegate
		p	2		limit
	m	()Ldza;	a	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Lcqk;Lgw;Lgw;Ljava/util/List;Ljava/util/List;Ldyx;)Ljava/util/List;	a	finalizeProcessing
		p	1		world
		p	2		pos
		p	3		pivot
		p	4		originalBlockInfos
		p	5		currentBlockInfos
		p	6		data
	m	(Ldyh;)Lbgd;	a	lambda$static$1
		p	0		processor
	m	(Ldyh;)Ldyy;	b	lambda$static$0
		p	0		processor
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldyy;	b	delegate
	f	Lbgd;	c	limit
c	dyi	net/minecraft/world/level/levelgen/structure/templatesystem/GravityProcessor
	m	(Ldks$a;I)V	<init>	<init>
		p	1		heightmap
		p	2		offset
	m	()Ldza;	a	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Lcpy;Lgw;Lgw;Ldzb$c;Ldzb$c;Ldyx;)Ldzb$c;	a	processBlock
		p	1		world
		p	2		pos
		p	3		pivot
		p	4		originalBlockInfo
		p	5		currentBlockInfo
		p	6		data
	m	(Ldyi;)Ljava/lang/Integer;	a	lambda$static$1
		p	0		processor
	m	(Ldyi;)Ldks$a;	b	lambda$static$0
		p	0		processor
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldks$a;	b	heightmap
	f	I	c	offset
c	dyj	net/minecraft/world/level/levelgen/structure/templatesystem/JigsawReplacementProcessor
	m	()Ldza;	a	getType
	m	(Lcpy;Lgw;Lgw;Ldzb$c;Ldzb$c;Ldyx;)Ldzb$c;	a	processBlock
		p	1		world
		p	2		pos
		p	3		pivot
		p	4		originalBlockInfo
		p	5		currentBlockInfo
		p	6		data
	m	()Ldyj;	b	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldyj;	b	INSTANCE
	f	Lorg/slf4j/Logger;	c	LOGGER
c	dyk	net/minecraft/world/level/levelgen/structure/templatesystem/LavaSubmergedBlockProcessor
	m	()Ldza;	a	getType
	m	(Lcpy;Lgw;Lgw;Ldzb$c;Ldzb$c;Ldyx;)Ldzb$c;	a	processBlock
		p	1		world
		p	2		pos
		p	3		pivot
		p	4		originalBlockInfo
		p	5		currentBlockInfo
		p	6		data
	m	()Ldyk;	b	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldyk;	b	INSTANCE
c	dyl	net/minecraft/world/level/levelgen/structure/templatesystem/LinearPosTest
	m	(FFII)V	<init>	<init>
		p	1		minChance
		p	2		maxChance
		p	3		minDistance
		p	4		maxDistance
	m	()Ldyp;	a	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
		p	0		instance
	m	(Ldyl;)Ljava/lang/Integer;	a	lambda$static$3
		p	0		ruleTest
	m	(Lgw;Lgw;Lgw;Lasc;)Z	a	test
		p	1		originalPos
		p	2		currentPos
		p	3		pivot
		p	4		random
	m	(Ldyl;)Ljava/lang/Integer;	b	lambda$static$2
		p	0		ruleTest
	m	(Ldyl;)Ljava/lang/Float;	c	lambda$static$1
		p	0		ruleTest
	m	(Ldyl;)Ljava/lang/Float;	d	lambda$static$0
		p	0		ruleTest
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	F	b	minChance
	f	F	d	maxChance
	f	I	e	minDist
	f	I	f	maxDist
c	dym	net/minecraft/world/level/levelgen/structure/templatesystem/NopProcessor
	m	()Ldza;	a	getType
	m	()Ldym;	b	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldym;	b	INSTANCE
c	dyn	net/minecraft/world/level/levelgen/structure/templatesystem/PosAlwaysTrueTest
	m	()Ldyp;	a	getType
	m	(Lgw;Lgw;Lgw;Lasc;)Z	a	test
		p	1		originalPos
		p	2		currentPos
		p	3		pivot
		p	4		random
	m	()Ldyn;	b	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldyn;	b	INSTANCE
c	dyo	net/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTest
	m	()Ldyp;	a	getType
	m	(Lgw;Lgw;Lgw;Lasc;)Z	a	test
		p	1		originalPos
		p	2		currentPos
		p	3		pivot
		p	4		random
	f	Lcom/mojang/serialization/Codec;	c	CODEC
c	dyp	net/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTestType
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	lambda$register$0
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Ldyp;	a	register
		p	0		id
		p	1		codec
	f	Ldyp;	a	ALWAYS_TRUE_TEST
	f	Ldyp;	b	LINEAR_POS_TEST
	f	Ldyp;	c	AXIS_ALIGNED_LINEAR_POS_TEST
c	dyq	net/minecraft/world/level/levelgen/structure/templatesystem/ProcessorRule
	m	(Ldyv;Ldyv;Ldfj;)V	<init>	<init>
		p	1		inputPredicate
		p	2		locationPredicate
		p	3		state
	m	(Ldyv;Ldyv;Ldyo;Ldfj;)V	<init>	<init>
		p	1		inputPredicate
		p	2		locationPredicate
		p	3		positionPredicate
		p	4		state
	m	(Ldyv;Ldyv;Ldyo;Ldfj;Ldzj;)V	<init>	<init>
		p	1		inputPredicate
		p	2		locationPredicate
		p	3		positionPredicate
		p	4		outputState
		p	5		blockEntityModifier
	m	()Ldfj;	a	getOutputState
	m	(Lasc;Lqw;)Lqw;	a	getOutputTag
		p	1		random
		p	2		nbt
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$5
		p	0		instance
	m	(Ldfj;Ldfj;Lgw;Lgw;Lgw;Lasc;)Z	a	test
		p	1		input
		p	2		currentState
		p	3		originalPos
		p	4		currentPos
		p	5		pivot
		p	6		random
	m	(Ldyq;)Ldzj;	a	lambda$static$4
		p	0		rule
	m	(Ldyq;)Ldfj;	b	lambda$static$3
		p	0		rule
	m	(Ldyq;)Ldyo;	c	lambda$static$2
		p	0		rule
	m	(Ldyq;)Ldyv;	d	lambda$static$1
		p	0		rule
	m	(Ldyq;)Ldyv;	e	lambda$static$0
		p	0		rule
	f	Ldzi;	a	DEFAULT_BLOCK_ENTITY_MODIFIER
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Ldyv;	c	inputPredicate
	f	Ldyv;	d	locPredicate
	f	Ldyo;	e	posPredicate
	f	Ldfj;	f	outputState
	f	Ldzj;	g	blockEntityModifier
c	dyr	net/minecraft/world/level/levelgen/structure/templatesystem/ProtectedBlockProcessor
	m	(Laqh;)V	<init>	<init>
		p	1		protectedBlocksTag
	m	()Ldza;	a	getType
	m	(Lcpy;Lgw;Lgw;Ldzb$c;Ldzb$c;Ldyx;)Ldzb$c;	a	processBlock
		p	1		world
		p	2		pos
		p	3		pivot
		p	4		originalBlockInfo
		p	5		currentBlockInfo
		p	6		data
	m	(Ldyr;)Laqh;	a	lambda$static$0
		p	0		processor
	f	Laqh;	a	cannotReplace
	f	Lcom/mojang/serialization/Codec;	b	CODEC
c	dys	net/minecraft/world/level/levelgen/structure/templatesystem/RandomBlockMatchTest
	m	(Lcsv;F)V	<init>	<init>
		p	1		block
		p	2		probability
	m	()Ldyw;	a	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Ldfj;Lasc;)Z	a	test
		p	1		state
		p	2		random
	m	(Ldys;)Ljava/lang/Float;	a	lambda$static$1
		p	0		ruleTest
	m	(Ldys;)Lcsv;	b	lambda$static$0
		p	0		ruleTest
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcsv;	b	block
	f	F	d	probability
c	dyt	net/minecraft/world/level/levelgen/structure/templatesystem/RandomBlockStateMatchTest
	m	(Ldfj;F)V	<init>	<init>
		p	1		blockState
		p	2		probability
	m	()Ldyw;	a	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Ldfj;Lasc;)Z	a	test
		p	1		state
		p	2		random
	m	(Ldyt;)Ljava/lang/Float;	a	lambda$static$1
		p	0		ruleTest
	m	(Ldyt;)Ldfj;	b	lambda$static$0
		p	0		ruleTest
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldfj;	b	blockState
	f	F	d	probability
c	dyu	net/minecraft/world/level/levelgen/structure/templatesystem/RuleProcessor
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		rules
	m	()Ldza;	a	getType
	m	(Lcpy;Lgw;Lgw;Ldzb$c;Ldzb$c;Ldyx;)Ldzb$c;	a	processBlock
		p	1		world
		p	2		pos
		p	3		pivot
		p	4		originalBlockInfo
		p	5		currentBlockInfo
		p	6		data
	m	(Ldyu;)Ljava/util/List;	a	lambda$static$0
		p	0		processor
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcom/google/common/collect/ImmutableList;	b	rules
c	dyv	net/minecraft/world/level/levelgen/structure/templatesystem/RuleTest
	m	()Ldyw;	a	getType
	m	(Ldfj;Lasc;)Z	a	test
		p	1		state
		p	2		random
	f	Lcom/mojang/serialization/Codec;	c	CODEC
c	dyw	net/minecraft/world/level/levelgen/structure/templatesystem/RuleTestType
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	lambda$register$0
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Ldyw;	a	register
		p	0		id
		p	1		codec
	f	Ldyw;	a	ALWAYS_TRUE_TEST
	f	Ldyw;	b	BLOCK_TEST
	f	Ldyw;	c	BLOCKSTATE_TEST
	f	Ldyw;	d	TAG_TEST
	f	Ldyw;	e	RANDOM_BLOCK_TEST
	f	Ldyw;	f	RANDOM_BLOCKSTATE_TEST
c	dyx	net/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings
	m	()Ldyx;	a	copy
	m	(Lasc;)Ldyx;	a	setRandom
		p	1		random
	m	(Lcxq;)Ldyx;	a	setMirror
		p	1		mirror
	m	(Lczh;)Ldyx;	a	setRotation
		p	1		rotation
	m	(Ldva;)Ldyx;	a	setBoundingBox
		p	1		boundingBox
	m	(Ldyy;)Ldyx;	a	addProcessor
		p	1		processor
	m	(Lgw;)Ldyx;	a	setRotationPivot
		p	1		position
	m	(Ljava/util/List;Lgw;)Ldzb$a;	a	getRandomPalette
		p	1		infoLists
		p	2		pos
	m	(Z)Ldyx;	a	setIgnoreEntities
		p	1		ignoreEntities
	m	()Ldyx;	b	clearProcessors
	m	(Ldyy;)Ldyx;	b	popProcessor
		p	1		processor
	m	(Lgw;)Lasc;	b	getRandom
		p	1		pos
	m	(Z)Ldyx;	b	setKeepLiquids
		p	1		placeFluids
	m	()Lcxq;	c	getMirror
	m	(Z)Ldyx;	c	setKnownShape
		p	1		updateNeighbors
	m	()Lczh;	d	getRotation
	m	(Z)Ldyx;	d	setFinalizeEntities
		p	1		initializeMobs
	m	()Lgw;	e	getRotationPivot
	m	()Z	f	isIgnoreEntities
	m	()Ldva;	g	getBoundingBox
	m	()Z	h	getKnownShape
	m	()Ljava/util/List;	i	getProcessors
	m	()Z	j	shouldKeepLiquids
	m	()Z	k	shouldFinalizeEntities
	f	Lcxq;	a	mirror
	f	Lczh;	b	rotation
	f	Lgw;	c	rotationPivot
	f	Z	d	ignoreEntities
	f	Ldva;	e	boundingBox
	f	Z	f	keepLiquids
	f	Lasc;	g	random
	f	I	h	palette
	f	Ljava/util/List;	i	processors
	f	Z	j	knownShape
	f	Z	k	finalizeEntities
c	dyy	net/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessor
	m	()Ldza;	a	getType
	m	(Lcpy;Lgw;Lgw;Ldzb$c;Ldzb$c;Ldyx;)Ldzb$c;	a	processBlock
		p	1		world
		p	2		pos
		p	3		pivot
		p	4		originalBlockInfo
		p	5		currentBlockInfo
		p	6		data
	m	(Lcqk;Lgw;Lgw;Ljava/util/List;Ljava/util/List;Ldyx;)Ljava/util/List;	a	finalizeProcessing
		p	1		world
		p	2		pos
		p	3		pivot
		p	4		originalBlockInfos
		p	5		currentBlockInfos
		p	6		data
c	dyz	net/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorList
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		list
	m	()Ljava/util/List;	a	list
	f	Ljava/util/List;	a	list
c	dza	net/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	lambda$register$0
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Ldza;	a	register
		p	0		id
		p	1		codec
	f	Lcom/mojang/serialization/Codec;	a	SINGLE_CODEC
	f	Lcom/mojang/serialization/Codec;	b	LIST_OBJECT_CODEC
	f	Lcom/mojang/serialization/Codec;	c	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	d	LIST_CODEC
	f	Ldza;	e	BLOCK_IGNORE
	f	Ldza;	f	BLOCK_ROT
	f	Ldza;	g	GRAVITY
	f	Ldza;	h	JIGSAW_REPLACEMENT
	f	Ldza;	i	RULE
	f	Ldza;	j	NOP
	f	Ldza;	k	BLOCK_AGE
	f	Ldza;	l	BLACKSTONE_REPLACE
	f	Ldza;	m	LAVA_SUBMERGED_BLOCK
	f	Ldza;	n	PROTECTED_BLOCKS
	f	Ldza;	o	CAPPED
c	dzb	net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate
	m	()Lhy;	a	getSize
	m	(IIILcpw;ILha;III)V	a	lambda$updateShapeAtEdge$4
		p	5		direction
		p	6		x
		p	7		y
		p	8		z
	m	(Lbiq;)Z	a	lambda$fillEntityList$3
		p	0		entity
	m	(Lcpv;Lgw;Lgw;)V	a	fillEntityList
		p	1		world
		p	2		firstCorner
		p	3		secondCorner
	m	(Lcpv;Lgw;Lhy;ZLcsv;)V	a	fillFromWorld
		p	1		world
		p	2		start
		p	3		dimensions
		p	4		includeEntities
		p	5		ignoredBlock
	m	(Lcpw;ILehw;III)V	a	updateShapeAtEdge
		p	0		world
		p	1		flags
		p	2		set
		p	3		startX
		p	4		startY
		p	5		startZ
	m	(Lcqk;Lgw;Lcxq;Lczh;Lgw;Ldva;Z)V	a	placeEntities
		p	1		world
		p	2		pos
		p	3		mirror
		p	4		rotation
		p	5		pivot
		p	6		area
		p	7		initializeMobs
	m	(Lcqk;Lgw;Lgw;Ldyx;Lasc;I)Z	a	placeInWorld
		p	1		world
		p	2		pos
		p	3		pivot
		p	4		placementData
		p	5		random
		p	6		flags
	m	(Lcqk;Lgw;Lgw;Ldyx;Ljava/util/List;)Ljava/util/List;	a	processBlockInfos
		p	0		world
		p	1		pos
		p	2		pivot
		p	3		placementData
		p	4		infos
	m	(Lcqk;Lqw;)Ljava/util/Optional;	a	createEntityIgnoreException
		p	0		world
		p	1		nbt
	m	(Lczh;)Lhy;	a	getSize
		p	1		rotation
	m	(Lczh;Lcxq;Lehn;ZLcqk;Lqw;Lbiq;)V	a	lambda$placeEntities$5
		p	6		entity
	m	(Ldyx;Lgw;)Lgw;	a	calculateRelativePosition
		p	0		placementData
		p	1		pos
	m	(Ldyx;Lgw;Ldyx;Lgw;)Lgw;	a	calculateConnectedPosition
		p	1		placementData1
		p	2		pos1
		p	3		placementData2
		p	4		pos2
	m	(Ldzb$c;)I	a	lambda$buildInfoList$2
		p	0		blockInfo
	m	(Ldzb$c;Ljava/util/List;Ljava/util/List;Ljava/util/List;)V	a	addToLists
		p	0		blockInfo
		p	1		fullBlocks
		p	2		blocksWithNbt
		p	3		otherBlocks
	m	(Lehn;Lcxq;Lczh;Lgw;)Lehn;	a	transform
		p	0		point
		p	1		mirror
		p	2		rotation
		p	3		pivot
	m	(Lgw;Lcxq;Lczh;)Lgw;	a	getZeroPositionWithTransform
		p	1		pos
		p	2		mirror
		p	3		rotation
	m	(Lgw;Lcxq;Lczh;II)Lgw;	a	getZeroPositionWithTransform
		p	0		pos
		p	1		mirror
		p	2		rotation
		p	3		offsetX
		p	4		offsetZ
	m	(Lgw;Lcxq;Lczh;Lgw;)Lgw;	a	transform
		p	0		pos
		p	1		mirror
		p	2		rotation
		p	3		pivot
	m	(Lgw;Lczh;Lgw;Lcxq;)Ldva;	a	getBoundingBox
		p	1		pos
		p	2		rotation
		p	3		pivot
		p	4		mirror
	m	(Lgw;Lczh;Lgw;Lcxq;Lhy;)Ldva;	a	getBoundingBox
		p	0		pos
		p	1		rotation
		p	2		pivot
		p	3		mirror
		p	4		dimensions
	m	(Lgw;Ldyx;Lcsv;)Ljava/util/List;	a	filterBlocks
		p	1		pos
		p	2		placementData
		p	3		block
	m	(Lgw;Ldyx;Lcsv;Z)Lit/unimi/dsi/fastutil/objects/ObjectArrayList;	a	filterBlocks
		p	1		pos
		p	2		placementData
		p	3		block
		p	4		transformed
	m	(Lhf;Lqw;)V	a	load
		p	1		blockLookup
		p	2		nbt
	m	(Lhf;Lrc;Lrc;)V	a	loadPalette
		p	1		blockLookup
		p	2		palette
		p	3		blocks
	m	(Ljava/lang/String;)V	a	setAuthor
		p	1		author
	m	(Ljava/util/List;Ljava/util/List;Ljava/util/List;)Ljava/util/List;	a	buildInfoList
		p	0		fullBlocks
		p	1		blocksWithNbt
		p	2		otherBlocks
	m	(Lqw;)Lqw;	a	save
		p	1		nbt
	m	([D)Lrc;	a	newDoubleList
		p	1		doubles
	m	([I)Lrc;	a	newIntegerList
		p	1		ints
	m	()Ljava/lang/String;	b	getAuthor
	m	(Ldyx;Lgw;)Ldva;	b	getBoundingBox
		p	1		placementData
		p	2		pos
	m	(Ldzb$c;)I	b	lambda$buildInfoList$1
		p	0		blockInfo
	m	(Ldzb$c;)I	c	lambda$buildInfoList$0
		p	0		blockInfo
	f	Ljava/lang/String;	a	PALETTE_TAG
	f	Ljava/lang/String;	b	PALETTE_LIST_TAG
	f	Ljava/lang/String;	c	ENTITIES_TAG
	f	Ljava/lang/String;	d	BLOCKS_TAG
	f	Ljava/lang/String;	e	BLOCK_TAG_POS
	f	Ljava/lang/String;	f	BLOCK_TAG_STATE
	f	Ljava/lang/String;	g	BLOCK_TAG_NBT
	f	Ljava/lang/String;	h	ENTITY_TAG_POS
	f	Ljava/lang/String;	i	ENTITY_TAG_BLOCKPOS
	f	Ljava/lang/String;	j	ENTITY_TAG_NBT
	f	Ljava/lang/String;	k	SIZE_TAG
	f	Ljava/util/List;	l	palettes
	f	Ljava/util/List;	m	entityInfoList
	f	Lhy;	n	size
	f	Ljava/lang/String;	o	author
c	dzb$1	net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$Rotation
	f	[I	b	$SwitchMap$net$minecraft$world$level$block$Mirror
c	dzb$a	net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$Palette
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		infos
	m	()Ljava/util/List;	a	blocks
	m	(Lcsv;)Ljava/util/List;	a	blocks
		p	1		block
	m	(Lcsv;Ldzb$c;)Z	a	lambda$blocks$0
		p	1		info
	m	(Lcsv;)Ljava/util/List;	b	lambda$blocks$1
		p	1		block2
	f	Ljava/util/List;	a	blocks
	f	Ljava/util/Map;	b	cache
c	dzb$b	net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$SimplePalette
	m	(I)Ldfj;	a	stateFor
		p	1		id
	m	(Ldfj;)I	a	idFor
		p	1		state
	m	(Ldfj;I)V	a	addMapping
		p	1		state
		p	2		id
	f	Ldfj;	a	DEFAULT_BLOCK_STATE
	f	Lhk;	b	ids
	f	I	c	lastId
c	dzb$c	net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo
	m	(Lgw;Ldfj;Lqw;)V	<init>	<init>
		p	1		pos
		p	2		state
		p	3		nbt
	m	()Lgw;	a	pos
	m	()Ldfj;	b	state
	m	()Lqw;	c	nbt
	f	Lgw;	a	pos
	f	Ldfj;	b	state
	f	Lqw;	c	nbt
c	dzb$d	net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureEntityInfo
	m	(Lehn;Lgw;Lqw;)V	<init>	<init>
		p	1		pos
		p	2		blockPos
		p	3		nbt
	f	Lehn;	a	pos
	f	Lgw;	b	blockPos
	f	Lqw;	c	nbt
c	dzc	net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager
	m	(Lant;Lecg$c;Lcom/mojang/datafixers/DataFixer;Lhf;)V	<init>	<init>
		p	1		resourceManager
		p	2		session
		p	3		dataFixer
		p	4		blockLookup
	m	()Ljava/util/stream/Stream;	a	listTemplates
	m	(ILjava/lang/String;)Ljava/lang/String;	a	lambda$listFolderContents$7
		p	1		filename
	m	(Laew;)Ldzb;	a	getOrCreate
		p	1		id
	m	(Laew;Ljava/lang/String;)Ljava/nio/file/Path;	a	getPathToGeneratedStructure
		p	1		id
		p	2		extension
	m	(Laew;Ljava/lang/Throwable;)V	a	lambda$loadFromResource$2
		p	1		throwable
	m	(Laew;Ljava/nio/file/Path;)Ljava/util/Optional;	a	loadFromSnbt
		p	1		id
		p	2		path
	m	(Lant;)V	a	onResourceManagerReload
		p	1		resourceManager
	m	(Ldzc$a;Ljava/util/function/Consumer;)Ljava/util/Optional;	a	load
		p	1		opener
		p	2		exceptionConsumer
	m	(Ldzc$b;)Ljava/util/stream/Stream;	a	lambda$listTemplates$0
		p	0		provider
	m	(Ljava/io/InputStream;)Ldzb;	a	readStructure
		p	1		templateIInputStream
	m	(Ljava/lang/String;Ljava/nio/file/Path;)Z	a	lambda$listFolderContents$8
		p	1		path
	m	(Ljava/lang/String;Ljava/util/function/Function;Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/util/function/Consumer;)V	a	lambda$listFolderContents$9
		p	4		path
		p	5		consumer
	m	(Ljava/nio/file/Path;)Ljava/util/stream/Stream;	a	listGeneratedInNamespace
		p	1		namespaceDirectory
	m	(Ljava/nio/file/Path;Laew;Ljava/lang/String;)Ljava/nio/file/Path;	a	createPathToStructure
		p	0		path
		p	1		id
		p	2		extension
	m	(Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;)Ljava/util/stream/Stream;	a	listFolderContents
		p	1		structuresDirectoryPath
		p	2		namespace
		p	3		extension
	m	(Ljava/nio/file/Path;Ljava/lang/Throwable;)V	a	lambda$loadFromGenerated$4
		p	1		throwable
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/lang/String;	a	relativize
		p	1		root
		p	2		path
	m	(Lqw;)Ldzb;	a	readStructure
		p	1		nbt
	m	()Ljava/util/stream/Stream;	b	listResources
	m	(Laew;)Ljava/util/Optional;	b	get
		p	1		id
	m	(Ljava/nio/file/Path;)Ljava/util/stream/Stream;	b	lambda$listGenerated$6
		p	1		path
	m	(Ljava/nio/file/Path;Laew;Ljava/lang/String;)Ljava/nio/file/Path;	b	createAndValidatePathToStructure
		p	0		path
		p	1		id
		p	2		extension
	m	()Ljava/util/stream/Stream;	c	listTestStructures
	m	(Laew;)Z	c	save
		p	1		id
	m	(Ljava/nio/file/Path;)Z	c	lambda$listGenerated$5
		p	0		path
	m	()Ljava/util/stream/Stream;	d	listGenerated
	m	(Laew;)V	d	remove
		p	1		id
	m	(Ljava/nio/file/Path;)Ljava/io/InputStream;	d	lambda$loadFromGenerated$3
	m	(Laew;)Ljava/util/Optional;	e	tryLoad
		p	1		id
	m	(Laew;)Ljava/util/Optional;	f	loadFromResource
		p	1		id
	m	(Laew;)Ljava/util/Optional;	g	loadFromTestStructures
		p	1		id
	m	(Laew;)Ljava/util/Optional;	h	loadFromGenerated
		p	1		id
	m	(Laew;)Ljava/io/InputStream;	i	lambda$loadFromResource$1
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/lang/String;	b	STRUCTURE_DIRECTORY_NAME
	f	Ljava/lang/String;	c	TEST_STRUCTURES_DIR
	f	Ljava/lang/String;	d	STRUCTURE_FILE_EXTENSION
	f	Ljava/lang/String;	e	STRUCTURE_TEXT_FILE_EXTENSION
	f	Ljava/util/Map;	f	structureRepository
	f	Lcom/mojang/datafixers/DataFixer;	g	fixerUpper
	f	Lant;	h	resourceManager
	f	Ljava/nio/file/Path;	i	generatedDir
	f	Ljava/util/List;	j	sources
	f	Lhf;	k	blockLookup
	f	Laep;	l	LISTER
c	dzc$a	net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager$InputStreamOpener
c	dzc$b	net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager$Source
	m	()Ljava/util/function/Function;	a	loader
	m	()Ljava/util/function/Supplier;	b	lister
	f	Ljava/util/function/Function;	a	loader
	f	Ljava/util/function/Supplier;	b	lister
c	dzd	net/minecraft/world/level/levelgen/structure/templatesystem/TagMatchTest
	m	(Laqh;)V	<init>	<init>
		p	1		tag
	m	()Ldyw;	a	getType
	m	(Ldfj;Lasc;)Z	a	test
		p	1		state
		p	2		random
	m	(Ldzd;)Laqh;	a	lambda$static$0
		p	0		ruleTest
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Laqh;	b	tag
c	dze	net/minecraft/world/level/levelgen/structure/templatesystem/package-info
c	dzf	net/minecraft/world/level/levelgen/structure/templatesystem/rule/blockentity/AppendLoot
	m	(Laew;)V	<init>	<init>
		p	1		lootTable
	m	()Ldzk;	a	getType
	m	(Lasc;Lqw;)Lqw;	a	apply
		p	1		random
		p	2		nbt
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Ldzf;)Laew;	a	lambda$static$0
		p	0		modifier
	m	(Lqw;Lrq;)V	a	lambda$apply$2
		p	1		nbtx
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Laew;	d	lootTable
c	dzg	net/minecraft/world/level/levelgen/structure/templatesystem/rule/blockentity/AppendStatic
	m	(Lqw;)V	<init>	<init>
		p	1		nbt
	m	()Ldzk;	a	getType
	m	(Lasc;Lqw;)Lqw;	a	apply
		p	1		random
		p	2		nbt
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Ldzg;)Lqw;	a	lambda$static$0
		p	0		modifier
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lqw;	b	tag
c	dzh	net/minecraft/world/level/levelgen/structure/templatesystem/rule/blockentity/Clear
	m	()Ldzk;	a	getType
	m	(Lasc;Lqw;)Lqw;	a	apply
		p	1		random
		p	2		nbt
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldzh;	b	INSTANCE
c	dzi	net/minecraft/world/level/levelgen/structure/templatesystem/rule/blockentity/Passthrough
	m	()Ldzk;	a	getType
	m	(Lasc;Lqw;)Lqw;	a	apply
		p	1		random
		p	2		nbt
	f	Ldzi;	a	INSTANCE
	f	Lcom/mojang/serialization/Codec;	b	CODEC
c	dzj	net/minecraft/world/level/levelgen/structure/templatesystem/rule/blockentity/RuleBlockEntityModifier
	m	()Ldzk;	a	getType
	m	(Lasc;Lqw;)Lqw;	a	apply
		p	1		random
		p	2		nbt
	f	Lcom/mojang/serialization/Codec;	c	CODEC
c	dzk	net/minecraft/world/level/levelgen/structure/templatesystem/rule/blockentity/RuleBlockEntityModifierType
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	lambda$register$0
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Ldzk;	a	register
		p	0		id
		p	1		codec
	f	Ldzk;	a	CLEAR
	f	Ldzk;	b	PASSTHROUGH
	f	Ldzk;	c	APPEND_STATIC
	f	Ldzk;	d	APPEND_LOOT
c	dzl	net/minecraft/world/level/levelgen/structure/templatesystem/rule/blockentity/package-info
c	dzm	net/minecraft/world/level/levelgen/synth/BlendedNoise
	m	(Lasc;DDDDD)V	<init>	<init>
		p	1		random
		p	2		xzScale
		p	4		yScale
		p	6		xzFactor
		p	8		yFactor
		p	10		smearScaleMultiplier
	m	(Ldzq;Ldzq;Ldzq;DDDDD)V	<init>	<init>
		p	1		lowerInterpolatedNoise
		p	2		upperInterpolatedNoise
		p	3		interpolationNoise
		p	4		xzScale
		p	6		yScale
		p	8		xzFactor
		p	10		yFactor
		p	12		smearScaleMultiplier
	m	()D	a	minValue
	m	(DDDDD)Ldzm;	a	createUnseeded
		p	0		xzScale
		p	2		yScale
		p	4		xzFactor
		p	6		yFactor
		p	8		smearScaleMultiplier
	m	(Lasc;)Ldzm;	a	withNewRandom
		p	1		random
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$5
	m	(Ldkl$b;)D	a	compute
		p	1		pos
	m	(Ldzm;)Ljava/lang/Double;	a	lambda$static$4
	m	(Ljava/lang/StringBuilder;)V	a	parityConfigString
		p	1		info
	m	()D	b	maxValue
	m	(Ldzm;)Ljava/lang/Double;	b	lambda$static$3
	m	()Larq;	c	codec
	m	(Ldzm;)Ljava/lang/Double;	c	lambda$static$2
	m	(Ldzm;)Ljava/lang/Double;	d	lambda$static$1
	m	(Ldzm;)Ljava/lang/Double;	e	lambda$static$0
	f	Larq;	a	CODEC
	f	Lcom/mojang/serialization/Codec;	e	SCALE_RANGE
	f	Lcom/mojang/serialization/MapCodec;	f	DATA_CODEC
	f	Ldzq;	g	minLimitNoise
	f	Ldzq;	h	maxLimitNoise
	f	Ldzq;	i	mainNoise
	f	D	j	xzMultiplier
	f	D	k	yMultiplier
	f	D	l	xzFactor
	f	D	m	yFactor
	f	D	n	smearScaleMultiplier
	f	D	o	maxValue
	f	D	p	xzScale
	f	D	q	yScale
c	dzn	net/minecraft/world/level/levelgen/synth/ImprovedNoise
	m	(Lasc;)V	<init>	<init>
		p	1		random
	m	(DDD)D	a	noise
		p	1		x
		p	3		y
		p	5		z
	m	(DDDDD)D	a	noise
		p	1		x
		p	3		y
		p	5		z
		p	7		yScale
		p	9		yMax
	m	(DDD[D)D	a	noiseWithDerivative
		p	1		x
		p	3		y
		p	5		z
	m	(I)I	a	p
		p	1		input
	m	(IDDD)D	a	gradDot
		p	0		hash
		p	1		x
		p	3		y
		p	5		z
	m	(IIIDDDD)D	a	sampleAndLerp
		p	1		sectionX
		p	2		sectionY
		p	3		sectionZ
		p	4		localX
		p	6		localY
		p	8		localZ
		p	10		fadeLocalY
	m	(IIIDDD[D)D	a	sampleWithDerivative
		p	1		sectionX
		p	2		sectionY
		p	3		sectionZ
		p	4		localX
		p	6		localY
		p	8		localZ
	m	(Ljava/lang/StringBuilder;)V	a	parityConfigString
		p	1		info
	f	D	a	xo
	f	D	b	yo
	f	D	c	zo
	f	F	d	SHIFT_UP_EPSILON
	f	[B	e	p
c	dzo	net/minecraft/world/level/levelgen/synth/NoiseUtils
	m	(DD)D	a	biasTowardsExtreme
	m	(Ljava/lang/StringBuilder;DDD[B)V	a	parityNoiseOctaveConfigString
		p	0		builder
		p	1		originX
		p	3		originY
		p	5		originZ
		p	7		permutation
	m	(Ljava/lang/StringBuilder;DDD[I)V	a	parityNoiseOctaveConfigString
		p	0		builder
		p	1		originX
		p	3		originY
		p	5		originZ
		p	7		permutation
c	dzp	net/minecraft/world/level/levelgen/synth/NormalNoise
	m	(Lasc;Ldzp$a;Z)V	<init>	<init>
		p	1		random
		p	2		parameters
		p	3		modern
	m	()D	a	maxValue
	m	(DDD)D	a	getValue
		p	1		x
		p	3		y
		p	5		z
	m	(I)D	a	expectedDeviation
		p	0		octaves
	m	(Lasc;I[D)Ldzp;	a	create
		p	0		random
		p	1		offset
		p	2		octaves
	m	(Lasc;Ldzp$a;)Ldzp;	a	createLegacyNetherBiome
		p	0		random
		p	1		parameters
	m	(Ljava/lang/StringBuilder;)V	a	parityConfigString
		p	1		info
	m	()Ldzp$a;	b	parameters
	m	(Lasc;Ldzp$a;)Ldzp;	b	create
		p	0		random
		p	1		parameters
	f	D	a	INPUT_FACTOR
	f	D	b	TARGET_DEVIATION
	f	D	c	valueFactor
	f	Ldzq;	d	first
	f	Ldzq;	e	second
	f	D	f	maxValue
	f	Ldzp$a;	g	parameters
c	dzp$a	net/minecraft/world/level/levelgen/synth/NormalNoise$NoiseParameters
	m	(ID[D)V	<init>	<init>
		p	1		firstOctave
		p	2		firstAmplitude
		p	4		amplitudes
	m	(ILjava/util/List;)V	<init>	<init>
		p	1		firstOctave
		p	2		amplitudes
	m	()I	a	firstOctave
	m	(DLit/unimi/dsi/fastutil/doubles/DoubleArrayList;)V	a	lambda$new$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Lit/unimi/dsi/fastutil/doubles/DoubleList;	b	amplitudes
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	I	c	firstOctave
	f	Lit/unimi/dsi/fastutil/doubles/DoubleList;	d	amplitudes
c	dzq	net/minecraft/world/level/levelgen/synth/PerlinNoise
	m	(Lasc;Lcom/mojang/datafixers/util/Pair;Z)V	<init>	<init>
		p	1		random
		p	2		firstOctaveAndAmplitudes
		p	3		xoroshiro
	m	()D	a	maxValue
	m	(D)D	a	maxBrokenValue
	m	(DDD)D	a	getValue
		p	1		x
		p	3		y
		p	5		z
	m	(DDDDDZ)D	a	getValue
		p	1		x
		p	3		y
		p	5		z
		p	7		yScale
		p	9		yMax
		p	11		useOrigin
	m	(I)Ldzn;	a	getOctaveNoise
		p	1		octave
	m	(Lasc;)V	a	skipOctave
		p	0		random
	m	(Lasc;ID[D)Ldzq;	a	create
		p	0		random
		p	1		offset
		p	2		firstAmplitude
		p	4		amplitudes
	m	(Lasc;ILit/unimi/dsi/fastutil/doubles/DoubleList;)Ldzq;	a	createLegacyForLegacyNetherBiome
		p	0		random
		p	1		offset
		p	2		amplitudes
	m	(Lasc;Ljava/util/List;)Ldzq;	a	create
		p	0		random
		p	1		octaves
	m	(Lasc;Ljava/util/stream/IntStream;)Ldzq;	a	createLegacyForBlendedNoise
		p	0		random
		p	1		octaves
	m	(Lit/unimi/dsi/fastutil/ints/IntSortedSet;)Lcom/mojang/datafixers/util/Pair;	a	makeAmplitudes
		p	0		octaves
	m	(Ljava/lang/Double;)Ljava/lang/String;	a	lambda$parityConfigString$1
	m	(Ljava/lang/StringBuilder;)V	a	parityConfigString
		p	1		info
	m	()I	b	firstOctave
	m	(D)D	b	wrap
		p	0		value
	m	(Lasc;ILit/unimi/dsi/fastutil/doubles/DoubleList;)Ldzq;	b	create
		p	0		random
		p	1		offset
		p	2		amplitudes
	m	(Lasc;Ljava/util/stream/IntStream;)Ldzq;	b	create
		p	0		random
		p	1		octaves
	m	(Ljava/lang/Double;)Z	b	lambda$new$0
		p	0		amplitude
	m	()Lit/unimi/dsi/fastutil/doubles/DoubleList;	c	amplitudes
	m	(D)D	c	edgeValue
		p	1		scale
	f	I	a	ROUND_OFF
	f	[Ldzn;	b	noiseLevels
	f	I	c	firstOctave
	f	Lit/unimi/dsi/fastutil/doubles/DoubleList;	d	amplitudes
	f	D	e	lowestFreqValueFactor
	f	D	f	lowestFreqInputFactor
	f	D	g	maxValue
c	dzr	net/minecraft/world/level/levelgen/synth/PerlinSimplexNoise
	m	(Lasc;Lit/unimi/dsi/fastutil/ints/IntSortedSet;)V	<init>	<init>
		p	1		random
		p	2		octaves
	m	(Lasc;Ljava/util/List;)V	<init>	<init>
		p	1		random
		p	2		octaves
	m	(DDZ)D	a	getValue
		p	1		x
		p	3		y
		p	5		useOrigin
	f	[Ldzs;	a	noiseLevels
	f	D	b	highestFreqValueFactor
	f	D	c	highestFreqInputFactor
c	dzs	net/minecraft/world/level/levelgen/synth/SimplexNoise
	m	(Lasc;)V	<init>	<init>
		p	1		random
	m	(DD)D	a	getValue
		p	1		x
		p	3		y
	m	(DDD)D	a	getValue
		p	1		x
		p	3		y
		p	5		z
	m	(I)I	a	p
		p	1		input
	m	(IDDDD)D	a	getCornerNoise3D
		p	1		hash
		p	2		x
		p	4		y
		p	6		z
		p	8		distance
	m	([IDDD)D	a	dot
		p	0		gradient
		p	1		x
		p	3		y
		p	5		z
	f	[[I	a	GRADIENT
	f	D	b	xo
	f	D	c	yo
	f	D	d	zo
	f	D	e	SQRT_3
	f	D	f	F2
	f	D	g	G2
	f	[I	h	p
c	dzt	net/minecraft/world/level/levelgen/synth/package-info
c	dzu	net/minecraft/world/level/lighting/BlockLightEngine
	m	(Ldht;)V	<init>	<init>
		p	1		chunkProvider
	m	(Ldht;Ldzv;)V	<init>	<init>
		p	1		chunkProvider
		p	2		blockLightStorage
	m	(J)V	a	checkNode
		p	1		blockPos
	m	(JJ)V	a	propagateDecrease
		p	1		blockPos
	m	(JJI)V	a	propagateIncrease
		p	1		blockPos
		p	5		lightLevel
	m	(JLdfj;)I	a	getEmission
		p	1		blockPos
		p	3		blockState
	m	(Lgw;Ldfj;)V	a	lambda$propagateLightSources$0
		p	1		blockPos
		p	2		blockState
	m	(Lcpc;)V	b	propagateLightSources
		p	1		chunkPos
	f	Lgw$a;	g	mutablePos
c	dzv	net/minecraft/world/level/lighting/BlockLightSectionStorage
	m	(Ldht;)V	<init>	<init>
		p	1		chunkProvider
	m	(J)I	a	getLightValue
		p	1		blockPos
c	dzv$a	net/minecraft/world/level/lighting/BlockLightSectionStorage$BlockDataLayerStorageMap
	m	(Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap;)V	<init>	<init>
		p	1		arrays
	m	()Ldzv$a;	a	copy
	m	()Ldzx;	b	copy
c	dzw	net/minecraft/world/level/lighting/ChunkSkyLightSources
	m	(Lcpx;)V	<init>	<init>
		p	1		heightLimitView
	m	()I	a	getHighestLowestSourceY
	m	(I)V	a	fill
		p	1		y
	m	(II)I	a	getLowestSourceY
		p	1		localX
		p	2		localZ
	m	(Lcpb;III)Z	a	update
		p	1		blockView
		p	2		localX
		p	3		y
		p	4		localZ
	m	(Lcpb;IILgw;Ldfj;Lgw;Ldfj;)Z	a	updateEdge
		p	1		blockView
		p	2		packedIndex
		p	3		value
		p	4		upperPos
		p	5		upperState
		p	6		lowerPos
		p	7		lowerState
	m	(Lcpb;Lgw;Ldfj;)I	a	findLowestSourceBelow
		p	1		blockView
		p	2		pos
		p	3		blockState
	m	(Lcpb;Lgw;Ldfj;Lgw;Ldfj;)Z	a	isEdgeOccluded
		p	0		blockView
		p	1		upperPos
		p	2		upperState
		p	3		lowerPos
		p	4		lowerState
	m	(Ldhf;)V	a	fillFrom
		p	1		chunk
	m	(Ldhf;III)I	a	findLowestSourceY
		p	1		chunk
		p	2		topSectionIndex
		p	3		localX
		p	4		localZ
	m	(I)I	b	get
		p	1		index
	m	(II)V	b	set
		p	1		index
		p	2		y
	m	(I)I	c	extendSourcesBelowWorld
		p	1		y
	m	(II)I	c	index
		p	0		localX
		p	1		localZ
	f	I	a	NEGATIVE_INFINITY
	f	I	b	SIZE
	f	I	c	minY
	f	Laqp;	d	heightmap
	f	Lgw$a;	e	mutablePos1
	f	Lgw$a;	f	mutablePos2
c	dzx	net/minecraft/world/level/lighting/DataLayerStorageMap
	m	(Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap;)V	<init>	<init>
		p	1		arrays
	m	(J)Ldhl;	a	copyDataLayer
		p	1		pos
	m	(JLdhl;)V	a	setLayer
		p	1		pos
		p	3		data
	m	()Ldzx;	b	copy
	m	(J)Z	b	hasLayer
		p	1		chunkPos
	m	()V	c	clearCache
	m	(J)Ldhl;	c	getLayer
		p	1		chunkPos
	m	()V	d	disableCache
	m	(J)Ldhl;	d	removeLayer
		p	1		chunkPos
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap;	a	map
	f	I	b	CACHE_SIZE
	f	[J	c	lastSectionKeys
	f	[Ldhl;	d	lastSections
	f	Z	e	cacheEnabled
c	dzy	net/minecraft/world/level/lighting/DynamicGraphMinFixedPoint
	m	(III)V	<init>	<init>
		p	1		levelCount
		p	2		expectedLevelSize
		p	3		expectedTotalSize
	m	(II)I	a	calculatePriority
		p	1		a
		p	2		b
	m	(J)Z	a	isSource
		p	1		id
	m	(JI)V	a	setLevel
		p	1		id
		p	3		level
	m	(JIZ)V	a	checkNeighborsAfterUpdate
		p	1		id
		p	3		level
		p	4		decrease
	m	(JJI)I	a	getComputedLevel
		p	1		id
		p	3		excludedId
		p	5		maxLevel
	m	(JJIIIZ)V	a	checkEdge
		p	1		sourceId
		p	3		id
		p	5		level
		p	6		currentLevel
		p	8		decrease
	m	(JJIZ)V	a	checkEdge
		p	1		sourceId
		p	3		id
		p	5		level
		p	6		decrease
	m	(Ljava/util/function/LongPredicate;)V	a	removeIf
		p	1		predicate
	m	(Ljava/util/function/LongPredicate;Lit/unimi/dsi/fastutil/longs/LongList;J)V	a	lambda$removeIf$0
	m	()Z	b	hasWork
	m	(I)I	b	runUpdates
		p	1		maxSteps
	m	(JJI)I	b	computeLevelFromNeighbor
		p	1		sourceId
		p	3		targetId
		p	5		level
	m	(JJIZ)V	b	checkNeighbor
		p	1		sourceId
		p	3		targetId
		p	5		level
		p	6		decrease
	m	()I	c	getQueueSize
	m	(J)I	c	getLevel
		p	1		id
	m	(J)V	e	removeFromQueue
		p	1		id
	m	(J)V	f	checkNode
		p	1		id
	f	I	a	NO_COMPUTED_LEVEL
	f	Leac;	b	priorityQueue
	f	Lit/unimi/dsi/fastutil/longs/Long2ByteMap;	c	computedLevels
	f	Z	d	hasWork
	f	J	e	SOURCE
	f	I	f	levelCount
c	dzy$1	net/minecraft/world/level/lighting/DynamicGraphMinFixedPoint$1
	f	I	a	val$minMapSize
	f	Ldzy;	b	this$0
c	dzz	net/minecraft/world/level/lighting/LayerLightEventListener
	m	(Lhw;)Ldhl;	a	getDataLayerData
		p	1		pos
	m	(Lgw;)I	b	getLightValue
		p	1		pos
c	dzz$a	net/minecraft/world/level/lighting/LayerLightEventListener$DummyLightLayerEventListener
	m	()Z	J_	hasLightWork
	m	()I	a	runLightUpdates
	m	(Lcpc;Z)V	a	setLightEnabled
		p	1		pos
		p	2		retainData
	m	(Lgw;)V	a	checkBlock
		p	1		pos
	m	(Lhw;)Ldhl;	a	getDataLayerData
		p	1		pos
	m	(Lhw;Z)V	a	updateSectionStatus
		p	1		pos
		p	2		notReady
	m	(Lcpc;)V	b	propagateLightSources
		p	1		chunkPos
	m	(Lgw;)I	b	getLightValue
		p	1		pos
	m	()[Ldzz$a;	c	$values
	f	Ldzz$a;	a	INSTANCE
	f	[Ldzz$a;	b	$VALUES
c	eaa	net/minecraft/world/level/lighting/LayerLightSectionStorage
	m	(Lcqe;Ldht;Ldzx;)V	<init>	<init>
		p	1		lightType
		p	2		chunkProvider
		p	3		lightData
	m	()Z	a	hasInconsistencies
	m	(J)I	a	getLightValue
		p	1		blockPos
	m	(JB)V	a	putSectionState
		p	1		sectionPos
		p	3		flags
	m	(JI)V	a	setStoredLevel
		p	1		blockPos
		p	3		value
	m	(JLdhl;)V	a	queueSectionData
		p	1		sectionPos
		p	3		array
	m	(JZ)Ldhl;	a	getDataLayer
		p	1		sectionPos
		p	3		cached
	m	(Ldzx;J)Ldhl;	a	getDataLayer
		p	1		storage
		p	2		sectionPos
	m	(Lead;)V	a	markNewInconsistencies
		p	1		lightProvider
	m	()V	b	swapSectionMap
	m	(J)Z	b	storingLightForSection
		p	1		sectionPos
	m	(JZ)V	b	setLightEnabled
		p	1		columnPos
		p	3		enabled
	m	(J)Ldhl;	c	getDataLayerToWrite
		p	1		sectionPos
	m	(JZ)V	c	retainData
		p	1		sectionPos
		p	3		retain
	m	(J)Ldhl;	d	getDataLayerData
		p	1		sectionPos
	m	(JZ)V	d	updateSectionStatus
		p	1		sectionPos
		p	3		notReady
	m	(J)I	e	getStoredLevel
		p	1		blockPos
	m	(J)V	f	markSectionAndNeighborsAsAffected
		p	1		id
	m	(J)Ldhl;	g	createDataLayer
		p	1		sectionPos
	m	(J)V	h	onNodeAdded
		p	1		sectionPos
	m	(J)V	i	onNodeRemoved
		p	1		sectionPos
	m	(J)Z	j	lightOnInSection
		p	1		sectionPos
	m	(J)Leaa$b;	k	getDebugSectionType
		p	1		sectionPos
	m	(J)V	l	initializeSection
		p	1		sectionPos
	m	(J)V	m	removeSection
		p	1		sectionPos
	f	Ldht;	a	chunkSource
	f	Lit/unimi/dsi/fastutil/longs/Long2ByteMap;	b	sectionStates
	f	Ldzx;	c	visibleSectionData
	f	Ldzx;	d	updatingSectionData
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	e	changedSections
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	f	sectionsAffectedByLightUpdates
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	g	queuedSections
	f	Z	h	hasInconsistencies
	f	Lcqe;	i	layer
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	j	columnsWithSources
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	k	columnsToRetainQueuedDataFor
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	l	toRemove
c	eaa$a	net/minecraft/world/level/lighting/LayerLightSectionStorage$SectionState
	m	(B)Z	a	hasData
		p	0		packed
	m	(BI)B	a	neighborCount
		p	0		packed
		p	1		neighborCount
	m	(BZ)B	a	hasData
		p	0		packed
		p	1		ready
	m	(B)I	b	neighborCount
		p	0		packed
	m	(B)Leaa$b;	c	type
		p	0		packed
	f	B	a	EMPTY
	f	I	b	MIN_NEIGHBORS
	f	I	c	MAX_NEIGHBORS
	f	B	d	HAS_DATA_BIT
	f	B	e	NEIGHBOR_COUNT_BITS
c	eaa$b	net/minecraft/world/level/lighting/LayerLightSectionStorage$SectionType
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		sigil
	m	()Ljava/lang/String;	a	display
	m	()[Leaa$b;	b	$values
	f	Leaa$b;	a	EMPTY
	f	Leaa$b;	b	LIGHT_ONLY
	f	Leaa$b;	c	LIGHT_AND_DATA
	f	Ljava/lang/String;	d	display
	f	[Leaa$b;	e	$VALUES
c	eab	net/minecraft/world/level/lighting/LevelLightEngine
	m	(Ldht;ZZ)V	<init>	<init>
		p	1		chunkProvider
		p	2		hasBlockLight
		p	3		hasSkyLight
	m	()Z	J_	hasLightWork
	m	()I	a	runLightUpdates
	m	(Lcpc;Z)V	a	setLightEnabled
		p	1		pos
		p	2		retainData
	m	(Lcqe;)Ldzz;	a	getLayerListener
		p	1		lightType
	m	(Lcqe;Lhw;)Ljava/lang/String;	a	getDebugData
		p	1		lightType
		p	2		pos
	m	(Lcqe;Lhw;Ldhl;)V	a	queueSectionData
		p	1		lightType
		p	2		pos
		p	3		nibbles
	m	(Lgw;)V	a	checkBlock
		p	1		pos
	m	(Lgw;I)I	a	getRawBrightness
		p	1		pos
		p	2		ambientDarkness
	m	(Lhw;)Z	a	lightOnInSection
		p	1		sectionPos
	m	(Lhw;Z)V	a	updateSectionStatus
		p	1		pos
		p	2		notReady
	m	(Lcpc;)V	b	propagateLightSources
		p	1		chunkPos
	m	(Lcpc;Z)V	b	retainData
		p	1		pos
		p	2		retainData
	m	(Lcqe;Lhw;)Leaa$b;	b	getDebugSectionType
		p	1		lightType
		p	2		pos
	m	()I	c	getLightSectionCount
	m	()I	d	getMinLightSection
	m	()I	e	getMaxLightSection
	f	Lead;	a	blockEngine
	f	I	b	LIGHT_SECTION_PADDING
	f	Lcpx;	c	levelHeightAccessor
	f	Lead;	d	skyEngine
c	eac	net/minecraft/world/level/lighting/LeveledPriorityQueue
	m	(II)V	<init>	<init>
		p	1		levelCount
		p	2		expectedLevelSize
	m	()J	a	removeFirstLong
	m	(I)V	a	checkFirstQueuedLevel
		p	1		maxLevel
	m	(JI)V	a	enqueue
		p	1		id
		p	3		level
	m	(JII)V	a	dequeue
		p	1		id
		p	3		level
		p	4		levelCount
	m	()Z	b	isEmpty
	f	I	a	levelCount
	f	[Lit/unimi/dsi/fastutil/longs/LongLinkedOpenHashSet;	b	queues
	f	I	c	firstQueuedLevel
c	eac$1	net/minecraft/world/level/lighting/LeveledPriorityQueue$1
	f	I	a	val$minSize
	f	Leac;	b	this$0
c	ead	net/minecraft/world/level/lighting/LightEngine
	m	(Ldht;Leaa;)V	<init>	<init>
		p	1		chunkProvider
		p	2		lightStorage
	m	()Z	J_	hasLightWork
	m	()I	a	runLightUpdates
	m	(II)Ldhs;	a	getChunk
		p	1		chunkX
		p	2		chunkZ
	m	(J)V	a	checkNode
		p	1		blockPos
	m	(JJ)V	a	propagateDecrease
		p	1		blockPos
	m	(JJI)V	a	propagateIncrease
		p	1		blockPos
		p	5		lightLevel
	m	(JLdfj;JLdfj;Lha;)Z	a	shapeOccludes
		p	1		sourceId
		p	3		sourceState
		p	4		targetId
		p	6		targetState
		p	7		direction
	m	(JLdhl;)V	a	queueSectionData
		p	1		sectionPos
		p	3		lightArray
	m	(Lcpb;Ldfj;Lgw;Ldfj;Lgw;Lha;I)I	a	getLightBlockInto
		p	0		world
		p	1		state1
		p	2		pos1
		p	3		state2
		p	4		pos2
		p	5		direction
		p	6		opacity2
	m	(Lcpb;Lgw;Ldfj;Ldfj;)Z	a	hasDifferentLightProperties
		p	0		blockView
		p	1		pos
		p	2		oldState
		p	3		newState
	m	(Lcpb;Lgw;Ldfj;Lha;)Leig;	a	getOcclusionShape
		p	0		blockView
		p	1		pos
		p	2		blockState
		p	3		direction
	m	(Lcpc;Z)V	a	setLightEnabled
		p	1		pos
		p	2		retainData
	m	(Ldfj;)Z	a	isEmptyShape
		p	0		blockState
	m	(Ldfj;JLha;)Leig;	a	getOcclusionShape
		p	1		blockState
		p	2		pos
		p	4		direction
	m	(Ldfj;Lgw;)I	a	getOpacity
		p	1		state
		p	2		pos
	m	(Lgw;)V	a	checkBlock
		p	1		pos
	m	(Lhw;)Ldhl;	a	getDataLayerData
		p	1		pos
	m	(Lhw;Z)V	a	updateSectionStatus
		p	1		pos
		p	2		notReady
	m	(J)Ljava/lang/String;	b	getDebugData
		p	1		sectionPos
	m	(JJ)V	b	enqueueDecrease
		p	1		blockPos
		p	3		flags
	m	(Lcpc;Z)V	b	retainData
		p	1		pos
		p	2		retainData
	m	(Lgw;)I	b	getLightValue
		p	1		pos
	m	()V	c	clearChunkCache
	m	(J)Leaa$b;	c	getDebugSectionType
		p	1		sectionPos
	m	(JJ)V	c	enqueueIncrease
		p	1		blockPos
		p	3		flags
	m	(Lgw;)Ldfj;	c	getState
		p	1		pos
	m	()I	d	propagateIncreases
	m	()I	e	propagateDecreases
	f	I	a	MAX_LEVEL
	f	I	b	MIN_OPACITY
	f	J	c	PULL_LIGHT_IN_ENTRY
	f	[Lha;	d	PROPAGATION_DIRECTIONS
	f	Ldht;	e	chunkSource
	f	Leaa;	f	storage
	f	I	g	MIN_QUEUE_SIZE
	f	Lit/unimi/dsi/fastutil/longs/LongOpenHashSet;	h	blockNodesToCheck
	f	Lit/unimi/dsi/fastutil/longs/LongArrayFIFOQueue;	i	decreaseQueue
	f	Lit/unimi/dsi/fastutil/longs/LongArrayFIFOQueue;	j	increaseQueue
	f	Lgw$a;	k	mutablePos
	f	I	l	CACHE_SIZE
	f	[J	m	lastChunkPos
	f	[Ldhs;	n	lastChunk
c	ead$a	net/minecraft/world/level/lighting/LightEngine$QueueEntry
	m	(I)J	a	decreaseAllDirections
		p	0		lightLevel
	m	(ILha;)J	a	decreaseSkipOneDirection
		p	0		lightLevel
		p	1		direction
	m	(IZ)J	a	increaseLightFromEmission
		p	0		lightLevel
		p	1		trivial
	m	(IZLha;)J	a	increaseSkipOneDirection
		p	0		lightLevel
		p	1		trivial
		p	2		direction
	m	(J)I	a	getFromLevel
		p	0		packed
	m	(JI)J	a	withLevel
		p	0		packed
		p	2		lightLevel
	m	(JLha;)Z	a	shouldPropagateInDirection
		p	0		packed
		p	2		direction
	m	(ZZZZZ)J	a	increaseSkySourceInDirections
		p	0		down
		p	1		north
		p	2		south
		p	3		west
		p	4		east
	m	(IZLha;)J	b	increaseOnlyOneDirection
		p	0		lightLevel
		p	1		trivial
		p	2		direction
	m	(J)Z	b	isFromEmptyShape
		p	0		packed
	m	(JLha;)J	b	withDirection
		p	0		packed
		p	2		direction
	m	(J)Z	c	isIncreaseFromEmission
		p	0		packed
	m	(JLha;)J	c	withoutDirection
		p	0		packed
		p	2		direction
	f	I	a	FROM_LEVEL_BITS
	f	I	b	DIRECTION_BITS
	f	J	c	LEVEL_MASK
	f	J	d	DIRECTIONS_MASK
	f	J	e	FLAG_FROM_EMPTY_SHAPE
	f	J	f	FLAG_INCREASE_FROM_EMISSION
c	eae	net/minecraft/world/level/lighting/LightEventListener
	m	()Z	J_	hasLightWork
	m	()I	a	runLightUpdates
	m	(Lcpc;Z)V	a	setLightEnabled
		p	1		pos
		p	2		retainData
	m	(Lgw;)V	a	checkBlock
		p	1		pos
	m	(Lgw;Z)V	a	updateSectionStatus
		p	1		pos
		p	2		notReady
	m	(Lhw;Z)V	a	updateSectionStatus
		p	1		pos
		p	2		notReady
	m	(Lcpc;)V	b	propagateLightSources
		p	1		chunkPos
c	eaf	net/minecraft/world/level/lighting/SkyLightEngine
	m	(Ldht;)V	<init>	<init>
		p	1		chunkProvider
	m	(Ldht;Leag;)V	<init>	<init>
		p	1		chunkProvider
		p	2		lightStorage
	m	(I)Z	a	isSourceLevel
	m	(III)I	a	getLowestSourceY
		p	1		x
		p	2		z
	m	(IIII)V	a	removeSourcesBelow
		p	1		x
		p	2		z
	m	(J)V	a	checkNode
		p	1		blockPos
	m	(JJ)V	a	propagateDecrease
		p	1		blockPos
	m	(JJI)V	a	propagateIncrease
		p	1		blockPos
		p	5		lightLevel
	m	(JLha;IZI)V	a	propagateFromEmptySections
		p	1		blockPos
		p	3		direction
		p	4		lightLevel
	m	(Lcpc;Z)V	a	setLightEnabled
		p	1		pos
		p	2		retainData
	m	(Lha;II)Z	a	crossedSectionEdge
		p	0		direction
		p	1		localX
		p	2		localZ
	m	(II)Ldzw;	b	getChunkSources
		p	1		chunkX
		p	2		chunkZ
	m	(III)V	b	updateSourcesInColumn
	m	(IIII)V	b	addSourcesAbove
	m	(Lcpc;)V	b	propagateLightSources
		p	1		chunkPos
	m	(J)I	d	countEmptySectionsBelowIfAtBorder
		p	1		blockPos
	f	J	g	REMOVE_TOP_SKY_SOURCE_ENTRY
	f	J	h	REMOVE_SKY_SOURCE_ENTRY
	f	J	i	ADD_SKY_SOURCE_ENTRY
	f	Lgw$a;	j	mutablePos
	f	Ldzw;	k	emptyChunkSources
c	eaf$1	net/minecraft/world/level/lighting/SkyLightEngine$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	eag	net/minecraft/world/level/lighting/SkyLightSectionStorage
	m	(Ldht;)V	<init>	<init>
		p	1		chunkProvider
	m	(I)Z	a	hasLightDataAtOrBelow
		p	1		sectionY
	m	(J)I	a	getLightValue
		p	1		blockPos
	m	(Ldhl;)Ldhl;	a	repeatFirstLayer
		p	0		source
	m	()I	c	getBottomSectionY
	m	(JZ)I	e	getLightValue
		p	1		blockPos
		p	3		cached
	m	(J)Ldhl;	g	createDataLayer
		p	1		sectionPos
	m	(J)V	h	onNodeAdded
		p	1		sectionPos
	m	(J)V	i	onNodeRemoved
		p	1		sectionPos
	m	(J)Z	l	isAboveData
		p	1		sectionPos
	m	(J)I	m	getTopSectionY
		p	1		columnPos
c	eag$a	net/minecraft/world/level/lighting/SkyLightSectionStorage$SkyDataLayerStorageMap
	m	(Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap;Lit/unimi/dsi/fastutil/longs/Long2IntOpenHashMap;I)V	<init>	<init>
		p	1		arrays
		p	2		columnToTopSection
		p	3		minSectionY
	m	()Leag$a;	a	copy
	m	()Ldzx;	b	copy
	f	I	b	currentLowestY
	f	Lit/unimi/dsi/fastutil/longs/Long2IntOpenHashMap;	c	topSections
c	eah	net/minecraft/world/level/lighting/SpatialLongSet
	m	(IF)V	<init>	<init>
		p	1		expectedSize
		p	2		loadFactor
	f	Leah$a;	a	map
c	eah$a	net/minecraft/world/level/lighting/SpatialLongSet$InternalMap
	m	(IF)V	<init>	<init>
		p	1		expectedSize
		p	2		loadFactor
	m	()J	a	removeFirstBit
	m	(IJ)Z	a	replaceBit
		p	1		index
		p	2		mask
	m	(J)J	a	getOuterKey
		p	0		posLong
	m	(JI)J	a	getFullKey
		p	0		key
		p	2		valueLength
	m	(IJ)Z	b	removeFromEntry
		p	1		index
		p	2		mask
	m	(J)I	b	getInnerKey
		p	0		posLong
	m	(J)Z	c	addBit
		p	1		posLong
	m	(J)Z	d	removeBit
		p	1		posLong
	m	(J)Z	e	removeFromNullEntry
		p	1		mask
	f	I	a	X_BITS
	f	I	b	Z_BITS
	f	I	c	Y_BITS
	f	I	d	Y_OFFSET
	f	I	e	Z_OFFSET
	f	I	g	X_OFFSET
	f	J	h	OUTER_MASK
	f	I	i	lastPos
	f	J	j	lastOuterKey
	f	I	k	minSize
c	eai	net/minecraft/world/level/lighting/package-info
c	eaj	net/minecraft/world/level/material/EmptyFluid
	m	()Lcja;	a	getBucket
	m	(Lcpb;Lgw;Leam;)Lehn;	a	getFlow
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcpy;)I	a	getTickDelay
		p	1		world
	m	(Leam;)F	a	getOwnHeight
		p	1		state
	m	(Leam;Lcpb;Lgw;)F	a	getHeight
		p	1		state
		p	2		world
		p	3		pos
	m	(Leam;Lcpb;Lgw;Leal;Lha;)Z	a	canBeReplacedWith
		p	1		state
		p	2		world
		p	3		pos
		p	4		fluid
		p	5		direction
	m	()Z	b	isEmpty
	m	(Leam;)Ldfj;	b	createLegacyBlock
		p	1		state
	m	(Leam;Lcpb;Lgw;)Leig;	b	getShape
		p	1		state
		p	2		world
		p	3		pos
	m	()F	c	getExplosionResistance
	m	(Leam;)Z	c	isSource
		p	1		state
	m	(Leam;)I	d	getAmount
		p	1		state
c	eak	net/minecraft/world/level/material/FlowingFluid
	m	(IZ)Leam;	a	getFlowing
		p	1		level
		p	2		falling
	m	(Lcpb;Leal;Lgw;Ldfj;Lgw;Ldfj;)Z	a	isWaterHole
		p	1		world
		p	2		fluid
		p	3		pos
		p	4		state
		p	5		fromPos
		p	6		fromState
	m	(Lcpb;Leal;Lgw;Ldfj;Lha;Lgw;Ldfj;Leam;)Z	a	canPassThrough
		p	1		world
		p	2		fluid
		p	3		pos
		p	4		state
		p	5		face
		p	6		fromPos
		p	7		fromState
		p	8		fluidState
	m	(Lcpb;Lgw;Ldfj;Leal;)Z	a	canHoldFluid
		p	1		world
		p	2		pos
		p	3		state
		p	4		fluid
	m	(Lcpb;Lgw;Ldfj;Lha;Lgw;Ldfj;Leam;Leal;)Z	a	canSpreadTo
		p	1		world
		p	2		fluidPos
		p	3		fluidBlockState
		p	4		flowDirection
		p	5		flowTo
		p	6		flowToBlockState
		p	7		fluidState
		p	8		fluid
	m	(Lcpb;Lgw;Leam;)Lehn;	a	getFlow
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcpb;Lgw;Lha;)Z	a	isSolidFace
		p	1		world
		p	2		pos
		p	3		direction
	m	(Lcpv;)Z	a	canConvertToSource
		p	1		world
	m	(Lcpv;Lgw;Ldfj;)Leam;	a	getNewLiquid
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcpv;Lgw;Leam;)V	a	spread
		p	1		world
		p	2		fluidPos
		p	3		state
	m	(Lcpv;Lgw;Leam;Ldfj;)V	a	spreadToSides
		p	1		world
		p	2		pos
		p	3		fluidState
		p	4		blockState
	m	(Lcpv;Lgw;Leam;Leam;)I	a	getSpreadDelay
		p	1		world
		p	2		pos
		p	3		oldState
		p	4		newState
	m	(Lcpv;Lgw;Lgw;Ldfj;S)Z	a	lambda$getSpread$4
	m	(Lcpv;Lgw;S)Lcom/mojang/datafixers/util/Pair;	a	lambda$getSpread$3
	m	(Lcpw;Lgw;Ldfj;)V	a	beforeDestroyingBlock
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcpw;Lgw;Ldfj;Lha;Leam;)V	a	spreadTo
		p	1		world
		p	2		pos
		p	3		state
		p	4		direction
		p	5		fluidState
	m	(Lcpy;Lgw;)I	a	sourceNeighborCount
		p	1		world
		p	2		pos
	m	(Lcpy;Lgw;ILha;Ldfj;Lgw;Lit/unimi/dsi/fastutil/shorts/Short2ObjectMap;Lit/unimi/dsi/fastutil/shorts/Short2BooleanMap;)I	a	getSlopeDistance
		p	1		world
		p	2		pos
		p	4		direction
		p	5		state
		p	6		fromPos
		p	7		stateCache
		p	8		flowDownCache
	m	(Lcpy;Lgw;S)Lcom/mojang/datafixers/util/Pair;	a	lambda$getSlopeDistance$1
	m	(Ldfk$a;)V	a	createFluidStateDefinition
		p	1		builder
	m	(Leam;)F	a	getOwnHeight
		p	1		state
	m	(Leam;Lcpb;Lgw;)F	a	getHeight
		p	1		state
		p	2		world
		p	3		pos
	m	(Lgw;Lcpy;Ldfj;S)Z	a	lambda$getSlopeDistance$2
	m	(Lgw;Lgw;)S	a	getCacheKey
		p	0		from
		p	1		to
	m	(Lha;Lcpb;Lgw;Ldfj;Lgw;Ldfj;)Z	a	canPassThroughWall
		p	1		face
		p	2		world
		p	3		pos
		p	4		state
		p	5		fromPos
		p	6		fromState
	m	(Z)Leam;	a	getSource
		p	1		falling
	m	(Lcpb;Lgw;Leam;)Leig;	b	lambda$getShape$5
		p	2		state2
	m	(Lcpv;Lgw;Ldfj;)Ljava/util/Map;	b	getSpread
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcpv;Lgw;Leam;)V	b	tick
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcpy;)I	b	getSlopeFindDistance
		p	1		world
	m	(Leam;Lcpb;Lgw;)Leig;	b	getShape
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcpy;)I	c	getDropOff
		p	1		world
	m	(Leam;Lcpb;Lgw;)Z	c	hasSameAbove
		p	0		state
		p	1		world
		p	2		pos
	m	()Leal;	d	getFlowing
	m	(Leam;)I	d	getAmount
		p	1		state
	m	()Leal;	e	getSource
	m	(Leam;)I	e	getLegacyLevel
		p	0		state
	m	(Leam;)Z	g	affectsFlow
		p	1		state
	m	(Leam;)Z	h	isSourceBlockOfThisType
		p	1		state
	m	()Lit/unimi/dsi/fastutil/objects/Object2ByteLinkedOpenHashMap;	l	lambda$static$0
	f	Ldga;	a	FALLING
	f	Ldgj;	b	LEVEL
	f	I	e	CACHE_SIZE
	f	Ljava/lang/ThreadLocal;	f	OCCLUSION_CACHE
	f	Ljava/util/Map;	g	shapes
c	eak$1	net/minecraft/world/level/material/FlowingFluid$1
c	eal	net/minecraft/world/level/material/Fluid
	m	()Lcja;	a	getBucket
	m	(Laqh;)Z	a	is
		p	1		tag
	m	(Lcpb;Lgw;Leam;)Lehn;	a	getFlow
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcpv;Lgw;Leam;Lasc;)V	a	animateTick
		p	1		world
		p	2		pos
		p	3		state
		p	4		random
	m	(Lcpy;)I	a	getTickDelay
		p	1		world
	m	(Ldfk$a;)V	a	createFluidStateDefinition
		p	1		builder
	m	(Leal;)Z	a	isSame
		p	1		fluid
	m	(Leam;)F	a	getOwnHeight
		p	1		state
	m	(Leam;Lcpb;Lgw;)F	a	getHeight
		p	1		state
		p	2		world
		p	3		pos
	m	(Leam;Lcpb;Lgw;Leal;Lha;)Z	a	canBeReplacedWith
		p	1		state
		p	2		world
		p	3		pos
		p	4		fluid
		p	5		direction
	m	()Z	b	isEmpty
	m	(Lcpv;Lgw;Leam;)V	b	tick
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcpv;Lgw;Leam;Lasc;)V	b	randomTick
		p	1		world
		p	2		pos
		p	3		state
		p	4		random
	m	(Leam;)Ldfj;	b	createLegacyBlock
		p	1		state
	m	(Leam;Lcpb;Lgw;)Leig;	b	getShape
		p	1		state
		p	2		world
		p	3		pos
	m	()F	c	getExplosionResistance
	m	(Leam;)Z	c	isSource
		p	1		state
	m	(Leam;)I	d	getAmount
		p	1		state
	m	()Ldfk;	f	getStateDefinition
	m	(Leam;)V	f	registerDefaultState
		p	1		state
	m	()Leam;	g	defaultFluidState
	m	()Lit;	h	getDripParticle
	m	()Z	i	isRandomlyTicking
	m	()Ljava/util/Optional;	j	getPickupSound
	m	()Lhe$c;	k	builtInRegistryHolder
	f	Leam;	a	defaultFluidState
	f	Lhe$c;	b	builtInRegistryHolder
	f	Lhk;	c	FLUID_STATE_REGISTRY
	f	Ldfk;	d	stateDefinition
c	eam	net/minecraft/world/level/material/FluidState
	m	(Leal;Lcom/google/common/collect/ImmutableMap;Lcom/mojang/serialization/MapCodec;)V	<init>	<init>
		p	1		fluid
		p	2		propertiesMap
		p	3		codec
	m	()Leal;	a	getType
	m	(Laqh;)Z	a	is
		p	1		tag
	m	(Lcpb;Lgw;)F	a	getHeight
		p	1		world
		p	2		pos
	m	(Lcpb;Lgw;Leal;Lha;)Z	a	canBeReplacedWith
		p	1		world
		p	2		pos
		p	3		fluid
		p	4		direction
	m	(Lcpv;Lgw;)V	a	tick
		p	1		world
		p	2		pos
	m	(Lcpv;Lgw;Lasc;)V	a	animateTick
		p	1		world
		p	2		pos
		p	3		random
	m	(Leal;)Z	a	isSourceOfType
		p	1		fluid
	m	(Lhi;)Z	a	is
		p	1		fluids
	m	()Z	b	isSource
	m	(Lcpb;Lgw;)Z	b	shouldRenderBackwardUpFace
		p	1		world
		p	2		pos
	m	(Lcpv;Lgw;Lasc;)V	b	randomTick
		p	1		world
		p	2		pos
		p	3		random
	m	(Leal;)Z	b	is
		p	1		fluid
	m	()Z	c	isEmpty
	m	(Lcpb;Lgw;)Lehn;	c	getFlow
		p	1		world
		p	2		pos
	m	()F	d	getOwnHeight
	m	(Lcpb;Lgw;)Leig;	d	getShape
		p	1		world
		p	2		pos
	m	()I	e	getAmount
	m	()Z	f	isRandomlyTicking
	m	()Ldfj;	g	createLegacyBlock
	m	()Lit;	h	getDripParticle
	m	()F	i	getExplosionResistance
	m	()Lhe;	j	holder
	m	()Ljava/util/stream/Stream;	k	getTags
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	AMOUNT_MAX
	f	I	g	AMOUNT_FULL
c	ean	net/minecraft/world/level/material/Fluids
	m	(Ljava/lang/String;Leal;)Leal;	a	register
		p	0		id
		p	1		value
	f	Leal;	a	EMPTY
	f	Leak;	b	FLOWING_WATER
	f	Leak;	c	WATER
	f	Leak;	d	FLOWING_LAVA
	f	Leak;	e	LAVA
c	eao	net/minecraft/world/level/material/FogType
	m	()[Leao;	a	$values
	f	Leao;	a	LAVA
	f	Leao;	b	WATER
	f	Leao;	c	POWDER_SNOW
	f	Leao;	d	NONE
	f	[Leao;	e	$VALUES
c	eap	net/minecraft/world/level/material/LavaFluid
	m	()Lcja;	a	getBucket
	m	(Lcpv;)Z	a	canConvertToSource
		p	1		world
	m	(Lcpv;Lgw;Leam;Lasc;)V	a	animateTick
		p	1		world
		p	2		pos
		p	3		state
		p	4		random
	m	(Lcpv;Lgw;Leam;Leam;)I	a	getSpreadDelay
		p	1		world
		p	2		pos
		p	3		oldState
		p	4		newState
	m	(Lcpw;Lgw;)V	a	fizz
		p	1		world
		p	2		pos
	m	(Lcpw;Lgw;Ldfj;)V	a	beforeDestroyingBlock
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcpw;Lgw;Ldfj;Lha;Leam;)V	a	spreadTo
		p	1		world
		p	2		pos
		p	3		state
		p	4		direction
		p	5		fluidState
	m	(Lcpy;)I	a	getTickDelay
		p	1		world
	m	(Lcpy;Lgw;)Z	a	hasFlammableNeighbours
		p	1		world
		p	2		pos
	m	(Leal;)Z	a	isSame
		p	1		fluid
	m	(Leam;Lcpb;Lgw;Leal;Lha;)Z	a	canBeReplacedWith
		p	1		state
		p	2		world
		p	3		pos
		p	4		fluid
		p	5		direction
	m	(Lcpv;Lgw;Leam;Lasc;)V	b	randomTick
		p	1		world
		p	2		pos
		p	3		state
		p	4		random
	m	(Lcpy;)I	b	getSlopeFindDistance
		p	1		world
	m	(Lcpy;Lgw;)Z	b	isFlammable
		p	1		world
		p	2		pos
	m	(Leam;)Ldfj;	b	createLegacyBlock
		p	1		state
	m	()F	c	getExplosionResistance
	m	(Lcpy;)I	c	getDropOff
		p	1		world
	m	()Leal;	d	getFlowing
	m	()Leal;	e	getSource
	m	()Lit;	h	getDripParticle
	m	()Z	i	isRandomlyTicking
	m	()Ljava/util/Optional;	j	getPickupSound
	f	F	e	MIN_LEVEL_CUTOFF
c	eap$a	net/minecraft/world/level/material/LavaFluid$Flowing
	m	(Ldfk$a;)V	a	createFluidStateDefinition
		p	1		builder
	m	(Leam;)Z	c	isSource
		p	1		state
	m	(Leam;)I	d	getAmount
		p	1		state
c	eap$b	net/minecraft/world/level/material/LavaFluid$Source
	m	(Leam;)Z	c	isSource
		p	1		state
	m	(Leam;)I	d	getAmount
		p	1		state
c	eaq	net/minecraft/world/level/material/MapColor
	m	(II)V	<init>	<init>
		p	1		id
		p	2		color
	m	(I)Leaq;	a	byId
		p	0		id
	m	(Leaq$a;)I	a	calculateRGBColor
		p	1		brightness
	m	(I)I	b	getColorFromPackedId
		p	0		colorByte
	m	(Leaq$a;)B	b	getPackedId
		p	1		brightness
	m	(I)Leaq;	c	byIdUnsafe
		p	0		id
	f	Leaq;	A	COLOR_BROWN
	f	Leaq;	B	COLOR_GREEN
	f	Leaq;	C	COLOR_RED
	f	Leaq;	D	COLOR_BLACK
	f	Leaq;	E	GOLD
	f	Leaq;	F	DIAMOND
	f	Leaq;	G	LAPIS
	f	Leaq;	H	EMERALD
	f	Leaq;	I	PODZOL
	f	Leaq;	J	NETHER
	f	Leaq;	K	TERRACOTTA_WHITE
	f	Leaq;	L	TERRACOTTA_ORANGE
	f	Leaq;	M	TERRACOTTA_MAGENTA
	f	Leaq;	N	TERRACOTTA_LIGHT_BLUE
	f	Leaq;	O	TERRACOTTA_YELLOW
	f	Leaq;	P	TERRACOTTA_LIGHT_GREEN
	f	Leaq;	Q	TERRACOTTA_PINK
	f	Leaq;	R	TERRACOTTA_GRAY
	f	Leaq;	S	TERRACOTTA_LIGHT_GRAY
	f	Leaq;	T	TERRACOTTA_CYAN
	f	Leaq;	U	TERRACOTTA_PURPLE
	f	Leaq;	V	TERRACOTTA_BLUE
	f	Leaq;	W	TERRACOTTA_BROWN
	f	Leaq;	X	TERRACOTTA_GREEN
	f	Leaq;	Y	TERRACOTTA_RED
	f	Leaq;	Z	TERRACOTTA_BLACK
	f	Leaq;	a	NONE
	f	Leaq;	aa	CRIMSON_NYLIUM
	f	Leaq;	ab	CRIMSON_STEM
	f	Leaq;	ac	CRIMSON_HYPHAE
	f	Leaq;	ad	WARPED_NYLIUM
	f	Leaq;	ae	WARPED_STEM
	f	Leaq;	af	WARPED_HYPHAE
	f	Leaq;	ag	WARPED_WART_BLOCK
	f	Leaq;	ah	DEEPSLATE
	f	Leaq;	ai	RAW_IRON
	f	Leaq;	aj	GLOW_LICHEN
	f	I	ak	col
	f	I	al	id
	f	[Leaq;	am	MATERIAL_COLORS
	f	Leaq;	b	GRASS
	f	Leaq;	c	SAND
	f	Leaq;	d	WOOL
	f	Leaq;	e	FIRE
	f	Leaq;	f	ICE
	f	Leaq;	g	METAL
	f	Leaq;	h	PLANT
	f	Leaq;	i	SNOW
	f	Leaq;	j	CLAY
	f	Leaq;	k	DIRT
	f	Leaq;	l	STONE
	f	Leaq;	m	WATER
	f	Leaq;	n	WOOD
	f	Leaq;	o	QUARTZ
	f	Leaq;	p	COLOR_ORANGE
	f	Leaq;	q	COLOR_MAGENTA
	f	Leaq;	r	COLOR_LIGHT_BLUE
	f	Leaq;	s	COLOR_YELLOW
	f	Leaq;	t	COLOR_LIGHT_GREEN
	f	Leaq;	u	COLOR_PINK
	f	Leaq;	v	COLOR_GRAY
	f	Leaq;	w	COLOR_LIGHT_GRAY
	f	Leaq;	x	COLOR_CYAN
	f	Leaq;	y	COLOR_PURPLE
	f	Leaq;	z	COLOR_BLUE
c	eaq$a	net/minecraft/world/level/material/MapColor$Brightness
	m	(Ljava/lang/String;III)V	<init>	<init>
		p	3		id
		p	4		brightness
	m	()[Leaq$a;	a	$values
	m	(I)Leaq$a;	a	byId
		p	0		id
	m	(I)Leaq$a;	b	byIdUnsafe
		p	0		id
	f	Leaq$a;	a	LOW
	f	Leaq$a;	b	NORMAL
	f	Leaq$a;	c	HIGH
	f	Leaq$a;	d	LOWEST
	f	I	e	id
	f	I	f	modifier
	f	[Leaq$a;	g	VALUES
	f	[Leaq$a;	h	$VALUES
c	ear	net/minecraft/world/level/material/PushReaction
	m	()[Lear;	a	$values
	f	Lear;	a	NORMAL
	f	Lear;	b	DESTROY
	f	Lear;	c	BLOCK
	f	Lear;	d	IGNORE
	f	Lear;	e	PUSH_ONLY
	f	[Lear;	f	$VALUES
c	eas	net/minecraft/world/level/material/WaterFluid
	m	()Lcja;	a	getBucket
	m	(Lcpv;)Z	a	canConvertToSource
		p	1		world
	m	(Lcpv;Lgw;Leam;Lasc;)V	a	animateTick
		p	1		world
		p	2		pos
		p	3		state
		p	4		random
	m	(Lcpw;Lgw;Ldfj;)V	a	beforeDestroyingBlock
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcpy;)I	a	getTickDelay
		p	1		world
	m	(Leal;)Z	a	isSame
		p	1		fluid
	m	(Leam;Lcpb;Lgw;Leal;Lha;)Z	a	canBeReplacedWith
		p	1		state
		p	2		world
		p	3		pos
		p	4		fluid
		p	5		direction
	m	(Lcpy;)I	b	getSlopeFindDistance
		p	1		world
	m	(Leam;)Ldfj;	b	createLegacyBlock
		p	1		state
	m	()F	c	getExplosionResistance
	m	(Lcpy;)I	c	getDropOff
		p	1		world
	m	()Leal;	d	getFlowing
	m	()Leal;	e	getSource
	m	()Lit;	h	getDripParticle
	m	()Ljava/util/Optional;	j	getPickupSound
c	eas$a	net/minecraft/world/level/material/WaterFluid$Flowing
	m	(Ldfk$a;)V	a	createFluidStateDefinition
		p	1		builder
	m	(Leam;)Z	c	isSource
		p	1		state
	m	(Leam;)I	d	getAmount
		p	1		state
c	eas$b	net/minecraft/world/level/material/WaterFluid$Source
	m	(Leam;)Z	c	isSource
		p	1		state
	m	(Leam;)I	d	getAmount
		p	1		state
c	eat	net/minecraft/world/level/material/package-info
c	eau	net/minecraft/world/level/package-info
c	eav	net/minecraft/world/level/pathfinder/AmphibiousNodeEvaluator
	m	(Z)V	<init>	<init>
		p	1		penalizeDeepWater
	m	()Leaz;	a	getStart
	m	(DDD)Lebf;	a	getGoal
		p	1		x
		p	3		y
		p	5		z
	m	(Lcpb;III)Leax;	a	getBlockPathType
		p	1		world
		p	2		x
		p	3		y
		p	4		z
	m	(Lcqi;Lbji;)V	a	prepare
		p	1		cachedWorld
		p	2		entity
	m	([Leaz;Leaz;)I	a	getNeighbors
		p	1		successors
		p	2		node
	m	()V	b	done
	m	(Leaz;Leaz;)Z	b	isVerticalNeighborValid
		p	1		node
		p	2		successor
	m	()Z	c	isAmphibious
	f	Z	l	prefersShallowSwimming
	f	F	m	oldWalkableCost
	f	F	n	oldWaterBorderCost
c	eaw	net/minecraft/world/level/pathfinder/BinaryHeap
	m	()V	a	clear
	m	(I)V	a	upHeap
		p	1		index
	m	(Leaz;)Leaz;	a	insert
		p	1		node
	m	(Leaz;F)V	a	changeCost
		p	1		node
		p	2		weight
	m	()Leaz;	b	peek
	m	(I)V	b	downHeap
		p	1		index
	m	(Leaz;)V	b	remove
		p	1		node
	m	()Leaz;	c	pop
	m	()I	d	size
	m	()Z	e	isEmpty
	m	()[Leaz;	f	getHeap
	f	[Leaz;	a	heap
	f	I	b	size
c	eax	net/minecraft/world/level/pathfinder/BlockPathTypes
	m	(Ljava/lang/String;IF)V	<init>	<init>
		p	3		defaultPenalty
	m	()F	a	getMalus
	m	()[Leax;	b	$values
	f	[Leax;	A	$VALUES
	f	Leax;	a	BLOCKED
	f	Leax;	b	OPEN
	f	Leax;	c	WALKABLE
	f	Leax;	d	WALKABLE_DOOR
	f	Leax;	e	TRAPDOOR
	f	Leax;	f	POWDER_SNOW
	f	Leax;	g	DANGER_POWDER_SNOW
	f	Leax;	h	FENCE
	f	Leax;	i	LAVA
	f	Leax;	j	WATER
	f	Leax;	k	WATER_BORDER
	f	Leax;	l	RAIL
	f	Leax;	m	UNPASSABLE_RAIL
	f	Leax;	n	DANGER_FIRE
	f	Leax;	o	DAMAGE_FIRE
	f	Leax;	p	DANGER_OTHER
	f	Leax;	q	DAMAGE_OTHER
	f	Leax;	r	DOOR_OPEN
	f	Leax;	s	DOOR_WOOD_CLOSED
	f	Leax;	t	DOOR_IRON_CLOSED
	f	Leax;	u	BREACH
	f	Leax;	v	LEAVES
	f	Leax;	w	STICKY_HONEY
	f	Leax;	x	COCOA
	f	Leax;	y	DAMAGE_CAUTIOUS
	f	F	z	malus
c	eay	net/minecraft/world/level/pathfinder/FlyNodeEvaluator
	m	()Leaz;	a	getStart
	m	(DDD)Lebf;	a	getGoal
		p	1		x
		p	3		y
		p	5		z
	m	(III)Leaz;	a	findAcceptedNode
		p	1		x
		p	2		y
		p	3		z
	m	(IIIJ)Leax;	a	lambda$getCachedBlockPathType$0
		p	4		pos
	m	(Lbji;)Ljava/lang/Iterable;	a	iteratePathfindingStartNodeCandidatePositions
		p	1		entity
	m	(Lcpb;III)Leax;	a	getBlockPathType
		p	1		world
		p	2		x
		p	3		y
		p	4		z
	m	(Lcpb;IIILbji;)Leax;	a	getBlockPathType
		p	1		world
		p	2		x
		p	3		y
		p	4		z
		p	5		mob
	m	(Lcqi;Lbji;)V	a	prepare
		p	1		cachedWorld
		p	2		entity
	m	(Lgw;)Z	a	canStartAt
		p	1		pos
	m	([Leaz;Leaz;)I	a	getNeighbors
		p	1		successors
		p	2		node
	m	()V	b	done
	m	(Leaz;)Z	b	hasMalus
		p	1		node
	m	(III)Leax;	c	getCachedBlockPathType
		p	1		x
		p	2		y
		p	3		z
	m	(Leaz;)Z	c	isOpen
		p	1		node
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	l	pathTypeByPosCache
	f	F	m	SMALL_MOB_INFLATED_START_NODE_BOUNDING_BOX
	f	I	n	MAX_START_NODE_CANDIDATES
c	eaz	net/minecraft/world/level/pathfinder/Node
	m	(III)V	<init>	<init>
		p	1		x
		p	2		y
		p	3		z
	m	()Lgw;	a	asBlockPos
	m	(III)Leaz;	a	cloneAndMove
		p	1		x
		p	2		y
		p	3		z
	m	(Leaz;)F	a	distanceTo
		p	1		node
	m	(Lgw;)F	a	distanceTo
		p	1		pos
	m	(Lso;)V	a	writeToStream
		p	1		buf
	m	(Lso;Leaz;)V	a	readContents
		p	0		buf
		p	1		target
	m	()Lehn;	b	asVec3
	m	(III)I	b	createHash
		p	0		x
		p	1		y
		p	2		z
	m	(Leaz;)F	b	distanceToXZ
		p	1		node
	m	(Lgw;)F	b	distanceToSqr
		p	1		pos
	m	(Lso;)Leaz;	b	createFromStream
		p	0		buf
	m	()Z	c	inOpenSet
	m	(Leaz;)F	c	distanceToSqr
		p	1		node
	m	(Lgw;)F	c	distanceManhattan
		p	1		pos
	m	(Leaz;)F	d	distanceManhattan
		p	1		node
	f	I	a	x
	f	I	b	y
	f	I	c	z
	f	I	d	heapIdx
	f	F	e	g
	f	F	f	h
	f	F	g	f
	f	Leaz;	h	cameFrom
	f	Z	i	closed
	f	F	j	walkedDistance
	f	F	k	costMalus
	f	Leax;	l	type
	f	I	m	hash
c	eba	net/minecraft/world/level/pathfinder/NodeEvaluator
	m	()Leaz;	a	getStart
	m	(DDD)Lebf;	a	getGoal
		p	1		x
		p	3		y
		p	5		z
	m	(IIII)Leaz;	a	lambda$getNode$0
	m	(Lcpb;III)Leax;	a	getBlockPathType
		p	1		world
		p	2		x
		p	3		y
		p	4		z
	m	(Lcpb;IIILbji;)Leax;	a	getBlockPathType
		p	1		world
		p	2		x
		p	3		y
		p	4		z
		p	5		mob
	m	(Lcqi;Lbji;)V	a	prepare
		p	1		cachedWorld
		p	2		entity
	m	(Leaz;)Lebf;	a	getTargetFromNode
		p	1		node
	m	(Z)V	a	setCanPassDoors
		p	1		canEnterOpenDoors
	m	([Leaz;Leaz;)I	a	getNeighbors
		p	1		successors
		p	2		node
	m	()V	b	done
	m	(III)Leaz;	b	getNode
		p	1		x
		p	2		y
		p	3		z
	m	(Lgw;)Leaz;	b	getNode
		p	1		pos
	m	(Z)V	b	setCanOpenDoors
		p	1		canOpenDoors
	m	(Z)V	c	setCanFloat
		p	1		canSwim
	m	()Z	d	canPassDoors
	m	(Z)V	d	setCanWalkOverFences
		p	1		canWalkOverFences
	m	()Z	e	canOpenDoors
	m	()Z	f	canFloat
	m	()Z	g	canWalkOverFences
	f	Lcqi;	a	level
	f	Lbji;	b	mob
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	c	nodes
	f	I	d	entityWidth
	f	I	e	entityHeight
	f	I	f	entityDepth
	f	Z	g	canPassDoors
	f	Z	h	canOpenDoors
	f	Z	i	canFloat
	f	Z	j	canWalkOverFences
c	ebb	net/minecraft/world/level/pathfinder/Path
	m	(Ljava/util/List;Lgw;Z)V	<init>	<init>
		p	1		nodes
		p	2		target
		p	3		reachesTarget
	m	()V	a	advance
	m	(I)Leaz;	a	getNode
		p	1		index
	m	(ILeaz;)V	a	replaceNode
		p	1		index
		p	2		node
	m	(Lbiq;)Lehn;	a	getNextEntityPos
		p	1		entity
	m	(Lbiq;I)Lehn;	a	getEntityPosAtNode
		p	1		entity
		p	2		index
	m	(Lebb;)Z	a	sameAs
		p	1		o
	m	(Lso;)V	a	writeToStream
		p	1		buf
	m	(Lso;Leaz;)V	a	lambda$writeToStream$0
		p	0		buf
		p	1		node
	m	(Lso;[Leaz;)V	a	writeNodeArray
		p	0		buf
		p	1		nodes
	m	([Leaz;[Leaz;Ljava/util/Set;)V	a	setDebug
		p	1		debugNodes
		p	2		debugSecondNodes
		p	3		debugTargetNodes
	m	()Z	b	notStarted
	m	(I)V	b	truncateNodes
		p	1		length
	m	(Lso;)Lebb;	b	createFromStream
		p	0		buf
	m	()Z	c	isDone
	m	(I)V	c	setNextNodeIndex
		p	1		nodeIndex
	m	(Lso;)[Leaz;	c	readNodeArray
		p	0		buf
	m	()Leaz;	d	getEndNode
	m	(I)Lgw;	d	getNodePos
		p	1		index
	m	()I	e	getNodeCount
	m	()I	f	getNextNodeIndex
	m	()Lgw;	g	getNextNodePos
	m	()Leaz;	h	getNextNode
	m	()Leaz;	i	getPreviousNode
	m	()Z	j	canReach
	m	()Lebb$a;	k	debugData
	m	()Lgw;	l	getTarget
	m	()F	m	getDistToTarget
	m	()Lebb;	n	copy
	f	Ljava/util/List;	a	nodes
	f	Lebb$a;	b	debugData
	f	I	c	nextNodeIndex
	f	Lgw;	d	target
	f	F	e	distToTarget
	f	Z	f	reached
c	ebb$a	net/minecraft/world/level/pathfinder/Path$DebugData
	m	()[Leaz;	a	openSet
	m	(Lso;)V	a	write
		p	1		buf
	m	(Lso;Lebf;)V	a	lambda$write$0
		p	0		buf
		p	1		node
	m	()[Leaz;	b	closedSet
	m	(Lso;)Lebb$a;	b	read
		p	0		buf
	m	()Ljava/util/Set;	c	targetNodes
	f	[Leaz;	a	openSet
	f	[Leaz;	b	closedSet
	f	Ljava/util/Set;	c	targetNodes
c	ebc	net/minecraft/world/level/pathfinder/PathComputationType
	m	()[Lebc;	a	$values
	f	Lebc;	a	LAND
	f	Lebc;	b	WATER
	f	Lebc;	c	AIR
	f	[Lebc;	d	$VALUES
c	ebd	net/minecraft/world/level/pathfinder/PathFinder
	m	(Leba;I)V	<init>	<init>
		p	1		pathNodeMaker
		p	2		range
	m	(I)[Leaz;	a	lambda$findPath$3
	m	(Lbdp;Leaz;Ljava/util/Map;FIF)Lebb;	a	findPath
		p	1		profiler
		p	2		startNode
		p	3		positions
		p	4		followRange
		p	5		distance
		p	6		rangeMultiplier
	m	(Lcqi;Lbji;Ljava/util/Set;FIF)Lebb;	a	findPath
		p	1		world
		p	2		mob
		p	3		positions
		p	4		followRange
		p	5		distance
		p	6		rangeMultiplier
	m	(Leaz;Leaz;)F	a	distance
		p	1		a
		p	2		b
	m	(Leaz;Lgw;Z)Lebb;	a	reconstructPath
		p	1		endNode
		p	2		target
		p	3		reachesTarget
	m	(Leaz;Ljava/util/Set;)F	a	getBestH
		p	1		node
		p	2		targets
	m	(Lgw;)Lebf;	a	lambda$findPath$0
		p	1		pos
	m	(Ljava/util/Map;Lebf;)Lebb;	a	lambda$findPath$2
	m	(Ljava/util/Map;Lebf;)Lebb;	b	lambda$findPath$1
		p	2		node
	f	F	a	FUDGING
	f	[Leaz;	b	neighbors
	f	I	c	maxVisitedNodes
	f	Leba;	d	nodeEvaluator
	f	Z	e	DEBUG
	f	Leaw;	f	openSet
c	ebe	net/minecraft/world/level/pathfinder/SwimNodeEvaluator
	m	(Z)V	<init>	<init>
		p	1		canJumpOutOfWater
	m	()Leaz;	a	getStart
	m	(DDD)Lebf;	a	getGoal
		p	1		x
		p	3		y
		p	5		z
	m	(III)Leaz;	a	findAcceptedNode
		p	1		x
		p	2		y
		p	3		z
	m	(IIIJ)Leax;	a	lambda$getCachedBlockType$0
		p	4		pos
	m	(Lcpb;III)Leax;	a	getBlockPathType
		p	1		world
		p	2		x
		p	3		y
		p	4		z
	m	(Lcpb;IIILbji;)Leax;	a	getBlockPathType
		p	1		world
		p	2		x
		p	3		y
		p	4		z
		p	5		mob
	m	(Lcqi;Lbji;)V	a	prepare
		p	1		cachedWorld
		p	2		entity
	m	(Leaz;Leaz;Leaz;)Z	a	isDiagonalNodeValid
		p	1		diagonalNode
		p	2		node1
		p	3		node2
	m	([Leaz;Leaz;)I	a	getNeighbors
		p	1		successors
		p	2		node
	m	()V	b	done
	m	(Leaz;)Z	b	isNodeValid
		p	1		node
	m	(III)Leax;	c	getCachedBlockType
		p	1		x
		p	2		y
		p	3		z
	f	Z	k	allowBreaching
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	l	pathTypesByPosCache
c	ebf	net/minecraft/world/level/pathfinder/Target
	m	(III)V	<init>	<init>
		p	1		x
		p	2		y
		p	3		z
	m	(Leaz;)V	<init>	<init>
		p	1		node
	m	(FLeaz;)V	a	updateBest
		p	1		distance
		p	2		node
	m	(Lso;)Lebf;	c	createFromStream
		p	0		buffer
	m	()Leaz;	d	getBestNode
	m	()V	e	setReached
	m	()Z	f	isReached
	f	F	m	bestHeuristic
	f	Leaz;	n	bestNode
	f	Z	o	reached
c	ebg	net/minecraft/world/level/pathfinder/WalkNodeEvaluator
	m	()Leaz;	a	getStart
	m	(DDD)Lebf;	a	getGoal
		p	1		x
		p	3		y
		p	5		z
	m	(III)Leaz;	a	getBlockedNode
		p	1		x
		p	2		y
		p	3		z
	m	(IIIIDLha;Leax;)Leaz;	a	findAcceptedNode
		p	1		x
		p	2		y
		p	3		z
		p	4		maxYStep
		p	5		prevFeetY
		p	7		direction
		p	8		nodeType
	m	(IIILbji;J)Leax;	a	lambda$getCachedBlockType$1
	m	(IIILeax;F)Leaz;	a	getNodeAndUpdateCostToMax
		p	1		x
		p	2		y
		p	3		z
		p	4		type
		p	5		penalty
	m	(Lbji;III)Leax;	a	getCachedBlockType
		p	1		entity
		p	2		x
		p	3		y
		p	4		z
	m	(Lbji;Lgw;)Leax;	a	getBlockPathType
		p	1		entity
		p	2		pos
	m	(Lcpb;III)Leax;	a	getBlockPathType
		p	1		world
		p	2		x
		p	3		y
		p	4		z
	m	(Lcpb;IIILbji;)Leax;	a	getBlockPathType
		p	1		world
		p	2		x
		p	3		y
		p	4		z
		p	5		mob
	m	(Lcpb;IIILjava/util/EnumSet;Leax;Lgw;)Leax;	a	getBlockPathTypes
		p	1		world
		p	2		x
		p	3		y
		p	4		z
		p	5		nearbyTypes
		p	6		type
		p	7		pos
	m	(Lcpb;Lgw$a;)Leax;	a	getBlockPathTypeStatic
		p	0		world
		p	1		pos
	m	(Lcpb;Lgw$a;Leax;)Leax;	a	checkNeighbourBlocks
		p	0		world
		p	1		pos
		p	2		nodeType
	m	(Lcpb;Lgw;)D	a	getFloorLevel
		p	0		world
		p	1		pos
	m	(Lcpb;Lgw;Leax;)Leax;	a	evaluateBlockPathType
		p	1		world
		p	2		pos
		p	3		type
	m	(Lcqi;Lbji;)V	a	prepare
		p	1		cachedWorld
		p	2		entity
	m	(Ldfj;)Z	a	isBurningBlock
		p	0		state
	m	(Leax;)Z	a	doesBlockHavePartialCollision
		p	0		nodeType
	m	(Leaz;Leaz;)Z	a	isNeighborValid
		p	1		node
		p	2		successor1
	m	(Leaz;Leaz;Leaz;Leaz;)Z	a	isDiagonalValid
		p	1		xNode
		p	2		zNode
		p	3		xDiagNode
		p	4		zDiagNode
	m	(Lehi;)Z	a	hasCollisions
		p	1		box
	m	(Lehi;Ljava/lang/Object;)Z	a	lambda$hasCollisions$0
		p	2		box2
	m	(Lgw;)Z	a	canStartAt
		p	1		pos
	m	([Leaz;Leaz;)I	a	getNeighbors
		p	1		successors
		p	2		node
	m	()V	b	done
	m	(Lcpb;Lgw;)Leax;	b	getBlockPathTypeRaw
		p	0		world
		p	1		pos
	m	(Leaz;)Z	b	canReachWithoutCollision
		p	1		node
	m	()Z	c	isAmphibious
	m	(Lgw;)Leaz;	c	getStartNode
		p	1		pos
	m	(Lgw;)D	d	getFloorLevel
		p	1		pos
	m	()D	h	getMobJumpHeight
	f	D	k	SPACE_BETWEEN_WALL_POSTS
	f	D	l	DEFAULT_MOB_JUMP_HEIGHT
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	m	pathTypesByPosCache
	f	Lit/unimi/dsi/fastutil/objects/Object2BooleanMap;	n	collisionCache
c	ebh	net/minecraft/world/level/pathfinder/package-info
c	ebi	net/minecraft/world/level/portal/PortalForcer
	m	(Lakq;)V	<init>	<init>
		p	1		world
	m	(Lbug;)Ll$a;	a	lambda$findPortalAround$6
		p	1		poi
	m	(Ldfj;Lgw;)Z	a	lambda$findPortalAround$5
		p	2		posx
	m	(Ldha;Lbug;)Z	a	lambda$findPortalAround$1
		p	1		poi
	m	(Lgw$a;)Z	a	canPortalReplaceBlock
		p	1		pos
	m	(Lgw;Lbug;)D	a	lambda$findPortalAround$2
		p	1		poi
	m	(Lgw;Lgw$a;Lha;I)Z	a	canHostFrame
		p	1		pos
		p	2		temp
		p	3		portalDirection
		p	4		distanceOrthogonalToPortal
	m	(Lgw;Lha$a;)Ljava/util/Optional;	a	createPortal
		p	1		pos
		p	2		axis
	m	(Lgw;ZLdha;)Ljava/util/Optional;	a	findPortalAround
		p	1		pos
		p	2		destIsNether
		p	3		worldBorder
	m	(Lhe;)Z	a	lambda$findPortalAround$0
		p	0		poiType
	m	(Lbug;)Z	b	lambda$findPortalAround$4
		p	1		poi
	m	(Lbug;)I	c	lambda$findPortalAround$3
		p	0		poi
	f	I	a	TICKET_RADIUS
	f	I	b	SEARCH_RADIUS
	f	I	c	CREATE_RADIUS
	f	I	d	FRAME_HEIGHT
	f	I	e	FRAME_WIDTH
	f	I	f	FRAME_BOX
	f	I	g	FRAME_HEIGHT_START
	f	I	h	FRAME_HEIGHT_END
	f	I	i	FRAME_WIDTH_START
	f	I	j	FRAME_WIDTH_END
	f	I	k	FRAME_BOX_START
	f	I	l	FRAME_BOX_END
	f	I	m	NOTHING_FOUND
	f	Lakq;	n	level
c	ebj	net/minecraft/world/level/portal/PortalInfo
	m	(Lehn;Lehn;FF)V	<init>	<init>
		p	1		position
		p	2		velocity
		p	3		yaw
		p	4		pitch
	f	Lehn;	a	pos
	f	Lehn;	b	speed
	f	F	c	yRot
	f	F	d	xRot
c	ebk	net/minecraft/world/level/portal/PortalShape
	m	(Lcpw;Lgw;Lha$a;)V	<init>	<init>
		p	1		world
		p	2		pos
		p	3		axis
	m	()Z	a	isValid
	m	(DLehn;)Lehn;	a	lambda$findCollisionFreePosition$3
		p	2		pos
	m	(Lakq;Ll$a;Lha$a;Lehn;Lbiq;Lehn;FF)Lebj;	a	createPortalInfo
		p	0		destination
		p	1		portalRect
		p	2		portalAxis
		p	3		offset
		p	4		entity
		p	5		velocity
		p	6		yaw
		p	7		pitch
	m	(Lcpw;Lgw;Lha$a;)Ljava/util/Optional;	a	findEmptyPortalShape
		p	0		world
		p	1		pos
		p	2		axis
	m	(Lcpw;Lgw;Ljava/util/function/Predicate;Lha$a;)Ljava/util/Optional;	a	findPortalShape
		p	0		world
		p	1		pos
		p	2		validator
		p	3		axis
	m	(Ldfj;)Z	a	isEmpty
		p	0		state
	m	(Ldfj;Lcpb;Lgw;)Z	a	lambda$static$0
		p	0		state
		p	1		world
		p	2		pos
	m	(Ldfj;Lgw;)V	a	lambda$createPortalBlocks$2
	m	(Lebk;)Z	a	lambda$findEmptyPortalShape$1
		p	0		areaHelper
	m	(Lehn;Lakq;Lbiq;Lbir;)Lehn;	a	findCollisionFreePosition
		p	0		fallback
		p	1		world
		p	2		entity
		p	3		dimensions
	m	(Lgw$a;)I	a	getDistanceUntilTop
		p	1		pos
	m	(Lgw$a;I)Z	a	hasTopFrame
		p	1		pos
		p	2		height
	m	(Lgw;)Lgw;	a	calculateBottomLeft
		p	1		pos
	m	(Lgw;Lha;)I	a	getDistanceUntilEdgeAboveFrame
		p	1		pos
		p	2		direction
	m	(Ll$a;Lha$a;Lehn;Lbir;)Lehn;	a	getRelativePosition
		p	0		portalRect
		p	1		portalAxis
		p	2		entityPos
		p	3		entityDimensions
	m	()V	b	createPortalBlocks
	m	()Z	c	isComplete
	m	()I	d	calculateWidth
	m	()I	e	calculateHeight
	f	I	a	MAX_WIDTH
	f	I	b	MAX_HEIGHT
	f	I	c	MIN_WIDTH
	f	I	d	MIN_HEIGHT
	f	Ldfi$f;	e	FRAME
	f	F	f	SAFE_TRAVEL_MAX_ENTITY_XY
	f	D	g	SAFE_TRAVEL_MAX_VERTICAL_DELTA
	f	Lcpw;	h	level
	f	Lha$a;	i	axis
	f	Lha;	j	rightDir
	f	I	k	numPortalBlocks
	f	Lgw;	l	bottomLeft
	f	I	m	height
	f	I	n	width
c	ebl	net/minecraft/world/level/portal/package-info
c	ebm	net/minecraft/world/level/redstone/CollectingNeighborUpdater
	m	(Lcpv;I)V	<init>	<init>
		p	1		world
		p	2		maxChainDepth
	m	()V	a	runUpdates
	m	(Ldfj;Lgw;Lcsv;Lgw;Z)V	a	neighborChanged
		p	1		state
		p	2		pos
		p	3		sourceBlock
		p	4		sourcePos
		p	5		notify
	m	(Lgw;Lcsv;Lgw;)V	a	neighborChanged
		p	1		pos
		p	2		sourceBlock
		p	3		sourcePos
	m	(Lgw;Lcsv;Lha;)V	a	updateNeighborsAtExceptFromFacing
		p	1		pos
		p	2		sourceBlock
		p	3		except
	m	(Lgw;Lebm$c;)V	a	addAndRun
		p	1		pos
		p	2		entry
	m	(Lha;Ldfj;Lgw;Lgw;II)V	a	shapeUpdate
		p	1		direction
		p	2		neighborState
		p	3		pos
		p	4		neighborPos
		p	5		flags
		p	6		maxUpdateDepth
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Lcpv;	c	level
	f	I	d	maxChainedNeighborUpdates
	f	Ljava/util/ArrayDeque;	e	stack
	f	Ljava/util/List;	f	addedThisLayer
	f	I	g	count
c	ebm$a	net/minecraft/world/level/redstone/CollectingNeighborUpdater$FullNeighborUpdate
	m	()Ldfj;	a	state
	m	(Lcpv;)Z	a	runNext
		p	1		world
	m	()Lgw;	b	pos
	m	()Lcsv;	c	block
	m	()Lgw;	d	neighborPos
	m	()Z	e	movedByPiston
	f	Ldfj;	a	state
	f	Lgw;	b	pos
	f	Lcsv;	c	block
	f	Lgw;	d	neighborPos
	f	Z	e	movedByPiston
c	ebm$b	net/minecraft/world/level/redstone/CollectingNeighborUpdater$MultiNeighborUpdate
	m	(Lgw;Lcsv;Lha;)V	<init>	<init>
		p	1		pos
		p	2		sourceBlock
		p	3		except
	m	(Lcpv;)Z	a	runNext
		p	1		world
	f	Lgw;	a	sourcePos
	f	Lcsv;	b	sourceBlock
	f	Lha;	c	skipDirection
	f	I	d	idx
c	ebm$c	net/minecraft/world/level/redstone/CollectingNeighborUpdater$NeighborUpdates
	m	(Lcpv;)Z	a	runNext
		p	1		world
c	ebm$d	net/minecraft/world/level/redstone/CollectingNeighborUpdater$ShapeUpdate
	m	()Lha;	a	direction
	m	(Lcpv;)Z	a	runNext
		p	1		world
	m	()Ldfj;	b	state
	m	()Lgw;	c	pos
	m	()Lgw;	d	neighborPos
	m	()I	e	updateFlags
	m	()I	f	updateLimit
	f	Lha;	a	direction
	f	Ldfj;	b	state
	f	Lgw;	c	pos
	f	Lgw;	d	neighborPos
	f	I	e	updateFlags
	f	I	f	updateLimit
c	ebm$e	net/minecraft/world/level/redstone/CollectingNeighborUpdater$SimpleNeighborUpdate
	m	()Lgw;	a	pos
	m	(Lcpv;)Z	a	runNext
		p	1		world
	m	()Lcsv;	b	block
	m	()Lgw;	c	neighborPos
	f	Lgw;	a	pos
	f	Lcsv;	b	block
	f	Lgw;	c	neighborPos
c	ebn	net/minecraft/world/level/redstone/InstantNeighborUpdater
	m	(Lcpv;)V	<init>	<init>
		p	1		world
	m	(Ldfj;Lgw;Lcsv;Lgw;Z)V	a	neighborChanged
		p	1		state
		p	2		pos
		p	3		sourceBlock
		p	4		sourcePos
		p	5		notify
	m	(Lgw;Lcsv;Lgw;)V	a	neighborChanged
		p	1		pos
		p	2		sourceBlock
		p	3		sourcePos
	m	(Lha;Ldfj;Lgw;Lgw;II)V	a	shapeUpdate
		p	1		direction
		p	2		neighborState
		p	3		pos
		p	4		neighborPos
		p	5		flags
		p	6		maxUpdateDepth
	f	Lcpv;	b	level
c	ebo	net/minecraft/world/level/redstone/NeighborUpdater
	m	(Lcpv;Ldfj;Lgw;Lcsv;Lgw;Z)V	a	executeUpdate
		p	0		world
		p	1		state
		p	2		pos
		p	3		sourceBlock
		p	4		sourcePos
		p	5		notify
	m	(Lcpw;Lha;Ldfj;Lgw;Lgw;II)V	a	executeShapeUpdate
		p	0		world
		p	1		direction
		p	2		neighborState
		p	3		pos
		p	4		neighborPos
		p	5		flags
		p	6		maxUpdateDepth
	m	(Lcsv;)Ljava/lang/String;	a	lambda$executeUpdate$0
	m	(Ldfj;Lgw;Lcsv;Lgw;Z)V	a	neighborChanged
		p	1		state
		p	2		pos
		p	3		sourceBlock
		p	4		sourcePos
		p	5		notify
	m	(Lgw;Lcsv;Lgw;)V	a	neighborChanged
		p	1		pos
		p	2		sourceBlock
		p	3		sourcePos
	m	(Lgw;Lcsv;Lha;)V	a	updateNeighborsAtExceptFromFacing
		p	1		pos
		p	2		sourceBlock
		p	3		except
	m	(Lha;Ldfj;Lgw;Lgw;II)V	a	shapeUpdate
		p	1		direction
		p	2		neighborState
		p	3		pos
		p	4		neighborPos
		p	5		flags
		p	6		maxUpdateDepth
	f	[Lha;	a	UPDATE_ORDER
c	ebp	net/minecraft/world/level/redstone/Redstone
	f	I	a	SIGNAL_MIN
	f	I	b	SIGNAL_MAX
	f	I	c	SIGNAL_NONE
c	ebq	net/minecraft/world/level/redstone/package-info
c	ebr	net/minecraft/world/level/saveddata/SavedData
	m	(Ljava/io/File;)V	a	save
		p	1		file
	m	(Lqw;)Lqw;	a	save
		p	1		nbt
	m	(Z)V	a	setDirty
		p	1		dirty
	m	()V	c	setDirty
	m	()Z	d	isDirty
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Z	b	dirty
c	ebr$a	net/minecraft/world/level/saveddata/SavedData$Factory
	m	()Ljava/util/function/Supplier;	a	constructor
	m	()Ljava/util/function/Function;	b	deserializer
	m	()Lata;	c	type
	f	Ljava/util/function/Supplier;	a	constructor
	f	Ljava/util/function/Function;	b	deserializer
	f	Lata;	c	type
c	ebs	net/minecraft/world/level/saveddata/maps/MapBanner
	m	(Lgw;Lcht;Ltl;)V	<init>	<init>
		p	1		pos
		p	2		dyeColor
		p	3		name
	m	()Lgw;	a	getPos
	m	(Lcpb;Lgw;)Lebs;	a	fromWorld
		p	0		blockView
		p	1		blockPos
	m	(Lqw;)Lebs;	a	load
		p	0		nbt
	m	()Lcht;	b	getColor
	m	()Lebt$a;	c	getDecoration
	m	()Ltl;	d	getName
	m	()Lqw;	e	save
	m	()Ljava/lang/String;	f	getId
	f	Lgw;	a	pos
	f	Lcht;	b	color
	f	Ltl;	c	name
c	ebs$1	net/minecraft/world/level/saveddata/maps/MapBanner$1
	f	[I	a	$SwitchMap$net$minecraft$world$item$DyeColor
c	ebt	net/minecraft/world/level/saveddata/maps/MapDecoration
	m	(Lebt$a;BBBLtl;)V	<init>	<init>
		p	1		type
		p	2		x
		p	3		z
		p	4		rotation
		p	5		text
	m	()B	a	getImage
	m	()Z	b	renderOnFrame
	m	()Lebt$a;	c	type
	m	()B	d	x
	m	()B	e	y
	m	()B	f	rot
	m	()Ltl;	g	name
	f	Lebt$a;	a	type
	f	B	b	x
	f	B	c	y
	f	B	d	rot
	f	Ltl;	e	name
c	ebt$a	net/minecraft/world/level/saveddata/maps/MapDecoration$Type
	m	(Ljava/lang/String;ILjava/lang/String;ZIZZ)V	<init>	<init>
		p	3		name
		p	4		alwaysRender
		p	5		tintColor
		p	6		useIconCountLimit
		p	7		structure
	m	(Ljava/lang/String;ILjava/lang/String;ZZ)V	<init>	<init>
		p	3		name
		p	4		alwaysRender
		p	5		useIconCountLimit
	m	()B	a	getIcon
	m	(B)Lebt$a;	a	byIcon
		p	0		id
	m	()Z	b	isExplorationMapElement
	m	()Ljava/lang/String;	c	getSerializedName
	m	()Z	d	isRenderedOnFrame
	m	()Z	e	hasMapColor
	m	()I	f	getMapColor
	m	()Z	g	shouldTrackCount
	m	()[Lebt$a;	h	$values
	f	Lebt$a;	A	RED_X
	f	Lebt$a;	B	DESERT_VILLAGE
	f	Lebt$a;	C	PLAINS_VILLAGE
	f	Lebt$a;	D	SAVANNA_VILLAGE
	f	Lebt$a;	E	SNOWY_VILLAGE
	f	Lebt$a;	F	TAIGA_VILLAGE
	f	Lebt$a;	G	JUNGLE_TEMPLE
	f	Lebt$a;	H	SWAMP_HUT
	f	Lcom/mojang/serialization/Codec;	I	CODEC
	f	Ljava/lang/String;	J	name
	f	B	K	icon
	f	Z	L	renderedOnFrame
	f	I	M	mapColor
	f	Z	N	isExplorationMapElement
	f	Z	O	trackCount
	f	[Lebt$a;	P	$VALUES
	f	Lebt$a;	a	PLAYER
	f	Lebt$a;	b	FRAME
	f	Lebt$a;	c	RED_MARKER
	f	Lebt$a;	d	BLUE_MARKER
	f	Lebt$a;	e	TARGET_X
	f	Lebt$a;	f	TARGET_POINT
	f	Lebt$a;	g	PLAYER_OFF_MAP
	f	Lebt$a;	h	PLAYER_OFF_LIMITS
	f	Lebt$a;	i	MANSION
	f	Lebt$a;	j	MONUMENT
	f	Lebt$a;	k	BANNER_WHITE
	f	Lebt$a;	l	BANNER_ORANGE
	f	Lebt$a;	m	BANNER_MAGENTA
	f	Lebt$a;	n	BANNER_LIGHT_BLUE
	f	Lebt$a;	o	BANNER_YELLOW
	f	Lebt$a;	p	BANNER_LIME
	f	Lebt$a;	q	BANNER_PINK
	f	Lebt$a;	r	BANNER_GRAY
	f	Lebt$a;	s	BANNER_LIGHT_GRAY
	f	Lebt$a;	t	BANNER_CYAN
	f	Lebt$a;	u	BANNER_PURPLE
	f	Lebt$a;	v	BANNER_BLUE
	f	Lebt$a;	w	BANNER_BROWN
	f	Lebt$a;	x	BANNER_GREEN
	f	Lebt$a;	y	BANNER_RED
	f	Lebt$a;	z	BANNER_BLACK
c	ebu	net/minecraft/world/level/saveddata/maps/MapFrame
	m	(Lgw;II)V	<init>	<init>
		p	1		pos
		p	2		rotation
		p	3		entityId
	m	()Lqw;	a	save
	m	(Lgw;)Ljava/lang/String;	a	frameId
		p	0		pos
	m	(Lqw;)Lebu;	a	load
		p	0		nbt
	m	()Lgw;	b	getPos
	m	()I	c	getRotation
	m	()I	d	getEntityId
	m	()Ljava/lang/String;	e	getId
	f	Lgw;	a	pos
	f	I	b	rotation
	f	I	c	entityId
c	ebv	net/minecraft/world/level/saveddata/maps/MapIndex
	m	()Lebr$a;	a	factory
	m	(Lqw;)Lqw;	a	save
		p	1		nbt
	m	()I	b	getFreeAuxValueForMap
	m	(Lqw;)Lebv;	b	load
		p	0		nbt
	f	Ljava/lang/String;	a	FILE_NAME
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	b	usedAuxIds
c	ebw	net/minecraft/world/level/saveddata/maps/MapItemSavedData
	m	(IIBZZZLaev;)V	<init>	<init>
		p	1		centerX
		p	2		centerZ
		p	3		scale
		p	4		showIcons
		p	5		unlimitedTracking
		p	6		locked
		p	7		dimension
	m	()Lebr$a;	a	factory
	m	(BZLaev;)Lebw;	a	createForClient
		p	0		scale
		p	1		locked
		p	2		dimension
	m	(DDBZZLaev;)Lebw;	a	createFresh
		p	0		centerX
		p	2		centerZ
		p	4		scale
		p	5		showIcons
		p	6		unlimitedTracking
		p	7		dimension
	m	(I)Lebw;	a	scaled
		p	1		zoomOutScale
	m	(II)V	a	setColorsDirty
		p	1		x
		p	2		z
	m	(IIB)Z	a	updateColor
		p	1		x
		p	2		z
		p	3		color
	m	(ILcbu;)Lvd;	a	getUpdatePacket
		p	1		id
		p	2		player
	m	(Lcbu;)Lebw$a;	a	getHoldingPlayer
		p	1		player
	m	(Lcbu;Lcjf;)V	a	tickCarriedBy
		p	1		player
		p	2		stack
	m	(Lcjf;Lgw;Ljava/lang/String;Lebt$a;)V	a	addTargetDecoration
		p	0		stack
		p	1		pos
		p	2		id
		p	3		type
	m	(Lcpb;II)V	a	checkBanners
		p	1		world
		p	2		x
		p	3		z
	m	(Lcpw;Lgw;)Z	a	toggleBanner
		p	1		world
		p	2		pos
	m	(Lebt$a;Lcpw;Ljava/lang/String;DDDLtl;)V	a	addDecoration
		p	1		type
		p	2		world
		p	3		key
		p	4		x
		p	6		z
		p	8		rotation
		p	10		text
	m	(Lgw;I)V	a	removedFromFrame
		p	1		pos
		p	2		id
	m	(Ljava/lang/String;)V	a	removeDecoration
		p	1		id
	m	(Ljava/util/List;)V	a	addClientSideDecorations
		p	1		icons
	m	(Lqw;)Lqw;	a	save
		p	1		nbt
	m	(Lqw;Lrq;)V	a	lambda$save$2
	m	()Lebw;	b	locked
	m	(I)Z	b	isTrackedCountOverLimit
		p	1		iconCount
	m	(IIB)V	b	setColor
		p	1		x
		p	2		z
		p	3		color
	m	(Lqw;)Lebw;	b	load
		p	0		nbt
	m	(Lqw;)Ljava/lang/IllegalArgumentException;	c	lambda$load$1
	m	()Ljava/util/Collection;	e	getBanners
	m	()Z	f	isExplorationMap
	m	()Ljava/lang/Iterable;	g	getDecorations
	m	()V	h	setDecorationsDirty
	m	()Lebw;	i	lambda$factory$0
	f	I	a	MAX_SCALE
	f	I	b	TRACKED_DECORATION_LIMIT
	f	I	c	centerX
	f	I	d	centerZ
	f	Laev;	e	dimension
	f	B	f	scale
	f	[B	g	colors
	f	Z	h	locked
	f	Lorg/slf4j/Logger;	i	LOGGER
	f	I	j	MAP_SIZE
	f	I	k	HALF_MAP_SIZE
	f	Z	l	trackingPosition
	f	Z	m	unlimitedTracking
	f	Ljava/util/List;	n	carriedBy
	f	Ljava/util/Map;	o	carriedByPlayers
	f	Ljava/util/Map;	p	bannerMarkers
	f	Ljava/util/Map;	q	decorations
	f	Ljava/util/Map;	r	frameMarkers
	f	I	s	trackedDecorationCount
c	ebw$a	net/minecraft/world/level/saveddata/maps/MapItemSavedData$HoldingPlayer
	m	(Lebw;Lcbu;)V	<init>	<init>
		p	2		player
	m	()Lebw$b;	a	createPatch
	m	(I)Lvd;	a	nextUpdatePacket
		p	1		mapId
	m	(II)V	a	markColorsDirty
		p	1		startX
		p	2		startZ
	m	()V	b	markDecorationsDirty
	f	Lcbu;	a	player
	f	I	b	step
	f	Lebw;	c	this$0
	f	Z	d	dirtyData
	f	I	e	minDirtyX
	f	I	f	minDirtyY
	f	I	g	maxDirtyX
	f	I	h	maxDirtyY
	f	Z	i	dirtyDecorations
	f	I	j	tick
c	ebw$b	net/minecraft/world/level/saveddata/maps/MapItemSavedData$MapPatch
	m	(IIII[B)V	<init>	<init>
		p	1		startX
		p	2		startZ
		p	3		width
		p	4		height
		p	5		colors
	m	(Lebw;)V	a	applyToMap
		p	1		mapState
	f	I	a	startX
	f	I	b	startY
	f	I	c	width
	f	I	d	height
	f	[B	e	mapColors
c	ebx	net/minecraft/world/level/saveddata/maps/package-info
c	eby	net/minecraft/world/level/saveddata/package-info
c	ebz	net/minecraft/world/level/storage/CommandStorage
	m	(Lecc;)V	<init>	<init>
		p	1		stateManager
	m	()Ljava/util/stream/Stream;	a	keys
	m	(Laew;)Lqw;	a	get
		p	1		id
	m	(Laew;Lqw;)V	a	set
		p	1		id
		p	2		nbt
	m	(Ljava/lang/String;)Lebz$a;	a	newStorage
		p	1		namespace
	m	(Ljava/lang/String;Lqw;)Lebz$a;	a	lambda$factory$1
		p	2		nbt
	m	(Ljava/util/Map$Entry;)Ljava/util/stream/Stream;	a	lambda$keys$2
		p	0		entry
	m	(Ljava/lang/String;)Lebr$a;	b	factory
		p	1		namespace
	m	(Ljava/lang/String;)Ljava/lang/String;	c	createId
		p	0		namespace
	m	(Ljava/lang/String;)Lebz$a;	d	lambda$factory$0
	f	Ljava/lang/String;	a	ID_PREFIX
	f	Ljava/util/Map;	b	namespaces
	f	Lecc;	c	storage
c	ebz$a	net/minecraft/world/level/storage/CommandStorage$Container
	m	(Ljava/lang/String;)Lqw;	a	get
		p	1		name
	m	(Ljava/lang/String;Ljava/lang/String;)Laew;	a	lambda$getKeys$1
		p	1		key
	m	(Ljava/lang/String;Lqw;)V	a	put
		p	1		name
		p	2		nbt
	m	(Lqw;)Lqw;	a	save
		p	1		nbt
	m	(Lqw;Ljava/lang/String;Lqw;)V	a	lambda$save$0
		p	1		key
		p	2		value
	m	(Ljava/lang/String;)Ljava/util/stream/Stream;	b	getKeys
		p	1		namespace
	m	(Lqw;)Lebz$a;	b	load
		p	1		nbt
	f	Ljava/lang/String;	a	TAG_CONTENTS
	f	Ljava/util/Map;	b	storage
c	eca	net/minecraft/world/level/storage/DataVersion
	m	(I)V	<init>	<init>
		p	1		id
	m	(ILjava/lang/String;)V	<init>	<init>
		p	1		id
		p	2		series
	m	()Z	a	isSideSeries
	m	(Leca;)Z	a	isCompatible
		p	1		other
	m	()Ljava/lang/String;	b	getSeries
	m	()I	c	getVersion
	f	Ljava/lang/String;	a	MAIN_SERIES
	f	I	b	version
	f	Ljava/lang/String;	c	series
c	ecb	net/minecraft/world/level/storage/DerivedLevelData
	m	(Lecm;Lecl;)V	<init>	<init>
		p	1		saveProperties
		p	2		worldProperties
	m	()I	a	getXSpawn
	m	(F)V	a	setSpawnAngle
		p	1		spawnAngle
	m	(I)V	a	setClearWeatherTime
		p	1		clearWeatherTime
	m	(J)V	a	setGameTime
		p	1		time
	m	(Lcps;)V	a	setGameType
		p	1		gameMode
	m	(Ldha$c;)V	a	setWorldBorder
		p	1		worldBorder
	m	(Lgw;F)V	a	setSpawn
		p	1		pos
		p	2		angle
	m	(Ljava/util/UUID;)V	a	setWanderingTraderId
		p	1		wanderingTraderId
	m	(Lp;Lcpx;)V	a	fillCrashReportCategory
		p	1		reportSection
		p	2		world
	m	(Z)V	a	setThundering
		p	1		thundering
	m	()I	b	getYSpawn
	m	(I)V	b	setXSpawn
		p	1		spawnX
	m	(J)V	b	setDayTime
		p	1		timeOfDay
	m	(Z)V	b	setRaining
		p	1		raining
	m	()I	c	getZSpawn
	m	(I)V	c	setYSpawn
		p	1		spawnY
	m	(Z)V	c	setInitialized
		p	1		initialized
	m	()F	d	getSpawnAngle
	m	(I)V	d	setZSpawn
		p	1		spawnZ
	m	()J	e	getGameTime
	m	(I)V	e	setThunderTime
		p	1		thunderTime
	m	()J	f	getDayTime
	m	(I)V	f	setRainTime
		p	1		rainTime
	m	()Ljava/lang/String;	g	getLevelName
	m	(I)V	g	setWanderingTraderSpawnDelay
		p	1		wanderingTraderSpawnDelay
	m	()I	h	getClearWeatherTime
	m	(I)V	h	setWanderingTraderSpawnChance
		p	1		wanderingTraderSpawnChance
	m	()Z	i	isThundering
	m	()I	j	getThunderTime
	m	()Z	k	isRaining
	m	()I	l	getRainTime
	m	()Lcps;	m	getGameType
	m	()Z	n	isHardcore
	m	()Z	o	getAllowCommands
	m	()Z	p	isInitialized
	m	()Lcpr;	q	getGameRules
	m	()Ldha$c;	r	getWorldBorder
	m	()Lbgv;	s	getDifficulty
	m	()Z	t	isDifficultyLocked
	m	()Leha;	u	getScheduledEvents
	m	()I	v	getWanderingTraderSpawnDelay
	m	()I	w	getWanderingTraderSpawnChance
	m	()Ljava/util/UUID;	x	getWanderingTraderId
	f	Lecm;	a	worldData
	f	Lecl;	b	wrapped
c	ecc	net/minecraft/world/level/storage/DimensionDataStorage
	m	(Ljava/io/File;Lcom/mojang/datafixers/DataFixer;)V	<init>	<init>
		p	1		directory
		p	2		dataFixer
	m	()V	a	save
	m	(Lebr$a;Ljava/lang/String;)Lebr;	a	computeIfAbsent
		p	1		type
		p	2		id
	m	(Ljava/io/PushbackInputStream;)Z	a	isGzip
		p	1		stream
	m	(Ljava/lang/String;)Ljava/io/File;	a	getDataFile
		p	1		id
	m	(Ljava/lang/String;Lata;I)Lqw;	a	readTagFromDisk
		p	1		id
		p	2		dataFixTypes
		p	3		currentSaveVersion
	m	(Ljava/lang/String;Lebr;)V	a	set
		p	1		id
		p	2		state
	m	(Ljava/util/function/Function;Lata;Ljava/lang/String;)Lebr;	a	readSavedData
		p	1		readFunction
		p	2		dataFixTypes
		p	3		id
	m	(Lebr$a;Ljava/lang/String;)Lebr;	b	get
		p	1		type
		p	2		id
	m	(Ljava/lang/String;Lebr;)V	b	lambda$save$0
		p	1		id
		p	2		state
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/Map;	b	cache
	f	Lcom/mojang/datafixers/DataFixer;	c	fixerUpper
	f	Ljava/io/File;	d	dataFolder
c	ecd	net/minecraft/world/level/storage/LevelData
	m	()I	a	getXSpawn
	m	(Lcpx;)Ljava/lang/String;	a	lambda$fillCrashReportCategory$0
	m	(Lp;Lcpx;)V	a	fillCrashReportCategory
		p	1		reportSection
		p	2		world
	m	()I	b	getYSpawn
	m	(Z)V	b	setRaining
		p	1		raining
	m	()I	c	getZSpawn
	m	()F	d	getSpawnAngle
	m	()J	e	getGameTime
	m	()J	f	getDayTime
	m	()Ljava/lang/String;	g	lambda$fillCrashReportCategory$1
	m	()Z	i	isThundering
	m	()Z	k	isRaining
	m	()Z	n	isHardcore
	m	()Lcpr;	q	getGameRules
	m	()Lbgv;	s	getDifficulty
	m	()Z	t	isDifficultyLocked
c	ece	net/minecraft/world/level/storage/LevelResource
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		relativePath
	m	()Ljava/lang/String;	a	getId
	f	Lece;	a	PLAYER_ADVANCEMENTS_DIR
	f	Lece;	b	PLAYER_STATS_DIR
	f	Lece;	c	PLAYER_DATA_DIR
	f	Lece;	d	PLAYER_OLD_DATA_DIR
	f	Lece;	e	LEVEL_DATA_FILE
	f	Lece;	f	OLD_LEVEL_DATA_FILE
	f	Lece;	g	ICON_FILE
	f	Lece;	h	LOCK_FILE
	f	Lece;	i	GENERATED_DIR
	f	Lece;	j	DATAPACK_DIR
	f	Lece;	k	MAP_RESOURCE_FILE
	f	Lece;	l	ROOT
	f	Ljava/lang/String;	m	id
c	ecf	net/minecraft/world/level/storage/LevelStorageException
	m	(Ltl;)V	<init>	<init>
		p	1		messageText
	m	()Ltl;	a	getMessageComponent
	f	Ltl;	a	messageComponent
c	ecg	net/minecraft/world/level/storage/LevelStorageSource
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;Lehd;Lcom/mojang/datafixers/DataFixer;)V	<init>	<init>
		p	1		savesDirectory
		p	2		backupsDirectory
		p	3		symlinkFinder
		p	4		dataFixer
	m	()Ljava/lang/String;	a	getName
	m	(Laew;)V	a	lambda$parseFeatureFlagsFromSummary$8
		p	0		id
	m	(Lcom/mojang/serialization/Dynamic;)Lcqo;	a	readDataConfig
		p	0		dynamic
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/DataFixer;I)Lcom/mojang/serialization/DataResult;	a	readWorldGenSettings
		p	0		levelData
		p	1		dataFixer
		p	2		version
	m	(Lcom/mojang/serialization/DynamicOps;Lcqo;Lhq;Lcom/mojang/serialization/Lifecycle;)Ljava/util/function/BiFunction;	a	getLevelData
		p	0		ops
		p	1		dataConfiguration
		p	2		dimensionOptionsRegistry
		p	3		lifecycle
	m	(Lcom/mojang/serialization/DynamicOps;Lcqo;Lhq;Lcom/mojang/serialization/Lifecycle;Ljava/nio/file/Path;Lcom/mojang/datafixers/DataFixer;)Lcom/mojang/datafixers/util/Pair;	a	lambda$getLevelData$5
		p	4		path
		p	5		dataFixer
	m	(Lecg$a;)Ljava/util/concurrent/CompletableFuture;	a	loadLevelSummaries
		p	1		levels
	m	(Lecg$b;)Lech;	a	lambda$loadLevelSummaries$3
	m	(Lecg$b;Ljava/util/function/BiFunction;)Ljava/lang/Object;	a	readLevelData
		p	1		levelSave
		p	2		levelDataParser
	m	(Lecg$b;Z)Ljava/util/function/BiFunction;	a	levelSummaryReader
		p	1		levelSave
		p	2		locked
	m	(Lecg$b;ZLjava/nio/file/Path;Lcom/mojang/datafixers/DataFixer;)Lech;	a	lambda$levelSummaryReader$6
		p	3		path
		p	4		dataFixer
	m	(Ljava/lang/String;)Z	a	isNewLevelIdAcceptable
		p	1		name
	m	(Ljava/nio/file/Path;)Lehd;	a	parseValidator
		p	0		allowedSymlinksFile
	m	(Ljava/nio/file/Path;Lcom/mojang/datafixers/DataFixer;)Lcqo;	a	getDataConfiguration
		p	0		path
		p	1		dataFixer
	m	(Ljava/util/List;)Ljava/util/List;	a	lambda$loadLevelSummaries$4
		p	0		summaries
	m	()Lecg$a;	b	findLevelCandidates
	m	(Lcom/mojang/serialization/Dynamic;)Lcec;	b	parseFeatureFlagsFromSummary
		p	0		levelData
	m	(Lecg$b;)Z	b	lambda$findLevelCandidates$2
		p	0		levelSave
	m	(Ljava/lang/String;)Z	b	levelExists
		p	1		name
	m	(Ljava/nio/file/Path;)Lecg;	b	createDefault
		p	0		path
	m	()Ljava/nio/file/Path;	c	getBaseDir
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/util/stream/Stream;	c	lambda$parseFeatureFlagsFromSummary$7
		p	0		featureFlag
	m	(Ljava/lang/String;)Ljava/nio/file/Path;	c	getLevelPath
		p	1		name
	m	(Ljava/nio/file/Path;)Lrq;	c	readLightweightData
		p	0		path
	m	()Ljava/nio/file/Path;	d	getBackupPath
	m	(Ljava/lang/String;)Lecg$c;	d	validateAndCreateAccess
		p	1		directoryName
	m	(Ljava/nio/file/Path;)Z	d	lambda$findLevelCandidates$1
		p	0		path
	m	()Lehd;	e	getWorldDirValidator
	m	(Ljava/lang/String;)Lecg$c;	e	createAccess
		p	1		directoryName
	m	(Ljava/nio/file/Path;)Z	e	lambda$static$0
		p	0		path
	m	()I	f	getStorageVersion
	f	Ljava/lang/String;	a	ALLOWED_SYMLINKS_CONFIG_NAME
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ljava/time/format/DateTimeFormatter;	c	FORMATTER
	f	Lcom/google/common/collect/ImmutableList;	d	OLD_SETTINGS_KEYS
	f	Ljava/lang/String;	e	TAG_DATA
	f	Ljava/nio/file/PathMatcher;	f	NO_SYMLINKS_ALLOWED
	f	I	g	SUMMARY_UNCOMPRESSED_NBT_QUOTA
	f	Ljava/nio/file/Path;	h	baseDir
	f	Ljava/nio/file/Path;	i	backupDir
	f	Lcom/mojang/datafixers/DataFixer;	j	fixerUpper
	f	Lehd;	k	worldDirValidator
c	ecg$a	net/minecraft/world/level/storage/LevelStorageSource$LevelCandidates
	m	()Z	a	isEmpty
	m	()Ljava/util/List;	b	levels
	f	Ljava/util/List;	a	levels
c	ecg$b	net/minecraft/world/level/storage/LevelStorageSource$LevelDirectory
	m	()Ljava/lang/String;	a	directoryName
	m	(Lece;)Ljava/nio/file/Path;	a	resourcePath
		p	1		savePath
	m	(Ljava/time/LocalDateTime;)Ljava/nio/file/Path;	a	corruptedDataFile
		p	1		dateTime
	m	()Ljava/nio/file/Path;	b	dataFile
	m	()Ljava/nio/file/Path;	c	oldDataFile
	m	()Ljava/nio/file/Path;	d	iconFile
	m	()Ljava/nio/file/Path;	e	lockFile
	m	()Ljava/nio/file/Path;	f	path
	f	Ljava/nio/file/Path;	a	path
c	ecg$c	net/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess
	m	(Lecg;Ljava/lang/String;Ljava/nio/file/Path;)V	<init>	<init>
		p	2		directoryName
		p	3		path
	m	()Lecg;	a	parent
	m	(Laev;)Ljava/nio/file/Path;	a	getDimensionPath
		p	1		key
	m	(Lcom/mojang/serialization/DynamicOps;Lcqo;Lhq;Lcom/mojang/serialization/Lifecycle;)Lcom/mojang/datafixers/util/Pair;	a	getDataTag
		p	1		ops
		p	2		dataConfiguration
		p	3		dimensionOptionsRegistry
		p	4		lifecycle
	m	(Lece;)Ljava/nio/file/Path;	a	getLevelPath
		p	1		savePath
	m	(Lhr;Lecm;)V	a	saveDataTag
		p	1		registryManager
		p	2		saveProperties
	m	(Lhr;Lecm;Lqw;)V	a	saveDataTag
		p	1		registryManager
		p	2		saveProperties
		p	3		nbt
	m	(Ljava/lang/String;)V	a	renameLevel
		p	1		name
	m	()Ljava/lang/String;	b	getLevelId
	m	()Lecj;	c	createPlayerStorage
	m	()Lech;	d	getSummary
	m	()Lcqo;	e	getDataConfiguration
	m	()Ljava/util/Optional;	f	getIconFile
	m	()V	g	deleteLevel
	m	()J	h	makeWorldBackup
	m	()V	i	checkLock
	f	Lecg;	a	this$0
	f	Lard;	b	lock
	f	Lecg$b;	c	levelDirectory
	f	Ljava/lang/String;	d	levelId
	f	Ljava/util/Map;	e	resources
c	ecg$c$1	net/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess$1
	m	(Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;	a	postVisitDirectory
	m	(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;	a	visitFile
	f	Ljava/nio/file/Path;	a	val$lockPath
	f	Lecg$c;	b	this$1
c	ecg$c$2	net/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess$2
	m	(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;	a	visitFile
	f	Ljava/nio/file/Path;	a	val$rootPath
	f	Ljava/util/zip/ZipOutputStream;	b	val$stream
	f	Lecg$c;	c	this$1
c	ech	net/minecraft/world/level/storage/LevelSummary
	m	(Lcpz;Leci;Ljava/lang/String;ZZZLjava/nio/file/Path;)V	<init>	<init>
		p	1		levelInfo
		p	2		versionInfo
		p	3		name
		p	4		requiresConversion
		p	5		locked
		p	6		experimental
		p	7		iconPath
	m	()Ljava/lang/String;	a	getLevelId
	m	(Lech;)I	a	compareTo
	m	(Luh;)Luh;	a	lambda$createInfo$0
		p	0		style
	m	()Ljava/lang/String;	b	getLevelName
	m	()Ljava/nio/file/Path;	c	getIcon
	m	()Z	d	requiresManualConversion
	m	()Z	e	isExperimental
	m	()J	f	getLastPlayed
	m	()Lcpz;	g	getSettings
	m	()Lcps;	h	getGameMode
	m	()Z	i	isHardcore
	m	()Z	j	hasCheats
	m	()Lty;	k	getWorldVersionName
	m	()Leci;	l	levelVersion
	m	()Z	m	markVersionInList
	m	()Z	n	askToOpenWorld
	m	()Lech$a;	o	backupStatus
	m	()Z	p	isLocked
	m	()Z	q	isDisabled
	m	()Z	r	isCompatible
	m	()Ltl;	s	getInfo
	m	()Ltl;	t	createInfo
	f	Lcpz;	a	settings
	f	Leci;	b	levelVersion
	f	Ljava/lang/String;	c	levelId
	f	Z	d	requiresManualConversion
	f	Z	e	locked
	f	Z	f	experimental
	f	Ljava/nio/file/Path;	g	icon
	f	Ltl;	h	info
c	ech$a	net/minecraft/world/level/storage/LevelSummary$BackupStatus
	m	(Ljava/lang/String;IZZLjava/lang/String;)V	<init>	<init>
		p	3		backup
		p	4		boldRedFormatting
		p	5		translationKeySuffix
	m	()Z	a	shouldBackup
	m	()Z	b	isSevere
	m	()Ljava/lang/String;	c	getTranslationKey
	m	()[Lech$a;	d	$values
	f	Lech$a;	a	NONE
	f	Lech$a;	b	DOWNGRADE
	f	Lech$a;	c	UPGRADE_TO_SNAPSHOT
	f	Z	d	shouldBackup
	f	Z	e	severe
	f	Ljava/lang/String;	f	translationKey
	f	[Lech$a;	g	$VALUES
c	ech$b	net/minecraft/world/level/storage/LevelSummary$SymlinkLevelSummary
	m	(Ljava/lang/String;Ljava/nio/file/Path;)V	<init>	<init>
		p	1		name
		p	2		iconPath
	m	(Luh;)Luh;	a	lambda$getInfo$0
		p	0		style
	m	()Ljava/lang/String;	b	getLevelName
	m	()J	f	getLastPlayed
	m	()Z	q	isDisabled
	m	()Ltl;	s	getInfo
c	eci	net/minecraft/world/level/storage/LevelVersion
	m	(IJLjava/lang/String;ILjava/lang/String;Z)V	<init>	<init>
		p	1		levelFormatVersion
		p	2		lastPlayed
		p	4		versionName
		p	5		versionId
		p	6		series
		p	7		stable
	m	()I	a	levelDataVersion
	m	(Lcom/mojang/serialization/Dynamic;)Leci;	a	parse
		p	0		dynamic
	m	()J	b	lastPlayed
	m	()Ljava/lang/String;	c	minecraftVersionName
	m	()Leca;	d	minecraftVersion
	m	()Z	e	snapshot
	f	I	a	levelDataVersion
	f	J	b	lastPlayed
	f	Ljava/lang/String;	c	minecraftVersionName
	f	Leca;	d	minecraftVersion
	f	Z	e	snapshot
c	ecj	net/minecraft/world/level/storage/PlayerDataStorage
	m	(Lecg$c;Lcom/mojang/datafixers/DataFixer;)V	<init>	<init>
		p	1		session
		p	2		dataFixer
	m	()[Ljava/lang/String;	a	getSeenPlayers
	m	(Lcbu;)V	a	save
		p	1		player
	m	(Lcbu;)Lqw;	b	load
		p	1		player
	f	Lcom/mojang/datafixers/DataFixer;	a	fixerUpper
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ljava/io/File;	c	playerDir
c	eck	net/minecraft/world/level/storage/PrimaryLevelData
	m	(Lcom/mojang/datafixers/DataFixer;ILqw;ZIIIFJJIIIZIZZZLdha$c;IILjava/util/UUID;Ljava/util/Set;Ljava/util/Set;Leha;Lqw;Ldiv$a;Lcpz;Ldlq;Leck$a;Lcom/mojang/serialization/Lifecycle;)V	<init>	<init>
		p	1		dataFixer
		p	2		dataVersion
		p	3		playerData
		p	4		modded
		p	5		spawnX
		p	6		spawnY
		p	7		spawnZ
		p	8		spawnAngle
		p	9		time
		p	11		timeOfDay
		p	13		version
		p	14		clearWeatherTime
		p	15		rainTime
		p	16		raining
		p	17		thunderTime
		p	18		thundering
		p	19		initialized
		p	20		difficultyLocked
		p	21		worldBorder
		p	22		wanderingTraderSpawnDelay
		p	23		wanderingTraderSpawnChance
		p	24		wanderingTraderId
		p	25		serverBrands
		p	26		removedFeatures
		p	27		scheduledEvents
		p	28		customBossEvents
		p	29		dragonFight
		p	30		levelInfo
		p	31		generatorOptions
		p	32		specialProperty
		p	33		lifecycle
	m	(Lcpz;Ldlq;Leck$a;Lcom/mojang/serialization/Lifecycle;)V	<init>	<init>
		p	1		levelInfo
		p	2		generatorOptions
		p	3		specialProperty
		p	4		lifecycle
	m	()Ldlq;	A	worldGenOptions
	m	()Z	B	isFlatWorld
	m	()Z	C	isDebugWorld
	m	()Lcom/mojang/serialization/Lifecycle;	D	worldGenSettingsLifecycle
	m	()Ldiv$a;	E	endDragonFightData
	m	()Lcqo;	F	getDataConfiguration
	m	()Lqw;	G	getCustomBossEvents
	m	()Z	H	wasModded
	m	()Ljava/util/Set;	I	getKnownServerBrands
	m	()Ljava/util/Set;	J	getRemovedFeatureFlags
	m	()Lecl;	K	overworldData
	m	()Lcpz;	L	getLevelSettings
	m	()V	N	updatePlayerTag
	m	()I	a	getXSpawn
	m	(F)V	a	setSpawnAngle
		p	1		spawnAngle
	m	(I)V	a	setClearWeatherTime
		p	1		clearWeatherTime
	m	(J)V	a	setGameTime
		p	1		time
	m	(Lbgv;)V	a	setDifficulty
		p	1		difficulty
	m	(Lcom/mojang/serialization/DataResult$PartialResult;)V	a	lambda$setTagData$4
		p	0		result
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/util/stream/Stream;	a	lambda$parse$1
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/DataFixer;ILqw;Lcpz;Leci;Leck$a;Ldlq;Lcom/mojang/serialization/Lifecycle;)Leck;	a	parse
		p	0		dynamic
		p	1		dataFixer
		p	2		dataVersion
		p	3		playerData
		p	4		levelInfo
		p	5		saveVersionInfo
		p	6		specialProperty
		p	7		generatorOptions
		p	8		lifecycle
	m	(Lcps;)V	a	setGameType
		p	1		gameMode
	m	(Lcqo;)V	a	setDataConfiguration
		p	1		dataConfiguration
	m	(Ldha$c;)V	a	setWorldBorder
		p	1		worldBorder
	m	(Ldiv$a;)V	a	setEndDragonFightData
		p	1		dragonFight
	m	(Lgw;F)V	a	setSpawn
		p	1		pos
		p	2		angle
	m	(Lhr;Lqw;)Lqw;	a	createTag
		p	1		registryManager
		p	2		playerNbt
	m	(Lhr;Lqw;Lqw;)V	a	setTagData
		p	1		registryManager
		p	2		levelNbt
		p	3		playerNbt
	m	(Ljava/lang/String;Z)V	a	setModdedInfo
		p	1		brand
		p	2		modded
	m	(Ljava/util/Set;)Lrc;	a	stringCollectionToTag
		p	0		strings
	m	(Ljava/util/UUID;)V	a	setWanderingTraderId
		p	1		wanderingTraderId
	m	(Lp;Lcpx;)V	a	fillCrashReportCategory
		p	1		reportSection
		p	2		world
	m	(Lqw;)V	a	setCustomBossEvents
		p	1		customBossEvents
	m	(Lqw;Lrq;)V	a	lambda$setTagData$3
		p	1		dataConfiguration
	m	(Z)V	a	setThundering
		p	1		thundering
	m	()I	b	getYSpawn
	m	(I)V	b	setXSpawn
		p	1		spawnX
	m	(J)V	b	setDayTime
		p	1		timeOfDay
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/util/stream/Stream;	b	lambda$parse$0
	m	(Lqw;Lrq;)V	b	lambda$setTagData$2
	m	(Z)V	b	setRaining
		p	1		raining
	m	()I	c	getZSpawn
	m	(I)V	c	setYSpawn
		p	1		spawnY
	m	(Z)V	c	setInitialized
		p	1		initialized
	m	()F	d	getSpawnAngle
	m	(I)V	d	setZSpawn
		p	1		spawnZ
	m	(Z)V	d	setDifficultyLocked
		p	1		difficultyLocked
	m	()J	e	getGameTime
	m	(I)V	e	setThunderTime
		p	1		thunderTime
	m	()J	f	getDayTime
	m	(I)V	f	setRainTime
		p	1		rainTime
	m	()Ljava/lang/String;	g	getLevelName
	m	(I)V	g	setWanderingTraderSpawnDelay
		p	1		wanderingTraderSpawnDelay
	m	()I	h	getClearWeatherTime
	m	(I)V	h	setWanderingTraderSpawnChance
		p	1		wanderingTraderSpawnChance
	m	()Z	i	isThundering
	m	()I	j	getThunderTime
	m	()Z	k	isRaining
	m	()I	l	getRainTime
	m	()Lcps;	m	getGameType
	m	()Z	n	isHardcore
	m	()Z	o	getAllowCommands
	m	()Z	p	isInitialized
	m	()Lcpr;	q	getGameRules
	m	()Ldha$c;	r	getWorldBorder
	m	()Lbgv;	s	getDifficulty
	m	()Z	t	isDifficultyLocked
	m	()Leha;	u	getScheduledEvents
	m	()I	v	getWanderingTraderSpawnDelay
	m	()I	w	getWanderingTraderSpawnChance
	m	()Ljava/util/UUID;	x	getWanderingTraderId
	m	()Lqw;	y	getLoadedPlayerTag
	m	()I	z	getVersion
	f	Z	A	difficultyLocked
	f	Ldha$c;	B	worldBorder
	f	Ldiv$a;	C	endDragonFightData
	f	Lqw;	D	customBossEvents
	f	I	E	wanderingTraderSpawnDelay
	f	I	F	wanderingTraderSpawnChance
	f	Ljava/util/UUID;	G	wanderingTraderId
	f	Ljava/util/Set;	H	knownServerBrands
	f	Z	I	wasModded
	f	Ljava/util/Set;	J	removedFeatureFlags
	f	Leha;	K	scheduledEvents
	f	Ljava/lang/String;	a	PLAYER
	f	Ljava/lang/String;	b	WORLD_GEN_SETTINGS
	f	Lorg/slf4j/Logger;	e	LOGGER
	f	Lcpz;	f	settings
	f	Ldlq;	g	worldOptions
	f	Leck$a;	h	specialWorldProperty
	f	Lcom/mojang/serialization/Lifecycle;	i	worldGenSettingsLifecycle
	f	I	j	xSpawn
	f	I	k	ySpawn
	f	I	l	zSpawn
	f	F	m	spawnAngle
	f	J	n	gameTime
	f	J	o	dayTime
	f	Lcom/mojang/datafixers/DataFixer;	p	fixerUpper
	f	I	q	playerDataVersion
	f	Z	r	upgradedPlayerTag
	f	Lqw;	s	loadedPlayerTag
	f	I	t	version
	f	I	u	clearWeatherTime
	f	Z	v	raining
	f	I	w	rainTime
	f	Z	x	thundering
	f	I	y	thunderTime
	f	Z	z	initialized
c	eck$a	net/minecraft/world/level/storage/PrimaryLevelData$SpecialWorldProperty
	m	()[Leck$a;	a	$values
	f	Leck$a;	a	NONE
	f	Leck$a;	b	FLAT
	f	Leck$a;	c	DEBUG
	f	[Leck$a;	d	$VALUES
c	ecl	net/minecraft/world/level/storage/ServerLevelData
	m	(I)V	a	setClearWeatherTime
		p	1		clearWeatherTime
	m	(J)V	a	setGameTime
		p	1		time
	m	(Lcps;)V	a	setGameType
		p	1		gameMode
	m	(Ldha$c;)V	a	setWorldBorder
		p	1		worldBorder
	m	(Ljava/util/UUID;)V	a	setWanderingTraderId
		p	1		wanderingTraderId
	m	(Lp;Lcpx;)V	a	fillCrashReportCategory
		p	1		reportSection
		p	2		world
	m	(Z)V	a	setThundering
		p	1		thundering
	m	(J)V	b	setDayTime
		p	1		timeOfDay
	m	(Z)V	c	setInitialized
		p	1		initialized
	m	(I)V	e	setThunderTime
		p	1		thunderTime
	m	(I)V	f	setRainTime
		p	1		rainTime
	m	()Ljava/lang/String;	g	getLevelName
	m	(I)V	g	setWanderingTraderSpawnDelay
		p	1		wanderingTraderSpawnDelay
	m	()I	h	getClearWeatherTime
	m	(I)V	h	setWanderingTraderSpawnChance
		p	1		wanderingTraderSpawnChance
	m	()I	j	getThunderTime
	m	()I	l	getRainTime
	m	()Lcps;	m	getGameType
	m	()Z	o	getAllowCommands
	m	()Z	p	isInitialized
	m	()Ldha$c;	r	getWorldBorder
	m	()Leha;	u	getScheduledEvents
	m	()I	v	getWanderingTraderSpawnDelay
	m	()I	w	getWanderingTraderSpawnChance
	m	()Ljava/util/UUID;	x	getWanderingTraderId
	m	()Ljava/lang/String;	y	lambda$fillCrashReportCategory$1
	m	()Ljava/lang/String;	z	lambda$fillCrashReportCategory$0
c	ecm	net/minecraft/world/level/storage/WorldData
	m	()Ldlq;	A	worldGenOptions
	m	()Z	B	isFlatWorld
	m	()Z	C	isDebugWorld
	m	()Lcom/mojang/serialization/Lifecycle;	D	worldGenSettingsLifecycle
	m	()Ldiv$a;	E	endDragonFightData
	m	()Lcqo;	F	getDataConfiguration
	m	()Lqw;	G	getCustomBossEvents
	m	()Z	H	wasModded
	m	()Ljava/util/Set;	I	getKnownServerBrands
	m	()Ljava/util/Set;	J	getRemovedFeatureFlags
	m	()Lecl;	K	overworldData
	m	()Lcpz;	L	getLevelSettings
	m	()Lcec;	M	enabledFeatures
	m	()Ljava/lang/String;	a	lambda$fillCrashReportCategory$3
	m	(Lbgv;)V	a	setDifficulty
		p	1		difficulty
	m	(Lcps;)V	a	setGameType
		p	1		gameMode
	m	(Lcqo;)V	a	setDataConfiguration
		p	1		dataConfiguration
	m	(Ldiv$a;)V	a	setEndDragonFightData
		p	1		dragonFight
	m	(Lhr;Lqw;)Lqw;	a	createTag
		p	1		registryManager
		p	2		playerNbt
	m	(Ljava/lang/String;Z)V	a	setModdedInfo
		p	1		brand
		p	2		modded
	m	(Lp;)V	a	fillCrashReportCategory
		p	1		section
	m	(Lqw;)V	a	setCustomBossEvents
		p	1		customBossEvents
	m	()Ljava/lang/String;	b	lambda$fillCrashReportCategory$2
	m	()Ljava/lang/String;	c	lambda$fillCrashReportCategory$1
	m	()Ljava/lang/String;	d	lambda$fillCrashReportCategory$0
	m	(Z)V	d	setDifficultyLocked
		p	1		difficultyLocked
	m	()Ljava/lang/String;	g	getLevelName
	m	(I)Ljava/lang/String;	i	getStorageVersionName
		p	1		id
	m	()Lcps;	m	getGameType
	m	()Z	n	isHardcore
	m	()Z	o	getAllowCommands
	m	()Lcpr;	q	getGameRules
	m	()Lbgv;	s	getDifficulty
	m	()Z	t	isDifficultyLocked
	m	()Lqw;	y	getLoadedPlayerTag
	m	()I	z	getVersion
	f	I	c	ANVIL_VERSION_ID
	f	I	d	MCREGION_VERSION_ID
c	ecn	net/minecraft/world/level/storage/WritableLevelData
	m	(F)V	a	setSpawnAngle
		p	1		spawnAngle
	m	(Lgw;F)V	a	setSpawn
		p	1		pos
		p	2		angle
	m	(I)V	b	setXSpawn
		p	1		spawnX
	m	(I)V	c	setYSpawn
		p	1		spawnY
	m	(I)V	d	setZSpawn
		p	1		spawnZ
c	eco	net/minecraft/world/level/storage/loot/BuiltInLootTables
	m	()Ljava/util/Set;	a	all
	m	(Laew;)Laew;	a	register
		p	0		id
	m	(Ljava/lang/String;)Laew;	a	register
		p	0		id
	f	Laew;	A	JUNGLE_TEMPLE
	f	Laew;	B	JUNGLE_TEMPLE_DISPENSER
	f	Laew;	C	IGLOO_CHEST
	f	Laew;	D	WOODLAND_MANSION
	f	Laew;	E	UNDERWATER_RUIN_SMALL
	f	Laew;	F	UNDERWATER_RUIN_BIG
	f	Laew;	G	BURIED_TREASURE
	f	Laew;	H	SHIPWRECK_MAP
	f	Laew;	I	SHIPWRECK_SUPPLY
	f	Laew;	J	SHIPWRECK_TREASURE
	f	Laew;	K	PILLAGER_OUTPOST
	f	Laew;	L	BASTION_TREASURE
	f	Laew;	M	BASTION_OTHER
	f	Laew;	N	BASTION_BRIDGE
	f	Laew;	O	BASTION_HOGLIN_STABLE
	f	Laew;	P	ANCIENT_CITY
	f	Laew;	Q	ANCIENT_CITY_ICE_BOX
	f	Laew;	R	RUINED_PORTAL
	f	Laew;	S	SHEEP_WHITE
	f	Laew;	T	SHEEP_ORANGE
	f	Laew;	U	SHEEP_MAGENTA
	f	Laew;	V	SHEEP_LIGHT_BLUE
	f	Laew;	W	SHEEP_YELLOW
	f	Laew;	X	SHEEP_LIME
	f	Laew;	Y	SHEEP_PINK
	f	Laew;	Z	SHEEP_GRAY
	f	Laew;	aA	SNIFFER_DIGGING
	f	Laew;	aB	PIGLIN_BARTERING
	f	Laew;	aC	DESERT_WELL_ARCHAEOLOGY
	f	Laew;	aD	DESERT_PYRAMID_ARCHAEOLOGY
	f	Laew;	aE	TRAIL_RUINS_ARCHAEOLOGY_COMMON
	f	Laew;	aF	TRAIL_RUINS_ARCHAEOLOGY_RARE
	f	Laew;	aG	OCEAN_RUIN_WARM_ARCHAEOLOGY
	f	Laew;	aH	OCEAN_RUIN_COLD_ARCHAEOLOGY
	f	Ljava/util/Set;	aI	LOCATIONS
	f	Ljava/util/Set;	aJ	IMMUTABLE_LOCATIONS
	f	Laew;	a	EMPTY
	f	Laew;	aa	SHEEP_LIGHT_GRAY
	f	Laew;	ab	SHEEP_CYAN
	f	Laew;	ac	SHEEP_PURPLE
	f	Laew;	ad	SHEEP_BLUE
	f	Laew;	ae	SHEEP_BROWN
	f	Laew;	af	SHEEP_GREEN
	f	Laew;	ag	SHEEP_RED
	f	Laew;	ah	SHEEP_BLACK
	f	Laew;	ai	FISHING
	f	Laew;	aj	FISHING_JUNK
	f	Laew;	ak	FISHING_TREASURE
	f	Laew;	al	FISHING_FISH
	f	Laew;	am	CAT_MORNING_GIFT
	f	Laew;	an	ARMORER_GIFT
	f	Laew;	ao	BUTCHER_GIFT
	f	Laew;	ap	CARTOGRAPHER_GIFT
	f	Laew;	aq	CLERIC_GIFT
	f	Laew;	ar	FARMER_GIFT
	f	Laew;	as	FISHERMAN_GIFT
	f	Laew;	at	FLETCHER_GIFT
	f	Laew;	au	LEATHERWORKER_GIFT
	f	Laew;	av	LIBRARIAN_GIFT
	f	Laew;	aw	MASON_GIFT
	f	Laew;	ax	SHEPHERD_GIFT
	f	Laew;	ay	TOOLSMITH_GIFT
	f	Laew;	az	WEAPONSMITH_GIFT
	f	Laew;	b	SPAWN_BONUS_CHEST
	f	Laew;	c	END_CITY_TREASURE
	f	Laew;	d	SIMPLE_DUNGEON
	f	Laew;	e	VILLAGE_WEAPONSMITH
	f	Laew;	f	VILLAGE_TOOLSMITH
	f	Laew;	g	VILLAGE_ARMORER
	f	Laew;	h	VILLAGE_CARTOGRAPHER
	f	Laew;	i	VILLAGE_MASON
	f	Laew;	j	VILLAGE_SHEPHERD
	f	Laew;	k	VILLAGE_BUTCHER
	f	Laew;	l	VILLAGE_FLETCHER
	f	Laew;	m	VILLAGE_FISHER
	f	Laew;	n	VILLAGE_TANNERY
	f	Laew;	o	VILLAGE_TEMPLE
	f	Laew;	p	VILLAGE_DESERT_HOUSE
	f	Laew;	q	VILLAGE_PLAINS_HOUSE
	f	Laew;	r	VILLAGE_TAIGA_HOUSE
	f	Laew;	s	VILLAGE_SNOWY_HOUSE
	f	Laew;	t	VILLAGE_SAVANNA_HOUSE
	f	Laew;	u	ABANDONED_MINESHAFT
	f	Laew;	v	NETHER_BRIDGE
	f	Laew;	w	STRONGHOLD_LIBRARY
	f	Laew;	x	STRONGHOLD_CROSSING
	f	Laew;	y	STRONGHOLD_CORRIDOR
	f	Laew;	z	DESERT_PYRAMID
c	ecp	net/minecraft/world/level/storage/loot/IntRange
	m	(Legk;Legk;)V	<init>	<init>
		p	1		min
		p	2		max
	m	(Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
		p	1		min
		p	2		max
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(I)Lecp;	a	exact
		p	0		value
	m	(II)Lecp;	a	range
		p	0		min
		p	1		max
	m	(Lcom/mojang/datafixers/util/Either;)Lecp;	a	lambda$static$3
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Lecp;)Lcom/mojang/datafixers/util/Either;	a	lambda$static$4
	m	(Lecq;I)I	a	clamp
		p	1		context
		p	2		value
	m	(Legk;Lecq;I)Z	a	lambda$new$10
		p	1		context
		p	2		value
	m	(Legk;Legk;Lecq;I)Z	a	lambda$new$12
		p	2		context
		p	3		value
	m	()Ljava/util/OptionalInt;	b	unpackExact
	m	(I)Lecp;	b	lowerBound
		p	0		min
	m	(Lecp;)Ljava/util/Optional;	b	lambda$static$1
	m	(Lecq;I)Z	b	test
		p	1		context
		p	2		value
	m	(Legk;Lecq;I)I	b	lambda$new$9
		p	1		context
		p	2		value
	m	(Legk;Legk;Lecq;I)I	b	lambda$new$11
		p	2		context
		p	3		value
	m	(I)Lecp;	c	upperBound
		p	0		max
	m	(Lecp;)Ljava/util/Optional;	c	lambda$static$0
	m	(Lecq;I)Z	c	lambda$new$6
		p	0		context
		p	1		value
	m	(Legk;Lecq;I)Z	c	lambda$new$8
		p	1		context
		p	2		value
	m	(Lecq;I)I	d	lambda$new$5
		p	0		context
		p	1		value
	m	(Legk;Lecq;I)I	d	lambda$new$7
		p	1		context
		p	2		value
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcom/mojang/serialization/Codec;	b	RECORD_CODEC
	f	Legk;	c	min
	f	Legk;	d	max
	f	Lecp$b;	e	limiter
	f	Lecp$a;	f	predicate
c	ecp$a	net/minecraft/world/level/storage/loot/IntRange$IntChecker
	m	(Lecq;I)Z	test	test
		p	1		context
		p	2		value
c	ecp$b	net/minecraft/world/level/storage/loot/IntRange$IntLimiter
	m	(Lecq;I)I	apply	apply
		p	1		context
		p	2		value
c	ecq	net/minecraft/world/level/storage/loot/LootContext
	m	(Lecw;Lasc;Lecu;)V	<init>	<init>
		p	1		parameters
		p	2		random
		p	3		dataLookup
	m	()Lecu;	a	getResolver
	m	(Laew;Ljava/util/function/Consumer;)V	a	addDynamicDrops
		p	1		id
		p	2		lootConsumer
	m	(Lecq$c;)Z	a	hasVisitedElement
		p	1		entry
	m	(Lecy;)Lecq$c;	a	createVisitedEntry
		p	0		table
	m	(Leed;)Lecq$c;	a	createVisitedEntry
		p	0		itemModifier
	m	(Leey;)Z	a	hasParam
		p	1		parameter
	m	(Lefp;)Lecq$c;	a	createVisitedEntry
		p	0		predicate
	m	()Lasc;	b	getRandom
	m	(Lecq$c;)Z	b	pushVisitedElement
		p	1		entry
	m	(Leey;)Ljava/lang/Object;	b	getParam
		p	1		parameter
	m	()F	c	getLuck
	m	(Lecq$c;)V	c	popVisitedElement
		p	1		entry
	m	(Leey;)Ljava/lang/Object;	c	getParamOrNull
		p	1		parameter
	m	()Lakq;	d	getLevel
	f	Lecw;	a	params
	f	Lasc;	b	random
	f	Lecu;	c	lootDataResolver
	f	Ljava/util/Set;	d	visitedElements
c	ecq$a	net/minecraft/world/level/storage/loot/LootContext$Builder
	m	(Lecw;)V	<init>	<init>
		p	1		parameters
	m	()Lakq;	a	getLevel
	m	(J)Lecq$a;	a	withOptionalRandomSeed
		p	1		seed
	m	(Ljava/util/Optional;)Lecq;	a	create
		p	1		randomId
	m	(Ljava/util/Optional;Lakq;)Ljava/util/Optional;	a	lambda$create$0
	f	Lecw;	a	params
	f	Lasc;	b	random
c	ecq$b	net/minecraft/world/level/storage/loot/LootContext$EntityTarget
	m	(Ljava/lang/String;ILjava/lang/String;Leey;)V	<init>	<init>
		p	3		type
		p	4		parameter
	m	()Leey;	a	getParam
	m	(Ljava/lang/String;)Lecq$b;	a	getByName
		p	0		type
	m	()[Lecq$b;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lecq$b;	a	THIS
	f	Lecq$b;	b	KILLER
	f	Lecq$b;	c	DIRECT_KILLER
	f	Lecq$b;	d	KILLER_PLAYER
	f	Lasp$a;	e	CODEC
	f	Ljava/lang/String;	f	name
	f	Leey;	g	param
	f	[Lecq$b;	h	$VALUES
c	ecq$c	net/minecraft/world/level/storage/loot/LootContext$VisitedEntry
	m	()Lecv;	a	type
	m	()Ljava/lang/Object;	b	value
	f	Lecv;	a	type
	f	Ljava/lang/Object;	b	value
c	ecr	net/minecraft/world/level/storage/loot/LootContextUser
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(Lecz;)V	a	validate
		p	1		reporter
c	ecs	net/minecraft/world/level/storage/loot/LootDataId
	m	()Lecv;	a	type
	m	()Laew;	b	location
	f	Lecv;	a	type
	f	Laew;	b	location
c	ect	net/minecraft/world/level/storage/loot/LootDataManager
	m	(I)[Ljava/util/concurrent/CompletableFuture;	a	lambda$reload$1
	m	(Lann$a;Lant;Lbdp;Lbdp;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	reload
		p	1		synchronizer
		p	2		manager
		p	3		prepareProfiler
		p	4		applyProfiler
		p	5		prepareExecutor
		p	6		applyExecutor
	m	(Lant;Lecv;Ljava/util/Map;)V	a	lambda$scheduleElementParse$5
	m	(Lant;Ljava/util/concurrent/Executor;Ljava/util/Map;Lecv;)Ljava/util/concurrent/CompletableFuture;	a	lambda$reload$0
		p	3		type
	m	(Lcom/google/common/collect/ImmutableMap$Builder;Lcom/google/common/collect/ImmutableMultimap$Builder;Lecv;Ljava/util/Map;)V	a	lambda$apply$7
		p	2		type
		p	3		idToValue
	m	(Lcom/google/common/collect/ImmutableMap$Builder;Lecv;Lcom/google/common/collect/ImmutableMultimap$Builder;Laew;Ljava/lang/Object;)V	a	lambda$apply$6
		p	3		id
		p	4		value
	m	(Lecv;)Ljava/util/Collection;	a	getKeys
		p	1		type
	m	(Lecv;Lant;Ljava/util/concurrent/Executor;Ljava/util/Map;)Ljava/util/concurrent/CompletableFuture;	a	scheduleElementParse
		p	0		type
		p	1		resourceManager
		p	2		executor
		p	3		results
	m	(Lecv;Ljava/util/Map;Laew;Lcom/google/gson/JsonElement;)V	a	lambda$scheduleElementParse$4
		p	2		id
		p	3		json
	m	(Lecz;Lecs;Ljava/lang/Object;)V	a	castAndValidate
		p	0		reporter
		p	1		key
		p	2		value
	m	(Ljava/lang/String;Ljava/lang/String;)V	a	lambda$apply$9
		p	0		name
		p	1		message
	m	(Ljava/util/Map;)V	a	apply
		p	1		lootData
	m	(Ljava/util/Map;Laew;Ljava/lang/Object;)V	a	lambda$scheduleElementParse$3
		p	2		value
	m	(Ljava/util/Map;Ljava/lang/Void;)V	a	lambda$reload$2
		p	2		v
	m	(Lecz;Lecs;Ljava/lang/Object;)V	b	lambda$apply$8
		p	1		key
		p	2		value
	m	(Lecs;)Ljava/lang/Object;	getElement	getElement
		p	1		key
	f	Lecs;	a	EMPTY_LOOT_TABLE_KEY
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Lcom/google/gson/Gson;	c	GSON
	f	Ljava/util/Map;	d	elements
	f	Lcom/google/common/collect/Multimap;	e	typeKeys
c	ect$1	net/minecraft/world/level/storage/loot/LootDataManager$1
	m	(Lecs;)Ljava/lang/Object;	getElement	getElement
		p	1		key
	f	Ljava/util/Map;	a	val$bakedElements
	f	Lect;	b	this$0
c	ecu	net/minecraft/world/level/storage/loot/LootDataResolver
	m	(Lecs;)Ljava/lang/Object;	getElement	getElement
		p	1		key
	m	(Lecv;Laew;)Ljava/lang/Object;	getElement	getElement
		p	1		type
		p	2		id
	m	(Lecs;)Ljava/util/Optional;	getElementOptional	getElementOptional
		p	1		key
	m	(Lecv;Laew;)Ljava/util/Optional;	getElementOptional	getElementOptional
		p	1		type
		p	2		id
	m	(Laew;)Lecy;	getLootTable	getLootTable
		p	1		id
c	ecv	net/minecraft/world/level/storage/loot/LootDataType
	m	(Lcom/mojang/serialization/Codec;Ljava/lang/String;Lecv$a;)V	<init>	<init>
		p	1		codec
		p	2		id
		p	3		validator
	m	()Ljava/lang/String;	a	directory
	m	(Laew;Lcom/google/gson/JsonElement;)Ljava/util/Optional;	a	deserialize
		p	1		id
		p	2		json
	m	(Laew;Lcom/mojang/serialization/DataResult$PartialResult;)V	a	lambda$deserialize$0
	m	(Lecz;Lecs;Lecr;)V	a	lambda$createSimpleValidator$1
		p	0		reporter
		p	1		key
		p	2		value
	m	(Lecz;Lecs;Lecy;)V	a	lambda$createLootTableValidator$2
		p	0		reporter
		p	1		key
		p	2		value
	m	(Lecz;Lecs;Ljava/lang/Object;)V	a	runValidation
		p	1		reporter
		p	2		key
		p	3		value
	m	()Ljava/util/stream/Stream;	b	values
	m	()Lecv$a;	c	createSimpleValidator
	m	()Lecv$a;	d	createLootTableValidator
	f	Lecv;	a	PREDICATE
	f	Lecv;	b	MODIFIER
	f	Lecv;	c	TABLE
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	Lcom/mojang/serialization/Codec;	e	codec
	f	Ljava/lang/String;	f	directory
	f	Lecv$a;	g	validator
c	ecv$a	net/minecraft/world/level/storage/loot/LootDataType$Validator
	m	(Lecz;Lecs;Ljava/lang/Object;)V	run	run
		p	1		reporter
		p	2		key
		p	3		value
c	ecw	net/minecraft/world/level/storage/loot/LootParams
	m	(Lakq;Ljava/util/Map;Ljava/util/Map;F)V	<init>	<init>
		p	1		world
		p	2		parameters
		p	3		dynamicDrops
		p	4		luck
	m	()Lakq;	a	getLevel
	m	(Laew;Ljava/util/function/Consumer;)V	a	addDynamicDrops
		p	1		id
		p	2		lootConsumer
	m	(Leey;)Z	a	hasParam
		p	1		parameter
	m	()F	b	getLuck
	m	(Leey;)Ljava/lang/Object;	b	getParameter
		p	1		parameter
	m	(Leey;)Ljava/lang/Object;	c	getOptionalParameter
		p	1		parameter
	m	(Leey;)Ljava/lang/Object;	d	getParamOrNull
		p	1		parameter
	f	Lakq;	a	level
	f	Ljava/util/Map;	b	params
	f	Ljava/util/Map;	c	dynamicDrops
	f	F	d	luck
c	ecw$a	net/minecraft/world/level/storage/loot/LootParams$Builder
	m	(Lakq;)V	<init>	<init>
		p	1		world
	m	()Lakq;	a	getLevel
	m	(F)Lecw$a;	a	withLuck
		p	1		luck
	m	(Laew;Lecw$b;)Lecw$a;	a	withDynamicDrop
		p	1		id
		p	2		dynamicDrop
	m	(Leey;)Ljava/lang/Object;	a	getParameter
		p	1		parameter
	m	(Leey;Ljava/lang/Object;)Lecw$a;	a	withParameter
		p	1		parameter
		p	2		value
	m	(Leez;)Lecw;	a	create
		p	1		contextType
	m	(Leey;)Ljava/lang/Object;	b	getOptionalParameter
		p	1		parameter
	m	(Leey;Ljava/lang/Object;)Lecw$a;	b	withOptionalParameter
		p	1		parameter
		p	2		value
	f	Lakq;	a	level
	f	Ljava/util/Map;	b	params
	f	Ljava/util/Map;	c	dynamicDrops
	f	F	d	luck
c	ecw$b	net/minecraft/world/level/storage/loot/LootParams$DynamicDrop
	m	(Ljava/util/function/Consumer;)V	add	add
		p	1		lootConsumer
c	ecx	net/minecraft/world/level/storage/loot/LootPool
	m	(Ljava/util/List;Ljava/util/List;Ljava/util/List;Legk;Legk;)V	<init>	<init>
		p	1		entries
		p	2		conditions
		p	3		functions
		p	4		rolls
		p	5		bonusRolls
	m	()Lecx$a;	a	lootPool
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$5
	m	(Lecq;Ljava/util/List;Lorg/apache/commons/lang3/mutable/MutableInt;Ledi;)V	a	lambda$addRandomItem$6
		p	3		choice
	m	(Lecx;)Legk;	a	lambda$static$4
	m	(Lecz;)V	a	validate
		p	1		reporter
	m	(Ljava/util/function/Consumer;Lecq;)V	a	addRandomItems
		p	1		lootConsumer
		p	2		context
	m	(Lecx;)Legk;	b	lambda$static$3
	m	(Ljava/util/function/Consumer;Lecq;)V	b	addRandomItem
		p	1		lootConsumer
		p	2		context
	m	(Lecx;)Ljava/util/List;	c	lambda$static$2
	m	(Lecx;)Ljava/util/List;	d	lambda$static$1
	m	(Lecx;)Ljava/util/List;	e	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/List;	b	entries
	f	Ljava/util/List;	c	conditions
	f	Ljava/util/function/Predicate;	d	compositeCondition
	f	Ljava/util/List;	e	functions
	f	Ljava/util/function/BiFunction;	f	compositeFunction
	f	Legk;	g	rolls
	f	Legk;	h	bonusRolls
c	ecx$a	net/minecraft/world/level/storage/loot/LootPool$Builder
	m	()Lecx$a;	a	unwrap
	m	(Ledj$a;)Lecx$a;	a	add
		p	1		entry
	m	(Leed$a;)Lecx$a;	a	apply
	m	(Lefp$a;)Lecx$a;	a	when
	m	(Legk;)Lecx$a;	a	setRolls
		p	1		rolls
	m	()Lecx;	b	build
	m	(Leed$a;)Leea;	b	apply
		p	1		function
	m	(Lefp$a;)Lefi;	b	when
		p	1		condition
	m	(Legk;)Lecx$a;	b	setBonusRolls
		p	1		bonusRolls
	m	()Leea;	c	unwrap
	m	()Lefi;	d	unwrap
	f	Lcom/google/common/collect/ImmutableList$Builder;	a	entries
	f	Lcom/google/common/collect/ImmutableList$Builder;	b	conditions
	f	Lcom/google/common/collect/ImmutableList$Builder;	c	functions
	f	Legk;	d	rolls
	f	Legk;	e	bonusRolls
c	ecy	net/minecraft/world/level/storage/loot/LootTable
	m	(Leez;Ljava/util/Optional;Ljava/util/List;Ljava/util/List;)V	<init>	<init>
		p	1		type
		p	2		randomSequenceId
		p	3		pools
		p	4		functions
	m	()Leez;	a	getParamSet
	m	(Lakq;Ljava/util/function/Consumer;)Ljava/util/function/Consumer;	a	createStackSplitter
		p	0		world
		p	1		consumer
	m	(Lakq;Ljava/util/function/Consumer;Lcjf;)V	a	lambda$createStackSplitter$5
		p	2		stack
	m	(Lbgr;Lasc;)Ljava/util/List;	a	getAvailableSlots
		p	1		inventory
		p	2		random
	m	(Lbgr;Lecw;J)V	a	fill
		p	1		inventory
		p	2		parameters
		p	3		seed
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
		p	0		instance
	m	(Lecq;)Lit/unimi/dsi/fastutil/objects/ObjectArrayList;	a	getRandomItems
		p	1		context
	m	(Lecq;Ljava/util/function/Consumer;)V	a	getRandomItemsRaw
		p	1		context
		p	2		lootConsumer
	m	(Lecw;)Lit/unimi/dsi/fastutil/objects/ObjectArrayList;	a	getRandomItems
		p	1		parameters
	m	(Lecw;J)Lit/unimi/dsi/fastutil/objects/ObjectArrayList;	a	getRandomItems
		p	1		parameters
		p	2		seed
	m	(Lecw;JLjava/util/function/Consumer;)V	a	getRandomItems
		p	1		parameters
		p	2		seed
		p	4		lootConsumer
	m	(Lecw;Ljava/util/function/Consumer;)V	a	getRandomItemsRaw
		p	1		parameters
		p	2		lootConsumer
	m	(Lecy;)Ljava/util/List;	a	lambda$static$3
		p	0		table
	m	(Lecz;)V	a	validate
		p	1		reporter
	m	(Lit/unimi/dsi/fastutil/objects/ObjectArrayList;ILasc;)V	a	shuffleAndSplitItems
		p	1		drops
		p	2		freeSlots
		p	3		random
	m	()Lecy$a;	b	lootTable
	m	(Lecq;Ljava/util/function/Consumer;)V	b	getRandomItems
		p	1		context
		p	2		lootConsumer
	m	(Lecw;Ljava/util/function/Consumer;)V	b	getRandomItems
		p	1		parameters
		p	2		lootConsumer
	m	(Lecy;)Ljava/util/List;	b	lambda$static$2
		p	0		table
	m	(Lecy;)Ljava/util/Optional;	c	lambda$static$1
		p	0		table
	m	(Lecy;)Leez;	d	lambda$static$0
		p	0		table
	f	Lecy;	a	EMPTY
	f	Leez;	b	DEFAULT_PARAM_SET
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	Leez;	e	paramSet
	f	Ljava/util/Optional;	f	randomSequence
	f	Ljava/util/List;	g	pools
	f	Ljava/util/List;	h	functions
	f	Ljava/util/function/BiFunction;	i	compositeFunction
c	ecy$a	net/minecraft/world/level/storage/loot/LootTable$Builder
	m	()Lecy$a;	a	unwrap
	m	(Laew;)Lecy$a;	a	setRandomSequence
		p	1		randomSequenceId
	m	(Lecx$a;)Lecy$a;	a	withPool
		p	1		poolBuilder
	m	(Leed$a;)Lecy$a;	a	apply
	m	(Leez;)Lecy$a;	a	setParamSet
		p	1		type
	m	()Lecy;	b	build
	m	(Leed$a;)Leea;	b	apply
		p	1		function
	m	()Leea;	c	unwrap
	f	Lcom/google/common/collect/ImmutableList$Builder;	a	pools
	f	Lcom/google/common/collect/ImmutableList$Builder;	b	functions
	f	Leez;	c	paramSet
	f	Ljava/util/Optional;	d	randomSequence
c	ecz	net/minecraft/world/level/storage/loot/ValidationContext
	m	(Lcom/google/common/collect/Multimap;Ljava/util/function/Supplier;Leez;Lecu;Ljava/util/Set;)V	<init>	<init>
		p	1		messages
		p	2		nameFactory
		p	3		contextType
		p	4		dataLookup
		p	5		referenceStack
	m	(Leez;Lecu;)V	<init>	<init>
		p	1		contextType
		p	2		dataLookup
	m	()Lcom/google/common/collect/Multimap;	a	getProblems
	m	(Lecr;)V	a	validateUser
		p	1		contextAware
	m	(Lecs;)Z	a	hasVisitedElement
		p	1		key
	m	(Leez;)Lecz;	a	setParams
		p	1		contextType
	m	(Ljava/lang/String;)V	a	reportProblem
		p	1		message
	m	(Ljava/lang/String;Lecs;)Lecz;	a	enterElement
		p	1		name
		p	2		currentKey
	m	()Lecu;	b	resolver
	m	(Ljava/lang/String;)Lecz;	b	forChild
		p	1		name
	m	()Ljava/lang/String;	c	getContext
	m	(Ljava/lang/String;)Ljava/lang/String;	c	lambda$enterElement$2
	m	()Ljava/lang/String;	d	lambda$new$0
	m	(Ljava/lang/String;)Ljava/lang/String;	d	lambda$forChild$1
	f	Lcom/google/common/collect/Multimap;	a	problems
	f	Ljava/util/function/Supplier;	b	context
	f	Leez;	c	params
	f	Lecu;	d	resolver
	f	Ljava/util/Set;	e	visitedElements
	f	Ljava/lang/String;	f	contextCache
c	eda	net/minecraft/world/level/storage/loot/entries/AlternativesEntry
	m	(Ljava/util/List;Ljava/util/List;)V	<init>	<init>
		p	1		terms
		p	2		conditions
	m	()Ledk;	a	getType
	m	(I)[Ledj$a;	a	lambda$alternatives$1
	m	(Lecz;)V	a	validate
		p	1		reporter
	m	(Ljava/util/Collection;Ljava/util/function/Function;)Leda$a;	a	alternatives
		p	0		children
		p	1		toBuilderFunction
	m	(Ljava/util/List;)Ledb;	a	compose
	m	(Ljava/util/List;Lecq;Ljava/util/function/Consumer;)Z	a	lambda$compose$0
		p	1		context
		p	2		lootChoiceExpander
	m	([Ledj$a;)Leda$a;	a	alternatives
		p	0		children
	f	Lcom/mojang/serialization/Codec;	a	CODEC
c	eda$a	net/minecraft/world/level/storage/loot/entries/AlternativesEntry$Builder
	m	([Ledj$a;)V	<init>	<init>
		p	1		children
	m	()Leda$a;	a	getThis
	m	(Ledj$a;)Leda$a;	a	otherwise
		p	1		builder
	m	()Ledj$a;	ax_	getThis
	m	()Ledj;	b	build
	f	Lcom/google/common/collect/ImmutableList$Builder;	a	entries
c	edb	net/minecraft/world/level/storage/loot/entries/ComposableEntryContainer
	m	(Lecq;Ljava/util/function/Consumer;)Z	a	lambda$static$1
		p	0		context
		p	1		choiceConsumer
	m	(Ledb;Lecq;Ljava/util/function/Consumer;)Z	a	lambda$or$3
		p	2		context
		p	3		lootChoiceExpander
	m	(Ledb;)Ledb;	and	and
		p	1		other
	m	(Lecq;Ljava/util/function/Consumer;)Z	b	lambda$static$0
		p	0		context
		p	1		choiceConsumer
	m	(Ledb;Lecq;Ljava/util/function/Consumer;)Z	b	lambda$and$2
		p	2		context
		p	3		lootChoiceExpander
	m	(Lecq;Ljava/util/function/Consumer;)Z	expand	expand
		p	1		context
		p	2		choiceConsumer
	m	(Ledb;)Ledb;	or	or
		p	1		other
	f	Ledb;	b	ALWAYS_FALSE
	f	Ledb;	c	ALWAYS_TRUE
c	edc	net/minecraft/world/level/storage/loot/entries/CompositeEntryBase
	m	(Ljava/util/List;Ljava/util/List;)V	<init>	<init>
		p	1		terms
		p	2		conditions
	m	(Lecz;)V	a	validate
		p	1		reporter
	m	(Ledc$a;)Lcom/mojang/serialization/Codec;	a	createCodec
		p	0		factory
	m	(Ledc$a;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$createCodec$1
	m	(Ledc;)Ljava/util/List;	a	lambda$createCodec$0
	m	(Ljava/util/List;)Ledb;	a	compose
	m	(Lecq;Ljava/util/function/Consumer;)Z	expand	expand
		p	1		context
		p	2		choiceConsumer
	f	Ledb;	a	composedChildren
	f	Ljava/util/List;	d	children
c	edc$a	net/minecraft/world/level/storage/loot/entries/CompositeEntryBase$CompositeEntryConstructor
c	edd	net/minecraft/world/level/storage/loot/entries/DynamicLoot
	m	(Laew;IILjava/util/List;Ljava/util/List;)V	<init>	<init>
		p	1		name
		p	2		weight
		p	3		quality
		p	4		conditions
		p	5		functions
	m	()Ledk;	a	getType
	m	(Laew;)Ledl$a;	a	dynamicEntry
		p	0		name
	m	(Laew;IILjava/util/List;Ljava/util/List;)Ledl;	a	lambda$dynamicEntry$2
		p	1		weight
		p	2		quality
		p	3		conditions
		p	4		functions
	m	(Ledd;)Laew;	a	lambda$static$0
	m	(Ljava/util/function/Consumer;Lecq;)V	a	createItemStack
		p	1		lootConsumer
		p	2		context
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	c	lambda$static$1
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Laew;	j	name
c	ede	net/minecraft/world/level/storage/loot/entries/EmptyLootItem
	m	(IILjava/util/List;Ljava/util/List;)V	<init>	<init>
		p	1		weight
		p	2		quality
		p	3		conditions
		p	4		functions
	m	()Ledk;	a	getType
	m	(Ljava/util/function/Consumer;Lecq;)V	a	createItemStack
		p	1		lootConsumer
		p	2		context
	m	()Ledl$a;	b	emptyItem
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	c	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
c	edf	net/minecraft/world/level/storage/loot/entries/EntryGroup
	m	(Ljava/util/List;Ljava/util/List;)V	<init>	<init>
		p	1		terms
		p	2		conditions
	m	()Ledk;	a	getType
	m	(Ledb;Ledb;Lecq;Ljava/util/function/Consumer;)Z	a	lambda$compose$0
		p	2		context
		p	3		choiceConsumer
	m	(Ljava/util/List;)Ledb;	a	compose
	m	(Ljava/util/List;Lecq;Ljava/util/function/Consumer;)Z	a	lambda$compose$1
		p	1		context
		p	2		lootChoiceExpander
	m	([Ledj$a;)Ledf$a;	a	list
		p	0		entries
	f	Lcom/mojang/serialization/Codec;	a	CODEC
c	edf$a	net/minecraft/world/level/storage/loot/entries/EntryGroup$Builder
	m	([Ledj$a;)V	<init>	<init>
		p	1		entries
	m	()Ledf$a;	a	getThis
	m	()Ledj$a;	ax_	getThis
	m	()Ledj;	b	build
	m	(Ledj$a;)Ledf$a;	b	append
		p	1		entry
	f	Lcom/google/common/collect/ImmutableList$Builder;	a	entries
c	edg	net/minecraft/world/level/storage/loot/entries/LootItem
	m	(Lhe;IILjava/util/List;Ljava/util/List;)V	<init>	<init>
		p	1		item
		p	2		weight
		p	3		quality
		p	4		conditions
		p	5		functions
	m	()Ledk;	a	getType
	m	(Lcpu;)Ledl$a;	a	lootTableItem
		p	0		drop
	m	(Lcpu;IILjava/util/List;Ljava/util/List;)Ledl;	a	lambda$lootTableItem$2
		p	1		weight
		p	2		quality
		p	3		conditions
		p	4		functions
	m	(Ledg;)Lhe;	a	lambda$static$0
	m	(Ljava/util/function/Consumer;Lecq;)V	a	createItemStack
		p	1		lootConsumer
		p	2		context
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	c	lambda$static$1
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lhe;	j	item
c	edh	net/minecraft/world/level/storage/loot/entries/LootPoolEntries
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Ledk;	a	register
		p	0		id
		p	1		codec
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ledk;	b	EMPTY
	f	Ledk;	c	ITEM
	f	Ledk;	d	REFERENCE
	f	Ledk;	e	DYNAMIC
	f	Ledk;	f	TAG
	f	Ledk;	g	ALTERNATIVES
	f	Ledk;	h	SEQUENCE
	f	Ledk;	i	GROUP
c	edi	net/minecraft/world/level/storage/loot/entries/LootPoolEntry
	m	(F)I	a	getWeight
		p	1		luck
	m	(Ljava/util/function/Consumer;Lecq;)V	a	createItemStack
		p	1		lootConsumer
		p	2		context
c	edj	net/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		conditions
	m	()Ledk;	a	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P1;	a	commonFields
	m	(Lecq;)Z	a	canRun
		p	1		context
	m	(Lecz;)V	a	validate
		p	1		reporter
	m	(Ledj;)Ljava/util/List;	a	lambda$commonFields$0
	f	Ljava/util/function/Predicate;	a	compositeCondition
	f	Ljava/util/List;	e	conditions
c	edj$a	net/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder
	m	(Ledj$a;)Leda$a;	a	otherwise
		p	1		builder
	m	(Lefp$a;)Ledj$a;	a	when
	m	()Ledj$a;	ax_	getThis
	m	()Ledj;	b	build
	m	(Ledj$a;)Ledf$a;	b	append
		p	1		entry
	m	(Lefp$a;)Lefi;	b	when
		p	1		condition
	m	(Ledj$a;)Ledn$a;	c	then
		p	1		entry
	m	()Lefi;	d	unwrap
	m	()Ledj$a;	e	unwrap
	m	()Ljava/util/List;	f	getConditions
	f	Lcom/google/common/collect/ImmutableList$Builder;	a	conditions
c	edk	net/minecraft/world/level/storage/loot/entries/LootPoolEntryType
	m	()Lcom/mojang/serialization/Codec;	a	codec
	f	Lcom/mojang/serialization/Codec;	a	codec
c	edl	net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer
	m	(IILjava/util/List;Ljava/util/List;)V	<init>	<init>
		p	1		weight
		p	2		quality
		p	3		conditions
		p	4		functions
	m	(Lecz;)V	a	validate
		p	1		reporter
	m	(Ledl$d;)Ledl$a;	a	simpleBuilder
		p	0		factory
	m	(Ledl;)Ljava/util/List;	a	lambda$singletonFields$2
	m	(Ljava/util/function/Consumer;Lecq;)V	a	createItemStack
		p	1		lootConsumer
		p	2		context
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P4;	b	singletonFields
	m	(Ledl;)Ljava/lang/Integer;	b	lambda$singletonFields$1
	m	(Ledl;)Ljava/lang/Integer;	c	lambda$singletonFields$0
	m	(Lecq;Ljava/util/function/Consumer;)Z	expand	expand
		p	1		context
		p	2		choiceConsumer
	f	Ljava/util/function/BiFunction;	a	compositeFunction
	f	I	d	DEFAULT_WEIGHT
	f	I	f	DEFAULT_QUALITY
	f	I	g	weight
	f	I	h	quality
	f	Ljava/util/List;	i	functions
	f	Ledi;	j	entry
c	edl$1	net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$1
	m	(Ljava/util/function/Consumer;Lecq;)V	a	createItemStack
		p	1		lootConsumer
		p	2		context
	f	Ledl;	a	this$0
c	edl$a	net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Builder
	m	()Ljava/util/List;	a	getFunctions
	m	(I)Ledl$a;	a	setWeight
		p	1		weight
	m	(Leed$a;)Ledl$a;	a	apply
	m	(I)Ledl$a;	b	setQuality
		p	1		quality
	m	(Leed$a;)Leea;	b	apply
		p	1		function
	m	()Leea;	c	unwrap
	f	I	a	weight
	f	I	b	quality
	f	Lcom/google/common/collect/ImmutableList$Builder;	c	functions
c	edl$b	net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$DummyBuilder
	m	(Ledl$d;)V	<init>	<init>
		p	1		factory
	m	()Ledj$a;	ax_	getThis
	m	()Ledj;	b	build
	m	()Ledl$b;	g	getThis
	f	Ledl$d;	c	constructor
c	edl$c	net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$EntryBase
	m	(F)I	a	getWeight
		p	1		luck
	f	Ledl;	b	this$0
c	edl$d	net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$EntryConstructor
	m	(IILjava/util/List;Ljava/util/List;)Ledl;	build	build
		p	1		weight
		p	2		quality
		p	3		conditions
		p	4		functions
c	edm	net/minecraft/world/level/storage/loot/entries/LootTableReference
	m	(Laew;IILjava/util/List;Ljava/util/List;)V	<init>	<init>
		p	1		id
		p	2		weight
		p	3		quality
		p	4		conditions
		p	5		functions
	m	()Ledk;	a	getType
	m	(Laew;)Ledl$a;	a	lootTableReference
		p	0		id
	m	(Laew;IILjava/util/List;Ljava/util/List;)Ledl;	a	lambda$lootTableReference$4
		p	1		weight
		p	2		quality
		p	3		conditions
		p	4		functions
	m	(Lecz;)V	a	validate
		p	1		reporter
	m	(Lecz;Lecs;Lecy;)V	a	lambda$validate$2
		p	3		table
	m	(Ledm;)Laew;	a	lambda$static$0
	m	(Ljava/util/function/Consumer;Lecq;)V	a	createItemStack
		p	1		lootConsumer
		p	2		context
	m	(Lecz;)V	b	lambda$validate$3
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	c	lambda$static$1
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Laew;	j	name
c	edn	net/minecraft/world/level/storage/loot/entries/SequentialEntry
	m	(Ljava/util/List;Ljava/util/List;)V	<init>	<init>
		p	1		terms
		p	2		conditions
	m	()Ledk;	a	getType
	m	(Ljava/util/List;)Ledb;	a	compose
	m	(Ljava/util/List;Lecq;Ljava/util/function/Consumer;)Z	a	lambda$compose$0
		p	1		context
		p	2		lootChoiceExpander
	m	([Ledj$a;)Ledn$a;	a	sequential
		p	0		entries
	f	Lcom/mojang/serialization/Codec;	a	CODEC
c	edn$a	net/minecraft/world/level/storage/loot/entries/SequentialEntry$Builder
	m	([Ledj$a;)V	<init>	<init>
		p	1		entries
	m	()Ledn$a;	a	getThis
	m	()Ledj$a;	ax_	getThis
	m	()Ledj;	b	build
	m	(Ledj$a;)Ledn$a;	c	then
		p	1		entry
	f	Lcom/google/common/collect/ImmutableList$Builder;	a	entries
c	edo	net/minecraft/world/level/storage/loot/entries/TagEntry
	m	(Laqh;ZIILjava/util/List;Ljava/util/List;)V	<init>	<init>
		p	1		name
		p	2		expand
		p	3		weight
		p	4		quality
		p	5		conditions
		p	6		functions
	m	()Ledk;	a	getType
	m	(Laqh;)Ledl$a;	a	tagContents
		p	0		name
	m	(Laqh;IILjava/util/List;Ljava/util/List;)Ledl;	a	lambda$expandTag$5
		p	1		weight
		p	2		quality
		p	3		conditions
		p	4		functions
	m	(Lecq;Ljava/util/function/Consumer;)Z	a	expandTag
		p	1		context
		p	2		lootChoiceExpander
	m	(Ledo;)Ljava/lang/Boolean;	a	lambda$static$1
	m	(Ljava/util/function/Consumer;Lecq;)V	a	createItemStack
		p	1		lootConsumer
		p	2		context
	m	(Ljava/util/function/Consumer;Lhe;)V	a	lambda$createItemStack$3
		p	1		entry
	m	(Laqh;)Ledl$a;	b	expandTag
		p	0		name
	m	(Laqh;IILjava/util/List;Ljava/util/List;)Ledl;	b	lambda$tagContents$4
		p	1		weight
		p	2		quality
		p	3		conditions
		p	4		functions
	m	(Ledo;)Laqh;	b	lambda$static$0
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	c	lambda$static$2
	m	(Lecq;Ljava/util/function/Consumer;)Z	expand	expand
		p	1		context
		p	2		choiceConsumer
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Laqh;	j	tag
	f	Z	k	expand
c	edo$1	net/minecraft/world/level/storage/loot/entries/TagEntry$1
	m	(Ljava/util/function/Consumer;Lecq;)V	a	createItemStack
		p	1		lootConsumer
		p	2		context
	f	Lhe;	a	val$item
	f	Ledo;	c	this$0
c	edp	net/minecraft/world/level/storage/loot/entries/package-info
c	edq	net/minecraft/world/level/storage/loot/functions/ApplyBonusCount
	m	(Ljava/util/List;Lhe;Ledq$b;)V	<init>	<init>
		p	1		conditions
		p	2		enchantment
		p	3		formula
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(Laew;)Lcom/mojang/serialization/DataResult;	a	lambda$static$1
	m	(Lcjf;Lecq;)Lcjf;	a	run
		p	1		stack
		p	2		context
	m	(Lcno;)Leec$a;	a	addOreBonusCount
		p	0		enchantment
	m	(Lcno;FI)Leec$a;	a	addBonusBinomialDistributionCount
		p	0		enchantment
		p	1		probability
		p	2		extra
	m	(Lcno;I)Leec$a;	a	addUniformBonusCount
		p	0		enchantment
		p	1		bonusMultiplier
	m	(Lcno;IFLjava/util/List;)Leed;	a	lambda$addBonusBinomialDistributionCount$5
		p	3		conditions
	m	(Lcno;ILjava/util/List;)Leed;	a	lambda$addUniformBonusCount$8
		p	2		conditions
	m	(Lcno;Ljava/util/List;)Leed;	a	lambda$addUniformBonusCount$7
		p	1		conditions
	m	(Ledq;)Ledq$b;	a	lambda$static$3
	m	()Leee;	b	getType
	m	(Laew;)Ljava/lang/String;	b	lambda$static$0
	m	(Lcno;)Leec$a;	b	addUniformBonusCount
		p	0		enchantment
	m	(Lcno;Ljava/util/List;)Leed;	b	lambda$addOreBonusCount$6
		p	1		conditions
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$4
	m	(Ledq;)Lhe;	b	lambda$static$2
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Map;	b	FORMULAS
	f	Lcom/mojang/serialization/Codec;	c	FORMULA_TYPE_CODEC
	f	Lcom/mojang/serialization/MapCodec;	d	FORMULA_CODEC
	f	Lhe;	e	enchantment
	f	Ledq$b;	f	formula
c	edq$1	net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$1
	m	(Lcom/mojang/serialization/Codec;Ledq$b;Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/DataResult;	a	encode
	m	(Lcom/mojang/serialization/MapLike;)Ljava/lang/String;	a	lambda$decode$0
	m	(Lcom/mojang/serialization/MapLike;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/serialization/DataResult;	a	lambda$decode$1
	m	(Ledq$b;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/RecordBuilder;)Lcom/mojang/serialization/RecordBuilder;	a	encode
	f	Ljava/lang/String;	a	TYPE_KEY
	f	Ljava/lang/String;	b	VALUE_KEY
c	edq$a	net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$BinomialWithBonusCount
	m	(IF)V	<init>	<init>
		p	1		extra
		p	2		probability
	m	()Ledq$c;	a	getType
	m	(Lasc;II)I	a	calculateNewCount
		p	1		random
		p	2		initialCount
		p	3		enchantmentLevel
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()I	b	extraRounds
	m	()F	c	probability
	f	Ledq$c;	a	TYPE
	f	I	b	extraRounds
	f	F	c	probability
	f	Lcom/mojang/serialization/Codec;	d	CODEC
c	edq$b	net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$Formula
	m	()Ledq$c;	a	getType
	m	(Lasc;II)I	a	calculateNewCount
		p	1		random
		p	2		initialCount
		p	3		enchantmentLevel
c	edq$c	net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$FormulaType
	m	()Laew;	a	id
	m	()Lcom/mojang/serialization/Codec;	b	codec
	f	Laew;	a	id
	f	Lcom/mojang/serialization/Codec;	b	codec
c	edq$d	net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$OreDrops
	m	()Ledq$c;	a	getType
	m	(Lasc;II)I	a	calculateNewCount
		p	1		random
		p	2		initialCount
		p	3		enchantmentLevel
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ledq$c;	b	TYPE
c	edq$e	net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$UniformBonusCount
	m	(I)V	<init>	<init>
		p	1		bonusMultiplier
	m	()Ledq$c;	a	getType
	m	(Lasc;II)I	a	calculateNewCount
		p	1		random
		p	2		initialCount
		p	3		enchantmentLevel
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()I	b	bonusMultiplier
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ledq$c;	b	TYPE
	f	I	c	bonusMultiplier
c	edr	net/minecraft/world/level/storage/loot/functions/ApplyExplosionDecay
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		conditions
	m	(Lcjf;Lecq;)Lcjf;	a	run
		p	1		stack
		p	2		context
	m	()Leee;	b	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$0
	m	()Leec$a;	c	explosionDecay
	f	Lcom/mojang/serialization/Codec;	a	CODEC
c	eds	net/minecraft/world/level/storage/loot/functions/CopyBlockState
	m	(Ljava/util/List;Lhe;Ljava/util/List;)V	<init>	<init>
		p	1		conditions
		p	2		block
		p	3		properties
	m	(Ljava/util/List;Lhe;Ljava/util/Set;)V	<init>	<init>
		p	1		conditions
		p	2		block
		p	3		properties
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(Lcjf;Lecq;)Lcjf;	a	run
		p	1		stack
		p	2		context
	m	(Lcsv;)Leds$a;	a	copyState
		p	0		block
	m	(Ldfj;Ldgm;)Ljava/lang/String;	a	serialize
		p	0		state
		p	1		property
	m	(Leds;)Ljava/util/List;	a	lambda$static$1
	m	()Leee;	b	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$2
	m	(Leds;)Lhe;	b	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lhe;	b	block
	f	Ljava/util/Set;	c	properties
c	eds$a	net/minecraft/world/level/storage/loot/functions/CopyBlockState$Builder
	m	(Lcsv;)V	<init>	<init>
		p	1		block
	m	()Leds$a;	a	getThis
	m	(Ldgm;)Leds$a;	a	copy
		p	1		property
	m	()Leed;	b	build
	m	()Leec$a;	c	getThis
	f	Lhe;	a	block
	f	Lcom/google/common/collect/ImmutableSet$Builder;	b	properties
c	edt	net/minecraft/world/level/storage/loot/functions/CopyNameFunction
	m	(Ljava/util/List;Ledt$a;)V	<init>	<init>
		p	1		conditions
		p	2		source
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(Lcjf;Lecq;)Lcjf;	a	run
		p	1		stack
		p	2		context
	m	(Ledt$a;)Leec$a;	a	copyName
		p	0		source
	m	(Ledt$a;Ljava/util/List;)Leed;	a	lambda$copyName$2
	m	(Ledt;)Ledt$a;	a	lambda$static$0
	m	()Leee;	b	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$1
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ledt$a;	b	source
c	edt$a	net/minecraft/world/level/storage/loot/functions/CopyNameFunction$NameSource
	m	(Ljava/lang/String;ILjava/lang/String;Leey;)V	<init>	<init>
		p	3		name
		p	4		parameter
	m	()[Ledt$a;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Ledt$a;	a	THIS
	f	Ledt$a;	b	KILLER
	f	Ledt$a;	c	KILLER_PLAYER
	f	Ledt$a;	d	BLOCK_ENTITY
	f	Lcom/mojang/serialization/Codec;	e	CODEC
	f	Ljava/lang/String;	f	name
	f	Leey;	g	param
	f	[Ledt$a;	h	$VALUES
c	edu	net/minecraft/world/level/storage/loot/functions/CopyNbtFunction
	m	(Ljava/util/List;Legd;Ljava/util/List;)V	<init>	<init>
		p	1		conditions
		p	2		source
		p	3		operations
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(Lcjf;Lecq;)Lcjf;	a	run
		p	1		stack
		p	2		context
	m	(Lcjf;Lrq;Ledu$b;)V	a	lambda$run$3
		p	2		operation
	m	(Lecq$b;)Ledu$a;	a	copyData
		p	0		target
	m	(Ledu;)Ljava/util/List;	a	lambda$static$1
	m	(Legd;)Ledu$a;	a	copyData
		p	0		source
	m	()Leee;	b	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$2
	m	(Ledu;)Legd;	b	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Legd;	b	source
	f	Ljava/util/List;	c	operations
c	edu$a	net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$Builder
	m	(Legd;)V	<init>	<init>
		p	1		source
	m	()Ledu$a;	a	getThis
	m	(Ljava/lang/String;Ljava/lang/String;)Ledu$a;	a	copy
		p	1		source
		p	2		target
	m	(Ljava/lang/String;Ljava/lang/String;Ledu$c;)Ledu$a;	a	copy
		p	1		source
		p	2		target
		p	3		operator
	m	()Leed;	b	build
	m	()Leec$a;	c	getThis
	f	Legd;	a	source
	f	Ljava/util/List;	b	ops
c	edu$b	net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$CopyOperation
	m	(Ledu$d;Ledu$d;Ledu$c;)V	<init>	<init>
		p	3		operator
	m	()Ledu$d;	a	sourcePath
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	(Ljava/util/function/Supplier;Lrq;)V	a	apply
		p	1		itemNbtGetter
		p	2		sourceEntityNbt
	m	()Ledu$d;	b	targetPath
	m	()Ledu$c;	c	op
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ledu$d;	b	sourcePath
	f	Ledu$d;	c	targetPath
	f	Ledu$c;	d	op
c	edu$c	net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$MergeStrategy
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()[Ledu$c;	a	$values
	m	(Lrq;Lej$g;Ljava/util/List;)V	a	merge
		p	1		itemNbt
		p	2		targetPath
		p	3		sourceNbts
	m	()Ljava/lang/String;	c	getSerializedName
	f	Ledu$c;	a	REPLACE
	f	Ledu$c;	b	APPEND
	f	Ledu$c;	c	MERGE
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	Ljava/lang/String;	e	name
	f	[Ledu$c;	f	$VALUES
c	edu$c$1	net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$MergeStrategy$1
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	(Lrq;Lej$g;Ljava/util/List;)V	a	merge
		p	1		itemNbt
		p	2		targetPath
		p	3		sourceNbts
c	edu$c$2	net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$MergeStrategy$2
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	(Ljava/util/List;Lrq;)V	a	lambda$merge$1
		p	1		foundNbt
	m	(Lrq;Lej$g;Ljava/util/List;)V	a	merge
		p	1		itemNbt
		p	2		targetPath
		p	3		sourceNbts
	m	(Lrq;Lrq;)V	a	lambda$merge$0
		p	1		sourceNbt
c	edu$c$3	net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$MergeStrategy$3
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	(Ljava/util/List;Lrq;)V	a	lambda$merge$1
		p	1		foundNbt
	m	(Lrq;Lej$g;Ljava/util/List;)V	a	merge
		p	1		itemNbt
		p	2		targetPath
		p	3		sourceNbts
	m	(Lrq;Lrq;)V	a	lambda$merge$0
		p	1		sourceNbt
c	edu$d	net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$Path
	m	()Ljava/lang/String;	a	string
	m	(Ljava/lang/String;)Ledu$d;	a	of
	m	(Ljava/lang/String;Lcom/mojang/brigadier/exceptions/CommandSyntaxException;)Ljava/lang/String;	a	lambda$static$0
	m	()Lej$g;	b	path
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	b	lambda$static$1
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/lang/String;	b	string
	f	Lej$g;	c	path
c	edv	net/minecraft/world/level/storage/loot/functions/EnchantRandomlyFunction
	m	(Ljava/util/List;Ljava/util/Optional;)V	<init>	<init>
		p	1		conditions
		p	2		enchantments
	m	(Lasc;Lhi;)Ljava/util/Optional;	a	lambda$run$3
	m	(Lcjf;Lasc;)Ljava/util/Optional;	a	lambda$run$6
	m	(Lcjf;Lcno;Lasc;)Lcjf;	a	enchantItem
		p	0		stack
		p	1		enchantment
		p	2		random
	m	(Lcjf;Lecq;)Lcjf;	a	run
		p	1		stack
		p	2		context
	m	(Ledv;)Ljava/util/Optional;	a	lambda$static$1
	m	(Lhe$c;)Z	a	lambda$run$4
	m	(Lhi;)Ljava/util/List;	a	lambda$static$0
	m	(Ljava/util/List;)Leed;	a	lambda$randomApplicableEnchantment$7
		p	0		conditions
	m	(ZLcjf;Lhe$c;)Z	a	lambda$run$5
		p	2		enchantment
	m	()Leee;	b	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$2
	m	()Ledv$a;	c	randomEnchantment
	m	()Leec$a;	d	randomApplicableEnchantment
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Lcom/mojang/serialization/Codec;	c	ENCHANTMENT_SET_CODEC
	f	Ljava/util/Optional;	d	enchantments
c	edv$a	net/minecraft/world/level/storage/loot/functions/EnchantRandomlyFunction$Builder
	m	()Ledv$a;	a	getThis
	m	(Lcno;)Ledv$a;	a	withEnchantment
		p	1		enchantment
	m	()Leed;	b	build
	m	()Leec$a;	c	getThis
	f	Ljava/util/List;	a	enchantments
c	edw	net/minecraft/world/level/storage/loot/functions/EnchantWithLevelsFunction
	m	(Ljava/util/List;Legk;Z)V	<init>	<init>
		p	1		conditions
		p	2		range
		p	3		treasureEnchantmentsAllowed
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(Lcjf;Lecq;)Lcjf;	a	run
		p	1		stack
		p	2		context
	m	(Ledw;)Ljava/lang/Boolean;	a	lambda$static$1
	m	(Legk;)Ledw$a;	a	enchantWithLevels
		p	0		range
	m	()Leee;	b	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$2
	m	(Ledw;)Legk;	b	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Legk;	b	levels
	f	Z	c	treasure
c	edw$a	net/minecraft/world/level/storage/loot/functions/EnchantWithLevelsFunction$Builder
	m	(Legk;)V	<init>	<init>
		p	1		range
	m	()Ledw$a;	a	getThis
	m	()Leed;	b	build
	m	()Leec$a;	c	getThis
	m	()Ledw$a;	e	allowTreasure
	f	Legk;	a	levels
	f	Z	b	treasure
c	edx	net/minecraft/world/level/storage/loot/functions/ExplorationMapFunction
	m	(Ljava/util/List;Laqh;Lebt$a;BIZ)V	<init>	<init>
		p	1		conditions
		p	2		destination
		p	3		decoration
		p	4		zoom
		p	5		searchRadius
		p	6		skipExistingChunks
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(Lcjf;Lecq;)Lcjf;	a	run
		p	1		stack
		p	2		context
	m	(Ledx;)Ljava/lang/Boolean;	a	lambda$static$4
	m	()Leee;	b	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$5
	m	(Ledx;)Ljava/lang/Integer;	b	lambda$static$3
	m	()Ledx$a;	c	makeExplorationMap
	m	(Ledx;)Ljava/lang/Byte;	c	lambda$static$2
	m	(Ledx;)Lebt$a;	d	lambda$static$1
	m	(Ledx;)Laqh;	e	lambda$static$0
	f	Laqh;	a	DEFAULT_DESTINATION
	f	Lebt$a;	b	DEFAULT_DECORATION
	f	B	c	DEFAULT_ZOOM
	f	I	d	DEFAULT_SEARCH_RADIUS
	f	Z	e	DEFAULT_SKIP_EXISTING
	f	Lcom/mojang/serialization/Codec;	f	CODEC
	f	Laqh;	h	destination
	f	Lebt$a;	i	mapDecoration
	f	B	j	zoom
	f	I	k	searchRadius
	f	Z	l	skipKnownStructures
c	edx$a	net/minecraft/world/level/storage/loot/functions/ExplorationMapFunction$Builder
	m	()Ledx$a;	a	getThis
	m	(B)Ledx$a;	a	setZoom
		p	1		zoom
	m	(I)Ledx$a;	a	setSearchRadius
		p	1		searchRadius
	m	(Laqh;)Ledx$a;	a	setDestination
		p	1		destination
	m	(Lebt$a;)Ledx$a;	a	setMapDecoration
		p	1		decoration
	m	(Z)Ledx$a;	a	setSkipKnownStructures
		p	1		skipExistingChunks
	m	()Leed;	b	build
	m	()Leec$a;	c	getThis
	f	Laqh;	a	destination
	f	Lebt$a;	b	mapDecoration
	f	B	c	zoom
	f	I	d	searchRadius
	f	Z	e	skipKnownStructures
c	edy	net/minecraft/world/level/storage/loot/functions/FillPlayerHead
	m	(Ljava/util/List;Lecq$b;)V	<init>	<init>
		p	1		conditions
		p	2		entity
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(Lcjf;Lecq;)Lcjf;	a	run
		p	1		stack
		p	2		context
	m	(Lecq$b;)Leec$a;	a	fillPlayerHead
		p	0		target
	m	(Lecq$b;Ljava/util/List;)Leed;	a	lambda$fillPlayerHead$2
	m	(Ledy;)Lecq$b;	a	lambda$static$0
	m	()Leee;	b	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$1
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lecq$b;	b	entityTarget
c	edz	net/minecraft/world/level/storage/loot/functions/FunctionReference
	m	(Ljava/util/List;Laew;)V	<init>	<init>
		p	1		conditions
		p	2		name
	m	(Laew;)Leec$a;	a	functionReference
		p	0		name
	m	(Laew;Ljava/util/List;)Leed;	a	lambda$functionReference$4
		p	1		conditions
	m	(Lcjf;Lecq;)Lcjf;	a	run
		p	1		stack
		p	2		context
	m	(Lecz;)V	a	validate
		p	1		reporter
	m	(Lecz;Lecs;Leed;)V	a	lambda$validate$2
		p	3		itemModifier
	m	(Ledz;)Laew;	a	lambda$static$0
	m	()Leee;	b	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$1
	m	(Lecz;)V	b	lambda$validate$3
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Laew;	c	name
c	eea	net/minecraft/world/level/storage/loot/functions/FunctionUserBuilder
	m	(Ljava/lang/Iterable;Ljava/util/function/Function;)Leea;	a	apply
		p	1		functions
		p	2		toBuilderFunction
	m	([Ljava/lang/Object;Ljava/util/function/Function;)Leea;	a	apply
		p	1		functions
		p	2		toBuilderFunction
	m	(Leed$a;)Leea;	b	apply
		p	1		function
	m	()Leea;	c	unwrap
c	eeb	net/minecraft/world/level/storage/loot/functions/LimitCount
	m	(Ljava/util/List;Lecp;)V	<init>	<init>
		p	1		conditions
		p	2		limit
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(Lcjf;Lecq;)Lcjf;	a	run
		p	1		stack
		p	2		context
	m	(Lecp;)Leec$a;	a	limitCount
		p	0		limit
	m	(Lecp;Ljava/util/List;)Leed;	a	lambda$limitCount$2
		p	1		conditions
	m	(Leeb;)Lecp;	a	lambda$static$0
	m	()Leee;	b	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$1
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lecp;	b	limiter
c	eec	net/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		conditions
	m	(Lcjf;Lecq;)Lcjf;	a	run
		p	1		stack
		p	2		context
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P1;	a	commonFields
	m	(Lecz;)V	a	validate
		p	1		reporter
	m	(Leec;)Ljava/util/List;	a	lambda$commonFields$0
	m	(Ljava/util/function/Function;)Leec$a;	a	simpleBuilder
		p	0		joiner
	m	(Lcjf;Lecq;)Lcjf;	b	apply
	f	Ljava/util/function/Predicate;	a	compositePredicates
	f	Ljava/util/List;	g	predicates
c	eec$a	net/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder
	m	(Lefp$a;)Leec$a;	a	when
	m	(Lefp$a;)Lefi;	b	when
		p	1		condition
	m	()Leec$a;	c	getThis
	m	()Lefi;	d	unwrap
	m	()Leec$a;	f	unwrap
	m	()Ljava/util/List;	g	getConditions
	f	Lcom/google/common/collect/ImmutableList$Builder;	a	conditions
c	eec$b	net/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$DummyBuilder
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1		joiner
	m	()Leec$b;	a	getThis
	m	()Leed;	b	build
	m	()Leec$a;	c	getThis
	f	Ljava/util/function/Function;	a	constructor
c	eed	net/minecraft/world/level/storage/loot/functions/LootItemFunction
	m	(Ljava/util/function/BiFunction;Ljava/util/function/Consumer;Lecq;)Ljava/util/function/Consumer;	a	decorate
		p	0		itemApplier
		p	1		lootConsumer
		p	2		context
	m	(Ljava/util/function/Consumer;Ljava/util/function/BiFunction;Lecq;Lcjf;)V	a	lambda$decorate$0
		p	3		stack
	m	()Leee;	b	getType
c	eed$a	net/minecraft/world/level/storage/loot/functions/LootItemFunction$Builder
	m	()Leed;	b	build
c	eee	net/minecraft/world/level/storage/loot/functions/LootItemFunctionType
	m	()Lcom/mojang/serialization/Codec;	a	codec
	f	Lcom/mojang/serialization/Codec;	a	codec
c	eef	net/minecraft/world/level/storage/loot/functions/LootItemFunctions
	m	()Lcom/mojang/serialization/Codec;	a	lambda$static$1
	m	(Lcjf;Lecq;)Lcjf;	a	lambda$static$0
		p	0		stack
		p	1		context
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Leee;	a	register
		p	0		id
		p	1		codec
	m	(Ljava/util/List;)Ljava/util/function/BiFunction;	a	compose
	m	(Ljava/util/List;Lcjf;Lecq;)Lcjf;	a	lambda$compose$3
	m	(Ljava/util/function/BiFunction;Ljava/util/function/BiFunction;Lcjf;Lecq;)Lcjf;	a	lambda$compose$2
		p	2		stack
		p	3		context
	f	Leee;	A	SET_INSTRUMENT
	f	Leee;	B	REFERENCE
	f	Leee;	C	SEQUENCE
	f	Lcom/mojang/serialization/Codec;	D	TYPED_CODEC
	f	Ljava/util/function/BiFunction;	a	IDENTITY
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Leee;	c	SET_COUNT
	f	Leee;	d	ENCHANT_WITH_LEVELS
	f	Leee;	e	ENCHANT_RANDOMLY
	f	Leee;	f	SET_ENCHANTMENTS
	f	Leee;	g	SET_NBT
	f	Leee;	h	FURNACE_SMELT
	f	Leee;	i	LOOTING_ENCHANT
	f	Leee;	j	SET_DAMAGE
	f	Leee;	k	SET_ATTRIBUTES
	f	Leee;	l	SET_NAME
	f	Leee;	m	EXPLORATION_MAP
	f	Leee;	n	SET_STEW_EFFECT
	f	Leee;	o	COPY_NAME
	f	Leee;	p	SET_CONTENTS
	f	Leee;	q	LIMIT_COUNT
	f	Leee;	r	APPLY_BONUS
	f	Leee;	s	SET_LOOT_TABLE
	f	Leee;	t	EXPLOSION_DECAY
	f	Leee;	u	SET_LORE
	f	Leee;	v	FILL_PLAYER_HEAD
	f	Leee;	w	COPY_NBT
	f	Leee;	x	COPY_STATE
	f	Leee;	y	SET_BANNER_PATTERN
	f	Leee;	z	SET_POTION
c	eeg	net/minecraft/world/level/storage/loot/functions/LootingEnchantFunction
	m	(Ljava/util/List;Legk;I)V	<init>	<init>
		p	1		conditions
		p	2		countRange
		p	3		limit
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(Lcjf;Lecq;)Lcjf;	a	run
		p	1		stack
		p	2		context
	m	(Leeg;)Ljava/lang/Integer;	a	lambda$static$1
	m	(Legk;)Leeg$a;	a	lootingMultiplier
		p	0		countRange
	m	()Leee;	b	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$2
	m	(Leeg;)Legk;	b	lambda$static$0
	m	()Z	c	hasLimit
	f	I	a	NO_LIMIT
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Legk;	c	value
	f	I	d	limit
c	eeg$a	net/minecraft/world/level/storage/loot/functions/LootingEnchantFunction$Builder
	m	(Legk;)V	<init>	<init>
		p	1		countRange
	m	()Leeg$a;	a	getThis
	m	(I)Leeg$a;	a	setLimit
		p	1		limit
	m	()Leed;	b	build
	m	()Leec$a;	c	getThis
	f	Legk;	a	count
	f	I	b	limit
c	eeh	net/minecraft/world/level/storage/loot/functions/SequenceFunction
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		terms
	m	(Lcjf;Lecq;)Lcjf;	a	apply
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Lecz;)V	a	validate
		p	1		reporter
	m	(Leeh;)Ljava/util/List;	a	lambda$static$2
	m	(Ljava/util/List;)Leeh;	a	of
		p	0		terms
	m	()Leee;	b	getType
	m	(Leeh;)Ljava/util/List;	b	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcom/mojang/serialization/Codec;	b	INLINE_CODEC
	f	Ljava/util/List;	c	functions
	f	Ljava/util/function/BiFunction;	d	compositeFunction
c	eei	net/minecraft/world/level/storage/loot/functions/SetAttributesFunction
	m	(Ljava/util/List;Ljava/util/List;)V	<init>	<init>
		p	1		conditions
		p	2		attributes
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(Lcjf;Lecq;)Lcjf;	a	run
		p	1		stack
		p	2		context
	m	(Leei$b;)Ljava/util/stream/Stream;	a	lambda$getReferencedContextParams$2
		p	0		attribute
	m	(Leei;)Ljava/util/List;	a	lambda$static$0
	m	(Ljava/lang/String;Lhe;Lbkk$a;Legk;)Leei$c;	a	modifier
		p	0		name
		p	1		attribute
		p	2		operation
		p	3		amountRange
	m	()Leee;	b	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$1
	m	()Leei$a;	c	setAttributes
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/List;	b	modifiers
c	eei$a	net/minecraft/world/level/storage/loot/functions/SetAttributesFunction$Builder
	m	()Leei$a;	a	getThis
	m	(Leei$c;)Leei$a;	a	withModifier
		p	1		attribute
	m	()Leed;	b	build
	m	()Leec$a;	c	getThis
	f	Ljava/util/List;	a	modifiers
c	eei$b	net/minecraft/world/level/storage/loot/functions/SetAttributesFunction$Modifier
	m	(Ljava/lang/String;Lhe;Lbkk$a;Legk;Ljava/util/List;Ljava/util/Optional;)V	<init>	<init>
		p	1		name
		p	3		operation
		p	4		amount
	m	()Ljava/lang/String;	a	name
	m	(Lcom/mojang/datafixers/util/Either;)Ljava/util/List;	a	lambda$static$0
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Ljava/util/List;)Lcom/mojang/datafixers/util/Either;	a	lambda$static$1
	m	()Lhe;	b	attribute
	m	()Lbkk$a;	c	operation
	m	()Legk;	d	amount
	m	()Ljava/util/List;	e	slots
	m	()Ljava/util/Optional;	f	id
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/lang/String;	b	name
	f	Lhe;	c	attribute
	f	Lbkk$a;	d	operation
	f	Legk;	e	amount
	f	Ljava/util/List;	f	slots
	f	Ljava/util/Optional;	g	id
	f	Lcom/mojang/serialization/Codec;	h	SLOTS_CODEC
c	eei$c	net/minecraft/world/level/storage/loot/functions/SetAttributesFunction$ModifierBuilder
	m	(Ljava/lang/String;Lhe;Lbkk$a;Legk;)V	<init>	<init>
		p	1		name
		p	2		attribute
		p	3		operation
		p	4		amount
	m	()Leei$b;	a	build
	m	(Lbiv;)Leei$c;	a	forSlot
		p	1		slot
	m	(Ljava/util/UUID;)Leei$c;	a	withUuid
		p	1		uuid
	f	Ljava/lang/String;	a	name
	f	Lhe;	b	attribute
	f	Lbkk$a;	c	operation
	f	Legk;	d	amount
	f	Ljava/util/Optional;	e	id
	f	Ljava/util/Set;	f	slots
c	eej	net/minecraft/world/level/storage/loot/functions/SetBannerPatternFunction
	m	(Ljava/util/List;Ljava/util/List;Z)V	<init>	<init>
		p	1		conditions
		p	2		patterns
		p	3		append
	m	(Lcjf;Lecq;)Lcjf;	a	run
		p	1		stack
		p	2		context
	m	(Leej;)Ljava/lang/Boolean;	a	lambda$static$1
	m	(Z)Leej$a;	a	setBannerPattern
		p	0		append
	m	()Leee;	b	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$2
	m	(Leej;)Ljava/util/List;	b	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcom/mojang/serialization/Codec;	b	PATTERN_CODEC
	f	Ljava/util/List;	c	patterns
	f	Z	d	append
c	eej$a	net/minecraft/world/level/storage/loot/functions/SetBannerPatternFunction$Builder
	m	(Z)V	<init>	<init>
		p	1		append
	m	()Leej$a;	a	getThis
	m	(Laev;Lcht;)Leej$a;	a	addPattern
		p	1		pattern
		p	2		color
	m	(Lhe;Lcht;)Leej$a;	a	addPattern
		p	1		pattern
		p	2		color
	m	()Leed;	b	build
	m	()Leec$a;	c	getThis
	f	Lcom/google/common/collect/ImmutableList$Builder;	a	patterns
	f	Z	b	append
c	eek	net/minecraft/world/level/storage/loot/functions/SetContainerContents
	m	(Ljava/util/List;Lhe;Ljava/util/List;)V	<init>	<init>
		p	1		conditions
		p	2		blockEntityType
		p	3		entries
	m	(Lcjf;Lecq;)Lcjf;	a	run
		p	1		stack
		p	2		context
	m	(Ldcx;)Leek$a;	a	setContents
		p	0		type
	m	(Lecq;Lhn;Ledi;)V	a	lambda$run$3
		p	2		choice
	m	(Lecq;Lhn;Ledj;)V	a	lambda$run$4
		p	2		entry
	m	(Lecz;)V	a	validate
		p	1		reporter
	m	(Leek;)Ljava/util/List;	a	lambda$static$1
	m	()Leee;	b	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$2
	m	(Leek;)Lhe;	b	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lhe;	b	type
	f	Ljava/util/List;	c	entries
c	eek$a	net/minecraft/world/level/storage/loot/functions/SetContainerContents$Builder
	m	(Ldcx;)V	<init>	<init>
		p	1		type
	m	()Leek$a;	a	getThis
	m	(Ledj$a;)Leek$a;	a	withEntry
		p	1		entryBuilder
	m	()Leed;	b	build
	m	()Leec$a;	c	getThis
	f	Lcom/google/common/collect/ImmutableList$Builder;	a	entries
	f	Ldcx;	b	type
c	eel	net/minecraft/world/level/storage/loot/functions/SetContainerLootTable
	m	(Ljava/util/List;Laew;JLhe;)V	<init>	<init>
		p	1		conditions
		p	2		id
		p	3		seed
		p	5		blockEntityType
	m	(Laew;JLdcx;Ljava/util/List;)Leed;	a	lambda$withLootTable$5
		p	4		conditions
	m	(Laew;Ldcx;Ljava/util/List;)Leed;	a	lambda$withLootTable$4
		p	2		conditions
	m	(Lcjf;Lecq;)Lcjf;	a	run
		p	1		stack
		p	2		context
	m	(Ldcx;Laew;)Leec$a;	a	withLootTable
		p	0		type
		p	1		id
	m	(Ldcx;Laew;J)Leec$a;	a	withLootTable
		p	0		type
		p	1		id
		p	2		seed
	m	(Lecz;)V	a	validate
		p	1		reporter
	m	(Leel;)Lhe;	a	lambda$static$2
	m	()Leee;	b	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$3
	m	(Leel;)Ljava/lang/Long;	b	lambda$static$1
	m	(Leel;)Laew;	c	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Laew;	b	name
	f	J	c	seed
	f	Lhe;	d	type
c	eem	net/minecraft/world/level/storage/loot/functions/SetEnchantmentsFunction
	m	(Ljava/util/List;Ljava/util/Map;Z)V	<init>	<init>
		p	1		conditions
		p	2		enchantments
		p	3		add
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(Lcjf;Lcno;Ljava/lang/Integer;)V	a	lambda$run$5
		p	1		enchantment
		p	2		level
	m	(Lcjf;Lecq;)Lcjf;	a	run
		p	1		stack
		p	2		context
	m	(Leem;)Ljava/lang/Boolean;	a	lambda$static$1
	m	(Legk;)Ljava/util/stream/Stream;	a	lambda$getReferencedContextParams$3
		p	0		numberProvider
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntMap;Lecq;Lhe;Legk;)V	a	lambda$run$4
		p	2		enchantment
		p	3		numberProvider
	m	(Ljava/util/Map;Lcno;I)V	a	updateEnchantment
		p	0		map
		p	1		enchantment
		p	2		level
	m	(Ljava/util/Map;Lcno;Ljava/lang/Integer;)V	a	lambda$run$7
		p	1		enchantment
		p	2		level
	m	()Leee;	b	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$2
	m	(Leem;)Ljava/util/Map;	b	lambda$static$0
	m	(Ljava/util/Map;Lcno;Ljava/lang/Integer;)V	b	lambda$run$6
		p	1		enchantment
		p	2		level
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Map;	b	enchantments
	f	Z	c	add
c	eem$a	net/minecraft/world/level/storage/loot/functions/SetEnchantmentsFunction$Builder
	m	(Z)V	<init>	<init>
		p	1		add
	m	()Leem$a;	a	getThis
	m	(Lcno;Legk;)Leem$a;	a	withEnchantment
		p	1		enchantment
		p	2		level
	m	()Leed;	b	build
	m	()Leec$a;	c	getThis
	f	Lcom/google/common/collect/ImmutableMap$Builder;	a	enchantments
	f	Z	b	add
c	een	net/minecraft/world/level/storage/loot/functions/SetInstrumentFunction
	m	(Ljava/util/List;Laqh;)V	<init>	<init>
		p	1		conditions
		p	2		options
	m	(Laqh;)Leec$a;	a	setInstrumentOptions
		p	0		options
	m	(Laqh;Ljava/util/List;)Leed;	a	lambda$setInstrumentOptions$2
		p	1		conditions
	m	(Lcjf;Lecq;)Lcjf;	a	run
		p	1		stack
		p	2		context
	m	(Leen;)Laqh;	a	lambda$static$0
	m	()Leee;	b	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$1
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Laqh;	b	options
c	eeo	net/minecraft/world/level/storage/loot/functions/SetItemCountFunction
	m	(Ljava/util/List;Legk;Z)V	<init>	<init>
		p	1		conditions
		p	2		countRange
		p	3		add
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(Lcjf;Lecq;)Lcjf;	a	run
		p	1		stack
		p	2		context
	m	(Leeo;)Ljava/lang/Boolean;	a	lambda$static$1
	m	(Legk;)Leec$a;	a	setCount
		p	0		countRange
	m	(Legk;Ljava/util/List;)Leed;	a	lambda$setCount$3
	m	(Legk;Z)Leec$a;	a	setCount
		p	0		countRange
		p	1		add
	m	(Legk;ZLjava/util/List;)Leed;	a	lambda$setCount$4
	m	()Leee;	b	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$2
	m	(Leeo;)Legk;	b	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Legk;	b	value
	f	Z	c	add
c	eep	net/minecraft/world/level/storage/loot/functions/SetItemDamageFunction
	m	(Ljava/util/List;Legk;Z)V	<init>	<init>
		p	1		conditions
		p	2		durabilityRange
		p	3		add
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(Lcjf;Lecq;)Lcjf;	a	run
		p	1		stack
		p	2		context
	m	(Leep;)Ljava/lang/Boolean;	a	lambda$static$1
	m	(Legk;)Leec$a;	a	setDamage
		p	0		durabilityRange
	m	(Legk;Ljava/util/List;)Leed;	a	lambda$setDamage$3
		p	1		conditions
	m	(Legk;Z)Leec$a;	a	setDamage
		p	0		durabilityRange
		p	1		add
	m	(Legk;ZLjava/util/List;)Leed;	a	lambda$setDamage$4
		p	2		conditions
	m	()Leee;	b	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$2
	m	(Leep;)Legk;	b	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Legk;	c	damage
	f	Z	d	add
c	eeq	net/minecraft/world/level/storage/loot/functions/SetLoreFunction
	m	(Ljava/util/List;ZLjava/util/List;Ljava/util/Optional;)V	<init>	<init>
		p	1		conditions
		p	2		replace
		p	3		lore
		p	4		entity
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(Lcjf;Lecq;)Lcjf;	a	run
		p	1		stack
		p	2		context
	m	(Lcjf;Z)Lrc;	a	getLoreTag
		p	1		stack
		p	2		otherLoreExists
	m	(Lecq$b;)Ljava/util/Set;	a	lambda$getReferencedContextParams$4
	m	(Leeq;)Ljava/util/Optional;	a	lambda$static$2
	m	()Leee;	b	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$3
	m	(Leeq;)Ljava/util/List;	b	lambda$static$1
	m	()Leeq$a;	c	setLore
	m	(Leeq;)Ljava/lang/Boolean;	c	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Z	b	replace
	f	Ljava/util/List;	c	lore
	f	Ljava/util/Optional;	d	resolutionContext
c	eeq$a	net/minecraft/world/level/storage/loot/functions/SetLoreFunction$Builder
	m	()Leeq$a;	a	getThis
	m	(Lecq$b;)Leeq$a;	a	setResolutionContext
		p	1		target
	m	(Ltl;)Leeq$a;	a	addLine
		p	1		lore
	m	(Z)Leeq$a;	a	setReplace
		p	1		replace
	m	()Leed;	b	build
	m	()Leec$a;	c	getThis
	f	Z	a	replace
	f	Ljava/util/Optional;	b	resolutionContext
	f	Lcom/google/common/collect/ImmutableList$Builder;	c	lore
c	eer	net/minecraft/world/level/storage/loot/functions/SetNameFunction
	m	(Ljava/util/List;Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
		p	1		conditions
		p	2		name
		p	3		entity
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(Lcjf;Lecq;)Lcjf;	a	run
		p	1		stack
		p	2		context
	m	(Lcjf;Lecq;Ltl;)V	a	lambda$run$6
	m	(Ldt;Lbiq;Ltl;)Ltl;	a	lambda$createResolver$4
		p	2		textComponent
	m	(Lecq$b;)Ljava/util/Set;	a	lambda$getReferencedContextParams$3
	m	(Lecq;Lecq$b;)Ljava/util/function/UnaryOperator;	a	createResolver
		p	0		context
		p	1		sourceEntity
	m	(Leer;)Ljava/util/Optional;	a	lambda$static$1
	m	(Ltl;)Leec$a;	a	setName
		p	0		name
	m	(Ltl;Lecq$b;)Leec$a;	a	setName
		p	0		name
		p	1		target
	m	(Ltl;Lecq$b;Ljava/util/List;)Leed;	a	lambda$setName$8
		p	2		conditions
	m	(Ltl;Ljava/util/List;)Leed;	a	lambda$setName$7
		p	1		conditions
	m	()Leee;	b	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$2
	m	(Leer;)Ljava/util/Optional;	b	lambda$static$0
	m	(Ltl;)Ltl;	b	lambda$createResolver$5
		p	0		textComponent
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ljava/util/Optional;	c	name
	f	Ljava/util/Optional;	d	resolutionContext
c	ees	net/minecraft/world/level/storage/loot/functions/SetNbtFunction
	m	(Ljava/util/List;Lqw;)V	<init>	<init>
		p	1		conditions
		p	2		nbt
	m	(Lcjf;Lecq;)Lcjf;	a	run
		p	1		stack
		p	2		context
	m	(Lees;)Lqw;	a	lambda$static$0
	m	(Lqw;)Leec$a;	a	setTag
		p	0		nbt
	m	(Lqw;Ljava/util/List;)Leed;	a	lambda$setTag$2
		p	1		conditions
	m	()Leee;	b	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$1
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lqw;	b	tag
c	eet	net/minecraft/world/level/storage/loot/functions/SetPotionFunction
	m	(Ljava/util/List;Lhe;)V	<init>	<init>
		p	1		conditions
		p	2		potion
	m	(Lcjf;Lecq;)Lcjf;	a	run
		p	1		stack
		p	2		context
	m	(Lclc;)Leec$a;	a	setPotion
		p	0		potion
	m	(Lclc;Ljava/util/List;)Leed;	a	lambda$setPotion$2
		p	1		conditions
	m	(Leet;)Lhe;	a	lambda$static$0
	m	()Leee;	b	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$1
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lhe;	b	potion
c	eeu	net/minecraft/world/level/storage/loot/functions/SetStewEffectFunction
	m	(Ljava/util/List;Ljava/util/List;)V	<init>	<init>
		p	1		conditions
		p	2		stewEffects
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(Lcjf;Lecq;)Lcjf;	a	run
		p	1		stack
		p	2		context
	m	(Leeu$b;)Ljava/util/stream/Stream;	a	lambda$getReferencedContextParams$4
		p	0		stewEffect
	m	(Leeu;)Ljava/util/List;	a	lambda$static$2
	m	(Ljava/util/List;)Lcom/mojang/serialization/DataResult;	a	lambda$static$1
		p	0		stewEffects
	m	()Leee;	b	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$3
	m	(Leeu$b;)Ljava/lang/String;	b	lambda$static$0
	m	()Leeu$a;	c	stewEffect
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcom/mojang/serialization/Codec;	b	EFFECTS_LIST
	f	Ljava/util/List;	c	effects
c	eeu$a	net/minecraft/world/level/storage/loot/functions/SetStewEffectFunction$Builder
	m	()Leeu$a;	a	getThis
	m	(Lbib;Legk;)Leeu$a;	a	withEffect
		p	1		effect
		p	2		durationRange
	m	()Leed;	b	build
	m	()Leec$a;	c	getThis
	f	Lcom/google/common/collect/ImmutableList$Builder;	a	effects
c	eeu$b	net/minecraft/world/level/storage/loot/functions/SetStewEffectFunction$EffectEntry
	m	()Lhe;	a	effect
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()Legk;	b	duration
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lhe;	b	effect
	f	Legk;	c	duration
c	eev	net/minecraft/world/level/storage/loot/functions/SmeltItemFunction
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		conditions
	m	(Lcjf;Lecq;)Lcjf;	a	run
		p	1		stack
		p	2		context
	m	()Leee;	b	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$0
	m	()Leec$a;	c	smelted
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lorg/slf4j/Logger;	b	LOGGER
c	eew	net/minecraft/world/level/storage/loot/functions/package-info
c	eex	net/minecraft/world/level/storage/loot/package-info
c	eey	net/minecraft/world/level/storage/loot/parameters/LootContextParam
	m	(Laew;)V	<init>	<init>
		p	1		id
	m	()Laew;	a	getName
	f	Laew;	a	name
c	eez	net/minecraft/world/level/storage/loot/parameters/LootContextParamSet
	m	(Ljava/util/Set;Ljava/util/Set;)V	<init>	<init>
		p	1		required
		p	2		allowed
	m	()Ljava/util/Set;	a	getRequired
	m	(Lecz;Lecr;)V	a	validateUser
		p	1		reporter
		p	2		parameterConsumer
	m	(Leey;)Z	a	isAllowed
		p	1		parameter
	m	()Ljava/util/Set;	b	getAllowed
	m	(Leey;)Ljava/lang/String;	b	lambda$toString$0
		p	1		parameter
	m	()Leez$a;	c	builder
	f	Ljava/util/Set;	a	required
	f	Ljava/util/Set;	b	all
c	eez$a	net/minecraft/world/level/storage/loot/parameters/LootContextParamSet$Builder
	m	()Leez;	a	build
	m	(Leey;)Leez$a;	a	required
		p	1		parameter
	m	(Leey;)Leez$a;	b	optional
		p	1		parameter
	f	Ljava/util/Set;	a	required
	f	Ljava/util/Set;	b	optional
c	efa	net/minecraft/world/level/storage/loot/parameters/LootContextParamSets
	m	(Laew;)Lcom/mojang/serialization/DataResult;	a	lambda$static$2
	m	(Leez$a;)V	a	lambda$static$16
		p	0		builder
	m	(Ljava/lang/String;Ljava/util/function/Consumer;)Leez;	a	register
		p	0		name
		p	1		type
	m	(Laew;)Lcom/mojang/serialization/DataResult;	b	lambda$static$1
	m	(Leez$a;)V	b	lambda$static$15
		p	0		builder
	m	(Laew;)Ljava/lang/String;	c	lambda$static$0
	m	(Leez$a;)V	c	lambda$static$14
		p	0		builder
	m	(Leez$a;)V	d	lambda$static$13
		p	0		builder
	m	(Leez$a;)V	e	lambda$static$12
		p	0		builder
	m	(Leez$a;)V	f	lambda$static$11
		p	0		builder
	m	(Leez$a;)V	g	lambda$static$10
		p	0		builder
	m	(Leez$a;)V	h	lambda$static$9
		p	0		builder
	m	(Leez$a;)V	i	lambda$static$8
		p	0		builder
	m	(Leez$a;)V	j	lambda$static$7
		p	0		builder
	m	(Leez$a;)V	k	lambda$static$6
		p	0		builder
	m	(Leez$a;)V	l	lambda$static$5
		p	0		builder
	m	(Leez$a;)V	m	lambda$static$4
		p	0		builder
	m	(Leez$a;)V	n	lambda$static$3
		p	0		builder
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Leez;	b	EMPTY
	f	Leez;	c	CHEST
	f	Leez;	d	COMMAND
	f	Leez;	e	SELECTOR
	f	Leez;	f	FISHING
	f	Leez;	g	ENTITY
	f	Leez;	h	ARCHAEOLOGY
	f	Leez;	i	GIFT
	f	Leez;	j	PIGLIN_BARTER
	f	Leez;	k	ADVANCEMENT_REWARD
	f	Leez;	l	ADVANCEMENT_ENTITY
	f	Leez;	m	ADVANCEMENT_LOCATION
	f	Leez;	n	ALL_PARAMS
	f	Leez;	o	BLOCK
	f	Lcom/google/common/collect/BiMap;	p	REGISTRY
c	efb	net/minecraft/world/level/storage/loot/parameters/LootContextParams
	m	(Ljava/lang/String;)Leey;	a	create
		p	0		name
	f	Leey;	a	THIS_ENTITY
	f	Leey;	b	LAST_DAMAGE_PLAYER
	f	Leey;	c	DAMAGE_SOURCE
	f	Leey;	d	KILLER_ENTITY
	f	Leey;	e	DIRECT_KILLER_ENTITY
	f	Leey;	f	ORIGIN
	f	Leey;	g	BLOCK_STATE
	f	Leey;	h	BLOCK_ENTITY
	f	Leey;	i	TOOL
	f	Leey;	j	EXPLOSION_RADIUS
c	efc	net/minecraft/world/level/storage/loot/parameters/package-info
c	efd	net/minecraft/world/level/storage/loot/predicates/AllOfCondition
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		terms
	m	(Ljava/util/List;)Lefd;	a	allOf
		p	0		terms
	m	([Lefp$a;)Lefd$a;	a	allOf
		p	0		terms
	m	()Lefq;	b	getType
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcom/mojang/serialization/Codec;	b	INLINE_CODEC
c	efd$a	net/minecraft/world/level/storage/loot/predicates/AllOfCondition$Builder
	m	([Lefp$a;)V	<init>	<init>
		p	1		terms
	m	(Ljava/util/List;)Lefp;	a	create
		p	1		terms
	m	(Lefp$a;)Lefd$a;	and	and
		p	1		condition
c	efe	net/minecraft/world/level/storage/loot/predicates/AnyOfCondition
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		terms
	m	([Lefp$a;)Lefe$a;	a	anyOf
		p	0		terms
	m	()Lefq;	b	getType
	f	Lcom/mojang/serialization/Codec;	a	CODEC
c	efe$a	net/minecraft/world/level/storage/loot/predicates/AnyOfCondition$Builder
	m	([Lefp$a;)V	<init>	<init>
		p	1		terms
	m	(Ljava/util/List;)Lefp;	a	create
		p	1		terms
	m	(Lefp$a;)Lefe$a;	or	or
		p	1		condition
c	eff	net/minecraft/world/level/storage/loot/predicates/BonusLevelTableCondition
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(Lcno;Ljava/util/List;)Lefp;	a	lambda$bonusLevelFlatChance$1
	m	(Lcno;[F)Lefp$a;	a	bonusLevelFlatChance
		p	0		enchantment
		p	1		chances
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	(Lecq;)Z	a	test
	m	()Lefq;	b	getType
	m	()Lhe;	c	enchantment
	m	()Ljava/util/List;	d	values
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lhe;	b	enchantment
	f	Ljava/util/List;	c	values
c	efg	net/minecraft/world/level/storage/loot/predicates/CompositeLootItemCondition
	m	(Ljava/util/List;Ljava/util/function/Predicate;)V	<init>	<init>
		p	1		terms
		p	2		predicate
	m	(Lecq;)Z	a	test
	m	(Lecz;)V	a	validate
		p	1		reporter
	m	(Lefg;)Ljava/util/List;	a	lambda$createInlineCodec$2
		p	0		condition
	m	(Ljava/util/function/Function;)Lcom/mojang/serialization/Codec;	a	createCodec
		p	0		termsToCondition
	m	(Ljava/util/function/Function;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$createCodec$1
	m	(Lefg;)Ljava/util/List;	b	lambda$createCodec$0
		p	0		condition
	m	(Ljava/util/function/Function;)Lcom/mojang/serialization/Codec;	b	createInlineCodec
		p	0		termsToCondition
	f	Ljava/util/function/Predicate;	a	composedPredicate
	f	Ljava/util/List;	c	terms
c	efg$a	net/minecraft/world/level/storage/loot/predicates/CompositeLootItemCondition$Builder
	m	([Lefp$a;)V	<init>	<init>
		p	1		terms
	m	(Lefp$a;)V	a	addTerm
		p	1		builder
	m	(Ljava/util/List;)Lefp;	a	create
		p	1		terms
	f	Lcom/google/common/collect/ImmutableList$Builder;	a	terms
c	efh	net/minecraft/world/level/storage/loot/predicates/ConditionReference
	m	(Laew;)V	<init>	<init>
		p	1		id
	m	(Laew;)Lefp$a;	a	conditionReference
		p	0		id
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	(Lecq;)Z	a	test
	m	(Lecz;)V	a	validate
		p	1		reporter
	m	(Lecz;Lecs;Lefp;)V	a	lambda$validate$1
		p	3		predicate
	m	()Lefq;	b	getType
	m	(Laew;)Lefp;	b	lambda$conditionReference$3
	m	(Lecz;)V	b	lambda$validate$2
	m	()Laew;	c	name
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Laew;	b	name
	f	Lorg/slf4j/Logger;	c	LOGGER
c	efi	net/minecraft/world/level/storage/loot/predicates/ConditionUserBuilder
	m	(Ljava/lang/Iterable;Ljava/util/function/Function;)Lefi;	a_	when
		p	1		conditions
		p	2		toBuilderFunction
	m	(Lefp$a;)Lefi;	b	when
		p	1		condition
	m	()Lefi;	d	unwrap
c	efj	net/minecraft/world/level/storage/loot/predicates/DamageSourceCondition
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(Lbf$a;)Lefp$a;	a	hasDamageSource
		p	0		builder
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	(Lecq;)Z	a	test
	m	()Lefq;	b	getType
	m	(Lbf$a;)Lefp;	b	lambda$hasDamageSource$1
	m	()Ljava/util/Optional;	c	predicate
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Optional;	b	predicate
c	efk	net/minecraft/world/level/storage/loot/predicates/EntityHasScoreCondition
	m	(Ljava/util/Map;Lecq$b;)V	<init>	<init>
		p	1		scores
		p	2		target
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	(Lecp;)Ljava/util/stream/Stream;	a	lambda$getReferencedContextParams$1
	m	(Lecq$b;)Lefk$a;	a	hasScores
		p	0		target
	m	(Lecq;)Z	a	test
	m	(Lecq;Lbiq;Leim;Ljava/lang/String;Lecp;)Z	a	hasScore
		p	1		context
		p	2		entity
		p	3		scoreboard
		p	4		objectiveName
		p	5		range
	m	()Lefq;	b	getType
	m	()Ljava/util/Map;	c	scores
	m	()Lecq$b;	d	entityTarget
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Map;	b	scores
	f	Lecq$b;	c	entityTarget
c	efk$a	net/minecraft/world/level/storage/loot/predicates/EntityHasScoreCondition$Builder
	m	(Lecq$b;)V	<init>	<init>
		p	1		target
	m	(Ljava/lang/String;Lecp;)Lefk$a;	a	withScore
		p	1		name
		p	2		value
	f	Lcom/google/common/collect/ImmutableMap$Builder;	a	scores
	f	Lecq$b;	b	entityTarget
c	efl	net/minecraft/world/level/storage/loot/predicates/ExplosionCondition
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(Lecq;)Z	a	test
	m	()Lefq;	b	getType
	m	()Lefp$a;	c	survivesExplosion
	m	()Lefp;	d	lambda$survivesExplosion$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lefl;	b	INSTANCE
c	efm	net/minecraft/world/level/storage/loot/predicates/InvertedLootItemCondition
	m	(Lefp;)V	<init>	<init>
		p	1		term
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	(Lecq;)Z	a	test
	m	(Lecz;)V	a	validate
		p	1		reporter
	m	(Lefm;)Lefp;	a	lambda$invert$1
	m	(Lefp$a;)Lefp$a;	a	invert
		p	0		term
	m	()Lefq;	b	getType
	m	()Lefp;	c	term
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lefp;	b	term
c	efn	net/minecraft/world/level/storage/loot/predicates/LocationCheck
	m	(Ljava/util/Optional;Lgw;)V	<init>	<init>
		p	2		offset
	m	(Lcj$a;)Lefp$a;	a	checkLocation
		p	0		predicateBuilder
	m	(Lcj$a;Lgw;)Lefp$a;	a	checkLocation
		p	0		predicateBuilder
		p	1		pos
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Lecq;)Z	a	test
	m	()Lefq;	b	getType
	m	(Lcj$a;)Lefp;	b	lambda$checkLocation$2
	m	(Lcj$a;Lgw;)Lefp;	b	lambda$checkLocation$3
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$0
	m	()Ljava/util/Optional;	c	predicate
	m	()Lgw;	d	offset
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Optional;	b	predicate
	f	Lgw;	c	offset
	f	Lcom/mojang/serialization/MapCodec;	d	OFFSET_CODEC
c	efo	net/minecraft/world/level/storage/loot/predicates/LootItemBlockStatePropertyCondition
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	(Lcsv;)Lefo$a;	a	hasBlockStateProperties
		p	0		block
	m	(Lecq;)Z	a	test
	m	(Lefo;)Lcom/mojang/serialization/DataResult;	a	validate
		p	0		condition
	m	(Lefo;Lda;)Ljava/util/Optional;	a	lambda$validate$1
		p	1		predicate
	m	(Lefo;Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	a	lambda$validate$3
		p	1		property
	m	()Lefq;	b	getType
	m	(Lefo;Ljava/lang/String;)Ljava/lang/String;	b	lambda$validate$2
	m	()Lhe;	c	block
	m	()Ljava/util/Optional;	d	properties
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lhe;	b	block
	f	Ljava/util/Optional;	c	properties
c	efo$a	net/minecraft/world/level/storage/loot/predicates/LootItemBlockStatePropertyCondition$Builder
	m	(Lcsv;)V	<init>	<init>
		p	1		block
	m	(Lda$a;)Lefo$a;	a	setProperties
		p	1		builder
	f	Lhe;	a	block
	f	Ljava/util/Optional;	b	properties
c	efp	net/minecraft/world/level/storage/loot/predicates/LootItemCondition
	m	()Lefq;	b	getType
c	efp$a	net/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder
	m	(Lefp$a;)Lefd$a;	and	and
		p	1		condition
	m	(Lefp$a;)Lefe$a;	or	or
		p	1		condition
c	efq	net/minecraft/world/level/storage/loot/predicates/LootItemConditionType
	m	()Lcom/mojang/serialization/Codec;	a	codec
	f	Lcom/mojang/serialization/Codec;	a	codec
c	efr	net/minecraft/world/level/storage/loot/predicates/LootItemConditions
	m	()Lcom/mojang/serialization/Codec;	a	lambda$static$0
	m	(Ljava/lang/Object;)Z	a	lambda$orConditions$3
		p	0		predicatesx
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lefq;	a	register
		p	0		id
		p	1		codec
	m	(Ljava/util/List;)Ljava/util/function/Predicate;	a	andConditions
		p	0		predicates
	m	(Ljava/util/List;Ljava/lang/Object;)Z	a	lambda$orConditions$4
		p	1		operand
	m	(Ljava/lang/Object;)Z	b	lambda$andConditions$1
		p	0		predicatesx
	m	(Ljava/util/List;)Ljava/util/function/Predicate;	b	orConditions
	m	(Ljava/util/List;Ljava/lang/Object;)Z	b	lambda$andConditions$2
		p	1		operand
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lefq;	b	INVERTED
	f	Lefq;	c	ANY_OF
	f	Lefq;	d	ALL_OF
	f	Lefq;	e	RANDOM_CHANCE
	f	Lefq;	f	RANDOM_CHANCE_WITH_LOOTING
	f	Lefq;	g	ENTITY_PROPERTIES
	f	Lefq;	h	KILLED_BY_PLAYER
	f	Lefq;	i	ENTITY_SCORES
	f	Lefq;	j	BLOCK_STATE_PROPERTY
	f	Lefq;	k	MATCH_TOOL
	f	Lefq;	l	TABLE_BONUS
	f	Lefq;	m	SURVIVES_EXPLOSION
	f	Lefq;	n	DAMAGE_SOURCE_PROPERTIES
	f	Lefq;	o	LOCATION_CHECK
	f	Lefq;	p	WEATHER_CHECK
	f	Lefq;	q	REFERENCE
	f	Lefq;	r	TIME_CHECK
	f	Lefq;	s	VALUE_CHECK
	f	Lcom/mojang/serialization/Codec;	t	TYPED_CODEC
c	efs	net/minecraft/world/level/storage/loot/predicates/LootItemEntityPropertyCondition
	m	(Ljava/util/Optional;Lecq$b;)V	<init>	<init>
		p	2		entity
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(Lbq$a;Lecq$b;)Lefp;	a	lambda$hasProperties$1
	m	(Lbq;Lecq$b;)Lefp;	a	lambda$hasProperties$2
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	(Lecq$b;)Lefp$a;	a	entityPresent
		p	0		entity
	m	(Lecq$b;Lbq$a;)Lefp$a;	a	hasProperties
		p	0		entity
		p	1		predicateBuilder
	m	(Lecq$b;Lbq;)Lefp$a;	a	hasProperties
		p	0		entity
		p	1		predicate
	m	(Lecq;)Z	a	test
	m	()Lefq;	b	getType
	m	()Ljava/util/Optional;	c	predicate
	m	()Lecq$b;	d	entityTarget
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Optional;	b	predicate
	f	Lecq$b;	c	entityTarget
c	eft	net/minecraft/world/level/storage/loot/predicates/LootItemKilledByPlayerCondition
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(Lecq;)Z	a	test
	m	()Lefq;	b	getType
	m	()Lefp$a;	c	killedByPlayer
	m	()Lefp;	d	lambda$killedByPlayer$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Left;	b	INSTANCE
c	efu	net/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceCondition
	m	(F)V	<init>	<init>
		p	1		chance
	m	(F)Lefp$a;	a	randomChance
		p	0		chance
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	(Lecq;)Z	a	test
	m	()Lefq;	b	getType
	m	(F)Lefp;	b	lambda$randomChance$1
	m	()F	c	probability
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	F	b	probability
c	efv	net/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceWithLootingCondition
	m	(FF)V	<init>	<init>
		p	1		chance
		p	2		lootingMultiplier
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(FF)Lefp$a;	a	randomChanceAndLootingBoost
		p	0		chance
		p	1		lootingMultiplier
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	(Lecq;)Z	a	test
	m	()Lefq;	b	getType
	m	(FF)Lefp;	b	lambda$randomChanceAndLootingBoost$1
	m	()F	c	percent
	m	()F	d	lootingMultiplier
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	F	b	percent
	f	F	c	lootingMultiplier
c	efw	net/minecraft/world/level/storage/loot/predicates/MatchTool
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(Lcb$a;)Lefp$a;	a	toolMatches
		p	0		predicate
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	(Lecq;)Z	a	test
	m	()Lefq;	b	getType
	m	(Lcb$a;)Lefp;	b	lambda$toolMatches$1
	m	()Ljava/util/Optional;	c	predicate
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Optional;	b	predicate
c	efx	net/minecraft/world/level/storage/loot/predicates/TimeCheck
	m	(Ljava/util/Optional;Lecp;)V	<init>	<init>
		p	2		value
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	(Lecp;)Lefx$a;	a	time
		p	0		value
	m	(Lecq;)Z	a	test
	m	()Lefq;	b	getType
	m	()Ljava/util/Optional;	c	period
	m	()Lecp;	d	value
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Optional;	b	period
	f	Lecp;	c	value
c	efx$a	net/minecraft/world/level/storage/loot/predicates/TimeCheck$Builder
	m	(Lecp;)V	<init>	<init>
		p	1		value
	m	()Lefx;	a	build
	m	(J)Lefx$a;	a	setPeriod
		p	1		period
	f	Ljava/util/Optional;	a	period
	f	Lecp;	b	value
c	efy	net/minecraft/world/level/storage/loot/predicates/ValueCheckCondition
	m	(Legk;Lecp;)V	<init>	<init>
		p	1		value
		p	2		range
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	(Lecq;)Z	a	test
	m	(Legk;Lecp;)Lefp$a;	a	hasValue
		p	0		value
		p	1		range
	m	()Lefq;	b	getType
	m	(Legk;Lecp;)Lefp;	b	lambda$hasValue$1
	m	()Legk;	c	provider
	m	()Lecp;	d	range
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Legk;	b	provider
	f	Lecp;	c	range
c	efz	net/minecraft/world/level/storage/loot/predicates/WeatherCheck
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	(Lecq;)Z	a	test
	m	()Lefq;	b	getType
	m	()Lefz$a;	c	weather
	m	()Ljava/util/Optional;	d	isRaining
	m	()Ljava/util/Optional;	e	isThundering
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Optional;	b	isRaining
	f	Ljava/util/Optional;	c	isThundering
c	efz$a	net/minecraft/world/level/storage/loot/predicates/WeatherCheck$Builder
	m	()Lefz;	a	build
	m	(Z)Lefz$a;	a	setRaining
		p	1		raining
	m	(Z)Lefz$a;	b	setThundering
		p	1		thundering
	f	Ljava/util/Optional;	a	isRaining
	f	Ljava/util/Optional;	b	isThundering
c	ega	net/minecraft/world/level/storage/loot/predicates/package-info
c	egb	net/minecraft/world/level/storage/loot/providers/nbt/ContextNbtProvider
	m	(Legb$a;)V	<init>	<init>
		p	1		target
	m	()Legc;	a	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Lecq$b;)Legd;	a	forContextEntity
		p	0		target
	m	(Lecq;)Lrq;	a	get
		p	1		context
	m	(Legb;)Legb$a;	a	lambda$static$3
	m	(Ljava/lang/String;)Legb$a;	a	lambda$static$0
	m	()Ljava/util/Set;	b	getReferencedContextParams
	m	(Lecq$b;)Legb$a;	b	forEntity
		p	0		entityTarget
	m	(Legb;)Legb$a;	b	lambda$static$1
	f	Legb;	a	BLOCK_ENTITY
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lcom/mojang/serialization/Codec;	c	INLINE_CODEC
	f	Ljava/lang/String;	d	BLOCK_ENTITY_ID
	f	Legb$a;	e	BLOCK_ENTITY_PROVIDER
	f	Lcom/mojang/serialization/Codec;	f	GETTER_CODEC
	f	Legb$a;	g	getter
c	egb$1	net/minecraft/world/level/storage/loot/providers/nbt/ContextNbtProvider$1
	m	()Ljava/lang/String;	a	getId
	m	(Lecq;)Lrq;	a	get
		p	1		context
	m	()Ljava/util/Set;	b	getReferencedContextParams
c	egb$2	net/minecraft/world/level/storage/loot/providers/nbt/ContextNbtProvider$2
	m	()Ljava/lang/String;	a	getId
	m	(Lecq;)Lrq;	a	get
		p	1		context
	m	()Ljava/util/Set;	b	getReferencedContextParams
	f	Lecq$b;	a	val$target
c	egb$a	net/minecraft/world/level/storage/loot/providers/nbt/ContextNbtProvider$Getter
	m	()Ljava/lang/String;	a	getId
	m	(Lecq;)Lrq;	a	get
		p	1		context
	m	()Ljava/util/Set;	b	getReferencedContextParams
c	egc	net/minecraft/world/level/storage/loot/providers/nbt/LootNbtProviderType
	m	()Lcom/mojang/serialization/Codec;	a	codec
	f	Lcom/mojang/serialization/Codec;	a	codec
c	egd	net/minecraft/world/level/storage/loot/providers/nbt/NbtProvider
	m	()Legc;	a	getType
	m	(Lecq;)Lrq;	a	get
		p	1		context
	m	()Ljava/util/Set;	b	getReferencedContextParams
c	ege	net/minecraft/world/level/storage/loot/providers/nbt/NbtProviders
	m	()Lcom/mojang/serialization/Codec;	a	lambda$static$2
	m	(Lcom/mojang/datafixers/util/Either;)Legd;	a	lambda$static$0
	m	(Legd;)Lcom/mojang/datafixers/util/Either;	a	lambda$static$1
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Legc;	a	register
		p	0		id
		p	1		codec
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Legc;	b	STORAGE
	f	Legc;	c	CONTEXT
	f	Lcom/mojang/serialization/Codec;	d	TYPED_CODEC
c	egf	net/minecraft/world/level/storage/loot/providers/nbt/StorageNbtProvider
	m	(Laew;)V	<init>	<init>
		p	1		source
	m	()Legc;	a	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	(Lecq;)Lrq;	a	get
		p	1		context
	m	()Ljava/util/Set;	b	getReferencedContextParams
	m	()Laew;	c	id
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Laew;	b	id
c	egg	net/minecraft/world/level/storage/loot/providers/nbt/package-info
c	egh	net/minecraft/world/level/storage/loot/providers/number/BinomialDistributionGenerator
	m	(Legk;Legk;)V	<init>	<init>
		p	1		n
		p	2		p
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(IF)Legh;	a	binomial
		p	0		n
		p	1		p
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	(Lecq;)I	a	getInt
		p	1		context
	m	()Legj;	b	getType
	m	(Lecq;)F	b	getFloat
		p	1		context
	m	()Legk;	c	n
	m	()Legk;	d	p
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Legk;	b	n
	f	Legk;	c	p
c	egi	net/minecraft/world/level/storage/loot/providers/number/ConstantValue
	m	(F)V	<init>	<init>
		p	1		value
	m	(F)Legi;	a	exactly
		p	0		value
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()Legj;	b	getType
	m	(Lecq;)F	b	getFloat
		p	1		context
	m	()F	c	value
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcom/mojang/serialization/Codec;	b	INLINE_CODEC
	f	F	c	value
c	egj	net/minecraft/world/level/storage/loot/providers/number/LootNumberProviderType
	m	()Lcom/mojang/serialization/Codec;	a	codec
	f	Lcom/mojang/serialization/Codec;	a	codec
c	egk	net/minecraft/world/level/storage/loot/providers/number/NumberProvider
	m	(Lecq;)I	a	getInt
		p	1		context
	m	()Legj;	b	getType
	m	(Lecq;)F	b	getFloat
		p	1		context
c	egl	net/minecraft/world/level/storage/loot/providers/number/NumberProviders
	m	()Lcom/mojang/serialization/Codec;	a	lambda$static$2
	m	(Lcom/mojang/datafixers/util/Either;)Legk;	a	lambda$static$0
	m	(Legk;)Lcom/mojang/datafixers/util/Either;	a	lambda$static$1
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Legj;	a	register
		p	0		id
		p	1		codec
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Legj;	b	CONSTANT
	f	Legj;	c	UNIFORM
	f	Legj;	d	BINOMIAL
	f	Legj;	e	SCORE
	f	Lcom/mojang/serialization/Codec;	f	TYPED_CODEC
c	egm	net/minecraft/world/level/storage/loot/providers/number/ScoreboardValue
	m	(Legs;Ljava/lang/String;F)V	<init>	<init>
		p	1		target
		p	2		score
		p	3		scale
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	(Lecq$b;Ljava/lang/String;)Legm;	a	fromScoreboard
		p	0		target
		p	1		score
	m	(Lecq$b;Ljava/lang/String;F)Legm;	a	fromScoreboard
		p	0		target
		p	1		score
		p	2		scale
	m	()Legj;	b	getType
	m	(Lecq;)F	b	getFloat
		p	1		context
	m	()Legs;	c	target
	m	()Ljava/lang/String;	d	score
	m	()F	e	scale
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Legs;	b	target
	f	Ljava/lang/String;	c	score
	f	F	d	scale
c	egn	net/minecraft/world/level/storage/loot/providers/number/UniformGenerator
	m	(Legk;Legk;)V	<init>	<init>
		p	1		min
		p	2		max
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(FF)Legn;	a	between
		p	0		min
		p	1		max
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	(Lecq;)I	a	getInt
		p	1		context
	m	()Legj;	b	getType
	m	(Lecq;)F	b	getFloat
		p	1		context
	m	()Legk;	c	min
	m	()Legk;	d	max
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Legk;	b	min
	f	Legk;	c	max
c	ego	net/minecraft/world/level/storage/loot/providers/number/package-info
c	egp	net/minecraft/world/level/storage/loot/providers/score/ContextScoreboardNameProvider
	m	(Lecq$b;)V	<init>	<init>
		p	1		target
	m	()Legr;	a	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	(Lecq$b;)Legs;	a	forTarget
		p	0		target
	m	(Lecq;)Ljava/lang/String;	a	getScoreboardName
		p	1		context
	m	()Ljava/util/Set;	b	getReferencedContextParams
	m	()Lecq$b;	c	target
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcom/mojang/serialization/Codec;	b	INLINE_CODEC
	f	Lecq$b;	c	target
c	egq	net/minecraft/world/level/storage/loot/providers/score/FixedScoreboardNameProvider
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		name
	m	()Legr;	a	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	(Lecq;)Ljava/lang/String;	a	getScoreboardName
		p	1		context
	m	(Ljava/lang/String;)Legs;	a	forName
		p	0		name
	m	()Ljava/util/Set;	b	getReferencedContextParams
	m	()Ljava/lang/String;	c	name
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/lang/String;	b	name
c	egr	net/minecraft/world/level/storage/loot/providers/score/LootScoreProviderType
	m	()Lcom/mojang/serialization/Codec;	a	codec
	f	Lcom/mojang/serialization/Codec;	a	codec
c	egs	net/minecraft/world/level/storage/loot/providers/score/ScoreboardNameProvider
	m	()Legr;	a	getType
	m	(Lecq;)Ljava/lang/String;	a	getScoreboardName
		p	1		context
	m	()Ljava/util/Set;	b	getReferencedContextParams
c	egt	net/minecraft/world/level/storage/loot/providers/score/ScoreboardNameProviders
	m	()Lcom/mojang/serialization/Codec;	a	lambda$static$2
	m	(Lcom/mojang/datafixers/util/Either;)Legs;	a	lambda$static$0
	m	(Legs;)Lcom/mojang/datafixers/util/Either;	a	lambda$static$1
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Legr;	a	register
		p	0		id
		p	1		codec
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Legr;	b	FIXED
	f	Legr;	c	CONTEXT
	f	Lcom/mojang/serialization/Codec;	d	TYPED_CODEC
c	egu	net/minecraft/world/level/storage/loot/providers/score/package-info
c	egv	net/minecraft/world/level/storage/package-info
c	egw	net/minecraft/world/level/timers/FunctionCallback
	m	(Laew;)V	<init>	<init>
		p	1		name
	m	(Lafk;Ldp;)V	a	lambda$handle$0
		p	1		function
	m	(Lnet/minecraft/server/MinecraftServer;Leha;J)V	a	handle
	m	(Ljava/lang/Object;Leha;J)V	handle	handle
		p	1		server
		p	2		events
		p	3		time
	f	Laew;	a	functionId
c	egw$a	net/minecraft/world/level/timers/FunctionCallback$Serializer
	m	(Lqw;)Legw;	a	deserialize
	m	(Lqw;Legw;)V	a	serialize
		p	1		nbt
		p	2		callback
	m	(Lqw;Legy;)V	a	serialize
		p	1		nbt
		p	2		callback
	m	(Lqw;)Legy;	b	deserialize
		p	1		nbt
c	egx	net/minecraft/world/level/timers/FunctionTagCallback
	m	(Laew;)V	<init>	<init>
		p	1		name
	m	(Lnet/minecraft/server/MinecraftServer;Leha;J)V	a	handle
	m	(Ljava/lang/Object;Leha;J)V	handle	handle
		p	1		server
		p	2		events
		p	3		time
	f	Laew;	a	tagId
c	egx$a	net/minecraft/world/level/timers/FunctionTagCallback$Serializer
	m	(Lqw;)Legx;	a	deserialize
	m	(Lqw;Legx;)V	a	serialize
		p	1		nbt
		p	2		callback
	m	(Lqw;Legy;)V	a	serialize
		p	1		nbt
		p	2		callback
	m	(Lqw;)Legy;	b	deserialize
		p	1		nbt
c	egy	net/minecraft/world/level/timers/TimerCallback
	m	(Ljava/lang/Object;Leha;J)V	handle	handle
		p	1		server
		p	2		events
		p	3		time
c	egy$a	net/minecraft/world/level/timers/TimerCallback$Serializer
	m	(Laew;Ljava/lang/Class;)V	<init>	<init>
		p	1		id
		p	2		callbackClass
	m	()Laew;	a	getId
	m	(Lqw;Legy;)V	a	serialize
		p	1		nbt
		p	2		callback
	m	()Ljava/lang/Class;	b	getCls
	m	(Lqw;)Legy;	b	deserialize
		p	1		nbt
	f	Laew;	a	id
	f	Ljava/lang/Class;	b	cls
c	egz	net/minecraft/world/level/timers/TimerCallbacks
	m	(Legy$a;)Legz;	a	register
		p	1		serializer
	m	(Legy;)Lqw;	a	serialize
		p	1		callback
	m	(Ljava/lang/Class;)Legy$a;	a	getSerializer
		p	1		clazz
	m	(Lqw;)Legy;	a	deserialize
		p	1		nbt
	f	Legz;	a	SERVER_CALLBACKS
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ljava/util/Map;	c	idToSerializer
	f	Ljava/util/Map;	d	classToSerializer
c	eha	net/minecraft/world/level/timers/TimerQueue
	m	(Legz;)V	<init>	<init>
		p	1		timerCallbackSerializer
	m	(Legz;Ljava/util/stream/Stream;)V	<init>	<init>
		p	1		timerCallbackSerializer
		p	2		nbts
	m	()Ljava/util/Set;	a	getEventsIds
	m	(Lcom/mojang/serialization/Dynamic;)V	a	lambda$new$2
		p	1		nbt
	m	(Leha$a;)Lqw;	a	storeEvent
		p	1		event
	m	(Ljava/lang/Object;J)V	a	tick
		p	1		server
		p	2		time
	m	(Ljava/lang/String;)I	a	remove
		p	1		name
	m	(Ljava/lang/String;JLegy;)V	a	schedule
		p	1		name
		p	2		triggerTime
		p	4		callback
	m	(Lqw;)V	a	loadEvent
		p	1		nbt
	m	()Lrc;	b	store
	m	(Leha$a;)Lcom/google/common/primitives/UnsignedLong;	b	lambda$createComparator$1
		p	0		event
	m	()Ljava/util/Comparator;	c	createComparator
	m	(Leha$a;)J	c	lambda$createComparator$0
		p	0		event
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/lang/String;	b	CALLBACK_DATA_TAG
	f	Ljava/lang/String;	c	TIMER_NAME_TAG
	f	Ljava/lang/String;	d	TIMER_TRIGGER_TIME_TAG
	f	Legz;	e	callbacksRegistry
	f	Ljava/util/Queue;	f	queue
	f	Lcom/google/common/primitives/UnsignedLong;	g	sequentialId
	f	Lcom/google/common/collect/Table;	h	events
c	eha$a	net/minecraft/world/level/timers/TimerQueue$Event
	m	(JLcom/google/common/primitives/UnsignedLong;Ljava/lang/String;Legy;)V	<init>	<init>
		p	1		triggerTime
		p	3		id
		p	4		name
		p	5		callback
	f	J	a	triggerTime
	f	Lcom/google/common/primitives/UnsignedLong;	b	sequentialId
	f	Ljava/lang/String;	c	id
	f	Legy;	d	callback
c	ehb	net/minecraft/world/level/timers/package-info
c	ehc	net/minecraft/world/level/validation/ContentValidationException
	m	(Ljava/nio/file/Path;Ljava/util/List;)V	<init>	<init>
		p	1		path
		p	2		symlinks
	m	(Lehe;)Ljava/lang/String;	a	lambda$getMessage$0
		p	0		symlink
	m	(Ljava/nio/file/Path;Ljava/util/List;)Ljava/lang/String;	a	getMessage
		p	0		path
		p	1		symlinks
	f	Ljava/nio/file/Path;	a	directory
	f	Ljava/util/List;	b	entries
c	ehd	net/minecraft/world/level/validation/DirectoryValidator
	m	(Ljava/nio/file/PathMatcher;)V	<init>	<init>
		p	1		matcher
	m	(Ljava/nio/file/Path;)Ljava/util/List;	a	validateSymlink
		p	1		path
	m	(Ljava/nio/file/Path;Ljava/util/List;)V	a	validateSymlink
		p	1		path
		p	2		results
	m	(Ljava/nio/file/Path;Z)Ljava/util/List;	a	validateDirectory
		p	1		path
		p	2		resolveSymlink
	m	(Ljava/nio/file/Path;Ljava/util/List;)V	b	validateKnownDirectory
		p	1		path
		p	2		results
	f	Ljava/nio/file/PathMatcher;	a	symlinkTargetAllowList
c	ehd$1	net/minecraft/world/level/validation/DirectoryValidator$1
	m	(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;	a	preVisitDirectory
	m	(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;	b	visitFile
	m	(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)V	c	validateSymlink
		p	1		path
		p	2		attributes
	f	Ljava/util/List;	a	val$issues
	f	Lehd;	b	this$0
c	ehe	net/minecraft/world/level/validation/ForbiddenSymlinkInfo
	m	()Ljava/nio/file/Path;	a	link
	m	()Ljava/nio/file/Path;	b	target
	f	Ljava/nio/file/Path;	a	link
	f	Ljava/nio/file/Path;	b	target
c	ehf	net/minecraft/world/level/validation/PathAllowList
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		allowedEntries
	m	(Ljava/io/BufferedReader;)Lehf;	a	readPlain
		p	0		reader
	m	(Ljava/lang/String;)Ljava/util/stream/Stream;	a	lambda$readPlain$5
		p	0		line
	m	(Ljava/nio/file/FileSystem;)Ljava/nio/file/PathMatcher;	a	getForFileSystem
		p	1		fileSystem
	m	(Ljava/nio/file/FileSystem;Lehf$a;)Ljava/nio/file/PathMatcher;	a	lambda$getForFileSystem$0
		p	1		entry
	m	(Ljava/nio/file/FileSystem;Ljava/lang/String;)Ljava/nio/file/PathMatcher;	a	lambda$getForFileSystem$4
		p	2		scheme
	m	(Ljava/nio/file/Path;)Z	a	lambda$getForFileSystem$2
		p	0		path
	m	(Ljava/util/List;Ljava/nio/file/Path;)Z	a	lambda$getForFileSystem$3
		p	1		path
	m	(Ljava/nio/file/Path;)Z	b	lambda$getForFileSystem$1
		p	0		path
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/lang/String;	b	COMMENT_PREFIX
	f	Ljava/util/List;	c	entries
	f	Ljava/util/Map;	d	compiledPaths
c	ehf$a	net/minecraft/world/level/validation/PathAllowList$ConfigEntry
	m	()Lehf$b;	a	type
	m	(Ljava/lang/String;)Ljava/util/Optional;	a	parse
		p	0		line
	m	(Ljava/nio/file/FileSystem;)Ljava/nio/file/PathMatcher;	a	compile
		p	1		fileSystem
	m	()Ljava/lang/String;	b	pattern
	m	(Ljava/lang/String;)Lehf$a;	b	glob
		p	0		pattern
	m	(Ljava/lang/String;)Lehf$a;	c	regex
		p	0		pattern
	m	(Ljava/lang/String;)Lehf$a;	d	prefix
		p	0		prefix
	f	Lehf$b;	a	type
	f	Ljava/lang/String;	b	pattern
c	ehf$b	net/minecraft/world/level/validation/PathAllowList$EntryType
	m	(Ljava/lang/String;Ljava/nio/file/Path;)Z	a	lambda$static$0
		p	1		path
	m	(Ljava/nio/file/FileSystem;Ljava/lang/String;)Ljava/nio/file/PathMatcher;	a	lambda$static$1
		p	0		fileSystem
		p	1		prefix
	m	(Ljava/nio/file/FileSystem;Ljava/lang/String;)Ljava/nio/file/PathMatcher;	compile	compile
		p	1		fileSystem
		p	2		pattern
	f	Lehf$b;	a	FILESYSTEM
	f	Lehf$b;	b	PREFIX
c	ehg	net/minecraft/world/level/validation/package-info
c	ehh	net/minecraft/world/package-info
c	ehi	net/minecraft/world/phys/AABB
	m	(DDDDDD)V	<init>	<init>
		p	1		x1
		p	3		y1
		p	5		z1
		p	7		x2
		p	9		y2
		p	11		z2
	m	(Lehn;Lehn;)V	<init>	<init>
		p	1		pos1
		p	2		pos2
	m	(Lgw;)V	<init>	<init>
		p	1		pos
	m	(Lgw;Lgw;)V	<init>	<init>
		p	1		pos1
		p	2		pos2
	m	()D	a	getSize
	m	(D)Lehi;	a	setMinX
		p	1		minX
	m	(DDD)Lehi;	a	contract
		p	1		x
		p	3		y
		p	5		z
	m	(DDDDDD)Z	a	intersects
		p	1		minX
		p	3		minY
		p	5		minZ
		p	7		maxX
		p	9		maxY
		p	11		maxZ
	m	(Ldva;)Lehi;	a	of
		p	0		mutable
	m	(Lehi;)Lehi;	a	intersect
		p	1		box
	m	(Lehi;Lehn;[DLha;DDD)Lha;	a	getDirection
		p	0		box
		p	1		intersectingVector
		p	2		traceDistanceResult
		p	3		approachDirection
		p	4		deltaX
		p	6		deltaY
		p	8		deltaZ
	m	(Lehn;)Lehi;	a	unitCubeFromLowerCorner
		p	0		pos
	m	(Lehn;DDD)Lehi;	a	ofSize
		p	0		center
		p	1		dx
		p	3		dy
		p	5		dz
	m	(Lehn;Lehn;)Z	a	intersects
		p	1		pos1
		p	2		pos2
	m	(Lgw;)Lehi;	a	move
		p	1		blockPos
	m	(Lha$a;)D	a	min
		p	1		axis
	m	(Ljava/lang/Iterable;Lehn;Lehn;Lgw;)Lehj;	a	clip
		p	0		boxes
		p	1		from
		p	2		to
		p	3		pos
	m	([DLha;DDDDDDDDLha;DDD)Lha;	a	clipPoint
		p	0		traceDistanceResult
		p	1		approachDirection
		p	2		deltaX
		p	4		deltaY
		p	6		deltaZ
		p	8		begin
		p	10		minX
		p	12		maxX
		p	14		minZ
		p	16		maxZ
		p	18		resultDirection
		p	19		startX
		p	21		startY
		p	23		startZ
	m	()D	b	getXsize
	m	(D)Lehi;	b	setMinY
		p	1		minY
	m	(DDD)Lehi;	b	expandTowards
		p	1		x
		p	3		y
		p	5		z
	m	(Lehi;)Lehi;	b	minmax
		p	1		box
	m	(Lehn;)Lehi;	b	expandTowards
		p	1		scale
	m	(Lehn;Lehn;)Ljava/util/Optional;	b	clip
		p	1		min
		p	2		max
	m	(Lha$a;)D	b	max
		p	1		axis
	m	()D	c	getYsize
	m	(D)Lehi;	c	setMinZ
		p	1		minZ
	m	(DDD)Lehi;	c	inflate
		p	1		x
		p	3		y
		p	5		z
	m	(Lehi;)Z	c	intersects
		p	1		box
	m	(Lehn;)Lehi;	c	move
		p	1		vec
	m	()D	d	getZsize
	m	(D)Lehi;	d	setMaxX
		p	1		maxX
	m	(DDD)Lehi;	d	move
		p	1		x
		p	3		y
		p	5		z
	m	(Lehn;)Z	d	contains
		p	1		pos
	m	()Z	e	hasNaN
	m	(D)Lehi;	e	setMaxY
		p	1		maxY
	m	(DDD)Z	e	contains
		p	1		x
		p	3		y
		p	5		z
	m	(Lehn;)D	e	distanceToSqr
		p	1		pos
	m	()Lehn;	f	getCenter
	m	(D)Lehi;	f	setMaxZ
		p	1		maxZ
	m	(DDD)Lehi;	f	deflate
		p	1		x
		p	3		y
		p	5		z
	m	(D)Lehi;	g	inflate
		p	1		value
	m	(D)Lehi;	h	deflate
		p	1		value
	f	D	a	minX
	f	D	b	minY
	f	D	c	minZ
	f	D	d	maxX
	f	D	e	maxY
	f	D	f	maxZ
	f	D	g	EPSILON
c	ehj	net/minecraft/world/phys/BlockHitResult
	m	(Lehn;Lha;Lgw;Z)V	<init>	<init>
		p	1		pos
		p	2		side
		p	3		blockPos
		p	4		insideBlock
	m	(ZLehn;Lha;Lgw;Z)V	<init>	<init>
		p	1		missed
		p	2		pos
		p	3		side
		p	4		blockPos
		p	5		insideBlock
	m	()Lgw;	a	getBlockPos
	m	(Lehn;Lha;Lgw;)Lehj;	a	miss
		p	0		pos
		p	1		side
		p	2		blockPos
	m	(Lgw;)Lehj;	a	withPosition
		p	1		blockPos
	m	(Lha;)Lehj;	a	withDirection
		p	1		side
	m	()Lha;	b	getDirection
	m	()Lehl$a;	c	getType
	m	()Z	d	isInside
	f	Lha;	b	direction
	f	Lgw;	c	blockPos
	f	Z	d	miss
	f	Z	e	inside
c	ehk	net/minecraft/world/phys/EntityHitResult
	m	(Lbiq;)V	<init>	<init>
		p	1		entity
	m	(Lbiq;Lehn;)V	<init>	<init>
		p	1		entity
		p	2		pos
	m	()Lbiq;	a	getEntity
	m	()Lehl$a;	c	getType
	f	Lbiq;	b	entity
c	ehl	net/minecraft/world/phys/HitResult
	m	(Lehn;)V	<init>	<init>
		p	1		pos
	m	(Lbiq;)D	a	distanceTo
		p	1		entity
	m	()Lehl$a;	c	getType
	m	()Lehn;	e	getLocation
	f	Lehn;	a	location
c	ehl$a	net/minecraft/world/phys/HitResult$Type
	m	()[Lehl$a;	a	$values
	f	Lehl$a;	a	MISS
	f	Lehl$a;	b	BLOCK
	f	Lehl$a;	c	ENTITY
	f	[Lehl$a;	d	$VALUES
c	ehm	net/minecraft/world/phys/Vec2
	m	(FF)V	<init>	<init>
		p	1		x
		p	2		y
	m	()Lehm;	a	normalized
	m	(F)Lehm;	a	scale
		p	1		value
	m	(Lehm;)F	a	dot
		p	1		vec
	m	()F	b	length
	m	(F)Lehm;	b	add
		p	1		value
	m	(Lehm;)Lehm;	b	add
		p	1		vec
	m	()F	c	lengthSquared
	m	(Lehm;)Z	c	equals
		p	1		other
	m	()Lehm;	d	negated
	m	(Lehm;)F	d	distanceToSqr
		p	1		vec
	f	Lehm;	a	ZERO
	f	Lehm;	b	ONE
	f	Lehm;	c	UNIT_X
	f	Lehm;	d	NEG_UNIT_X
	f	Lehm;	e	UNIT_Y
	f	Lehm;	f	NEG_UNIT_Y
	f	Lehm;	g	MAX
	f	Lehm;	h	MIN
	f	F	i	x
	f	F	j	y
c	ehn	net/minecraft/world/phys/Vec3
	m	(DDD)V	<init>	<init>
		p	1		x
		p	3		y
		p	5		z
	m	(Lorg/joml/Vector3f;)V	<init>	<init>
		p	1		vec
	m	()D	a	x
	m	(D)Lehn;	a	scale
		p	1		value
	m	(DDD)Lehn;	a	subtract
		p	1		x
		p	3		y
		p	5		z
	m	(F)Lehn;	a	xRot
		p	1		angle
	m	(FF)Lehn;	a	directionFromRotation
		p	0		pitch
		p	1		yaw
	m	(I)Lehn;	a	fromRGB24
		p	0		rgb
	m	(Lasc;F)Lehn;	a	offsetRandom
		p	1		random
		p	2		multiplier
	m	(Lehm;)Lehn;	a	directionFromRotation
		p	0		polar
	m	(Lehn;)Lehn;	a	vectorTo
		p	1		vec
	m	(Lehn;D)Lehn;	a	lerp
		p	1		to
		p	2		delta
	m	(Lha$a;)D	a	get
		p	1		axis
	m	(Lha$a;D)Lehn;	a	with
		p	1		axis
		p	2		value
	m	(Lha;D)Lehn;	a	relative
		p	1		direction
		p	2		value
	m	(Lho;D)Z	a	closerThan
		p	1		pos
		p	2		radius
	m	(Lhy;)Lehn;	a	atLowerCornerOf
		p	0		vec
	m	(Lhy;D)Lehn;	a	upFromBottomCenterOf
		p	0		vec
		p	1		deltaY
	m	(Lhy;DDD)Lehn;	a	atLowerCornerWithOffset
		p	0		vec
		p	1		deltaX
		p	3		deltaY
		p	5		deltaZ
	m	(Ljava/util/EnumSet;)Lehn;	a	align
		p	1		axes
	m	(Ljava/util/List;)Lcom/mojang/serialization/DataResult;	a	lambda$static$1
		p	0		coordinates
	m	()D	b	y
	m	(DDD)Lehn;	b	add
		p	1		x
		p	3		y
		p	5		z
	m	(F)Lehn;	b	yRot
		p	1		angle
	m	(Lehn;)D	b	dot
		p	1		vec
	m	(Lhy;)Lehn;	b	atCenterOf
		p	0		vec
	m	(Ljava/util/List;)Lehn;	b	lambda$static$0
		p	0		coords
	m	()D	c	z
	m	(DDD)D	c	distanceToSqr
		p	1		x
		p	3		y
		p	5		z
	m	(F)Lehn;	c	zRot
		p	1		angle
	m	(Lehn;)Lehn;	c	cross
		p	1		vec
	m	(Lhy;)Lehn;	c	atBottomCenterOf
		p	0		vec
	m	()Lehn;	d	normalize
	m	(DDD)Lehn;	d	multiply
		p	1		x
		p	3		y
		p	5		z
	m	(Lehn;)Lehn;	d	subtract
		p	1		vec
	m	()Lehn;	e	reverse
	m	(Lehn;)Lehn;	e	add
		p	1		vec
	m	()D	f	length
	m	(Lehn;)D	f	distanceTo
		p	1		vec
	m	()D	g	lengthSqr
	m	(Lehn;)D	g	distanceToSqr
		p	1		vec
	m	()D	h	horizontalDistance
	m	(Lehn;)Lehn;	h	multiply
		p	1		vec
	m	()D	i	horizontalDistanceSqr
	m	(Lehn;)Ljava/util/List;	i	lambda$static$2
		p	0		vec
	m	()Lorg/joml/Vector3f;	j	toVector3f
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lehn;	b	ZERO
	f	D	c	x
	f	D	d	y
	f	D	e	z
c	eho	net/minecraft/world/phys/package-info
c	ehp	net/minecraft/world/phys/shapes/ArrayVoxelShape
	m	(Lehw;Lit/unimi/dsi/fastutil/doubles/DoubleList;Lit/unimi/dsi/fastutil/doubles/DoubleList;Lit/unimi/dsi/fastutil/doubles/DoubleList;)V	<init>	<init>
		p	1		shape
		p	2		xPoints
		p	3		yPoints
		p	4		zPoints
	m	(Lehw;[D[D[D)V	<init>	<init>
		p	1		shape
		p	2		xPoints
		p	3		yPoints
		p	4		zPoints
	m	(Lha$a;)Lit/unimi/dsi/fastutil/doubles/DoubleList;	a	getCoords
		p	1		axis
	f	Lit/unimi/dsi/fastutil/doubles/DoubleList;	b	xs
	f	Lit/unimi/dsi/fastutil/doubles/DoubleList;	c	ys
	f	Lit/unimi/dsi/fastutil/doubles/DoubleList;	d	zs
c	ehp$1	net/minecraft/world/phys/shapes/ArrayVoxelShape$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction$Axis
c	ehq	net/minecraft/world/phys/shapes/BitSetDiscreteVoxelShape
	m	(III)V	<init>	<init>
		p	1		sizeX
		p	2		sizeY
		p	3		sizeZ
	m	(Lehw;)V	<init>	<init>
		p	1		other
	m	()Z	a	isEmpty
	m	(III)I	a	getIndex
		p	1		x
		p	2		y
		p	3		z
	m	(IIII)Z	a	isZStripFull
		p	1		z1
		p	2		z2
		p	3		x
		p	4		y
	m	(IIIII)Z	a	isXZRectangleFull
		p	1		x1
		p	2		x2
		p	3		z1
		p	4		z2
		p	5		y
	m	(IIIIIIIII)Lehq;	a	withFilledBounds
		p	0		sizeX
		p	1		sizeY
		p	2		sizeZ
		p	3		minX
		p	4		minY
		p	5		minZ
		p	6		maxX
		p	7		maxY
		p	8		maxZ
	m	(IIIZ)V	a	fillUpdateBounds
		p	1		x
		p	2		y
		p	3		z
		p	4		updateBounds
	m	(Lehr;Lehw;IILehw;IILehq;II[I[ZIII)Z	a	lambda$join$0
		p	12		z1
		p	13		z2
		p	14		zIndex
	m	(Lehw;Lehw$b;Z)V	a	forAllBoxes
		p	0		voxelSet
		p	1		callback
		p	2		coalesce
	m	(Lehw;Lehw;Lehz;Lehz;Lehz;Lehr;)Lehq;	a	join
		p	0		first
		p	1		second
		p	2		xPoints
		p	3		yPoints
		p	4		zPoints
		p	5		function
	m	(Lehz;Lehr;Lehw;ILehw;ILehq;I[I[ZIII)Z	a	lambda$join$1
		p	10		y1
		p	11		y2
		p	12		yIndex
	m	(Lehz;Lehz;Lehr;Lehw;Lehw;Lehq;[IIII)Z	a	lambda$join$2
		p	7		x1
		p	8		x2
		p	9		xIndex
	m	(Lha$a;)I	a	firstFull
		p	1		axis
	m	(III)Z	b	isFull
		p	1		x
		p	2		y
		p	3		z
	m	(IIII)V	b	clearZStrip
		p	1		z1
		p	2		z2
		p	3		x
		p	4		y
	m	(Lha$a;)I	b	lastFull
		p	1		axis
	m	(III)V	c	fill
		p	1		x
		p	2		y
		p	3		z
	f	Ljava/util/BitSet;	d	storage
	f	I	e	xMin
	f	I	f	yMin
	f	I	g	zMin
	f	I	h	xMax
	f	I	i	yMax
	f	I	j	zMax
c	ehr	net/minecraft/world/phys/shapes/BooleanOp
	m	(ZZ)Z	a	lambda$static$15
		p	0		a
		p	1		b
	m	(ZZ)Z	apply	apply
		p	1		a
		p	2		b
	m	(ZZ)Z	b	lambda$static$14
		p	0		a
		p	1		b
	m	(ZZ)Z	c	lambda$static$13
		p	0		a
		p	1		b
	m	(ZZ)Z	d	lambda$static$12
		p	0		a
		p	1		b
	m	(ZZ)Z	e	lambda$static$11
		p	0		a
		p	1		b
	m	(ZZ)Z	f	lambda$static$10
		p	0		a
		p	1		b
	m	(ZZ)Z	g	lambda$static$9
		p	0		a
		p	1		b
	m	(ZZ)Z	h	lambda$static$8
		p	0		a
		p	1		b
	m	(ZZ)Z	i	lambda$static$7
		p	0		a
		p	1		b
	m	(ZZ)Z	j	lambda$static$6
		p	0		a
		p	1		b
	m	(ZZ)Z	k	lambda$static$5
		p	0		a
		p	1		b
	m	(ZZ)Z	l	lambda$static$4
		p	0		a
		p	1		b
	m	(ZZ)Z	m	lambda$static$3
		p	0		a
		p	1		b
	m	(ZZ)Z	n	lambda$static$2
		p	0		a
		p	1		b
	m	(ZZ)Z	o	lambda$static$1
		p	0		a
		p	1		b
	m	(ZZ)Z	p	lambda$static$0
		p	0		a
		p	1		b
	f	Lehr;	a	FALSE
	f	Lehr;	b	NOT_OR
	f	Lehr;	c	ONLY_SECOND
	f	Lehr;	d	NOT_FIRST
	f	Lehr;	e	ONLY_FIRST
	f	Lehr;	f	NOT_SECOND
	f	Lehr;	g	NOT_SAME
	f	Lehr;	h	NOT_AND
	f	Lehr;	i	AND
	f	Lehr;	j	SAME
	f	Lehr;	k	SECOND
	f	Lehr;	l	CAUSES
	f	Lehr;	m	FIRST
	f	Lehr;	n	CAUSED_BY
	f	Lehr;	o	OR
	f	Lehr;	p	TRUE
c	ehs	net/minecraft/world/phys/shapes/CollisionContext
	m	()Lehs;	a	empty
	m	(Lbiq;)Lehs;	a	of
		p	0		entity
	m	(Lcja;)Z	a	isHoldingItem
		p	1		item
	m	(Leam;Leam;)Z	a	canStandOnFluid
		p	1		stateAbove
		p	2		state
	m	(Leig;Lgw;Z)Z	a	isAbove
		p	1		shape
		p	2		pos
		p	3		defaultValue
	m	()Z	b	isDescending
c	eht	net/minecraft/world/phys/shapes/CubePointRange
	m	(I)V	<init>	<init>
		p	1		sectionCount
	f	I	a	parts
c	ehu	net/minecraft/world/phys/shapes/CubeVoxelShape
	m	(Lehw;)V	<init>	<init>
		p	1		voxels
	m	(Lha$a;)Lit/unimi/dsi/fastutil/doubles/DoubleList;	a	getCoords
		p	1		axis
	m	(Lha$a;D)I	a	findIndex
		p	1		axis
		p	2		coord
c	ehv	net/minecraft/world/phys/shapes/DiscreteCubeMerger
	m	()Lit/unimi/dsi/fastutil/doubles/DoubleList;	a	getList
	m	(Lehz$a;)Z	a	forMergedIndexes
		p	1		predicate
	f	Leht;	a	result
	f	I	b	firstDiv
	f	I	c	secondDiv
c	ehw	net/minecraft/world/phys/shapes/DiscreteVoxelShape
	m	(III)V	<init>	<init>
		p	1		sizeX
		p	2		sizeY
		p	3		sizeZ
	m	()Z	a	isEmpty
	m	(Lehw$a;)V	a	forAllFaces
	m	(Lehw$a;Lgu;)V	a	forAllAxisFaces
		p	2		direction
	m	(Lehw$b;Lgu;Z)V	a	forAllAxisEdges
		p	1		callback
		p	2		direction
		p	3		coalesce
	m	(Lehw$b;Z)V	a	forAllEdges
		p	1		callback
		p	2		coalesce
	m	(Lgu;III)Z	a	isFullWide
		p	1		cycle
		p	2		x
		p	3		y
		p	4		z
	m	(Lha$a;)I	a	firstFull
		p	1		axis
	m	(Lha$a;II)I	a	firstFull
		p	1		axis
		p	2		from
		p	3		to
	m	()I	b	getXSize
	m	(III)Z	b	isFull
		p	1		x
		p	2		y
		p	3		z
	m	(Lehw$b;Z)V	b	forAllBoxes
		p	1		consumer
		p	2		coalesce
	m	(Lgu;III)Z	b	isFull
		p	1		cycle
		p	2		x
		p	3		y
		p	4		z
	m	(Lha$a;)I	b	lastFull
		p	1		axis
	m	(Lha$a;II)I	b	lastFull
		p	1		axis
		p	2		from
		p	3		to
	m	()I	c	getYSize
	m	(III)V	c	fill
		p	1		x
		p	2		y
		p	3		z
	m	(Lha$a;)I	c	getSize
		p	1		axis
	m	()I	d	getZSize
	m	(III)Z	d	isFullWide
		p	1		x
		p	2		y
		p	3		z
	f	I	a	xSize
	f	I	b	ySize
	f	I	c	zSize
	f	[Lha$a;	d	AXIS_VALUES
c	ehw$a	net/minecraft/world/phys/shapes/DiscreteVoxelShape$IntFaceConsumer
	m	(Lha;III)V	consume	consume
		p	1		direction
		p	2		x
		p	3		y
		p	4		z
c	ehw$b	net/minecraft/world/phys/shapes/DiscreteVoxelShape$IntLineConsumer
	m	(IIIIII)V	consume	consume
		p	1		x1
		p	2		y1
		p	3		z1
		p	4		x2
		p	5		y2
		p	6		z2
c	ehx	net/minecraft/world/phys/shapes/EntityCollisionContext
	m	(Lbiq;)V	<init>	<init>
		p	1		entity
	m	(ZDLcjf;Ljava/util/function/Predicate;Lbiq;)V	<init>	<init>
		p	1		descending
		p	2		minY
		p	4		heldItem
		p	5		walkOnFluidPredicate
		p	6		entity
	m	(Lcja;)Z	a	isHoldingItem
		p	1		item
	m	(Leam;)Z	a	lambda$new$1
	m	(Leam;Leam;)Z	a	canStandOnFluid
		p	1		stateAbove
		p	2		state
	m	(Leig;Lgw;Z)Z	a	isAbove
		p	1		shape
		p	2		pos
		p	3		defaultValue
	m	()Z	b	isDescending
	m	(Leam;)Z	b	lambda$static$0
	m	()Lbiq;	c	getEntity
	f	Lehs;	a	EMPTY
	f	Z	b	descending
	f	D	c	entityBottom
	f	Lcjf;	d	heldItem
	f	Ljava/util/function/Predicate;	e	canStandOnFluid
	f	Lbiq;	f	entity
c	ehx$1	net/minecraft/world/phys/shapes/EntityCollisionContext$1
	m	(ZDLcjf;Ljava/util/function/Predicate;Lbiq;)V	<init>	<init>
		p	1		descending
		p	2		minY
		p	4		heldItem
		p	5		walkOnFluidPredicate
		p	6		entity
	m	(Leig;Lgw;Z)Z	a	isAbove
		p	1		shape
		p	2		pos
		p	3		defaultValue
c	ehy	net/minecraft/world/phys/shapes/IdenticalMerger
	m	(Lit/unimi/dsi/fastutil/doubles/DoubleList;)V	<init>	<init>
		p	1		values
	m	()Lit/unimi/dsi/fastutil/doubles/DoubleList;	a	getList
	m	(Lehz$a;)Z	a	forMergedIndexes
		p	1		predicate
	f	Lit/unimi/dsi/fastutil/doubles/DoubleList;	a	coords
c	ehz	net/minecraft/world/phys/shapes/IndexMerger
	m	()Lit/unimi/dsi/fastutil/doubles/DoubleList;	a	getList
	m	(Lehz$a;)Z	a	forMergedIndexes
		p	1		predicate
c	ehz$a	net/minecraft/world/phys/shapes/IndexMerger$IndexConsumer
	m	(III)Z	merge	merge
		p	1		x
		p	2		y
		p	3		index
c	eia	net/minecraft/world/phys/shapes/IndirectMerger
	m	(Lit/unimi/dsi/fastutil/doubles/DoubleList;Lit/unimi/dsi/fastutil/doubles/DoubleList;ZZ)V	<init>	<init>
		p	1		first
		p	2		second
		p	3		includeFirstOnly
		p	4		includeSecondOnly
	m	()Lit/unimi/dsi/fastutil/doubles/DoubleList;	a	getList
	m	(Lehz$a;)Z	a	forMergedIndexes
		p	1		predicate
	f	Lit/unimi/dsi/fastutil/doubles/DoubleList;	a	EMPTY
	f	[D	b	result
	f	[I	c	firstIndices
	f	[I	d	secondIndices
	f	I	e	resultLength
c	eib	net/minecraft/world/phys/shapes/NonOverlappingMerger
	m	(Lit/unimi/dsi/fastutil/doubles/DoubleList;Lit/unimi/dsi/fastutil/doubles/DoubleList;Z)V	<init>	<init>
		p	1		first
		p	2		second
		p	3		inverted
	m	()Lit/unimi/dsi/fastutil/doubles/DoubleList;	a	getList
	m	(Lehz$a;)Z	a	forMergedIndexes
		p	1		predicate
	m	(Lehz$a;III)Z	a	lambda$forMergedIndexes$0
		p	1		x
		p	2		y
		p	3		index
	m	(Lehz$a;)Z	b	forNonSwappedIndexes
		p	1		predicate
	f	Lit/unimi/dsi/fastutil/doubles/DoubleList;	a	lower
	f	Lit/unimi/dsi/fastutil/doubles/DoubleList;	b	upper
	f	Z	c	swap
c	eic	net/minecraft/world/phys/shapes/OffsetDoubleList
	m	(Lit/unimi/dsi/fastutil/doubles/DoubleList;D)V	<init>	<init>
		p	1		oldList
		p	2		offset
	f	Lit/unimi/dsi/fastutil/doubles/DoubleList;	a	delegate
	f	D	b	offset
c	eid	net/minecraft/world/phys/shapes/Shapes
	m	()Leig;	a	empty
	m	(DD)I	a	findBits
		p	0		min
		p	2		max
	m	(DDDDDD)Leig;	a	box
		p	0		minX
		p	2		minY
		p	4		minZ
		p	6		maxX
		p	8		maxY
		p	10		maxZ
	m	(II)J	a	lcm
		p	0		a
		p	1		b
	m	(ILit/unimi/dsi/fastutil/doubles/DoubleList;Lit/unimi/dsi/fastutil/doubles/DoubleList;ZZ)Lehz;	a	createIndexMerger
		p	0		size
		p	1		first
		p	2		second
		p	3		includeFirst
		p	4		includeSecond
	m	(Lehi;)Leig;	a	create
		p	0		box
	m	(Lehr;Lehw;IILehw;IIIII)Z	a	lambda$joinIsNotEmpty$1
		p	7		z1
		p	8		z2
		p	9		index3
	m	(Lehz;Lehr;Lehw;ILehw;IIII)Z	a	lambda$joinIsNotEmpty$2
		p	6		y1
		p	7		y2
		p	8		index2
	m	(Lehz;Lehz;Lehr;Lehw;Lehw;III)Z	a	lambda$joinIsNotEmpty$3
		p	5		x1
		p	6		x2
		p	7		index1
	m	(Lehz;Lehz;Lehz;Lehw;Lehw;Lehr;)Z	a	joinIsNotEmpty
		p	0		mergedX
		p	1		mergedY
		p	2		mergedZ
		p	3		shape1
		p	4		shape2
		p	5		predicate
	m	(Leig;Leig;)Leig;	a	or
		p	0		first
		p	1		second
	m	(Leig;Leig;Lehr;)Leig;	a	join
		p	0		first
		p	1		second
		p	2		function
	m	(Leig;Leig;Lha;)Z	a	blockOccudes
		p	0		shape
		p	1		neighbor
		p	2		direction
	m	(Leig;Lha;)Leig;	a	getFaceShape
		p	0		shape
		p	1		direction
	m	(Leig;[Leig;)Leig;	a	or
		p	0		first
		p	1		others
	m	(Lha$a;Lehi;Ljava/lang/Iterable;D)D	a	collide
		p	0		axis
		p	1		box
		p	2		shapes
		p	3		maxDist
	m	()Leig;	b	block
	m	(DDDDDD)Leig;	b	create
		p	0		minX
		p	2		minY
		p	4		minZ
		p	6		maxX
		p	8		maxY
		p	10		maxZ
	m	(Leig;Leig;)Z	b	faceShapeOccludes
		p	0		one
		p	1		two
	m	(Leig;Leig;Lehr;)Leig;	b	joinUnoptimized
		p	0		one
		p	1		two
		p	2		function
	m	(Leig;Leig;Lha;)Z	b	mergedFaceOccludes
		p	0		one
		p	1		two
		p	2		direction
	m	()Lehu;	c	lambda$static$0
	m	(Leig;Leig;Lehr;)Z	c	joinIsNotEmpty
		p	0		shape1
		p	1		shape2
		p	2		predicate
	f	D	a	EPSILON
	f	D	b	BIG_EPSILON
	f	Leig;	c	INFINITY
	f	Leig;	d	BLOCK
	f	Leig;	e	EMPTY
c	eid$a	net/minecraft/world/phys/shapes/Shapes$DoubleLineConsumer
	m	(DDDDDD)V	consume	consume
		p	1		minX
		p	3		minY
		p	5		minZ
		p	7		maxX
		p	9		maxY
		p	11		maxZ
c	eie	net/minecraft/world/phys/shapes/SliceShape
	m	(Leig;Lha$a;I)V	<init>	<init>
		p	1		shape
		p	2		axis
		p	3		sliceWidth
	m	(Lehw;Lha$a;I)Lehw;	a	makeSlice
		p	0		voxelSet
		p	1		axis
		p	2		sliceWidth
	m	(Lha$a;)Lit/unimi/dsi/fastutil/doubles/DoubleList;	a	getCoords
		p	1		axis
	f	Leig;	b	delegate
	f	Lha$a;	c	axis
	f	Lit/unimi/dsi/fastutil/doubles/DoubleList;	d	SLICE_COORDS
c	eif	net/minecraft/world/phys/shapes/SubShape
	m	(Lehw;IIIIII)V	<init>	<init>
		p	1		parent
		p	2		minX
		p	3		minY
		p	4		minZ
		p	5		maxX
		p	6		maxY
		p	7		maxZ
	m	(Lha$a;)I	a	firstFull
		p	1		axis
	m	(Lha$a;I)I	a	clampToShape
		p	1		axis
		p	2		value
	m	(III)Z	b	isFull
		p	1		x
		p	2		y
		p	3		z
	m	(Lha$a;)I	b	lastFull
		p	1		axis
	m	(III)V	c	fill
		p	1		x
		p	2		y
		p	3		z
	f	Lehw;	d	parent
	f	I	e	startX
	f	I	f	startY
	f	I	g	startZ
	f	I	h	endX
	f	I	i	endY
	f	I	j	endZ
c	eig	net/minecraft/world/phys/shapes/VoxelShape
	m	(Lehw;)V	<init>	<init>
		p	1		voxels
	m	()Lehi;	a	bounds
	m	(DDD)Leig;	a	move
		p	1		x
		p	3		y
		p	5		z
	m	(DLha$a;I)Z	a	lambda$findIndex$4
	m	(Lehn;)Ljava/util/Optional;	a	closestPointTo
		p	1		target
	m	(Lehn;Lehn;Lgw;)Lehj;	a	clip
		p	1		start
		p	2		end
		p	3		pos
	m	(Lehn;[Lehn;DDDDDD)V	a	lambda$closestPointTo$5
		p	2		minX
		p	4		minY
		p	6		minZ
		p	8		maxX
		p	10		maxY
		p	12		maxZ
	m	(Leid$a;)V	a	forAllEdges
		p	1		consumer
	m	(Leid$a;IIIIII)V	a	lambda$forAllEdges$1
		p	2		minX
		p	3		minY
		p	4		minZ
		p	5		maxX
		p	6		maxY
		p	7		maxZ
	m	(Leid$a;Lit/unimi/dsi/fastutil/doubles/DoubleList;Lit/unimi/dsi/fastutil/doubles/DoubleList;Lit/unimi/dsi/fastutil/doubles/DoubleList;IIIIII)V	a	lambda$forAllBoxes$2
		p	4		minX
		p	5		minY
		p	6		minZ
		p	7		maxX
		p	8		maxY
		p	9		maxZ
	m	(Lgu;Lehi;D)D	a	collideX
		p	1		axisCycle
		p	2		box
		p	3		maxDist
	m	(Lha$a;)Lit/unimi/dsi/fastutil/doubles/DoubleList;	a	getCoords
		p	1		axis
	m	(Lha$a;D)I	a	findIndex
		p	1		axis
		p	2		coord
	m	(Lha$a;DD)D	a	min
		p	1		axis
		p	2		from
		p	4		to
	m	(Lha$a;I)D	a	get
		p	1		axis
		p	2		index
	m	(Lha$a;Lehi;D)D	a	collide
		p	1		axis
		p	2		box
		p	3		maxDist
	m	(Lha;)Leig;	a	getFaceShape
		p	1		facing
	m	(Ljava/util/List;DDDDDD)V	a	lambda$toAabbs$3
		p	1		x1
		p	3		y1
		p	5		z1
		p	7		x2
		p	9		y2
		p	11		z2
	m	([Leig;DDDDDD)V	a	lambda$optimize$0
		p	1		minX
		p	3		minY
		p	5		minZ
		p	7		maxX
		p	9		maxY
		p	11		maxZ
	m	()Leig;	b	singleEncompassing
	m	(Leid$a;)V	b	forAllBoxes
		p	1		consumer
	m	(Lha$a;)D	b	min
		p	1		axis
	m	(Lha$a;DD)D	b	max
		p	1		axis
		p	2		from
		p	4		to
	m	(Lha;)Leig;	b	calculateFace
		p	1		direction
	m	()Z	c	isEmpty
	m	(Lha$a;)D	c	max
		p	1		axis
	m	()Leig;	d	optimize
	m	()Ljava/util/List;	e	toAabbs
	f	Lehw;	a	shape
	f	[Leig;	b	faces
c	eih	net/minecraft/world/phys/shapes/package-info
c	eii	net/minecraft/world/scores/DisplaySlot
	m	(Ljava/lang/String;IILjava/lang/String;)V	<init>	<init>
		p	3		id
		p	4		name
	m	()I	a	id
	m	(Ln;)Leii;	a	teamColorToSlot
		p	0		formatting
	m	()[Leii;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Leii;	a	LIST
	f	Leii;	b	SIDEBAR
	f	Leii;	c	BELOW_NAME
	f	Leii;	d	TEAM_BLACK
	f	Leii;	e	TEAM_DARK_BLUE
	f	Leii;	f	TEAM_DARK_GREEN
	f	Leii;	g	TEAM_DARK_AQUA
	f	Leii;	h	TEAM_DARK_RED
	f	Leii;	i	TEAM_DARK_PURPLE
	f	Leii;	j	TEAM_GOLD
	f	Leii;	k	TEAM_GRAY
	f	Leii;	l	TEAM_DARK_GRAY
	f	Leii;	m	TEAM_BLUE
	f	Leii;	n	TEAM_GREEN
	f	Leii;	o	TEAM_AQUA
	f	Leii;	p	TEAM_RED
	f	Leii;	q	TEAM_LIGHT_PURPLE
	f	Leii;	r	TEAM_YELLOW
	f	Leii;	s	TEAM_WHITE
	f	Lasp$a;	t	CODEC
	f	Ljava/util/function/IntFunction;	u	BY_ID
	f	I	v	id
	f	Ljava/lang/String;	w	name
	f	[Leii;	x	$VALUES
c	eii$1	net/minecraft/world/scores/DisplaySlot$1
	f	[I	a	$SwitchMap$net$minecraft$ChatFormatting
c	eij	net/minecraft/world/scores/Objective
	m	(Leim;Ljava/lang/String;Leip;Ltl;Leip$a;)V	<init>	<init>
		p	1		scoreboard
		p	2		name
		p	3		criterion
		p	4		displayName
		p	5		renderType
	m	()Leim;	a	getScoreboard
	m	(Leip$a;)V	a	setRenderType
		p	1		renderType
	m	(Ltl;)V	a	setDisplayName
		p	1		name
	m	(Luh;)Luh;	a	lambda$createFormattedDisplayName$0
		p	1		style
	m	()Ljava/lang/String;	b	getName
	m	()Leip;	c	getCriteria
	m	()Ltl;	d	getDisplayName
	m	()Ltl;	e	getFormattedDisplayName
	m	()Leip$a;	f	getRenderType
	m	()Ltl;	g	createFormattedDisplayName
	f	Leim;	a	scoreboard
	f	Ljava/lang/String;	b	name
	f	Leip;	c	criteria
	f	Ltl;	d	displayName
	f	Ltl;	e	formattedDisplayName
	f	Leip$a;	f	renderType
c	eik	net/minecraft/world/scores/PlayerTeam
	m	(Leim;Ljava/lang/String;)V	<init>	<init>
		p	1		scoreboard
		p	2		name
	m	()Leim;	a	getScoreboard
	m	(I)V	a	unpackOptions
		p	1		flags
	m	(Leio$a;)V	a	setCollisionRule
		p	1		collisionRule
	m	(Leio$b;)V	a	setNameTagVisibility
		p	1		nameTagVisibilityRule
	m	(Leio;Ltl;)Lty;	a	formatNameForTeam
		p	0		team
		p	1		name
	m	(Ln;)V	a	setColor
		p	1		color
	m	(Ltl;)V	a	setDisplayName
		p	1		displayName
	m	(Z)V	a	setAllowFriendlyFire
		p	1		friendlyFire
	m	()Ljava/lang/String;	b	getName
	m	(Leio$b;)V	b	setDeathMessageVisibility
		p	1		deathMessageVisibilityRule
	m	(Ltl;)V	b	setPlayerPrefix
		p	1		prefix
	m	(Z)V	b	setSeeFriendlyInvisibles
		p	1		showFriendlyInvisible
	m	()Ltl;	c	getDisplayName
	m	(Ltl;)V	c	setPlayerSuffix
		p	1		suffix
	m	()Lty;	d	getFormattedDisplayName
	m	(Ltl;)Lty;	d	getFormattedName
		p	1		name
	m	()Ltl;	e	getPlayerPrefix
	m	()Ltl;	f	getPlayerSuffix
	m	()Ljava/util/Collection;	g	getPlayers
	m	()Z	h	isAllowFriendlyFire
	m	()Z	i	canSeeFriendlyInvisibles
	m	()Leio$b;	j	getNameTagVisibility
	m	()Leio$b;	k	getDeathMessageVisibility
	m	()Leio$a;	l	getCollisionRule
	m	()I	m	packOptions
	m	()Ln;	n	getColor
	f	I	a	BIT_FRIENDLY_FIRE
	f	I	b	BIT_SEE_INVISIBLES
	f	Leim;	c	scoreboard
	f	Ljava/lang/String;	d	name
	f	Ljava/util/Set;	e	players
	f	Ltl;	f	displayName
	f	Ltl;	g	playerPrefix
	f	Ltl;	h	playerSuffix
	f	Z	i	allowFriendlyFire
	f	Z	j	seeFriendlyInvisibles
	f	Leio$b;	k	nameTagVisibility
	f	Leio$b;	l	deathMessageVisibility
	f	Ln;	m	color
	f	Leio$a;	n	collisionRule
	f	Luh;	o	displayNameStyle
c	eil	net/minecraft/world/scores/Score
	m	(Leim;Leij;Ljava/lang/String;)V	<init>	<init>
		p	1		scoreboard
		p	2		objective
		p	3		playerName
	m	()V	a	increment
	m	(I)V	a	add
		p	1		amount
	m	(Leil;Leil;)I	a	lambda$static$0
		p	0		a
		p	1		b
	m	(Z)V	a	setLocked
		p	1		locked
	m	()I	b	getScore
	m	(I)V	b	setScore
		p	1		score
	m	()V	c	reset
	m	()Leij;	d	getObjective
	m	()Ljava/lang/String;	e	getOwner
	m	()Leim;	f	getScoreboard
	m	()Z	g	isLocked
	f	Ljava/util/Comparator;	a	SCORE_COMPARATOR
	f	Leim;	b	scoreboard
	f	Leij;	c	objective
	f	Ljava/lang/String;	d	owner
	f	I	e	count
	f	Z	f	locked
	f	Z	g	forceUpdate
c	eim	net/minecraft/world/scores/Scoreboard
	m	(Lbiq;)V	a	entityRemoved
		p	1		entity
	m	(Leii;)Leij;	a	getDisplayObjective
		p	1		slot
	m	(Leii;Leij;)V	a	setDisplayObjective
		p	1		slot
		p	2		objective
	m	(Leij;)V	a	onObjectiveAdded
		p	1		objective
	m	(Leik;)V	a	onTeamAdded
		p	1		team
	m	(Leil;)V	a	onScoreChanged
		p	1		score
	m	(Leip;)Ljava/util/List;	a	lambda$addObjective$0
		p	0		criterionx
	m	(Leip;Ljava/lang/String;Ljava/util/function/Consumer;)V	a	forAllObjectives
		p	1		criterion
		p	2		player
		p	3		action
	m	(Ljava/lang/String;)V	a	onPlayerRemoved
		p	1		playerName
	m	(Ljava/lang/String;Leij;)V	a	onPlayerScoreRemoved
		p	1		playerName
		p	2		objective
	m	(Ljava/lang/String;Leik;)Z	a	addPlayerToTeam
		p	1		playerName
		p	2		team
	m	(Ljava/lang/String;Leip;Ltl;Leip$a;)Leij;	a	addObjective
		p	1		name
		p	2		criterion
		p	3		displayName
		p	4		renderType
	m	(Ljava/util/function/Consumer;Ljava/lang/String;Leij;)V	a	lambda$forAllObjectives$1
		p	3		objective
	m	(Lrc;)V	a	loadPlayerScores
		p	1		list
	m	(Lrc;Leil;)V	a	lambda$savePlayerScores$4
		p	1		score
	m	(Lrc;Ljava/util/Collection;)V	a	lambda$savePlayerScores$5
		p	1		scores
	m	(Leij;)V	b	onObjectiveChanged
		p	1		objective
	m	(Leik;)V	b	onTeamChanged
		p	1		team
	m	(Ljava/lang/String;)Leij;	b	getObjective
		p	1		name
	m	(Ljava/lang/String;Leij;)Z	b	hasPlayerScore
		p	1		playerName
		p	2		objective
	m	(Ljava/lang/String;Leik;)V	b	removePlayerFromTeam
		p	1		playerName
		p	2		team
	m	()Ljava/util/Collection;	c	getObjectives
	m	(Leij;)V	c	onObjectiveRemoved
		p	1		objective
	m	(Leik;)V	c	onTeamRemoved
		p	1		team
	m	(Ljava/lang/String;)Ljava/util/Map;	c	getPlayerScores
		p	1		playerName
	m	(Ljava/lang/String;Leij;)Leil;	c	getOrCreatePlayerScore
		p	1		playerName
		p	2		objective
	m	()Ljava/util/Collection;	d	getObjectiveNames
	m	(Leik;)V	d	removePlayerTeam
		p	1		team
	m	(Ljava/lang/String;)Leik;	d	getPlayerTeam
		p	1		name
	m	(Ljava/lang/String;Leij;)V	d	resetPlayerScore
		p	1		playerName
		p	2		objective
	m	()Ljava/util/Collection;	e	getTrackedPlayers
	m	(Ljava/lang/String;)Leik;	e	addPlayerTeam
		p	1		name
	m	(Ljava/lang/String;Leij;)Leil;	e	lambda$getOrCreatePlayerScore$3
		p	2		objectivex
	m	()Ljava/util/Collection;	f	getTeamNames
	m	(Ljava/lang/String;)Z	f	removePlayerFromTeam
		p	1		playerName
	m	()Ljava/util/Collection;	g	getPlayerTeams
	m	(Ljava/lang/String;)Leik;	g	getPlayersTeam
		p	1		playerName
	m	()Lrc;	h	savePlayerScores
	m	(Ljava/lang/String;)Ljava/util/Map;	h	lambda$getOrCreatePlayerScore$2
		p	0		name
	m	(Leij;)Ljava/util/Collection;	i	getPlayerScores
		p	1		objective
	m	(Leij;)V	j	removeObjective
		p	1		objective
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/Map;	b	objectivesByName
	f	Ljava/util/Map;	c	objectivesByCriteria
	f	Ljava/util/Map;	d	playerScores
	f	Ljava/util/Map;	e	displayObjectives
	f	Ljava/util/Map;	f	teamsByName
	f	Ljava/util/Map;	g	teamsByPlayer
c	ein	net/minecraft/world/scores/ScoreboardSaveData
	m	(Leim;)V	<init>	<init>
		p	1		scoreboard
	m	()Lrc;	a	saveTeams
	m	(Leik;Lrc;)V	a	loadTeamPlayers
		p	1		team
		p	2		nbt
	m	(Ljava/lang/String;)Leip;	a	lambda$loadObjectives$0
	m	(Lqw;)Lqw;	a	save
		p	1		nbt
	m	(Lrc;)V	a	loadTeams
		p	1		nbt
	m	()Lrc;	b	saveObjectives
	m	(Lqw;)Lein;	b	load
		p	1		nbt
	m	(Lrc;)V	b	loadObjectives
		p	1		nbt
	m	(Lqw;)V	c	loadDisplaySlots
		p	1		nbt
	m	(Lqw;)V	d	saveDisplaySlots
		p	1		nbt
	f	Ljava/lang/String;	a	FILE_ID
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Leim;	c	scoreboard
c	eio	net/minecraft/world/scores/Team
	m	(Leio;)Z	a	isAlliedTo
		p	1		team
	m	()Ljava/lang/String;	b	getName
	m	(Ltl;)Lty;	d	getFormattedName
		p	1		name
	m	()Ljava/util/Collection;	g	getPlayers
	m	()Z	h	isAllowFriendlyFire
	m	()Z	i	canSeeFriendlyInvisibles
	m	()Leio$b;	j	getNameTagVisibility
	m	()Leio$b;	k	getDeathMessageVisibility
	m	()Leio$a;	l	getCollisionRule
	m	()Ln;	n	getColor
c	eio$a	net/minecraft/world/scores/Team$CollisionRule
	m	(Ljava/lang/String;ILjava/lang/String;I)V	<init>	<init>
		p	3		name
		p	4		value
	m	()Ltl;	a	getDisplayName
	m	(Leio$a;)Leio$a;	a	lambda$static$1
	m	(Ljava/lang/String;)Leio$a;	a	byName
		p	0		name
	m	()[Leio$a;	b	$values
	m	(Leio$a;)Ljava/lang/String;	b	lambda$static$0
		p	0		collisionRule
	f	Leio$a;	a	ALWAYS
	f	Leio$a;	b	NEVER
	f	Leio$a;	c	PUSH_OTHER_TEAMS
	f	Leio$a;	d	PUSH_OWN_TEAM
	f	Ljava/lang/String;	e	name
	f	I	f	id
	f	Ljava/util/Map;	g	BY_NAME
	f	[Leio$a;	h	$VALUES
c	eio$b	net/minecraft/world/scores/Team$Visibility
	m	(Ljava/lang/String;ILjava/lang/String;I)V	<init>	<init>
		p	3		name
		p	4		value
	m	()[Ljava/lang/String;	a	getAllNames
	m	(Leio$b;)Leio$b;	a	lambda$static$1
	m	(Ljava/lang/String;)Leio$b;	a	byName
		p	0		name
	m	()Ltl;	b	getDisplayName
	m	(Leio$b;)Ljava/lang/String;	b	lambda$static$0
		p	0		visibilityRule
	m	()[Leio$b;	c	$values
	f	Leio$b;	a	ALWAYS
	f	Leio$b;	b	NEVER
	f	Leio$b;	c	HIDE_FOR_OTHER_TEAMS
	f	Leio$b;	d	HIDE_FOR_OWN_TEAM
	f	Ljava/lang/String;	e	name
	f	I	f	id
	f	Ljava/util/Map;	g	BY_NAME
	f	[Leio$b;	h	$VALUES
c	eip	net/minecraft/world/scores/criteria/ObjectiveCriteria
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		name
	m	(Ljava/lang/String;ZLeip$a;)V	<init>	<init>
		p	1		name
		p	2		readOnly
		p	3		defaultRenderType
	m	(Lapm;Laew;)Ljava/util/Optional;	a	getStat
		p	0		statType
		p	1		id
	m	(Ljava/lang/String;)Ljava/util/Optional;	a	byName
		p	0		name
	m	(Ljava/lang/String;ILapm;)Ljava/util/Optional;	a	lambda$byName$0
		p	2		type
	m	(Ljava/lang/String;ZLeip$a;)Leip;	a	registerCustom
		p	0		name
		p	1		readOnly
		p	2		defaultRenderType
	m	(Ljava/lang/String;)Leip;	b	registerCustom
		p	0		name
	m	()Ljava/util/Set;	c	getCustomCriteriaNames
	m	()Ljava/lang/String;	d	getName
	m	()Z	e	isReadOnly
	m	()Leip$a;	f	getDefaultRenderType
	f	Leip;	a	DUMMY
	f	Leip;	b	TRIGGER
	f	Leip;	c	DEATH_COUNT
	f	Leip;	d	KILL_COUNT_PLAYERS
	f	Leip;	e	KILL_COUNT_ALL
	f	Leip;	f	HEALTH
	f	Leip;	g	FOOD
	f	Leip;	h	AIR
	f	Leip;	i	ARMOR
	f	Leip;	j	EXPERIENCE
	f	Leip;	k	LEVEL
	f	[Leip;	l	TEAM_KILL
	f	[Leip;	m	KILLED_BY_TEAM
	f	Ljava/util/Map;	n	CUSTOM_CRITERIA
	f	Ljava/util/Map;	o	CRITERIA_CACHE
	f	Ljava/lang/String;	p	name
	f	Z	q	readOnly
	f	Leip$a;	r	renderType
c	eip$a	net/minecraft/world/scores/criteria/ObjectiveCriteria$RenderType
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()Ljava/lang/String;	a	getId
	m	(Ljava/lang/String;)Leip$a;	a	byId
		p	0		name
	m	()[Leip$a;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Leip$a;	a	INTEGER
	f	Leip$a;	b	HEARTS
	f	Lasp$a;	c	CODEC
	f	Ljava/lang/String;	d	id
	f	[Leip$a;	e	$VALUES
c	eiq	net/minecraft/world/scores/criteria/package-info
c	eir	net/minecraft/world/scores/package-info
c	eis	net/minecraft/world/ticks/BlackholeTickAccess
	m	()Lejc;	a	emptyContainer
	m	()Leiv;	b	emptyLevelList
	f	Lejc;	a	CONTAINER_BLACKHOLE
	f	Leiv;	b	LEVEL_BLACKHOLE
c	eis$1	net/minecraft/world/ticks/BlackholeTickAccess$1
	m	()I	a	count
	m	(Leiz;)V	a	schedule
		p	1		orderedTick
	m	(Lgw;Ljava/lang/Object;)Z	a	hasScheduledTick
		p	1		pos
		p	2		type
c	eis$2	net/minecraft/world/ticks/BlackholeTickAccess$2
	m	()I	a	count
	m	(Leiz;)V	a	schedule
		p	1		orderedTick
	m	(Lgw;Ljava/lang/Object;)Z	a	hasScheduledTick
		p	1		pos
		p	2		type
	m	(Lgw;Ljava/lang/Object;)Z	b	willTickThisTick
		p	1		pos
		p	2		type
c	eit	net/minecraft/world/ticks/ContainerSingleItem
	m	()V	a	clearContent
	m	()Z	af_	isEmpty
	m	()Lcjf;	av_	getFirstItem
	m	()I	b	getContainerSize
	m	(I)Lcjf;	b	removeItemNoUpdate
		p	1		slot
	m	(Lcjf;)V	b	setFirstItem
		p	1		stack
	m	()Lcjf;	j	removeFirstItem
c	eiu	net/minecraft/world/ticks/LevelChunkTicks
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		ticks
	m	()I	a	count
	m	(J)V	a	unpack
		p	1		time
	m	(JLjava/util/function/Function;)Lrc;	a	save
	m	(Leiz;)V	a	schedule
		p	1		orderedTick
	m	(Lgw;Ljava/lang/Object;)Z	a	hasScheduledTick
		p	1		pos
		p	2		type
	m	(Ljava/util/function/BiConsumer;)V	a	setOnTickAdded
		p	1		tickConsumer
	m	(Ljava/util/function/Predicate;)V	a	removeIf
		p	1		predicate
	m	(Lrc;Ljava/util/function/Function;Lcpc;)Leiu;	a	load
		p	0		tickQueue
		p	1		nameToTypeFunction
		p	2		pos
	m	()Leiz;	b	peek
	m	(JLjava/util/function/Function;)Lrq;	b	save
		p	1		time
		p	3		typeToNameFunction
	m	(Leiz;)V	b	scheduleUnchecked
		p	1		orderedTick
	m	()Leiz;	c	poll
	m	()Ljava/util/stream/Stream;	d	getAll
	f	Ljava/util/Queue;	a	tickQueue
	f	Ljava/util/List;	b	pendingTicks
	f	Ljava/util/Set;	c	ticksPerPosition
	f	Ljava/util/function/BiConsumer;	d	onTickAdded
c	eiv	net/minecraft/world/ticks/LevelTickAccess
	m	(Lgw;Ljava/lang/Object;)Z	b	willTickThisTick
		p	1		pos
		p	2		type
c	eiw	net/minecraft/world/ticks/LevelTicks
	m	(Ljava/util/function/LongPredicate;Ljava/util/function/Supplier;)V	<init>	<init>
		p	1		tickingFutureReadyPredicate
		p	2		profilerGetter
	m	()I	a	count
	m	(I)Z	a	canScheduleMoreTicks
		p	1		maxTicks
	m	(J)V	a	sortContainersToTick
		p	1		time
	m	(JI)V	a	drainContainers
		p	1		time
		p	3		maxTicks
	m	(JILbdp;)V	a	collectTicks
		p	1		time
		p	3		maxTicks
		p	4		profiler
	m	(JILjava/util/function/BiConsumer;)V	a	tick
		p	1		time
		p	3		maxTicks
		p	4		ticker
	m	(Lcpc;)V	a	removeContainer
		p	1		pos
	m	(Lcpc;Leiu;)V	a	addContainer
		p	1		pos
		p	2		scheduler
	m	(Ldva;)V	a	clearArea
		p	1		box
	m	(Ldva;Leiw$a;)V	a	forContainersInArea
		p	1		box
		p	2		visitor
	m	(Ldva;Leiz;)Z	a	lambda$copyAreaFrom$5
		p	1		tick
	m	(Ldva;Lhy;)V	a	copyArea
		p	1		box
		p	2		offset
	m	(Leiu;Leiu;)I	a	lambda$static$0
		p	0		a
		p	1		b
	m	(Leiu;Leiz;)V	a	lambda$new$2
		p	1		chunkTickScheduler
		p	2		tick
	m	(Leiw;Ldva;Lhy;)V	a	copyAreaFrom
		p	1		scheduler
		p	2		box
		p	3		offset
	m	(Leiz;)V	a	schedule
		p	1		orderedTick
	m	(Lgw;Ljava/lang/Object;)Z	a	hasScheduledTick
		p	1		pos
		p	2		type
	m	(Lhy;JJLeiz;)V	a	lambda$copyAreaFrom$7
		p	6		tick
	m	(Lit/unimi/dsi/fastutil/longs/Long2LongOpenHashMap;)V	a	lambda$new$1
		p	0		map
	m	(Ljava/util/Queue;Leiu;JI)V	a	drainFromCurrentContainer
		p	1		tickableChunkTickSchedulers
		p	2		chunkTickScheduler
		p	3		tick
		p	5		maxTicks
	m	(Ljava/util/function/BiConsumer;)V	a	runCollectedTicks
		p	1		ticker
	m	(Ljava/util/function/Predicate;JLeiu;)V	a	lambda$clearArea$4
		p	2		chunkPos
		p	4		chunkTickScheduler
	m	(Ljava/util/function/Predicate;Ljava/util/List;JLeiu;)V	a	lambda$copyAreaFrom$6
		p	2		chunkPos
		p	4		chunkTickScheduler
	m	()V	b	rescheduleLeftoverContainers
	m	(Ldva;Leiz;)Z	b	lambda$clearArea$3
		p	1		tick
	m	(Leiz;)V	b	updateContainerScheduling
		p	1		tick
	m	(Lgw;Ljava/lang/Object;)Z	b	willTickThisTick
		p	1		pos
		p	2		type
	m	()V	c	cleanupAfterTick
	m	(Leiz;)V	c	scheduleForThisTick
		p	1		tick
	m	()V	d	calculateTickSetIfNeeded
	f	Ljava/util/Comparator;	a	CONTAINER_DRAIN_ORDER
	f	Ljava/util/function/LongPredicate;	b	tickCheck
	f	Ljava/util/function/Supplier;	c	profiler
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	d	allContainers
	f	Lit/unimi/dsi/fastutil/longs/Long2LongMap;	e	nextTickForContainer
	f	Ljava/util/Queue;	f	containersToTick
	f	Ljava/util/Queue;	g	toRunThisTick
	f	Ljava/util/List;	h	alreadyRunThisTick
	f	Ljava/util/Set;	i	toRunThisTickSet
	f	Ljava/util/function/BiConsumer;	j	chunkScheduleUpdater
c	eiw$a	net/minecraft/world/ticks/LevelTicks$PosAndContainerConsumer
	m	(JLeiu;)V	accept	accept
		p	1		chunkPos
		p	3		chunkTickScheduler
c	eix	net/minecraft/world/ticks/ProtoChunkTicks
	m	()I	a	count
	m	(Leiy;)V	a	schedule
		p	1		tick
	m	(Leiz;)V	a	schedule
		p	1		orderedTick
	m	(Lgw;Ljava/lang/Object;)Z	a	hasScheduledTick
		p	1		pos
		p	2		type
	m	(Lrc;Ljava/util/function/Function;Lcpc;)Leix;	a	load
		p	0		tickList
		p	1		typeToNameFunction
		p	2		pos
	m	()Ljava/util/List;	b	scheduledTicks
	m	(JLjava/util/function/Function;)Lrq;	b	save
		p	1		time
		p	3		typeToNameFunction
	f	Ljava/util/List;	a	ticks
	f	Ljava/util/Set;	b	ticksPerPosition
c	eiy	net/minecraft/world/ticks/SavedTick
	m	()Ljava/lang/Object;	a	type
	m	(JJ)Leiz;	a	unpack
		p	1		time
		p	3		subTickOrder
	m	(JLjava/util/function/Consumer;Leiy;)V	a	lambda$loadTickList$0
		p	3		tick
	m	(Leiz;Ljava/util/function/Function;J)Lqw;	a	saveTick
		p	0		orderedTick
		p	1		typeToNameFunction
		p	2		delay
	m	(Ljava/lang/Object;Lgw;)Leiy;	a	probe
		p	0		type
		p	1		pos
	m	(Ljava/lang/String;Lgw;ILejd;)Lqw;	a	saveTick
		p	0		type
		p	1		pos
		p	2		delay
		p	3		priority
	m	(Ljava/util/function/Function;)Lqw;	a	save
		p	1		typeToNameFunction
	m	(Lqw;Ljava/lang/Object;)Leiy;	a	lambda$loadTick$1
		p	1		type
	m	(Lqw;Ljava/util/function/Function;)Ljava/util/Optional;	a	loadTick
		p	0		nbt
		p	1		nameToType
	m	(Lrc;Ljava/util/function/Function;Lcpc;Ljava/util/function/Consumer;)V	a	loadTickList
		p	0		tickList
		p	1		nameToTypeFunction
		p	2		pos
		p	3		tickConsumer
	m	()Lgw;	b	pos
	m	()I	c	delay
	m	()Lejd;	d	priority
	f	Lit/unimi/dsi/fastutil/Hash$Strategy;	a	UNIQUE_TICK_HASH
	f	Ljava/lang/Object;	b	type
	f	Lgw;	c	pos
	f	I	d	delay
	f	Lejd;	e	priority
	f	Ljava/lang/String;	f	TAG_ID
	f	Ljava/lang/String;	g	TAG_X
	f	Ljava/lang/String;	h	TAG_Y
	f	Ljava/lang/String;	i	TAG_Z
	f	Ljava/lang/String;	j	TAG_DELAY
	f	Ljava/lang/String;	k	TAG_PRIORITY
c	eiy$1	net/minecraft/world/ticks/SavedTick$1
	m	(Leiy;)I	a	hashCode
	m	(Leiy;Leiy;)Z	a	equals
c	eiz	net/minecraft/world/ticks/ScheduledTick
	m	(Ljava/lang/Object;Lgw;JJ)V	<init>	<init>
		p	1		type
		p	2		pos
		p	3		triggerTick
		p	5		subTickOrder
	m	()Ljava/lang/Object;	a	type
	m	(Leiz;Leiz;)I	a	lambda$static$1
		p	0		first
		p	1		second
	m	(Ljava/lang/Object;Lgw;)Leiz;	a	probe
		p	0		type
		p	1		pos
	m	()Lgw;	b	pos
	m	(Leiz;Leiz;)I	b	lambda$static$0
		p	0		first
		p	1		second
	m	()J	c	triggerTick
	m	()Lejd;	d	priority
	m	()J	e	subTickOrder
	f	Ljava/util/Comparator;	a	DRAIN_ORDER
	f	Ljava/util/Comparator;	b	INTRA_TICK_DRAIN_ORDER
	f	Lit/unimi/dsi/fastutil/Hash$Strategy;	c	UNIQUE_TICK_HASH
	f	Ljava/lang/Object;	d	type
	f	Lgw;	e	pos
	f	J	f	triggerTick
	f	Lejd;	g	priority
	f	J	h	subTickOrder
c	eiz$1	net/minecraft/world/ticks/ScheduledTick$1
	m	(Leiz;)I	a	hashCode
	m	(Leiz;Leiz;)Z	a	equals
c	eja	net/minecraft/world/ticks/SerializableTickContainer
	m	(JLjava/util/function/Function;)Lrq;	b	save
		p	1		time
		p	3		typeToNameFunction
c	ejb	net/minecraft/world/ticks/TickAccess
	m	()I	a	count
	m	(Leiz;)V	a	schedule
		p	1		orderedTick
	m	(Lgw;Ljava/lang/Object;)Z	a	hasScheduledTick
		p	1		pos
		p	2		type
c	ejc	net/minecraft/world/ticks/TickContainerAccess
c	ejd	net/minecraft/world/ticks/TickPriority
	m	(Ljava/lang/String;II)V	<init>	<init>
		p	3		index
	m	()I	a	getValue
	m	(I)Lejd;	a	byValue
		p	0		index
	m	()[Lejd;	b	$values
	f	Lejd;	a	EXTREMELY_HIGH
	f	Lejd;	b	VERY_HIGH
	f	Lejd;	c	HIGH
	f	Lejd;	d	NORMAL
	f	Lejd;	e	LOW
	f	Lejd;	f	VERY_LOW
	f	Lejd;	g	EXTREMELY_LOW
	f	I	h	value
	f	[Lejd;	i	$VALUES
c	eje	net/minecraft/world/ticks/WorldGenTickAccess
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1		mapper
	m	()I	a	count
	m	(Leiz;)V	a	schedule
		p	1		orderedTick
	m	(Lgw;Ljava/lang/Object;)Z	a	hasScheduledTick
		p	1		pos
		p	2		type
	m	(Lgw;Ljava/lang/Object;)Z	b	willTickThisTick
		p	1		pos
		p	2		type
	f	Ljava/util/function/Function;	a	containerGetter
c	ejf	net/minecraft/world/ticks/package-info
c	net/minecraft/data/Main	net/minecraft/data/Main
	m	(Ljava/lang/String;)Ljava/nio/file/Path;	a	lambda$main$0
		p	0		input
	m	(Ljava/nio/file/Path;Ljava/util/Collection;ZZZZZLad;Z)Ljh;	a	createStandardGenerator
		p	0		output
		p	1		inputs
		p	2		includeClient
		p	3		includeServer
		p	4		includeDev
		p	5		includeReports
		p	6		validate
		p	7		gameVersion
		p	8		ignoreCache
	m	(Ljava/util/Collection;Ljk;)Lmj;	a	lambda$createStandardGenerator$4
		p	1		outputx
	m	(Ljava/util/concurrent/CompletableFuture;Lnc;Ljk;)Lnf;	a	lambda$createStandardGenerator$3
		p	2		outputx
	m	(Ljava/util/function/BiFunction;Ljava/util/concurrent/CompletableFuture;)Lji$a;	a	bindRegistries
		p	0		baseFactory
		p	1		registryLookupFuture
	m	(Ljava/util/function/BiFunction;Ljava/util/concurrent/CompletableFuture;Ljk;)Lji;	a	lambda$bindRegistries$1
		p	2		output
	m	(Ljk;)Lkq;	a	lambda$createStandardGenerator$6
		p	0		outputx
	m	(Ljava/util/Collection;Ljk;)Lml;	b	lambda$createStandardGenerator$2
		p	1		outputx
	m	(Ljk;)Lkq;	b	lambda$createStandardGenerator$5
		p	0		outputx
	m	([Ljava/lang/String;)V	main	main
		p	0		args
c	net/minecraft/server/Main	net/minecraft/server/Main
	m	()Z	a	lambda$main$2
	m	(Lafq$c;Lecg$c;Ljoptsimple/OptionSet;Ljoptsimple/OptionSpec;Lajp;Ljoptsimple/OptionSpec;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	lambda$main$1
		p	6		applyExecutor
	m	(Lajo;Lecg$c;ZLane;)Lafq$c;	a	loadOrCreateConfig
		p	0		serverPropertiesHandler
		p	1		session
		p	2		safeMode
		p	3		dataPackManager
	m	(Lecg$c;Lane;Lafr;Lajp;Lafo;Ljoptsimple/OptionSet;Ljoptsimple/OptionSpec;Ljoptsimple/OptionSpec;Ljoptsimple/OptionSpec;Ljoptsimple/OptionSpec;Ljoptsimple/OptionSpec;Ljava/lang/Thread;)Lajn;	a	lambda$main$3
	m	(Lecg$c;Lcom/mojang/datafixers/DataFixer;ZLjava/util/function/BooleanSupplier;Lhq;)V	a	forceUpgrade
		p	0		session
		p	1		dataFixer
		p	2		eraseCache
		p	3		continueCheck
		p	4		dimensionOptionsRegistry
	m	(Lecg$c;Ljoptsimple/OptionSet;Ljoptsimple/OptionSpec;Lajp;Ljoptsimple/OptionSpec;Lafq$a;)Lafq$b;	a	lambda$main$0
		p	5		context
	m	(Ljava/nio/file/Path;)V	a	writePidFile
		p	0		path
	m	([Ljava/lang/String;)V	main	main
		p	0		args
	f	Lorg/slf4j/Logger;	a	LOGGER
c	net/minecraft/server/Main$1	net/minecraft/server/Main$1
	f	Lajn;	a	val$dedicatedServer
c	net/minecraft/server/MinecraftServer	net/minecraft/server/MinecraftServer
	m	(Ljava/lang/Thread;Lecg$c;Lane;Lafr;Ljava/net/Proxy;Lcom/mojang/datafixers/DataFixer;Lafo;Lala;)V	<init>	<init>
		p	1		serverThread
		p	2		session
		p	3		dataPackManager
		p	4		saveLoader
		p	5		proxy
		p	6		dataFixer
		p	7		apiServices
		p	8		worldGenerationProgressListenerFactory
	m	()V	A	forceTimeSynchronization
	m	()Z	B	isNetherEnabled
	m	()Z	C	isShutdown
	m	()Lakq;	D	overworld
	m	()Ljava/util/Set;	E	levelKeys
	m	()Ljava/lang/Iterable;	F	getAllLevels
	m	()Ljava/lang/String;	G	getServerVersion
	m	()I	H	getPlayerCount
	m	()I	I	getMaxPlayers
	m	()[Ljava/lang/String;	J	getPlayerNames
	m	()Larv;	K	getModdedStatus
	m	()Ljava/security/KeyPair;	L	getKeyPair
	m	()I	M	getPort
	m	()Lcom/mojang/authlib/GameProfile;	N	getSingleplayerProfile
	m	()Z	O	isSingleplayer
	m	()V	P	initializeKeyPair
	m	()Z	Q	isSpawningMonsters
	m	()Z	R	isDemo
	m	()Ljava/util/Optional;	S	getServerResourcePack
	m	()Z	T	isResourcePackRequired
	m	()Z	T_	shouldInformAdmins
	m	()Z	U	usesAuthentication
	m	()Z	V	getPreventProxyConnections
	m	()Z	W	isSpawningAnimals
	m	()Z	X	areNpcsEnabled
	m	()Z	Y	isPvpAllowed
	m	()Z	Z	isFlightAllowed
	m	(I)V	a	setPort
		p	1		serverPort
	m	(J)V	a	logTickTime
		p	1		nanos
	m	(Lab;)Lab;	a	fillServerSystemReport
		p	1		details
	m	(Laev;)Lakq;	a	getLevel
		p	1		key
	m	(Lafp;)Z	a	shouldRun
	m	(Lakq;)I	a	getSpawnRadius
		p	1		world
	m	(Lakq;Lako;Lecl;Lhe$c;)V	a	lambda$setInitialSpawn$5
		p	3		feature
	m	(Lakq;Lecl;ZZ)V	a	setInitialSpawn
		p	0		world
		p	1		worldProperties
		p	2		bonusChest
		p	3		debugWorld
	m	(Lakq;Lgw;Lcbu;)Z	a	isUnderSpawnProtection
		p	1		world
		p	2		pos
		p	3		player
	m	(Lakr;)Lalu;	a	createTextFilterForPlayer
		p	1		player
	m	(Lakz;)V	a	createLevels
		p	1		worldGenerationProgressListener
	m	(Lanb;)Ljava/lang/String;	a	lambda$fillSystemReport$17
		p	0		profile
	m	(Lane;)Lcpj;	a	getSelectedPacks
		p	0		dataPackManager
	m	(Lane;Lcpj;ZLcec;)Lcqo;	a	configurePackRepository
		p	0		resourcePackManager
		p	1		dataPackSettings
		p	2		safeMode
		p	3		enabledFeatures
	m	(Lanj;Lafg;)Lnet/minecraft/server/MinecraftServer$a;	a	lambda$reloadResources$24
		p	1		dataPackContents
	m	(Lanj;Lafg;Ljava/lang/Throwable;)V	a	lambda$reloadResources$23
		p	1		dataPackContents
		p	2		throwable
	m	(Laog;)V	a	setPlayerList
		p	1		playerManager
	m	(Larx$a;)Ljava/lang/String;	a	lambda$dumpNativeModules$28
		p	0		module
	m	(Lbdo;)V	a	lambda$new$0
		p	1		profileResult
	m	(Lbgv;Z)V	a	setDifficulty
		p	1		difficulty
		p	2		forceUpdate
	m	(Lcom/mojang/authlib/GameProfile;)Z	a	isSingleplayerOwner
		p	1		profile
	m	(Lcps;)V	a	setDefaultGameType
		p	1		gameMode
	m	(Lcps;ZI)Z	a	publishServer
		p	1		gameMode
		p	2		cheatsAllowed
		p	3		port
	m	(Ldt;)V	a	kickUnlistedPlayers
		p	1		source
	m	(Lecc;)V	a	readScoreboard
		p	1		persistentStateManager
	m	(Lece;)Ljava/nio/file/Path;	a	getWorldPath
		p	1		worldSavePath
	m	(Lecm;)V	a	setupDebugLevel
		p	1		properties
	m	(Lhq;)Ljava/util/Optional;	a	lambda$setInitialSpawn$4
		p	0		featureRegistry
	m	(Lhr$b;Lcom/google/common/collect/ImmutableList;)Ljava/util/concurrent/CompletionStage;	a	lambda$reloadResources$25
		p	2		resourcePacks
	m	(Ljava/lang/Runnable;)Lafp;	a	wrapRunnable
	m	(Ljava/lang/Thread;Ljava/lang/Throwable;)V	a	lambda$spin$3
		p	0		thread
		p	1		throwable
	m	(Ljava/lang/Throwable;)Lo;	a	constructOrExtractCrashReport
		p	0		throwable
	m	(Ljava/nio/file/Path;)V	a	dumpServerProperties
		p	1		file
	m	(Ljava/util/Collection;)Ljava/util/concurrent/CompletableFuture;	a	reloadResources
		p	1		dataPacks
	m	(Ljava/util/Collection;Ljava/lang/String;)Z	a	lambda$getSelectedPacks$27
		p	1		name
	m	(Ljava/util/Collection;Lnet/minecraft/server/MinecraftServer$a;)V	a	lambda$reloadResources$26
		p	2		resourceManagerHolder
	m	(Ljava/util/concurrent/atomic/AtomicReference;)V	a	lambda$spin$2
	m	(Ljava/util/function/BooleanSupplier;)V	a	tickServer
		p	1		shouldKeepTicking
	m	(Ljava/util/function/Consumer;Lbdo;)V	a	lambda$startRecordingMetrics$31
		p	2		result
	m	(Ljava/util/function/Consumer;Ljava/util/function/Consumer;)V	a	startRecordingMetrics
		p	1		resultConsumer
		p	2		dumpConsumer
	m	(Ljava/util/function/Function;)Lnet/minecraft/server/MinecraftServer;	a	spin
		p	0		serverFactory
	m	(Lo;)V	a	onServerCrash
		p	1		report
	m	(Ltl;)V	a	sendSystemMessage
		p	1		message
	m	(Ltl;Lth$a;Ljava/lang/String;)V	a	logChatMessage
		p	1		message
		p	2		params
		p	3		prefix
	m	(Z)V	a	halt
		p	1		waitForShutdown
	m	(ZZZ)Z	a	saveAllChunks
		p	1		suppressLogs
		p	2		flush
		p	3		force
	m	()Lafk;	aA	getFunctions
	m	()Lane;	aB	getPackRepository
	m	()Ldu;	aC	getCommands
	m	()Ldt;	aD	createCommandSourceStack
	m	()Lcml;	aE	getRecipeManager
	m	()Lafn;	aF	getScoreboard
	m	()Lebz;	aG	getCommandStorage
	m	()Lect;	aH	getLootData
	m	()Lcpr;	aI	getGameRules
	m	()Lafv;	aJ	getCustomBossEvents
	m	()Z	aK	isEnforceWhitelist
	m	()F	aL	getAverageTickTime
	m	()Lbdp;	aM	getProfiler
	m	()Z	aN	isRecordingMetrics
	m	()V	aO	stopRecordingMetrics
	m	()V	aP	finishRecordingMetrics
	m	()V	aQ	cancelRecordingMetrics
	m	()Z	aR	forceSynchronousWrites
	m	()Ldzc;	aS	getStructureManager
	m	()Lecm;	aT	getWorldData
	m	()Lhr$b;	aU	registryAccess
	m	()Lhl;	aV	registries
	m	()Lcps;	aW	getForcedGameType
	m	()Lant;	aX	getResourceManager
	m	()Z	aY	isCurrentlySaving
	m	()Z	aZ	isTimeProfilerRunning
	m	(Ljava/lang/String;)V	a_	setLocalIp
		p	1		serverIp
	m	()Ljava/lang/String;	aa	getMotd
	m	()Z	ab	isStopped
	m	()Laog;	ac	getPlayerList
	m	()Lalo;	ad	getConnection
	m	()Z	ae	isReady
	m	()Z	af	hasGui
	m	()I	ag	getTickCount
	m	()I	ah	getSpawnProtectionRadius
	m	()Z	ai	repliesToStatus
	m	()Z	aj	hidesOnlinePlayers
	m	()Ljava/net/Proxy;	ak	getProxy
	m	()I	al	getPlayerIdleTimeout
	m	()Lcom/mojang/authlib/minecraft/MinecraftSessionService;	am	getSessionService
	m	()Lash;	an	getProfileKeySignatureValidator
	m	()Lcom/mojang/authlib/GameProfileRepository;	ao	getProfileRepository
	m	()Laoc;	ap	getProfileCache
	m	()Ladz;	aq	getStatus
	m	()V	ar	invalidateStatus
	m	()I	as	getAbsoluteMaxWorldSize
	m	()Z	at	scheduleExecutables
	m	()Ljava/lang/Thread;	au	getRunningThread
	m	()I	av	getCompressionThreshold
	m	()Z	aw	enforceSecureProfile
	m	()J	ax	getNextTickTime
	m	()Lcom/mojang/datafixers/DataFixer;	ay	getFixerUpper
	m	()Lafi;	az	getAdvancements
	m	(I)I	b	getScaledTrackingDistance
		p	1		initialDistance
	m	(Lab;)Lab;	b	fillSystemReport
		p	1		details
	m	(Lafp;)V	b	doRunTask
	m	(Lakq;)V	b	synchronizeTime
		p	1		world
	m	(Lakr;)Laks;	b	createGameModeForPlayer
		p	1		player
	m	(Lakz;)V	b	prepareLevels
		p	1		worldGenerationProgressListener
	m	(Lcom/mojang/authlib/GameProfile;)V	b	setSingleplayerProfile
		p	1		hostProfile
	m	(Ljava/lang/Runnable;)V	b	addTickable
		p	1		tickable
	m	(Ljava/lang/String;)V	b	setId
		p	1		serverId
	m	(Ljava/nio/file/Path;)V	b	saveDebugReport
		p	1		path
	m	(Ljava/util/Collection;)Lcom/google/common/collect/ImmutableList;	b	lambda$reloadResources$22
	m	(Ljava/util/function/BooleanSupplier;)V	b	tickChildren
		p	1		shouldKeepTicking
	m	(Z)V	b	setDifficultyLocked
		p	1		locked
	m	(ZZZ)Z	b	saveEverything
		p	1		suppressLogs
		p	2		flush
		p	3		force
	m	()Ljava/lang/String;	bA	lambda$fillSystemReport$15
	m	()Ljava/util/Optional;	bB	lambda$loadStatusIcon$11
	m	()Z	bC	lambda$waitUntilNextTick$8
	m	()Z	bD	lambda$stopServer$7
	m	()V	ba	startTimeProfiler
	m	()Lbdo;	bb	stopTimeProfiler
	m	()I	bc	getMaxChainedNeighborUpdates
	m	()Ltg;	bd	getChatDecorator
	m	()Z	be	logIPs
	m	()Z	bf	haveTime
	m	()Z	bg	pollTaskInternal
	m	()Ljava/util/Optional;	bh	loadStatusIcon
	m	()Ladz;	bi	buildServerStatus
	m	()Ladz$b;	bj	buildPlayerStatus
	m	()V	bs	updateMobSpawningFlags
	m	()V	bt	startMetricsRecordingTick
	m	()V	bu	endMetricsRecordingTick
	m	()Ljava/lang/String;	bv	lambda$fillSystemReport$21
	m	()Ljava/lang/String;	bw	lambda$fillSystemReport$20
	m	()Ljava/lang/String;	bx	lambda$fillSystemReport$19
	m	()Ljava/lang/String;	by	lambda$fillSystemReport$18
	m	()Ljava/lang/String;	bz	lambda$fillSystemReport$16
	m	(I)V	c	setPlayerIdleTimeout
		p	1		playerIdleTimeout
	m	(Lakq;)Ljava/lang/String;	c	lambda$tickChildren$14
	m	(Lakr;)V	c	sendDifficultyUpdate
		p	1		player
	m	(Lcom/mojang/authlib/GameProfile;)I	c	getProfilePermissions
		p	1		profile
	m	(Ljava/lang/Runnable;)V	c	executeIfPossible
		p	1		runnable
	m	(Ljava/lang/String;)Ljava/io/File;	c	getFile
		p	1		path
	m	(Ljava/nio/file/Path;)V	c	dumpMiscStats
		p	1		path
	m	(Z)V	c	setDemo
		p	1		demo
	m	(Lakq;)Z	d	lambda$stopServer$6
		p	0		world
	m	(Lakr;)V	d	lambda$tickChildren$13
	m	(Ljava/lang/Runnable;)V	d	doRunTask
		p	1		task
	m	(Ljava/lang/String;)V	d	setMotd
		p	1		motd
	m	(Ljava/nio/file/Path;)V	d	dumpGameRules
		p	1		path
	m	(Z)V	d	setUsesAuthentication
		p	1		onlineMode
	m	()Z	e	initServer
	m	(Ljava/lang/Runnable;)Z	e	shouldRun
		p	1		task
	m	(Ljava/nio/file/Path;)V	e	dumpClasspath
		p	1		path
	m	(Z)V	e	setPreventProxyConnections
		p	1		preventProxyConnections
	m	(Ljava/lang/Runnable;)Ljava/lang/Runnable;	f	wrapRunnable
		p	1		runnable
	m	(Ljava/nio/file/Path;)V	f	dumpThreads
		p	1		path
	m	(Z)V	f	setPvpAllowed
		p	1		pvpEnabled
	m	()V	g	onServerExit
	m	(Ljava/nio/file/Path;)V	g	dumpNativeModules
		p	1		path
	m	(Z)V	g	setFlightAllowed
		p	1		flightEnabled
	m	()Z	h	isHardcore
	m	(Ljava/nio/file/Path;)V	h	lambda$startMetricsRecordingTick$30
		p	1		path
	m	(Z)V	h	setEnforceWhitelist
		p	1		enforceWhitelist
	m	()I	i	getOperatorUserPermissionLevel
	m	(Ljava/nio/file/Path;)V	i	lambda$startMetricsRecordingTick$29
	m	()I	j	getFunctionCompilationLevel
	m	(Ljava/nio/file/Path;)Ljava/util/Optional;	j	lambda$loadStatusIcon$12
		p	0		path
	m	()Z	j_	acceptsSuccess
	m	()Z	k	shouldRconBroadcast
	m	(Ljava/nio/file/Path;)Z	k	lambda$loadStatusIcon$10
		p	0		path
	m	()Z	l	isDedicatedServer
	m	(Ljava/nio/file/Path;)Z	l	lambda$loadStatusIcon$9
		p	0		path
	m	()I	m	getRateLimitPacketsPerSecond
	m	(Ljava/nio/file/Path;)V	m	lambda$new$1
		p	0		path
	m	()Z	n	isEpollEnabled
	m	()Z	o	isCommandBlockEnabled
	m	()Z	p	isPublished
	m	()V	r	forceDifficulty
	m	()V	s_	loadLevel
	m	()V	t	stopServer
	m	()Lcps;	t_	getDefaultGameType
	m	()Ljava/lang/String;	u	getLocalIp
	m	()V	u_	waitUntilNextTick
	m	()Z	v	isRunning
	m	()Z	v_	acceptsFailure
	m	()V	w	runServer
	m	()Z	x	pollTask
	m	()Ljava/util/Optional;	y	getWorldScreenshotFile
	m	()Ljava/io/File;	z	getServerDirectory
	f	Lbdp;	A	profiler
	f	Ljava/util/function/Consumer;	B	onMetricsRecordingStopped
	f	Ljava/util/function/Consumer;	C	onMetricsRecordingFinished
	f	Z	D	willStartRecordingMetrics
	f	Lnet/minecraft/server/MinecraftServer$c;	E	debugCommandProfiler
	f	Z	F	debugCommandProfilerDelayStart
	f	Lalo;	G	connection
	f	Lala;	H	progressListenerFactory
	f	Ladz;	I	status
	f	Ladz$a;	J	statusIcon
	f	Lasc;	K	random
	f	Lcom/mojang/datafixers/DataFixer;	L	fixerUpper
	f	Ljava/lang/String;	M	localIp
	f	I	N	port
	f	Lhl;	O	registries
	f	Ljava/util/Map;	P	levels
	f	Laog;	Q	playerList
	f	Z	R	running
	f	Z	S	stopped
	f	I	T	tickCount
	f	Z	U	onlineMode
	f	Z	V	preventProxyConnections
	f	Z	W	pvp
	f	Z	X	allowFlight
	f	Ljava/lang/String;	Y	motd
	f	I	Z	playerIdleTimeout
	f	Ljava/security/KeyPair;	aa	keyPair
	f	Lcom/mojang/authlib/GameProfile;	ab	singleplayerProfile
	f	Z	ac	isDemo
	f	Z	ad	isReady
	f	J	ae	lastOverloadWarning
	f	J	af	lastServerStatus
	f	Ljava/lang/Thread;	ag	serverThread
	f	J	ah	nextTickTime
	f	J	ai	delayedTasksMaxNextTickTime
	f	Z	aj	mayHaveDelayedTasks
	f	Lane;	ak	packRepository
	f	Lafn;	al	scoreboard
	f	Lebz;	am	commandStorage
	f	Lafv;	an	customBossEvents
	f	Lafk;	ao	functionManager
	f	Z	ap	enforceWhitelist
	f	F	aq	averageTickTime
	f	Ljava/util/concurrent/Executor;	ar	executor
	f	Ljava/lang/String;	as	serverId
	f	Lnet/minecraft/server/MinecraftServer$a;	at	resources
	f	Ldzc;	au	structureTemplateManager
	f	Z	av	isSaving
	f	Ljava/lang/String;	b	VANILLA_BRAND
	f	I	c	MS_PER_TICK
	f	I	d	START_CHUNK_RADIUS
	f	I	e	ABSOLUTE_MAX_WORLD_SIZE
	f	Lcpz;	f	DEMO_SETTINGS
	f	Lcom/mojang/authlib/GameProfile;	g	ANONYMOUS_PLAYER_PROFILE
	f	Lecg$c;	h	storageSource
	f	Lecj;	i	playerDataStorage
	f	Ljava/net/Proxy;	j	proxy
	f	[J	k	tickTimes
	f	Lafo;	l	services
	f	Lecm;	m	worldData
	f	Lorg/slf4j/Logger;	n	LOGGER
	f	F	o	AVERAGE_TICK_TIME_SMOOTHING
	f	I	p	TICK_STATS_SPAN
	f	I	q	OVERLOADED_THRESHOLD
	f	I	r	OVERLOADED_WARNING_INTERVAL
	f	J	s	STATUS_EXPIRE_TIME_NS
	f	I	t	MAX_STATUS_PLAYER_SAMPLE
	f	I	u	START_TICKING_CHUNK_COUNT
	f	I	v	AUTOSAVE_INTERVAL
	f	I	w	MAX_TICK_LATENCY
	f	J	x	DELAYED_TASKS_TICK_EXTENSION
	f	Ljava/util/List;	y	tickables
	f	Lbfa;	z	metricsRecorder
c	net/minecraft/server/MinecraftServer$1	net/minecraft/server/MinecraftServer$1
	m	(Lcpr$e;Lcpr$f;)V	a	visit
		p	1		key
		p	2		type
	f	Ljava/util/List;	a	val$entries
	f	Lcpr;	b	val$gameRules
	f	Lnet/minecraft/server/MinecraftServer;	c	this$0
c	net/minecraft/server/MinecraftServer$a	net/minecraft/server/MinecraftServer$ReloadableResources
	m	()Lanj;	a	resourceManager
	m	()Lafg;	b	managers
	f	Lanj;	a	resourceManager
	f	Lafg;	b	managers
c	net/minecraft/server/MinecraftServer$b	net/minecraft/server/MinecraftServer$ServerResourcePackInfo
	m	()Ljava/lang/String;	a	url
	m	()Ljava/lang/String;	b	hash
	m	()Z	c	isRequired
	m	()Ltl;	d	prompt
	f	Ljava/lang/String;	a	url
	f	Ljava/lang/String;	b	hash
	f	Z	c	isRequired
	f	Ltl;	d	prompt
c	net/minecraft/server/MinecraftServer$c	net/minecraft/server/MinecraftServer$TimeProfiler
	m	(JI)V	<init>	<init>
		p	1		time
		p	3		tick
	m	(JI)Lbdo;	a	stop
		p	1		endTime
		p	3		endTick
	f	J	a	startNanos
	f	I	b	startTick
c	net/minecraft/server/MinecraftServer$c$1	net/minecraft/server/MinecraftServer$TimeProfiler$1
	m	()J	a	getStartTimeNano
	m	(Ljava/lang/String;)Ljava/util/List;	a	getTimes
		p	1		parentPath
	m	(Ljava/nio/file/Path;)Z	a	saveResults
		p	1		path
	m	()I	b	getStartTimeTicks
	m	()J	c	getEndTimeNano
	m	()I	d	getEndTimeTicks
	m	()Ljava/lang/String;	e	getProfilerResults
	f	J	a	val$stopNanos
	f	I	b	val$stopTick
	f	Lnet/minecraft/server/MinecraftServer$c;	c	this$0
c	net/minecraft/util/profiling/jfr/event/PacketSentEvent	net/minecraft/util/profiling/jfr/event/PacketSentEvent
	m	(Ljava/lang/String;ILjava/net/SocketAddress;I)V	<init>	<init>
		p	1		protocolId
		p	2		packetId
		p	3		remoteAddress
		p	4		bytes
c	net/minecraft/util/profiling/jfr/event/NetworkSummaryEvent	net/minecraft/util/profiling/jfr/event/NetworkSummaryEvent
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		remoteAddress
c	net/minecraft/util/profiling/jfr/event/NetworkSummaryEvent$a	net/minecraft/util/profiling/jfr/event/NetworkSummaryEvent$Fields
	f	Ljava/lang/String;	a	REMOTE_ADDRESS
	f	Ljava/lang/String;	b	SENT_BYTES
	f	Ljava/lang/String;	c	RECEIVED_BYTES
	f	Ljava/lang/String;	d	SENT_PACKETS
	f	Ljava/lang/String;	e	RECEIVED_PACKETS
c	net/minecraft/util/profiling/jfr/event/NetworkSummaryEvent$b	net/minecraft/util/profiling/jfr/event/NetworkSummaryEvent$SumAggregation
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		remoteAddress
	m	()V	a	commitEvent
	m	(I)V	a	trackSentPacket
		p	1		bytes
	m	(I)V	b	trackReceivedPacket
		p	1		bytes
	f	Ljava/util/concurrent/atomic/AtomicLong;	a	sentBytes
	f	Ljava/util/concurrent/atomic/AtomicInteger;	b	sentPackets
	f	Ljava/util/concurrent/atomic/AtomicLong;	c	receivedBytes
	f	Ljava/util/concurrent/atomic/AtomicInteger;	d	receivedPackets
	f	Lnet/minecraft/util/profiling/jfr/event/NetworkSummaryEvent;	e	event
c	net/minecraft/util/profiling/jfr/event/PacketReceivedEvent	net/minecraft/util/profiling/jfr/event/PacketReceivedEvent
	m	(Ljava/lang/String;ILjava/net/SocketAddress;I)V	<init>	<init>
		p	1		protocolId
		p	2		packetId
		p	3		remoteAddress
		p	4		bytes
c	net/minecraft/util/profiling/jfr/event/ServerTickTimeEvent	net/minecraft/util/profiling/jfr/event/ServerTickTimeEvent
	m	(F)V	<init>	<init>
		p	1		averageTickMilliseconds
c	net/minecraft/util/profiling/jfr/event/ServerTickTimeEvent$a	net/minecraft/util/profiling/jfr/event/ServerTickTimeEvent$Fields
	f	Ljava/lang/String;	a	AVERAGE_TICK_DURATION
c	net/minecraft/util/profiling/jfr/event/ChunkGenerationEvent	net/minecraft/util/profiling/jfr/event/ChunkGenerationEvent
	m	(Lcpc;Laev;Ljava/lang/String;)V	<init>	<init>
		p	1		chunkPos
		p	2		world
		p	3		targetStatus
c	net/minecraft/util/profiling/jfr/event/ChunkGenerationEvent$a	net/minecraft/util/profiling/jfr/event/ChunkGenerationEvent$Fields
	f	Ljava/lang/String;	a	WORLD_POS_X
	f	Ljava/lang/String;	b	WORLD_POS_Z
	f	Ljava/lang/String;	c	CHUNK_POS_X
	f	Ljava/lang/String;	d	CHUNK_POS_Z
	f	Ljava/lang/String;	e	STATUS
	f	Ljava/lang/String;	f	LEVEL
